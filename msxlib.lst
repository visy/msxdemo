                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Thu Feb 22 22:38:51 2018
                              5 ;--------------------------------------------------------
                              6 	.module msxlib
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ispressed
                             13 	.globl _screen
                             14 	.globl _vdp_address
                             15 	.globl _vdp_poke
                             16 	.globl _vdp_peek
                             17 	.globl _vdp_set
                             18 	.globl _vdp_slowset
                             19 	.globl _vdp_copy
                             20 	.globl _vdp_slowcopy
                             21 	.globl _vdp_bigcopy
                             22 	.globl _vdp_register
                             23 	.globl _msx2_sethz
                             24 	.globl _vdp_status
                             25 	.globl _vdp2_status
                             26 	.globl _sprite_col
                             27 	.globl _sprite_pos
                             28 	.globl _sprite_pat
                             29 	.globl _msx2_palette
                             30 	.globl _joy_status
                             31 	.globl _mouse_status
                             32 	.globl _isvdp2
                             33 	.globl _spindown
                             34 	.globl _random
                             35 ;--------------------------------------------------------
                             36 ; special function registers
                             37 ;--------------------------------------------------------
                    0098     38 _vdp1	=	0x0098
                    0099     39 _vdp2	=	0x0099
                    009A     40 _vdp3	=	0x009a
                    00A9     41 _kbd1	=	0x00a9
                    00AA     42 _kbd2	=	0x00aa
                    00A0     43 _psgsel	=	0x00a0
                    00A1     44 _psgw	=	0x00a1
                    00A2     45 _psgr	=	0x00a2
                             46 ;--------------------------------------------------------
                             47 ;  ram data
                             48 ;--------------------------------------------------------
                             49 	.area _DATA
   0000                      50 _retvalli:
   0000                      51 	.ds 1
   0001                      52 _randomseed:
   0001                      53 	.ds 2
                             54 ;--------------------------------------------------------
                             55 ; overlayable items in  ram 
                             56 ;--------------------------------------------------------
                             57 	.area _OVERLAY
                             58 ;--------------------------------------------------------
                             59 ; external initialized ram data
                             60 ;--------------------------------------------------------
                             61 ;--------------------------------------------------------
                             62 ; global & static initialisations
                             63 ;--------------------------------------------------------
                             64 	.area _HOME
                             65 	.area _GSINIT
                             66 	.area _GSFINAL
                             67 	.area _GSINIT
                             68 ;msxlib.c:576: static unsigned randomseed=0x83cd;
   0000 FD 21r01s00          69 	ld	iy,#_randomseed
   0004 FD 36 00 CD          70 	ld	0 (iy),#0xCD
   0008 FD 21r01s00          71 	ld	iy,#_randomseed
   000C FD 36 01 83          72 	ld	1 (iy),#0x83
                             73 ;--------------------------------------------------------
                             74 ; Home
                             75 ;--------------------------------------------------------
                             76 	.area _HOME
                             77 	.area _HOME
                             78 ;--------------------------------------------------------
                             79 ; code
                             80 ;--------------------------------------------------------
                             81 	.area _CODE
                             82 ;msxlib.c:17: char ispressed(unsigned char line,unsigned char bitti)
                             83 ;	---------------------------------
                             84 ; Function ispressed
                             85 ; ---------------------------------
   0000                      86 _ispressed_start::
   0000                      87 _ispressed:
   0000 DD E5                88 	push	ix
   0002 DD 21 00 00          89 	ld	ix,#0
   0006 DD 39                90 	add	ix,sp
                             91 ;msxlib.c:20: c=(kbd2&0xf0)|line;
   0008 DB AA                92 	in	a,(_kbd2)
   000A E6 F0                93 	and	a,#0xF0
   000C DD B6 04             94 	or	a,4 (ix)
                             95 ;msxlib.c:21: kbd2=c;
   000F 4F                   96 	ld	c,a
   0010 D3 AA                97 	out	(_kbd2),a
                             98 ;msxlib.c:22: c=kbd1&bitti;
   0012 DB A9                99 	in	a,(_kbd1)
   0014 DD A6 05            100 	and	a,5 (ix)
   0017 47                  101 	ld	b,a
   0018 48                  102 	ld	c,b
                            103 ;msxlib.c:24: if(c==0)
   0019 AF                  104 	xor	a,a
   001A B1                  105 	or	a,c
   001B 20 04               106 	jr	NZ,00102$
                            107 ;msxlib.c:25: return(1);
   001D 2E 01               108 	ld	l,#0x01
   001F 18 02               109 	jr	00104$
   0021                     110 00102$:
                            111 ;msxlib.c:27: return(0);
   0021 2E 00               112 	ld	l,#0x00
   0023                     113 00104$:
   0023 DD E1               114 	pop	ix
   0025 C9                  115 	ret
   0026                     116 _ispressed_end::
                            117 ;msxlib.c:30: void screen(char mode)
                            118 ;	---------------------------------
                            119 ; Function screen
                            120 ; ---------------------------------
   0026                     121 _screen_start::
   0026                     122 _screen:
   0026 DD E5               123 	push	ix
   0028 DD 21 00 00         124 	ld	ix,#0
   002C DD 39               125 	add	ix,sp
                            126 ;msxlib.c:49: __endasm;
                            127 	
   002E FD E5               128 		   push iy
   0030 C5                  129 		   push bc
   0031 D5                  130 		   push de
   0032 E5                  131 		   push hl
                            132 	
   0033 DD 7E 04            133 		   ld a,4(ix)
   0036 32 AF FC            134 		   ld (0xfcaf),a
   0039 DD 21 5F 00         135 		   ld ix,#0x5f
   003D FD 2A C0 FC         136 		   ld iy,(0xfcc0)
   0041 CD 1C 00            137 		   call 0x1c
                            138 	
   0044 E1                  139 		   pop hl
   0045 D1                  140 		   pop de
   0046 C1                  141 		   pop bc
   0047 FD E1               142 		   pop iy
                            143 		   
   0049 DD E1               144 	pop	ix
   004B C9                  145 	ret
   004C                     146 _screen_end::
                            147 ;msxlib.c:52: void vdp_address(unsigned addr)
                            148 ;	---------------------------------
                            149 ; Function vdp_address
                            150 ; ---------------------------------
   004C                     151 _vdp_address_start::
   004C                     152 _vdp_address:
   004C DD E5               153 	push	ix
   004E DD 21 00 00         154 	ld	ix,#0
   0052 DD 39               155 	add	ix,sp
                            156 ;msxlib.c:54: vdp2=addr;
   0054 DD 7E 04            157 	ld	a,4 (ix)
   0057 D3 99               158 	out	(_vdp2),a
                            159 ;msxlib.c:55: vdp2=(addr>>8)|0x40;
   0059 DD 4E 05            160 	ld	c,5 (ix)
   005C 06 00               161 	ld	b,#0x00
   005E 79                  162 	ld	a,c
   005F F6 40               163 	or	a,#0x40
   0061 4F                  164 	ld	c,a
   0062 D3 99               165 	out	(_vdp2),a
   0064 DD E1               166 	pop	ix
   0066 C9                  167 	ret
   0067                     168 _vdp_address_end::
                            169 ;msxlib.c:58: void vdp_poke(unsigned addr,unsigned char c)
                            170 ;	---------------------------------
                            171 ; Function vdp_poke
                            172 ; ---------------------------------
   0067                     173 _vdp_poke_start::
   0067                     174 _vdp_poke:
   0067 DD E5               175 	push	ix
   0069 DD 21 00 00         176 	ld	ix,#0
   006D DD 39               177 	add	ix,sp
                            178 ;msxlib.c:60: vdp2=addr;
   006F DD 7E 04            179 	ld	a,4 (ix)
   0072 D3 99               180 	out	(_vdp2),a
                            181 ;msxlib.c:61: vdp2=(addr>>8)|0x40;
   0074 DD 4E 05            182 	ld	c,5 (ix)
   0077 06 00               183 	ld	b,#0x00
   0079 79                  184 	ld	a,c
   007A F6 40               185 	or	a,#0x40
   007C 4F                  186 	ld	c,a
   007D D3 99               187 	out	(_vdp2),a
                            188 ;msxlib.c:62: vdp1=c;
   007F DD 7E 06            189 	ld	a,6 (ix)
   0082 D3 98               190 	out	(_vdp1),a
   0084 DD E1               191 	pop	ix
   0086 C9                  192 	ret
   0087                     193 _vdp_poke_end::
                            194 ;msxlib.c:65: unsigned char vdp_peek(unsigned addr)
                            195 ;	---------------------------------
                            196 ; Function vdp_peek
                            197 ; ---------------------------------
   0087                     198 _vdp_peek_start::
   0087                     199 _vdp_peek:
   0087 DD E5               200 	push	ix
   0089 DD 21 00 00         201 	ld	ix,#0
   008D DD 39               202 	add	ix,sp
                            203 ;msxlib.c:67: vdp2=addr;
   008F DD 7E 04            204 	ld	a,4 (ix)
   0092 D3 99               205 	out	(_vdp2),a
                            206 ;msxlib.c:68: vdp2=addr>>8;
   0094 DD 4E 05            207 	ld	c,5 (ix)
   0097 06 00               208 	ld	b,#0x00
   0099 79                  209 	ld	a,c
   009A D3 99               210 	out	(_vdp2),a
                            211 ;msxlib.c:69: return(vdp1);
   009C DB 98               212 	in	a,(_vdp1)
   009E 6F                  213 	ld	l,a
   009F DD E1               214 	pop	ix
   00A1 C9                  215 	ret
   00A2                     216 _vdp_peek_end::
                            217 ;msxlib.c:72: void vdp_set(unsigned char c,unsigned bytes)
                            218 ;	---------------------------------
                            219 ; Function vdp_set
                            220 ; ---------------------------------
   00A2                     221 _vdp_set_start::
   00A2                     222 _vdp_set:
   00A2 DD E5               223 	push	ix
   00A4 DD 21 00 00         224 	ld	ix,#0
   00A8 DD 39               225 	add	ix,sp
                            226 ;msxlib.c:133: __endasm;
                            227 	
   00AA D5                  228 		   push de
   00AB C5                  229 		   push bc
                            230 	
   00AC DD 56 04            231 		   ld d,4(ix) ; Parametrit
   00AF DD 4E 05            232 		   ld c,5(ix)
   00B2 DD 46 06            233 		   ld b,6(ix)
   00B5 C5                  234 		   push bc
                            235 	
   00B6 CB 38               236 		   srl b ; BC/8
   00B8 CB 19               237 		   rr c
   00BA CB 38               238 		   srl b
   00BC CB 19               239 		   rr c
   00BE CB 38               240 		   srl b
   00C0 CB 19               241 		   rr c
   00C2 78                  242 		   ld a,b
   00C3 B1                  243 		   or c
   00C4 CArE5s00            244 		   jp z,1$
                            245 	
                            246 ; NOPs needed due to MSX2 :(((
   00C7                     247 	0$:
   00C7 7A                  248 		   ld a,d
   00C8 D3 98               249 		   out (0x98),a
   00CA 00                  250 		   nop
   00CB D3 98               251 		   out (0x98),a
   00CD 00                  252 		   nop
   00CE D3 98               253 		   out (0x98),a
   00D0 00                  254 		   nop
   00D1 D3 98               255 		   out (0x98),a
   00D3 00                  256 		   nop
   00D4 D3 98               257 		   out (0x98),a
   00D6 00                  258 		   nop
   00D7 D3 98               259 		   out (0x98),a
   00D9 00                  260 		   nop
   00DA D3 98               261 		   out (0x98),a
   00DC 00                  262 		   nop
   00DD D3 98               263 		   out (0x98),a
   00DF 0B                  264 		   dec bc
   00E0 78                  265 		   ld a,b
   00E1 B1                  266 		   or c
   00E2 C2rC7s00            267 		   jp nz,0$
                            268 	
   00E5                     269 	1$:
   00E5 C1                  270 		   pop bc ; The modulo part
   00E6 79                  271 		   ld a,c
   00E7 E6 07               272 		   and #7
   00E9 CArF4s00            273 		   jp z,2$
                            274 	
   00EC 4F                  275 		   ld c,a
   00ED 7A                  276 		   ld a,d
   00EE                     277 	3$:
   00EE D3 98               278 		   out (0x98),a
   00F0 0D                  279 		   dec c
   00F1 C2rEEs00            280 		   jp nz,3$
                            281 	
   00F4                     282 	2$:
   00F4 C1                  283 		   pop bc
   00F5 D1                  284 		   pop de
                            285 		   
   00F6 DD E1               286 	pop	ix
   00F8 C9                  287 	ret
   00F9                     288 _vdp_set_end::
                            289 ;msxlib.c:136: void vdp_slowset(unsigned char c,unsigned bytes)
                            290 ;	---------------------------------
                            291 ; Function vdp_slowset
                            292 ; ---------------------------------
   00F9                     293 _vdp_slowset_start::
   00F9                     294 _vdp_slowset:
   00F9 DD E5               295 	push	ix
   00FB DD 21 00 00         296 	ld	ix,#0
   00FF DD 39               297 	add	ix,sp
                            298 ;msxlib.c:220: __endasm;
                            299 	
   0101 D5                  300 		   push de
   0102 C5                  301 		   push bc
                            302 	
   0103 DD 56 04            303 		   ld d,4(ix) ; Parametrit
   0106 DD 4E 05            304 		   ld c,5(ix)
   0109 DD 46 06            305 		   ld b,6(ix)
   010C C5                  306 		   push bc
                            307 	
   010D CB 38               308 		   srl b ; BC/8
   010F CB 19               309 		   rr c
   0111 CB 38               310 		   srl b
   0113 CB 19               311 		   rr c
   0115 CB 38               312 		   srl b
   0117 CB 19               313 		   rr c
   0119 78                  314 		   ld a,b
   011A B1                  315 		   or c
   011B CAr51s01            316 		   jp z,1$
                            317 	
   011E                     318 	0$:
   011E 7A                  319 		   ld a,d
   011F D3 98               320 		   out (0x98),a
   0121 00                  321 		   nop
   0122 00                  322 		   nop
   0123 00                  323 		   nop
   0124 00                  324 		   nop
   0125 D3 98               325 		   out (0x98),a
   0127 00                  326 		   nop
   0128 00                  327 		   nop
   0129 00                  328 		   nop
   012A 00                  329 		   nop
   012B D3 98               330 		   out (0x98),a
   012D 00                  331 		   nop
   012E 00                  332 		   nop
   012F 00                  333 		   nop
   0130 00                  334 		   nop
   0131 D3 98               335 		   out (0x98),a
   0133 00                  336 		   nop
   0134 00                  337 		   nop
   0135 00                  338 		   nop
   0136 00                  339 		   nop
   0137 D3 98               340 		   out (0x98),a
   0139 00                  341 		   nop
   013A 00                  342 		   nop
   013B 00                  343 		   nop
   013C 00                  344 		   nop
   013D D3 98               345 		   out (0x98),a
   013F 00                  346 		   nop
   0140 00                  347 		   nop
   0141 00                  348 		   nop
   0142 00                  349 		   nop
   0143 D3 98               350 		   out (0x98),a
   0145 00                  351 		   nop
   0146 00                  352 		   nop
   0147 00                  353 		   nop
   0148 00                  354 		   nop
   0149 D3 98               355 		   out (0x98),a
   014B 0B                  356 		   dec bc
   014C 78                  357 		   ld a,b
   014D B1                  358 		   or c
   014E C2r1Es01            359 		   jp nz,0$
                            360 	
   0151                     361 	1$:
   0151 C1                  362 		   pop bc ; The modulo part
   0152 79                  363 		   ld a,c
   0153 E6 07               364 		   and #7
   0155 CAr63s01            365 		   jp z,2$
                            366 	
   0158 4F                  367 		   ld c,a
   0159 7A                  368 		   ld a,d
   015A                     369 	3$:
   015A D3 98               370 		   out (0x98),a
   015C 00                  371 		   nop
   015D 00                  372 		   nop
   015E 00                  373 		   nop
   015F 0D                  374 		   dec c
   0160 C2r5As01            375 		   jp nz,3$
                            376 	
   0163                     377 	2$:
   0163 C1                  378 		   pop bc
   0164 D1                  379 		   pop de
                            380 		   
   0165 DD E1               381 	pop	ix
   0167 C9                  382 	ret
   0168                     383 _vdp_slowset_end::
                            384 ;msxlib.c:223: void vdp_copy(unsigned char *src,unsigned bytes)
                            385 ;	---------------------------------
                            386 ; Function vdp_copy
                            387 ; ---------------------------------
   0168                     388 _vdp_copy_start::
   0168                     389 _vdp_copy:
   0168 DD E5               390 	push	ix
   016A DD 21 00 00         391 	ld	ix,#0
   016E DD 39               392 	add	ix,sp
                            393 ;msxlib.c:275: __endasm;
                            394 	
   0170 D5                  395 		   push de
   0171 E5                  396 		   push hl
   0172 C5                  397 		   push bc
                            398 	
   0173 DD 6E 04            399 		   ld l,4(ix) ; Parametrit
   0176 DD 66 05            400 		   ld h,5(ix)
   0179 DD 5E 06            401 		   ld e,6(ix)
   017C DD 56 07            402 		   ld d,7(ix)
   017F D5                  403 		   push de
   0180 0E 98               404 		   ld c,#0x98
                            405 	
   0182 CB 3A               406 		   srl d ; DE/8
   0184 CB 1B               407 		   rr e
   0186 CB 3A               408 		   srl d
   0188 CB 1B               409 		   rr e
   018A CB 3A               410 		   srl d
   018C CB 1B               411 		   rr e
   018E 7A                  412 		   ld a,d
   018F B3                  413 		   or e
   0190 CArA9s01            414 		   jp z,1$
                            415 	
   0193                     416 	0$:
   0193 ED A3               417 		   outi
   0195 ED A3               418 		   outi
   0197 ED A3               419 		   outi
   0199 ED A3               420 		   outi
   019B ED A3               421 		   outi
   019D ED A3               422 		   outi
   019F ED A3               423 		   outi
   01A1 ED A3               424 		   outi
   01A3 1B                  425 		   dec de
   01A4 7A                  426 		   ld a,d
   01A5 B3                  427 		   or e
   01A6 C2r93s01            428 		   jp nz,0$
                            429 	
   01A9                     430 	1$:
   01A9 D1                  431 		   pop de ; The modulo part
   01AA 7B                  432 		   ld a,e
   01AB E6 07               433 		   and #7
   01AD CArB3s01            434 		   jp z,2$
                            435 	
   01B0 47                  436 		   ld b,a
   01B1 ED B3               437 		   otir
                            438 	
   01B3                     439 	2$:
   01B3 C1                  440 		   pop bc
   01B4 E1                  441 		   pop hl
   01B5 D1                  442 		   pop de
                            443 		   
   01B6 DD E1               444 	pop	ix
   01B8 C9                  445 	ret
   01B9                     446 _vdp_copy_end::
                            447 ;msxlib.c:278: void vdp_slowcopy(unsigned char *src,unsigned bytes)
                            448 ;	---------------------------------
                            449 ; Function vdp_slowcopy
                            450 ; ---------------------------------
   01B9                     451 _vdp_slowcopy_start::
   01B9                     452 _vdp_slowcopy:
   01B9 DD E5               453 	push	ix
   01BB DD 21 00 00         454 	ld	ix,#0
   01BF DD 39               455 	add	ix,sp
                            456 ;msxlib.c:347: __endasm;
                            457 	
   01C1 D5                  458 		   push de
   01C2 E5                  459 		   push hl
   01C3 C5                  460 		   push bc
                            461 	
   01C4 DD 6E 04            462 		   ld l,4(ix) ; Parametrit
   01C7 DD 66 05            463 		   ld h,5(ix)
   01CA DD 5E 06            464 		   ld e,6(ix)
   01CD DD 56 07            465 		   ld d,7(ix)
   01D0 D5                  466 		   push de
   01D1 0E 98               467 		   ld c,#0x98
                            468 	
   01D3 CB 3A               469 		   srl d ; DE/8
   01D5 CB 1B               470 		   rr e
   01D7 CB 3A               471 		   srl d
   01D9 CB 1B               472 		   rr e
   01DB CB 3A               473 		   srl d
   01DD CB 1B               474 		   rr e
   01DF 7A                  475 		   ld a,d
   01E0 B3                  476 		   or e
   01E1 CAr08s02            477 		   jp z,1$
                            478 	
   01E4                     479 	0$:
   01E4 ED A3               480 		   outi
   01E6 00                  481 		   nop
   01E7 00                  482 		   nop
   01E8 ED A3               483 		   outi
   01EA 00                  484 		   nop
   01EB 00                  485 		   nop
   01EC ED A3               486 		   outi
   01EE 00                  487 		   nop
   01EF 00                  488 		   nop
   01F0 ED A3               489 		   outi
   01F2 00                  490 		   nop
   01F3 00                  491 		   nop
   01F4 ED A3               492 		   outi
   01F6 00                  493 		   nop
   01F7 00                  494 		   nop
   01F8 ED A3               495 		   outi
   01FA 00                  496 		   nop
   01FB 00                  497 		   nop
   01FC ED A3               498 		   outi
   01FE 00                  499 		   nop
   01FF 00                  500 		   nop
   0200 ED A3               501 		   outi
   0202 1B                  502 		   dec de
   0203 7A                  503 		   ld a,d
   0204 B3                  504 		   or e
   0205 C2rE4s01            505 		   jp nz,0$
                            506 	
   0208                     507 	1$:
   0208 D1                  508 		   pop de ; The modulo part
   0209 7B                  509 		   ld a,e
   020A E6 07               510 		   and #7
   020C CAr17s02            511 		   jp z,2$
                            512 	
   020F 47                  513 		   ld b,a
   0210                     514 	3$:
   0210 ED A3               515 	outi
   0212 78                  516 		   ld a,b
   0213 B7                  517 		   or a
   0214 C2r10s02            518 		   jp nz,3$
                            519 	
   0217                     520 	2$:
   0217 C1                  521 		   pop bc
   0218 E1                  522 		   pop hl
   0219 D1                  523 		   pop de
                            524 		   
   021A DD E1               525 	pop	ix
   021C C9                  526 	ret
   021D                     527 _vdp_slowcopy_end::
                            528 ;msxlib.c:350: void vdp_bigcopy(unsigned char *src,unsigned block32)
                            529 ;	---------------------------------
                            530 ; Function vdp_bigcopy
                            531 ; ---------------------------------
   021D                     532 _vdp_bigcopy_start::
   021D                     533 _vdp_bigcopy:
   021D DD E5               534 	push	ix
   021F DD 21 00 00         535 	ld	ix,#0
   0223 DD 39               536 	add	ix,sp
                            537 ;msxlib.c:408: __endasm;
                            538 	
   0225 D5                  539 		   push de
   0226 E5                  540 		   push hl
   0227 C5                  541 		   push bc
                            542 	
   0228 DD 6E 04            543 		   ld l,4(ix) ; Parametrit
   022B DD 66 05            544 		   ld h,5(ix)
   022E DD 5E 06            545 		   ld e,6(ix)
   0231 DD 56 07            546 		   ld d,7(ix)
   0234 0E 98               547 		   ld c,#0x98
                            548 	
   0236                     549 	0$:
   0236 ED A3               550 		   outi
   0238 ED A3               551 		   outi
   023A ED A3               552 		   outi
   023C ED A3               553 		   outi
   023E ED A3               554 		   outi
   0240 ED A3               555 		   outi
   0242 ED A3               556 		   outi
   0244 ED A3               557 		   outi
                            558 	
   0246 ED A3               559 		   outi
   0248 ED A3               560 		   outi
   024A ED A3               561 		   outi
   024C ED A3               562 		   outi
   024E ED A3               563 		   outi
   0250 ED A3               564 		   outi
   0252 ED A3               565 		   outi
   0254 ED A3               566 		   outi
                            567 	
   0256 ED A3               568 		   outi
   0258 ED A3               569 		   outi
   025A ED A3               570 		   outi
   025C ED A3               571 		   outi
   025E ED A3               572 		   outi
   0260 ED A3               573 		   outi
   0262 ED A3               574 		   outi
   0264 ED A3               575 		   outi
                            576 	
   0266 ED A3               577 		   outi
   0268 ED A3               578 		   outi
   026A ED A3               579 		   outi
   026C ED A3               580 		   outi
   026E ED A3               581 		   outi
   0270 ED A3               582 		   outi
   0272 ED A3               583 		   outi
   0274 ED A3               584 		   outi
   0276 1B                  585 		   dec de
   0277 7A                  586 		   ld a,d
   0278 B3                  587 		   or e
   0279 C2r36s02            588 		   jp nz,0$
                            589 	
   027C C1                  590 		   pop bc
   027D E1                  591 		   pop hl
   027E D1                  592 		   pop de
                            593 		   
   027F DD E1               594 	pop	ix
   0281 C9                  595 	ret
   0282                     596 _vdp_bigcopy_end::
                            597 ;msxlib.c:411: void vdp_register(unsigned char reg,unsigned char c)
                            598 ;	---------------------------------
                            599 ; Function vdp_register
                            600 ; ---------------------------------
   0282                     601 _vdp_register_start::
   0282                     602 _vdp_register:
   0282 DD E5               603 	push	ix
   0284 DD 21 00 00         604 	ld	ix,#0
   0288 DD 39               605 	add	ix,sp
                            606 ;msxlib.c:413: vdp2=c;
   028A DD 7E 05            607 	ld	a,5 (ix)
   028D D3 99               608 	out	(_vdp2),a
                            609 ;msxlib.c:414: vdp2=reg|0x80;
   028F DD 7E 04            610 	ld	a,4 (ix)
   0292 F6 80               611 	or	a,#0x80
   0294 D3 99               612 	out	(_vdp2),a
   0296 DD E1               613 	pop	ix
   0298 C9                  614 	ret
   0299                     615 _vdp_register_end::
                            616 ;msxlib.c:417: void msx2_sethz(char hz)
                            617 ;	---------------------------------
                            618 ; Function msx2_sethz
                            619 ; ---------------------------------
   0299                     620 _msx2_sethz_start::
   0299                     621 _msx2_sethz:
   0299 DD E5               622 	push	ix
   029B DD 21 00 00         623 	ld	ix,#0
   029F DD 39               624 	add	ix,sp
                            625 ;msxlib.c:419: if(hz==50)
   02A1 DD 7E 04            626 	ld	a,4 (ix)
   02A4 D6 32               627 	sub	a,#0x32
   02A6 20 0A               628 	jr	NZ,00102$
                            629 ;msxlib.c:420: vdp_register(VDP_MODE3,2);
   02A8 21 09 02            630 	ld	hl,#0x0209
   02AB E5                  631 	push	hl
   02AC CDr82s02            632 	call	_vdp_register
   02AF F1                  633 	pop	af
   02B0 18 08               634 	jr	00104$
   02B2                     635 00102$:
                            636 ;msxlib.c:422: vdp_register(VDP_MODE3,0);
   02B2 21 09 00            637 	ld	hl,#0x0009
   02B5 E5                  638 	push	hl
   02B6 CDr82s02            639 	call	_vdp_register
   02B9 F1                  640 	pop	af
   02BA                     641 00104$:
   02BA DD E1               642 	pop	ix
   02BC C9                  643 	ret
   02BD                     644 _msx2_sethz_end::
                            645 ;msxlib.c:425: unsigned char vdp_status()
                            646 ;	---------------------------------
                            647 ; Function vdp_status
                            648 ; ---------------------------------
   02BD                     649 _vdp_status_start::
   02BD                     650 _vdp_status:
                            651 ;msxlib.c:427: return vdp2;
   02BD DB 99               652 	in	a,(_vdp2)
   02BF 6F                  653 	ld	l,a
   02C0 C9                  654 	ret
   02C1                     655 _vdp_status_end::
                            656 ;msxlib.c:430: unsigned char vdp2_status(unsigned char reg)
                            657 ;	---------------------------------
                            658 ; Function vdp2_status
                            659 ; ---------------------------------
   02C1                     660 _vdp2_status_start::
   02C1                     661 _vdp2_status:
   02C1 DD E5               662 	push	ix
   02C3 DD 21 00 00         663 	ld	ix,#0
   02C7 DD 39               664 	add	ix,sp
                            665 ;msxlib.c:434: vdp_register(15,reg);
   02C9 DD 7E 04            666 	ld	a,4 (ix)
   02CC F5                  667 	push	af
   02CD 33                  668 	inc	sp
   02CE 3E 0F               669 	ld	a,#0x0F
   02D0 F5                  670 	push	af
   02D1 33                  671 	inc	sp
   02D2 CDr82s02            672 	call	_vdp_register
   02D5 F1                  673 	pop	af
                            674 ;msxlib.c:435: c=vdp2;
   02D6 DB 99               675 	in	a,(_vdp2)
   02D8 4F                  676 	ld	c,a
                            677 ;msxlib.c:436: vdp_register(15,0);
   02D9 C5                  678 	push	bc
   02DA 21 0F 00            679 	ld	hl,#0x000F
   02DD E5                  680 	push	hl
   02DE CDr82s02            681 	call	_vdp_register
   02E1 F1                  682 	pop	af
   02E2 C1                  683 	pop	bc
                            684 ;msxlib.c:438: return c;
   02E3 69                  685 	ld	l,c
   02E4 DD E1               686 	pop	ix
   02E6 C9                  687 	ret
   02E7                     688 _vdp2_status_end::
                            689 ;msxlib.c:441: void sprite_col(int num,char col)
                            690 ;	---------------------------------
                            691 ; Function sprite_col
                            692 ; ---------------------------------
   02E7                     693 _sprite_col_start::
   02E7                     694 _sprite_col:
   02E7 DD E5               695 	push	ix
   02E9 DD 21 00 00         696 	ld	ix,#0
   02ED DD 39               697 	add	ix,sp
                            698 ;msxlib.c:443: vdp_poke(0x1b00+(num<<2)+3,col);
   02EF DD 4E 06            699 	ld	c,6 (ix)
   02F2 DD 5E 04            700 	ld	e,4 (ix)
   02F5 DD 56 05            701 	ld	d,5 (ix)
   02F8 CB 23               702 	sla	e
   02FA CB 12               703 	rl	d
   02FC CB 23               704 	sla	e
   02FE CB 12               705 	rl	d
   0300 21 03 1B            706 	ld	hl,#0x1B03
   0303 19                  707 	add	hl,de
   0304 EB                  708 	ex	de,hl
   0305 79                  709 	ld	a,c
   0306 F5                  710 	push	af
   0307 33                  711 	inc	sp
   0308 D5                  712 	push	de
   0309 CDr67s00            713 	call	_vdp_poke
   030C F1                  714 	pop	af
   030D 33                  715 	inc	sp
   030E DD E1               716 	pop	ix
   0310 C9                  717 	ret
   0311                     718 _sprite_col_end::
                            719 ;msxlib.c:446: void sprite_pos(int num,unsigned char x,unsigned char y)
                            720 ;	---------------------------------
                            721 ; Function sprite_pos
                            722 ; ---------------------------------
   0311                     723 _sprite_pos_start::
   0311                     724 _sprite_pos:
   0311 DD E5               725 	push	ix
   0313 DD 21 00 00         726 	ld	ix,#0
   0317 DD 39               727 	add	ix,sp
                            728 ;msxlib.c:448: vdp_poke(0x1b00+(num<<2),y);
   0319 DD 4E 04            729 	ld	c,4 (ix)
   031C DD 46 05            730 	ld	b,5 (ix)
   031F CB 21               731 	sla	c
   0321 CB 10               732 	rl	b
   0323 CB 21               733 	sla	c
   0325 CB 10               734 	rl	b
   0327 21 00 1B            735 	ld	hl,#0x1B00
   032A 09                  736 	add	hl,bc
   032B EB                  737 	ex	de,hl
   032C C5                  738 	push	bc
   032D DD 7E 07            739 	ld	a,7 (ix)
   0330 F5                  740 	push	af
   0331 33                  741 	inc	sp
   0332 D5                  742 	push	de
   0333 CDr67s00            743 	call	_vdp_poke
   0336 F1                  744 	pop	af
   0337 33                  745 	inc	sp
   0338 C1                  746 	pop	bc
                            747 ;msxlib.c:449: vdp_poke(0x1b00+(num<<2)+1,x);
   0339 21 01 1B            748 	ld	hl,#0x1B01
   033C 09                  749 	add	hl,bc
   033D 4D                  750 	ld	c,l
   033E 44                  751 	ld	b,h
   033F DD 7E 06            752 	ld	a,6 (ix)
   0342 F5                  753 	push	af
   0343 33                  754 	inc	sp
   0344 C5                  755 	push	bc
   0345 CDr67s00            756 	call	_vdp_poke
   0348 F1                  757 	pop	af
   0349 33                  758 	inc	sp
   034A DD E1               759 	pop	ix
   034C C9                  760 	ret
   034D                     761 _sprite_pos_end::
                            762 ;msxlib.c:452: void sprite_pat(int num,unsigned char pat)
                            763 ;	---------------------------------
                            764 ; Function sprite_pat
                            765 ; ---------------------------------
   034D                     766 _sprite_pat_start::
   034D                     767 _sprite_pat:
   034D DD E5               768 	push	ix
   034F DD 21 00 00         769 	ld	ix,#0
   0353 DD 39               770 	add	ix,sp
                            771 ;msxlib.c:454: vdp_poke(0x1b00+(num<<2)+2,pat);
   0355 DD 4E 04            772 	ld	c,4 (ix)
   0358 DD 46 05            773 	ld	b,5 (ix)
   035B CB 21               774 	sla	c
   035D CB 10               775 	rl	b
   035F CB 21               776 	sla	c
   0361 CB 10               777 	rl	b
   0363 21 02 1B            778 	ld	hl,#0x1B02
   0366 09                  779 	add	hl,bc
   0367 4D                  780 	ld	c,l
   0368 44                  781 	ld	b,h
   0369 DD 7E 06            782 	ld	a,6 (ix)
   036C F5                  783 	push	af
   036D 33                  784 	inc	sp
   036E C5                  785 	push	bc
   036F CDr67s00            786 	call	_vdp_poke
   0372 F1                  787 	pop	af
   0373 33                  788 	inc	sp
   0374 DD E1               789 	pop	ix
   0376 C9                  790 	ret
   0377                     791 _sprite_pat_end::
                            792 ;msxlib.c:457: void msx2_palette(char col,char r,char g,char b)
                            793 ;	---------------------------------
                            794 ; Function msx2_palette
                            795 ; ---------------------------------
   0377                     796 _msx2_palette_start::
   0377                     797 _msx2_palette:
   0377 DD E5               798 	push	ix
   0379 DD 21 00 00         799 	ld	ix,#0
   037D DD 39               800 	add	ix,sp
                            801 ;msxlib.c:459: vdp2=col;
   037F DD 7E 04            802 	ld	a,4 (ix)
   0382 D3 99               803 	out	(_vdp2),a
                            804 ;msxlib.c:460: vdp2=0x90;
   0384 3E 90               805 	ld	a,#0x90
   0386 D3 99               806 	out	(_vdp2),a
                            807 ;msxlib.c:461: vdp3=(r<<4)+b;
   0388 DD 7E 05            808 	ld	a,5 (ix)
   038B 07                  809 	rlca
   038C 07                  810 	rlca
   038D 07                  811 	rlca
   038E 07                  812 	rlca
   038F E6 F0               813 	and	a,#0xF0
   0391 4F                  814 	ld	c,a
   0392 DD 86 07            815 	add	a,7 (ix)
   0395 D3 9A               816 	out	(_vdp3),a
                            817 ;msxlib.c:462: vdp3=g;
   0397 DD 7E 06            818 	ld	a,6 (ix)
   039A D3 9A               819 	out	(_vdp3),a
   039C DD E1               820 	pop	ix
   039E C9                  821 	ret
   039F                     822 _msx2_palette_end::
                            823 ;msxlib.c:465: char joy_status(char num)
                            824 ;	---------------------------------
                            825 ; Function joy_status
                            826 ; ---------------------------------
   039F                     827 _joy_status_start::
   039F                     828 _joy_status:
   039F DD E5               829 	push	ix
   03A1 DD 21 00 00         830 	ld	ix,#0
   03A5 DD 39               831 	add	ix,sp
                            832 ;msxlib.c:469: psgsel=0xf;
   03A7 3E 0F               833 	ld	a,#0x0F
   03A9 D3 A0               834 	out	(_psgsel),a
                            835 ;msxlib.c:470: c=psgr;
   03AB DB A2               836 	in	a,(_psgr)
   03AD 4F                  837 	ld	c,a
                            838 ;msxlib.c:472: if(num==1)
   03AE DD 7E 04            839 	ld	a,4 (ix)
   03B1 D6 01               840 	sub	a,#0x01
   03B3 20 0A               841 	jr	NZ,00102$
                            842 ;msxlib.c:473: psgw=c&0x80|0x03;
   03B5 79                  843 	ld	a,c
   03B6 E6 80               844 	and	a,#0x80
   03B8 47                  845 	ld	b,a
   03B9 F6 03               846 	or	a,#0x03
   03BB D3 A1               847 	out	(_psgw),a
   03BD 18 08               848 	jr	00103$
   03BF                     849 00102$:
                            850 ;msxlib.c:475: psgw=c&0x80|0x4c;
   03BF 79                  851 	ld	a,c
   03C0 E6 80               852 	and	a,#0x80
   03C2 4F                  853 	ld	c,a
   03C3 F6 4C               854 	or	a,#0x4C
   03C5 D3 A1               855 	out	(_psgw),a
   03C7                     856 00103$:
                            857 ;msxlib.c:477: psgsel=0xe;
   03C7 3E 0E               858 	ld	a,#0x0E
   03C9 D3 A0               859 	out	(_psgsel),a
                            860 ;msxlib.c:478: return(psgr^0xff);
   03CB DB A2               861 	in	a,(_psgr)
   03CD EE FF               862 	xor	a,#0xFF
   03CF 6F                  863 	ld	l,a
   03D0 DD E1               864 	pop	ix
   03D2 C9                  865 	ret
   03D3                     866 _joy_status_end::
                            867 ;msxlib.c:481: static void waitmouse(void)
                            868 ;	---------------------------------
                            869 ; Function waitmouse
                            870 ; ---------------------------------
   03D3                     871 _waitmouse:
                            872 ;msxlib.c:484: for(n=0;n<8;n++)
   03D3 0E 08               873 	ld	c,#0x08
   03D5                     874 00103$:
                            875 ;msxlib.c:488: __endasm;
                            876 	
   03D5 00                  877 		 nop
                            878 		 
   03D6 0D                  879 	dec	c
                            880 ;msxlib.c:484: for(n=0;n<8;n++)
   03D7 AF                  881 	xor	a,a
   03D8 B1                  882 	or	a,c
   03D9 20 FA               883 	jr	NZ,00103$
   03DB C9                  884 	ret
                            885 ;msxlib.c:493: char mouse_status(char num,signed char *x,signed char *y)
                            886 ;	---------------------------------
                            887 ; Function mouse_status
                            888 ; ---------------------------------
   03DC                     889 _mouse_status_start::
   03DC                     890 _mouse_status:
   03DC DD E5               891 	push	ix
   03DE DD 21 00 00         892 	ld	ix,#0
   03E2 DD 39               893 	add	ix,sp
   03E4 F5                  894 	push	af
                            895 ;msxlib.c:498: if(num==1)
   03E5 DD 7E 04            896 	ld	a,4 (ix)
   03E8 D6 01               897 	sub	a,#0x01
   03EA 20 05               898 	jr	NZ,00102$
                            899 ;msxlib.c:500: outval=0x93;
                            900 ;msxlib.c:501: xorval=0x10;
   03EC 01 93 10            901 	ld	bc,#0x1093
   03EF 18 03               902 	jr	00103$
   03F1                     903 00102$:
                            904 ;msxlib.c:505: outval=0xec;
                            905 ;msxlib.c:506: xorval=0x20;
   03F1 01 EC 20            906 	ld	bc,#0x20EC
   03F4                     907 00103$:
                            908 ;msxlib.c:509: waitmouse();
   03F4 C5                  909 	push	bc
   03F5 CDrD3s03            910 	call	_waitmouse
   03F8 C1                  911 	pop	bc
                            912 ;msxlib.c:510: waitmouse();
   03F9 C5                  913 	push	bc
   03FA CDrD3s03            914 	call	_waitmouse
   03FD C1                  915 	pop	bc
                            916 ;msxlib.c:511: psgsel=15;
   03FE 3E 0F               917 	ld	a,#0x0F
   0400 D3 A0               918 	out	(_psgsel),a
                            919 ;msxlib.c:512: psgw=outval;
   0402 79                  920 	ld	a,c
   0403 D3 A1               921 	out	(_psgw),a
                            922 ;msxlib.c:513: outval^=xorval;
   0405 79                  923 	ld	a,c
   0406 A8                  924 	xor	a,b
   0407 4F                  925 	ld	c,a
                            926 ;msxlib.c:514: waitmouse();
   0408 C5                  927 	push	bc
   0409 CDrD3s03            928 	call	_waitmouse
   040C C1                  929 	pop	bc
                            930 ;msxlib.c:515: psgsel=14;
   040D 3E 0E               931 	ld	a,#0x0E
   040F D3 A0               932 	out	(_psgsel),a
                            933 ;msxlib.c:516: c=butt=psgr;
   0411 DB A2               934 	in	a,(_psgr)
                            935 ;msxlib.c:517: ex=(c&0xf)<<4;
   0413 57                  936 	ld	d,a
   0414 E6 0F               937 	and	a,#0x0F
   0416 5F                  938 	ld	e,a
   0417 07                  939 	rlca
   0418 07                  940 	rlca
   0419 07                  941 	rlca
   041A 07                  942 	rlca
   041B E6 F0               943 	and	a,#0xF0
   041D DD 77 FE            944 	ld	-2 (ix),a
                            945 ;msxlib.c:519: psgsel=15;
   0420 3E 0F               946 	ld	a,#0x0F
   0422 D3 A0               947 	out	(_psgsel),a
                            948 ;msxlib.c:520: psgw=outval;
   0424 79                  949 	ld	a,c
   0425 D3 A1               950 	out	(_psgw),a
                            951 ;msxlib.c:521: outval^=xorval;
   0427 79                  952 	ld	a,c
   0428 A8                  953 	xor	a,b
   0429 4F                  954 	ld	c,a
                            955 ;msxlib.c:522: waitmouse();
   042A C5                  956 	push	bc
   042B D5                  957 	push	de
   042C CDrD3s03            958 	call	_waitmouse
   042F D1                  959 	pop	de
   0430 C1                  960 	pop	bc
                            961 ;msxlib.c:523: psgsel=14;
   0431 3E 0E               962 	ld	a,#0x0E
   0433 D3 A0               963 	out	(_psgsel),a
                            964 ;msxlib.c:524: c=psgr;
   0435 DB A2               965 	in	a,(_psgr)
                            966 ;msxlib.c:525: ex|=c&0xf;
   0437 DD 77 FF            967 	ld	-1 (ix),a
   043A E6 0F               968 	and	a,#0x0F
   043C 5F                  969 	ld	e,a
   043D DD B6 FE            970 	or	a,-2 (ix)
   0440 DD 77 FE            971 	ld	-2 (ix),a
                            972 ;msxlib.c:527: psgsel=15;
   0443 3E 0F               973 	ld	a,#0x0F
   0445 D3 A0               974 	out	(_psgsel),a
                            975 ;msxlib.c:528: psgw=outval;
   0447 79                  976 	ld	a,c
   0448 D3 A1               977 	out	(_psgw),a
                            978 ;msxlib.c:529: outval^=xorval;
   044A 79                  979 	ld	a,c
   044B A8                  980 	xor	a,b
   044C 4F                  981 	ld	c,a
                            982 ;msxlib.c:530: waitmouse();
   044D C5                  983 	push	bc
   044E D5                  984 	push	de
   044F CDrD3s03            985 	call	_waitmouse
   0452 D1                  986 	pop	de
   0453 C1                  987 	pop	bc
                            988 ;msxlib.c:531: psgsel=14;
   0454 3E 0E               989 	ld	a,#0x0E
   0456 D3 A0               990 	out	(_psgsel),a
                            991 ;msxlib.c:532: c=psgr;
   0458 DB A2               992 	in	a,(_psgr)
                            993 ;msxlib.c:533: ey=(c&0xf)<<4;
   045A DD 77 FF            994 	ld	-1 (ix),a
   045D E6 0F               995 	and	a,#0x0F
   045F 07                  996 	rlca
   0460 07                  997 	rlca
   0461 07                  998 	rlca
   0462 07                  999 	rlca
   0463 E6 F0              1000 	and	a,#0xF0
   0465 47                 1001 	ld	b,a
                           1002 ;msxlib.c:535: psgsel=15;
   0466 3E 0F              1003 	ld	a,#0x0F
   0468 D3 A0              1004 	out	(_psgsel),a
                           1005 ;msxlib.c:536: psgw=outval;
   046A 79                 1006 	ld	a,c
   046B D3 A1              1007 	out	(_psgw),a
                           1008 ;msxlib.c:538: waitmouse();
   046D C5                 1009 	push	bc
   046E D5                 1010 	push	de
   046F CDrD3s03           1011 	call	_waitmouse
   0472 D1                 1012 	pop	de
   0473 C1                 1013 	pop	bc
                           1014 ;msxlib.c:539: psgsel=14;
   0474 3E 0E              1015 	ld	a,#0x0E
   0476 D3 A0              1016 	out	(_psgsel),a
                           1017 ;msxlib.c:540: c=psgr;
   0478 DB A2              1018 	in	a,(_psgr)
                           1019 ;msxlib.c:541: ey|=c&0xf;
   047A DD 77 FF           1020 	ld	-1 (ix),a
   047D E6 0F              1021 	and	a,#0x0F
   047F B0                 1022 	or	a,b
   0480 47                 1023 	ld	b,a
                           1024 ;msxlib.c:543: *x=-ex;
   0481 E5                 1025 	push	hl
   0482 DD 6E 05           1026 	ld	l,5 (ix)
   0485 DD 66 06           1027 	ld	h,6 (ix)
   0488 E5                 1028 	push	hl
   0489 FD E1              1029 	pop	iy
   048B E1                 1030 	pop	hl
   048C AF                 1031 	xor	a,a
   048D DD 9E FE           1032 	sbc	a,-2 (ix)
   0490 4F                 1033 	ld	c,a
   0491 FD 71 00           1034 	ld	(iy),c
                           1035 ;msxlib.c:544: *y=-ey;
   0494 E5                 1036 	push	hl
   0495 DD 6E 07           1037 	ld	l,7 (ix)
   0498 DD 66 08           1038 	ld	h,8 (ix)
   049B E5                 1039 	push	hl
   049C FD E1              1040 	pop	iy
   049E E1                 1041 	pop	hl
   049F AF                 1042 	xor	a,a
   04A0 98                 1043 	sbc	a,b
   04A1 47                 1044 	ld	b,a
   04A2 FD 70 00           1045 	ld	(iy),b
                           1046 ;msxlib.c:545: return(butt^0xff);
   04A5 7A                 1047 	ld	a,d
   04A6 EE FF              1048 	xor	a,#0xFF
   04A8 6F                 1049 	ld	l,a
   04A9 DD F9              1050 	ld	sp,ix
   04AB DD E1              1051 	pop	ix
   04AD C9                 1052 	ret
   04AE                    1053 _mouse_status_end::
                           1054 ;msxlib.c:548: char isvdp2(void) // Thanks to Nyyrikki
                           1055 ;	---------------------------------
                           1056 ; Function isvdp2
                           1057 ; ---------------------------------
   04AE                    1058 _isvdp2_start::
   04AE                    1059 _isvdp2:
                           1060 ;msxlib.c:552: DI;
   04AE F3                 1061 		di 
                           1062 ;msxlib.c:553: vdp2=1;
   04AF 3E 01              1063 	ld	a,#0x01
   04B1 D3 99              1064 	out	(_vdp2),a
                           1065 ;msxlib.c:554: vdp2=0x8f;
   04B3 3E 8F              1066 	ld	a,#0x8F
   04B5 D3 99              1067 	out	(_vdp2),a
                           1068 ;msxlib.c:555: c=vdp2;
   04B7 DB 99              1069 	in	a,(_vdp2)
   04B9 4F                 1070 	ld	c,a
                           1071 ;msxlib.c:556: vdp2=0;
   04BA 3E 00              1072 	ld	a,#0x00
   04BC D3 99              1073 	out	(_vdp2),a
                           1074 ;msxlib.c:557: vdp2=0x8f;
   04BE 3E 8F              1075 	ld	a,#0x8F
   04C0 D3 99              1076 	out	(_vdp2),a
                           1077 ;msxlib.c:558: EI;
   04C2 FB                 1078 		ei 
                           1079 ;msxlib.c:560: if(c&2==2)
   04C3 79                 1080 	ld	a,c
   04C4 E6 01              1081 	and	a,#0x01
   04C6 28 03              1082 	jr	Z,00102$
                           1083 ;msxlib.c:561: return(0);
   04C8 2E 00              1084 	ld	l,#0x00
   04CA C9                 1085 	ret
   04CB                    1086 00102$:
                           1087 ;msxlib.c:562: return(1);
   04CB 2E 01              1088 	ld	l,#0x01
   04CD C9                 1089 	ret
   04CE                    1090 _isvdp2_end::
                           1091 ;msxlib.c:567: void spindown(void)
                           1092 ;	---------------------------------
                           1093 ; Function spindown
                           1094 ; ---------------------------------
   04CE                    1095 _spindown_start::
   04CE                    1096 _spindown:
                           1097 ;msxlib.c:569: DI;
   04CE F3                 1098 		di 
                           1099 ;msxlib.c:570: *(unsigned *)0xf1c1=1;
   04CF FD 21 C1 F1        1100 	ld	iy,#0xF1C1
   04D3 FD 36 00 01        1101 	ld	0 (iy),#0x01
   04D7 FD 36 01 00        1102 	ld	1 (iy),#0x00
                           1103 ;msxlib.c:571: EI;
   04DB FB                 1104 		ei 
                           1105 ;msxlib.c:572: waitVB();
   04DC 76                 1106 		halt 
                           1107 ;msxlib.c:573: waitVB();
   04DD 76                 1108 		halt 
   04DE C9                 1109 	ret
   04DF                    1110 _spindown_end::
                           1111 ;msxlib.c:578: unsigned random(void)
                           1112 ;	---------------------------------
                           1113 ; Function random
                           1114 ; ---------------------------------
   04DF                    1115 _random_start::
   04DF                    1116 _random:
                           1117 ;msxlib.c:594: __endasm;
                           1118 	
   04DF D5                 1119 		push de
                           1120 	
   04E0 2Ar01s00           1121 		ld hl,(_randomseed)
   04E3 11 CD 83           1122 		ld de,#0x83cd
   04E6 ED 5F              1123 		ld a,r
   04E8 83                 1124 		add a,e
   04E9 5F                 1125 		ld e,a
   04EA 19                 1126 		add hl,de
   04EB CB 0C              1127 		rrc h
   04ED CB 1D              1128 		rr l
   04EF 22r01s00           1129 		ld (_randomseed),hl
                           1130 	
   04F2 D1                 1131 		pop de
                           1132 		
                           1133 ;msxlib.c:596: return(randomseed);
   04F3 2Ar01s00           1134 	ld	hl,(_randomseed)
   04F6 C9                 1135 	ret
   04F7                    1136 _random_end::
                           1137 	.area _CODE
                           1138 	.area _CABS
