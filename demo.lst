                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Fri Mar 23 14:30:09 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _waiter
                             15 	.globl _bigtext
                             16 	.globl _points
                             17 	.globl _logoeffu
                             18 	.globl _abs
                             19 	.globl _tritiles
                             20 	.globl _drawtilescreen_full
                             21 	.globl _drawtilescreen
                             22 	.globl _drawtritile
                             23 	.globl _thewave
                             24 	.globl _boxes
                             25 	.globl _drawbox
                             26 	.globl _animplay
                             27 	.globl _bulbs
                             28 	.globl _twister
                             29 	.globl _font
                             30 	.globl _drawsine
                             31 	.globl _drawstr2x
                             32 	.globl _drawstrslow
                             33 	.globl _drawstr
                             34 	.globl _do_letter_tall
                             35 	.globl _do_letter
                             36 	.globl _do_2xletter
                             37 	.globl _raster_effu
                             38 	.globl _do_blocks
                             39 	.globl _do_ymmm
                             40 	.globl _fadein
                             41 	.globl _pck_load
                             42 	.globl _raw_load
                             43 	.globl _pause
                             44 	.globl _pal_load
                             45 	.globl _scratch_clear
                             46 	.globl _ge5_load
                             47 	.globl _color_isr
                             48 	.globl _my_isr
                             49 	.globl _isNthBitSet
                             50 	.globl _timeindex
                             51 	.globl _sceneindex
                             52 	.globl _bigtextp
                             53 	.globl _greetindex
                             54 	.globl _pointframe
                             55 	.globl _initpoints
                             56 	.globl _onceclear
                             57 	.globl _powa
                             58 	.globl _powatick
                             59 	.globl _triframes
                             60 	.globl _tripaltick2
                             61 	.globl _tripaltick
                             62 	.globl _tripal
                             63 	.globl _tiletick
                             64 	.globl _tiley
                             65 	.globl _tilex
                             66 	.globl _tilei
                             67 	.globl _tri_inited
                             68 	.globl _ffa
                             69 	.globl _buf
                             70 	.globl _initwave
                             71 	.globl _prevbox_of
                             72 	.globl _boxes_of
                             73 	.globl _pbt
                             74 	.globl _pbx
                             75 	.globl _bonc
                             76 	.globl _bo
                             77 	.globl _bt
                             78 	.globl _by
                             79 	.globl _bx
                             80 	.globl _boxi
                             81 	.globl _boxes_y
                             82 	.globl _boxes_x
                             83 	.globl _prevy
                             84 	.globl _prevx
                             85 	.globl _buffer
                             86 	.globl _boxes_init
                             87 	.globl _anim_init
                             88 	.globl _sy
                             89 	.globl _enderdir
                             90 	.globl _ender
                             91 	.globl _ff2
                             92 	.globl _ff1
                             93 	.globl _bulbflipper
                             94 	.globl _twinited
                             95 	.globl _ff
                             96 	.globl _slowend
                             97 	.globl _ltrpointer
                             98 	.globl _ly
                             99 	.globl _lx
                            100 	.globl _linenum
                            101 	.globl _flof
                            102 	.globl _btab
                            103 	.globl _bty
                            104 	.globl _btx
                            105 	.globl _bsy
                            106 	.globl _bsx
                            107 	.globl _block_init
                            108 	.globl _cc
                            109 	.globl _yofff
                            110 	.globl _scenetimings
                            111 	.globl _scenepointers
                            112 	.globl _cmd
                            113 	.globl _tick
                            114 	.globl _vbicount
                            115 	.globl _boxes_palette
                            116 	.globl _tf_palette
                            117 	.globl _twister_palette
                            118 	.globl _block_palette
                            119 	.globl _bulbs_palette
                            120 	.globl _cur_palette
                            121 	.globl _scratch
                            122 	.globl _packbuffer
                            123 	.globl _tri_lookup_y
                            124 	.globl _eighttimes
                            125 	.globl _twelvetimes
                            126 	.globl _tri_lookup_x
                            127 	.globl _sintab
                            128 	.globl _font_w
                            129 	.globl _font_y
                            130 	.globl _font_x
                            131 	.globl _tri_inva4
                            132 	.globl _tri_inva3
                            133 	.globl _tri_inva2
                            134 	.globl _tri_inva1
                            135 	.globl _tri_side2
                            136 	.globl _tri_side1
                            137 	.globl _tri_dia
                            138 	.globl _tri_up
                            139 	.globl _tri_center
                            140 	.globl _sintabx
                            141 ;--------------------------------------------------------
                            142 ; special function registers
                            143 ;--------------------------------------------------------
                            144 ;--------------------------------------------------------
                            145 ;  ram data
                            146 ;--------------------------------------------------------
                            147 	.area _DATA
   0000                     148 _sintab::
   0000                     149 	.ds 256
   0100                     150 _tri_lookup_x::
   0100                     151 	.ds 32
   0120                     152 _twelvetimes::
   0120                     153 	.ds 52
   0154                     154 _eighttimes::
   0154                     155 	.ds 52
   0188                     156 _tri_lookup_y::
   0188                     157 	.ds 64
   01C8                     158 _packbuffer::
   01C8                     159 	.ds 5000
   1550                     160 _scratch::
   1550                     161 	.ds 128
   15D0                     162 _cur_palette::
   15D0                     163 	.ds 32
   15F0                     164 _bulbs_palette::
   15F0                     165 	.ds 32
   1610                     166 _block_palette::
   1610                     167 	.ds 32
   1630                     168 _twister_palette::
   1630                     169 	.ds 32
   1650                     170 _tf_palette::
   1650                     171 	.ds 32
   1670                     172 _boxes_palette::
   1670                     173 	.ds 32
   1690                     174 _vbicount::
   1690                     175 	.ds 2
   1692                     176 _tick::
   1692                     177 	.ds 2
   1694                     178 _cmd::
   1694                     179 	.ds 15
   16A3                     180 _scenepointers::
   16A3                     181 	.ds 20
   16B7                     182 _scenetimings::
   16B7                     183 	.ds 40
   16DF                     184 _isNthBitSet_mask_1_1:
   16DF                     185 	.ds 8
   16E7                     186 _yofff::
   16E7                     187 	.ds 1
   16E8                     188 _cc::
   16E8                     189 	.ds 1
   16E9                     190 _flipper:
   16E9                     191 	.ds 2
   16EB                     192 _ymmmf:
   16EB                     193 	.ds 2
   16ED                     194 _block_init::
   16ED                     195 	.ds 1
   16EE                     196 _bsx::
   16EE                     197 	.ds 2
   16F0                     198 _bsy::
   16F0                     199 	.ds 2
   16F2                     200 _btx::
   16F2                     201 	.ds 2
   16F4                     202 _bty::
   16F4                     203 	.ds 2
   16F6                     204 _btab::
   16F6                     205 	.ds 32
   1716                     206 _flof::
   1716                     207 	.ds 2
   1718                     208 _linenum::
   1718                     209 	.ds 2
   171A                     210 _lx::
   171A                     211 	.ds 1
   171B                     212 _ly::
   171B                     213 	.ds 1
   171C                     214 _ltrpointer::
   171C                     215 	.ds 2
   171E                     216 _slowend::
   171E                     217 	.ds 2
   1720                     218 _ff::
   1720                     219 	.ds 2
   1722                     220 _twinited::
   1722                     221 	.ds 2
   1724                     222 _bulbflipper::
   1724                     223 	.ds 2
   1726                     224 _ff1::
   1726                     225 	.ds 2
   1728                     226 _ff2::
   1728                     227 	.ds 2
   172A                     228 _ender::
   172A                     229 	.ds 2
   172C                     230 _enderdir::
   172C                     231 	.ds 2
   172E                     232 _sy::
   172E                     233 	.ds 2
   1730                     234 _xo:
   1730                     235 	.ds 2
   1732                     236 _yo:
   1732                     237 	.ds 2
   1734                     238 _po:
   1734                     239 	.ds 2
   1736                     240 _frames:
   1736                     241 	.ds 2
   1738                     242 _anim_init::
   1738                     243 	.ds 2
   173A                     244 _boxes_init::
   173A                     245 	.ds 1
   173B                     246 _buffer::
   173B                     247 	.ds 2
   173D                     248 _prevx::
   173D                     249 	.ds 2
   173F                     250 _prevy::
   173F                     251 	.ds 2
   1741                     252 _boxes_x::
   1741                     253 	.ds 5
   1746                     254 _boxes_y::
   1746                     255 	.ds 10
   1750                     256 _boxi::
   1750                     257 	.ds 1
   1751                     258 _bx::
   1751                     259 	.ds 2
   1753                     260 _by::
   1753                     261 	.ds 2
   1755                     262 _bt::
   1755                     263 	.ds 2
   1757                     264 _bo::
   1757                     265 	.ds 2
   1759                     266 _bonc::
   1759                     267 	.ds 2
   175B                     268 _pbx::
   175B                     269 	.ds 2
   175D                     270 _pbt::
   175D                     271 	.ds 2
   175F                     272 _boxes_of::
   175F                     273 	.ds 10
   1769                     274 _prevbox_of::
   1769                     275 	.ds 1
   176A                     276 _initwave::
   176A                     277 	.ds 1
   176B                     278 _buf::
   176B                     279 	.ds 2
   176D                     280 _ffa::
   176D                     281 	.ds 2
   176F                     282 _tri_inited::
   176F                     283 	.ds 1
   1770                     284 _tilei::
   1770                     285 	.ds 2
   1772                     286 _tilex::
   1772                     287 	.ds 2
   1774                     288 _tiley::
   1774                     289 	.ds 2
   1776                     290 _tiletick::
   1776                     291 	.ds 1
   1777                     292 _tripal::
   1777                     293 	.ds 9
   1780                     294 _tripaltick::
   1780                     295 	.ds 1
   1781                     296 _tripaltick2::
   1781                     297 	.ds 1
   1782                     298 _triframes::
   1782                     299 	.ds 2
   1784                     300 _powatick::
   1784                     301 	.ds 2
   1786                     302 _powa::
   1786                     303 	.ds 2
   1788                     304 _onceclear::
   1788                     305 	.ds 1
   1789                     306 _initpoints::
   1789                     307 	.ds 1
   178A                     308 _pointframe::
   178A                     309 	.ds 2
   178C                     310 _greetindex::
   178C                     311 	.ds 2
   178E                     312 _bigtextp::
   178E                     313 	.ds 2
   1790                     314 _sceneindex::
   1790                     315 	.ds 2
   1792                     316 _timeindex::
   1792                     317 	.ds 2
                            318 ;--------------------------------------------------------
                            319 ; overlayable items in  ram 
                            320 ;--------------------------------------------------------
                            321 	.area _OVERLAY
                            322 ;--------------------------------------------------------
                            323 ; external initialized ram data
                            324 ;--------------------------------------------------------
                            325 ;--------------------------------------------------------
                            326 ; global & static initialisations
                            327 ;--------------------------------------------------------
                            328 	.area _HOME
                            329 	.area _GSINIT
                            330 	.area _GSFINAL
                            331 	.area _GSINIT
                            332 ;demo.c:228: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21rDFs16            333 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            334 	call	__initrleblock
   0006 08                  335 	.db	8
   0007 01 02 04 08 10 20   336 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  337 	.db	0
                            338 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            339 	ld	hl,#_sintab
   0013 CDr00s00            340 	call	__initrleblock
   0016 3B                  341 	.db	59
   0017 00 03 06 09 0C 0F   342 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   343 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   344 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   345 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   346 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   347 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   348 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            349 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               350 	.db	#-5,#0x7E
   0054 01                  351 	.db	1
   0055 7F                  352 	.db	0x7F
   0056 FB 7E               353 	.db	#-5,#0x7E
   0058 75                  354 	.db	117
   0059 7D 7D 7C 7B 7B 7A   355 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   356 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   357 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   358 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   359 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   360 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   361 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   362 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   363 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   364 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   365 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   366 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   367 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   368 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      369 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               370 	.db	#-5,#0x82
   00D0 01                  371 	.db	1
   00D1 81                  372 	.db	0x81
   00D2 FB 82               373 	.db	#-5,#0x82
   00D4 3A                  374 	.db	58
   00D5 83 83 84 85 85 86   375 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   376 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   377 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   378 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   379 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   380 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   381 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               382 	.db	0xFA, 0xFD
   010F 00                  383 	.db	0
                            384 ;demo.c:177: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            385 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            386 	call	__initrleblock
   0116 E0 00               387 	.db	#-32,#0x00
   0118 00                  388 	.db	0
                            389 ;demo.c:178: int twelvetimes[26] = { 0 };
   0119 21r20s01            390 	ld	hl,#_twelvetimes
   011C CDr00s00            391 	call	__initrleblock
   011F CC 00               392 	.db	#-52,#0x00
   0121 00                  393 	.db	0
                            394 ;demo.c:179: int eighttimes[26] = { 0 };
   0122 21r54s01            395 	ld	hl,#_eighttimes
   0125 CDr00s00            396 	call	__initrleblock
   0128 CC 00               397 	.db	#-52,#0x00
   012A 00                  398 	.db	0
                            399 ;demo.c:181: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            400 	ld	hl,#_tri_lookup_y
   012E CDr00s00            401 	call	__initrleblock
   0131 C0 00               402 	.db	#-64,#0x00
   0133 00                  403 	.db	0
                            404 ;demo.c:183: uint8_t packbuffer[5000] = {0};
   0134 21rC8s01            405 	ld	hl,#_packbuffer
   0137 CDr00s00            406 	call	__initrleblock
   013A 81 00               407 	.db	#-127,#0x00
   013C 81 00               408 	.db	#-127,#0x00
   013E 81 00               409 	.db	#-127,#0x00
   0140 81 00               410 	.db	#-127,#0x00
   0142 81 00               411 	.db	#-127,#0x00
   0144 81 00               412 	.db	#-127,#0x00
   0146 81 00               413 	.db	#-127,#0x00
   0148 81 00               414 	.db	#-127,#0x00
   014A 81 00               415 	.db	#-127,#0x00
   014C 81 00               416 	.db	#-127,#0x00
   014E 81 00               417 	.db	#-127,#0x00
   0150 81 00               418 	.db	#-127,#0x00
   0152 81 00               419 	.db	#-127,#0x00
   0154 81 00               420 	.db	#-127,#0x00
   0156 81 00               421 	.db	#-127,#0x00
   0158 81 00               422 	.db	#-127,#0x00
   015A 81 00               423 	.db	#-127,#0x00
   015C 81 00               424 	.db	#-127,#0x00
   015E 81 00               425 	.db	#-127,#0x00
   0160 81 00               426 	.db	#-127,#0x00
   0162 81 00               427 	.db	#-127,#0x00
   0164 81 00               428 	.db	#-127,#0x00
   0166 81 00               429 	.db	#-127,#0x00
   0168 81 00               430 	.db	#-127,#0x00
   016A 81 00               431 	.db	#-127,#0x00
   016C 81 00               432 	.db	#-127,#0x00
   016E 81 00               433 	.db	#-127,#0x00
   0170 81 00               434 	.db	#-127,#0x00
   0172 81 00               435 	.db	#-127,#0x00
   0174 81 00               436 	.db	#-127,#0x00
   0176 81 00               437 	.db	#-127,#0x00
   0178 81 00               438 	.db	#-127,#0x00
   017A 81 00               439 	.db	#-127,#0x00
   017C 81 00               440 	.db	#-127,#0x00
   017E 81 00               441 	.db	#-127,#0x00
   0180 81 00               442 	.db	#-127,#0x00
   0182 81 00               443 	.db	#-127,#0x00
   0184 81 00               444 	.db	#-127,#0x00
   0186 81 00               445 	.db	#-127,#0x00
   0188 D1 00               446 	.db	#-47,#0x00
   018A 00                  447 	.db	0
                            448 ;demo.c:193: volatile int vbicount=0;
   018B FD 21r90s16         449 	ld	iy,#_vbicount
   018F FD 36 00 00         450 	ld	0 (iy),#0x00
   0193 FD 21r90s16         451 	ld	iy,#_vbicount
   0197 FD 36 01 00         452 	ld	1 (iy),#0x00
                            453 ;demo.c:194: volatile int tick=0;
   019B FD 21r92s16         454 	ld	iy,#_tick
   019F FD 36 00 00         455 	ld	0 (iy),#0x00
   01A3 FD 21r92s16         456 	ld	iy,#_tick
   01A7 FD 36 01 00         457 	ld	1 (iy),#0x00
                            458 ;demo.c:199: void (*scenepointers[10])() = {
   01AB 21rA3s16            459 	ld	hl,#_scenepointers
   01AE 36rEB               460 	ld	(hl),#<_waiter
   01B0 23                  461 	inc	hl
   01B1 36s36               462 	ld	(hl),#>_waiter
   01B3 21rA5s16            463 	ld	hl, #_scenepointers + 2
   01B6 36rF3               464 	ld	(hl),#<_logoeffu
   01B8 23                  465 	inc	hl
   01B9 36s30               466 	ld	(hl),#>_logoeffu
   01BB 01rA7s16            467 	ld	bc,#_scenepointers + 4
   01BE 69                  468 	ld	l,c
   01BF 60                  469 	ld	h,b
   01C0 36r52               470 	ld	(hl),#<_bulbs
   01C2 23                  471 	inc	hl
   01C3 36s19               472 	ld	(hl),#>_bulbs
   01C5 21rA9s16            473 	ld	hl, #_scenepointers + 6
   01C8 36rD5               474 	ld	(hl),#<_twister
   01CA 23                  475 	inc	hl
   01CB 36s17               476 	ld	(hl),#>_twister
   01CD 01rABs16            477 	ld	bc,#_scenepointers + 8
   01D0 69                  478 	ld	l,c
   01D1 60                  479 	ld	h,b
   01D2 36r05               480 	ld	(hl),#<_boxes
   01D4 23                  481 	inc	hl
   01D5 36s1F               482 	ld	(hl),#>_boxes
   01D7 21rADs16            483 	ld	hl, #_scenepointers + 10
   01DA 36r5D               484 	ld	(hl),#<_thewave
   01DC 23                  485 	inc	hl
   01DD 36s23               486 	ld	(hl),#>_thewave
   01DF 21rAFs16            487 	ld	hl, #_scenepointers + 12
   01E2 36r75               488 	ld	(hl),#<_tritiles
   01E4 23                  489 	inc	hl
   01E5 36s2B               490 	ld	(hl),#>_tritiles
   01E7 21rB1s16            491 	ld	hl, #_scenepointers + 14
   01EA 36rA2               492 	ld	(hl),#<_points
   01EC 23                  493 	inc	hl
   01ED 36s32               494 	ld	(hl),#>_points
   01EF 01rB3s16            495 	ld	bc,#_scenepointers + 16
   01F2 69                  496 	ld	l,c
   01F3 60                  497 	ld	h,b
   01F4 36r88               498 	ld	(hl),#<_bigtext
   01F6 23                  499 	inc	hl
   01F7 36s35               500 	ld	(hl),#>_bigtext
   01F9 01rB5s16            501 	ld	bc,#_scenepointers + 18
   01FC 69                  502 	ld	l,c
   01FD 60                  503 	ld	h,b
   01FE 36r75               504 	ld	(hl),#<_tritiles
   0200 23                  505 	inc	hl
   0201 36s2B               506 	ld	(hl),#>_tritiles
                            507 ;demo.c:212: int scenetimings[20] = {
   0203 21rB7s16            508 	ld	hl,#_scenetimings
   0206 CDr00s00            509 	call	__initrleblock
   0209 28                  510 	.db	40
   020A 00 00 AA 00 AA 00   511 	.db	0x00, 0x00, 0xAA, 0x00, 0xAA, 0x00, 0x5E, 0x01
        5E 01
   0212 EE 02 14 05 14 05   512 	.db	0xEE, 0x02, 0x14, 0x05, 0x14, 0x05, 0xFC, 0x08
        FC 08
   021A FC 08 10 0E 10 0E   513 	.db	0xFC, 0x08, 0x10, 0x0E, 0x10, 0x0E, 0x04, 0x10
        04 10
   0222 04 10 AE 15 AE 15   514 	.db	0x04, 0x10, 0xAE, 0x15, 0xAE, 0x15, 0xD4, 0x17
        D4 17
   022A D4 17 90 1A 90 1A   515 	.db	0xD4, 0x17, 0x90, 0x1A, 0x90, 0x1A, 0x40, 0x1F
        40 1F
   0232 00                  516 	.db	0
                            517 ;demo.c:423: uint8_t yofff = 0;
   0233 FD 21rE7s16         518 	ld	iy,#_yofff
   0237 FD 36 00 00         519 	ld	0 (iy),#0x00
                            520 ;demo.c:424: uint8_t cc = 0;
   023B FD 21rE8s16         521 	ld	iy,#_cc
   023F FD 36 00 00         522 	ld	0 (iy),#0x00
                            523 ;demo.c:425: static int flipper = 0;
   0243 FD 21rE9s16         524 	ld	iy,#_flipper
   0247 FD 36 00 00         525 	ld	0 (iy),#0x00
   024B FD 21rE9s16         526 	ld	iy,#_flipper
   024F FD 36 01 00         527 	ld	1 (iy),#0x00
                            528 ;demo.c:426: static int ymmmf = 0;
   0253 FD 21rEBs16         529 	ld	iy,#_ymmmf
   0257 FD 36 00 00         530 	ld	0 (iy),#0x00
   025B FD 21rEBs16         531 	ld	iy,#_ymmmf
   025F FD 36 01 00         532 	ld	1 (iy),#0x00
                            533 ;demo.c:457: char block_init = 0;
   0263 FD 21rEDs16         534 	ld	iy,#_block_init
   0267 FD 36 00 00         535 	ld	0 (iy),#0x00
                            536 ;demo.c:459: int bsx = 0;
   026B FD 21rEEs16         537 	ld	iy,#_bsx
   026F FD 36 00 00         538 	ld	0 (iy),#0x00
   0273 FD 21rEEs16         539 	ld	iy,#_bsx
   0277 FD 36 01 00         540 	ld	1 (iy),#0x00
                            541 ;demo.c:460: int bsy = 0;
   027B FD 21rF0s16         542 	ld	iy,#_bsy
   027F FD 36 00 00         543 	ld	0 (iy),#0x00
   0283 FD 21rF0s16         544 	ld	iy,#_bsy
   0287 FD 36 01 00         545 	ld	1 (iy),#0x00
                            546 ;demo.c:461: int btx = 0;
   028B FD 21rF2s16         547 	ld	iy,#_btx
   028F FD 36 00 00         548 	ld	0 (iy),#0x00
   0293 FD 21rF2s16         549 	ld	iy,#_btx
   0297 FD 36 01 00         550 	ld	1 (iy),#0x00
                            551 ;demo.c:462: int bty = 0;
   029B FD 21rF4s16         552 	ld	iy,#_bty
   029F FD 36 00 00         553 	ld	0 (iy),#0x00
   02A3 FD 21rF4s16         554 	ld	iy,#_bty
   02A7 FD 36 01 00         555 	ld	1 (iy),#0x00
                            556 ;demo.c:464: int btab[16] = {0};
   02AB 21rF6s16            557 	ld	hl,#_btab
   02AE CDr00s00            558 	call	__initrleblock
   02B1 E0 00               559 	.db	#-32,#0x00
   02B3 00                  560 	.db	0
                            561 ;demo.c:466: int flof = 0;
   02B4 FD 21r16s17         562 	ld	iy,#_flof
   02B8 FD 36 00 00         563 	ld	0 (iy),#0x00
   02BC FD 21r16s17         564 	ld	iy,#_flof
   02C0 FD 36 01 00         565 	ld	1 (iy),#0x00
                            566 ;demo.c:515: int linenum = 0;
   02C4 FD 21r18s17         567 	ld	iy,#_linenum
   02C8 FD 36 00 00         568 	ld	0 (iy),#0x00
   02CC FD 21r18s17         569 	ld	iy,#_linenum
   02D0 FD 36 01 00         570 	ld	1 (iy),#0x00
                            571 ;demo.c:573: uint8_t lx = 0;
   02D4 FD 21r1As17         572 	ld	iy,#_lx
   02D8 FD 36 00 00         573 	ld	0 (iy),#0x00
                            574 ;demo.c:574: uint8_t ly = 0;
   02DC FD 21r1Bs17         575 	ld	iy,#_ly
   02E0 FD 36 00 00         576 	ld	0 (iy),#0x00
                            577 ;demo.c:659: int ltrpointer = 0;
   02E4 FD 21r1Cs17         578 	ld	iy,#_ltrpointer
   02E8 FD 36 00 00         579 	ld	0 (iy),#0x00
   02EC FD 21r1Cs17         580 	ld	iy,#_ltrpointer
   02F0 FD 36 01 00         581 	ld	1 (iy),#0x00
                            582 ;demo.c:660: int slowend = 128;
   02F4 FD 21r1Es17         583 	ld	iy,#_slowend
   02F8 FD 36 00 80         584 	ld	0 (iy),#0x80
   02FC FD 21r1Es17         585 	ld	iy,#_slowend
   0300 FD 36 01 00         586 	ld	1 (iy),#0x00
                            587 ;demo.c:712: int ff = 0;
   0304 FD 21r20s17         588 	ld	iy,#_ff
   0308 FD 36 00 00         589 	ld	0 (iy),#0x00
   030C FD 21r20s17         590 	ld	iy,#_ff
   0310 FD 36 01 00         591 	ld	1 (iy),#0x00
                            592 ;demo.c:713: int twinited = 0;
   0314 FD 21r22s17         593 	ld	iy,#_twinited
   0318 FD 36 00 00         594 	ld	0 (iy),#0x00
   031C FD 21r22s17         595 	ld	iy,#_twinited
   0320 FD 36 01 00         596 	ld	1 (iy),#0x00
                            597 ;demo.c:765: int bulbflipper = 1;
   0324 FD 21r24s17         598 	ld	iy,#_bulbflipper
   0328 FD 36 00 01         599 	ld	0 (iy),#0x01
   032C FD 21r24s17         600 	ld	iy,#_bulbflipper
   0330 FD 36 01 00         601 	ld	1 (iy),#0x00
                            602 ;demo.c:767: int ff1,ff2 = 0;
   0334 FD 21r28s17         603 	ld	iy,#_ff2
   0338 FD 36 00 00         604 	ld	0 (iy),#0x00
   033C FD 21r28s17         605 	ld	iy,#_ff2
   0340 FD 36 01 00         606 	ld	1 (iy),#0x00
                            607 ;demo.c:768: int ender = 212;
   0344 FD 21r2As17         608 	ld	iy,#_ender
   0348 FD 36 00 D4         609 	ld	0 (iy),#0xD4
   034C FD 21r2As17         610 	ld	iy,#_ender
   0350 FD 36 01 00         611 	ld	1 (iy),#0x00
                            612 ;demo.c:769: int enderdir = -1;
   0354 FD 21r2Cs17         613 	ld	iy,#_enderdir
   0358 FD 36 00 FF         614 	ld	0 (iy),#0xFF
   035C FD 21r2Cs17         615 	ld	iy,#_enderdir
   0360 FD 36 01 FF         616 	ld	1 (iy),#0xFF
                            617 ;demo.c:770: int sy = 16;
   0364 FD 21r2Es17         618 	ld	iy,#_sy
   0368 FD 36 00 10         619 	ld	0 (iy),#0x10
   036C FD 21r2Es17         620 	ld	iy,#_sy
   0370 FD 36 01 00         621 	ld	1 (iy),#0x00
                            622 ;demo.c:826: static int xo = 0;
   0374 FD 21r30s17         623 	ld	iy,#_xo
   0378 FD 36 00 00         624 	ld	0 (iy),#0x00
   037C FD 21r30s17         625 	ld	iy,#_xo
   0380 FD 36 01 00         626 	ld	1 (iy),#0x00
                            627 ;demo.c:827: static int yo = 0;
   0384 FD 21r32s17         628 	ld	iy,#_yo
   0388 FD 36 00 00         629 	ld	0 (iy),#0x00
   038C FD 21r32s17         630 	ld	iy,#_yo
   0390 FD 36 01 00         631 	ld	1 (iy),#0x00
                            632 ;demo.c:828: static int po = 0;
   0394 FD 21r34s17         633 	ld	iy,#_po
   0398 FD 36 00 00         634 	ld	0 (iy),#0x00
   039C FD 21r34s17         635 	ld	iy,#_po
   03A0 FD 36 01 00         636 	ld	1 (iy),#0x00
                            637 ;demo.c:829: static int frames = 0;
   03A4 FD 21r36s17         638 	ld	iy,#_frames
   03A8 FD 36 00 00         639 	ld	0 (iy),#0x00
   03AC FD 21r36s17         640 	ld	iy,#_frames
   03B0 FD 36 01 00         641 	ld	1 (iy),#0x00
                            642 ;demo.c:831: int anim_init = 0;
   03B4 FD 21r38s17         643 	ld	iy,#_anim_init
   03B8 FD 36 00 00         644 	ld	0 (iy),#0x00
   03BC FD 21r38s17         645 	ld	iy,#_anim_init
   03C0 FD 36 01 00         646 	ld	1 (iy),#0x00
                            647 ;demo.c:931: uint8_t boxes_init = 0;
   03C4 FD 21r3As17         648 	ld	iy,#_boxes_init
   03C8 FD 36 00 00         649 	ld	0 (iy),#0x00
                            650 ;demo.c:932: int buffer = 1;
   03CC FD 21r3Bs17         651 	ld	iy,#_buffer
   03D0 FD 36 00 01         652 	ld	0 (iy),#0x01
   03D4 FD 21r3Bs17         653 	ld	iy,#_buffer
   03D8 FD 36 01 00         654 	ld	1 (iy),#0x00
                            655 ;demo.c:933: int prevx = -1;
   03DC FD 21r3Ds17         656 	ld	iy,#_prevx
   03E0 FD 36 00 FF         657 	ld	0 (iy),#0xFF
   03E4 FD 21r3Ds17         658 	ld	iy,#_prevx
   03E8 FD 36 01 FF         659 	ld	1 (iy),#0xFF
                            660 ;demo.c:935: uint8_t boxes_x[5] = {0,36,0,36,0};
   03EC 21r41s17            661 	ld	hl,#_boxes_x
   03EF CDr00s00            662 	call	__initrleblock
   03F2 05                  663 	.db	5
   03F3 00 24 00 24 00      664 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   03F8 00                  665 	.db	0
                            666 ;demo.c:936: int boxes_y[5] = {768,768,768+36,768+36,0};
   03F9 21r46s17            667 	ld	hl,#_boxes_y
   03FC CDr00s00            668 	call	__initrleblock
   03FF 0A                  669 	.db	10
   0400 00 03 00 03 24 03   670 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   0408 00 00               671 	.db	0x00, 0x00
   040A 00                  672 	.db	0
                            673 ;demo.c:937: uint8_t boxi = 0;
   040B FD 21r50s17         674 	ld	iy,#_boxi
   040F FD 36 00 00         675 	ld	0 (iy),#0x00
                            676 ;demo.c:938: int bx = 220;
   0413 FD 21r51s17         677 	ld	iy,#_bx
   0417 FD 36 00 DC         678 	ld	0 (iy),#0xDC
   041B FD 21r51s17         679 	ld	iy,#_bx
   041F FD 36 01 00         680 	ld	1 (iy),#0x00
                            681 ;demo.c:939: int by = 84;
   0423 FD 21r53s17         682 	ld	iy,#_by
   0427 FD 36 00 54         683 	ld	0 (iy),#0x54
   042B FD 21r53s17         684 	ld	iy,#_by
   042F FD 36 01 00         685 	ld	1 (iy),#0x00
                            686 ;demo.c:957: int bt = 0;
   0433 FD 21r55s17         687 	ld	iy,#_bt
   0437 FD 36 00 00         688 	ld	0 (iy),#0x00
   043B FD 21r55s17         689 	ld	iy,#_bt
   043F FD 36 01 00         690 	ld	1 (iy),#0x00
                            691 ;demo.c:958: int bo = 0;
   0443 FD 21r57s17         692 	ld	iy,#_bo
   0447 FD 36 00 00         693 	ld	0 (iy),#0x00
   044B FD 21r57s17         694 	ld	iy,#_bo
   044F FD 36 01 00         695 	ld	1 (iy),#0x00
                            696 ;demo.c:960: int bonc = 0;
   0453 FD 21r59s17         697 	ld	iy,#_bonc
   0457 FD 36 00 00         698 	ld	0 (iy),#0x00
   045B FD 21r59s17         699 	ld	iy,#_bonc
   045F FD 36 01 00         700 	ld	1 (iy),#0x00
                            701 ;demo.c:961: int pbx = 0;
   0463 FD 21r5Bs17         702 	ld	iy,#_pbx
   0467 FD 36 00 00         703 	ld	0 (iy),#0x00
   046B FD 21r5Bs17         704 	ld	iy,#_pbx
   046F FD 36 01 00         705 	ld	1 (iy),#0x00
                            706 ;demo.c:962: int pbt = 0;
   0473 FD 21r5Ds17         707 	ld	iy,#_pbt
   0477 FD 36 00 00         708 	ld	0 (iy),#0x00
   047B FD 21r5Ds17         709 	ld	iy,#_pbt
   047F FD 36 01 00         710 	ld	1 (iy),#0x00
                            711 ;demo.c:964: int boxes_of[5] = {0,0,6,0,0};
   0483 21r5Fs17            712 	ld	hl,#_boxes_of
   0486 CDr00s00            713 	call	__initrleblock
   0489 05                  714 	.db	5
   048A 00 00 00 00 06      715 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   048F FB 00               716 	.db	#-5,#0x00
   0491 00                  717 	.db	0
                            718 ;demo.c:965: uint8_t prevbox_of = 0;
   0492 FD 21r69s17         719 	ld	iy,#_prevbox_of
   0496 FD 36 00 00         720 	ld	0 (iy),#0x00
                            721 ;demo.c:1080: uint8_t initwave = 0;
   049A FD 21r6As17         722 	ld	iy,#_initwave
   049E FD 36 00 00         723 	ld	0 (iy),#0x00
                            724 ;demo.c:1081: int buf = -1;
   04A2 FD 21r6Bs17         725 	ld	iy,#_buf
   04A6 FD 36 00 FF         726 	ld	0 (iy),#0xFF
   04AA FD 21r6Bs17         727 	ld	iy,#_buf
   04AE FD 36 01 FF         728 	ld	1 (iy),#0xFF
                            729 ;demo.c:1082: int ffa = 0;
   04B2 FD 21r6Ds17         730 	ld	iy,#_ffa
   04B6 FD 36 00 00         731 	ld	0 (iy),#0x00
   04BA FD 21r6Ds17         732 	ld	iy,#_ffa
   04BE FD 36 01 00         733 	ld	1 (iy),#0x00
                            734 ;demo.c:1202: uint8_t tri_inited = 0;
   04C2 FD 21r6Fs17         735 	ld	iy,#_tri_inited
   04C6 FD 36 00 00         736 	ld	0 (iy),#0x00
                            737 ;demo.c:1217: int tilei = 0;
   04CA FD 21r70s17         738 	ld	iy,#_tilei
   04CE FD 36 00 00         739 	ld	0 (iy),#0x00
   04D2 FD 21r70s17         740 	ld	iy,#_tilei
   04D6 FD 36 01 00         741 	ld	1 (iy),#0x00
                            742 ;demo.c:1218: int tilex = 0;
   04DA FD 21r72s17         743 	ld	iy,#_tilex
   04DE FD 36 00 00         744 	ld	0 (iy),#0x00
   04E2 FD 21r72s17         745 	ld	iy,#_tilex
   04E6 FD 36 01 00         746 	ld	1 (iy),#0x00
                            747 ;demo.c:1219: int tiley = 0;
   04EA FD 21r74s17         748 	ld	iy,#_tiley
   04EE FD 36 00 00         749 	ld	0 (iy),#0x00
   04F2 FD 21r74s17         750 	ld	iy,#_tiley
   04F6 FD 36 01 00         751 	ld	1 (iy),#0x00
                            752 ;demo.c:1220: uint8_t tiletick = 0;
   04FA FD 21r76s17         753 	ld	iy,#_tiletick
   04FE FD 36 00 00         754 	ld	0 (iy),#0x00
                            755 ;demo.c:1250: char tripal[9] = {
   0502 21r77s17            756 	ld	hl,#_tripal
   0505 CDr00s00            757 	call	__initrleblock
   0508 09                  758 	.db	9
   0509 02 02 01 01 02 03   759 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0511 02                  760 	.db	0x02
   0512 00                  761 	.db	0
                            762 ;demo.c:1256: uint8_t tripaltick = 0;
   0513 FD 21r80s17         763 	ld	iy,#_tripaltick
   0517 FD 36 00 00         764 	ld	0 (iy),#0x00
                            765 ;demo.c:1257: uint8_t tripaltick2 = 0;
   051B FD 21r81s17         766 	ld	iy,#_tripaltick2
   051F FD 36 00 00         767 	ld	0 (iy),#0x00
                            768 ;demo.c:1259: int triframes = 0;
   0523 FD 21r82s17         769 	ld	iy,#_triframes
   0527 FD 36 00 00         770 	ld	0 (iy),#0x00
   052B FD 21r82s17         771 	ld	iy,#_triframes
   052F FD 36 01 00         772 	ld	1 (iy),#0x00
                            773 ;demo.c:1401: int powatick = 0;
   0533 FD 21r84s17         774 	ld	iy,#_powatick
   0537 FD 36 00 00         775 	ld	0 (iy),#0x00
   053B FD 21r84s17         776 	ld	iy,#_powatick
   053F FD 36 01 00         777 	ld	1 (iy),#0x00
                            778 ;demo.c:1402: int powa = 0;
   0543 FD 21r86s17         779 	ld	iy,#_powa
   0547 FD 36 00 00         780 	ld	0 (iy),#0x00
   054B FD 21r86s17         781 	ld	iy,#_powa
   054F FD 36 01 00         782 	ld	1 (iy),#0x00
                            783 ;demo.c:1403: uint8_t onceclear = 255;
   0553 FD 21r88s17         784 	ld	iy,#_onceclear
   0557 FD 36 00 FF         785 	ld	0 (iy),#0xFF
                            786 ;demo.c:1448: uint8_t initpoints = 0;
   055B FD 21r89s17         787 	ld	iy,#_initpoints
   055F FD 36 00 00         788 	ld	0 (iy),#0x00
                            789 ;demo.c:1449: int pointframe = 0;
   0563 FD 21r8As17         790 	ld	iy,#_pointframe
   0567 FD 36 00 00         791 	ld	0 (iy),#0x00
   056B FD 21r8As17         792 	ld	iy,#_pointframe
   056F FD 36 01 00         793 	ld	1 (iy),#0x00
                            794 ;demo.c:1452: int greetindex = 0;
   0573 FD 21r8Cs17         795 	ld	iy,#_greetindex
   0577 FD 36 00 00         796 	ld	0 (iy),#0x00
   057B FD 21r8Cs17         797 	ld	iy,#_greetindex
   057F FD 36 01 00         798 	ld	1 (iy),#0x00
                            799 ;demo.c:1530: int bigtextp = 0;
   0583 FD 21r8Es17         800 	ld	iy,#_bigtextp
   0587 FD 36 00 00         801 	ld	0 (iy),#0x00
   058B FD 21r8Es17         802 	ld	iy,#_bigtextp
   058F FD 36 01 00         803 	ld	1 (iy),#0x00
                            804 ;demo.c:1594: int sceneindex = 0;
   0593 FD 21r90s17         805 	ld	iy,#_sceneindex
   0597 FD 36 00 00         806 	ld	0 (iy),#0x00
   059B FD 21r90s17         807 	ld	iy,#_sceneindex
   059F FD 36 01 00         808 	ld	1 (iy),#0x00
                            809 ;demo.c:1595: int timeindex = 0;
   05A3 FD 21r92s17         810 	ld	iy,#_timeindex
   05A7 FD 36 00 00         811 	ld	0 (iy),#0x00
   05AB FD 21r92s17         812 	ld	iy,#_timeindex
   05AF FD 36 01 00         813 	ld	1 (iy),#0x00
                            814 ;--------------------------------------------------------
                            815 ; Home
                            816 ;--------------------------------------------------------
                            817 	.area _HOME
                            818 	.area _HOME
                            819 ;--------------------------------------------------------
                            820 ; code
                            821 ;--------------------------------------------------------
                            822 	.area _CODE
                            823 ;demo.c:227: int isNthBitSet (unsigned char c, int n) {
                            824 ;	---------------------------------
                            825 ; Function isNthBitSet
                            826 ; ---------------------------------
   0000                     827 _isNthBitSet_start::
   0000                     828 _isNthBitSet:
   0000 DD E5               829 	push	ix
   0002 DD 21 00 00         830 	ld	ix,#0
   0006 DD 39               831 	add	ix,sp
                            832 ;demo.c:229: return ((c & mask[n]) != 0);
   0008 3ErDF               833 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            834 	add	a,5 (ix)
   000D 4F                  835 	ld	c,a
   000E 3Es16               836 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            837 	adc	a,6 (ix)
   0013 47                  838 	ld	b,a
   0014 0A                  839 	ld	a,(bc)
   0015 DD A6 04            840 	and	a,4 (ix)
   0018 20 04               841 	jr	NZ,00103$
   001A 3E 01               842 	ld	a,#0x01
   001C 18 01               843 	jr	00104$
   001E                     844 00103$:
   001E AF                  845 	xor	a,a
   001F                     846 00104$:
   001F B7                  847 	or	a,a
   0020 D6 01               848 	sub	a,#0x01
   0022 3E 00               849 	ld	a,#0x00
   0024 17                  850 	rla
   0025 4F                  851 	ld	c,a
   0026 69                  852 	ld	l,c
   0027 26 00               853 	ld	h,#0x00
   0029 DD E1               854 	pop	ix
   002B C9                  855 	ret
   002C                     856 _isNthBitSet_end::
   002C                     857 _sintabx:
   002C 78                  858 	.db #0x78
   002D 7A                  859 	.db #0x7A
   002E 7D                  860 	.db #0x7D
   002F 80                  861 	.db #0x80
   0030 83                  862 	.db #0x83
   0031 86                  863 	.db #0x86
   0032 89                  864 	.db #0x89
   0033 8C                  865 	.db #0x8C
   0034 8F                  866 	.db #0x8F
   0035 92                  867 	.db #0x92
   0036 95                  868 	.db #0x95
   0037 98                  869 	.db #0x98
   0038 9A                  870 	.db #0x9A
   0039 9D                  871 	.db #0x9D
   003A A0                  872 	.db #0xA0
   003B A3                  873 	.db #0xA3
   003C A5                  874 	.db #0xA5
   003D A8                  875 	.db #0xA8
   003E AB                  876 	.db #0xAB
   003F AD                  877 	.db #0xAD
   0040 B0                  878 	.db #0xB0
   0041 B3                  879 	.db #0xB3
   0042 B5                  880 	.db #0xB5
   0043 B8                  881 	.db #0xB8
   0044 BA                  882 	.db #0xBA
   0045 BD                  883 	.db #0xBD
   0046 BF                  884 	.db #0xBF
   0047 C1                  885 	.db #0xC1
   0048 C4                  886 	.db #0xC4
   0049 C6                  887 	.db #0xC6
   004A C8                  888 	.db #0xC8
   004B CA                  889 	.db #0xCA
   004C CC                  890 	.db #0xCC
   004D CE                  891 	.db #0xCE
   004E D0                  892 	.db #0xD0
   004F D2                  893 	.db #0xD2
   0050 D4                  894 	.db #0xD4
   0051 D6                  895 	.db #0xD6
   0052 D8                  896 	.db #0xD8
   0053 DA                  897 	.db #0xDA
   0054 DB                  898 	.db #0xDB
   0055 DD                  899 	.db #0xDD
   0056 DE                  900 	.db #0xDE
   0057 E0                  901 	.db #0xE0
   0058 E1                  902 	.db #0xE1
   0059 E3                  903 	.db #0xE3
   005A E4                  904 	.db #0xE4
   005B E5                  905 	.db #0xE5
   005C E6                  906 	.db #0xE6
   005D E7                  907 	.db #0xE7
   005E E8                  908 	.db #0xE8
   005F E9                  909 	.db #0xE9
   0060 EA                  910 	.db #0xEA
   0061 EB                  911 	.db #0xEB
   0062 EC                  912 	.db #0xEC
   0063 ED                  913 	.db #0xED
   0064 ED                  914 	.db #0xED
   0065 EE                  915 	.db #0xEE
   0066 EE                  916 	.db #0xEE
   0067 EF                  917 	.db #0xEF
   0068 EF                  918 	.db #0xEF
   0069 EF                  919 	.db #0xEF
   006A EF                  920 	.db #0xEF
   006B EF                  921 	.db #0xEF
   006C F0                  922 	.db #0xF0
   006D EF                  923 	.db #0xEF
   006E EF                  924 	.db #0xEF
   006F EF                  925 	.db #0xEF
   0070 EF                  926 	.db #0xEF
   0071 EF                  927 	.db #0xEF
   0072 EE                  928 	.db #0xEE
   0073 EE                  929 	.db #0xEE
   0074 ED                  930 	.db #0xED
   0075 ED                  931 	.db #0xED
   0076 EC                  932 	.db #0xEC
   0077 EB                  933 	.db #0xEB
   0078 EA                  934 	.db #0xEA
   0079 E9                  935 	.db #0xE9
   007A E8                  936 	.db #0xE8
   007B E7                  937 	.db #0xE7
   007C E6                  938 	.db #0xE6
   007D E5                  939 	.db #0xE5
   007E E4                  940 	.db #0xE4
   007F E3                  941 	.db #0xE3
   0080 E1                  942 	.db #0xE1
   0081 E0                  943 	.db #0xE0
   0082 DE                  944 	.db #0xDE
   0083 DD                  945 	.db #0xDD
   0084 DB                  946 	.db #0xDB
   0085 DA                  947 	.db #0xDA
   0086 D8                  948 	.db #0xD8
   0087 D6                  949 	.db #0xD6
   0088 D4                  950 	.db #0xD4
   0089 D2                  951 	.db #0xD2
   008A D0                  952 	.db #0xD0
   008B CE                  953 	.db #0xCE
   008C CC                  954 	.db #0xCC
   008D CA                  955 	.db #0xCA
   008E C8                  956 	.db #0xC8
   008F C6                  957 	.db #0xC6
   0090 C4                  958 	.db #0xC4
   0091 C1                  959 	.db #0xC1
   0092 BF                  960 	.db #0xBF
   0093 BD                  961 	.db #0xBD
   0094 BA                  962 	.db #0xBA
   0095 B8                  963 	.db #0xB8
   0096 B5                  964 	.db #0xB5
   0097 B3                  965 	.db #0xB3
   0098 B0                  966 	.db #0xB0
   0099 AD                  967 	.db #0xAD
   009A AB                  968 	.db #0xAB
   009B A8                  969 	.db #0xA8
   009C A5                  970 	.db #0xA5
   009D A3                  971 	.db #0xA3
   009E A0                  972 	.db #0xA0
   009F 9D                  973 	.db #0x9D
   00A0 9A                  974 	.db #0x9A
   00A1 98                  975 	.db #0x98
   00A2 95                  976 	.db #0x95
   00A3 92                  977 	.db #0x92
   00A4 8F                  978 	.db #0x8F
   00A5 8C                  979 	.db #0x8C
   00A6 89                  980 	.db #0x89
   00A7 86                  981 	.db #0x86
   00A8 83                  982 	.db #0x83
   00A9 80                  983 	.db #0x80
   00AA 7D                  984 	.db #0x7D
   00AB 7A                  985 	.db #0x7A
   00AC 78                  986 	.db #0x78
   00AD 75                  987 	.db #0x75
   00AE 72                  988 	.db #0x72
   00AF 6F                  989 	.db #0x6F
   00B0 6C                  990 	.db #0x6C
   00B1 69                  991 	.db #0x69
   00B2 66                  992 	.db #0x66
   00B3 63                  993 	.db #0x63
   00B4 60                  994 	.db #0x60
   00B5 5D                  995 	.db #0x5D
   00B6 5A                  996 	.db #0x5A
   00B7 57                  997 	.db #0x57
   00B8 55                  998 	.db #0x55
   00B9 52                  999 	.db #0x52
   00BA 4F                 1000 	.db #0x4F
   00BB 4C                 1001 	.db #0x4C
   00BC 4A                 1002 	.db #0x4A
   00BD 47                 1003 	.db #0x47
   00BE 44                 1004 	.db #0x44
   00BF 42                 1005 	.db #0x42
   00C0 3F                 1006 	.db #0x3F
   00C1 3C                 1007 	.db #0x3C
   00C2 3A                 1008 	.db #0x3A
   00C3 37                 1009 	.db #0x37
   00C4 35                 1010 	.db #0x35
   00C5 32                 1011 	.db #0x32
   00C6 30                 1012 	.db #0x30
   00C7 2E                 1013 	.db #0x2E
   00C8 2B                 1014 	.db #0x2B
   00C9 29                 1015 	.db #0x29
   00CA 27                 1016 	.db #0x27
   00CB 25                 1017 	.db #0x25
   00CC 23                 1018 	.db #0x23
   00CD 21                 1019 	.db #0x21
   00CE 1F                 1020 	.db #0x1F
   00CF 1D                 1021 	.db #0x1D
   00D0 1B                 1022 	.db #0x1B
   00D1 19                 1023 	.db #0x19
   00D2 17                 1024 	.db #0x17
   00D3 15                 1025 	.db #0x15
   00D4 14                 1026 	.db #0x14
   00D5 12                 1027 	.db #0x12
   00D6 11                 1028 	.db #0x11
   00D7 0F                 1029 	.db #0x0F
   00D8 0E                 1030 	.db #0x0E
   00D9 0C                 1031 	.db #0x0C
   00DA 0B                 1032 	.db #0x0B
   00DB 0A                 1033 	.db #0x0A
   00DC 09                 1034 	.db #0x09
   00DD 08                 1035 	.db #0x08
   00DE 07                 1036 	.db #0x07
   00DF 06                 1037 	.db #0x06
   00E0 05                 1038 	.db #0x05
   00E1 04                 1039 	.db #0x04
   00E2 03                 1040 	.db #0x03
   00E3 02                 1041 	.db #0x02
   00E4 02                 1042 	.db #0x02
   00E5 01                 1043 	.db #0x01
   00E6 01                 1044 	.db #0x01
   00E7 00                 1045 	.db #0x00
   00E8 00                 1046 	.db #0x00
   00E9 00                 1047 	.db #0x00
   00EA 00                 1048 	.db #0x00
   00EB 00                 1049 	.db #0x00
   00EC 00                 1050 	.db #0x00
   00ED 00                 1051 	.db #0x00
   00EE 00                 1052 	.db #0x00
   00EF 00                 1053 	.db #0x00
   00F0 00                 1054 	.db #0x00
   00F1 00                 1055 	.db #0x00
   00F2 01                 1056 	.db #0x01
   00F3 01                 1057 	.db #0x01
   00F4 02                 1058 	.db #0x02
   00F5 02                 1059 	.db #0x02
   00F6 03                 1060 	.db #0x03
   00F7 04                 1061 	.db #0x04
   00F8 05                 1062 	.db #0x05
   00F9 06                 1063 	.db #0x06
   00FA 07                 1064 	.db #0x07
   00FB 08                 1065 	.db #0x08
   00FC 09                 1066 	.db #0x09
   00FD 0A                 1067 	.db #0x0A
   00FE 0B                 1068 	.db #0x0B
   00FF 0C                 1069 	.db #0x0C
   0100 0E                 1070 	.db #0x0E
   0101 0F                 1071 	.db #0x0F
   0102 11                 1072 	.db #0x11
   0103 12                 1073 	.db #0x12
   0104 14                 1074 	.db #0x14
   0105 15                 1075 	.db #0x15
   0106 17                 1076 	.db #0x17
   0107 19                 1077 	.db #0x19
   0108 1B                 1078 	.db #0x1B
   0109 1D                 1079 	.db #0x1D
   010A 1F                 1080 	.db #0x1F
   010B 21                 1081 	.db #0x21
   010C 23                 1082 	.db #0x23
   010D 25                 1083 	.db #0x25
   010E 27                 1084 	.db #0x27
   010F 29                 1085 	.db #0x29
   0110 2B                 1086 	.db #0x2B
   0111 2E                 1087 	.db #0x2E
   0112 30                 1088 	.db #0x30
   0113 32                 1089 	.db #0x32
   0114 35                 1090 	.db #0x35
   0115 37                 1091 	.db #0x37
   0116 3A                 1092 	.db #0x3A
   0117 3C                 1093 	.db #0x3C
   0118 3F                 1094 	.db #0x3F
   0119 42                 1095 	.db #0x42
   011A 44                 1096 	.db #0x44
   011B 47                 1097 	.db #0x47
   011C 4A                 1098 	.db #0x4A
   011D 4C                 1099 	.db #0x4C
   011E 4F                 1100 	.db #0x4F
   011F 52                 1101 	.db #0x52
   0120 55                 1102 	.db #0x55
   0121 57                 1103 	.db #0x57
   0122 5A                 1104 	.db #0x5A
   0123 5D                 1105 	.db #0x5D
   0124 60                 1106 	.db #0x60
   0125 63                 1107 	.db #0x63
   0126 66                 1108 	.db #0x66
   0127 69                 1109 	.db #0x69
   0128 6C                 1110 	.db #0x6C
   0129 6F                 1111 	.db #0x6F
   012A 72                 1112 	.db #0x72
   012B 75                 1113 	.db #0x75
   012C                    1114 _tri_center:
   012C 08                 1115 	.db #0x08
   012D 0A                 1116 	.db #0x0A
   012E 12                 1117 	.db #0x12
   012F 10                 1118 	.db #0x10
   0130 00                 1119 	.db #0x00
   0131 02                 1120 	.db #0x02
   0132 08                 1121 	.db #0x08
   0133 0A                 1122 	.db #0x0A
   0134 0B                 1123 	.db #0x0B
   0135 09                 1124 	.db #0x09
   0136 03                 1125 	.db #0x03
   0137 01                 1126 	.db #0x01
   0138 11                 1127 	.db #0x11
   0139 13                 1128 	.db #0x13
   013A 0B                 1129 	.db #0x0B
   013B 09                 1130 	.db #0x09
   013C 0A                 1131 	.db #0x0A
   013D 12                 1132 	.db #0x12
   013E 10                 1133 	.db #0x10
   013F 00                 1134 	.db #0x00
   0140 02                 1135 	.db #0x02
   0141 08                 1136 	.db #0x08
   0142 0A                 1137 	.db #0x0A
   0143 12                 1138 	.db #0x12
   0144 13                 1139 	.db #0x13
   0145 0B                 1140 	.db #0x0B
   0146 09                 1141 	.db #0x09
   0147 03                 1142 	.db #0x03
   0148 01                 1143 	.db #0x01
   0149 11                 1144 	.db #0x11
   014A 13                 1145 	.db #0x13
   014B 0B                 1146 	.db #0x0B
   014C 12                 1147 	.db #0x12
   014D 10                 1148 	.db #0x10
   014E 00                 1149 	.db #0x00
   014F 02                 1150 	.db #0x02
   0150 08                 1151 	.db #0x08
   0151 0A                 1152 	.db #0x0A
   0152 12                 1153 	.db #0x12
   0153 10                 1154 	.db #0x10
   0154 11                 1155 	.db #0x11
   0155 13                 1156 	.db #0x13
   0156 0B                 1157 	.db #0x0B
   0157 09                 1158 	.db #0x09
   0158 03                 1159 	.db #0x03
   0159 01                 1160 	.db #0x01
   015A 11                 1161 	.db #0x11
   015B 13                 1162 	.db #0x13
   015C 10                 1163 	.db #0x10
   015D 00                 1164 	.db #0x00
   015E 02                 1165 	.db #0x02
   015F 08                 1166 	.db #0x08
   0160 0A                 1167 	.db #0x0A
   0161 12                 1168 	.db #0x12
   0162 10                 1169 	.db #0x10
   0163 00                 1170 	.db #0x00
   0164 01                 1171 	.db #0x01
   0165 11                 1172 	.db #0x11
   0166 13                 1173 	.db #0x13
   0167 0B                 1174 	.db #0x0B
   0168 09                 1175 	.db #0x09
   0169 03                 1176 	.db #0x03
   016A 01                 1177 	.db #0x01
   016B 11                 1178 	.db #0x11
   016C 00                 1179 	.db #0x00
   016D 02                 1180 	.db #0x02
   016E 08                 1181 	.db #0x08
   016F 0A                 1182 	.db #0x0A
   0170 12                 1183 	.db #0x12
   0171 10                 1184 	.db #0x10
   0172 00                 1185 	.db #0x00
   0173 02                 1186 	.db #0x02
   0174 03                 1187 	.db #0x03
   0175 01                 1188 	.db #0x01
   0176 11                 1189 	.db #0x11
   0177 13                 1190 	.db #0x13
   0178 0B                 1191 	.db #0x0B
   0179 09                 1192 	.db #0x09
   017A 03                 1193 	.db #0x03
   017B 01                 1194 	.db #0x01
   017C 02                 1195 	.db #0x02
   017D 08                 1196 	.db #0x08
   017E 0A                 1197 	.db #0x0A
   017F 12                 1198 	.db #0x12
   0180 10                 1199 	.db #0x10
   0181 00                 1200 	.db #0x00
   0182 02                 1201 	.db #0x02
   0183 08                 1202 	.db #0x08
   0184 09                 1203 	.db #0x09
   0185 03                 1204 	.db #0x03
   0186 01                 1205 	.db #0x01
   0187 11                 1206 	.db #0x11
   0188 13                 1207 	.db #0x13
   0189 0B                 1208 	.db #0x0B
   018A 09                 1209 	.db #0x09
   018B 03                 1210 	.db #0x03
   018C 01                 1211 	.db #0x01
   018D 0B                 1212 	.db #0x0B
   018E 09                 1213 	.db #0x09
   018F 11                 1214 	.db #0x11
   0190 13                 1215 	.db #0x13
   0191 03                 1216 	.db #0x03
   0192 01                 1217 	.db #0x01
   0193 0B                 1218 	.db #0x0B
   0194 0A                 1219 	.db #0x0A
   0195 00                 1220 	.db #0x00
   0196 02                 1221 	.db #0x02
   0197 12                 1222 	.db #0x12
   0198 10                 1223 	.db #0x10
   0199 08                 1224 	.db #0x08
   019A 0A                 1225 	.db #0x0A
   019B 00                 1226 	.db #0x00
   019C 03                 1227 	.db #0x03
   019D 01                 1228 	.db #0x01
   019E 0B                 1229 	.db #0x0B
   019F 09                 1230 	.db #0x09
   01A0 11                 1231 	.db #0x11
   01A1 13                 1232 	.db #0x13
   01A2 03                 1233 	.db #0x03
   01A3 01                 1234 	.db #0x01
   01A4 00                 1235 	.db #0x00
   01A5 02                 1236 	.db #0x02
   01A6 12                 1237 	.db #0x12
   01A7 10                 1238 	.db #0x10
   01A8 08                 1239 	.db #0x08
   01A9 0A                 1240 	.db #0x0A
   01AA 00                 1241 	.db #0x00
   01AB 02                 1242 	.db #0x02
   01AC 13                 1243 	.db #0x13
   01AD 03                 1244 	.db #0x03
   01AE 01                 1245 	.db #0x01
   01AF 0B                 1246 	.db #0x0B
   01B0 09                 1247 	.db #0x09
   01B1 11                 1248 	.db #0x11
   01B2 13                 1249 	.db #0x13
   01B3 03                 1250 	.db #0x03
   01B4 02                 1251 	.db #0x02
   01B5 12                 1252 	.db #0x12
   01B6 10                 1253 	.db #0x10
   01B7 08                 1254 	.db #0x08
   01B8 0A                 1255 	.db #0x0A
   01B9 00                 1256 	.db #0x00
   01BA 02                 1257 	.db #0x02
   01BB 12                 1258 	.db #0x12
   01BC 11                 1259 	.db #0x11
   01BD 13                 1260 	.db #0x13
   01BE 03                 1261 	.db #0x03
   01BF 01                 1262 	.db #0x01
   01C0 0B                 1263 	.db #0x0B
   01C1 09                 1264 	.db #0x09
   01C2 11                 1265 	.db #0x11
   01C3 13                 1266 	.db #0x13
   01C4 12                 1267 	.db #0x12
   01C5 10                 1268 	.db #0x10
   01C6 08                 1269 	.db #0x08
   01C7 0A                 1270 	.db #0x0A
   01C8 00                 1271 	.db #0x00
   01C9 02                 1272 	.db #0x02
   01CA 12                 1273 	.db #0x12
   01CB 10                 1274 	.db #0x10
   01CC 09                 1275 	.db #0x09
   01CD 11                 1276 	.db #0x11
   01CE 13                 1277 	.db #0x13
   01CF 03                 1278 	.db #0x03
   01D0 01                 1279 	.db #0x01
   01D1 0B                 1280 	.db #0x0B
   01D2 09                 1281 	.db #0x09
   01D3 11                 1282 	.db #0x11
   01D4 10                 1283 	.db #0x10
   01D5 08                 1284 	.db #0x08
   01D6 0A                 1285 	.db #0x0A
   01D7 00                 1286 	.db #0x00
   01D8 02                 1287 	.db #0x02
   01D9 12                 1288 	.db #0x12
   01DA 10                 1289 	.db #0x10
   01DB 08                 1290 	.db #0x08
   01DC 0B                 1291 	.db #0x0B
   01DD 09                 1292 	.db #0x09
   01DE 11                 1293 	.db #0x11
   01DF 13                 1294 	.db #0x13
   01E0 03                 1295 	.db #0x03
   01E1 01                 1296 	.db #0x01
   01E2 0B                 1297 	.db #0x0B
   01E3 09                 1298 	.db #0x09
   01E4 08                 1299 	.db #0x08
   01E5 0A                 1300 	.db #0x0A
   01E6 00                 1301 	.db #0x00
   01E7 02                 1302 	.db #0x02
   01E8 12                 1303 	.db #0x12
   01E9 10                 1304 	.db #0x10
   01EA 08                 1305 	.db #0x08
   01EB 0A                 1306 	.db #0x0A
   01EC                    1307 _tri_up:
   01EC 0A                 1308 	.db #0x0A
   01ED 12                 1309 	.db #0x12
   01EE 10                 1310 	.db #0x10
   01EF 00                 1311 	.db #0x00
   01F0 02                 1312 	.db #0x02
   01F1 08                 1313 	.db #0x08
   01F2 0A                 1314 	.db #0x0A
   01F3 12                 1315 	.db #0x12
   01F4 13                 1316 	.db #0x13
   01F5 0B                 1317 	.db #0x0B
   01F6 09                 1318 	.db #0x09
   01F7 03                 1319 	.db #0x03
   01F8 01                 1320 	.db #0x01
   01F9 11                 1321 	.db #0x11
   01FA 13                 1322 	.db #0x13
   01FB 0B                 1323 	.db #0x0B
   01FC 12                 1324 	.db #0x12
   01FD 10                 1325 	.db #0x10
   01FE 00                 1326 	.db #0x00
   01FF 02                 1327 	.db #0x02
   0200 08                 1328 	.db #0x08
   0201 0A                 1329 	.db #0x0A
   0202 12                 1330 	.db #0x12
   0203 10                 1331 	.db #0x10
   0204 11                 1332 	.db #0x11
   0205 13                 1333 	.db #0x13
   0206 0B                 1334 	.db #0x0B
   0207 09                 1335 	.db #0x09
   0208 03                 1336 	.db #0x03
   0209 01                 1337 	.db #0x01
   020A 11                 1338 	.db #0x11
   020B 13                 1339 	.db #0x13
   020C 10                 1340 	.db #0x10
   020D 00                 1341 	.db #0x00
   020E 02                 1342 	.db #0x02
   020F 08                 1343 	.db #0x08
   0210 0A                 1344 	.db #0x0A
   0211 12                 1345 	.db #0x12
   0212 10                 1346 	.db #0x10
   0213 00                 1347 	.db #0x00
   0214 01                 1348 	.db #0x01
   0215 11                 1349 	.db #0x11
   0216 13                 1350 	.db #0x13
   0217 0B                 1351 	.db #0x0B
   0218 09                 1352 	.db #0x09
   0219 03                 1353 	.db #0x03
   021A 01                 1354 	.db #0x01
   021B 11                 1355 	.db #0x11
   021C 00                 1356 	.db #0x00
   021D 02                 1357 	.db #0x02
   021E 08                 1358 	.db #0x08
   021F 0A                 1359 	.db #0x0A
   0220 12                 1360 	.db #0x12
   0221 10                 1361 	.db #0x10
   0222 00                 1362 	.db #0x00
   0223 02                 1363 	.db #0x02
   0224 03                 1364 	.db #0x03
   0225 01                 1365 	.db #0x01
   0226 11                 1366 	.db #0x11
   0227 13                 1367 	.db #0x13
   0228 0B                 1368 	.db #0x0B
   0229 09                 1369 	.db #0x09
   022A 03                 1370 	.db #0x03
   022B 01                 1371 	.db #0x01
   022C 02                 1372 	.db #0x02
   022D 08                 1373 	.db #0x08
   022E 0A                 1374 	.db #0x0A
   022F 12                 1375 	.db #0x12
   0230 10                 1376 	.db #0x10
   0231 00                 1377 	.db #0x00
   0232 02                 1378 	.db #0x02
   0233 08                 1379 	.db #0x08
   0234 09                 1380 	.db #0x09
   0235 03                 1381 	.db #0x03
   0236 01                 1382 	.db #0x01
   0237 11                 1383 	.db #0x11
   0238 13                 1384 	.db #0x13
   0239 0B                 1385 	.db #0x0B
   023A 09                 1386 	.db #0x09
   023B 03                 1387 	.db #0x03
   023C 08                 1388 	.db #0x08
   023D 0A                 1389 	.db #0x0A
   023E 12                 1390 	.db #0x12
   023F 10                 1391 	.db #0x10
   0240 00                 1392 	.db #0x00
   0241 02                 1393 	.db #0x02
   0242 08                 1394 	.db #0x08
   0243 0A                 1395 	.db #0x0A
   0244 0B                 1396 	.db #0x0B
   0245 09                 1397 	.db #0x09
   0246 03                 1398 	.db #0x03
   0247 01                 1399 	.db #0x01
   0248 11                 1400 	.db #0x11
   0249 13                 1401 	.db #0x13
   024A 0B                 1402 	.db #0x0B
   024B 09                 1403 	.db #0x09
   024C 0A                 1404 	.db #0x0A
   024D 12                 1405 	.db #0x12
   024E 10                 1406 	.db #0x10
   024F 00                 1407 	.db #0x00
   0250 02                 1408 	.db #0x02
   0251 08                 1409 	.db #0x08
   0252 0A                 1410 	.db #0x0A
   0253 12                 1411 	.db #0x12
   0254 13                 1412 	.db #0x13
   0255 0B                 1413 	.db #0x0B
   0256 09                 1414 	.db #0x09
   0257 03                 1415 	.db #0x03
   0258 01                 1416 	.db #0x01
   0259 11                 1417 	.db #0x11
   025A 13                 1418 	.db #0x13
   025B 0B                 1419 	.db #0x0B
   025C 12                 1420 	.db #0x12
   025D 10                 1421 	.db #0x10
   025E 00                 1422 	.db #0x00
   025F 02                 1423 	.db #0x02
   0260 08                 1424 	.db #0x08
   0261 0A                 1425 	.db #0x0A
   0262 12                 1426 	.db #0x12
   0263 10                 1427 	.db #0x10
   0264 11                 1428 	.db #0x11
   0265 13                 1429 	.db #0x13
   0266 0B                 1430 	.db #0x0B
   0267 09                 1431 	.db #0x09
   0268 03                 1432 	.db #0x03
   0269 01                 1433 	.db #0x01
   026A 11                 1434 	.db #0x11
   026B 13                 1435 	.db #0x13
   026C 10                 1436 	.db #0x10
   026D 00                 1437 	.db #0x00
   026E 02                 1438 	.db #0x02
   026F 08                 1439 	.db #0x08
   0270 0A                 1440 	.db #0x0A
   0271 12                 1441 	.db #0x12
   0272 10                 1442 	.db #0x10
   0273 00                 1443 	.db #0x00
   0274 01                 1444 	.db #0x01
   0275 11                 1445 	.db #0x11
   0276 13                 1446 	.db #0x13
   0277 0B                 1447 	.db #0x0B
   0278 09                 1448 	.db #0x09
   0279 03                 1449 	.db #0x03
   027A 01                 1450 	.db #0x01
   027B 11                 1451 	.db #0x11
   027C 00                 1452 	.db #0x00
   027D 02                 1453 	.db #0x02
   027E 08                 1454 	.db #0x08
   027F 0A                 1455 	.db #0x0A
   0280 12                 1456 	.db #0x12
   0281 10                 1457 	.db #0x10
   0282 00                 1458 	.db #0x00
   0283 02                 1459 	.db #0x02
   0284 03                 1460 	.db #0x03
   0285 01                 1461 	.db #0x01
   0286 11                 1462 	.db #0x11
   0287 13                 1463 	.db #0x13
   0288 0B                 1464 	.db #0x0B
   0289 09                 1465 	.db #0x09
   028A 03                 1466 	.db #0x03
   028B 01                 1467 	.db #0x01
   028C 02                 1468 	.db #0x02
   028D 08                 1469 	.db #0x08
   028E 0A                 1470 	.db #0x0A
   028F 12                 1471 	.db #0x12
   0290 10                 1472 	.db #0x10
   0291 00                 1473 	.db #0x00
   0292 02                 1474 	.db #0x02
   0293 08                 1475 	.db #0x08
   0294 09                 1476 	.db #0x09
   0295 03                 1477 	.db #0x03
   0296 01                 1478 	.db #0x01
   0297 11                 1479 	.db #0x11
   0298 13                 1480 	.db #0x13
   0299 0B                 1481 	.db #0x0B
   029A 09                 1482 	.db #0x09
   029B 03                 1483 	.db #0x03
   029C 08                 1484 	.db #0x08
   029D 0A                 1485 	.db #0x0A
   029E 12                 1486 	.db #0x12
   029F 10                 1487 	.db #0x10
   02A0 00                 1488 	.db #0x00
   02A1 02                 1489 	.db #0x02
   02A2 08                 1490 	.db #0x08
   02A3 0A                 1491 	.db #0x0A
   02A4 0B                 1492 	.db #0x0B
   02A5 09                 1493 	.db #0x09
   02A6 03                 1494 	.db #0x03
   02A7 01                 1495 	.db #0x01
   02A8 11                 1496 	.db #0x11
   02A9 13                 1497 	.db #0x13
   02AA 0B                 1498 	.db #0x0B
   02AB 09                 1499 	.db #0x09
   02AC                    1500 _tri_dia:
   02AC 05                 1501 	.db #0x05
   02AD 1B                 1502 	.db #0x1B
   02AE 0F                 1503 	.db #0x0F
   02AF 1D                 1504 	.db #0x1D
   02B0 15                 1505 	.db #0x15
   02B1 19                 1506 	.db #0x19
   02B2 05                 1507 	.db #0x05
   02B3 1B                 1508 	.db #0x1B
   02B4 0F                 1509 	.db #0x0F
   02B5 1D                 1510 	.db #0x1D
   02B6 15                 1511 	.db #0x15
   02B7 19                 1512 	.db #0x19
   02B8 05                 1513 	.db #0x05
   02B9 1B                 1514 	.db #0x1B
   02BA 0F                 1515 	.db #0x0F
   02BB 1D                 1516 	.db #0x1D
   02BC 1D                 1517 	.db #0x1D
   02BD 05                 1518 	.db #0x05
   02BE 19                 1519 	.db #0x19
   02BF 0F                 1520 	.db #0x0F
   02C0 1B                 1521 	.db #0x1B
   02C1 15                 1522 	.db #0x15
   02C2 1D                 1523 	.db #0x1D
   02C3 05                 1524 	.db #0x05
   02C4 19                 1525 	.db #0x19
   02C5 0F                 1526 	.db #0x0F
   02C6 1B                 1527 	.db #0x1B
   02C7 15                 1528 	.db #0x15
   02C8 1D                 1529 	.db #0x1D
   02C9 05                 1530 	.db #0x05
   02CA 19                 1531 	.db #0x19
   02CB 0F                 1532 	.db #0x0F
   02CC 0F                 1533 	.db #0x0F
   02CD 1D                 1534 	.db #0x1D
   02CE 15                 1535 	.db #0x15
   02CF 19                 1536 	.db #0x19
   02D0 05                 1537 	.db #0x05
   02D1 1B                 1538 	.db #0x1B
   02D2 0F                 1539 	.db #0x0F
   02D3 1D                 1540 	.db #0x1D
   02D4 15                 1541 	.db #0x15
   02D5 19                 1542 	.db #0x19
   02D6 05                 1543 	.db #0x05
   02D7 1B                 1544 	.db #0x1B
   02D8 0F                 1545 	.db #0x0F
   02D9 1D                 1546 	.db #0x1D
   02DA 15                 1547 	.db #0x15
   02DB 19                 1548 	.db #0x19
   02DC 19                 1549 	.db #0x19
   02DD 0F                 1550 	.db #0x0F
   02DE 1B                 1551 	.db #0x1B
   02DF 15                 1552 	.db #0x15
   02E0 1D                 1553 	.db #0x1D
   02E1 05                 1554 	.db #0x05
   02E2 19                 1555 	.db #0x19
   02E3 0F                 1556 	.db #0x0F
   02E4 1B                 1557 	.db #0x1B
   02E5 15                 1558 	.db #0x15
   02E6 1D                 1559 	.db #0x1D
   02E7 05                 1560 	.db #0x05
   02E8 19                 1561 	.db #0x19
   02E9 0F                 1562 	.db #0x0F
   02EA 1B                 1563 	.db #0x1B
   02EB 15                 1564 	.db #0x15
   02EC 15                 1565 	.db #0x15
   02ED 19                 1566 	.db #0x19
   02EE 05                 1567 	.db #0x05
   02EF 1B                 1568 	.db #0x1B
   02F0 0F                 1569 	.db #0x0F
   02F1 1D                 1570 	.db #0x1D
   02F2 15                 1571 	.db #0x15
   02F3 19                 1572 	.db #0x19
   02F4 05                 1573 	.db #0x05
   02F5 1B                 1574 	.db #0x1B
   02F6 0F                 1575 	.db #0x0F
   02F7 1D                 1576 	.db #0x1D
   02F8 15                 1577 	.db #0x15
   02F9 19                 1578 	.db #0x19
   02FA 05                 1579 	.db #0x05
   02FB 1B                 1580 	.db #0x1B
   02FC 1B                 1581 	.db #0x1B
   02FD 15                 1582 	.db #0x15
   02FE 1D                 1583 	.db #0x1D
   02FF 05                 1584 	.db #0x05
   0300 19                 1585 	.db #0x19
   0301 0F                 1586 	.db #0x0F
   0302 1B                 1587 	.db #0x1B
   0303 15                 1588 	.db #0x15
   0304 1D                 1589 	.db #0x1D
   0305 05                 1590 	.db #0x05
   0306 19                 1591 	.db #0x19
   0307 0F                 1592 	.db #0x0F
   0308 1B                 1593 	.db #0x1B
   0309 15                 1594 	.db #0x15
   030A 1D                 1595 	.db #0x1D
   030B 05                 1596 	.db #0x05
   030C 05                 1597 	.db #0x05
   030D 1B                 1598 	.db #0x1B
   030E 0F                 1599 	.db #0x0F
   030F 1D                 1600 	.db #0x1D
   0310 15                 1601 	.db #0x15
   0311 19                 1602 	.db #0x19
   0312 05                 1603 	.db #0x05
   0313 1B                 1604 	.db #0x1B
   0314 0F                 1605 	.db #0x0F
   0315 1D                 1606 	.db #0x1D
   0316 15                 1607 	.db #0x15
   0317 19                 1608 	.db #0x19
   0318 05                 1609 	.db #0x05
   0319 1B                 1610 	.db #0x1B
   031A 0F                 1611 	.db #0x0F
   031B 1D                 1612 	.db #0x1D
   031C 1D                 1613 	.db #0x1D
   031D 05                 1614 	.db #0x05
   031E 19                 1615 	.db #0x19
   031F 0F                 1616 	.db #0x0F
   0320 1B                 1617 	.db #0x1B
   0321 15                 1618 	.db #0x15
   0322 1D                 1619 	.db #0x1D
   0323 05                 1620 	.db #0x05
   0324 19                 1621 	.db #0x19
   0325 0F                 1622 	.db #0x0F
   0326 1B                 1623 	.db #0x1B
   0327 15                 1624 	.db #0x15
   0328 1D                 1625 	.db #0x1D
   0329 05                 1626 	.db #0x05
   032A 19                 1627 	.db #0x19
   032B 0F                 1628 	.db #0x0F
   032C 0F                 1629 	.db #0x0F
   032D 1D                 1630 	.db #0x1D
   032E 15                 1631 	.db #0x15
   032F 19                 1632 	.db #0x19
   0330 05                 1633 	.db #0x05
   0331 1B                 1634 	.db #0x1B
   0332 0F                 1635 	.db #0x0F
   0333 1D                 1636 	.db #0x1D
   0334 15                 1637 	.db #0x15
   0335 19                 1638 	.db #0x19
   0336 05                 1639 	.db #0x05
   0337 1B                 1640 	.db #0x1B
   0338 0F                 1641 	.db #0x0F
   0339 1D                 1642 	.db #0x1D
   033A 15                 1643 	.db #0x15
   033B 19                 1644 	.db #0x19
   033C 19                 1645 	.db #0x19
   033D 0F                 1646 	.db #0x0F
   033E 1B                 1647 	.db #0x1B
   033F 15                 1648 	.db #0x15
   0340 1D                 1649 	.db #0x1D
   0341 05                 1650 	.db #0x05
   0342 19                 1651 	.db #0x19
   0343 0F                 1652 	.db #0x0F
   0344 1B                 1653 	.db #0x1B
   0345 15                 1654 	.db #0x15
   0346 1D                 1655 	.db #0x1D
   0347 05                 1656 	.db #0x05
   0348 19                 1657 	.db #0x19
   0349 0F                 1658 	.db #0x0F
   034A 1B                 1659 	.db #0x1B
   034B 15                 1660 	.db #0x15
   034C 15                 1661 	.db #0x15
   034D 19                 1662 	.db #0x19
   034E 05                 1663 	.db #0x05
   034F 1B                 1664 	.db #0x1B
   0350 0F                 1665 	.db #0x0F
   0351 1D                 1666 	.db #0x1D
   0352 15                 1667 	.db #0x15
   0353 19                 1668 	.db #0x19
   0354 05                 1669 	.db #0x05
   0355 1B                 1670 	.db #0x1B
   0356 0F                 1671 	.db #0x0F
   0357 1D                 1672 	.db #0x1D
   0358 15                 1673 	.db #0x15
   0359 19                 1674 	.db #0x19
   035A 05                 1675 	.db #0x05
   035B 1B                 1676 	.db #0x1B
   035C 1B                 1677 	.db #0x1B
   035D 15                 1678 	.db #0x15
   035E 1D                 1679 	.db #0x1D
   035F 05                 1680 	.db #0x05
   0360 19                 1681 	.db #0x19
   0361 0F                 1682 	.db #0x0F
   0362 1B                 1683 	.db #0x1B
   0363 15                 1684 	.db #0x15
   0364 1D                 1685 	.db #0x1D
   0365 05                 1686 	.db #0x05
   0366 19                 1687 	.db #0x19
   0367 0F                 1688 	.db #0x0F
   0368 1B                 1689 	.db #0x1B
   0369 15                 1690 	.db #0x15
   036A 1D                 1691 	.db #0x1D
   036B 05                 1692 	.db #0x05
   036C                    1693 _tri_side1:
   036C 0A                 1694 	.db #0x0A
   036D 12                 1695 	.db #0x12
   036E 10                 1696 	.db #0x10
   036F 00                 1697 	.db #0x00
   0370 02                 1698 	.db #0x02
   0371 08                 1699 	.db #0x08
   0372 0A                 1700 	.db #0x0A
   0373 12                 1701 	.db #0x12
   0374 10                 1702 	.db #0x10
   0375 00                 1703 	.db #0x00
   0376 02                 1704 	.db #0x02
   0377 08                 1705 	.db #0x08
   0378 0A                 1706 	.db #0x0A
   0379 12                 1707 	.db #0x12
   037A 10                 1708 	.db #0x10
   037B 00                 1709 	.db #0x00
   037C 12                 1710 	.db #0x12
   037D 10                 1711 	.db #0x10
   037E 00                 1712 	.db #0x00
   037F 02                 1713 	.db #0x02
   0380 08                 1714 	.db #0x08
   0381 0A                 1715 	.db #0x0A
   0382 12                 1716 	.db #0x12
   0383 10                 1717 	.db #0x10
   0384 00                 1718 	.db #0x00
   0385 02                 1719 	.db #0x02
   0386 08                 1720 	.db #0x08
   0387 0A                 1721 	.db #0x0A
   0388 12                 1722 	.db #0x12
   0389 10                 1723 	.db #0x10
   038A 00                 1724 	.db #0x00
   038B 02                 1725 	.db #0x02
   038C 10                 1726 	.db #0x10
   038D 00                 1727 	.db #0x00
   038E 02                 1728 	.db #0x02
   038F 08                 1729 	.db #0x08
   0390 0A                 1730 	.db #0x0A
   0391 12                 1731 	.db #0x12
   0392 10                 1732 	.db #0x10
   0393 00                 1733 	.db #0x00
   0394 02                 1734 	.db #0x02
   0395 08                 1735 	.db #0x08
   0396 0A                 1736 	.db #0x0A
   0397 12                 1737 	.db #0x12
   0398 10                 1738 	.db #0x10
   0399 00                 1739 	.db #0x00
   039A 02                 1740 	.db #0x02
   039B 08                 1741 	.db #0x08
   039C 00                 1742 	.db #0x00
   039D 02                 1743 	.db #0x02
   039E 08                 1744 	.db #0x08
   039F 0A                 1745 	.db #0x0A
   03A0 12                 1746 	.db #0x12
   03A1 10                 1747 	.db #0x10
   03A2 00                 1748 	.db #0x00
   03A3 02                 1749 	.db #0x02
   03A4 08                 1750 	.db #0x08
   03A5 0A                 1751 	.db #0x0A
   03A6 12                 1752 	.db #0x12
   03A7 10                 1753 	.db #0x10
   03A8 00                 1754 	.db #0x00
   03A9 02                 1755 	.db #0x02
   03AA 08                 1756 	.db #0x08
   03AB 0A                 1757 	.db #0x0A
   03AC 02                 1758 	.db #0x02
   03AD 08                 1759 	.db #0x08
   03AE 0A                 1760 	.db #0x0A
   03AF 12                 1761 	.db #0x12
   03B0 10                 1762 	.db #0x10
   03B1 00                 1763 	.db #0x00
   03B2 02                 1764 	.db #0x02
   03B3 08                 1765 	.db #0x08
   03B4 0A                 1766 	.db #0x0A
   03B5 12                 1767 	.db #0x12
   03B6 10                 1768 	.db #0x10
   03B7 00                 1769 	.db #0x00
   03B8 02                 1770 	.db #0x02
   03B9 08                 1771 	.db #0x08
   03BA 0A                 1772 	.db #0x0A
   03BB 12                 1773 	.db #0x12
   03BC 08                 1774 	.db #0x08
   03BD 0A                 1775 	.db #0x0A
   03BE 12                 1776 	.db #0x12
   03BF 10                 1777 	.db #0x10
   03C0 00                 1778 	.db #0x00
   03C1 02                 1779 	.db #0x02
   03C2 08                 1780 	.db #0x08
   03C3 0A                 1781 	.db #0x0A
   03C4 12                 1782 	.db #0x12
   03C5 10                 1783 	.db #0x10
   03C6 00                 1784 	.db #0x00
   03C7 02                 1785 	.db #0x02
   03C8 08                 1786 	.db #0x08
   03C9 0A                 1787 	.db #0x0A
   03CA 12                 1788 	.db #0x12
   03CB 10                 1789 	.db #0x10
   03CC 0A                 1790 	.db #0x0A
   03CD 12                 1791 	.db #0x12
   03CE 10                 1792 	.db #0x10
   03CF 00                 1793 	.db #0x00
   03D0 02                 1794 	.db #0x02
   03D1 08                 1795 	.db #0x08
   03D2 0A                 1796 	.db #0x0A
   03D3 12                 1797 	.db #0x12
   03D4 10                 1798 	.db #0x10
   03D5 00                 1799 	.db #0x00
   03D6 02                 1800 	.db #0x02
   03D7 08                 1801 	.db #0x08
   03D8 0A                 1802 	.db #0x0A
   03D9 12                 1803 	.db #0x12
   03DA 10                 1804 	.db #0x10
   03DB 00                 1805 	.db #0x00
   03DC 12                 1806 	.db #0x12
   03DD 10                 1807 	.db #0x10
   03DE 00                 1808 	.db #0x00
   03DF 02                 1809 	.db #0x02
   03E0 08                 1810 	.db #0x08
   03E1 0A                 1811 	.db #0x0A
   03E2 12                 1812 	.db #0x12
   03E3 10                 1813 	.db #0x10
   03E4 00                 1814 	.db #0x00
   03E5 02                 1815 	.db #0x02
   03E6 08                 1816 	.db #0x08
   03E7 0A                 1817 	.db #0x0A
   03E8 12                 1818 	.db #0x12
   03E9 10                 1819 	.db #0x10
   03EA 00                 1820 	.db #0x00
   03EB 02                 1821 	.db #0x02
   03EC 10                 1822 	.db #0x10
   03ED 00                 1823 	.db #0x00
   03EE 02                 1824 	.db #0x02
   03EF 08                 1825 	.db #0x08
   03F0 0A                 1826 	.db #0x0A
   03F1 12                 1827 	.db #0x12
   03F2 10                 1828 	.db #0x10
   03F3 00                 1829 	.db #0x00
   03F4 02                 1830 	.db #0x02
   03F5 08                 1831 	.db #0x08
   03F6 0A                 1832 	.db #0x0A
   03F7 12                 1833 	.db #0x12
   03F8 10                 1834 	.db #0x10
   03F9 00                 1835 	.db #0x00
   03FA 02                 1836 	.db #0x02
   03FB 08                 1837 	.db #0x08
   03FC 00                 1838 	.db #0x00
   03FD 02                 1839 	.db #0x02
   03FE 08                 1840 	.db #0x08
   03FF 0A                 1841 	.db #0x0A
   0400 12                 1842 	.db #0x12
   0401 10                 1843 	.db #0x10
   0402 00                 1844 	.db #0x00
   0403 02                 1845 	.db #0x02
   0404 08                 1846 	.db #0x08
   0405 0A                 1847 	.db #0x0A
   0406 12                 1848 	.db #0x12
   0407 10                 1849 	.db #0x10
   0408 00                 1850 	.db #0x00
   0409 02                 1851 	.db #0x02
   040A 08                 1852 	.db #0x08
   040B 0A                 1853 	.db #0x0A
   040C 02                 1854 	.db #0x02
   040D 08                 1855 	.db #0x08
   040E 0A                 1856 	.db #0x0A
   040F 12                 1857 	.db #0x12
   0410 10                 1858 	.db #0x10
   0411 00                 1859 	.db #0x00
   0412 02                 1860 	.db #0x02
   0413 08                 1861 	.db #0x08
   0414 0A                 1862 	.db #0x0A
   0415 12                 1863 	.db #0x12
   0416 10                 1864 	.db #0x10
   0417 00                 1865 	.db #0x00
   0418 02                 1866 	.db #0x02
   0419 08                 1867 	.db #0x08
   041A 0A                 1868 	.db #0x0A
   041B 12                 1869 	.db #0x12
   041C 08                 1870 	.db #0x08
   041D 0A                 1871 	.db #0x0A
   041E 12                 1872 	.db #0x12
   041F 10                 1873 	.db #0x10
   0420 00                 1874 	.db #0x00
   0421 02                 1875 	.db #0x02
   0422 08                 1876 	.db #0x08
   0423 0A                 1877 	.db #0x0A
   0424 12                 1878 	.db #0x12
   0425 10                 1879 	.db #0x10
   0426 00                 1880 	.db #0x00
   0427 02                 1881 	.db #0x02
   0428 08                 1882 	.db #0x08
   0429 0A                 1883 	.db #0x0A
   042A 12                 1884 	.db #0x12
   042B 10                 1885 	.db #0x10
   042C                    1886 _tri_side2:
   042C 00                 1887 	.db #0x00
   042D 10                 1888 	.db #0x10
   042E 12                 1889 	.db #0x12
   042F 0A                 1890 	.db #0x0A
   0430 08                 1891 	.db #0x08
   0431 02                 1892 	.db #0x02
   0432 00                 1893 	.db #0x00
   0433 10                 1894 	.db #0x10
   0434 12                 1895 	.db #0x12
   0435 0A                 1896 	.db #0x0A
   0436 08                 1897 	.db #0x08
   0437 02                 1898 	.db #0x02
   0438 00                 1899 	.db #0x00
   0439 10                 1900 	.db #0x10
   043A 12                 1901 	.db #0x12
   043B 0A                 1902 	.db #0x0A
   043C 02                 1903 	.db #0x02
   043D 00                 1904 	.db #0x00
   043E 10                 1905 	.db #0x10
   043F 12                 1906 	.db #0x12
   0440 0A                 1907 	.db #0x0A
   0441 08                 1908 	.db #0x08
   0442 02                 1909 	.db #0x02
   0443 00                 1910 	.db #0x00
   0444 10                 1911 	.db #0x10
   0445 12                 1912 	.db #0x12
   0446 0A                 1913 	.db #0x0A
   0447 08                 1914 	.db #0x08
   0448 02                 1915 	.db #0x02
   0449 00                 1916 	.db #0x00
   044A 10                 1917 	.db #0x10
   044B 12                 1918 	.db #0x12
   044C 08                 1919 	.db #0x08
   044D 02                 1920 	.db #0x02
   044E 00                 1921 	.db #0x00
   044F 10                 1922 	.db #0x10
   0450 12                 1923 	.db #0x12
   0451 0A                 1924 	.db #0x0A
   0452 08                 1925 	.db #0x08
   0453 02                 1926 	.db #0x02
   0454 00                 1927 	.db #0x00
   0455 10                 1928 	.db #0x10
   0456 12                 1929 	.db #0x12
   0457 0A                 1930 	.db #0x0A
   0458 08                 1931 	.db #0x08
   0459 02                 1932 	.db #0x02
   045A 00                 1933 	.db #0x00
   045B 10                 1934 	.db #0x10
   045C 0A                 1935 	.db #0x0A
   045D 08                 1936 	.db #0x08
   045E 02                 1937 	.db #0x02
   045F 00                 1938 	.db #0x00
   0460 10                 1939 	.db #0x10
   0461 12                 1940 	.db #0x12
   0462 0A                 1941 	.db #0x0A
   0463 08                 1942 	.db #0x08
   0464 02                 1943 	.db #0x02
   0465 00                 1944 	.db #0x00
   0466 10                 1945 	.db #0x10
   0467 12                 1946 	.db #0x12
   0468 0A                 1947 	.db #0x0A
   0469 08                 1948 	.db #0x08
   046A 02                 1949 	.db #0x02
   046B 00                 1950 	.db #0x00
   046C 12                 1951 	.db #0x12
   046D 0A                 1952 	.db #0x0A
   046E 08                 1953 	.db #0x08
   046F 02                 1954 	.db #0x02
   0470 00                 1955 	.db #0x00
   0471 10                 1956 	.db #0x10
   0472 12                 1957 	.db #0x12
   0473 0A                 1958 	.db #0x0A
   0474 08                 1959 	.db #0x08
   0475 02                 1960 	.db #0x02
   0476 00                 1961 	.db #0x00
   0477 10                 1962 	.db #0x10
   0478 12                 1963 	.db #0x12
   0479 0A                 1964 	.db #0x0A
   047A 08                 1965 	.db #0x08
   047B 02                 1966 	.db #0x02
   047C 10                 1967 	.db #0x10
   047D 12                 1968 	.db #0x12
   047E 0A                 1969 	.db #0x0A
   047F 08                 1970 	.db #0x08
   0480 02                 1971 	.db #0x02
   0481 00                 1972 	.db #0x00
   0482 10                 1973 	.db #0x10
   0483 12                 1974 	.db #0x12
   0484 0A                 1975 	.db #0x0A
   0485 08                 1976 	.db #0x08
   0486 02                 1977 	.db #0x02
   0487 00                 1978 	.db #0x00
   0488 10                 1979 	.db #0x10
   0489 12                 1980 	.db #0x12
   048A 0A                 1981 	.db #0x0A
   048B 08                 1982 	.db #0x08
   048C 00                 1983 	.db #0x00
   048D 10                 1984 	.db #0x10
   048E 12                 1985 	.db #0x12
   048F 0A                 1986 	.db #0x0A
   0490 08                 1987 	.db #0x08
   0491 02                 1988 	.db #0x02
   0492 00                 1989 	.db #0x00
   0493 10                 1990 	.db #0x10
   0494 12                 1991 	.db #0x12
   0495 0A                 1992 	.db #0x0A
   0496 08                 1993 	.db #0x08
   0497 02                 1994 	.db #0x02
   0498 00                 1995 	.db #0x00
   0499 10                 1996 	.db #0x10
   049A 12                 1997 	.db #0x12
   049B 0A                 1998 	.db #0x0A
   049C 02                 1999 	.db #0x02
   049D 00                 2000 	.db #0x00
   049E 10                 2001 	.db #0x10
   049F 12                 2002 	.db #0x12
   04A0 0A                 2003 	.db #0x0A
   04A1 08                 2004 	.db #0x08
   04A2 02                 2005 	.db #0x02
   04A3 00                 2006 	.db #0x00
   04A4 10                 2007 	.db #0x10
   04A5 12                 2008 	.db #0x12
   04A6 0A                 2009 	.db #0x0A
   04A7 08                 2010 	.db #0x08
   04A8 02                 2011 	.db #0x02
   04A9 00                 2012 	.db #0x00
   04AA 10                 2013 	.db #0x10
   04AB 12                 2014 	.db #0x12
   04AC 08                 2015 	.db #0x08
   04AD 02                 2016 	.db #0x02
   04AE 00                 2017 	.db #0x00
   04AF 10                 2018 	.db #0x10
   04B0 12                 2019 	.db #0x12
   04B1 0A                 2020 	.db #0x0A
   04B2 08                 2021 	.db #0x08
   04B3 02                 2022 	.db #0x02
   04B4 00                 2023 	.db #0x00
   04B5 10                 2024 	.db #0x10
   04B6 12                 2025 	.db #0x12
   04B7 0A                 2026 	.db #0x0A
   04B8 08                 2027 	.db #0x08
   04B9 02                 2028 	.db #0x02
   04BA 00                 2029 	.db #0x00
   04BB 10                 2030 	.db #0x10
   04BC 0A                 2031 	.db #0x0A
   04BD 08                 2032 	.db #0x08
   04BE 02                 2033 	.db #0x02
   04BF 00                 2034 	.db #0x00
   04C0 10                 2035 	.db #0x10
   04C1 12                 2036 	.db #0x12
   04C2 0A                 2037 	.db #0x0A
   04C3 08                 2038 	.db #0x08
   04C4 02                 2039 	.db #0x02
   04C5 00                 2040 	.db #0x00
   04C6 10                 2041 	.db #0x10
   04C7 12                 2042 	.db #0x12
   04C8 0A                 2043 	.db #0x0A
   04C9 08                 2044 	.db #0x08
   04CA 02                 2045 	.db #0x02
   04CB 00                 2046 	.db #0x00
   04CC 12                 2047 	.db #0x12
   04CD 0A                 2048 	.db #0x0A
   04CE 08                 2049 	.db #0x08
   04CF 02                 2050 	.db #0x02
   04D0 00                 2051 	.db #0x00
   04D1 10                 2052 	.db #0x10
   04D2 12                 2053 	.db #0x12
   04D3 0A                 2054 	.db #0x0A
   04D4 08                 2055 	.db #0x08
   04D5 02                 2056 	.db #0x02
   04D6 00                 2057 	.db #0x00
   04D7 10                 2058 	.db #0x10
   04D8 12                 2059 	.db #0x12
   04D9 0A                 2060 	.db #0x0A
   04DA 08                 2061 	.db #0x08
   04DB 02                 2062 	.db #0x02
   04DC 10                 2063 	.db #0x10
   04DD 12                 2064 	.db #0x12
   04DE 0A                 2065 	.db #0x0A
   04DF 08                 2066 	.db #0x08
   04E0 02                 2067 	.db #0x02
   04E1 00                 2068 	.db #0x00
   04E2 10                 2069 	.db #0x10
   04E3 12                 2070 	.db #0x12
   04E4 0A                 2071 	.db #0x0A
   04E5 08                 2072 	.db #0x08
   04E6 02                 2073 	.db #0x02
   04E7 00                 2074 	.db #0x00
   04E8 10                 2075 	.db #0x10
   04E9 12                 2076 	.db #0x12
   04EA 0A                 2077 	.db #0x0A
   04EB 08                 2078 	.db #0x08
   04EC                    2079 _tri_inva1:
   04EC 1E                 2080 	.db #0x1E
   04ED 1F                 2081 	.db #0x1F
   04EE 1E                 2082 	.db #0x1E
   04EF 11                 2083 	.db #0x11
   04F0 13                 2084 	.db #0x13
   04F1 1E                 2085 	.db #0x1E
   04F2 08                 2086 	.db #0x08
   04F3 0A                 2087 	.db #0x0A
   04F4 00                 2088 	.db #0x00
   04F5 0E                 2089 	.db #0x0E
   04F6 10                 2090 	.db #0x10
   04F7 1E                 2091 	.db #0x1E
   04F8 1C                 2092 	.db #0x1C
   04F9 1E                 2093 	.db #0x1E
   04FA 08                 2094 	.db #0x08
   04FB 0A                 2095 	.db #0x0A
   04FC 1F                 2096 	.db #0x1F
   04FD 1F                 2097 	.db #0x1F
   04FE 1E                 2098 	.db #0x1E
   04FF 1E                 2099 	.db #0x1E
   0500 15                 2100 	.db #0x15
   0501 17                 2101 	.db #0x17
   0502 0A                 2102 	.db #0x0A
   0503 00                 2103 	.db #0x00
   0504 02                 2104 	.db #0x02
   0505 11                 2105 	.db #0x11
   0506 13                 2106 	.db #0x13
   0507 1F                 2107 	.db #0x1F
   0508 1C                 2108 	.db #0x1C
   0509 08                 2109 	.db #0x08
   050A 0A                 2110 	.db #0x0A
   050B 1F                 2111 	.db #0x1F
   050C 1E                 2112 	.db #0x1E
   050D 1F                 2113 	.db #0x1F
   050E 08                 2114 	.db #0x08
   050F 1B                 2115 	.db #0x1B
   0510 1A                 2116 	.db #0x1A
   0511 11                 2117 	.db #0x11
   0512 13                 2118 	.db #0x13
   0513 1C                 2119 	.db #0x1C
   0514 1E                 2120 	.db #0x1E
   0515 1F                 2121 	.db #0x1F
   0516 19                 2122 	.db #0x19
   0517 1E                 2123 	.db #0x1E
   0518 06                 2124 	.db #0x06
   0519 04                 2125 	.db #0x04
   051A 1C                 2126 	.db #0x1C
   051B 1C                 2127 	.db #0x1C
   051C 1E                 2128 	.db #0x1E
   051D 08                 2129 	.db #0x08
   051E 16                 2130 	.db #0x16
   051F 18                 2131 	.db #0x18
   0520 1B                 2132 	.db #0x1B
   0521 1E                 2133 	.db #0x1E
   0522 19                 2134 	.db #0x19
   0523 1D                 2135 	.db #0x1D
   0524 1F                 2136 	.db #0x1F
   0525 1E                 2137 	.db #0x1E
   0526 19                 2138 	.db #0x19
   0527 08                 2139 	.db #0x08
   0528 1B                 2140 	.db #0x1B
   0529 1E                 2141 	.db #0x1E
   052A 12                 2142 	.db #0x12
   052B 10                 2143 	.db #0x10
   052C 08                 2144 	.db #0x08
   052D 16                 2145 	.db #0x16
   052E 10                 2146 	.db #0x10
   052F 11                 2147 	.db #0x11
   0530 17                 2148 	.db #0x17
   0531 09                 2149 	.db #0x09
   0532 11                 2150 	.db #0x11
   0533 0F                 2151 	.db #0x0F
   0534 01                 2152 	.db #0x01
   0535 1E                 2153 	.db #0x1E
   0536 14                 2154 	.db #0x14
   0537 16                 2155 	.db #0x16
   0538 17                 2156 	.db #0x17
   0539 15                 2157 	.db #0x15
   053A 10                 2158 	.db #0x10
   053B 1E                 2159 	.db #0x1E
   053C 0A                 2160 	.db #0x0A
   053D 18                 2161 	.db #0x18
   053E 1F                 2162 	.db #0x1F
   053F 1E                 2163 	.db #0x1E
   0540 19                 2164 	.db #0x19
   0541 0B                 2165 	.db #0x0B
   0542 09                 2166 	.db #0x09
   0543 11                 2167 	.db #0x11
   0544 0F                 2168 	.db #0x0F
   0545 1C                 2169 	.db #0x1C
   0546 05                 2170 	.db #0x05
   0547 09                 2171 	.db #0x09
   0548 1E                 2172 	.db #0x1E
   0549 0B                 2173 	.db #0x0B
   054A 09                 2174 	.db #0x09
   054B 1F                 2175 	.db #0x1F
   054C 1E                 2176 	.db #0x1E
   054D 19                 2177 	.db #0x19
   054E 1E                 2178 	.db #0x1E
   054F 1F                 2179 	.db #0x1F
   0550 19                 2180 	.db #0x19
   0551 1E                 2181 	.db #0x1E
   0552 0B                 2182 	.db #0x0B
   0553 1B                 2183 	.db #0x1B
   0554 15                 2184 	.db #0x15
   0555 19                 2185 	.db #0x19
   0556 1D                 2186 	.db #0x1D
   0557 19                 2187 	.db #0x19
   0558 19                 2188 	.db #0x19
   0559 13                 2189 	.db #0x13
   055A 0B                 2190 	.db #0x0B
   055B 09                 2191 	.db #0x09
   055C 1E                 2192 	.db #0x1E
   055D 15                 2193 	.db #0x15
   055E 13                 2194 	.db #0x13
   055F 1E                 2195 	.db #0x1E
   0560 0C                 2196 	.db #0x0C
   0561 01                 2197 	.db #0x01
   0562 1E                 2198 	.db #0x1E
   0563 1F                 2199 	.db #0x1F
   0564 1E                 2200 	.db #0x1E
   0565 1E                 2201 	.db #0x1E
   0566 1C                 2202 	.db #0x1C
   0567 1D                 2203 	.db #0x1D
   0568 01                 2204 	.db #0x01
   0569 11                 2205 	.db #0x11
   056A 13                 2206 	.db #0x13
   056B 0B                 2207 	.db #0x0B
   056C 09                 2208 	.db #0x09
   056D 1A                 2209 	.db #0x1A
   056E 14                 2210 	.db #0x14
   056F 04                 2211 	.db #0x04
   0570 0E                 2212 	.db #0x0E
   0571 07                 2213 	.db #0x07
   0572 01                 2214 	.db #0x01
   0573 1E                 2215 	.db #0x1E
   0574 1F                 2216 	.db #0x1F
   0575 00                 2217 	.db #0x00
   0576 02                 2218 	.db #0x02
   0577 1E                 2219 	.db #0x1E
   0578 03                 2220 	.db #0x03
   0579 01                 2221 	.db #0x01
   057A 0C                 2222 	.db #0x0C
   057B 06                 2223 	.db #0x06
   057C 0B                 2224 	.db #0x0B
   057D 1B                 2225 	.db #0x1B
   057E 04                 2226 	.db #0x04
   057F 0E                 2227 	.db #0x0E
   0580 19                 2228 	.db #0x19
   0581 17                 2229 	.db #0x17
   0582 07                 2230 	.db #0x07
   0583 1D                 2231 	.db #0x1D
   0584 1C                 2232 	.db #0x1C
   0585 02                 2233 	.db #0x02
   0586 1F                 2234 	.db #0x1F
   0587 1E                 2235 	.db #0x1E
   0588 08                 2236 	.db #0x08
   0589 07                 2237 	.db #0x07
   058A 06                 2238 	.db #0x06
   058B 1E                 2239 	.db #0x1E
   058C 08                 2240 	.db #0x08
   058D 04                 2241 	.db #0x04
   058E 0E                 2242 	.db #0x0E
   058F 14                 2243 	.db #0x14
   0590 09                 2244 	.db #0x09
   0591 11                 2245 	.db #0x11
   0592 17                 2246 	.db #0x17
   0593 07                 2247 	.db #0x07
   0594 1D                 2248 	.db #0x1D
   0595 1F                 2249 	.db #0x1F
   0596 1E                 2250 	.db #0x1E
   0597 08                 2251 	.db #0x08
   0598 0A                 2252 	.db #0x0A
   0599 1E                 2253 	.db #0x1E
   059A 1F                 2254 	.db #0x1F
   059B 1F                 2255 	.db #0x1F
   059C 04                 2256 	.db #0x04
   059D 0E                 2257 	.db #0x0E
   059E 14                 2258 	.db #0x14
   059F 0A                 2259 	.db #0x0A
   05A0 0B                 2260 	.db #0x0B
   05A1 09                 2261 	.db #0x09
   05A2 11                 2262 	.db #0x11
   05A3 17                 2263 	.db #0x17
   05A4 07                 2264 	.db #0x07
   05A5 01                 2265 	.db #0x01
   05A6 08                 2266 	.db #0x08
   05A7 0A                 2267 	.db #0x0A
   05A8 1E                 2268 	.db #0x1E
   05A9 1F                 2269 	.db #0x1F
   05AA 1F                 2270 	.db #0x1F
   05AB 1E                 2271 	.db #0x1E
   05AC                    2272 _tri_inva2:
   05AC 14                 2273 	.db #0x14
   05AD 04                 2274 	.db #0x04
   05AE 0E                 2275 	.db #0x0E
   05AF 14                 2276 	.db #0x14
   05B0 04                 2277 	.db #0x04
   05B1 0E                 2278 	.db #0x0E
   05B2 14                 2279 	.db #0x14
   05B3 1A                 2280 	.db #0x1A
   05B4 1B                 2281 	.db #0x1B
   05B5 15                 2282 	.db #0x15
   05B6 0F                 2283 	.db #0x0F
   05B7 05                 2284 	.db #0x05
   05B8 15                 2285 	.db #0x15
   05B9 0F                 2286 	.db #0x0F
   05BA 05                 2287 	.db #0x05
   05BB 15                 2288 	.db #0x15
   05BC 04                 2289 	.db #0x04
   05BD 0E                 2290 	.db #0x0E
   05BE 14                 2291 	.db #0x14
   05BF 04                 2292 	.db #0x04
   05C0 0E                 2293 	.db #0x0E
   05C1 14                 2294 	.db #0x14
   05C2 04                 2295 	.db #0x04
   05C3 1C                 2296 	.db #0x1C
   05C4 1D                 2297 	.db #0x1D
   05C5 05                 2298 	.db #0x05
   05C6 15                 2299 	.db #0x15
   05C7 0F                 2300 	.db #0x0F
   05C8 05                 2301 	.db #0x05
   05C9 15                 2302 	.db #0x15
   05CA 0F                 2303 	.db #0x0F
   05CB 05                 2304 	.db #0x05
   05CC 0E                 2305 	.db #0x0E
   05CD 14                 2306 	.db #0x14
   05CE 04                 2307 	.db #0x04
   05CF 0E                 2308 	.db #0x0E
   05D0 14                 2309 	.db #0x14
   05D1 04                 2310 	.db #0x04
   05D2 0E                 2311 	.db #0x0E
   05D3 18                 2312 	.db #0x18
   05D4 19                 2313 	.db #0x19
   05D5 0F                 2314 	.db #0x0F
   05D6 05                 2315 	.db #0x05
   05D7 15                 2316 	.db #0x15
   05D8 0F                 2317 	.db #0x0F
   05D9 05                 2318 	.db #0x05
   05DA 15                 2319 	.db #0x15
   05DB 0F                 2320 	.db #0x0F
   05DC 18                 2321 	.db #0x18
   05DD 1A                 2322 	.db #0x1A
   05DE 1C                 2323 	.db #0x1C
   05DF 18                 2324 	.db #0x18
   05E0 1A                 2325 	.db #0x1A
   05E1 1C                 2326 	.db #0x1C
   05E2 18                 2327 	.db #0x18
   05E3 18                 2328 	.db #0x18
   05E4 19                 2329 	.db #0x19
   05E5 19                 2330 	.db #0x19
   05E6 1D                 2331 	.db #0x1D
   05E7 1B                 2332 	.db #0x1B
   05E8 19                 2333 	.db #0x19
   05E9 1D                 2334 	.db #0x1D
   05EA 1B                 2335 	.db #0x1B
   05EB 19                 2336 	.db #0x19
   05EC 18                 2337 	.db #0x18
   05ED 1A                 2338 	.db #0x1A
   05EE 1C                 2339 	.db #0x1C
   05EF 18                 2340 	.db #0x18
   05F0 1A                 2341 	.db #0x1A
   05F1 1C                 2342 	.db #0x1C
   05F2 18                 2343 	.db #0x18
   05F3 18                 2344 	.db #0x18
   05F4 0D                 2345 	.db #0x0D
   05F5 19                 2346 	.db #0x19
   05F6 1D                 2347 	.db #0x1D
   05F7 1B                 2348 	.db #0x1B
   05F8 19                 2349 	.db #0x19
   05F9 1D                 2350 	.db #0x1D
   05FA 1B                 2351 	.db #0x1B
   05FB 19                 2352 	.db #0x19
   05FC 19                 2353 	.db #0x19
   05FD 1B                 2354 	.db #0x1B
   05FE 1D                 2355 	.db #0x1D
   05FF 19                 2356 	.db #0x19
   0600 1B                 2357 	.db #0x1B
   0601 1D                 2358 	.db #0x1D
   0602 19                 2359 	.db #0x19
   0603 0C                 2360 	.db #0x0C
   0604 0E                 2361 	.db #0x0E
   0605 18                 2362 	.db #0x18
   0606 1C                 2363 	.db #0x1C
   0607 1A                 2364 	.db #0x1A
   0608 18                 2365 	.db #0x18
   0609 1C                 2366 	.db #0x1C
   060A 1A                 2367 	.db #0x1A
   060B 18                 2368 	.db #0x18
   060C 19                 2369 	.db #0x19
   060D 1B                 2370 	.db #0x1B
   060E 1D                 2371 	.db #0x1D
   060F 19                 2372 	.db #0x19
   0610 1B                 2373 	.db #0x1B
   0611 1D                 2374 	.db #0x1D
   0612 19                 2375 	.db #0x19
   0613 0F                 2376 	.db #0x0F
   0614 0D                 2377 	.db #0x0D
   0615 18                 2378 	.db #0x18
   0616 1C                 2379 	.db #0x1C
   0617 1A                 2380 	.db #0x1A
   0618 18                 2381 	.db #0x18
   0619 1C                 2382 	.db #0x1C
   061A 1A                 2383 	.db #0x1A
   061B 18                 2384 	.db #0x18
   061C 0D                 2385 	.db #0x0D
   061D 17                 2386 	.db #0x17
   061E 07                 2387 	.db #0x07
   061F 0D                 2388 	.db #0x0D
   0620 17                 2389 	.db #0x17
   0621 07                 2390 	.db #0x07
   0622 0D                 2391 	.db #0x0D
   0623 0C                 2392 	.db #0x0C
   0624 0E                 2393 	.db #0x0E
   0625 0C                 2394 	.db #0x0C
   0626 06                 2395 	.db #0x06
   0627 16                 2396 	.db #0x16
   0628 0C                 2397 	.db #0x0C
   0629 06                 2398 	.db #0x06
   062A 16                 2399 	.db #0x16
   062B 0C                 2400 	.db #0x0C
   062C 07                 2401 	.db #0x07
   062D 0D                 2402 	.db #0x0D
   062E 17                 2403 	.db #0x17
   062F 07                 2404 	.db #0x07
   0630 0D                 2405 	.db #0x0D
   0631 17                 2406 	.db #0x17
   0632 02                 2407 	.db #0x02
   0633 1A                 2408 	.db #0x1A
   0634 1A                 2409 	.db #0x1A
   0635 03                 2410 	.db #0x03
   0636 16                 2411 	.db #0x16
   0637 0C                 2412 	.db #0x0C
   0638 06                 2413 	.db #0x06
   0639 16                 2414 	.db #0x16
   063A 0C                 2415 	.db #0x0C
   063B 06                 2416 	.db #0x06
   063C 17                 2417 	.db #0x17
   063D 07                 2418 	.db #0x07
   063E 0D                 2419 	.db #0x0D
   063F 17                 2420 	.db #0x17
   0640 07                 2421 	.db #0x07
   0641 10                 2422 	.db #0x10
   0642 1F                 2423 	.db #0x1F
   0643 1A                 2424 	.db #0x1A
   0644 1A                 2425 	.db #0x1A
   0645 1F                 2426 	.db #0x1F
   0646 11                 2427 	.db #0x11
   0647 06                 2428 	.db #0x06
   0648 16                 2429 	.db #0x16
   0649 0C                 2430 	.db #0x0C
   064A 06                 2431 	.db #0x06
   064B 16                 2432 	.db #0x16
   064C 0D                 2433 	.db #0x0D
   064D 17                 2434 	.db #0x17
   064E 07                 2435 	.db #0x07
   064F 0D                 2436 	.db #0x0D
   0650 0A                 2437 	.db #0x0A
   0651 1F                 2438 	.db #0x1F
   0652 1F                 2439 	.db #0x1F
   0653 1A                 2440 	.db #0x1A
   0654 1A                 2441 	.db #0x1A
   0655 1F                 2442 	.db #0x1F
   0656 1F                 2443 	.db #0x1F
   0657 0B                 2444 	.db #0x0B
   0658 0C                 2445 	.db #0x0C
   0659 06                 2446 	.db #0x06
   065A 16                 2447 	.db #0x16
   065B 0C                 2448 	.db #0x0C
   065C 07                 2449 	.db #0x07
   065D 0D                 2450 	.db #0x0D
   065E 17                 2451 	.db #0x17
   065F 02                 2452 	.db #0x02
   0660 1F                 2453 	.db #0x1F
   0661 1F                 2454 	.db #0x1F
   0662 1F                 2455 	.db #0x1F
   0663 1F                 2456 	.db #0x1F
   0664 1F                 2457 	.db #0x1F
   0665 1F                 2458 	.db #0x1F
   0666 1F                 2459 	.db #0x1F
   0667 1F                 2460 	.db #0x1F
   0668 03                 2461 	.db #0x03
   0669 16                 2462 	.db #0x16
   066A 0C                 2463 	.db #0x0C
   066B 06                 2464 	.db #0x06
   066C                    2465 _tri_inva3:
   066C 1A                 2466 	.db #0x1A
   066D 1C                 2467 	.db #0x1C
   066E 18                 2468 	.db #0x18
   066F 1A                 2469 	.db #0x1A
   0670 1C                 2470 	.db #0x1C
   0671 18                 2471 	.db #0x18
   0672 1A                 2472 	.db #0x1A
   0673 1E                 2473 	.db #0x1E
   0674 00                 2474 	.db #0x00
   0675 1C                 2475 	.db #0x1C
   0676 1C                 2476 	.db #0x1C
   0677 1D                 2477 	.db #0x1D
   0678 1C                 2478 	.db #0x1C
   0679 1C                 2479 	.db #0x1C
   067A 1D                 2480 	.db #0x1D
   067B 1C                 2481 	.db #0x1C
   067C 1A                 2482 	.db #0x1A
   067D 1C                 2483 	.db #0x1C
   067E 18                 2484 	.db #0x18
   067F 1A                 2485 	.db #0x1A
   0680 1C                 2486 	.db #0x1C
   0681 18                 2487 	.db #0x18
   0682 1A                 2488 	.db #0x1A
   0683 1F                 2489 	.db #0x1F
   0684 1C                 2490 	.db #0x1C
   0685 18                 2491 	.db #0x18
   0686 1F                 2492 	.db #0x1F
   0687 1C                 2493 	.db #0x1C
   0688 1D                 2494 	.db #0x1D
   0689 1D                 2495 	.db #0x1D
   068A 1C                 2496 	.db #0x1C
   068B 1D                 2497 	.db #0x1D
   068C 04                 2498 	.db #0x04
   068D 0E                 2499 	.db #0x0E
   068E 14                 2500 	.db #0x14
   068F 04                 2501 	.db #0x04
   0690 0E                 2502 	.db #0x0E
   0691 14                 2503 	.db #0x14
   0692 0A                 2504 	.db #0x0A
   0693 1E                 2505 	.db #0x1E
   0694 1C                 2506 	.db #0x1C
   0695 0D                 2507 	.db #0x0D
   0696 18                 2508 	.db #0x18
   0697 1C                 2509 	.db #0x1C
   0698 1C                 2510 	.db #0x1C
   0699 1C                 2511 	.db #0x1C
   069A 1C                 2512 	.db #0x1C
   069B 1C                 2513 	.db #0x1C
   069C 1C                 2514 	.db #0x1C
   069D 18                 2515 	.db #0x18
   069E 1A                 2516 	.db #0x1A
   069F 1C                 2517 	.db #0x1C
   06A0 18                 2518 	.db #0x18
   06A1 1A                 2519 	.db #0x1A
   06A2 1E                 2520 	.db #0x1E
   06A3 00                 2521 	.db #0x00
   06A4 1C                 2522 	.db #0x1C
   06A5 1D                 2523 	.db #0x1D
   06A6 1C                 2524 	.db #0x1C
   06A7 1C                 2525 	.db #0x1C
   06A8 1D                 2526 	.db #0x1D
   06A9 18                 2527 	.db #0x18
   06AA 0F                 2528 	.db #0x0F
   06AB 1C                 2529 	.db #0x1C
   06AC 1C                 2530 	.db #0x1C
   06AD 18                 2531 	.db #0x18
   06AE 1A                 2532 	.db #0x1A
   06AF 1C                 2533 	.db #0x1C
   06B0 18                 2534 	.db #0x18
   06B1 1A                 2535 	.db #0x1A
   06B2 1F                 2536 	.db #0x1F
   06B3 1C                 2537 	.db #0x1C
   06B4 1D                 2538 	.db #0x1D
   06B5 02                 2539 	.db #0x02
   06B6 1C                 2540 	.db #0x1C
   06B7 02                 2541 	.db #0x02
   06B8 1D                 2542 	.db #0x1D
   06B9 1F                 2543 	.db #0x1F
   06BA 18                 2544 	.db #0x18
   06BB 1C                 2545 	.db #0x1C
   06BC 1C                 2546 	.db #0x1C
   06BD 18                 2547 	.db #0x18
   06BE 1A                 2548 	.db #0x1A
   06BF 1C                 2549 	.db #0x1C
   06C0 18                 2550 	.db #0x18
   06C1 1A                 2551 	.db #0x1A
   06C2 1F                 2552 	.db #0x1F
   06C3 03                 2553 	.db #0x03
   06C4 1C                 2554 	.db #0x1C
   06C5 1D                 2555 	.db #0x1D
   06C6 1C                 2556 	.db #0x1C
   06C7 1C                 2557 	.db #0x1C
   06C8 1C                 2558 	.db #0x1C
   06C9 1C                 2559 	.db #0x1C
   06CA 1D                 2560 	.db #0x1D
   06CB 1C                 2561 	.db #0x1C
   06CC 0E                 2562 	.db #0x0E
   06CD 14                 2563 	.db #0x14
   06CE 04                 2564 	.db #0x04
   06CF 0E                 2565 	.db #0x0E
   06D0 14                 2566 	.db #0x14
   06D1 0A                 2567 	.db #0x0A
   06D2 1E                 2568 	.db #0x1E
   06D3 00                 2569 	.db #0x00
   06D4 0B                 2570 	.db #0x0B
   06D5 0A                 2571 	.db #0x0A
   06D6 0B                 2572 	.db #0x0B
   06D7 0A                 2573 	.db #0x0A
   06D8 0B                 2574 	.db #0x0B
   06D9 0A                 2575 	.db #0x0A
   06DA 1D                 2576 	.db #0x1D
   06DB 1C                 2577 	.db #0x1C
   06DC 14                 2578 	.db #0x14
   06DD 04                 2579 	.db #0x04
   06DE 0E                 2580 	.db #0x0E
   06DF 14                 2581 	.db #0x14
   06E0 0A                 2582 	.db #0x0A
   06E1 1F                 2583 	.db #0x1F
   06E2 1E                 2584 	.db #0x1E
   06E3 1C                 2585 	.db #0x1C
   06E4 1F                 2586 	.db #0x1F
   06E5 1E                 2587 	.db #0x1E
   06E6 1F                 2588 	.db #0x1F
   06E7 1E                 2589 	.db #0x1E
   06E8 1F                 2590 	.db #0x1F
   06E9 1E                 2591 	.db #0x1E
   06EA 1D                 2592 	.db #0x1D
   06EB 1C                 2593 	.db #0x1C
   06EC 1A                 2594 	.db #0x1A
   06ED 1C                 2595 	.db #0x1C
   06EE 18                 2596 	.db #0x18
   06EF 1A                 2597 	.db #0x1A
   06F0 1F                 2598 	.db #0x1F
   06F1 12                 2599 	.db #0x12
   06F2 18                 2600 	.db #0x18
   06F3 18                 2601 	.db #0x18
   06F4 19                 2602 	.db #0x19
   06F5 19                 2603 	.db #0x19
   06F6 13                 2604 	.db #0x13
   06F7 1E                 2605 	.db #0x1E
   06F8 1F                 2606 	.db #0x1F
   06F9 1E                 2607 	.db #0x1E
   06FA 1D                 2608 	.db #0x1D
   06FB 1C                 2609 	.db #0x1C
   06FC 1B                 2610 	.db #0x1B
   06FD 1D                 2611 	.db #0x1D
   06FE 19                 2612 	.db #0x19
   06FF 1B                 2613 	.db #0x1B
   0700 1E                 2614 	.db #0x1E
   0701 18                 2615 	.db #0x18
   0702 18                 2616 	.db #0x18
   0703 18                 2617 	.db #0x18
   0704 19                 2618 	.db #0x19
   0705 19                 2619 	.db #0x19
   0706 19                 2620 	.db #0x19
   0707 13                 2621 	.db #0x13
   0708 1F                 2622 	.db #0x1F
   0709 00                 2623 	.db #0x00
   070A 1C                 2624 	.db #0x1C
   070B 1C                 2625 	.db #0x1C
   070C 1B                 2626 	.db #0x1B
   070D 1D                 2627 	.db #0x1D
   070E 19                 2628 	.db #0x19
   070F 1B                 2629 	.db #0x1B
   0710 1F                 2630 	.db #0x1F
   0711 18                 2631 	.db #0x18
   0712 18                 2632 	.db #0x18
   0713 0C                 2633 	.db #0x0C
   0714 1C                 2634 	.db #0x1C
   0715 1C                 2635 	.db #0x1C
   0716 1C                 2636 	.db #0x1C
   0717 1C                 2637 	.db #0x1C
   0718 1C                 2638 	.db #0x1C
   0719 1C                 2639 	.db #0x1C
   071A 1C                 2640 	.db #0x1C
   071B 1C                 2641 	.db #0x1C
   071C 17                 2642 	.db #0x17
   071D 07                 2643 	.db #0x07
   071E 0D                 2644 	.db #0x0D
   071F 17                 2645 	.db #0x17
   0720 09                 2646 	.db #0x09
   0721 1E                 2647 	.db #0x1E
   0722 1F                 2648 	.db #0x1F
   0723 1D                 2649 	.db #0x1D
   0724 1D                 2650 	.db #0x1D
   0725 1D                 2651 	.db #0x1D
   0726 1C                 2652 	.db #0x1C
   0727 1D                 2653 	.db #0x1D
   0728 1C                 2654 	.db #0x1C
   0729 1C                 2655 	.db #0x1C
   072A 1C                 2656 	.db #0x1C
   072B 1C                 2657 	.db #0x1C
   072C                    2658 _tri_inva4:
   072C 1E                 2659 	.db #0x1E
   072D 00                 2660 	.db #0x00
   072E 05                 2661 	.db #0x05
   072F 0A                 2662 	.db #0x0A
   0730 1E                 2663 	.db #0x1E
   0731 00                 2664 	.db #0x00
   0732 06                 2665 	.db #0x06
   0733 16                 2666 	.db #0x16
   0734 0F                 2667 	.db #0x0F
   0735 01                 2668 	.db #0x01
   0736 1F                 2669 	.db #0x1F
   0737 11                 2670 	.db #0x11
   0738 0C                 2671 	.db #0x0C
   0739 01                 2672 	.db #0x01
   073A 1F                 2673 	.db #0x1F
   073B 1F                 2674 	.db #0x1F
   073C 12                 2675 	.db #0x12
   073D 0F                 2676 	.db #0x0F
   073E 02                 2677 	.db #0x02
   073F 1E                 2678 	.db #0x1E
   0740 12                 2679 	.db #0x12
   0741 0F                 2680 	.db #0x0F
   0742 05                 2681 	.db #0x05
   0743 15                 2682 	.db #0x15
   0744 0C                 2683 	.db #0x0C
   0745 06                 2684 	.db #0x06
   0746 09                 2685 	.db #0x09
   0747 1F                 2686 	.db #0x1F
   0748 03                 2687 	.db #0x03
   0749 06                 2688 	.db #0x06
   074A 09                 2689 	.db #0x09
   074B 1F                 2690 	.db #0x1F
   074C 15                 2691 	.db #0x15
   074D 10                 2692 	.db #0x10
   074E 1E                 2693 	.db #0x1E
   074F 08                 2694 	.db #0x08
   0750 15                 2695 	.db #0x15
   0751 10                 2696 	.db #0x10
   0752 1E                 2697 	.db #0x1E
   0753 1F                 2698 	.db #0x1F
   0754 1F                 2699 	.db #0x1F
   0755 0B                 2700 	.db #0x0B
   0756 16                 2701 	.db #0x16
   0757 13                 2702 	.db #0x13
   0758 1F                 2703 	.db #0x1F
   0759 0B                 2704 	.db #0x0B
   075A 16                 2705 	.db #0x16
   075B 13                 2706 	.db #0x13
   075C 05                 2707 	.db #0x05
   075D 1E                 2708 	.db #0x1E
   075E 00                 2709 	.db #0x00
   075F 05                 2710 	.db #0x05
   0760 0A                 2711 	.db #0x0A
   0761 1E                 2712 	.db #0x1E
   0762 08                 2713 	.db #0x08
   0763 15                 2714 	.db #0x15
   0764 13                 2715 	.db #0x13
   0765 1F                 2716 	.db #0x1F
   0766 11                 2717 	.db #0x11
   0767 0D                 2718 	.db #0x0D
   0768 01                 2719 	.db #0x01
   0769 1F                 2720 	.db #0x1F
   076A 0C                 2721 	.db #0x0C
   076B 0D                 2722 	.db #0x0D
   076C 02                 2723 	.db #0x02
   076D 1E                 2724 	.db #0x1E
   076E 0E                 2725 	.db #0x0E
   076F 0F                 2726 	.db #0x0F
   0770 1E                 2727 	.db #0x1E
   0771 00                 2728 	.db #0x00
   0772 05                 2729 	.db #0x05
   0773 15                 2730 	.db #0x15
   0774 0C                 2731 	.db #0x0C
   0775 01                 2732 	.db #0x01
   0776 1F                 2733 	.db #0x1F
   0777 07                 2734 	.db #0x07
   0778 07                 2735 	.db #0x07
   0779 1F                 2736 	.db #0x1F
   077A 06                 2737 	.db #0x06
   077B 07                 2738 	.db #0x07
   077C 1E                 2739 	.db #0x1E
   077D 1E                 2740 	.db #0x1E
   077E 15                 2741 	.db #0x15
   077F 15                 2742 	.db #0x15
   0780 1E                 2743 	.db #0x1E
   0781 0F                 2744 	.db #0x0F
   0782 02                 2745 	.db #0x02
   0783 1E                 2746 	.db #0x1E
   0784 07                 2747 	.db #0x07
   0785 06                 2748 	.db #0x06
   0786 1F                 2749 	.db #0x1F
   0787 17                 2750 	.db #0x17
   0788 17                 2751 	.db #0x17
   0789 1E                 2752 	.db #0x1E
   078A 17                 2753 	.db #0x17
   078B 16                 2754 	.db #0x16
   078C 1F                 2755 	.db #0x1F
   078D 1F                 2756 	.db #0x1F
   078E 04                 2757 	.db #0x04
   078F 05                 2758 	.db #0x05
   0790 1F                 2759 	.db #0x1F
   0791 14                 2760 	.db #0x14
   0792 09                 2761 	.db #0x09
   0793 11                 2762 	.db #0x11
   0794 17                 2763 	.db #0x17
   0795 0A                 2764 	.db #0x0A
   0796 1E                 2765 	.db #0x1E
   0797 0D                 2766 	.db #0x0D
   0798 0D                 2767 	.db #0x0D
   0799 1E                 2768 	.db #0x1E
   079A 0D                 2769 	.db #0x0D
   079B 0C                 2770 	.db #0x0C
   079C 09                 2771 	.db #0x09
   079D 1F                 2772 	.db #0x1F
   079E 0E                 2773 	.db #0x0E
   079F 0F                 2774 	.db #0x0F
   07A0 1F                 2775 	.db #0x1F
   07A1 04                 2776 	.db #0x04
   07A2 04                 2777 	.db #0x04
   07A3 1F                 2778 	.db #0x1F
   07A4 1F                 2779 	.db #0x1F
   07A5 1E                 2780 	.db #0x1E
   07A6 08                 2781 	.db #0x08
   07A7 06                 2782 	.db #0x06
   07A8 07                 2783 	.db #0x07
   07A9 1E                 2784 	.db #0x1E
   07AA 07                 2785 	.db #0x07
   07AB 06                 2786 	.db #0x06
   07AC 04                 2787 	.db #0x04
   07AD 1F                 2788 	.db #0x1F
   07AE 11                 2789 	.db #0x11
   07AF 14                 2790 	.db #0x14
   07B0 1F                 2791 	.db #0x1F
   07B1 03                 2792 	.db #0x03
   07B2 0E                 2793 	.db #0x0E
   07B3 14                 2794 	.db #0x14
   07B4 07                 2795 	.db #0x07
   07B5 0D                 2796 	.db #0x0D
   07B6 17                 2797 	.db #0x17
   07B7 0A                 2798 	.db #0x0A
   07B8 1E                 2799 	.db #0x1E
   07B9 12                 2800 	.db #0x12
   07BA 17                 2801 	.db #0x17
   07BB 0A                 2802 	.db #0x0A
   07BC 0E                 2803 	.db #0x0E
   07BD 1F                 2804 	.db #0x1F
   07BE 1F                 2805 	.db #0x1F
   07BF 04                 2806 	.db #0x04
   07C0 01                 2807 	.db #0x01
   07C1 1F                 2808 	.db #0x1F
   07C2 11                 2809 	.db #0x11
   07C3 17                 2810 	.db #0x17
   07C4 07                 2811 	.db #0x07
   07C5 0D                 2812 	.db #0x0D
   07C6 10                 2813 	.db #0x10
   07C7 1E                 2814 	.db #0x1E
   07C8 00                 2815 	.db #0x00
   07C9 0D                 2816 	.db #0x0D
   07CA 10                 2817 	.db #0x10
   07CB 1E                 2818 	.db #0x1E
   07CC 14                 2819 	.db #0x14
   07CD 09                 2820 	.db #0x09
   07CE 1F                 2821 	.db #0x1F
   07CF 03                 2822 	.db #0x03
   07D0 0E                 2823 	.db #0x0E
   07D1 13                 2824 	.db #0x13
   07D2 1F                 2825 	.db #0x1F
   07D3 1F                 2826 	.db #0x1F
   07D4 1F                 2827 	.db #0x1F
   07D5 1E                 2828 	.db #0x1E
   07D6 1E                 2829 	.db #0x1E
   07D7 08                 2830 	.db #0x08
   07D8 07                 2831 	.db #0x07
   07D9 02                 2832 	.db #0x02
   07DA 1E                 2833 	.db #0x1E
   07DB 1E                 2834 	.db #0x1E
   07DC 0B                 2835 	.db #0x0B
   07DD 04                 2836 	.db #0x04
   07DE 01                 2837 	.db #0x01
   07DF 1F                 2838 	.db #0x1F
   07E0 11                 2839 	.db #0x11
   07E1 14                 2840 	.db #0x14
   07E2 04                 2841 	.db #0x04
   07E3 0E                 2842 	.db #0x0E
   07E4 17                 2843 	.db #0x17
   07E5 07                 2844 	.db #0x07
   07E6 0D                 2845 	.db #0x0D
   07E7 17                 2846 	.db #0x17
   07E8 0A                 2847 	.db #0x0A
   07E9 1E                 2848 	.db #0x1E
   07EA 1E                 2849 	.db #0x1E
   07EB 1E                 2850 	.db #0x1E
                           2851 ;demo.c:236: void my_isr(void) interrupt
                           2852 ;	---------------------------------
                           2853 ; Function my_isr
                           2854 ; ---------------------------------
   07EC                    2855 _my_isr_start::
   07EC                    2856 _my_isr:
   07EC F5                 2857 	push	af
   07ED C5                 2858 	push	bc
   07EE D5                 2859 	push	de
   07EF E5                 2860 	push	hl
   07F0 FD E5              2861 	push	iy
                           2862 ;demo.c:238: DI;
   07F2 F3                 2863 		di 
                           2864 ;demo.c:240: READ_VDP_STATUS;
   07F3 DB 99              2865 		in a,(#0x99) 
                           2866 ;demo.c:242: PLY_Play();
   07F5 CDr00s00           2867 	call	_PLY_Play
                           2868 ;demo.c:243: PLY_SendRegisters();
   07F8 CDr00s00           2869 	call	_PLY_SendRegisters
                           2870 ;demo.c:245: vbicount+=1;
   07FB FD 21r90s16        2871 	ld	iy,#_vbicount
   07FF FD 34 00           2872 	inc	0 (iy)
   0802 20 07              2873 	jr	NZ,00103$
   0804 FD 21r90s16        2874 	ld	iy,#_vbicount
   0808 FD 34 01           2875 	inc	1 (iy)
   080B                    2876 00103$:
                           2877 ;demo.c:246: tick++;
   080B FD 21r92s16        2878 	ld	iy,#_tick
   080F FD 34 00           2879 	inc	0 (iy)
   0812 20 07              2880 	jr	NZ,00104$
   0814 FD 21r92s16        2881 	ld	iy,#_tick
   0818 FD 34 01           2882 	inc	1 (iy)
   081B                    2883 00104$:
                           2884 ;demo.c:248: EI;
   081B FB                 2885 		ei 
   081C FD E1              2886 	pop	iy
   081E E1                 2887 	pop	hl
   081F D1                 2888 	pop	de
   0820 C1                 2889 	pop	bc
   0821 F1                 2890 	pop	af
   0822 ED 4D              2891 	reti
   0824                    2892 _my_isr_end::
                           2893 ;demo.c:251: void color_isr(void) interrupt
                           2894 ;	---------------------------------
                           2895 ; Function color_isr
                           2896 ; ---------------------------------
   0824                    2897 _color_isr_start::
   0824                    2898 _color_isr:
   0824 F5                 2899 	push	af
   0825 C5                 2900 	push	bc
   0826 D5                 2901 	push	de
   0827 E5                 2902 	push	hl
   0828 FD E5              2903 	push	iy
                           2904 ;demo.c:253: DI;
   082A F3                 2905 		di 
                           2906 ;demo.c:255: if(isNthBitSet(vdp2_status(1),0)) {
   082B 3E 01              2907 	ld	a,#0x01
   082D F5                 2908 	push	af
   082E 33                 2909 	inc	sp
   082F CDr00s00           2910 	call	_vdp2_status
   0832 33                 2911 	inc	sp
   0833 4D                 2912 	ld	c,l
   0834 21 00 00           2913 	ld	hl,#0x0000
   0837 E5                 2914 	push	hl
   0838 79                 2915 	ld	a,c
   0839 F5                 2916 	push	af
   083A 33                 2917 	inc	sp
   083B CDr00s00           2918 	call	_isNthBitSet
   083E F1                 2919 	pop	af
   083F 33                 2920 	inc	sp
   0840 44                 2921 	ld	b,h
   0841 4D                 2922 	ld	c,l
   0842 79                 2923 	ld	a,c
   0843 B0                 2924 	or	a,b
   0844 28 19              2925 	jr	Z,00102$
                           2926 ;demo.c:256: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0846 21r90s16           2927 	ld	hl,#_vbicount + 0
   0849 4E                 2928 	ld	c,(hl)
   084A 06 00              2929 	ld	b,#0x00
   084C 21r00s00           2930 	ld	hl,#_sintab
   084F 09                 2931 	add	hl,bc
   0850 7E                 2932 	ld	a,(hl)
   0851 F5                 2933 	push	af
   0852 33                 2934 	inc	sp
   0853 3E 17              2935 	ld	a,#0x17
   0855 F5                 2936 	push	af
   0856 33                 2937 	inc	sp
   0857 CDr00s00           2938 	call	_vdp_register
   085A F1                 2939 	pop	af
                           2940 ;demo.c:257: READ_VDP_STATUS;
   085B DB 99              2941 		in a,(#0x99) 
   085D 18 18              2942 	jr	00103$
   085F                    2943 00102$:
                           2944 ;demo.c:260: READ_VDP_STATUS;
   085F DB 99              2945 		in a,(#0x99) 
                           2946 ;demo.c:261: vbicount++;
   0861 FD 21r90s16        2947 	ld	iy,#_vbicount
   0865 FD 34 00           2948 	inc	0 (iy)
   0868 20 07              2949 	jr	NZ,00107$
   086A FD 21r90s16        2950 	ld	iy,#_vbicount
   086E FD 34 01           2951 	inc	1 (iy)
   0871                    2952 00107$:
                           2953 ;demo.c:264: PLY_Play();
   0871 CDr00s00           2954 	call	_PLY_Play
                           2955 ;demo.c:265: PLY_SendRegisters();
   0874 CDr00s00           2956 	call	_PLY_SendRegisters
   0877                    2957 00103$:
                           2958 ;demo.c:268: EI;
   0877 FB                 2959 		ei 
   0878 FD E1              2960 	pop	iy
   087A E1                 2961 	pop	hl
   087B D1                 2962 	pop	de
   087C C1                 2963 	pop	bc
   087D F1                 2964 	pop	af
   087E ED 4D              2965 	reti
   0880                    2966 _color_isr_end::
                           2967 ;demo.c:275: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2968 ;	---------------------------------
                           2969 ; Function ge5_load
                           2970 ; ---------------------------------
   0880                    2971 _ge5_load_start::
   0880                    2972 _ge5_load:
   0880 DD E5              2973 	push	ix
   0882 DD 21 00 00        2974 	ld	ix,#0
   0886 DD 39              2975 	add	ix,sp
   0888 21 D2 FF           2976 	ld	hl,#-46
   088B 39                 2977 	add	hl,sp
   088C F9                 2978 	ld	sp,hl
                           2979 ;demo.c:279: if(debugprint == 1) {
   088D DD 7E 09           2980 	ld	a,9 (ix)
   0890 D6 01              2981 	sub	a,#0x01
   0892 20 06              2982 	jr	NZ,00125$
   0894 DD 7E 0A           2983 	ld	a,10 (ix)
   0897 B7                 2984 	or	a,a
   0898 28 02              2985 	jr	Z,00126$
   089A                    2986 00125$:
   089A 18 1B              2987 	jr	00102$
   089C                    2988 00126$:
                           2989 ;demo.c:280: puts("loading ge5file: ");
   089C 21r7Bs09           2990 	ld	hl,#__str_0
   089F E5                 2991 	push	hl
   08A0 CDr00s00           2992 	call	_puts
   08A3 F1                 2993 	pop	af
                           2994 ;demo.c:281: puts(file_name);
   08A4 DD 6E 04           2995 	ld	l,4 (ix)
   08A7 DD 66 05           2996 	ld	h,5 (ix)
   08AA E5                 2997 	push	hl
   08AB CDr00s00           2998 	call	_puts
   08AE F1                 2999 	pop	af
                           3000 ;demo.c:282: puts("\r\n");
   08AF 21r8Ds09           3001 	ld	hl,#__str_1
   08B2 E5                 3002 	push	hl
   08B3 CDr00s00           3003 	call	_puts
   08B6 F1                 3004 	pop	af
   08B7                    3005 00102$:
                           3006 ;demo.c:285: memset((uint8_t *) &f, 0, sizeof(fcb));
   08B7 21 00 00           3007 	ld	hl,#0x0000
   08BA 39                 3008 	add	hl,sp
   08BB 4D                 3009 	ld	c,l
   08BC 44                 3010 	ld	b,h
   08BD 21 2E 00           3011 	ld	hl,#0x002E
   08C0 E5                 3012 	push	hl
   08C1 3E 00              3013 	ld	a,#0x00
   08C3 F5                 3014 	push	af
   08C4 33                 3015 	inc	sp
   08C5 C5                 3016 	push	bc
   08C6 CDr00s00           3017 	call	_memset
   08C9 F1                 3018 	pop	af
   08CA F1                 3019 	pop	af
   08CB 33                 3020 	inc	sp
                           3021 ;demo.c:287: f.record_size = 128;
   08CC 21 00 00           3022 	ld	hl,#0x0000
   08CF 39                 3023 	add	hl,sp
   08D0 4D                 3024 	ld	c,l
   08D1 44                 3025 	ld	b,h
   08D2 21 0F 00           3026 	ld	hl,#0x000F
   08D5 09                 3027 	add	hl,bc
   08D6 EB                 3028 	ex	de,hl
   08D7 3E 80              3029 	ld	a,#0x80
   08D9 12                 3030 	ld	(de),a
                           3031 ;demo.c:288: f.drive = 0;
   08DA 3E 00              3032 	ld	a,#0x00
   08DC 02                 3033 	ld	(bc),a
                           3034 ;demo.c:290: memcpy(f.name, file_name, 11);
   08DD DD 5E 04           3035 	ld	e,4 (ix)
   08E0 DD 56 05           3036 	ld	d,5 (ix)
   08E3 03                 3037 	inc	bc
   08E4 21 0B 00           3038 	ld	hl,#0x000B
   08E7 E5                 3039 	push	hl
   08E8 D5                 3040 	push	de
   08E9 C5                 3041 	push	bc
   08EA CDr00s00           3042 	call	_memcpy
   08ED F1                 3043 	pop	af
   08EE F1                 3044 	pop	af
   08EF F1                 3045 	pop	af
                           3046 ;demo.c:292: if (open(&f) != 0) return 0;
   08F0 21 00 00           3047 	ld	hl,#0x0000
   08F3 39                 3048 	add	hl,sp
   08F4 E5                 3049 	push	hl
   08F5 CDr00s00           3050 	call	_open
   08F8 F1                 3051 	pop	af
   08F9 AF                 3052 	xor	a,a
   08FA B5                 3053 	or	a,l
   08FB 28 05              3054 	jr	Z,00104$
   08FD 2E 00              3055 	ld	l,#0x00
   08FF C3r76s09           3056 	jp	00116$
   0902                    3057 00104$:
                           3058 ;demo.c:293: vdp_set_write_address(vramh, vraml);
   0902 DD 6E 07           3059 	ld	l,7 (ix)
   0905 DD 66 08           3060 	ld	h,8 (ix)
   0908 E5                 3061 	push	hl
   0909 DD 7E 06           3062 	ld	a,6 (ix)
   090C F5                 3063 	push	af
   090D 33                 3064 	inc	sp
   090E CDr00s00           3065 	call	_vdp_set_write_address
   0911 F1                 3066 	pop	af
   0912 33                 3067 	inc	sp
                           3068 ;demo.c:295: for (i = 0; i < 213; i++) {
   0913 0E 00              3069 	ld	c,#0x00
   0915                    3070 00112$:
   0915 79                 3071 	ld	a,c
   0916 D6 D5              3072 	sub	a,#0xD5
   0918 D2r6Bs09           3073 	jp	NC,00115$
                           3074 ;demo.c:296: if (block_set_data_ptr(scratch) != 0) return 0;
   091B C5                 3075 	push	bc
   091C 21r50s15           3076 	ld	hl,#_scratch
   091F E5                 3077 	push	hl
   0920 CDr00s00           3078 	call	_block_set_data_ptr
   0923 F1                 3079 	pop	af
   0924 7D                 3080 	ld	a,l
   0925 C1                 3081 	pop	bc
   0926 47                 3082 	ld	b,a
   0927 B7                 3083 	or	a,a
   0928 28 05              3084 	jr	Z,00106$
   092A 2E 00              3085 	ld	l,#0x00
   092C C3r76s09           3086 	jp	00116$
   092F                    3087 00106$:
                           3088 ;demo.c:297: if (block_read(&f) != 0) return 0;
   092F 21 00 00           3089 	ld	hl,#0x0000
   0932 39                 3090 	add	hl,sp
   0933 C5                 3091 	push	bc
   0934 E5                 3092 	push	hl
   0935 CDr00s00           3093 	call	_block_read
   0938 F1                 3094 	pop	af
   0939 7D                 3095 	ld	a,l
   093A C1                 3096 	pop	bc
   093B 47                 3097 	ld	b,a
   093C B7                 3098 	or	a,a
   093D 28 04              3099 	jr	Z,00108$
   093F 2E 00              3100 	ld	l,#0x00
   0941 18 33              3101 	jr	00116$
   0943                    3102 00108$:
                           3103 ;demo.c:299: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0943 AF                 3104 	xor	a,a
   0944 B1                 3105 	or	a,c
   0945 20 11              3106 	jr	NZ,00110$
   0947 11r57s15           3107 	ld	de,#_scratch + 7
   094A C5                 3108 	push	bc
   094B 3E 79              3109 	ld	a,#0x79
   094D F5                 3110 	push	af
   094E 33                 3111 	inc	sp
   094F D5                 3112 	push	de
   0950 CDr00s00           3113 	call	_vdp_load_screen
   0953 F1                 3114 	pop	af
   0954 33                 3115 	inc	sp
   0955 C1                 3116 	pop	bc
   0956 18 0F              3117 	jr	00114$
   0958                    3118 00110$:
                           3119 ;demo.c:300: else vdp_load_screen(scratch, 128);
   0958 C5                 3120 	push	bc
   0959 3E 80              3121 	ld	a,#0x80
   095B F5                 3122 	push	af
   095C 33                 3123 	inc	sp
   095D 21r50s15           3124 	ld	hl,#_scratch
   0960 E5                 3125 	push	hl
   0961 CDr00s00           3126 	call	_vdp_load_screen
   0964 F1                 3127 	pop	af
   0965 33                 3128 	inc	sp
   0966 C1                 3129 	pop	bc
   0967                    3130 00114$:
                           3131 ;demo.c:295: for (i = 0; i < 213; i++) {
   0967 0C                 3132 	inc	c
   0968 C3r15s09           3133 	jp	00112$
   096B                    3134 00115$:
                           3135 ;demo.c:303: close(&f);
   096B 21 00 00           3136 	ld	hl,#0x0000
   096E 39                 3137 	add	hl,sp
   096F E5                 3138 	push	hl
   0970 CDr00s00           3139 	call	_close
   0973 F1                 3140 	pop	af
                           3141 ;demo.c:305: return 1;
   0974 2E 01              3142 	ld	l,#0x01
   0976                    3143 00116$:
   0976 DD F9              3144 	ld	sp,ix
   0978 DD E1              3145 	pop	ix
   097A C9                 3146 	ret
   097B                    3147 _ge5_load_end::
   097B                    3148 __str_0:
   097B 6C 6F 61 64 69 6E  3149 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   098C 00                 3150 	.db 0x00
   098D                    3151 __str_1:
   098D 0D                 3152 	.db 0x0D
   098E 0A                 3153 	.db 0x0A
   098F 00                 3154 	.db 0x00
                           3155 ;demo.c:308: void scratch_clear() {
                           3156 ;	---------------------------------
                           3157 ; Function scratch_clear
                           3158 ; ---------------------------------
   0990                    3159 _scratch_clear_start::
   0990                    3160 _scratch_clear:
                           3161 ;demo.c:309: memset((uint8_t *) &scratch, 0, 128);
   0990 21 80 00           3162 	ld	hl,#0x0080
   0993 E5                 3163 	push	hl
   0994 3E 00              3164 	ld	a,#0x00
   0996 F5                 3165 	push	af
   0997 33                 3166 	inc	sp
   0998 21r50s15           3167 	ld	hl,#_scratch
   099B E5                 3168 	push	hl
   099C CDr00s00           3169 	call	_memset
   099F F1                 3170 	pop	af
   09A0 F1                 3171 	pop	af
   09A1 33                 3172 	inc	sp
   09A2 C9                 3173 	ret
   09A3                    3174 _scratch_clear_end::
                           3175 ;demo.c:312: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3176 ;	---------------------------------
                           3177 ; Function pal_load
                           3178 ; ---------------------------------
   09A3                    3179 _pal_load_start::
   09A3                    3180 _pal_load:
   09A3 DD E5              3181 	push	ix
   09A5 DD 21 00 00        3182 	ld	ix,#0
   09A9 DD 39              3183 	add	ix,sp
   09AB 21 D2 FF           3184 	ld	hl,#-46
   09AE 39                 3185 	add	hl,sp
   09AF F9                 3186 	ld	sp,hl
                           3187 ;demo.c:315: if(debugprint == 1) {
   09B0 DD 7E 07           3188 	ld	a,7 (ix)
   09B3 D6 01              3189 	sub	a,#0x01
   09B5 20 06              3190 	jr	NZ,00115$
   09B7 DD 7E 08           3191 	ld	a,8 (ix)
   09BA B7                 3192 	or	a,a
   09BB 28 02              3193 	jr	Z,00116$
   09BD                    3194 00115$:
   09BD 18 1B              3195 	jr	00102$
   09BF                    3196 00116$:
                           3197 ;demo.c:316: puts("loading palfile: ");
   09BF 21r6Ds0A           3198 	ld	hl,#__str_2
   09C2 E5                 3199 	push	hl
   09C3 CDr00s00           3200 	call	_puts
   09C6 F1                 3201 	pop	af
                           3202 ;demo.c:317: puts(file_name);
   09C7 DD 6E 04           3203 	ld	l,4 (ix)
   09CA DD 66 05           3204 	ld	h,5 (ix)
   09CD E5                 3205 	push	hl
   09CE CDr00s00           3206 	call	_puts
   09D1 F1                 3207 	pop	af
                           3208 ;demo.c:318: puts("\r\n");
   09D2 21r7Fs0A           3209 	ld	hl,#__str_3
   09D5 E5                 3210 	push	hl
   09D6 CDr00s00           3211 	call	_puts
   09D9 F1                 3212 	pop	af
   09DA                    3213 00102$:
                           3214 ;demo.c:321: memset((uint8_t *) &f, 0, sizeof(fcb));
   09DA 21 00 00           3215 	ld	hl,#0x0000
   09DD 39                 3216 	add	hl,sp
   09DE 4D                 3217 	ld	c,l
   09DF 44                 3218 	ld	b,h
   09E0 21 2E 00           3219 	ld	hl,#0x002E
   09E3 E5                 3220 	push	hl
   09E4 3E 00              3221 	ld	a,#0x00
   09E6 F5                 3222 	push	af
   09E7 33                 3223 	inc	sp
   09E8 C5                 3224 	push	bc
   09E9 CDr00s00           3225 	call	_memset
   09EC F1                 3226 	pop	af
   09ED F1                 3227 	pop	af
   09EE 33                 3228 	inc	sp
                           3229 ;demo.c:322: scratch_clear();
   09EF CDr90s09           3230 	call	_scratch_clear
                           3231 ;demo.c:324: f.record_size = ss;
   09F2 21 00 00           3232 	ld	hl,#0x0000
   09F5 39                 3233 	add	hl,sp
   09F6 4D                 3234 	ld	c,l
   09F7 44                 3235 	ld	b,h
   09F8 21 0F 00           3236 	ld	hl,#0x000F
   09FB 09                 3237 	add	hl,bc
   09FC EB                 3238 	ex	de,hl
   09FD DD 7E 06           3239 	ld	a,6 (ix)
   0A00 12                 3240 	ld	(de),a
                           3241 ;demo.c:325: f.drive = 0;
   0A01 3E 00              3242 	ld	a,#0x00
   0A03 02                 3243 	ld	(bc),a
                           3244 ;demo.c:327: memcpy(f.name, file_name, 11);
   0A04 DD 5E 04           3245 	ld	e,4 (ix)
   0A07 DD 56 05           3246 	ld	d,5 (ix)
   0A0A 03                 3247 	inc	bc
   0A0B 21 0B 00           3248 	ld	hl,#0x000B
   0A0E E5                 3249 	push	hl
   0A0F D5                 3250 	push	de
   0A10 C5                 3251 	push	bc
   0A11 CDr00s00           3252 	call	_memcpy
   0A14 F1                 3253 	pop	af
   0A15 F1                 3254 	pop	af
   0A16 F1                 3255 	pop	af
                           3256 ;demo.c:329: if (open(&f) != 0) return 0;
   0A17 21 00 00           3257 	ld	hl,#0x0000
   0A1A 39                 3258 	add	hl,sp
   0A1B E5                 3259 	push	hl
   0A1C CDr00s00           3260 	call	_open
   0A1F F1                 3261 	pop	af
   0A20 AF                 3262 	xor	a,a
   0A21 B5                 3263 	or	a,l
   0A22 28 04              3264 	jr	Z,00104$
   0A24 2E 00              3265 	ld	l,#0x00
   0A26 18 40              3266 	jr	00109$
   0A28                    3267 00104$:
                           3268 ;demo.c:330: if (block_set_data_ptr(scratch) != 0) return 0;
   0A28 21r50s15           3269 	ld	hl,#_scratch
   0A2B E5                 3270 	push	hl
   0A2C CDr00s00           3271 	call	_block_set_data_ptr
   0A2F F1                 3272 	pop	af
   0A30 AF                 3273 	xor	a,a
   0A31 B5                 3274 	or	a,l
   0A32 28 04              3275 	jr	Z,00106$
   0A34 2E 00              3276 	ld	l,#0x00
   0A36 18 30              3277 	jr	00109$
   0A38                    3278 00106$:
                           3279 ;demo.c:331: if (block_read(&f) != 0) return 0;
   0A38 21 00 00           3280 	ld	hl,#0x0000
   0A3B 39                 3281 	add	hl,sp
   0A3C E5                 3282 	push	hl
   0A3D CDr00s00           3283 	call	_block_read
   0A40 F1                 3284 	pop	af
   0A41 AF                 3285 	xor	a,a
   0A42 B5                 3286 	or	a,l
   0A43 28 04              3287 	jr	Z,00108$
   0A45 2E 00              3288 	ld	l,#0x00
   0A47 18 1F              3289 	jr	00109$
   0A49                    3290 00108$:
                           3291 ;demo.c:333: memcpy(cur_palette, scratch+7, ss);
   0A49 DD 4E 06           3292 	ld	c,6 (ix)
   0A4C 06 00              3293 	ld	b,#0x00
   0A4E 11r57s15           3294 	ld	de,#_scratch + 7
   0A51 C5                 3295 	push	bc
   0A52 D5                 3296 	push	de
   0A53 21rD0s15           3297 	ld	hl,#_cur_palette
   0A56 E5                 3298 	push	hl
   0A57 CDr00s00           3299 	call	_memcpy
   0A5A F1                 3300 	pop	af
   0A5B F1                 3301 	pop	af
   0A5C F1                 3302 	pop	af
                           3303 ;demo.c:335: close(&f);
   0A5D 21 00 00           3304 	ld	hl,#0x0000
   0A60 39                 3305 	add	hl,sp
   0A61 E5                 3306 	push	hl
   0A62 CDr00s00           3307 	call	_close
   0A65 F1                 3308 	pop	af
                           3309 ;demo.c:336: return 1;
   0A66 2E 01              3310 	ld	l,#0x01
   0A68                    3311 00109$:
   0A68 DD F9              3312 	ld	sp,ix
   0A6A DD E1              3313 	pop	ix
   0A6C C9                 3314 	ret
   0A6D                    3315 _pal_load_end::
   0A6D                    3316 __str_2:
   0A6D 6C 6F 61 64 69 6E  3317 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0A7E 00                 3318 	.db 0x00
   0A7F                    3319 __str_3:
   0A7F 0D                 3320 	.db 0x0D
   0A80 0A                 3321 	.db 0x0A
   0A81 00                 3322 	.db 0x00
                           3323 ;demo.c:340: void pause() {
                           3324 ;	---------------------------------
                           3325 ; Function pause
                           3326 ; ---------------------------------
   0A82                    3327 _pause_start::
   0A82                    3328 _pause:
                           3329 ;demo.c:341: uint8_t i,j,k = 0;
                           3330 ;demo.c:342: for (i = 0; i < 255; i++) {	
   0A82 01 00 00           3331 	ld	bc,#0x0000
   0A85                    3332 00104$:
   0A85 78                 3333 	ld	a,b
   0A86 D6 FF              3334 	sub	a,#0xFF
   0A88 D0                 3335 	ret	NC
                           3336 ;demo.c:343: for (j = 0; j < 255; j++) {
   0A89 59                 3337 	ld	e,c
   0A8A 16 FF              3338 	ld	d,#0xFF
   0A8C                    3339 00103$:
                           3340 ;demo.c:344: k++;
   0A8C 1C                 3341 	inc	e
   0A8D 15                 3342 	dec	d
                           3343 ;demo.c:343: for (j = 0; j < 255; j++) {
   0A8E AF                 3344 	xor	a,a
   0A8F B2                 3345 	or	a,d
   0A90 20 FA              3346 	jr	NZ,00103$
                           3347 ;demo.c:342: for (i = 0; i < 255; i++) {	
   0A92 4B                 3348 	ld	c,e
   0A93 04                 3349 	inc	b
   0A94 18 EF              3350 	jr	00104$
   0A96                    3351 _pause_end::
                           3352 ;demo.c:350: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3353 ;	---------------------------------
                           3354 ; Function raw_load
                           3355 ; ---------------------------------
   0A96                    3356 _raw_load_start::
   0A96                    3357 _raw_load:
   0A96 DD E5              3358 	push	ix
   0A98 DD 21 00 00        3359 	ld	ix,#0
   0A9C DD 39              3360 	add	ix,sp
   0A9E 21 D2 FF           3361 	ld	hl,#-46
   0AA1 39                 3362 	add	hl,sp
   0AA2 F9                 3363 	ld	sp,hl
                           3364 ;demo.c:355: if(debugprint == 1) {
   0AA3 DD 7E 0A           3365 	ld	a,10 (ix)
   0AA6 D6 01              3366 	sub	a,#0x01
   0AA8 20 06              3367 	jr	NZ,00120$
   0AAA DD 7E 0B           3368 	ld	a,11 (ix)
   0AAD B7                 3369 	or	a,a
   0AAE 28 02              3370 	jr	Z,00121$
   0AB0                    3371 00120$:
   0AB0 18 1B              3372 	jr	00102$
   0AB2                    3373 00121$:
                           3374 ;demo.c:356: puts("loading rawfile: ");
   0AB2 21r84s0B           3375 	ld	hl,#__str_4
   0AB5 E5                 3376 	push	hl
   0AB6 CDr00s00           3377 	call	_puts
   0AB9 F1                 3378 	pop	af
                           3379 ;demo.c:357: puts(file_name);
   0ABA DD 6E 04           3380 	ld	l,4 (ix)
   0ABD DD 66 05           3381 	ld	h,5 (ix)
   0AC0 E5                 3382 	push	hl
   0AC1 CDr00s00           3383 	call	_puts
   0AC4 F1                 3384 	pop	af
                           3385 ;demo.c:358: puts("\r\n");
   0AC5 21r96s0B           3386 	ld	hl,#__str_5
   0AC8 E5                 3387 	push	hl
   0AC9 CDr00s00           3388 	call	_puts
   0ACC F1                 3389 	pop	af
   0ACD                    3390 00102$:
                           3391 ;demo.c:361: memset((uint8_t *) &f, 0, sizeof(fcb));
   0ACD 21 00 00           3392 	ld	hl,#0x0000
   0AD0 39                 3393 	add	hl,sp
   0AD1 4D                 3394 	ld	c,l
   0AD2 44                 3395 	ld	b,h
   0AD3 21 2E 00           3396 	ld	hl,#0x002E
   0AD6 E5                 3397 	push	hl
   0AD7 3E 00              3398 	ld	a,#0x00
   0AD9 F5                 3399 	push	af
   0ADA 33                 3400 	inc	sp
   0ADB C5                 3401 	push	bc
   0ADC CDr00s00           3402 	call	_memset
   0ADF F1                 3403 	pop	af
   0AE0 F1                 3404 	pop	af
   0AE1 33                 3405 	inc	sp
                           3406 ;demo.c:362: scratch_clear();
   0AE2 CDr90s09           3407 	call	_scratch_clear
                           3408 ;demo.c:364: f.record_size = 128;
   0AE5 21 00 00           3409 	ld	hl,#0x0000
   0AE8 39                 3410 	add	hl,sp
   0AE9 4D                 3411 	ld	c,l
   0AEA 44                 3412 	ld	b,h
   0AEB 21 0F 00           3413 	ld	hl,#0x000F
   0AEE 09                 3414 	add	hl,bc
   0AEF EB                 3415 	ex	de,hl
   0AF0 3E 80              3416 	ld	a,#0x80
   0AF2 12                 3417 	ld	(de),a
                           3418 ;demo.c:365: f.drive = 0;
   0AF3 3E 00              3419 	ld	a,#0x00
   0AF5 02                 3420 	ld	(bc),a
                           3421 ;demo.c:367: memcpy(f.name, file_name, 11);
   0AF6 DD 5E 04           3422 	ld	e,4 (ix)
   0AF9 DD 56 05           3423 	ld	d,5 (ix)
   0AFC 03                 3424 	inc	bc
   0AFD 21 0B 00           3425 	ld	hl,#0x000B
   0B00 E5                 3426 	push	hl
   0B01 D5                 3427 	push	de
   0B02 C5                 3428 	push	bc
   0B03 CDr00s00           3429 	call	_memcpy
   0B06 F1                 3430 	pop	af
   0B07 F1                 3431 	pop	af
   0B08 F1                 3432 	pop	af
                           3433 ;demo.c:369: if (open(&f) != 0) return 0;
   0B09 21 00 00           3434 	ld	hl,#0x0000
   0B0C 39                 3435 	add	hl,sp
   0B0D E5                 3436 	push	hl
   0B0E CDr00s00           3437 	call	_open
   0B11 F1                 3438 	pop	af
   0B12 AF                 3439 	xor	a,a
   0B13 B5                 3440 	or	a,l
   0B14 28 05              3441 	jr	Z,00119$
   0B16 2E 00              3442 	ld	l,#0x00
   0B18 C3r7Fs0B           3443 	jp	00112$
                           3444 ;demo.c:371: while(total < size) {
   0B1B                    3445 00119$:
   0B1B 01 00 00           3446 	ld	bc,#0x0000
   0B1E                    3447 00109$:
   0B1E 79                 3448 	ld	a,c
   0B1F DD 96 06           3449 	sub	a,6 (ix)
   0B22 78                 3450 	ld	a,b
   0B23 DD 9E 07           3451 	sbc	a,7 (ix)
   0B26 F2r74s0B           3452 	jp	P,00111$
                           3453 ;demo.c:372: if (block_set_data_ptr(scratch) != 0) return 0;
   0B29 C5                 3454 	push	bc
   0B2A 21r50s15           3455 	ld	hl,#_scratch
   0B2D E5                 3456 	push	hl
   0B2E CDr00s00           3457 	call	_block_set_data_ptr
   0B31 F1                 3458 	pop	af
   0B32 5D                 3459 	ld	e,l
   0B33 C1                 3460 	pop	bc
   0B34 AF                 3461 	xor	a,a
   0B35 B3                 3462 	or	a,e
   0B36 28 04              3463 	jr	Z,00106$
   0B38 2E 00              3464 	ld	l,#0x00
   0B3A 18 43              3465 	jr	00112$
   0B3C                    3466 00106$:
                           3467 ;demo.c:373: if (block_read(&f) != 0) return 0;
   0B3C 21 00 00           3468 	ld	hl,#0x0000
   0B3F 39                 3469 	add	hl,sp
   0B40 C5                 3470 	push	bc
   0B41 E5                 3471 	push	hl
   0B42 CDr00s00           3472 	call	_block_read
   0B45 F1                 3473 	pop	af
   0B46 5D                 3474 	ld	e,l
   0B47 C1                 3475 	pop	bc
   0B48 AF                 3476 	xor	a,a
   0B49 B3                 3477 	or	a,e
   0B4A 28 04              3478 	jr	Z,00108$
   0B4C 2E 00              3479 	ld	l,#0x00
   0B4E 18 2F              3480 	jr	00112$
   0B50                    3481 00108$:
                           3482 ;demo.c:375: memcpy(buffer+total,scratch,incr);
   0B50 DD 7E 08           3483 	ld	a,8 (ix)
   0B53 81                 3484 	add	a,c
   0B54 5F                 3485 	ld	e,a
   0B55 DD 7E 09           3486 	ld	a,9 (ix)
   0B58 88                 3487 	adc	a,b
   0B59 57                 3488 	ld	d,a
   0B5A C5                 3489 	push	bc
   0B5B 21 80 00           3490 	ld	hl,#0x0080
   0B5E E5                 3491 	push	hl
   0B5F 21r50s15           3492 	ld	hl,#_scratch
   0B62 E5                 3493 	push	hl
   0B63 D5                 3494 	push	de
   0B64 CDr00s00           3495 	call	_memcpy
   0B67 F1                 3496 	pop	af
   0B68 F1                 3497 	pop	af
   0B69 F1                 3498 	pop	af
   0B6A C1                 3499 	pop	bc
                           3500 ;demo.c:377: total+=incr;
   0B6B 21 80 00           3501 	ld	hl,#0x0080
   0B6E 09                 3502 	add	hl,bc
   0B6F 4D                 3503 	ld	c,l
   0B70 44                 3504 	ld	b,h
   0B71 C3r1Es0B           3505 	jp	00109$
   0B74                    3506 00111$:
                           3507 ;demo.c:380: close(&f);
   0B74 21 00 00           3508 	ld	hl,#0x0000
   0B77 39                 3509 	add	hl,sp
   0B78 E5                 3510 	push	hl
   0B79 CDr00s00           3511 	call	_close
   0B7C F1                 3512 	pop	af
                           3513 ;demo.c:382: return 1;
   0B7D 2E 01              3514 	ld	l,#0x01
   0B7F                    3515 00112$:
   0B7F DD F9              3516 	ld	sp,ix
   0B81 DD E1              3517 	pop	ix
   0B83 C9                 3518 	ret
   0B84                    3519 _raw_load_end::
   0B84                    3520 __str_4:
   0B84 6C 6F 61 64 69 6E  3521 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0B95 00                 3522 	.db 0x00
   0B96                    3523 __str_5:
   0B96 0D                 3524 	.db 0x0D
   0B97 0A                 3525 	.db 0x0A
   0B98 00                 3526 	.db 0x00
                           3527 ;demo.c:385: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3528 ;	---------------------------------
                           3529 ; Function pck_load
                           3530 ; ---------------------------------
   0B99                    3531 _pck_load_start::
   0B99                    3532 _pck_load:
   0B99 DD E5              3533 	push	ix
   0B9B DD 21 00 00        3534 	ld	ix,#0
   0B9F DD 39              3535 	add	ix,sp
                           3536 ;demo.c:386: if(debugprint == 1) {
   0BA1 DD 7E 0C           3537 	ld	a,12 (ix)
   0BA4 D6 01              3538 	sub	a,#0x01
   0BA6 20 06              3539 	jr	NZ,00106$
   0BA8 DD 7E 0D           3540 	ld	a,13 (ix)
   0BAB B7                 3541 	or	a,a
   0BAC 28 02              3542 	jr	Z,00107$
   0BAE                    3543 00106$:
   0BAE 18 1B              3544 	jr	00102$
   0BB0                    3545 00107$:
                           3546 ;demo.c:387: puts("loading pckfile: ");
   0BB0 21r12s0C           3547 	ld	hl,#__str_6
   0BB3 E5                 3548 	push	hl
   0BB4 CDr00s00           3549 	call	_puts
   0BB7 F1                 3550 	pop	af
                           3551 ;demo.c:388: puts(file_name);
   0BB8 DD 6E 04           3552 	ld	l,4 (ix)
   0BBB DD 66 05           3553 	ld	h,5 (ix)
   0BBE E5                 3554 	push	hl
   0BBF CDr00s00           3555 	call	_puts
   0BC2 F1                 3556 	pop	af
                           3557 ;demo.c:389: puts("\r\n");
   0BC3 21r24s0C           3558 	ld	hl,#__str_7
   0BC6 E5                 3559 	push	hl
   0BC7 CDr00s00           3560 	call	_puts
   0BCA F1                 3561 	pop	af
   0BCB                    3562 00102$:
                           3563 ;demo.c:391: memset((uint8_t *) &packbuffer, 0, size);
   0BCB DD 4E 06           3564 	ld	c,6 (ix)
   0BCE DD 46 07           3565 	ld	b,7 (ix)
   0BD1 C5                 3566 	push	bc
   0BD2 C5                 3567 	push	bc
   0BD3 3E 00              3568 	ld	a,#0x00
   0BD5 F5                 3569 	push	af
   0BD6 33                 3570 	inc	sp
   0BD7 21rC8s01           3571 	ld	hl,#_packbuffer
   0BDA E5                 3572 	push	hl
   0BDB CDr00s00           3573 	call	_memset
   0BDE F1                 3574 	pop	af
   0BDF F1                 3575 	pop	af
   0BE0 33                 3576 	inc	sp
   0BE1 C1                 3577 	pop	bc
                           3578 ;demo.c:392: raw_load(file_name, size, packbuffer,0);
   0BE2 21 00 00           3579 	ld	hl,#0x0000
   0BE5 E5                 3580 	push	hl
   0BE6 21rC8s01           3581 	ld	hl,#_packbuffer
   0BE9 E5                 3582 	push	hl
   0BEA C5                 3583 	push	bc
   0BEB DD 6E 04           3584 	ld	l,4 (ix)
   0BEE DD 66 05           3585 	ld	h,5 (ix)
   0BF1 E5                 3586 	push	hl
   0BF2 CDr96s0A           3587 	call	_raw_load
   0BF5 F1                 3588 	pop	af
   0BF6 F1                 3589 	pop	af
   0BF7 F1                 3590 	pop	af
   0BF8 F1                 3591 	pop	af
                           3592 ;demo.c:393: bitbuster(packbuffer,address,vram_offset);
   0BF9 DD 7E 0A           3593 	ld	a,10 (ix)
   0BFC F5                 3594 	push	af
   0BFD 33                 3595 	inc	sp
   0BFE DD 6E 08           3596 	ld	l,8 (ix)
   0C01 DD 66 09           3597 	ld	h,9 (ix)
   0C04 E5                 3598 	push	hl
   0C05 21rC8s01           3599 	ld	hl,#_packbuffer
   0C08 E5                 3600 	push	hl
   0C09 CDr00s00           3601 	call	_bitbuster
   0C0C F1                 3602 	pop	af
   0C0D F1                 3603 	pop	af
   0C0E 33                 3604 	inc	sp
   0C0F DD E1              3605 	pop	ix
   0C11 C9                 3606 	ret
   0C12                    3607 _pck_load_end::
   0C12                    3608 __str_6:
   0C12 6C 6F 61 64 69 6E  3609 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0C23 00                 3610 	.db 0x00
   0C24                    3611 __str_7:
   0C24 0D                 3612 	.db 0x0D
   0C25 0A                 3613 	.db 0x0A
   0C26 00                 3614 	.db 0x00
                           3615 ;demo.c:396: void fadein() {
                           3616 ;	---------------------------------
                           3617 ; Function fadein
                           3618 ; ---------------------------------
   0C27                    3619 _fadein_start::
   0C27                    3620 _fadein:
   0C27 DD E5              3621 	push	ix
   0C29 DD 21 00 00        3622 	ld	ix,#0
   0C2D DD 39              3623 	add	ix,sp
   0C2F F5                 3624 	push	af
                           3625 ;demo.c:399: if (tick < 8) return;
   0C30 3Ar92s16           3626 	ld	a,(#_tick+0)
   0C33 D6 08              3627 	sub	a,#0x08
   0C35 3Ar93s16           3628 	ld	a,(#_tick+1)
   0C38 DE 00              3629 	sbc	a,#0x00
   0C3A F2r40s0C           3630 	jp	P,00102$
   0C3D C3rEEs0C           3631 	jp	00113$
   0C40                    3632 00102$:
                           3633 ;demo.c:401: tick = 0;
   0C40 21r92s16           3634 	ld	hl,#_tick + 0
   0C43 36 00              3635 	ld	(hl), #0x00
   0C45 21r93s16           3636 	ld	hl,#_tick + 1
   0C48 36 00              3637 	ld	(hl), #0x00
                           3638 ;demo.c:403: for(i = 0; i < 32; i+=2) {
   0C4A 0E 00              3639 	ld	c,#0x00
   0C4C                    3640 00109$:
   0C4C 79                 3641 	ld	a,c
   0C4D D6 20              3642 	sub	a,#0x20
   0C4F D2rE6s0C           3643 	jp	NC,00112$
                           3644 ;demo.c:404: uint8_t r = scratch[i] >> 4;
   0C52 3Er50              3645 	ld	a,#<_scratch
   0C54 81                 3646 	add	a,c
   0C55 5F                 3647 	ld	e,a
   0C56 3Es15              3648 	ld	a,#>_scratch
   0C58 CE 00              3649 	adc	a,#0x00
   0C5A 57                 3650 	ld	d,a
   0C5B 1A                 3651 	ld	a,(de)
   0C5C 47                 3652 	ld	b,a
   0C5D 58                 3653 	ld	e,b
   0C5E CB 3B              3654 	srl	e
   0C60 CB 3B              3655 	srl	e
   0C62 CB 3B              3656 	srl	e
   0C64 CB 3B              3657 	srl	e
                           3658 ;demo.c:405: uint8_t b = scratch[i] & 0xf;
   0C66 78                 3659 	ld	a,b
   0C67 E6 0F              3660 	and	a,#0x0F
   0C69 DD 77 FF           3661 	ld	-1 (ix),a
                           3662 ;demo.c:406: uint8_t g = scratch[i+1];
   0C6C 51                 3663 	ld	d,c
   0C6D 14                 3664 	inc	d
   0C6E 3Er50              3665 	ld	a,#<_scratch
   0C70 82                 3666 	add	a,d
   0C71 6F                 3667 	ld	l,a
   0C72 3Es15              3668 	ld	a,#>_scratch
   0C74 CE 00              3669 	adc	a,#0x00
   0C76 67                 3670 	ld	h,a
   0C77 56                 3671 	ld	d,(hl)
   0C78 DD 72 FE           3672 	ld	-2 (ix),d
                           3673 ;demo.c:408: if (r < (cur_palette[i] >> 4)) r++;
   0C7B 3ErD0              3674 	ld	a,#<_cur_palette
   0C7D 81                 3675 	add	a,c
   0C7E 6F                 3676 	ld	l,a
   0C7F 3Es15              3677 	ld	a,#>_cur_palette
   0C81 CE 00              3678 	adc	a,#0x00
   0C83 67                 3679 	ld	h,a
   0C84 56                 3680 	ld	d,(hl)
   0C85 CB 3A              3681 	srl	d
   0C87 CB 3A              3682 	srl	d
   0C89 CB 3A              3683 	srl	d
   0C8B CB 3A              3684 	srl	d
   0C8D 7B                 3685 	ld	a,e
   0C8E 92                 3686 	sub	a,d
   0C8F 30 01              3687 	jr	NC,00104$
   0C91 1C                 3688 	inc	e
   0C92                    3689 00104$:
                           3690 ;demo.c:409: if (b < (cur_palette[i] & 0xf)) b++;
   0C92 3ErD0              3691 	ld	a,#<_cur_palette
   0C94 81                 3692 	add	a,c
   0C95 6F                 3693 	ld	l,a
   0C96 3Es15              3694 	ld	a,#>_cur_palette
   0C98 CE 00              3695 	adc	a,#0x00
   0C9A 67                 3696 	ld	h,a
   0C9B 7E                 3697 	ld	a,(hl)
   0C9C E6 0F              3698 	and	a,#0x0F
   0C9E 47                 3699 	ld	b,a
   0C9F DD 7E FF           3700 	ld	a,-1 (ix)
   0CA2 90                 3701 	sub	a,b
   0CA3 30 03              3702 	jr	NC,00106$
   0CA5 DD 34 FF           3703 	inc	-1 (ix)
   0CA8                    3704 00106$:
                           3705 ;demo.c:411: scratch[i] = (r << 4) | b;
   0CA8 3Er50              3706 	ld	a,#<_scratch
   0CAA 81                 3707 	add	a,c
   0CAB 47                 3708 	ld	b,a
   0CAC 3Es15              3709 	ld	a,#>_scratch
   0CAE CE 00              3710 	adc	a,#0x00
   0CB0 57                 3711 	ld	d,a
   0CB1 7B                 3712 	ld	a,e
   0CB2 07                 3713 	rlca
   0CB3 07                 3714 	rlca
   0CB4 07                 3715 	rlca
   0CB5 07                 3716 	rlca
   0CB6 E6 F0              3717 	and	a,#0xF0
   0CB8 DD B6 FF           3718 	or	a,-1 (ix)
   0CBB 68                 3719 	ld	l,b
   0CBC 62                 3720 	ld	h,d
   0CBD 77                 3721 	ld	(hl),a
                           3722 ;demo.c:412: if (g < cur_palette[i+1]) scratch[i+1]++;
   0CBE 41                 3723 	ld	b,c
   0CBF 04                 3724 	inc	b
   0CC0 3ErD0              3725 	ld	a,#<_cur_palette
   0CC2 80                 3726 	add	a,b
   0CC3 5F                 3727 	ld	e,a
   0CC4 3Es15              3728 	ld	a,#>_cur_palette
   0CC6 CE 00              3729 	adc	a,#0x00
   0CC8 57                 3730 	ld	d,a
   0CC9 1A                 3731 	ld	a,(de)
   0CCA 5F                 3732 	ld	e,a
   0CCB DD 7E FE           3733 	ld	a,-2 (ix)
   0CCE 93                 3734 	sub	a,e
   0CCF 30 10              3735 	jr	NC,00111$
   0CD1 3Er50              3736 	ld	a,#<_scratch
   0CD3 80                 3737 	add	a,b
   0CD4 47                 3738 	ld	b,a
   0CD5 3Es15              3739 	ld	a,#>_scratch
   0CD7 CE 00              3740 	adc	a,#0x00
   0CD9 5F                 3741 	ld	e,a
   0CDA 68                 3742 	ld	l,b
   0CDB 67                 3743 	ld	h,a
   0CDC 7E                 3744 	ld	a,(hl)
   0CDD 3C                 3745 	inc	a
   0CDE 68                 3746 	ld	l,b
   0CDF 63                 3747 	ld	h,e
   0CE0 77                 3748 	ld	(hl),a
   0CE1                    3749 00111$:
                           3750 ;demo.c:403: for(i = 0; i < 32; i+=2) {
   0CE1 0C                 3751 	inc	c
   0CE2 0C                 3752 	inc	c
   0CE3 C3r4Cs0C           3753 	jp	00109$
   0CE6                    3754 00112$:
                           3755 ;demo.c:416: vdp_load_palette(scratch);
   0CE6 21r50s15           3756 	ld	hl,#_scratch
   0CE9 E5                 3757 	push	hl
   0CEA CDr00s00           3758 	call	_vdp_load_palette
   0CED F1                 3759 	pop	af
   0CEE                    3760 00113$:
   0CEE DD F9              3761 	ld	sp,ix
   0CF0 DD E1              3762 	pop	ix
   0CF2 C9                 3763 	ret
   0CF3                    3764 _fadein_end::
                           3765 ;demo.c:428: void do_ymmm() {
                           3766 ;	---------------------------------
                           3767 ; Function do_ymmm
                           3768 ; ---------------------------------
   0CF3                    3769 _do_ymmm_start::
   0CF3                    3770 _do_ymmm:
   0CF3 DD E5              3771 	push	ix
   0CF5 DD 21 00 00        3772 	ld	ix,#0
   0CF9 DD 39              3773 	add	ix,sp
   0CFB F5                 3774 	push	af
                           3775 ;demo.c:432: if (tick > 32) { tick = 0; flipper++;}
   0CFC 3E 20              3776 	ld	a,#0x20
   0CFE FD 21r92s16        3777 	ld	iy,#_tick
   0D02 FD 96 00           3778 	sub	a,0 (iy)
   0D05 3E 00              3779 	ld	a,#0x00
   0D07 FD 21r92s16        3780 	ld	iy,#_tick
   0D0B FD 9E 01           3781 	sbc	a,1 (iy)
   0D0E F2r2Bs0D           3782 	jp	P,00102$
   0D11 21r92s16           3783 	ld	hl,#_tick + 0
   0D14 36 00              3784 	ld	(hl), #0x00
   0D16 21r93s16           3785 	ld	hl,#_tick + 1
   0D19 36 00              3786 	ld	(hl), #0x00
   0D1B FD 21rE9s16        3787 	ld	iy,#_flipper
   0D1F FD 34 00           3788 	inc	0 (iy)
   0D22 20 07              3789 	jr	NZ,00115$
   0D24 FD 21rE9s16        3790 	ld	iy,#_flipper
   0D28 FD 34 01           3791 	inc	1 (iy)
   0D2B                    3792 00115$:
   0D2B                    3793 00102$:
                           3794 ;demo.c:433: if (flipper > 10) { flipper = 0;}
   0D2B 3E 0A              3795 	ld	a,#0x0A
   0D2D FD 21rE9s16        3796 	ld	iy,#_flipper
   0D31 FD 96 00           3797 	sub	a,0 (iy)
   0D34 3E 00              3798 	ld	a,#0x00
   0D36 FD 21rE9s16        3799 	ld	iy,#_flipper
   0D3A FD 9E 01           3800 	sbc	a,1 (iy)
   0D3D F2r4As0D           3801 	jp	P,00104$
   0D40 21rE9s16           3802 	ld	hl,#_flipper + 0
   0D43 36 00              3803 	ld	(hl), #0x00
   0D45 21rEAs16           3804 	ld	hl,#_flipper + 1
   0D48 36 00              3805 	ld	(hl), #0x00
   0D4A                    3806 00104$:
                           3807 ;demo.c:435: ymmmf++;
   0D4A FD 21rEBs16        3808 	ld	iy,#_ymmmf
   0D4E FD 34 00           3809 	inc	0 (iy)
   0D51 20 07              3810 	jr	NZ,00116$
   0D53 FD 21rEBs16        3811 	ld	iy,#_ymmmf
   0D57 FD 34 01           3812 	inc	1 (iy)
   0D5A                    3813 00116$:
                           3814 ;demo.c:436: for (yofff = 0; yofff<212-step;yofff+=step) {
   0D5A 21rE7s16           3815 	ld	hl,#_yofff + 0
   0D5D 36 00              3816 	ld	(hl), #0x00
   0D5F                    3817 00105$:
   0D5F 21rE7s16           3818 	ld	hl,#_yofff + 0
   0D62 4E                 3819 	ld	c,(hl)
   0D63 06 00              3820 	ld	b,#0x00
   0D65 79                 3821 	ld	a,c
   0D66 D6 D2              3822 	sub	a,#0xD2
   0D68 78                 3823 	ld	a,b
   0D69 DE 00              3824 	sbc	a,#0x00
   0D6B F2rDFs0D           3825 	jp	P,00109$
                           3826 ;demo.c:437: xo = (sintabx[(yofff+ymmmf) & 255]);
   0D6E 21rEBs16           3827 	ld	hl,#_ymmmf
   0D71 79                 3828 	ld	a,c
   0D72 86                 3829 	add	a,(hl)
   0D73 5F                 3830 	ld	e,a
   0D74 78                 3831 	ld	a,b
   0D75 23                 3832 	inc	hl
   0D76 8E                 3833 	adc	a,(hl)
   0D77 16 00              3834 	ld	d,#0x00
   0D79 21r2Cs00           3835 	ld	hl,#_sintabx
   0D7C 19                 3836 	add	hl,de
   0D7D 7E                 3837 	ld	a,(hl)
   0D7E DD 77 FE           3838 	ld	-2 (ix),a
   0D81 DD 36 FF 00        3839 	ld	-1 (ix),#0x00
                           3840 ;demo.c:440: cmd.source_x = 0;
   0D85 21r94s16           3841 	ld	hl,#_cmd
   0D88 36 00              3842 	ld	(hl),#0x00
   0D8A 23                 3843 	inc	hl
   0D8B 36 00              3844 	ld	(hl),#0x00
                           3845 ;demo.c:441: cmd.source_y = 0+yofff;
   0D8D 11r96s16           3846 	ld	de,#_cmd + 2
   0D90 EB                 3847 	ex	de,hl
   0D91 71                 3848 	ld	(hl),c
   0D92 23                 3849 	inc	hl
   0D93 70                 3850 	ld	(hl),b
                           3851 ;demo.c:442: cmd.dest_x = xo;
   0D94 11r98s16           3852 	ld	de,#_cmd + 4
   0D97 EB                 3853 	ex	de,hl
   0D98 DD 7E FE           3854 	ld	a,-2 (ix)
   0D9B 77                 3855 	ld	(hl),a
   0D9C 23                 3856 	inc	hl
   0D9D DD 7E FF           3857 	ld	a,-1 (ix)
   0DA0 77                 3858 	ld	(hl),a
                           3859 ;demo.c:443: cmd.dest_y = 3+yofff;
   0DA1 11r9As16           3860 	ld	de,#_cmd + 6
   0DA4 03                 3861 	inc	bc
   0DA5 03                 3862 	inc	bc
   0DA6 03                 3863 	inc	bc
   0DA7 6B                 3864 	ld	l,e
   0DA8 62                 3865 	ld	h,d
   0DA9 71                 3866 	ld	(hl),c
   0DAA 23                 3867 	inc	hl
   0DAB 70                 3868 	ld	(hl),b
                           3869 ;demo.c:444: cmd.size_x = 256;
   0DAC 21r9Cs16           3870 	ld	hl, #_cmd + 8
   0DAF 36 00              3871 	ld	(hl),#0x00
   0DB1 23                 3872 	inc	hl
   0DB2 36 01              3873 	ld	(hl),#0x01
                           3874 ;demo.c:445: cmd.size_y = 1;
   0DB4 21r9Es16           3875 	ld	hl, #_cmd + 10
   0DB7 36 01              3876 	ld	(hl),#0x01
   0DB9 23                 3877 	inc	hl
   0DBA 36 00              3878 	ld	(hl),#0x00
                           3879 ;demo.c:446: cmd.data = 0;
                           3880 ;demo.c:447: cmd.argument = 0;
   0DBC 3E 00              3881 	ld	a,#0x00
   0DBE 32rA0s16           3882 	ld	(#_cmd + 12),a
   0DC1 32rA1s16           3883 	ld	(#_cmd + 13),a
                           3884 ;demo.c:448: cmd.command = 0xD0;
   0DC4 3E D0              3885 	ld	a,#0xD0
   0DC6 32rA2s16           3886 	ld	(#_cmd + 14),a
                           3887 ;demo.c:451: vdp_copier(&cmd);
   0DC9 21r94s16           3888 	ld	hl,#_cmd
   0DCC E5                 3889 	push	hl
   0DCD CDr00s00           3890 	call	_vdp_copier
   0DD0 F1                 3891 	pop	af
                           3892 ;demo.c:436: for (yofff = 0; yofff<212-step;yofff+=step) {
   0DD1 21rE7s16           3893 	ld	hl,#_yofff + 0
   0DD4 4E                 3894 	ld	c,(hl)
   0DD5 21rE7s16           3895 	ld	hl,#_yofff
   0DD8 79                 3896 	ld	a,c
   0DD9 C6 02              3897 	add	a,#0x02
   0DDB 77                 3898 	ld	(hl),a
   0DDC C3r5Fs0D           3899 	jp	00105$
   0DDF                    3900 00109$:
   0DDF DD F9              3901 	ld	sp,ix
   0DE1 DD E1              3902 	pop	ix
   0DE3 C9                 3903 	ret
   0DE4                    3904 _do_ymmm_end::
                           3905 ;demo.c:468: void do_blocks() {
                           3906 ;	---------------------------------
                           3907 ; Function do_blocks
                           3908 ; ---------------------------------
   0DE4                    3909 _do_blocks_start::
   0DE4                    3910 _do_blocks:
   0DE4 DD E5              3911 	push	ix
   0DE6 DD 21 00 00        3912 	ld	ix,#0
   0DEA DD 39              3913 	add	ix,sp
   0DEC 21 FA FF           3914 	ld	hl,#-6
   0DEF 39                 3915 	add	hl,sp
   0DF0 F9                 3916 	ld	sp,hl
                           3917 ;demo.c:470: int ys = 0;
   0DF1 DD 36 FC 00        3918 	ld	-4 (ix),#0x00
   0DF5 DD 36 FD 00        3919 	ld	-3 (ix),#0x00
                           3920 ;demo.c:471: int ye = 0;
   0DF9 DD 36 FA 00        3921 	ld	-6 (ix),#0x00
   0DFD DD 36 FB 00        3922 	ld	-5 (ix),#0x00
                           3923 ;demo.c:473: vdp_register(VDP_VOFFSET,0);
   0E01 21 17 00           3924 	ld	hl,#0x0017
   0E04 E5                 3925 	push	hl
   0E05 CDr00s00           3926 	call	_vdp_register
   0E08 F1                 3927 	pop	af
                           3928 ;demo.c:475: if (block_init == 0) {
   0E09 AF                 3929 	xor	a,a
   0E0A FD 21rEDs16        3930 	ld	iy,#_block_init
   0E0E FD B6 00           3931 	or	a,0 (iy)
   0E11 C2r79s0E           3932 	jp	NZ,00108$
                           3933 ;demo.c:477: vdp_set_screen5();
   0E14 CDr00s00           3934 	call	_vdp_set_screen5
                           3935 ;demo.c:479: vdp_register(2, 0x5F);
   0E17 21 02 5F           3936 	ld	hl,#0x5F02
   0E1A E5                 3937 	push	hl
   0E1B CDr00s00           3938 	call	_vdp_register
   0E1E F1                 3939 	pop	af
                           3940 ;demo.c:481: for(i=0;i<16;i++) btab[i] = i*16;
   0E1F DD 36 FE 00        3941 	ld	-2 (ix),#0x00
   0E23 DD 36 FF 00        3942 	ld	-1 (ix),#0x00
   0E27                    3943 00110$:
   0E27 DD 7E FE           3944 	ld	a,-2 (ix)
   0E2A D6 10              3945 	sub	a,#0x10
   0E2C DD 7E FF           3946 	ld	a,-1 (ix)
   0E2F DE 00              3947 	sbc	a,#0x00
   0E31 F2r69s0E           3948 	jp	P,00113$
   0E34 DD 4E FE           3949 	ld	c,-2 (ix)
   0E37 DD 46 FF           3950 	ld	b,-1 (ix)
   0E3A CB 21              3951 	sla	c
   0E3C CB 10              3952 	rl	b
   0E3E 21rF6s16           3953 	ld	hl,#_btab
   0E41 09                 3954 	add	hl,bc
   0E42 4D                 3955 	ld	c,l
   0E43 44                 3956 	ld	b,h
   0E44 DD 5E FE           3957 	ld	e,-2 (ix)
   0E47 DD 56 FF           3958 	ld	d,-1 (ix)
   0E4A CB 23              3959 	sla	e
   0E4C CB 12              3960 	rl	d
   0E4E CB 23              3961 	sla	e
   0E50 CB 12              3962 	rl	d
   0E52 CB 23              3963 	sla	e
   0E54 CB 12              3964 	rl	d
   0E56 CB 23              3965 	sla	e
   0E58 CB 12              3966 	rl	d
   0E5A 69                 3967 	ld	l,c
   0E5B 60                 3968 	ld	h,b
   0E5C 73                 3969 	ld	(hl),e
   0E5D 23                 3970 	inc	hl
   0E5E 72                 3971 	ld	(hl),d
   0E5F DD 34 FE           3972 	inc	-2 (ix)
   0E62 20 03              3973 	jr	NZ,00139$
   0E64 DD 34 FF           3974 	inc	-1 (ix)
   0E67                    3975 00139$:
   0E67 18 BE              3976 	jr	00110$
   0E69                    3977 00113$:
                           3978 ;demo.c:482: vdp_load_palette(block_palette);
   0E69 21r10s16           3979 	ld	hl,#_block_palette
   0E6C E5                 3980 	push	hl
   0E6D CDr00s00           3981 	call	_vdp_load_palette
   0E70 F1                 3982 	pop	af
                           3983 ;demo.c:484: block_init = 1;
   0E71 21rEDs16           3984 	ld	hl,#_block_init + 0
   0E74 36 01              3985 	ld	(hl), #0x01
   0E76 C3r02s10           3986 	jp	00122$
   0E79                    3987 00108$:
                           3988 ;demo.c:488: if (flof == 0) { ys = 0; ye = 8; }
   0E79 3Ar16s17           3989 	ld	a,(#_flof+0)
   0E7C FD 21r16s17        3990 	ld	iy,#_flof
   0E80 FD B6 01           3991 	or	a,1 (iy)
   0E83 20 10              3992 	jr	NZ,00102$
   0E85 DD 36 FC 00        3993 	ld	-4 (ix),#0x00
   0E89 DD 36 FD 00        3994 	ld	-3 (ix),#0x00
   0E8D DD 36 FA 08        3995 	ld	-6 (ix),#0x08
   0E91 DD 36 FB 00        3996 	ld	-5 (ix),#0x00
   0E95                    3997 00102$:
                           3998 ;demo.c:489: if (flof == 1) { ys = 8; ye = 16; }
   0E95 3Ar16s17           3999 	ld	a,(#_flof+0)
   0E98 D6 01              4000 	sub	a,#0x01
   0E9A 20 06              4001 	jr	NZ,00140$
   0E9C 3Ar17s17           4002 	ld	a,(#_flof+1)
   0E9F B7                 4003 	or	a,a
   0EA0 28 02              4004 	jr	Z,00141$
   0EA2                    4005 00140$:
   0EA2 18 10              4006 	jr	00104$
   0EA4                    4007 00141$:
   0EA4 DD 36 FC 08        4008 	ld	-4 (ix),#0x08
   0EA8 DD 36 FD 00        4009 	ld	-3 (ix),#0x00
   0EAC DD 36 FA 10        4010 	ld	-6 (ix),#0x10
   0EB0 DD 36 FB 00        4011 	ld	-5 (ix),#0x00
   0EB4                    4012 00104$:
                           4013 ;demo.c:491: for(bty=3;bty<11;bty++) {
   0EB4 FD 21rF4s16        4014 	ld	iy,#_bty
   0EB8 FD 36 00 03        4015 	ld	0 (iy),#0x03
   0EBC FD 21rF4s16        4016 	ld	iy,#_bty
   0EC0 FD 36 01 00        4017 	ld	1 (iy),#0x00
   0EC4                    4018 00118$:
   0EC4 3ArF4s16           4019 	ld	a,(#_bty+0)
   0EC7 D6 0B              4020 	sub	a,#0x0B
   0EC9 3ArF5s16           4021 	ld	a,(#_bty+1)
   0ECC DE 00              4022 	sbc	a,#0x00
   0ECE F2rD9s0F           4023 	jp	P,00121$
                           4024 ;demo.c:492: for(btx=ys;btx<ye;btx++) {
   0ED1 DD 7E FC           4025 	ld	a,-4 (ix)
   0ED4 FD 21rF2s16        4026 	ld	iy,#_btx
   0ED8 FD 77 00           4027 	ld	0 (iy),a
   0EDB DD 7E FD           4028 	ld	a,-3 (ix)
   0EDE FD 21rF2s16        4029 	ld	iy,#_btx
   0EE2 FD 77 01           4030 	ld	1 (iy),a
   0EE5                    4031 00114$:
   0EE5 3ArF2s16           4032 	ld	a,(#_btx+0)
   0EE8 DD 96 FA           4033 	sub	a,-6 (ix)
   0EEB 3ArF3s16           4034 	ld	a,(#_btx+1)
   0EEE DD 9E FB           4035 	sbc	a,-5 (ix)
   0EF1 F2rC6s0F           4036 	jp	P,00120$
                           4037 ;demo.c:493: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0EF4 3Ar00s00           4038 	ld	a,(#_PLY_PSGReg8+0)
   0EF7 FD 21r00s00        4039 	ld	iy,#_PLY_PSGReg9
   0EFB FD A6 00           4040 	and	a,0 (iy)
   0EFE 21r00s00           4041 	ld	hl,#_PLY_PSGReg10 + 0
   0F01 B6                 4042 	or	a,(hl)
   0F02 4F                 4043 	ld	c,a
   0F03 CB 39              4044 	srl	c
   0F05 21rEEs16           4045 	ld	hl,#_bsx + 0
   0F08 71                 4046 	ld	(hl), c
   0F09 21rEFs16           4047 	ld	hl,#_bsx + 1
   0F0C 36 00              4048 	ld	(hl), #0x00
                           4049 ;demo.c:494: bsy = PLY_PSGReg10;
   0F0E 3Ar00s00           4050 	ld	a,(#_PLY_PSGReg10+0)
   0F11 21rF0s16           4051 	ld	hl,#_bsy + 0
   0F14 77                 4052 	ld	(hl), a
   0F15 21rF1s16           4053 	ld	hl,#_bsy + 1
   0F18 36 00              4054 	ld	(hl), #0x00
                           4055 ;demo.c:495: cmd.source_x = btab[bsx];
   0F1A 21rEEs16           4056 	ld	hl,#_bsx + 0
   0F1D 4E                 4057 	ld	c,(hl)
   0F1E 21rEFs16           4058 	ld	hl,#_bsx + 1
   0F21 46                 4059 	ld	b,(hl)
   0F22 CB 21              4060 	sla	c
   0F24 CB 10              4061 	rl	b
   0F26 21rF6s16           4062 	ld	hl,#_btab
   0F29 09                 4063 	add	hl,bc
   0F2A 4E                 4064 	ld	c,(hl)
   0F2B 23                 4065 	inc	hl
   0F2C 46                 4066 	ld	b,(hl)
   0F2D 21r94s16           4067 	ld	hl,#_cmd
   0F30 71                 4068 	ld	(hl),c
   0F31 23                 4069 	inc	hl
   0F32 70                 4070 	ld	(hl),b
                           4071 ;demo.c:496: cmd.source_y = 768+btab[bsy];
   0F33 01r96s16           4072 	ld	bc,#_cmd + 2
   0F36 21rF0s16           4073 	ld	hl,#_bsy + 0
   0F39 5E                 4074 	ld	e,(hl)
   0F3A 21rF1s16           4075 	ld	hl,#_bsy + 1
   0F3D 56                 4076 	ld	d,(hl)
   0F3E CB 23              4077 	sla	e
   0F40 CB 12              4078 	rl	d
   0F42 21rF6s16           4079 	ld	hl,#_btab
   0F45 19                 4080 	add	hl,de
   0F46 5E                 4081 	ld	e,(hl)
   0F47 23                 4082 	inc	hl
   0F48 56                 4083 	ld	d,(hl)
   0F49 21 00 03           4084 	ld	hl,#0x0300
   0F4C 19                 4085 	add	hl,de
   0F4D EB                 4086 	ex	de,hl
   0F4E 69                 4087 	ld	l,c
   0F4F 60                 4088 	ld	h,b
   0F50 73                 4089 	ld	(hl),e
   0F51 23                 4090 	inc	hl
   0F52 72                 4091 	ld	(hl),d
                           4092 ;demo.c:497: cmd.dest_x = btab[btx];
   0F53 01r98s16           4093 	ld	bc,#_cmd + 4
   0F56 21rF2s16           4094 	ld	hl,#_btx + 0
   0F59 5E                 4095 	ld	e,(hl)
   0F5A 21rF3s16           4096 	ld	hl,#_btx + 1
   0F5D 56                 4097 	ld	d,(hl)
   0F5E CB 23              4098 	sla	e
   0F60 CB 12              4099 	rl	d
   0F62 21rF6s16           4100 	ld	hl,#_btab
   0F65 19                 4101 	add	hl,de
   0F66 5E                 4102 	ld	e,(hl)
   0F67 23                 4103 	inc	hl
   0F68 56                 4104 	ld	d,(hl)
   0F69 69                 4105 	ld	l,c
   0F6A 60                 4106 	ld	h,b
   0F6B 73                 4107 	ld	(hl),e
   0F6C 23                 4108 	inc	hl
   0F6D 72                 4109 	ld	(hl),d
                           4110 ;demo.c:498: cmd.dest_y = 512+btab[bty];
   0F6E 01r9As16           4111 	ld	bc,#_cmd + 6
   0F71 21rF4s16           4112 	ld	hl,#_bty + 0
   0F74 5E                 4113 	ld	e,(hl)
   0F75 21rF5s16           4114 	ld	hl,#_bty + 1
   0F78 56                 4115 	ld	d,(hl)
   0F79 CB 23              4116 	sla	e
   0F7B CB 12              4117 	rl	d
   0F7D 21rF6s16           4118 	ld	hl,#_btab
   0F80 19                 4119 	add	hl,de
   0F81 5E                 4120 	ld	e,(hl)
   0F82 23                 4121 	inc	hl
   0F83 56                 4122 	ld	d,(hl)
   0F84 21 00 02           4123 	ld	hl,#0x0200
   0F87 19                 4124 	add	hl,de
   0F88 EB                 4125 	ex	de,hl
   0F89 69                 4126 	ld	l,c
   0F8A 60                 4127 	ld	h,b
   0F8B 73                 4128 	ld	(hl),e
   0F8C 23                 4129 	inc	hl
   0F8D 72                 4130 	ld	(hl),d
                           4131 ;demo.c:499: cmd.size_x = 16;
   0F8E 21r9Cs16           4132 	ld	hl, #_cmd + 8
   0F91 36 10              4133 	ld	(hl),#0x10
   0F93 23                 4134 	inc	hl
   0F94 36 00              4135 	ld	(hl),#0x00
                           4136 ;demo.c:500: cmd.size_y = 16;
   0F96 21r9Es16           4137 	ld	hl, #_cmd + 10
   0F99 36 10              4138 	ld	(hl),#0x10
   0F9B 23                 4139 	inc	hl
   0F9C 36 00              4140 	ld	(hl),#0x00
                           4141 ;demo.c:501: cmd.data = 0;
                           4142 ;demo.c:502: cmd.argument = 0x00;
   0F9E 3E 00              4143 	ld	a,#0x00
   0FA0 32rA0s16           4144 	ld	(#_cmd + 12),a
   0FA3 32rA1s16           4145 	ld	(#_cmd + 13),a
                           4146 ;demo.c:503: cmd.command = 0xD0;
   0FA6 3E D0              4147 	ld	a,#0xD0
   0FA8 32rA2s16           4148 	ld	(#_cmd + 14),a
                           4149 ;demo.c:504: vdp_copier(&cmd);
   0FAB 21r94s16           4150 	ld	hl,#_cmd
   0FAE E5                 4151 	push	hl
   0FAF CDr00s00           4152 	call	_vdp_copier
   0FB2 F1                 4153 	pop	af
                           4154 ;demo.c:492: for(btx=ys;btx<ye;btx++) {
   0FB3 FD 21rF2s16        4155 	ld	iy,#_btx
   0FB7 FD 34 00           4156 	inc	0 (iy)
   0FBA 20 07              4157 	jr	NZ,00150$
   0FBC FD 21rF2s16        4158 	ld	iy,#_btx
   0FC0 FD 34 01           4159 	inc	1 (iy)
   0FC3                    4160 00150$:
   0FC3 C3rE5s0E           4161 	jp	00114$
   0FC6                    4162 00120$:
                           4163 ;demo.c:491: for(bty=3;bty<11;bty++) {
   0FC6 FD 21rF4s16        4164 	ld	iy,#_bty
   0FCA FD 34 00           4165 	inc	0 (iy)
   0FCD 20 07              4166 	jr	NZ,00151$
   0FCF FD 21rF4s16        4167 	ld	iy,#_bty
   0FD3 FD 34 01           4168 	inc	1 (iy)
   0FD6                    4169 00151$:
   0FD6 C3rC4s0E           4170 	jp	00118$
   0FD9                    4171 00121$:
                           4172 ;demo.c:508: flof++;
   0FD9 FD 21r16s17        4173 	ld	iy,#_flof
   0FDD FD 34 00           4174 	inc	0 (iy)
   0FE0 20 07              4175 	jr	NZ,00152$
   0FE2 FD 21r16s17        4176 	ld	iy,#_flof
   0FE6 FD 34 01           4177 	inc	1 (iy)
   0FE9                    4178 00152$:
                           4179 ;demo.c:509: if (flof == 2) flof = 0;
   0FE9 3Ar16s17           4180 	ld	a,(#_flof+0)
   0FEC D6 02              4181 	sub	a,#0x02
   0FEE 20 06              4182 	jr	NZ,00153$
   0FF0 3Ar17s17           4183 	ld	a,(#_flof+1)
   0FF3 B7                 4184 	or	a,a
   0FF4 28 02              4185 	jr	Z,00154$
   0FF6                    4186 00153$:
   0FF6 18 0A              4187 	jr	00122$
   0FF8                    4188 00154$:
   0FF8 21r16s17           4189 	ld	hl,#_flof + 0
   0FFB 36 00              4190 	ld	(hl), #0x00
   0FFD 21r17s17           4191 	ld	hl,#_flof + 1
   1000 36 00              4192 	ld	(hl), #0x00
   1002                    4193 00122$:
   1002 DD F9              4194 	ld	sp,ix
   1004 DD E1              4195 	pop	ix
   1006 C9                 4196 	ret
   1007                    4197 _do_blocks_end::
                           4198 ;demo.c:517: void raster_effu() {
                           4199 ;	---------------------------------
                           4200 ; Function raster_effu
                           4201 ; ---------------------------------
   1007                    4202 _raster_effu_start::
   1007                    4203 _raster_effu:
                           4204 ;demo.c:518: vdp_register(VDP_VOFFSET,0);
   1007 21 17 00           4205 	ld	hl,#0x0017
   100A E5                 4206 	push	hl
   100B CDr00s00           4207 	call	_vdp_register
   100E F1                 4208 	pop	af
                           4209 ;demo.c:519: waitVB();
   100F 76                 4210 		halt 
                           4211 ;demo.c:521: vdp_register(1,0x40); // disable vblank
   1010 21 01 40           4212 	ld	hl,#0x4001
   1013 E5                 4213 	push	hl
   1014 CDr00s00           4214 	call	_vdp_register
                           4215 ;demo.c:523: for (linenum = 40; linenum < 212; linenum+=4) {
   1017 3E 28              4216 	ld	a,#0x28
   1019 32r18s17           4217 	ld	(#_linenum + 0),a
   101C F1                 4218 	pop	af
   101D FD 21r18s17        4219 	ld	iy,#_linenum
   1021 FD 36 01 00        4220 	ld	1 (iy),#0x00
   1025                    4221 00101$:
   1025 3Ar18s17           4222 	ld	a,(#_linenum+0)
   1028 D6 D4              4223 	sub	a,#0xD4
   102A 3Ar19s17           4224 	ld	a,(#_linenum+1)
   102D DE 00              4225 	sbc	a,#0x00
   102F F2r60s10           4226 	jp	P,00104$
                           4227 ;demo.c:524: vdp_register(19,linenum); // interrupt on line
   1032 3Ar18s17           4228 	ld	a,(#_linenum+0)
   1035 F5                 4229 	push	af
   1036 33                 4230 	inc	sp
   1037 3E 13              4231 	ld	a,#0x13
   1039 F5                 4232 	push	af
   103A 33                 4233 	inc	sp
   103B CDr00s00           4234 	call	_vdp_register
   103E F1                 4235 	pop	af
                           4236 ;demo.c:525: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   103F 21 00 16           4237 	ld	hl,#0x1600
   1042 E5                 4238 	push	hl
   1043 CDr00s00           4239 	call	_vdp_register
   1046 F1                 4240 	pop	af
                           4241 ;demo.c:527: waitVB();
   1047 76                 4242 		halt 
                           4243 ;demo.c:523: for (linenum = 40; linenum < 212; linenum+=4) {
   1048 21r18s17           4244 	ld	hl,#_linenum
   104B 7E                 4245 	ld	a,(hl)
   104C C6 04              4246 	add	a,#0x04
   104E 23                 4247 	inc	hl
   104F 2B                 4248 	dec	hl
   1050 C5                 4249 	push	bc
   1051 4F                 4250 	ld	c, a
   1052 23                 4251 	inc	hl
   1053 7E                 4252 	ld	a, (hl)
   1054 47                 4253 	ld	b, a
   1055 79                 4254 	ld	a, c
   1056 2B                 4255 	dec	hl
   1057 77                 4256 	ld	(hl), a
   1058 78                 4257 	ld	a, b
   1059 C1                 4258 	pop	bc
   105A CE 00              4259 	adc	a,#0x00
   105C 23                 4260 	inc	hl
   105D 77                 4261 	ld	(hl),a
   105E 18 C5              4262 	jr	00101$
   1060                    4263 00104$:
                           4264 ;demo.c:530: vdp_register(VDP_VOFFSET,0);
   1060 21 17 00           4265 	ld	hl,#0x0017
   1063 E5                 4266 	push	hl
   1064 CDr00s00           4267 	call	_vdp_register
   1067 F1                 4268 	pop	af
                           4269 ;demo.c:544: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   1068 21 00 06           4270 	ld	hl,#0x0600
   106B E5                 4271 	push	hl
   106C CDr00s00           4272 	call	_vdp_register
   106F F1                 4273 	pop	af
                           4274 ;demo.c:545: vdp_register(1,0x60); // enable vblank
   1070 21 01 60           4275 	ld	hl,#0x6001
   1073 E5                 4276 	push	hl
   1074 CDr00s00           4277 	call	_vdp_register
   1077 F1                 4278 	pop	af
   1078 C9                 4279 	ret
   1079                    4280 _raster_effu_end::
                           4281 ;demo.c:577: void do_2xletter(char cc) {
                           4282 ;	---------------------------------
                           4283 ; Function do_2xletter
                           4284 ; ---------------------------------
   1079                    4285 _do_2xletter_start::
   1079                    4286 _do_2xletter:
   1079 DD E5              4287 	push	ix
   107B DD 21 00 00        4288 	ld	ix,#0
   107F DD 39              4289 	add	ix,sp
   1081 21 F2 FF           4290 	ld	hl,#-14
   1084 39                 4291 	add	hl,sp
   1085 F9                 4292 	ld	sp,hl
                           4293 ;demo.c:578: int cidx = cc - 65;
   1086 DD 4E 04           4294 	ld	c,4 (ix)
   1089 DD 7E 04           4295 	ld	a,4 (ix)
   108C 17                 4296 	rla	
   108D 9F                 4297 	sbc	a,a
   108E 47                 4298 	ld	b,a
   108F 79                 4299 	ld	a,c
   1090 C6 BF              4300 	add	a,#0xBF
   1092 DD 77 FE           4301 	ld	-2 (ix),a
   1095 78                 4302 	ld	a,b
   1096 CE FF              4303 	adc	a,#0xFF
   1098 DD 77 FF           4304 	ld	-1 (ix),a
                           4305 ;demo.c:581: for (y=0;y<8;y++) {
   109B 3ErA7              4306 	ld	a,#<_font_w
   109D DD 86 FE           4307 	add	a,-2 (ix)
   10A0 5F                 4308 	ld	e,a
   10A1 3Es13              4309 	ld	a,#>_font_w
   10A3 DD 8E FF           4310 	adc	a,-1 (ix)
   10A6 57                 4311 	ld	d,a
   10A7 DD 36 FA 00        4312 	ld	-6 (ix),#0x00
   10AB DD 36 FB 00        4313 	ld	-5 (ix),#0x00
   10AF DD 36 F6 00        4314 	ld	-10 (ix),#0x00
   10B3 DD 36 F7 00        4315 	ld	-9 (ix),#0x00
   10B7                    4316 00105$:
   10B7 DD 7E FA           4317 	ld	a,-6 (ix)
   10BA D6 08              4318 	sub	a,#0x08
   10BC DD 7E FB           4319 	ld	a,-5 (ix)
   10BF DE 00              4320 	sbc	a,#0x00
   10C1 F2rFFs12           4321 	jp	P,00108$
                           4322 ;demo.c:582: for (x=0;x<font_w[cidx];x++) {
   10C4 DD 36 FC 00        4323 	ld	-4 (ix),#0x00
   10C8 DD 36 FD 00        4324 	ld	-3 (ix),#0x00
   10CC DD 36 F4 00        4325 	ld	-12 (ix),#0x00
   10D0 DD 36 F5 00        4326 	ld	-11 (ix),#0x00
   10D4                    4327 00101$:
   10D4 1A                 4328 	ld	a,(de)
   10D5 4F                 4329 	ld	c,a
   10D6 06 00              4330 	ld	b,#0x00
   10D8 DD 7E FC           4331 	ld	a,-4 (ix)
   10DB 91                 4332 	sub	a,c
   10DC DD 7E FD           4333 	ld	a,-3 (ix)
   10DF 98                 4334 	sbc	a,b
   10E0 F2rD7s12           4335 	jp	P,00115$
                           4336 ;demo.c:583: cmd.source_x = 127+font_x[cidx]+x;
   10E3 3Er27              4337 	ld	a,#<_font_x
   10E5 DD 86 FE           4338 	add	a,-2 (ix)
   10E8 4F                 4339 	ld	c,a
   10E9 3Es13              4340 	ld	a,#>_font_x
   10EB DD 8E FF           4341 	adc	a,-1 (ix)
   10EE 47                 4342 	ld	b,a
   10EF 0A                 4343 	ld	a,(bc)
   10F0 4F                 4344 	ld	c,a
   10F1 06 00              4345 	ld	b,#0x00
   10F3 21 7F 00           4346 	ld	hl,#0x007F
   10F6 09                 4347 	add	hl,bc
   10F7 4D                 4348 	ld	c,l
   10F8 44                 4349 	ld	b,h
   10F9 79                 4350 	ld	a,c
   10FA DD 86 FC           4351 	add	a,-4 (ix)
   10FD 4F                 4352 	ld	c,a
   10FE 78                 4353 	ld	a,b
   10FF DD 8E FD           4354 	adc	a,-3 (ix)
   1102 47                 4355 	ld	b,a
   1103 21r94s16           4356 	ld	hl,#_cmd
   1106 71                 4357 	ld	(hl),c
   1107 23                 4358 	inc	hl
   1108 70                 4359 	ld	(hl),b
                           4360 ;demo.c:584: cmd.source_y = 512+font_y[cidx]+y;
   1109 23                 4361 	inc	hl
   110A DD 75 F2           4362 	ld	-14 (ix),l
   110D DD 74 F3           4363 	ld	-13 (ix),h
   1110 3Er67              4364 	ld	a,#<_font_y
   1112 DD 86 FE           4365 	add	a,-2 (ix)
   1115 4F                 4366 	ld	c,a
   1116 3Es13              4367 	ld	a,#>_font_y
   1118 DD 8E FF           4368 	adc	a,-1 (ix)
   111B 47                 4369 	ld	b,a
   111C 0A                 4370 	ld	a,(bc)
   111D 4F                 4371 	ld	c,a
   111E 06 00              4372 	ld	b,#0x00
   1120 21 00 02           4373 	ld	hl,#0x0200
   1123 09                 4374 	add	hl,bc
   1124 4D                 4375 	ld	c,l
   1125 44                 4376 	ld	b,h
   1126 79                 4377 	ld	a,c
   1127 DD 86 FA           4378 	add	a,-6 (ix)
   112A 4F                 4379 	ld	c,a
   112B 78                 4380 	ld	a,b
   112C DD 8E FB           4381 	adc	a,-5 (ix)
   112F 47                 4382 	ld	b,a
   1130 DD 6E F2           4383 	ld	l,-14 (ix)
   1133 DD 66 F3           4384 	ld	h,-13 (ix)
   1136 71                 4385 	ld	(hl),c
   1137 23                 4386 	inc	hl
   1138 70                 4387 	ld	(hl),b
                           4388 ;demo.c:585: cmd.size_x = 1;
   1139 21r9Cs16           4389 	ld	hl, #_cmd + 8
   113C 36 01              4390 	ld	(hl),#0x01
   113E 23                 4391 	inc	hl
   113F 36 00              4392 	ld	(hl),#0x00
                           4393 ;demo.c:586: cmd.size_y = 1;
   1141 21r9Es16           4394 	ld	hl, #_cmd + 10
   1144 36 01              4395 	ld	(hl),#0x01
   1146 23                 4396 	inc	hl
   1147 36 00              4397 	ld	(hl),#0x00
                           4398 ;demo.c:587: cmd.argument = 0x00;
   1149 3E 00              4399 	ld	a,#0x00
   114B 32rA1s16           4400 	ld	(#_cmd + 13),a
                           4401 ;demo.c:588: cmd.command = 0x40; // get pixel
   114E 3E 40              4402 	ld	a,#0x40
   1150 32rA2s16           4403 	ld	(#_cmd + 14),a
                           4404 ;demo.c:589: vdp_copier(&cmd);
   1153 D5                 4405 	push	de
   1154 21r94s16           4406 	ld	hl,#_cmd
   1157 E5                 4407 	push	hl
   1158 CDr00s00           4408 	call	_vdp_copier
   115B F1                 4409 	pop	af
   115C D1                 4410 	pop	de
                           4411 ;demo.c:591: col = vdp2_status(7);
   115D D5                 4412 	push	de
   115E 3E 07              4413 	ld	a,#0x07
   1160 F5                 4414 	push	af
   1161 33                 4415 	inc	sp
   1162 CDr00s00           4416 	call	_vdp2_status
   1165 33                 4417 	inc	sp
   1166 4D                 4418 	ld	c,l
   1167 D1                 4419 	pop	de
   1168 DD 71 F8           4420 	ld	-8 (ix),c
   116B DD 36 F9 00        4421 	ld	-7 (ix),#0x00
                           4422 ;demo.c:593: cmd.data = col;
   116F 01rA0s16           4423 	ld	bc,#_cmd + 12
   1172 DD 7E F8           4424 	ld	a,-8 (ix)
   1175 02                 4425 	ld	(bc),a
                           4426 ;demo.c:594: cmd.dest_x = lx+x*3;
   1176 21r98s16           4427 	ld	hl,#_cmd + 4
   1179 DD 75 F2           4428 	ld	-14 (ix),l
   117C DD 74 F3           4429 	ld	-13 (ix),h
   117F 21r1As17           4430 	ld	hl,#_lx + 0
   1182 4E                 4431 	ld	c,(hl)
   1183 06 00              4432 	ld	b,#0x00
   1185 79                 4433 	ld	a,c
   1186 DD 86 F4           4434 	add	a,-12 (ix)
   1189 4F                 4435 	ld	c,a
   118A 78                 4436 	ld	a,b
   118B DD 8E F5           4437 	adc	a,-11 (ix)
   118E 47                 4438 	ld	b,a
   118F DD 6E F2           4439 	ld	l,-14 (ix)
   1192 DD 66 F3           4440 	ld	h,-13 (ix)
   1195 71                 4441 	ld	(hl),c
   1196 23                 4442 	inc	hl
   1197 70                 4443 	ld	(hl),b
                           4444 ;demo.c:595: cmd.dest_y = ly+y*3;
   1198 21r9As16           4445 	ld	hl,#_cmd + 6
   119B DD 75 F2           4446 	ld	-14 (ix),l
   119E DD 74 F3           4447 	ld	-13 (ix),h
   11A1 21r1Bs17           4448 	ld	hl,#_ly + 0
   11A4 4E                 4449 	ld	c,(hl)
   11A5 06 00              4450 	ld	b,#0x00
   11A7 79                 4451 	ld	a,c
   11A8 DD 86 F6           4452 	add	a,-10 (ix)
   11AB 4F                 4453 	ld	c,a
   11AC 78                 4454 	ld	a,b
   11AD DD 8E F7           4455 	adc	a,-9 (ix)
   11B0 47                 4456 	ld	b,a
   11B1 DD 6E F2           4457 	ld	l,-14 (ix)
   11B4 DD 66 F3           4458 	ld	h,-13 (ix)
   11B7 71                 4459 	ld	(hl),c
   11B8 23                 4460 	inc	hl
   11B9 70                 4461 	ld	(hl),b
                           4462 ;demo.c:598: cmd.argument = 0x00;
   11BA 3E 00              4463 	ld	a,#0x00
   11BC 32rA1s16           4464 	ld	(#_cmd + 13),a
                           4465 ;demo.c:599: cmd.command = 0x50; // rect
   11BF 3E 50              4466 	ld	a,#0x50
   11C1 32rA2s16           4467 	ld	(#_cmd + 14),a
                           4468 ;demo.c:600: vdp_copier(&cmd);
   11C4 D5                 4469 	push	de
   11C5 21r94s16           4470 	ld	hl,#_cmd
   11C8 E5                 4471 	push	hl
   11C9 CDr00s00           4472 	call	_vdp_copier
   11CC F1                 4473 	pop	af
   11CD D1                 4474 	pop	de
                           4475 ;demo.c:601: cmd.dest_x = 1+lx+x*3;
   11CE 21r98s16           4476 	ld	hl,#_cmd + 4
   11D1 DD 75 F2           4477 	ld	-14 (ix),l
   11D4 DD 74 F3           4478 	ld	-13 (ix),h
   11D7 21r1As17           4479 	ld	hl,#_lx + 0
   11DA 4E                 4480 	ld	c,(hl)
   11DB 06 00              4481 	ld	b,#0x00
   11DD 03                 4482 	inc	bc
   11DE 79                 4483 	ld	a,c
   11DF DD 86 F4           4484 	add	a,-12 (ix)
   11E2 4F                 4485 	ld	c,a
   11E3 78                 4486 	ld	a,b
   11E4 DD 8E F5           4487 	adc	a,-11 (ix)
   11E7 47                 4488 	ld	b,a
   11E8 DD 6E F2           4489 	ld	l,-14 (ix)
   11EB DD 66 F3           4490 	ld	h,-13 (ix)
   11EE 71                 4491 	ld	(hl),c
   11EF 23                 4492 	inc	hl
   11F0 70                 4493 	ld	(hl),b
                           4494 ;demo.c:602: cmd.dest_y = ly+y*3;
   11F1 21r9As16           4495 	ld	hl,#_cmd + 6
   11F4 DD 75 F2           4496 	ld	-14 (ix),l
   11F7 DD 74 F3           4497 	ld	-13 (ix),h
   11FA 21r1Bs17           4498 	ld	hl,#_ly + 0
   11FD 4E                 4499 	ld	c,(hl)
   11FE 06 00              4500 	ld	b,#0x00
   1200 79                 4501 	ld	a,c
   1201 DD 86 F6           4502 	add	a,-10 (ix)
   1204 4F                 4503 	ld	c,a
   1205 78                 4504 	ld	a,b
   1206 DD 8E F7           4505 	adc	a,-9 (ix)
   1209 47                 4506 	ld	b,a
   120A DD 6E F2           4507 	ld	l,-14 (ix)
   120D DD 66 F3           4508 	ld	h,-13 (ix)
   1210 71                 4509 	ld	(hl),c
   1211 23                 4510 	inc	hl
   1212 70                 4511 	ld	(hl),b
                           4512 ;demo.c:603: vdp_copier(&cmd);
   1213 D5                 4513 	push	de
   1214 21r94s16           4514 	ld	hl,#_cmd
   1217 E5                 4515 	push	hl
   1218 CDr00s00           4516 	call	_vdp_copier
   121B F1                 4517 	pop	af
   121C D1                 4518 	pop	de
                           4519 ;demo.c:604: cmd.dest_x = 1+lx+x*3;
   121D 21r98s16           4520 	ld	hl,#_cmd + 4
   1220 DD 75 F2           4521 	ld	-14 (ix),l
   1223 DD 74 F3           4522 	ld	-13 (ix),h
   1226 21r1As17           4523 	ld	hl,#_lx + 0
   1229 4E                 4524 	ld	c,(hl)
   122A 06 00              4525 	ld	b,#0x00
   122C 03                 4526 	inc	bc
   122D 79                 4527 	ld	a,c
   122E DD 86 F4           4528 	add	a,-12 (ix)
   1231 4F                 4529 	ld	c,a
   1232 78                 4530 	ld	a,b
   1233 DD 8E F5           4531 	adc	a,-11 (ix)
   1236 47                 4532 	ld	b,a
   1237 DD 6E F2           4533 	ld	l,-14 (ix)
   123A DD 66 F3           4534 	ld	h,-13 (ix)
   123D 71                 4535 	ld	(hl),c
   123E 23                 4536 	inc	hl
   123F 70                 4537 	ld	(hl),b
                           4538 ;demo.c:605: cmd.dest_y = 1+ly+y*3;
   1240 21r9As16           4539 	ld	hl,#_cmd + 6
   1243 DD 75 F2           4540 	ld	-14 (ix),l
   1246 DD 74 F3           4541 	ld	-13 (ix),h
   1249 21r1Bs17           4542 	ld	hl,#_ly + 0
   124C 4E                 4543 	ld	c,(hl)
   124D 06 00              4544 	ld	b,#0x00
   124F 03                 4545 	inc	bc
   1250 79                 4546 	ld	a,c
   1251 DD 86 F6           4547 	add	a,-10 (ix)
   1254 4F                 4548 	ld	c,a
   1255 78                 4549 	ld	a,b
   1256 DD 8E F7           4550 	adc	a,-9 (ix)
   1259 47                 4551 	ld	b,a
   125A DD 6E F2           4552 	ld	l,-14 (ix)
   125D DD 66 F3           4553 	ld	h,-13 (ix)
   1260 71                 4554 	ld	(hl),c
   1261 23                 4555 	inc	hl
   1262 70                 4556 	ld	(hl),b
                           4557 ;demo.c:606: vdp_copier(&cmd);
   1263 D5                 4558 	push	de
   1264 21r94s16           4559 	ld	hl,#_cmd
   1267 E5                 4560 	push	hl
   1268 CDr00s00           4561 	call	_vdp_copier
   126B F1                 4562 	pop	af
   126C D1                 4563 	pop	de
                           4564 ;demo.c:607: cmd.dest_x = lx+x*3;
   126D 21r98s16           4565 	ld	hl,#_cmd + 4
   1270 DD 75 F2           4566 	ld	-14 (ix),l
   1273 DD 74 F3           4567 	ld	-13 (ix),h
   1276 21r1As17           4568 	ld	hl,#_lx + 0
   1279 4E                 4569 	ld	c,(hl)
   127A 06 00              4570 	ld	b,#0x00
   127C 79                 4571 	ld	a,c
   127D DD 86 F4           4572 	add	a,-12 (ix)
   1280 4F                 4573 	ld	c,a
   1281 78                 4574 	ld	a,b
   1282 DD 8E F5           4575 	adc	a,-11 (ix)
   1285 47                 4576 	ld	b,a
   1286 DD 6E F2           4577 	ld	l,-14 (ix)
   1289 DD 66 F3           4578 	ld	h,-13 (ix)
   128C 71                 4579 	ld	(hl),c
   128D 23                 4580 	inc	hl
   128E 70                 4581 	ld	(hl),b
                           4582 ;demo.c:608: cmd.dest_y = 1+ly+y*3;
   128F 21r9As16           4583 	ld	hl,#_cmd + 6
   1292 DD 75 F2           4584 	ld	-14 (ix),l
   1295 DD 74 F3           4585 	ld	-13 (ix),h
   1298 21r1Bs17           4586 	ld	hl,#_ly + 0
   129B 4E                 4587 	ld	c,(hl)
   129C 06 00              4588 	ld	b,#0x00
   129E 03                 4589 	inc	bc
   129F 79                 4590 	ld	a,c
   12A0 DD 86 F6           4591 	add	a,-10 (ix)
   12A3 4F                 4592 	ld	c,a
   12A4 78                 4593 	ld	a,b
   12A5 DD 8E F7           4594 	adc	a,-9 (ix)
   12A8 47                 4595 	ld	b,a
   12A9 DD 6E F2           4596 	ld	l,-14 (ix)
   12AC DD 66 F3           4597 	ld	h,-13 (ix)
   12AF 71                 4598 	ld	(hl),c
   12B0 23                 4599 	inc	hl
   12B1 70                 4600 	ld	(hl),b
                           4601 ;demo.c:609: vdp_copier(&cmd);
   12B2 D5                 4602 	push	de
   12B3 21r94s16           4603 	ld	hl,#_cmd
   12B6 E5                 4604 	push	hl
   12B7 CDr00s00           4605 	call	_vdp_copier
   12BA F1                 4606 	pop	af
   12BB D1                 4607 	pop	de
                           4608 ;demo.c:582: for (x=0;x<font_w[cidx];x++) {
   12BC DD 7E F4           4609 	ld	a,-12 (ix)
   12BF C6 03              4610 	add	a,#0x03
   12C1 DD 77 F4           4611 	ld	-12 (ix),a
   12C4 DD 7E F5           4612 	ld	a,-11 (ix)
   12C7 CE 00              4613 	adc	a,#0x00
   12C9 DD 77 F5           4614 	ld	-11 (ix),a
   12CC DD 34 FC           4615 	inc	-4 (ix)
   12CF 20 03              4616 	jr	NZ,00117$
   12D1 DD 34 FD           4617 	inc	-3 (ix)
   12D4                    4618 00117$:
   12D4 C3rD4s10           4619 	jp	00101$
   12D7                    4620 00115$:
   12D7 DD 7E FC           4621 	ld	a,-4 (ix)
   12DA DD 77 F2           4622 	ld	-14 (ix),a
   12DD DD 7E FD           4623 	ld	a,-3 (ix)
   12E0 DD 77 F3           4624 	ld	-13 (ix),a
                           4625 ;demo.c:611: waitVB();
   12E3 76                 4626 		halt 
                           4627 ;demo.c:581: for (y=0;y<8;y++) {
   12E4 DD 7E F6           4628 	ld	a,-10 (ix)
   12E7 C6 03              4629 	add	a,#0x03
   12E9 DD 77 F6           4630 	ld	-10 (ix),a
   12EC DD 7E F7           4631 	ld	a,-9 (ix)
   12EF CE 00              4632 	adc	a,#0x00
   12F1 DD 77 F7           4633 	ld	-9 (ix),a
   12F4 DD 34 FA           4634 	inc	-6 (ix)
   12F7 20 03              4635 	jr	NZ,00118$
   12F9 DD 34 FB           4636 	inc	-5 (ix)
   12FC                    4637 00118$:
   12FC C3rB7s10           4638 	jp	00105$
   12FF                    4639 00108$:
                           4640 ;demo.c:614: lx+=font_w[cidx]-1+(x*4);
   12FF 3ErA7              4641 	ld	a,#<_font_w
   1301 DD 86 FE           4642 	add	a,-2 (ix)
   1304 4F                 4643 	ld	c,a
   1305 3Es13              4644 	ld	a,#>_font_w
   1307 DD 8E FF           4645 	adc	a,-1 (ix)
   130A 47                 4646 	ld	b,a
   130B 0A                 4647 	ld	a,(bc)
   130C 4F                 4648 	ld	c,a
   130D 0D                 4649 	dec	c
   130E DD 46 F2           4650 	ld	b,-14 (ix)
   1311 CB 20              4651 	sla	b
   1313 CB 20              4652 	sla	b
   1315 79                 4653 	ld	a,c
   1316 80                 4654 	add	a,b
   1317 4F                 4655 	ld	c,a
   1318 21r1As17           4656 	ld	hl,#_lx + 0
   131B 46                 4657 	ld	b,(hl)
   131C 21r1As17           4658 	ld	hl,#_lx
   131F 78                 4659 	ld	a,b
   1320 81                 4660 	add	a,c
   1321 77                 4661 	ld	(hl),a
   1322 DD F9              4662 	ld	sp,ix
   1324 DD E1              4663 	pop	ix
   1326 C9                 4664 	ret
   1327                    4665 _do_2xletter_end::
   1327                    4666 _font_x:
   1327 01                 4667 	.db #0x01
   1328 09                 4668 	.db #0x09
   1329 11                 4669 	.db #0x11
   132A 19                 4670 	.db #0x19
   132B 21                 4671 	.db #0x21
   132C 29                 4672 	.db #0x29
   132D 31                 4673 	.db #0x31
   132E 39                 4674 	.db #0x39
   132F 41                 4675 	.db #0x41
   1330 46                 4676 	.db #0x46
   1331 4E                 4677 	.db #0x4E
   1332 56                 4678 	.db #0x56
   1333 5E                 4679 	.db #0x5E
   1334 01                 4680 	.db #0x01
   1335 0A                 4681 	.db #0x0A
   1336 12                 4682 	.db #0x12
   1337 1A                 4683 	.db #0x1A
   1338 23                 4684 	.db #0x23
   1339 2B                 4685 	.db #0x2B
   133A 33                 4686 	.db #0x33
   133B 3C                 4687 	.db #0x3C
   133C 44                 4688 	.db #0x44
   133D 4C                 4689 	.db #0x4C
   133E 56                 4690 	.db #0x56
   133F 5E                 4691 	.db #0x5E
   1340 67                 4692 	.db #0x67
   1341 00                 4693 	.db #0x00
   1342 00                 4694 	.db #0x00
   1343 00                 4695 	.db #0x00
   1344 00                 4696 	.db #0x00
   1345 00                 4697 	.db #0x00
   1346 00                 4698 	.db #0x00
   1347 01                 4699 	.db #0x01
   1348 09                 4700 	.db #0x09
   1349 11                 4701 	.db #0x11
   134A 18                 4702 	.db #0x18
   134B 20                 4703 	.db #0x20
   134C 28                 4704 	.db #0x28
   134D 2F                 4705 	.db #0x2F
   134E 37                 4706 	.db #0x37
   134F 3F                 4707 	.db #0x3F
   1350 45                 4708 	.db #0x45
   1351 4C                 4709 	.db #0x4C
   1352 54                 4710 	.db #0x54
   1353 5A                 4711 	.db #0x5A
   1354 64                 4712 	.db #0x64
   1355 01                 4713 	.db #0x01
   1356 09                 4714 	.db #0x09
   1357 11                 4715 	.db #0x11
   1358 19                 4716 	.db #0x19
   1359 21                 4717 	.db #0x21
   135A 29                 4718 	.db #0x29
   135B 30                 4719 	.db #0x30
   135C 38                 4720 	.db #0x38
   135D 40                 4721 	.db #0x40
   135E 4A                 4722 	.db #0x4A
   135F 52                 4723 	.db #0x52
   1360 5A                 4724 	.db #0x5A
   1361 00                 4725 	.db 0x00
   1362 00                 4726 	.db 0x00
   1363 00                 4727 	.db 0x00
   1364 00                 4728 	.db 0x00
   1365 00                 4729 	.db 0x00
   1366 00                 4730 	.db 0x00
   1367                    4731 _font_y:
   1367 1C                 4732 	.db #0x1C
   1368 1C                 4733 	.db #0x1C
   1369 1C                 4734 	.db #0x1C
   136A 1C                 4735 	.db #0x1C
   136B 1C                 4736 	.db #0x1C
   136C 1C                 4737 	.db #0x1C
   136D 1C                 4738 	.db #0x1C
   136E 1C                 4739 	.db #0x1C
   136F 1C                 4740 	.db #0x1C
   1370 1C                 4741 	.db #0x1C
   1371 1C                 4742 	.db #0x1C
   1372 1C                 4743 	.db #0x1C
   1373 1C                 4744 	.db #0x1C
   1374 25                 4745 	.db #0x25
   1375 25                 4746 	.db #0x25
   1376 25                 4747 	.db #0x25
   1377 25                 4748 	.db #0x25
   1378 25                 4749 	.db #0x25
   1379 25                 4750 	.db #0x25
   137A 25                 4751 	.db #0x25
   137B 25                 4752 	.db #0x25
   137C 25                 4753 	.db #0x25
   137D 25                 4754 	.db #0x25
   137E 25                 4755 	.db #0x25
   137F 25                 4756 	.db #0x25
   1380 25                 4757 	.db #0x25
   1381 00                 4758 	.db #0x00
   1382 00                 4759 	.db #0x00
   1383 00                 4760 	.db #0x00
   1384 00                 4761 	.db #0x00
   1385 00                 4762 	.db #0x00
   1386 00                 4763 	.db #0x00
   1387 37                 4764 	.db #0x37
   1388 37                 4765 	.db #0x37
   1389 37                 4766 	.db #0x37
   138A 37                 4767 	.db #0x37
   138B 37                 4768 	.db #0x37
   138C 37                 4769 	.db #0x37
   138D 37                 4770 	.db #0x37
   138E 37                 4771 	.db #0x37
   138F 37                 4772 	.db #0x37
   1390 37                 4773 	.db #0x37
   1391 37                 4774 	.db #0x37
   1392 37                 4775 	.db #0x37
   1393 37                 4776 	.db #0x37
   1394 37                 4777 	.db #0x37
   1395 40                 4778 	.db #0x40
   1396 40                 4779 	.db #0x40
   1397 40                 4780 	.db #0x40
   1398 40                 4781 	.db #0x40
   1399 40                 4782 	.db #0x40
   139A 40                 4783 	.db #0x40
   139B 40                 4784 	.db #0x40
   139C 40                 4785 	.db #0x40
   139D 40                 4786 	.db #0x40
   139E 40                 4787 	.db #0x40
   139F 40                 4788 	.db #0x40
   13A0 40                 4789 	.db #0x40
   13A1 00                 4790 	.db 0x00
   13A2 00                 4791 	.db 0x00
   13A3 00                 4792 	.db 0x00
   13A4 00                 4793 	.db 0x00
   13A5 00                 4794 	.db 0x00
   13A6 00                 4795 	.db 0x00
   13A7                    4796 _font_w:
   13A7 07                 4797 	.db #0x07
   13A8 07                 4798 	.db #0x07
   13A9 07                 4799 	.db #0x07
   13AA 07                 4800 	.db #0x07
   13AB 07                 4801 	.db #0x07
   13AC 07                 4802 	.db #0x07
   13AD 07                 4803 	.db #0x07
   13AE 07                 4804 	.db #0x07
   13AF 04                 4805 	.db #0x04
   13B0 07                 4806 	.db #0x07
   13B1 07                 4807 	.db #0x07
   13B2 07                 4808 	.db #0x07
   13B3 09                 4809 	.db #0x09
   13B4 08                 4810 	.db #0x08
   13B5 07                 4811 	.db #0x07
   13B6 07                 4812 	.db #0x07
   13B7 08                 4813 	.db #0x08
   13B8 07                 4814 	.db #0x07
   13B9 07                 4815 	.db #0x07
   13BA 08                 4816 	.db #0x08
   13BB 07                 4817 	.db #0x07
   13BC 07                 4818 	.db #0x07
   13BD 09                 4819 	.db #0x09
   13BE 07                 4820 	.db #0x07
   13BF 08                 4821 	.db #0x08
   13C0 07                 4822 	.db #0x07
   13C1 00                 4823 	.db #0x00
   13C2 00                 4824 	.db #0x00
   13C3 00                 4825 	.db #0x00
   13C4 00                 4826 	.db #0x00
   13C5 00                 4827 	.db #0x00
   13C6 00                 4828 	.db #0x00
   13C7 07                 4829 	.db #0x07
   13C8 07                 4830 	.db #0x07
   13C9 06                 4831 	.db #0x06
   13CA 07                 4832 	.db #0x07
   13CB 07                 4833 	.db #0x07
   13CC 07                 4834 	.db #0x07
   13CD 07                 4835 	.db #0x07
   13CE 07                 4836 	.db #0x07
   13CF 05                 4837 	.db #0x05
   13D0 06                 4838 	.db #0x06
   13D1 07                 4839 	.db #0x07
   13D2 05                 4840 	.db #0x05
   13D3 09                 4841 	.db #0x09
   13D4 07                 4842 	.db #0x07
   13D5 07                 4843 	.db #0x07
   13D6 07                 4844 	.db #0x07
   13D7 07                 4845 	.db #0x07
   13D8 07                 4846 	.db #0x07
   13D9 07                 4847 	.db #0x07
   13DA 06                 4848 	.db #0x06
   13DB 07                 4849 	.db #0x07
   13DC 07                 4850 	.db #0x07
   13DD 09                 4851 	.db #0x09
   13DE 07                 4852 	.db #0x07
   13DF 07                 4853 	.db #0x07
   13E0 07                 4854 	.db #0x07
   13E1 00                 4855 	.db 0x00
   13E2 00                 4856 	.db 0x00
   13E3 00                 4857 	.db 0x00
   13E4 00                 4858 	.db 0x00
   13E5 00                 4859 	.db 0x00
   13E6 00                 4860 	.db 0x00
                           4861 ;demo.c:618: void do_letter(char cc) {
                           4862 ;	---------------------------------
                           4863 ; Function do_letter
                           4864 ; ---------------------------------
   13E7                    4865 _do_letter_start::
   13E7                    4866 _do_letter:
   13E7 DD E5              4867 	push	ix
   13E9 DD 21 00 00        4868 	ld	ix,#0
   13ED DD 39              4869 	add	ix,sp
   13EF F5                 4870 	push	af
                           4871 ;demo.c:619: int cidx = cc - 65;
   13F0 DD 4E 04           4872 	ld	c,4 (ix)
   13F3 DD 7E 04           4873 	ld	a,4 (ix)
   13F6 17                 4874 	rla	
   13F7 9F                 4875 	sbc	a,a
   13F8 47                 4876 	ld	b,a
   13F9 79                 4877 	ld	a,c
   13FA C6 BF              4878 	add	a,#0xBF
   13FC DD 77 FE           4879 	ld	-2 (ix),a
   13FF 78                 4880 	ld	a,b
   1400 CE FF              4881 	adc	a,#0xFF
   1402 DD 77 FF           4882 	ld	-1 (ix),a
                           4883 ;demo.c:620: cmd.source_x = 127+font_x[cidx];
   1405 3Er27              4884 	ld	a,#<_font_x
   1407 DD 86 FE           4885 	add	a,-2 (ix)
   140A 5F                 4886 	ld	e,a
   140B 3Es13              4887 	ld	a,#>_font_x
   140D DD 8E FF           4888 	adc	a,-1 (ix)
   1410 57                 4889 	ld	d,a
   1411 1A                 4890 	ld	a,(de)
   1412 5F                 4891 	ld	e,a
   1413 16 00              4892 	ld	d,#0x00
   1415 21 7F 00           4893 	ld	hl,#0x007F
   1418 19                 4894 	add	hl,de
   1419 EB                 4895 	ex	de,hl
   141A 21r94s16           4896 	ld	hl,#_cmd
   141D 73                 4897 	ld	(hl),e
   141E 23                 4898 	inc	hl
   141F 72                 4899 	ld	(hl),d
                           4900 ;demo.c:621: cmd.source_y = 512+font_y[cidx];
   1420 11r96s16           4901 	ld	de,#_cmd + 2
   1423 3Er67              4902 	ld	a,#<_font_y
   1425 DD 86 FE           4903 	add	a,-2 (ix)
   1428 4F                 4904 	ld	c,a
   1429 3Es13              4905 	ld	a,#>_font_y
   142B DD 8E FF           4906 	adc	a,-1 (ix)
   142E 47                 4907 	ld	b,a
   142F 0A                 4908 	ld	a,(bc)
   1430 4F                 4909 	ld	c,a
   1431 06 00              4910 	ld	b,#0x00
   1433 21 00 02           4911 	ld	hl,#0x0200
   1436 09                 4912 	add	hl,bc
   1437 4D                 4913 	ld	c,l
   1438 44                 4914 	ld	b,h
   1439 EB                 4915 	ex	de,hl
   143A 71                 4916 	ld	(hl),c
   143B 23                 4917 	inc	hl
   143C 70                 4918 	ld	(hl),b
                           4919 ;demo.c:622: cmd.dest_x = lx;
   143D 01r98s16           4920 	ld	bc,#_cmd + 4
   1440 21r1As17           4921 	ld	hl,#_lx + 0
   1443 5E                 4922 	ld	e,(hl)
   1444 16 00              4923 	ld	d,#0x00
   1446 69                 4924 	ld	l,c
   1447 60                 4925 	ld	h,b
   1448 73                 4926 	ld	(hl),e
   1449 23                 4927 	inc	hl
   144A 72                 4928 	ld	(hl),d
                           4929 ;demo.c:623: cmd.dest_y = ly;
   144B 01r9As16           4930 	ld	bc,#_cmd + 6
   144E 21r1Bs17           4931 	ld	hl,#_ly + 0
   1451 5E                 4932 	ld	e,(hl)
   1452 16 00              4933 	ld	d,#0x00
   1454 69                 4934 	ld	l,c
   1455 60                 4935 	ld	h,b
   1456 73                 4936 	ld	(hl),e
   1457 23                 4937 	inc	hl
   1458 72                 4938 	ld	(hl),d
                           4939 ;demo.c:624: cmd.size_x = font_w[cidx];
   1459 01r9Cs16           4940 	ld	bc,#_cmd + 8
   145C 3ErA7              4941 	ld	a,#<_font_w
   145E DD 86 FE           4942 	add	a,-2 (ix)
   1461 5F                 4943 	ld	e,a
   1462 3Es13              4944 	ld	a,#>_font_w
   1464 DD 8E FF           4945 	adc	a,-1 (ix)
   1467 57                 4946 	ld	d,a
   1468 1A                 4947 	ld	a,(de)
   1469 5F                 4948 	ld	e,a
   146A 16 00              4949 	ld	d,#0x00
   146C 69                 4950 	ld	l,c
   146D 60                 4951 	ld	h,b
   146E 73                 4952 	ld	(hl),e
   146F 23                 4953 	inc	hl
   1470 72                 4954 	ld	(hl),d
                           4955 ;demo.c:625: cmd.size_y = 8;
   1471 21r9Es16           4956 	ld	hl, #_cmd + 10
   1474 36 08              4957 	ld	(hl),#0x08
   1476 23                 4958 	inc	hl
   1477 36 00              4959 	ld	(hl),#0x00
                           4960 ;demo.c:626: cmd.argument = 0x00;
   1479 3E 00              4961 	ld	a,#0x00
   147B 32rA1s16           4962 	ld	(#_cmd + 13),a
                           4963 ;demo.c:627: cmd.command = 0x90; // logical vram to vram
   147E 3E 90              4964 	ld	a,#0x90
   1480 32rA2s16           4965 	ld	(#_cmd + 14),a
                           4966 ;demo.c:628: vdp_copier(&cmd);
   1483 21r94s16           4967 	ld	hl,#_cmd
   1486 E5                 4968 	push	hl
   1487 CDr00s00           4969 	call	_vdp_copier
   148A F1                 4970 	pop	af
                           4971 ;demo.c:629: lx+=font_w[cidx]-1;
   148B 3ErA7              4972 	ld	a,#<_font_w
   148D DD 86 FE           4973 	add	a,-2 (ix)
   1490 4F                 4974 	ld	c,a
   1491 3Es13              4975 	ld	a,#>_font_w
   1493 DD 8E FF           4976 	adc	a,-1 (ix)
   1496 47                 4977 	ld	b,a
   1497 0A                 4978 	ld	a,(bc)
   1498 4F                 4979 	ld	c,a
   1499 0D                 4980 	dec	c
   149A 21r1As17           4981 	ld	hl,#_lx
   149D 7E                 4982 	ld	a,(hl)
   149E 81                 4983 	add	a,c
   149F 77                 4984 	ld	(hl),a
   14A0 DD F9              4985 	ld	sp,ix
   14A2 DD E1              4986 	pop	ix
   14A4 C9                 4987 	ret
   14A5                    4988 _do_letter_end::
                           4989 ;demo.c:633: void do_letter_tall(char cc) {
                           4990 ;	---------------------------------
                           4991 ; Function do_letter_tall
                           4992 ; ---------------------------------
   14A5                    4993 _do_letter_tall_start::
   14A5                    4994 _do_letter_tall:
   14A5 DD E5              4995 	push	ix
   14A7 DD 21 00 00        4996 	ld	ix,#0
   14AB DD 39              4997 	add	ix,sp
   14AD F5                 4998 	push	af
                           4999 ;demo.c:634: int cidx = cc - 65;
   14AE DD 4E 04           5000 	ld	c,4 (ix)
   14B1 DD 7E 04           5001 	ld	a,4 (ix)
   14B4 17                 5002 	rla	
   14B5 9F                 5003 	sbc	a,a
   14B6 47                 5004 	ld	b,a
   14B7 79                 5005 	ld	a,c
   14B8 C6 BF              5006 	add	a,#0xBF
   14BA DD 77 FE           5007 	ld	-2 (ix),a
   14BD 78                 5008 	ld	a,b
   14BE CE FF              5009 	adc	a,#0xFF
   14C0 DD 77 FF           5010 	ld	-1 (ix),a
                           5011 ;demo.c:635: cmd.source_x = 127+font_x[cidx];
   14C3 3Er27              5012 	ld	a,#<_font_x
   14C5 DD 86 FE           5013 	add	a,-2 (ix)
   14C8 5F                 5014 	ld	e,a
   14C9 3Es13              5015 	ld	a,#>_font_x
   14CB DD 8E FF           5016 	adc	a,-1 (ix)
   14CE 57                 5017 	ld	d,a
   14CF 1A                 5018 	ld	a,(de)
   14D0 5F                 5019 	ld	e,a
   14D1 16 00              5020 	ld	d,#0x00
   14D3 21 7F 00           5021 	ld	hl,#0x007F
   14D6 19                 5022 	add	hl,de
   14D7 EB                 5023 	ex	de,hl
   14D8 21r94s16           5024 	ld	hl,#_cmd
   14DB 73                 5025 	ld	(hl),e
   14DC 23                 5026 	inc	hl
   14DD 72                 5027 	ld	(hl),d
                           5028 ;demo.c:636: cmd.source_y = 512+font_y[cidx]-1;
   14DE 11r96s16           5029 	ld	de,#_cmd + 2
   14E1 3Er67              5030 	ld	a,#<_font_y
   14E3 DD 86 FE           5031 	add	a,-2 (ix)
   14E6 4F                 5032 	ld	c,a
   14E7 3Es13              5033 	ld	a,#>_font_y
   14E9 DD 8E FF           5034 	adc	a,-1 (ix)
   14EC 47                 5035 	ld	b,a
   14ED 0A                 5036 	ld	a,(bc)
   14EE 4F                 5037 	ld	c,a
   14EF 06 00              5038 	ld	b,#0x00
   14F1 21 FF 01           5039 	ld	hl,#0x01FF
   14F4 09                 5040 	add	hl,bc
   14F5 4D                 5041 	ld	c,l
   14F6 44                 5042 	ld	b,h
   14F7 EB                 5043 	ex	de,hl
   14F8 71                 5044 	ld	(hl),c
   14F9 23                 5045 	inc	hl
   14FA 70                 5046 	ld	(hl),b
                           5047 ;demo.c:637: cmd.dest_x = lx;
   14FB 01r98s16           5048 	ld	bc,#_cmd + 4
   14FE 21r1As17           5049 	ld	hl,#_lx + 0
   1501 5E                 5050 	ld	e,(hl)
   1502 16 00              5051 	ld	d,#0x00
   1504 69                 5052 	ld	l,c
   1505 60                 5053 	ld	h,b
   1506 73                 5054 	ld	(hl),e
   1507 23                 5055 	inc	hl
   1508 72                 5056 	ld	(hl),d
                           5057 ;demo.c:638: cmd.dest_y = ly;
   1509 01r9As16           5058 	ld	bc,#_cmd + 6
   150C 21r1Bs17           5059 	ld	hl,#_ly + 0
   150F 5E                 5060 	ld	e,(hl)
   1510 16 00              5061 	ld	d,#0x00
   1512 69                 5062 	ld	l,c
   1513 60                 5063 	ld	h,b
   1514 73                 5064 	ld	(hl),e
   1515 23                 5065 	inc	hl
   1516 72                 5066 	ld	(hl),d
                           5067 ;demo.c:639: cmd.size_x = font_w[cidx];
   1517 01r9Cs16           5068 	ld	bc,#_cmd + 8
   151A 3ErA7              5069 	ld	a,#<_font_w
   151C DD 86 FE           5070 	add	a,-2 (ix)
   151F 5F                 5071 	ld	e,a
   1520 3Es13              5072 	ld	a,#>_font_w
   1522 DD 8E FF           5073 	adc	a,-1 (ix)
   1525 57                 5074 	ld	d,a
   1526 1A                 5075 	ld	a,(de)
   1527 5F                 5076 	ld	e,a
   1528 16 00              5077 	ld	d,#0x00
   152A 69                 5078 	ld	l,c
   152B 60                 5079 	ld	h,b
   152C 73                 5080 	ld	(hl),e
   152D 23                 5081 	inc	hl
   152E 72                 5082 	ld	(hl),d
                           5083 ;demo.c:640: cmd.size_y = 10;
   152F 21r9Es16           5084 	ld	hl, #_cmd + 10
   1532 36 0A              5085 	ld	(hl),#0x0A
   1534 23                 5086 	inc	hl
   1535 36 00              5087 	ld	(hl),#0x00
                           5088 ;demo.c:641: cmd.argument = 0x00;
   1537 3E 00              5089 	ld	a,#0x00
   1539 32rA1s16           5090 	ld	(#_cmd + 13),a
                           5091 ;demo.c:642: cmd.command = 0x90; // logical vram to vram
   153C 3E 90              5092 	ld	a,#0x90
   153E 32rA2s16           5093 	ld	(#_cmd + 14),a
                           5094 ;demo.c:643: vdp_copier(&cmd);
   1541 21r94s16           5095 	ld	hl,#_cmd
   1544 E5                 5096 	push	hl
   1545 CDr00s00           5097 	call	_vdp_copier
   1548 F1                 5098 	pop	af
                           5099 ;demo.c:644: lx+=font_w[cidx]-1;
   1549 3ErA7              5100 	ld	a,#<_font_w
   154B DD 86 FE           5101 	add	a,-2 (ix)
   154E 4F                 5102 	ld	c,a
   154F 3Es13              5103 	ld	a,#>_font_w
   1551 DD 8E FF           5104 	adc	a,-1 (ix)
   1554 47                 5105 	ld	b,a
   1555 0A                 5106 	ld	a,(bc)
   1556 4F                 5107 	ld	c,a
   1557 0D                 5108 	dec	c
   1558 21r1As17           5109 	ld	hl,#_lx
   155B 7E                 5110 	ld	a,(hl)
   155C 81                 5111 	add	a,c
   155D 77                 5112 	ld	(hl),a
   155E DD F9              5113 	ld	sp,ix
   1560 DD E1              5114 	pop	ix
   1562 C9                 5115 	ret
   1563                    5116 _do_letter_tall_end::
                           5117 ;demo.c:647: void drawstr(char* str, uint8_t x, uint8_t y) {
                           5118 ;	---------------------------------
                           5119 ; Function drawstr
                           5120 ; ---------------------------------
   1563                    5121 _drawstr_start::
   1563                    5122 _drawstr:
   1563 DD E5              5123 	push	ix
   1565 DD 21 00 00        5124 	ld	ix,#0
   1569 DD 39              5125 	add	ix,sp
                           5126 ;demo.c:648: char* c = str;
   156B DD 4E 04           5127 	ld	c,4 (ix)
   156E DD 46 05           5128 	ld	b,5 (ix)
                           5129 ;demo.c:649: lx = x;
   1571 DD 5E 06           5130 	ld	e,6 (ix)
   1574 21r1As17           5131 	ld	hl,#_lx + 0
   1577 73                 5132 	ld	(hl), e
                           5133 ;demo.c:650: ly = y;
   1578 DD 7E 07           5134 	ld	a,7 (ix)
   157B 21r1Bs17           5135 	ld	hl,#_ly + 0
   157E 77                 5136 	ld	(hl), a
                           5137 ;demo.c:651: while (*c) {
   157F                    5138 00107$:
   157F 0A                 5139 	ld	a,(bc)
   1580 57                 5140 	ld	d,a
   1581 B7                 5141 	or	a,a
   1582 28 42              5142 	jr	Z,00110$
                           5143 ;demo.c:652: char ltr = *c++; 
   1584 03                 5144 	inc	bc
                           5145 ;demo.c:653: if (ltr == ' ') lx+=4;
   1585 7A                 5146 	ld	a,d
   1586 D6 20              5147 	sub	a,#0x20
   1588 20 1E              5148 	jr	NZ,00105$
   158A FD 21r1As17        5149 	ld	iy,#_lx
   158E FD 34 00           5150 	inc	0 (iy)
   1591 FD 21r1As17        5151 	ld	iy,#_lx
   1595 FD 34 00           5152 	inc	0 (iy)
   1598 FD 21r1As17        5153 	ld	iy,#_lx
   159C FD 34 00           5154 	inc	0 (iy)
   159F FD 21r1As17        5155 	ld	iy,#_lx
   15A3 FD 34 00           5156 	inc	0 (iy)
   15A6 18 D7              5157 	jr	00107$
   15A8                    5158 00105$:
                           5159 ;demo.c:654: else if (ltr == '_') { ly+=9; lx = x; }
   15A8 7A                 5160 	ld	a,d
   15A9 D6 5F              5161 	sub	a,#0x5F
   15AB 20 0D              5162 	jr	NZ,00102$
   15AD 21r1Bs17           5163 	ld	hl,#_ly
   15B0 7E                 5164 	ld	a,(hl)
   15B1 C6 09              5165 	add	a,#0x09
   15B3 77                 5166 	ld	(hl),a
   15B4 21r1As17           5167 	ld	hl,#_lx + 0
   15B7 73                 5168 	ld	(hl), e
   15B8 18 C5              5169 	jr	00107$
   15BA                    5170 00102$:
                           5171 ;demo.c:655: else do_letter(ltr);
   15BA C5                 5172 	push	bc
   15BB D5                 5173 	push	de
   15BC D5                 5174 	push	de
   15BD 33                 5175 	inc	sp
   15BE CDrE7s13           5176 	call	_do_letter
   15C1 33                 5177 	inc	sp
   15C2 D1                 5178 	pop	de
   15C3 C1                 5179 	pop	bc
   15C4 18 B9              5180 	jr	00107$
   15C6                    5181 00110$:
   15C6 DD E1              5182 	pop	ix
   15C8 C9                 5183 	ret
   15C9                    5184 _drawstr_end::
                           5185 ;demo.c:662: void drawstrslow(char* str, uint8_t x, uint8_t y) {
                           5186 ;	---------------------------------
                           5187 ; Function drawstrslow
                           5188 ; ---------------------------------
   15C9                    5189 _drawstrslow_start::
   15C9                    5190 _drawstrslow:
   15C9 DD E5              5191 	push	ix
   15CB DD 21 00 00        5192 	ld	ix,#0
   15CF DD 39              5193 	add	ix,sp
                           5194 ;demo.c:663: char* c = str+ltrpointer;
   15D1 21r1Cs17           5195 	ld	hl,#_ltrpointer
   15D4 DD 7E 04           5196 	ld	a,4 (ix)
   15D7 86                 5197 	add	a,(hl)
   15D8 4F                 5198 	ld	c,a
   15D9 DD 7E 05           5199 	ld	a,5 (ix)
   15DC 23                 5200 	inc	hl
   15DD 8E                 5201 	adc	a,(hl)
   15DE 47                 5202 	ld	b,a
                           5203 ;demo.c:664: if (ltrpointer > slowend) return;
   15DF 21r1Es17           5204 	ld	hl,#_slowend
   15E2 7E                 5205 	ld	a,(hl)
   15E3 FD 21r1Cs17        5206 	ld	iy,#_ltrpointer
   15E7 FD 96 00           5207 	sub	a,0 (iy)
   15EA 23                 5208 	inc	hl
   15EB 7E                 5209 	ld	a,(hl)
   15EC FD 21r1Cs17        5210 	ld	iy,#_ltrpointer
   15F0 FD 9E 01           5211 	sbc	a,1 (iy)
   15F3 F2rF9s15           5212 	jp	P,00102$
   15F6 C3r64s16           5213 	jp	00114$
   15F9                    5214 00102$:
                           5215 ;demo.c:665: if (ltrpointer == 0) {
   15F9 3Ar1Cs17           5216 	ld	a,(#_ltrpointer+0)
   15FC 21r1Ds17           5217 	ld	hl,#_ltrpointer + 1
   15FF B6                 5218 	or	a,(hl)
   1600 20 0E              5219 	jr	NZ,00111$
                           5220 ;demo.c:666: lx = x;
   1602 DD 7E 06           5221 	ld	a,6 (ix)
   1605 21r1As17           5222 	ld	hl,#_lx + 0
   1608 77                 5223 	ld	(hl), a
                           5224 ;demo.c:667: ly = y;
   1609 DD 7E 07           5225 	ld	a,7 (ix)
   160C 21r1Bs17           5226 	ld	hl,#_ly + 0
   160F 77                 5227 	ld	(hl), a
                           5228 ;demo.c:669: while (*c) {
   1610                    5229 00111$:
   1610 0A                 5230 	ld	a,(bc)
   1611 4F                 5231 	ld	c,a
   1612 B7                 5232 	or	a,a
   1613 28 3F              5233 	jr	Z,00113$
                           5234 ;demo.c:670: char ltr = *c++; 
                           5235 ;demo.c:671: if (ltr == ' ') lx+=4;
   1615 79                 5236 	ld	a,c
   1616 D6 20              5237 	sub	a,#0x20
   1618 20 1E              5238 	jr	NZ,00109$
   161A FD 21r1As17        5239 	ld	iy,#_lx
   161E FD 34 00           5240 	inc	0 (iy)
   1621 FD 21r1As17        5241 	ld	iy,#_lx
   1625 FD 34 00           5242 	inc	0 (iy)
   1628 FD 21r1As17        5243 	ld	iy,#_lx
   162C FD 34 00           5244 	inc	0 (iy)
   162F FD 21r1As17        5245 	ld	iy,#_lx
   1633 FD 34 00           5246 	inc	0 (iy)
   1636 18 1C              5247 	jr	00113$
   1638                    5248 00109$:
                           5249 ;demo.c:672: else if (ltr == '_') { ly+=9; lx = x; }
   1638 79                 5250 	ld	a,c
   1639 D6 5F              5251 	sub	a,#0x5F
   163B 20 10              5252 	jr	NZ,00106$
   163D 21r1Bs17           5253 	ld	hl,#_ly
   1640 7E                 5254 	ld	a,(hl)
   1641 C6 09              5255 	add	a,#0x09
   1643 77                 5256 	ld	(hl),a
   1644 DD 7E 06           5257 	ld	a,6 (ix)
   1647 21r1As17           5258 	ld	hl,#_lx + 0
   164A 77                 5259 	ld	(hl), a
   164B 18 07              5260 	jr	00113$
   164D                    5261 00106$:
                           5262 ;demo.c:673: else do_letter(ltr);
   164D 79                 5263 	ld	a,c
   164E F5                 5264 	push	af
   164F 33                 5265 	inc	sp
   1650 CDrE7s13           5266 	call	_do_letter
   1653 33                 5267 	inc	sp
                           5268 ;demo.c:674: break;
   1654                    5269 00113$:
                           5270 ;demo.c:677: ltrpointer++;
   1654 FD 21r1Cs17        5271 	ld	iy,#_ltrpointer
   1658 FD 34 00           5272 	inc	0 (iy)
   165B 20 07              5273 	jr	NZ,00125$
   165D FD 21r1Cs17        5274 	ld	iy,#_ltrpointer
   1661 FD 34 01           5275 	inc	1 (iy)
   1664                    5276 00125$:
   1664                    5277 00114$:
   1664 DD E1              5278 	pop	ix
   1666 C9                 5279 	ret
   1667                    5280 _drawstrslow_end::
                           5281 ;demo.c:680: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           5282 ;	---------------------------------
                           5283 ; Function drawstr2x
                           5284 ; ---------------------------------
   1667                    5285 _drawstr2x_start::
   1667                    5286 _drawstr2x:
   1667 DD E5              5287 	push	ix
   1669 DD 21 00 00        5288 	ld	ix,#0
   166D DD 39              5289 	add	ix,sp
                           5290 ;demo.c:681: char* c = str;
   166F DD 4E 04           5291 	ld	c,4 (ix)
   1672 DD 46 05           5292 	ld	b,5 (ix)
                           5293 ;demo.c:682: lx = x;
   1675 DD 5E 06           5294 	ld	e,6 (ix)
   1678 21r1As17           5295 	ld	hl,#_lx + 0
   167B 73                 5296 	ld	(hl), e
                           5297 ;demo.c:683: ly = y;
   167C DD 7E 07           5298 	ld	a,7 (ix)
   167F 21r1Bs17           5299 	ld	hl,#_ly + 0
   1682 77                 5300 	ld	(hl), a
                           5301 ;demo.c:684: while (*c) {
   1683                    5302 00107$:
   1683 0A                 5303 	ld	a,(bc)
   1684 57                 5304 	ld	d,a
   1685 B7                 5305 	or	a,a
   1686 28 2D              5306 	jr	Z,00110$
                           5307 ;demo.c:685: char ltr = *c++; 
   1688 03                 5308 	inc	bc
                           5309 ;demo.c:686: if (ltr == ' ') lx+=4*4;
   1689 7A                 5310 	ld	a,d
   168A D6 20              5311 	sub	a,#0x20
   168C 20 09              5312 	jr	NZ,00105$
   168E 21r1As17           5313 	ld	hl,#_lx
   1691 7E                 5314 	ld	a,(hl)
   1692 C6 10              5315 	add	a,#0x10
   1694 77                 5316 	ld	(hl),a
   1695 18 EC              5317 	jr	00107$
   1697                    5318 00105$:
                           5319 ;demo.c:687: else if (ltr == '_') { ly+=9*4; lx = x; }
   1697 7A                 5320 	ld	a,d
   1698 D6 5F              5321 	sub	a,#0x5F
   169A 20 0D              5322 	jr	NZ,00102$
   169C 21r1Bs17           5323 	ld	hl,#_ly
   169F 7E                 5324 	ld	a,(hl)
   16A0 C6 24              5325 	add	a,#0x24
   16A2 77                 5326 	ld	(hl),a
   16A3 21r1As17           5327 	ld	hl,#_lx + 0
   16A6 73                 5328 	ld	(hl), e
   16A7 18 DA              5329 	jr	00107$
   16A9                    5330 00102$:
                           5331 ;demo.c:688: else do_2xletter(ltr);
   16A9 C5                 5332 	push	bc
   16AA D5                 5333 	push	de
   16AB D5                 5334 	push	de
   16AC 33                 5335 	inc	sp
   16AD CDr79s10           5336 	call	_do_2xletter
   16B0 33                 5337 	inc	sp
   16B1 D1                 5338 	pop	de
   16B2 C1                 5339 	pop	bc
   16B3 18 CE              5340 	jr	00107$
   16B5                    5341 00110$:
   16B5 DD E1              5342 	pop	ix
   16B7 C9                 5343 	ret
   16B8                    5344 _drawstr2x_end::
                           5345 ;demo.c:693: void drawsine(char* str, uint8_t x, uint8_t y) {
                           5346 ;	---------------------------------
                           5347 ; Function drawsine
                           5348 ; ---------------------------------
   16B8                    5349 _drawsine_start::
   16B8                    5350 _drawsine:
   16B8 DD E5              5351 	push	ix
   16BA DD 21 00 00        5352 	ld	ix,#0
   16BE DD 39              5353 	add	ix,sp
   16C0 3B                 5354 	dec	sp
                           5355 ;demo.c:694: char* c = str;
   16C1 DD 4E 04           5356 	ld	c,4 (ix)
   16C4 DD 46 05           5357 	ld	b,5 (ix)
                           5358 ;demo.c:695: lx = x;
   16C7 DD 7E 06           5359 	ld	a,6 (ix)
   16CA 21r1As17           5360 	ld	hl,#_lx + 0
   16CD 77                 5361 	ld	(hl), a
                           5362 ;demo.c:697: while (*c) {
   16CE                    5363 00104$:
   16CE 0A                 5364 	ld	a,(bc)
   16CF 5F                 5365 	ld	e,a
   16D0 B7                 5366 	or	a,a
   16D1 CAr37s17           5367 	jp	Z,00107$
                           5368 ;demo.c:698: char ltr = *c++; 
   16D4 03                 5369 	inc	bc
   16D5 DD 73 FF           5370 	ld	-1 (ix),e
                           5371 ;demo.c:699: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   16D8 21r1As17           5372 	ld	hl,#_lx + 0
   16DB 5E                 5373 	ld	e,(hl)
   16DC 16 00              5374 	ld	d,#0x00
   16DE 21r90s16           5375 	ld	hl,#_vbicount
   16E1 7B                 5376 	ld	a,e
   16E2 86                 5377 	add	a,(hl)
   16E3 5F                 5378 	ld	e,a
   16E4 7A                 5379 	ld	a,d
   16E5 23                 5380 	inc	hl
   16E6 8E                 5381 	adc	a,(hl)
   16E7 57                 5382 	ld	d,a
   16E8 CB 2A              5383 	sra	d
   16EA CB 1B              5384 	rr	e
   16EC 16 00              5385 	ld	d,#0x00
   16EE 21r2Cs00           5386 	ld	hl,#_sintabx
   16F1 19                 5387 	add	hl,de
   16F2 5E                 5388 	ld	e,(hl)
   16F3 CB 3B              5389 	srl	e
   16F5 CB 3B              5390 	srl	e
   16F7 CB 3B              5391 	srl	e
   16F9 CB 3B              5392 	srl	e
   16FB 21r1Bs17           5393 	ld	hl,#_ly
   16FE DD 7E 07           5394 	ld	a,7 (ix)
   1701 83                 5395 	add	a,e
   1702 77                 5396 	ld	(hl),a
                           5397 ;demo.c:700: if (ltr == ' ') lx+=4;
   1703 DD 7E FF           5398 	ld	a,-1 (ix)
   1706 D6 20              5399 	sub	a,#0x20
   1708 20 1F              5400 	jr	NZ,00102$
   170A FD 21r1As17        5401 	ld	iy,#_lx
   170E FD 34 00           5402 	inc	0 (iy)
   1711 FD 21r1As17        5403 	ld	iy,#_lx
   1715 FD 34 00           5404 	inc	0 (iy)
   1718 FD 21r1As17        5405 	ld	iy,#_lx
   171C FD 34 00           5406 	inc	0 (iy)
   171F FD 21r1As17        5407 	ld	iy,#_lx
   1723 FD 34 00           5408 	inc	0 (iy)
   1726 C3rCEs16           5409 	jp	00104$
   1729                    5410 00102$:
                           5411 ;demo.c:701: else do_letter_tall(ltr);
   1729 C5                 5412 	push	bc
   172A DD 7E FF           5413 	ld	a,-1 (ix)
   172D F5                 5414 	push	af
   172E 33                 5415 	inc	sp
   172F CDrA5s14           5416 	call	_do_letter_tall
   1732 33                 5417 	inc	sp
   1733 C1                 5418 	pop	bc
   1734 C3rCEs16           5419 	jp	00104$
   1737                    5420 00107$:
   1737 DD F9              5421 	ld	sp,ix
   1739 DD E1              5422 	pop	ix
   173B C9                 5423 	ret
   173C                    5424 _drawsine_end::
                           5425 ;demo.c:705: void font() {
                           5426 ;	---------------------------------
                           5427 ; Function font
                           5428 ; ---------------------------------
   173C                    5429 _font_start::
   173C                    5430 _font:
                           5431 ;demo.c:706: slowend = 128;
   173C 21r1Es17           5432 	ld	hl,#_slowend + 0
   173F 36 80              5433 	ld	(hl), #0x80
   1741 21r1Fs17           5434 	ld	hl,#_slowend + 1
   1744 36 00              5435 	ld	(hl), #0x00
                           5436 ;demo.c:707: drawstrslow("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PARTY PEOPLE",74,60);
   1746 21 4A 3C           5437 	ld	hl,#0x3C4A
   1749 E5                 5438 	push	hl
   174A 21r54s17           5439 	ld	hl,#__str_8
   174D E5                 5440 	push	hl
   174E CDrC9s15           5441 	call	_drawstrslow
   1751 F1                 5442 	pop	af
   1752 F1                 5443 	pop	af
   1753 C9                 5444 	ret
   1754                    5445 _font_end::
   1754                    5446 __str_8:
   1754 44 49 47 49 54 41  5447 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   1790 4F 4E 5F 5F 20 20  5448 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PART"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F 5F 5F 4D 41
        4B 45 20 53 4F 4D
        45 20 4E 4F 49 53
        45 20 50 41 52 54
   17CC 59 20 50 45 4F 50  5449 	.ascii "Y PEOPLE"
        4C 45
   17D4 00                 5450 	.db 0x00
                           5451 ;demo.c:715: void twister() {
                           5452 ;	---------------------------------
                           5453 ; Function twister
                           5454 ; ---------------------------------
   17D5                    5455 _twister_start::
   17D5                    5456 _twister:
   17D5 DD E5              5457 	push	ix
   17D7 DD 21 00 00        5458 	ld	ix,#0
   17DB DD 39              5459 	add	ix,sp
   17DD F5                 5460 	push	af
                           5461 ;demo.c:719: if (twinited == 0) {
   17DE 3Ar22s17           5462 	ld	a,(#_twinited+0)
   17E1 FD 21r22s17        5463 	ld	iy,#_twinited
   17E5 FD B6 01           5464 	or	a,1 (iy)
   17E8 C2r62s18           5465 	jp	NZ,00102$
                           5466 ;demo.c:720: cmd.size_x = 256;
   17EB 21r9Cs16           5467 	ld	hl, #_cmd + 8
   17EE 36 00              5468 	ld	(hl),#0x00
   17F0 23                 5469 	inc	hl
   17F1 36 01              5470 	ld	(hl),#0x01
                           5471 ;demo.c:721: cmd.size_y = 1;
   17F3 21r9Es16           5472 	ld	hl, #_cmd + 10
   17F6 36 01              5473 	ld	(hl),#0x01
   17F8 23                 5474 	inc	hl
   17F9 36 00              5475 	ld	(hl),#0x00
                           5476 ;demo.c:722: cmd.data = 0;
                           5477 ;demo.c:723: cmd.argument = 0x00; // from 70xY to left
   17FB 3E 00              5478 	ld	a,#0x00
   17FD 32rA0s16           5479 	ld	(#_cmd + 12),a
   1800 32rA1s16           5480 	ld	(#_cmd + 13),a
                           5481 ;demo.c:724: cmd.command = 0xd0; // vram to vram, y only
   1803 01rA2s16           5482 	ld	bc,#_cmd + 14
   1806 3E D0              5483 	ld	a,#0xD0
   1808 02                 5484 	ld	(bc),a
                           5485 ;demo.c:725: cmd.source_x = 0;
   1809 21r94s16           5486 	ld	hl,#_cmd
   180C 36 00              5487 	ld	(hl),#0x00
   180E 23                 5488 	inc	hl
   180F 36 00              5489 	ld	(hl),#0x00
                           5490 ;demo.c:726: cmd.dest_x = 0;
   1811 21r98s16           5491 	ld	hl, #_cmd + 4
   1814 36 00              5492 	ld	(hl),#0x00
   1816 23                 5493 	inc	hl
   1817 36 00              5494 	ld	(hl),#0x00
                           5495 ;demo.c:728: for (y = 0; y < 212; y+=1) {
   1819 01 00 00           5496 	ld	bc,#0x0000
   181C                    5497 00103$:
   181C 79                 5498 	ld	a,c
   181D D6 D4              5499 	sub	a,#0xD4
   181F 78                 5500 	ld	a,b
   1820 DE 00              5501 	sbc	a,#0x00
   1822 F2r43s18           5502 	jp	P,00106$
                           5503 ;demo.c:729: waitVB();
   1825 76                 5504 		halt 
                           5505 ;demo.c:730: cmd.source_y = 0;
   1826 11r96s16           5506 	ld	de,#_cmd + 2
   1829 EB                 5507 	ex	de,hl
   182A 36 00              5508 	ld	(hl),#0x00
   182C 23                 5509 	inc	hl
   182D 36 00              5510 	ld	(hl),#0x00
                           5511 ;demo.c:731: cmd.dest_y = y;
   182F 11r9As16           5512 	ld	de,#_cmd + 6
   1832 EB                 5513 	ex	de,hl
   1833 71                 5514 	ld	(hl),c
   1834 23                 5515 	inc	hl
   1835 70                 5516 	ld	(hl),b
                           5517 ;demo.c:732: vdp_copier(&cmd);
   1836 C5                 5518 	push	bc
   1837 21r94s16           5519 	ld	hl,#_cmd
   183A E5                 5520 	push	hl
   183B CDr00s00           5521 	call	_vdp_copier
   183E F1                 5522 	pop	af
   183F C1                 5523 	pop	bc
                           5524 ;demo.c:728: for (y = 0; y < 212; y+=1) {
   1840 03                 5525 	inc	bc
   1841 18 D9              5526 	jr	00103$
   1843                    5527 00106$:
                           5528 ;demo.c:736: twinited = 1;
   1843 21r22s17           5529 	ld	hl,#_twinited + 0
   1846 36 01              5530 	ld	(hl), #0x01
   1848 21r23s17           5531 	ld	hl,#_twinited + 1
   184B 36 00              5532 	ld	(hl), #0x00
                           5533 ;demo.c:737: vdp_load_palette(twister_palette);
   184D 21r30s16           5534 	ld	hl,#_twister_palette
   1850 E5                 5535 	push	hl
   1851 CDr00s00           5536 	call	_vdp_load_palette
   1854 F1                 5537 	pop	af
                           5538 ;demo.c:738: drawstr2x("DSS",80,15);
   1855 21 50 0F           5539 	ld	hl,#0x0F50
   1858 E5                 5540 	push	hl
   1859 21r4Es19           5541 	ld	hl,#__str_9
   185C E5                 5542 	push	hl
   185D CDr67s16           5543 	call	_drawstr2x
   1860 F1                 5544 	pop	af
   1861 F1                 5545 	pop	af
   1862                    5546 00102$:
                           5547 ;demo.c:742: cmd.size_x = 70;
   1862 21r9Cs16           5548 	ld	hl, #_cmd + 8
   1865 36 46              5549 	ld	(hl),#0x46
   1867 23                 5550 	inc	hl
   1868 36 00              5551 	ld	(hl),#0x00
                           5552 ;demo.c:743: cmd.size_y = 2;
   186A 21r9Es16           5553 	ld	hl, #_cmd + 10
   186D 36 02              5554 	ld	(hl),#0x02
   186F 23                 5555 	inc	hl
   1870 36 00              5556 	ld	(hl),#0x00
                           5557 ;demo.c:744: cmd.data = 0;
   1872 3E 00              5558 	ld	a,#0x00
   1874 32rA0s16           5559 	ld	(#_cmd + 12),a
                           5560 ;demo.c:745: cmd.argument = 0x04; // from 70xY to left
   1877 3E 04              5561 	ld	a,#0x04
   1879 32rA1s16           5562 	ld	(#_cmd + 13),a
                           5563 ;demo.c:746: cmd.command = 0xe0; // vram to vram, y only
   187C 01rA2s16           5564 	ld	bc,#_cmd + 14
   187F 3E E0              5565 	ld	a,#0xE0
   1881 02                 5566 	ld	(bc),a
                           5567 ;demo.c:747: cmd.source_x = 70;
   1882 21r94s16           5568 	ld	hl,#_cmd
   1885 36 46              5569 	ld	(hl),#0x46
   1887 23                 5570 	inc	hl
   1888 36 00              5571 	ld	(hl),#0x00
                           5572 ;demo.c:748: cmd.dest_x = 70;
   188A 21r98s16           5573 	ld	hl, #_cmd + 4
   188D 36 46              5574 	ld	(hl),#0x46
   188F 23                 5575 	inc	hl
   1890 36 00              5576 	ld	(hl),#0x00
                           5577 ;demo.c:750: for (y = 0; y < 212; y+=2) {
   1892 DD 36 FE 00        5578 	ld	-2 (ix),#0x00
   1896 DD 36 FF 00        5579 	ld	-1 (ix),#0x00
   189A                    5580 00107$:
   189A DD 7E FE           5581 	ld	a,-2 (ix)
   189D D6 D4              5582 	sub	a,#0xD4
   189F DD 7E FF           5583 	ld	a,-1 (ix)
   18A2 DE 00              5584 	sbc	a,#0x00
   18A4 F2rFDs18           5585 	jp	P,00110$
                           5586 ;demo.c:751: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   18A7 11r96s16           5587 	ld	de,#_cmd + 2
   18AA DD 4E FE           5588 	ld	c,-2 (ix)
   18AD DD 46 FF           5589 	ld	b,-1 (ix)
   18B0 CB 28              5590 	sra	b
   18B2 CB 19              5591 	rr	c
   18B4 3Ar20s17           5592 	ld	a,(#_ff+0)
   18B7 81                 5593 	add	a,c
   18B8 4F                 5594 	ld	c,a
   18B9 3Ar21s17           5595 	ld	a,(#_ff+1)
   18BC 88                 5596 	adc	a,b
   18BD 06 00              5597 	ld	b,#0x00
   18BF 21r00s00           5598 	ld	hl,#_sintab
   18C2 09                 5599 	add	hl,bc
   18C3 7E                 5600 	ld	a,(hl)
   18C4 4F                 5601 	ld	c,a
   18C5 CB 29              5602 	sra	c
   18C7 79                 5603 	ld	a,c
   18C8 17                 5604 	rla	
   18C9 9F                 5605 	sbc	a,a
   18CA 47                 5606 	ld	b,a
   18CB 21 40 02           5607 	ld	hl,#0x0240
   18CE 09                 5608 	add	hl,bc
   18CF 4D                 5609 	ld	c,l
   18D0 44                 5610 	ld	b,h
   18D1 6B                 5611 	ld	l,e
   18D2 62                 5612 	ld	h,d
   18D3 71                 5613 	ld	(hl),c
   18D4 23                 5614 	inc	hl
   18D5 70                 5615 	ld	(hl),b
                           5616 ;demo.c:752: cmd.dest_y = y;
   18D6 21r9As16           5617 	ld	hl, #_cmd + 6
   18D9 DD 7E FE           5618 	ld	a,-2 (ix)
   18DC 77                 5619 	ld	(hl),a
   18DD 23                 5620 	inc	hl
   18DE DD 7E FF           5621 	ld	a,-1 (ix)
   18E1 77                 5622 	ld	(hl),a
                           5623 ;demo.c:753: vdp_copier(&cmd);
   18E2 21r94s16           5624 	ld	hl,#_cmd
   18E5 E5                 5625 	push	hl
   18E6 CDr00s00           5626 	call	_vdp_copier
   18E9 F1                 5627 	pop	af
                           5628 ;demo.c:750: for (y = 0; y < 212; y+=2) {
   18EA DD 7E FE           5629 	ld	a,-2 (ix)
   18ED C6 02              5630 	add	a,#0x02
   18EF DD 77 FE           5631 	ld	-2 (ix),a
   18F2 DD 7E FF           5632 	ld	a,-1 (ix)
   18F5 CE 00              5633 	adc	a,#0x00
   18F7 DD 77 FF           5634 	ld	-1 (ix),a
   18FA C3r9As18           5635 	jp	00107$
   18FD                    5636 00110$:
                           5637 ;demo.c:757: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   18FD 21r20s17           5638 	ld	hl,#_ff + 0
   1900 4E                 5639 	ld	c,(hl)
   1901 21r21s17           5640 	ld	hl,#_ff + 1
   1904 46                 5641 	ld	b,(hl)
   1905 CB 28              5642 	sra	b
   1907 CB 19              5643 	rr	c
   1909 CB 28              5644 	sra	b
   190B CB 19              5645 	rr	c
   190D 21r20s17           5646 	ld	hl,#_ff + 0
   1910 5E                 5647 	ld	e,(hl)
   1911 21r21s17           5648 	ld	hl,#_ff + 1
   1914 56                 5649 	ld	d,(hl)
   1915 CB 2A              5650 	sra	d
   1917 CB 1B              5651 	rr	e
   1919 CB 2A              5652 	sra	d
   191B CB 1B              5653 	rr	e
   191D CB 2A              5654 	sra	d
   191F CB 1B              5655 	rr	e
   1921 43                 5656 	ld	b,e
   1922 79                 5657 	ld	a,c
   1923 F5                 5658 	push	af
   1924 33                 5659 	inc	sp
   1925 C5                 5660 	push	bc
   1926 33                 5661 	inc	sp
   1927 41                 5662 	ld	b,c
   1928 0E 04              5663 	ld	c,#0x04
   192A C5                 5664 	push	bc
   192B CDr00s00           5665 	call	_msx2_palette
   192E F1                 5666 	pop	af
   192F F1                 5667 	pop	af
                           5668 ;demo.c:759: font();
   1930 CDr3Cs17           5669 	call	_font
                           5670 ;demo.c:761: ff+=4;
   1933 21r20s17           5671 	ld	hl,#_ff
   1936 7E                 5672 	ld	a,(hl)
   1937 C6 04              5673 	add	a,#0x04
   1939 23                 5674 	inc	hl
   193A 2B                 5675 	dec	hl
   193B C5                 5676 	push	bc
   193C 4F                 5677 	ld	c, a
   193D 23                 5678 	inc	hl
   193E 7E                 5679 	ld	a, (hl)
   193F 47                 5680 	ld	b, a
   1940 79                 5681 	ld	a, c
   1941 2B                 5682 	dec	hl
   1942 77                 5683 	ld	(hl), a
   1943 78                 5684 	ld	a, b
   1944 C1                 5685 	pop	bc
   1945 CE 00              5686 	adc	a,#0x00
   1947 23                 5687 	inc	hl
   1948 77                 5688 	ld	(hl),a
   1949 DD F9              5689 	ld	sp,ix
   194B DD E1              5690 	pop	ix
   194D C9                 5691 	ret
   194E                    5692 _twister_end::
   194E                    5693 __str_9:
   194E 44 53 53           5694 	.ascii "DSS"
   1951 00                 5695 	.db 0x00
                           5696 ;demo.c:772: void bulbs() {
                           5697 ;	---------------------------------
                           5698 ; Function bulbs
                           5699 ; ---------------------------------
   1952                    5700 _bulbs_start::
   1952                    5701 _bulbs:
   1952 DD E5              5702 	push	ix
   1954 DD 21 00 00        5703 	ld	ix,#0
   1958 DD 39              5704 	add	ix,sp
   195A 21 FA FF           5705 	ld	hl,#-6
   195D 39                 5706 	add	hl,sp
   195E F9                 5707 	ld	sp,hl
                           5708 ;demo.c:776: ender+=enderdir;
   195F 21r2Cs17           5709 	ld	hl,#_enderdir
   1962 D5                 5710 	push	de
   1963 FD 21r2As17        5711 	ld	iy,#_ender
   1967 FD E5              5712 	push	iy
   1969 D1                 5713 	pop	de
   196A 1A                 5714 	ld	a,(de)
   196B 86                 5715 	add	a,(hl)
   196C 13                 5716 	inc	de
   196D 1B                 5717 	dec	de
   196E C5                 5718 	push	bc
   196F 4F                 5719 	ld	c, a
   1970 13                 5720 	inc	de
   1971 1A                 5721 	ld	a, (de)
   1972 47                 5722 	ld	b, a
   1973 79                 5723 	ld	a, c
   1974 1B                 5724 	dec	de
   1975 12                 5725 	ld	(de), a
   1976 78                 5726 	ld	a, b
   1977 C1                 5727 	pop	bc
   1978 23                 5728 	inc	hl
   1979 8E                 5729 	adc	a,(hl)
   197A 13                 5730 	inc	de
   197B 12                 5731 	ld	(de),a
   197C D1                 5732 	pop	de
                           5733 ;demo.c:777: if (ender < 2) { enderdir = -enderdir; }
   197D 3Ar2As17           5734 	ld	a,(#_ender+0)
   1980 D6 02              5735 	sub	a,#0x02
   1982 3Ar2Bs17           5736 	ld	a,(#_ender+1)
   1985 DE 00              5737 	sbc	a,#0x00
   1987 F2rABs19           5738 	jp	P,00102$
   198A AF                 5739 	xor	a,a
   198B FD 21r2Cs17        5740 	ld	iy,#_enderdir
   198F 3E 00              5741 	ld	a,#0x00
   1991 FD 9E 00           5742 	sbc	a,0 (iy)
   1994 FD 21r2Cs17        5743 	ld	iy,#_enderdir
   1998 FD 77 00           5744 	ld	0 (iy),a
   199B FD 21r2Cs17        5745 	ld	iy,#_enderdir
   199F 3E 00              5746 	ld	a,#0x00
   19A1 FD 9E 01           5747 	sbc	a,1 (iy)
   19A4 FD 21r2Cs17        5748 	ld	iy,#_enderdir
   19A8 FD 77 01           5749 	ld	1 (iy),a
   19AB                    5750 00102$:
                           5751 ;demo.c:778: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   19AB 3Ar2As17           5752 	ld	a,(#_ender+0)
   19AE D6 D4              5753 	sub	a,#0xD4
   19B0 3Ar2Bs17           5754 	ld	a,(#_ender+1)
   19B3 DE 00              5755 	sbc	a,#0x00
   19B5 FArDBs19           5756 	jp	M,00104$
   19B8 AF                 5757 	xor	a,a
   19B9 FD 21r2Cs17        5758 	ld	iy,#_enderdir
   19BD 3E 00              5759 	ld	a,#0x00
   19BF FD 9E 00           5760 	sbc	a,0 (iy)
   19C2 21r2Cs17           5761 	ld	hl,#_enderdir + 0
   19C5 77                 5762 	ld	(hl), a
   19C6 FD 21r2Cs17        5763 	ld	iy,#_enderdir
   19CA 3E 00              5764 	ld	a,#0x00
   19CC FD 9E 01           5765 	sbc	a,1 (iy)
   19CF 21r2Ds17           5766 	ld	hl,#_enderdir + 1
   19D2 77                 5767 	ld	(hl), a
   19D3 2Ar2Es17           5768 	ld	hl,(_sy)
   19D6 2B                 5769 	dec	hl
   19D7 2B                 5770 	dec	hl
   19D8 22r2Es17           5771 	ld	(_sy),hl
   19DB                    5772 00104$:
                           5773 ;demo.c:780: enderend = ender + 92;
   19DB 3Ar2As17           5774 	ld	a,(#_ender+0)
   19DE C6 5C              5775 	add	a,#0x5C
   19E0 DD 77 FE           5776 	ld	-2 (ix),a
   19E3 3Ar2Bs17           5777 	ld	a,(#_ender+1)
   19E6 CE 00              5778 	adc	a,#0x00
   19E8 DD 77 FF           5779 	ld	-1 (ix),a
                           5780 ;demo.c:782: if (enderend > 212) enderend = 212;
   19EB 3E D4              5781 	ld	a,#0xD4
   19ED DD 96 FE           5782 	sub	a,-2 (ix)
   19F0 3E 00              5783 	ld	a,#0x00
   19F2 DD 9E FF           5784 	sbc	a,-1 (ix)
   19F5 F2r00s1A           5785 	jp	P,00106$
   19F8 DD 36 FE D4        5786 	ld	-2 (ix),#0xD4
   19FC DD 36 FF 00        5787 	ld	-1 (ix),#0x00
   1A00                    5788 00106$:
                           5789 ;demo.c:783: if (enderend > 212-16) sy = 16-(212-enderend);
   1A00 3E C4              5790 	ld	a,#0xC4
   1A02 DD 96 FE           5791 	sub	a,-2 (ix)
   1A05 3E 00              5792 	ld	a,#0x00
   1A07 DD 9E FF           5793 	sbc	a,-1 (ix)
   1A0A F2r25s1A           5794 	jp	P,00108$
   1A0D 3E D4              5795 	ld	a,#0xD4
   1A0F DD 96 FE           5796 	sub	a,-2 (ix)
   1A12 5F                 5797 	ld	e,a
   1A13 3E 00              5798 	ld	a,#0x00
   1A15 DD 9E FF           5799 	sbc	a,-1 (ix)
   1A18 57                 5800 	ld	d,a
   1A19 21r2Es17           5801 	ld	hl,#_sy
   1A1C 3E 10              5802 	ld	a,#0x10
   1A1E 93                 5803 	sub	a,e
   1A1F 77                 5804 	ld	(hl),a
   1A20 3E 00              5805 	ld	a,#0x00
   1A22 9A                 5806 	sbc	a,d
   1A23 23                 5807 	inc	hl
   1A24 77                 5808 	ld	(hl),a
   1A25                    5809 00108$:
                           5810 ;demo.c:785: if(bulbflipper == 1) {
   1A25 3Ar24s17           5811 	ld	a,(#_bulbflipper+0)
   1A28 D6 01              5812 	sub	a,#0x01
   1A2A 20 06              5813 	jr	NZ,00133$
   1A2C 3Ar25s17           5814 	ld	a,(#_bulbflipper+1)
   1A2F B7                 5815 	or	a,a
   1A30 28 03              5816 	jr	Z,00134$
   1A32                    5817 00133$:
   1A32 C3rEBs1A           5818 	jp	00110$
   1A35                    5819 00134$:
                           5820 ;demo.c:786: cmd.size_x = 72;
   1A35 11r9Cs16           5821 	ld	de,#_cmd + 8
   1A38 EB                 5822 	ex	de,hl
   1A39 36 48              5823 	ld	(hl),#0x48
   1A3B 23                 5824 	inc	hl
   1A3C 36 00              5825 	ld	(hl),#0x00
                           5826 ;demo.c:787: cmd.size_y = sy;
   1A3E 11r9Es16           5827 	ld	de,#_cmd + 10
   1A41 ED 4Br2Es17        5828 	ld	bc,(_sy)
   1A45 6B                 5829 	ld	l,e
   1A46 62                 5830 	ld	h,d
   1A47 71                 5831 	ld	(hl),c
   1A48 23                 5832 	inc	hl
   1A49 70                 5833 	ld	(hl),b
                           5834 ;demo.c:788: cmd.data = 0;
   1A4A 3E 00              5835 	ld	a,#0x00
   1A4C 32rA0s16           5836 	ld	(#_cmd + 12),a
                           5837 ;demo.c:789: cmd.argument = 0x04; // from 72xY to left
   1A4F 3E 04              5838 	ld	a,#0x04
   1A51 32rA1s16           5839 	ld	(#_cmd + 13),a
                           5840 ;demo.c:790: cmd.command = 0xe0; // vram to vram, y only
   1A54 01rA2s16           5841 	ld	bc,#_cmd + 14
   1A57 3E E0              5842 	ld	a,#0xE0
   1A59 02                 5843 	ld	(bc),a
                           5844 ;demo.c:791: cmd.source_x = 72;
   1A5A 21r94s16           5845 	ld	hl,#_cmd
   1A5D 36 48              5846 	ld	(hl),#0x48
   1A5F 23                 5847 	inc	hl
   1A60 36 00              5848 	ld	(hl),#0x00
                           5849 ;demo.c:792: cmd.dest_x = 72;
   1A62 21r98s16           5850 	ld	hl, #_cmd + 4
   1A65 36 48              5851 	ld	(hl),#0x48
   1A67 23                 5852 	inc	hl
   1A68 36 00              5853 	ld	(hl),#0x00
                           5854 ;demo.c:794: for (y = ender; y < enderend; y+=16) {
   1A6A ED 4Br2As17        5855 	ld	bc,(_ender)
   1A6E DD 71 FC           5856 	ld	-4 (ix),c
   1A71 DD 70 FD           5857 	ld	-3 (ix),b
   1A74                    5858 00112$:
   1A74 DD 7E FC           5859 	ld	a,-4 (ix)
   1A77 DD 96 FE           5860 	sub	a,-2 (ix)
   1A7A DD 7E FD           5861 	ld	a,-3 (ix)
   1A7D DD 9E FF           5862 	sbc	a,-1 (ix)
   1A80 F2rD2s1A           5863 	jp	P,00115$
                           5864 ;demo.c:795: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   1A83 01r96s16           5865 	ld	bc,#_cmd + 2
   1A86 3Ar26s17           5866 	ld	a,(#_ff1+0)
   1A89 DD 86 FC           5867 	add	a,-4 (ix)
   1A8C 5F                 5868 	ld	e,a
   1A8D 3Ar27s17           5869 	ld	a,(#_ff1+1)
   1A90 DD 8E FD           5870 	adc	a,-3 (ix)
   1A93 16 00              5871 	ld	d,#0x00
   1A95 21r00s00           5872 	ld	hl,#_sintab
   1A98 19                 5873 	add	hl,de
   1A99 5E                 5874 	ld	e,(hl)
   1A9A CB 2B              5875 	sra	e
   1A9C 7B                 5876 	ld	a,e
   1A9D 17                 5877 	rla	
   1A9E 9F                 5878 	sbc	a,a
   1A9F 57                 5879 	ld	d,a
   1AA0 21 40 01           5880 	ld	hl,#0x0140
   1AA3 19                 5881 	add	hl,de
   1AA4 EB                 5882 	ex	de,hl
   1AA5 69                 5883 	ld	l,c
   1AA6 60                 5884 	ld	h,b
   1AA7 73                 5885 	ld	(hl),e
   1AA8 23                 5886 	inc	hl
   1AA9 72                 5887 	ld	(hl),d
                           5888 ;demo.c:796: cmd.dest_y = y;
   1AAA 11r9As16           5889 	ld	de,#_cmd + 6
   1AAD EB                 5890 	ex	de,hl
   1AAE DD 7E FC           5891 	ld	a,-4 (ix)
   1AB1 77                 5892 	ld	(hl),a
   1AB2 23                 5893 	inc	hl
   1AB3 DD 7E FD           5894 	ld	a,-3 (ix)
   1AB6 77                 5895 	ld	(hl),a
                           5896 ;demo.c:797: vdp_copier(&cmd);
   1AB7 21r94s16           5897 	ld	hl,#_cmd
   1ABA E5                 5898 	push	hl
   1ABB CDr00s00           5899 	call	_vdp_copier
   1ABE F1                 5900 	pop	af
                           5901 ;demo.c:794: for (y = ender; y < enderend; y+=16) {
   1ABF DD 7E FC           5902 	ld	a,-4 (ix)
   1AC2 C6 10              5903 	add	a,#0x10
   1AC4 DD 77 FC           5904 	ld	-4 (ix),a
   1AC7 DD 7E FD           5905 	ld	a,-3 (ix)
   1ACA CE 00              5906 	adc	a,#0x00
   1ACC DD 77 FD           5907 	ld	-3 (ix),a
   1ACF C3r74s1A           5908 	jp	00112$
   1AD2                    5909 00115$:
                           5910 ;demo.c:799: ff1+=4;
   1AD2 21r26s17           5911 	ld	hl,#_ff1
   1AD5 7E                 5912 	ld	a,(hl)
   1AD6 C6 04              5913 	add	a,#0x04
   1AD8 23                 5914 	inc	hl
   1AD9 2B                 5915 	dec	hl
   1ADA C5                 5916 	push	bc
   1ADB 4F                 5917 	ld	c, a
   1ADC 23                 5918 	inc	hl
   1ADD 7E                 5919 	ld	a, (hl)
   1ADE 47                 5920 	ld	b, a
   1ADF 79                 5921 	ld	a, c
   1AE0 2B                 5922 	dec	hl
   1AE1 77                 5923 	ld	(hl), a
   1AE2 78                 5924 	ld	a, b
   1AE3 C1                 5925 	pop	bc
   1AE4 CE 00              5926 	adc	a,#0x00
   1AE6 23                 5927 	inc	hl
   1AE7 77                 5928 	ld	(hl),a
   1AE8 C3r90s1B           5929 	jp	00111$
   1AEB                    5930 00110$:
                           5931 ;demo.c:803: cmd.size_x = 72;
   1AEB 11r9Cs16           5932 	ld	de,#_cmd + 8
   1AEE EB                 5933 	ex	de,hl
   1AEF 36 48              5934 	ld	(hl),#0x48
   1AF1 23                 5935 	inc	hl
   1AF2 36 00              5936 	ld	(hl),#0x00
                           5937 ;demo.c:804: cmd.size_y = sy;
   1AF4 01r9Es16           5938 	ld	bc,#_cmd + 10
   1AF7 ED 5Br2Es17        5939 	ld	de,(_sy)
   1AFB 69                 5940 	ld	l,c
   1AFC 60                 5941 	ld	h,b
   1AFD 73                 5942 	ld	(hl),e
   1AFE 23                 5943 	inc	hl
   1AFF 72                 5944 	ld	(hl),d
                           5945 ;demo.c:805: cmd.data = 0;
   1B00 11rA0s16           5946 	ld	de,#_cmd + 12
   1B03 3E 00              5947 	ld	a,#0x00
   1B05 12                 5948 	ld	(de),a
                           5949 ;demo.c:806: cmd.argument = 0x00; // from 182xY to right
   1B06 11rA1s16           5950 	ld	de,#_cmd + 13
   1B09 3E 00              5951 	ld	a,#0x00
   1B0B 12                 5952 	ld	(de),a
                           5953 ;demo.c:807: cmd.command = 0xe0; // vram to vram, y only
   1B0C 11rA2s16           5954 	ld	de,#_cmd + 14
   1B0F 3E E0              5955 	ld	a,#0xE0
   1B11 12                 5956 	ld	(de),a
                           5957 ;demo.c:808: cmd.source_x = 182;
   1B12 21r94s16           5958 	ld	hl,#_cmd
   1B15 36 B6              5959 	ld	(hl),#0xB6
   1B17 23                 5960 	inc	hl
   1B18 36 00              5961 	ld	(hl),#0x00
                           5962 ;demo.c:809: cmd.dest_x = 182;
   1B1A 11r98s16           5963 	ld	de,#_cmd + 4
   1B1D 6B                 5964 	ld	l,e
   1B1E 62                 5965 	ld	h,d
   1B1F 36 B6              5966 	ld	(hl),#0xB6
   1B21 23                 5967 	inc	hl
   1B22 36 00              5968 	ld	(hl),#0x00
                           5969 ;demo.c:811: for (y = ender; y < enderend; y+=16) {
   1B24 ED 4Br2As17        5970 	ld	bc,(_ender)
   1B28                    5971 00116$:
   1B28 79                 5972 	ld	a,c
   1B29 DD 96 FE           5973 	sub	a,-2 (ix)
   1B2C 78                 5974 	ld	a,b
   1B2D DD 9E FF           5975 	sbc	a,-1 (ix)
   1B30 F2r7As1B           5976 	jp	P,00119$
                           5977 ;demo.c:812: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1B33 21r96s16           5978 	ld	hl,#_cmd + 2
   1B36 DD 75 FA           5979 	ld	-6 (ix),l
   1B39 DD 74 FB           5980 	ld	-5 (ix),h
   1B3C 3Ar28s17           5981 	ld	a,(#_ff2+0)
   1B3F 81                 5982 	add	a,c
   1B40 5F                 5983 	ld	e,a
   1B41 3Ar29s17           5984 	ld	a,(#_ff2+1)
   1B44 88                 5985 	adc	a,b
   1B45 16 00              5986 	ld	d,#0x00
   1B47 21r00s00           5987 	ld	hl,#_sintab
   1B4A 19                 5988 	add	hl,de
   1B4B 5E                 5989 	ld	e,(hl)
   1B4C CB 2B              5990 	sra	e
   1B4E 7B                 5991 	ld	a,e
   1B4F 17                 5992 	rla	
   1B50 9F                 5993 	sbc	a,a
   1B51 57                 5994 	ld	d,a
   1B52 21 40 01           5995 	ld	hl,#0x0140
   1B55 19                 5996 	add	hl,de
   1B56 EB                 5997 	ex	de,hl
   1B57 DD 6E FA           5998 	ld	l,-6 (ix)
   1B5A DD 66 FB           5999 	ld	h,-5 (ix)
   1B5D 73                 6000 	ld	(hl),e
   1B5E 23                 6001 	inc	hl
   1B5F 72                 6002 	ld	(hl),d
                           6003 ;demo.c:813: cmd.dest_y = y;
   1B60 11r9As16           6004 	ld	de,#_cmd + 6
   1B63 EB                 6005 	ex	de,hl
   1B64 71                 6006 	ld	(hl),c
   1B65 23                 6007 	inc	hl
   1B66 70                 6008 	ld	(hl),b
                           6009 ;demo.c:814: vdp_copier(&cmd);
   1B67 C5                 6010 	push	bc
   1B68 21r94s16           6011 	ld	hl,#_cmd
   1B6B E5                 6012 	push	hl
   1B6C CDr00s00           6013 	call	_vdp_copier
   1B6F F1                 6014 	pop	af
   1B70 C1                 6015 	pop	bc
                           6016 ;demo.c:811: for (y = ender; y < enderend; y+=16) {
   1B71 21 10 00           6017 	ld	hl,#0x0010
   1B74 09                 6018 	add	hl,bc
   1B75 4D                 6019 	ld	c,l
   1B76 44                 6020 	ld	b,h
   1B77 C3r28s1B           6021 	jp	00116$
   1B7A                    6022 00119$:
                           6023 ;demo.c:816: ff2+=4;
   1B7A 21r28s17           6024 	ld	hl,#_ff2
   1B7D 7E                 6025 	ld	a,(hl)
   1B7E C6 04              6026 	add	a,#0x04
   1B80 23                 6027 	inc	hl
   1B81 2B                 6028 	dec	hl
   1B82 C5                 6029 	push	bc
   1B83 4F                 6030 	ld	c, a
   1B84 23                 6031 	inc	hl
   1B85 7E                 6032 	ld	a, (hl)
   1B86 47                 6033 	ld	b, a
   1B87 79                 6034 	ld	a, c
   1B88 2B                 6035 	dec	hl
   1B89 77                 6036 	ld	(hl), a
   1B8A 78                 6037 	ld	a, b
   1B8B C1                 6038 	pop	bc
   1B8C CE 00              6039 	adc	a,#0x00
   1B8E 23                 6040 	inc	hl
   1B8F 77                 6041 	ld	(hl),a
   1B90                    6042 00111$:
                           6043 ;demo.c:819: bulbflipper = -bulbflipper;
   1B90 AF                 6044 	xor	a,a
   1B91 FD 21r24s17        6045 	ld	iy,#_bulbflipper
   1B95 3E 00              6046 	ld	a,#0x00
   1B97 FD 9E 00           6047 	sbc	a,0 (iy)
   1B9A 21r24s17           6048 	ld	hl,#_bulbflipper + 0
   1B9D 77                 6049 	ld	(hl), a
   1B9E FD 21r24s17        6050 	ld	iy,#_bulbflipper
   1BA2 3E 00              6051 	ld	a,#0x00
   1BA4 FD 9E 01           6052 	sbc	a,1 (iy)
   1BA7 21r25s17           6053 	ld	hl,#_bulbflipper + 1
   1BAA 77                 6054 	ld	(hl), a
   1BAB DD F9              6055 	ld	sp,ix
   1BAD DD E1              6056 	pop	ix
   1BAF C9                 6057 	ret
   1BB0                    6058 _bulbs_end::
                           6059 ;demo.c:833: void animplay() {
                           6060 ;	---------------------------------
                           6061 ; Function animplay
                           6062 ; ---------------------------------
   1BB0                    6063 _animplay_start::
   1BB0                    6064 _animplay:
   1BB0 DD E5              6065 	push	ix
   1BB2 DD 21 00 00        6066 	ld	ix,#0
   1BB6 DD 39              6067 	add	ix,sp
   1BB8 F5                 6068 	push	af
   1BB9 3B                 6069 	dec	sp
                           6070 ;demo.c:838: if (anim_init == 0) {
   1BBA 3Ar38s17           6071 	ld	a,(#_anim_init+0)
   1BBD 21r39s17           6072 	ld	hl,#_anim_init + 1
   1BC0 B6                 6073 	or	a,(hl)
   1BC1 C2r5Cs1D           6074 	jp	NZ,00120$
                           6075 ;demo.c:839: drawsine("L O A D I N G",8,180);
   1BC4 21 08 B4           6076 	ld	hl,#0xB408
   1BC7 E5                 6077 	push	hl
   1BC8 21r44s1E           6078 	ld	hl,#__str_10
   1BCB E5                 6079 	push	hl
   1BCC CDrB8s16           6080 	call	_drawsine
   1BCF F1                 6081 	pop	af
   1BD0 F1                 6082 	pop	af
                           6083 ;demo.c:842: uninstall_isr();
   1BD1 CDr00s00           6084 	call	_uninstall_isr
                           6085 ;demo.c:843: PLY_Stop();
   1BD4 CDr00s00           6086 	call	_PLY_Stop
                           6087 ;demo.c:844: PLY_SendRegisters();
   1BD7 CDr00s00           6088 	call	_PLY_SendRegisters
                           6089 ;demo.c:846: pause();
   1BDA CDr82s0A           6090 	call	_pause
                           6091 ;demo.c:847: pause();
   1BDD CDr82s0A           6092 	call	_pause
                           6093 ;demo.c:849: scratch_clear();
   1BE0 CDr90s09           6094 	call	_scratch_clear
                           6095 ;demo.c:850: vdp_load_palette(scratch);
   1BE3 21r50s15           6096 	ld	hl,#_scratch
   1BE6 E5                 6097 	push	hl
   1BE7 CDr00s00           6098 	call	_vdp_load_palette
   1BEA F1                 6099 	pop	af
                           6100 ;demo.c:852: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1BEB 21 00 00           6101 	ld	hl,#0x0000
   1BEE E5                 6102 	push	hl
   1BEF 2E 01              6103 	ld	l, #0x01
   1BF1 E5                 6104 	push	hl
   1BF2 2E 00              6105 	ld	l, #0x00
   1BF4 E5                 6106 	push	hl
   1BF5 21 09 37           6107 	ld	hl,#0x3709
   1BF8 E5                 6108 	push	hl
   1BF9 21r52s1E           6109 	ld	hl,#__str_11
   1BFC E5                 6110 	push	hl
   1BFD CDr99s0B           6111 	call	_pck_load
   1C00 FD 21 0A 00        6112 	ld	iy,#0x000A
   1C04 FD 39              6113 	add	iy,sp
   1C06 FD F9              6114 	ld	sp,iy
                           6115 ;demo.c:856: cmd.size_x = 256;
   1C08 21r9Cs16           6116 	ld	hl, #_cmd + 8
   1C0B 36 00              6117 	ld	(hl),#0x00
   1C0D 23                 6118 	inc	hl
   1C0E 36 01              6119 	ld	(hl),#0x01
                           6120 ;demo.c:857: cmd.size_y = 212;
   1C10 21r9Es16           6121 	ld	hl, #_cmd + 10
   1C13 36 D4              6122 	ld	(hl),#0xD4
   1C15 23                 6123 	inc	hl
   1C16 36 00              6124 	ld	(hl),#0x00
                           6125 ;demo.c:858: cmd.data = 0;
                           6126 ;demo.c:859: cmd.argument = 0x00;
   1C18 3E 00              6127 	ld	a,#0x00
   1C1A 32rA0s16           6128 	ld	(#_cmd + 12),a
   1C1D 32rA1s16           6129 	ld	(#_cmd + 13),a
                           6130 ;demo.c:860: cmd.command = 0xd0; 
   1C20 01rA2s16           6131 	ld	bc,#_cmd + 14
   1C23 3E D0              6132 	ld	a,#0xD0
   1C25 02                 6133 	ld	(bc),a
                           6134 ;demo.c:861: cmd.source_x = 0;
   1C26 21r94s16           6135 	ld	hl,#_cmd
   1C29 36 00              6136 	ld	(hl),#0x00
   1C2B 23                 6137 	inc	hl
   1C2C 36 00              6138 	ld	(hl),#0x00
                           6139 ;demo.c:862: cmd.source_y = 0;
   1C2E 21r96s16           6140 	ld	hl, #_cmd + 2
   1C31 36 00              6141 	ld	(hl),#0x00
   1C33 23                 6142 	inc	hl
   1C34 36 00              6143 	ld	(hl),#0x00
                           6144 ;demo.c:863: cmd.dest_x = 0;
   1C36 21r98s16           6145 	ld	hl, #_cmd + 4
   1C39 36 00              6146 	ld	(hl),#0x00
   1C3B 23                 6147 	inc	hl
   1C3C 36 00              6148 	ld	(hl),#0x00
                           6149 ;demo.c:864: cmd.dest_y = 256;
   1C3E 21r9As16           6150 	ld	hl, #_cmd + 6
   1C41 36 00              6151 	ld	(hl),#0x00
   1C43 23                 6152 	inc	hl
   1C44 36 01              6153 	ld	(hl),#0x01
                           6154 ;demo.c:865: vdp_copier(&cmd);
   1C46 21r94s16           6155 	ld	hl,#_cmd
   1C49 E5                 6156 	push	hl
   1C4A CDr00s00           6157 	call	_vdp_copier
   1C4D F1                 6158 	pop	af
                           6159 ;demo.c:867: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1C4E 21 00 00           6160 	ld	hl,#0x0000
   1C51 E5                 6161 	push	hl
   1C52 2E 01              6162 	ld	l, #0x01
   1C54 E5                 6163 	push	hl
   1C55 2E 00              6164 	ld	l, #0x00
   1C57 E5                 6165 	push	hl
   1C58 21 76 3E           6166 	ld	hl,#0x3E76
   1C5B E5                 6167 	push	hl
   1C5C 21r5Es1E           6168 	ld	hl,#__str_12
   1C5F E5                 6169 	push	hl
   1C60 CDr99s0B           6170 	call	_pck_load
   1C63 FD 21 0A 00        6171 	ld	iy,#0x000A
   1C67 FD 39              6172 	add	iy,sp
   1C69 FD F9              6173 	ld	sp,iy
                           6174 ;demo.c:869: cmd.size_x = 256;
   1C6B 21r9Cs16           6175 	ld	hl, #_cmd + 8
   1C6E 36 00              6176 	ld	(hl),#0x00
   1C70 23                 6177 	inc	hl
   1C71 36 01              6178 	ld	(hl),#0x01
                           6179 ;demo.c:870: cmd.size_y = 212;
   1C73 21r9Es16           6180 	ld	hl, #_cmd + 10
   1C76 36 D4              6181 	ld	(hl),#0xD4
   1C78 23                 6182 	inc	hl
   1C79 36 00              6183 	ld	(hl),#0x00
                           6184 ;demo.c:871: cmd.data = 0;
                           6185 ;demo.c:872: cmd.argument = 0x00;
   1C7B 3E 00              6186 	ld	a,#0x00
   1C7D 32rA0s16           6187 	ld	(#_cmd + 12),a
   1C80 32rA1s16           6188 	ld	(#_cmd + 13),a
                           6189 ;demo.c:873: cmd.command = 0xd0; 
   1C83 01rA2s16           6190 	ld	bc,#_cmd + 14
   1C86 3E D0              6191 	ld	a,#0xD0
   1C88 02                 6192 	ld	(bc),a
                           6193 ;demo.c:874: cmd.source_x = 0;
   1C89 21r94s16           6194 	ld	hl,#_cmd
   1C8C 36 00              6195 	ld	(hl),#0x00
   1C8E 23                 6196 	inc	hl
   1C8F 36 00              6197 	ld	(hl),#0x00
                           6198 ;demo.c:875: cmd.source_y = 0;
   1C91 21r96s16           6199 	ld	hl, #_cmd + 2
   1C94 36 00              6200 	ld	(hl),#0x00
   1C96 23                 6201 	inc	hl
   1C97 36 00              6202 	ld	(hl),#0x00
                           6203 ;demo.c:876: cmd.dest_x = 0;
   1C99 21r98s16           6204 	ld	hl, #_cmd + 4
   1C9C 36 00              6205 	ld	(hl),#0x00
   1C9E 23                 6206 	inc	hl
   1C9F 36 00              6207 	ld	(hl),#0x00
                           6208 ;demo.c:877: cmd.dest_y = 512;
   1CA1 21r9As16           6209 	ld	hl, #_cmd + 6
   1CA4 36 00              6210 	ld	(hl),#0x00
   1CA6 23                 6211 	inc	hl
   1CA7 36 02              6212 	ld	(hl),#0x02
                           6213 ;demo.c:878: vdp_copier(&cmd);
   1CA9 21r94s16           6214 	ld	hl,#_cmd
   1CAC E5                 6215 	push	hl
   1CAD CDr00s00           6216 	call	_vdp_copier
   1CB0 F1                 6217 	pop	af
                           6218 ;demo.c:881: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   1CB1 21 00 00           6219 	ld	hl,#0x0000
   1CB4 E5                 6220 	push	hl
   1CB5 2E 01              6221 	ld	l, #0x01
   1CB7 E5                 6222 	push	hl
   1CB8 2E 00              6223 	ld	l, #0x00
   1CBA E5                 6224 	push	hl
   1CBB 21 9E 3A           6225 	ld	hl,#0x3A9E
   1CBE E5                 6226 	push	hl
   1CBF 21r6As1E           6227 	ld	hl,#__str_13
   1CC2 E5                 6228 	push	hl
   1CC3 CDr99s0B           6229 	call	_pck_load
   1CC6 FD 21 0A 00        6230 	ld	iy,#0x000A
   1CCA FD 39              6231 	add	iy,sp
   1CCC FD F9              6232 	ld	sp,iy
                           6233 ;demo.c:883: cmd.size_x = 256;
   1CCE 21r9Cs16           6234 	ld	hl, #_cmd + 8
   1CD1 36 00              6235 	ld	(hl),#0x00
   1CD3 23                 6236 	inc	hl
   1CD4 36 01              6237 	ld	(hl),#0x01
                           6238 ;demo.c:884: cmd.size_y = 212;
   1CD6 21r9Es16           6239 	ld	hl, #_cmd + 10
   1CD9 36 D4              6240 	ld	(hl),#0xD4
   1CDB 23                 6241 	inc	hl
   1CDC 36 00              6242 	ld	(hl),#0x00
                           6243 ;demo.c:885: cmd.data = 0;
                           6244 ;demo.c:886: cmd.argument = 0x00;
   1CDE 3E 00              6245 	ld	a,#0x00
   1CE0 32rA0s16           6246 	ld	(#_cmd + 12),a
   1CE3 32rA1s16           6247 	ld	(#_cmd + 13),a
                           6248 ;demo.c:887: cmd.command = 0xd0; 
   1CE6 01rA2s16           6249 	ld	bc,#_cmd + 14
   1CE9 3E D0              6250 	ld	a,#0xD0
   1CEB 02                 6251 	ld	(bc),a
                           6252 ;demo.c:888: cmd.source_x = 0;
   1CEC 21r94s16           6253 	ld	hl,#_cmd
   1CEF 36 00              6254 	ld	(hl),#0x00
   1CF1 23                 6255 	inc	hl
   1CF2 36 00              6256 	ld	(hl),#0x00
                           6257 ;demo.c:889: cmd.source_y = 0;
   1CF4 21r96s16           6258 	ld	hl, #_cmd + 2
   1CF7 36 00              6259 	ld	(hl),#0x00
   1CF9 23                 6260 	inc	hl
   1CFA 36 00              6261 	ld	(hl),#0x00
                           6262 ;demo.c:890: cmd.dest_x = 0;
   1CFC 21r98s16           6263 	ld	hl, #_cmd + 4
   1CFF 36 00              6264 	ld	(hl),#0x00
   1D01 23                 6265 	inc	hl
   1D02 36 00              6266 	ld	(hl),#0x00
                           6267 ;demo.c:891: cmd.dest_y = 768;
   1D04 21r9As16           6268 	ld	hl, #_cmd + 6
   1D07 36 00              6269 	ld	(hl),#0x00
   1D09 23                 6270 	inc	hl
   1D0A 36 03              6271 	ld	(hl),#0x03
                           6272 ;demo.c:892: vdp_copier(&cmd);
   1D0C 21r94s16           6273 	ld	hl,#_cmd
   1D0F E5                 6274 	push	hl
   1D10 CDr00s00           6275 	call	_vdp_copier
   1D13 F1                 6276 	pop	af
                           6277 ;demo.c:894: vdp_register(9,130); // 50hz,212
   1D14 21 09 82           6278 	ld	hl,#0x8209
   1D17 E5                 6279 	push	hl
   1D18 CDr00s00           6280 	call	_vdp_register
   1D1B F1                 6281 	pop	af
                           6282 ;demo.c:896: scratch_clear();
   1D1C CDr90s09           6283 	call	_scratch_clear
                           6284 ;demo.c:898: vdp_set_write_address(0, 0);
   1D1F 21 00 00           6285 	ld	hl,#0x0000
   1D22 E5                 6286 	push	hl
   1D23 3E 00              6287 	ld	a,#0x00
   1D25 F5                 6288 	push	af
   1D26 33                 6289 	inc	sp
   1D27 CDr00s00           6290 	call	_vdp_set_write_address
   1D2A F1                 6291 	pop	af
   1D2B 33                 6292 	inc	sp
                           6293 ;demo.c:900: for (y = 0; y < 212; y++) { 
   1D2C 0E D4              6294 	ld	c,#0xD4
   1D2E                    6295 00109$:
                           6296 ;demo.c:901: vdp_load_screen(scratch, 128);
   1D2E C5                 6297 	push	bc
   1D2F 3E 80              6298 	ld	a,#0x80
   1D31 F5                 6299 	push	af
   1D32 33                 6300 	inc	sp
   1D33 21r50s15           6301 	ld	hl,#_scratch
   1D36 E5                 6302 	push	hl
   1D37 CDr00s00           6303 	call	_vdp_load_screen
   1D3A F1                 6304 	pop	af
   1D3B 33                 6305 	inc	sp
   1D3C C1                 6306 	pop	bc
   1D3D 0D                 6307 	dec	c
                           6308 ;demo.c:900: for (y = 0; y < 212; y++) { 
   1D3E AF                 6309 	xor	a,a
   1D3F B1                 6310 	or	a,c
   1D40 20 EC              6311 	jr	NZ,00109$
                           6312 ;demo.c:904: install_isr(my_isr);
   1D42 21rECs07           6313 	ld	hl,#_my_isr
   1D45 E5                 6314 	push	hl
   1D46 CDr00s00           6315 	call	_install_isr
   1D49 F1                 6316 	pop	af
                           6317 ;demo.c:905: anim_init = 1;
   1D4A 21r38s17           6318 	ld	hl,#_anim_init + 0
   1D4D 36 01              6319 	ld	(hl), #0x01
   1D4F 21r39s17           6320 	ld	hl,#_anim_init + 1
   1D52 36 00              6321 	ld	(hl), #0x00
                           6322 ;demo.c:906: vdp_load_palette(tf_palette);
   1D54 21r50s16           6323 	ld	hl,#_tf_palette
   1D57 E5                 6324 	push	hl
   1D58 CDr00s00           6325 	call	_vdp_load_palette
   1D5B F1                 6326 	pop	af
                           6327 ;demo.c:909: for (y = 0; y < 106; y+=1) {
   1D5C                    6328 00120$:
   1D5C DD 36 FF 00        6329 	ld	-1 (ix),#0x00
   1D60                    6330 00110$:
   1D60 DD 7E FF           6331 	ld	a,-1 (ix)
   1D63 D6 6A              6332 	sub	a,#0x6A
   1D65 D2rE5s1D           6333 	jp	NC,00113$
                           6334 ;demo.c:910: cmd.source_x = 0;
   1D68 21r94s16           6335 	ld	hl,#_cmd
   1D6B 36 00              6336 	ld	(hl),#0x00
   1D6D 23                 6337 	inc	hl
   1D6E 36 00              6338 	ld	(hl),#0x00
                           6339 ;demo.c:911: cmd.source_y = 256+po+frames+(y>>1);
   1D70 11r96s16           6340 	ld	de,#_cmd + 2
   1D73 3Ar34s17           6341 	ld	a,(#_po+0)
   1D76 4F                 6342 	ld	c,a
   1D77 3Ar35s17           6343 	ld	a,(#_po+1)
   1D7A C6 01              6344 	add	a,#0x01
   1D7C 47                 6345 	ld	b,a
   1D7D 21r36s17           6346 	ld	hl,#_frames
   1D80 79                 6347 	ld	a,c
   1D81 86                 6348 	add	a,(hl)
   1D82 DD 77 FD           6349 	ld	-3 (ix),a
   1D85 78                 6350 	ld	a,b
   1D86 23                 6351 	inc	hl
   1D87 8E                 6352 	adc	a,(hl)
   1D88 DD 77 FE           6353 	ld	-2 (ix),a
   1D8B DD 4E FF           6354 	ld	c,-1 (ix)
   1D8E CB 39              6355 	srl	c
   1D90 06 00              6356 	ld	b,#0x00
   1D92 DD 7E FD           6357 	ld	a,-3 (ix)
   1D95 81                 6358 	add	a,c
   1D96 4F                 6359 	ld	c,a
   1D97 DD 7E FE           6360 	ld	a,-2 (ix)
   1D9A 88                 6361 	adc	a,b
   1D9B 47                 6362 	ld	b,a
   1D9C 6B                 6363 	ld	l,e
   1D9D 62                 6364 	ld	h,d
   1D9E 71                 6365 	ld	(hl),c
   1D9F 23                 6366 	inc	hl
   1DA0 70                 6367 	ld	(hl),b
                           6368 ;demo.c:912: cmd.dest_x = 0;
   1DA1 21r98s16           6369 	ld	hl, #_cmd + 4
   1DA4 36 00              6370 	ld	(hl),#0x00
   1DA6 23                 6371 	inc	hl
   1DA7 36 00              6372 	ld	(hl),#0x00
                           6373 ;demo.c:913: cmd.dest_y = (y<<1);
   1DA9 01r9As16           6374 	ld	bc,#_cmd + 6
   1DAC DD 5E FF           6375 	ld	e,-1 (ix)
   1DAF 16 00              6376 	ld	d,#0x00
   1DB1 CB 23              6377 	sla	e
   1DB3 CB 12              6378 	rl	d
   1DB5 69                 6379 	ld	l,c
   1DB6 60                 6380 	ld	h,b
   1DB7 73                 6381 	ld	(hl),e
   1DB8 23                 6382 	inc	hl
   1DB9 72                 6383 	ld	(hl),d
                           6384 ;demo.c:914: cmd.size_x = 256;
   1DBA 21r9Cs16           6385 	ld	hl, #_cmd + 8
   1DBD 36 00              6386 	ld	(hl),#0x00
   1DBF 23                 6387 	inc	hl
   1DC0 36 01              6388 	ld	(hl),#0x01
                           6389 ;demo.c:915: cmd.size_y = 1;
   1DC2 21r9Es16           6390 	ld	hl, #_cmd + 10
   1DC5 36 01              6391 	ld	(hl),#0x01
   1DC7 23                 6392 	inc	hl
   1DC8 36 00              6393 	ld	(hl),#0x00
                           6394 ;demo.c:916: cmd.data = 0;
                           6395 ;demo.c:917: cmd.argument = 0x00;
   1DCA 3E 00              6396 	ld	a,#0x00
   1DCC 32rA0s16           6397 	ld	(#_cmd + 12),a
   1DCF 32rA1s16           6398 	ld	(#_cmd + 13),a
                           6399 ;demo.c:918: cmd.command = 0xD0;
   1DD2 3E D0              6400 	ld	a,#0xD0
   1DD4 32rA2s16           6401 	ld	(#_cmd + 14),a
                           6402 ;demo.c:919: vdp_copier(&cmd);
   1DD7 21r94s16           6403 	ld	hl,#_cmd
   1DDA E5                 6404 	push	hl
   1DDB CDr00s00           6405 	call	_vdp_copier
   1DDE F1                 6406 	pop	af
                           6407 ;demo.c:909: for (y = 0; y < 106; y+=1) {
   1DDF DD 34 FF           6408 	inc	-1 (ix)
   1DE2 C3r60s1D           6409 	jp	00110$
   1DE5                    6410 00113$:
                           6411 ;demo.c:922: frames+=53;
   1DE5 21r36s17           6412 	ld	hl,#_frames
   1DE8 7E                 6413 	ld	a,(hl)
   1DE9 C6 35              6414 	add	a,#0x35
   1DEB 23                 6415 	inc	hl
   1DEC 2B                 6416 	dec	hl
   1DED C5                 6417 	push	bc
   1DEE 4F                 6418 	ld	c, a
   1DEF 23                 6419 	inc	hl
   1DF0 7E                 6420 	ld	a, (hl)
   1DF1 47                 6421 	ld	b, a
   1DF2 79                 6422 	ld	a, c
   1DF3 2B                 6423 	dec	hl
   1DF4 77                 6424 	ld	(hl), a
   1DF5 78                 6425 	ld	a, b
   1DF6 C1                 6426 	pop	bc
   1DF7 CE 00              6427 	adc	a,#0x00
   1DF9 23                 6428 	inc	hl
   1DFA 77                 6429 	ld	(hl),a
                           6430 ;demo.c:923: if (frames >= 212) { frames = 0; po+=256; }
   1DFB 3Ar36s17           6431 	ld	a,(#_frames+0)
   1DFE D6 D4              6432 	sub	a,#0xD4
   1E00 3Ar37s17           6433 	ld	a,(#_frames+1)
   1E03 DE 00              6434 	sbc	a,#0x00
   1E05 FAr28s1E           6435 	jp	M,00104$
   1E08 21r36s17           6436 	ld	hl,#_frames + 0
   1E0B 36 00              6437 	ld	(hl), #0x00
   1E0D 21r37s17           6438 	ld	hl,#_frames + 1
   1E10 36 00              6439 	ld	(hl), #0x00
   1E12 21r34s17           6440 	ld	hl,#_po
   1E15 7E                 6441 	ld	a,(hl)
   1E16 C6 00              6442 	add	a,#0x00
   1E18 23                 6443 	inc	hl
   1E19 2B                 6444 	dec	hl
   1E1A C5                 6445 	push	bc
   1E1B 4F                 6446 	ld	c, a
   1E1C 23                 6447 	inc	hl
   1E1D 7E                 6448 	ld	a, (hl)
   1E1E 47                 6449 	ld	b, a
   1E1F 79                 6450 	ld	a, c
   1E20 2B                 6451 	dec	hl
   1E21 77                 6452 	ld	(hl), a
   1E22 78                 6453 	ld	a, b
   1E23 C1                 6454 	pop	bc
   1E24 CE 01              6455 	adc	a,#0x01
   1E26 23                 6456 	inc	hl
   1E27 77                 6457 	ld	(hl),a
   1E28                    6458 00104$:
                           6459 ;demo.c:924: if (po >= 768) {
   1E28 3Ar34s17           6460 	ld	a,(#_po+0)
   1E2B D6 00              6461 	sub	a,#0x00
   1E2D 3Ar35s17           6462 	ld	a,(#_po+1)
   1E30 DE 03              6463 	sbc	a,#0x03
   1E32 FAr3Fs1E           6464 	jp	M,00114$
                           6465 ;demo.c:925: po = 0;
   1E35 21r34s17           6466 	ld	hl,#_po + 0
   1E38 36 00              6467 	ld	(hl), #0x00
   1E3A 21r35s17           6468 	ld	hl,#_po + 1
   1E3D 36 00              6469 	ld	(hl), #0x00
   1E3F                    6470 00114$:
   1E3F DD F9              6471 	ld	sp,ix
   1E41 DD E1              6472 	pop	ix
   1E43 C9                 6473 	ret
   1E44                    6474 _animplay_end::
   1E44                    6475 __str_10:
   1E44 4C 20 4F 20 41 20  6476 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1E51 00                 6477 	.db 0x00
   1E52                    6478 __str_11:
   1E52 4C 46 31 20 20 20  6479 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1E5D 00                 6480 	.db 0x00
   1E5E                    6481 __str_12:
   1E5E 4C 46 32 20 20 20  6482 	.ascii "LF2     PCK"
        20 20 50 43 4B
   1E69 00                 6483 	.db 0x00
   1E6A                    6484 __str_13:
   1E6A 4C 46 33 20 20 20  6485 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1E75 00                 6486 	.db 0x00
                           6487 ;demo.c:941: void drawbox(uint8_t x, uint8_t y) {
                           6488 ;	---------------------------------
                           6489 ; Function drawbox
                           6490 ; ---------------------------------
   1E76                    6491 _drawbox_start::
   1E76                    6492 _drawbox:
   1E76 DD E5              6493 	push	ix
   1E78 DD 21 00 00        6494 	ld	ix,#0
   1E7C DD 39              6495 	add	ix,sp
                           6496 ;demo.c:942: cmd.source_x = boxes_x[boxi];
   1E7E 21r50s17           6497 	ld	hl,#_boxi
   1E81 3Er41              6498 	ld	a,#<_boxes_x
   1E83 86                 6499 	add	a,(hl)
   1E84 4F                 6500 	ld	c,a
   1E85 3Es17              6501 	ld	a,#>_boxes_x
   1E87 CE 00              6502 	adc	a,#0x00
   1E89 47                 6503 	ld	b,a
   1E8A 0A                 6504 	ld	a,(bc)
   1E8B 4F                 6505 	ld	c,a
   1E8C 06 00              6506 	ld	b,#0x00
   1E8E 21r94s16           6507 	ld	hl,#_cmd
   1E91 71                 6508 	ld	(hl),c
   1E92 23                 6509 	inc	hl
   1E93 70                 6510 	ld	(hl),b
                           6511 ;demo.c:943: cmd.source_y = boxes_y[boxi];
   1E94 01r96s16           6512 	ld	bc,#_cmd + 2
   1E97 3Ar50s17           6513 	ld	a,(#_boxi+0)
   1E9A 87                 6514 	add	a,a
   1E9B C6r46              6515 	add	a,#<_boxes_y
   1E9D 6F                 6516 	ld	l,a
   1E9E 3Es17              6517 	ld	a,#>_boxes_y
   1EA0 CE 00              6518 	adc	a,#0x00
   1EA2 67                 6519 	ld	h,a
   1EA3 5E                 6520 	ld	e,(hl)
   1EA4 23                 6521 	inc	hl
   1EA5 56                 6522 	ld	d,(hl)
   1EA6 69                 6523 	ld	l,c
   1EA7 60                 6524 	ld	h,b
   1EA8 73                 6525 	ld	(hl),e
   1EA9 23                 6526 	inc	hl
   1EAA 72                 6527 	ld	(hl),d
                           6528 ;demo.c:944: cmd.dest_x = x;
   1EAB 01r98s16           6529 	ld	bc,#_cmd + 4
   1EAE DD 5E 04           6530 	ld	e,4 (ix)
   1EB1 16 00              6531 	ld	d,#0x00
   1EB3 69                 6532 	ld	l,c
   1EB4 60                 6533 	ld	h,b
   1EB5 73                 6534 	ld	(hl),e
   1EB6 23                 6535 	inc	hl
   1EB7 72                 6536 	ld	(hl),d
                           6537 ;demo.c:945: cmd.dest_y = y;
   1EB8 01r9As16           6538 	ld	bc,#_cmd + 6
   1EBB DD 5E 05           6539 	ld	e,5 (ix)
   1EBE 16 00              6540 	ld	d,#0x00
   1EC0 69                 6541 	ld	l,c
   1EC1 60                 6542 	ld	h,b
   1EC2 73                 6543 	ld	(hl),e
   1EC3 23                 6544 	inc	hl
   1EC4 72                 6545 	ld	(hl),d
                           6546 ;demo.c:946: cmd.size_x = 36;
   1EC5 21r9Cs16           6547 	ld	hl, #_cmd + 8
   1EC8 36 24              6548 	ld	(hl),#0x24
   1ECA 23                 6549 	inc	hl
   1ECB 36 00              6550 	ld	(hl),#0x00
                           6551 ;demo.c:947: cmd.size_y = 36;
   1ECD 21r9Es16           6552 	ld	hl, #_cmd + 10
   1ED0 36 24              6553 	ld	(hl),#0x24
   1ED2 23                 6554 	inc	hl
   1ED3 36 00              6555 	ld	(hl),#0x00
                           6556 ;demo.c:948: cmd.data = 0;
                           6557 ;demo.c:949: cmd.argument = 0x00;
   1ED5 3E 00              6558 	ld	a,#0x00
   1ED7 32rA0s16           6559 	ld	(#_cmd + 12),a
   1EDA 32rA1s16           6560 	ld	(#_cmd + 13),a
                           6561 ;demo.c:950: cmd.command = 0x98; // TIMP sprite
   1EDD 3E 98              6562 	ld	a,#0x98
   1EDF 32rA2s16           6563 	ld	(#_cmd + 14),a
                           6564 ;demo.c:951: vdp_copier(&cmd);
   1EE2 21r94s16           6565 	ld	hl,#_cmd
   1EE5 E5                 6566 	push	hl
   1EE6 CDr00s00           6567 	call	_vdp_copier
   1EE9 F1                 6568 	pop	af
                           6569 ;demo.c:953: prevx = x;
   1EEA DD 7E 04           6570 	ld	a,4 (ix)
   1EED 21r3Ds17           6571 	ld	hl,#_prevx + 0
   1EF0 77                 6572 	ld	(hl), a
   1EF1 21r3Es17           6573 	ld	hl,#_prevx + 1
   1EF4 36 00              6574 	ld	(hl), #0x00
                           6575 ;demo.c:954: prevy = y;
   1EF6 DD 7E 05           6576 	ld	a,5 (ix)
   1EF9 21r3Fs17           6577 	ld	hl,#_prevy + 0
   1EFC 77                 6578 	ld	(hl), a
   1EFD 21r40s17           6579 	ld	hl,#_prevy + 1
   1F00 36 00              6580 	ld	(hl), #0x00
   1F02 DD E1              6581 	pop	ix
   1F04 C9                 6582 	ret
   1F05                    6583 _drawbox_end::
                           6584 ;demo.c:968: void boxes() {
                           6585 ;	---------------------------------
                           6586 ; Function boxes
                           6587 ; ---------------------------------
   1F05                    6588 _boxes_start::
   1F05                    6589 _boxes:
   1F05 DD E5              6590 	push	ix
   1F07 DD 21 00 00        6591 	ld	ix,#0
   1F0B DD 39              6592 	add	ix,sp
   1F0D F5                 6593 	push	af
                           6594 ;demo.c:972: if (bx < 0) return;
   1F0E FD 21r51s17        6595 	ld	iy,#_bx
   1F12 FD CB 01 7E        6596 	bit	7,1 (iy)
   1F16 C2r2Cs23           6597 	jp	NZ,00149$
                           6598 ;demo.c:974: if (bonc == 1) {
   1F19 3Ar59s17           6599 	ld	a,(#_bonc+0)
   1F1C D6 01              6600 	sub	a,#0x01
   1F1E 20 06              6601 	jr	NZ,00178$
   1F20 3Ar5As17           6602 	ld	a,(#_bonc+1)
   1F23 B7                 6603 	or	a,a
   1F24 28 02              6604 	jr	Z,00179$
   1F26                    6605 00178$:
   1F26 18 4D              6606 	jr	00104$
   1F28                    6607 00179$:
                           6608 ;demo.c:976: cmd.source_x = 0;
   1F28 21r94s16           6609 	ld	hl,#_cmd
   1F2B 36 00              6610 	ld	(hl),#0x00
   1F2D 23                 6611 	inc	hl
   1F2E 36 00              6612 	ld	(hl),#0x00
                           6613 ;demo.c:977: cmd.source_y = 256;
   1F30 21r96s16           6614 	ld	hl, #_cmd + 2
   1F33 36 00              6615 	ld	(hl),#0x00
   1F35 23                 6616 	inc	hl
   1F36 36 01              6617 	ld	(hl),#0x01
                           6618 ;demo.c:978: cmd.dest_x = pbx;
   1F38 01r98s16           6619 	ld	bc,#_cmd + 4
   1F3B ED 5Br5Bs17        6620 	ld	de,(_pbx)
   1F3F 69                 6621 	ld	l,c
   1F40 60                 6622 	ld	h,b
   1F41 73                 6623 	ld	(hl),e
   1F42 23                 6624 	inc	hl
   1F43 72                 6625 	ld	(hl),d
                           6626 ;demo.c:979: cmd.dest_y = pbt;
   1F44 01r9As16           6627 	ld	bc,#_cmd + 6
   1F47 ED 5Br5Ds17        6628 	ld	de,(_pbt)
   1F4B 69                 6629 	ld	l,c
   1F4C 60                 6630 	ld	h,b
   1F4D 73                 6631 	ld	(hl),e
   1F4E 23                 6632 	inc	hl
   1F4F 72                 6633 	ld	(hl),d
                           6634 ;demo.c:980: cmd.size_x = 36;
   1F50 21r9Cs16           6635 	ld	hl, #_cmd + 8
   1F53 36 24              6636 	ld	(hl),#0x24
   1F55 23                 6637 	inc	hl
   1F56 36 00              6638 	ld	(hl),#0x00
                           6639 ;demo.c:981: cmd.size_y = 36;
   1F58 21r9Es16           6640 	ld	hl, #_cmd + 10
   1F5B 36 24              6641 	ld	(hl),#0x24
   1F5D 23                 6642 	inc	hl
   1F5E 36 00              6643 	ld	(hl),#0x00
                           6644 ;demo.c:982: cmd.data = 0;
                           6645 ;demo.c:983: cmd.argument = 0x00;
   1F60 3E 00              6646 	ld	a,#0x00
   1F62 32rA0s16           6647 	ld	(#_cmd + 12),a
   1F65 32rA1s16           6648 	ld	(#_cmd + 13),a
                           6649 ;demo.c:984: cmd.command = 0xD0; // HMMM
   1F68 3E D0              6650 	ld	a,#0xD0
   1F6A 32rA2s16           6651 	ld	(#_cmd + 14),a
                           6652 ;demo.c:985: vdp_copier(&cmd);
   1F6D 21r94s16           6653 	ld	hl,#_cmd
   1F70 E5                 6654 	push	hl
   1F71 CDr00s00           6655 	call	_vdp_copier
   1F74 F1                 6656 	pop	af
   1F75                    6657 00104$:
                           6658 ;demo.c:988: if (boxes_init == 0) {
   1F75 AF                 6659 	xor	a,a
   1F76 21r3As17           6660 	ld	hl,#_boxes_init + 0
   1F79 B6                 6661 	or	a,(hl)
   1F7A C2r7Cs20           6662 	jp	NZ,00106$
                           6663 ;demo.c:989: boxes_init = 1;
   1F7D FD 21r3As17        6664 	ld	iy,#_boxes_init
   1F81 FD 36 00 01        6665 	ld	0 (iy),#0x01
                           6666 ;demo.c:991: cmd.size_x = 8;
   1F85 21r9Cs16           6667 	ld	hl, #_cmd + 8
   1F88 36 08              6668 	ld	(hl),#0x08
   1F8A 23                 6669 	inc	hl
   1F8B 36 00              6670 	ld	(hl),#0x00
                           6671 ;demo.c:992: cmd.size_y = 212;
   1F8D 21r9Es16           6672 	ld	hl, #_cmd + 10
   1F90 36 D4              6673 	ld	(hl),#0xD4
   1F92 23                 6674 	inc	hl
   1F93 36 00              6675 	ld	(hl),#0x00
                           6676 ;demo.c:993: cmd.data = 0;
                           6677 ;demo.c:994: cmd.argument = 0x00; // from 70xY to left
   1F95 3E 00              6678 	ld	a,#0x00
   1F97 32rA0s16           6679 	ld	(#_cmd + 12),a
   1F9A 32rA1s16           6680 	ld	(#_cmd + 13),a
                           6681 ;demo.c:995: cmd.command = 0xd0; // vram to vram, y only
   1F9D 01rA2s16           6682 	ld	bc,#_cmd + 14
   1FA0 3E D0              6683 	ld	a,#0xD0
   1FA2 02                 6684 	ld	(bc),a
                           6685 ;demo.c:996: cmd.source_x = 248;
   1FA3 21r94s16           6686 	ld	hl,#_cmd
   1FA6 36 F8              6687 	ld	(hl),#0xF8
   1FA8 23                 6688 	inc	hl
   1FA9 36 00              6689 	ld	(hl),#0x00
                           6690 ;demo.c:997: cmd.source_y = 0;
   1FAB 21r96s16           6691 	ld	hl, #_cmd + 2
   1FAE 36 00              6692 	ld	(hl),#0x00
   1FB0 23                 6693 	inc	hl
   1FB1 36 00              6694 	ld	(hl),#0x00
                           6695 ;demo.c:998: cmd.dest_y = 0;
   1FB3 21r9As16           6696 	ld	hl, #_cmd + 6
   1FB6 36 00              6697 	ld	(hl),#0x00
   1FB8 23                 6698 	inc	hl
   1FB9 36 00              6699 	ld	(hl),#0x00
                           6700 ;demo.c:1000: for (x = 248; x >= 0; x-=8) {
   1FBB 01 F8 00           6701 	ld	bc,#0x00F8
   1FBE                    6702 00137$:
   1FBE 78                 6703 	ld	a,b
   1FBF CB 7F              6704 	bit	7,a
   1FC1 20 38              6705 	jr	NZ,00140$
                           6706 ;demo.c:1001: waitVB();
   1FC3 76                 6707 		halt 
                           6708 ;demo.c:1002: cmd.dest_x = x;
   1FC4 11r98s16           6709 	ld	de,#_cmd + 4
   1FC7 EB                 6710 	ex	de,hl
   1FC8 71                 6711 	ld	(hl),c
   1FC9 23                 6712 	inc	hl
   1FCA 70                 6713 	ld	(hl),b
                           6714 ;demo.c:1003: cmd.dest_y = 0;
   1FCB 11r9As16           6715 	ld	de,#_cmd + 6
   1FCE EB                 6716 	ex	de,hl
   1FCF 36 00              6717 	ld	(hl),#0x00
   1FD1 23                 6718 	inc	hl
   1FD2 36 00              6719 	ld	(hl),#0x00
                           6720 ;demo.c:1004: vdp_copier(&cmd);
   1FD4 C5                 6721 	push	bc
   1FD5 21r94s16           6722 	ld	hl,#_cmd
   1FD8 E5                 6723 	push	hl
   1FD9 CDr00s00           6724 	call	_vdp_copier
   1FDC F1                 6725 	pop	af
   1FDD C1                 6726 	pop	bc
                           6727 ;demo.c:1005: cmd.dest_y = 256;
   1FDE 11r9As16           6728 	ld	de,#_cmd + 6
   1FE1 EB                 6729 	ex	de,hl
   1FE2 36 00              6730 	ld	(hl),#0x00
   1FE4 23                 6731 	inc	hl
   1FE5 36 01              6732 	ld	(hl),#0x01
                           6733 ;demo.c:1006: vdp_copier(&cmd);
   1FE7 C5                 6734 	push	bc
   1FE8 21r94s16           6735 	ld	hl,#_cmd
   1FEB E5                 6736 	push	hl
   1FEC CDr00s00           6737 	call	_vdp_copier
   1FEF F1                 6738 	pop	af
   1FF0 C1                 6739 	pop	bc
                           6740 ;demo.c:1000: for (x = 248; x >= 0; x-=8) {
   1FF1 79                 6741 	ld	a,c
   1FF2 C6 F8              6742 	add	a,#0xF8
   1FF4 4F                 6743 	ld	c,a
   1FF5 78                 6744 	ld	a,b
   1FF6 CE FF              6745 	adc	a,#0xFF
   1FF8 47                 6746 	ld	b,a
   1FF9 18 C3              6747 	jr	00137$
   1FFB                    6748 00140$:
                           6749 ;demo.c:1009: vdp_load_palette(boxes_palette);
   1FFB 21r70s16           6750 	ld	hl,#_boxes_palette
   1FFE E5                 6751 	push	hl
   1FFF CDr00s00           6752 	call	_vdp_load_palette
   2002 F1                 6753 	pop	af
                           6754 ;demo.c:1011: for (x=0;x < 8;x++) {
   2003 DD 36 FE 00        6755 	ld	-2 (ix),#0x00
   2007 DD 36 FF 00        6756 	ld	-1 (ix),#0x00
   200B                    6757 00145$:
   200B DD 7E FE           6758 	ld	a,-2 (ix)
   200E D6 08              6759 	sub	a,#0x08
   2010 DD 7E FF           6760 	ld	a,-1 (ix)
   2013 DE 00              6761 	sbc	a,#0x00
   2015 F2r6Fs20           6762 	jp	P,00148$
                           6763 ;demo.c:1013: for (y=0;y < 9;y++) {
   2018 11 00 00           6764 	ld	de,#0x0000
   201B                    6765 00141$:
   201B 7B                 6766 	ld	a,e
   201C D6 09              6767 	sub	a,#0x09
   201E 7A                 6768 	ld	a,d
   201F DE 00              6769 	sbc	a,#0x00
   2021 F2r64s20           6770 	jp	P,00147$
                           6771 ;demo.c:1014: boxes_x[4] = 0;
   2024 01r45s17           6772 	ld	bc,#_boxes_x + 4
   2027 3E 00              6773 	ld	a,#0x00
   2029 02                 6774 	ld	(bc),a
                           6775 ;demo.c:1015: boxes_y[4] = 768+2*36;
   202A 21r4Es17           6776 	ld	hl, #_boxes_y + 8
   202D 36 48              6777 	ld	(hl),#0x48
   202F 23                 6778 	inc	hl
   2030 36 03              6779 	ld	(hl),#0x03
                           6780 ;demo.c:1016: boxi = 4;
   2032 21r50s17           6781 	ld	hl,#_boxi + 0
   2035 36 04              6782 	ld	(hl), #0x04
                           6783 ;demo.c:1017: drawbox((x*36),y*18);
   2037 4B                 6784 	ld	c,e
   2038 D5                 6785 	push	de
   2039 79                 6786 	ld	a,c
   203A 5F                 6787 	ld	e,a
   203B 87                 6788 	add	a,a
   203C 87                 6789 	add	a,a
   203D 87                 6790 	add	a,a
   203E 83                 6791 	add	a,e
   203F 87                 6792 	add	a,a
   2040 D1                 6793 	pop	de
   2041 4F                 6794 	ld	c,a
   2042 DD 46 FE           6795 	ld	b,-2 (ix)
   2045 D5                 6796 	push	de
   2046 78                 6797 	ld	a,b
   2047 5F                 6798 	ld	e,a
   2048 87                 6799 	add	a,a
   2049 87                 6800 	add	a,a
   204A 87                 6801 	add	a,a
   204B 83                 6802 	add	a,e
   204C 87                 6803 	add	a,a
   204D 87                 6804 	add	a,a
   204E D1                 6805 	pop	de
   204F 47                 6806 	ld	b,a
   2050 D5                 6807 	push	de
   2051 79                 6808 	ld	a,c
   2052 F5                 6809 	push	af
   2053 33                 6810 	inc	sp
   2054 C5                 6811 	push	bc
   2055 33                 6812 	inc	sp
   2056 CDr76s1E           6813 	call	_drawbox
   2059 F1                 6814 	pop	af
   205A D1                 6815 	pop	de
                           6816 ;demo.c:1018: boxi = 0;
   205B 21r50s17           6817 	ld	hl,#_boxi + 0
   205E 36 00              6818 	ld	(hl), #0x00
                           6819 ;demo.c:1013: for (y=0;y < 9;y++) {
   2060 13                 6820 	inc	de
   2061 C3r1Bs20           6821 	jp	00141$
   2064                    6822 00147$:
                           6823 ;demo.c:1011: for (x=0;x < 8;x++) {
   2064 DD 34 FE           6824 	inc	-2 (ix)
   2067 20 03              6825 	jr	NZ,00180$
   2069 DD 34 FF           6826 	inc	-1 (ix)
   206C                    6827 00180$:
   206C C3r0Bs20           6828 	jp	00145$
   206F                    6829 00148$:
                           6830 ;demo.c:1022: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,182);
   206F 21 08 B6           6831 	ld	hl,#0xB608
   2072 E5                 6832 	push	hl
   2073 21r31s23           6833 	ld	hl,#__str_14
   2076 E5                 6834 	push	hl
   2077 CDrB8s16           6835 	call	_drawsine
   207A F1                 6836 	pop	af
   207B F1                 6837 	pop	af
   207C                    6838 00106$:
                           6839 ;demo.c:1025: if (bt >= 80) bt+=8;
   207C 3Ar55s17           6840 	ld	a,(#_bt+0)
   207F D6 50              6841 	sub	a,#0x50
   2081 3Ar56s17           6842 	ld	a,(#_bt+1)
   2084 DE 00              6843 	sbc	a,#0x00
   2086 FAr9Fs20           6844 	jp	M,00108$
   2089 21r55s17           6845 	ld	hl,#_bt
   208C 7E                 6846 	ld	a,(hl)
   208D C6 08              6847 	add	a,#0x08
   208F 23                 6848 	inc	hl
   2090 2B                 6849 	dec	hl
   2091 C5                 6850 	push	bc
   2092 4F                 6851 	ld	c, a
   2093 23                 6852 	inc	hl
   2094 7E                 6853 	ld	a, (hl)
   2095 47                 6854 	ld	b, a
   2096 79                 6855 	ld	a, c
   2097 2B                 6856 	dec	hl
   2098 77                 6857 	ld	(hl), a
   2099 78                 6858 	ld	a, b
   209A C1                 6859 	pop	bc
   209B CE 00              6860 	adc	a,#0x00
   209D 23                 6861 	inc	hl
   209E 77                 6862 	ld	(hl),a
   209F                    6863 00108$:
                           6864 ;demo.c:1026: if (bt < 80 && bt >= 60) bt+=7;
   209F 3Ar55s17           6865 	ld	a,(#_bt+0)
   20A2 D6 50              6866 	sub	a,#0x50
   20A4 3Ar56s17           6867 	ld	a,(#_bt+1)
   20A7 DE 00              6868 	sbc	a,#0x00
   20A9 F2rCFs20           6869 	jp	P,00110$
   20AC 3Ar55s17           6870 	ld	a,(#_bt+0)
   20AF D6 3C              6871 	sub	a,#0x3C
   20B1 3Ar56s17           6872 	ld	a,(#_bt+1)
   20B4 DE 00              6873 	sbc	a,#0x00
   20B6 FArCFs20           6874 	jp	M,00110$
   20B9 21r55s17           6875 	ld	hl,#_bt
   20BC 7E                 6876 	ld	a,(hl)
   20BD C6 07              6877 	add	a,#0x07
   20BF 23                 6878 	inc	hl
   20C0 2B                 6879 	dec	hl
   20C1 C5                 6880 	push	bc
   20C2 4F                 6881 	ld	c, a
   20C3 23                 6882 	inc	hl
   20C4 7E                 6883 	ld	a, (hl)
   20C5 47                 6884 	ld	b, a
   20C6 79                 6885 	ld	a, c
   20C7 2B                 6886 	dec	hl
   20C8 77                 6887 	ld	(hl), a
   20C9 78                 6888 	ld	a, b
   20CA C1                 6889 	pop	bc
   20CB CE 00              6890 	adc	a,#0x00
   20CD 23                 6891 	inc	hl
   20CE 77                 6892 	ld	(hl),a
   20CF                    6893 00110$:
                           6894 ;demo.c:1027: if (bt < 60 && bt >= 40) bt+=6;
   20CF 3Ar55s17           6895 	ld	a,(#_bt+0)
   20D2 D6 3C              6896 	sub	a,#0x3C
   20D4 3Ar56s17           6897 	ld	a,(#_bt+1)
   20D7 DE 00              6898 	sbc	a,#0x00
   20D9 F2rFFs20           6899 	jp	P,00113$
   20DC 3Ar55s17           6900 	ld	a,(#_bt+0)
   20DF D6 28              6901 	sub	a,#0x28
   20E1 3Ar56s17           6902 	ld	a,(#_bt+1)
   20E4 DE 00              6903 	sbc	a,#0x00
   20E6 FArFFs20           6904 	jp	M,00113$
   20E9 21r55s17           6905 	ld	hl,#_bt
   20EC 7E                 6906 	ld	a,(hl)
   20ED C6 06              6907 	add	a,#0x06
   20EF 23                 6908 	inc	hl
   20F0 2B                 6909 	dec	hl
   20F1 C5                 6910 	push	bc
   20F2 4F                 6911 	ld	c, a
   20F3 23                 6912 	inc	hl
   20F4 7E                 6913 	ld	a, (hl)
   20F5 47                 6914 	ld	b, a
   20F6 79                 6915 	ld	a, c
   20F7 2B                 6916 	dec	hl
   20F8 77                 6917 	ld	(hl), a
   20F9 78                 6918 	ld	a, b
   20FA C1                 6919 	pop	bc
   20FB CE 00              6920 	adc	a,#0x00
   20FD 23                 6921 	inc	hl
   20FE 77                 6922 	ld	(hl),a
   20FF                    6923 00113$:
                           6924 ;demo.c:1028: if (bt < 40 && bt >= 10) bt+=5;
   20FF 3Ar55s17           6925 	ld	a,(#_bt+0)
   2102 D6 28              6926 	sub	a,#0x28
   2104 3Ar56s17           6927 	ld	a,(#_bt+1)
   2107 DE 00              6928 	sbc	a,#0x00
   2109 F2r2Fs21           6929 	jp	P,00116$
   210C 3Ar55s17           6930 	ld	a,(#_bt+0)
   210F D6 0A              6931 	sub	a,#0x0A
   2111 3Ar56s17           6932 	ld	a,(#_bt+1)
   2114 DE 00              6933 	sbc	a,#0x00
   2116 FAr2Fs21           6934 	jp	M,00116$
   2119 21r55s17           6935 	ld	hl,#_bt
   211C 7E                 6936 	ld	a,(hl)
   211D C6 05              6937 	add	a,#0x05
   211F 23                 6938 	inc	hl
   2120 2B                 6939 	dec	hl
   2121 C5                 6940 	push	bc
   2122 4F                 6941 	ld	c, a
   2123 23                 6942 	inc	hl
   2124 7E                 6943 	ld	a, (hl)
   2125 47                 6944 	ld	b, a
   2126 79                 6945 	ld	a, c
   2127 2B                 6946 	dec	hl
   2128 77                 6947 	ld	(hl), a
   2129 78                 6948 	ld	a, b
   212A C1                 6949 	pop	bc
   212B CE 00              6950 	adc	a,#0x00
   212D 23                 6951 	inc	hl
   212E 77                 6952 	ld	(hl),a
   212F                    6953 00116$:
                           6954 ;demo.c:1029: if (bt < 10 ) bt+=4;
   212F 3Ar55s17           6955 	ld	a,(#_bt+0)
   2132 D6 0A              6956 	sub	a,#0x0A
   2134 3Ar56s17           6957 	ld	a,(#_bt+1)
   2137 DE 00              6958 	sbc	a,#0x00
   2139 F2r52s21           6959 	jp	P,00119$
   213C 21r55s17           6960 	ld	hl,#_bt
   213F 7E                 6961 	ld	a,(hl)
   2140 C6 04              6962 	add	a,#0x04
   2142 23                 6963 	inc	hl
   2143 2B                 6964 	dec	hl
   2144 C5                 6965 	push	bc
   2145 4F                 6966 	ld	c, a
   2146 23                 6967 	inc	hl
   2147 7E                 6968 	ld	a, (hl)
   2148 47                 6969 	ld	b, a
   2149 79                 6970 	ld	a, c
   214A 2B                 6971 	dec	hl
   214B 77                 6972 	ld	(hl), a
   214C 78                 6973 	ld	a, b
   214D C1                 6974 	pop	bc
   214E CE 00              6975 	adc	a,#0x00
   2150 23                 6976 	inc	hl
   2151 77                 6977 	ld	(hl),a
   2152                    6978 00119$:
                           6979 ;demo.c:1032: cmd.source_x = bx;
   2152 ED 4Br51s17        6980 	ld	bc,(_bx)
   2156 21r94s16           6981 	ld	hl,#_cmd
   2159 71                 6982 	ld	(hl),c
   215A 23                 6983 	inc	hl
   215B 70                 6984 	ld	(hl),b
                           6985 ;demo.c:1033: cmd.source_y = bt;
   215C 01r96s16           6986 	ld	bc,#_cmd + 2
   215F ED 5Br55s17        6987 	ld	de,(_bt)
   2163 69                 6988 	ld	l,c
   2164 60                 6989 	ld	h,b
   2165 73                 6990 	ld	(hl),e
   2166 23                 6991 	inc	hl
   2167 72                 6992 	ld	(hl),d
                           6993 ;demo.c:1034: cmd.dest_x = 0;
   2168 21r98s16           6994 	ld	hl, #_cmd + 4
   216B 36 00              6995 	ld	(hl),#0x00
   216D 23                 6996 	inc	hl
   216E 36 00              6997 	ld	(hl),#0x00
                           6998 ;demo.c:1035: cmd.dest_y = 256;
   2170 21r9As16           6999 	ld	hl, #_cmd + 6
   2173 36 00              7000 	ld	(hl),#0x00
   2175 23                 7001 	inc	hl
   2176 36 01              7002 	ld	(hl),#0x01
                           7003 ;demo.c:1036: cmd.size_x = 36;
   2178 21r9Cs16           7004 	ld	hl, #_cmd + 8
   217B 36 24              7005 	ld	(hl),#0x24
   217D 23                 7006 	inc	hl
   217E 36 00              7007 	ld	(hl),#0x00
                           7008 ;demo.c:1037: cmd.size_y = 36;
   2180 21r9Es16           7009 	ld	hl, #_cmd + 10
   2183 36 24              7010 	ld	(hl),#0x24
   2185 23                 7011 	inc	hl
   2186 36 00              7012 	ld	(hl),#0x00
                           7013 ;demo.c:1038: cmd.data = 0;
                           7014 ;demo.c:1039: cmd.argument = 0x00;
   2188 3E 00              7015 	ld	a,#0x00
   218A 32rA0s16           7016 	ld	(#_cmd + 12),a
   218D 32rA1s16           7017 	ld	(#_cmd + 13),a
                           7018 ;demo.c:1040: cmd.command = 0xD0; // HMMM
   2190 3E D0              7019 	ld	a,#0xD0
   2192 32rA2s16           7020 	ld	(#_cmd + 14),a
                           7021 ;demo.c:1041: vdp_copier(&cmd);
   2195 21r94s16           7022 	ld	hl,#_cmd
   2198 E5                 7023 	push	hl
   2199 CDr00s00           7024 	call	_vdp_copier
   219C F1                 7025 	pop	af
                           7026 ;demo.c:1043: pbx = bx;
   219D 2Ar51s17           7027 	ld	hl,(_bx)
   21A0 FD 21r5Bs17        7028 	ld	iy,#_pbx
   21A4 FD 75 00           7029 	ld	0 (iy),l
   21A7 FD 21r5Bs17        7030 	ld	iy,#_pbx
   21AB FD 74 01           7031 	ld	1 (iy),h
                           7032 ;demo.c:1044: pbt = bt;
   21AE 2Ar55s17           7033 	ld	hl,(_bt)
   21B1 FD 21r5Ds17        7034 	ld	iy,#_pbt
   21B5 FD 75 00           7035 	ld	0 (iy),l
   21B8 FD 21r5Ds17        7036 	ld	iy,#_pbt
   21BC FD 74 01           7037 	ld	1 (iy),h
                           7038 ;demo.c:1049: bonc = 1;
   21BF 21r59s17           7039 	ld	hl,#_bonc + 0
   21C2 36 01              7040 	ld	(hl), #0x01
   21C4 21r5As17           7041 	ld	hl,#_bonc + 1
   21C7 36 00              7042 	ld	(hl), #0x00
                           7043 ;demo.c:1050: if (bt > by) {
   21C9 21r53s17           7044 	ld	hl,#_by
   21CC 7E                 7045 	ld	a,(hl)
   21CD FD 21r55s17        7046 	ld	iy,#_bt
   21D1 FD 96 00           7047 	sub	a,0 (iy)
   21D4 23                 7048 	inc	hl
   21D5 7E                 7049 	ld	a,(hl)
   21D6 FD 21r55s17        7050 	ld	iy,#_bt
   21DA FD 9E 01           7051 	sbc	a,1 (iy)
   21DD F2r1Bs23           7052 	jp	P,00135$
                           7053 ;demo.c:1051: bt = by;
   21E0 2Ar53s17           7054 	ld	hl,(_by)
   21E3 FD 21r55s17        7055 	ld	iy,#_bt
   21E7 FD 75 00           7056 	ld	0 (iy),l
   21EA FD 21r55s17        7057 	ld	iy,#_bt
   21EE FD 74 01           7058 	ld	1 (iy),h
                           7059 ;demo.c:1052: drawbox(bx,bt);
   21F1 21r55s17           7060 	ld	hl,#_bt + 0
   21F4 4E                 7061 	ld	c,(hl)
   21F5 21r51s17           7062 	ld	hl,#_bx + 0
   21F8 46                 7063 	ld	b,(hl)
   21F9 79                 7064 	ld	a,c
   21FA F5                 7065 	push	af
   21FB 33                 7066 	inc	sp
   21FC C5                 7067 	push	bc
   21FD 33                 7068 	inc	sp
   21FE CDr76s1E           7069 	call	_drawbox
   2201 F1                 7070 	pop	af
                           7071 ;demo.c:1053: bt = 0;
   2202 21r55s17           7072 	ld	hl,#_bt + 0
   2205 36 00              7073 	ld	(hl), #0x00
   2207 21r56s17           7074 	ld	hl,#_bt + 1
   220A 36 00              7075 	ld	(hl), #0x00
                           7076 ;demo.c:1054: if (by > 48) {
   220C 3E 30              7077 	ld	a,#0x30
   220E FD 21r53s17        7078 	ld	iy,#_by
   2212 FD 96 00           7079 	sub	a,0 (iy)
   2215 3E 00              7080 	ld	a,#0x00
   2217 FD 21r53s17        7081 	ld	iy,#_by
   221B FD 9E 01           7082 	sbc	a,1 (iy)
   221E F2r76s22           7083 	jp	P,00123$
                           7084 ;demo.c:1055: bonc = 0;
   2221 21r59s17           7085 	ld	hl,#_bonc + 0
   2224 36 00              7086 	ld	(hl), #0x00
   2226 21r5As17           7087 	ld	hl,#_bonc + 1
   2229 36 00              7088 	ld	(hl), #0x00
                           7089 ;demo.c:1056: by-=16;
   222B 21r53s17           7090 	ld	hl,#_by
   222E 7E                 7091 	ld	a,(hl)
   222F C6 F0              7092 	add	a,#0xF0
   2231 77                 7093 	ld	(hl),a
   2232 23                 7094 	inc	hl
   2233 7E                 7095 	ld	a,(hl)
   2234 CE FF              7096 	adc	a,#0xFF
   2236 77                 7097 	ld	(hl),a
                           7098 ;demo.c:1057: prevbox_of = boxes_of[boxi];
   2237 3Ar50s17           7099 	ld	a,(#_boxi+0)
   223A 87                 7100 	add	a,a
   223B C6r5F              7101 	add	a,#<_boxes_of
   223D 6F                 7102 	ld	l,a
   223E 3Es17              7103 	ld	a,#>_boxes_of
   2240 CE 00              7104 	adc	a,#0x00
   2242 67                 7105 	ld	h,a
   2243 4E                 7106 	ld	c,(hl)
   2244 23                 7107 	inc	hl
   2245 21r69s17           7108 	ld	hl,#_prevbox_of + 0
   2248 71                 7109 	ld	(hl), c
                           7110 ;demo.c:1058: by+=prevbox_of;
   2249 21r69s17           7111 	ld	hl,#_prevbox_of + 0
   224C 4E                 7112 	ld	c,(hl)
   224D 06 00              7113 	ld	b,#0x00
   224F 21r53s17           7114 	ld	hl,#_by
   2252 7E                 7115 	ld	a,(hl)
   2253 81                 7116 	add	a,c
   2254 23                 7117 	inc	hl
   2255 2B                 7118 	dec	hl
   2256 C5                 7119 	push	bc
   2257 4F                 7120 	ld	c, a
   2258 23                 7121 	inc	hl
   2259 7E                 7122 	ld	a, (hl)
   225A 47                 7123 	ld	b, a
   225B 79                 7124 	ld	a, c
   225C 2B                 7125 	dec	hl
   225D 77                 7126 	ld	(hl), a
   225E 78                 7127 	ld	a, b
   225F C1                 7128 	pop	bc
   2260 88                 7129 	adc	a,b
   2261 23                 7130 	inc	hl
   2262 77                 7131 	ld	(hl),a
                           7132 ;demo.c:1059: boxi++;
   2263 FD 21r50s17        7133 	ld	iy,#_boxi
   2267 FD 34 00           7134 	inc	0 (iy)
                           7135 ;demo.c:1060: if (boxi >= 4) boxi = 0;
   226A 3Ar50s17           7136 	ld	a,(#_boxi+0)
   226D D6 04              7137 	sub	a,#0x04
   226F 38 05              7138 	jr	C,00123$
   2271 21r50s17           7139 	ld	hl,#_boxi + 0
   2274 36 00              7140 	ld	(hl), #0x00
   2276                    7141 00123$:
                           7142 ;demo.c:1063: if (by <= 48) {
   2276 3E 30              7143 	ld	a,#0x30
   2278 FD 21r53s17        7144 	ld	iy,#_by
   227C FD 96 00           7145 	sub	a,0 (iy)
   227F 3E 00              7146 	ld	a,#0x00
   2281 FD 21r53s17        7147 	ld	iy,#_by
   2285 FD 9E 01           7148 	sbc	a,1 (iy)
   2288 FAr2Cs23           7149 	jp	M,00149$
                           7150 ;demo.c:1064: bx-=16;
   228B 21r51s17           7151 	ld	hl,#_bx
   228E 7E                 7152 	ld	a,(hl)
   228F C6 F0              7153 	add	a,#0xF0
   2291 77                 7154 	ld	(hl),a
   2292 23                 7155 	inc	hl
   2293 7E                 7156 	ld	a,(hl)
   2294 CE FF              7157 	adc	a,#0xFF
   2296 77                 7158 	ld	(hl),a
                           7159 ;demo.c:1066: if (bx>128)bo+=8;
   2297 3E 80              7160 	ld	a,#0x80
   2299 FD 21r51s17        7161 	ld	iy,#_bx
   229D FD 96 00           7162 	sub	a,0 (iy)
   22A0 3E 00              7163 	ld	a,#0x00
   22A2 FD 21r51s17        7164 	ld	iy,#_bx
   22A6 FD 9E 01           7165 	sbc	a,1 (iy)
   22A9 07                 7166 	rlca
   22AA E6 01              7167 	and	a,#0x01
   22AC 4F                 7168 	ld	c,a
   22AD B7                 7169 	or	a,a
   22AE 28 18              7170 	jr	Z,00125$
   22B0 21r57s17           7171 	ld	hl,#_bo
   22B3 7E                 7172 	ld	a,(hl)
   22B4 C6 08              7173 	add	a,#0x08
   22B6 23                 7174 	inc	hl
   22B7 2B                 7175 	dec	hl
   22B8 C5                 7176 	push	bc
   22B9 4F                 7177 	ld	c, a
   22BA 23                 7178 	inc	hl
   22BB 7E                 7179 	ld	a, (hl)
   22BC 47                 7180 	ld	b, a
   22BD 79                 7181 	ld	a, c
   22BE 2B                 7182 	dec	hl
   22BF 77                 7183 	ld	(hl), a
   22C0 78                 7184 	ld	a, b
   22C1 C1                 7185 	pop	bc
   22C2 CE 00              7186 	adc	a,#0x00
   22C4 23                 7187 	inc	hl
   22C5 77                 7188 	ld	(hl),a
   22C6 18 0C              7189 	jr	00126$
   22C8                    7190 00125$:
                           7191 ;demo.c:1067: else bo-=8;
   22C8 21r57s17           7192 	ld	hl,#_bo
   22CB 7E                 7193 	ld	a,(hl)
   22CC C6 F8              7194 	add	a,#0xF8
   22CE 77                 7195 	ld	(hl),a
   22CF 23                 7196 	inc	hl
   22D0 7E                 7197 	ld	a,(hl)
   22D1 CE FF              7198 	adc	a,#0xFF
   22D3 77                 7199 	ld	(hl),a
   22D4                    7200 00126$:
                           7201 ;demo.c:1068: if (bo > 192) bo = 0;
   22D4 3E C0              7202 	ld	a,#0xC0
   22D6 FD 21r57s17        7203 	ld	iy,#_bo
   22DA FD 96 00           7204 	sub	a,0 (iy)
   22DD 3E 00              7205 	ld	a,#0x00
   22DF FD 21r57s17        7206 	ld	iy,#_bo
   22E3 FD 9E 01           7207 	sbc	a,1 (iy)
   22E6 F2rF3s22           7208 	jp	P,00128$
   22E9 21r57s17           7209 	ld	hl,#_bo + 0
   22EC 36 00              7210 	ld	(hl), #0x00
   22EE 21r58s17           7211 	ld	hl,#_bo + 1
   22F1 36 00              7212 	ld	(hl), #0x00
   22F3                    7213 00128$:
                           7214 ;demo.c:1069: if (bx>128)by=84+bo;
   22F3 AF                 7215 	xor	a,a
   22F4 B1                 7216 	or	a,c
   22F5 28 12              7217 	jr	Z,00130$
   22F7 21r53s17           7218 	ld	hl,#_by
   22FA 3Ar57s17           7219 	ld	a,(#_bo+0)
   22FD C6 54              7220 	add	a,#0x54
   22FF 77                 7221 	ld	(hl),a
   2300 3Ar58s17           7222 	ld	a,(#_bo+1)
   2303 CE 00              7223 	adc	a,#0x00
   2305 23                 7224 	inc	hl
   2306 77                 7225 	ld	(hl),a
   2307 18 23              7226 	jr	00149$
   2309                    7227 00130$:
                           7228 ;demo.c:1070: else by=36+36+84+bo;
   2309 21r53s17           7229 	ld	hl,#_by
   230C 3Ar57s17           7230 	ld	a,(#_bo+0)
   230F C6 9C              7231 	add	a,#0x9C
   2311 77                 7232 	ld	(hl),a
   2312 3Ar58s17           7233 	ld	a,(#_bo+1)
   2315 CE 00              7234 	adc	a,#0x00
   2317 23                 7235 	inc	hl
   2318 77                 7236 	ld	(hl),a
   2319 18 11              7237 	jr	00149$
   231B                    7238 00135$:
                           7239 ;demo.c:1073: drawbox(bx,bt);
   231B 21r55s17           7240 	ld	hl,#_bt + 0
   231E 4E                 7241 	ld	c,(hl)
   231F 21r51s17           7242 	ld	hl,#_bx + 0
   2322 46                 7243 	ld	b,(hl)
   2323 79                 7244 	ld	a,c
   2324 F5                 7245 	push	af
   2325 33                 7246 	inc	sp
   2326 C5                 7247 	push	bc
   2327 33                 7248 	inc	sp
   2328 CDr76s1E           7249 	call	_drawbox
   232B F1                 7250 	pop	af
   232C                    7251 00149$:
   232C DD F9              7252 	ld	sp,ix
   232E DD E1              7253 	pop	ix
   2330 C9                 7254 	ret
   2331                    7255 _boxes_end::
   2331                    7256 __str_14:
   2331 4C 45 54 20 55 53  7257 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   235C 00                 7258 	.db 0x00
                           7259 ;demo.c:1084: void thewave() {
                           7260 ;	---------------------------------
                           7261 ; Function thewave
                           7262 ; ---------------------------------
   235D                    7263 _thewave_start::
   235D                    7264 _thewave:
   235D DD E5              7265 	push	ix
   235F DD 21 00 00        7266 	ld	ix,#0
   2363 DD 39              7267 	add	ix,sp
   2365 21 F7 FF           7268 	ld	hl,#-9
   2368 39                 7269 	add	hl,sp
   2369 F9                 7270 	ld	sp,hl
                           7271 ;demo.c:1092: if (initwave == 0) {
   236A AF                 7272 	xor	a,a
   236B 21r6As17           7273 	ld	hl,#_initwave + 0
   236E B6                 7274 	or	a,(hl)
   236F C2rF7s25           7275 	jp	NZ,00113$
                           7276 ;demo.c:1093: initwave = 1;
   2372 21r6As17           7277 	ld	hl,#_initwave + 0
   2375 36 01              7278 	ld	(hl), #0x01
                           7279 ;demo.c:1094: for (y = 0; y < 212; y++) {
   2377 DD 36 FE 00        7280 	ld	-2 (ix),#0x00
   237B                    7281 00128$:
   237B DD 7E FE           7282 	ld	a,-2 (ix)
   237E D6 D4              7283 	sub	a,#0xD4
   2380 D2rF3s23           7284 	jp	NC,00131$
                           7285 ;demo.c:1095: cmd.size_x = 256;
   2383 11r9Cs16           7286 	ld	de,#_cmd + 8
   2386 EB                 7287 	ex	de,hl
   2387 36 00              7288 	ld	(hl),#0x00
   2389 23                 7289 	inc	hl
   238A 36 01              7290 	ld	(hl),#0x01
                           7291 ;demo.c:1096: cmd.size_y = 2;
   238C 11r9Es16           7292 	ld	de,#_cmd + 10
   238F EB                 7293 	ex	de,hl
   2390 36 02              7294 	ld	(hl),#0x02
   2392 23                 7295 	inc	hl
   2393 36 00              7296 	ld	(hl),#0x00
                           7297 ;demo.c:1097: cmd.data = 0;
   2395 11rA0s16           7298 	ld	de,#_cmd + 12
   2398 3E 00              7299 	ld	a,#0x00
   239A 12                 7300 	ld	(de),a
                           7301 ;demo.c:1098: cmd.argument = 0x00; // from 70xY to left
   239B 11rA1s16           7302 	ld	de,#_cmd + 13
   239E 3E 00              7303 	ld	a,#0x00
   23A0 12                 7304 	ld	(de),a
                           7305 ;demo.c:1099: cmd.command = 0xd0; // vram to vram, y only
   23A1 11rA2s16           7306 	ld	de,#_cmd + 14
   23A4 3E D0              7307 	ld	a,#0xD0
   23A6 12                 7308 	ld	(de),a
                           7309 ;demo.c:1101: cmd.source_x = 0;
   23A7 21r94s16           7310 	ld	hl,#_cmd
   23AA 36 00              7311 	ld	(hl),#0x00
   23AC 23                 7312 	inc	hl
   23AD 36 00              7313 	ld	(hl),#0x00
                           7314 ;demo.c:1102: cmd.source_y = 0;
   23AF 11r96s16           7315 	ld	de,#_cmd + 2
   23B2 EB                 7316 	ex	de,hl
   23B3 36 00              7317 	ld	(hl),#0x00
   23B5 23                 7318 	inc	hl
   23B6 36 00              7319 	ld	(hl),#0x00
                           7320 ;demo.c:1103: cmd.dest_x = 0;
   23B8 11r98s16           7321 	ld	de,#_cmd + 4
   23BB EB                 7322 	ex	de,hl
   23BC 36 00              7323 	ld	(hl),#0x00
   23BE 23                 7324 	inc	hl
   23BF 36 00              7325 	ld	(hl),#0x00
                           7326 ;demo.c:1104: cmd.dest_y = 0+y;
   23C1 11r9As16           7327 	ld	de,#_cmd + 6
   23C4 DD 4E FE           7328 	ld	c,-2 (ix)
   23C7 06 00              7329 	ld	b,#0x00
   23C9 EB                 7330 	ex	de,hl
   23CA 71                 7331 	ld	(hl),c
   23CB 23                 7332 	inc	hl
   23CC 70                 7333 	ld	(hl),b
                           7334 ;demo.c:1105: vdp_copier(&cmd);
   23CD C5                 7335 	push	bc
   23CE 21r94s16           7336 	ld	hl,#_cmd
   23D1 E5                 7337 	push	hl
   23D2 CDr00s00           7338 	call	_vdp_copier
   23D5 F1                 7339 	pop	af
   23D6 C1                 7340 	pop	bc
                           7341 ;demo.c:1106: cmd.dest_y = 256+y;
   23D7 11r9As16           7342 	ld	de,#_cmd + 6
   23DA 21 00 01           7343 	ld	hl,#0x0100
   23DD 09                 7344 	add	hl,bc
   23DE 4D                 7345 	ld	c,l
   23DF 44                 7346 	ld	b,h
   23E0 EB                 7347 	ex	de,hl
   23E1 71                 7348 	ld	(hl),c
   23E2 23                 7349 	inc	hl
   23E3 70                 7350 	ld	(hl),b
                           7351 ;demo.c:1107: vdp_copier(&cmd);
   23E4 21r94s16           7352 	ld	hl,#_cmd
   23E7 E5                 7353 	push	hl
   23E8 CDr00s00           7354 	call	_vdp_copier
   23EB F1                 7355 	pop	af
                           7356 ;demo.c:1108: waitVB();
   23EC 76                 7357 		halt 
                           7358 ;demo.c:1094: for (y = 0; y < 212; y++) {
   23ED DD 34 FE           7359 	inc	-2 (ix)
   23F0 C3r7Bs23           7360 	jp	00128$
   23F3                    7361 00131$:
                           7362 ;demo.c:1112: for (y = 9; y < 15; y+=1) {
   23F3 DD 36 FE 09        7363 	ld	-2 (ix),#0x09
   23F7                    7364 00132$:
   23F7 DD 7E FE           7365 	ld	a,-2 (ix)
   23FA D6 0F              7366 	sub	a,#0x0F
   23FC D2rF7s25           7367 	jp	NC,00113$
                           7368 ;demo.c:1113: for (x = 0; x < 21; x+=1) {
   23FF DD 7E FE           7369 	ld	a,-2 (ix)
   2402 87                 7370 	add	a,a
   2403 DD 77 F9           7371 	ld	-7 (ix),a
   2406 DD 36 FF 00        7372 	ld	-1 (ix),#0x00
   240A                    7373 00108$:
   240A DD 7E FF           7374 	ld	a,-1 (ix)
   240D D6 15              7375 	sub	a,#0x15
   240F D2rF1s25           7376 	jp	NC,00134$
                           7377 ;demo.c:1114: if (x > 6 && x < 13) continue; 
   2412 3E 06              7378 	ld	a,#0x06
   2414 DD 96 FF           7379 	sub	a,-1 (ix)
   2417 30 08              7380 	jr	NC,00102$
   2419 DD 7E FF           7381 	ld	a,-1 (ix)
   241C D6 0D              7382 	sub	a,#0x0D
   241E DArEBs25           7383 	jp	C,00110$
   2421                    7384 00102$:
                           7385 ;demo.c:1116: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   2421 3E 06              7386 	ld	a,#0x06
   2423 DD 96 FF           7387 	sub	a,-1 (ix)
   2426 DAr7Cs24           7388 	jp	C,00105$
   2429 DD 56 FF           7389 	ld	d,-1 (ix)
   242C 0E 00              7390 	ld	c,#0x00
   242E CB 22              7391 	sla	d
   2430 CB 11              7392 	rl	c
   2432 CB 22              7393 	sla	d
   2434 CB 11              7394 	rl	c
   2436 CB 22              7395 	sla	d
   2438 CB 11              7396 	rl	c
   243A 7A                 7397 	ld	a,d
   243B C6 69              7398 	add	a,#0x69
   243D 57                 7399 	ld	d,a
   243E 79                 7400 	ld	a,c
   243F CE 00              7401 	adc	a,#0x00
   2441 47                 7402 	ld	b,a
   2442 DD 5E FE           7403 	ld	e,-2 (ix)
   2445 0E 00              7404 	ld	c,#0x00
   2447 CB 23              7405 	sla	e
   2449 CB 11              7406 	rl	c
   244B CB 23              7407 	sla	e
   244D CB 11              7408 	rl	c
   244F CB 23              7409 	sla	e
   2451 CB 11              7410 	rl	c
   2453 7A                 7411 	ld	a,d
   2454 83                 7412 	add	a,e
   2455 5F                 7413 	ld	e,a
   2456 78                 7414 	ld	a,b
   2457 89                 7415 	adc	a,c
   2458 0E 00              7416 	ld	c,#0x00
   245A 3Er00              7417 	ld	a,#<_sintab
   245C 83                 7418 	add	a,e
   245D 5F                 7419 	ld	e,a
   245E 3Es00              7420 	ld	a,#>_sintab
   2460 89                 7421 	adc	a,c
   2461 6B                 7422 	ld	l,e
   2462 67                 7423 	ld	h,a
   2463 5E                 7424 	ld	e,(hl)
   2464 CB 2B              7425 	sra	e
   2466 CB 2B              7426 	sra	e
   2468 CB 2B              7427 	sra	e
   246A CB 2B              7428 	sra	e
   246C 7B                 7429 	ld	a,e
   246D 17                 7430 	rla	
   246E 9F                 7431 	sbc	a,a
   246F 4F                 7432 	ld	c,a
   2470 7B                 7433 	ld	a,e
   2471 C6 07              7434 	add	a,#0x07
   2473 DD 77 FC           7435 	ld	-4 (ix),a
   2476 79                 7436 	ld	a,c
   2477 CE 00              7437 	adc	a,#0x00
   2479 DD 77 FD           7438 	ld	-3 (ix),a
   247C                    7439 00105$:
                           7440 ;demo.c:1117: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   247C DD 7E FF           7441 	ld	a,-1 (ix)
   247F D6 0D              7442 	sub	a,#0x0D
   2481 DArE2s24           7443 	jp	C,00107$
   2484 DD 5E FF           7444 	ld	e,-1 (ix)
   2487 16 00              7445 	ld	d,#0x00
   2489 21 17 00           7446 	ld	hl,#0x0017
   248C 19                 7447 	add	hl,de
   248D EB                 7448 	ex	de,hl
   248E CB 23              7449 	sla	e
   2490 CB 12              7450 	rl	d
   2492 CB 23              7451 	sla	e
   2494 CB 12              7452 	rl	d
   2496 CB 23              7453 	sla	e
   2498 CB 12              7454 	rl	d
   249A 21 69 00           7455 	ld	hl,#0x0069
   249D 19                 7456 	add	hl,de
   249E 45                 7457 	ld	b,l
   249F 54                 7458 	ld	d,h
   24A0 DD 4E FE           7459 	ld	c,-2 (ix)
   24A3 1E 00              7460 	ld	e,#0x00
   24A5 79                 7461 	ld	a,c
   24A6 C6 13              7462 	add	a,#0x13
   24A8 4F                 7463 	ld	c,a
   24A9 7B                 7464 	ld	a,e
   24AA CE 00              7465 	adc	a,#0x00
   24AC 5F                 7466 	ld	e,a
   24AD CB 21              7467 	sla	c
   24AF CB 13              7468 	rl	e
   24B1 CB 21              7469 	sla	c
   24B3 CB 13              7470 	rl	e
   24B5 CB 21              7471 	sla	c
   24B7 CB 13              7472 	rl	e
   24B9 78                 7473 	ld	a,b
   24BA 81                 7474 	add	a,c
   24BB 4F                 7475 	ld	c,a
   24BC 7A                 7476 	ld	a,d
   24BD 8B                 7477 	adc	a,e
   24BE 1E 00              7478 	ld	e,#0x00
   24C0 3Er00              7479 	ld	a,#<_sintab
   24C2 81                 7480 	add	a,c
   24C3 4F                 7481 	ld	c,a
   24C4 3Es00              7482 	ld	a,#>_sintab
   24C6 8B                 7483 	adc	a,e
   24C7 69                 7484 	ld	l,c
   24C8 67                 7485 	ld	h,a
   24C9 4E                 7486 	ld	c,(hl)
   24CA CB 29              7487 	sra	c
   24CC CB 29              7488 	sra	c
   24CE CB 29              7489 	sra	c
   24D0 CB 29              7490 	sra	c
   24D2 79                 7491 	ld	a,c
   24D3 17                 7492 	rla	
   24D4 9F                 7493 	sbc	a,a
   24D5 5F                 7494 	ld	e,a
   24D6 79                 7495 	ld	a,c
   24D7 C6 07              7496 	add	a,#0x07
   24D9 DD 77 FC           7497 	ld	-4 (ix),a
   24DC 7B                 7498 	ld	a,e
   24DD CE 00              7499 	adc	a,#0x00
   24DF DD 77 FD           7500 	ld	-3 (ix),a
   24E2                    7501 00107$:
                           7502 ;demo.c:1119: cmd.size_x = 11;
   24E2 11r9Cs16           7503 	ld	de,#_cmd + 8
   24E5 EB                 7504 	ex	de,hl
   24E6 36 0B              7505 	ld	(hl),#0x0B
   24E8 23                 7506 	inc	hl
   24E9 36 00              7507 	ld	(hl),#0x00
                           7508 ;demo.c:1120: cmd.size_y = 28-(14-px);
   24EB 21r9Es16           7509 	ld	hl,#_cmd + 10
   24EE DD 75 FA           7510 	ld	-6 (ix),l
   24F1 DD 74 FB           7511 	ld	-5 (ix),h
   24F4 3E 0E              7512 	ld	a,#0x0E
   24F6 DD 96 FC           7513 	sub	a,-4 (ix)
   24F9 4F                 7514 	ld	c,a
   24FA 3E 00              7515 	ld	a,#0x00
   24FC DD 9E FD           7516 	sbc	a,-3 (ix)
   24FF 5F                 7517 	ld	e,a
   2500 3E 1C              7518 	ld	a,#0x1C
   2502 91                 7519 	sub	a,c
   2503 57                 7520 	ld	d,a
   2504 3E 00              7521 	ld	a,#0x00
   2506 9B                 7522 	sbc	a,e
   2507 47                 7523 	ld	b,a
   2508 DD 6E FA           7524 	ld	l,-6 (ix)
   250B DD 66 FB           7525 	ld	h,-5 (ix)
   250E 72                 7526 	ld	(hl),d
   250F 23                 7527 	inc	hl
   2510 70                 7528 	ld	(hl),b
                           7529 ;demo.c:1121: cmd.data = 0;
   2511 21rA0s16           7530 	ld	hl,#_cmd + 12
   2514 36 00              7531 	ld	(hl),#0x00
                           7532 ;demo.c:1122: cmd.argument = 0x00; // from 70xY to left
   2516 21rA1s16           7533 	ld	hl,#_cmd + 13
   2519 36 00              7534 	ld	(hl),#0x00
                           7535 ;demo.c:1123: cmd.command = 0x98; // vram to vram, y only
   251B 21rA2s16           7536 	ld	hl,#_cmd + 14
   251E 36 98              7537 	ld	(hl),#0x98
                           7538 ;demo.c:1125: cmd.source_x = twelvetimes[px];
   2520 DD 46 FC           7539 	ld	b,-4 (ix)
   2523 DD 56 FD           7540 	ld	d,-3 (ix)
   2526 CB 20              7541 	sla	b
   2528 CB 12              7542 	rl	d
   252A 3Er20              7543 	ld	a,#<_twelvetimes
   252C 80                 7544 	add	a,b
   252D 47                 7545 	ld	b,a
   252E 3Es01              7546 	ld	a,#>_twelvetimes
   2530 8A                 7547 	adc	a,d
   2531 68                 7548 	ld	l,b
   2532 67                 7549 	ld	h,a
   2533 46                 7550 	ld	b,(hl)
   2534 23                 7551 	inc	hl
   2535 56                 7552 	ld	d,(hl)
   2536 21r94s16           7553 	ld	hl,#_cmd
   2539 70                 7554 	ld	(hl),b
   253A 23                 7555 	inc	hl
   253B 72                 7556 	ld	(hl),d
                           7557 ;demo.c:1126: cmd.source_y = 768+183+(15-px);
   253C 23                 7558 	inc	hl
   253D DD 75 FA           7559 	ld	-6 (ix),l
   2540 DD 74 FB           7560 	ld	-5 (ix),h
   2543 3E C6              7561 	ld	a,#0xC6
   2545 DD 96 FC           7562 	sub	a,-4 (ix)
   2548 47                 7563 	ld	b,a
   2549 3E 03              7564 	ld	a,#0x03
   254B DD 9E FD           7565 	sbc	a,-3 (ix)
   254E 57                 7566 	ld	d,a
   254F DD 6E FA           7567 	ld	l,-6 (ix)
   2552 DD 66 FB           7568 	ld	h,-5 (ix)
   2555 70                 7569 	ld	(hl),b
   2556 23                 7570 	inc	hl
   2557 72                 7571 	ld	(hl),d
                           7572 ;demo.c:1127: cmd.dest_x = 0+twelvetimes[x];
   2558 21r98s16           7573 	ld	hl,#_cmd + 4
   255B DD 75 FA           7574 	ld	-6 (ix),l
   255E DD 74 FB           7575 	ld	-5 (ix),h
   2561 DD 7E FF           7576 	ld	a,-1 (ix)
   2564 87                 7577 	add	a,a
   2565 C6r20              7578 	add	a,#<_twelvetimes
   2567 6F                 7579 	ld	l,a
   2568 3Es01              7580 	ld	a,#>_twelvetimes
   256A CE 00              7581 	adc	a,#0x00
   256C 67                 7582 	ld	h,a
   256D 46                 7583 	ld	b,(hl)
   256E 23                 7584 	inc	hl
   256F 56                 7585 	ld	d,(hl)
   2570 DD 6E FA           7586 	ld	l,-6 (ix)
   2573 DD 66 FB           7587 	ld	h,-5 (ix)
   2576 70                 7588 	ld	(hl),b
   2577 23                 7589 	inc	hl
   2578 72                 7590 	ld	(hl),d
                           7591 ;demo.c:1128: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   2579 21r9As16           7592 	ld	hl,#_cmd + 6
   257C DD 75 FA           7593 	ld	-6 (ix),l
   257F DD 74 FB           7594 	ld	-5 (ix),h
   2582 3Er54              7595 	ld	a,#<_eighttimes
   2584 DD 86 F9           7596 	add	a,-7 (ix)
   2587 6F                 7597 	ld	l,a
   2588 3Es01              7598 	ld	a,#>_eighttimes
   258A CE 00              7599 	adc	a,#0x00
   258C 67                 7600 	ld	h,a
   258D 46                 7601 	ld	b,(hl)
   258E 23                 7602 	inc	hl
   258F 56                 7603 	ld	d,(hl)
   2590 78                 7604 	ld	a,b
   2591 C6 04              7605 	add	a,#0x04
   2593 47                 7606 	ld	b,a
   2594 7A                 7607 	ld	a,d
   2595 CE 00              7608 	adc	a,#0x00
   2597 57                 7609 	ld	d,a
   2598 78                 7610 	ld	a,b
   2599 81                 7611 	add	a,c
   259A 47                 7612 	ld	b,a
   259B 7A                 7613 	ld	a,d
   259C 8B                 7614 	adc	a,e
   259D 57                 7615 	ld	d,a
   259E DD 6E FA           7616 	ld	l,-6 (ix)
   25A1 DD 66 FB           7617 	ld	h,-5 (ix)
   25A4 70                 7618 	ld	(hl),b
   25A5 23                 7619 	inc	hl
   25A6 72                 7620 	ld	(hl),d
                           7621 ;demo.c:1129: vdp_copier(&cmd);
   25A7 C5                 7622 	push	bc
   25A8 D5                 7623 	push	de
   25A9 21r94s16           7624 	ld	hl,#_cmd
   25AC E5                 7625 	push	hl
   25AD CDr00s00           7626 	call	_vdp_copier
   25B0 F1                 7627 	pop	af
   25B1 D1                 7628 	pop	de
   25B2 C1                 7629 	pop	bc
                           7630 ;demo.c:1130: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   25B3 21r9As16           7631 	ld	hl,#_cmd + 6
   25B6 DD 75 FA           7632 	ld	-6 (ix),l
   25B9 DD 74 FB           7633 	ld	-5 (ix),h
   25BC 3Er54              7634 	ld	a,#<_eighttimes
   25BE DD 86 F9           7635 	add	a,-7 (ix)
   25C1 6F                 7636 	ld	l,a
   25C2 3Es01              7637 	ld	a,#>_eighttimes
   25C4 CE 00              7638 	adc	a,#0x00
   25C6 67                 7639 	ld	h,a
   25C7 46                 7640 	ld	b,(hl)
   25C8 23                 7641 	inc	hl
   25C9 56                 7642 	ld	d,(hl)
   25CA 78                 7643 	ld	a,b
   25CB C6 04              7644 	add	a,#0x04
   25CD 47                 7645 	ld	b,a
   25CE 7A                 7646 	ld	a,d
   25CF CE 00              7647 	adc	a,#0x00
   25D1 C6 01              7648 	add	a,#0x01
   25D3 57                 7649 	ld	d,a
   25D4 78                 7650 	ld	a,b
   25D5 81                 7651 	add	a,c
   25D6 4F                 7652 	ld	c,a
   25D7 7A                 7653 	ld	a,d
   25D8 8B                 7654 	adc	a,e
   25D9 5F                 7655 	ld	e,a
   25DA DD 6E FA           7656 	ld	l,-6 (ix)
   25DD DD 66 FB           7657 	ld	h,-5 (ix)
   25E0 71                 7658 	ld	(hl),c
   25E1 23                 7659 	inc	hl
   25E2 73                 7660 	ld	(hl),e
                           7661 ;demo.c:1131: vdp_copier(&cmd);
   25E3 21r94s16           7662 	ld	hl,#_cmd
   25E6 E5                 7663 	push	hl
   25E7 CDr00s00           7664 	call	_vdp_copier
   25EA F1                 7665 	pop	af
   25EB                    7666 00110$:
                           7667 ;demo.c:1113: for (x = 0; x < 21; x+=1) {
   25EB DD 34 FF           7668 	inc	-1 (ix)
   25EE C3r0As24           7669 	jp	00108$
   25F1                    7670 00134$:
                           7671 ;demo.c:1112: for (y = 9; y < 15; y+=1) {
   25F1 DD 34 FE           7672 	inc	-2 (ix)
   25F4 C3rF7s23           7673 	jp	00132$
   25F7                    7674 00113$:
                           7675 ;demo.c:1137: if (buf == -1) { bo = 0; ya = 0; }
   25F7 3Ar6Bs17           7676 	ld	a,(#_buf+0)
   25FA 3C                 7677 	inc	a
   25FB 20 06              7678 	jr	NZ,00188$
   25FD 3Ar6Cs17           7679 	ld	a,(#_buf+1)
   2600 3C                 7680 	inc	a
   2601 28 02              7681 	jr	Z,00189$
   2603                    7682 00188$:
   2603 18 05              7683 	jr	00115$
   2605                    7684 00189$:
   2605 01 00 00           7685 	ld	bc,#0x0000
   2608 18 03              7686 	jr	00116$
   260A                    7687 00115$:
                           7688 ;demo.c:1138: else { bo = 256; ya = 6;}
   260A 01 00 01           7689 	ld	bc,#0x0100
   260D                    7690 00116$:
                           7691 ;demo.c:1140: cmd.size_x = 72;
   260D 11r9Cs16           7692 	ld	de,#_cmd + 8
   2610 EB                 7693 	ex	de,hl
   2611 36 48              7694 	ld	(hl),#0x48
   2613 23                 7695 	inc	hl
   2614 36 00              7696 	ld	(hl),#0x00
                           7697 ;demo.c:1141: cmd.size_y = 80;
   2616 11r9Es16           7698 	ld	de,#_cmd + 10
   2619 EB                 7699 	ex	de,hl
   261A 36 50              7700 	ld	(hl),#0x50
   261C 23                 7701 	inc	hl
   261D 36 00              7702 	ld	(hl),#0x00
                           7703 ;demo.c:1142: cmd.data = 0;
   261F 11rA0s16           7704 	ld	de,#_cmd + 12
   2622 3E 00              7705 	ld	a,#0x00
   2624 12                 7706 	ld	(de),a
                           7707 ;demo.c:1143: cmd.argument = 0x00; // from 70xY to left
   2625 11rA1s16           7708 	ld	de,#_cmd + 13
   2628 3E 00              7709 	ld	a,#0x00
   262A 12                 7710 	ld	(de),a
                           7711 ;demo.c:1144: cmd.command = 0xd0; // vram to vram, y only
   262B 11rA2s16           7712 	ld	de,#_cmd + 14
   262E 3E D0              7713 	ld	a,#0xD0
   2630 12                 7714 	ld	(de),a
                           7715 ;demo.c:1145: cmd.source_x = 178;
   2631 21r94s16           7716 	ld	hl,#_cmd
   2634 36 B2              7717 	ld	(hl),#0xB2
   2636 23                 7718 	inc	hl
   2637 36 00              7719 	ld	(hl),#0x00
                           7720 ;demo.c:1146: cmd.source_y = 0;
   2639 11r96s16           7721 	ld	de,#_cmd + 2
   263C EB                 7722 	ex	de,hl
   263D 36 00              7723 	ld	(hl),#0x00
   263F 23                 7724 	inc	hl
   2640 36 00              7725 	ld	(hl),#0x00
                           7726 ;demo.c:1147: cmd.dest_x = 84;
   2642 11r98s16           7727 	ld	de,#_cmd + 4
   2645 EB                 7728 	ex	de,hl
   2646 36 54              7729 	ld	(hl),#0x54
   2648 23                 7730 	inc	hl
   2649 36 00              7731 	ld	(hl),#0x00
                           7732 ;demo.c:1148: cmd.dest_y = 72+bo;
   264B 11r9As16           7733 	ld	de,#_cmd + 6
   264E 21 48 00           7734 	ld	hl,#0x0048
   2651 09                 7735 	add	hl,bc
   2652 4D                 7736 	ld	c,l
   2653 44                 7737 	ld	b,h
   2654 EB                 7738 	ex	de,hl
   2655 71                 7739 	ld	(hl),c
   2656 23                 7740 	inc	hl
   2657 70                 7741 	ld	(hl),b
                           7742 ;demo.c:1149: vdp_copier(&cmd);
   2658 C5                 7743 	push	bc
   2659 21r94s16           7744 	ld	hl,#_cmd
   265C E5                 7745 	push	hl
   265D CDr00s00           7746 	call	_vdp_copier
   2660 F1                 7747 	pop	af
   2661 C1                 7748 	pop	bc
                           7749 ;demo.c:1151: for (y = 0; y < 5; y+=1) {
   2662 DD 36 FE 00        7750 	ld	-2 (ix),#0x00
   2666                    7751 00140$:
   2666 DD 7E FE           7752 	ld	a,-2 (ix)
   2669 D6 05              7753 	sub	a,#0x05
   266B D2rCCs27           7754 	jp	NC,00143$
                           7755 ;demo.c:1152: for (x = 0; x < 6; x+=1) {
   266E DD 7E FE           7756 	ld	a,-2 (ix)
   2671 87                 7757 	add	a,a
   2672 DD 77 F9           7758 	ld	-7 (ix),a
   2675 DD 36 FF 00        7759 	ld	-1 (ix),#0x00
   2679                    7760 00136$:
   2679 DD 7E FF           7761 	ld	a,-1 (ix)
   267C D6 06              7762 	sub	a,#0x06
   267E D2rC6s27           7763 	jp	NC,00142$
                           7764 ;demo.c:1154: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   2681 DD 5E FF           7765 	ld	e,-1 (ix)
   2684 16 00              7766 	ld	d,#0x00
   2686 CB 23              7767 	sla	e
   2688 CB 12              7768 	rl	d
   268A CB 23              7769 	sla	e
   268C CB 12              7770 	rl	d
   268E 3Ar6Ds17           7771 	ld	a,(#_ffa+0)
   2691 83                 7772 	add	a,e
   2692 DD 77 FA           7773 	ld	-6 (ix),a
   2695 FD 21r6Ds17        7774 	ld	iy,#_ffa
   2699 FD 7E 01           7775 	ld	a,1 (iy)
   269C 8A                 7776 	adc	a,d
   269D DD 77 FB           7777 	ld	-5 (ix),a
   26A0 DD 5E FE           7778 	ld	e,-2 (ix)
   26A3 16 00              7779 	ld	d,#0x00
   26A5 CB 23              7780 	sla	e
   26A7 CB 12              7781 	rl	d
   26A9 CB 23              7782 	sla	e
   26AB CB 12              7783 	rl	d
   26AD DD 7E FA           7784 	ld	a,-6 (ix)
   26B0 83                 7785 	add	a,e
   26B1 5F                 7786 	ld	e,a
   26B2 DD 7E FB           7787 	ld	a,-5 (ix)
   26B5 8A                 7788 	adc	a,d
   26B6 16 00              7789 	ld	d,#0x00
   26B8 21r00s00           7790 	ld	hl,#_sintab
   26BB 19                 7791 	add	hl,de
   26BC 5E                 7792 	ld	e,(hl)
   26BD CB 2B              7793 	sra	e
   26BF CB 2B              7794 	sra	e
   26C1 CB 2B              7795 	sra	e
   26C3 CB 2B              7796 	sra	e
   26C5 7B                 7797 	ld	a,e
   26C6 17                 7798 	rla	
   26C7 9F                 7799 	sbc	a,a
   26C8 57                 7800 	ld	d,a
   26C9 21 07 00           7801 	ld	hl,#0x0007
   26CC 19                 7802 	add	hl,de
   26CD DD 75 FC           7803 	ld	-4 (ix),l
                           7804 ;demo.c:1155: if (px < 0) px = 0; 
   26D0 DD 74 FD           7805 	ld	-3 (ix),h
   26D3 7C                 7806 	ld	a, h
   26D4 CB 7F              7807 	bit	7,a
   26D6 28 08              7808 	jr	Z,00118$
   26D8 DD 36 FC 00        7809 	ld	-4 (ix),#0x00
   26DC DD 36 FD 00        7810 	ld	-3 (ix),#0x00
   26E0                    7811 00118$:
                           7812 ;demo.c:1156: if (px > 14) px = 14; 
   26E0 3E 0E              7813 	ld	a,#0x0E
   26E2 DD 96 FC           7814 	sub	a,-4 (ix)
   26E5 3E 00              7815 	ld	a,#0x00
   26E7 DD 9E FD           7816 	sbc	a,-3 (ix)
   26EA F2rF5s26           7817 	jp	P,00120$
   26ED DD 36 FC 0E        7818 	ld	-4 (ix),#0x0E
   26F1 DD 36 FD 00        7819 	ld	-3 (ix),#0x00
   26F5                    7820 00120$:
                           7821 ;demo.c:1158: cmd.size_x = 12;
   26F5 11r9Cs16           7822 	ld	de,#_cmd + 8
   26F8 EB                 7823 	ex	de,hl
   26F9 36 0C              7824 	ld	(hl),#0x0C
   26FB 23                 7825 	inc	hl
   26FC 36 00              7826 	ld	(hl),#0x00
                           7827 ;demo.c:1159: cmd.size_y = 11;
   26FE 11r9Es16           7828 	ld	de,#_cmd + 10
   2701 EB                 7829 	ex	de,hl
   2702 36 0B              7830 	ld	(hl),#0x0B
   2704 23                 7831 	inc	hl
   2705 36 00              7832 	ld	(hl),#0x00
                           7833 ;demo.c:1160: cmd.data = 0;
   2707 11rA0s16           7834 	ld	de,#_cmd + 12
   270A 3E 00              7835 	ld	a,#0x00
   270C 12                 7836 	ld	(de),a
                           7837 ;demo.c:1161: cmd.argument = 0x00; // from 70xY to left
   270D 11rA1s16           7838 	ld	de,#_cmd + 13
   2710 3E 00              7839 	ld	a,#0x00
   2712 12                 7840 	ld	(de),a
                           7841 ;demo.c:1162: cmd.command = 0x98; // vram to vram, y only
   2713 11rA2s16           7842 	ld	de,#_cmd + 14
   2716 3E 98              7843 	ld	a,#0x98
   2718 12                 7844 	ld	(de),a
                           7845 ;demo.c:1164: cmd.source_x = twelvetimes[px];
   2719 DD 5E FC           7846 	ld	e,-4 (ix)
   271C DD 56 FD           7847 	ld	d,-3 (ix)
   271F CB 23              7848 	sla	e
   2721 CB 12              7849 	rl	d
   2723 21r20s01           7850 	ld	hl,#_twelvetimes
   2726 19                 7851 	add	hl,de
   2727 5E                 7852 	ld	e,(hl)
   2728 23                 7853 	inc	hl
   2729 56                 7854 	ld	d,(hl)
   272A 21r94s16           7855 	ld	hl,#_cmd
   272D 73                 7856 	ld	(hl),e
   272E 23                 7857 	inc	hl
   272F 72                 7858 	ld	(hl),d
                           7859 ;demo.c:1165: cmd.source_y = 768+183+16-px;
   2730 23                 7860 	inc	hl
   2731 DD 75 FA           7861 	ld	-6 (ix),l
   2734 DD 74 FB           7862 	ld	-5 (ix),h
   2737 3E C7              7863 	ld	a,#0xC7
   2739 DD 96 FC           7864 	sub	a,-4 (ix)
   273C 5F                 7865 	ld	e,a
   273D 3E 03              7866 	ld	a,#0x03
   273F DD 9E FD           7867 	sbc	a,-3 (ix)
   2742 57                 7868 	ld	d,a
   2743 DD 6E FA           7869 	ld	l,-6 (ix)
   2746 DD 66 FB           7870 	ld	h,-5 (ix)
   2749 73                 7871 	ld	(hl),e
   274A 23                 7872 	inc	hl
   274B 72                 7873 	ld	(hl),d
                           7874 ;demo.c:1166: cmd.dest_x = 84+twelvetimes[x];
   274C 21r98s16           7875 	ld	hl,#_cmd + 4
   274F DD 75 FA           7876 	ld	-6 (ix),l
   2752 DD 74 FB           7877 	ld	-5 (ix),h
   2755 DD 7E FF           7878 	ld	a,-1 (ix)
   2758 87                 7879 	add	a,a
   2759 C6r20              7880 	add	a,#<_twelvetimes
   275B 6F                 7881 	ld	l,a
   275C 3Es01              7882 	ld	a,#>_twelvetimes
   275E CE 00              7883 	adc	a,#0x00
   2760 67                 7884 	ld	h,a
   2761 5E                 7885 	ld	e,(hl)
   2762 23                 7886 	inc	hl
   2763 56                 7887 	ld	d,(hl)
   2764 21 54 00           7888 	ld	hl,#0x0054
   2767 19                 7889 	add	hl,de
   2768 EB                 7890 	ex	de,hl
   2769 DD 6E FA           7891 	ld	l,-6 (ix)
   276C DD 66 FB           7892 	ld	h,-5 (ix)
   276F 73                 7893 	ld	(hl),e
   2770 23                 7894 	inc	hl
   2771 72                 7895 	ld	(hl),d
                           7896 ;demo.c:1167: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   2772 21r9As16           7897 	ld	hl,#_cmd + 6
   2775 DD 75 FA           7898 	ld	-6 (ix),l
   2778 DD 74 FB           7899 	ld	-5 (ix),h
   277B 3Er54              7900 	ld	a,#<_eighttimes
   277D DD 86 F9           7901 	add	a,-7 (ix)
   2780 6F                 7902 	ld	l,a
   2781 3Es01              7903 	ld	a,#>_eighttimes
   2783 CE 00              7904 	adc	a,#0x00
   2785 67                 7905 	ld	h,a
   2786 5E                 7906 	ld	e,(hl)
   2787 23                 7907 	inc	hl
   2788 56                 7908 	ld	d,(hl)
   2789 13                 7909 	inc	de
   278A 13                 7910 	inc	de
   278B 13                 7911 	inc	de
   278C 13                 7912 	inc	de
   278D 79                 7913 	ld	a,c
   278E 83                 7914 	add	a,e
   278F DD 77 F7           7915 	ld	-9 (ix),a
   2792 78                 7916 	ld	a,b
   2793 8A                 7917 	adc	a,d
   2794 DD 77 F8           7918 	ld	-8 (ix),a
   2797 3E 0E              7919 	ld	a,#0x0E
   2799 DD 96 FC           7920 	sub	a,-4 (ix)
   279C 5F                 7921 	ld	e,a
   279D 3E 00              7922 	ld	a,#0x00
   279F DD 9E FD           7923 	sbc	a,-3 (ix)
   27A2 57                 7924 	ld	d,a
   27A3 DD 7E F7           7925 	ld	a,-9 (ix)
   27A6 83                 7926 	add	a,e
   27A7 5F                 7927 	ld	e,a
   27A8 DD 7E F8           7928 	ld	a,-8 (ix)
   27AB 8A                 7929 	adc	a,d
   27AC 57                 7930 	ld	d,a
   27AD DD 6E FA           7931 	ld	l,-6 (ix)
   27B0 DD 66 FB           7932 	ld	h,-5 (ix)
   27B3 73                 7933 	ld	(hl),e
   27B4 23                 7934 	inc	hl
   27B5 72                 7935 	ld	(hl),d
                           7936 ;demo.c:1168: vdp_copier(&cmd);
   27B6 C5                 7937 	push	bc
   27B7 21r94s16           7938 	ld	hl,#_cmd
   27BA E5                 7939 	push	hl
   27BB CDr00s00           7940 	call	_vdp_copier
   27BE F1                 7941 	pop	af
   27BF C1                 7942 	pop	bc
                           7943 ;demo.c:1152: for (x = 0; x < 6; x+=1) {
   27C0 DD 34 FF           7944 	inc	-1 (ix)
   27C3 C3r79s26           7945 	jp	00136$
   27C6                    7946 00142$:
                           7947 ;demo.c:1151: for (y = 0; y < 5; y+=1) {
   27C6 DD 34 FE           7948 	inc	-2 (ix)
   27C9 C3r66s26           7949 	jp	00140$
   27CC                    7950 00143$:
                           7951 ;demo.c:1173: for (x = 0; x < 6; x+=1) {
   27CC DD 36 FF 00        7952 	ld	-1 (ix),#0x00
   27D0                    7953 00144$:
   27D0 DD 7E FF           7954 	ld	a,-1 (ix)
   27D3 D6 06              7955 	sub	a,#0x06
   27D5 D2r16s29           7956 	jp	NC,00147$
                           7957 ;demo.c:1174: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   27D8 DD 5E FF           7958 	ld	e,-1 (ix)
   27DB 16 00              7959 	ld	d,#0x00
   27DD CB 23              7960 	sla	e
   27DF CB 12              7961 	rl	d
   27E1 CB 23              7962 	sla	e
   27E3 CB 12              7963 	rl	d
   27E5 3Ar6Ds17           7964 	ld	a,(#_ffa+0)
   27E8 83                 7965 	add	a,e
   27E9 5F                 7966 	ld	e,a
   27EA FD 21r6Ds17        7967 	ld	iy,#_ffa
   27EE FD 7E 01           7968 	ld	a,1 (iy)
   27F1 8A                 7969 	adc	a,d
   27F2 57                 7970 	ld	d,a
   27F3 21 14 00           7971 	ld	hl,#0x0014
   27F6 19                 7972 	add	hl,de
   27F7 5D                 7973 	ld	e,l
   27F8 16 00              7974 	ld	d,#0x00
   27FA 21r00s00           7975 	ld	hl,#_sintab
   27FD 19                 7976 	add	hl,de
   27FE 5E                 7977 	ld	e,(hl)
   27FF CB 2B              7978 	sra	e
   2801 CB 2B              7979 	sra	e
   2803 CB 2B              7980 	sra	e
   2805 CB 2B              7981 	sra	e
   2807 7B                 7982 	ld	a,e
   2808 17                 7983 	rla	
   2809 9F                 7984 	sbc	a,a
   280A 57                 7985 	ld	d,a
   280B 21 07 00           7986 	ld	hl,#0x0007
   280E 19                 7987 	add	hl,de
   280F DD 75 FC           7988 	ld	-4 (ix),l
                           7989 ;demo.c:1175: if (px < 0) px = 0; 
   2812 DD 74 FD           7990 	ld	-3 (ix),h
   2815 7C                 7991 	ld	a, h
   2816 CB 7F              7992 	bit	7,a
   2818 28 08              7993 	jr	Z,00122$
   281A DD 36 FC 00        7994 	ld	-4 (ix),#0x00
   281E DD 36 FD 00        7995 	ld	-3 (ix),#0x00
   2822                    7996 00122$:
                           7997 ;demo.c:1176: if (px > 14) px = 14; 
   2822 3E 0E              7998 	ld	a,#0x0E
   2824 DD 96 FC           7999 	sub	a,-4 (ix)
   2827 3E 00              8000 	ld	a,#0x00
   2829 DD 9E FD           8001 	sbc	a,-3 (ix)
   282C F2r37s28           8002 	jp	P,00124$
   282F DD 36 FC 0E        8003 	ld	-4 (ix),#0x0E
   2833 DD 36 FD 00        8004 	ld	-3 (ix),#0x00
   2837                    8005 00124$:
                           8006 ;demo.c:1178: cmd.size_x = 12;
   2837 11r9Cs16           8007 	ld	de,#_cmd + 8
   283A EB                 8008 	ex	de,hl
   283B 36 0C              8009 	ld	(hl),#0x0C
   283D 23                 8010 	inc	hl
   283E 36 00              8011 	ld	(hl),#0x00
                           8012 ;demo.c:1179: cmd.size_y = 27-(14-px);
   2840 21r9Es16           8013 	ld	hl,#_cmd + 10
   2843 DD 75 F7           8014 	ld	-9 (ix),l
   2846 DD 74 F8           8015 	ld	-8 (ix),h
   2849 3E 0E              8016 	ld	a,#0x0E
   284B DD 96 FC           8017 	sub	a,-4 (ix)
   284E DD 77 FA           8018 	ld	-6 (ix),a
   2851 3E 00              8019 	ld	a,#0x00
   2853 DD 9E FD           8020 	sbc	a,-3 (ix)
   2856 DD 77 FB           8021 	ld	-5 (ix),a
   2859 3E 1B              8022 	ld	a,#0x1B
   285B DD 96 FA           8023 	sub	a,-6 (ix)
   285E 5F                 8024 	ld	e,a
   285F 3E 00              8025 	ld	a,#0x00
   2861 DD 9E FB           8026 	sbc	a,-5 (ix)
   2864 57                 8027 	ld	d,a
   2865 DD 6E F7           8028 	ld	l,-9 (ix)
   2868 DD 66 F8           8029 	ld	h,-8 (ix)
   286B 73                 8030 	ld	(hl),e
   286C 23                 8031 	inc	hl
   286D 72                 8032 	ld	(hl),d
                           8033 ;demo.c:1180: cmd.data = 0;
   286E 11rA0s16           8034 	ld	de,#_cmd + 12
   2871 3E 00              8035 	ld	a,#0x00
   2873 12                 8036 	ld	(de),a
                           8037 ;demo.c:1181: cmd.argument = 0x00; // from 70xY to left
   2874 11rA1s16           8038 	ld	de,#_cmd + 13
   2877 3E 00              8039 	ld	a,#0x00
   2879 12                 8040 	ld	(de),a
                           8041 ;demo.c:1182: cmd.command = 0x98; // vram to vram, y only
   287A 11rA2s16           8042 	ld	de,#_cmd + 14
   287D 3E 98              8043 	ld	a,#0x98
   287F 12                 8044 	ld	(de),a
                           8045 ;demo.c:1184: cmd.source_x = twelvetimes[px];
   2880 DD 5E FC           8046 	ld	e,-4 (ix)
   2883 DD 56 FD           8047 	ld	d,-3 (ix)
   2886 CB 23              8048 	sla	e
   2888 CB 12              8049 	rl	d
   288A 21r20s01           8050 	ld	hl,#_twelvetimes
   288D 19                 8051 	add	hl,de
   288E 5E                 8052 	ld	e,(hl)
   288F 23                 8053 	inc	hl
   2890 56                 8054 	ld	d,(hl)
   2891 21r94s16           8055 	ld	hl,#_cmd
   2894 73                 8056 	ld	(hl),e
   2895 23                 8057 	inc	hl
   2896 72                 8058 	ld	(hl),d
                           8059 ;demo.c:1185: cmd.source_y = 768+183+ 16-px;
   2897 23                 8060 	inc	hl
   2898 DD 75 F7           8061 	ld	-9 (ix),l
   289B DD 74 F8           8062 	ld	-8 (ix),h
   289E 3E C7              8063 	ld	a,#0xC7
   28A0 DD 96 FC           8064 	sub	a,-4 (ix)
   28A3 5F                 8065 	ld	e,a
   28A4 3E 03              8066 	ld	a,#0x03
   28A6 DD 9E FD           8067 	sbc	a,-3 (ix)
   28A9 57                 8068 	ld	d,a
   28AA DD 6E F7           8069 	ld	l,-9 (ix)
   28AD DD 66 F8           8070 	ld	h,-8 (ix)
   28B0 73                 8071 	ld	(hl),e
   28B1 23                 8072 	inc	hl
   28B2 72                 8073 	ld	(hl),d
                           8074 ;demo.c:1186: cmd.dest_x = 84+twelvetimes[x];
   28B3 21r98s16           8075 	ld	hl,#_cmd + 4
   28B6 DD 75 F7           8076 	ld	-9 (ix),l
   28B9 DD 74 F8           8077 	ld	-8 (ix),h
   28BC DD 7E FF           8078 	ld	a,-1 (ix)
   28BF 87                 8079 	add	a,a
   28C0 C6r20              8080 	add	a,#<_twelvetimes
   28C2 6F                 8081 	ld	l,a
   28C3 3Es01              8082 	ld	a,#>_twelvetimes
   28C5 CE 00              8083 	adc	a,#0x00
   28C7 67                 8084 	ld	h,a
   28C8 5E                 8085 	ld	e,(hl)
   28C9 23                 8086 	inc	hl
   28CA 56                 8087 	ld	d,(hl)
   28CB 21 54 00           8088 	ld	hl,#0x0054
   28CE 19                 8089 	add	hl,de
   28CF EB                 8090 	ex	de,hl
   28D0 DD 6E F7           8091 	ld	l,-9 (ix)
   28D3 DD 66 F8           8092 	ld	h,-8 (ix)
   28D6 73                 8093 	ld	(hl),e
   28D7 23                 8094 	inc	hl
   28D8 72                 8095 	ld	(hl),d
                           8096 ;demo.c:1187: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   28D9 21r9As16           8097 	ld	hl,#_cmd + 6
   28DC DD 75 F7           8098 	ld	-9 (ix),l
   28DF DD 74 F8           8099 	ld	-8 (ix),h
   28E2 11r5Es01           8100 	ld	de,#_eighttimes + 10
   28E5 EB                 8101 	ex	de,hl
   28E6 5E                 8102 	ld	e,(hl)
   28E7 23                 8103 	inc	hl
   28E8 56                 8104 	ld	d,(hl)
   28E9 13                 8105 	inc	de
   28EA 13                 8106 	inc	de
   28EB 13                 8107 	inc	de
   28EC 13                 8108 	inc	de
   28ED 79                 8109 	ld	a,c
   28EE 83                 8110 	add	a,e
   28EF 5F                 8111 	ld	e,a
   28F0 78                 8112 	ld	a,b
   28F1 8A                 8113 	adc	a,d
   28F2 57                 8114 	ld	d,a
   28F3 7B                 8115 	ld	a,e
   28F4 DD 86 FA           8116 	add	a,-6 (ix)
   28F7 5F                 8117 	ld	e,a
   28F8 7A                 8118 	ld	a,d
   28F9 DD 8E FB           8119 	adc	a,-5 (ix)
   28FC 57                 8120 	ld	d,a
   28FD DD 6E F7           8121 	ld	l,-9 (ix)
   2900 DD 66 F8           8122 	ld	h,-8 (ix)
   2903 73                 8123 	ld	(hl),e
   2904 23                 8124 	inc	hl
   2905 72                 8125 	ld	(hl),d
                           8126 ;demo.c:1188: vdp_copier(&cmd);
   2906 C5                 8127 	push	bc
   2907 21r94s16           8128 	ld	hl,#_cmd
   290A E5                 8129 	push	hl
   290B CDr00s00           8130 	call	_vdp_copier
   290E F1                 8131 	pop	af
   290F C1                 8132 	pop	bc
                           8133 ;demo.c:1173: for (x = 0; x < 6; x+=1) {
   2910 DD 34 FF           8134 	inc	-1 (ix)
   2913 C3rD0s27           8135 	jp	00144$
   2916                    8136 00147$:
                           8137 ;demo.c:1192: if (buf == -1) vdp_register(2, 0x1F);
   2916 3Ar6Bs17           8138 	ld	a,(#_buf+0)
   2919 3C                 8139 	inc	a
   291A 20 06              8140 	jr	NZ,00200$
   291C 3Ar6Cs17           8141 	ld	a,(#_buf+1)
   291F 3C                 8142 	inc	a
   2920 28 02              8143 	jr	Z,00201$
   2922                    8144 00200$:
   2922 18 0A              8145 	jr	00126$
   2924                    8146 00201$:
   2924 21 02 1F           8147 	ld	hl,#0x1F02
   2927 E5                 8148 	push	hl
   2928 CDr00s00           8149 	call	_vdp_register
   292B F1                 8150 	pop	af
   292C 18 08              8151 	jr	00127$
   292E                    8152 00126$:
                           8153 ;demo.c:1193: else vdp_register(2, 0x3F);
   292E 21 02 3F           8154 	ld	hl,#0x3F02
   2931 E5                 8155 	push	hl
   2932 CDr00s00           8156 	call	_vdp_register
   2935 F1                 8157 	pop	af
   2936                    8158 00127$:
                           8159 ;demo.c:1196: buf = -buf;
   2936 AF                 8160 	xor	a,a
   2937 FD 21r6Bs17        8161 	ld	iy,#_buf
   293B 3E 00              8162 	ld	a,#0x00
   293D FD 9E 00           8163 	sbc	a,0 (iy)
   2940 21r6Bs17           8164 	ld	hl,#_buf + 0
   2943 77                 8165 	ld	(hl), a
   2944 FD 21r6Bs17        8166 	ld	iy,#_buf
   2948 3E 00              8167 	ld	a,#0x00
   294A FD 9E 01           8168 	sbc	a,1 (iy)
   294D 21r6Cs17           8169 	ld	hl,#_buf + 1
   2950 77                 8170 	ld	(hl), a
                           8171 ;demo.c:1198: ffa+=8;
   2951 21r6Ds17           8172 	ld	hl,#_ffa
   2954 7E                 8173 	ld	a,(hl)
   2955 C6 08              8174 	add	a,#0x08
   2957 23                 8175 	inc	hl
   2958 2B                 8176 	dec	hl
   2959 C5                 8177 	push	bc
   295A 4F                 8178 	ld	c, a
   295B 23                 8179 	inc	hl
   295C 7E                 8180 	ld	a, (hl)
   295D 47                 8181 	ld	b, a
   295E 79                 8182 	ld	a, c
   295F 2B                 8183 	dec	hl
   2960 77                 8184 	ld	(hl), a
   2961 78                 8185 	ld	a, b
   2962 C1                 8186 	pop	bc
   2963 CE 00              8187 	adc	a,#0x00
   2965 23                 8188 	inc	hl
   2966 77                 8189 	ld	(hl),a
   2967 DD F9              8190 	ld	sp,ix
   2969 DD E1              8191 	pop	ix
   296B C9                 8192 	ret
   296C                    8193 _thewave_end::
                           8194 ;demo.c:1204: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           8195 ;	---------------------------------
                           8196 ; Function drawtritile
                           8197 ; ---------------------------------
   296C                    8198 _drawtritile_start::
   296C                    8199 _drawtritile:
   296C DD E5              8200 	push	ix
   296E DD 21 00 00        8201 	ld	ix,#0
   2972 DD 39              8202 	add	ix,sp
                           8203 ;demo.c:1205: cmd.source_x = tx;
   2974 DD 4E 04           8204 	ld	c,4 (ix)
   2977 06 00              8205 	ld	b,#0x00
   2979 21r94s16           8206 	ld	hl,#_cmd
   297C 71                 8207 	ld	(hl),c
   297D 23                 8208 	inc	hl
   297E 70                 8209 	ld	(hl),b
                           8210 ;demo.c:1206: cmd.source_y = ty-1;
   297F 01r96s16           8211 	ld	bc,#_cmd + 2
   2982 DD 5E 05           8212 	ld	e,5 (ix)
   2985 DD 56 06           8213 	ld	d,6 (ix)
   2988 1B                 8214 	dec	de
   2989 69                 8215 	ld	l,c
   298A 60                 8216 	ld	h,b
   298B 73                 8217 	ld	(hl),e
   298C 23                 8218 	inc	hl
   298D 72                 8219 	ld	(hl),d
                           8220 ;demo.c:1207: cmd.dest_x = x;
   298E 01r98s16           8221 	ld	bc,#_cmd + 4
   2991 DD 5E 07           8222 	ld	e,7 (ix)
   2994 16 00              8223 	ld	d,#0x00
   2996 69                 8224 	ld	l,c
   2997 60                 8225 	ld	h,b
   2998 73                 8226 	ld	(hl),e
   2999 23                 8227 	inc	hl
   299A 72                 8228 	ld	(hl),d
                           8229 ;demo.c:1208: cmd.dest_y = y;
   299B 01r9As16           8230 	ld	bc,#_cmd + 6
   299E DD 5E 08           8231 	ld	e,8 (ix)
   29A1 16 00              8232 	ld	d,#0x00
   29A3 69                 8233 	ld	l,c
   29A4 60                 8234 	ld	h,b
   29A5 73                 8235 	ld	(hl),e
   29A6 23                 8236 	inc	hl
   29A7 72                 8237 	ld	(hl),d
                           8238 ;demo.c:1209: cmd.size_x = 16;
   29A8 21r9Cs16           8239 	ld	hl, #_cmd + 8
   29AB 36 10              8240 	ld	(hl),#0x10
   29AD 23                 8241 	inc	hl
   29AE 36 00              8242 	ld	(hl),#0x00
                           8243 ;demo.c:1210: cmd.size_y = 16;
   29B0 21r9Es16           8244 	ld	hl, #_cmd + 10
   29B3 36 10              8245 	ld	(hl),#0x10
   29B5 23                 8246 	inc	hl
   29B6 36 00              8247 	ld	(hl),#0x00
                           8248 ;demo.c:1211: cmd.data = 0;
                           8249 ;demo.c:1212: cmd.argument = 0x00;
   29B8 3E 00              8250 	ld	a,#0x00
   29BA 32rA0s16           8251 	ld	(#_cmd + 12),a
   29BD 32rA1s16           8252 	ld	(#_cmd + 13),a
                           8253 ;demo.c:1213: cmd.command = 0xd0; // HMMM
   29C0 3E D0              8254 	ld	a,#0xD0
   29C2 32rA2s16           8255 	ld	(#_cmd + 14),a
                           8256 ;demo.c:1214: vdp_copier(&cmd);
   29C5 21r94s16           8257 	ld	hl,#_cmd
   29C8 E5                 8258 	push	hl
   29C9 CDr00s00           8259 	call	_vdp_copier
   29CC F1                 8260 	pop	af
   29CD DD E1              8261 	pop	ix
   29CF C9                 8262 	ret
   29D0                    8263 _drawtritile_end::
                           8264 ;demo.c:1221: void drawtilescreen(char* tripic) {
                           8265 ;	---------------------------------
                           8266 ; Function drawtilescreen
                           8267 ; ---------------------------------
   29D0                    8268 _drawtilescreen_start::
   29D0                    8269 _drawtilescreen:
   29D0 DD E5              8270 	push	ix
   29D2 DD 21 00 00        8271 	ld	ix,#0
   29D6 DD 39              8272 	add	ix,sp
   29D8 F5                 8273 	push	af
   29D9 3B                 8274 	dec	sp
                           8275 ;demo.c:1223: if(tilei >= 192) return;
   29DA 3Ar70s17           8276 	ld	a,(#_tilei+0)
   29DD D6 C0              8277 	sub	a,#0xC0
   29DF 3Ar71s17           8278 	ld	a,(#_tilei+1)
   29E2 DE 00              8279 	sbc	a,#0x00
   29E4 FArEAs29           8280 	jp	M,00102$
   29E7 C3rB5s2A           8281 	jp	00112$
   29EA                    8282 00102$:
                           8283 ;demo.c:1225: tiletick++;
   29EA FD 21r76s17        8284 	ld	iy,#_tiletick
   29EE FD 34 00           8285 	inc	0 (iy)
                           8286 ;demo.c:1226: if (tiletick > 6) { tiletick = 0;}
   29F1 3E 06              8287 	ld	a,#0x06
   29F3 FD 21r76s17        8288 	ld	iy,#_tiletick
   29F7 FD 96 00           8289 	sub	a,0 (iy)
   29FA 30 0A              8290 	jr	NC,00104$
   29FC FD 21r76s17        8291 	ld	iy,#_tiletick
   2A00 FD 36 00 00        8292 	ld	0 (iy),#0x00
   2A04 18 03              8293 	jr	00118$
   2A06                    8294 00104$:
                           8295 ;demo.c:1227: else return;
   2A06 C3rB5s2A           8296 	jp	00112$
                           8297 ;demo.c:1228: for (i=0;i<20;i++) {
   2A09                    8298 00118$:
   2A09 DD 36 FF 00        8299 	ld	-1 (ix),#0x00
   2A0D                    8300 00108$:
   2A0D DD 7E FF           8301 	ld	a,-1 (ix)
   2A10 D6 14              8302 	sub	a,#0x14
   2A12 D2rB5s2A           8303 	jp	NC,00112$
                           8304 ;demo.c:1229: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2A15 3Ar74s17           8305 	ld	a,(#_tiley+0)
   2A18 DD 77 FD           8306 	ld	-3 (ix),a
   2A1B 3Ar72s17           8307 	ld	a,(#_tilex+0)
   2A1E DD 77 FE           8308 	ld	-2 (ix),a
   2A21 21r70s17           8309 	ld	hl,#_tilei
   2A24 DD 7E 04           8310 	ld	a,4 (ix)
   2A27 86                 8311 	add	a,(hl)
   2A28 57                 8312 	ld	d,a
   2A29 DD 7E 05           8313 	ld	a,5 (ix)
   2A2C 23                 8314 	inc	hl
   2A2D 8E                 8315 	adc	a,(hl)
   2A2E 6A                 8316 	ld	l,d
   2A2F 67                 8317 	ld	h,a
   2A30 56                 8318 	ld	d,(hl)
   2A31 7A                 8319 	ld	a,d
   2A32 87                 8320 	add	a,a
   2A33 C6r88              8321 	add	a,#<_tri_lookup_y
   2A35 6F                 8322 	ld	l,a
   2A36 3Es01              8323 	ld	a,#>_tri_lookup_y
   2A38 CE 00              8324 	adc	a,#0x00
   2A3A 67                 8325 	ld	h,a
   2A3B 4E                 8326 	ld	c,(hl)
   2A3C 23                 8327 	inc	hl
   2A3D 5E                 8328 	ld	e,(hl)
   2A3E 3Er00              8329 	ld	a,#<_tri_lookup_x
   2A40 82                 8330 	add	a,d
   2A41 6F                 8331 	ld	l,a
   2A42 3Es01              8332 	ld	a,#>_tri_lookup_x
   2A44 CE 00              8333 	adc	a,#0x00
   2A46 67                 8334 	ld	h,a
   2A47 56                 8335 	ld	d,(hl)
   2A48 DD 66 FD           8336 	ld	h,-3 (ix)
   2A4B DD 6E FE           8337 	ld	l,-2 (ix)
   2A4E E5                 8338 	push	hl
   2A4F 69                 8339 	ld	l,c
   2A50 63                 8340 	ld	h,e
   2A51 E5                 8341 	push	hl
   2A52 D5                 8342 	push	de
   2A53 33                 8343 	inc	sp
   2A54 CDr6Cs29           8344 	call	_drawtritile
   2A57 F1                 8345 	pop	af
   2A58 F1                 8346 	pop	af
   2A59 33                 8347 	inc	sp
                           8348 ;demo.c:1230: tilex+=16;
   2A5A 21r72s17           8349 	ld	hl,#_tilex
   2A5D 7E                 8350 	ld	a,(hl)
   2A5E C6 10              8351 	add	a,#0x10
   2A60 23                 8352 	inc	hl
   2A61 2B                 8353 	dec	hl
   2A62 C5                 8354 	push	bc
   2A63 4F                 8355 	ld	c, a
   2A64 23                 8356 	inc	hl
   2A65 7E                 8357 	ld	a, (hl)
   2A66 47                 8358 	ld	b, a
   2A67 79                 8359 	ld	a, c
   2A68 2B                 8360 	dec	hl
   2A69 77                 8361 	ld	(hl), a
   2A6A 78                 8362 	ld	a, b
   2A6B C1                 8363 	pop	bc
   2A6C CE 00              8364 	adc	a,#0x00
   2A6E 23                 8365 	inc	hl
   2A6F 77                 8366 	ld	(hl),a
                           8367 ;demo.c:1231: tilei++;
   2A70 FD 21r70s17        8368 	ld	iy,#_tilei
   2A74 FD 34 00           8369 	inc	0 (iy)
   2A77 20 07              8370 	jr	NZ,00119$
   2A79 FD 21r70s17        8371 	ld	iy,#_tilei
   2A7D FD 34 01           8372 	inc	1 (iy)
   2A80                    8373 00119$:
                           8374 ;demo.c:1232: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   2A80 3Ar72s17           8375 	ld	a,(#_tilex+0)
   2A83 D6 00              8376 	sub	a,#0x00
   2A85 3Ar73s17           8377 	ld	a,(#_tilex+1)
   2A88 DE 01              8378 	sbc	a,#0x01
   2A8A FArAFs2A           8379 	jp	M,00110$
   2A8D 21r72s17           8380 	ld	hl,#_tilex + 0
   2A90 36 00              8381 	ld	(hl), #0x00
   2A92 21r73s17           8382 	ld	hl,#_tilex + 1
   2A95 36 00              8383 	ld	(hl), #0x00
   2A97 21r74s17           8384 	ld	hl,#_tiley
   2A9A 7E                 8385 	ld	a,(hl)
   2A9B C6 10              8386 	add	a,#0x10
   2A9D 23                 8387 	inc	hl
   2A9E 2B                 8388 	dec	hl
   2A9F C5                 8389 	push	bc
   2AA0 4F                 8390 	ld	c, a
   2AA1 23                 8391 	inc	hl
   2AA2 7E                 8392 	ld	a, (hl)
   2AA3 47                 8393 	ld	b, a
   2AA4 79                 8394 	ld	a, c
   2AA5 2B                 8395 	dec	hl
   2AA6 77                 8396 	ld	(hl), a
   2AA7 78                 8397 	ld	a, b
   2AA8 C1                 8398 	pop	bc
   2AA9 CE 00              8399 	adc	a,#0x00
   2AAB 23                 8400 	inc	hl
   2AAC 77                 8401 	ld	(hl),a
   2AAD 18 06              8402 	jr	00112$
   2AAF                    8403 00110$:
                           8404 ;demo.c:1228: for (i=0;i<20;i++) {
   2AAF DD 34 FF           8405 	inc	-1 (ix)
   2AB2 C3r0Ds2A           8406 	jp	00108$
   2AB5                    8407 00112$:
   2AB5 DD F9              8408 	ld	sp,ix
   2AB7 DD E1              8409 	pop	ix
   2AB9 C9                 8410 	ret
   2ABA                    8411 _drawtilescreen_end::
                           8412 ;demo.c:1237: void drawtilescreen_full(char* tripic) {
                           8413 ;	---------------------------------
                           8414 ; Function drawtilescreen_full
                           8415 ; ---------------------------------
   2ABA                    8416 _drawtilescreen_full_start::
   2ABA                    8417 _drawtilescreen_full:
   2ABA DD E5              8418 	push	ix
   2ABC DD 21 00 00        8419 	ld	ix,#0
   2AC0 DD 39              8420 	add	ix,sp
   2AC2 21 F8 FF           8421 	ld	hl,#-8
   2AC5 39                 8422 	add	hl,sp
   2AC6 F9                 8423 	ld	sp,hl
                           8424 ;demo.c:1238: int x = 0;
   2AC7 DD 36 FE 00        8425 	ld	-2 (ix),#0x00
   2ACB DD 36 FF 00        8426 	ld	-1 (ix),#0x00
                           8427 ;demo.c:1241: while(i < 192) {
   2ACF DD 36 FC 00        8428 	ld	-4 (ix),#0x00
   2AD3 DD 36 FD 00        8429 	ld	-3 (ix),#0x00
   2AD7 DD 36 FA 00        8430 	ld	-6 (ix),#0x00
   2ADB DD 36 FB 00        8431 	ld	-5 (ix),#0x00
   2ADF                    8432 00103$:
   2ADF DD 7E FA           8433 	ld	a,-6 (ix)
   2AE2 D6 C0              8434 	sub	a,#0xC0
   2AE4 DD 7E FB           8435 	ld	a,-5 (ix)
   2AE7 DE 00              8436 	sbc	a,#0x00
   2AE9 F2r70s2B           8437 	jp	P,00106$
                           8438 ;demo.c:1242: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   2AEC DD 7E FC           8439 	ld	a,-4 (ix)
   2AEF DD 77 F8           8440 	ld	-8 (ix),a
   2AF2 DD 7E FE           8441 	ld	a,-2 (ix)
   2AF5 DD 77 F9           8442 	ld	-7 (ix),a
   2AF8 DD 7E 04           8443 	ld	a,4 (ix)
   2AFB DD 86 FA           8444 	add	a,-6 (ix)
   2AFE 4F                 8445 	ld	c,a
   2AFF DD 7E 05           8446 	ld	a,5 (ix)
   2B02 DD 8E FB           8447 	adc	a,-5 (ix)
   2B05 47                 8448 	ld	b,a
   2B06 0A                 8449 	ld	a,(bc)
   2B07 4F                 8450 	ld	c,a
   2B08 87                 8451 	add	a,a
   2B09 C6r88              8452 	add	a,#<_tri_lookup_y
   2B0B 6F                 8453 	ld	l,a
   2B0C 3Es01              8454 	ld	a,#>_tri_lookup_y
   2B0E CE 00              8455 	adc	a,#0x00
   2B10 67                 8456 	ld	h,a
   2B11 46                 8457 	ld	b,(hl)
   2B12 23                 8458 	inc	hl
   2B13 56                 8459 	ld	d,(hl)
   2B14 3Er00              8460 	ld	a,#<_tri_lookup_x
   2B16 81                 8461 	add	a,c
   2B17 6F                 8462 	ld	l,a
   2B18 3Es01              8463 	ld	a,#>_tri_lookup_x
   2B1A CE 00              8464 	adc	a,#0x00
   2B1C 67                 8465 	ld	h,a
   2B1D 4E                 8466 	ld	c,(hl)
   2B1E DD 66 F8           8467 	ld	h,-8 (ix)
   2B21 DD 6E F9           8468 	ld	l,-7 (ix)
   2B24 E5                 8469 	push	hl
   2B25 58                 8470 	ld	e,b
   2B26 D5                 8471 	push	de
   2B27 79                 8472 	ld	a,c
   2B28 F5                 8473 	push	af
   2B29 33                 8474 	inc	sp
   2B2A CDr6Cs29           8475 	call	_drawtritile
   2B2D F1                 8476 	pop	af
   2B2E F1                 8477 	pop	af
   2B2F 33                 8478 	inc	sp
                           8479 ;demo.c:1243: x+=16;
   2B30 DD 7E FE           8480 	ld	a,-2 (ix)
   2B33 C6 10              8481 	add	a,#0x10
   2B35 DD 77 FE           8482 	ld	-2 (ix),a
   2B38 DD 7E FF           8483 	ld	a,-1 (ix)
   2B3B CE 00              8484 	adc	a,#0x00
   2B3D DD 77 FF           8485 	ld	-1 (ix),a
                           8486 ;demo.c:1244: if (x >= 256) {x = 0; y+=16;}
   2B40 DD 7E FE           8487 	ld	a,-2 (ix)
   2B43 D6 00              8488 	sub	a,#0x00
   2B45 DD 7E FF           8489 	ld	a,-1 (ix)
   2B48 DE 01              8490 	sbc	a,#0x01
   2B4A FAr65s2B           8491 	jp	M,00102$
   2B4D DD 36 FE 00        8492 	ld	-2 (ix),#0x00
   2B51 DD 36 FF 00        8493 	ld	-1 (ix),#0x00
   2B55 DD 7E FC           8494 	ld	a,-4 (ix)
   2B58 C6 10              8495 	add	a,#0x10
   2B5A DD 77 FC           8496 	ld	-4 (ix),a
   2B5D DD 7E FD           8497 	ld	a,-3 (ix)
   2B60 CE 00              8498 	adc	a,#0x00
   2B62 DD 77 FD           8499 	ld	-3 (ix),a
   2B65                    8500 00102$:
                           8501 ;demo.c:1245: i++;
   2B65 DD 34 FA           8502 	inc	-6 (ix)
   2B68 20 03              8503 	jr	NZ,00112$
   2B6A DD 34 FB           8504 	inc	-5 (ix)
   2B6D                    8505 00112$:
   2B6D C3rDFs2A           8506 	jp	00103$
   2B70                    8507 00106$:
   2B70 DD F9              8508 	ld	sp,ix
   2B72 DD E1              8509 	pop	ix
   2B74 C9                 8510 	ret
   2B75                    8511 _drawtilescreen_full_end::
                           8512 ;demo.c:1261: void tritiles() {
                           8513 ;	---------------------------------
                           8514 ; Function tritiles
                           8515 ; ---------------------------------
   2B75                    8516 _tritiles_start::
   2B75                    8517 _tritiles:
   2B75 DD E5              8518 	push	ix
   2B77 DD 21 00 00        8519 	ld	ix,#0
   2B7B DD 39              8520 	add	ix,sp
   2B7D 21 FB FF           8521 	ld	hl,#-5
   2B80 39                 8522 	add	hl,sp
   2B81 F9                 8523 	ld	sp,hl
                           8524 ;demo.c:1268: if (tri_inited == 0 || tri_inited == 2) {
   2B82 AF                 8525 	xor	a,a
   2B83 FD 21r6Fs17        8526 	ld	iy,#_tri_inited
   2B87 FD B6 00           8527 	or	a,0 (iy)
   2B8A 28 0C              8528 	jr	Z,00109$
   2B8C FD 21r6Fs17        8529 	ld	iy,#_tri_inited
   2B90 FD 7E 00           8530 	ld	a,0 (iy)
   2B93 D6 02              8531 	sub	a,#0x02
   2B95 C2r97s2C           8532 	jp	NZ,00110$
   2B98                    8533 00109$:
                           8534 ;demo.c:1270: cmd.size_x = 2;
   2B98 21r9Cs16           8535 	ld	hl, #_cmd + 8
   2B9B 36 02              8536 	ld	(hl),#0x02
   2B9D 23                 8537 	inc	hl
   2B9E 36 00              8538 	ld	(hl),#0x00
                           8539 ;demo.c:1271: cmd.size_y = 212;
   2BA0 21r9Es16           8540 	ld	hl, #_cmd + 10
   2BA3 36 D4              8541 	ld	(hl),#0xD4
   2BA5 23                 8542 	inc	hl
   2BA6 36 00              8543 	ld	(hl),#0x00
                           8544 ;demo.c:1272: cmd.data = 0;
                           8545 ;demo.c:1273: cmd.argument = 0x00; // from 70xY to left
   2BA8 3E 00              8546 	ld	a,#0x00
   2BAA 32rA0s16           8547 	ld	(#_cmd + 12),a
   2BAD 32rA1s16           8548 	ld	(#_cmd + 13),a
                           8549 ;demo.c:1274: cmd.command = 0xd0; // vram to vram, y only
   2BB0 01rA2s16           8550 	ld	bc,#_cmd + 14
   2BB3 3E D0              8551 	ld	a,#0xD0
   2BB5 02                 8552 	ld	(bc),a
                           8553 ;demo.c:1275: cmd.source_x = 255;
   2BB6 21r94s16           8554 	ld	hl,#_cmd
   2BB9 36 FF              8555 	ld	(hl),#0xFF
   2BBB 23                 8556 	inc	hl
   2BBC 36 00              8557 	ld	(hl),#0x00
                           8558 ;demo.c:1276: cmd.source_y = 0;
   2BBE 21r96s16           8559 	ld	hl, #_cmd + 2
   2BC1 36 00              8560 	ld	(hl),#0x00
   2BC3 23                 8561 	inc	hl
   2BC4 36 00              8562 	ld	(hl),#0x00
                           8563 ;demo.c:1278: for (x = 0; x < 256; x+=2) {
   2BC6 01 00 00           8564 	ld	bc,#0x0000
   2BC9                    8565 00165$:
   2BC9 79                 8566 	ld	a,c
   2BCA D6 00              8567 	sub	a,#0x00
   2BCC 78                 8568 	ld	a,b
   2BCD DE 01              8569 	sbc	a,#0x01
   2BCF F2r04s2C           8570 	jp	P,00168$
                           8571 ;demo.c:1279: waitVB();
   2BD2 76                 8572 		halt 
                           8573 ;demo.c:1280: cmd.dest_y = 256;
   2BD3 11r9As16           8574 	ld	de,#_cmd + 6
   2BD6 EB                 8575 	ex	de,hl
   2BD7 36 00              8576 	ld	(hl),#0x00
   2BD9 23                 8577 	inc	hl
   2BDA 36 01              8578 	ld	(hl),#0x01
                           8579 ;demo.c:1281: cmd.dest_x = x;
   2BDC 11r98s16           8580 	ld	de,#_cmd + 4
   2BDF EB                 8581 	ex	de,hl
   2BE0 71                 8582 	ld	(hl),c
   2BE1 23                 8583 	inc	hl
   2BE2 70                 8584 	ld	(hl),b
                           8585 ;demo.c:1282: vdp_copier(&cmd);
   2BE3 C5                 8586 	push	bc
   2BE4 21r94s16           8587 	ld	hl,#_cmd
   2BE7 E5                 8588 	push	hl
   2BE8 CDr00s00           8589 	call	_vdp_copier
   2BEB F1                 8590 	pop	af
   2BEC C1                 8591 	pop	bc
                           8592 ;demo.c:1283: cmd.dest_y = 0;
   2BED 11r9As16           8593 	ld	de,#_cmd + 6
   2BF0 EB                 8594 	ex	de,hl
   2BF1 36 00              8595 	ld	(hl),#0x00
   2BF3 23                 8596 	inc	hl
   2BF4 36 00              8597 	ld	(hl),#0x00
                           8598 ;demo.c:1284: vdp_copier(&cmd);
   2BF6 C5                 8599 	push	bc
   2BF7 21r94s16           8600 	ld	hl,#_cmd
   2BFA E5                 8601 	push	hl
   2BFB CDr00s00           8602 	call	_vdp_copier
   2BFE F1                 8603 	pop	af
   2BFF C1                 8604 	pop	bc
                           8605 ;demo.c:1278: for (x = 0; x < 256; x+=2) {
   2C00 03                 8606 	inc	bc
   2C01 03                 8607 	inc	bc
   2C02 18 C5              8608 	jr	00165$
   2C04                    8609 00168$:
                           8610 ;demo.c:1287: if (tri_inited == 0) vdp_load_palette(boxes_palette);
   2C04 AF                 8611 	xor	a,a
   2C05 21r6Fs17           8612 	ld	hl,#_tri_inited + 0
   2C08 B6                 8613 	or	a,(hl)
   2C09 20 0A              8614 	jr	NZ,00104$
   2C0B 21r70s16           8615 	ld	hl,#_boxes_palette
   2C0E E5                 8616 	push	hl
   2C0F CDr00s00           8617 	call	_vdp_load_palette
   2C12 F1                 8618 	pop	af
   2C13 18 46              8619 	jr	00105$
   2C15                    8620 00104$:
                           8621 ;demo.c:1288: else if (tri_inited == 2) { 
   2C15 3Ar6Fs17           8622 	ld	a,(#_tri_inited+0)
   2C18 D6 02              8623 	sub	a,#0x02
   2C1A 20 3F              8624 	jr	NZ,00105$
                           8625 ;demo.c:1289: vdp_load_palette(boxes_palette); 
   2C1C 21r70s16           8626 	ld	hl,#_boxes_palette
   2C1F E5                 8627 	push	hl
   2C20 CDr00s00           8628 	call	_vdp_load_palette
   2C23 F1                 8629 	pop	af
                           8630 ;demo.c:1290: triframes = 0; 
   2C24 21r82s17           8631 	ld	hl,#_triframes + 0
   2C27 36 00              8632 	ld	(hl), #0x00
   2C29 21r83s17           8633 	ld	hl,#_triframes + 1
   2C2C 36 00              8634 	ld	(hl), #0x00
                           8635 ;demo.c:1292: tripal[0] = 4;
   2C2E 21r77s17           8636 	ld	hl,#_tripal
   2C31 36 04              8637 	ld	(hl),#0x04
                           8638 ;demo.c:1293: tripal[1] = 4;
   2C33 3E 04              8639 	ld	a,#0x04
   2C35 32r78s17           8640 	ld	(#_tripal + 1),a
                           8641 ;demo.c:1294: tripal[2] = 3;
   2C38 3E 03              8642 	ld	a,#0x03
   2C3A 32r79s17           8643 	ld	(#_tripal + 2),a
                           8644 ;demo.c:1296: tripal[3] = 2;
   2C3D 3E 02              8645 	ld	a,#0x02
   2C3F 32r7As17           8646 	ld	(#_tripal + 3),a
                           8647 ;demo.c:1297: tripal[4] = 3;
   2C42 3E 03              8648 	ld	a,#0x03
   2C44 32r7Bs17           8649 	ld	(#_tripal + 4),a
                           8650 ;demo.c:1298: tripal[5] = 4;
   2C47 3E 04              8651 	ld	a,#0x04
   2C49 32r7Cs17           8652 	ld	(#_tripal + 5),a
                           8653 ;demo.c:1300: tripal[6] = 1;
   2C4C 3E 01              8654 	ld	a,#0x01
   2C4E 32r7Ds17           8655 	ld	(#_tripal + 6),a
                           8656 ;demo.c:1301: tripal[7] = 3;
   2C51 3E 03              8657 	ld	a,#0x03
   2C53 32r7Es17           8658 	ld	(#_tripal + 7),a
                           8659 ;demo.c:1302: tripal[8] = 1;
   2C56 3E 01              8660 	ld	a,#0x01
   2C58 32r7Fs17           8661 	ld	(#_tripal + 8),a
   2C5B                    8662 00105$:
                           8663 ;demo.c:1304: tri_inited++;
   2C5B FD 21r6Fs17        8664 	ld	iy,#_tri_inited
   2C5F FD 34 00           8665 	inc	0 (iy)
                           8666 ;demo.c:1305: vdp_register(9,2); // 50hz,192
   2C62 21 09 02           8667 	ld	hl,#0x0209
   2C65 E5                 8668 	push	hl
   2C66 CDr00s00           8669 	call	_vdp_register
   2C69 F1                 8670 	pop	af
                           8671 ;demo.c:1307: msx2_palette(15,0,0,0);
   2C6A 21 00 00           8672 	ld	hl,#0x0000
   2C6D E5                 8673 	push	hl
   2C6E 2E 0F              8674 	ld	l, #0x0F
   2C70 E5                 8675 	push	hl
   2C71 CDr00s00           8676 	call	_msx2_palette
   2C74 F1                 8677 	pop	af
   2C75 F1                 8678 	pop	af
                           8679 ;demo.c:1309: if (tri_inited == 1) drawtilescreen_full(tri_center);
   2C76 3Ar6Fs17           8680 	ld	a,(#_tri_inited+0)
   2C79 D6 01              8681 	sub	a,#0x01
   2C7B 20 0A              8682 	jr	NZ,00107$
   2C7D 21r2Cs01           8683 	ld	hl,#_tri_center
   2C80 E5                 8684 	push	hl
   2C81 CDrBAs2A           8685 	call	_drawtilescreen_full
   2C84 F1                 8686 	pop	af
   2C85 18 08              8687 	jr	00108$
   2C87                    8688 00107$:
                           8689 ;demo.c:1310: else drawtilescreen_full(tri_inva2);
   2C87 21rACs05           8690 	ld	hl,#_tri_inva2
   2C8A E5                 8691 	push	hl
   2C8B CDrBAs2A           8692 	call	_drawtilescreen_full
   2C8E F1                 8693 	pop	af
   2C8F                    8694 00108$:
                           8695 ;demo.c:1311: vdp_register(2, 0x1f);
   2C8F 21 02 1F           8696 	ld	hl,#0x1F02
   2C92 E5                 8697 	push	hl
   2C93 CDr00s00           8698 	call	_vdp_register
   2C96 F1                 8699 	pop	af
   2C97                    8700 00110$:
                           8701 ;demo.c:1316: if (tri_inited == 1) triframes++;
   2C97 3Ar6Fs17           8702 	ld	a,(#_tri_inited+0)
   2C9A D6 01              8703 	sub	a,#0x01
   2C9C 20 10              8704 	jr	NZ,00113$
   2C9E FD 21r82s17        8705 	ld	iy,#_triframes
   2CA2 FD 34 00           8706 	inc	0 (iy)
   2CA5 20 07              8707 	jr	NZ,00224$
   2CA7 FD 21r82s17        8708 	ld	iy,#_triframes
   2CAB FD 34 01           8709 	inc	1 (iy)
   2CAE                    8710 00224$:
   2CAE                    8711 00113$:
                           8712 ;demo.c:1318: if (triframes == 150) { tilei = 0; tilex = 0; tiley = 0; }
   2CAE 3Ar82s17           8713 	ld	a,(#_triframes+0)
   2CB1 D6 96              8714 	sub	a,#0x96
   2CB3 20 06              8715 	jr	NZ,00225$
   2CB5 3Ar83s17           8716 	ld	a,(#_triframes+1)
   2CB8 B7                 8717 	or	a,a
   2CB9 28 02              8718 	jr	Z,00226$
   2CBB                    8719 00225$:
   2CBB 18 1E              8720 	jr	00115$
   2CBD                    8721 00226$:
   2CBD 21r70s17           8722 	ld	hl,#_tilei + 0
   2CC0 36 00              8723 	ld	(hl), #0x00
   2CC2 21r71s17           8724 	ld	hl,#_tilei + 1
   2CC5 36 00              8725 	ld	(hl), #0x00
   2CC7 21r72s17           8726 	ld	hl,#_tilex + 0
   2CCA 36 00              8727 	ld	(hl), #0x00
   2CCC 21r73s17           8728 	ld	hl,#_tilex + 1
   2CCF 36 00              8729 	ld	(hl), #0x00
   2CD1 21r74s17           8730 	ld	hl,#_tiley + 0
   2CD4 36 00              8731 	ld	(hl), #0x00
   2CD6 21r75s17           8732 	ld	hl,#_tiley + 1
   2CD9 36 00              8733 	ld	(hl), #0x00
   2CDB                    8734 00115$:
                           8735 ;demo.c:1319: if (triframes >= 150 && triframes < 300) {
   2CDB 3Ar82s17           8736 	ld	a,(#_triframes+0)
   2CDE D6 96              8737 	sub	a,#0x96
   2CE0 3Ar83s17           8738 	ld	a,(#_triframes+1)
   2CE3 DE 00              8739 	sbc	a,#0x00
   2CE5 FArFDs2C           8740 	jp	M,00117$
   2CE8 3Ar82s17           8741 	ld	a,(#_triframes+0)
   2CEB D6 2C              8742 	sub	a,#0x2C
   2CED 3Ar83s17           8743 	ld	a,(#_triframes+1)
   2CF0 DE 01              8744 	sbc	a,#0x01
   2CF2 F2rFDs2C           8745 	jp	P,00117$
                           8746 ;demo.c:1320: drawtilescreen(tri_up);
   2CF5 21rECs01           8747 	ld	hl,#_tri_up
   2CF8 E5                 8748 	push	hl
   2CF9 CDrD0s29           8749 	call	_drawtilescreen
   2CFC F1                 8750 	pop	af
   2CFD                    8751 00117$:
                           8752 ;demo.c:1323: if (triframes == 300) { tilei = 0; tilex = 0; tiley = 0; }
   2CFD 3Ar82s17           8753 	ld	a,(#_triframes+0)
   2D00 D6 2C              8754 	sub	a,#0x2C
   2D02 20 07              8755 	jr	NZ,00227$
   2D04 3Ar83s17           8756 	ld	a,(#_triframes+1)
   2D07 D6 01              8757 	sub	a,#0x01
   2D09 28 02              8758 	jr	Z,00228$
   2D0B                    8759 00227$:
   2D0B 18 1E              8760 	jr	00120$
   2D0D                    8761 00228$:
   2D0D 21r70s17           8762 	ld	hl,#_tilei + 0
   2D10 36 00              8763 	ld	(hl), #0x00
   2D12 21r71s17           8764 	ld	hl,#_tilei + 1
   2D15 36 00              8765 	ld	(hl), #0x00
   2D17 21r72s17           8766 	ld	hl,#_tilex + 0
   2D1A 36 00              8767 	ld	(hl), #0x00
   2D1C 21r73s17           8768 	ld	hl,#_tilex + 1
   2D1F 36 00              8769 	ld	(hl), #0x00
   2D21 21r74s17           8770 	ld	hl,#_tiley + 0
   2D24 36 00              8771 	ld	(hl), #0x00
   2D26 21r75s17           8772 	ld	hl,#_tiley + 1
   2D29 36 00              8773 	ld	(hl), #0x00
   2D2B                    8774 00120$:
                           8775 ;demo.c:1324: if (triframes >= 300 && triframes < 450) {
   2D2B 3Ar82s17           8776 	ld	a,(#_triframes+0)
   2D2E D6 2C              8777 	sub	a,#0x2C
   2D30 3Ar83s17           8778 	ld	a,(#_triframes+1)
   2D33 DE 01              8779 	sbc	a,#0x01
   2D35 FAr4Ds2D           8780 	jp	M,00122$
   2D38 3Ar82s17           8781 	ld	a,(#_triframes+0)
   2D3B D6 C2              8782 	sub	a,#0xC2
   2D3D 3Ar83s17           8783 	ld	a,(#_triframes+1)
   2D40 DE 01              8784 	sbc	a,#0x01
   2D42 F2r4Ds2D           8785 	jp	P,00122$
                           8786 ;demo.c:1325: drawtilescreen(tri_dia);
   2D45 21rACs02           8787 	ld	hl,#_tri_dia
   2D48 E5                 8788 	push	hl
   2D49 CDrD0s29           8789 	call	_drawtilescreen
   2D4C F1                 8790 	pop	af
   2D4D                    8791 00122$:
                           8792 ;demo.c:1328: if (triframes == 450) { tilei = 0; tilex = 0; tiley = 0; }
   2D4D 3Ar82s17           8793 	ld	a,(#_triframes+0)
   2D50 D6 C2              8794 	sub	a,#0xC2
   2D52 20 07              8795 	jr	NZ,00229$
   2D54 3Ar83s17           8796 	ld	a,(#_triframes+1)
   2D57 D6 01              8797 	sub	a,#0x01
   2D59 28 02              8798 	jr	Z,00230$
   2D5B                    8799 00229$:
   2D5B 18 1E              8800 	jr	00125$
   2D5D                    8801 00230$:
   2D5D 21r70s17           8802 	ld	hl,#_tilei + 0
   2D60 36 00              8803 	ld	(hl), #0x00
   2D62 21r71s17           8804 	ld	hl,#_tilei + 1
   2D65 36 00              8805 	ld	(hl), #0x00
   2D67 21r72s17           8806 	ld	hl,#_tilex + 0
   2D6A 36 00              8807 	ld	(hl), #0x00
   2D6C 21r73s17           8808 	ld	hl,#_tilex + 1
   2D6F 36 00              8809 	ld	(hl), #0x00
   2D71 21r74s17           8810 	ld	hl,#_tiley + 0
   2D74 36 00              8811 	ld	(hl), #0x00
   2D76 21r75s17           8812 	ld	hl,#_tiley + 1
   2D79 36 00              8813 	ld	(hl), #0x00
   2D7B                    8814 00125$:
                           8815 ;demo.c:1329: if (triframes >= 450 && triframes < 600) {
   2D7B 3Ar82s17           8816 	ld	a,(#_triframes+0)
   2D7E D6 C2              8817 	sub	a,#0xC2
   2D80 3Ar83s17           8818 	ld	a,(#_triframes+1)
   2D83 DE 01              8819 	sbc	a,#0x01
   2D85 FAr9Ds2D           8820 	jp	M,00127$
   2D88 3Ar82s17           8821 	ld	a,(#_triframes+0)
   2D8B D6 58              8822 	sub	a,#0x58
   2D8D 3Ar83s17           8823 	ld	a,(#_triframes+1)
   2D90 DE 02              8824 	sbc	a,#0x02
   2D92 F2r9Ds2D           8825 	jp	P,00127$
                           8826 ;demo.c:1330: drawtilescreen(tri_side1);
   2D95 21r6Cs03           8827 	ld	hl,#_tri_side1
   2D98 E5                 8828 	push	hl
   2D99 CDrD0s29           8829 	call	_drawtilescreen
   2D9C F1                 8830 	pop	af
   2D9D                    8831 00127$:
                           8832 ;demo.c:1333: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2D9D 3Ar82s17           8833 	ld	a,(#_triframes+0)
   2DA0 D6 58              8834 	sub	a,#0x58
   2DA2 20 07              8835 	jr	NZ,00231$
   2DA4 3Ar83s17           8836 	ld	a,(#_triframes+1)
   2DA7 D6 02              8837 	sub	a,#0x02
   2DA9 28 02              8838 	jr	Z,00232$
   2DAB                    8839 00231$:
   2DAB 18 1E              8840 	jr	00130$
   2DAD                    8841 00232$:
   2DAD 21r70s17           8842 	ld	hl,#_tilei + 0
   2DB0 36 00              8843 	ld	(hl), #0x00
   2DB2 21r71s17           8844 	ld	hl,#_tilei + 1
   2DB5 36 00              8845 	ld	(hl), #0x00
   2DB7 21r72s17           8846 	ld	hl,#_tilex + 0
   2DBA 36 00              8847 	ld	(hl), #0x00
   2DBC 21r73s17           8848 	ld	hl,#_tilex + 1
   2DBF 36 00              8849 	ld	(hl), #0x00
   2DC1 21r74s17           8850 	ld	hl,#_tiley + 0
   2DC4 36 00              8851 	ld	(hl), #0x00
   2DC6 21r75s17           8852 	ld	hl,#_tiley + 1
   2DC9 36 00              8853 	ld	(hl), #0x00
   2DCB                    8854 00130$:
                           8855 ;demo.c:1334: if (triframes >= 600 && triframes < 750) {
   2DCB 3Ar82s17           8856 	ld	a,(#_triframes+0)
   2DCE D6 58              8857 	sub	a,#0x58
   2DD0 3Ar83s17           8858 	ld	a,(#_triframes+1)
   2DD3 DE 02              8859 	sbc	a,#0x02
   2DD5 FArEDs2D           8860 	jp	M,00132$
   2DD8 3Ar82s17           8861 	ld	a,(#_triframes+0)
   2DDB D6 EE              8862 	sub	a,#0xEE
   2DDD 3Ar83s17           8863 	ld	a,(#_triframes+1)
   2DE0 DE 02              8864 	sbc	a,#0x02
   2DE2 F2rEDs2D           8865 	jp	P,00132$
                           8866 ;demo.c:1335: drawtilescreen(tri_side2);
   2DE5 21r2Cs04           8867 	ld	hl,#_tri_side2
   2DE8 E5                 8868 	push	hl
   2DE9 CDrD0s29           8869 	call	_drawtilescreen
   2DEC F1                 8870 	pop	af
   2DED                    8871 00132$:
                           8872 ;demo.c:1338: if (triframes == 750) { tilei = 0; tilex = 0; tiley = 0; }
   2DED 3Ar82s17           8873 	ld	a,(#_triframes+0)
   2DF0 D6 EE              8874 	sub	a,#0xEE
   2DF2 20 07              8875 	jr	NZ,00233$
   2DF4 3Ar83s17           8876 	ld	a,(#_triframes+1)
   2DF7 D6 02              8877 	sub	a,#0x02
   2DF9 28 02              8878 	jr	Z,00234$
   2DFB                    8879 00233$:
   2DFB 18 1E              8880 	jr	00135$
   2DFD                    8881 00234$:
   2DFD 21r70s17           8882 	ld	hl,#_tilei + 0
   2E00 36 00              8883 	ld	(hl), #0x00
   2E02 21r71s17           8884 	ld	hl,#_tilei + 1
   2E05 36 00              8885 	ld	(hl), #0x00
   2E07 21r72s17           8886 	ld	hl,#_tilex + 0
   2E0A 36 00              8887 	ld	(hl), #0x00
   2E0C 21r73s17           8888 	ld	hl,#_tilex + 1
   2E0F 36 00              8889 	ld	(hl), #0x00
   2E11 21r74s17           8890 	ld	hl,#_tiley + 0
   2E14 36 00              8891 	ld	(hl), #0x00
   2E16 21r75s17           8892 	ld	hl,#_tiley + 1
   2E19 36 00              8893 	ld	(hl), #0x00
   2E1B                    8894 00135$:
                           8895 ;demo.c:1339: if (triframes >= 750 && triframes < 900) {
   2E1B 3Ar82s17           8896 	ld	a,(#_triframes+0)
   2E1E D6 EE              8897 	sub	a,#0xEE
   2E20 3Ar83s17           8898 	ld	a,(#_triframes+1)
   2E23 DE 02              8899 	sbc	a,#0x02
   2E25 FAr3Ds2E           8900 	jp	M,00137$
   2E28 3Ar82s17           8901 	ld	a,(#_triframes+0)
   2E2B D6 84              8902 	sub	a,#0x84
   2E2D 3Ar83s17           8903 	ld	a,(#_triframes+1)
   2E30 DE 03              8904 	sbc	a,#0x03
   2E32 F2r3Ds2E           8905 	jp	P,00137$
                           8906 ;demo.c:1340: drawtilescreen(tri_inva1);
   2E35 21rECs04           8907 	ld	hl,#_tri_inva1
   2E38 E5                 8908 	push	hl
   2E39 CDrD0s29           8909 	call	_drawtilescreen
   2E3C F1                 8910 	pop	af
   2E3D                    8911 00137$:
                           8912 ;demo.c:1343: if (triframes == 900) { tilei = 0; tilex = 0; tiley = 0; }
   2E3D 3Ar82s17           8913 	ld	a,(#_triframes+0)
   2E40 D6 84              8914 	sub	a,#0x84
   2E42 20 07              8915 	jr	NZ,00235$
   2E44 3Ar83s17           8916 	ld	a,(#_triframes+1)
   2E47 D6 03              8917 	sub	a,#0x03
   2E49 28 02              8918 	jr	Z,00236$
   2E4B                    8919 00235$:
   2E4B 18 1E              8920 	jr	00140$
   2E4D                    8921 00236$:
   2E4D 21r70s17           8922 	ld	hl,#_tilei + 0
   2E50 36 00              8923 	ld	(hl), #0x00
   2E52 21r71s17           8924 	ld	hl,#_tilei + 1
   2E55 36 00              8925 	ld	(hl), #0x00
   2E57 21r72s17           8926 	ld	hl,#_tilex + 0
   2E5A 36 00              8927 	ld	(hl), #0x00
   2E5C 21r73s17           8928 	ld	hl,#_tilex + 1
   2E5F 36 00              8929 	ld	(hl), #0x00
   2E61 21r74s17           8930 	ld	hl,#_tiley + 0
   2E64 36 00              8931 	ld	(hl), #0x00
   2E66 21r75s17           8932 	ld	hl,#_tiley + 1
   2E69 36 00              8933 	ld	(hl), #0x00
   2E6B                    8934 00140$:
                           8935 ;demo.c:1344: if (triframes >= 900 && triframes < 1050) {
   2E6B 3Ar82s17           8936 	ld	a,(#_triframes+0)
   2E6E D6 84              8937 	sub	a,#0x84
   2E70 3Ar83s17           8938 	ld	a,(#_triframes+1)
   2E73 DE 03              8939 	sbc	a,#0x03
   2E75 FAr8Ds2E           8940 	jp	M,00142$
   2E78 3Ar82s17           8941 	ld	a,(#_triframes+0)
   2E7B D6 1A              8942 	sub	a,#0x1A
   2E7D 3Ar83s17           8943 	ld	a,(#_triframes+1)
   2E80 DE 04              8944 	sbc	a,#0x04
   2E82 F2r8Ds2E           8945 	jp	P,00142$
                           8946 ;demo.c:1345: drawtilescreen(tri_inva2);
   2E85 21rACs05           8947 	ld	hl,#_tri_inva2
   2E88 E5                 8948 	push	hl
   2E89 CDrD0s29           8949 	call	_drawtilescreen
   2E8C F1                 8950 	pop	af
   2E8D                    8951 00142$:
                           8952 ;demo.c:1348: if (triframes == 1050) { tilei = 0; tilex = 0; tiley = 0; }
   2E8D 3Ar82s17           8953 	ld	a,(#_triframes+0)
   2E90 D6 1A              8954 	sub	a,#0x1A
   2E92 20 07              8955 	jr	NZ,00237$
   2E94 3Ar83s17           8956 	ld	a,(#_triframes+1)
   2E97 D6 04              8957 	sub	a,#0x04
   2E99 28 02              8958 	jr	Z,00238$
   2E9B                    8959 00237$:
   2E9B 18 1E              8960 	jr	00145$
   2E9D                    8961 00238$:
   2E9D 21r70s17           8962 	ld	hl,#_tilei + 0
   2EA0 36 00              8963 	ld	(hl), #0x00
   2EA2 21r71s17           8964 	ld	hl,#_tilei + 1
   2EA5 36 00              8965 	ld	(hl), #0x00
   2EA7 21r72s17           8966 	ld	hl,#_tilex + 0
   2EAA 36 00              8967 	ld	(hl), #0x00
   2EAC 21r73s17           8968 	ld	hl,#_tilex + 1
   2EAF 36 00              8969 	ld	(hl), #0x00
   2EB1 21r74s17           8970 	ld	hl,#_tiley + 0
   2EB4 36 00              8971 	ld	(hl), #0x00
   2EB6 21r75s17           8972 	ld	hl,#_tiley + 1
   2EB9 36 00              8973 	ld	(hl), #0x00
   2EBB                    8974 00145$:
                           8975 ;demo.c:1349: if (triframes >= 1050 && triframes < 1200) {
   2EBB 3Ar82s17           8976 	ld	a,(#_triframes+0)
   2EBE D6 1A              8977 	sub	a,#0x1A
   2EC0 3Ar83s17           8978 	ld	a,(#_triframes+1)
   2EC3 DE 04              8979 	sbc	a,#0x04
   2EC5 FArDDs2E           8980 	jp	M,00147$
   2EC8 3Ar82s17           8981 	ld	a,(#_triframes+0)
   2ECB D6 B0              8982 	sub	a,#0xB0
   2ECD 3Ar83s17           8983 	ld	a,(#_triframes+1)
   2ED0 DE 04              8984 	sbc	a,#0x04
   2ED2 F2rDDs2E           8985 	jp	P,00147$
                           8986 ;demo.c:1350: drawtilescreen(tri_inva3);
   2ED5 21r6Cs06           8987 	ld	hl,#_tri_inva3
   2ED8 E5                 8988 	push	hl
   2ED9 CDrD0s29           8989 	call	_drawtilescreen
   2EDC F1                 8990 	pop	af
   2EDD                    8991 00147$:
                           8992 ;demo.c:1353: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   2EDD 3Ar82s17           8993 	ld	a,(#_triframes+0)
   2EE0 D6 B0              8994 	sub	a,#0xB0
   2EE2 20 07              8995 	jr	NZ,00239$
   2EE4 3Ar83s17           8996 	ld	a,(#_triframes+1)
   2EE7 D6 04              8997 	sub	a,#0x04
   2EE9 28 02              8998 	jr	Z,00240$
   2EEB                    8999 00239$:
   2EEB 18 1E              9000 	jr	00150$
   2EED                    9001 00240$:
   2EED 21r70s17           9002 	ld	hl,#_tilei + 0
   2EF0 36 00              9003 	ld	(hl), #0x00
   2EF2 21r71s17           9004 	ld	hl,#_tilei + 1
   2EF5 36 00              9005 	ld	(hl), #0x00
   2EF7 21r72s17           9006 	ld	hl,#_tilex + 0
   2EFA 36 00              9007 	ld	(hl), #0x00
   2EFC 21r73s17           9008 	ld	hl,#_tilex + 1
   2EFF 36 00              9009 	ld	(hl), #0x00
   2F01 21r74s17           9010 	ld	hl,#_tiley + 0
   2F04 36 00              9011 	ld	(hl), #0x00
   2F06 21r75s17           9012 	ld	hl,#_tiley + 1
   2F09 36 00              9013 	ld	(hl), #0x00
   2F0B                    9014 00150$:
                           9015 ;demo.c:1354: if (triframes >= 1200 && triframes < 1350) {
   2F0B 3Ar82s17           9016 	ld	a,(#_triframes+0)
   2F0E D6 B0              9017 	sub	a,#0xB0
   2F10 3Ar83s17           9018 	ld	a,(#_triframes+1)
   2F13 DE 04              9019 	sbc	a,#0x04
   2F15 FAr2Ds2F           9020 	jp	M,00152$
   2F18 3Ar82s17           9021 	ld	a,(#_triframes+0)
   2F1B D6 46              9022 	sub	a,#0x46
   2F1D 3Ar83s17           9023 	ld	a,(#_triframes+1)
   2F20 DE 05              9024 	sbc	a,#0x05
   2F22 F2r2Ds2F           9025 	jp	P,00152$
                           9026 ;demo.c:1355: drawtilescreen(tri_inva4);
   2F25 21r2Cs07           9027 	ld	hl,#_tri_inva4
   2F28 E5                 9028 	push	hl
   2F29 CDrD0s29           9029 	call	_drawtilescreen
   2F2C F1                 9030 	pop	af
   2F2D                    9031 00152$:
                           9032 ;demo.c:1358: if (triframes == 1350) { tilei = 0; tilex = 0; tiley = 0; }
   2F2D 3Ar82s17           9033 	ld	a,(#_triframes+0)
   2F30 D6 46              9034 	sub	a,#0x46
   2F32 20 07              9035 	jr	NZ,00241$
   2F34 3Ar83s17           9036 	ld	a,(#_triframes+1)
   2F37 D6 05              9037 	sub	a,#0x05
   2F39 28 02              9038 	jr	Z,00242$
   2F3B                    9039 00241$:
   2F3B 18 1E              9040 	jr	00155$
   2F3D                    9041 00242$:
   2F3D 21r70s17           9042 	ld	hl,#_tilei + 0
   2F40 36 00              9043 	ld	(hl), #0x00
   2F42 21r71s17           9044 	ld	hl,#_tilei + 1
   2F45 36 00              9045 	ld	(hl), #0x00
   2F47 21r72s17           9046 	ld	hl,#_tilex + 0
   2F4A 36 00              9047 	ld	(hl), #0x00
   2F4C 21r73s17           9048 	ld	hl,#_tilex + 1
   2F4F 36 00              9049 	ld	(hl), #0x00
   2F51 21r74s17           9050 	ld	hl,#_tiley + 0
   2F54 36 00              9051 	ld	(hl), #0x00
   2F56 21r75s17           9052 	ld	hl,#_tiley + 1
   2F59 36 00              9053 	ld	(hl), #0x00
   2F5B                    9054 00155$:
                           9055 ;demo.c:1359: if (triframes >= 1350 && triframes < 1500) {
   2F5B 3Ar82s17           9056 	ld	a,(#_triframes+0)
   2F5E D6 46              9057 	sub	a,#0x46
   2F60 3Ar83s17           9058 	ld	a,(#_triframes+1)
   2F63 DE 05              9059 	sbc	a,#0x05
   2F65 FAr7Ds2F           9060 	jp	M,00157$
   2F68 3Ar82s17           9061 	ld	a,(#_triframes+0)
   2F6B D6 DC              9062 	sub	a,#0xDC
   2F6D 3Ar83s17           9063 	ld	a,(#_triframes+1)
   2F70 DE 05              9064 	sbc	a,#0x05
   2F72 F2r7Ds2F           9065 	jp	P,00157$
                           9066 ;demo.c:1360: drawtilescreen(tri_center);
   2F75 21r2Cs01           9067 	ld	hl,#_tri_center
   2F78 E5                 9068 	push	hl
   2F79 CDrD0s29           9069 	call	_drawtilescreen
   2F7C F1                 9070 	pop	af
   2F7D                    9071 00157$:
                           9072 ;demo.c:1363: if (triframes > 1500) triframes = 199;
   2F7D 3E DC              9073 	ld	a,#0xDC
   2F7F FD 21r82s17        9074 	ld	iy,#_triframes
   2F83 FD 96 00           9075 	sub	a,0 (iy)
   2F86 3E 05              9076 	ld	a,#0x05
   2F88 FD 21r82s17        9077 	ld	iy,#_triframes
   2F8C FD 9E 01           9078 	sbc	a,1 (iy)
   2F8F F2r9Cs2F           9079 	jp	P,00160$
   2F92 21r82s17           9080 	ld	hl,#_triframes + 0
   2F95 36 C7              9081 	ld	(hl), #0xC7
   2F97 21r83s17           9082 	ld	hl,#_triframes + 1
   2F9A 36 00              9083 	ld	(hl), #0x00
   2F9C                    9084 00160$:
                           9085 ;demo.c:1366: msx2_palette(2,0,0,0);
   2F9C 21 00 00           9086 	ld	hl,#0x0000
   2F9F E5                 9087 	push	hl
   2FA0 2E 02              9088 	ld	l, #0x02
   2FA2 E5                 9089 	push	hl
   2FA3 CDr00s00           9090 	call	_msx2_palette
   2FA6 F1                 9091 	pop	af
   2FA7 F1                 9092 	pop	af
                           9093 ;demo.c:1367: msx2_palette(11,0,0,0);
   2FA8 21 00 00           9094 	ld	hl,#0x0000
   2FAB E5                 9095 	push	hl
   2FAC 2E 0B              9096 	ld	l, #0x0B
   2FAE E5                 9097 	push	hl
   2FAF CDr00s00           9098 	call	_msx2_palette
   2FB2 F1                 9099 	pop	af
   2FB3 F1                 9100 	pop	af
                           9101 ;demo.c:1370: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2FB4 21r79s17           9102 	ld	hl,#_tripal + 2
   2FB7 4E                 9103 	ld	c,(hl)
   2FB8 11r78s17           9104 	ld	de,#_tripal + 1
   2FBB 1A                 9105 	ld	a,(de)
   2FBC 47                 9106 	ld	b,a
   2FBD 21r77s17           9107 	ld	hl,#_tripal
   2FC0 5E                 9108 	ld	e,(hl)
   2FC1 79                 9109 	ld	a,c
   2FC2 F5                 9110 	push	af
   2FC3 33                 9111 	inc	sp
   2FC4 C5                 9112 	push	bc
   2FC5 33                 9113 	inc	sp
   2FC6 53                 9114 	ld	d,e
   2FC7 1E 03              9115 	ld	e,#0x03
   2FC9 D5                 9116 	push	de
   2FCA CDr00s00           9117 	call	_msx2_palette
   2FCD F1                 9118 	pop	af
   2FCE F1                 9119 	pop	af
                           9120 ;demo.c:1371: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2FCF 21r7Cs17           9121 	ld	hl,#_tripal + 5
   2FD2 4E                 9122 	ld	c,(hl)
   2FD3 11r7Bs17           9123 	ld	de,#_tripal + 4
   2FD6 1A                 9124 	ld	a,(de)
   2FD7 47                 9125 	ld	b,a
   2FD8 21r7As17           9126 	ld	hl,#_tripal + 3
   2FDB 5E                 9127 	ld	e,(hl)
   2FDC 79                 9128 	ld	a,c
   2FDD F5                 9129 	push	af
   2FDE 33                 9130 	inc	sp
   2FDF C5                 9131 	push	bc
   2FE0 33                 9132 	inc	sp
   2FE1 53                 9133 	ld	d,e
   2FE2 1E 0E              9134 	ld	e,#0x0E
   2FE4 D5                 9135 	push	de
   2FE5 CDr00s00           9136 	call	_msx2_palette
   2FE8 F1                 9137 	pop	af
   2FE9 F1                 9138 	pop	af
                           9139 ;demo.c:1372: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2FEA 21r7Fs17           9140 	ld	hl,#_tripal + 8
   2FED 4E                 9141 	ld	c,(hl)
   2FEE 11r7Es17           9142 	ld	de,#_tripal + 7
   2FF1 1A                 9143 	ld	a,(de)
   2FF2 47                 9144 	ld	b,a
   2FF3 21r7Ds17           9145 	ld	hl,#_tripal + 6
   2FF6 5E                 9146 	ld	e,(hl)
   2FF7 79                 9147 	ld	a,c
   2FF8 F5                 9148 	push	af
   2FF9 33                 9149 	inc	sp
   2FFA C5                 9150 	push	bc
   2FFB 33                 9151 	inc	sp
   2FFC 53                 9152 	ld	d,e
   2FFD 1E 06              9153 	ld	e,#0x06
   2FFF D5                 9154 	push	de
   3000 CDr00s00           9155 	call	_msx2_palette
   3003 F1                 9156 	pop	af
   3004 F1                 9157 	pop	af
                           9158 ;demo.c:1375: tripaltick++;
   3005 FD 21r80s17        9159 	ld	iy,#_tripaltick
   3009 FD 34 00           9160 	inc	0 (iy)
                           9161 ;demo.c:1376: if (tripaltick > 6) {
   300C 3E 06              9162 	ld	a,#0x06
   300E FD 21r80s17        9163 	ld	iy,#_tripaltick
   3012 FD 96 00           9164 	sub	a,0 (iy)
   3015 D2r9As30           9165 	jp	NC,00173$
                           9166 ;demo.c:1377: tripaltick2++;
   3018 FD 21r81s17        9167 	ld	iy,#_tripaltick2
   301C FD 34 00           9168 	inc	0 (iy)
                           9169 ;demo.c:1378: if (tripaltick2 > 6) tripaltick2 = 0;
   301F 3E 06              9170 	ld	a,#0x06
   3021 FD 21r81s17        9171 	ld	iy,#_tripaltick2
   3025 FD 96 00           9172 	sub	a,0 (iy)
   3028 30 05              9173 	jr	NC,00162$
   302A 21r81s17           9174 	ld	hl,#_tripaltick2 + 0
   302D 36 00              9175 	ld	(hl), #0x00
   302F                    9176 00162$:
                           9177 ;demo.c:1380: r = tripal[0];
   302F 21r77s17           9178 	ld	hl,#_tripal
   3032 4E                 9179 	ld	c,(hl)
   3033 DD 71 FD           9180 	ld	-3 (ix),c
                           9181 ;demo.c:1381: g = tripal[1];
   3036 11r78s17           9182 	ld	de,#_tripal + 1
   3039 1A                 9183 	ld	a,(de)
   303A DD 77 FC           9184 	ld	-4 (ix),a
                           9185 ;demo.c:1382: b = tripal[2];
   303D 21r79s17           9186 	ld	hl,#_tripal + 2
   3040 5E                 9187 	ld	e,(hl)
   3041 DD 73 FB           9188 	ld	-5 (ix),e
                           9189 ;demo.c:1384: for (x = 0; x < 6; x++) {
   3044 DD 36 FE 00        9190 	ld	-2 (ix),#0x00
   3048 DD 36 FF 00        9191 	ld	-1 (ix),#0x00
   304C                    9192 00169$:
   304C DD 7E FE           9193 	ld	a,-2 (ix)
   304F D6 06              9194 	sub	a,#0x06
   3051 DD 7E FF           9195 	ld	a,-1 (ix)
   3054 DE 00              9196 	sbc	a,#0x00
   3056 F2r80s30           9197 	jp	P,00172$
                           9198 ;demo.c:1385: tripal[x] = tripal[x+3];
   3059 3Er77              9199 	ld	a,#<_tripal
   305B DD 86 FE           9200 	add	a,-2 (ix)
   305E 4F                 9201 	ld	c,a
   305F 3Es17              9202 	ld	a,#>_tripal
   3061 DD 8E FF           9203 	adc	a,-1 (ix)
   3064 47                 9204 	ld	b,a
   3065 DD 5E FE           9205 	ld	e,-2 (ix)
   3068 1C                 9206 	inc	e
   3069 1C                 9207 	inc	e
   306A 1C                 9208 	inc	e
   306B 3Er77              9209 	ld	a,#<_tripal
   306D 83                 9210 	add	a,e
   306E 5F                 9211 	ld	e,a
   306F 3Es17              9212 	ld	a,#>_tripal
   3071 CE 00              9213 	adc	a,#0x00
   3073 57                 9214 	ld	d,a
   3074 1A                 9215 	ld	a,(de)
   3075 02                 9216 	ld	(bc),a
                           9217 ;demo.c:1384: for (x = 0; x < 6; x++) {
   3076 DD 34 FE           9218 	inc	-2 (ix)
   3079 20 03              9219 	jr	NZ,00243$
   307B DD 34 FF           9220 	inc	-1 (ix)
   307E                    9221 00243$:
   307E 18 CC              9222 	jr	00169$
   3080                    9223 00172$:
                           9224 ;demo.c:1388: tripal[6] = r;
   3080 01r7Ds17           9225 	ld	bc,#_tripal + 6
   3083 DD 7E FD           9226 	ld	a,-3 (ix)
   3086 02                 9227 	ld	(bc),a
                           9228 ;demo.c:1389: tripal[7] = g;
   3087 01r7Es17           9229 	ld	bc,#_tripal + 7
   308A DD 7E FC           9230 	ld	a,-4 (ix)
   308D 02                 9231 	ld	(bc),a
                           9232 ;demo.c:1390: tripal[8] = b;
   308E 01r7Fs17           9233 	ld	bc,#_tripal + 8
   3091 DD 7E FB           9234 	ld	a,-5 (ix)
   3094 02                 9235 	ld	(bc),a
                           9236 ;demo.c:1391: tripaltick = 0;
   3095 21r80s17           9237 	ld	hl,#_tripaltick + 0
   3098 36 00              9238 	ld	(hl), #0x00
   309A                    9239 00173$:
   309A DD F9              9240 	ld	sp,ix
   309C DD E1              9241 	pop	ix
   309E C9                 9242 	ret
   309F                    9243 _tritiles_end::
                           9244 ;demo.c:1396: int abs (int n) {
                           9245 ;	---------------------------------
                           9246 ; Function abs
                           9247 ; ---------------------------------
   309F                    9248 _abs_start::
   309F                    9249 _abs:
   309F DD E5              9250 	push	ix
   30A1 DD 21 00 00        9251 	ld	ix,#0
   30A5 DD 39              9252 	add	ix,sp
   30A7 21 FA FF           9253 	ld	hl,#-6
   30AA 39                 9254 	add	hl,sp
   30AB F9                 9255 	ld	sp,hl
                           9256 ;demo.c:1397: const int ret[2] = { n, -n };
   30AC 21 02 00           9257 	ld	hl,#0x0002
   30AF 39                 9258 	add	hl,sp
   30B0 4D                 9259 	ld	c,l
   30B1 44                 9260 	ld	b,h
   30B2 DD 7E 04           9261 	ld	a,4 (ix)
   30B5 77                 9262 	ld	(hl),a
   30B6 23                 9263 	inc	hl
   30B7 DD 7E 05           9264 	ld	a,5 (ix)
   30BA 77                 9265 	ld	(hl),a
   30BB 21 02 00           9266 	ld	hl,#0x0002
   30BE 09                 9267 	add	hl,bc
   30BF DD 75 FA           9268 	ld	-6 (ix),l
   30C2 DD 74 FB           9269 	ld	-5 (ix),h
   30C5 AF                 9270 	xor	a,a
   30C6 DD 9E 04           9271 	sbc	a,4 (ix)
   30C9 5F                 9272 	ld	e,a
   30CA 3E 00              9273 	ld	a,#0x00
   30CC DD 9E 05           9274 	sbc	a,5 (ix)
   30CF 57                 9275 	ld	d,a
   30D0 DD 6E FA           9276 	ld	l,-6 (ix)
   30D3 DD 66 FB           9277 	ld	h,-5 (ix)
   30D6 73                 9278 	ld	(hl),e
   30D7 23                 9279 	inc	hl
   30D8 72                 9280 	ld	(hl),d
                           9281 ;demo.c:1398: return ret [n<0];
   30D9 DD 7E 05           9282 	ld	a,5 (ix)
   30DC 07                 9283 	rlca
   30DD E6 01              9284 	and	a,#0x01
   30DF 5F                 9285 	ld	e,a
   30E0 CB 23              9286 	sla	e
   30E2 79                 9287 	ld	a,c
   30E3 83                 9288 	add	a,e
   30E4 6F                 9289 	ld	l,a
   30E5 78                 9290 	ld	a,b
   30E6 CE 00              9291 	adc	a,#0x00
   30E8 67                 9292 	ld	h,a
   30E9 5E                 9293 	ld	e,(hl)
   30EA 23                 9294 	inc	hl
   30EB 4E                 9295 	ld	c,(hl)
   30EC 6B                 9296 	ld	l,e
   30ED 61                 9297 	ld	h,c
   30EE DD F9              9298 	ld	sp,ix
   30F0 DD E1              9299 	pop	ix
   30F2 C9                 9300 	ret
   30F3                    9301 _abs_end::
                           9302 ;demo.c:1404: void logoeffu() {
                           9303 ;	---------------------------------
                           9304 ; Function logoeffu
                           9305 ; ---------------------------------
   30F3                    9306 _logoeffu_start::
   30F3                    9307 _logoeffu:
   30F3 DD E5              9308 	push	ix
   30F5 DD 21 00 00        9309 	ld	ix,#0
   30F9 DD 39              9310 	add	ix,sp
   30FB F5                 9311 	push	af
   30FC F5                 9312 	push	af
                           9313 ;demo.c:1408: fadein();
   30FD CDr27s0C           9314 	call	_fadein
                           9315 ;demo.c:1410: v = abs(sintabx[(vbicount) & 255]>>4);
   3100 21r90s16           9316 	ld	hl,#_vbicount + 0
   3103 4E                 9317 	ld	c,(hl)
   3104 06 00              9318 	ld	b,#0x00
   3106 21r2Cs00           9319 	ld	hl,#_sintabx
   3109 09                 9320 	add	hl,bc
   310A 7E                 9321 	ld	a,(hl)
   310B 4F                 9322 	ld	c,a
   310C CB 39              9323 	srl	c
   310E CB 39              9324 	srl	c
   3110 CB 39              9325 	srl	c
   3112 CB 39              9326 	srl	c
   3114 06 00              9327 	ld	b,#0x00
   3116 C5                 9328 	push	bc
   3117 CDr9Fs30           9329 	call	_abs
   311A F1                 9330 	pop	af
   311B 44                 9331 	ld	b,h
   311C DD 75 FC           9332 	ld	-4 (ix),l
   311F DD 70 FD           9333 	ld	-3 (ix),b
                           9334 ;demo.c:1412: for (y = 0; y < 116; y+=2) {
   3122 DD 36 FE 00        9335 	ld	-2 (ix),#0x00
   3126 DD 36 FF 00        9336 	ld	-1 (ix),#0x00
   312A                    9337 00108$:
   312A DD 7E FE           9338 	ld	a,-2 (ix)
   312D D6 74              9339 	sub	a,#0x74
   312F DD 7E FF           9340 	ld	a,-1 (ix)
   3132 DE 00              9341 	sbc	a,#0x00
   3134 F2rFFs31           9342 	jp	P,00111$
                           9343 ;demo.c:1413: cmd.size_x = 108;
   3137 11r9Cs16           9344 	ld	de,#_cmd + 8
   313A EB                 9345 	ex	de,hl
   313B 36 6C              9346 	ld	(hl),#0x6C
   313D 23                 9347 	inc	hl
   313E 36 00              9348 	ld	(hl),#0x00
                           9349 ;demo.c:1414: cmd.size_y = 2;
   3140 11r9Es16           9350 	ld	de,#_cmd + 10
   3143 EB                 9351 	ex	de,hl
   3144 36 02              9352 	ld	(hl),#0x02
   3146 23                 9353 	inc	hl
   3147 36 00              9354 	ld	(hl),#0x00
                           9355 ;demo.c:1415: cmd.data = 0;
   3149 11rA0s16           9356 	ld	de,#_cmd + 12
   314C 3E 00              9357 	ld	a,#0x00
   314E 12                 9358 	ld	(de),a
                           9359 ;demo.c:1416: cmd.argument = 0x00;
   314F 11rA1s16           9360 	ld	de,#_cmd + 13
   3152 3E 00              9361 	ld	a,#0x00
   3154 12                 9362 	ld	(de),a
                           9363 ;demo.c:1417: cmd.command = 0xd0; 
   3155 11rA2s16           9364 	ld	de,#_cmd + 14
   3158 3E D0              9365 	ld	a,#0xD0
   315A 12                 9366 	ld	(de),a
                           9367 ;demo.c:1418: cmd.source_x = 74;
   315B 21r94s16           9368 	ld	hl,#_cmd
   315E 36 4A              9369 	ld	(hl),#0x4A
   3160 23                 9370 	inc	hl
   3161 36 00              9371 	ld	(hl),#0x00
                           9372 ;demo.c:1419: cmd.source_y = 256+y;
   3163 11r96s16           9373 	ld	de,#_cmd + 2
   3166 DD 7E FE           9374 	ld	a,-2 (ix)
   3169 C6 00              9375 	add	a,#0x00
   316B 4F                 9376 	ld	c,a
   316C DD 7E FF           9377 	ld	a,-1 (ix)
   316F CE 01              9378 	adc	a,#0x01
   3171 47                 9379 	ld	b,a
   3172 6B                 9380 	ld	l,e
   3173 62                 9381 	ld	h,d
   3174 71                 9382 	ld	(hl),c
   3175 23                 9383 	inc	hl
   3176 70                 9384 	ld	(hl),b
                           9385 ;demo.c:1420: v+=y;
   3177 DD 7E FC           9386 	ld	a,-4 (ix)
   317A DD 86 FE           9387 	add	a,-2 (ix)
   317D DD 77 FC           9388 	ld	-4 (ix),a
   3180 DD 7E FD           9389 	ld	a,-3 (ix)
   3183 DD 8E FF           9390 	adc	a,-1 (ix)
   3186 DD 77 FD           9391 	ld	-3 (ix),a
                           9392 ;demo.c:1421: v -= powa;
   3189 21r86s17           9393 	ld	hl,#_powa
   318C DD 7E FC           9394 	ld	a,-4 (ix)
   318F 96                 9395 	sub	a,(hl)
   3190 DD 77 FC           9396 	ld	-4 (ix),a
   3193 DD 7E FD           9397 	ld	a,-3 (ix)
   3196 23                 9398 	inc	hl
   3197 9E                 9399 	sbc	a,(hl)
                           9400 ;demo.c:1422: if (v<0) v = 0;
   3198 DD 77 FD           9401 	ld	-3 (ix),a
   319B CB 7F              9402 	bit	7,a
   319D 28 08              9403 	jr	Z,00102$
   319F DD 36 FC 00        9404 	ld	-4 (ix),#0x00
   31A3 DD 36 FD 00        9405 	ld	-3 (ix),#0x00
   31A7                    9406 00102$:
                           9407 ;demo.c:1423: if (v>150) v = 150;
   31A7 3E 96              9408 	ld	a,#0x96
   31A9 DD 96 FC           9409 	sub	a,-4 (ix)
   31AC 3E 00              9410 	ld	a,#0x00
   31AE DD 9E FD           9411 	sbc	a,-3 (ix)
   31B1 F2rBCs31           9412 	jp	P,00104$
   31B4 DD 36 FC 96        9413 	ld	-4 (ix),#0x96
   31B8 DD 36 FD 00        9414 	ld	-3 (ix),#0x00
   31BC                    9415 00104$:
                           9416 ;demo.c:1424: cmd.dest_x = 74+v;
   31BC 01r98s16           9417 	ld	bc,#_cmd + 4
   31BF DD 7E FC           9418 	ld	a,-4 (ix)
   31C2 C6 4A              9419 	add	a,#0x4A
   31C4 5F                 9420 	ld	e,a
   31C5 DD 7E FD           9421 	ld	a,-3 (ix)
   31C8 CE 00              9422 	adc	a,#0x00
   31CA 57                 9423 	ld	d,a
   31CB 69                 9424 	ld	l,c
   31CC 60                 9425 	ld	h,b
   31CD 73                 9426 	ld	(hl),e
   31CE 23                 9427 	inc	hl
   31CF 72                 9428 	ld	(hl),d
                           9429 ;demo.c:1425: cmd.dest_y = 50+y+1;
   31D0 01r9As16           9430 	ld	bc,#_cmd + 6
   31D3 DD 7E FE           9431 	ld	a,-2 (ix)
   31D6 C6 33              9432 	add	a,#0x33
   31D8 5F                 9433 	ld	e,a
   31D9 DD 7E FF           9434 	ld	a,-1 (ix)
   31DC CE 00              9435 	adc	a,#0x00
   31DE 57                 9436 	ld	d,a
   31DF 69                 9437 	ld	l,c
   31E0 60                 9438 	ld	h,b
   31E1 73                 9439 	ld	(hl),e
   31E2 23                 9440 	inc	hl
   31E3 72                 9441 	ld	(hl),d
                           9442 ;demo.c:1426: vdp_copier(&cmd);
   31E4 21r94s16           9443 	ld	hl,#_cmd
   31E7 E5                 9444 	push	hl
   31E8 CDr00s00           9445 	call	_vdp_copier
   31EB F1                 9446 	pop	af
                           9447 ;demo.c:1412: for (y = 0; y < 116; y+=2) {
   31EC DD 7E FE           9448 	ld	a,-2 (ix)
   31EF C6 02              9449 	add	a,#0x02
   31F1 DD 77 FE           9450 	ld	-2 (ix),a
   31F4 DD 7E FF           9451 	ld	a,-1 (ix)
   31F7 CE 00              9452 	adc	a,#0x00
   31F9 DD 77 FF           9453 	ld	-1 (ix),a
   31FC C3r2As31           9454 	jp	00108$
   31FF                    9455 00111$:
                           9456 ;demo.c:1429: if (vbicount > scenetimings[2]+84 && onceclear > 182) {
   31FF 21rBBs16           9457 	ld	hl, #_scenetimings + 4
   3202 4E                 9458 	ld	c,(hl)
   3203 23                 9459 	inc	hl
   3204 46                 9460 	ld	b,(hl)
   3205 21 54 00           9461 	ld	hl,#0x0054
   3208 09                 9462 	add	hl,bc
   3209 4D                 9463 	ld	c,l
   320A 44                 9464 	ld	b,h
   320B 79                 9465 	ld	a,c
   320C FD 21r90s16        9466 	ld	iy,#_vbicount
   3210 FD 96 00           9467 	sub	a,0 (iy)
   3213 78                 9468 	ld	a,b
   3214 FD 21r90s16        9469 	ld	iy,#_vbicount
   3218 FD 9E 01           9470 	sbc	a,1 (iy)
   321B F2r7Ds32           9471 	jp	P,00106$
   321E 3E B6              9472 	ld	a,#0xB6
   3220 FD 21r88s17        9473 	ld	iy,#_onceclear
   3224 FD 96 00           9474 	sub	a,0 (iy)
   3227 D2r7Ds32           9475 	jp	NC,00106$
                           9476 ;demo.c:1430: cmd.size_x = 4;
   322A 21r9Cs16           9477 	ld	hl, #_cmd + 8
   322D 36 04              9478 	ld	(hl),#0x04
   322F 23                 9479 	inc	hl
   3230 36 00              9480 	ld	(hl),#0x00
                           9481 ;demo.c:1431: cmd.size_y = 116;
   3232 21r9Es16           9482 	ld	hl, #_cmd + 10
   3235 36 74              9483 	ld	(hl),#0x74
   3237 23                 9484 	inc	hl
   3238 36 00              9485 	ld	(hl),#0x00
                           9486 ;demo.c:1432: cmd.data = 0;
                           9487 ;demo.c:1433: cmd.argument = 0x00;
   323A 3E 00              9488 	ld	a,#0x00
   323C 32rA0s16           9489 	ld	(#_cmd + 12),a
   323F 32rA1s16           9490 	ld	(#_cmd + 13),a
                           9491 ;demo.c:1434: cmd.command = 0xd0; 
   3242 01rA2s16           9492 	ld	bc,#_cmd + 14
   3245 3E D0              9493 	ld	a,#0xD0
   3247 02                 9494 	ld	(bc),a
                           9495 ;demo.c:1435: cmd.source_x = 20;
   3248 21r94s16           9496 	ld	hl,#_cmd
   324B 36 14              9497 	ld	(hl),#0x14
   324D 23                 9498 	inc	hl
   324E 36 00              9499 	ld	(hl),#0x00
                           9500 ;demo.c:1436: cmd.source_y = 0;
   3250 21r96s16           9501 	ld	hl, #_cmd + 2
   3253 36 00              9502 	ld	(hl),#0x00
   3255 23                 9503 	inc	hl
   3256 36 00              9504 	ld	(hl),#0x00
                           9505 ;demo.c:1437: cmd.dest_x = onceclear;
   3258 01r98s16           9506 	ld	bc,#_cmd + 4
   325B 21r88s17           9507 	ld	hl,#_onceclear + 0
   325E 5E                 9508 	ld	e,(hl)
   325F 16 00              9509 	ld	d,#0x00
   3261 69                 9510 	ld	l,c
   3262 60                 9511 	ld	h,b
   3263 73                 9512 	ld	(hl),e
   3264 23                 9513 	inc	hl
   3265 72                 9514 	ld	(hl),d
                           9515 ;demo.c:1438: cmd.dest_y = 68;
   3266 21r9As16           9516 	ld	hl, #_cmd + 6
   3269 36 44              9517 	ld	(hl),#0x44
   326B 23                 9518 	inc	hl
   326C 36 00              9519 	ld	(hl),#0x00
                           9520 ;demo.c:1439: vdp_copier(&cmd);
   326E 21r94s16           9521 	ld	hl,#_cmd
   3271 E5                 9522 	push	hl
   3272 CDr00s00           9523 	call	_vdp_copier
   3275 F1                 9524 	pop	af
                           9525 ;demo.c:1440: onceclear-=4;
   3276 21r88s17           9526 	ld	hl,#_onceclear
   3279 7E                 9527 	ld	a,(hl)
   327A C6 FC              9528 	add	a,#0xFC
   327C 77                 9529 	ld	(hl),a
   327D                    9530 00106$:
                           9531 ;demo.c:1444: powa+=2;
   327D 21r86s17           9532 	ld	hl,#_powa
   3280 7E                 9533 	ld	a,(hl)
   3281 C6 02              9534 	add	a,#0x02
   3283 23                 9535 	inc	hl
   3284 2B                 9536 	dec	hl
   3285 C5                 9537 	push	bc
   3286 4F                 9538 	ld	c, a
   3287 23                 9539 	inc	hl
   3288 7E                 9540 	ld	a, (hl)
   3289 47                 9541 	ld	b, a
   328A 79                 9542 	ld	a, c
   328B 2B                 9543 	dec	hl
   328C 77                 9544 	ld	(hl), a
   328D 78                 9545 	ld	a, b
   328E C1                 9546 	pop	bc
   328F CE 00              9547 	adc	a,#0x00
   3291 23                 9548 	inc	hl
   3292 77                 9549 	ld	(hl),a
                           9550 ;demo.c:1445: powatick = 0;
   3293 21r84s17           9551 	ld	hl,#_powatick + 0
   3296 36 00              9552 	ld	(hl), #0x00
   3298 21r85s17           9553 	ld	hl,#_powatick + 1
   329B 36 00              9554 	ld	(hl), #0x00
   329D DD F9              9555 	ld	sp,ix
   329F DD E1              9556 	pop	ix
   32A1 C9                 9557 	ret
   32A2                    9558 _logoeffu_end::
                           9559 ;demo.c:1454: void points() {
                           9560 ;	---------------------------------
                           9561 ; Function points
                           9562 ; ---------------------------------
   32A2                    9563 _points_start::
   32A2                    9564 _points:
   32A2 DD E5              9565 	push	ix
   32A4 DD 21 00 00        9566 	ld	ix,#0
   32A8 DD 39              9567 	add	ix,sp
   32AA F5                 9568 	push	af
   32AB 3B                 9569 	dec	sp
                           9570 ;demo.c:1458: if (initpoints == 0) {
   32AC AF                 9571 	xor	a,a
   32AD FD 21r89s17        9572 	ld	iy,#_initpoints
   32B1 FD B6 00           9573 	or	a,0 (iy)
   32B4 C2rC5s33           9574 	jp	NZ,00102$
                           9575 ;demo.c:1459: cmd.size_x = 256;
   32B7 21r9Cs16           9576 	ld	hl, #_cmd + 8
   32BA 36 00              9577 	ld	(hl),#0x00
   32BC 23                 9578 	inc	hl
   32BD 36 01              9579 	ld	(hl),#0x01
                           9580 ;demo.c:1460: cmd.size_y = 4;
   32BF 21r9Es16           9581 	ld	hl, #_cmd + 10
   32C2 36 04              9582 	ld	(hl),#0x04
   32C4 23                 9583 	inc	hl
   32C5 36 00              9584 	ld	(hl),#0x00
                           9585 ;demo.c:1461: cmd.data = 0;
                           9586 ;demo.c:1462: cmd.argument = 0x00; // from 70xY to left
   32C7 3E 00              9587 	ld	a,#0x00
   32C9 32rA0s16           9588 	ld	(#_cmd + 12),a
   32CC 32rA1s16           9589 	ld	(#_cmd + 13),a
                           9590 ;demo.c:1463: cmd.command = 0xd0; // vram to vram, y only
   32CF 3E D0              9591 	ld	a,#0xD0
   32D1 32rA2s16           9592 	ld	(#_cmd + 14),a
                           9593 ;demo.c:1464: cmd.source_x = 0;
   32D4 21r94s16           9594 	ld	hl,#_cmd
   32D7 36 00              9595 	ld	(hl),#0x00
   32D9 23                 9596 	inc	hl
   32DA 36 00              9597 	ld	(hl),#0x00
                           9598 ;demo.c:1465: cmd.dest_x = 0;
   32DC 01r98s16           9599 	ld	bc,#_cmd + 4
   32DF 69                 9600 	ld	l,c
   32E0 60                 9601 	ld	h,b
   32E1 36 00              9602 	ld	(hl),#0x00
   32E3 23                 9603 	inc	hl
   32E4 36 00              9604 	ld	(hl),#0x00
                           9605 ;demo.c:1467: for (y = 0; y < 212; y+=4) {
   32E6 DD 36 FF 00        9606 	ld	-1 (ix),#0x00
   32EA                    9607 00113$:
   32EA DD 7E FF           9608 	ld	a,-1 (ix)
   32ED D6 D4              9609 	sub	a,#0xD4
   32EF 30 2C              9610 	jr	NC,00116$
                           9611 ;demo.c:1468: waitVB();
   32F1 76                 9612 		halt 
                           9613 ;demo.c:1469: cmd.source_y = 193;
   32F2 11r96s16           9614 	ld	de,#_cmd + 2
   32F5 EB                 9615 	ex	de,hl
   32F6 36 C1              9616 	ld	(hl),#0xC1
   32F8 23                 9617 	inc	hl
   32F9 36 00              9618 	ld	(hl),#0x00
                           9619 ;demo.c:1470: cmd.dest_y = y;
   32FB 11r9As16           9620 	ld	de,#_cmd + 6
   32FE DD 4E FF           9621 	ld	c,-1 (ix)
   3301 06 00              9622 	ld	b,#0x00
   3303 EB                 9623 	ex	de,hl
   3304 71                 9624 	ld	(hl),c
   3305 23                 9625 	inc	hl
   3306 70                 9626 	ld	(hl),b
                           9627 ;demo.c:1471: vdp_copier(&cmd);
   3307 21r94s16           9628 	ld	hl,#_cmd
   330A E5                 9629 	push	hl
   330B CDr00s00           9630 	call	_vdp_copier
   330E F1                 9631 	pop	af
                           9632 ;demo.c:1467: for (y = 0; y < 212; y+=4) {
   330F DD 34 FF           9633 	inc	-1 (ix)
   3312 DD 34 FF           9634 	inc	-1 (ix)
   3315 DD 34 FF           9635 	inc	-1 (ix)
   3318 DD 34 FF           9636 	inc	-1 (ix)
   331B 18 CD              9637 	jr	00113$
   331D                    9638 00116$:
                           9639 ;demo.c:1475: vdp_load_palette(bulbs_palette);
   331D 21rF0s15           9640 	ld	hl,#_bulbs_palette
   3320 E5                 9641 	push	hl
   3321 CDr00s00           9642 	call	_vdp_load_palette
   3324 F1                 9643 	pop	af
                           9644 ;demo.c:1477: for (x = 0; x < 256; x+=1) {
   3325 DD 36 FD 00        9645 	ld	-3 (ix),#0x00
   3329 DD 36 FE 00        9646 	ld	-2 (ix),#0x00
   332D                    9647 00117$:
   332D DD 7E FD           9648 	ld	a,-3 (ix)
   3330 D6 00              9649 	sub	a,#0x00
   3332 DD 7E FE           9650 	ld	a,-2 (ix)
   3335 DE 01              9651 	sbc	a,#0x01
   3337 F2rB6s33           9652 	jp	P,00120$
                           9653 ;demo.c:1479: cmd.data = 1+((pointframe>>2) & 0xe);
   333A 11rA0s16           9654 	ld	de,#_cmd + 12
   333D 21r8As17           9655 	ld	hl,#_pointframe + 0
   3340 4E                 9656 	ld	c,(hl)
   3341 21r8Bs17           9657 	ld	hl,#_pointframe + 1
   3344 46                 9658 	ld	b,(hl)
   3345 CB 28              9659 	sra	b
   3347 CB 19              9660 	rr	c
   3349 CB 28              9661 	sra	b
   334B CB 19              9662 	rr	c
   334D 79                 9663 	ld	a,c
   334E E6 0E              9664 	and	a,#0x0E
   3350 3C                 9665 	inc	a
   3351 12                 9666 	ld	(de),a
                           9667 ;demo.c:1480: cmd.dest_x = x;
   3352 21r98s16           9668 	ld	hl, #_cmd + 4
   3355 DD 7E FD           9669 	ld	a,-3 (ix)
   3358 77                 9670 	ld	(hl),a
   3359 23                 9671 	inc	hl
   335A DD 7E FE           9672 	ld	a,-2 (ix)
   335D 77                 9673 	ld	(hl),a
                           9674 ;demo.c:1481: cmd.dest_y = y;
   335E 21r9As16           9675 	ld	hl, #_cmd + 6
   3361 36 1D              9676 	ld	(hl),#0x1D
   3363 23                 9677 	inc	hl
   3364 36 00              9678 	ld	(hl),#0x00
                           9679 ;demo.c:1482: cmd.command = 0x50;
   3366 3E 50              9680 	ld	a,#0x50
   3368 32rA2s16           9681 	ld	(#_cmd + 14),a
                           9682 ;demo.c:1483: vdp_copier(&cmd);
   336B 21r94s16           9683 	ld	hl,#_cmd
   336E E5                 9684 	push	hl
   336F CDr00s00           9685 	call	_vdp_copier
   3372 F1                 9686 	pop	af
                           9687 ;demo.c:1486: cmd.data = 1+((pointframe>>2) & 0xe);
   3373 01rA0s16           9688 	ld	bc,#_cmd + 12
   3376 21r8As17           9689 	ld	hl,#_pointframe + 0
   3379 5E                 9690 	ld	e,(hl)
   337A 21r8Bs17           9691 	ld	hl,#_pointframe + 1
   337D 56                 9692 	ld	d,(hl)
   337E CB 2A              9693 	sra	d
   3380 CB 1B              9694 	rr	e
   3382 CB 2A              9695 	sra	d
   3384 CB 1B              9696 	rr	e
   3386 7B                 9697 	ld	a,e
   3387 E6 0E              9698 	and	a,#0x0E
   3389 3C                 9699 	inc	a
   338A 02                 9700 	ld	(bc),a
                           9701 ;demo.c:1487: cmd.dest_y = y;
   338B 21r9As16           9702 	ld	hl, #_cmd + 6
   338E 36 A2              9703 	ld	(hl),#0xA2
   3390 23                 9704 	inc	hl
   3391 36 00              9705 	ld	(hl),#0x00
                           9706 ;demo.c:1488: vdp_copier(&cmd);
   3393 21r94s16           9707 	ld	hl,#_cmd
   3396 E5                 9708 	push	hl
   3397 CDr00s00           9709 	call	_vdp_copier
   339A F1                 9710 	pop	af
                           9711 ;demo.c:1490: pointframe+=1;
   339B FD 21r8As17        9712 	ld	iy,#_pointframe
   339F FD 34 00           9713 	inc	0 (iy)
   33A2 20 07              9714 	jr	NZ,00144$
   33A4 FD 21r8As17        9715 	ld	iy,#_pointframe
   33A8 FD 34 01           9716 	inc	1 (iy)
   33AB                    9717 00144$:
                           9718 ;demo.c:1477: for (x = 0; x < 256; x+=1) {
   33AB DD 34 FD           9719 	inc	-3 (ix)
   33AE 20 03              9720 	jr	NZ,00145$
   33B0 DD 34 FE           9721 	inc	-2 (ix)
   33B3                    9722 00145$:
   33B3 C3r2Ds33           9723 	jp	00117$
   33B6                    9724 00120$:
                           9725 ;demo.c:1493: initpoints = 1;
   33B6 21r89s17           9726 	ld	hl,#_initpoints + 0
   33B9 36 01              9727 	ld	(hl), #0x01
                           9728 ;demo.c:1494: ltrpointer = 0;
   33BB 21r1Cs17           9729 	ld	hl,#_ltrpointer + 0
   33BE 36 00              9730 	ld	(hl), #0x00
   33C0 21r1Ds17           9731 	ld	hl,#_ltrpointer + 1
   33C3 36 00              9732 	ld	(hl), #0x00
   33C5                    9733 00102$:
                           9734 ;demo.c:1497: cmd.argument = 0x0;
   33C5 3E 00              9735 	ld	a,#0x00
   33C7 32rA1s16           9736 	ld	(#_cmd + 13),a
                           9737 ;demo.c:1499: cmd.data = 1+((pointframe>>2) & 0xe);
   33CA 01rA0s16           9738 	ld	bc,#_cmd + 12
   33CD 21r8As17           9739 	ld	hl,#_pointframe + 0
   33D0 5E                 9740 	ld	e,(hl)
   33D1 21r8Bs17           9741 	ld	hl,#_pointframe + 1
   33D4 56                 9742 	ld	d,(hl)
   33D5 CB 2A              9743 	sra	d
   33D7 CB 1B              9744 	rr	e
   33D9 CB 2A              9745 	sra	d
   33DB CB 1B              9746 	rr	e
   33DD 7B                 9747 	ld	a,e
   33DE E6 0E              9748 	and	a,#0x0E
   33E0 3C                 9749 	inc	a
   33E1 02                 9750 	ld	(bc),a
                           9751 ;demo.c:1501: for (x = 30; x < 162; x+=1) {
   33E2 DD 36 FD 1E        9752 	ld	-3 (ix),#0x1E
   33E6 DD 36 FE 00        9753 	ld	-2 (ix),#0x00
   33EA                    9754 00121$:
   33EA DD 7E FD           9755 	ld	a,-3 (ix)
   33ED D6 A2              9756 	sub	a,#0xA2
   33EF DD 7E FE           9757 	ld	a,-2 (ix)
   33F2 DE 00              9758 	sbc	a,#0x00
   33F4 F2r3Ds34           9759 	jp	P,00124$
                           9760 ;demo.c:1502: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   33F7 21r8As17           9761 	ld	hl,#_pointframe
   33FA DD 7E FD           9762 	ld	a,-3 (ix)
   33FD 86                 9763 	add	a,(hl)
   33FE 5F                 9764 	ld	e,a
   33FF DD 7E FE           9765 	ld	a,-2 (ix)
   3402 23                 9766 	inc	hl
   3403 8E                 9767 	adc	a,(hl)
   3404 16 00              9768 	ld	d,#0x00
   3406 21r2Cs00           9769 	ld	hl,#_sintabx
   3409 19                 9770 	add	hl,de
   340A 7E                 9771 	ld	a,(hl)
   340B CB 3F              9772 	srl	a
   340D C6 40              9773 	add	a,#0x40
   340F 4F                 9774 	ld	c,a
                           9775 ;demo.c:1503: cmd.dest_x = y;
   3410 11r98s16           9776 	ld	de,#_cmd + 4
   3413 06 00              9777 	ld	b,#0x00
   3415 6B                 9778 	ld	l,e
   3416 62                 9779 	ld	h,d
   3417 71                 9780 	ld	(hl),c
   3418 23                 9781 	inc	hl
   3419 70                 9782 	ld	(hl),b
                           9783 ;demo.c:1504: cmd.dest_y = x;
   341A 21r9As16           9784 	ld	hl, #_cmd + 6
   341D DD 7E FD           9785 	ld	a,-3 (ix)
   3420 77                 9786 	ld	(hl),a
   3421 23                 9787 	inc	hl
   3422 DD 7E FE           9788 	ld	a,-2 (ix)
   3425 77                 9789 	ld	(hl),a
                           9790 ;demo.c:1505: cmd.command = 0x53;
   3426 3E 53              9791 	ld	a,#0x53
   3428 32rA2s16           9792 	ld	(#_cmd + 14),a
                           9793 ;demo.c:1506: vdp_copier(&cmd);
   342B 21r94s16           9794 	ld	hl,#_cmd
   342E E5                 9795 	push	hl
   342F CDr00s00           9796 	call	_vdp_copier
   3432 F1                 9797 	pop	af
                           9798 ;demo.c:1501: for (x = 30; x < 162; x+=1) {
   3433 DD 34 FD           9799 	inc	-3 (ix)
   3436 20 03              9800 	jr	NZ,00147$
   3438 DD 34 FE           9801 	inc	-2 (ix)
   343B                    9802 00147$:
   343B 18 AD              9803 	jr	00121$
   343D                    9804 00124$:
                           9805 ;demo.c:1508: pointframe+=2;
   343D 21r8As17           9806 	ld	hl,#_pointframe
   3440 7E                 9807 	ld	a,(hl)
   3441 C6 02              9808 	add	a,#0x02
   3443 23                 9809 	inc	hl
   3444 2B                 9810 	dec	hl
   3445 C5                 9811 	push	bc
   3446 4F                 9812 	ld	c, a
   3447 23                 9813 	inc	hl
   3448 7E                 9814 	ld	a, (hl)
   3449 47                 9815 	ld	b, a
   344A 79                 9816 	ld	a, c
   344B 2B                 9817 	dec	hl
   344C 77                 9818 	ld	(hl), a
   344D 78                 9819 	ld	a, b
   344E C1                 9820 	pop	bc
   344F CE 00              9821 	adc	a,#0x00
   3451 23                 9822 	inc	hl
   3452 77                 9823 	ld	(hl),a
                           9824 ;demo.c:1510: if (greetindex == 0) {
   3453 3Ar8Cs17           9825 	ld	a,(#_greetindex+0)
   3456 21r8Ds17           9826 	ld	hl,#_greetindex + 1
   3459 B6                 9827 	or	a,(hl)
   345A 20 17              9828 	jr	NZ,00104$
                           9829 ;demo.c:1511: slowend = 27;
   345C 21r1Es17           9830 	ld	hl,#_slowend + 0
   345F 36 1B              9831 	ld	(hl), #0x1B
   3461 21r1Fs17           9832 	ld	hl,#_slowend + 1
   3464 36 00              9833 	ld	(hl), #0x00
                           9834 ;demo.c:1512: drawstrslow("GREETINGS TO VARIOUS GROUPS",10,20);
   3466 21 0A 14           9835 	ld	hl,#0x140A
   3469 E5                 9836 	push	hl
   346A 21r13s35           9837 	ld	hl,#__str_15
   346D E5                 9838 	push	hl
   346E CDrC9s15           9839 	call	_drawstrslow
   3471 F1                 9840 	pop	af
   3472 F1                 9841 	pop	af
   3473                    9842 00104$:
                           9843 ;demo.c:1514: if (greetindex == 1) {
   3473 3Ar8Cs17           9844 	ld	a,(#_greetindex+0)
   3476 D6 01              9845 	sub	a,#0x01
   3478 20 06              9846 	jr	NZ,00148$
   347A 3Ar8Ds17           9847 	ld	a,(#_greetindex+1)
   347D B7                 9848 	or	a,a
   347E 28 02              9849 	jr	Z,00149$
   3480                    9850 00148$:
   3480 18 17              9851 	jr	00106$
   3482                    9852 00149$:
                           9853 ;demo.c:1515: slowend = 33;
   3482 21r1Es17           9854 	ld	hl,#_slowend + 0
   3485 36 21              9855 	ld	(hl), #0x21
   3487 21r1Fs17           9856 	ld	hl,#_slowend + 1
   348A 36 00              9857 	ld	(hl), #0x00
                           9858 ;demo.c:1516: drawstrslow("Trilobit  Prismbeings  Ivory Labs",10,164);
   348C 21 0A A4           9859 	ld	hl,#0xA40A
   348F E5                 9860 	push	hl
   3490 21r2Fs35           9861 	ld	hl,#__str_16
   3493 E5                 9862 	push	hl
   3494 CDrC9s15           9863 	call	_drawstrslow
   3497 F1                 9864 	pop	af
   3498 F1                 9865 	pop	af
   3499                    9866 00106$:
                           9867 ;demo.c:1518: if (greetindex == 2) {
   3499 3Ar8Cs17           9868 	ld	a,(#_greetindex+0)
   349C D6 02              9869 	sub	a,#0x02
   349E 20 06              9870 	jr	NZ,00150$
   34A0 3Ar8Ds17           9871 	ld	a,(#_greetindex+1)
   34A3 B7                 9872 	or	a,a
   34A4 28 02              9873 	jr	Z,00151$
   34A6                    9874 00150$:
   34A6 18 17              9875 	jr	00108$
   34A8                    9876 00151$:
                           9877 ;demo.c:1519: slowend = 29;
   34A8 21r1Es17           9878 	ld	hl,#_slowend + 0
   34AB 36 1D              9879 	ld	(hl), #0x1D
   34AD 21r1Fs17           9880 	ld	hl,#_slowend + 1
   34B0 36 00              9881 	ld	(hl), #0x00
                           9882 ;demo.c:1520: drawstrslow("PWP  Dekadence  Paraguay  ISO",18,174);
   34B2 21 12 AE           9883 	ld	hl,#0xAE12
   34B5 E5                 9884 	push	hl
   34B6 21r51s35           9885 	ld	hl,#__str_17
   34B9 E5                 9886 	push	hl
   34BA CDrC9s15           9887 	call	_drawstrslow
   34BD F1                 9888 	pop	af
   34BE F1                 9889 	pop	af
   34BF                    9890 00108$:
                           9891 ;demo.c:1522: if (greetindex == 3) {
   34BF 3Ar8Cs17           9892 	ld	a,(#_greetindex+0)
   34C2 D6 03              9893 	sub	a,#0x03
   34C4 20 06              9894 	jr	NZ,00152$
   34C6 3Ar8Ds17           9895 	ld	a,(#_greetindex+1)
   34C9 B7                 9896 	or	a,a
   34CA 28 02              9897 	jr	Z,00153$
   34CC                    9898 00152$:
   34CC 18 17              9899 	jr	00110$
   34CE                    9900 00153$:
                           9901 ;demo.c:1523: slowend = 24;
   34CE 21r1Es17           9902 	ld	hl,#_slowend + 0
   34D1 36 18              9903 	ld	(hl), #0x18
   34D3 21r1Fs17           9904 	ld	hl,#_slowend + 1
   34D6 36 00              9905 	ld	(hl), #0x00
                           9906 ;demo.c:1524: drawstrslow("Cartoon Horse Demo Force",20,184);
   34D8 21 14 B8           9907 	ld	hl,#0xB814
   34DB E5                 9908 	push	hl
   34DC 21r6Fs35           9909 	ld	hl,#__str_18
   34DF E5                 9910 	push	hl
   34E0 CDrC9s15           9911 	call	_drawstrslow
   34E3 F1                 9912 	pop	af
   34E4 F1                 9913 	pop	af
   34E5                    9914 00110$:
                           9915 ;demo.c:1526: if (ltrpointer >= slowend) { greetindex++; ltrpointer = 0; }
   34E5 21r1Es17           9916 	ld	hl,#_slowend
   34E8 3Ar1Cs17           9917 	ld	a,(#_ltrpointer+0)
   34EB 96                 9918 	sub	a,(hl)
   34EC 3Ar1Ds17           9919 	ld	a,(#_ltrpointer+1)
   34EF 23                 9920 	inc	hl
   34F0 9E                 9921 	sbc	a,(hl)
   34F1 FAr0Es35           9922 	jp	M,00125$
   34F4 FD 21r8Cs17        9923 	ld	iy,#_greetindex
   34F8 FD 34 00           9924 	inc	0 (iy)
   34FB 20 07              9925 	jr	NZ,00154$
   34FD FD 21r8Cs17        9926 	ld	iy,#_greetindex
   3501 FD 34 01           9927 	inc	1 (iy)
   3504                    9928 00154$:
   3504 21r1Cs17           9929 	ld	hl,#_ltrpointer + 0
   3507 36 00              9930 	ld	(hl), #0x00
   3509 21r1Ds17           9931 	ld	hl,#_ltrpointer + 1
   350C 36 00              9932 	ld	(hl), #0x00
   350E                    9933 00125$:
   350E DD F9              9934 	ld	sp,ix
   3510 DD E1              9935 	pop	ix
   3512 C9                 9936 	ret
   3513                    9937 _points_end::
   3513                    9938 __str_15:
   3513 47 52 45 45 54 49  9939 	.ascii "GREETINGS TO VARIOUS GROUPS"
        4E 47 53 20 54 4F
        20 56 41 52 49 4F
        55 53 20 47 52 4F
        55 50 53
   352E 00                 9940 	.db 0x00
   352F                    9941 __str_16:
   352F 54 72 69 6C 6F 62  9942 	.ascii "Trilobit  Prismbeings  Ivory Labs"
        69 74 20 20 50 72
        69 73 6D 62 65 69
        6E 67 73 20 20 49
        76 6F 72 79 20 4C
        61 62 73
   3550 00                 9943 	.db 0x00
   3551                    9944 __str_17:
   3551 50 57 50 20 20 44  9945 	.ascii "PWP  Dekadence  Paraguay  ISO"
        65 6B 61 64 65 6E
        63 65 20 20 50 61
        72 61 67 75 61 79
        20 20 49 53 4F
   356E 00                 9946 	.db 0x00
   356F                    9947 __str_18:
   356F 43 61 72 74 6F 6F  9948 	.ascii "Cartoon Horse Demo Force"
        6E 20 48 6F 72 73
        65 20 44 65 6D 6F
        20 46 6F 72 63 65
   3587 00                 9949 	.db 0x00
                           9950 ;demo.c:1531: void bigtext() {
                           9951 ;	---------------------------------
                           9952 ; Function bigtext
                           9953 ; ---------------------------------
   3588                    9954 _bigtext_start::
   3588                    9955 _bigtext:
                           9956 ;demo.c:1533: if (bigtextp == 0) {
   3588 3Ar8Es17           9957 	ld	a,(#_bigtextp+0)
   358B FD 21r8Es17        9958 	ld	iy,#_bigtextp
   358F FD B6 01           9959 	or	a,1 (iy)
   3592 C2r8Bs36           9960 	jp	NZ,00102$
                           9961 ;demo.c:1534: cmd.size_x = 2;
   3595 21r9Cs16           9962 	ld	hl, #_cmd + 8
   3598 36 02              9963 	ld	(hl),#0x02
   359A 23                 9964 	inc	hl
   359B 36 00              9965 	ld	(hl),#0x00
                           9966 ;demo.c:1535: cmd.size_y = 212;
   359D 21r9Es16           9967 	ld	hl, #_cmd + 10
   35A0 36 D4              9968 	ld	(hl),#0xD4
   35A2 23                 9969 	inc	hl
   35A3 36 00              9970 	ld	(hl),#0x00
                           9971 ;demo.c:1536: cmd.data = 0;
                           9972 ;demo.c:1537: cmd.argument = 0x00; // from 70xY to left
   35A5 3E 00              9973 	ld	a,#0x00
   35A7 32rA0s16           9974 	ld	(#_cmd + 12),a
   35AA 32rA1s16           9975 	ld	(#_cmd + 13),a
                           9976 ;demo.c:1538: cmd.command = 0xd0; // vram to vram, y only
   35AD 01rA2s16           9977 	ld	bc,#_cmd + 14
   35B0 3E D0              9978 	ld	a,#0xD0
   35B2 02                 9979 	ld	(bc),a
                           9980 ;demo.c:1539: cmd.source_x = 255;
   35B3 21r94s16           9981 	ld	hl,#_cmd
   35B6 36 FF              9982 	ld	(hl),#0xFF
   35B8 23                 9983 	inc	hl
   35B9 36 00              9984 	ld	(hl),#0x00
                           9985 ;demo.c:1540: cmd.source_y = 0;
   35BB 21r96s16           9986 	ld	hl, #_cmd + 2
   35BE 36 00              9987 	ld	(hl),#0x00
   35C0 23                 9988 	inc	hl
   35C1 36 00              9989 	ld	(hl),#0x00
                           9990 ;demo.c:1542: for (x = 0; x < 256; x+=4) {
   35C3 01 00 00           9991 	ld	bc,#0x0000
   35C6                    9992 00103$:
   35C6 79                 9993 	ld	a,c
   35C7 D6 00              9994 	sub	a,#0x00
   35C9 78                 9995 	ld	a,b
   35CA DE 01              9996 	sbc	a,#0x01
   35CC F2r03s36           9997 	jp	P,00106$
                           9998 ;demo.c:1543: waitVB();
   35CF 76                 9999 		halt 
                          10000 ;demo.c:1544: cmd.dest_y = 256;
   35D0 11r9As16          10001 	ld	de,#_cmd + 6
   35D3 EB                10002 	ex	de,hl
   35D4 36 00             10003 	ld	(hl),#0x00
   35D6 23                10004 	inc	hl
   35D7 36 01             10005 	ld	(hl),#0x01
                          10006 ;demo.c:1545: cmd.dest_x = x;
   35D9 11r98s16          10007 	ld	de,#_cmd + 4
   35DC EB                10008 	ex	de,hl
   35DD 71                10009 	ld	(hl),c
   35DE 23                10010 	inc	hl
   35DF 70                10011 	ld	(hl),b
                          10012 ;demo.c:1546: vdp_copier(&cmd);
   35E0 C5                10013 	push	bc
   35E1 21r94s16          10014 	ld	hl,#_cmd
   35E4 E5                10015 	push	hl
   35E5 CDr00s00          10016 	call	_vdp_copier
   35E8 F1                10017 	pop	af
   35E9 C1                10018 	pop	bc
                          10019 ;demo.c:1547: cmd.dest_y = 0;
   35EA 11r9As16          10020 	ld	de,#_cmd + 6
   35ED EB                10021 	ex	de,hl
   35EE 36 00             10022 	ld	(hl),#0x00
   35F0 23                10023 	inc	hl
   35F1 36 00             10024 	ld	(hl),#0x00
                          10025 ;demo.c:1548: vdp_copier(&cmd);
   35F3 C5                10026 	push	bc
   35F4 21r94s16          10027 	ld	hl,#_cmd
   35F7 E5                10028 	push	hl
   35F8 CDr00s00          10029 	call	_vdp_copier
   35FB F1                10030 	pop	af
   35FC C1                10031 	pop	bc
                          10032 ;demo.c:1542: for (x = 0; x < 256; x+=4) {
   35FD 03                10033 	inc	bc
   35FE 03                10034 	inc	bc
   35FF 03                10035 	inc	bc
   3600 03                10036 	inc	bc
   3601 18 C3             10037 	jr	00103$
   3603                   10038 00106$:
                          10039 ;demo.c:1551: for (x = 254; x > 0; x-=4) {
   3603 01 FE 00          10040 	ld	bc,#0x00FE
   3606                   10041 00107$:
   3606 3E 00             10042 	ld	a,#0x00
   3608 91                10043 	sub	a,c
   3609 3E 00             10044 	ld	a,#0x00
   360B 98                10045 	sbc	a,b
   360C F2r47s36          10046 	jp	P,00110$
                          10047 ;demo.c:1552: waitVB();
   360F 76                10048 		halt 
                          10049 ;demo.c:1553: cmd.dest_y = 256;
   3610 11r9As16          10050 	ld	de,#_cmd + 6
   3613 EB                10051 	ex	de,hl
   3614 36 00             10052 	ld	(hl),#0x00
   3616 23                10053 	inc	hl
   3617 36 01             10054 	ld	(hl),#0x01
                          10055 ;demo.c:1554: cmd.dest_x = x;
   3619 11r98s16          10056 	ld	de,#_cmd + 4
   361C EB                10057 	ex	de,hl
   361D 71                10058 	ld	(hl),c
   361E 23                10059 	inc	hl
   361F 70                10060 	ld	(hl),b
                          10061 ;demo.c:1555: vdp_copier(&cmd);
   3620 C5                10062 	push	bc
   3621 21r94s16          10063 	ld	hl,#_cmd
   3624 E5                10064 	push	hl
   3625 CDr00s00          10065 	call	_vdp_copier
   3628 F1                10066 	pop	af
   3629 C1                10067 	pop	bc
                          10068 ;demo.c:1556: cmd.dest_y = 0;
   362A 11r9As16          10069 	ld	de,#_cmd + 6
   362D EB                10070 	ex	de,hl
   362E 36 00             10071 	ld	(hl),#0x00
   3630 23                10072 	inc	hl
   3631 36 00             10073 	ld	(hl),#0x00
                          10074 ;demo.c:1557: vdp_copier(&cmd);
   3633 C5                10075 	push	bc
   3634 21r94s16          10076 	ld	hl,#_cmd
   3637 E5                10077 	push	hl
   3638 CDr00s00          10078 	call	_vdp_copier
   363B F1                10079 	pop	af
   363C C1                10080 	pop	bc
                          10081 ;demo.c:1551: for (x = 254; x > 0; x-=4) {
   363D 79                10082 	ld	a,c
   363E C6 FC             10083 	add	a,#0xFC
   3640 4F                10084 	ld	c,a
   3641 78                10085 	ld	a,b
   3642 CE FF             10086 	adc	a,#0xFF
   3644 47                10087 	ld	b,a
   3645 18 BF             10088 	jr	00107$
   3647                   10089 00110$:
                          10090 ;demo.c:1560: vdp_load_palette(twister_palette);
   3647 21r30s16          10091 	ld	hl,#_twister_palette
   364A E5                10092 	push	hl
   364B CDr00s00          10093 	call	_vdp_load_palette
   364E F1                10094 	pop	af
                          10095 ;demo.c:1561: drawstr2x("DIGITAL",26,44);
   364F 21 1A 2C          10096 	ld	hl,#0x2C1A
   3652 E5                10097 	push	hl
   3653 21rD5s36          10098 	ld	hl,#__str_19
   3656 E5                10099 	push	hl
   3657 CDr67s16          10100 	call	_drawstr2x
   365A F1                10101 	pop	af
   365B F1                10102 	pop	af
                          10103 ;demo.c:1562: drawstr2x("SOUNDS",27,84);
   365C 21 1B 54          10104 	ld	hl,#0x541B
   365F E5                10105 	push	hl
   3660 21rDDs36          10106 	ld	hl,#__str_20
   3663 E5                10107 	push	hl
   3664 CDr67s16          10108 	call	_drawstr2x
   3667 F1                10109 	pop	af
   3668 F1                10110 	pop	af
                          10111 ;demo.c:1563: drawstr2x("SYSTEM",25,124);
   3669 21 19 7C          10112 	ld	hl,#0x7C19
   366C E5                10113 	push	hl
   366D 21rE4s36          10114 	ld	hl,#__str_21
   3670 E5                10115 	push	hl
   3671 CDr67s16          10116 	call	_drawstr2x
   3674 F1                10117 	pop	af
   3675 F1                10118 	pop	af
                          10119 ;demo.c:1564: bigtextp++;
   3676 FD 21r8Es17       10120 	ld	iy,#_bigtextp
   367A FD 34 00          10121 	inc	0 (iy)
   367D 20 07             10122 	jr	NZ,00120$
   367F FD 21r8Es17       10123 	ld	iy,#_bigtextp
   3683 FD 34 01          10124 	inc	1 (iy)
   3686                   10125 00120$:
                          10126 ;demo.c:1565: tri_inited = 2;
   3686 21r6Fs17          10127 	ld	hl,#_tri_inited + 0
   3689 36 02             10128 	ld	(hl), #0x02
   368B                   10129 00102$:
                          10130 ;demo.c:1568: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   368B 21r20s17          10131 	ld	hl,#_ff + 0
   368E 4E                10132 	ld	c,(hl)
   368F 21r21s17          10133 	ld	hl,#_ff + 1
   3692 46                10134 	ld	b,(hl)
   3693 CB 28             10135 	sra	b
   3695 CB 19             10136 	rr	c
   3697 CB 28             10137 	sra	b
   3699 CB 19             10138 	rr	c
   369B 21r20s17          10139 	ld	hl,#_ff + 0
   369E 5E                10140 	ld	e,(hl)
   369F 21r21s17          10141 	ld	hl,#_ff + 1
   36A2 56                10142 	ld	d,(hl)
   36A3 CB 2A             10143 	sra	d
   36A5 CB 1B             10144 	rr	e
   36A7 CB 2A             10145 	sra	d
   36A9 CB 1B             10146 	rr	e
   36AB CB 2A             10147 	sra	d
   36AD CB 1B             10148 	rr	e
   36AF 43                10149 	ld	b,e
   36B0 79                10150 	ld	a,c
   36B1 F5                10151 	push	af
   36B2 33                10152 	inc	sp
   36B3 C5                10153 	push	bc
   36B4 33                10154 	inc	sp
   36B5 41                10155 	ld	b,c
   36B6 0E 04             10156 	ld	c,#0x04
   36B8 C5                10157 	push	bc
   36B9 CDr00s00          10158 	call	_msx2_palette
   36BC F1                10159 	pop	af
   36BD F1                10160 	pop	af
                          10161 ;demo.c:1569: ff+=2;
   36BE 21r20s17          10162 	ld	hl,#_ff
   36C1 7E                10163 	ld	a,(hl)
   36C2 C6 02             10164 	add	a,#0x02
   36C4 23                10165 	inc	hl
   36C5 2B                10166 	dec	hl
   36C6 C5                10167 	push	bc
   36C7 4F                10168 	ld	c, a
   36C8 23                10169 	inc	hl
   36C9 7E                10170 	ld	a, (hl)
   36CA 47                10171 	ld	b, a
   36CB 79                10172 	ld	a, c
   36CC 2B                10173 	dec	hl
   36CD 77                10174 	ld	(hl), a
   36CE 78                10175 	ld	a, b
   36CF C1                10176 	pop	bc
   36D0 CE 00             10177 	adc	a,#0x00
   36D2 23                10178 	inc	hl
   36D3 77                10179 	ld	(hl),a
   36D4 C9                10180 	ret
   36D5                   10181 _bigtext_end::
   36D5                   10182 __str_19:
   36D5 44 49 47 49 54 41 10183 	.ascii "DIGITAL"
        4C
   36DC 00                10184 	.db 0x00
   36DD                   10185 __str_20:
   36DD 53 4F 55 4E 44 53 10186 	.ascii "SOUNDS"
   36E3 00                10187 	.db 0x00
   36E4                   10188 __str_21:
   36E4 53 59 53 54 45 4D 10189 	.ascii "SYSTEM"
   36EA 00                10190 	.db 0x00
                          10191 ;demo.c:1572: void waiter() {
                          10192 ;	---------------------------------
                          10193 ; Function waiter
                          10194 ; ---------------------------------
   36EB                   10195 _waiter_start::
   36EB                   10196 _waiter:
                          10197 ;demo.c:1574: }
   36EB C9                10198 	ret
   36EC                   10199 _waiter_end::
                          10200 ;demo.c:1581: void do_quit() {
                          10201 ;	---------------------------------
                          10202 ; Function do_quit
                          10203 ; ---------------------------------
   36EC                   10204 _do_quit_start::
   36EC                   10205 _do_quit:
                          10206 ;demo.c:1582: waitVB();
   36EC 76                10207 		halt 
                          10208 ;demo.c:1583: uninstall_isr();
   36ED CDr00s00          10209 	call	_uninstall_isr
                          10210 ;demo.c:1584: PLY_Stop();
   36F0 CDr00s00          10211 	call	_PLY_Stop
                          10212 ;demo.c:1585: PLY_SendRegisters();
   36F3 CDr00s00          10213 	call	_PLY_SendRegisters
                          10214 ;demo.c:1587: screen(0);
   36F6 3E 00             10215 	ld	a,#0x00
   36F8 F5                10216 	push	af
   36F9 33                10217 	inc	sp
   36FA CDr00s00          10218 	call	_screen
   36FD 33                10219 	inc	sp
                          10220 ;demo.c:1589: puts("demo quit\r\n\r\n");
   36FE 21r0Fs37          10221 	ld	hl,#__str_22
   3701 E5                10222 	push	hl
   3702 CDr00s00          10223 	call	_puts
   3705 F1                10224 	pop	af
                          10225 ;demo.c:1591: exit(0);	
   3706 3E 00             10226 	ld	a,#0x00
   3708 F5                10227 	push	af
   3709 33                10228 	inc	sp
   370A CDr00s00          10229 	call	_exit
   370D 33                10230 	inc	sp
   370E C9                10231 	ret
   370F                   10232 _do_quit_end::
   370F                   10233 __str_22:
   370F 64 65 6D 6F 20 71 10234 	.ascii "demo quit"
        75 69 74
   3718 0D                10235 	.db 0x0D
   3719 0A                10236 	.db 0x0A
   371A 0D                10237 	.db 0x0D
   371B 0A                10238 	.db 0x0A
   371C 00                10239 	.db 0x00
                          10240 ;demo.c:1597: void main() {
                          10241 ;	---------------------------------
                          10242 ; Function main
                          10243 ; ---------------------------------
   371D                   10244 _main_start::
   371D                   10245 _main:
   371D DD E5             10246 	push	ix
   371F DD 21 00 00       10247 	ld	ix,#0
   3723 DD 39             10248 	add	ix,sp
   3725 21 F9 FF          10249 	ld	hl,#-7
   3728 39                10250 	add	hl,sp
   3729 F9                10251 	ld	sp,hl
                          10252 ;demo.c:1598: unsigned char quit=0;
   372A DD 36 FF 00       10253 	ld	-1 (ix),#0x00
                          10254 ;demo.c:1604: spindown();
   372E CDr00s00          10255 	call	_spindown
                          10256 ;demo.c:1606: puts("demo init\r\n\r\n");
   3731 21rF9s3B          10257 	ld	hl,#__str_23
   3734 E5                10258 	push	hl
   3735 CDr00s00          10259 	call	_puts
   3738 F1                10260 	pop	af
                          10261 ;demo.c:1608: for (y = 0; y < 2; y++) {
   3739 DD 36 FB 00       10262 	ld	-5 (ix),#0x00
   373D DD 36 FC 00       10263 	ld	-4 (ix),#0x00
   3741                   10264 00118$:
   3741 DD 7E FB          10265 	ld	a,-5 (ix)
   3744 D6 02             10266 	sub	a,#0x02
   3746 DD 7E FC          10267 	ld	a,-4 (ix)
   3749 DE 00             10268 	sbc	a,#0x00
   374B F2rCDs37          10269 	jp	P,00121$
                          10270 ;demo.c:1609: for (x = 0; x < 16; x++) {
   374E DD 4E FB          10271 	ld	c,-5 (ix)
   3751 DD 46 FC          10272 	ld	b,-4 (ix)
   3754 CB 21             10273 	sla	c
   3756 CB 10             10274 	rl	b
   3758 CB 21             10275 	sla	c
   375A CB 10             10276 	rl	b
   375C CB 21             10277 	sla	c
   375E CB 10             10278 	rl	b
   3760 CB 21             10279 	sla	c
   3762 CB 10             10280 	rl	b
   3764 21 81 03          10281 	ld	hl,#0x0381
   3767 09                10282 	add	hl,bc
   3768 DD 75 F9          10283 	ld	-7 (ix),l
   376B DD 74 FA          10284 	ld	-6 (ix),h
   376E DD 36 FD 00       10285 	ld	-3 (ix),#0x00
   3772 DD 36 FE 00       10286 	ld	-2 (ix),#0x00
   3776                   10287 00114$:
   3776 DD 7E FD          10288 	ld	a,-3 (ix)
   3779 D6 10             10289 	sub	a,#0x10
   377B DD 7E FE          10290 	ld	a,-2 (ix)
   377E DE 00             10291 	sbc	a,#0x00
   3780 F2rC2s37          10292 	jp	P,00120$
                          10293 ;demo.c:1610: tri_lookup_x[(y*16)+x] = x * 16;
   3783 DD 7E FB          10294 	ld	a,-5 (ix)
   3786 07                10295 	rlca
   3787 07                10296 	rlca
   3788 07                10297 	rlca
   3789 07                10298 	rlca
   378A E6 F0             10299 	and	a,#0xF0
   378C 5F                10300 	ld	e,a
   378D DD 56 FD          10301 	ld	d,-3 (ix)
   3790 7B                10302 	ld	a,e
   3791 82                10303 	add	a,d
   3792 5F                10304 	ld	e, a
   3793 C6r00             10305 	add	a,#<_tri_lookup_x
   3795 4F                10306 	ld	c,a
   3796 3Es01             10307 	ld	a,#>_tri_lookup_x
   3798 CE 00             10308 	adc	a,#0x00
   379A 47                10309 	ld	b,a
   379B 7A                10310 	ld	a,d
   379C 07                10311 	rlca
   379D 07                10312 	rlca
   379E 07                10313 	rlca
   379F 07                10314 	rlca
   37A0 E6 F0             10315 	and	a,#0xF0
   37A2 02                10316 	ld	(bc),a
                          10317 ;demo.c:1611: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   37A3 CB 23             10318 	sla	e
   37A5 3Er88             10319 	ld	a,#<_tri_lookup_y
   37A7 83                10320 	add	a,e
   37A8 6F                10321 	ld	l,a
   37A9 3Es01             10322 	ld	a,#>_tri_lookup_y
   37AB CE 00             10323 	adc	a,#0x00
   37AD 67                10324 	ld	h,a
   37AE DD 7E F9          10325 	ld	a,-7 (ix)
   37B1 77                10326 	ld	(hl),a
   37B2 23                10327 	inc	hl
   37B3 DD 7E FA          10328 	ld	a,-6 (ix)
   37B6 77                10329 	ld	(hl),a
                          10330 ;demo.c:1609: for (x = 0; x < 16; x++) {
   37B7 DD 34 FD          10331 	inc	-3 (ix)
   37BA 20 03             10332 	jr	NZ,00146$
   37BC DD 34 FE          10333 	inc	-2 (ix)
   37BF                   10334 00146$:
   37BF C3r76s37          10335 	jp	00114$
   37C2                   10336 00120$:
                          10337 ;demo.c:1608: for (y = 0; y < 2; y++) {
   37C2 DD 34 FB          10338 	inc	-5 (ix)
   37C5 20 03             10339 	jr	NZ,00147$
   37C7 DD 34 FC          10340 	inc	-4 (ix)
   37CA                   10341 00147$:
   37CA C3r41s37          10342 	jp	00118$
   37CD                   10343 00121$:
                          10344 ;demo.c:1615: for (x = 0; x < 26; x++) {
   37CD DD 36 FD 00       10345 	ld	-3 (ix),#0x00
   37D1 DD 36 FE 00       10346 	ld	-2 (ix),#0x00
   37D5 DD 36 F9 00       10347 	ld	-7 (ix),#0x00
   37D9 DD 36 FA 00       10348 	ld	-6 (ix),#0x00
   37DD                   10349 00122$:
   37DD DD 7E FD          10350 	ld	a,-3 (ix)
   37E0 D6 1A             10351 	sub	a,#0x1A
   37E2 DD 7E FE          10352 	ld	a,-2 (ix)
   37E5 DE 00             10353 	sbc	a,#0x00
   37E7 F2r39s38          10354 	jp	P,00125$
                          10355 ;demo.c:1616: twelvetimes[x] = x * 12;
   37EA DD 4E FD          10356 	ld	c,-3 (ix)
   37ED DD 46 FE          10357 	ld	b,-2 (ix)
   37F0 CB 21             10358 	sla	c
   37F2 CB 10             10359 	rl	b
   37F4 21r20s01          10360 	ld	hl,#_twelvetimes
   37F7 09                10361 	add	hl,bc
   37F8 DD 7E F9          10362 	ld	a,-7 (ix)
   37FB 77                10363 	ld	(hl),a
   37FC 23                10364 	inc	hl
   37FD DD 7E FA          10365 	ld	a,-6 (ix)
   3800 77                10366 	ld	(hl),a
                          10367 ;demo.c:1617: eighttimes[x] = x * 8;
   3801 21r54s01          10368 	ld	hl,#_eighttimes
   3804 09                10369 	add	hl,bc
   3805 4D                10370 	ld	c,l
   3806 44                10371 	ld	b,h
   3807 DD 5E FD          10372 	ld	e,-3 (ix)
   380A DD 56 FE          10373 	ld	d,-2 (ix)
   380D CB 23             10374 	sla	e
   380F CB 12             10375 	rl	d
   3811 CB 23             10376 	sla	e
   3813 CB 12             10377 	rl	d
   3815 CB 23             10378 	sla	e
   3817 CB 12             10379 	rl	d
   3819 69                10380 	ld	l,c
   381A 60                10381 	ld	h,b
   381B 73                10382 	ld	(hl),e
   381C 23                10383 	inc	hl
   381D 72                10384 	ld	(hl),d
                          10385 ;demo.c:1615: for (x = 0; x < 26; x++) {
   381E DD 7E F9          10386 	ld	a,-7 (ix)
   3821 C6 0C             10387 	add	a,#0x0C
   3823 DD 77 F9          10388 	ld	-7 (ix),a
   3826 DD 7E FA          10389 	ld	a,-6 (ix)
   3829 CE 00             10390 	adc	a,#0x00
   382B DD 77 FA          10391 	ld	-6 (ix),a
   382E DD 34 FD          10392 	inc	-3 (ix)
   3831 20 03             10393 	jr	NZ,00152$
   3833 DD 34 FE          10394 	inc	-2 (ix)
   3836                   10395 00152$:
   3836 C3rDDs37          10396 	jp	00122$
   3839                   10397 00125$:
                          10398 ;demo.c:1620: puts("music init...");
   3839 21r07s3C          10399 	ld	hl,#__str_24
   383C E5                10400 	push	hl
   383D CDr00s00          10401 	call	_puts
   3840 F1                10402 	pop	af
                          10403 ;demo.c:1622: PLY_SongPtr = (char *)0x0103;
   3841 21r00s00          10404 	ld	hl,#_PLY_SongPtr + 0
   3844 36 03             10405 	ld	(hl), #0x03
   3846 21r01s00          10406 	ld	hl,#_PLY_SongPtr + 1
   3849 36 01             10407 	ld	(hl), #0x01
                          10408 ;demo.c:1623: PLY_Init();
   384B CDr00s00          10409 	call	_PLY_Init
                          10410 ;demo.c:1624: puts("done.\r\n");
   384E 21r15s3C          10411 	ld	hl,#__str_25
   3851 E5                10412 	push	hl
   3852 CDr00s00          10413 	call	_puts
   3855 F1                10414 	pop	af
                          10415 ;demo.c:1626: puts("detecting vdp type...\r\n\r\n");
   3856 21r1Ds3C          10416 	ld	hl,#__str_26
   3859 E5                10417 	push	hl
   385A CDr00s00          10418 	call	_puts
   385D F1                10419 	pop	af
                          10420 ;demo.c:1627: if(isvdp2())
   385E CDr00s00          10421 	call	_isvdp2
   3861 AF                10422 	xor	a,a
   3862 B5                10423 	or	a,l
   3863 28 0A             10424 	jr	Z,00102$
                          10425 ;demo.c:1629: puts("vdp2 found! setting 50hz...\r\n\r\n");
   3865 21r37s3C          10426 	ld	hl,#__str_27
   3868 E5                10427 	push	hl
   3869 CDr00s00          10428 	call	_puts
   386C F1                10429 	pop	af
   386D 18 0B             10430 	jr	00103$
   386F                   10431 00102$:
                          10432 ;demo.c:1632: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   386F 21r57s3C          10433 	ld	hl,#__str_28
   3872 E5                10434 	push	hl
   3873 CDr00s00          10435 	call	_puts
   3876 F1                10436 	pop	af
                          10437 ;demo.c:1633: do_quit();
   3877 CDrECs36          10438 	call	_do_quit
   387A                   10439 00103$:
                          10440 ;demo.c:1636: pal_load("TWISTER PL5",32,1);
   387A 21 01 00          10441 	ld	hl,#0x0001
   387D E5                10442 	push	hl
   387E 3E 20             10443 	ld	a,#0x20
   3880 F5                10444 	push	af
   3881 33                10445 	inc	sp
   3882 21r9Es3C          10446 	ld	hl,#__str_29
   3885 E5                10447 	push	hl
   3886 CDrA3s09          10448 	call	_pal_load
   3889 F1                10449 	pop	af
   388A F1                10450 	pop	af
   388B 33                10451 	inc	sp
                          10452 ;demo.c:1637: memcpy(twister_palette, cur_palette, 32);
   388C 21 20 00          10453 	ld	hl,#0x0020
   388F E5                10454 	push	hl
   3890 21rD0s15          10455 	ld	hl,#_cur_palette
   3893 E5                10456 	push	hl
   3894 21r30s16          10457 	ld	hl,#_twister_palette
   3897 E5                10458 	push	hl
   3898 CDr00s00          10459 	call	_memcpy
   389B F1                10460 	pop	af
   389C F1                10461 	pop	af
   389D F1                10462 	pop	af
                          10463 ;demo.c:1638: pal_load("LF      PL5",32,1);
   389E 21 01 00          10464 	ld	hl,#0x0001
   38A1 E5                10465 	push	hl
   38A2 3E 20             10466 	ld	a,#0x20
   38A4 F5                10467 	push	af
   38A5 33                10468 	inc	sp
   38A6 21rAAs3C          10469 	ld	hl,#__str_30
   38A9 E5                10470 	push	hl
   38AA CDrA3s09          10471 	call	_pal_load
   38AD F1                10472 	pop	af
   38AE F1                10473 	pop	af
   38AF 33                10474 	inc	sp
                          10475 ;demo.c:1639: memcpy(tf_palette, cur_palette, 32);
   38B0 21 20 00          10476 	ld	hl,#0x0020
   38B3 E5                10477 	push	hl
   38B4 21rD0s15          10478 	ld	hl,#_cur_palette
   38B7 E5                10479 	push	hl
   38B8 21r50s16          10480 	ld	hl,#_tf_palette
   38BB E5                10481 	push	hl
   38BC CDr00s00          10482 	call	_memcpy
   38BF F1                10483 	pop	af
   38C0 F1                10484 	pop	af
   38C1 F1                10485 	pop	af
                          10486 ;demo.c:1640: pal_load("BOXES   PL5",32,1);
   38C2 21 01 00          10487 	ld	hl,#0x0001
   38C5 E5                10488 	push	hl
   38C6 3E 20             10489 	ld	a,#0x20
   38C8 F5                10490 	push	af
   38C9 33                10491 	inc	sp
   38CA 21rB6s3C          10492 	ld	hl,#__str_31
   38CD E5                10493 	push	hl
   38CE CDrA3s09          10494 	call	_pal_load
   38D1 F1                10495 	pop	af
   38D2 F1                10496 	pop	af
   38D3 33                10497 	inc	sp
                          10498 ;demo.c:1641: memcpy(boxes_palette, cur_palette, 32);
   38D4 21 20 00          10499 	ld	hl,#0x0020
   38D7 E5                10500 	push	hl
   38D8 21rD0s15          10501 	ld	hl,#_cur_palette
   38DB E5                10502 	push	hl
   38DC 21r70s16          10503 	ld	hl,#_boxes_palette
   38DF E5                10504 	push	hl
   38E0 CDr00s00          10505 	call	_memcpy
   38E3 F1                10506 	pop	af
   38E4 F1                10507 	pop	af
   38E5 F1                10508 	pop	af
                          10509 ;demo.c:1642: pal_load("BULBS   PL5",32,1);
   38E6 21 01 00          10510 	ld	hl,#0x0001
   38E9 E5                10511 	push	hl
   38EA 3E 20             10512 	ld	a,#0x20
   38EC F5                10513 	push	af
   38ED 33                10514 	inc	sp
   38EE 21rC2s3C          10515 	ld	hl,#__str_32
   38F1 E5                10516 	push	hl
   38F2 CDrA3s09          10517 	call	_pal_load
   38F5 F1                10518 	pop	af
   38F6 F1                10519 	pop	af
   38F7 33                10520 	inc	sp
                          10521 ;demo.c:1643: memcpy(bulbs_palette, cur_palette, 32);
   38F8 21 20 00          10522 	ld	hl,#0x0020
   38FB E5                10523 	push	hl
   38FC 21rD0s15          10524 	ld	hl,#_cur_palette
   38FF E5                10525 	push	hl
   3900 21rF0s15          10526 	ld	hl,#_bulbs_palette
   3903 E5                10527 	push	hl
   3904 CDr00s00          10528 	call	_memcpy
   3907 F1                10529 	pop	af
   3908 F1                10530 	pop	af
   3909 F1                10531 	pop	af
                          10532 ;demo.c:1645: scratch_clear();
   390A CDr90s09          10533 	call	_scratch_clear
                          10534 ;demo.c:1646: vdp_load_palette(scratch);
   390D 21r50s15          10535 	ld	hl,#_scratch
   3910 E5                10536 	push	hl
   3911 CDr00s00          10537 	call	_vdp_load_palette
   3914 F1                10538 	pop	af
                          10539 ;demo.c:1648: vdp_set_screen5();
   3915 CDr00s00          10540 	call	_vdp_set_screen5
                          10541 ;demo.c:1650: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   3918 21 00 00          10542 	ld	hl,#0x0000
   391B E5                10543 	push	hl
   391C 2E 01             10544 	ld	l, #0x01
   391E E5                10545 	push	hl
   391F 2E 00             10546 	ld	l, #0x00
   3921 E5                10547 	push	hl
   3922 21 7F 09          10548 	ld	hl,#0x097F
   3925 E5                10549 	push	hl
   3926 21rCEs3C          10550 	ld	hl,#__str_33
   3929 E5                10551 	push	hl
   392A CDr99s0B          10552 	call	_pck_load
   392D FD 21 0A 00       10553 	ld	iy,#0x000A
   3931 FD 39             10554 	add	iy,sp
   3933 FD F9             10555 	ld	sp,iy
                          10556 ;demo.c:1652: cmd.size_x = 256;
   3935 21r9Cs16          10557 	ld	hl, #_cmd + 8
   3938 36 00             10558 	ld	(hl),#0x00
   393A 23                10559 	inc	hl
   393B 36 01             10560 	ld	(hl),#0x01
                          10561 ;demo.c:1653: cmd.size_y = 212;
   393D 21r9Es16          10562 	ld	hl, #_cmd + 10
   3940 36 D4             10563 	ld	(hl),#0xD4
   3942 23                10564 	inc	hl
   3943 36 00             10565 	ld	(hl),#0x00
                          10566 ;demo.c:1654: cmd.data = 0;
                          10567 ;demo.c:1655: cmd.argument = 0x00;
   3945 3E 00             10568 	ld	a,#0x00
   3947 32rA0s16          10569 	ld	(#_cmd + 12),a
   394A 32rA1s16          10570 	ld	(#_cmd + 13),a
                          10571 ;demo.c:1656: cmd.command = 0xd0; 
   394D 01rA2s16          10572 	ld	bc,#_cmd + 14
   3950 3E D0             10573 	ld	a,#0xD0
   3952 02                10574 	ld	(bc),a
                          10575 ;demo.c:1657: cmd.source_x = 0;
   3953 21r94s16          10576 	ld	hl,#_cmd
   3956 36 00             10577 	ld	(hl),#0x00
   3958 23                10578 	inc	hl
   3959 36 00             10579 	ld	(hl),#0x00
                          10580 ;demo.c:1658: cmd.source_y = 0;
   395B 21r96s16          10581 	ld	hl, #_cmd + 2
   395E 36 00             10582 	ld	(hl),#0x00
   3960 23                10583 	inc	hl
   3961 36 00             10584 	ld	(hl),#0x00
                          10585 ;demo.c:1659: cmd.dest_x = 0;
   3963 21r98s16          10586 	ld	hl, #_cmd + 4
   3966 36 00             10587 	ld	(hl),#0x00
   3968 23                10588 	inc	hl
   3969 36 00             10589 	ld	(hl),#0x00
                          10590 ;demo.c:1660: cmd.dest_y = 256;
   396B 21r9As16          10591 	ld	hl, #_cmd + 6
   396E 36 00             10592 	ld	(hl),#0x00
   3970 23                10593 	inc	hl
   3971 36 01             10594 	ld	(hl),#0x01
                          10595 ;demo.c:1661: vdp_copier(&cmd);
   3973 21r94s16          10596 	ld	hl,#_cmd
   3976 E5                10597 	push	hl
   3977 CDr00s00          10598 	call	_vdp_copier
   397A F1                10599 	pop	af
                          10600 ;demo.c:1663: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   397B 21 00 00          10601 	ld	hl,#0x0000
   397E E5                10602 	push	hl
   397F 2E 01             10603 	ld	l, #0x01
   3981 E5                10604 	push	hl
   3982 2E 00             10605 	ld	l, #0x00
   3984 E5                10606 	push	hl
   3985 21 C0 0F          10607 	ld	hl,#0x0FC0
   3988 E5                10608 	push	hl
   3989 21rDAs3C          10609 	ld	hl,#__str_34
   398C E5                10610 	push	hl
   398D CDr99s0B          10611 	call	_pck_load
   3990 FD 21 0A 00       10612 	ld	iy,#0x000A
   3994 FD 39             10613 	add	iy,sp
   3996 FD F9             10614 	ld	sp,iy
                          10615 ;demo.c:1665: cmd.size_x = 256;
   3998 21r9Cs16          10616 	ld	hl, #_cmd + 8
   399B 36 00             10617 	ld	(hl),#0x00
   399D 23                10618 	inc	hl
   399E 36 01             10619 	ld	(hl),#0x01
                          10620 ;demo.c:1666: cmd.size_y = 212;
   39A0 21r9Es16          10621 	ld	hl, #_cmd + 10
   39A3 36 D4             10622 	ld	(hl),#0xD4
   39A5 23                10623 	inc	hl
   39A6 36 00             10624 	ld	(hl),#0x00
                          10625 ;demo.c:1667: cmd.data = 0;
                          10626 ;demo.c:1668: cmd.argument = 0x00;
   39A8 3E 00             10627 	ld	a,#0x00
   39AA 32rA0s16          10628 	ld	(#_cmd + 12),a
   39AD 32rA1s16          10629 	ld	(#_cmd + 13),a
                          10630 ;demo.c:1669: cmd.command = 0xd0; 
   39B0 01rA2s16          10631 	ld	bc,#_cmd + 14
   39B3 3E D0             10632 	ld	a,#0xD0
   39B5 02                10633 	ld	(bc),a
                          10634 ;demo.c:1670: cmd.source_x = 0;
   39B6 21r94s16          10635 	ld	hl,#_cmd
   39B9 36 00             10636 	ld	(hl),#0x00
   39BB 23                10637 	inc	hl
   39BC 36 00             10638 	ld	(hl),#0x00
                          10639 ;demo.c:1671: cmd.source_y = 0;
   39BE 21r96s16          10640 	ld	hl, #_cmd + 2
   39C1 36 00             10641 	ld	(hl),#0x00
   39C3 23                10642 	inc	hl
   39C4 36 00             10643 	ld	(hl),#0x00
                          10644 ;demo.c:1672: cmd.dest_x = 0;
   39C6 21r98s16          10645 	ld	hl, #_cmd + 4
   39C9 36 00             10646 	ld	(hl),#0x00
   39CB 23                10647 	inc	hl
   39CC 36 00             10648 	ld	(hl),#0x00
                          10649 ;demo.c:1673: cmd.dest_y = 512;
   39CE 21r9As16          10650 	ld	hl, #_cmd + 6
   39D1 36 00             10651 	ld	(hl),#0x00
   39D3 23                10652 	inc	hl
   39D4 36 02             10653 	ld	(hl),#0x02
                          10654 ;demo.c:1674: vdp_copier(&cmd);
   39D6 21r94s16          10655 	ld	hl,#_cmd
   39D9 E5                10656 	push	hl
   39DA CDr00s00          10657 	call	_vdp_copier
   39DD F1                10658 	pop	af
                          10659 ;demo.c:1677: pck_load("BOXES   PCK",2731,0x0000,VRAM_0,0);
   39DE 21 00 00          10660 	ld	hl,#0x0000
   39E1 E5                10661 	push	hl
   39E2 2E 01             10662 	ld	l, #0x01
   39E4 E5                10663 	push	hl
   39E5 2E 00             10664 	ld	l, #0x00
   39E7 E5                10665 	push	hl
   39E8 21 AB 0A          10666 	ld	hl,#0x0AAB
   39EB E5                10667 	push	hl
   39EC 21rE6s3C          10668 	ld	hl,#__str_35
   39EF E5                10669 	push	hl
   39F0 CDr99s0B          10670 	call	_pck_load
   39F3 FD 21 0A 00       10671 	ld	iy,#0x000A
   39F7 FD 39             10672 	add	iy,sp
   39F9 FD F9             10673 	ld	sp,iy
                          10674 ;demo.c:1678: cmd.size_x = 256;
   39FB 21r9Cs16          10675 	ld	hl, #_cmd + 8
   39FE 36 00             10676 	ld	(hl),#0x00
   3A00 23                10677 	inc	hl
   3A01 36 01             10678 	ld	(hl),#0x01
                          10679 ;demo.c:1679: cmd.size_y = 212;
   3A03 21r9Es16          10680 	ld	hl, #_cmd + 10
   3A06 36 D4             10681 	ld	(hl),#0xD4
   3A08 23                10682 	inc	hl
   3A09 36 00             10683 	ld	(hl),#0x00
                          10684 ;demo.c:1680: cmd.data = 0;
                          10685 ;demo.c:1681: cmd.argument = 0x00;
   3A0B 3E 00             10686 	ld	a,#0x00
   3A0D 32rA0s16          10687 	ld	(#_cmd + 12),a
   3A10 32rA1s16          10688 	ld	(#_cmd + 13),a
                          10689 ;demo.c:1682: cmd.command = 0xd0; 
   3A13 01rA2s16          10690 	ld	bc,#_cmd + 14
   3A16 3E D0             10691 	ld	a,#0xD0
   3A18 02                10692 	ld	(bc),a
                          10693 ;demo.c:1683: cmd.source_x = 0;
   3A19 21r94s16          10694 	ld	hl,#_cmd
   3A1C 36 00             10695 	ld	(hl),#0x00
   3A1E 23                10696 	inc	hl
   3A1F 36 00             10697 	ld	(hl),#0x00
                          10698 ;demo.c:1684: cmd.source_y = 0;
   3A21 21r96s16          10699 	ld	hl, #_cmd + 2
   3A24 36 00             10700 	ld	(hl),#0x00
   3A26 23                10701 	inc	hl
   3A27 36 00             10702 	ld	(hl),#0x00
                          10703 ;demo.c:1685: cmd.dest_x = 0;
   3A29 21r98s16          10704 	ld	hl, #_cmd + 4
   3A2C 36 00             10705 	ld	(hl),#0x00
   3A2E 23                10706 	inc	hl
   3A2F 36 00             10707 	ld	(hl),#0x00
                          10708 ;demo.c:1686: cmd.dest_y = 768;
   3A31 21r9As16          10709 	ld	hl, #_cmd + 6
   3A34 36 00             10710 	ld	(hl),#0x00
   3A36 23                10711 	inc	hl
   3A37 36 03             10712 	ld	(hl),#0x03
                          10713 ;demo.c:1687: vdp_copier(&cmd);
   3A39 21r94s16          10714 	ld	hl,#_cmd
   3A3C E5                10715 	push	hl
   3A3D CDr00s00          10716 	call	_vdp_copier
   3A40 F1                10717 	pop	af
                          10718 ;demo.c:1689: scratch_clear();
   3A41 CDr90s09          10719 	call	_scratch_clear
                          10720 ;demo.c:1690: vdp_load_palette(scratch);
   3A44 21r50s15          10721 	ld	hl,#_scratch
   3A47 E5                10722 	push	hl
   3A48 CDr00s00          10723 	call	_vdp_load_palette
   3A4B F1                10724 	pop	af
                          10725 ;demo.c:1692: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   3A4C 21 00 00          10726 	ld	hl,#0x0000
   3A4F E5                10727 	push	hl
   3A50 2E 01             10728 	ld	l, #0x01
   3A52 E5                10729 	push	hl
   3A53 2E 00             10730 	ld	l, #0x00
   3A55 E5                10731 	push	hl
   3A56 21 6A 08          10732 	ld	hl,#0x086A
   3A59 E5                10733 	push	hl
   3A5A 21rF2s3C          10734 	ld	hl,#__str_36
   3A5D E5                10735 	push	hl
   3A5E CDr99s0B          10736 	call	_pck_load
   3A61 FD 21 0A 00       10737 	ld	iy,#0x000A
   3A65 FD 39             10738 	add	iy,sp
   3A67 FD F9             10739 	ld	sp,iy
                          10740 ;demo.c:1694: cmd.size_x = 108;
   3A69 21r9Cs16          10741 	ld	hl, #_cmd + 8
   3A6C 36 6C             10742 	ld	(hl),#0x6C
   3A6E 23                10743 	inc	hl
   3A6F 36 00             10744 	ld	(hl),#0x00
                          10745 ;demo.c:1695: cmd.size_y = 116;
   3A71 21r9Es16          10746 	ld	hl, #_cmd + 10
   3A74 36 74             10747 	ld	(hl),#0x74
   3A76 23                10748 	inc	hl
   3A77 36 00             10749 	ld	(hl),#0x00
                          10750 ;demo.c:1696: cmd.data = 0;
                          10751 ;demo.c:1697: cmd.argument = 0x00;
   3A79 3E 00             10752 	ld	a,#0x00
   3A7B 32rA0s16          10753 	ld	(#_cmd + 12),a
   3A7E 32rA1s16          10754 	ld	(#_cmd + 13),a
                          10755 ;demo.c:1698: cmd.command = 0xd0; 
   3A81 01rA2s16          10756 	ld	bc,#_cmd + 14
   3A84 3E D0             10757 	ld	a,#0xD0
   3A86 02                10758 	ld	(bc),a
                          10759 ;demo.c:1699: cmd.source_x = 75;
   3A87 21r94s16          10760 	ld	hl,#_cmd
   3A8A 36 4B             10761 	ld	(hl),#0x4B
   3A8C 23                10762 	inc	hl
   3A8D 36 00             10763 	ld	(hl),#0x00
                          10764 ;demo.c:1700: cmd.source_y = 50;
   3A8F 21r96s16          10765 	ld	hl, #_cmd + 2
   3A92 36 32             10766 	ld	(hl),#0x32
   3A94 23                10767 	inc	hl
   3A95 36 00             10768 	ld	(hl),#0x00
                          10769 ;demo.c:1701: cmd.dest_x = 75;
   3A97 21r98s16          10770 	ld	hl, #_cmd + 4
   3A9A 36 4B             10771 	ld	(hl),#0x4B
   3A9C 23                10772 	inc	hl
   3A9D 36 00             10773 	ld	(hl),#0x00
                          10774 ;demo.c:1702: cmd.dest_y = 256;
   3A9F 21r9As16          10775 	ld	hl, #_cmd + 6
   3AA2 36 00             10776 	ld	(hl),#0x00
   3AA4 23                10777 	inc	hl
   3AA5 36 01             10778 	ld	(hl),#0x01
                          10779 ;demo.c:1703: vdp_copier(&cmd);
   3AA7 21r94s16          10780 	ld	hl,#_cmd
   3AAA E5                10781 	push	hl
   3AAB CDr00s00          10782 	call	_vdp_copier
   3AAE F1                10783 	pop	af
                          10784 ;demo.c:1705: cmd.size_x = 108;
   3AAF 21r9Cs16          10785 	ld	hl, #_cmd + 8
   3AB2 36 6C             10786 	ld	(hl),#0x6C
   3AB4 23                10787 	inc	hl
   3AB5 36 00             10788 	ld	(hl),#0x00
                          10789 ;demo.c:1706: cmd.size_y = 60;
   3AB7 21r9Es16          10790 	ld	hl, #_cmd + 10
   3ABA 36 3C             10791 	ld	(hl),#0x3C
   3ABC 23                10792 	inc	hl
   3ABD 36 00             10793 	ld	(hl),#0x00
                          10794 ;demo.c:1707: cmd.data = 0;
                          10795 ;demo.c:1708: cmd.argument = 0x00;
   3ABF 3E 00             10796 	ld	a,#0x00
   3AC1 32rA0s16          10797 	ld	(#_cmd + 12),a
   3AC4 32rA1s16          10798 	ld	(#_cmd + 13),a
                          10799 ;demo.c:1709: cmd.command = 0xd0; 
   3AC7 01rA2s16          10800 	ld	bc,#_cmd + 14
   3ACA 3E D0             10801 	ld	a,#0xD0
   3ACC 02                10802 	ld	(bc),a
                          10803 ;demo.c:1710: cmd.source_x = 75;
   3ACD 21r94s16          10804 	ld	hl,#_cmd
   3AD0 36 4B             10805 	ld	(hl),#0x4B
   3AD2 23                10806 	inc	hl
   3AD3 36 00             10807 	ld	(hl),#0x00
                          10808 ;demo.c:1711: cmd.source_y = 256+110;
   3AD5 21r96s16          10809 	ld	hl, #_cmd + 2
   3AD8 36 6E             10810 	ld	(hl),#0x6E
   3ADA 23                10811 	inc	hl
   3ADB 36 01             10812 	ld	(hl),#0x01
                          10813 ;demo.c:1712: cmd.dest_x = 75;
   3ADD 21r98s16          10814 	ld	hl, #_cmd + 4
   3AE0 36 4B             10815 	ld	(hl),#0x4B
   3AE2 23                10816 	inc	hl
   3AE3 36 00             10817 	ld	(hl),#0x00
                          10818 ;demo.c:1713: cmd.dest_y = 40;
   3AE5 21r9As16          10819 	ld	hl, #_cmd + 6
   3AE8 36 28             10820 	ld	(hl),#0x28
   3AEA 23                10821 	inc	hl
   3AEB 36 00             10822 	ld	(hl),#0x00
                          10823 ;demo.c:1714: vdp_copier(&cmd);
   3AED 21r94s16          10824 	ld	hl,#_cmd
   3AF0 E5                10825 	push	hl
   3AF1 CDr00s00          10826 	call	_vdp_copier
   3AF4 F1                10827 	pop	af
                          10828 ;demo.c:1715: cmd.dest_x = 75;
   3AF5 21r98s16          10829 	ld	hl, #_cmd + 4
   3AF8 36 4B             10830 	ld	(hl),#0x4B
   3AFA 23                10831 	inc	hl
   3AFB 36 00             10832 	ld	(hl),#0x00
                          10833 ;demo.c:1716: cmd.dest_y = 100;
   3AFD 21r9As16          10834 	ld	hl, #_cmd + 6
   3B00 36 64             10835 	ld	(hl),#0x64
   3B02 23                10836 	inc	hl
   3B03 36 00             10837 	ld	(hl),#0x00
                          10838 ;demo.c:1717: vdp_copier(&cmd);
   3B05 21r94s16          10839 	ld	hl,#_cmd
   3B08 E5                10840 	push	hl
   3B09 CDr00s00          10841 	call	_vdp_copier
   3B0C F1                10842 	pop	af
                          10843 ;demo.c:1719: pal_load("DSSLOGO PL5",32,0);
   3B0D 21 00 00          10844 	ld	hl,#0x0000
   3B10 E5                10845 	push	hl
   3B11 3E 20             10846 	ld	a,#0x20
   3B13 F5                10847 	push	af
   3B14 33                10848 	inc	sp
   3B15 21rFEs3C          10849 	ld	hl,#__str_37
   3B18 E5                10850 	push	hl
   3B19 CDrA3s09          10851 	call	_pal_load
   3B1C F1                10852 	pop	af
   3B1D F1                10853 	pop	af
   3B1E 33                10854 	inc	sp
                          10855 ;demo.c:1721: scratch_clear();
   3B1F CDr90s09          10856 	call	_scratch_clear
                          10857 ;demo.c:1723: vdp_register(9,130); // 50hz,212
   3B22 21 09 82          10858 	ld	hl,#0x8209
   3B25 E5                10859 	push	hl
   3B26 CDr00s00          10860 	call	_vdp_register
   3B29 F1                10861 	pop	af
                          10862 ;demo.c:1725: install_isr(my_isr);
   3B2A 21rECs07          10863 	ld	hl,#_my_isr
   3B2D E5                10864 	push	hl
   3B2E CDr00s00          10865 	call	_install_isr
   3B31 F1                10866 	pop	af
                          10867 ;demo.c:1729: while (!quit) {
   3B32                   10868 00111$:
   3B32 AF                10869 	xor	a,a
   3B33 DD B6 FF          10870 	or	a,-1 (ix)
   3B36 C2rF1s3B          10871 	jp	NZ,00113$
                          10872 ;demo.c:1731: if (vbicount >= scenetimings[timeindex+1]) {
   3B39 21r92s17          10873 	ld	hl,#_timeindex + 0
   3B3C 4E                10874 	ld	c,(hl)
   3B3D 0C                10875 	inc	c
   3B3E CB 21             10876 	sla	c
   3B40 3ErB7             10877 	ld	a,#<_scenetimings
   3B42 81                10878 	add	a,c
   3B43 6F                10879 	ld	l,a
   3B44 3Es16             10880 	ld	a,#>_scenetimings
   3B46 CE 00             10881 	adc	a,#0x00
   3B48 67                10882 	ld	h,a
   3B49 4E                10883 	ld	c,(hl)
   3B4A 23                10884 	inc	hl
   3B4B 46                10885 	ld	b,(hl)
   3B4C 3Ar90s16          10886 	ld	a,(#_vbicount+0)
   3B4F 91                10887 	sub	a,c
   3B50 3Ar91s16          10888 	ld	a,(#_vbicount+1)
   3B53 98                10889 	sbc	a,b
   3B54 FAr7Ds3B          10890 	jp	M,00105$
                          10891 ;demo.c:1732: sceneindex++;
   3B57 FD 21r90s17       10892 	ld	iy,#_sceneindex
   3B5B FD 34 00          10893 	inc	0 (iy)
   3B5E 20 07             10894 	jr	NZ,00153$
   3B60 FD 21r90s17       10895 	ld	iy,#_sceneindex
   3B64 FD 34 01          10896 	inc	1 (iy)
   3B67                   10897 00153$:
                          10898 ;demo.c:1733: timeindex+=2;
   3B67 21r92s17          10899 	ld	hl,#_timeindex
   3B6A 7E                10900 	ld	a,(hl)
   3B6B C6 02             10901 	add	a,#0x02
   3B6D 23                10902 	inc	hl
   3B6E 2B                10903 	dec	hl
   3B6F C5                10904 	push	bc
   3B70 4F                10905 	ld	c, a
   3B71 23                10906 	inc	hl
   3B72 7E                10907 	ld	a, (hl)
   3B73 47                10908 	ld	b, a
   3B74 79                10909 	ld	a, c
   3B75 2B                10910 	dec	hl
   3B76 77                10911 	ld	(hl), a
   3B77 78                10912 	ld	a, b
   3B78 C1                10913 	pop	bc
   3B79 CE 00             10914 	adc	a,#0x00
   3B7B 23                10915 	inc	hl
   3B7C 77                10916 	ld	(hl),a
   3B7D                   10917 00105$:
                          10918 ;demo.c:1736: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   3B7D 21r92s17          10919 	ld	hl,#_timeindex + 0
   3B80 4E                10920 	ld	c,(hl)
   3B81 21r93s17          10921 	ld	hl,#_timeindex + 1
   3B84 46                10922 	ld	b,(hl)
   3B85 CB 21             10923 	sla	c
   3B87 CB 10             10924 	rl	b
   3B89 21rB7s16          10925 	ld	hl,#_scenetimings
   3B8C 09                10926 	add	hl,bc
   3B8D 4E                10927 	ld	c,(hl)
   3B8E 23                10928 	inc	hl
   3B8F 46                10929 	ld	b,(hl)
   3B90 3Ar90s16          10930 	ld	a,(#_vbicount+0)
   3B93 91                10931 	sub	a,c
   3B94 3Ar91s16          10932 	ld	a,(#_vbicount+1)
   3B97 98                10933 	sbc	a,b
   3B98 FArDDs3B          10934 	jp	M,00107$
   3B9B 21r92s17          10935 	ld	hl,#_timeindex + 0
   3B9E 4E                10936 	ld	c,(hl)
   3B9F 0C                10937 	inc	c
   3BA0 CB 21             10938 	sla	c
   3BA2 3ErB7             10939 	ld	a,#<_scenetimings
   3BA4 81                10940 	add	a,c
   3BA5 6F                10941 	ld	l,a
   3BA6 3Es16             10942 	ld	a,#>_scenetimings
   3BA8 CE 00             10943 	adc	a,#0x00
   3BAA 67                10944 	ld	h,a
   3BAB 4E                10945 	ld	c,(hl)
   3BAC 23                10946 	inc	hl
   3BAD 46                10947 	ld	b,(hl)
   3BAE 3Ar90s16          10948 	ld	a,(#_vbicount+0)
   3BB1 91                10949 	sub	a,c
   3BB2 FD 21r90s16       10950 	ld	iy,#_vbicount
   3BB6 FD 7E 01          10951 	ld	a,1 (iy)
   3BB9 98                10952 	sbc	a,b
   3BBA F2rDDs3B          10953 	jp	P,00107$
                          10954 ;demo.c:1737: waitVB();
   3BBD 76                10955 		halt 
                          10956 ;demo.c:1738: scenepointers[sceneindex]();
   3BBE 21r90s17          10957 	ld	hl,#_sceneindex + 0
   3BC1 4E                10958 	ld	c,(hl)
   3BC2 FD 21r90s17       10959 	ld	iy,#_sceneindex
   3BC6 FD 46 01          10960 	ld	b,1 (iy)
   3BC9 CB 21             10961 	sla	c
   3BCB CB 10             10962 	rl	b
   3BCD 21rA3s16          10963 	ld	hl,#_scenepointers
   3BD0 09                10964 	add	hl,bc
   3BD1 4E                10965 	ld	c,(hl)
   3BD2 23                10966 	inc	hl
   3BD3 46                10967 	ld	b,(hl)
   3BD4 C5                10968 	push	bc
   3BD5 21rDCs3B          10969 	ld	hl,#00158$
   3BD8 E5                10970 	push	hl
   3BD9 69                10971 	ld	l,c
   3BDA 60                10972 	ld	h,b
   3BDB E9                10973 	jp	(hl)
   3BDC                   10974 00158$:
   3BDC C1                10975 	pop	bc
   3BDD                   10976 00107$:
                          10977 ;demo.c:1742: if(space())
   3BDD 21 08 01          10978 	ld	hl,#0x0108
   3BE0 E5                10979 	push	hl
   3BE1 CDr00s00          10980 	call	_ispressed
   3BE4 F1                10981 	pop	af
   3BE5 AF                10982 	xor	a,a
   3BE6 B5                10983 	or	a,l
   3BE7 CAr32s3B          10984 	jp	Z,00111$
                          10985 ;demo.c:1743: quit=1;
   3BEA DD 36 FF 01       10986 	ld	-1 (ix),#0x01
   3BEE C3r32s3B          10987 	jp	00111$
   3BF1                   10988 00113$:
                          10989 ;demo.c:1746: do_quit();
   3BF1 CDrECs36          10990 	call	_do_quit
   3BF4 DD F9             10991 	ld	sp,ix
   3BF6 DD E1             10992 	pop	ix
   3BF8 C9                10993 	ret
   3BF9                   10994 _main_end::
   3BF9                   10995 __str_23:
   3BF9 64 65 6D 6F 20 69 10996 	.ascii "demo init"
        6E 69 74
   3C02 0D                10997 	.db 0x0D
   3C03 0A                10998 	.db 0x0A
   3C04 0D                10999 	.db 0x0D
   3C05 0A                11000 	.db 0x0A
   3C06 00                11001 	.db 0x00
   3C07                   11002 __str_24:
   3C07 6D 75 73 69 63 20 11003 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   3C14 00                11004 	.db 0x00
   3C15                   11005 __str_25:
   3C15 64 6F 6E 65 2E    11006 	.ascii "done."
   3C1A 0D                11007 	.db 0x0D
   3C1B 0A                11008 	.db 0x0A
   3C1C 00                11009 	.db 0x00
   3C1D                   11010 __str_26:
   3C1D 64 65 74 65 63 74 11011 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   3C32 0D                11012 	.db 0x0D
   3C33 0A                11013 	.db 0x0A
   3C34 0D                11014 	.db 0x0D
   3C35 0A                11015 	.db 0x0A
   3C36 00                11016 	.db 0x00
   3C37                   11017 __str_27:
   3C37 76 64 70 32 20 66 11018 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   3C52 0D                11019 	.db 0x0D
   3C53 0A                11020 	.db 0x0A
   3C54 0D                11021 	.db 0x0D
   3C55 0A                11022 	.db 0x0A
   3C56 00                11023 	.db 0x00
   3C57                   11024 __str_28:
   3C57 20 76 64 70 31 20 11025 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   3C63 0D                11026 	.db 0x0D
   3C64 0A                11027 	.db 0x0A
   3C65 53 6F 72 72 79 2C 11028 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   3C93 20 56 52 41 4D 2E 11029 	.ascii " VRAM."
   3C99 0D                11030 	.db 0x0D
   3C9A 0A                11031 	.db 0x0A
   3C9B 0D                11032 	.db 0x0D
   3C9C 0A                11033 	.db 0x0A
   3C9D 00                11034 	.db 0x00
   3C9E                   11035 __str_29:
   3C9E 54 57 49 53 54 45 11036 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   3CA9 00                11037 	.db 0x00
   3CAA                   11038 __str_30:
   3CAA 4C 46 20 20 20 20 11039 	.ascii "LF      PL5"
        20 20 50 4C 35
   3CB5 00                11040 	.db 0x00
   3CB6                   11041 __str_31:
   3CB6 42 4F 58 45 53 20 11042 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   3CC1 00                11043 	.db 0x00
   3CC2                   11044 __str_32:
   3CC2 42 55 4C 42 53 20 11045 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   3CCD 00                11046 	.db 0x00
   3CCE                   11047 __str_33:
   3CCE 42 55 4C 42 53 20 11048 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   3CD9 00                11049 	.db 0x00
   3CDA                   11050 __str_34:
   3CDA 54 57 49 53 54 45 11051 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   3CE5 00                11052 	.db 0x00
   3CE6                   11053 __str_35:
   3CE6 42 4F 58 45 53 20 11054 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   3CF1 00                11055 	.db 0x00
   3CF2                   11056 __str_36:
   3CF2 44 53 53 4C 4F 47 11057 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   3CFD 00                11058 	.db 0x00
   3CFE                   11059 __str_37:
   3CFE 44 53 53 4C 4F 47 11060 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   3D09 00                11061 	.db 0x00
                          11062 	.area _CODE
                          11063 	.area _CABS
