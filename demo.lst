                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Sat Mar  3 20:37:17 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _logoeffu
                             15 	.globl _abs
                             16 	.globl _tritiles
                             17 	.globl _drawtilescreen
                             18 	.globl _drawtritile
                             19 	.globl _boxes
                             20 	.globl _drawbox
                             21 	.globl _animplay
                             22 	.globl _bulbs
                             23 	.globl _twister
                             24 	.globl _font
                             25 	.globl _drawsine
                             26 	.globl _drawstr
                             27 	.globl _do_letter_tall
                             28 	.globl _do_letter
                             29 	.globl _raster_effu
                             30 	.globl _do_blocks
                             31 	.globl _do_ymmm
                             32 	.globl _fadein
                             33 	.globl _pck_load
                             34 	.globl _raw_load
                             35 	.globl _pause
                             36 	.globl _pal_load
                             37 	.globl _scratch_clear
                             38 	.globl _ge5_load
                             39 	.globl _color_isr
                             40 	.globl _my_isr
                             41 	.globl _isNthBitSet
                             42 	.globl _scenetimings
                             43 	.globl _scenepointers
                             44 	.globl _timeindex
                             45 	.globl _sceneindex
                             46 	.globl _onceclear
                             47 	.globl _powa
                             48 	.globl _powatick
                             49 	.globl _triframes
                             50 	.globl _tripaltick2
                             51 	.globl _tripaltick
                             52 	.globl _tripal
                             53 	.globl _tri_inited
                             54 	.globl _prevbox_of
                             55 	.globl _boxes_of
                             56 	.globl _pbt
                             57 	.globl _pbx
                             58 	.globl _bonc
                             59 	.globl _bo
                             60 	.globl _bt
                             61 	.globl _by
                             62 	.globl _bx
                             63 	.globl _boxi
                             64 	.globl _boxes_y
                             65 	.globl _boxes_x
                             66 	.globl _prevy
                             67 	.globl _prevx
                             68 	.globl _buffer
                             69 	.globl _boxes_init
                             70 	.globl _anim_init
                             71 	.globl _enderdir
                             72 	.globl _ender
                             73 	.globl _ff2
                             74 	.globl _ff1
                             75 	.globl _bulbflipper
                             76 	.globl _twinited
                             77 	.globl _ff
                             78 	.globl _ly
                             79 	.globl _lx
                             80 	.globl _linenum
                             81 	.globl _flof
                             82 	.globl _btab
                             83 	.globl _bty
                             84 	.globl _btx
                             85 	.globl _bsy
                             86 	.globl _bsx
                             87 	.globl _block_init
                             88 	.globl _cc
                             89 	.globl _yofff
                             90 	.globl _cmd
                             91 	.globl _tick
                             92 	.globl _vbicount
                             93 	.globl _boxes_palette
                             94 	.globl _tf_palette
                             95 	.globl _twister_palette
                             96 	.globl _block_palette
                             97 	.globl _cur_palette
                             98 	.globl _scratch
                             99 	.globl _packbuffer
                            100 	.globl _tri_lookup_y
                            101 	.globl _tri_lookup_x
                            102 	.globl _sintab
                            103 	.globl _font_w
                            104 	.globl _font_y
                            105 	.globl _font_x
                            106 	.globl _tri_side2
                            107 	.globl _tri_side1
                            108 	.globl _tri_dia
                            109 	.globl _tri_up
                            110 	.globl _tri_center
                            111 	.globl _sintabx
                            112 ;--------------------------------------------------------
                            113 ; special function registers
                            114 ;--------------------------------------------------------
                            115 ;--------------------------------------------------------
                            116 ;  ram data
                            117 ;--------------------------------------------------------
                            118 	.area _DATA
   0000                     119 _sintab::
   0000                     120 	.ds 256
   0100                     121 _tri_lookup_x::
   0100                     122 	.ds 32
   0120                     123 _tri_lookup_y::
   0120                     124 	.ds 64
   0160                     125 _packbuffer::
   0160                     126 	.ds 16000
   3FE0                     127 _scratch::
   3FE0                     128 	.ds 128
   4060                     129 _cur_palette::
   4060                     130 	.ds 32
   4080                     131 _block_palette::
   4080                     132 	.ds 32
   40A0                     133 _twister_palette::
   40A0                     134 	.ds 32
   40C0                     135 _tf_palette::
   40C0                     136 	.ds 32
   40E0                     137 _boxes_palette::
   40E0                     138 	.ds 32
   4100                     139 _vbicount::
   4100                     140 	.ds 2
   4102                     141 _tick::
   4102                     142 	.ds 2
   4104                     143 _cmd::
   4104                     144 	.ds 15
   4113                     145 _isNthBitSet_mask_1_1:
   4113                     146 	.ds 8
   411B                     147 _yofff::
   411B                     148 	.ds 1
   411C                     149 _cc::
   411C                     150 	.ds 1
   411D                     151 _flipper:
   411D                     152 	.ds 2
   411F                     153 _ymmmf:
   411F                     154 	.ds 2
   4121                     155 _block_init::
   4121                     156 	.ds 1
   4122                     157 _bsx::
   4122                     158 	.ds 2
   4124                     159 _bsy::
   4124                     160 	.ds 2
   4126                     161 _btx::
   4126                     162 	.ds 2
   4128                     163 _bty::
   4128                     164 	.ds 2
   412A                     165 _btab::
   412A                     166 	.ds 32
   414A                     167 _flof::
   414A                     168 	.ds 2
   414C                     169 _linenum::
   414C                     170 	.ds 2
   414E                     171 _lx::
   414E                     172 	.ds 1
   414F                     173 _ly::
   414F                     174 	.ds 1
   4150                     175 _ff::
   4150                     176 	.ds 2
   4152                     177 _twinited::
   4152                     178 	.ds 2
   4154                     179 _bulbflipper::
   4154                     180 	.ds 2
   4156                     181 _ff1::
   4156                     182 	.ds 2
   4158                     183 _ff2::
   4158                     184 	.ds 2
   415A                     185 _ender::
   415A                     186 	.ds 2
   415C                     187 _enderdir::
   415C                     188 	.ds 2
   415E                     189 _xo:
   415E                     190 	.ds 2
   4160                     191 _yo:
   4160                     192 	.ds 2
   4162                     193 _po:
   4162                     194 	.ds 2
   4164                     195 _frames:
   4164                     196 	.ds 2
   4166                     197 _anim_init::
   4166                     198 	.ds 2
   4168                     199 _boxes_init::
   4168                     200 	.ds 1
   4169                     201 _buffer::
   4169                     202 	.ds 2
   416B                     203 _prevx::
   416B                     204 	.ds 2
   416D                     205 _prevy::
   416D                     206 	.ds 2
   416F                     207 _boxes_x::
   416F                     208 	.ds 5
   4174                     209 _boxes_y::
   4174                     210 	.ds 10
   417E                     211 _boxi::
   417E                     212 	.ds 1
   417F                     213 _bx::
   417F                     214 	.ds 2
   4181                     215 _by::
   4181                     216 	.ds 2
   4183                     217 _bt::
   4183                     218 	.ds 2
   4185                     219 _bo::
   4185                     220 	.ds 2
   4187                     221 _bonc::
   4187                     222 	.ds 2
   4189                     223 _pbx::
   4189                     224 	.ds 2
   418B                     225 _pbt::
   418B                     226 	.ds 2
   418D                     227 _boxes_of::
   418D                     228 	.ds 10
   4197                     229 _prevbox_of::
   4197                     230 	.ds 1
   4198                     231 _tri_inited::
   4198                     232 	.ds 1
   4199                     233 _tripal::
   4199                     234 	.ds 9
   41A2                     235 _tripaltick::
   41A2                     236 	.ds 1
   41A3                     237 _tripaltick2::
   41A3                     238 	.ds 1
   41A4                     239 _triframes::
   41A4                     240 	.ds 2
   41A6                     241 _powatick::
   41A6                     242 	.ds 2
   41A8                     243 _powa::
   41A8                     244 	.ds 2
   41AA                     245 _onceclear::
   41AA                     246 	.ds 1
   41AB                     247 _sceneindex::
   41AB                     248 	.ds 2
   41AD                     249 _timeindex::
   41AD                     250 	.ds 2
   41AF                     251 _scenepointers::
   41AF                     252 	.ds 12
   41BB                     253 _scenetimings::
   41BB                     254 	.ds 24
                            255 ;--------------------------------------------------------
                            256 ; overlayable items in  ram 
                            257 ;--------------------------------------------------------
                            258 	.area _OVERLAY
                            259 ;--------------------------------------------------------
                            260 ; external initialized ram data
                            261 ;--------------------------------------------------------
                            262 ;--------------------------------------------------------
                            263 ; global & static initialisations
                            264 ;--------------------------------------------------------
                            265 	.area _HOME
                            266 	.area _GSINIT
                            267 	.area _GSFINAL
                            268 	.area _GSINIT
                            269 ;demo.c:131: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r13s41            270 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            271 	call	__initrleblock
   0006 08                  272 	.db	8
   0007 01 02 04 08 10 20   273 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  274 	.db	0
                            275 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            276 	ld	hl,#_sintab
   0013 CDr00s00            277 	call	__initrleblock
   0016 3B                  278 	.db	59
   0017 00 03 06 09 0C 0F   279 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   280 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   281 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   282 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   283 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   284 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   285 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            286 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               287 	.db	#-5,#0x7E
   0054 01                  288 	.db	1
   0055 7F                  289 	.db	0x7F
   0056 FB 7E               290 	.db	#-5,#0x7E
   0058 75                  291 	.db	117
   0059 7D 7D 7C 7B 7B 7A   292 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   293 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   294 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   295 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   296 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   297 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   298 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   299 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   300 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   301 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   302 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   303 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   304 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   305 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      306 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               307 	.db	#-5,#0x82
   00D0 01                  308 	.db	1
   00D1 81                  309 	.db	0x81
   00D2 FB 82               310 	.db	#-5,#0x82
   00D4 3A                  311 	.db	58
   00D5 83 83 84 85 85 86   312 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   313 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   314 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   315 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   316 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   317 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   318 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               319 	.db	0xFA, 0xFD
   010F 00                  320 	.db	0
                            321 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            322 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            323 	call	__initrleblock
   0116 E0 00               324 	.db	#-32,#0x00
   0118 00                  325 	.db	0
                            326 ;demo.c:114: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            327 	ld	hl,#_tri_lookup_y
   011C CDr00s00            328 	call	__initrleblock
   011F C0 00               329 	.db	#-64,#0x00
   0121 00                  330 	.db	0
                            331 ;demo.c:116: uint8_t packbuffer[16000] = {0};
   0122 21r60s01            332 	ld	hl,#_packbuffer
   0125 CDr00s00            333 	call	__initrleblock
   0128 81 00               334 	.db	#-127,#0x00
   012A 81 00               335 	.db	#-127,#0x00
   012C 81 00               336 	.db	#-127,#0x00
   012E 81 00               337 	.db	#-127,#0x00
   0130 81 00               338 	.db	#-127,#0x00
   0132 81 00               339 	.db	#-127,#0x00
   0134 81 00               340 	.db	#-127,#0x00
   0136 81 00               341 	.db	#-127,#0x00
   0138 81 00               342 	.db	#-127,#0x00
   013A 81 00               343 	.db	#-127,#0x00
   013C 81 00               344 	.db	#-127,#0x00
   013E 81 00               345 	.db	#-127,#0x00
   0140 81 00               346 	.db	#-127,#0x00
   0142 81 00               347 	.db	#-127,#0x00
   0144 81 00               348 	.db	#-127,#0x00
   0146 81 00               349 	.db	#-127,#0x00
   0148 81 00               350 	.db	#-127,#0x00
   014A 81 00               351 	.db	#-127,#0x00
   014C 81 00               352 	.db	#-127,#0x00
   014E 81 00               353 	.db	#-127,#0x00
   0150 81 00               354 	.db	#-127,#0x00
   0152 81 00               355 	.db	#-127,#0x00
   0154 81 00               356 	.db	#-127,#0x00
   0156 81 00               357 	.db	#-127,#0x00
   0158 81 00               358 	.db	#-127,#0x00
   015A 81 00               359 	.db	#-127,#0x00
   015C 81 00               360 	.db	#-127,#0x00
   015E 81 00               361 	.db	#-127,#0x00
   0160 81 00               362 	.db	#-127,#0x00
   0162 81 00               363 	.db	#-127,#0x00
   0164 81 00               364 	.db	#-127,#0x00
   0166 81 00               365 	.db	#-127,#0x00
   0168 81 00               366 	.db	#-127,#0x00
   016A 81 00               367 	.db	#-127,#0x00
   016C 81 00               368 	.db	#-127,#0x00
   016E 81 00               369 	.db	#-127,#0x00
   0170 81 00               370 	.db	#-127,#0x00
   0172 81 00               371 	.db	#-127,#0x00
   0174 81 00               372 	.db	#-127,#0x00
   0176 81 00               373 	.db	#-127,#0x00
   0178 81 00               374 	.db	#-127,#0x00
   017A 81 00               375 	.db	#-127,#0x00
   017C 81 00               376 	.db	#-127,#0x00
   017E 81 00               377 	.db	#-127,#0x00
   0180 81 00               378 	.db	#-127,#0x00
   0182 81 00               379 	.db	#-127,#0x00
   0184 81 00               380 	.db	#-127,#0x00
   0186 81 00               381 	.db	#-127,#0x00
   0188 81 00               382 	.db	#-127,#0x00
   018A 81 00               383 	.db	#-127,#0x00
   018C 81 00               384 	.db	#-127,#0x00
   018E 81 00               385 	.db	#-127,#0x00
   0190 81 00               386 	.db	#-127,#0x00
   0192 81 00               387 	.db	#-127,#0x00
   0194 81 00               388 	.db	#-127,#0x00
   0196 81 00               389 	.db	#-127,#0x00
   0198 81 00               390 	.db	#-127,#0x00
   019A 81 00               391 	.db	#-127,#0x00
   019C 81 00               392 	.db	#-127,#0x00
   019E 81 00               393 	.db	#-127,#0x00
   01A0 81 00               394 	.db	#-127,#0x00
   01A2 81 00               395 	.db	#-127,#0x00
   01A4 81 00               396 	.db	#-127,#0x00
   01A6 81 00               397 	.db	#-127,#0x00
   01A8 81 00               398 	.db	#-127,#0x00
   01AA 81 00               399 	.db	#-127,#0x00
   01AC 81 00               400 	.db	#-127,#0x00
   01AE 81 00               401 	.db	#-127,#0x00
   01B0 81 00               402 	.db	#-127,#0x00
   01B2 81 00               403 	.db	#-127,#0x00
   01B4 81 00               404 	.db	#-127,#0x00
   01B6 81 00               405 	.db	#-127,#0x00
   01B8 81 00               406 	.db	#-127,#0x00
   01BA 81 00               407 	.db	#-127,#0x00
   01BC 81 00               408 	.db	#-127,#0x00
   01BE 81 00               409 	.db	#-127,#0x00
   01C0 81 00               410 	.db	#-127,#0x00
   01C2 81 00               411 	.db	#-127,#0x00
   01C4 81 00               412 	.db	#-127,#0x00
   01C6 81 00               413 	.db	#-127,#0x00
   01C8 81 00               414 	.db	#-127,#0x00
   01CA 81 00               415 	.db	#-127,#0x00
   01CC 81 00               416 	.db	#-127,#0x00
   01CE 81 00               417 	.db	#-127,#0x00
   01D0 81 00               418 	.db	#-127,#0x00
   01D2 81 00               419 	.db	#-127,#0x00
   01D4 81 00               420 	.db	#-127,#0x00
   01D6 81 00               421 	.db	#-127,#0x00
   01D8 81 00               422 	.db	#-127,#0x00
   01DA 81 00               423 	.db	#-127,#0x00
   01DC 81 00               424 	.db	#-127,#0x00
   01DE 81 00               425 	.db	#-127,#0x00
   01E0 81 00               426 	.db	#-127,#0x00
   01E2 81 00               427 	.db	#-127,#0x00
   01E4 81 00               428 	.db	#-127,#0x00
   01E6 81 00               429 	.db	#-127,#0x00
   01E8 81 00               430 	.db	#-127,#0x00
   01EA 81 00               431 	.db	#-127,#0x00
   01EC 81 00               432 	.db	#-127,#0x00
   01EE 81 00               433 	.db	#-127,#0x00
   01F0 81 00               434 	.db	#-127,#0x00
   01F2 81 00               435 	.db	#-127,#0x00
   01F4 81 00               436 	.db	#-127,#0x00
   01F6 81 00               437 	.db	#-127,#0x00
   01F8 81 00               438 	.db	#-127,#0x00
   01FA 81 00               439 	.db	#-127,#0x00
   01FC 81 00               440 	.db	#-127,#0x00
   01FE 81 00               441 	.db	#-127,#0x00
   0200 81 00               442 	.db	#-127,#0x00
   0202 81 00               443 	.db	#-127,#0x00
   0204 81 00               444 	.db	#-127,#0x00
   0206 81 00               445 	.db	#-127,#0x00
   0208 81 00               446 	.db	#-127,#0x00
   020A 81 00               447 	.db	#-127,#0x00
   020C 81 00               448 	.db	#-127,#0x00
   020E 81 00               449 	.db	#-127,#0x00
   0210 81 00               450 	.db	#-127,#0x00
   0212 81 00               451 	.db	#-127,#0x00
   0214 81 00               452 	.db	#-127,#0x00
   0216 81 00               453 	.db	#-127,#0x00
   0218 81 00               454 	.db	#-127,#0x00
   021A 81 00               455 	.db	#-127,#0x00
   021C 81 00               456 	.db	#-127,#0x00
   021E 81 00               457 	.db	#-127,#0x00
   0220 81 00               458 	.db	#-127,#0x00
   0222 83 00               459 	.db	#-125,#0x00
   0224 00                  460 	.db	0
                            461 ;demo.c:125: volatile int vbicount=0;
   0225 FD 21r00s41         462 	ld	iy,#_vbicount
   0229 FD 36 00 00         463 	ld	0 (iy),#0x00
   022D FD 21r00s41         464 	ld	iy,#_vbicount
   0231 FD 36 01 00         465 	ld	1 (iy),#0x00
                            466 ;demo.c:126: volatile int tick=0;
   0235 FD 21r02s41         467 	ld	iy,#_tick
   0239 FD 36 00 00         468 	ld	0 (iy),#0x00
   023D FD 21r02s41         469 	ld	iy,#_tick
   0241 FD 36 01 00         470 	ld	1 (iy),#0x00
                            471 ;demo.c:326: uint8_t yofff = 0;
   0245 FD 21r1Bs41         472 	ld	iy,#_yofff
   0249 FD 36 00 00         473 	ld	0 (iy),#0x00
                            474 ;demo.c:327: uint8_t cc = 0;
   024D FD 21r1Cs41         475 	ld	iy,#_cc
   0251 FD 36 00 00         476 	ld	0 (iy),#0x00
                            477 ;demo.c:328: static int flipper = 0;
   0255 FD 21r1Ds41         478 	ld	iy,#_flipper
   0259 FD 36 00 00         479 	ld	0 (iy),#0x00
   025D FD 21r1Ds41         480 	ld	iy,#_flipper
   0261 FD 36 01 00         481 	ld	1 (iy),#0x00
                            482 ;demo.c:329: static int ymmmf = 0;
   0265 FD 21r1Fs41         483 	ld	iy,#_ymmmf
   0269 FD 36 00 00         484 	ld	0 (iy),#0x00
   026D FD 21r1Fs41         485 	ld	iy,#_ymmmf
   0271 FD 36 01 00         486 	ld	1 (iy),#0x00
                            487 ;demo.c:360: char block_init = 0;
   0275 FD 21r21s41         488 	ld	iy,#_block_init
   0279 FD 36 00 00         489 	ld	0 (iy),#0x00
                            490 ;demo.c:362: int bsx = 0;
   027D FD 21r22s41         491 	ld	iy,#_bsx
   0281 FD 36 00 00         492 	ld	0 (iy),#0x00
   0285 FD 21r22s41         493 	ld	iy,#_bsx
   0289 FD 36 01 00         494 	ld	1 (iy),#0x00
                            495 ;demo.c:363: int bsy = 0;
   028D FD 21r24s41         496 	ld	iy,#_bsy
   0291 FD 36 00 00         497 	ld	0 (iy),#0x00
   0295 FD 21r24s41         498 	ld	iy,#_bsy
   0299 FD 36 01 00         499 	ld	1 (iy),#0x00
                            500 ;demo.c:364: int btx = 0;
   029D FD 21r26s41         501 	ld	iy,#_btx
   02A1 FD 36 00 00         502 	ld	0 (iy),#0x00
   02A5 FD 21r26s41         503 	ld	iy,#_btx
   02A9 FD 36 01 00         504 	ld	1 (iy),#0x00
                            505 ;demo.c:365: int bty = 0;
   02AD FD 21r28s41         506 	ld	iy,#_bty
   02B1 FD 36 00 00         507 	ld	0 (iy),#0x00
   02B5 FD 21r28s41         508 	ld	iy,#_bty
   02B9 FD 36 01 00         509 	ld	1 (iy),#0x00
                            510 ;demo.c:367: int btab[16] = {0};
   02BD 21r2As41            511 	ld	hl,#_btab
   02C0 CDr00s00            512 	call	__initrleblock
   02C3 E0 00               513 	.db	#-32,#0x00
   02C5 00                  514 	.db	0
                            515 ;demo.c:369: int flof = 0;
   02C6 FD 21r4As41         516 	ld	iy,#_flof
   02CA FD 36 00 00         517 	ld	0 (iy),#0x00
   02CE FD 21r4As41         518 	ld	iy,#_flof
   02D2 FD 36 01 00         519 	ld	1 (iy),#0x00
                            520 ;demo.c:418: int linenum = 0;
   02D6 FD 21r4Cs41         521 	ld	iy,#_linenum
   02DA FD 36 00 00         522 	ld	0 (iy),#0x00
   02DE FD 21r4Cs41         523 	ld	iy,#_linenum
   02E2 FD 36 01 00         524 	ld	1 (iy),#0x00
                            525 ;demo.c:476: uint8_t lx = 0;
   02E6 FD 21r4Es41         526 	ld	iy,#_lx
   02EA FD 36 00 00         527 	ld	0 (iy),#0x00
                            528 ;demo.c:477: uint8_t ly = 0;
   02EE FD 21r4Fs41         529 	ld	iy,#_ly
   02F2 FD 36 00 00         530 	ld	0 (iy),#0x00
                            531 ;demo.c:540: int ff = 0;
   02F6 FD 21r50s41         532 	ld	iy,#_ff
   02FA FD 36 00 00         533 	ld	0 (iy),#0x00
   02FE FD 21r50s41         534 	ld	iy,#_ff
   0302 FD 36 01 00         535 	ld	1 (iy),#0x00
                            536 ;demo.c:541: int twinited = 0;
   0306 FD 21r52s41         537 	ld	iy,#_twinited
   030A FD 36 00 00         538 	ld	0 (iy),#0x00
   030E FD 21r52s41         539 	ld	iy,#_twinited
   0312 FD 36 01 00         540 	ld	1 (iy),#0x00
                            541 ;demo.c:590: int bulbflipper = 1;
   0316 FD 21r54s41         542 	ld	iy,#_bulbflipper
   031A FD 36 00 01         543 	ld	0 (iy),#0x01
   031E FD 21r54s41         544 	ld	iy,#_bulbflipper
   0322 FD 36 01 00         545 	ld	1 (iy),#0x00
                            546 ;demo.c:592: int ff1,ff2 = 0;
   0326 FD 21r58s41         547 	ld	iy,#_ff2
   032A FD 36 00 00         548 	ld	0 (iy),#0x00
   032E FD 21r58s41         549 	ld	iy,#_ff2
   0332 FD 36 01 00         550 	ld	1 (iy),#0x00
                            551 ;demo.c:593: int ender = 212;
   0336 FD 21r5As41         552 	ld	iy,#_ender
   033A FD 36 00 D4         553 	ld	0 (iy),#0xD4
   033E FD 21r5As41         554 	ld	iy,#_ender
   0342 FD 36 01 00         555 	ld	1 (iy),#0x00
                            556 ;demo.c:594: int enderdir = -1;
   0346 FD 21r5Cs41         557 	ld	iy,#_enderdir
   034A FD 36 00 FF         558 	ld	0 (iy),#0xFF
   034E FD 21r5Cs41         559 	ld	iy,#_enderdir
   0352 FD 36 01 FF         560 	ld	1 (iy),#0xFF
                            561 ;demo.c:651: static int xo = 0;
   0356 FD 21r5Es41         562 	ld	iy,#_xo
   035A FD 36 00 00         563 	ld	0 (iy),#0x00
   035E FD 21r5Es41         564 	ld	iy,#_xo
   0362 FD 36 01 00         565 	ld	1 (iy),#0x00
                            566 ;demo.c:652: static int yo = 0;
   0366 FD 21r60s41         567 	ld	iy,#_yo
   036A FD 36 00 00         568 	ld	0 (iy),#0x00
   036E FD 21r60s41         569 	ld	iy,#_yo
   0372 FD 36 01 00         570 	ld	1 (iy),#0x00
                            571 ;demo.c:653: static int po = 0;
   0376 FD 21r62s41         572 	ld	iy,#_po
   037A FD 36 00 00         573 	ld	0 (iy),#0x00
   037E FD 21r62s41         574 	ld	iy,#_po
   0382 FD 36 01 00         575 	ld	1 (iy),#0x00
                            576 ;demo.c:654: static int frames = 0;
   0386 FD 21r64s41         577 	ld	iy,#_frames
   038A FD 36 00 00         578 	ld	0 (iy),#0x00
   038E FD 21r64s41         579 	ld	iy,#_frames
   0392 FD 36 01 00         580 	ld	1 (iy),#0x00
                            581 ;demo.c:656: int anim_init = 0;
   0396 FD 21r66s41         582 	ld	iy,#_anim_init
   039A FD 36 00 00         583 	ld	0 (iy),#0x00
   039E FD 21r66s41         584 	ld	iy,#_anim_init
   03A2 FD 36 01 00         585 	ld	1 (iy),#0x00
                            586 ;demo.c:749: uint8_t boxes_init = 0;
   03A6 FD 21r68s41         587 	ld	iy,#_boxes_init
   03AA FD 36 00 00         588 	ld	0 (iy),#0x00
                            589 ;demo.c:750: int buffer = 1;
   03AE FD 21r69s41         590 	ld	iy,#_buffer
   03B2 FD 36 00 01         591 	ld	0 (iy),#0x01
   03B6 FD 21r69s41         592 	ld	iy,#_buffer
   03BA FD 36 01 00         593 	ld	1 (iy),#0x00
                            594 ;demo.c:751: int prevx = -1;
   03BE FD 21r6Bs41         595 	ld	iy,#_prevx
   03C2 FD 36 00 FF         596 	ld	0 (iy),#0xFF
   03C6 FD 21r6Bs41         597 	ld	iy,#_prevx
   03CA FD 36 01 FF         598 	ld	1 (iy),#0xFF
                            599 ;demo.c:753: uint8_t boxes_x[5] = {0,36,0,36,0};
   03CE 21r6Fs41            600 	ld	hl,#_boxes_x
   03D1 CDr00s00            601 	call	__initrleblock
   03D4 05                  602 	.db	5
   03D5 00 24 00 24 00      603 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   03DA 00                  604 	.db	0
                            605 ;demo.c:754: int boxes_y[5] = {768,768,768+36,768+36,0};
   03DB 21r74s41            606 	ld	hl,#_boxes_y
   03DE CDr00s00            607 	call	__initrleblock
   03E1 0A                  608 	.db	10
   03E2 00 03 00 03 24 03   609 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   03EA 00 00               610 	.db	0x00, 0x00
   03EC 00                  611 	.db	0
                            612 ;demo.c:755: uint8_t boxi = 0;
   03ED FD 21r7Es41         613 	ld	iy,#_boxi
   03F1 FD 36 00 00         614 	ld	0 (iy),#0x00
                            615 ;demo.c:756: int bx = 220;
   03F5 FD 21r7Fs41         616 	ld	iy,#_bx
   03F9 FD 36 00 DC         617 	ld	0 (iy),#0xDC
   03FD FD 21r7Fs41         618 	ld	iy,#_bx
   0401 FD 36 01 00         619 	ld	1 (iy),#0x00
                            620 ;demo.c:757: int by = 84;
   0405 FD 21r81s41         621 	ld	iy,#_by
   0409 FD 36 00 54         622 	ld	0 (iy),#0x54
   040D FD 21r81s41         623 	ld	iy,#_by
   0411 FD 36 01 00         624 	ld	1 (iy),#0x00
                            625 ;demo.c:775: int bt = 0;
   0415 FD 21r83s41         626 	ld	iy,#_bt
   0419 FD 36 00 00         627 	ld	0 (iy),#0x00
   041D FD 21r83s41         628 	ld	iy,#_bt
   0421 FD 36 01 00         629 	ld	1 (iy),#0x00
                            630 ;demo.c:776: int bo = 0;
   0425 FD 21r85s41         631 	ld	iy,#_bo
   0429 FD 36 00 00         632 	ld	0 (iy),#0x00
   042D FD 21r85s41         633 	ld	iy,#_bo
   0431 FD 36 01 00         634 	ld	1 (iy),#0x00
                            635 ;demo.c:778: int bonc = 0;
   0435 FD 21r87s41         636 	ld	iy,#_bonc
   0439 FD 36 00 00         637 	ld	0 (iy),#0x00
   043D FD 21r87s41         638 	ld	iy,#_bonc
   0441 FD 36 01 00         639 	ld	1 (iy),#0x00
                            640 ;demo.c:779: int pbx = 0;
   0445 FD 21r89s41         641 	ld	iy,#_pbx
   0449 FD 36 00 00         642 	ld	0 (iy),#0x00
   044D FD 21r89s41         643 	ld	iy,#_pbx
   0451 FD 36 01 00         644 	ld	1 (iy),#0x00
                            645 ;demo.c:780: int pbt = 0;
   0455 FD 21r8Bs41         646 	ld	iy,#_pbt
   0459 FD 36 00 00         647 	ld	0 (iy),#0x00
   045D FD 21r8Bs41         648 	ld	iy,#_pbt
   0461 FD 36 01 00         649 	ld	1 (iy),#0x00
                            650 ;demo.c:782: int boxes_of[5] = {0,0,6,0,0};
   0465 21r8Ds41            651 	ld	hl,#_boxes_of
   0468 CDr00s00            652 	call	__initrleblock
   046B 05                  653 	.db	5
   046C 00 00 00 00 06      654 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0471 FB 00               655 	.db	#-5,#0x00
   0473 00                  656 	.db	0
                            657 ;demo.c:783: uint8_t prevbox_of = 0;
   0474 FD 21r97s41         658 	ld	iy,#_prevbox_of
   0478 FD 36 00 00         659 	ld	0 (iy),#0x00
                            660 ;demo.c:898: uint8_t tri_inited = 0;
   047C FD 21r98s41         661 	ld	iy,#_tri_inited
   0480 FD 36 00 00         662 	ld	0 (iy),#0x00
                            663 ;demo.c:926: char tripal[9] = {
   0484 21r99s41            664 	ld	hl,#_tripal
   0487 CDr00s00            665 	call	__initrleblock
   048A 09                  666 	.db	9
   048B 02 02 01 01 02 03   667 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0493 02                  668 	.db	0x02
   0494 00                  669 	.db	0
                            670 ;demo.c:932: uint8_t tripaltick = 0;
   0495 FD 21rA2s41         671 	ld	iy,#_tripaltick
   0499 FD 36 00 00         672 	ld	0 (iy),#0x00
                            673 ;demo.c:933: uint8_t tripaltick2 = 0;
   049D FD 21rA3s41         674 	ld	iy,#_tripaltick2
   04A1 FD 36 00 00         675 	ld	0 (iy),#0x00
                            676 ;demo.c:935: int triframes = 0;
   04A5 FD 21rA4s41         677 	ld	iy,#_triframes
   04A9 FD 36 00 00         678 	ld	0 (iy),#0x00
   04AD FD 21rA4s41         679 	ld	iy,#_triframes
   04B1 FD 36 01 00         680 	ld	1 (iy),#0x00
                            681 ;demo.c:1035: int powatick = 0;
   04B5 FD 21rA6s41         682 	ld	iy,#_powatick
   04B9 FD 36 00 00         683 	ld	0 (iy),#0x00
   04BD FD 21rA6s41         684 	ld	iy,#_powatick
   04C1 FD 36 01 00         685 	ld	1 (iy),#0x00
                            686 ;demo.c:1036: int powa = 0;
   04C5 FD 21rA8s41         687 	ld	iy,#_powa
   04C9 FD 36 00 00         688 	ld	0 (iy),#0x00
   04CD FD 21rA8s41         689 	ld	iy,#_powa
   04D1 FD 36 01 00         690 	ld	1 (iy),#0x00
                            691 ;demo.c:1037: uint8_t onceclear = 255;
   04D5 FD 21rAAs41         692 	ld	iy,#_onceclear
   04D9 FD 36 00 FF         693 	ld	0 (iy),#0xFF
                            694 ;demo.c:1099: int sceneindex = 0;
   04DD FD 21rABs41         695 	ld	iy,#_sceneindex
   04E1 FD 36 00 00         696 	ld	0 (iy),#0x00
   04E5 FD 21rABs41         697 	ld	iy,#_sceneindex
   04E9 FD 36 01 00         698 	ld	1 (iy),#0x00
                            699 ;demo.c:1100: int timeindex = 0;
   04ED FD 21rADs41         700 	ld	iy,#_timeindex
   04F1 FD 36 00 00         701 	ld	0 (iy),#0x00
   04F5 FD 21rADs41         702 	ld	iy,#_timeindex
   04F9 FD 36 01 00         703 	ld	1 (iy),#0x00
                            704 ;demo.c:1102: void (*scenepointers[6])() = {
   04FD 21rAFs41            705 	ld	hl,#_scenepointers
   0500 36r53               706 	ld	(hl),#<_logoeffu
   0502 23                  707 	inc	hl
   0503 36s21               708 	ld	(hl),#>_logoeffu
   0505 01rB1s41            709 	ld	bc,#_scenepointers + 2
   0508 69                  710 	ld	l,c
   0509 60                  711 	ld	h,b
   050A 36r8F               712 	ld	(hl),#<_bulbs
   050C 23                  713 	inc	hl
   050D 36s13               714 	ld	(hl),#>_bulbs
   050F 21rB3s41            715 	ld	hl, #_scenepointers + 4
   0512 36r23               716 	ld	(hl),#<_twister
   0514 23                  717 	inc	hl
   0515 36s12               718 	ld	(hl),#>_twister
   0517 01rB5s41            719 	ld	bc,#_scenepointers + 6
   051A 69                  720 	ld	l,c
   051B 60                  721 	ld	h,b
   051C 36r13               722 	ld	(hl),#<_boxes
   051E 23                  723 	inc	hl
   051F 36s19               724 	ld	(hl),#>_boxes
   0521 21rB7s41            725 	ld	hl, #_scenepointers + 8
   0524 36r8A               726 	ld	(hl),#<_tritiles
   0526 23                  727 	inc	hl
   0527 36s1E               728 	ld	(hl),#>_tritiles
   0529 01rB9s41            729 	ld	bc,#_scenepointers + 10
   052C 69                  730 	ld	l,c
   052D 60                  731 	ld	h,b
   052E 36rDF               732 	ld	(hl),#<_animplay
   0530 23                  733 	inc	hl
   0531 36s15               734 	ld	(hl),#>_animplay
                            735 ;demo.c:1111: int scenetimings[12] = {
   0533 21rBBs41            736 	ld	hl,#_scenetimings
   0536 CDr00s00            737 	call	__initrleblock
   0539 18                  738 	.db	24
   053A 00 00 FA 00 FA 00   739 	.db	0x00, 0x00, 0xFA, 0x00, 0xFA, 0x00, 0xB0, 0x04
        B0 04
   0542 B0 04 28 0A 28 0A   740 	.db	0xB0, 0x04, 0x28, 0x0A, 0x28, 0x0A, 0x74, 0x0E
        74 0E
   054A 74 0E C0 12 C0 12   741 	.db	0x74, 0x0E, 0xC0, 0x12, 0xC0, 0x12, 0x98, 0x3A
        98 3A
   0552 00                  742 	.db	0
                            743 ;--------------------------------------------------------
                            744 ; Home
                            745 ;--------------------------------------------------------
                            746 	.area _HOME
                            747 	.area _HOME
                            748 ;--------------------------------------------------------
                            749 ; code
                            750 ;--------------------------------------------------------
                            751 	.area _CODE
                            752 ;demo.c:130: int isNthBitSet (unsigned char c, int n) {
                            753 ;	---------------------------------
                            754 ; Function isNthBitSet
                            755 ; ---------------------------------
   0000                     756 _isNthBitSet_start::
   0000                     757 _isNthBitSet:
   0000 DD E5               758 	push	ix
   0002 DD 21 00 00         759 	ld	ix,#0
   0006 DD 39               760 	add	ix,sp
                            761 ;demo.c:132: return ((c & mask[n]) != 0);
   0008 3Er13               762 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            763 	add	a,5 (ix)
   000D 4F                  764 	ld	c,a
   000E 3Es41               765 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            766 	adc	a,6 (ix)
   0013 47                  767 	ld	b,a
   0014 0A                  768 	ld	a,(bc)
   0015 DD A6 04            769 	and	a,4 (ix)
   0018 20 04               770 	jr	NZ,00103$
   001A 3E 01               771 	ld	a,#0x01
   001C 18 01               772 	jr	00104$
   001E                     773 00103$:
   001E AF                  774 	xor	a,a
   001F                     775 00104$:
   001F B7                  776 	or	a,a
   0020 D6 01               777 	sub	a,#0x01
   0022 3E 00               778 	ld	a,#0x00
   0024 17                  779 	rla
   0025 4F                  780 	ld	c,a
   0026 69                  781 	ld	l,c
   0027 26 00               782 	ld	h,#0x00
   0029 DD E1               783 	pop	ix
   002B C9                  784 	ret
   002C                     785 _isNthBitSet_end::
   002C                     786 _sintabx:
   002C 78 00               787 	.dw #0x0078
   002E 7A 00               788 	.dw #0x007A
   0030 7D 00               789 	.dw #0x007D
   0032 80 00               790 	.dw #0x0080
   0034 83 00               791 	.dw #0x0083
   0036 86 00               792 	.dw #0x0086
   0038 89 00               793 	.dw #0x0089
   003A 8C 00               794 	.dw #0x008C
   003C 8F 00               795 	.dw #0x008F
   003E 92 00               796 	.dw #0x0092
   0040 95 00               797 	.dw #0x0095
   0042 98 00               798 	.dw #0x0098
   0044 9A 00               799 	.dw #0x009A
   0046 9D 00               800 	.dw #0x009D
   0048 A0 00               801 	.dw #0x00A0
   004A A3 00               802 	.dw #0x00A3
   004C A5 00               803 	.dw #0x00A5
   004E A8 00               804 	.dw #0x00A8
   0050 AB 00               805 	.dw #0x00AB
   0052 AD 00               806 	.dw #0x00AD
   0054 B0 00               807 	.dw #0x00B0
   0056 B3 00               808 	.dw #0x00B3
   0058 B5 00               809 	.dw #0x00B5
   005A B8 00               810 	.dw #0x00B8
   005C BA 00               811 	.dw #0x00BA
   005E BD 00               812 	.dw #0x00BD
   0060 BF 00               813 	.dw #0x00BF
   0062 C1 00               814 	.dw #0x00C1
   0064 C4 00               815 	.dw #0x00C4
   0066 C6 00               816 	.dw #0x00C6
   0068 C8 00               817 	.dw #0x00C8
   006A CA 00               818 	.dw #0x00CA
   006C CC 00               819 	.dw #0x00CC
   006E CE 00               820 	.dw #0x00CE
   0070 D0 00               821 	.dw #0x00D0
   0072 D2 00               822 	.dw #0x00D2
   0074 D4 00               823 	.dw #0x00D4
   0076 D6 00               824 	.dw #0x00D6
   0078 D8 00               825 	.dw #0x00D8
   007A DA 00               826 	.dw #0x00DA
   007C DB 00               827 	.dw #0x00DB
   007E DD 00               828 	.dw #0x00DD
   0080 DE 00               829 	.dw #0x00DE
   0082 E0 00               830 	.dw #0x00E0
   0084 E1 00               831 	.dw #0x00E1
   0086 E3 00               832 	.dw #0x00E3
   0088 E4 00               833 	.dw #0x00E4
   008A E5 00               834 	.dw #0x00E5
   008C E6 00               835 	.dw #0x00E6
   008E E7 00               836 	.dw #0x00E7
   0090 E8 00               837 	.dw #0x00E8
   0092 E9 00               838 	.dw #0x00E9
   0094 EA 00               839 	.dw #0x00EA
   0096 EB 00               840 	.dw #0x00EB
   0098 EC 00               841 	.dw #0x00EC
   009A ED 00               842 	.dw #0x00ED
   009C ED 00               843 	.dw #0x00ED
   009E EE 00               844 	.dw #0x00EE
   00A0 EE 00               845 	.dw #0x00EE
   00A2 EF 00               846 	.dw #0x00EF
   00A4 EF 00               847 	.dw #0x00EF
   00A6 EF 00               848 	.dw #0x00EF
   00A8 EF 00               849 	.dw #0x00EF
   00AA EF 00               850 	.dw #0x00EF
   00AC F0 00               851 	.dw #0x00F0
   00AE EF 00               852 	.dw #0x00EF
   00B0 EF 00               853 	.dw #0x00EF
   00B2 EF 00               854 	.dw #0x00EF
   00B4 EF 00               855 	.dw #0x00EF
   00B6 EF 00               856 	.dw #0x00EF
   00B8 EE 00               857 	.dw #0x00EE
   00BA EE 00               858 	.dw #0x00EE
   00BC ED 00               859 	.dw #0x00ED
   00BE ED 00               860 	.dw #0x00ED
   00C0 EC 00               861 	.dw #0x00EC
   00C2 EB 00               862 	.dw #0x00EB
   00C4 EA 00               863 	.dw #0x00EA
   00C6 E9 00               864 	.dw #0x00E9
   00C8 E8 00               865 	.dw #0x00E8
   00CA E7 00               866 	.dw #0x00E7
   00CC E6 00               867 	.dw #0x00E6
   00CE E5 00               868 	.dw #0x00E5
   00D0 E4 00               869 	.dw #0x00E4
   00D2 E3 00               870 	.dw #0x00E3
   00D4 E1 00               871 	.dw #0x00E1
   00D6 E0 00               872 	.dw #0x00E0
   00D8 DE 00               873 	.dw #0x00DE
   00DA DD 00               874 	.dw #0x00DD
   00DC DB 00               875 	.dw #0x00DB
   00DE DA 00               876 	.dw #0x00DA
   00E0 D8 00               877 	.dw #0x00D8
   00E2 D6 00               878 	.dw #0x00D6
   00E4 D4 00               879 	.dw #0x00D4
   00E6 D2 00               880 	.dw #0x00D2
   00E8 D0 00               881 	.dw #0x00D0
   00EA CE 00               882 	.dw #0x00CE
   00EC CC 00               883 	.dw #0x00CC
   00EE CA 00               884 	.dw #0x00CA
   00F0 C8 00               885 	.dw #0x00C8
   00F2 C6 00               886 	.dw #0x00C6
   00F4 C4 00               887 	.dw #0x00C4
   00F6 C1 00               888 	.dw #0x00C1
   00F8 BF 00               889 	.dw #0x00BF
   00FA BD 00               890 	.dw #0x00BD
   00FC BA 00               891 	.dw #0x00BA
   00FE B8 00               892 	.dw #0x00B8
   0100 B5 00               893 	.dw #0x00B5
   0102 B3 00               894 	.dw #0x00B3
   0104 B0 00               895 	.dw #0x00B0
   0106 AD 00               896 	.dw #0x00AD
   0108 AB 00               897 	.dw #0x00AB
   010A A8 00               898 	.dw #0x00A8
   010C A5 00               899 	.dw #0x00A5
   010E A3 00               900 	.dw #0x00A3
   0110 A0 00               901 	.dw #0x00A0
   0112 9D 00               902 	.dw #0x009D
   0114 9A 00               903 	.dw #0x009A
   0116 98 00               904 	.dw #0x0098
   0118 95 00               905 	.dw #0x0095
   011A 92 00               906 	.dw #0x0092
   011C 8F 00               907 	.dw #0x008F
   011E 8C 00               908 	.dw #0x008C
   0120 89 00               909 	.dw #0x0089
   0122 86 00               910 	.dw #0x0086
   0124 83 00               911 	.dw #0x0083
   0126 80 00               912 	.dw #0x0080
   0128 7D 00               913 	.dw #0x007D
   012A 7A 00               914 	.dw #0x007A
   012C 78 00               915 	.dw #0x0078
   012E 75 00               916 	.dw #0x0075
   0130 72 00               917 	.dw #0x0072
   0132 6F 00               918 	.dw #0x006F
   0134 6C 00               919 	.dw #0x006C
   0136 69 00               920 	.dw #0x0069
   0138 66 00               921 	.dw #0x0066
   013A 63 00               922 	.dw #0x0063
   013C 60 00               923 	.dw #0x0060
   013E 5D 00               924 	.dw #0x005D
   0140 5A 00               925 	.dw #0x005A
   0142 57 00               926 	.dw #0x0057
   0144 55 00               927 	.dw #0x0055
   0146 52 00               928 	.dw #0x0052
   0148 4F 00               929 	.dw #0x004F
   014A 4C 00               930 	.dw #0x004C
   014C 4A 00               931 	.dw #0x004A
   014E 47 00               932 	.dw #0x0047
   0150 44 00               933 	.dw #0x0044
   0152 42 00               934 	.dw #0x0042
   0154 3F 00               935 	.dw #0x003F
   0156 3C 00               936 	.dw #0x003C
   0158 3A 00               937 	.dw #0x003A
   015A 37 00               938 	.dw #0x0037
   015C 35 00               939 	.dw #0x0035
   015E 32 00               940 	.dw #0x0032
   0160 30 00               941 	.dw #0x0030
   0162 2E 00               942 	.dw #0x002E
   0164 2B 00               943 	.dw #0x002B
   0166 29 00               944 	.dw #0x0029
   0168 27 00               945 	.dw #0x0027
   016A 25 00               946 	.dw #0x0025
   016C 23 00               947 	.dw #0x0023
   016E 21 00               948 	.dw #0x0021
   0170 1F 00               949 	.dw #0x001F
   0172 1D 00               950 	.dw #0x001D
   0174 1B 00               951 	.dw #0x001B
   0176 19 00               952 	.dw #0x0019
   0178 17 00               953 	.dw #0x0017
   017A 15 00               954 	.dw #0x0015
   017C 14 00               955 	.dw #0x0014
   017E 12 00               956 	.dw #0x0012
   0180 11 00               957 	.dw #0x0011
   0182 0F 00               958 	.dw #0x000F
   0184 0E 00               959 	.dw #0x000E
   0186 0C 00               960 	.dw #0x000C
   0188 0B 00               961 	.dw #0x000B
   018A 0A 00               962 	.dw #0x000A
   018C 09 00               963 	.dw #0x0009
   018E 08 00               964 	.dw #0x0008
   0190 07 00               965 	.dw #0x0007
   0192 06 00               966 	.dw #0x0006
   0194 05 00               967 	.dw #0x0005
   0196 04 00               968 	.dw #0x0004
   0198 03 00               969 	.dw #0x0003
   019A 02 00               970 	.dw #0x0002
   019C 02 00               971 	.dw #0x0002
   019E 01 00               972 	.dw #0x0001
   01A0 01 00               973 	.dw #0x0001
   01A2 00 00               974 	.dw #0x0000
   01A4 00 00               975 	.dw #0x0000
   01A6 00 00               976 	.dw #0x0000
   01A8 00 00               977 	.dw #0x0000
   01AA 00 00               978 	.dw #0x0000
   01AC 00 00               979 	.dw #0x0000
   01AE 00 00               980 	.dw #0x0000
   01B0 00 00               981 	.dw #0x0000
   01B2 00 00               982 	.dw #0x0000
   01B4 00 00               983 	.dw #0x0000
   01B6 00 00               984 	.dw #0x0000
   01B8 01 00               985 	.dw #0x0001
   01BA 01 00               986 	.dw #0x0001
   01BC 02 00               987 	.dw #0x0002
   01BE 02 00               988 	.dw #0x0002
   01C0 03 00               989 	.dw #0x0003
   01C2 04 00               990 	.dw #0x0004
   01C4 05 00               991 	.dw #0x0005
   01C6 06 00               992 	.dw #0x0006
   01C8 07 00               993 	.dw #0x0007
   01CA 08 00               994 	.dw #0x0008
   01CC 09 00               995 	.dw #0x0009
   01CE 0A 00               996 	.dw #0x000A
   01D0 0B 00               997 	.dw #0x000B
   01D2 0C 00               998 	.dw #0x000C
   01D4 0E 00               999 	.dw #0x000E
   01D6 0F 00              1000 	.dw #0x000F
   01D8 11 00              1001 	.dw #0x0011
   01DA 12 00              1002 	.dw #0x0012
   01DC 14 00              1003 	.dw #0x0014
   01DE 15 00              1004 	.dw #0x0015
   01E0 17 00              1005 	.dw #0x0017
   01E2 19 00              1006 	.dw #0x0019
   01E4 1B 00              1007 	.dw #0x001B
   01E6 1D 00              1008 	.dw #0x001D
   01E8 1F 00              1009 	.dw #0x001F
   01EA 21 00              1010 	.dw #0x0021
   01EC 23 00              1011 	.dw #0x0023
   01EE 25 00              1012 	.dw #0x0025
   01F0 27 00              1013 	.dw #0x0027
   01F2 29 00              1014 	.dw #0x0029
   01F4 2B 00              1015 	.dw #0x002B
   01F6 2E 00              1016 	.dw #0x002E
   01F8 30 00              1017 	.dw #0x0030
   01FA 32 00              1018 	.dw #0x0032
   01FC 35 00              1019 	.dw #0x0035
   01FE 37 00              1020 	.dw #0x0037
   0200 3A 00              1021 	.dw #0x003A
   0202 3C 00              1022 	.dw #0x003C
   0204 3F 00              1023 	.dw #0x003F
   0206 42 00              1024 	.dw #0x0042
   0208 44 00              1025 	.dw #0x0044
   020A 47 00              1026 	.dw #0x0047
   020C 4A 00              1027 	.dw #0x004A
   020E 4C 00              1028 	.dw #0x004C
   0210 4F 00              1029 	.dw #0x004F
   0212 52 00              1030 	.dw #0x0052
   0214 55 00              1031 	.dw #0x0055
   0216 57 00              1032 	.dw #0x0057
   0218 5A 00              1033 	.dw #0x005A
   021A 5D 00              1034 	.dw #0x005D
   021C 60 00              1035 	.dw #0x0060
   021E 63 00              1036 	.dw #0x0063
   0220 66 00              1037 	.dw #0x0066
   0222 69 00              1038 	.dw #0x0069
   0224 6C 00              1039 	.dw #0x006C
   0226 6F 00              1040 	.dw #0x006F
   0228 72 00              1041 	.dw #0x0072
   022A 75 00              1042 	.dw #0x0075
   022C                    1043 _tri_center:
   022C 08                 1044 	.db #0x08
   022D 0A                 1045 	.db #0x0A
   022E 12                 1046 	.db #0x12
   022F 10                 1047 	.db #0x10
   0230 00                 1048 	.db #0x00
   0231 02                 1049 	.db #0x02
   0232 08                 1050 	.db #0x08
   0233 0A                 1051 	.db #0x0A
   0234 0B                 1052 	.db #0x0B
   0235 09                 1053 	.db #0x09
   0236 03                 1054 	.db #0x03
   0237 01                 1055 	.db #0x01
   0238 11                 1056 	.db #0x11
   0239 13                 1057 	.db #0x13
   023A 0B                 1058 	.db #0x0B
   023B 09                 1059 	.db #0x09
   023C 0A                 1060 	.db #0x0A
   023D 12                 1061 	.db #0x12
   023E 10                 1062 	.db #0x10
   023F 00                 1063 	.db #0x00
   0240 02                 1064 	.db #0x02
   0241 08                 1065 	.db #0x08
   0242 0A                 1066 	.db #0x0A
   0243 12                 1067 	.db #0x12
   0244 13                 1068 	.db #0x13
   0245 0B                 1069 	.db #0x0B
   0246 09                 1070 	.db #0x09
   0247 03                 1071 	.db #0x03
   0248 01                 1072 	.db #0x01
   0249 11                 1073 	.db #0x11
   024A 13                 1074 	.db #0x13
   024B 0B                 1075 	.db #0x0B
   024C 12                 1076 	.db #0x12
   024D 10                 1077 	.db #0x10
   024E 00                 1078 	.db #0x00
   024F 02                 1079 	.db #0x02
   0250 08                 1080 	.db #0x08
   0251 0A                 1081 	.db #0x0A
   0252 12                 1082 	.db #0x12
   0253 10                 1083 	.db #0x10
   0254 11                 1084 	.db #0x11
   0255 13                 1085 	.db #0x13
   0256 0B                 1086 	.db #0x0B
   0257 09                 1087 	.db #0x09
   0258 03                 1088 	.db #0x03
   0259 01                 1089 	.db #0x01
   025A 11                 1090 	.db #0x11
   025B 13                 1091 	.db #0x13
   025C 10                 1092 	.db #0x10
   025D 00                 1093 	.db #0x00
   025E 02                 1094 	.db #0x02
   025F 08                 1095 	.db #0x08
   0260 0A                 1096 	.db #0x0A
   0261 12                 1097 	.db #0x12
   0262 10                 1098 	.db #0x10
   0263 00                 1099 	.db #0x00
   0264 01                 1100 	.db #0x01
   0265 11                 1101 	.db #0x11
   0266 13                 1102 	.db #0x13
   0267 0B                 1103 	.db #0x0B
   0268 09                 1104 	.db #0x09
   0269 03                 1105 	.db #0x03
   026A 01                 1106 	.db #0x01
   026B 11                 1107 	.db #0x11
   026C 00                 1108 	.db #0x00
   026D 02                 1109 	.db #0x02
   026E 08                 1110 	.db #0x08
   026F 0A                 1111 	.db #0x0A
   0270 12                 1112 	.db #0x12
   0271 10                 1113 	.db #0x10
   0272 00                 1114 	.db #0x00
   0273 02                 1115 	.db #0x02
   0274 03                 1116 	.db #0x03
   0275 01                 1117 	.db #0x01
   0276 11                 1118 	.db #0x11
   0277 13                 1119 	.db #0x13
   0278 0B                 1120 	.db #0x0B
   0279 09                 1121 	.db #0x09
   027A 03                 1122 	.db #0x03
   027B 01                 1123 	.db #0x01
   027C 02                 1124 	.db #0x02
   027D 08                 1125 	.db #0x08
   027E 0A                 1126 	.db #0x0A
   027F 12                 1127 	.db #0x12
   0280 10                 1128 	.db #0x10
   0281 00                 1129 	.db #0x00
   0282 02                 1130 	.db #0x02
   0283 08                 1131 	.db #0x08
   0284 09                 1132 	.db #0x09
   0285 03                 1133 	.db #0x03
   0286 01                 1134 	.db #0x01
   0287 11                 1135 	.db #0x11
   0288 13                 1136 	.db #0x13
   0289 0B                 1137 	.db #0x0B
   028A 09                 1138 	.db #0x09
   028B 03                 1139 	.db #0x03
   028C 01                 1140 	.db #0x01
   028D 0B                 1141 	.db #0x0B
   028E 09                 1142 	.db #0x09
   028F 11                 1143 	.db #0x11
   0290 13                 1144 	.db #0x13
   0291 03                 1145 	.db #0x03
   0292 01                 1146 	.db #0x01
   0293 0B                 1147 	.db #0x0B
   0294 0A                 1148 	.db #0x0A
   0295 00                 1149 	.db #0x00
   0296 02                 1150 	.db #0x02
   0297 12                 1151 	.db #0x12
   0298 10                 1152 	.db #0x10
   0299 08                 1153 	.db #0x08
   029A 0A                 1154 	.db #0x0A
   029B 00                 1155 	.db #0x00
   029C 03                 1156 	.db #0x03
   029D 01                 1157 	.db #0x01
   029E 0B                 1158 	.db #0x0B
   029F 09                 1159 	.db #0x09
   02A0 11                 1160 	.db #0x11
   02A1 13                 1161 	.db #0x13
   02A2 03                 1162 	.db #0x03
   02A3 01                 1163 	.db #0x01
   02A4 00                 1164 	.db #0x00
   02A5 02                 1165 	.db #0x02
   02A6 12                 1166 	.db #0x12
   02A7 10                 1167 	.db #0x10
   02A8 08                 1168 	.db #0x08
   02A9 0A                 1169 	.db #0x0A
   02AA 00                 1170 	.db #0x00
   02AB 02                 1171 	.db #0x02
   02AC 13                 1172 	.db #0x13
   02AD 03                 1173 	.db #0x03
   02AE 01                 1174 	.db #0x01
   02AF 0B                 1175 	.db #0x0B
   02B0 09                 1176 	.db #0x09
   02B1 11                 1177 	.db #0x11
   02B2 13                 1178 	.db #0x13
   02B3 03                 1179 	.db #0x03
   02B4 02                 1180 	.db #0x02
   02B5 12                 1181 	.db #0x12
   02B6 10                 1182 	.db #0x10
   02B7 08                 1183 	.db #0x08
   02B8 0A                 1184 	.db #0x0A
   02B9 00                 1185 	.db #0x00
   02BA 02                 1186 	.db #0x02
   02BB 12                 1187 	.db #0x12
   02BC 11                 1188 	.db #0x11
   02BD 13                 1189 	.db #0x13
   02BE 03                 1190 	.db #0x03
   02BF 01                 1191 	.db #0x01
   02C0 0B                 1192 	.db #0x0B
   02C1 09                 1193 	.db #0x09
   02C2 11                 1194 	.db #0x11
   02C3 13                 1195 	.db #0x13
   02C4 12                 1196 	.db #0x12
   02C5 10                 1197 	.db #0x10
   02C6 08                 1198 	.db #0x08
   02C7 0A                 1199 	.db #0x0A
   02C8 00                 1200 	.db #0x00
   02C9 02                 1201 	.db #0x02
   02CA 12                 1202 	.db #0x12
   02CB 10                 1203 	.db #0x10
   02CC 09                 1204 	.db #0x09
   02CD 11                 1205 	.db #0x11
   02CE 13                 1206 	.db #0x13
   02CF 03                 1207 	.db #0x03
   02D0 01                 1208 	.db #0x01
   02D1 0B                 1209 	.db #0x0B
   02D2 09                 1210 	.db #0x09
   02D3 11                 1211 	.db #0x11
   02D4 10                 1212 	.db #0x10
   02D5 08                 1213 	.db #0x08
   02D6 0A                 1214 	.db #0x0A
   02D7 00                 1215 	.db #0x00
   02D8 02                 1216 	.db #0x02
   02D9 12                 1217 	.db #0x12
   02DA 10                 1218 	.db #0x10
   02DB 08                 1219 	.db #0x08
   02DC 0B                 1220 	.db #0x0B
   02DD 09                 1221 	.db #0x09
   02DE 11                 1222 	.db #0x11
   02DF 13                 1223 	.db #0x13
   02E0 03                 1224 	.db #0x03
   02E1 01                 1225 	.db #0x01
   02E2 0B                 1226 	.db #0x0B
   02E3 09                 1227 	.db #0x09
   02E4 08                 1228 	.db #0x08
   02E5 0A                 1229 	.db #0x0A
   02E6 00                 1230 	.db #0x00
   02E7 02                 1231 	.db #0x02
   02E8 12                 1232 	.db #0x12
   02E9 10                 1233 	.db #0x10
   02EA 08                 1234 	.db #0x08
   02EB 0A                 1235 	.db #0x0A
   02EC                    1236 _tri_up:
   02EC 0A                 1237 	.db #0x0A
   02ED 12                 1238 	.db #0x12
   02EE 10                 1239 	.db #0x10
   02EF 00                 1240 	.db #0x00
   02F0 02                 1241 	.db #0x02
   02F1 08                 1242 	.db #0x08
   02F2 0A                 1243 	.db #0x0A
   02F3 12                 1244 	.db #0x12
   02F4 13                 1245 	.db #0x13
   02F5 0B                 1246 	.db #0x0B
   02F6 09                 1247 	.db #0x09
   02F7 03                 1248 	.db #0x03
   02F8 01                 1249 	.db #0x01
   02F9 11                 1250 	.db #0x11
   02FA 13                 1251 	.db #0x13
   02FB 0B                 1252 	.db #0x0B
   02FC 12                 1253 	.db #0x12
   02FD 10                 1254 	.db #0x10
   02FE 00                 1255 	.db #0x00
   02FF 02                 1256 	.db #0x02
   0300 08                 1257 	.db #0x08
   0301 0A                 1258 	.db #0x0A
   0302 12                 1259 	.db #0x12
   0303 10                 1260 	.db #0x10
   0304 11                 1261 	.db #0x11
   0305 13                 1262 	.db #0x13
   0306 0B                 1263 	.db #0x0B
   0307 09                 1264 	.db #0x09
   0308 03                 1265 	.db #0x03
   0309 01                 1266 	.db #0x01
   030A 11                 1267 	.db #0x11
   030B 13                 1268 	.db #0x13
   030C 10                 1269 	.db #0x10
   030D 00                 1270 	.db #0x00
   030E 02                 1271 	.db #0x02
   030F 08                 1272 	.db #0x08
   0310 0A                 1273 	.db #0x0A
   0311 12                 1274 	.db #0x12
   0312 10                 1275 	.db #0x10
   0313 00                 1276 	.db #0x00
   0314 01                 1277 	.db #0x01
   0315 11                 1278 	.db #0x11
   0316 13                 1279 	.db #0x13
   0317 0B                 1280 	.db #0x0B
   0318 09                 1281 	.db #0x09
   0319 03                 1282 	.db #0x03
   031A 01                 1283 	.db #0x01
   031B 11                 1284 	.db #0x11
   031C 00                 1285 	.db #0x00
   031D 02                 1286 	.db #0x02
   031E 08                 1287 	.db #0x08
   031F 0A                 1288 	.db #0x0A
   0320 12                 1289 	.db #0x12
   0321 10                 1290 	.db #0x10
   0322 00                 1291 	.db #0x00
   0323 02                 1292 	.db #0x02
   0324 03                 1293 	.db #0x03
   0325 01                 1294 	.db #0x01
   0326 11                 1295 	.db #0x11
   0327 13                 1296 	.db #0x13
   0328 0B                 1297 	.db #0x0B
   0329 09                 1298 	.db #0x09
   032A 03                 1299 	.db #0x03
   032B 01                 1300 	.db #0x01
   032C 02                 1301 	.db #0x02
   032D 08                 1302 	.db #0x08
   032E 0A                 1303 	.db #0x0A
   032F 12                 1304 	.db #0x12
   0330 10                 1305 	.db #0x10
   0331 00                 1306 	.db #0x00
   0332 02                 1307 	.db #0x02
   0333 08                 1308 	.db #0x08
   0334 09                 1309 	.db #0x09
   0335 03                 1310 	.db #0x03
   0336 01                 1311 	.db #0x01
   0337 11                 1312 	.db #0x11
   0338 13                 1313 	.db #0x13
   0339 0B                 1314 	.db #0x0B
   033A 09                 1315 	.db #0x09
   033B 03                 1316 	.db #0x03
   033C 08                 1317 	.db #0x08
   033D 0A                 1318 	.db #0x0A
   033E 12                 1319 	.db #0x12
   033F 10                 1320 	.db #0x10
   0340 00                 1321 	.db #0x00
   0341 02                 1322 	.db #0x02
   0342 08                 1323 	.db #0x08
   0343 0A                 1324 	.db #0x0A
   0344 0B                 1325 	.db #0x0B
   0345 09                 1326 	.db #0x09
   0346 03                 1327 	.db #0x03
   0347 01                 1328 	.db #0x01
   0348 11                 1329 	.db #0x11
   0349 13                 1330 	.db #0x13
   034A 0B                 1331 	.db #0x0B
   034B 09                 1332 	.db #0x09
   034C 0A                 1333 	.db #0x0A
   034D 12                 1334 	.db #0x12
   034E 10                 1335 	.db #0x10
   034F 00                 1336 	.db #0x00
   0350 02                 1337 	.db #0x02
   0351 08                 1338 	.db #0x08
   0352 0A                 1339 	.db #0x0A
   0353 12                 1340 	.db #0x12
   0354 13                 1341 	.db #0x13
   0355 0B                 1342 	.db #0x0B
   0356 09                 1343 	.db #0x09
   0357 03                 1344 	.db #0x03
   0358 01                 1345 	.db #0x01
   0359 11                 1346 	.db #0x11
   035A 13                 1347 	.db #0x13
   035B 0B                 1348 	.db #0x0B
   035C 12                 1349 	.db #0x12
   035D 10                 1350 	.db #0x10
   035E 00                 1351 	.db #0x00
   035F 02                 1352 	.db #0x02
   0360 08                 1353 	.db #0x08
   0361 0A                 1354 	.db #0x0A
   0362 12                 1355 	.db #0x12
   0363 10                 1356 	.db #0x10
   0364 11                 1357 	.db #0x11
   0365 13                 1358 	.db #0x13
   0366 0B                 1359 	.db #0x0B
   0367 09                 1360 	.db #0x09
   0368 03                 1361 	.db #0x03
   0369 01                 1362 	.db #0x01
   036A 11                 1363 	.db #0x11
   036B 13                 1364 	.db #0x13
   036C 10                 1365 	.db #0x10
   036D 00                 1366 	.db #0x00
   036E 02                 1367 	.db #0x02
   036F 08                 1368 	.db #0x08
   0370 0A                 1369 	.db #0x0A
   0371 12                 1370 	.db #0x12
   0372 10                 1371 	.db #0x10
   0373 00                 1372 	.db #0x00
   0374 01                 1373 	.db #0x01
   0375 11                 1374 	.db #0x11
   0376 13                 1375 	.db #0x13
   0377 0B                 1376 	.db #0x0B
   0378 09                 1377 	.db #0x09
   0379 03                 1378 	.db #0x03
   037A 01                 1379 	.db #0x01
   037B 11                 1380 	.db #0x11
   037C 00                 1381 	.db #0x00
   037D 02                 1382 	.db #0x02
   037E 08                 1383 	.db #0x08
   037F 0A                 1384 	.db #0x0A
   0380 12                 1385 	.db #0x12
   0381 10                 1386 	.db #0x10
   0382 00                 1387 	.db #0x00
   0383 02                 1388 	.db #0x02
   0384 03                 1389 	.db #0x03
   0385 01                 1390 	.db #0x01
   0386 11                 1391 	.db #0x11
   0387 13                 1392 	.db #0x13
   0388 0B                 1393 	.db #0x0B
   0389 09                 1394 	.db #0x09
   038A 03                 1395 	.db #0x03
   038B 01                 1396 	.db #0x01
   038C 02                 1397 	.db #0x02
   038D 08                 1398 	.db #0x08
   038E 0A                 1399 	.db #0x0A
   038F 12                 1400 	.db #0x12
   0390 10                 1401 	.db #0x10
   0391 00                 1402 	.db #0x00
   0392 02                 1403 	.db #0x02
   0393 08                 1404 	.db #0x08
   0394 09                 1405 	.db #0x09
   0395 03                 1406 	.db #0x03
   0396 01                 1407 	.db #0x01
   0397 11                 1408 	.db #0x11
   0398 13                 1409 	.db #0x13
   0399 0B                 1410 	.db #0x0B
   039A 09                 1411 	.db #0x09
   039B 03                 1412 	.db #0x03
   039C 08                 1413 	.db #0x08
   039D 0A                 1414 	.db #0x0A
   039E 12                 1415 	.db #0x12
   039F 10                 1416 	.db #0x10
   03A0 00                 1417 	.db #0x00
   03A1 02                 1418 	.db #0x02
   03A2 08                 1419 	.db #0x08
   03A3 0A                 1420 	.db #0x0A
   03A4 0B                 1421 	.db #0x0B
   03A5 09                 1422 	.db #0x09
   03A6 03                 1423 	.db #0x03
   03A7 01                 1424 	.db #0x01
   03A8 11                 1425 	.db #0x11
   03A9 13                 1426 	.db #0x13
   03AA 0B                 1427 	.db #0x0B
   03AB 09                 1428 	.db #0x09
   03AC                    1429 _tri_dia:
   03AC 05                 1430 	.db #0x05
   03AD 1B                 1431 	.db #0x1B
   03AE 0F                 1432 	.db #0x0F
   03AF 1D                 1433 	.db #0x1D
   03B0 15                 1434 	.db #0x15
   03B1 19                 1435 	.db #0x19
   03B2 05                 1436 	.db #0x05
   03B3 1B                 1437 	.db #0x1B
   03B4 0F                 1438 	.db #0x0F
   03B5 1D                 1439 	.db #0x1D
   03B6 15                 1440 	.db #0x15
   03B7 19                 1441 	.db #0x19
   03B8 05                 1442 	.db #0x05
   03B9 1B                 1443 	.db #0x1B
   03BA 0F                 1444 	.db #0x0F
   03BB 1D                 1445 	.db #0x1D
   03BC 1D                 1446 	.db #0x1D
   03BD 05                 1447 	.db #0x05
   03BE 19                 1448 	.db #0x19
   03BF 0F                 1449 	.db #0x0F
   03C0 1B                 1450 	.db #0x1B
   03C1 15                 1451 	.db #0x15
   03C2 1D                 1452 	.db #0x1D
   03C3 05                 1453 	.db #0x05
   03C4 19                 1454 	.db #0x19
   03C5 0F                 1455 	.db #0x0F
   03C6 1B                 1456 	.db #0x1B
   03C7 15                 1457 	.db #0x15
   03C8 1D                 1458 	.db #0x1D
   03C9 05                 1459 	.db #0x05
   03CA 19                 1460 	.db #0x19
   03CB 0F                 1461 	.db #0x0F
   03CC 0F                 1462 	.db #0x0F
   03CD 1D                 1463 	.db #0x1D
   03CE 15                 1464 	.db #0x15
   03CF 19                 1465 	.db #0x19
   03D0 05                 1466 	.db #0x05
   03D1 1B                 1467 	.db #0x1B
   03D2 0F                 1468 	.db #0x0F
   03D3 1D                 1469 	.db #0x1D
   03D4 15                 1470 	.db #0x15
   03D5 19                 1471 	.db #0x19
   03D6 05                 1472 	.db #0x05
   03D7 1B                 1473 	.db #0x1B
   03D8 0F                 1474 	.db #0x0F
   03D9 1D                 1475 	.db #0x1D
   03DA 15                 1476 	.db #0x15
   03DB 19                 1477 	.db #0x19
   03DC 19                 1478 	.db #0x19
   03DD 0F                 1479 	.db #0x0F
   03DE 1B                 1480 	.db #0x1B
   03DF 15                 1481 	.db #0x15
   03E0 1D                 1482 	.db #0x1D
   03E1 05                 1483 	.db #0x05
   03E2 19                 1484 	.db #0x19
   03E3 0F                 1485 	.db #0x0F
   03E4 1B                 1486 	.db #0x1B
   03E5 15                 1487 	.db #0x15
   03E6 1D                 1488 	.db #0x1D
   03E7 05                 1489 	.db #0x05
   03E8 19                 1490 	.db #0x19
   03E9 0F                 1491 	.db #0x0F
   03EA 1B                 1492 	.db #0x1B
   03EB 15                 1493 	.db #0x15
   03EC 15                 1494 	.db #0x15
   03ED 19                 1495 	.db #0x19
   03EE 05                 1496 	.db #0x05
   03EF 1B                 1497 	.db #0x1B
   03F0 0F                 1498 	.db #0x0F
   03F1 1D                 1499 	.db #0x1D
   03F2 15                 1500 	.db #0x15
   03F3 19                 1501 	.db #0x19
   03F4 05                 1502 	.db #0x05
   03F5 1B                 1503 	.db #0x1B
   03F6 0F                 1504 	.db #0x0F
   03F7 1D                 1505 	.db #0x1D
   03F8 15                 1506 	.db #0x15
   03F9 19                 1507 	.db #0x19
   03FA 05                 1508 	.db #0x05
   03FB 1B                 1509 	.db #0x1B
   03FC 1B                 1510 	.db #0x1B
   03FD 15                 1511 	.db #0x15
   03FE 1D                 1512 	.db #0x1D
   03FF 05                 1513 	.db #0x05
   0400 19                 1514 	.db #0x19
   0401 0F                 1515 	.db #0x0F
   0402 1B                 1516 	.db #0x1B
   0403 15                 1517 	.db #0x15
   0404 1D                 1518 	.db #0x1D
   0405 05                 1519 	.db #0x05
   0406 19                 1520 	.db #0x19
   0407 0F                 1521 	.db #0x0F
   0408 1B                 1522 	.db #0x1B
   0409 15                 1523 	.db #0x15
   040A 1D                 1524 	.db #0x1D
   040B 05                 1525 	.db #0x05
   040C 05                 1526 	.db #0x05
   040D 1B                 1527 	.db #0x1B
   040E 0F                 1528 	.db #0x0F
   040F 1D                 1529 	.db #0x1D
   0410 15                 1530 	.db #0x15
   0411 19                 1531 	.db #0x19
   0412 05                 1532 	.db #0x05
   0413 1B                 1533 	.db #0x1B
   0414 0F                 1534 	.db #0x0F
   0415 1D                 1535 	.db #0x1D
   0416 15                 1536 	.db #0x15
   0417 19                 1537 	.db #0x19
   0418 05                 1538 	.db #0x05
   0419 1B                 1539 	.db #0x1B
   041A 0F                 1540 	.db #0x0F
   041B 1D                 1541 	.db #0x1D
   041C 1D                 1542 	.db #0x1D
   041D 05                 1543 	.db #0x05
   041E 19                 1544 	.db #0x19
   041F 0F                 1545 	.db #0x0F
   0420 1B                 1546 	.db #0x1B
   0421 15                 1547 	.db #0x15
   0422 1D                 1548 	.db #0x1D
   0423 05                 1549 	.db #0x05
   0424 19                 1550 	.db #0x19
   0425 0F                 1551 	.db #0x0F
   0426 1B                 1552 	.db #0x1B
   0427 15                 1553 	.db #0x15
   0428 1D                 1554 	.db #0x1D
   0429 05                 1555 	.db #0x05
   042A 19                 1556 	.db #0x19
   042B 0F                 1557 	.db #0x0F
   042C 0F                 1558 	.db #0x0F
   042D 1D                 1559 	.db #0x1D
   042E 15                 1560 	.db #0x15
   042F 19                 1561 	.db #0x19
   0430 05                 1562 	.db #0x05
   0431 1B                 1563 	.db #0x1B
   0432 0F                 1564 	.db #0x0F
   0433 1D                 1565 	.db #0x1D
   0434 15                 1566 	.db #0x15
   0435 19                 1567 	.db #0x19
   0436 05                 1568 	.db #0x05
   0437 1B                 1569 	.db #0x1B
   0438 0F                 1570 	.db #0x0F
   0439 1D                 1571 	.db #0x1D
   043A 15                 1572 	.db #0x15
   043B 19                 1573 	.db #0x19
   043C 19                 1574 	.db #0x19
   043D 0F                 1575 	.db #0x0F
   043E 1B                 1576 	.db #0x1B
   043F 15                 1577 	.db #0x15
   0440 1D                 1578 	.db #0x1D
   0441 05                 1579 	.db #0x05
   0442 19                 1580 	.db #0x19
   0443 0F                 1581 	.db #0x0F
   0444 1B                 1582 	.db #0x1B
   0445 15                 1583 	.db #0x15
   0446 1D                 1584 	.db #0x1D
   0447 05                 1585 	.db #0x05
   0448 19                 1586 	.db #0x19
   0449 0F                 1587 	.db #0x0F
   044A 1B                 1588 	.db #0x1B
   044B 15                 1589 	.db #0x15
   044C 15                 1590 	.db #0x15
   044D 19                 1591 	.db #0x19
   044E 05                 1592 	.db #0x05
   044F 1B                 1593 	.db #0x1B
   0450 0F                 1594 	.db #0x0F
   0451 1D                 1595 	.db #0x1D
   0452 15                 1596 	.db #0x15
   0453 19                 1597 	.db #0x19
   0454 05                 1598 	.db #0x05
   0455 1B                 1599 	.db #0x1B
   0456 0F                 1600 	.db #0x0F
   0457 1D                 1601 	.db #0x1D
   0458 15                 1602 	.db #0x15
   0459 19                 1603 	.db #0x19
   045A 05                 1604 	.db #0x05
   045B 1B                 1605 	.db #0x1B
   045C 1B                 1606 	.db #0x1B
   045D 15                 1607 	.db #0x15
   045E 1D                 1608 	.db #0x1D
   045F 05                 1609 	.db #0x05
   0460 19                 1610 	.db #0x19
   0461 0F                 1611 	.db #0x0F
   0462 1B                 1612 	.db #0x1B
   0463 15                 1613 	.db #0x15
   0464 1D                 1614 	.db #0x1D
   0465 05                 1615 	.db #0x05
   0466 19                 1616 	.db #0x19
   0467 0F                 1617 	.db #0x0F
   0468 1B                 1618 	.db #0x1B
   0469 15                 1619 	.db #0x15
   046A 1D                 1620 	.db #0x1D
   046B 05                 1621 	.db #0x05
   046C                    1622 _tri_side1:
   046C 0A                 1623 	.db #0x0A
   046D 12                 1624 	.db #0x12
   046E 10                 1625 	.db #0x10
   046F 00                 1626 	.db #0x00
   0470 02                 1627 	.db #0x02
   0471 08                 1628 	.db #0x08
   0472 0A                 1629 	.db #0x0A
   0473 12                 1630 	.db #0x12
   0474 10                 1631 	.db #0x10
   0475 00                 1632 	.db #0x00
   0476 02                 1633 	.db #0x02
   0477 08                 1634 	.db #0x08
   0478 0A                 1635 	.db #0x0A
   0479 12                 1636 	.db #0x12
   047A 10                 1637 	.db #0x10
   047B 00                 1638 	.db #0x00
   047C 12                 1639 	.db #0x12
   047D 10                 1640 	.db #0x10
   047E 00                 1641 	.db #0x00
   047F 02                 1642 	.db #0x02
   0480 08                 1643 	.db #0x08
   0481 0A                 1644 	.db #0x0A
   0482 12                 1645 	.db #0x12
   0483 10                 1646 	.db #0x10
   0484 00                 1647 	.db #0x00
   0485 02                 1648 	.db #0x02
   0486 08                 1649 	.db #0x08
   0487 0A                 1650 	.db #0x0A
   0488 12                 1651 	.db #0x12
   0489 10                 1652 	.db #0x10
   048A 00                 1653 	.db #0x00
   048B 02                 1654 	.db #0x02
   048C 10                 1655 	.db #0x10
   048D 00                 1656 	.db #0x00
   048E 02                 1657 	.db #0x02
   048F 08                 1658 	.db #0x08
   0490 0A                 1659 	.db #0x0A
   0491 12                 1660 	.db #0x12
   0492 10                 1661 	.db #0x10
   0493 00                 1662 	.db #0x00
   0494 02                 1663 	.db #0x02
   0495 08                 1664 	.db #0x08
   0496 0A                 1665 	.db #0x0A
   0497 12                 1666 	.db #0x12
   0498 10                 1667 	.db #0x10
   0499 00                 1668 	.db #0x00
   049A 02                 1669 	.db #0x02
   049B 08                 1670 	.db #0x08
   049C 00                 1671 	.db #0x00
   049D 02                 1672 	.db #0x02
   049E 08                 1673 	.db #0x08
   049F 0A                 1674 	.db #0x0A
   04A0 12                 1675 	.db #0x12
   04A1 10                 1676 	.db #0x10
   04A2 00                 1677 	.db #0x00
   04A3 02                 1678 	.db #0x02
   04A4 08                 1679 	.db #0x08
   04A5 0A                 1680 	.db #0x0A
   04A6 12                 1681 	.db #0x12
   04A7 10                 1682 	.db #0x10
   04A8 00                 1683 	.db #0x00
   04A9 02                 1684 	.db #0x02
   04AA 08                 1685 	.db #0x08
   04AB 0A                 1686 	.db #0x0A
   04AC 02                 1687 	.db #0x02
   04AD 08                 1688 	.db #0x08
   04AE 0A                 1689 	.db #0x0A
   04AF 12                 1690 	.db #0x12
   04B0 10                 1691 	.db #0x10
   04B1 00                 1692 	.db #0x00
   04B2 02                 1693 	.db #0x02
   04B3 08                 1694 	.db #0x08
   04B4 0A                 1695 	.db #0x0A
   04B5 12                 1696 	.db #0x12
   04B6 10                 1697 	.db #0x10
   04B7 00                 1698 	.db #0x00
   04B8 02                 1699 	.db #0x02
   04B9 08                 1700 	.db #0x08
   04BA 0A                 1701 	.db #0x0A
   04BB 12                 1702 	.db #0x12
   04BC 08                 1703 	.db #0x08
   04BD 0A                 1704 	.db #0x0A
   04BE 12                 1705 	.db #0x12
   04BF 10                 1706 	.db #0x10
   04C0 00                 1707 	.db #0x00
   04C1 02                 1708 	.db #0x02
   04C2 08                 1709 	.db #0x08
   04C3 0A                 1710 	.db #0x0A
   04C4 12                 1711 	.db #0x12
   04C5 10                 1712 	.db #0x10
   04C6 00                 1713 	.db #0x00
   04C7 02                 1714 	.db #0x02
   04C8 08                 1715 	.db #0x08
   04C9 0A                 1716 	.db #0x0A
   04CA 12                 1717 	.db #0x12
   04CB 10                 1718 	.db #0x10
   04CC 0A                 1719 	.db #0x0A
   04CD 12                 1720 	.db #0x12
   04CE 10                 1721 	.db #0x10
   04CF 00                 1722 	.db #0x00
   04D0 02                 1723 	.db #0x02
   04D1 08                 1724 	.db #0x08
   04D2 0A                 1725 	.db #0x0A
   04D3 12                 1726 	.db #0x12
   04D4 10                 1727 	.db #0x10
   04D5 00                 1728 	.db #0x00
   04D6 02                 1729 	.db #0x02
   04D7 08                 1730 	.db #0x08
   04D8 0A                 1731 	.db #0x0A
   04D9 12                 1732 	.db #0x12
   04DA 10                 1733 	.db #0x10
   04DB 00                 1734 	.db #0x00
   04DC 12                 1735 	.db #0x12
   04DD 10                 1736 	.db #0x10
   04DE 00                 1737 	.db #0x00
   04DF 02                 1738 	.db #0x02
   04E0 08                 1739 	.db #0x08
   04E1 0A                 1740 	.db #0x0A
   04E2 12                 1741 	.db #0x12
   04E3 10                 1742 	.db #0x10
   04E4 00                 1743 	.db #0x00
   04E5 02                 1744 	.db #0x02
   04E6 08                 1745 	.db #0x08
   04E7 0A                 1746 	.db #0x0A
   04E8 12                 1747 	.db #0x12
   04E9 10                 1748 	.db #0x10
   04EA 00                 1749 	.db #0x00
   04EB 02                 1750 	.db #0x02
   04EC 10                 1751 	.db #0x10
   04ED 00                 1752 	.db #0x00
   04EE 02                 1753 	.db #0x02
   04EF 08                 1754 	.db #0x08
   04F0 0A                 1755 	.db #0x0A
   04F1 12                 1756 	.db #0x12
   04F2 10                 1757 	.db #0x10
   04F3 00                 1758 	.db #0x00
   04F4 02                 1759 	.db #0x02
   04F5 08                 1760 	.db #0x08
   04F6 0A                 1761 	.db #0x0A
   04F7 12                 1762 	.db #0x12
   04F8 10                 1763 	.db #0x10
   04F9 00                 1764 	.db #0x00
   04FA 02                 1765 	.db #0x02
   04FB 08                 1766 	.db #0x08
   04FC 00                 1767 	.db #0x00
   04FD 02                 1768 	.db #0x02
   04FE 08                 1769 	.db #0x08
   04FF 0A                 1770 	.db #0x0A
   0500 12                 1771 	.db #0x12
   0501 10                 1772 	.db #0x10
   0502 00                 1773 	.db #0x00
   0503 02                 1774 	.db #0x02
   0504 08                 1775 	.db #0x08
   0505 0A                 1776 	.db #0x0A
   0506 12                 1777 	.db #0x12
   0507 10                 1778 	.db #0x10
   0508 00                 1779 	.db #0x00
   0509 02                 1780 	.db #0x02
   050A 08                 1781 	.db #0x08
   050B 0A                 1782 	.db #0x0A
   050C 02                 1783 	.db #0x02
   050D 08                 1784 	.db #0x08
   050E 0A                 1785 	.db #0x0A
   050F 12                 1786 	.db #0x12
   0510 10                 1787 	.db #0x10
   0511 00                 1788 	.db #0x00
   0512 02                 1789 	.db #0x02
   0513 08                 1790 	.db #0x08
   0514 0A                 1791 	.db #0x0A
   0515 12                 1792 	.db #0x12
   0516 10                 1793 	.db #0x10
   0517 00                 1794 	.db #0x00
   0518 02                 1795 	.db #0x02
   0519 08                 1796 	.db #0x08
   051A 0A                 1797 	.db #0x0A
   051B 12                 1798 	.db #0x12
   051C 08                 1799 	.db #0x08
   051D 0A                 1800 	.db #0x0A
   051E 12                 1801 	.db #0x12
   051F 10                 1802 	.db #0x10
   0520 00                 1803 	.db #0x00
   0521 02                 1804 	.db #0x02
   0522 08                 1805 	.db #0x08
   0523 0A                 1806 	.db #0x0A
   0524 12                 1807 	.db #0x12
   0525 10                 1808 	.db #0x10
   0526 00                 1809 	.db #0x00
   0527 02                 1810 	.db #0x02
   0528 08                 1811 	.db #0x08
   0529 0A                 1812 	.db #0x0A
   052A 12                 1813 	.db #0x12
   052B 10                 1814 	.db #0x10
   052C                    1815 _tri_side2:
   052C 00                 1816 	.db #0x00
   052D 10                 1817 	.db #0x10
   052E 12                 1818 	.db #0x12
   052F 0A                 1819 	.db #0x0A
   0530 08                 1820 	.db #0x08
   0531 02                 1821 	.db #0x02
   0532 00                 1822 	.db #0x00
   0533 10                 1823 	.db #0x10
   0534 12                 1824 	.db #0x12
   0535 0A                 1825 	.db #0x0A
   0536 08                 1826 	.db #0x08
   0537 02                 1827 	.db #0x02
   0538 00                 1828 	.db #0x00
   0539 10                 1829 	.db #0x10
   053A 12                 1830 	.db #0x12
   053B 0A                 1831 	.db #0x0A
   053C 02                 1832 	.db #0x02
   053D 00                 1833 	.db #0x00
   053E 10                 1834 	.db #0x10
   053F 12                 1835 	.db #0x12
   0540 0A                 1836 	.db #0x0A
   0541 08                 1837 	.db #0x08
   0542 02                 1838 	.db #0x02
   0543 00                 1839 	.db #0x00
   0544 10                 1840 	.db #0x10
   0545 12                 1841 	.db #0x12
   0546 0A                 1842 	.db #0x0A
   0547 08                 1843 	.db #0x08
   0548 02                 1844 	.db #0x02
   0549 00                 1845 	.db #0x00
   054A 10                 1846 	.db #0x10
   054B 12                 1847 	.db #0x12
   054C 08                 1848 	.db #0x08
   054D 02                 1849 	.db #0x02
   054E 00                 1850 	.db #0x00
   054F 10                 1851 	.db #0x10
   0550 12                 1852 	.db #0x12
   0551 0A                 1853 	.db #0x0A
   0552 08                 1854 	.db #0x08
   0553 02                 1855 	.db #0x02
   0554 00                 1856 	.db #0x00
   0555 10                 1857 	.db #0x10
   0556 12                 1858 	.db #0x12
   0557 0A                 1859 	.db #0x0A
   0558 08                 1860 	.db #0x08
   0559 02                 1861 	.db #0x02
   055A 00                 1862 	.db #0x00
   055B 10                 1863 	.db #0x10
   055C 0A                 1864 	.db #0x0A
   055D 08                 1865 	.db #0x08
   055E 02                 1866 	.db #0x02
   055F 00                 1867 	.db #0x00
   0560 10                 1868 	.db #0x10
   0561 12                 1869 	.db #0x12
   0562 0A                 1870 	.db #0x0A
   0563 08                 1871 	.db #0x08
   0564 02                 1872 	.db #0x02
   0565 00                 1873 	.db #0x00
   0566 10                 1874 	.db #0x10
   0567 12                 1875 	.db #0x12
   0568 0A                 1876 	.db #0x0A
   0569 08                 1877 	.db #0x08
   056A 02                 1878 	.db #0x02
   056B 00                 1879 	.db #0x00
   056C 12                 1880 	.db #0x12
   056D 0A                 1881 	.db #0x0A
   056E 08                 1882 	.db #0x08
   056F 02                 1883 	.db #0x02
   0570 00                 1884 	.db #0x00
   0571 10                 1885 	.db #0x10
   0572 12                 1886 	.db #0x12
   0573 0A                 1887 	.db #0x0A
   0574 08                 1888 	.db #0x08
   0575 02                 1889 	.db #0x02
   0576 00                 1890 	.db #0x00
   0577 10                 1891 	.db #0x10
   0578 12                 1892 	.db #0x12
   0579 0A                 1893 	.db #0x0A
   057A 08                 1894 	.db #0x08
   057B 02                 1895 	.db #0x02
   057C 10                 1896 	.db #0x10
   057D 12                 1897 	.db #0x12
   057E 0A                 1898 	.db #0x0A
   057F 08                 1899 	.db #0x08
   0580 02                 1900 	.db #0x02
   0581 00                 1901 	.db #0x00
   0582 10                 1902 	.db #0x10
   0583 12                 1903 	.db #0x12
   0584 0A                 1904 	.db #0x0A
   0585 08                 1905 	.db #0x08
   0586 02                 1906 	.db #0x02
   0587 00                 1907 	.db #0x00
   0588 10                 1908 	.db #0x10
   0589 12                 1909 	.db #0x12
   058A 0A                 1910 	.db #0x0A
   058B 08                 1911 	.db #0x08
   058C 00                 1912 	.db #0x00
   058D 10                 1913 	.db #0x10
   058E 12                 1914 	.db #0x12
   058F 0A                 1915 	.db #0x0A
   0590 08                 1916 	.db #0x08
   0591 02                 1917 	.db #0x02
   0592 00                 1918 	.db #0x00
   0593 10                 1919 	.db #0x10
   0594 12                 1920 	.db #0x12
   0595 0A                 1921 	.db #0x0A
   0596 08                 1922 	.db #0x08
   0597 02                 1923 	.db #0x02
   0598 00                 1924 	.db #0x00
   0599 10                 1925 	.db #0x10
   059A 12                 1926 	.db #0x12
   059B 0A                 1927 	.db #0x0A
   059C 02                 1928 	.db #0x02
   059D 00                 1929 	.db #0x00
   059E 10                 1930 	.db #0x10
   059F 12                 1931 	.db #0x12
   05A0 0A                 1932 	.db #0x0A
   05A1 08                 1933 	.db #0x08
   05A2 02                 1934 	.db #0x02
   05A3 00                 1935 	.db #0x00
   05A4 10                 1936 	.db #0x10
   05A5 12                 1937 	.db #0x12
   05A6 0A                 1938 	.db #0x0A
   05A7 08                 1939 	.db #0x08
   05A8 02                 1940 	.db #0x02
   05A9 00                 1941 	.db #0x00
   05AA 10                 1942 	.db #0x10
   05AB 12                 1943 	.db #0x12
   05AC 08                 1944 	.db #0x08
   05AD 02                 1945 	.db #0x02
   05AE 00                 1946 	.db #0x00
   05AF 10                 1947 	.db #0x10
   05B0 12                 1948 	.db #0x12
   05B1 0A                 1949 	.db #0x0A
   05B2 08                 1950 	.db #0x08
   05B3 02                 1951 	.db #0x02
   05B4 00                 1952 	.db #0x00
   05B5 10                 1953 	.db #0x10
   05B6 12                 1954 	.db #0x12
   05B7 0A                 1955 	.db #0x0A
   05B8 08                 1956 	.db #0x08
   05B9 02                 1957 	.db #0x02
   05BA 00                 1958 	.db #0x00
   05BB 10                 1959 	.db #0x10
   05BC 0A                 1960 	.db #0x0A
   05BD 08                 1961 	.db #0x08
   05BE 02                 1962 	.db #0x02
   05BF 00                 1963 	.db #0x00
   05C0 10                 1964 	.db #0x10
   05C1 12                 1965 	.db #0x12
   05C2 0A                 1966 	.db #0x0A
   05C3 08                 1967 	.db #0x08
   05C4 02                 1968 	.db #0x02
   05C5 00                 1969 	.db #0x00
   05C6 10                 1970 	.db #0x10
   05C7 12                 1971 	.db #0x12
   05C8 0A                 1972 	.db #0x0A
   05C9 08                 1973 	.db #0x08
   05CA 02                 1974 	.db #0x02
   05CB 00                 1975 	.db #0x00
   05CC 12                 1976 	.db #0x12
   05CD 0A                 1977 	.db #0x0A
   05CE 08                 1978 	.db #0x08
   05CF 02                 1979 	.db #0x02
   05D0 00                 1980 	.db #0x00
   05D1 10                 1981 	.db #0x10
   05D2 12                 1982 	.db #0x12
   05D3 0A                 1983 	.db #0x0A
   05D4 08                 1984 	.db #0x08
   05D5 02                 1985 	.db #0x02
   05D6 00                 1986 	.db #0x00
   05D7 10                 1987 	.db #0x10
   05D8 12                 1988 	.db #0x12
   05D9 0A                 1989 	.db #0x0A
   05DA 08                 1990 	.db #0x08
   05DB 02                 1991 	.db #0x02
   05DC 10                 1992 	.db #0x10
   05DD 12                 1993 	.db #0x12
   05DE 0A                 1994 	.db #0x0A
   05DF 08                 1995 	.db #0x08
   05E0 02                 1996 	.db #0x02
   05E1 00                 1997 	.db #0x00
   05E2 10                 1998 	.db #0x10
   05E3 12                 1999 	.db #0x12
   05E4 0A                 2000 	.db #0x0A
   05E5 08                 2001 	.db #0x08
   05E6 02                 2002 	.db #0x02
   05E7 00                 2003 	.db #0x00
   05E8 10                 2004 	.db #0x10
   05E9 12                 2005 	.db #0x12
   05EA 0A                 2006 	.db #0x0A
   05EB 08                 2007 	.db #0x08
                           2008 ;demo.c:139: void my_isr(void) interrupt
                           2009 ;	---------------------------------
                           2010 ; Function my_isr
                           2011 ; ---------------------------------
   05EC                    2012 _my_isr_start::
   05EC                    2013 _my_isr:
   05EC F5                 2014 	push	af
   05ED C5                 2015 	push	bc
   05EE D5                 2016 	push	de
   05EF E5                 2017 	push	hl
   05F0 FD E5              2018 	push	iy
                           2019 ;demo.c:141: DI;
   05F2 F3                 2020 		di 
                           2021 ;demo.c:143: READ_VDP_STATUS;
   05F3 DB 99              2022 		in a,(#0x99) 
                           2023 ;demo.c:145: PLY_Play();
   05F5 CDr00s00           2024 	call	_PLY_Play
                           2025 ;demo.c:146: PLY_SendRegisters();
   05F8 CDr00s00           2026 	call	_PLY_SendRegisters
                           2027 ;demo.c:148: vbicount+=1;
   05FB FD 21r00s41        2028 	ld	iy,#_vbicount
   05FF FD 34 00           2029 	inc	0 (iy)
   0602 20 07              2030 	jr	NZ,00103$
   0604 FD 21r00s41        2031 	ld	iy,#_vbicount
   0608 FD 34 01           2032 	inc	1 (iy)
   060B                    2033 00103$:
                           2034 ;demo.c:149: tick++;
   060B FD 21r02s41        2035 	ld	iy,#_tick
   060F FD 34 00           2036 	inc	0 (iy)
   0612 20 07              2037 	jr	NZ,00104$
   0614 FD 21r02s41        2038 	ld	iy,#_tick
   0618 FD 34 01           2039 	inc	1 (iy)
   061B                    2040 00104$:
                           2041 ;demo.c:151: EI;
   061B FB                 2042 		ei 
   061C FD E1              2043 	pop	iy
   061E E1                 2044 	pop	hl
   061F D1                 2045 	pop	de
   0620 C1                 2046 	pop	bc
   0621 F1                 2047 	pop	af
   0622 ED 4D              2048 	reti
   0624                    2049 _my_isr_end::
                           2050 ;demo.c:154: void color_isr(void) interrupt
                           2051 ;	---------------------------------
                           2052 ; Function color_isr
                           2053 ; ---------------------------------
   0624                    2054 _color_isr_start::
   0624                    2055 _color_isr:
   0624 F5                 2056 	push	af
   0625 C5                 2057 	push	bc
   0626 D5                 2058 	push	de
   0627 E5                 2059 	push	hl
   0628 FD E5              2060 	push	iy
                           2061 ;demo.c:156: DI;
   062A F3                 2062 		di 
                           2063 ;demo.c:158: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              2064 	ld	a,#0x01
   062D F5                 2065 	push	af
   062E 33                 2066 	inc	sp
   062F CDr00s00           2067 	call	_vdp2_status
   0632 33                 2068 	inc	sp
   0633 4D                 2069 	ld	c,l
   0634 21 00 00           2070 	ld	hl,#0x0000
   0637 E5                 2071 	push	hl
   0638 79                 2072 	ld	a,c
   0639 F5                 2073 	push	af
   063A 33                 2074 	inc	sp
   063B CDr00s00           2075 	call	_isNthBitSet
   063E F1                 2076 	pop	af
   063F 33                 2077 	inc	sp
   0640 44                 2078 	ld	b,h
   0641 4D                 2079 	ld	c,l
   0642 79                 2080 	ld	a,c
   0643 B0                 2081 	or	a,b
   0644 28 19              2082 	jr	Z,00102$
                           2083 ;demo.c:159: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r00s41           2084 	ld	hl,#_vbicount + 0
   0649 4E                 2085 	ld	c,(hl)
   064A 06 00              2086 	ld	b,#0x00
   064C 21r00s00           2087 	ld	hl,#_sintab
   064F 09                 2088 	add	hl,bc
   0650 7E                 2089 	ld	a,(hl)
   0651 F5                 2090 	push	af
   0652 33                 2091 	inc	sp
   0653 3E 17              2092 	ld	a,#0x17
   0655 F5                 2093 	push	af
   0656 33                 2094 	inc	sp
   0657 CDr00s00           2095 	call	_vdp_register
   065A F1                 2096 	pop	af
                           2097 ;demo.c:160: READ_VDP_STATUS;
   065B DB 99              2098 		in a,(#0x99) 
   065D 18 18              2099 	jr	00103$
   065F                    2100 00102$:
                           2101 ;demo.c:163: READ_VDP_STATUS;
   065F DB 99              2102 		in a,(#0x99) 
                           2103 ;demo.c:164: vbicount++;
   0661 FD 21r00s41        2104 	ld	iy,#_vbicount
   0665 FD 34 00           2105 	inc	0 (iy)
   0668 20 07              2106 	jr	NZ,00107$
   066A FD 21r00s41        2107 	ld	iy,#_vbicount
   066E FD 34 01           2108 	inc	1 (iy)
   0671                    2109 00107$:
                           2110 ;demo.c:167: PLY_Play();
   0671 CDr00s00           2111 	call	_PLY_Play
                           2112 ;demo.c:168: PLY_SendRegisters();
   0674 CDr00s00           2113 	call	_PLY_SendRegisters
   0677                    2114 00103$:
                           2115 ;demo.c:171: EI;
   0677 FB                 2116 		ei 
   0678 FD E1              2117 	pop	iy
   067A E1                 2118 	pop	hl
   067B D1                 2119 	pop	de
   067C C1                 2120 	pop	bc
   067D F1                 2121 	pop	af
   067E ED 4D              2122 	reti
   0680                    2123 _color_isr_end::
                           2124 ;demo.c:178: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2125 ;	---------------------------------
                           2126 ; Function ge5_load
                           2127 ; ---------------------------------
   0680                    2128 _ge5_load_start::
   0680                    2129 _ge5_load:
   0680 DD E5              2130 	push	ix
   0682 DD 21 00 00        2131 	ld	ix,#0
   0686 DD 39              2132 	add	ix,sp
   0688 21 D2 FF           2133 	ld	hl,#-46
   068B 39                 2134 	add	hl,sp
   068C F9                 2135 	ld	sp,hl
                           2136 ;demo.c:182: if(debugprint == 1) {
   068D DD 7E 09           2137 	ld	a,9 (ix)
   0690 D6 01              2138 	sub	a,#0x01
   0692 20 06              2139 	jr	NZ,00125$
   0694 DD 7E 0A           2140 	ld	a,10 (ix)
   0697 B7                 2141 	or	a,a
   0698 28 02              2142 	jr	Z,00126$
   069A                    2143 00125$:
   069A 18 1B              2144 	jr	00102$
   069C                    2145 00126$:
                           2146 ;demo.c:183: puts("loading ge5file: ");
   069C 21r7Bs07           2147 	ld	hl,#__str_0
   069F E5                 2148 	push	hl
   06A0 CDr00s00           2149 	call	_puts
   06A3 F1                 2150 	pop	af
                           2151 ;demo.c:184: puts(file_name);
   06A4 DD 6E 04           2152 	ld	l,4 (ix)
   06A7 DD 66 05           2153 	ld	h,5 (ix)
   06AA E5                 2154 	push	hl
   06AB CDr00s00           2155 	call	_puts
   06AE F1                 2156 	pop	af
                           2157 ;demo.c:185: puts("\r\n");
   06AF 21r8Ds07           2158 	ld	hl,#__str_1
   06B2 E5                 2159 	push	hl
   06B3 CDr00s00           2160 	call	_puts
   06B6 F1                 2161 	pop	af
   06B7                    2162 00102$:
                           2163 ;demo.c:188: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2164 	ld	hl,#0x0000
   06BA 39                 2165 	add	hl,sp
   06BB 4D                 2166 	ld	c,l
   06BC 44                 2167 	ld	b,h
   06BD 21 2E 00           2168 	ld	hl,#0x002E
   06C0 E5                 2169 	push	hl
   06C1 3E 00              2170 	ld	a,#0x00
   06C3 F5                 2171 	push	af
   06C4 33                 2172 	inc	sp
   06C5 C5                 2173 	push	bc
   06C6 CDr00s00           2174 	call	_memset
   06C9 F1                 2175 	pop	af
   06CA F1                 2176 	pop	af
   06CB 33                 2177 	inc	sp
                           2178 ;demo.c:190: f.record_size = 128;
   06CC 21 00 00           2179 	ld	hl,#0x0000
   06CF 39                 2180 	add	hl,sp
   06D0 4D                 2181 	ld	c,l
   06D1 44                 2182 	ld	b,h
   06D2 21 0F 00           2183 	ld	hl,#0x000F
   06D5 09                 2184 	add	hl,bc
   06D6 EB                 2185 	ex	de,hl
   06D7 3E 80              2186 	ld	a,#0x80
   06D9 12                 2187 	ld	(de),a
                           2188 ;demo.c:191: f.drive = 0;
   06DA 3E 00              2189 	ld	a,#0x00
   06DC 02                 2190 	ld	(bc),a
                           2191 ;demo.c:193: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2192 	ld	e,4 (ix)
   06E0 DD 56 05           2193 	ld	d,5 (ix)
   06E3 03                 2194 	inc	bc
   06E4 21 0B 00           2195 	ld	hl,#0x000B
   06E7 E5                 2196 	push	hl
   06E8 D5                 2197 	push	de
   06E9 C5                 2198 	push	bc
   06EA CDr00s00           2199 	call	_memcpy
   06ED F1                 2200 	pop	af
   06EE F1                 2201 	pop	af
   06EF F1                 2202 	pop	af
                           2203 ;demo.c:195: if (open(&f) != 0) return 0;
   06F0 21 00 00           2204 	ld	hl,#0x0000
   06F3 39                 2205 	add	hl,sp
   06F4 E5                 2206 	push	hl
   06F5 CDr00s00           2207 	call	_open
   06F8 F1                 2208 	pop	af
   06F9 AF                 2209 	xor	a,a
   06FA B5                 2210 	or	a,l
   06FB 28 05              2211 	jr	Z,00104$
   06FD 2E 00              2212 	ld	l,#0x00
   06FF C3r76s07           2213 	jp	00116$
   0702                    2214 00104$:
                           2215 ;demo.c:196: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2216 	ld	l,7 (ix)
   0705 DD 66 08           2217 	ld	h,8 (ix)
   0708 E5                 2218 	push	hl
   0709 DD 7E 06           2219 	ld	a,6 (ix)
   070C F5                 2220 	push	af
   070D 33                 2221 	inc	sp
   070E CDr00s00           2222 	call	_vdp_set_write_address
   0711 F1                 2223 	pop	af
   0712 33                 2224 	inc	sp
                           2225 ;demo.c:198: for (i = 0; i < 213; i++) {
   0713 0E 00              2226 	ld	c,#0x00
   0715                    2227 00112$:
   0715 79                 2228 	ld	a,c
   0716 D6 D5              2229 	sub	a,#0xD5
   0718 D2r6Bs07           2230 	jp	NC,00115$
                           2231 ;demo.c:199: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2232 	push	bc
   071C 21rE0s3F           2233 	ld	hl,#_scratch
   071F E5                 2234 	push	hl
   0720 CDr00s00           2235 	call	_block_set_data_ptr
   0723 F1                 2236 	pop	af
   0724 7D                 2237 	ld	a,l
   0725 C1                 2238 	pop	bc
   0726 47                 2239 	ld	b,a
   0727 B7                 2240 	or	a,a
   0728 28 05              2241 	jr	Z,00106$
   072A 2E 00              2242 	ld	l,#0x00
   072C C3r76s07           2243 	jp	00116$
   072F                    2244 00106$:
                           2245 ;demo.c:200: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2246 	ld	hl,#0x0000
   0732 39                 2247 	add	hl,sp
   0733 C5                 2248 	push	bc
   0734 E5                 2249 	push	hl
   0735 CDr00s00           2250 	call	_block_read
   0738 F1                 2251 	pop	af
   0739 7D                 2252 	ld	a,l
   073A C1                 2253 	pop	bc
   073B 47                 2254 	ld	b,a
   073C B7                 2255 	or	a,a
   073D 28 04              2256 	jr	Z,00108$
   073F 2E 00              2257 	ld	l,#0x00
   0741 18 33              2258 	jr	00116$
   0743                    2259 00108$:
                           2260 ;demo.c:202: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2261 	xor	a,a
   0744 B1                 2262 	or	a,c
   0745 20 11              2263 	jr	NZ,00110$
   0747 11rE7s3F           2264 	ld	de,#_scratch + 7
   074A C5                 2265 	push	bc
   074B 3E 79              2266 	ld	a,#0x79
   074D F5                 2267 	push	af
   074E 33                 2268 	inc	sp
   074F D5                 2269 	push	de
   0750 CDr00s00           2270 	call	_vdp_load_screen
   0753 F1                 2271 	pop	af
   0754 33                 2272 	inc	sp
   0755 C1                 2273 	pop	bc
   0756 18 0F              2274 	jr	00114$
   0758                    2275 00110$:
                           2276 ;demo.c:203: else vdp_load_screen(scratch, 128);
   0758 C5                 2277 	push	bc
   0759 3E 80              2278 	ld	a,#0x80
   075B F5                 2279 	push	af
   075C 33                 2280 	inc	sp
   075D 21rE0s3F           2281 	ld	hl,#_scratch
   0760 E5                 2282 	push	hl
   0761 CDr00s00           2283 	call	_vdp_load_screen
   0764 F1                 2284 	pop	af
   0765 33                 2285 	inc	sp
   0766 C1                 2286 	pop	bc
   0767                    2287 00114$:
                           2288 ;demo.c:198: for (i = 0; i < 213; i++) {
   0767 0C                 2289 	inc	c
   0768 C3r15s07           2290 	jp	00112$
   076B                    2291 00115$:
                           2292 ;demo.c:206: close(&f);
   076B 21 00 00           2293 	ld	hl,#0x0000
   076E 39                 2294 	add	hl,sp
   076F E5                 2295 	push	hl
   0770 CDr00s00           2296 	call	_close
   0773 F1                 2297 	pop	af
                           2298 ;demo.c:208: return 1;
   0774 2E 01              2299 	ld	l,#0x01
   0776                    2300 00116$:
   0776 DD F9              2301 	ld	sp,ix
   0778 DD E1              2302 	pop	ix
   077A C9                 2303 	ret
   077B                    2304 _ge5_load_end::
   077B                    2305 __str_0:
   077B 6C 6F 61 64 69 6E  2306 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2307 	.db 0x00
   078D                    2308 __str_1:
   078D 0D                 2309 	.db 0x0D
   078E 0A                 2310 	.db 0x0A
   078F 00                 2311 	.db 0x00
                           2312 ;demo.c:211: void scratch_clear() {
                           2313 ;	---------------------------------
                           2314 ; Function scratch_clear
                           2315 ; ---------------------------------
   0790                    2316 _scratch_clear_start::
   0790                    2317 _scratch_clear:
                           2318 ;demo.c:212: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2319 	ld	hl,#0x0080
   0793 E5                 2320 	push	hl
   0794 3E 00              2321 	ld	a,#0x00
   0796 F5                 2322 	push	af
   0797 33                 2323 	inc	sp
   0798 21rE0s3F           2324 	ld	hl,#_scratch
   079B E5                 2325 	push	hl
   079C CDr00s00           2326 	call	_memset
   079F F1                 2327 	pop	af
   07A0 F1                 2328 	pop	af
   07A1 33                 2329 	inc	sp
   07A2 C9                 2330 	ret
   07A3                    2331 _scratch_clear_end::
                           2332 ;demo.c:215: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2333 ;	---------------------------------
                           2334 ; Function pal_load
                           2335 ; ---------------------------------
   07A3                    2336 _pal_load_start::
   07A3                    2337 _pal_load:
   07A3 DD E5              2338 	push	ix
   07A5 DD 21 00 00        2339 	ld	ix,#0
   07A9 DD 39              2340 	add	ix,sp
   07AB 21 D2 FF           2341 	ld	hl,#-46
   07AE 39                 2342 	add	hl,sp
   07AF F9                 2343 	ld	sp,hl
                           2344 ;demo.c:218: if(debugprint == 1) {
   07B0 DD 7E 07           2345 	ld	a,7 (ix)
   07B3 D6 01              2346 	sub	a,#0x01
   07B5 20 06              2347 	jr	NZ,00115$
   07B7 DD 7E 08           2348 	ld	a,8 (ix)
   07BA B7                 2349 	or	a,a
   07BB 28 02              2350 	jr	Z,00116$
   07BD                    2351 00115$:
   07BD 18 1B              2352 	jr	00102$
   07BF                    2353 00116$:
                           2354 ;demo.c:219: puts("loading palfile: ");
   07BF 21r6Ds08           2355 	ld	hl,#__str_2
   07C2 E5                 2356 	push	hl
   07C3 CDr00s00           2357 	call	_puts
   07C6 F1                 2358 	pop	af
                           2359 ;demo.c:220: puts(file_name);
   07C7 DD 6E 04           2360 	ld	l,4 (ix)
   07CA DD 66 05           2361 	ld	h,5 (ix)
   07CD E5                 2362 	push	hl
   07CE CDr00s00           2363 	call	_puts
   07D1 F1                 2364 	pop	af
                           2365 ;demo.c:221: puts("\r\n");
   07D2 21r7Fs08           2366 	ld	hl,#__str_3
   07D5 E5                 2367 	push	hl
   07D6 CDr00s00           2368 	call	_puts
   07D9 F1                 2369 	pop	af
   07DA                    2370 00102$:
                           2371 ;demo.c:224: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2372 	ld	hl,#0x0000
   07DD 39                 2373 	add	hl,sp
   07DE 4D                 2374 	ld	c,l
   07DF 44                 2375 	ld	b,h
   07E0 21 2E 00           2376 	ld	hl,#0x002E
   07E3 E5                 2377 	push	hl
   07E4 3E 00              2378 	ld	a,#0x00
   07E6 F5                 2379 	push	af
   07E7 33                 2380 	inc	sp
   07E8 C5                 2381 	push	bc
   07E9 CDr00s00           2382 	call	_memset
   07EC F1                 2383 	pop	af
   07ED F1                 2384 	pop	af
   07EE 33                 2385 	inc	sp
                           2386 ;demo.c:225: scratch_clear();
   07EF CDr90s07           2387 	call	_scratch_clear
                           2388 ;demo.c:227: f.record_size = ss;
   07F2 21 00 00           2389 	ld	hl,#0x0000
   07F5 39                 2390 	add	hl,sp
   07F6 4D                 2391 	ld	c,l
   07F7 44                 2392 	ld	b,h
   07F8 21 0F 00           2393 	ld	hl,#0x000F
   07FB 09                 2394 	add	hl,bc
   07FC EB                 2395 	ex	de,hl
   07FD DD 7E 06           2396 	ld	a,6 (ix)
   0800 12                 2397 	ld	(de),a
                           2398 ;demo.c:228: f.drive = 0;
   0801 3E 00              2399 	ld	a,#0x00
   0803 02                 2400 	ld	(bc),a
                           2401 ;demo.c:230: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2402 	ld	e,4 (ix)
   0807 DD 56 05           2403 	ld	d,5 (ix)
   080A 03                 2404 	inc	bc
   080B 21 0B 00           2405 	ld	hl,#0x000B
   080E E5                 2406 	push	hl
   080F D5                 2407 	push	de
   0810 C5                 2408 	push	bc
   0811 CDr00s00           2409 	call	_memcpy
   0814 F1                 2410 	pop	af
   0815 F1                 2411 	pop	af
   0816 F1                 2412 	pop	af
                           2413 ;demo.c:232: if (open(&f) != 0) return 0;
   0817 21 00 00           2414 	ld	hl,#0x0000
   081A 39                 2415 	add	hl,sp
   081B E5                 2416 	push	hl
   081C CDr00s00           2417 	call	_open
   081F F1                 2418 	pop	af
   0820 AF                 2419 	xor	a,a
   0821 B5                 2420 	or	a,l
   0822 28 04              2421 	jr	Z,00104$
   0824 2E 00              2422 	ld	l,#0x00
   0826 18 40              2423 	jr	00109$
   0828                    2424 00104$:
                           2425 ;demo.c:233: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21rE0s3F           2426 	ld	hl,#_scratch
   082B E5                 2427 	push	hl
   082C CDr00s00           2428 	call	_block_set_data_ptr
   082F F1                 2429 	pop	af
   0830 AF                 2430 	xor	a,a
   0831 B5                 2431 	or	a,l
   0832 28 04              2432 	jr	Z,00106$
   0834 2E 00              2433 	ld	l,#0x00
   0836 18 30              2434 	jr	00109$
   0838                    2435 00106$:
                           2436 ;demo.c:234: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2437 	ld	hl,#0x0000
   083B 39                 2438 	add	hl,sp
   083C E5                 2439 	push	hl
   083D CDr00s00           2440 	call	_block_read
   0840 F1                 2441 	pop	af
   0841 AF                 2442 	xor	a,a
   0842 B5                 2443 	or	a,l
   0843 28 04              2444 	jr	Z,00108$
   0845 2E 00              2445 	ld	l,#0x00
   0847 18 1F              2446 	jr	00109$
   0849                    2447 00108$:
                           2448 ;demo.c:236: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2449 	ld	c,6 (ix)
   084C 06 00              2450 	ld	b,#0x00
   084E 11rE7s3F           2451 	ld	de,#_scratch + 7
   0851 C5                 2452 	push	bc
   0852 D5                 2453 	push	de
   0853 21r60s40           2454 	ld	hl,#_cur_palette
   0856 E5                 2455 	push	hl
   0857 CDr00s00           2456 	call	_memcpy
   085A F1                 2457 	pop	af
   085B F1                 2458 	pop	af
   085C F1                 2459 	pop	af
                           2460 ;demo.c:238: close(&f);
   085D 21 00 00           2461 	ld	hl,#0x0000
   0860 39                 2462 	add	hl,sp
   0861 E5                 2463 	push	hl
   0862 CDr00s00           2464 	call	_close
   0865 F1                 2465 	pop	af
                           2466 ;demo.c:239: return 1;
   0866 2E 01              2467 	ld	l,#0x01
   0868                    2468 00109$:
   0868 DD F9              2469 	ld	sp,ix
   086A DD E1              2470 	pop	ix
   086C C9                 2471 	ret
   086D                    2472 _pal_load_end::
   086D                    2473 __str_2:
   086D 6C 6F 61 64 69 6E  2474 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2475 	.db 0x00
   087F                    2476 __str_3:
   087F 0D                 2477 	.db 0x0D
   0880 0A                 2478 	.db 0x0A
   0881 00                 2479 	.db 0x00
                           2480 ;demo.c:243: void pause() {
                           2481 ;	---------------------------------
                           2482 ; Function pause
                           2483 ; ---------------------------------
   0882                    2484 _pause_start::
   0882                    2485 _pause:
                           2486 ;demo.c:244: uint8_t i,j,k = 0;
                           2487 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2488 	ld	bc,#0x0000
   0885                    2489 00104$:
   0885 78                 2490 	ld	a,b
   0886 D6 FF              2491 	sub	a,#0xFF
   0888 D0                 2492 	ret	NC
                           2493 ;demo.c:246: for (j = 0; j < 255; j++) {
   0889 59                 2494 	ld	e,c
   088A 16 FF              2495 	ld	d,#0xFF
   088C                    2496 00103$:
                           2497 ;demo.c:247: k++;
   088C 1C                 2498 	inc	e
   088D 15                 2499 	dec	d
                           2500 ;demo.c:246: for (j = 0; j < 255; j++) {
   088E AF                 2501 	xor	a,a
   088F B2                 2502 	or	a,d
   0890 20 FA              2503 	jr	NZ,00103$
                           2504 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0892 4B                 2505 	ld	c,e
   0893 04                 2506 	inc	b
   0894 18 EF              2507 	jr	00104$
   0896                    2508 _pause_end::
                           2509 ;demo.c:253: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2510 ;	---------------------------------
                           2511 ; Function raw_load
                           2512 ; ---------------------------------
   0896                    2513 _raw_load_start::
   0896                    2514 _raw_load:
   0896 DD E5              2515 	push	ix
   0898 DD 21 00 00        2516 	ld	ix,#0
   089C DD 39              2517 	add	ix,sp
   089E 21 D2 FF           2518 	ld	hl,#-46
   08A1 39                 2519 	add	hl,sp
   08A2 F9                 2520 	ld	sp,hl
                           2521 ;demo.c:258: if(debugprint == 1) {
   08A3 DD 7E 0A           2522 	ld	a,10 (ix)
   08A6 D6 01              2523 	sub	a,#0x01
   08A8 20 06              2524 	jr	NZ,00120$
   08AA DD 7E 0B           2525 	ld	a,11 (ix)
   08AD B7                 2526 	or	a,a
   08AE 28 02              2527 	jr	Z,00121$
   08B0                    2528 00120$:
   08B0 18 1B              2529 	jr	00102$
   08B2                    2530 00121$:
                           2531 ;demo.c:259: puts("loading rawfile: ");
   08B2 21r84s09           2532 	ld	hl,#__str_4
   08B5 E5                 2533 	push	hl
   08B6 CDr00s00           2534 	call	_puts
   08B9 F1                 2535 	pop	af
                           2536 ;demo.c:260: puts(file_name);
   08BA DD 6E 04           2537 	ld	l,4 (ix)
   08BD DD 66 05           2538 	ld	h,5 (ix)
   08C0 E5                 2539 	push	hl
   08C1 CDr00s00           2540 	call	_puts
   08C4 F1                 2541 	pop	af
                           2542 ;demo.c:261: puts("\r\n");
   08C5 21r96s09           2543 	ld	hl,#__str_5
   08C8 E5                 2544 	push	hl
   08C9 CDr00s00           2545 	call	_puts
   08CC F1                 2546 	pop	af
   08CD                    2547 00102$:
                           2548 ;demo.c:264: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2549 	ld	hl,#0x0000
   08D0 39                 2550 	add	hl,sp
   08D1 4D                 2551 	ld	c,l
   08D2 44                 2552 	ld	b,h
   08D3 21 2E 00           2553 	ld	hl,#0x002E
   08D6 E5                 2554 	push	hl
   08D7 3E 00              2555 	ld	a,#0x00
   08D9 F5                 2556 	push	af
   08DA 33                 2557 	inc	sp
   08DB C5                 2558 	push	bc
   08DC CDr00s00           2559 	call	_memset
   08DF F1                 2560 	pop	af
   08E0 F1                 2561 	pop	af
   08E1 33                 2562 	inc	sp
                           2563 ;demo.c:265: scratch_clear();
   08E2 CDr90s07           2564 	call	_scratch_clear
                           2565 ;demo.c:267: f.record_size = 128;
   08E5 21 00 00           2566 	ld	hl,#0x0000
   08E8 39                 2567 	add	hl,sp
   08E9 4D                 2568 	ld	c,l
   08EA 44                 2569 	ld	b,h
   08EB 21 0F 00           2570 	ld	hl,#0x000F
   08EE 09                 2571 	add	hl,bc
   08EF EB                 2572 	ex	de,hl
   08F0 3E 80              2573 	ld	a,#0x80
   08F2 12                 2574 	ld	(de),a
                           2575 ;demo.c:268: f.drive = 0;
   08F3 3E 00              2576 	ld	a,#0x00
   08F5 02                 2577 	ld	(bc),a
                           2578 ;demo.c:270: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2579 	ld	e,4 (ix)
   08F9 DD 56 05           2580 	ld	d,5 (ix)
   08FC 03                 2581 	inc	bc
   08FD 21 0B 00           2582 	ld	hl,#0x000B
   0900 E5                 2583 	push	hl
   0901 D5                 2584 	push	de
   0902 C5                 2585 	push	bc
   0903 CDr00s00           2586 	call	_memcpy
   0906 F1                 2587 	pop	af
   0907 F1                 2588 	pop	af
   0908 F1                 2589 	pop	af
                           2590 ;demo.c:272: if (open(&f) != 0) return 0;
   0909 21 00 00           2591 	ld	hl,#0x0000
   090C 39                 2592 	add	hl,sp
   090D E5                 2593 	push	hl
   090E CDr00s00           2594 	call	_open
   0911 F1                 2595 	pop	af
   0912 AF                 2596 	xor	a,a
   0913 B5                 2597 	or	a,l
   0914 28 05              2598 	jr	Z,00119$
   0916 2E 00              2599 	ld	l,#0x00
   0918 C3r7Fs09           2600 	jp	00112$
                           2601 ;demo.c:274: while(total < size) {
   091B                    2602 00119$:
   091B 01 00 00           2603 	ld	bc,#0x0000
   091E                    2604 00109$:
   091E 79                 2605 	ld	a,c
   091F DD 96 06           2606 	sub	a,6 (ix)
   0922 78                 2607 	ld	a,b
   0923 DD 9E 07           2608 	sbc	a,7 (ix)
   0926 F2r74s09           2609 	jp	P,00111$
                           2610 ;demo.c:275: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2611 	push	bc
   092A 21rE0s3F           2612 	ld	hl,#_scratch
   092D E5                 2613 	push	hl
   092E CDr00s00           2614 	call	_block_set_data_ptr
   0931 F1                 2615 	pop	af
   0932 5D                 2616 	ld	e,l
   0933 C1                 2617 	pop	bc
   0934 AF                 2618 	xor	a,a
   0935 B3                 2619 	or	a,e
   0936 28 04              2620 	jr	Z,00106$
   0938 2E 00              2621 	ld	l,#0x00
   093A 18 43              2622 	jr	00112$
   093C                    2623 00106$:
                           2624 ;demo.c:276: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2625 	ld	hl,#0x0000
   093F 39                 2626 	add	hl,sp
   0940 C5                 2627 	push	bc
   0941 E5                 2628 	push	hl
   0942 CDr00s00           2629 	call	_block_read
   0945 F1                 2630 	pop	af
   0946 5D                 2631 	ld	e,l
   0947 C1                 2632 	pop	bc
   0948 AF                 2633 	xor	a,a
   0949 B3                 2634 	or	a,e
   094A 28 04              2635 	jr	Z,00108$
   094C 2E 00              2636 	ld	l,#0x00
   094E 18 2F              2637 	jr	00112$
   0950                    2638 00108$:
                           2639 ;demo.c:278: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2640 	ld	a,8 (ix)
   0953 81                 2641 	add	a,c
   0954 5F                 2642 	ld	e,a
   0955 DD 7E 09           2643 	ld	a,9 (ix)
   0958 88                 2644 	adc	a,b
   0959 57                 2645 	ld	d,a
   095A C5                 2646 	push	bc
   095B 21 80 00           2647 	ld	hl,#0x0080
   095E E5                 2648 	push	hl
   095F 21rE0s3F           2649 	ld	hl,#_scratch
   0962 E5                 2650 	push	hl
   0963 D5                 2651 	push	de
   0964 CDr00s00           2652 	call	_memcpy
   0967 F1                 2653 	pop	af
   0968 F1                 2654 	pop	af
   0969 F1                 2655 	pop	af
   096A C1                 2656 	pop	bc
                           2657 ;demo.c:280: total+=incr;
   096B 21 80 00           2658 	ld	hl,#0x0080
   096E 09                 2659 	add	hl,bc
   096F 4D                 2660 	ld	c,l
   0970 44                 2661 	ld	b,h
   0971 C3r1Es09           2662 	jp	00109$
   0974                    2663 00111$:
                           2664 ;demo.c:283: close(&f);
   0974 21 00 00           2665 	ld	hl,#0x0000
   0977 39                 2666 	add	hl,sp
   0978 E5                 2667 	push	hl
   0979 CDr00s00           2668 	call	_close
   097C F1                 2669 	pop	af
                           2670 ;demo.c:285: return 1;
   097D 2E 01              2671 	ld	l,#0x01
   097F                    2672 00112$:
   097F DD F9              2673 	ld	sp,ix
   0981 DD E1              2674 	pop	ix
   0983 C9                 2675 	ret
   0984                    2676 _raw_load_end::
   0984                    2677 __str_4:
   0984 6C 6F 61 64 69 6E  2678 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2679 	.db 0x00
   0996                    2680 __str_5:
   0996 0D                 2681 	.db 0x0D
   0997 0A                 2682 	.db 0x0A
   0998 00                 2683 	.db 0x00
                           2684 ;demo.c:288: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2685 ;	---------------------------------
                           2686 ; Function pck_load
                           2687 ; ---------------------------------
   0999                    2688 _pck_load_start::
   0999                    2689 _pck_load:
   0999 DD E5              2690 	push	ix
   099B DD 21 00 00        2691 	ld	ix,#0
   099F DD 39              2692 	add	ix,sp
                           2693 ;demo.c:289: if(debugprint == 1) {
   09A1 DD 7E 0C           2694 	ld	a,12 (ix)
   09A4 D6 01              2695 	sub	a,#0x01
   09A6 20 06              2696 	jr	NZ,00106$
   09A8 DD 7E 0D           2697 	ld	a,13 (ix)
   09AB B7                 2698 	or	a,a
   09AC 28 02              2699 	jr	Z,00107$
   09AE                    2700 00106$:
   09AE 18 1B              2701 	jr	00102$
   09B0                    2702 00107$:
                           2703 ;demo.c:290: puts("loading pckfile: ");
   09B0 21r12s0A           2704 	ld	hl,#__str_6
   09B3 E5                 2705 	push	hl
   09B4 CDr00s00           2706 	call	_puts
   09B7 F1                 2707 	pop	af
                           2708 ;demo.c:291: puts(file_name);
   09B8 DD 6E 04           2709 	ld	l,4 (ix)
   09BB DD 66 05           2710 	ld	h,5 (ix)
   09BE E5                 2711 	push	hl
   09BF CDr00s00           2712 	call	_puts
   09C2 F1                 2713 	pop	af
                           2714 ;demo.c:292: puts("\r\n");
   09C3 21r24s0A           2715 	ld	hl,#__str_7
   09C6 E5                 2716 	push	hl
   09C7 CDr00s00           2717 	call	_puts
   09CA F1                 2718 	pop	af
   09CB                    2719 00102$:
                           2720 ;demo.c:294: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2721 	ld	c,6 (ix)
   09CE DD 46 07           2722 	ld	b,7 (ix)
   09D1 C5                 2723 	push	bc
   09D2 C5                 2724 	push	bc
   09D3 3E 00              2725 	ld	a,#0x00
   09D5 F5                 2726 	push	af
   09D6 33                 2727 	inc	sp
   09D7 21r60s01           2728 	ld	hl,#_packbuffer
   09DA E5                 2729 	push	hl
   09DB CDr00s00           2730 	call	_memset
   09DE F1                 2731 	pop	af
   09DF F1                 2732 	pop	af
   09E0 33                 2733 	inc	sp
   09E1 C1                 2734 	pop	bc
                           2735 ;demo.c:295: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2736 	ld	hl,#0x0000
   09E5 E5                 2737 	push	hl
   09E6 21r60s01           2738 	ld	hl,#_packbuffer
   09E9 E5                 2739 	push	hl
   09EA C5                 2740 	push	bc
   09EB DD 6E 04           2741 	ld	l,4 (ix)
   09EE DD 66 05           2742 	ld	h,5 (ix)
   09F1 E5                 2743 	push	hl
   09F2 CDr96s08           2744 	call	_raw_load
   09F5 F1                 2745 	pop	af
   09F6 F1                 2746 	pop	af
   09F7 F1                 2747 	pop	af
   09F8 F1                 2748 	pop	af
                           2749 ;demo.c:296: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2750 	ld	a,10 (ix)
   09FC F5                 2751 	push	af
   09FD 33                 2752 	inc	sp
   09FE DD 6E 08           2753 	ld	l,8 (ix)
   0A01 DD 66 09           2754 	ld	h,9 (ix)
   0A04 E5                 2755 	push	hl
   0A05 21r60s01           2756 	ld	hl,#_packbuffer
   0A08 E5                 2757 	push	hl
   0A09 CDr00s00           2758 	call	_bitbuster
   0A0C F1                 2759 	pop	af
   0A0D F1                 2760 	pop	af
   0A0E 33                 2761 	inc	sp
   0A0F DD E1              2762 	pop	ix
   0A11 C9                 2763 	ret
   0A12                    2764 _pck_load_end::
   0A12                    2765 __str_6:
   0A12 6C 6F 61 64 69 6E  2766 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2767 	.db 0x00
   0A24                    2768 __str_7:
   0A24 0D                 2769 	.db 0x0D
   0A25 0A                 2770 	.db 0x0A
   0A26 00                 2771 	.db 0x00
                           2772 ;demo.c:299: void fadein() {
                           2773 ;	---------------------------------
                           2774 ; Function fadein
                           2775 ; ---------------------------------
   0A27                    2776 _fadein_start::
   0A27                    2777 _fadein:
   0A27 DD E5              2778 	push	ix
   0A29 DD 21 00 00        2779 	ld	ix,#0
   0A2D DD 39              2780 	add	ix,sp
   0A2F F5                 2781 	push	af
                           2782 ;demo.c:302: if (tick < 8) return;
   0A30 3Ar02s41           2783 	ld	a,(#_tick+0)
   0A33 D6 08              2784 	sub	a,#0x08
   0A35 3Ar03s41           2785 	ld	a,(#_tick+1)
   0A38 DE 00              2786 	sbc	a,#0x00
   0A3A F2r40s0A           2787 	jp	P,00102$
   0A3D C3rEEs0A           2788 	jp	00113$
   0A40                    2789 00102$:
                           2790 ;demo.c:304: tick = 0;
   0A40 21r02s41           2791 	ld	hl,#_tick + 0
   0A43 36 00              2792 	ld	(hl), #0x00
   0A45 21r03s41           2793 	ld	hl,#_tick + 1
   0A48 36 00              2794 	ld	(hl), #0x00
                           2795 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2796 	ld	c,#0x00
   0A4C                    2797 00109$:
   0A4C 79                 2798 	ld	a,c
   0A4D D6 20              2799 	sub	a,#0x20
   0A4F D2rE6s0A           2800 	jp	NC,00112$
                           2801 ;demo.c:307: uint8_t r = scratch[i] >> 4;
   0A52 3ErE0              2802 	ld	a,#<_scratch
   0A54 81                 2803 	add	a,c
   0A55 5F                 2804 	ld	e,a
   0A56 3Es3F              2805 	ld	a,#>_scratch
   0A58 CE 00              2806 	adc	a,#0x00
   0A5A 57                 2807 	ld	d,a
   0A5B 1A                 2808 	ld	a,(de)
   0A5C 47                 2809 	ld	b,a
   0A5D 58                 2810 	ld	e,b
   0A5E CB 3B              2811 	srl	e
   0A60 CB 3B              2812 	srl	e
   0A62 CB 3B              2813 	srl	e
   0A64 CB 3B              2814 	srl	e
                           2815 ;demo.c:308: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2816 	ld	a,b
   0A67 E6 0F              2817 	and	a,#0x0F
   0A69 DD 77 FF           2818 	ld	-1 (ix),a
                           2819 ;demo.c:309: uint8_t g = scratch[i+1];
   0A6C 51                 2820 	ld	d,c
   0A6D 14                 2821 	inc	d
   0A6E 3ErE0              2822 	ld	a,#<_scratch
   0A70 82                 2823 	add	a,d
   0A71 6F                 2824 	ld	l,a
   0A72 3Es3F              2825 	ld	a,#>_scratch
   0A74 CE 00              2826 	adc	a,#0x00
   0A76 67                 2827 	ld	h,a
   0A77 56                 2828 	ld	d,(hl)
   0A78 DD 72 FE           2829 	ld	-2 (ix),d
                           2830 ;demo.c:311: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3Er60              2831 	ld	a,#<_cur_palette
   0A7D 81                 2832 	add	a,c
   0A7E 6F                 2833 	ld	l,a
   0A7F 3Es40              2834 	ld	a,#>_cur_palette
   0A81 CE 00              2835 	adc	a,#0x00
   0A83 67                 2836 	ld	h,a
   0A84 56                 2837 	ld	d,(hl)
   0A85 CB 3A              2838 	srl	d
   0A87 CB 3A              2839 	srl	d
   0A89 CB 3A              2840 	srl	d
   0A8B CB 3A              2841 	srl	d
   0A8D 7B                 2842 	ld	a,e
   0A8E 92                 2843 	sub	a,d
   0A8F 30 01              2844 	jr	NC,00104$
   0A91 1C                 2845 	inc	e
   0A92                    2846 00104$:
                           2847 ;demo.c:312: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3Er60              2848 	ld	a,#<_cur_palette
   0A94 81                 2849 	add	a,c
   0A95 6F                 2850 	ld	l,a
   0A96 3Es40              2851 	ld	a,#>_cur_palette
   0A98 CE 00              2852 	adc	a,#0x00
   0A9A 67                 2853 	ld	h,a
   0A9B 7E                 2854 	ld	a,(hl)
   0A9C E6 0F              2855 	and	a,#0x0F
   0A9E 47                 2856 	ld	b,a
   0A9F DD 7E FF           2857 	ld	a,-1 (ix)
   0AA2 90                 2858 	sub	a,b
   0AA3 30 03              2859 	jr	NC,00106$
   0AA5 DD 34 FF           2860 	inc	-1 (ix)
   0AA8                    2861 00106$:
                           2862 ;demo.c:314: scratch[i] = (r << 4) | b;
   0AA8 3ErE0              2863 	ld	a,#<_scratch
   0AAA 81                 2864 	add	a,c
   0AAB 47                 2865 	ld	b,a
   0AAC 3Es3F              2866 	ld	a,#>_scratch
   0AAE CE 00              2867 	adc	a,#0x00
   0AB0 57                 2868 	ld	d,a
   0AB1 7B                 2869 	ld	a,e
   0AB2 07                 2870 	rlca
   0AB3 07                 2871 	rlca
   0AB4 07                 2872 	rlca
   0AB5 07                 2873 	rlca
   0AB6 E6 F0              2874 	and	a,#0xF0
   0AB8 DD B6 FF           2875 	or	a,-1 (ix)
   0ABB 68                 2876 	ld	l,b
   0ABC 62                 2877 	ld	h,d
   0ABD 77                 2878 	ld	(hl),a
                           2879 ;demo.c:315: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2880 	ld	b,c
   0ABF 04                 2881 	inc	b
   0AC0 3Er60              2882 	ld	a,#<_cur_palette
   0AC2 80                 2883 	add	a,b
   0AC3 5F                 2884 	ld	e,a
   0AC4 3Es40              2885 	ld	a,#>_cur_palette
   0AC6 CE 00              2886 	adc	a,#0x00
   0AC8 57                 2887 	ld	d,a
   0AC9 1A                 2888 	ld	a,(de)
   0ACA 5F                 2889 	ld	e,a
   0ACB DD 7E FE           2890 	ld	a,-2 (ix)
   0ACE 93                 2891 	sub	a,e
   0ACF 30 10              2892 	jr	NC,00111$
   0AD1 3ErE0              2893 	ld	a,#<_scratch
   0AD3 80                 2894 	add	a,b
   0AD4 47                 2895 	ld	b,a
   0AD5 3Es3F              2896 	ld	a,#>_scratch
   0AD7 CE 00              2897 	adc	a,#0x00
   0AD9 5F                 2898 	ld	e,a
   0ADA 68                 2899 	ld	l,b
   0ADB 67                 2900 	ld	h,a
   0ADC 7E                 2901 	ld	a,(hl)
   0ADD 3C                 2902 	inc	a
   0ADE 68                 2903 	ld	l,b
   0ADF 63                 2904 	ld	h,e
   0AE0 77                 2905 	ld	(hl),a
   0AE1                    2906 00111$:
                           2907 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2908 	inc	c
   0AE2 0C                 2909 	inc	c
   0AE3 C3r4Cs0A           2910 	jp	00109$
   0AE6                    2911 00112$:
                           2912 ;demo.c:319: vdp_load_palette(scratch);
   0AE6 21rE0s3F           2913 	ld	hl,#_scratch
   0AE9 E5                 2914 	push	hl
   0AEA CDr00s00           2915 	call	_vdp_load_palette
   0AED F1                 2916 	pop	af
   0AEE                    2917 00113$:
   0AEE DD F9              2918 	ld	sp,ix
   0AF0 DD E1              2919 	pop	ix
   0AF2 C9                 2920 	ret
   0AF3                    2921 _fadein_end::
                           2922 ;demo.c:331: void do_ymmm() {
                           2923 ;	---------------------------------
                           2924 ; Function do_ymmm
                           2925 ; ---------------------------------
   0AF3                    2926 _do_ymmm_start::
   0AF3                    2927 _do_ymmm:
   0AF3 DD E5              2928 	push	ix
   0AF5 DD 21 00 00        2929 	ld	ix,#0
   0AF9 DD 39              2930 	add	ix,sp
   0AFB F5                 2931 	push	af
                           2932 ;demo.c:335: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              2933 	ld	a,#0x20
   0AFE FD 21r02s41        2934 	ld	iy,#_tick
   0B02 FD 96 00           2935 	sub	a,0 (iy)
   0B05 3E 00              2936 	ld	a,#0x00
   0B07 FD 21r02s41        2937 	ld	iy,#_tick
   0B0B FD 9E 01           2938 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           2939 	jp	P,00102$
   0B11 21r02s41           2940 	ld	hl,#_tick + 0
   0B14 36 00              2941 	ld	(hl), #0x00
   0B16 21r03s41           2942 	ld	hl,#_tick + 1
   0B19 36 00              2943 	ld	(hl), #0x00
   0B1B FD 21r1Ds41        2944 	ld	iy,#_flipper
   0B1F FD 34 00           2945 	inc	0 (iy)
   0B22 20 07              2946 	jr	NZ,00115$
   0B24 FD 21r1Ds41        2947 	ld	iy,#_flipper
   0B28 FD 34 01           2948 	inc	1 (iy)
   0B2B                    2949 00115$:
   0B2B                    2950 00102$:
                           2951 ;demo.c:336: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              2952 	ld	a,#0x0A
   0B2D FD 21r1Ds41        2953 	ld	iy,#_flipper
   0B31 FD 96 00           2954 	sub	a,0 (iy)
   0B34 3E 00              2955 	ld	a,#0x00
   0B36 FD 21r1Ds41        2956 	ld	iy,#_flipper
   0B3A FD 9E 01           2957 	sbc	a,1 (iy)
   0B3D F2r4As0B           2958 	jp	P,00104$
   0B40 21r1Ds41           2959 	ld	hl,#_flipper + 0
   0B43 36 00              2960 	ld	(hl), #0x00
   0B45 21r1Es41           2961 	ld	hl,#_flipper + 1
   0B48 36 00              2962 	ld	(hl), #0x00
   0B4A                    2963 00104$:
                           2964 ;demo.c:338: ymmmf++;
   0B4A FD 21r1Fs41        2965 	ld	iy,#_ymmmf
   0B4E FD 34 00           2966 	inc	0 (iy)
   0B51 20 07              2967 	jr	NZ,00116$
   0B53 FD 21r1Fs41        2968 	ld	iy,#_ymmmf
   0B57 FD 34 01           2969 	inc	1 (iy)
   0B5A                    2970 00116$:
                           2971 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r1Bs41           2972 	ld	hl,#_yofff + 0
   0B5D 36 00              2973 	ld	(hl), #0x00
   0B5F                    2974 00105$:
   0B5F 21r1Bs41           2975 	ld	hl,#_yofff + 0
   0B62 4E                 2976 	ld	c,(hl)
   0B63 06 00              2977 	ld	b,#0x00
   0B65 79                 2978 	ld	a,c
   0B66 D6 D2              2979 	sub	a,#0xD2
   0B68 78                 2980 	ld	a,b
   0B69 DE 00              2981 	sbc	a,#0x00
   0B6B F2rE4s0B           2982 	jp	P,00109$
                           2983 ;demo.c:340: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r1Fs41           2984 	ld	hl,#_ymmmf
   0B71 79                 2985 	ld	a,c
   0B72 86                 2986 	add	a,(hl)
   0B73 5F                 2987 	ld	e,a
   0B74 78                 2988 	ld	a,b
   0B75 23                 2989 	inc	hl
   0B76 8E                 2990 	adc	a,(hl)
   0B77 16 00              2991 	ld	d,#0x00
   0B79 CB 23              2992 	sla	e
   0B7B CB 12              2993 	rl	d
   0B7D 21r2Cs00           2994 	ld	hl,#_sintabx
   0B80 19                 2995 	add	hl,de
   0B81 5E                 2996 	ld	e,(hl)
   0B82 23                 2997 	inc	hl
   0B83 56                 2998 	ld	d,(hl)
   0B84 DD 73 FE           2999 	ld	-2 (ix),e
   0B87 DD 72 FF           3000 	ld	-1 (ix),d
                           3001 ;demo.c:343: cmd.source_x = 0;
   0B8A 21r04s41           3002 	ld	hl,#_cmd
   0B8D 36 00              3003 	ld	(hl),#0x00
   0B8F 23                 3004 	inc	hl
   0B90 36 00              3005 	ld	(hl),#0x00
                           3006 ;demo.c:344: cmd.source_y = 0+yofff;
   0B92 11r06s41           3007 	ld	de,#_cmd + 2
   0B95 EB                 3008 	ex	de,hl
   0B96 71                 3009 	ld	(hl),c
   0B97 23                 3010 	inc	hl
   0B98 70                 3011 	ld	(hl),b
                           3012 ;demo.c:345: cmd.dest_x = xo;
   0B99 11r08s41           3013 	ld	de,#_cmd + 4
   0B9C EB                 3014 	ex	de,hl
   0B9D DD 7E FE           3015 	ld	a,-2 (ix)
   0BA0 77                 3016 	ld	(hl),a
   0BA1 23                 3017 	inc	hl
   0BA2 DD 7E FF           3018 	ld	a,-1 (ix)
   0BA5 77                 3019 	ld	(hl),a
                           3020 ;demo.c:346: cmd.dest_y = 3+yofff;
   0BA6 11r0As41           3021 	ld	de,#_cmd + 6
   0BA9 03                 3022 	inc	bc
   0BAA 03                 3023 	inc	bc
   0BAB 03                 3024 	inc	bc
   0BAC 6B                 3025 	ld	l,e
   0BAD 62                 3026 	ld	h,d
   0BAE 71                 3027 	ld	(hl),c
   0BAF 23                 3028 	inc	hl
   0BB0 70                 3029 	ld	(hl),b
                           3030 ;demo.c:347: cmd.size_x = 256;
   0BB1 21r0Cs41           3031 	ld	hl, #_cmd + 8
   0BB4 36 00              3032 	ld	(hl),#0x00
   0BB6 23                 3033 	inc	hl
   0BB7 36 01              3034 	ld	(hl),#0x01
                           3035 ;demo.c:348: cmd.size_y = 1;
   0BB9 21r0Es41           3036 	ld	hl, #_cmd + 10
   0BBC 36 01              3037 	ld	(hl),#0x01
   0BBE 23                 3038 	inc	hl
   0BBF 36 00              3039 	ld	(hl),#0x00
                           3040 ;demo.c:349: cmd.data = 0;
                           3041 ;demo.c:350: cmd.argument = 0;
   0BC1 3E 00              3042 	ld	a,#0x00
   0BC3 32r10s41           3043 	ld	(#_cmd + 12),a
   0BC6 32r11s41           3044 	ld	(#_cmd + 13),a
                           3045 ;demo.c:351: cmd.command = 0xD0;
   0BC9 3E D0              3046 	ld	a,#0xD0
   0BCB 32r12s41           3047 	ld	(#_cmd + 14),a
                           3048 ;demo.c:354: vdp_copier(&cmd);
   0BCE 21r04s41           3049 	ld	hl,#_cmd
   0BD1 E5                 3050 	push	hl
   0BD2 CDr00s00           3051 	call	_vdp_copier
   0BD5 F1                 3052 	pop	af
                           3053 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r1Bs41           3054 	ld	hl,#_yofff + 0
   0BD9 4E                 3055 	ld	c,(hl)
   0BDA 21r1Bs41           3056 	ld	hl,#_yofff
   0BDD 79                 3057 	ld	a,c
   0BDE C6 02              3058 	add	a,#0x02
   0BE0 77                 3059 	ld	(hl),a
   0BE1 C3r5Fs0B           3060 	jp	00105$
   0BE4                    3061 00109$:
   0BE4 DD F9              3062 	ld	sp,ix
   0BE6 DD E1              3063 	pop	ix
   0BE8 C9                 3064 	ret
   0BE9                    3065 _do_ymmm_end::
                           3066 ;demo.c:371: void do_blocks() {
                           3067 ;	---------------------------------
                           3068 ; Function do_blocks
                           3069 ; ---------------------------------
   0BE9                    3070 _do_blocks_start::
   0BE9                    3071 _do_blocks:
   0BE9 DD E5              3072 	push	ix
   0BEB DD 21 00 00        3073 	ld	ix,#0
   0BEF DD 39              3074 	add	ix,sp
   0BF1 21 FA FF           3075 	ld	hl,#-6
   0BF4 39                 3076 	add	hl,sp
   0BF5 F9                 3077 	ld	sp,hl
                           3078 ;demo.c:373: int ys = 0;
   0BF6 DD 36 FC 00        3079 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3080 	ld	-3 (ix),#0x00
                           3081 ;demo.c:374: int ye = 0;
   0BFE DD 36 FA 00        3082 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3083 	ld	-5 (ix),#0x00
                           3084 ;demo.c:376: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3085 	ld	hl,#0x0017
   0C09 E5                 3086 	push	hl
   0C0A CDr00s00           3087 	call	_vdp_register
   0C0D F1                 3088 	pop	af
                           3089 ;demo.c:378: if (block_init == 0) {
   0C0E AF                 3090 	xor	a,a
   0C0F FD 21r21s41        3091 	ld	iy,#_block_init
   0C13 FD B6 00           3092 	or	a,0 (iy)
   0C16 C2r7Es0C           3093 	jp	NZ,00108$
                           3094 ;demo.c:380: vdp_set_screen5();
   0C19 CDr00s00           3095 	call	_vdp_set_screen5
                           3096 ;demo.c:382: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3097 	ld	hl,#0x5F02
   0C1F E5                 3098 	push	hl
   0C20 CDr00s00           3099 	call	_vdp_register
   0C23 F1                 3100 	pop	af
                           3101 ;demo.c:384: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3102 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3103 	ld	-1 (ix),#0x00
   0C2C                    3104 00110$:
   0C2C DD 7E FE           3105 	ld	a,-2 (ix)
   0C2F D6 10              3106 	sub	a,#0x10
   0C31 DD 7E FF           3107 	ld	a,-1 (ix)
   0C34 DE 00              3108 	sbc	a,#0x00
   0C36 F2r6Es0C           3109 	jp	P,00113$
   0C39 DD 4E FE           3110 	ld	c,-2 (ix)
   0C3C DD 46 FF           3111 	ld	b,-1 (ix)
   0C3F CB 21              3112 	sla	c
   0C41 CB 10              3113 	rl	b
   0C43 21r2As41           3114 	ld	hl,#_btab
   0C46 09                 3115 	add	hl,bc
   0C47 4D                 3116 	ld	c,l
   0C48 44                 3117 	ld	b,h
   0C49 DD 5E FE           3118 	ld	e,-2 (ix)
   0C4C DD 56 FF           3119 	ld	d,-1 (ix)
   0C4F CB 23              3120 	sla	e
   0C51 CB 12              3121 	rl	d
   0C53 CB 23              3122 	sla	e
   0C55 CB 12              3123 	rl	d
   0C57 CB 23              3124 	sla	e
   0C59 CB 12              3125 	rl	d
   0C5B CB 23              3126 	sla	e
   0C5D CB 12              3127 	rl	d
   0C5F 69                 3128 	ld	l,c
   0C60 60                 3129 	ld	h,b
   0C61 73                 3130 	ld	(hl),e
   0C62 23                 3131 	inc	hl
   0C63 72                 3132 	ld	(hl),d
   0C64 DD 34 FE           3133 	inc	-2 (ix)
   0C67 20 03              3134 	jr	NZ,00139$
   0C69 DD 34 FF           3135 	inc	-1 (ix)
   0C6C                    3136 00139$:
   0C6C 18 BE              3137 	jr	00110$
   0C6E                    3138 00113$:
                           3139 ;demo.c:385: vdp_load_palette(block_palette);
   0C6E 21r80s40           3140 	ld	hl,#_block_palette
   0C71 E5                 3141 	push	hl
   0C72 CDr00s00           3142 	call	_vdp_load_palette
   0C75 F1                 3143 	pop	af
                           3144 ;demo.c:387: block_init = 1;
   0C76 21r21s41           3145 	ld	hl,#_block_init + 0
   0C79 36 01              3146 	ld	(hl), #0x01
   0C7B C3r07s0E           3147 	jp	00122$
   0C7E                    3148 00108$:
                           3149 ;demo.c:391: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3Ar4As41           3150 	ld	a,(#_flof+0)
   0C81 FD 21r4As41        3151 	ld	iy,#_flof
   0C85 FD B6 01           3152 	or	a,1 (iy)
   0C88 20 10              3153 	jr	NZ,00102$
   0C8A DD 36 FC 00        3154 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3155 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3156 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3157 	ld	-5 (ix),#0x00
   0C9A                    3158 00102$:
                           3159 ;demo.c:392: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3Ar4As41           3160 	ld	a,(#_flof+0)
   0C9D D6 01              3161 	sub	a,#0x01
   0C9F 20 06              3162 	jr	NZ,00140$
   0CA1 3Ar4Bs41           3163 	ld	a,(#_flof+1)
   0CA4 B7                 3164 	or	a,a
   0CA5 28 02              3165 	jr	Z,00141$
   0CA7                    3166 00140$:
   0CA7 18 10              3167 	jr	00104$
   0CA9                    3168 00141$:
   0CA9 DD 36 FC 08        3169 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3170 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3171 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3172 	ld	-5 (ix),#0x00
   0CB9                    3173 00104$:
                           3174 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r28s41        3175 	ld	iy,#_bty
   0CBD FD 36 00 03        3176 	ld	0 (iy),#0x03
   0CC1 FD 21r28s41        3177 	ld	iy,#_bty
   0CC5 FD 36 01 00        3178 	ld	1 (iy),#0x00
   0CC9                    3179 00118$:
   0CC9 3Ar28s41           3180 	ld	a,(#_bty+0)
   0CCC D6 0B              3181 	sub	a,#0x0B
   0CCE 3Ar29s41           3182 	ld	a,(#_bty+1)
   0CD1 DE 00              3183 	sbc	a,#0x00
   0CD3 F2rDEs0D           3184 	jp	P,00121$
                           3185 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3186 	ld	a,-4 (ix)
   0CD9 FD 21r26s41        3187 	ld	iy,#_btx
   0CDD FD 77 00           3188 	ld	0 (iy),a
   0CE0 DD 7E FD           3189 	ld	a,-3 (ix)
   0CE3 FD 21r26s41        3190 	ld	iy,#_btx
   0CE7 FD 77 01           3191 	ld	1 (iy),a
   0CEA                    3192 00114$:
   0CEA 3Ar26s41           3193 	ld	a,(#_btx+0)
   0CED DD 96 FA           3194 	sub	a,-6 (ix)
   0CF0 3Ar27s41           3195 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3196 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3197 	jp	P,00120$
                           3198 ;demo.c:396: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3199 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3200 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3201 	and	a,0 (iy)
   0D03 21r00s00           3202 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3203 	or	a,(hl)
   0D07 4F                 3204 	ld	c,a
   0D08 CB 39              3205 	srl	c
   0D0A 21r22s41           3206 	ld	hl,#_bsx + 0
   0D0D 71                 3207 	ld	(hl), c
   0D0E 21r23s41           3208 	ld	hl,#_bsx + 1
   0D11 36 00              3209 	ld	(hl), #0x00
                           3210 ;demo.c:397: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3211 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r24s41           3212 	ld	hl,#_bsy + 0
   0D19 77                 3213 	ld	(hl), a
   0D1A 21r25s41           3214 	ld	hl,#_bsy + 1
   0D1D 36 00              3215 	ld	(hl), #0x00
                           3216 ;demo.c:398: cmd.source_x = btab[bsx];
   0D1F 21r22s41           3217 	ld	hl,#_bsx + 0
   0D22 4E                 3218 	ld	c,(hl)
   0D23 21r23s41           3219 	ld	hl,#_bsx + 1
   0D26 46                 3220 	ld	b,(hl)
   0D27 CB 21              3221 	sla	c
   0D29 CB 10              3222 	rl	b
   0D2B 21r2As41           3223 	ld	hl,#_btab
   0D2E 09                 3224 	add	hl,bc
   0D2F 4E                 3225 	ld	c,(hl)
   0D30 23                 3226 	inc	hl
   0D31 46                 3227 	ld	b,(hl)
   0D32 21r04s41           3228 	ld	hl,#_cmd
   0D35 71                 3229 	ld	(hl),c
   0D36 23                 3230 	inc	hl
   0D37 70                 3231 	ld	(hl),b
                           3232 ;demo.c:399: cmd.source_y = 768+btab[bsy];
   0D38 01r06s41           3233 	ld	bc,#_cmd + 2
   0D3B 21r24s41           3234 	ld	hl,#_bsy + 0
   0D3E 5E                 3235 	ld	e,(hl)
   0D3F 21r25s41           3236 	ld	hl,#_bsy + 1
   0D42 56                 3237 	ld	d,(hl)
   0D43 CB 23              3238 	sla	e
   0D45 CB 12              3239 	rl	d
   0D47 21r2As41           3240 	ld	hl,#_btab
   0D4A 19                 3241 	add	hl,de
   0D4B 5E                 3242 	ld	e,(hl)
   0D4C 23                 3243 	inc	hl
   0D4D 56                 3244 	ld	d,(hl)
   0D4E 21 00 03           3245 	ld	hl,#0x0300
   0D51 19                 3246 	add	hl,de
   0D52 EB                 3247 	ex	de,hl
   0D53 69                 3248 	ld	l,c
   0D54 60                 3249 	ld	h,b
   0D55 73                 3250 	ld	(hl),e
   0D56 23                 3251 	inc	hl
   0D57 72                 3252 	ld	(hl),d
                           3253 ;demo.c:400: cmd.dest_x = btab[btx];
   0D58 01r08s41           3254 	ld	bc,#_cmd + 4
   0D5B 21r26s41           3255 	ld	hl,#_btx + 0
   0D5E 5E                 3256 	ld	e,(hl)
   0D5F 21r27s41           3257 	ld	hl,#_btx + 1
   0D62 56                 3258 	ld	d,(hl)
   0D63 CB 23              3259 	sla	e
   0D65 CB 12              3260 	rl	d
   0D67 21r2As41           3261 	ld	hl,#_btab
   0D6A 19                 3262 	add	hl,de
   0D6B 5E                 3263 	ld	e,(hl)
   0D6C 23                 3264 	inc	hl
   0D6D 56                 3265 	ld	d,(hl)
   0D6E 69                 3266 	ld	l,c
   0D6F 60                 3267 	ld	h,b
   0D70 73                 3268 	ld	(hl),e
   0D71 23                 3269 	inc	hl
   0D72 72                 3270 	ld	(hl),d
                           3271 ;demo.c:401: cmd.dest_y = 512+btab[bty];
   0D73 01r0As41           3272 	ld	bc,#_cmd + 6
   0D76 21r28s41           3273 	ld	hl,#_bty + 0
   0D79 5E                 3274 	ld	e,(hl)
   0D7A 21r29s41           3275 	ld	hl,#_bty + 1
   0D7D 56                 3276 	ld	d,(hl)
   0D7E CB 23              3277 	sla	e
   0D80 CB 12              3278 	rl	d
   0D82 21r2As41           3279 	ld	hl,#_btab
   0D85 19                 3280 	add	hl,de
   0D86 5E                 3281 	ld	e,(hl)
   0D87 23                 3282 	inc	hl
   0D88 56                 3283 	ld	d,(hl)
   0D89 21 00 02           3284 	ld	hl,#0x0200
   0D8C 19                 3285 	add	hl,de
   0D8D EB                 3286 	ex	de,hl
   0D8E 69                 3287 	ld	l,c
   0D8F 60                 3288 	ld	h,b
   0D90 73                 3289 	ld	(hl),e
   0D91 23                 3290 	inc	hl
   0D92 72                 3291 	ld	(hl),d
                           3292 ;demo.c:402: cmd.size_x = 16;
   0D93 21r0Cs41           3293 	ld	hl, #_cmd + 8
   0D96 36 10              3294 	ld	(hl),#0x10
   0D98 23                 3295 	inc	hl
   0D99 36 00              3296 	ld	(hl),#0x00
                           3297 ;demo.c:403: cmd.size_y = 16;
   0D9B 21r0Es41           3298 	ld	hl, #_cmd + 10
   0D9E 36 10              3299 	ld	(hl),#0x10
   0DA0 23                 3300 	inc	hl
   0DA1 36 00              3301 	ld	(hl),#0x00
                           3302 ;demo.c:404: cmd.data = 0;
                           3303 ;demo.c:405: cmd.argument = 0x00;
   0DA3 3E 00              3304 	ld	a,#0x00
   0DA5 32r10s41           3305 	ld	(#_cmd + 12),a
   0DA8 32r11s41           3306 	ld	(#_cmd + 13),a
                           3307 ;demo.c:406: cmd.command = 0xD0;
   0DAB 3E D0              3308 	ld	a,#0xD0
   0DAD 32r12s41           3309 	ld	(#_cmd + 14),a
                           3310 ;demo.c:407: vdp_copier(&cmd);
   0DB0 21r04s41           3311 	ld	hl,#_cmd
   0DB3 E5                 3312 	push	hl
   0DB4 CDr00s00           3313 	call	_vdp_copier
   0DB7 F1                 3314 	pop	af
                           3315 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r26s41        3316 	ld	iy,#_btx
   0DBC FD 34 00           3317 	inc	0 (iy)
   0DBF 20 07              3318 	jr	NZ,00150$
   0DC1 FD 21r26s41        3319 	ld	iy,#_btx
   0DC5 FD 34 01           3320 	inc	1 (iy)
   0DC8                    3321 00150$:
   0DC8 C3rEAs0C           3322 	jp	00114$
   0DCB                    3323 00120$:
                           3324 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0DCB FD 21r28s41        3325 	ld	iy,#_bty
   0DCF FD 34 00           3326 	inc	0 (iy)
   0DD2 20 07              3327 	jr	NZ,00151$
   0DD4 FD 21r28s41        3328 	ld	iy,#_bty
   0DD8 FD 34 01           3329 	inc	1 (iy)
   0DDB                    3330 00151$:
   0DDB C3rC9s0C           3331 	jp	00118$
   0DDE                    3332 00121$:
                           3333 ;demo.c:411: flof++;
   0DDE FD 21r4As41        3334 	ld	iy,#_flof
   0DE2 FD 34 00           3335 	inc	0 (iy)
   0DE5 20 07              3336 	jr	NZ,00152$
   0DE7 FD 21r4As41        3337 	ld	iy,#_flof
   0DEB FD 34 01           3338 	inc	1 (iy)
   0DEE                    3339 00152$:
                           3340 ;demo.c:412: if (flof == 2) flof = 0;
   0DEE 3Ar4As41           3341 	ld	a,(#_flof+0)
   0DF1 D6 02              3342 	sub	a,#0x02
   0DF3 20 06              3343 	jr	NZ,00153$
   0DF5 3Ar4Bs41           3344 	ld	a,(#_flof+1)
   0DF8 B7                 3345 	or	a,a
   0DF9 28 02              3346 	jr	Z,00154$
   0DFB                    3347 00153$:
   0DFB 18 0A              3348 	jr	00122$
   0DFD                    3349 00154$:
   0DFD 21r4As41           3350 	ld	hl,#_flof + 0
   0E00 36 00              3351 	ld	(hl), #0x00
   0E02 21r4Bs41           3352 	ld	hl,#_flof + 1
   0E05 36 00              3353 	ld	(hl), #0x00
   0E07                    3354 00122$:
   0E07 DD F9              3355 	ld	sp,ix
   0E09 DD E1              3356 	pop	ix
   0E0B C9                 3357 	ret
   0E0C                    3358 _do_blocks_end::
                           3359 ;demo.c:420: void raster_effu() {
                           3360 ;	---------------------------------
                           3361 ; Function raster_effu
                           3362 ; ---------------------------------
   0E0C                    3363 _raster_effu_start::
   0E0C                    3364 _raster_effu:
                           3365 ;demo.c:421: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3366 	ld	hl,#0x0017
   0E0F E5                 3367 	push	hl
   0E10 CDr00s00           3368 	call	_vdp_register
   0E13 F1                 3369 	pop	af
                           3370 ;demo.c:422: waitVB();
   0E14 76                 3371 		halt 
                           3372 ;demo.c:424: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3373 	ld	hl,#0x4001
   0E18 E5                 3374 	push	hl
   0E19 CDr00s00           3375 	call	_vdp_register
                           3376 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3377 	ld	a,#0x28
   0E1E 32r4Cs41           3378 	ld	(#_linenum + 0),a
   0E21 F1                 3379 	pop	af
   0E22 FD 21r4Cs41        3380 	ld	iy,#_linenum
   0E26 FD 36 01 00        3381 	ld	1 (iy),#0x00
   0E2A                    3382 00101$:
   0E2A 3Ar4Cs41           3383 	ld	a,(#_linenum+0)
   0E2D D6 D4              3384 	sub	a,#0xD4
   0E2F 3Ar4Ds41           3385 	ld	a,(#_linenum+1)
   0E32 DE 00              3386 	sbc	a,#0x00
   0E34 F2r65s0E           3387 	jp	P,00104$
                           3388 ;demo.c:427: vdp_register(19,linenum); // interrupt on line
   0E37 3Ar4Cs41           3389 	ld	a,(#_linenum+0)
   0E3A F5                 3390 	push	af
   0E3B 33                 3391 	inc	sp
   0E3C 3E 13              3392 	ld	a,#0x13
   0E3E F5                 3393 	push	af
   0E3F 33                 3394 	inc	sp
   0E40 CDr00s00           3395 	call	_vdp_register
   0E43 F1                 3396 	pop	af
                           3397 ;demo.c:428: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3398 	ld	hl,#0x1600
   0E47 E5                 3399 	push	hl
   0E48 CDr00s00           3400 	call	_vdp_register
   0E4B F1                 3401 	pop	af
                           3402 ;demo.c:430: waitVB();
   0E4C 76                 3403 		halt 
                           3404 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21r4Cs41           3405 	ld	hl,#_linenum
   0E50 7E                 3406 	ld	a,(hl)
   0E51 C6 04              3407 	add	a,#0x04
   0E53 23                 3408 	inc	hl
   0E54 2B                 3409 	dec	hl
   0E55 C5                 3410 	push	bc
   0E56 4F                 3411 	ld	c, a
   0E57 23                 3412 	inc	hl
   0E58 7E                 3413 	ld	a, (hl)
   0E59 47                 3414 	ld	b, a
   0E5A 79                 3415 	ld	a, c
   0E5B 2B                 3416 	dec	hl
   0E5C 77                 3417 	ld	(hl), a
   0E5D 78                 3418 	ld	a, b
   0E5E C1                 3419 	pop	bc
   0E5F CE 00              3420 	adc	a,#0x00
   0E61 23                 3421 	inc	hl
   0E62 77                 3422 	ld	(hl),a
   0E63 18 C5              3423 	jr	00101$
   0E65                    3424 00104$:
                           3425 ;demo.c:433: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3426 	ld	hl,#0x0017
   0E68 E5                 3427 	push	hl
   0E69 CDr00s00           3428 	call	_vdp_register
   0E6C F1                 3429 	pop	af
                           3430 ;demo.c:447: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3431 	ld	hl,#0x0600
   0E70 E5                 3432 	push	hl
   0E71 CDr00s00           3433 	call	_vdp_register
   0E74 F1                 3434 	pop	af
                           3435 ;demo.c:448: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3436 	ld	hl,#0x6001
   0E78 E5                 3437 	push	hl
   0E79 CDr00s00           3438 	call	_vdp_register
   0E7C F1                 3439 	pop	af
   0E7D C9                 3440 	ret
   0E7E                    3441 _raster_effu_end::
                           3442 ;demo.c:479: void do_letter(char cc) {
                           3443 ;	---------------------------------
                           3444 ; Function do_letter
                           3445 ; ---------------------------------
   0E7E                    3446 _do_letter_start::
   0E7E                    3447 _do_letter:
   0E7E DD E5              3448 	push	ix
   0E80 DD 21 00 00        3449 	ld	ix,#0
   0E84 DD 39              3450 	add	ix,sp
   0E86 F5                 3451 	push	af
                           3452 ;demo.c:480: int cidx = cc - 65;
   0E87 DD 4E 04           3453 	ld	c,4 (ix)
   0E8A DD 7E 04           3454 	ld	a,4 (ix)
   0E8D 17                 3455 	rla	
   0E8E 9F                 3456 	sbc	a,a
   0E8F 47                 3457 	ld	b,a
   0E90 79                 3458 	ld	a,c
   0E91 C6 BF              3459 	add	a,#0xBF
   0E93 DD 77 FE           3460 	ld	-2 (ix),a
   0E96 78                 3461 	ld	a,b
   0E97 CE FF              3462 	adc	a,#0xFF
   0E99 DD 77 FF           3463 	ld	-1 (ix),a
                           3464 ;demo.c:481: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3465 	ld	a,#<_font_x
   0E9E DD 86 FE           3466 	add	a,-2 (ix)
   0EA1 5F                 3467 	ld	e,a
   0EA2 3Es0F              3468 	ld	a,#>_font_x
   0EA4 DD 8E FF           3469 	adc	a,-1 (ix)
   0EA7 57                 3470 	ld	d,a
   0EA8 1A                 3471 	ld	a,(de)
   0EA9 5F                 3472 	ld	e,a
   0EAA 16 00              3473 	ld	d,#0x00
   0EAC 21 7F 00           3474 	ld	hl,#0x007F
   0EAF 19                 3475 	add	hl,de
   0EB0 EB                 3476 	ex	de,hl
   0EB1 21r04s41           3477 	ld	hl,#_cmd
   0EB4 73                 3478 	ld	(hl),e
   0EB5 23                 3479 	inc	hl
   0EB6 72                 3480 	ld	(hl),d
                           3481 ;demo.c:482: cmd.source_y = 512+font_y[cidx];
   0EB7 11r06s41           3482 	ld	de,#_cmd + 2
   0EBA 3Er7C              3483 	ld	a,#<_font_y
   0EBC DD 86 FE           3484 	add	a,-2 (ix)
   0EBF 4F                 3485 	ld	c,a
   0EC0 3Es0F              3486 	ld	a,#>_font_y
   0EC2 DD 8E FF           3487 	adc	a,-1 (ix)
   0EC5 47                 3488 	ld	b,a
   0EC6 0A                 3489 	ld	a,(bc)
   0EC7 4F                 3490 	ld	c,a
   0EC8 06 00              3491 	ld	b,#0x00
   0ECA 21 00 02           3492 	ld	hl,#0x0200
   0ECD 09                 3493 	add	hl,bc
   0ECE 4D                 3494 	ld	c,l
   0ECF 44                 3495 	ld	b,h
   0ED0 EB                 3496 	ex	de,hl
   0ED1 71                 3497 	ld	(hl),c
   0ED2 23                 3498 	inc	hl
   0ED3 70                 3499 	ld	(hl),b
                           3500 ;demo.c:483: cmd.dest_x = lx;
   0ED4 01r08s41           3501 	ld	bc,#_cmd + 4
   0ED7 21r4Es41           3502 	ld	hl,#_lx + 0
   0EDA 5E                 3503 	ld	e,(hl)
   0EDB 16 00              3504 	ld	d,#0x00
   0EDD 69                 3505 	ld	l,c
   0EDE 60                 3506 	ld	h,b
   0EDF 73                 3507 	ld	(hl),e
   0EE0 23                 3508 	inc	hl
   0EE1 72                 3509 	ld	(hl),d
                           3510 ;demo.c:484: cmd.dest_y = ly;
   0EE2 01r0As41           3511 	ld	bc,#_cmd + 6
   0EE5 21r4Fs41           3512 	ld	hl,#_ly + 0
   0EE8 5E                 3513 	ld	e,(hl)
   0EE9 16 00              3514 	ld	d,#0x00
   0EEB 69                 3515 	ld	l,c
   0EEC 60                 3516 	ld	h,b
   0EED 73                 3517 	ld	(hl),e
   0EEE 23                 3518 	inc	hl
   0EEF 72                 3519 	ld	(hl),d
                           3520 ;demo.c:485: cmd.size_x = font_w[cidx];
   0EF0 01r0Cs41           3521 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3522 	ld	a,#<_font_w
   0EF5 DD 86 FE           3523 	add	a,-2 (ix)
   0EF8 5F                 3524 	ld	e,a
   0EF9 3Es0F              3525 	ld	a,#>_font_w
   0EFB DD 8E FF           3526 	adc	a,-1 (ix)
   0EFE 57                 3527 	ld	d,a
   0EFF 1A                 3528 	ld	a,(de)
   0F00 5F                 3529 	ld	e,a
   0F01 16 00              3530 	ld	d,#0x00
   0F03 69                 3531 	ld	l,c
   0F04 60                 3532 	ld	h,b
   0F05 73                 3533 	ld	(hl),e
   0F06 23                 3534 	inc	hl
   0F07 72                 3535 	ld	(hl),d
                           3536 ;demo.c:486: cmd.size_y = 8;
   0F08 21r0Es41           3537 	ld	hl, #_cmd + 10
   0F0B 36 08              3538 	ld	(hl),#0x08
   0F0D 23                 3539 	inc	hl
   0F0E 36 00              3540 	ld	(hl),#0x00
                           3541 ;demo.c:487: cmd.argument = 0x00;
   0F10 3E 00              3542 	ld	a,#0x00
   0F12 32r11s41           3543 	ld	(#_cmd + 13),a
                           3544 ;demo.c:488: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3545 	ld	a,#0x90
   0F17 32r12s41           3546 	ld	(#_cmd + 14),a
                           3547 ;demo.c:489: vdp_copier(&cmd);
   0F1A 21r04s41           3548 	ld	hl,#_cmd
   0F1D E5                 3549 	push	hl
   0F1E CDr00s00           3550 	call	_vdp_copier
   0F21 F1                 3551 	pop	af
                           3552 ;demo.c:490: lx+=font_w[cidx]-1;
   0F22 3ErBC              3553 	ld	a,#<_font_w
   0F24 DD 86 FE           3554 	add	a,-2 (ix)
   0F27 4F                 3555 	ld	c,a
   0F28 3Es0F              3556 	ld	a,#>_font_w
   0F2A DD 8E FF           3557 	adc	a,-1 (ix)
   0F2D 47                 3558 	ld	b,a
   0F2E 0A                 3559 	ld	a,(bc)
   0F2F 4F                 3560 	ld	c,a
   0F30 0D                 3561 	dec	c
   0F31 21r4Es41           3562 	ld	hl,#_lx
   0F34 7E                 3563 	ld	a,(hl)
   0F35 81                 3564 	add	a,c
   0F36 77                 3565 	ld	(hl),a
   0F37 DD F9              3566 	ld	sp,ix
   0F39 DD E1              3567 	pop	ix
   0F3B C9                 3568 	ret
   0F3C                    3569 _do_letter_end::
   0F3C                    3570 _font_x:
   0F3C 01                 3571 	.db #0x01
   0F3D 09                 3572 	.db #0x09
   0F3E 11                 3573 	.db #0x11
   0F3F 19                 3574 	.db #0x19
   0F40 21                 3575 	.db #0x21
   0F41 29                 3576 	.db #0x29
   0F42 31                 3577 	.db #0x31
   0F43 39                 3578 	.db #0x39
   0F44 41                 3579 	.db #0x41
   0F45 46                 3580 	.db #0x46
   0F46 4E                 3581 	.db #0x4E
   0F47 56                 3582 	.db #0x56
   0F48 5E                 3583 	.db #0x5E
   0F49 01                 3584 	.db #0x01
   0F4A 0A                 3585 	.db #0x0A
   0F4B 12                 3586 	.db #0x12
   0F4C 1A                 3587 	.db #0x1A
   0F4D 23                 3588 	.db #0x23
   0F4E 2B                 3589 	.db #0x2B
   0F4F 33                 3590 	.db #0x33
   0F50 3C                 3591 	.db #0x3C
   0F51 44                 3592 	.db #0x44
   0F52 4C                 3593 	.db #0x4C
   0F53 56                 3594 	.db #0x56
   0F54 5E                 3595 	.db #0x5E
   0F55 67                 3596 	.db #0x67
   0F56 00                 3597 	.db #0x00
   0F57 00                 3598 	.db #0x00
   0F58 00                 3599 	.db #0x00
   0F59 00                 3600 	.db #0x00
   0F5A 00                 3601 	.db #0x00
   0F5B 00                 3602 	.db #0x00
   0F5C 01                 3603 	.db #0x01
   0F5D 09                 3604 	.db #0x09
   0F5E 11                 3605 	.db #0x11
   0F5F 18                 3606 	.db #0x18
   0F60 20                 3607 	.db #0x20
   0F61 28                 3608 	.db #0x28
   0F62 2F                 3609 	.db #0x2F
   0F63 37                 3610 	.db #0x37
   0F64 3F                 3611 	.db #0x3F
   0F65 45                 3612 	.db #0x45
   0F66 4C                 3613 	.db #0x4C
   0F67 54                 3614 	.db #0x54
   0F68 5A                 3615 	.db #0x5A
   0F69 64                 3616 	.db #0x64
   0F6A 01                 3617 	.db #0x01
   0F6B 09                 3618 	.db #0x09
   0F6C 11                 3619 	.db #0x11
   0F6D 19                 3620 	.db #0x19
   0F6E 21                 3621 	.db #0x21
   0F6F 29                 3622 	.db #0x29
   0F70 30                 3623 	.db #0x30
   0F71 38                 3624 	.db #0x38
   0F72 40                 3625 	.db #0x40
   0F73 4A                 3626 	.db #0x4A
   0F74 52                 3627 	.db #0x52
   0F75 5A                 3628 	.db #0x5A
   0F76 00                 3629 	.db 0x00
   0F77 00                 3630 	.db 0x00
   0F78 00                 3631 	.db 0x00
   0F79 00                 3632 	.db 0x00
   0F7A 00                 3633 	.db 0x00
   0F7B 00                 3634 	.db 0x00
   0F7C                    3635 _font_y:
   0F7C 1C                 3636 	.db #0x1C
   0F7D 1C                 3637 	.db #0x1C
   0F7E 1C                 3638 	.db #0x1C
   0F7F 1C                 3639 	.db #0x1C
   0F80 1C                 3640 	.db #0x1C
   0F81 1C                 3641 	.db #0x1C
   0F82 1C                 3642 	.db #0x1C
   0F83 1C                 3643 	.db #0x1C
   0F84 1C                 3644 	.db #0x1C
   0F85 1C                 3645 	.db #0x1C
   0F86 1C                 3646 	.db #0x1C
   0F87 1C                 3647 	.db #0x1C
   0F88 1C                 3648 	.db #0x1C
   0F89 25                 3649 	.db #0x25
   0F8A 25                 3650 	.db #0x25
   0F8B 25                 3651 	.db #0x25
   0F8C 25                 3652 	.db #0x25
   0F8D 25                 3653 	.db #0x25
   0F8E 25                 3654 	.db #0x25
   0F8F 25                 3655 	.db #0x25
   0F90 25                 3656 	.db #0x25
   0F91 25                 3657 	.db #0x25
   0F92 25                 3658 	.db #0x25
   0F93 25                 3659 	.db #0x25
   0F94 25                 3660 	.db #0x25
   0F95 25                 3661 	.db #0x25
   0F96 00                 3662 	.db #0x00
   0F97 00                 3663 	.db #0x00
   0F98 00                 3664 	.db #0x00
   0F99 00                 3665 	.db #0x00
   0F9A 00                 3666 	.db #0x00
   0F9B 00                 3667 	.db #0x00
   0F9C 37                 3668 	.db #0x37
   0F9D 37                 3669 	.db #0x37
   0F9E 37                 3670 	.db #0x37
   0F9F 37                 3671 	.db #0x37
   0FA0 37                 3672 	.db #0x37
   0FA1 37                 3673 	.db #0x37
   0FA2 37                 3674 	.db #0x37
   0FA3 37                 3675 	.db #0x37
   0FA4 37                 3676 	.db #0x37
   0FA5 37                 3677 	.db #0x37
   0FA6 37                 3678 	.db #0x37
   0FA7 37                 3679 	.db #0x37
   0FA8 37                 3680 	.db #0x37
   0FA9 37                 3681 	.db #0x37
   0FAA 40                 3682 	.db #0x40
   0FAB 40                 3683 	.db #0x40
   0FAC 40                 3684 	.db #0x40
   0FAD 40                 3685 	.db #0x40
   0FAE 40                 3686 	.db #0x40
   0FAF 40                 3687 	.db #0x40
   0FB0 40                 3688 	.db #0x40
   0FB1 40                 3689 	.db #0x40
   0FB2 40                 3690 	.db #0x40
   0FB3 40                 3691 	.db #0x40
   0FB4 40                 3692 	.db #0x40
   0FB5 40                 3693 	.db #0x40
   0FB6 00                 3694 	.db 0x00
   0FB7 00                 3695 	.db 0x00
   0FB8 00                 3696 	.db 0x00
   0FB9 00                 3697 	.db 0x00
   0FBA 00                 3698 	.db 0x00
   0FBB 00                 3699 	.db 0x00
   0FBC                    3700 _font_w:
   0FBC 07                 3701 	.db #0x07
   0FBD 07                 3702 	.db #0x07
   0FBE 07                 3703 	.db #0x07
   0FBF 07                 3704 	.db #0x07
   0FC0 07                 3705 	.db #0x07
   0FC1 07                 3706 	.db #0x07
   0FC2 07                 3707 	.db #0x07
   0FC3 07                 3708 	.db #0x07
   0FC4 04                 3709 	.db #0x04
   0FC5 07                 3710 	.db #0x07
   0FC6 07                 3711 	.db #0x07
   0FC7 07                 3712 	.db #0x07
   0FC8 09                 3713 	.db #0x09
   0FC9 08                 3714 	.db #0x08
   0FCA 07                 3715 	.db #0x07
   0FCB 07                 3716 	.db #0x07
   0FCC 08                 3717 	.db #0x08
   0FCD 07                 3718 	.db #0x07
   0FCE 07                 3719 	.db #0x07
   0FCF 08                 3720 	.db #0x08
   0FD0 07                 3721 	.db #0x07
   0FD1 07                 3722 	.db #0x07
   0FD2 09                 3723 	.db #0x09
   0FD3 07                 3724 	.db #0x07
   0FD4 08                 3725 	.db #0x08
   0FD5 07                 3726 	.db #0x07
   0FD6 00                 3727 	.db #0x00
   0FD7 00                 3728 	.db #0x00
   0FD8 00                 3729 	.db #0x00
   0FD9 00                 3730 	.db #0x00
   0FDA 00                 3731 	.db #0x00
   0FDB 00                 3732 	.db #0x00
   0FDC 07                 3733 	.db #0x07
   0FDD 07                 3734 	.db #0x07
   0FDE 06                 3735 	.db #0x06
   0FDF 07                 3736 	.db #0x07
   0FE0 07                 3737 	.db #0x07
   0FE1 07                 3738 	.db #0x07
   0FE2 07                 3739 	.db #0x07
   0FE3 07                 3740 	.db #0x07
   0FE4 05                 3741 	.db #0x05
   0FE5 06                 3742 	.db #0x06
   0FE6 07                 3743 	.db #0x07
   0FE7 05                 3744 	.db #0x05
   0FE8 09                 3745 	.db #0x09
   0FE9 07                 3746 	.db #0x07
   0FEA 07                 3747 	.db #0x07
   0FEB 07                 3748 	.db #0x07
   0FEC 07                 3749 	.db #0x07
   0FED 07                 3750 	.db #0x07
   0FEE 07                 3751 	.db #0x07
   0FEF 06                 3752 	.db #0x06
   0FF0 07                 3753 	.db #0x07
   0FF1 07                 3754 	.db #0x07
   0FF2 09                 3755 	.db #0x09
   0FF3 07                 3756 	.db #0x07
   0FF4 07                 3757 	.db #0x07
   0FF5 07                 3758 	.db #0x07
   0FF6 00                 3759 	.db 0x00
   0FF7 00                 3760 	.db 0x00
   0FF8 00                 3761 	.db 0x00
   0FF9 00                 3762 	.db 0x00
   0FFA 00                 3763 	.db 0x00
   0FFB 00                 3764 	.db 0x00
                           3765 ;demo.c:494: void do_letter_tall(char cc) {
                           3766 ;	---------------------------------
                           3767 ; Function do_letter_tall
                           3768 ; ---------------------------------
   0FFC                    3769 _do_letter_tall_start::
   0FFC                    3770 _do_letter_tall:
   0FFC DD E5              3771 	push	ix
   0FFE DD 21 00 00        3772 	ld	ix,#0
   1002 DD 39              3773 	add	ix,sp
   1004 F5                 3774 	push	af
                           3775 ;demo.c:495: int cidx = cc - 65;
   1005 DD 4E 04           3776 	ld	c,4 (ix)
   1008 DD 7E 04           3777 	ld	a,4 (ix)
   100B 17                 3778 	rla	
   100C 9F                 3779 	sbc	a,a
   100D 47                 3780 	ld	b,a
   100E 79                 3781 	ld	a,c
   100F C6 BF              3782 	add	a,#0xBF
   1011 DD 77 FE           3783 	ld	-2 (ix),a
   1014 78                 3784 	ld	a,b
   1015 CE FF              3785 	adc	a,#0xFF
   1017 DD 77 FF           3786 	ld	-1 (ix),a
                           3787 ;demo.c:496: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3788 	ld	a,#<_font_x
   101C DD 86 FE           3789 	add	a,-2 (ix)
   101F 5F                 3790 	ld	e,a
   1020 3Es0F              3791 	ld	a,#>_font_x
   1022 DD 8E FF           3792 	adc	a,-1 (ix)
   1025 57                 3793 	ld	d,a
   1026 1A                 3794 	ld	a,(de)
   1027 5F                 3795 	ld	e,a
   1028 16 00              3796 	ld	d,#0x00
   102A 21 7F 00           3797 	ld	hl,#0x007F
   102D 19                 3798 	add	hl,de
   102E EB                 3799 	ex	de,hl
   102F 21r04s41           3800 	ld	hl,#_cmd
   1032 73                 3801 	ld	(hl),e
   1033 23                 3802 	inc	hl
   1034 72                 3803 	ld	(hl),d
                           3804 ;demo.c:497: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r06s41           3805 	ld	de,#_cmd + 2
   1038 3Er7C              3806 	ld	a,#<_font_y
   103A DD 86 FE           3807 	add	a,-2 (ix)
   103D 4F                 3808 	ld	c,a
   103E 3Es0F              3809 	ld	a,#>_font_y
   1040 DD 8E FF           3810 	adc	a,-1 (ix)
   1043 47                 3811 	ld	b,a
   1044 0A                 3812 	ld	a,(bc)
   1045 4F                 3813 	ld	c,a
   1046 06 00              3814 	ld	b,#0x00
   1048 21 FF 01           3815 	ld	hl,#0x01FF
   104B 09                 3816 	add	hl,bc
   104C 4D                 3817 	ld	c,l
   104D 44                 3818 	ld	b,h
   104E EB                 3819 	ex	de,hl
   104F 71                 3820 	ld	(hl),c
   1050 23                 3821 	inc	hl
   1051 70                 3822 	ld	(hl),b
                           3823 ;demo.c:498: cmd.dest_x = lx;
   1052 01r08s41           3824 	ld	bc,#_cmd + 4
   1055 21r4Es41           3825 	ld	hl,#_lx + 0
   1058 5E                 3826 	ld	e,(hl)
   1059 16 00              3827 	ld	d,#0x00
   105B 69                 3828 	ld	l,c
   105C 60                 3829 	ld	h,b
   105D 73                 3830 	ld	(hl),e
   105E 23                 3831 	inc	hl
   105F 72                 3832 	ld	(hl),d
                           3833 ;demo.c:499: cmd.dest_y = ly;
   1060 01r0As41           3834 	ld	bc,#_cmd + 6
   1063 21r4Fs41           3835 	ld	hl,#_ly + 0
   1066 5E                 3836 	ld	e,(hl)
   1067 16 00              3837 	ld	d,#0x00
   1069 69                 3838 	ld	l,c
   106A 60                 3839 	ld	h,b
   106B 73                 3840 	ld	(hl),e
   106C 23                 3841 	inc	hl
   106D 72                 3842 	ld	(hl),d
                           3843 ;demo.c:500: cmd.size_x = font_w[cidx];
   106E 01r0Cs41           3844 	ld	bc,#_cmd + 8
   1071 3ErBC              3845 	ld	a,#<_font_w
   1073 DD 86 FE           3846 	add	a,-2 (ix)
   1076 5F                 3847 	ld	e,a
   1077 3Es0F              3848 	ld	a,#>_font_w
   1079 DD 8E FF           3849 	adc	a,-1 (ix)
   107C 57                 3850 	ld	d,a
   107D 1A                 3851 	ld	a,(de)
   107E 5F                 3852 	ld	e,a
   107F 16 00              3853 	ld	d,#0x00
   1081 69                 3854 	ld	l,c
   1082 60                 3855 	ld	h,b
   1083 73                 3856 	ld	(hl),e
   1084 23                 3857 	inc	hl
   1085 72                 3858 	ld	(hl),d
                           3859 ;demo.c:501: cmd.size_y = 10;
   1086 21r0Es41           3860 	ld	hl, #_cmd + 10
   1089 36 0A              3861 	ld	(hl),#0x0A
   108B 23                 3862 	inc	hl
   108C 36 00              3863 	ld	(hl),#0x00
                           3864 ;demo.c:502: cmd.argument = 0x00;
   108E 3E 00              3865 	ld	a,#0x00
   1090 32r11s41           3866 	ld	(#_cmd + 13),a
                           3867 ;demo.c:503: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3868 	ld	a,#0x90
   1095 32r12s41           3869 	ld	(#_cmd + 14),a
                           3870 ;demo.c:504: vdp_copier(&cmd);
   1098 21r04s41           3871 	ld	hl,#_cmd
   109B E5                 3872 	push	hl
   109C CDr00s00           3873 	call	_vdp_copier
   109F F1                 3874 	pop	af
                           3875 ;demo.c:505: lx+=font_w[cidx]-1;
   10A0 3ErBC              3876 	ld	a,#<_font_w
   10A2 DD 86 FE           3877 	add	a,-2 (ix)
   10A5 4F                 3878 	ld	c,a
   10A6 3Es0F              3879 	ld	a,#>_font_w
   10A8 DD 8E FF           3880 	adc	a,-1 (ix)
   10AB 47                 3881 	ld	b,a
   10AC 0A                 3882 	ld	a,(bc)
   10AD 4F                 3883 	ld	c,a
   10AE 0D                 3884 	dec	c
   10AF 21r4Es41           3885 	ld	hl,#_lx
   10B2 7E                 3886 	ld	a,(hl)
   10B3 81                 3887 	add	a,c
   10B4 77                 3888 	ld	(hl),a
   10B5 DD F9              3889 	ld	sp,ix
   10B7 DD E1              3890 	pop	ix
   10B9 C9                 3891 	ret
   10BA                    3892 _do_letter_tall_end::
                           3893 ;demo.c:508: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3894 ;	---------------------------------
                           3895 ; Function drawstr
                           3896 ; ---------------------------------
   10BA                    3897 _drawstr_start::
   10BA                    3898 _drawstr:
   10BA DD E5              3899 	push	ix
   10BC DD 21 00 00        3900 	ld	ix,#0
   10C0 DD 39              3901 	add	ix,sp
                           3902 ;demo.c:509: char* c = str;
   10C2 DD 4E 04           3903 	ld	c,4 (ix)
   10C5 DD 46 05           3904 	ld	b,5 (ix)
                           3905 ;demo.c:510: lx = x;
   10C8 DD 5E 06           3906 	ld	e,6 (ix)
   10CB 21r4Es41           3907 	ld	hl,#_lx + 0
   10CE 73                 3908 	ld	(hl), e
                           3909 ;demo.c:511: ly = y;
   10CF DD 7E 07           3910 	ld	a,7 (ix)
   10D2 21r4Fs41           3911 	ld	hl,#_ly + 0
   10D5 77                 3912 	ld	(hl), a
                           3913 ;demo.c:512: while (*c) {
   10D6                    3914 00107$:
   10D6 0A                 3915 	ld	a,(bc)
   10D7 57                 3916 	ld	d,a
   10D8 B7                 3917 	or	a,a
   10D9 28 42              3918 	jr	Z,00110$
                           3919 ;demo.c:513: char ltr = *c++; 
   10DB 03                 3920 	inc	bc
                           3921 ;demo.c:514: if (ltr == ' ') lx+=4;
   10DC 7A                 3922 	ld	a,d
   10DD D6 20              3923 	sub	a,#0x20
   10DF 20 1E              3924 	jr	NZ,00105$
   10E1 FD 21r4Es41        3925 	ld	iy,#_lx
   10E5 FD 34 00           3926 	inc	0 (iy)
   10E8 FD 21r4Es41        3927 	ld	iy,#_lx
   10EC FD 34 00           3928 	inc	0 (iy)
   10EF FD 21r4Es41        3929 	ld	iy,#_lx
   10F3 FD 34 00           3930 	inc	0 (iy)
   10F6 FD 21r4Es41        3931 	ld	iy,#_lx
   10FA FD 34 00           3932 	inc	0 (iy)
   10FD 18 D7              3933 	jr	00107$
   10FF                    3934 00105$:
                           3935 ;demo.c:515: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 3936 	ld	a,d
   1100 D6 5F              3937 	sub	a,#0x5F
   1102 20 0D              3938 	jr	NZ,00102$
   1104 21r4Fs41           3939 	ld	hl,#_ly
   1107 7E                 3940 	ld	a,(hl)
   1108 C6 09              3941 	add	a,#0x09
   110A 77                 3942 	ld	(hl),a
   110B 21r4Es41           3943 	ld	hl,#_lx + 0
   110E 73                 3944 	ld	(hl), e
   110F 18 C5              3945 	jr	00107$
   1111                    3946 00102$:
                           3947 ;demo.c:516: else do_letter(ltr);
   1111 C5                 3948 	push	bc
   1112 D5                 3949 	push	de
   1113 D5                 3950 	push	de
   1114 33                 3951 	inc	sp
   1115 CDr7Es0E           3952 	call	_do_letter
   1118 33                 3953 	inc	sp
   1119 D1                 3954 	pop	de
   111A C1                 3955 	pop	bc
   111B 18 B9              3956 	jr	00107$
   111D                    3957 00110$:
   111D DD E1              3958 	pop	ix
   111F C9                 3959 	ret
   1120                    3960 _drawstr_end::
                           3961 ;demo.c:520: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3962 ;	---------------------------------
                           3963 ; Function drawsine
                           3964 ; ---------------------------------
   1120                    3965 _drawsine_start::
   1120                    3966 _drawsine:
   1120 DD E5              3967 	push	ix
   1122 DD 21 00 00        3968 	ld	ix,#0
   1126 DD 39              3969 	add	ix,sp
   1128 3B                 3970 	dec	sp
                           3971 ;demo.c:521: char* c = str;
   1129 DD 4E 04           3972 	ld	c,4 (ix)
   112C DD 46 05           3973 	ld	b,5 (ix)
                           3974 ;demo.c:522: lx = x;
   112F DD 7E 06           3975 	ld	a,6 (ix)
   1132 21r4Es41           3976 	ld	hl,#_lx + 0
   1135 77                 3977 	ld	(hl), a
                           3978 ;demo.c:524: while (*c) {
   1136                    3979 00104$:
   1136 0A                 3980 	ld	a,(bc)
   1137 5F                 3981 	ld	e,a
   1138 B7                 3982 	or	a,a
   1139 CArADs11           3983 	jp	Z,00107$
                           3984 ;demo.c:525: char ltr = *c++; 
   113C 03                 3985 	inc	bc
   113D DD 73 FF           3986 	ld	-1 (ix),e
                           3987 ;demo.c:526: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21r4Es41           3988 	ld	hl,#_lx + 0
   1143 5E                 3989 	ld	e,(hl)
   1144 16 00              3990 	ld	d,#0x00
   1146 21r00s41           3991 	ld	hl,#_vbicount
   1149 7B                 3992 	ld	a,e
   114A 86                 3993 	add	a,(hl)
   114B 5F                 3994 	ld	e,a
   114C 7A                 3995 	ld	a,d
   114D 23                 3996 	inc	hl
   114E 8E                 3997 	adc	a,(hl)
   114F 57                 3998 	ld	d,a
   1150 CB 2A              3999 	sra	d
   1152 CB 1B              4000 	rr	e
   1154 16 00              4001 	ld	d,#0x00
   1156 CB 23              4002 	sla	e
   1158 CB 12              4003 	rl	d
   115A 21r2Cs00           4004 	ld	hl,#_sintabx
   115D 19                 4005 	add	hl,de
   115E 5E                 4006 	ld	e,(hl)
   115F 23                 4007 	inc	hl
   1160 56                 4008 	ld	d,(hl)
   1161 CB 3A              4009 	srl	d
   1163 CB 1B              4010 	rr	e
   1165 CB 3A              4011 	srl	d
   1167 CB 1B              4012 	rr	e
   1169 CB 3A              4013 	srl	d
   116B CB 1B              4014 	rr	e
   116D CB 3A              4015 	srl	d
   116F CB 1B              4016 	rr	e
   1171 21r4Fs41           4017 	ld	hl,#_ly
   1174 DD 7E 07           4018 	ld	a,7 (ix)
   1177 83                 4019 	add	a,e
   1178 77                 4020 	ld	(hl),a
                           4021 ;demo.c:527: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           4022 	ld	a,-1 (ix)
   117C D6 20              4023 	sub	a,#0x20
   117E 20 1F              4024 	jr	NZ,00102$
   1180 FD 21r4Es41        4025 	ld	iy,#_lx
   1184 FD 34 00           4026 	inc	0 (iy)
   1187 FD 21r4Es41        4027 	ld	iy,#_lx
   118B FD 34 00           4028 	inc	0 (iy)
   118E FD 21r4Es41        4029 	ld	iy,#_lx
   1192 FD 34 00           4030 	inc	0 (iy)
   1195 FD 21r4Es41        4031 	ld	iy,#_lx
   1199 FD 34 00           4032 	inc	0 (iy)
   119C C3r36s11           4033 	jp	00104$
   119F                    4034 00102$:
                           4035 ;demo.c:528: else do_letter_tall(ltr);
   119F C5                 4036 	push	bc
   11A0 DD 7E FF           4037 	ld	a,-1 (ix)
   11A3 F5                 4038 	push	af
   11A4 33                 4039 	inc	sp
   11A5 CDrFCs0F           4040 	call	_do_letter_tall
   11A8 33                 4041 	inc	sp
   11A9 C1                 4042 	pop	bc
   11AA C3r36s11           4043 	jp	00104$
   11AD                    4044 00107$:
   11AD DD F9              4045 	ld	sp,ix
   11AF DD E1              4046 	pop	ix
   11B1 C9                 4047 	ret
   11B2                    4048 _drawsine_end::
                           4049 ;demo.c:532: void font() {
                           4050 ;	---------------------------------
                           4051 ; Function font
                           4052 ; ---------------------------------
   11B2                    4053 _font_start::
   11B2                    4054 _font:
                           4055 ;demo.c:534: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           4056 	ld	hl,#0x3C4A
   11B5 E5                 4057 	push	hl
   11B6 21rC0s11           4058 	ld	hl,#__str_8
   11B9 E5                 4059 	push	hl
   11BA CDrBAs10           4060 	call	_drawstr
   11BD F1                 4061 	pop	af
   11BE F1                 4062 	pop	af
   11BF C9                 4063 	ret
   11C0                    4064 _font_end::
   11C0                    4065 __str_8:
   11C0 44 49 47 49 54 41  4066 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  4067 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 4068 	.db 0x00
                           4069 ;demo.c:543: void twister() {
                           4070 ;	---------------------------------
                           4071 ; Function twister
                           4072 ; ---------------------------------
   1223                    4073 _twister_start::
   1223                    4074 _twister:
   1223 DD E5              4075 	push	ix
   1225 DD 21 00 00        4076 	ld	ix,#0
   1229 DD 39              4077 	add	ix,sp
   122B F5                 4078 	push	af
                           4079 ;demo.c:547: if (twinited == 0) {
   122C 3Ar52s41           4080 	ld	a,(#_twinited+0)
   122F FD 21r52s41        4081 	ld	iy,#_twinited
   1233 FD B6 01           4082 	or	a,1 (iy)
   1236 C2rA6s12           4083 	jp	NZ,00102$
                           4084 ;demo.c:548: cmd.size_x = 256;
   1239 21r0Cs41           4085 	ld	hl, #_cmd + 8
   123C 36 00              4086 	ld	(hl),#0x00
   123E 23                 4087 	inc	hl
   123F 36 01              4088 	ld	(hl),#0x01
                           4089 ;demo.c:549: cmd.size_y = 1;
   1241 21r0Es41           4090 	ld	hl, #_cmd + 10
   1244 36 01              4091 	ld	(hl),#0x01
   1246 23                 4092 	inc	hl
   1247 36 00              4093 	ld	(hl),#0x00
                           4094 ;demo.c:550: cmd.data = 0;
                           4095 ;demo.c:551: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4096 	ld	a,#0x00
   124B 32r10s41           4097 	ld	(#_cmd + 12),a
   124E 32r11s41           4098 	ld	(#_cmd + 13),a
                           4099 ;demo.c:552: cmd.command = 0xd0; // vram to vram, y only
   1251 01r12s41           4100 	ld	bc,#_cmd + 14
   1254 3E D0              4101 	ld	a,#0xD0
   1256 02                 4102 	ld	(bc),a
                           4103 ;demo.c:553: cmd.source_x = 0;
   1257 21r04s41           4104 	ld	hl,#_cmd
   125A 36 00              4105 	ld	(hl),#0x00
   125C 23                 4106 	inc	hl
   125D 36 00              4107 	ld	(hl),#0x00
                           4108 ;demo.c:554: cmd.dest_x = 0;
   125F 21r08s41           4109 	ld	hl, #_cmd + 4
   1262 36 00              4110 	ld	(hl),#0x00
   1264 23                 4111 	inc	hl
   1265 36 00              4112 	ld	(hl),#0x00
                           4113 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4114 	ld	bc,#0x0000
   126A                    4115 00103$:
   126A 79                 4116 	ld	a,c
   126B D6 D4              4117 	sub	a,#0xD4
   126D 78                 4118 	ld	a,b
   126E DE 00              4119 	sbc	a,#0x00
   1270 F2r91s12           4120 	jp	P,00106$
                           4121 ;demo.c:557: waitVB();
   1273 76                 4122 		halt 
                           4123 ;demo.c:558: cmd.source_y = 0;
   1274 11r06s41           4124 	ld	de,#_cmd + 2
   1277 EB                 4125 	ex	de,hl
   1278 36 00              4126 	ld	(hl),#0x00
   127A 23                 4127 	inc	hl
   127B 36 00              4128 	ld	(hl),#0x00
                           4129 ;demo.c:559: cmd.dest_y = y;
   127D 11r0As41           4130 	ld	de,#_cmd + 6
   1280 EB                 4131 	ex	de,hl
   1281 71                 4132 	ld	(hl),c
   1282 23                 4133 	inc	hl
   1283 70                 4134 	ld	(hl),b
                           4135 ;demo.c:560: vdp_copier(&cmd);
   1284 C5                 4136 	push	bc
   1285 21r04s41           4137 	ld	hl,#_cmd
   1288 E5                 4138 	push	hl
   1289 CDr00s00           4139 	call	_vdp_copier
   128C F1                 4140 	pop	af
   128D C1                 4141 	pop	bc
                           4142 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   128E 03                 4143 	inc	bc
   128F 18 D9              4144 	jr	00103$
   1291                    4145 00106$:
                           4146 ;demo.c:564: twinited = 1;
   1291 21r52s41           4147 	ld	hl,#_twinited + 0
   1294 36 01              4148 	ld	(hl), #0x01
   1296 21r53s41           4149 	ld	hl,#_twinited + 1
   1299 36 00              4150 	ld	(hl), #0x00
                           4151 ;demo.c:565: vdp_load_palette(twister_palette);
   129B 21rA0s40           4152 	ld	hl,#_twister_palette
   129E E5                 4153 	push	hl
   129F CDr00s00           4154 	call	_vdp_load_palette
   12A2 F1                 4155 	pop	af
                           4156 ;demo.c:566: font();
   12A3 CDrB2s11           4157 	call	_font
   12A6                    4158 00102$:
                           4159 ;demo.c:569: cmd.size_x = 70;
   12A6 21r0Cs41           4160 	ld	hl, #_cmd + 8
   12A9 36 46              4161 	ld	(hl),#0x46
   12AB 23                 4162 	inc	hl
   12AC 36 00              4163 	ld	(hl),#0x00
                           4164 ;demo.c:570: cmd.size_y = 2;
   12AE 21r0Es41           4165 	ld	hl, #_cmd + 10
   12B1 36 02              4166 	ld	(hl),#0x02
   12B3 23                 4167 	inc	hl
   12B4 36 00              4168 	ld	(hl),#0x00
                           4169 ;demo.c:571: cmd.data = 0;
   12B6 3E 00              4170 	ld	a,#0x00
   12B8 32r10s41           4171 	ld	(#_cmd + 12),a
                           4172 ;demo.c:572: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4173 	ld	a,#0x04
   12BD 32r11s41           4174 	ld	(#_cmd + 13),a
                           4175 ;demo.c:573: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r12s41           4176 	ld	bc,#_cmd + 14
   12C3 3E E0              4177 	ld	a,#0xE0
   12C5 02                 4178 	ld	(bc),a
                           4179 ;demo.c:574: cmd.source_x = 70;
   12C6 21r04s41           4180 	ld	hl,#_cmd
   12C9 36 46              4181 	ld	(hl),#0x46
   12CB 23                 4182 	inc	hl
   12CC 36 00              4183 	ld	(hl),#0x00
                           4184 ;demo.c:575: cmd.dest_x = 70;
   12CE 21r08s41           4185 	ld	hl, #_cmd + 4
   12D1 36 46              4186 	ld	(hl),#0x46
   12D3 23                 4187 	inc	hl
   12D4 36 00              4188 	ld	(hl),#0x00
                           4189 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4190 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4191 	ld	-1 (ix),#0x00
   12DE                    4192 00107$:
   12DE DD 7E FE           4193 	ld	a,-2 (ix)
   12E1 D6 D4              4194 	sub	a,#0xD4
   12E3 DD 7E FF           4195 	ld	a,-1 (ix)
   12E6 DE 00              4196 	sbc	a,#0x00
   12E8 F2r41s13           4197 	jp	P,00110$
                           4198 ;demo.c:578: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r06s41           4199 	ld	de,#_cmd + 2
   12EE DD 4E FE           4200 	ld	c,-2 (ix)
   12F1 DD 46 FF           4201 	ld	b,-1 (ix)
   12F4 CB 28              4202 	sra	b
   12F6 CB 19              4203 	rr	c
   12F8 3Ar50s41           4204 	ld	a,(#_ff+0)
   12FB 81                 4205 	add	a,c
   12FC 4F                 4206 	ld	c,a
   12FD 3Ar51s41           4207 	ld	a,(#_ff+1)
   1300 88                 4208 	adc	a,b
   1301 06 00              4209 	ld	b,#0x00
   1303 21r00s00           4210 	ld	hl,#_sintab
   1306 09                 4211 	add	hl,bc
   1307 7E                 4212 	ld	a,(hl)
   1308 4F                 4213 	ld	c,a
   1309 CB 29              4214 	sra	c
   130B 79                 4215 	ld	a,c
   130C 17                 4216 	rla	
   130D 9F                 4217 	sbc	a,a
   130E 47                 4218 	ld	b,a
   130F 21 40 02           4219 	ld	hl,#0x0240
   1312 09                 4220 	add	hl,bc
   1313 4D                 4221 	ld	c,l
   1314 44                 4222 	ld	b,h
   1315 6B                 4223 	ld	l,e
   1316 62                 4224 	ld	h,d
   1317 71                 4225 	ld	(hl),c
   1318 23                 4226 	inc	hl
   1319 70                 4227 	ld	(hl),b
                           4228 ;demo.c:579: cmd.dest_y = y;
   131A 21r0As41           4229 	ld	hl, #_cmd + 6
   131D DD 7E FE           4230 	ld	a,-2 (ix)
   1320 77                 4231 	ld	(hl),a
   1321 23                 4232 	inc	hl
   1322 DD 7E FF           4233 	ld	a,-1 (ix)
   1325 77                 4234 	ld	(hl),a
                           4235 ;demo.c:580: vdp_copier(&cmd);
   1326 21r04s41           4236 	ld	hl,#_cmd
   1329 E5                 4237 	push	hl
   132A CDr00s00           4238 	call	_vdp_copier
   132D F1                 4239 	pop	af
                           4240 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4241 	ld	a,-2 (ix)
   1331 C6 02              4242 	add	a,#0x02
   1333 DD 77 FE           4243 	ld	-2 (ix),a
   1336 DD 7E FF           4244 	ld	a,-1 (ix)
   1339 CE 00              4245 	adc	a,#0x00
   133B DD 77 FF           4246 	ld	-1 (ix),a
   133E C3rDEs12           4247 	jp	00107$
   1341                    4248 00110$:
                           4249 ;demo.c:584: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21r50s41           4250 	ld	hl,#_ff + 0
   1344 4E                 4251 	ld	c,(hl)
   1345 21r51s41           4252 	ld	hl,#_ff + 1
   1348 46                 4253 	ld	b,(hl)
   1349 CB 28              4254 	sra	b
   134B CB 19              4255 	rr	c
   134D CB 28              4256 	sra	b
   134F CB 19              4257 	rr	c
   1351 21r50s41           4258 	ld	hl,#_ff + 0
   1354 5E                 4259 	ld	e,(hl)
   1355 21r51s41           4260 	ld	hl,#_ff + 1
   1358 56                 4261 	ld	d,(hl)
   1359 CB 2A              4262 	sra	d
   135B CB 1B              4263 	rr	e
   135D CB 2A              4264 	sra	d
   135F CB 1B              4265 	rr	e
   1361 CB 2A              4266 	sra	d
   1363 CB 1B              4267 	rr	e
   1365 43                 4268 	ld	b,e
   1366 79                 4269 	ld	a,c
   1367 F5                 4270 	push	af
   1368 33                 4271 	inc	sp
   1369 C5                 4272 	push	bc
   136A 33                 4273 	inc	sp
   136B 41                 4274 	ld	b,c
   136C 0E 04              4275 	ld	c,#0x04
   136E C5                 4276 	push	bc
   136F CDr00s00           4277 	call	_msx2_palette
   1372 F1                 4278 	pop	af
   1373 F1                 4279 	pop	af
                           4280 ;demo.c:586: ff+=4;
   1374 21r50s41           4281 	ld	hl,#_ff
   1377 7E                 4282 	ld	a,(hl)
   1378 C6 04              4283 	add	a,#0x04
   137A 23                 4284 	inc	hl
   137B 2B                 4285 	dec	hl
   137C C5                 4286 	push	bc
   137D 4F                 4287 	ld	c, a
   137E 23                 4288 	inc	hl
   137F 7E                 4289 	ld	a, (hl)
   1380 47                 4290 	ld	b, a
   1381 79                 4291 	ld	a, c
   1382 2B                 4292 	dec	hl
   1383 77                 4293 	ld	(hl), a
   1384 78                 4294 	ld	a, b
   1385 C1                 4295 	pop	bc
   1386 CE 00              4296 	adc	a,#0x00
   1388 23                 4297 	inc	hl
   1389 77                 4298 	ld	(hl),a
   138A DD F9              4299 	ld	sp,ix
   138C DD E1              4300 	pop	ix
   138E C9                 4301 	ret
   138F                    4302 _twister_end::
                           4303 ;demo.c:596: void bulbs() {
                           4304 ;	---------------------------------
                           4305 ; Function bulbs
                           4306 ; ---------------------------------
   138F                    4307 _bulbs_start::
   138F                    4308 _bulbs:
   138F DD E5              4309 	push	ix
   1391 DD 21 00 00        4310 	ld	ix,#0
   1395 DD 39              4311 	add	ix,sp
   1397 21 FA FF           4312 	ld	hl,#-6
   139A 39                 4313 	add	hl,sp
   139B F9                 4314 	ld	sp,hl
                           4315 ;demo.c:599: int sy = 16;
   139C 01 10 00           4316 	ld	bc,#0x0010
                           4317 ;demo.c:601: ender+=enderdir;
   139F 21r5Cs41           4318 	ld	hl,#_enderdir
   13A2 D5                 4319 	push	de
   13A3 FD 21r5As41        4320 	ld	iy,#_ender
   13A7 FD E5              4321 	push	iy
   13A9 D1                 4322 	pop	de
   13AA 1A                 4323 	ld	a,(de)
   13AB 86                 4324 	add	a,(hl)
   13AC 13                 4325 	inc	de
   13AD 1B                 4326 	dec	de
   13AE C5                 4327 	push	bc
   13AF 4F                 4328 	ld	c, a
   13B0 13                 4329 	inc	de
   13B1 1A                 4330 	ld	a, (de)
   13B2 47                 4331 	ld	b, a
   13B3 79                 4332 	ld	a, c
   13B4 1B                 4333 	dec	de
   13B5 12                 4334 	ld	(de), a
   13B6 78                 4335 	ld	a, b
   13B7 C1                 4336 	pop	bc
   13B8 23                 4337 	inc	hl
   13B9 8E                 4338 	adc	a,(hl)
   13BA 13                 4339 	inc	de
   13BB 12                 4340 	ld	(de),a
   13BC D1                 4341 	pop	de
                           4342 ;demo.c:602: if (ender < 2) enderdir = -enderdir;
   13BD 3Ar5As41           4343 	ld	a,(#_ender+0)
   13C0 D6 02              4344 	sub	a,#0x02
   13C2 3Ar5Bs41           4345 	ld	a,(#_ender+1)
   13C5 DE 00              4346 	sbc	a,#0x00
   13C7 F2rEBs13           4347 	jp	P,00102$
   13CA AF                 4348 	xor	a,a
   13CB FD 21r5Cs41        4349 	ld	iy,#_enderdir
   13CF 3E 00              4350 	ld	a,#0x00
   13D1 FD 9E 00           4351 	sbc	a,0 (iy)
   13D4 FD 21r5Cs41        4352 	ld	iy,#_enderdir
   13D8 FD 77 00           4353 	ld	0 (iy),a
   13DB FD 21r5Cs41        4354 	ld	iy,#_enderdir
   13DF 3E 00              4355 	ld	a,#0x00
   13E1 FD 9E 01           4356 	sbc	a,1 (iy)
   13E4 FD 21r5Cs41        4357 	ld	iy,#_enderdir
   13E8 FD 77 01           4358 	ld	1 (iy),a
   13EB                    4359 00102$:
                           4360 ;demo.c:603: if (ender >= 212) enderdir = -enderdir;
   13EB 3Ar5As41           4361 	ld	a,(#_ender+0)
   13EE D6 D4              4362 	sub	a,#0xD4
   13F0 3Ar5Bs41           4363 	ld	a,(#_ender+1)
   13F3 DE 00              4364 	sbc	a,#0x00
   13F5 FAr19s14           4365 	jp	M,00104$
   13F8 AF                 4366 	xor	a,a
   13F9 FD 21r5Cs41        4367 	ld	iy,#_enderdir
   13FD 3E 00              4368 	ld	a,#0x00
   13FF FD 9E 00           4369 	sbc	a,0 (iy)
   1402 FD 21r5Cs41        4370 	ld	iy,#_enderdir
   1406 FD 77 00           4371 	ld	0 (iy),a
   1409 FD 21r5Cs41        4372 	ld	iy,#_enderdir
   140D 3E 00              4373 	ld	a,#0x00
   140F FD 9E 01           4374 	sbc	a,1 (iy)
   1412 FD 21r5Cs41        4375 	ld	iy,#_enderdir
   1416 FD 77 01           4376 	ld	1 (iy),a
   1419                    4377 00104$:
                           4378 ;demo.c:605: enderend = ender + 92;
   1419 3Ar5As41           4379 	ld	a,(#_ender+0)
   141C C6 5C              4380 	add	a,#0x5C
   141E DD 77 FE           4381 	ld	-2 (ix),a
   1421 3Ar5Bs41           4382 	ld	a,(#_ender+1)
   1424 CE 00              4383 	adc	a,#0x00
   1426 DD 77 FF           4384 	ld	-1 (ix),a
                           4385 ;demo.c:607: if (enderend > 212) enderend = 212;
   1429 3E D4              4386 	ld	a,#0xD4
   142B DD 96 FE           4387 	sub	a,-2 (ix)
   142E 3E 00              4388 	ld	a,#0x00
   1430 DD 9E FF           4389 	sbc	a,-1 (ix)
   1433 F2r3Es14           4390 	jp	P,00106$
   1436 DD 36 FE D4        4391 	ld	-2 (ix),#0xD4
   143A DD 36 FF 00        4392 	ld	-1 (ix),#0x00
   143E                    4393 00106$:
                           4394 ;demo.c:608: if (enderend > 212-16) sy = 16-(212-enderend);
   143E 3E C4              4395 	ld	a,#0xC4
   1440 DD 96 FE           4396 	sub	a,-2 (ix)
   1443 3E 00              4397 	ld	a,#0x00
   1445 DD 9E FF           4398 	sbc	a,-1 (ix)
   1448 F2r5Fs14           4399 	jp	P,00108$
   144B 3E D4              4400 	ld	a,#0xD4
   144D DD 96 FE           4401 	sub	a,-2 (ix)
   1450 5F                 4402 	ld	e,a
   1451 3E 00              4403 	ld	a,#0x00
   1453 DD 9E FF           4404 	sbc	a,-1 (ix)
   1456 57                 4405 	ld	d,a
   1457 3E 10              4406 	ld	a,#0x10
   1459 93                 4407 	sub	a,e
   145A 4F                 4408 	ld	c,a
   145B 3E 00              4409 	ld	a,#0x00
   145D 9A                 4410 	sbc	a,d
   145E 47                 4411 	ld	b,a
   145F                    4412 00108$:
                           4413 ;demo.c:610: if(bulbflipper == 1) {
   145F 3Ar54s41           4414 	ld	a,(#_bulbflipper+0)
   1462 D6 01              4415 	sub	a,#0x01
   1464 20 06              4416 	jr	NZ,00133$
   1466 3Ar55s41           4417 	ld	a,(#_bulbflipper+1)
   1469 B7                 4418 	or	a,a
   146A 28 03              4419 	jr	Z,00134$
   146C                    4420 00133$:
   146C C3r24s15           4421 	jp	00110$
   146F                    4422 00134$:
                           4423 ;demo.c:611: cmd.size_x = 72;
   146F 11r0Cs41           4424 	ld	de,#_cmd + 8
   1472 EB                 4425 	ex	de,hl
   1473 36 48              4426 	ld	(hl),#0x48
   1475 23                 4427 	inc	hl
   1476 36 00              4428 	ld	(hl),#0x00
                           4429 ;demo.c:612: cmd.size_y = sy;
   1478 11r0Es41           4430 	ld	de,#_cmd + 10
   147B EB                 4431 	ex	de,hl
   147C 71                 4432 	ld	(hl),c
   147D 23                 4433 	inc	hl
   147E 70                 4434 	ld	(hl),b
                           4435 ;demo.c:613: cmd.data = 0;
   147F 11r10s41           4436 	ld	de,#_cmd + 12
   1482 3E 00              4437 	ld	a,#0x00
   1484 12                 4438 	ld	(de),a
                           4439 ;demo.c:614: cmd.argument = 0x04; // from 72xY to left
   1485 11r11s41           4440 	ld	de,#_cmd + 13
   1488 3E 04              4441 	ld	a,#0x04
   148A 12                 4442 	ld	(de),a
                           4443 ;demo.c:615: cmd.command = 0xe0; // vram to vram, y only
   148B 11r12s41           4444 	ld	de,#_cmd + 14
   148E 3E E0              4445 	ld	a,#0xE0
   1490 12                 4446 	ld	(de),a
                           4447 ;demo.c:616: cmd.source_x = 72;
   1491 21r04s41           4448 	ld	hl,#_cmd
   1494 36 48              4449 	ld	(hl),#0x48
   1496 23                 4450 	inc	hl
   1497 36 00              4451 	ld	(hl),#0x00
                           4452 ;demo.c:617: cmd.dest_x = 72;
   1499 11r08s41           4453 	ld	de,#_cmd + 4
   149C 6B                 4454 	ld	l,e
   149D 62                 4455 	ld	h,d
   149E 36 48              4456 	ld	(hl),#0x48
   14A0 23                 4457 	inc	hl
   14A1 36 00              4458 	ld	(hl),#0x00
                           4459 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14A3 ED 4Br5As41        4460 	ld	bc,(_ender)
   14A7 DD 71 FC           4461 	ld	-4 (ix),c
   14AA DD 70 FD           4462 	ld	-3 (ix),b
   14AD                    4463 00112$:
   14AD DD 7E FC           4464 	ld	a,-4 (ix)
   14B0 DD 96 FE           4465 	sub	a,-2 (ix)
   14B3 DD 7E FD           4466 	ld	a,-3 (ix)
   14B6 DD 9E FF           4467 	sbc	a,-1 (ix)
   14B9 F2r0Bs15           4468 	jp	P,00115$
                           4469 ;demo.c:620: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   14BC 01r06s41           4470 	ld	bc,#_cmd + 2
   14BF 3Ar56s41           4471 	ld	a,(#_ff1+0)
   14C2 DD 86 FC           4472 	add	a,-4 (ix)
   14C5 5F                 4473 	ld	e,a
   14C6 3Ar57s41           4474 	ld	a,(#_ff1+1)
   14C9 DD 8E FD           4475 	adc	a,-3 (ix)
   14CC 16 00              4476 	ld	d,#0x00
   14CE 21r00s00           4477 	ld	hl,#_sintab
   14D1 19                 4478 	add	hl,de
   14D2 5E                 4479 	ld	e,(hl)
   14D3 CB 2B              4480 	sra	e
   14D5 7B                 4481 	ld	a,e
   14D6 17                 4482 	rla	
   14D7 9F                 4483 	sbc	a,a
   14D8 57                 4484 	ld	d,a
   14D9 21 40 01           4485 	ld	hl,#0x0140
   14DC 19                 4486 	add	hl,de
   14DD EB                 4487 	ex	de,hl
   14DE 69                 4488 	ld	l,c
   14DF 60                 4489 	ld	h,b
   14E0 73                 4490 	ld	(hl),e
   14E1 23                 4491 	inc	hl
   14E2 72                 4492 	ld	(hl),d
                           4493 ;demo.c:621: cmd.dest_y = y;
   14E3 11r0As41           4494 	ld	de,#_cmd + 6
   14E6 EB                 4495 	ex	de,hl
   14E7 DD 7E FC           4496 	ld	a,-4 (ix)
   14EA 77                 4497 	ld	(hl),a
   14EB 23                 4498 	inc	hl
   14EC DD 7E FD           4499 	ld	a,-3 (ix)
   14EF 77                 4500 	ld	(hl),a
                           4501 ;demo.c:622: vdp_copier(&cmd);
   14F0 21r04s41           4502 	ld	hl,#_cmd
   14F3 E5                 4503 	push	hl
   14F4 CDr00s00           4504 	call	_vdp_copier
   14F7 F1                 4505 	pop	af
                           4506 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14F8 DD 7E FC           4507 	ld	a,-4 (ix)
   14FB C6 10              4508 	add	a,#0x10
   14FD DD 77 FC           4509 	ld	-4 (ix),a
   1500 DD 7E FD           4510 	ld	a,-3 (ix)
   1503 CE 00              4511 	adc	a,#0x00
   1505 DD 77 FD           4512 	ld	-3 (ix),a
   1508 C3rADs14           4513 	jp	00112$
   150B                    4514 00115$:
                           4515 ;demo.c:624: ff1+=4;
   150B 21r56s41           4516 	ld	hl,#_ff1
   150E 7E                 4517 	ld	a,(hl)
   150F C6 04              4518 	add	a,#0x04
   1511 23                 4519 	inc	hl
   1512 2B                 4520 	dec	hl
   1513 C5                 4521 	push	bc
   1514 4F                 4522 	ld	c, a
   1515 23                 4523 	inc	hl
   1516 7E                 4524 	ld	a, (hl)
   1517 47                 4525 	ld	b, a
   1518 79                 4526 	ld	a, c
   1519 2B                 4527 	dec	hl
   151A 77                 4528 	ld	(hl), a
   151B 78                 4529 	ld	a, b
   151C C1                 4530 	pop	bc
   151D CE 00              4531 	adc	a,#0x00
   151F 23                 4532 	inc	hl
   1520 77                 4533 	ld	(hl),a
   1521 C3rBFs15           4534 	jp	00111$
   1524                    4535 00110$:
                           4536 ;demo.c:628: cmd.size_x = 72;
   1524 11r0Cs41           4537 	ld	de,#_cmd + 8
   1527 EB                 4538 	ex	de,hl
   1528 36 48              4539 	ld	(hl),#0x48
   152A 23                 4540 	inc	hl
   152B 36 00              4541 	ld	(hl),#0x00
                           4542 ;demo.c:629: cmd.size_y = sy;
   152D 11r0Es41           4543 	ld	de,#_cmd + 10
   1530 6B                 4544 	ld	l,e
   1531 62                 4545 	ld	h,d
   1532 71                 4546 	ld	(hl),c
   1533 23                 4547 	inc	hl
   1534 70                 4548 	ld	(hl),b
                           4549 ;demo.c:630: cmd.data = 0;
                           4550 ;demo.c:631: cmd.argument = 0x00; // from 182xY to right
   1535 3E 00              4551 	ld	a,#0x00
   1537 32r10s41           4552 	ld	(#_cmd + 12),a
   153A 32r11s41           4553 	ld	(#_cmd + 13),a
                           4554 ;demo.c:632: cmd.command = 0xe0; // vram to vram, y only
   153D 01r12s41           4555 	ld	bc,#_cmd + 14
   1540 3E E0              4556 	ld	a,#0xE0
   1542 02                 4557 	ld	(bc),a
                           4558 ;demo.c:633: cmd.source_x = 182;
   1543 21r04s41           4559 	ld	hl,#_cmd
   1546 36 B6              4560 	ld	(hl),#0xB6
   1548 23                 4561 	inc	hl
   1549 36 00              4562 	ld	(hl),#0x00
                           4563 ;demo.c:634: cmd.dest_x = 182;
   154B 21r08s41           4564 	ld	hl, #_cmd + 4
   154E 36 B6              4565 	ld	(hl),#0xB6
   1550 23                 4566 	inc	hl
   1551 36 00              4567 	ld	(hl),#0x00
                           4568 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   1553 ED 4Br5As41        4569 	ld	bc,(_ender)
   1557                    4570 00116$:
   1557 79                 4571 	ld	a,c
   1558 DD 96 FE           4572 	sub	a,-2 (ix)
   155B 78                 4573 	ld	a,b
   155C DD 9E FF           4574 	sbc	a,-1 (ix)
   155F F2rA9s15           4575 	jp	P,00119$
                           4576 ;demo.c:637: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1562 21r06s41           4577 	ld	hl,#_cmd + 2
   1565 DD 75 FA           4578 	ld	-6 (ix),l
   1568 DD 74 FB           4579 	ld	-5 (ix),h
   156B 3Ar58s41           4580 	ld	a,(#_ff2+0)
   156E 81                 4581 	add	a,c
   156F 5F                 4582 	ld	e,a
   1570 3Ar59s41           4583 	ld	a,(#_ff2+1)
   1573 88                 4584 	adc	a,b
   1574 16 00              4585 	ld	d,#0x00
   1576 21r00s00           4586 	ld	hl,#_sintab
   1579 19                 4587 	add	hl,de
   157A 5E                 4588 	ld	e,(hl)
   157B CB 2B              4589 	sra	e
   157D 7B                 4590 	ld	a,e
   157E 17                 4591 	rla	
   157F 9F                 4592 	sbc	a,a
   1580 57                 4593 	ld	d,a
   1581 21 40 01           4594 	ld	hl,#0x0140
   1584 19                 4595 	add	hl,de
   1585 EB                 4596 	ex	de,hl
   1586 DD 6E FA           4597 	ld	l,-6 (ix)
   1589 DD 66 FB           4598 	ld	h,-5 (ix)
   158C 73                 4599 	ld	(hl),e
   158D 23                 4600 	inc	hl
   158E 72                 4601 	ld	(hl),d
                           4602 ;demo.c:638: cmd.dest_y = y;
   158F 11r0As41           4603 	ld	de,#_cmd + 6
   1592 EB                 4604 	ex	de,hl
   1593 71                 4605 	ld	(hl),c
   1594 23                 4606 	inc	hl
   1595 70                 4607 	ld	(hl),b
                           4608 ;demo.c:639: vdp_copier(&cmd);
   1596 C5                 4609 	push	bc
   1597 21r04s41           4610 	ld	hl,#_cmd
   159A E5                 4611 	push	hl
   159B CDr00s00           4612 	call	_vdp_copier
   159E F1                 4613 	pop	af
   159F C1                 4614 	pop	bc
                           4615 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   15A0 21 10 00           4616 	ld	hl,#0x0010
   15A3 09                 4617 	add	hl,bc
   15A4 4D                 4618 	ld	c,l
   15A5 44                 4619 	ld	b,h
   15A6 C3r57s15           4620 	jp	00116$
   15A9                    4621 00119$:
                           4622 ;demo.c:641: ff2+=4;
   15A9 21r58s41           4623 	ld	hl,#_ff2
   15AC 7E                 4624 	ld	a,(hl)
   15AD C6 04              4625 	add	a,#0x04
   15AF 23                 4626 	inc	hl
   15B0 2B                 4627 	dec	hl
   15B1 C5                 4628 	push	bc
   15B2 4F                 4629 	ld	c, a
   15B3 23                 4630 	inc	hl
   15B4 7E                 4631 	ld	a, (hl)
   15B5 47                 4632 	ld	b, a
   15B6 79                 4633 	ld	a, c
   15B7 2B                 4634 	dec	hl
   15B8 77                 4635 	ld	(hl), a
   15B9 78                 4636 	ld	a, b
   15BA C1                 4637 	pop	bc
   15BB CE 00              4638 	adc	a,#0x00
   15BD 23                 4639 	inc	hl
   15BE 77                 4640 	ld	(hl),a
   15BF                    4641 00111$:
                           4642 ;demo.c:644: bulbflipper = -bulbflipper;
   15BF AF                 4643 	xor	a,a
   15C0 FD 21r54s41        4644 	ld	iy,#_bulbflipper
   15C4 3E 00              4645 	ld	a,#0x00
   15C6 FD 9E 00           4646 	sbc	a,0 (iy)
   15C9 21r54s41           4647 	ld	hl,#_bulbflipper + 0
   15CC 77                 4648 	ld	(hl), a
   15CD FD 21r54s41        4649 	ld	iy,#_bulbflipper
   15D1 3E 00              4650 	ld	a,#0x00
   15D3 FD 9E 01           4651 	sbc	a,1 (iy)
   15D6 21r55s41           4652 	ld	hl,#_bulbflipper + 1
   15D9 77                 4653 	ld	(hl), a
   15DA DD F9              4654 	ld	sp,ix
   15DC DD E1              4655 	pop	ix
   15DE C9                 4656 	ret
   15DF                    4657 _bulbs_end::
                           4658 ;demo.c:658: void animplay() {
                           4659 ;	---------------------------------
                           4660 ; Function animplay
                           4661 ; ---------------------------------
   15DF                    4662 _animplay_start::
   15DF                    4663 _animplay:
   15DF DD E5              4664 	push	ix
   15E1 DD 21 00 00        4665 	ld	ix,#0
   15E5 DD 39              4666 	add	ix,sp
   15E7 F5                 4667 	push	af
   15E8 3B                 4668 	dec	sp
                           4669 ;demo.c:663: if (anim_init == 0) {
   15E9 3Ar66s41           4670 	ld	a,(#_anim_init+0)
   15EC 21r67s41           4671 	ld	hl,#_anim_init + 1
   15EF B6                 4672 	or	a,(hl)
   15F0 C2r78s17           4673 	jp	NZ,00120$
                           4674 ;demo.c:665: scratch_clear();
   15F3 CDr90s07           4675 	call	_scratch_clear
                           4676 ;demo.c:666: vdp_load_palette(scratch);
   15F6 21rE0s3F           4677 	ld	hl,#_scratch
   15F9 E5                 4678 	push	hl
   15FA CDr00s00           4679 	call	_vdp_load_palette
   15FD F1                 4680 	pop	af
                           4681 ;demo.c:668: uninstall_isr();
   15FE CDr00s00           4682 	call	_uninstall_isr
                           4683 ;demo.c:669: PLY_Stop();
   1601 CDr00s00           4684 	call	_PLY_Stop
                           4685 ;demo.c:670: PLY_SendRegisters();
   1604 CDr00s00           4686 	call	_PLY_SendRegisters
                           4687 ;demo.c:672: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1607 21 00 00           4688 	ld	hl,#0x0000
   160A E5                 4689 	push	hl
   160B 2E 01              4690 	ld	l, #0x01
   160D E5                 4691 	push	hl
   160E 2E 00              4692 	ld	l, #0x00
   1610 E5                 4693 	push	hl
   1611 21 09 37           4694 	ld	hl,#0x3709
   1614 E5                 4695 	push	hl
   1615 21r60s18           4696 	ld	hl,#__str_9
   1618 E5                 4697 	push	hl
   1619 CDr99s09           4698 	call	_pck_load
   161C FD 21 0A 00        4699 	ld	iy,#0x000A
   1620 FD 39              4700 	add	iy,sp
   1622 FD F9              4701 	ld	sp,iy
                           4702 ;demo.c:674: cmd.size_x = 256;
   1624 21r0Cs41           4703 	ld	hl, #_cmd + 8
   1627 36 00              4704 	ld	(hl),#0x00
   1629 23                 4705 	inc	hl
   162A 36 01              4706 	ld	(hl),#0x01
                           4707 ;demo.c:675: cmd.size_y = 212;
   162C 21r0Es41           4708 	ld	hl, #_cmd + 10
   162F 36 D4              4709 	ld	(hl),#0xD4
   1631 23                 4710 	inc	hl
   1632 36 00              4711 	ld	(hl),#0x00
                           4712 ;demo.c:676: cmd.data = 0;
                           4713 ;demo.c:677: cmd.argument = 0x00;
   1634 3E 00              4714 	ld	a,#0x00
   1636 32r10s41           4715 	ld	(#_cmd + 12),a
   1639 32r11s41           4716 	ld	(#_cmd + 13),a
                           4717 ;demo.c:678: cmd.command = 0xd0; 
   163C 01r12s41           4718 	ld	bc,#_cmd + 14
   163F 3E D0              4719 	ld	a,#0xD0
   1641 02                 4720 	ld	(bc),a
                           4721 ;demo.c:679: cmd.source_x = 0;
   1642 21r04s41           4722 	ld	hl,#_cmd
   1645 36 00              4723 	ld	(hl),#0x00
   1647 23                 4724 	inc	hl
   1648 36 00              4725 	ld	(hl),#0x00
                           4726 ;demo.c:680: cmd.source_y = 0;
   164A 21r06s41           4727 	ld	hl, #_cmd + 2
   164D 36 00              4728 	ld	(hl),#0x00
   164F 23                 4729 	inc	hl
   1650 36 00              4730 	ld	(hl),#0x00
                           4731 ;demo.c:681: cmd.dest_x = 0;
   1652 21r08s41           4732 	ld	hl, #_cmd + 4
   1655 36 00              4733 	ld	(hl),#0x00
   1657 23                 4734 	inc	hl
   1658 36 00              4735 	ld	(hl),#0x00
                           4736 ;demo.c:682: cmd.dest_y = 256;
   165A 21r0As41           4737 	ld	hl, #_cmd + 6
   165D 36 00              4738 	ld	(hl),#0x00
   165F 23                 4739 	inc	hl
   1660 36 01              4740 	ld	(hl),#0x01
                           4741 ;demo.c:683: vdp_copier(&cmd);
   1662 21r04s41           4742 	ld	hl,#_cmd
   1665 E5                 4743 	push	hl
   1666 CDr00s00           4744 	call	_vdp_copier
   1669 F1                 4745 	pop	af
                           4746 ;demo.c:685: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   166A 21 00 00           4747 	ld	hl,#0x0000
   166D E5                 4748 	push	hl
   166E 2E 01              4749 	ld	l, #0x01
   1670 E5                 4750 	push	hl
   1671 2E 00              4751 	ld	l, #0x00
   1673 E5                 4752 	push	hl
   1674 21 76 3E           4753 	ld	hl,#0x3E76
   1677 E5                 4754 	push	hl
   1678 21r6Cs18           4755 	ld	hl,#__str_10
   167B E5                 4756 	push	hl
   167C CDr99s09           4757 	call	_pck_load
   167F FD 21 0A 00        4758 	ld	iy,#0x000A
   1683 FD 39              4759 	add	iy,sp
   1685 FD F9              4760 	ld	sp,iy
                           4761 ;demo.c:687: cmd.size_x = 256;
   1687 21r0Cs41           4762 	ld	hl, #_cmd + 8
   168A 36 00              4763 	ld	(hl),#0x00
   168C 23                 4764 	inc	hl
   168D 36 01              4765 	ld	(hl),#0x01
                           4766 ;demo.c:688: cmd.size_y = 212;
   168F 21r0Es41           4767 	ld	hl, #_cmd + 10
   1692 36 D4              4768 	ld	(hl),#0xD4
   1694 23                 4769 	inc	hl
   1695 36 00              4770 	ld	(hl),#0x00
                           4771 ;demo.c:689: cmd.data = 0;
                           4772 ;demo.c:690: cmd.argument = 0x00;
   1697 3E 00              4773 	ld	a,#0x00
   1699 32r10s41           4774 	ld	(#_cmd + 12),a
   169C 32r11s41           4775 	ld	(#_cmd + 13),a
                           4776 ;demo.c:691: cmd.command = 0xd0; 
   169F 01r12s41           4777 	ld	bc,#_cmd + 14
   16A2 3E D0              4778 	ld	a,#0xD0
   16A4 02                 4779 	ld	(bc),a
                           4780 ;demo.c:692: cmd.source_x = 0;
   16A5 21r04s41           4781 	ld	hl,#_cmd
   16A8 36 00              4782 	ld	(hl),#0x00
   16AA 23                 4783 	inc	hl
   16AB 36 00              4784 	ld	(hl),#0x00
                           4785 ;demo.c:693: cmd.source_y = 0;
   16AD 21r06s41           4786 	ld	hl, #_cmd + 2
   16B0 36 00              4787 	ld	(hl),#0x00
   16B2 23                 4788 	inc	hl
   16B3 36 00              4789 	ld	(hl),#0x00
                           4790 ;demo.c:694: cmd.dest_x = 0;
   16B5 21r08s41           4791 	ld	hl, #_cmd + 4
   16B8 36 00              4792 	ld	(hl),#0x00
   16BA 23                 4793 	inc	hl
   16BB 36 00              4794 	ld	(hl),#0x00
                           4795 ;demo.c:695: cmd.dest_y = 512;
   16BD 21r0As41           4796 	ld	hl, #_cmd + 6
   16C0 36 00              4797 	ld	(hl),#0x00
   16C2 23                 4798 	inc	hl
   16C3 36 02              4799 	ld	(hl),#0x02
                           4800 ;demo.c:696: vdp_copier(&cmd);
   16C5 21r04s41           4801 	ld	hl,#_cmd
   16C8 E5                 4802 	push	hl
   16C9 CDr00s00           4803 	call	_vdp_copier
   16CC F1                 4804 	pop	af
                           4805 ;demo.c:699: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   16CD 21 00 00           4806 	ld	hl,#0x0000
   16D0 E5                 4807 	push	hl
   16D1 2E 01              4808 	ld	l, #0x01
   16D3 E5                 4809 	push	hl
   16D4 2E 00              4810 	ld	l, #0x00
   16D6 E5                 4811 	push	hl
   16D7 21 9E 3A           4812 	ld	hl,#0x3A9E
   16DA E5                 4813 	push	hl
   16DB 21r78s18           4814 	ld	hl,#__str_11
   16DE E5                 4815 	push	hl
   16DF CDr99s09           4816 	call	_pck_load
   16E2 FD 21 0A 00        4817 	ld	iy,#0x000A
   16E6 FD 39              4818 	add	iy,sp
   16E8 FD F9              4819 	ld	sp,iy
                           4820 ;demo.c:701: cmd.size_x = 256;
   16EA 21r0Cs41           4821 	ld	hl, #_cmd + 8
   16ED 36 00              4822 	ld	(hl),#0x00
   16EF 23                 4823 	inc	hl
   16F0 36 01              4824 	ld	(hl),#0x01
                           4825 ;demo.c:702: cmd.size_y = 212;
   16F2 21r0Es41           4826 	ld	hl, #_cmd + 10
   16F5 36 D4              4827 	ld	(hl),#0xD4
   16F7 23                 4828 	inc	hl
   16F8 36 00              4829 	ld	(hl),#0x00
                           4830 ;demo.c:703: cmd.data = 0;
                           4831 ;demo.c:704: cmd.argument = 0x00;
   16FA 3E 00              4832 	ld	a,#0x00
   16FC 32r10s41           4833 	ld	(#_cmd + 12),a
   16FF 32r11s41           4834 	ld	(#_cmd + 13),a
                           4835 ;demo.c:705: cmd.command = 0xd0; 
   1702 01r12s41           4836 	ld	bc,#_cmd + 14
   1705 3E D0              4837 	ld	a,#0xD0
   1707 02                 4838 	ld	(bc),a
                           4839 ;demo.c:706: cmd.source_x = 0;
   1708 21r04s41           4840 	ld	hl,#_cmd
   170B 36 00              4841 	ld	(hl),#0x00
   170D 23                 4842 	inc	hl
   170E 36 00              4843 	ld	(hl),#0x00
                           4844 ;demo.c:707: cmd.source_y = 0;
   1710 21r06s41           4845 	ld	hl, #_cmd + 2
   1713 36 00              4846 	ld	(hl),#0x00
   1715 23                 4847 	inc	hl
   1716 36 00              4848 	ld	(hl),#0x00
                           4849 ;demo.c:708: cmd.dest_x = 0;
   1718 21r08s41           4850 	ld	hl, #_cmd + 4
   171B 36 00              4851 	ld	(hl),#0x00
   171D 23                 4852 	inc	hl
   171E 36 00              4853 	ld	(hl),#0x00
                           4854 ;demo.c:709: cmd.dest_y = 768;
   1720 21r0As41           4855 	ld	hl, #_cmd + 6
   1723 36 00              4856 	ld	(hl),#0x00
   1725 23                 4857 	inc	hl
   1726 36 03              4858 	ld	(hl),#0x03
                           4859 ;demo.c:710: vdp_copier(&cmd);
   1728 21r04s41           4860 	ld	hl,#_cmd
   172B E5                 4861 	push	hl
   172C CDr00s00           4862 	call	_vdp_copier
   172F F1                 4863 	pop	af
                           4864 ;demo.c:712: vdp_register(9,130); // 50hz,212
   1730 21 09 82           4865 	ld	hl,#0x8209
   1733 E5                 4866 	push	hl
   1734 CDr00s00           4867 	call	_vdp_register
   1737 F1                 4868 	pop	af
                           4869 ;demo.c:714: scratch_clear();
   1738 CDr90s07           4870 	call	_scratch_clear
                           4871 ;demo.c:716: vdp_set_write_address(0, 0);
   173B 21 00 00           4872 	ld	hl,#0x0000
   173E E5                 4873 	push	hl
   173F 3E 00              4874 	ld	a,#0x00
   1741 F5                 4875 	push	af
   1742 33                 4876 	inc	sp
   1743 CDr00s00           4877 	call	_vdp_set_write_address
   1746 F1                 4878 	pop	af
   1747 33                 4879 	inc	sp
                           4880 ;demo.c:718: for (y = 0; y < 212; y++) { 
   1748 0E D4              4881 	ld	c,#0xD4
   174A                    4882 00109$:
                           4883 ;demo.c:719: vdp_load_screen(scratch, 128);
   174A C5                 4884 	push	bc
   174B 3E 80              4885 	ld	a,#0x80
   174D F5                 4886 	push	af
   174E 33                 4887 	inc	sp
   174F 21rE0s3F           4888 	ld	hl,#_scratch
   1752 E5                 4889 	push	hl
   1753 CDr00s00           4890 	call	_vdp_load_screen
   1756 F1                 4891 	pop	af
   1757 33                 4892 	inc	sp
   1758 C1                 4893 	pop	bc
   1759 0D                 4894 	dec	c
                           4895 ;demo.c:718: for (y = 0; y < 212; y++) { 
   175A AF                 4896 	xor	a,a
   175B B1                 4897 	or	a,c
   175C 20 EC              4898 	jr	NZ,00109$
                           4899 ;demo.c:722: install_isr(my_isr);
   175E 21rECs05           4900 	ld	hl,#_my_isr
   1761 E5                 4901 	push	hl
   1762 CDr00s00           4902 	call	_install_isr
   1765 F1                 4903 	pop	af
                           4904 ;demo.c:723: anim_init = 1;
   1766 21r66s41           4905 	ld	hl,#_anim_init + 0
   1769 36 01              4906 	ld	(hl), #0x01
   176B 21r67s41           4907 	ld	hl,#_anim_init + 1
   176E 36 00              4908 	ld	(hl), #0x00
                           4909 ;demo.c:724: vdp_load_palette(tf_palette);
   1770 21rC0s40           4910 	ld	hl,#_tf_palette
   1773 E5                 4911 	push	hl
   1774 CDr00s00           4912 	call	_vdp_load_palette
   1777 F1                 4913 	pop	af
                           4914 ;demo.c:727: for (y = 0; y < 106; y+=1) {
   1778                    4915 00120$:
   1778 DD 36 FF 00        4916 	ld	-1 (ix),#0x00
   177C                    4917 00110$:
   177C DD 7E FF           4918 	ld	a,-1 (ix)
   177F D6 6A              4919 	sub	a,#0x6A
   1781 D2r01s18           4920 	jp	NC,00113$
                           4921 ;demo.c:728: cmd.source_x = 0;
   1784 21r04s41           4922 	ld	hl,#_cmd
   1787 36 00              4923 	ld	(hl),#0x00
   1789 23                 4924 	inc	hl
   178A 36 00              4925 	ld	(hl),#0x00
                           4926 ;demo.c:729: cmd.source_y = 256+po+frames+(y>>1);
   178C 11r06s41           4927 	ld	de,#_cmd + 2
   178F 3Ar62s41           4928 	ld	a,(#_po+0)
   1792 4F                 4929 	ld	c,a
   1793 3Ar63s41           4930 	ld	a,(#_po+1)
   1796 C6 01              4931 	add	a,#0x01
   1798 47                 4932 	ld	b,a
   1799 21r64s41           4933 	ld	hl,#_frames
   179C 79                 4934 	ld	a,c
   179D 86                 4935 	add	a,(hl)
   179E DD 77 FD           4936 	ld	-3 (ix),a
   17A1 78                 4937 	ld	a,b
   17A2 23                 4938 	inc	hl
   17A3 8E                 4939 	adc	a,(hl)
   17A4 DD 77 FE           4940 	ld	-2 (ix),a
   17A7 DD 4E FF           4941 	ld	c,-1 (ix)
   17AA CB 39              4942 	srl	c
   17AC 06 00              4943 	ld	b,#0x00
   17AE DD 7E FD           4944 	ld	a,-3 (ix)
   17B1 81                 4945 	add	a,c
   17B2 4F                 4946 	ld	c,a
   17B3 DD 7E FE           4947 	ld	a,-2 (ix)
   17B6 88                 4948 	adc	a,b
   17B7 47                 4949 	ld	b,a
   17B8 6B                 4950 	ld	l,e
   17B9 62                 4951 	ld	h,d
   17BA 71                 4952 	ld	(hl),c
   17BB 23                 4953 	inc	hl
   17BC 70                 4954 	ld	(hl),b
                           4955 ;demo.c:730: cmd.dest_x = 0;
   17BD 21r08s41           4956 	ld	hl, #_cmd + 4
   17C0 36 00              4957 	ld	(hl),#0x00
   17C2 23                 4958 	inc	hl
   17C3 36 00              4959 	ld	(hl),#0x00
                           4960 ;demo.c:731: cmd.dest_y = (y<<1);
   17C5 01r0As41           4961 	ld	bc,#_cmd + 6
   17C8 DD 5E FF           4962 	ld	e,-1 (ix)
   17CB 16 00              4963 	ld	d,#0x00
   17CD CB 23              4964 	sla	e
   17CF CB 12              4965 	rl	d
   17D1 69                 4966 	ld	l,c
   17D2 60                 4967 	ld	h,b
   17D3 73                 4968 	ld	(hl),e
   17D4 23                 4969 	inc	hl
   17D5 72                 4970 	ld	(hl),d
                           4971 ;demo.c:732: cmd.size_x = 256;
   17D6 21r0Cs41           4972 	ld	hl, #_cmd + 8
   17D9 36 00              4973 	ld	(hl),#0x00
   17DB 23                 4974 	inc	hl
   17DC 36 01              4975 	ld	(hl),#0x01
                           4976 ;demo.c:733: cmd.size_y = 1;
   17DE 21r0Es41           4977 	ld	hl, #_cmd + 10
   17E1 36 01              4978 	ld	(hl),#0x01
   17E3 23                 4979 	inc	hl
   17E4 36 00              4980 	ld	(hl),#0x00
                           4981 ;demo.c:734: cmd.data = 0;
                           4982 ;demo.c:735: cmd.argument = 0x00;
   17E6 3E 00              4983 	ld	a,#0x00
   17E8 32r10s41           4984 	ld	(#_cmd + 12),a
   17EB 32r11s41           4985 	ld	(#_cmd + 13),a
                           4986 ;demo.c:736: cmd.command = 0xD0;
   17EE 3E D0              4987 	ld	a,#0xD0
   17F0 32r12s41           4988 	ld	(#_cmd + 14),a
                           4989 ;demo.c:737: vdp_copier(&cmd);
   17F3 21r04s41           4990 	ld	hl,#_cmd
   17F6 E5                 4991 	push	hl
   17F7 CDr00s00           4992 	call	_vdp_copier
   17FA F1                 4993 	pop	af
                           4994 ;demo.c:727: for (y = 0; y < 106; y+=1) {
   17FB DD 34 FF           4995 	inc	-1 (ix)
   17FE C3r7Cs17           4996 	jp	00110$
   1801                    4997 00113$:
                           4998 ;demo.c:740: frames+=53;
   1801 21r64s41           4999 	ld	hl,#_frames
   1804 7E                 5000 	ld	a,(hl)
   1805 C6 35              5001 	add	a,#0x35
   1807 23                 5002 	inc	hl
   1808 2B                 5003 	dec	hl
   1809 C5                 5004 	push	bc
   180A 4F                 5005 	ld	c, a
   180B 23                 5006 	inc	hl
   180C 7E                 5007 	ld	a, (hl)
   180D 47                 5008 	ld	b, a
   180E 79                 5009 	ld	a, c
   180F 2B                 5010 	dec	hl
   1810 77                 5011 	ld	(hl), a
   1811 78                 5012 	ld	a, b
   1812 C1                 5013 	pop	bc
   1813 CE 00              5014 	adc	a,#0x00
   1815 23                 5015 	inc	hl
   1816 77                 5016 	ld	(hl),a
                           5017 ;demo.c:741: if (frames >= 212) { frames = 0; po+=256; }
   1817 3Ar64s41           5018 	ld	a,(#_frames+0)
   181A D6 D4              5019 	sub	a,#0xD4
   181C 3Ar65s41           5020 	ld	a,(#_frames+1)
   181F DE 00              5021 	sbc	a,#0x00
   1821 FAr44s18           5022 	jp	M,00104$
   1824 21r64s41           5023 	ld	hl,#_frames + 0
   1827 36 00              5024 	ld	(hl), #0x00
   1829 21r65s41           5025 	ld	hl,#_frames + 1
   182C 36 00              5026 	ld	(hl), #0x00
   182E 21r62s41           5027 	ld	hl,#_po
   1831 7E                 5028 	ld	a,(hl)
   1832 C6 00              5029 	add	a,#0x00
   1834 23                 5030 	inc	hl
   1835 2B                 5031 	dec	hl
   1836 C5                 5032 	push	bc
   1837 4F                 5033 	ld	c, a
   1838 23                 5034 	inc	hl
   1839 7E                 5035 	ld	a, (hl)
   183A 47                 5036 	ld	b, a
   183B 79                 5037 	ld	a, c
   183C 2B                 5038 	dec	hl
   183D 77                 5039 	ld	(hl), a
   183E 78                 5040 	ld	a, b
   183F C1                 5041 	pop	bc
   1840 CE 01              5042 	adc	a,#0x01
   1842 23                 5043 	inc	hl
   1843 77                 5044 	ld	(hl),a
   1844                    5045 00104$:
                           5046 ;demo.c:742: if (po >= 768) {
   1844 3Ar62s41           5047 	ld	a,(#_po+0)
   1847 D6 00              5048 	sub	a,#0x00
   1849 3Ar63s41           5049 	ld	a,(#_po+1)
   184C DE 03              5050 	sbc	a,#0x03
   184E FAr5Bs18           5051 	jp	M,00114$
                           5052 ;demo.c:743: po = 0;
   1851 21r62s41           5053 	ld	hl,#_po + 0
   1854 36 00              5054 	ld	(hl), #0x00
   1856 21r63s41           5055 	ld	hl,#_po + 1
   1859 36 00              5056 	ld	(hl), #0x00
   185B                    5057 00114$:
   185B DD F9              5058 	ld	sp,ix
   185D DD E1              5059 	pop	ix
   185F C9                 5060 	ret
   1860                    5061 _animplay_end::
   1860                    5062 __str_9:
   1860 4C 46 31 20 20 20  5063 	.ascii "LF1     PCK"
        20 20 50 43 4B
   186B 00                 5064 	.db 0x00
   186C                    5065 __str_10:
   186C 4C 46 32 20 20 20  5066 	.ascii "LF2     PCK"
        20 20 50 43 4B
   1877 00                 5067 	.db 0x00
   1878                    5068 __str_11:
   1878 4C 46 33 20 20 20  5069 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1883 00                 5070 	.db 0x00
                           5071 ;demo.c:759: void drawbox(uint8_t x, uint8_t y) {
                           5072 ;	---------------------------------
                           5073 ; Function drawbox
                           5074 ; ---------------------------------
   1884                    5075 _drawbox_start::
   1884                    5076 _drawbox:
   1884 DD E5              5077 	push	ix
   1886 DD 21 00 00        5078 	ld	ix,#0
   188A DD 39              5079 	add	ix,sp
                           5080 ;demo.c:760: cmd.source_x = boxes_x[boxi];
   188C 21r7Es41           5081 	ld	hl,#_boxi
   188F 3Er6F              5082 	ld	a,#<_boxes_x
   1891 86                 5083 	add	a,(hl)
   1892 4F                 5084 	ld	c,a
   1893 3Es41              5085 	ld	a,#>_boxes_x
   1895 CE 00              5086 	adc	a,#0x00
   1897 47                 5087 	ld	b,a
   1898 0A                 5088 	ld	a,(bc)
   1899 4F                 5089 	ld	c,a
   189A 06 00              5090 	ld	b,#0x00
   189C 21r04s41           5091 	ld	hl,#_cmd
   189F 71                 5092 	ld	(hl),c
   18A0 23                 5093 	inc	hl
   18A1 70                 5094 	ld	(hl),b
                           5095 ;demo.c:761: cmd.source_y = boxes_y[boxi];
   18A2 01r06s41           5096 	ld	bc,#_cmd + 2
   18A5 3Ar7Es41           5097 	ld	a,(#_boxi+0)
   18A8 87                 5098 	add	a,a
   18A9 C6r74              5099 	add	a,#<_boxes_y
   18AB 6F                 5100 	ld	l,a
   18AC 3Es41              5101 	ld	a,#>_boxes_y
   18AE CE 00              5102 	adc	a,#0x00
   18B0 67                 5103 	ld	h,a
   18B1 5E                 5104 	ld	e,(hl)
   18B2 23                 5105 	inc	hl
   18B3 56                 5106 	ld	d,(hl)
   18B4 69                 5107 	ld	l,c
   18B5 60                 5108 	ld	h,b
   18B6 73                 5109 	ld	(hl),e
   18B7 23                 5110 	inc	hl
   18B8 72                 5111 	ld	(hl),d
                           5112 ;demo.c:762: cmd.dest_x = x;
   18B9 01r08s41           5113 	ld	bc,#_cmd + 4
   18BC DD 5E 04           5114 	ld	e,4 (ix)
   18BF 16 00              5115 	ld	d,#0x00
   18C1 69                 5116 	ld	l,c
   18C2 60                 5117 	ld	h,b
   18C3 73                 5118 	ld	(hl),e
   18C4 23                 5119 	inc	hl
   18C5 72                 5120 	ld	(hl),d
                           5121 ;demo.c:763: cmd.dest_y = y;
   18C6 01r0As41           5122 	ld	bc,#_cmd + 6
   18C9 DD 5E 05           5123 	ld	e,5 (ix)
   18CC 16 00              5124 	ld	d,#0x00
   18CE 69                 5125 	ld	l,c
   18CF 60                 5126 	ld	h,b
   18D0 73                 5127 	ld	(hl),e
   18D1 23                 5128 	inc	hl
   18D2 72                 5129 	ld	(hl),d
                           5130 ;demo.c:764: cmd.size_x = 36;
   18D3 21r0Cs41           5131 	ld	hl, #_cmd + 8
   18D6 36 24              5132 	ld	(hl),#0x24
   18D8 23                 5133 	inc	hl
   18D9 36 00              5134 	ld	(hl),#0x00
                           5135 ;demo.c:765: cmd.size_y = 36;
   18DB 21r0Es41           5136 	ld	hl, #_cmd + 10
   18DE 36 24              5137 	ld	(hl),#0x24
   18E0 23                 5138 	inc	hl
   18E1 36 00              5139 	ld	(hl),#0x00
                           5140 ;demo.c:766: cmd.data = 0;
                           5141 ;demo.c:767: cmd.argument = 0x00;
   18E3 3E 00              5142 	ld	a,#0x00
   18E5 32r10s41           5143 	ld	(#_cmd + 12),a
   18E8 32r11s41           5144 	ld	(#_cmd + 13),a
                           5145 ;demo.c:768: cmd.command = 0x98; // TIMP sprite
   18EB 3E 98              5146 	ld	a,#0x98
   18ED 32r12s41           5147 	ld	(#_cmd + 14),a
                           5148 ;demo.c:769: vdp_copier(&cmd);
   18F0 21r04s41           5149 	ld	hl,#_cmd
   18F3 E5                 5150 	push	hl
   18F4 CDr00s00           5151 	call	_vdp_copier
   18F7 F1                 5152 	pop	af
                           5153 ;demo.c:771: prevx = x;
   18F8 DD 7E 04           5154 	ld	a,4 (ix)
   18FB 21r6Bs41           5155 	ld	hl,#_prevx + 0
   18FE 77                 5156 	ld	(hl), a
   18FF 21r6Cs41           5157 	ld	hl,#_prevx + 1
   1902 36 00              5158 	ld	(hl), #0x00
                           5159 ;demo.c:772: prevy = y;
   1904 DD 7E 05           5160 	ld	a,5 (ix)
   1907 21r6Ds41           5161 	ld	hl,#_prevy + 0
   190A 77                 5162 	ld	(hl), a
   190B 21r6Es41           5163 	ld	hl,#_prevy + 1
   190E 36 00              5164 	ld	(hl), #0x00
   1910 DD E1              5165 	pop	ix
   1912 C9                 5166 	ret
   1913                    5167 _drawbox_end::
                           5168 ;demo.c:786: void boxes() {
                           5169 ;	---------------------------------
                           5170 ; Function boxes
                           5171 ; ---------------------------------
   1913                    5172 _boxes_start::
   1913                    5173 _boxes:
   1913 DD E5              5174 	push	ix
   1915 DD 21 00 00        5175 	ld	ix,#0
   1919 DD 39              5176 	add	ix,sp
   191B F5                 5177 	push	af
                           5178 ;demo.c:790: if (bx < 0) return;
   191C FD 21r7Fs41        5179 	ld	iy,#_bx
   1920 FD CB 01 7E        5180 	bit	7,1 (iy)
   1924 C2r3As1D           5181 	jp	NZ,00149$
                           5182 ;demo.c:792: if (bonc == 1) {
   1927 3Ar87s41           5183 	ld	a,(#_bonc+0)
   192A D6 01              5184 	sub	a,#0x01
   192C 20 06              5185 	jr	NZ,00178$
   192E 3Ar88s41           5186 	ld	a,(#_bonc+1)
   1931 B7                 5187 	or	a,a
   1932 28 02              5188 	jr	Z,00179$
   1934                    5189 00178$:
   1934 18 4D              5190 	jr	00104$
   1936                    5191 00179$:
                           5192 ;demo.c:794: cmd.source_x = 0;
   1936 21r04s41           5193 	ld	hl,#_cmd
   1939 36 00              5194 	ld	(hl),#0x00
   193B 23                 5195 	inc	hl
   193C 36 00              5196 	ld	(hl),#0x00
                           5197 ;demo.c:795: cmd.source_y = 256;
   193E 21r06s41           5198 	ld	hl, #_cmd + 2
   1941 36 00              5199 	ld	(hl),#0x00
   1943 23                 5200 	inc	hl
   1944 36 01              5201 	ld	(hl),#0x01
                           5202 ;demo.c:796: cmd.dest_x = pbx;
   1946 01r08s41           5203 	ld	bc,#_cmd + 4
   1949 ED 5Br89s41        5204 	ld	de,(_pbx)
   194D 69                 5205 	ld	l,c
   194E 60                 5206 	ld	h,b
   194F 73                 5207 	ld	(hl),e
   1950 23                 5208 	inc	hl
   1951 72                 5209 	ld	(hl),d
                           5210 ;demo.c:797: cmd.dest_y = pbt;
   1952 01r0As41           5211 	ld	bc,#_cmd + 6
   1955 ED 5Br8Bs41        5212 	ld	de,(_pbt)
   1959 69                 5213 	ld	l,c
   195A 60                 5214 	ld	h,b
   195B 73                 5215 	ld	(hl),e
   195C 23                 5216 	inc	hl
   195D 72                 5217 	ld	(hl),d
                           5218 ;demo.c:798: cmd.size_x = 36;
   195E 21r0Cs41           5219 	ld	hl, #_cmd + 8
   1961 36 24              5220 	ld	(hl),#0x24
   1963 23                 5221 	inc	hl
   1964 36 00              5222 	ld	(hl),#0x00
                           5223 ;demo.c:799: cmd.size_y = 36;
   1966 21r0Es41           5224 	ld	hl, #_cmd + 10
   1969 36 24              5225 	ld	(hl),#0x24
   196B 23                 5226 	inc	hl
   196C 36 00              5227 	ld	(hl),#0x00
                           5228 ;demo.c:800: cmd.data = 0;
                           5229 ;demo.c:801: cmd.argument = 0x00;
   196E 3E 00              5230 	ld	a,#0x00
   1970 32r10s41           5231 	ld	(#_cmd + 12),a
   1973 32r11s41           5232 	ld	(#_cmd + 13),a
                           5233 ;demo.c:802: cmd.command = 0xD0; // HMMM
   1976 3E D0              5234 	ld	a,#0xD0
   1978 32r12s41           5235 	ld	(#_cmd + 14),a
                           5236 ;demo.c:803: vdp_copier(&cmd);
   197B 21r04s41           5237 	ld	hl,#_cmd
   197E E5                 5238 	push	hl
   197F CDr00s00           5239 	call	_vdp_copier
   1982 F1                 5240 	pop	af
   1983                    5241 00104$:
                           5242 ;demo.c:806: if (boxes_init == 0) {
   1983 AF                 5243 	xor	a,a
   1984 21r68s41           5244 	ld	hl,#_boxes_init + 0
   1987 B6                 5245 	or	a,(hl)
   1988 C2r8As1A           5246 	jp	NZ,00106$
                           5247 ;demo.c:807: boxes_init = 1;
   198B FD 21r68s41        5248 	ld	iy,#_boxes_init
   198F FD 36 00 01        5249 	ld	0 (iy),#0x01
                           5250 ;demo.c:809: cmd.size_x = 8;
   1993 21r0Cs41           5251 	ld	hl, #_cmd + 8
   1996 36 08              5252 	ld	(hl),#0x08
   1998 23                 5253 	inc	hl
   1999 36 00              5254 	ld	(hl),#0x00
                           5255 ;demo.c:810: cmd.size_y = 212;
   199B 21r0Es41           5256 	ld	hl, #_cmd + 10
   199E 36 D4              5257 	ld	(hl),#0xD4
   19A0 23                 5258 	inc	hl
   19A1 36 00              5259 	ld	(hl),#0x00
                           5260 ;demo.c:811: cmd.data = 0;
                           5261 ;demo.c:812: cmd.argument = 0x00; // from 70xY to left
   19A3 3E 00              5262 	ld	a,#0x00
   19A5 32r10s41           5263 	ld	(#_cmd + 12),a
   19A8 32r11s41           5264 	ld	(#_cmd + 13),a
                           5265 ;demo.c:813: cmd.command = 0xd0; // vram to vram, y only
   19AB 01r12s41           5266 	ld	bc,#_cmd + 14
   19AE 3E D0              5267 	ld	a,#0xD0
   19B0 02                 5268 	ld	(bc),a
                           5269 ;demo.c:814: cmd.source_x = 248;
   19B1 21r04s41           5270 	ld	hl,#_cmd
   19B4 36 F8              5271 	ld	(hl),#0xF8
   19B6 23                 5272 	inc	hl
   19B7 36 00              5273 	ld	(hl),#0x00
                           5274 ;demo.c:815: cmd.source_y = 0;
   19B9 21r06s41           5275 	ld	hl, #_cmd + 2
   19BC 36 00              5276 	ld	(hl),#0x00
   19BE 23                 5277 	inc	hl
   19BF 36 00              5278 	ld	(hl),#0x00
                           5279 ;demo.c:816: cmd.dest_y = 0;
   19C1 21r0As41           5280 	ld	hl, #_cmd + 6
   19C4 36 00              5281 	ld	(hl),#0x00
   19C6 23                 5282 	inc	hl
   19C7 36 00              5283 	ld	(hl),#0x00
                           5284 ;demo.c:818: for (x = 248; x >= 0; x-=8) {
   19C9 01 F8 00           5285 	ld	bc,#0x00F8
   19CC                    5286 00137$:
   19CC 78                 5287 	ld	a,b
   19CD CB 7F              5288 	bit	7,a
   19CF 20 38              5289 	jr	NZ,00140$
                           5290 ;demo.c:819: waitVB();
   19D1 76                 5291 		halt 
                           5292 ;demo.c:820: cmd.dest_x = x;
   19D2 11r08s41           5293 	ld	de,#_cmd + 4
   19D5 EB                 5294 	ex	de,hl
   19D6 71                 5295 	ld	(hl),c
   19D7 23                 5296 	inc	hl
   19D8 70                 5297 	ld	(hl),b
                           5298 ;demo.c:821: cmd.dest_y = 0;
   19D9 11r0As41           5299 	ld	de,#_cmd + 6
   19DC EB                 5300 	ex	de,hl
   19DD 36 00              5301 	ld	(hl),#0x00
   19DF 23                 5302 	inc	hl
   19E0 36 00              5303 	ld	(hl),#0x00
                           5304 ;demo.c:822: vdp_copier(&cmd);
   19E2 C5                 5305 	push	bc
   19E3 21r04s41           5306 	ld	hl,#_cmd
   19E6 E5                 5307 	push	hl
   19E7 CDr00s00           5308 	call	_vdp_copier
   19EA F1                 5309 	pop	af
   19EB C1                 5310 	pop	bc
                           5311 ;demo.c:823: cmd.dest_y = 256;
   19EC 11r0As41           5312 	ld	de,#_cmd + 6
   19EF EB                 5313 	ex	de,hl
   19F0 36 00              5314 	ld	(hl),#0x00
   19F2 23                 5315 	inc	hl
   19F3 36 01              5316 	ld	(hl),#0x01
                           5317 ;demo.c:824: vdp_copier(&cmd);
   19F5 C5                 5318 	push	bc
   19F6 21r04s41           5319 	ld	hl,#_cmd
   19F9 E5                 5320 	push	hl
   19FA CDr00s00           5321 	call	_vdp_copier
   19FD F1                 5322 	pop	af
   19FE C1                 5323 	pop	bc
                           5324 ;demo.c:818: for (x = 248; x >= 0; x-=8) {
   19FF 79                 5325 	ld	a,c
   1A00 C6 F8              5326 	add	a,#0xF8
   1A02 4F                 5327 	ld	c,a
   1A03 78                 5328 	ld	a,b
   1A04 CE FF              5329 	adc	a,#0xFF
   1A06 47                 5330 	ld	b,a
   1A07 18 C3              5331 	jr	00137$
   1A09                    5332 00140$:
                           5333 ;demo.c:827: for (x=0;x < 8;x++) {
   1A09 DD 36 FE 00        5334 	ld	-2 (ix),#0x00
   1A0D DD 36 FF 00        5335 	ld	-1 (ix),#0x00
   1A11                    5336 00145$:
   1A11 DD 7E FE           5337 	ld	a,-2 (ix)
   1A14 D6 08              5338 	sub	a,#0x08
   1A16 DD 7E FF           5339 	ld	a,-1 (ix)
   1A19 DE 00              5340 	sbc	a,#0x00
   1A1B F2r75s1A           5341 	jp	P,00148$
                           5342 ;demo.c:829: for (y=0;y < 9;y++) {
   1A1E 11 00 00           5343 	ld	de,#0x0000
   1A21                    5344 00141$:
   1A21 7B                 5345 	ld	a,e
   1A22 D6 09              5346 	sub	a,#0x09
   1A24 7A                 5347 	ld	a,d
   1A25 DE 00              5348 	sbc	a,#0x00
   1A27 F2r6As1A           5349 	jp	P,00147$
                           5350 ;demo.c:830: boxes_x[4] = 0;
   1A2A 01r73s41           5351 	ld	bc,#_boxes_x + 4
   1A2D 3E 00              5352 	ld	a,#0x00
   1A2F 02                 5353 	ld	(bc),a
                           5354 ;demo.c:831: boxes_y[4] = 768+2*36;
   1A30 21r7Cs41           5355 	ld	hl, #_boxes_y + 8
   1A33 36 48              5356 	ld	(hl),#0x48
   1A35 23                 5357 	inc	hl
   1A36 36 03              5358 	ld	(hl),#0x03
                           5359 ;demo.c:832: boxi = 4;
   1A38 21r7Es41           5360 	ld	hl,#_boxi + 0
   1A3B 36 04              5361 	ld	(hl), #0x04
                           5362 ;demo.c:833: drawbox((x*36),y*18);
   1A3D 4B                 5363 	ld	c,e
   1A3E D5                 5364 	push	de
   1A3F 79                 5365 	ld	a,c
   1A40 5F                 5366 	ld	e,a
   1A41 87                 5367 	add	a,a
   1A42 87                 5368 	add	a,a
   1A43 87                 5369 	add	a,a
   1A44 83                 5370 	add	a,e
   1A45 87                 5371 	add	a,a
   1A46 D1                 5372 	pop	de
   1A47 4F                 5373 	ld	c,a
   1A48 DD 46 FE           5374 	ld	b,-2 (ix)
   1A4B D5                 5375 	push	de
   1A4C 78                 5376 	ld	a,b
   1A4D 5F                 5377 	ld	e,a
   1A4E 87                 5378 	add	a,a
   1A4F 87                 5379 	add	a,a
   1A50 87                 5380 	add	a,a
   1A51 83                 5381 	add	a,e
   1A52 87                 5382 	add	a,a
   1A53 87                 5383 	add	a,a
   1A54 D1                 5384 	pop	de
   1A55 47                 5385 	ld	b,a
   1A56 D5                 5386 	push	de
   1A57 79                 5387 	ld	a,c
   1A58 F5                 5388 	push	af
   1A59 33                 5389 	inc	sp
   1A5A C5                 5390 	push	bc
   1A5B 33                 5391 	inc	sp
   1A5C CDr84s18           5392 	call	_drawbox
   1A5F F1                 5393 	pop	af
   1A60 D1                 5394 	pop	de
                           5395 ;demo.c:834: boxi = 0;
   1A61 21r7Es41           5396 	ld	hl,#_boxi + 0
   1A64 36 00              5397 	ld	(hl), #0x00
                           5398 ;demo.c:829: for (y=0;y < 9;y++) {
   1A66 13                 5399 	inc	de
   1A67 C3r21s1A           5400 	jp	00141$
   1A6A                    5401 00147$:
                           5402 ;demo.c:827: for (x=0;x < 8;x++) {
   1A6A DD 34 FE           5403 	inc	-2 (ix)
   1A6D 20 03              5404 	jr	NZ,00180$
   1A6F DD 34 FF           5405 	inc	-1 (ix)
   1A72                    5406 00180$:
   1A72 C3r11s1A           5407 	jp	00145$
   1A75                    5408 00148$:
                           5409 ;demo.c:838: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   1A75 21 08 B4           5410 	ld	hl,#0xB408
   1A78 E5                 5411 	push	hl
   1A79 21r3Fs1D           5412 	ld	hl,#__str_12
   1A7C E5                 5413 	push	hl
   1A7D CDr20s11           5414 	call	_drawsine
   1A80 F1                 5415 	pop	af
   1A81 F1                 5416 	pop	af
                           5417 ;demo.c:840: vdp_load_palette(boxes_palette);
   1A82 21rE0s40           5418 	ld	hl,#_boxes_palette
   1A85 E5                 5419 	push	hl
   1A86 CDr00s00           5420 	call	_vdp_load_palette
   1A89 F1                 5421 	pop	af
   1A8A                    5422 00106$:
                           5423 ;demo.c:843: if (bt >= 80) bt+=8;
   1A8A 3Ar83s41           5424 	ld	a,(#_bt+0)
   1A8D D6 50              5425 	sub	a,#0x50
   1A8F 3Ar84s41           5426 	ld	a,(#_bt+1)
   1A92 DE 00              5427 	sbc	a,#0x00
   1A94 FArADs1A           5428 	jp	M,00108$
   1A97 21r83s41           5429 	ld	hl,#_bt
   1A9A 7E                 5430 	ld	a,(hl)
   1A9B C6 08              5431 	add	a,#0x08
   1A9D 23                 5432 	inc	hl
   1A9E 2B                 5433 	dec	hl
   1A9F C5                 5434 	push	bc
   1AA0 4F                 5435 	ld	c, a
   1AA1 23                 5436 	inc	hl
   1AA2 7E                 5437 	ld	a, (hl)
   1AA3 47                 5438 	ld	b, a
   1AA4 79                 5439 	ld	a, c
   1AA5 2B                 5440 	dec	hl
   1AA6 77                 5441 	ld	(hl), a
   1AA7 78                 5442 	ld	a, b
   1AA8 C1                 5443 	pop	bc
   1AA9 CE 00              5444 	adc	a,#0x00
   1AAB 23                 5445 	inc	hl
   1AAC 77                 5446 	ld	(hl),a
   1AAD                    5447 00108$:
                           5448 ;demo.c:844: if (bt < 80 && bt >= 60) bt+=7;
   1AAD 3Ar83s41           5449 	ld	a,(#_bt+0)
   1AB0 D6 50              5450 	sub	a,#0x50
   1AB2 3Ar84s41           5451 	ld	a,(#_bt+1)
   1AB5 DE 00              5452 	sbc	a,#0x00
   1AB7 F2rDDs1A           5453 	jp	P,00110$
   1ABA 3Ar83s41           5454 	ld	a,(#_bt+0)
   1ABD D6 3C              5455 	sub	a,#0x3C
   1ABF 3Ar84s41           5456 	ld	a,(#_bt+1)
   1AC2 DE 00              5457 	sbc	a,#0x00
   1AC4 FArDDs1A           5458 	jp	M,00110$
   1AC7 21r83s41           5459 	ld	hl,#_bt
   1ACA 7E                 5460 	ld	a,(hl)
   1ACB C6 07              5461 	add	a,#0x07
   1ACD 23                 5462 	inc	hl
   1ACE 2B                 5463 	dec	hl
   1ACF C5                 5464 	push	bc
   1AD0 4F                 5465 	ld	c, a
   1AD1 23                 5466 	inc	hl
   1AD2 7E                 5467 	ld	a, (hl)
   1AD3 47                 5468 	ld	b, a
   1AD4 79                 5469 	ld	a, c
   1AD5 2B                 5470 	dec	hl
   1AD6 77                 5471 	ld	(hl), a
   1AD7 78                 5472 	ld	a, b
   1AD8 C1                 5473 	pop	bc
   1AD9 CE 00              5474 	adc	a,#0x00
   1ADB 23                 5475 	inc	hl
   1ADC 77                 5476 	ld	(hl),a
   1ADD                    5477 00110$:
                           5478 ;demo.c:845: if (bt < 60 && bt >= 40) bt+=6;
   1ADD 3Ar83s41           5479 	ld	a,(#_bt+0)
   1AE0 D6 3C              5480 	sub	a,#0x3C
   1AE2 3Ar84s41           5481 	ld	a,(#_bt+1)
   1AE5 DE 00              5482 	sbc	a,#0x00
   1AE7 F2r0Ds1B           5483 	jp	P,00113$
   1AEA 3Ar83s41           5484 	ld	a,(#_bt+0)
   1AED D6 28              5485 	sub	a,#0x28
   1AEF 3Ar84s41           5486 	ld	a,(#_bt+1)
   1AF2 DE 00              5487 	sbc	a,#0x00
   1AF4 FAr0Ds1B           5488 	jp	M,00113$
   1AF7 21r83s41           5489 	ld	hl,#_bt
   1AFA 7E                 5490 	ld	a,(hl)
   1AFB C6 06              5491 	add	a,#0x06
   1AFD 23                 5492 	inc	hl
   1AFE 2B                 5493 	dec	hl
   1AFF C5                 5494 	push	bc
   1B00 4F                 5495 	ld	c, a
   1B01 23                 5496 	inc	hl
   1B02 7E                 5497 	ld	a, (hl)
   1B03 47                 5498 	ld	b, a
   1B04 79                 5499 	ld	a, c
   1B05 2B                 5500 	dec	hl
   1B06 77                 5501 	ld	(hl), a
   1B07 78                 5502 	ld	a, b
   1B08 C1                 5503 	pop	bc
   1B09 CE 00              5504 	adc	a,#0x00
   1B0B 23                 5505 	inc	hl
   1B0C 77                 5506 	ld	(hl),a
   1B0D                    5507 00113$:
                           5508 ;demo.c:846: if (bt < 40 && bt >= 10) bt+=5;
   1B0D 3Ar83s41           5509 	ld	a,(#_bt+0)
   1B10 D6 28              5510 	sub	a,#0x28
   1B12 3Ar84s41           5511 	ld	a,(#_bt+1)
   1B15 DE 00              5512 	sbc	a,#0x00
   1B17 F2r3Ds1B           5513 	jp	P,00116$
   1B1A 3Ar83s41           5514 	ld	a,(#_bt+0)
   1B1D D6 0A              5515 	sub	a,#0x0A
   1B1F 3Ar84s41           5516 	ld	a,(#_bt+1)
   1B22 DE 00              5517 	sbc	a,#0x00
   1B24 FAr3Ds1B           5518 	jp	M,00116$
   1B27 21r83s41           5519 	ld	hl,#_bt
   1B2A 7E                 5520 	ld	a,(hl)
   1B2B C6 05              5521 	add	a,#0x05
   1B2D 23                 5522 	inc	hl
   1B2E 2B                 5523 	dec	hl
   1B2F C5                 5524 	push	bc
   1B30 4F                 5525 	ld	c, a
   1B31 23                 5526 	inc	hl
   1B32 7E                 5527 	ld	a, (hl)
   1B33 47                 5528 	ld	b, a
   1B34 79                 5529 	ld	a, c
   1B35 2B                 5530 	dec	hl
   1B36 77                 5531 	ld	(hl), a
   1B37 78                 5532 	ld	a, b
   1B38 C1                 5533 	pop	bc
   1B39 CE 00              5534 	adc	a,#0x00
   1B3B 23                 5535 	inc	hl
   1B3C 77                 5536 	ld	(hl),a
   1B3D                    5537 00116$:
                           5538 ;demo.c:847: if (bt < 10 ) bt+=4;
   1B3D 3Ar83s41           5539 	ld	a,(#_bt+0)
   1B40 D6 0A              5540 	sub	a,#0x0A
   1B42 3Ar84s41           5541 	ld	a,(#_bt+1)
   1B45 DE 00              5542 	sbc	a,#0x00
   1B47 F2r60s1B           5543 	jp	P,00119$
   1B4A 21r83s41           5544 	ld	hl,#_bt
   1B4D 7E                 5545 	ld	a,(hl)
   1B4E C6 04              5546 	add	a,#0x04
   1B50 23                 5547 	inc	hl
   1B51 2B                 5548 	dec	hl
   1B52 C5                 5549 	push	bc
   1B53 4F                 5550 	ld	c, a
   1B54 23                 5551 	inc	hl
   1B55 7E                 5552 	ld	a, (hl)
   1B56 47                 5553 	ld	b, a
   1B57 79                 5554 	ld	a, c
   1B58 2B                 5555 	dec	hl
   1B59 77                 5556 	ld	(hl), a
   1B5A 78                 5557 	ld	a, b
   1B5B C1                 5558 	pop	bc
   1B5C CE 00              5559 	adc	a,#0x00
   1B5E 23                 5560 	inc	hl
   1B5F 77                 5561 	ld	(hl),a
   1B60                    5562 00119$:
                           5563 ;demo.c:850: cmd.source_x = bx;
   1B60 ED 4Br7Fs41        5564 	ld	bc,(_bx)
   1B64 21r04s41           5565 	ld	hl,#_cmd
   1B67 71                 5566 	ld	(hl),c
   1B68 23                 5567 	inc	hl
   1B69 70                 5568 	ld	(hl),b
                           5569 ;demo.c:851: cmd.source_y = bt;
   1B6A 01r06s41           5570 	ld	bc,#_cmd + 2
   1B6D ED 5Br83s41        5571 	ld	de,(_bt)
   1B71 69                 5572 	ld	l,c
   1B72 60                 5573 	ld	h,b
   1B73 73                 5574 	ld	(hl),e
   1B74 23                 5575 	inc	hl
   1B75 72                 5576 	ld	(hl),d
                           5577 ;demo.c:852: cmd.dest_x = 0;
   1B76 21r08s41           5578 	ld	hl, #_cmd + 4
   1B79 36 00              5579 	ld	(hl),#0x00
   1B7B 23                 5580 	inc	hl
   1B7C 36 00              5581 	ld	(hl),#0x00
                           5582 ;demo.c:853: cmd.dest_y = 256;
   1B7E 21r0As41           5583 	ld	hl, #_cmd + 6
   1B81 36 00              5584 	ld	(hl),#0x00
   1B83 23                 5585 	inc	hl
   1B84 36 01              5586 	ld	(hl),#0x01
                           5587 ;demo.c:854: cmd.size_x = 36;
   1B86 21r0Cs41           5588 	ld	hl, #_cmd + 8
   1B89 36 24              5589 	ld	(hl),#0x24
   1B8B 23                 5590 	inc	hl
   1B8C 36 00              5591 	ld	(hl),#0x00
                           5592 ;demo.c:855: cmd.size_y = 36;
   1B8E 21r0Es41           5593 	ld	hl, #_cmd + 10
   1B91 36 24              5594 	ld	(hl),#0x24
   1B93 23                 5595 	inc	hl
   1B94 36 00              5596 	ld	(hl),#0x00
                           5597 ;demo.c:856: cmd.data = 0;
                           5598 ;demo.c:857: cmd.argument = 0x00;
   1B96 3E 00              5599 	ld	a,#0x00
   1B98 32r10s41           5600 	ld	(#_cmd + 12),a
   1B9B 32r11s41           5601 	ld	(#_cmd + 13),a
                           5602 ;demo.c:858: cmd.command = 0xD0; // HMMM
   1B9E 3E D0              5603 	ld	a,#0xD0
   1BA0 32r12s41           5604 	ld	(#_cmd + 14),a
                           5605 ;demo.c:859: vdp_copier(&cmd);
   1BA3 21r04s41           5606 	ld	hl,#_cmd
   1BA6 E5                 5607 	push	hl
   1BA7 CDr00s00           5608 	call	_vdp_copier
   1BAA F1                 5609 	pop	af
                           5610 ;demo.c:861: pbx = bx;
   1BAB 2Ar7Fs41           5611 	ld	hl,(_bx)
   1BAE FD 21r89s41        5612 	ld	iy,#_pbx
   1BB2 FD 75 00           5613 	ld	0 (iy),l
   1BB5 FD 21r89s41        5614 	ld	iy,#_pbx
   1BB9 FD 74 01           5615 	ld	1 (iy),h
                           5616 ;demo.c:862: pbt = bt;
   1BBC 2Ar83s41           5617 	ld	hl,(_bt)
   1BBF FD 21r8Bs41        5618 	ld	iy,#_pbt
   1BC3 FD 75 00           5619 	ld	0 (iy),l
   1BC6 FD 21r8Bs41        5620 	ld	iy,#_pbt
   1BCA FD 74 01           5621 	ld	1 (iy),h
                           5622 ;demo.c:867: bonc = 1;
   1BCD 21r87s41           5623 	ld	hl,#_bonc + 0
   1BD0 36 01              5624 	ld	(hl), #0x01
   1BD2 21r88s41           5625 	ld	hl,#_bonc + 1
   1BD5 36 00              5626 	ld	(hl), #0x00
                           5627 ;demo.c:868: if (bt > by) {
   1BD7 21r81s41           5628 	ld	hl,#_by
   1BDA 7E                 5629 	ld	a,(hl)
   1BDB FD 21r83s41        5630 	ld	iy,#_bt
   1BDF FD 96 00           5631 	sub	a,0 (iy)
   1BE2 23                 5632 	inc	hl
   1BE3 7E                 5633 	ld	a,(hl)
   1BE4 FD 21r83s41        5634 	ld	iy,#_bt
   1BE8 FD 9E 01           5635 	sbc	a,1 (iy)
   1BEB F2r29s1D           5636 	jp	P,00135$
                           5637 ;demo.c:869: bt = by;
   1BEE 2Ar81s41           5638 	ld	hl,(_by)
   1BF1 FD 21r83s41        5639 	ld	iy,#_bt
   1BF5 FD 75 00           5640 	ld	0 (iy),l
   1BF8 FD 21r83s41        5641 	ld	iy,#_bt
   1BFC FD 74 01           5642 	ld	1 (iy),h
                           5643 ;demo.c:870: drawbox(bx,bt);
   1BFF 21r83s41           5644 	ld	hl,#_bt + 0
   1C02 4E                 5645 	ld	c,(hl)
   1C03 21r7Fs41           5646 	ld	hl,#_bx + 0
   1C06 46                 5647 	ld	b,(hl)
   1C07 79                 5648 	ld	a,c
   1C08 F5                 5649 	push	af
   1C09 33                 5650 	inc	sp
   1C0A C5                 5651 	push	bc
   1C0B 33                 5652 	inc	sp
   1C0C CDr84s18           5653 	call	_drawbox
   1C0F F1                 5654 	pop	af
                           5655 ;demo.c:871: bt = 0;
   1C10 21r83s41           5656 	ld	hl,#_bt + 0
   1C13 36 00              5657 	ld	(hl), #0x00
   1C15 21r84s41           5658 	ld	hl,#_bt + 1
   1C18 36 00              5659 	ld	(hl), #0x00
                           5660 ;demo.c:872: if (by > 48) {
   1C1A 3E 30              5661 	ld	a,#0x30
   1C1C FD 21r81s41        5662 	ld	iy,#_by
   1C20 FD 96 00           5663 	sub	a,0 (iy)
   1C23 3E 00              5664 	ld	a,#0x00
   1C25 FD 21r81s41        5665 	ld	iy,#_by
   1C29 FD 9E 01           5666 	sbc	a,1 (iy)
   1C2C F2r84s1C           5667 	jp	P,00123$
                           5668 ;demo.c:873: bonc = 0;
   1C2F 21r87s41           5669 	ld	hl,#_bonc + 0
   1C32 36 00              5670 	ld	(hl), #0x00
   1C34 21r88s41           5671 	ld	hl,#_bonc + 1
   1C37 36 00              5672 	ld	(hl), #0x00
                           5673 ;demo.c:874: by-=16;
   1C39 21r81s41           5674 	ld	hl,#_by
   1C3C 7E                 5675 	ld	a,(hl)
   1C3D C6 F0              5676 	add	a,#0xF0
   1C3F 77                 5677 	ld	(hl),a
   1C40 23                 5678 	inc	hl
   1C41 7E                 5679 	ld	a,(hl)
   1C42 CE FF              5680 	adc	a,#0xFF
   1C44 77                 5681 	ld	(hl),a
                           5682 ;demo.c:875: prevbox_of = boxes_of[boxi];
   1C45 3Ar7Es41           5683 	ld	a,(#_boxi+0)
   1C48 87                 5684 	add	a,a
   1C49 C6r8D              5685 	add	a,#<_boxes_of
   1C4B 6F                 5686 	ld	l,a
   1C4C 3Es41              5687 	ld	a,#>_boxes_of
   1C4E CE 00              5688 	adc	a,#0x00
   1C50 67                 5689 	ld	h,a
   1C51 4E                 5690 	ld	c,(hl)
   1C52 23                 5691 	inc	hl
   1C53 21r97s41           5692 	ld	hl,#_prevbox_of + 0
   1C56 71                 5693 	ld	(hl), c
                           5694 ;demo.c:876: by+=prevbox_of;
   1C57 21r97s41           5695 	ld	hl,#_prevbox_of + 0
   1C5A 4E                 5696 	ld	c,(hl)
   1C5B 06 00              5697 	ld	b,#0x00
   1C5D 21r81s41           5698 	ld	hl,#_by
   1C60 7E                 5699 	ld	a,(hl)
   1C61 81                 5700 	add	a,c
   1C62 23                 5701 	inc	hl
   1C63 2B                 5702 	dec	hl
   1C64 C5                 5703 	push	bc
   1C65 4F                 5704 	ld	c, a
   1C66 23                 5705 	inc	hl
   1C67 7E                 5706 	ld	a, (hl)
   1C68 47                 5707 	ld	b, a
   1C69 79                 5708 	ld	a, c
   1C6A 2B                 5709 	dec	hl
   1C6B 77                 5710 	ld	(hl), a
   1C6C 78                 5711 	ld	a, b
   1C6D C1                 5712 	pop	bc
   1C6E 88                 5713 	adc	a,b
   1C6F 23                 5714 	inc	hl
   1C70 77                 5715 	ld	(hl),a
                           5716 ;demo.c:877: boxi++;
   1C71 FD 21r7Es41        5717 	ld	iy,#_boxi
   1C75 FD 34 00           5718 	inc	0 (iy)
                           5719 ;demo.c:878: if (boxi >= 4) boxi = 0;
   1C78 3Ar7Es41           5720 	ld	a,(#_boxi+0)
   1C7B D6 04              5721 	sub	a,#0x04
   1C7D 38 05              5722 	jr	C,00123$
   1C7F 21r7Es41           5723 	ld	hl,#_boxi + 0
   1C82 36 00              5724 	ld	(hl), #0x00
   1C84                    5725 00123$:
                           5726 ;demo.c:881: if (by <= 48) {
   1C84 3E 30              5727 	ld	a,#0x30
   1C86 FD 21r81s41        5728 	ld	iy,#_by
   1C8A FD 96 00           5729 	sub	a,0 (iy)
   1C8D 3E 00              5730 	ld	a,#0x00
   1C8F FD 21r81s41        5731 	ld	iy,#_by
   1C93 FD 9E 01           5732 	sbc	a,1 (iy)
   1C96 FAr3As1D           5733 	jp	M,00149$
                           5734 ;demo.c:882: bx-=16;
   1C99 21r7Fs41           5735 	ld	hl,#_bx
   1C9C 7E                 5736 	ld	a,(hl)
   1C9D C6 F0              5737 	add	a,#0xF0
   1C9F 77                 5738 	ld	(hl),a
   1CA0 23                 5739 	inc	hl
   1CA1 7E                 5740 	ld	a,(hl)
   1CA2 CE FF              5741 	adc	a,#0xFF
   1CA4 77                 5742 	ld	(hl),a
                           5743 ;demo.c:884: if (bx>128)bo+=8;
   1CA5 3E 80              5744 	ld	a,#0x80
   1CA7 FD 21r7Fs41        5745 	ld	iy,#_bx
   1CAB FD 96 00           5746 	sub	a,0 (iy)
   1CAE 3E 00              5747 	ld	a,#0x00
   1CB0 FD 21r7Fs41        5748 	ld	iy,#_bx
   1CB4 FD 9E 01           5749 	sbc	a,1 (iy)
   1CB7 07                 5750 	rlca
   1CB8 E6 01              5751 	and	a,#0x01
   1CBA 4F                 5752 	ld	c,a
   1CBB B7                 5753 	or	a,a
   1CBC 28 18              5754 	jr	Z,00125$
   1CBE 21r85s41           5755 	ld	hl,#_bo
   1CC1 7E                 5756 	ld	a,(hl)
   1CC2 C6 08              5757 	add	a,#0x08
   1CC4 23                 5758 	inc	hl
   1CC5 2B                 5759 	dec	hl
   1CC6 C5                 5760 	push	bc
   1CC7 4F                 5761 	ld	c, a
   1CC8 23                 5762 	inc	hl
   1CC9 7E                 5763 	ld	a, (hl)
   1CCA 47                 5764 	ld	b, a
   1CCB 79                 5765 	ld	a, c
   1CCC 2B                 5766 	dec	hl
   1CCD 77                 5767 	ld	(hl), a
   1CCE 78                 5768 	ld	a, b
   1CCF C1                 5769 	pop	bc
   1CD0 CE 00              5770 	adc	a,#0x00
   1CD2 23                 5771 	inc	hl
   1CD3 77                 5772 	ld	(hl),a
   1CD4 18 0C              5773 	jr	00126$
   1CD6                    5774 00125$:
                           5775 ;demo.c:885: else bo-=8;
   1CD6 21r85s41           5776 	ld	hl,#_bo
   1CD9 7E                 5777 	ld	a,(hl)
   1CDA C6 F8              5778 	add	a,#0xF8
   1CDC 77                 5779 	ld	(hl),a
   1CDD 23                 5780 	inc	hl
   1CDE 7E                 5781 	ld	a,(hl)
   1CDF CE FF              5782 	adc	a,#0xFF
   1CE1 77                 5783 	ld	(hl),a
   1CE2                    5784 00126$:
                           5785 ;demo.c:886: if (bo > 192) bo = 0;
   1CE2 3E C0              5786 	ld	a,#0xC0
   1CE4 FD 21r85s41        5787 	ld	iy,#_bo
   1CE8 FD 96 00           5788 	sub	a,0 (iy)
   1CEB 3E 00              5789 	ld	a,#0x00
   1CED FD 21r85s41        5790 	ld	iy,#_bo
   1CF1 FD 9E 01           5791 	sbc	a,1 (iy)
   1CF4 F2r01s1D           5792 	jp	P,00128$
   1CF7 21r85s41           5793 	ld	hl,#_bo + 0
   1CFA 36 00              5794 	ld	(hl), #0x00
   1CFC 21r86s41           5795 	ld	hl,#_bo + 1
   1CFF 36 00              5796 	ld	(hl), #0x00
   1D01                    5797 00128$:
                           5798 ;demo.c:887: if (bx>128)by=84+bo;
   1D01 AF                 5799 	xor	a,a
   1D02 B1                 5800 	or	a,c
   1D03 28 12              5801 	jr	Z,00130$
   1D05 21r81s41           5802 	ld	hl,#_by
   1D08 3Ar85s41           5803 	ld	a,(#_bo+0)
   1D0B C6 54              5804 	add	a,#0x54
   1D0D 77                 5805 	ld	(hl),a
   1D0E 3Ar86s41           5806 	ld	a,(#_bo+1)
   1D11 CE 00              5807 	adc	a,#0x00
   1D13 23                 5808 	inc	hl
   1D14 77                 5809 	ld	(hl),a
   1D15 18 23              5810 	jr	00149$
   1D17                    5811 00130$:
                           5812 ;demo.c:888: else by=36+36+84+bo;
   1D17 21r81s41           5813 	ld	hl,#_by
   1D1A 3Ar85s41           5814 	ld	a,(#_bo+0)
   1D1D C6 9C              5815 	add	a,#0x9C
   1D1F 77                 5816 	ld	(hl),a
   1D20 3Ar86s41           5817 	ld	a,(#_bo+1)
   1D23 CE 00              5818 	adc	a,#0x00
   1D25 23                 5819 	inc	hl
   1D26 77                 5820 	ld	(hl),a
   1D27 18 11              5821 	jr	00149$
   1D29                    5822 00135$:
                           5823 ;demo.c:891: drawbox(bx,bt);
   1D29 21r83s41           5824 	ld	hl,#_bt + 0
   1D2C 4E                 5825 	ld	c,(hl)
   1D2D 21r7Fs41           5826 	ld	hl,#_bx + 0
   1D30 46                 5827 	ld	b,(hl)
   1D31 79                 5828 	ld	a,c
   1D32 F5                 5829 	push	af
   1D33 33                 5830 	inc	sp
   1D34 C5                 5831 	push	bc
   1D35 33                 5832 	inc	sp
   1D36 CDr84s18           5833 	call	_drawbox
   1D39 F1                 5834 	pop	af
   1D3A                    5835 00149$:
   1D3A DD F9              5836 	ld	sp,ix
   1D3C DD E1              5837 	pop	ix
   1D3E C9                 5838 	ret
   1D3F                    5839 _boxes_end::
   1D3F                    5840 __str_12:
   1D3F 4C 45 54 20 55 53  5841 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1D6A 00                 5842 	.db 0x00
                           5843 ;demo.c:900: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5844 ;	---------------------------------
                           5845 ; Function drawtritile
                           5846 ; ---------------------------------
   1D6B                    5847 _drawtritile_start::
   1D6B                    5848 _drawtritile:
   1D6B DD E5              5849 	push	ix
   1D6D DD 21 00 00        5850 	ld	ix,#0
   1D71 DD 39              5851 	add	ix,sp
                           5852 ;demo.c:901: cmd.source_x = tx;
   1D73 DD 4E 04           5853 	ld	c,4 (ix)
   1D76 06 00              5854 	ld	b,#0x00
   1D78 21r04s41           5855 	ld	hl,#_cmd
   1D7B 71                 5856 	ld	(hl),c
   1D7C 23                 5857 	inc	hl
   1D7D 70                 5858 	ld	(hl),b
                           5859 ;demo.c:902: cmd.source_y = ty-1;
   1D7E 01r06s41           5860 	ld	bc,#_cmd + 2
   1D81 DD 5E 05           5861 	ld	e,5 (ix)
   1D84 DD 56 06           5862 	ld	d,6 (ix)
   1D87 1B                 5863 	dec	de
   1D88 69                 5864 	ld	l,c
   1D89 60                 5865 	ld	h,b
   1D8A 73                 5866 	ld	(hl),e
   1D8B 23                 5867 	inc	hl
   1D8C 72                 5868 	ld	(hl),d
                           5869 ;demo.c:903: cmd.dest_x = x;
   1D8D 01r08s41           5870 	ld	bc,#_cmd + 4
   1D90 DD 5E 07           5871 	ld	e,7 (ix)
   1D93 16 00              5872 	ld	d,#0x00
   1D95 69                 5873 	ld	l,c
   1D96 60                 5874 	ld	h,b
   1D97 73                 5875 	ld	(hl),e
   1D98 23                 5876 	inc	hl
   1D99 72                 5877 	ld	(hl),d
                           5878 ;demo.c:904: cmd.dest_y = y;
   1D9A 01r0As41           5879 	ld	bc,#_cmd + 6
   1D9D DD 5E 08           5880 	ld	e,8 (ix)
   1DA0 16 00              5881 	ld	d,#0x00
   1DA2 69                 5882 	ld	l,c
   1DA3 60                 5883 	ld	h,b
   1DA4 73                 5884 	ld	(hl),e
   1DA5 23                 5885 	inc	hl
   1DA6 72                 5886 	ld	(hl),d
                           5887 ;demo.c:905: cmd.size_x = 16;
   1DA7 21r0Cs41           5888 	ld	hl, #_cmd + 8
   1DAA 36 10              5889 	ld	(hl),#0x10
   1DAC 23                 5890 	inc	hl
   1DAD 36 00              5891 	ld	(hl),#0x00
                           5892 ;demo.c:906: cmd.size_y = 16;
   1DAF 21r0Es41           5893 	ld	hl, #_cmd + 10
   1DB2 36 10              5894 	ld	(hl),#0x10
   1DB4 23                 5895 	inc	hl
   1DB5 36 00              5896 	ld	(hl),#0x00
                           5897 ;demo.c:907: cmd.data = 0;
                           5898 ;demo.c:908: cmd.argument = 0x00;
   1DB7 3E 00              5899 	ld	a,#0x00
   1DB9 32r10s41           5900 	ld	(#_cmd + 12),a
   1DBC 32r11s41           5901 	ld	(#_cmd + 13),a
                           5902 ;demo.c:909: cmd.command = 0xd0; // HMMM
   1DBF 3E D0              5903 	ld	a,#0xD0
   1DC1 32r12s41           5904 	ld	(#_cmd + 14),a
                           5905 ;demo.c:910: vdp_copier(&cmd);
   1DC4 21r04s41           5906 	ld	hl,#_cmd
   1DC7 E5                 5907 	push	hl
   1DC8 CDr00s00           5908 	call	_vdp_copier
   1DCB F1                 5909 	pop	af
   1DCC DD E1              5910 	pop	ix
   1DCE C9                 5911 	ret
   1DCF                    5912 _drawtritile_end::
                           5913 ;demo.c:913: void drawtilescreen(char* tripic) {
                           5914 ;	---------------------------------
                           5915 ; Function drawtilescreen
                           5916 ; ---------------------------------
   1DCF                    5917 _drawtilescreen_start::
   1DCF                    5918 _drawtilescreen:
   1DCF DD E5              5919 	push	ix
   1DD1 DD 21 00 00        5920 	ld	ix,#0
   1DD5 DD 39              5921 	add	ix,sp
   1DD7 21 F8 FF           5922 	ld	hl,#-8
   1DDA 39                 5923 	add	hl,sp
   1DDB F9                 5924 	ld	sp,hl
                           5925 ;demo.c:914: int x = 0;
   1DDC DD 36 FE 00        5926 	ld	-2 (ix),#0x00
   1DE0 DD 36 FF 00        5927 	ld	-1 (ix),#0x00
                           5928 ;demo.c:917: while(i < 192) {
   1DE4 DD 36 FC 00        5929 	ld	-4 (ix),#0x00
   1DE8 DD 36 FD 00        5930 	ld	-3 (ix),#0x00
   1DEC DD 36 FA 00        5931 	ld	-6 (ix),#0x00
   1DF0 DD 36 FB 00        5932 	ld	-5 (ix),#0x00
   1DF4                    5933 00103$:
   1DF4 DD 7E FA           5934 	ld	a,-6 (ix)
   1DF7 D6 C0              5935 	sub	a,#0xC0
   1DF9 DD 7E FB           5936 	ld	a,-5 (ix)
   1DFC DE 00              5937 	sbc	a,#0x00
   1DFE F2r85s1E           5938 	jp	P,00106$
                           5939 ;demo.c:918: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1E01 DD 7E FC           5940 	ld	a,-4 (ix)
   1E04 DD 77 F8           5941 	ld	-8 (ix),a
   1E07 DD 7E FE           5942 	ld	a,-2 (ix)
   1E0A DD 77 F9           5943 	ld	-7 (ix),a
   1E0D DD 7E 04           5944 	ld	a,4 (ix)
   1E10 DD 86 FA           5945 	add	a,-6 (ix)
   1E13 4F                 5946 	ld	c,a
   1E14 DD 7E 05           5947 	ld	a,5 (ix)
   1E17 DD 8E FB           5948 	adc	a,-5 (ix)
   1E1A 47                 5949 	ld	b,a
   1E1B 0A                 5950 	ld	a,(bc)
   1E1C 4F                 5951 	ld	c,a
   1E1D 87                 5952 	add	a,a
   1E1E C6r20              5953 	add	a,#<_tri_lookup_y
   1E20 6F                 5954 	ld	l,a
   1E21 3Es01              5955 	ld	a,#>_tri_lookup_y
   1E23 CE 00              5956 	adc	a,#0x00
   1E25 67                 5957 	ld	h,a
   1E26 46                 5958 	ld	b,(hl)
   1E27 23                 5959 	inc	hl
   1E28 56                 5960 	ld	d,(hl)
   1E29 3Er00              5961 	ld	a,#<_tri_lookup_x
   1E2B 81                 5962 	add	a,c
   1E2C 6F                 5963 	ld	l,a
   1E2D 3Es01              5964 	ld	a,#>_tri_lookup_x
   1E2F CE 00              5965 	adc	a,#0x00
   1E31 67                 5966 	ld	h,a
   1E32 4E                 5967 	ld	c,(hl)
   1E33 DD 66 F8           5968 	ld	h,-8 (ix)
   1E36 DD 6E F9           5969 	ld	l,-7 (ix)
   1E39 E5                 5970 	push	hl
   1E3A 58                 5971 	ld	e,b
   1E3B D5                 5972 	push	de
   1E3C 79                 5973 	ld	a,c
   1E3D F5                 5974 	push	af
   1E3E 33                 5975 	inc	sp
   1E3F CDr6Bs1D           5976 	call	_drawtritile
   1E42 F1                 5977 	pop	af
   1E43 F1                 5978 	pop	af
   1E44 33                 5979 	inc	sp
                           5980 ;demo.c:919: x+=16;
   1E45 DD 7E FE           5981 	ld	a,-2 (ix)
   1E48 C6 10              5982 	add	a,#0x10
   1E4A DD 77 FE           5983 	ld	-2 (ix),a
   1E4D DD 7E FF           5984 	ld	a,-1 (ix)
   1E50 CE 00              5985 	adc	a,#0x00
   1E52 DD 77 FF           5986 	ld	-1 (ix),a
                           5987 ;demo.c:920: if (x >= 256) {x = 0; y+=16;}
   1E55 DD 7E FE           5988 	ld	a,-2 (ix)
   1E58 D6 00              5989 	sub	a,#0x00
   1E5A DD 7E FF           5990 	ld	a,-1 (ix)
   1E5D DE 01              5991 	sbc	a,#0x01
   1E5F FAr7As1E           5992 	jp	M,00102$
   1E62 DD 36 FE 00        5993 	ld	-2 (ix),#0x00
   1E66 DD 36 FF 00        5994 	ld	-1 (ix),#0x00
   1E6A DD 7E FC           5995 	ld	a,-4 (ix)
   1E6D C6 10              5996 	add	a,#0x10
   1E6F DD 77 FC           5997 	ld	-4 (ix),a
   1E72 DD 7E FD           5998 	ld	a,-3 (ix)
   1E75 CE 00              5999 	adc	a,#0x00
   1E77 DD 77 FD           6000 	ld	-3 (ix),a
   1E7A                    6001 00102$:
                           6002 ;demo.c:921: i++;
   1E7A DD 34 FA           6003 	inc	-6 (ix)
   1E7D 20 03              6004 	jr	NZ,00112$
   1E7F DD 34 FB           6005 	inc	-5 (ix)
   1E82                    6006 00112$:
   1E82 C3rF4s1D           6007 	jp	00103$
   1E85                    6008 00106$:
   1E85 DD F9              6009 	ld	sp,ix
   1E87 DD E1              6010 	pop	ix
   1E89 C9                 6011 	ret
   1E8A                    6012 _drawtilescreen_end::
                           6013 ;demo.c:937: void tritiles() {
                           6014 ;	---------------------------------
                           6015 ; Function tritiles
                           6016 ; ---------------------------------
   1E8A                    6017 _tritiles_start::
   1E8A                    6018 _tritiles:
   1E8A DD E5              6019 	push	ix
   1E8C DD 21 00 00        6020 	ld	ix,#0
   1E90 DD 39              6021 	add	ix,sp
   1E92 21 FB FF           6022 	ld	hl,#-5
   1E95 39                 6023 	add	hl,sp
   1E96 F9                 6024 	ld	sp,hl
                           6025 ;demo.c:944: if (tri_inited == 0) {
   1E97 AF                 6026 	xor	a,a
   1E98 21r98s41           6027 	ld	hl,#_tri_inited + 0
   1E9B B6                 6028 	or	a,(hl)
   1E9C C2r3Bs1F           6029 	jp	NZ,00102$
                           6030 ;demo.c:945: tri_inited = 1;
   1E9F FD 21r98s41        6031 	ld	iy,#_tri_inited
   1EA3 FD 36 00 01        6032 	ld	0 (iy),#0x01
                           6033 ;demo.c:947: cmd.size_x = 256;
   1EA7 21r0Cs41           6034 	ld	hl, #_cmd + 8
   1EAA 36 00              6035 	ld	(hl),#0x00
   1EAC 23                 6036 	inc	hl
   1EAD 36 01              6037 	ld	(hl),#0x01
                           6038 ;demo.c:948: cmd.size_y = 1;
   1EAF 21r0Es41           6039 	ld	hl, #_cmd + 10
   1EB2 36 01              6040 	ld	(hl),#0x01
   1EB4 23                 6041 	inc	hl
   1EB5 36 00              6042 	ld	(hl),#0x00
                           6043 ;demo.c:949: cmd.data = 0;
                           6044 ;demo.c:950: cmd.argument = 0x00; // from 70xY to left
   1EB7 3E 00              6045 	ld	a,#0x00
   1EB9 32r10s41           6046 	ld	(#_cmd + 12),a
   1EBC 32r11s41           6047 	ld	(#_cmd + 13),a
                           6048 ;demo.c:951: cmd.command = 0xd0; // vram to vram, y only
   1EBF 01r12s41           6049 	ld	bc,#_cmd + 14
   1EC2 3E D0              6050 	ld	a,#0xD0
   1EC4 02                 6051 	ld	(bc),a
                           6052 ;demo.c:952: cmd.source_x = 0;
   1EC5 21r04s41           6053 	ld	hl,#_cmd
   1EC8 36 00              6054 	ld	(hl),#0x00
   1ECA 23                 6055 	inc	hl
   1ECB 36 00              6056 	ld	(hl),#0x00
                           6057 ;demo.c:953: cmd.source_y = 255;
   1ECD 21r06s41           6058 	ld	hl, #_cmd + 2
   1ED0 36 FF              6059 	ld	(hl),#0xFF
   1ED2 23                 6060 	inc	hl
   1ED3 36 00              6061 	ld	(hl),#0x00
                           6062 ;demo.c:954: cmd.dest_y = 0;
   1ED5 01r0As41           6063 	ld	bc,#_cmd + 6
   1ED8 69                 6064 	ld	l,c
   1ED9 60                 6065 	ld	h,b
   1EDA 36 00              6066 	ld	(hl),#0x00
   1EDC 23                 6067 	inc	hl
   1EDD 36 00              6068 	ld	(hl),#0x00
                           6069 ;demo.c:956: for (x = 0; x < 212; x++) {
   1EDF DD 36 FE D4        6070 	ld	-2 (ix),#0xD4
   1EE3 DD 36 FF 00        6071 	ld	-1 (ix),#0x00
   1EE7                    6072 00123$:
                           6073 ;demo.c:957: waitVB();
   1EE7 76                 6074 		halt 
                           6075 ;demo.c:958: cmd.dest_x = 0;
   1EE8 11r08s41           6076 	ld	de,#_cmd + 4
   1EEB EB                 6077 	ex	de,hl
   1EEC 36 00              6078 	ld	(hl),#0x00
   1EEE 23                 6079 	inc	hl
   1EEF 36 00              6080 	ld	(hl),#0x00
                           6081 ;demo.c:959: cmd.dest_y = x;
   1EF1 11r0As41           6082 	ld	de,#_cmd + 6
   1EF4 DD 4E FE           6083 	ld	c,-2 (ix)
   1EF7 DD 46 FF           6084 	ld	b,-1 (ix)
   1EFA 0B                 6085 	dec	bc
   1EFB EB                 6086 	ex	de,hl
   1EFC 71                 6087 	ld	(hl),c
   1EFD 23                 6088 	inc	hl
   1EFE 70                 6089 	ld	(hl),b
                           6090 ;demo.c:960: vdp_copier(&cmd);
   1EFF C5                 6091 	push	bc
   1F00 21r04s41           6092 	ld	hl,#_cmd
   1F03 E5                 6093 	push	hl
   1F04 CDr00s00           6094 	call	_vdp_copier
   1F07 F1                 6095 	pop	af
   1F08 C1                 6096 	pop	bc
   1F09 DD 71 FE           6097 	ld	-2 (ix),c
   1F0C DD 70 FF           6098 	ld	-1 (ix),b
                           6099 ;demo.c:956: for (x = 0; x < 212; x++) {
   1F0F DD 7E FE           6100 	ld	a,-2 (ix)
   1F12 DD B6 FF           6101 	or	a,-1 (ix)
   1F15 20 D0              6102 	jr	NZ,00123$
                           6103 ;demo.c:963: vdp_register(9,2); // 50hz,192
   1F17 21 09 02           6104 	ld	hl,#0x0209
   1F1A E5                 6105 	push	hl
   1F1B CDr00s00           6106 	call	_vdp_register
   1F1E F1                 6107 	pop	af
                           6108 ;demo.c:965: vdp_load_palette(boxes_palette);
   1F1F 21rE0s40           6109 	ld	hl,#_boxes_palette
   1F22 E5                 6110 	push	hl
   1F23 CDr00s00           6111 	call	_vdp_load_palette
   1F26 F1                 6112 	pop	af
                           6113 ;demo.c:967: msx2_palette(15,0,0,0);
   1F27 21 00 00           6114 	ld	hl,#0x0000
   1F2A E5                 6115 	push	hl
   1F2B 2E 0F              6116 	ld	l, #0x0F
   1F2D E5                 6117 	push	hl
   1F2E CDr00s00           6118 	call	_msx2_palette
   1F31 F1                 6119 	pop	af
   1F32 F1                 6120 	pop	af
                           6121 ;demo.c:969: drawtilescreen(tri_center);
   1F33 21r2Cs02           6122 	ld	hl,#_tri_center
   1F36 E5                 6123 	push	hl
   1F37 CDrCFs1D           6124 	call	_drawtilescreen
   1F3A F1                 6125 	pop	af
   1F3B                    6126 00102$:
                           6127 ;demo.c:974: triframes++;
   1F3B FD 21rA4s41        6128 	ld	iy,#_triframes
   1F3F FD 34 00           6129 	inc	0 (iy)
   1F42 20 07              6130 	jr	NZ,00145$
   1F44 FD 21rA4s41        6131 	ld	iy,#_triframes
   1F48 FD 34 01           6132 	inc	1 (iy)
   1F4B                    6133 00145$:
                           6134 ;demo.c:975: if (triframes == 200) {
   1F4B 3ArA4s41           6135 	ld	a,(#_triframes+0)
   1F4E D6 C8              6136 	sub	a,#0xC8
   1F50 20 06              6137 	jr	NZ,00146$
   1F52 3ArA5s41           6138 	ld	a,(#_triframes+1)
   1F55 B7                 6139 	or	a,a
   1F56 28 02              6140 	jr	Z,00147$
   1F58                    6141 00146$:
   1F58 18 08              6142 	jr	00104$
   1F5A                    6143 00147$:
                           6144 ;demo.c:976: drawtilescreen(tri_up);
   1F5A 21rECs02           6145 	ld	hl,#_tri_up
   1F5D E5                 6146 	push	hl
   1F5E CDrCFs1D           6147 	call	_drawtilescreen
   1F61 F1                 6148 	pop	af
   1F62                    6149 00104$:
                           6150 ;demo.c:979: if (triframes == 400) {
   1F62 3ArA4s41           6151 	ld	a,(#_triframes+0)
   1F65 D6 90              6152 	sub	a,#0x90
   1F67 20 07              6153 	jr	NZ,00148$
   1F69 3ArA5s41           6154 	ld	a,(#_triframes+1)
   1F6C D6 01              6155 	sub	a,#0x01
   1F6E 28 02              6156 	jr	Z,00149$
   1F70                    6157 00148$:
   1F70 18 08              6158 	jr	00106$
   1F72                    6159 00149$:
                           6160 ;demo.c:980: drawtilescreen(tri_dia);
   1F72 21rACs03           6161 	ld	hl,#_tri_dia
   1F75 E5                 6162 	push	hl
   1F76 CDrCFs1D           6163 	call	_drawtilescreen
   1F79 F1                 6164 	pop	af
   1F7A                    6165 00106$:
                           6166 ;demo.c:982: if (triframes == 600) {
   1F7A 3ArA4s41           6167 	ld	a,(#_triframes+0)
   1F7D D6 58              6168 	sub	a,#0x58
   1F7F 20 07              6169 	jr	NZ,00150$
   1F81 3ArA5s41           6170 	ld	a,(#_triframes+1)
   1F84 D6 02              6171 	sub	a,#0x02
   1F86 28 02              6172 	jr	Z,00151$
   1F88                    6173 00150$:
   1F88 18 08              6174 	jr	00108$
   1F8A                    6175 00151$:
                           6176 ;demo.c:983: drawtilescreen(tri_side1);
   1F8A 21r6Cs04           6177 	ld	hl,#_tri_side1
   1F8D E5                 6178 	push	hl
   1F8E CDrCFs1D           6179 	call	_drawtilescreen
   1F91 F1                 6180 	pop	af
   1F92                    6181 00108$:
                           6182 ;demo.c:985: if (triframes == 700) {
   1F92 3ArA4s41           6183 	ld	a,(#_triframes+0)
   1F95 D6 BC              6184 	sub	a,#0xBC
   1F97 20 07              6185 	jr	NZ,00152$
   1F99 3ArA5s41           6186 	ld	a,(#_triframes+1)
   1F9C D6 02              6187 	sub	a,#0x02
   1F9E 28 02              6188 	jr	Z,00153$
   1FA0                    6189 00152$:
   1FA0 18 08              6190 	jr	00110$
   1FA2                    6191 00153$:
                           6192 ;demo.c:986: drawtilescreen(tri_side2);
   1FA2 21r2Cs05           6193 	ld	hl,#_tri_side2
   1FA5 E5                 6194 	push	hl
   1FA6 CDrCFs1D           6195 	call	_drawtilescreen
   1FA9 F1                 6196 	pop	af
   1FAA                    6197 00110$:
                           6198 ;demo.c:988: if (triframes == 800) {
   1FAA 3ArA4s41           6199 	ld	a,(#_triframes+0)
   1FAD D6 20              6200 	sub	a,#0x20
   1FAF 20 07              6201 	jr	NZ,00154$
   1FB1 3ArA5s41           6202 	ld	a,(#_triframes+1)
   1FB4 D6 03              6203 	sub	a,#0x03
   1FB6 28 02              6204 	jr	Z,00155$
   1FB8                    6205 00154$:
   1FB8 18 08              6206 	jr	00112$
   1FBA                    6207 00155$:
                           6208 ;demo.c:989: drawtilescreen(tri_side1);
   1FBA 21r6Cs04           6209 	ld	hl,#_tri_side1
   1FBD E5                 6210 	push	hl
   1FBE CDrCFs1D           6211 	call	_drawtilescreen
   1FC1 F1                 6212 	pop	af
   1FC2                    6213 00112$:
                           6214 ;demo.c:991: if (triframes == 900) {
   1FC2 3ArA4s41           6215 	ld	a,(#_triframes+0)
   1FC5 D6 84              6216 	sub	a,#0x84
   1FC7 20 07              6217 	jr	NZ,00156$
   1FC9 3ArA5s41           6218 	ld	a,(#_triframes+1)
   1FCC D6 03              6219 	sub	a,#0x03
   1FCE 28 02              6220 	jr	Z,00157$
   1FD0                    6221 00156$:
   1FD0 18 08              6222 	jr	00114$
   1FD2                    6223 00157$:
                           6224 ;demo.c:992: drawtilescreen(tri_side2);
   1FD2 21r2Cs05           6225 	ld	hl,#_tri_side2
   1FD5 E5                 6226 	push	hl
   1FD6 CDrCFs1D           6227 	call	_drawtilescreen
   1FD9 F1                 6228 	pop	af
   1FDA                    6229 00114$:
                           6230 ;demo.c:994: if (triframes == 1000) {
   1FDA 3ArA4s41           6231 	ld	a,(#_triframes+0)
   1FDD D6 E8              6232 	sub	a,#0xE8
   1FDF 20 07              6233 	jr	NZ,00158$
   1FE1 3ArA5s41           6234 	ld	a,(#_triframes+1)
   1FE4 D6 03              6235 	sub	a,#0x03
   1FE6 28 02              6236 	jr	Z,00159$
   1FE8                    6237 00158$:
   1FE8 18 12              6238 	jr	00116$
   1FEA                    6239 00159$:
                           6240 ;demo.c:995: triframes = 0;
   1FEA 21rA4s41           6241 	ld	hl,#_triframes + 0
   1FED 36 00              6242 	ld	(hl), #0x00
   1FEF 21rA5s41           6243 	ld	hl,#_triframes + 1
   1FF2 36 00              6244 	ld	(hl), #0x00
                           6245 ;demo.c:996: drawtilescreen(tri_center);
   1FF4 21r2Cs02           6246 	ld	hl,#_tri_center
   1FF7 E5                 6247 	push	hl
   1FF8 CDrCFs1D           6248 	call	_drawtilescreen
   1FFB F1                 6249 	pop	af
   1FFC                    6250 00116$:
                           6251 ;demo.c:1000: msx2_palette(2,0,0,0);
   1FFC 21 00 00           6252 	ld	hl,#0x0000
   1FFF E5                 6253 	push	hl
   2000 2E 02              6254 	ld	l, #0x02
   2002 E5                 6255 	push	hl
   2003 CDr00s00           6256 	call	_msx2_palette
   2006 F1                 6257 	pop	af
   2007 F1                 6258 	pop	af
                           6259 ;demo.c:1001: msx2_palette(11,0,0,0);
   2008 21 00 00           6260 	ld	hl,#0x0000
   200B E5                 6261 	push	hl
   200C 2E 0B              6262 	ld	l, #0x0B
   200E E5                 6263 	push	hl
   200F CDr00s00           6264 	call	_msx2_palette
   2012 F1                 6265 	pop	af
   2013 F1                 6266 	pop	af
                           6267 ;demo.c:1004: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2014 21r9Bs41           6268 	ld	hl,#_tripal + 2
   2017 4E                 6269 	ld	c,(hl)
   2018 11r9As41           6270 	ld	de,#_tripal + 1
   201B 1A                 6271 	ld	a,(de)
   201C 47                 6272 	ld	b,a
   201D 21r99s41           6273 	ld	hl,#_tripal
   2020 5E                 6274 	ld	e,(hl)
   2021 79                 6275 	ld	a,c
   2022 F5                 6276 	push	af
   2023 33                 6277 	inc	sp
   2024 C5                 6278 	push	bc
   2025 33                 6279 	inc	sp
   2026 53                 6280 	ld	d,e
   2027 1E 03              6281 	ld	e,#0x03
   2029 D5                 6282 	push	de
   202A CDr00s00           6283 	call	_msx2_palette
   202D F1                 6284 	pop	af
   202E F1                 6285 	pop	af
                           6286 ;demo.c:1005: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   202F 21r9Es41           6287 	ld	hl,#_tripal + 5
   2032 4E                 6288 	ld	c,(hl)
   2033 11r9Ds41           6289 	ld	de,#_tripal + 4
   2036 1A                 6290 	ld	a,(de)
   2037 47                 6291 	ld	b,a
   2038 21r9Cs41           6292 	ld	hl,#_tripal + 3
   203B 5E                 6293 	ld	e,(hl)
   203C 79                 6294 	ld	a,c
   203D F5                 6295 	push	af
   203E 33                 6296 	inc	sp
   203F C5                 6297 	push	bc
   2040 33                 6298 	inc	sp
   2041 53                 6299 	ld	d,e
   2042 1E 0E              6300 	ld	e,#0x0E
   2044 D5                 6301 	push	de
   2045 CDr00s00           6302 	call	_msx2_palette
   2048 F1                 6303 	pop	af
   2049 F1                 6304 	pop	af
                           6305 ;demo.c:1006: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   204A 21rA1s41           6306 	ld	hl,#_tripal + 8
   204D 4E                 6307 	ld	c,(hl)
   204E 11rA0s41           6308 	ld	de,#_tripal + 7
   2051 1A                 6309 	ld	a,(de)
   2052 47                 6310 	ld	b,a
   2053 21r9Fs41           6311 	ld	hl,#_tripal + 6
   2056 5E                 6312 	ld	e,(hl)
   2057 79                 6313 	ld	a,c
   2058 F5                 6314 	push	af
   2059 33                 6315 	inc	sp
   205A C5                 6316 	push	bc
   205B 33                 6317 	inc	sp
   205C 53                 6318 	ld	d,e
   205D 1E 06              6319 	ld	e,#0x06
   205F D5                 6320 	push	de
   2060 CDr00s00           6321 	call	_msx2_palette
   2063 F1                 6322 	pop	af
   2064 F1                 6323 	pop	af
                           6324 ;demo.c:1009: tripaltick++;
   2065 FD 21rA2s41        6325 	ld	iy,#_tripaltick
   2069 FD 34 00           6326 	inc	0 (iy)
                           6327 ;demo.c:1010: if (tripaltick > 6) {
   206C 3E 06              6328 	ld	a,#0x06
   206E FD 21rA2s41        6329 	ld	iy,#_tripaltick
   2072 FD 96 00           6330 	sub	a,0 (iy)
   2075 D2rFAs20           6331 	jp	NC,00128$
                           6332 ;demo.c:1011: tripaltick2++;
   2078 FD 21rA3s41        6333 	ld	iy,#_tripaltick2
   207C FD 34 00           6334 	inc	0 (iy)
                           6335 ;demo.c:1012: if (tripaltick2 > 6) tripaltick2 = 0;
   207F 3E 06              6336 	ld	a,#0x06
   2081 FD 21rA3s41        6337 	ld	iy,#_tripaltick2
   2085 FD 96 00           6338 	sub	a,0 (iy)
   2088 30 05              6339 	jr	NC,00118$
   208A 21rA3s41           6340 	ld	hl,#_tripaltick2 + 0
   208D 36 00              6341 	ld	(hl), #0x00
   208F                    6342 00118$:
                           6343 ;demo.c:1014: r = tripal[0];
   208F 21r99s41           6344 	ld	hl,#_tripal
   2092 4E                 6345 	ld	c,(hl)
   2093 DD 71 FD           6346 	ld	-3 (ix),c
                           6347 ;demo.c:1015: g = tripal[1];
   2096 11r9As41           6348 	ld	de,#_tripal + 1
   2099 1A                 6349 	ld	a,(de)
   209A DD 77 FC           6350 	ld	-4 (ix),a
                           6351 ;demo.c:1016: b = tripal[2];
   209D 21r9Bs41           6352 	ld	hl,#_tripal + 2
   20A0 5E                 6353 	ld	e,(hl)
   20A1 DD 73 FB           6354 	ld	-5 (ix),e
                           6355 ;demo.c:1018: for (x = 0; x < 6; x++) {
   20A4 DD 36 FE 00        6356 	ld	-2 (ix),#0x00
   20A8 DD 36 FF 00        6357 	ld	-1 (ix),#0x00
   20AC                    6358 00124$:
   20AC DD 7E FE           6359 	ld	a,-2 (ix)
   20AF D6 06              6360 	sub	a,#0x06
   20B1 DD 7E FF           6361 	ld	a,-1 (ix)
   20B4 DE 00              6362 	sbc	a,#0x00
   20B6 F2rE0s20           6363 	jp	P,00127$
                           6364 ;demo.c:1019: tripal[x] = tripal[x+3];
   20B9 3Er99              6365 	ld	a,#<_tripal
   20BB DD 86 FE           6366 	add	a,-2 (ix)
   20BE 4F                 6367 	ld	c,a
   20BF 3Es41              6368 	ld	a,#>_tripal
   20C1 DD 8E FF           6369 	adc	a,-1 (ix)
   20C4 47                 6370 	ld	b,a
   20C5 DD 5E FE           6371 	ld	e,-2 (ix)
   20C8 1C                 6372 	inc	e
   20C9 1C                 6373 	inc	e
   20CA 1C                 6374 	inc	e
   20CB 3Er99              6375 	ld	a,#<_tripal
   20CD 83                 6376 	add	a,e
   20CE 5F                 6377 	ld	e,a
   20CF 3Es41              6378 	ld	a,#>_tripal
   20D1 CE 00              6379 	adc	a,#0x00
   20D3 57                 6380 	ld	d,a
   20D4 1A                 6381 	ld	a,(de)
   20D5 02                 6382 	ld	(bc),a
                           6383 ;demo.c:1018: for (x = 0; x < 6; x++) {
   20D6 DD 34 FE           6384 	inc	-2 (ix)
   20D9 20 03              6385 	jr	NZ,00160$
   20DB DD 34 FF           6386 	inc	-1 (ix)
   20DE                    6387 00160$:
   20DE 18 CC              6388 	jr	00124$
   20E0                    6389 00127$:
                           6390 ;demo.c:1022: tripal[6] = r;
   20E0 01r9Fs41           6391 	ld	bc,#_tripal + 6
   20E3 DD 7E FD           6392 	ld	a,-3 (ix)
   20E6 02                 6393 	ld	(bc),a
                           6394 ;demo.c:1023: tripal[7] = g;
   20E7 01rA0s41           6395 	ld	bc,#_tripal + 7
   20EA DD 7E FC           6396 	ld	a,-4 (ix)
   20ED 02                 6397 	ld	(bc),a
                           6398 ;demo.c:1024: tripal[8] = b;
   20EE 01rA1s41           6399 	ld	bc,#_tripal + 8
   20F1 DD 7E FB           6400 	ld	a,-5 (ix)
   20F4 02                 6401 	ld	(bc),a
                           6402 ;demo.c:1025: tripaltick = 0;
   20F5 21rA2s41           6403 	ld	hl,#_tripaltick + 0
   20F8 36 00              6404 	ld	(hl), #0x00
   20FA                    6405 00128$:
   20FA DD F9              6406 	ld	sp,ix
   20FC DD E1              6407 	pop	ix
   20FE C9                 6408 	ret
   20FF                    6409 _tritiles_end::
                           6410 ;demo.c:1030: int abs (int n) {
                           6411 ;	---------------------------------
                           6412 ; Function abs
                           6413 ; ---------------------------------
   20FF                    6414 _abs_start::
   20FF                    6415 _abs:
   20FF DD E5              6416 	push	ix
   2101 DD 21 00 00        6417 	ld	ix,#0
   2105 DD 39              6418 	add	ix,sp
   2107 21 FA FF           6419 	ld	hl,#-6
   210A 39                 6420 	add	hl,sp
   210B F9                 6421 	ld	sp,hl
                           6422 ;demo.c:1031: const int ret[2] = { n, -n };
   210C 21 02 00           6423 	ld	hl,#0x0002
   210F 39                 6424 	add	hl,sp
   2110 4D                 6425 	ld	c,l
   2111 44                 6426 	ld	b,h
   2112 DD 7E 04           6427 	ld	a,4 (ix)
   2115 77                 6428 	ld	(hl),a
   2116 23                 6429 	inc	hl
   2117 DD 7E 05           6430 	ld	a,5 (ix)
   211A 77                 6431 	ld	(hl),a
   211B 21 02 00           6432 	ld	hl,#0x0002
   211E 09                 6433 	add	hl,bc
   211F DD 75 FA           6434 	ld	-6 (ix),l
   2122 DD 74 FB           6435 	ld	-5 (ix),h
   2125 AF                 6436 	xor	a,a
   2126 DD 9E 04           6437 	sbc	a,4 (ix)
   2129 5F                 6438 	ld	e,a
   212A 3E 00              6439 	ld	a,#0x00
   212C DD 9E 05           6440 	sbc	a,5 (ix)
   212F 57                 6441 	ld	d,a
   2130 DD 6E FA           6442 	ld	l,-6 (ix)
   2133 DD 66 FB           6443 	ld	h,-5 (ix)
   2136 73                 6444 	ld	(hl),e
   2137 23                 6445 	inc	hl
   2138 72                 6446 	ld	(hl),d
                           6447 ;demo.c:1032: return ret [n<0];
   2139 DD 7E 05           6448 	ld	a,5 (ix)
   213C 07                 6449 	rlca
   213D E6 01              6450 	and	a,#0x01
   213F 5F                 6451 	ld	e,a
   2140 CB 23              6452 	sla	e
   2142 79                 6453 	ld	a,c
   2143 83                 6454 	add	a,e
   2144 6F                 6455 	ld	l,a
   2145 78                 6456 	ld	a,b
   2146 CE 00              6457 	adc	a,#0x00
   2148 67                 6458 	ld	h,a
   2149 5E                 6459 	ld	e,(hl)
   214A 23                 6460 	inc	hl
   214B 4E                 6461 	ld	c,(hl)
   214C 6B                 6462 	ld	l,e
   214D 61                 6463 	ld	h,c
   214E DD F9              6464 	ld	sp,ix
   2150 DD E1              6465 	pop	ix
   2152 C9                 6466 	ret
   2153                    6467 _abs_end::
                           6468 ;demo.c:1038: void logoeffu() {
                           6469 ;	---------------------------------
                           6470 ; Function logoeffu
                           6471 ; ---------------------------------
   2153                    6472 _logoeffu_start::
   2153                    6473 _logoeffu:
   2153 DD E5              6474 	push	ix
   2155 DD 21 00 00        6475 	ld	ix,#0
   2159 DD 39              6476 	add	ix,sp
   215B F5                 6477 	push	af
   215C F5                 6478 	push	af
                           6479 ;demo.c:1042: fadein();
   215D CDr27s0A           6480 	call	_fadein
                           6481 ;demo.c:1044: v = abs(sintabx[(vbicount) & 255]>>4);
   2160 21r00s41           6482 	ld	hl,#_vbicount + 0
   2163 4E                 6483 	ld	c,(hl)
   2164 06 00              6484 	ld	b,#0x00
   2166 CB 21              6485 	sla	c
   2168 CB 10              6486 	rl	b
   216A 21r2Cs00           6487 	ld	hl,#_sintabx
   216D 09                 6488 	add	hl,bc
   216E 4E                 6489 	ld	c,(hl)
   216F 23                 6490 	inc	hl
   2170 46                 6491 	ld	b,(hl)
   2171 CB 38              6492 	srl	b
   2173 CB 19              6493 	rr	c
   2175 CB 38              6494 	srl	b
   2177 CB 19              6495 	rr	c
   2179 CB 38              6496 	srl	b
   217B CB 19              6497 	rr	c
   217D CB 38              6498 	srl	b
   217F CB 19              6499 	rr	c
   2181 C5                 6500 	push	bc
   2182 CDrFFs20           6501 	call	_abs
   2185 F1                 6502 	pop	af
   2186 44                 6503 	ld	b,h
   2187 4D                 6504 	ld	c,l
   2188 DD 71 FC           6505 	ld	-4 (ix),c
   218B DD 70 FD           6506 	ld	-3 (ix),b
                           6507 ;demo.c:1046: for (y = 0; y < 116; y+=2) {
   218E DD 36 FE 00        6508 	ld	-2 (ix),#0x00
   2192 DD 36 FF 00        6509 	ld	-1 (ix),#0x00
   2196                    6510 00108$:
   2196 DD 7E FE           6511 	ld	a,-2 (ix)
   2199 D6 74              6512 	sub	a,#0x74
   219B DD 7E FF           6513 	ld	a,-1 (ix)
   219E DE 00              6514 	sbc	a,#0x00
   21A0 F2r6Bs22           6515 	jp	P,00111$
                           6516 ;demo.c:1047: cmd.size_x = 108;
   21A3 11r0Cs41           6517 	ld	de,#_cmd + 8
   21A6 EB                 6518 	ex	de,hl
   21A7 36 6C              6519 	ld	(hl),#0x6C
   21A9 23                 6520 	inc	hl
   21AA 36 00              6521 	ld	(hl),#0x00
                           6522 ;demo.c:1048: cmd.size_y = 2;
   21AC 11r0Es41           6523 	ld	de,#_cmd + 10
   21AF EB                 6524 	ex	de,hl
   21B0 36 02              6525 	ld	(hl),#0x02
   21B2 23                 6526 	inc	hl
   21B3 36 00              6527 	ld	(hl),#0x00
                           6528 ;demo.c:1049: cmd.data = 0;
   21B5 11r10s41           6529 	ld	de,#_cmd + 12
   21B8 3E 00              6530 	ld	a,#0x00
   21BA 12                 6531 	ld	(de),a
                           6532 ;demo.c:1050: cmd.argument = 0x00;
   21BB 11r11s41           6533 	ld	de,#_cmd + 13
   21BE 3E 00              6534 	ld	a,#0x00
   21C0 12                 6535 	ld	(de),a
                           6536 ;demo.c:1051: cmd.command = 0xd0; 
   21C1 11r12s41           6537 	ld	de,#_cmd + 14
   21C4 3E D0              6538 	ld	a,#0xD0
   21C6 12                 6539 	ld	(de),a
                           6540 ;demo.c:1052: cmd.source_x = 74;
   21C7 21r04s41           6541 	ld	hl,#_cmd
   21CA 36 4A              6542 	ld	(hl),#0x4A
   21CC 23                 6543 	inc	hl
   21CD 36 00              6544 	ld	(hl),#0x00
                           6545 ;demo.c:1053: cmd.source_y = 256+y;
   21CF 11r06s41           6546 	ld	de,#_cmd + 2
   21D2 DD 7E FE           6547 	ld	a,-2 (ix)
   21D5 C6 00              6548 	add	a,#0x00
   21D7 4F                 6549 	ld	c,a
   21D8 DD 7E FF           6550 	ld	a,-1 (ix)
   21DB CE 01              6551 	adc	a,#0x01
   21DD 47                 6552 	ld	b,a
   21DE 6B                 6553 	ld	l,e
   21DF 62                 6554 	ld	h,d
   21E0 71                 6555 	ld	(hl),c
   21E1 23                 6556 	inc	hl
   21E2 70                 6557 	ld	(hl),b
                           6558 ;demo.c:1054: v+=y;
   21E3 DD 7E FC           6559 	ld	a,-4 (ix)
   21E6 DD 86 FE           6560 	add	a,-2 (ix)
   21E9 DD 77 FC           6561 	ld	-4 (ix),a
   21EC DD 7E FD           6562 	ld	a,-3 (ix)
   21EF DD 8E FF           6563 	adc	a,-1 (ix)
   21F2 DD 77 FD           6564 	ld	-3 (ix),a
                           6565 ;demo.c:1055: v -= powa;
   21F5 21rA8s41           6566 	ld	hl,#_powa
   21F8 DD 7E FC           6567 	ld	a,-4 (ix)
   21FB 96                 6568 	sub	a,(hl)
   21FC DD 77 FC           6569 	ld	-4 (ix),a
   21FF DD 7E FD           6570 	ld	a,-3 (ix)
   2202 23                 6571 	inc	hl
   2203 9E                 6572 	sbc	a,(hl)
                           6573 ;demo.c:1056: if (v<0) v = 0;
   2204 DD 77 FD           6574 	ld	-3 (ix),a
   2207 CB 7F              6575 	bit	7,a
   2209 28 08              6576 	jr	Z,00102$
   220B DD 36 FC 00        6577 	ld	-4 (ix),#0x00
   220F DD 36 FD 00        6578 	ld	-3 (ix),#0x00
   2213                    6579 00102$:
                           6580 ;demo.c:1057: if (v>150) v = 150;
   2213 3E 96              6581 	ld	a,#0x96
   2215 DD 96 FC           6582 	sub	a,-4 (ix)
   2218 3E 00              6583 	ld	a,#0x00
   221A DD 9E FD           6584 	sbc	a,-3 (ix)
   221D F2r28s22           6585 	jp	P,00104$
   2220 DD 36 FC 96        6586 	ld	-4 (ix),#0x96
   2224 DD 36 FD 00        6587 	ld	-3 (ix),#0x00
   2228                    6588 00104$:
                           6589 ;demo.c:1058: cmd.dest_x = 74+v;
   2228 01r08s41           6590 	ld	bc,#_cmd + 4
   222B DD 7E FC           6591 	ld	a,-4 (ix)
   222E C6 4A              6592 	add	a,#0x4A
   2230 5F                 6593 	ld	e,a
   2231 DD 7E FD           6594 	ld	a,-3 (ix)
   2234 CE 00              6595 	adc	a,#0x00
   2236 57                 6596 	ld	d,a
   2237 69                 6597 	ld	l,c
   2238 60                 6598 	ld	h,b
   2239 73                 6599 	ld	(hl),e
   223A 23                 6600 	inc	hl
   223B 72                 6601 	ld	(hl),d
                           6602 ;demo.c:1059: cmd.dest_y = 50+y+1;
   223C 01r0As41           6603 	ld	bc,#_cmd + 6
   223F DD 7E FE           6604 	ld	a,-2 (ix)
   2242 C6 33              6605 	add	a,#0x33
   2244 5F                 6606 	ld	e,a
   2245 DD 7E FF           6607 	ld	a,-1 (ix)
   2248 CE 00              6608 	adc	a,#0x00
   224A 57                 6609 	ld	d,a
   224B 69                 6610 	ld	l,c
   224C 60                 6611 	ld	h,b
   224D 73                 6612 	ld	(hl),e
   224E 23                 6613 	inc	hl
   224F 72                 6614 	ld	(hl),d
                           6615 ;demo.c:1060: vdp_copier(&cmd);
   2250 21r04s41           6616 	ld	hl,#_cmd
   2253 E5                 6617 	push	hl
   2254 CDr00s00           6618 	call	_vdp_copier
   2257 F1                 6619 	pop	af
                           6620 ;demo.c:1046: for (y = 0; y < 116; y+=2) {
   2258 DD 7E FE           6621 	ld	a,-2 (ix)
   225B C6 02              6622 	add	a,#0x02
   225D DD 77 FE           6623 	ld	-2 (ix),a
   2260 DD 7E FF           6624 	ld	a,-1 (ix)
   2263 CE 00              6625 	adc	a,#0x00
   2265 DD 77 FF           6626 	ld	-1 (ix),a
   2268 C3r96s21           6627 	jp	00108$
   226B                    6628 00111$:
                           6629 ;demo.c:1063: if (vbicount > 84 && onceclear > 182) {
   226B 3E 54              6630 	ld	a,#0x54
   226D FD 21r00s41        6631 	ld	iy,#_vbicount
   2271 FD 96 00           6632 	sub	a,0 (iy)
   2274 3E 00              6633 	ld	a,#0x00
   2276 FD 21r00s41        6634 	ld	iy,#_vbicount
   227A FD 9E 01           6635 	sbc	a,1 (iy)
   227D F2rDFs22           6636 	jp	P,00106$
   2280 3E B6              6637 	ld	a,#0xB6
   2282 FD 21rAAs41        6638 	ld	iy,#_onceclear
   2286 FD 96 00           6639 	sub	a,0 (iy)
   2289 D2rDFs22           6640 	jp	NC,00106$
                           6641 ;demo.c:1064: cmd.size_x = 4;
   228C 21r0Cs41           6642 	ld	hl, #_cmd + 8
   228F 36 04              6643 	ld	(hl),#0x04
   2291 23                 6644 	inc	hl
   2292 36 00              6645 	ld	(hl),#0x00
                           6646 ;demo.c:1065: cmd.size_y = 116;
   2294 21r0Es41           6647 	ld	hl, #_cmd + 10
   2297 36 74              6648 	ld	(hl),#0x74
   2299 23                 6649 	inc	hl
   229A 36 00              6650 	ld	(hl),#0x00
                           6651 ;demo.c:1066: cmd.data = 0;
                           6652 ;demo.c:1067: cmd.argument = 0x00;
   229C 3E 00              6653 	ld	a,#0x00
   229E 32r10s41           6654 	ld	(#_cmd + 12),a
   22A1 32r11s41           6655 	ld	(#_cmd + 13),a
                           6656 ;demo.c:1068: cmd.command = 0xd0; 
   22A4 01r12s41           6657 	ld	bc,#_cmd + 14
   22A7 3E D0              6658 	ld	a,#0xD0
   22A9 02                 6659 	ld	(bc),a
                           6660 ;demo.c:1069: cmd.source_x = 20;
   22AA 21r04s41           6661 	ld	hl,#_cmd
   22AD 36 14              6662 	ld	(hl),#0x14
   22AF 23                 6663 	inc	hl
   22B0 36 00              6664 	ld	(hl),#0x00
                           6665 ;demo.c:1070: cmd.source_y = 0;
   22B2 21r06s41           6666 	ld	hl, #_cmd + 2
   22B5 36 00              6667 	ld	(hl),#0x00
   22B7 23                 6668 	inc	hl
   22B8 36 00              6669 	ld	(hl),#0x00
                           6670 ;demo.c:1071: cmd.dest_x = onceclear;
   22BA 01r08s41           6671 	ld	bc,#_cmd + 4
   22BD 21rAAs41           6672 	ld	hl,#_onceclear + 0
   22C0 5E                 6673 	ld	e,(hl)
   22C1 16 00              6674 	ld	d,#0x00
   22C3 69                 6675 	ld	l,c
   22C4 60                 6676 	ld	h,b
   22C5 73                 6677 	ld	(hl),e
   22C6 23                 6678 	inc	hl
   22C7 72                 6679 	ld	(hl),d
                           6680 ;demo.c:1072: cmd.dest_y = 68;
   22C8 21r0As41           6681 	ld	hl, #_cmd + 6
   22CB 36 44              6682 	ld	(hl),#0x44
   22CD 23                 6683 	inc	hl
   22CE 36 00              6684 	ld	(hl),#0x00
                           6685 ;demo.c:1073: vdp_copier(&cmd);
   22D0 21r04s41           6686 	ld	hl,#_cmd
   22D3 E5                 6687 	push	hl
   22D4 CDr00s00           6688 	call	_vdp_copier
   22D7 F1                 6689 	pop	af
                           6690 ;demo.c:1074: onceclear-=4;
   22D8 21rAAs41           6691 	ld	hl,#_onceclear
   22DB 7E                 6692 	ld	a,(hl)
   22DC C6 FC              6693 	add	a,#0xFC
   22DE 77                 6694 	ld	(hl),a
   22DF                    6695 00106$:
                           6696 ;demo.c:1078: powa+=2;
   22DF 21rA8s41           6697 	ld	hl,#_powa
   22E2 7E                 6698 	ld	a,(hl)
   22E3 C6 02              6699 	add	a,#0x02
   22E5 23                 6700 	inc	hl
   22E6 2B                 6701 	dec	hl
   22E7 C5                 6702 	push	bc
   22E8 4F                 6703 	ld	c, a
   22E9 23                 6704 	inc	hl
   22EA 7E                 6705 	ld	a, (hl)
   22EB 47                 6706 	ld	b, a
   22EC 79                 6707 	ld	a, c
   22ED 2B                 6708 	dec	hl
   22EE 77                 6709 	ld	(hl), a
   22EF 78                 6710 	ld	a, b
   22F0 C1                 6711 	pop	bc
   22F1 CE 00              6712 	adc	a,#0x00
   22F3 23                 6713 	inc	hl
   22F4 77                 6714 	ld	(hl),a
                           6715 ;demo.c:1079: powatick = 0;
   22F5 21rA6s41           6716 	ld	hl,#_powatick + 0
   22F8 36 00              6717 	ld	(hl), #0x00
   22FA 21rA7s41           6718 	ld	hl,#_powatick + 1
   22FD 36 00              6719 	ld	(hl), #0x00
   22FF DD F9              6720 	ld	sp,ix
   2301 DD E1              6721 	pop	ix
   2303 C9                 6722 	ret
   2304                    6723 _logoeffu_end::
                           6724 ;demo.c:1086: void do_quit() {
                           6725 ;	---------------------------------
                           6726 ; Function do_quit
                           6727 ; ---------------------------------
   2304                    6728 _do_quit_start::
   2304                    6729 _do_quit:
                           6730 ;demo.c:1087: waitVB();
   2304 76                 6731 		halt 
                           6732 ;demo.c:1088: uninstall_isr();
   2305 CDr00s00           6733 	call	_uninstall_isr
                           6734 ;demo.c:1089: PLY_Stop();
   2308 CDr00s00           6735 	call	_PLY_Stop
                           6736 ;demo.c:1090: PLY_SendRegisters();
   230B CDr00s00           6737 	call	_PLY_SendRegisters
                           6738 ;demo.c:1092: screen(0);
   230E 3E 00              6739 	ld	a,#0x00
   2310 F5                 6740 	push	af
   2311 33                 6741 	inc	sp
   2312 CDr00s00           6742 	call	_screen
   2315 33                 6743 	inc	sp
                           6744 ;demo.c:1094: puts("demo quit\r\n\r\n");
   2316 21r27s23           6745 	ld	hl,#__str_13
   2319 E5                 6746 	push	hl
   231A CDr00s00           6747 	call	_puts
   231D F1                 6748 	pop	af
                           6749 ;demo.c:1096: exit(0);	
   231E 3E 00              6750 	ld	a,#0x00
   2320 F5                 6751 	push	af
   2321 33                 6752 	inc	sp
   2322 CDr00s00           6753 	call	_exit
   2325 33                 6754 	inc	sp
   2326 C9                 6755 	ret
   2327                    6756 _do_quit_end::
   2327                    6757 __str_13:
   2327 64 65 6D 6F 20 71  6758 	.ascii "demo quit"
        75 69 74
   2330 0D                 6759 	.db 0x0D
   2331 0A                 6760 	.db 0x0A
   2332 0D                 6761 	.db 0x0D
   2333 0A                 6762 	.db 0x0A
   2334 00                 6763 	.db 0x00
                           6764 ;demo.c:1120: void main() {
                           6765 ;	---------------------------------
                           6766 ; Function main
                           6767 ; ---------------------------------
   2335                    6768 _main_start::
   2335                    6769 _main:
   2335 DD E5              6770 	push	ix
   2337 DD 21 00 00        6771 	ld	ix,#0
   233B DD 39              6772 	add	ix,sp
   233D 21 F9 FF           6773 	ld	hl,#-7
   2340 39                 6774 	add	hl,sp
   2341 F9                 6775 	ld	sp,hl
                           6776 ;demo.c:1121: unsigned char quit=0;
   2342 DD 36 FF 00        6777 	ld	-1 (ix),#0x00
                           6778 ;demo.c:1127: spindown();
   2346 CDr00s00           6779 	call	_spindown
                           6780 ;demo.c:1129: puts("demo init\r\n\r\n");
   2349 21r93s27           6781 	ld	hl,#__str_14
   234C E5                 6782 	push	hl
   234D CDr00s00           6783 	call	_puts
   2350 F1                 6784 	pop	af
                           6785 ;demo.c:1131: for (y = 0; y < 2; y++) {
   2351 DD 36 FB 00        6786 	ld	-5 (ix),#0x00
   2355 DD 36 FC 00        6787 	ld	-4 (ix),#0x00
   2359                    6788 00118$:
   2359 DD 7E FB           6789 	ld	a,-5 (ix)
   235C D6 02              6790 	sub	a,#0x02
   235E DD 7E FC           6791 	ld	a,-4 (ix)
   2361 DE 00              6792 	sbc	a,#0x00
   2363 F2rE5s23           6793 	jp	P,00121$
                           6794 ;demo.c:1132: for (x = 0; x < 16; x++) {
   2366 DD 4E FB           6795 	ld	c,-5 (ix)
   2369 DD 46 FC           6796 	ld	b,-4 (ix)
   236C CB 21              6797 	sla	c
   236E CB 10              6798 	rl	b
   2370 CB 21              6799 	sla	c
   2372 CB 10              6800 	rl	b
   2374 CB 21              6801 	sla	c
   2376 CB 10              6802 	rl	b
   2378 CB 21              6803 	sla	c
   237A CB 10              6804 	rl	b
   237C 21 81 03           6805 	ld	hl,#0x0381
   237F 09                 6806 	add	hl,bc
   2380 DD 75 F9           6807 	ld	-7 (ix),l
   2383 DD 74 FA           6808 	ld	-6 (ix),h
   2386 DD 36 FD 00        6809 	ld	-3 (ix),#0x00
   238A DD 36 FE 00        6810 	ld	-2 (ix),#0x00
   238E                    6811 00114$:
   238E DD 7E FD           6812 	ld	a,-3 (ix)
   2391 D6 10              6813 	sub	a,#0x10
   2393 DD 7E FE           6814 	ld	a,-2 (ix)
   2396 DE 00              6815 	sbc	a,#0x00
   2398 F2rDAs23           6816 	jp	P,00120$
                           6817 ;demo.c:1133: tri_lookup_x[(y*16)+x] = x * 16;
   239B DD 7E FB           6818 	ld	a,-5 (ix)
   239E 07                 6819 	rlca
   239F 07                 6820 	rlca
   23A0 07                 6821 	rlca
   23A1 07                 6822 	rlca
   23A2 E6 F0              6823 	and	a,#0xF0
   23A4 5F                 6824 	ld	e,a
   23A5 DD 56 FD           6825 	ld	d,-3 (ix)
   23A8 7B                 6826 	ld	a,e
   23A9 82                 6827 	add	a,d
   23AA 5F                 6828 	ld	e, a
   23AB C6r00              6829 	add	a,#<_tri_lookup_x
   23AD 4F                 6830 	ld	c,a
   23AE 3Es01              6831 	ld	a,#>_tri_lookup_x
   23B0 CE 00              6832 	adc	a,#0x00
   23B2 47                 6833 	ld	b,a
   23B3 7A                 6834 	ld	a,d
   23B4 07                 6835 	rlca
   23B5 07                 6836 	rlca
   23B6 07                 6837 	rlca
   23B7 07                 6838 	rlca
   23B8 E6 F0              6839 	and	a,#0xF0
   23BA 02                 6840 	ld	(bc),a
                           6841 ;demo.c:1134: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   23BB CB 23              6842 	sla	e
   23BD 3Er20              6843 	ld	a,#<_tri_lookup_y
   23BF 83                 6844 	add	a,e
   23C0 6F                 6845 	ld	l,a
   23C1 3Es01              6846 	ld	a,#>_tri_lookup_y
   23C3 CE 00              6847 	adc	a,#0x00
   23C5 67                 6848 	ld	h,a
   23C6 DD 7E F9           6849 	ld	a,-7 (ix)
   23C9 77                 6850 	ld	(hl),a
   23CA 23                 6851 	inc	hl
   23CB DD 7E FA           6852 	ld	a,-6 (ix)
   23CE 77                 6853 	ld	(hl),a
                           6854 ;demo.c:1132: for (x = 0; x < 16; x++) {
   23CF DD 34 FD           6855 	inc	-3 (ix)
   23D2 20 03              6856 	jr	NZ,00139$
   23D4 DD 34 FE           6857 	inc	-2 (ix)
   23D7                    6858 00139$:
   23D7 C3r8Es23           6859 	jp	00114$
   23DA                    6860 00120$:
                           6861 ;demo.c:1131: for (y = 0; y < 2; y++) {
   23DA DD 34 FB           6862 	inc	-5 (ix)
   23DD 20 03              6863 	jr	NZ,00140$
   23DF DD 34 FC           6864 	inc	-4 (ix)
   23E2                    6865 00140$:
   23E2 C3r59s23           6866 	jp	00118$
   23E5                    6867 00121$:
                           6868 ;demo.c:1138: puts("music init...");
   23E5 21rA1s27           6869 	ld	hl,#__str_15
   23E8 E5                 6870 	push	hl
   23E9 CDr00s00           6871 	call	_puts
   23EC F1                 6872 	pop	af
                           6873 ;demo.c:1140: PLY_SongPtr = (char *)0x0103;
   23ED 21r00s00           6874 	ld	hl,#_PLY_SongPtr + 0
   23F0 36 03              6875 	ld	(hl), #0x03
   23F2 21r01s00           6876 	ld	hl,#_PLY_SongPtr + 1
   23F5 36 01              6877 	ld	(hl), #0x01
                           6878 ;demo.c:1141: PLY_Init();
   23F7 CDr00s00           6879 	call	_PLY_Init
                           6880 ;demo.c:1142: puts("done.\r\n");
   23FA 21rAFs27           6881 	ld	hl,#__str_16
   23FD E5                 6882 	push	hl
   23FE CDr00s00           6883 	call	_puts
   2401 F1                 6884 	pop	af
                           6885 ;demo.c:1144: puts("detecting vdp type...\r\n\r\n");
   2402 21rB7s27           6886 	ld	hl,#__str_17
   2405 E5                 6887 	push	hl
   2406 CDr00s00           6888 	call	_puts
   2409 F1                 6889 	pop	af
                           6890 ;demo.c:1145: if(isvdp2())
   240A CDr00s00           6891 	call	_isvdp2
   240D AF                 6892 	xor	a,a
   240E B5                 6893 	or	a,l
   240F 28 0A              6894 	jr	Z,00102$
                           6895 ;demo.c:1147: puts("vdp2 found! setting 50hz...\r\n\r\n");
   2411 21rD1s27           6896 	ld	hl,#__str_18
   2414 E5                 6897 	push	hl
   2415 CDr00s00           6898 	call	_puts
   2418 F1                 6899 	pop	af
   2419 18 0B              6900 	jr	00103$
   241B                    6901 00102$:
                           6902 ;demo.c:1150: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   241B 21rF1s27           6903 	ld	hl,#__str_19
   241E E5                 6904 	push	hl
   241F CDr00s00           6905 	call	_puts
   2422 F1                 6906 	pop	af
                           6907 ;demo.c:1151: do_quit();
   2423 CDr04s23           6908 	call	_do_quit
   2426                    6909 00103$:
                           6910 ;demo.c:1154: pal_load("TWISTER PL5",32,1);
   2426 21 01 00           6911 	ld	hl,#0x0001
   2429 E5                 6912 	push	hl
   242A 3E 20              6913 	ld	a,#0x20
   242C F5                 6914 	push	af
   242D 33                 6915 	inc	sp
   242E 21r38s28           6916 	ld	hl,#__str_20
   2431 E5                 6917 	push	hl
   2432 CDrA3s07           6918 	call	_pal_load
   2435 F1                 6919 	pop	af
   2436 F1                 6920 	pop	af
   2437 33                 6921 	inc	sp
                           6922 ;demo.c:1155: memcpy(twister_palette, cur_palette, 32);
   2438 21 20 00           6923 	ld	hl,#0x0020
   243B E5                 6924 	push	hl
   243C 21r60s40           6925 	ld	hl,#_cur_palette
   243F E5                 6926 	push	hl
   2440 21rA0s40           6927 	ld	hl,#_twister_palette
   2443 E5                 6928 	push	hl
   2444 CDr00s00           6929 	call	_memcpy
   2447 F1                 6930 	pop	af
   2448 F1                 6931 	pop	af
   2449 F1                 6932 	pop	af
                           6933 ;demo.c:1156: pal_load("LF      PL5",32,1);
   244A 21 01 00           6934 	ld	hl,#0x0001
   244D E5                 6935 	push	hl
   244E 3E 20              6936 	ld	a,#0x20
   2450 F5                 6937 	push	af
   2451 33                 6938 	inc	sp
   2452 21r44s28           6939 	ld	hl,#__str_21
   2455 E5                 6940 	push	hl
   2456 CDrA3s07           6941 	call	_pal_load
   2459 F1                 6942 	pop	af
   245A F1                 6943 	pop	af
   245B 33                 6944 	inc	sp
                           6945 ;demo.c:1157: memcpy(tf_palette, cur_palette, 32);
   245C 21 20 00           6946 	ld	hl,#0x0020
   245F E5                 6947 	push	hl
   2460 21r60s40           6948 	ld	hl,#_cur_palette
   2463 E5                 6949 	push	hl
   2464 21rC0s40           6950 	ld	hl,#_tf_palette
   2467 E5                 6951 	push	hl
   2468 CDr00s00           6952 	call	_memcpy
   246B F1                 6953 	pop	af
   246C F1                 6954 	pop	af
   246D F1                 6955 	pop	af
                           6956 ;demo.c:1158: pal_load("BOXES   PL5",32,1);
   246E 21 01 00           6957 	ld	hl,#0x0001
   2471 E5                 6958 	push	hl
   2472 3E 20              6959 	ld	a,#0x20
   2474 F5                 6960 	push	af
   2475 33                 6961 	inc	sp
   2476 21r50s28           6962 	ld	hl,#__str_22
   2479 E5                 6963 	push	hl
   247A CDrA3s07           6964 	call	_pal_load
   247D F1                 6965 	pop	af
   247E F1                 6966 	pop	af
   247F 33                 6967 	inc	sp
                           6968 ;demo.c:1159: memcpy(boxes_palette, cur_palette, 32);
   2480 21 20 00           6969 	ld	hl,#0x0020
   2483 E5                 6970 	push	hl
   2484 21r60s40           6971 	ld	hl,#_cur_palette
   2487 E5                 6972 	push	hl
   2488 21rE0s40           6973 	ld	hl,#_boxes_palette
   248B E5                 6974 	push	hl
   248C CDr00s00           6975 	call	_memcpy
   248F F1                 6976 	pop	af
   2490 F1                 6977 	pop	af
   2491 F1                 6978 	pop	af
                           6979 ;demo.c:1160: pal_load("BULBS   PL5",32,1);
   2492 21 01 00           6980 	ld	hl,#0x0001
   2495 E5                 6981 	push	hl
   2496 3E 20              6982 	ld	a,#0x20
   2498 F5                 6983 	push	af
   2499 33                 6984 	inc	sp
   249A 21r5Cs28           6985 	ld	hl,#__str_23
   249D E5                 6986 	push	hl
   249E CDrA3s07           6987 	call	_pal_load
   24A1 F1                 6988 	pop	af
   24A2 F1                 6989 	pop	af
   24A3 33                 6990 	inc	sp
                           6991 ;demo.c:1162: scratch_clear();
   24A4 CDr90s07           6992 	call	_scratch_clear
                           6993 ;demo.c:1163: vdp_load_palette(scratch);
   24A7 21rE0s3F           6994 	ld	hl,#_scratch
   24AA E5                 6995 	push	hl
   24AB CDr00s00           6996 	call	_vdp_load_palette
   24AE F1                 6997 	pop	af
                           6998 ;demo.c:1165: vdp_set_screen5();
   24AF CDr00s00           6999 	call	_vdp_set_screen5
                           7000 ;demo.c:1167: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   24B2 21 00 00           7001 	ld	hl,#0x0000
   24B5 E5                 7002 	push	hl
   24B6 2E 01              7003 	ld	l, #0x01
   24B8 E5                 7004 	push	hl
   24B9 2E 00              7005 	ld	l, #0x00
   24BB E5                 7006 	push	hl
   24BC 21 7F 09           7007 	ld	hl,#0x097F
   24BF E5                 7008 	push	hl
   24C0 21r68s28           7009 	ld	hl,#__str_24
   24C3 E5                 7010 	push	hl
   24C4 CDr99s09           7011 	call	_pck_load
   24C7 FD 21 0A 00        7012 	ld	iy,#0x000A
   24CB FD 39              7013 	add	iy,sp
   24CD FD F9              7014 	ld	sp,iy
                           7015 ;demo.c:1169: cmd.size_x = 256;
   24CF 21r0Cs41           7016 	ld	hl, #_cmd + 8
   24D2 36 00              7017 	ld	(hl),#0x00
   24D4 23                 7018 	inc	hl
   24D5 36 01              7019 	ld	(hl),#0x01
                           7020 ;demo.c:1170: cmd.size_y = 212;
   24D7 21r0Es41           7021 	ld	hl, #_cmd + 10
   24DA 36 D4              7022 	ld	(hl),#0xD4
   24DC 23                 7023 	inc	hl
   24DD 36 00              7024 	ld	(hl),#0x00
                           7025 ;demo.c:1171: cmd.data = 0;
                           7026 ;demo.c:1172: cmd.argument = 0x00;
   24DF 3E 00              7027 	ld	a,#0x00
   24E1 32r10s41           7028 	ld	(#_cmd + 12),a
   24E4 32r11s41           7029 	ld	(#_cmd + 13),a
                           7030 ;demo.c:1173: cmd.command = 0xd0; 
   24E7 01r12s41           7031 	ld	bc,#_cmd + 14
   24EA 3E D0              7032 	ld	a,#0xD0
   24EC 02                 7033 	ld	(bc),a
                           7034 ;demo.c:1174: cmd.source_x = 0;
   24ED 21r04s41           7035 	ld	hl,#_cmd
   24F0 36 00              7036 	ld	(hl),#0x00
   24F2 23                 7037 	inc	hl
   24F3 36 00              7038 	ld	(hl),#0x00
                           7039 ;demo.c:1175: cmd.source_y = 0;
   24F5 21r06s41           7040 	ld	hl, #_cmd + 2
   24F8 36 00              7041 	ld	(hl),#0x00
   24FA 23                 7042 	inc	hl
   24FB 36 00              7043 	ld	(hl),#0x00
                           7044 ;demo.c:1176: cmd.dest_x = 0;
   24FD 21r08s41           7045 	ld	hl, #_cmd + 4
   2500 36 00              7046 	ld	(hl),#0x00
   2502 23                 7047 	inc	hl
   2503 36 00              7048 	ld	(hl),#0x00
                           7049 ;demo.c:1177: cmd.dest_y = 256;
   2505 21r0As41           7050 	ld	hl, #_cmd + 6
   2508 36 00              7051 	ld	(hl),#0x00
   250A 23                 7052 	inc	hl
   250B 36 01              7053 	ld	(hl),#0x01
                           7054 ;demo.c:1178: vdp_copier(&cmd);
   250D 21r04s41           7055 	ld	hl,#_cmd
   2510 E5                 7056 	push	hl
   2511 CDr00s00           7057 	call	_vdp_copier
   2514 F1                 7058 	pop	af
                           7059 ;demo.c:1180: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   2515 21 00 00           7060 	ld	hl,#0x0000
   2518 E5                 7061 	push	hl
   2519 2E 01              7062 	ld	l, #0x01
   251B E5                 7063 	push	hl
   251C 2E 00              7064 	ld	l, #0x00
   251E E5                 7065 	push	hl
   251F 21 C0 0F           7066 	ld	hl,#0x0FC0
   2522 E5                 7067 	push	hl
   2523 21r74s28           7068 	ld	hl,#__str_25
   2526 E5                 7069 	push	hl
   2527 CDr99s09           7070 	call	_pck_load
   252A FD 21 0A 00        7071 	ld	iy,#0x000A
   252E FD 39              7072 	add	iy,sp
   2530 FD F9              7073 	ld	sp,iy
                           7074 ;demo.c:1182: cmd.size_x = 256;
   2532 21r0Cs41           7075 	ld	hl, #_cmd + 8
   2535 36 00              7076 	ld	(hl),#0x00
   2537 23                 7077 	inc	hl
   2538 36 01              7078 	ld	(hl),#0x01
                           7079 ;demo.c:1183: cmd.size_y = 212;
   253A 21r0Es41           7080 	ld	hl, #_cmd + 10
   253D 36 D4              7081 	ld	(hl),#0xD4
   253F 23                 7082 	inc	hl
   2540 36 00              7083 	ld	(hl),#0x00
                           7084 ;demo.c:1184: cmd.data = 0;
                           7085 ;demo.c:1185: cmd.argument = 0x00;
   2542 3E 00              7086 	ld	a,#0x00
   2544 32r10s41           7087 	ld	(#_cmd + 12),a
   2547 32r11s41           7088 	ld	(#_cmd + 13),a
                           7089 ;demo.c:1186: cmd.command = 0xd0; 
   254A 01r12s41           7090 	ld	bc,#_cmd + 14
   254D 3E D0              7091 	ld	a,#0xD0
   254F 02                 7092 	ld	(bc),a
                           7093 ;demo.c:1187: cmd.source_x = 0;
   2550 21r04s41           7094 	ld	hl,#_cmd
   2553 36 00              7095 	ld	(hl),#0x00
   2555 23                 7096 	inc	hl
   2556 36 00              7097 	ld	(hl),#0x00
                           7098 ;demo.c:1188: cmd.source_y = 0;
   2558 21r06s41           7099 	ld	hl, #_cmd + 2
   255B 36 00              7100 	ld	(hl),#0x00
   255D 23                 7101 	inc	hl
   255E 36 00              7102 	ld	(hl),#0x00
                           7103 ;demo.c:1189: cmd.dest_x = 0;
   2560 21r08s41           7104 	ld	hl, #_cmd + 4
   2563 36 00              7105 	ld	(hl),#0x00
   2565 23                 7106 	inc	hl
   2566 36 00              7107 	ld	(hl),#0x00
                           7108 ;demo.c:1190: cmd.dest_y = 512;
   2568 21r0As41           7109 	ld	hl, #_cmd + 6
   256B 36 00              7110 	ld	(hl),#0x00
   256D 23                 7111 	inc	hl
   256E 36 02              7112 	ld	(hl),#0x02
                           7113 ;demo.c:1191: vdp_copier(&cmd);
   2570 21r04s41           7114 	ld	hl,#_cmd
   2573 E5                 7115 	push	hl
   2574 CDr00s00           7116 	call	_vdp_copier
   2577 F1                 7117 	pop	af
                           7118 ;demo.c:1194: pck_load("BOXES   PCK",2258,0x0000,VRAM_0,0);
   2578 21 00 00           7119 	ld	hl,#0x0000
   257B E5                 7120 	push	hl
   257C 2E 01              7121 	ld	l, #0x01
   257E E5                 7122 	push	hl
   257F 2E 00              7123 	ld	l, #0x00
   2581 E5                 7124 	push	hl
   2582 21 D2 08           7125 	ld	hl,#0x08D2
   2585 E5                 7126 	push	hl
   2586 21r80s28           7127 	ld	hl,#__str_26
   2589 E5                 7128 	push	hl
   258A CDr99s09           7129 	call	_pck_load
   258D FD 21 0A 00        7130 	ld	iy,#0x000A
   2591 FD 39              7131 	add	iy,sp
   2593 FD F9              7132 	ld	sp,iy
                           7133 ;demo.c:1195: cmd.size_x = 256;
   2595 21r0Cs41           7134 	ld	hl, #_cmd + 8
   2598 36 00              7135 	ld	(hl),#0x00
   259A 23                 7136 	inc	hl
   259B 36 01              7137 	ld	(hl),#0x01
                           7138 ;demo.c:1196: cmd.size_y = 212;
   259D 21r0Es41           7139 	ld	hl, #_cmd + 10
   25A0 36 D4              7140 	ld	(hl),#0xD4
   25A2 23                 7141 	inc	hl
   25A3 36 00              7142 	ld	(hl),#0x00
                           7143 ;demo.c:1197: cmd.data = 0;
                           7144 ;demo.c:1198: cmd.argument = 0x00;
   25A5 3E 00              7145 	ld	a,#0x00
   25A7 32r10s41           7146 	ld	(#_cmd + 12),a
   25AA 32r11s41           7147 	ld	(#_cmd + 13),a
                           7148 ;demo.c:1199: cmd.command = 0xd0; 
   25AD 01r12s41           7149 	ld	bc,#_cmd + 14
   25B0 3E D0              7150 	ld	a,#0xD0
   25B2 02                 7151 	ld	(bc),a
                           7152 ;demo.c:1200: cmd.source_x = 0;
   25B3 21r04s41           7153 	ld	hl,#_cmd
   25B6 36 00              7154 	ld	(hl),#0x00
   25B8 23                 7155 	inc	hl
   25B9 36 00              7156 	ld	(hl),#0x00
                           7157 ;demo.c:1201: cmd.source_y = 0;
   25BB 21r06s41           7158 	ld	hl, #_cmd + 2
   25BE 36 00              7159 	ld	(hl),#0x00
   25C0 23                 7160 	inc	hl
   25C1 36 00              7161 	ld	(hl),#0x00
                           7162 ;demo.c:1202: cmd.dest_x = 0;
   25C3 21r08s41           7163 	ld	hl, #_cmd + 4
   25C6 36 00              7164 	ld	(hl),#0x00
   25C8 23                 7165 	inc	hl
   25C9 36 00              7166 	ld	(hl),#0x00
                           7167 ;demo.c:1203: cmd.dest_y = 768;
   25CB 21r0As41           7168 	ld	hl, #_cmd + 6
   25CE 36 00              7169 	ld	(hl),#0x00
   25D0 23                 7170 	inc	hl
   25D1 36 03              7171 	ld	(hl),#0x03
                           7172 ;demo.c:1204: vdp_copier(&cmd);
   25D3 21r04s41           7173 	ld	hl,#_cmd
   25D6 E5                 7174 	push	hl
   25D7 CDr00s00           7175 	call	_vdp_copier
   25DA F1                 7176 	pop	af
                           7177 ;demo.c:1206: scratch_clear();
   25DB CDr90s07           7178 	call	_scratch_clear
                           7179 ;demo.c:1207: vdp_load_palette(scratch);
   25DE 21rE0s3F           7180 	ld	hl,#_scratch
   25E1 E5                 7181 	push	hl
   25E2 CDr00s00           7182 	call	_vdp_load_palette
   25E5 F1                 7183 	pop	af
                           7184 ;demo.c:1209: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   25E6 21 00 00           7185 	ld	hl,#0x0000
   25E9 E5                 7186 	push	hl
   25EA 2E 01              7187 	ld	l, #0x01
   25EC E5                 7188 	push	hl
   25ED 2E 00              7189 	ld	l, #0x00
   25EF E5                 7190 	push	hl
   25F0 21 6A 08           7191 	ld	hl,#0x086A
   25F3 E5                 7192 	push	hl
   25F4 21r8Cs28           7193 	ld	hl,#__str_27
   25F7 E5                 7194 	push	hl
   25F8 CDr99s09           7195 	call	_pck_load
   25FB FD 21 0A 00        7196 	ld	iy,#0x000A
   25FF FD 39              7197 	add	iy,sp
   2601 FD F9              7198 	ld	sp,iy
                           7199 ;demo.c:1211: cmd.size_x = 108;
   2603 21r0Cs41           7200 	ld	hl, #_cmd + 8
   2606 36 6C              7201 	ld	(hl),#0x6C
   2608 23                 7202 	inc	hl
   2609 36 00              7203 	ld	(hl),#0x00
                           7204 ;demo.c:1212: cmd.size_y = 116;
   260B 21r0Es41           7205 	ld	hl, #_cmd + 10
   260E 36 74              7206 	ld	(hl),#0x74
   2610 23                 7207 	inc	hl
   2611 36 00              7208 	ld	(hl),#0x00
                           7209 ;demo.c:1213: cmd.data = 0;
                           7210 ;demo.c:1214: cmd.argument = 0x00;
   2613 3E 00              7211 	ld	a,#0x00
   2615 32r10s41           7212 	ld	(#_cmd + 12),a
   2618 32r11s41           7213 	ld	(#_cmd + 13),a
                           7214 ;demo.c:1215: cmd.command = 0xd0; 
   261B 01r12s41           7215 	ld	bc,#_cmd + 14
   261E 3E D0              7216 	ld	a,#0xD0
   2620 02                 7217 	ld	(bc),a
                           7218 ;demo.c:1216: cmd.source_x = 75;
   2621 21r04s41           7219 	ld	hl,#_cmd
   2624 36 4B              7220 	ld	(hl),#0x4B
   2626 23                 7221 	inc	hl
   2627 36 00              7222 	ld	(hl),#0x00
                           7223 ;demo.c:1217: cmd.source_y = 50;
   2629 21r06s41           7224 	ld	hl, #_cmd + 2
   262C 36 32              7225 	ld	(hl),#0x32
   262E 23                 7226 	inc	hl
   262F 36 00              7227 	ld	(hl),#0x00
                           7228 ;demo.c:1218: cmd.dest_x = 75;
   2631 21r08s41           7229 	ld	hl, #_cmd + 4
   2634 36 4B              7230 	ld	(hl),#0x4B
   2636 23                 7231 	inc	hl
   2637 36 00              7232 	ld	(hl),#0x00
                           7233 ;demo.c:1219: cmd.dest_y = 256;
   2639 21r0As41           7234 	ld	hl, #_cmd + 6
   263C 36 00              7235 	ld	(hl),#0x00
   263E 23                 7236 	inc	hl
   263F 36 01              7237 	ld	(hl),#0x01
                           7238 ;demo.c:1220: vdp_copier(&cmd);
   2641 21r04s41           7239 	ld	hl,#_cmd
   2644 E5                 7240 	push	hl
   2645 CDr00s00           7241 	call	_vdp_copier
   2648 F1                 7242 	pop	af
                           7243 ;demo.c:1222: cmd.size_x = 108;
   2649 21r0Cs41           7244 	ld	hl, #_cmd + 8
   264C 36 6C              7245 	ld	(hl),#0x6C
   264E 23                 7246 	inc	hl
   264F 36 00              7247 	ld	(hl),#0x00
                           7248 ;demo.c:1223: cmd.size_y = 60;
   2651 21r0Es41           7249 	ld	hl, #_cmd + 10
   2654 36 3C              7250 	ld	(hl),#0x3C
   2656 23                 7251 	inc	hl
   2657 36 00              7252 	ld	(hl),#0x00
                           7253 ;demo.c:1224: cmd.data = 0;
                           7254 ;demo.c:1225: cmd.argument = 0x00;
   2659 3E 00              7255 	ld	a,#0x00
   265B 32r10s41           7256 	ld	(#_cmd + 12),a
   265E 32r11s41           7257 	ld	(#_cmd + 13),a
                           7258 ;demo.c:1226: cmd.command = 0xd0; 
   2661 01r12s41           7259 	ld	bc,#_cmd + 14
   2664 3E D0              7260 	ld	a,#0xD0
   2666 02                 7261 	ld	(bc),a
                           7262 ;demo.c:1227: cmd.source_x = 75;
   2667 21r04s41           7263 	ld	hl,#_cmd
   266A 36 4B              7264 	ld	(hl),#0x4B
   266C 23                 7265 	inc	hl
   266D 36 00              7266 	ld	(hl),#0x00
                           7267 ;demo.c:1228: cmd.source_y = 256+110;
   266F 21r06s41           7268 	ld	hl, #_cmd + 2
   2672 36 6E              7269 	ld	(hl),#0x6E
   2674 23                 7270 	inc	hl
   2675 36 01              7271 	ld	(hl),#0x01
                           7272 ;demo.c:1229: cmd.dest_x = 75;
   2677 21r08s41           7273 	ld	hl, #_cmd + 4
   267A 36 4B              7274 	ld	(hl),#0x4B
   267C 23                 7275 	inc	hl
   267D 36 00              7276 	ld	(hl),#0x00
                           7277 ;demo.c:1230: cmd.dest_y = 40;
   267F 21r0As41           7278 	ld	hl, #_cmd + 6
   2682 36 28              7279 	ld	(hl),#0x28
   2684 23                 7280 	inc	hl
   2685 36 00              7281 	ld	(hl),#0x00
                           7282 ;demo.c:1231: vdp_copier(&cmd);
   2687 21r04s41           7283 	ld	hl,#_cmd
   268A E5                 7284 	push	hl
   268B CDr00s00           7285 	call	_vdp_copier
   268E F1                 7286 	pop	af
                           7287 ;demo.c:1232: cmd.dest_x = 75;
   268F 21r08s41           7288 	ld	hl, #_cmd + 4
   2692 36 4B              7289 	ld	(hl),#0x4B
   2694 23                 7290 	inc	hl
   2695 36 00              7291 	ld	(hl),#0x00
                           7292 ;demo.c:1233: cmd.dest_y = 100;
   2697 21r0As41           7293 	ld	hl, #_cmd + 6
   269A 36 64              7294 	ld	(hl),#0x64
   269C 23                 7295 	inc	hl
   269D 36 00              7296 	ld	(hl),#0x00
                           7297 ;demo.c:1234: vdp_copier(&cmd);
   269F 21r04s41           7298 	ld	hl,#_cmd
   26A2 E5                 7299 	push	hl
   26A3 CDr00s00           7300 	call	_vdp_copier
   26A6 F1                 7301 	pop	af
                           7302 ;demo.c:1236: pal_load("DSSLOGO PL5",32,0);
   26A7 21 00 00           7303 	ld	hl,#0x0000
   26AA E5                 7304 	push	hl
   26AB 3E 20              7305 	ld	a,#0x20
   26AD F5                 7306 	push	af
   26AE 33                 7307 	inc	sp
   26AF 21r98s28           7308 	ld	hl,#__str_28
   26B2 E5                 7309 	push	hl
   26B3 CDrA3s07           7310 	call	_pal_load
   26B6 F1                 7311 	pop	af
   26B7 F1                 7312 	pop	af
   26B8 33                 7313 	inc	sp
                           7314 ;demo.c:1238: scratch_clear();
   26B9 CDr90s07           7315 	call	_scratch_clear
                           7316 ;demo.c:1240: vdp_register(9,130); // 50hz,212
   26BC 21 09 82           7317 	ld	hl,#0x8209
   26BF E5                 7318 	push	hl
   26C0 CDr00s00           7319 	call	_vdp_register
   26C3 F1                 7320 	pop	af
                           7321 ;demo.c:1242: install_isr(my_isr);
   26C4 21rECs05           7322 	ld	hl,#_my_isr
   26C7 E5                 7323 	push	hl
   26C8 CDr00s00           7324 	call	_install_isr
   26CB F1                 7325 	pop	af
                           7326 ;demo.c:1244: while (!quit) {
   26CC                    7327 00111$:
   26CC AF                 7328 	xor	a,a
   26CD DD B6 FF           7329 	or	a,-1 (ix)
   26D0 C2r8Bs27           7330 	jp	NZ,00113$
                           7331 ;demo.c:1246: if (vbicount >= scenetimings[timeindex+1]) {
   26D3 21rADs41           7332 	ld	hl,#_timeindex + 0
   26D6 4E                 7333 	ld	c,(hl)
   26D7 0C                 7334 	inc	c
   26D8 CB 21              7335 	sla	c
   26DA 3ErBB              7336 	ld	a,#<_scenetimings
   26DC 81                 7337 	add	a,c
   26DD 6F                 7338 	ld	l,a
   26DE 3Es41              7339 	ld	a,#>_scenetimings
   26E0 CE 00              7340 	adc	a,#0x00
   26E2 67                 7341 	ld	h,a
   26E3 4E                 7342 	ld	c,(hl)
   26E4 23                 7343 	inc	hl
   26E5 46                 7344 	ld	b,(hl)
   26E6 3Ar00s41           7345 	ld	a,(#_vbicount+0)
   26E9 91                 7346 	sub	a,c
   26EA 3Ar01s41           7347 	ld	a,(#_vbicount+1)
   26ED 98                 7348 	sbc	a,b
   26EE FAr17s27           7349 	jp	M,00105$
                           7350 ;demo.c:1247: sceneindex++;
   26F1 FD 21rABs41        7351 	ld	iy,#_sceneindex
   26F5 FD 34 00           7352 	inc	0 (iy)
   26F8 20 07              7353 	jr	NZ,00141$
   26FA FD 21rABs41        7354 	ld	iy,#_sceneindex
   26FE FD 34 01           7355 	inc	1 (iy)
   2701                    7356 00141$:
                           7357 ;demo.c:1248: timeindex+=2;
   2701 21rADs41           7358 	ld	hl,#_timeindex
   2704 7E                 7359 	ld	a,(hl)
   2705 C6 02              7360 	add	a,#0x02
   2707 23                 7361 	inc	hl
   2708 2B                 7362 	dec	hl
   2709 C5                 7363 	push	bc
   270A 4F                 7364 	ld	c, a
   270B 23                 7365 	inc	hl
   270C 7E                 7366 	ld	a, (hl)
   270D 47                 7367 	ld	b, a
   270E 79                 7368 	ld	a, c
   270F 2B                 7369 	dec	hl
   2710 77                 7370 	ld	(hl), a
   2711 78                 7371 	ld	a, b
   2712 C1                 7372 	pop	bc
   2713 CE 00              7373 	adc	a,#0x00
   2715 23                 7374 	inc	hl
   2716 77                 7375 	ld	(hl),a
   2717                    7376 00105$:
                           7377 ;demo.c:1251: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   2717 21rADs41           7378 	ld	hl,#_timeindex + 0
   271A 4E                 7379 	ld	c,(hl)
   271B 21rAEs41           7380 	ld	hl,#_timeindex + 1
   271E 46                 7381 	ld	b,(hl)
   271F CB 21              7382 	sla	c
   2721 CB 10              7383 	rl	b
   2723 21rBBs41           7384 	ld	hl,#_scenetimings
   2726 09                 7385 	add	hl,bc
   2727 4E                 7386 	ld	c,(hl)
   2728 23                 7387 	inc	hl
   2729 46                 7388 	ld	b,(hl)
   272A 3Ar00s41           7389 	ld	a,(#_vbicount+0)
   272D 91                 7390 	sub	a,c
   272E 3Ar01s41           7391 	ld	a,(#_vbicount+1)
   2731 98                 7392 	sbc	a,b
   2732 FAr77s27           7393 	jp	M,00107$
   2735 21rADs41           7394 	ld	hl,#_timeindex + 0
   2738 4E                 7395 	ld	c,(hl)
   2739 0C                 7396 	inc	c
   273A CB 21              7397 	sla	c
   273C 3ErBB              7398 	ld	a,#<_scenetimings
   273E 81                 7399 	add	a,c
   273F 6F                 7400 	ld	l,a
   2740 3Es41              7401 	ld	a,#>_scenetimings
   2742 CE 00              7402 	adc	a,#0x00
   2744 67                 7403 	ld	h,a
   2745 4E                 7404 	ld	c,(hl)
   2746 23                 7405 	inc	hl
   2747 46                 7406 	ld	b,(hl)
   2748 3Ar00s41           7407 	ld	a,(#_vbicount+0)
   274B 91                 7408 	sub	a,c
   274C FD 21r00s41        7409 	ld	iy,#_vbicount
   2750 FD 7E 01           7410 	ld	a,1 (iy)
   2753 98                 7411 	sbc	a,b
   2754 F2r77s27           7412 	jp	P,00107$
                           7413 ;demo.c:1252: waitVB();
   2757 76                 7414 		halt 
                           7415 ;demo.c:1253: scenepointers[sceneindex]();
   2758 21rABs41           7416 	ld	hl,#_sceneindex + 0
   275B 4E                 7417 	ld	c,(hl)
   275C FD 21rABs41        7418 	ld	iy,#_sceneindex
   2760 FD 46 01           7419 	ld	b,1 (iy)
   2763 CB 21              7420 	sla	c
   2765 CB 10              7421 	rl	b
   2767 21rAFs41           7422 	ld	hl,#_scenepointers
   276A 09                 7423 	add	hl,bc
   276B 4E                 7424 	ld	c,(hl)
   276C 23                 7425 	inc	hl
   276D 46                 7426 	ld	b,(hl)
   276E C5                 7427 	push	bc
   276F 21r76s27           7428 	ld	hl,#00146$
   2772 E5                 7429 	push	hl
   2773 69                 7430 	ld	l,c
   2774 60                 7431 	ld	h,b
   2775 E9                 7432 	jp	(hl)
   2776                    7433 00146$:
   2776 C1                 7434 	pop	bc
   2777                    7435 00107$:
                           7436 ;demo.c:1255: if(space())
   2777 21 08 01           7437 	ld	hl,#0x0108
   277A E5                 7438 	push	hl
   277B CDr00s00           7439 	call	_ispressed
   277E F1                 7440 	pop	af
   277F AF                 7441 	xor	a,a
   2780 B5                 7442 	or	a,l
   2781 CArCCs26           7443 	jp	Z,00111$
                           7444 ;demo.c:1256: quit=1;
   2784 DD 36 FF 01        7445 	ld	-1 (ix),#0x01
   2788 C3rCCs26           7446 	jp	00111$
   278B                    7447 00113$:
                           7448 ;demo.c:1259: do_quit();
   278B CDr04s23           7449 	call	_do_quit
   278E DD F9              7450 	ld	sp,ix
   2790 DD E1              7451 	pop	ix
   2792 C9                 7452 	ret
   2793                    7453 _main_end::
   2793                    7454 __str_14:
   2793 64 65 6D 6F 20 69  7455 	.ascii "demo init"
        6E 69 74
   279C 0D                 7456 	.db 0x0D
   279D 0A                 7457 	.db 0x0A
   279E 0D                 7458 	.db 0x0D
   279F 0A                 7459 	.db 0x0A
   27A0 00                 7460 	.db 0x00
   27A1                    7461 __str_15:
   27A1 6D 75 73 69 63 20  7462 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   27AE 00                 7463 	.db 0x00
   27AF                    7464 __str_16:
   27AF 64 6F 6E 65 2E     7465 	.ascii "done."
   27B4 0D                 7466 	.db 0x0D
   27B5 0A                 7467 	.db 0x0A
   27B6 00                 7468 	.db 0x00
   27B7                    7469 __str_17:
   27B7 64 65 74 65 63 74  7470 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   27CC 0D                 7471 	.db 0x0D
   27CD 0A                 7472 	.db 0x0A
   27CE 0D                 7473 	.db 0x0D
   27CF 0A                 7474 	.db 0x0A
   27D0 00                 7475 	.db 0x00
   27D1                    7476 __str_18:
   27D1 76 64 70 32 20 66  7477 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   27EC 0D                 7478 	.db 0x0D
   27ED 0A                 7479 	.db 0x0A
   27EE 0D                 7480 	.db 0x0D
   27EF 0A                 7481 	.db 0x0A
   27F0 00                 7482 	.db 0x00
   27F1                    7483 __str_19:
   27F1 20 76 64 70 31 20  7484 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   27FD 0D                 7485 	.db 0x0D
   27FE 0A                 7486 	.db 0x0A
   27FF 53 6F 72 72 79 2C  7487 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   282D 20 56 52 41 4D 2E  7488 	.ascii " VRAM."
   2833 0D                 7489 	.db 0x0D
   2834 0A                 7490 	.db 0x0A
   2835 0D                 7491 	.db 0x0D
   2836 0A                 7492 	.db 0x0A
   2837 00                 7493 	.db 0x00
   2838                    7494 __str_20:
   2838 54 57 49 53 54 45  7495 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   2843 00                 7496 	.db 0x00
   2844                    7497 __str_21:
   2844 4C 46 20 20 20 20  7498 	.ascii "LF      PL5"
        20 20 50 4C 35
   284F 00                 7499 	.db 0x00
   2850                    7500 __str_22:
   2850 42 4F 58 45 53 20  7501 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   285B 00                 7502 	.db 0x00
   285C                    7503 __str_23:
   285C 42 55 4C 42 53 20  7504 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   2867 00                 7505 	.db 0x00
   2868                    7506 __str_24:
   2868 42 55 4C 42 53 20  7507 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   2873 00                 7508 	.db 0x00
   2874                    7509 __str_25:
   2874 54 57 49 53 54 45  7510 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   287F 00                 7511 	.db 0x00
   2880                    7512 __str_26:
   2880 42 4F 58 45 53 20  7513 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   288B 00                 7514 	.db 0x00
   288C                    7515 __str_27:
   288C 44 53 53 4C 4F 47  7516 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   2897 00                 7517 	.db 0x00
   2898                    7518 __str_28:
   2898 44 53 53 4C 4F 47  7519 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   28A3 00                 7520 	.db 0x00
                           7521 	.area _CODE
                           7522 	.area _CABS
