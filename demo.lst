                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Sat Mar 24 14:49:48 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _credits
                             15 	.globl _waiter
                             16 	.globl _bigtext
                             17 	.globl _points
                             18 	.globl _logoeffu
                             19 	.globl _abs
                             20 	.globl _tritiles
                             21 	.globl _drawtilescreen_full
                             22 	.globl _drawtilescreen
                             23 	.globl _drawtritile
                             24 	.globl _thewave
                             25 	.globl _boxes
                             26 	.globl _drawbox
                             27 	.globl _animplay
                             28 	.globl _bulbs
                             29 	.globl _twister
                             30 	.globl _font
                             31 	.globl _drawsine
                             32 	.globl _drawstr2x
                             33 	.globl _drawstrslow
                             34 	.globl _drawstr
                             35 	.globl _do_letter_tall
                             36 	.globl _do_letter
                             37 	.globl _do_2xletter
                             38 	.globl _raster_effu
                             39 	.globl _do_blocks
                             40 	.globl _do_ymmm
                             41 	.globl _fadein
                             42 	.globl _pck_load
                             43 	.globl _raw_load
                             44 	.globl _pause
                             45 	.globl _pal_load
                             46 	.globl _scratch_clear
                             47 	.globl _ge5_load
                             48 	.globl _color_isr
                             49 	.globl _my_isr
                             50 	.globl _isNthBitSet
                             51 	.globl _timeindex
                             52 	.globl _sceneindex
                             53 	.globl _credittimer
                             54 	.globl _initcredits
                             55 	.globl _bigtextp
                             56 	.globl _greetindex
                             57 	.globl _pointframe
                             58 	.globl _initpoints
                             59 	.globl _onceclear
                             60 	.globl _powa
                             61 	.globl _powatick
                             62 	.globl _triframes
                             63 	.globl _tripaltick2
                             64 	.globl _tripaltick
                             65 	.globl _tripal
                             66 	.globl _tiletick
                             67 	.globl _tiley
                             68 	.globl _tilex
                             69 	.globl _tilei
                             70 	.globl _tri_inited
                             71 	.globl _ffa
                             72 	.globl _buf
                             73 	.globl _initwave
                             74 	.globl _prevbox_of
                             75 	.globl _boxes_of
                             76 	.globl _pbt
                             77 	.globl _pbx
                             78 	.globl _bonc
                             79 	.globl _bo
                             80 	.globl _bt
                             81 	.globl _by
                             82 	.globl _bx
                             83 	.globl _boxi
                             84 	.globl _boxes_y
                             85 	.globl _boxes_x
                             86 	.globl _prevy
                             87 	.globl _prevx
                             88 	.globl _buffer
                             89 	.globl _boxes_init
                             90 	.globl _anim_init
                             91 	.globl _sy
                             92 	.globl _enderdir
                             93 	.globl _ender
                             94 	.globl _ff2
                             95 	.globl _ff1
                             96 	.globl _bulbflipper
                             97 	.globl _twinited
                             98 	.globl _ff
                             99 	.globl _slowend
                            100 	.globl _ltrpointer
                            101 	.globl _ly
                            102 	.globl _lx
                            103 	.globl _linenum
                            104 	.globl _flof
                            105 	.globl _btab
                            106 	.globl _bty
                            107 	.globl _btx
                            108 	.globl _bsy
                            109 	.globl _bsx
                            110 	.globl _block_init
                            111 	.globl _cc
                            112 	.globl _yofff
                            113 	.globl _scenetimings
                            114 	.globl _scenepointers
                            115 	.globl _cmd
                            116 	.globl _tick
                            117 	.globl _vbicount
                            118 	.globl _credits_palette
                            119 	.globl _boxes_palette
                            120 	.globl _tf_palette
                            121 	.globl _twister_palette
                            122 	.globl _block_palette
                            123 	.globl _bulbs_palette
                            124 	.globl _cur_palette
                            125 	.globl _scratch
                            126 	.globl _packbuffer
                            127 	.globl _tri_lookup_y
                            128 	.globl _eighttimes
                            129 	.globl _twelvetimes
                            130 	.globl _tri_lookup_x
                            131 	.globl _sintab
                            132 	.globl _font_w
                            133 	.globl _font_y
                            134 	.globl _font_x
                            135 	.globl _tri_inva4
                            136 	.globl _tri_inva3
                            137 	.globl _tri_inva2
                            138 	.globl _tri_inva1
                            139 	.globl _tri_side2
                            140 	.globl _tri_side1
                            141 	.globl _tri_dia
                            142 	.globl _tri_up
                            143 	.globl _tri_center
                            144 	.globl _sintabx
                            145 ;--------------------------------------------------------
                            146 ; special function registers
                            147 ;--------------------------------------------------------
                            148 ;--------------------------------------------------------
                            149 ;  ram data
                            150 ;--------------------------------------------------------
                            151 	.area _DATA
   0000                     152 _sintab::
   0000                     153 	.ds 256
   0100                     154 _tri_lookup_x::
   0100                     155 	.ds 32
   0120                     156 _twelvetimes::
   0120                     157 	.ds 52
   0154                     158 _eighttimes::
   0154                     159 	.ds 52
   0188                     160 _tri_lookup_y::
   0188                     161 	.ds 64
   01C8                     162 _packbuffer::
   01C8                     163 	.ds 5000
   1550                     164 _scratch::
   1550                     165 	.ds 128
   15D0                     166 _cur_palette::
   15D0                     167 	.ds 32
   15F0                     168 _bulbs_palette::
   15F0                     169 	.ds 32
   1610                     170 _block_palette::
   1610                     171 	.ds 32
   1630                     172 _twister_palette::
   1630                     173 	.ds 32
   1650                     174 _tf_palette::
   1650                     175 	.ds 32
   1670                     176 _boxes_palette::
   1670                     177 	.ds 32
   1690                     178 _credits_palette::
   1690                     179 	.ds 32
   16B0                     180 _vbicount::
   16B0                     181 	.ds 2
   16B2                     182 _tick::
   16B2                     183 	.ds 2
   16B4                     184 _cmd::
   16B4                     185 	.ds 15
   16C3                     186 _scenepointers::
   16C3                     187 	.ds 24
   16DB                     188 _scenetimings::
   16DB                     189 	.ds 48
   170B                     190 _isNthBitSet_mask_1_1:
   170B                     191 	.ds 8
   1713                     192 _yofff::
   1713                     193 	.ds 1
   1714                     194 _cc::
   1714                     195 	.ds 1
   1715                     196 _flipper:
   1715                     197 	.ds 2
   1717                     198 _ymmmf:
   1717                     199 	.ds 2
   1719                     200 _block_init::
   1719                     201 	.ds 1
   171A                     202 _bsx::
   171A                     203 	.ds 2
   171C                     204 _bsy::
   171C                     205 	.ds 2
   171E                     206 _btx::
   171E                     207 	.ds 2
   1720                     208 _bty::
   1720                     209 	.ds 2
   1722                     210 _btab::
   1722                     211 	.ds 32
   1742                     212 _flof::
   1742                     213 	.ds 2
   1744                     214 _linenum::
   1744                     215 	.ds 2
   1746                     216 _lx::
   1746                     217 	.ds 1
   1747                     218 _ly::
   1747                     219 	.ds 1
   1748                     220 _ltrpointer::
   1748                     221 	.ds 2
   174A                     222 _slowend::
   174A                     223 	.ds 2
   174C                     224 _ff::
   174C                     225 	.ds 2
   174E                     226 _twinited::
   174E                     227 	.ds 2
   1750                     228 _bulbflipper::
   1750                     229 	.ds 2
   1752                     230 _ff1::
   1752                     231 	.ds 2
   1754                     232 _ff2::
   1754                     233 	.ds 2
   1756                     234 _ender::
   1756                     235 	.ds 2
   1758                     236 _enderdir::
   1758                     237 	.ds 2
   175A                     238 _sy::
   175A                     239 	.ds 2
   175C                     240 _xo:
   175C                     241 	.ds 2
   175E                     242 _yo:
   175E                     243 	.ds 2
   1760                     244 _po:
   1760                     245 	.ds 2
   1762                     246 _frames:
   1762                     247 	.ds 2
   1764                     248 _anim_init::
   1764                     249 	.ds 2
   1766                     250 _boxes_init::
   1766                     251 	.ds 1
   1767                     252 _buffer::
   1767                     253 	.ds 2
   1769                     254 _prevx::
   1769                     255 	.ds 2
   176B                     256 _prevy::
   176B                     257 	.ds 2
   176D                     258 _boxes_x::
   176D                     259 	.ds 5
   1772                     260 _boxes_y::
   1772                     261 	.ds 10
   177C                     262 _boxi::
   177C                     263 	.ds 1
   177D                     264 _bx::
   177D                     265 	.ds 2
   177F                     266 _by::
   177F                     267 	.ds 2
   1781                     268 _bt::
   1781                     269 	.ds 2
   1783                     270 _bo::
   1783                     271 	.ds 2
   1785                     272 _bonc::
   1785                     273 	.ds 2
   1787                     274 _pbx::
   1787                     275 	.ds 2
   1789                     276 _pbt::
   1789                     277 	.ds 2
   178B                     278 _boxes_of::
   178B                     279 	.ds 10
   1795                     280 _prevbox_of::
   1795                     281 	.ds 1
   1796                     282 _initwave::
   1796                     283 	.ds 1
   1797                     284 _buf::
   1797                     285 	.ds 2
   1799                     286 _ffa::
   1799                     287 	.ds 2
   179B                     288 _tri_inited::
   179B                     289 	.ds 1
   179C                     290 _tilei::
   179C                     291 	.ds 2
   179E                     292 _tilex::
   179E                     293 	.ds 2
   17A0                     294 _tiley::
   17A0                     295 	.ds 2
   17A2                     296 _tiletick::
   17A2                     297 	.ds 1
   17A3                     298 _tripal::
   17A3                     299 	.ds 9
   17AC                     300 _tripaltick::
   17AC                     301 	.ds 1
   17AD                     302 _tripaltick2::
   17AD                     303 	.ds 1
   17AE                     304 _triframes::
   17AE                     305 	.ds 2
   17B0                     306 _powatick::
   17B0                     307 	.ds 2
   17B2                     308 _powa::
   17B2                     309 	.ds 2
   17B4                     310 _onceclear::
   17B4                     311 	.ds 1
   17B5                     312 _initpoints::
   17B5                     313 	.ds 1
   17B6                     314 _pointframe::
   17B6                     315 	.ds 2
   17B8                     316 _greetindex::
   17B8                     317 	.ds 2
   17BA                     318 _bigtextp::
   17BA                     319 	.ds 2
   17BC                     320 _initcredits::
   17BC                     321 	.ds 2
   17BE                     322 _credittimer::
   17BE                     323 	.ds 2
   17C0                     324 _sceneindex::
   17C0                     325 	.ds 2
   17C2                     326 _timeindex::
   17C2                     327 	.ds 2
                            328 ;--------------------------------------------------------
                            329 ; overlayable items in  ram 
                            330 ;--------------------------------------------------------
                            331 	.area _OVERLAY
                            332 ;--------------------------------------------------------
                            333 ; external initialized ram data
                            334 ;--------------------------------------------------------
                            335 ;--------------------------------------------------------
                            336 ; global & static initialisations
                            337 ;--------------------------------------------------------
                            338 	.area _HOME
                            339 	.area _GSINIT
                            340 	.area _GSFINAL
                            341 	.area _GSINIT
                            342 ;demo.c:231: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r0Bs17            343 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            344 	call	__initrleblock
   0006 08                  345 	.db	8
   0007 01 02 04 08 10 20   346 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  347 	.db	0
                            348 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            349 	ld	hl,#_sintab
   0013 CDr00s00            350 	call	__initrleblock
   0016 3B                  351 	.db	59
   0017 00 03 06 09 0C 0F   352 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   353 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   354 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   355 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   356 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   357 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   358 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            359 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               360 	.db	#-5,#0x7E
   0054 01                  361 	.db	1
   0055 7F                  362 	.db	0x7F
   0056 FB 7E               363 	.db	#-5,#0x7E
   0058 75                  364 	.db	117
   0059 7D 7D 7C 7B 7B 7A   365 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   366 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   367 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   368 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   369 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   370 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   371 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   372 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   373 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   374 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   375 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   376 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   377 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   378 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      379 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               380 	.db	#-5,#0x82
   00D0 01                  381 	.db	1
   00D1 81                  382 	.db	0x81
   00D2 FB 82               383 	.db	#-5,#0x82
   00D4 3A                  384 	.db	58
   00D5 83 83 84 85 85 86   385 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   386 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   387 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   388 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   389 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   390 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   391 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               392 	.db	0xFA, 0xFD
   010F 00                  393 	.db	0
                            394 ;demo.c:177: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            395 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            396 	call	__initrleblock
   0116 E0 00               397 	.db	#-32,#0x00
   0118 00                  398 	.db	0
                            399 ;demo.c:178: int twelvetimes[26] = { 0 };
   0119 21r20s01            400 	ld	hl,#_twelvetimes
   011C CDr00s00            401 	call	__initrleblock
   011F CC 00               402 	.db	#-52,#0x00
   0121 00                  403 	.db	0
                            404 ;demo.c:179: int eighttimes[26] = { 0 };
   0122 21r54s01            405 	ld	hl,#_eighttimes
   0125 CDr00s00            406 	call	__initrleblock
   0128 CC 00               407 	.db	#-52,#0x00
   012A 00                  408 	.db	0
                            409 ;demo.c:181: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            410 	ld	hl,#_tri_lookup_y
   012E CDr00s00            411 	call	__initrleblock
   0131 C0 00               412 	.db	#-64,#0x00
   0133 00                  413 	.db	0
                            414 ;demo.c:183: uint8_t packbuffer[5000] = {0};
   0134 21rC8s01            415 	ld	hl,#_packbuffer
   0137 CDr00s00            416 	call	__initrleblock
   013A 81 00               417 	.db	#-127,#0x00
   013C 81 00               418 	.db	#-127,#0x00
   013E 81 00               419 	.db	#-127,#0x00
   0140 81 00               420 	.db	#-127,#0x00
   0142 81 00               421 	.db	#-127,#0x00
   0144 81 00               422 	.db	#-127,#0x00
   0146 81 00               423 	.db	#-127,#0x00
   0148 81 00               424 	.db	#-127,#0x00
   014A 81 00               425 	.db	#-127,#0x00
   014C 81 00               426 	.db	#-127,#0x00
   014E 81 00               427 	.db	#-127,#0x00
   0150 81 00               428 	.db	#-127,#0x00
   0152 81 00               429 	.db	#-127,#0x00
   0154 81 00               430 	.db	#-127,#0x00
   0156 81 00               431 	.db	#-127,#0x00
   0158 81 00               432 	.db	#-127,#0x00
   015A 81 00               433 	.db	#-127,#0x00
   015C 81 00               434 	.db	#-127,#0x00
   015E 81 00               435 	.db	#-127,#0x00
   0160 81 00               436 	.db	#-127,#0x00
   0162 81 00               437 	.db	#-127,#0x00
   0164 81 00               438 	.db	#-127,#0x00
   0166 81 00               439 	.db	#-127,#0x00
   0168 81 00               440 	.db	#-127,#0x00
   016A 81 00               441 	.db	#-127,#0x00
   016C 81 00               442 	.db	#-127,#0x00
   016E 81 00               443 	.db	#-127,#0x00
   0170 81 00               444 	.db	#-127,#0x00
   0172 81 00               445 	.db	#-127,#0x00
   0174 81 00               446 	.db	#-127,#0x00
   0176 81 00               447 	.db	#-127,#0x00
   0178 81 00               448 	.db	#-127,#0x00
   017A 81 00               449 	.db	#-127,#0x00
   017C 81 00               450 	.db	#-127,#0x00
   017E 81 00               451 	.db	#-127,#0x00
   0180 81 00               452 	.db	#-127,#0x00
   0182 81 00               453 	.db	#-127,#0x00
   0184 81 00               454 	.db	#-127,#0x00
   0186 81 00               455 	.db	#-127,#0x00
   0188 D1 00               456 	.db	#-47,#0x00
   018A 00                  457 	.db	0
                            458 ;demo.c:194: volatile int vbicount=0;
   018B FD 21rB0s16         459 	ld	iy,#_vbicount
   018F FD 36 00 00         460 	ld	0 (iy),#0x00
   0193 FD 21rB0s16         461 	ld	iy,#_vbicount
   0197 FD 36 01 00         462 	ld	1 (iy),#0x00
                            463 ;demo.c:195: volatile int tick=0;
   019B FD 21rB2s16         464 	ld	iy,#_tick
   019F FD 36 00 00         465 	ld	0 (iy),#0x00
   01A3 FD 21rB2s16         466 	ld	iy,#_tick
   01A7 FD 36 01 00         467 	ld	1 (iy),#0x00
                            468 ;demo.c:200: void (*scenepointers[12])() = {
   01AB 21rC3s16            469 	ld	hl,#_scenepointers
   01AE 36r92               470 	ld	(hl),#<_waiter
   01B0 23                  471 	inc	hl
   01B1 36s3D               472 	ld	(hl),#>_waiter
   01B3 21rC5s16            473 	ld	hl, #_scenepointers + 2
   01B6 36r44               474 	ld	(hl),#<_logoeffu
   01B8 23                  475 	inc	hl
   01B9 36s32               476 	ld	(hl),#>_logoeffu
   01BB 01rC7s16            477 	ld	bc,#_scenepointers + 4
   01BE 69                  478 	ld	l,c
   01BF 60                  479 	ld	h,b
   01C0 36r72               480 	ld	(hl),#<_bulbs
   01C2 23                  481 	inc	hl
   01C3 36s19               482 	ld	(hl),#>_bulbs
   01C5 21rC9s16            483 	ld	hl, #_scenepointers + 6
   01C8 36rD5               484 	ld	(hl),#<_twister
   01CA 23                  485 	inc	hl
   01CB 36s17               486 	ld	(hl),#>_twister
   01CD 01rCBs16            487 	ld	bc,#_scenepointers + 8
   01D0 69                  488 	ld	l,c
   01D1 60                  489 	ld	h,b
   01D2 36r25               490 	ld	(hl),#<_boxes
   01D4 23                  491 	inc	hl
   01D5 36s1F               492 	ld	(hl),#>_boxes
   01D7 21rCDs16            493 	ld	hl, #_scenepointers + 10
   01DA 36rD6               494 	ld	(hl),#<_thewave
   01DC 23                  495 	inc	hl
   01DD 36s23               496 	ld	(hl),#>_thewave
   01DF 21rCFs16            497 	ld	hl, #_scenepointers + 12
   01E2 36rF7               498 	ld	(hl),#<_tritiles
   01E4 23                  499 	inc	hl
   01E5 36s2B               500 	ld	(hl),#>_tritiles
   01E7 21rD1s16            501 	ld	hl, #_scenepointers + 14
   01EA 36rF3               502 	ld	(hl),#<_points
   01EC 23                  503 	inc	hl
   01ED 36s33               504 	ld	(hl),#>_points
   01EF 01rD3s16            505 	ld	bc,#_scenepointers + 16
   01F2 69                  506 	ld	l,c
   01F3 60                  507 	ld	h,b
   01F4 36rDA               508 	ld	(hl),#<_bigtext
   01F6 23                  509 	inc	hl
   01F7 36s37               510 	ld	(hl),#>_bigtext
   01F9 01rD5s16            511 	ld	bc,#_scenepointers + 18
   01FC 69                  512 	ld	l,c
   01FD 60                  513 	ld	h,b
   01FE 36r93               514 	ld	(hl),#<_credits
   0200 23                  515 	inc	hl
   0201 36s3D               516 	ld	(hl),#>_credits
   0203 01rD7s16            517 	ld	bc,#_scenepointers + 20
   0206 69                  518 	ld	l,c
   0207 60                  519 	ld	h,b
   0208 36r04               520 	ld	(hl),#<_do_quit
   020A 23                  521 	inc	hl
   020B 36s40               522 	ld	(hl),#>_do_quit
                            523 ;demo.c:214: int scenetimings[24] = {
   020D 21rDBs16            524 	ld	hl,#_scenetimings
   0210 CDr00s00            525 	call	__initrleblock
   0213 30                  526 	.db	48
   0214 00 00 AA 00 AA 00   527 	.db	0x00, 0x00, 0xAA, 0x00, 0xAA, 0x00, 0x5E, 0x01
        5E 01
   021C EE 02 14 05 14 05   528 	.db	0xEE, 0x02, 0x14, 0x05, 0x14, 0x05, 0xFC, 0x08
        FC 08
   0224 FC 08 10 0E 10 0E   529 	.db	0xFC, 0x08, 0x10, 0x0E, 0x10, 0x0E, 0x04, 0x10
        04 10
   022C 04 10 AE 15 AE 15   530 	.db	0x04, 0x10, 0xAE, 0x15, 0xAE, 0x15, 0xD4, 0x17
        D4 17
   0234 D4 17 A0 23 A0 23   531 	.db	0xD4, 0x17, 0xA0, 0x23, 0xA0, 0x23, 0x74, 0x27
        74 27
   023C 74 27 A0 86 00 00   532 	.db	0x74, 0x27, 0xA0, 0x86, 0x00, 0x00, 0x00, 0x00
        00 00
   0244 00                  533 	.db	0
                            534 ;demo.c:426: uint8_t yofff = 0;
   0245 FD 21r13s17         535 	ld	iy,#_yofff
   0249 FD 36 00 00         536 	ld	0 (iy),#0x00
                            537 ;demo.c:427: uint8_t cc = 0;
   024D FD 21r14s17         538 	ld	iy,#_cc
   0251 FD 36 00 00         539 	ld	0 (iy),#0x00
                            540 ;demo.c:428: static int flipper = 0;
   0255 FD 21r15s17         541 	ld	iy,#_flipper
   0259 FD 36 00 00         542 	ld	0 (iy),#0x00
   025D FD 21r15s17         543 	ld	iy,#_flipper
   0261 FD 36 01 00         544 	ld	1 (iy),#0x00
                            545 ;demo.c:429: static int ymmmf = 0;
   0265 FD 21r17s17         546 	ld	iy,#_ymmmf
   0269 FD 36 00 00         547 	ld	0 (iy),#0x00
   026D FD 21r17s17         548 	ld	iy,#_ymmmf
   0271 FD 36 01 00         549 	ld	1 (iy),#0x00
                            550 ;demo.c:460: char block_init = 0;
   0275 FD 21r19s17         551 	ld	iy,#_block_init
   0279 FD 36 00 00         552 	ld	0 (iy),#0x00
                            553 ;demo.c:462: int bsx = 0;
   027D FD 21r1As17         554 	ld	iy,#_bsx
   0281 FD 36 00 00         555 	ld	0 (iy),#0x00
   0285 FD 21r1As17         556 	ld	iy,#_bsx
   0289 FD 36 01 00         557 	ld	1 (iy),#0x00
                            558 ;demo.c:463: int bsy = 0;
   028D FD 21r1Cs17         559 	ld	iy,#_bsy
   0291 FD 36 00 00         560 	ld	0 (iy),#0x00
   0295 FD 21r1Cs17         561 	ld	iy,#_bsy
   0299 FD 36 01 00         562 	ld	1 (iy),#0x00
                            563 ;demo.c:464: int btx = 0;
   029D FD 21r1Es17         564 	ld	iy,#_btx
   02A1 FD 36 00 00         565 	ld	0 (iy),#0x00
   02A5 FD 21r1Es17         566 	ld	iy,#_btx
   02A9 FD 36 01 00         567 	ld	1 (iy),#0x00
                            568 ;demo.c:465: int bty = 0;
   02AD FD 21r20s17         569 	ld	iy,#_bty
   02B1 FD 36 00 00         570 	ld	0 (iy),#0x00
   02B5 FD 21r20s17         571 	ld	iy,#_bty
   02B9 FD 36 01 00         572 	ld	1 (iy),#0x00
                            573 ;demo.c:467: int btab[16] = {0};
   02BD 21r22s17            574 	ld	hl,#_btab
   02C0 CDr00s00            575 	call	__initrleblock
   02C3 E0 00               576 	.db	#-32,#0x00
   02C5 00                  577 	.db	0
                            578 ;demo.c:469: int flof = 0;
   02C6 FD 21r42s17         579 	ld	iy,#_flof
   02CA FD 36 00 00         580 	ld	0 (iy),#0x00
   02CE FD 21r42s17         581 	ld	iy,#_flof
   02D2 FD 36 01 00         582 	ld	1 (iy),#0x00
                            583 ;demo.c:518: int linenum = 0;
   02D6 FD 21r44s17         584 	ld	iy,#_linenum
   02DA FD 36 00 00         585 	ld	0 (iy),#0x00
   02DE FD 21r44s17         586 	ld	iy,#_linenum
   02E2 FD 36 01 00         587 	ld	1 (iy),#0x00
                            588 ;demo.c:576: uint8_t lx = 0;
   02E6 FD 21r46s17         589 	ld	iy,#_lx
   02EA FD 36 00 00         590 	ld	0 (iy),#0x00
                            591 ;demo.c:577: uint8_t ly = 0;
   02EE FD 21r47s17         592 	ld	iy,#_ly
   02F2 FD 36 00 00         593 	ld	0 (iy),#0x00
                            594 ;demo.c:662: int ltrpointer = 0;
   02F6 FD 21r48s17         595 	ld	iy,#_ltrpointer
   02FA FD 36 00 00         596 	ld	0 (iy),#0x00
   02FE FD 21r48s17         597 	ld	iy,#_ltrpointer
   0302 FD 36 01 00         598 	ld	1 (iy),#0x00
                            599 ;demo.c:663: int slowend = 128;
   0306 FD 21r4As17         600 	ld	iy,#_slowend
   030A FD 36 00 80         601 	ld	0 (iy),#0x80
   030E FD 21r4As17         602 	ld	iy,#_slowend
   0312 FD 36 01 00         603 	ld	1 (iy),#0x00
                            604 ;demo.c:715: int ff = 0;
   0316 FD 21r4Cs17         605 	ld	iy,#_ff
   031A FD 36 00 00         606 	ld	0 (iy),#0x00
   031E FD 21r4Cs17         607 	ld	iy,#_ff
   0322 FD 36 01 00         608 	ld	1 (iy),#0x00
                            609 ;demo.c:716: int twinited = 0;
   0326 FD 21r4Es17         610 	ld	iy,#_twinited
   032A FD 36 00 00         611 	ld	0 (iy),#0x00
   032E FD 21r4Es17         612 	ld	iy,#_twinited
   0332 FD 36 01 00         613 	ld	1 (iy),#0x00
                            614 ;demo.c:768: int bulbflipper = 1;
   0336 FD 21r50s17         615 	ld	iy,#_bulbflipper
   033A FD 36 00 01         616 	ld	0 (iy),#0x01
   033E FD 21r50s17         617 	ld	iy,#_bulbflipper
   0342 FD 36 01 00         618 	ld	1 (iy),#0x00
                            619 ;demo.c:770: int ff1,ff2 = 0;
   0346 FD 21r54s17         620 	ld	iy,#_ff2
   034A FD 36 00 00         621 	ld	0 (iy),#0x00
   034E FD 21r54s17         622 	ld	iy,#_ff2
   0352 FD 36 01 00         623 	ld	1 (iy),#0x00
                            624 ;demo.c:771: int ender = 212;
   0356 FD 21r56s17         625 	ld	iy,#_ender
   035A FD 36 00 D4         626 	ld	0 (iy),#0xD4
   035E FD 21r56s17         627 	ld	iy,#_ender
   0362 FD 36 01 00         628 	ld	1 (iy),#0x00
                            629 ;demo.c:772: int enderdir = -1;
   0366 FD 21r58s17         630 	ld	iy,#_enderdir
   036A FD 36 00 FF         631 	ld	0 (iy),#0xFF
   036E FD 21r58s17         632 	ld	iy,#_enderdir
   0372 FD 36 01 FF         633 	ld	1 (iy),#0xFF
                            634 ;demo.c:773: int sy = 16;
   0376 FD 21r5As17         635 	ld	iy,#_sy
   037A FD 36 00 10         636 	ld	0 (iy),#0x10
   037E FD 21r5As17         637 	ld	iy,#_sy
   0382 FD 36 01 00         638 	ld	1 (iy),#0x00
                            639 ;demo.c:829: static int xo = 0;
   0386 FD 21r5Cs17         640 	ld	iy,#_xo
   038A FD 36 00 00         641 	ld	0 (iy),#0x00
   038E FD 21r5Cs17         642 	ld	iy,#_xo
   0392 FD 36 01 00         643 	ld	1 (iy),#0x00
                            644 ;demo.c:830: static int yo = 0;
   0396 FD 21r5Es17         645 	ld	iy,#_yo
   039A FD 36 00 00         646 	ld	0 (iy),#0x00
   039E FD 21r5Es17         647 	ld	iy,#_yo
   03A2 FD 36 01 00         648 	ld	1 (iy),#0x00
                            649 ;demo.c:831: static int po = 0;
   03A6 FD 21r60s17         650 	ld	iy,#_po
   03AA FD 36 00 00         651 	ld	0 (iy),#0x00
   03AE FD 21r60s17         652 	ld	iy,#_po
   03B2 FD 36 01 00         653 	ld	1 (iy),#0x00
                            654 ;demo.c:832: static int frames = 0;
   03B6 FD 21r62s17         655 	ld	iy,#_frames
   03BA FD 36 00 00         656 	ld	0 (iy),#0x00
   03BE FD 21r62s17         657 	ld	iy,#_frames
   03C2 FD 36 01 00         658 	ld	1 (iy),#0x00
                            659 ;demo.c:834: int anim_init = 0;
   03C6 FD 21r64s17         660 	ld	iy,#_anim_init
   03CA FD 36 00 00         661 	ld	0 (iy),#0x00
   03CE FD 21r64s17         662 	ld	iy,#_anim_init
   03D2 FD 36 01 00         663 	ld	1 (iy),#0x00
                            664 ;demo.c:934: uint8_t boxes_init = 0;
   03D6 FD 21r66s17         665 	ld	iy,#_boxes_init
   03DA FD 36 00 00         666 	ld	0 (iy),#0x00
                            667 ;demo.c:935: int buffer = 1;
   03DE FD 21r67s17         668 	ld	iy,#_buffer
   03E2 FD 36 00 01         669 	ld	0 (iy),#0x01
   03E6 FD 21r67s17         670 	ld	iy,#_buffer
   03EA FD 36 01 00         671 	ld	1 (iy),#0x00
                            672 ;demo.c:936: int prevx = -1;
   03EE FD 21r69s17         673 	ld	iy,#_prevx
   03F2 FD 36 00 FF         674 	ld	0 (iy),#0xFF
   03F6 FD 21r69s17         675 	ld	iy,#_prevx
   03FA FD 36 01 FF         676 	ld	1 (iy),#0xFF
                            677 ;demo.c:938: uint8_t boxes_x[5] = {0,36,0,36,0};
   03FE 21r6Ds17            678 	ld	hl,#_boxes_x
   0401 CDr00s00            679 	call	__initrleblock
   0404 05                  680 	.db	5
   0405 00 24 00 24 00      681 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   040A 00                  682 	.db	0
                            683 ;demo.c:939: int boxes_y[5] = {768,768,768+36,768+36,0};
   040B 21r72s17            684 	ld	hl,#_boxes_y
   040E CDr00s00            685 	call	__initrleblock
   0411 0A                  686 	.db	10
   0412 00 03 00 03 24 03   687 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   041A 00 00               688 	.db	0x00, 0x00
   041C 00                  689 	.db	0
                            690 ;demo.c:940: uint8_t boxi = 0;
   041D FD 21r7Cs17         691 	ld	iy,#_boxi
   0421 FD 36 00 00         692 	ld	0 (iy),#0x00
                            693 ;demo.c:941: int bx = 220;
   0425 FD 21r7Ds17         694 	ld	iy,#_bx
   0429 FD 36 00 DC         695 	ld	0 (iy),#0xDC
   042D FD 21r7Ds17         696 	ld	iy,#_bx
   0431 FD 36 01 00         697 	ld	1 (iy),#0x00
                            698 ;demo.c:942: int by = 84;
   0435 FD 21r7Fs17         699 	ld	iy,#_by
   0439 FD 36 00 54         700 	ld	0 (iy),#0x54
   043D FD 21r7Fs17         701 	ld	iy,#_by
   0441 FD 36 01 00         702 	ld	1 (iy),#0x00
                            703 ;demo.c:960: int bt = 0;
   0445 FD 21r81s17         704 	ld	iy,#_bt
   0449 FD 36 00 00         705 	ld	0 (iy),#0x00
   044D FD 21r81s17         706 	ld	iy,#_bt
   0451 FD 36 01 00         707 	ld	1 (iy),#0x00
                            708 ;demo.c:961: int bo = 0;
   0455 FD 21r83s17         709 	ld	iy,#_bo
   0459 FD 36 00 00         710 	ld	0 (iy),#0x00
   045D FD 21r83s17         711 	ld	iy,#_bo
   0461 FD 36 01 00         712 	ld	1 (iy),#0x00
                            713 ;demo.c:963: int bonc = 0;
   0465 FD 21r85s17         714 	ld	iy,#_bonc
   0469 FD 36 00 00         715 	ld	0 (iy),#0x00
   046D FD 21r85s17         716 	ld	iy,#_bonc
   0471 FD 36 01 00         717 	ld	1 (iy),#0x00
                            718 ;demo.c:964: int pbx = 0;
   0475 FD 21r87s17         719 	ld	iy,#_pbx
   0479 FD 36 00 00         720 	ld	0 (iy),#0x00
   047D FD 21r87s17         721 	ld	iy,#_pbx
   0481 FD 36 01 00         722 	ld	1 (iy),#0x00
                            723 ;demo.c:965: int pbt = 0;
   0485 FD 21r89s17         724 	ld	iy,#_pbt
   0489 FD 36 00 00         725 	ld	0 (iy),#0x00
   048D FD 21r89s17         726 	ld	iy,#_pbt
   0491 FD 36 01 00         727 	ld	1 (iy),#0x00
                            728 ;demo.c:967: int boxes_of[5] = {0,0,6,0,0};
   0495 21r8Bs17            729 	ld	hl,#_boxes_of
   0498 CDr00s00            730 	call	__initrleblock
   049B 05                  731 	.db	5
   049C 00 00 00 00 06      732 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   04A1 FB 00               733 	.db	#-5,#0x00
   04A3 00                  734 	.db	0
                            735 ;demo.c:968: uint8_t prevbox_of = 0;
   04A4 FD 21r95s17         736 	ld	iy,#_prevbox_of
   04A8 FD 36 00 00         737 	ld	0 (iy),#0x00
                            738 ;demo.c:1085: uint8_t initwave = 0;
   04AC FD 21r96s17         739 	ld	iy,#_initwave
   04B0 FD 36 00 00         740 	ld	0 (iy),#0x00
                            741 ;demo.c:1086: int buf = -1;
   04B4 FD 21r97s17         742 	ld	iy,#_buf
   04B8 FD 36 00 FF         743 	ld	0 (iy),#0xFF
   04BC FD 21r97s17         744 	ld	iy,#_buf
   04C0 FD 36 01 FF         745 	ld	1 (iy),#0xFF
                            746 ;demo.c:1087: int ffa = 0;
   04C4 FD 21r99s17         747 	ld	iy,#_ffa
   04C8 FD 36 00 00         748 	ld	0 (iy),#0x00
   04CC FD 21r99s17         749 	ld	iy,#_ffa
   04D0 FD 36 01 00         750 	ld	1 (iy),#0x00
                            751 ;demo.c:1209: uint8_t tri_inited = 0;
   04D4 FD 21r9Bs17         752 	ld	iy,#_tri_inited
   04D8 FD 36 00 00         753 	ld	0 (iy),#0x00
                            754 ;demo.c:1224: int tilei = 0;
   04DC FD 21r9Cs17         755 	ld	iy,#_tilei
   04E0 FD 36 00 00         756 	ld	0 (iy),#0x00
   04E4 FD 21r9Cs17         757 	ld	iy,#_tilei
   04E8 FD 36 01 00         758 	ld	1 (iy),#0x00
                            759 ;demo.c:1225: int tilex = 0;
   04EC FD 21r9Es17         760 	ld	iy,#_tilex
   04F0 FD 36 00 00         761 	ld	0 (iy),#0x00
   04F4 FD 21r9Es17         762 	ld	iy,#_tilex
   04F8 FD 36 01 00         763 	ld	1 (iy),#0x00
                            764 ;demo.c:1226: int tiley = 0;
   04FC FD 21rA0s17         765 	ld	iy,#_tiley
   0500 FD 36 00 00         766 	ld	0 (iy),#0x00
   0504 FD 21rA0s17         767 	ld	iy,#_tiley
   0508 FD 36 01 00         768 	ld	1 (iy),#0x00
                            769 ;demo.c:1227: uint8_t tiletick = 0;
   050C FD 21rA2s17         770 	ld	iy,#_tiletick
   0510 FD 36 00 00         771 	ld	0 (iy),#0x00
                            772 ;demo.c:1257: char tripal[9] = {
   0514 21rA3s17            773 	ld	hl,#_tripal
   0517 CDr00s00            774 	call	__initrleblock
   051A 09                  775 	.db	9
   051B 02 02 01 01 02 03   776 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0523 02                  777 	.db	0x02
   0524 00                  778 	.db	0
                            779 ;demo.c:1263: uint8_t tripaltick = 0;
   0525 FD 21rACs17         780 	ld	iy,#_tripaltick
   0529 FD 36 00 00         781 	ld	0 (iy),#0x00
                            782 ;demo.c:1264: uint8_t tripaltick2 = 0;
   052D FD 21rADs17         783 	ld	iy,#_tripaltick2
   0531 FD 36 00 00         784 	ld	0 (iy),#0x00
                            785 ;demo.c:1266: int triframes = 0;
   0535 FD 21rAEs17         786 	ld	iy,#_triframes
   0539 FD 36 00 00         787 	ld	0 (iy),#0x00
   053D FD 21rAEs17         788 	ld	iy,#_triframes
   0541 FD 36 01 00         789 	ld	1 (iy),#0x00
                            790 ;demo.c:1420: int powatick = 0;
   0545 FD 21rB0s17         791 	ld	iy,#_powatick
   0549 FD 36 00 00         792 	ld	0 (iy),#0x00
   054D FD 21rB0s17         793 	ld	iy,#_powatick
   0551 FD 36 01 00         794 	ld	1 (iy),#0x00
                            795 ;demo.c:1421: int powa = 0;
   0555 FD 21rB2s17         796 	ld	iy,#_powa
   0559 FD 36 00 00         797 	ld	0 (iy),#0x00
   055D FD 21rB2s17         798 	ld	iy,#_powa
   0561 FD 36 01 00         799 	ld	1 (iy),#0x00
                            800 ;demo.c:1422: uint8_t onceclear = 255;
   0565 FD 21rB4s17         801 	ld	iy,#_onceclear
   0569 FD 36 00 FF         802 	ld	0 (iy),#0xFF
                            803 ;demo.c:1467: uint8_t initpoints = 0;
   056D FD 21rB5s17         804 	ld	iy,#_initpoints
   0571 FD 36 00 00         805 	ld	0 (iy),#0x00
                            806 ;demo.c:1468: int pointframe = 0;
   0575 FD 21rB6s17         807 	ld	iy,#_pointframe
   0579 FD 36 00 00         808 	ld	0 (iy),#0x00
   057D FD 21rB6s17         809 	ld	iy,#_pointframe
   0581 FD 36 01 00         810 	ld	1 (iy),#0x00
                            811 ;demo.c:1471: int greetindex = 0;
   0585 FD 21rB8s17         812 	ld	iy,#_greetindex
   0589 FD 36 00 00         813 	ld	0 (iy),#0x00
   058D FD 21rB8s17         814 	ld	iy,#_greetindex
   0591 FD 36 01 00         815 	ld	1 (iy),#0x00
                            816 ;demo.c:1566: int bigtextp = 0;
   0595 FD 21rBAs17         817 	ld	iy,#_bigtextp
   0599 FD 36 00 00         818 	ld	0 (iy),#0x00
   059D FD 21rBAs17         819 	ld	iy,#_bigtextp
   05A1 FD 36 01 00         820 	ld	1 (iy),#0x00
                            821 ;demo.c:1705: int initcredits = 0;
   05A5 FD 21rBCs17         822 	ld	iy,#_initcredits
   05A9 FD 36 00 00         823 	ld	0 (iy),#0x00
   05AD FD 21rBCs17         824 	ld	iy,#_initcredits
   05B1 FD 36 01 00         825 	ld	1 (iy),#0x00
                            826 ;demo.c:1706: int credittimer = 0;
   05B5 FD 21rBEs17         827 	ld	iy,#_credittimer
   05B9 FD 36 00 00         828 	ld	0 (iy),#0x00
   05BD FD 21rBEs17         829 	ld	iy,#_credittimer
   05C1 FD 36 01 00         830 	ld	1 (iy),#0x00
                            831 ;demo.c:1806: int sceneindex = 0;
   05C5 FD 21rC0s17         832 	ld	iy,#_sceneindex
   05C9 FD 36 00 00         833 	ld	0 (iy),#0x00
   05CD FD 21rC0s17         834 	ld	iy,#_sceneindex
   05D1 FD 36 01 00         835 	ld	1 (iy),#0x00
                            836 ;demo.c:1807: int timeindex = 0;
   05D5 FD 21rC2s17         837 	ld	iy,#_timeindex
   05D9 FD 36 00 00         838 	ld	0 (iy),#0x00
   05DD FD 21rC2s17         839 	ld	iy,#_timeindex
   05E1 FD 36 01 00         840 	ld	1 (iy),#0x00
                            841 ;--------------------------------------------------------
                            842 ; Home
                            843 ;--------------------------------------------------------
                            844 	.area _HOME
                            845 	.area _HOME
                            846 ;--------------------------------------------------------
                            847 ; code
                            848 ;--------------------------------------------------------
                            849 	.area _CODE
                            850 ;demo.c:230: int isNthBitSet (unsigned char c, int n) {
                            851 ;	---------------------------------
                            852 ; Function isNthBitSet
                            853 ; ---------------------------------
   0000                     854 _isNthBitSet_start::
   0000                     855 _isNthBitSet:
   0000 DD E5               856 	push	ix
   0002 DD 21 00 00         857 	ld	ix,#0
   0006 DD 39               858 	add	ix,sp
                            859 ;demo.c:232: return ((c & mask[n]) != 0);
   0008 3Er0B               860 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            861 	add	a,5 (ix)
   000D 4F                  862 	ld	c,a
   000E 3Es17               863 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            864 	adc	a,6 (ix)
   0013 47                  865 	ld	b,a
   0014 0A                  866 	ld	a,(bc)
   0015 DD A6 04            867 	and	a,4 (ix)
   0018 20 04               868 	jr	NZ,00103$
   001A 3E 01               869 	ld	a,#0x01
   001C 18 01               870 	jr	00104$
   001E                     871 00103$:
   001E AF                  872 	xor	a,a
   001F                     873 00104$:
   001F B7                  874 	or	a,a
   0020 D6 01               875 	sub	a,#0x01
   0022 3E 00               876 	ld	a,#0x00
   0024 17                  877 	rla
   0025 4F                  878 	ld	c,a
   0026 69                  879 	ld	l,c
   0027 26 00               880 	ld	h,#0x00
   0029 DD E1               881 	pop	ix
   002B C9                  882 	ret
   002C                     883 _isNthBitSet_end::
   002C                     884 _sintabx:
   002C 78                  885 	.db #0x78
   002D 7A                  886 	.db #0x7A
   002E 7D                  887 	.db #0x7D
   002F 80                  888 	.db #0x80
   0030 83                  889 	.db #0x83
   0031 86                  890 	.db #0x86
   0032 89                  891 	.db #0x89
   0033 8C                  892 	.db #0x8C
   0034 8F                  893 	.db #0x8F
   0035 92                  894 	.db #0x92
   0036 95                  895 	.db #0x95
   0037 98                  896 	.db #0x98
   0038 9A                  897 	.db #0x9A
   0039 9D                  898 	.db #0x9D
   003A A0                  899 	.db #0xA0
   003B A3                  900 	.db #0xA3
   003C A5                  901 	.db #0xA5
   003D A8                  902 	.db #0xA8
   003E AB                  903 	.db #0xAB
   003F AD                  904 	.db #0xAD
   0040 B0                  905 	.db #0xB0
   0041 B3                  906 	.db #0xB3
   0042 B5                  907 	.db #0xB5
   0043 B8                  908 	.db #0xB8
   0044 BA                  909 	.db #0xBA
   0045 BD                  910 	.db #0xBD
   0046 BF                  911 	.db #0xBF
   0047 C1                  912 	.db #0xC1
   0048 C4                  913 	.db #0xC4
   0049 C6                  914 	.db #0xC6
   004A C8                  915 	.db #0xC8
   004B CA                  916 	.db #0xCA
   004C CC                  917 	.db #0xCC
   004D CE                  918 	.db #0xCE
   004E D0                  919 	.db #0xD0
   004F D2                  920 	.db #0xD2
   0050 D4                  921 	.db #0xD4
   0051 D6                  922 	.db #0xD6
   0052 D8                  923 	.db #0xD8
   0053 DA                  924 	.db #0xDA
   0054 DB                  925 	.db #0xDB
   0055 DD                  926 	.db #0xDD
   0056 DE                  927 	.db #0xDE
   0057 E0                  928 	.db #0xE0
   0058 E1                  929 	.db #0xE1
   0059 E3                  930 	.db #0xE3
   005A E4                  931 	.db #0xE4
   005B E5                  932 	.db #0xE5
   005C E6                  933 	.db #0xE6
   005D E7                  934 	.db #0xE7
   005E E8                  935 	.db #0xE8
   005F E9                  936 	.db #0xE9
   0060 EA                  937 	.db #0xEA
   0061 EB                  938 	.db #0xEB
   0062 EC                  939 	.db #0xEC
   0063 ED                  940 	.db #0xED
   0064 ED                  941 	.db #0xED
   0065 EE                  942 	.db #0xEE
   0066 EE                  943 	.db #0xEE
   0067 EF                  944 	.db #0xEF
   0068 EF                  945 	.db #0xEF
   0069 EF                  946 	.db #0xEF
   006A EF                  947 	.db #0xEF
   006B EF                  948 	.db #0xEF
   006C F0                  949 	.db #0xF0
   006D EF                  950 	.db #0xEF
   006E EF                  951 	.db #0xEF
   006F EF                  952 	.db #0xEF
   0070 EF                  953 	.db #0xEF
   0071 EF                  954 	.db #0xEF
   0072 EE                  955 	.db #0xEE
   0073 EE                  956 	.db #0xEE
   0074 ED                  957 	.db #0xED
   0075 ED                  958 	.db #0xED
   0076 EC                  959 	.db #0xEC
   0077 EB                  960 	.db #0xEB
   0078 EA                  961 	.db #0xEA
   0079 E9                  962 	.db #0xE9
   007A E8                  963 	.db #0xE8
   007B E7                  964 	.db #0xE7
   007C E6                  965 	.db #0xE6
   007D E5                  966 	.db #0xE5
   007E E4                  967 	.db #0xE4
   007F E3                  968 	.db #0xE3
   0080 E1                  969 	.db #0xE1
   0081 E0                  970 	.db #0xE0
   0082 DE                  971 	.db #0xDE
   0083 DD                  972 	.db #0xDD
   0084 DB                  973 	.db #0xDB
   0085 DA                  974 	.db #0xDA
   0086 D8                  975 	.db #0xD8
   0087 D6                  976 	.db #0xD6
   0088 D4                  977 	.db #0xD4
   0089 D2                  978 	.db #0xD2
   008A D0                  979 	.db #0xD0
   008B CE                  980 	.db #0xCE
   008C CC                  981 	.db #0xCC
   008D CA                  982 	.db #0xCA
   008E C8                  983 	.db #0xC8
   008F C6                  984 	.db #0xC6
   0090 C4                  985 	.db #0xC4
   0091 C1                  986 	.db #0xC1
   0092 BF                  987 	.db #0xBF
   0093 BD                  988 	.db #0xBD
   0094 BA                  989 	.db #0xBA
   0095 B8                  990 	.db #0xB8
   0096 B5                  991 	.db #0xB5
   0097 B3                  992 	.db #0xB3
   0098 B0                  993 	.db #0xB0
   0099 AD                  994 	.db #0xAD
   009A AB                  995 	.db #0xAB
   009B A8                  996 	.db #0xA8
   009C A5                  997 	.db #0xA5
   009D A3                  998 	.db #0xA3
   009E A0                  999 	.db #0xA0
   009F 9D                 1000 	.db #0x9D
   00A0 9A                 1001 	.db #0x9A
   00A1 98                 1002 	.db #0x98
   00A2 95                 1003 	.db #0x95
   00A3 92                 1004 	.db #0x92
   00A4 8F                 1005 	.db #0x8F
   00A5 8C                 1006 	.db #0x8C
   00A6 89                 1007 	.db #0x89
   00A7 86                 1008 	.db #0x86
   00A8 83                 1009 	.db #0x83
   00A9 80                 1010 	.db #0x80
   00AA 7D                 1011 	.db #0x7D
   00AB 7A                 1012 	.db #0x7A
   00AC 78                 1013 	.db #0x78
   00AD 75                 1014 	.db #0x75
   00AE 72                 1015 	.db #0x72
   00AF 6F                 1016 	.db #0x6F
   00B0 6C                 1017 	.db #0x6C
   00B1 69                 1018 	.db #0x69
   00B2 66                 1019 	.db #0x66
   00B3 63                 1020 	.db #0x63
   00B4 60                 1021 	.db #0x60
   00B5 5D                 1022 	.db #0x5D
   00B6 5A                 1023 	.db #0x5A
   00B7 57                 1024 	.db #0x57
   00B8 55                 1025 	.db #0x55
   00B9 52                 1026 	.db #0x52
   00BA 4F                 1027 	.db #0x4F
   00BB 4C                 1028 	.db #0x4C
   00BC 4A                 1029 	.db #0x4A
   00BD 47                 1030 	.db #0x47
   00BE 44                 1031 	.db #0x44
   00BF 42                 1032 	.db #0x42
   00C0 3F                 1033 	.db #0x3F
   00C1 3C                 1034 	.db #0x3C
   00C2 3A                 1035 	.db #0x3A
   00C3 37                 1036 	.db #0x37
   00C4 35                 1037 	.db #0x35
   00C5 32                 1038 	.db #0x32
   00C6 30                 1039 	.db #0x30
   00C7 2E                 1040 	.db #0x2E
   00C8 2B                 1041 	.db #0x2B
   00C9 29                 1042 	.db #0x29
   00CA 27                 1043 	.db #0x27
   00CB 25                 1044 	.db #0x25
   00CC 23                 1045 	.db #0x23
   00CD 21                 1046 	.db #0x21
   00CE 1F                 1047 	.db #0x1F
   00CF 1D                 1048 	.db #0x1D
   00D0 1B                 1049 	.db #0x1B
   00D1 19                 1050 	.db #0x19
   00D2 17                 1051 	.db #0x17
   00D3 15                 1052 	.db #0x15
   00D4 14                 1053 	.db #0x14
   00D5 12                 1054 	.db #0x12
   00D6 11                 1055 	.db #0x11
   00D7 0F                 1056 	.db #0x0F
   00D8 0E                 1057 	.db #0x0E
   00D9 0C                 1058 	.db #0x0C
   00DA 0B                 1059 	.db #0x0B
   00DB 0A                 1060 	.db #0x0A
   00DC 09                 1061 	.db #0x09
   00DD 08                 1062 	.db #0x08
   00DE 07                 1063 	.db #0x07
   00DF 06                 1064 	.db #0x06
   00E0 05                 1065 	.db #0x05
   00E1 04                 1066 	.db #0x04
   00E2 03                 1067 	.db #0x03
   00E3 02                 1068 	.db #0x02
   00E4 02                 1069 	.db #0x02
   00E5 01                 1070 	.db #0x01
   00E6 01                 1071 	.db #0x01
   00E7 00                 1072 	.db #0x00
   00E8 00                 1073 	.db #0x00
   00E9 00                 1074 	.db #0x00
   00EA 00                 1075 	.db #0x00
   00EB 00                 1076 	.db #0x00
   00EC 00                 1077 	.db #0x00
   00ED 00                 1078 	.db #0x00
   00EE 00                 1079 	.db #0x00
   00EF 00                 1080 	.db #0x00
   00F0 00                 1081 	.db #0x00
   00F1 00                 1082 	.db #0x00
   00F2 01                 1083 	.db #0x01
   00F3 01                 1084 	.db #0x01
   00F4 02                 1085 	.db #0x02
   00F5 02                 1086 	.db #0x02
   00F6 03                 1087 	.db #0x03
   00F7 04                 1088 	.db #0x04
   00F8 05                 1089 	.db #0x05
   00F9 06                 1090 	.db #0x06
   00FA 07                 1091 	.db #0x07
   00FB 08                 1092 	.db #0x08
   00FC 09                 1093 	.db #0x09
   00FD 0A                 1094 	.db #0x0A
   00FE 0B                 1095 	.db #0x0B
   00FF 0C                 1096 	.db #0x0C
   0100 0E                 1097 	.db #0x0E
   0101 0F                 1098 	.db #0x0F
   0102 11                 1099 	.db #0x11
   0103 12                 1100 	.db #0x12
   0104 14                 1101 	.db #0x14
   0105 15                 1102 	.db #0x15
   0106 17                 1103 	.db #0x17
   0107 19                 1104 	.db #0x19
   0108 1B                 1105 	.db #0x1B
   0109 1D                 1106 	.db #0x1D
   010A 1F                 1107 	.db #0x1F
   010B 21                 1108 	.db #0x21
   010C 23                 1109 	.db #0x23
   010D 25                 1110 	.db #0x25
   010E 27                 1111 	.db #0x27
   010F 29                 1112 	.db #0x29
   0110 2B                 1113 	.db #0x2B
   0111 2E                 1114 	.db #0x2E
   0112 30                 1115 	.db #0x30
   0113 32                 1116 	.db #0x32
   0114 35                 1117 	.db #0x35
   0115 37                 1118 	.db #0x37
   0116 3A                 1119 	.db #0x3A
   0117 3C                 1120 	.db #0x3C
   0118 3F                 1121 	.db #0x3F
   0119 42                 1122 	.db #0x42
   011A 44                 1123 	.db #0x44
   011B 47                 1124 	.db #0x47
   011C 4A                 1125 	.db #0x4A
   011D 4C                 1126 	.db #0x4C
   011E 4F                 1127 	.db #0x4F
   011F 52                 1128 	.db #0x52
   0120 55                 1129 	.db #0x55
   0121 57                 1130 	.db #0x57
   0122 5A                 1131 	.db #0x5A
   0123 5D                 1132 	.db #0x5D
   0124 60                 1133 	.db #0x60
   0125 63                 1134 	.db #0x63
   0126 66                 1135 	.db #0x66
   0127 69                 1136 	.db #0x69
   0128 6C                 1137 	.db #0x6C
   0129 6F                 1138 	.db #0x6F
   012A 72                 1139 	.db #0x72
   012B 75                 1140 	.db #0x75
   012C                    1141 _tri_center:
   012C 08                 1142 	.db #0x08
   012D 0A                 1143 	.db #0x0A
   012E 12                 1144 	.db #0x12
   012F 10                 1145 	.db #0x10
   0130 00                 1146 	.db #0x00
   0131 02                 1147 	.db #0x02
   0132 08                 1148 	.db #0x08
   0133 0A                 1149 	.db #0x0A
   0134 0B                 1150 	.db #0x0B
   0135 09                 1151 	.db #0x09
   0136 03                 1152 	.db #0x03
   0137 01                 1153 	.db #0x01
   0138 11                 1154 	.db #0x11
   0139 13                 1155 	.db #0x13
   013A 0B                 1156 	.db #0x0B
   013B 09                 1157 	.db #0x09
   013C 0A                 1158 	.db #0x0A
   013D 12                 1159 	.db #0x12
   013E 10                 1160 	.db #0x10
   013F 00                 1161 	.db #0x00
   0140 02                 1162 	.db #0x02
   0141 08                 1163 	.db #0x08
   0142 0A                 1164 	.db #0x0A
   0143 12                 1165 	.db #0x12
   0144 13                 1166 	.db #0x13
   0145 0B                 1167 	.db #0x0B
   0146 09                 1168 	.db #0x09
   0147 03                 1169 	.db #0x03
   0148 01                 1170 	.db #0x01
   0149 11                 1171 	.db #0x11
   014A 13                 1172 	.db #0x13
   014B 0B                 1173 	.db #0x0B
   014C 12                 1174 	.db #0x12
   014D 10                 1175 	.db #0x10
   014E 00                 1176 	.db #0x00
   014F 02                 1177 	.db #0x02
   0150 08                 1178 	.db #0x08
   0151 0A                 1179 	.db #0x0A
   0152 12                 1180 	.db #0x12
   0153 10                 1181 	.db #0x10
   0154 11                 1182 	.db #0x11
   0155 13                 1183 	.db #0x13
   0156 0B                 1184 	.db #0x0B
   0157 09                 1185 	.db #0x09
   0158 03                 1186 	.db #0x03
   0159 01                 1187 	.db #0x01
   015A 11                 1188 	.db #0x11
   015B 13                 1189 	.db #0x13
   015C 10                 1190 	.db #0x10
   015D 00                 1191 	.db #0x00
   015E 02                 1192 	.db #0x02
   015F 08                 1193 	.db #0x08
   0160 0A                 1194 	.db #0x0A
   0161 12                 1195 	.db #0x12
   0162 10                 1196 	.db #0x10
   0163 00                 1197 	.db #0x00
   0164 01                 1198 	.db #0x01
   0165 11                 1199 	.db #0x11
   0166 13                 1200 	.db #0x13
   0167 0B                 1201 	.db #0x0B
   0168 09                 1202 	.db #0x09
   0169 03                 1203 	.db #0x03
   016A 01                 1204 	.db #0x01
   016B 11                 1205 	.db #0x11
   016C 00                 1206 	.db #0x00
   016D 02                 1207 	.db #0x02
   016E 08                 1208 	.db #0x08
   016F 0A                 1209 	.db #0x0A
   0170 12                 1210 	.db #0x12
   0171 10                 1211 	.db #0x10
   0172 00                 1212 	.db #0x00
   0173 02                 1213 	.db #0x02
   0174 03                 1214 	.db #0x03
   0175 01                 1215 	.db #0x01
   0176 11                 1216 	.db #0x11
   0177 13                 1217 	.db #0x13
   0178 0B                 1218 	.db #0x0B
   0179 09                 1219 	.db #0x09
   017A 03                 1220 	.db #0x03
   017B 01                 1221 	.db #0x01
   017C 02                 1222 	.db #0x02
   017D 08                 1223 	.db #0x08
   017E 0A                 1224 	.db #0x0A
   017F 12                 1225 	.db #0x12
   0180 10                 1226 	.db #0x10
   0181 00                 1227 	.db #0x00
   0182 02                 1228 	.db #0x02
   0183 08                 1229 	.db #0x08
   0184 09                 1230 	.db #0x09
   0185 03                 1231 	.db #0x03
   0186 01                 1232 	.db #0x01
   0187 11                 1233 	.db #0x11
   0188 13                 1234 	.db #0x13
   0189 0B                 1235 	.db #0x0B
   018A 09                 1236 	.db #0x09
   018B 03                 1237 	.db #0x03
   018C 01                 1238 	.db #0x01
   018D 0B                 1239 	.db #0x0B
   018E 09                 1240 	.db #0x09
   018F 11                 1241 	.db #0x11
   0190 13                 1242 	.db #0x13
   0191 03                 1243 	.db #0x03
   0192 01                 1244 	.db #0x01
   0193 0B                 1245 	.db #0x0B
   0194 0A                 1246 	.db #0x0A
   0195 00                 1247 	.db #0x00
   0196 02                 1248 	.db #0x02
   0197 12                 1249 	.db #0x12
   0198 10                 1250 	.db #0x10
   0199 08                 1251 	.db #0x08
   019A 0A                 1252 	.db #0x0A
   019B 00                 1253 	.db #0x00
   019C 03                 1254 	.db #0x03
   019D 01                 1255 	.db #0x01
   019E 0B                 1256 	.db #0x0B
   019F 09                 1257 	.db #0x09
   01A0 11                 1258 	.db #0x11
   01A1 13                 1259 	.db #0x13
   01A2 03                 1260 	.db #0x03
   01A3 01                 1261 	.db #0x01
   01A4 00                 1262 	.db #0x00
   01A5 02                 1263 	.db #0x02
   01A6 12                 1264 	.db #0x12
   01A7 10                 1265 	.db #0x10
   01A8 08                 1266 	.db #0x08
   01A9 0A                 1267 	.db #0x0A
   01AA 00                 1268 	.db #0x00
   01AB 02                 1269 	.db #0x02
   01AC 13                 1270 	.db #0x13
   01AD 03                 1271 	.db #0x03
   01AE 01                 1272 	.db #0x01
   01AF 0B                 1273 	.db #0x0B
   01B0 09                 1274 	.db #0x09
   01B1 11                 1275 	.db #0x11
   01B2 13                 1276 	.db #0x13
   01B3 03                 1277 	.db #0x03
   01B4 02                 1278 	.db #0x02
   01B5 12                 1279 	.db #0x12
   01B6 10                 1280 	.db #0x10
   01B7 08                 1281 	.db #0x08
   01B8 0A                 1282 	.db #0x0A
   01B9 00                 1283 	.db #0x00
   01BA 02                 1284 	.db #0x02
   01BB 12                 1285 	.db #0x12
   01BC 11                 1286 	.db #0x11
   01BD 13                 1287 	.db #0x13
   01BE 03                 1288 	.db #0x03
   01BF 01                 1289 	.db #0x01
   01C0 0B                 1290 	.db #0x0B
   01C1 09                 1291 	.db #0x09
   01C2 11                 1292 	.db #0x11
   01C3 13                 1293 	.db #0x13
   01C4 12                 1294 	.db #0x12
   01C5 10                 1295 	.db #0x10
   01C6 08                 1296 	.db #0x08
   01C7 0A                 1297 	.db #0x0A
   01C8 00                 1298 	.db #0x00
   01C9 02                 1299 	.db #0x02
   01CA 12                 1300 	.db #0x12
   01CB 10                 1301 	.db #0x10
   01CC 09                 1302 	.db #0x09
   01CD 11                 1303 	.db #0x11
   01CE 13                 1304 	.db #0x13
   01CF 03                 1305 	.db #0x03
   01D0 01                 1306 	.db #0x01
   01D1 0B                 1307 	.db #0x0B
   01D2 09                 1308 	.db #0x09
   01D3 11                 1309 	.db #0x11
   01D4 10                 1310 	.db #0x10
   01D5 08                 1311 	.db #0x08
   01D6 0A                 1312 	.db #0x0A
   01D7 00                 1313 	.db #0x00
   01D8 02                 1314 	.db #0x02
   01D9 12                 1315 	.db #0x12
   01DA 10                 1316 	.db #0x10
   01DB 08                 1317 	.db #0x08
   01DC 0B                 1318 	.db #0x0B
   01DD 09                 1319 	.db #0x09
   01DE 11                 1320 	.db #0x11
   01DF 13                 1321 	.db #0x13
   01E0 03                 1322 	.db #0x03
   01E1 01                 1323 	.db #0x01
   01E2 0B                 1324 	.db #0x0B
   01E3 09                 1325 	.db #0x09
   01E4 08                 1326 	.db #0x08
   01E5 0A                 1327 	.db #0x0A
   01E6 00                 1328 	.db #0x00
   01E7 02                 1329 	.db #0x02
   01E8 12                 1330 	.db #0x12
   01E9 10                 1331 	.db #0x10
   01EA 08                 1332 	.db #0x08
   01EB 0A                 1333 	.db #0x0A
   01EC                    1334 _tri_up:
   01EC 0A                 1335 	.db #0x0A
   01ED 12                 1336 	.db #0x12
   01EE 10                 1337 	.db #0x10
   01EF 00                 1338 	.db #0x00
   01F0 02                 1339 	.db #0x02
   01F1 08                 1340 	.db #0x08
   01F2 0A                 1341 	.db #0x0A
   01F3 12                 1342 	.db #0x12
   01F4 13                 1343 	.db #0x13
   01F5 0B                 1344 	.db #0x0B
   01F6 09                 1345 	.db #0x09
   01F7 03                 1346 	.db #0x03
   01F8 01                 1347 	.db #0x01
   01F9 11                 1348 	.db #0x11
   01FA 13                 1349 	.db #0x13
   01FB 0B                 1350 	.db #0x0B
   01FC 12                 1351 	.db #0x12
   01FD 10                 1352 	.db #0x10
   01FE 00                 1353 	.db #0x00
   01FF 02                 1354 	.db #0x02
   0200 08                 1355 	.db #0x08
   0201 0A                 1356 	.db #0x0A
   0202 12                 1357 	.db #0x12
   0203 10                 1358 	.db #0x10
   0204 11                 1359 	.db #0x11
   0205 13                 1360 	.db #0x13
   0206 0B                 1361 	.db #0x0B
   0207 09                 1362 	.db #0x09
   0208 03                 1363 	.db #0x03
   0209 01                 1364 	.db #0x01
   020A 11                 1365 	.db #0x11
   020B 13                 1366 	.db #0x13
   020C 10                 1367 	.db #0x10
   020D 00                 1368 	.db #0x00
   020E 02                 1369 	.db #0x02
   020F 08                 1370 	.db #0x08
   0210 0A                 1371 	.db #0x0A
   0211 12                 1372 	.db #0x12
   0212 10                 1373 	.db #0x10
   0213 00                 1374 	.db #0x00
   0214 01                 1375 	.db #0x01
   0215 11                 1376 	.db #0x11
   0216 13                 1377 	.db #0x13
   0217 0B                 1378 	.db #0x0B
   0218 09                 1379 	.db #0x09
   0219 03                 1380 	.db #0x03
   021A 01                 1381 	.db #0x01
   021B 11                 1382 	.db #0x11
   021C 00                 1383 	.db #0x00
   021D 02                 1384 	.db #0x02
   021E 08                 1385 	.db #0x08
   021F 0A                 1386 	.db #0x0A
   0220 12                 1387 	.db #0x12
   0221 10                 1388 	.db #0x10
   0222 00                 1389 	.db #0x00
   0223 02                 1390 	.db #0x02
   0224 03                 1391 	.db #0x03
   0225 01                 1392 	.db #0x01
   0226 11                 1393 	.db #0x11
   0227 13                 1394 	.db #0x13
   0228 0B                 1395 	.db #0x0B
   0229 09                 1396 	.db #0x09
   022A 03                 1397 	.db #0x03
   022B 01                 1398 	.db #0x01
   022C 02                 1399 	.db #0x02
   022D 08                 1400 	.db #0x08
   022E 0A                 1401 	.db #0x0A
   022F 12                 1402 	.db #0x12
   0230 10                 1403 	.db #0x10
   0231 00                 1404 	.db #0x00
   0232 02                 1405 	.db #0x02
   0233 08                 1406 	.db #0x08
   0234 09                 1407 	.db #0x09
   0235 03                 1408 	.db #0x03
   0236 01                 1409 	.db #0x01
   0237 11                 1410 	.db #0x11
   0238 13                 1411 	.db #0x13
   0239 0B                 1412 	.db #0x0B
   023A 09                 1413 	.db #0x09
   023B 03                 1414 	.db #0x03
   023C 08                 1415 	.db #0x08
   023D 0A                 1416 	.db #0x0A
   023E 12                 1417 	.db #0x12
   023F 10                 1418 	.db #0x10
   0240 00                 1419 	.db #0x00
   0241 02                 1420 	.db #0x02
   0242 08                 1421 	.db #0x08
   0243 0A                 1422 	.db #0x0A
   0244 0B                 1423 	.db #0x0B
   0245 09                 1424 	.db #0x09
   0246 03                 1425 	.db #0x03
   0247 01                 1426 	.db #0x01
   0248 11                 1427 	.db #0x11
   0249 13                 1428 	.db #0x13
   024A 0B                 1429 	.db #0x0B
   024B 09                 1430 	.db #0x09
   024C 0A                 1431 	.db #0x0A
   024D 12                 1432 	.db #0x12
   024E 10                 1433 	.db #0x10
   024F 00                 1434 	.db #0x00
   0250 02                 1435 	.db #0x02
   0251 08                 1436 	.db #0x08
   0252 0A                 1437 	.db #0x0A
   0253 12                 1438 	.db #0x12
   0254 13                 1439 	.db #0x13
   0255 0B                 1440 	.db #0x0B
   0256 09                 1441 	.db #0x09
   0257 03                 1442 	.db #0x03
   0258 01                 1443 	.db #0x01
   0259 11                 1444 	.db #0x11
   025A 13                 1445 	.db #0x13
   025B 0B                 1446 	.db #0x0B
   025C 12                 1447 	.db #0x12
   025D 10                 1448 	.db #0x10
   025E 00                 1449 	.db #0x00
   025F 02                 1450 	.db #0x02
   0260 08                 1451 	.db #0x08
   0261 0A                 1452 	.db #0x0A
   0262 12                 1453 	.db #0x12
   0263 10                 1454 	.db #0x10
   0264 11                 1455 	.db #0x11
   0265 13                 1456 	.db #0x13
   0266 0B                 1457 	.db #0x0B
   0267 09                 1458 	.db #0x09
   0268 03                 1459 	.db #0x03
   0269 01                 1460 	.db #0x01
   026A 11                 1461 	.db #0x11
   026B 13                 1462 	.db #0x13
   026C 10                 1463 	.db #0x10
   026D 00                 1464 	.db #0x00
   026E 02                 1465 	.db #0x02
   026F 08                 1466 	.db #0x08
   0270 0A                 1467 	.db #0x0A
   0271 12                 1468 	.db #0x12
   0272 10                 1469 	.db #0x10
   0273 00                 1470 	.db #0x00
   0274 01                 1471 	.db #0x01
   0275 11                 1472 	.db #0x11
   0276 13                 1473 	.db #0x13
   0277 0B                 1474 	.db #0x0B
   0278 09                 1475 	.db #0x09
   0279 03                 1476 	.db #0x03
   027A 01                 1477 	.db #0x01
   027B 11                 1478 	.db #0x11
   027C 00                 1479 	.db #0x00
   027D 02                 1480 	.db #0x02
   027E 08                 1481 	.db #0x08
   027F 0A                 1482 	.db #0x0A
   0280 12                 1483 	.db #0x12
   0281 10                 1484 	.db #0x10
   0282 00                 1485 	.db #0x00
   0283 02                 1486 	.db #0x02
   0284 03                 1487 	.db #0x03
   0285 01                 1488 	.db #0x01
   0286 11                 1489 	.db #0x11
   0287 13                 1490 	.db #0x13
   0288 0B                 1491 	.db #0x0B
   0289 09                 1492 	.db #0x09
   028A 03                 1493 	.db #0x03
   028B 01                 1494 	.db #0x01
   028C 02                 1495 	.db #0x02
   028D 08                 1496 	.db #0x08
   028E 0A                 1497 	.db #0x0A
   028F 12                 1498 	.db #0x12
   0290 10                 1499 	.db #0x10
   0291 00                 1500 	.db #0x00
   0292 02                 1501 	.db #0x02
   0293 08                 1502 	.db #0x08
   0294 09                 1503 	.db #0x09
   0295 03                 1504 	.db #0x03
   0296 01                 1505 	.db #0x01
   0297 11                 1506 	.db #0x11
   0298 13                 1507 	.db #0x13
   0299 0B                 1508 	.db #0x0B
   029A 09                 1509 	.db #0x09
   029B 03                 1510 	.db #0x03
   029C 08                 1511 	.db #0x08
   029D 0A                 1512 	.db #0x0A
   029E 12                 1513 	.db #0x12
   029F 10                 1514 	.db #0x10
   02A0 00                 1515 	.db #0x00
   02A1 02                 1516 	.db #0x02
   02A2 08                 1517 	.db #0x08
   02A3 0A                 1518 	.db #0x0A
   02A4 0B                 1519 	.db #0x0B
   02A5 09                 1520 	.db #0x09
   02A6 03                 1521 	.db #0x03
   02A7 01                 1522 	.db #0x01
   02A8 11                 1523 	.db #0x11
   02A9 13                 1524 	.db #0x13
   02AA 0B                 1525 	.db #0x0B
   02AB 09                 1526 	.db #0x09
   02AC                    1527 _tri_dia:
   02AC 05                 1528 	.db #0x05
   02AD 1B                 1529 	.db #0x1B
   02AE 0F                 1530 	.db #0x0F
   02AF 1D                 1531 	.db #0x1D
   02B0 15                 1532 	.db #0x15
   02B1 19                 1533 	.db #0x19
   02B2 05                 1534 	.db #0x05
   02B3 1B                 1535 	.db #0x1B
   02B4 0F                 1536 	.db #0x0F
   02B5 1D                 1537 	.db #0x1D
   02B6 15                 1538 	.db #0x15
   02B7 19                 1539 	.db #0x19
   02B8 05                 1540 	.db #0x05
   02B9 1B                 1541 	.db #0x1B
   02BA 0F                 1542 	.db #0x0F
   02BB 1D                 1543 	.db #0x1D
   02BC 1D                 1544 	.db #0x1D
   02BD 05                 1545 	.db #0x05
   02BE 19                 1546 	.db #0x19
   02BF 0F                 1547 	.db #0x0F
   02C0 1B                 1548 	.db #0x1B
   02C1 15                 1549 	.db #0x15
   02C2 1D                 1550 	.db #0x1D
   02C3 05                 1551 	.db #0x05
   02C4 19                 1552 	.db #0x19
   02C5 0F                 1553 	.db #0x0F
   02C6 1B                 1554 	.db #0x1B
   02C7 15                 1555 	.db #0x15
   02C8 1D                 1556 	.db #0x1D
   02C9 05                 1557 	.db #0x05
   02CA 19                 1558 	.db #0x19
   02CB 0F                 1559 	.db #0x0F
   02CC 0F                 1560 	.db #0x0F
   02CD 1D                 1561 	.db #0x1D
   02CE 15                 1562 	.db #0x15
   02CF 19                 1563 	.db #0x19
   02D0 05                 1564 	.db #0x05
   02D1 1B                 1565 	.db #0x1B
   02D2 0F                 1566 	.db #0x0F
   02D3 1D                 1567 	.db #0x1D
   02D4 15                 1568 	.db #0x15
   02D5 19                 1569 	.db #0x19
   02D6 05                 1570 	.db #0x05
   02D7 1B                 1571 	.db #0x1B
   02D8 0F                 1572 	.db #0x0F
   02D9 1D                 1573 	.db #0x1D
   02DA 15                 1574 	.db #0x15
   02DB 19                 1575 	.db #0x19
   02DC 19                 1576 	.db #0x19
   02DD 0F                 1577 	.db #0x0F
   02DE 1B                 1578 	.db #0x1B
   02DF 15                 1579 	.db #0x15
   02E0 1D                 1580 	.db #0x1D
   02E1 05                 1581 	.db #0x05
   02E2 19                 1582 	.db #0x19
   02E3 0F                 1583 	.db #0x0F
   02E4 1B                 1584 	.db #0x1B
   02E5 15                 1585 	.db #0x15
   02E6 1D                 1586 	.db #0x1D
   02E7 05                 1587 	.db #0x05
   02E8 19                 1588 	.db #0x19
   02E9 0F                 1589 	.db #0x0F
   02EA 1B                 1590 	.db #0x1B
   02EB 15                 1591 	.db #0x15
   02EC 15                 1592 	.db #0x15
   02ED 19                 1593 	.db #0x19
   02EE 05                 1594 	.db #0x05
   02EF 1B                 1595 	.db #0x1B
   02F0 0F                 1596 	.db #0x0F
   02F1 1D                 1597 	.db #0x1D
   02F2 15                 1598 	.db #0x15
   02F3 19                 1599 	.db #0x19
   02F4 05                 1600 	.db #0x05
   02F5 1B                 1601 	.db #0x1B
   02F6 0F                 1602 	.db #0x0F
   02F7 1D                 1603 	.db #0x1D
   02F8 15                 1604 	.db #0x15
   02F9 19                 1605 	.db #0x19
   02FA 05                 1606 	.db #0x05
   02FB 1B                 1607 	.db #0x1B
   02FC 1B                 1608 	.db #0x1B
   02FD 15                 1609 	.db #0x15
   02FE 1D                 1610 	.db #0x1D
   02FF 05                 1611 	.db #0x05
   0300 19                 1612 	.db #0x19
   0301 0F                 1613 	.db #0x0F
   0302 1B                 1614 	.db #0x1B
   0303 15                 1615 	.db #0x15
   0304 1D                 1616 	.db #0x1D
   0305 05                 1617 	.db #0x05
   0306 19                 1618 	.db #0x19
   0307 0F                 1619 	.db #0x0F
   0308 1B                 1620 	.db #0x1B
   0309 15                 1621 	.db #0x15
   030A 1D                 1622 	.db #0x1D
   030B 05                 1623 	.db #0x05
   030C 05                 1624 	.db #0x05
   030D 1B                 1625 	.db #0x1B
   030E 0F                 1626 	.db #0x0F
   030F 1D                 1627 	.db #0x1D
   0310 15                 1628 	.db #0x15
   0311 19                 1629 	.db #0x19
   0312 05                 1630 	.db #0x05
   0313 1B                 1631 	.db #0x1B
   0314 0F                 1632 	.db #0x0F
   0315 1D                 1633 	.db #0x1D
   0316 15                 1634 	.db #0x15
   0317 19                 1635 	.db #0x19
   0318 05                 1636 	.db #0x05
   0319 1B                 1637 	.db #0x1B
   031A 0F                 1638 	.db #0x0F
   031B 1D                 1639 	.db #0x1D
   031C 1D                 1640 	.db #0x1D
   031D 05                 1641 	.db #0x05
   031E 19                 1642 	.db #0x19
   031F 0F                 1643 	.db #0x0F
   0320 1B                 1644 	.db #0x1B
   0321 15                 1645 	.db #0x15
   0322 1D                 1646 	.db #0x1D
   0323 05                 1647 	.db #0x05
   0324 19                 1648 	.db #0x19
   0325 0F                 1649 	.db #0x0F
   0326 1B                 1650 	.db #0x1B
   0327 15                 1651 	.db #0x15
   0328 1D                 1652 	.db #0x1D
   0329 05                 1653 	.db #0x05
   032A 19                 1654 	.db #0x19
   032B 0F                 1655 	.db #0x0F
   032C 0F                 1656 	.db #0x0F
   032D 1D                 1657 	.db #0x1D
   032E 15                 1658 	.db #0x15
   032F 19                 1659 	.db #0x19
   0330 05                 1660 	.db #0x05
   0331 1B                 1661 	.db #0x1B
   0332 0F                 1662 	.db #0x0F
   0333 1D                 1663 	.db #0x1D
   0334 15                 1664 	.db #0x15
   0335 19                 1665 	.db #0x19
   0336 05                 1666 	.db #0x05
   0337 1B                 1667 	.db #0x1B
   0338 0F                 1668 	.db #0x0F
   0339 1D                 1669 	.db #0x1D
   033A 15                 1670 	.db #0x15
   033B 19                 1671 	.db #0x19
   033C 19                 1672 	.db #0x19
   033D 0F                 1673 	.db #0x0F
   033E 1B                 1674 	.db #0x1B
   033F 15                 1675 	.db #0x15
   0340 1D                 1676 	.db #0x1D
   0341 05                 1677 	.db #0x05
   0342 19                 1678 	.db #0x19
   0343 0F                 1679 	.db #0x0F
   0344 1B                 1680 	.db #0x1B
   0345 15                 1681 	.db #0x15
   0346 1D                 1682 	.db #0x1D
   0347 05                 1683 	.db #0x05
   0348 19                 1684 	.db #0x19
   0349 0F                 1685 	.db #0x0F
   034A 1B                 1686 	.db #0x1B
   034B 15                 1687 	.db #0x15
   034C 15                 1688 	.db #0x15
   034D 19                 1689 	.db #0x19
   034E 05                 1690 	.db #0x05
   034F 1B                 1691 	.db #0x1B
   0350 0F                 1692 	.db #0x0F
   0351 1D                 1693 	.db #0x1D
   0352 15                 1694 	.db #0x15
   0353 19                 1695 	.db #0x19
   0354 05                 1696 	.db #0x05
   0355 1B                 1697 	.db #0x1B
   0356 0F                 1698 	.db #0x0F
   0357 1D                 1699 	.db #0x1D
   0358 15                 1700 	.db #0x15
   0359 19                 1701 	.db #0x19
   035A 05                 1702 	.db #0x05
   035B 1B                 1703 	.db #0x1B
   035C 1B                 1704 	.db #0x1B
   035D 15                 1705 	.db #0x15
   035E 1D                 1706 	.db #0x1D
   035F 05                 1707 	.db #0x05
   0360 19                 1708 	.db #0x19
   0361 0F                 1709 	.db #0x0F
   0362 1B                 1710 	.db #0x1B
   0363 15                 1711 	.db #0x15
   0364 1D                 1712 	.db #0x1D
   0365 05                 1713 	.db #0x05
   0366 19                 1714 	.db #0x19
   0367 0F                 1715 	.db #0x0F
   0368 1B                 1716 	.db #0x1B
   0369 15                 1717 	.db #0x15
   036A 1D                 1718 	.db #0x1D
   036B 05                 1719 	.db #0x05
   036C                    1720 _tri_side1:
   036C 0A                 1721 	.db #0x0A
   036D 12                 1722 	.db #0x12
   036E 10                 1723 	.db #0x10
   036F 00                 1724 	.db #0x00
   0370 02                 1725 	.db #0x02
   0371 08                 1726 	.db #0x08
   0372 0A                 1727 	.db #0x0A
   0373 12                 1728 	.db #0x12
   0374 10                 1729 	.db #0x10
   0375 00                 1730 	.db #0x00
   0376 02                 1731 	.db #0x02
   0377 08                 1732 	.db #0x08
   0378 0A                 1733 	.db #0x0A
   0379 12                 1734 	.db #0x12
   037A 10                 1735 	.db #0x10
   037B 00                 1736 	.db #0x00
   037C 12                 1737 	.db #0x12
   037D 10                 1738 	.db #0x10
   037E 00                 1739 	.db #0x00
   037F 02                 1740 	.db #0x02
   0380 08                 1741 	.db #0x08
   0381 0A                 1742 	.db #0x0A
   0382 12                 1743 	.db #0x12
   0383 10                 1744 	.db #0x10
   0384 00                 1745 	.db #0x00
   0385 02                 1746 	.db #0x02
   0386 08                 1747 	.db #0x08
   0387 0A                 1748 	.db #0x0A
   0388 12                 1749 	.db #0x12
   0389 10                 1750 	.db #0x10
   038A 00                 1751 	.db #0x00
   038B 02                 1752 	.db #0x02
   038C 10                 1753 	.db #0x10
   038D 00                 1754 	.db #0x00
   038E 02                 1755 	.db #0x02
   038F 08                 1756 	.db #0x08
   0390 0A                 1757 	.db #0x0A
   0391 12                 1758 	.db #0x12
   0392 10                 1759 	.db #0x10
   0393 00                 1760 	.db #0x00
   0394 02                 1761 	.db #0x02
   0395 08                 1762 	.db #0x08
   0396 0A                 1763 	.db #0x0A
   0397 12                 1764 	.db #0x12
   0398 10                 1765 	.db #0x10
   0399 00                 1766 	.db #0x00
   039A 02                 1767 	.db #0x02
   039B 08                 1768 	.db #0x08
   039C 00                 1769 	.db #0x00
   039D 02                 1770 	.db #0x02
   039E 08                 1771 	.db #0x08
   039F 0A                 1772 	.db #0x0A
   03A0 12                 1773 	.db #0x12
   03A1 10                 1774 	.db #0x10
   03A2 00                 1775 	.db #0x00
   03A3 02                 1776 	.db #0x02
   03A4 08                 1777 	.db #0x08
   03A5 0A                 1778 	.db #0x0A
   03A6 12                 1779 	.db #0x12
   03A7 10                 1780 	.db #0x10
   03A8 00                 1781 	.db #0x00
   03A9 02                 1782 	.db #0x02
   03AA 08                 1783 	.db #0x08
   03AB 0A                 1784 	.db #0x0A
   03AC 02                 1785 	.db #0x02
   03AD 08                 1786 	.db #0x08
   03AE 0A                 1787 	.db #0x0A
   03AF 12                 1788 	.db #0x12
   03B0 10                 1789 	.db #0x10
   03B1 00                 1790 	.db #0x00
   03B2 02                 1791 	.db #0x02
   03B3 08                 1792 	.db #0x08
   03B4 0A                 1793 	.db #0x0A
   03B5 12                 1794 	.db #0x12
   03B6 10                 1795 	.db #0x10
   03B7 00                 1796 	.db #0x00
   03B8 02                 1797 	.db #0x02
   03B9 08                 1798 	.db #0x08
   03BA 0A                 1799 	.db #0x0A
   03BB 12                 1800 	.db #0x12
   03BC 08                 1801 	.db #0x08
   03BD 0A                 1802 	.db #0x0A
   03BE 12                 1803 	.db #0x12
   03BF 10                 1804 	.db #0x10
   03C0 00                 1805 	.db #0x00
   03C1 02                 1806 	.db #0x02
   03C2 08                 1807 	.db #0x08
   03C3 0A                 1808 	.db #0x0A
   03C4 12                 1809 	.db #0x12
   03C5 10                 1810 	.db #0x10
   03C6 00                 1811 	.db #0x00
   03C7 02                 1812 	.db #0x02
   03C8 08                 1813 	.db #0x08
   03C9 0A                 1814 	.db #0x0A
   03CA 12                 1815 	.db #0x12
   03CB 10                 1816 	.db #0x10
   03CC 0A                 1817 	.db #0x0A
   03CD 12                 1818 	.db #0x12
   03CE 10                 1819 	.db #0x10
   03CF 00                 1820 	.db #0x00
   03D0 02                 1821 	.db #0x02
   03D1 08                 1822 	.db #0x08
   03D2 0A                 1823 	.db #0x0A
   03D3 12                 1824 	.db #0x12
   03D4 10                 1825 	.db #0x10
   03D5 00                 1826 	.db #0x00
   03D6 02                 1827 	.db #0x02
   03D7 08                 1828 	.db #0x08
   03D8 0A                 1829 	.db #0x0A
   03D9 12                 1830 	.db #0x12
   03DA 10                 1831 	.db #0x10
   03DB 00                 1832 	.db #0x00
   03DC 12                 1833 	.db #0x12
   03DD 10                 1834 	.db #0x10
   03DE 00                 1835 	.db #0x00
   03DF 02                 1836 	.db #0x02
   03E0 08                 1837 	.db #0x08
   03E1 0A                 1838 	.db #0x0A
   03E2 12                 1839 	.db #0x12
   03E3 10                 1840 	.db #0x10
   03E4 00                 1841 	.db #0x00
   03E5 02                 1842 	.db #0x02
   03E6 08                 1843 	.db #0x08
   03E7 0A                 1844 	.db #0x0A
   03E8 12                 1845 	.db #0x12
   03E9 10                 1846 	.db #0x10
   03EA 00                 1847 	.db #0x00
   03EB 02                 1848 	.db #0x02
   03EC 10                 1849 	.db #0x10
   03ED 00                 1850 	.db #0x00
   03EE 02                 1851 	.db #0x02
   03EF 08                 1852 	.db #0x08
   03F0 0A                 1853 	.db #0x0A
   03F1 12                 1854 	.db #0x12
   03F2 10                 1855 	.db #0x10
   03F3 00                 1856 	.db #0x00
   03F4 02                 1857 	.db #0x02
   03F5 08                 1858 	.db #0x08
   03F6 0A                 1859 	.db #0x0A
   03F7 12                 1860 	.db #0x12
   03F8 10                 1861 	.db #0x10
   03F9 00                 1862 	.db #0x00
   03FA 02                 1863 	.db #0x02
   03FB 08                 1864 	.db #0x08
   03FC 00                 1865 	.db #0x00
   03FD 02                 1866 	.db #0x02
   03FE 08                 1867 	.db #0x08
   03FF 0A                 1868 	.db #0x0A
   0400 12                 1869 	.db #0x12
   0401 10                 1870 	.db #0x10
   0402 00                 1871 	.db #0x00
   0403 02                 1872 	.db #0x02
   0404 08                 1873 	.db #0x08
   0405 0A                 1874 	.db #0x0A
   0406 12                 1875 	.db #0x12
   0407 10                 1876 	.db #0x10
   0408 00                 1877 	.db #0x00
   0409 02                 1878 	.db #0x02
   040A 08                 1879 	.db #0x08
   040B 0A                 1880 	.db #0x0A
   040C 02                 1881 	.db #0x02
   040D 08                 1882 	.db #0x08
   040E 0A                 1883 	.db #0x0A
   040F 12                 1884 	.db #0x12
   0410 10                 1885 	.db #0x10
   0411 00                 1886 	.db #0x00
   0412 02                 1887 	.db #0x02
   0413 08                 1888 	.db #0x08
   0414 0A                 1889 	.db #0x0A
   0415 12                 1890 	.db #0x12
   0416 10                 1891 	.db #0x10
   0417 00                 1892 	.db #0x00
   0418 02                 1893 	.db #0x02
   0419 08                 1894 	.db #0x08
   041A 0A                 1895 	.db #0x0A
   041B 12                 1896 	.db #0x12
   041C 08                 1897 	.db #0x08
   041D 0A                 1898 	.db #0x0A
   041E 12                 1899 	.db #0x12
   041F 10                 1900 	.db #0x10
   0420 00                 1901 	.db #0x00
   0421 02                 1902 	.db #0x02
   0422 08                 1903 	.db #0x08
   0423 0A                 1904 	.db #0x0A
   0424 12                 1905 	.db #0x12
   0425 10                 1906 	.db #0x10
   0426 00                 1907 	.db #0x00
   0427 02                 1908 	.db #0x02
   0428 08                 1909 	.db #0x08
   0429 0A                 1910 	.db #0x0A
   042A 12                 1911 	.db #0x12
   042B 10                 1912 	.db #0x10
   042C                    1913 _tri_side2:
   042C 00                 1914 	.db #0x00
   042D 10                 1915 	.db #0x10
   042E 12                 1916 	.db #0x12
   042F 0A                 1917 	.db #0x0A
   0430 08                 1918 	.db #0x08
   0431 02                 1919 	.db #0x02
   0432 00                 1920 	.db #0x00
   0433 10                 1921 	.db #0x10
   0434 12                 1922 	.db #0x12
   0435 0A                 1923 	.db #0x0A
   0436 08                 1924 	.db #0x08
   0437 02                 1925 	.db #0x02
   0438 00                 1926 	.db #0x00
   0439 10                 1927 	.db #0x10
   043A 12                 1928 	.db #0x12
   043B 0A                 1929 	.db #0x0A
   043C 02                 1930 	.db #0x02
   043D 00                 1931 	.db #0x00
   043E 10                 1932 	.db #0x10
   043F 12                 1933 	.db #0x12
   0440 0A                 1934 	.db #0x0A
   0441 08                 1935 	.db #0x08
   0442 02                 1936 	.db #0x02
   0443 00                 1937 	.db #0x00
   0444 10                 1938 	.db #0x10
   0445 12                 1939 	.db #0x12
   0446 0A                 1940 	.db #0x0A
   0447 08                 1941 	.db #0x08
   0448 02                 1942 	.db #0x02
   0449 00                 1943 	.db #0x00
   044A 10                 1944 	.db #0x10
   044B 12                 1945 	.db #0x12
   044C 08                 1946 	.db #0x08
   044D 02                 1947 	.db #0x02
   044E 00                 1948 	.db #0x00
   044F 10                 1949 	.db #0x10
   0450 12                 1950 	.db #0x12
   0451 0A                 1951 	.db #0x0A
   0452 08                 1952 	.db #0x08
   0453 02                 1953 	.db #0x02
   0454 00                 1954 	.db #0x00
   0455 10                 1955 	.db #0x10
   0456 12                 1956 	.db #0x12
   0457 0A                 1957 	.db #0x0A
   0458 08                 1958 	.db #0x08
   0459 02                 1959 	.db #0x02
   045A 00                 1960 	.db #0x00
   045B 10                 1961 	.db #0x10
   045C 0A                 1962 	.db #0x0A
   045D 08                 1963 	.db #0x08
   045E 02                 1964 	.db #0x02
   045F 00                 1965 	.db #0x00
   0460 10                 1966 	.db #0x10
   0461 12                 1967 	.db #0x12
   0462 0A                 1968 	.db #0x0A
   0463 08                 1969 	.db #0x08
   0464 02                 1970 	.db #0x02
   0465 00                 1971 	.db #0x00
   0466 10                 1972 	.db #0x10
   0467 12                 1973 	.db #0x12
   0468 0A                 1974 	.db #0x0A
   0469 08                 1975 	.db #0x08
   046A 02                 1976 	.db #0x02
   046B 00                 1977 	.db #0x00
   046C 12                 1978 	.db #0x12
   046D 0A                 1979 	.db #0x0A
   046E 08                 1980 	.db #0x08
   046F 02                 1981 	.db #0x02
   0470 00                 1982 	.db #0x00
   0471 10                 1983 	.db #0x10
   0472 12                 1984 	.db #0x12
   0473 0A                 1985 	.db #0x0A
   0474 08                 1986 	.db #0x08
   0475 02                 1987 	.db #0x02
   0476 00                 1988 	.db #0x00
   0477 10                 1989 	.db #0x10
   0478 12                 1990 	.db #0x12
   0479 0A                 1991 	.db #0x0A
   047A 08                 1992 	.db #0x08
   047B 02                 1993 	.db #0x02
   047C 10                 1994 	.db #0x10
   047D 12                 1995 	.db #0x12
   047E 0A                 1996 	.db #0x0A
   047F 08                 1997 	.db #0x08
   0480 02                 1998 	.db #0x02
   0481 00                 1999 	.db #0x00
   0482 10                 2000 	.db #0x10
   0483 12                 2001 	.db #0x12
   0484 0A                 2002 	.db #0x0A
   0485 08                 2003 	.db #0x08
   0486 02                 2004 	.db #0x02
   0487 00                 2005 	.db #0x00
   0488 10                 2006 	.db #0x10
   0489 12                 2007 	.db #0x12
   048A 0A                 2008 	.db #0x0A
   048B 08                 2009 	.db #0x08
   048C 00                 2010 	.db #0x00
   048D 10                 2011 	.db #0x10
   048E 12                 2012 	.db #0x12
   048F 0A                 2013 	.db #0x0A
   0490 08                 2014 	.db #0x08
   0491 02                 2015 	.db #0x02
   0492 00                 2016 	.db #0x00
   0493 10                 2017 	.db #0x10
   0494 12                 2018 	.db #0x12
   0495 0A                 2019 	.db #0x0A
   0496 08                 2020 	.db #0x08
   0497 02                 2021 	.db #0x02
   0498 00                 2022 	.db #0x00
   0499 10                 2023 	.db #0x10
   049A 12                 2024 	.db #0x12
   049B 0A                 2025 	.db #0x0A
   049C 02                 2026 	.db #0x02
   049D 00                 2027 	.db #0x00
   049E 10                 2028 	.db #0x10
   049F 12                 2029 	.db #0x12
   04A0 0A                 2030 	.db #0x0A
   04A1 08                 2031 	.db #0x08
   04A2 02                 2032 	.db #0x02
   04A3 00                 2033 	.db #0x00
   04A4 10                 2034 	.db #0x10
   04A5 12                 2035 	.db #0x12
   04A6 0A                 2036 	.db #0x0A
   04A7 08                 2037 	.db #0x08
   04A8 02                 2038 	.db #0x02
   04A9 00                 2039 	.db #0x00
   04AA 10                 2040 	.db #0x10
   04AB 12                 2041 	.db #0x12
   04AC 08                 2042 	.db #0x08
   04AD 02                 2043 	.db #0x02
   04AE 00                 2044 	.db #0x00
   04AF 10                 2045 	.db #0x10
   04B0 12                 2046 	.db #0x12
   04B1 0A                 2047 	.db #0x0A
   04B2 08                 2048 	.db #0x08
   04B3 02                 2049 	.db #0x02
   04B4 00                 2050 	.db #0x00
   04B5 10                 2051 	.db #0x10
   04B6 12                 2052 	.db #0x12
   04B7 0A                 2053 	.db #0x0A
   04B8 08                 2054 	.db #0x08
   04B9 02                 2055 	.db #0x02
   04BA 00                 2056 	.db #0x00
   04BB 10                 2057 	.db #0x10
   04BC 0A                 2058 	.db #0x0A
   04BD 08                 2059 	.db #0x08
   04BE 02                 2060 	.db #0x02
   04BF 00                 2061 	.db #0x00
   04C0 10                 2062 	.db #0x10
   04C1 12                 2063 	.db #0x12
   04C2 0A                 2064 	.db #0x0A
   04C3 08                 2065 	.db #0x08
   04C4 02                 2066 	.db #0x02
   04C5 00                 2067 	.db #0x00
   04C6 10                 2068 	.db #0x10
   04C7 12                 2069 	.db #0x12
   04C8 0A                 2070 	.db #0x0A
   04C9 08                 2071 	.db #0x08
   04CA 02                 2072 	.db #0x02
   04CB 00                 2073 	.db #0x00
   04CC 12                 2074 	.db #0x12
   04CD 0A                 2075 	.db #0x0A
   04CE 08                 2076 	.db #0x08
   04CF 02                 2077 	.db #0x02
   04D0 00                 2078 	.db #0x00
   04D1 10                 2079 	.db #0x10
   04D2 12                 2080 	.db #0x12
   04D3 0A                 2081 	.db #0x0A
   04D4 08                 2082 	.db #0x08
   04D5 02                 2083 	.db #0x02
   04D6 00                 2084 	.db #0x00
   04D7 10                 2085 	.db #0x10
   04D8 12                 2086 	.db #0x12
   04D9 0A                 2087 	.db #0x0A
   04DA 08                 2088 	.db #0x08
   04DB 02                 2089 	.db #0x02
   04DC 10                 2090 	.db #0x10
   04DD 12                 2091 	.db #0x12
   04DE 0A                 2092 	.db #0x0A
   04DF 08                 2093 	.db #0x08
   04E0 02                 2094 	.db #0x02
   04E1 00                 2095 	.db #0x00
   04E2 10                 2096 	.db #0x10
   04E3 12                 2097 	.db #0x12
   04E4 0A                 2098 	.db #0x0A
   04E5 08                 2099 	.db #0x08
   04E6 02                 2100 	.db #0x02
   04E7 00                 2101 	.db #0x00
   04E8 10                 2102 	.db #0x10
   04E9 12                 2103 	.db #0x12
   04EA 0A                 2104 	.db #0x0A
   04EB 08                 2105 	.db #0x08
   04EC                    2106 _tri_inva1:
   04EC 1E                 2107 	.db #0x1E
   04ED 1F                 2108 	.db #0x1F
   04EE 1E                 2109 	.db #0x1E
   04EF 11                 2110 	.db #0x11
   04F0 13                 2111 	.db #0x13
   04F1 1E                 2112 	.db #0x1E
   04F2 08                 2113 	.db #0x08
   04F3 0A                 2114 	.db #0x0A
   04F4 00                 2115 	.db #0x00
   04F5 0E                 2116 	.db #0x0E
   04F6 10                 2117 	.db #0x10
   04F7 1E                 2118 	.db #0x1E
   04F8 1C                 2119 	.db #0x1C
   04F9 1E                 2120 	.db #0x1E
   04FA 08                 2121 	.db #0x08
   04FB 0A                 2122 	.db #0x0A
   04FC 1F                 2123 	.db #0x1F
   04FD 1F                 2124 	.db #0x1F
   04FE 1E                 2125 	.db #0x1E
   04FF 1E                 2126 	.db #0x1E
   0500 15                 2127 	.db #0x15
   0501 17                 2128 	.db #0x17
   0502 0A                 2129 	.db #0x0A
   0503 00                 2130 	.db #0x00
   0504 02                 2131 	.db #0x02
   0505 11                 2132 	.db #0x11
   0506 13                 2133 	.db #0x13
   0507 1F                 2134 	.db #0x1F
   0508 1C                 2135 	.db #0x1C
   0509 08                 2136 	.db #0x08
   050A 0A                 2137 	.db #0x0A
   050B 1F                 2138 	.db #0x1F
   050C 1E                 2139 	.db #0x1E
   050D 1F                 2140 	.db #0x1F
   050E 08                 2141 	.db #0x08
   050F 1B                 2142 	.db #0x1B
   0510 1A                 2143 	.db #0x1A
   0511 11                 2144 	.db #0x11
   0512 13                 2145 	.db #0x13
   0513 1C                 2146 	.db #0x1C
   0514 1E                 2147 	.db #0x1E
   0515 1F                 2148 	.db #0x1F
   0516 19                 2149 	.db #0x19
   0517 1E                 2150 	.db #0x1E
   0518 06                 2151 	.db #0x06
   0519 04                 2152 	.db #0x04
   051A 1C                 2153 	.db #0x1C
   051B 1C                 2154 	.db #0x1C
   051C 1E                 2155 	.db #0x1E
   051D 08                 2156 	.db #0x08
   051E 16                 2157 	.db #0x16
   051F 18                 2158 	.db #0x18
   0520 1B                 2159 	.db #0x1B
   0521 1E                 2160 	.db #0x1E
   0522 19                 2161 	.db #0x19
   0523 1D                 2162 	.db #0x1D
   0524 1F                 2163 	.db #0x1F
   0525 1E                 2164 	.db #0x1E
   0526 19                 2165 	.db #0x19
   0527 08                 2166 	.db #0x08
   0528 1B                 2167 	.db #0x1B
   0529 1E                 2168 	.db #0x1E
   052A 12                 2169 	.db #0x12
   052B 10                 2170 	.db #0x10
   052C 08                 2171 	.db #0x08
   052D 16                 2172 	.db #0x16
   052E 10                 2173 	.db #0x10
   052F 11                 2174 	.db #0x11
   0530 17                 2175 	.db #0x17
   0531 09                 2176 	.db #0x09
   0532 11                 2177 	.db #0x11
   0533 0F                 2178 	.db #0x0F
   0534 01                 2179 	.db #0x01
   0535 1E                 2180 	.db #0x1E
   0536 14                 2181 	.db #0x14
   0537 16                 2182 	.db #0x16
   0538 17                 2183 	.db #0x17
   0539 15                 2184 	.db #0x15
   053A 10                 2185 	.db #0x10
   053B 1E                 2186 	.db #0x1E
   053C 0A                 2187 	.db #0x0A
   053D 18                 2188 	.db #0x18
   053E 1F                 2189 	.db #0x1F
   053F 1E                 2190 	.db #0x1E
   0540 19                 2191 	.db #0x19
   0541 0B                 2192 	.db #0x0B
   0542 09                 2193 	.db #0x09
   0543 11                 2194 	.db #0x11
   0544 0F                 2195 	.db #0x0F
   0545 1C                 2196 	.db #0x1C
   0546 05                 2197 	.db #0x05
   0547 09                 2198 	.db #0x09
   0548 1E                 2199 	.db #0x1E
   0549 0B                 2200 	.db #0x0B
   054A 09                 2201 	.db #0x09
   054B 1F                 2202 	.db #0x1F
   054C 1E                 2203 	.db #0x1E
   054D 19                 2204 	.db #0x19
   054E 1E                 2205 	.db #0x1E
   054F 1F                 2206 	.db #0x1F
   0550 19                 2207 	.db #0x19
   0551 1E                 2208 	.db #0x1E
   0552 0B                 2209 	.db #0x0B
   0553 1B                 2210 	.db #0x1B
   0554 15                 2211 	.db #0x15
   0555 19                 2212 	.db #0x19
   0556 1D                 2213 	.db #0x1D
   0557 19                 2214 	.db #0x19
   0558 19                 2215 	.db #0x19
   0559 13                 2216 	.db #0x13
   055A 0B                 2217 	.db #0x0B
   055B 09                 2218 	.db #0x09
   055C 1E                 2219 	.db #0x1E
   055D 15                 2220 	.db #0x15
   055E 13                 2221 	.db #0x13
   055F 1E                 2222 	.db #0x1E
   0560 0C                 2223 	.db #0x0C
   0561 01                 2224 	.db #0x01
   0562 1E                 2225 	.db #0x1E
   0563 1F                 2226 	.db #0x1F
   0564 1E                 2227 	.db #0x1E
   0565 1E                 2228 	.db #0x1E
   0566 1C                 2229 	.db #0x1C
   0567 1D                 2230 	.db #0x1D
   0568 01                 2231 	.db #0x01
   0569 11                 2232 	.db #0x11
   056A 13                 2233 	.db #0x13
   056B 0B                 2234 	.db #0x0B
   056C 09                 2235 	.db #0x09
   056D 1A                 2236 	.db #0x1A
   056E 14                 2237 	.db #0x14
   056F 04                 2238 	.db #0x04
   0570 0E                 2239 	.db #0x0E
   0571 07                 2240 	.db #0x07
   0572 01                 2241 	.db #0x01
   0573 1E                 2242 	.db #0x1E
   0574 1F                 2243 	.db #0x1F
   0575 00                 2244 	.db #0x00
   0576 02                 2245 	.db #0x02
   0577 1E                 2246 	.db #0x1E
   0578 03                 2247 	.db #0x03
   0579 01                 2248 	.db #0x01
   057A 0C                 2249 	.db #0x0C
   057B 06                 2250 	.db #0x06
   057C 0B                 2251 	.db #0x0B
   057D 1B                 2252 	.db #0x1B
   057E 04                 2253 	.db #0x04
   057F 0E                 2254 	.db #0x0E
   0580 19                 2255 	.db #0x19
   0581 17                 2256 	.db #0x17
   0582 07                 2257 	.db #0x07
   0583 1D                 2258 	.db #0x1D
   0584 1C                 2259 	.db #0x1C
   0585 02                 2260 	.db #0x02
   0586 1F                 2261 	.db #0x1F
   0587 1E                 2262 	.db #0x1E
   0588 08                 2263 	.db #0x08
   0589 07                 2264 	.db #0x07
   058A 06                 2265 	.db #0x06
   058B 1E                 2266 	.db #0x1E
   058C 08                 2267 	.db #0x08
   058D 04                 2268 	.db #0x04
   058E 0E                 2269 	.db #0x0E
   058F 14                 2270 	.db #0x14
   0590 09                 2271 	.db #0x09
   0591 11                 2272 	.db #0x11
   0592 17                 2273 	.db #0x17
   0593 07                 2274 	.db #0x07
   0594 1D                 2275 	.db #0x1D
   0595 1F                 2276 	.db #0x1F
   0596 1E                 2277 	.db #0x1E
   0597 08                 2278 	.db #0x08
   0598 0A                 2279 	.db #0x0A
   0599 1E                 2280 	.db #0x1E
   059A 1F                 2281 	.db #0x1F
   059B 1F                 2282 	.db #0x1F
   059C 04                 2283 	.db #0x04
   059D 0E                 2284 	.db #0x0E
   059E 14                 2285 	.db #0x14
   059F 0A                 2286 	.db #0x0A
   05A0 0B                 2287 	.db #0x0B
   05A1 09                 2288 	.db #0x09
   05A2 11                 2289 	.db #0x11
   05A3 17                 2290 	.db #0x17
   05A4 07                 2291 	.db #0x07
   05A5 01                 2292 	.db #0x01
   05A6 08                 2293 	.db #0x08
   05A7 0A                 2294 	.db #0x0A
   05A8 1E                 2295 	.db #0x1E
   05A9 1F                 2296 	.db #0x1F
   05AA 1F                 2297 	.db #0x1F
   05AB 1E                 2298 	.db #0x1E
   05AC                    2299 _tri_inva2:
   05AC 14                 2300 	.db #0x14
   05AD 04                 2301 	.db #0x04
   05AE 0E                 2302 	.db #0x0E
   05AF 14                 2303 	.db #0x14
   05B0 04                 2304 	.db #0x04
   05B1 0E                 2305 	.db #0x0E
   05B2 14                 2306 	.db #0x14
   05B3 1A                 2307 	.db #0x1A
   05B4 1B                 2308 	.db #0x1B
   05B5 15                 2309 	.db #0x15
   05B6 0F                 2310 	.db #0x0F
   05B7 05                 2311 	.db #0x05
   05B8 15                 2312 	.db #0x15
   05B9 0F                 2313 	.db #0x0F
   05BA 05                 2314 	.db #0x05
   05BB 15                 2315 	.db #0x15
   05BC 04                 2316 	.db #0x04
   05BD 0E                 2317 	.db #0x0E
   05BE 14                 2318 	.db #0x14
   05BF 04                 2319 	.db #0x04
   05C0 0E                 2320 	.db #0x0E
   05C1 14                 2321 	.db #0x14
   05C2 04                 2322 	.db #0x04
   05C3 1C                 2323 	.db #0x1C
   05C4 1D                 2324 	.db #0x1D
   05C5 05                 2325 	.db #0x05
   05C6 15                 2326 	.db #0x15
   05C7 0F                 2327 	.db #0x0F
   05C8 05                 2328 	.db #0x05
   05C9 15                 2329 	.db #0x15
   05CA 0F                 2330 	.db #0x0F
   05CB 05                 2331 	.db #0x05
   05CC 0E                 2332 	.db #0x0E
   05CD 14                 2333 	.db #0x14
   05CE 04                 2334 	.db #0x04
   05CF 0E                 2335 	.db #0x0E
   05D0 14                 2336 	.db #0x14
   05D1 04                 2337 	.db #0x04
   05D2 0E                 2338 	.db #0x0E
   05D3 18                 2339 	.db #0x18
   05D4 19                 2340 	.db #0x19
   05D5 0F                 2341 	.db #0x0F
   05D6 05                 2342 	.db #0x05
   05D7 15                 2343 	.db #0x15
   05D8 0F                 2344 	.db #0x0F
   05D9 05                 2345 	.db #0x05
   05DA 15                 2346 	.db #0x15
   05DB 0F                 2347 	.db #0x0F
   05DC 18                 2348 	.db #0x18
   05DD 1A                 2349 	.db #0x1A
   05DE 1C                 2350 	.db #0x1C
   05DF 18                 2351 	.db #0x18
   05E0 1A                 2352 	.db #0x1A
   05E1 1C                 2353 	.db #0x1C
   05E2 18                 2354 	.db #0x18
   05E3 18                 2355 	.db #0x18
   05E4 19                 2356 	.db #0x19
   05E5 19                 2357 	.db #0x19
   05E6 1D                 2358 	.db #0x1D
   05E7 1B                 2359 	.db #0x1B
   05E8 19                 2360 	.db #0x19
   05E9 1D                 2361 	.db #0x1D
   05EA 1B                 2362 	.db #0x1B
   05EB 19                 2363 	.db #0x19
   05EC 18                 2364 	.db #0x18
   05ED 1A                 2365 	.db #0x1A
   05EE 1C                 2366 	.db #0x1C
   05EF 18                 2367 	.db #0x18
   05F0 1A                 2368 	.db #0x1A
   05F1 1C                 2369 	.db #0x1C
   05F2 18                 2370 	.db #0x18
   05F3 18                 2371 	.db #0x18
   05F4 0D                 2372 	.db #0x0D
   05F5 19                 2373 	.db #0x19
   05F6 1D                 2374 	.db #0x1D
   05F7 1B                 2375 	.db #0x1B
   05F8 19                 2376 	.db #0x19
   05F9 1D                 2377 	.db #0x1D
   05FA 1B                 2378 	.db #0x1B
   05FB 19                 2379 	.db #0x19
   05FC 19                 2380 	.db #0x19
   05FD 1B                 2381 	.db #0x1B
   05FE 1D                 2382 	.db #0x1D
   05FF 19                 2383 	.db #0x19
   0600 1B                 2384 	.db #0x1B
   0601 1D                 2385 	.db #0x1D
   0602 19                 2386 	.db #0x19
   0603 0C                 2387 	.db #0x0C
   0604 0E                 2388 	.db #0x0E
   0605 18                 2389 	.db #0x18
   0606 1C                 2390 	.db #0x1C
   0607 1A                 2391 	.db #0x1A
   0608 18                 2392 	.db #0x18
   0609 1C                 2393 	.db #0x1C
   060A 1A                 2394 	.db #0x1A
   060B 18                 2395 	.db #0x18
   060C 19                 2396 	.db #0x19
   060D 1B                 2397 	.db #0x1B
   060E 1D                 2398 	.db #0x1D
   060F 19                 2399 	.db #0x19
   0610 1B                 2400 	.db #0x1B
   0611 1D                 2401 	.db #0x1D
   0612 19                 2402 	.db #0x19
   0613 0F                 2403 	.db #0x0F
   0614 0D                 2404 	.db #0x0D
   0615 18                 2405 	.db #0x18
   0616 1C                 2406 	.db #0x1C
   0617 1A                 2407 	.db #0x1A
   0618 18                 2408 	.db #0x18
   0619 1C                 2409 	.db #0x1C
   061A 1A                 2410 	.db #0x1A
   061B 18                 2411 	.db #0x18
   061C 0D                 2412 	.db #0x0D
   061D 17                 2413 	.db #0x17
   061E 07                 2414 	.db #0x07
   061F 0D                 2415 	.db #0x0D
   0620 17                 2416 	.db #0x17
   0621 07                 2417 	.db #0x07
   0622 0D                 2418 	.db #0x0D
   0623 0C                 2419 	.db #0x0C
   0624 0E                 2420 	.db #0x0E
   0625 0C                 2421 	.db #0x0C
   0626 06                 2422 	.db #0x06
   0627 16                 2423 	.db #0x16
   0628 0C                 2424 	.db #0x0C
   0629 06                 2425 	.db #0x06
   062A 16                 2426 	.db #0x16
   062B 0C                 2427 	.db #0x0C
   062C 07                 2428 	.db #0x07
   062D 0D                 2429 	.db #0x0D
   062E 17                 2430 	.db #0x17
   062F 07                 2431 	.db #0x07
   0630 0D                 2432 	.db #0x0D
   0631 17                 2433 	.db #0x17
   0632 02                 2434 	.db #0x02
   0633 1A                 2435 	.db #0x1A
   0634 1A                 2436 	.db #0x1A
   0635 03                 2437 	.db #0x03
   0636 16                 2438 	.db #0x16
   0637 0C                 2439 	.db #0x0C
   0638 06                 2440 	.db #0x06
   0639 16                 2441 	.db #0x16
   063A 0C                 2442 	.db #0x0C
   063B 06                 2443 	.db #0x06
   063C 17                 2444 	.db #0x17
   063D 07                 2445 	.db #0x07
   063E 0D                 2446 	.db #0x0D
   063F 17                 2447 	.db #0x17
   0640 07                 2448 	.db #0x07
   0641 10                 2449 	.db #0x10
   0642 1F                 2450 	.db #0x1F
   0643 1A                 2451 	.db #0x1A
   0644 1A                 2452 	.db #0x1A
   0645 1F                 2453 	.db #0x1F
   0646 11                 2454 	.db #0x11
   0647 06                 2455 	.db #0x06
   0648 16                 2456 	.db #0x16
   0649 0C                 2457 	.db #0x0C
   064A 06                 2458 	.db #0x06
   064B 16                 2459 	.db #0x16
   064C 0D                 2460 	.db #0x0D
   064D 17                 2461 	.db #0x17
   064E 07                 2462 	.db #0x07
   064F 0D                 2463 	.db #0x0D
   0650 0A                 2464 	.db #0x0A
   0651 1F                 2465 	.db #0x1F
   0652 1F                 2466 	.db #0x1F
   0653 1A                 2467 	.db #0x1A
   0654 1A                 2468 	.db #0x1A
   0655 1F                 2469 	.db #0x1F
   0656 1F                 2470 	.db #0x1F
   0657 0B                 2471 	.db #0x0B
   0658 0C                 2472 	.db #0x0C
   0659 06                 2473 	.db #0x06
   065A 16                 2474 	.db #0x16
   065B 0C                 2475 	.db #0x0C
   065C 07                 2476 	.db #0x07
   065D 0D                 2477 	.db #0x0D
   065E 17                 2478 	.db #0x17
   065F 02                 2479 	.db #0x02
   0660 1F                 2480 	.db #0x1F
   0661 1F                 2481 	.db #0x1F
   0662 1F                 2482 	.db #0x1F
   0663 1F                 2483 	.db #0x1F
   0664 1F                 2484 	.db #0x1F
   0665 1F                 2485 	.db #0x1F
   0666 1F                 2486 	.db #0x1F
   0667 1F                 2487 	.db #0x1F
   0668 03                 2488 	.db #0x03
   0669 16                 2489 	.db #0x16
   066A 0C                 2490 	.db #0x0C
   066B 06                 2491 	.db #0x06
   066C                    2492 _tri_inva3:
   066C 1A                 2493 	.db #0x1A
   066D 1C                 2494 	.db #0x1C
   066E 18                 2495 	.db #0x18
   066F 1A                 2496 	.db #0x1A
   0670 1C                 2497 	.db #0x1C
   0671 18                 2498 	.db #0x18
   0672 1A                 2499 	.db #0x1A
   0673 1E                 2500 	.db #0x1E
   0674 00                 2501 	.db #0x00
   0675 1C                 2502 	.db #0x1C
   0676 1C                 2503 	.db #0x1C
   0677 1D                 2504 	.db #0x1D
   0678 1C                 2505 	.db #0x1C
   0679 1C                 2506 	.db #0x1C
   067A 1D                 2507 	.db #0x1D
   067B 1C                 2508 	.db #0x1C
   067C 1A                 2509 	.db #0x1A
   067D 1C                 2510 	.db #0x1C
   067E 18                 2511 	.db #0x18
   067F 1A                 2512 	.db #0x1A
   0680 1C                 2513 	.db #0x1C
   0681 18                 2514 	.db #0x18
   0682 1A                 2515 	.db #0x1A
   0683 1F                 2516 	.db #0x1F
   0684 1C                 2517 	.db #0x1C
   0685 18                 2518 	.db #0x18
   0686 1F                 2519 	.db #0x1F
   0687 1C                 2520 	.db #0x1C
   0688 1D                 2521 	.db #0x1D
   0689 1D                 2522 	.db #0x1D
   068A 1C                 2523 	.db #0x1C
   068B 1D                 2524 	.db #0x1D
   068C 04                 2525 	.db #0x04
   068D 0E                 2526 	.db #0x0E
   068E 14                 2527 	.db #0x14
   068F 04                 2528 	.db #0x04
   0690 0E                 2529 	.db #0x0E
   0691 14                 2530 	.db #0x14
   0692 0A                 2531 	.db #0x0A
   0693 1E                 2532 	.db #0x1E
   0694 1C                 2533 	.db #0x1C
   0695 0D                 2534 	.db #0x0D
   0696 18                 2535 	.db #0x18
   0697 1C                 2536 	.db #0x1C
   0698 1C                 2537 	.db #0x1C
   0699 1C                 2538 	.db #0x1C
   069A 1C                 2539 	.db #0x1C
   069B 1C                 2540 	.db #0x1C
   069C 1C                 2541 	.db #0x1C
   069D 18                 2542 	.db #0x18
   069E 1A                 2543 	.db #0x1A
   069F 1C                 2544 	.db #0x1C
   06A0 18                 2545 	.db #0x18
   06A1 1A                 2546 	.db #0x1A
   06A2 1E                 2547 	.db #0x1E
   06A3 00                 2548 	.db #0x00
   06A4 1C                 2549 	.db #0x1C
   06A5 1D                 2550 	.db #0x1D
   06A6 1C                 2551 	.db #0x1C
   06A7 1C                 2552 	.db #0x1C
   06A8 1D                 2553 	.db #0x1D
   06A9 18                 2554 	.db #0x18
   06AA 0F                 2555 	.db #0x0F
   06AB 1C                 2556 	.db #0x1C
   06AC 1C                 2557 	.db #0x1C
   06AD 18                 2558 	.db #0x18
   06AE 1A                 2559 	.db #0x1A
   06AF 1C                 2560 	.db #0x1C
   06B0 18                 2561 	.db #0x18
   06B1 1A                 2562 	.db #0x1A
   06B2 1F                 2563 	.db #0x1F
   06B3 1C                 2564 	.db #0x1C
   06B4 1D                 2565 	.db #0x1D
   06B5 02                 2566 	.db #0x02
   06B6 1C                 2567 	.db #0x1C
   06B7 02                 2568 	.db #0x02
   06B8 1D                 2569 	.db #0x1D
   06B9 1F                 2570 	.db #0x1F
   06BA 18                 2571 	.db #0x18
   06BB 1C                 2572 	.db #0x1C
   06BC 1C                 2573 	.db #0x1C
   06BD 18                 2574 	.db #0x18
   06BE 1A                 2575 	.db #0x1A
   06BF 1C                 2576 	.db #0x1C
   06C0 18                 2577 	.db #0x18
   06C1 1A                 2578 	.db #0x1A
   06C2 1F                 2579 	.db #0x1F
   06C3 03                 2580 	.db #0x03
   06C4 1C                 2581 	.db #0x1C
   06C5 1D                 2582 	.db #0x1D
   06C6 1C                 2583 	.db #0x1C
   06C7 1C                 2584 	.db #0x1C
   06C8 1C                 2585 	.db #0x1C
   06C9 1C                 2586 	.db #0x1C
   06CA 1D                 2587 	.db #0x1D
   06CB 1C                 2588 	.db #0x1C
   06CC 0E                 2589 	.db #0x0E
   06CD 14                 2590 	.db #0x14
   06CE 04                 2591 	.db #0x04
   06CF 0E                 2592 	.db #0x0E
   06D0 14                 2593 	.db #0x14
   06D1 0A                 2594 	.db #0x0A
   06D2 1E                 2595 	.db #0x1E
   06D3 00                 2596 	.db #0x00
   06D4 0B                 2597 	.db #0x0B
   06D5 0A                 2598 	.db #0x0A
   06D6 0B                 2599 	.db #0x0B
   06D7 0A                 2600 	.db #0x0A
   06D8 0B                 2601 	.db #0x0B
   06D9 0A                 2602 	.db #0x0A
   06DA 1D                 2603 	.db #0x1D
   06DB 1C                 2604 	.db #0x1C
   06DC 14                 2605 	.db #0x14
   06DD 04                 2606 	.db #0x04
   06DE 0E                 2607 	.db #0x0E
   06DF 14                 2608 	.db #0x14
   06E0 0A                 2609 	.db #0x0A
   06E1 1F                 2610 	.db #0x1F
   06E2 1E                 2611 	.db #0x1E
   06E3 1C                 2612 	.db #0x1C
   06E4 1F                 2613 	.db #0x1F
   06E5 1E                 2614 	.db #0x1E
   06E6 1F                 2615 	.db #0x1F
   06E7 1E                 2616 	.db #0x1E
   06E8 1F                 2617 	.db #0x1F
   06E9 1E                 2618 	.db #0x1E
   06EA 1D                 2619 	.db #0x1D
   06EB 1C                 2620 	.db #0x1C
   06EC 1A                 2621 	.db #0x1A
   06ED 1C                 2622 	.db #0x1C
   06EE 18                 2623 	.db #0x18
   06EF 1A                 2624 	.db #0x1A
   06F0 1F                 2625 	.db #0x1F
   06F1 12                 2626 	.db #0x12
   06F2 18                 2627 	.db #0x18
   06F3 18                 2628 	.db #0x18
   06F4 19                 2629 	.db #0x19
   06F5 19                 2630 	.db #0x19
   06F6 13                 2631 	.db #0x13
   06F7 1E                 2632 	.db #0x1E
   06F8 1F                 2633 	.db #0x1F
   06F9 1E                 2634 	.db #0x1E
   06FA 1D                 2635 	.db #0x1D
   06FB 1C                 2636 	.db #0x1C
   06FC 1B                 2637 	.db #0x1B
   06FD 1D                 2638 	.db #0x1D
   06FE 19                 2639 	.db #0x19
   06FF 1B                 2640 	.db #0x1B
   0700 1E                 2641 	.db #0x1E
   0701 18                 2642 	.db #0x18
   0702 18                 2643 	.db #0x18
   0703 18                 2644 	.db #0x18
   0704 19                 2645 	.db #0x19
   0705 19                 2646 	.db #0x19
   0706 19                 2647 	.db #0x19
   0707 13                 2648 	.db #0x13
   0708 1F                 2649 	.db #0x1F
   0709 00                 2650 	.db #0x00
   070A 1C                 2651 	.db #0x1C
   070B 1C                 2652 	.db #0x1C
   070C 1B                 2653 	.db #0x1B
   070D 1D                 2654 	.db #0x1D
   070E 19                 2655 	.db #0x19
   070F 1B                 2656 	.db #0x1B
   0710 1F                 2657 	.db #0x1F
   0711 18                 2658 	.db #0x18
   0712 18                 2659 	.db #0x18
   0713 0C                 2660 	.db #0x0C
   0714 1C                 2661 	.db #0x1C
   0715 1C                 2662 	.db #0x1C
   0716 1C                 2663 	.db #0x1C
   0717 1C                 2664 	.db #0x1C
   0718 1C                 2665 	.db #0x1C
   0719 1C                 2666 	.db #0x1C
   071A 1C                 2667 	.db #0x1C
   071B 1C                 2668 	.db #0x1C
   071C 17                 2669 	.db #0x17
   071D 07                 2670 	.db #0x07
   071E 0D                 2671 	.db #0x0D
   071F 17                 2672 	.db #0x17
   0720 09                 2673 	.db #0x09
   0721 1E                 2674 	.db #0x1E
   0722 1F                 2675 	.db #0x1F
   0723 1D                 2676 	.db #0x1D
   0724 1D                 2677 	.db #0x1D
   0725 1D                 2678 	.db #0x1D
   0726 1C                 2679 	.db #0x1C
   0727 1D                 2680 	.db #0x1D
   0728 1C                 2681 	.db #0x1C
   0729 1C                 2682 	.db #0x1C
   072A 1C                 2683 	.db #0x1C
   072B 1C                 2684 	.db #0x1C
   072C                    2685 _tri_inva4:
   072C 1E                 2686 	.db #0x1E
   072D 00                 2687 	.db #0x00
   072E 05                 2688 	.db #0x05
   072F 0A                 2689 	.db #0x0A
   0730 1E                 2690 	.db #0x1E
   0731 00                 2691 	.db #0x00
   0732 06                 2692 	.db #0x06
   0733 16                 2693 	.db #0x16
   0734 0F                 2694 	.db #0x0F
   0735 01                 2695 	.db #0x01
   0736 1F                 2696 	.db #0x1F
   0737 11                 2697 	.db #0x11
   0738 0C                 2698 	.db #0x0C
   0739 01                 2699 	.db #0x01
   073A 1F                 2700 	.db #0x1F
   073B 1F                 2701 	.db #0x1F
   073C 12                 2702 	.db #0x12
   073D 0F                 2703 	.db #0x0F
   073E 02                 2704 	.db #0x02
   073F 1E                 2705 	.db #0x1E
   0740 12                 2706 	.db #0x12
   0741 0F                 2707 	.db #0x0F
   0742 05                 2708 	.db #0x05
   0743 15                 2709 	.db #0x15
   0744 0C                 2710 	.db #0x0C
   0745 06                 2711 	.db #0x06
   0746 09                 2712 	.db #0x09
   0747 1F                 2713 	.db #0x1F
   0748 03                 2714 	.db #0x03
   0749 06                 2715 	.db #0x06
   074A 09                 2716 	.db #0x09
   074B 1F                 2717 	.db #0x1F
   074C 15                 2718 	.db #0x15
   074D 10                 2719 	.db #0x10
   074E 1E                 2720 	.db #0x1E
   074F 08                 2721 	.db #0x08
   0750 15                 2722 	.db #0x15
   0751 10                 2723 	.db #0x10
   0752 1E                 2724 	.db #0x1E
   0753 1F                 2725 	.db #0x1F
   0754 1F                 2726 	.db #0x1F
   0755 0B                 2727 	.db #0x0B
   0756 16                 2728 	.db #0x16
   0757 13                 2729 	.db #0x13
   0758 1F                 2730 	.db #0x1F
   0759 0B                 2731 	.db #0x0B
   075A 16                 2732 	.db #0x16
   075B 13                 2733 	.db #0x13
   075C 05                 2734 	.db #0x05
   075D 1E                 2735 	.db #0x1E
   075E 00                 2736 	.db #0x00
   075F 05                 2737 	.db #0x05
   0760 0A                 2738 	.db #0x0A
   0761 1E                 2739 	.db #0x1E
   0762 08                 2740 	.db #0x08
   0763 15                 2741 	.db #0x15
   0764 13                 2742 	.db #0x13
   0765 1F                 2743 	.db #0x1F
   0766 11                 2744 	.db #0x11
   0767 0D                 2745 	.db #0x0D
   0768 01                 2746 	.db #0x01
   0769 1F                 2747 	.db #0x1F
   076A 0C                 2748 	.db #0x0C
   076B 0D                 2749 	.db #0x0D
   076C 02                 2750 	.db #0x02
   076D 1E                 2751 	.db #0x1E
   076E 0E                 2752 	.db #0x0E
   076F 0F                 2753 	.db #0x0F
   0770 1E                 2754 	.db #0x1E
   0771 00                 2755 	.db #0x00
   0772 05                 2756 	.db #0x05
   0773 15                 2757 	.db #0x15
   0774 0C                 2758 	.db #0x0C
   0775 01                 2759 	.db #0x01
   0776 1F                 2760 	.db #0x1F
   0777 07                 2761 	.db #0x07
   0778 07                 2762 	.db #0x07
   0779 1F                 2763 	.db #0x1F
   077A 06                 2764 	.db #0x06
   077B 07                 2765 	.db #0x07
   077C 1E                 2766 	.db #0x1E
   077D 1E                 2767 	.db #0x1E
   077E 15                 2768 	.db #0x15
   077F 15                 2769 	.db #0x15
   0780 1E                 2770 	.db #0x1E
   0781 0F                 2771 	.db #0x0F
   0782 02                 2772 	.db #0x02
   0783 1E                 2773 	.db #0x1E
   0784 07                 2774 	.db #0x07
   0785 06                 2775 	.db #0x06
   0786 1F                 2776 	.db #0x1F
   0787 17                 2777 	.db #0x17
   0788 17                 2778 	.db #0x17
   0789 1E                 2779 	.db #0x1E
   078A 17                 2780 	.db #0x17
   078B 16                 2781 	.db #0x16
   078C 1F                 2782 	.db #0x1F
   078D 1F                 2783 	.db #0x1F
   078E 04                 2784 	.db #0x04
   078F 05                 2785 	.db #0x05
   0790 1F                 2786 	.db #0x1F
   0791 14                 2787 	.db #0x14
   0792 09                 2788 	.db #0x09
   0793 11                 2789 	.db #0x11
   0794 17                 2790 	.db #0x17
   0795 0A                 2791 	.db #0x0A
   0796 1E                 2792 	.db #0x1E
   0797 0D                 2793 	.db #0x0D
   0798 0D                 2794 	.db #0x0D
   0799 1E                 2795 	.db #0x1E
   079A 0D                 2796 	.db #0x0D
   079B 0C                 2797 	.db #0x0C
   079C 09                 2798 	.db #0x09
   079D 1F                 2799 	.db #0x1F
   079E 0E                 2800 	.db #0x0E
   079F 0F                 2801 	.db #0x0F
   07A0 1F                 2802 	.db #0x1F
   07A1 04                 2803 	.db #0x04
   07A2 04                 2804 	.db #0x04
   07A3 1F                 2805 	.db #0x1F
   07A4 1F                 2806 	.db #0x1F
   07A5 1E                 2807 	.db #0x1E
   07A6 08                 2808 	.db #0x08
   07A7 06                 2809 	.db #0x06
   07A8 07                 2810 	.db #0x07
   07A9 1E                 2811 	.db #0x1E
   07AA 07                 2812 	.db #0x07
   07AB 06                 2813 	.db #0x06
   07AC 04                 2814 	.db #0x04
   07AD 1F                 2815 	.db #0x1F
   07AE 11                 2816 	.db #0x11
   07AF 14                 2817 	.db #0x14
   07B0 1F                 2818 	.db #0x1F
   07B1 03                 2819 	.db #0x03
   07B2 0E                 2820 	.db #0x0E
   07B3 14                 2821 	.db #0x14
   07B4 07                 2822 	.db #0x07
   07B5 0D                 2823 	.db #0x0D
   07B6 17                 2824 	.db #0x17
   07B7 0A                 2825 	.db #0x0A
   07B8 1E                 2826 	.db #0x1E
   07B9 12                 2827 	.db #0x12
   07BA 17                 2828 	.db #0x17
   07BB 0A                 2829 	.db #0x0A
   07BC 0E                 2830 	.db #0x0E
   07BD 1F                 2831 	.db #0x1F
   07BE 1F                 2832 	.db #0x1F
   07BF 04                 2833 	.db #0x04
   07C0 01                 2834 	.db #0x01
   07C1 1F                 2835 	.db #0x1F
   07C2 11                 2836 	.db #0x11
   07C3 17                 2837 	.db #0x17
   07C4 07                 2838 	.db #0x07
   07C5 0D                 2839 	.db #0x0D
   07C6 10                 2840 	.db #0x10
   07C7 1E                 2841 	.db #0x1E
   07C8 00                 2842 	.db #0x00
   07C9 0D                 2843 	.db #0x0D
   07CA 10                 2844 	.db #0x10
   07CB 1E                 2845 	.db #0x1E
   07CC 14                 2846 	.db #0x14
   07CD 09                 2847 	.db #0x09
   07CE 1F                 2848 	.db #0x1F
   07CF 03                 2849 	.db #0x03
   07D0 0E                 2850 	.db #0x0E
   07D1 13                 2851 	.db #0x13
   07D2 1F                 2852 	.db #0x1F
   07D3 1F                 2853 	.db #0x1F
   07D4 1F                 2854 	.db #0x1F
   07D5 1E                 2855 	.db #0x1E
   07D6 1E                 2856 	.db #0x1E
   07D7 08                 2857 	.db #0x08
   07D8 07                 2858 	.db #0x07
   07D9 02                 2859 	.db #0x02
   07DA 1E                 2860 	.db #0x1E
   07DB 1E                 2861 	.db #0x1E
   07DC 0B                 2862 	.db #0x0B
   07DD 04                 2863 	.db #0x04
   07DE 01                 2864 	.db #0x01
   07DF 1F                 2865 	.db #0x1F
   07E0 11                 2866 	.db #0x11
   07E1 14                 2867 	.db #0x14
   07E2 04                 2868 	.db #0x04
   07E3 0E                 2869 	.db #0x0E
   07E4 17                 2870 	.db #0x17
   07E5 07                 2871 	.db #0x07
   07E6 0D                 2872 	.db #0x0D
   07E7 17                 2873 	.db #0x17
   07E8 0A                 2874 	.db #0x0A
   07E9 1E                 2875 	.db #0x1E
   07EA 1E                 2876 	.db #0x1E
   07EB 1E                 2877 	.db #0x1E
                           2878 ;demo.c:239: void my_isr(void) interrupt
                           2879 ;	---------------------------------
                           2880 ; Function my_isr
                           2881 ; ---------------------------------
   07EC                    2882 _my_isr_start::
   07EC                    2883 _my_isr:
   07EC F5                 2884 	push	af
   07ED C5                 2885 	push	bc
   07EE D5                 2886 	push	de
   07EF E5                 2887 	push	hl
   07F0 FD E5              2888 	push	iy
                           2889 ;demo.c:241: DI;
   07F2 F3                 2890 		di 
                           2891 ;demo.c:243: READ_VDP_STATUS;
   07F3 DB 99              2892 		in a,(#0x99) 
                           2893 ;demo.c:245: PLY_Play();
   07F5 CDr00s00           2894 	call	_PLY_Play
                           2895 ;demo.c:246: PLY_SendRegisters();
   07F8 CDr00s00           2896 	call	_PLY_SendRegisters
                           2897 ;demo.c:248: vbicount+=1;
   07FB FD 21rB0s16        2898 	ld	iy,#_vbicount
   07FF FD 34 00           2899 	inc	0 (iy)
   0802 20 07              2900 	jr	NZ,00103$
   0804 FD 21rB0s16        2901 	ld	iy,#_vbicount
   0808 FD 34 01           2902 	inc	1 (iy)
   080B                    2903 00103$:
                           2904 ;demo.c:249: tick++;
   080B FD 21rB2s16        2905 	ld	iy,#_tick
   080F FD 34 00           2906 	inc	0 (iy)
   0812 20 07              2907 	jr	NZ,00104$
   0814 FD 21rB2s16        2908 	ld	iy,#_tick
   0818 FD 34 01           2909 	inc	1 (iy)
   081B                    2910 00104$:
                           2911 ;demo.c:251: EI;
   081B FB                 2912 		ei 
   081C FD E1              2913 	pop	iy
   081E E1                 2914 	pop	hl
   081F D1                 2915 	pop	de
   0820 C1                 2916 	pop	bc
   0821 F1                 2917 	pop	af
   0822 ED 4D              2918 	reti
   0824                    2919 _my_isr_end::
                           2920 ;demo.c:254: void color_isr(void) interrupt
                           2921 ;	---------------------------------
                           2922 ; Function color_isr
                           2923 ; ---------------------------------
   0824                    2924 _color_isr_start::
   0824                    2925 _color_isr:
   0824 F5                 2926 	push	af
   0825 C5                 2927 	push	bc
   0826 D5                 2928 	push	de
   0827 E5                 2929 	push	hl
   0828 FD E5              2930 	push	iy
                           2931 ;demo.c:256: DI;
   082A F3                 2932 		di 
                           2933 ;demo.c:258: if(isNthBitSet(vdp2_status(1),0)) {
   082B 3E 01              2934 	ld	a,#0x01
   082D F5                 2935 	push	af
   082E 33                 2936 	inc	sp
   082F CDr00s00           2937 	call	_vdp2_status
   0832 33                 2938 	inc	sp
   0833 4D                 2939 	ld	c,l
   0834 21 00 00           2940 	ld	hl,#0x0000
   0837 E5                 2941 	push	hl
   0838 79                 2942 	ld	a,c
   0839 F5                 2943 	push	af
   083A 33                 2944 	inc	sp
   083B CDr00s00           2945 	call	_isNthBitSet
   083E F1                 2946 	pop	af
   083F 33                 2947 	inc	sp
   0840 44                 2948 	ld	b,h
   0841 4D                 2949 	ld	c,l
   0842 79                 2950 	ld	a,c
   0843 B0                 2951 	or	a,b
   0844 28 19              2952 	jr	Z,00102$
                           2953 ;demo.c:259: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0846 21rB0s16           2954 	ld	hl,#_vbicount + 0
   0849 4E                 2955 	ld	c,(hl)
   084A 06 00              2956 	ld	b,#0x00
   084C 21r00s00           2957 	ld	hl,#_sintab
   084F 09                 2958 	add	hl,bc
   0850 7E                 2959 	ld	a,(hl)
   0851 F5                 2960 	push	af
   0852 33                 2961 	inc	sp
   0853 3E 17              2962 	ld	a,#0x17
   0855 F5                 2963 	push	af
   0856 33                 2964 	inc	sp
   0857 CDr00s00           2965 	call	_vdp_register
   085A F1                 2966 	pop	af
                           2967 ;demo.c:260: READ_VDP_STATUS;
   085B DB 99              2968 		in a,(#0x99) 
   085D 18 18              2969 	jr	00103$
   085F                    2970 00102$:
                           2971 ;demo.c:263: READ_VDP_STATUS;
   085F DB 99              2972 		in a,(#0x99) 
                           2973 ;demo.c:264: vbicount++;
   0861 FD 21rB0s16        2974 	ld	iy,#_vbicount
   0865 FD 34 00           2975 	inc	0 (iy)
   0868 20 07              2976 	jr	NZ,00107$
   086A FD 21rB0s16        2977 	ld	iy,#_vbicount
   086E FD 34 01           2978 	inc	1 (iy)
   0871                    2979 00107$:
                           2980 ;demo.c:267: PLY_Play();
   0871 CDr00s00           2981 	call	_PLY_Play
                           2982 ;demo.c:268: PLY_SendRegisters();
   0874 CDr00s00           2983 	call	_PLY_SendRegisters
   0877                    2984 00103$:
                           2985 ;demo.c:271: EI;
   0877 FB                 2986 		ei 
   0878 FD E1              2987 	pop	iy
   087A E1                 2988 	pop	hl
   087B D1                 2989 	pop	de
   087C C1                 2990 	pop	bc
   087D F1                 2991 	pop	af
   087E ED 4D              2992 	reti
   0880                    2993 _color_isr_end::
                           2994 ;demo.c:278: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2995 ;	---------------------------------
                           2996 ; Function ge5_load
                           2997 ; ---------------------------------
   0880                    2998 _ge5_load_start::
   0880                    2999 _ge5_load:
   0880 DD E5              3000 	push	ix
   0882 DD 21 00 00        3001 	ld	ix,#0
   0886 DD 39              3002 	add	ix,sp
   0888 21 D2 FF           3003 	ld	hl,#-46
   088B 39                 3004 	add	hl,sp
   088C F9                 3005 	ld	sp,hl
                           3006 ;demo.c:282: if(debugprint == 1) {
   088D DD 7E 09           3007 	ld	a,9 (ix)
   0890 D6 01              3008 	sub	a,#0x01
   0892 20 06              3009 	jr	NZ,00125$
   0894 DD 7E 0A           3010 	ld	a,10 (ix)
   0897 B7                 3011 	or	a,a
   0898 28 02              3012 	jr	Z,00126$
   089A                    3013 00125$:
   089A 18 1B              3014 	jr	00102$
   089C                    3015 00126$:
                           3016 ;demo.c:283: puts("loading ge5file: ");
   089C 21r7Bs09           3017 	ld	hl,#__str_0
   089F E5                 3018 	push	hl
   08A0 CDr00s00           3019 	call	_puts
   08A3 F1                 3020 	pop	af
                           3021 ;demo.c:284: puts(file_name);
   08A4 DD 6E 04           3022 	ld	l,4 (ix)
   08A7 DD 66 05           3023 	ld	h,5 (ix)
   08AA E5                 3024 	push	hl
   08AB CDr00s00           3025 	call	_puts
   08AE F1                 3026 	pop	af
                           3027 ;demo.c:285: puts("\r\n");
   08AF 21r8Ds09           3028 	ld	hl,#__str_1
   08B2 E5                 3029 	push	hl
   08B3 CDr00s00           3030 	call	_puts
   08B6 F1                 3031 	pop	af
   08B7                    3032 00102$:
                           3033 ;demo.c:288: memset((uint8_t *) &f, 0, sizeof(fcb));
   08B7 21 00 00           3034 	ld	hl,#0x0000
   08BA 39                 3035 	add	hl,sp
   08BB 4D                 3036 	ld	c,l
   08BC 44                 3037 	ld	b,h
   08BD 21 2E 00           3038 	ld	hl,#0x002E
   08C0 E5                 3039 	push	hl
   08C1 3E 00              3040 	ld	a,#0x00
   08C3 F5                 3041 	push	af
   08C4 33                 3042 	inc	sp
   08C5 C5                 3043 	push	bc
   08C6 CDr00s00           3044 	call	_memset
   08C9 F1                 3045 	pop	af
   08CA F1                 3046 	pop	af
   08CB 33                 3047 	inc	sp
                           3048 ;demo.c:290: f.record_size = 128;
   08CC 21 00 00           3049 	ld	hl,#0x0000
   08CF 39                 3050 	add	hl,sp
   08D0 4D                 3051 	ld	c,l
   08D1 44                 3052 	ld	b,h
   08D2 21 0F 00           3053 	ld	hl,#0x000F
   08D5 09                 3054 	add	hl,bc
   08D6 EB                 3055 	ex	de,hl
   08D7 3E 80              3056 	ld	a,#0x80
   08D9 12                 3057 	ld	(de),a
                           3058 ;demo.c:291: f.drive = 0;
   08DA 3E 00              3059 	ld	a,#0x00
   08DC 02                 3060 	ld	(bc),a
                           3061 ;demo.c:293: memcpy(f.name, file_name, 11);
   08DD DD 5E 04           3062 	ld	e,4 (ix)
   08E0 DD 56 05           3063 	ld	d,5 (ix)
   08E3 03                 3064 	inc	bc
   08E4 21 0B 00           3065 	ld	hl,#0x000B
   08E7 E5                 3066 	push	hl
   08E8 D5                 3067 	push	de
   08E9 C5                 3068 	push	bc
   08EA CDr00s00           3069 	call	_memcpy
   08ED F1                 3070 	pop	af
   08EE F1                 3071 	pop	af
   08EF F1                 3072 	pop	af
                           3073 ;demo.c:295: if (open(&f) != 0) return 0;
   08F0 21 00 00           3074 	ld	hl,#0x0000
   08F3 39                 3075 	add	hl,sp
   08F4 E5                 3076 	push	hl
   08F5 CDr00s00           3077 	call	_open
   08F8 F1                 3078 	pop	af
   08F9 AF                 3079 	xor	a,a
   08FA B5                 3080 	or	a,l
   08FB 28 05              3081 	jr	Z,00104$
   08FD 2E 00              3082 	ld	l,#0x00
   08FF C3r76s09           3083 	jp	00116$
   0902                    3084 00104$:
                           3085 ;demo.c:296: vdp_set_write_address(vramh, vraml);
   0902 DD 6E 07           3086 	ld	l,7 (ix)
   0905 DD 66 08           3087 	ld	h,8 (ix)
   0908 E5                 3088 	push	hl
   0909 DD 7E 06           3089 	ld	a,6 (ix)
   090C F5                 3090 	push	af
   090D 33                 3091 	inc	sp
   090E CDr00s00           3092 	call	_vdp_set_write_address
   0911 F1                 3093 	pop	af
   0912 33                 3094 	inc	sp
                           3095 ;demo.c:298: for (i = 0; i < 213; i++) {
   0913 0E 00              3096 	ld	c,#0x00
   0915                    3097 00112$:
   0915 79                 3098 	ld	a,c
   0916 D6 D5              3099 	sub	a,#0xD5
   0918 D2r6Bs09           3100 	jp	NC,00115$
                           3101 ;demo.c:299: if (block_set_data_ptr(scratch) != 0) return 0;
   091B C5                 3102 	push	bc
   091C 21r50s15           3103 	ld	hl,#_scratch
   091F E5                 3104 	push	hl
   0920 CDr00s00           3105 	call	_block_set_data_ptr
   0923 F1                 3106 	pop	af
   0924 7D                 3107 	ld	a,l
   0925 C1                 3108 	pop	bc
   0926 47                 3109 	ld	b,a
   0927 B7                 3110 	or	a,a
   0928 28 05              3111 	jr	Z,00106$
   092A 2E 00              3112 	ld	l,#0x00
   092C C3r76s09           3113 	jp	00116$
   092F                    3114 00106$:
                           3115 ;demo.c:300: if (block_read(&f) != 0) return 0;
   092F 21 00 00           3116 	ld	hl,#0x0000
   0932 39                 3117 	add	hl,sp
   0933 C5                 3118 	push	bc
   0934 E5                 3119 	push	hl
   0935 CDr00s00           3120 	call	_block_read
   0938 F1                 3121 	pop	af
   0939 7D                 3122 	ld	a,l
   093A C1                 3123 	pop	bc
   093B 47                 3124 	ld	b,a
   093C B7                 3125 	or	a,a
   093D 28 04              3126 	jr	Z,00108$
   093F 2E 00              3127 	ld	l,#0x00
   0941 18 33              3128 	jr	00116$
   0943                    3129 00108$:
                           3130 ;demo.c:302: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0943 AF                 3131 	xor	a,a
   0944 B1                 3132 	or	a,c
   0945 20 11              3133 	jr	NZ,00110$
   0947 11r57s15           3134 	ld	de,#_scratch + 7
   094A C5                 3135 	push	bc
   094B 3E 79              3136 	ld	a,#0x79
   094D F5                 3137 	push	af
   094E 33                 3138 	inc	sp
   094F D5                 3139 	push	de
   0950 CDr00s00           3140 	call	_vdp_load_screen
   0953 F1                 3141 	pop	af
   0954 33                 3142 	inc	sp
   0955 C1                 3143 	pop	bc
   0956 18 0F              3144 	jr	00114$
   0958                    3145 00110$:
                           3146 ;demo.c:303: else vdp_load_screen(scratch, 128);
   0958 C5                 3147 	push	bc
   0959 3E 80              3148 	ld	a,#0x80
   095B F5                 3149 	push	af
   095C 33                 3150 	inc	sp
   095D 21r50s15           3151 	ld	hl,#_scratch
   0960 E5                 3152 	push	hl
   0961 CDr00s00           3153 	call	_vdp_load_screen
   0964 F1                 3154 	pop	af
   0965 33                 3155 	inc	sp
   0966 C1                 3156 	pop	bc
   0967                    3157 00114$:
                           3158 ;demo.c:298: for (i = 0; i < 213; i++) {
   0967 0C                 3159 	inc	c
   0968 C3r15s09           3160 	jp	00112$
   096B                    3161 00115$:
                           3162 ;demo.c:306: close(&f);
   096B 21 00 00           3163 	ld	hl,#0x0000
   096E 39                 3164 	add	hl,sp
   096F E5                 3165 	push	hl
   0970 CDr00s00           3166 	call	_close
   0973 F1                 3167 	pop	af
                           3168 ;demo.c:308: return 1;
   0974 2E 01              3169 	ld	l,#0x01
   0976                    3170 00116$:
   0976 DD F9              3171 	ld	sp,ix
   0978 DD E1              3172 	pop	ix
   097A C9                 3173 	ret
   097B                    3174 _ge5_load_end::
   097B                    3175 __str_0:
   097B 6C 6F 61 64 69 6E  3176 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   098C 00                 3177 	.db 0x00
   098D                    3178 __str_1:
   098D 0D                 3179 	.db 0x0D
   098E 0A                 3180 	.db 0x0A
   098F 00                 3181 	.db 0x00
                           3182 ;demo.c:311: void scratch_clear() {
                           3183 ;	---------------------------------
                           3184 ; Function scratch_clear
                           3185 ; ---------------------------------
   0990                    3186 _scratch_clear_start::
   0990                    3187 _scratch_clear:
                           3188 ;demo.c:312: memset((uint8_t *) &scratch, 0, 128);
   0990 21 80 00           3189 	ld	hl,#0x0080
   0993 E5                 3190 	push	hl
   0994 3E 00              3191 	ld	a,#0x00
   0996 F5                 3192 	push	af
   0997 33                 3193 	inc	sp
   0998 21r50s15           3194 	ld	hl,#_scratch
   099B E5                 3195 	push	hl
   099C CDr00s00           3196 	call	_memset
   099F F1                 3197 	pop	af
   09A0 F1                 3198 	pop	af
   09A1 33                 3199 	inc	sp
   09A2 C9                 3200 	ret
   09A3                    3201 _scratch_clear_end::
                           3202 ;demo.c:315: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3203 ;	---------------------------------
                           3204 ; Function pal_load
                           3205 ; ---------------------------------
   09A3                    3206 _pal_load_start::
   09A3                    3207 _pal_load:
   09A3 DD E5              3208 	push	ix
   09A5 DD 21 00 00        3209 	ld	ix,#0
   09A9 DD 39              3210 	add	ix,sp
   09AB 21 D2 FF           3211 	ld	hl,#-46
   09AE 39                 3212 	add	hl,sp
   09AF F9                 3213 	ld	sp,hl
                           3214 ;demo.c:318: if(debugprint == 1) {
   09B0 DD 7E 07           3215 	ld	a,7 (ix)
   09B3 D6 01              3216 	sub	a,#0x01
   09B5 20 06              3217 	jr	NZ,00115$
   09B7 DD 7E 08           3218 	ld	a,8 (ix)
   09BA B7                 3219 	or	a,a
   09BB 28 02              3220 	jr	Z,00116$
   09BD                    3221 00115$:
   09BD 18 1B              3222 	jr	00102$
   09BF                    3223 00116$:
                           3224 ;demo.c:319: puts("loading palfile: ");
   09BF 21r6Ds0A           3225 	ld	hl,#__str_2
   09C2 E5                 3226 	push	hl
   09C3 CDr00s00           3227 	call	_puts
   09C6 F1                 3228 	pop	af
                           3229 ;demo.c:320: puts(file_name);
   09C7 DD 6E 04           3230 	ld	l,4 (ix)
   09CA DD 66 05           3231 	ld	h,5 (ix)
   09CD E5                 3232 	push	hl
   09CE CDr00s00           3233 	call	_puts
   09D1 F1                 3234 	pop	af
                           3235 ;demo.c:321: puts("\r\n");
   09D2 21r7Fs0A           3236 	ld	hl,#__str_3
   09D5 E5                 3237 	push	hl
   09D6 CDr00s00           3238 	call	_puts
   09D9 F1                 3239 	pop	af
   09DA                    3240 00102$:
                           3241 ;demo.c:324: memset((uint8_t *) &f, 0, sizeof(fcb));
   09DA 21 00 00           3242 	ld	hl,#0x0000
   09DD 39                 3243 	add	hl,sp
   09DE 4D                 3244 	ld	c,l
   09DF 44                 3245 	ld	b,h
   09E0 21 2E 00           3246 	ld	hl,#0x002E
   09E3 E5                 3247 	push	hl
   09E4 3E 00              3248 	ld	a,#0x00
   09E6 F5                 3249 	push	af
   09E7 33                 3250 	inc	sp
   09E8 C5                 3251 	push	bc
   09E9 CDr00s00           3252 	call	_memset
   09EC F1                 3253 	pop	af
   09ED F1                 3254 	pop	af
   09EE 33                 3255 	inc	sp
                           3256 ;demo.c:325: scratch_clear();
   09EF CDr90s09           3257 	call	_scratch_clear
                           3258 ;demo.c:327: f.record_size = ss;
   09F2 21 00 00           3259 	ld	hl,#0x0000
   09F5 39                 3260 	add	hl,sp
   09F6 4D                 3261 	ld	c,l
   09F7 44                 3262 	ld	b,h
   09F8 21 0F 00           3263 	ld	hl,#0x000F
   09FB 09                 3264 	add	hl,bc
   09FC EB                 3265 	ex	de,hl
   09FD DD 7E 06           3266 	ld	a,6 (ix)
   0A00 12                 3267 	ld	(de),a
                           3268 ;demo.c:328: f.drive = 0;
   0A01 3E 00              3269 	ld	a,#0x00
   0A03 02                 3270 	ld	(bc),a
                           3271 ;demo.c:330: memcpy(f.name, file_name, 11);
   0A04 DD 5E 04           3272 	ld	e,4 (ix)
   0A07 DD 56 05           3273 	ld	d,5 (ix)
   0A0A 03                 3274 	inc	bc
   0A0B 21 0B 00           3275 	ld	hl,#0x000B
   0A0E E5                 3276 	push	hl
   0A0F D5                 3277 	push	de
   0A10 C5                 3278 	push	bc
   0A11 CDr00s00           3279 	call	_memcpy
   0A14 F1                 3280 	pop	af
   0A15 F1                 3281 	pop	af
   0A16 F1                 3282 	pop	af
                           3283 ;demo.c:332: if (open(&f) != 0) return 0;
   0A17 21 00 00           3284 	ld	hl,#0x0000
   0A1A 39                 3285 	add	hl,sp
   0A1B E5                 3286 	push	hl
   0A1C CDr00s00           3287 	call	_open
   0A1F F1                 3288 	pop	af
   0A20 AF                 3289 	xor	a,a
   0A21 B5                 3290 	or	a,l
   0A22 28 04              3291 	jr	Z,00104$
   0A24 2E 00              3292 	ld	l,#0x00
   0A26 18 40              3293 	jr	00109$
   0A28                    3294 00104$:
                           3295 ;demo.c:333: if (block_set_data_ptr(scratch) != 0) return 0;
   0A28 21r50s15           3296 	ld	hl,#_scratch
   0A2B E5                 3297 	push	hl
   0A2C CDr00s00           3298 	call	_block_set_data_ptr
   0A2F F1                 3299 	pop	af
   0A30 AF                 3300 	xor	a,a
   0A31 B5                 3301 	or	a,l
   0A32 28 04              3302 	jr	Z,00106$
   0A34 2E 00              3303 	ld	l,#0x00
   0A36 18 30              3304 	jr	00109$
   0A38                    3305 00106$:
                           3306 ;demo.c:334: if (block_read(&f) != 0) return 0;
   0A38 21 00 00           3307 	ld	hl,#0x0000
   0A3B 39                 3308 	add	hl,sp
   0A3C E5                 3309 	push	hl
   0A3D CDr00s00           3310 	call	_block_read
   0A40 F1                 3311 	pop	af
   0A41 AF                 3312 	xor	a,a
   0A42 B5                 3313 	or	a,l
   0A43 28 04              3314 	jr	Z,00108$
   0A45 2E 00              3315 	ld	l,#0x00
   0A47 18 1F              3316 	jr	00109$
   0A49                    3317 00108$:
                           3318 ;demo.c:336: memcpy(cur_palette, scratch+7, ss);
   0A49 DD 4E 06           3319 	ld	c,6 (ix)
   0A4C 06 00              3320 	ld	b,#0x00
   0A4E 11r57s15           3321 	ld	de,#_scratch + 7
   0A51 C5                 3322 	push	bc
   0A52 D5                 3323 	push	de
   0A53 21rD0s15           3324 	ld	hl,#_cur_palette
   0A56 E5                 3325 	push	hl
   0A57 CDr00s00           3326 	call	_memcpy
   0A5A F1                 3327 	pop	af
   0A5B F1                 3328 	pop	af
   0A5C F1                 3329 	pop	af
                           3330 ;demo.c:338: close(&f);
   0A5D 21 00 00           3331 	ld	hl,#0x0000
   0A60 39                 3332 	add	hl,sp
   0A61 E5                 3333 	push	hl
   0A62 CDr00s00           3334 	call	_close
   0A65 F1                 3335 	pop	af
                           3336 ;demo.c:339: return 1;
   0A66 2E 01              3337 	ld	l,#0x01
   0A68                    3338 00109$:
   0A68 DD F9              3339 	ld	sp,ix
   0A6A DD E1              3340 	pop	ix
   0A6C C9                 3341 	ret
   0A6D                    3342 _pal_load_end::
   0A6D                    3343 __str_2:
   0A6D 6C 6F 61 64 69 6E  3344 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0A7E 00                 3345 	.db 0x00
   0A7F                    3346 __str_3:
   0A7F 0D                 3347 	.db 0x0D
   0A80 0A                 3348 	.db 0x0A
   0A81 00                 3349 	.db 0x00
                           3350 ;demo.c:343: void pause() {
                           3351 ;	---------------------------------
                           3352 ; Function pause
                           3353 ; ---------------------------------
   0A82                    3354 _pause_start::
   0A82                    3355 _pause:
                           3356 ;demo.c:344: uint8_t i,j,k = 0;
                           3357 ;demo.c:345: for (i = 0; i < 255; i++) {	
   0A82 01 00 00           3358 	ld	bc,#0x0000
   0A85                    3359 00104$:
   0A85 78                 3360 	ld	a,b
   0A86 D6 FF              3361 	sub	a,#0xFF
   0A88 D0                 3362 	ret	NC
                           3363 ;demo.c:346: for (j = 0; j < 255; j++) {
   0A89 59                 3364 	ld	e,c
   0A8A 16 FF              3365 	ld	d,#0xFF
   0A8C                    3366 00103$:
                           3367 ;demo.c:347: k++;
   0A8C 1C                 3368 	inc	e
   0A8D 15                 3369 	dec	d
                           3370 ;demo.c:346: for (j = 0; j < 255; j++) {
   0A8E AF                 3371 	xor	a,a
   0A8F B2                 3372 	or	a,d
   0A90 20 FA              3373 	jr	NZ,00103$
                           3374 ;demo.c:345: for (i = 0; i < 255; i++) {	
   0A92 4B                 3375 	ld	c,e
   0A93 04                 3376 	inc	b
   0A94 18 EF              3377 	jr	00104$
   0A96                    3378 _pause_end::
                           3379 ;demo.c:353: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3380 ;	---------------------------------
                           3381 ; Function raw_load
                           3382 ; ---------------------------------
   0A96                    3383 _raw_load_start::
   0A96                    3384 _raw_load:
   0A96 DD E5              3385 	push	ix
   0A98 DD 21 00 00        3386 	ld	ix,#0
   0A9C DD 39              3387 	add	ix,sp
   0A9E 21 D2 FF           3388 	ld	hl,#-46
   0AA1 39                 3389 	add	hl,sp
   0AA2 F9                 3390 	ld	sp,hl
                           3391 ;demo.c:358: if(debugprint == 1) {
   0AA3 DD 7E 0A           3392 	ld	a,10 (ix)
   0AA6 D6 01              3393 	sub	a,#0x01
   0AA8 20 06              3394 	jr	NZ,00120$
   0AAA DD 7E 0B           3395 	ld	a,11 (ix)
   0AAD B7                 3396 	or	a,a
   0AAE 28 02              3397 	jr	Z,00121$
   0AB0                    3398 00120$:
   0AB0 18 1B              3399 	jr	00102$
   0AB2                    3400 00121$:
                           3401 ;demo.c:359: puts("loading rawfile: ");
   0AB2 21r84s0B           3402 	ld	hl,#__str_4
   0AB5 E5                 3403 	push	hl
   0AB6 CDr00s00           3404 	call	_puts
   0AB9 F1                 3405 	pop	af
                           3406 ;demo.c:360: puts(file_name);
   0ABA DD 6E 04           3407 	ld	l,4 (ix)
   0ABD DD 66 05           3408 	ld	h,5 (ix)
   0AC0 E5                 3409 	push	hl
   0AC1 CDr00s00           3410 	call	_puts
   0AC4 F1                 3411 	pop	af
                           3412 ;demo.c:361: puts("\r\n");
   0AC5 21r96s0B           3413 	ld	hl,#__str_5
   0AC8 E5                 3414 	push	hl
   0AC9 CDr00s00           3415 	call	_puts
   0ACC F1                 3416 	pop	af
   0ACD                    3417 00102$:
                           3418 ;demo.c:364: memset((uint8_t *) &f, 0, sizeof(fcb));
   0ACD 21 00 00           3419 	ld	hl,#0x0000
   0AD0 39                 3420 	add	hl,sp
   0AD1 4D                 3421 	ld	c,l
   0AD2 44                 3422 	ld	b,h
   0AD3 21 2E 00           3423 	ld	hl,#0x002E
   0AD6 E5                 3424 	push	hl
   0AD7 3E 00              3425 	ld	a,#0x00
   0AD9 F5                 3426 	push	af
   0ADA 33                 3427 	inc	sp
   0ADB C5                 3428 	push	bc
   0ADC CDr00s00           3429 	call	_memset
   0ADF F1                 3430 	pop	af
   0AE0 F1                 3431 	pop	af
   0AE1 33                 3432 	inc	sp
                           3433 ;demo.c:365: scratch_clear();
   0AE2 CDr90s09           3434 	call	_scratch_clear
                           3435 ;demo.c:367: f.record_size = 128;
   0AE5 21 00 00           3436 	ld	hl,#0x0000
   0AE8 39                 3437 	add	hl,sp
   0AE9 4D                 3438 	ld	c,l
   0AEA 44                 3439 	ld	b,h
   0AEB 21 0F 00           3440 	ld	hl,#0x000F
   0AEE 09                 3441 	add	hl,bc
   0AEF EB                 3442 	ex	de,hl
   0AF0 3E 80              3443 	ld	a,#0x80
   0AF2 12                 3444 	ld	(de),a
                           3445 ;demo.c:368: f.drive = 0;
   0AF3 3E 00              3446 	ld	a,#0x00
   0AF5 02                 3447 	ld	(bc),a
                           3448 ;demo.c:370: memcpy(f.name, file_name, 11);
   0AF6 DD 5E 04           3449 	ld	e,4 (ix)
   0AF9 DD 56 05           3450 	ld	d,5 (ix)
   0AFC 03                 3451 	inc	bc
   0AFD 21 0B 00           3452 	ld	hl,#0x000B
   0B00 E5                 3453 	push	hl
   0B01 D5                 3454 	push	de
   0B02 C5                 3455 	push	bc
   0B03 CDr00s00           3456 	call	_memcpy
   0B06 F1                 3457 	pop	af
   0B07 F1                 3458 	pop	af
   0B08 F1                 3459 	pop	af
                           3460 ;demo.c:372: if (open(&f) != 0) return 0;
   0B09 21 00 00           3461 	ld	hl,#0x0000
   0B0C 39                 3462 	add	hl,sp
   0B0D E5                 3463 	push	hl
   0B0E CDr00s00           3464 	call	_open
   0B11 F1                 3465 	pop	af
   0B12 AF                 3466 	xor	a,a
   0B13 B5                 3467 	or	a,l
   0B14 28 05              3468 	jr	Z,00119$
   0B16 2E 00              3469 	ld	l,#0x00
   0B18 C3r7Fs0B           3470 	jp	00112$
                           3471 ;demo.c:374: while(total < size) {
   0B1B                    3472 00119$:
   0B1B 01 00 00           3473 	ld	bc,#0x0000
   0B1E                    3474 00109$:
   0B1E 79                 3475 	ld	a,c
   0B1F DD 96 06           3476 	sub	a,6 (ix)
   0B22 78                 3477 	ld	a,b
   0B23 DD 9E 07           3478 	sbc	a,7 (ix)
   0B26 F2r74s0B           3479 	jp	P,00111$
                           3480 ;demo.c:375: if (block_set_data_ptr(scratch) != 0) return 0;
   0B29 C5                 3481 	push	bc
   0B2A 21r50s15           3482 	ld	hl,#_scratch
   0B2D E5                 3483 	push	hl
   0B2E CDr00s00           3484 	call	_block_set_data_ptr
   0B31 F1                 3485 	pop	af
   0B32 5D                 3486 	ld	e,l
   0B33 C1                 3487 	pop	bc
   0B34 AF                 3488 	xor	a,a
   0B35 B3                 3489 	or	a,e
   0B36 28 04              3490 	jr	Z,00106$
   0B38 2E 00              3491 	ld	l,#0x00
   0B3A 18 43              3492 	jr	00112$
   0B3C                    3493 00106$:
                           3494 ;demo.c:376: if (block_read(&f) != 0) return 0;
   0B3C 21 00 00           3495 	ld	hl,#0x0000
   0B3F 39                 3496 	add	hl,sp
   0B40 C5                 3497 	push	bc
   0B41 E5                 3498 	push	hl
   0B42 CDr00s00           3499 	call	_block_read
   0B45 F1                 3500 	pop	af
   0B46 5D                 3501 	ld	e,l
   0B47 C1                 3502 	pop	bc
   0B48 AF                 3503 	xor	a,a
   0B49 B3                 3504 	or	a,e
   0B4A 28 04              3505 	jr	Z,00108$
   0B4C 2E 00              3506 	ld	l,#0x00
   0B4E 18 2F              3507 	jr	00112$
   0B50                    3508 00108$:
                           3509 ;demo.c:378: memcpy(buffer+total,scratch,incr);
   0B50 DD 7E 08           3510 	ld	a,8 (ix)
   0B53 81                 3511 	add	a,c
   0B54 5F                 3512 	ld	e,a
   0B55 DD 7E 09           3513 	ld	a,9 (ix)
   0B58 88                 3514 	adc	a,b
   0B59 57                 3515 	ld	d,a
   0B5A C5                 3516 	push	bc
   0B5B 21 80 00           3517 	ld	hl,#0x0080
   0B5E E5                 3518 	push	hl
   0B5F 21r50s15           3519 	ld	hl,#_scratch
   0B62 E5                 3520 	push	hl
   0B63 D5                 3521 	push	de
   0B64 CDr00s00           3522 	call	_memcpy
   0B67 F1                 3523 	pop	af
   0B68 F1                 3524 	pop	af
   0B69 F1                 3525 	pop	af
   0B6A C1                 3526 	pop	bc
                           3527 ;demo.c:380: total+=incr;
   0B6B 21 80 00           3528 	ld	hl,#0x0080
   0B6E 09                 3529 	add	hl,bc
   0B6F 4D                 3530 	ld	c,l
   0B70 44                 3531 	ld	b,h
   0B71 C3r1Es0B           3532 	jp	00109$
   0B74                    3533 00111$:
                           3534 ;demo.c:383: close(&f);
   0B74 21 00 00           3535 	ld	hl,#0x0000
   0B77 39                 3536 	add	hl,sp
   0B78 E5                 3537 	push	hl
   0B79 CDr00s00           3538 	call	_close
   0B7C F1                 3539 	pop	af
                           3540 ;demo.c:385: return 1;
   0B7D 2E 01              3541 	ld	l,#0x01
   0B7F                    3542 00112$:
   0B7F DD F9              3543 	ld	sp,ix
   0B81 DD E1              3544 	pop	ix
   0B83 C9                 3545 	ret
   0B84                    3546 _raw_load_end::
   0B84                    3547 __str_4:
   0B84 6C 6F 61 64 69 6E  3548 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0B95 00                 3549 	.db 0x00
   0B96                    3550 __str_5:
   0B96 0D                 3551 	.db 0x0D
   0B97 0A                 3552 	.db 0x0A
   0B98 00                 3553 	.db 0x00
                           3554 ;demo.c:388: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3555 ;	---------------------------------
                           3556 ; Function pck_load
                           3557 ; ---------------------------------
   0B99                    3558 _pck_load_start::
   0B99                    3559 _pck_load:
   0B99 DD E5              3560 	push	ix
   0B9B DD 21 00 00        3561 	ld	ix,#0
   0B9F DD 39              3562 	add	ix,sp
                           3563 ;demo.c:389: if(debugprint == 1) {
   0BA1 DD 7E 0C           3564 	ld	a,12 (ix)
   0BA4 D6 01              3565 	sub	a,#0x01
   0BA6 20 06              3566 	jr	NZ,00106$
   0BA8 DD 7E 0D           3567 	ld	a,13 (ix)
   0BAB B7                 3568 	or	a,a
   0BAC 28 02              3569 	jr	Z,00107$
   0BAE                    3570 00106$:
   0BAE 18 1B              3571 	jr	00102$
   0BB0                    3572 00107$:
                           3573 ;demo.c:390: puts("loading pckfile: ");
   0BB0 21r12s0C           3574 	ld	hl,#__str_6
   0BB3 E5                 3575 	push	hl
   0BB4 CDr00s00           3576 	call	_puts
   0BB7 F1                 3577 	pop	af
                           3578 ;demo.c:391: puts(file_name);
   0BB8 DD 6E 04           3579 	ld	l,4 (ix)
   0BBB DD 66 05           3580 	ld	h,5 (ix)
   0BBE E5                 3581 	push	hl
   0BBF CDr00s00           3582 	call	_puts
   0BC2 F1                 3583 	pop	af
                           3584 ;demo.c:392: puts("\r\n");
   0BC3 21r24s0C           3585 	ld	hl,#__str_7
   0BC6 E5                 3586 	push	hl
   0BC7 CDr00s00           3587 	call	_puts
   0BCA F1                 3588 	pop	af
   0BCB                    3589 00102$:
                           3590 ;demo.c:394: memset((uint8_t *) &packbuffer, 0, size);
   0BCB DD 4E 06           3591 	ld	c,6 (ix)
   0BCE DD 46 07           3592 	ld	b,7 (ix)
   0BD1 C5                 3593 	push	bc
   0BD2 C5                 3594 	push	bc
   0BD3 3E 00              3595 	ld	a,#0x00
   0BD5 F5                 3596 	push	af
   0BD6 33                 3597 	inc	sp
   0BD7 21rC8s01           3598 	ld	hl,#_packbuffer
   0BDA E5                 3599 	push	hl
   0BDB CDr00s00           3600 	call	_memset
   0BDE F1                 3601 	pop	af
   0BDF F1                 3602 	pop	af
   0BE0 33                 3603 	inc	sp
   0BE1 C1                 3604 	pop	bc
                           3605 ;demo.c:395: raw_load(file_name, size, packbuffer,0);
   0BE2 21 00 00           3606 	ld	hl,#0x0000
   0BE5 E5                 3607 	push	hl
   0BE6 21rC8s01           3608 	ld	hl,#_packbuffer
   0BE9 E5                 3609 	push	hl
   0BEA C5                 3610 	push	bc
   0BEB DD 6E 04           3611 	ld	l,4 (ix)
   0BEE DD 66 05           3612 	ld	h,5 (ix)
   0BF1 E5                 3613 	push	hl
   0BF2 CDr96s0A           3614 	call	_raw_load
   0BF5 F1                 3615 	pop	af
   0BF6 F1                 3616 	pop	af
   0BF7 F1                 3617 	pop	af
   0BF8 F1                 3618 	pop	af
                           3619 ;demo.c:396: bitbuster(packbuffer,address,vram_offset);
   0BF9 DD 7E 0A           3620 	ld	a,10 (ix)
   0BFC F5                 3621 	push	af
   0BFD 33                 3622 	inc	sp
   0BFE DD 6E 08           3623 	ld	l,8 (ix)
   0C01 DD 66 09           3624 	ld	h,9 (ix)
   0C04 E5                 3625 	push	hl
   0C05 21rC8s01           3626 	ld	hl,#_packbuffer
   0C08 E5                 3627 	push	hl
   0C09 CDr00s00           3628 	call	_bitbuster
   0C0C F1                 3629 	pop	af
   0C0D F1                 3630 	pop	af
   0C0E 33                 3631 	inc	sp
   0C0F DD E1              3632 	pop	ix
   0C11 C9                 3633 	ret
   0C12                    3634 _pck_load_end::
   0C12                    3635 __str_6:
   0C12 6C 6F 61 64 69 6E  3636 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0C23 00                 3637 	.db 0x00
   0C24                    3638 __str_7:
   0C24 0D                 3639 	.db 0x0D
   0C25 0A                 3640 	.db 0x0A
   0C26 00                 3641 	.db 0x00
                           3642 ;demo.c:399: void fadein() {
                           3643 ;	---------------------------------
                           3644 ; Function fadein
                           3645 ; ---------------------------------
   0C27                    3646 _fadein_start::
   0C27                    3647 _fadein:
   0C27 DD E5              3648 	push	ix
   0C29 DD 21 00 00        3649 	ld	ix,#0
   0C2D DD 39              3650 	add	ix,sp
   0C2F F5                 3651 	push	af
                           3652 ;demo.c:402: if (tick < 8) return;
   0C30 3ArB2s16           3653 	ld	a,(#_tick+0)
   0C33 D6 08              3654 	sub	a,#0x08
   0C35 3ArB3s16           3655 	ld	a,(#_tick+1)
   0C38 DE 00              3656 	sbc	a,#0x00
   0C3A F2r40s0C           3657 	jp	P,00102$
   0C3D C3rEEs0C           3658 	jp	00113$
   0C40                    3659 00102$:
                           3660 ;demo.c:404: tick = 0;
   0C40 21rB2s16           3661 	ld	hl,#_tick + 0
   0C43 36 00              3662 	ld	(hl), #0x00
   0C45 21rB3s16           3663 	ld	hl,#_tick + 1
   0C48 36 00              3664 	ld	(hl), #0x00
                           3665 ;demo.c:406: for(i = 0; i < 32; i+=2) {
   0C4A 0E 00              3666 	ld	c,#0x00
   0C4C                    3667 00109$:
   0C4C 79                 3668 	ld	a,c
   0C4D D6 20              3669 	sub	a,#0x20
   0C4F D2rE6s0C           3670 	jp	NC,00112$
                           3671 ;demo.c:407: uint8_t r = scratch[i] >> 4;
   0C52 3Er50              3672 	ld	a,#<_scratch
   0C54 81                 3673 	add	a,c
   0C55 5F                 3674 	ld	e,a
   0C56 3Es15              3675 	ld	a,#>_scratch
   0C58 CE 00              3676 	adc	a,#0x00
   0C5A 57                 3677 	ld	d,a
   0C5B 1A                 3678 	ld	a,(de)
   0C5C 47                 3679 	ld	b,a
   0C5D 58                 3680 	ld	e,b
   0C5E CB 3B              3681 	srl	e
   0C60 CB 3B              3682 	srl	e
   0C62 CB 3B              3683 	srl	e
   0C64 CB 3B              3684 	srl	e
                           3685 ;demo.c:408: uint8_t b = scratch[i] & 0xf;
   0C66 78                 3686 	ld	a,b
   0C67 E6 0F              3687 	and	a,#0x0F
   0C69 DD 77 FF           3688 	ld	-1 (ix),a
                           3689 ;demo.c:409: uint8_t g = scratch[i+1];
   0C6C 51                 3690 	ld	d,c
   0C6D 14                 3691 	inc	d
   0C6E 3Er50              3692 	ld	a,#<_scratch
   0C70 82                 3693 	add	a,d
   0C71 6F                 3694 	ld	l,a
   0C72 3Es15              3695 	ld	a,#>_scratch
   0C74 CE 00              3696 	adc	a,#0x00
   0C76 67                 3697 	ld	h,a
   0C77 56                 3698 	ld	d,(hl)
   0C78 DD 72 FE           3699 	ld	-2 (ix),d
                           3700 ;demo.c:411: if (r < (cur_palette[i] >> 4)) r++;
   0C7B 3ErD0              3701 	ld	a,#<_cur_palette
   0C7D 81                 3702 	add	a,c
   0C7E 6F                 3703 	ld	l,a
   0C7F 3Es15              3704 	ld	a,#>_cur_palette
   0C81 CE 00              3705 	adc	a,#0x00
   0C83 67                 3706 	ld	h,a
   0C84 56                 3707 	ld	d,(hl)
   0C85 CB 3A              3708 	srl	d
   0C87 CB 3A              3709 	srl	d
   0C89 CB 3A              3710 	srl	d
   0C8B CB 3A              3711 	srl	d
   0C8D 7B                 3712 	ld	a,e
   0C8E 92                 3713 	sub	a,d
   0C8F 30 01              3714 	jr	NC,00104$
   0C91 1C                 3715 	inc	e
   0C92                    3716 00104$:
                           3717 ;demo.c:412: if (b < (cur_palette[i] & 0xf)) b++;
   0C92 3ErD0              3718 	ld	a,#<_cur_palette
   0C94 81                 3719 	add	a,c
   0C95 6F                 3720 	ld	l,a
   0C96 3Es15              3721 	ld	a,#>_cur_palette
   0C98 CE 00              3722 	adc	a,#0x00
   0C9A 67                 3723 	ld	h,a
   0C9B 7E                 3724 	ld	a,(hl)
   0C9C E6 0F              3725 	and	a,#0x0F
   0C9E 47                 3726 	ld	b,a
   0C9F DD 7E FF           3727 	ld	a,-1 (ix)
   0CA2 90                 3728 	sub	a,b
   0CA3 30 03              3729 	jr	NC,00106$
   0CA5 DD 34 FF           3730 	inc	-1 (ix)
   0CA8                    3731 00106$:
                           3732 ;demo.c:414: scratch[i] = (r << 4) | b;
   0CA8 3Er50              3733 	ld	a,#<_scratch
   0CAA 81                 3734 	add	a,c
   0CAB 47                 3735 	ld	b,a
   0CAC 3Es15              3736 	ld	a,#>_scratch
   0CAE CE 00              3737 	adc	a,#0x00
   0CB0 57                 3738 	ld	d,a
   0CB1 7B                 3739 	ld	a,e
   0CB2 07                 3740 	rlca
   0CB3 07                 3741 	rlca
   0CB4 07                 3742 	rlca
   0CB5 07                 3743 	rlca
   0CB6 E6 F0              3744 	and	a,#0xF0
   0CB8 DD B6 FF           3745 	or	a,-1 (ix)
   0CBB 68                 3746 	ld	l,b
   0CBC 62                 3747 	ld	h,d
   0CBD 77                 3748 	ld	(hl),a
                           3749 ;demo.c:415: if (g < cur_palette[i+1]) scratch[i+1]++;
   0CBE 41                 3750 	ld	b,c
   0CBF 04                 3751 	inc	b
   0CC0 3ErD0              3752 	ld	a,#<_cur_palette
   0CC2 80                 3753 	add	a,b
   0CC3 5F                 3754 	ld	e,a
   0CC4 3Es15              3755 	ld	a,#>_cur_palette
   0CC6 CE 00              3756 	adc	a,#0x00
   0CC8 57                 3757 	ld	d,a
   0CC9 1A                 3758 	ld	a,(de)
   0CCA 5F                 3759 	ld	e,a
   0CCB DD 7E FE           3760 	ld	a,-2 (ix)
   0CCE 93                 3761 	sub	a,e
   0CCF 30 10              3762 	jr	NC,00111$
   0CD1 3Er50              3763 	ld	a,#<_scratch
   0CD3 80                 3764 	add	a,b
   0CD4 47                 3765 	ld	b,a
   0CD5 3Es15              3766 	ld	a,#>_scratch
   0CD7 CE 00              3767 	adc	a,#0x00
   0CD9 5F                 3768 	ld	e,a
   0CDA 68                 3769 	ld	l,b
   0CDB 67                 3770 	ld	h,a
   0CDC 7E                 3771 	ld	a,(hl)
   0CDD 3C                 3772 	inc	a
   0CDE 68                 3773 	ld	l,b
   0CDF 63                 3774 	ld	h,e
   0CE0 77                 3775 	ld	(hl),a
   0CE1                    3776 00111$:
                           3777 ;demo.c:406: for(i = 0; i < 32; i+=2) {
   0CE1 0C                 3778 	inc	c
   0CE2 0C                 3779 	inc	c
   0CE3 C3r4Cs0C           3780 	jp	00109$
   0CE6                    3781 00112$:
                           3782 ;demo.c:419: vdp_load_palette(scratch);
   0CE6 21r50s15           3783 	ld	hl,#_scratch
   0CE9 E5                 3784 	push	hl
   0CEA CDr00s00           3785 	call	_vdp_load_palette
   0CED F1                 3786 	pop	af
   0CEE                    3787 00113$:
   0CEE DD F9              3788 	ld	sp,ix
   0CF0 DD E1              3789 	pop	ix
   0CF2 C9                 3790 	ret
   0CF3                    3791 _fadein_end::
                           3792 ;demo.c:431: void do_ymmm() {
                           3793 ;	---------------------------------
                           3794 ; Function do_ymmm
                           3795 ; ---------------------------------
   0CF3                    3796 _do_ymmm_start::
   0CF3                    3797 _do_ymmm:
   0CF3 DD E5              3798 	push	ix
   0CF5 DD 21 00 00        3799 	ld	ix,#0
   0CF9 DD 39              3800 	add	ix,sp
   0CFB F5                 3801 	push	af
                           3802 ;demo.c:435: if (tick > 32) { tick = 0; flipper++;}
   0CFC 3E 20              3803 	ld	a,#0x20
   0CFE FD 21rB2s16        3804 	ld	iy,#_tick
   0D02 FD 96 00           3805 	sub	a,0 (iy)
   0D05 3E 00              3806 	ld	a,#0x00
   0D07 FD 21rB2s16        3807 	ld	iy,#_tick
   0D0B FD 9E 01           3808 	sbc	a,1 (iy)
   0D0E F2r2Bs0D           3809 	jp	P,00102$
   0D11 21rB2s16           3810 	ld	hl,#_tick + 0
   0D14 36 00              3811 	ld	(hl), #0x00
   0D16 21rB3s16           3812 	ld	hl,#_tick + 1
   0D19 36 00              3813 	ld	(hl), #0x00
   0D1B FD 21r15s17        3814 	ld	iy,#_flipper
   0D1F FD 34 00           3815 	inc	0 (iy)
   0D22 20 07              3816 	jr	NZ,00115$
   0D24 FD 21r15s17        3817 	ld	iy,#_flipper
   0D28 FD 34 01           3818 	inc	1 (iy)
   0D2B                    3819 00115$:
   0D2B                    3820 00102$:
                           3821 ;demo.c:436: if (flipper > 10) { flipper = 0;}
   0D2B 3E 0A              3822 	ld	a,#0x0A
   0D2D FD 21r15s17        3823 	ld	iy,#_flipper
   0D31 FD 96 00           3824 	sub	a,0 (iy)
   0D34 3E 00              3825 	ld	a,#0x00
   0D36 FD 21r15s17        3826 	ld	iy,#_flipper
   0D3A FD 9E 01           3827 	sbc	a,1 (iy)
   0D3D F2r4As0D           3828 	jp	P,00104$
   0D40 21r15s17           3829 	ld	hl,#_flipper + 0
   0D43 36 00              3830 	ld	(hl), #0x00
   0D45 21r16s17           3831 	ld	hl,#_flipper + 1
   0D48 36 00              3832 	ld	(hl), #0x00
   0D4A                    3833 00104$:
                           3834 ;demo.c:438: ymmmf++;
   0D4A FD 21r17s17        3835 	ld	iy,#_ymmmf
   0D4E FD 34 00           3836 	inc	0 (iy)
   0D51 20 07              3837 	jr	NZ,00116$
   0D53 FD 21r17s17        3838 	ld	iy,#_ymmmf
   0D57 FD 34 01           3839 	inc	1 (iy)
   0D5A                    3840 00116$:
                           3841 ;demo.c:439: for (yofff = 0; yofff<212-step;yofff+=step) {
   0D5A 21r13s17           3842 	ld	hl,#_yofff + 0
   0D5D 36 00              3843 	ld	(hl), #0x00
   0D5F                    3844 00105$:
   0D5F 21r13s17           3845 	ld	hl,#_yofff + 0
   0D62 4E                 3846 	ld	c,(hl)
   0D63 06 00              3847 	ld	b,#0x00
   0D65 79                 3848 	ld	a,c
   0D66 D6 D2              3849 	sub	a,#0xD2
   0D68 78                 3850 	ld	a,b
   0D69 DE 00              3851 	sbc	a,#0x00
   0D6B F2rDFs0D           3852 	jp	P,00109$
                           3853 ;demo.c:440: xo = (sintabx[(yofff+ymmmf) & 255]);
   0D6E 21r17s17           3854 	ld	hl,#_ymmmf
   0D71 79                 3855 	ld	a,c
   0D72 86                 3856 	add	a,(hl)
   0D73 5F                 3857 	ld	e,a
   0D74 78                 3858 	ld	a,b
   0D75 23                 3859 	inc	hl
   0D76 8E                 3860 	adc	a,(hl)
   0D77 16 00              3861 	ld	d,#0x00
   0D79 21r2Cs00           3862 	ld	hl,#_sintabx
   0D7C 19                 3863 	add	hl,de
   0D7D 7E                 3864 	ld	a,(hl)
   0D7E DD 77 FE           3865 	ld	-2 (ix),a
   0D81 DD 36 FF 00        3866 	ld	-1 (ix),#0x00
                           3867 ;demo.c:443: cmd.source_x = 0;
   0D85 21rB4s16           3868 	ld	hl,#_cmd
   0D88 36 00              3869 	ld	(hl),#0x00
   0D8A 23                 3870 	inc	hl
   0D8B 36 00              3871 	ld	(hl),#0x00
                           3872 ;demo.c:444: cmd.source_y = 0+yofff;
   0D8D 11rB6s16           3873 	ld	de,#_cmd + 2
   0D90 EB                 3874 	ex	de,hl
   0D91 71                 3875 	ld	(hl),c
   0D92 23                 3876 	inc	hl
   0D93 70                 3877 	ld	(hl),b
                           3878 ;demo.c:445: cmd.dest_x = xo;
   0D94 11rB8s16           3879 	ld	de,#_cmd + 4
   0D97 EB                 3880 	ex	de,hl
   0D98 DD 7E FE           3881 	ld	a,-2 (ix)
   0D9B 77                 3882 	ld	(hl),a
   0D9C 23                 3883 	inc	hl
   0D9D DD 7E FF           3884 	ld	a,-1 (ix)
   0DA0 77                 3885 	ld	(hl),a
                           3886 ;demo.c:446: cmd.dest_y = 3+yofff;
   0DA1 11rBAs16           3887 	ld	de,#_cmd + 6
   0DA4 03                 3888 	inc	bc
   0DA5 03                 3889 	inc	bc
   0DA6 03                 3890 	inc	bc
   0DA7 6B                 3891 	ld	l,e
   0DA8 62                 3892 	ld	h,d
   0DA9 71                 3893 	ld	(hl),c
   0DAA 23                 3894 	inc	hl
   0DAB 70                 3895 	ld	(hl),b
                           3896 ;demo.c:447: cmd.size_x = 256;
   0DAC 21rBCs16           3897 	ld	hl, #_cmd + 8
   0DAF 36 00              3898 	ld	(hl),#0x00
   0DB1 23                 3899 	inc	hl
   0DB2 36 01              3900 	ld	(hl),#0x01
                           3901 ;demo.c:448: cmd.size_y = 1;
   0DB4 21rBEs16           3902 	ld	hl, #_cmd + 10
   0DB7 36 01              3903 	ld	(hl),#0x01
   0DB9 23                 3904 	inc	hl
   0DBA 36 00              3905 	ld	(hl),#0x00
                           3906 ;demo.c:449: cmd.data = 0;
                           3907 ;demo.c:450: cmd.argument = 0;
   0DBC 3E 00              3908 	ld	a,#0x00
   0DBE 32rC0s16           3909 	ld	(#_cmd + 12),a
   0DC1 32rC1s16           3910 	ld	(#_cmd + 13),a
                           3911 ;demo.c:451: cmd.command = 0xD0;
   0DC4 3E D0              3912 	ld	a,#0xD0
   0DC6 32rC2s16           3913 	ld	(#_cmd + 14),a
                           3914 ;demo.c:454: vdp_copier(&cmd);
   0DC9 21rB4s16           3915 	ld	hl,#_cmd
   0DCC E5                 3916 	push	hl
   0DCD CDr00s00           3917 	call	_vdp_copier
   0DD0 F1                 3918 	pop	af
                           3919 ;demo.c:439: for (yofff = 0; yofff<212-step;yofff+=step) {
   0DD1 21r13s17           3920 	ld	hl,#_yofff + 0
   0DD4 4E                 3921 	ld	c,(hl)
   0DD5 21r13s17           3922 	ld	hl,#_yofff
   0DD8 79                 3923 	ld	a,c
   0DD9 C6 02              3924 	add	a,#0x02
   0DDB 77                 3925 	ld	(hl),a
   0DDC C3r5Fs0D           3926 	jp	00105$
   0DDF                    3927 00109$:
   0DDF DD F9              3928 	ld	sp,ix
   0DE1 DD E1              3929 	pop	ix
   0DE3 C9                 3930 	ret
   0DE4                    3931 _do_ymmm_end::
                           3932 ;demo.c:471: void do_blocks() {
                           3933 ;	---------------------------------
                           3934 ; Function do_blocks
                           3935 ; ---------------------------------
   0DE4                    3936 _do_blocks_start::
   0DE4                    3937 _do_blocks:
   0DE4 DD E5              3938 	push	ix
   0DE6 DD 21 00 00        3939 	ld	ix,#0
   0DEA DD 39              3940 	add	ix,sp
   0DEC 21 FA FF           3941 	ld	hl,#-6
   0DEF 39                 3942 	add	hl,sp
   0DF0 F9                 3943 	ld	sp,hl
                           3944 ;demo.c:473: int ys = 0;
   0DF1 DD 36 FC 00        3945 	ld	-4 (ix),#0x00
   0DF5 DD 36 FD 00        3946 	ld	-3 (ix),#0x00
                           3947 ;demo.c:474: int ye = 0;
   0DF9 DD 36 FA 00        3948 	ld	-6 (ix),#0x00
   0DFD DD 36 FB 00        3949 	ld	-5 (ix),#0x00
                           3950 ;demo.c:476: vdp_register(VDP_VOFFSET,0);
   0E01 21 17 00           3951 	ld	hl,#0x0017
   0E04 E5                 3952 	push	hl
   0E05 CDr00s00           3953 	call	_vdp_register
   0E08 F1                 3954 	pop	af
                           3955 ;demo.c:478: if (block_init == 0) {
   0E09 AF                 3956 	xor	a,a
   0E0A FD 21r19s17        3957 	ld	iy,#_block_init
   0E0E FD B6 00           3958 	or	a,0 (iy)
   0E11 C2r79s0E           3959 	jp	NZ,00108$
                           3960 ;demo.c:480: vdp_set_screen5();
   0E14 CDr00s00           3961 	call	_vdp_set_screen5
                           3962 ;demo.c:482: vdp_register(2, 0x5F);
   0E17 21 02 5F           3963 	ld	hl,#0x5F02
   0E1A E5                 3964 	push	hl
   0E1B CDr00s00           3965 	call	_vdp_register
   0E1E F1                 3966 	pop	af
                           3967 ;demo.c:484: for(i=0;i<16;i++) btab[i] = i*16;
   0E1F DD 36 FE 00        3968 	ld	-2 (ix),#0x00
   0E23 DD 36 FF 00        3969 	ld	-1 (ix),#0x00
   0E27                    3970 00110$:
   0E27 DD 7E FE           3971 	ld	a,-2 (ix)
   0E2A D6 10              3972 	sub	a,#0x10
   0E2C DD 7E FF           3973 	ld	a,-1 (ix)
   0E2F DE 00              3974 	sbc	a,#0x00
   0E31 F2r69s0E           3975 	jp	P,00113$
   0E34 DD 4E FE           3976 	ld	c,-2 (ix)
   0E37 DD 46 FF           3977 	ld	b,-1 (ix)
   0E3A CB 21              3978 	sla	c
   0E3C CB 10              3979 	rl	b
   0E3E 21r22s17           3980 	ld	hl,#_btab
   0E41 09                 3981 	add	hl,bc
   0E42 4D                 3982 	ld	c,l
   0E43 44                 3983 	ld	b,h
   0E44 DD 5E FE           3984 	ld	e,-2 (ix)
   0E47 DD 56 FF           3985 	ld	d,-1 (ix)
   0E4A CB 23              3986 	sla	e
   0E4C CB 12              3987 	rl	d
   0E4E CB 23              3988 	sla	e
   0E50 CB 12              3989 	rl	d
   0E52 CB 23              3990 	sla	e
   0E54 CB 12              3991 	rl	d
   0E56 CB 23              3992 	sla	e
   0E58 CB 12              3993 	rl	d
   0E5A 69                 3994 	ld	l,c
   0E5B 60                 3995 	ld	h,b
   0E5C 73                 3996 	ld	(hl),e
   0E5D 23                 3997 	inc	hl
   0E5E 72                 3998 	ld	(hl),d
   0E5F DD 34 FE           3999 	inc	-2 (ix)
   0E62 20 03              4000 	jr	NZ,00139$
   0E64 DD 34 FF           4001 	inc	-1 (ix)
   0E67                    4002 00139$:
   0E67 18 BE              4003 	jr	00110$
   0E69                    4004 00113$:
                           4005 ;demo.c:485: vdp_load_palette(block_palette);
   0E69 21r10s16           4006 	ld	hl,#_block_palette
   0E6C E5                 4007 	push	hl
   0E6D CDr00s00           4008 	call	_vdp_load_palette
   0E70 F1                 4009 	pop	af
                           4010 ;demo.c:487: block_init = 1;
   0E71 21r19s17           4011 	ld	hl,#_block_init + 0
   0E74 36 01              4012 	ld	(hl), #0x01
   0E76 C3r02s10           4013 	jp	00122$
   0E79                    4014 00108$:
                           4015 ;demo.c:491: if (flof == 0) { ys = 0; ye = 8; }
   0E79 3Ar42s17           4016 	ld	a,(#_flof+0)
   0E7C FD 21r42s17        4017 	ld	iy,#_flof
   0E80 FD B6 01           4018 	or	a,1 (iy)
   0E83 20 10              4019 	jr	NZ,00102$
   0E85 DD 36 FC 00        4020 	ld	-4 (ix),#0x00
   0E89 DD 36 FD 00        4021 	ld	-3 (ix),#0x00
   0E8D DD 36 FA 08        4022 	ld	-6 (ix),#0x08
   0E91 DD 36 FB 00        4023 	ld	-5 (ix),#0x00
   0E95                    4024 00102$:
                           4025 ;demo.c:492: if (flof == 1) { ys = 8; ye = 16; }
   0E95 3Ar42s17           4026 	ld	a,(#_flof+0)
   0E98 D6 01              4027 	sub	a,#0x01
   0E9A 20 06              4028 	jr	NZ,00140$
   0E9C 3Ar43s17           4029 	ld	a,(#_flof+1)
   0E9F B7                 4030 	or	a,a
   0EA0 28 02              4031 	jr	Z,00141$
   0EA2                    4032 00140$:
   0EA2 18 10              4033 	jr	00104$
   0EA4                    4034 00141$:
   0EA4 DD 36 FC 08        4035 	ld	-4 (ix),#0x08
   0EA8 DD 36 FD 00        4036 	ld	-3 (ix),#0x00
   0EAC DD 36 FA 10        4037 	ld	-6 (ix),#0x10
   0EB0 DD 36 FB 00        4038 	ld	-5 (ix),#0x00
   0EB4                    4039 00104$:
                           4040 ;demo.c:494: for(bty=3;bty<11;bty++) {
   0EB4 FD 21r20s17        4041 	ld	iy,#_bty
   0EB8 FD 36 00 03        4042 	ld	0 (iy),#0x03
   0EBC FD 21r20s17        4043 	ld	iy,#_bty
   0EC0 FD 36 01 00        4044 	ld	1 (iy),#0x00
   0EC4                    4045 00118$:
   0EC4 3Ar20s17           4046 	ld	a,(#_bty+0)
   0EC7 D6 0B              4047 	sub	a,#0x0B
   0EC9 3Ar21s17           4048 	ld	a,(#_bty+1)
   0ECC DE 00              4049 	sbc	a,#0x00
   0ECE F2rD9s0F           4050 	jp	P,00121$
                           4051 ;demo.c:495: for(btx=ys;btx<ye;btx++) {
   0ED1 DD 7E FC           4052 	ld	a,-4 (ix)
   0ED4 FD 21r1Es17        4053 	ld	iy,#_btx
   0ED8 FD 77 00           4054 	ld	0 (iy),a
   0EDB DD 7E FD           4055 	ld	a,-3 (ix)
   0EDE FD 21r1Es17        4056 	ld	iy,#_btx
   0EE2 FD 77 01           4057 	ld	1 (iy),a
   0EE5                    4058 00114$:
   0EE5 3Ar1Es17           4059 	ld	a,(#_btx+0)
   0EE8 DD 96 FA           4060 	sub	a,-6 (ix)
   0EEB 3Ar1Fs17           4061 	ld	a,(#_btx+1)
   0EEE DD 9E FB           4062 	sbc	a,-5 (ix)
   0EF1 F2rC6s0F           4063 	jp	P,00120$
                           4064 ;demo.c:496: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0EF4 3Ar00s00           4065 	ld	a,(#_PLY_PSGReg8+0)
   0EF7 FD 21r00s00        4066 	ld	iy,#_PLY_PSGReg9
   0EFB FD A6 00           4067 	and	a,0 (iy)
   0EFE 21r00s00           4068 	ld	hl,#_PLY_PSGReg10 + 0
   0F01 B6                 4069 	or	a,(hl)
   0F02 4F                 4070 	ld	c,a
   0F03 CB 39              4071 	srl	c
   0F05 21r1As17           4072 	ld	hl,#_bsx + 0
   0F08 71                 4073 	ld	(hl), c
   0F09 21r1Bs17           4074 	ld	hl,#_bsx + 1
   0F0C 36 00              4075 	ld	(hl), #0x00
                           4076 ;demo.c:497: bsy = PLY_PSGReg10;
   0F0E 3Ar00s00           4077 	ld	a,(#_PLY_PSGReg10+0)
   0F11 21r1Cs17           4078 	ld	hl,#_bsy + 0
   0F14 77                 4079 	ld	(hl), a
   0F15 21r1Ds17           4080 	ld	hl,#_bsy + 1
   0F18 36 00              4081 	ld	(hl), #0x00
                           4082 ;demo.c:498: cmd.source_x = btab[bsx];
   0F1A 21r1As17           4083 	ld	hl,#_bsx + 0
   0F1D 4E                 4084 	ld	c,(hl)
   0F1E 21r1Bs17           4085 	ld	hl,#_bsx + 1
   0F21 46                 4086 	ld	b,(hl)
   0F22 CB 21              4087 	sla	c
   0F24 CB 10              4088 	rl	b
   0F26 21r22s17           4089 	ld	hl,#_btab
   0F29 09                 4090 	add	hl,bc
   0F2A 4E                 4091 	ld	c,(hl)
   0F2B 23                 4092 	inc	hl
   0F2C 46                 4093 	ld	b,(hl)
   0F2D 21rB4s16           4094 	ld	hl,#_cmd
   0F30 71                 4095 	ld	(hl),c
   0F31 23                 4096 	inc	hl
   0F32 70                 4097 	ld	(hl),b
                           4098 ;demo.c:499: cmd.source_y = 768+btab[bsy];
   0F33 01rB6s16           4099 	ld	bc,#_cmd + 2
   0F36 21r1Cs17           4100 	ld	hl,#_bsy + 0
   0F39 5E                 4101 	ld	e,(hl)
   0F3A 21r1Ds17           4102 	ld	hl,#_bsy + 1
   0F3D 56                 4103 	ld	d,(hl)
   0F3E CB 23              4104 	sla	e
   0F40 CB 12              4105 	rl	d
   0F42 21r22s17           4106 	ld	hl,#_btab
   0F45 19                 4107 	add	hl,de
   0F46 5E                 4108 	ld	e,(hl)
   0F47 23                 4109 	inc	hl
   0F48 56                 4110 	ld	d,(hl)
   0F49 21 00 03           4111 	ld	hl,#0x0300
   0F4C 19                 4112 	add	hl,de
   0F4D EB                 4113 	ex	de,hl
   0F4E 69                 4114 	ld	l,c
   0F4F 60                 4115 	ld	h,b
   0F50 73                 4116 	ld	(hl),e
   0F51 23                 4117 	inc	hl
   0F52 72                 4118 	ld	(hl),d
                           4119 ;demo.c:500: cmd.dest_x = btab[btx];
   0F53 01rB8s16           4120 	ld	bc,#_cmd + 4
   0F56 21r1Es17           4121 	ld	hl,#_btx + 0
   0F59 5E                 4122 	ld	e,(hl)
   0F5A 21r1Fs17           4123 	ld	hl,#_btx + 1
   0F5D 56                 4124 	ld	d,(hl)
   0F5E CB 23              4125 	sla	e
   0F60 CB 12              4126 	rl	d
   0F62 21r22s17           4127 	ld	hl,#_btab
   0F65 19                 4128 	add	hl,de
   0F66 5E                 4129 	ld	e,(hl)
   0F67 23                 4130 	inc	hl
   0F68 56                 4131 	ld	d,(hl)
   0F69 69                 4132 	ld	l,c
   0F6A 60                 4133 	ld	h,b
   0F6B 73                 4134 	ld	(hl),e
   0F6C 23                 4135 	inc	hl
   0F6D 72                 4136 	ld	(hl),d
                           4137 ;demo.c:501: cmd.dest_y = 512+btab[bty];
   0F6E 01rBAs16           4138 	ld	bc,#_cmd + 6
   0F71 21r20s17           4139 	ld	hl,#_bty + 0
   0F74 5E                 4140 	ld	e,(hl)
   0F75 21r21s17           4141 	ld	hl,#_bty + 1
   0F78 56                 4142 	ld	d,(hl)
   0F79 CB 23              4143 	sla	e
   0F7B CB 12              4144 	rl	d
   0F7D 21r22s17           4145 	ld	hl,#_btab
   0F80 19                 4146 	add	hl,de
   0F81 5E                 4147 	ld	e,(hl)
   0F82 23                 4148 	inc	hl
   0F83 56                 4149 	ld	d,(hl)
   0F84 21 00 02           4150 	ld	hl,#0x0200
   0F87 19                 4151 	add	hl,de
   0F88 EB                 4152 	ex	de,hl
   0F89 69                 4153 	ld	l,c
   0F8A 60                 4154 	ld	h,b
   0F8B 73                 4155 	ld	(hl),e
   0F8C 23                 4156 	inc	hl
   0F8D 72                 4157 	ld	(hl),d
                           4158 ;demo.c:502: cmd.size_x = 16;
   0F8E 21rBCs16           4159 	ld	hl, #_cmd + 8
   0F91 36 10              4160 	ld	(hl),#0x10
   0F93 23                 4161 	inc	hl
   0F94 36 00              4162 	ld	(hl),#0x00
                           4163 ;demo.c:503: cmd.size_y = 16;
   0F96 21rBEs16           4164 	ld	hl, #_cmd + 10
   0F99 36 10              4165 	ld	(hl),#0x10
   0F9B 23                 4166 	inc	hl
   0F9C 36 00              4167 	ld	(hl),#0x00
                           4168 ;demo.c:504: cmd.data = 0;
                           4169 ;demo.c:505: cmd.argument = 0x00;
   0F9E 3E 00              4170 	ld	a,#0x00
   0FA0 32rC0s16           4171 	ld	(#_cmd + 12),a
   0FA3 32rC1s16           4172 	ld	(#_cmd + 13),a
                           4173 ;demo.c:506: cmd.command = 0xD0;
   0FA6 3E D0              4174 	ld	a,#0xD0
   0FA8 32rC2s16           4175 	ld	(#_cmd + 14),a
                           4176 ;demo.c:507: vdp_copier(&cmd);
   0FAB 21rB4s16           4177 	ld	hl,#_cmd
   0FAE E5                 4178 	push	hl
   0FAF CDr00s00           4179 	call	_vdp_copier
   0FB2 F1                 4180 	pop	af
                           4181 ;demo.c:495: for(btx=ys;btx<ye;btx++) {
   0FB3 FD 21r1Es17        4182 	ld	iy,#_btx
   0FB7 FD 34 00           4183 	inc	0 (iy)
   0FBA 20 07              4184 	jr	NZ,00150$
   0FBC FD 21r1Es17        4185 	ld	iy,#_btx
   0FC0 FD 34 01           4186 	inc	1 (iy)
   0FC3                    4187 00150$:
   0FC3 C3rE5s0E           4188 	jp	00114$
   0FC6                    4189 00120$:
                           4190 ;demo.c:494: for(bty=3;bty<11;bty++) {
   0FC6 FD 21r20s17        4191 	ld	iy,#_bty
   0FCA FD 34 00           4192 	inc	0 (iy)
   0FCD 20 07              4193 	jr	NZ,00151$
   0FCF FD 21r20s17        4194 	ld	iy,#_bty
   0FD3 FD 34 01           4195 	inc	1 (iy)
   0FD6                    4196 00151$:
   0FD6 C3rC4s0E           4197 	jp	00118$
   0FD9                    4198 00121$:
                           4199 ;demo.c:511: flof++;
   0FD9 FD 21r42s17        4200 	ld	iy,#_flof
   0FDD FD 34 00           4201 	inc	0 (iy)
   0FE0 20 07              4202 	jr	NZ,00152$
   0FE2 FD 21r42s17        4203 	ld	iy,#_flof
   0FE6 FD 34 01           4204 	inc	1 (iy)
   0FE9                    4205 00152$:
                           4206 ;demo.c:512: if (flof == 2) flof = 0;
   0FE9 3Ar42s17           4207 	ld	a,(#_flof+0)
   0FEC D6 02              4208 	sub	a,#0x02
   0FEE 20 06              4209 	jr	NZ,00153$
   0FF0 3Ar43s17           4210 	ld	a,(#_flof+1)
   0FF3 B7                 4211 	or	a,a
   0FF4 28 02              4212 	jr	Z,00154$
   0FF6                    4213 00153$:
   0FF6 18 0A              4214 	jr	00122$
   0FF8                    4215 00154$:
   0FF8 21r42s17           4216 	ld	hl,#_flof + 0
   0FFB 36 00              4217 	ld	(hl), #0x00
   0FFD 21r43s17           4218 	ld	hl,#_flof + 1
   1000 36 00              4219 	ld	(hl), #0x00
   1002                    4220 00122$:
   1002 DD F9              4221 	ld	sp,ix
   1004 DD E1              4222 	pop	ix
   1006 C9                 4223 	ret
   1007                    4224 _do_blocks_end::
                           4225 ;demo.c:520: void raster_effu() {
                           4226 ;	---------------------------------
                           4227 ; Function raster_effu
                           4228 ; ---------------------------------
   1007                    4229 _raster_effu_start::
   1007                    4230 _raster_effu:
                           4231 ;demo.c:521: vdp_register(VDP_VOFFSET,0);
   1007 21 17 00           4232 	ld	hl,#0x0017
   100A E5                 4233 	push	hl
   100B CDr00s00           4234 	call	_vdp_register
   100E F1                 4235 	pop	af
                           4236 ;demo.c:522: waitVB();
   100F 76                 4237 		halt 
                           4238 ;demo.c:524: vdp_register(1,0x40); // disable vblank
   1010 21 01 40           4239 	ld	hl,#0x4001
   1013 E5                 4240 	push	hl
   1014 CDr00s00           4241 	call	_vdp_register
                           4242 ;demo.c:526: for (linenum = 40; linenum < 212; linenum+=4) {
   1017 3E 28              4243 	ld	a,#0x28
   1019 32r44s17           4244 	ld	(#_linenum + 0),a
   101C F1                 4245 	pop	af
   101D FD 21r44s17        4246 	ld	iy,#_linenum
   1021 FD 36 01 00        4247 	ld	1 (iy),#0x00
   1025                    4248 00101$:
   1025 3Ar44s17           4249 	ld	a,(#_linenum+0)
   1028 D6 D4              4250 	sub	a,#0xD4
   102A 3Ar45s17           4251 	ld	a,(#_linenum+1)
   102D DE 00              4252 	sbc	a,#0x00
   102F F2r60s10           4253 	jp	P,00104$
                           4254 ;demo.c:527: vdp_register(19,linenum); // interrupt on line
   1032 3Ar44s17           4255 	ld	a,(#_linenum+0)
   1035 F5                 4256 	push	af
   1036 33                 4257 	inc	sp
   1037 3E 13              4258 	ld	a,#0x13
   1039 F5                 4259 	push	af
   103A 33                 4260 	inc	sp
   103B CDr00s00           4261 	call	_vdp_register
   103E F1                 4262 	pop	af
                           4263 ;demo.c:528: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   103F 21 00 16           4264 	ld	hl,#0x1600
   1042 E5                 4265 	push	hl
   1043 CDr00s00           4266 	call	_vdp_register
   1046 F1                 4267 	pop	af
                           4268 ;demo.c:530: waitVB();
   1047 76                 4269 		halt 
                           4270 ;demo.c:526: for (linenum = 40; linenum < 212; linenum+=4) {
   1048 21r44s17           4271 	ld	hl,#_linenum
   104B 7E                 4272 	ld	a,(hl)
   104C C6 04              4273 	add	a,#0x04
   104E 23                 4274 	inc	hl
   104F 2B                 4275 	dec	hl
   1050 C5                 4276 	push	bc
   1051 4F                 4277 	ld	c, a
   1052 23                 4278 	inc	hl
   1053 7E                 4279 	ld	a, (hl)
   1054 47                 4280 	ld	b, a
   1055 79                 4281 	ld	a, c
   1056 2B                 4282 	dec	hl
   1057 77                 4283 	ld	(hl), a
   1058 78                 4284 	ld	a, b
   1059 C1                 4285 	pop	bc
   105A CE 00              4286 	adc	a,#0x00
   105C 23                 4287 	inc	hl
   105D 77                 4288 	ld	(hl),a
   105E 18 C5              4289 	jr	00101$
   1060                    4290 00104$:
                           4291 ;demo.c:533: vdp_register(VDP_VOFFSET,0);
   1060 21 17 00           4292 	ld	hl,#0x0017
   1063 E5                 4293 	push	hl
   1064 CDr00s00           4294 	call	_vdp_register
   1067 F1                 4295 	pop	af
                           4296 ;demo.c:547: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   1068 21 00 06           4297 	ld	hl,#0x0600
   106B E5                 4298 	push	hl
   106C CDr00s00           4299 	call	_vdp_register
   106F F1                 4300 	pop	af
                           4301 ;demo.c:548: vdp_register(1,0x60); // enable vblank
   1070 21 01 60           4302 	ld	hl,#0x6001
   1073 E5                 4303 	push	hl
   1074 CDr00s00           4304 	call	_vdp_register
   1077 F1                 4305 	pop	af
   1078 C9                 4306 	ret
   1079                    4307 _raster_effu_end::
                           4308 ;demo.c:580: void do_2xletter(char cc) {
                           4309 ;	---------------------------------
                           4310 ; Function do_2xletter
                           4311 ; ---------------------------------
   1079                    4312 _do_2xletter_start::
   1079                    4313 _do_2xletter:
   1079 DD E5              4314 	push	ix
   107B DD 21 00 00        4315 	ld	ix,#0
   107F DD 39              4316 	add	ix,sp
   1081 21 F2 FF           4317 	ld	hl,#-14
   1084 39                 4318 	add	hl,sp
   1085 F9                 4319 	ld	sp,hl
                           4320 ;demo.c:581: int cidx = cc - 65;
   1086 DD 4E 04           4321 	ld	c,4 (ix)
   1089 DD 7E 04           4322 	ld	a,4 (ix)
   108C 17                 4323 	rla	
   108D 9F                 4324 	sbc	a,a
   108E 47                 4325 	ld	b,a
   108F 79                 4326 	ld	a,c
   1090 C6 BF              4327 	add	a,#0xBF
   1092 DD 77 FE           4328 	ld	-2 (ix),a
   1095 78                 4329 	ld	a,b
   1096 CE FF              4330 	adc	a,#0xFF
   1098 DD 77 FF           4331 	ld	-1 (ix),a
                           4332 ;demo.c:584: for (y=0;y<8;y++) {
   109B 3ErA7              4333 	ld	a,#<_font_w
   109D DD 86 FE           4334 	add	a,-2 (ix)
   10A0 5F                 4335 	ld	e,a
   10A1 3Es13              4336 	ld	a,#>_font_w
   10A3 DD 8E FF           4337 	adc	a,-1 (ix)
   10A6 57                 4338 	ld	d,a
   10A7 DD 36 FA 00        4339 	ld	-6 (ix),#0x00
   10AB DD 36 FB 00        4340 	ld	-5 (ix),#0x00
   10AF DD 36 F6 00        4341 	ld	-10 (ix),#0x00
   10B3 DD 36 F7 00        4342 	ld	-9 (ix),#0x00
   10B7                    4343 00105$:
   10B7 DD 7E FA           4344 	ld	a,-6 (ix)
   10BA D6 08              4345 	sub	a,#0x08
   10BC DD 7E FB           4346 	ld	a,-5 (ix)
   10BF DE 00              4347 	sbc	a,#0x00
   10C1 F2rFFs12           4348 	jp	P,00108$
                           4349 ;demo.c:585: for (x=0;x<font_w[cidx];x++) {
   10C4 DD 36 FC 00        4350 	ld	-4 (ix),#0x00
   10C8 DD 36 FD 00        4351 	ld	-3 (ix),#0x00
   10CC DD 36 F4 00        4352 	ld	-12 (ix),#0x00
   10D0 DD 36 F5 00        4353 	ld	-11 (ix),#0x00
   10D4                    4354 00101$:
   10D4 1A                 4355 	ld	a,(de)
   10D5 4F                 4356 	ld	c,a
   10D6 06 00              4357 	ld	b,#0x00
   10D8 DD 7E FC           4358 	ld	a,-4 (ix)
   10DB 91                 4359 	sub	a,c
   10DC DD 7E FD           4360 	ld	a,-3 (ix)
   10DF 98                 4361 	sbc	a,b
   10E0 F2rD7s12           4362 	jp	P,00115$
                           4363 ;demo.c:586: cmd.source_x = 127+font_x[cidx]+x;
   10E3 3Er27              4364 	ld	a,#<_font_x
   10E5 DD 86 FE           4365 	add	a,-2 (ix)
   10E8 4F                 4366 	ld	c,a
   10E9 3Es13              4367 	ld	a,#>_font_x
   10EB DD 8E FF           4368 	adc	a,-1 (ix)
   10EE 47                 4369 	ld	b,a
   10EF 0A                 4370 	ld	a,(bc)
   10F0 4F                 4371 	ld	c,a
   10F1 06 00              4372 	ld	b,#0x00
   10F3 21 7F 00           4373 	ld	hl,#0x007F
   10F6 09                 4374 	add	hl,bc
   10F7 4D                 4375 	ld	c,l
   10F8 44                 4376 	ld	b,h
   10F9 79                 4377 	ld	a,c
   10FA DD 86 FC           4378 	add	a,-4 (ix)
   10FD 4F                 4379 	ld	c,a
   10FE 78                 4380 	ld	a,b
   10FF DD 8E FD           4381 	adc	a,-3 (ix)
   1102 47                 4382 	ld	b,a
   1103 21rB4s16           4383 	ld	hl,#_cmd
   1106 71                 4384 	ld	(hl),c
   1107 23                 4385 	inc	hl
   1108 70                 4386 	ld	(hl),b
                           4387 ;demo.c:587: cmd.source_y = 512+font_y[cidx]+y;
   1109 23                 4388 	inc	hl
   110A DD 75 F2           4389 	ld	-14 (ix),l
   110D DD 74 F3           4390 	ld	-13 (ix),h
   1110 3Er67              4391 	ld	a,#<_font_y
   1112 DD 86 FE           4392 	add	a,-2 (ix)
   1115 4F                 4393 	ld	c,a
   1116 3Es13              4394 	ld	a,#>_font_y
   1118 DD 8E FF           4395 	adc	a,-1 (ix)
   111B 47                 4396 	ld	b,a
   111C 0A                 4397 	ld	a,(bc)
   111D 4F                 4398 	ld	c,a
   111E 06 00              4399 	ld	b,#0x00
   1120 21 00 02           4400 	ld	hl,#0x0200
   1123 09                 4401 	add	hl,bc
   1124 4D                 4402 	ld	c,l
   1125 44                 4403 	ld	b,h
   1126 79                 4404 	ld	a,c
   1127 DD 86 FA           4405 	add	a,-6 (ix)
   112A 4F                 4406 	ld	c,a
   112B 78                 4407 	ld	a,b
   112C DD 8E FB           4408 	adc	a,-5 (ix)
   112F 47                 4409 	ld	b,a
   1130 DD 6E F2           4410 	ld	l,-14 (ix)
   1133 DD 66 F3           4411 	ld	h,-13 (ix)
   1136 71                 4412 	ld	(hl),c
   1137 23                 4413 	inc	hl
   1138 70                 4414 	ld	(hl),b
                           4415 ;demo.c:588: cmd.size_x = 1;
   1139 21rBCs16           4416 	ld	hl, #_cmd + 8
   113C 36 01              4417 	ld	(hl),#0x01
   113E 23                 4418 	inc	hl
   113F 36 00              4419 	ld	(hl),#0x00
                           4420 ;demo.c:589: cmd.size_y = 1;
   1141 21rBEs16           4421 	ld	hl, #_cmd + 10
   1144 36 01              4422 	ld	(hl),#0x01
   1146 23                 4423 	inc	hl
   1147 36 00              4424 	ld	(hl),#0x00
                           4425 ;demo.c:590: cmd.argument = 0x00;
   1149 3E 00              4426 	ld	a,#0x00
   114B 32rC1s16           4427 	ld	(#_cmd + 13),a
                           4428 ;demo.c:591: cmd.command = 0x40; // get pixel
   114E 3E 40              4429 	ld	a,#0x40
   1150 32rC2s16           4430 	ld	(#_cmd + 14),a
                           4431 ;demo.c:592: vdp_copier(&cmd);
   1153 D5                 4432 	push	de
   1154 21rB4s16           4433 	ld	hl,#_cmd
   1157 E5                 4434 	push	hl
   1158 CDr00s00           4435 	call	_vdp_copier
   115B F1                 4436 	pop	af
   115C D1                 4437 	pop	de
                           4438 ;demo.c:594: col = vdp2_status(7);
   115D D5                 4439 	push	de
   115E 3E 07              4440 	ld	a,#0x07
   1160 F5                 4441 	push	af
   1161 33                 4442 	inc	sp
   1162 CDr00s00           4443 	call	_vdp2_status
   1165 33                 4444 	inc	sp
   1166 4D                 4445 	ld	c,l
   1167 D1                 4446 	pop	de
   1168 DD 71 F8           4447 	ld	-8 (ix),c
   116B DD 36 F9 00        4448 	ld	-7 (ix),#0x00
                           4449 ;demo.c:596: cmd.data = col;
   116F 01rC0s16           4450 	ld	bc,#_cmd + 12
   1172 DD 7E F8           4451 	ld	a,-8 (ix)
   1175 02                 4452 	ld	(bc),a
                           4453 ;demo.c:597: cmd.dest_x = lx+x*3;
   1176 21rB8s16           4454 	ld	hl,#_cmd + 4
   1179 DD 75 F2           4455 	ld	-14 (ix),l
   117C DD 74 F3           4456 	ld	-13 (ix),h
   117F 21r46s17           4457 	ld	hl,#_lx + 0
   1182 4E                 4458 	ld	c,(hl)
   1183 06 00              4459 	ld	b,#0x00
   1185 79                 4460 	ld	a,c
   1186 DD 86 F4           4461 	add	a,-12 (ix)
   1189 4F                 4462 	ld	c,a
   118A 78                 4463 	ld	a,b
   118B DD 8E F5           4464 	adc	a,-11 (ix)
   118E 47                 4465 	ld	b,a
   118F DD 6E F2           4466 	ld	l,-14 (ix)
   1192 DD 66 F3           4467 	ld	h,-13 (ix)
   1195 71                 4468 	ld	(hl),c
   1196 23                 4469 	inc	hl
   1197 70                 4470 	ld	(hl),b
                           4471 ;demo.c:598: cmd.dest_y = ly+y*3;
   1198 21rBAs16           4472 	ld	hl,#_cmd + 6
   119B DD 75 F2           4473 	ld	-14 (ix),l
   119E DD 74 F3           4474 	ld	-13 (ix),h
   11A1 21r47s17           4475 	ld	hl,#_ly + 0
   11A4 4E                 4476 	ld	c,(hl)
   11A5 06 00              4477 	ld	b,#0x00
   11A7 79                 4478 	ld	a,c
   11A8 DD 86 F6           4479 	add	a,-10 (ix)
   11AB 4F                 4480 	ld	c,a
   11AC 78                 4481 	ld	a,b
   11AD DD 8E F7           4482 	adc	a,-9 (ix)
   11B0 47                 4483 	ld	b,a
   11B1 DD 6E F2           4484 	ld	l,-14 (ix)
   11B4 DD 66 F3           4485 	ld	h,-13 (ix)
   11B7 71                 4486 	ld	(hl),c
   11B8 23                 4487 	inc	hl
   11B9 70                 4488 	ld	(hl),b
                           4489 ;demo.c:601: cmd.argument = 0x00;
   11BA 3E 00              4490 	ld	a,#0x00
   11BC 32rC1s16           4491 	ld	(#_cmd + 13),a
                           4492 ;demo.c:602: cmd.command = 0x50; // rect
   11BF 3E 50              4493 	ld	a,#0x50
   11C1 32rC2s16           4494 	ld	(#_cmd + 14),a
                           4495 ;demo.c:603: vdp_copier(&cmd);
   11C4 D5                 4496 	push	de
   11C5 21rB4s16           4497 	ld	hl,#_cmd
   11C8 E5                 4498 	push	hl
   11C9 CDr00s00           4499 	call	_vdp_copier
   11CC F1                 4500 	pop	af
   11CD D1                 4501 	pop	de
                           4502 ;demo.c:604: cmd.dest_x = 1+lx+x*3;
   11CE 21rB8s16           4503 	ld	hl,#_cmd + 4
   11D1 DD 75 F2           4504 	ld	-14 (ix),l
   11D4 DD 74 F3           4505 	ld	-13 (ix),h
   11D7 21r46s17           4506 	ld	hl,#_lx + 0
   11DA 4E                 4507 	ld	c,(hl)
   11DB 06 00              4508 	ld	b,#0x00
   11DD 03                 4509 	inc	bc
   11DE 79                 4510 	ld	a,c
   11DF DD 86 F4           4511 	add	a,-12 (ix)
   11E2 4F                 4512 	ld	c,a
   11E3 78                 4513 	ld	a,b
   11E4 DD 8E F5           4514 	adc	a,-11 (ix)
   11E7 47                 4515 	ld	b,a
   11E8 DD 6E F2           4516 	ld	l,-14 (ix)
   11EB DD 66 F3           4517 	ld	h,-13 (ix)
   11EE 71                 4518 	ld	(hl),c
   11EF 23                 4519 	inc	hl
   11F0 70                 4520 	ld	(hl),b
                           4521 ;demo.c:605: cmd.dest_y = ly+y*3;
   11F1 21rBAs16           4522 	ld	hl,#_cmd + 6
   11F4 DD 75 F2           4523 	ld	-14 (ix),l
   11F7 DD 74 F3           4524 	ld	-13 (ix),h
   11FA 21r47s17           4525 	ld	hl,#_ly + 0
   11FD 4E                 4526 	ld	c,(hl)
   11FE 06 00              4527 	ld	b,#0x00
   1200 79                 4528 	ld	a,c
   1201 DD 86 F6           4529 	add	a,-10 (ix)
   1204 4F                 4530 	ld	c,a
   1205 78                 4531 	ld	a,b
   1206 DD 8E F7           4532 	adc	a,-9 (ix)
   1209 47                 4533 	ld	b,a
   120A DD 6E F2           4534 	ld	l,-14 (ix)
   120D DD 66 F3           4535 	ld	h,-13 (ix)
   1210 71                 4536 	ld	(hl),c
   1211 23                 4537 	inc	hl
   1212 70                 4538 	ld	(hl),b
                           4539 ;demo.c:606: vdp_copier(&cmd);
   1213 D5                 4540 	push	de
   1214 21rB4s16           4541 	ld	hl,#_cmd
   1217 E5                 4542 	push	hl
   1218 CDr00s00           4543 	call	_vdp_copier
   121B F1                 4544 	pop	af
   121C D1                 4545 	pop	de
                           4546 ;demo.c:607: cmd.dest_x = 1+lx+x*3;
   121D 21rB8s16           4547 	ld	hl,#_cmd + 4
   1220 DD 75 F2           4548 	ld	-14 (ix),l
   1223 DD 74 F3           4549 	ld	-13 (ix),h
   1226 21r46s17           4550 	ld	hl,#_lx + 0
   1229 4E                 4551 	ld	c,(hl)
   122A 06 00              4552 	ld	b,#0x00
   122C 03                 4553 	inc	bc
   122D 79                 4554 	ld	a,c
   122E DD 86 F4           4555 	add	a,-12 (ix)
   1231 4F                 4556 	ld	c,a
   1232 78                 4557 	ld	a,b
   1233 DD 8E F5           4558 	adc	a,-11 (ix)
   1236 47                 4559 	ld	b,a
   1237 DD 6E F2           4560 	ld	l,-14 (ix)
   123A DD 66 F3           4561 	ld	h,-13 (ix)
   123D 71                 4562 	ld	(hl),c
   123E 23                 4563 	inc	hl
   123F 70                 4564 	ld	(hl),b
                           4565 ;demo.c:608: cmd.dest_y = 1+ly+y*3;
   1240 21rBAs16           4566 	ld	hl,#_cmd + 6
   1243 DD 75 F2           4567 	ld	-14 (ix),l
   1246 DD 74 F3           4568 	ld	-13 (ix),h
   1249 21r47s17           4569 	ld	hl,#_ly + 0
   124C 4E                 4570 	ld	c,(hl)
   124D 06 00              4571 	ld	b,#0x00
   124F 03                 4572 	inc	bc
   1250 79                 4573 	ld	a,c
   1251 DD 86 F6           4574 	add	a,-10 (ix)
   1254 4F                 4575 	ld	c,a
   1255 78                 4576 	ld	a,b
   1256 DD 8E F7           4577 	adc	a,-9 (ix)
   1259 47                 4578 	ld	b,a
   125A DD 6E F2           4579 	ld	l,-14 (ix)
   125D DD 66 F3           4580 	ld	h,-13 (ix)
   1260 71                 4581 	ld	(hl),c
   1261 23                 4582 	inc	hl
   1262 70                 4583 	ld	(hl),b
                           4584 ;demo.c:609: vdp_copier(&cmd);
   1263 D5                 4585 	push	de
   1264 21rB4s16           4586 	ld	hl,#_cmd
   1267 E5                 4587 	push	hl
   1268 CDr00s00           4588 	call	_vdp_copier
   126B F1                 4589 	pop	af
   126C D1                 4590 	pop	de
                           4591 ;demo.c:610: cmd.dest_x = lx+x*3;
   126D 21rB8s16           4592 	ld	hl,#_cmd + 4
   1270 DD 75 F2           4593 	ld	-14 (ix),l
   1273 DD 74 F3           4594 	ld	-13 (ix),h
   1276 21r46s17           4595 	ld	hl,#_lx + 0
   1279 4E                 4596 	ld	c,(hl)
   127A 06 00              4597 	ld	b,#0x00
   127C 79                 4598 	ld	a,c
   127D DD 86 F4           4599 	add	a,-12 (ix)
   1280 4F                 4600 	ld	c,a
   1281 78                 4601 	ld	a,b
   1282 DD 8E F5           4602 	adc	a,-11 (ix)
   1285 47                 4603 	ld	b,a
   1286 DD 6E F2           4604 	ld	l,-14 (ix)
   1289 DD 66 F3           4605 	ld	h,-13 (ix)
   128C 71                 4606 	ld	(hl),c
   128D 23                 4607 	inc	hl
   128E 70                 4608 	ld	(hl),b
                           4609 ;demo.c:611: cmd.dest_y = 1+ly+y*3;
   128F 21rBAs16           4610 	ld	hl,#_cmd + 6
   1292 DD 75 F2           4611 	ld	-14 (ix),l
   1295 DD 74 F3           4612 	ld	-13 (ix),h
   1298 21r47s17           4613 	ld	hl,#_ly + 0
   129B 4E                 4614 	ld	c,(hl)
   129C 06 00              4615 	ld	b,#0x00
   129E 03                 4616 	inc	bc
   129F 79                 4617 	ld	a,c
   12A0 DD 86 F6           4618 	add	a,-10 (ix)
   12A3 4F                 4619 	ld	c,a
   12A4 78                 4620 	ld	a,b
   12A5 DD 8E F7           4621 	adc	a,-9 (ix)
   12A8 47                 4622 	ld	b,a
   12A9 DD 6E F2           4623 	ld	l,-14 (ix)
   12AC DD 66 F3           4624 	ld	h,-13 (ix)
   12AF 71                 4625 	ld	(hl),c
   12B0 23                 4626 	inc	hl
   12B1 70                 4627 	ld	(hl),b
                           4628 ;demo.c:612: vdp_copier(&cmd);
   12B2 D5                 4629 	push	de
   12B3 21rB4s16           4630 	ld	hl,#_cmd
   12B6 E5                 4631 	push	hl
   12B7 CDr00s00           4632 	call	_vdp_copier
   12BA F1                 4633 	pop	af
   12BB D1                 4634 	pop	de
                           4635 ;demo.c:585: for (x=0;x<font_w[cidx];x++) {
   12BC DD 7E F4           4636 	ld	a,-12 (ix)
   12BF C6 03              4637 	add	a,#0x03
   12C1 DD 77 F4           4638 	ld	-12 (ix),a
   12C4 DD 7E F5           4639 	ld	a,-11 (ix)
   12C7 CE 00              4640 	adc	a,#0x00
   12C9 DD 77 F5           4641 	ld	-11 (ix),a
   12CC DD 34 FC           4642 	inc	-4 (ix)
   12CF 20 03              4643 	jr	NZ,00117$
   12D1 DD 34 FD           4644 	inc	-3 (ix)
   12D4                    4645 00117$:
   12D4 C3rD4s10           4646 	jp	00101$
   12D7                    4647 00115$:
   12D7 DD 7E FC           4648 	ld	a,-4 (ix)
   12DA DD 77 F2           4649 	ld	-14 (ix),a
   12DD DD 7E FD           4650 	ld	a,-3 (ix)
   12E0 DD 77 F3           4651 	ld	-13 (ix),a
                           4652 ;demo.c:614: waitVB();
   12E3 76                 4653 		halt 
                           4654 ;demo.c:584: for (y=0;y<8;y++) {
   12E4 DD 7E F6           4655 	ld	a,-10 (ix)
   12E7 C6 03              4656 	add	a,#0x03
   12E9 DD 77 F6           4657 	ld	-10 (ix),a
   12EC DD 7E F7           4658 	ld	a,-9 (ix)
   12EF CE 00              4659 	adc	a,#0x00
   12F1 DD 77 F7           4660 	ld	-9 (ix),a
   12F4 DD 34 FA           4661 	inc	-6 (ix)
   12F7 20 03              4662 	jr	NZ,00118$
   12F9 DD 34 FB           4663 	inc	-5 (ix)
   12FC                    4664 00118$:
   12FC C3rB7s10           4665 	jp	00105$
   12FF                    4666 00108$:
                           4667 ;demo.c:617: lx+=font_w[cidx]-1+(x*4);
   12FF 3ErA7              4668 	ld	a,#<_font_w
   1301 DD 86 FE           4669 	add	a,-2 (ix)
   1304 4F                 4670 	ld	c,a
   1305 3Es13              4671 	ld	a,#>_font_w
   1307 DD 8E FF           4672 	adc	a,-1 (ix)
   130A 47                 4673 	ld	b,a
   130B 0A                 4674 	ld	a,(bc)
   130C 4F                 4675 	ld	c,a
   130D 0D                 4676 	dec	c
   130E DD 46 F2           4677 	ld	b,-14 (ix)
   1311 CB 20              4678 	sla	b
   1313 CB 20              4679 	sla	b
   1315 79                 4680 	ld	a,c
   1316 80                 4681 	add	a,b
   1317 4F                 4682 	ld	c,a
   1318 21r46s17           4683 	ld	hl,#_lx + 0
   131B 46                 4684 	ld	b,(hl)
   131C 21r46s17           4685 	ld	hl,#_lx
   131F 78                 4686 	ld	a,b
   1320 81                 4687 	add	a,c
   1321 77                 4688 	ld	(hl),a
   1322 DD F9              4689 	ld	sp,ix
   1324 DD E1              4690 	pop	ix
   1326 C9                 4691 	ret
   1327                    4692 _do_2xletter_end::
   1327                    4693 _font_x:
   1327 01                 4694 	.db #0x01
   1328 09                 4695 	.db #0x09
   1329 11                 4696 	.db #0x11
   132A 19                 4697 	.db #0x19
   132B 21                 4698 	.db #0x21
   132C 29                 4699 	.db #0x29
   132D 31                 4700 	.db #0x31
   132E 39                 4701 	.db #0x39
   132F 41                 4702 	.db #0x41
   1330 46                 4703 	.db #0x46
   1331 4E                 4704 	.db #0x4E
   1332 56                 4705 	.db #0x56
   1333 5E                 4706 	.db #0x5E
   1334 01                 4707 	.db #0x01
   1335 0A                 4708 	.db #0x0A
   1336 12                 4709 	.db #0x12
   1337 1A                 4710 	.db #0x1A
   1338 23                 4711 	.db #0x23
   1339 2B                 4712 	.db #0x2B
   133A 33                 4713 	.db #0x33
   133B 3C                 4714 	.db #0x3C
   133C 44                 4715 	.db #0x44
   133D 4C                 4716 	.db #0x4C
   133E 56                 4717 	.db #0x56
   133F 5E                 4718 	.db #0x5E
   1340 67                 4719 	.db #0x67
   1341 00                 4720 	.db #0x00
   1342 00                 4721 	.db #0x00
   1343 00                 4722 	.db #0x00
   1344 00                 4723 	.db #0x00
   1345 00                 4724 	.db #0x00
   1346 00                 4725 	.db #0x00
   1347 01                 4726 	.db #0x01
   1348 09                 4727 	.db #0x09
   1349 11                 4728 	.db #0x11
   134A 18                 4729 	.db #0x18
   134B 20                 4730 	.db #0x20
   134C 28                 4731 	.db #0x28
   134D 2F                 4732 	.db #0x2F
   134E 37                 4733 	.db #0x37
   134F 3F                 4734 	.db #0x3F
   1350 45                 4735 	.db #0x45
   1351 4C                 4736 	.db #0x4C
   1352 54                 4737 	.db #0x54
   1353 5A                 4738 	.db #0x5A
   1354 64                 4739 	.db #0x64
   1355 01                 4740 	.db #0x01
   1356 09                 4741 	.db #0x09
   1357 11                 4742 	.db #0x11
   1358 19                 4743 	.db #0x19
   1359 21                 4744 	.db #0x21
   135A 29                 4745 	.db #0x29
   135B 30                 4746 	.db #0x30
   135C 38                 4747 	.db #0x38
   135D 40                 4748 	.db #0x40
   135E 4A                 4749 	.db #0x4A
   135F 52                 4750 	.db #0x52
   1360 5A                 4751 	.db #0x5A
   1361 00                 4752 	.db 0x00
   1362 00                 4753 	.db 0x00
   1363 00                 4754 	.db 0x00
   1364 00                 4755 	.db 0x00
   1365 00                 4756 	.db 0x00
   1366 00                 4757 	.db 0x00
   1367                    4758 _font_y:
   1367 1C                 4759 	.db #0x1C
   1368 1C                 4760 	.db #0x1C
   1369 1C                 4761 	.db #0x1C
   136A 1C                 4762 	.db #0x1C
   136B 1C                 4763 	.db #0x1C
   136C 1C                 4764 	.db #0x1C
   136D 1C                 4765 	.db #0x1C
   136E 1C                 4766 	.db #0x1C
   136F 1C                 4767 	.db #0x1C
   1370 1C                 4768 	.db #0x1C
   1371 1C                 4769 	.db #0x1C
   1372 1C                 4770 	.db #0x1C
   1373 1C                 4771 	.db #0x1C
   1374 25                 4772 	.db #0x25
   1375 25                 4773 	.db #0x25
   1376 25                 4774 	.db #0x25
   1377 25                 4775 	.db #0x25
   1378 25                 4776 	.db #0x25
   1379 25                 4777 	.db #0x25
   137A 25                 4778 	.db #0x25
   137B 25                 4779 	.db #0x25
   137C 25                 4780 	.db #0x25
   137D 25                 4781 	.db #0x25
   137E 25                 4782 	.db #0x25
   137F 25                 4783 	.db #0x25
   1380 25                 4784 	.db #0x25
   1381 00                 4785 	.db #0x00
   1382 00                 4786 	.db #0x00
   1383 00                 4787 	.db #0x00
   1384 00                 4788 	.db #0x00
   1385 00                 4789 	.db #0x00
   1386 00                 4790 	.db #0x00
   1387 37                 4791 	.db #0x37
   1388 37                 4792 	.db #0x37
   1389 37                 4793 	.db #0x37
   138A 37                 4794 	.db #0x37
   138B 37                 4795 	.db #0x37
   138C 37                 4796 	.db #0x37
   138D 37                 4797 	.db #0x37
   138E 37                 4798 	.db #0x37
   138F 37                 4799 	.db #0x37
   1390 37                 4800 	.db #0x37
   1391 37                 4801 	.db #0x37
   1392 37                 4802 	.db #0x37
   1393 37                 4803 	.db #0x37
   1394 37                 4804 	.db #0x37
   1395 40                 4805 	.db #0x40
   1396 40                 4806 	.db #0x40
   1397 40                 4807 	.db #0x40
   1398 40                 4808 	.db #0x40
   1399 40                 4809 	.db #0x40
   139A 40                 4810 	.db #0x40
   139B 40                 4811 	.db #0x40
   139C 40                 4812 	.db #0x40
   139D 40                 4813 	.db #0x40
   139E 40                 4814 	.db #0x40
   139F 40                 4815 	.db #0x40
   13A0 40                 4816 	.db #0x40
   13A1 00                 4817 	.db 0x00
   13A2 00                 4818 	.db 0x00
   13A3 00                 4819 	.db 0x00
   13A4 00                 4820 	.db 0x00
   13A5 00                 4821 	.db 0x00
   13A6 00                 4822 	.db 0x00
   13A7                    4823 _font_w:
   13A7 07                 4824 	.db #0x07
   13A8 07                 4825 	.db #0x07
   13A9 07                 4826 	.db #0x07
   13AA 07                 4827 	.db #0x07
   13AB 07                 4828 	.db #0x07
   13AC 07                 4829 	.db #0x07
   13AD 07                 4830 	.db #0x07
   13AE 07                 4831 	.db #0x07
   13AF 04                 4832 	.db #0x04
   13B0 07                 4833 	.db #0x07
   13B1 07                 4834 	.db #0x07
   13B2 07                 4835 	.db #0x07
   13B3 09                 4836 	.db #0x09
   13B4 08                 4837 	.db #0x08
   13B5 07                 4838 	.db #0x07
   13B6 07                 4839 	.db #0x07
   13B7 08                 4840 	.db #0x08
   13B8 07                 4841 	.db #0x07
   13B9 07                 4842 	.db #0x07
   13BA 08                 4843 	.db #0x08
   13BB 07                 4844 	.db #0x07
   13BC 07                 4845 	.db #0x07
   13BD 09                 4846 	.db #0x09
   13BE 07                 4847 	.db #0x07
   13BF 08                 4848 	.db #0x08
   13C0 07                 4849 	.db #0x07
   13C1 00                 4850 	.db #0x00
   13C2 00                 4851 	.db #0x00
   13C3 00                 4852 	.db #0x00
   13C4 00                 4853 	.db #0x00
   13C5 00                 4854 	.db #0x00
   13C6 00                 4855 	.db #0x00
   13C7 07                 4856 	.db #0x07
   13C8 07                 4857 	.db #0x07
   13C9 06                 4858 	.db #0x06
   13CA 07                 4859 	.db #0x07
   13CB 07                 4860 	.db #0x07
   13CC 07                 4861 	.db #0x07
   13CD 07                 4862 	.db #0x07
   13CE 07                 4863 	.db #0x07
   13CF 05                 4864 	.db #0x05
   13D0 06                 4865 	.db #0x06
   13D1 07                 4866 	.db #0x07
   13D2 05                 4867 	.db #0x05
   13D3 09                 4868 	.db #0x09
   13D4 07                 4869 	.db #0x07
   13D5 07                 4870 	.db #0x07
   13D6 07                 4871 	.db #0x07
   13D7 07                 4872 	.db #0x07
   13D8 07                 4873 	.db #0x07
   13D9 07                 4874 	.db #0x07
   13DA 06                 4875 	.db #0x06
   13DB 07                 4876 	.db #0x07
   13DC 07                 4877 	.db #0x07
   13DD 09                 4878 	.db #0x09
   13DE 07                 4879 	.db #0x07
   13DF 07                 4880 	.db #0x07
   13E0 07                 4881 	.db #0x07
   13E1 00                 4882 	.db 0x00
   13E2 00                 4883 	.db 0x00
   13E3 00                 4884 	.db 0x00
   13E4 00                 4885 	.db 0x00
   13E5 00                 4886 	.db 0x00
   13E6 00                 4887 	.db 0x00
                           4888 ;demo.c:621: void do_letter(char cc) {
                           4889 ;	---------------------------------
                           4890 ; Function do_letter
                           4891 ; ---------------------------------
   13E7                    4892 _do_letter_start::
   13E7                    4893 _do_letter:
   13E7 DD E5              4894 	push	ix
   13E9 DD 21 00 00        4895 	ld	ix,#0
   13ED DD 39              4896 	add	ix,sp
   13EF F5                 4897 	push	af
                           4898 ;demo.c:622: int cidx = cc - 65;
   13F0 DD 4E 04           4899 	ld	c,4 (ix)
   13F3 DD 7E 04           4900 	ld	a,4 (ix)
   13F6 17                 4901 	rla	
   13F7 9F                 4902 	sbc	a,a
   13F8 47                 4903 	ld	b,a
   13F9 79                 4904 	ld	a,c
   13FA C6 BF              4905 	add	a,#0xBF
   13FC DD 77 FE           4906 	ld	-2 (ix),a
   13FF 78                 4907 	ld	a,b
   1400 CE FF              4908 	adc	a,#0xFF
   1402 DD 77 FF           4909 	ld	-1 (ix),a
                           4910 ;demo.c:623: cmd.source_x = 127+font_x[cidx];
   1405 3Er27              4911 	ld	a,#<_font_x
   1407 DD 86 FE           4912 	add	a,-2 (ix)
   140A 5F                 4913 	ld	e,a
   140B 3Es13              4914 	ld	a,#>_font_x
   140D DD 8E FF           4915 	adc	a,-1 (ix)
   1410 57                 4916 	ld	d,a
   1411 1A                 4917 	ld	a,(de)
   1412 5F                 4918 	ld	e,a
   1413 16 00              4919 	ld	d,#0x00
   1415 21 7F 00           4920 	ld	hl,#0x007F
   1418 19                 4921 	add	hl,de
   1419 EB                 4922 	ex	de,hl
   141A 21rB4s16           4923 	ld	hl,#_cmd
   141D 73                 4924 	ld	(hl),e
   141E 23                 4925 	inc	hl
   141F 72                 4926 	ld	(hl),d
                           4927 ;demo.c:624: cmd.source_y = 512+font_y[cidx];
   1420 11rB6s16           4928 	ld	de,#_cmd + 2
   1423 3Er67              4929 	ld	a,#<_font_y
   1425 DD 86 FE           4930 	add	a,-2 (ix)
   1428 4F                 4931 	ld	c,a
   1429 3Es13              4932 	ld	a,#>_font_y
   142B DD 8E FF           4933 	adc	a,-1 (ix)
   142E 47                 4934 	ld	b,a
   142F 0A                 4935 	ld	a,(bc)
   1430 4F                 4936 	ld	c,a
   1431 06 00              4937 	ld	b,#0x00
   1433 21 00 02           4938 	ld	hl,#0x0200
   1436 09                 4939 	add	hl,bc
   1437 4D                 4940 	ld	c,l
   1438 44                 4941 	ld	b,h
   1439 EB                 4942 	ex	de,hl
   143A 71                 4943 	ld	(hl),c
   143B 23                 4944 	inc	hl
   143C 70                 4945 	ld	(hl),b
                           4946 ;demo.c:625: cmd.dest_x = lx;
   143D 01rB8s16           4947 	ld	bc,#_cmd + 4
   1440 21r46s17           4948 	ld	hl,#_lx + 0
   1443 5E                 4949 	ld	e,(hl)
   1444 16 00              4950 	ld	d,#0x00
   1446 69                 4951 	ld	l,c
   1447 60                 4952 	ld	h,b
   1448 73                 4953 	ld	(hl),e
   1449 23                 4954 	inc	hl
   144A 72                 4955 	ld	(hl),d
                           4956 ;demo.c:626: cmd.dest_y = ly;
   144B 01rBAs16           4957 	ld	bc,#_cmd + 6
   144E 21r47s17           4958 	ld	hl,#_ly + 0
   1451 5E                 4959 	ld	e,(hl)
   1452 16 00              4960 	ld	d,#0x00
   1454 69                 4961 	ld	l,c
   1455 60                 4962 	ld	h,b
   1456 73                 4963 	ld	(hl),e
   1457 23                 4964 	inc	hl
   1458 72                 4965 	ld	(hl),d
                           4966 ;demo.c:627: cmd.size_x = font_w[cidx];
   1459 01rBCs16           4967 	ld	bc,#_cmd + 8
   145C 3ErA7              4968 	ld	a,#<_font_w
   145E DD 86 FE           4969 	add	a,-2 (ix)
   1461 5F                 4970 	ld	e,a
   1462 3Es13              4971 	ld	a,#>_font_w
   1464 DD 8E FF           4972 	adc	a,-1 (ix)
   1467 57                 4973 	ld	d,a
   1468 1A                 4974 	ld	a,(de)
   1469 5F                 4975 	ld	e,a
   146A 16 00              4976 	ld	d,#0x00
   146C 69                 4977 	ld	l,c
   146D 60                 4978 	ld	h,b
   146E 73                 4979 	ld	(hl),e
   146F 23                 4980 	inc	hl
   1470 72                 4981 	ld	(hl),d
                           4982 ;demo.c:628: cmd.size_y = 8;
   1471 21rBEs16           4983 	ld	hl, #_cmd + 10
   1474 36 08              4984 	ld	(hl),#0x08
   1476 23                 4985 	inc	hl
   1477 36 00              4986 	ld	(hl),#0x00
                           4987 ;demo.c:629: cmd.argument = 0x00;
   1479 3E 00              4988 	ld	a,#0x00
   147B 32rC1s16           4989 	ld	(#_cmd + 13),a
                           4990 ;demo.c:630: cmd.command = 0x90; // logical vram to vram
   147E 3E 90              4991 	ld	a,#0x90
   1480 32rC2s16           4992 	ld	(#_cmd + 14),a
                           4993 ;demo.c:631: vdp_copier(&cmd);
   1483 21rB4s16           4994 	ld	hl,#_cmd
   1486 E5                 4995 	push	hl
   1487 CDr00s00           4996 	call	_vdp_copier
   148A F1                 4997 	pop	af
                           4998 ;demo.c:632: lx+=font_w[cidx]-1;
   148B 3ErA7              4999 	ld	a,#<_font_w
   148D DD 86 FE           5000 	add	a,-2 (ix)
   1490 4F                 5001 	ld	c,a
   1491 3Es13              5002 	ld	a,#>_font_w
   1493 DD 8E FF           5003 	adc	a,-1 (ix)
   1496 47                 5004 	ld	b,a
   1497 0A                 5005 	ld	a,(bc)
   1498 4F                 5006 	ld	c,a
   1499 0D                 5007 	dec	c
   149A 21r46s17           5008 	ld	hl,#_lx
   149D 7E                 5009 	ld	a,(hl)
   149E 81                 5010 	add	a,c
   149F 77                 5011 	ld	(hl),a
   14A0 DD F9              5012 	ld	sp,ix
   14A2 DD E1              5013 	pop	ix
   14A4 C9                 5014 	ret
   14A5                    5015 _do_letter_end::
                           5016 ;demo.c:636: void do_letter_tall(char cc) {
                           5017 ;	---------------------------------
                           5018 ; Function do_letter_tall
                           5019 ; ---------------------------------
   14A5                    5020 _do_letter_tall_start::
   14A5                    5021 _do_letter_tall:
   14A5 DD E5              5022 	push	ix
   14A7 DD 21 00 00        5023 	ld	ix,#0
   14AB DD 39              5024 	add	ix,sp
   14AD F5                 5025 	push	af
                           5026 ;demo.c:637: int cidx = cc - 65;
   14AE DD 4E 04           5027 	ld	c,4 (ix)
   14B1 DD 7E 04           5028 	ld	a,4 (ix)
   14B4 17                 5029 	rla	
   14B5 9F                 5030 	sbc	a,a
   14B6 47                 5031 	ld	b,a
   14B7 79                 5032 	ld	a,c
   14B8 C6 BF              5033 	add	a,#0xBF
   14BA DD 77 FE           5034 	ld	-2 (ix),a
   14BD 78                 5035 	ld	a,b
   14BE CE FF              5036 	adc	a,#0xFF
   14C0 DD 77 FF           5037 	ld	-1 (ix),a
                           5038 ;demo.c:638: cmd.source_x = 127+font_x[cidx];
   14C3 3Er27              5039 	ld	a,#<_font_x
   14C5 DD 86 FE           5040 	add	a,-2 (ix)
   14C8 5F                 5041 	ld	e,a
   14C9 3Es13              5042 	ld	a,#>_font_x
   14CB DD 8E FF           5043 	adc	a,-1 (ix)
   14CE 57                 5044 	ld	d,a
   14CF 1A                 5045 	ld	a,(de)
   14D0 5F                 5046 	ld	e,a
   14D1 16 00              5047 	ld	d,#0x00
   14D3 21 7F 00           5048 	ld	hl,#0x007F
   14D6 19                 5049 	add	hl,de
   14D7 EB                 5050 	ex	de,hl
   14D8 21rB4s16           5051 	ld	hl,#_cmd
   14DB 73                 5052 	ld	(hl),e
   14DC 23                 5053 	inc	hl
   14DD 72                 5054 	ld	(hl),d
                           5055 ;demo.c:639: cmd.source_y = 512+font_y[cidx]-1;
   14DE 11rB6s16           5056 	ld	de,#_cmd + 2
   14E1 3Er67              5057 	ld	a,#<_font_y
   14E3 DD 86 FE           5058 	add	a,-2 (ix)
   14E6 4F                 5059 	ld	c,a
   14E7 3Es13              5060 	ld	a,#>_font_y
   14E9 DD 8E FF           5061 	adc	a,-1 (ix)
   14EC 47                 5062 	ld	b,a
   14ED 0A                 5063 	ld	a,(bc)
   14EE 4F                 5064 	ld	c,a
   14EF 06 00              5065 	ld	b,#0x00
   14F1 21 FF 01           5066 	ld	hl,#0x01FF
   14F4 09                 5067 	add	hl,bc
   14F5 4D                 5068 	ld	c,l
   14F6 44                 5069 	ld	b,h
   14F7 EB                 5070 	ex	de,hl
   14F8 71                 5071 	ld	(hl),c
   14F9 23                 5072 	inc	hl
   14FA 70                 5073 	ld	(hl),b
                           5074 ;demo.c:640: cmd.dest_x = lx;
   14FB 01rB8s16           5075 	ld	bc,#_cmd + 4
   14FE 21r46s17           5076 	ld	hl,#_lx + 0
   1501 5E                 5077 	ld	e,(hl)
   1502 16 00              5078 	ld	d,#0x00
   1504 69                 5079 	ld	l,c
   1505 60                 5080 	ld	h,b
   1506 73                 5081 	ld	(hl),e
   1507 23                 5082 	inc	hl
   1508 72                 5083 	ld	(hl),d
                           5084 ;demo.c:641: cmd.dest_y = ly;
   1509 01rBAs16           5085 	ld	bc,#_cmd + 6
   150C 21r47s17           5086 	ld	hl,#_ly + 0
   150F 5E                 5087 	ld	e,(hl)
   1510 16 00              5088 	ld	d,#0x00
   1512 69                 5089 	ld	l,c
   1513 60                 5090 	ld	h,b
   1514 73                 5091 	ld	(hl),e
   1515 23                 5092 	inc	hl
   1516 72                 5093 	ld	(hl),d
                           5094 ;demo.c:642: cmd.size_x = font_w[cidx];
   1517 01rBCs16           5095 	ld	bc,#_cmd + 8
   151A 3ErA7              5096 	ld	a,#<_font_w
   151C DD 86 FE           5097 	add	a,-2 (ix)
   151F 5F                 5098 	ld	e,a
   1520 3Es13              5099 	ld	a,#>_font_w
   1522 DD 8E FF           5100 	adc	a,-1 (ix)
   1525 57                 5101 	ld	d,a
   1526 1A                 5102 	ld	a,(de)
   1527 5F                 5103 	ld	e,a
   1528 16 00              5104 	ld	d,#0x00
   152A 69                 5105 	ld	l,c
   152B 60                 5106 	ld	h,b
   152C 73                 5107 	ld	(hl),e
   152D 23                 5108 	inc	hl
   152E 72                 5109 	ld	(hl),d
                           5110 ;demo.c:643: cmd.size_y = 10;
   152F 21rBEs16           5111 	ld	hl, #_cmd + 10
   1532 36 0A              5112 	ld	(hl),#0x0A
   1534 23                 5113 	inc	hl
   1535 36 00              5114 	ld	(hl),#0x00
                           5115 ;demo.c:644: cmd.argument = 0x00;
   1537 3E 00              5116 	ld	a,#0x00
   1539 32rC1s16           5117 	ld	(#_cmd + 13),a
                           5118 ;demo.c:645: cmd.command = 0x90; // logical vram to vram
   153C 3E 90              5119 	ld	a,#0x90
   153E 32rC2s16           5120 	ld	(#_cmd + 14),a
                           5121 ;demo.c:646: vdp_copier(&cmd);
   1541 21rB4s16           5122 	ld	hl,#_cmd
   1544 E5                 5123 	push	hl
   1545 CDr00s00           5124 	call	_vdp_copier
   1548 F1                 5125 	pop	af
                           5126 ;demo.c:647: lx+=font_w[cidx]-1;
   1549 3ErA7              5127 	ld	a,#<_font_w
   154B DD 86 FE           5128 	add	a,-2 (ix)
   154E 4F                 5129 	ld	c,a
   154F 3Es13              5130 	ld	a,#>_font_w
   1551 DD 8E FF           5131 	adc	a,-1 (ix)
   1554 47                 5132 	ld	b,a
   1555 0A                 5133 	ld	a,(bc)
   1556 4F                 5134 	ld	c,a
   1557 0D                 5135 	dec	c
   1558 21r46s17           5136 	ld	hl,#_lx
   155B 7E                 5137 	ld	a,(hl)
   155C 81                 5138 	add	a,c
   155D 77                 5139 	ld	(hl),a
   155E DD F9              5140 	ld	sp,ix
   1560 DD E1              5141 	pop	ix
   1562 C9                 5142 	ret
   1563                    5143 _do_letter_tall_end::
                           5144 ;demo.c:650: void drawstr(char* str, uint8_t x, uint8_t y) {
                           5145 ;	---------------------------------
                           5146 ; Function drawstr
                           5147 ; ---------------------------------
   1563                    5148 _drawstr_start::
   1563                    5149 _drawstr:
   1563 DD E5              5150 	push	ix
   1565 DD 21 00 00        5151 	ld	ix,#0
   1569 DD 39              5152 	add	ix,sp
                           5153 ;demo.c:651: char* c = str;
   156B DD 4E 04           5154 	ld	c,4 (ix)
   156E DD 46 05           5155 	ld	b,5 (ix)
                           5156 ;demo.c:652: lx = x;
   1571 DD 5E 06           5157 	ld	e,6 (ix)
   1574 21r46s17           5158 	ld	hl,#_lx + 0
   1577 73                 5159 	ld	(hl), e
                           5160 ;demo.c:653: ly = y;
   1578 DD 7E 07           5161 	ld	a,7 (ix)
   157B 21r47s17           5162 	ld	hl,#_ly + 0
   157E 77                 5163 	ld	(hl), a
                           5164 ;demo.c:654: while (*c) {
   157F                    5165 00107$:
   157F 0A                 5166 	ld	a,(bc)
   1580 57                 5167 	ld	d,a
   1581 B7                 5168 	or	a,a
   1582 28 42              5169 	jr	Z,00110$
                           5170 ;demo.c:655: char ltr = *c++; 
   1584 03                 5171 	inc	bc
                           5172 ;demo.c:656: if (ltr == ' ') lx+=4;
   1585 7A                 5173 	ld	a,d
   1586 D6 20              5174 	sub	a,#0x20
   1588 20 1E              5175 	jr	NZ,00105$
   158A FD 21r46s17        5176 	ld	iy,#_lx
   158E FD 34 00           5177 	inc	0 (iy)
   1591 FD 21r46s17        5178 	ld	iy,#_lx
   1595 FD 34 00           5179 	inc	0 (iy)
   1598 FD 21r46s17        5180 	ld	iy,#_lx
   159C FD 34 00           5181 	inc	0 (iy)
   159F FD 21r46s17        5182 	ld	iy,#_lx
   15A3 FD 34 00           5183 	inc	0 (iy)
   15A6 18 D7              5184 	jr	00107$
   15A8                    5185 00105$:
                           5186 ;demo.c:657: else if (ltr == '_') { ly+=9; lx = x; }
   15A8 7A                 5187 	ld	a,d
   15A9 D6 5F              5188 	sub	a,#0x5F
   15AB 20 0D              5189 	jr	NZ,00102$
   15AD 21r47s17           5190 	ld	hl,#_ly
   15B0 7E                 5191 	ld	a,(hl)
   15B1 C6 09              5192 	add	a,#0x09
   15B3 77                 5193 	ld	(hl),a
   15B4 21r46s17           5194 	ld	hl,#_lx + 0
   15B7 73                 5195 	ld	(hl), e
   15B8 18 C5              5196 	jr	00107$
   15BA                    5197 00102$:
                           5198 ;demo.c:658: else do_letter(ltr);
   15BA C5                 5199 	push	bc
   15BB D5                 5200 	push	de
   15BC D5                 5201 	push	de
   15BD 33                 5202 	inc	sp
   15BE CDrE7s13           5203 	call	_do_letter
   15C1 33                 5204 	inc	sp
   15C2 D1                 5205 	pop	de
   15C3 C1                 5206 	pop	bc
   15C4 18 B9              5207 	jr	00107$
   15C6                    5208 00110$:
   15C6 DD E1              5209 	pop	ix
   15C8 C9                 5210 	ret
   15C9                    5211 _drawstr_end::
                           5212 ;demo.c:665: void drawstrslow(char* str, uint8_t x, uint8_t y) {
                           5213 ;	---------------------------------
                           5214 ; Function drawstrslow
                           5215 ; ---------------------------------
   15C9                    5216 _drawstrslow_start::
   15C9                    5217 _drawstrslow:
   15C9 DD E5              5218 	push	ix
   15CB DD 21 00 00        5219 	ld	ix,#0
   15CF DD 39              5220 	add	ix,sp
                           5221 ;demo.c:666: char* c = str+ltrpointer;
   15D1 21r48s17           5222 	ld	hl,#_ltrpointer
   15D4 DD 7E 04           5223 	ld	a,4 (ix)
   15D7 86                 5224 	add	a,(hl)
   15D8 4F                 5225 	ld	c,a
   15D9 DD 7E 05           5226 	ld	a,5 (ix)
   15DC 23                 5227 	inc	hl
   15DD 8E                 5228 	adc	a,(hl)
   15DE 47                 5229 	ld	b,a
                           5230 ;demo.c:667: if (ltrpointer > slowend) return;
   15DF 21r4As17           5231 	ld	hl,#_slowend
   15E2 7E                 5232 	ld	a,(hl)
   15E3 FD 21r48s17        5233 	ld	iy,#_ltrpointer
   15E7 FD 96 00           5234 	sub	a,0 (iy)
   15EA 23                 5235 	inc	hl
   15EB 7E                 5236 	ld	a,(hl)
   15EC FD 21r48s17        5237 	ld	iy,#_ltrpointer
   15F0 FD 9E 01           5238 	sbc	a,1 (iy)
   15F3 F2rF9s15           5239 	jp	P,00102$
   15F6 C3r64s16           5240 	jp	00114$
   15F9                    5241 00102$:
                           5242 ;demo.c:668: if (ltrpointer == 0) {
   15F9 3Ar48s17           5243 	ld	a,(#_ltrpointer+0)
   15FC 21r49s17           5244 	ld	hl,#_ltrpointer + 1
   15FF B6                 5245 	or	a,(hl)
   1600 20 0E              5246 	jr	NZ,00111$
                           5247 ;demo.c:669: lx = x;
   1602 DD 7E 06           5248 	ld	a,6 (ix)
   1605 21r46s17           5249 	ld	hl,#_lx + 0
   1608 77                 5250 	ld	(hl), a
                           5251 ;demo.c:670: ly = y;
   1609 DD 7E 07           5252 	ld	a,7 (ix)
   160C 21r47s17           5253 	ld	hl,#_ly + 0
   160F 77                 5254 	ld	(hl), a
                           5255 ;demo.c:672: while (*c) {
   1610                    5256 00111$:
   1610 0A                 5257 	ld	a,(bc)
   1611 4F                 5258 	ld	c,a
   1612 B7                 5259 	or	a,a
   1613 28 3F              5260 	jr	Z,00113$
                           5261 ;demo.c:673: char ltr = *c++; 
                           5262 ;demo.c:674: if (ltr == ' ') lx+=4;
   1615 79                 5263 	ld	a,c
   1616 D6 20              5264 	sub	a,#0x20
   1618 20 1E              5265 	jr	NZ,00109$
   161A FD 21r46s17        5266 	ld	iy,#_lx
   161E FD 34 00           5267 	inc	0 (iy)
   1621 FD 21r46s17        5268 	ld	iy,#_lx
   1625 FD 34 00           5269 	inc	0 (iy)
   1628 FD 21r46s17        5270 	ld	iy,#_lx
   162C FD 34 00           5271 	inc	0 (iy)
   162F FD 21r46s17        5272 	ld	iy,#_lx
   1633 FD 34 00           5273 	inc	0 (iy)
   1636 18 1C              5274 	jr	00113$
   1638                    5275 00109$:
                           5276 ;demo.c:675: else if (ltr == '_') { ly+=9; lx = x; }
   1638 79                 5277 	ld	a,c
   1639 D6 5F              5278 	sub	a,#0x5F
   163B 20 10              5279 	jr	NZ,00106$
   163D 21r47s17           5280 	ld	hl,#_ly
   1640 7E                 5281 	ld	a,(hl)
   1641 C6 09              5282 	add	a,#0x09
   1643 77                 5283 	ld	(hl),a
   1644 DD 7E 06           5284 	ld	a,6 (ix)
   1647 21r46s17           5285 	ld	hl,#_lx + 0
   164A 77                 5286 	ld	(hl), a
   164B 18 07              5287 	jr	00113$
   164D                    5288 00106$:
                           5289 ;demo.c:676: else do_letter(ltr);
   164D 79                 5290 	ld	a,c
   164E F5                 5291 	push	af
   164F 33                 5292 	inc	sp
   1650 CDrE7s13           5293 	call	_do_letter
   1653 33                 5294 	inc	sp
                           5295 ;demo.c:677: break;
   1654                    5296 00113$:
                           5297 ;demo.c:680: ltrpointer++;
   1654 FD 21r48s17        5298 	ld	iy,#_ltrpointer
   1658 FD 34 00           5299 	inc	0 (iy)
   165B 20 07              5300 	jr	NZ,00125$
   165D FD 21r48s17        5301 	ld	iy,#_ltrpointer
   1661 FD 34 01           5302 	inc	1 (iy)
   1664                    5303 00125$:
   1664                    5304 00114$:
   1664 DD E1              5305 	pop	ix
   1666 C9                 5306 	ret
   1667                    5307 _drawstrslow_end::
                           5308 ;demo.c:683: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           5309 ;	---------------------------------
                           5310 ; Function drawstr2x
                           5311 ; ---------------------------------
   1667                    5312 _drawstr2x_start::
   1667                    5313 _drawstr2x:
   1667 DD E5              5314 	push	ix
   1669 DD 21 00 00        5315 	ld	ix,#0
   166D DD 39              5316 	add	ix,sp
                           5317 ;demo.c:684: char* c = str;
   166F DD 4E 04           5318 	ld	c,4 (ix)
   1672 DD 46 05           5319 	ld	b,5 (ix)
                           5320 ;demo.c:685: lx = x;
   1675 DD 5E 06           5321 	ld	e,6 (ix)
   1678 21r46s17           5322 	ld	hl,#_lx + 0
   167B 73                 5323 	ld	(hl), e
                           5324 ;demo.c:686: ly = y;
   167C DD 7E 07           5325 	ld	a,7 (ix)
   167F 21r47s17           5326 	ld	hl,#_ly + 0
   1682 77                 5327 	ld	(hl), a
                           5328 ;demo.c:687: while (*c) {
   1683                    5329 00107$:
   1683 0A                 5330 	ld	a,(bc)
   1684 57                 5331 	ld	d,a
   1685 B7                 5332 	or	a,a
   1686 28 2D              5333 	jr	Z,00110$
                           5334 ;demo.c:688: char ltr = *c++; 
   1688 03                 5335 	inc	bc
                           5336 ;demo.c:689: if (ltr == ' ') lx+=4*4;
   1689 7A                 5337 	ld	a,d
   168A D6 20              5338 	sub	a,#0x20
   168C 20 09              5339 	jr	NZ,00105$
   168E 21r46s17           5340 	ld	hl,#_lx
   1691 7E                 5341 	ld	a,(hl)
   1692 C6 10              5342 	add	a,#0x10
   1694 77                 5343 	ld	(hl),a
   1695 18 EC              5344 	jr	00107$
   1697                    5345 00105$:
                           5346 ;demo.c:690: else if (ltr == '_') { ly+=9*4; lx = x; }
   1697 7A                 5347 	ld	a,d
   1698 D6 5F              5348 	sub	a,#0x5F
   169A 20 0D              5349 	jr	NZ,00102$
   169C 21r47s17           5350 	ld	hl,#_ly
   169F 7E                 5351 	ld	a,(hl)
   16A0 C6 24              5352 	add	a,#0x24
   16A2 77                 5353 	ld	(hl),a
   16A3 21r46s17           5354 	ld	hl,#_lx + 0
   16A6 73                 5355 	ld	(hl), e
   16A7 18 DA              5356 	jr	00107$
   16A9                    5357 00102$:
                           5358 ;demo.c:691: else do_2xletter(ltr);
   16A9 C5                 5359 	push	bc
   16AA D5                 5360 	push	de
   16AB D5                 5361 	push	de
   16AC 33                 5362 	inc	sp
   16AD CDr79s10           5363 	call	_do_2xletter
   16B0 33                 5364 	inc	sp
   16B1 D1                 5365 	pop	de
   16B2 C1                 5366 	pop	bc
   16B3 18 CE              5367 	jr	00107$
   16B5                    5368 00110$:
   16B5 DD E1              5369 	pop	ix
   16B7 C9                 5370 	ret
   16B8                    5371 _drawstr2x_end::
                           5372 ;demo.c:696: void drawsine(char* str, uint8_t x, uint8_t y) {
                           5373 ;	---------------------------------
                           5374 ; Function drawsine
                           5375 ; ---------------------------------
   16B8                    5376 _drawsine_start::
   16B8                    5377 _drawsine:
   16B8 DD E5              5378 	push	ix
   16BA DD 21 00 00        5379 	ld	ix,#0
   16BE DD 39              5380 	add	ix,sp
   16C0 3B                 5381 	dec	sp
                           5382 ;demo.c:697: char* c = str;
   16C1 DD 4E 04           5383 	ld	c,4 (ix)
   16C4 DD 46 05           5384 	ld	b,5 (ix)
                           5385 ;demo.c:698: lx = x;
   16C7 DD 7E 06           5386 	ld	a,6 (ix)
   16CA 21r46s17           5387 	ld	hl,#_lx + 0
   16CD 77                 5388 	ld	(hl), a
                           5389 ;demo.c:700: while (*c) {
   16CE                    5390 00104$:
   16CE 0A                 5391 	ld	a,(bc)
   16CF 5F                 5392 	ld	e,a
   16D0 B7                 5393 	or	a,a
   16D1 CAr37s17           5394 	jp	Z,00107$
                           5395 ;demo.c:701: char ltr = *c++; 
   16D4 03                 5396 	inc	bc
   16D5 DD 73 FF           5397 	ld	-1 (ix),e
                           5398 ;demo.c:702: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   16D8 21r46s17           5399 	ld	hl,#_lx + 0
   16DB 5E                 5400 	ld	e,(hl)
   16DC 16 00              5401 	ld	d,#0x00
   16DE 21rB0s16           5402 	ld	hl,#_vbicount
   16E1 7B                 5403 	ld	a,e
   16E2 86                 5404 	add	a,(hl)
   16E3 5F                 5405 	ld	e,a
   16E4 7A                 5406 	ld	a,d
   16E5 23                 5407 	inc	hl
   16E6 8E                 5408 	adc	a,(hl)
   16E7 57                 5409 	ld	d,a
   16E8 CB 2A              5410 	sra	d
   16EA CB 1B              5411 	rr	e
   16EC 16 00              5412 	ld	d,#0x00
   16EE 21r2Cs00           5413 	ld	hl,#_sintabx
   16F1 19                 5414 	add	hl,de
   16F2 5E                 5415 	ld	e,(hl)
   16F3 CB 3B              5416 	srl	e
   16F5 CB 3B              5417 	srl	e
   16F7 CB 3B              5418 	srl	e
   16F9 CB 3B              5419 	srl	e
   16FB 21r47s17           5420 	ld	hl,#_ly
   16FE DD 7E 07           5421 	ld	a,7 (ix)
   1701 83                 5422 	add	a,e
   1702 77                 5423 	ld	(hl),a
                           5424 ;demo.c:703: if (ltr == ' ') lx+=4;
   1703 DD 7E FF           5425 	ld	a,-1 (ix)
   1706 D6 20              5426 	sub	a,#0x20
   1708 20 1F              5427 	jr	NZ,00102$
   170A FD 21r46s17        5428 	ld	iy,#_lx
   170E FD 34 00           5429 	inc	0 (iy)
   1711 FD 21r46s17        5430 	ld	iy,#_lx
   1715 FD 34 00           5431 	inc	0 (iy)
   1718 FD 21r46s17        5432 	ld	iy,#_lx
   171C FD 34 00           5433 	inc	0 (iy)
   171F FD 21r46s17        5434 	ld	iy,#_lx
   1723 FD 34 00           5435 	inc	0 (iy)
   1726 C3rCEs16           5436 	jp	00104$
   1729                    5437 00102$:
                           5438 ;demo.c:704: else do_letter_tall(ltr);
   1729 C5                 5439 	push	bc
   172A DD 7E FF           5440 	ld	a,-1 (ix)
   172D F5                 5441 	push	af
   172E 33                 5442 	inc	sp
   172F CDrA5s14           5443 	call	_do_letter_tall
   1732 33                 5444 	inc	sp
   1733 C1                 5445 	pop	bc
   1734 C3rCEs16           5446 	jp	00104$
   1737                    5447 00107$:
   1737 DD F9              5448 	ld	sp,ix
   1739 DD E1              5449 	pop	ix
   173B C9                 5450 	ret
   173C                    5451 _drawsine_end::
                           5452 ;demo.c:708: void font() {
                           5453 ;	---------------------------------
                           5454 ; Function font
                           5455 ; ---------------------------------
   173C                    5456 _font_start::
   173C                    5457 _font:
                           5458 ;demo.c:709: slowend = 128;
   173C 21r4As17           5459 	ld	hl,#_slowend + 0
   173F 36 80              5460 	ld	(hl), #0x80
   1741 21r4Bs17           5461 	ld	hl,#_slowend + 1
   1744 36 00              5462 	ld	(hl), #0x00
                           5463 ;demo.c:710: drawstrslow("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PARTY PEOPLE",74,60);
   1746 21 4A 3C           5464 	ld	hl,#0x3C4A
   1749 E5                 5465 	push	hl
   174A 21r54s17           5466 	ld	hl,#__str_8
   174D E5                 5467 	push	hl
   174E CDrC9s15           5468 	call	_drawstrslow
   1751 F1                 5469 	pop	af
   1752 F1                 5470 	pop	af
   1753 C9                 5471 	ret
   1754                    5472 _font_end::
   1754                    5473 __str_8:
   1754 44 49 47 49 54 41  5474 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   1790 4F 4E 5F 5F 20 20  5475 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PART"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F 5F 5F 4D 41
        4B 45 20 53 4F 4D
        45 20 4E 4F 49 53
        45 20 50 41 52 54
   17CC 59 20 50 45 4F 50  5476 	.ascii "Y PEOPLE"
        4C 45
   17D4 00                 5477 	.db 0x00
                           5478 ;demo.c:718: void twister() {
                           5479 ;	---------------------------------
                           5480 ; Function twister
                           5481 ; ---------------------------------
   17D5                    5482 _twister_start::
   17D5                    5483 _twister:
   17D5 DD E5              5484 	push	ix
   17D7 DD 21 00 00        5485 	ld	ix,#0
   17DB DD 39              5486 	add	ix,sp
   17DD F5                 5487 	push	af
                           5488 ;demo.c:722: if (twinited == 0) {
   17DE 3Ar4Es17           5489 	ld	a,(#_twinited+0)
   17E1 FD 21r4Es17        5490 	ld	iy,#_twinited
   17E5 FD B6 01           5491 	or	a,1 (iy)
   17E8 C2r62s18           5492 	jp	NZ,00102$
                           5493 ;demo.c:723: cmd.size_x = 256;
   17EB 21rBCs16           5494 	ld	hl, #_cmd + 8
   17EE 36 00              5495 	ld	(hl),#0x00
   17F0 23                 5496 	inc	hl
   17F1 36 01              5497 	ld	(hl),#0x01
                           5498 ;demo.c:724: cmd.size_y = 1;
   17F3 21rBEs16           5499 	ld	hl, #_cmd + 10
   17F6 36 01              5500 	ld	(hl),#0x01
   17F8 23                 5501 	inc	hl
   17F9 36 00              5502 	ld	(hl),#0x00
                           5503 ;demo.c:725: cmd.data = 0;
                           5504 ;demo.c:726: cmd.argument = 0x00; // from 70xY to left
   17FB 3E 00              5505 	ld	a,#0x00
   17FD 32rC0s16           5506 	ld	(#_cmd + 12),a
   1800 32rC1s16           5507 	ld	(#_cmd + 13),a
                           5508 ;demo.c:727: cmd.command = 0xd0; // vram to vram, y only
   1803 01rC2s16           5509 	ld	bc,#_cmd + 14
   1806 3E D0              5510 	ld	a,#0xD0
   1808 02                 5511 	ld	(bc),a
                           5512 ;demo.c:728: cmd.source_x = 0;
   1809 21rB4s16           5513 	ld	hl,#_cmd
   180C 36 00              5514 	ld	(hl),#0x00
   180E 23                 5515 	inc	hl
   180F 36 00              5516 	ld	(hl),#0x00
                           5517 ;demo.c:729: cmd.dest_x = 0;
   1811 21rB8s16           5518 	ld	hl, #_cmd + 4
   1814 36 00              5519 	ld	(hl),#0x00
   1816 23                 5520 	inc	hl
   1817 36 00              5521 	ld	(hl),#0x00
                           5522 ;demo.c:731: for (y = 0; y < 212; y+=1) {
   1819 01 00 00           5523 	ld	bc,#0x0000
   181C                    5524 00103$:
   181C 79                 5525 	ld	a,c
   181D D6 D4              5526 	sub	a,#0xD4
   181F 78                 5527 	ld	a,b
   1820 DE 00              5528 	sbc	a,#0x00
   1822 F2r43s18           5529 	jp	P,00106$
                           5530 ;demo.c:732: waitVB();
   1825 76                 5531 		halt 
                           5532 ;demo.c:733: cmd.source_y = 0;
   1826 11rB6s16           5533 	ld	de,#_cmd + 2
   1829 EB                 5534 	ex	de,hl
   182A 36 00              5535 	ld	(hl),#0x00
   182C 23                 5536 	inc	hl
   182D 36 00              5537 	ld	(hl),#0x00
                           5538 ;demo.c:734: cmd.dest_y = y;
   182F 11rBAs16           5539 	ld	de,#_cmd + 6
   1832 EB                 5540 	ex	de,hl
   1833 71                 5541 	ld	(hl),c
   1834 23                 5542 	inc	hl
   1835 70                 5543 	ld	(hl),b
                           5544 ;demo.c:735: vdp_copier(&cmd);
   1836 C5                 5545 	push	bc
   1837 21rB4s16           5546 	ld	hl,#_cmd
   183A E5                 5547 	push	hl
   183B CDr00s00           5548 	call	_vdp_copier
   183E F1                 5549 	pop	af
   183F C1                 5550 	pop	bc
                           5551 ;demo.c:731: for (y = 0; y < 212; y+=1) {
   1840 03                 5552 	inc	bc
   1841 18 D9              5553 	jr	00103$
   1843                    5554 00106$:
                           5555 ;demo.c:739: twinited = 1;
   1843 21r4Es17           5556 	ld	hl,#_twinited + 0
   1846 36 01              5557 	ld	(hl), #0x01
   1848 21r4Fs17           5558 	ld	hl,#_twinited + 1
   184B 36 00              5559 	ld	(hl), #0x00
                           5560 ;demo.c:740: vdp_load_palette(twister_palette);
   184D 21r30s16           5561 	ld	hl,#_twister_palette
   1850 E5                 5562 	push	hl
   1851 CDr00s00           5563 	call	_vdp_load_palette
   1854 F1                 5564 	pop	af
                           5565 ;demo.c:741: drawstr2x("DSS",80,15);
   1855 21 50 0F           5566 	ld	hl,#0x0F50
   1858 E5                 5567 	push	hl
   1859 21r6Es19           5568 	ld	hl,#__str_9
   185C E5                 5569 	push	hl
   185D CDr67s16           5570 	call	_drawstr2x
   1860 F1                 5571 	pop	af
   1861 F1                 5572 	pop	af
   1862                    5573 00102$:
                           5574 ;demo.c:745: cmd.size_x = 70;
   1862 21rBCs16           5575 	ld	hl, #_cmd + 8
   1865 36 46              5576 	ld	(hl),#0x46
   1867 23                 5577 	inc	hl
   1868 36 00              5578 	ld	(hl),#0x00
                           5579 ;demo.c:746: cmd.size_y = 2;
   186A 21rBEs16           5580 	ld	hl, #_cmd + 10
   186D 36 02              5581 	ld	(hl),#0x02
   186F 23                 5582 	inc	hl
   1870 36 00              5583 	ld	(hl),#0x00
                           5584 ;demo.c:747: cmd.data = 0;
   1872 3E 00              5585 	ld	a,#0x00
   1874 32rC0s16           5586 	ld	(#_cmd + 12),a
                           5587 ;demo.c:748: cmd.argument = 0x04; // from 70xY to left
   1877 3E 04              5588 	ld	a,#0x04
   1879 32rC1s16           5589 	ld	(#_cmd + 13),a
                           5590 ;demo.c:749: cmd.command = 0xe0; // vram to vram, y only
   187C 01rC2s16           5591 	ld	bc,#_cmd + 14
   187F 3E E0              5592 	ld	a,#0xE0
   1881 02                 5593 	ld	(bc),a
                           5594 ;demo.c:750: cmd.source_x = 70;
   1882 21rB4s16           5595 	ld	hl,#_cmd
   1885 36 46              5596 	ld	(hl),#0x46
   1887 23                 5597 	inc	hl
   1888 36 00              5598 	ld	(hl),#0x00
                           5599 ;demo.c:751: cmd.dest_x = 70;
   188A 21rB8s16           5600 	ld	hl, #_cmd + 4
   188D 36 46              5601 	ld	(hl),#0x46
   188F 23                 5602 	inc	hl
   1890 36 00              5603 	ld	(hl),#0x00
                           5604 ;demo.c:753: for (y = 0; y < 212; y+=2) {
   1892 DD 36 FE 00        5605 	ld	-2 (ix),#0x00
   1896 DD 36 FF 00        5606 	ld	-1 (ix),#0x00
   189A                    5607 00107$:
   189A DD 7E FE           5608 	ld	a,-2 (ix)
   189D D6 D4              5609 	sub	a,#0xD4
   189F DD 7E FF           5610 	ld	a,-1 (ix)
   18A2 DE 00              5611 	sbc	a,#0x00
   18A4 F2rFDs18           5612 	jp	P,00110$
                           5613 ;demo.c:754: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   18A7 11rB6s16           5614 	ld	de,#_cmd + 2
   18AA DD 4E FE           5615 	ld	c,-2 (ix)
   18AD DD 46 FF           5616 	ld	b,-1 (ix)
   18B0 CB 28              5617 	sra	b
   18B2 CB 19              5618 	rr	c
   18B4 3Ar4Cs17           5619 	ld	a,(#_ff+0)
   18B7 81                 5620 	add	a,c
   18B8 4F                 5621 	ld	c,a
   18B9 3Ar4Ds17           5622 	ld	a,(#_ff+1)
   18BC 88                 5623 	adc	a,b
   18BD 06 00              5624 	ld	b,#0x00
   18BF 21r00s00           5625 	ld	hl,#_sintab
   18C2 09                 5626 	add	hl,bc
   18C3 7E                 5627 	ld	a,(hl)
   18C4 4F                 5628 	ld	c,a
   18C5 CB 29              5629 	sra	c
   18C7 79                 5630 	ld	a,c
   18C8 17                 5631 	rla	
   18C9 9F                 5632 	sbc	a,a
   18CA 47                 5633 	ld	b,a
   18CB 21 40 02           5634 	ld	hl,#0x0240
   18CE 09                 5635 	add	hl,bc
   18CF 4D                 5636 	ld	c,l
   18D0 44                 5637 	ld	b,h
   18D1 6B                 5638 	ld	l,e
   18D2 62                 5639 	ld	h,d
   18D3 71                 5640 	ld	(hl),c
   18D4 23                 5641 	inc	hl
   18D5 70                 5642 	ld	(hl),b
                           5643 ;demo.c:755: cmd.dest_y = y;
   18D6 21rBAs16           5644 	ld	hl, #_cmd + 6
   18D9 DD 7E FE           5645 	ld	a,-2 (ix)
   18DC 77                 5646 	ld	(hl),a
   18DD 23                 5647 	inc	hl
   18DE DD 7E FF           5648 	ld	a,-1 (ix)
   18E1 77                 5649 	ld	(hl),a
                           5650 ;demo.c:756: vdp_copier(&cmd);
   18E2 21rB4s16           5651 	ld	hl,#_cmd
   18E5 E5                 5652 	push	hl
   18E6 CDr00s00           5653 	call	_vdp_copier
   18E9 F1                 5654 	pop	af
                           5655 ;demo.c:753: for (y = 0; y < 212; y+=2) {
   18EA DD 7E FE           5656 	ld	a,-2 (ix)
   18ED C6 02              5657 	add	a,#0x02
   18EF DD 77 FE           5658 	ld	-2 (ix),a
   18F2 DD 7E FF           5659 	ld	a,-1 (ix)
   18F5 CE 00              5660 	adc	a,#0x00
   18F7 DD 77 FF           5661 	ld	-1 (ix),a
   18FA C3r9As18           5662 	jp	00107$
   18FD                    5663 00110$:
                           5664 ;demo.c:760: msx2_palette(4,PLY_PSGReg8+ff>>2,PLY_PSGReg9+ff>>3,ff>>2);
   18FD 21r4Cs17           5665 	ld	hl,#_ff + 0
   1900 4E                 5666 	ld	c,(hl)
   1901 21r4Ds17           5667 	ld	hl,#_ff + 1
   1904 46                 5668 	ld	b,(hl)
   1905 CB 28              5669 	sra	b
   1907 CB 19              5670 	rr	c
   1909 CB 28              5671 	sra	b
   190B CB 19              5672 	rr	c
   190D 21r00s00           5673 	ld	hl,#_PLY_PSGReg9 + 0
   1910 5E                 5674 	ld	e,(hl)
   1911 16 00              5675 	ld	d,#0x00
   1913 21r4Cs17           5676 	ld	hl,#_ff
   1916 7B                 5677 	ld	a,e
   1917 86                 5678 	add	a,(hl)
   1918 5F                 5679 	ld	e,a
   1919 7A                 5680 	ld	a,d
   191A 23                 5681 	inc	hl
   191B 8E                 5682 	adc	a,(hl)
   191C 57                 5683 	ld	d,a
   191D CB 2A              5684 	sra	d
   191F CB 1B              5685 	rr	e
   1921 CB 2A              5686 	sra	d
   1923 CB 1B              5687 	rr	e
   1925 CB 2A              5688 	sra	d
   1927 CB 1B              5689 	rr	e
   1929 43                 5690 	ld	b,e
   192A 21r00s00           5691 	ld	hl,#_PLY_PSGReg8 + 0
   192D 5E                 5692 	ld	e,(hl)
   192E 16 00              5693 	ld	d,#0x00
   1930 21r4Cs17           5694 	ld	hl,#_ff
   1933 7B                 5695 	ld	a,e
   1934 86                 5696 	add	a,(hl)
   1935 5F                 5697 	ld	e,a
   1936 7A                 5698 	ld	a,d
   1937 23                 5699 	inc	hl
   1938 8E                 5700 	adc	a,(hl)
   1939 57                 5701 	ld	d,a
   193A CB 2A              5702 	sra	d
   193C CB 1B              5703 	rr	e
   193E CB 2A              5704 	sra	d
   1940 CB 1B              5705 	rr	e
   1942 79                 5706 	ld	a,c
   1943 F5                 5707 	push	af
   1944 33                 5708 	inc	sp
   1945 C5                 5709 	push	bc
   1946 33                 5710 	inc	sp
   1947 53                 5711 	ld	d,e
   1948 1E 04              5712 	ld	e,#0x04
   194A D5                 5713 	push	de
   194B CDr00s00           5714 	call	_msx2_palette
   194E F1                 5715 	pop	af
   194F F1                 5716 	pop	af
                           5717 ;demo.c:762: font();
   1950 CDr3Cs17           5718 	call	_font
                           5719 ;demo.c:764: ff+=4;
   1953 21r4Cs17           5720 	ld	hl,#_ff
   1956 7E                 5721 	ld	a,(hl)
   1957 C6 04              5722 	add	a,#0x04
   1959 23                 5723 	inc	hl
   195A 2B                 5724 	dec	hl
   195B C5                 5725 	push	bc
   195C 4F                 5726 	ld	c, a
   195D 23                 5727 	inc	hl
   195E 7E                 5728 	ld	a, (hl)
   195F 47                 5729 	ld	b, a
   1960 79                 5730 	ld	a, c
   1961 2B                 5731 	dec	hl
   1962 77                 5732 	ld	(hl), a
   1963 78                 5733 	ld	a, b
   1964 C1                 5734 	pop	bc
   1965 CE 00              5735 	adc	a,#0x00
   1967 23                 5736 	inc	hl
   1968 77                 5737 	ld	(hl),a
   1969 DD F9              5738 	ld	sp,ix
   196B DD E1              5739 	pop	ix
   196D C9                 5740 	ret
   196E                    5741 _twister_end::
   196E                    5742 __str_9:
   196E 44 53 53           5743 	.ascii "DSS"
   1971 00                 5744 	.db 0x00
                           5745 ;demo.c:775: void bulbs() {
                           5746 ;	---------------------------------
                           5747 ; Function bulbs
                           5748 ; ---------------------------------
   1972                    5749 _bulbs_start::
   1972                    5750 _bulbs:
   1972 DD E5              5751 	push	ix
   1974 DD 21 00 00        5752 	ld	ix,#0
   1978 DD 39              5753 	add	ix,sp
   197A 21 FA FF           5754 	ld	hl,#-6
   197D 39                 5755 	add	hl,sp
   197E F9                 5756 	ld	sp,hl
                           5757 ;demo.c:779: ender+=enderdir;
   197F 21r58s17           5758 	ld	hl,#_enderdir
   1982 D5                 5759 	push	de
   1983 FD 21r56s17        5760 	ld	iy,#_ender
   1987 FD E5              5761 	push	iy
   1989 D1                 5762 	pop	de
   198A 1A                 5763 	ld	a,(de)
   198B 86                 5764 	add	a,(hl)
   198C 13                 5765 	inc	de
   198D 1B                 5766 	dec	de
   198E C5                 5767 	push	bc
   198F 4F                 5768 	ld	c, a
   1990 13                 5769 	inc	de
   1991 1A                 5770 	ld	a, (de)
   1992 47                 5771 	ld	b, a
   1993 79                 5772 	ld	a, c
   1994 1B                 5773 	dec	de
   1995 12                 5774 	ld	(de), a
   1996 78                 5775 	ld	a, b
   1997 C1                 5776 	pop	bc
   1998 23                 5777 	inc	hl
   1999 8E                 5778 	adc	a,(hl)
   199A 13                 5779 	inc	de
   199B 12                 5780 	ld	(de),a
   199C D1                 5781 	pop	de
                           5782 ;demo.c:780: if (ender < 2) { enderdir = -enderdir; }
   199D 3Ar56s17           5783 	ld	a,(#_ender+0)
   19A0 D6 02              5784 	sub	a,#0x02
   19A2 3Ar57s17           5785 	ld	a,(#_ender+1)
   19A5 DE 00              5786 	sbc	a,#0x00
   19A7 F2rCBs19           5787 	jp	P,00102$
   19AA AF                 5788 	xor	a,a
   19AB FD 21r58s17        5789 	ld	iy,#_enderdir
   19AF 3E 00              5790 	ld	a,#0x00
   19B1 FD 9E 00           5791 	sbc	a,0 (iy)
   19B4 FD 21r58s17        5792 	ld	iy,#_enderdir
   19B8 FD 77 00           5793 	ld	0 (iy),a
   19BB FD 21r58s17        5794 	ld	iy,#_enderdir
   19BF 3E 00              5795 	ld	a,#0x00
   19C1 FD 9E 01           5796 	sbc	a,1 (iy)
   19C4 FD 21r58s17        5797 	ld	iy,#_enderdir
   19C8 FD 77 01           5798 	ld	1 (iy),a
   19CB                    5799 00102$:
                           5800 ;demo.c:781: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   19CB 3Ar56s17           5801 	ld	a,(#_ender+0)
   19CE D6 D4              5802 	sub	a,#0xD4
   19D0 3Ar57s17           5803 	ld	a,(#_ender+1)
   19D3 DE 00              5804 	sbc	a,#0x00
   19D5 FArFBs19           5805 	jp	M,00104$
   19D8 AF                 5806 	xor	a,a
   19D9 FD 21r58s17        5807 	ld	iy,#_enderdir
   19DD 3E 00              5808 	ld	a,#0x00
   19DF FD 9E 00           5809 	sbc	a,0 (iy)
   19E2 21r58s17           5810 	ld	hl,#_enderdir + 0
   19E5 77                 5811 	ld	(hl), a
   19E6 FD 21r58s17        5812 	ld	iy,#_enderdir
   19EA 3E 00              5813 	ld	a,#0x00
   19EC FD 9E 01           5814 	sbc	a,1 (iy)
   19EF 21r59s17           5815 	ld	hl,#_enderdir + 1
   19F2 77                 5816 	ld	(hl), a
   19F3 2Ar5As17           5817 	ld	hl,(_sy)
   19F6 2B                 5818 	dec	hl
   19F7 2B                 5819 	dec	hl
   19F8 22r5As17           5820 	ld	(_sy),hl
   19FB                    5821 00104$:
                           5822 ;demo.c:783: enderend = ender + 92;
   19FB 3Ar56s17           5823 	ld	a,(#_ender+0)
   19FE C6 5C              5824 	add	a,#0x5C
   1A00 DD 77 FE           5825 	ld	-2 (ix),a
   1A03 3Ar57s17           5826 	ld	a,(#_ender+1)
   1A06 CE 00              5827 	adc	a,#0x00
   1A08 DD 77 FF           5828 	ld	-1 (ix),a
                           5829 ;demo.c:785: if (enderend > 212) enderend = 212;
   1A0B 3E D4              5830 	ld	a,#0xD4
   1A0D DD 96 FE           5831 	sub	a,-2 (ix)
   1A10 3E 00              5832 	ld	a,#0x00
   1A12 DD 9E FF           5833 	sbc	a,-1 (ix)
   1A15 F2r20s1A           5834 	jp	P,00106$
   1A18 DD 36 FE D4        5835 	ld	-2 (ix),#0xD4
   1A1C DD 36 FF 00        5836 	ld	-1 (ix),#0x00
   1A20                    5837 00106$:
                           5838 ;demo.c:786: if (enderend > 212-16) sy = 16-(212-enderend);
   1A20 3E C4              5839 	ld	a,#0xC4
   1A22 DD 96 FE           5840 	sub	a,-2 (ix)
   1A25 3E 00              5841 	ld	a,#0x00
   1A27 DD 9E FF           5842 	sbc	a,-1 (ix)
   1A2A F2r45s1A           5843 	jp	P,00108$
   1A2D 3E D4              5844 	ld	a,#0xD4
   1A2F DD 96 FE           5845 	sub	a,-2 (ix)
   1A32 5F                 5846 	ld	e,a
   1A33 3E 00              5847 	ld	a,#0x00
   1A35 DD 9E FF           5848 	sbc	a,-1 (ix)
   1A38 57                 5849 	ld	d,a
   1A39 21r5As17           5850 	ld	hl,#_sy
   1A3C 3E 10              5851 	ld	a,#0x10
   1A3E 93                 5852 	sub	a,e
   1A3F 77                 5853 	ld	(hl),a
   1A40 3E 00              5854 	ld	a,#0x00
   1A42 9A                 5855 	sbc	a,d
   1A43 23                 5856 	inc	hl
   1A44 77                 5857 	ld	(hl),a
   1A45                    5858 00108$:
                           5859 ;demo.c:788: if(bulbflipper == 1) {
   1A45 3Ar50s17           5860 	ld	a,(#_bulbflipper+0)
   1A48 D6 01              5861 	sub	a,#0x01
   1A4A 20 06              5862 	jr	NZ,00133$
   1A4C 3Ar51s17           5863 	ld	a,(#_bulbflipper+1)
   1A4F B7                 5864 	or	a,a
   1A50 28 03              5865 	jr	Z,00134$
   1A52                    5866 00133$:
   1A52 C3r0Bs1B           5867 	jp	00110$
   1A55                    5868 00134$:
                           5869 ;demo.c:789: cmd.size_x = 72;
   1A55 11rBCs16           5870 	ld	de,#_cmd + 8
   1A58 EB                 5871 	ex	de,hl
   1A59 36 48              5872 	ld	(hl),#0x48
   1A5B 23                 5873 	inc	hl
   1A5C 36 00              5874 	ld	(hl),#0x00
                           5875 ;demo.c:790: cmd.size_y = sy;
   1A5E 11rBEs16           5876 	ld	de,#_cmd + 10
   1A61 ED 4Br5As17        5877 	ld	bc,(_sy)
   1A65 6B                 5878 	ld	l,e
   1A66 62                 5879 	ld	h,d
   1A67 71                 5880 	ld	(hl),c
   1A68 23                 5881 	inc	hl
   1A69 70                 5882 	ld	(hl),b
                           5883 ;demo.c:791: cmd.data = 0;
   1A6A 3E 00              5884 	ld	a,#0x00
   1A6C 32rC0s16           5885 	ld	(#_cmd + 12),a
                           5886 ;demo.c:792: cmd.argument = 0x04; // from 72xY to left
   1A6F 3E 04              5887 	ld	a,#0x04
   1A71 32rC1s16           5888 	ld	(#_cmd + 13),a
                           5889 ;demo.c:793: cmd.command = 0xe0; // vram to vram, y only
   1A74 01rC2s16           5890 	ld	bc,#_cmd + 14
   1A77 3E E0              5891 	ld	a,#0xE0
   1A79 02                 5892 	ld	(bc),a
                           5893 ;demo.c:794: cmd.source_x = 72;
   1A7A 21rB4s16           5894 	ld	hl,#_cmd
   1A7D 36 48              5895 	ld	(hl),#0x48
   1A7F 23                 5896 	inc	hl
   1A80 36 00              5897 	ld	(hl),#0x00
                           5898 ;demo.c:795: cmd.dest_x = 72;
   1A82 21rB8s16           5899 	ld	hl, #_cmd + 4
   1A85 36 48              5900 	ld	(hl),#0x48
   1A87 23                 5901 	inc	hl
   1A88 36 00              5902 	ld	(hl),#0x00
                           5903 ;demo.c:797: for (y = ender; y < enderend; y+=16) {
   1A8A ED 4Br56s17        5904 	ld	bc,(_ender)
   1A8E DD 71 FC           5905 	ld	-4 (ix),c
   1A91 DD 70 FD           5906 	ld	-3 (ix),b
   1A94                    5907 00112$:
   1A94 DD 7E FC           5908 	ld	a,-4 (ix)
   1A97 DD 96 FE           5909 	sub	a,-2 (ix)
   1A9A DD 7E FD           5910 	ld	a,-3 (ix)
   1A9D DD 9E FF           5911 	sbc	a,-1 (ix)
   1AA0 F2rF2s1A           5912 	jp	P,00115$
                           5913 ;demo.c:798: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   1AA3 01rB6s16           5914 	ld	bc,#_cmd + 2
   1AA6 3Ar52s17           5915 	ld	a,(#_ff1+0)
   1AA9 DD 86 FC           5916 	add	a,-4 (ix)
   1AAC 5F                 5917 	ld	e,a
   1AAD 3Ar53s17           5918 	ld	a,(#_ff1+1)
   1AB0 DD 8E FD           5919 	adc	a,-3 (ix)
   1AB3 16 00              5920 	ld	d,#0x00
   1AB5 21r00s00           5921 	ld	hl,#_sintab
   1AB8 19                 5922 	add	hl,de
   1AB9 5E                 5923 	ld	e,(hl)
   1ABA CB 2B              5924 	sra	e
   1ABC 7B                 5925 	ld	a,e
   1ABD 17                 5926 	rla	
   1ABE 9F                 5927 	sbc	a,a
   1ABF 57                 5928 	ld	d,a
   1AC0 21 40 01           5929 	ld	hl,#0x0140
   1AC3 19                 5930 	add	hl,de
   1AC4 EB                 5931 	ex	de,hl
   1AC5 69                 5932 	ld	l,c
   1AC6 60                 5933 	ld	h,b
   1AC7 73                 5934 	ld	(hl),e
   1AC8 23                 5935 	inc	hl
   1AC9 72                 5936 	ld	(hl),d
                           5937 ;demo.c:799: cmd.dest_y = y;
   1ACA 11rBAs16           5938 	ld	de,#_cmd + 6
   1ACD EB                 5939 	ex	de,hl
   1ACE DD 7E FC           5940 	ld	a,-4 (ix)
   1AD1 77                 5941 	ld	(hl),a
   1AD2 23                 5942 	inc	hl
   1AD3 DD 7E FD           5943 	ld	a,-3 (ix)
   1AD6 77                 5944 	ld	(hl),a
                           5945 ;demo.c:800: vdp_copier(&cmd);
   1AD7 21rB4s16           5946 	ld	hl,#_cmd
   1ADA E5                 5947 	push	hl
   1ADB CDr00s00           5948 	call	_vdp_copier
   1ADE F1                 5949 	pop	af
                           5950 ;demo.c:797: for (y = ender; y < enderend; y+=16) {
   1ADF DD 7E FC           5951 	ld	a,-4 (ix)
   1AE2 C6 10              5952 	add	a,#0x10
   1AE4 DD 77 FC           5953 	ld	-4 (ix),a
   1AE7 DD 7E FD           5954 	ld	a,-3 (ix)
   1AEA CE 00              5955 	adc	a,#0x00
   1AEC DD 77 FD           5956 	ld	-3 (ix),a
   1AEF C3r94s1A           5957 	jp	00112$
   1AF2                    5958 00115$:
                           5959 ;demo.c:802: ff1+=4;
   1AF2 21r52s17           5960 	ld	hl,#_ff1
   1AF5 7E                 5961 	ld	a,(hl)
   1AF6 C6 04              5962 	add	a,#0x04
   1AF8 23                 5963 	inc	hl
   1AF9 2B                 5964 	dec	hl
   1AFA C5                 5965 	push	bc
   1AFB 4F                 5966 	ld	c, a
   1AFC 23                 5967 	inc	hl
   1AFD 7E                 5968 	ld	a, (hl)
   1AFE 47                 5969 	ld	b, a
   1AFF 79                 5970 	ld	a, c
   1B00 2B                 5971 	dec	hl
   1B01 77                 5972 	ld	(hl), a
   1B02 78                 5973 	ld	a, b
   1B03 C1                 5974 	pop	bc
   1B04 CE 00              5975 	adc	a,#0x00
   1B06 23                 5976 	inc	hl
   1B07 77                 5977 	ld	(hl),a
   1B08 C3rB0s1B           5978 	jp	00111$
   1B0B                    5979 00110$:
                           5980 ;demo.c:806: cmd.size_x = 72;
   1B0B 11rBCs16           5981 	ld	de,#_cmd + 8
   1B0E EB                 5982 	ex	de,hl
   1B0F 36 48              5983 	ld	(hl),#0x48
   1B11 23                 5984 	inc	hl
   1B12 36 00              5985 	ld	(hl),#0x00
                           5986 ;demo.c:807: cmd.size_y = sy;
   1B14 01rBEs16           5987 	ld	bc,#_cmd + 10
   1B17 ED 5Br5As17        5988 	ld	de,(_sy)
   1B1B 69                 5989 	ld	l,c
   1B1C 60                 5990 	ld	h,b
   1B1D 73                 5991 	ld	(hl),e
   1B1E 23                 5992 	inc	hl
   1B1F 72                 5993 	ld	(hl),d
                           5994 ;demo.c:808: cmd.data = 0;
   1B20 11rC0s16           5995 	ld	de,#_cmd + 12
   1B23 3E 00              5996 	ld	a,#0x00
   1B25 12                 5997 	ld	(de),a
                           5998 ;demo.c:809: cmd.argument = 0x00; // from 182xY to right
   1B26 11rC1s16           5999 	ld	de,#_cmd + 13
   1B29 3E 00              6000 	ld	a,#0x00
   1B2B 12                 6001 	ld	(de),a
                           6002 ;demo.c:810: cmd.command = 0xe0; // vram to vram, y only
   1B2C 11rC2s16           6003 	ld	de,#_cmd + 14
   1B2F 3E E0              6004 	ld	a,#0xE0
   1B31 12                 6005 	ld	(de),a
                           6006 ;demo.c:811: cmd.source_x = 182;
   1B32 21rB4s16           6007 	ld	hl,#_cmd
   1B35 36 B6              6008 	ld	(hl),#0xB6
   1B37 23                 6009 	inc	hl
   1B38 36 00              6010 	ld	(hl),#0x00
                           6011 ;demo.c:812: cmd.dest_x = 182;
   1B3A 11rB8s16           6012 	ld	de,#_cmd + 4
   1B3D 6B                 6013 	ld	l,e
   1B3E 62                 6014 	ld	h,d
   1B3F 36 B6              6015 	ld	(hl),#0xB6
   1B41 23                 6016 	inc	hl
   1B42 36 00              6017 	ld	(hl),#0x00
                           6018 ;demo.c:814: for (y = ender; y < enderend; y+=16) {
   1B44 ED 4Br56s17        6019 	ld	bc,(_ender)
   1B48                    6020 00116$:
   1B48 79                 6021 	ld	a,c
   1B49 DD 96 FE           6022 	sub	a,-2 (ix)
   1B4C 78                 6023 	ld	a,b
   1B4D DD 9E FF           6024 	sbc	a,-1 (ix)
   1B50 F2r9As1B           6025 	jp	P,00119$
                           6026 ;demo.c:815: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1B53 21rB6s16           6027 	ld	hl,#_cmd + 2
   1B56 DD 75 FA           6028 	ld	-6 (ix),l
   1B59 DD 74 FB           6029 	ld	-5 (ix),h
   1B5C 3Ar54s17           6030 	ld	a,(#_ff2+0)
   1B5F 81                 6031 	add	a,c
   1B60 5F                 6032 	ld	e,a
   1B61 3Ar55s17           6033 	ld	a,(#_ff2+1)
   1B64 88                 6034 	adc	a,b
   1B65 16 00              6035 	ld	d,#0x00
   1B67 21r00s00           6036 	ld	hl,#_sintab
   1B6A 19                 6037 	add	hl,de
   1B6B 5E                 6038 	ld	e,(hl)
   1B6C CB 2B              6039 	sra	e
   1B6E 7B                 6040 	ld	a,e
   1B6F 17                 6041 	rla	
   1B70 9F                 6042 	sbc	a,a
   1B71 57                 6043 	ld	d,a
   1B72 21 40 01           6044 	ld	hl,#0x0140
   1B75 19                 6045 	add	hl,de
   1B76 EB                 6046 	ex	de,hl
   1B77 DD 6E FA           6047 	ld	l,-6 (ix)
   1B7A DD 66 FB           6048 	ld	h,-5 (ix)
   1B7D 73                 6049 	ld	(hl),e
   1B7E 23                 6050 	inc	hl
   1B7F 72                 6051 	ld	(hl),d
                           6052 ;demo.c:816: cmd.dest_y = y;
   1B80 11rBAs16           6053 	ld	de,#_cmd + 6
   1B83 EB                 6054 	ex	de,hl
   1B84 71                 6055 	ld	(hl),c
   1B85 23                 6056 	inc	hl
   1B86 70                 6057 	ld	(hl),b
                           6058 ;demo.c:817: vdp_copier(&cmd);
   1B87 C5                 6059 	push	bc
   1B88 21rB4s16           6060 	ld	hl,#_cmd
   1B8B E5                 6061 	push	hl
   1B8C CDr00s00           6062 	call	_vdp_copier
   1B8F F1                 6063 	pop	af
   1B90 C1                 6064 	pop	bc
                           6065 ;demo.c:814: for (y = ender; y < enderend; y+=16) {
   1B91 21 10 00           6066 	ld	hl,#0x0010
   1B94 09                 6067 	add	hl,bc
   1B95 4D                 6068 	ld	c,l
   1B96 44                 6069 	ld	b,h
   1B97 C3r48s1B           6070 	jp	00116$
   1B9A                    6071 00119$:
                           6072 ;demo.c:819: ff2+=4;
   1B9A 21r54s17           6073 	ld	hl,#_ff2
   1B9D 7E                 6074 	ld	a,(hl)
   1B9E C6 04              6075 	add	a,#0x04
   1BA0 23                 6076 	inc	hl
   1BA1 2B                 6077 	dec	hl
   1BA2 C5                 6078 	push	bc
   1BA3 4F                 6079 	ld	c, a
   1BA4 23                 6080 	inc	hl
   1BA5 7E                 6081 	ld	a, (hl)
   1BA6 47                 6082 	ld	b, a
   1BA7 79                 6083 	ld	a, c
   1BA8 2B                 6084 	dec	hl
   1BA9 77                 6085 	ld	(hl), a
   1BAA 78                 6086 	ld	a, b
   1BAB C1                 6087 	pop	bc
   1BAC CE 00              6088 	adc	a,#0x00
   1BAE 23                 6089 	inc	hl
   1BAF 77                 6090 	ld	(hl),a
   1BB0                    6091 00111$:
                           6092 ;demo.c:822: bulbflipper = -bulbflipper;
   1BB0 AF                 6093 	xor	a,a
   1BB1 FD 21r50s17        6094 	ld	iy,#_bulbflipper
   1BB5 3E 00              6095 	ld	a,#0x00
   1BB7 FD 9E 00           6096 	sbc	a,0 (iy)
   1BBA 21r50s17           6097 	ld	hl,#_bulbflipper + 0
   1BBD 77                 6098 	ld	(hl), a
   1BBE FD 21r50s17        6099 	ld	iy,#_bulbflipper
   1BC2 3E 00              6100 	ld	a,#0x00
   1BC4 FD 9E 01           6101 	sbc	a,1 (iy)
   1BC7 21r51s17           6102 	ld	hl,#_bulbflipper + 1
   1BCA 77                 6103 	ld	(hl), a
   1BCB DD F9              6104 	ld	sp,ix
   1BCD DD E1              6105 	pop	ix
   1BCF C9                 6106 	ret
   1BD0                    6107 _bulbs_end::
                           6108 ;demo.c:836: void animplay() {
                           6109 ;	---------------------------------
                           6110 ; Function animplay
                           6111 ; ---------------------------------
   1BD0                    6112 _animplay_start::
   1BD0                    6113 _animplay:
   1BD0 DD E5              6114 	push	ix
   1BD2 DD 21 00 00        6115 	ld	ix,#0
   1BD6 DD 39              6116 	add	ix,sp
   1BD8 F5                 6117 	push	af
   1BD9 3B                 6118 	dec	sp
                           6119 ;demo.c:841: if (anim_init == 0) {
   1BDA 3Ar64s17           6120 	ld	a,(#_anim_init+0)
   1BDD 21r65s17           6121 	ld	hl,#_anim_init + 1
   1BE0 B6                 6122 	or	a,(hl)
   1BE1 C2r7Cs1D           6123 	jp	NZ,00120$
                           6124 ;demo.c:842: drawsine("L O A D I N G",8,180);
   1BE4 21 08 B4           6125 	ld	hl,#0xB408
   1BE7 E5                 6126 	push	hl
   1BE8 21r64s1E           6127 	ld	hl,#__str_10
   1BEB E5                 6128 	push	hl
   1BEC CDrB8s16           6129 	call	_drawsine
   1BEF F1                 6130 	pop	af
   1BF0 F1                 6131 	pop	af
                           6132 ;demo.c:845: uninstall_isr();
   1BF1 CDr00s00           6133 	call	_uninstall_isr
                           6134 ;demo.c:846: PLY_Stop();
   1BF4 CDr00s00           6135 	call	_PLY_Stop
                           6136 ;demo.c:847: PLY_SendRegisters();
   1BF7 CDr00s00           6137 	call	_PLY_SendRegisters
                           6138 ;demo.c:849: pause();
   1BFA CDr82s0A           6139 	call	_pause
                           6140 ;demo.c:850: pause();
   1BFD CDr82s0A           6141 	call	_pause
                           6142 ;demo.c:852: scratch_clear();
   1C00 CDr90s09           6143 	call	_scratch_clear
                           6144 ;demo.c:853: vdp_load_palette(scratch);
   1C03 21r50s15           6145 	ld	hl,#_scratch
   1C06 E5                 6146 	push	hl
   1C07 CDr00s00           6147 	call	_vdp_load_palette
   1C0A F1                 6148 	pop	af
                           6149 ;demo.c:855: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1C0B 21 00 00           6150 	ld	hl,#0x0000
   1C0E E5                 6151 	push	hl
   1C0F 2E 01              6152 	ld	l, #0x01
   1C11 E5                 6153 	push	hl
   1C12 2E 00              6154 	ld	l, #0x00
   1C14 E5                 6155 	push	hl
   1C15 21 09 37           6156 	ld	hl,#0x3709
   1C18 E5                 6157 	push	hl
   1C19 21r72s1E           6158 	ld	hl,#__str_11
   1C1C E5                 6159 	push	hl
   1C1D CDr99s0B           6160 	call	_pck_load
   1C20 FD 21 0A 00        6161 	ld	iy,#0x000A
   1C24 FD 39              6162 	add	iy,sp
   1C26 FD F9              6163 	ld	sp,iy
                           6164 ;demo.c:859: cmd.size_x = 256;
   1C28 21rBCs16           6165 	ld	hl, #_cmd + 8
   1C2B 36 00              6166 	ld	(hl),#0x00
   1C2D 23                 6167 	inc	hl
   1C2E 36 01              6168 	ld	(hl),#0x01
                           6169 ;demo.c:860: cmd.size_y = 212;
   1C30 21rBEs16           6170 	ld	hl, #_cmd + 10
   1C33 36 D4              6171 	ld	(hl),#0xD4
   1C35 23                 6172 	inc	hl
   1C36 36 00              6173 	ld	(hl),#0x00
                           6174 ;demo.c:861: cmd.data = 0;
                           6175 ;demo.c:862: cmd.argument = 0x00;
   1C38 3E 00              6176 	ld	a,#0x00
   1C3A 32rC0s16           6177 	ld	(#_cmd + 12),a
   1C3D 32rC1s16           6178 	ld	(#_cmd + 13),a
                           6179 ;demo.c:863: cmd.command = 0xd0; 
   1C40 01rC2s16           6180 	ld	bc,#_cmd + 14
   1C43 3E D0              6181 	ld	a,#0xD0
   1C45 02                 6182 	ld	(bc),a
                           6183 ;demo.c:864: cmd.source_x = 0;
   1C46 21rB4s16           6184 	ld	hl,#_cmd
   1C49 36 00              6185 	ld	(hl),#0x00
   1C4B 23                 6186 	inc	hl
   1C4C 36 00              6187 	ld	(hl),#0x00
                           6188 ;demo.c:865: cmd.source_y = 0;
   1C4E 21rB6s16           6189 	ld	hl, #_cmd + 2
   1C51 36 00              6190 	ld	(hl),#0x00
   1C53 23                 6191 	inc	hl
   1C54 36 00              6192 	ld	(hl),#0x00
                           6193 ;demo.c:866: cmd.dest_x = 0;
   1C56 21rB8s16           6194 	ld	hl, #_cmd + 4
   1C59 36 00              6195 	ld	(hl),#0x00
   1C5B 23                 6196 	inc	hl
   1C5C 36 00              6197 	ld	(hl),#0x00
                           6198 ;demo.c:867: cmd.dest_y = 256;
   1C5E 21rBAs16           6199 	ld	hl, #_cmd + 6
   1C61 36 00              6200 	ld	(hl),#0x00
   1C63 23                 6201 	inc	hl
   1C64 36 01              6202 	ld	(hl),#0x01
                           6203 ;demo.c:868: vdp_copier(&cmd);
   1C66 21rB4s16           6204 	ld	hl,#_cmd
   1C69 E5                 6205 	push	hl
   1C6A CDr00s00           6206 	call	_vdp_copier
   1C6D F1                 6207 	pop	af
                           6208 ;demo.c:870: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1C6E 21 00 00           6209 	ld	hl,#0x0000
   1C71 E5                 6210 	push	hl
   1C72 2E 01              6211 	ld	l, #0x01
   1C74 E5                 6212 	push	hl
   1C75 2E 00              6213 	ld	l, #0x00
   1C77 E5                 6214 	push	hl
   1C78 21 76 3E           6215 	ld	hl,#0x3E76
   1C7B E5                 6216 	push	hl
   1C7C 21r7Es1E           6217 	ld	hl,#__str_12
   1C7F E5                 6218 	push	hl
   1C80 CDr99s0B           6219 	call	_pck_load
   1C83 FD 21 0A 00        6220 	ld	iy,#0x000A
   1C87 FD 39              6221 	add	iy,sp
   1C89 FD F9              6222 	ld	sp,iy
                           6223 ;demo.c:872: cmd.size_x = 256;
   1C8B 21rBCs16           6224 	ld	hl, #_cmd + 8
   1C8E 36 00              6225 	ld	(hl),#0x00
   1C90 23                 6226 	inc	hl
   1C91 36 01              6227 	ld	(hl),#0x01
                           6228 ;demo.c:873: cmd.size_y = 212;
   1C93 21rBEs16           6229 	ld	hl, #_cmd + 10
   1C96 36 D4              6230 	ld	(hl),#0xD4
   1C98 23                 6231 	inc	hl
   1C99 36 00              6232 	ld	(hl),#0x00
                           6233 ;demo.c:874: cmd.data = 0;
                           6234 ;demo.c:875: cmd.argument = 0x00;
   1C9B 3E 00              6235 	ld	a,#0x00
   1C9D 32rC0s16           6236 	ld	(#_cmd + 12),a
   1CA0 32rC1s16           6237 	ld	(#_cmd + 13),a
                           6238 ;demo.c:876: cmd.command = 0xd0; 
   1CA3 01rC2s16           6239 	ld	bc,#_cmd + 14
   1CA6 3E D0              6240 	ld	a,#0xD0
   1CA8 02                 6241 	ld	(bc),a
                           6242 ;demo.c:877: cmd.source_x = 0;
   1CA9 21rB4s16           6243 	ld	hl,#_cmd
   1CAC 36 00              6244 	ld	(hl),#0x00
   1CAE 23                 6245 	inc	hl
   1CAF 36 00              6246 	ld	(hl),#0x00
                           6247 ;demo.c:878: cmd.source_y = 0;
   1CB1 21rB6s16           6248 	ld	hl, #_cmd + 2
   1CB4 36 00              6249 	ld	(hl),#0x00
   1CB6 23                 6250 	inc	hl
   1CB7 36 00              6251 	ld	(hl),#0x00
                           6252 ;demo.c:879: cmd.dest_x = 0;
   1CB9 21rB8s16           6253 	ld	hl, #_cmd + 4
   1CBC 36 00              6254 	ld	(hl),#0x00
   1CBE 23                 6255 	inc	hl
   1CBF 36 00              6256 	ld	(hl),#0x00
                           6257 ;demo.c:880: cmd.dest_y = 512;
   1CC1 21rBAs16           6258 	ld	hl, #_cmd + 6
   1CC4 36 00              6259 	ld	(hl),#0x00
   1CC6 23                 6260 	inc	hl
   1CC7 36 02              6261 	ld	(hl),#0x02
                           6262 ;demo.c:881: vdp_copier(&cmd);
   1CC9 21rB4s16           6263 	ld	hl,#_cmd
   1CCC E5                 6264 	push	hl
   1CCD CDr00s00           6265 	call	_vdp_copier
   1CD0 F1                 6266 	pop	af
                           6267 ;demo.c:884: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   1CD1 21 00 00           6268 	ld	hl,#0x0000
   1CD4 E5                 6269 	push	hl
   1CD5 2E 01              6270 	ld	l, #0x01
   1CD7 E5                 6271 	push	hl
   1CD8 2E 00              6272 	ld	l, #0x00
   1CDA E5                 6273 	push	hl
   1CDB 21 9E 3A           6274 	ld	hl,#0x3A9E
   1CDE E5                 6275 	push	hl
   1CDF 21r8As1E           6276 	ld	hl,#__str_13
   1CE2 E5                 6277 	push	hl
   1CE3 CDr99s0B           6278 	call	_pck_load
   1CE6 FD 21 0A 00        6279 	ld	iy,#0x000A
   1CEA FD 39              6280 	add	iy,sp
   1CEC FD F9              6281 	ld	sp,iy
                           6282 ;demo.c:886: cmd.size_x = 256;
   1CEE 21rBCs16           6283 	ld	hl, #_cmd + 8
   1CF1 36 00              6284 	ld	(hl),#0x00
   1CF3 23                 6285 	inc	hl
   1CF4 36 01              6286 	ld	(hl),#0x01
                           6287 ;demo.c:887: cmd.size_y = 212;
   1CF6 21rBEs16           6288 	ld	hl, #_cmd + 10
   1CF9 36 D4              6289 	ld	(hl),#0xD4
   1CFB 23                 6290 	inc	hl
   1CFC 36 00              6291 	ld	(hl),#0x00
                           6292 ;demo.c:888: cmd.data = 0;
                           6293 ;demo.c:889: cmd.argument = 0x00;
   1CFE 3E 00              6294 	ld	a,#0x00
   1D00 32rC0s16           6295 	ld	(#_cmd + 12),a
   1D03 32rC1s16           6296 	ld	(#_cmd + 13),a
                           6297 ;demo.c:890: cmd.command = 0xd0; 
   1D06 01rC2s16           6298 	ld	bc,#_cmd + 14
   1D09 3E D0              6299 	ld	a,#0xD0
   1D0B 02                 6300 	ld	(bc),a
                           6301 ;demo.c:891: cmd.source_x = 0;
   1D0C 21rB4s16           6302 	ld	hl,#_cmd
   1D0F 36 00              6303 	ld	(hl),#0x00
   1D11 23                 6304 	inc	hl
   1D12 36 00              6305 	ld	(hl),#0x00
                           6306 ;demo.c:892: cmd.source_y = 0;
   1D14 21rB6s16           6307 	ld	hl, #_cmd + 2
   1D17 36 00              6308 	ld	(hl),#0x00
   1D19 23                 6309 	inc	hl
   1D1A 36 00              6310 	ld	(hl),#0x00
                           6311 ;demo.c:893: cmd.dest_x = 0;
   1D1C 21rB8s16           6312 	ld	hl, #_cmd + 4
   1D1F 36 00              6313 	ld	(hl),#0x00
   1D21 23                 6314 	inc	hl
   1D22 36 00              6315 	ld	(hl),#0x00
                           6316 ;demo.c:894: cmd.dest_y = 768;
   1D24 21rBAs16           6317 	ld	hl, #_cmd + 6
   1D27 36 00              6318 	ld	(hl),#0x00
   1D29 23                 6319 	inc	hl
   1D2A 36 03              6320 	ld	(hl),#0x03
                           6321 ;demo.c:895: vdp_copier(&cmd);
   1D2C 21rB4s16           6322 	ld	hl,#_cmd
   1D2F E5                 6323 	push	hl
   1D30 CDr00s00           6324 	call	_vdp_copier
   1D33 F1                 6325 	pop	af
                           6326 ;demo.c:897: vdp_register(9,130); // 50hz,212
   1D34 21 09 82           6327 	ld	hl,#0x8209
   1D37 E5                 6328 	push	hl
   1D38 CDr00s00           6329 	call	_vdp_register
   1D3B F1                 6330 	pop	af
                           6331 ;demo.c:899: scratch_clear();
   1D3C CDr90s09           6332 	call	_scratch_clear
                           6333 ;demo.c:901: vdp_set_write_address(0, 0);
   1D3F 21 00 00           6334 	ld	hl,#0x0000
   1D42 E5                 6335 	push	hl
   1D43 3E 00              6336 	ld	a,#0x00
   1D45 F5                 6337 	push	af
   1D46 33                 6338 	inc	sp
   1D47 CDr00s00           6339 	call	_vdp_set_write_address
   1D4A F1                 6340 	pop	af
   1D4B 33                 6341 	inc	sp
                           6342 ;demo.c:903: for (y = 0; y < 212; y++) { 
   1D4C 0E D4              6343 	ld	c,#0xD4
   1D4E                    6344 00109$:
                           6345 ;demo.c:904: vdp_load_screen(scratch, 128);
   1D4E C5                 6346 	push	bc
   1D4F 3E 80              6347 	ld	a,#0x80
   1D51 F5                 6348 	push	af
   1D52 33                 6349 	inc	sp
   1D53 21r50s15           6350 	ld	hl,#_scratch
   1D56 E5                 6351 	push	hl
   1D57 CDr00s00           6352 	call	_vdp_load_screen
   1D5A F1                 6353 	pop	af
   1D5B 33                 6354 	inc	sp
   1D5C C1                 6355 	pop	bc
   1D5D 0D                 6356 	dec	c
                           6357 ;demo.c:903: for (y = 0; y < 212; y++) { 
   1D5E AF                 6358 	xor	a,a
   1D5F B1                 6359 	or	a,c
   1D60 20 EC              6360 	jr	NZ,00109$
                           6361 ;demo.c:907: install_isr(my_isr);
   1D62 21rECs07           6362 	ld	hl,#_my_isr
   1D65 E5                 6363 	push	hl
   1D66 CDr00s00           6364 	call	_install_isr
   1D69 F1                 6365 	pop	af
                           6366 ;demo.c:908: anim_init = 1;
   1D6A 21r64s17           6367 	ld	hl,#_anim_init + 0
   1D6D 36 01              6368 	ld	(hl), #0x01
   1D6F 21r65s17           6369 	ld	hl,#_anim_init + 1
   1D72 36 00              6370 	ld	(hl), #0x00
                           6371 ;demo.c:909: vdp_load_palette(tf_palette);
   1D74 21r50s16           6372 	ld	hl,#_tf_palette
   1D77 E5                 6373 	push	hl
   1D78 CDr00s00           6374 	call	_vdp_load_palette
   1D7B F1                 6375 	pop	af
                           6376 ;demo.c:912: for (y = 0; y < 106; y+=1) {
   1D7C                    6377 00120$:
   1D7C DD 36 FF 00        6378 	ld	-1 (ix),#0x00
   1D80                    6379 00110$:
   1D80 DD 7E FF           6380 	ld	a,-1 (ix)
   1D83 D6 6A              6381 	sub	a,#0x6A
   1D85 D2r05s1E           6382 	jp	NC,00113$
                           6383 ;demo.c:913: cmd.source_x = 0;
   1D88 21rB4s16           6384 	ld	hl,#_cmd
   1D8B 36 00              6385 	ld	(hl),#0x00
   1D8D 23                 6386 	inc	hl
   1D8E 36 00              6387 	ld	(hl),#0x00
                           6388 ;demo.c:914: cmd.source_y = 256+po+frames+(y>>1);
   1D90 11rB6s16           6389 	ld	de,#_cmd + 2
   1D93 3Ar60s17           6390 	ld	a,(#_po+0)
   1D96 4F                 6391 	ld	c,a
   1D97 3Ar61s17           6392 	ld	a,(#_po+1)
   1D9A C6 01              6393 	add	a,#0x01
   1D9C 47                 6394 	ld	b,a
   1D9D 21r62s17           6395 	ld	hl,#_frames
   1DA0 79                 6396 	ld	a,c
   1DA1 86                 6397 	add	a,(hl)
   1DA2 DD 77 FD           6398 	ld	-3 (ix),a
   1DA5 78                 6399 	ld	a,b
   1DA6 23                 6400 	inc	hl
   1DA7 8E                 6401 	adc	a,(hl)
   1DA8 DD 77 FE           6402 	ld	-2 (ix),a
   1DAB DD 4E FF           6403 	ld	c,-1 (ix)
   1DAE CB 39              6404 	srl	c
   1DB0 06 00              6405 	ld	b,#0x00
   1DB2 DD 7E FD           6406 	ld	a,-3 (ix)
   1DB5 81                 6407 	add	a,c
   1DB6 4F                 6408 	ld	c,a
   1DB7 DD 7E FE           6409 	ld	a,-2 (ix)
   1DBA 88                 6410 	adc	a,b
   1DBB 47                 6411 	ld	b,a
   1DBC 6B                 6412 	ld	l,e
   1DBD 62                 6413 	ld	h,d
   1DBE 71                 6414 	ld	(hl),c
   1DBF 23                 6415 	inc	hl
   1DC0 70                 6416 	ld	(hl),b
                           6417 ;demo.c:915: cmd.dest_x = 0;
   1DC1 21rB8s16           6418 	ld	hl, #_cmd + 4
   1DC4 36 00              6419 	ld	(hl),#0x00
   1DC6 23                 6420 	inc	hl
   1DC7 36 00              6421 	ld	(hl),#0x00
                           6422 ;demo.c:916: cmd.dest_y = (y<<1);
   1DC9 01rBAs16           6423 	ld	bc,#_cmd + 6
   1DCC DD 5E FF           6424 	ld	e,-1 (ix)
   1DCF 16 00              6425 	ld	d,#0x00
   1DD1 CB 23              6426 	sla	e
   1DD3 CB 12              6427 	rl	d
   1DD5 69                 6428 	ld	l,c
   1DD6 60                 6429 	ld	h,b
   1DD7 73                 6430 	ld	(hl),e
   1DD8 23                 6431 	inc	hl
   1DD9 72                 6432 	ld	(hl),d
                           6433 ;demo.c:917: cmd.size_x = 256;
   1DDA 21rBCs16           6434 	ld	hl, #_cmd + 8
   1DDD 36 00              6435 	ld	(hl),#0x00
   1DDF 23                 6436 	inc	hl
   1DE0 36 01              6437 	ld	(hl),#0x01
                           6438 ;demo.c:918: cmd.size_y = 1;
   1DE2 21rBEs16           6439 	ld	hl, #_cmd + 10
   1DE5 36 01              6440 	ld	(hl),#0x01
   1DE7 23                 6441 	inc	hl
   1DE8 36 00              6442 	ld	(hl),#0x00
                           6443 ;demo.c:919: cmd.data = 0;
                           6444 ;demo.c:920: cmd.argument = 0x00;
   1DEA 3E 00              6445 	ld	a,#0x00
   1DEC 32rC0s16           6446 	ld	(#_cmd + 12),a
   1DEF 32rC1s16           6447 	ld	(#_cmd + 13),a
                           6448 ;demo.c:921: cmd.command = 0xD0;
   1DF2 3E D0              6449 	ld	a,#0xD0
   1DF4 32rC2s16           6450 	ld	(#_cmd + 14),a
                           6451 ;demo.c:922: vdp_copier(&cmd);
   1DF7 21rB4s16           6452 	ld	hl,#_cmd
   1DFA E5                 6453 	push	hl
   1DFB CDr00s00           6454 	call	_vdp_copier
   1DFE F1                 6455 	pop	af
                           6456 ;demo.c:912: for (y = 0; y < 106; y+=1) {
   1DFF DD 34 FF           6457 	inc	-1 (ix)
   1E02 C3r80s1D           6458 	jp	00110$
   1E05                    6459 00113$:
                           6460 ;demo.c:925: frames+=53;
   1E05 21r62s17           6461 	ld	hl,#_frames
   1E08 7E                 6462 	ld	a,(hl)
   1E09 C6 35              6463 	add	a,#0x35
   1E0B 23                 6464 	inc	hl
   1E0C 2B                 6465 	dec	hl
   1E0D C5                 6466 	push	bc
   1E0E 4F                 6467 	ld	c, a
   1E0F 23                 6468 	inc	hl
   1E10 7E                 6469 	ld	a, (hl)
   1E11 47                 6470 	ld	b, a
   1E12 79                 6471 	ld	a, c
   1E13 2B                 6472 	dec	hl
   1E14 77                 6473 	ld	(hl), a
   1E15 78                 6474 	ld	a, b
   1E16 C1                 6475 	pop	bc
   1E17 CE 00              6476 	adc	a,#0x00
   1E19 23                 6477 	inc	hl
   1E1A 77                 6478 	ld	(hl),a
                           6479 ;demo.c:926: if (frames >= 212) { frames = 0; po+=256; }
   1E1B 3Ar62s17           6480 	ld	a,(#_frames+0)
   1E1E D6 D4              6481 	sub	a,#0xD4
   1E20 3Ar63s17           6482 	ld	a,(#_frames+1)
   1E23 DE 00              6483 	sbc	a,#0x00
   1E25 FAr48s1E           6484 	jp	M,00104$
   1E28 21r62s17           6485 	ld	hl,#_frames + 0
   1E2B 36 00              6486 	ld	(hl), #0x00
   1E2D 21r63s17           6487 	ld	hl,#_frames + 1
   1E30 36 00              6488 	ld	(hl), #0x00
   1E32 21r60s17           6489 	ld	hl,#_po
   1E35 7E                 6490 	ld	a,(hl)
   1E36 C6 00              6491 	add	a,#0x00
   1E38 23                 6492 	inc	hl
   1E39 2B                 6493 	dec	hl
   1E3A C5                 6494 	push	bc
   1E3B 4F                 6495 	ld	c, a
   1E3C 23                 6496 	inc	hl
   1E3D 7E                 6497 	ld	a, (hl)
   1E3E 47                 6498 	ld	b, a
   1E3F 79                 6499 	ld	a, c
   1E40 2B                 6500 	dec	hl
   1E41 77                 6501 	ld	(hl), a
   1E42 78                 6502 	ld	a, b
   1E43 C1                 6503 	pop	bc
   1E44 CE 01              6504 	adc	a,#0x01
   1E46 23                 6505 	inc	hl
   1E47 77                 6506 	ld	(hl),a
   1E48                    6507 00104$:
                           6508 ;demo.c:927: if (po >= 768) {
   1E48 3Ar60s17           6509 	ld	a,(#_po+0)
   1E4B D6 00              6510 	sub	a,#0x00
   1E4D 3Ar61s17           6511 	ld	a,(#_po+1)
   1E50 DE 03              6512 	sbc	a,#0x03
   1E52 FAr5Fs1E           6513 	jp	M,00114$
                           6514 ;demo.c:928: po = 0;
   1E55 21r60s17           6515 	ld	hl,#_po + 0
   1E58 36 00              6516 	ld	(hl), #0x00
   1E5A 21r61s17           6517 	ld	hl,#_po + 1
   1E5D 36 00              6518 	ld	(hl), #0x00
   1E5F                    6519 00114$:
   1E5F DD F9              6520 	ld	sp,ix
   1E61 DD E1              6521 	pop	ix
   1E63 C9                 6522 	ret
   1E64                    6523 _animplay_end::
   1E64                    6524 __str_10:
   1E64 4C 20 4F 20 41 20  6525 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1E71 00                 6526 	.db 0x00
   1E72                    6527 __str_11:
   1E72 4C 46 31 20 20 20  6528 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1E7D 00                 6529 	.db 0x00
   1E7E                    6530 __str_12:
   1E7E 4C 46 32 20 20 20  6531 	.ascii "LF2     PCK"
        20 20 50 43 4B
   1E89 00                 6532 	.db 0x00
   1E8A                    6533 __str_13:
   1E8A 4C 46 33 20 20 20  6534 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1E95 00                 6535 	.db 0x00
                           6536 ;demo.c:944: void drawbox(uint8_t x, uint8_t y) {
                           6537 ;	---------------------------------
                           6538 ; Function drawbox
                           6539 ; ---------------------------------
   1E96                    6540 _drawbox_start::
   1E96                    6541 _drawbox:
   1E96 DD E5              6542 	push	ix
   1E98 DD 21 00 00        6543 	ld	ix,#0
   1E9C DD 39              6544 	add	ix,sp
                           6545 ;demo.c:945: cmd.source_x = boxes_x[boxi];
   1E9E 21r7Cs17           6546 	ld	hl,#_boxi
   1EA1 3Er6D              6547 	ld	a,#<_boxes_x
   1EA3 86                 6548 	add	a,(hl)
   1EA4 4F                 6549 	ld	c,a
   1EA5 3Es17              6550 	ld	a,#>_boxes_x
   1EA7 CE 00              6551 	adc	a,#0x00
   1EA9 47                 6552 	ld	b,a
   1EAA 0A                 6553 	ld	a,(bc)
   1EAB 4F                 6554 	ld	c,a
   1EAC 06 00              6555 	ld	b,#0x00
   1EAE 21rB4s16           6556 	ld	hl,#_cmd
   1EB1 71                 6557 	ld	(hl),c
   1EB2 23                 6558 	inc	hl
   1EB3 70                 6559 	ld	(hl),b
                           6560 ;demo.c:946: cmd.source_y = boxes_y[boxi];
   1EB4 01rB6s16           6561 	ld	bc,#_cmd + 2
   1EB7 3Ar7Cs17           6562 	ld	a,(#_boxi+0)
   1EBA 87                 6563 	add	a,a
   1EBB C6r72              6564 	add	a,#<_boxes_y
   1EBD 6F                 6565 	ld	l,a
   1EBE 3Es17              6566 	ld	a,#>_boxes_y
   1EC0 CE 00              6567 	adc	a,#0x00
   1EC2 67                 6568 	ld	h,a
   1EC3 5E                 6569 	ld	e,(hl)
   1EC4 23                 6570 	inc	hl
   1EC5 56                 6571 	ld	d,(hl)
   1EC6 69                 6572 	ld	l,c
   1EC7 60                 6573 	ld	h,b
   1EC8 73                 6574 	ld	(hl),e
   1EC9 23                 6575 	inc	hl
   1ECA 72                 6576 	ld	(hl),d
                           6577 ;demo.c:947: cmd.dest_x = x;
   1ECB 01rB8s16           6578 	ld	bc,#_cmd + 4
   1ECE DD 5E 04           6579 	ld	e,4 (ix)
   1ED1 16 00              6580 	ld	d,#0x00
   1ED3 69                 6581 	ld	l,c
   1ED4 60                 6582 	ld	h,b
   1ED5 73                 6583 	ld	(hl),e
   1ED6 23                 6584 	inc	hl
   1ED7 72                 6585 	ld	(hl),d
                           6586 ;demo.c:948: cmd.dest_y = y;
   1ED8 01rBAs16           6587 	ld	bc,#_cmd + 6
   1EDB DD 5E 05           6588 	ld	e,5 (ix)
   1EDE 16 00              6589 	ld	d,#0x00
   1EE0 69                 6590 	ld	l,c
   1EE1 60                 6591 	ld	h,b
   1EE2 73                 6592 	ld	(hl),e
   1EE3 23                 6593 	inc	hl
   1EE4 72                 6594 	ld	(hl),d
                           6595 ;demo.c:949: cmd.size_x = 36;
   1EE5 21rBCs16           6596 	ld	hl, #_cmd + 8
   1EE8 36 24              6597 	ld	(hl),#0x24
   1EEA 23                 6598 	inc	hl
   1EEB 36 00              6599 	ld	(hl),#0x00
                           6600 ;demo.c:950: cmd.size_y = 36;
   1EED 21rBEs16           6601 	ld	hl, #_cmd + 10
   1EF0 36 24              6602 	ld	(hl),#0x24
   1EF2 23                 6603 	inc	hl
   1EF3 36 00              6604 	ld	(hl),#0x00
                           6605 ;demo.c:951: cmd.data = 0;
                           6606 ;demo.c:952: cmd.argument = 0x00;
   1EF5 3E 00              6607 	ld	a,#0x00
   1EF7 32rC0s16           6608 	ld	(#_cmd + 12),a
   1EFA 32rC1s16           6609 	ld	(#_cmd + 13),a
                           6610 ;demo.c:953: cmd.command = 0x98; // TIMP sprite
   1EFD 3E 98              6611 	ld	a,#0x98
   1EFF 32rC2s16           6612 	ld	(#_cmd + 14),a
                           6613 ;demo.c:954: vdp_copier(&cmd);
   1F02 21rB4s16           6614 	ld	hl,#_cmd
   1F05 E5                 6615 	push	hl
   1F06 CDr00s00           6616 	call	_vdp_copier
   1F09 F1                 6617 	pop	af
                           6618 ;demo.c:956: prevx = x;
   1F0A DD 7E 04           6619 	ld	a,4 (ix)
   1F0D 21r69s17           6620 	ld	hl,#_prevx + 0
   1F10 77                 6621 	ld	(hl), a
   1F11 21r6As17           6622 	ld	hl,#_prevx + 1
   1F14 36 00              6623 	ld	(hl), #0x00
                           6624 ;demo.c:957: prevy = y;
   1F16 DD 7E 05           6625 	ld	a,5 (ix)
   1F19 21r6Bs17           6626 	ld	hl,#_prevy + 0
   1F1C 77                 6627 	ld	(hl), a
   1F1D 21r6Cs17           6628 	ld	hl,#_prevy + 1
   1F20 36 00              6629 	ld	(hl), #0x00
   1F22 DD E1              6630 	pop	ix
   1F24 C9                 6631 	ret
   1F25                    6632 _drawbox_end::
                           6633 ;demo.c:971: void boxes() {
                           6634 ;	---------------------------------
                           6635 ; Function boxes
                           6636 ; ---------------------------------
   1F25                    6637 _boxes_start::
   1F25                    6638 _boxes:
   1F25 DD E5              6639 	push	ix
   1F27 DD 21 00 00        6640 	ld	ix,#0
   1F2B DD 39              6641 	add	ix,sp
   1F2D F5                 6642 	push	af
                           6643 ;demo.c:975: if (bx < 0) return;
   1F2E FD 21r7Ds17        6644 	ld	iy,#_bx
   1F32 FD CB 01 7E        6645 	bit	7,1 (iy)
   1F36 C2rA5s23           6646 	jp	NZ,00149$
                           6647 ;demo.c:977: if (bonc == 1) {
   1F39 3Ar85s17           6648 	ld	a,(#_bonc+0)
   1F3C D6 01              6649 	sub	a,#0x01
   1F3E 20 06              6650 	jr	NZ,00178$
   1F40 3Ar86s17           6651 	ld	a,(#_bonc+1)
   1F43 B7                 6652 	or	a,a
   1F44 28 02              6653 	jr	Z,00179$
   1F46                    6654 00178$:
   1F46 18 4D              6655 	jr	00104$
   1F48                    6656 00179$:
                           6657 ;demo.c:979: cmd.source_x = 0;
   1F48 21rB4s16           6658 	ld	hl,#_cmd
   1F4B 36 00              6659 	ld	(hl),#0x00
   1F4D 23                 6660 	inc	hl
   1F4E 36 00              6661 	ld	(hl),#0x00
                           6662 ;demo.c:980: cmd.source_y = 256;
   1F50 21rB6s16           6663 	ld	hl, #_cmd + 2
   1F53 36 00              6664 	ld	(hl),#0x00
   1F55 23                 6665 	inc	hl
   1F56 36 01              6666 	ld	(hl),#0x01
                           6667 ;demo.c:981: cmd.dest_x = pbx;
   1F58 01rB8s16           6668 	ld	bc,#_cmd + 4
   1F5B ED 5Br87s17        6669 	ld	de,(_pbx)
   1F5F 69                 6670 	ld	l,c
   1F60 60                 6671 	ld	h,b
   1F61 73                 6672 	ld	(hl),e
   1F62 23                 6673 	inc	hl
   1F63 72                 6674 	ld	(hl),d
                           6675 ;demo.c:982: cmd.dest_y = pbt;
   1F64 01rBAs16           6676 	ld	bc,#_cmd + 6
   1F67 ED 5Br89s17        6677 	ld	de,(_pbt)
   1F6B 69                 6678 	ld	l,c
   1F6C 60                 6679 	ld	h,b
   1F6D 73                 6680 	ld	(hl),e
   1F6E 23                 6681 	inc	hl
   1F6F 72                 6682 	ld	(hl),d
                           6683 ;demo.c:983: cmd.size_x = 36;
   1F70 21rBCs16           6684 	ld	hl, #_cmd + 8
   1F73 36 24              6685 	ld	(hl),#0x24
   1F75 23                 6686 	inc	hl
   1F76 36 00              6687 	ld	(hl),#0x00
                           6688 ;demo.c:984: cmd.size_y = 36;
   1F78 21rBEs16           6689 	ld	hl, #_cmd + 10
   1F7B 36 24              6690 	ld	(hl),#0x24
   1F7D 23                 6691 	inc	hl
   1F7E 36 00              6692 	ld	(hl),#0x00
                           6693 ;demo.c:985: cmd.data = 0;
                           6694 ;demo.c:986: cmd.argument = 0x00;
   1F80 3E 00              6695 	ld	a,#0x00
   1F82 32rC0s16           6696 	ld	(#_cmd + 12),a
   1F85 32rC1s16           6697 	ld	(#_cmd + 13),a
                           6698 ;demo.c:987: cmd.command = 0xD0; // HMMM
   1F88 3E D0              6699 	ld	a,#0xD0
   1F8A 32rC2s16           6700 	ld	(#_cmd + 14),a
                           6701 ;demo.c:988: vdp_copier(&cmd);
   1F8D 21rB4s16           6702 	ld	hl,#_cmd
   1F90 E5                 6703 	push	hl
   1F91 CDr00s00           6704 	call	_vdp_copier
   1F94 F1                 6705 	pop	af
   1F95                    6706 00104$:
                           6707 ;demo.c:991: if (boxes_init == 0) {
   1F95 AF                 6708 	xor	a,a
   1F96 21r66s17           6709 	ld	hl,#_boxes_init + 0
   1F99 B6                 6710 	or	a,(hl)
   1F9A C2rF5s20           6711 	jp	NZ,00106$
                           6712 ;demo.c:992: boxes_init = 1;
   1F9D FD 21r66s17        6713 	ld	iy,#_boxes_init
   1FA1 FD 36 00 01        6714 	ld	0 (iy),#0x01
                           6715 ;demo.c:994: cmd.size_x = 8;
   1FA5 21rBCs16           6716 	ld	hl, #_cmd + 8
   1FA8 36 08              6717 	ld	(hl),#0x08
   1FAA 23                 6718 	inc	hl
   1FAB 36 00              6719 	ld	(hl),#0x00
                           6720 ;demo.c:995: cmd.size_y = 212;
   1FAD 21rBEs16           6721 	ld	hl, #_cmd + 10
   1FB0 36 D4              6722 	ld	(hl),#0xD4
   1FB2 23                 6723 	inc	hl
   1FB3 36 00              6724 	ld	(hl),#0x00
                           6725 ;demo.c:996: cmd.data = 0;
                           6726 ;demo.c:997: cmd.argument = 0x00; // from 70xY to left
   1FB5 3E 00              6727 	ld	a,#0x00
   1FB7 32rC0s16           6728 	ld	(#_cmd + 12),a
   1FBA 32rC1s16           6729 	ld	(#_cmd + 13),a
                           6730 ;demo.c:998: cmd.command = 0xd0; // vram to vram, y only
   1FBD 01rC2s16           6731 	ld	bc,#_cmd + 14
   1FC0 3E D0              6732 	ld	a,#0xD0
   1FC2 02                 6733 	ld	(bc),a
                           6734 ;demo.c:999: cmd.source_x = 248;
   1FC3 21rB4s16           6735 	ld	hl,#_cmd
   1FC6 36 F8              6736 	ld	(hl),#0xF8
   1FC8 23                 6737 	inc	hl
   1FC9 36 00              6738 	ld	(hl),#0x00
                           6739 ;demo.c:1000: cmd.source_y = 0;
   1FCB 21rB6s16           6740 	ld	hl, #_cmd + 2
   1FCE 36 00              6741 	ld	(hl),#0x00
   1FD0 23                 6742 	inc	hl
   1FD1 36 00              6743 	ld	(hl),#0x00
                           6744 ;demo.c:1001: cmd.dest_y = 0;
   1FD3 01rBAs16           6745 	ld	bc,#_cmd + 6
   1FD6 69                 6746 	ld	l,c
   1FD7 60                 6747 	ld	h,b
   1FD8 36 00              6748 	ld	(hl),#0x00
   1FDA 23                 6749 	inc	hl
   1FDB 36 00              6750 	ld	(hl),#0x00
                           6751 ;demo.c:1003: for (x = 248; x >= 0; x-=8) {
   1FDD DD 36 FE F8        6752 	ld	-2 (ix),#0xF8
   1FE1 DD 36 FF 00        6753 	ld	-1 (ix),#0x00
   1FE5                    6754 00137$:
   1FE5 DD CB FF 7E        6755 	bit	7,-1 (ix)
   1FE9 C2r74s20           6756 	jp	NZ,00140$
                           6757 ;demo.c:1004: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1FEC 21r4Cs17           6758 	ld	hl,#_ff + 0
   1FEF 5E                 6759 	ld	e,(hl)
   1FF0 21r4Ds17           6760 	ld	hl,#_ff + 1
   1FF3 56                 6761 	ld	d,(hl)
   1FF4 CB 2A              6762 	sra	d
   1FF6 CB 1B              6763 	rr	e
   1FF8 CB 2A              6764 	sra	d
   1FFA CB 1B              6765 	rr	e
   1FFC 21r4Cs17           6766 	ld	hl,#_ff + 0
   1FFF 56                 6767 	ld	d,(hl)
   2000 21r4Ds17           6768 	ld	hl,#_ff + 1
   2003 4E                 6769 	ld	c,(hl)
   2004 CB 29              6770 	sra	c
   2006 CB 1A              6771 	rr	d
   2008 CB 29              6772 	sra	c
   200A CB 1A              6773 	rr	d
   200C CB 29              6774 	sra	c
   200E CB 1A              6775 	rr	d
   2010 7B                 6776 	ld	a,e
   2011 F5                 6777 	push	af
   2012 33                 6778 	inc	sp
   2013 D5                 6779 	push	de
   2014 33                 6780 	inc	sp
   2015 53                 6781 	ld	d,e
   2016 1E 04              6782 	ld	e,#0x04
   2018 D5                 6783 	push	de
   2019 CDr00s00           6784 	call	_msx2_palette
   201C F1                 6785 	pop	af
   201D F1                 6786 	pop	af
                           6787 ;demo.c:1005: ff+=2;
   201E 21r4Cs17           6788 	ld	hl,#_ff
   2021 7E                 6789 	ld	a,(hl)
   2022 C6 02              6790 	add	a,#0x02
   2024 23                 6791 	inc	hl
   2025 2B                 6792 	dec	hl
   2026 C5                 6793 	push	bc
   2027 4F                 6794 	ld	c, a
   2028 23                 6795 	inc	hl
   2029 7E                 6796 	ld	a, (hl)
   202A 47                 6797 	ld	b, a
   202B 79                 6798 	ld	a, c
   202C 2B                 6799 	dec	hl
   202D 77                 6800 	ld	(hl), a
   202E 78                 6801 	ld	a, b
   202F C1                 6802 	pop	bc
   2030 CE 00              6803 	adc	a,#0x00
   2032 23                 6804 	inc	hl
   2033 77                 6805 	ld	(hl),a
                           6806 ;demo.c:1006: waitVB();
   2034 76                 6807 		halt 
                           6808 ;demo.c:1007: cmd.dest_x = x;
   2035 21rB8s16           6809 	ld	hl, #_cmd + 4
   2038 DD 7E FE           6810 	ld	a,-2 (ix)
   203B 77                 6811 	ld	(hl),a
   203C 23                 6812 	inc	hl
   203D DD 7E FF           6813 	ld	a,-1 (ix)
   2040 77                 6814 	ld	(hl),a
                           6815 ;demo.c:1008: cmd.dest_y = 0;
   2041 21rBAs16           6816 	ld	hl, #_cmd + 6
   2044 36 00              6817 	ld	(hl),#0x00
   2046 23                 6818 	inc	hl
   2047 36 00              6819 	ld	(hl),#0x00
                           6820 ;demo.c:1009: vdp_copier(&cmd);
   2049 21rB4s16           6821 	ld	hl,#_cmd
   204C E5                 6822 	push	hl
   204D CDr00s00           6823 	call	_vdp_copier
   2050 F1                 6824 	pop	af
                           6825 ;demo.c:1010: cmd.dest_y = 256;
   2051 21rBAs16           6826 	ld	hl, #_cmd + 6
   2054 36 00              6827 	ld	(hl),#0x00
   2056 23                 6828 	inc	hl
   2057 36 01              6829 	ld	(hl),#0x01
                           6830 ;demo.c:1011: vdp_copier(&cmd);
   2059 21rB4s16           6831 	ld	hl,#_cmd
   205C E5                 6832 	push	hl
   205D CDr00s00           6833 	call	_vdp_copier
   2060 F1                 6834 	pop	af
                           6835 ;demo.c:1003: for (x = 248; x >= 0; x-=8) {
   2061 DD 7E FE           6836 	ld	a,-2 (ix)
   2064 C6 F8              6837 	add	a,#0xF8
   2066 DD 77 FE           6838 	ld	-2 (ix),a
   2069 DD 7E FF           6839 	ld	a,-1 (ix)
   206C CE FF              6840 	adc	a,#0xFF
   206E DD 77 FF           6841 	ld	-1 (ix),a
   2071 C3rE5s1F           6842 	jp	00137$
   2074                    6843 00140$:
                           6844 ;demo.c:1014: vdp_load_palette(boxes_palette);
   2074 21r70s16           6845 	ld	hl,#_boxes_palette
   2077 E5                 6846 	push	hl
   2078 CDr00s00           6847 	call	_vdp_load_palette
   207B F1                 6848 	pop	af
                           6849 ;demo.c:1016: for (x=0;x < 8;x++) {
   207C DD 36 FE 00        6850 	ld	-2 (ix),#0x00
   2080 DD 36 FF 00        6851 	ld	-1 (ix),#0x00
   2084                    6852 00145$:
   2084 DD 7E FE           6853 	ld	a,-2 (ix)
   2087 D6 08              6854 	sub	a,#0x08
   2089 DD 7E FF           6855 	ld	a,-1 (ix)
   208C DE 00              6856 	sbc	a,#0x00
   208E F2rE8s20           6857 	jp	P,00148$
                           6858 ;demo.c:1018: for (y=0;y < 9;y++) {
   2091 11 00 00           6859 	ld	de,#0x0000
   2094                    6860 00141$:
   2094 7B                 6861 	ld	a,e
   2095 D6 09              6862 	sub	a,#0x09
   2097 7A                 6863 	ld	a,d
   2098 DE 00              6864 	sbc	a,#0x00
   209A F2rDDs20           6865 	jp	P,00147$
                           6866 ;demo.c:1019: boxes_x[4] = 0;
   209D 01r71s17           6867 	ld	bc,#_boxes_x + 4
   20A0 3E 00              6868 	ld	a,#0x00
   20A2 02                 6869 	ld	(bc),a
                           6870 ;demo.c:1020: boxes_y[4] = 768+2*36;
   20A3 21r7As17           6871 	ld	hl, #_boxes_y + 8
   20A6 36 48              6872 	ld	(hl),#0x48
   20A8 23                 6873 	inc	hl
   20A9 36 03              6874 	ld	(hl),#0x03
                           6875 ;demo.c:1021: boxi = 4;
   20AB 21r7Cs17           6876 	ld	hl,#_boxi + 0
   20AE 36 04              6877 	ld	(hl), #0x04
                           6878 ;demo.c:1022: drawbox((x*36),y*18);
   20B0 4B                 6879 	ld	c,e
   20B1 D5                 6880 	push	de
   20B2 79                 6881 	ld	a,c
   20B3 5F                 6882 	ld	e,a
   20B4 87                 6883 	add	a,a
   20B5 87                 6884 	add	a,a
   20B6 87                 6885 	add	a,a
   20B7 83                 6886 	add	a,e
   20B8 87                 6887 	add	a,a
   20B9 D1                 6888 	pop	de
   20BA 4F                 6889 	ld	c,a
   20BB DD 46 FE           6890 	ld	b,-2 (ix)
   20BE D5                 6891 	push	de
   20BF 78                 6892 	ld	a,b
   20C0 5F                 6893 	ld	e,a
   20C1 87                 6894 	add	a,a
   20C2 87                 6895 	add	a,a
   20C3 87                 6896 	add	a,a
   20C4 83                 6897 	add	a,e
   20C5 87                 6898 	add	a,a
   20C6 87                 6899 	add	a,a
   20C7 D1                 6900 	pop	de
   20C8 47                 6901 	ld	b,a
   20C9 D5                 6902 	push	de
   20CA 79                 6903 	ld	a,c
   20CB F5                 6904 	push	af
   20CC 33                 6905 	inc	sp
   20CD C5                 6906 	push	bc
   20CE 33                 6907 	inc	sp
   20CF CDr96s1E           6908 	call	_drawbox
   20D2 F1                 6909 	pop	af
   20D3 D1                 6910 	pop	de
                           6911 ;demo.c:1023: boxi = 0;
   20D4 21r7Cs17           6912 	ld	hl,#_boxi + 0
   20D7 36 00              6913 	ld	(hl), #0x00
                           6914 ;demo.c:1018: for (y=0;y < 9;y++) {
   20D9 13                 6915 	inc	de
   20DA C3r94s20           6916 	jp	00141$
   20DD                    6917 00147$:
                           6918 ;demo.c:1016: for (x=0;x < 8;x++) {
   20DD DD 34 FE           6919 	inc	-2 (ix)
   20E0 20 03              6920 	jr	NZ,00182$
   20E2 DD 34 FF           6921 	inc	-1 (ix)
   20E5                    6922 00182$:
   20E5 C3r84s20           6923 	jp	00145$
   20E8                    6924 00148$:
                           6925 ;demo.c:1027: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,182);
   20E8 21 08 B6           6926 	ld	hl,#0xB608
   20EB E5                 6927 	push	hl
   20EC 21rAAs23           6928 	ld	hl,#__str_14
   20EF E5                 6929 	push	hl
   20F0 CDrB8s16           6930 	call	_drawsine
   20F3 F1                 6931 	pop	af
   20F4 F1                 6932 	pop	af
   20F5                    6933 00106$:
                           6934 ;demo.c:1030: if (bt >= 80) bt+=8;
   20F5 3Ar81s17           6935 	ld	a,(#_bt+0)
   20F8 D6 50              6936 	sub	a,#0x50
   20FA 3Ar82s17           6937 	ld	a,(#_bt+1)
   20FD DE 00              6938 	sbc	a,#0x00
   20FF FAr18s21           6939 	jp	M,00108$
   2102 21r81s17           6940 	ld	hl,#_bt
   2105 7E                 6941 	ld	a,(hl)
   2106 C6 08              6942 	add	a,#0x08
   2108 23                 6943 	inc	hl
   2109 2B                 6944 	dec	hl
   210A C5                 6945 	push	bc
   210B 4F                 6946 	ld	c, a
   210C 23                 6947 	inc	hl
   210D 7E                 6948 	ld	a, (hl)
   210E 47                 6949 	ld	b, a
   210F 79                 6950 	ld	a, c
   2110 2B                 6951 	dec	hl
   2111 77                 6952 	ld	(hl), a
   2112 78                 6953 	ld	a, b
   2113 C1                 6954 	pop	bc
   2114 CE 00              6955 	adc	a,#0x00
   2116 23                 6956 	inc	hl
   2117 77                 6957 	ld	(hl),a
   2118                    6958 00108$:
                           6959 ;demo.c:1031: if (bt < 80 && bt >= 60) bt+=7;
   2118 3Ar81s17           6960 	ld	a,(#_bt+0)
   211B D6 50              6961 	sub	a,#0x50
   211D 3Ar82s17           6962 	ld	a,(#_bt+1)
   2120 DE 00              6963 	sbc	a,#0x00
   2122 F2r48s21           6964 	jp	P,00110$
   2125 3Ar81s17           6965 	ld	a,(#_bt+0)
   2128 D6 3C              6966 	sub	a,#0x3C
   212A 3Ar82s17           6967 	ld	a,(#_bt+1)
   212D DE 00              6968 	sbc	a,#0x00
   212F FAr48s21           6969 	jp	M,00110$
   2132 21r81s17           6970 	ld	hl,#_bt
   2135 7E                 6971 	ld	a,(hl)
   2136 C6 07              6972 	add	a,#0x07
   2138 23                 6973 	inc	hl
   2139 2B                 6974 	dec	hl
   213A C5                 6975 	push	bc
   213B 4F                 6976 	ld	c, a
   213C 23                 6977 	inc	hl
   213D 7E                 6978 	ld	a, (hl)
   213E 47                 6979 	ld	b, a
   213F 79                 6980 	ld	a, c
   2140 2B                 6981 	dec	hl
   2141 77                 6982 	ld	(hl), a
   2142 78                 6983 	ld	a, b
   2143 C1                 6984 	pop	bc
   2144 CE 00              6985 	adc	a,#0x00
   2146 23                 6986 	inc	hl
   2147 77                 6987 	ld	(hl),a
   2148                    6988 00110$:
                           6989 ;demo.c:1032: if (bt < 60 && bt >= 40) bt+=6;
   2148 3Ar81s17           6990 	ld	a,(#_bt+0)
   214B D6 3C              6991 	sub	a,#0x3C
   214D 3Ar82s17           6992 	ld	a,(#_bt+1)
   2150 DE 00              6993 	sbc	a,#0x00
   2152 F2r78s21           6994 	jp	P,00113$
   2155 3Ar81s17           6995 	ld	a,(#_bt+0)
   2158 D6 28              6996 	sub	a,#0x28
   215A 3Ar82s17           6997 	ld	a,(#_bt+1)
   215D DE 00              6998 	sbc	a,#0x00
   215F FAr78s21           6999 	jp	M,00113$
   2162 21r81s17           7000 	ld	hl,#_bt
   2165 7E                 7001 	ld	a,(hl)
   2166 C6 06              7002 	add	a,#0x06
   2168 23                 7003 	inc	hl
   2169 2B                 7004 	dec	hl
   216A C5                 7005 	push	bc
   216B 4F                 7006 	ld	c, a
   216C 23                 7007 	inc	hl
   216D 7E                 7008 	ld	a, (hl)
   216E 47                 7009 	ld	b, a
   216F 79                 7010 	ld	a, c
   2170 2B                 7011 	dec	hl
   2171 77                 7012 	ld	(hl), a
   2172 78                 7013 	ld	a, b
   2173 C1                 7014 	pop	bc
   2174 CE 00              7015 	adc	a,#0x00
   2176 23                 7016 	inc	hl
   2177 77                 7017 	ld	(hl),a
   2178                    7018 00113$:
                           7019 ;demo.c:1033: if (bt < 40 && bt >= 10) bt+=5;
   2178 3Ar81s17           7020 	ld	a,(#_bt+0)
   217B D6 28              7021 	sub	a,#0x28
   217D 3Ar82s17           7022 	ld	a,(#_bt+1)
   2180 DE 00              7023 	sbc	a,#0x00
   2182 F2rA8s21           7024 	jp	P,00116$
   2185 3Ar81s17           7025 	ld	a,(#_bt+0)
   2188 D6 0A              7026 	sub	a,#0x0A
   218A 3Ar82s17           7027 	ld	a,(#_bt+1)
   218D DE 00              7028 	sbc	a,#0x00
   218F FArA8s21           7029 	jp	M,00116$
   2192 21r81s17           7030 	ld	hl,#_bt
   2195 7E                 7031 	ld	a,(hl)
   2196 C6 05              7032 	add	a,#0x05
   2198 23                 7033 	inc	hl
   2199 2B                 7034 	dec	hl
   219A C5                 7035 	push	bc
   219B 4F                 7036 	ld	c, a
   219C 23                 7037 	inc	hl
   219D 7E                 7038 	ld	a, (hl)
   219E 47                 7039 	ld	b, a
   219F 79                 7040 	ld	a, c
   21A0 2B                 7041 	dec	hl
   21A1 77                 7042 	ld	(hl), a
   21A2 78                 7043 	ld	a, b
   21A3 C1                 7044 	pop	bc
   21A4 CE 00              7045 	adc	a,#0x00
   21A6 23                 7046 	inc	hl
   21A7 77                 7047 	ld	(hl),a
   21A8                    7048 00116$:
                           7049 ;demo.c:1034: if (bt < 10 ) bt+=4;
   21A8 3Ar81s17           7050 	ld	a,(#_bt+0)
   21AB D6 0A              7051 	sub	a,#0x0A
   21AD 3Ar82s17           7052 	ld	a,(#_bt+1)
   21B0 DE 00              7053 	sbc	a,#0x00
   21B2 F2rCBs21           7054 	jp	P,00119$
   21B5 21r81s17           7055 	ld	hl,#_bt
   21B8 7E                 7056 	ld	a,(hl)
   21B9 C6 04              7057 	add	a,#0x04
   21BB 23                 7058 	inc	hl
   21BC 2B                 7059 	dec	hl
   21BD C5                 7060 	push	bc
   21BE 4F                 7061 	ld	c, a
   21BF 23                 7062 	inc	hl
   21C0 7E                 7063 	ld	a, (hl)
   21C1 47                 7064 	ld	b, a
   21C2 79                 7065 	ld	a, c
   21C3 2B                 7066 	dec	hl
   21C4 77                 7067 	ld	(hl), a
   21C5 78                 7068 	ld	a, b
   21C6 C1                 7069 	pop	bc
   21C7 CE 00              7070 	adc	a,#0x00
   21C9 23                 7071 	inc	hl
   21CA 77                 7072 	ld	(hl),a
   21CB                    7073 00119$:
                           7074 ;demo.c:1037: cmd.source_x = bx;
   21CB ED 4Br7Ds17        7075 	ld	bc,(_bx)
   21CF 21rB4s16           7076 	ld	hl,#_cmd
   21D2 71                 7077 	ld	(hl),c
   21D3 23                 7078 	inc	hl
   21D4 70                 7079 	ld	(hl),b
                           7080 ;demo.c:1038: cmd.source_y = bt;
   21D5 01rB6s16           7081 	ld	bc,#_cmd + 2
   21D8 ED 5Br81s17        7082 	ld	de,(_bt)
   21DC 69                 7083 	ld	l,c
   21DD 60                 7084 	ld	h,b
   21DE 73                 7085 	ld	(hl),e
   21DF 23                 7086 	inc	hl
   21E0 72                 7087 	ld	(hl),d
                           7088 ;demo.c:1039: cmd.dest_x = 0;
   21E1 21rB8s16           7089 	ld	hl, #_cmd + 4
   21E4 36 00              7090 	ld	(hl),#0x00
   21E6 23                 7091 	inc	hl
   21E7 36 00              7092 	ld	(hl),#0x00
                           7093 ;demo.c:1040: cmd.dest_y = 256;
   21E9 21rBAs16           7094 	ld	hl, #_cmd + 6
   21EC 36 00              7095 	ld	(hl),#0x00
   21EE 23                 7096 	inc	hl
   21EF 36 01              7097 	ld	(hl),#0x01
                           7098 ;demo.c:1041: cmd.size_x = 36;
   21F1 21rBCs16           7099 	ld	hl, #_cmd + 8
   21F4 36 24              7100 	ld	(hl),#0x24
   21F6 23                 7101 	inc	hl
   21F7 36 00              7102 	ld	(hl),#0x00
                           7103 ;demo.c:1042: cmd.size_y = 36;
   21F9 21rBEs16           7104 	ld	hl, #_cmd + 10
   21FC 36 24              7105 	ld	(hl),#0x24
   21FE 23                 7106 	inc	hl
   21FF 36 00              7107 	ld	(hl),#0x00
                           7108 ;demo.c:1043: cmd.data = 0;
                           7109 ;demo.c:1044: cmd.argument = 0x00;
   2201 3E 00              7110 	ld	a,#0x00
   2203 32rC0s16           7111 	ld	(#_cmd + 12),a
   2206 32rC1s16           7112 	ld	(#_cmd + 13),a
                           7113 ;demo.c:1045: cmd.command = 0xD0; // HMMM
   2209 3E D0              7114 	ld	a,#0xD0
   220B 32rC2s16           7115 	ld	(#_cmd + 14),a
                           7116 ;demo.c:1046: vdp_copier(&cmd);
   220E 21rB4s16           7117 	ld	hl,#_cmd
   2211 E5                 7118 	push	hl
   2212 CDr00s00           7119 	call	_vdp_copier
   2215 F1                 7120 	pop	af
                           7121 ;demo.c:1048: pbx = bx;
   2216 2Ar7Ds17           7122 	ld	hl,(_bx)
   2219 FD 21r87s17        7123 	ld	iy,#_pbx
   221D FD 75 00           7124 	ld	0 (iy),l
   2220 FD 21r87s17        7125 	ld	iy,#_pbx
   2224 FD 74 01           7126 	ld	1 (iy),h
                           7127 ;demo.c:1049: pbt = bt;
   2227 2Ar81s17           7128 	ld	hl,(_bt)
   222A FD 21r89s17        7129 	ld	iy,#_pbt
   222E FD 75 00           7130 	ld	0 (iy),l
   2231 FD 21r89s17        7131 	ld	iy,#_pbt
   2235 FD 74 01           7132 	ld	1 (iy),h
                           7133 ;demo.c:1054: bonc = 1;
   2238 21r85s17           7134 	ld	hl,#_bonc + 0
   223B 36 01              7135 	ld	(hl), #0x01
   223D 21r86s17           7136 	ld	hl,#_bonc + 1
   2240 36 00              7137 	ld	(hl), #0x00
                           7138 ;demo.c:1055: if (bt > by) {
   2242 21r7Fs17           7139 	ld	hl,#_by
   2245 7E                 7140 	ld	a,(hl)
   2246 FD 21r81s17        7141 	ld	iy,#_bt
   224A FD 96 00           7142 	sub	a,0 (iy)
   224D 23                 7143 	inc	hl
   224E 7E                 7144 	ld	a,(hl)
   224F FD 21r81s17        7145 	ld	iy,#_bt
   2253 FD 9E 01           7146 	sbc	a,1 (iy)
   2256 F2r94s23           7147 	jp	P,00135$
                           7148 ;demo.c:1056: bt = by;
   2259 2Ar7Fs17           7149 	ld	hl,(_by)
   225C FD 21r81s17        7150 	ld	iy,#_bt
   2260 FD 75 00           7151 	ld	0 (iy),l
   2263 FD 21r81s17        7152 	ld	iy,#_bt
   2267 FD 74 01           7153 	ld	1 (iy),h
                           7154 ;demo.c:1057: drawbox(bx,bt);
   226A 21r81s17           7155 	ld	hl,#_bt + 0
   226D 4E                 7156 	ld	c,(hl)
   226E 21r7Ds17           7157 	ld	hl,#_bx + 0
   2271 46                 7158 	ld	b,(hl)
   2272 79                 7159 	ld	a,c
   2273 F5                 7160 	push	af
   2274 33                 7161 	inc	sp
   2275 C5                 7162 	push	bc
   2276 33                 7163 	inc	sp
   2277 CDr96s1E           7164 	call	_drawbox
   227A F1                 7165 	pop	af
                           7166 ;demo.c:1058: bt = 0;
   227B 21r81s17           7167 	ld	hl,#_bt + 0
   227E 36 00              7168 	ld	(hl), #0x00
   2280 21r82s17           7169 	ld	hl,#_bt + 1
   2283 36 00              7170 	ld	(hl), #0x00
                           7171 ;demo.c:1059: if (by > 48) {
   2285 3E 30              7172 	ld	a,#0x30
   2287 FD 21r7Fs17        7173 	ld	iy,#_by
   228B FD 96 00           7174 	sub	a,0 (iy)
   228E 3E 00              7175 	ld	a,#0x00
   2290 FD 21r7Fs17        7176 	ld	iy,#_by
   2294 FD 9E 01           7177 	sbc	a,1 (iy)
   2297 F2rEFs22           7178 	jp	P,00123$
                           7179 ;demo.c:1060: bonc = 0;
   229A 21r85s17           7180 	ld	hl,#_bonc + 0
   229D 36 00              7181 	ld	(hl), #0x00
   229F 21r86s17           7182 	ld	hl,#_bonc + 1
   22A2 36 00              7183 	ld	(hl), #0x00
                           7184 ;demo.c:1061: by-=16;
   22A4 21r7Fs17           7185 	ld	hl,#_by
   22A7 7E                 7186 	ld	a,(hl)
   22A8 C6 F0              7187 	add	a,#0xF0
   22AA 77                 7188 	ld	(hl),a
   22AB 23                 7189 	inc	hl
   22AC 7E                 7190 	ld	a,(hl)
   22AD CE FF              7191 	adc	a,#0xFF
   22AF 77                 7192 	ld	(hl),a
                           7193 ;demo.c:1062: prevbox_of = boxes_of[boxi];
   22B0 3Ar7Cs17           7194 	ld	a,(#_boxi+0)
   22B3 87                 7195 	add	a,a
   22B4 C6r8B              7196 	add	a,#<_boxes_of
   22B6 6F                 7197 	ld	l,a
   22B7 3Es17              7198 	ld	a,#>_boxes_of
   22B9 CE 00              7199 	adc	a,#0x00
   22BB 67                 7200 	ld	h,a
   22BC 4E                 7201 	ld	c,(hl)
   22BD 23                 7202 	inc	hl
   22BE 21r95s17           7203 	ld	hl,#_prevbox_of + 0
   22C1 71                 7204 	ld	(hl), c
                           7205 ;demo.c:1063: by+=prevbox_of;
   22C2 21r95s17           7206 	ld	hl,#_prevbox_of + 0
   22C5 4E                 7207 	ld	c,(hl)
   22C6 06 00              7208 	ld	b,#0x00
   22C8 21r7Fs17           7209 	ld	hl,#_by
   22CB 7E                 7210 	ld	a,(hl)
   22CC 81                 7211 	add	a,c
   22CD 23                 7212 	inc	hl
   22CE 2B                 7213 	dec	hl
   22CF C5                 7214 	push	bc
   22D0 4F                 7215 	ld	c, a
   22D1 23                 7216 	inc	hl
   22D2 7E                 7217 	ld	a, (hl)
   22D3 47                 7218 	ld	b, a
   22D4 79                 7219 	ld	a, c
   22D5 2B                 7220 	dec	hl
   22D6 77                 7221 	ld	(hl), a
   22D7 78                 7222 	ld	a, b
   22D8 C1                 7223 	pop	bc
   22D9 88                 7224 	adc	a,b
   22DA 23                 7225 	inc	hl
   22DB 77                 7226 	ld	(hl),a
                           7227 ;demo.c:1064: boxi++;
   22DC FD 21r7Cs17        7228 	ld	iy,#_boxi
   22E0 FD 34 00           7229 	inc	0 (iy)
                           7230 ;demo.c:1065: if (boxi >= 4) boxi = 0;
   22E3 3Ar7Cs17           7231 	ld	a,(#_boxi+0)
   22E6 D6 04              7232 	sub	a,#0x04
   22E8 38 05              7233 	jr	C,00123$
   22EA 21r7Cs17           7234 	ld	hl,#_boxi + 0
   22ED 36 00              7235 	ld	(hl), #0x00
   22EF                    7236 00123$:
                           7237 ;demo.c:1068: if (by <= 48) {
   22EF 3E 30              7238 	ld	a,#0x30
   22F1 FD 21r7Fs17        7239 	ld	iy,#_by
   22F5 FD 96 00           7240 	sub	a,0 (iy)
   22F8 3E 00              7241 	ld	a,#0x00
   22FA FD 21r7Fs17        7242 	ld	iy,#_by
   22FE FD 9E 01           7243 	sbc	a,1 (iy)
   2301 FArA5s23           7244 	jp	M,00149$
                           7245 ;demo.c:1069: bx-=16;
   2304 21r7Ds17           7246 	ld	hl,#_bx
   2307 7E                 7247 	ld	a,(hl)
   2308 C6 F0              7248 	add	a,#0xF0
   230A 77                 7249 	ld	(hl),a
   230B 23                 7250 	inc	hl
   230C 7E                 7251 	ld	a,(hl)
   230D CE FF              7252 	adc	a,#0xFF
   230F 77                 7253 	ld	(hl),a
                           7254 ;demo.c:1071: if (bx>128)bo+=8;
   2310 3E 80              7255 	ld	a,#0x80
   2312 FD 21r7Ds17        7256 	ld	iy,#_bx
   2316 FD 96 00           7257 	sub	a,0 (iy)
   2319 3E 00              7258 	ld	a,#0x00
   231B FD 21r7Ds17        7259 	ld	iy,#_bx
   231F FD 9E 01           7260 	sbc	a,1 (iy)
   2322 07                 7261 	rlca
   2323 E6 01              7262 	and	a,#0x01
   2325 4F                 7263 	ld	c,a
   2326 B7                 7264 	or	a,a
   2327 28 18              7265 	jr	Z,00125$
   2329 21r83s17           7266 	ld	hl,#_bo
   232C 7E                 7267 	ld	a,(hl)
   232D C6 08              7268 	add	a,#0x08
   232F 23                 7269 	inc	hl
   2330 2B                 7270 	dec	hl
   2331 C5                 7271 	push	bc
   2332 4F                 7272 	ld	c, a
   2333 23                 7273 	inc	hl
   2334 7E                 7274 	ld	a, (hl)
   2335 47                 7275 	ld	b, a
   2336 79                 7276 	ld	a, c
   2337 2B                 7277 	dec	hl
   2338 77                 7278 	ld	(hl), a
   2339 78                 7279 	ld	a, b
   233A C1                 7280 	pop	bc
   233B CE 00              7281 	adc	a,#0x00
   233D 23                 7282 	inc	hl
   233E 77                 7283 	ld	(hl),a
   233F 18 0C              7284 	jr	00126$
   2341                    7285 00125$:
                           7286 ;demo.c:1072: else bo-=8;
   2341 21r83s17           7287 	ld	hl,#_bo
   2344 7E                 7288 	ld	a,(hl)
   2345 C6 F8              7289 	add	a,#0xF8
   2347 77                 7290 	ld	(hl),a
   2348 23                 7291 	inc	hl
   2349 7E                 7292 	ld	a,(hl)
   234A CE FF              7293 	adc	a,#0xFF
   234C 77                 7294 	ld	(hl),a
   234D                    7295 00126$:
                           7296 ;demo.c:1073: if (bo > 192) bo = 0;
   234D 3E C0              7297 	ld	a,#0xC0
   234F FD 21r83s17        7298 	ld	iy,#_bo
   2353 FD 96 00           7299 	sub	a,0 (iy)
   2356 3E 00              7300 	ld	a,#0x00
   2358 FD 21r83s17        7301 	ld	iy,#_bo
   235C FD 9E 01           7302 	sbc	a,1 (iy)
   235F F2r6Cs23           7303 	jp	P,00128$
   2362 21r83s17           7304 	ld	hl,#_bo + 0
   2365 36 00              7305 	ld	(hl), #0x00
   2367 21r84s17           7306 	ld	hl,#_bo + 1
   236A 36 00              7307 	ld	(hl), #0x00
   236C                    7308 00128$:
                           7309 ;demo.c:1074: if (bx>128)by=84+bo;
   236C AF                 7310 	xor	a,a
   236D B1                 7311 	or	a,c
   236E 28 12              7312 	jr	Z,00130$
   2370 21r7Fs17           7313 	ld	hl,#_by
   2373 3Ar83s17           7314 	ld	a,(#_bo+0)
   2376 C6 54              7315 	add	a,#0x54
   2378 77                 7316 	ld	(hl),a
   2379 3Ar84s17           7317 	ld	a,(#_bo+1)
   237C CE 00              7318 	adc	a,#0x00
   237E 23                 7319 	inc	hl
   237F 77                 7320 	ld	(hl),a
   2380 18 23              7321 	jr	00149$
   2382                    7322 00130$:
                           7323 ;demo.c:1075: else by=36+36+84+bo;
   2382 21r7Fs17           7324 	ld	hl,#_by
   2385 3Ar83s17           7325 	ld	a,(#_bo+0)
   2388 C6 9C              7326 	add	a,#0x9C
   238A 77                 7327 	ld	(hl),a
   238B 3Ar84s17           7328 	ld	a,(#_bo+1)
   238E CE 00              7329 	adc	a,#0x00
   2390 23                 7330 	inc	hl
   2391 77                 7331 	ld	(hl),a
   2392 18 11              7332 	jr	00149$
   2394                    7333 00135$:
                           7334 ;demo.c:1078: drawbox(bx,bt);
   2394 21r81s17           7335 	ld	hl,#_bt + 0
   2397 4E                 7336 	ld	c,(hl)
   2398 21r7Ds17           7337 	ld	hl,#_bx + 0
   239B 46                 7338 	ld	b,(hl)
   239C 79                 7339 	ld	a,c
   239D F5                 7340 	push	af
   239E 33                 7341 	inc	sp
   239F C5                 7342 	push	bc
   23A0 33                 7343 	inc	sp
   23A1 CDr96s1E           7344 	call	_drawbox
   23A4 F1                 7345 	pop	af
   23A5                    7346 00149$:
   23A5 DD F9              7347 	ld	sp,ix
   23A7 DD E1              7348 	pop	ix
   23A9 C9                 7349 	ret
   23AA                    7350 _boxes_end::
   23AA                    7351 __str_14:
   23AA 4C 45 54 20 55 53  7352 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   23D5 00                 7353 	.db 0x00
                           7354 ;demo.c:1089: void thewave() {
                           7355 ;	---------------------------------
                           7356 ; Function thewave
                           7357 ; ---------------------------------
   23D6                    7358 _thewave_start::
   23D6                    7359 _thewave:
   23D6 DD E5              7360 	push	ix
   23D8 DD 21 00 00        7361 	ld	ix,#0
   23DC DD 39              7362 	add	ix,sp
   23DE 21 F5 FF           7363 	ld	hl,#-11
   23E1 39                 7364 	add	hl,sp
   23E2 F9                 7365 	ld	sp,hl
                           7366 ;demo.c:1098: if (initwave == 0) {
   23E3 AF                 7367 	xor	a,a
   23E4 21r96s17           7368 	ld	hl,#_initwave + 0
   23E7 B6                 7369 	or	a,(hl)
   23E8 C2r70s26           7370 	jp	NZ,00113$
                           7371 ;demo.c:1099: initwave = 1;
   23EB 21r96s17           7372 	ld	hl,#_initwave + 0
   23EE 36 01              7373 	ld	(hl), #0x01
                           7374 ;demo.c:1100: for (y = 0; y < 212; y++) {
   23F0 DD 36 FE 00        7375 	ld	-2 (ix),#0x00
   23F4                    7376 00128$:
   23F4 DD 7E FE           7377 	ld	a,-2 (ix)
   23F7 D6 D4              7378 	sub	a,#0xD4
   23F9 D2r6Cs24           7379 	jp	NC,00131$
                           7380 ;demo.c:1101: cmd.size_x = 256;
   23FC 11rBCs16           7381 	ld	de,#_cmd + 8
   23FF EB                 7382 	ex	de,hl
   2400 36 00              7383 	ld	(hl),#0x00
   2402 23                 7384 	inc	hl
   2403 36 01              7385 	ld	(hl),#0x01
                           7386 ;demo.c:1102: cmd.size_y = 2;
   2405 11rBEs16           7387 	ld	de,#_cmd + 10
   2408 EB                 7388 	ex	de,hl
   2409 36 02              7389 	ld	(hl),#0x02
   240B 23                 7390 	inc	hl
   240C 36 00              7391 	ld	(hl),#0x00
                           7392 ;demo.c:1103: cmd.data = 0;
   240E 11rC0s16           7393 	ld	de,#_cmd + 12
   2411 3E 00              7394 	ld	a,#0x00
   2413 12                 7395 	ld	(de),a
                           7396 ;demo.c:1104: cmd.argument = 0x00; // from 70xY to left
   2414 11rC1s16           7397 	ld	de,#_cmd + 13
   2417 3E 00              7398 	ld	a,#0x00
   2419 12                 7399 	ld	(de),a
                           7400 ;demo.c:1105: cmd.command = 0xd0; // vram to vram, y only
   241A 11rC2s16           7401 	ld	de,#_cmd + 14
   241D 3E D0              7402 	ld	a,#0xD0
   241F 12                 7403 	ld	(de),a
                           7404 ;demo.c:1107: cmd.source_x = 0;
   2420 21rB4s16           7405 	ld	hl,#_cmd
   2423 36 00              7406 	ld	(hl),#0x00
   2425 23                 7407 	inc	hl
   2426 36 00              7408 	ld	(hl),#0x00
                           7409 ;demo.c:1108: cmd.source_y = 0;
   2428 11rB6s16           7410 	ld	de,#_cmd + 2
   242B EB                 7411 	ex	de,hl
   242C 36 00              7412 	ld	(hl),#0x00
   242E 23                 7413 	inc	hl
   242F 36 00              7414 	ld	(hl),#0x00
                           7415 ;demo.c:1109: cmd.dest_x = 0;
   2431 11rB8s16           7416 	ld	de,#_cmd + 4
   2434 EB                 7417 	ex	de,hl
   2435 36 00              7418 	ld	(hl),#0x00
   2437 23                 7419 	inc	hl
   2438 36 00              7420 	ld	(hl),#0x00
                           7421 ;demo.c:1110: cmd.dest_y = 0+y;
   243A 11rBAs16           7422 	ld	de,#_cmd + 6
   243D DD 4E FE           7423 	ld	c,-2 (ix)
   2440 06 00              7424 	ld	b,#0x00
   2442 EB                 7425 	ex	de,hl
   2443 71                 7426 	ld	(hl),c
   2444 23                 7427 	inc	hl
   2445 70                 7428 	ld	(hl),b
                           7429 ;demo.c:1111: vdp_copier(&cmd);
   2446 C5                 7430 	push	bc
   2447 21rB4s16           7431 	ld	hl,#_cmd
   244A E5                 7432 	push	hl
   244B CDr00s00           7433 	call	_vdp_copier
   244E F1                 7434 	pop	af
   244F C1                 7435 	pop	bc
                           7436 ;demo.c:1112: cmd.dest_y = 256+y;
   2450 11rBAs16           7437 	ld	de,#_cmd + 6
   2453 21 00 01           7438 	ld	hl,#0x0100
   2456 09                 7439 	add	hl,bc
   2457 4D                 7440 	ld	c,l
   2458 44                 7441 	ld	b,h
   2459 EB                 7442 	ex	de,hl
   245A 71                 7443 	ld	(hl),c
   245B 23                 7444 	inc	hl
   245C 70                 7445 	ld	(hl),b
                           7446 ;demo.c:1113: vdp_copier(&cmd);
   245D 21rB4s16           7447 	ld	hl,#_cmd
   2460 E5                 7448 	push	hl
   2461 CDr00s00           7449 	call	_vdp_copier
   2464 F1                 7450 	pop	af
                           7451 ;demo.c:1114: waitVB();
   2465 76                 7452 		halt 
                           7453 ;demo.c:1100: for (y = 0; y < 212; y++) {
   2466 DD 34 FE           7454 	inc	-2 (ix)
   2469 C3rF4s23           7455 	jp	00128$
   246C                    7456 00131$:
                           7457 ;demo.c:1118: for (y = 9; y < 15; y+=1) {
   246C DD 36 FE 09        7458 	ld	-2 (ix),#0x09
   2470                    7459 00132$:
   2470 DD 7E FE           7460 	ld	a,-2 (ix)
   2473 D6 0F              7461 	sub	a,#0x0F
   2475 D2r70s26           7462 	jp	NC,00113$
                           7463 ;demo.c:1119: for (x = 0; x < 21; x+=1) {
   2478 DD 7E FE           7464 	ld	a,-2 (ix)
   247B 87                 7465 	add	a,a
   247C DD 77 F7           7466 	ld	-9 (ix),a
   247F DD 36 FF 00        7467 	ld	-1 (ix),#0x00
   2483                    7468 00108$:
   2483 DD 7E FF           7469 	ld	a,-1 (ix)
   2486 D6 15              7470 	sub	a,#0x15
   2488 D2r6As26           7471 	jp	NC,00134$
                           7472 ;demo.c:1120: if (x > 6 && x < 13) continue; 
   248B 3E 06              7473 	ld	a,#0x06
   248D DD 96 FF           7474 	sub	a,-1 (ix)
   2490 30 08              7475 	jr	NC,00102$
   2492 DD 7E FF           7476 	ld	a,-1 (ix)
   2495 D6 0D              7477 	sub	a,#0x0D
   2497 DAr64s26           7478 	jp	C,00110$
   249A                    7479 00102$:
                           7480 ;demo.c:1122: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   249A 3E 06              7481 	ld	a,#0x06
   249C DD 96 FF           7482 	sub	a,-1 (ix)
   249F DArF5s24           7483 	jp	C,00105$
   24A2 DD 56 FF           7484 	ld	d,-1 (ix)
   24A5 0E 00              7485 	ld	c,#0x00
   24A7 CB 22              7486 	sla	d
   24A9 CB 11              7487 	rl	c
   24AB CB 22              7488 	sla	d
   24AD CB 11              7489 	rl	c
   24AF CB 22              7490 	sla	d
   24B1 CB 11              7491 	rl	c
   24B3 7A                 7492 	ld	a,d
   24B4 C6 69              7493 	add	a,#0x69
   24B6 57                 7494 	ld	d,a
   24B7 79                 7495 	ld	a,c
   24B8 CE 00              7496 	adc	a,#0x00
   24BA 47                 7497 	ld	b,a
   24BB DD 5E FE           7498 	ld	e,-2 (ix)
   24BE 0E 00              7499 	ld	c,#0x00
   24C0 CB 23              7500 	sla	e
   24C2 CB 11              7501 	rl	c
   24C4 CB 23              7502 	sla	e
   24C6 CB 11              7503 	rl	c
   24C8 CB 23              7504 	sla	e
   24CA CB 11              7505 	rl	c
   24CC 7A                 7506 	ld	a,d
   24CD 83                 7507 	add	a,e
   24CE 5F                 7508 	ld	e,a
   24CF 78                 7509 	ld	a,b
   24D0 89                 7510 	adc	a,c
   24D1 0E 00              7511 	ld	c,#0x00
   24D3 3Er00              7512 	ld	a,#<_sintab
   24D5 83                 7513 	add	a,e
   24D6 5F                 7514 	ld	e,a
   24D7 3Es00              7515 	ld	a,#>_sintab
   24D9 89                 7516 	adc	a,c
   24DA 6B                 7517 	ld	l,e
   24DB 67                 7518 	ld	h,a
   24DC 5E                 7519 	ld	e,(hl)
   24DD CB 2B              7520 	sra	e
   24DF CB 2B              7521 	sra	e
   24E1 CB 2B              7522 	sra	e
   24E3 CB 2B              7523 	sra	e
   24E5 7B                 7524 	ld	a,e
   24E6 17                 7525 	rla	
   24E7 9F                 7526 	sbc	a,a
   24E8 4F                 7527 	ld	c,a
   24E9 7B                 7528 	ld	a,e
   24EA C6 07              7529 	add	a,#0x07
   24EC DD 77 FC           7530 	ld	-4 (ix),a
   24EF 79                 7531 	ld	a,c
   24F0 CE 00              7532 	adc	a,#0x00
   24F2 DD 77 FD           7533 	ld	-3 (ix),a
   24F5                    7534 00105$:
                           7535 ;demo.c:1123: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   24F5 DD 7E FF           7536 	ld	a,-1 (ix)
   24F8 D6 0D              7537 	sub	a,#0x0D
   24FA DAr5Bs25           7538 	jp	C,00107$
   24FD DD 5E FF           7539 	ld	e,-1 (ix)
   2500 16 00              7540 	ld	d,#0x00
   2502 21 17 00           7541 	ld	hl,#0x0017
   2505 19                 7542 	add	hl,de
   2506 EB                 7543 	ex	de,hl
   2507 CB 23              7544 	sla	e
   2509 CB 12              7545 	rl	d
   250B CB 23              7546 	sla	e
   250D CB 12              7547 	rl	d
   250F CB 23              7548 	sla	e
   2511 CB 12              7549 	rl	d
   2513 21 69 00           7550 	ld	hl,#0x0069
   2516 19                 7551 	add	hl,de
   2517 45                 7552 	ld	b,l
   2518 54                 7553 	ld	d,h
   2519 DD 4E FE           7554 	ld	c,-2 (ix)
   251C 1E 00              7555 	ld	e,#0x00
   251E 79                 7556 	ld	a,c
   251F C6 13              7557 	add	a,#0x13
   2521 4F                 7558 	ld	c,a
   2522 7B                 7559 	ld	a,e
   2523 CE 00              7560 	adc	a,#0x00
   2525 5F                 7561 	ld	e,a
   2526 CB 21              7562 	sla	c
   2528 CB 13              7563 	rl	e
   252A CB 21              7564 	sla	c
   252C CB 13              7565 	rl	e
   252E CB 21              7566 	sla	c
   2530 CB 13              7567 	rl	e
   2532 78                 7568 	ld	a,b
   2533 81                 7569 	add	a,c
   2534 4F                 7570 	ld	c,a
   2535 7A                 7571 	ld	a,d
   2536 8B                 7572 	adc	a,e
   2537 1E 00              7573 	ld	e,#0x00
   2539 3Er00              7574 	ld	a,#<_sintab
   253B 81                 7575 	add	a,c
   253C 4F                 7576 	ld	c,a
   253D 3Es00              7577 	ld	a,#>_sintab
   253F 8B                 7578 	adc	a,e
   2540 69                 7579 	ld	l,c
   2541 67                 7580 	ld	h,a
   2542 4E                 7581 	ld	c,(hl)
   2543 CB 29              7582 	sra	c
   2545 CB 29              7583 	sra	c
   2547 CB 29              7584 	sra	c
   2549 CB 29              7585 	sra	c
   254B 79                 7586 	ld	a,c
   254C 17                 7587 	rla	
   254D 9F                 7588 	sbc	a,a
   254E 5F                 7589 	ld	e,a
   254F 79                 7590 	ld	a,c
   2550 C6 07              7591 	add	a,#0x07
   2552 DD 77 FC           7592 	ld	-4 (ix),a
   2555 7B                 7593 	ld	a,e
   2556 CE 00              7594 	adc	a,#0x00
   2558 DD 77 FD           7595 	ld	-3 (ix),a
   255B                    7596 00107$:
                           7597 ;demo.c:1125: cmd.size_x = 11;
   255B 11rBCs16           7598 	ld	de,#_cmd + 8
   255E EB                 7599 	ex	de,hl
   255F 36 0B              7600 	ld	(hl),#0x0B
   2561 23                 7601 	inc	hl
   2562 36 00              7602 	ld	(hl),#0x00
                           7603 ;demo.c:1126: cmd.size_y = 28-(14-px);
   2564 21rBEs16           7604 	ld	hl,#_cmd + 10
   2567 DD 75 F8           7605 	ld	-8 (ix),l
   256A DD 74 F9           7606 	ld	-7 (ix),h
   256D 3E 0E              7607 	ld	a,#0x0E
   256F DD 96 FC           7608 	sub	a,-4 (ix)
   2572 4F                 7609 	ld	c,a
   2573 3E 00              7610 	ld	a,#0x00
   2575 DD 9E FD           7611 	sbc	a,-3 (ix)
   2578 5F                 7612 	ld	e,a
   2579 3E 1C              7613 	ld	a,#0x1C
   257B 91                 7614 	sub	a,c
   257C 57                 7615 	ld	d,a
   257D 3E 00              7616 	ld	a,#0x00
   257F 9B                 7617 	sbc	a,e
   2580 47                 7618 	ld	b,a
   2581 DD 6E F8           7619 	ld	l,-8 (ix)
   2584 DD 66 F9           7620 	ld	h,-7 (ix)
   2587 72                 7621 	ld	(hl),d
   2588 23                 7622 	inc	hl
   2589 70                 7623 	ld	(hl),b
                           7624 ;demo.c:1127: cmd.data = 0;
   258A 21rC0s16           7625 	ld	hl,#_cmd + 12
   258D 36 00              7626 	ld	(hl),#0x00
                           7627 ;demo.c:1128: cmd.argument = 0x00; // from 70xY to left
   258F 21rC1s16           7628 	ld	hl,#_cmd + 13
   2592 36 00              7629 	ld	(hl),#0x00
                           7630 ;demo.c:1129: cmd.command = 0x98; // vram to vram, y only
   2594 21rC2s16           7631 	ld	hl,#_cmd + 14
   2597 36 98              7632 	ld	(hl),#0x98
                           7633 ;demo.c:1131: cmd.source_x = twelvetimes[px];
   2599 DD 46 FC           7634 	ld	b,-4 (ix)
   259C DD 56 FD           7635 	ld	d,-3 (ix)
   259F CB 20              7636 	sla	b
   25A1 CB 12              7637 	rl	d
   25A3 3Er20              7638 	ld	a,#<_twelvetimes
   25A5 80                 7639 	add	a,b
   25A6 47                 7640 	ld	b,a
   25A7 3Es01              7641 	ld	a,#>_twelvetimes
   25A9 8A                 7642 	adc	a,d
   25AA 68                 7643 	ld	l,b
   25AB 67                 7644 	ld	h,a
   25AC 46                 7645 	ld	b,(hl)
   25AD 23                 7646 	inc	hl
   25AE 56                 7647 	ld	d,(hl)
   25AF 21rB4s16           7648 	ld	hl,#_cmd
   25B2 70                 7649 	ld	(hl),b
   25B3 23                 7650 	inc	hl
   25B4 72                 7651 	ld	(hl),d
                           7652 ;demo.c:1132: cmd.source_y = 768+183+(15-px);
   25B5 23                 7653 	inc	hl
   25B6 DD 75 F8           7654 	ld	-8 (ix),l
   25B9 DD 74 F9           7655 	ld	-7 (ix),h
   25BC 3E C6              7656 	ld	a,#0xC6
   25BE DD 96 FC           7657 	sub	a,-4 (ix)
   25C1 47                 7658 	ld	b,a
   25C2 3E 03              7659 	ld	a,#0x03
   25C4 DD 9E FD           7660 	sbc	a,-3 (ix)
   25C7 57                 7661 	ld	d,a
   25C8 DD 6E F8           7662 	ld	l,-8 (ix)
   25CB DD 66 F9           7663 	ld	h,-7 (ix)
   25CE 70                 7664 	ld	(hl),b
   25CF 23                 7665 	inc	hl
   25D0 72                 7666 	ld	(hl),d
                           7667 ;demo.c:1133: cmd.dest_x = 0+twelvetimes[x];
   25D1 21rB8s16           7668 	ld	hl,#_cmd + 4
   25D4 DD 75 F8           7669 	ld	-8 (ix),l
   25D7 DD 74 F9           7670 	ld	-7 (ix),h
   25DA DD 7E FF           7671 	ld	a,-1 (ix)
   25DD 87                 7672 	add	a,a
   25DE C6r20              7673 	add	a,#<_twelvetimes
   25E0 6F                 7674 	ld	l,a
   25E1 3Es01              7675 	ld	a,#>_twelvetimes
   25E3 CE 00              7676 	adc	a,#0x00
   25E5 67                 7677 	ld	h,a
   25E6 46                 7678 	ld	b,(hl)
   25E7 23                 7679 	inc	hl
   25E8 56                 7680 	ld	d,(hl)
   25E9 DD 6E F8           7681 	ld	l,-8 (ix)
   25EC DD 66 F9           7682 	ld	h,-7 (ix)
   25EF 70                 7683 	ld	(hl),b
   25F0 23                 7684 	inc	hl
   25F1 72                 7685 	ld	(hl),d
                           7686 ;demo.c:1134: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   25F2 21rBAs16           7687 	ld	hl,#_cmd + 6
   25F5 DD 75 F8           7688 	ld	-8 (ix),l
   25F8 DD 74 F9           7689 	ld	-7 (ix),h
   25FB 3Er54              7690 	ld	a,#<_eighttimes
   25FD DD 86 F7           7691 	add	a,-9 (ix)
   2600 6F                 7692 	ld	l,a
   2601 3Es01              7693 	ld	a,#>_eighttimes
   2603 CE 00              7694 	adc	a,#0x00
   2605 67                 7695 	ld	h,a
   2606 46                 7696 	ld	b,(hl)
   2607 23                 7697 	inc	hl
   2608 56                 7698 	ld	d,(hl)
   2609 78                 7699 	ld	a,b
   260A C6 04              7700 	add	a,#0x04
   260C 47                 7701 	ld	b,a
   260D 7A                 7702 	ld	a,d
   260E CE 00              7703 	adc	a,#0x00
   2610 57                 7704 	ld	d,a
   2611 78                 7705 	ld	a,b
   2612 81                 7706 	add	a,c
   2613 47                 7707 	ld	b,a
   2614 7A                 7708 	ld	a,d
   2615 8B                 7709 	adc	a,e
   2616 57                 7710 	ld	d,a
   2617 DD 6E F8           7711 	ld	l,-8 (ix)
   261A DD 66 F9           7712 	ld	h,-7 (ix)
   261D 70                 7713 	ld	(hl),b
   261E 23                 7714 	inc	hl
   261F 72                 7715 	ld	(hl),d
                           7716 ;demo.c:1135: vdp_copier(&cmd);
   2620 C5                 7717 	push	bc
   2621 D5                 7718 	push	de
   2622 21rB4s16           7719 	ld	hl,#_cmd
   2625 E5                 7720 	push	hl
   2626 CDr00s00           7721 	call	_vdp_copier
   2629 F1                 7722 	pop	af
   262A D1                 7723 	pop	de
   262B C1                 7724 	pop	bc
                           7725 ;demo.c:1136: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   262C 21rBAs16           7726 	ld	hl,#_cmd + 6
   262F DD 75 F8           7727 	ld	-8 (ix),l
   2632 DD 74 F9           7728 	ld	-7 (ix),h
   2635 3Er54              7729 	ld	a,#<_eighttimes
   2637 DD 86 F7           7730 	add	a,-9 (ix)
   263A 6F                 7731 	ld	l,a
   263B 3Es01              7732 	ld	a,#>_eighttimes
   263D CE 00              7733 	adc	a,#0x00
   263F 67                 7734 	ld	h,a
   2640 46                 7735 	ld	b,(hl)
   2641 23                 7736 	inc	hl
   2642 56                 7737 	ld	d,(hl)
   2643 78                 7738 	ld	a,b
   2644 C6 04              7739 	add	a,#0x04
   2646 47                 7740 	ld	b,a
   2647 7A                 7741 	ld	a,d
   2648 CE 00              7742 	adc	a,#0x00
   264A C6 01              7743 	add	a,#0x01
   264C 57                 7744 	ld	d,a
   264D 78                 7745 	ld	a,b
   264E 81                 7746 	add	a,c
   264F 4F                 7747 	ld	c,a
   2650 7A                 7748 	ld	a,d
   2651 8B                 7749 	adc	a,e
   2652 5F                 7750 	ld	e,a
   2653 DD 6E F8           7751 	ld	l,-8 (ix)
   2656 DD 66 F9           7752 	ld	h,-7 (ix)
   2659 71                 7753 	ld	(hl),c
   265A 23                 7754 	inc	hl
   265B 73                 7755 	ld	(hl),e
                           7756 ;demo.c:1137: vdp_copier(&cmd);
   265C 21rB4s16           7757 	ld	hl,#_cmd
   265F E5                 7758 	push	hl
   2660 CDr00s00           7759 	call	_vdp_copier
   2663 F1                 7760 	pop	af
   2664                    7761 00110$:
                           7762 ;demo.c:1119: for (x = 0; x < 21; x+=1) {
   2664 DD 34 FF           7763 	inc	-1 (ix)
   2667 C3r83s24           7764 	jp	00108$
   266A                    7765 00134$:
                           7766 ;demo.c:1118: for (y = 9; y < 15; y+=1) {
   266A DD 34 FE           7767 	inc	-2 (ix)
   266D C3r70s24           7768 	jp	00132$
   2670                    7769 00113$:
                           7770 ;demo.c:1143: if (buf == -1) { bo = 0; ya = 0; }
   2670 3Ar97s17           7771 	ld	a,(#_buf+0)
   2673 3C                 7772 	inc	a
   2674 20 06              7773 	jr	NZ,00188$
   2676 3Ar98s17           7774 	ld	a,(#_buf+1)
   2679 3C                 7775 	inc	a
   267A 28 02              7776 	jr	Z,00189$
   267C                    7777 00188$:
   267C 18 05              7778 	jr	00115$
   267E                    7779 00189$:
   267E 01 00 00           7780 	ld	bc,#0x0000
   2681 18 03              7781 	jr	00116$
   2683                    7782 00115$:
                           7783 ;demo.c:1144: else { bo = 256; ya = 6;}
   2683 01 00 01           7784 	ld	bc,#0x0100
   2686                    7785 00116$:
                           7786 ;demo.c:1146: cmd.size_x = 72;
   2686 11rBCs16           7787 	ld	de,#_cmd + 8
   2689 EB                 7788 	ex	de,hl
   268A 36 48              7789 	ld	(hl),#0x48
   268C 23                 7790 	inc	hl
   268D 36 00              7791 	ld	(hl),#0x00
                           7792 ;demo.c:1147: cmd.size_y = 80;
   268F 11rBEs16           7793 	ld	de,#_cmd + 10
   2692 EB                 7794 	ex	de,hl
   2693 36 50              7795 	ld	(hl),#0x50
   2695 23                 7796 	inc	hl
   2696 36 00              7797 	ld	(hl),#0x00
                           7798 ;demo.c:1148: cmd.data = 0;
   2698 11rC0s16           7799 	ld	de,#_cmd + 12
   269B 3E 00              7800 	ld	a,#0x00
   269D 12                 7801 	ld	(de),a
                           7802 ;demo.c:1149: cmd.argument = 0x00; // from 70xY to left
   269E 11rC1s16           7803 	ld	de,#_cmd + 13
   26A1 3E 00              7804 	ld	a,#0x00
   26A3 12                 7805 	ld	(de),a
                           7806 ;demo.c:1150: cmd.command = 0xd0; // vram to vram, y only
   26A4 11rC2s16           7807 	ld	de,#_cmd + 14
   26A7 3E D0              7808 	ld	a,#0xD0
   26A9 12                 7809 	ld	(de),a
                           7810 ;demo.c:1151: cmd.source_x = 178;
   26AA 21rB4s16           7811 	ld	hl,#_cmd
   26AD 36 B2              7812 	ld	(hl),#0xB2
   26AF 23                 7813 	inc	hl
   26B0 36 00              7814 	ld	(hl),#0x00
                           7815 ;demo.c:1152: cmd.source_y = 0;
   26B2 11rB6s16           7816 	ld	de,#_cmd + 2
   26B5 EB                 7817 	ex	de,hl
   26B6 36 00              7818 	ld	(hl),#0x00
   26B8 23                 7819 	inc	hl
   26B9 36 00              7820 	ld	(hl),#0x00
                           7821 ;demo.c:1153: cmd.dest_x = 84;
   26BB 11rB8s16           7822 	ld	de,#_cmd + 4
   26BE EB                 7823 	ex	de,hl
   26BF 36 54              7824 	ld	(hl),#0x54
   26C1 23                 7825 	inc	hl
   26C2 36 00              7826 	ld	(hl),#0x00
                           7827 ;demo.c:1154: cmd.dest_y = 72+bo;
   26C4 11rBAs16           7828 	ld	de,#_cmd + 6
   26C7 21 48 00           7829 	ld	hl,#0x0048
   26CA 09                 7830 	add	hl,bc
   26CB 4D                 7831 	ld	c,l
   26CC 44                 7832 	ld	b,h
   26CD EB                 7833 	ex	de,hl
   26CE 71                 7834 	ld	(hl),c
   26CF 23                 7835 	inc	hl
   26D0 70                 7836 	ld	(hl),b
                           7837 ;demo.c:1155: vdp_copier(&cmd);
   26D1 C5                 7838 	push	bc
   26D2 21rB4s16           7839 	ld	hl,#_cmd
   26D5 E5                 7840 	push	hl
   26D6 CDr00s00           7841 	call	_vdp_copier
   26D9 F1                 7842 	pop	af
   26DA C1                 7843 	pop	bc
                           7844 ;demo.c:1157: lukema = ffa;
   26DB 2Ar99s17           7845 	ld	hl,(_ffa)
   26DE DD 75 FA           7846 	ld	-6 (ix),l
   26E1 DD 74 FB           7847 	ld	-5 (ix),h
                           7848 ;demo.c:1158: for (y = 0; y < 5; y+=1) {
   26E4 DD 36 FE 00        7849 	ld	-2 (ix),#0x00
   26E8                    7850 00140$:
   26E8 DD 7E FE           7851 	ld	a,-2 (ix)
   26EB D6 05              7852 	sub	a,#0x05
   26ED D2r4Es28           7853 	jp	NC,00143$
                           7854 ;demo.c:1159: for (x = 0; x < 6; x+=1) {
   26F0 DD 7E FE           7855 	ld	a,-2 (ix)
   26F3 87                 7856 	add	a,a
   26F4 DD 77 F7           7857 	ld	-9 (ix),a
   26F7 DD 36 FF 00        7858 	ld	-1 (ix),#0x00
   26FB                    7859 00136$:
   26FB DD 7E FF           7860 	ld	a,-1 (ix)
   26FE D6 06              7861 	sub	a,#0x06
   2700 D2r48s28           7862 	jp	NC,00142$
                           7863 ;demo.c:1161: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   2703 DD 5E FF           7864 	ld	e,-1 (ix)
   2706 16 00              7865 	ld	d,#0x00
   2708 CB 23              7866 	sla	e
   270A CB 12              7867 	rl	d
   270C CB 23              7868 	sla	e
   270E CB 12              7869 	rl	d
   2710 CB 23              7870 	sla	e
   2712 CB 12              7871 	rl	d
   2714 DD 7E FA           7872 	ld	a,-6 (ix)
   2717 83                 7873 	add	a,e
   2718 DD 77 F8           7874 	ld	-8 (ix),a
   271B DD 7E FB           7875 	ld	a,-5 (ix)
   271E 8A                 7876 	adc	a,d
   271F DD 77 F9           7877 	ld	-7 (ix),a
   2722 DD 5E FE           7878 	ld	e,-2 (ix)
   2725 16 00              7879 	ld	d,#0x00
   2727 CB 23              7880 	sla	e
   2729 CB 12              7881 	rl	d
   272B CB 23              7882 	sla	e
   272D CB 12              7883 	rl	d
   272F DD 7E F8           7884 	ld	a,-8 (ix)
   2732 83                 7885 	add	a,e
   2733 5F                 7886 	ld	e,a
   2734 DD 7E F9           7887 	ld	a,-7 (ix)
   2737 8A                 7888 	adc	a,d
   2738 16 00              7889 	ld	d,#0x00
   273A 21r00s00           7890 	ld	hl,#_sintab
   273D 19                 7891 	add	hl,de
   273E 5E                 7892 	ld	e,(hl)
   273F CB 2B              7893 	sra	e
   2741 CB 2B              7894 	sra	e
   2743 CB 2B              7895 	sra	e
   2745 CB 2B              7896 	sra	e
   2747 7B                 7897 	ld	a,e
   2748 17                 7898 	rla	
   2749 9F                 7899 	sbc	a,a
   274A 57                 7900 	ld	d,a
   274B 21 07 00           7901 	ld	hl,#0x0007
   274E 19                 7902 	add	hl,de
   274F DD 75 FC           7903 	ld	-4 (ix),l
                           7904 ;demo.c:1162: if (px < 0) px = 0; 
   2752 DD 74 FD           7905 	ld	-3 (ix),h
   2755 7C                 7906 	ld	a, h
   2756 CB 7F              7907 	bit	7,a
   2758 28 08              7908 	jr	Z,00118$
   275A DD 36 FC 00        7909 	ld	-4 (ix),#0x00
   275E DD 36 FD 00        7910 	ld	-3 (ix),#0x00
   2762                    7911 00118$:
                           7912 ;demo.c:1163: if (px > 14) px = 14; 
   2762 3E 0E              7913 	ld	a,#0x0E
   2764 DD 96 FC           7914 	sub	a,-4 (ix)
   2767 3E 00              7915 	ld	a,#0x00
   2769 DD 9E FD           7916 	sbc	a,-3 (ix)
   276C F2r77s27           7917 	jp	P,00120$
   276F DD 36 FC 0E        7918 	ld	-4 (ix),#0x0E
   2773 DD 36 FD 00        7919 	ld	-3 (ix),#0x00
   2777                    7920 00120$:
                           7921 ;demo.c:1165: cmd.size_x = 12;
   2777 11rBCs16           7922 	ld	de,#_cmd + 8
   277A EB                 7923 	ex	de,hl
   277B 36 0C              7924 	ld	(hl),#0x0C
   277D 23                 7925 	inc	hl
   277E 36 00              7926 	ld	(hl),#0x00
                           7927 ;demo.c:1166: cmd.size_y = 11;
   2780 11rBEs16           7928 	ld	de,#_cmd + 10
   2783 EB                 7929 	ex	de,hl
   2784 36 0B              7930 	ld	(hl),#0x0B
   2786 23                 7931 	inc	hl
   2787 36 00              7932 	ld	(hl),#0x00
                           7933 ;demo.c:1167: cmd.data = 0;
   2789 11rC0s16           7934 	ld	de,#_cmd + 12
   278C 3E 00              7935 	ld	a,#0x00
   278E 12                 7936 	ld	(de),a
                           7937 ;demo.c:1168: cmd.argument = 0x00; // from 70xY to left
   278F 11rC1s16           7938 	ld	de,#_cmd + 13
   2792 3E 00              7939 	ld	a,#0x00
   2794 12                 7940 	ld	(de),a
                           7941 ;demo.c:1169: cmd.command = 0x98; // vram to vram, y only
   2795 11rC2s16           7942 	ld	de,#_cmd + 14
   2798 3E 98              7943 	ld	a,#0x98
   279A 12                 7944 	ld	(de),a
                           7945 ;demo.c:1171: cmd.source_x = twelvetimes[px];
   279B DD 5E FC           7946 	ld	e,-4 (ix)
   279E DD 56 FD           7947 	ld	d,-3 (ix)
   27A1 CB 23              7948 	sla	e
   27A3 CB 12              7949 	rl	d
   27A5 21r20s01           7950 	ld	hl,#_twelvetimes
   27A8 19                 7951 	add	hl,de
   27A9 5E                 7952 	ld	e,(hl)
   27AA 23                 7953 	inc	hl
   27AB 56                 7954 	ld	d,(hl)
   27AC 21rB4s16           7955 	ld	hl,#_cmd
   27AF 73                 7956 	ld	(hl),e
   27B0 23                 7957 	inc	hl
   27B1 72                 7958 	ld	(hl),d
                           7959 ;demo.c:1172: cmd.source_y = 768+183+16-px;
   27B2 23                 7960 	inc	hl
   27B3 DD 75 F8           7961 	ld	-8 (ix),l
   27B6 DD 74 F9           7962 	ld	-7 (ix),h
   27B9 3E C7              7963 	ld	a,#0xC7
   27BB DD 96 FC           7964 	sub	a,-4 (ix)
   27BE 5F                 7965 	ld	e,a
   27BF 3E 03              7966 	ld	a,#0x03
   27C1 DD 9E FD           7967 	sbc	a,-3 (ix)
   27C4 57                 7968 	ld	d,a
   27C5 DD 6E F8           7969 	ld	l,-8 (ix)
   27C8 DD 66 F9           7970 	ld	h,-7 (ix)
   27CB 73                 7971 	ld	(hl),e
   27CC 23                 7972 	inc	hl
   27CD 72                 7973 	ld	(hl),d
                           7974 ;demo.c:1173: cmd.dest_x = 84+twelvetimes[x];
   27CE 21rB8s16           7975 	ld	hl,#_cmd + 4
   27D1 DD 75 F8           7976 	ld	-8 (ix),l
   27D4 DD 74 F9           7977 	ld	-7 (ix),h
   27D7 DD 7E FF           7978 	ld	a,-1 (ix)
   27DA 87                 7979 	add	a,a
   27DB C6r20              7980 	add	a,#<_twelvetimes
   27DD 6F                 7981 	ld	l,a
   27DE 3Es01              7982 	ld	a,#>_twelvetimes
   27E0 CE 00              7983 	adc	a,#0x00
   27E2 67                 7984 	ld	h,a
   27E3 5E                 7985 	ld	e,(hl)
   27E4 23                 7986 	inc	hl
   27E5 56                 7987 	ld	d,(hl)
   27E6 21 54 00           7988 	ld	hl,#0x0054
   27E9 19                 7989 	add	hl,de
   27EA EB                 7990 	ex	de,hl
   27EB DD 6E F8           7991 	ld	l,-8 (ix)
   27EE DD 66 F9           7992 	ld	h,-7 (ix)
   27F1 73                 7993 	ld	(hl),e
   27F2 23                 7994 	inc	hl
   27F3 72                 7995 	ld	(hl),d
                           7996 ;demo.c:1174: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   27F4 21rBAs16           7997 	ld	hl,#_cmd + 6
   27F7 DD 75 F8           7998 	ld	-8 (ix),l
   27FA DD 74 F9           7999 	ld	-7 (ix),h
   27FD 3Er54              8000 	ld	a,#<_eighttimes
   27FF DD 86 F7           8001 	add	a,-9 (ix)
   2802 6F                 8002 	ld	l,a
   2803 3Es01              8003 	ld	a,#>_eighttimes
   2805 CE 00              8004 	adc	a,#0x00
   2807 67                 8005 	ld	h,a
   2808 5E                 8006 	ld	e,(hl)
   2809 23                 8007 	inc	hl
   280A 56                 8008 	ld	d,(hl)
   280B 13                 8009 	inc	de
   280C 13                 8010 	inc	de
   280D 13                 8011 	inc	de
   280E 13                 8012 	inc	de
   280F 79                 8013 	ld	a,c
   2810 83                 8014 	add	a,e
   2811 DD 77 F5           8015 	ld	-11 (ix),a
   2814 78                 8016 	ld	a,b
   2815 8A                 8017 	adc	a,d
   2816 DD 77 F6           8018 	ld	-10 (ix),a
   2819 3E 0E              8019 	ld	a,#0x0E
   281B DD 96 FC           8020 	sub	a,-4 (ix)
   281E 5F                 8021 	ld	e,a
   281F 3E 00              8022 	ld	a,#0x00
   2821 DD 9E FD           8023 	sbc	a,-3 (ix)
   2824 57                 8024 	ld	d,a
   2825 DD 7E F5           8025 	ld	a,-11 (ix)
   2828 83                 8026 	add	a,e
   2829 5F                 8027 	ld	e,a
   282A DD 7E F6           8028 	ld	a,-10 (ix)
   282D 8A                 8029 	adc	a,d
   282E 57                 8030 	ld	d,a
   282F DD 6E F8           8031 	ld	l,-8 (ix)
   2832 DD 66 F9           8032 	ld	h,-7 (ix)
   2835 73                 8033 	ld	(hl),e
   2836 23                 8034 	inc	hl
   2837 72                 8035 	ld	(hl),d
                           8036 ;demo.c:1175: vdp_copier(&cmd);
   2838 C5                 8037 	push	bc
   2839 21rB4s16           8038 	ld	hl,#_cmd
   283C E5                 8039 	push	hl
   283D CDr00s00           8040 	call	_vdp_copier
   2840 F1                 8041 	pop	af
   2841 C1                 8042 	pop	bc
                           8043 ;demo.c:1159: for (x = 0; x < 6; x+=1) {
   2842 DD 34 FF           8044 	inc	-1 (ix)
   2845 C3rFBs26           8045 	jp	00136$
   2848                    8046 00142$:
                           8047 ;demo.c:1158: for (y = 0; y < 5; y+=1) {
   2848 DD 34 FE           8048 	inc	-2 (ix)
   284B C3rE8s26           8049 	jp	00140$
   284E                    8050 00143$:
                           8051 ;demo.c:1180: for (x = 0; x < 6; x+=1) {
   284E DD 36 FF 00        8052 	ld	-1 (ix),#0x00
   2852                    8053 00144$:
   2852 DD 7E FF           8054 	ld	a,-1 (ix)
   2855 D6 06              8055 	sub	a,#0x06
   2857 D2r98s29           8056 	jp	NC,00147$
                           8057 ;demo.c:1181: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   285A DD 5E FF           8058 	ld	e,-1 (ix)
   285D 16 00              8059 	ld	d,#0x00
   285F CB 23              8060 	sla	e
   2861 CB 12              8061 	rl	d
   2863 CB 23              8062 	sla	e
   2865 CB 12              8063 	rl	d
   2867 CB 23              8064 	sla	e
   2869 CB 12              8065 	rl	d
   286B DD 7E FA           8066 	ld	a,-6 (ix)
   286E 83                 8067 	add	a,e
   286F 5F                 8068 	ld	e,a
   2870 DD 7E FB           8069 	ld	a,-5 (ix)
   2873 8A                 8070 	adc	a,d
   2874 57                 8071 	ld	d,a
   2875 21 14 00           8072 	ld	hl,#0x0014
   2878 19                 8073 	add	hl,de
   2879 5D                 8074 	ld	e,l
   287A 16 00              8075 	ld	d,#0x00
   287C 21r00s00           8076 	ld	hl,#_sintab
   287F 19                 8077 	add	hl,de
   2880 5E                 8078 	ld	e,(hl)
   2881 CB 2B              8079 	sra	e
   2883 CB 2B              8080 	sra	e
   2885 CB 2B              8081 	sra	e
   2887 CB 2B              8082 	sra	e
   2889 7B                 8083 	ld	a,e
   288A 17                 8084 	rla	
   288B 9F                 8085 	sbc	a,a
   288C 57                 8086 	ld	d,a
   288D 21 07 00           8087 	ld	hl,#0x0007
   2890 19                 8088 	add	hl,de
   2891 DD 75 FC           8089 	ld	-4 (ix),l
                           8090 ;demo.c:1182: if (px < 0) px = 0; 
   2894 DD 74 FD           8091 	ld	-3 (ix),h
   2897 7C                 8092 	ld	a, h
   2898 CB 7F              8093 	bit	7,a
   289A 28 08              8094 	jr	Z,00122$
   289C DD 36 FC 00        8095 	ld	-4 (ix),#0x00
   28A0 DD 36 FD 00        8096 	ld	-3 (ix),#0x00
   28A4                    8097 00122$:
                           8098 ;demo.c:1183: if (px > 14) px = 14; 
   28A4 3E 0E              8099 	ld	a,#0x0E
   28A6 DD 96 FC           8100 	sub	a,-4 (ix)
   28A9 3E 00              8101 	ld	a,#0x00
   28AB DD 9E FD           8102 	sbc	a,-3 (ix)
   28AE F2rB9s28           8103 	jp	P,00124$
   28B1 DD 36 FC 0E        8104 	ld	-4 (ix),#0x0E
   28B5 DD 36 FD 00        8105 	ld	-3 (ix),#0x00
   28B9                    8106 00124$:
                           8107 ;demo.c:1185: cmd.size_x = 12;
   28B9 11rBCs16           8108 	ld	de,#_cmd + 8
   28BC EB                 8109 	ex	de,hl
   28BD 36 0C              8110 	ld	(hl),#0x0C
   28BF 23                 8111 	inc	hl
   28C0 36 00              8112 	ld	(hl),#0x00
                           8113 ;demo.c:1186: cmd.size_y = 27-(14-px);
   28C2 21rBEs16           8114 	ld	hl,#_cmd + 10
   28C5 DD 75 F5           8115 	ld	-11 (ix),l
   28C8 DD 74 F6           8116 	ld	-10 (ix),h
   28CB 3E 0E              8117 	ld	a,#0x0E
   28CD DD 96 FC           8118 	sub	a,-4 (ix)
   28D0 DD 77 F8           8119 	ld	-8 (ix),a
   28D3 3E 00              8120 	ld	a,#0x00
   28D5 DD 9E FD           8121 	sbc	a,-3 (ix)
   28D8 DD 77 F9           8122 	ld	-7 (ix),a
   28DB 3E 1B              8123 	ld	a,#0x1B
   28DD DD 96 F8           8124 	sub	a,-8 (ix)
   28E0 5F                 8125 	ld	e,a
   28E1 3E 00              8126 	ld	a,#0x00
   28E3 DD 9E F9           8127 	sbc	a,-7 (ix)
   28E6 57                 8128 	ld	d,a
   28E7 DD 6E F5           8129 	ld	l,-11 (ix)
   28EA DD 66 F6           8130 	ld	h,-10 (ix)
   28ED 73                 8131 	ld	(hl),e
   28EE 23                 8132 	inc	hl
   28EF 72                 8133 	ld	(hl),d
                           8134 ;demo.c:1187: cmd.data = 0;
   28F0 11rC0s16           8135 	ld	de,#_cmd + 12
   28F3 3E 00              8136 	ld	a,#0x00
   28F5 12                 8137 	ld	(de),a
                           8138 ;demo.c:1188: cmd.argument = 0x00; // from 70xY to left
   28F6 11rC1s16           8139 	ld	de,#_cmd + 13
   28F9 3E 00              8140 	ld	a,#0x00
   28FB 12                 8141 	ld	(de),a
                           8142 ;demo.c:1189: cmd.command = 0x98; // vram to vram, y only
   28FC 11rC2s16           8143 	ld	de,#_cmd + 14
   28FF 3E 98              8144 	ld	a,#0x98
   2901 12                 8145 	ld	(de),a
                           8146 ;demo.c:1191: cmd.source_x = twelvetimes[px];
   2902 DD 5E FC           8147 	ld	e,-4 (ix)
   2905 DD 56 FD           8148 	ld	d,-3 (ix)
   2908 CB 23              8149 	sla	e
   290A CB 12              8150 	rl	d
   290C 21r20s01           8151 	ld	hl,#_twelvetimes
   290F 19                 8152 	add	hl,de
   2910 5E                 8153 	ld	e,(hl)
   2911 23                 8154 	inc	hl
   2912 56                 8155 	ld	d,(hl)
   2913 21rB4s16           8156 	ld	hl,#_cmd
   2916 73                 8157 	ld	(hl),e
   2917 23                 8158 	inc	hl
   2918 72                 8159 	ld	(hl),d
                           8160 ;demo.c:1192: cmd.source_y = 768+183+ 16-px;
   2919 23                 8161 	inc	hl
   291A DD 75 F5           8162 	ld	-11 (ix),l
   291D DD 74 F6           8163 	ld	-10 (ix),h
   2920 3E C7              8164 	ld	a,#0xC7
   2922 DD 96 FC           8165 	sub	a,-4 (ix)
   2925 5F                 8166 	ld	e,a
   2926 3E 03              8167 	ld	a,#0x03
   2928 DD 9E FD           8168 	sbc	a,-3 (ix)
   292B 57                 8169 	ld	d,a
   292C DD 6E F5           8170 	ld	l,-11 (ix)
   292F DD 66 F6           8171 	ld	h,-10 (ix)
   2932 73                 8172 	ld	(hl),e
   2933 23                 8173 	inc	hl
   2934 72                 8174 	ld	(hl),d
                           8175 ;demo.c:1193: cmd.dest_x = 84+twelvetimes[x];
   2935 21rB8s16           8176 	ld	hl,#_cmd + 4
   2938 DD 75 F5           8177 	ld	-11 (ix),l
   293B DD 74 F6           8178 	ld	-10 (ix),h
   293E DD 7E FF           8179 	ld	a,-1 (ix)
   2941 87                 8180 	add	a,a
   2942 C6r20              8181 	add	a,#<_twelvetimes
   2944 6F                 8182 	ld	l,a
   2945 3Es01              8183 	ld	a,#>_twelvetimes
   2947 CE 00              8184 	adc	a,#0x00
   2949 67                 8185 	ld	h,a
   294A 5E                 8186 	ld	e,(hl)
   294B 23                 8187 	inc	hl
   294C 56                 8188 	ld	d,(hl)
   294D 21 54 00           8189 	ld	hl,#0x0054
   2950 19                 8190 	add	hl,de
   2951 EB                 8191 	ex	de,hl
   2952 DD 6E F5           8192 	ld	l,-11 (ix)
   2955 DD 66 F6           8193 	ld	h,-10 (ix)
   2958 73                 8194 	ld	(hl),e
   2959 23                 8195 	inc	hl
   295A 72                 8196 	ld	(hl),d
                           8197 ;demo.c:1194: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   295B 21rBAs16           8198 	ld	hl,#_cmd + 6
   295E DD 75 F5           8199 	ld	-11 (ix),l
   2961 DD 74 F6           8200 	ld	-10 (ix),h
   2964 11r5Es01           8201 	ld	de,#_eighttimes + 10
   2967 EB                 8202 	ex	de,hl
   2968 5E                 8203 	ld	e,(hl)
   2969 23                 8204 	inc	hl
   296A 56                 8205 	ld	d,(hl)
   296B 13                 8206 	inc	de
   296C 13                 8207 	inc	de
   296D 13                 8208 	inc	de
   296E 13                 8209 	inc	de
   296F 79                 8210 	ld	a,c
   2970 83                 8211 	add	a,e
   2971 5F                 8212 	ld	e,a
   2972 78                 8213 	ld	a,b
   2973 8A                 8214 	adc	a,d
   2974 57                 8215 	ld	d,a
   2975 7B                 8216 	ld	a,e
   2976 DD 86 F8           8217 	add	a,-8 (ix)
   2979 5F                 8218 	ld	e,a
   297A 7A                 8219 	ld	a,d
   297B DD 8E F9           8220 	adc	a,-7 (ix)
   297E 57                 8221 	ld	d,a
   297F DD 6E F5           8222 	ld	l,-11 (ix)
   2982 DD 66 F6           8223 	ld	h,-10 (ix)
   2985 73                 8224 	ld	(hl),e
   2986 23                 8225 	inc	hl
   2987 72                 8226 	ld	(hl),d
                           8227 ;demo.c:1195: vdp_copier(&cmd);
   2988 C5                 8228 	push	bc
   2989 21rB4s16           8229 	ld	hl,#_cmd
   298C E5                 8230 	push	hl
   298D CDr00s00           8231 	call	_vdp_copier
   2990 F1                 8232 	pop	af
   2991 C1                 8233 	pop	bc
                           8234 ;demo.c:1180: for (x = 0; x < 6; x+=1) {
   2992 DD 34 FF           8235 	inc	-1 (ix)
   2995 C3r52s28           8236 	jp	00144$
   2998                    8237 00147$:
                           8238 ;demo.c:1199: if (buf == -1) vdp_register(2, 0x1F);
   2998 3Ar97s17           8239 	ld	a,(#_buf+0)
   299B 3C                 8240 	inc	a
   299C 20 06              8241 	jr	NZ,00200$
   299E 3Ar98s17           8242 	ld	a,(#_buf+1)
   29A1 3C                 8243 	inc	a
   29A2 28 02              8244 	jr	Z,00201$
   29A4                    8245 00200$:
   29A4 18 0A              8246 	jr	00126$
   29A6                    8247 00201$:
   29A6 21 02 1F           8248 	ld	hl,#0x1F02
   29A9 E5                 8249 	push	hl
   29AA CDr00s00           8250 	call	_vdp_register
   29AD F1                 8251 	pop	af
   29AE 18 08              8252 	jr	00127$
   29B0                    8253 00126$:
                           8254 ;demo.c:1200: else vdp_register(2, 0x3F);
   29B0 21 02 3F           8255 	ld	hl,#0x3F02
   29B3 E5                 8256 	push	hl
   29B4 CDr00s00           8257 	call	_vdp_register
   29B7 F1                 8258 	pop	af
   29B8                    8259 00127$:
                           8260 ;demo.c:1203: buf = -buf;
   29B8 AF                 8261 	xor	a,a
   29B9 FD 21r97s17        8262 	ld	iy,#_buf
   29BD 3E 00              8263 	ld	a,#0x00
   29BF FD 9E 00           8264 	sbc	a,0 (iy)
   29C2 21r97s17           8265 	ld	hl,#_buf + 0
   29C5 77                 8266 	ld	(hl), a
   29C6 FD 21r97s17        8267 	ld	iy,#_buf
   29CA 3E 00              8268 	ld	a,#0x00
   29CC FD 9E 01           8269 	sbc	a,1 (iy)
   29CF 21r98s17           8270 	ld	hl,#_buf + 1
   29D2 77                 8271 	ld	(hl), a
                           8272 ;demo.c:1205: ffa+=8;
   29D3 21r99s17           8273 	ld	hl,#_ffa
   29D6 7E                 8274 	ld	a,(hl)
   29D7 C6 08              8275 	add	a,#0x08
   29D9 23                 8276 	inc	hl
   29DA 2B                 8277 	dec	hl
   29DB C5                 8278 	push	bc
   29DC 4F                 8279 	ld	c, a
   29DD 23                 8280 	inc	hl
   29DE 7E                 8281 	ld	a, (hl)
   29DF 47                 8282 	ld	b, a
   29E0 79                 8283 	ld	a, c
   29E1 2B                 8284 	dec	hl
   29E2 77                 8285 	ld	(hl), a
   29E3 78                 8286 	ld	a, b
   29E4 C1                 8287 	pop	bc
   29E5 CE 00              8288 	adc	a,#0x00
   29E7 23                 8289 	inc	hl
   29E8 77                 8290 	ld	(hl),a
   29E9 DD F9              8291 	ld	sp,ix
   29EB DD E1              8292 	pop	ix
   29ED C9                 8293 	ret
   29EE                    8294 _thewave_end::
                           8295 ;demo.c:1211: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           8296 ;	---------------------------------
                           8297 ; Function drawtritile
                           8298 ; ---------------------------------
   29EE                    8299 _drawtritile_start::
   29EE                    8300 _drawtritile:
   29EE DD E5              8301 	push	ix
   29F0 DD 21 00 00        8302 	ld	ix,#0
   29F4 DD 39              8303 	add	ix,sp
                           8304 ;demo.c:1212: cmd.source_x = tx;
   29F6 DD 4E 04           8305 	ld	c,4 (ix)
   29F9 06 00              8306 	ld	b,#0x00
   29FB 21rB4s16           8307 	ld	hl,#_cmd
   29FE 71                 8308 	ld	(hl),c
   29FF 23                 8309 	inc	hl
   2A00 70                 8310 	ld	(hl),b
                           8311 ;demo.c:1213: cmd.source_y = ty-1;
   2A01 01rB6s16           8312 	ld	bc,#_cmd + 2
   2A04 DD 5E 05           8313 	ld	e,5 (ix)
   2A07 DD 56 06           8314 	ld	d,6 (ix)
   2A0A 1B                 8315 	dec	de
   2A0B 69                 8316 	ld	l,c
   2A0C 60                 8317 	ld	h,b
   2A0D 73                 8318 	ld	(hl),e
   2A0E 23                 8319 	inc	hl
   2A0F 72                 8320 	ld	(hl),d
                           8321 ;demo.c:1214: cmd.dest_x = x;
   2A10 01rB8s16           8322 	ld	bc,#_cmd + 4
   2A13 DD 5E 07           8323 	ld	e,7 (ix)
   2A16 16 00              8324 	ld	d,#0x00
   2A18 69                 8325 	ld	l,c
   2A19 60                 8326 	ld	h,b
   2A1A 73                 8327 	ld	(hl),e
   2A1B 23                 8328 	inc	hl
   2A1C 72                 8329 	ld	(hl),d
                           8330 ;demo.c:1215: cmd.dest_y = y;
   2A1D 01rBAs16           8331 	ld	bc,#_cmd + 6
   2A20 DD 5E 08           8332 	ld	e,8 (ix)
   2A23 16 00              8333 	ld	d,#0x00
   2A25 69                 8334 	ld	l,c
   2A26 60                 8335 	ld	h,b
   2A27 73                 8336 	ld	(hl),e
   2A28 23                 8337 	inc	hl
   2A29 72                 8338 	ld	(hl),d
                           8339 ;demo.c:1216: cmd.size_x = 16;
   2A2A 21rBCs16           8340 	ld	hl, #_cmd + 8
   2A2D 36 10              8341 	ld	(hl),#0x10
   2A2F 23                 8342 	inc	hl
   2A30 36 00              8343 	ld	(hl),#0x00
                           8344 ;demo.c:1217: cmd.size_y = 16;
   2A32 21rBEs16           8345 	ld	hl, #_cmd + 10
   2A35 36 10              8346 	ld	(hl),#0x10
   2A37 23                 8347 	inc	hl
   2A38 36 00              8348 	ld	(hl),#0x00
                           8349 ;demo.c:1218: cmd.data = 0;
                           8350 ;demo.c:1219: cmd.argument = 0x00;
   2A3A 3E 00              8351 	ld	a,#0x00
   2A3C 32rC0s16           8352 	ld	(#_cmd + 12),a
   2A3F 32rC1s16           8353 	ld	(#_cmd + 13),a
                           8354 ;demo.c:1220: cmd.command = 0xd0; // HMMM
   2A42 3E D0              8355 	ld	a,#0xD0
   2A44 32rC2s16           8356 	ld	(#_cmd + 14),a
                           8357 ;demo.c:1221: vdp_copier(&cmd);
   2A47 21rB4s16           8358 	ld	hl,#_cmd
   2A4A E5                 8359 	push	hl
   2A4B CDr00s00           8360 	call	_vdp_copier
   2A4E F1                 8361 	pop	af
   2A4F DD E1              8362 	pop	ix
   2A51 C9                 8363 	ret
   2A52                    8364 _drawtritile_end::
                           8365 ;demo.c:1228: void drawtilescreen(char* tripic) {
                           8366 ;	---------------------------------
                           8367 ; Function drawtilescreen
                           8368 ; ---------------------------------
   2A52                    8369 _drawtilescreen_start::
   2A52                    8370 _drawtilescreen:
   2A52 DD E5              8371 	push	ix
   2A54 DD 21 00 00        8372 	ld	ix,#0
   2A58 DD 39              8373 	add	ix,sp
   2A5A F5                 8374 	push	af
   2A5B 3B                 8375 	dec	sp
                           8376 ;demo.c:1230: if(tilei >= 192) return;
   2A5C 3Ar9Cs17           8377 	ld	a,(#_tilei+0)
   2A5F D6 C0              8378 	sub	a,#0xC0
   2A61 3Ar9Ds17           8379 	ld	a,(#_tilei+1)
   2A64 DE 00              8380 	sbc	a,#0x00
   2A66 FAr6Cs2A           8381 	jp	M,00102$
   2A69 C3r37s2B           8382 	jp	00112$
   2A6C                    8383 00102$:
                           8384 ;demo.c:1232: tiletick++;
   2A6C FD 21rA2s17        8385 	ld	iy,#_tiletick
   2A70 FD 34 00           8386 	inc	0 (iy)
                           8387 ;demo.c:1233: if (tiletick > 6) { tiletick = 0;}
   2A73 3E 06              8388 	ld	a,#0x06
   2A75 FD 21rA2s17        8389 	ld	iy,#_tiletick
   2A79 FD 96 00           8390 	sub	a,0 (iy)
   2A7C 30 0A              8391 	jr	NC,00104$
   2A7E FD 21rA2s17        8392 	ld	iy,#_tiletick
   2A82 FD 36 00 00        8393 	ld	0 (iy),#0x00
   2A86 18 03              8394 	jr	00118$
   2A88                    8395 00104$:
                           8396 ;demo.c:1234: else return;
   2A88 C3r37s2B           8397 	jp	00112$
                           8398 ;demo.c:1235: for (i=0;i<20;i++) {
   2A8B                    8399 00118$:
   2A8B DD 36 FF 00        8400 	ld	-1 (ix),#0x00
   2A8F                    8401 00108$:
   2A8F DD 7E FF           8402 	ld	a,-1 (ix)
   2A92 D6 14              8403 	sub	a,#0x14
   2A94 D2r37s2B           8404 	jp	NC,00112$
                           8405 ;demo.c:1236: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2A97 3ArA0s17           8406 	ld	a,(#_tiley+0)
   2A9A DD 77 FD           8407 	ld	-3 (ix),a
   2A9D 3Ar9Es17           8408 	ld	a,(#_tilex+0)
   2AA0 DD 77 FE           8409 	ld	-2 (ix),a
   2AA3 21r9Cs17           8410 	ld	hl,#_tilei
   2AA6 DD 7E 04           8411 	ld	a,4 (ix)
   2AA9 86                 8412 	add	a,(hl)
   2AAA 57                 8413 	ld	d,a
   2AAB DD 7E 05           8414 	ld	a,5 (ix)
   2AAE 23                 8415 	inc	hl
   2AAF 8E                 8416 	adc	a,(hl)
   2AB0 6A                 8417 	ld	l,d
   2AB1 67                 8418 	ld	h,a
   2AB2 56                 8419 	ld	d,(hl)
   2AB3 7A                 8420 	ld	a,d
   2AB4 87                 8421 	add	a,a
   2AB5 C6r88              8422 	add	a,#<_tri_lookup_y
   2AB7 6F                 8423 	ld	l,a
   2AB8 3Es01              8424 	ld	a,#>_tri_lookup_y
   2ABA CE 00              8425 	adc	a,#0x00
   2ABC 67                 8426 	ld	h,a
   2ABD 4E                 8427 	ld	c,(hl)
   2ABE 23                 8428 	inc	hl
   2ABF 5E                 8429 	ld	e,(hl)
   2AC0 3Er00              8430 	ld	a,#<_tri_lookup_x
   2AC2 82                 8431 	add	a,d
   2AC3 6F                 8432 	ld	l,a
   2AC4 3Es01              8433 	ld	a,#>_tri_lookup_x
   2AC6 CE 00              8434 	adc	a,#0x00
   2AC8 67                 8435 	ld	h,a
   2AC9 56                 8436 	ld	d,(hl)
   2ACA DD 66 FD           8437 	ld	h,-3 (ix)
   2ACD DD 6E FE           8438 	ld	l,-2 (ix)
   2AD0 E5                 8439 	push	hl
   2AD1 69                 8440 	ld	l,c
   2AD2 63                 8441 	ld	h,e
   2AD3 E5                 8442 	push	hl
   2AD4 D5                 8443 	push	de
   2AD5 33                 8444 	inc	sp
   2AD6 CDrEEs29           8445 	call	_drawtritile
   2AD9 F1                 8446 	pop	af
   2ADA F1                 8447 	pop	af
   2ADB 33                 8448 	inc	sp
                           8449 ;demo.c:1237: tilex+=16;
   2ADC 21r9Es17           8450 	ld	hl,#_tilex
   2ADF 7E                 8451 	ld	a,(hl)
   2AE0 C6 10              8452 	add	a,#0x10
   2AE2 23                 8453 	inc	hl
   2AE3 2B                 8454 	dec	hl
   2AE4 C5                 8455 	push	bc
   2AE5 4F                 8456 	ld	c, a
   2AE6 23                 8457 	inc	hl
   2AE7 7E                 8458 	ld	a, (hl)
   2AE8 47                 8459 	ld	b, a
   2AE9 79                 8460 	ld	a, c
   2AEA 2B                 8461 	dec	hl
   2AEB 77                 8462 	ld	(hl), a
   2AEC 78                 8463 	ld	a, b
   2AED C1                 8464 	pop	bc
   2AEE CE 00              8465 	adc	a,#0x00
   2AF0 23                 8466 	inc	hl
   2AF1 77                 8467 	ld	(hl),a
                           8468 ;demo.c:1238: tilei++;
   2AF2 FD 21r9Cs17        8469 	ld	iy,#_tilei
   2AF6 FD 34 00           8470 	inc	0 (iy)
   2AF9 20 07              8471 	jr	NZ,00119$
   2AFB FD 21r9Cs17        8472 	ld	iy,#_tilei
   2AFF FD 34 01           8473 	inc	1 (iy)
   2B02                    8474 00119$:
                           8475 ;demo.c:1239: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   2B02 3Ar9Es17           8476 	ld	a,(#_tilex+0)
   2B05 D6 00              8477 	sub	a,#0x00
   2B07 3Ar9Fs17           8478 	ld	a,(#_tilex+1)
   2B0A DE 01              8479 	sbc	a,#0x01
   2B0C FAr31s2B           8480 	jp	M,00110$
   2B0F 21r9Es17           8481 	ld	hl,#_tilex + 0
   2B12 36 00              8482 	ld	(hl), #0x00
   2B14 21r9Fs17           8483 	ld	hl,#_tilex + 1
   2B17 36 00              8484 	ld	(hl), #0x00
   2B19 21rA0s17           8485 	ld	hl,#_tiley
   2B1C 7E                 8486 	ld	a,(hl)
   2B1D C6 10              8487 	add	a,#0x10
   2B1F 23                 8488 	inc	hl
   2B20 2B                 8489 	dec	hl
   2B21 C5                 8490 	push	bc
   2B22 4F                 8491 	ld	c, a
   2B23 23                 8492 	inc	hl
   2B24 7E                 8493 	ld	a, (hl)
   2B25 47                 8494 	ld	b, a
   2B26 79                 8495 	ld	a, c
   2B27 2B                 8496 	dec	hl
   2B28 77                 8497 	ld	(hl), a
   2B29 78                 8498 	ld	a, b
   2B2A C1                 8499 	pop	bc
   2B2B CE 00              8500 	adc	a,#0x00
   2B2D 23                 8501 	inc	hl
   2B2E 77                 8502 	ld	(hl),a
   2B2F 18 06              8503 	jr	00112$
   2B31                    8504 00110$:
                           8505 ;demo.c:1235: for (i=0;i<20;i++) {
   2B31 DD 34 FF           8506 	inc	-1 (ix)
   2B34 C3r8Fs2A           8507 	jp	00108$
   2B37                    8508 00112$:
   2B37 DD F9              8509 	ld	sp,ix
   2B39 DD E1              8510 	pop	ix
   2B3B C9                 8511 	ret
   2B3C                    8512 _drawtilescreen_end::
                           8513 ;demo.c:1244: void drawtilescreen_full(char* tripic) {
                           8514 ;	---------------------------------
                           8515 ; Function drawtilescreen_full
                           8516 ; ---------------------------------
   2B3C                    8517 _drawtilescreen_full_start::
   2B3C                    8518 _drawtilescreen_full:
   2B3C DD E5              8519 	push	ix
   2B3E DD 21 00 00        8520 	ld	ix,#0
   2B42 DD 39              8521 	add	ix,sp
   2B44 21 F8 FF           8522 	ld	hl,#-8
   2B47 39                 8523 	add	hl,sp
   2B48 F9                 8524 	ld	sp,hl
                           8525 ;demo.c:1245: int x = 0;
   2B49 DD 36 FE 00        8526 	ld	-2 (ix),#0x00
   2B4D DD 36 FF 00        8527 	ld	-1 (ix),#0x00
                           8528 ;demo.c:1248: while(i < 192) {
   2B51 DD 36 FC 00        8529 	ld	-4 (ix),#0x00
   2B55 DD 36 FD 00        8530 	ld	-3 (ix),#0x00
   2B59 DD 36 FA 00        8531 	ld	-6 (ix),#0x00
   2B5D DD 36 FB 00        8532 	ld	-5 (ix),#0x00
   2B61                    8533 00103$:
   2B61 DD 7E FA           8534 	ld	a,-6 (ix)
   2B64 D6 C0              8535 	sub	a,#0xC0
   2B66 DD 7E FB           8536 	ld	a,-5 (ix)
   2B69 DE 00              8537 	sbc	a,#0x00
   2B6B F2rF2s2B           8538 	jp	P,00106$
                           8539 ;demo.c:1249: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   2B6E DD 7E FC           8540 	ld	a,-4 (ix)
   2B71 DD 77 F8           8541 	ld	-8 (ix),a
   2B74 DD 7E FE           8542 	ld	a,-2 (ix)
   2B77 DD 77 F9           8543 	ld	-7 (ix),a
   2B7A DD 7E 04           8544 	ld	a,4 (ix)
   2B7D DD 86 FA           8545 	add	a,-6 (ix)
   2B80 4F                 8546 	ld	c,a
   2B81 DD 7E 05           8547 	ld	a,5 (ix)
   2B84 DD 8E FB           8548 	adc	a,-5 (ix)
   2B87 47                 8549 	ld	b,a
   2B88 0A                 8550 	ld	a,(bc)
   2B89 4F                 8551 	ld	c,a
   2B8A 87                 8552 	add	a,a
   2B8B C6r88              8553 	add	a,#<_tri_lookup_y
   2B8D 6F                 8554 	ld	l,a
   2B8E 3Es01              8555 	ld	a,#>_tri_lookup_y
   2B90 CE 00              8556 	adc	a,#0x00
   2B92 67                 8557 	ld	h,a
   2B93 46                 8558 	ld	b,(hl)
   2B94 23                 8559 	inc	hl
   2B95 56                 8560 	ld	d,(hl)
   2B96 3Er00              8561 	ld	a,#<_tri_lookup_x
   2B98 81                 8562 	add	a,c
   2B99 6F                 8563 	ld	l,a
   2B9A 3Es01              8564 	ld	a,#>_tri_lookup_x
   2B9C CE 00              8565 	adc	a,#0x00
   2B9E 67                 8566 	ld	h,a
   2B9F 4E                 8567 	ld	c,(hl)
   2BA0 DD 66 F8           8568 	ld	h,-8 (ix)
   2BA3 DD 6E F9           8569 	ld	l,-7 (ix)
   2BA6 E5                 8570 	push	hl
   2BA7 58                 8571 	ld	e,b
   2BA8 D5                 8572 	push	de
   2BA9 79                 8573 	ld	a,c
   2BAA F5                 8574 	push	af
   2BAB 33                 8575 	inc	sp
   2BAC CDrEEs29           8576 	call	_drawtritile
   2BAF F1                 8577 	pop	af
   2BB0 F1                 8578 	pop	af
   2BB1 33                 8579 	inc	sp
                           8580 ;demo.c:1250: x+=16;
   2BB2 DD 7E FE           8581 	ld	a,-2 (ix)
   2BB5 C6 10              8582 	add	a,#0x10
   2BB7 DD 77 FE           8583 	ld	-2 (ix),a
   2BBA DD 7E FF           8584 	ld	a,-1 (ix)
   2BBD CE 00              8585 	adc	a,#0x00
   2BBF DD 77 FF           8586 	ld	-1 (ix),a
                           8587 ;demo.c:1251: if (x >= 256) {x = 0; y+=16;}
   2BC2 DD 7E FE           8588 	ld	a,-2 (ix)
   2BC5 D6 00              8589 	sub	a,#0x00
   2BC7 DD 7E FF           8590 	ld	a,-1 (ix)
   2BCA DE 01              8591 	sbc	a,#0x01
   2BCC FArE7s2B           8592 	jp	M,00102$
   2BCF DD 36 FE 00        8593 	ld	-2 (ix),#0x00
   2BD3 DD 36 FF 00        8594 	ld	-1 (ix),#0x00
   2BD7 DD 7E FC           8595 	ld	a,-4 (ix)
   2BDA C6 10              8596 	add	a,#0x10
   2BDC DD 77 FC           8597 	ld	-4 (ix),a
   2BDF DD 7E FD           8598 	ld	a,-3 (ix)
   2BE2 CE 00              8599 	adc	a,#0x00
   2BE4 DD 77 FD           8600 	ld	-3 (ix),a
   2BE7                    8601 00102$:
                           8602 ;demo.c:1252: i++;
   2BE7 DD 34 FA           8603 	inc	-6 (ix)
   2BEA 20 03              8604 	jr	NZ,00112$
   2BEC DD 34 FB           8605 	inc	-5 (ix)
   2BEF                    8606 00112$:
   2BEF C3r61s2B           8607 	jp	00103$
   2BF2                    8608 00106$:
   2BF2 DD F9              8609 	ld	sp,ix
   2BF4 DD E1              8610 	pop	ix
   2BF6 C9                 8611 	ret
   2BF7                    8612 _drawtilescreen_full_end::
                           8613 ;demo.c:1268: void tritiles() {
                           8614 ;	---------------------------------
                           8615 ; Function tritiles
                           8616 ; ---------------------------------
   2BF7                    8617 _tritiles_start::
   2BF7                    8618 _tritiles:
   2BF7 DD E5              8619 	push	ix
   2BF9 DD 21 00 00        8620 	ld	ix,#0
   2BFD DD 39              8621 	add	ix,sp
   2BFF 21 FB FF           8622 	ld	hl,#-5
   2C02 39                 8623 	add	hl,sp
   2C03 F9                 8624 	ld	sp,hl
                           8625 ;demo.c:1275: if (tri_inited == 0 || tri_inited == 2) {
   2C04 AF                 8626 	xor	a,a
   2C05 FD 21r9Bs17        8627 	ld	iy,#_tri_inited
   2C09 FD B6 00           8628 	or	a,0 (iy)
   2C0C 28 0C              8629 	jr	Z,00109$
   2C0E FD 21r9Bs17        8630 	ld	iy,#_tri_inited
   2C12 FD 7E 00           8631 	ld	a,0 (iy)
   2C15 D6 02              8632 	sub	a,#0x02
   2C17 C2r23s2D           8633 	jp	NZ,00110$
   2C1A                    8634 00109$:
                           8635 ;demo.c:1277: cmd.size_x = 2;
   2C1A 21rBCs16           8636 	ld	hl, #_cmd + 8
   2C1D 36 02              8637 	ld	(hl),#0x02
   2C1F 23                 8638 	inc	hl
   2C20 36 00              8639 	ld	(hl),#0x00
                           8640 ;demo.c:1278: cmd.size_y = 212;
   2C22 21rBEs16           8641 	ld	hl, #_cmd + 10
   2C25 36 D4              8642 	ld	(hl),#0xD4
   2C27 23                 8643 	inc	hl
   2C28 36 00              8644 	ld	(hl),#0x00
                           8645 ;demo.c:1279: cmd.data = 0;
                           8646 ;demo.c:1280: cmd.argument = 0x00; // from 70xY to left
   2C2A 3E 00              8647 	ld	a,#0x00
   2C2C 32rC0s16           8648 	ld	(#_cmd + 12),a
   2C2F 32rC1s16           8649 	ld	(#_cmd + 13),a
                           8650 ;demo.c:1281: cmd.command = 0xd0; // vram to vram, y only
   2C32 01rC2s16           8651 	ld	bc,#_cmd + 14
   2C35 3E D0              8652 	ld	a,#0xD0
   2C37 02                 8653 	ld	(bc),a
                           8654 ;demo.c:1282: cmd.source_x = 255;
   2C38 21rB4s16           8655 	ld	hl,#_cmd
   2C3B 36 FF              8656 	ld	(hl),#0xFF
   2C3D 23                 8657 	inc	hl
   2C3E 36 00              8658 	ld	(hl),#0x00
                           8659 ;demo.c:1283: cmd.source_y = 0;
   2C40 21rB6s16           8660 	ld	hl, #_cmd + 2
   2C43 36 00              8661 	ld	(hl),#0x00
   2C45 23                 8662 	inc	hl
   2C46 36 00              8663 	ld	(hl),#0x00
                           8664 ;demo.c:1285: for (x = 0; x < 256; x+=2) {
   2C48 01 00 00           8665 	ld	bc,#0x0000
   2C4B                    8666 00170$:
   2C4B 79                 8667 	ld	a,c
   2C4C D6 00              8668 	sub	a,#0x00
   2C4E 78                 8669 	ld	a,b
   2C4F DE 01              8670 	sbc	a,#0x01
   2C51 F2r86s2C           8671 	jp	P,00173$
                           8672 ;demo.c:1286: waitVB();
   2C54 76                 8673 		halt 
                           8674 ;demo.c:1287: cmd.dest_y = 256;
   2C55 11rBAs16           8675 	ld	de,#_cmd + 6
   2C58 EB                 8676 	ex	de,hl
   2C59 36 00              8677 	ld	(hl),#0x00
   2C5B 23                 8678 	inc	hl
   2C5C 36 01              8679 	ld	(hl),#0x01
                           8680 ;demo.c:1288: cmd.dest_x = x;
   2C5E 11rB8s16           8681 	ld	de,#_cmd + 4
   2C61 EB                 8682 	ex	de,hl
   2C62 71                 8683 	ld	(hl),c
   2C63 23                 8684 	inc	hl
   2C64 70                 8685 	ld	(hl),b
                           8686 ;demo.c:1289: vdp_copier(&cmd);
   2C65 C5                 8687 	push	bc
   2C66 21rB4s16           8688 	ld	hl,#_cmd
   2C69 E5                 8689 	push	hl
   2C6A CDr00s00           8690 	call	_vdp_copier
   2C6D F1                 8691 	pop	af
   2C6E C1                 8692 	pop	bc
                           8693 ;demo.c:1290: cmd.dest_y = 0;
   2C6F 11rBAs16           8694 	ld	de,#_cmd + 6
   2C72 EB                 8695 	ex	de,hl
   2C73 36 00              8696 	ld	(hl),#0x00
   2C75 23                 8697 	inc	hl
   2C76 36 00              8698 	ld	(hl),#0x00
                           8699 ;demo.c:1291: vdp_copier(&cmd);
   2C78 C5                 8700 	push	bc
   2C79 21rB4s16           8701 	ld	hl,#_cmd
   2C7C E5                 8702 	push	hl
   2C7D CDr00s00           8703 	call	_vdp_copier
   2C80 F1                 8704 	pop	af
   2C81 C1                 8705 	pop	bc
                           8706 ;demo.c:1285: for (x = 0; x < 256; x+=2) {
   2C82 03                 8707 	inc	bc
   2C83 03                 8708 	inc	bc
   2C84 18 C5              8709 	jr	00170$
   2C86                    8710 00173$:
                           8711 ;demo.c:1294: if (tri_inited == 0) vdp_load_palette(boxes_palette);
   2C86 AF                 8712 	xor	a,a
   2C87 21r9Bs17           8713 	ld	hl,#_tri_inited + 0
   2C8A B6                 8714 	or	a,(hl)
   2C8B 20 0A              8715 	jr	NZ,00104$
   2C8D 21r70s16           8716 	ld	hl,#_boxes_palette
   2C90 E5                 8717 	push	hl
   2C91 CDr00s00           8718 	call	_vdp_load_palette
   2C94 F1                 8719 	pop	af
   2C95 18 46              8720 	jr	00105$
   2C97                    8721 00104$:
                           8722 ;demo.c:1295: else if (tri_inited == 2) { 
   2C97 3Ar9Bs17           8723 	ld	a,(#_tri_inited+0)
   2C9A D6 02              8724 	sub	a,#0x02
   2C9C 20 3F              8725 	jr	NZ,00105$
                           8726 ;demo.c:1296: vdp_load_palette(boxes_palette); 
   2C9E 21r70s16           8727 	ld	hl,#_boxes_palette
   2CA1 E5                 8728 	push	hl
   2CA2 CDr00s00           8729 	call	_vdp_load_palette
   2CA5 F1                 8730 	pop	af
                           8731 ;demo.c:1297: triframes = 0; 
   2CA6 21rAEs17           8732 	ld	hl,#_triframes + 0
   2CA9 36 00              8733 	ld	(hl), #0x00
   2CAB 21rAFs17           8734 	ld	hl,#_triframes + 1
   2CAE 36 00              8735 	ld	(hl), #0x00
                           8736 ;demo.c:1299: tripal[0] = 4;
   2CB0 21rA3s17           8737 	ld	hl,#_tripal
   2CB3 36 04              8738 	ld	(hl),#0x04
                           8739 ;demo.c:1300: tripal[1] = 4;
   2CB5 3E 04              8740 	ld	a,#0x04
   2CB7 32rA4s17           8741 	ld	(#_tripal + 1),a
                           8742 ;demo.c:1301: tripal[2] = 3;
   2CBA 3E 03              8743 	ld	a,#0x03
   2CBC 32rA5s17           8744 	ld	(#_tripal + 2),a
                           8745 ;demo.c:1303: tripal[3] = 2;
   2CBF 3E 02              8746 	ld	a,#0x02
   2CC1 32rA6s17           8747 	ld	(#_tripal + 3),a
                           8748 ;demo.c:1304: tripal[4] = 3;
   2CC4 3E 03              8749 	ld	a,#0x03
   2CC6 32rA7s17           8750 	ld	(#_tripal + 4),a
                           8751 ;demo.c:1305: tripal[5] = 4;
   2CC9 3E 04              8752 	ld	a,#0x04
   2CCB 32rA8s17           8753 	ld	(#_tripal + 5),a
                           8754 ;demo.c:1307: tripal[6] = 1;
   2CCE 3E 01              8755 	ld	a,#0x01
   2CD0 32rA9s17           8756 	ld	(#_tripal + 6),a
                           8757 ;demo.c:1308: tripal[7] = 3;
   2CD3 3E 03              8758 	ld	a,#0x03
   2CD5 32rAAs17           8759 	ld	(#_tripal + 7),a
                           8760 ;demo.c:1309: tripal[8] = 1;
   2CD8 3E 01              8761 	ld	a,#0x01
   2CDA 32rABs17           8762 	ld	(#_tripal + 8),a
   2CDD                    8763 00105$:
                           8764 ;demo.c:1311: tri_inited++;
   2CDD FD 21r9Bs17        8765 	ld	iy,#_tri_inited
   2CE1 FD 34 00           8766 	inc	0 (iy)
                           8767 ;demo.c:1312: vdp_register(9,2); // 50hz,192
   2CE4 21 09 02           8768 	ld	hl,#0x0209
   2CE7 E5                 8769 	push	hl
   2CE8 CDr00s00           8770 	call	_vdp_register
   2CEB F1                 8771 	pop	af
                           8772 ;demo.c:1314: msx2_palette(15,0,0,0);
   2CEC 21 00 00           8773 	ld	hl,#0x0000
   2CEF E5                 8774 	push	hl
   2CF0 2E 0F              8775 	ld	l, #0x0F
   2CF2 E5                 8776 	push	hl
   2CF3 CDr00s00           8777 	call	_msx2_palette
   2CF6 F1                 8778 	pop	af
   2CF7 F1                 8779 	pop	af
                           8780 ;demo.c:1316: if (tri_inited == 1) drawtilescreen_full(tri_center);
   2CF8 3Ar9Bs17           8781 	ld	a,(#_tri_inited+0)
   2CFB D6 01              8782 	sub	a,#0x01
   2CFD 20 0A              8783 	jr	NZ,00107$
   2CFF 21r2Cs01           8784 	ld	hl,#_tri_center
   2D02 E5                 8785 	push	hl
   2D03 CDr3Cs2B           8786 	call	_drawtilescreen_full
   2D06 F1                 8787 	pop	af
   2D07 18 08              8788 	jr	00108$
   2D09                    8789 00107$:
                           8790 ;demo.c:1317: else drawtilescreen_full(tri_inva2);
   2D09 21rACs05           8791 	ld	hl,#_tri_inva2
   2D0C E5                 8792 	push	hl
   2D0D CDr3Cs2B           8793 	call	_drawtilescreen_full
   2D10 F1                 8794 	pop	af
   2D11                    8795 00108$:
                           8796 ;demo.c:1318: vdp_register(2, 0x1f);
   2D11 21 02 1F           8797 	ld	hl,#0x1F02
   2D14 E5                 8798 	push	hl
   2D15 CDr00s00           8799 	call	_vdp_register
   2D18 F1                 8800 	pop	af
                           8801 ;demo.c:1319: tick = 0;
   2D19 21rB2s16           8802 	ld	hl,#_tick + 0
   2D1C 36 00              8803 	ld	(hl), #0x00
   2D1E 21rB3s16           8804 	ld	hl,#_tick + 1
   2D21 36 00              8805 	ld	(hl), #0x00
   2D23                    8806 00110$:
                           8807 ;demo.c:1323: if (tri_inited == 1) triframes++;
   2D23 3Ar9Bs17           8808 	ld	a,(#_tri_inited+0)
   2D26 D6 01              8809 	sub	a,#0x01
   2D28 20 10              8810 	jr	NZ,00113$
   2D2A FD 21rAEs17        8811 	ld	iy,#_triframes
   2D2E FD 34 00           8812 	inc	0 (iy)
   2D31 20 07              8813 	jr	NZ,00231$
   2D33 FD 21rAEs17        8814 	ld	iy,#_triframes
   2D37 FD 34 01           8815 	inc	1 (iy)
   2D3A                    8816 00231$:
   2D3A                    8817 00113$:
                           8818 ;demo.c:1325: if (triframes == 150) { tilei = 0; tilex = 0; tiley = 0; }
   2D3A 3ArAEs17           8819 	ld	a,(#_triframes+0)
   2D3D D6 96              8820 	sub	a,#0x96
   2D3F 20 06              8821 	jr	NZ,00232$
   2D41 3ArAFs17           8822 	ld	a,(#_triframes+1)
   2D44 B7                 8823 	or	a,a
   2D45 28 02              8824 	jr	Z,00233$
   2D47                    8825 00232$:
   2D47 18 1E              8826 	jr	00115$
   2D49                    8827 00233$:
   2D49 21r9Cs17           8828 	ld	hl,#_tilei + 0
   2D4C 36 00              8829 	ld	(hl), #0x00
   2D4E 21r9Ds17           8830 	ld	hl,#_tilei + 1
   2D51 36 00              8831 	ld	(hl), #0x00
   2D53 21r9Es17           8832 	ld	hl,#_tilex + 0
   2D56 36 00              8833 	ld	(hl), #0x00
   2D58 21r9Fs17           8834 	ld	hl,#_tilex + 1
   2D5B 36 00              8835 	ld	(hl), #0x00
   2D5D 21rA0s17           8836 	ld	hl,#_tiley + 0
   2D60 36 00              8837 	ld	(hl), #0x00
   2D62 21rA1s17           8838 	ld	hl,#_tiley + 1
   2D65 36 00              8839 	ld	(hl), #0x00
   2D67                    8840 00115$:
                           8841 ;demo.c:1326: if (triframes >= 150 && triframes < 300) {
   2D67 3ArAEs17           8842 	ld	a,(#_triframes+0)
   2D6A D6 96              8843 	sub	a,#0x96
   2D6C 3ArAFs17           8844 	ld	a,(#_triframes+1)
   2D6F DE 00              8845 	sbc	a,#0x00
   2D71 FAr89s2D           8846 	jp	M,00117$
   2D74 3ArAEs17           8847 	ld	a,(#_triframes+0)
   2D77 D6 2C              8848 	sub	a,#0x2C
   2D79 3ArAFs17           8849 	ld	a,(#_triframes+1)
   2D7C DE 01              8850 	sbc	a,#0x01
   2D7E F2r89s2D           8851 	jp	P,00117$
                           8852 ;demo.c:1327: drawtilescreen(tri_up);
   2D81 21rECs01           8853 	ld	hl,#_tri_up
   2D84 E5                 8854 	push	hl
   2D85 CDr52s2A           8855 	call	_drawtilescreen
   2D88 F1                 8856 	pop	af
   2D89                    8857 00117$:
                           8858 ;demo.c:1330: if (triframes == 300) { tilei = 0; tilex = 0; tiley = 0; }
   2D89 3ArAEs17           8859 	ld	a,(#_triframes+0)
   2D8C D6 2C              8860 	sub	a,#0x2C
   2D8E 20 07              8861 	jr	NZ,00234$
   2D90 3ArAFs17           8862 	ld	a,(#_triframes+1)
   2D93 D6 01              8863 	sub	a,#0x01
   2D95 28 02              8864 	jr	Z,00235$
   2D97                    8865 00234$:
   2D97 18 1E              8866 	jr	00120$
   2D99                    8867 00235$:
   2D99 21r9Cs17           8868 	ld	hl,#_tilei + 0
   2D9C 36 00              8869 	ld	(hl), #0x00
   2D9E 21r9Ds17           8870 	ld	hl,#_tilei + 1
   2DA1 36 00              8871 	ld	(hl), #0x00
   2DA3 21r9Es17           8872 	ld	hl,#_tilex + 0
   2DA6 36 00              8873 	ld	(hl), #0x00
   2DA8 21r9Fs17           8874 	ld	hl,#_tilex + 1
   2DAB 36 00              8875 	ld	(hl), #0x00
   2DAD 21rA0s17           8876 	ld	hl,#_tiley + 0
   2DB0 36 00              8877 	ld	(hl), #0x00
   2DB2 21rA1s17           8878 	ld	hl,#_tiley + 1
   2DB5 36 00              8879 	ld	(hl), #0x00
   2DB7                    8880 00120$:
                           8881 ;demo.c:1331: if (triframes >= 300 && triframes < 450) {
   2DB7 3ArAEs17           8882 	ld	a,(#_triframes+0)
   2DBA D6 2C              8883 	sub	a,#0x2C
   2DBC 3ArAFs17           8884 	ld	a,(#_triframes+1)
   2DBF DE 01              8885 	sbc	a,#0x01
   2DC1 FArD9s2D           8886 	jp	M,00122$
   2DC4 3ArAEs17           8887 	ld	a,(#_triframes+0)
   2DC7 D6 C2              8888 	sub	a,#0xC2
   2DC9 3ArAFs17           8889 	ld	a,(#_triframes+1)
   2DCC DE 01              8890 	sbc	a,#0x01
   2DCE F2rD9s2D           8891 	jp	P,00122$
                           8892 ;demo.c:1332: drawtilescreen(tri_dia);
   2DD1 21rACs02           8893 	ld	hl,#_tri_dia
   2DD4 E5                 8894 	push	hl
   2DD5 CDr52s2A           8895 	call	_drawtilescreen
   2DD8 F1                 8896 	pop	af
   2DD9                    8897 00122$:
                           8898 ;demo.c:1335: if (triframes == 450) { tilei = 0; tilex = 0; tiley = 0; }
   2DD9 3ArAEs17           8899 	ld	a,(#_triframes+0)
   2DDC D6 C2              8900 	sub	a,#0xC2
   2DDE 20 07              8901 	jr	NZ,00236$
   2DE0 3ArAFs17           8902 	ld	a,(#_triframes+1)
   2DE3 D6 01              8903 	sub	a,#0x01
   2DE5 28 02              8904 	jr	Z,00237$
   2DE7                    8905 00236$:
   2DE7 18 1E              8906 	jr	00125$
   2DE9                    8907 00237$:
   2DE9 21r9Cs17           8908 	ld	hl,#_tilei + 0
   2DEC 36 00              8909 	ld	(hl), #0x00
   2DEE 21r9Ds17           8910 	ld	hl,#_tilei + 1
   2DF1 36 00              8911 	ld	(hl), #0x00
   2DF3 21r9Es17           8912 	ld	hl,#_tilex + 0
   2DF6 36 00              8913 	ld	(hl), #0x00
   2DF8 21r9Fs17           8914 	ld	hl,#_tilex + 1
   2DFB 36 00              8915 	ld	(hl), #0x00
   2DFD 21rA0s17           8916 	ld	hl,#_tiley + 0
   2E00 36 00              8917 	ld	(hl), #0x00
   2E02 21rA1s17           8918 	ld	hl,#_tiley + 1
   2E05 36 00              8919 	ld	(hl), #0x00
   2E07                    8920 00125$:
                           8921 ;demo.c:1336: if (triframes >= 450 && triframes < 600) {
   2E07 3ArAEs17           8922 	ld	a,(#_triframes+0)
   2E0A D6 C2              8923 	sub	a,#0xC2
   2E0C 3ArAFs17           8924 	ld	a,(#_triframes+1)
   2E0F DE 01              8925 	sbc	a,#0x01
   2E11 FAr29s2E           8926 	jp	M,00127$
   2E14 3ArAEs17           8927 	ld	a,(#_triframes+0)
   2E17 D6 58              8928 	sub	a,#0x58
   2E19 3ArAFs17           8929 	ld	a,(#_triframes+1)
   2E1C DE 02              8930 	sbc	a,#0x02
   2E1E F2r29s2E           8931 	jp	P,00127$
                           8932 ;demo.c:1337: drawtilescreen(tri_side1);
   2E21 21r6Cs03           8933 	ld	hl,#_tri_side1
   2E24 E5                 8934 	push	hl
   2E25 CDr52s2A           8935 	call	_drawtilescreen
   2E28 F1                 8936 	pop	af
   2E29                    8937 00127$:
                           8938 ;demo.c:1340: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2E29 3ArAEs17           8939 	ld	a,(#_triframes+0)
   2E2C D6 58              8940 	sub	a,#0x58
   2E2E 20 07              8941 	jr	NZ,00238$
   2E30 3ArAFs17           8942 	ld	a,(#_triframes+1)
   2E33 D6 02              8943 	sub	a,#0x02
   2E35 28 02              8944 	jr	Z,00239$
   2E37                    8945 00238$:
   2E37 18 1E              8946 	jr	00130$
   2E39                    8947 00239$:
   2E39 21r9Cs17           8948 	ld	hl,#_tilei + 0
   2E3C 36 00              8949 	ld	(hl), #0x00
   2E3E 21r9Ds17           8950 	ld	hl,#_tilei + 1
   2E41 36 00              8951 	ld	(hl), #0x00
   2E43 21r9Es17           8952 	ld	hl,#_tilex + 0
   2E46 36 00              8953 	ld	(hl), #0x00
   2E48 21r9Fs17           8954 	ld	hl,#_tilex + 1
   2E4B 36 00              8955 	ld	(hl), #0x00
   2E4D 21rA0s17           8956 	ld	hl,#_tiley + 0
   2E50 36 00              8957 	ld	(hl), #0x00
   2E52 21rA1s17           8958 	ld	hl,#_tiley + 1
   2E55 36 00              8959 	ld	(hl), #0x00
   2E57                    8960 00130$:
                           8961 ;demo.c:1341: if (triframes >= 600 && triframes < 750) {
   2E57 3ArAEs17           8962 	ld	a,(#_triframes+0)
   2E5A D6 58              8963 	sub	a,#0x58
   2E5C 3ArAFs17           8964 	ld	a,(#_triframes+1)
   2E5F DE 02              8965 	sbc	a,#0x02
   2E61 FAr79s2E           8966 	jp	M,00132$
   2E64 3ArAEs17           8967 	ld	a,(#_triframes+0)
   2E67 D6 EE              8968 	sub	a,#0xEE
   2E69 3ArAFs17           8969 	ld	a,(#_triframes+1)
   2E6C DE 02              8970 	sbc	a,#0x02
   2E6E F2r79s2E           8971 	jp	P,00132$
                           8972 ;demo.c:1342: drawtilescreen(tri_side2);
   2E71 21r2Cs04           8973 	ld	hl,#_tri_side2
   2E74 E5                 8974 	push	hl
   2E75 CDr52s2A           8975 	call	_drawtilescreen
   2E78 F1                 8976 	pop	af
   2E79                    8977 00132$:
                           8978 ;demo.c:1345: if (triframes == 750) { tilei = 0; tilex = 0; tiley = 0; }
   2E79 3ArAEs17           8979 	ld	a,(#_triframes+0)
   2E7C D6 EE              8980 	sub	a,#0xEE
   2E7E 20 07              8981 	jr	NZ,00240$
   2E80 3ArAFs17           8982 	ld	a,(#_triframes+1)
   2E83 D6 02              8983 	sub	a,#0x02
   2E85 28 02              8984 	jr	Z,00241$
   2E87                    8985 00240$:
   2E87 18 1E              8986 	jr	00135$
   2E89                    8987 00241$:
   2E89 21r9Cs17           8988 	ld	hl,#_tilei + 0
   2E8C 36 00              8989 	ld	(hl), #0x00
   2E8E 21r9Ds17           8990 	ld	hl,#_tilei + 1
   2E91 36 00              8991 	ld	(hl), #0x00
   2E93 21r9Es17           8992 	ld	hl,#_tilex + 0
   2E96 36 00              8993 	ld	(hl), #0x00
   2E98 21r9Fs17           8994 	ld	hl,#_tilex + 1
   2E9B 36 00              8995 	ld	(hl), #0x00
   2E9D 21rA0s17           8996 	ld	hl,#_tiley + 0
   2EA0 36 00              8997 	ld	(hl), #0x00
   2EA2 21rA1s17           8998 	ld	hl,#_tiley + 1
   2EA5 36 00              8999 	ld	(hl), #0x00
   2EA7                    9000 00135$:
                           9001 ;demo.c:1346: if (triframes >= 750 && triframes < 900) {
   2EA7 3ArAEs17           9002 	ld	a,(#_triframes+0)
   2EAA D6 EE              9003 	sub	a,#0xEE
   2EAC 3ArAFs17           9004 	ld	a,(#_triframes+1)
   2EAF DE 02              9005 	sbc	a,#0x02
   2EB1 FArC9s2E           9006 	jp	M,00137$
   2EB4 3ArAEs17           9007 	ld	a,(#_triframes+0)
   2EB7 D6 84              9008 	sub	a,#0x84
   2EB9 3ArAFs17           9009 	ld	a,(#_triframes+1)
   2EBC DE 03              9010 	sbc	a,#0x03
   2EBE F2rC9s2E           9011 	jp	P,00137$
                           9012 ;demo.c:1347: drawtilescreen(tri_inva1);
   2EC1 21rECs04           9013 	ld	hl,#_tri_inva1
   2EC4 E5                 9014 	push	hl
   2EC5 CDr52s2A           9015 	call	_drawtilescreen
   2EC8 F1                 9016 	pop	af
   2EC9                    9017 00137$:
                           9018 ;demo.c:1350: if (triframes == 900) { tilei = 0; tilex = 0; tiley = 0; }
   2EC9 3ArAEs17           9019 	ld	a,(#_triframes+0)
   2ECC D6 84              9020 	sub	a,#0x84
   2ECE 20 07              9021 	jr	NZ,00242$
   2ED0 3ArAFs17           9022 	ld	a,(#_triframes+1)
   2ED3 D6 03              9023 	sub	a,#0x03
   2ED5 28 02              9024 	jr	Z,00243$
   2ED7                    9025 00242$:
   2ED7 18 1E              9026 	jr	00140$
   2ED9                    9027 00243$:
   2ED9 21r9Cs17           9028 	ld	hl,#_tilei + 0
   2EDC 36 00              9029 	ld	(hl), #0x00
   2EDE 21r9Ds17           9030 	ld	hl,#_tilei + 1
   2EE1 36 00              9031 	ld	(hl), #0x00
   2EE3 21r9Es17           9032 	ld	hl,#_tilex + 0
   2EE6 36 00              9033 	ld	(hl), #0x00
   2EE8 21r9Fs17           9034 	ld	hl,#_tilex + 1
   2EEB 36 00              9035 	ld	(hl), #0x00
   2EED 21rA0s17           9036 	ld	hl,#_tiley + 0
   2EF0 36 00              9037 	ld	(hl), #0x00
   2EF2 21rA1s17           9038 	ld	hl,#_tiley + 1
   2EF5 36 00              9039 	ld	(hl), #0x00
   2EF7                    9040 00140$:
                           9041 ;demo.c:1351: if (triframes >= 900 && triframes < 1050) {
   2EF7 3ArAEs17           9042 	ld	a,(#_triframes+0)
   2EFA D6 84              9043 	sub	a,#0x84
   2EFC 3ArAFs17           9044 	ld	a,(#_triframes+1)
   2EFF DE 03              9045 	sbc	a,#0x03
   2F01 FAr19s2F           9046 	jp	M,00142$
   2F04 3ArAEs17           9047 	ld	a,(#_triframes+0)
   2F07 D6 1A              9048 	sub	a,#0x1A
   2F09 3ArAFs17           9049 	ld	a,(#_triframes+1)
   2F0C DE 04              9050 	sbc	a,#0x04
   2F0E F2r19s2F           9051 	jp	P,00142$
                           9052 ;demo.c:1352: drawtilescreen(tri_inva2);
   2F11 21rACs05           9053 	ld	hl,#_tri_inva2
   2F14 E5                 9054 	push	hl
   2F15 CDr52s2A           9055 	call	_drawtilescreen
   2F18 F1                 9056 	pop	af
   2F19                    9057 00142$:
                           9058 ;demo.c:1355: if (triframes == 1050) { tilei = 0; tilex = 0; tiley = 0; }
   2F19 3ArAEs17           9059 	ld	a,(#_triframes+0)
   2F1C D6 1A              9060 	sub	a,#0x1A
   2F1E 20 07              9061 	jr	NZ,00244$
   2F20 3ArAFs17           9062 	ld	a,(#_triframes+1)
   2F23 D6 04              9063 	sub	a,#0x04
   2F25 28 02              9064 	jr	Z,00245$
   2F27                    9065 00244$:
   2F27 18 1E              9066 	jr	00145$
   2F29                    9067 00245$:
   2F29 21r9Cs17           9068 	ld	hl,#_tilei + 0
   2F2C 36 00              9069 	ld	(hl), #0x00
   2F2E 21r9Ds17           9070 	ld	hl,#_tilei + 1
   2F31 36 00              9071 	ld	(hl), #0x00
   2F33 21r9Es17           9072 	ld	hl,#_tilex + 0
   2F36 36 00              9073 	ld	(hl), #0x00
   2F38 21r9Fs17           9074 	ld	hl,#_tilex + 1
   2F3B 36 00              9075 	ld	(hl), #0x00
   2F3D 21rA0s17           9076 	ld	hl,#_tiley + 0
   2F40 36 00              9077 	ld	(hl), #0x00
   2F42 21rA1s17           9078 	ld	hl,#_tiley + 1
   2F45 36 00              9079 	ld	(hl), #0x00
   2F47                    9080 00145$:
                           9081 ;demo.c:1356: if (triframes >= 1050 && triframes < 1200) {
   2F47 3ArAEs17           9082 	ld	a,(#_triframes+0)
   2F4A D6 1A              9083 	sub	a,#0x1A
   2F4C 3ArAFs17           9084 	ld	a,(#_triframes+1)
   2F4F DE 04              9085 	sbc	a,#0x04
   2F51 FAr69s2F           9086 	jp	M,00147$
   2F54 3ArAEs17           9087 	ld	a,(#_triframes+0)
   2F57 D6 B0              9088 	sub	a,#0xB0
   2F59 3ArAFs17           9089 	ld	a,(#_triframes+1)
   2F5C DE 04              9090 	sbc	a,#0x04
   2F5E F2r69s2F           9091 	jp	P,00147$
                           9092 ;demo.c:1357: drawtilescreen(tri_inva3);
   2F61 21r6Cs06           9093 	ld	hl,#_tri_inva3
   2F64 E5                 9094 	push	hl
   2F65 CDr52s2A           9095 	call	_drawtilescreen
   2F68 F1                 9096 	pop	af
   2F69                    9097 00147$:
                           9098 ;demo.c:1360: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   2F69 3ArAEs17           9099 	ld	a,(#_triframes+0)
   2F6C D6 B0              9100 	sub	a,#0xB0
   2F6E 20 07              9101 	jr	NZ,00246$
   2F70 3ArAFs17           9102 	ld	a,(#_triframes+1)
   2F73 D6 04              9103 	sub	a,#0x04
   2F75 28 02              9104 	jr	Z,00247$
   2F77                    9105 00246$:
   2F77 18 1E              9106 	jr	00150$
   2F79                    9107 00247$:
   2F79 21r9Cs17           9108 	ld	hl,#_tilei + 0
   2F7C 36 00              9109 	ld	(hl), #0x00
   2F7E 21r9Ds17           9110 	ld	hl,#_tilei + 1
   2F81 36 00              9111 	ld	(hl), #0x00
   2F83 21r9Es17           9112 	ld	hl,#_tilex + 0
   2F86 36 00              9113 	ld	(hl), #0x00
   2F88 21r9Fs17           9114 	ld	hl,#_tilex + 1
   2F8B 36 00              9115 	ld	(hl), #0x00
   2F8D 21rA0s17           9116 	ld	hl,#_tiley + 0
   2F90 36 00              9117 	ld	(hl), #0x00
   2F92 21rA1s17           9118 	ld	hl,#_tiley + 1
   2F95 36 00              9119 	ld	(hl), #0x00
   2F97                    9120 00150$:
                           9121 ;demo.c:1361: if (triframes >= 1200 && triframes < 1350) {
   2F97 3ArAEs17           9122 	ld	a,(#_triframes+0)
   2F9A D6 B0              9123 	sub	a,#0xB0
   2F9C 3ArAFs17           9124 	ld	a,(#_triframes+1)
   2F9F DE 04              9125 	sbc	a,#0x04
   2FA1 FArB9s2F           9126 	jp	M,00152$
   2FA4 3ArAEs17           9127 	ld	a,(#_triframes+0)
   2FA7 D6 46              9128 	sub	a,#0x46
   2FA9 3ArAFs17           9129 	ld	a,(#_triframes+1)
   2FAC DE 05              9130 	sbc	a,#0x05
   2FAE F2rB9s2F           9131 	jp	P,00152$
                           9132 ;demo.c:1362: drawtilescreen(tri_inva4);
   2FB1 21r2Cs07           9133 	ld	hl,#_tri_inva4
   2FB4 E5                 9134 	push	hl
   2FB5 CDr52s2A           9135 	call	_drawtilescreen
   2FB8 F1                 9136 	pop	af
   2FB9                    9137 00152$:
                           9138 ;demo.c:1365: if (triframes == 1350) { tilei = 0; tilex = 0; tiley = 0; }
   2FB9 3ArAEs17           9139 	ld	a,(#_triframes+0)
   2FBC D6 46              9140 	sub	a,#0x46
   2FBE 20 07              9141 	jr	NZ,00248$
   2FC0 3ArAFs17           9142 	ld	a,(#_triframes+1)
   2FC3 D6 05              9143 	sub	a,#0x05
   2FC5 28 02              9144 	jr	Z,00249$
   2FC7                    9145 00248$:
   2FC7 18 1E              9146 	jr	00155$
   2FC9                    9147 00249$:
   2FC9 21r9Cs17           9148 	ld	hl,#_tilei + 0
   2FCC 36 00              9149 	ld	(hl), #0x00
   2FCE 21r9Ds17           9150 	ld	hl,#_tilei + 1
   2FD1 36 00              9151 	ld	(hl), #0x00
   2FD3 21r9Es17           9152 	ld	hl,#_tilex + 0
   2FD6 36 00              9153 	ld	(hl), #0x00
   2FD8 21r9Fs17           9154 	ld	hl,#_tilex + 1
   2FDB 36 00              9155 	ld	(hl), #0x00
   2FDD 21rA0s17           9156 	ld	hl,#_tiley + 0
   2FE0 36 00              9157 	ld	(hl), #0x00
   2FE2 21rA1s17           9158 	ld	hl,#_tiley + 1
   2FE5 36 00              9159 	ld	(hl), #0x00
   2FE7                    9160 00155$:
                           9161 ;demo.c:1366: if (triframes >= 1350 && triframes < 1500) {
   2FE7 3ArAEs17           9162 	ld	a,(#_triframes+0)
   2FEA D6 46              9163 	sub	a,#0x46
   2FEC 3ArAFs17           9164 	ld	a,(#_triframes+1)
   2FEF DE 05              9165 	sbc	a,#0x05
   2FF1 FAr09s30           9166 	jp	M,00157$
   2FF4 3ArAEs17           9167 	ld	a,(#_triframes+0)
   2FF7 D6 DC              9168 	sub	a,#0xDC
   2FF9 3ArAFs17           9169 	ld	a,(#_triframes+1)
   2FFC DE 05              9170 	sbc	a,#0x05
   2FFE F2r09s30           9171 	jp	P,00157$
                           9172 ;demo.c:1367: drawtilescreen(tri_center);
   3001 21r2Cs01           9173 	ld	hl,#_tri_center
   3004 E5                 9174 	push	hl
   3005 CDr52s2A           9175 	call	_drawtilescreen
   3008 F1                 9176 	pop	af
   3009                    9177 00157$:
                           9178 ;demo.c:1370: if (triframes > 1500) triframes = 199;
   3009 3E DC              9179 	ld	a,#0xDC
   300B FD 21rAEs17        9180 	ld	iy,#_triframes
   300F FD 96 00           9181 	sub	a,0 (iy)
   3012 3E 05              9182 	ld	a,#0x05
   3014 FD 21rAEs17        9183 	ld	iy,#_triframes
   3018 FD 9E 01           9184 	sbc	a,1 (iy)
   301B F2r28s30           9185 	jp	P,00160$
   301E 21rAEs17           9186 	ld	hl,#_triframes + 0
   3021 36 C7              9187 	ld	(hl), #0xC7
   3023 21rAFs17           9188 	ld	hl,#_triframes + 1
   3026 36 00              9189 	ld	(hl), #0x00
   3028                    9190 00160$:
                           9191 ;demo.c:1373: msx2_palette(2,0,0,0);
   3028 21 00 00           9192 	ld	hl,#0x0000
   302B E5                 9193 	push	hl
   302C 2E 02              9194 	ld	l, #0x02
   302E E5                 9195 	push	hl
   302F CDr00s00           9196 	call	_msx2_palette
   3032 F1                 9197 	pop	af
   3033 F1                 9198 	pop	af
                           9199 ;demo.c:1374: msx2_palette(11,0,0,0);
   3034 21 00 00           9200 	ld	hl,#0x0000
   3037 E5                 9201 	push	hl
   3038 2E 0B              9202 	ld	l, #0x0B
   303A E5                 9203 	push	hl
   303B CDr00s00           9204 	call	_msx2_palette
   303E F1                 9205 	pop	af
   303F F1                 9206 	pop	af
                           9207 ;demo.c:1376: if (PLY_PSGReg10 > 4) {
   3040 3E 04              9208 	ld	a,#0x04
   3042 FD 21r00s00        9209 	ld	iy,#_PLY_PSGReg10
   3046 FD 96 00           9210 	sub	a,0 (iy)
   3049 D2rDEs30           9211 	jp	NC,00162$
                           9212 ;demo.c:1377: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   304C 21r00s00           9213 	ld	hl,#_PLY_PSGReg10 + 0
   304F 4E                 9214 	ld	c,(hl)
   3050 06 00              9215 	ld	b,#0x00
   3052 21rACs17           9216 	ld	hl,#_tripaltick + 0
   3055 5E                 9217 	ld	e,(hl)
   3056 16 00              9218 	ld	d,#0x00
   3058 79                 9219 	ld	a,c
   3059 83                 9220 	add	a,e
   305A 4F                 9221 	ld	c,a
   305B 78                 9222 	ld	a,b
   305C 8A                 9223 	adc	a,d
   305D 06 00              9224 	ld	b,#0x00
   305F 21r2Cs00           9225 	ld	hl,#_sintabx
   3062 09                 9226 	add	hl,bc
   3063 7E                 9227 	ld	a,(hl)
   3064 4F                 9228 	ld	c,a
   3065 06 00              9229 	ld	b,#0x00
   3067 3E C0              9230 	ld	a,#0xC0
   3069 91                 9231 	sub	a,c
   306A 4F                 9232 	ld	c,a
   306B 3E 00              9233 	ld	a,#0x00
   306D 98                 9234 	sbc	a,b
   306E 47                 9235 	ld	b,a
   306F CB 28              9236 	sra	b
   3071 CB 19              9237 	rr	c
   3073 CB 28              9238 	sra	b
   3075 CB 19              9239 	rr	c
   3077 CB 28              9240 	sra	b
   3079 CB 19              9241 	rr	c
   307B 41                 9242 	ld	b,c
   307C 0E 17              9243 	ld	c,#0x17
   307E C5                 9244 	push	bc
   307F CDr00s00           9245 	call	_vdp_register
   3082 F1                 9246 	pop	af
                           9247 ;demo.c:1379: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   3083 21rA5s17           9248 	ld	hl,#_tripal + 2
   3086 4E                 9249 	ld	c,(hl)
   3087 11rA4s17           9250 	ld	de,#_tripal + 1
   308A 1A                 9251 	ld	a,(de)
   308B 47                 9252 	ld	b,a
   308C 21rA3s17           9253 	ld	hl,#_tripal
   308F 5E                 9254 	ld	e,(hl)
   3090 21r00s00           9255 	ld	hl,#_PLY_PSGReg10 + 0
   3093 56                 9256 	ld	d,(hl)
   3094 7B                 9257 	ld	a,e
   3095 82                 9258 	add	a,d
   3096 5F                 9259 	ld	e,a
   3097 79                 9260 	ld	a,c
   3098 F5                 9261 	push	af
   3099 33                 9262 	inc	sp
   309A C5                 9263 	push	bc
   309B 33                 9264 	inc	sp
   309C 53                 9265 	ld	d,e
   309D 1E 03              9266 	ld	e,#0x03
   309F D5                 9267 	push	de
   30A0 CDr00s00           9268 	call	_msx2_palette
   30A3 F1                 9269 	pop	af
   30A4 F1                 9270 	pop	af
                           9271 ;demo.c:1380: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   30A5 21rA8s17           9272 	ld	hl,#_tripal + 5
   30A8 4E                 9273 	ld	c,(hl)
   30A9 11rA7s17           9274 	ld	de,#_tripal + 4
   30AC 1A                 9275 	ld	a,(de)
   30AD 47                 9276 	ld	b,a
   30AE 21rA6s17           9277 	ld	hl,#_tripal + 3
   30B1 5E                 9278 	ld	e,(hl)
   30B2 79                 9279 	ld	a,c
   30B3 F5                 9280 	push	af
   30B4 33                 9281 	inc	sp
   30B5 C5                 9282 	push	bc
   30B6 33                 9283 	inc	sp
   30B7 53                 9284 	ld	d,e
   30B8 1E 0E              9285 	ld	e,#0x0E
   30BA D5                 9286 	push	de
   30BB CDr00s00           9287 	call	_msx2_palette
   30BE F1                 9288 	pop	af
   30BF F1                 9289 	pop	af
                           9290 ;demo.c:1381: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   30C0 21rABs17           9291 	ld	hl,#_tripal + 8
   30C3 4E                 9292 	ld	c,(hl)
   30C4 11rAAs17           9293 	ld	de,#_tripal + 7
   30C7 1A                 9294 	ld	a,(de)
   30C8 47                 9295 	ld	b,a
   30C9 21rA9s17           9296 	ld	hl,#_tripal + 6
   30CC 5E                 9297 	ld	e,(hl)
   30CD 79                 9298 	ld	a,c
   30CE F5                 9299 	push	af
   30CF 33                 9300 	inc	sp
   30D0 C5                 9301 	push	bc
   30D1 33                 9302 	inc	sp
   30D2 53                 9303 	ld	d,e
   30D3 1E 06              9304 	ld	e,#0x06
   30D5 D5                 9305 	push	de
   30D6 CDr00s00           9306 	call	_msx2_palette
   30D9 F1                 9307 	pop	af
   30DA F1                 9308 	pop	af
   30DB C3r37s31           9309 	jp	00163$
   30DE                    9310 00162$:
                           9311 ;demo.c:1384: vdp_register(VDP_VOFFSET,0);
   30DE 21 17 00           9312 	ld	hl,#0x0017
   30E1 E5                 9313 	push	hl
   30E2 CDr00s00           9314 	call	_vdp_register
   30E5 F1                 9315 	pop	af
                           9316 ;demo.c:1386: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   30E6 21rA5s17           9317 	ld	hl,#_tripal + 2
   30E9 4E                 9318 	ld	c,(hl)
   30EA 11rA4s17           9319 	ld	de,#_tripal + 1
   30ED 1A                 9320 	ld	a,(de)
   30EE 47                 9321 	ld	b,a
   30EF 21rA3s17           9322 	ld	hl,#_tripal
   30F2 5E                 9323 	ld	e,(hl)
   30F3 79                 9324 	ld	a,c
   30F4 F5                 9325 	push	af
   30F5 33                 9326 	inc	sp
   30F6 C5                 9327 	push	bc
   30F7 33                 9328 	inc	sp
   30F8 53                 9329 	ld	d,e
   30F9 1E 03              9330 	ld	e,#0x03
   30FB D5                 9331 	push	de
   30FC CDr00s00           9332 	call	_msx2_palette
   30FF F1                 9333 	pop	af
   3100 F1                 9334 	pop	af
                           9335 ;demo.c:1387: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   3101 21rA8s17           9336 	ld	hl,#_tripal + 5
   3104 4E                 9337 	ld	c,(hl)
   3105 11rA7s17           9338 	ld	de,#_tripal + 4
   3108 1A                 9339 	ld	a,(de)
   3109 47                 9340 	ld	b,a
   310A 21rA6s17           9341 	ld	hl,#_tripal + 3
   310D 5E                 9342 	ld	e,(hl)
   310E 79                 9343 	ld	a,c
   310F F5                 9344 	push	af
   3110 33                 9345 	inc	sp
   3111 C5                 9346 	push	bc
   3112 33                 9347 	inc	sp
   3113 53                 9348 	ld	d,e
   3114 1E 0E              9349 	ld	e,#0x0E
   3116 D5                 9350 	push	de
   3117 CDr00s00           9351 	call	_msx2_palette
   311A F1                 9352 	pop	af
   311B F1                 9353 	pop	af
                           9354 ;demo.c:1388: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   311C 21rABs17           9355 	ld	hl,#_tripal + 8
   311F 4E                 9356 	ld	c,(hl)
   3120 11rAAs17           9357 	ld	de,#_tripal + 7
   3123 1A                 9358 	ld	a,(de)
   3124 47                 9359 	ld	b,a
   3125 21rA9s17           9360 	ld	hl,#_tripal + 6
   3128 5E                 9361 	ld	e,(hl)
   3129 79                 9362 	ld	a,c
   312A F5                 9363 	push	af
   312B 33                 9364 	inc	sp
   312C C5                 9365 	push	bc
   312D 33                 9366 	inc	sp
   312E 53                 9367 	ld	d,e
   312F 1E 06              9368 	ld	e,#0x06
   3131 D5                 9369 	push	de
   3132 CDr00s00           9370 	call	_msx2_palette
   3135 F1                 9371 	pop	af
   3136 F1                 9372 	pop	af
   3137                    9373 00163$:
                           9374 ;demo.c:1392: if (tick > 28) tick = 0;
   3137 3E 1C              9375 	ld	a,#0x1C
   3139 FD 21rB2s16        9376 	ld	iy,#_tick
   313D FD 96 00           9377 	sub	a,0 (iy)
   3140 3E 00              9378 	ld	a,#0x00
   3142 FD 21rB2s16        9379 	ld	iy,#_tick
   3146 FD 9E 01           9380 	sbc	a,1 (iy)
   3149 F2r56s31           9381 	jp	P,00165$
   314C 21rB2s16           9382 	ld	hl,#_tick + 0
   314F 36 00              9383 	ld	(hl), #0x00
   3151 21rB3s16           9384 	ld	hl,#_tick + 1
   3154 36 00              9385 	ld	(hl), #0x00
   3156                    9386 00165$:
                           9387 ;demo.c:1394: tripaltick++;
   3156 FD 21rACs17        9388 	ld	iy,#_tripaltick
   315A FD 34 00           9389 	inc	0 (iy)
                           9390 ;demo.c:1395: if (tripaltick > 6) {
   315D 3E 06              9391 	ld	a,#0x06
   315F FD 21rACs17        9392 	ld	iy,#_tripaltick
   3163 FD 96 00           9393 	sub	a,0 (iy)
   3166 D2rEBs31           9394 	jp	NC,00178$
                           9395 ;demo.c:1396: tripaltick2++;
   3169 FD 21rADs17        9396 	ld	iy,#_tripaltick2
   316D FD 34 00           9397 	inc	0 (iy)
                           9398 ;demo.c:1397: if (tripaltick2 > 6) tripaltick2 = 0;
   3170 3E 06              9399 	ld	a,#0x06
   3172 FD 21rADs17        9400 	ld	iy,#_tripaltick2
   3176 FD 96 00           9401 	sub	a,0 (iy)
   3179 30 05              9402 	jr	NC,00167$
   317B 21rADs17           9403 	ld	hl,#_tripaltick2 + 0
   317E 36 00              9404 	ld	(hl), #0x00
   3180                    9405 00167$:
                           9406 ;demo.c:1399: r = tripal[0];
   3180 21rA3s17           9407 	ld	hl,#_tripal
   3183 4E                 9408 	ld	c,(hl)
   3184 DD 71 FD           9409 	ld	-3 (ix),c
                           9410 ;demo.c:1400: g = tripal[1];
   3187 11rA4s17           9411 	ld	de,#_tripal + 1
   318A 1A                 9412 	ld	a,(de)
   318B DD 77 FC           9413 	ld	-4 (ix),a
                           9414 ;demo.c:1401: b = tripal[2];
   318E 21rA5s17           9415 	ld	hl,#_tripal + 2
   3191 5E                 9416 	ld	e,(hl)
   3192 DD 73 FB           9417 	ld	-5 (ix),e
                           9418 ;demo.c:1403: for (x = 0; x < 6; x++) {
   3195 DD 36 FE 00        9419 	ld	-2 (ix),#0x00
   3199 DD 36 FF 00        9420 	ld	-1 (ix),#0x00
   319D                    9421 00174$:
   319D DD 7E FE           9422 	ld	a,-2 (ix)
   31A0 D6 06              9423 	sub	a,#0x06
   31A2 DD 7E FF           9424 	ld	a,-1 (ix)
   31A5 DE 00              9425 	sbc	a,#0x00
   31A7 F2rD1s31           9426 	jp	P,00177$
                           9427 ;demo.c:1404: tripal[x] = tripal[x+3];
   31AA 3ErA3              9428 	ld	a,#<_tripal
   31AC DD 86 FE           9429 	add	a,-2 (ix)
   31AF 4F                 9430 	ld	c,a
   31B0 3Es17              9431 	ld	a,#>_tripal
   31B2 DD 8E FF           9432 	adc	a,-1 (ix)
   31B5 47                 9433 	ld	b,a
   31B6 DD 5E FE           9434 	ld	e,-2 (ix)
   31B9 1C                 9435 	inc	e
   31BA 1C                 9436 	inc	e
   31BB 1C                 9437 	inc	e
   31BC 3ErA3              9438 	ld	a,#<_tripal
   31BE 83                 9439 	add	a,e
   31BF 5F                 9440 	ld	e,a
   31C0 3Es17              9441 	ld	a,#>_tripal
   31C2 CE 00              9442 	adc	a,#0x00
   31C4 57                 9443 	ld	d,a
   31C5 1A                 9444 	ld	a,(de)
   31C6 02                 9445 	ld	(bc),a
                           9446 ;demo.c:1403: for (x = 0; x < 6; x++) {
   31C7 DD 34 FE           9447 	inc	-2 (ix)
   31CA 20 03              9448 	jr	NZ,00251$
   31CC DD 34 FF           9449 	inc	-1 (ix)
   31CF                    9450 00251$:
   31CF 18 CC              9451 	jr	00174$
   31D1                    9452 00177$:
                           9453 ;demo.c:1407: tripal[6] = r;
   31D1 01rA9s17           9454 	ld	bc,#_tripal + 6
   31D4 DD 7E FD           9455 	ld	a,-3 (ix)
   31D7 02                 9456 	ld	(bc),a
                           9457 ;demo.c:1408: tripal[7] = g;
   31D8 01rAAs17           9458 	ld	bc,#_tripal + 7
   31DB DD 7E FC           9459 	ld	a,-4 (ix)
   31DE 02                 9460 	ld	(bc),a
                           9461 ;demo.c:1409: tripal[8] = b;
   31DF 01rABs17           9462 	ld	bc,#_tripal + 8
   31E2 DD 7E FB           9463 	ld	a,-5 (ix)
   31E5 02                 9464 	ld	(bc),a
                           9465 ;demo.c:1410: tripaltick = 0;
   31E6 21rACs17           9466 	ld	hl,#_tripaltick + 0
   31E9 36 00              9467 	ld	(hl), #0x00
   31EB                    9468 00178$:
   31EB DD F9              9469 	ld	sp,ix
   31ED DD E1              9470 	pop	ix
   31EF C9                 9471 	ret
   31F0                    9472 _tritiles_end::
                           9473 ;demo.c:1415: int abs (int n) {
                           9474 ;	---------------------------------
                           9475 ; Function abs
                           9476 ; ---------------------------------
   31F0                    9477 _abs_start::
   31F0                    9478 _abs:
   31F0 DD E5              9479 	push	ix
   31F2 DD 21 00 00        9480 	ld	ix,#0
   31F6 DD 39              9481 	add	ix,sp
   31F8 21 FA FF           9482 	ld	hl,#-6
   31FB 39                 9483 	add	hl,sp
   31FC F9                 9484 	ld	sp,hl
                           9485 ;demo.c:1416: const int ret[2] = { n, -n };
   31FD 21 02 00           9486 	ld	hl,#0x0002
   3200 39                 9487 	add	hl,sp
   3201 4D                 9488 	ld	c,l
   3202 44                 9489 	ld	b,h
   3203 DD 7E 04           9490 	ld	a,4 (ix)
   3206 77                 9491 	ld	(hl),a
   3207 23                 9492 	inc	hl
   3208 DD 7E 05           9493 	ld	a,5 (ix)
   320B 77                 9494 	ld	(hl),a
   320C 21 02 00           9495 	ld	hl,#0x0002
   320F 09                 9496 	add	hl,bc
   3210 DD 75 FA           9497 	ld	-6 (ix),l
   3213 DD 74 FB           9498 	ld	-5 (ix),h
   3216 AF                 9499 	xor	a,a
   3217 DD 9E 04           9500 	sbc	a,4 (ix)
   321A 5F                 9501 	ld	e,a
   321B 3E 00              9502 	ld	a,#0x00
   321D DD 9E 05           9503 	sbc	a,5 (ix)
   3220 57                 9504 	ld	d,a
   3221 DD 6E FA           9505 	ld	l,-6 (ix)
   3224 DD 66 FB           9506 	ld	h,-5 (ix)
   3227 73                 9507 	ld	(hl),e
   3228 23                 9508 	inc	hl
   3229 72                 9509 	ld	(hl),d
                           9510 ;demo.c:1417: return ret [n<0];
   322A DD 7E 05           9511 	ld	a,5 (ix)
   322D 07                 9512 	rlca
   322E E6 01              9513 	and	a,#0x01
   3230 5F                 9514 	ld	e,a
   3231 CB 23              9515 	sla	e
   3233 79                 9516 	ld	a,c
   3234 83                 9517 	add	a,e
   3235 6F                 9518 	ld	l,a
   3236 78                 9519 	ld	a,b
   3237 CE 00              9520 	adc	a,#0x00
   3239 67                 9521 	ld	h,a
   323A 5E                 9522 	ld	e,(hl)
   323B 23                 9523 	inc	hl
   323C 4E                 9524 	ld	c,(hl)
   323D 6B                 9525 	ld	l,e
   323E 61                 9526 	ld	h,c
   323F DD F9              9527 	ld	sp,ix
   3241 DD E1              9528 	pop	ix
   3243 C9                 9529 	ret
   3244                    9530 _abs_end::
                           9531 ;demo.c:1423: void logoeffu() {
                           9532 ;	---------------------------------
                           9533 ; Function logoeffu
                           9534 ; ---------------------------------
   3244                    9535 _logoeffu_start::
   3244                    9536 _logoeffu:
   3244 DD E5              9537 	push	ix
   3246 DD 21 00 00        9538 	ld	ix,#0
   324A DD 39              9539 	add	ix,sp
   324C F5                 9540 	push	af
   324D F5                 9541 	push	af
                           9542 ;demo.c:1427: fadein();
   324E CDr27s0C           9543 	call	_fadein
                           9544 ;demo.c:1429: v = abs(sintabx[(vbicount) & 255]>>4);
   3251 21rB0s16           9545 	ld	hl,#_vbicount + 0
   3254 4E                 9546 	ld	c,(hl)
   3255 06 00              9547 	ld	b,#0x00
   3257 21r2Cs00           9548 	ld	hl,#_sintabx
   325A 09                 9549 	add	hl,bc
   325B 7E                 9550 	ld	a,(hl)
   325C 4F                 9551 	ld	c,a
   325D CB 39              9552 	srl	c
   325F CB 39              9553 	srl	c
   3261 CB 39              9554 	srl	c
   3263 CB 39              9555 	srl	c
   3265 06 00              9556 	ld	b,#0x00
   3267 C5                 9557 	push	bc
   3268 CDrF0s31           9558 	call	_abs
   326B F1                 9559 	pop	af
   326C 44                 9560 	ld	b,h
   326D DD 75 FC           9561 	ld	-4 (ix),l
   3270 DD 70 FD           9562 	ld	-3 (ix),b
                           9563 ;demo.c:1431: for (y = 0; y < 116; y+=2) {
   3273 DD 36 FE 00        9564 	ld	-2 (ix),#0x00
   3277 DD 36 FF 00        9565 	ld	-1 (ix),#0x00
   327B                    9566 00108$:
   327B DD 7E FE           9567 	ld	a,-2 (ix)
   327E D6 74              9568 	sub	a,#0x74
   3280 DD 7E FF           9569 	ld	a,-1 (ix)
   3283 DE 00              9570 	sbc	a,#0x00
   3285 F2r50s33           9571 	jp	P,00111$
                           9572 ;demo.c:1432: cmd.size_x = 108;
   3288 11rBCs16           9573 	ld	de,#_cmd + 8
   328B EB                 9574 	ex	de,hl
   328C 36 6C              9575 	ld	(hl),#0x6C
   328E 23                 9576 	inc	hl
   328F 36 00              9577 	ld	(hl),#0x00
                           9578 ;demo.c:1433: cmd.size_y = 2;
   3291 11rBEs16           9579 	ld	de,#_cmd + 10
   3294 EB                 9580 	ex	de,hl
   3295 36 02              9581 	ld	(hl),#0x02
   3297 23                 9582 	inc	hl
   3298 36 00              9583 	ld	(hl),#0x00
                           9584 ;demo.c:1434: cmd.data = 0;
   329A 11rC0s16           9585 	ld	de,#_cmd + 12
   329D 3E 00              9586 	ld	a,#0x00
   329F 12                 9587 	ld	(de),a
                           9588 ;demo.c:1435: cmd.argument = 0x00;
   32A0 11rC1s16           9589 	ld	de,#_cmd + 13
   32A3 3E 00              9590 	ld	a,#0x00
   32A5 12                 9591 	ld	(de),a
                           9592 ;demo.c:1436: cmd.command = 0xd0; 
   32A6 11rC2s16           9593 	ld	de,#_cmd + 14
   32A9 3E D0              9594 	ld	a,#0xD0
   32AB 12                 9595 	ld	(de),a
                           9596 ;demo.c:1437: cmd.source_x = 74;
   32AC 21rB4s16           9597 	ld	hl,#_cmd
   32AF 36 4A              9598 	ld	(hl),#0x4A
   32B1 23                 9599 	inc	hl
   32B2 36 00              9600 	ld	(hl),#0x00
                           9601 ;demo.c:1438: cmd.source_y = 256+y;
   32B4 11rB6s16           9602 	ld	de,#_cmd + 2
   32B7 DD 7E FE           9603 	ld	a,-2 (ix)
   32BA C6 00              9604 	add	a,#0x00
   32BC 4F                 9605 	ld	c,a
   32BD DD 7E FF           9606 	ld	a,-1 (ix)
   32C0 CE 01              9607 	adc	a,#0x01
   32C2 47                 9608 	ld	b,a
   32C3 6B                 9609 	ld	l,e
   32C4 62                 9610 	ld	h,d
   32C5 71                 9611 	ld	(hl),c
   32C6 23                 9612 	inc	hl
   32C7 70                 9613 	ld	(hl),b
                           9614 ;demo.c:1439: v+=y;
   32C8 DD 7E FC           9615 	ld	a,-4 (ix)
   32CB DD 86 FE           9616 	add	a,-2 (ix)
   32CE DD 77 FC           9617 	ld	-4 (ix),a
   32D1 DD 7E FD           9618 	ld	a,-3 (ix)
   32D4 DD 8E FF           9619 	adc	a,-1 (ix)
   32D7 DD 77 FD           9620 	ld	-3 (ix),a
                           9621 ;demo.c:1440: v -= powa;
   32DA 21rB2s17           9622 	ld	hl,#_powa
   32DD DD 7E FC           9623 	ld	a,-4 (ix)
   32E0 96                 9624 	sub	a,(hl)
   32E1 DD 77 FC           9625 	ld	-4 (ix),a
   32E4 DD 7E FD           9626 	ld	a,-3 (ix)
   32E7 23                 9627 	inc	hl
   32E8 9E                 9628 	sbc	a,(hl)
                           9629 ;demo.c:1441: if (v<0) v = 0;
   32E9 DD 77 FD           9630 	ld	-3 (ix),a
   32EC CB 7F              9631 	bit	7,a
   32EE 28 08              9632 	jr	Z,00102$
   32F0 DD 36 FC 00        9633 	ld	-4 (ix),#0x00
   32F4 DD 36 FD 00        9634 	ld	-3 (ix),#0x00
   32F8                    9635 00102$:
                           9636 ;demo.c:1442: if (v>150) v = 150;
   32F8 3E 96              9637 	ld	a,#0x96
   32FA DD 96 FC           9638 	sub	a,-4 (ix)
   32FD 3E 00              9639 	ld	a,#0x00
   32FF DD 9E FD           9640 	sbc	a,-3 (ix)
   3302 F2r0Ds33           9641 	jp	P,00104$
   3305 DD 36 FC 96        9642 	ld	-4 (ix),#0x96
   3309 DD 36 FD 00        9643 	ld	-3 (ix),#0x00
   330D                    9644 00104$:
                           9645 ;demo.c:1443: cmd.dest_x = 74+v;
   330D 01rB8s16           9646 	ld	bc,#_cmd + 4
   3310 DD 7E FC           9647 	ld	a,-4 (ix)
   3313 C6 4A              9648 	add	a,#0x4A
   3315 5F                 9649 	ld	e,a
   3316 DD 7E FD           9650 	ld	a,-3 (ix)
   3319 CE 00              9651 	adc	a,#0x00
   331B 57                 9652 	ld	d,a
   331C 69                 9653 	ld	l,c
   331D 60                 9654 	ld	h,b
   331E 73                 9655 	ld	(hl),e
   331F 23                 9656 	inc	hl
   3320 72                 9657 	ld	(hl),d
                           9658 ;demo.c:1444: cmd.dest_y = 50+y+1;
   3321 01rBAs16           9659 	ld	bc,#_cmd + 6
   3324 DD 7E FE           9660 	ld	a,-2 (ix)
   3327 C6 33              9661 	add	a,#0x33
   3329 5F                 9662 	ld	e,a
   332A DD 7E FF           9663 	ld	a,-1 (ix)
   332D CE 00              9664 	adc	a,#0x00
   332F 57                 9665 	ld	d,a
   3330 69                 9666 	ld	l,c
   3331 60                 9667 	ld	h,b
   3332 73                 9668 	ld	(hl),e
   3333 23                 9669 	inc	hl
   3334 72                 9670 	ld	(hl),d
                           9671 ;demo.c:1445: vdp_copier(&cmd);
   3335 21rB4s16           9672 	ld	hl,#_cmd
   3338 E5                 9673 	push	hl
   3339 CDr00s00           9674 	call	_vdp_copier
   333C F1                 9675 	pop	af
                           9676 ;demo.c:1431: for (y = 0; y < 116; y+=2) {
   333D DD 7E FE           9677 	ld	a,-2 (ix)
   3340 C6 02              9678 	add	a,#0x02
   3342 DD 77 FE           9679 	ld	-2 (ix),a
   3345 DD 7E FF           9680 	ld	a,-1 (ix)
   3348 CE 00              9681 	adc	a,#0x00
   334A DD 77 FF           9682 	ld	-1 (ix),a
   334D C3r7Bs32           9683 	jp	00108$
   3350                    9684 00111$:
                           9685 ;demo.c:1448: if (vbicount > scenetimings[2]+84 && onceclear > 182) {
   3350 21rDFs16           9686 	ld	hl, #_scenetimings + 4
   3353 4E                 9687 	ld	c,(hl)
   3354 23                 9688 	inc	hl
   3355 46                 9689 	ld	b,(hl)
   3356 21 54 00           9690 	ld	hl,#0x0054
   3359 09                 9691 	add	hl,bc
   335A 4D                 9692 	ld	c,l
   335B 44                 9693 	ld	b,h
   335C 79                 9694 	ld	a,c
   335D FD 21rB0s16        9695 	ld	iy,#_vbicount
   3361 FD 96 00           9696 	sub	a,0 (iy)
   3364 78                 9697 	ld	a,b
   3365 FD 21rB0s16        9698 	ld	iy,#_vbicount
   3369 FD 9E 01           9699 	sbc	a,1 (iy)
   336C F2rCEs33           9700 	jp	P,00106$
   336F 3E B6              9701 	ld	a,#0xB6
   3371 FD 21rB4s17        9702 	ld	iy,#_onceclear
   3375 FD 96 00           9703 	sub	a,0 (iy)
   3378 D2rCEs33           9704 	jp	NC,00106$
                           9705 ;demo.c:1449: cmd.size_x = 4;
   337B 21rBCs16           9706 	ld	hl, #_cmd + 8
   337E 36 04              9707 	ld	(hl),#0x04
   3380 23                 9708 	inc	hl
   3381 36 00              9709 	ld	(hl),#0x00
                           9710 ;demo.c:1450: cmd.size_y = 116;
   3383 21rBEs16           9711 	ld	hl, #_cmd + 10
   3386 36 74              9712 	ld	(hl),#0x74
   3388 23                 9713 	inc	hl
   3389 36 00              9714 	ld	(hl),#0x00
                           9715 ;demo.c:1451: cmd.data = 0;
                           9716 ;demo.c:1452: cmd.argument = 0x00;
   338B 3E 00              9717 	ld	a,#0x00
   338D 32rC0s16           9718 	ld	(#_cmd + 12),a
   3390 32rC1s16           9719 	ld	(#_cmd + 13),a
                           9720 ;demo.c:1453: cmd.command = 0xd0; 
   3393 01rC2s16           9721 	ld	bc,#_cmd + 14
   3396 3E D0              9722 	ld	a,#0xD0
   3398 02                 9723 	ld	(bc),a
                           9724 ;demo.c:1454: cmd.source_x = 20;
   3399 21rB4s16           9725 	ld	hl,#_cmd
   339C 36 14              9726 	ld	(hl),#0x14
   339E 23                 9727 	inc	hl
   339F 36 00              9728 	ld	(hl),#0x00
                           9729 ;demo.c:1455: cmd.source_y = 0;
   33A1 21rB6s16           9730 	ld	hl, #_cmd + 2
   33A4 36 00              9731 	ld	(hl),#0x00
   33A6 23                 9732 	inc	hl
   33A7 36 00              9733 	ld	(hl),#0x00
                           9734 ;demo.c:1456: cmd.dest_x = onceclear;
   33A9 01rB8s16           9735 	ld	bc,#_cmd + 4
   33AC 21rB4s17           9736 	ld	hl,#_onceclear + 0
   33AF 5E                 9737 	ld	e,(hl)
   33B0 16 00              9738 	ld	d,#0x00
   33B2 69                 9739 	ld	l,c
   33B3 60                 9740 	ld	h,b
   33B4 73                 9741 	ld	(hl),e
   33B5 23                 9742 	inc	hl
   33B6 72                 9743 	ld	(hl),d
                           9744 ;demo.c:1457: cmd.dest_y = 68;
   33B7 21rBAs16           9745 	ld	hl, #_cmd + 6
   33BA 36 44              9746 	ld	(hl),#0x44
   33BC 23                 9747 	inc	hl
   33BD 36 00              9748 	ld	(hl),#0x00
                           9749 ;demo.c:1458: vdp_copier(&cmd);
   33BF 21rB4s16           9750 	ld	hl,#_cmd
   33C2 E5                 9751 	push	hl
   33C3 CDr00s00           9752 	call	_vdp_copier
   33C6 F1                 9753 	pop	af
                           9754 ;demo.c:1459: onceclear-=4;
   33C7 21rB4s17           9755 	ld	hl,#_onceclear
   33CA 7E                 9756 	ld	a,(hl)
   33CB C6 FC              9757 	add	a,#0xFC
   33CD 77                 9758 	ld	(hl),a
   33CE                    9759 00106$:
                           9760 ;demo.c:1463: powa+=2;
   33CE 21rB2s17           9761 	ld	hl,#_powa
   33D1 7E                 9762 	ld	a,(hl)
   33D2 C6 02              9763 	add	a,#0x02
   33D4 23                 9764 	inc	hl
   33D5 2B                 9765 	dec	hl
   33D6 C5                 9766 	push	bc
   33D7 4F                 9767 	ld	c, a
   33D8 23                 9768 	inc	hl
   33D9 7E                 9769 	ld	a, (hl)
   33DA 47                 9770 	ld	b, a
   33DB 79                 9771 	ld	a, c
   33DC 2B                 9772 	dec	hl
   33DD 77                 9773 	ld	(hl), a
   33DE 78                 9774 	ld	a, b
   33DF C1                 9775 	pop	bc
   33E0 CE 00              9776 	adc	a,#0x00
   33E2 23                 9777 	inc	hl
   33E3 77                 9778 	ld	(hl),a
                           9779 ;demo.c:1464: powatick = 0;
   33E4 21rB0s17           9780 	ld	hl,#_powatick + 0
   33E7 36 00              9781 	ld	(hl), #0x00
   33E9 21rB1s17           9782 	ld	hl,#_powatick + 1
   33EC 36 00              9783 	ld	(hl), #0x00
   33EE DD F9              9784 	ld	sp,ix
   33F0 DD E1              9785 	pop	ix
   33F2 C9                 9786 	ret
   33F3                    9787 _logoeffu_end::
                           9788 ;demo.c:1473: void points() {
                           9789 ;	---------------------------------
                           9790 ; Function points
                           9791 ; ---------------------------------
   33F3                    9792 _points_start::
   33F3                    9793 _points:
   33F3 DD E5              9794 	push	ix
   33F5 DD 21 00 00        9795 	ld	ix,#0
   33F9 DD 39              9796 	add	ix,sp
   33FB F5                 9797 	push	af
   33FC 3B                 9798 	dec	sp
                           9799 ;demo.c:1477: if (initpoints == 0) {
   33FD AF                 9800 	xor	a,a
   33FE 21rB5s17           9801 	ld	hl,#_initpoints + 0
   3401 B6                 9802 	or	a,(hl)
   3402 C2r0Bs36           9803 	jp	NZ,00105$
                           9804 ;demo.c:1478: cmd.size_x = 256;
   3405 21rBCs16           9805 	ld	hl, #_cmd + 8
   3408 36 00              9806 	ld	(hl),#0x00
   340A 23                 9807 	inc	hl
   340B 36 01              9808 	ld	(hl),#0x01
                           9809 ;demo.c:1479: cmd.size_y = 4;
   340D 21rBEs16           9810 	ld	hl, #_cmd + 10
   3410 36 04              9811 	ld	(hl),#0x04
   3412 23                 9812 	inc	hl
   3413 36 00              9813 	ld	(hl),#0x00
                           9814 ;demo.c:1480: cmd.data = 0;
                           9815 ;demo.c:1481: cmd.argument = 0x00; // from 70xY to left
   3415 3E 00              9816 	ld	a,#0x00
   3417 32rC0s16           9817 	ld	(#_cmd + 12),a
   341A 32rC1s16           9818 	ld	(#_cmd + 13),a
                           9819 ;demo.c:1482: cmd.command = 0xd0; // vram to vram, y only
   341D 01rC2s16           9820 	ld	bc,#_cmd + 14
   3420 3E D0              9821 	ld	a,#0xD0
   3422 02                 9822 	ld	(bc),a
                           9823 ;demo.c:1483: cmd.source_x = 0;
   3423 21rB4s16           9824 	ld	hl,#_cmd
   3426 36 00              9825 	ld	(hl),#0x00
   3428 23                 9826 	inc	hl
   3429 36 00              9827 	ld	(hl),#0x00
                           9828 ;demo.c:1484: cmd.dest_x = 0;
   342B 21rB8s16           9829 	ld	hl, #_cmd + 4
   342E 36 00              9830 	ld	(hl),#0x00
   3430 23                 9831 	inc	hl
   3431 36 00              9832 	ld	(hl),#0x00
                           9833 ;demo.c:1486: for (y = 0; y < 212; y+=4) {
   3433 DD 36 FF 00        9834 	ld	-1 (ix),#0x00
   3437                    9835 00116$:
   3437 DD 7E FF           9836 	ld	a,-1 (ix)
   343A D6 D4              9837 	sub	a,#0xD4
   343C D2r63s35           9838 	jp	NC,00119$
                           9839 ;demo.c:1487: if (PLY_PSGReg10 > 4) {
   343F 3E 04              9840 	ld	a,#0x04
   3441 FD 21r00s00        9841 	ld	iy,#_PLY_PSGReg10
   3445 FD 96 00           9842 	sub	a,0 (iy)
   3448 D2rDDs34           9843 	jp	NC,00102$
                           9844 ;demo.c:1488: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   344B 21r00s00           9845 	ld	hl,#_PLY_PSGReg10 + 0
   344E 5E                 9846 	ld	e,(hl)
   344F 16 00              9847 	ld	d,#0x00
   3451 21rACs17           9848 	ld	hl,#_tripaltick + 0
   3454 4E                 9849 	ld	c,(hl)
   3455 06 00              9850 	ld	b,#0x00
   3457 7B                 9851 	ld	a,e
   3458 81                 9852 	add	a,c
   3459 4F                 9853 	ld	c,a
   345A 7A                 9854 	ld	a,d
   345B 88                 9855 	adc	a,b
   345C 06 00              9856 	ld	b,#0x00
   345E 21r2Cs00           9857 	ld	hl,#_sintabx
   3461 09                 9858 	add	hl,bc
   3462 7E                 9859 	ld	a,(hl)
   3463 4F                 9860 	ld	c,a
   3464 06 00              9861 	ld	b,#0x00
   3466 3E C0              9862 	ld	a,#0xC0
   3468 91                 9863 	sub	a,c
   3469 4F                 9864 	ld	c,a
   346A 3E 00              9865 	ld	a,#0x00
   346C 98                 9866 	sbc	a,b
   346D 47                 9867 	ld	b,a
   346E CB 28              9868 	sra	b
   3470 CB 19              9869 	rr	c
   3472 CB 28              9870 	sra	b
   3474 CB 19              9871 	rr	c
   3476 CB 28              9872 	sra	b
   3478 CB 19              9873 	rr	c
   347A 41                 9874 	ld	b,c
   347B 0E 17              9875 	ld	c,#0x17
   347D C5                 9876 	push	bc
   347E CDr00s00           9877 	call	_vdp_register
   3481 F1                 9878 	pop	af
                           9879 ;demo.c:1490: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   3482 21rA5s17           9880 	ld	hl,#_tripal + 2
   3485 4E                 9881 	ld	c,(hl)
   3486 11rA4s17           9882 	ld	de,#_tripal + 1
   3489 1A                 9883 	ld	a,(de)
   348A 47                 9884 	ld	b,a
   348B 21rA3s17           9885 	ld	hl,#_tripal
   348E 5E                 9886 	ld	e,(hl)
   348F 21r00s00           9887 	ld	hl,#_PLY_PSGReg10 + 0
   3492 56                 9888 	ld	d,(hl)
   3493 7B                 9889 	ld	a,e
   3494 82                 9890 	add	a,d
   3495 5F                 9891 	ld	e,a
   3496 79                 9892 	ld	a,c
   3497 F5                 9893 	push	af
   3498 33                 9894 	inc	sp
   3499 C5                 9895 	push	bc
   349A 33                 9896 	inc	sp
   349B 53                 9897 	ld	d,e
   349C 1E 03              9898 	ld	e,#0x03
   349E D5                 9899 	push	de
   349F CDr00s00           9900 	call	_msx2_palette
   34A2 F1                 9901 	pop	af
   34A3 F1                 9902 	pop	af
                           9903 ;demo.c:1491: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   34A4 21rA8s17           9904 	ld	hl,#_tripal + 5
   34A7 4E                 9905 	ld	c,(hl)
   34A8 11rA7s17           9906 	ld	de,#_tripal + 4
   34AB 1A                 9907 	ld	a,(de)
   34AC 47                 9908 	ld	b,a
   34AD 21rA6s17           9909 	ld	hl,#_tripal + 3
   34B0 5E                 9910 	ld	e,(hl)
   34B1 79                 9911 	ld	a,c
   34B2 F5                 9912 	push	af
   34B3 33                 9913 	inc	sp
   34B4 C5                 9914 	push	bc
   34B5 33                 9915 	inc	sp
   34B6 53                 9916 	ld	d,e
   34B7 1E 0E              9917 	ld	e,#0x0E
   34B9 D5                 9918 	push	de
   34BA CDr00s00           9919 	call	_msx2_palette
   34BD F1                 9920 	pop	af
   34BE F1                 9921 	pop	af
                           9922 ;demo.c:1492: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   34BF 21rABs17           9923 	ld	hl,#_tripal + 8
   34C2 4E                 9924 	ld	c,(hl)
   34C3 11rAAs17           9925 	ld	de,#_tripal + 7
   34C6 1A                 9926 	ld	a,(de)
   34C7 47                 9927 	ld	b,a
   34C8 21rA9s17           9928 	ld	hl,#_tripal + 6
   34CB 5E                 9929 	ld	e,(hl)
   34CC 79                 9930 	ld	a,c
   34CD F5                 9931 	push	af
   34CE 33                 9932 	inc	sp
   34CF C5                 9933 	push	bc
   34D0 33                 9934 	inc	sp
   34D1 53                 9935 	ld	d,e
   34D2 1E 06              9936 	ld	e,#0x06
   34D4 D5                 9937 	push	de
   34D5 CDr00s00           9938 	call	_msx2_palette
   34D8 F1                 9939 	pop	af
   34D9 F1                 9940 	pop	af
   34DA C3r36s35           9941 	jp	00103$
   34DD                    9942 00102$:
                           9943 ;demo.c:1495: vdp_register(VDP_VOFFSET,0);
   34DD 21 17 00           9944 	ld	hl,#0x0017
   34E0 E5                 9945 	push	hl
   34E1 CDr00s00           9946 	call	_vdp_register
   34E4 F1                 9947 	pop	af
                           9948 ;demo.c:1497: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   34E5 21rA5s17           9949 	ld	hl,#_tripal + 2
   34E8 4E                 9950 	ld	c,(hl)
   34E9 11rA4s17           9951 	ld	de,#_tripal + 1
   34EC 1A                 9952 	ld	a,(de)
   34ED 47                 9953 	ld	b,a
   34EE 21rA3s17           9954 	ld	hl,#_tripal
   34F1 5E                 9955 	ld	e,(hl)
   34F2 79                 9956 	ld	a,c
   34F3 F5                 9957 	push	af
   34F4 33                 9958 	inc	sp
   34F5 C5                 9959 	push	bc
   34F6 33                 9960 	inc	sp
   34F7 53                 9961 	ld	d,e
   34F8 1E 03              9962 	ld	e,#0x03
   34FA D5                 9963 	push	de
   34FB CDr00s00           9964 	call	_msx2_palette
   34FE F1                 9965 	pop	af
   34FF F1                 9966 	pop	af
                           9967 ;demo.c:1498: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   3500 21rA8s17           9968 	ld	hl,#_tripal + 5
   3503 4E                 9969 	ld	c,(hl)
   3504 11rA7s17           9970 	ld	de,#_tripal + 4
   3507 1A                 9971 	ld	a,(de)
   3508 47                 9972 	ld	b,a
   3509 21rA6s17           9973 	ld	hl,#_tripal + 3
   350C 5E                 9974 	ld	e,(hl)
   350D 79                 9975 	ld	a,c
   350E F5                 9976 	push	af
   350F 33                 9977 	inc	sp
   3510 C5                 9978 	push	bc
   3511 33                 9979 	inc	sp
   3512 53                 9980 	ld	d,e
   3513 1E 0E              9981 	ld	e,#0x0E
   3515 D5                 9982 	push	de
   3516 CDr00s00           9983 	call	_msx2_palette
   3519 F1                 9984 	pop	af
   351A F1                 9985 	pop	af
                           9986 ;demo.c:1499: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   351B 21rABs17           9987 	ld	hl,#_tripal + 8
   351E 4E                 9988 	ld	c,(hl)
   351F 11rAAs17           9989 	ld	de,#_tripal + 7
   3522 1A                 9990 	ld	a,(de)
   3523 47                 9991 	ld	b,a
   3524 21rA9s17           9992 	ld	hl,#_tripal + 6
   3527 5E                 9993 	ld	e,(hl)
   3528 79                 9994 	ld	a,c
   3529 F5                 9995 	push	af
   352A 33                 9996 	inc	sp
   352B C5                 9997 	push	bc
   352C 33                 9998 	inc	sp
   352D 53                 9999 	ld	d,e
   352E 1E 06             10000 	ld	e,#0x06
   3530 D5                10001 	push	de
   3531 CDr00s00          10002 	call	_msx2_palette
   3534 F1                10003 	pop	af
   3535 F1                10004 	pop	af
   3536                   10005 00103$:
                          10006 ;demo.c:1502: waitVB();
   3536 76                10007 		halt 
                          10008 ;demo.c:1503: cmd.source_y = 193;
   3537 21rB6s16          10009 	ld	hl, #_cmd + 2
   353A 36 C1             10010 	ld	(hl),#0xC1
   353C 23                10011 	inc	hl
   353D 36 00             10012 	ld	(hl),#0x00
                          10013 ;demo.c:1504: cmd.dest_y = y;
   353F 01rBAs16          10014 	ld	bc,#_cmd + 6
   3542 DD 5E FF          10015 	ld	e,-1 (ix)
   3545 16 00             10016 	ld	d,#0x00
   3547 69                10017 	ld	l,c
   3548 60                10018 	ld	h,b
   3549 73                10019 	ld	(hl),e
   354A 23                10020 	inc	hl
   354B 72                10021 	ld	(hl),d
                          10022 ;demo.c:1505: vdp_copier(&cmd);
   354C 21rB4s16          10023 	ld	hl,#_cmd
   354F E5                10024 	push	hl
   3550 CDr00s00          10025 	call	_vdp_copier
   3553 F1                10026 	pop	af
                          10027 ;demo.c:1486: for (y = 0; y < 212; y+=4) {
   3554 DD 34 FF          10028 	inc	-1 (ix)
   3557 DD 34 FF          10029 	inc	-1 (ix)
   355A DD 34 FF          10030 	inc	-1 (ix)
   355D DD 34 FF          10031 	inc	-1 (ix)
   3560 C3r37s34          10032 	jp	00116$
   3563                   10033 00119$:
                          10034 ;demo.c:1509: vdp_load_palette(bulbs_palette);
   3563 21rF0s15          10035 	ld	hl,#_bulbs_palette
   3566 E5                10036 	push	hl
   3567 CDr00s00          10037 	call	_vdp_load_palette
   356A F1                10038 	pop	af
                          10039 ;demo.c:1511: for (x = 0; x < 256; x+=1) {
   356B DD 36 FD 00       10040 	ld	-3 (ix),#0x00
   356F DD 36 FE 00       10041 	ld	-2 (ix),#0x00
   3573                   10042 00120$:
   3573 DD 7E FD          10043 	ld	a,-3 (ix)
   3576 D6 00             10044 	sub	a,#0x00
   3578 DD 7E FE          10045 	ld	a,-2 (ix)
   357B DE 01             10046 	sbc	a,#0x01
   357D F2rFCs35          10047 	jp	P,00123$
                          10048 ;demo.c:1513: cmd.data = 1+((pointframe>>2) & 0xe);
   3580 11rC0s16          10049 	ld	de,#_cmd + 12
   3583 21rB6s17          10050 	ld	hl,#_pointframe + 0
   3586 4E                10051 	ld	c,(hl)
   3587 21rB7s17          10052 	ld	hl,#_pointframe + 1
   358A 46                10053 	ld	b,(hl)
   358B CB 28             10054 	sra	b
   358D CB 19             10055 	rr	c
   358F CB 28             10056 	sra	b
   3591 CB 19             10057 	rr	c
   3593 79                10058 	ld	a,c
   3594 E6 0E             10059 	and	a,#0x0E
   3596 3C                10060 	inc	a
   3597 12                10061 	ld	(de),a
                          10062 ;demo.c:1514: cmd.dest_x = x;
   3598 21rB8s16          10063 	ld	hl, #_cmd + 4
   359B DD 7E FD          10064 	ld	a,-3 (ix)
   359E 77                10065 	ld	(hl),a
   359F 23                10066 	inc	hl
   35A0 DD 7E FE          10067 	ld	a,-2 (ix)
   35A3 77                10068 	ld	(hl),a
                          10069 ;demo.c:1515: cmd.dest_y = y;
   35A4 21rBAs16          10070 	ld	hl, #_cmd + 6
   35A7 36 1D             10071 	ld	(hl),#0x1D
   35A9 23                10072 	inc	hl
   35AA 36 00             10073 	ld	(hl),#0x00
                          10074 ;demo.c:1516: cmd.command = 0x50;
   35AC 3E 50             10075 	ld	a,#0x50
   35AE 32rC2s16          10076 	ld	(#_cmd + 14),a
                          10077 ;demo.c:1517: vdp_copier(&cmd);
   35B1 21rB4s16          10078 	ld	hl,#_cmd
   35B4 E5                10079 	push	hl
   35B5 CDr00s00          10080 	call	_vdp_copier
   35B8 F1                10081 	pop	af
                          10082 ;demo.c:1520: cmd.data = 1+((pointframe>>2) & 0xe);
   35B9 01rC0s16          10083 	ld	bc,#_cmd + 12
   35BC 21rB6s17          10084 	ld	hl,#_pointframe + 0
   35BF 5E                10085 	ld	e,(hl)
   35C0 21rB7s17          10086 	ld	hl,#_pointframe + 1
   35C3 56                10087 	ld	d,(hl)
   35C4 CB 2A             10088 	sra	d
   35C6 CB 1B             10089 	rr	e
   35C8 CB 2A             10090 	sra	d
   35CA CB 1B             10091 	rr	e
   35CC 7B                10092 	ld	a,e
   35CD E6 0E             10093 	and	a,#0x0E
   35CF 3C                10094 	inc	a
   35D0 02                10095 	ld	(bc),a
                          10096 ;demo.c:1521: cmd.dest_y = y;
   35D1 21rBAs16          10097 	ld	hl, #_cmd + 6
   35D4 36 A2             10098 	ld	(hl),#0xA2
   35D6 23                10099 	inc	hl
   35D7 36 00             10100 	ld	(hl),#0x00
                          10101 ;demo.c:1522: vdp_copier(&cmd);
   35D9 21rB4s16          10102 	ld	hl,#_cmd
   35DC E5                10103 	push	hl
   35DD CDr00s00          10104 	call	_vdp_copier
   35E0 F1                10105 	pop	af
                          10106 ;demo.c:1524: pointframe+=1;
   35E1 FD 21rB6s17       10107 	ld	iy,#_pointframe
   35E5 FD 34 00          10108 	inc	0 (iy)
   35E8 20 07             10109 	jr	NZ,00149$
   35EA FD 21rB6s17       10110 	ld	iy,#_pointframe
   35EE FD 34 01          10111 	inc	1 (iy)
   35F1                   10112 00149$:
                          10113 ;demo.c:1511: for (x = 0; x < 256; x+=1) {
   35F1 DD 34 FD          10114 	inc	-3 (ix)
   35F4 20 03             10115 	jr	NZ,00150$
   35F6 DD 34 FE          10116 	inc	-2 (ix)
   35F9                   10117 00150$:
   35F9 C3r73s35          10118 	jp	00120$
   35FC                   10119 00123$:
                          10120 ;demo.c:1527: initpoints = 1;
   35FC 21rB5s17          10121 	ld	hl,#_initpoints + 0
   35FF 36 01             10122 	ld	(hl), #0x01
                          10123 ;demo.c:1528: ltrpointer = 0;
   3601 21r48s17          10124 	ld	hl,#_ltrpointer + 0
   3604 36 00             10125 	ld	(hl), #0x00
   3606 21r49s17          10126 	ld	hl,#_ltrpointer + 1
   3609 36 00             10127 	ld	(hl), #0x00
   360B                   10128 00105$:
                          10129 ;demo.c:1531: cmd.argument = 0x0;
   360B 3E 00             10130 	ld	a,#0x00
   360D 32rC1s16          10131 	ld	(#_cmd + 13),a
                          10132 ;demo.c:1533: cmd.data = 1+((pointframe>>2) & 0xe);
   3610 01rC0s16          10133 	ld	bc,#_cmd + 12
   3613 21rB6s17          10134 	ld	hl,#_pointframe + 0
   3616 5E                10135 	ld	e,(hl)
   3617 21rB7s17          10136 	ld	hl,#_pointframe + 1
   361A 56                10137 	ld	d,(hl)
   361B CB 2A             10138 	sra	d
   361D CB 1B             10139 	rr	e
   361F CB 2A             10140 	sra	d
   3621 CB 1B             10141 	rr	e
   3623 7B                10142 	ld	a,e
   3624 E6 0E             10143 	and	a,#0x0E
   3626 3C                10144 	inc	a
   3627 02                10145 	ld	(bc),a
                          10146 ;demo.c:1535: for (x = 30; x < 162; x+=1) {
   3628 DD 36 FD 1E       10147 	ld	-3 (ix),#0x1E
   362C DD 36 FE 00       10148 	ld	-2 (ix),#0x00
   3630                   10149 00124$:
   3630 DD 7E FD          10150 	ld	a,-3 (ix)
   3633 D6 A2             10151 	sub	a,#0xA2
   3635 DD 7E FE          10152 	ld	a,-2 (ix)
   3638 DE 00             10153 	sbc	a,#0x00
   363A F2r83s36          10154 	jp	P,00127$
                          10155 ;demo.c:1536: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   363D 21rB6s17          10156 	ld	hl,#_pointframe
   3640 DD 7E FD          10157 	ld	a,-3 (ix)
   3643 86                10158 	add	a,(hl)
   3644 5F                10159 	ld	e,a
   3645 DD 7E FE          10160 	ld	a,-2 (ix)
   3648 23                10161 	inc	hl
   3649 8E                10162 	adc	a,(hl)
   364A 16 00             10163 	ld	d,#0x00
   364C 21r2Cs00          10164 	ld	hl,#_sintabx
   364F 19                10165 	add	hl,de
   3650 7E                10166 	ld	a,(hl)
   3651 CB 3F             10167 	srl	a
   3653 C6 40             10168 	add	a,#0x40
   3655 4F                10169 	ld	c,a
                          10170 ;demo.c:1537: cmd.dest_x = y;
   3656 11rB8s16          10171 	ld	de,#_cmd + 4
   3659 06 00             10172 	ld	b,#0x00
   365B 6B                10173 	ld	l,e
   365C 62                10174 	ld	h,d
   365D 71                10175 	ld	(hl),c
   365E 23                10176 	inc	hl
   365F 70                10177 	ld	(hl),b
                          10178 ;demo.c:1538: cmd.dest_y = x;
   3660 21rBAs16          10179 	ld	hl, #_cmd + 6
   3663 DD 7E FD          10180 	ld	a,-3 (ix)
   3666 77                10181 	ld	(hl),a
   3667 23                10182 	inc	hl
   3668 DD 7E FE          10183 	ld	a,-2 (ix)
   366B 77                10184 	ld	(hl),a
                          10185 ;demo.c:1539: cmd.command = 0x53;
   366C 3E 53             10186 	ld	a,#0x53
   366E 32rC2s16          10187 	ld	(#_cmd + 14),a
                          10188 ;demo.c:1540: vdp_copier(&cmd);
   3671 21rB4s16          10189 	ld	hl,#_cmd
   3674 E5                10190 	push	hl
   3675 CDr00s00          10191 	call	_vdp_copier
   3678 F1                10192 	pop	af
                          10193 ;demo.c:1535: for (x = 30; x < 162; x+=1) {
   3679 DD 34 FD          10194 	inc	-3 (ix)
   367C 20 03             10195 	jr	NZ,00152$
   367E DD 34 FE          10196 	inc	-2 (ix)
   3681                   10197 00152$:
   3681 18 AD             10198 	jr	00124$
   3683                   10199 00127$:
                          10200 ;demo.c:1542: pointframe+=2;
   3683 21rB6s17          10201 	ld	hl,#_pointframe
   3686 7E                10202 	ld	a,(hl)
   3687 C6 02             10203 	add	a,#0x02
   3689 23                10204 	inc	hl
   368A 2B                10205 	dec	hl
   368B C5                10206 	push	bc
   368C 4F                10207 	ld	c, a
   368D 23                10208 	inc	hl
   368E 7E                10209 	ld	a, (hl)
   368F 47                10210 	ld	b, a
   3690 79                10211 	ld	a, c
   3691 2B                10212 	dec	hl
   3692 77                10213 	ld	(hl), a
   3693 78                10214 	ld	a, b
   3694 C1                10215 	pop	bc
   3695 CE 00             10216 	adc	a,#0x00
   3697 23                10217 	inc	hl
   3698 77                10218 	ld	(hl),a
                          10219 ;demo.c:1544: if (greetindex == 0) {
   3699 3ArB8s17          10220 	ld	a,(#_greetindex+0)
   369C 21rB9s17          10221 	ld	hl,#_greetindex + 1
   369F B6                10222 	or	a,(hl)
   36A0 20 17             10223 	jr	NZ,00107$
                          10224 ;demo.c:1545: slowend = 27;
   36A2 21r4As17          10225 	ld	hl,#_slowend + 0
   36A5 36 1B             10226 	ld	(hl), #0x1B
   36A7 21r4Bs17          10227 	ld	hl,#_slowend + 1
   36AA 36 00             10228 	ld	(hl), #0x00
                          10229 ;demo.c:1546: drawstrslow("GREETINGS TO VARIOUS GROUPS",10,20);
   36AC 21 0A 14          10230 	ld	hl,#0x140A
   36AF E5                10231 	push	hl
   36B0 21r65s37          10232 	ld	hl,#__str_15
   36B3 E5                10233 	push	hl
   36B4 CDrC9s15          10234 	call	_drawstrslow
   36B7 F1                10235 	pop	af
   36B8 F1                10236 	pop	af
   36B9                   10237 00107$:
                          10238 ;demo.c:1548: if (greetindex == 1) {
   36B9 3ArB8s17          10239 	ld	a,(#_greetindex+0)
   36BC D6 01             10240 	sub	a,#0x01
   36BE 20 06             10241 	jr	NZ,00153$
   36C0 3ArB9s17          10242 	ld	a,(#_greetindex+1)
   36C3 B7                10243 	or	a,a
   36C4 28 02             10244 	jr	Z,00154$
   36C6                   10245 00153$:
   36C6 18 17             10246 	jr	00109$
   36C8                   10247 00154$:
                          10248 ;demo.c:1549: slowend = 33;
   36C8 21r4As17          10249 	ld	hl,#_slowend + 0
   36CB 36 21             10250 	ld	(hl), #0x21
   36CD 21r4Bs17          10251 	ld	hl,#_slowend + 1
   36D0 36 00             10252 	ld	(hl), #0x00
                          10253 ;demo.c:1550: drawstrslow("Trilobit  Prismbeings  Ivory Labs",10,164);
   36D2 21 0A A4          10254 	ld	hl,#0xA40A
   36D5 E5                10255 	push	hl
   36D6 21r81s37          10256 	ld	hl,#__str_16
   36D9 E5                10257 	push	hl
   36DA CDrC9s15          10258 	call	_drawstrslow
   36DD F1                10259 	pop	af
   36DE F1                10260 	pop	af
   36DF                   10261 00109$:
                          10262 ;demo.c:1552: if (greetindex == 2) {
   36DF 3ArB8s17          10263 	ld	a,(#_greetindex+0)
   36E2 D6 02             10264 	sub	a,#0x02
   36E4 20 06             10265 	jr	NZ,00155$
   36E6 3ArB9s17          10266 	ld	a,(#_greetindex+1)
   36E9 B7                10267 	or	a,a
   36EA 28 02             10268 	jr	Z,00156$
   36EC                   10269 00155$:
   36EC 18 17             10270 	jr	00111$
   36EE                   10271 00156$:
                          10272 ;demo.c:1553: slowend = 29;
   36EE 21r4As17          10273 	ld	hl,#_slowend + 0
   36F1 36 1D             10274 	ld	(hl), #0x1D
   36F3 21r4Bs17          10275 	ld	hl,#_slowend + 1
   36F6 36 00             10276 	ld	(hl), #0x00
                          10277 ;demo.c:1554: drawstrslow("PWP  Dekadence  Paraguay  ISO",18,174);
   36F8 21 12 AE          10278 	ld	hl,#0xAE12
   36FB E5                10279 	push	hl
   36FC 21rA3s37          10280 	ld	hl,#__str_17
   36FF E5                10281 	push	hl
   3700 CDrC9s15          10282 	call	_drawstrslow
   3703 F1                10283 	pop	af
   3704 F1                10284 	pop	af
   3705                   10285 00111$:
                          10286 ;demo.c:1556: if (greetindex == 3) {
   3705 3ArB8s17          10287 	ld	a,(#_greetindex+0)
   3708 D6 03             10288 	sub	a,#0x03
   370A 20 06             10289 	jr	NZ,00157$
   370C 3ArB9s17          10290 	ld	a,(#_greetindex+1)
   370F B7                10291 	or	a,a
   3710 28 02             10292 	jr	Z,00158$
   3712                   10293 00157$:
   3712 18 17             10294 	jr	00113$
   3714                   10295 00158$:
                          10296 ;demo.c:1557: slowend = 24;
   3714 21r4As17          10297 	ld	hl,#_slowend + 0
   3717 36 18             10298 	ld	(hl), #0x18
   3719 21r4Bs17          10299 	ld	hl,#_slowend + 1
   371C 36 00             10300 	ld	(hl), #0x00
                          10301 ;demo.c:1558: drawstrslow("Cartoon Horse Demo Force",20,184);
   371E 21 14 B8          10302 	ld	hl,#0xB814
   3721 E5                10303 	push	hl
   3722 21rC1s37          10304 	ld	hl,#__str_18
   3725 E5                10305 	push	hl
   3726 CDrC9s15          10306 	call	_drawstrslow
   3729 F1                10307 	pop	af
   372A F1                10308 	pop	af
   372B                   10309 00113$:
                          10310 ;demo.c:1560: if (ltrpointer >= slowend) { greetindex++; ltrpointer = 0; }
   372B 21r4As17          10311 	ld	hl,#_slowend
   372E 3Ar48s17          10312 	ld	a,(#_ltrpointer+0)
   3731 96                10313 	sub	a,(hl)
   3732 3Ar49s17          10314 	ld	a,(#_ltrpointer+1)
   3735 23                10315 	inc	hl
   3736 9E                10316 	sbc	a,(hl)
   3737 FAr54s37          10317 	jp	M,00115$
   373A FD 21rB8s17       10318 	ld	iy,#_greetindex
   373E FD 34 00          10319 	inc	0 (iy)
   3741 20 07             10320 	jr	NZ,00159$
   3743 FD 21rB8s17       10321 	ld	iy,#_greetindex
   3747 FD 34 01          10322 	inc	1 (iy)
   374A                   10323 00159$:
   374A 21r48s17          10324 	ld	hl,#_ltrpointer + 0
   374D 36 00             10325 	ld	(hl), #0x00
   374F 21r49s17          10326 	ld	hl,#_ltrpointer + 1
   3752 36 00             10327 	ld	(hl), #0x00
   3754                   10328 00115$:
                          10329 ;demo.c:1562: msx2_palette(4,0,0,0);
   3754 21 00 00          10330 	ld	hl,#0x0000
   3757 E5                10331 	push	hl
   3758 2E 04             10332 	ld	l, #0x04
   375A E5                10333 	push	hl
   375B CDr00s00          10334 	call	_msx2_palette
   375E F1                10335 	pop	af
   375F F1                10336 	pop	af
   3760 DD F9             10337 	ld	sp,ix
   3762 DD E1             10338 	pop	ix
   3764 C9                10339 	ret
   3765                   10340 _points_end::
   3765                   10341 __str_15:
   3765 47 52 45 45 54 49 10342 	.ascii "GREETINGS TO VARIOUS GROUPS"
        4E 47 53 20 54 4F
        20 56 41 52 49 4F
        55 53 20 47 52 4F
        55 50 53
   3780 00                10343 	.db 0x00
   3781                   10344 __str_16:
   3781 54 72 69 6C 6F 62 10345 	.ascii "Trilobit  Prismbeings  Ivory Labs"
        69 74 20 20 50 72
        69 73 6D 62 65 69
        6E 67 73 20 20 49
        76 6F 72 79 20 4C
        61 62 73
   37A2 00                10346 	.db 0x00
   37A3                   10347 __str_17:
   37A3 50 57 50 20 20 44 10348 	.ascii "PWP  Dekadence  Paraguay  ISO"
        65 6B 61 64 65 6E
        63 65 20 20 50 61
        72 61 67 75 61 79
        20 20 49 53 4F
   37C0 00                10349 	.db 0x00
   37C1                   10350 __str_18:
   37C1 43 61 72 74 6F 6F 10351 	.ascii "Cartoon Horse Demo Force"
        6E 20 48 6F 72 73
        65 20 44 65 6D 6F
        20 46 6F 72 63 65
   37D9 00                10352 	.db 0x00
                          10353 ;demo.c:1567: void bigtext() {
                          10354 ;	---------------------------------
                          10355 ; Function bigtext
                          10356 ; ---------------------------------
   37DA                   10357 _bigtext_start::
   37DA                   10358 _bigtext:
   37DA DD E5             10359 	push	ix
   37DC DD 21 00 00       10360 	ld	ix,#0
   37E0 DD 39             10361 	add	ix,sp
   37E2 F5                10362 	push	af
                          10363 ;demo.c:1569: if (bigtextp == 0) {
   37E3 3ArBAs17          10364 	ld	a,(#_bigtextp+0)
   37E6 FD 21rBAs17       10365 	ld	iy,#_bigtextp
   37EA FD B6 01          10366 	or	a,1 (iy)
   37ED C2rFAs38          10367 	jp	NZ,00102$
                          10368 ;demo.c:1570: cmd.size_x = 2;
   37F0 21rBCs16          10369 	ld	hl, #_cmd + 8
   37F3 36 02             10370 	ld	(hl),#0x02
   37F5 23                10371 	inc	hl
   37F6 36 00             10372 	ld	(hl),#0x00
                          10373 ;demo.c:1571: cmd.size_y = 212;
   37F8 21rBEs16          10374 	ld	hl, #_cmd + 10
   37FB 36 D4             10375 	ld	(hl),#0xD4
   37FD 23                10376 	inc	hl
   37FE 36 00             10377 	ld	(hl),#0x00
                          10378 ;demo.c:1572: cmd.data = 0;
                          10379 ;demo.c:1573: cmd.argument = 0x00; // from 70xY to left
   3800 3E 00             10380 	ld	a,#0x00
   3802 32rC0s16          10381 	ld	(#_cmd + 12),a
   3805 32rC1s16          10382 	ld	(#_cmd + 13),a
                          10383 ;demo.c:1574: cmd.command = 0xd0; // vram to vram, y only
   3808 01rC2s16          10384 	ld	bc,#_cmd + 14
   380B 3E D0             10385 	ld	a,#0xD0
   380D 02                10386 	ld	(bc),a
                          10387 ;demo.c:1575: cmd.source_x = 255;
   380E 21rB4s16          10388 	ld	hl,#_cmd
   3811 36 FF             10389 	ld	(hl),#0xFF
   3813 23                10390 	inc	hl
   3814 36 00             10391 	ld	(hl),#0x00
                          10392 ;demo.c:1576: cmd.source_y = 0;
   3816 21rB6s16          10393 	ld	hl, #_cmd + 2
   3819 36 00             10394 	ld	(hl),#0x00
   381B 23                10395 	inc	hl
   381C 36 00             10396 	ld	(hl),#0x00
                          10397 ;demo.c:1578: for (x = 0; x < 256; x+=4) {
   381E 01 00 00          10398 	ld	bc,#0x0000
   3821                   10399 00115$:
   3821 79                10400 	ld	a,c
   3822 D6 00             10401 	sub	a,#0x00
   3824 78                10402 	ld	a,b
   3825 DE 01             10403 	sbc	a,#0x01
   3827 F2r5Es38          10404 	jp	P,00118$
                          10405 ;demo.c:1579: waitVB();
   382A 76                10406 		halt 
                          10407 ;demo.c:1580: cmd.dest_y = 256;
   382B 11rBAs16          10408 	ld	de,#_cmd + 6
   382E EB                10409 	ex	de,hl
   382F 36 00             10410 	ld	(hl),#0x00
   3831 23                10411 	inc	hl
   3832 36 01             10412 	ld	(hl),#0x01
                          10413 ;demo.c:1581: cmd.dest_x = x;
   3834 11rB8s16          10414 	ld	de,#_cmd + 4
   3837 EB                10415 	ex	de,hl
   3838 71                10416 	ld	(hl),c
   3839 23                10417 	inc	hl
   383A 70                10418 	ld	(hl),b
                          10419 ;demo.c:1582: vdp_copier(&cmd);
   383B C5                10420 	push	bc
   383C 21rB4s16          10421 	ld	hl,#_cmd
   383F E5                10422 	push	hl
   3840 CDr00s00          10423 	call	_vdp_copier
   3843 F1                10424 	pop	af
   3844 C1                10425 	pop	bc
                          10426 ;demo.c:1583: cmd.dest_y = 0;
   3845 11rBAs16          10427 	ld	de,#_cmd + 6
   3848 EB                10428 	ex	de,hl
   3849 36 00             10429 	ld	(hl),#0x00
   384B 23                10430 	inc	hl
   384C 36 00             10431 	ld	(hl),#0x00
                          10432 ;demo.c:1584: vdp_copier(&cmd);
   384E C5                10433 	push	bc
   384F 21rB4s16          10434 	ld	hl,#_cmd
   3852 E5                10435 	push	hl
   3853 CDr00s00          10436 	call	_vdp_copier
   3856 F1                10437 	pop	af
   3857 C1                10438 	pop	bc
                          10439 ;demo.c:1578: for (x = 0; x < 256; x+=4) {
   3858 03                10440 	inc	bc
   3859 03                10441 	inc	bc
   385A 03                10442 	inc	bc
   385B 03                10443 	inc	bc
   385C 18 C3             10444 	jr	00115$
   385E                   10445 00118$:
                          10446 ;demo.c:1587: for (x = 254; x > 0; x-=4) {
   385E 01 FE 00          10447 	ld	bc,#0x00FE
   3861                   10448 00119$:
   3861 3E 00             10449 	ld	a,#0x00
   3863 91                10450 	sub	a,c
   3864 3E 00             10451 	ld	a,#0x00
   3866 98                10452 	sbc	a,b
   3867 F2rA2s38          10453 	jp	P,00122$
                          10454 ;demo.c:1588: waitVB();
   386A 76                10455 		halt 
                          10456 ;demo.c:1589: cmd.dest_y = 256;
   386B 11rBAs16          10457 	ld	de,#_cmd + 6
   386E EB                10458 	ex	de,hl
   386F 36 00             10459 	ld	(hl),#0x00
   3871 23                10460 	inc	hl
   3872 36 01             10461 	ld	(hl),#0x01
                          10462 ;demo.c:1590: cmd.dest_x = x;
   3874 11rB8s16          10463 	ld	de,#_cmd + 4
   3877 EB                10464 	ex	de,hl
   3878 71                10465 	ld	(hl),c
   3879 23                10466 	inc	hl
   387A 70                10467 	ld	(hl),b
                          10468 ;demo.c:1591: vdp_copier(&cmd);
   387B C5                10469 	push	bc
   387C 21rB4s16          10470 	ld	hl,#_cmd
   387F E5                10471 	push	hl
   3880 CDr00s00          10472 	call	_vdp_copier
   3883 F1                10473 	pop	af
   3884 C1                10474 	pop	bc
                          10475 ;demo.c:1592: cmd.dest_y = 0;
   3885 11rBAs16          10476 	ld	de,#_cmd + 6
   3888 EB                10477 	ex	de,hl
   3889 36 00             10478 	ld	(hl),#0x00
   388B 23                10479 	inc	hl
   388C 36 00             10480 	ld	(hl),#0x00
                          10481 ;demo.c:1593: vdp_copier(&cmd);
   388E C5                10482 	push	bc
   388F 21rB4s16          10483 	ld	hl,#_cmd
   3892 E5                10484 	push	hl
   3893 CDr00s00          10485 	call	_vdp_copier
   3896 F1                10486 	pop	af
   3897 C1                10487 	pop	bc
                          10488 ;demo.c:1587: for (x = 254; x > 0; x-=4) {
   3898 79                10489 	ld	a,c
   3899 C6 FC             10490 	add	a,#0xFC
   389B 4F                10491 	ld	c,a
   389C 78                10492 	ld	a,b
   389D CE FF             10493 	adc	a,#0xFF
   389F 47                10494 	ld	b,a
   38A0 18 BF             10495 	jr	00119$
   38A2                   10496 00122$:
                          10497 ;demo.c:1596: vdp_load_palette(twister_palette);
   38A2 21r30s16          10498 	ld	hl,#_twister_palette
   38A5 E5                10499 	push	hl
   38A6 CDr00s00          10500 	call	_vdp_load_palette
   38A9 F1                10501 	pop	af
                          10502 ;demo.c:1597: drawstr2x("DIGITAL",26,44);
   38AA 21 1A 2C          10503 	ld	hl,#0x2C1A
   38AD E5                10504 	push	hl
   38AE 21r0Cs3D          10505 	ld	hl,#__str_19
   38B1 E5                10506 	push	hl
   38B2 CDr67s16          10507 	call	_drawstr2x
   38B5 F1                10508 	pop	af
   38B6 F1                10509 	pop	af
                          10510 ;demo.c:1598: drawstr2x("SOUNDS",27,84);
   38B7 21 1B 54          10511 	ld	hl,#0x541B
   38BA E5                10512 	push	hl
   38BB 21r14s3D          10513 	ld	hl,#__str_20
   38BE E5                10514 	push	hl
   38BF CDr67s16          10515 	call	_drawstr2x
   38C2 F1                10516 	pop	af
   38C3 F1                10517 	pop	af
                          10518 ;demo.c:1599: drawstr2x("SYSTEM",25,124);
   38C4 21 19 7C          10519 	ld	hl,#0x7C19
   38C7 E5                10520 	push	hl
   38C8 21r1Bs3D          10521 	ld	hl,#__str_21
   38CB E5                10522 	push	hl
   38CC CDr67s16          10523 	call	_drawstr2x
   38CF F1                10524 	pop	af
   38D0 F1                10525 	pop	af
                          10526 ;demo.c:1600: bigtextp++;
   38D1 FD 21rBAs17       10527 	ld	iy,#_bigtextp
   38D5 FD 34 00          10528 	inc	0 (iy)
   38D8 20 07             10529 	jr	NZ,00167$
   38DA FD 21rBAs17       10530 	ld	iy,#_bigtextp
   38DE FD 34 01          10531 	inc	1 (iy)
   38E1                   10532 00167$:
                          10533 ;demo.c:1601: tri_inited = 2;
   38E1 21r9Bs17          10534 	ld	hl,#_tri_inited + 0
   38E4 36 02             10535 	ld	(hl), #0x02
                          10536 ;demo.c:1602: ff = 0;
   38E6 21r4Cs17          10537 	ld	hl,#_ff + 0
   38E9 36 00             10538 	ld	(hl), #0x00
   38EB 21r4Ds17          10539 	ld	hl,#_ff + 1
   38EE 36 00             10540 	ld	(hl), #0x00
                          10541 ;demo.c:1603: ltrpointer = 0;
   38F0 21r48s17          10542 	ld	hl,#_ltrpointer + 0
   38F3 36 00             10543 	ld	(hl), #0x00
   38F5 21r49s17          10544 	ld	hl,#_ltrpointer + 1
   38F8 36 00             10545 	ld	(hl), #0x00
   38FA                   10546 00102$:
                          10547 ;demo.c:1606: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   38FA 21r4Cs17          10548 	ld	hl,#_ff + 0
   38FD 4E                10549 	ld	c,(hl)
   38FE 21r4Ds17          10550 	ld	hl,#_ff + 1
   3901 46                10551 	ld	b,(hl)
   3902 CB 28             10552 	sra	b
   3904 CB 19             10553 	rr	c
   3906 CB 28             10554 	sra	b
   3908 CB 19             10555 	rr	c
   390A 21r4Cs17          10556 	ld	hl,#_ff + 0
   390D 5E                10557 	ld	e,(hl)
   390E 21r4Ds17          10558 	ld	hl,#_ff + 1
   3911 56                10559 	ld	d,(hl)
   3912 CB 2A             10560 	sra	d
   3914 CB 1B             10561 	rr	e
   3916 CB 2A             10562 	sra	d
   3918 CB 1B             10563 	rr	e
   391A CB 2A             10564 	sra	d
   391C CB 1B             10565 	rr	e
   391E 43                10566 	ld	b,e
   391F 79                10567 	ld	a,c
   3920 F5                10568 	push	af
   3921 33                10569 	inc	sp
   3922 C5                10570 	push	bc
   3923 33                10571 	inc	sp
   3924 41                10572 	ld	b,c
   3925 0E 04             10573 	ld	c,#0x04
   3927 C5                10574 	push	bc
   3928 CDr00s00          10575 	call	_msx2_palette
   392B F1                10576 	pop	af
   392C F1                10577 	pop	af
                          10578 ;demo.c:1607: ff+=2;
   392D 21r4Cs17          10579 	ld	hl,#_ff
   3930 7E                10580 	ld	a,(hl)
   3931 C6 02             10581 	add	a,#0x02
   3933 23                10582 	inc	hl
   3934 2B                10583 	dec	hl
   3935 C5                10584 	push	bc
   3936 4F                10585 	ld	c, a
   3937 23                10586 	inc	hl
   3938 7E                10587 	ld	a, (hl)
   3939 47                10588 	ld	b, a
   393A 79                10589 	ld	a, c
   393B 2B                10590 	dec	hl
   393C 77                10591 	ld	(hl), a
   393D 78                10592 	ld	a, b
   393E C1                10593 	pop	bc
   393F CE 00             10594 	adc	a,#0x00
   3941 23                10595 	inc	hl
   3942 77                10596 	ld	(hl),a
                          10597 ;demo.c:1609: if (ff == 600) {
   3943 3Ar4Cs17          10598 	ld	a,(#_ff+0)
   3946 D6 58             10599 	sub	a,#0x58
   3948 20 07             10600 	jr	NZ,00170$
   394A 3Ar4Ds17          10601 	ld	a,(#_ff+1)
   394D D6 02             10602 	sub	a,#0x02
   394F 28 03             10603 	jr	Z,00171$
   3951                   10604 00170$:
   3951 C3rE3s3A          10605 	jp	00104$
   3954                   10606 00171$:
                          10607 ;demo.c:1610: cmd.size_x = 2;
   3954 21rBCs16          10608 	ld	hl, #_cmd + 8
   3957 36 02             10609 	ld	(hl),#0x02
   3959 23                10610 	inc	hl
   395A 36 00             10611 	ld	(hl),#0x00
                          10612 ;demo.c:1611: cmd.size_y = 212;
   395C 21rBEs16          10613 	ld	hl, #_cmd + 10
   395F 36 D4             10614 	ld	(hl),#0xD4
   3961 23                10615 	inc	hl
   3962 36 00             10616 	ld	(hl),#0x00
                          10617 ;demo.c:1612: cmd.data = 0;
                          10618 ;demo.c:1613: cmd.argument = 0x00; // from 70xY to left
   3964 3E 00             10619 	ld	a,#0x00
   3966 32rC0s16          10620 	ld	(#_cmd + 12),a
   3969 32rC1s16          10621 	ld	(#_cmd + 13),a
                          10622 ;demo.c:1614: cmd.command = 0xd0; // vram to vram, y only
   396C 01rC2s16          10623 	ld	bc,#_cmd + 14
   396F 3E D0             10624 	ld	a,#0xD0
   3971 02                10625 	ld	(bc),a
                          10626 ;demo.c:1615: cmd.source_x = 255;
   3972 21rB4s16          10627 	ld	hl,#_cmd
   3975 36 FF             10628 	ld	(hl),#0xFF
   3977 23                10629 	inc	hl
   3978 36 00             10630 	ld	(hl),#0x00
                          10631 ;demo.c:1616: cmd.source_y = 0;
   397A 21rB6s16          10632 	ld	hl, #_cmd + 2
   397D 36 00             10633 	ld	(hl),#0x00
   397F 23                10634 	inc	hl
   3980 36 00             10635 	ld	(hl),#0x00
                          10636 ;demo.c:1618: for (x = 254; x > 0; x-=4) {
   3982 DD 36 FE FE       10637 	ld	-2 (ix),#0xFE
   3986 DD 36 FF 00       10638 	ld	-1 (ix),#0x00
   398A                   10639 00123$:
   398A 3E 00             10640 	ld	a,#0x00
   398C DD 96 FE          10641 	sub	a,-2 (ix)
   398F 3E 00             10642 	ld	a,#0x00
   3991 DD 9E FF          10643 	sbc	a,-1 (ix)
   3994 F2r1Fs3A          10644 	jp	P,00126$
                          10645 ;demo.c:1619: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3997 21r4Cs17          10646 	ld	hl,#_ff + 0
   399A 5E                10647 	ld	e,(hl)
   399B 21r4Ds17          10648 	ld	hl,#_ff + 1
   399E 56                10649 	ld	d,(hl)
   399F CB 2A             10650 	sra	d
   39A1 CB 1B             10651 	rr	e
   39A3 CB 2A             10652 	sra	d
   39A5 CB 1B             10653 	rr	e
   39A7 21r4Cs17          10654 	ld	hl,#_ff + 0
   39AA 56                10655 	ld	d,(hl)
   39AB 21r4Ds17          10656 	ld	hl,#_ff + 1
   39AE 4E                10657 	ld	c,(hl)
   39AF CB 29             10658 	sra	c
   39B1 CB 1A             10659 	rr	d
   39B3 CB 29             10660 	sra	c
   39B5 CB 1A             10661 	rr	d
   39B7 CB 29             10662 	sra	c
   39B9 CB 1A             10663 	rr	d
   39BB 7B                10664 	ld	a,e
   39BC F5                10665 	push	af
   39BD 33                10666 	inc	sp
   39BE D5                10667 	push	de
   39BF 33                10668 	inc	sp
   39C0 53                10669 	ld	d,e
   39C1 1E 04             10670 	ld	e,#0x04
   39C3 D5                10671 	push	de
   39C4 CDr00s00          10672 	call	_msx2_palette
   39C7 F1                10673 	pop	af
   39C8 F1                10674 	pop	af
                          10675 ;demo.c:1620: ff+=2;
   39C9 21r4Cs17          10676 	ld	hl,#_ff
   39CC 7E                10677 	ld	a,(hl)
   39CD C6 02             10678 	add	a,#0x02
   39CF 23                10679 	inc	hl
   39D0 2B                10680 	dec	hl
   39D1 C5                10681 	push	bc
   39D2 4F                10682 	ld	c, a
   39D3 23                10683 	inc	hl
   39D4 7E                10684 	ld	a, (hl)
   39D5 47                10685 	ld	b, a
   39D6 79                10686 	ld	a, c
   39D7 2B                10687 	dec	hl
   39D8 77                10688 	ld	(hl), a
   39D9 78                10689 	ld	a, b
   39DA C1                10690 	pop	bc
   39DB CE 00             10691 	adc	a,#0x00
   39DD 23                10692 	inc	hl
   39DE 77                10693 	ld	(hl),a
                          10694 ;demo.c:1621: waitVB();
   39DF 76                10695 		halt 
                          10696 ;demo.c:1622: cmd.dest_y = 256;
   39E0 21rBAs16          10697 	ld	hl, #_cmd + 6
   39E3 36 00             10698 	ld	(hl),#0x00
   39E5 23                10699 	inc	hl
   39E6 36 01             10700 	ld	(hl),#0x01
                          10701 ;demo.c:1623: cmd.dest_x = x;
   39E8 21rB8s16          10702 	ld	hl, #_cmd + 4
   39EB DD 7E FE          10703 	ld	a,-2 (ix)
   39EE 77                10704 	ld	(hl),a
   39EF 23                10705 	inc	hl
   39F0 DD 7E FF          10706 	ld	a,-1 (ix)
   39F3 77                10707 	ld	(hl),a
                          10708 ;demo.c:1624: vdp_copier(&cmd);
   39F4 21rB4s16          10709 	ld	hl,#_cmd
   39F7 E5                10710 	push	hl
   39F8 CDr00s00          10711 	call	_vdp_copier
   39FB F1                10712 	pop	af
                          10713 ;demo.c:1625: cmd.dest_y = 0;
   39FC 21rBAs16          10714 	ld	hl, #_cmd + 6
   39FF 36 00             10715 	ld	(hl),#0x00
   3A01 23                10716 	inc	hl
   3A02 36 00             10717 	ld	(hl),#0x00
                          10718 ;demo.c:1626: vdp_copier(&cmd);
   3A04 21rB4s16          10719 	ld	hl,#_cmd
   3A07 E5                10720 	push	hl
   3A08 CDr00s00          10721 	call	_vdp_copier
   3A0B F1                10722 	pop	af
                          10723 ;demo.c:1618: for (x = 254; x > 0; x-=4) {
   3A0C DD 7E FE          10724 	ld	a,-2 (ix)
   3A0F C6 FC             10725 	add	a,#0xFC
   3A11 DD 77 FE          10726 	ld	-2 (ix),a
   3A14 DD 7E FF          10727 	ld	a,-1 (ix)
   3A17 CE FF             10728 	adc	a,#0xFF
   3A19 DD 77 FF          10729 	ld	-1 (ix),a
   3A1C C3r8As39          10730 	jp	00123$
   3A1F                   10731 00126$:
                          10732 ;demo.c:1630: for (x = 0; x < 256; x+=4) {
   3A1F DD 36 FE 00       10733 	ld	-2 (ix),#0x00
   3A23 DD 36 FF 00       10734 	ld	-1 (ix),#0x00
   3A27                   10735 00127$:
   3A27 DD 7E FE          10736 	ld	a,-2 (ix)
   3A2A D6 00             10737 	sub	a,#0x00
   3A2C DD 7E FF          10738 	ld	a,-1 (ix)
   3A2F DE 01             10739 	sbc	a,#0x01
   3A31 F2rBCs3A          10740 	jp	P,00130$
                          10741 ;demo.c:1631: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3A34 21r4Cs17          10742 	ld	hl,#_ff + 0
   3A37 5E                10743 	ld	e,(hl)
   3A38 21r4Ds17          10744 	ld	hl,#_ff + 1
   3A3B 56                10745 	ld	d,(hl)
   3A3C CB 2A             10746 	sra	d
   3A3E CB 1B             10747 	rr	e
   3A40 CB 2A             10748 	sra	d
   3A42 CB 1B             10749 	rr	e
   3A44 21r4Cs17          10750 	ld	hl,#_ff + 0
   3A47 56                10751 	ld	d,(hl)
   3A48 21r4Ds17          10752 	ld	hl,#_ff + 1
   3A4B 4E                10753 	ld	c,(hl)
   3A4C CB 29             10754 	sra	c
   3A4E CB 1A             10755 	rr	d
   3A50 CB 29             10756 	sra	c
   3A52 CB 1A             10757 	rr	d
   3A54 CB 29             10758 	sra	c
   3A56 CB 1A             10759 	rr	d
   3A58 7B                10760 	ld	a,e
   3A59 F5                10761 	push	af
   3A5A 33                10762 	inc	sp
   3A5B D5                10763 	push	de
   3A5C 33                10764 	inc	sp
   3A5D 53                10765 	ld	d,e
   3A5E 1E 04             10766 	ld	e,#0x04
   3A60 D5                10767 	push	de
   3A61 CDr00s00          10768 	call	_msx2_palette
   3A64 F1                10769 	pop	af
   3A65 F1                10770 	pop	af
                          10771 ;demo.c:1632: ff+=2;
   3A66 21r4Cs17          10772 	ld	hl,#_ff
   3A69 7E                10773 	ld	a,(hl)
   3A6A C6 02             10774 	add	a,#0x02
   3A6C 23                10775 	inc	hl
   3A6D 2B                10776 	dec	hl
   3A6E C5                10777 	push	bc
   3A6F 4F                10778 	ld	c, a
   3A70 23                10779 	inc	hl
   3A71 7E                10780 	ld	a, (hl)
   3A72 47                10781 	ld	b, a
   3A73 79                10782 	ld	a, c
   3A74 2B                10783 	dec	hl
   3A75 77                10784 	ld	(hl), a
   3A76 78                10785 	ld	a, b
   3A77 C1                10786 	pop	bc
   3A78 CE 00             10787 	adc	a,#0x00
   3A7A 23                10788 	inc	hl
   3A7B 77                10789 	ld	(hl),a
                          10790 ;demo.c:1633: waitVB();
   3A7C 76                10791 		halt 
                          10792 ;demo.c:1634: cmd.dest_y = 256;
   3A7D 21rBAs16          10793 	ld	hl, #_cmd + 6
   3A80 36 00             10794 	ld	(hl),#0x00
   3A82 23                10795 	inc	hl
   3A83 36 01             10796 	ld	(hl),#0x01
                          10797 ;demo.c:1635: cmd.dest_x = x;
   3A85 21rB8s16          10798 	ld	hl, #_cmd + 4
   3A88 DD 7E FE          10799 	ld	a,-2 (ix)
   3A8B 77                10800 	ld	(hl),a
   3A8C 23                10801 	inc	hl
   3A8D DD 7E FF          10802 	ld	a,-1 (ix)
   3A90 77                10803 	ld	(hl),a
                          10804 ;demo.c:1636: vdp_copier(&cmd);
   3A91 21rB4s16          10805 	ld	hl,#_cmd
   3A94 E5                10806 	push	hl
   3A95 CDr00s00          10807 	call	_vdp_copier
   3A98 F1                10808 	pop	af
                          10809 ;demo.c:1637: cmd.dest_y = 0;
   3A99 21rBAs16          10810 	ld	hl, #_cmd + 6
   3A9C 36 00             10811 	ld	(hl),#0x00
   3A9E 23                10812 	inc	hl
   3A9F 36 00             10813 	ld	(hl),#0x00
                          10814 ;demo.c:1638: vdp_copier(&cmd);
   3AA1 21rB4s16          10815 	ld	hl,#_cmd
   3AA4 E5                10816 	push	hl
   3AA5 CDr00s00          10817 	call	_vdp_copier
   3AA8 F1                10818 	pop	af
                          10819 ;demo.c:1630: for (x = 0; x < 256; x+=4) {
   3AA9 DD 7E FE          10820 	ld	a,-2 (ix)
   3AAC C6 04             10821 	add	a,#0x04
   3AAE DD 77 FE          10822 	ld	-2 (ix),a
   3AB1 DD 7E FF          10823 	ld	a,-1 (ix)
   3AB4 CE 00             10824 	adc	a,#0x00
   3AB6 DD 77 FF          10825 	ld	-1 (ix),a
   3AB9 C3r27s3A          10826 	jp	00127$
   3ABC                   10827 00130$:
                          10828 ;demo.c:1641: drawstr2x("COMMAND",4,44);
   3ABC 21 04 2C          10829 	ld	hl,#0x2C04
   3ABF E5                10830 	push	hl
   3AC0 21r22s3D          10831 	ld	hl,#__str_22
   3AC3 E5                10832 	push	hl
   3AC4 CDr67s16          10833 	call	_drawstr2x
   3AC7 F1                10834 	pop	af
   3AC8 F1                10835 	pop	af
                          10836 ;demo.c:1642: drawstr2x("   THE  ",32,84);
   3AC9 21 20 54          10837 	ld	hl,#0x5420
   3ACC E5                10838 	push	hl
   3ACD 21r2As3D          10839 	ld	hl,#__str_23
   3AD0 E5                10840 	push	hl
   3AD1 CDr67s16          10841 	call	_drawstr2x
   3AD4 F1                10842 	pop	af
   3AD5 F1                10843 	pop	af
                          10844 ;demo.c:1643: drawstr2x("  BASS ",35,124);
   3AD6 21 23 7C          10845 	ld	hl,#0x7C23
   3AD9 E5                10846 	push	hl
   3ADA 21r33s3D          10847 	ld	hl,#__str_24
   3ADD E5                10848 	push	hl
   3ADE CDr67s16          10849 	call	_drawstr2x
   3AE1 F1                10850 	pop	af
   3AE2 F1                10851 	pop	af
   3AE3                   10852 00104$:
                          10853 ;demo.c:1646: if (ff == 1200) {
   3AE3 3Ar4Cs17          10854 	ld	a,(#_ff+0)
   3AE6 D6 B0             10855 	sub	a,#0xB0
   3AE8 20 07             10856 	jr	NZ,00176$
   3AEA 3Ar4Ds17          10857 	ld	a,(#_ff+1)
   3AED D6 04             10858 	sub	a,#0x04
   3AEF 28 03             10859 	jr	Z,00177$
   3AF1                   10860 00176$:
   3AF1 C3r83s3C          10861 	jp	00106$
   3AF4                   10862 00177$:
                          10863 ;demo.c:1647: cmd.size_x = 3;
   3AF4 21rBCs16          10864 	ld	hl, #_cmd + 8
   3AF7 36 03             10865 	ld	(hl),#0x03
   3AF9 23                10866 	inc	hl
   3AFA 36 00             10867 	ld	(hl),#0x00
                          10868 ;demo.c:1648: cmd.size_y = 212;
   3AFC 21rBEs16          10869 	ld	hl, #_cmd + 10
   3AFF 36 D4             10870 	ld	(hl),#0xD4
   3B01 23                10871 	inc	hl
   3B02 36 00             10872 	ld	(hl),#0x00
                          10873 ;demo.c:1649: cmd.data = 0;
                          10874 ;demo.c:1650: cmd.argument = 0x00; // from 70xY to left
   3B04 3E 00             10875 	ld	a,#0x00
   3B06 32rC0s16          10876 	ld	(#_cmd + 12),a
   3B09 32rC1s16          10877 	ld	(#_cmd + 13),a
                          10878 ;demo.c:1651: cmd.command = 0xd0; // vram to vram, y only
   3B0C 01rC2s16          10879 	ld	bc,#_cmd + 14
   3B0F 3E D0             10880 	ld	a,#0xD0
   3B11 02                10881 	ld	(bc),a
                          10882 ;demo.c:1652: cmd.source_x = 255;
   3B12 21rB4s16          10883 	ld	hl,#_cmd
   3B15 36 FF             10884 	ld	(hl),#0xFF
   3B17 23                10885 	inc	hl
   3B18 36 00             10886 	ld	(hl),#0x00
                          10887 ;demo.c:1653: cmd.source_y = 0;
   3B1A 21rB6s16          10888 	ld	hl, #_cmd + 2
   3B1D 36 00             10889 	ld	(hl),#0x00
   3B1F 23                10890 	inc	hl
   3B20 36 00             10891 	ld	(hl),#0x00
                          10892 ;demo.c:1655: for (x = 254; x > 0; x-=4) {
   3B22 DD 36 FE FE       10893 	ld	-2 (ix),#0xFE
   3B26 DD 36 FF 00       10894 	ld	-1 (ix),#0x00
   3B2A                   10895 00131$:
   3B2A 3E 00             10896 	ld	a,#0x00
   3B2C DD 96 FE          10897 	sub	a,-2 (ix)
   3B2F 3E 00             10898 	ld	a,#0x00
   3B31 DD 9E FF          10899 	sbc	a,-1 (ix)
   3B34 F2rBFs3B          10900 	jp	P,00134$
                          10901 ;demo.c:1656: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3B37 21r4Cs17          10902 	ld	hl,#_ff + 0
   3B3A 5E                10903 	ld	e,(hl)
   3B3B 21r4Ds17          10904 	ld	hl,#_ff + 1
   3B3E 56                10905 	ld	d,(hl)
   3B3F CB 2A             10906 	sra	d
   3B41 CB 1B             10907 	rr	e
   3B43 CB 2A             10908 	sra	d
   3B45 CB 1B             10909 	rr	e
   3B47 21r4Cs17          10910 	ld	hl,#_ff + 0
   3B4A 56                10911 	ld	d,(hl)
   3B4B 21r4Ds17          10912 	ld	hl,#_ff + 1
   3B4E 4E                10913 	ld	c,(hl)
   3B4F CB 29             10914 	sra	c
   3B51 CB 1A             10915 	rr	d
   3B53 CB 29             10916 	sra	c
   3B55 CB 1A             10917 	rr	d
   3B57 CB 29             10918 	sra	c
   3B59 CB 1A             10919 	rr	d
   3B5B 7B                10920 	ld	a,e
   3B5C F5                10921 	push	af
   3B5D 33                10922 	inc	sp
   3B5E D5                10923 	push	de
   3B5F 33                10924 	inc	sp
   3B60 53                10925 	ld	d,e
   3B61 1E 04             10926 	ld	e,#0x04
   3B63 D5                10927 	push	de
   3B64 CDr00s00          10928 	call	_msx2_palette
   3B67 F1                10929 	pop	af
   3B68 F1                10930 	pop	af
                          10931 ;demo.c:1657: ff+=2;
   3B69 21r4Cs17          10932 	ld	hl,#_ff
   3B6C 7E                10933 	ld	a,(hl)
   3B6D C6 02             10934 	add	a,#0x02
   3B6F 23                10935 	inc	hl
   3B70 2B                10936 	dec	hl
   3B71 C5                10937 	push	bc
   3B72 4F                10938 	ld	c, a
   3B73 23                10939 	inc	hl
   3B74 7E                10940 	ld	a, (hl)
   3B75 47                10941 	ld	b, a
   3B76 79                10942 	ld	a, c
   3B77 2B                10943 	dec	hl
   3B78 77                10944 	ld	(hl), a
   3B79 78                10945 	ld	a, b
   3B7A C1                10946 	pop	bc
   3B7B CE 00             10947 	adc	a,#0x00
   3B7D 23                10948 	inc	hl
   3B7E 77                10949 	ld	(hl),a
                          10950 ;demo.c:1658: waitVB();
   3B7F 76                10951 		halt 
                          10952 ;demo.c:1659: cmd.dest_y = 256;
   3B80 21rBAs16          10953 	ld	hl, #_cmd + 6
   3B83 36 00             10954 	ld	(hl),#0x00
   3B85 23                10955 	inc	hl
   3B86 36 01             10956 	ld	(hl),#0x01
                          10957 ;demo.c:1660: cmd.dest_x = x;
   3B88 21rB8s16          10958 	ld	hl, #_cmd + 4
   3B8B DD 7E FE          10959 	ld	a,-2 (ix)
   3B8E 77                10960 	ld	(hl),a
   3B8F 23                10961 	inc	hl
   3B90 DD 7E FF          10962 	ld	a,-1 (ix)
   3B93 77                10963 	ld	(hl),a
                          10964 ;demo.c:1661: vdp_copier(&cmd);
   3B94 21rB4s16          10965 	ld	hl,#_cmd
   3B97 E5                10966 	push	hl
   3B98 CDr00s00          10967 	call	_vdp_copier
   3B9B F1                10968 	pop	af
                          10969 ;demo.c:1662: cmd.dest_y = 0;
   3B9C 21rBAs16          10970 	ld	hl, #_cmd + 6
   3B9F 36 00             10971 	ld	(hl),#0x00
   3BA1 23                10972 	inc	hl
   3BA2 36 00             10973 	ld	(hl),#0x00
                          10974 ;demo.c:1663: vdp_copier(&cmd);
   3BA4 21rB4s16          10975 	ld	hl,#_cmd
   3BA7 E5                10976 	push	hl
   3BA8 CDr00s00          10977 	call	_vdp_copier
   3BAB F1                10978 	pop	af
                          10979 ;demo.c:1655: for (x = 254; x > 0; x-=4) {
   3BAC DD 7E FE          10980 	ld	a,-2 (ix)
   3BAF C6 FC             10981 	add	a,#0xFC
   3BB1 DD 77 FE          10982 	ld	-2 (ix),a
   3BB4 DD 7E FF          10983 	ld	a,-1 (ix)
   3BB7 CE FF             10984 	adc	a,#0xFF
   3BB9 DD 77 FF          10985 	ld	-1 (ix),a
   3BBC C3r2As3B          10986 	jp	00131$
   3BBF                   10987 00134$:
                          10988 ;demo.c:1667: for (x = 0; x < 256; x+=4) {
   3BBF DD 36 FE 00       10989 	ld	-2 (ix),#0x00
   3BC3 DD 36 FF 00       10990 	ld	-1 (ix),#0x00
   3BC7                   10991 00135$:
   3BC7 DD 7E FE          10992 	ld	a,-2 (ix)
   3BCA D6 00             10993 	sub	a,#0x00
   3BCC DD 7E FF          10994 	ld	a,-1 (ix)
   3BCF DE 01             10995 	sbc	a,#0x01
   3BD1 F2r5Cs3C          10996 	jp	P,00138$
                          10997 ;demo.c:1668: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3BD4 21r4Cs17          10998 	ld	hl,#_ff + 0
   3BD7 5E                10999 	ld	e,(hl)
   3BD8 21r4Ds17          11000 	ld	hl,#_ff + 1
   3BDB 56                11001 	ld	d,(hl)
   3BDC CB 2A             11002 	sra	d
   3BDE CB 1B             11003 	rr	e
   3BE0 CB 2A             11004 	sra	d
   3BE2 CB 1B             11005 	rr	e
   3BE4 21r4Cs17          11006 	ld	hl,#_ff + 0
   3BE7 56                11007 	ld	d,(hl)
   3BE8 21r4Ds17          11008 	ld	hl,#_ff + 1
   3BEB 4E                11009 	ld	c,(hl)
   3BEC CB 29             11010 	sra	c
   3BEE CB 1A             11011 	rr	d
   3BF0 CB 29             11012 	sra	c
   3BF2 CB 1A             11013 	rr	d
   3BF4 CB 29             11014 	sra	c
   3BF6 CB 1A             11015 	rr	d
   3BF8 7B                11016 	ld	a,e
   3BF9 F5                11017 	push	af
   3BFA 33                11018 	inc	sp
   3BFB D5                11019 	push	de
   3BFC 33                11020 	inc	sp
   3BFD 53                11021 	ld	d,e
   3BFE 1E 04             11022 	ld	e,#0x04
   3C00 D5                11023 	push	de
   3C01 CDr00s00          11024 	call	_msx2_palette
   3C04 F1                11025 	pop	af
   3C05 F1                11026 	pop	af
                          11027 ;demo.c:1669: ff+=2;
   3C06 21r4Cs17          11028 	ld	hl,#_ff
   3C09 7E                11029 	ld	a,(hl)
   3C0A C6 02             11030 	add	a,#0x02
   3C0C 23                11031 	inc	hl
   3C0D 2B                11032 	dec	hl
   3C0E C5                11033 	push	bc
   3C0F 4F                11034 	ld	c, a
   3C10 23                11035 	inc	hl
   3C11 7E                11036 	ld	a, (hl)
   3C12 47                11037 	ld	b, a
   3C13 79                11038 	ld	a, c
   3C14 2B                11039 	dec	hl
   3C15 77                11040 	ld	(hl), a
   3C16 78                11041 	ld	a, b
   3C17 C1                11042 	pop	bc
   3C18 CE 00             11043 	adc	a,#0x00
   3C1A 23                11044 	inc	hl
   3C1B 77                11045 	ld	(hl),a
                          11046 ;demo.c:1670: waitVB();
   3C1C 76                11047 		halt 
                          11048 ;demo.c:1671: cmd.dest_y = 256;
   3C1D 21rBAs16          11049 	ld	hl, #_cmd + 6
   3C20 36 00             11050 	ld	(hl),#0x00
   3C22 23                11051 	inc	hl
   3C23 36 01             11052 	ld	(hl),#0x01
                          11053 ;demo.c:1672: cmd.dest_x = x;
   3C25 21rB8s16          11054 	ld	hl, #_cmd + 4
   3C28 DD 7E FE          11055 	ld	a,-2 (ix)
   3C2B 77                11056 	ld	(hl),a
   3C2C 23                11057 	inc	hl
   3C2D DD 7E FF          11058 	ld	a,-1 (ix)
   3C30 77                11059 	ld	(hl),a
                          11060 ;demo.c:1673: vdp_copier(&cmd);
   3C31 21rB4s16          11061 	ld	hl,#_cmd
   3C34 E5                11062 	push	hl
   3C35 CDr00s00          11063 	call	_vdp_copier
   3C38 F1                11064 	pop	af
                          11065 ;demo.c:1674: cmd.dest_y = 0;
   3C39 21rBAs16          11066 	ld	hl, #_cmd + 6
   3C3C 36 00             11067 	ld	(hl),#0x00
   3C3E 23                11068 	inc	hl
   3C3F 36 00             11069 	ld	(hl),#0x00
                          11070 ;demo.c:1675: vdp_copier(&cmd);
   3C41 21rB4s16          11071 	ld	hl,#_cmd
   3C44 E5                11072 	push	hl
   3C45 CDr00s00          11073 	call	_vdp_copier
   3C48 F1                11074 	pop	af
                          11075 ;demo.c:1667: for (x = 0; x < 256; x+=4) {
   3C49 DD 7E FE          11076 	ld	a,-2 (ix)
   3C4C C6 04             11077 	add	a,#0x04
   3C4E DD 77 FE          11078 	ld	-2 (ix),a
   3C51 DD 7E FF          11079 	ld	a,-1 (ix)
   3C54 CE 00             11080 	adc	a,#0x00
   3C56 DD 77 FF          11081 	ld	-1 (ix),a
   3C59 C3rC7s3B          11082 	jp	00135$
   3C5C                   11083 00138$:
                          11084 ;demo.c:1678: drawstr2x("REVISION",10,44);
   3C5C 21 0A 2C          11085 	ld	hl,#0x2C0A
   3C5F E5                11086 	push	hl
   3C60 21r3Bs3D          11087 	ld	hl,#__str_25
   3C63 E5                11088 	push	hl
   3C64 CDr67s16          11089 	call	_drawstr2x
   3C67 F1                11090 	pop	af
   3C68 F1                11091 	pop	af
                          11092 ;demo.c:1679: drawstr2x("   IS OUR",0,84);
   3C69 21 00 54          11093 	ld	hl,#0x5400
   3C6C E5                11094 	push	hl
   3C6D 21r44s3D          11095 	ld	hl,#__str_26
   3C70 E5                11096 	push	hl
   3C71 CDr67s16          11097 	call	_drawstr2x
   3C74 F1                11098 	pop	af
   3C75 F1                11099 	pop	af
                          11100 ;demo.c:1680: drawstr2x("  PARTY",12,124);
   3C76 21 0C 7C          11101 	ld	hl,#0x7C0C
   3C79 E5                11102 	push	hl
   3C7A 21r4Es3D          11103 	ld	hl,#__str_27
   3C7D E5                11104 	push	hl
   3C7E CDr67s16          11105 	call	_drawstr2x
   3C81 F1                11106 	pop	af
   3C82 F1                11107 	pop	af
   3C83                   11108 00106$:
                          11109 ;demo.c:1683: if (ff >= 1600 && ff < 1700) {
   3C83 3Ar4Cs17          11110 	ld	a,(#_ff+0)
   3C86 D6 40             11111 	sub	a,#0x40
   3C88 3Ar4Ds17          11112 	ld	a,(#_ff+1)
   3C8B DE 06             11113 	sbc	a,#0x06
   3C8D FArB4s3C          11114 	jp	M,00108$
   3C90 3Ar4Cs17          11115 	ld	a,(#_ff+0)
   3C93 D6 A4             11116 	sub	a,#0xA4
   3C95 3Ar4Ds17          11117 	ld	a,(#_ff+1)
   3C98 DE 06             11118 	sbc	a,#0x06
   3C9A F2rB4s3C          11119 	jp	P,00108$
                          11120 ;demo.c:1684: slowend = 37;
   3C9D 21r4As17          11121 	ld	hl,#_slowend + 0
   3CA0 36 25             11122 	ld	(hl), #0x25
   3CA2 21r4Bs17          11123 	ld	hl,#_slowend + 1
   3CA5 36 00             11124 	ld	(hl), #0x00
                          11125 ;demo.c:1685: drawstrslow("Give a big hand to all the organizers",28,164+6);
   3CA7 21 1C AA          11126 	ld	hl,#0xAA1C
   3CAA E5                11127 	push	hl
   3CAB 21r56s3D          11128 	ld	hl,#__str_28
   3CAE E5                11129 	push	hl
   3CAF CDrC9s15          11130 	call	_drawstrslow
   3CB2 F1                11131 	pop	af
   3CB3 F1                11132 	pop	af
   3CB4                   11133 00108$:
                          11134 ;demo.c:1688: if (ff == 1700) {
   3CB4 3Ar4Cs17          11135 	ld	a,(#_ff+0)
   3CB7 D6 A4             11136 	sub	a,#0xA4
   3CB9 20 07             11137 	jr	NZ,00182$
   3CBB 3Ar4Ds17          11138 	ld	a,(#_ff+1)
   3CBE D6 06             11139 	sub	a,#0x06
   3CC0 28 02             11140 	jr	Z,00183$
   3CC2                   11141 00182$:
   3CC2 18 0A             11142 	jr	00111$
   3CC4                   11143 00183$:
                          11144 ;demo.c:1689: ltrpointer = 0;
   3CC4 21r48s17          11145 	ld	hl,#_ltrpointer + 0
   3CC7 36 00             11146 	ld	(hl), #0x00
   3CC9 21r49s17          11147 	ld	hl,#_ltrpointer + 1
   3CCC 36 00             11148 	ld	(hl), #0x00
   3CCE                   11149 00111$:
                          11150 ;demo.c:1692: if (ff > 1700 && ff < 1800) {
   3CCE 3E A4             11151 	ld	a,#0xA4
   3CD0 FD 21r4Cs17       11152 	ld	iy,#_ff
   3CD4 FD 96 00          11153 	sub	a,0 (iy)
   3CD7 3E 06             11154 	ld	a,#0x06
   3CD9 FD 21r4Cs17       11155 	ld	iy,#_ff
   3CDD FD 9E 01          11156 	sbc	a,1 (iy)
   3CE0 F2r07s3D          11157 	jp	P,00139$
   3CE3 3Ar4Cs17          11158 	ld	a,(#_ff+0)
   3CE6 D6 08             11159 	sub	a,#0x08
   3CE8 3Ar4Ds17          11160 	ld	a,(#_ff+1)
   3CEB DE 07             11161 	sbc	a,#0x07
   3CED F2r07s3D          11162 	jp	P,00139$
                          11163 ;demo.c:1693: slowend = 21;
   3CF0 21r4As17          11164 	ld	hl,#_slowend + 0
   3CF3 36 15             11165 	ld	(hl), #0x15
   3CF5 21r4Bs17          11166 	ld	hl,#_slowend + 1
   3CF8 36 00             11167 	ld	(hl), #0x00
                          11168 ;demo.c:1694: drawstrslow("of this amazing party",64,164+16);
   3CFA 21 40 B4          11169 	ld	hl,#0xB440
   3CFD E5                11170 	push	hl
   3CFE 21r7Cs3D          11171 	ld	hl,#__str_29
   3D01 E5                11172 	push	hl
   3D02 CDrC9s15          11173 	call	_drawstrslow
   3D05 F1                11174 	pop	af
   3D06 F1                11175 	pop	af
   3D07                   11176 00139$:
   3D07 DD F9             11177 	ld	sp,ix
   3D09 DD E1             11178 	pop	ix
   3D0B C9                11179 	ret
   3D0C                   11180 _bigtext_end::
   3D0C                   11181 __str_19:
   3D0C 44 49 47 49 54 41 11182 	.ascii "DIGITAL"
        4C
   3D13 00                11183 	.db 0x00
   3D14                   11184 __str_20:
   3D14 53 4F 55 4E 44 53 11185 	.ascii "SOUNDS"
   3D1A 00                11186 	.db 0x00
   3D1B                   11187 __str_21:
   3D1B 53 59 53 54 45 4D 11188 	.ascii "SYSTEM"
   3D21 00                11189 	.db 0x00
   3D22                   11190 __str_22:
   3D22 43 4F 4D 4D 41 4E 11191 	.ascii "COMMAND"
        44
   3D29 00                11192 	.db 0x00
   3D2A                   11193 __str_23:
   3D2A 20 20 20 54 48 45 11194 	.ascii "   THE  "
        20 20
   3D32 00                11195 	.db 0x00
   3D33                   11196 __str_24:
   3D33 20 20 42 41 53 53 11197 	.ascii "  BASS "
        20
   3D3A 00                11198 	.db 0x00
   3D3B                   11199 __str_25:
   3D3B 52 45 56 49 53 49 11200 	.ascii "REVISION"
        4F 4E
   3D43 00                11201 	.db 0x00
   3D44                   11202 __str_26:
   3D44 20 20 20 49 53 20 11203 	.ascii "   IS OUR"
        4F 55 52
   3D4D 00                11204 	.db 0x00
   3D4E                   11205 __str_27:
   3D4E 20 20 50 41 52 54 11206 	.ascii "  PARTY"
        59
   3D55 00                11207 	.db 0x00
   3D56                   11208 __str_28:
   3D56 47 69 76 65 20 61 11209 	.ascii "Give a big hand to all the organizers"
        20 62 69 67 20 68
        61 6E 64 20 74 6F
        20 61 6C 6C 20 74
        68 65 20 6F 72 67
        61 6E 69 7A 65 72
        73
   3D7B 00                11210 	.db 0x00
   3D7C                   11211 __str_29:
   3D7C 6F 66 20 74 68 69 11212 	.ascii "of this amazing party"
        73 20 61 6D 61 7A
        69 6E 67 20 70 61
        72 74 79
   3D91 00                11213 	.db 0x00
                          11214 ;demo.c:1700: void waiter() {
                          11215 ;	---------------------------------
                          11216 ; Function waiter
                          11217 ; ---------------------------------
   3D92                   11218 _waiter_start::
   3D92                   11219 _waiter:
                          11220 ;demo.c:1702: }
   3D92 C9                11221 	ret
   3D93                   11222 _waiter_end::
                          11223 ;demo.c:1707: void credits() {
                          11224 ;	---------------------------------
                          11225 ; Function credits
                          11226 ; ---------------------------------
   3D93                   11227 _credits_start::
   3D93                   11228 _credits:
                          11229 ;demo.c:1709: if (initcredits == 0) {
   3D93 3ArBCs17          11230 	ld	a,(#_initcredits+0)
   3D96 21rBDs17          11231 	ld	hl,#_initcredits + 1
   3D99 B6                11232 	or	a,(hl)
   3D9A C2r89s3F          11233 	jp	NZ,00102$
                          11234 ;demo.c:1710: scratch_clear();
   3D9D CDr90s09          11235 	call	_scratch_clear
                          11236 ;demo.c:1711: vdp_load_palette(scratch);
   3DA0 21r50s15          11237 	ld	hl,#_scratch
   3DA3 E5                11238 	push	hl
   3DA4 CDr00s00          11239 	call	_vdp_load_palette
   3DA7 F1                11240 	pop	af
                          11241 ;demo.c:1713: uninstall_isr();
   3DA8 CDr00s00          11242 	call	_uninstall_isr
                          11243 ;demo.c:1714: PLY_Stop();
   3DAB CDr00s00          11244 	call	_PLY_Stop
                          11245 ;demo.c:1715: PLY_SendRegisters();
   3DAE CDr00s00          11246 	call	_PLY_SendRegisters
                          11247 ;demo.c:1717: initcredits = 1;
   3DB1 21rBCs17          11248 	ld	hl,#_initcredits + 0
   3DB4 36 01             11249 	ld	(hl), #0x01
   3DB6 21rBDs17          11250 	ld	hl,#_initcredits + 1
   3DB9 36 00             11251 	ld	(hl), #0x00
                          11252 ;demo.c:1719: pck_load("CREDIT2 PCK",4724,0x0000,VRAM_0,0);
   3DBB 21 00 00          11253 	ld	hl,#0x0000
   3DBE E5                11254 	push	hl
   3DBF 2E 01             11255 	ld	l, #0x01
   3DC1 E5                11256 	push	hl
   3DC2 2E 00             11257 	ld	l, #0x00
   3DC4 E5                11258 	push	hl
   3DC5 21 74 12          11259 	ld	hl,#0x1274
   3DC8 E5                11260 	push	hl
   3DC9 21rE0s3F          11261 	ld	hl,#__str_30
   3DCC E5                11262 	push	hl
   3DCD CDr99s0B          11263 	call	_pck_load
   3DD0 FD 21 0A 00       11264 	ld	iy,#0x000A
   3DD4 FD 39             11265 	add	iy,sp
   3DD6 FD F9             11266 	ld	sp,iy
                          11267 ;demo.c:1721: cmd.size_x = 512;
   3DD8 21rBCs16          11268 	ld	hl, #_cmd + 8
   3DDB 36 00             11269 	ld	(hl),#0x00
   3DDD 23                11270 	inc	hl
   3DDE 36 02             11271 	ld	(hl),#0x02
                          11272 ;demo.c:1722: cmd.size_y = 212;
   3DE0 21rBEs16          11273 	ld	hl, #_cmd + 10
   3DE3 36 D4             11274 	ld	(hl),#0xD4
   3DE5 23                11275 	inc	hl
   3DE6 36 00             11276 	ld	(hl),#0x00
                          11277 ;demo.c:1723: cmd.data = 0;
                          11278 ;demo.c:1724: cmd.argument = 0x00;
   3DE8 3E 00             11279 	ld	a,#0x00
   3DEA 32rC0s16          11280 	ld	(#_cmd + 12),a
   3DED 32rC1s16          11281 	ld	(#_cmd + 13),a
                          11282 ;demo.c:1725: cmd.command = 0xd0; 
   3DF0 01rC2s16          11283 	ld	bc,#_cmd + 14
   3DF3 3E D0             11284 	ld	a,#0xD0
   3DF5 02                11285 	ld	(bc),a
                          11286 ;demo.c:1726: cmd.source_x = 0;
   3DF6 21rB4s16          11287 	ld	hl,#_cmd
   3DF9 36 00             11288 	ld	(hl),#0x00
   3DFB 23                11289 	inc	hl
   3DFC 36 00             11290 	ld	(hl),#0x00
                          11291 ;demo.c:1727: cmd.source_y = 0;
   3DFE 21rB6s16          11292 	ld	hl, #_cmd + 2
   3E01 36 00             11293 	ld	(hl),#0x00
   3E03 23                11294 	inc	hl
   3E04 36 00             11295 	ld	(hl),#0x00
                          11296 ;demo.c:1728: cmd.dest_x = 0;
   3E06 21rB8s16          11297 	ld	hl, #_cmd + 4
   3E09 36 00             11298 	ld	(hl),#0x00
   3E0B 23                11299 	inc	hl
   3E0C 36 00             11300 	ld	(hl),#0x00
                          11301 ;demo.c:1729: cmd.dest_y = 256;
   3E0E 21rBAs16          11302 	ld	hl, #_cmd + 6
   3E11 36 00             11303 	ld	(hl),#0x00
   3E13 23                11304 	inc	hl
   3E14 36 01             11305 	ld	(hl),#0x01
                          11306 ;demo.c:1730: vdp_copier(&cmd);
   3E16 21rB4s16          11307 	ld	hl,#_cmd
   3E19 E5                11308 	push	hl
   3E1A CDr00s00          11309 	call	_vdp_copier
   3E1D F1                11310 	pop	af
                          11311 ;demo.c:1732: pck_load("CREDIT3 PCK",3723,0x0000,VRAM_0,0);
   3E1E 21 00 00          11312 	ld	hl,#0x0000
   3E21 E5                11313 	push	hl
   3E22 2E 01             11314 	ld	l, #0x01
   3E24 E5                11315 	push	hl
   3E25 2E 00             11316 	ld	l, #0x00
   3E27 E5                11317 	push	hl
   3E28 21 8B 0E          11318 	ld	hl,#0x0E8B
   3E2B E5                11319 	push	hl
   3E2C 21rECs3F          11320 	ld	hl,#__str_31
   3E2F E5                11321 	push	hl
   3E30 CDr99s0B          11322 	call	_pck_load
   3E33 FD 21 0A 00       11323 	ld	iy,#0x000A
   3E37 FD 39             11324 	add	iy,sp
   3E39 FD F9             11325 	ld	sp,iy
                          11326 ;demo.c:1734: cmd.size_x = 512;
   3E3B 21rBCs16          11327 	ld	hl, #_cmd + 8
   3E3E 36 00             11328 	ld	(hl),#0x00
   3E40 23                11329 	inc	hl
   3E41 36 02             11330 	ld	(hl),#0x02
                          11331 ;demo.c:1735: cmd.size_y = 212;
   3E43 21rBEs16          11332 	ld	hl, #_cmd + 10
   3E46 36 D4             11333 	ld	(hl),#0xD4
   3E48 23                11334 	inc	hl
   3E49 36 00             11335 	ld	(hl),#0x00
                          11336 ;demo.c:1736: cmd.data = 0;
                          11337 ;demo.c:1737: cmd.argument = 0x00;
   3E4B 3E 00             11338 	ld	a,#0x00
   3E4D 32rC0s16          11339 	ld	(#_cmd + 12),a
   3E50 32rC1s16          11340 	ld	(#_cmd + 13),a
                          11341 ;demo.c:1738: cmd.command = 0xd0; 
   3E53 01rC2s16          11342 	ld	bc,#_cmd + 14
   3E56 3E D0             11343 	ld	a,#0xD0
   3E58 02                11344 	ld	(bc),a
                          11345 ;demo.c:1739: cmd.source_x = 0;
   3E59 21rB4s16          11346 	ld	hl,#_cmd
   3E5C 36 00             11347 	ld	(hl),#0x00
   3E5E 23                11348 	inc	hl
   3E5F 36 00             11349 	ld	(hl),#0x00
                          11350 ;demo.c:1740: cmd.source_y = 0;
   3E61 21rB6s16          11351 	ld	hl, #_cmd + 2
   3E64 36 00             11352 	ld	(hl),#0x00
   3E66 23                11353 	inc	hl
   3E67 36 00             11354 	ld	(hl),#0x00
                          11355 ;demo.c:1741: cmd.dest_x = 0;
   3E69 21rB8s16          11356 	ld	hl, #_cmd + 4
   3E6C 36 00             11357 	ld	(hl),#0x00
   3E6E 23                11358 	inc	hl
   3E6F 36 00             11359 	ld	(hl),#0x00
                          11360 ;demo.c:1742: cmd.dest_y = 512;
   3E71 21rBAs16          11361 	ld	hl, #_cmd + 6
   3E74 36 00             11362 	ld	(hl),#0x00
   3E76 23                11363 	inc	hl
   3E77 36 02             11364 	ld	(hl),#0x02
                          11365 ;demo.c:1743: vdp_copier(&cmd);
   3E79 21rB4s16          11366 	ld	hl,#_cmd
   3E7C E5                11367 	push	hl
   3E7D CDr00s00          11368 	call	_vdp_copier
   3E80 F1                11369 	pop	af
                          11370 ;demo.c:1745: pck_load("CREDIT1 PCK",3323,0x0000,VRAM_0,0);
   3E81 21 00 00          11371 	ld	hl,#0x0000
   3E84 E5                11372 	push	hl
   3E85 2E 01             11373 	ld	l, #0x01
   3E87 E5                11374 	push	hl
   3E88 2E 00             11375 	ld	l, #0x00
   3E8A E5                11376 	push	hl
   3E8B 21 FB 0C          11377 	ld	hl,#0x0CFB
   3E8E E5                11378 	push	hl
   3E8F 21rF8s3F          11379 	ld	hl,#__str_32
   3E92 E5                11380 	push	hl
   3E93 CDr99s0B          11381 	call	_pck_load
   3E96 FD 21 0A 00       11382 	ld	iy,#0x000A
   3E9A FD 39             11383 	add	iy,sp
   3E9C FD F9             11384 	ld	sp,iy
                          11385 ;demo.c:1747: install_isr(my_isr);
   3E9E 21rECs07          11386 	ld	hl,#_my_isr
   3EA1 E5                11387 	push	hl
   3EA2 CDr00s00          11388 	call	_install_isr
   3EA5 F1                11389 	pop	af
                          11390 ;demo.c:1748: vdp_register(0,8); // mode 512x212
   3EA6 21 00 08          11391 	ld	hl,#0x0800
   3EA9 E5                11392 	push	hl
   3EAA CDr00s00          11393 	call	_vdp_register
   3EAD F1                11394 	pop	af
                          11395 ;demo.c:1749: vdp_register(8,2); // mode 512x212
   3EAE 21 08 02          11396 	ld	hl,#0x0208
   3EB1 E5                11397 	push	hl
   3EB2 CDr00s00          11398 	call	_vdp_register
   3EB5 F1                11399 	pop	af
                          11400 ;demo.c:1750: vdp_register(9,130); // mode 512x212
   3EB6 21 09 82          11401 	ld	hl,#0x8209
   3EB9 E5                11402 	push	hl
   3EBA CDr00s00          11403 	call	_vdp_register
   3EBD F1                11404 	pop	af
                          11405 ;demo.c:1752: msx2_palette(0,0,0,0);
   3EBE 21 00 00          11406 	ld	hl,#0x0000
   3EC1 E5                11407 	push	hl
   3EC2 2E 00             11408 	ld	l, #0x00
   3EC4 E5                11409 	push	hl
   3EC5 CDr00s00          11410 	call	_msx2_palette
   3EC8 F1                11411 	pop	af
   3EC9 F1                11412 	pop	af
                          11413 ;demo.c:1753: msx2_palette(1,2,2,2);
   3ECA 21 02 02          11414 	ld	hl,#0x0202
   3ECD E5                11415 	push	hl
   3ECE 2E 01             11416 	ld	l, #0x01
   3ED0 E5                11417 	push	hl
   3ED1 CDr00s00          11418 	call	_msx2_palette
   3ED4 F1                11419 	pop	af
   3ED5 F1                11420 	pop	af
                          11421 ;demo.c:1754: msx2_palette(2,5,5,5);
   3ED6 21 05 05          11422 	ld	hl,#0x0505
   3ED9 E5                11423 	push	hl
   3EDA 2E 02             11424 	ld	l, #0x02
   3EDC E5                11425 	push	hl
   3EDD CDr00s00          11426 	call	_msx2_palette
   3EE0 F1                11427 	pop	af
   3EE1 F1                11428 	pop	af
                          11429 ;demo.c:1755: msx2_palette(3,7,7,7);
   3EE2 21 07 07          11430 	ld	hl,#0x0707
   3EE5 E5                11431 	push	hl
   3EE6 2E 03             11432 	ld	l, #0x03
   3EE8 E5                11433 	push	hl
   3EE9 CDr00s00          11434 	call	_msx2_palette
   3EEC F1                11435 	pop	af
   3EED F1                11436 	pop	af
                          11437 ;demo.c:1756: msx2_palette(4,2,2,2);
   3EEE 21 02 02          11438 	ld	hl,#0x0202
   3EF1 E5                11439 	push	hl
   3EF2 2E 04             11440 	ld	l, #0x04
   3EF4 E5                11441 	push	hl
   3EF5 CDr00s00          11442 	call	_msx2_palette
   3EF8 F1                11443 	pop	af
   3EF9 F1                11444 	pop	af
                          11445 ;demo.c:1757: msx2_palette(5,5,5,5);
   3EFA 21 05 05          11446 	ld	hl,#0x0505
   3EFD E5                11447 	push	hl
   3EFE 2E 05             11448 	ld	l, #0x05
   3F00 E5                11449 	push	hl
   3F01 CDr00s00          11450 	call	_msx2_palette
   3F04 F1                11451 	pop	af
   3F05 F1                11452 	pop	af
                          11453 ;demo.c:1758: msx2_palette(6,7,7,7);
   3F06 21 07 07          11454 	ld	hl,#0x0707
   3F09 E5                11455 	push	hl
   3F0A 2E 06             11456 	ld	l, #0x06
   3F0C E5                11457 	push	hl
   3F0D CDr00s00          11458 	call	_msx2_palette
   3F10 F1                11459 	pop	af
   3F11 F1                11460 	pop	af
                          11461 ;demo.c:1759: msx2_palette(7,2,2,2);
   3F12 21 02 02          11462 	ld	hl,#0x0202
   3F15 E5                11463 	push	hl
   3F16 2E 07             11464 	ld	l, #0x07
   3F18 E5                11465 	push	hl
   3F19 CDr00s00          11466 	call	_msx2_palette
   3F1C F1                11467 	pop	af
   3F1D F1                11468 	pop	af
                          11469 ;demo.c:1760: msx2_palette(8,5,5,5);
   3F1E 21 05 05          11470 	ld	hl,#0x0505
   3F21 E5                11471 	push	hl
   3F22 2E 08             11472 	ld	l, #0x08
   3F24 E5                11473 	push	hl
   3F25 CDr00s00          11474 	call	_msx2_palette
   3F28 F1                11475 	pop	af
   3F29 F1                11476 	pop	af
                          11477 ;demo.c:1761: msx2_palette(9,7,7,7);
   3F2A 21 07 07          11478 	ld	hl,#0x0707
   3F2D E5                11479 	push	hl
   3F2E 2E 09             11480 	ld	l, #0x09
   3F30 E5                11481 	push	hl
   3F31 CDr00s00          11482 	call	_msx2_palette
   3F34 F1                11483 	pop	af
   3F35 F1                11484 	pop	af
                          11485 ;demo.c:1762: msx2_palette(10,2,2,2);
   3F36 21 02 02          11486 	ld	hl,#0x0202
   3F39 E5                11487 	push	hl
   3F3A 2E 0A             11488 	ld	l, #0x0A
   3F3C E5                11489 	push	hl
   3F3D CDr00s00          11490 	call	_msx2_palette
   3F40 F1                11491 	pop	af
   3F41 F1                11492 	pop	af
                          11493 ;demo.c:1763: msx2_palette(11,5,5,5);
   3F42 21 05 05          11494 	ld	hl,#0x0505
   3F45 E5                11495 	push	hl
   3F46 2E 0B             11496 	ld	l, #0x0B
   3F48 E5                11497 	push	hl
   3F49 CDr00s00          11498 	call	_msx2_palette
   3F4C F1                11499 	pop	af
   3F4D F1                11500 	pop	af
                          11501 ;demo.c:1764: msx2_palette(12,7,7,7);
   3F4E 21 07 07          11502 	ld	hl,#0x0707
   3F51 E5                11503 	push	hl
   3F52 2E 0C             11504 	ld	l, #0x0C
   3F54 E5                11505 	push	hl
   3F55 CDr00s00          11506 	call	_msx2_palette
   3F58 F1                11507 	pop	af
   3F59 F1                11508 	pop	af
                          11509 ;demo.c:1765: msx2_palette(13,2,2,2);
   3F5A 21 02 02          11510 	ld	hl,#0x0202
   3F5D E5                11511 	push	hl
   3F5E 2E 0D             11512 	ld	l, #0x0D
   3F60 E5                11513 	push	hl
   3F61 CDr00s00          11514 	call	_msx2_palette
   3F64 F1                11515 	pop	af
   3F65 F1                11516 	pop	af
                          11517 ;demo.c:1766: msx2_palette(14,5,5,5);
   3F66 21 05 05          11518 	ld	hl,#0x0505
   3F69 E5                11519 	push	hl
   3F6A 2E 0E             11520 	ld	l, #0x0E
   3F6C E5                11521 	push	hl
   3F6D CDr00s00          11522 	call	_msx2_palette
   3F70 F1                11523 	pop	af
   3F71 F1                11524 	pop	af
                          11525 ;demo.c:1767: msx2_palette(15,7,7,7);
   3F72 21 07 07          11526 	ld	hl,#0x0707
   3F75 E5                11527 	push	hl
   3F76 2E 0F             11528 	ld	l, #0x0F
   3F78 E5                11529 	push	hl
   3F79 CDr00s00          11530 	call	_msx2_palette
   3F7C F1                11531 	pop	af
   3F7D F1                11532 	pop	af
                          11533 ;demo.c:1768: vdp_register(2, 0x1F);
   3F7E 21 02 1F          11534 	ld	hl,#0x1F02
   3F81 E5                11535 	push	hl
   3F82 CDr00s00          11536 	call	_vdp_register
   3F85 F1                11537 	pop	af
                          11538 ;demo.c:1769: scratch_clear();
   3F86 CDr90s09          11539 	call	_scratch_clear
   3F89                   11540 00102$:
                          11541 ;demo.c:1772: credittimer++;
   3F89 FD 21rBEs17       11542 	ld	iy,#_credittimer
   3F8D FD 34 00          11543 	inc	0 (iy)
   3F90 20 07             11544 	jr	NZ,00115$
   3F92 FD 21rBEs17       11545 	ld	iy,#_credittimer
   3F96 FD 34 01          11546 	inc	1 (iy)
   3F99                   11547 00115$:
                          11548 ;demo.c:1773: if (credittimer == 300) {
   3F99 3ArBEs17          11549 	ld	a,(#_credittimer+0)
   3F9C D6 2C             11550 	sub	a,#0x2C
   3F9E 20 07             11551 	jr	NZ,00116$
   3FA0 3ArBFs17          11552 	ld	a,(#_credittimer+1)
   3FA3 D6 01             11553 	sub	a,#0x01
   3FA5 28 02             11554 	jr	Z,00117$
   3FA7                   11555 00116$:
   3FA7 18 08             11556 	jr	00104$
   3FA9                   11557 00117$:
                          11558 ;demo.c:1774: vdp_register(2, 0x3F);
   3FA9 21 02 3F          11559 	ld	hl,#0x3F02
   3FAC E5                11560 	push	hl
   3FAD CDr00s00          11561 	call	_vdp_register
   3FB0 F1                11562 	pop	af
   3FB1                   11563 00104$:
                          11564 ;demo.c:1776: if (credittimer == 600) {
   3FB1 3ArBEs17          11565 	ld	a,(#_credittimer+0)
   3FB4 D6 58             11566 	sub	a,#0x58
   3FB6 20 07             11567 	jr	NZ,00118$
   3FB8 3ArBFs17          11568 	ld	a,(#_credittimer+1)
   3FBB D6 02             11569 	sub	a,#0x02
   3FBD 28 02             11570 	jr	Z,00119$
   3FBF                   11571 00118$:
   3FBF 18 08             11572 	jr	00106$
   3FC1                   11573 00119$:
                          11574 ;demo.c:1777: vdp_register(2, 0x5F);
   3FC1 21 02 5F          11575 	ld	hl,#0x5F02
   3FC4 E5                11576 	push	hl
   3FC5 CDr00s00          11577 	call	_vdp_register
   3FC8 F1                11578 	pop	af
   3FC9                   11579 00106$:
                          11580 ;demo.c:1780: if (credittimer == 900) {
   3FC9 3ArBEs17          11581 	ld	a,(#_credittimer+0)
   3FCC D6 84             11582 	sub	a,#0x84
   3FCE C0                11583 	ret	NZ
   3FCF 3ArBFs17          11584 	ld	a,(#_credittimer+1)
   3FD2 D6 03             11585 	sub	a,#0x03
   3FD4 28 01             11586 	jr	Z,00121$
   3FD6 C9                11587 	ret
   3FD7                   11588 00121$:
                          11589 ;demo.c:1781: vdp_load_palette(scratch);
   3FD7 21r50s15          11590 	ld	hl,#_scratch
   3FDA E5                11591 	push	hl
   3FDB CDr00s00          11592 	call	_vdp_load_palette
   3FDE F1                11593 	pop	af
   3FDF C9                11594 	ret
   3FE0                   11595 _credits_end::
   3FE0                   11596 __str_30:
   3FE0 43 52 45 44 49 54 11597 	.ascii "CREDIT2 PCK"
        32 20 50 43 4B
   3FEB 00                11598 	.db 0x00
   3FEC                   11599 __str_31:
   3FEC 43 52 45 44 49 54 11600 	.ascii "CREDIT3 PCK"
        33 20 50 43 4B
   3FF7 00                11601 	.db 0x00
   3FF8                   11602 __str_32:
   3FF8 43 52 45 44 49 54 11603 	.ascii "CREDIT1 PCK"
        31 20 50 43 4B
   4003 00                11604 	.db 0x00
                          11605 ;demo.c:1791: void do_quit() {
                          11606 ;	---------------------------------
                          11607 ; Function do_quit
                          11608 ; ---------------------------------
   4004                   11609 _do_quit_start::
   4004                   11610 _do_quit:
                          11611 ;demo.c:1792: waitVB();
   4004 76                11612 		halt 
                          11613 ;demo.c:1793: uninstall_isr();
   4005 CDr00s00          11614 	call	_uninstall_isr
                          11615 ;demo.c:1794: PLY_Stop();
   4008 CDr00s00          11616 	call	_PLY_Stop
                          11617 ;demo.c:1795: PLY_SendRegisters();
   400B CDr00s00          11618 	call	_PLY_SendRegisters
                          11619 ;demo.c:1797: vdp_load_palette(bulbs_palette);
   400E 21rF0s15          11620 	ld	hl,#_bulbs_palette
   4011 E5                11621 	push	hl
   4012 CDr00s00          11622 	call	_vdp_load_palette
   4015 F1                11623 	pop	af
                          11624 ;demo.c:1799: screen(0);
   4016 3E 00             11625 	ld	a,#0x00
   4018 F5                11626 	push	af
   4019 33                11627 	inc	sp
   401A CDr00s00          11628 	call	_screen
   401D 33                11629 	inc	sp
                          11630 ;demo.c:1801: puts("bye friends.\r\n\r\n");
   401E 21r2Fs40          11631 	ld	hl,#__str_33
   4021 E5                11632 	push	hl
   4022 CDr00s00          11633 	call	_puts
   4025 F1                11634 	pop	af
                          11635 ;demo.c:1803: exit(0);	
   4026 3E 00             11636 	ld	a,#0x00
   4028 F5                11637 	push	af
   4029 33                11638 	inc	sp
   402A CDr00s00          11639 	call	_exit
   402D 33                11640 	inc	sp
   402E C9                11641 	ret
   402F                   11642 _do_quit_end::
   402F                   11643 __str_33:
   402F 62 79 65 20 66 72 11644 	.ascii "bye friends."
        69 65 6E 64 73 2E
   403B 0D                11645 	.db 0x0D
   403C 0A                11646 	.db 0x0A
   403D 0D                11647 	.db 0x0D
   403E 0A                11648 	.db 0x0A
   403F 00                11649 	.db 0x00
                          11650 ;demo.c:1809: void main() {
                          11651 ;	---------------------------------
                          11652 ; Function main
                          11653 ; ---------------------------------
   4040                   11654 _main_start::
   4040                   11655 _main:
   4040 DD E5             11656 	push	ix
   4042 DD 21 00 00       11657 	ld	ix,#0
   4046 DD 39             11658 	add	ix,sp
   4048 21 F9 FF          11659 	ld	hl,#-7
   404B 39                11660 	add	hl,sp
   404C F9                11661 	ld	sp,hl
                          11662 ;demo.c:1810: unsigned char quit=0;
   404D DD 36 FF 00       11663 	ld	-1 (ix),#0x00
                          11664 ;demo.c:1816: spindown();
   4051 CDr00s00          11665 	call	_spindown
                          11666 ;demo.c:1818: puts("[starting DSS MSX demosystem]\r\n\r\n");
   4054 21r66s45          11667 	ld	hl,#__str_34
   4057 E5                11668 	push	hl
   4058 CDr00s00          11669 	call	_puts
   405B F1                11670 	pop	af
                          11671 ;demo.c:1820: for (y = 0; y < 2; y++) {
   405C DD 36 FB 00       11672 	ld	-5 (ix),#0x00
   4060 DD 36 FC 00       11673 	ld	-4 (ix),#0x00
   4064                   11674 00118$:
   4064 DD 7E FB          11675 	ld	a,-5 (ix)
   4067 D6 02             11676 	sub	a,#0x02
   4069 DD 7E FC          11677 	ld	a,-4 (ix)
   406C DE 00             11678 	sbc	a,#0x00
   406E F2rF0s40          11679 	jp	P,00121$
                          11680 ;demo.c:1821: for (x = 0; x < 16; x++) {
   4071 DD 4E FB          11681 	ld	c,-5 (ix)
   4074 DD 46 FC          11682 	ld	b,-4 (ix)
   4077 CB 21             11683 	sla	c
   4079 CB 10             11684 	rl	b
   407B CB 21             11685 	sla	c
   407D CB 10             11686 	rl	b
   407F CB 21             11687 	sla	c
   4081 CB 10             11688 	rl	b
   4083 CB 21             11689 	sla	c
   4085 CB 10             11690 	rl	b
   4087 21 81 03          11691 	ld	hl,#0x0381
   408A 09                11692 	add	hl,bc
   408B DD 75 F9          11693 	ld	-7 (ix),l
   408E DD 74 FA          11694 	ld	-6 (ix),h
   4091 DD 36 FD 00       11695 	ld	-3 (ix),#0x00
   4095 DD 36 FE 00       11696 	ld	-2 (ix),#0x00
   4099                   11697 00114$:
   4099 DD 7E FD          11698 	ld	a,-3 (ix)
   409C D6 10             11699 	sub	a,#0x10
   409E DD 7E FE          11700 	ld	a,-2 (ix)
   40A1 DE 00             11701 	sbc	a,#0x00
   40A3 F2rE5s40          11702 	jp	P,00120$
                          11703 ;demo.c:1822: tri_lookup_x[(y*16)+x] = x * 16;
   40A6 DD 7E FB          11704 	ld	a,-5 (ix)
   40A9 07                11705 	rlca
   40AA 07                11706 	rlca
   40AB 07                11707 	rlca
   40AC 07                11708 	rlca
   40AD E6 F0             11709 	and	a,#0xF0
   40AF 5F                11710 	ld	e,a
   40B0 DD 56 FD          11711 	ld	d,-3 (ix)
   40B3 7B                11712 	ld	a,e
   40B4 82                11713 	add	a,d
   40B5 5F                11714 	ld	e, a
   40B6 C6r00             11715 	add	a,#<_tri_lookup_x
   40B8 4F                11716 	ld	c,a
   40B9 3Es01             11717 	ld	a,#>_tri_lookup_x
   40BB CE 00             11718 	adc	a,#0x00
   40BD 47                11719 	ld	b,a
   40BE 7A                11720 	ld	a,d
   40BF 07                11721 	rlca
   40C0 07                11722 	rlca
   40C1 07                11723 	rlca
   40C2 07                11724 	rlca
   40C3 E6 F0             11725 	and	a,#0xF0
   40C5 02                11726 	ld	(bc),a
                          11727 ;demo.c:1823: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   40C6 CB 23             11728 	sla	e
   40C8 3Er88             11729 	ld	a,#<_tri_lookup_y
   40CA 83                11730 	add	a,e
   40CB 6F                11731 	ld	l,a
   40CC 3Es01             11732 	ld	a,#>_tri_lookup_y
   40CE CE 00             11733 	adc	a,#0x00
   40D0 67                11734 	ld	h,a
   40D1 DD 7E F9          11735 	ld	a,-7 (ix)
   40D4 77                11736 	ld	(hl),a
   40D5 23                11737 	inc	hl
   40D6 DD 7E FA          11738 	ld	a,-6 (ix)
   40D9 77                11739 	ld	(hl),a
                          11740 ;demo.c:1821: for (x = 0; x < 16; x++) {
   40DA DD 34 FD          11741 	inc	-3 (ix)
   40DD 20 03             11742 	jr	NZ,00146$
   40DF DD 34 FE          11743 	inc	-2 (ix)
   40E2                   11744 00146$:
   40E2 C3r99s40          11745 	jp	00114$
   40E5                   11746 00120$:
                          11747 ;demo.c:1820: for (y = 0; y < 2; y++) {
   40E5 DD 34 FB          11748 	inc	-5 (ix)
   40E8 20 03             11749 	jr	NZ,00147$
   40EA DD 34 FC          11750 	inc	-4 (ix)
   40ED                   11751 00147$:
   40ED C3r64s40          11752 	jp	00118$
   40F0                   11753 00121$:
                          11754 ;demo.c:1827: for (x = 0; x < 26; x++) {
   40F0 DD 36 FD 00       11755 	ld	-3 (ix),#0x00
   40F4 DD 36 FE 00       11756 	ld	-2 (ix),#0x00
   40F8 DD 36 F9 00       11757 	ld	-7 (ix),#0x00
   40FC DD 36 FA 00       11758 	ld	-6 (ix),#0x00
   4100                   11759 00122$:
   4100 DD 7E FD          11760 	ld	a,-3 (ix)
   4103 D6 1A             11761 	sub	a,#0x1A
   4105 DD 7E FE          11762 	ld	a,-2 (ix)
   4108 DE 00             11763 	sbc	a,#0x00
   410A F2r5Cs41          11764 	jp	P,00125$
                          11765 ;demo.c:1828: twelvetimes[x] = x * 12;
   410D DD 4E FD          11766 	ld	c,-3 (ix)
   4110 DD 46 FE          11767 	ld	b,-2 (ix)
   4113 CB 21             11768 	sla	c
   4115 CB 10             11769 	rl	b
   4117 21r20s01          11770 	ld	hl,#_twelvetimes
   411A 09                11771 	add	hl,bc
   411B DD 7E F9          11772 	ld	a,-7 (ix)
   411E 77                11773 	ld	(hl),a
   411F 23                11774 	inc	hl
   4120 DD 7E FA          11775 	ld	a,-6 (ix)
   4123 77                11776 	ld	(hl),a
                          11777 ;demo.c:1829: eighttimes[x] = x * 8;
   4124 21r54s01          11778 	ld	hl,#_eighttimes
   4127 09                11779 	add	hl,bc
   4128 4D                11780 	ld	c,l
   4129 44                11781 	ld	b,h
   412A DD 5E FD          11782 	ld	e,-3 (ix)
   412D DD 56 FE          11783 	ld	d,-2 (ix)
   4130 CB 23             11784 	sla	e
   4132 CB 12             11785 	rl	d
   4134 CB 23             11786 	sla	e
   4136 CB 12             11787 	rl	d
   4138 CB 23             11788 	sla	e
   413A CB 12             11789 	rl	d
   413C 69                11790 	ld	l,c
   413D 60                11791 	ld	h,b
   413E 73                11792 	ld	(hl),e
   413F 23                11793 	inc	hl
   4140 72                11794 	ld	(hl),d
                          11795 ;demo.c:1827: for (x = 0; x < 26; x++) {
   4141 DD 7E F9          11796 	ld	a,-7 (ix)
   4144 C6 0C             11797 	add	a,#0x0C
   4146 DD 77 F9          11798 	ld	-7 (ix),a
   4149 DD 7E FA          11799 	ld	a,-6 (ix)
   414C CE 00             11800 	adc	a,#0x00
   414E DD 77 FA          11801 	ld	-6 (ix),a
   4151 DD 34 FD          11802 	inc	-3 (ix)
   4154 20 03             11803 	jr	NZ,00152$
   4156 DD 34 FE          11804 	inc	-2 (ix)
   4159                   11805 00152$:
   4159 C3r00s41          11806 	jp	00122$
   415C                   11807 00125$:
                          11808 ;demo.c:1832: puts("init sweet PSG bleeps...");
   415C 21r88s45          11809 	ld	hl,#__str_35
   415F E5                11810 	push	hl
   4160 CDr00s00          11811 	call	_puts
   4163 F1                11812 	pop	af
                          11813 ;demo.c:1834: PLY_SongPtr = (char *)0x0103;
   4164 21r00s00          11814 	ld	hl,#_PLY_SongPtr + 0
   4167 36 03             11815 	ld	(hl), #0x03
   4169 21r01s00          11816 	ld	hl,#_PLY_SongPtr + 1
   416C 36 01             11817 	ld	(hl), #0x01
                          11818 ;demo.c:1835: PLY_Init();
   416E CDr00s00          11819 	call	_PLY_Init
                          11820 ;demo.c:1836: puts("done.\r\n");
   4171 21rA1s45          11821 	ld	hl,#__str_36
   4174 E5                11822 	push	hl
   4175 CDr00s00          11823 	call	_puts
   4178 F1                11824 	pop	af
                          11825 ;demo.c:1838: puts("detecting ya vdp type...\r\n");
   4179 21rA9s45          11826 	ld	hl,#__str_37
   417C E5                11827 	push	hl
   417D CDr00s00          11828 	call	_puts
   4180 F1                11829 	pop	af
                          11830 ;demo.c:1839: if(isvdp2())
   4181 CDr00s00          11831 	call	_isvdp2
   4184 AF                11832 	xor	a,a
   4185 B5                11833 	or	a,l
   4186 28 0A             11834 	jr	Z,00102$
                          11835 ;demo.c:1841: puts("vdp2 found! setting 50hz...\r\n");
   4188 21rC4s45          11836 	ld	hl,#__str_38
   418B E5                11837 	push	hl
   418C CDr00s00          11838 	call	_puts
   418F F1                11839 	pop	af
   4190 18 0B             11840 	jr	00103$
   4192                   11841 00102$:
                          11842 ;demo.c:1844: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n");
   4192 21rE2s45          11843 	ld	hl,#__str_39
   4195 E5                11844 	push	hl
   4196 CDr00s00          11845 	call	_puts
   4199 F1                11846 	pop	af
                          11847 ;demo.c:1845: do_quit();
   419A CDr04s40          11848 	call	_do_quit
   419D                   11849 00103$:
                          11850 ;demo.c:1848: pal_load("TWISTER PL5",32,0);
   419D 21 00 00          11851 	ld	hl,#0x0000
   41A0 E5                11852 	push	hl
   41A1 3E 20             11853 	ld	a,#0x20
   41A3 F5                11854 	push	af
   41A4 33                11855 	inc	sp
   41A5 21r27s46          11856 	ld	hl,#__str_40
   41A8 E5                11857 	push	hl
   41A9 CDrA3s09          11858 	call	_pal_load
   41AC F1                11859 	pop	af
   41AD F1                11860 	pop	af
   41AE 33                11861 	inc	sp
                          11862 ;demo.c:1849: memcpy(twister_palette, cur_palette, 32);
   41AF 21 20 00          11863 	ld	hl,#0x0020
   41B2 E5                11864 	push	hl
   41B3 21rD0s15          11865 	ld	hl,#_cur_palette
   41B6 E5                11866 	push	hl
   41B7 21r30s16          11867 	ld	hl,#_twister_palette
   41BA E5                11868 	push	hl
   41BB CDr00s00          11869 	call	_memcpy
   41BE F1                11870 	pop	af
   41BF F1                11871 	pop	af
   41C0 F1                11872 	pop	af
                          11873 ;demo.c:1850: pal_load("LF      PL5",32,0);
   41C1 21 00 00          11874 	ld	hl,#0x0000
   41C4 E5                11875 	push	hl
   41C5 3E 20             11876 	ld	a,#0x20
   41C7 F5                11877 	push	af
   41C8 33                11878 	inc	sp
   41C9 21r33s46          11879 	ld	hl,#__str_41
   41CC E5                11880 	push	hl
   41CD CDrA3s09          11881 	call	_pal_load
   41D0 F1                11882 	pop	af
   41D1 F1                11883 	pop	af
   41D2 33                11884 	inc	sp
                          11885 ;demo.c:1851: memcpy(tf_palette, cur_palette, 32);
   41D3 21 20 00          11886 	ld	hl,#0x0020
   41D6 E5                11887 	push	hl
   41D7 21rD0s15          11888 	ld	hl,#_cur_palette
   41DA E5                11889 	push	hl
   41DB 21r50s16          11890 	ld	hl,#_tf_palette
   41DE E5                11891 	push	hl
   41DF CDr00s00          11892 	call	_memcpy
   41E2 F1                11893 	pop	af
   41E3 F1                11894 	pop	af
   41E4 F1                11895 	pop	af
                          11896 ;demo.c:1852: pal_load("BOXES   PL5",32,0);
   41E5 21 00 00          11897 	ld	hl,#0x0000
   41E8 E5                11898 	push	hl
   41E9 3E 20             11899 	ld	a,#0x20
   41EB F5                11900 	push	af
   41EC 33                11901 	inc	sp
   41ED 21r3Fs46          11902 	ld	hl,#__str_42
   41F0 E5                11903 	push	hl
   41F1 CDrA3s09          11904 	call	_pal_load
   41F4 F1                11905 	pop	af
   41F5 F1                11906 	pop	af
   41F6 33                11907 	inc	sp
                          11908 ;demo.c:1853: memcpy(boxes_palette, cur_palette, 32);
   41F7 21 20 00          11909 	ld	hl,#0x0020
   41FA E5                11910 	push	hl
   41FB 21rD0s15          11911 	ld	hl,#_cur_palette
   41FE E5                11912 	push	hl
   41FF 21r70s16          11913 	ld	hl,#_boxes_palette
   4202 E5                11914 	push	hl
   4203 CDr00s00          11915 	call	_memcpy
   4206 F1                11916 	pop	af
   4207 F1                11917 	pop	af
   4208 F1                11918 	pop	af
                          11919 ;demo.c:1854: pal_load("BULBS   PL5",32,0);
   4209 21 00 00          11920 	ld	hl,#0x0000
   420C E5                11921 	push	hl
   420D 3E 20             11922 	ld	a,#0x20
   420F F5                11923 	push	af
   4210 33                11924 	inc	sp
   4211 21r4Bs46          11925 	ld	hl,#__str_43
   4214 E5                11926 	push	hl
   4215 CDrA3s09          11927 	call	_pal_load
   4218 F1                11928 	pop	af
   4219 F1                11929 	pop	af
   421A 33                11930 	inc	sp
                          11931 ;demo.c:1855: memcpy(bulbs_palette, cur_palette, 32);
   421B 21 20 00          11932 	ld	hl,#0x0020
   421E E5                11933 	push	hl
   421F 21rD0s15          11934 	ld	hl,#_cur_palette
   4222 E5                11935 	push	hl
   4223 21rF0s15          11936 	ld	hl,#_bulbs_palette
   4226 E5                11937 	push	hl
   4227 CDr00s00          11938 	call	_memcpy
   422A F1                11939 	pop	af
   422B F1                11940 	pop	af
   422C F1                11941 	pop	af
                          11942 ;demo.c:1856: pal_load("CREDIT1 PL6",32,0);
   422D 21 00 00          11943 	ld	hl,#0x0000
   4230 E5                11944 	push	hl
   4231 3E 20             11945 	ld	a,#0x20
   4233 F5                11946 	push	af
   4234 33                11947 	inc	sp
   4235 21r57s46          11948 	ld	hl,#__str_44
   4238 E5                11949 	push	hl
   4239 CDrA3s09          11950 	call	_pal_load
   423C F1                11951 	pop	af
   423D F1                11952 	pop	af
   423E 33                11953 	inc	sp
                          11954 ;demo.c:1857: memcpy(credits_palette, cur_palette, 32);
   423F 21 20 00          11955 	ld	hl,#0x0020
   4242 E5                11956 	push	hl
   4243 21rD0s15          11957 	ld	hl,#_cur_palette
   4246 E5                11958 	push	hl
   4247 21r90s16          11959 	ld	hl,#_credits_palette
   424A E5                11960 	push	hl
   424B CDr00s00          11961 	call	_memcpy
   424E F1                11962 	pop	af
   424F F1                11963 	pop	af
   4250 F1                11964 	pop	af
                          11965 ;demo.c:1859: pause();
   4251 CDr82s0A          11966 	call	_pause
                          11967 ;demo.c:1860: pause();
   4254 CDr82s0A          11968 	call	_pause
                          11969 ;demo.c:1861: pause();
   4257 CDr82s0A          11970 	call	_pause
                          11971 ;demo.c:1862: pause();
   425A CDr82s0A          11972 	call	_pause
                          11973 ;demo.c:1864: puts("all good, starting the demo!\r\n");
   425D 21r63s46          11974 	ld	hl,#__str_45
   4260 E5                11975 	push	hl
   4261 CDr00s00          11976 	call	_puts
   4264 F1                11977 	pop	af
                          11978 ;demo.c:1866: pause();
   4265 CDr82s0A          11979 	call	_pause
                          11980 ;demo.c:1867: pause();
   4268 CDr82s0A          11981 	call	_pause
                          11982 ;demo.c:1868: pause();
   426B CDr82s0A          11983 	call	_pause
                          11984 ;demo.c:1869: pause();
   426E CDr82s0A          11985 	call	_pause
                          11986 ;demo.c:1870: pause();
   4271 CDr82s0A          11987 	call	_pause
                          11988 ;demo.c:1871: pause();
   4274 CDr82s0A          11989 	call	_pause
                          11990 ;demo.c:1873: scratch_clear();
   4277 CDr90s09          11991 	call	_scratch_clear
                          11992 ;demo.c:1874: vdp_load_palette(scratch);
   427A 21r50s15          11993 	ld	hl,#_scratch
   427D E5                11994 	push	hl
   427E CDr00s00          11995 	call	_vdp_load_palette
   4281 F1                11996 	pop	af
                          11997 ;demo.c:1876: vdp_set_screen5();
   4282 CDr00s00          11998 	call	_vdp_set_screen5
                          11999 ;demo.c:1878: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   4285 21 00 00          12000 	ld	hl,#0x0000
   4288 E5                12001 	push	hl
   4289 2E 01             12002 	ld	l, #0x01
   428B E5                12003 	push	hl
   428C 2E 00             12004 	ld	l, #0x00
   428E E5                12005 	push	hl
   428F 21 7F 09          12006 	ld	hl,#0x097F
   4292 E5                12007 	push	hl
   4293 21r82s46          12008 	ld	hl,#__str_46
   4296 E5                12009 	push	hl
   4297 CDr99s0B          12010 	call	_pck_load
   429A FD 21 0A 00       12011 	ld	iy,#0x000A
   429E FD 39             12012 	add	iy,sp
   42A0 FD F9             12013 	ld	sp,iy
                          12014 ;demo.c:1880: cmd.size_x = 256;
   42A2 21rBCs16          12015 	ld	hl, #_cmd + 8
   42A5 36 00             12016 	ld	(hl),#0x00
   42A7 23                12017 	inc	hl
   42A8 36 01             12018 	ld	(hl),#0x01
                          12019 ;demo.c:1881: cmd.size_y = 212;
   42AA 21rBEs16          12020 	ld	hl, #_cmd + 10
   42AD 36 D4             12021 	ld	(hl),#0xD4
   42AF 23                12022 	inc	hl
   42B0 36 00             12023 	ld	(hl),#0x00
                          12024 ;demo.c:1882: cmd.data = 0;
                          12025 ;demo.c:1883: cmd.argument = 0x00;
   42B2 3E 00             12026 	ld	a,#0x00
   42B4 32rC0s16          12027 	ld	(#_cmd + 12),a
   42B7 32rC1s16          12028 	ld	(#_cmd + 13),a
                          12029 ;demo.c:1884: cmd.command = 0xd0; 
   42BA 01rC2s16          12030 	ld	bc,#_cmd + 14
   42BD 3E D0             12031 	ld	a,#0xD0
   42BF 02                12032 	ld	(bc),a
                          12033 ;demo.c:1885: cmd.source_x = 0;
   42C0 21rB4s16          12034 	ld	hl,#_cmd
   42C3 36 00             12035 	ld	(hl),#0x00
   42C5 23                12036 	inc	hl
   42C6 36 00             12037 	ld	(hl),#0x00
                          12038 ;demo.c:1886: cmd.source_y = 0;
   42C8 21rB6s16          12039 	ld	hl, #_cmd + 2
   42CB 36 00             12040 	ld	(hl),#0x00
   42CD 23                12041 	inc	hl
   42CE 36 00             12042 	ld	(hl),#0x00
                          12043 ;demo.c:1887: cmd.dest_x = 0;
   42D0 21rB8s16          12044 	ld	hl, #_cmd + 4
   42D3 36 00             12045 	ld	(hl),#0x00
   42D5 23                12046 	inc	hl
   42D6 36 00             12047 	ld	(hl),#0x00
                          12048 ;demo.c:1888: cmd.dest_y = 256;
   42D8 21rBAs16          12049 	ld	hl, #_cmd + 6
   42DB 36 00             12050 	ld	(hl),#0x00
   42DD 23                12051 	inc	hl
   42DE 36 01             12052 	ld	(hl),#0x01
                          12053 ;demo.c:1889: vdp_copier(&cmd);
   42E0 21rB4s16          12054 	ld	hl,#_cmd
   42E3 E5                12055 	push	hl
   42E4 CDr00s00          12056 	call	_vdp_copier
   42E7 F1                12057 	pop	af
                          12058 ;demo.c:1891: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   42E8 21 00 00          12059 	ld	hl,#0x0000
   42EB E5                12060 	push	hl
   42EC 2E 01             12061 	ld	l, #0x01
   42EE E5                12062 	push	hl
   42EF 2E 00             12063 	ld	l, #0x00
   42F1 E5                12064 	push	hl
   42F2 21 C0 0F          12065 	ld	hl,#0x0FC0
   42F5 E5                12066 	push	hl
   42F6 21r8Es46          12067 	ld	hl,#__str_47
   42F9 E5                12068 	push	hl
   42FA CDr99s0B          12069 	call	_pck_load
   42FD FD 21 0A 00       12070 	ld	iy,#0x000A
   4301 FD 39             12071 	add	iy,sp
   4303 FD F9             12072 	ld	sp,iy
                          12073 ;demo.c:1893: cmd.size_x = 256;
   4305 21rBCs16          12074 	ld	hl, #_cmd + 8
   4308 36 00             12075 	ld	(hl),#0x00
   430A 23                12076 	inc	hl
   430B 36 01             12077 	ld	(hl),#0x01
                          12078 ;demo.c:1894: cmd.size_y = 212;
   430D 21rBEs16          12079 	ld	hl, #_cmd + 10
   4310 36 D4             12080 	ld	(hl),#0xD4
   4312 23                12081 	inc	hl
   4313 36 00             12082 	ld	(hl),#0x00
                          12083 ;demo.c:1895: cmd.data = 0;
                          12084 ;demo.c:1896: cmd.argument = 0x00;
   4315 3E 00             12085 	ld	a,#0x00
   4317 32rC0s16          12086 	ld	(#_cmd + 12),a
   431A 32rC1s16          12087 	ld	(#_cmd + 13),a
                          12088 ;demo.c:1897: cmd.command = 0xd0; 
   431D 01rC2s16          12089 	ld	bc,#_cmd + 14
   4320 3E D0             12090 	ld	a,#0xD0
   4322 02                12091 	ld	(bc),a
                          12092 ;demo.c:1898: cmd.source_x = 0;
   4323 21rB4s16          12093 	ld	hl,#_cmd
   4326 36 00             12094 	ld	(hl),#0x00
   4328 23                12095 	inc	hl
   4329 36 00             12096 	ld	(hl),#0x00
                          12097 ;demo.c:1899: cmd.source_y = 0;
   432B 21rB6s16          12098 	ld	hl, #_cmd + 2
   432E 36 00             12099 	ld	(hl),#0x00
   4330 23                12100 	inc	hl
   4331 36 00             12101 	ld	(hl),#0x00
                          12102 ;demo.c:1900: cmd.dest_x = 0;
   4333 21rB8s16          12103 	ld	hl, #_cmd + 4
   4336 36 00             12104 	ld	(hl),#0x00
   4338 23                12105 	inc	hl
   4339 36 00             12106 	ld	(hl),#0x00
                          12107 ;demo.c:1901: cmd.dest_y = 512;
   433B 21rBAs16          12108 	ld	hl, #_cmd + 6
   433E 36 00             12109 	ld	(hl),#0x00
   4340 23                12110 	inc	hl
   4341 36 02             12111 	ld	(hl),#0x02
                          12112 ;demo.c:1902: vdp_copier(&cmd);
   4343 21rB4s16          12113 	ld	hl,#_cmd
   4346 E5                12114 	push	hl
   4347 CDr00s00          12115 	call	_vdp_copier
   434A F1                12116 	pop	af
                          12117 ;demo.c:1905: pck_load("BOXES   PCK",2731,0x0000,VRAM_0,0);
   434B 21 00 00          12118 	ld	hl,#0x0000
   434E E5                12119 	push	hl
   434F 2E 01             12120 	ld	l, #0x01
   4351 E5                12121 	push	hl
   4352 2E 00             12122 	ld	l, #0x00
   4354 E5                12123 	push	hl
   4355 21 AB 0A          12124 	ld	hl,#0x0AAB
   4358 E5                12125 	push	hl
   4359 21r9As46          12126 	ld	hl,#__str_48
   435C E5                12127 	push	hl
   435D CDr99s0B          12128 	call	_pck_load
   4360 FD 21 0A 00       12129 	ld	iy,#0x000A
   4364 FD 39             12130 	add	iy,sp
   4366 FD F9             12131 	ld	sp,iy
                          12132 ;demo.c:1906: cmd.size_x = 256;
   4368 21rBCs16          12133 	ld	hl, #_cmd + 8
   436B 36 00             12134 	ld	(hl),#0x00
   436D 23                12135 	inc	hl
   436E 36 01             12136 	ld	(hl),#0x01
                          12137 ;demo.c:1907: cmd.size_y = 212;
   4370 21rBEs16          12138 	ld	hl, #_cmd + 10
   4373 36 D4             12139 	ld	(hl),#0xD4
   4375 23                12140 	inc	hl
   4376 36 00             12141 	ld	(hl),#0x00
                          12142 ;demo.c:1908: cmd.data = 0;
                          12143 ;demo.c:1909: cmd.argument = 0x00;
   4378 3E 00             12144 	ld	a,#0x00
   437A 32rC0s16          12145 	ld	(#_cmd + 12),a
   437D 32rC1s16          12146 	ld	(#_cmd + 13),a
                          12147 ;demo.c:1910: cmd.command = 0xd0; 
   4380 01rC2s16          12148 	ld	bc,#_cmd + 14
   4383 3E D0             12149 	ld	a,#0xD0
   4385 02                12150 	ld	(bc),a
                          12151 ;demo.c:1911: cmd.source_x = 0;
   4386 21rB4s16          12152 	ld	hl,#_cmd
   4389 36 00             12153 	ld	(hl),#0x00
   438B 23                12154 	inc	hl
   438C 36 00             12155 	ld	(hl),#0x00
                          12156 ;demo.c:1912: cmd.source_y = 0;
   438E 21rB6s16          12157 	ld	hl, #_cmd + 2
   4391 36 00             12158 	ld	(hl),#0x00
   4393 23                12159 	inc	hl
   4394 36 00             12160 	ld	(hl),#0x00
                          12161 ;demo.c:1913: cmd.dest_x = 0;
   4396 21rB8s16          12162 	ld	hl, #_cmd + 4
   4399 36 00             12163 	ld	(hl),#0x00
   439B 23                12164 	inc	hl
   439C 36 00             12165 	ld	(hl),#0x00
                          12166 ;demo.c:1914: cmd.dest_y = 768;
   439E 21rBAs16          12167 	ld	hl, #_cmd + 6
   43A1 36 00             12168 	ld	(hl),#0x00
   43A3 23                12169 	inc	hl
   43A4 36 03             12170 	ld	(hl),#0x03
                          12171 ;demo.c:1915: vdp_copier(&cmd);
   43A6 21rB4s16          12172 	ld	hl,#_cmd
   43A9 E5                12173 	push	hl
   43AA CDr00s00          12174 	call	_vdp_copier
   43AD F1                12175 	pop	af
                          12176 ;demo.c:1917: scratch_clear();
   43AE CDr90s09          12177 	call	_scratch_clear
                          12178 ;demo.c:1918: vdp_load_palette(scratch);
   43B1 21r50s15          12179 	ld	hl,#_scratch
   43B4 E5                12180 	push	hl
   43B5 CDr00s00          12181 	call	_vdp_load_palette
   43B8 F1                12182 	pop	af
                          12183 ;demo.c:1920: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   43B9 21 00 00          12184 	ld	hl,#0x0000
   43BC E5                12185 	push	hl
   43BD 2E 01             12186 	ld	l, #0x01
   43BF E5                12187 	push	hl
   43C0 2E 00             12188 	ld	l, #0x00
   43C2 E5                12189 	push	hl
   43C3 21 6A 08          12190 	ld	hl,#0x086A
   43C6 E5                12191 	push	hl
   43C7 21rA6s46          12192 	ld	hl,#__str_49
   43CA E5                12193 	push	hl
   43CB CDr99s0B          12194 	call	_pck_load
   43CE FD 21 0A 00       12195 	ld	iy,#0x000A
   43D2 FD 39             12196 	add	iy,sp
   43D4 FD F9             12197 	ld	sp,iy
                          12198 ;demo.c:1922: cmd.size_x = 108;
   43D6 21rBCs16          12199 	ld	hl, #_cmd + 8
   43D9 36 6C             12200 	ld	(hl),#0x6C
   43DB 23                12201 	inc	hl
   43DC 36 00             12202 	ld	(hl),#0x00
                          12203 ;demo.c:1923: cmd.size_y = 116;
   43DE 21rBEs16          12204 	ld	hl, #_cmd + 10
   43E1 36 74             12205 	ld	(hl),#0x74
   43E3 23                12206 	inc	hl
   43E4 36 00             12207 	ld	(hl),#0x00
                          12208 ;demo.c:1924: cmd.data = 0;
                          12209 ;demo.c:1925: cmd.argument = 0x00;
   43E6 3E 00             12210 	ld	a,#0x00
   43E8 32rC0s16          12211 	ld	(#_cmd + 12),a
   43EB 32rC1s16          12212 	ld	(#_cmd + 13),a
                          12213 ;demo.c:1926: cmd.command = 0xd0; 
   43EE 01rC2s16          12214 	ld	bc,#_cmd + 14
   43F1 3E D0             12215 	ld	a,#0xD0
   43F3 02                12216 	ld	(bc),a
                          12217 ;demo.c:1927: cmd.source_x = 75;
   43F4 21rB4s16          12218 	ld	hl,#_cmd
   43F7 36 4B             12219 	ld	(hl),#0x4B
   43F9 23                12220 	inc	hl
   43FA 36 00             12221 	ld	(hl),#0x00
                          12222 ;demo.c:1928: cmd.source_y = 50;
   43FC 21rB6s16          12223 	ld	hl, #_cmd + 2
   43FF 36 32             12224 	ld	(hl),#0x32
   4401 23                12225 	inc	hl
   4402 36 00             12226 	ld	(hl),#0x00
                          12227 ;demo.c:1929: cmd.dest_x = 75;
   4404 21rB8s16          12228 	ld	hl, #_cmd + 4
   4407 36 4B             12229 	ld	(hl),#0x4B
   4409 23                12230 	inc	hl
   440A 36 00             12231 	ld	(hl),#0x00
                          12232 ;demo.c:1930: cmd.dest_y = 256;
   440C 21rBAs16          12233 	ld	hl, #_cmd + 6
   440F 36 00             12234 	ld	(hl),#0x00
   4411 23                12235 	inc	hl
   4412 36 01             12236 	ld	(hl),#0x01
                          12237 ;demo.c:1931: vdp_copier(&cmd);
   4414 21rB4s16          12238 	ld	hl,#_cmd
   4417 E5                12239 	push	hl
   4418 CDr00s00          12240 	call	_vdp_copier
   441B F1                12241 	pop	af
                          12242 ;demo.c:1933: cmd.size_x = 108;
   441C 21rBCs16          12243 	ld	hl, #_cmd + 8
   441F 36 6C             12244 	ld	(hl),#0x6C
   4421 23                12245 	inc	hl
   4422 36 00             12246 	ld	(hl),#0x00
                          12247 ;demo.c:1934: cmd.size_y = 60;
   4424 21rBEs16          12248 	ld	hl, #_cmd + 10
   4427 36 3C             12249 	ld	(hl),#0x3C
   4429 23                12250 	inc	hl
   442A 36 00             12251 	ld	(hl),#0x00
                          12252 ;demo.c:1935: cmd.data = 0;
                          12253 ;demo.c:1936: cmd.argument = 0x00;
   442C 3E 00             12254 	ld	a,#0x00
   442E 32rC0s16          12255 	ld	(#_cmd + 12),a
   4431 32rC1s16          12256 	ld	(#_cmd + 13),a
                          12257 ;demo.c:1937: cmd.command = 0xd0; 
   4434 01rC2s16          12258 	ld	bc,#_cmd + 14
   4437 3E D0             12259 	ld	a,#0xD0
   4439 02                12260 	ld	(bc),a
                          12261 ;demo.c:1938: cmd.source_x = 75;
   443A 21rB4s16          12262 	ld	hl,#_cmd
   443D 36 4B             12263 	ld	(hl),#0x4B
   443F 23                12264 	inc	hl
   4440 36 00             12265 	ld	(hl),#0x00
                          12266 ;demo.c:1939: cmd.source_y = 256+110;
   4442 21rB6s16          12267 	ld	hl, #_cmd + 2
   4445 36 6E             12268 	ld	(hl),#0x6E
   4447 23                12269 	inc	hl
   4448 36 01             12270 	ld	(hl),#0x01
                          12271 ;demo.c:1940: cmd.dest_x = 75;
   444A 21rB8s16          12272 	ld	hl, #_cmd + 4
   444D 36 4B             12273 	ld	(hl),#0x4B
   444F 23                12274 	inc	hl
   4450 36 00             12275 	ld	(hl),#0x00
                          12276 ;demo.c:1941: cmd.dest_y = 40;
   4452 21rBAs16          12277 	ld	hl, #_cmd + 6
   4455 36 28             12278 	ld	(hl),#0x28
   4457 23                12279 	inc	hl
   4458 36 00             12280 	ld	(hl),#0x00
                          12281 ;demo.c:1942: vdp_copier(&cmd);
   445A 21rB4s16          12282 	ld	hl,#_cmd
   445D E5                12283 	push	hl
   445E CDr00s00          12284 	call	_vdp_copier
   4461 F1                12285 	pop	af
                          12286 ;demo.c:1943: cmd.dest_x = 75;
   4462 21rB8s16          12287 	ld	hl, #_cmd + 4
   4465 36 4B             12288 	ld	(hl),#0x4B
   4467 23                12289 	inc	hl
   4468 36 00             12290 	ld	(hl),#0x00
                          12291 ;demo.c:1944: cmd.dest_y = 100;
   446A 21rBAs16          12292 	ld	hl, #_cmd + 6
   446D 36 64             12293 	ld	(hl),#0x64
   446F 23                12294 	inc	hl
   4470 36 00             12295 	ld	(hl),#0x00
                          12296 ;demo.c:1945: vdp_copier(&cmd);
   4472 21rB4s16          12297 	ld	hl,#_cmd
   4475 E5                12298 	push	hl
   4476 CDr00s00          12299 	call	_vdp_copier
   4479 F1                12300 	pop	af
                          12301 ;demo.c:1947: pal_load("DSSLOGO PL5",32,0);
   447A 21 00 00          12302 	ld	hl,#0x0000
   447D E5                12303 	push	hl
   447E 3E 20             12304 	ld	a,#0x20
   4480 F5                12305 	push	af
   4481 33                12306 	inc	sp
   4482 21rB2s46          12307 	ld	hl,#__str_50
   4485 E5                12308 	push	hl
   4486 CDrA3s09          12309 	call	_pal_load
   4489 F1                12310 	pop	af
   448A F1                12311 	pop	af
   448B 33                12312 	inc	sp
                          12313 ;demo.c:1949: scratch_clear();
   448C CDr90s09          12314 	call	_scratch_clear
                          12315 ;demo.c:1951: vdp_register(9,130); // 50hz,212
   448F 21 09 82          12316 	ld	hl,#0x8209
   4492 E5                12317 	push	hl
   4493 CDr00s00          12318 	call	_vdp_register
   4496 F1                12319 	pop	af
                          12320 ;demo.c:1953: install_isr(my_isr);
   4497 21rECs07          12321 	ld	hl,#_my_isr
   449A E5                12322 	push	hl
   449B CDr00s00          12323 	call	_install_isr
   449E F1                12324 	pop	af
                          12325 ;demo.c:1957: while (!quit) {
   449F                   12326 00111$:
   449F AF                12327 	xor	a,a
   44A0 DD B6 FF          12328 	or	a,-1 (ix)
   44A3 C2r5Es45          12329 	jp	NZ,00113$
                          12330 ;demo.c:1959: if (vbicount >= scenetimings[timeindex+1]) {
   44A6 21rC2s17          12331 	ld	hl,#_timeindex + 0
   44A9 4E                12332 	ld	c,(hl)
   44AA 0C                12333 	inc	c
   44AB CB 21             12334 	sla	c
   44AD 3ErDB             12335 	ld	a,#<_scenetimings
   44AF 81                12336 	add	a,c
   44B0 6F                12337 	ld	l,a
   44B1 3Es16             12338 	ld	a,#>_scenetimings
   44B3 CE 00             12339 	adc	a,#0x00
   44B5 67                12340 	ld	h,a
   44B6 4E                12341 	ld	c,(hl)
   44B7 23                12342 	inc	hl
   44B8 46                12343 	ld	b,(hl)
   44B9 3ArB0s16          12344 	ld	a,(#_vbicount+0)
   44BC 91                12345 	sub	a,c
   44BD 3ArB1s16          12346 	ld	a,(#_vbicount+1)
   44C0 98                12347 	sbc	a,b
   44C1 FArEAs44          12348 	jp	M,00105$
                          12349 ;demo.c:1960: sceneindex++;
   44C4 FD 21rC0s17       12350 	ld	iy,#_sceneindex
   44C8 FD 34 00          12351 	inc	0 (iy)
   44CB 20 07             12352 	jr	NZ,00153$
   44CD FD 21rC0s17       12353 	ld	iy,#_sceneindex
   44D1 FD 34 01          12354 	inc	1 (iy)
   44D4                   12355 00153$:
                          12356 ;demo.c:1961: timeindex+=2;
   44D4 21rC2s17          12357 	ld	hl,#_timeindex
   44D7 7E                12358 	ld	a,(hl)
   44D8 C6 02             12359 	add	a,#0x02
   44DA 23                12360 	inc	hl
   44DB 2B                12361 	dec	hl
   44DC C5                12362 	push	bc
   44DD 4F                12363 	ld	c, a
   44DE 23                12364 	inc	hl
   44DF 7E                12365 	ld	a, (hl)
   44E0 47                12366 	ld	b, a
   44E1 79                12367 	ld	a, c
   44E2 2B                12368 	dec	hl
   44E3 77                12369 	ld	(hl), a
   44E4 78                12370 	ld	a, b
   44E5 C1                12371 	pop	bc
   44E6 CE 00             12372 	adc	a,#0x00
   44E8 23                12373 	inc	hl
   44E9 77                12374 	ld	(hl),a
   44EA                   12375 00105$:
                          12376 ;demo.c:1964: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   44EA 21rC2s17          12377 	ld	hl,#_timeindex + 0
   44ED 4E                12378 	ld	c,(hl)
   44EE 21rC3s17          12379 	ld	hl,#_timeindex + 1
   44F1 46                12380 	ld	b,(hl)
   44F2 CB 21             12381 	sla	c
   44F4 CB 10             12382 	rl	b
   44F6 21rDBs16          12383 	ld	hl,#_scenetimings
   44F9 09                12384 	add	hl,bc
   44FA 4E                12385 	ld	c,(hl)
   44FB 23                12386 	inc	hl
   44FC 46                12387 	ld	b,(hl)
   44FD 3ArB0s16          12388 	ld	a,(#_vbicount+0)
   4500 91                12389 	sub	a,c
   4501 3ArB1s16          12390 	ld	a,(#_vbicount+1)
   4504 98                12391 	sbc	a,b
   4505 FAr4As45          12392 	jp	M,00107$
   4508 21rC2s17          12393 	ld	hl,#_timeindex + 0
   450B 4E                12394 	ld	c,(hl)
   450C 0C                12395 	inc	c
   450D CB 21             12396 	sla	c
   450F 3ErDB             12397 	ld	a,#<_scenetimings
   4511 81                12398 	add	a,c
   4512 6F                12399 	ld	l,a
   4513 3Es16             12400 	ld	a,#>_scenetimings
   4515 CE 00             12401 	adc	a,#0x00
   4517 67                12402 	ld	h,a
   4518 4E                12403 	ld	c,(hl)
   4519 23                12404 	inc	hl
   451A 46                12405 	ld	b,(hl)
   451B 3ArB0s16          12406 	ld	a,(#_vbicount+0)
   451E 91                12407 	sub	a,c
   451F FD 21rB0s16       12408 	ld	iy,#_vbicount
   4523 FD 7E 01          12409 	ld	a,1 (iy)
   4526 98                12410 	sbc	a,b
   4527 F2r4As45          12411 	jp	P,00107$
                          12412 ;demo.c:1965: waitVB();
   452A 76                12413 		halt 
                          12414 ;demo.c:1966: scenepointers[sceneindex]();
   452B 21rC0s17          12415 	ld	hl,#_sceneindex + 0
   452E 4E                12416 	ld	c,(hl)
   452F FD 21rC0s17       12417 	ld	iy,#_sceneindex
   4533 FD 46 01          12418 	ld	b,1 (iy)
   4536 CB 21             12419 	sla	c
   4538 CB 10             12420 	rl	b
   453A 21rC3s16          12421 	ld	hl,#_scenepointers
   453D 09                12422 	add	hl,bc
   453E 4E                12423 	ld	c,(hl)
   453F 23                12424 	inc	hl
   4540 46                12425 	ld	b,(hl)
   4541 C5                12426 	push	bc
   4542 21r49s45          12427 	ld	hl,#00158$
   4545 E5                12428 	push	hl
   4546 69                12429 	ld	l,c
   4547 60                12430 	ld	h,b
   4548 E9                12431 	jp	(hl)
   4549                   12432 00158$:
   4549 C1                12433 	pop	bc
   454A                   12434 00107$:
                          12435 ;demo.c:1970: if(space())
   454A 21 08 01          12436 	ld	hl,#0x0108
   454D E5                12437 	push	hl
   454E CDr00s00          12438 	call	_ispressed
   4551 F1                12439 	pop	af
   4552 AF                12440 	xor	a,a
   4553 B5                12441 	or	a,l
   4554 CAr9Fs44          12442 	jp	Z,00111$
                          12443 ;demo.c:1971: quit=1;
   4557 DD 36 FF 01       12444 	ld	-1 (ix),#0x01
   455B C3r9Fs44          12445 	jp	00111$
   455E                   12446 00113$:
                          12447 ;demo.c:1974: do_quit();
   455E CDr04s40          12448 	call	_do_quit
   4561 DD F9             12449 	ld	sp,ix
   4563 DD E1             12450 	pop	ix
   4565 C9                12451 	ret
   4566                   12452 _main_end::
   4566                   12453 __str_34:
   4566 5B 73 74 61 72 74 12454 	.ascii "[starting DSS MSX demosystem]"
        69 6E 67 20 44 53
        53 20 4D 53 58 20
        64 65 6D 6F 73 79
        73 74 65 6D 5D
   4583 0D                12455 	.db 0x0D
   4584 0A                12456 	.db 0x0A
   4585 0D                12457 	.db 0x0D
   4586 0A                12458 	.db 0x0A
   4587 00                12459 	.db 0x00
   4588                   12460 __str_35:
   4588 69 6E 69 74 20 73 12461 	.ascii "init sweet PSG bleeps..."
        77 65 65 74 20 50
        53 47 20 62 6C 65
        65 70 73 2E 2E 2E
   45A0 00                12462 	.db 0x00
   45A1                   12463 __str_36:
   45A1 64 6F 6E 65 2E    12464 	.ascii "done."
   45A6 0D                12465 	.db 0x0D
   45A7 0A                12466 	.db 0x0A
   45A8 00                12467 	.db 0x00
   45A9                   12468 __str_37:
   45A9 64 65 74 65 63 74 12469 	.ascii "detecting ya vdp type..."
        69 6E 67 20 79 61
        20 76 64 70 20 74
        79 70 65 2E 2E 2E
   45C1 0D                12470 	.db 0x0D
   45C2 0A                12471 	.db 0x0A
   45C3 00                12472 	.db 0x00
   45C4                   12473 __str_38:
   45C4 76 64 70 32 20 66 12474 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   45DF 0D                12475 	.db 0x0D
   45E0 0A                12476 	.db 0x0A
   45E1 00                12477 	.db 0x00
   45E2                   12478 __str_39:
   45E2 20 76 64 70 31 20 12479 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   45EE 0D                12480 	.db 0x0D
   45EF 0A                12481 	.db 0x0A
   45F0 53 6F 72 72 79 2C 12482 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   461E 20 56 52 41 4D 2E 12483 	.ascii " VRAM."
   4624 0D                12484 	.db 0x0D
   4625 0A                12485 	.db 0x0A
   4626 00                12486 	.db 0x00
   4627                   12487 __str_40:
   4627 54 57 49 53 54 45 12488 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   4632 00                12489 	.db 0x00
   4633                   12490 __str_41:
   4633 4C 46 20 20 20 20 12491 	.ascii "LF      PL5"
        20 20 50 4C 35
   463E 00                12492 	.db 0x00
   463F                   12493 __str_42:
   463F 42 4F 58 45 53 20 12494 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   464A 00                12495 	.db 0x00
   464B                   12496 __str_43:
   464B 42 55 4C 42 53 20 12497 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   4656 00                12498 	.db 0x00
   4657                   12499 __str_44:
   4657 43 52 45 44 49 54 12500 	.ascii "CREDIT1 PL6"
        31 20 50 4C 36
   4662 00                12501 	.db 0x00
   4663                   12502 __str_45:
   4663 61 6C 6C 20 67 6F 12503 	.ascii "all good, starting the demo!"
        6F 64 2C 20 73 74
        61 72 74 69 6E 67
        20 74 68 65 20 64
        65 6D 6F 21
   467F 0D                12504 	.db 0x0D
   4680 0A                12505 	.db 0x0A
   4681 00                12506 	.db 0x00
   4682                   12507 __str_46:
   4682 42 55 4C 42 53 20 12508 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   468D 00                12509 	.db 0x00
   468E                   12510 __str_47:
   468E 54 57 49 53 54 45 12511 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   4699 00                12512 	.db 0x00
   469A                   12513 __str_48:
   469A 42 4F 58 45 53 20 12514 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   46A5 00                12515 	.db 0x00
   46A6                   12516 __str_49:
   46A6 44 53 53 4C 4F 47 12517 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   46B1 00                12518 	.db 0x00
   46B2                   12519 __str_50:
   46B2 44 53 53 4C 4F 47 12520 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   46BD 00                12521 	.db 0x00
                          12522 	.area _CODE
                          12523 	.area _CABS
