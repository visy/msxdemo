                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Thu Mar  1 20:18:54 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _tritiles
                             15 	.globl _drawtilescreen
                             16 	.globl _drawtritile
                             17 	.globl _boxes
                             18 	.globl _drawbox
                             19 	.globl _animplay
                             20 	.globl _bulbs
                             21 	.globl _twister
                             22 	.globl _font
                             23 	.globl _drawsine
                             24 	.globl _drawstr
                             25 	.globl _do_letter_tall
                             26 	.globl _do_letter
                             27 	.globl _raster_effu
                             28 	.globl _do_blocks
                             29 	.globl _do_ymmm
                             30 	.globl _fadein
                             31 	.globl _pck_load
                             32 	.globl _raw_load
                             33 	.globl _pause
                             34 	.globl _pal_load
                             35 	.globl _scratch_clear
                             36 	.globl _ge5_load
                             37 	.globl _color_isr
                             38 	.globl _my_isr
                             39 	.globl _isNthBitSet
                             40 	.globl _scenetimings
                             41 	.globl _scenepointers
                             42 	.globl _timeindex
                             43 	.globl _sceneindex
                             44 	.globl _triframes
                             45 	.globl _tripaltick
                             46 	.globl _tripal
                             47 	.globl _tri_inited
                             48 	.globl _prevbox_of
                             49 	.globl _boxes_of
                             50 	.globl _pbt
                             51 	.globl _pbx
                             52 	.globl _bonc
                             53 	.globl _bo
                             54 	.globl _bt
                             55 	.globl _by
                             56 	.globl _bx
                             57 	.globl _boxi
                             58 	.globl _boxes_y
                             59 	.globl _boxes_x
                             60 	.globl _prevy
                             61 	.globl _prevx
                             62 	.globl _buffer
                             63 	.globl _boxes_init
                             64 	.globl _anim_init
                             65 	.globl _enderdir
                             66 	.globl _ender
                             67 	.globl _ff2
                             68 	.globl _ff1
                             69 	.globl _bulbflipper
                             70 	.globl _twinited
                             71 	.globl _ff
                             72 	.globl _ly
                             73 	.globl _lx
                             74 	.globl _linenum
                             75 	.globl _flof
                             76 	.globl _btab
                             77 	.globl _bty
                             78 	.globl _btx
                             79 	.globl _bsy
                             80 	.globl _bsx
                             81 	.globl _block_init
                             82 	.globl _cc
                             83 	.globl _yofff
                             84 	.globl _cmd
                             85 	.globl _tick
                             86 	.globl _vbicount
                             87 	.globl _boxes_palette
                             88 	.globl _tf_palette
                             89 	.globl _twister_palette
                             90 	.globl _block_palette
                             91 	.globl _cur_palette
                             92 	.globl _scratch
                             93 	.globl _packbuffer
                             94 	.globl _tri_lookup_y
                             95 	.globl _tri_lookup_x
                             96 	.globl _sintab
                             97 	.globl _font_w
                             98 	.globl _font_y
                             99 	.globl _font_x
                            100 	.globl _tri_side2
                            101 	.globl _tri_side1
                            102 	.globl _tri_dia
                            103 	.globl _tri_up
                            104 	.globl _tri_center
                            105 	.globl _sintabx
                            106 ;--------------------------------------------------------
                            107 ; special function registers
                            108 ;--------------------------------------------------------
                            109 ;--------------------------------------------------------
                            110 ;  ram data
                            111 ;--------------------------------------------------------
                            112 	.area _DATA
   0000                     113 _sintab::
   0000                     114 	.ds 256
   0100                     115 _tri_lookup_x::
   0100                     116 	.ds 32
   0120                     117 _tri_lookup_y::
   0120                     118 	.ds 64
   0160                     119 _packbuffer::
   0160                     120 	.ds 16000
   3FE0                     121 _scratch::
   3FE0                     122 	.ds 128
   4060                     123 _cur_palette::
   4060                     124 	.ds 32
   4080                     125 _block_palette::
   4080                     126 	.ds 32
   40A0                     127 _twister_palette::
   40A0                     128 	.ds 32
   40C0                     129 _tf_palette::
   40C0                     130 	.ds 32
   40E0                     131 _boxes_palette::
   40E0                     132 	.ds 32
   4100                     133 _vbicount::
   4100                     134 	.ds 2
   4102                     135 _tick::
   4102                     136 	.ds 2
   4104                     137 _cmd::
   4104                     138 	.ds 15
   4113                     139 _isNthBitSet_mask_1_1:
   4113                     140 	.ds 8
   411B                     141 _yofff::
   411B                     142 	.ds 1
   411C                     143 _cc::
   411C                     144 	.ds 1
   411D                     145 _flipper:
   411D                     146 	.ds 2
   411F                     147 _ymmmf:
   411F                     148 	.ds 2
   4121                     149 _block_init::
   4121                     150 	.ds 1
   4122                     151 _bsx::
   4122                     152 	.ds 2
   4124                     153 _bsy::
   4124                     154 	.ds 2
   4126                     155 _btx::
   4126                     156 	.ds 2
   4128                     157 _bty::
   4128                     158 	.ds 2
   412A                     159 _btab::
   412A                     160 	.ds 32
   414A                     161 _flof::
   414A                     162 	.ds 2
   414C                     163 _linenum::
   414C                     164 	.ds 2
   414E                     165 _lx::
   414E                     166 	.ds 1
   414F                     167 _ly::
   414F                     168 	.ds 1
   4150                     169 _ff::
   4150                     170 	.ds 2
   4152                     171 _twinited::
   4152                     172 	.ds 2
   4154                     173 _bulbflipper::
   4154                     174 	.ds 2
   4156                     175 _ff1::
   4156                     176 	.ds 2
   4158                     177 _ff2::
   4158                     178 	.ds 2
   415A                     179 _ender::
   415A                     180 	.ds 2
   415C                     181 _enderdir::
   415C                     182 	.ds 2
   415E                     183 _xo:
   415E                     184 	.ds 2
   4160                     185 _yo:
   4160                     186 	.ds 2
   4162                     187 _po:
   4162                     188 	.ds 2
   4164                     189 _frames:
   4164                     190 	.ds 2
   4166                     191 _anim_init::
   4166                     192 	.ds 2
   4168                     193 _boxes_init::
   4168                     194 	.ds 1
   4169                     195 _buffer::
   4169                     196 	.ds 2
   416B                     197 _prevx::
   416B                     198 	.ds 2
   416D                     199 _prevy::
   416D                     200 	.ds 2
   416F                     201 _boxes_x::
   416F                     202 	.ds 5
   4174                     203 _boxes_y::
   4174                     204 	.ds 10
   417E                     205 _boxi::
   417E                     206 	.ds 1
   417F                     207 _bx::
   417F                     208 	.ds 2
   4181                     209 _by::
   4181                     210 	.ds 2
   4183                     211 _bt::
   4183                     212 	.ds 2
   4185                     213 _bo::
   4185                     214 	.ds 2
   4187                     215 _bonc::
   4187                     216 	.ds 2
   4189                     217 _pbx::
   4189                     218 	.ds 2
   418B                     219 _pbt::
   418B                     220 	.ds 2
   418D                     221 _boxes_of::
   418D                     222 	.ds 10
   4197                     223 _prevbox_of::
   4197                     224 	.ds 1
   4198                     225 _tri_inited::
   4198                     226 	.ds 1
   4199                     227 _tripal::
   4199                     228 	.ds 9
   41A2                     229 _tripaltick::
   41A2                     230 	.ds 1
   41A3                     231 _triframes::
   41A3                     232 	.ds 2
   41A5                     233 _sceneindex::
   41A5                     234 	.ds 2
   41A7                     235 _timeindex::
   41A7                     236 	.ds 2
   41A9                     237 _scenepointers::
   41A9                     238 	.ds 12
   41B5                     239 _scenetimings::
   41B5                     240 	.ds 24
                            241 ;--------------------------------------------------------
                            242 ; overlayable items in  ram 
                            243 ;--------------------------------------------------------
                            244 	.area _OVERLAY
                            245 ;--------------------------------------------------------
                            246 ; external initialized ram data
                            247 ;--------------------------------------------------------
                            248 ;--------------------------------------------------------
                            249 ; global & static initialisations
                            250 ;--------------------------------------------------------
                            251 	.area _HOME
                            252 	.area _GSINIT
                            253 	.area _GSFINAL
                            254 	.area _GSINIT
                            255 ;demo.c:131: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r13s41            256 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            257 	call	__initrleblock
   0006 08                  258 	.db	8
   0007 01 02 04 08 10 20   259 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  260 	.db	0
                            261 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            262 	ld	hl,#_sintab
   0013 CDr00s00            263 	call	__initrleblock
   0016 3B                  264 	.db	59
   0017 00 03 06 09 0C 0F   265 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   266 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   267 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   268 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   269 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   270 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   271 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            272 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               273 	.db	#-5,#0x7E
   0054 01                  274 	.db	1
   0055 7F                  275 	.db	0x7F
   0056 FB 7E               276 	.db	#-5,#0x7E
   0058 75                  277 	.db	117
   0059 7D 7D 7C 7B 7B 7A   278 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   279 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   280 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   281 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   282 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   283 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   284 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   285 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   286 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   287 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   288 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   289 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   290 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   291 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      292 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               293 	.db	#-5,#0x82
   00D0 01                  294 	.db	1
   00D1 81                  295 	.db	0x81
   00D2 FB 82               296 	.db	#-5,#0x82
   00D4 3A                  297 	.db	58
   00D5 83 83 84 85 85 86   298 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   299 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   300 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   301 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   302 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   303 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   304 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               305 	.db	0xFA, 0xFD
   010F 00                  306 	.db	0
                            307 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            308 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            309 	call	__initrleblock
   0116 E0 00               310 	.db	#-32,#0x00
   0118 00                  311 	.db	0
                            312 ;demo.c:114: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            313 	ld	hl,#_tri_lookup_y
   011C CDr00s00            314 	call	__initrleblock
   011F C0 00               315 	.db	#-64,#0x00
   0121 00                  316 	.db	0
                            317 ;demo.c:116: uint8_t packbuffer[16000] = {0};
   0122 21r60s01            318 	ld	hl,#_packbuffer
   0125 CDr00s00            319 	call	__initrleblock
   0128 81 00               320 	.db	#-127,#0x00
   012A 81 00               321 	.db	#-127,#0x00
   012C 81 00               322 	.db	#-127,#0x00
   012E 81 00               323 	.db	#-127,#0x00
   0130 81 00               324 	.db	#-127,#0x00
   0132 81 00               325 	.db	#-127,#0x00
   0134 81 00               326 	.db	#-127,#0x00
   0136 81 00               327 	.db	#-127,#0x00
   0138 81 00               328 	.db	#-127,#0x00
   013A 81 00               329 	.db	#-127,#0x00
   013C 81 00               330 	.db	#-127,#0x00
   013E 81 00               331 	.db	#-127,#0x00
   0140 81 00               332 	.db	#-127,#0x00
   0142 81 00               333 	.db	#-127,#0x00
   0144 81 00               334 	.db	#-127,#0x00
   0146 81 00               335 	.db	#-127,#0x00
   0148 81 00               336 	.db	#-127,#0x00
   014A 81 00               337 	.db	#-127,#0x00
   014C 81 00               338 	.db	#-127,#0x00
   014E 81 00               339 	.db	#-127,#0x00
   0150 81 00               340 	.db	#-127,#0x00
   0152 81 00               341 	.db	#-127,#0x00
   0154 81 00               342 	.db	#-127,#0x00
   0156 81 00               343 	.db	#-127,#0x00
   0158 81 00               344 	.db	#-127,#0x00
   015A 81 00               345 	.db	#-127,#0x00
   015C 81 00               346 	.db	#-127,#0x00
   015E 81 00               347 	.db	#-127,#0x00
   0160 81 00               348 	.db	#-127,#0x00
   0162 81 00               349 	.db	#-127,#0x00
   0164 81 00               350 	.db	#-127,#0x00
   0166 81 00               351 	.db	#-127,#0x00
   0168 81 00               352 	.db	#-127,#0x00
   016A 81 00               353 	.db	#-127,#0x00
   016C 81 00               354 	.db	#-127,#0x00
   016E 81 00               355 	.db	#-127,#0x00
   0170 81 00               356 	.db	#-127,#0x00
   0172 81 00               357 	.db	#-127,#0x00
   0174 81 00               358 	.db	#-127,#0x00
   0176 81 00               359 	.db	#-127,#0x00
   0178 81 00               360 	.db	#-127,#0x00
   017A 81 00               361 	.db	#-127,#0x00
   017C 81 00               362 	.db	#-127,#0x00
   017E 81 00               363 	.db	#-127,#0x00
   0180 81 00               364 	.db	#-127,#0x00
   0182 81 00               365 	.db	#-127,#0x00
   0184 81 00               366 	.db	#-127,#0x00
   0186 81 00               367 	.db	#-127,#0x00
   0188 81 00               368 	.db	#-127,#0x00
   018A 81 00               369 	.db	#-127,#0x00
   018C 81 00               370 	.db	#-127,#0x00
   018E 81 00               371 	.db	#-127,#0x00
   0190 81 00               372 	.db	#-127,#0x00
   0192 81 00               373 	.db	#-127,#0x00
   0194 81 00               374 	.db	#-127,#0x00
   0196 81 00               375 	.db	#-127,#0x00
   0198 81 00               376 	.db	#-127,#0x00
   019A 81 00               377 	.db	#-127,#0x00
   019C 81 00               378 	.db	#-127,#0x00
   019E 81 00               379 	.db	#-127,#0x00
   01A0 81 00               380 	.db	#-127,#0x00
   01A2 81 00               381 	.db	#-127,#0x00
   01A4 81 00               382 	.db	#-127,#0x00
   01A6 81 00               383 	.db	#-127,#0x00
   01A8 81 00               384 	.db	#-127,#0x00
   01AA 81 00               385 	.db	#-127,#0x00
   01AC 81 00               386 	.db	#-127,#0x00
   01AE 81 00               387 	.db	#-127,#0x00
   01B0 81 00               388 	.db	#-127,#0x00
   01B2 81 00               389 	.db	#-127,#0x00
   01B4 81 00               390 	.db	#-127,#0x00
   01B6 81 00               391 	.db	#-127,#0x00
   01B8 81 00               392 	.db	#-127,#0x00
   01BA 81 00               393 	.db	#-127,#0x00
   01BC 81 00               394 	.db	#-127,#0x00
   01BE 81 00               395 	.db	#-127,#0x00
   01C0 81 00               396 	.db	#-127,#0x00
   01C2 81 00               397 	.db	#-127,#0x00
   01C4 81 00               398 	.db	#-127,#0x00
   01C6 81 00               399 	.db	#-127,#0x00
   01C8 81 00               400 	.db	#-127,#0x00
   01CA 81 00               401 	.db	#-127,#0x00
   01CC 81 00               402 	.db	#-127,#0x00
   01CE 81 00               403 	.db	#-127,#0x00
   01D0 81 00               404 	.db	#-127,#0x00
   01D2 81 00               405 	.db	#-127,#0x00
   01D4 81 00               406 	.db	#-127,#0x00
   01D6 81 00               407 	.db	#-127,#0x00
   01D8 81 00               408 	.db	#-127,#0x00
   01DA 81 00               409 	.db	#-127,#0x00
   01DC 81 00               410 	.db	#-127,#0x00
   01DE 81 00               411 	.db	#-127,#0x00
   01E0 81 00               412 	.db	#-127,#0x00
   01E2 81 00               413 	.db	#-127,#0x00
   01E4 81 00               414 	.db	#-127,#0x00
   01E6 81 00               415 	.db	#-127,#0x00
   01E8 81 00               416 	.db	#-127,#0x00
   01EA 81 00               417 	.db	#-127,#0x00
   01EC 81 00               418 	.db	#-127,#0x00
   01EE 81 00               419 	.db	#-127,#0x00
   01F0 81 00               420 	.db	#-127,#0x00
   01F2 81 00               421 	.db	#-127,#0x00
   01F4 81 00               422 	.db	#-127,#0x00
   01F6 81 00               423 	.db	#-127,#0x00
   01F8 81 00               424 	.db	#-127,#0x00
   01FA 81 00               425 	.db	#-127,#0x00
   01FC 81 00               426 	.db	#-127,#0x00
   01FE 81 00               427 	.db	#-127,#0x00
   0200 81 00               428 	.db	#-127,#0x00
   0202 81 00               429 	.db	#-127,#0x00
   0204 81 00               430 	.db	#-127,#0x00
   0206 81 00               431 	.db	#-127,#0x00
   0208 81 00               432 	.db	#-127,#0x00
   020A 81 00               433 	.db	#-127,#0x00
   020C 81 00               434 	.db	#-127,#0x00
   020E 81 00               435 	.db	#-127,#0x00
   0210 81 00               436 	.db	#-127,#0x00
   0212 81 00               437 	.db	#-127,#0x00
   0214 81 00               438 	.db	#-127,#0x00
   0216 81 00               439 	.db	#-127,#0x00
   0218 81 00               440 	.db	#-127,#0x00
   021A 81 00               441 	.db	#-127,#0x00
   021C 81 00               442 	.db	#-127,#0x00
   021E 81 00               443 	.db	#-127,#0x00
   0220 81 00               444 	.db	#-127,#0x00
   0222 83 00               445 	.db	#-125,#0x00
   0224 00                  446 	.db	0
                            447 ;demo.c:125: volatile int vbicount=0;
   0225 FD 21r00s41         448 	ld	iy,#_vbicount
   0229 FD 36 00 00         449 	ld	0 (iy),#0x00
   022D FD 21r00s41         450 	ld	iy,#_vbicount
   0231 FD 36 01 00         451 	ld	1 (iy),#0x00
                            452 ;demo.c:126: volatile int tick=0;
   0235 FD 21r02s41         453 	ld	iy,#_tick
   0239 FD 36 00 00         454 	ld	0 (iy),#0x00
   023D FD 21r02s41         455 	ld	iy,#_tick
   0241 FD 36 01 00         456 	ld	1 (iy),#0x00
                            457 ;demo.c:326: uint8_t yofff = 0;
   0245 FD 21r1Bs41         458 	ld	iy,#_yofff
   0249 FD 36 00 00         459 	ld	0 (iy),#0x00
                            460 ;demo.c:327: uint8_t cc = 0;
   024D FD 21r1Cs41         461 	ld	iy,#_cc
   0251 FD 36 00 00         462 	ld	0 (iy),#0x00
                            463 ;demo.c:328: static int flipper = 0;
   0255 FD 21r1Ds41         464 	ld	iy,#_flipper
   0259 FD 36 00 00         465 	ld	0 (iy),#0x00
   025D FD 21r1Ds41         466 	ld	iy,#_flipper
   0261 FD 36 01 00         467 	ld	1 (iy),#0x00
                            468 ;demo.c:329: static int ymmmf = 0;
   0265 FD 21r1Fs41         469 	ld	iy,#_ymmmf
   0269 FD 36 00 00         470 	ld	0 (iy),#0x00
   026D FD 21r1Fs41         471 	ld	iy,#_ymmmf
   0271 FD 36 01 00         472 	ld	1 (iy),#0x00
                            473 ;demo.c:360: char block_init = 0;
   0275 FD 21r21s41         474 	ld	iy,#_block_init
   0279 FD 36 00 00         475 	ld	0 (iy),#0x00
                            476 ;demo.c:362: int bsx = 0;
   027D FD 21r22s41         477 	ld	iy,#_bsx
   0281 FD 36 00 00         478 	ld	0 (iy),#0x00
   0285 FD 21r22s41         479 	ld	iy,#_bsx
   0289 FD 36 01 00         480 	ld	1 (iy),#0x00
                            481 ;demo.c:363: int bsy = 0;
   028D FD 21r24s41         482 	ld	iy,#_bsy
   0291 FD 36 00 00         483 	ld	0 (iy),#0x00
   0295 FD 21r24s41         484 	ld	iy,#_bsy
   0299 FD 36 01 00         485 	ld	1 (iy),#0x00
                            486 ;demo.c:364: int btx = 0;
   029D FD 21r26s41         487 	ld	iy,#_btx
   02A1 FD 36 00 00         488 	ld	0 (iy),#0x00
   02A5 FD 21r26s41         489 	ld	iy,#_btx
   02A9 FD 36 01 00         490 	ld	1 (iy),#0x00
                            491 ;demo.c:365: int bty = 0;
   02AD FD 21r28s41         492 	ld	iy,#_bty
   02B1 FD 36 00 00         493 	ld	0 (iy),#0x00
   02B5 FD 21r28s41         494 	ld	iy,#_bty
   02B9 FD 36 01 00         495 	ld	1 (iy),#0x00
                            496 ;demo.c:367: int btab[16] = {0};
   02BD 21r2As41            497 	ld	hl,#_btab
   02C0 CDr00s00            498 	call	__initrleblock
   02C3 E0 00               499 	.db	#-32,#0x00
   02C5 00                  500 	.db	0
                            501 ;demo.c:369: int flof = 0;
   02C6 FD 21r4As41         502 	ld	iy,#_flof
   02CA FD 36 00 00         503 	ld	0 (iy),#0x00
   02CE FD 21r4As41         504 	ld	iy,#_flof
   02D2 FD 36 01 00         505 	ld	1 (iy),#0x00
                            506 ;demo.c:418: int linenum = 0;
   02D6 FD 21r4Cs41         507 	ld	iy,#_linenum
   02DA FD 36 00 00         508 	ld	0 (iy),#0x00
   02DE FD 21r4Cs41         509 	ld	iy,#_linenum
   02E2 FD 36 01 00         510 	ld	1 (iy),#0x00
                            511 ;demo.c:476: uint8_t lx = 0;
   02E6 FD 21r4Es41         512 	ld	iy,#_lx
   02EA FD 36 00 00         513 	ld	0 (iy),#0x00
                            514 ;demo.c:477: uint8_t ly = 0;
   02EE FD 21r4Fs41         515 	ld	iy,#_ly
   02F2 FD 36 00 00         516 	ld	0 (iy),#0x00
                            517 ;demo.c:540: int ff = 0;
   02F6 FD 21r50s41         518 	ld	iy,#_ff
   02FA FD 36 00 00         519 	ld	0 (iy),#0x00
   02FE FD 21r50s41         520 	ld	iy,#_ff
   0302 FD 36 01 00         521 	ld	1 (iy),#0x00
                            522 ;demo.c:541: int twinited = 0;
   0306 FD 21r52s41         523 	ld	iy,#_twinited
   030A FD 36 00 00         524 	ld	0 (iy),#0x00
   030E FD 21r52s41         525 	ld	iy,#_twinited
   0312 FD 36 01 00         526 	ld	1 (iy),#0x00
                            527 ;demo.c:590: int bulbflipper = 1;
   0316 FD 21r54s41         528 	ld	iy,#_bulbflipper
   031A FD 36 00 01         529 	ld	0 (iy),#0x01
   031E FD 21r54s41         530 	ld	iy,#_bulbflipper
   0322 FD 36 01 00         531 	ld	1 (iy),#0x00
                            532 ;demo.c:592: int ff1,ff2 = 0;
   0326 FD 21r58s41         533 	ld	iy,#_ff2
   032A FD 36 00 00         534 	ld	0 (iy),#0x00
   032E FD 21r58s41         535 	ld	iy,#_ff2
   0332 FD 36 01 00         536 	ld	1 (iy),#0x00
                            537 ;demo.c:593: int ender = 212;
   0336 FD 21r5As41         538 	ld	iy,#_ender
   033A FD 36 00 D4         539 	ld	0 (iy),#0xD4
   033E FD 21r5As41         540 	ld	iy,#_ender
   0342 FD 36 01 00         541 	ld	1 (iy),#0x00
                            542 ;demo.c:594: int enderdir = -1;
   0346 FD 21r5Cs41         543 	ld	iy,#_enderdir
   034A FD 36 00 FF         544 	ld	0 (iy),#0xFF
   034E FD 21r5Cs41         545 	ld	iy,#_enderdir
   0352 FD 36 01 FF         546 	ld	1 (iy),#0xFF
                            547 ;demo.c:651: static int xo = 0;
   0356 FD 21r5Es41         548 	ld	iy,#_xo
   035A FD 36 00 00         549 	ld	0 (iy),#0x00
   035E FD 21r5Es41         550 	ld	iy,#_xo
   0362 FD 36 01 00         551 	ld	1 (iy),#0x00
                            552 ;demo.c:652: static int yo = 0;
   0366 FD 21r60s41         553 	ld	iy,#_yo
   036A FD 36 00 00         554 	ld	0 (iy),#0x00
   036E FD 21r60s41         555 	ld	iy,#_yo
   0372 FD 36 01 00         556 	ld	1 (iy),#0x00
                            557 ;demo.c:653: static int po = 0;
   0376 FD 21r62s41         558 	ld	iy,#_po
   037A FD 36 00 00         559 	ld	0 (iy),#0x00
   037E FD 21r62s41         560 	ld	iy,#_po
   0382 FD 36 01 00         561 	ld	1 (iy),#0x00
                            562 ;demo.c:654: static int frames = 0;
   0386 FD 21r64s41         563 	ld	iy,#_frames
   038A FD 36 00 00         564 	ld	0 (iy),#0x00
   038E FD 21r64s41         565 	ld	iy,#_frames
   0392 FD 36 01 00         566 	ld	1 (iy),#0x00
                            567 ;demo.c:656: int anim_init = 0;
   0396 FD 21r66s41         568 	ld	iy,#_anim_init
   039A FD 36 00 00         569 	ld	0 (iy),#0x00
   039E FD 21r66s41         570 	ld	iy,#_anim_init
   03A2 FD 36 01 00         571 	ld	1 (iy),#0x00
                            572 ;demo.c:749: uint8_t boxes_init = 0;
   03A6 FD 21r68s41         573 	ld	iy,#_boxes_init
   03AA FD 36 00 00         574 	ld	0 (iy),#0x00
                            575 ;demo.c:750: int buffer = 1;
   03AE FD 21r69s41         576 	ld	iy,#_buffer
   03B2 FD 36 00 01         577 	ld	0 (iy),#0x01
   03B6 FD 21r69s41         578 	ld	iy,#_buffer
   03BA FD 36 01 00         579 	ld	1 (iy),#0x00
                            580 ;demo.c:751: int prevx = -1;
   03BE FD 21r6Bs41         581 	ld	iy,#_prevx
   03C2 FD 36 00 FF         582 	ld	0 (iy),#0xFF
   03C6 FD 21r6Bs41         583 	ld	iy,#_prevx
   03CA FD 36 01 FF         584 	ld	1 (iy),#0xFF
                            585 ;demo.c:753: uint8_t boxes_x[5] = {0,36,0,36,0};
   03CE 21r6Fs41            586 	ld	hl,#_boxes_x
   03D1 CDr00s00            587 	call	__initrleblock
   03D4 05                  588 	.db	5
   03D5 00 24 00 24 00      589 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   03DA 00                  590 	.db	0
                            591 ;demo.c:754: int boxes_y[5] = {768,768,768+36,768+36,0};
   03DB 21r74s41            592 	ld	hl,#_boxes_y
   03DE CDr00s00            593 	call	__initrleblock
   03E1 0A                  594 	.db	10
   03E2 00 03 00 03 24 03   595 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   03EA 00 00               596 	.db	0x00, 0x00
   03EC 00                  597 	.db	0
                            598 ;demo.c:755: uint8_t boxi = 0;
   03ED FD 21r7Es41         599 	ld	iy,#_boxi
   03F1 FD 36 00 00         600 	ld	0 (iy),#0x00
                            601 ;demo.c:756: int bx = 220;
   03F5 FD 21r7Fs41         602 	ld	iy,#_bx
   03F9 FD 36 00 DC         603 	ld	0 (iy),#0xDC
   03FD FD 21r7Fs41         604 	ld	iy,#_bx
   0401 FD 36 01 00         605 	ld	1 (iy),#0x00
                            606 ;demo.c:757: int by = 84;
   0405 FD 21r81s41         607 	ld	iy,#_by
   0409 FD 36 00 54         608 	ld	0 (iy),#0x54
   040D FD 21r81s41         609 	ld	iy,#_by
   0411 FD 36 01 00         610 	ld	1 (iy),#0x00
                            611 ;demo.c:775: int bt = 0;
   0415 FD 21r83s41         612 	ld	iy,#_bt
   0419 FD 36 00 00         613 	ld	0 (iy),#0x00
   041D FD 21r83s41         614 	ld	iy,#_bt
   0421 FD 36 01 00         615 	ld	1 (iy),#0x00
                            616 ;demo.c:776: int bo = 0;
   0425 FD 21r85s41         617 	ld	iy,#_bo
   0429 FD 36 00 00         618 	ld	0 (iy),#0x00
   042D FD 21r85s41         619 	ld	iy,#_bo
   0431 FD 36 01 00         620 	ld	1 (iy),#0x00
                            621 ;demo.c:778: int bonc = 0;
   0435 FD 21r87s41         622 	ld	iy,#_bonc
   0439 FD 36 00 00         623 	ld	0 (iy),#0x00
   043D FD 21r87s41         624 	ld	iy,#_bonc
   0441 FD 36 01 00         625 	ld	1 (iy),#0x00
                            626 ;demo.c:779: int pbx = 0;
   0445 FD 21r89s41         627 	ld	iy,#_pbx
   0449 FD 36 00 00         628 	ld	0 (iy),#0x00
   044D FD 21r89s41         629 	ld	iy,#_pbx
   0451 FD 36 01 00         630 	ld	1 (iy),#0x00
                            631 ;demo.c:780: int pbt = 0;
   0455 FD 21r8Bs41         632 	ld	iy,#_pbt
   0459 FD 36 00 00         633 	ld	0 (iy),#0x00
   045D FD 21r8Bs41         634 	ld	iy,#_pbt
   0461 FD 36 01 00         635 	ld	1 (iy),#0x00
                            636 ;demo.c:782: int boxes_of[5] = {0,0,6,0,0};
   0465 21r8Ds41            637 	ld	hl,#_boxes_of
   0468 CDr00s00            638 	call	__initrleblock
   046B 05                  639 	.db	5
   046C 00 00 00 00 06      640 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0471 FB 00               641 	.db	#-5,#0x00
   0473 00                  642 	.db	0
                            643 ;demo.c:783: uint8_t prevbox_of = 0;
   0474 FD 21r97s41         644 	ld	iy,#_prevbox_of
   0478 FD 36 00 00         645 	ld	0 (iy),#0x00
                            646 ;demo.c:898: uint8_t tri_inited = 0;
   047C FD 21r98s41         647 	ld	iy,#_tri_inited
   0480 FD 36 00 00         648 	ld	0 (iy),#0x00
                            649 ;demo.c:926: char tripal[9] = {
   0484 21r99s41            650 	ld	hl,#_tripal
   0487 CDr00s00            651 	call	__initrleblock
   048A 09                  652 	.db	9
   048B 02 02 01 01 02 03   653 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0493 02                  654 	.db	0x02
   0494 00                  655 	.db	0
                            656 ;demo.c:932: uint8_t tripaltick = 0;
   0495 FD 21rA2s41         657 	ld	iy,#_tripaltick
   0499 FD 36 00 00         658 	ld	0 (iy),#0x00
                            659 ;demo.c:934: int triframes = 0;
   049D FD 21rA3s41         660 	ld	iy,#_triframes
   04A1 FD 36 00 00         661 	ld	0 (iy),#0x00
   04A5 FD 21rA3s41         662 	ld	iy,#_triframes
   04A9 FD 36 01 00         663 	ld	1 (iy),#0x00
                            664 ;demo.c:1039: int sceneindex = 0;
   04AD FD 21rA5s41         665 	ld	iy,#_sceneindex
   04B1 FD 36 00 00         666 	ld	0 (iy),#0x00
   04B5 FD 21rA5s41         667 	ld	iy,#_sceneindex
   04B9 FD 36 01 00         668 	ld	1 (iy),#0x00
                            669 ;demo.c:1040: int timeindex = 0;
   04BD FD 21rA7s41         670 	ld	iy,#_timeindex
   04C1 FD 36 00 00         671 	ld	0 (iy),#0x00
   04C5 FD 21rA7s41         672 	ld	iy,#_timeindex
   04C9 FD 36 01 00         673 	ld	1 (iy),#0x00
                            674 ;demo.c:1042: void (*scenepointers[6])() = {
   04CD 21rA9s41            675 	ld	hl,#_scenepointers
   04D0 36r27               676 	ld	(hl),#<_fadein
   04D2 23                  677 	inc	hl
   04D3 36s0A               678 	ld	(hl),#>_fadein
   04D5 01rABs41            679 	ld	bc,#_scenepointers + 2
   04D8 69                  680 	ld	l,c
   04D9 60                  681 	ld	h,b
   04DA 36r8F               682 	ld	(hl),#<_bulbs
   04DC 23                  683 	inc	hl
   04DD 36s13               684 	ld	(hl),#>_bulbs
   04DF 21rADs41            685 	ld	hl, #_scenepointers + 4
   04E2 36r23               686 	ld	(hl),#<_twister
   04E4 23                  687 	inc	hl
   04E5 36s12               688 	ld	(hl),#>_twister
   04E7 01rAFs41            689 	ld	bc,#_scenepointers + 6
   04EA 69                  690 	ld	l,c
   04EB 60                  691 	ld	h,b
   04EC 36r13               692 	ld	(hl),#<_boxes
   04EE 23                  693 	inc	hl
   04EF 36s19               694 	ld	(hl),#>_boxes
   04F1 21rB1s41            695 	ld	hl, #_scenepointers + 8
   04F4 36r8B               696 	ld	(hl),#<_tritiles
   04F6 23                  697 	inc	hl
   04F7 36s1E               698 	ld	(hl),#>_tritiles
   04F9 01rB3s41            699 	ld	bc,#_scenepointers + 10
   04FC 69                  700 	ld	l,c
   04FD 60                  701 	ld	h,b
   04FE 36rDF               702 	ld	(hl),#<_animplay
   0500 23                  703 	inc	hl
   0501 36s15               704 	ld	(hl),#>_animplay
                            705 ;demo.c:1051: int scenetimings[12] = {
   0503 21rB5s41            706 	ld	hl,#_scenetimings
   0506 CDr00s00            707 	call	__initrleblock
   0509 18                  708 	.db	24
   050A 00 00 40 00 C0 00   709 	.db	0x00, 0x00, 0x40, 0x00, 0xC0, 0x00, 0x20, 0x03
        20 03
   0512 20 03 DC 05 DC 05   710 	.db	0x20, 0x03, 0xDC, 0x05, 0xDC, 0x05, 0x50, 0x14
        50 14
   051A 98 08 A0 0F A0 0F   711 	.db	0x98, 0x08, 0xA0, 0x0F, 0xA0, 0x0F, 0x98, 0x3A
        98 3A
   0522 00                  712 	.db	0
                            713 ;--------------------------------------------------------
                            714 ; Home
                            715 ;--------------------------------------------------------
                            716 	.area _HOME
                            717 	.area _HOME
                            718 ;--------------------------------------------------------
                            719 ; code
                            720 ;--------------------------------------------------------
                            721 	.area _CODE
                            722 ;demo.c:130: int isNthBitSet (unsigned char c, int n) {
                            723 ;	---------------------------------
                            724 ; Function isNthBitSet
                            725 ; ---------------------------------
   0000                     726 _isNthBitSet_start::
   0000                     727 _isNthBitSet:
   0000 DD E5               728 	push	ix
   0002 DD 21 00 00         729 	ld	ix,#0
   0006 DD 39               730 	add	ix,sp
                            731 ;demo.c:132: return ((c & mask[n]) != 0);
   0008 3Er13               732 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            733 	add	a,5 (ix)
   000D 4F                  734 	ld	c,a
   000E 3Es41               735 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            736 	adc	a,6 (ix)
   0013 47                  737 	ld	b,a
   0014 0A                  738 	ld	a,(bc)
   0015 DD A6 04            739 	and	a,4 (ix)
   0018 20 04               740 	jr	NZ,00103$
   001A 3E 01               741 	ld	a,#0x01
   001C 18 01               742 	jr	00104$
   001E                     743 00103$:
   001E AF                  744 	xor	a,a
   001F                     745 00104$:
   001F B7                  746 	or	a,a
   0020 D6 01               747 	sub	a,#0x01
   0022 3E 00               748 	ld	a,#0x00
   0024 17                  749 	rla
   0025 4F                  750 	ld	c,a
   0026 69                  751 	ld	l,c
   0027 26 00               752 	ld	h,#0x00
   0029 DD E1               753 	pop	ix
   002B C9                  754 	ret
   002C                     755 _isNthBitSet_end::
   002C                     756 _sintabx:
   002C 78 00               757 	.dw #0x0078
   002E 7A 00               758 	.dw #0x007A
   0030 7D 00               759 	.dw #0x007D
   0032 80 00               760 	.dw #0x0080
   0034 83 00               761 	.dw #0x0083
   0036 86 00               762 	.dw #0x0086
   0038 89 00               763 	.dw #0x0089
   003A 8C 00               764 	.dw #0x008C
   003C 8F 00               765 	.dw #0x008F
   003E 92 00               766 	.dw #0x0092
   0040 95 00               767 	.dw #0x0095
   0042 98 00               768 	.dw #0x0098
   0044 9A 00               769 	.dw #0x009A
   0046 9D 00               770 	.dw #0x009D
   0048 A0 00               771 	.dw #0x00A0
   004A A3 00               772 	.dw #0x00A3
   004C A5 00               773 	.dw #0x00A5
   004E A8 00               774 	.dw #0x00A8
   0050 AB 00               775 	.dw #0x00AB
   0052 AD 00               776 	.dw #0x00AD
   0054 B0 00               777 	.dw #0x00B0
   0056 B3 00               778 	.dw #0x00B3
   0058 B5 00               779 	.dw #0x00B5
   005A B8 00               780 	.dw #0x00B8
   005C BA 00               781 	.dw #0x00BA
   005E BD 00               782 	.dw #0x00BD
   0060 BF 00               783 	.dw #0x00BF
   0062 C1 00               784 	.dw #0x00C1
   0064 C4 00               785 	.dw #0x00C4
   0066 C6 00               786 	.dw #0x00C6
   0068 C8 00               787 	.dw #0x00C8
   006A CA 00               788 	.dw #0x00CA
   006C CC 00               789 	.dw #0x00CC
   006E CE 00               790 	.dw #0x00CE
   0070 D0 00               791 	.dw #0x00D0
   0072 D2 00               792 	.dw #0x00D2
   0074 D4 00               793 	.dw #0x00D4
   0076 D6 00               794 	.dw #0x00D6
   0078 D8 00               795 	.dw #0x00D8
   007A DA 00               796 	.dw #0x00DA
   007C DB 00               797 	.dw #0x00DB
   007E DD 00               798 	.dw #0x00DD
   0080 DE 00               799 	.dw #0x00DE
   0082 E0 00               800 	.dw #0x00E0
   0084 E1 00               801 	.dw #0x00E1
   0086 E3 00               802 	.dw #0x00E3
   0088 E4 00               803 	.dw #0x00E4
   008A E5 00               804 	.dw #0x00E5
   008C E6 00               805 	.dw #0x00E6
   008E E7 00               806 	.dw #0x00E7
   0090 E8 00               807 	.dw #0x00E8
   0092 E9 00               808 	.dw #0x00E9
   0094 EA 00               809 	.dw #0x00EA
   0096 EB 00               810 	.dw #0x00EB
   0098 EC 00               811 	.dw #0x00EC
   009A ED 00               812 	.dw #0x00ED
   009C ED 00               813 	.dw #0x00ED
   009E EE 00               814 	.dw #0x00EE
   00A0 EE 00               815 	.dw #0x00EE
   00A2 EF 00               816 	.dw #0x00EF
   00A4 EF 00               817 	.dw #0x00EF
   00A6 EF 00               818 	.dw #0x00EF
   00A8 EF 00               819 	.dw #0x00EF
   00AA EF 00               820 	.dw #0x00EF
   00AC F0 00               821 	.dw #0x00F0
   00AE EF 00               822 	.dw #0x00EF
   00B0 EF 00               823 	.dw #0x00EF
   00B2 EF 00               824 	.dw #0x00EF
   00B4 EF 00               825 	.dw #0x00EF
   00B6 EF 00               826 	.dw #0x00EF
   00B8 EE 00               827 	.dw #0x00EE
   00BA EE 00               828 	.dw #0x00EE
   00BC ED 00               829 	.dw #0x00ED
   00BE ED 00               830 	.dw #0x00ED
   00C0 EC 00               831 	.dw #0x00EC
   00C2 EB 00               832 	.dw #0x00EB
   00C4 EA 00               833 	.dw #0x00EA
   00C6 E9 00               834 	.dw #0x00E9
   00C8 E8 00               835 	.dw #0x00E8
   00CA E7 00               836 	.dw #0x00E7
   00CC E6 00               837 	.dw #0x00E6
   00CE E5 00               838 	.dw #0x00E5
   00D0 E4 00               839 	.dw #0x00E4
   00D2 E3 00               840 	.dw #0x00E3
   00D4 E1 00               841 	.dw #0x00E1
   00D6 E0 00               842 	.dw #0x00E0
   00D8 DE 00               843 	.dw #0x00DE
   00DA DD 00               844 	.dw #0x00DD
   00DC DB 00               845 	.dw #0x00DB
   00DE DA 00               846 	.dw #0x00DA
   00E0 D8 00               847 	.dw #0x00D8
   00E2 D6 00               848 	.dw #0x00D6
   00E4 D4 00               849 	.dw #0x00D4
   00E6 D2 00               850 	.dw #0x00D2
   00E8 D0 00               851 	.dw #0x00D0
   00EA CE 00               852 	.dw #0x00CE
   00EC CC 00               853 	.dw #0x00CC
   00EE CA 00               854 	.dw #0x00CA
   00F0 C8 00               855 	.dw #0x00C8
   00F2 C6 00               856 	.dw #0x00C6
   00F4 C4 00               857 	.dw #0x00C4
   00F6 C1 00               858 	.dw #0x00C1
   00F8 BF 00               859 	.dw #0x00BF
   00FA BD 00               860 	.dw #0x00BD
   00FC BA 00               861 	.dw #0x00BA
   00FE B8 00               862 	.dw #0x00B8
   0100 B5 00               863 	.dw #0x00B5
   0102 B3 00               864 	.dw #0x00B3
   0104 B0 00               865 	.dw #0x00B0
   0106 AD 00               866 	.dw #0x00AD
   0108 AB 00               867 	.dw #0x00AB
   010A A8 00               868 	.dw #0x00A8
   010C A5 00               869 	.dw #0x00A5
   010E A3 00               870 	.dw #0x00A3
   0110 A0 00               871 	.dw #0x00A0
   0112 9D 00               872 	.dw #0x009D
   0114 9A 00               873 	.dw #0x009A
   0116 98 00               874 	.dw #0x0098
   0118 95 00               875 	.dw #0x0095
   011A 92 00               876 	.dw #0x0092
   011C 8F 00               877 	.dw #0x008F
   011E 8C 00               878 	.dw #0x008C
   0120 89 00               879 	.dw #0x0089
   0122 86 00               880 	.dw #0x0086
   0124 83 00               881 	.dw #0x0083
   0126 80 00               882 	.dw #0x0080
   0128 7D 00               883 	.dw #0x007D
   012A 7A 00               884 	.dw #0x007A
   012C 78 00               885 	.dw #0x0078
   012E 75 00               886 	.dw #0x0075
   0130 72 00               887 	.dw #0x0072
   0132 6F 00               888 	.dw #0x006F
   0134 6C 00               889 	.dw #0x006C
   0136 69 00               890 	.dw #0x0069
   0138 66 00               891 	.dw #0x0066
   013A 63 00               892 	.dw #0x0063
   013C 60 00               893 	.dw #0x0060
   013E 5D 00               894 	.dw #0x005D
   0140 5A 00               895 	.dw #0x005A
   0142 57 00               896 	.dw #0x0057
   0144 55 00               897 	.dw #0x0055
   0146 52 00               898 	.dw #0x0052
   0148 4F 00               899 	.dw #0x004F
   014A 4C 00               900 	.dw #0x004C
   014C 4A 00               901 	.dw #0x004A
   014E 47 00               902 	.dw #0x0047
   0150 44 00               903 	.dw #0x0044
   0152 42 00               904 	.dw #0x0042
   0154 3F 00               905 	.dw #0x003F
   0156 3C 00               906 	.dw #0x003C
   0158 3A 00               907 	.dw #0x003A
   015A 37 00               908 	.dw #0x0037
   015C 35 00               909 	.dw #0x0035
   015E 32 00               910 	.dw #0x0032
   0160 30 00               911 	.dw #0x0030
   0162 2E 00               912 	.dw #0x002E
   0164 2B 00               913 	.dw #0x002B
   0166 29 00               914 	.dw #0x0029
   0168 27 00               915 	.dw #0x0027
   016A 25 00               916 	.dw #0x0025
   016C 23 00               917 	.dw #0x0023
   016E 21 00               918 	.dw #0x0021
   0170 1F 00               919 	.dw #0x001F
   0172 1D 00               920 	.dw #0x001D
   0174 1B 00               921 	.dw #0x001B
   0176 19 00               922 	.dw #0x0019
   0178 17 00               923 	.dw #0x0017
   017A 15 00               924 	.dw #0x0015
   017C 14 00               925 	.dw #0x0014
   017E 12 00               926 	.dw #0x0012
   0180 11 00               927 	.dw #0x0011
   0182 0F 00               928 	.dw #0x000F
   0184 0E 00               929 	.dw #0x000E
   0186 0C 00               930 	.dw #0x000C
   0188 0B 00               931 	.dw #0x000B
   018A 0A 00               932 	.dw #0x000A
   018C 09 00               933 	.dw #0x0009
   018E 08 00               934 	.dw #0x0008
   0190 07 00               935 	.dw #0x0007
   0192 06 00               936 	.dw #0x0006
   0194 05 00               937 	.dw #0x0005
   0196 04 00               938 	.dw #0x0004
   0198 03 00               939 	.dw #0x0003
   019A 02 00               940 	.dw #0x0002
   019C 02 00               941 	.dw #0x0002
   019E 01 00               942 	.dw #0x0001
   01A0 01 00               943 	.dw #0x0001
   01A2 00 00               944 	.dw #0x0000
   01A4 00 00               945 	.dw #0x0000
   01A6 00 00               946 	.dw #0x0000
   01A8 00 00               947 	.dw #0x0000
   01AA 00 00               948 	.dw #0x0000
   01AC 00 00               949 	.dw #0x0000
   01AE 00 00               950 	.dw #0x0000
   01B0 00 00               951 	.dw #0x0000
   01B2 00 00               952 	.dw #0x0000
   01B4 00 00               953 	.dw #0x0000
   01B6 00 00               954 	.dw #0x0000
   01B8 01 00               955 	.dw #0x0001
   01BA 01 00               956 	.dw #0x0001
   01BC 02 00               957 	.dw #0x0002
   01BE 02 00               958 	.dw #0x0002
   01C0 03 00               959 	.dw #0x0003
   01C2 04 00               960 	.dw #0x0004
   01C4 05 00               961 	.dw #0x0005
   01C6 06 00               962 	.dw #0x0006
   01C8 07 00               963 	.dw #0x0007
   01CA 08 00               964 	.dw #0x0008
   01CC 09 00               965 	.dw #0x0009
   01CE 0A 00               966 	.dw #0x000A
   01D0 0B 00               967 	.dw #0x000B
   01D2 0C 00               968 	.dw #0x000C
   01D4 0E 00               969 	.dw #0x000E
   01D6 0F 00               970 	.dw #0x000F
   01D8 11 00               971 	.dw #0x0011
   01DA 12 00               972 	.dw #0x0012
   01DC 14 00               973 	.dw #0x0014
   01DE 15 00               974 	.dw #0x0015
   01E0 17 00               975 	.dw #0x0017
   01E2 19 00               976 	.dw #0x0019
   01E4 1B 00               977 	.dw #0x001B
   01E6 1D 00               978 	.dw #0x001D
   01E8 1F 00               979 	.dw #0x001F
   01EA 21 00               980 	.dw #0x0021
   01EC 23 00               981 	.dw #0x0023
   01EE 25 00               982 	.dw #0x0025
   01F0 27 00               983 	.dw #0x0027
   01F2 29 00               984 	.dw #0x0029
   01F4 2B 00               985 	.dw #0x002B
   01F6 2E 00               986 	.dw #0x002E
   01F8 30 00               987 	.dw #0x0030
   01FA 32 00               988 	.dw #0x0032
   01FC 35 00               989 	.dw #0x0035
   01FE 37 00               990 	.dw #0x0037
   0200 3A 00               991 	.dw #0x003A
   0202 3C 00               992 	.dw #0x003C
   0204 3F 00               993 	.dw #0x003F
   0206 42 00               994 	.dw #0x0042
   0208 44 00               995 	.dw #0x0044
   020A 47 00               996 	.dw #0x0047
   020C 4A 00               997 	.dw #0x004A
   020E 4C 00               998 	.dw #0x004C
   0210 4F 00               999 	.dw #0x004F
   0212 52 00              1000 	.dw #0x0052
   0214 55 00              1001 	.dw #0x0055
   0216 57 00              1002 	.dw #0x0057
   0218 5A 00              1003 	.dw #0x005A
   021A 5D 00              1004 	.dw #0x005D
   021C 60 00              1005 	.dw #0x0060
   021E 63 00              1006 	.dw #0x0063
   0220 66 00              1007 	.dw #0x0066
   0222 69 00              1008 	.dw #0x0069
   0224 6C 00              1009 	.dw #0x006C
   0226 6F 00              1010 	.dw #0x006F
   0228 72 00              1011 	.dw #0x0072
   022A 75 00              1012 	.dw #0x0075
   022C                    1013 _tri_center:
   022C 08                 1014 	.db #0x08
   022D 0A                 1015 	.db #0x0A
   022E 12                 1016 	.db #0x12
   022F 10                 1017 	.db #0x10
   0230 00                 1018 	.db #0x00
   0231 02                 1019 	.db #0x02
   0232 08                 1020 	.db #0x08
   0233 0A                 1021 	.db #0x0A
   0234 0B                 1022 	.db #0x0B
   0235 09                 1023 	.db #0x09
   0236 03                 1024 	.db #0x03
   0237 01                 1025 	.db #0x01
   0238 11                 1026 	.db #0x11
   0239 13                 1027 	.db #0x13
   023A 0B                 1028 	.db #0x0B
   023B 09                 1029 	.db #0x09
   023C 0A                 1030 	.db #0x0A
   023D 12                 1031 	.db #0x12
   023E 10                 1032 	.db #0x10
   023F 00                 1033 	.db #0x00
   0240 02                 1034 	.db #0x02
   0241 08                 1035 	.db #0x08
   0242 0A                 1036 	.db #0x0A
   0243 12                 1037 	.db #0x12
   0244 13                 1038 	.db #0x13
   0245 0B                 1039 	.db #0x0B
   0246 09                 1040 	.db #0x09
   0247 03                 1041 	.db #0x03
   0248 01                 1042 	.db #0x01
   0249 11                 1043 	.db #0x11
   024A 13                 1044 	.db #0x13
   024B 0B                 1045 	.db #0x0B
   024C 12                 1046 	.db #0x12
   024D 10                 1047 	.db #0x10
   024E 00                 1048 	.db #0x00
   024F 02                 1049 	.db #0x02
   0250 08                 1050 	.db #0x08
   0251 0A                 1051 	.db #0x0A
   0252 12                 1052 	.db #0x12
   0253 10                 1053 	.db #0x10
   0254 11                 1054 	.db #0x11
   0255 13                 1055 	.db #0x13
   0256 0B                 1056 	.db #0x0B
   0257 09                 1057 	.db #0x09
   0258 03                 1058 	.db #0x03
   0259 01                 1059 	.db #0x01
   025A 11                 1060 	.db #0x11
   025B 13                 1061 	.db #0x13
   025C 10                 1062 	.db #0x10
   025D 00                 1063 	.db #0x00
   025E 02                 1064 	.db #0x02
   025F 08                 1065 	.db #0x08
   0260 0A                 1066 	.db #0x0A
   0261 12                 1067 	.db #0x12
   0262 10                 1068 	.db #0x10
   0263 00                 1069 	.db #0x00
   0264 01                 1070 	.db #0x01
   0265 11                 1071 	.db #0x11
   0266 13                 1072 	.db #0x13
   0267 0B                 1073 	.db #0x0B
   0268 09                 1074 	.db #0x09
   0269 03                 1075 	.db #0x03
   026A 01                 1076 	.db #0x01
   026B 11                 1077 	.db #0x11
   026C 00                 1078 	.db #0x00
   026D 02                 1079 	.db #0x02
   026E 08                 1080 	.db #0x08
   026F 0A                 1081 	.db #0x0A
   0270 12                 1082 	.db #0x12
   0271 10                 1083 	.db #0x10
   0272 00                 1084 	.db #0x00
   0273 02                 1085 	.db #0x02
   0274 03                 1086 	.db #0x03
   0275 01                 1087 	.db #0x01
   0276 11                 1088 	.db #0x11
   0277 13                 1089 	.db #0x13
   0278 0B                 1090 	.db #0x0B
   0279 09                 1091 	.db #0x09
   027A 03                 1092 	.db #0x03
   027B 01                 1093 	.db #0x01
   027C 02                 1094 	.db #0x02
   027D 08                 1095 	.db #0x08
   027E 0A                 1096 	.db #0x0A
   027F 12                 1097 	.db #0x12
   0280 10                 1098 	.db #0x10
   0281 00                 1099 	.db #0x00
   0282 02                 1100 	.db #0x02
   0283 08                 1101 	.db #0x08
   0284 09                 1102 	.db #0x09
   0285 03                 1103 	.db #0x03
   0286 01                 1104 	.db #0x01
   0287 11                 1105 	.db #0x11
   0288 13                 1106 	.db #0x13
   0289 0B                 1107 	.db #0x0B
   028A 09                 1108 	.db #0x09
   028B 03                 1109 	.db #0x03
   028C 01                 1110 	.db #0x01
   028D 0B                 1111 	.db #0x0B
   028E 09                 1112 	.db #0x09
   028F 11                 1113 	.db #0x11
   0290 13                 1114 	.db #0x13
   0291 03                 1115 	.db #0x03
   0292 01                 1116 	.db #0x01
   0293 0B                 1117 	.db #0x0B
   0294 0A                 1118 	.db #0x0A
   0295 00                 1119 	.db #0x00
   0296 02                 1120 	.db #0x02
   0297 12                 1121 	.db #0x12
   0298 10                 1122 	.db #0x10
   0299 08                 1123 	.db #0x08
   029A 0A                 1124 	.db #0x0A
   029B 00                 1125 	.db #0x00
   029C 03                 1126 	.db #0x03
   029D 01                 1127 	.db #0x01
   029E 0B                 1128 	.db #0x0B
   029F 09                 1129 	.db #0x09
   02A0 11                 1130 	.db #0x11
   02A1 13                 1131 	.db #0x13
   02A2 03                 1132 	.db #0x03
   02A3 01                 1133 	.db #0x01
   02A4 00                 1134 	.db #0x00
   02A5 02                 1135 	.db #0x02
   02A6 12                 1136 	.db #0x12
   02A7 10                 1137 	.db #0x10
   02A8 08                 1138 	.db #0x08
   02A9 0A                 1139 	.db #0x0A
   02AA 00                 1140 	.db #0x00
   02AB 02                 1141 	.db #0x02
   02AC 13                 1142 	.db #0x13
   02AD 03                 1143 	.db #0x03
   02AE 01                 1144 	.db #0x01
   02AF 0B                 1145 	.db #0x0B
   02B0 09                 1146 	.db #0x09
   02B1 11                 1147 	.db #0x11
   02B2 13                 1148 	.db #0x13
   02B3 03                 1149 	.db #0x03
   02B4 02                 1150 	.db #0x02
   02B5 12                 1151 	.db #0x12
   02B6 10                 1152 	.db #0x10
   02B7 08                 1153 	.db #0x08
   02B8 0A                 1154 	.db #0x0A
   02B9 00                 1155 	.db #0x00
   02BA 02                 1156 	.db #0x02
   02BB 12                 1157 	.db #0x12
   02BC 11                 1158 	.db #0x11
   02BD 13                 1159 	.db #0x13
   02BE 03                 1160 	.db #0x03
   02BF 01                 1161 	.db #0x01
   02C0 0B                 1162 	.db #0x0B
   02C1 09                 1163 	.db #0x09
   02C2 11                 1164 	.db #0x11
   02C3 13                 1165 	.db #0x13
   02C4 12                 1166 	.db #0x12
   02C5 10                 1167 	.db #0x10
   02C6 08                 1168 	.db #0x08
   02C7 0A                 1169 	.db #0x0A
   02C8 00                 1170 	.db #0x00
   02C9 02                 1171 	.db #0x02
   02CA 12                 1172 	.db #0x12
   02CB 10                 1173 	.db #0x10
   02CC 09                 1174 	.db #0x09
   02CD 11                 1175 	.db #0x11
   02CE 13                 1176 	.db #0x13
   02CF 03                 1177 	.db #0x03
   02D0 01                 1178 	.db #0x01
   02D1 0B                 1179 	.db #0x0B
   02D2 09                 1180 	.db #0x09
   02D3 11                 1181 	.db #0x11
   02D4 10                 1182 	.db #0x10
   02D5 08                 1183 	.db #0x08
   02D6 0A                 1184 	.db #0x0A
   02D7 00                 1185 	.db #0x00
   02D8 02                 1186 	.db #0x02
   02D9 12                 1187 	.db #0x12
   02DA 10                 1188 	.db #0x10
   02DB 08                 1189 	.db #0x08
   02DC 0B                 1190 	.db #0x0B
   02DD 09                 1191 	.db #0x09
   02DE 11                 1192 	.db #0x11
   02DF 13                 1193 	.db #0x13
   02E0 03                 1194 	.db #0x03
   02E1 01                 1195 	.db #0x01
   02E2 0B                 1196 	.db #0x0B
   02E3 09                 1197 	.db #0x09
   02E4 08                 1198 	.db #0x08
   02E5 0A                 1199 	.db #0x0A
   02E6 00                 1200 	.db #0x00
   02E7 02                 1201 	.db #0x02
   02E8 12                 1202 	.db #0x12
   02E9 10                 1203 	.db #0x10
   02EA 08                 1204 	.db #0x08
   02EB 0A                 1205 	.db #0x0A
   02EC                    1206 _tri_up:
   02EC 0A                 1207 	.db #0x0A
   02ED 12                 1208 	.db #0x12
   02EE 10                 1209 	.db #0x10
   02EF 00                 1210 	.db #0x00
   02F0 02                 1211 	.db #0x02
   02F1 08                 1212 	.db #0x08
   02F2 0A                 1213 	.db #0x0A
   02F3 12                 1214 	.db #0x12
   02F4 13                 1215 	.db #0x13
   02F5 0B                 1216 	.db #0x0B
   02F6 09                 1217 	.db #0x09
   02F7 03                 1218 	.db #0x03
   02F8 01                 1219 	.db #0x01
   02F9 11                 1220 	.db #0x11
   02FA 13                 1221 	.db #0x13
   02FB 0B                 1222 	.db #0x0B
   02FC 12                 1223 	.db #0x12
   02FD 10                 1224 	.db #0x10
   02FE 00                 1225 	.db #0x00
   02FF 02                 1226 	.db #0x02
   0300 08                 1227 	.db #0x08
   0301 0A                 1228 	.db #0x0A
   0302 12                 1229 	.db #0x12
   0303 10                 1230 	.db #0x10
   0304 11                 1231 	.db #0x11
   0305 13                 1232 	.db #0x13
   0306 0B                 1233 	.db #0x0B
   0307 09                 1234 	.db #0x09
   0308 03                 1235 	.db #0x03
   0309 01                 1236 	.db #0x01
   030A 11                 1237 	.db #0x11
   030B 13                 1238 	.db #0x13
   030C 10                 1239 	.db #0x10
   030D 00                 1240 	.db #0x00
   030E 02                 1241 	.db #0x02
   030F 08                 1242 	.db #0x08
   0310 0A                 1243 	.db #0x0A
   0311 12                 1244 	.db #0x12
   0312 10                 1245 	.db #0x10
   0313 00                 1246 	.db #0x00
   0314 01                 1247 	.db #0x01
   0315 11                 1248 	.db #0x11
   0316 13                 1249 	.db #0x13
   0317 0B                 1250 	.db #0x0B
   0318 09                 1251 	.db #0x09
   0319 03                 1252 	.db #0x03
   031A 01                 1253 	.db #0x01
   031B 11                 1254 	.db #0x11
   031C 00                 1255 	.db #0x00
   031D 02                 1256 	.db #0x02
   031E 08                 1257 	.db #0x08
   031F 0A                 1258 	.db #0x0A
   0320 12                 1259 	.db #0x12
   0321 10                 1260 	.db #0x10
   0322 00                 1261 	.db #0x00
   0323 02                 1262 	.db #0x02
   0324 03                 1263 	.db #0x03
   0325 01                 1264 	.db #0x01
   0326 11                 1265 	.db #0x11
   0327 13                 1266 	.db #0x13
   0328 0B                 1267 	.db #0x0B
   0329 09                 1268 	.db #0x09
   032A 03                 1269 	.db #0x03
   032B 01                 1270 	.db #0x01
   032C 02                 1271 	.db #0x02
   032D 08                 1272 	.db #0x08
   032E 0A                 1273 	.db #0x0A
   032F 12                 1274 	.db #0x12
   0330 10                 1275 	.db #0x10
   0331 00                 1276 	.db #0x00
   0332 02                 1277 	.db #0x02
   0333 08                 1278 	.db #0x08
   0334 09                 1279 	.db #0x09
   0335 03                 1280 	.db #0x03
   0336 01                 1281 	.db #0x01
   0337 11                 1282 	.db #0x11
   0338 13                 1283 	.db #0x13
   0339 0B                 1284 	.db #0x0B
   033A 09                 1285 	.db #0x09
   033B 03                 1286 	.db #0x03
   033C 08                 1287 	.db #0x08
   033D 0A                 1288 	.db #0x0A
   033E 12                 1289 	.db #0x12
   033F 10                 1290 	.db #0x10
   0340 00                 1291 	.db #0x00
   0341 02                 1292 	.db #0x02
   0342 08                 1293 	.db #0x08
   0343 0A                 1294 	.db #0x0A
   0344 0B                 1295 	.db #0x0B
   0345 09                 1296 	.db #0x09
   0346 03                 1297 	.db #0x03
   0347 01                 1298 	.db #0x01
   0348 11                 1299 	.db #0x11
   0349 13                 1300 	.db #0x13
   034A 0B                 1301 	.db #0x0B
   034B 09                 1302 	.db #0x09
   034C 0A                 1303 	.db #0x0A
   034D 12                 1304 	.db #0x12
   034E 10                 1305 	.db #0x10
   034F 00                 1306 	.db #0x00
   0350 02                 1307 	.db #0x02
   0351 08                 1308 	.db #0x08
   0352 0A                 1309 	.db #0x0A
   0353 12                 1310 	.db #0x12
   0354 13                 1311 	.db #0x13
   0355 0B                 1312 	.db #0x0B
   0356 09                 1313 	.db #0x09
   0357 03                 1314 	.db #0x03
   0358 01                 1315 	.db #0x01
   0359 11                 1316 	.db #0x11
   035A 13                 1317 	.db #0x13
   035B 0B                 1318 	.db #0x0B
   035C 12                 1319 	.db #0x12
   035D 10                 1320 	.db #0x10
   035E 00                 1321 	.db #0x00
   035F 02                 1322 	.db #0x02
   0360 08                 1323 	.db #0x08
   0361 0A                 1324 	.db #0x0A
   0362 12                 1325 	.db #0x12
   0363 10                 1326 	.db #0x10
   0364 11                 1327 	.db #0x11
   0365 13                 1328 	.db #0x13
   0366 0B                 1329 	.db #0x0B
   0367 09                 1330 	.db #0x09
   0368 03                 1331 	.db #0x03
   0369 01                 1332 	.db #0x01
   036A 11                 1333 	.db #0x11
   036B 13                 1334 	.db #0x13
   036C 10                 1335 	.db #0x10
   036D 00                 1336 	.db #0x00
   036E 02                 1337 	.db #0x02
   036F 08                 1338 	.db #0x08
   0370 0A                 1339 	.db #0x0A
   0371 12                 1340 	.db #0x12
   0372 10                 1341 	.db #0x10
   0373 00                 1342 	.db #0x00
   0374 01                 1343 	.db #0x01
   0375 11                 1344 	.db #0x11
   0376 13                 1345 	.db #0x13
   0377 0B                 1346 	.db #0x0B
   0378 09                 1347 	.db #0x09
   0379 03                 1348 	.db #0x03
   037A 01                 1349 	.db #0x01
   037B 11                 1350 	.db #0x11
   037C 00                 1351 	.db #0x00
   037D 02                 1352 	.db #0x02
   037E 08                 1353 	.db #0x08
   037F 0A                 1354 	.db #0x0A
   0380 12                 1355 	.db #0x12
   0381 10                 1356 	.db #0x10
   0382 00                 1357 	.db #0x00
   0383 02                 1358 	.db #0x02
   0384 03                 1359 	.db #0x03
   0385 01                 1360 	.db #0x01
   0386 11                 1361 	.db #0x11
   0387 13                 1362 	.db #0x13
   0388 0B                 1363 	.db #0x0B
   0389 09                 1364 	.db #0x09
   038A 03                 1365 	.db #0x03
   038B 01                 1366 	.db #0x01
   038C 02                 1367 	.db #0x02
   038D 08                 1368 	.db #0x08
   038E 0A                 1369 	.db #0x0A
   038F 12                 1370 	.db #0x12
   0390 10                 1371 	.db #0x10
   0391 00                 1372 	.db #0x00
   0392 02                 1373 	.db #0x02
   0393 08                 1374 	.db #0x08
   0394 09                 1375 	.db #0x09
   0395 03                 1376 	.db #0x03
   0396 01                 1377 	.db #0x01
   0397 11                 1378 	.db #0x11
   0398 13                 1379 	.db #0x13
   0399 0B                 1380 	.db #0x0B
   039A 09                 1381 	.db #0x09
   039B 03                 1382 	.db #0x03
   039C 08                 1383 	.db #0x08
   039D 0A                 1384 	.db #0x0A
   039E 12                 1385 	.db #0x12
   039F 10                 1386 	.db #0x10
   03A0 00                 1387 	.db #0x00
   03A1 02                 1388 	.db #0x02
   03A2 08                 1389 	.db #0x08
   03A3 0A                 1390 	.db #0x0A
   03A4 0B                 1391 	.db #0x0B
   03A5 09                 1392 	.db #0x09
   03A6 03                 1393 	.db #0x03
   03A7 01                 1394 	.db #0x01
   03A8 11                 1395 	.db #0x11
   03A9 13                 1396 	.db #0x13
   03AA 0B                 1397 	.db #0x0B
   03AB 09                 1398 	.db #0x09
   03AC                    1399 _tri_dia:
   03AC 05                 1400 	.db #0x05
   03AD 1B                 1401 	.db #0x1B
   03AE 0F                 1402 	.db #0x0F
   03AF 1D                 1403 	.db #0x1D
   03B0 15                 1404 	.db #0x15
   03B1 19                 1405 	.db #0x19
   03B2 05                 1406 	.db #0x05
   03B3 1B                 1407 	.db #0x1B
   03B4 0F                 1408 	.db #0x0F
   03B5 1D                 1409 	.db #0x1D
   03B6 15                 1410 	.db #0x15
   03B7 19                 1411 	.db #0x19
   03B8 05                 1412 	.db #0x05
   03B9 1B                 1413 	.db #0x1B
   03BA 0F                 1414 	.db #0x0F
   03BB 1D                 1415 	.db #0x1D
   03BC 1D                 1416 	.db #0x1D
   03BD 05                 1417 	.db #0x05
   03BE 19                 1418 	.db #0x19
   03BF 0F                 1419 	.db #0x0F
   03C0 1B                 1420 	.db #0x1B
   03C1 15                 1421 	.db #0x15
   03C2 1D                 1422 	.db #0x1D
   03C3 05                 1423 	.db #0x05
   03C4 19                 1424 	.db #0x19
   03C5 0F                 1425 	.db #0x0F
   03C6 1B                 1426 	.db #0x1B
   03C7 15                 1427 	.db #0x15
   03C8 1D                 1428 	.db #0x1D
   03C9 05                 1429 	.db #0x05
   03CA 19                 1430 	.db #0x19
   03CB 0F                 1431 	.db #0x0F
   03CC 0F                 1432 	.db #0x0F
   03CD 1D                 1433 	.db #0x1D
   03CE 15                 1434 	.db #0x15
   03CF 19                 1435 	.db #0x19
   03D0 05                 1436 	.db #0x05
   03D1 1B                 1437 	.db #0x1B
   03D2 0F                 1438 	.db #0x0F
   03D3 1D                 1439 	.db #0x1D
   03D4 15                 1440 	.db #0x15
   03D5 19                 1441 	.db #0x19
   03D6 05                 1442 	.db #0x05
   03D7 1B                 1443 	.db #0x1B
   03D8 0F                 1444 	.db #0x0F
   03D9 1D                 1445 	.db #0x1D
   03DA 15                 1446 	.db #0x15
   03DB 19                 1447 	.db #0x19
   03DC 19                 1448 	.db #0x19
   03DD 0F                 1449 	.db #0x0F
   03DE 1B                 1450 	.db #0x1B
   03DF 15                 1451 	.db #0x15
   03E0 1D                 1452 	.db #0x1D
   03E1 05                 1453 	.db #0x05
   03E2 19                 1454 	.db #0x19
   03E3 0F                 1455 	.db #0x0F
   03E4 1B                 1456 	.db #0x1B
   03E5 15                 1457 	.db #0x15
   03E6 1D                 1458 	.db #0x1D
   03E7 05                 1459 	.db #0x05
   03E8 19                 1460 	.db #0x19
   03E9 0F                 1461 	.db #0x0F
   03EA 1B                 1462 	.db #0x1B
   03EB 15                 1463 	.db #0x15
   03EC 15                 1464 	.db #0x15
   03ED 19                 1465 	.db #0x19
   03EE 05                 1466 	.db #0x05
   03EF 1B                 1467 	.db #0x1B
   03F0 0F                 1468 	.db #0x0F
   03F1 1D                 1469 	.db #0x1D
   03F2 15                 1470 	.db #0x15
   03F3 19                 1471 	.db #0x19
   03F4 05                 1472 	.db #0x05
   03F5 1B                 1473 	.db #0x1B
   03F6 0F                 1474 	.db #0x0F
   03F7 1D                 1475 	.db #0x1D
   03F8 15                 1476 	.db #0x15
   03F9 19                 1477 	.db #0x19
   03FA 05                 1478 	.db #0x05
   03FB 1B                 1479 	.db #0x1B
   03FC 1B                 1480 	.db #0x1B
   03FD 15                 1481 	.db #0x15
   03FE 1D                 1482 	.db #0x1D
   03FF 05                 1483 	.db #0x05
   0400 19                 1484 	.db #0x19
   0401 0F                 1485 	.db #0x0F
   0402 1B                 1486 	.db #0x1B
   0403 15                 1487 	.db #0x15
   0404 1D                 1488 	.db #0x1D
   0405 05                 1489 	.db #0x05
   0406 19                 1490 	.db #0x19
   0407 0F                 1491 	.db #0x0F
   0408 1B                 1492 	.db #0x1B
   0409 15                 1493 	.db #0x15
   040A 1D                 1494 	.db #0x1D
   040B 05                 1495 	.db #0x05
   040C 05                 1496 	.db #0x05
   040D 1B                 1497 	.db #0x1B
   040E 0F                 1498 	.db #0x0F
   040F 1D                 1499 	.db #0x1D
   0410 15                 1500 	.db #0x15
   0411 19                 1501 	.db #0x19
   0412 05                 1502 	.db #0x05
   0413 1B                 1503 	.db #0x1B
   0414 0F                 1504 	.db #0x0F
   0415 1D                 1505 	.db #0x1D
   0416 15                 1506 	.db #0x15
   0417 19                 1507 	.db #0x19
   0418 05                 1508 	.db #0x05
   0419 1B                 1509 	.db #0x1B
   041A 0F                 1510 	.db #0x0F
   041B 1D                 1511 	.db #0x1D
   041C 1D                 1512 	.db #0x1D
   041D 05                 1513 	.db #0x05
   041E 19                 1514 	.db #0x19
   041F 0F                 1515 	.db #0x0F
   0420 1B                 1516 	.db #0x1B
   0421 15                 1517 	.db #0x15
   0422 1D                 1518 	.db #0x1D
   0423 05                 1519 	.db #0x05
   0424 19                 1520 	.db #0x19
   0425 0F                 1521 	.db #0x0F
   0426 1B                 1522 	.db #0x1B
   0427 15                 1523 	.db #0x15
   0428 1D                 1524 	.db #0x1D
   0429 05                 1525 	.db #0x05
   042A 19                 1526 	.db #0x19
   042B 0F                 1527 	.db #0x0F
   042C 0F                 1528 	.db #0x0F
   042D 1D                 1529 	.db #0x1D
   042E 15                 1530 	.db #0x15
   042F 19                 1531 	.db #0x19
   0430 05                 1532 	.db #0x05
   0431 1B                 1533 	.db #0x1B
   0432 0F                 1534 	.db #0x0F
   0433 1D                 1535 	.db #0x1D
   0434 15                 1536 	.db #0x15
   0435 19                 1537 	.db #0x19
   0436 05                 1538 	.db #0x05
   0437 1B                 1539 	.db #0x1B
   0438 0F                 1540 	.db #0x0F
   0439 1D                 1541 	.db #0x1D
   043A 15                 1542 	.db #0x15
   043B 19                 1543 	.db #0x19
   043C 19                 1544 	.db #0x19
   043D 0F                 1545 	.db #0x0F
   043E 1B                 1546 	.db #0x1B
   043F 15                 1547 	.db #0x15
   0440 1D                 1548 	.db #0x1D
   0441 05                 1549 	.db #0x05
   0442 19                 1550 	.db #0x19
   0443 0F                 1551 	.db #0x0F
   0444 1B                 1552 	.db #0x1B
   0445 15                 1553 	.db #0x15
   0446 1D                 1554 	.db #0x1D
   0447 05                 1555 	.db #0x05
   0448 19                 1556 	.db #0x19
   0449 0F                 1557 	.db #0x0F
   044A 1B                 1558 	.db #0x1B
   044B 15                 1559 	.db #0x15
   044C 15                 1560 	.db #0x15
   044D 19                 1561 	.db #0x19
   044E 05                 1562 	.db #0x05
   044F 1B                 1563 	.db #0x1B
   0450 0F                 1564 	.db #0x0F
   0451 1D                 1565 	.db #0x1D
   0452 15                 1566 	.db #0x15
   0453 19                 1567 	.db #0x19
   0454 05                 1568 	.db #0x05
   0455 1B                 1569 	.db #0x1B
   0456 0F                 1570 	.db #0x0F
   0457 1D                 1571 	.db #0x1D
   0458 15                 1572 	.db #0x15
   0459 19                 1573 	.db #0x19
   045A 05                 1574 	.db #0x05
   045B 1B                 1575 	.db #0x1B
   045C 1B                 1576 	.db #0x1B
   045D 15                 1577 	.db #0x15
   045E 1D                 1578 	.db #0x1D
   045F 05                 1579 	.db #0x05
   0460 19                 1580 	.db #0x19
   0461 0F                 1581 	.db #0x0F
   0462 1B                 1582 	.db #0x1B
   0463 15                 1583 	.db #0x15
   0464 1D                 1584 	.db #0x1D
   0465 05                 1585 	.db #0x05
   0466 19                 1586 	.db #0x19
   0467 0F                 1587 	.db #0x0F
   0468 1B                 1588 	.db #0x1B
   0469 15                 1589 	.db #0x15
   046A 1D                 1590 	.db #0x1D
   046B 05                 1591 	.db #0x05
   046C                    1592 _tri_side1:
   046C 0A                 1593 	.db #0x0A
   046D 12                 1594 	.db #0x12
   046E 10                 1595 	.db #0x10
   046F 00                 1596 	.db #0x00
   0470 02                 1597 	.db #0x02
   0471 08                 1598 	.db #0x08
   0472 0A                 1599 	.db #0x0A
   0473 12                 1600 	.db #0x12
   0474 10                 1601 	.db #0x10
   0475 00                 1602 	.db #0x00
   0476 02                 1603 	.db #0x02
   0477 08                 1604 	.db #0x08
   0478 0A                 1605 	.db #0x0A
   0479 12                 1606 	.db #0x12
   047A 10                 1607 	.db #0x10
   047B 00                 1608 	.db #0x00
   047C 12                 1609 	.db #0x12
   047D 10                 1610 	.db #0x10
   047E 00                 1611 	.db #0x00
   047F 02                 1612 	.db #0x02
   0480 08                 1613 	.db #0x08
   0481 0A                 1614 	.db #0x0A
   0482 12                 1615 	.db #0x12
   0483 10                 1616 	.db #0x10
   0484 00                 1617 	.db #0x00
   0485 02                 1618 	.db #0x02
   0486 08                 1619 	.db #0x08
   0487 0A                 1620 	.db #0x0A
   0488 12                 1621 	.db #0x12
   0489 10                 1622 	.db #0x10
   048A 00                 1623 	.db #0x00
   048B 02                 1624 	.db #0x02
   048C 10                 1625 	.db #0x10
   048D 00                 1626 	.db #0x00
   048E 02                 1627 	.db #0x02
   048F 08                 1628 	.db #0x08
   0490 0A                 1629 	.db #0x0A
   0491 12                 1630 	.db #0x12
   0492 10                 1631 	.db #0x10
   0493 00                 1632 	.db #0x00
   0494 02                 1633 	.db #0x02
   0495 08                 1634 	.db #0x08
   0496 0A                 1635 	.db #0x0A
   0497 12                 1636 	.db #0x12
   0498 10                 1637 	.db #0x10
   0499 00                 1638 	.db #0x00
   049A 02                 1639 	.db #0x02
   049B 08                 1640 	.db #0x08
   049C 00                 1641 	.db #0x00
   049D 02                 1642 	.db #0x02
   049E 08                 1643 	.db #0x08
   049F 0A                 1644 	.db #0x0A
   04A0 12                 1645 	.db #0x12
   04A1 10                 1646 	.db #0x10
   04A2 00                 1647 	.db #0x00
   04A3 02                 1648 	.db #0x02
   04A4 08                 1649 	.db #0x08
   04A5 0A                 1650 	.db #0x0A
   04A6 12                 1651 	.db #0x12
   04A7 10                 1652 	.db #0x10
   04A8 00                 1653 	.db #0x00
   04A9 02                 1654 	.db #0x02
   04AA 08                 1655 	.db #0x08
   04AB 0A                 1656 	.db #0x0A
   04AC 02                 1657 	.db #0x02
   04AD 08                 1658 	.db #0x08
   04AE 0A                 1659 	.db #0x0A
   04AF 12                 1660 	.db #0x12
   04B0 10                 1661 	.db #0x10
   04B1 00                 1662 	.db #0x00
   04B2 02                 1663 	.db #0x02
   04B3 08                 1664 	.db #0x08
   04B4 0A                 1665 	.db #0x0A
   04B5 12                 1666 	.db #0x12
   04B6 10                 1667 	.db #0x10
   04B7 00                 1668 	.db #0x00
   04B8 02                 1669 	.db #0x02
   04B9 08                 1670 	.db #0x08
   04BA 0A                 1671 	.db #0x0A
   04BB 12                 1672 	.db #0x12
   04BC 08                 1673 	.db #0x08
   04BD 0A                 1674 	.db #0x0A
   04BE 12                 1675 	.db #0x12
   04BF 10                 1676 	.db #0x10
   04C0 00                 1677 	.db #0x00
   04C1 02                 1678 	.db #0x02
   04C2 08                 1679 	.db #0x08
   04C3 0A                 1680 	.db #0x0A
   04C4 12                 1681 	.db #0x12
   04C5 10                 1682 	.db #0x10
   04C6 00                 1683 	.db #0x00
   04C7 02                 1684 	.db #0x02
   04C8 08                 1685 	.db #0x08
   04C9 0A                 1686 	.db #0x0A
   04CA 12                 1687 	.db #0x12
   04CB 10                 1688 	.db #0x10
   04CC 0A                 1689 	.db #0x0A
   04CD 12                 1690 	.db #0x12
   04CE 10                 1691 	.db #0x10
   04CF 00                 1692 	.db #0x00
   04D0 02                 1693 	.db #0x02
   04D1 08                 1694 	.db #0x08
   04D2 0A                 1695 	.db #0x0A
   04D3 12                 1696 	.db #0x12
   04D4 10                 1697 	.db #0x10
   04D5 00                 1698 	.db #0x00
   04D6 02                 1699 	.db #0x02
   04D7 08                 1700 	.db #0x08
   04D8 0A                 1701 	.db #0x0A
   04D9 12                 1702 	.db #0x12
   04DA 10                 1703 	.db #0x10
   04DB 00                 1704 	.db #0x00
   04DC 12                 1705 	.db #0x12
   04DD 10                 1706 	.db #0x10
   04DE 00                 1707 	.db #0x00
   04DF 02                 1708 	.db #0x02
   04E0 08                 1709 	.db #0x08
   04E1 0A                 1710 	.db #0x0A
   04E2 12                 1711 	.db #0x12
   04E3 10                 1712 	.db #0x10
   04E4 00                 1713 	.db #0x00
   04E5 02                 1714 	.db #0x02
   04E6 08                 1715 	.db #0x08
   04E7 0A                 1716 	.db #0x0A
   04E8 12                 1717 	.db #0x12
   04E9 10                 1718 	.db #0x10
   04EA 00                 1719 	.db #0x00
   04EB 02                 1720 	.db #0x02
   04EC 10                 1721 	.db #0x10
   04ED 00                 1722 	.db #0x00
   04EE 02                 1723 	.db #0x02
   04EF 08                 1724 	.db #0x08
   04F0 0A                 1725 	.db #0x0A
   04F1 12                 1726 	.db #0x12
   04F2 10                 1727 	.db #0x10
   04F3 00                 1728 	.db #0x00
   04F4 02                 1729 	.db #0x02
   04F5 08                 1730 	.db #0x08
   04F6 0A                 1731 	.db #0x0A
   04F7 12                 1732 	.db #0x12
   04F8 10                 1733 	.db #0x10
   04F9 00                 1734 	.db #0x00
   04FA 02                 1735 	.db #0x02
   04FB 08                 1736 	.db #0x08
   04FC 00                 1737 	.db #0x00
   04FD 02                 1738 	.db #0x02
   04FE 08                 1739 	.db #0x08
   04FF 0A                 1740 	.db #0x0A
   0500 12                 1741 	.db #0x12
   0501 10                 1742 	.db #0x10
   0502 00                 1743 	.db #0x00
   0503 02                 1744 	.db #0x02
   0504 08                 1745 	.db #0x08
   0505 0A                 1746 	.db #0x0A
   0506 12                 1747 	.db #0x12
   0507 10                 1748 	.db #0x10
   0508 00                 1749 	.db #0x00
   0509 02                 1750 	.db #0x02
   050A 08                 1751 	.db #0x08
   050B 0A                 1752 	.db #0x0A
   050C 02                 1753 	.db #0x02
   050D 08                 1754 	.db #0x08
   050E 0A                 1755 	.db #0x0A
   050F 12                 1756 	.db #0x12
   0510 10                 1757 	.db #0x10
   0511 00                 1758 	.db #0x00
   0512 02                 1759 	.db #0x02
   0513 08                 1760 	.db #0x08
   0514 0A                 1761 	.db #0x0A
   0515 12                 1762 	.db #0x12
   0516 10                 1763 	.db #0x10
   0517 00                 1764 	.db #0x00
   0518 02                 1765 	.db #0x02
   0519 08                 1766 	.db #0x08
   051A 0A                 1767 	.db #0x0A
   051B 12                 1768 	.db #0x12
   051C 08                 1769 	.db #0x08
   051D 0A                 1770 	.db #0x0A
   051E 12                 1771 	.db #0x12
   051F 10                 1772 	.db #0x10
   0520 00                 1773 	.db #0x00
   0521 02                 1774 	.db #0x02
   0522 08                 1775 	.db #0x08
   0523 0A                 1776 	.db #0x0A
   0524 12                 1777 	.db #0x12
   0525 10                 1778 	.db #0x10
   0526 00                 1779 	.db #0x00
   0527 02                 1780 	.db #0x02
   0528 08                 1781 	.db #0x08
   0529 0A                 1782 	.db #0x0A
   052A 12                 1783 	.db #0x12
   052B 10                 1784 	.db #0x10
   052C                    1785 _tri_side2:
   052C 00                 1786 	.db #0x00
   052D 10                 1787 	.db #0x10
   052E 12                 1788 	.db #0x12
   052F 0A                 1789 	.db #0x0A
   0530 08                 1790 	.db #0x08
   0531 02                 1791 	.db #0x02
   0532 00                 1792 	.db #0x00
   0533 10                 1793 	.db #0x10
   0534 12                 1794 	.db #0x12
   0535 0A                 1795 	.db #0x0A
   0536 08                 1796 	.db #0x08
   0537 02                 1797 	.db #0x02
   0538 00                 1798 	.db #0x00
   0539 10                 1799 	.db #0x10
   053A 12                 1800 	.db #0x12
   053B 0A                 1801 	.db #0x0A
   053C 02                 1802 	.db #0x02
   053D 00                 1803 	.db #0x00
   053E 10                 1804 	.db #0x10
   053F 12                 1805 	.db #0x12
   0540 0A                 1806 	.db #0x0A
   0541 08                 1807 	.db #0x08
   0542 02                 1808 	.db #0x02
   0543 00                 1809 	.db #0x00
   0544 10                 1810 	.db #0x10
   0545 12                 1811 	.db #0x12
   0546 0A                 1812 	.db #0x0A
   0547 08                 1813 	.db #0x08
   0548 02                 1814 	.db #0x02
   0549 00                 1815 	.db #0x00
   054A 10                 1816 	.db #0x10
   054B 12                 1817 	.db #0x12
   054C 08                 1818 	.db #0x08
   054D 02                 1819 	.db #0x02
   054E 00                 1820 	.db #0x00
   054F 10                 1821 	.db #0x10
   0550 12                 1822 	.db #0x12
   0551 0A                 1823 	.db #0x0A
   0552 08                 1824 	.db #0x08
   0553 02                 1825 	.db #0x02
   0554 00                 1826 	.db #0x00
   0555 10                 1827 	.db #0x10
   0556 12                 1828 	.db #0x12
   0557 0A                 1829 	.db #0x0A
   0558 08                 1830 	.db #0x08
   0559 02                 1831 	.db #0x02
   055A 00                 1832 	.db #0x00
   055B 10                 1833 	.db #0x10
   055C 0A                 1834 	.db #0x0A
   055D 08                 1835 	.db #0x08
   055E 02                 1836 	.db #0x02
   055F 00                 1837 	.db #0x00
   0560 10                 1838 	.db #0x10
   0561 12                 1839 	.db #0x12
   0562 0A                 1840 	.db #0x0A
   0563 08                 1841 	.db #0x08
   0564 02                 1842 	.db #0x02
   0565 00                 1843 	.db #0x00
   0566 10                 1844 	.db #0x10
   0567 12                 1845 	.db #0x12
   0568 0A                 1846 	.db #0x0A
   0569 08                 1847 	.db #0x08
   056A 02                 1848 	.db #0x02
   056B 00                 1849 	.db #0x00
   056C 12                 1850 	.db #0x12
   056D 0A                 1851 	.db #0x0A
   056E 08                 1852 	.db #0x08
   056F 02                 1853 	.db #0x02
   0570 00                 1854 	.db #0x00
   0571 10                 1855 	.db #0x10
   0572 12                 1856 	.db #0x12
   0573 0A                 1857 	.db #0x0A
   0574 08                 1858 	.db #0x08
   0575 02                 1859 	.db #0x02
   0576 00                 1860 	.db #0x00
   0577 10                 1861 	.db #0x10
   0578 12                 1862 	.db #0x12
   0579 0A                 1863 	.db #0x0A
   057A 08                 1864 	.db #0x08
   057B 02                 1865 	.db #0x02
   057C 10                 1866 	.db #0x10
   057D 12                 1867 	.db #0x12
   057E 0A                 1868 	.db #0x0A
   057F 08                 1869 	.db #0x08
   0580 02                 1870 	.db #0x02
   0581 00                 1871 	.db #0x00
   0582 10                 1872 	.db #0x10
   0583 12                 1873 	.db #0x12
   0584 0A                 1874 	.db #0x0A
   0585 08                 1875 	.db #0x08
   0586 02                 1876 	.db #0x02
   0587 00                 1877 	.db #0x00
   0588 10                 1878 	.db #0x10
   0589 12                 1879 	.db #0x12
   058A 0A                 1880 	.db #0x0A
   058B 08                 1881 	.db #0x08
   058C 00                 1882 	.db #0x00
   058D 10                 1883 	.db #0x10
   058E 12                 1884 	.db #0x12
   058F 0A                 1885 	.db #0x0A
   0590 08                 1886 	.db #0x08
   0591 02                 1887 	.db #0x02
   0592 00                 1888 	.db #0x00
   0593 10                 1889 	.db #0x10
   0594 12                 1890 	.db #0x12
   0595 0A                 1891 	.db #0x0A
   0596 08                 1892 	.db #0x08
   0597 02                 1893 	.db #0x02
   0598 00                 1894 	.db #0x00
   0599 10                 1895 	.db #0x10
   059A 12                 1896 	.db #0x12
   059B 0A                 1897 	.db #0x0A
   059C 02                 1898 	.db #0x02
   059D 00                 1899 	.db #0x00
   059E 10                 1900 	.db #0x10
   059F 12                 1901 	.db #0x12
   05A0 0A                 1902 	.db #0x0A
   05A1 08                 1903 	.db #0x08
   05A2 02                 1904 	.db #0x02
   05A3 00                 1905 	.db #0x00
   05A4 10                 1906 	.db #0x10
   05A5 12                 1907 	.db #0x12
   05A6 0A                 1908 	.db #0x0A
   05A7 08                 1909 	.db #0x08
   05A8 02                 1910 	.db #0x02
   05A9 00                 1911 	.db #0x00
   05AA 10                 1912 	.db #0x10
   05AB 12                 1913 	.db #0x12
   05AC 08                 1914 	.db #0x08
   05AD 02                 1915 	.db #0x02
   05AE 00                 1916 	.db #0x00
   05AF 10                 1917 	.db #0x10
   05B0 12                 1918 	.db #0x12
   05B1 0A                 1919 	.db #0x0A
   05B2 08                 1920 	.db #0x08
   05B3 02                 1921 	.db #0x02
   05B4 00                 1922 	.db #0x00
   05B5 10                 1923 	.db #0x10
   05B6 12                 1924 	.db #0x12
   05B7 0A                 1925 	.db #0x0A
   05B8 08                 1926 	.db #0x08
   05B9 02                 1927 	.db #0x02
   05BA 00                 1928 	.db #0x00
   05BB 10                 1929 	.db #0x10
   05BC 0A                 1930 	.db #0x0A
   05BD 08                 1931 	.db #0x08
   05BE 02                 1932 	.db #0x02
   05BF 00                 1933 	.db #0x00
   05C0 10                 1934 	.db #0x10
   05C1 12                 1935 	.db #0x12
   05C2 0A                 1936 	.db #0x0A
   05C3 08                 1937 	.db #0x08
   05C4 02                 1938 	.db #0x02
   05C5 00                 1939 	.db #0x00
   05C6 10                 1940 	.db #0x10
   05C7 12                 1941 	.db #0x12
   05C8 0A                 1942 	.db #0x0A
   05C9 08                 1943 	.db #0x08
   05CA 02                 1944 	.db #0x02
   05CB 00                 1945 	.db #0x00
   05CC 12                 1946 	.db #0x12
   05CD 0A                 1947 	.db #0x0A
   05CE 08                 1948 	.db #0x08
   05CF 02                 1949 	.db #0x02
   05D0 00                 1950 	.db #0x00
   05D1 10                 1951 	.db #0x10
   05D2 12                 1952 	.db #0x12
   05D3 0A                 1953 	.db #0x0A
   05D4 08                 1954 	.db #0x08
   05D5 02                 1955 	.db #0x02
   05D6 00                 1956 	.db #0x00
   05D7 10                 1957 	.db #0x10
   05D8 12                 1958 	.db #0x12
   05D9 0A                 1959 	.db #0x0A
   05DA 08                 1960 	.db #0x08
   05DB 02                 1961 	.db #0x02
   05DC 10                 1962 	.db #0x10
   05DD 12                 1963 	.db #0x12
   05DE 0A                 1964 	.db #0x0A
   05DF 08                 1965 	.db #0x08
   05E0 02                 1966 	.db #0x02
   05E1 00                 1967 	.db #0x00
   05E2 10                 1968 	.db #0x10
   05E3 12                 1969 	.db #0x12
   05E4 0A                 1970 	.db #0x0A
   05E5 08                 1971 	.db #0x08
   05E6 02                 1972 	.db #0x02
   05E7 00                 1973 	.db #0x00
   05E8 10                 1974 	.db #0x10
   05E9 12                 1975 	.db #0x12
   05EA 0A                 1976 	.db #0x0A
   05EB 08                 1977 	.db #0x08
                           1978 ;demo.c:139: void my_isr(void) interrupt
                           1979 ;	---------------------------------
                           1980 ; Function my_isr
                           1981 ; ---------------------------------
   05EC                    1982 _my_isr_start::
   05EC                    1983 _my_isr:
   05EC F5                 1984 	push	af
   05ED C5                 1985 	push	bc
   05EE D5                 1986 	push	de
   05EF E5                 1987 	push	hl
   05F0 FD E5              1988 	push	iy
                           1989 ;demo.c:141: DI;
   05F2 F3                 1990 		di 
                           1991 ;demo.c:143: READ_VDP_STATUS;
   05F3 DB 99              1992 		in a,(#0x99) 
                           1993 ;demo.c:145: PLY_Play();
   05F5 CDr00s00           1994 	call	_PLY_Play
                           1995 ;demo.c:146: PLY_SendRegisters();
   05F8 CDr00s00           1996 	call	_PLY_SendRegisters
                           1997 ;demo.c:148: vbicount+=1;
   05FB FD 21r00s41        1998 	ld	iy,#_vbicount
   05FF FD 34 00           1999 	inc	0 (iy)
   0602 20 07              2000 	jr	NZ,00103$
   0604 FD 21r00s41        2001 	ld	iy,#_vbicount
   0608 FD 34 01           2002 	inc	1 (iy)
   060B                    2003 00103$:
                           2004 ;demo.c:149: tick++;
   060B FD 21r02s41        2005 	ld	iy,#_tick
   060F FD 34 00           2006 	inc	0 (iy)
   0612 20 07              2007 	jr	NZ,00104$
   0614 FD 21r02s41        2008 	ld	iy,#_tick
   0618 FD 34 01           2009 	inc	1 (iy)
   061B                    2010 00104$:
                           2011 ;demo.c:151: EI;
   061B FB                 2012 		ei 
   061C FD E1              2013 	pop	iy
   061E E1                 2014 	pop	hl
   061F D1                 2015 	pop	de
   0620 C1                 2016 	pop	bc
   0621 F1                 2017 	pop	af
   0622 ED 4D              2018 	reti
   0624                    2019 _my_isr_end::
                           2020 ;demo.c:154: void color_isr(void) interrupt
                           2021 ;	---------------------------------
                           2022 ; Function color_isr
                           2023 ; ---------------------------------
   0624                    2024 _color_isr_start::
   0624                    2025 _color_isr:
   0624 F5                 2026 	push	af
   0625 C5                 2027 	push	bc
   0626 D5                 2028 	push	de
   0627 E5                 2029 	push	hl
   0628 FD E5              2030 	push	iy
                           2031 ;demo.c:156: DI;
   062A F3                 2032 		di 
                           2033 ;demo.c:158: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              2034 	ld	a,#0x01
   062D F5                 2035 	push	af
   062E 33                 2036 	inc	sp
   062F CDr00s00           2037 	call	_vdp2_status
   0632 33                 2038 	inc	sp
   0633 4D                 2039 	ld	c,l
   0634 21 00 00           2040 	ld	hl,#0x0000
   0637 E5                 2041 	push	hl
   0638 79                 2042 	ld	a,c
   0639 F5                 2043 	push	af
   063A 33                 2044 	inc	sp
   063B CDr00s00           2045 	call	_isNthBitSet
   063E F1                 2046 	pop	af
   063F 33                 2047 	inc	sp
   0640 44                 2048 	ld	b,h
   0641 4D                 2049 	ld	c,l
   0642 79                 2050 	ld	a,c
   0643 B0                 2051 	or	a,b
   0644 28 19              2052 	jr	Z,00102$
                           2053 ;demo.c:159: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r00s41           2054 	ld	hl,#_vbicount + 0
   0649 4E                 2055 	ld	c,(hl)
   064A 06 00              2056 	ld	b,#0x00
   064C 21r00s00           2057 	ld	hl,#_sintab
   064F 09                 2058 	add	hl,bc
   0650 7E                 2059 	ld	a,(hl)
   0651 F5                 2060 	push	af
   0652 33                 2061 	inc	sp
   0653 3E 17              2062 	ld	a,#0x17
   0655 F5                 2063 	push	af
   0656 33                 2064 	inc	sp
   0657 CDr00s00           2065 	call	_vdp_register
   065A F1                 2066 	pop	af
                           2067 ;demo.c:160: READ_VDP_STATUS;
   065B DB 99              2068 		in a,(#0x99) 
   065D 18 18              2069 	jr	00103$
   065F                    2070 00102$:
                           2071 ;demo.c:163: READ_VDP_STATUS;
   065F DB 99              2072 		in a,(#0x99) 
                           2073 ;demo.c:164: vbicount++;
   0661 FD 21r00s41        2074 	ld	iy,#_vbicount
   0665 FD 34 00           2075 	inc	0 (iy)
   0668 20 07              2076 	jr	NZ,00107$
   066A FD 21r00s41        2077 	ld	iy,#_vbicount
   066E FD 34 01           2078 	inc	1 (iy)
   0671                    2079 00107$:
                           2080 ;demo.c:167: PLY_Play();
   0671 CDr00s00           2081 	call	_PLY_Play
                           2082 ;demo.c:168: PLY_SendRegisters();
   0674 CDr00s00           2083 	call	_PLY_SendRegisters
   0677                    2084 00103$:
                           2085 ;demo.c:171: EI;
   0677 FB                 2086 		ei 
   0678 FD E1              2087 	pop	iy
   067A E1                 2088 	pop	hl
   067B D1                 2089 	pop	de
   067C C1                 2090 	pop	bc
   067D F1                 2091 	pop	af
   067E ED 4D              2092 	reti
   0680                    2093 _color_isr_end::
                           2094 ;demo.c:178: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2095 ;	---------------------------------
                           2096 ; Function ge5_load
                           2097 ; ---------------------------------
   0680                    2098 _ge5_load_start::
   0680                    2099 _ge5_load:
   0680 DD E5              2100 	push	ix
   0682 DD 21 00 00        2101 	ld	ix,#0
   0686 DD 39              2102 	add	ix,sp
   0688 21 D2 FF           2103 	ld	hl,#-46
   068B 39                 2104 	add	hl,sp
   068C F9                 2105 	ld	sp,hl
                           2106 ;demo.c:182: if(debugprint == 1) {
   068D DD 7E 09           2107 	ld	a,9 (ix)
   0690 D6 01              2108 	sub	a,#0x01
   0692 20 06              2109 	jr	NZ,00125$
   0694 DD 7E 0A           2110 	ld	a,10 (ix)
   0697 B7                 2111 	or	a,a
   0698 28 02              2112 	jr	Z,00126$
   069A                    2113 00125$:
   069A 18 1B              2114 	jr	00102$
   069C                    2115 00126$:
                           2116 ;demo.c:183: puts("loading ge5file: ");
   069C 21r7Bs07           2117 	ld	hl,#__str_0
   069F E5                 2118 	push	hl
   06A0 CDr00s00           2119 	call	_puts
   06A3 F1                 2120 	pop	af
                           2121 ;demo.c:184: puts(file_name);
   06A4 DD 6E 04           2122 	ld	l,4 (ix)
   06A7 DD 66 05           2123 	ld	h,5 (ix)
   06AA E5                 2124 	push	hl
   06AB CDr00s00           2125 	call	_puts
   06AE F1                 2126 	pop	af
                           2127 ;demo.c:185: puts("\r\n");
   06AF 21r8Ds07           2128 	ld	hl,#__str_1
   06B2 E5                 2129 	push	hl
   06B3 CDr00s00           2130 	call	_puts
   06B6 F1                 2131 	pop	af
   06B7                    2132 00102$:
                           2133 ;demo.c:188: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2134 	ld	hl,#0x0000
   06BA 39                 2135 	add	hl,sp
   06BB 4D                 2136 	ld	c,l
   06BC 44                 2137 	ld	b,h
   06BD 21 2E 00           2138 	ld	hl,#0x002E
   06C0 E5                 2139 	push	hl
   06C1 3E 00              2140 	ld	a,#0x00
   06C3 F5                 2141 	push	af
   06C4 33                 2142 	inc	sp
   06C5 C5                 2143 	push	bc
   06C6 CDr00s00           2144 	call	_memset
   06C9 F1                 2145 	pop	af
   06CA F1                 2146 	pop	af
   06CB 33                 2147 	inc	sp
                           2148 ;demo.c:190: f.record_size = 128;
   06CC 21 00 00           2149 	ld	hl,#0x0000
   06CF 39                 2150 	add	hl,sp
   06D0 4D                 2151 	ld	c,l
   06D1 44                 2152 	ld	b,h
   06D2 21 0F 00           2153 	ld	hl,#0x000F
   06D5 09                 2154 	add	hl,bc
   06D6 EB                 2155 	ex	de,hl
   06D7 3E 80              2156 	ld	a,#0x80
   06D9 12                 2157 	ld	(de),a
                           2158 ;demo.c:191: f.drive = 0;
   06DA 3E 00              2159 	ld	a,#0x00
   06DC 02                 2160 	ld	(bc),a
                           2161 ;demo.c:193: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2162 	ld	e,4 (ix)
   06E0 DD 56 05           2163 	ld	d,5 (ix)
   06E3 03                 2164 	inc	bc
   06E4 21 0B 00           2165 	ld	hl,#0x000B
   06E7 E5                 2166 	push	hl
   06E8 D5                 2167 	push	de
   06E9 C5                 2168 	push	bc
   06EA CDr00s00           2169 	call	_memcpy
   06ED F1                 2170 	pop	af
   06EE F1                 2171 	pop	af
   06EF F1                 2172 	pop	af
                           2173 ;demo.c:195: if (open(&f) != 0) return 0;
   06F0 21 00 00           2174 	ld	hl,#0x0000
   06F3 39                 2175 	add	hl,sp
   06F4 E5                 2176 	push	hl
   06F5 CDr00s00           2177 	call	_open
   06F8 F1                 2178 	pop	af
   06F9 AF                 2179 	xor	a,a
   06FA B5                 2180 	or	a,l
   06FB 28 05              2181 	jr	Z,00104$
   06FD 2E 00              2182 	ld	l,#0x00
   06FF C3r76s07           2183 	jp	00116$
   0702                    2184 00104$:
                           2185 ;demo.c:196: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2186 	ld	l,7 (ix)
   0705 DD 66 08           2187 	ld	h,8 (ix)
   0708 E5                 2188 	push	hl
   0709 DD 7E 06           2189 	ld	a,6 (ix)
   070C F5                 2190 	push	af
   070D 33                 2191 	inc	sp
   070E CDr00s00           2192 	call	_vdp_set_write_address
   0711 F1                 2193 	pop	af
   0712 33                 2194 	inc	sp
                           2195 ;demo.c:198: for (i = 0; i < 213; i++) {
   0713 0E 00              2196 	ld	c,#0x00
   0715                    2197 00112$:
   0715 79                 2198 	ld	a,c
   0716 D6 D5              2199 	sub	a,#0xD5
   0718 D2r6Bs07           2200 	jp	NC,00115$
                           2201 ;demo.c:199: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2202 	push	bc
   071C 21rE0s3F           2203 	ld	hl,#_scratch
   071F E5                 2204 	push	hl
   0720 CDr00s00           2205 	call	_block_set_data_ptr
   0723 F1                 2206 	pop	af
   0724 7D                 2207 	ld	a,l
   0725 C1                 2208 	pop	bc
   0726 47                 2209 	ld	b,a
   0727 B7                 2210 	or	a,a
   0728 28 05              2211 	jr	Z,00106$
   072A 2E 00              2212 	ld	l,#0x00
   072C C3r76s07           2213 	jp	00116$
   072F                    2214 00106$:
                           2215 ;demo.c:200: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2216 	ld	hl,#0x0000
   0732 39                 2217 	add	hl,sp
   0733 C5                 2218 	push	bc
   0734 E5                 2219 	push	hl
   0735 CDr00s00           2220 	call	_block_read
   0738 F1                 2221 	pop	af
   0739 7D                 2222 	ld	a,l
   073A C1                 2223 	pop	bc
   073B 47                 2224 	ld	b,a
   073C B7                 2225 	or	a,a
   073D 28 04              2226 	jr	Z,00108$
   073F 2E 00              2227 	ld	l,#0x00
   0741 18 33              2228 	jr	00116$
   0743                    2229 00108$:
                           2230 ;demo.c:202: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2231 	xor	a,a
   0744 B1                 2232 	or	a,c
   0745 20 11              2233 	jr	NZ,00110$
   0747 11rE7s3F           2234 	ld	de,#_scratch + 7
   074A C5                 2235 	push	bc
   074B 3E 79              2236 	ld	a,#0x79
   074D F5                 2237 	push	af
   074E 33                 2238 	inc	sp
   074F D5                 2239 	push	de
   0750 CDr00s00           2240 	call	_vdp_load_screen
   0753 F1                 2241 	pop	af
   0754 33                 2242 	inc	sp
   0755 C1                 2243 	pop	bc
   0756 18 0F              2244 	jr	00114$
   0758                    2245 00110$:
                           2246 ;demo.c:203: else vdp_load_screen(scratch, 128);
   0758 C5                 2247 	push	bc
   0759 3E 80              2248 	ld	a,#0x80
   075B F5                 2249 	push	af
   075C 33                 2250 	inc	sp
   075D 21rE0s3F           2251 	ld	hl,#_scratch
   0760 E5                 2252 	push	hl
   0761 CDr00s00           2253 	call	_vdp_load_screen
   0764 F1                 2254 	pop	af
   0765 33                 2255 	inc	sp
   0766 C1                 2256 	pop	bc
   0767                    2257 00114$:
                           2258 ;demo.c:198: for (i = 0; i < 213; i++) {
   0767 0C                 2259 	inc	c
   0768 C3r15s07           2260 	jp	00112$
   076B                    2261 00115$:
                           2262 ;demo.c:206: close(&f);
   076B 21 00 00           2263 	ld	hl,#0x0000
   076E 39                 2264 	add	hl,sp
   076F E5                 2265 	push	hl
   0770 CDr00s00           2266 	call	_close
   0773 F1                 2267 	pop	af
                           2268 ;demo.c:208: return 1;
   0774 2E 01              2269 	ld	l,#0x01
   0776                    2270 00116$:
   0776 DD F9              2271 	ld	sp,ix
   0778 DD E1              2272 	pop	ix
   077A C9                 2273 	ret
   077B                    2274 _ge5_load_end::
   077B                    2275 __str_0:
   077B 6C 6F 61 64 69 6E  2276 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2277 	.db 0x00
   078D                    2278 __str_1:
   078D 0D                 2279 	.db 0x0D
   078E 0A                 2280 	.db 0x0A
   078F 00                 2281 	.db 0x00
                           2282 ;demo.c:211: void scratch_clear() {
                           2283 ;	---------------------------------
                           2284 ; Function scratch_clear
                           2285 ; ---------------------------------
   0790                    2286 _scratch_clear_start::
   0790                    2287 _scratch_clear:
                           2288 ;demo.c:212: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2289 	ld	hl,#0x0080
   0793 E5                 2290 	push	hl
   0794 3E 00              2291 	ld	a,#0x00
   0796 F5                 2292 	push	af
   0797 33                 2293 	inc	sp
   0798 21rE0s3F           2294 	ld	hl,#_scratch
   079B E5                 2295 	push	hl
   079C CDr00s00           2296 	call	_memset
   079F F1                 2297 	pop	af
   07A0 F1                 2298 	pop	af
   07A1 33                 2299 	inc	sp
   07A2 C9                 2300 	ret
   07A3                    2301 _scratch_clear_end::
                           2302 ;demo.c:215: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2303 ;	---------------------------------
                           2304 ; Function pal_load
                           2305 ; ---------------------------------
   07A3                    2306 _pal_load_start::
   07A3                    2307 _pal_load:
   07A3 DD E5              2308 	push	ix
   07A5 DD 21 00 00        2309 	ld	ix,#0
   07A9 DD 39              2310 	add	ix,sp
   07AB 21 D2 FF           2311 	ld	hl,#-46
   07AE 39                 2312 	add	hl,sp
   07AF F9                 2313 	ld	sp,hl
                           2314 ;demo.c:218: if(debugprint == 1) {
   07B0 DD 7E 07           2315 	ld	a,7 (ix)
   07B3 D6 01              2316 	sub	a,#0x01
   07B5 20 06              2317 	jr	NZ,00115$
   07B7 DD 7E 08           2318 	ld	a,8 (ix)
   07BA B7                 2319 	or	a,a
   07BB 28 02              2320 	jr	Z,00116$
   07BD                    2321 00115$:
   07BD 18 1B              2322 	jr	00102$
   07BF                    2323 00116$:
                           2324 ;demo.c:219: puts("loading palfile: ");
   07BF 21r6Ds08           2325 	ld	hl,#__str_2
   07C2 E5                 2326 	push	hl
   07C3 CDr00s00           2327 	call	_puts
   07C6 F1                 2328 	pop	af
                           2329 ;demo.c:220: puts(file_name);
   07C7 DD 6E 04           2330 	ld	l,4 (ix)
   07CA DD 66 05           2331 	ld	h,5 (ix)
   07CD E5                 2332 	push	hl
   07CE CDr00s00           2333 	call	_puts
   07D1 F1                 2334 	pop	af
                           2335 ;demo.c:221: puts("\r\n");
   07D2 21r7Fs08           2336 	ld	hl,#__str_3
   07D5 E5                 2337 	push	hl
   07D6 CDr00s00           2338 	call	_puts
   07D9 F1                 2339 	pop	af
   07DA                    2340 00102$:
                           2341 ;demo.c:224: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2342 	ld	hl,#0x0000
   07DD 39                 2343 	add	hl,sp
   07DE 4D                 2344 	ld	c,l
   07DF 44                 2345 	ld	b,h
   07E0 21 2E 00           2346 	ld	hl,#0x002E
   07E3 E5                 2347 	push	hl
   07E4 3E 00              2348 	ld	a,#0x00
   07E6 F5                 2349 	push	af
   07E7 33                 2350 	inc	sp
   07E8 C5                 2351 	push	bc
   07E9 CDr00s00           2352 	call	_memset
   07EC F1                 2353 	pop	af
   07ED F1                 2354 	pop	af
   07EE 33                 2355 	inc	sp
                           2356 ;demo.c:225: scratch_clear();
   07EF CDr90s07           2357 	call	_scratch_clear
                           2358 ;demo.c:227: f.record_size = ss;
   07F2 21 00 00           2359 	ld	hl,#0x0000
   07F5 39                 2360 	add	hl,sp
   07F6 4D                 2361 	ld	c,l
   07F7 44                 2362 	ld	b,h
   07F8 21 0F 00           2363 	ld	hl,#0x000F
   07FB 09                 2364 	add	hl,bc
   07FC EB                 2365 	ex	de,hl
   07FD DD 7E 06           2366 	ld	a,6 (ix)
   0800 12                 2367 	ld	(de),a
                           2368 ;demo.c:228: f.drive = 0;
   0801 3E 00              2369 	ld	a,#0x00
   0803 02                 2370 	ld	(bc),a
                           2371 ;demo.c:230: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2372 	ld	e,4 (ix)
   0807 DD 56 05           2373 	ld	d,5 (ix)
   080A 03                 2374 	inc	bc
   080B 21 0B 00           2375 	ld	hl,#0x000B
   080E E5                 2376 	push	hl
   080F D5                 2377 	push	de
   0810 C5                 2378 	push	bc
   0811 CDr00s00           2379 	call	_memcpy
   0814 F1                 2380 	pop	af
   0815 F1                 2381 	pop	af
   0816 F1                 2382 	pop	af
                           2383 ;demo.c:232: if (open(&f) != 0) return 0;
   0817 21 00 00           2384 	ld	hl,#0x0000
   081A 39                 2385 	add	hl,sp
   081B E5                 2386 	push	hl
   081C CDr00s00           2387 	call	_open
   081F F1                 2388 	pop	af
   0820 AF                 2389 	xor	a,a
   0821 B5                 2390 	or	a,l
   0822 28 04              2391 	jr	Z,00104$
   0824 2E 00              2392 	ld	l,#0x00
   0826 18 40              2393 	jr	00109$
   0828                    2394 00104$:
                           2395 ;demo.c:233: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21rE0s3F           2396 	ld	hl,#_scratch
   082B E5                 2397 	push	hl
   082C CDr00s00           2398 	call	_block_set_data_ptr
   082F F1                 2399 	pop	af
   0830 AF                 2400 	xor	a,a
   0831 B5                 2401 	or	a,l
   0832 28 04              2402 	jr	Z,00106$
   0834 2E 00              2403 	ld	l,#0x00
   0836 18 30              2404 	jr	00109$
   0838                    2405 00106$:
                           2406 ;demo.c:234: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2407 	ld	hl,#0x0000
   083B 39                 2408 	add	hl,sp
   083C E5                 2409 	push	hl
   083D CDr00s00           2410 	call	_block_read
   0840 F1                 2411 	pop	af
   0841 AF                 2412 	xor	a,a
   0842 B5                 2413 	or	a,l
   0843 28 04              2414 	jr	Z,00108$
   0845 2E 00              2415 	ld	l,#0x00
   0847 18 1F              2416 	jr	00109$
   0849                    2417 00108$:
                           2418 ;demo.c:236: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2419 	ld	c,6 (ix)
   084C 06 00              2420 	ld	b,#0x00
   084E 11rE7s3F           2421 	ld	de,#_scratch + 7
   0851 C5                 2422 	push	bc
   0852 D5                 2423 	push	de
   0853 21r60s40           2424 	ld	hl,#_cur_palette
   0856 E5                 2425 	push	hl
   0857 CDr00s00           2426 	call	_memcpy
   085A F1                 2427 	pop	af
   085B F1                 2428 	pop	af
   085C F1                 2429 	pop	af
                           2430 ;demo.c:238: close(&f);
   085D 21 00 00           2431 	ld	hl,#0x0000
   0860 39                 2432 	add	hl,sp
   0861 E5                 2433 	push	hl
   0862 CDr00s00           2434 	call	_close
   0865 F1                 2435 	pop	af
                           2436 ;demo.c:239: return 1;
   0866 2E 01              2437 	ld	l,#0x01
   0868                    2438 00109$:
   0868 DD F9              2439 	ld	sp,ix
   086A DD E1              2440 	pop	ix
   086C C9                 2441 	ret
   086D                    2442 _pal_load_end::
   086D                    2443 __str_2:
   086D 6C 6F 61 64 69 6E  2444 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2445 	.db 0x00
   087F                    2446 __str_3:
   087F 0D                 2447 	.db 0x0D
   0880 0A                 2448 	.db 0x0A
   0881 00                 2449 	.db 0x00
                           2450 ;demo.c:243: void pause() {
                           2451 ;	---------------------------------
                           2452 ; Function pause
                           2453 ; ---------------------------------
   0882                    2454 _pause_start::
   0882                    2455 _pause:
                           2456 ;demo.c:244: uint8_t i,j,k = 0;
                           2457 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2458 	ld	bc,#0x0000
   0885                    2459 00104$:
   0885 78                 2460 	ld	a,b
   0886 D6 FF              2461 	sub	a,#0xFF
   0888 D0                 2462 	ret	NC
                           2463 ;demo.c:246: for (j = 0; j < 255; j++) {
   0889 59                 2464 	ld	e,c
   088A 16 FF              2465 	ld	d,#0xFF
   088C                    2466 00103$:
                           2467 ;demo.c:247: k++;
   088C 1C                 2468 	inc	e
   088D 15                 2469 	dec	d
                           2470 ;demo.c:246: for (j = 0; j < 255; j++) {
   088E AF                 2471 	xor	a,a
   088F B2                 2472 	or	a,d
   0890 20 FA              2473 	jr	NZ,00103$
                           2474 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0892 4B                 2475 	ld	c,e
   0893 04                 2476 	inc	b
   0894 18 EF              2477 	jr	00104$
   0896                    2478 _pause_end::
                           2479 ;demo.c:253: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2480 ;	---------------------------------
                           2481 ; Function raw_load
                           2482 ; ---------------------------------
   0896                    2483 _raw_load_start::
   0896                    2484 _raw_load:
   0896 DD E5              2485 	push	ix
   0898 DD 21 00 00        2486 	ld	ix,#0
   089C DD 39              2487 	add	ix,sp
   089E 21 D2 FF           2488 	ld	hl,#-46
   08A1 39                 2489 	add	hl,sp
   08A2 F9                 2490 	ld	sp,hl
                           2491 ;demo.c:258: if(debugprint == 1) {
   08A3 DD 7E 0A           2492 	ld	a,10 (ix)
   08A6 D6 01              2493 	sub	a,#0x01
   08A8 20 06              2494 	jr	NZ,00120$
   08AA DD 7E 0B           2495 	ld	a,11 (ix)
   08AD B7                 2496 	or	a,a
   08AE 28 02              2497 	jr	Z,00121$
   08B0                    2498 00120$:
   08B0 18 1B              2499 	jr	00102$
   08B2                    2500 00121$:
                           2501 ;demo.c:259: puts("loading rawfile: ");
   08B2 21r84s09           2502 	ld	hl,#__str_4
   08B5 E5                 2503 	push	hl
   08B6 CDr00s00           2504 	call	_puts
   08B9 F1                 2505 	pop	af
                           2506 ;demo.c:260: puts(file_name);
   08BA DD 6E 04           2507 	ld	l,4 (ix)
   08BD DD 66 05           2508 	ld	h,5 (ix)
   08C0 E5                 2509 	push	hl
   08C1 CDr00s00           2510 	call	_puts
   08C4 F1                 2511 	pop	af
                           2512 ;demo.c:261: puts("\r\n");
   08C5 21r96s09           2513 	ld	hl,#__str_5
   08C8 E5                 2514 	push	hl
   08C9 CDr00s00           2515 	call	_puts
   08CC F1                 2516 	pop	af
   08CD                    2517 00102$:
                           2518 ;demo.c:264: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2519 	ld	hl,#0x0000
   08D0 39                 2520 	add	hl,sp
   08D1 4D                 2521 	ld	c,l
   08D2 44                 2522 	ld	b,h
   08D3 21 2E 00           2523 	ld	hl,#0x002E
   08D6 E5                 2524 	push	hl
   08D7 3E 00              2525 	ld	a,#0x00
   08D9 F5                 2526 	push	af
   08DA 33                 2527 	inc	sp
   08DB C5                 2528 	push	bc
   08DC CDr00s00           2529 	call	_memset
   08DF F1                 2530 	pop	af
   08E0 F1                 2531 	pop	af
   08E1 33                 2532 	inc	sp
                           2533 ;demo.c:265: scratch_clear();
   08E2 CDr90s07           2534 	call	_scratch_clear
                           2535 ;demo.c:267: f.record_size = 128;
   08E5 21 00 00           2536 	ld	hl,#0x0000
   08E8 39                 2537 	add	hl,sp
   08E9 4D                 2538 	ld	c,l
   08EA 44                 2539 	ld	b,h
   08EB 21 0F 00           2540 	ld	hl,#0x000F
   08EE 09                 2541 	add	hl,bc
   08EF EB                 2542 	ex	de,hl
   08F0 3E 80              2543 	ld	a,#0x80
   08F2 12                 2544 	ld	(de),a
                           2545 ;demo.c:268: f.drive = 0;
   08F3 3E 00              2546 	ld	a,#0x00
   08F5 02                 2547 	ld	(bc),a
                           2548 ;demo.c:270: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2549 	ld	e,4 (ix)
   08F9 DD 56 05           2550 	ld	d,5 (ix)
   08FC 03                 2551 	inc	bc
   08FD 21 0B 00           2552 	ld	hl,#0x000B
   0900 E5                 2553 	push	hl
   0901 D5                 2554 	push	de
   0902 C5                 2555 	push	bc
   0903 CDr00s00           2556 	call	_memcpy
   0906 F1                 2557 	pop	af
   0907 F1                 2558 	pop	af
   0908 F1                 2559 	pop	af
                           2560 ;demo.c:272: if (open(&f) != 0) return 0;
   0909 21 00 00           2561 	ld	hl,#0x0000
   090C 39                 2562 	add	hl,sp
   090D E5                 2563 	push	hl
   090E CDr00s00           2564 	call	_open
   0911 F1                 2565 	pop	af
   0912 AF                 2566 	xor	a,a
   0913 B5                 2567 	or	a,l
   0914 28 05              2568 	jr	Z,00119$
   0916 2E 00              2569 	ld	l,#0x00
   0918 C3r7Fs09           2570 	jp	00112$
                           2571 ;demo.c:274: while(total < size) {
   091B                    2572 00119$:
   091B 01 00 00           2573 	ld	bc,#0x0000
   091E                    2574 00109$:
   091E 79                 2575 	ld	a,c
   091F DD 96 06           2576 	sub	a,6 (ix)
   0922 78                 2577 	ld	a,b
   0923 DD 9E 07           2578 	sbc	a,7 (ix)
   0926 F2r74s09           2579 	jp	P,00111$
                           2580 ;demo.c:275: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2581 	push	bc
   092A 21rE0s3F           2582 	ld	hl,#_scratch
   092D E5                 2583 	push	hl
   092E CDr00s00           2584 	call	_block_set_data_ptr
   0931 F1                 2585 	pop	af
   0932 5D                 2586 	ld	e,l
   0933 C1                 2587 	pop	bc
   0934 AF                 2588 	xor	a,a
   0935 B3                 2589 	or	a,e
   0936 28 04              2590 	jr	Z,00106$
   0938 2E 00              2591 	ld	l,#0x00
   093A 18 43              2592 	jr	00112$
   093C                    2593 00106$:
                           2594 ;demo.c:276: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2595 	ld	hl,#0x0000
   093F 39                 2596 	add	hl,sp
   0940 C5                 2597 	push	bc
   0941 E5                 2598 	push	hl
   0942 CDr00s00           2599 	call	_block_read
   0945 F1                 2600 	pop	af
   0946 5D                 2601 	ld	e,l
   0947 C1                 2602 	pop	bc
   0948 AF                 2603 	xor	a,a
   0949 B3                 2604 	or	a,e
   094A 28 04              2605 	jr	Z,00108$
   094C 2E 00              2606 	ld	l,#0x00
   094E 18 2F              2607 	jr	00112$
   0950                    2608 00108$:
                           2609 ;demo.c:278: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2610 	ld	a,8 (ix)
   0953 81                 2611 	add	a,c
   0954 5F                 2612 	ld	e,a
   0955 DD 7E 09           2613 	ld	a,9 (ix)
   0958 88                 2614 	adc	a,b
   0959 57                 2615 	ld	d,a
   095A C5                 2616 	push	bc
   095B 21 80 00           2617 	ld	hl,#0x0080
   095E E5                 2618 	push	hl
   095F 21rE0s3F           2619 	ld	hl,#_scratch
   0962 E5                 2620 	push	hl
   0963 D5                 2621 	push	de
   0964 CDr00s00           2622 	call	_memcpy
   0967 F1                 2623 	pop	af
   0968 F1                 2624 	pop	af
   0969 F1                 2625 	pop	af
   096A C1                 2626 	pop	bc
                           2627 ;demo.c:280: total+=incr;
   096B 21 80 00           2628 	ld	hl,#0x0080
   096E 09                 2629 	add	hl,bc
   096F 4D                 2630 	ld	c,l
   0970 44                 2631 	ld	b,h
   0971 C3r1Es09           2632 	jp	00109$
   0974                    2633 00111$:
                           2634 ;demo.c:283: close(&f);
   0974 21 00 00           2635 	ld	hl,#0x0000
   0977 39                 2636 	add	hl,sp
   0978 E5                 2637 	push	hl
   0979 CDr00s00           2638 	call	_close
   097C F1                 2639 	pop	af
                           2640 ;demo.c:285: return 1;
   097D 2E 01              2641 	ld	l,#0x01
   097F                    2642 00112$:
   097F DD F9              2643 	ld	sp,ix
   0981 DD E1              2644 	pop	ix
   0983 C9                 2645 	ret
   0984                    2646 _raw_load_end::
   0984                    2647 __str_4:
   0984 6C 6F 61 64 69 6E  2648 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2649 	.db 0x00
   0996                    2650 __str_5:
   0996 0D                 2651 	.db 0x0D
   0997 0A                 2652 	.db 0x0A
   0998 00                 2653 	.db 0x00
                           2654 ;demo.c:288: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2655 ;	---------------------------------
                           2656 ; Function pck_load
                           2657 ; ---------------------------------
   0999                    2658 _pck_load_start::
   0999                    2659 _pck_load:
   0999 DD E5              2660 	push	ix
   099B DD 21 00 00        2661 	ld	ix,#0
   099F DD 39              2662 	add	ix,sp
                           2663 ;demo.c:289: if(debugprint == 1) {
   09A1 DD 7E 0C           2664 	ld	a,12 (ix)
   09A4 D6 01              2665 	sub	a,#0x01
   09A6 20 06              2666 	jr	NZ,00106$
   09A8 DD 7E 0D           2667 	ld	a,13 (ix)
   09AB B7                 2668 	or	a,a
   09AC 28 02              2669 	jr	Z,00107$
   09AE                    2670 00106$:
   09AE 18 1B              2671 	jr	00102$
   09B0                    2672 00107$:
                           2673 ;demo.c:290: puts("loading pckfile: ");
   09B0 21r12s0A           2674 	ld	hl,#__str_6
   09B3 E5                 2675 	push	hl
   09B4 CDr00s00           2676 	call	_puts
   09B7 F1                 2677 	pop	af
                           2678 ;demo.c:291: puts(file_name);
   09B8 DD 6E 04           2679 	ld	l,4 (ix)
   09BB DD 66 05           2680 	ld	h,5 (ix)
   09BE E5                 2681 	push	hl
   09BF CDr00s00           2682 	call	_puts
   09C2 F1                 2683 	pop	af
                           2684 ;demo.c:292: puts("\r\n");
   09C3 21r24s0A           2685 	ld	hl,#__str_7
   09C6 E5                 2686 	push	hl
   09C7 CDr00s00           2687 	call	_puts
   09CA F1                 2688 	pop	af
   09CB                    2689 00102$:
                           2690 ;demo.c:294: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2691 	ld	c,6 (ix)
   09CE DD 46 07           2692 	ld	b,7 (ix)
   09D1 C5                 2693 	push	bc
   09D2 C5                 2694 	push	bc
   09D3 3E 00              2695 	ld	a,#0x00
   09D5 F5                 2696 	push	af
   09D6 33                 2697 	inc	sp
   09D7 21r60s01           2698 	ld	hl,#_packbuffer
   09DA E5                 2699 	push	hl
   09DB CDr00s00           2700 	call	_memset
   09DE F1                 2701 	pop	af
   09DF F1                 2702 	pop	af
   09E0 33                 2703 	inc	sp
   09E1 C1                 2704 	pop	bc
                           2705 ;demo.c:295: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2706 	ld	hl,#0x0000
   09E5 E5                 2707 	push	hl
   09E6 21r60s01           2708 	ld	hl,#_packbuffer
   09E9 E5                 2709 	push	hl
   09EA C5                 2710 	push	bc
   09EB DD 6E 04           2711 	ld	l,4 (ix)
   09EE DD 66 05           2712 	ld	h,5 (ix)
   09F1 E5                 2713 	push	hl
   09F2 CDr96s08           2714 	call	_raw_load
   09F5 F1                 2715 	pop	af
   09F6 F1                 2716 	pop	af
   09F7 F1                 2717 	pop	af
   09F8 F1                 2718 	pop	af
                           2719 ;demo.c:296: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2720 	ld	a,10 (ix)
   09FC F5                 2721 	push	af
   09FD 33                 2722 	inc	sp
   09FE DD 6E 08           2723 	ld	l,8 (ix)
   0A01 DD 66 09           2724 	ld	h,9 (ix)
   0A04 E5                 2725 	push	hl
   0A05 21r60s01           2726 	ld	hl,#_packbuffer
   0A08 E5                 2727 	push	hl
   0A09 CDr00s00           2728 	call	_bitbuster
   0A0C F1                 2729 	pop	af
   0A0D F1                 2730 	pop	af
   0A0E 33                 2731 	inc	sp
   0A0F DD E1              2732 	pop	ix
   0A11 C9                 2733 	ret
   0A12                    2734 _pck_load_end::
   0A12                    2735 __str_6:
   0A12 6C 6F 61 64 69 6E  2736 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2737 	.db 0x00
   0A24                    2738 __str_7:
   0A24 0D                 2739 	.db 0x0D
   0A25 0A                 2740 	.db 0x0A
   0A26 00                 2741 	.db 0x00
                           2742 ;demo.c:299: void fadein() {
                           2743 ;	---------------------------------
                           2744 ; Function fadein
                           2745 ; ---------------------------------
   0A27                    2746 _fadein_start::
   0A27                    2747 _fadein:
   0A27 DD E5              2748 	push	ix
   0A29 DD 21 00 00        2749 	ld	ix,#0
   0A2D DD 39              2750 	add	ix,sp
   0A2F F5                 2751 	push	af
                           2752 ;demo.c:302: if (tick < 4) return;
   0A30 3Ar02s41           2753 	ld	a,(#_tick+0)
   0A33 D6 04              2754 	sub	a,#0x04
   0A35 3Ar03s41           2755 	ld	a,(#_tick+1)
   0A38 DE 00              2756 	sbc	a,#0x00
   0A3A F2r40s0A           2757 	jp	P,00102$
   0A3D C3rEEs0A           2758 	jp	00113$
   0A40                    2759 00102$:
                           2760 ;demo.c:304: tick = 0;
   0A40 21r02s41           2761 	ld	hl,#_tick + 0
   0A43 36 00              2762 	ld	(hl), #0x00
   0A45 21r03s41           2763 	ld	hl,#_tick + 1
   0A48 36 00              2764 	ld	(hl), #0x00
                           2765 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2766 	ld	c,#0x00
   0A4C                    2767 00109$:
   0A4C 79                 2768 	ld	a,c
   0A4D D6 20              2769 	sub	a,#0x20
   0A4F D2rE6s0A           2770 	jp	NC,00112$
                           2771 ;demo.c:307: uint8_t r = scratch[i] >> 4;
   0A52 3ErE0              2772 	ld	a,#<_scratch
   0A54 81                 2773 	add	a,c
   0A55 5F                 2774 	ld	e,a
   0A56 3Es3F              2775 	ld	a,#>_scratch
   0A58 CE 00              2776 	adc	a,#0x00
   0A5A 57                 2777 	ld	d,a
   0A5B 1A                 2778 	ld	a,(de)
   0A5C 47                 2779 	ld	b,a
   0A5D 58                 2780 	ld	e,b
   0A5E CB 3B              2781 	srl	e
   0A60 CB 3B              2782 	srl	e
   0A62 CB 3B              2783 	srl	e
   0A64 CB 3B              2784 	srl	e
                           2785 ;demo.c:308: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2786 	ld	a,b
   0A67 E6 0F              2787 	and	a,#0x0F
   0A69 DD 77 FF           2788 	ld	-1 (ix),a
                           2789 ;demo.c:309: uint8_t g = scratch[i+1];
   0A6C 51                 2790 	ld	d,c
   0A6D 14                 2791 	inc	d
   0A6E 3ErE0              2792 	ld	a,#<_scratch
   0A70 82                 2793 	add	a,d
   0A71 6F                 2794 	ld	l,a
   0A72 3Es3F              2795 	ld	a,#>_scratch
   0A74 CE 00              2796 	adc	a,#0x00
   0A76 67                 2797 	ld	h,a
   0A77 56                 2798 	ld	d,(hl)
   0A78 DD 72 FE           2799 	ld	-2 (ix),d
                           2800 ;demo.c:311: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3Er60              2801 	ld	a,#<_cur_palette
   0A7D 81                 2802 	add	a,c
   0A7E 6F                 2803 	ld	l,a
   0A7F 3Es40              2804 	ld	a,#>_cur_palette
   0A81 CE 00              2805 	adc	a,#0x00
   0A83 67                 2806 	ld	h,a
   0A84 56                 2807 	ld	d,(hl)
   0A85 CB 3A              2808 	srl	d
   0A87 CB 3A              2809 	srl	d
   0A89 CB 3A              2810 	srl	d
   0A8B CB 3A              2811 	srl	d
   0A8D 7B                 2812 	ld	a,e
   0A8E 92                 2813 	sub	a,d
   0A8F 30 01              2814 	jr	NC,00104$
   0A91 1C                 2815 	inc	e
   0A92                    2816 00104$:
                           2817 ;demo.c:312: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3Er60              2818 	ld	a,#<_cur_palette
   0A94 81                 2819 	add	a,c
   0A95 6F                 2820 	ld	l,a
   0A96 3Es40              2821 	ld	a,#>_cur_palette
   0A98 CE 00              2822 	adc	a,#0x00
   0A9A 67                 2823 	ld	h,a
   0A9B 7E                 2824 	ld	a,(hl)
   0A9C E6 0F              2825 	and	a,#0x0F
   0A9E 47                 2826 	ld	b,a
   0A9F DD 7E FF           2827 	ld	a,-1 (ix)
   0AA2 90                 2828 	sub	a,b
   0AA3 30 03              2829 	jr	NC,00106$
   0AA5 DD 34 FF           2830 	inc	-1 (ix)
   0AA8                    2831 00106$:
                           2832 ;demo.c:314: scratch[i] = (r << 4) | b;
   0AA8 3ErE0              2833 	ld	a,#<_scratch
   0AAA 81                 2834 	add	a,c
   0AAB 47                 2835 	ld	b,a
   0AAC 3Es3F              2836 	ld	a,#>_scratch
   0AAE CE 00              2837 	adc	a,#0x00
   0AB0 57                 2838 	ld	d,a
   0AB1 7B                 2839 	ld	a,e
   0AB2 07                 2840 	rlca
   0AB3 07                 2841 	rlca
   0AB4 07                 2842 	rlca
   0AB5 07                 2843 	rlca
   0AB6 E6 F0              2844 	and	a,#0xF0
   0AB8 DD B6 FF           2845 	or	a,-1 (ix)
   0ABB 68                 2846 	ld	l,b
   0ABC 62                 2847 	ld	h,d
   0ABD 77                 2848 	ld	(hl),a
                           2849 ;demo.c:315: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2850 	ld	b,c
   0ABF 04                 2851 	inc	b
   0AC0 3Er60              2852 	ld	a,#<_cur_palette
   0AC2 80                 2853 	add	a,b
   0AC3 5F                 2854 	ld	e,a
   0AC4 3Es40              2855 	ld	a,#>_cur_palette
   0AC6 CE 00              2856 	adc	a,#0x00
   0AC8 57                 2857 	ld	d,a
   0AC9 1A                 2858 	ld	a,(de)
   0ACA 5F                 2859 	ld	e,a
   0ACB DD 7E FE           2860 	ld	a,-2 (ix)
   0ACE 93                 2861 	sub	a,e
   0ACF 30 10              2862 	jr	NC,00111$
   0AD1 3ErE0              2863 	ld	a,#<_scratch
   0AD3 80                 2864 	add	a,b
   0AD4 47                 2865 	ld	b,a
   0AD5 3Es3F              2866 	ld	a,#>_scratch
   0AD7 CE 00              2867 	adc	a,#0x00
   0AD9 5F                 2868 	ld	e,a
   0ADA 68                 2869 	ld	l,b
   0ADB 67                 2870 	ld	h,a
   0ADC 7E                 2871 	ld	a,(hl)
   0ADD 3C                 2872 	inc	a
   0ADE 68                 2873 	ld	l,b
   0ADF 63                 2874 	ld	h,e
   0AE0 77                 2875 	ld	(hl),a
   0AE1                    2876 00111$:
                           2877 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2878 	inc	c
   0AE2 0C                 2879 	inc	c
   0AE3 C3r4Cs0A           2880 	jp	00109$
   0AE6                    2881 00112$:
                           2882 ;demo.c:319: vdp_load_palette(scratch);
   0AE6 21rE0s3F           2883 	ld	hl,#_scratch
   0AE9 E5                 2884 	push	hl
   0AEA CDr00s00           2885 	call	_vdp_load_palette
   0AED F1                 2886 	pop	af
   0AEE                    2887 00113$:
   0AEE DD F9              2888 	ld	sp,ix
   0AF0 DD E1              2889 	pop	ix
   0AF2 C9                 2890 	ret
   0AF3                    2891 _fadein_end::
                           2892 ;demo.c:331: void do_ymmm() {
                           2893 ;	---------------------------------
                           2894 ; Function do_ymmm
                           2895 ; ---------------------------------
   0AF3                    2896 _do_ymmm_start::
   0AF3                    2897 _do_ymmm:
   0AF3 DD E5              2898 	push	ix
   0AF5 DD 21 00 00        2899 	ld	ix,#0
   0AF9 DD 39              2900 	add	ix,sp
   0AFB F5                 2901 	push	af
                           2902 ;demo.c:335: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              2903 	ld	a,#0x20
   0AFE FD 21r02s41        2904 	ld	iy,#_tick
   0B02 FD 96 00           2905 	sub	a,0 (iy)
   0B05 3E 00              2906 	ld	a,#0x00
   0B07 FD 21r02s41        2907 	ld	iy,#_tick
   0B0B FD 9E 01           2908 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           2909 	jp	P,00102$
   0B11 21r02s41           2910 	ld	hl,#_tick + 0
   0B14 36 00              2911 	ld	(hl), #0x00
   0B16 21r03s41           2912 	ld	hl,#_tick + 1
   0B19 36 00              2913 	ld	(hl), #0x00
   0B1B FD 21r1Ds41        2914 	ld	iy,#_flipper
   0B1F FD 34 00           2915 	inc	0 (iy)
   0B22 20 07              2916 	jr	NZ,00115$
   0B24 FD 21r1Ds41        2917 	ld	iy,#_flipper
   0B28 FD 34 01           2918 	inc	1 (iy)
   0B2B                    2919 00115$:
   0B2B                    2920 00102$:
                           2921 ;demo.c:336: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              2922 	ld	a,#0x0A
   0B2D FD 21r1Ds41        2923 	ld	iy,#_flipper
   0B31 FD 96 00           2924 	sub	a,0 (iy)
   0B34 3E 00              2925 	ld	a,#0x00
   0B36 FD 21r1Ds41        2926 	ld	iy,#_flipper
   0B3A FD 9E 01           2927 	sbc	a,1 (iy)
   0B3D F2r4As0B           2928 	jp	P,00104$
   0B40 21r1Ds41           2929 	ld	hl,#_flipper + 0
   0B43 36 00              2930 	ld	(hl), #0x00
   0B45 21r1Es41           2931 	ld	hl,#_flipper + 1
   0B48 36 00              2932 	ld	(hl), #0x00
   0B4A                    2933 00104$:
                           2934 ;demo.c:338: ymmmf++;
   0B4A FD 21r1Fs41        2935 	ld	iy,#_ymmmf
   0B4E FD 34 00           2936 	inc	0 (iy)
   0B51 20 07              2937 	jr	NZ,00116$
   0B53 FD 21r1Fs41        2938 	ld	iy,#_ymmmf
   0B57 FD 34 01           2939 	inc	1 (iy)
   0B5A                    2940 00116$:
                           2941 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r1Bs41           2942 	ld	hl,#_yofff + 0
   0B5D 36 00              2943 	ld	(hl), #0x00
   0B5F                    2944 00105$:
   0B5F 21r1Bs41           2945 	ld	hl,#_yofff + 0
   0B62 4E                 2946 	ld	c,(hl)
   0B63 06 00              2947 	ld	b,#0x00
   0B65 79                 2948 	ld	a,c
   0B66 D6 D2              2949 	sub	a,#0xD2
   0B68 78                 2950 	ld	a,b
   0B69 DE 00              2951 	sbc	a,#0x00
   0B6B F2rE4s0B           2952 	jp	P,00109$
                           2953 ;demo.c:340: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r1Fs41           2954 	ld	hl,#_ymmmf
   0B71 79                 2955 	ld	a,c
   0B72 86                 2956 	add	a,(hl)
   0B73 5F                 2957 	ld	e,a
   0B74 78                 2958 	ld	a,b
   0B75 23                 2959 	inc	hl
   0B76 8E                 2960 	adc	a,(hl)
   0B77 16 00              2961 	ld	d,#0x00
   0B79 CB 23              2962 	sla	e
   0B7B CB 12              2963 	rl	d
   0B7D 21r2Cs00           2964 	ld	hl,#_sintabx
   0B80 19                 2965 	add	hl,de
   0B81 5E                 2966 	ld	e,(hl)
   0B82 23                 2967 	inc	hl
   0B83 56                 2968 	ld	d,(hl)
   0B84 DD 73 FE           2969 	ld	-2 (ix),e
   0B87 DD 72 FF           2970 	ld	-1 (ix),d
                           2971 ;demo.c:343: cmd.source_x = 0;
   0B8A 21r04s41           2972 	ld	hl,#_cmd
   0B8D 36 00              2973 	ld	(hl),#0x00
   0B8F 23                 2974 	inc	hl
   0B90 36 00              2975 	ld	(hl),#0x00
                           2976 ;demo.c:344: cmd.source_y = 0+yofff;
   0B92 11r06s41           2977 	ld	de,#_cmd + 2
   0B95 EB                 2978 	ex	de,hl
   0B96 71                 2979 	ld	(hl),c
   0B97 23                 2980 	inc	hl
   0B98 70                 2981 	ld	(hl),b
                           2982 ;demo.c:345: cmd.dest_x = xo;
   0B99 11r08s41           2983 	ld	de,#_cmd + 4
   0B9C EB                 2984 	ex	de,hl
   0B9D DD 7E FE           2985 	ld	a,-2 (ix)
   0BA0 77                 2986 	ld	(hl),a
   0BA1 23                 2987 	inc	hl
   0BA2 DD 7E FF           2988 	ld	a,-1 (ix)
   0BA5 77                 2989 	ld	(hl),a
                           2990 ;demo.c:346: cmd.dest_y = 3+yofff;
   0BA6 11r0As41           2991 	ld	de,#_cmd + 6
   0BA9 03                 2992 	inc	bc
   0BAA 03                 2993 	inc	bc
   0BAB 03                 2994 	inc	bc
   0BAC 6B                 2995 	ld	l,e
   0BAD 62                 2996 	ld	h,d
   0BAE 71                 2997 	ld	(hl),c
   0BAF 23                 2998 	inc	hl
   0BB0 70                 2999 	ld	(hl),b
                           3000 ;demo.c:347: cmd.size_x = 256;
   0BB1 21r0Cs41           3001 	ld	hl, #_cmd + 8
   0BB4 36 00              3002 	ld	(hl),#0x00
   0BB6 23                 3003 	inc	hl
   0BB7 36 01              3004 	ld	(hl),#0x01
                           3005 ;demo.c:348: cmd.size_y = 1;
   0BB9 21r0Es41           3006 	ld	hl, #_cmd + 10
   0BBC 36 01              3007 	ld	(hl),#0x01
   0BBE 23                 3008 	inc	hl
   0BBF 36 00              3009 	ld	(hl),#0x00
                           3010 ;demo.c:349: cmd.data = 0;
                           3011 ;demo.c:350: cmd.argument = 0;
   0BC1 3E 00              3012 	ld	a,#0x00
   0BC3 32r10s41           3013 	ld	(#_cmd + 12),a
   0BC6 32r11s41           3014 	ld	(#_cmd + 13),a
                           3015 ;demo.c:351: cmd.command = 0xD0;
   0BC9 3E D0              3016 	ld	a,#0xD0
   0BCB 32r12s41           3017 	ld	(#_cmd + 14),a
                           3018 ;demo.c:354: vdp_copier(&cmd);
   0BCE 21r04s41           3019 	ld	hl,#_cmd
   0BD1 E5                 3020 	push	hl
   0BD2 CDr00s00           3021 	call	_vdp_copier
   0BD5 F1                 3022 	pop	af
                           3023 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r1Bs41           3024 	ld	hl,#_yofff + 0
   0BD9 4E                 3025 	ld	c,(hl)
   0BDA 21r1Bs41           3026 	ld	hl,#_yofff
   0BDD 79                 3027 	ld	a,c
   0BDE C6 02              3028 	add	a,#0x02
   0BE0 77                 3029 	ld	(hl),a
   0BE1 C3r5Fs0B           3030 	jp	00105$
   0BE4                    3031 00109$:
   0BE4 DD F9              3032 	ld	sp,ix
   0BE6 DD E1              3033 	pop	ix
   0BE8 C9                 3034 	ret
   0BE9                    3035 _do_ymmm_end::
                           3036 ;demo.c:371: void do_blocks() {
                           3037 ;	---------------------------------
                           3038 ; Function do_blocks
                           3039 ; ---------------------------------
   0BE9                    3040 _do_blocks_start::
   0BE9                    3041 _do_blocks:
   0BE9 DD E5              3042 	push	ix
   0BEB DD 21 00 00        3043 	ld	ix,#0
   0BEF DD 39              3044 	add	ix,sp
   0BF1 21 FA FF           3045 	ld	hl,#-6
   0BF4 39                 3046 	add	hl,sp
   0BF5 F9                 3047 	ld	sp,hl
                           3048 ;demo.c:373: int ys = 0;
   0BF6 DD 36 FC 00        3049 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3050 	ld	-3 (ix),#0x00
                           3051 ;demo.c:374: int ye = 0;
   0BFE DD 36 FA 00        3052 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3053 	ld	-5 (ix),#0x00
                           3054 ;demo.c:376: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3055 	ld	hl,#0x0017
   0C09 E5                 3056 	push	hl
   0C0A CDr00s00           3057 	call	_vdp_register
   0C0D F1                 3058 	pop	af
                           3059 ;demo.c:378: if (block_init == 0) {
   0C0E AF                 3060 	xor	a,a
   0C0F FD 21r21s41        3061 	ld	iy,#_block_init
   0C13 FD B6 00           3062 	or	a,0 (iy)
   0C16 C2r7Es0C           3063 	jp	NZ,00108$
                           3064 ;demo.c:380: vdp_set_screen5();
   0C19 CDr00s00           3065 	call	_vdp_set_screen5
                           3066 ;demo.c:382: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3067 	ld	hl,#0x5F02
   0C1F E5                 3068 	push	hl
   0C20 CDr00s00           3069 	call	_vdp_register
   0C23 F1                 3070 	pop	af
                           3071 ;demo.c:384: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3072 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3073 	ld	-1 (ix),#0x00
   0C2C                    3074 00110$:
   0C2C DD 7E FE           3075 	ld	a,-2 (ix)
   0C2F D6 10              3076 	sub	a,#0x10
   0C31 DD 7E FF           3077 	ld	a,-1 (ix)
   0C34 DE 00              3078 	sbc	a,#0x00
   0C36 F2r6Es0C           3079 	jp	P,00113$
   0C39 DD 4E FE           3080 	ld	c,-2 (ix)
   0C3C DD 46 FF           3081 	ld	b,-1 (ix)
   0C3F CB 21              3082 	sla	c
   0C41 CB 10              3083 	rl	b
   0C43 21r2As41           3084 	ld	hl,#_btab
   0C46 09                 3085 	add	hl,bc
   0C47 4D                 3086 	ld	c,l
   0C48 44                 3087 	ld	b,h
   0C49 DD 5E FE           3088 	ld	e,-2 (ix)
   0C4C DD 56 FF           3089 	ld	d,-1 (ix)
   0C4F CB 23              3090 	sla	e
   0C51 CB 12              3091 	rl	d
   0C53 CB 23              3092 	sla	e
   0C55 CB 12              3093 	rl	d
   0C57 CB 23              3094 	sla	e
   0C59 CB 12              3095 	rl	d
   0C5B CB 23              3096 	sla	e
   0C5D CB 12              3097 	rl	d
   0C5F 69                 3098 	ld	l,c
   0C60 60                 3099 	ld	h,b
   0C61 73                 3100 	ld	(hl),e
   0C62 23                 3101 	inc	hl
   0C63 72                 3102 	ld	(hl),d
   0C64 DD 34 FE           3103 	inc	-2 (ix)
   0C67 20 03              3104 	jr	NZ,00139$
   0C69 DD 34 FF           3105 	inc	-1 (ix)
   0C6C                    3106 00139$:
   0C6C 18 BE              3107 	jr	00110$
   0C6E                    3108 00113$:
                           3109 ;demo.c:385: vdp_load_palette(block_palette);
   0C6E 21r80s40           3110 	ld	hl,#_block_palette
   0C71 E5                 3111 	push	hl
   0C72 CDr00s00           3112 	call	_vdp_load_palette
   0C75 F1                 3113 	pop	af
                           3114 ;demo.c:387: block_init = 1;
   0C76 21r21s41           3115 	ld	hl,#_block_init + 0
   0C79 36 01              3116 	ld	(hl), #0x01
   0C7B C3r07s0E           3117 	jp	00122$
   0C7E                    3118 00108$:
                           3119 ;demo.c:391: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3Ar4As41           3120 	ld	a,(#_flof+0)
   0C81 FD 21r4As41        3121 	ld	iy,#_flof
   0C85 FD B6 01           3122 	or	a,1 (iy)
   0C88 20 10              3123 	jr	NZ,00102$
   0C8A DD 36 FC 00        3124 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3125 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3126 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3127 	ld	-5 (ix),#0x00
   0C9A                    3128 00102$:
                           3129 ;demo.c:392: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3Ar4As41           3130 	ld	a,(#_flof+0)
   0C9D D6 01              3131 	sub	a,#0x01
   0C9F 20 06              3132 	jr	NZ,00140$
   0CA1 3Ar4Bs41           3133 	ld	a,(#_flof+1)
   0CA4 B7                 3134 	or	a,a
   0CA5 28 02              3135 	jr	Z,00141$
   0CA7                    3136 00140$:
   0CA7 18 10              3137 	jr	00104$
   0CA9                    3138 00141$:
   0CA9 DD 36 FC 08        3139 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3140 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3141 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3142 	ld	-5 (ix),#0x00
   0CB9                    3143 00104$:
                           3144 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r28s41        3145 	ld	iy,#_bty
   0CBD FD 36 00 03        3146 	ld	0 (iy),#0x03
   0CC1 FD 21r28s41        3147 	ld	iy,#_bty
   0CC5 FD 36 01 00        3148 	ld	1 (iy),#0x00
   0CC9                    3149 00118$:
   0CC9 3Ar28s41           3150 	ld	a,(#_bty+0)
   0CCC D6 0B              3151 	sub	a,#0x0B
   0CCE 3Ar29s41           3152 	ld	a,(#_bty+1)
   0CD1 DE 00              3153 	sbc	a,#0x00
   0CD3 F2rDEs0D           3154 	jp	P,00121$
                           3155 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3156 	ld	a,-4 (ix)
   0CD9 FD 21r26s41        3157 	ld	iy,#_btx
   0CDD FD 77 00           3158 	ld	0 (iy),a
   0CE0 DD 7E FD           3159 	ld	a,-3 (ix)
   0CE3 FD 21r26s41        3160 	ld	iy,#_btx
   0CE7 FD 77 01           3161 	ld	1 (iy),a
   0CEA                    3162 00114$:
   0CEA 3Ar26s41           3163 	ld	a,(#_btx+0)
   0CED DD 96 FA           3164 	sub	a,-6 (ix)
   0CF0 3Ar27s41           3165 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3166 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3167 	jp	P,00120$
                           3168 ;demo.c:396: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3169 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3170 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3171 	and	a,0 (iy)
   0D03 21r00s00           3172 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3173 	or	a,(hl)
   0D07 4F                 3174 	ld	c,a
   0D08 CB 39              3175 	srl	c
   0D0A 21r22s41           3176 	ld	hl,#_bsx + 0
   0D0D 71                 3177 	ld	(hl), c
   0D0E 21r23s41           3178 	ld	hl,#_bsx + 1
   0D11 36 00              3179 	ld	(hl), #0x00
                           3180 ;demo.c:397: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3181 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r24s41           3182 	ld	hl,#_bsy + 0
   0D19 77                 3183 	ld	(hl), a
   0D1A 21r25s41           3184 	ld	hl,#_bsy + 1
   0D1D 36 00              3185 	ld	(hl), #0x00
                           3186 ;demo.c:398: cmd.source_x = btab[bsx];
   0D1F 21r22s41           3187 	ld	hl,#_bsx + 0
   0D22 4E                 3188 	ld	c,(hl)
   0D23 21r23s41           3189 	ld	hl,#_bsx + 1
   0D26 46                 3190 	ld	b,(hl)
   0D27 CB 21              3191 	sla	c
   0D29 CB 10              3192 	rl	b
   0D2B 21r2As41           3193 	ld	hl,#_btab
   0D2E 09                 3194 	add	hl,bc
   0D2F 4E                 3195 	ld	c,(hl)
   0D30 23                 3196 	inc	hl
   0D31 46                 3197 	ld	b,(hl)
   0D32 21r04s41           3198 	ld	hl,#_cmd
   0D35 71                 3199 	ld	(hl),c
   0D36 23                 3200 	inc	hl
   0D37 70                 3201 	ld	(hl),b
                           3202 ;demo.c:399: cmd.source_y = 768+btab[bsy];
   0D38 01r06s41           3203 	ld	bc,#_cmd + 2
   0D3B 21r24s41           3204 	ld	hl,#_bsy + 0
   0D3E 5E                 3205 	ld	e,(hl)
   0D3F 21r25s41           3206 	ld	hl,#_bsy + 1
   0D42 56                 3207 	ld	d,(hl)
   0D43 CB 23              3208 	sla	e
   0D45 CB 12              3209 	rl	d
   0D47 21r2As41           3210 	ld	hl,#_btab
   0D4A 19                 3211 	add	hl,de
   0D4B 5E                 3212 	ld	e,(hl)
   0D4C 23                 3213 	inc	hl
   0D4D 56                 3214 	ld	d,(hl)
   0D4E 21 00 03           3215 	ld	hl,#0x0300
   0D51 19                 3216 	add	hl,de
   0D52 EB                 3217 	ex	de,hl
   0D53 69                 3218 	ld	l,c
   0D54 60                 3219 	ld	h,b
   0D55 73                 3220 	ld	(hl),e
   0D56 23                 3221 	inc	hl
   0D57 72                 3222 	ld	(hl),d
                           3223 ;demo.c:400: cmd.dest_x = btab[btx];
   0D58 01r08s41           3224 	ld	bc,#_cmd + 4
   0D5B 21r26s41           3225 	ld	hl,#_btx + 0
   0D5E 5E                 3226 	ld	e,(hl)
   0D5F 21r27s41           3227 	ld	hl,#_btx + 1
   0D62 56                 3228 	ld	d,(hl)
   0D63 CB 23              3229 	sla	e
   0D65 CB 12              3230 	rl	d
   0D67 21r2As41           3231 	ld	hl,#_btab
   0D6A 19                 3232 	add	hl,de
   0D6B 5E                 3233 	ld	e,(hl)
   0D6C 23                 3234 	inc	hl
   0D6D 56                 3235 	ld	d,(hl)
   0D6E 69                 3236 	ld	l,c
   0D6F 60                 3237 	ld	h,b
   0D70 73                 3238 	ld	(hl),e
   0D71 23                 3239 	inc	hl
   0D72 72                 3240 	ld	(hl),d
                           3241 ;demo.c:401: cmd.dest_y = 512+btab[bty];
   0D73 01r0As41           3242 	ld	bc,#_cmd + 6
   0D76 21r28s41           3243 	ld	hl,#_bty + 0
   0D79 5E                 3244 	ld	e,(hl)
   0D7A 21r29s41           3245 	ld	hl,#_bty + 1
   0D7D 56                 3246 	ld	d,(hl)
   0D7E CB 23              3247 	sla	e
   0D80 CB 12              3248 	rl	d
   0D82 21r2As41           3249 	ld	hl,#_btab
   0D85 19                 3250 	add	hl,de
   0D86 5E                 3251 	ld	e,(hl)
   0D87 23                 3252 	inc	hl
   0D88 56                 3253 	ld	d,(hl)
   0D89 21 00 02           3254 	ld	hl,#0x0200
   0D8C 19                 3255 	add	hl,de
   0D8D EB                 3256 	ex	de,hl
   0D8E 69                 3257 	ld	l,c
   0D8F 60                 3258 	ld	h,b
   0D90 73                 3259 	ld	(hl),e
   0D91 23                 3260 	inc	hl
   0D92 72                 3261 	ld	(hl),d
                           3262 ;demo.c:402: cmd.size_x = 16;
   0D93 21r0Cs41           3263 	ld	hl, #_cmd + 8
   0D96 36 10              3264 	ld	(hl),#0x10
   0D98 23                 3265 	inc	hl
   0D99 36 00              3266 	ld	(hl),#0x00
                           3267 ;demo.c:403: cmd.size_y = 16;
   0D9B 21r0Es41           3268 	ld	hl, #_cmd + 10
   0D9E 36 10              3269 	ld	(hl),#0x10
   0DA0 23                 3270 	inc	hl
   0DA1 36 00              3271 	ld	(hl),#0x00
                           3272 ;demo.c:404: cmd.data = 0;
                           3273 ;demo.c:405: cmd.argument = 0x00;
   0DA3 3E 00              3274 	ld	a,#0x00
   0DA5 32r10s41           3275 	ld	(#_cmd + 12),a
   0DA8 32r11s41           3276 	ld	(#_cmd + 13),a
                           3277 ;demo.c:406: cmd.command = 0xD0;
   0DAB 3E D0              3278 	ld	a,#0xD0
   0DAD 32r12s41           3279 	ld	(#_cmd + 14),a
                           3280 ;demo.c:407: vdp_copier(&cmd);
   0DB0 21r04s41           3281 	ld	hl,#_cmd
   0DB3 E5                 3282 	push	hl
   0DB4 CDr00s00           3283 	call	_vdp_copier
   0DB7 F1                 3284 	pop	af
                           3285 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r26s41        3286 	ld	iy,#_btx
   0DBC FD 34 00           3287 	inc	0 (iy)
   0DBF 20 07              3288 	jr	NZ,00150$
   0DC1 FD 21r26s41        3289 	ld	iy,#_btx
   0DC5 FD 34 01           3290 	inc	1 (iy)
   0DC8                    3291 00150$:
   0DC8 C3rEAs0C           3292 	jp	00114$
   0DCB                    3293 00120$:
                           3294 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0DCB FD 21r28s41        3295 	ld	iy,#_bty
   0DCF FD 34 00           3296 	inc	0 (iy)
   0DD2 20 07              3297 	jr	NZ,00151$
   0DD4 FD 21r28s41        3298 	ld	iy,#_bty
   0DD8 FD 34 01           3299 	inc	1 (iy)
   0DDB                    3300 00151$:
   0DDB C3rC9s0C           3301 	jp	00118$
   0DDE                    3302 00121$:
                           3303 ;demo.c:411: flof++;
   0DDE FD 21r4As41        3304 	ld	iy,#_flof
   0DE2 FD 34 00           3305 	inc	0 (iy)
   0DE5 20 07              3306 	jr	NZ,00152$
   0DE7 FD 21r4As41        3307 	ld	iy,#_flof
   0DEB FD 34 01           3308 	inc	1 (iy)
   0DEE                    3309 00152$:
                           3310 ;demo.c:412: if (flof == 2) flof = 0;
   0DEE 3Ar4As41           3311 	ld	a,(#_flof+0)
   0DF1 D6 02              3312 	sub	a,#0x02
   0DF3 20 06              3313 	jr	NZ,00153$
   0DF5 3Ar4Bs41           3314 	ld	a,(#_flof+1)
   0DF8 B7                 3315 	or	a,a
   0DF9 28 02              3316 	jr	Z,00154$
   0DFB                    3317 00153$:
   0DFB 18 0A              3318 	jr	00122$
   0DFD                    3319 00154$:
   0DFD 21r4As41           3320 	ld	hl,#_flof + 0
   0E00 36 00              3321 	ld	(hl), #0x00
   0E02 21r4Bs41           3322 	ld	hl,#_flof + 1
   0E05 36 00              3323 	ld	(hl), #0x00
   0E07                    3324 00122$:
   0E07 DD F9              3325 	ld	sp,ix
   0E09 DD E1              3326 	pop	ix
   0E0B C9                 3327 	ret
   0E0C                    3328 _do_blocks_end::
                           3329 ;demo.c:420: void raster_effu() {
                           3330 ;	---------------------------------
                           3331 ; Function raster_effu
                           3332 ; ---------------------------------
   0E0C                    3333 _raster_effu_start::
   0E0C                    3334 _raster_effu:
                           3335 ;demo.c:421: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3336 	ld	hl,#0x0017
   0E0F E5                 3337 	push	hl
   0E10 CDr00s00           3338 	call	_vdp_register
   0E13 F1                 3339 	pop	af
                           3340 ;demo.c:422: waitVB();
   0E14 76                 3341 		halt 
                           3342 ;demo.c:424: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3343 	ld	hl,#0x4001
   0E18 E5                 3344 	push	hl
   0E19 CDr00s00           3345 	call	_vdp_register
                           3346 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3347 	ld	a,#0x28
   0E1E 32r4Cs41           3348 	ld	(#_linenum + 0),a
   0E21 F1                 3349 	pop	af
   0E22 FD 21r4Cs41        3350 	ld	iy,#_linenum
   0E26 FD 36 01 00        3351 	ld	1 (iy),#0x00
   0E2A                    3352 00101$:
   0E2A 3Ar4Cs41           3353 	ld	a,(#_linenum+0)
   0E2D D6 D4              3354 	sub	a,#0xD4
   0E2F 3Ar4Ds41           3355 	ld	a,(#_linenum+1)
   0E32 DE 00              3356 	sbc	a,#0x00
   0E34 F2r65s0E           3357 	jp	P,00104$
                           3358 ;demo.c:427: vdp_register(19,linenum); // interrupt on line
   0E37 3Ar4Cs41           3359 	ld	a,(#_linenum+0)
   0E3A F5                 3360 	push	af
   0E3B 33                 3361 	inc	sp
   0E3C 3E 13              3362 	ld	a,#0x13
   0E3E F5                 3363 	push	af
   0E3F 33                 3364 	inc	sp
   0E40 CDr00s00           3365 	call	_vdp_register
   0E43 F1                 3366 	pop	af
                           3367 ;demo.c:428: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3368 	ld	hl,#0x1600
   0E47 E5                 3369 	push	hl
   0E48 CDr00s00           3370 	call	_vdp_register
   0E4B F1                 3371 	pop	af
                           3372 ;demo.c:430: waitVB();
   0E4C 76                 3373 		halt 
                           3374 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21r4Cs41           3375 	ld	hl,#_linenum
   0E50 7E                 3376 	ld	a,(hl)
   0E51 C6 04              3377 	add	a,#0x04
   0E53 23                 3378 	inc	hl
   0E54 2B                 3379 	dec	hl
   0E55 C5                 3380 	push	bc
   0E56 4F                 3381 	ld	c, a
   0E57 23                 3382 	inc	hl
   0E58 7E                 3383 	ld	a, (hl)
   0E59 47                 3384 	ld	b, a
   0E5A 79                 3385 	ld	a, c
   0E5B 2B                 3386 	dec	hl
   0E5C 77                 3387 	ld	(hl), a
   0E5D 78                 3388 	ld	a, b
   0E5E C1                 3389 	pop	bc
   0E5F CE 00              3390 	adc	a,#0x00
   0E61 23                 3391 	inc	hl
   0E62 77                 3392 	ld	(hl),a
   0E63 18 C5              3393 	jr	00101$
   0E65                    3394 00104$:
                           3395 ;demo.c:433: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3396 	ld	hl,#0x0017
   0E68 E5                 3397 	push	hl
   0E69 CDr00s00           3398 	call	_vdp_register
   0E6C F1                 3399 	pop	af
                           3400 ;demo.c:447: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3401 	ld	hl,#0x0600
   0E70 E5                 3402 	push	hl
   0E71 CDr00s00           3403 	call	_vdp_register
   0E74 F1                 3404 	pop	af
                           3405 ;demo.c:448: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3406 	ld	hl,#0x6001
   0E78 E5                 3407 	push	hl
   0E79 CDr00s00           3408 	call	_vdp_register
   0E7C F1                 3409 	pop	af
   0E7D C9                 3410 	ret
   0E7E                    3411 _raster_effu_end::
                           3412 ;demo.c:479: void do_letter(char cc) {
                           3413 ;	---------------------------------
                           3414 ; Function do_letter
                           3415 ; ---------------------------------
   0E7E                    3416 _do_letter_start::
   0E7E                    3417 _do_letter:
   0E7E DD E5              3418 	push	ix
   0E80 DD 21 00 00        3419 	ld	ix,#0
   0E84 DD 39              3420 	add	ix,sp
   0E86 F5                 3421 	push	af
                           3422 ;demo.c:480: int cidx = cc - 65;
   0E87 DD 4E 04           3423 	ld	c,4 (ix)
   0E8A DD 7E 04           3424 	ld	a,4 (ix)
   0E8D 17                 3425 	rla	
   0E8E 9F                 3426 	sbc	a,a
   0E8F 47                 3427 	ld	b,a
   0E90 79                 3428 	ld	a,c
   0E91 C6 BF              3429 	add	a,#0xBF
   0E93 DD 77 FE           3430 	ld	-2 (ix),a
   0E96 78                 3431 	ld	a,b
   0E97 CE FF              3432 	adc	a,#0xFF
   0E99 DD 77 FF           3433 	ld	-1 (ix),a
                           3434 ;demo.c:481: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3435 	ld	a,#<_font_x
   0E9E DD 86 FE           3436 	add	a,-2 (ix)
   0EA1 5F                 3437 	ld	e,a
   0EA2 3Es0F              3438 	ld	a,#>_font_x
   0EA4 DD 8E FF           3439 	adc	a,-1 (ix)
   0EA7 57                 3440 	ld	d,a
   0EA8 1A                 3441 	ld	a,(de)
   0EA9 5F                 3442 	ld	e,a
   0EAA 16 00              3443 	ld	d,#0x00
   0EAC 21 7F 00           3444 	ld	hl,#0x007F
   0EAF 19                 3445 	add	hl,de
   0EB0 EB                 3446 	ex	de,hl
   0EB1 21r04s41           3447 	ld	hl,#_cmd
   0EB4 73                 3448 	ld	(hl),e
   0EB5 23                 3449 	inc	hl
   0EB6 72                 3450 	ld	(hl),d
                           3451 ;demo.c:482: cmd.source_y = 512+font_y[cidx];
   0EB7 11r06s41           3452 	ld	de,#_cmd + 2
   0EBA 3Er7C              3453 	ld	a,#<_font_y
   0EBC DD 86 FE           3454 	add	a,-2 (ix)
   0EBF 4F                 3455 	ld	c,a
   0EC0 3Es0F              3456 	ld	a,#>_font_y
   0EC2 DD 8E FF           3457 	adc	a,-1 (ix)
   0EC5 47                 3458 	ld	b,a
   0EC6 0A                 3459 	ld	a,(bc)
   0EC7 4F                 3460 	ld	c,a
   0EC8 06 00              3461 	ld	b,#0x00
   0ECA 21 00 02           3462 	ld	hl,#0x0200
   0ECD 09                 3463 	add	hl,bc
   0ECE 4D                 3464 	ld	c,l
   0ECF 44                 3465 	ld	b,h
   0ED0 EB                 3466 	ex	de,hl
   0ED1 71                 3467 	ld	(hl),c
   0ED2 23                 3468 	inc	hl
   0ED3 70                 3469 	ld	(hl),b
                           3470 ;demo.c:483: cmd.dest_x = lx;
   0ED4 01r08s41           3471 	ld	bc,#_cmd + 4
   0ED7 21r4Es41           3472 	ld	hl,#_lx + 0
   0EDA 5E                 3473 	ld	e,(hl)
   0EDB 16 00              3474 	ld	d,#0x00
   0EDD 69                 3475 	ld	l,c
   0EDE 60                 3476 	ld	h,b
   0EDF 73                 3477 	ld	(hl),e
   0EE0 23                 3478 	inc	hl
   0EE1 72                 3479 	ld	(hl),d
                           3480 ;demo.c:484: cmd.dest_y = ly;
   0EE2 01r0As41           3481 	ld	bc,#_cmd + 6
   0EE5 21r4Fs41           3482 	ld	hl,#_ly + 0
   0EE8 5E                 3483 	ld	e,(hl)
   0EE9 16 00              3484 	ld	d,#0x00
   0EEB 69                 3485 	ld	l,c
   0EEC 60                 3486 	ld	h,b
   0EED 73                 3487 	ld	(hl),e
   0EEE 23                 3488 	inc	hl
   0EEF 72                 3489 	ld	(hl),d
                           3490 ;demo.c:485: cmd.size_x = font_w[cidx];
   0EF0 01r0Cs41           3491 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3492 	ld	a,#<_font_w
   0EF5 DD 86 FE           3493 	add	a,-2 (ix)
   0EF8 5F                 3494 	ld	e,a
   0EF9 3Es0F              3495 	ld	a,#>_font_w
   0EFB DD 8E FF           3496 	adc	a,-1 (ix)
   0EFE 57                 3497 	ld	d,a
   0EFF 1A                 3498 	ld	a,(de)
   0F00 5F                 3499 	ld	e,a
   0F01 16 00              3500 	ld	d,#0x00
   0F03 69                 3501 	ld	l,c
   0F04 60                 3502 	ld	h,b
   0F05 73                 3503 	ld	(hl),e
   0F06 23                 3504 	inc	hl
   0F07 72                 3505 	ld	(hl),d
                           3506 ;demo.c:486: cmd.size_y = 8;
   0F08 21r0Es41           3507 	ld	hl, #_cmd + 10
   0F0B 36 08              3508 	ld	(hl),#0x08
   0F0D 23                 3509 	inc	hl
   0F0E 36 00              3510 	ld	(hl),#0x00
                           3511 ;demo.c:487: cmd.argument = 0x00;
   0F10 3E 00              3512 	ld	a,#0x00
   0F12 32r11s41           3513 	ld	(#_cmd + 13),a
                           3514 ;demo.c:488: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3515 	ld	a,#0x90
   0F17 32r12s41           3516 	ld	(#_cmd + 14),a
                           3517 ;demo.c:489: vdp_copier(&cmd);
   0F1A 21r04s41           3518 	ld	hl,#_cmd
   0F1D E5                 3519 	push	hl
   0F1E CDr00s00           3520 	call	_vdp_copier
   0F21 F1                 3521 	pop	af
                           3522 ;demo.c:490: lx+=font_w[cidx]-1;
   0F22 3ErBC              3523 	ld	a,#<_font_w
   0F24 DD 86 FE           3524 	add	a,-2 (ix)
   0F27 4F                 3525 	ld	c,a
   0F28 3Es0F              3526 	ld	a,#>_font_w
   0F2A DD 8E FF           3527 	adc	a,-1 (ix)
   0F2D 47                 3528 	ld	b,a
   0F2E 0A                 3529 	ld	a,(bc)
   0F2F 4F                 3530 	ld	c,a
   0F30 0D                 3531 	dec	c
   0F31 21r4Es41           3532 	ld	hl,#_lx
   0F34 7E                 3533 	ld	a,(hl)
   0F35 81                 3534 	add	a,c
   0F36 77                 3535 	ld	(hl),a
   0F37 DD F9              3536 	ld	sp,ix
   0F39 DD E1              3537 	pop	ix
   0F3B C9                 3538 	ret
   0F3C                    3539 _do_letter_end::
   0F3C                    3540 _font_x:
   0F3C 01                 3541 	.db #0x01
   0F3D 09                 3542 	.db #0x09
   0F3E 11                 3543 	.db #0x11
   0F3F 19                 3544 	.db #0x19
   0F40 21                 3545 	.db #0x21
   0F41 29                 3546 	.db #0x29
   0F42 31                 3547 	.db #0x31
   0F43 39                 3548 	.db #0x39
   0F44 41                 3549 	.db #0x41
   0F45 46                 3550 	.db #0x46
   0F46 4E                 3551 	.db #0x4E
   0F47 56                 3552 	.db #0x56
   0F48 5E                 3553 	.db #0x5E
   0F49 01                 3554 	.db #0x01
   0F4A 0A                 3555 	.db #0x0A
   0F4B 12                 3556 	.db #0x12
   0F4C 1A                 3557 	.db #0x1A
   0F4D 23                 3558 	.db #0x23
   0F4E 2B                 3559 	.db #0x2B
   0F4F 33                 3560 	.db #0x33
   0F50 3C                 3561 	.db #0x3C
   0F51 44                 3562 	.db #0x44
   0F52 4C                 3563 	.db #0x4C
   0F53 56                 3564 	.db #0x56
   0F54 5E                 3565 	.db #0x5E
   0F55 67                 3566 	.db #0x67
   0F56 00                 3567 	.db #0x00
   0F57 00                 3568 	.db #0x00
   0F58 00                 3569 	.db #0x00
   0F59 00                 3570 	.db #0x00
   0F5A 00                 3571 	.db #0x00
   0F5B 00                 3572 	.db #0x00
   0F5C 01                 3573 	.db #0x01
   0F5D 09                 3574 	.db #0x09
   0F5E 11                 3575 	.db #0x11
   0F5F 18                 3576 	.db #0x18
   0F60 20                 3577 	.db #0x20
   0F61 28                 3578 	.db #0x28
   0F62 2F                 3579 	.db #0x2F
   0F63 37                 3580 	.db #0x37
   0F64 3F                 3581 	.db #0x3F
   0F65 45                 3582 	.db #0x45
   0F66 4C                 3583 	.db #0x4C
   0F67 54                 3584 	.db #0x54
   0F68 5A                 3585 	.db #0x5A
   0F69 64                 3586 	.db #0x64
   0F6A 01                 3587 	.db #0x01
   0F6B 09                 3588 	.db #0x09
   0F6C 11                 3589 	.db #0x11
   0F6D 19                 3590 	.db #0x19
   0F6E 21                 3591 	.db #0x21
   0F6F 29                 3592 	.db #0x29
   0F70 30                 3593 	.db #0x30
   0F71 38                 3594 	.db #0x38
   0F72 40                 3595 	.db #0x40
   0F73 4A                 3596 	.db #0x4A
   0F74 52                 3597 	.db #0x52
   0F75 5A                 3598 	.db #0x5A
   0F76 00                 3599 	.db 0x00
   0F77 00                 3600 	.db 0x00
   0F78 00                 3601 	.db 0x00
   0F79 00                 3602 	.db 0x00
   0F7A 00                 3603 	.db 0x00
   0F7B 00                 3604 	.db 0x00
   0F7C                    3605 _font_y:
   0F7C 1C                 3606 	.db #0x1C
   0F7D 1C                 3607 	.db #0x1C
   0F7E 1C                 3608 	.db #0x1C
   0F7F 1C                 3609 	.db #0x1C
   0F80 1C                 3610 	.db #0x1C
   0F81 1C                 3611 	.db #0x1C
   0F82 1C                 3612 	.db #0x1C
   0F83 1C                 3613 	.db #0x1C
   0F84 1C                 3614 	.db #0x1C
   0F85 1C                 3615 	.db #0x1C
   0F86 1C                 3616 	.db #0x1C
   0F87 1C                 3617 	.db #0x1C
   0F88 1C                 3618 	.db #0x1C
   0F89 25                 3619 	.db #0x25
   0F8A 25                 3620 	.db #0x25
   0F8B 25                 3621 	.db #0x25
   0F8C 25                 3622 	.db #0x25
   0F8D 25                 3623 	.db #0x25
   0F8E 25                 3624 	.db #0x25
   0F8F 25                 3625 	.db #0x25
   0F90 25                 3626 	.db #0x25
   0F91 25                 3627 	.db #0x25
   0F92 25                 3628 	.db #0x25
   0F93 25                 3629 	.db #0x25
   0F94 25                 3630 	.db #0x25
   0F95 25                 3631 	.db #0x25
   0F96 00                 3632 	.db #0x00
   0F97 00                 3633 	.db #0x00
   0F98 00                 3634 	.db #0x00
   0F99 00                 3635 	.db #0x00
   0F9A 00                 3636 	.db #0x00
   0F9B 00                 3637 	.db #0x00
   0F9C 37                 3638 	.db #0x37
   0F9D 37                 3639 	.db #0x37
   0F9E 37                 3640 	.db #0x37
   0F9F 37                 3641 	.db #0x37
   0FA0 37                 3642 	.db #0x37
   0FA1 37                 3643 	.db #0x37
   0FA2 37                 3644 	.db #0x37
   0FA3 37                 3645 	.db #0x37
   0FA4 37                 3646 	.db #0x37
   0FA5 37                 3647 	.db #0x37
   0FA6 37                 3648 	.db #0x37
   0FA7 37                 3649 	.db #0x37
   0FA8 37                 3650 	.db #0x37
   0FA9 37                 3651 	.db #0x37
   0FAA 40                 3652 	.db #0x40
   0FAB 40                 3653 	.db #0x40
   0FAC 40                 3654 	.db #0x40
   0FAD 40                 3655 	.db #0x40
   0FAE 40                 3656 	.db #0x40
   0FAF 40                 3657 	.db #0x40
   0FB0 40                 3658 	.db #0x40
   0FB1 40                 3659 	.db #0x40
   0FB2 40                 3660 	.db #0x40
   0FB3 40                 3661 	.db #0x40
   0FB4 40                 3662 	.db #0x40
   0FB5 40                 3663 	.db #0x40
   0FB6 00                 3664 	.db 0x00
   0FB7 00                 3665 	.db 0x00
   0FB8 00                 3666 	.db 0x00
   0FB9 00                 3667 	.db 0x00
   0FBA 00                 3668 	.db 0x00
   0FBB 00                 3669 	.db 0x00
   0FBC                    3670 _font_w:
   0FBC 07                 3671 	.db #0x07
   0FBD 07                 3672 	.db #0x07
   0FBE 07                 3673 	.db #0x07
   0FBF 07                 3674 	.db #0x07
   0FC0 07                 3675 	.db #0x07
   0FC1 07                 3676 	.db #0x07
   0FC2 07                 3677 	.db #0x07
   0FC3 07                 3678 	.db #0x07
   0FC4 04                 3679 	.db #0x04
   0FC5 07                 3680 	.db #0x07
   0FC6 07                 3681 	.db #0x07
   0FC7 07                 3682 	.db #0x07
   0FC8 09                 3683 	.db #0x09
   0FC9 08                 3684 	.db #0x08
   0FCA 07                 3685 	.db #0x07
   0FCB 07                 3686 	.db #0x07
   0FCC 08                 3687 	.db #0x08
   0FCD 07                 3688 	.db #0x07
   0FCE 07                 3689 	.db #0x07
   0FCF 08                 3690 	.db #0x08
   0FD0 07                 3691 	.db #0x07
   0FD1 07                 3692 	.db #0x07
   0FD2 09                 3693 	.db #0x09
   0FD3 07                 3694 	.db #0x07
   0FD4 08                 3695 	.db #0x08
   0FD5 07                 3696 	.db #0x07
   0FD6 00                 3697 	.db #0x00
   0FD7 00                 3698 	.db #0x00
   0FD8 00                 3699 	.db #0x00
   0FD9 00                 3700 	.db #0x00
   0FDA 00                 3701 	.db #0x00
   0FDB 00                 3702 	.db #0x00
   0FDC 07                 3703 	.db #0x07
   0FDD 07                 3704 	.db #0x07
   0FDE 06                 3705 	.db #0x06
   0FDF 07                 3706 	.db #0x07
   0FE0 07                 3707 	.db #0x07
   0FE1 07                 3708 	.db #0x07
   0FE2 07                 3709 	.db #0x07
   0FE3 07                 3710 	.db #0x07
   0FE4 05                 3711 	.db #0x05
   0FE5 06                 3712 	.db #0x06
   0FE6 07                 3713 	.db #0x07
   0FE7 05                 3714 	.db #0x05
   0FE8 09                 3715 	.db #0x09
   0FE9 07                 3716 	.db #0x07
   0FEA 07                 3717 	.db #0x07
   0FEB 07                 3718 	.db #0x07
   0FEC 07                 3719 	.db #0x07
   0FED 07                 3720 	.db #0x07
   0FEE 07                 3721 	.db #0x07
   0FEF 06                 3722 	.db #0x06
   0FF0 07                 3723 	.db #0x07
   0FF1 07                 3724 	.db #0x07
   0FF2 09                 3725 	.db #0x09
   0FF3 07                 3726 	.db #0x07
   0FF4 07                 3727 	.db #0x07
   0FF5 07                 3728 	.db #0x07
   0FF6 00                 3729 	.db 0x00
   0FF7 00                 3730 	.db 0x00
   0FF8 00                 3731 	.db 0x00
   0FF9 00                 3732 	.db 0x00
   0FFA 00                 3733 	.db 0x00
   0FFB 00                 3734 	.db 0x00
                           3735 ;demo.c:494: void do_letter_tall(char cc) {
                           3736 ;	---------------------------------
                           3737 ; Function do_letter_tall
                           3738 ; ---------------------------------
   0FFC                    3739 _do_letter_tall_start::
   0FFC                    3740 _do_letter_tall:
   0FFC DD E5              3741 	push	ix
   0FFE DD 21 00 00        3742 	ld	ix,#0
   1002 DD 39              3743 	add	ix,sp
   1004 F5                 3744 	push	af
                           3745 ;demo.c:495: int cidx = cc - 65;
   1005 DD 4E 04           3746 	ld	c,4 (ix)
   1008 DD 7E 04           3747 	ld	a,4 (ix)
   100B 17                 3748 	rla	
   100C 9F                 3749 	sbc	a,a
   100D 47                 3750 	ld	b,a
   100E 79                 3751 	ld	a,c
   100F C6 BF              3752 	add	a,#0xBF
   1011 DD 77 FE           3753 	ld	-2 (ix),a
   1014 78                 3754 	ld	a,b
   1015 CE FF              3755 	adc	a,#0xFF
   1017 DD 77 FF           3756 	ld	-1 (ix),a
                           3757 ;demo.c:496: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3758 	ld	a,#<_font_x
   101C DD 86 FE           3759 	add	a,-2 (ix)
   101F 5F                 3760 	ld	e,a
   1020 3Es0F              3761 	ld	a,#>_font_x
   1022 DD 8E FF           3762 	adc	a,-1 (ix)
   1025 57                 3763 	ld	d,a
   1026 1A                 3764 	ld	a,(de)
   1027 5F                 3765 	ld	e,a
   1028 16 00              3766 	ld	d,#0x00
   102A 21 7F 00           3767 	ld	hl,#0x007F
   102D 19                 3768 	add	hl,de
   102E EB                 3769 	ex	de,hl
   102F 21r04s41           3770 	ld	hl,#_cmd
   1032 73                 3771 	ld	(hl),e
   1033 23                 3772 	inc	hl
   1034 72                 3773 	ld	(hl),d
                           3774 ;demo.c:497: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r06s41           3775 	ld	de,#_cmd + 2
   1038 3Er7C              3776 	ld	a,#<_font_y
   103A DD 86 FE           3777 	add	a,-2 (ix)
   103D 4F                 3778 	ld	c,a
   103E 3Es0F              3779 	ld	a,#>_font_y
   1040 DD 8E FF           3780 	adc	a,-1 (ix)
   1043 47                 3781 	ld	b,a
   1044 0A                 3782 	ld	a,(bc)
   1045 4F                 3783 	ld	c,a
   1046 06 00              3784 	ld	b,#0x00
   1048 21 FF 01           3785 	ld	hl,#0x01FF
   104B 09                 3786 	add	hl,bc
   104C 4D                 3787 	ld	c,l
   104D 44                 3788 	ld	b,h
   104E EB                 3789 	ex	de,hl
   104F 71                 3790 	ld	(hl),c
   1050 23                 3791 	inc	hl
   1051 70                 3792 	ld	(hl),b
                           3793 ;demo.c:498: cmd.dest_x = lx;
   1052 01r08s41           3794 	ld	bc,#_cmd + 4
   1055 21r4Es41           3795 	ld	hl,#_lx + 0
   1058 5E                 3796 	ld	e,(hl)
   1059 16 00              3797 	ld	d,#0x00
   105B 69                 3798 	ld	l,c
   105C 60                 3799 	ld	h,b
   105D 73                 3800 	ld	(hl),e
   105E 23                 3801 	inc	hl
   105F 72                 3802 	ld	(hl),d
                           3803 ;demo.c:499: cmd.dest_y = ly;
   1060 01r0As41           3804 	ld	bc,#_cmd + 6
   1063 21r4Fs41           3805 	ld	hl,#_ly + 0
   1066 5E                 3806 	ld	e,(hl)
   1067 16 00              3807 	ld	d,#0x00
   1069 69                 3808 	ld	l,c
   106A 60                 3809 	ld	h,b
   106B 73                 3810 	ld	(hl),e
   106C 23                 3811 	inc	hl
   106D 72                 3812 	ld	(hl),d
                           3813 ;demo.c:500: cmd.size_x = font_w[cidx];
   106E 01r0Cs41           3814 	ld	bc,#_cmd + 8
   1071 3ErBC              3815 	ld	a,#<_font_w
   1073 DD 86 FE           3816 	add	a,-2 (ix)
   1076 5F                 3817 	ld	e,a
   1077 3Es0F              3818 	ld	a,#>_font_w
   1079 DD 8E FF           3819 	adc	a,-1 (ix)
   107C 57                 3820 	ld	d,a
   107D 1A                 3821 	ld	a,(de)
   107E 5F                 3822 	ld	e,a
   107F 16 00              3823 	ld	d,#0x00
   1081 69                 3824 	ld	l,c
   1082 60                 3825 	ld	h,b
   1083 73                 3826 	ld	(hl),e
   1084 23                 3827 	inc	hl
   1085 72                 3828 	ld	(hl),d
                           3829 ;demo.c:501: cmd.size_y = 10;
   1086 21r0Es41           3830 	ld	hl, #_cmd + 10
   1089 36 0A              3831 	ld	(hl),#0x0A
   108B 23                 3832 	inc	hl
   108C 36 00              3833 	ld	(hl),#0x00
                           3834 ;demo.c:502: cmd.argument = 0x00;
   108E 3E 00              3835 	ld	a,#0x00
   1090 32r11s41           3836 	ld	(#_cmd + 13),a
                           3837 ;demo.c:503: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3838 	ld	a,#0x90
   1095 32r12s41           3839 	ld	(#_cmd + 14),a
                           3840 ;demo.c:504: vdp_copier(&cmd);
   1098 21r04s41           3841 	ld	hl,#_cmd
   109B E5                 3842 	push	hl
   109C CDr00s00           3843 	call	_vdp_copier
   109F F1                 3844 	pop	af
                           3845 ;demo.c:505: lx+=font_w[cidx]-1;
   10A0 3ErBC              3846 	ld	a,#<_font_w
   10A2 DD 86 FE           3847 	add	a,-2 (ix)
   10A5 4F                 3848 	ld	c,a
   10A6 3Es0F              3849 	ld	a,#>_font_w
   10A8 DD 8E FF           3850 	adc	a,-1 (ix)
   10AB 47                 3851 	ld	b,a
   10AC 0A                 3852 	ld	a,(bc)
   10AD 4F                 3853 	ld	c,a
   10AE 0D                 3854 	dec	c
   10AF 21r4Es41           3855 	ld	hl,#_lx
   10B2 7E                 3856 	ld	a,(hl)
   10B3 81                 3857 	add	a,c
   10B4 77                 3858 	ld	(hl),a
   10B5 DD F9              3859 	ld	sp,ix
   10B7 DD E1              3860 	pop	ix
   10B9 C9                 3861 	ret
   10BA                    3862 _do_letter_tall_end::
                           3863 ;demo.c:508: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3864 ;	---------------------------------
                           3865 ; Function drawstr
                           3866 ; ---------------------------------
   10BA                    3867 _drawstr_start::
   10BA                    3868 _drawstr:
   10BA DD E5              3869 	push	ix
   10BC DD 21 00 00        3870 	ld	ix,#0
   10C0 DD 39              3871 	add	ix,sp
                           3872 ;demo.c:509: char* c = str;
   10C2 DD 4E 04           3873 	ld	c,4 (ix)
   10C5 DD 46 05           3874 	ld	b,5 (ix)
                           3875 ;demo.c:510: lx = x;
   10C8 DD 5E 06           3876 	ld	e,6 (ix)
   10CB 21r4Es41           3877 	ld	hl,#_lx + 0
   10CE 73                 3878 	ld	(hl), e
                           3879 ;demo.c:511: ly = y;
   10CF DD 7E 07           3880 	ld	a,7 (ix)
   10D2 21r4Fs41           3881 	ld	hl,#_ly + 0
   10D5 77                 3882 	ld	(hl), a
                           3883 ;demo.c:512: while (*c) {
   10D6                    3884 00107$:
   10D6 0A                 3885 	ld	a,(bc)
   10D7 57                 3886 	ld	d,a
   10D8 B7                 3887 	or	a,a
   10D9 28 42              3888 	jr	Z,00110$
                           3889 ;demo.c:513: char ltr = *c++; 
   10DB 03                 3890 	inc	bc
                           3891 ;demo.c:514: if (ltr == ' ') lx+=4;
   10DC 7A                 3892 	ld	a,d
   10DD D6 20              3893 	sub	a,#0x20
   10DF 20 1E              3894 	jr	NZ,00105$
   10E1 FD 21r4Es41        3895 	ld	iy,#_lx
   10E5 FD 34 00           3896 	inc	0 (iy)
   10E8 FD 21r4Es41        3897 	ld	iy,#_lx
   10EC FD 34 00           3898 	inc	0 (iy)
   10EF FD 21r4Es41        3899 	ld	iy,#_lx
   10F3 FD 34 00           3900 	inc	0 (iy)
   10F6 FD 21r4Es41        3901 	ld	iy,#_lx
   10FA FD 34 00           3902 	inc	0 (iy)
   10FD 18 D7              3903 	jr	00107$
   10FF                    3904 00105$:
                           3905 ;demo.c:515: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 3906 	ld	a,d
   1100 D6 5F              3907 	sub	a,#0x5F
   1102 20 0D              3908 	jr	NZ,00102$
   1104 21r4Fs41           3909 	ld	hl,#_ly
   1107 7E                 3910 	ld	a,(hl)
   1108 C6 09              3911 	add	a,#0x09
   110A 77                 3912 	ld	(hl),a
   110B 21r4Es41           3913 	ld	hl,#_lx + 0
   110E 73                 3914 	ld	(hl), e
   110F 18 C5              3915 	jr	00107$
   1111                    3916 00102$:
                           3917 ;demo.c:516: else do_letter(ltr);
   1111 C5                 3918 	push	bc
   1112 D5                 3919 	push	de
   1113 D5                 3920 	push	de
   1114 33                 3921 	inc	sp
   1115 CDr7Es0E           3922 	call	_do_letter
   1118 33                 3923 	inc	sp
   1119 D1                 3924 	pop	de
   111A C1                 3925 	pop	bc
   111B 18 B9              3926 	jr	00107$
   111D                    3927 00110$:
   111D DD E1              3928 	pop	ix
   111F C9                 3929 	ret
   1120                    3930 _drawstr_end::
                           3931 ;demo.c:520: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3932 ;	---------------------------------
                           3933 ; Function drawsine
                           3934 ; ---------------------------------
   1120                    3935 _drawsine_start::
   1120                    3936 _drawsine:
   1120 DD E5              3937 	push	ix
   1122 DD 21 00 00        3938 	ld	ix,#0
   1126 DD 39              3939 	add	ix,sp
   1128 3B                 3940 	dec	sp
                           3941 ;demo.c:521: char* c = str;
   1129 DD 4E 04           3942 	ld	c,4 (ix)
   112C DD 46 05           3943 	ld	b,5 (ix)
                           3944 ;demo.c:522: lx = x;
   112F DD 7E 06           3945 	ld	a,6 (ix)
   1132 21r4Es41           3946 	ld	hl,#_lx + 0
   1135 77                 3947 	ld	(hl), a
                           3948 ;demo.c:524: while (*c) {
   1136                    3949 00104$:
   1136 0A                 3950 	ld	a,(bc)
   1137 5F                 3951 	ld	e,a
   1138 B7                 3952 	or	a,a
   1139 CArADs11           3953 	jp	Z,00107$
                           3954 ;demo.c:525: char ltr = *c++; 
   113C 03                 3955 	inc	bc
   113D DD 73 FF           3956 	ld	-1 (ix),e
                           3957 ;demo.c:526: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21r4Es41           3958 	ld	hl,#_lx + 0
   1143 5E                 3959 	ld	e,(hl)
   1144 16 00              3960 	ld	d,#0x00
   1146 21r00s41           3961 	ld	hl,#_vbicount
   1149 7B                 3962 	ld	a,e
   114A 86                 3963 	add	a,(hl)
   114B 5F                 3964 	ld	e,a
   114C 7A                 3965 	ld	a,d
   114D 23                 3966 	inc	hl
   114E 8E                 3967 	adc	a,(hl)
   114F 57                 3968 	ld	d,a
   1150 CB 2A              3969 	sra	d
   1152 CB 1B              3970 	rr	e
   1154 16 00              3971 	ld	d,#0x00
   1156 CB 23              3972 	sla	e
   1158 CB 12              3973 	rl	d
   115A 21r2Cs00           3974 	ld	hl,#_sintabx
   115D 19                 3975 	add	hl,de
   115E 5E                 3976 	ld	e,(hl)
   115F 23                 3977 	inc	hl
   1160 56                 3978 	ld	d,(hl)
   1161 CB 3A              3979 	srl	d
   1163 CB 1B              3980 	rr	e
   1165 CB 3A              3981 	srl	d
   1167 CB 1B              3982 	rr	e
   1169 CB 3A              3983 	srl	d
   116B CB 1B              3984 	rr	e
   116D CB 3A              3985 	srl	d
   116F CB 1B              3986 	rr	e
   1171 21r4Fs41           3987 	ld	hl,#_ly
   1174 DD 7E 07           3988 	ld	a,7 (ix)
   1177 83                 3989 	add	a,e
   1178 77                 3990 	ld	(hl),a
                           3991 ;demo.c:527: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           3992 	ld	a,-1 (ix)
   117C D6 20              3993 	sub	a,#0x20
   117E 20 1F              3994 	jr	NZ,00102$
   1180 FD 21r4Es41        3995 	ld	iy,#_lx
   1184 FD 34 00           3996 	inc	0 (iy)
   1187 FD 21r4Es41        3997 	ld	iy,#_lx
   118B FD 34 00           3998 	inc	0 (iy)
   118E FD 21r4Es41        3999 	ld	iy,#_lx
   1192 FD 34 00           4000 	inc	0 (iy)
   1195 FD 21r4Es41        4001 	ld	iy,#_lx
   1199 FD 34 00           4002 	inc	0 (iy)
   119C C3r36s11           4003 	jp	00104$
   119F                    4004 00102$:
                           4005 ;demo.c:528: else do_letter_tall(ltr);
   119F C5                 4006 	push	bc
   11A0 DD 7E FF           4007 	ld	a,-1 (ix)
   11A3 F5                 4008 	push	af
   11A4 33                 4009 	inc	sp
   11A5 CDrFCs0F           4010 	call	_do_letter_tall
   11A8 33                 4011 	inc	sp
   11A9 C1                 4012 	pop	bc
   11AA C3r36s11           4013 	jp	00104$
   11AD                    4014 00107$:
   11AD DD F9              4015 	ld	sp,ix
   11AF DD E1              4016 	pop	ix
   11B1 C9                 4017 	ret
   11B2                    4018 _drawsine_end::
                           4019 ;demo.c:532: void font() {
                           4020 ;	---------------------------------
                           4021 ; Function font
                           4022 ; ---------------------------------
   11B2                    4023 _font_start::
   11B2                    4024 _font:
                           4025 ;demo.c:534: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           4026 	ld	hl,#0x3C4A
   11B5 E5                 4027 	push	hl
   11B6 21rC0s11           4028 	ld	hl,#__str_8
   11B9 E5                 4029 	push	hl
   11BA CDrBAs10           4030 	call	_drawstr
   11BD F1                 4031 	pop	af
   11BE F1                 4032 	pop	af
   11BF C9                 4033 	ret
   11C0                    4034 _font_end::
   11C0                    4035 __str_8:
   11C0 44 49 47 49 54 41  4036 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  4037 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 4038 	.db 0x00
                           4039 ;demo.c:543: void twister() {
                           4040 ;	---------------------------------
                           4041 ; Function twister
                           4042 ; ---------------------------------
   1223                    4043 _twister_start::
   1223                    4044 _twister:
   1223 DD E5              4045 	push	ix
   1225 DD 21 00 00        4046 	ld	ix,#0
   1229 DD 39              4047 	add	ix,sp
   122B F5                 4048 	push	af
                           4049 ;demo.c:547: if (twinited == 0) {
   122C 3Ar52s41           4050 	ld	a,(#_twinited+0)
   122F FD 21r52s41        4051 	ld	iy,#_twinited
   1233 FD B6 01           4052 	or	a,1 (iy)
   1236 C2rA6s12           4053 	jp	NZ,00102$
                           4054 ;demo.c:548: cmd.size_x = 256;
   1239 21r0Cs41           4055 	ld	hl, #_cmd + 8
   123C 36 00              4056 	ld	(hl),#0x00
   123E 23                 4057 	inc	hl
   123F 36 01              4058 	ld	(hl),#0x01
                           4059 ;demo.c:549: cmd.size_y = 1;
   1241 21r0Es41           4060 	ld	hl, #_cmd + 10
   1244 36 01              4061 	ld	(hl),#0x01
   1246 23                 4062 	inc	hl
   1247 36 00              4063 	ld	(hl),#0x00
                           4064 ;demo.c:550: cmd.data = 0;
                           4065 ;demo.c:551: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4066 	ld	a,#0x00
   124B 32r10s41           4067 	ld	(#_cmd + 12),a
   124E 32r11s41           4068 	ld	(#_cmd + 13),a
                           4069 ;demo.c:552: cmd.command = 0xd0; // vram to vram, y only
   1251 01r12s41           4070 	ld	bc,#_cmd + 14
   1254 3E D0              4071 	ld	a,#0xD0
   1256 02                 4072 	ld	(bc),a
                           4073 ;demo.c:553: cmd.source_x = 0;
   1257 21r04s41           4074 	ld	hl,#_cmd
   125A 36 00              4075 	ld	(hl),#0x00
   125C 23                 4076 	inc	hl
   125D 36 00              4077 	ld	(hl),#0x00
                           4078 ;demo.c:554: cmd.dest_x = 0;
   125F 21r08s41           4079 	ld	hl, #_cmd + 4
   1262 36 00              4080 	ld	(hl),#0x00
   1264 23                 4081 	inc	hl
   1265 36 00              4082 	ld	(hl),#0x00
                           4083 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4084 	ld	bc,#0x0000
   126A                    4085 00103$:
   126A 79                 4086 	ld	a,c
   126B D6 D4              4087 	sub	a,#0xD4
   126D 78                 4088 	ld	a,b
   126E DE 00              4089 	sbc	a,#0x00
   1270 F2r91s12           4090 	jp	P,00106$
                           4091 ;demo.c:557: waitVB();
   1273 76                 4092 		halt 
                           4093 ;demo.c:558: cmd.source_y = 0;
   1274 11r06s41           4094 	ld	de,#_cmd + 2
   1277 EB                 4095 	ex	de,hl
   1278 36 00              4096 	ld	(hl),#0x00
   127A 23                 4097 	inc	hl
   127B 36 00              4098 	ld	(hl),#0x00
                           4099 ;demo.c:559: cmd.dest_y = y;
   127D 11r0As41           4100 	ld	de,#_cmd + 6
   1280 EB                 4101 	ex	de,hl
   1281 71                 4102 	ld	(hl),c
   1282 23                 4103 	inc	hl
   1283 70                 4104 	ld	(hl),b
                           4105 ;demo.c:560: vdp_copier(&cmd);
   1284 C5                 4106 	push	bc
   1285 21r04s41           4107 	ld	hl,#_cmd
   1288 E5                 4108 	push	hl
   1289 CDr00s00           4109 	call	_vdp_copier
   128C F1                 4110 	pop	af
   128D C1                 4111 	pop	bc
                           4112 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   128E 03                 4113 	inc	bc
   128F 18 D9              4114 	jr	00103$
   1291                    4115 00106$:
                           4116 ;demo.c:564: twinited = 1;
   1291 21r52s41           4117 	ld	hl,#_twinited + 0
   1294 36 01              4118 	ld	(hl), #0x01
   1296 21r53s41           4119 	ld	hl,#_twinited + 1
   1299 36 00              4120 	ld	(hl), #0x00
                           4121 ;demo.c:565: vdp_load_palette(twister_palette);
   129B 21rA0s40           4122 	ld	hl,#_twister_palette
   129E E5                 4123 	push	hl
   129F CDr00s00           4124 	call	_vdp_load_palette
   12A2 F1                 4125 	pop	af
                           4126 ;demo.c:566: font();
   12A3 CDrB2s11           4127 	call	_font
   12A6                    4128 00102$:
                           4129 ;demo.c:569: cmd.size_x = 70;
   12A6 21r0Cs41           4130 	ld	hl, #_cmd + 8
   12A9 36 46              4131 	ld	(hl),#0x46
   12AB 23                 4132 	inc	hl
   12AC 36 00              4133 	ld	(hl),#0x00
                           4134 ;demo.c:570: cmd.size_y = 2;
   12AE 21r0Es41           4135 	ld	hl, #_cmd + 10
   12B1 36 02              4136 	ld	(hl),#0x02
   12B3 23                 4137 	inc	hl
   12B4 36 00              4138 	ld	(hl),#0x00
                           4139 ;demo.c:571: cmd.data = 0;
   12B6 3E 00              4140 	ld	a,#0x00
   12B8 32r10s41           4141 	ld	(#_cmd + 12),a
                           4142 ;demo.c:572: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4143 	ld	a,#0x04
   12BD 32r11s41           4144 	ld	(#_cmd + 13),a
                           4145 ;demo.c:573: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r12s41           4146 	ld	bc,#_cmd + 14
   12C3 3E E0              4147 	ld	a,#0xE0
   12C5 02                 4148 	ld	(bc),a
                           4149 ;demo.c:574: cmd.source_x = 70;
   12C6 21r04s41           4150 	ld	hl,#_cmd
   12C9 36 46              4151 	ld	(hl),#0x46
   12CB 23                 4152 	inc	hl
   12CC 36 00              4153 	ld	(hl),#0x00
                           4154 ;demo.c:575: cmd.dest_x = 70;
   12CE 21r08s41           4155 	ld	hl, #_cmd + 4
   12D1 36 46              4156 	ld	(hl),#0x46
   12D3 23                 4157 	inc	hl
   12D4 36 00              4158 	ld	(hl),#0x00
                           4159 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4160 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4161 	ld	-1 (ix),#0x00
   12DE                    4162 00107$:
   12DE DD 7E FE           4163 	ld	a,-2 (ix)
   12E1 D6 D4              4164 	sub	a,#0xD4
   12E3 DD 7E FF           4165 	ld	a,-1 (ix)
   12E6 DE 00              4166 	sbc	a,#0x00
   12E8 F2r41s13           4167 	jp	P,00110$
                           4168 ;demo.c:578: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r06s41           4169 	ld	de,#_cmd + 2
   12EE DD 4E FE           4170 	ld	c,-2 (ix)
   12F1 DD 46 FF           4171 	ld	b,-1 (ix)
   12F4 CB 28              4172 	sra	b
   12F6 CB 19              4173 	rr	c
   12F8 3Ar50s41           4174 	ld	a,(#_ff+0)
   12FB 81                 4175 	add	a,c
   12FC 4F                 4176 	ld	c,a
   12FD 3Ar51s41           4177 	ld	a,(#_ff+1)
   1300 88                 4178 	adc	a,b
   1301 06 00              4179 	ld	b,#0x00
   1303 21r00s00           4180 	ld	hl,#_sintab
   1306 09                 4181 	add	hl,bc
   1307 7E                 4182 	ld	a,(hl)
   1308 4F                 4183 	ld	c,a
   1309 CB 29              4184 	sra	c
   130B 79                 4185 	ld	a,c
   130C 17                 4186 	rla	
   130D 9F                 4187 	sbc	a,a
   130E 47                 4188 	ld	b,a
   130F 21 40 02           4189 	ld	hl,#0x0240
   1312 09                 4190 	add	hl,bc
   1313 4D                 4191 	ld	c,l
   1314 44                 4192 	ld	b,h
   1315 6B                 4193 	ld	l,e
   1316 62                 4194 	ld	h,d
   1317 71                 4195 	ld	(hl),c
   1318 23                 4196 	inc	hl
   1319 70                 4197 	ld	(hl),b
                           4198 ;demo.c:579: cmd.dest_y = y;
   131A 21r0As41           4199 	ld	hl, #_cmd + 6
   131D DD 7E FE           4200 	ld	a,-2 (ix)
   1320 77                 4201 	ld	(hl),a
   1321 23                 4202 	inc	hl
   1322 DD 7E FF           4203 	ld	a,-1 (ix)
   1325 77                 4204 	ld	(hl),a
                           4205 ;demo.c:580: vdp_copier(&cmd);
   1326 21r04s41           4206 	ld	hl,#_cmd
   1329 E5                 4207 	push	hl
   132A CDr00s00           4208 	call	_vdp_copier
   132D F1                 4209 	pop	af
                           4210 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4211 	ld	a,-2 (ix)
   1331 C6 02              4212 	add	a,#0x02
   1333 DD 77 FE           4213 	ld	-2 (ix),a
   1336 DD 7E FF           4214 	ld	a,-1 (ix)
   1339 CE 00              4215 	adc	a,#0x00
   133B DD 77 FF           4216 	ld	-1 (ix),a
   133E C3rDEs12           4217 	jp	00107$
   1341                    4218 00110$:
                           4219 ;demo.c:584: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21r50s41           4220 	ld	hl,#_ff + 0
   1344 4E                 4221 	ld	c,(hl)
   1345 21r51s41           4222 	ld	hl,#_ff + 1
   1348 46                 4223 	ld	b,(hl)
   1349 CB 28              4224 	sra	b
   134B CB 19              4225 	rr	c
   134D CB 28              4226 	sra	b
   134F CB 19              4227 	rr	c
   1351 21r50s41           4228 	ld	hl,#_ff + 0
   1354 5E                 4229 	ld	e,(hl)
   1355 21r51s41           4230 	ld	hl,#_ff + 1
   1358 56                 4231 	ld	d,(hl)
   1359 CB 2A              4232 	sra	d
   135B CB 1B              4233 	rr	e
   135D CB 2A              4234 	sra	d
   135F CB 1B              4235 	rr	e
   1361 CB 2A              4236 	sra	d
   1363 CB 1B              4237 	rr	e
   1365 43                 4238 	ld	b,e
   1366 79                 4239 	ld	a,c
   1367 F5                 4240 	push	af
   1368 33                 4241 	inc	sp
   1369 C5                 4242 	push	bc
   136A 33                 4243 	inc	sp
   136B 41                 4244 	ld	b,c
   136C 0E 04              4245 	ld	c,#0x04
   136E C5                 4246 	push	bc
   136F CDr00s00           4247 	call	_msx2_palette
   1372 F1                 4248 	pop	af
   1373 F1                 4249 	pop	af
                           4250 ;demo.c:586: ff+=4;
   1374 21r50s41           4251 	ld	hl,#_ff
   1377 7E                 4252 	ld	a,(hl)
   1378 C6 04              4253 	add	a,#0x04
   137A 23                 4254 	inc	hl
   137B 2B                 4255 	dec	hl
   137C C5                 4256 	push	bc
   137D 4F                 4257 	ld	c, a
   137E 23                 4258 	inc	hl
   137F 7E                 4259 	ld	a, (hl)
   1380 47                 4260 	ld	b, a
   1381 79                 4261 	ld	a, c
   1382 2B                 4262 	dec	hl
   1383 77                 4263 	ld	(hl), a
   1384 78                 4264 	ld	a, b
   1385 C1                 4265 	pop	bc
   1386 CE 00              4266 	adc	a,#0x00
   1388 23                 4267 	inc	hl
   1389 77                 4268 	ld	(hl),a
   138A DD F9              4269 	ld	sp,ix
   138C DD E1              4270 	pop	ix
   138E C9                 4271 	ret
   138F                    4272 _twister_end::
                           4273 ;demo.c:596: void bulbs() {
                           4274 ;	---------------------------------
                           4275 ; Function bulbs
                           4276 ; ---------------------------------
   138F                    4277 _bulbs_start::
   138F                    4278 _bulbs:
   138F DD E5              4279 	push	ix
   1391 DD 21 00 00        4280 	ld	ix,#0
   1395 DD 39              4281 	add	ix,sp
   1397 21 FA FF           4282 	ld	hl,#-6
   139A 39                 4283 	add	hl,sp
   139B F9                 4284 	ld	sp,hl
                           4285 ;demo.c:599: int sy = 16;
   139C 01 10 00           4286 	ld	bc,#0x0010
                           4287 ;demo.c:601: ender+=enderdir;
   139F 21r5Cs41           4288 	ld	hl,#_enderdir
   13A2 D5                 4289 	push	de
   13A3 FD 21r5As41        4290 	ld	iy,#_ender
   13A7 FD E5              4291 	push	iy
   13A9 D1                 4292 	pop	de
   13AA 1A                 4293 	ld	a,(de)
   13AB 86                 4294 	add	a,(hl)
   13AC 13                 4295 	inc	de
   13AD 1B                 4296 	dec	de
   13AE C5                 4297 	push	bc
   13AF 4F                 4298 	ld	c, a
   13B0 13                 4299 	inc	de
   13B1 1A                 4300 	ld	a, (de)
   13B2 47                 4301 	ld	b, a
   13B3 79                 4302 	ld	a, c
   13B4 1B                 4303 	dec	de
   13B5 12                 4304 	ld	(de), a
   13B6 78                 4305 	ld	a, b
   13B7 C1                 4306 	pop	bc
   13B8 23                 4307 	inc	hl
   13B9 8E                 4308 	adc	a,(hl)
   13BA 13                 4309 	inc	de
   13BB 12                 4310 	ld	(de),a
   13BC D1                 4311 	pop	de
                           4312 ;demo.c:602: if (ender < 2) enderdir = -enderdir;
   13BD 3Ar5As41           4313 	ld	a,(#_ender+0)
   13C0 D6 02              4314 	sub	a,#0x02
   13C2 3Ar5Bs41           4315 	ld	a,(#_ender+1)
   13C5 DE 00              4316 	sbc	a,#0x00
   13C7 F2rEBs13           4317 	jp	P,00102$
   13CA AF                 4318 	xor	a,a
   13CB FD 21r5Cs41        4319 	ld	iy,#_enderdir
   13CF 3E 00              4320 	ld	a,#0x00
   13D1 FD 9E 00           4321 	sbc	a,0 (iy)
   13D4 FD 21r5Cs41        4322 	ld	iy,#_enderdir
   13D8 FD 77 00           4323 	ld	0 (iy),a
   13DB FD 21r5Cs41        4324 	ld	iy,#_enderdir
   13DF 3E 00              4325 	ld	a,#0x00
   13E1 FD 9E 01           4326 	sbc	a,1 (iy)
   13E4 FD 21r5Cs41        4327 	ld	iy,#_enderdir
   13E8 FD 77 01           4328 	ld	1 (iy),a
   13EB                    4329 00102$:
                           4330 ;demo.c:603: if (ender >= 212) enderdir = -enderdir;
   13EB 3Ar5As41           4331 	ld	a,(#_ender+0)
   13EE D6 D4              4332 	sub	a,#0xD4
   13F0 3Ar5Bs41           4333 	ld	a,(#_ender+1)
   13F3 DE 00              4334 	sbc	a,#0x00
   13F5 FAr19s14           4335 	jp	M,00104$
   13F8 AF                 4336 	xor	a,a
   13F9 FD 21r5Cs41        4337 	ld	iy,#_enderdir
   13FD 3E 00              4338 	ld	a,#0x00
   13FF FD 9E 00           4339 	sbc	a,0 (iy)
   1402 FD 21r5Cs41        4340 	ld	iy,#_enderdir
   1406 FD 77 00           4341 	ld	0 (iy),a
   1409 FD 21r5Cs41        4342 	ld	iy,#_enderdir
   140D 3E 00              4343 	ld	a,#0x00
   140F FD 9E 01           4344 	sbc	a,1 (iy)
   1412 FD 21r5Cs41        4345 	ld	iy,#_enderdir
   1416 FD 77 01           4346 	ld	1 (iy),a
   1419                    4347 00104$:
                           4348 ;demo.c:605: enderend = ender + 92;
   1419 3Ar5As41           4349 	ld	a,(#_ender+0)
   141C C6 5C              4350 	add	a,#0x5C
   141E DD 77 FE           4351 	ld	-2 (ix),a
   1421 3Ar5Bs41           4352 	ld	a,(#_ender+1)
   1424 CE 00              4353 	adc	a,#0x00
   1426 DD 77 FF           4354 	ld	-1 (ix),a
                           4355 ;demo.c:607: if (enderend > 212) enderend = 212;
   1429 3E D4              4356 	ld	a,#0xD4
   142B DD 96 FE           4357 	sub	a,-2 (ix)
   142E 3E 00              4358 	ld	a,#0x00
   1430 DD 9E FF           4359 	sbc	a,-1 (ix)
   1433 F2r3Es14           4360 	jp	P,00106$
   1436 DD 36 FE D4        4361 	ld	-2 (ix),#0xD4
   143A DD 36 FF 00        4362 	ld	-1 (ix),#0x00
   143E                    4363 00106$:
                           4364 ;demo.c:608: if (enderend > 212-16) sy = 16-(212-enderend);
   143E 3E C4              4365 	ld	a,#0xC4
   1440 DD 96 FE           4366 	sub	a,-2 (ix)
   1443 3E 00              4367 	ld	a,#0x00
   1445 DD 9E FF           4368 	sbc	a,-1 (ix)
   1448 F2r5Fs14           4369 	jp	P,00108$
   144B 3E D4              4370 	ld	a,#0xD4
   144D DD 96 FE           4371 	sub	a,-2 (ix)
   1450 5F                 4372 	ld	e,a
   1451 3E 00              4373 	ld	a,#0x00
   1453 DD 9E FF           4374 	sbc	a,-1 (ix)
   1456 57                 4375 	ld	d,a
   1457 3E 10              4376 	ld	a,#0x10
   1459 93                 4377 	sub	a,e
   145A 4F                 4378 	ld	c,a
   145B 3E 00              4379 	ld	a,#0x00
   145D 9A                 4380 	sbc	a,d
   145E 47                 4381 	ld	b,a
   145F                    4382 00108$:
                           4383 ;demo.c:610: if(bulbflipper == 1) {
   145F 3Ar54s41           4384 	ld	a,(#_bulbflipper+0)
   1462 D6 01              4385 	sub	a,#0x01
   1464 20 06              4386 	jr	NZ,00133$
   1466 3Ar55s41           4387 	ld	a,(#_bulbflipper+1)
   1469 B7                 4388 	or	a,a
   146A 28 03              4389 	jr	Z,00134$
   146C                    4390 00133$:
   146C C3r24s15           4391 	jp	00110$
   146F                    4392 00134$:
                           4393 ;demo.c:611: cmd.size_x = 72;
   146F 11r0Cs41           4394 	ld	de,#_cmd + 8
   1472 EB                 4395 	ex	de,hl
   1473 36 48              4396 	ld	(hl),#0x48
   1475 23                 4397 	inc	hl
   1476 36 00              4398 	ld	(hl),#0x00
                           4399 ;demo.c:612: cmd.size_y = sy;
   1478 11r0Es41           4400 	ld	de,#_cmd + 10
   147B EB                 4401 	ex	de,hl
   147C 71                 4402 	ld	(hl),c
   147D 23                 4403 	inc	hl
   147E 70                 4404 	ld	(hl),b
                           4405 ;demo.c:613: cmd.data = 0;
   147F 11r10s41           4406 	ld	de,#_cmd + 12
   1482 3E 00              4407 	ld	a,#0x00
   1484 12                 4408 	ld	(de),a
                           4409 ;demo.c:614: cmd.argument = 0x04; // from 72xY to left
   1485 11r11s41           4410 	ld	de,#_cmd + 13
   1488 3E 04              4411 	ld	a,#0x04
   148A 12                 4412 	ld	(de),a
                           4413 ;demo.c:615: cmd.command = 0xe0; // vram to vram, y only
   148B 11r12s41           4414 	ld	de,#_cmd + 14
   148E 3E E0              4415 	ld	a,#0xE0
   1490 12                 4416 	ld	(de),a
                           4417 ;demo.c:616: cmd.source_x = 72;
   1491 21r04s41           4418 	ld	hl,#_cmd
   1494 36 48              4419 	ld	(hl),#0x48
   1496 23                 4420 	inc	hl
   1497 36 00              4421 	ld	(hl),#0x00
                           4422 ;demo.c:617: cmd.dest_x = 72;
   1499 11r08s41           4423 	ld	de,#_cmd + 4
   149C 6B                 4424 	ld	l,e
   149D 62                 4425 	ld	h,d
   149E 36 48              4426 	ld	(hl),#0x48
   14A0 23                 4427 	inc	hl
   14A1 36 00              4428 	ld	(hl),#0x00
                           4429 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14A3 ED 4Br5As41        4430 	ld	bc,(_ender)
   14A7 DD 71 FC           4431 	ld	-4 (ix),c
   14AA DD 70 FD           4432 	ld	-3 (ix),b
   14AD                    4433 00112$:
   14AD DD 7E FC           4434 	ld	a,-4 (ix)
   14B0 DD 96 FE           4435 	sub	a,-2 (ix)
   14B3 DD 7E FD           4436 	ld	a,-3 (ix)
   14B6 DD 9E FF           4437 	sbc	a,-1 (ix)
   14B9 F2r0Bs15           4438 	jp	P,00115$
                           4439 ;demo.c:620: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   14BC 01r06s41           4440 	ld	bc,#_cmd + 2
   14BF 3Ar56s41           4441 	ld	a,(#_ff1+0)
   14C2 DD 86 FC           4442 	add	a,-4 (ix)
   14C5 5F                 4443 	ld	e,a
   14C6 3Ar57s41           4444 	ld	a,(#_ff1+1)
   14C9 DD 8E FD           4445 	adc	a,-3 (ix)
   14CC 16 00              4446 	ld	d,#0x00
   14CE 21r00s00           4447 	ld	hl,#_sintab
   14D1 19                 4448 	add	hl,de
   14D2 5E                 4449 	ld	e,(hl)
   14D3 CB 2B              4450 	sra	e
   14D5 7B                 4451 	ld	a,e
   14D6 17                 4452 	rla	
   14D7 9F                 4453 	sbc	a,a
   14D8 57                 4454 	ld	d,a
   14D9 21 40 01           4455 	ld	hl,#0x0140
   14DC 19                 4456 	add	hl,de
   14DD EB                 4457 	ex	de,hl
   14DE 69                 4458 	ld	l,c
   14DF 60                 4459 	ld	h,b
   14E0 73                 4460 	ld	(hl),e
   14E1 23                 4461 	inc	hl
   14E2 72                 4462 	ld	(hl),d
                           4463 ;demo.c:621: cmd.dest_y = y;
   14E3 11r0As41           4464 	ld	de,#_cmd + 6
   14E6 EB                 4465 	ex	de,hl
   14E7 DD 7E FC           4466 	ld	a,-4 (ix)
   14EA 77                 4467 	ld	(hl),a
   14EB 23                 4468 	inc	hl
   14EC DD 7E FD           4469 	ld	a,-3 (ix)
   14EF 77                 4470 	ld	(hl),a
                           4471 ;demo.c:622: vdp_copier(&cmd);
   14F0 21r04s41           4472 	ld	hl,#_cmd
   14F3 E5                 4473 	push	hl
   14F4 CDr00s00           4474 	call	_vdp_copier
   14F7 F1                 4475 	pop	af
                           4476 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14F8 DD 7E FC           4477 	ld	a,-4 (ix)
   14FB C6 10              4478 	add	a,#0x10
   14FD DD 77 FC           4479 	ld	-4 (ix),a
   1500 DD 7E FD           4480 	ld	a,-3 (ix)
   1503 CE 00              4481 	adc	a,#0x00
   1505 DD 77 FD           4482 	ld	-3 (ix),a
   1508 C3rADs14           4483 	jp	00112$
   150B                    4484 00115$:
                           4485 ;demo.c:624: ff1+=4;
   150B 21r56s41           4486 	ld	hl,#_ff1
   150E 7E                 4487 	ld	a,(hl)
   150F C6 04              4488 	add	a,#0x04
   1511 23                 4489 	inc	hl
   1512 2B                 4490 	dec	hl
   1513 C5                 4491 	push	bc
   1514 4F                 4492 	ld	c, a
   1515 23                 4493 	inc	hl
   1516 7E                 4494 	ld	a, (hl)
   1517 47                 4495 	ld	b, a
   1518 79                 4496 	ld	a, c
   1519 2B                 4497 	dec	hl
   151A 77                 4498 	ld	(hl), a
   151B 78                 4499 	ld	a, b
   151C C1                 4500 	pop	bc
   151D CE 00              4501 	adc	a,#0x00
   151F 23                 4502 	inc	hl
   1520 77                 4503 	ld	(hl),a
   1521 C3rBFs15           4504 	jp	00111$
   1524                    4505 00110$:
                           4506 ;demo.c:628: cmd.size_x = 72;
   1524 11r0Cs41           4507 	ld	de,#_cmd + 8
   1527 EB                 4508 	ex	de,hl
   1528 36 48              4509 	ld	(hl),#0x48
   152A 23                 4510 	inc	hl
   152B 36 00              4511 	ld	(hl),#0x00
                           4512 ;demo.c:629: cmd.size_y = sy;
   152D 11r0Es41           4513 	ld	de,#_cmd + 10
   1530 6B                 4514 	ld	l,e
   1531 62                 4515 	ld	h,d
   1532 71                 4516 	ld	(hl),c
   1533 23                 4517 	inc	hl
   1534 70                 4518 	ld	(hl),b
                           4519 ;demo.c:630: cmd.data = 0;
                           4520 ;demo.c:631: cmd.argument = 0x00; // from 182xY to right
   1535 3E 00              4521 	ld	a,#0x00
   1537 32r10s41           4522 	ld	(#_cmd + 12),a
   153A 32r11s41           4523 	ld	(#_cmd + 13),a
                           4524 ;demo.c:632: cmd.command = 0xe0; // vram to vram, y only
   153D 01r12s41           4525 	ld	bc,#_cmd + 14
   1540 3E E0              4526 	ld	a,#0xE0
   1542 02                 4527 	ld	(bc),a
                           4528 ;demo.c:633: cmd.source_x = 182;
   1543 21r04s41           4529 	ld	hl,#_cmd
   1546 36 B6              4530 	ld	(hl),#0xB6
   1548 23                 4531 	inc	hl
   1549 36 00              4532 	ld	(hl),#0x00
                           4533 ;demo.c:634: cmd.dest_x = 182;
   154B 21r08s41           4534 	ld	hl, #_cmd + 4
   154E 36 B6              4535 	ld	(hl),#0xB6
   1550 23                 4536 	inc	hl
   1551 36 00              4537 	ld	(hl),#0x00
                           4538 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   1553 ED 4Br5As41        4539 	ld	bc,(_ender)
   1557                    4540 00116$:
   1557 79                 4541 	ld	a,c
   1558 DD 96 FE           4542 	sub	a,-2 (ix)
   155B 78                 4543 	ld	a,b
   155C DD 9E FF           4544 	sbc	a,-1 (ix)
   155F F2rA9s15           4545 	jp	P,00119$
                           4546 ;demo.c:637: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1562 21r06s41           4547 	ld	hl,#_cmd + 2
   1565 DD 75 FA           4548 	ld	-6 (ix),l
   1568 DD 74 FB           4549 	ld	-5 (ix),h
   156B 3Ar58s41           4550 	ld	a,(#_ff2+0)
   156E 81                 4551 	add	a,c
   156F 5F                 4552 	ld	e,a
   1570 3Ar59s41           4553 	ld	a,(#_ff2+1)
   1573 88                 4554 	adc	a,b
   1574 16 00              4555 	ld	d,#0x00
   1576 21r00s00           4556 	ld	hl,#_sintab
   1579 19                 4557 	add	hl,de
   157A 5E                 4558 	ld	e,(hl)
   157B CB 2B              4559 	sra	e
   157D 7B                 4560 	ld	a,e
   157E 17                 4561 	rla	
   157F 9F                 4562 	sbc	a,a
   1580 57                 4563 	ld	d,a
   1581 21 40 01           4564 	ld	hl,#0x0140
   1584 19                 4565 	add	hl,de
   1585 EB                 4566 	ex	de,hl
   1586 DD 6E FA           4567 	ld	l,-6 (ix)
   1589 DD 66 FB           4568 	ld	h,-5 (ix)
   158C 73                 4569 	ld	(hl),e
   158D 23                 4570 	inc	hl
   158E 72                 4571 	ld	(hl),d
                           4572 ;demo.c:638: cmd.dest_y = y;
   158F 11r0As41           4573 	ld	de,#_cmd + 6
   1592 EB                 4574 	ex	de,hl
   1593 71                 4575 	ld	(hl),c
   1594 23                 4576 	inc	hl
   1595 70                 4577 	ld	(hl),b
                           4578 ;demo.c:639: vdp_copier(&cmd);
   1596 C5                 4579 	push	bc
   1597 21r04s41           4580 	ld	hl,#_cmd
   159A E5                 4581 	push	hl
   159B CDr00s00           4582 	call	_vdp_copier
   159E F1                 4583 	pop	af
   159F C1                 4584 	pop	bc
                           4585 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   15A0 21 10 00           4586 	ld	hl,#0x0010
   15A3 09                 4587 	add	hl,bc
   15A4 4D                 4588 	ld	c,l
   15A5 44                 4589 	ld	b,h
   15A6 C3r57s15           4590 	jp	00116$
   15A9                    4591 00119$:
                           4592 ;demo.c:641: ff2+=4;
   15A9 21r58s41           4593 	ld	hl,#_ff2
   15AC 7E                 4594 	ld	a,(hl)
   15AD C6 04              4595 	add	a,#0x04
   15AF 23                 4596 	inc	hl
   15B0 2B                 4597 	dec	hl
   15B1 C5                 4598 	push	bc
   15B2 4F                 4599 	ld	c, a
   15B3 23                 4600 	inc	hl
   15B4 7E                 4601 	ld	a, (hl)
   15B5 47                 4602 	ld	b, a
   15B6 79                 4603 	ld	a, c
   15B7 2B                 4604 	dec	hl
   15B8 77                 4605 	ld	(hl), a
   15B9 78                 4606 	ld	a, b
   15BA C1                 4607 	pop	bc
   15BB CE 00              4608 	adc	a,#0x00
   15BD 23                 4609 	inc	hl
   15BE 77                 4610 	ld	(hl),a
   15BF                    4611 00111$:
                           4612 ;demo.c:644: bulbflipper = -bulbflipper;
   15BF AF                 4613 	xor	a,a
   15C0 FD 21r54s41        4614 	ld	iy,#_bulbflipper
   15C4 3E 00              4615 	ld	a,#0x00
   15C6 FD 9E 00           4616 	sbc	a,0 (iy)
   15C9 21r54s41           4617 	ld	hl,#_bulbflipper + 0
   15CC 77                 4618 	ld	(hl), a
   15CD FD 21r54s41        4619 	ld	iy,#_bulbflipper
   15D1 3E 00              4620 	ld	a,#0x00
   15D3 FD 9E 01           4621 	sbc	a,1 (iy)
   15D6 21r55s41           4622 	ld	hl,#_bulbflipper + 1
   15D9 77                 4623 	ld	(hl), a
   15DA DD F9              4624 	ld	sp,ix
   15DC DD E1              4625 	pop	ix
   15DE C9                 4626 	ret
   15DF                    4627 _bulbs_end::
                           4628 ;demo.c:658: void animplay() {
                           4629 ;	---------------------------------
                           4630 ; Function animplay
                           4631 ; ---------------------------------
   15DF                    4632 _animplay_start::
   15DF                    4633 _animplay:
   15DF DD E5              4634 	push	ix
   15E1 DD 21 00 00        4635 	ld	ix,#0
   15E5 DD 39              4636 	add	ix,sp
   15E7 F5                 4637 	push	af
   15E8 3B                 4638 	dec	sp
                           4639 ;demo.c:663: if (anim_init == 0) {
   15E9 3Ar66s41           4640 	ld	a,(#_anim_init+0)
   15EC 21r67s41           4641 	ld	hl,#_anim_init + 1
   15EF B6                 4642 	or	a,(hl)
   15F0 C2r78s17           4643 	jp	NZ,00120$
                           4644 ;demo.c:665: scratch_clear();
   15F3 CDr90s07           4645 	call	_scratch_clear
                           4646 ;demo.c:666: vdp_load_palette(scratch);
   15F6 21rE0s3F           4647 	ld	hl,#_scratch
   15F9 E5                 4648 	push	hl
   15FA CDr00s00           4649 	call	_vdp_load_palette
   15FD F1                 4650 	pop	af
                           4651 ;demo.c:668: uninstall_isr();
   15FE CDr00s00           4652 	call	_uninstall_isr
                           4653 ;demo.c:669: PLY_Stop();
   1601 CDr00s00           4654 	call	_PLY_Stop
                           4655 ;demo.c:670: PLY_SendRegisters();
   1604 CDr00s00           4656 	call	_PLY_SendRegisters
                           4657 ;demo.c:672: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1607 21 00 00           4658 	ld	hl,#0x0000
   160A E5                 4659 	push	hl
   160B 2E 01              4660 	ld	l, #0x01
   160D E5                 4661 	push	hl
   160E 2E 00              4662 	ld	l, #0x00
   1610 E5                 4663 	push	hl
   1611 21 09 37           4664 	ld	hl,#0x3709
   1614 E5                 4665 	push	hl
   1615 21r60s18           4666 	ld	hl,#__str_9
   1618 E5                 4667 	push	hl
   1619 CDr99s09           4668 	call	_pck_load
   161C FD 21 0A 00        4669 	ld	iy,#0x000A
   1620 FD 39              4670 	add	iy,sp
   1622 FD F9              4671 	ld	sp,iy
                           4672 ;demo.c:674: cmd.size_x = 256;
   1624 21r0Cs41           4673 	ld	hl, #_cmd + 8
   1627 36 00              4674 	ld	(hl),#0x00
   1629 23                 4675 	inc	hl
   162A 36 01              4676 	ld	(hl),#0x01
                           4677 ;demo.c:675: cmd.size_y = 212;
   162C 21r0Es41           4678 	ld	hl, #_cmd + 10
   162F 36 D4              4679 	ld	(hl),#0xD4
   1631 23                 4680 	inc	hl
   1632 36 00              4681 	ld	(hl),#0x00
                           4682 ;demo.c:676: cmd.data = 0;
                           4683 ;demo.c:677: cmd.argument = 0x00;
   1634 3E 00              4684 	ld	a,#0x00
   1636 32r10s41           4685 	ld	(#_cmd + 12),a
   1639 32r11s41           4686 	ld	(#_cmd + 13),a
                           4687 ;demo.c:678: cmd.command = 0xd0; 
   163C 01r12s41           4688 	ld	bc,#_cmd + 14
   163F 3E D0              4689 	ld	a,#0xD0
   1641 02                 4690 	ld	(bc),a
                           4691 ;demo.c:679: cmd.source_x = 0;
   1642 21r04s41           4692 	ld	hl,#_cmd
   1645 36 00              4693 	ld	(hl),#0x00
   1647 23                 4694 	inc	hl
   1648 36 00              4695 	ld	(hl),#0x00
                           4696 ;demo.c:680: cmd.source_y = 0;
   164A 21r06s41           4697 	ld	hl, #_cmd + 2
   164D 36 00              4698 	ld	(hl),#0x00
   164F 23                 4699 	inc	hl
   1650 36 00              4700 	ld	(hl),#0x00
                           4701 ;demo.c:681: cmd.dest_x = 0;
   1652 21r08s41           4702 	ld	hl, #_cmd + 4
   1655 36 00              4703 	ld	(hl),#0x00
   1657 23                 4704 	inc	hl
   1658 36 00              4705 	ld	(hl),#0x00
                           4706 ;demo.c:682: cmd.dest_y = 256;
   165A 21r0As41           4707 	ld	hl, #_cmd + 6
   165D 36 00              4708 	ld	(hl),#0x00
   165F 23                 4709 	inc	hl
   1660 36 01              4710 	ld	(hl),#0x01
                           4711 ;demo.c:683: vdp_copier(&cmd);
   1662 21r04s41           4712 	ld	hl,#_cmd
   1665 E5                 4713 	push	hl
   1666 CDr00s00           4714 	call	_vdp_copier
   1669 F1                 4715 	pop	af
                           4716 ;demo.c:685: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   166A 21 00 00           4717 	ld	hl,#0x0000
   166D E5                 4718 	push	hl
   166E 2E 01              4719 	ld	l, #0x01
   1670 E5                 4720 	push	hl
   1671 2E 00              4721 	ld	l, #0x00
   1673 E5                 4722 	push	hl
   1674 21 76 3E           4723 	ld	hl,#0x3E76
   1677 E5                 4724 	push	hl
   1678 21r6Cs18           4725 	ld	hl,#__str_10
   167B E5                 4726 	push	hl
   167C CDr99s09           4727 	call	_pck_load
   167F FD 21 0A 00        4728 	ld	iy,#0x000A
   1683 FD 39              4729 	add	iy,sp
   1685 FD F9              4730 	ld	sp,iy
                           4731 ;demo.c:687: cmd.size_x = 256;
   1687 21r0Cs41           4732 	ld	hl, #_cmd + 8
   168A 36 00              4733 	ld	(hl),#0x00
   168C 23                 4734 	inc	hl
   168D 36 01              4735 	ld	(hl),#0x01
                           4736 ;demo.c:688: cmd.size_y = 212;
   168F 21r0Es41           4737 	ld	hl, #_cmd + 10
   1692 36 D4              4738 	ld	(hl),#0xD4
   1694 23                 4739 	inc	hl
   1695 36 00              4740 	ld	(hl),#0x00
                           4741 ;demo.c:689: cmd.data = 0;
                           4742 ;demo.c:690: cmd.argument = 0x00;
   1697 3E 00              4743 	ld	a,#0x00
   1699 32r10s41           4744 	ld	(#_cmd + 12),a
   169C 32r11s41           4745 	ld	(#_cmd + 13),a
                           4746 ;demo.c:691: cmd.command = 0xd0; 
   169F 01r12s41           4747 	ld	bc,#_cmd + 14
   16A2 3E D0              4748 	ld	a,#0xD0
   16A4 02                 4749 	ld	(bc),a
                           4750 ;demo.c:692: cmd.source_x = 0;
   16A5 21r04s41           4751 	ld	hl,#_cmd
   16A8 36 00              4752 	ld	(hl),#0x00
   16AA 23                 4753 	inc	hl
   16AB 36 00              4754 	ld	(hl),#0x00
                           4755 ;demo.c:693: cmd.source_y = 0;
   16AD 21r06s41           4756 	ld	hl, #_cmd + 2
   16B0 36 00              4757 	ld	(hl),#0x00
   16B2 23                 4758 	inc	hl
   16B3 36 00              4759 	ld	(hl),#0x00
                           4760 ;demo.c:694: cmd.dest_x = 0;
   16B5 21r08s41           4761 	ld	hl, #_cmd + 4
   16B8 36 00              4762 	ld	(hl),#0x00
   16BA 23                 4763 	inc	hl
   16BB 36 00              4764 	ld	(hl),#0x00
                           4765 ;demo.c:695: cmd.dest_y = 512;
   16BD 21r0As41           4766 	ld	hl, #_cmd + 6
   16C0 36 00              4767 	ld	(hl),#0x00
   16C2 23                 4768 	inc	hl
   16C3 36 02              4769 	ld	(hl),#0x02
                           4770 ;demo.c:696: vdp_copier(&cmd);
   16C5 21r04s41           4771 	ld	hl,#_cmd
   16C8 E5                 4772 	push	hl
   16C9 CDr00s00           4773 	call	_vdp_copier
   16CC F1                 4774 	pop	af
                           4775 ;demo.c:699: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   16CD 21 00 00           4776 	ld	hl,#0x0000
   16D0 E5                 4777 	push	hl
   16D1 2E 01              4778 	ld	l, #0x01
   16D3 E5                 4779 	push	hl
   16D4 2E 00              4780 	ld	l, #0x00
   16D6 E5                 4781 	push	hl
   16D7 21 9E 3A           4782 	ld	hl,#0x3A9E
   16DA E5                 4783 	push	hl
   16DB 21r78s18           4784 	ld	hl,#__str_11
   16DE E5                 4785 	push	hl
   16DF CDr99s09           4786 	call	_pck_load
   16E2 FD 21 0A 00        4787 	ld	iy,#0x000A
   16E6 FD 39              4788 	add	iy,sp
   16E8 FD F9              4789 	ld	sp,iy
                           4790 ;demo.c:701: cmd.size_x = 256;
   16EA 21r0Cs41           4791 	ld	hl, #_cmd + 8
   16ED 36 00              4792 	ld	(hl),#0x00
   16EF 23                 4793 	inc	hl
   16F0 36 01              4794 	ld	(hl),#0x01
                           4795 ;demo.c:702: cmd.size_y = 212;
   16F2 21r0Es41           4796 	ld	hl, #_cmd + 10
   16F5 36 D4              4797 	ld	(hl),#0xD4
   16F7 23                 4798 	inc	hl
   16F8 36 00              4799 	ld	(hl),#0x00
                           4800 ;demo.c:703: cmd.data = 0;
                           4801 ;demo.c:704: cmd.argument = 0x00;
   16FA 3E 00              4802 	ld	a,#0x00
   16FC 32r10s41           4803 	ld	(#_cmd + 12),a
   16FF 32r11s41           4804 	ld	(#_cmd + 13),a
                           4805 ;demo.c:705: cmd.command = 0xd0; 
   1702 01r12s41           4806 	ld	bc,#_cmd + 14
   1705 3E D0              4807 	ld	a,#0xD0
   1707 02                 4808 	ld	(bc),a
                           4809 ;demo.c:706: cmd.source_x = 0;
   1708 21r04s41           4810 	ld	hl,#_cmd
   170B 36 00              4811 	ld	(hl),#0x00
   170D 23                 4812 	inc	hl
   170E 36 00              4813 	ld	(hl),#0x00
                           4814 ;demo.c:707: cmd.source_y = 0;
   1710 21r06s41           4815 	ld	hl, #_cmd + 2
   1713 36 00              4816 	ld	(hl),#0x00
   1715 23                 4817 	inc	hl
   1716 36 00              4818 	ld	(hl),#0x00
                           4819 ;demo.c:708: cmd.dest_x = 0;
   1718 21r08s41           4820 	ld	hl, #_cmd + 4
   171B 36 00              4821 	ld	(hl),#0x00
   171D 23                 4822 	inc	hl
   171E 36 00              4823 	ld	(hl),#0x00
                           4824 ;demo.c:709: cmd.dest_y = 768;
   1720 21r0As41           4825 	ld	hl, #_cmd + 6
   1723 36 00              4826 	ld	(hl),#0x00
   1725 23                 4827 	inc	hl
   1726 36 03              4828 	ld	(hl),#0x03
                           4829 ;demo.c:710: vdp_copier(&cmd);
   1728 21r04s41           4830 	ld	hl,#_cmd
   172B E5                 4831 	push	hl
   172C CDr00s00           4832 	call	_vdp_copier
   172F F1                 4833 	pop	af
                           4834 ;demo.c:712: vdp_register(9,130); // 50hz,212
   1730 21 09 82           4835 	ld	hl,#0x8209
   1733 E5                 4836 	push	hl
   1734 CDr00s00           4837 	call	_vdp_register
   1737 F1                 4838 	pop	af
                           4839 ;demo.c:714: scratch_clear();
   1738 CDr90s07           4840 	call	_scratch_clear
                           4841 ;demo.c:716: vdp_set_write_address(0, 0);
   173B 21 00 00           4842 	ld	hl,#0x0000
   173E E5                 4843 	push	hl
   173F 3E 00              4844 	ld	a,#0x00
   1741 F5                 4845 	push	af
   1742 33                 4846 	inc	sp
   1743 CDr00s00           4847 	call	_vdp_set_write_address
   1746 F1                 4848 	pop	af
   1747 33                 4849 	inc	sp
                           4850 ;demo.c:718: for (y = 0; y < 212; y++) { 
   1748 0E D4              4851 	ld	c,#0xD4
   174A                    4852 00109$:
                           4853 ;demo.c:719: vdp_load_screen(scratch, 128);
   174A C5                 4854 	push	bc
   174B 3E 80              4855 	ld	a,#0x80
   174D F5                 4856 	push	af
   174E 33                 4857 	inc	sp
   174F 21rE0s3F           4858 	ld	hl,#_scratch
   1752 E5                 4859 	push	hl
   1753 CDr00s00           4860 	call	_vdp_load_screen
   1756 F1                 4861 	pop	af
   1757 33                 4862 	inc	sp
   1758 C1                 4863 	pop	bc
   1759 0D                 4864 	dec	c
                           4865 ;demo.c:718: for (y = 0; y < 212; y++) { 
   175A AF                 4866 	xor	a,a
   175B B1                 4867 	or	a,c
   175C 20 EC              4868 	jr	NZ,00109$
                           4869 ;demo.c:722: install_isr(my_isr);
   175E 21rECs05           4870 	ld	hl,#_my_isr
   1761 E5                 4871 	push	hl
   1762 CDr00s00           4872 	call	_install_isr
   1765 F1                 4873 	pop	af
                           4874 ;demo.c:723: anim_init = 1;
   1766 21r66s41           4875 	ld	hl,#_anim_init + 0
   1769 36 01              4876 	ld	(hl), #0x01
   176B 21r67s41           4877 	ld	hl,#_anim_init + 1
   176E 36 00              4878 	ld	(hl), #0x00
                           4879 ;demo.c:724: vdp_load_palette(tf_palette);
   1770 21rC0s40           4880 	ld	hl,#_tf_palette
   1773 E5                 4881 	push	hl
   1774 CDr00s00           4882 	call	_vdp_load_palette
   1777 F1                 4883 	pop	af
                           4884 ;demo.c:727: for (y = 0; y < 106; y+=1) {
   1778                    4885 00120$:
   1778 DD 36 FF 00        4886 	ld	-1 (ix),#0x00
   177C                    4887 00110$:
   177C DD 7E FF           4888 	ld	a,-1 (ix)
   177F D6 6A              4889 	sub	a,#0x6A
   1781 D2r01s18           4890 	jp	NC,00113$
                           4891 ;demo.c:728: cmd.source_x = 0;
   1784 21r04s41           4892 	ld	hl,#_cmd
   1787 36 00              4893 	ld	(hl),#0x00
   1789 23                 4894 	inc	hl
   178A 36 00              4895 	ld	(hl),#0x00
                           4896 ;demo.c:729: cmd.source_y = 256+po+frames+(y>>1);
   178C 11r06s41           4897 	ld	de,#_cmd + 2
   178F 3Ar62s41           4898 	ld	a,(#_po+0)
   1792 4F                 4899 	ld	c,a
   1793 3Ar63s41           4900 	ld	a,(#_po+1)
   1796 C6 01              4901 	add	a,#0x01
   1798 47                 4902 	ld	b,a
   1799 21r64s41           4903 	ld	hl,#_frames
   179C 79                 4904 	ld	a,c
   179D 86                 4905 	add	a,(hl)
   179E DD 77 FD           4906 	ld	-3 (ix),a
   17A1 78                 4907 	ld	a,b
   17A2 23                 4908 	inc	hl
   17A3 8E                 4909 	adc	a,(hl)
   17A4 DD 77 FE           4910 	ld	-2 (ix),a
   17A7 DD 4E FF           4911 	ld	c,-1 (ix)
   17AA CB 39              4912 	srl	c
   17AC 06 00              4913 	ld	b,#0x00
   17AE DD 7E FD           4914 	ld	a,-3 (ix)
   17B1 81                 4915 	add	a,c
   17B2 4F                 4916 	ld	c,a
   17B3 DD 7E FE           4917 	ld	a,-2 (ix)
   17B6 88                 4918 	adc	a,b
   17B7 47                 4919 	ld	b,a
   17B8 6B                 4920 	ld	l,e
   17B9 62                 4921 	ld	h,d
   17BA 71                 4922 	ld	(hl),c
   17BB 23                 4923 	inc	hl
   17BC 70                 4924 	ld	(hl),b
                           4925 ;demo.c:730: cmd.dest_x = 0;
   17BD 21r08s41           4926 	ld	hl, #_cmd + 4
   17C0 36 00              4927 	ld	(hl),#0x00
   17C2 23                 4928 	inc	hl
   17C3 36 00              4929 	ld	(hl),#0x00
                           4930 ;demo.c:731: cmd.dest_y = (y<<1);
   17C5 01r0As41           4931 	ld	bc,#_cmd + 6
   17C8 DD 5E FF           4932 	ld	e,-1 (ix)
   17CB 16 00              4933 	ld	d,#0x00
   17CD CB 23              4934 	sla	e
   17CF CB 12              4935 	rl	d
   17D1 69                 4936 	ld	l,c
   17D2 60                 4937 	ld	h,b
   17D3 73                 4938 	ld	(hl),e
   17D4 23                 4939 	inc	hl
   17D5 72                 4940 	ld	(hl),d
                           4941 ;demo.c:732: cmd.size_x = 256;
   17D6 21r0Cs41           4942 	ld	hl, #_cmd + 8
   17D9 36 00              4943 	ld	(hl),#0x00
   17DB 23                 4944 	inc	hl
   17DC 36 01              4945 	ld	(hl),#0x01
                           4946 ;demo.c:733: cmd.size_y = 1;
   17DE 21r0Es41           4947 	ld	hl, #_cmd + 10
   17E1 36 01              4948 	ld	(hl),#0x01
   17E3 23                 4949 	inc	hl
   17E4 36 00              4950 	ld	(hl),#0x00
                           4951 ;demo.c:734: cmd.data = 0;
                           4952 ;demo.c:735: cmd.argument = 0x00;
   17E6 3E 00              4953 	ld	a,#0x00
   17E8 32r10s41           4954 	ld	(#_cmd + 12),a
   17EB 32r11s41           4955 	ld	(#_cmd + 13),a
                           4956 ;demo.c:736: cmd.command = 0xD0;
   17EE 3E D0              4957 	ld	a,#0xD0
   17F0 32r12s41           4958 	ld	(#_cmd + 14),a
                           4959 ;demo.c:737: vdp_copier(&cmd);
   17F3 21r04s41           4960 	ld	hl,#_cmd
   17F6 E5                 4961 	push	hl
   17F7 CDr00s00           4962 	call	_vdp_copier
   17FA F1                 4963 	pop	af
                           4964 ;demo.c:727: for (y = 0; y < 106; y+=1) {
   17FB DD 34 FF           4965 	inc	-1 (ix)
   17FE C3r7Cs17           4966 	jp	00110$
   1801                    4967 00113$:
                           4968 ;demo.c:740: frames+=53;
   1801 21r64s41           4969 	ld	hl,#_frames
   1804 7E                 4970 	ld	a,(hl)
   1805 C6 35              4971 	add	a,#0x35
   1807 23                 4972 	inc	hl
   1808 2B                 4973 	dec	hl
   1809 C5                 4974 	push	bc
   180A 4F                 4975 	ld	c, a
   180B 23                 4976 	inc	hl
   180C 7E                 4977 	ld	a, (hl)
   180D 47                 4978 	ld	b, a
   180E 79                 4979 	ld	a, c
   180F 2B                 4980 	dec	hl
   1810 77                 4981 	ld	(hl), a
   1811 78                 4982 	ld	a, b
   1812 C1                 4983 	pop	bc
   1813 CE 00              4984 	adc	a,#0x00
   1815 23                 4985 	inc	hl
   1816 77                 4986 	ld	(hl),a
                           4987 ;demo.c:741: if (frames >= 212) { frames = 0; po+=256; }
   1817 3Ar64s41           4988 	ld	a,(#_frames+0)
   181A D6 D4              4989 	sub	a,#0xD4
   181C 3Ar65s41           4990 	ld	a,(#_frames+1)
   181F DE 00              4991 	sbc	a,#0x00
   1821 FAr44s18           4992 	jp	M,00104$
   1824 21r64s41           4993 	ld	hl,#_frames + 0
   1827 36 00              4994 	ld	(hl), #0x00
   1829 21r65s41           4995 	ld	hl,#_frames + 1
   182C 36 00              4996 	ld	(hl), #0x00
   182E 21r62s41           4997 	ld	hl,#_po
   1831 7E                 4998 	ld	a,(hl)
   1832 C6 00              4999 	add	a,#0x00
   1834 23                 5000 	inc	hl
   1835 2B                 5001 	dec	hl
   1836 C5                 5002 	push	bc
   1837 4F                 5003 	ld	c, a
   1838 23                 5004 	inc	hl
   1839 7E                 5005 	ld	a, (hl)
   183A 47                 5006 	ld	b, a
   183B 79                 5007 	ld	a, c
   183C 2B                 5008 	dec	hl
   183D 77                 5009 	ld	(hl), a
   183E 78                 5010 	ld	a, b
   183F C1                 5011 	pop	bc
   1840 CE 01              5012 	adc	a,#0x01
   1842 23                 5013 	inc	hl
   1843 77                 5014 	ld	(hl),a
   1844                    5015 00104$:
                           5016 ;demo.c:742: if (po >= 768) {
   1844 3Ar62s41           5017 	ld	a,(#_po+0)
   1847 D6 00              5018 	sub	a,#0x00
   1849 3Ar63s41           5019 	ld	a,(#_po+1)
   184C DE 03              5020 	sbc	a,#0x03
   184E FAr5Bs18           5021 	jp	M,00114$
                           5022 ;demo.c:743: po = 0;
   1851 21r62s41           5023 	ld	hl,#_po + 0
   1854 36 00              5024 	ld	(hl), #0x00
   1856 21r63s41           5025 	ld	hl,#_po + 1
   1859 36 00              5026 	ld	(hl), #0x00
   185B                    5027 00114$:
   185B DD F9              5028 	ld	sp,ix
   185D DD E1              5029 	pop	ix
   185F C9                 5030 	ret
   1860                    5031 _animplay_end::
   1860                    5032 __str_9:
   1860 4C 46 31 20 20 20  5033 	.ascii "LF1     PCK"
        20 20 50 43 4B
   186B 00                 5034 	.db 0x00
   186C                    5035 __str_10:
   186C 4C 46 32 20 20 20  5036 	.ascii "LF2     PCK"
        20 20 50 43 4B
   1877 00                 5037 	.db 0x00
   1878                    5038 __str_11:
   1878 4C 46 33 20 20 20  5039 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1883 00                 5040 	.db 0x00
                           5041 ;demo.c:759: void drawbox(uint8_t x, uint8_t y) {
                           5042 ;	---------------------------------
                           5043 ; Function drawbox
                           5044 ; ---------------------------------
   1884                    5045 _drawbox_start::
   1884                    5046 _drawbox:
   1884 DD E5              5047 	push	ix
   1886 DD 21 00 00        5048 	ld	ix,#0
   188A DD 39              5049 	add	ix,sp
                           5050 ;demo.c:760: cmd.source_x = boxes_x[boxi];
   188C 21r7Es41           5051 	ld	hl,#_boxi
   188F 3Er6F              5052 	ld	a,#<_boxes_x
   1891 86                 5053 	add	a,(hl)
   1892 4F                 5054 	ld	c,a
   1893 3Es41              5055 	ld	a,#>_boxes_x
   1895 CE 00              5056 	adc	a,#0x00
   1897 47                 5057 	ld	b,a
   1898 0A                 5058 	ld	a,(bc)
   1899 4F                 5059 	ld	c,a
   189A 06 00              5060 	ld	b,#0x00
   189C 21r04s41           5061 	ld	hl,#_cmd
   189F 71                 5062 	ld	(hl),c
   18A0 23                 5063 	inc	hl
   18A1 70                 5064 	ld	(hl),b
                           5065 ;demo.c:761: cmd.source_y = boxes_y[boxi];
   18A2 01r06s41           5066 	ld	bc,#_cmd + 2
   18A5 3Ar7Es41           5067 	ld	a,(#_boxi+0)
   18A8 87                 5068 	add	a,a
   18A9 C6r74              5069 	add	a,#<_boxes_y
   18AB 6F                 5070 	ld	l,a
   18AC 3Es41              5071 	ld	a,#>_boxes_y
   18AE CE 00              5072 	adc	a,#0x00
   18B0 67                 5073 	ld	h,a
   18B1 5E                 5074 	ld	e,(hl)
   18B2 23                 5075 	inc	hl
   18B3 56                 5076 	ld	d,(hl)
   18B4 69                 5077 	ld	l,c
   18B5 60                 5078 	ld	h,b
   18B6 73                 5079 	ld	(hl),e
   18B7 23                 5080 	inc	hl
   18B8 72                 5081 	ld	(hl),d
                           5082 ;demo.c:762: cmd.dest_x = x;
   18B9 01r08s41           5083 	ld	bc,#_cmd + 4
   18BC DD 5E 04           5084 	ld	e,4 (ix)
   18BF 16 00              5085 	ld	d,#0x00
   18C1 69                 5086 	ld	l,c
   18C2 60                 5087 	ld	h,b
   18C3 73                 5088 	ld	(hl),e
   18C4 23                 5089 	inc	hl
   18C5 72                 5090 	ld	(hl),d
                           5091 ;demo.c:763: cmd.dest_y = y;
   18C6 01r0As41           5092 	ld	bc,#_cmd + 6
   18C9 DD 5E 05           5093 	ld	e,5 (ix)
   18CC 16 00              5094 	ld	d,#0x00
   18CE 69                 5095 	ld	l,c
   18CF 60                 5096 	ld	h,b
   18D0 73                 5097 	ld	(hl),e
   18D1 23                 5098 	inc	hl
   18D2 72                 5099 	ld	(hl),d
                           5100 ;demo.c:764: cmd.size_x = 36;
   18D3 21r0Cs41           5101 	ld	hl, #_cmd + 8
   18D6 36 24              5102 	ld	(hl),#0x24
   18D8 23                 5103 	inc	hl
   18D9 36 00              5104 	ld	(hl),#0x00
                           5105 ;demo.c:765: cmd.size_y = 36;
   18DB 21r0Es41           5106 	ld	hl, #_cmd + 10
   18DE 36 24              5107 	ld	(hl),#0x24
   18E0 23                 5108 	inc	hl
   18E1 36 00              5109 	ld	(hl),#0x00
                           5110 ;demo.c:766: cmd.data = 0;
                           5111 ;demo.c:767: cmd.argument = 0x00;
   18E3 3E 00              5112 	ld	a,#0x00
   18E5 32r10s41           5113 	ld	(#_cmd + 12),a
   18E8 32r11s41           5114 	ld	(#_cmd + 13),a
                           5115 ;demo.c:768: cmd.command = 0x98; // TIMP sprite
   18EB 3E 98              5116 	ld	a,#0x98
   18ED 32r12s41           5117 	ld	(#_cmd + 14),a
                           5118 ;demo.c:769: vdp_copier(&cmd);
   18F0 21r04s41           5119 	ld	hl,#_cmd
   18F3 E5                 5120 	push	hl
   18F4 CDr00s00           5121 	call	_vdp_copier
   18F7 F1                 5122 	pop	af
                           5123 ;demo.c:771: prevx = x;
   18F8 DD 7E 04           5124 	ld	a,4 (ix)
   18FB 21r6Bs41           5125 	ld	hl,#_prevx + 0
   18FE 77                 5126 	ld	(hl), a
   18FF 21r6Cs41           5127 	ld	hl,#_prevx + 1
   1902 36 00              5128 	ld	(hl), #0x00
                           5129 ;demo.c:772: prevy = y;
   1904 DD 7E 05           5130 	ld	a,5 (ix)
   1907 21r6Ds41           5131 	ld	hl,#_prevy + 0
   190A 77                 5132 	ld	(hl), a
   190B 21r6Es41           5133 	ld	hl,#_prevy + 1
   190E 36 00              5134 	ld	(hl), #0x00
   1910 DD E1              5135 	pop	ix
   1912 C9                 5136 	ret
   1913                    5137 _drawbox_end::
                           5138 ;demo.c:786: void boxes() {
                           5139 ;	---------------------------------
                           5140 ; Function boxes
                           5141 ; ---------------------------------
   1913                    5142 _boxes_start::
   1913                    5143 _boxes:
   1913 DD E5              5144 	push	ix
   1915 DD 21 00 00        5145 	ld	ix,#0
   1919 DD 39              5146 	add	ix,sp
   191B F5                 5147 	push	af
                           5148 ;demo.c:790: if (bx < 0) return;
   191C FD 21r7Fs41        5149 	ld	iy,#_bx
   1920 FD CB 01 7E        5150 	bit	7,1 (iy)
   1924 C2r3Bs1D           5151 	jp	NZ,00149$
                           5152 ;demo.c:792: if (bonc == 1) {
   1927 3Ar87s41           5153 	ld	a,(#_bonc+0)
   192A D6 01              5154 	sub	a,#0x01
   192C 20 06              5155 	jr	NZ,00178$
   192E 3Ar88s41           5156 	ld	a,(#_bonc+1)
   1931 B7                 5157 	or	a,a
   1932 28 02              5158 	jr	Z,00179$
   1934                    5159 00178$:
   1934 18 4D              5160 	jr	00104$
   1936                    5161 00179$:
                           5162 ;demo.c:794: cmd.source_x = 0;
   1936 21r04s41           5163 	ld	hl,#_cmd
   1939 36 00              5164 	ld	(hl),#0x00
   193B 23                 5165 	inc	hl
   193C 36 00              5166 	ld	(hl),#0x00
                           5167 ;demo.c:795: cmd.source_y = 256;
   193E 21r06s41           5168 	ld	hl, #_cmd + 2
   1941 36 00              5169 	ld	(hl),#0x00
   1943 23                 5170 	inc	hl
   1944 36 01              5171 	ld	(hl),#0x01
                           5172 ;demo.c:796: cmd.dest_x = pbx;
   1946 01r08s41           5173 	ld	bc,#_cmd + 4
   1949 ED 5Br89s41        5174 	ld	de,(_pbx)
   194D 69                 5175 	ld	l,c
   194E 60                 5176 	ld	h,b
   194F 73                 5177 	ld	(hl),e
   1950 23                 5178 	inc	hl
   1951 72                 5179 	ld	(hl),d
                           5180 ;demo.c:797: cmd.dest_y = pbt;
   1952 01r0As41           5181 	ld	bc,#_cmd + 6
   1955 ED 5Br8Bs41        5182 	ld	de,(_pbt)
   1959 69                 5183 	ld	l,c
   195A 60                 5184 	ld	h,b
   195B 73                 5185 	ld	(hl),e
   195C 23                 5186 	inc	hl
   195D 72                 5187 	ld	(hl),d
                           5188 ;demo.c:798: cmd.size_x = 36;
   195E 21r0Cs41           5189 	ld	hl, #_cmd + 8
   1961 36 24              5190 	ld	(hl),#0x24
   1963 23                 5191 	inc	hl
   1964 36 00              5192 	ld	(hl),#0x00
                           5193 ;demo.c:799: cmd.size_y = 36;
   1966 21r0Es41           5194 	ld	hl, #_cmd + 10
   1969 36 24              5195 	ld	(hl),#0x24
   196B 23                 5196 	inc	hl
   196C 36 00              5197 	ld	(hl),#0x00
                           5198 ;demo.c:800: cmd.data = 0;
                           5199 ;demo.c:801: cmd.argument = 0x00;
   196E 3E 00              5200 	ld	a,#0x00
   1970 32r10s41           5201 	ld	(#_cmd + 12),a
   1973 32r11s41           5202 	ld	(#_cmd + 13),a
                           5203 ;demo.c:802: cmd.command = 0xD0; // HMMM
   1976 3E D0              5204 	ld	a,#0xD0
   1978 32r12s41           5205 	ld	(#_cmd + 14),a
                           5206 ;demo.c:803: vdp_copier(&cmd);
   197B 21r04s41           5207 	ld	hl,#_cmd
   197E E5                 5208 	push	hl
   197F CDr00s00           5209 	call	_vdp_copier
   1982 F1                 5210 	pop	af
   1983                    5211 00104$:
                           5212 ;demo.c:806: if (boxes_init == 0) {
   1983 AF                 5213 	xor	a,a
   1984 21r68s41           5214 	ld	hl,#_boxes_init + 0
   1987 B6                 5215 	or	a,(hl)
   1988 C2r8Bs1A           5216 	jp	NZ,00106$
                           5217 ;demo.c:807: boxes_init = 1;
   198B FD 21r68s41        5218 	ld	iy,#_boxes_init
   198F FD 36 00 01        5219 	ld	0 (iy),#0x01
                           5220 ;demo.c:809: cmd.size_x = 8;
   1993 21r0Cs41           5221 	ld	hl, #_cmd + 8
   1996 36 08              5222 	ld	(hl),#0x08
   1998 23                 5223 	inc	hl
   1999 36 00              5224 	ld	(hl),#0x00
                           5225 ;demo.c:810: cmd.size_y = 212;
   199B 21r0Es41           5226 	ld	hl, #_cmd + 10
   199E 36 D4              5227 	ld	(hl),#0xD4
   19A0 23                 5228 	inc	hl
   19A1 36 00              5229 	ld	(hl),#0x00
                           5230 ;demo.c:811: cmd.data = 0;
                           5231 ;demo.c:812: cmd.argument = 0x00; // from 70xY to left
   19A3 3E 00              5232 	ld	a,#0x00
   19A5 32r10s41           5233 	ld	(#_cmd + 12),a
   19A8 32r11s41           5234 	ld	(#_cmd + 13),a
                           5235 ;demo.c:813: cmd.command = 0xd0; // vram to vram, y only
   19AB 01r12s41           5236 	ld	bc,#_cmd + 14
   19AE 3E D0              5237 	ld	a,#0xD0
   19B0 02                 5238 	ld	(bc),a
                           5239 ;demo.c:814: cmd.source_x = 248;
   19B1 21r04s41           5240 	ld	hl,#_cmd
   19B4 36 F8              5241 	ld	(hl),#0xF8
   19B6 23                 5242 	inc	hl
   19B7 36 00              5243 	ld	(hl),#0x00
                           5244 ;demo.c:815: cmd.source_y = 0;
   19B9 21r06s41           5245 	ld	hl, #_cmd + 2
   19BC 36 00              5246 	ld	(hl),#0x00
   19BE 23                 5247 	inc	hl
   19BF 36 00              5248 	ld	(hl),#0x00
                           5249 ;demo.c:816: cmd.dest_y = 0;
   19C1 21r0As41           5250 	ld	hl, #_cmd + 6
   19C4 36 00              5251 	ld	(hl),#0x00
   19C6 23                 5252 	inc	hl
   19C7 36 00              5253 	ld	(hl),#0x00
                           5254 ;demo.c:818: for (x = 248; x >= 0; x-=8) {
   19C9 01 F8 00           5255 	ld	bc,#0x00F8
   19CC                    5256 00137$:
   19CC 78                 5257 	ld	a,b
   19CD CB 7F              5258 	bit	7,a
   19CF 20 38              5259 	jr	NZ,00140$
                           5260 ;demo.c:819: waitVB();
   19D1 76                 5261 		halt 
                           5262 ;demo.c:820: cmd.dest_x = x;
   19D2 11r08s41           5263 	ld	de,#_cmd + 4
   19D5 EB                 5264 	ex	de,hl
   19D6 71                 5265 	ld	(hl),c
   19D7 23                 5266 	inc	hl
   19D8 70                 5267 	ld	(hl),b
                           5268 ;demo.c:821: cmd.dest_y = 0;
   19D9 11r0As41           5269 	ld	de,#_cmd + 6
   19DC EB                 5270 	ex	de,hl
   19DD 36 00              5271 	ld	(hl),#0x00
   19DF 23                 5272 	inc	hl
   19E0 36 00              5273 	ld	(hl),#0x00
                           5274 ;demo.c:822: vdp_copier(&cmd);
   19E2 C5                 5275 	push	bc
   19E3 21r04s41           5276 	ld	hl,#_cmd
   19E6 E5                 5277 	push	hl
   19E7 CDr00s00           5278 	call	_vdp_copier
   19EA F1                 5279 	pop	af
   19EB C1                 5280 	pop	bc
                           5281 ;demo.c:823: cmd.dest_y = 256;
   19EC 11r0As41           5282 	ld	de,#_cmd + 6
   19EF EB                 5283 	ex	de,hl
   19F0 36 00              5284 	ld	(hl),#0x00
   19F2 23                 5285 	inc	hl
   19F3 36 01              5286 	ld	(hl),#0x01
                           5287 ;demo.c:824: vdp_copier(&cmd);
   19F5 C5                 5288 	push	bc
   19F6 21r04s41           5289 	ld	hl,#_cmd
   19F9 E5                 5290 	push	hl
   19FA CDr00s00           5291 	call	_vdp_copier
   19FD F1                 5292 	pop	af
   19FE C1                 5293 	pop	bc
                           5294 ;demo.c:818: for (x = 248; x >= 0; x-=8) {
   19FF 79                 5295 	ld	a,c
   1A00 C6 F8              5296 	add	a,#0xF8
   1A02 4F                 5297 	ld	c,a
   1A03 78                 5298 	ld	a,b
   1A04 CE FF              5299 	adc	a,#0xFF
   1A06 47                 5300 	ld	b,a
   1A07 18 C3              5301 	jr	00137$
   1A09                    5302 00140$:
                           5303 ;demo.c:827: for (x=0;x < 8;x++) {
   1A09 DD 36 FE 00        5304 	ld	-2 (ix),#0x00
   1A0D DD 36 FF 00        5305 	ld	-1 (ix),#0x00
   1A11                    5306 00145$:
   1A11 DD 7E FE           5307 	ld	a,-2 (ix)
   1A14 D6 08              5308 	sub	a,#0x08
   1A16 DD 7E FF           5309 	ld	a,-1 (ix)
   1A19 DE 00              5310 	sbc	a,#0x00
   1A1B F2r76s1A           5311 	jp	P,00148$
                           5312 ;demo.c:829: for (y=0;y < 9;y++) {
   1A1E 11 00 00           5313 	ld	de,#0x0000
   1A21                    5314 00141$:
   1A21 7B                 5315 	ld	a,e
   1A22 D6 09              5316 	sub	a,#0x09
   1A24 7A                 5317 	ld	a,d
   1A25 DE 00              5318 	sbc	a,#0x00
   1A27 F2r6Bs1A           5319 	jp	P,00147$
                           5320 ;demo.c:830: boxes_x[4] = 0;
   1A2A 01r73s41           5321 	ld	bc,#_boxes_x + 4
   1A2D 3E 00              5322 	ld	a,#0x00
   1A2F 02                 5323 	ld	(bc),a
                           5324 ;demo.c:831: boxes_y[4] = 768+2*36;
   1A30 21r7Cs41           5325 	ld	hl, #_boxes_y + 8
   1A33 36 48              5326 	ld	(hl),#0x48
   1A35 23                 5327 	inc	hl
   1A36 36 03              5328 	ld	(hl),#0x03
                           5329 ;demo.c:832: boxi = 4;
   1A38 FD 21r7Es41        5330 	ld	iy,#_boxi
   1A3C FD 36 00 04        5331 	ld	0 (iy),#0x04
                           5332 ;demo.c:833: drawbox((x*32),15+y*17);
   1A40 4B                 5333 	ld	c,e
   1A41 D5                 5334 	push	de
   1A42 79                 5335 	ld	a,c
   1A43 5F                 5336 	ld	e,a
   1A44 87                 5337 	add	a,a
   1A45 87                 5338 	add	a,a
   1A46 87                 5339 	add	a,a
   1A47 87                 5340 	add	a,a
   1A48 83                 5341 	add	a,e
   1A49 D1                 5342 	pop	de
   1A4A C6 0F              5343 	add	a,#0x0F
   1A4C 4F                 5344 	ld	c,a
   1A4D DD 46 FE           5345 	ld	b,-2 (ix)
   1A50 78                 5346 	ld	a,b
   1A51 0F                 5347 	rrca
   1A52 0F                 5348 	rrca
   1A53 0F                 5349 	rrca
   1A54 E6 E0              5350 	and	a,#0xE0
   1A56 47                 5351 	ld	b,a
   1A57 D5                 5352 	push	de
   1A58 79                 5353 	ld	a,c
   1A59 F5                 5354 	push	af
   1A5A 33                 5355 	inc	sp
   1A5B C5                 5356 	push	bc
   1A5C 33                 5357 	inc	sp
   1A5D CDr84s18           5358 	call	_drawbox
   1A60 F1                 5359 	pop	af
   1A61 D1                 5360 	pop	de
                           5361 ;demo.c:834: boxi = 0;
   1A62 21r7Es41           5362 	ld	hl,#_boxi + 0
   1A65 36 00              5363 	ld	(hl), #0x00
                           5364 ;demo.c:829: for (y=0;y < 9;y++) {
   1A67 13                 5365 	inc	de
   1A68 C3r21s1A           5366 	jp	00141$
   1A6B                    5367 00147$:
                           5368 ;demo.c:827: for (x=0;x < 8;x++) {
   1A6B DD 34 FE           5369 	inc	-2 (ix)
   1A6E 20 03              5370 	jr	NZ,00180$
   1A70 DD 34 FF           5371 	inc	-1 (ix)
   1A73                    5372 00180$:
   1A73 C3r11s1A           5373 	jp	00145$
   1A76                    5374 00148$:
                           5375 ;demo.c:838: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   1A76 21 08 B4           5376 	ld	hl,#0xB408
   1A79 E5                 5377 	push	hl
   1A7A 21r40s1D           5378 	ld	hl,#__str_12
   1A7D E5                 5379 	push	hl
   1A7E CDr20s11           5380 	call	_drawsine
   1A81 F1                 5381 	pop	af
   1A82 F1                 5382 	pop	af
                           5383 ;demo.c:840: vdp_load_palette(boxes_palette);
   1A83 21rE0s40           5384 	ld	hl,#_boxes_palette
   1A86 E5                 5385 	push	hl
   1A87 CDr00s00           5386 	call	_vdp_load_palette
   1A8A F1                 5387 	pop	af
   1A8B                    5388 00106$:
                           5389 ;demo.c:843: if (bt >= 80) bt+=7;
   1A8B 3Ar83s41           5390 	ld	a,(#_bt+0)
   1A8E D6 50              5391 	sub	a,#0x50
   1A90 3Ar84s41           5392 	ld	a,(#_bt+1)
   1A93 DE 00              5393 	sbc	a,#0x00
   1A95 FArAEs1A           5394 	jp	M,00108$
   1A98 21r83s41           5395 	ld	hl,#_bt
   1A9B 7E                 5396 	ld	a,(hl)
   1A9C C6 07              5397 	add	a,#0x07
   1A9E 23                 5398 	inc	hl
   1A9F 2B                 5399 	dec	hl
   1AA0 C5                 5400 	push	bc
   1AA1 4F                 5401 	ld	c, a
   1AA2 23                 5402 	inc	hl
   1AA3 7E                 5403 	ld	a, (hl)
   1AA4 47                 5404 	ld	b, a
   1AA5 79                 5405 	ld	a, c
   1AA6 2B                 5406 	dec	hl
   1AA7 77                 5407 	ld	(hl), a
   1AA8 78                 5408 	ld	a, b
   1AA9 C1                 5409 	pop	bc
   1AAA CE 00              5410 	adc	a,#0x00
   1AAC 23                 5411 	inc	hl
   1AAD 77                 5412 	ld	(hl),a
   1AAE                    5413 00108$:
                           5414 ;demo.c:844: if (bt < 80 && bt >= 60) bt+=6;
   1AAE 3Ar83s41           5415 	ld	a,(#_bt+0)
   1AB1 D6 50              5416 	sub	a,#0x50
   1AB3 3Ar84s41           5417 	ld	a,(#_bt+1)
   1AB6 DE 00              5418 	sbc	a,#0x00
   1AB8 F2rDEs1A           5419 	jp	P,00110$
   1ABB 3Ar83s41           5420 	ld	a,(#_bt+0)
   1ABE D6 3C              5421 	sub	a,#0x3C
   1AC0 3Ar84s41           5422 	ld	a,(#_bt+1)
   1AC3 DE 00              5423 	sbc	a,#0x00
   1AC5 FArDEs1A           5424 	jp	M,00110$
   1AC8 21r83s41           5425 	ld	hl,#_bt
   1ACB 7E                 5426 	ld	a,(hl)
   1ACC C6 06              5427 	add	a,#0x06
   1ACE 23                 5428 	inc	hl
   1ACF 2B                 5429 	dec	hl
   1AD0 C5                 5430 	push	bc
   1AD1 4F                 5431 	ld	c, a
   1AD2 23                 5432 	inc	hl
   1AD3 7E                 5433 	ld	a, (hl)
   1AD4 47                 5434 	ld	b, a
   1AD5 79                 5435 	ld	a, c
   1AD6 2B                 5436 	dec	hl
   1AD7 77                 5437 	ld	(hl), a
   1AD8 78                 5438 	ld	a, b
   1AD9 C1                 5439 	pop	bc
   1ADA CE 00              5440 	adc	a,#0x00
   1ADC 23                 5441 	inc	hl
   1ADD 77                 5442 	ld	(hl),a
   1ADE                    5443 00110$:
                           5444 ;demo.c:845: if (bt < 60 && bt >= 40) bt+=5;
   1ADE 3Ar83s41           5445 	ld	a,(#_bt+0)
   1AE1 D6 3C              5446 	sub	a,#0x3C
   1AE3 3Ar84s41           5447 	ld	a,(#_bt+1)
   1AE6 DE 00              5448 	sbc	a,#0x00
   1AE8 F2r0Es1B           5449 	jp	P,00113$
   1AEB 3Ar83s41           5450 	ld	a,(#_bt+0)
   1AEE D6 28              5451 	sub	a,#0x28
   1AF0 3Ar84s41           5452 	ld	a,(#_bt+1)
   1AF3 DE 00              5453 	sbc	a,#0x00
   1AF5 FAr0Es1B           5454 	jp	M,00113$
   1AF8 21r83s41           5455 	ld	hl,#_bt
   1AFB 7E                 5456 	ld	a,(hl)
   1AFC C6 05              5457 	add	a,#0x05
   1AFE 23                 5458 	inc	hl
   1AFF 2B                 5459 	dec	hl
   1B00 C5                 5460 	push	bc
   1B01 4F                 5461 	ld	c, a
   1B02 23                 5462 	inc	hl
   1B03 7E                 5463 	ld	a, (hl)
   1B04 47                 5464 	ld	b, a
   1B05 79                 5465 	ld	a, c
   1B06 2B                 5466 	dec	hl
   1B07 77                 5467 	ld	(hl), a
   1B08 78                 5468 	ld	a, b
   1B09 C1                 5469 	pop	bc
   1B0A CE 00              5470 	adc	a,#0x00
   1B0C 23                 5471 	inc	hl
   1B0D 77                 5472 	ld	(hl),a
   1B0E                    5473 00113$:
                           5474 ;demo.c:846: if (bt < 40 && bt >= 10) bt+=4;
   1B0E 3Ar83s41           5475 	ld	a,(#_bt+0)
   1B11 D6 28              5476 	sub	a,#0x28
   1B13 3Ar84s41           5477 	ld	a,(#_bt+1)
   1B16 DE 00              5478 	sbc	a,#0x00
   1B18 F2r3Es1B           5479 	jp	P,00116$
   1B1B 3Ar83s41           5480 	ld	a,(#_bt+0)
   1B1E D6 0A              5481 	sub	a,#0x0A
   1B20 3Ar84s41           5482 	ld	a,(#_bt+1)
   1B23 DE 00              5483 	sbc	a,#0x00
   1B25 FAr3Es1B           5484 	jp	M,00116$
   1B28 21r83s41           5485 	ld	hl,#_bt
   1B2B 7E                 5486 	ld	a,(hl)
   1B2C C6 04              5487 	add	a,#0x04
   1B2E 23                 5488 	inc	hl
   1B2F 2B                 5489 	dec	hl
   1B30 C5                 5490 	push	bc
   1B31 4F                 5491 	ld	c, a
   1B32 23                 5492 	inc	hl
   1B33 7E                 5493 	ld	a, (hl)
   1B34 47                 5494 	ld	b, a
   1B35 79                 5495 	ld	a, c
   1B36 2B                 5496 	dec	hl
   1B37 77                 5497 	ld	(hl), a
   1B38 78                 5498 	ld	a, b
   1B39 C1                 5499 	pop	bc
   1B3A CE 00              5500 	adc	a,#0x00
   1B3C 23                 5501 	inc	hl
   1B3D 77                 5502 	ld	(hl),a
   1B3E                    5503 00116$:
                           5504 ;demo.c:847: if (bt < 10 ) bt+=3;
   1B3E 3Ar83s41           5505 	ld	a,(#_bt+0)
   1B41 D6 0A              5506 	sub	a,#0x0A
   1B43 3Ar84s41           5507 	ld	a,(#_bt+1)
   1B46 DE 00              5508 	sbc	a,#0x00
   1B48 F2r61s1B           5509 	jp	P,00119$
   1B4B 21r83s41           5510 	ld	hl,#_bt
   1B4E 7E                 5511 	ld	a,(hl)
   1B4F C6 03              5512 	add	a,#0x03
   1B51 23                 5513 	inc	hl
   1B52 2B                 5514 	dec	hl
   1B53 C5                 5515 	push	bc
   1B54 4F                 5516 	ld	c, a
   1B55 23                 5517 	inc	hl
   1B56 7E                 5518 	ld	a, (hl)
   1B57 47                 5519 	ld	b, a
   1B58 79                 5520 	ld	a, c
   1B59 2B                 5521 	dec	hl
   1B5A 77                 5522 	ld	(hl), a
   1B5B 78                 5523 	ld	a, b
   1B5C C1                 5524 	pop	bc
   1B5D CE 00              5525 	adc	a,#0x00
   1B5F 23                 5526 	inc	hl
   1B60 77                 5527 	ld	(hl),a
   1B61                    5528 00119$:
                           5529 ;demo.c:850: cmd.source_x = bx;
   1B61 ED 4Br7Fs41        5530 	ld	bc,(_bx)
   1B65 21r04s41           5531 	ld	hl,#_cmd
   1B68 71                 5532 	ld	(hl),c
   1B69 23                 5533 	inc	hl
   1B6A 70                 5534 	ld	(hl),b
                           5535 ;demo.c:851: cmd.source_y = bt;
   1B6B 01r06s41           5536 	ld	bc,#_cmd + 2
   1B6E ED 5Br83s41        5537 	ld	de,(_bt)
   1B72 69                 5538 	ld	l,c
   1B73 60                 5539 	ld	h,b
   1B74 73                 5540 	ld	(hl),e
   1B75 23                 5541 	inc	hl
   1B76 72                 5542 	ld	(hl),d
                           5543 ;demo.c:852: cmd.dest_x = 0;
   1B77 21r08s41           5544 	ld	hl, #_cmd + 4
   1B7A 36 00              5545 	ld	(hl),#0x00
   1B7C 23                 5546 	inc	hl
   1B7D 36 00              5547 	ld	(hl),#0x00
                           5548 ;demo.c:853: cmd.dest_y = 256;
   1B7F 21r0As41           5549 	ld	hl, #_cmd + 6
   1B82 36 00              5550 	ld	(hl),#0x00
   1B84 23                 5551 	inc	hl
   1B85 36 01              5552 	ld	(hl),#0x01
                           5553 ;demo.c:854: cmd.size_x = 36;
   1B87 21r0Cs41           5554 	ld	hl, #_cmd + 8
   1B8A 36 24              5555 	ld	(hl),#0x24
   1B8C 23                 5556 	inc	hl
   1B8D 36 00              5557 	ld	(hl),#0x00
                           5558 ;demo.c:855: cmd.size_y = 36;
   1B8F 21r0Es41           5559 	ld	hl, #_cmd + 10
   1B92 36 24              5560 	ld	(hl),#0x24
   1B94 23                 5561 	inc	hl
   1B95 36 00              5562 	ld	(hl),#0x00
                           5563 ;demo.c:856: cmd.data = 0;
                           5564 ;demo.c:857: cmd.argument = 0x00;
   1B97 3E 00              5565 	ld	a,#0x00
   1B99 32r10s41           5566 	ld	(#_cmd + 12),a
   1B9C 32r11s41           5567 	ld	(#_cmd + 13),a
                           5568 ;demo.c:858: cmd.command = 0xD0; // HMMM
   1B9F 3E D0              5569 	ld	a,#0xD0
   1BA1 32r12s41           5570 	ld	(#_cmd + 14),a
                           5571 ;demo.c:859: vdp_copier(&cmd);
   1BA4 21r04s41           5572 	ld	hl,#_cmd
   1BA7 E5                 5573 	push	hl
   1BA8 CDr00s00           5574 	call	_vdp_copier
   1BAB F1                 5575 	pop	af
                           5576 ;demo.c:861: pbx = bx;
   1BAC 2Ar7Fs41           5577 	ld	hl,(_bx)
   1BAF FD 21r89s41        5578 	ld	iy,#_pbx
   1BB3 FD 75 00           5579 	ld	0 (iy),l
   1BB6 FD 21r89s41        5580 	ld	iy,#_pbx
   1BBA FD 74 01           5581 	ld	1 (iy),h
                           5582 ;demo.c:862: pbt = bt;
   1BBD 2Ar83s41           5583 	ld	hl,(_bt)
   1BC0 FD 21r8Bs41        5584 	ld	iy,#_pbt
   1BC4 FD 75 00           5585 	ld	0 (iy),l
   1BC7 FD 21r8Bs41        5586 	ld	iy,#_pbt
   1BCB FD 74 01           5587 	ld	1 (iy),h
                           5588 ;demo.c:867: bonc = 1;
   1BCE 21r87s41           5589 	ld	hl,#_bonc + 0
   1BD1 36 01              5590 	ld	(hl), #0x01
   1BD3 21r88s41           5591 	ld	hl,#_bonc + 1
   1BD6 36 00              5592 	ld	(hl), #0x00
                           5593 ;demo.c:868: if (bt > by) {
   1BD8 21r81s41           5594 	ld	hl,#_by
   1BDB 7E                 5595 	ld	a,(hl)
   1BDC FD 21r83s41        5596 	ld	iy,#_bt
   1BE0 FD 96 00           5597 	sub	a,0 (iy)
   1BE3 23                 5598 	inc	hl
   1BE4 7E                 5599 	ld	a,(hl)
   1BE5 FD 21r83s41        5600 	ld	iy,#_bt
   1BE9 FD 9E 01           5601 	sbc	a,1 (iy)
   1BEC F2r2As1D           5602 	jp	P,00135$
                           5603 ;demo.c:869: bt = by;
   1BEF 2Ar81s41           5604 	ld	hl,(_by)
   1BF2 FD 21r83s41        5605 	ld	iy,#_bt
   1BF6 FD 75 00           5606 	ld	0 (iy),l
   1BF9 FD 21r83s41        5607 	ld	iy,#_bt
   1BFD FD 74 01           5608 	ld	1 (iy),h
                           5609 ;demo.c:870: drawbox(bx,bt);
   1C00 21r83s41           5610 	ld	hl,#_bt + 0
   1C03 4E                 5611 	ld	c,(hl)
   1C04 21r7Fs41           5612 	ld	hl,#_bx + 0
   1C07 46                 5613 	ld	b,(hl)
   1C08 79                 5614 	ld	a,c
   1C09 F5                 5615 	push	af
   1C0A 33                 5616 	inc	sp
   1C0B C5                 5617 	push	bc
   1C0C 33                 5618 	inc	sp
   1C0D CDr84s18           5619 	call	_drawbox
   1C10 F1                 5620 	pop	af
                           5621 ;demo.c:871: bt = 0;
   1C11 21r83s41           5622 	ld	hl,#_bt + 0
   1C14 36 00              5623 	ld	(hl), #0x00
   1C16 21r84s41           5624 	ld	hl,#_bt + 1
   1C19 36 00              5625 	ld	(hl), #0x00
                           5626 ;demo.c:872: if (by > 48) {
   1C1B 3E 30              5627 	ld	a,#0x30
   1C1D FD 21r81s41        5628 	ld	iy,#_by
   1C21 FD 96 00           5629 	sub	a,0 (iy)
   1C24 3E 00              5630 	ld	a,#0x00
   1C26 FD 21r81s41        5631 	ld	iy,#_by
   1C2A FD 9E 01           5632 	sbc	a,1 (iy)
   1C2D F2r85s1C           5633 	jp	P,00123$
                           5634 ;demo.c:873: bonc = 0;
   1C30 21r87s41           5635 	ld	hl,#_bonc + 0
   1C33 36 00              5636 	ld	(hl), #0x00
   1C35 21r88s41           5637 	ld	hl,#_bonc + 1
   1C38 36 00              5638 	ld	(hl), #0x00
                           5639 ;demo.c:874: by-=16;
   1C3A 21r81s41           5640 	ld	hl,#_by
   1C3D 7E                 5641 	ld	a,(hl)
   1C3E C6 F0              5642 	add	a,#0xF0
   1C40 77                 5643 	ld	(hl),a
   1C41 23                 5644 	inc	hl
   1C42 7E                 5645 	ld	a,(hl)
   1C43 CE FF              5646 	adc	a,#0xFF
   1C45 77                 5647 	ld	(hl),a
                           5648 ;demo.c:875: prevbox_of = boxes_of[boxi];
   1C46 3Ar7Es41           5649 	ld	a,(#_boxi+0)
   1C49 87                 5650 	add	a,a
   1C4A C6r8D              5651 	add	a,#<_boxes_of
   1C4C 6F                 5652 	ld	l,a
   1C4D 3Es41              5653 	ld	a,#>_boxes_of
   1C4F CE 00              5654 	adc	a,#0x00
   1C51 67                 5655 	ld	h,a
   1C52 4E                 5656 	ld	c,(hl)
   1C53 23                 5657 	inc	hl
   1C54 21r97s41           5658 	ld	hl,#_prevbox_of + 0
   1C57 71                 5659 	ld	(hl), c
                           5660 ;demo.c:876: by+=prevbox_of;
   1C58 21r97s41           5661 	ld	hl,#_prevbox_of + 0
   1C5B 4E                 5662 	ld	c,(hl)
   1C5C 06 00              5663 	ld	b,#0x00
   1C5E 21r81s41           5664 	ld	hl,#_by
   1C61 7E                 5665 	ld	a,(hl)
   1C62 81                 5666 	add	a,c
   1C63 23                 5667 	inc	hl
   1C64 2B                 5668 	dec	hl
   1C65 C5                 5669 	push	bc
   1C66 4F                 5670 	ld	c, a
   1C67 23                 5671 	inc	hl
   1C68 7E                 5672 	ld	a, (hl)
   1C69 47                 5673 	ld	b, a
   1C6A 79                 5674 	ld	a, c
   1C6B 2B                 5675 	dec	hl
   1C6C 77                 5676 	ld	(hl), a
   1C6D 78                 5677 	ld	a, b
   1C6E C1                 5678 	pop	bc
   1C6F 88                 5679 	adc	a,b
   1C70 23                 5680 	inc	hl
   1C71 77                 5681 	ld	(hl),a
                           5682 ;demo.c:877: boxi++;
   1C72 FD 21r7Es41        5683 	ld	iy,#_boxi
   1C76 FD 34 00           5684 	inc	0 (iy)
                           5685 ;demo.c:878: if (boxi >= 4) boxi = 0;
   1C79 3Ar7Es41           5686 	ld	a,(#_boxi+0)
   1C7C D6 04              5687 	sub	a,#0x04
   1C7E 38 05              5688 	jr	C,00123$
   1C80 21r7Es41           5689 	ld	hl,#_boxi + 0
   1C83 36 00              5690 	ld	(hl), #0x00
   1C85                    5691 00123$:
                           5692 ;demo.c:881: if (by <= 48) {
   1C85 3E 30              5693 	ld	a,#0x30
   1C87 FD 21r81s41        5694 	ld	iy,#_by
   1C8B FD 96 00           5695 	sub	a,0 (iy)
   1C8E 3E 00              5696 	ld	a,#0x00
   1C90 FD 21r81s41        5697 	ld	iy,#_by
   1C94 FD 9E 01           5698 	sbc	a,1 (iy)
   1C97 FAr3Bs1D           5699 	jp	M,00149$
                           5700 ;demo.c:882: bx-=16;
   1C9A 21r7Fs41           5701 	ld	hl,#_bx
   1C9D 7E                 5702 	ld	a,(hl)
   1C9E C6 F0              5703 	add	a,#0xF0
   1CA0 77                 5704 	ld	(hl),a
   1CA1 23                 5705 	inc	hl
   1CA2 7E                 5706 	ld	a,(hl)
   1CA3 CE FF              5707 	adc	a,#0xFF
   1CA5 77                 5708 	ld	(hl),a
                           5709 ;demo.c:884: if (bx>128)bo+=8;
   1CA6 3E 80              5710 	ld	a,#0x80
   1CA8 FD 21r7Fs41        5711 	ld	iy,#_bx
   1CAC FD 96 00           5712 	sub	a,0 (iy)
   1CAF 3E 00              5713 	ld	a,#0x00
   1CB1 FD 21r7Fs41        5714 	ld	iy,#_bx
   1CB5 FD 9E 01           5715 	sbc	a,1 (iy)
   1CB8 07                 5716 	rlca
   1CB9 E6 01              5717 	and	a,#0x01
   1CBB 4F                 5718 	ld	c,a
   1CBC B7                 5719 	or	a,a
   1CBD 28 18              5720 	jr	Z,00125$
   1CBF 21r85s41           5721 	ld	hl,#_bo
   1CC2 7E                 5722 	ld	a,(hl)
   1CC3 C6 08              5723 	add	a,#0x08
   1CC5 23                 5724 	inc	hl
   1CC6 2B                 5725 	dec	hl
   1CC7 C5                 5726 	push	bc
   1CC8 4F                 5727 	ld	c, a
   1CC9 23                 5728 	inc	hl
   1CCA 7E                 5729 	ld	a, (hl)
   1CCB 47                 5730 	ld	b, a
   1CCC 79                 5731 	ld	a, c
   1CCD 2B                 5732 	dec	hl
   1CCE 77                 5733 	ld	(hl), a
   1CCF 78                 5734 	ld	a, b
   1CD0 C1                 5735 	pop	bc
   1CD1 CE 00              5736 	adc	a,#0x00
   1CD3 23                 5737 	inc	hl
   1CD4 77                 5738 	ld	(hl),a
   1CD5 18 0C              5739 	jr	00126$
   1CD7                    5740 00125$:
                           5741 ;demo.c:885: else bo-=8;
   1CD7 21r85s41           5742 	ld	hl,#_bo
   1CDA 7E                 5743 	ld	a,(hl)
   1CDB C6 F8              5744 	add	a,#0xF8
   1CDD 77                 5745 	ld	(hl),a
   1CDE 23                 5746 	inc	hl
   1CDF 7E                 5747 	ld	a,(hl)
   1CE0 CE FF              5748 	adc	a,#0xFF
   1CE2 77                 5749 	ld	(hl),a
   1CE3                    5750 00126$:
                           5751 ;demo.c:886: if (bo > 192) bo = 0;
   1CE3 3E C0              5752 	ld	a,#0xC0
   1CE5 FD 21r85s41        5753 	ld	iy,#_bo
   1CE9 FD 96 00           5754 	sub	a,0 (iy)
   1CEC 3E 00              5755 	ld	a,#0x00
   1CEE FD 21r85s41        5756 	ld	iy,#_bo
   1CF2 FD 9E 01           5757 	sbc	a,1 (iy)
   1CF5 F2r02s1D           5758 	jp	P,00128$
   1CF8 21r85s41           5759 	ld	hl,#_bo + 0
   1CFB 36 00              5760 	ld	(hl), #0x00
   1CFD 21r86s41           5761 	ld	hl,#_bo + 1
   1D00 36 00              5762 	ld	(hl), #0x00
   1D02                    5763 00128$:
                           5764 ;demo.c:887: if (bx>128)by=84+bo;
   1D02 AF                 5765 	xor	a,a
   1D03 B1                 5766 	or	a,c
   1D04 28 12              5767 	jr	Z,00130$
   1D06 21r81s41           5768 	ld	hl,#_by
   1D09 3Ar85s41           5769 	ld	a,(#_bo+0)
   1D0C C6 54              5770 	add	a,#0x54
   1D0E 77                 5771 	ld	(hl),a
   1D0F 3Ar86s41           5772 	ld	a,(#_bo+1)
   1D12 CE 00              5773 	adc	a,#0x00
   1D14 23                 5774 	inc	hl
   1D15 77                 5775 	ld	(hl),a
   1D16 18 23              5776 	jr	00149$
   1D18                    5777 00130$:
                           5778 ;demo.c:888: else by=36+36+84+bo;
   1D18 21r81s41           5779 	ld	hl,#_by
   1D1B 3Ar85s41           5780 	ld	a,(#_bo+0)
   1D1E C6 9C              5781 	add	a,#0x9C
   1D20 77                 5782 	ld	(hl),a
   1D21 3Ar86s41           5783 	ld	a,(#_bo+1)
   1D24 CE 00              5784 	adc	a,#0x00
   1D26 23                 5785 	inc	hl
   1D27 77                 5786 	ld	(hl),a
   1D28 18 11              5787 	jr	00149$
   1D2A                    5788 00135$:
                           5789 ;demo.c:891: drawbox(bx,bt);
   1D2A 21r83s41           5790 	ld	hl,#_bt + 0
   1D2D 4E                 5791 	ld	c,(hl)
   1D2E 21r7Fs41           5792 	ld	hl,#_bx + 0
   1D31 46                 5793 	ld	b,(hl)
   1D32 79                 5794 	ld	a,c
   1D33 F5                 5795 	push	af
   1D34 33                 5796 	inc	sp
   1D35 C5                 5797 	push	bc
   1D36 33                 5798 	inc	sp
   1D37 CDr84s18           5799 	call	_drawbox
   1D3A F1                 5800 	pop	af
   1D3B                    5801 00149$:
   1D3B DD F9              5802 	ld	sp,ix
   1D3D DD E1              5803 	pop	ix
   1D3F C9                 5804 	ret
   1D40                    5805 _boxes_end::
   1D40                    5806 __str_12:
   1D40 4C 45 54 20 55 53  5807 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1D6B 00                 5808 	.db 0x00
                           5809 ;demo.c:900: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5810 ;	---------------------------------
                           5811 ; Function drawtritile
                           5812 ; ---------------------------------
   1D6C                    5813 _drawtritile_start::
   1D6C                    5814 _drawtritile:
   1D6C DD E5              5815 	push	ix
   1D6E DD 21 00 00        5816 	ld	ix,#0
   1D72 DD 39              5817 	add	ix,sp
                           5818 ;demo.c:901: cmd.source_x = tx;
   1D74 DD 4E 04           5819 	ld	c,4 (ix)
   1D77 06 00              5820 	ld	b,#0x00
   1D79 21r04s41           5821 	ld	hl,#_cmd
   1D7C 71                 5822 	ld	(hl),c
   1D7D 23                 5823 	inc	hl
   1D7E 70                 5824 	ld	(hl),b
                           5825 ;demo.c:902: cmd.source_y = ty-1;
   1D7F 01r06s41           5826 	ld	bc,#_cmd + 2
   1D82 DD 5E 05           5827 	ld	e,5 (ix)
   1D85 DD 56 06           5828 	ld	d,6 (ix)
   1D88 1B                 5829 	dec	de
   1D89 69                 5830 	ld	l,c
   1D8A 60                 5831 	ld	h,b
   1D8B 73                 5832 	ld	(hl),e
   1D8C 23                 5833 	inc	hl
   1D8D 72                 5834 	ld	(hl),d
                           5835 ;demo.c:903: cmd.dest_x = x;
   1D8E 01r08s41           5836 	ld	bc,#_cmd + 4
   1D91 DD 5E 07           5837 	ld	e,7 (ix)
   1D94 16 00              5838 	ld	d,#0x00
   1D96 69                 5839 	ld	l,c
   1D97 60                 5840 	ld	h,b
   1D98 73                 5841 	ld	(hl),e
   1D99 23                 5842 	inc	hl
   1D9A 72                 5843 	ld	(hl),d
                           5844 ;demo.c:904: cmd.dest_y = y;
   1D9B 01r0As41           5845 	ld	bc,#_cmd + 6
   1D9E DD 5E 08           5846 	ld	e,8 (ix)
   1DA1 16 00              5847 	ld	d,#0x00
   1DA3 69                 5848 	ld	l,c
   1DA4 60                 5849 	ld	h,b
   1DA5 73                 5850 	ld	(hl),e
   1DA6 23                 5851 	inc	hl
   1DA7 72                 5852 	ld	(hl),d
                           5853 ;demo.c:905: cmd.size_x = 16;
   1DA8 21r0Cs41           5854 	ld	hl, #_cmd + 8
   1DAB 36 10              5855 	ld	(hl),#0x10
   1DAD 23                 5856 	inc	hl
   1DAE 36 00              5857 	ld	(hl),#0x00
                           5858 ;demo.c:906: cmd.size_y = 16;
   1DB0 21r0Es41           5859 	ld	hl, #_cmd + 10
   1DB3 36 10              5860 	ld	(hl),#0x10
   1DB5 23                 5861 	inc	hl
   1DB6 36 00              5862 	ld	(hl),#0x00
                           5863 ;demo.c:907: cmd.data = 0;
                           5864 ;demo.c:908: cmd.argument = 0x00;
   1DB8 3E 00              5865 	ld	a,#0x00
   1DBA 32r10s41           5866 	ld	(#_cmd + 12),a
   1DBD 32r11s41           5867 	ld	(#_cmd + 13),a
                           5868 ;demo.c:909: cmd.command = 0xd0; // HMMM
   1DC0 3E D0              5869 	ld	a,#0xD0
   1DC2 32r12s41           5870 	ld	(#_cmd + 14),a
                           5871 ;demo.c:910: vdp_copier(&cmd);
   1DC5 21r04s41           5872 	ld	hl,#_cmd
   1DC8 E5                 5873 	push	hl
   1DC9 CDr00s00           5874 	call	_vdp_copier
   1DCC F1                 5875 	pop	af
   1DCD DD E1              5876 	pop	ix
   1DCF C9                 5877 	ret
   1DD0                    5878 _drawtritile_end::
                           5879 ;demo.c:913: void drawtilescreen(char* tripic) {
                           5880 ;	---------------------------------
                           5881 ; Function drawtilescreen
                           5882 ; ---------------------------------
   1DD0                    5883 _drawtilescreen_start::
   1DD0                    5884 _drawtilescreen:
   1DD0 DD E5              5885 	push	ix
   1DD2 DD 21 00 00        5886 	ld	ix,#0
   1DD6 DD 39              5887 	add	ix,sp
   1DD8 21 F8 FF           5888 	ld	hl,#-8
   1DDB 39                 5889 	add	hl,sp
   1DDC F9                 5890 	ld	sp,hl
                           5891 ;demo.c:914: int x = 0;
   1DDD DD 36 FE 00        5892 	ld	-2 (ix),#0x00
   1DE1 DD 36 FF 00        5893 	ld	-1 (ix),#0x00
                           5894 ;demo.c:917: while(i < 192) {
   1DE5 DD 36 FC 00        5895 	ld	-4 (ix),#0x00
   1DE9 DD 36 FD 00        5896 	ld	-3 (ix),#0x00
   1DED DD 36 FA 00        5897 	ld	-6 (ix),#0x00
   1DF1 DD 36 FB 00        5898 	ld	-5 (ix),#0x00
   1DF5                    5899 00103$:
   1DF5 DD 7E FA           5900 	ld	a,-6 (ix)
   1DF8 D6 C0              5901 	sub	a,#0xC0
   1DFA DD 7E FB           5902 	ld	a,-5 (ix)
   1DFD DE 00              5903 	sbc	a,#0x00
   1DFF F2r86s1E           5904 	jp	P,00106$
                           5905 ;demo.c:918: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1E02 DD 7E FC           5906 	ld	a,-4 (ix)
   1E05 DD 77 F8           5907 	ld	-8 (ix),a
   1E08 DD 7E FE           5908 	ld	a,-2 (ix)
   1E0B DD 77 F9           5909 	ld	-7 (ix),a
   1E0E DD 7E 04           5910 	ld	a,4 (ix)
   1E11 DD 86 FA           5911 	add	a,-6 (ix)
   1E14 4F                 5912 	ld	c,a
   1E15 DD 7E 05           5913 	ld	a,5 (ix)
   1E18 DD 8E FB           5914 	adc	a,-5 (ix)
   1E1B 47                 5915 	ld	b,a
   1E1C 0A                 5916 	ld	a,(bc)
   1E1D 4F                 5917 	ld	c,a
   1E1E 87                 5918 	add	a,a
   1E1F C6r20              5919 	add	a,#<_tri_lookup_y
   1E21 6F                 5920 	ld	l,a
   1E22 3Es01              5921 	ld	a,#>_tri_lookup_y
   1E24 CE 00              5922 	adc	a,#0x00
   1E26 67                 5923 	ld	h,a
   1E27 46                 5924 	ld	b,(hl)
   1E28 23                 5925 	inc	hl
   1E29 56                 5926 	ld	d,(hl)
   1E2A 3Er00              5927 	ld	a,#<_tri_lookup_x
   1E2C 81                 5928 	add	a,c
   1E2D 6F                 5929 	ld	l,a
   1E2E 3Es01              5930 	ld	a,#>_tri_lookup_x
   1E30 CE 00              5931 	adc	a,#0x00
   1E32 67                 5932 	ld	h,a
   1E33 4E                 5933 	ld	c,(hl)
   1E34 DD 66 F8           5934 	ld	h,-8 (ix)
   1E37 DD 6E F9           5935 	ld	l,-7 (ix)
   1E3A E5                 5936 	push	hl
   1E3B 58                 5937 	ld	e,b
   1E3C D5                 5938 	push	de
   1E3D 79                 5939 	ld	a,c
   1E3E F5                 5940 	push	af
   1E3F 33                 5941 	inc	sp
   1E40 CDr6Cs1D           5942 	call	_drawtritile
   1E43 F1                 5943 	pop	af
   1E44 F1                 5944 	pop	af
   1E45 33                 5945 	inc	sp
                           5946 ;demo.c:919: x+=16;
   1E46 DD 7E FE           5947 	ld	a,-2 (ix)
   1E49 C6 10              5948 	add	a,#0x10
   1E4B DD 77 FE           5949 	ld	-2 (ix),a
   1E4E DD 7E FF           5950 	ld	a,-1 (ix)
   1E51 CE 00              5951 	adc	a,#0x00
   1E53 DD 77 FF           5952 	ld	-1 (ix),a
                           5953 ;demo.c:920: if (x >= 256) {x = 0; y+=16;}
   1E56 DD 7E FE           5954 	ld	a,-2 (ix)
   1E59 D6 00              5955 	sub	a,#0x00
   1E5B DD 7E FF           5956 	ld	a,-1 (ix)
   1E5E DE 01              5957 	sbc	a,#0x01
   1E60 FAr7Bs1E           5958 	jp	M,00102$
   1E63 DD 36 FE 00        5959 	ld	-2 (ix),#0x00
   1E67 DD 36 FF 00        5960 	ld	-1 (ix),#0x00
   1E6B DD 7E FC           5961 	ld	a,-4 (ix)
   1E6E C6 10              5962 	add	a,#0x10
   1E70 DD 77 FC           5963 	ld	-4 (ix),a
   1E73 DD 7E FD           5964 	ld	a,-3 (ix)
   1E76 CE 00              5965 	adc	a,#0x00
   1E78 DD 77 FD           5966 	ld	-3 (ix),a
   1E7B                    5967 00102$:
                           5968 ;demo.c:921: i++;
   1E7B DD 34 FA           5969 	inc	-6 (ix)
   1E7E 20 03              5970 	jr	NZ,00112$
   1E80 DD 34 FB           5971 	inc	-5 (ix)
   1E83                    5972 00112$:
   1E83 C3rF5s1D           5973 	jp	00103$
   1E86                    5974 00106$:
   1E86 DD F9              5975 	ld	sp,ix
   1E88 DD E1              5976 	pop	ix
   1E8A C9                 5977 	ret
   1E8B                    5978 _drawtilescreen_end::
                           5979 ;demo.c:936: void tritiles() {
                           5980 ;	---------------------------------
                           5981 ; Function tritiles
                           5982 ; ---------------------------------
   1E8B                    5983 _tritiles_start::
   1E8B                    5984 _tritiles:
   1E8B DD E5              5985 	push	ix
   1E8D DD 21 00 00        5986 	ld	ix,#0
   1E91 DD 39              5987 	add	ix,sp
   1E93 21 FB FF           5988 	ld	hl,#-5
   1E96 39                 5989 	add	hl,sp
   1E97 F9                 5990 	ld	sp,hl
                           5991 ;demo.c:943: if (tri_inited == 0) {
   1E98 AF                 5992 	xor	a,a
   1E99 21r98s41           5993 	ld	hl,#_tri_inited + 0
   1E9C B6                 5994 	or	a,(hl)
   1E9D C2r3Cs1F           5995 	jp	NZ,00102$
                           5996 ;demo.c:944: tri_inited = 1;
   1EA0 FD 21r98s41        5997 	ld	iy,#_tri_inited
   1EA4 FD 36 00 01        5998 	ld	0 (iy),#0x01
                           5999 ;demo.c:946: cmd.size_x = 256;
   1EA8 21r0Cs41           6000 	ld	hl, #_cmd + 8
   1EAB 36 00              6001 	ld	(hl),#0x00
   1EAD 23                 6002 	inc	hl
   1EAE 36 01              6003 	ld	(hl),#0x01
                           6004 ;demo.c:947: cmd.size_y = 1;
   1EB0 21r0Es41           6005 	ld	hl, #_cmd + 10
   1EB3 36 01              6006 	ld	(hl),#0x01
   1EB5 23                 6007 	inc	hl
   1EB6 36 00              6008 	ld	(hl),#0x00
                           6009 ;demo.c:948: cmd.data = 0;
                           6010 ;demo.c:949: cmd.argument = 0x00; // from 70xY to left
   1EB8 3E 00              6011 	ld	a,#0x00
   1EBA 32r10s41           6012 	ld	(#_cmd + 12),a
   1EBD 32r11s41           6013 	ld	(#_cmd + 13),a
                           6014 ;demo.c:950: cmd.command = 0xd0; // vram to vram, y only
   1EC0 01r12s41           6015 	ld	bc,#_cmd + 14
   1EC3 3E D0              6016 	ld	a,#0xD0
   1EC5 02                 6017 	ld	(bc),a
                           6018 ;demo.c:951: cmd.source_x = 0;
   1EC6 21r04s41           6019 	ld	hl,#_cmd
   1EC9 36 00              6020 	ld	(hl),#0x00
   1ECB 23                 6021 	inc	hl
   1ECC 36 00              6022 	ld	(hl),#0x00
                           6023 ;demo.c:952: cmd.source_y = 255;
   1ECE 21r06s41           6024 	ld	hl, #_cmd + 2
   1ED1 36 FF              6025 	ld	(hl),#0xFF
   1ED3 23                 6026 	inc	hl
   1ED4 36 00              6027 	ld	(hl),#0x00
                           6028 ;demo.c:953: cmd.dest_y = 0;
   1ED6 01r0As41           6029 	ld	bc,#_cmd + 6
   1ED9 69                 6030 	ld	l,c
   1EDA 60                 6031 	ld	h,b
   1EDB 36 00              6032 	ld	(hl),#0x00
   1EDD 23                 6033 	inc	hl
   1EDE 36 00              6034 	ld	(hl),#0x00
                           6035 ;demo.c:955: for (x = 0; x < 212; x++) {
   1EE0 DD 36 FE D4        6036 	ld	-2 (ix),#0xD4
   1EE4 DD 36 FF 00        6037 	ld	-1 (ix),#0x00
   1EE8                    6038 00121$:
                           6039 ;demo.c:956: waitVB();
   1EE8 76                 6040 		halt 
                           6041 ;demo.c:957: cmd.dest_x = 0;
   1EE9 11r08s41           6042 	ld	de,#_cmd + 4
   1EEC EB                 6043 	ex	de,hl
   1EED 36 00              6044 	ld	(hl),#0x00
   1EEF 23                 6045 	inc	hl
   1EF0 36 00              6046 	ld	(hl),#0x00
                           6047 ;demo.c:958: cmd.dest_y = x;
   1EF2 11r0As41           6048 	ld	de,#_cmd + 6
   1EF5 DD 4E FE           6049 	ld	c,-2 (ix)
   1EF8 DD 46 FF           6050 	ld	b,-1 (ix)
   1EFB 0B                 6051 	dec	bc
   1EFC EB                 6052 	ex	de,hl
   1EFD 71                 6053 	ld	(hl),c
   1EFE 23                 6054 	inc	hl
   1EFF 70                 6055 	ld	(hl),b
                           6056 ;demo.c:959: vdp_copier(&cmd);
   1F00 C5                 6057 	push	bc
   1F01 21r04s41           6058 	ld	hl,#_cmd
   1F04 E5                 6059 	push	hl
   1F05 CDr00s00           6060 	call	_vdp_copier
   1F08 F1                 6061 	pop	af
   1F09 C1                 6062 	pop	bc
   1F0A DD 71 FE           6063 	ld	-2 (ix),c
   1F0D DD 70 FF           6064 	ld	-1 (ix),b
                           6065 ;demo.c:955: for (x = 0; x < 212; x++) {
   1F10 DD 7E FE           6066 	ld	a,-2 (ix)
   1F13 DD B6 FF           6067 	or	a,-1 (ix)
   1F16 20 D0              6068 	jr	NZ,00121$
                           6069 ;demo.c:962: vdp_register(9,2); // 50hz,192
   1F18 21 09 02           6070 	ld	hl,#0x0209
   1F1B E5                 6071 	push	hl
   1F1C CDr00s00           6072 	call	_vdp_register
   1F1F F1                 6073 	pop	af
                           6074 ;demo.c:964: vdp_load_palette(boxes_palette);
   1F20 21rE0s40           6075 	ld	hl,#_boxes_palette
   1F23 E5                 6076 	push	hl
   1F24 CDr00s00           6077 	call	_vdp_load_palette
   1F27 F1                 6078 	pop	af
                           6079 ;demo.c:966: msx2_palette(15,0,0,0);
   1F28 21 00 00           6080 	ld	hl,#0x0000
   1F2B E5                 6081 	push	hl
   1F2C 2E 0F              6082 	ld	l, #0x0F
   1F2E E5                 6083 	push	hl
   1F2F CDr00s00           6084 	call	_msx2_palette
   1F32 F1                 6085 	pop	af
   1F33 F1                 6086 	pop	af
                           6087 ;demo.c:968: drawtilescreen(tri_center);
   1F34 21r2Cs02           6088 	ld	hl,#_tri_center
   1F37 E5                 6089 	push	hl
   1F38 CDrD0s1D           6090 	call	_drawtilescreen
   1F3B F1                 6091 	pop	af
   1F3C                    6092 00102$:
                           6093 ;demo.c:973: triframes++;
   1F3C FD 21rA3s41        6094 	ld	iy,#_triframes
   1F40 FD 34 00           6095 	inc	0 (iy)
   1F43 20 07              6096 	jr	NZ,00142$
   1F45 FD 21rA3s41        6097 	ld	iy,#_triframes
   1F49 FD 34 01           6098 	inc	1 (iy)
   1F4C                    6099 00142$:
                           6100 ;demo.c:974: if (triframes == 200) {
   1F4C 3ArA3s41           6101 	ld	a,(#_triframes+0)
   1F4F D6 C8              6102 	sub	a,#0xC8
   1F51 20 06              6103 	jr	NZ,00143$
   1F53 3ArA4s41           6104 	ld	a,(#_triframes+1)
   1F56 B7                 6105 	or	a,a
   1F57 28 02              6106 	jr	Z,00144$
   1F59                    6107 00143$:
   1F59 18 08              6108 	jr	00104$
   1F5B                    6109 00144$:
                           6110 ;demo.c:975: drawtilescreen(tri_up);
   1F5B 21rECs02           6111 	ld	hl,#_tri_up
   1F5E E5                 6112 	push	hl
   1F5F CDrD0s1D           6113 	call	_drawtilescreen
   1F62 F1                 6114 	pop	af
   1F63                    6115 00104$:
                           6116 ;demo.c:978: if (triframes == 400) {
   1F63 3ArA3s41           6117 	ld	a,(#_triframes+0)
   1F66 D6 90              6118 	sub	a,#0x90
   1F68 20 07              6119 	jr	NZ,00145$
   1F6A 3ArA4s41           6120 	ld	a,(#_triframes+1)
   1F6D D6 01              6121 	sub	a,#0x01
   1F6F 28 02              6122 	jr	Z,00146$
   1F71                    6123 00145$:
   1F71 18 08              6124 	jr	00106$
   1F73                    6125 00146$:
                           6126 ;demo.c:979: drawtilescreen(tri_dia);
   1F73 21rACs03           6127 	ld	hl,#_tri_dia
   1F76 E5                 6128 	push	hl
   1F77 CDrD0s1D           6129 	call	_drawtilescreen
   1F7A F1                 6130 	pop	af
   1F7B                    6131 00106$:
                           6132 ;demo.c:981: if (triframes == 600) {
   1F7B 3ArA3s41           6133 	ld	a,(#_triframes+0)
   1F7E D6 58              6134 	sub	a,#0x58
   1F80 20 07              6135 	jr	NZ,00147$
   1F82 3ArA4s41           6136 	ld	a,(#_triframes+1)
   1F85 D6 02              6137 	sub	a,#0x02
   1F87 28 02              6138 	jr	Z,00148$
   1F89                    6139 00147$:
   1F89 18 08              6140 	jr	00108$
   1F8B                    6141 00148$:
                           6142 ;demo.c:982: drawtilescreen(tri_side1);
   1F8B 21r6Cs04           6143 	ld	hl,#_tri_side1
   1F8E E5                 6144 	push	hl
   1F8F CDrD0s1D           6145 	call	_drawtilescreen
   1F92 F1                 6146 	pop	af
   1F93                    6147 00108$:
                           6148 ;demo.c:984: if (triframes == 700) {
   1F93 3ArA3s41           6149 	ld	a,(#_triframes+0)
   1F96 D6 BC              6150 	sub	a,#0xBC
   1F98 20 07              6151 	jr	NZ,00149$
   1F9A 3ArA4s41           6152 	ld	a,(#_triframes+1)
   1F9D D6 02              6153 	sub	a,#0x02
   1F9F 28 02              6154 	jr	Z,00150$
   1FA1                    6155 00149$:
   1FA1 18 08              6156 	jr	00110$
   1FA3                    6157 00150$:
                           6158 ;demo.c:985: drawtilescreen(tri_side2);
   1FA3 21r2Cs05           6159 	ld	hl,#_tri_side2
   1FA6 E5                 6160 	push	hl
   1FA7 CDrD0s1D           6161 	call	_drawtilescreen
   1FAA F1                 6162 	pop	af
   1FAB                    6163 00110$:
                           6164 ;demo.c:987: if (triframes == 800) {
   1FAB 3ArA3s41           6165 	ld	a,(#_triframes+0)
   1FAE D6 20              6166 	sub	a,#0x20
   1FB0 20 07              6167 	jr	NZ,00151$
   1FB2 3ArA4s41           6168 	ld	a,(#_triframes+1)
   1FB5 D6 03              6169 	sub	a,#0x03
   1FB7 28 02              6170 	jr	Z,00152$
   1FB9                    6171 00151$:
   1FB9 18 08              6172 	jr	00112$
   1FBB                    6173 00152$:
                           6174 ;demo.c:988: drawtilescreen(tri_side1);
   1FBB 21r6Cs04           6175 	ld	hl,#_tri_side1
   1FBE E5                 6176 	push	hl
   1FBF CDrD0s1D           6177 	call	_drawtilescreen
   1FC2 F1                 6178 	pop	af
   1FC3                    6179 00112$:
                           6180 ;demo.c:990: if (triframes == 900) {
   1FC3 3ArA3s41           6181 	ld	a,(#_triframes+0)
   1FC6 D6 84              6182 	sub	a,#0x84
   1FC8 20 07              6183 	jr	NZ,00153$
   1FCA 3ArA4s41           6184 	ld	a,(#_triframes+1)
   1FCD D6 03              6185 	sub	a,#0x03
   1FCF 28 02              6186 	jr	Z,00154$
   1FD1                    6187 00153$:
   1FD1 18 08              6188 	jr	00114$
   1FD3                    6189 00154$:
                           6190 ;demo.c:991: drawtilescreen(tri_side2);
   1FD3 21r2Cs05           6191 	ld	hl,#_tri_side2
   1FD6 E5                 6192 	push	hl
   1FD7 CDrD0s1D           6193 	call	_drawtilescreen
   1FDA F1                 6194 	pop	af
   1FDB                    6195 00114$:
                           6196 ;demo.c:993: if (triframes == 1000) {
   1FDB 3ArA3s41           6197 	ld	a,(#_triframes+0)
   1FDE D6 E8              6198 	sub	a,#0xE8
   1FE0 20 07              6199 	jr	NZ,00155$
   1FE2 3ArA4s41           6200 	ld	a,(#_triframes+1)
   1FE5 D6 03              6201 	sub	a,#0x03
   1FE7 28 02              6202 	jr	Z,00156$
   1FE9                    6203 00155$:
   1FE9 18 12              6204 	jr	00116$
   1FEB                    6205 00156$:
                           6206 ;demo.c:994: triframes = 0;
   1FEB 21rA3s41           6207 	ld	hl,#_triframes + 0
   1FEE 36 00              6208 	ld	(hl), #0x00
   1FF0 21rA4s41           6209 	ld	hl,#_triframes + 1
   1FF3 36 00              6210 	ld	(hl), #0x00
                           6211 ;demo.c:995: drawtilescreen(tri_center);
   1FF5 21r2Cs02           6212 	ld	hl,#_tri_center
   1FF8 E5                 6213 	push	hl
   1FF9 CDrD0s1D           6214 	call	_drawtilescreen
   1FFC F1                 6215 	pop	af
   1FFD                    6216 00116$:
                           6217 ;demo.c:998: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   1FFD 21r9Bs41           6218 	ld	hl,#_tripal + 2
   2000 4E                 6219 	ld	c,(hl)
   2001 11r9As41           6220 	ld	de,#_tripal + 1
   2004 1A                 6221 	ld	a,(de)
   2005 47                 6222 	ld	b,a
   2006 21r99s41           6223 	ld	hl,#_tripal
   2009 5E                 6224 	ld	e,(hl)
   200A 79                 6225 	ld	a,c
   200B F5                 6226 	push	af
   200C 33                 6227 	inc	sp
   200D C5                 6228 	push	bc
   200E 33                 6229 	inc	sp
   200F 53                 6230 	ld	d,e
   2010 1E 03              6231 	ld	e,#0x03
   2012 D5                 6232 	push	de
   2013 CDr00s00           6233 	call	_msx2_palette
   2016 F1                 6234 	pop	af
   2017 F1                 6235 	pop	af
                           6236 ;demo.c:999: msx2_palette(13,tripal[3],tripal[4],tripal[5]);
   2018 21r9Es41           6237 	ld	hl,#_tripal + 5
   201B 4E                 6238 	ld	c,(hl)
   201C 11r9Ds41           6239 	ld	de,#_tripal + 4
   201F 1A                 6240 	ld	a,(de)
   2020 47                 6241 	ld	b,a
   2021 21r9Cs41           6242 	ld	hl,#_tripal + 3
   2024 5E                 6243 	ld	e,(hl)
   2025 79                 6244 	ld	a,c
   2026 F5                 6245 	push	af
   2027 33                 6246 	inc	sp
   2028 C5                 6247 	push	bc
   2029 33                 6248 	inc	sp
   202A 53                 6249 	ld	d,e
   202B 1E 0D              6250 	ld	e,#0x0D
   202D D5                 6251 	push	de
   202E CDr00s00           6252 	call	_msx2_palette
   2031 F1                 6253 	pop	af
   2032 F1                 6254 	pop	af
                           6255 ;demo.c:1000: msx2_palette(5,tripal[6],tripal[7],tripal[8]);
   2033 21rA1s41           6256 	ld	hl,#_tripal + 8
   2036 4E                 6257 	ld	c,(hl)
   2037 11rA0s41           6258 	ld	de,#_tripal + 7
   203A 1A                 6259 	ld	a,(de)
   203B 47                 6260 	ld	b,a
   203C 21r9Fs41           6261 	ld	hl,#_tripal + 6
   203F 5E                 6262 	ld	e,(hl)
   2040 79                 6263 	ld	a,c
   2041 F5                 6264 	push	af
   2042 33                 6265 	inc	sp
   2043 C5                 6266 	push	bc
   2044 33                 6267 	inc	sp
   2045 53                 6268 	ld	d,e
   2046 1E 05              6269 	ld	e,#0x05
   2048 D5                 6270 	push	de
   2049 CDr00s00           6271 	call	_msx2_palette
   204C F1                 6272 	pop	af
   204D F1                 6273 	pop	af
                           6274 ;demo.c:1003: tripaltick++;
   204E FD 21rA2s41        6275 	ld	iy,#_tripaltick
   2052 FD 34 00           6276 	inc	0 (iy)
                           6277 ;demo.c:1004: if (tripaltick > 6) {
   2055 3E 06              6278 	ld	a,#0x06
   2057 FD 21rA2s41        6279 	ld	iy,#_tripaltick
   205B FD 96 00           6280 	sub	a,0 (iy)
   205E D2rCCs20           6281 	jp	NC,00126$
                           6282 ;demo.c:1006: r = tripal[0];
   2061 21r99s41           6283 	ld	hl,#_tripal
   2064 4E                 6284 	ld	c,(hl)
   2065 DD 71 FD           6285 	ld	-3 (ix),c
                           6286 ;demo.c:1007: g = tripal[1];
   2068 11r9As41           6287 	ld	de,#_tripal + 1
   206B 1A                 6288 	ld	a,(de)
   206C DD 77 FC           6289 	ld	-4 (ix),a
                           6290 ;demo.c:1008: b = tripal[2];
   206F 21r9Bs41           6291 	ld	hl,#_tripal + 2
   2072 5E                 6292 	ld	e,(hl)
   2073 DD 73 FB           6293 	ld	-5 (ix),e
                           6294 ;demo.c:1010: for (x = 0; x < 6; x++) {
   2076 DD 36 FE 00        6295 	ld	-2 (ix),#0x00
   207A DD 36 FF 00        6296 	ld	-1 (ix),#0x00
   207E                    6297 00122$:
   207E DD 7E FE           6298 	ld	a,-2 (ix)
   2081 D6 06              6299 	sub	a,#0x06
   2083 DD 7E FF           6300 	ld	a,-1 (ix)
   2086 DE 00              6301 	sbc	a,#0x00
   2088 F2rB2s20           6302 	jp	P,00125$
                           6303 ;demo.c:1011: tripal[x] = tripal[x+3];
   208B 3Er99              6304 	ld	a,#<_tripal
   208D DD 86 FE           6305 	add	a,-2 (ix)
   2090 4F                 6306 	ld	c,a
   2091 3Es41              6307 	ld	a,#>_tripal
   2093 DD 8E FF           6308 	adc	a,-1 (ix)
   2096 47                 6309 	ld	b,a
   2097 DD 5E FE           6310 	ld	e,-2 (ix)
   209A 1C                 6311 	inc	e
   209B 1C                 6312 	inc	e
   209C 1C                 6313 	inc	e
   209D 3Er99              6314 	ld	a,#<_tripal
   209F 83                 6315 	add	a,e
   20A0 5F                 6316 	ld	e,a
   20A1 3Es41              6317 	ld	a,#>_tripal
   20A3 CE 00              6318 	adc	a,#0x00
   20A5 57                 6319 	ld	d,a
   20A6 1A                 6320 	ld	a,(de)
   20A7 02                 6321 	ld	(bc),a
                           6322 ;demo.c:1010: for (x = 0; x < 6; x++) {
   20A8 DD 34 FE           6323 	inc	-2 (ix)
   20AB 20 03              6324 	jr	NZ,00157$
   20AD DD 34 FF           6325 	inc	-1 (ix)
   20B0                    6326 00157$:
   20B0 18 CC              6327 	jr	00122$
   20B2                    6328 00125$:
                           6329 ;demo.c:1014: tripal[6] = r;
   20B2 01r9Fs41           6330 	ld	bc,#_tripal + 6
   20B5 DD 7E FD           6331 	ld	a,-3 (ix)
   20B8 02                 6332 	ld	(bc),a
                           6333 ;demo.c:1015: tripal[7] = g;
   20B9 01rA0s41           6334 	ld	bc,#_tripal + 7
   20BC DD 7E FC           6335 	ld	a,-4 (ix)
   20BF 02                 6336 	ld	(bc),a
                           6337 ;demo.c:1016: tripal[8] = b;
   20C0 01rA1s41           6338 	ld	bc,#_tripal + 8
   20C3 DD 7E FB           6339 	ld	a,-5 (ix)
   20C6 02                 6340 	ld	(bc),a
                           6341 ;demo.c:1017: tripaltick = 0;
   20C7 21rA2s41           6342 	ld	hl,#_tripaltick + 0
   20CA 36 00              6343 	ld	(hl), #0x00
   20CC                    6344 00126$:
   20CC DD F9              6345 	ld	sp,ix
   20CE DD E1              6346 	pop	ix
   20D0 C9                 6347 	ret
   20D1                    6348 _tritiles_end::
                           6349 ;demo.c:1026: void do_quit() {
                           6350 ;	---------------------------------
                           6351 ; Function do_quit
                           6352 ; ---------------------------------
   20D1                    6353 _do_quit_start::
   20D1                    6354 _do_quit:
                           6355 ;demo.c:1027: waitVB();
   20D1 76                 6356 		halt 
                           6357 ;demo.c:1028: uninstall_isr();
   20D2 CDr00s00           6358 	call	_uninstall_isr
                           6359 ;demo.c:1029: PLY_Stop();
   20D5 CDr00s00           6360 	call	_PLY_Stop
                           6361 ;demo.c:1030: PLY_SendRegisters();
   20D8 CDr00s00           6362 	call	_PLY_SendRegisters
                           6363 ;demo.c:1032: screen(0);
   20DB 3E 00              6364 	ld	a,#0x00
   20DD F5                 6365 	push	af
   20DE 33                 6366 	inc	sp
   20DF CDr00s00           6367 	call	_screen
   20E2 33                 6368 	inc	sp
                           6369 ;demo.c:1034: puts("demo quit\r\n\r\n");
   20E3 21rF4s20           6370 	ld	hl,#__str_13
   20E6 E5                 6371 	push	hl
   20E7 CDr00s00           6372 	call	_puts
   20EA F1                 6373 	pop	af
                           6374 ;demo.c:1036: exit(0);	
   20EB 3E 00              6375 	ld	a,#0x00
   20ED F5                 6376 	push	af
   20EE 33                 6377 	inc	sp
   20EF CDr00s00           6378 	call	_exit
   20F2 33                 6379 	inc	sp
   20F3 C9                 6380 	ret
   20F4                    6381 _do_quit_end::
   20F4                    6382 __str_13:
   20F4 64 65 6D 6F 20 71  6383 	.ascii "demo quit"
        75 69 74
   20FD 0D                 6384 	.db 0x0D
   20FE 0A                 6385 	.db 0x0A
   20FF 0D                 6386 	.db 0x0D
   2100 0A                 6387 	.db 0x0A
   2101 00                 6388 	.db 0x00
                           6389 ;demo.c:1060: void main() {
                           6390 ;	---------------------------------
                           6391 ; Function main
                           6392 ; ---------------------------------
   2102                    6393 _main_start::
   2102                    6394 _main:
   2102 DD E5              6395 	push	ix
   2104 DD 21 00 00        6396 	ld	ix,#0
   2108 DD 39              6397 	add	ix,sp
   210A 21 F9 FF           6398 	ld	hl,#-7
   210D 39                 6399 	add	hl,sp
   210E F9                 6400 	ld	sp,hl
                           6401 ;demo.c:1061: unsigned char quit=0;
   210F DD 36 FF 00        6402 	ld	-1 (ix),#0x00
                           6403 ;demo.c:1067: spindown();
   2113 CDr00s00           6404 	call	_spindown
                           6405 ;demo.c:1069: puts("demo init\r\n\r\n");
   2116 21rBCs24           6406 	ld	hl,#__str_14
   2119 E5                 6407 	push	hl
   211A CDr00s00           6408 	call	_puts
   211D F1                 6409 	pop	af
                           6410 ;demo.c:1071: for (y = 0; y < 2; y++) {
   211E DD 36 FB 00        6411 	ld	-5 (ix),#0x00
   2122 DD 36 FC 00        6412 	ld	-4 (ix),#0x00
   2126                    6413 00118$:
   2126 DD 7E FB           6414 	ld	a,-5 (ix)
   2129 D6 02              6415 	sub	a,#0x02
   212B DD 7E FC           6416 	ld	a,-4 (ix)
   212E DE 00              6417 	sbc	a,#0x00
   2130 F2rB2s21           6418 	jp	P,00121$
                           6419 ;demo.c:1072: for (x = 0; x < 16; x++) {
   2133 DD 4E FB           6420 	ld	c,-5 (ix)
   2136 DD 46 FC           6421 	ld	b,-4 (ix)
   2139 CB 21              6422 	sla	c
   213B CB 10              6423 	rl	b
   213D CB 21              6424 	sla	c
   213F CB 10              6425 	rl	b
   2141 CB 21              6426 	sla	c
   2143 CB 10              6427 	rl	b
   2145 CB 21              6428 	sla	c
   2147 CB 10              6429 	rl	b
   2149 21 81 03           6430 	ld	hl,#0x0381
   214C 09                 6431 	add	hl,bc
   214D DD 75 F9           6432 	ld	-7 (ix),l
   2150 DD 74 FA           6433 	ld	-6 (ix),h
   2153 DD 36 FD 00        6434 	ld	-3 (ix),#0x00
   2157 DD 36 FE 00        6435 	ld	-2 (ix),#0x00
   215B                    6436 00114$:
   215B DD 7E FD           6437 	ld	a,-3 (ix)
   215E D6 10              6438 	sub	a,#0x10
   2160 DD 7E FE           6439 	ld	a,-2 (ix)
   2163 DE 00              6440 	sbc	a,#0x00
   2165 F2rA7s21           6441 	jp	P,00120$
                           6442 ;demo.c:1073: tri_lookup_x[(y*16)+x] = x * 16;
   2168 DD 7E FB           6443 	ld	a,-5 (ix)
   216B 07                 6444 	rlca
   216C 07                 6445 	rlca
   216D 07                 6446 	rlca
   216E 07                 6447 	rlca
   216F E6 F0              6448 	and	a,#0xF0
   2171 5F                 6449 	ld	e,a
   2172 DD 56 FD           6450 	ld	d,-3 (ix)
   2175 7B                 6451 	ld	a,e
   2176 82                 6452 	add	a,d
   2177 5F                 6453 	ld	e, a
   2178 C6r00              6454 	add	a,#<_tri_lookup_x
   217A 4F                 6455 	ld	c,a
   217B 3Es01              6456 	ld	a,#>_tri_lookup_x
   217D CE 00              6457 	adc	a,#0x00
   217F 47                 6458 	ld	b,a
   2180 7A                 6459 	ld	a,d
   2181 07                 6460 	rlca
   2182 07                 6461 	rlca
   2183 07                 6462 	rlca
   2184 07                 6463 	rlca
   2185 E6 F0              6464 	and	a,#0xF0
   2187 02                 6465 	ld	(bc),a
                           6466 ;demo.c:1074: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   2188 CB 23              6467 	sla	e
   218A 3Er20              6468 	ld	a,#<_tri_lookup_y
   218C 83                 6469 	add	a,e
   218D 6F                 6470 	ld	l,a
   218E 3Es01              6471 	ld	a,#>_tri_lookup_y
   2190 CE 00              6472 	adc	a,#0x00
   2192 67                 6473 	ld	h,a
   2193 DD 7E F9           6474 	ld	a,-7 (ix)
   2196 77                 6475 	ld	(hl),a
   2197 23                 6476 	inc	hl
   2198 DD 7E FA           6477 	ld	a,-6 (ix)
   219B 77                 6478 	ld	(hl),a
                           6479 ;demo.c:1072: for (x = 0; x < 16; x++) {
   219C DD 34 FD           6480 	inc	-3 (ix)
   219F 20 03              6481 	jr	NZ,00139$
   21A1 DD 34 FE           6482 	inc	-2 (ix)
   21A4                    6483 00139$:
   21A4 C3r5Bs21           6484 	jp	00114$
   21A7                    6485 00120$:
                           6486 ;demo.c:1071: for (y = 0; y < 2; y++) {
   21A7 DD 34 FB           6487 	inc	-5 (ix)
   21AA 20 03              6488 	jr	NZ,00140$
   21AC DD 34 FC           6489 	inc	-4 (ix)
   21AF                    6490 00140$:
   21AF C3r26s21           6491 	jp	00118$
   21B2                    6492 00121$:
                           6493 ;demo.c:1078: puts("music init...");
   21B2 21rCAs24           6494 	ld	hl,#__str_15
   21B5 E5                 6495 	push	hl
   21B6 CDr00s00           6496 	call	_puts
   21B9 F1                 6497 	pop	af
                           6498 ;demo.c:1080: PLY_SongPtr = (char *)0x0103;
   21BA 21r00s00           6499 	ld	hl,#_PLY_SongPtr + 0
   21BD 36 03              6500 	ld	(hl), #0x03
   21BF 21r01s00           6501 	ld	hl,#_PLY_SongPtr + 1
   21C2 36 01              6502 	ld	(hl), #0x01
                           6503 ;demo.c:1081: PLY_Init();
   21C4 CDr00s00           6504 	call	_PLY_Init
                           6505 ;demo.c:1082: puts("done.\r\n");
   21C7 21rD8s24           6506 	ld	hl,#__str_16
   21CA E5                 6507 	push	hl
   21CB CDr00s00           6508 	call	_puts
   21CE F1                 6509 	pop	af
                           6510 ;demo.c:1084: puts("detecting vdp type...\r\n\r\n");
   21CF 21rE0s24           6511 	ld	hl,#__str_17
   21D2 E5                 6512 	push	hl
   21D3 CDr00s00           6513 	call	_puts
   21D6 F1                 6514 	pop	af
                           6515 ;demo.c:1085: if(isvdp2())
   21D7 CDr00s00           6516 	call	_isvdp2
   21DA AF                 6517 	xor	a,a
   21DB B5                 6518 	or	a,l
   21DC 28 0A              6519 	jr	Z,00102$
                           6520 ;demo.c:1087: puts("vdp2 found! setting 50hz...\r\n\r\n");
   21DE 21rFAs24           6521 	ld	hl,#__str_18
   21E1 E5                 6522 	push	hl
   21E2 CDr00s00           6523 	call	_puts
   21E5 F1                 6524 	pop	af
   21E6 18 0B              6525 	jr	00103$
   21E8                    6526 00102$:
                           6527 ;demo.c:1090: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   21E8 21r1As25           6528 	ld	hl,#__str_19
   21EB E5                 6529 	push	hl
   21EC CDr00s00           6530 	call	_puts
   21EF F1                 6531 	pop	af
                           6532 ;demo.c:1091: do_quit();
   21F0 CDrD1s20           6533 	call	_do_quit
   21F3                    6534 00103$:
                           6535 ;demo.c:1094: pal_load("TWISTER PL5",32,1);
   21F3 21 01 00           6536 	ld	hl,#0x0001
   21F6 E5                 6537 	push	hl
   21F7 3E 20              6538 	ld	a,#0x20
   21F9 F5                 6539 	push	af
   21FA 33                 6540 	inc	sp
   21FB 21r61s25           6541 	ld	hl,#__str_20
   21FE E5                 6542 	push	hl
   21FF CDrA3s07           6543 	call	_pal_load
   2202 F1                 6544 	pop	af
   2203 F1                 6545 	pop	af
   2204 33                 6546 	inc	sp
                           6547 ;demo.c:1095: memcpy(twister_palette, cur_palette, 32);
   2205 21 20 00           6548 	ld	hl,#0x0020
   2208 E5                 6549 	push	hl
   2209 21r60s40           6550 	ld	hl,#_cur_palette
   220C E5                 6551 	push	hl
   220D 21rA0s40           6552 	ld	hl,#_twister_palette
   2210 E5                 6553 	push	hl
   2211 CDr00s00           6554 	call	_memcpy
   2214 F1                 6555 	pop	af
   2215 F1                 6556 	pop	af
   2216 F1                 6557 	pop	af
                           6558 ;demo.c:1096: pal_load("LF      PL5",32,1);
   2217 21 01 00           6559 	ld	hl,#0x0001
   221A E5                 6560 	push	hl
   221B 3E 20              6561 	ld	a,#0x20
   221D F5                 6562 	push	af
   221E 33                 6563 	inc	sp
   221F 21r6Ds25           6564 	ld	hl,#__str_21
   2222 E5                 6565 	push	hl
   2223 CDrA3s07           6566 	call	_pal_load
   2226 F1                 6567 	pop	af
   2227 F1                 6568 	pop	af
   2228 33                 6569 	inc	sp
                           6570 ;demo.c:1097: memcpy(tf_palette, cur_palette, 32);
   2229 21 20 00           6571 	ld	hl,#0x0020
   222C E5                 6572 	push	hl
   222D 21r60s40           6573 	ld	hl,#_cur_palette
   2230 E5                 6574 	push	hl
   2231 21rC0s40           6575 	ld	hl,#_tf_palette
   2234 E5                 6576 	push	hl
   2235 CDr00s00           6577 	call	_memcpy
   2238 F1                 6578 	pop	af
   2239 F1                 6579 	pop	af
   223A F1                 6580 	pop	af
                           6581 ;demo.c:1098: pal_load("BOXES   PL5",32,1);
   223B 21 01 00           6582 	ld	hl,#0x0001
   223E E5                 6583 	push	hl
   223F 3E 20              6584 	ld	a,#0x20
   2241 F5                 6585 	push	af
   2242 33                 6586 	inc	sp
   2243 21r79s25           6587 	ld	hl,#__str_22
   2246 E5                 6588 	push	hl
   2247 CDrA3s07           6589 	call	_pal_load
   224A F1                 6590 	pop	af
   224B F1                 6591 	pop	af
   224C 33                 6592 	inc	sp
                           6593 ;demo.c:1099: memcpy(boxes_palette, cur_palette, 32);
   224D 21 20 00           6594 	ld	hl,#0x0020
   2250 E5                 6595 	push	hl
   2251 21r60s40           6596 	ld	hl,#_cur_palette
   2254 E5                 6597 	push	hl
   2255 21rE0s40           6598 	ld	hl,#_boxes_palette
   2258 E5                 6599 	push	hl
   2259 CDr00s00           6600 	call	_memcpy
   225C F1                 6601 	pop	af
   225D F1                 6602 	pop	af
   225E F1                 6603 	pop	af
                           6604 ;demo.c:1100: pal_load("BULBS   PL5",32,1);
   225F 21 01 00           6605 	ld	hl,#0x0001
   2262 E5                 6606 	push	hl
   2263 3E 20              6607 	ld	a,#0x20
   2265 F5                 6608 	push	af
   2266 33                 6609 	inc	sp
   2267 21r85s25           6610 	ld	hl,#__str_23
   226A E5                 6611 	push	hl
   226B CDrA3s07           6612 	call	_pal_load
   226E F1                 6613 	pop	af
   226F F1                 6614 	pop	af
   2270 33                 6615 	inc	sp
                           6616 ;demo.c:1102: scratch_clear();
   2271 CDr90s07           6617 	call	_scratch_clear
                           6618 ;demo.c:1103: vdp_load_palette(scratch);
   2274 21rE0s3F           6619 	ld	hl,#_scratch
   2277 E5                 6620 	push	hl
   2278 CDr00s00           6621 	call	_vdp_load_palette
   227B F1                 6622 	pop	af
                           6623 ;demo.c:1105: vdp_set_screen5();
   227C CDr00s00           6624 	call	_vdp_set_screen5
                           6625 ;demo.c:1107: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   227F 21 00 00           6626 	ld	hl,#0x0000
   2282 E5                 6627 	push	hl
   2283 2E 01              6628 	ld	l, #0x01
   2285 E5                 6629 	push	hl
   2286 2E 00              6630 	ld	l, #0x00
   2288 E5                 6631 	push	hl
   2289 21 7F 09           6632 	ld	hl,#0x097F
   228C E5                 6633 	push	hl
   228D 21r91s25           6634 	ld	hl,#__str_24
   2290 E5                 6635 	push	hl
   2291 CDr99s09           6636 	call	_pck_load
   2294 FD 21 0A 00        6637 	ld	iy,#0x000A
   2298 FD 39              6638 	add	iy,sp
   229A FD F9              6639 	ld	sp,iy
                           6640 ;demo.c:1109: cmd.size_x = 256;
   229C 21r0Cs41           6641 	ld	hl, #_cmd + 8
   229F 36 00              6642 	ld	(hl),#0x00
   22A1 23                 6643 	inc	hl
   22A2 36 01              6644 	ld	(hl),#0x01
                           6645 ;demo.c:1110: cmd.size_y = 212;
   22A4 21r0Es41           6646 	ld	hl, #_cmd + 10
   22A7 36 D4              6647 	ld	(hl),#0xD4
   22A9 23                 6648 	inc	hl
   22AA 36 00              6649 	ld	(hl),#0x00
                           6650 ;demo.c:1111: cmd.data = 0;
                           6651 ;demo.c:1112: cmd.argument = 0x00;
   22AC 3E 00              6652 	ld	a,#0x00
   22AE 32r10s41           6653 	ld	(#_cmd + 12),a
   22B1 32r11s41           6654 	ld	(#_cmd + 13),a
                           6655 ;demo.c:1113: cmd.command = 0xd0; 
   22B4 01r12s41           6656 	ld	bc,#_cmd + 14
   22B7 3E D0              6657 	ld	a,#0xD0
   22B9 02                 6658 	ld	(bc),a
                           6659 ;demo.c:1114: cmd.source_x = 0;
   22BA 21r04s41           6660 	ld	hl,#_cmd
   22BD 36 00              6661 	ld	(hl),#0x00
   22BF 23                 6662 	inc	hl
   22C0 36 00              6663 	ld	(hl),#0x00
                           6664 ;demo.c:1115: cmd.source_y = 0;
   22C2 21r06s41           6665 	ld	hl, #_cmd + 2
   22C5 36 00              6666 	ld	(hl),#0x00
   22C7 23                 6667 	inc	hl
   22C8 36 00              6668 	ld	(hl),#0x00
                           6669 ;demo.c:1116: cmd.dest_x = 0;
   22CA 21r08s41           6670 	ld	hl, #_cmd + 4
   22CD 36 00              6671 	ld	(hl),#0x00
   22CF 23                 6672 	inc	hl
   22D0 36 00              6673 	ld	(hl),#0x00
                           6674 ;demo.c:1117: cmd.dest_y = 256;
   22D2 21r0As41           6675 	ld	hl, #_cmd + 6
   22D5 36 00              6676 	ld	(hl),#0x00
   22D7 23                 6677 	inc	hl
   22D8 36 01              6678 	ld	(hl),#0x01
                           6679 ;demo.c:1118: vdp_copier(&cmd);
   22DA 21r04s41           6680 	ld	hl,#_cmd
   22DD E5                 6681 	push	hl
   22DE CDr00s00           6682 	call	_vdp_copier
   22E1 F1                 6683 	pop	af
                           6684 ;demo.c:1120: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   22E2 21 00 00           6685 	ld	hl,#0x0000
   22E5 E5                 6686 	push	hl
   22E6 2E 01              6687 	ld	l, #0x01
   22E8 E5                 6688 	push	hl
   22E9 2E 00              6689 	ld	l, #0x00
   22EB E5                 6690 	push	hl
   22EC 21 C0 0F           6691 	ld	hl,#0x0FC0
   22EF E5                 6692 	push	hl
   22F0 21r9Ds25           6693 	ld	hl,#__str_25
   22F3 E5                 6694 	push	hl
   22F4 CDr99s09           6695 	call	_pck_load
   22F7 FD 21 0A 00        6696 	ld	iy,#0x000A
   22FB FD 39              6697 	add	iy,sp
   22FD FD F9              6698 	ld	sp,iy
                           6699 ;demo.c:1122: cmd.size_x = 256;
   22FF 21r0Cs41           6700 	ld	hl, #_cmd + 8
   2302 36 00              6701 	ld	(hl),#0x00
   2304 23                 6702 	inc	hl
   2305 36 01              6703 	ld	(hl),#0x01
                           6704 ;demo.c:1123: cmd.size_y = 212;
   2307 21r0Es41           6705 	ld	hl, #_cmd + 10
   230A 36 D4              6706 	ld	(hl),#0xD4
   230C 23                 6707 	inc	hl
   230D 36 00              6708 	ld	(hl),#0x00
                           6709 ;demo.c:1124: cmd.data = 0;
                           6710 ;demo.c:1125: cmd.argument = 0x00;
   230F 3E 00              6711 	ld	a,#0x00
   2311 32r10s41           6712 	ld	(#_cmd + 12),a
   2314 32r11s41           6713 	ld	(#_cmd + 13),a
                           6714 ;demo.c:1126: cmd.command = 0xd0; 
   2317 01r12s41           6715 	ld	bc,#_cmd + 14
   231A 3E D0              6716 	ld	a,#0xD0
   231C 02                 6717 	ld	(bc),a
                           6718 ;demo.c:1127: cmd.source_x = 0;
   231D 21r04s41           6719 	ld	hl,#_cmd
   2320 36 00              6720 	ld	(hl),#0x00
   2322 23                 6721 	inc	hl
   2323 36 00              6722 	ld	(hl),#0x00
                           6723 ;demo.c:1128: cmd.source_y = 0;
   2325 21r06s41           6724 	ld	hl, #_cmd + 2
   2328 36 00              6725 	ld	(hl),#0x00
   232A 23                 6726 	inc	hl
   232B 36 00              6727 	ld	(hl),#0x00
                           6728 ;demo.c:1129: cmd.dest_x = 0;
   232D 21r08s41           6729 	ld	hl, #_cmd + 4
   2330 36 00              6730 	ld	(hl),#0x00
   2332 23                 6731 	inc	hl
   2333 36 00              6732 	ld	(hl),#0x00
                           6733 ;demo.c:1130: cmd.dest_y = 512;
   2335 21r0As41           6734 	ld	hl, #_cmd + 6
   2338 36 00              6735 	ld	(hl),#0x00
   233A 23                 6736 	inc	hl
   233B 36 02              6737 	ld	(hl),#0x02
                           6738 ;demo.c:1131: vdp_copier(&cmd);
   233D 21r04s41           6739 	ld	hl,#_cmd
   2340 E5                 6740 	push	hl
   2341 CDr00s00           6741 	call	_vdp_copier
   2344 F1                 6742 	pop	af
                           6743 ;demo.c:1134: pck_load("BOXES   PCK",2098,0x0000,VRAM_0,0);
   2345 21 00 00           6744 	ld	hl,#0x0000
   2348 E5                 6745 	push	hl
   2349 2E 01              6746 	ld	l, #0x01
   234B E5                 6747 	push	hl
   234C 2E 00              6748 	ld	l, #0x00
   234E E5                 6749 	push	hl
   234F 21 32 08           6750 	ld	hl,#0x0832
   2352 E5                 6751 	push	hl
   2353 21rA9s25           6752 	ld	hl,#__str_26
   2356 E5                 6753 	push	hl
   2357 CDr99s09           6754 	call	_pck_load
   235A FD 21 0A 00        6755 	ld	iy,#0x000A
   235E FD 39              6756 	add	iy,sp
   2360 FD F9              6757 	ld	sp,iy
                           6758 ;demo.c:1135: cmd.size_x = 256;
   2362 21r0Cs41           6759 	ld	hl, #_cmd + 8
   2365 36 00              6760 	ld	(hl),#0x00
   2367 23                 6761 	inc	hl
   2368 36 01              6762 	ld	(hl),#0x01
                           6763 ;demo.c:1136: cmd.size_y = 212;
   236A 21r0Es41           6764 	ld	hl, #_cmd + 10
   236D 36 D4              6765 	ld	(hl),#0xD4
   236F 23                 6766 	inc	hl
   2370 36 00              6767 	ld	(hl),#0x00
                           6768 ;demo.c:1137: cmd.data = 0;
                           6769 ;demo.c:1138: cmd.argument = 0x00;
   2372 3E 00              6770 	ld	a,#0x00
   2374 32r10s41           6771 	ld	(#_cmd + 12),a
   2377 32r11s41           6772 	ld	(#_cmd + 13),a
                           6773 ;demo.c:1139: cmd.command = 0xd0; 
   237A 01r12s41           6774 	ld	bc,#_cmd + 14
   237D 3E D0              6775 	ld	a,#0xD0
   237F 02                 6776 	ld	(bc),a
                           6777 ;demo.c:1140: cmd.source_x = 0;
   2380 21r04s41           6778 	ld	hl,#_cmd
   2383 36 00              6779 	ld	(hl),#0x00
   2385 23                 6780 	inc	hl
   2386 36 00              6781 	ld	(hl),#0x00
                           6782 ;demo.c:1141: cmd.source_y = 0;
   2388 21r06s41           6783 	ld	hl, #_cmd + 2
   238B 36 00              6784 	ld	(hl),#0x00
   238D 23                 6785 	inc	hl
   238E 36 00              6786 	ld	(hl),#0x00
                           6787 ;demo.c:1142: cmd.dest_x = 0;
   2390 21r08s41           6788 	ld	hl, #_cmd + 4
   2393 36 00              6789 	ld	(hl),#0x00
   2395 23                 6790 	inc	hl
   2396 36 00              6791 	ld	(hl),#0x00
                           6792 ;demo.c:1143: cmd.dest_y = 768;
   2398 21r0As41           6793 	ld	hl, #_cmd + 6
   239B 36 00              6794 	ld	(hl),#0x00
   239D 23                 6795 	inc	hl
   239E 36 03              6796 	ld	(hl),#0x03
                           6797 ;demo.c:1144: vdp_copier(&cmd);
   23A0 21r04s41           6798 	ld	hl,#_cmd
   23A3 E5                 6799 	push	hl
   23A4 CDr00s00           6800 	call	_vdp_copier
   23A7 F1                 6801 	pop	af
                           6802 ;demo.c:1146: scratch_clear();
   23A8 CDr90s07           6803 	call	_scratch_clear
                           6804 ;demo.c:1147: vdp_load_palette(scratch);
   23AB 21rE0s3F           6805 	ld	hl,#_scratch
   23AE E5                 6806 	push	hl
   23AF CDr00s00           6807 	call	_vdp_load_palette
   23B2 F1                 6808 	pop	af
                           6809 ;demo.c:1149: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   23B3 21 00 00           6810 	ld	hl,#0x0000
   23B6 E5                 6811 	push	hl
   23B7 2E 01              6812 	ld	l, #0x01
   23B9 E5                 6813 	push	hl
   23BA 2E 00              6814 	ld	l, #0x00
   23BC E5                 6815 	push	hl
   23BD 21 6A 08           6816 	ld	hl,#0x086A
   23C0 E5                 6817 	push	hl
   23C1 21rB5s25           6818 	ld	hl,#__str_27
   23C4 E5                 6819 	push	hl
   23C5 CDr99s09           6820 	call	_pck_load
   23C8 FD 21 0A 00        6821 	ld	iy,#0x000A
   23CC FD 39              6822 	add	iy,sp
   23CE FD F9              6823 	ld	sp,iy
                           6824 ;demo.c:1150: pal_load("DSSLOGO PL5",32,0);
   23D0 21 00 00           6825 	ld	hl,#0x0000
   23D3 E5                 6826 	push	hl
   23D4 3E 20              6827 	ld	a,#0x20
   23D6 F5                 6828 	push	af
   23D7 33                 6829 	inc	sp
   23D8 21rC1s25           6830 	ld	hl,#__str_28
   23DB E5                 6831 	push	hl
   23DC CDrA3s07           6832 	call	_pal_load
   23DF F1                 6833 	pop	af
   23E0 F1                 6834 	pop	af
   23E1 33                 6835 	inc	sp
                           6836 ;demo.c:1152: scratch_clear();
   23E2 CDr90s07           6837 	call	_scratch_clear
                           6838 ;demo.c:1154: vdp_register(9,130); // 50hz,212
   23E5 21 09 82           6839 	ld	hl,#0x8209
   23E8 E5                 6840 	push	hl
   23E9 CDr00s00           6841 	call	_vdp_register
   23EC F1                 6842 	pop	af
                           6843 ;demo.c:1156: install_isr(my_isr);
   23ED 21rECs05           6844 	ld	hl,#_my_isr
   23F0 E5                 6845 	push	hl
   23F1 CDr00s00           6846 	call	_install_isr
   23F4 F1                 6847 	pop	af
                           6848 ;demo.c:1158: while (!quit) {
   23F5                    6849 00111$:
   23F5 AF                 6850 	xor	a,a
   23F6 DD B6 FF           6851 	or	a,-1 (ix)
   23F9 C2rB4s24           6852 	jp	NZ,00113$
                           6853 ;demo.c:1160: if (vbicount >= scenetimings[timeindex+1]) {
   23FC 21rA7s41           6854 	ld	hl,#_timeindex + 0
   23FF 4E                 6855 	ld	c,(hl)
   2400 0C                 6856 	inc	c
   2401 CB 21              6857 	sla	c
   2403 3ErB5              6858 	ld	a,#<_scenetimings
   2405 81                 6859 	add	a,c
   2406 6F                 6860 	ld	l,a
   2407 3Es41              6861 	ld	a,#>_scenetimings
   2409 CE 00              6862 	adc	a,#0x00
   240B 67                 6863 	ld	h,a
   240C 4E                 6864 	ld	c,(hl)
   240D 23                 6865 	inc	hl
   240E 46                 6866 	ld	b,(hl)
   240F 3Ar00s41           6867 	ld	a,(#_vbicount+0)
   2412 91                 6868 	sub	a,c
   2413 3Ar01s41           6869 	ld	a,(#_vbicount+1)
   2416 98                 6870 	sbc	a,b
   2417 FAr40s24           6871 	jp	M,00105$
                           6872 ;demo.c:1161: sceneindex++;
   241A FD 21rA5s41        6873 	ld	iy,#_sceneindex
   241E FD 34 00           6874 	inc	0 (iy)
   2421 20 07              6875 	jr	NZ,00141$
   2423 FD 21rA5s41        6876 	ld	iy,#_sceneindex
   2427 FD 34 01           6877 	inc	1 (iy)
   242A                    6878 00141$:
                           6879 ;demo.c:1162: timeindex+=2;
   242A 21rA7s41           6880 	ld	hl,#_timeindex
   242D 7E                 6881 	ld	a,(hl)
   242E C6 02              6882 	add	a,#0x02
   2430 23                 6883 	inc	hl
   2431 2B                 6884 	dec	hl
   2432 C5                 6885 	push	bc
   2433 4F                 6886 	ld	c, a
   2434 23                 6887 	inc	hl
   2435 7E                 6888 	ld	a, (hl)
   2436 47                 6889 	ld	b, a
   2437 79                 6890 	ld	a, c
   2438 2B                 6891 	dec	hl
   2439 77                 6892 	ld	(hl), a
   243A 78                 6893 	ld	a, b
   243B C1                 6894 	pop	bc
   243C CE 00              6895 	adc	a,#0x00
   243E 23                 6896 	inc	hl
   243F 77                 6897 	ld	(hl),a
   2440                    6898 00105$:
                           6899 ;demo.c:1165: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   2440 21rA7s41           6900 	ld	hl,#_timeindex + 0
   2443 4E                 6901 	ld	c,(hl)
   2444 21rA8s41           6902 	ld	hl,#_timeindex + 1
   2447 46                 6903 	ld	b,(hl)
   2448 CB 21              6904 	sla	c
   244A CB 10              6905 	rl	b
   244C 21rB5s41           6906 	ld	hl,#_scenetimings
   244F 09                 6907 	add	hl,bc
   2450 4E                 6908 	ld	c,(hl)
   2451 23                 6909 	inc	hl
   2452 46                 6910 	ld	b,(hl)
   2453 3Ar00s41           6911 	ld	a,(#_vbicount+0)
   2456 91                 6912 	sub	a,c
   2457 3Ar01s41           6913 	ld	a,(#_vbicount+1)
   245A 98                 6914 	sbc	a,b
   245B FArA0s24           6915 	jp	M,00107$
   245E 21rA7s41           6916 	ld	hl,#_timeindex + 0
   2461 4E                 6917 	ld	c,(hl)
   2462 0C                 6918 	inc	c
   2463 CB 21              6919 	sla	c
   2465 3ErB5              6920 	ld	a,#<_scenetimings
   2467 81                 6921 	add	a,c
   2468 6F                 6922 	ld	l,a
   2469 3Es41              6923 	ld	a,#>_scenetimings
   246B CE 00              6924 	adc	a,#0x00
   246D 67                 6925 	ld	h,a
   246E 4E                 6926 	ld	c,(hl)
   246F 23                 6927 	inc	hl
   2470 46                 6928 	ld	b,(hl)
   2471 3Ar00s41           6929 	ld	a,(#_vbicount+0)
   2474 91                 6930 	sub	a,c
   2475 FD 21r00s41        6931 	ld	iy,#_vbicount
   2479 FD 7E 01           6932 	ld	a,1 (iy)
   247C 98                 6933 	sbc	a,b
   247D F2rA0s24           6934 	jp	P,00107$
                           6935 ;demo.c:1166: waitVB();
   2480 76                 6936 		halt 
                           6937 ;demo.c:1167: scenepointers[sceneindex]();
   2481 21rA5s41           6938 	ld	hl,#_sceneindex + 0
   2484 4E                 6939 	ld	c,(hl)
   2485 FD 21rA5s41        6940 	ld	iy,#_sceneindex
   2489 FD 46 01           6941 	ld	b,1 (iy)
   248C CB 21              6942 	sla	c
   248E CB 10              6943 	rl	b
   2490 21rA9s41           6944 	ld	hl,#_scenepointers
   2493 09                 6945 	add	hl,bc
   2494 4E                 6946 	ld	c,(hl)
   2495 23                 6947 	inc	hl
   2496 46                 6948 	ld	b,(hl)
   2497 C5                 6949 	push	bc
   2498 21r9Fs24           6950 	ld	hl,#00146$
   249B E5                 6951 	push	hl
   249C 69                 6952 	ld	l,c
   249D 60                 6953 	ld	h,b
   249E E9                 6954 	jp	(hl)
   249F                    6955 00146$:
   249F C1                 6956 	pop	bc
   24A0                    6957 00107$:
                           6958 ;demo.c:1169: if(space())
   24A0 21 08 01           6959 	ld	hl,#0x0108
   24A3 E5                 6960 	push	hl
   24A4 CDr00s00           6961 	call	_ispressed
   24A7 F1                 6962 	pop	af
   24A8 AF                 6963 	xor	a,a
   24A9 B5                 6964 	or	a,l
   24AA CArF5s23           6965 	jp	Z,00111$
                           6966 ;demo.c:1170: quit=1;
   24AD DD 36 FF 01        6967 	ld	-1 (ix),#0x01
   24B1 C3rF5s23           6968 	jp	00111$
   24B4                    6969 00113$:
                           6970 ;demo.c:1173: do_quit();
   24B4 CDrD1s20           6971 	call	_do_quit
   24B7 DD F9              6972 	ld	sp,ix
   24B9 DD E1              6973 	pop	ix
   24BB C9                 6974 	ret
   24BC                    6975 _main_end::
   24BC                    6976 __str_14:
   24BC 64 65 6D 6F 20 69  6977 	.ascii "demo init"
        6E 69 74
   24C5 0D                 6978 	.db 0x0D
   24C6 0A                 6979 	.db 0x0A
   24C7 0D                 6980 	.db 0x0D
   24C8 0A                 6981 	.db 0x0A
   24C9 00                 6982 	.db 0x00
   24CA                    6983 __str_15:
   24CA 6D 75 73 69 63 20  6984 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   24D7 00                 6985 	.db 0x00
   24D8                    6986 __str_16:
   24D8 64 6F 6E 65 2E     6987 	.ascii "done."
   24DD 0D                 6988 	.db 0x0D
   24DE 0A                 6989 	.db 0x0A
   24DF 00                 6990 	.db 0x00
   24E0                    6991 __str_17:
   24E0 64 65 74 65 63 74  6992 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   24F5 0D                 6993 	.db 0x0D
   24F6 0A                 6994 	.db 0x0A
   24F7 0D                 6995 	.db 0x0D
   24F8 0A                 6996 	.db 0x0A
   24F9 00                 6997 	.db 0x00
   24FA                    6998 __str_18:
   24FA 76 64 70 32 20 66  6999 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   2515 0D                 7000 	.db 0x0D
   2516 0A                 7001 	.db 0x0A
   2517 0D                 7002 	.db 0x0D
   2518 0A                 7003 	.db 0x0A
   2519 00                 7004 	.db 0x00
   251A                    7005 __str_19:
   251A 20 76 64 70 31 20  7006 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   2526 0D                 7007 	.db 0x0D
   2527 0A                 7008 	.db 0x0A
   2528 53 6F 72 72 79 2C  7009 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   2556 20 56 52 41 4D 2E  7010 	.ascii " VRAM."
   255C 0D                 7011 	.db 0x0D
   255D 0A                 7012 	.db 0x0A
   255E 0D                 7013 	.db 0x0D
   255F 0A                 7014 	.db 0x0A
   2560 00                 7015 	.db 0x00
   2561                    7016 __str_20:
   2561 54 57 49 53 54 45  7017 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   256C 00                 7018 	.db 0x00
   256D                    7019 __str_21:
   256D 4C 46 20 20 20 20  7020 	.ascii "LF      PL5"
        20 20 50 4C 35
   2578 00                 7021 	.db 0x00
   2579                    7022 __str_22:
   2579 42 4F 58 45 53 20  7023 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   2584 00                 7024 	.db 0x00
   2585                    7025 __str_23:
   2585 42 55 4C 42 53 20  7026 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   2590 00                 7027 	.db 0x00
   2591                    7028 __str_24:
   2591 42 55 4C 42 53 20  7029 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   259C 00                 7030 	.db 0x00
   259D                    7031 __str_25:
   259D 54 57 49 53 54 45  7032 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   25A8 00                 7033 	.db 0x00
   25A9                    7034 __str_26:
   25A9 42 4F 58 45 53 20  7035 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   25B4 00                 7036 	.db 0x00
   25B5                    7037 __str_27:
   25B5 44 53 53 4C 4F 47  7038 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   25C0 00                 7039 	.db 0x00
   25C1                    7040 __str_28:
   25C1 44 53 53 4C 4F 47  7041 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   25CC 00                 7042 	.db 0x00
                           7043 	.area _CODE
                           7044 	.area _CABS
