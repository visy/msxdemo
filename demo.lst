                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Sat Mar 24 23:51:19 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _credits
                             15 	.globl _waiter
                             16 	.globl _bigtext
                             17 	.globl _points
                             18 	.globl _logoeffu
                             19 	.globl _abs
                             20 	.globl _tritiles
                             21 	.globl _drawtilescreen_full
                             22 	.globl _drawtilescreen
                             23 	.globl _drawtritile
                             24 	.globl _thewave
                             25 	.globl _boxes
                             26 	.globl _drawbox
                             27 	.globl _animplay
                             28 	.globl _bulbs
                             29 	.globl _twister
                             30 	.globl _font
                             31 	.globl _drawsine
                             32 	.globl _drawstr2x
                             33 	.globl _drawstrslow
                             34 	.globl _drawstr
                             35 	.globl _do_letter_tall
                             36 	.globl _do_letter
                             37 	.globl _do_2xletter
                             38 	.globl _raster_effu
                             39 	.globl _do_blocks
                             40 	.globl _do_ymmm
                             41 	.globl _fadein
                             42 	.globl _pck_load
                             43 	.globl _raw_load
                             44 	.globl _pause
                             45 	.globl _pal_load
                             46 	.globl _scratch_clear
                             47 	.globl _my_isr
                             48 	.globl _isNthBitSet
                             49 	.globl _timeindex
                             50 	.globl _sceneindex
                             51 	.globl _musicstopped
                             52 	.globl _credittimer
                             53 	.globl _initcredits
                             54 	.globl _bigtextp
                             55 	.globl _greetindex
                             56 	.globl _pointframe
                             57 	.globl _initpoints
                             58 	.globl _onceclear
                             59 	.globl _powa
                             60 	.globl _powatick
                             61 	.globl _triframes
                             62 	.globl _tripaltick2
                             63 	.globl _tripaltick
                             64 	.globl _tripal
                             65 	.globl _tiletick
                             66 	.globl _tiley
                             67 	.globl _tilex
                             68 	.globl _tilei
                             69 	.globl _tri_inited
                             70 	.globl _ffa
                             71 	.globl _buf
                             72 	.globl _initwave
                             73 	.globl _prevbox_of
                             74 	.globl _boxes_of
                             75 	.globl _pbt
                             76 	.globl _pbx
                             77 	.globl _bonc
                             78 	.globl _bo
                             79 	.globl _bt
                             80 	.globl _by
                             81 	.globl _bx
                             82 	.globl _boxi
                             83 	.globl _boxes_y
                             84 	.globl _boxes_x
                             85 	.globl _prevy
                             86 	.globl _prevx
                             87 	.globl _buffer
                             88 	.globl _boxes_init
                             89 	.globl _anim_init
                             90 	.globl _sy
                             91 	.globl _enderdir
                             92 	.globl _ender
                             93 	.globl _ff2
                             94 	.globl _ff1
                             95 	.globl _bulbflipper
                             96 	.globl _twinited
                             97 	.globl _ff
                             98 	.globl _slowend
                             99 	.globl _ltrpointer
                            100 	.globl _ly
                            101 	.globl _lx
                            102 	.globl _linenum
                            103 	.globl _flof
                            104 	.globl _btab
                            105 	.globl _bty
                            106 	.globl _btx
                            107 	.globl _bsy
                            108 	.globl _bsx
                            109 	.globl _block_init
                            110 	.globl _cc
                            111 	.globl _yofff
                            112 	.globl _scenetimings
                            113 	.globl _scenepointers
                            114 	.globl _cmd
                            115 	.globl _tick
                            116 	.globl _vbicount
                            117 	.globl _credits_palette
                            118 	.globl _boxes_palette
                            119 	.globl _tf_palette
                            120 	.globl _twister_palette
                            121 	.globl _block_palette
                            122 	.globl _bulbs_palette
                            123 	.globl _cur_palette
                            124 	.globl _scratch
                            125 	.globl _crebuffer3
                            126 	.globl _crebuffer2
                            127 	.globl _crebuffer1
                            128 	.globl _packbuffer
                            129 	.globl _tri_lookup_y
                            130 	.globl _eighttimes
                            131 	.globl _twelvetimes
                            132 	.globl _tri_lookup_x
                            133 	.globl _sintab
                            134 	.globl _font_w
                            135 	.globl _font_y
                            136 	.globl _font_x
                            137 	.globl _tri_inva4
                            138 	.globl _tri_inva3
                            139 	.globl _tri_inva2
                            140 	.globl _tri_inva1
                            141 	.globl _tri_side2
                            142 	.globl _tri_side1
                            143 	.globl _tri_dia
                            144 	.globl _tri_up
                            145 	.globl _tri_center
                            146 	.globl _sintabx
                            147 ;--------------------------------------------------------
                            148 ; special function registers
                            149 ;--------------------------------------------------------
                            150 ;--------------------------------------------------------
                            151 ;  ram data
                            152 ;--------------------------------------------------------
                            153 	.area _DATA
   0000                     154 _sintab::
   0000                     155 	.ds 256
   0100                     156 _tri_lookup_x::
   0100                     157 	.ds 32
   0120                     158 _twelvetimes::
   0120                     159 	.ds 52
   0154                     160 _eighttimes::
   0154                     161 	.ds 52
   0188                     162 _tri_lookup_y::
   0188                     163 	.ds 64
   01C8                     164 _packbuffer::
   01C8                     165 	.ds 4100
   11CC                     166 _crebuffer1::
   11CC                     167 	.ds 3323
   1EC7                     168 _crebuffer2::
   1EC7                     169 	.ds 4724
   313B                     170 _crebuffer3::
   313B                     171 	.ds 3723
   3FC6                     172 _scratch::
   3FC6                     173 	.ds 128
   4046                     174 _cur_palette::
   4046                     175 	.ds 32
   4066                     176 _bulbs_palette::
   4066                     177 	.ds 32
   4086                     178 _block_palette::
   4086                     179 	.ds 32
   40A6                     180 _twister_palette::
   40A6                     181 	.ds 32
   40C6                     182 _tf_palette::
   40C6                     183 	.ds 32
   40E6                     184 _boxes_palette::
   40E6                     185 	.ds 32
   4106                     186 _credits_palette::
   4106                     187 	.ds 32
   4126                     188 _vbicount::
   4126                     189 	.ds 2
   4128                     190 _tick::
   4128                     191 	.ds 2
   412A                     192 _cmd::
   412A                     193 	.ds 15
   4139                     194 _scenepointers::
   4139                     195 	.ds 24
   4151                     196 _scenetimings::
   4151                     197 	.ds 48
   4181                     198 _isNthBitSet_mask_1_1:
   4181                     199 	.ds 8
   4189                     200 _yofff::
   4189                     201 	.ds 1
   418A                     202 _cc::
   418A                     203 	.ds 1
   418B                     204 _flipper:
   418B                     205 	.ds 2
   418D                     206 _ymmmf:
   418D                     207 	.ds 2
   418F                     208 _block_init::
   418F                     209 	.ds 1
   4190                     210 _bsx::
   4190                     211 	.ds 2
   4192                     212 _bsy::
   4192                     213 	.ds 2
   4194                     214 _btx::
   4194                     215 	.ds 2
   4196                     216 _bty::
   4196                     217 	.ds 2
   4198                     218 _btab::
   4198                     219 	.ds 32
   41B8                     220 _flof::
   41B8                     221 	.ds 2
   41BA                     222 _linenum::
   41BA                     223 	.ds 2
   41BC                     224 _lx::
   41BC                     225 	.ds 1
   41BD                     226 _ly::
   41BD                     227 	.ds 1
   41BE                     228 _ltrpointer::
   41BE                     229 	.ds 2
   41C0                     230 _slowend::
   41C0                     231 	.ds 2
   41C2                     232 _ff::
   41C2                     233 	.ds 2
   41C4                     234 _twinited::
   41C4                     235 	.ds 2
   41C6                     236 _bulbflipper::
   41C6                     237 	.ds 2
   41C8                     238 _ff1::
   41C8                     239 	.ds 2
   41CA                     240 _ff2::
   41CA                     241 	.ds 2
   41CC                     242 _ender::
   41CC                     243 	.ds 2
   41CE                     244 _enderdir::
   41CE                     245 	.ds 2
   41D0                     246 _sy::
   41D0                     247 	.ds 2
   41D2                     248 _xo:
   41D2                     249 	.ds 2
   41D4                     250 _yo:
   41D4                     251 	.ds 2
   41D6                     252 _po:
   41D6                     253 	.ds 2
   41D8                     254 _frames:
   41D8                     255 	.ds 2
   41DA                     256 _anim_init::
   41DA                     257 	.ds 2
   41DC                     258 _boxes_init::
   41DC                     259 	.ds 1
   41DD                     260 _buffer::
   41DD                     261 	.ds 2
   41DF                     262 _prevx::
   41DF                     263 	.ds 2
   41E1                     264 _prevy::
   41E1                     265 	.ds 2
   41E3                     266 _boxes_x::
   41E3                     267 	.ds 5
   41E8                     268 _boxes_y::
   41E8                     269 	.ds 10
   41F2                     270 _boxi::
   41F2                     271 	.ds 1
   41F3                     272 _bx::
   41F3                     273 	.ds 2
   41F5                     274 _by::
   41F5                     275 	.ds 2
   41F7                     276 _bt::
   41F7                     277 	.ds 2
   41F9                     278 _bo::
   41F9                     279 	.ds 2
   41FB                     280 _bonc::
   41FB                     281 	.ds 2
   41FD                     282 _pbx::
   41FD                     283 	.ds 2
   41FF                     284 _pbt::
   41FF                     285 	.ds 2
   4201                     286 _boxes_of::
   4201                     287 	.ds 10
   420B                     288 _prevbox_of::
   420B                     289 	.ds 1
   420C                     290 _initwave::
   420C                     291 	.ds 1
   420D                     292 _buf::
   420D                     293 	.ds 2
   420F                     294 _ffa::
   420F                     295 	.ds 2
   4211                     296 _tri_inited::
   4211                     297 	.ds 1
   4212                     298 _tilei::
   4212                     299 	.ds 2
   4214                     300 _tilex::
   4214                     301 	.ds 2
   4216                     302 _tiley::
   4216                     303 	.ds 2
   4218                     304 _tiletick::
   4218                     305 	.ds 1
   4219                     306 _tripal::
   4219                     307 	.ds 9
   4222                     308 _tripaltick::
   4222                     309 	.ds 1
   4223                     310 _tripaltick2::
   4223                     311 	.ds 1
   4224                     312 _triframes::
   4224                     313 	.ds 2
   4226                     314 _powatick::
   4226                     315 	.ds 2
   4228                     316 _powa::
   4228                     317 	.ds 2
   422A                     318 _onceclear::
   422A                     319 	.ds 1
   422B                     320 _initpoints::
   422B                     321 	.ds 1
   422C                     322 _pointframe::
   422C                     323 	.ds 2
   422E                     324 _greetindex::
   422E                     325 	.ds 2
   4230                     326 _bigtextp::
   4230                     327 	.ds 2
   4232                     328 _initcredits::
   4232                     329 	.ds 2
   4234                     330 _credittimer::
   4234                     331 	.ds 2
   4236                     332 _musicstopped::
   4236                     333 	.ds 2
   4238                     334 _sceneindex::
   4238                     335 	.ds 2
   423A                     336 _timeindex::
   423A                     337 	.ds 2
                            338 ;--------------------------------------------------------
                            339 ; overlayable items in  ram 
                            340 ;--------------------------------------------------------
                            341 	.area _OVERLAY
                            342 ;--------------------------------------------------------
                            343 ; external initialized ram data
                            344 ;--------------------------------------------------------
                            345 ;--------------------------------------------------------
                            346 ; global & static initialisations
                            347 ;--------------------------------------------------------
                            348 	.area _HOME
                            349 	.area _GSINIT
                            350 	.area _GSFINAL
                            351 	.area _GSINIT
                            352 ;demo.c:235: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r81s41            353 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            354 	call	__initrleblock
   0006 08                  355 	.db	8
   0007 01 02 04 08 10 20   356 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  357 	.db	0
                            358 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            359 	ld	hl,#_sintab
   0013 CDr00s00            360 	call	__initrleblock
   0016 3B                  361 	.db	59
   0017 00 03 06 09 0C 0F   362 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   363 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   364 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   365 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   366 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   367 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   368 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            369 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               370 	.db	#-5,#0x7E
   0054 01                  371 	.db	1
   0055 7F                  372 	.db	0x7F
   0056 FB 7E               373 	.db	#-5,#0x7E
   0058 75                  374 	.db	117
   0059 7D 7D 7C 7B 7B 7A   375 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   376 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   377 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   378 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   379 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   380 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   381 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   382 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   383 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   384 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   385 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   386 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   387 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   388 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      389 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               390 	.db	#-5,#0x82
   00D0 01                  391 	.db	1
   00D1 81                  392 	.db	0x81
   00D2 FB 82               393 	.db	#-5,#0x82
   00D4 3A                  394 	.db	58
   00D5 83 83 84 85 85 86   395 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   396 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   397 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   398 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   399 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   400 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   401 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               402 	.db	0xFA, 0xFD
   010F 00                  403 	.db	0
                            404 ;demo.c:176: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            405 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            406 	call	__initrleblock
   0116 E0 00               407 	.db	#-32,#0x00
   0118 00                  408 	.db	0
                            409 ;demo.c:177: int twelvetimes[26] = { 0 };
   0119 21r20s01            410 	ld	hl,#_twelvetimes
   011C CDr00s00            411 	call	__initrleblock
   011F CC 00               412 	.db	#-52,#0x00
   0121 00                  413 	.db	0
                            414 ;demo.c:178: int eighttimes[26] = { 0 };
   0122 21r54s01            415 	ld	hl,#_eighttimes
   0125 CDr00s00            416 	call	__initrleblock
   0128 CC 00               417 	.db	#-52,#0x00
   012A 00                  418 	.db	0
                            419 ;demo.c:180: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            420 	ld	hl,#_tri_lookup_y
   012E CDr00s00            421 	call	__initrleblock
   0131 C0 00               422 	.db	#-64,#0x00
   0133 00                  423 	.db	0
                            424 ;demo.c:182: uint8_t packbuffer[4100] = {0};
   0134 21rC8s01            425 	ld	hl,#_packbuffer
   0137 CDr00s00            426 	call	__initrleblock
   013A 81 00               427 	.db	#-127,#0x00
   013C 81 00               428 	.db	#-127,#0x00
   013E 81 00               429 	.db	#-127,#0x00
   0140 81 00               430 	.db	#-127,#0x00
   0142 81 00               431 	.db	#-127,#0x00
   0144 81 00               432 	.db	#-127,#0x00
   0146 81 00               433 	.db	#-127,#0x00
   0148 81 00               434 	.db	#-127,#0x00
   014A 81 00               435 	.db	#-127,#0x00
   014C 81 00               436 	.db	#-127,#0x00
   014E 81 00               437 	.db	#-127,#0x00
   0150 81 00               438 	.db	#-127,#0x00
   0152 81 00               439 	.db	#-127,#0x00
   0154 81 00               440 	.db	#-127,#0x00
   0156 81 00               441 	.db	#-127,#0x00
   0158 81 00               442 	.db	#-127,#0x00
   015A 81 00               443 	.db	#-127,#0x00
   015C 81 00               444 	.db	#-127,#0x00
   015E 81 00               445 	.db	#-127,#0x00
   0160 81 00               446 	.db	#-127,#0x00
   0162 81 00               447 	.db	#-127,#0x00
   0164 81 00               448 	.db	#-127,#0x00
   0166 81 00               449 	.db	#-127,#0x00
   0168 81 00               450 	.db	#-127,#0x00
   016A 81 00               451 	.db	#-127,#0x00
   016C 81 00               452 	.db	#-127,#0x00
   016E 81 00               453 	.db	#-127,#0x00
   0170 81 00               454 	.db	#-127,#0x00
   0172 81 00               455 	.db	#-127,#0x00
   0174 81 00               456 	.db	#-127,#0x00
   0176 81 00               457 	.db	#-127,#0x00
   0178 81 00               458 	.db	#-127,#0x00
   017A DC 00               459 	.db	#-36,#0x00
   017C 00                  460 	.db	0
                            461 ;demo.c:184: uint8_t crebuffer1[3323] = {0};
   017D 21rCCs11            462 	ld	hl,#_crebuffer1
   0180 CDr00s00            463 	call	__initrleblock
   0183 81 00               464 	.db	#-127,#0x00
   0185 81 00               465 	.db	#-127,#0x00
   0187 81 00               466 	.db	#-127,#0x00
   0189 81 00               467 	.db	#-127,#0x00
   018B 81 00               468 	.db	#-127,#0x00
   018D 81 00               469 	.db	#-127,#0x00
   018F 81 00               470 	.db	#-127,#0x00
   0191 81 00               471 	.db	#-127,#0x00
   0193 81 00               472 	.db	#-127,#0x00
   0195 81 00               473 	.db	#-127,#0x00
   0197 81 00               474 	.db	#-127,#0x00
   0199 81 00               475 	.db	#-127,#0x00
   019B 81 00               476 	.db	#-127,#0x00
   019D 81 00               477 	.db	#-127,#0x00
   019F 81 00               478 	.db	#-127,#0x00
   01A1 81 00               479 	.db	#-127,#0x00
   01A3 81 00               480 	.db	#-127,#0x00
   01A5 81 00               481 	.db	#-127,#0x00
   01A7 81 00               482 	.db	#-127,#0x00
   01A9 81 00               483 	.db	#-127,#0x00
   01AB 81 00               484 	.db	#-127,#0x00
   01AD 81 00               485 	.db	#-127,#0x00
   01AF 81 00               486 	.db	#-127,#0x00
   01B1 81 00               487 	.db	#-127,#0x00
   01B3 81 00               488 	.db	#-127,#0x00
   01B5 81 00               489 	.db	#-127,#0x00
   01B7 EB 00               490 	.db	#-21,#0x00
   01B9 00                  491 	.db	0
                            492 ;demo.c:185: uint8_t crebuffer2[4724] = {0};
   01BA 21rC7s1E            493 	ld	hl,#_crebuffer2
   01BD CDr00s00            494 	call	__initrleblock
   01C0 81 00               495 	.db	#-127,#0x00
   01C2 81 00               496 	.db	#-127,#0x00
   01C4 81 00               497 	.db	#-127,#0x00
   01C6 81 00               498 	.db	#-127,#0x00
   01C8 81 00               499 	.db	#-127,#0x00
   01CA 81 00               500 	.db	#-127,#0x00
   01CC 81 00               501 	.db	#-127,#0x00
   01CE 81 00               502 	.db	#-127,#0x00
   01D0 81 00               503 	.db	#-127,#0x00
   01D2 81 00               504 	.db	#-127,#0x00
   01D4 81 00               505 	.db	#-127,#0x00
   01D6 81 00               506 	.db	#-127,#0x00
   01D8 81 00               507 	.db	#-127,#0x00
   01DA 81 00               508 	.db	#-127,#0x00
   01DC 81 00               509 	.db	#-127,#0x00
   01DE 81 00               510 	.db	#-127,#0x00
   01E0 81 00               511 	.db	#-127,#0x00
   01E2 81 00               512 	.db	#-127,#0x00
   01E4 81 00               513 	.db	#-127,#0x00
   01E6 81 00               514 	.db	#-127,#0x00
   01E8 81 00               515 	.db	#-127,#0x00
   01EA 81 00               516 	.db	#-127,#0x00
   01EC 81 00               517 	.db	#-127,#0x00
   01EE 81 00               518 	.db	#-127,#0x00
   01F0 81 00               519 	.db	#-127,#0x00
   01F2 81 00               520 	.db	#-127,#0x00
   01F4 81 00               521 	.db	#-127,#0x00
   01F6 81 00               522 	.db	#-127,#0x00
   01F8 81 00               523 	.db	#-127,#0x00
   01FA 81 00               524 	.db	#-127,#0x00
   01FC 81 00               525 	.db	#-127,#0x00
   01FE 81 00               526 	.db	#-127,#0x00
   0200 81 00               527 	.db	#-127,#0x00
   0202 81 00               528 	.db	#-127,#0x00
   0204 81 00               529 	.db	#-127,#0x00
   0206 81 00               530 	.db	#-127,#0x00
   0208 81 00               531 	.db	#-127,#0x00
   020A E7 00               532 	.db	#-25,#0x00
   020C 00                  533 	.db	0
                            534 ;demo.c:186: uint8_t crebuffer3[3723] = {0};
   020D 21r3Bs31            535 	ld	hl,#_crebuffer3
   0210 CDr00s00            536 	call	__initrleblock
   0213 81 00               537 	.db	#-127,#0x00
   0215 81 00               538 	.db	#-127,#0x00
   0217 81 00               539 	.db	#-127,#0x00
   0219 81 00               540 	.db	#-127,#0x00
   021B 81 00               541 	.db	#-127,#0x00
   021D 81 00               542 	.db	#-127,#0x00
   021F 81 00               543 	.db	#-127,#0x00
   0221 81 00               544 	.db	#-127,#0x00
   0223 81 00               545 	.db	#-127,#0x00
   0225 81 00               546 	.db	#-127,#0x00
   0227 81 00               547 	.db	#-127,#0x00
   0229 81 00               548 	.db	#-127,#0x00
   022B 81 00               549 	.db	#-127,#0x00
   022D 81 00               550 	.db	#-127,#0x00
   022F 81 00               551 	.db	#-127,#0x00
   0231 81 00               552 	.db	#-127,#0x00
   0233 81 00               553 	.db	#-127,#0x00
   0235 81 00               554 	.db	#-127,#0x00
   0237 81 00               555 	.db	#-127,#0x00
   0239 81 00               556 	.db	#-127,#0x00
   023B 81 00               557 	.db	#-127,#0x00
   023D 81 00               558 	.db	#-127,#0x00
   023F 81 00               559 	.db	#-127,#0x00
   0241 81 00               560 	.db	#-127,#0x00
   0243 81 00               561 	.db	#-127,#0x00
   0245 81 00               562 	.db	#-127,#0x00
   0247 81 00               563 	.db	#-127,#0x00
   0249 81 00               564 	.db	#-127,#0x00
   024B 81 00               565 	.db	#-127,#0x00
   024D D8 00               566 	.db	#-40,#0x00
   024F 00                  567 	.db	0
                            568 ;demo.c:198: volatile int vbicount=0;
   0250 FD 21r26s41         569 	ld	iy,#_vbicount
   0254 FD 36 00 00         570 	ld	0 (iy),#0x00
   0258 FD 21r26s41         571 	ld	iy,#_vbicount
   025C FD 36 01 00         572 	ld	1 (iy),#0x00
                            573 ;demo.c:199: volatile int tick=0;
   0260 FD 21r28s41         574 	ld	iy,#_tick
   0264 FD 36 00 00         575 	ld	0 (iy),#0x00
   0268 FD 21r28s41         576 	ld	iy,#_tick
   026C FD 36 01 00         577 	ld	1 (iy),#0x00
                            578 ;demo.c:204: void (*scenepointers[12])() = {
   0270 21r39s41            579 	ld	hl,#_scenepointers
   0273 36rD5               580 	ld	(hl),#<_waiter
   0275 23                  581 	inc	hl
   0276 36s37               582 	ld	(hl),#>_waiter
   0278 21r3Bs41            583 	ld	hl, #_scenepointers + 2
   027B 36r90               584 	ld	(hl),#<_logoeffu
   027D 23                  585 	inc	hl
   027E 36s2A               586 	ld	(hl),#>_logoeffu
   0280 01r3Ds41            587 	ld	bc,#_scenepointers + 4
   0283 69                  588 	ld	l,c
   0284 60                  589 	ld	h,b
   0285 36r83               590 	ld	(hl),#<_bulbs
   0287 23                  591 	inc	hl
   0288 36s14               592 	ld	(hl),#>_bulbs
   028A 21r3Fs41            593 	ld	hl, #_scenepointers + 6
   028D 36rE6               594 	ld	(hl),#<_twister
   028F 23                  595 	inc	hl
   0290 36s12               596 	ld	(hl),#>_twister
   0292 01r41s41            597 	ld	bc,#_scenepointers + 8
   0295 69                  598 	ld	l,c
   0296 60                  599 	ld	h,b
   0297 36r71               600 	ld	(hl),#<_boxes
   0299 23                  601 	inc	hl
   029A 36s17               602 	ld	(hl),#>_boxes
   029C 21r43s41            603 	ld	hl, #_scenepointers + 10
   029F 36r22               604 	ld	(hl),#<_thewave
   02A1 23                  605 	inc	hl
   02A2 36s1C               606 	ld	(hl),#>_thewave
   02A4 21r45s41            607 	ld	hl, #_scenepointers + 12
   02A7 36r43               608 	ld	(hl),#<_tritiles
   02A9 23                  609 	inc	hl
   02AA 36s24               610 	ld	(hl),#>_tritiles
   02AC 21r47s41            611 	ld	hl, #_scenepointers + 14
   02AF 36r3F               612 	ld	(hl),#<_points
   02B1 23                  613 	inc	hl
   02B2 36s2C               614 	ld	(hl),#>_points
   02B4 01r49s41            615 	ld	bc,#_scenepointers + 16
   02B7 69                  616 	ld	l,c
   02B8 60                  617 	ld	h,b
   02B9 36r1F               618 	ld	(hl),#<_bigtext
   02BB 23                  619 	inc	hl
   02BC 36s30               620 	ld	(hl),#>_bigtext
   02BE 01r4Bs41            621 	ld	bc,#_scenepointers + 18
   02C1 69                  622 	ld	l,c
   02C2 60                  623 	ld	h,b
   02C3 36rD6               624 	ld	(hl),#<_credits
   02C5 23                  625 	inc	hl
   02C6 36s37               626 	ld	(hl),#>_credits
   02C8 01r4Ds41            627 	ld	bc,#_scenepointers + 20
   02CB 69                  628 	ld	l,c
   02CC 60                  629 	ld	h,b
   02CD 36r53               630 	ld	(hl),#<_do_quit
   02CF 23                  631 	inc	hl
   02D0 36s39               632 	ld	(hl),#>_do_quit
                            633 ;demo.c:218: int scenetimings[24] = {
   02D2 21r51s41            634 	ld	hl,#_scenetimings
   02D5 CDr00s00            635 	call	__initrleblock
   02D8 30                  636 	.db	48
   02D9 00 00 AA 00 AA 00   637 	.db	0x00, 0x00, 0xAA, 0x00, 0xAA, 0x00, 0x5E, 0x01
        5E 01
   02E1 EE 02 14 05 14 05   638 	.db	0xEE, 0x02, 0x14, 0x05, 0x14, 0x05, 0xFC, 0x08
        FC 08
   02E9 FC 08 10 0E 10 0E   639 	.db	0xFC, 0x08, 0x10, 0x0E, 0x10, 0x0E, 0x04, 0x10
        04 10
   02F1 04 10 AE 15 AE 15   640 	.db	0x04, 0x10, 0xAE, 0x15, 0xAE, 0x15, 0xD4, 0x17
        D4 17
   02F9 D4 17 F5 23 F5 23   641 	.db	0xD4, 0x17, 0xF5, 0x23, 0xF5, 0x23, 0x74, 0x27
        74 27
   0301 74 27 A0 86 00 00   642 	.db	0x74, 0x27, 0xA0, 0x86, 0x00, 0x00, 0x00, 0x00
        00 00
   0309 00                  643 	.db	0
                            644 ;demo.c:378: uint8_t yofff = 0;
   030A FD 21r89s41         645 	ld	iy,#_yofff
   030E FD 36 00 00         646 	ld	0 (iy),#0x00
                            647 ;demo.c:379: uint8_t cc = 0;
   0312 FD 21r8As41         648 	ld	iy,#_cc
   0316 FD 36 00 00         649 	ld	0 (iy),#0x00
                            650 ;demo.c:380: static int flipper = 0;
   031A FD 21r8Bs41         651 	ld	iy,#_flipper
   031E FD 36 00 00         652 	ld	0 (iy),#0x00
   0322 FD 21r8Bs41         653 	ld	iy,#_flipper
   0326 FD 36 01 00         654 	ld	1 (iy),#0x00
                            655 ;demo.c:381: static int ymmmf = 0;
   032A FD 21r8Ds41         656 	ld	iy,#_ymmmf
   032E FD 36 00 00         657 	ld	0 (iy),#0x00
   0332 FD 21r8Ds41         658 	ld	iy,#_ymmmf
   0336 FD 36 01 00         659 	ld	1 (iy),#0x00
                            660 ;demo.c:386: char block_init = 0;
   033A FD 21r8Fs41         661 	ld	iy,#_block_init
   033E FD 36 00 00         662 	ld	0 (iy),#0x00
                            663 ;demo.c:388: int bsx = 0;
   0342 FD 21r90s41         664 	ld	iy,#_bsx
   0346 FD 36 00 00         665 	ld	0 (iy),#0x00
   034A FD 21r90s41         666 	ld	iy,#_bsx
   034E FD 36 01 00         667 	ld	1 (iy),#0x00
                            668 ;demo.c:389: int bsy = 0;
   0352 FD 21r92s41         669 	ld	iy,#_bsy
   0356 FD 36 00 00         670 	ld	0 (iy),#0x00
   035A FD 21r92s41         671 	ld	iy,#_bsy
   035E FD 36 01 00         672 	ld	1 (iy),#0x00
                            673 ;demo.c:390: int btx = 0;
   0362 FD 21r94s41         674 	ld	iy,#_btx
   0366 FD 36 00 00         675 	ld	0 (iy),#0x00
   036A FD 21r94s41         676 	ld	iy,#_btx
   036E FD 36 01 00         677 	ld	1 (iy),#0x00
                            678 ;demo.c:391: int bty = 0;
   0372 FD 21r96s41         679 	ld	iy,#_bty
   0376 FD 36 00 00         680 	ld	0 (iy),#0x00
   037A FD 21r96s41         681 	ld	iy,#_bty
   037E FD 36 01 00         682 	ld	1 (iy),#0x00
                            683 ;demo.c:393: int btab[16] = {0};
   0382 21r98s41            684 	ld	hl,#_btab
   0385 CDr00s00            685 	call	__initrleblock
   0388 E0 00               686 	.db	#-32,#0x00
   038A 00                  687 	.db	0
                            688 ;demo.c:395: int flof = 0;
   038B FD 21rB8s41         689 	ld	iy,#_flof
   038F FD 36 00 00         690 	ld	0 (iy),#0x00
   0393 FD 21rB8s41         691 	ld	iy,#_flof
   0397 FD 36 01 00         692 	ld	1 (iy),#0x00
                            693 ;demo.c:400: int linenum = 0;
   039B FD 21rBAs41         694 	ld	iy,#_linenum
   039F FD 36 00 00         695 	ld	0 (iy),#0x00
   03A3 FD 21rBAs41         696 	ld	iy,#_linenum
   03A7 FD 36 01 00         697 	ld	1 (iy),#0x00
                            698 ;demo.c:430: uint8_t lx = 0;
   03AB FD 21rBCs41         699 	ld	iy,#_lx
   03AF FD 36 00 00         700 	ld	0 (iy),#0x00
                            701 ;demo.c:431: uint8_t ly = 0;
   03B3 FD 21rBDs41         702 	ld	iy,#_ly
   03B7 FD 36 00 00         703 	ld	0 (iy),#0x00
                            704 ;demo.c:516: int ltrpointer = 0;
   03BB FD 21rBEs41         705 	ld	iy,#_ltrpointer
   03BF FD 36 00 00         706 	ld	0 (iy),#0x00
   03C3 FD 21rBEs41         707 	ld	iy,#_ltrpointer
   03C7 FD 36 01 00         708 	ld	1 (iy),#0x00
                            709 ;demo.c:517: int slowend = 128;
   03CB FD 21rC0s41         710 	ld	iy,#_slowend
   03CF FD 36 00 80         711 	ld	0 (iy),#0x80
   03D3 FD 21rC0s41         712 	ld	iy,#_slowend
   03D7 FD 36 01 00         713 	ld	1 (iy),#0x00
                            714 ;demo.c:569: int ff = 0;
   03DB FD 21rC2s41         715 	ld	iy,#_ff
   03DF FD 36 00 00         716 	ld	0 (iy),#0x00
   03E3 FD 21rC2s41         717 	ld	iy,#_ff
   03E7 FD 36 01 00         718 	ld	1 (iy),#0x00
                            719 ;demo.c:570: int twinited = 0;
   03EB FD 21rC4s41         720 	ld	iy,#_twinited
   03EF FD 36 00 00         721 	ld	0 (iy),#0x00
   03F3 FD 21rC4s41         722 	ld	iy,#_twinited
   03F7 FD 36 01 00         723 	ld	1 (iy),#0x00
                            724 ;demo.c:622: int bulbflipper = 1;
   03FB FD 21rC6s41         725 	ld	iy,#_bulbflipper
   03FF FD 36 00 01         726 	ld	0 (iy),#0x01
   0403 FD 21rC6s41         727 	ld	iy,#_bulbflipper
   0407 FD 36 01 00         728 	ld	1 (iy),#0x00
                            729 ;demo.c:624: int ff1,ff2 = 0;
   040B FD 21rCAs41         730 	ld	iy,#_ff2
   040F FD 36 00 00         731 	ld	0 (iy),#0x00
   0413 FD 21rCAs41         732 	ld	iy,#_ff2
   0417 FD 36 01 00         733 	ld	1 (iy),#0x00
                            734 ;demo.c:625: int ender = 212;
   041B FD 21rCCs41         735 	ld	iy,#_ender
   041F FD 36 00 D4         736 	ld	0 (iy),#0xD4
   0423 FD 21rCCs41         737 	ld	iy,#_ender
   0427 FD 36 01 00         738 	ld	1 (iy),#0x00
                            739 ;demo.c:626: int enderdir = -1;
   042B FD 21rCEs41         740 	ld	iy,#_enderdir
   042F FD 36 00 FF         741 	ld	0 (iy),#0xFF
   0433 FD 21rCEs41         742 	ld	iy,#_enderdir
   0437 FD 36 01 FF         743 	ld	1 (iy),#0xFF
                            744 ;demo.c:627: int sy = 16;
   043B FD 21rD0s41         745 	ld	iy,#_sy
   043F FD 36 00 10         746 	ld	0 (iy),#0x10
   0443 FD 21rD0s41         747 	ld	iy,#_sy
   0447 FD 36 01 00         748 	ld	1 (iy),#0x00
                            749 ;demo.c:683: static int xo = 0;
   044B FD 21rD2s41         750 	ld	iy,#_xo
   044F FD 36 00 00         751 	ld	0 (iy),#0x00
   0453 FD 21rD2s41         752 	ld	iy,#_xo
   0457 FD 36 01 00         753 	ld	1 (iy),#0x00
                            754 ;demo.c:684: static int yo = 0;
   045B FD 21rD4s41         755 	ld	iy,#_yo
   045F FD 36 00 00         756 	ld	0 (iy),#0x00
   0463 FD 21rD4s41         757 	ld	iy,#_yo
   0467 FD 36 01 00         758 	ld	1 (iy),#0x00
                            759 ;demo.c:685: static int po = 0;
   046B FD 21rD6s41         760 	ld	iy,#_po
   046F FD 36 00 00         761 	ld	0 (iy),#0x00
   0473 FD 21rD6s41         762 	ld	iy,#_po
   0477 FD 36 01 00         763 	ld	1 (iy),#0x00
                            764 ;demo.c:686: static int frames = 0;
   047B FD 21rD8s41         765 	ld	iy,#_frames
   047F FD 36 00 00         766 	ld	0 (iy),#0x00
   0483 FD 21rD8s41         767 	ld	iy,#_frames
   0487 FD 36 01 00         768 	ld	1 (iy),#0x00
                            769 ;demo.c:688: int anim_init = 0;
   048B FD 21rDAs41         770 	ld	iy,#_anim_init
   048F FD 36 00 00         771 	ld	0 (iy),#0x00
   0493 FD 21rDAs41         772 	ld	iy,#_anim_init
   0497 FD 36 01 00         773 	ld	1 (iy),#0x00
                            774 ;demo.c:694: uint8_t boxes_init = 0;
   049B FD 21rDCs41         775 	ld	iy,#_boxes_init
   049F FD 36 00 00         776 	ld	0 (iy),#0x00
                            777 ;demo.c:695: int buffer = 1;
   04A3 FD 21rDDs41         778 	ld	iy,#_buffer
   04A7 FD 36 00 01         779 	ld	0 (iy),#0x01
   04AB FD 21rDDs41         780 	ld	iy,#_buffer
   04AF FD 36 01 00         781 	ld	1 (iy),#0x00
                            782 ;demo.c:696: int prevx = -1;
   04B3 FD 21rDFs41         783 	ld	iy,#_prevx
   04B7 FD 36 00 FF         784 	ld	0 (iy),#0xFF
   04BB FD 21rDFs41         785 	ld	iy,#_prevx
   04BF FD 36 01 FF         786 	ld	1 (iy),#0xFF
                            787 ;demo.c:698: uint8_t boxes_x[5] = {0,36,0,36,0};
   04C3 21rE3s41            788 	ld	hl,#_boxes_x
   04C6 CDr00s00            789 	call	__initrleblock
   04C9 05                  790 	.db	5
   04CA 00 24 00 24 00      791 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   04CF 00                  792 	.db	0
                            793 ;demo.c:699: int boxes_y[5] = {768,768,768+36,768+36,0};
   04D0 21rE8s41            794 	ld	hl,#_boxes_y
   04D3 CDr00s00            795 	call	__initrleblock
   04D6 0A                  796 	.db	10
   04D7 00 03 00 03 24 03   797 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   04DF 00 00               798 	.db	0x00, 0x00
   04E1 00                  799 	.db	0
                            800 ;demo.c:700: uint8_t boxi = 0;
   04E2 FD 21rF2s41         801 	ld	iy,#_boxi
   04E6 FD 36 00 00         802 	ld	0 (iy),#0x00
                            803 ;demo.c:701: int bx = 220;
   04EA FD 21rF3s41         804 	ld	iy,#_bx
   04EE FD 36 00 DC         805 	ld	0 (iy),#0xDC
   04F2 FD 21rF3s41         806 	ld	iy,#_bx
   04F6 FD 36 01 00         807 	ld	1 (iy),#0x00
                            808 ;demo.c:702: int by = 84;
   04FA FD 21rF5s41         809 	ld	iy,#_by
   04FE FD 36 00 54         810 	ld	0 (iy),#0x54
   0502 FD 21rF5s41         811 	ld	iy,#_by
   0506 FD 36 01 00         812 	ld	1 (iy),#0x00
                            813 ;demo.c:720: int bt = 0;
   050A FD 21rF7s41         814 	ld	iy,#_bt
   050E FD 36 00 00         815 	ld	0 (iy),#0x00
   0512 FD 21rF7s41         816 	ld	iy,#_bt
   0516 FD 36 01 00         817 	ld	1 (iy),#0x00
                            818 ;demo.c:721: int bo = 0;
   051A FD 21rF9s41         819 	ld	iy,#_bo
   051E FD 36 00 00         820 	ld	0 (iy),#0x00
   0522 FD 21rF9s41         821 	ld	iy,#_bo
   0526 FD 36 01 00         822 	ld	1 (iy),#0x00
                            823 ;demo.c:723: int bonc = 0;
   052A FD 21rFBs41         824 	ld	iy,#_bonc
   052E FD 36 00 00         825 	ld	0 (iy),#0x00
   0532 FD 21rFBs41         826 	ld	iy,#_bonc
   0536 FD 36 01 00         827 	ld	1 (iy),#0x00
                            828 ;demo.c:724: int pbx = 0;
   053A FD 21rFDs41         829 	ld	iy,#_pbx
   053E FD 36 00 00         830 	ld	0 (iy),#0x00
   0542 FD 21rFDs41         831 	ld	iy,#_pbx
   0546 FD 36 01 00         832 	ld	1 (iy),#0x00
                            833 ;demo.c:725: int pbt = 0;
   054A FD 21rFFs41         834 	ld	iy,#_pbt
   054E FD 36 00 00         835 	ld	0 (iy),#0x00
   0552 FD 21rFFs41         836 	ld	iy,#_pbt
   0556 FD 36 01 00         837 	ld	1 (iy),#0x00
                            838 ;demo.c:727: int boxes_of[5] = {0,0,6,0,0};
   055A 21r01s42            839 	ld	hl,#_boxes_of
   055D CDr00s00            840 	call	__initrleblock
   0560 05                  841 	.db	5
   0561 00 00 00 00 06      842 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0566 FB 00               843 	.db	#-5,#0x00
   0568 00                  844 	.db	0
                            845 ;demo.c:728: uint8_t prevbox_of = 0;
   0569 FD 21r0Bs42         846 	ld	iy,#_prevbox_of
   056D FD 36 00 00         847 	ld	0 (iy),#0x00
                            848 ;demo.c:845: uint8_t initwave = 0;
   0571 FD 21r0Cs42         849 	ld	iy,#_initwave
   0575 FD 36 00 00         850 	ld	0 (iy),#0x00
                            851 ;demo.c:846: int buf = -1;
   0579 FD 21r0Ds42         852 	ld	iy,#_buf
   057D FD 36 00 FF         853 	ld	0 (iy),#0xFF
   0581 FD 21r0Ds42         854 	ld	iy,#_buf
   0585 FD 36 01 FF         855 	ld	1 (iy),#0xFF
                            856 ;demo.c:847: int ffa = 0;
   0589 FD 21r0Fs42         857 	ld	iy,#_ffa
   058D FD 36 00 00         858 	ld	0 (iy),#0x00
   0591 FD 21r0Fs42         859 	ld	iy,#_ffa
   0595 FD 36 01 00         860 	ld	1 (iy),#0x00
                            861 ;demo.c:969: uint8_t tri_inited = 0;
   0599 FD 21r11s42         862 	ld	iy,#_tri_inited
   059D FD 36 00 00         863 	ld	0 (iy),#0x00
                            864 ;demo.c:984: int tilei = 0;
   05A1 FD 21r12s42         865 	ld	iy,#_tilei
   05A5 FD 36 00 00         866 	ld	0 (iy),#0x00
   05A9 FD 21r12s42         867 	ld	iy,#_tilei
   05AD FD 36 01 00         868 	ld	1 (iy),#0x00
                            869 ;demo.c:985: int tilex = 0;
   05B1 FD 21r14s42         870 	ld	iy,#_tilex
   05B5 FD 36 00 00         871 	ld	0 (iy),#0x00
   05B9 FD 21r14s42         872 	ld	iy,#_tilex
   05BD FD 36 01 00         873 	ld	1 (iy),#0x00
                            874 ;demo.c:986: int tiley = 0;
   05C1 FD 21r16s42         875 	ld	iy,#_tiley
   05C5 FD 36 00 00         876 	ld	0 (iy),#0x00
   05C9 FD 21r16s42         877 	ld	iy,#_tiley
   05CD FD 36 01 00         878 	ld	1 (iy),#0x00
                            879 ;demo.c:987: uint8_t tiletick = 0;
   05D1 FD 21r18s42         880 	ld	iy,#_tiletick
   05D5 FD 36 00 00         881 	ld	0 (iy),#0x00
                            882 ;demo.c:1017: char tripal[9] = {
   05D9 21r19s42            883 	ld	hl,#_tripal
   05DC CDr00s00            884 	call	__initrleblock
   05DF 09                  885 	.db	9
   05E0 02 02 01 01 02 03   886 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   05E8 02                  887 	.db	0x02
   05E9 00                  888 	.db	0
                            889 ;demo.c:1023: uint8_t tripaltick = 0;
   05EA FD 21r22s42         890 	ld	iy,#_tripaltick
   05EE FD 36 00 00         891 	ld	0 (iy),#0x00
                            892 ;demo.c:1024: uint8_t tripaltick2 = 0;
   05F2 FD 21r23s42         893 	ld	iy,#_tripaltick2
   05F6 FD 36 00 00         894 	ld	0 (iy),#0x00
                            895 ;demo.c:1026: int triframes = 0;
   05FA FD 21r24s42         896 	ld	iy,#_triframes
   05FE FD 36 00 00         897 	ld	0 (iy),#0x00
   0602 FD 21r24s42         898 	ld	iy,#_triframes
   0606 FD 36 01 00         899 	ld	1 (iy),#0x00
                            900 ;demo.c:1180: int powatick = 0;
   060A FD 21r26s42         901 	ld	iy,#_powatick
   060E FD 36 00 00         902 	ld	0 (iy),#0x00
   0612 FD 21r26s42         903 	ld	iy,#_powatick
   0616 FD 36 01 00         904 	ld	1 (iy),#0x00
                            905 ;demo.c:1181: int powa = 0;
   061A FD 21r28s42         906 	ld	iy,#_powa
   061E FD 36 00 00         907 	ld	0 (iy),#0x00
   0622 FD 21r28s42         908 	ld	iy,#_powa
   0626 FD 36 01 00         909 	ld	1 (iy),#0x00
                            910 ;demo.c:1182: uint8_t onceclear = 255;
   062A FD 21r2As42         911 	ld	iy,#_onceclear
   062E FD 36 00 FF         912 	ld	0 (iy),#0xFF
                            913 ;demo.c:1227: uint8_t initpoints = 0;
   0632 FD 21r2Bs42         914 	ld	iy,#_initpoints
   0636 FD 36 00 00         915 	ld	0 (iy),#0x00
                            916 ;demo.c:1228: int pointframe = 0;
   063A FD 21r2Cs42         917 	ld	iy,#_pointframe
   063E FD 36 00 00         918 	ld	0 (iy),#0x00
   0642 FD 21r2Cs42         919 	ld	iy,#_pointframe
   0646 FD 36 01 00         920 	ld	1 (iy),#0x00
                            921 ;demo.c:1231: int greetindex = 0;
   064A FD 21r2Es42         922 	ld	iy,#_greetindex
   064E FD 36 00 00         923 	ld	0 (iy),#0x00
   0652 FD 21r2Es42         924 	ld	iy,#_greetindex
   0656 FD 36 01 00         925 	ld	1 (iy),#0x00
                            926 ;demo.c:1326: int bigtextp = 0;
   065A FD 21r30s42         927 	ld	iy,#_bigtextp
   065E FD 36 00 00         928 	ld	0 (iy),#0x00
   0662 FD 21r30s42         929 	ld	iy,#_bigtextp
   0666 FD 36 01 00         930 	ld	1 (iy),#0x00
                            931 ;demo.c:1509: int initcredits = 0;
   066A FD 21r32s42         932 	ld	iy,#_initcredits
   066E FD 36 00 00         933 	ld	0 (iy),#0x00
   0672 FD 21r32s42         934 	ld	iy,#_initcredits
   0676 FD 36 01 00         935 	ld	1 (iy),#0x00
                            936 ;demo.c:1510: int credittimer = 0;
   067A FD 21r34s42         937 	ld	iy,#_credittimer
   067E FD 36 00 00         938 	ld	0 (iy),#0x00
   0682 FD 21r34s42         939 	ld	iy,#_credittimer
   0686 FD 36 01 00         940 	ld	1 (iy),#0x00
                            941 ;demo.c:1511: int musicstopped = 0;
   068A FD 21r36s42         942 	ld	iy,#_musicstopped
   068E FD 36 00 00         943 	ld	0 (iy),#0x00
   0692 FD 21r36s42         944 	ld	iy,#_musicstopped
   0696 FD 36 01 00         945 	ld	1 (iy),#0x00
                            946 ;demo.c:1594: int sceneindex = 0;
   069A FD 21r38s42         947 	ld	iy,#_sceneindex
   069E FD 36 00 00         948 	ld	0 (iy),#0x00
   06A2 FD 21r38s42         949 	ld	iy,#_sceneindex
   06A6 FD 36 01 00         950 	ld	1 (iy),#0x00
                            951 ;demo.c:1595: int timeindex = 0;
   06AA FD 21r3As42         952 	ld	iy,#_timeindex
   06AE FD 36 00 00         953 	ld	0 (iy),#0x00
   06B2 FD 21r3As42         954 	ld	iy,#_timeindex
   06B6 FD 36 01 00         955 	ld	1 (iy),#0x00
                            956 ;--------------------------------------------------------
                            957 ; Home
                            958 ;--------------------------------------------------------
                            959 	.area _HOME
                            960 	.area _HOME
                            961 ;--------------------------------------------------------
                            962 ; code
                            963 ;--------------------------------------------------------
                            964 	.area _CODE
                            965 ;demo.c:234: int isNthBitSet (unsigned char c, int n) {
                            966 ;	---------------------------------
                            967 ; Function isNthBitSet
                            968 ; ---------------------------------
   0000                     969 _isNthBitSet_start::
   0000                     970 _isNthBitSet:
   0000 DD E5               971 	push	ix
   0002 DD 21 00 00         972 	ld	ix,#0
   0006 DD 39               973 	add	ix,sp
                            974 ;demo.c:236: return ((c & mask[n]) != 0);
   0008 3Er81               975 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            976 	add	a,5 (ix)
   000D 4F                  977 	ld	c,a
   000E 3Es41               978 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            979 	adc	a,6 (ix)
   0013 47                  980 	ld	b,a
   0014 0A                  981 	ld	a,(bc)
   0015 DD A6 04            982 	and	a,4 (ix)
   0018 20 04               983 	jr	NZ,00103$
   001A 3E 01               984 	ld	a,#0x01
   001C 18 01               985 	jr	00104$
   001E                     986 00103$:
   001E AF                  987 	xor	a,a
   001F                     988 00104$:
   001F B7                  989 	or	a,a
   0020 D6 01               990 	sub	a,#0x01
   0022 3E 00               991 	ld	a,#0x00
   0024 17                  992 	rla
   0025 4F                  993 	ld	c,a
   0026 69                  994 	ld	l,c
   0027 26 00               995 	ld	h,#0x00
   0029 DD E1               996 	pop	ix
   002B C9                  997 	ret
   002C                     998 _isNthBitSet_end::
   002C                     999 _sintabx:
   002C 78                 1000 	.db #0x78
   002D 7A                 1001 	.db #0x7A
   002E 7D                 1002 	.db #0x7D
   002F 80                 1003 	.db #0x80
   0030 83                 1004 	.db #0x83
   0031 86                 1005 	.db #0x86
   0032 89                 1006 	.db #0x89
   0033 8C                 1007 	.db #0x8C
   0034 8F                 1008 	.db #0x8F
   0035 92                 1009 	.db #0x92
   0036 95                 1010 	.db #0x95
   0037 98                 1011 	.db #0x98
   0038 9A                 1012 	.db #0x9A
   0039 9D                 1013 	.db #0x9D
   003A A0                 1014 	.db #0xA0
   003B A3                 1015 	.db #0xA3
   003C A5                 1016 	.db #0xA5
   003D A8                 1017 	.db #0xA8
   003E AB                 1018 	.db #0xAB
   003F AD                 1019 	.db #0xAD
   0040 B0                 1020 	.db #0xB0
   0041 B3                 1021 	.db #0xB3
   0042 B5                 1022 	.db #0xB5
   0043 B8                 1023 	.db #0xB8
   0044 BA                 1024 	.db #0xBA
   0045 BD                 1025 	.db #0xBD
   0046 BF                 1026 	.db #0xBF
   0047 C1                 1027 	.db #0xC1
   0048 C4                 1028 	.db #0xC4
   0049 C6                 1029 	.db #0xC6
   004A C8                 1030 	.db #0xC8
   004B CA                 1031 	.db #0xCA
   004C CC                 1032 	.db #0xCC
   004D CE                 1033 	.db #0xCE
   004E D0                 1034 	.db #0xD0
   004F D2                 1035 	.db #0xD2
   0050 D4                 1036 	.db #0xD4
   0051 D6                 1037 	.db #0xD6
   0052 D8                 1038 	.db #0xD8
   0053 DA                 1039 	.db #0xDA
   0054 DB                 1040 	.db #0xDB
   0055 DD                 1041 	.db #0xDD
   0056 DE                 1042 	.db #0xDE
   0057 E0                 1043 	.db #0xE0
   0058 E1                 1044 	.db #0xE1
   0059 E3                 1045 	.db #0xE3
   005A E4                 1046 	.db #0xE4
   005B E5                 1047 	.db #0xE5
   005C E6                 1048 	.db #0xE6
   005D E7                 1049 	.db #0xE7
   005E E8                 1050 	.db #0xE8
   005F E9                 1051 	.db #0xE9
   0060 EA                 1052 	.db #0xEA
   0061 EB                 1053 	.db #0xEB
   0062 EC                 1054 	.db #0xEC
   0063 ED                 1055 	.db #0xED
   0064 ED                 1056 	.db #0xED
   0065 EE                 1057 	.db #0xEE
   0066 EE                 1058 	.db #0xEE
   0067 EF                 1059 	.db #0xEF
   0068 EF                 1060 	.db #0xEF
   0069 EF                 1061 	.db #0xEF
   006A EF                 1062 	.db #0xEF
   006B EF                 1063 	.db #0xEF
   006C F0                 1064 	.db #0xF0
   006D EF                 1065 	.db #0xEF
   006E EF                 1066 	.db #0xEF
   006F EF                 1067 	.db #0xEF
   0070 EF                 1068 	.db #0xEF
   0071 EF                 1069 	.db #0xEF
   0072 EE                 1070 	.db #0xEE
   0073 EE                 1071 	.db #0xEE
   0074 ED                 1072 	.db #0xED
   0075 ED                 1073 	.db #0xED
   0076 EC                 1074 	.db #0xEC
   0077 EB                 1075 	.db #0xEB
   0078 EA                 1076 	.db #0xEA
   0079 E9                 1077 	.db #0xE9
   007A E8                 1078 	.db #0xE8
   007B E7                 1079 	.db #0xE7
   007C E6                 1080 	.db #0xE6
   007D E5                 1081 	.db #0xE5
   007E E4                 1082 	.db #0xE4
   007F E3                 1083 	.db #0xE3
   0080 E1                 1084 	.db #0xE1
   0081 E0                 1085 	.db #0xE0
   0082 DE                 1086 	.db #0xDE
   0083 DD                 1087 	.db #0xDD
   0084 DB                 1088 	.db #0xDB
   0085 DA                 1089 	.db #0xDA
   0086 D8                 1090 	.db #0xD8
   0087 D6                 1091 	.db #0xD6
   0088 D4                 1092 	.db #0xD4
   0089 D2                 1093 	.db #0xD2
   008A D0                 1094 	.db #0xD0
   008B CE                 1095 	.db #0xCE
   008C CC                 1096 	.db #0xCC
   008D CA                 1097 	.db #0xCA
   008E C8                 1098 	.db #0xC8
   008F C6                 1099 	.db #0xC6
   0090 C4                 1100 	.db #0xC4
   0091 C1                 1101 	.db #0xC1
   0092 BF                 1102 	.db #0xBF
   0093 BD                 1103 	.db #0xBD
   0094 BA                 1104 	.db #0xBA
   0095 B8                 1105 	.db #0xB8
   0096 B5                 1106 	.db #0xB5
   0097 B3                 1107 	.db #0xB3
   0098 B0                 1108 	.db #0xB0
   0099 AD                 1109 	.db #0xAD
   009A AB                 1110 	.db #0xAB
   009B A8                 1111 	.db #0xA8
   009C A5                 1112 	.db #0xA5
   009D A3                 1113 	.db #0xA3
   009E A0                 1114 	.db #0xA0
   009F 9D                 1115 	.db #0x9D
   00A0 9A                 1116 	.db #0x9A
   00A1 98                 1117 	.db #0x98
   00A2 95                 1118 	.db #0x95
   00A3 92                 1119 	.db #0x92
   00A4 8F                 1120 	.db #0x8F
   00A5 8C                 1121 	.db #0x8C
   00A6 89                 1122 	.db #0x89
   00A7 86                 1123 	.db #0x86
   00A8 83                 1124 	.db #0x83
   00A9 80                 1125 	.db #0x80
   00AA 7D                 1126 	.db #0x7D
   00AB 7A                 1127 	.db #0x7A
   00AC 78                 1128 	.db #0x78
   00AD 75                 1129 	.db #0x75
   00AE 72                 1130 	.db #0x72
   00AF 6F                 1131 	.db #0x6F
   00B0 6C                 1132 	.db #0x6C
   00B1 69                 1133 	.db #0x69
   00B2 66                 1134 	.db #0x66
   00B3 63                 1135 	.db #0x63
   00B4 60                 1136 	.db #0x60
   00B5 5D                 1137 	.db #0x5D
   00B6 5A                 1138 	.db #0x5A
   00B7 57                 1139 	.db #0x57
   00B8 55                 1140 	.db #0x55
   00B9 52                 1141 	.db #0x52
   00BA 4F                 1142 	.db #0x4F
   00BB 4C                 1143 	.db #0x4C
   00BC 4A                 1144 	.db #0x4A
   00BD 47                 1145 	.db #0x47
   00BE 44                 1146 	.db #0x44
   00BF 42                 1147 	.db #0x42
   00C0 3F                 1148 	.db #0x3F
   00C1 3C                 1149 	.db #0x3C
   00C2 3A                 1150 	.db #0x3A
   00C3 37                 1151 	.db #0x37
   00C4 35                 1152 	.db #0x35
   00C5 32                 1153 	.db #0x32
   00C6 30                 1154 	.db #0x30
   00C7 2E                 1155 	.db #0x2E
   00C8 2B                 1156 	.db #0x2B
   00C9 29                 1157 	.db #0x29
   00CA 27                 1158 	.db #0x27
   00CB 25                 1159 	.db #0x25
   00CC 23                 1160 	.db #0x23
   00CD 21                 1161 	.db #0x21
   00CE 1F                 1162 	.db #0x1F
   00CF 1D                 1163 	.db #0x1D
   00D0 1B                 1164 	.db #0x1B
   00D1 19                 1165 	.db #0x19
   00D2 17                 1166 	.db #0x17
   00D3 15                 1167 	.db #0x15
   00D4 14                 1168 	.db #0x14
   00D5 12                 1169 	.db #0x12
   00D6 11                 1170 	.db #0x11
   00D7 0F                 1171 	.db #0x0F
   00D8 0E                 1172 	.db #0x0E
   00D9 0C                 1173 	.db #0x0C
   00DA 0B                 1174 	.db #0x0B
   00DB 0A                 1175 	.db #0x0A
   00DC 09                 1176 	.db #0x09
   00DD 08                 1177 	.db #0x08
   00DE 07                 1178 	.db #0x07
   00DF 06                 1179 	.db #0x06
   00E0 05                 1180 	.db #0x05
   00E1 04                 1181 	.db #0x04
   00E2 03                 1182 	.db #0x03
   00E3 02                 1183 	.db #0x02
   00E4 02                 1184 	.db #0x02
   00E5 01                 1185 	.db #0x01
   00E6 01                 1186 	.db #0x01
   00E7 00                 1187 	.db #0x00
   00E8 00                 1188 	.db #0x00
   00E9 00                 1189 	.db #0x00
   00EA 00                 1190 	.db #0x00
   00EB 00                 1191 	.db #0x00
   00EC 00                 1192 	.db #0x00
   00ED 00                 1193 	.db #0x00
   00EE 00                 1194 	.db #0x00
   00EF 00                 1195 	.db #0x00
   00F0 00                 1196 	.db #0x00
   00F1 00                 1197 	.db #0x00
   00F2 01                 1198 	.db #0x01
   00F3 01                 1199 	.db #0x01
   00F4 02                 1200 	.db #0x02
   00F5 02                 1201 	.db #0x02
   00F6 03                 1202 	.db #0x03
   00F7 04                 1203 	.db #0x04
   00F8 05                 1204 	.db #0x05
   00F9 06                 1205 	.db #0x06
   00FA 07                 1206 	.db #0x07
   00FB 08                 1207 	.db #0x08
   00FC 09                 1208 	.db #0x09
   00FD 0A                 1209 	.db #0x0A
   00FE 0B                 1210 	.db #0x0B
   00FF 0C                 1211 	.db #0x0C
   0100 0E                 1212 	.db #0x0E
   0101 0F                 1213 	.db #0x0F
   0102 11                 1214 	.db #0x11
   0103 12                 1215 	.db #0x12
   0104 14                 1216 	.db #0x14
   0105 15                 1217 	.db #0x15
   0106 17                 1218 	.db #0x17
   0107 19                 1219 	.db #0x19
   0108 1B                 1220 	.db #0x1B
   0109 1D                 1221 	.db #0x1D
   010A 1F                 1222 	.db #0x1F
   010B 21                 1223 	.db #0x21
   010C 23                 1224 	.db #0x23
   010D 25                 1225 	.db #0x25
   010E 27                 1226 	.db #0x27
   010F 29                 1227 	.db #0x29
   0110 2B                 1228 	.db #0x2B
   0111 2E                 1229 	.db #0x2E
   0112 30                 1230 	.db #0x30
   0113 32                 1231 	.db #0x32
   0114 35                 1232 	.db #0x35
   0115 37                 1233 	.db #0x37
   0116 3A                 1234 	.db #0x3A
   0117 3C                 1235 	.db #0x3C
   0118 3F                 1236 	.db #0x3F
   0119 42                 1237 	.db #0x42
   011A 44                 1238 	.db #0x44
   011B 47                 1239 	.db #0x47
   011C 4A                 1240 	.db #0x4A
   011D 4C                 1241 	.db #0x4C
   011E 4F                 1242 	.db #0x4F
   011F 52                 1243 	.db #0x52
   0120 55                 1244 	.db #0x55
   0121 57                 1245 	.db #0x57
   0122 5A                 1246 	.db #0x5A
   0123 5D                 1247 	.db #0x5D
   0124 60                 1248 	.db #0x60
   0125 63                 1249 	.db #0x63
   0126 66                 1250 	.db #0x66
   0127 69                 1251 	.db #0x69
   0128 6C                 1252 	.db #0x6C
   0129 6F                 1253 	.db #0x6F
   012A 72                 1254 	.db #0x72
   012B 75                 1255 	.db #0x75
   012C                    1256 _tri_center:
   012C 08                 1257 	.db #0x08
   012D 0A                 1258 	.db #0x0A
   012E 12                 1259 	.db #0x12
   012F 10                 1260 	.db #0x10
   0130 00                 1261 	.db #0x00
   0131 02                 1262 	.db #0x02
   0132 08                 1263 	.db #0x08
   0133 0A                 1264 	.db #0x0A
   0134 0B                 1265 	.db #0x0B
   0135 09                 1266 	.db #0x09
   0136 03                 1267 	.db #0x03
   0137 01                 1268 	.db #0x01
   0138 11                 1269 	.db #0x11
   0139 13                 1270 	.db #0x13
   013A 0B                 1271 	.db #0x0B
   013B 09                 1272 	.db #0x09
   013C 0A                 1273 	.db #0x0A
   013D 12                 1274 	.db #0x12
   013E 10                 1275 	.db #0x10
   013F 00                 1276 	.db #0x00
   0140 02                 1277 	.db #0x02
   0141 08                 1278 	.db #0x08
   0142 0A                 1279 	.db #0x0A
   0143 12                 1280 	.db #0x12
   0144 13                 1281 	.db #0x13
   0145 0B                 1282 	.db #0x0B
   0146 09                 1283 	.db #0x09
   0147 03                 1284 	.db #0x03
   0148 01                 1285 	.db #0x01
   0149 11                 1286 	.db #0x11
   014A 13                 1287 	.db #0x13
   014B 0B                 1288 	.db #0x0B
   014C 12                 1289 	.db #0x12
   014D 10                 1290 	.db #0x10
   014E 00                 1291 	.db #0x00
   014F 02                 1292 	.db #0x02
   0150 08                 1293 	.db #0x08
   0151 0A                 1294 	.db #0x0A
   0152 12                 1295 	.db #0x12
   0153 10                 1296 	.db #0x10
   0154 11                 1297 	.db #0x11
   0155 13                 1298 	.db #0x13
   0156 0B                 1299 	.db #0x0B
   0157 09                 1300 	.db #0x09
   0158 03                 1301 	.db #0x03
   0159 01                 1302 	.db #0x01
   015A 11                 1303 	.db #0x11
   015B 13                 1304 	.db #0x13
   015C 10                 1305 	.db #0x10
   015D 00                 1306 	.db #0x00
   015E 02                 1307 	.db #0x02
   015F 08                 1308 	.db #0x08
   0160 0A                 1309 	.db #0x0A
   0161 12                 1310 	.db #0x12
   0162 10                 1311 	.db #0x10
   0163 00                 1312 	.db #0x00
   0164 01                 1313 	.db #0x01
   0165 11                 1314 	.db #0x11
   0166 13                 1315 	.db #0x13
   0167 0B                 1316 	.db #0x0B
   0168 09                 1317 	.db #0x09
   0169 03                 1318 	.db #0x03
   016A 01                 1319 	.db #0x01
   016B 11                 1320 	.db #0x11
   016C 00                 1321 	.db #0x00
   016D 02                 1322 	.db #0x02
   016E 08                 1323 	.db #0x08
   016F 0A                 1324 	.db #0x0A
   0170 12                 1325 	.db #0x12
   0171 10                 1326 	.db #0x10
   0172 00                 1327 	.db #0x00
   0173 02                 1328 	.db #0x02
   0174 03                 1329 	.db #0x03
   0175 01                 1330 	.db #0x01
   0176 11                 1331 	.db #0x11
   0177 13                 1332 	.db #0x13
   0178 0B                 1333 	.db #0x0B
   0179 09                 1334 	.db #0x09
   017A 03                 1335 	.db #0x03
   017B 01                 1336 	.db #0x01
   017C 02                 1337 	.db #0x02
   017D 08                 1338 	.db #0x08
   017E 0A                 1339 	.db #0x0A
   017F 12                 1340 	.db #0x12
   0180 10                 1341 	.db #0x10
   0181 00                 1342 	.db #0x00
   0182 02                 1343 	.db #0x02
   0183 08                 1344 	.db #0x08
   0184 09                 1345 	.db #0x09
   0185 03                 1346 	.db #0x03
   0186 01                 1347 	.db #0x01
   0187 11                 1348 	.db #0x11
   0188 13                 1349 	.db #0x13
   0189 0B                 1350 	.db #0x0B
   018A 09                 1351 	.db #0x09
   018B 03                 1352 	.db #0x03
   018C 01                 1353 	.db #0x01
   018D 0B                 1354 	.db #0x0B
   018E 09                 1355 	.db #0x09
   018F 11                 1356 	.db #0x11
   0190 13                 1357 	.db #0x13
   0191 03                 1358 	.db #0x03
   0192 01                 1359 	.db #0x01
   0193 0B                 1360 	.db #0x0B
   0194 0A                 1361 	.db #0x0A
   0195 00                 1362 	.db #0x00
   0196 02                 1363 	.db #0x02
   0197 12                 1364 	.db #0x12
   0198 10                 1365 	.db #0x10
   0199 08                 1366 	.db #0x08
   019A 0A                 1367 	.db #0x0A
   019B 00                 1368 	.db #0x00
   019C 03                 1369 	.db #0x03
   019D 01                 1370 	.db #0x01
   019E 0B                 1371 	.db #0x0B
   019F 09                 1372 	.db #0x09
   01A0 11                 1373 	.db #0x11
   01A1 13                 1374 	.db #0x13
   01A2 03                 1375 	.db #0x03
   01A3 01                 1376 	.db #0x01
   01A4 00                 1377 	.db #0x00
   01A5 02                 1378 	.db #0x02
   01A6 12                 1379 	.db #0x12
   01A7 10                 1380 	.db #0x10
   01A8 08                 1381 	.db #0x08
   01A9 0A                 1382 	.db #0x0A
   01AA 00                 1383 	.db #0x00
   01AB 02                 1384 	.db #0x02
   01AC 13                 1385 	.db #0x13
   01AD 03                 1386 	.db #0x03
   01AE 01                 1387 	.db #0x01
   01AF 0B                 1388 	.db #0x0B
   01B0 09                 1389 	.db #0x09
   01B1 11                 1390 	.db #0x11
   01B2 13                 1391 	.db #0x13
   01B3 03                 1392 	.db #0x03
   01B4 02                 1393 	.db #0x02
   01B5 12                 1394 	.db #0x12
   01B6 10                 1395 	.db #0x10
   01B7 08                 1396 	.db #0x08
   01B8 0A                 1397 	.db #0x0A
   01B9 00                 1398 	.db #0x00
   01BA 02                 1399 	.db #0x02
   01BB 12                 1400 	.db #0x12
   01BC 11                 1401 	.db #0x11
   01BD 13                 1402 	.db #0x13
   01BE 03                 1403 	.db #0x03
   01BF 01                 1404 	.db #0x01
   01C0 0B                 1405 	.db #0x0B
   01C1 09                 1406 	.db #0x09
   01C2 11                 1407 	.db #0x11
   01C3 13                 1408 	.db #0x13
   01C4 12                 1409 	.db #0x12
   01C5 10                 1410 	.db #0x10
   01C6 08                 1411 	.db #0x08
   01C7 0A                 1412 	.db #0x0A
   01C8 00                 1413 	.db #0x00
   01C9 02                 1414 	.db #0x02
   01CA 12                 1415 	.db #0x12
   01CB 10                 1416 	.db #0x10
   01CC 09                 1417 	.db #0x09
   01CD 11                 1418 	.db #0x11
   01CE 13                 1419 	.db #0x13
   01CF 03                 1420 	.db #0x03
   01D0 01                 1421 	.db #0x01
   01D1 0B                 1422 	.db #0x0B
   01D2 09                 1423 	.db #0x09
   01D3 11                 1424 	.db #0x11
   01D4 10                 1425 	.db #0x10
   01D5 08                 1426 	.db #0x08
   01D6 0A                 1427 	.db #0x0A
   01D7 00                 1428 	.db #0x00
   01D8 02                 1429 	.db #0x02
   01D9 12                 1430 	.db #0x12
   01DA 10                 1431 	.db #0x10
   01DB 08                 1432 	.db #0x08
   01DC 0B                 1433 	.db #0x0B
   01DD 09                 1434 	.db #0x09
   01DE 11                 1435 	.db #0x11
   01DF 13                 1436 	.db #0x13
   01E0 03                 1437 	.db #0x03
   01E1 01                 1438 	.db #0x01
   01E2 0B                 1439 	.db #0x0B
   01E3 09                 1440 	.db #0x09
   01E4 08                 1441 	.db #0x08
   01E5 0A                 1442 	.db #0x0A
   01E6 00                 1443 	.db #0x00
   01E7 02                 1444 	.db #0x02
   01E8 12                 1445 	.db #0x12
   01E9 10                 1446 	.db #0x10
   01EA 08                 1447 	.db #0x08
   01EB 0A                 1448 	.db #0x0A
   01EC                    1449 _tri_up:
   01EC 0A                 1450 	.db #0x0A
   01ED 12                 1451 	.db #0x12
   01EE 10                 1452 	.db #0x10
   01EF 00                 1453 	.db #0x00
   01F0 02                 1454 	.db #0x02
   01F1 08                 1455 	.db #0x08
   01F2 0A                 1456 	.db #0x0A
   01F3 12                 1457 	.db #0x12
   01F4 13                 1458 	.db #0x13
   01F5 0B                 1459 	.db #0x0B
   01F6 09                 1460 	.db #0x09
   01F7 03                 1461 	.db #0x03
   01F8 01                 1462 	.db #0x01
   01F9 11                 1463 	.db #0x11
   01FA 13                 1464 	.db #0x13
   01FB 0B                 1465 	.db #0x0B
   01FC 12                 1466 	.db #0x12
   01FD 10                 1467 	.db #0x10
   01FE 00                 1468 	.db #0x00
   01FF 02                 1469 	.db #0x02
   0200 08                 1470 	.db #0x08
   0201 0A                 1471 	.db #0x0A
   0202 12                 1472 	.db #0x12
   0203 10                 1473 	.db #0x10
   0204 11                 1474 	.db #0x11
   0205 13                 1475 	.db #0x13
   0206 0B                 1476 	.db #0x0B
   0207 09                 1477 	.db #0x09
   0208 03                 1478 	.db #0x03
   0209 01                 1479 	.db #0x01
   020A 11                 1480 	.db #0x11
   020B 13                 1481 	.db #0x13
   020C 10                 1482 	.db #0x10
   020D 00                 1483 	.db #0x00
   020E 02                 1484 	.db #0x02
   020F 08                 1485 	.db #0x08
   0210 0A                 1486 	.db #0x0A
   0211 12                 1487 	.db #0x12
   0212 10                 1488 	.db #0x10
   0213 00                 1489 	.db #0x00
   0214 01                 1490 	.db #0x01
   0215 11                 1491 	.db #0x11
   0216 13                 1492 	.db #0x13
   0217 0B                 1493 	.db #0x0B
   0218 09                 1494 	.db #0x09
   0219 03                 1495 	.db #0x03
   021A 01                 1496 	.db #0x01
   021B 11                 1497 	.db #0x11
   021C 00                 1498 	.db #0x00
   021D 02                 1499 	.db #0x02
   021E 08                 1500 	.db #0x08
   021F 0A                 1501 	.db #0x0A
   0220 12                 1502 	.db #0x12
   0221 10                 1503 	.db #0x10
   0222 00                 1504 	.db #0x00
   0223 02                 1505 	.db #0x02
   0224 03                 1506 	.db #0x03
   0225 01                 1507 	.db #0x01
   0226 11                 1508 	.db #0x11
   0227 13                 1509 	.db #0x13
   0228 0B                 1510 	.db #0x0B
   0229 09                 1511 	.db #0x09
   022A 03                 1512 	.db #0x03
   022B 01                 1513 	.db #0x01
   022C 02                 1514 	.db #0x02
   022D 08                 1515 	.db #0x08
   022E 0A                 1516 	.db #0x0A
   022F 12                 1517 	.db #0x12
   0230 10                 1518 	.db #0x10
   0231 00                 1519 	.db #0x00
   0232 02                 1520 	.db #0x02
   0233 08                 1521 	.db #0x08
   0234 09                 1522 	.db #0x09
   0235 03                 1523 	.db #0x03
   0236 01                 1524 	.db #0x01
   0237 11                 1525 	.db #0x11
   0238 13                 1526 	.db #0x13
   0239 0B                 1527 	.db #0x0B
   023A 09                 1528 	.db #0x09
   023B 03                 1529 	.db #0x03
   023C 08                 1530 	.db #0x08
   023D 0A                 1531 	.db #0x0A
   023E 12                 1532 	.db #0x12
   023F 10                 1533 	.db #0x10
   0240 00                 1534 	.db #0x00
   0241 02                 1535 	.db #0x02
   0242 08                 1536 	.db #0x08
   0243 0A                 1537 	.db #0x0A
   0244 0B                 1538 	.db #0x0B
   0245 09                 1539 	.db #0x09
   0246 03                 1540 	.db #0x03
   0247 01                 1541 	.db #0x01
   0248 11                 1542 	.db #0x11
   0249 13                 1543 	.db #0x13
   024A 0B                 1544 	.db #0x0B
   024B 09                 1545 	.db #0x09
   024C 0A                 1546 	.db #0x0A
   024D 12                 1547 	.db #0x12
   024E 10                 1548 	.db #0x10
   024F 00                 1549 	.db #0x00
   0250 02                 1550 	.db #0x02
   0251 08                 1551 	.db #0x08
   0252 0A                 1552 	.db #0x0A
   0253 12                 1553 	.db #0x12
   0254 13                 1554 	.db #0x13
   0255 0B                 1555 	.db #0x0B
   0256 09                 1556 	.db #0x09
   0257 03                 1557 	.db #0x03
   0258 01                 1558 	.db #0x01
   0259 11                 1559 	.db #0x11
   025A 13                 1560 	.db #0x13
   025B 0B                 1561 	.db #0x0B
   025C 12                 1562 	.db #0x12
   025D 10                 1563 	.db #0x10
   025E 00                 1564 	.db #0x00
   025F 02                 1565 	.db #0x02
   0260 08                 1566 	.db #0x08
   0261 0A                 1567 	.db #0x0A
   0262 12                 1568 	.db #0x12
   0263 10                 1569 	.db #0x10
   0264 11                 1570 	.db #0x11
   0265 13                 1571 	.db #0x13
   0266 0B                 1572 	.db #0x0B
   0267 09                 1573 	.db #0x09
   0268 03                 1574 	.db #0x03
   0269 01                 1575 	.db #0x01
   026A 11                 1576 	.db #0x11
   026B 13                 1577 	.db #0x13
   026C 10                 1578 	.db #0x10
   026D 00                 1579 	.db #0x00
   026E 02                 1580 	.db #0x02
   026F 08                 1581 	.db #0x08
   0270 0A                 1582 	.db #0x0A
   0271 12                 1583 	.db #0x12
   0272 10                 1584 	.db #0x10
   0273 00                 1585 	.db #0x00
   0274 01                 1586 	.db #0x01
   0275 11                 1587 	.db #0x11
   0276 13                 1588 	.db #0x13
   0277 0B                 1589 	.db #0x0B
   0278 09                 1590 	.db #0x09
   0279 03                 1591 	.db #0x03
   027A 01                 1592 	.db #0x01
   027B 11                 1593 	.db #0x11
   027C 00                 1594 	.db #0x00
   027D 02                 1595 	.db #0x02
   027E 08                 1596 	.db #0x08
   027F 0A                 1597 	.db #0x0A
   0280 12                 1598 	.db #0x12
   0281 10                 1599 	.db #0x10
   0282 00                 1600 	.db #0x00
   0283 02                 1601 	.db #0x02
   0284 03                 1602 	.db #0x03
   0285 01                 1603 	.db #0x01
   0286 11                 1604 	.db #0x11
   0287 13                 1605 	.db #0x13
   0288 0B                 1606 	.db #0x0B
   0289 09                 1607 	.db #0x09
   028A 03                 1608 	.db #0x03
   028B 01                 1609 	.db #0x01
   028C 02                 1610 	.db #0x02
   028D 08                 1611 	.db #0x08
   028E 0A                 1612 	.db #0x0A
   028F 12                 1613 	.db #0x12
   0290 10                 1614 	.db #0x10
   0291 00                 1615 	.db #0x00
   0292 02                 1616 	.db #0x02
   0293 08                 1617 	.db #0x08
   0294 09                 1618 	.db #0x09
   0295 03                 1619 	.db #0x03
   0296 01                 1620 	.db #0x01
   0297 11                 1621 	.db #0x11
   0298 13                 1622 	.db #0x13
   0299 0B                 1623 	.db #0x0B
   029A 09                 1624 	.db #0x09
   029B 03                 1625 	.db #0x03
   029C 08                 1626 	.db #0x08
   029D 0A                 1627 	.db #0x0A
   029E 12                 1628 	.db #0x12
   029F 10                 1629 	.db #0x10
   02A0 00                 1630 	.db #0x00
   02A1 02                 1631 	.db #0x02
   02A2 08                 1632 	.db #0x08
   02A3 0A                 1633 	.db #0x0A
   02A4 0B                 1634 	.db #0x0B
   02A5 09                 1635 	.db #0x09
   02A6 03                 1636 	.db #0x03
   02A7 01                 1637 	.db #0x01
   02A8 11                 1638 	.db #0x11
   02A9 13                 1639 	.db #0x13
   02AA 0B                 1640 	.db #0x0B
   02AB 09                 1641 	.db #0x09
   02AC                    1642 _tri_dia:
   02AC 05                 1643 	.db #0x05
   02AD 1B                 1644 	.db #0x1B
   02AE 0F                 1645 	.db #0x0F
   02AF 1D                 1646 	.db #0x1D
   02B0 15                 1647 	.db #0x15
   02B1 19                 1648 	.db #0x19
   02B2 05                 1649 	.db #0x05
   02B3 1B                 1650 	.db #0x1B
   02B4 0F                 1651 	.db #0x0F
   02B5 1D                 1652 	.db #0x1D
   02B6 15                 1653 	.db #0x15
   02B7 19                 1654 	.db #0x19
   02B8 05                 1655 	.db #0x05
   02B9 1B                 1656 	.db #0x1B
   02BA 0F                 1657 	.db #0x0F
   02BB 1D                 1658 	.db #0x1D
   02BC 1D                 1659 	.db #0x1D
   02BD 05                 1660 	.db #0x05
   02BE 19                 1661 	.db #0x19
   02BF 0F                 1662 	.db #0x0F
   02C0 1B                 1663 	.db #0x1B
   02C1 15                 1664 	.db #0x15
   02C2 1D                 1665 	.db #0x1D
   02C3 05                 1666 	.db #0x05
   02C4 19                 1667 	.db #0x19
   02C5 0F                 1668 	.db #0x0F
   02C6 1B                 1669 	.db #0x1B
   02C7 15                 1670 	.db #0x15
   02C8 1D                 1671 	.db #0x1D
   02C9 05                 1672 	.db #0x05
   02CA 19                 1673 	.db #0x19
   02CB 0F                 1674 	.db #0x0F
   02CC 0F                 1675 	.db #0x0F
   02CD 1D                 1676 	.db #0x1D
   02CE 15                 1677 	.db #0x15
   02CF 19                 1678 	.db #0x19
   02D0 05                 1679 	.db #0x05
   02D1 1B                 1680 	.db #0x1B
   02D2 0F                 1681 	.db #0x0F
   02D3 1D                 1682 	.db #0x1D
   02D4 15                 1683 	.db #0x15
   02D5 19                 1684 	.db #0x19
   02D6 05                 1685 	.db #0x05
   02D7 1B                 1686 	.db #0x1B
   02D8 0F                 1687 	.db #0x0F
   02D9 1D                 1688 	.db #0x1D
   02DA 15                 1689 	.db #0x15
   02DB 19                 1690 	.db #0x19
   02DC 19                 1691 	.db #0x19
   02DD 0F                 1692 	.db #0x0F
   02DE 1B                 1693 	.db #0x1B
   02DF 15                 1694 	.db #0x15
   02E0 1D                 1695 	.db #0x1D
   02E1 05                 1696 	.db #0x05
   02E2 19                 1697 	.db #0x19
   02E3 0F                 1698 	.db #0x0F
   02E4 1B                 1699 	.db #0x1B
   02E5 15                 1700 	.db #0x15
   02E6 1D                 1701 	.db #0x1D
   02E7 05                 1702 	.db #0x05
   02E8 19                 1703 	.db #0x19
   02E9 0F                 1704 	.db #0x0F
   02EA 1B                 1705 	.db #0x1B
   02EB 15                 1706 	.db #0x15
   02EC 15                 1707 	.db #0x15
   02ED 19                 1708 	.db #0x19
   02EE 05                 1709 	.db #0x05
   02EF 1B                 1710 	.db #0x1B
   02F0 0F                 1711 	.db #0x0F
   02F1 1D                 1712 	.db #0x1D
   02F2 15                 1713 	.db #0x15
   02F3 19                 1714 	.db #0x19
   02F4 05                 1715 	.db #0x05
   02F5 1B                 1716 	.db #0x1B
   02F6 0F                 1717 	.db #0x0F
   02F7 1D                 1718 	.db #0x1D
   02F8 15                 1719 	.db #0x15
   02F9 19                 1720 	.db #0x19
   02FA 05                 1721 	.db #0x05
   02FB 1B                 1722 	.db #0x1B
   02FC 1B                 1723 	.db #0x1B
   02FD 15                 1724 	.db #0x15
   02FE 1D                 1725 	.db #0x1D
   02FF 05                 1726 	.db #0x05
   0300 19                 1727 	.db #0x19
   0301 0F                 1728 	.db #0x0F
   0302 1B                 1729 	.db #0x1B
   0303 15                 1730 	.db #0x15
   0304 1D                 1731 	.db #0x1D
   0305 05                 1732 	.db #0x05
   0306 19                 1733 	.db #0x19
   0307 0F                 1734 	.db #0x0F
   0308 1B                 1735 	.db #0x1B
   0309 15                 1736 	.db #0x15
   030A 1D                 1737 	.db #0x1D
   030B 05                 1738 	.db #0x05
   030C 05                 1739 	.db #0x05
   030D 1B                 1740 	.db #0x1B
   030E 0F                 1741 	.db #0x0F
   030F 1D                 1742 	.db #0x1D
   0310 15                 1743 	.db #0x15
   0311 19                 1744 	.db #0x19
   0312 05                 1745 	.db #0x05
   0313 1B                 1746 	.db #0x1B
   0314 0F                 1747 	.db #0x0F
   0315 1D                 1748 	.db #0x1D
   0316 15                 1749 	.db #0x15
   0317 19                 1750 	.db #0x19
   0318 05                 1751 	.db #0x05
   0319 1B                 1752 	.db #0x1B
   031A 0F                 1753 	.db #0x0F
   031B 1D                 1754 	.db #0x1D
   031C 1D                 1755 	.db #0x1D
   031D 05                 1756 	.db #0x05
   031E 19                 1757 	.db #0x19
   031F 0F                 1758 	.db #0x0F
   0320 1B                 1759 	.db #0x1B
   0321 15                 1760 	.db #0x15
   0322 1D                 1761 	.db #0x1D
   0323 05                 1762 	.db #0x05
   0324 19                 1763 	.db #0x19
   0325 0F                 1764 	.db #0x0F
   0326 1B                 1765 	.db #0x1B
   0327 15                 1766 	.db #0x15
   0328 1D                 1767 	.db #0x1D
   0329 05                 1768 	.db #0x05
   032A 19                 1769 	.db #0x19
   032B 0F                 1770 	.db #0x0F
   032C 0F                 1771 	.db #0x0F
   032D 1D                 1772 	.db #0x1D
   032E 15                 1773 	.db #0x15
   032F 19                 1774 	.db #0x19
   0330 05                 1775 	.db #0x05
   0331 1B                 1776 	.db #0x1B
   0332 0F                 1777 	.db #0x0F
   0333 1D                 1778 	.db #0x1D
   0334 15                 1779 	.db #0x15
   0335 19                 1780 	.db #0x19
   0336 05                 1781 	.db #0x05
   0337 1B                 1782 	.db #0x1B
   0338 0F                 1783 	.db #0x0F
   0339 1D                 1784 	.db #0x1D
   033A 15                 1785 	.db #0x15
   033B 19                 1786 	.db #0x19
   033C 19                 1787 	.db #0x19
   033D 0F                 1788 	.db #0x0F
   033E 1B                 1789 	.db #0x1B
   033F 15                 1790 	.db #0x15
   0340 1D                 1791 	.db #0x1D
   0341 05                 1792 	.db #0x05
   0342 19                 1793 	.db #0x19
   0343 0F                 1794 	.db #0x0F
   0344 1B                 1795 	.db #0x1B
   0345 15                 1796 	.db #0x15
   0346 1D                 1797 	.db #0x1D
   0347 05                 1798 	.db #0x05
   0348 19                 1799 	.db #0x19
   0349 0F                 1800 	.db #0x0F
   034A 1B                 1801 	.db #0x1B
   034B 15                 1802 	.db #0x15
   034C 15                 1803 	.db #0x15
   034D 19                 1804 	.db #0x19
   034E 05                 1805 	.db #0x05
   034F 1B                 1806 	.db #0x1B
   0350 0F                 1807 	.db #0x0F
   0351 1D                 1808 	.db #0x1D
   0352 15                 1809 	.db #0x15
   0353 19                 1810 	.db #0x19
   0354 05                 1811 	.db #0x05
   0355 1B                 1812 	.db #0x1B
   0356 0F                 1813 	.db #0x0F
   0357 1D                 1814 	.db #0x1D
   0358 15                 1815 	.db #0x15
   0359 19                 1816 	.db #0x19
   035A 05                 1817 	.db #0x05
   035B 1B                 1818 	.db #0x1B
   035C 1B                 1819 	.db #0x1B
   035D 15                 1820 	.db #0x15
   035E 1D                 1821 	.db #0x1D
   035F 05                 1822 	.db #0x05
   0360 19                 1823 	.db #0x19
   0361 0F                 1824 	.db #0x0F
   0362 1B                 1825 	.db #0x1B
   0363 15                 1826 	.db #0x15
   0364 1D                 1827 	.db #0x1D
   0365 05                 1828 	.db #0x05
   0366 19                 1829 	.db #0x19
   0367 0F                 1830 	.db #0x0F
   0368 1B                 1831 	.db #0x1B
   0369 15                 1832 	.db #0x15
   036A 1D                 1833 	.db #0x1D
   036B 05                 1834 	.db #0x05
   036C                    1835 _tri_side1:
   036C 0A                 1836 	.db #0x0A
   036D 12                 1837 	.db #0x12
   036E 10                 1838 	.db #0x10
   036F 00                 1839 	.db #0x00
   0370 02                 1840 	.db #0x02
   0371 08                 1841 	.db #0x08
   0372 0A                 1842 	.db #0x0A
   0373 12                 1843 	.db #0x12
   0374 10                 1844 	.db #0x10
   0375 00                 1845 	.db #0x00
   0376 02                 1846 	.db #0x02
   0377 08                 1847 	.db #0x08
   0378 0A                 1848 	.db #0x0A
   0379 12                 1849 	.db #0x12
   037A 10                 1850 	.db #0x10
   037B 00                 1851 	.db #0x00
   037C 12                 1852 	.db #0x12
   037D 10                 1853 	.db #0x10
   037E 00                 1854 	.db #0x00
   037F 02                 1855 	.db #0x02
   0380 08                 1856 	.db #0x08
   0381 0A                 1857 	.db #0x0A
   0382 12                 1858 	.db #0x12
   0383 10                 1859 	.db #0x10
   0384 00                 1860 	.db #0x00
   0385 02                 1861 	.db #0x02
   0386 08                 1862 	.db #0x08
   0387 0A                 1863 	.db #0x0A
   0388 12                 1864 	.db #0x12
   0389 10                 1865 	.db #0x10
   038A 00                 1866 	.db #0x00
   038B 02                 1867 	.db #0x02
   038C 10                 1868 	.db #0x10
   038D 00                 1869 	.db #0x00
   038E 02                 1870 	.db #0x02
   038F 08                 1871 	.db #0x08
   0390 0A                 1872 	.db #0x0A
   0391 12                 1873 	.db #0x12
   0392 10                 1874 	.db #0x10
   0393 00                 1875 	.db #0x00
   0394 02                 1876 	.db #0x02
   0395 08                 1877 	.db #0x08
   0396 0A                 1878 	.db #0x0A
   0397 12                 1879 	.db #0x12
   0398 10                 1880 	.db #0x10
   0399 00                 1881 	.db #0x00
   039A 02                 1882 	.db #0x02
   039B 08                 1883 	.db #0x08
   039C 00                 1884 	.db #0x00
   039D 02                 1885 	.db #0x02
   039E 08                 1886 	.db #0x08
   039F 0A                 1887 	.db #0x0A
   03A0 12                 1888 	.db #0x12
   03A1 10                 1889 	.db #0x10
   03A2 00                 1890 	.db #0x00
   03A3 02                 1891 	.db #0x02
   03A4 08                 1892 	.db #0x08
   03A5 0A                 1893 	.db #0x0A
   03A6 12                 1894 	.db #0x12
   03A7 10                 1895 	.db #0x10
   03A8 00                 1896 	.db #0x00
   03A9 02                 1897 	.db #0x02
   03AA 08                 1898 	.db #0x08
   03AB 0A                 1899 	.db #0x0A
   03AC 02                 1900 	.db #0x02
   03AD 08                 1901 	.db #0x08
   03AE 0A                 1902 	.db #0x0A
   03AF 12                 1903 	.db #0x12
   03B0 10                 1904 	.db #0x10
   03B1 00                 1905 	.db #0x00
   03B2 02                 1906 	.db #0x02
   03B3 08                 1907 	.db #0x08
   03B4 0A                 1908 	.db #0x0A
   03B5 12                 1909 	.db #0x12
   03B6 10                 1910 	.db #0x10
   03B7 00                 1911 	.db #0x00
   03B8 02                 1912 	.db #0x02
   03B9 08                 1913 	.db #0x08
   03BA 0A                 1914 	.db #0x0A
   03BB 12                 1915 	.db #0x12
   03BC 08                 1916 	.db #0x08
   03BD 0A                 1917 	.db #0x0A
   03BE 12                 1918 	.db #0x12
   03BF 10                 1919 	.db #0x10
   03C0 00                 1920 	.db #0x00
   03C1 02                 1921 	.db #0x02
   03C2 08                 1922 	.db #0x08
   03C3 0A                 1923 	.db #0x0A
   03C4 12                 1924 	.db #0x12
   03C5 10                 1925 	.db #0x10
   03C6 00                 1926 	.db #0x00
   03C7 02                 1927 	.db #0x02
   03C8 08                 1928 	.db #0x08
   03C9 0A                 1929 	.db #0x0A
   03CA 12                 1930 	.db #0x12
   03CB 10                 1931 	.db #0x10
   03CC 0A                 1932 	.db #0x0A
   03CD 12                 1933 	.db #0x12
   03CE 10                 1934 	.db #0x10
   03CF 00                 1935 	.db #0x00
   03D0 02                 1936 	.db #0x02
   03D1 08                 1937 	.db #0x08
   03D2 0A                 1938 	.db #0x0A
   03D3 12                 1939 	.db #0x12
   03D4 10                 1940 	.db #0x10
   03D5 00                 1941 	.db #0x00
   03D6 02                 1942 	.db #0x02
   03D7 08                 1943 	.db #0x08
   03D8 0A                 1944 	.db #0x0A
   03D9 12                 1945 	.db #0x12
   03DA 10                 1946 	.db #0x10
   03DB 00                 1947 	.db #0x00
   03DC 12                 1948 	.db #0x12
   03DD 10                 1949 	.db #0x10
   03DE 00                 1950 	.db #0x00
   03DF 02                 1951 	.db #0x02
   03E0 08                 1952 	.db #0x08
   03E1 0A                 1953 	.db #0x0A
   03E2 12                 1954 	.db #0x12
   03E3 10                 1955 	.db #0x10
   03E4 00                 1956 	.db #0x00
   03E5 02                 1957 	.db #0x02
   03E6 08                 1958 	.db #0x08
   03E7 0A                 1959 	.db #0x0A
   03E8 12                 1960 	.db #0x12
   03E9 10                 1961 	.db #0x10
   03EA 00                 1962 	.db #0x00
   03EB 02                 1963 	.db #0x02
   03EC 10                 1964 	.db #0x10
   03ED 00                 1965 	.db #0x00
   03EE 02                 1966 	.db #0x02
   03EF 08                 1967 	.db #0x08
   03F0 0A                 1968 	.db #0x0A
   03F1 12                 1969 	.db #0x12
   03F2 10                 1970 	.db #0x10
   03F3 00                 1971 	.db #0x00
   03F4 02                 1972 	.db #0x02
   03F5 08                 1973 	.db #0x08
   03F6 0A                 1974 	.db #0x0A
   03F7 12                 1975 	.db #0x12
   03F8 10                 1976 	.db #0x10
   03F9 00                 1977 	.db #0x00
   03FA 02                 1978 	.db #0x02
   03FB 08                 1979 	.db #0x08
   03FC 00                 1980 	.db #0x00
   03FD 02                 1981 	.db #0x02
   03FE 08                 1982 	.db #0x08
   03FF 0A                 1983 	.db #0x0A
   0400 12                 1984 	.db #0x12
   0401 10                 1985 	.db #0x10
   0402 00                 1986 	.db #0x00
   0403 02                 1987 	.db #0x02
   0404 08                 1988 	.db #0x08
   0405 0A                 1989 	.db #0x0A
   0406 12                 1990 	.db #0x12
   0407 10                 1991 	.db #0x10
   0408 00                 1992 	.db #0x00
   0409 02                 1993 	.db #0x02
   040A 08                 1994 	.db #0x08
   040B 0A                 1995 	.db #0x0A
   040C 02                 1996 	.db #0x02
   040D 08                 1997 	.db #0x08
   040E 0A                 1998 	.db #0x0A
   040F 12                 1999 	.db #0x12
   0410 10                 2000 	.db #0x10
   0411 00                 2001 	.db #0x00
   0412 02                 2002 	.db #0x02
   0413 08                 2003 	.db #0x08
   0414 0A                 2004 	.db #0x0A
   0415 12                 2005 	.db #0x12
   0416 10                 2006 	.db #0x10
   0417 00                 2007 	.db #0x00
   0418 02                 2008 	.db #0x02
   0419 08                 2009 	.db #0x08
   041A 0A                 2010 	.db #0x0A
   041B 12                 2011 	.db #0x12
   041C 08                 2012 	.db #0x08
   041D 0A                 2013 	.db #0x0A
   041E 12                 2014 	.db #0x12
   041F 10                 2015 	.db #0x10
   0420 00                 2016 	.db #0x00
   0421 02                 2017 	.db #0x02
   0422 08                 2018 	.db #0x08
   0423 0A                 2019 	.db #0x0A
   0424 12                 2020 	.db #0x12
   0425 10                 2021 	.db #0x10
   0426 00                 2022 	.db #0x00
   0427 02                 2023 	.db #0x02
   0428 08                 2024 	.db #0x08
   0429 0A                 2025 	.db #0x0A
   042A 12                 2026 	.db #0x12
   042B 10                 2027 	.db #0x10
   042C                    2028 _tri_side2:
   042C 00                 2029 	.db #0x00
   042D 10                 2030 	.db #0x10
   042E 12                 2031 	.db #0x12
   042F 0A                 2032 	.db #0x0A
   0430 08                 2033 	.db #0x08
   0431 02                 2034 	.db #0x02
   0432 00                 2035 	.db #0x00
   0433 10                 2036 	.db #0x10
   0434 12                 2037 	.db #0x12
   0435 0A                 2038 	.db #0x0A
   0436 08                 2039 	.db #0x08
   0437 02                 2040 	.db #0x02
   0438 00                 2041 	.db #0x00
   0439 10                 2042 	.db #0x10
   043A 12                 2043 	.db #0x12
   043B 0A                 2044 	.db #0x0A
   043C 02                 2045 	.db #0x02
   043D 00                 2046 	.db #0x00
   043E 10                 2047 	.db #0x10
   043F 12                 2048 	.db #0x12
   0440 0A                 2049 	.db #0x0A
   0441 08                 2050 	.db #0x08
   0442 02                 2051 	.db #0x02
   0443 00                 2052 	.db #0x00
   0444 10                 2053 	.db #0x10
   0445 12                 2054 	.db #0x12
   0446 0A                 2055 	.db #0x0A
   0447 08                 2056 	.db #0x08
   0448 02                 2057 	.db #0x02
   0449 00                 2058 	.db #0x00
   044A 10                 2059 	.db #0x10
   044B 12                 2060 	.db #0x12
   044C 08                 2061 	.db #0x08
   044D 02                 2062 	.db #0x02
   044E 00                 2063 	.db #0x00
   044F 10                 2064 	.db #0x10
   0450 12                 2065 	.db #0x12
   0451 0A                 2066 	.db #0x0A
   0452 08                 2067 	.db #0x08
   0453 02                 2068 	.db #0x02
   0454 00                 2069 	.db #0x00
   0455 10                 2070 	.db #0x10
   0456 12                 2071 	.db #0x12
   0457 0A                 2072 	.db #0x0A
   0458 08                 2073 	.db #0x08
   0459 02                 2074 	.db #0x02
   045A 00                 2075 	.db #0x00
   045B 10                 2076 	.db #0x10
   045C 0A                 2077 	.db #0x0A
   045D 08                 2078 	.db #0x08
   045E 02                 2079 	.db #0x02
   045F 00                 2080 	.db #0x00
   0460 10                 2081 	.db #0x10
   0461 12                 2082 	.db #0x12
   0462 0A                 2083 	.db #0x0A
   0463 08                 2084 	.db #0x08
   0464 02                 2085 	.db #0x02
   0465 00                 2086 	.db #0x00
   0466 10                 2087 	.db #0x10
   0467 12                 2088 	.db #0x12
   0468 0A                 2089 	.db #0x0A
   0469 08                 2090 	.db #0x08
   046A 02                 2091 	.db #0x02
   046B 00                 2092 	.db #0x00
   046C 12                 2093 	.db #0x12
   046D 0A                 2094 	.db #0x0A
   046E 08                 2095 	.db #0x08
   046F 02                 2096 	.db #0x02
   0470 00                 2097 	.db #0x00
   0471 10                 2098 	.db #0x10
   0472 12                 2099 	.db #0x12
   0473 0A                 2100 	.db #0x0A
   0474 08                 2101 	.db #0x08
   0475 02                 2102 	.db #0x02
   0476 00                 2103 	.db #0x00
   0477 10                 2104 	.db #0x10
   0478 12                 2105 	.db #0x12
   0479 0A                 2106 	.db #0x0A
   047A 08                 2107 	.db #0x08
   047B 02                 2108 	.db #0x02
   047C 10                 2109 	.db #0x10
   047D 12                 2110 	.db #0x12
   047E 0A                 2111 	.db #0x0A
   047F 08                 2112 	.db #0x08
   0480 02                 2113 	.db #0x02
   0481 00                 2114 	.db #0x00
   0482 10                 2115 	.db #0x10
   0483 12                 2116 	.db #0x12
   0484 0A                 2117 	.db #0x0A
   0485 08                 2118 	.db #0x08
   0486 02                 2119 	.db #0x02
   0487 00                 2120 	.db #0x00
   0488 10                 2121 	.db #0x10
   0489 12                 2122 	.db #0x12
   048A 0A                 2123 	.db #0x0A
   048B 08                 2124 	.db #0x08
   048C 00                 2125 	.db #0x00
   048D 10                 2126 	.db #0x10
   048E 12                 2127 	.db #0x12
   048F 0A                 2128 	.db #0x0A
   0490 08                 2129 	.db #0x08
   0491 02                 2130 	.db #0x02
   0492 00                 2131 	.db #0x00
   0493 10                 2132 	.db #0x10
   0494 12                 2133 	.db #0x12
   0495 0A                 2134 	.db #0x0A
   0496 08                 2135 	.db #0x08
   0497 02                 2136 	.db #0x02
   0498 00                 2137 	.db #0x00
   0499 10                 2138 	.db #0x10
   049A 12                 2139 	.db #0x12
   049B 0A                 2140 	.db #0x0A
   049C 02                 2141 	.db #0x02
   049D 00                 2142 	.db #0x00
   049E 10                 2143 	.db #0x10
   049F 12                 2144 	.db #0x12
   04A0 0A                 2145 	.db #0x0A
   04A1 08                 2146 	.db #0x08
   04A2 02                 2147 	.db #0x02
   04A3 00                 2148 	.db #0x00
   04A4 10                 2149 	.db #0x10
   04A5 12                 2150 	.db #0x12
   04A6 0A                 2151 	.db #0x0A
   04A7 08                 2152 	.db #0x08
   04A8 02                 2153 	.db #0x02
   04A9 00                 2154 	.db #0x00
   04AA 10                 2155 	.db #0x10
   04AB 12                 2156 	.db #0x12
   04AC 08                 2157 	.db #0x08
   04AD 02                 2158 	.db #0x02
   04AE 00                 2159 	.db #0x00
   04AF 10                 2160 	.db #0x10
   04B0 12                 2161 	.db #0x12
   04B1 0A                 2162 	.db #0x0A
   04B2 08                 2163 	.db #0x08
   04B3 02                 2164 	.db #0x02
   04B4 00                 2165 	.db #0x00
   04B5 10                 2166 	.db #0x10
   04B6 12                 2167 	.db #0x12
   04B7 0A                 2168 	.db #0x0A
   04B8 08                 2169 	.db #0x08
   04B9 02                 2170 	.db #0x02
   04BA 00                 2171 	.db #0x00
   04BB 10                 2172 	.db #0x10
   04BC 0A                 2173 	.db #0x0A
   04BD 08                 2174 	.db #0x08
   04BE 02                 2175 	.db #0x02
   04BF 00                 2176 	.db #0x00
   04C0 10                 2177 	.db #0x10
   04C1 12                 2178 	.db #0x12
   04C2 0A                 2179 	.db #0x0A
   04C3 08                 2180 	.db #0x08
   04C4 02                 2181 	.db #0x02
   04C5 00                 2182 	.db #0x00
   04C6 10                 2183 	.db #0x10
   04C7 12                 2184 	.db #0x12
   04C8 0A                 2185 	.db #0x0A
   04C9 08                 2186 	.db #0x08
   04CA 02                 2187 	.db #0x02
   04CB 00                 2188 	.db #0x00
   04CC 12                 2189 	.db #0x12
   04CD 0A                 2190 	.db #0x0A
   04CE 08                 2191 	.db #0x08
   04CF 02                 2192 	.db #0x02
   04D0 00                 2193 	.db #0x00
   04D1 10                 2194 	.db #0x10
   04D2 12                 2195 	.db #0x12
   04D3 0A                 2196 	.db #0x0A
   04D4 08                 2197 	.db #0x08
   04D5 02                 2198 	.db #0x02
   04D6 00                 2199 	.db #0x00
   04D7 10                 2200 	.db #0x10
   04D8 12                 2201 	.db #0x12
   04D9 0A                 2202 	.db #0x0A
   04DA 08                 2203 	.db #0x08
   04DB 02                 2204 	.db #0x02
   04DC 10                 2205 	.db #0x10
   04DD 12                 2206 	.db #0x12
   04DE 0A                 2207 	.db #0x0A
   04DF 08                 2208 	.db #0x08
   04E0 02                 2209 	.db #0x02
   04E1 00                 2210 	.db #0x00
   04E2 10                 2211 	.db #0x10
   04E3 12                 2212 	.db #0x12
   04E4 0A                 2213 	.db #0x0A
   04E5 08                 2214 	.db #0x08
   04E6 02                 2215 	.db #0x02
   04E7 00                 2216 	.db #0x00
   04E8 10                 2217 	.db #0x10
   04E9 12                 2218 	.db #0x12
   04EA 0A                 2219 	.db #0x0A
   04EB 08                 2220 	.db #0x08
   04EC                    2221 _tri_inva1:
   04EC 1E                 2222 	.db #0x1E
   04ED 1F                 2223 	.db #0x1F
   04EE 1E                 2224 	.db #0x1E
   04EF 11                 2225 	.db #0x11
   04F0 13                 2226 	.db #0x13
   04F1 1E                 2227 	.db #0x1E
   04F2 08                 2228 	.db #0x08
   04F3 0A                 2229 	.db #0x0A
   04F4 00                 2230 	.db #0x00
   04F5 0E                 2231 	.db #0x0E
   04F6 10                 2232 	.db #0x10
   04F7 1E                 2233 	.db #0x1E
   04F8 1C                 2234 	.db #0x1C
   04F9 1E                 2235 	.db #0x1E
   04FA 08                 2236 	.db #0x08
   04FB 0A                 2237 	.db #0x0A
   04FC 1F                 2238 	.db #0x1F
   04FD 1F                 2239 	.db #0x1F
   04FE 1E                 2240 	.db #0x1E
   04FF 1E                 2241 	.db #0x1E
   0500 15                 2242 	.db #0x15
   0501 17                 2243 	.db #0x17
   0502 0A                 2244 	.db #0x0A
   0503 00                 2245 	.db #0x00
   0504 02                 2246 	.db #0x02
   0505 11                 2247 	.db #0x11
   0506 13                 2248 	.db #0x13
   0507 1F                 2249 	.db #0x1F
   0508 1C                 2250 	.db #0x1C
   0509 08                 2251 	.db #0x08
   050A 0A                 2252 	.db #0x0A
   050B 1F                 2253 	.db #0x1F
   050C 1E                 2254 	.db #0x1E
   050D 1F                 2255 	.db #0x1F
   050E 08                 2256 	.db #0x08
   050F 1B                 2257 	.db #0x1B
   0510 1A                 2258 	.db #0x1A
   0511 11                 2259 	.db #0x11
   0512 13                 2260 	.db #0x13
   0513 1C                 2261 	.db #0x1C
   0514 1E                 2262 	.db #0x1E
   0515 1F                 2263 	.db #0x1F
   0516 19                 2264 	.db #0x19
   0517 1E                 2265 	.db #0x1E
   0518 06                 2266 	.db #0x06
   0519 04                 2267 	.db #0x04
   051A 1C                 2268 	.db #0x1C
   051B 1C                 2269 	.db #0x1C
   051C 1E                 2270 	.db #0x1E
   051D 08                 2271 	.db #0x08
   051E 16                 2272 	.db #0x16
   051F 18                 2273 	.db #0x18
   0520 1B                 2274 	.db #0x1B
   0521 1E                 2275 	.db #0x1E
   0522 19                 2276 	.db #0x19
   0523 1D                 2277 	.db #0x1D
   0524 1F                 2278 	.db #0x1F
   0525 1E                 2279 	.db #0x1E
   0526 19                 2280 	.db #0x19
   0527 08                 2281 	.db #0x08
   0528 1B                 2282 	.db #0x1B
   0529 1E                 2283 	.db #0x1E
   052A 12                 2284 	.db #0x12
   052B 10                 2285 	.db #0x10
   052C 08                 2286 	.db #0x08
   052D 16                 2287 	.db #0x16
   052E 10                 2288 	.db #0x10
   052F 11                 2289 	.db #0x11
   0530 17                 2290 	.db #0x17
   0531 09                 2291 	.db #0x09
   0532 11                 2292 	.db #0x11
   0533 0F                 2293 	.db #0x0F
   0534 01                 2294 	.db #0x01
   0535 1E                 2295 	.db #0x1E
   0536 14                 2296 	.db #0x14
   0537 16                 2297 	.db #0x16
   0538 17                 2298 	.db #0x17
   0539 15                 2299 	.db #0x15
   053A 10                 2300 	.db #0x10
   053B 1E                 2301 	.db #0x1E
   053C 0A                 2302 	.db #0x0A
   053D 18                 2303 	.db #0x18
   053E 1F                 2304 	.db #0x1F
   053F 1E                 2305 	.db #0x1E
   0540 19                 2306 	.db #0x19
   0541 0B                 2307 	.db #0x0B
   0542 09                 2308 	.db #0x09
   0543 11                 2309 	.db #0x11
   0544 0F                 2310 	.db #0x0F
   0545 1C                 2311 	.db #0x1C
   0546 05                 2312 	.db #0x05
   0547 09                 2313 	.db #0x09
   0548 1E                 2314 	.db #0x1E
   0549 0B                 2315 	.db #0x0B
   054A 09                 2316 	.db #0x09
   054B 1F                 2317 	.db #0x1F
   054C 1E                 2318 	.db #0x1E
   054D 19                 2319 	.db #0x19
   054E 1E                 2320 	.db #0x1E
   054F 1F                 2321 	.db #0x1F
   0550 19                 2322 	.db #0x19
   0551 1E                 2323 	.db #0x1E
   0552 0B                 2324 	.db #0x0B
   0553 1B                 2325 	.db #0x1B
   0554 15                 2326 	.db #0x15
   0555 19                 2327 	.db #0x19
   0556 1D                 2328 	.db #0x1D
   0557 19                 2329 	.db #0x19
   0558 19                 2330 	.db #0x19
   0559 13                 2331 	.db #0x13
   055A 0B                 2332 	.db #0x0B
   055B 09                 2333 	.db #0x09
   055C 1E                 2334 	.db #0x1E
   055D 15                 2335 	.db #0x15
   055E 13                 2336 	.db #0x13
   055F 1E                 2337 	.db #0x1E
   0560 0C                 2338 	.db #0x0C
   0561 01                 2339 	.db #0x01
   0562 1E                 2340 	.db #0x1E
   0563 1F                 2341 	.db #0x1F
   0564 1E                 2342 	.db #0x1E
   0565 1E                 2343 	.db #0x1E
   0566 1C                 2344 	.db #0x1C
   0567 1D                 2345 	.db #0x1D
   0568 01                 2346 	.db #0x01
   0569 11                 2347 	.db #0x11
   056A 13                 2348 	.db #0x13
   056B 0B                 2349 	.db #0x0B
   056C 09                 2350 	.db #0x09
   056D 1A                 2351 	.db #0x1A
   056E 14                 2352 	.db #0x14
   056F 04                 2353 	.db #0x04
   0570 0E                 2354 	.db #0x0E
   0571 07                 2355 	.db #0x07
   0572 01                 2356 	.db #0x01
   0573 1E                 2357 	.db #0x1E
   0574 1F                 2358 	.db #0x1F
   0575 00                 2359 	.db #0x00
   0576 02                 2360 	.db #0x02
   0577 1E                 2361 	.db #0x1E
   0578 03                 2362 	.db #0x03
   0579 01                 2363 	.db #0x01
   057A 0C                 2364 	.db #0x0C
   057B 06                 2365 	.db #0x06
   057C 0B                 2366 	.db #0x0B
   057D 1B                 2367 	.db #0x1B
   057E 04                 2368 	.db #0x04
   057F 0E                 2369 	.db #0x0E
   0580 19                 2370 	.db #0x19
   0581 17                 2371 	.db #0x17
   0582 07                 2372 	.db #0x07
   0583 1D                 2373 	.db #0x1D
   0584 1C                 2374 	.db #0x1C
   0585 02                 2375 	.db #0x02
   0586 1F                 2376 	.db #0x1F
   0587 1E                 2377 	.db #0x1E
   0588 08                 2378 	.db #0x08
   0589 07                 2379 	.db #0x07
   058A 06                 2380 	.db #0x06
   058B 1E                 2381 	.db #0x1E
   058C 08                 2382 	.db #0x08
   058D 04                 2383 	.db #0x04
   058E 0E                 2384 	.db #0x0E
   058F 14                 2385 	.db #0x14
   0590 09                 2386 	.db #0x09
   0591 11                 2387 	.db #0x11
   0592 17                 2388 	.db #0x17
   0593 07                 2389 	.db #0x07
   0594 1D                 2390 	.db #0x1D
   0595 1F                 2391 	.db #0x1F
   0596 1E                 2392 	.db #0x1E
   0597 08                 2393 	.db #0x08
   0598 0A                 2394 	.db #0x0A
   0599 1E                 2395 	.db #0x1E
   059A 1F                 2396 	.db #0x1F
   059B 1F                 2397 	.db #0x1F
   059C 04                 2398 	.db #0x04
   059D 0E                 2399 	.db #0x0E
   059E 14                 2400 	.db #0x14
   059F 0A                 2401 	.db #0x0A
   05A0 0B                 2402 	.db #0x0B
   05A1 09                 2403 	.db #0x09
   05A2 11                 2404 	.db #0x11
   05A3 17                 2405 	.db #0x17
   05A4 07                 2406 	.db #0x07
   05A5 01                 2407 	.db #0x01
   05A6 08                 2408 	.db #0x08
   05A7 0A                 2409 	.db #0x0A
   05A8 1E                 2410 	.db #0x1E
   05A9 1F                 2411 	.db #0x1F
   05AA 1F                 2412 	.db #0x1F
   05AB 1E                 2413 	.db #0x1E
   05AC                    2414 _tri_inva2:
   05AC 14                 2415 	.db #0x14
   05AD 04                 2416 	.db #0x04
   05AE 0E                 2417 	.db #0x0E
   05AF 14                 2418 	.db #0x14
   05B0 04                 2419 	.db #0x04
   05B1 0E                 2420 	.db #0x0E
   05B2 14                 2421 	.db #0x14
   05B3 1A                 2422 	.db #0x1A
   05B4 1B                 2423 	.db #0x1B
   05B5 15                 2424 	.db #0x15
   05B6 0F                 2425 	.db #0x0F
   05B7 05                 2426 	.db #0x05
   05B8 15                 2427 	.db #0x15
   05B9 0F                 2428 	.db #0x0F
   05BA 05                 2429 	.db #0x05
   05BB 15                 2430 	.db #0x15
   05BC 04                 2431 	.db #0x04
   05BD 0E                 2432 	.db #0x0E
   05BE 14                 2433 	.db #0x14
   05BF 04                 2434 	.db #0x04
   05C0 0E                 2435 	.db #0x0E
   05C1 14                 2436 	.db #0x14
   05C2 04                 2437 	.db #0x04
   05C3 1C                 2438 	.db #0x1C
   05C4 1D                 2439 	.db #0x1D
   05C5 05                 2440 	.db #0x05
   05C6 15                 2441 	.db #0x15
   05C7 0F                 2442 	.db #0x0F
   05C8 05                 2443 	.db #0x05
   05C9 15                 2444 	.db #0x15
   05CA 0F                 2445 	.db #0x0F
   05CB 05                 2446 	.db #0x05
   05CC 0E                 2447 	.db #0x0E
   05CD 14                 2448 	.db #0x14
   05CE 04                 2449 	.db #0x04
   05CF 0E                 2450 	.db #0x0E
   05D0 14                 2451 	.db #0x14
   05D1 04                 2452 	.db #0x04
   05D2 0E                 2453 	.db #0x0E
   05D3 18                 2454 	.db #0x18
   05D4 19                 2455 	.db #0x19
   05D5 0F                 2456 	.db #0x0F
   05D6 05                 2457 	.db #0x05
   05D7 15                 2458 	.db #0x15
   05D8 0F                 2459 	.db #0x0F
   05D9 05                 2460 	.db #0x05
   05DA 15                 2461 	.db #0x15
   05DB 0F                 2462 	.db #0x0F
   05DC 18                 2463 	.db #0x18
   05DD 1A                 2464 	.db #0x1A
   05DE 1C                 2465 	.db #0x1C
   05DF 18                 2466 	.db #0x18
   05E0 1A                 2467 	.db #0x1A
   05E1 1C                 2468 	.db #0x1C
   05E2 18                 2469 	.db #0x18
   05E3 18                 2470 	.db #0x18
   05E4 19                 2471 	.db #0x19
   05E5 19                 2472 	.db #0x19
   05E6 1D                 2473 	.db #0x1D
   05E7 1B                 2474 	.db #0x1B
   05E8 19                 2475 	.db #0x19
   05E9 1D                 2476 	.db #0x1D
   05EA 1B                 2477 	.db #0x1B
   05EB 19                 2478 	.db #0x19
   05EC 18                 2479 	.db #0x18
   05ED 1A                 2480 	.db #0x1A
   05EE 1C                 2481 	.db #0x1C
   05EF 18                 2482 	.db #0x18
   05F0 1A                 2483 	.db #0x1A
   05F1 1C                 2484 	.db #0x1C
   05F2 18                 2485 	.db #0x18
   05F3 18                 2486 	.db #0x18
   05F4 0D                 2487 	.db #0x0D
   05F5 19                 2488 	.db #0x19
   05F6 1D                 2489 	.db #0x1D
   05F7 1B                 2490 	.db #0x1B
   05F8 19                 2491 	.db #0x19
   05F9 1D                 2492 	.db #0x1D
   05FA 1B                 2493 	.db #0x1B
   05FB 19                 2494 	.db #0x19
   05FC 19                 2495 	.db #0x19
   05FD 1B                 2496 	.db #0x1B
   05FE 1D                 2497 	.db #0x1D
   05FF 19                 2498 	.db #0x19
   0600 1B                 2499 	.db #0x1B
   0601 1D                 2500 	.db #0x1D
   0602 19                 2501 	.db #0x19
   0603 0C                 2502 	.db #0x0C
   0604 0E                 2503 	.db #0x0E
   0605 18                 2504 	.db #0x18
   0606 1C                 2505 	.db #0x1C
   0607 1A                 2506 	.db #0x1A
   0608 18                 2507 	.db #0x18
   0609 1C                 2508 	.db #0x1C
   060A 1A                 2509 	.db #0x1A
   060B 18                 2510 	.db #0x18
   060C 19                 2511 	.db #0x19
   060D 1B                 2512 	.db #0x1B
   060E 1D                 2513 	.db #0x1D
   060F 19                 2514 	.db #0x19
   0610 1B                 2515 	.db #0x1B
   0611 1D                 2516 	.db #0x1D
   0612 19                 2517 	.db #0x19
   0613 0F                 2518 	.db #0x0F
   0614 0D                 2519 	.db #0x0D
   0615 18                 2520 	.db #0x18
   0616 1C                 2521 	.db #0x1C
   0617 1A                 2522 	.db #0x1A
   0618 18                 2523 	.db #0x18
   0619 1C                 2524 	.db #0x1C
   061A 1A                 2525 	.db #0x1A
   061B 18                 2526 	.db #0x18
   061C 0D                 2527 	.db #0x0D
   061D 17                 2528 	.db #0x17
   061E 07                 2529 	.db #0x07
   061F 0D                 2530 	.db #0x0D
   0620 17                 2531 	.db #0x17
   0621 07                 2532 	.db #0x07
   0622 0D                 2533 	.db #0x0D
   0623 0C                 2534 	.db #0x0C
   0624 0E                 2535 	.db #0x0E
   0625 0C                 2536 	.db #0x0C
   0626 06                 2537 	.db #0x06
   0627 16                 2538 	.db #0x16
   0628 0C                 2539 	.db #0x0C
   0629 06                 2540 	.db #0x06
   062A 16                 2541 	.db #0x16
   062B 0C                 2542 	.db #0x0C
   062C 07                 2543 	.db #0x07
   062D 0D                 2544 	.db #0x0D
   062E 17                 2545 	.db #0x17
   062F 07                 2546 	.db #0x07
   0630 0D                 2547 	.db #0x0D
   0631 17                 2548 	.db #0x17
   0632 02                 2549 	.db #0x02
   0633 1A                 2550 	.db #0x1A
   0634 1A                 2551 	.db #0x1A
   0635 03                 2552 	.db #0x03
   0636 16                 2553 	.db #0x16
   0637 0C                 2554 	.db #0x0C
   0638 06                 2555 	.db #0x06
   0639 16                 2556 	.db #0x16
   063A 0C                 2557 	.db #0x0C
   063B 06                 2558 	.db #0x06
   063C 17                 2559 	.db #0x17
   063D 07                 2560 	.db #0x07
   063E 0D                 2561 	.db #0x0D
   063F 17                 2562 	.db #0x17
   0640 07                 2563 	.db #0x07
   0641 10                 2564 	.db #0x10
   0642 1F                 2565 	.db #0x1F
   0643 1A                 2566 	.db #0x1A
   0644 1A                 2567 	.db #0x1A
   0645 1F                 2568 	.db #0x1F
   0646 11                 2569 	.db #0x11
   0647 06                 2570 	.db #0x06
   0648 16                 2571 	.db #0x16
   0649 0C                 2572 	.db #0x0C
   064A 06                 2573 	.db #0x06
   064B 16                 2574 	.db #0x16
   064C 0D                 2575 	.db #0x0D
   064D 17                 2576 	.db #0x17
   064E 07                 2577 	.db #0x07
   064F 0D                 2578 	.db #0x0D
   0650 0A                 2579 	.db #0x0A
   0651 1F                 2580 	.db #0x1F
   0652 1F                 2581 	.db #0x1F
   0653 1A                 2582 	.db #0x1A
   0654 1A                 2583 	.db #0x1A
   0655 1F                 2584 	.db #0x1F
   0656 1F                 2585 	.db #0x1F
   0657 0B                 2586 	.db #0x0B
   0658 0C                 2587 	.db #0x0C
   0659 06                 2588 	.db #0x06
   065A 16                 2589 	.db #0x16
   065B 0C                 2590 	.db #0x0C
   065C 07                 2591 	.db #0x07
   065D 0D                 2592 	.db #0x0D
   065E 17                 2593 	.db #0x17
   065F 02                 2594 	.db #0x02
   0660 1F                 2595 	.db #0x1F
   0661 1F                 2596 	.db #0x1F
   0662 1F                 2597 	.db #0x1F
   0663 1F                 2598 	.db #0x1F
   0664 1F                 2599 	.db #0x1F
   0665 1F                 2600 	.db #0x1F
   0666 1F                 2601 	.db #0x1F
   0667 1F                 2602 	.db #0x1F
   0668 03                 2603 	.db #0x03
   0669 16                 2604 	.db #0x16
   066A 0C                 2605 	.db #0x0C
   066B 06                 2606 	.db #0x06
   066C                    2607 _tri_inva3:
   066C 1A                 2608 	.db #0x1A
   066D 1C                 2609 	.db #0x1C
   066E 18                 2610 	.db #0x18
   066F 1A                 2611 	.db #0x1A
   0670 1C                 2612 	.db #0x1C
   0671 18                 2613 	.db #0x18
   0672 1A                 2614 	.db #0x1A
   0673 1E                 2615 	.db #0x1E
   0674 00                 2616 	.db #0x00
   0675 1C                 2617 	.db #0x1C
   0676 1C                 2618 	.db #0x1C
   0677 1D                 2619 	.db #0x1D
   0678 1C                 2620 	.db #0x1C
   0679 1C                 2621 	.db #0x1C
   067A 1D                 2622 	.db #0x1D
   067B 1C                 2623 	.db #0x1C
   067C 1A                 2624 	.db #0x1A
   067D 1C                 2625 	.db #0x1C
   067E 18                 2626 	.db #0x18
   067F 1A                 2627 	.db #0x1A
   0680 1C                 2628 	.db #0x1C
   0681 18                 2629 	.db #0x18
   0682 1A                 2630 	.db #0x1A
   0683 1F                 2631 	.db #0x1F
   0684 1C                 2632 	.db #0x1C
   0685 18                 2633 	.db #0x18
   0686 1F                 2634 	.db #0x1F
   0687 1C                 2635 	.db #0x1C
   0688 1D                 2636 	.db #0x1D
   0689 1D                 2637 	.db #0x1D
   068A 1C                 2638 	.db #0x1C
   068B 1D                 2639 	.db #0x1D
   068C 04                 2640 	.db #0x04
   068D 0E                 2641 	.db #0x0E
   068E 14                 2642 	.db #0x14
   068F 04                 2643 	.db #0x04
   0690 0E                 2644 	.db #0x0E
   0691 14                 2645 	.db #0x14
   0692 0A                 2646 	.db #0x0A
   0693 1E                 2647 	.db #0x1E
   0694 1C                 2648 	.db #0x1C
   0695 0D                 2649 	.db #0x0D
   0696 18                 2650 	.db #0x18
   0697 1C                 2651 	.db #0x1C
   0698 1C                 2652 	.db #0x1C
   0699 1C                 2653 	.db #0x1C
   069A 1C                 2654 	.db #0x1C
   069B 1C                 2655 	.db #0x1C
   069C 1C                 2656 	.db #0x1C
   069D 18                 2657 	.db #0x18
   069E 1A                 2658 	.db #0x1A
   069F 1C                 2659 	.db #0x1C
   06A0 18                 2660 	.db #0x18
   06A1 1A                 2661 	.db #0x1A
   06A2 1E                 2662 	.db #0x1E
   06A3 00                 2663 	.db #0x00
   06A4 1C                 2664 	.db #0x1C
   06A5 1D                 2665 	.db #0x1D
   06A6 1C                 2666 	.db #0x1C
   06A7 1C                 2667 	.db #0x1C
   06A8 1D                 2668 	.db #0x1D
   06A9 18                 2669 	.db #0x18
   06AA 0F                 2670 	.db #0x0F
   06AB 1C                 2671 	.db #0x1C
   06AC 1C                 2672 	.db #0x1C
   06AD 18                 2673 	.db #0x18
   06AE 1A                 2674 	.db #0x1A
   06AF 1C                 2675 	.db #0x1C
   06B0 18                 2676 	.db #0x18
   06B1 1A                 2677 	.db #0x1A
   06B2 1F                 2678 	.db #0x1F
   06B3 1C                 2679 	.db #0x1C
   06B4 1D                 2680 	.db #0x1D
   06B5 02                 2681 	.db #0x02
   06B6 1C                 2682 	.db #0x1C
   06B7 02                 2683 	.db #0x02
   06B8 1D                 2684 	.db #0x1D
   06B9 1F                 2685 	.db #0x1F
   06BA 18                 2686 	.db #0x18
   06BB 1C                 2687 	.db #0x1C
   06BC 1C                 2688 	.db #0x1C
   06BD 18                 2689 	.db #0x18
   06BE 1A                 2690 	.db #0x1A
   06BF 1C                 2691 	.db #0x1C
   06C0 18                 2692 	.db #0x18
   06C1 1A                 2693 	.db #0x1A
   06C2 1F                 2694 	.db #0x1F
   06C3 03                 2695 	.db #0x03
   06C4 1C                 2696 	.db #0x1C
   06C5 1D                 2697 	.db #0x1D
   06C6 1C                 2698 	.db #0x1C
   06C7 1C                 2699 	.db #0x1C
   06C8 1C                 2700 	.db #0x1C
   06C9 1C                 2701 	.db #0x1C
   06CA 1D                 2702 	.db #0x1D
   06CB 1C                 2703 	.db #0x1C
   06CC 0E                 2704 	.db #0x0E
   06CD 14                 2705 	.db #0x14
   06CE 04                 2706 	.db #0x04
   06CF 0E                 2707 	.db #0x0E
   06D0 14                 2708 	.db #0x14
   06D1 0A                 2709 	.db #0x0A
   06D2 1E                 2710 	.db #0x1E
   06D3 00                 2711 	.db #0x00
   06D4 0B                 2712 	.db #0x0B
   06D5 0A                 2713 	.db #0x0A
   06D6 0B                 2714 	.db #0x0B
   06D7 0A                 2715 	.db #0x0A
   06D8 0B                 2716 	.db #0x0B
   06D9 0A                 2717 	.db #0x0A
   06DA 1D                 2718 	.db #0x1D
   06DB 1C                 2719 	.db #0x1C
   06DC 14                 2720 	.db #0x14
   06DD 04                 2721 	.db #0x04
   06DE 0E                 2722 	.db #0x0E
   06DF 14                 2723 	.db #0x14
   06E0 0A                 2724 	.db #0x0A
   06E1 1F                 2725 	.db #0x1F
   06E2 1E                 2726 	.db #0x1E
   06E3 1C                 2727 	.db #0x1C
   06E4 1F                 2728 	.db #0x1F
   06E5 1E                 2729 	.db #0x1E
   06E6 1F                 2730 	.db #0x1F
   06E7 1E                 2731 	.db #0x1E
   06E8 1F                 2732 	.db #0x1F
   06E9 1E                 2733 	.db #0x1E
   06EA 1D                 2734 	.db #0x1D
   06EB 1C                 2735 	.db #0x1C
   06EC 1A                 2736 	.db #0x1A
   06ED 1C                 2737 	.db #0x1C
   06EE 18                 2738 	.db #0x18
   06EF 1A                 2739 	.db #0x1A
   06F0 1F                 2740 	.db #0x1F
   06F1 12                 2741 	.db #0x12
   06F2 18                 2742 	.db #0x18
   06F3 18                 2743 	.db #0x18
   06F4 19                 2744 	.db #0x19
   06F5 19                 2745 	.db #0x19
   06F6 13                 2746 	.db #0x13
   06F7 1E                 2747 	.db #0x1E
   06F8 1F                 2748 	.db #0x1F
   06F9 1E                 2749 	.db #0x1E
   06FA 1D                 2750 	.db #0x1D
   06FB 1C                 2751 	.db #0x1C
   06FC 1B                 2752 	.db #0x1B
   06FD 1D                 2753 	.db #0x1D
   06FE 19                 2754 	.db #0x19
   06FF 1B                 2755 	.db #0x1B
   0700 1E                 2756 	.db #0x1E
   0701 18                 2757 	.db #0x18
   0702 18                 2758 	.db #0x18
   0703 18                 2759 	.db #0x18
   0704 19                 2760 	.db #0x19
   0705 19                 2761 	.db #0x19
   0706 19                 2762 	.db #0x19
   0707 13                 2763 	.db #0x13
   0708 1F                 2764 	.db #0x1F
   0709 00                 2765 	.db #0x00
   070A 1C                 2766 	.db #0x1C
   070B 1C                 2767 	.db #0x1C
   070C 1B                 2768 	.db #0x1B
   070D 1D                 2769 	.db #0x1D
   070E 19                 2770 	.db #0x19
   070F 1B                 2771 	.db #0x1B
   0710 1F                 2772 	.db #0x1F
   0711 18                 2773 	.db #0x18
   0712 18                 2774 	.db #0x18
   0713 0C                 2775 	.db #0x0C
   0714 1C                 2776 	.db #0x1C
   0715 1C                 2777 	.db #0x1C
   0716 1C                 2778 	.db #0x1C
   0717 1C                 2779 	.db #0x1C
   0718 1C                 2780 	.db #0x1C
   0719 1C                 2781 	.db #0x1C
   071A 1C                 2782 	.db #0x1C
   071B 1C                 2783 	.db #0x1C
   071C 17                 2784 	.db #0x17
   071D 07                 2785 	.db #0x07
   071E 0D                 2786 	.db #0x0D
   071F 17                 2787 	.db #0x17
   0720 09                 2788 	.db #0x09
   0721 1E                 2789 	.db #0x1E
   0722 1F                 2790 	.db #0x1F
   0723 1D                 2791 	.db #0x1D
   0724 1D                 2792 	.db #0x1D
   0725 1D                 2793 	.db #0x1D
   0726 1C                 2794 	.db #0x1C
   0727 1D                 2795 	.db #0x1D
   0728 1C                 2796 	.db #0x1C
   0729 1C                 2797 	.db #0x1C
   072A 1C                 2798 	.db #0x1C
   072B 1C                 2799 	.db #0x1C
   072C                    2800 _tri_inva4:
   072C 1E                 2801 	.db #0x1E
   072D 00                 2802 	.db #0x00
   072E 05                 2803 	.db #0x05
   072F 0A                 2804 	.db #0x0A
   0730 1E                 2805 	.db #0x1E
   0731 00                 2806 	.db #0x00
   0732 06                 2807 	.db #0x06
   0733 16                 2808 	.db #0x16
   0734 0F                 2809 	.db #0x0F
   0735 01                 2810 	.db #0x01
   0736 1F                 2811 	.db #0x1F
   0737 11                 2812 	.db #0x11
   0738 0C                 2813 	.db #0x0C
   0739 01                 2814 	.db #0x01
   073A 1F                 2815 	.db #0x1F
   073B 1F                 2816 	.db #0x1F
   073C 12                 2817 	.db #0x12
   073D 0F                 2818 	.db #0x0F
   073E 02                 2819 	.db #0x02
   073F 1E                 2820 	.db #0x1E
   0740 12                 2821 	.db #0x12
   0741 0F                 2822 	.db #0x0F
   0742 05                 2823 	.db #0x05
   0743 15                 2824 	.db #0x15
   0744 0C                 2825 	.db #0x0C
   0745 06                 2826 	.db #0x06
   0746 09                 2827 	.db #0x09
   0747 1F                 2828 	.db #0x1F
   0748 03                 2829 	.db #0x03
   0749 06                 2830 	.db #0x06
   074A 09                 2831 	.db #0x09
   074B 1F                 2832 	.db #0x1F
   074C 15                 2833 	.db #0x15
   074D 10                 2834 	.db #0x10
   074E 1E                 2835 	.db #0x1E
   074F 08                 2836 	.db #0x08
   0750 15                 2837 	.db #0x15
   0751 10                 2838 	.db #0x10
   0752 1E                 2839 	.db #0x1E
   0753 1F                 2840 	.db #0x1F
   0754 1F                 2841 	.db #0x1F
   0755 0B                 2842 	.db #0x0B
   0756 16                 2843 	.db #0x16
   0757 13                 2844 	.db #0x13
   0758 1F                 2845 	.db #0x1F
   0759 0B                 2846 	.db #0x0B
   075A 16                 2847 	.db #0x16
   075B 13                 2848 	.db #0x13
   075C 05                 2849 	.db #0x05
   075D 1E                 2850 	.db #0x1E
   075E 00                 2851 	.db #0x00
   075F 05                 2852 	.db #0x05
   0760 0A                 2853 	.db #0x0A
   0761 1E                 2854 	.db #0x1E
   0762 08                 2855 	.db #0x08
   0763 15                 2856 	.db #0x15
   0764 13                 2857 	.db #0x13
   0765 1F                 2858 	.db #0x1F
   0766 11                 2859 	.db #0x11
   0767 0D                 2860 	.db #0x0D
   0768 01                 2861 	.db #0x01
   0769 1F                 2862 	.db #0x1F
   076A 0C                 2863 	.db #0x0C
   076B 0D                 2864 	.db #0x0D
   076C 02                 2865 	.db #0x02
   076D 1E                 2866 	.db #0x1E
   076E 0E                 2867 	.db #0x0E
   076F 0F                 2868 	.db #0x0F
   0770 1E                 2869 	.db #0x1E
   0771 00                 2870 	.db #0x00
   0772 05                 2871 	.db #0x05
   0773 15                 2872 	.db #0x15
   0774 0C                 2873 	.db #0x0C
   0775 01                 2874 	.db #0x01
   0776 1F                 2875 	.db #0x1F
   0777 07                 2876 	.db #0x07
   0778 07                 2877 	.db #0x07
   0779 1F                 2878 	.db #0x1F
   077A 06                 2879 	.db #0x06
   077B 07                 2880 	.db #0x07
   077C 1E                 2881 	.db #0x1E
   077D 1E                 2882 	.db #0x1E
   077E 15                 2883 	.db #0x15
   077F 15                 2884 	.db #0x15
   0780 1E                 2885 	.db #0x1E
   0781 0F                 2886 	.db #0x0F
   0782 02                 2887 	.db #0x02
   0783 1E                 2888 	.db #0x1E
   0784 07                 2889 	.db #0x07
   0785 06                 2890 	.db #0x06
   0786 1F                 2891 	.db #0x1F
   0787 17                 2892 	.db #0x17
   0788 17                 2893 	.db #0x17
   0789 1E                 2894 	.db #0x1E
   078A 17                 2895 	.db #0x17
   078B 16                 2896 	.db #0x16
   078C 1F                 2897 	.db #0x1F
   078D 1F                 2898 	.db #0x1F
   078E 04                 2899 	.db #0x04
   078F 05                 2900 	.db #0x05
   0790 1F                 2901 	.db #0x1F
   0791 14                 2902 	.db #0x14
   0792 09                 2903 	.db #0x09
   0793 11                 2904 	.db #0x11
   0794 17                 2905 	.db #0x17
   0795 0A                 2906 	.db #0x0A
   0796 1E                 2907 	.db #0x1E
   0797 0D                 2908 	.db #0x0D
   0798 0D                 2909 	.db #0x0D
   0799 1E                 2910 	.db #0x1E
   079A 0D                 2911 	.db #0x0D
   079B 0C                 2912 	.db #0x0C
   079C 09                 2913 	.db #0x09
   079D 1F                 2914 	.db #0x1F
   079E 0E                 2915 	.db #0x0E
   079F 0F                 2916 	.db #0x0F
   07A0 1F                 2917 	.db #0x1F
   07A1 04                 2918 	.db #0x04
   07A2 04                 2919 	.db #0x04
   07A3 1F                 2920 	.db #0x1F
   07A4 1F                 2921 	.db #0x1F
   07A5 1E                 2922 	.db #0x1E
   07A6 08                 2923 	.db #0x08
   07A7 06                 2924 	.db #0x06
   07A8 07                 2925 	.db #0x07
   07A9 1E                 2926 	.db #0x1E
   07AA 07                 2927 	.db #0x07
   07AB 06                 2928 	.db #0x06
   07AC 04                 2929 	.db #0x04
   07AD 1F                 2930 	.db #0x1F
   07AE 11                 2931 	.db #0x11
   07AF 14                 2932 	.db #0x14
   07B0 1F                 2933 	.db #0x1F
   07B1 03                 2934 	.db #0x03
   07B2 0E                 2935 	.db #0x0E
   07B3 14                 2936 	.db #0x14
   07B4 07                 2937 	.db #0x07
   07B5 0D                 2938 	.db #0x0D
   07B6 17                 2939 	.db #0x17
   07B7 0A                 2940 	.db #0x0A
   07B8 1E                 2941 	.db #0x1E
   07B9 12                 2942 	.db #0x12
   07BA 17                 2943 	.db #0x17
   07BB 0A                 2944 	.db #0x0A
   07BC 0E                 2945 	.db #0x0E
   07BD 1F                 2946 	.db #0x1F
   07BE 1F                 2947 	.db #0x1F
   07BF 04                 2948 	.db #0x04
   07C0 01                 2949 	.db #0x01
   07C1 1F                 2950 	.db #0x1F
   07C2 11                 2951 	.db #0x11
   07C3 17                 2952 	.db #0x17
   07C4 07                 2953 	.db #0x07
   07C5 0D                 2954 	.db #0x0D
   07C6 10                 2955 	.db #0x10
   07C7 1E                 2956 	.db #0x1E
   07C8 00                 2957 	.db #0x00
   07C9 0D                 2958 	.db #0x0D
   07CA 10                 2959 	.db #0x10
   07CB 1E                 2960 	.db #0x1E
   07CC 14                 2961 	.db #0x14
   07CD 09                 2962 	.db #0x09
   07CE 1F                 2963 	.db #0x1F
   07CF 03                 2964 	.db #0x03
   07D0 0E                 2965 	.db #0x0E
   07D1 13                 2966 	.db #0x13
   07D2 1F                 2967 	.db #0x1F
   07D3 1F                 2968 	.db #0x1F
   07D4 1F                 2969 	.db #0x1F
   07D5 1E                 2970 	.db #0x1E
   07D6 1E                 2971 	.db #0x1E
   07D7 08                 2972 	.db #0x08
   07D8 07                 2973 	.db #0x07
   07D9 02                 2974 	.db #0x02
   07DA 1E                 2975 	.db #0x1E
   07DB 1E                 2976 	.db #0x1E
   07DC 0B                 2977 	.db #0x0B
   07DD 04                 2978 	.db #0x04
   07DE 01                 2979 	.db #0x01
   07DF 1F                 2980 	.db #0x1F
   07E0 11                 2981 	.db #0x11
   07E1 14                 2982 	.db #0x14
   07E2 04                 2983 	.db #0x04
   07E3 0E                 2984 	.db #0x0E
   07E4 17                 2985 	.db #0x17
   07E5 07                 2986 	.db #0x07
   07E6 0D                 2987 	.db #0x0D
   07E7 17                 2988 	.db #0x17
   07E8 0A                 2989 	.db #0x0A
   07E9 1E                 2990 	.db #0x1E
   07EA 1E                 2991 	.db #0x1E
   07EB 1E                 2992 	.db #0x1E
                           2993 ;demo.c:243: void my_isr(void) interrupt
                           2994 ;	---------------------------------
                           2995 ; Function my_isr
                           2996 ; ---------------------------------
   07EC                    2997 _my_isr_start::
   07EC                    2998 _my_isr:
   07EC F5                 2999 	push	af
   07ED C5                 3000 	push	bc
   07EE D5                 3001 	push	de
   07EF E5                 3002 	push	hl
   07F0 FD E5              3003 	push	iy
                           3004 ;demo.c:245: DI;
   07F2 F3                 3005 		di 
                           3006 ;demo.c:247: READ_VDP_STATUS;
   07F3 DB 99              3007 		in a,(#0x99) 
                           3008 ;demo.c:249: PLY_Play();
   07F5 CDr00s00           3009 	call	_PLY_Play
                           3010 ;demo.c:250: PLY_SendRegisters();
   07F8 CDr00s00           3011 	call	_PLY_SendRegisters
                           3012 ;demo.c:252: vbicount+=1;
   07FB FD 21r26s41        3013 	ld	iy,#_vbicount
   07FF FD 34 00           3014 	inc	0 (iy)
   0802 20 07              3015 	jr	NZ,00103$
   0804 FD 21r26s41        3016 	ld	iy,#_vbicount
   0808 FD 34 01           3017 	inc	1 (iy)
   080B                    3018 00103$:
                           3019 ;demo.c:253: tick++;
   080B FD 21r28s41        3020 	ld	iy,#_tick
   080F FD 34 00           3021 	inc	0 (iy)
   0812 20 07              3022 	jr	NZ,00104$
   0814 FD 21r28s41        3023 	ld	iy,#_tick
   0818 FD 34 01           3024 	inc	1 (iy)
   081B                    3025 00104$:
                           3026 ;demo.c:255: EI;
   081B FB                 3027 		ei 
   081C FD E1              3028 	pop	iy
   081E E1                 3029 	pop	hl
   081F D1                 3030 	pop	de
   0820 C1                 3031 	pop	bc
   0821 F1                 3032 	pop	af
   0822 ED 4D              3033 	reti
   0824                    3034 _my_isr_end::
                           3035 ;demo.c:263: void scratch_clear() {
                           3036 ;	---------------------------------
                           3037 ; Function scratch_clear
                           3038 ; ---------------------------------
   0824                    3039 _scratch_clear_start::
   0824                    3040 _scratch_clear:
                           3041 ;demo.c:264: memset((uint8_t *) &scratch, 0, 128);
   0824 21 80 00           3042 	ld	hl,#0x0080
   0827 E5                 3043 	push	hl
   0828 3E 00              3044 	ld	a,#0x00
   082A F5                 3045 	push	af
   082B 33                 3046 	inc	sp
   082C 21rC6s3F           3047 	ld	hl,#_scratch
   082F E5                 3048 	push	hl
   0830 CDr00s00           3049 	call	_memset
   0833 F1                 3050 	pop	af
   0834 F1                 3051 	pop	af
   0835 33                 3052 	inc	sp
   0836 C9                 3053 	ret
   0837                    3054 _scratch_clear_end::
                           3055 ;demo.c:267: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3056 ;	---------------------------------
                           3057 ; Function pal_load
                           3058 ; ---------------------------------
   0837                    3059 _pal_load_start::
   0837                    3060 _pal_load:
   0837 DD E5              3061 	push	ix
   0839 DD 21 00 00        3062 	ld	ix,#0
   083D DD 39              3063 	add	ix,sp
   083F 21 D2 FF           3064 	ld	hl,#-46
   0842 39                 3065 	add	hl,sp
   0843 F9                 3066 	ld	sp,hl
                           3067 ;demo.c:270: if(debugprint == 1) {
   0844 DD 7E 07           3068 	ld	a,7 (ix)
   0847 D6 01              3069 	sub	a,#0x01
   0849 20 06              3070 	jr	NZ,00115$
   084B DD 7E 08           3071 	ld	a,8 (ix)
   084E B7                 3072 	or	a,a
   084F 28 02              3073 	jr	Z,00116$
   0851                    3074 00115$:
   0851 18 1B              3075 	jr	00102$
   0853                    3076 00116$:
                           3077 ;demo.c:271: puts("loading palfile: ");
   0853 21r01s09           3078 	ld	hl,#__str_0
   0856 E5                 3079 	push	hl
   0857 CDr00s00           3080 	call	_puts
   085A F1                 3081 	pop	af
                           3082 ;demo.c:272: puts(file_name);
   085B DD 6E 04           3083 	ld	l,4 (ix)
   085E DD 66 05           3084 	ld	h,5 (ix)
   0861 E5                 3085 	push	hl
   0862 CDr00s00           3086 	call	_puts
   0865 F1                 3087 	pop	af
                           3088 ;demo.c:273: puts("\r\n");
   0866 21r13s09           3089 	ld	hl,#__str_1
   0869 E5                 3090 	push	hl
   086A CDr00s00           3091 	call	_puts
   086D F1                 3092 	pop	af
   086E                    3093 00102$:
                           3094 ;demo.c:276: memset((uint8_t *) &f, 0, sizeof(fcb));
   086E 21 00 00           3095 	ld	hl,#0x0000
   0871 39                 3096 	add	hl,sp
   0872 4D                 3097 	ld	c,l
   0873 44                 3098 	ld	b,h
   0874 21 2E 00           3099 	ld	hl,#0x002E
   0877 E5                 3100 	push	hl
   0878 3E 00              3101 	ld	a,#0x00
   087A F5                 3102 	push	af
   087B 33                 3103 	inc	sp
   087C C5                 3104 	push	bc
   087D CDr00s00           3105 	call	_memset
   0880 F1                 3106 	pop	af
   0881 F1                 3107 	pop	af
   0882 33                 3108 	inc	sp
                           3109 ;demo.c:277: scratch_clear();
   0883 CDr24s08           3110 	call	_scratch_clear
                           3111 ;demo.c:279: f.record_size = ss;
   0886 21 00 00           3112 	ld	hl,#0x0000
   0889 39                 3113 	add	hl,sp
   088A 4D                 3114 	ld	c,l
   088B 44                 3115 	ld	b,h
   088C 21 0F 00           3116 	ld	hl,#0x000F
   088F 09                 3117 	add	hl,bc
   0890 EB                 3118 	ex	de,hl
   0891 DD 7E 06           3119 	ld	a,6 (ix)
   0894 12                 3120 	ld	(de),a
                           3121 ;demo.c:280: f.drive = 0;
   0895 3E 00              3122 	ld	a,#0x00
   0897 02                 3123 	ld	(bc),a
                           3124 ;demo.c:282: memcpy(f.name, file_name, 11);
   0898 DD 5E 04           3125 	ld	e,4 (ix)
   089B DD 56 05           3126 	ld	d,5 (ix)
   089E 03                 3127 	inc	bc
   089F 21 0B 00           3128 	ld	hl,#0x000B
   08A2 E5                 3129 	push	hl
   08A3 D5                 3130 	push	de
   08A4 C5                 3131 	push	bc
   08A5 CDr00s00           3132 	call	_memcpy
   08A8 F1                 3133 	pop	af
   08A9 F1                 3134 	pop	af
   08AA F1                 3135 	pop	af
                           3136 ;demo.c:284: if (open(&f) != 0) return 0;
   08AB 21 00 00           3137 	ld	hl,#0x0000
   08AE 39                 3138 	add	hl,sp
   08AF E5                 3139 	push	hl
   08B0 CDr00s00           3140 	call	_open
   08B3 F1                 3141 	pop	af
   08B4 AF                 3142 	xor	a,a
   08B5 B5                 3143 	or	a,l
   08B6 28 04              3144 	jr	Z,00104$
   08B8 2E 00              3145 	ld	l,#0x00
   08BA 18 40              3146 	jr	00109$
   08BC                    3147 00104$:
                           3148 ;demo.c:285: if (block_set_data_ptr(scratch) != 0) return 0;
   08BC 21rC6s3F           3149 	ld	hl,#_scratch
   08BF E5                 3150 	push	hl
   08C0 CDr00s00           3151 	call	_block_set_data_ptr
   08C3 F1                 3152 	pop	af
   08C4 AF                 3153 	xor	a,a
   08C5 B5                 3154 	or	a,l
   08C6 28 04              3155 	jr	Z,00106$
   08C8 2E 00              3156 	ld	l,#0x00
   08CA 18 30              3157 	jr	00109$
   08CC                    3158 00106$:
                           3159 ;demo.c:286: if (block_read(&f) != 0) return 0;
   08CC 21 00 00           3160 	ld	hl,#0x0000
   08CF 39                 3161 	add	hl,sp
   08D0 E5                 3162 	push	hl
   08D1 CDr00s00           3163 	call	_block_read
   08D4 F1                 3164 	pop	af
   08D5 AF                 3165 	xor	a,a
   08D6 B5                 3166 	or	a,l
   08D7 28 04              3167 	jr	Z,00108$
   08D9 2E 00              3168 	ld	l,#0x00
   08DB 18 1F              3169 	jr	00109$
   08DD                    3170 00108$:
                           3171 ;demo.c:288: memcpy(cur_palette, scratch+7, ss);
   08DD DD 4E 06           3172 	ld	c,6 (ix)
   08E0 06 00              3173 	ld	b,#0x00
   08E2 11rCDs3F           3174 	ld	de,#_scratch + 7
   08E5 C5                 3175 	push	bc
   08E6 D5                 3176 	push	de
   08E7 21r46s40           3177 	ld	hl,#_cur_palette
   08EA E5                 3178 	push	hl
   08EB CDr00s00           3179 	call	_memcpy
   08EE F1                 3180 	pop	af
   08EF F1                 3181 	pop	af
   08F0 F1                 3182 	pop	af
                           3183 ;demo.c:290: close(&f);
   08F1 21 00 00           3184 	ld	hl,#0x0000
   08F4 39                 3185 	add	hl,sp
   08F5 E5                 3186 	push	hl
   08F6 CDr00s00           3187 	call	_close
   08F9 F1                 3188 	pop	af
                           3189 ;demo.c:291: return 1;
   08FA 2E 01              3190 	ld	l,#0x01
   08FC                    3191 00109$:
   08FC DD F9              3192 	ld	sp,ix
   08FE DD E1              3193 	pop	ix
   0900 C9                 3194 	ret
   0901                    3195 _pal_load_end::
   0901                    3196 __str_0:
   0901 6C 6F 61 64 69 6E  3197 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0912 00                 3198 	.db 0x00
   0913                    3199 __str_1:
   0913 0D                 3200 	.db 0x0D
   0914 0A                 3201 	.db 0x0A
   0915 00                 3202 	.db 0x00
                           3203 ;demo.c:295: void pause() {
                           3204 ;	---------------------------------
                           3205 ; Function pause
                           3206 ; ---------------------------------
   0916                    3207 _pause_start::
   0916                    3208 _pause:
                           3209 ;demo.c:296: uint8_t i,j,k = 0;
                           3210 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0916 01 00 00           3211 	ld	bc,#0x0000
   0919                    3212 00104$:
   0919 78                 3213 	ld	a,b
   091A D6 FF              3214 	sub	a,#0xFF
   091C D0                 3215 	ret	NC
                           3216 ;demo.c:298: for (j = 0; j < 255; j++) {
   091D 59                 3217 	ld	e,c
   091E 16 FF              3218 	ld	d,#0xFF
   0920                    3219 00103$:
                           3220 ;demo.c:299: k++;
   0920 1C                 3221 	inc	e
   0921 15                 3222 	dec	d
                           3223 ;demo.c:298: for (j = 0; j < 255; j++) {
   0922 AF                 3224 	xor	a,a
   0923 B2                 3225 	or	a,d
   0924 20 FA              3226 	jr	NZ,00103$
                           3227 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0926 4B                 3228 	ld	c,e
   0927 04                 3229 	inc	b
   0928 18 EF              3230 	jr	00104$
   092A                    3231 _pause_end::
                           3232 ;demo.c:305: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3233 ;	---------------------------------
                           3234 ; Function raw_load
                           3235 ; ---------------------------------
   092A                    3236 _raw_load_start::
   092A                    3237 _raw_load:
   092A DD E5              3238 	push	ix
   092C DD 21 00 00        3239 	ld	ix,#0
   0930 DD 39              3240 	add	ix,sp
   0932 21 D2 FF           3241 	ld	hl,#-46
   0935 39                 3242 	add	hl,sp
   0936 F9                 3243 	ld	sp,hl
                           3244 ;demo.c:310: if(debugprint == 1) {
   0937 DD 7E 0A           3245 	ld	a,10 (ix)
   093A D6 01              3246 	sub	a,#0x01
   093C 20 06              3247 	jr	NZ,00120$
   093E DD 7E 0B           3248 	ld	a,11 (ix)
   0941 B7                 3249 	or	a,a
   0942 28 02              3250 	jr	Z,00121$
   0944                    3251 00120$:
   0944 18 1B              3252 	jr	00102$
   0946                    3253 00121$:
                           3254 ;demo.c:311: puts("loading rawfile: ");
   0946 21r18s0A           3255 	ld	hl,#__str_2
   0949 E5                 3256 	push	hl
   094A CDr00s00           3257 	call	_puts
   094D F1                 3258 	pop	af
                           3259 ;demo.c:312: puts(file_name);
   094E DD 6E 04           3260 	ld	l,4 (ix)
   0951 DD 66 05           3261 	ld	h,5 (ix)
   0954 E5                 3262 	push	hl
   0955 CDr00s00           3263 	call	_puts
   0958 F1                 3264 	pop	af
                           3265 ;demo.c:313: puts("\r\n");
   0959 21r2As0A           3266 	ld	hl,#__str_3
   095C E5                 3267 	push	hl
   095D CDr00s00           3268 	call	_puts
   0960 F1                 3269 	pop	af
   0961                    3270 00102$:
                           3271 ;demo.c:316: memset((uint8_t *) &f, 0, sizeof(fcb));
   0961 21 00 00           3272 	ld	hl,#0x0000
   0964 39                 3273 	add	hl,sp
   0965 4D                 3274 	ld	c,l
   0966 44                 3275 	ld	b,h
   0967 21 2E 00           3276 	ld	hl,#0x002E
   096A E5                 3277 	push	hl
   096B 3E 00              3278 	ld	a,#0x00
   096D F5                 3279 	push	af
   096E 33                 3280 	inc	sp
   096F C5                 3281 	push	bc
   0970 CDr00s00           3282 	call	_memset
   0973 F1                 3283 	pop	af
   0974 F1                 3284 	pop	af
   0975 33                 3285 	inc	sp
                           3286 ;demo.c:317: scratch_clear();
   0976 CDr24s08           3287 	call	_scratch_clear
                           3288 ;demo.c:319: f.record_size = 128;
   0979 21 00 00           3289 	ld	hl,#0x0000
   097C 39                 3290 	add	hl,sp
   097D 4D                 3291 	ld	c,l
   097E 44                 3292 	ld	b,h
   097F 21 0F 00           3293 	ld	hl,#0x000F
   0982 09                 3294 	add	hl,bc
   0983 EB                 3295 	ex	de,hl
   0984 3E 80              3296 	ld	a,#0x80
   0986 12                 3297 	ld	(de),a
                           3298 ;demo.c:320: f.drive = 0;
   0987 3E 00              3299 	ld	a,#0x00
   0989 02                 3300 	ld	(bc),a
                           3301 ;demo.c:322: memcpy(f.name, file_name, 11);
   098A DD 5E 04           3302 	ld	e,4 (ix)
   098D DD 56 05           3303 	ld	d,5 (ix)
   0990 03                 3304 	inc	bc
   0991 21 0B 00           3305 	ld	hl,#0x000B
   0994 E5                 3306 	push	hl
   0995 D5                 3307 	push	de
   0996 C5                 3308 	push	bc
   0997 CDr00s00           3309 	call	_memcpy
   099A F1                 3310 	pop	af
   099B F1                 3311 	pop	af
   099C F1                 3312 	pop	af
                           3313 ;demo.c:324: if (open(&f) != 0) return 0;
   099D 21 00 00           3314 	ld	hl,#0x0000
   09A0 39                 3315 	add	hl,sp
   09A1 E5                 3316 	push	hl
   09A2 CDr00s00           3317 	call	_open
   09A5 F1                 3318 	pop	af
   09A6 AF                 3319 	xor	a,a
   09A7 B5                 3320 	or	a,l
   09A8 28 05              3321 	jr	Z,00119$
   09AA 2E 00              3322 	ld	l,#0x00
   09AC C3r13s0A           3323 	jp	00112$
                           3324 ;demo.c:326: while(total < size) {
   09AF                    3325 00119$:
   09AF 01 00 00           3326 	ld	bc,#0x0000
   09B2                    3327 00109$:
   09B2 79                 3328 	ld	a,c
   09B3 DD 96 06           3329 	sub	a,6 (ix)
   09B6 78                 3330 	ld	a,b
   09B7 DD 9E 07           3331 	sbc	a,7 (ix)
   09BA F2r08s0A           3332 	jp	P,00111$
                           3333 ;demo.c:327: if (block_set_data_ptr(scratch) != 0) return 0;
   09BD C5                 3334 	push	bc
   09BE 21rC6s3F           3335 	ld	hl,#_scratch
   09C1 E5                 3336 	push	hl
   09C2 CDr00s00           3337 	call	_block_set_data_ptr
   09C5 F1                 3338 	pop	af
   09C6 5D                 3339 	ld	e,l
   09C7 C1                 3340 	pop	bc
   09C8 AF                 3341 	xor	a,a
   09C9 B3                 3342 	or	a,e
   09CA 28 04              3343 	jr	Z,00106$
   09CC 2E 00              3344 	ld	l,#0x00
   09CE 18 43              3345 	jr	00112$
   09D0                    3346 00106$:
                           3347 ;demo.c:328: if (block_read(&f) != 0) return 0;
   09D0 21 00 00           3348 	ld	hl,#0x0000
   09D3 39                 3349 	add	hl,sp
   09D4 C5                 3350 	push	bc
   09D5 E5                 3351 	push	hl
   09D6 CDr00s00           3352 	call	_block_read
   09D9 F1                 3353 	pop	af
   09DA 5D                 3354 	ld	e,l
   09DB C1                 3355 	pop	bc
   09DC AF                 3356 	xor	a,a
   09DD B3                 3357 	or	a,e
   09DE 28 04              3358 	jr	Z,00108$
   09E0 2E 00              3359 	ld	l,#0x00
   09E2 18 2F              3360 	jr	00112$
   09E4                    3361 00108$:
                           3362 ;demo.c:330: memcpy(buffer+total,scratch,incr);
   09E4 DD 7E 08           3363 	ld	a,8 (ix)
   09E7 81                 3364 	add	a,c
   09E8 5F                 3365 	ld	e,a
   09E9 DD 7E 09           3366 	ld	a,9 (ix)
   09EC 88                 3367 	adc	a,b
   09ED 57                 3368 	ld	d,a
   09EE C5                 3369 	push	bc
   09EF 21 80 00           3370 	ld	hl,#0x0080
   09F2 E5                 3371 	push	hl
   09F3 21rC6s3F           3372 	ld	hl,#_scratch
   09F6 E5                 3373 	push	hl
   09F7 D5                 3374 	push	de
   09F8 CDr00s00           3375 	call	_memcpy
   09FB F1                 3376 	pop	af
   09FC F1                 3377 	pop	af
   09FD F1                 3378 	pop	af
   09FE C1                 3379 	pop	bc
                           3380 ;demo.c:332: total+=incr;
   09FF 21 80 00           3381 	ld	hl,#0x0080
   0A02 09                 3382 	add	hl,bc
   0A03 4D                 3383 	ld	c,l
   0A04 44                 3384 	ld	b,h
   0A05 C3rB2s09           3385 	jp	00109$
   0A08                    3386 00111$:
                           3387 ;demo.c:335: close(&f);
   0A08 21 00 00           3388 	ld	hl,#0x0000
   0A0B 39                 3389 	add	hl,sp
   0A0C E5                 3390 	push	hl
   0A0D CDr00s00           3391 	call	_close
   0A10 F1                 3392 	pop	af
                           3393 ;demo.c:337: return 1;
   0A11 2E 01              3394 	ld	l,#0x01
   0A13                    3395 00112$:
   0A13 DD F9              3396 	ld	sp,ix
   0A15 DD E1              3397 	pop	ix
   0A17 C9                 3398 	ret
   0A18                    3399 _raw_load_end::
   0A18                    3400 __str_2:
   0A18 6C 6F 61 64 69 6E  3401 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0A29 00                 3402 	.db 0x00
   0A2A                    3403 __str_3:
   0A2A 0D                 3404 	.db 0x0D
   0A2B 0A                 3405 	.db 0x0A
   0A2C 00                 3406 	.db 0x00
                           3407 ;demo.c:340: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3408 ;	---------------------------------
                           3409 ; Function pck_load
                           3410 ; ---------------------------------
   0A2D                    3411 _pck_load_start::
   0A2D                    3412 _pck_load:
   0A2D DD E5              3413 	push	ix
   0A2F DD 21 00 00        3414 	ld	ix,#0
   0A33 DD 39              3415 	add	ix,sp
                           3416 ;demo.c:341: if(debugprint == 1) {
   0A35 DD 7E 0C           3417 	ld	a,12 (ix)
   0A38 D6 01              3418 	sub	a,#0x01
   0A3A 20 06              3419 	jr	NZ,00106$
   0A3C DD 7E 0D           3420 	ld	a,13 (ix)
   0A3F B7                 3421 	or	a,a
   0A40 28 02              3422 	jr	Z,00107$
   0A42                    3423 00106$:
   0A42 18 1B              3424 	jr	00102$
   0A44                    3425 00107$:
                           3426 ;demo.c:342: puts("loading pckfile: ");
   0A44 21rA6s0A           3427 	ld	hl,#__str_4
   0A47 E5                 3428 	push	hl
   0A48 CDr00s00           3429 	call	_puts
   0A4B F1                 3430 	pop	af
                           3431 ;demo.c:343: puts(file_name);
   0A4C DD 6E 04           3432 	ld	l,4 (ix)
   0A4F DD 66 05           3433 	ld	h,5 (ix)
   0A52 E5                 3434 	push	hl
   0A53 CDr00s00           3435 	call	_puts
   0A56 F1                 3436 	pop	af
                           3437 ;demo.c:344: puts("\r\n");
   0A57 21rB8s0A           3438 	ld	hl,#__str_5
   0A5A E5                 3439 	push	hl
   0A5B CDr00s00           3440 	call	_puts
   0A5E F1                 3441 	pop	af
   0A5F                    3442 00102$:
                           3443 ;demo.c:346: memset((uint8_t *) &packbuffer, 0, size);
   0A5F DD 4E 06           3444 	ld	c,6 (ix)
   0A62 DD 46 07           3445 	ld	b,7 (ix)
   0A65 C5                 3446 	push	bc
   0A66 C5                 3447 	push	bc
   0A67 3E 00              3448 	ld	a,#0x00
   0A69 F5                 3449 	push	af
   0A6A 33                 3450 	inc	sp
   0A6B 21rC8s01           3451 	ld	hl,#_packbuffer
   0A6E E5                 3452 	push	hl
   0A6F CDr00s00           3453 	call	_memset
   0A72 F1                 3454 	pop	af
   0A73 F1                 3455 	pop	af
   0A74 33                 3456 	inc	sp
   0A75 C1                 3457 	pop	bc
                           3458 ;demo.c:347: raw_load(file_name, size, packbuffer,0);
   0A76 21 00 00           3459 	ld	hl,#0x0000
   0A79 E5                 3460 	push	hl
   0A7A 21rC8s01           3461 	ld	hl,#_packbuffer
   0A7D E5                 3462 	push	hl
   0A7E C5                 3463 	push	bc
   0A7F DD 6E 04           3464 	ld	l,4 (ix)
   0A82 DD 66 05           3465 	ld	h,5 (ix)
   0A85 E5                 3466 	push	hl
   0A86 CDr2As09           3467 	call	_raw_load
   0A89 F1                 3468 	pop	af
   0A8A F1                 3469 	pop	af
   0A8B F1                 3470 	pop	af
   0A8C F1                 3471 	pop	af
                           3472 ;demo.c:348: bitbuster(packbuffer,address,vram_offset);
   0A8D DD 7E 0A           3473 	ld	a,10 (ix)
   0A90 F5                 3474 	push	af
   0A91 33                 3475 	inc	sp
   0A92 DD 6E 08           3476 	ld	l,8 (ix)
   0A95 DD 66 09           3477 	ld	h,9 (ix)
   0A98 E5                 3478 	push	hl
   0A99 21rC8s01           3479 	ld	hl,#_packbuffer
   0A9C E5                 3480 	push	hl
   0A9D CDr00s00           3481 	call	_bitbuster
   0AA0 F1                 3482 	pop	af
   0AA1 F1                 3483 	pop	af
   0AA2 33                 3484 	inc	sp
   0AA3 DD E1              3485 	pop	ix
   0AA5 C9                 3486 	ret
   0AA6                    3487 _pck_load_end::
   0AA6                    3488 __str_4:
   0AA6 6C 6F 61 64 69 6E  3489 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0AB7 00                 3490 	.db 0x00
   0AB8                    3491 __str_5:
   0AB8 0D                 3492 	.db 0x0D
   0AB9 0A                 3493 	.db 0x0A
   0ABA 00                 3494 	.db 0x00
                           3495 ;demo.c:351: void fadein() {
                           3496 ;	---------------------------------
                           3497 ; Function fadein
                           3498 ; ---------------------------------
   0ABB                    3499 _fadein_start::
   0ABB                    3500 _fadein:
   0ABB DD E5              3501 	push	ix
   0ABD DD 21 00 00        3502 	ld	ix,#0
   0AC1 DD 39              3503 	add	ix,sp
   0AC3 F5                 3504 	push	af
                           3505 ;demo.c:354: if (tick < 8) return;
   0AC4 3Ar28s41           3506 	ld	a,(#_tick+0)
   0AC7 D6 08              3507 	sub	a,#0x08
   0AC9 3Ar29s41           3508 	ld	a,(#_tick+1)
   0ACC DE 00              3509 	sbc	a,#0x00
   0ACE F2rD4s0A           3510 	jp	P,00102$
   0AD1 C3r82s0B           3511 	jp	00113$
   0AD4                    3512 00102$:
                           3513 ;demo.c:356: tick = 0;
   0AD4 21r28s41           3514 	ld	hl,#_tick + 0
   0AD7 36 00              3515 	ld	(hl), #0x00
   0AD9 21r29s41           3516 	ld	hl,#_tick + 1
   0ADC 36 00              3517 	ld	(hl), #0x00
                           3518 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0ADE 0E 00              3519 	ld	c,#0x00
   0AE0                    3520 00109$:
   0AE0 79                 3521 	ld	a,c
   0AE1 D6 20              3522 	sub	a,#0x20
   0AE3 D2r7As0B           3523 	jp	NC,00112$
                           3524 ;demo.c:359: uint8_t r = scratch[i] >> 4;
   0AE6 3ErC6              3525 	ld	a,#<_scratch
   0AE8 81                 3526 	add	a,c
   0AE9 5F                 3527 	ld	e,a
   0AEA 3Es3F              3528 	ld	a,#>_scratch
   0AEC CE 00              3529 	adc	a,#0x00
   0AEE 57                 3530 	ld	d,a
   0AEF 1A                 3531 	ld	a,(de)
   0AF0 47                 3532 	ld	b,a
   0AF1 58                 3533 	ld	e,b
   0AF2 CB 3B              3534 	srl	e
   0AF4 CB 3B              3535 	srl	e
   0AF6 CB 3B              3536 	srl	e
   0AF8 CB 3B              3537 	srl	e
                           3538 ;demo.c:360: uint8_t b = scratch[i] & 0xf;
   0AFA 78                 3539 	ld	a,b
   0AFB E6 0F              3540 	and	a,#0x0F
   0AFD DD 77 FF           3541 	ld	-1 (ix),a
                           3542 ;demo.c:361: uint8_t g = scratch[i+1];
   0B00 51                 3543 	ld	d,c
   0B01 14                 3544 	inc	d
   0B02 3ErC6              3545 	ld	a,#<_scratch
   0B04 82                 3546 	add	a,d
   0B05 6F                 3547 	ld	l,a
   0B06 3Es3F              3548 	ld	a,#>_scratch
   0B08 CE 00              3549 	adc	a,#0x00
   0B0A 67                 3550 	ld	h,a
   0B0B 56                 3551 	ld	d,(hl)
   0B0C DD 72 FE           3552 	ld	-2 (ix),d
                           3553 ;demo.c:363: if (r < (cur_palette[i] >> 4)) r++;
   0B0F 3Er46              3554 	ld	a,#<_cur_palette
   0B11 81                 3555 	add	a,c
   0B12 6F                 3556 	ld	l,a
   0B13 3Es40              3557 	ld	a,#>_cur_palette
   0B15 CE 00              3558 	adc	a,#0x00
   0B17 67                 3559 	ld	h,a
   0B18 56                 3560 	ld	d,(hl)
   0B19 CB 3A              3561 	srl	d
   0B1B CB 3A              3562 	srl	d
   0B1D CB 3A              3563 	srl	d
   0B1F CB 3A              3564 	srl	d
   0B21 7B                 3565 	ld	a,e
   0B22 92                 3566 	sub	a,d
   0B23 30 01              3567 	jr	NC,00104$
   0B25 1C                 3568 	inc	e
   0B26                    3569 00104$:
                           3570 ;demo.c:364: if (b < (cur_palette[i] & 0xf)) b++;
   0B26 3Er46              3571 	ld	a,#<_cur_palette
   0B28 81                 3572 	add	a,c
   0B29 6F                 3573 	ld	l,a
   0B2A 3Es40              3574 	ld	a,#>_cur_palette
   0B2C CE 00              3575 	adc	a,#0x00
   0B2E 67                 3576 	ld	h,a
   0B2F 7E                 3577 	ld	a,(hl)
   0B30 E6 0F              3578 	and	a,#0x0F
   0B32 47                 3579 	ld	b,a
   0B33 DD 7E FF           3580 	ld	a,-1 (ix)
   0B36 90                 3581 	sub	a,b
   0B37 30 03              3582 	jr	NC,00106$
   0B39 DD 34 FF           3583 	inc	-1 (ix)
   0B3C                    3584 00106$:
                           3585 ;demo.c:366: scratch[i] = (r << 4) | b;
   0B3C 3ErC6              3586 	ld	a,#<_scratch
   0B3E 81                 3587 	add	a,c
   0B3F 47                 3588 	ld	b,a
   0B40 3Es3F              3589 	ld	a,#>_scratch
   0B42 CE 00              3590 	adc	a,#0x00
   0B44 57                 3591 	ld	d,a
   0B45 7B                 3592 	ld	a,e
   0B46 07                 3593 	rlca
   0B47 07                 3594 	rlca
   0B48 07                 3595 	rlca
   0B49 07                 3596 	rlca
   0B4A E6 F0              3597 	and	a,#0xF0
   0B4C DD B6 FF           3598 	or	a,-1 (ix)
   0B4F 68                 3599 	ld	l,b
   0B50 62                 3600 	ld	h,d
   0B51 77                 3601 	ld	(hl),a
                           3602 ;demo.c:367: if (g < cur_palette[i+1]) scratch[i+1]++;
   0B52 41                 3603 	ld	b,c
   0B53 04                 3604 	inc	b
   0B54 3Er46              3605 	ld	a,#<_cur_palette
   0B56 80                 3606 	add	a,b
   0B57 5F                 3607 	ld	e,a
   0B58 3Es40              3608 	ld	a,#>_cur_palette
   0B5A CE 00              3609 	adc	a,#0x00
   0B5C 57                 3610 	ld	d,a
   0B5D 1A                 3611 	ld	a,(de)
   0B5E 5F                 3612 	ld	e,a
   0B5F DD 7E FE           3613 	ld	a,-2 (ix)
   0B62 93                 3614 	sub	a,e
   0B63 30 10              3615 	jr	NC,00111$
   0B65 3ErC6              3616 	ld	a,#<_scratch
   0B67 80                 3617 	add	a,b
   0B68 47                 3618 	ld	b,a
   0B69 3Es3F              3619 	ld	a,#>_scratch
   0B6B CE 00              3620 	adc	a,#0x00
   0B6D 5F                 3621 	ld	e,a
   0B6E 68                 3622 	ld	l,b
   0B6F 67                 3623 	ld	h,a
   0B70 7E                 3624 	ld	a,(hl)
   0B71 3C                 3625 	inc	a
   0B72 68                 3626 	ld	l,b
   0B73 63                 3627 	ld	h,e
   0B74 77                 3628 	ld	(hl),a
   0B75                    3629 00111$:
                           3630 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0B75 0C                 3631 	inc	c
   0B76 0C                 3632 	inc	c
   0B77 C3rE0s0A           3633 	jp	00109$
   0B7A                    3634 00112$:
                           3635 ;demo.c:371: vdp_load_palette(scratch);
   0B7A 21rC6s3F           3636 	ld	hl,#_scratch
   0B7D E5                 3637 	push	hl
   0B7E CDr00s00           3638 	call	_vdp_load_palette
   0B81 F1                 3639 	pop	af
   0B82                    3640 00113$:
   0B82 DD F9              3641 	ld	sp,ix
   0B84 DD E1              3642 	pop	ix
   0B86 C9                 3643 	ret
   0B87                    3644 _fadein_end::
                           3645 ;demo.c:383: void do_ymmm() {
                           3646 ;	---------------------------------
                           3647 ; Function do_ymmm
                           3648 ; ---------------------------------
   0B87                    3649 _do_ymmm_start::
   0B87                    3650 _do_ymmm:
                           3651 ;demo.c:384: }
   0B87 C9                 3652 	ret
   0B88                    3653 _do_ymmm_end::
                           3654 ;demo.c:397: void do_blocks() {
                           3655 ;	---------------------------------
                           3656 ; Function do_blocks
                           3657 ; ---------------------------------
   0B88                    3658 _do_blocks_start::
   0B88                    3659 _do_blocks:
                           3660 ;demo.c:398: }
   0B88 C9                 3661 	ret
   0B89                    3662 _do_blocks_end::
                           3663 ;demo.c:402: void raster_effu() {
                           3664 ;	---------------------------------
                           3665 ; Function raster_effu
                           3666 ; ---------------------------------
   0B89                    3667 _raster_effu_start::
   0B89                    3668 _raster_effu:
                           3669 ;demo.c:403: }
   0B89 C9                 3670 	ret
   0B8A                    3671 _raster_effu_end::
                           3672 ;demo.c:434: void do_2xletter(char cc) {
                           3673 ;	---------------------------------
                           3674 ; Function do_2xletter
                           3675 ; ---------------------------------
   0B8A                    3676 _do_2xletter_start::
   0B8A                    3677 _do_2xletter:
   0B8A DD E5              3678 	push	ix
   0B8C DD 21 00 00        3679 	ld	ix,#0
   0B90 DD 39              3680 	add	ix,sp
   0B92 21 F2 FF           3681 	ld	hl,#-14
   0B95 39                 3682 	add	hl,sp
   0B96 F9                 3683 	ld	sp,hl
                           3684 ;demo.c:435: int cidx = cc - 65;
   0B97 DD 4E 04           3685 	ld	c,4 (ix)
   0B9A DD 7E 04           3686 	ld	a,4 (ix)
   0B9D 17                 3687 	rla	
   0B9E 9F                 3688 	sbc	a,a
   0B9F 47                 3689 	ld	b,a
   0BA0 79                 3690 	ld	a,c
   0BA1 C6 BF              3691 	add	a,#0xBF
   0BA3 DD 77 FE           3692 	ld	-2 (ix),a
   0BA6 78                 3693 	ld	a,b
   0BA7 CE FF              3694 	adc	a,#0xFF
   0BA9 DD 77 FF           3695 	ld	-1 (ix),a
                           3696 ;demo.c:438: for (y=0;y<8;y++) {
   0BAC 3ErB8              3697 	ld	a,#<_font_w
   0BAE DD 86 FE           3698 	add	a,-2 (ix)
   0BB1 5F                 3699 	ld	e,a
   0BB2 3Es0E              3700 	ld	a,#>_font_w
   0BB4 DD 8E FF           3701 	adc	a,-1 (ix)
   0BB7 57                 3702 	ld	d,a
   0BB8 DD 36 FA 00        3703 	ld	-6 (ix),#0x00
   0BBC DD 36 FB 00        3704 	ld	-5 (ix),#0x00
   0BC0 DD 36 F6 00        3705 	ld	-10 (ix),#0x00
   0BC4 DD 36 F7 00        3706 	ld	-9 (ix),#0x00
   0BC8                    3707 00105$:
   0BC8 DD 7E FA           3708 	ld	a,-6 (ix)
   0BCB D6 08              3709 	sub	a,#0x08
   0BCD DD 7E FB           3710 	ld	a,-5 (ix)
   0BD0 DE 00              3711 	sbc	a,#0x00
   0BD2 F2r10s0E           3712 	jp	P,00108$
                           3713 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0BD5 DD 36 FC 00        3714 	ld	-4 (ix),#0x00
   0BD9 DD 36 FD 00        3715 	ld	-3 (ix),#0x00
   0BDD DD 36 F4 00        3716 	ld	-12 (ix),#0x00
   0BE1 DD 36 F5 00        3717 	ld	-11 (ix),#0x00
   0BE5                    3718 00101$:
   0BE5 1A                 3719 	ld	a,(de)
   0BE6 4F                 3720 	ld	c,a
   0BE7 06 00              3721 	ld	b,#0x00
   0BE9 DD 7E FC           3722 	ld	a,-4 (ix)
   0BEC 91                 3723 	sub	a,c
   0BED DD 7E FD           3724 	ld	a,-3 (ix)
   0BF0 98                 3725 	sbc	a,b
   0BF1 F2rE8s0D           3726 	jp	P,00115$
                           3727 ;demo.c:440: cmd.source_x = 127+font_x[cidx]+x;
   0BF4 3Er38              3728 	ld	a,#<_font_x
   0BF6 DD 86 FE           3729 	add	a,-2 (ix)
   0BF9 4F                 3730 	ld	c,a
   0BFA 3Es0E              3731 	ld	a,#>_font_x
   0BFC DD 8E FF           3732 	adc	a,-1 (ix)
   0BFF 47                 3733 	ld	b,a
   0C00 0A                 3734 	ld	a,(bc)
   0C01 4F                 3735 	ld	c,a
   0C02 06 00              3736 	ld	b,#0x00
   0C04 21 7F 00           3737 	ld	hl,#0x007F
   0C07 09                 3738 	add	hl,bc
   0C08 4D                 3739 	ld	c,l
   0C09 44                 3740 	ld	b,h
   0C0A 79                 3741 	ld	a,c
   0C0B DD 86 FC           3742 	add	a,-4 (ix)
   0C0E 4F                 3743 	ld	c,a
   0C0F 78                 3744 	ld	a,b
   0C10 DD 8E FD           3745 	adc	a,-3 (ix)
   0C13 47                 3746 	ld	b,a
   0C14 21r2As41           3747 	ld	hl,#_cmd
   0C17 71                 3748 	ld	(hl),c
   0C18 23                 3749 	inc	hl
   0C19 70                 3750 	ld	(hl),b
                           3751 ;demo.c:441: cmd.source_y = 512+font_y[cidx]+y;
   0C1A 23                 3752 	inc	hl
   0C1B DD 75 F2           3753 	ld	-14 (ix),l
   0C1E DD 74 F3           3754 	ld	-13 (ix),h
   0C21 3Er78              3755 	ld	a,#<_font_y
   0C23 DD 86 FE           3756 	add	a,-2 (ix)
   0C26 4F                 3757 	ld	c,a
   0C27 3Es0E              3758 	ld	a,#>_font_y
   0C29 DD 8E FF           3759 	adc	a,-1 (ix)
   0C2C 47                 3760 	ld	b,a
   0C2D 0A                 3761 	ld	a,(bc)
   0C2E 4F                 3762 	ld	c,a
   0C2F 06 00              3763 	ld	b,#0x00
   0C31 21 00 02           3764 	ld	hl,#0x0200
   0C34 09                 3765 	add	hl,bc
   0C35 4D                 3766 	ld	c,l
   0C36 44                 3767 	ld	b,h
   0C37 79                 3768 	ld	a,c
   0C38 DD 86 FA           3769 	add	a,-6 (ix)
   0C3B 4F                 3770 	ld	c,a
   0C3C 78                 3771 	ld	a,b
   0C3D DD 8E FB           3772 	adc	a,-5 (ix)
   0C40 47                 3773 	ld	b,a
   0C41 DD 6E F2           3774 	ld	l,-14 (ix)
   0C44 DD 66 F3           3775 	ld	h,-13 (ix)
   0C47 71                 3776 	ld	(hl),c
   0C48 23                 3777 	inc	hl
   0C49 70                 3778 	ld	(hl),b
                           3779 ;demo.c:442: cmd.size_x = 1;
   0C4A 21r32s41           3780 	ld	hl, #_cmd + 8
   0C4D 36 01              3781 	ld	(hl),#0x01
   0C4F 23                 3782 	inc	hl
   0C50 36 00              3783 	ld	(hl),#0x00
                           3784 ;demo.c:443: cmd.size_y = 1;
   0C52 21r34s41           3785 	ld	hl, #_cmd + 10
   0C55 36 01              3786 	ld	(hl),#0x01
   0C57 23                 3787 	inc	hl
   0C58 36 00              3788 	ld	(hl),#0x00
                           3789 ;demo.c:444: cmd.argument = 0x00;
   0C5A 3E 00              3790 	ld	a,#0x00
   0C5C 32r37s41           3791 	ld	(#_cmd + 13),a
                           3792 ;demo.c:445: cmd.command = 0x40; // get pixel
   0C5F 3E 40              3793 	ld	a,#0x40
   0C61 32r38s41           3794 	ld	(#_cmd + 14),a
                           3795 ;demo.c:446: vdp_copier(&cmd);
   0C64 D5                 3796 	push	de
   0C65 21r2As41           3797 	ld	hl,#_cmd
   0C68 E5                 3798 	push	hl
   0C69 CDr00s00           3799 	call	_vdp_copier
   0C6C F1                 3800 	pop	af
   0C6D D1                 3801 	pop	de
                           3802 ;demo.c:448: col = vdp2_status(7);
   0C6E D5                 3803 	push	de
   0C6F 3E 07              3804 	ld	a,#0x07
   0C71 F5                 3805 	push	af
   0C72 33                 3806 	inc	sp
   0C73 CDr00s00           3807 	call	_vdp2_status
   0C76 33                 3808 	inc	sp
   0C77 4D                 3809 	ld	c,l
   0C78 D1                 3810 	pop	de
   0C79 DD 71 F8           3811 	ld	-8 (ix),c
   0C7C DD 36 F9 00        3812 	ld	-7 (ix),#0x00
                           3813 ;demo.c:450: cmd.data = col;
   0C80 01r36s41           3814 	ld	bc,#_cmd + 12
   0C83 DD 7E F8           3815 	ld	a,-8 (ix)
   0C86 02                 3816 	ld	(bc),a
                           3817 ;demo.c:451: cmd.dest_x = lx+x*3;
   0C87 21r2Es41           3818 	ld	hl,#_cmd + 4
   0C8A DD 75 F2           3819 	ld	-14 (ix),l
   0C8D DD 74 F3           3820 	ld	-13 (ix),h
   0C90 21rBCs41           3821 	ld	hl,#_lx + 0
   0C93 4E                 3822 	ld	c,(hl)
   0C94 06 00              3823 	ld	b,#0x00
   0C96 79                 3824 	ld	a,c
   0C97 DD 86 F4           3825 	add	a,-12 (ix)
   0C9A 4F                 3826 	ld	c,a
   0C9B 78                 3827 	ld	a,b
   0C9C DD 8E F5           3828 	adc	a,-11 (ix)
   0C9F 47                 3829 	ld	b,a
   0CA0 DD 6E F2           3830 	ld	l,-14 (ix)
   0CA3 DD 66 F3           3831 	ld	h,-13 (ix)
   0CA6 71                 3832 	ld	(hl),c
   0CA7 23                 3833 	inc	hl
   0CA8 70                 3834 	ld	(hl),b
                           3835 ;demo.c:452: cmd.dest_y = ly+y*3;
   0CA9 21r30s41           3836 	ld	hl,#_cmd + 6
   0CAC DD 75 F2           3837 	ld	-14 (ix),l
   0CAF DD 74 F3           3838 	ld	-13 (ix),h
   0CB2 21rBDs41           3839 	ld	hl,#_ly + 0
   0CB5 4E                 3840 	ld	c,(hl)
   0CB6 06 00              3841 	ld	b,#0x00
   0CB8 79                 3842 	ld	a,c
   0CB9 DD 86 F6           3843 	add	a,-10 (ix)
   0CBC 4F                 3844 	ld	c,a
   0CBD 78                 3845 	ld	a,b
   0CBE DD 8E F7           3846 	adc	a,-9 (ix)
   0CC1 47                 3847 	ld	b,a
   0CC2 DD 6E F2           3848 	ld	l,-14 (ix)
   0CC5 DD 66 F3           3849 	ld	h,-13 (ix)
   0CC8 71                 3850 	ld	(hl),c
   0CC9 23                 3851 	inc	hl
   0CCA 70                 3852 	ld	(hl),b
                           3853 ;demo.c:455: cmd.argument = 0x00;
   0CCB 3E 00              3854 	ld	a,#0x00
   0CCD 32r37s41           3855 	ld	(#_cmd + 13),a
                           3856 ;demo.c:456: cmd.command = 0x50; // rect
   0CD0 3E 50              3857 	ld	a,#0x50
   0CD2 32r38s41           3858 	ld	(#_cmd + 14),a
                           3859 ;demo.c:457: vdp_copier(&cmd);
   0CD5 D5                 3860 	push	de
   0CD6 21r2As41           3861 	ld	hl,#_cmd
   0CD9 E5                 3862 	push	hl
   0CDA CDr00s00           3863 	call	_vdp_copier
   0CDD F1                 3864 	pop	af
   0CDE D1                 3865 	pop	de
                           3866 ;demo.c:458: cmd.dest_x = 1+lx+x*3;
   0CDF 21r2Es41           3867 	ld	hl,#_cmd + 4
   0CE2 DD 75 F2           3868 	ld	-14 (ix),l
   0CE5 DD 74 F3           3869 	ld	-13 (ix),h
   0CE8 21rBCs41           3870 	ld	hl,#_lx + 0
   0CEB 4E                 3871 	ld	c,(hl)
   0CEC 06 00              3872 	ld	b,#0x00
   0CEE 03                 3873 	inc	bc
   0CEF 79                 3874 	ld	a,c
   0CF0 DD 86 F4           3875 	add	a,-12 (ix)
   0CF3 4F                 3876 	ld	c,a
   0CF4 78                 3877 	ld	a,b
   0CF5 DD 8E F5           3878 	adc	a,-11 (ix)
   0CF8 47                 3879 	ld	b,a
   0CF9 DD 6E F2           3880 	ld	l,-14 (ix)
   0CFC DD 66 F3           3881 	ld	h,-13 (ix)
   0CFF 71                 3882 	ld	(hl),c
   0D00 23                 3883 	inc	hl
   0D01 70                 3884 	ld	(hl),b
                           3885 ;demo.c:459: cmd.dest_y = ly+y*3;
   0D02 21r30s41           3886 	ld	hl,#_cmd + 6
   0D05 DD 75 F2           3887 	ld	-14 (ix),l
   0D08 DD 74 F3           3888 	ld	-13 (ix),h
   0D0B 21rBDs41           3889 	ld	hl,#_ly + 0
   0D0E 4E                 3890 	ld	c,(hl)
   0D0F 06 00              3891 	ld	b,#0x00
   0D11 79                 3892 	ld	a,c
   0D12 DD 86 F6           3893 	add	a,-10 (ix)
   0D15 4F                 3894 	ld	c,a
   0D16 78                 3895 	ld	a,b
   0D17 DD 8E F7           3896 	adc	a,-9 (ix)
   0D1A 47                 3897 	ld	b,a
   0D1B DD 6E F2           3898 	ld	l,-14 (ix)
   0D1E DD 66 F3           3899 	ld	h,-13 (ix)
   0D21 71                 3900 	ld	(hl),c
   0D22 23                 3901 	inc	hl
   0D23 70                 3902 	ld	(hl),b
                           3903 ;demo.c:460: vdp_copier(&cmd);
   0D24 D5                 3904 	push	de
   0D25 21r2As41           3905 	ld	hl,#_cmd
   0D28 E5                 3906 	push	hl
   0D29 CDr00s00           3907 	call	_vdp_copier
   0D2C F1                 3908 	pop	af
   0D2D D1                 3909 	pop	de
                           3910 ;demo.c:461: cmd.dest_x = 1+lx+x*3;
   0D2E 21r2Es41           3911 	ld	hl,#_cmd + 4
   0D31 DD 75 F2           3912 	ld	-14 (ix),l
   0D34 DD 74 F3           3913 	ld	-13 (ix),h
   0D37 21rBCs41           3914 	ld	hl,#_lx + 0
   0D3A 4E                 3915 	ld	c,(hl)
   0D3B 06 00              3916 	ld	b,#0x00
   0D3D 03                 3917 	inc	bc
   0D3E 79                 3918 	ld	a,c
   0D3F DD 86 F4           3919 	add	a,-12 (ix)
   0D42 4F                 3920 	ld	c,a
   0D43 78                 3921 	ld	a,b
   0D44 DD 8E F5           3922 	adc	a,-11 (ix)
   0D47 47                 3923 	ld	b,a
   0D48 DD 6E F2           3924 	ld	l,-14 (ix)
   0D4B DD 66 F3           3925 	ld	h,-13 (ix)
   0D4E 71                 3926 	ld	(hl),c
   0D4F 23                 3927 	inc	hl
   0D50 70                 3928 	ld	(hl),b
                           3929 ;demo.c:462: cmd.dest_y = 1+ly+y*3;
   0D51 21r30s41           3930 	ld	hl,#_cmd + 6
   0D54 DD 75 F2           3931 	ld	-14 (ix),l
   0D57 DD 74 F3           3932 	ld	-13 (ix),h
   0D5A 21rBDs41           3933 	ld	hl,#_ly + 0
   0D5D 4E                 3934 	ld	c,(hl)
   0D5E 06 00              3935 	ld	b,#0x00
   0D60 03                 3936 	inc	bc
   0D61 79                 3937 	ld	a,c
   0D62 DD 86 F6           3938 	add	a,-10 (ix)
   0D65 4F                 3939 	ld	c,a
   0D66 78                 3940 	ld	a,b
   0D67 DD 8E F7           3941 	adc	a,-9 (ix)
   0D6A 47                 3942 	ld	b,a
   0D6B DD 6E F2           3943 	ld	l,-14 (ix)
   0D6E DD 66 F3           3944 	ld	h,-13 (ix)
   0D71 71                 3945 	ld	(hl),c
   0D72 23                 3946 	inc	hl
   0D73 70                 3947 	ld	(hl),b
                           3948 ;demo.c:463: vdp_copier(&cmd);
   0D74 D5                 3949 	push	de
   0D75 21r2As41           3950 	ld	hl,#_cmd
   0D78 E5                 3951 	push	hl
   0D79 CDr00s00           3952 	call	_vdp_copier
   0D7C F1                 3953 	pop	af
   0D7D D1                 3954 	pop	de
                           3955 ;demo.c:464: cmd.dest_x = lx+x*3;
   0D7E 21r2Es41           3956 	ld	hl,#_cmd + 4
   0D81 DD 75 F2           3957 	ld	-14 (ix),l
   0D84 DD 74 F3           3958 	ld	-13 (ix),h
   0D87 21rBCs41           3959 	ld	hl,#_lx + 0
   0D8A 4E                 3960 	ld	c,(hl)
   0D8B 06 00              3961 	ld	b,#0x00
   0D8D 79                 3962 	ld	a,c
   0D8E DD 86 F4           3963 	add	a,-12 (ix)
   0D91 4F                 3964 	ld	c,a
   0D92 78                 3965 	ld	a,b
   0D93 DD 8E F5           3966 	adc	a,-11 (ix)
   0D96 47                 3967 	ld	b,a
   0D97 DD 6E F2           3968 	ld	l,-14 (ix)
   0D9A DD 66 F3           3969 	ld	h,-13 (ix)
   0D9D 71                 3970 	ld	(hl),c
   0D9E 23                 3971 	inc	hl
   0D9F 70                 3972 	ld	(hl),b
                           3973 ;demo.c:465: cmd.dest_y = 1+ly+y*3;
   0DA0 21r30s41           3974 	ld	hl,#_cmd + 6
   0DA3 DD 75 F2           3975 	ld	-14 (ix),l
   0DA6 DD 74 F3           3976 	ld	-13 (ix),h
   0DA9 21rBDs41           3977 	ld	hl,#_ly + 0
   0DAC 4E                 3978 	ld	c,(hl)
   0DAD 06 00              3979 	ld	b,#0x00
   0DAF 03                 3980 	inc	bc
   0DB0 79                 3981 	ld	a,c
   0DB1 DD 86 F6           3982 	add	a,-10 (ix)
   0DB4 4F                 3983 	ld	c,a
   0DB5 78                 3984 	ld	a,b
   0DB6 DD 8E F7           3985 	adc	a,-9 (ix)
   0DB9 47                 3986 	ld	b,a
   0DBA DD 6E F2           3987 	ld	l,-14 (ix)
   0DBD DD 66 F3           3988 	ld	h,-13 (ix)
   0DC0 71                 3989 	ld	(hl),c
   0DC1 23                 3990 	inc	hl
   0DC2 70                 3991 	ld	(hl),b
                           3992 ;demo.c:466: vdp_copier(&cmd);
   0DC3 D5                 3993 	push	de
   0DC4 21r2As41           3994 	ld	hl,#_cmd
   0DC7 E5                 3995 	push	hl
   0DC8 CDr00s00           3996 	call	_vdp_copier
   0DCB F1                 3997 	pop	af
   0DCC D1                 3998 	pop	de
                           3999 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0DCD DD 7E F4           4000 	ld	a,-12 (ix)
   0DD0 C6 03              4001 	add	a,#0x03
   0DD2 DD 77 F4           4002 	ld	-12 (ix),a
   0DD5 DD 7E F5           4003 	ld	a,-11 (ix)
   0DD8 CE 00              4004 	adc	a,#0x00
   0DDA DD 77 F5           4005 	ld	-11 (ix),a
   0DDD DD 34 FC           4006 	inc	-4 (ix)
   0DE0 20 03              4007 	jr	NZ,00117$
   0DE2 DD 34 FD           4008 	inc	-3 (ix)
   0DE5                    4009 00117$:
   0DE5 C3rE5s0B           4010 	jp	00101$
   0DE8                    4011 00115$:
   0DE8 DD 7E FC           4012 	ld	a,-4 (ix)
   0DEB DD 77 F2           4013 	ld	-14 (ix),a
   0DEE DD 7E FD           4014 	ld	a,-3 (ix)
   0DF1 DD 77 F3           4015 	ld	-13 (ix),a
                           4016 ;demo.c:468: waitVB();
   0DF4 76                 4017 		halt 
                           4018 ;demo.c:438: for (y=0;y<8;y++) {
   0DF5 DD 7E F6           4019 	ld	a,-10 (ix)
   0DF8 C6 03              4020 	add	a,#0x03
   0DFA DD 77 F6           4021 	ld	-10 (ix),a
   0DFD DD 7E F7           4022 	ld	a,-9 (ix)
   0E00 CE 00              4023 	adc	a,#0x00
   0E02 DD 77 F7           4024 	ld	-9 (ix),a
   0E05 DD 34 FA           4025 	inc	-6 (ix)
   0E08 20 03              4026 	jr	NZ,00118$
   0E0A DD 34 FB           4027 	inc	-5 (ix)
   0E0D                    4028 00118$:
   0E0D C3rC8s0B           4029 	jp	00105$
   0E10                    4030 00108$:
                           4031 ;demo.c:471: lx+=font_w[cidx]-1+(x*4);
   0E10 3ErB8              4032 	ld	a,#<_font_w
   0E12 DD 86 FE           4033 	add	a,-2 (ix)
   0E15 4F                 4034 	ld	c,a
   0E16 3Es0E              4035 	ld	a,#>_font_w
   0E18 DD 8E FF           4036 	adc	a,-1 (ix)
   0E1B 47                 4037 	ld	b,a
   0E1C 0A                 4038 	ld	a,(bc)
   0E1D 4F                 4039 	ld	c,a
   0E1E 0D                 4040 	dec	c
   0E1F DD 46 F2           4041 	ld	b,-14 (ix)
   0E22 CB 20              4042 	sla	b
   0E24 CB 20              4043 	sla	b
   0E26 79                 4044 	ld	a,c
   0E27 80                 4045 	add	a,b
   0E28 4F                 4046 	ld	c,a
   0E29 21rBCs41           4047 	ld	hl,#_lx + 0
   0E2C 46                 4048 	ld	b,(hl)
   0E2D 21rBCs41           4049 	ld	hl,#_lx
   0E30 78                 4050 	ld	a,b
   0E31 81                 4051 	add	a,c
   0E32 77                 4052 	ld	(hl),a
   0E33 DD F9              4053 	ld	sp,ix
   0E35 DD E1              4054 	pop	ix
   0E37 C9                 4055 	ret
   0E38                    4056 _do_2xletter_end::
   0E38                    4057 _font_x:
   0E38 01                 4058 	.db #0x01
   0E39 09                 4059 	.db #0x09
   0E3A 11                 4060 	.db #0x11
   0E3B 19                 4061 	.db #0x19
   0E3C 21                 4062 	.db #0x21
   0E3D 29                 4063 	.db #0x29
   0E3E 31                 4064 	.db #0x31
   0E3F 39                 4065 	.db #0x39
   0E40 41                 4066 	.db #0x41
   0E41 46                 4067 	.db #0x46
   0E42 4E                 4068 	.db #0x4E
   0E43 56                 4069 	.db #0x56
   0E44 5E                 4070 	.db #0x5E
   0E45 01                 4071 	.db #0x01
   0E46 0A                 4072 	.db #0x0A
   0E47 12                 4073 	.db #0x12
   0E48 1A                 4074 	.db #0x1A
   0E49 23                 4075 	.db #0x23
   0E4A 2B                 4076 	.db #0x2B
   0E4B 33                 4077 	.db #0x33
   0E4C 3C                 4078 	.db #0x3C
   0E4D 44                 4079 	.db #0x44
   0E4E 4C                 4080 	.db #0x4C
   0E4F 56                 4081 	.db #0x56
   0E50 5E                 4082 	.db #0x5E
   0E51 67                 4083 	.db #0x67
   0E52 00                 4084 	.db #0x00
   0E53 00                 4085 	.db #0x00
   0E54 00                 4086 	.db #0x00
   0E55 00                 4087 	.db #0x00
   0E56 00                 4088 	.db #0x00
   0E57 00                 4089 	.db #0x00
   0E58 01                 4090 	.db #0x01
   0E59 09                 4091 	.db #0x09
   0E5A 11                 4092 	.db #0x11
   0E5B 18                 4093 	.db #0x18
   0E5C 20                 4094 	.db #0x20
   0E5D 28                 4095 	.db #0x28
   0E5E 2F                 4096 	.db #0x2F
   0E5F 37                 4097 	.db #0x37
   0E60 3F                 4098 	.db #0x3F
   0E61 45                 4099 	.db #0x45
   0E62 4C                 4100 	.db #0x4C
   0E63 54                 4101 	.db #0x54
   0E64 5A                 4102 	.db #0x5A
   0E65 64                 4103 	.db #0x64
   0E66 01                 4104 	.db #0x01
   0E67 09                 4105 	.db #0x09
   0E68 11                 4106 	.db #0x11
   0E69 19                 4107 	.db #0x19
   0E6A 21                 4108 	.db #0x21
   0E6B 29                 4109 	.db #0x29
   0E6C 30                 4110 	.db #0x30
   0E6D 38                 4111 	.db #0x38
   0E6E 40                 4112 	.db #0x40
   0E6F 4A                 4113 	.db #0x4A
   0E70 52                 4114 	.db #0x52
   0E71 5A                 4115 	.db #0x5A
   0E72 00                 4116 	.db 0x00
   0E73 00                 4117 	.db 0x00
   0E74 00                 4118 	.db 0x00
   0E75 00                 4119 	.db 0x00
   0E76 00                 4120 	.db 0x00
   0E77 00                 4121 	.db 0x00
   0E78                    4122 _font_y:
   0E78 1C                 4123 	.db #0x1C
   0E79 1C                 4124 	.db #0x1C
   0E7A 1C                 4125 	.db #0x1C
   0E7B 1C                 4126 	.db #0x1C
   0E7C 1C                 4127 	.db #0x1C
   0E7D 1C                 4128 	.db #0x1C
   0E7E 1C                 4129 	.db #0x1C
   0E7F 1C                 4130 	.db #0x1C
   0E80 1C                 4131 	.db #0x1C
   0E81 1C                 4132 	.db #0x1C
   0E82 1C                 4133 	.db #0x1C
   0E83 1C                 4134 	.db #0x1C
   0E84 1C                 4135 	.db #0x1C
   0E85 25                 4136 	.db #0x25
   0E86 25                 4137 	.db #0x25
   0E87 25                 4138 	.db #0x25
   0E88 25                 4139 	.db #0x25
   0E89 25                 4140 	.db #0x25
   0E8A 25                 4141 	.db #0x25
   0E8B 25                 4142 	.db #0x25
   0E8C 25                 4143 	.db #0x25
   0E8D 25                 4144 	.db #0x25
   0E8E 25                 4145 	.db #0x25
   0E8F 25                 4146 	.db #0x25
   0E90 25                 4147 	.db #0x25
   0E91 25                 4148 	.db #0x25
   0E92 00                 4149 	.db #0x00
   0E93 00                 4150 	.db #0x00
   0E94 00                 4151 	.db #0x00
   0E95 00                 4152 	.db #0x00
   0E96 00                 4153 	.db #0x00
   0E97 00                 4154 	.db #0x00
   0E98 37                 4155 	.db #0x37
   0E99 37                 4156 	.db #0x37
   0E9A 37                 4157 	.db #0x37
   0E9B 37                 4158 	.db #0x37
   0E9C 37                 4159 	.db #0x37
   0E9D 37                 4160 	.db #0x37
   0E9E 37                 4161 	.db #0x37
   0E9F 37                 4162 	.db #0x37
   0EA0 37                 4163 	.db #0x37
   0EA1 37                 4164 	.db #0x37
   0EA2 37                 4165 	.db #0x37
   0EA3 37                 4166 	.db #0x37
   0EA4 37                 4167 	.db #0x37
   0EA5 37                 4168 	.db #0x37
   0EA6 40                 4169 	.db #0x40
   0EA7 40                 4170 	.db #0x40
   0EA8 40                 4171 	.db #0x40
   0EA9 40                 4172 	.db #0x40
   0EAA 40                 4173 	.db #0x40
   0EAB 40                 4174 	.db #0x40
   0EAC 40                 4175 	.db #0x40
   0EAD 40                 4176 	.db #0x40
   0EAE 40                 4177 	.db #0x40
   0EAF 40                 4178 	.db #0x40
   0EB0 40                 4179 	.db #0x40
   0EB1 40                 4180 	.db #0x40
   0EB2 00                 4181 	.db 0x00
   0EB3 00                 4182 	.db 0x00
   0EB4 00                 4183 	.db 0x00
   0EB5 00                 4184 	.db 0x00
   0EB6 00                 4185 	.db 0x00
   0EB7 00                 4186 	.db 0x00
   0EB8                    4187 _font_w:
   0EB8 07                 4188 	.db #0x07
   0EB9 07                 4189 	.db #0x07
   0EBA 07                 4190 	.db #0x07
   0EBB 07                 4191 	.db #0x07
   0EBC 07                 4192 	.db #0x07
   0EBD 07                 4193 	.db #0x07
   0EBE 07                 4194 	.db #0x07
   0EBF 07                 4195 	.db #0x07
   0EC0 04                 4196 	.db #0x04
   0EC1 07                 4197 	.db #0x07
   0EC2 07                 4198 	.db #0x07
   0EC3 07                 4199 	.db #0x07
   0EC4 09                 4200 	.db #0x09
   0EC5 08                 4201 	.db #0x08
   0EC6 07                 4202 	.db #0x07
   0EC7 07                 4203 	.db #0x07
   0EC8 08                 4204 	.db #0x08
   0EC9 07                 4205 	.db #0x07
   0ECA 07                 4206 	.db #0x07
   0ECB 08                 4207 	.db #0x08
   0ECC 07                 4208 	.db #0x07
   0ECD 07                 4209 	.db #0x07
   0ECE 09                 4210 	.db #0x09
   0ECF 07                 4211 	.db #0x07
   0ED0 08                 4212 	.db #0x08
   0ED1 07                 4213 	.db #0x07
   0ED2 00                 4214 	.db #0x00
   0ED3 00                 4215 	.db #0x00
   0ED4 00                 4216 	.db #0x00
   0ED5 00                 4217 	.db #0x00
   0ED6 00                 4218 	.db #0x00
   0ED7 00                 4219 	.db #0x00
   0ED8 07                 4220 	.db #0x07
   0ED9 07                 4221 	.db #0x07
   0EDA 06                 4222 	.db #0x06
   0EDB 07                 4223 	.db #0x07
   0EDC 07                 4224 	.db #0x07
   0EDD 07                 4225 	.db #0x07
   0EDE 07                 4226 	.db #0x07
   0EDF 07                 4227 	.db #0x07
   0EE0 05                 4228 	.db #0x05
   0EE1 06                 4229 	.db #0x06
   0EE2 07                 4230 	.db #0x07
   0EE3 05                 4231 	.db #0x05
   0EE4 09                 4232 	.db #0x09
   0EE5 07                 4233 	.db #0x07
   0EE6 07                 4234 	.db #0x07
   0EE7 07                 4235 	.db #0x07
   0EE8 07                 4236 	.db #0x07
   0EE9 07                 4237 	.db #0x07
   0EEA 07                 4238 	.db #0x07
   0EEB 06                 4239 	.db #0x06
   0EEC 07                 4240 	.db #0x07
   0EED 07                 4241 	.db #0x07
   0EEE 09                 4242 	.db #0x09
   0EEF 07                 4243 	.db #0x07
   0EF0 07                 4244 	.db #0x07
   0EF1 07                 4245 	.db #0x07
   0EF2 00                 4246 	.db 0x00
   0EF3 00                 4247 	.db 0x00
   0EF4 00                 4248 	.db 0x00
   0EF5 00                 4249 	.db 0x00
   0EF6 00                 4250 	.db 0x00
   0EF7 00                 4251 	.db 0x00
                           4252 ;demo.c:475: void do_letter(char cc) {
                           4253 ;	---------------------------------
                           4254 ; Function do_letter
                           4255 ; ---------------------------------
   0EF8                    4256 _do_letter_start::
   0EF8                    4257 _do_letter:
   0EF8 DD E5              4258 	push	ix
   0EFA DD 21 00 00        4259 	ld	ix,#0
   0EFE DD 39              4260 	add	ix,sp
   0F00 F5                 4261 	push	af
                           4262 ;demo.c:476: int cidx = cc - 65;
   0F01 DD 4E 04           4263 	ld	c,4 (ix)
   0F04 DD 7E 04           4264 	ld	a,4 (ix)
   0F07 17                 4265 	rla	
   0F08 9F                 4266 	sbc	a,a
   0F09 47                 4267 	ld	b,a
   0F0A 79                 4268 	ld	a,c
   0F0B C6 BF              4269 	add	a,#0xBF
   0F0D DD 77 FE           4270 	ld	-2 (ix),a
   0F10 78                 4271 	ld	a,b
   0F11 CE FF              4272 	adc	a,#0xFF
   0F13 DD 77 FF           4273 	ld	-1 (ix),a
                           4274 ;demo.c:477: cmd.source_x = 127+font_x[cidx];
   0F16 3Er38              4275 	ld	a,#<_font_x
   0F18 DD 86 FE           4276 	add	a,-2 (ix)
   0F1B 5F                 4277 	ld	e,a
   0F1C 3Es0E              4278 	ld	a,#>_font_x
   0F1E DD 8E FF           4279 	adc	a,-1 (ix)
   0F21 57                 4280 	ld	d,a
   0F22 1A                 4281 	ld	a,(de)
   0F23 5F                 4282 	ld	e,a
   0F24 16 00              4283 	ld	d,#0x00
   0F26 21 7F 00           4284 	ld	hl,#0x007F
   0F29 19                 4285 	add	hl,de
   0F2A EB                 4286 	ex	de,hl
   0F2B 21r2As41           4287 	ld	hl,#_cmd
   0F2E 73                 4288 	ld	(hl),e
   0F2F 23                 4289 	inc	hl
   0F30 72                 4290 	ld	(hl),d
                           4291 ;demo.c:478: cmd.source_y = 512+font_y[cidx];
   0F31 11r2Cs41           4292 	ld	de,#_cmd + 2
   0F34 3Er78              4293 	ld	a,#<_font_y
   0F36 DD 86 FE           4294 	add	a,-2 (ix)
   0F39 4F                 4295 	ld	c,a
   0F3A 3Es0E              4296 	ld	a,#>_font_y
   0F3C DD 8E FF           4297 	adc	a,-1 (ix)
   0F3F 47                 4298 	ld	b,a
   0F40 0A                 4299 	ld	a,(bc)
   0F41 4F                 4300 	ld	c,a
   0F42 06 00              4301 	ld	b,#0x00
   0F44 21 00 02           4302 	ld	hl,#0x0200
   0F47 09                 4303 	add	hl,bc
   0F48 4D                 4304 	ld	c,l
   0F49 44                 4305 	ld	b,h
   0F4A EB                 4306 	ex	de,hl
   0F4B 71                 4307 	ld	(hl),c
   0F4C 23                 4308 	inc	hl
   0F4D 70                 4309 	ld	(hl),b
                           4310 ;demo.c:479: cmd.dest_x = lx;
   0F4E 01r2Es41           4311 	ld	bc,#_cmd + 4
   0F51 21rBCs41           4312 	ld	hl,#_lx + 0
   0F54 5E                 4313 	ld	e,(hl)
   0F55 16 00              4314 	ld	d,#0x00
   0F57 69                 4315 	ld	l,c
   0F58 60                 4316 	ld	h,b
   0F59 73                 4317 	ld	(hl),e
   0F5A 23                 4318 	inc	hl
   0F5B 72                 4319 	ld	(hl),d
                           4320 ;demo.c:480: cmd.dest_y = ly;
   0F5C 01r30s41           4321 	ld	bc,#_cmd + 6
   0F5F 21rBDs41           4322 	ld	hl,#_ly + 0
   0F62 5E                 4323 	ld	e,(hl)
   0F63 16 00              4324 	ld	d,#0x00
   0F65 69                 4325 	ld	l,c
   0F66 60                 4326 	ld	h,b
   0F67 73                 4327 	ld	(hl),e
   0F68 23                 4328 	inc	hl
   0F69 72                 4329 	ld	(hl),d
                           4330 ;demo.c:481: cmd.size_x = font_w[cidx];
   0F6A 01r32s41           4331 	ld	bc,#_cmd + 8
   0F6D 3ErB8              4332 	ld	a,#<_font_w
   0F6F DD 86 FE           4333 	add	a,-2 (ix)
   0F72 5F                 4334 	ld	e,a
   0F73 3Es0E              4335 	ld	a,#>_font_w
   0F75 DD 8E FF           4336 	adc	a,-1 (ix)
   0F78 57                 4337 	ld	d,a
   0F79 1A                 4338 	ld	a,(de)
   0F7A 5F                 4339 	ld	e,a
   0F7B 16 00              4340 	ld	d,#0x00
   0F7D 69                 4341 	ld	l,c
   0F7E 60                 4342 	ld	h,b
   0F7F 73                 4343 	ld	(hl),e
   0F80 23                 4344 	inc	hl
   0F81 72                 4345 	ld	(hl),d
                           4346 ;demo.c:482: cmd.size_y = 8;
   0F82 21r34s41           4347 	ld	hl, #_cmd + 10
   0F85 36 08              4348 	ld	(hl),#0x08
   0F87 23                 4349 	inc	hl
   0F88 36 00              4350 	ld	(hl),#0x00
                           4351 ;demo.c:483: cmd.argument = 0x00;
   0F8A 3E 00              4352 	ld	a,#0x00
   0F8C 32r37s41           4353 	ld	(#_cmd + 13),a
                           4354 ;demo.c:484: cmd.command = 0x90; // logical vram to vram
   0F8F 3E 90              4355 	ld	a,#0x90
   0F91 32r38s41           4356 	ld	(#_cmd + 14),a
                           4357 ;demo.c:485: vdp_copier(&cmd);
   0F94 21r2As41           4358 	ld	hl,#_cmd
   0F97 E5                 4359 	push	hl
   0F98 CDr00s00           4360 	call	_vdp_copier
   0F9B F1                 4361 	pop	af
                           4362 ;demo.c:486: lx+=font_w[cidx]-1;
   0F9C 3ErB8              4363 	ld	a,#<_font_w
   0F9E DD 86 FE           4364 	add	a,-2 (ix)
   0FA1 4F                 4365 	ld	c,a
   0FA2 3Es0E              4366 	ld	a,#>_font_w
   0FA4 DD 8E FF           4367 	adc	a,-1 (ix)
   0FA7 47                 4368 	ld	b,a
   0FA8 0A                 4369 	ld	a,(bc)
   0FA9 4F                 4370 	ld	c,a
   0FAA 0D                 4371 	dec	c
   0FAB 21rBCs41           4372 	ld	hl,#_lx
   0FAE 7E                 4373 	ld	a,(hl)
   0FAF 81                 4374 	add	a,c
   0FB0 77                 4375 	ld	(hl),a
   0FB1 DD F9              4376 	ld	sp,ix
   0FB3 DD E1              4377 	pop	ix
   0FB5 C9                 4378 	ret
   0FB6                    4379 _do_letter_end::
                           4380 ;demo.c:490: void do_letter_tall(char cc) {
                           4381 ;	---------------------------------
                           4382 ; Function do_letter_tall
                           4383 ; ---------------------------------
   0FB6                    4384 _do_letter_tall_start::
   0FB6                    4385 _do_letter_tall:
   0FB6 DD E5              4386 	push	ix
   0FB8 DD 21 00 00        4387 	ld	ix,#0
   0FBC DD 39              4388 	add	ix,sp
   0FBE F5                 4389 	push	af
                           4390 ;demo.c:491: int cidx = cc - 65;
   0FBF DD 4E 04           4391 	ld	c,4 (ix)
   0FC2 DD 7E 04           4392 	ld	a,4 (ix)
   0FC5 17                 4393 	rla	
   0FC6 9F                 4394 	sbc	a,a
   0FC7 47                 4395 	ld	b,a
   0FC8 79                 4396 	ld	a,c
   0FC9 C6 BF              4397 	add	a,#0xBF
   0FCB DD 77 FE           4398 	ld	-2 (ix),a
   0FCE 78                 4399 	ld	a,b
   0FCF CE FF              4400 	adc	a,#0xFF
   0FD1 DD 77 FF           4401 	ld	-1 (ix),a
                           4402 ;demo.c:492: cmd.source_x = 127+font_x[cidx];
   0FD4 3Er38              4403 	ld	a,#<_font_x
   0FD6 DD 86 FE           4404 	add	a,-2 (ix)
   0FD9 5F                 4405 	ld	e,a
   0FDA 3Es0E              4406 	ld	a,#>_font_x
   0FDC DD 8E FF           4407 	adc	a,-1 (ix)
   0FDF 57                 4408 	ld	d,a
   0FE0 1A                 4409 	ld	a,(de)
   0FE1 5F                 4410 	ld	e,a
   0FE2 16 00              4411 	ld	d,#0x00
   0FE4 21 7F 00           4412 	ld	hl,#0x007F
   0FE7 19                 4413 	add	hl,de
   0FE8 EB                 4414 	ex	de,hl
   0FE9 21r2As41           4415 	ld	hl,#_cmd
   0FEC 73                 4416 	ld	(hl),e
   0FED 23                 4417 	inc	hl
   0FEE 72                 4418 	ld	(hl),d
                           4419 ;demo.c:493: cmd.source_y = 512+font_y[cidx]-1;
   0FEF 11r2Cs41           4420 	ld	de,#_cmd + 2
   0FF2 3Er78              4421 	ld	a,#<_font_y
   0FF4 DD 86 FE           4422 	add	a,-2 (ix)
   0FF7 4F                 4423 	ld	c,a
   0FF8 3Es0E              4424 	ld	a,#>_font_y
   0FFA DD 8E FF           4425 	adc	a,-1 (ix)
   0FFD 47                 4426 	ld	b,a
   0FFE 0A                 4427 	ld	a,(bc)
   0FFF 4F                 4428 	ld	c,a
   1000 06 00              4429 	ld	b,#0x00
   1002 21 FF 01           4430 	ld	hl,#0x01FF
   1005 09                 4431 	add	hl,bc
   1006 4D                 4432 	ld	c,l
   1007 44                 4433 	ld	b,h
   1008 EB                 4434 	ex	de,hl
   1009 71                 4435 	ld	(hl),c
   100A 23                 4436 	inc	hl
   100B 70                 4437 	ld	(hl),b
                           4438 ;demo.c:494: cmd.dest_x = lx;
   100C 01r2Es41           4439 	ld	bc,#_cmd + 4
   100F 21rBCs41           4440 	ld	hl,#_lx + 0
   1012 5E                 4441 	ld	e,(hl)
   1013 16 00              4442 	ld	d,#0x00
   1015 69                 4443 	ld	l,c
   1016 60                 4444 	ld	h,b
   1017 73                 4445 	ld	(hl),e
   1018 23                 4446 	inc	hl
   1019 72                 4447 	ld	(hl),d
                           4448 ;demo.c:495: cmd.dest_y = ly;
   101A 01r30s41           4449 	ld	bc,#_cmd + 6
   101D 21rBDs41           4450 	ld	hl,#_ly + 0
   1020 5E                 4451 	ld	e,(hl)
   1021 16 00              4452 	ld	d,#0x00
   1023 69                 4453 	ld	l,c
   1024 60                 4454 	ld	h,b
   1025 73                 4455 	ld	(hl),e
   1026 23                 4456 	inc	hl
   1027 72                 4457 	ld	(hl),d
                           4458 ;demo.c:496: cmd.size_x = font_w[cidx];
   1028 01r32s41           4459 	ld	bc,#_cmd + 8
   102B 3ErB8              4460 	ld	a,#<_font_w
   102D DD 86 FE           4461 	add	a,-2 (ix)
   1030 5F                 4462 	ld	e,a
   1031 3Es0E              4463 	ld	a,#>_font_w
   1033 DD 8E FF           4464 	adc	a,-1 (ix)
   1036 57                 4465 	ld	d,a
   1037 1A                 4466 	ld	a,(de)
   1038 5F                 4467 	ld	e,a
   1039 16 00              4468 	ld	d,#0x00
   103B 69                 4469 	ld	l,c
   103C 60                 4470 	ld	h,b
   103D 73                 4471 	ld	(hl),e
   103E 23                 4472 	inc	hl
   103F 72                 4473 	ld	(hl),d
                           4474 ;demo.c:497: cmd.size_y = 10;
   1040 21r34s41           4475 	ld	hl, #_cmd + 10
   1043 36 0A              4476 	ld	(hl),#0x0A
   1045 23                 4477 	inc	hl
   1046 36 00              4478 	ld	(hl),#0x00
                           4479 ;demo.c:498: cmd.argument = 0x00;
   1048 3E 00              4480 	ld	a,#0x00
   104A 32r37s41           4481 	ld	(#_cmd + 13),a
                           4482 ;demo.c:499: cmd.command = 0x90; // logical vram to vram
   104D 3E 90              4483 	ld	a,#0x90
   104F 32r38s41           4484 	ld	(#_cmd + 14),a
                           4485 ;demo.c:500: vdp_copier(&cmd);
   1052 21r2As41           4486 	ld	hl,#_cmd
   1055 E5                 4487 	push	hl
   1056 CDr00s00           4488 	call	_vdp_copier
   1059 F1                 4489 	pop	af
                           4490 ;demo.c:501: lx+=font_w[cidx]-1;
   105A 3ErB8              4491 	ld	a,#<_font_w
   105C DD 86 FE           4492 	add	a,-2 (ix)
   105F 4F                 4493 	ld	c,a
   1060 3Es0E              4494 	ld	a,#>_font_w
   1062 DD 8E FF           4495 	adc	a,-1 (ix)
   1065 47                 4496 	ld	b,a
   1066 0A                 4497 	ld	a,(bc)
   1067 4F                 4498 	ld	c,a
   1068 0D                 4499 	dec	c
   1069 21rBCs41           4500 	ld	hl,#_lx
   106C 7E                 4501 	ld	a,(hl)
   106D 81                 4502 	add	a,c
   106E 77                 4503 	ld	(hl),a
   106F DD F9              4504 	ld	sp,ix
   1071 DD E1              4505 	pop	ix
   1073 C9                 4506 	ret
   1074                    4507 _do_letter_tall_end::
                           4508 ;demo.c:504: void drawstr(char* str, uint8_t x, uint8_t y) {
                           4509 ;	---------------------------------
                           4510 ; Function drawstr
                           4511 ; ---------------------------------
   1074                    4512 _drawstr_start::
   1074                    4513 _drawstr:
   1074 DD E5              4514 	push	ix
   1076 DD 21 00 00        4515 	ld	ix,#0
   107A DD 39              4516 	add	ix,sp
                           4517 ;demo.c:505: char* c = str;
   107C DD 4E 04           4518 	ld	c,4 (ix)
   107F DD 46 05           4519 	ld	b,5 (ix)
                           4520 ;demo.c:506: lx = x;
   1082 DD 5E 06           4521 	ld	e,6 (ix)
   1085 21rBCs41           4522 	ld	hl,#_lx + 0
   1088 73                 4523 	ld	(hl), e
                           4524 ;demo.c:507: ly = y;
   1089 DD 7E 07           4525 	ld	a,7 (ix)
   108C 21rBDs41           4526 	ld	hl,#_ly + 0
   108F 77                 4527 	ld	(hl), a
                           4528 ;demo.c:508: while (*c) {
   1090                    4529 00107$:
   1090 0A                 4530 	ld	a,(bc)
   1091 57                 4531 	ld	d,a
   1092 B7                 4532 	or	a,a
   1093 28 42              4533 	jr	Z,00110$
                           4534 ;demo.c:509: char ltr = *c++; 
   1095 03                 4535 	inc	bc
                           4536 ;demo.c:510: if (ltr == ' ') lx+=4;
   1096 7A                 4537 	ld	a,d
   1097 D6 20              4538 	sub	a,#0x20
   1099 20 1E              4539 	jr	NZ,00105$
   109B FD 21rBCs41        4540 	ld	iy,#_lx
   109F FD 34 00           4541 	inc	0 (iy)
   10A2 FD 21rBCs41        4542 	ld	iy,#_lx
   10A6 FD 34 00           4543 	inc	0 (iy)
   10A9 FD 21rBCs41        4544 	ld	iy,#_lx
   10AD FD 34 00           4545 	inc	0 (iy)
   10B0 FD 21rBCs41        4546 	ld	iy,#_lx
   10B4 FD 34 00           4547 	inc	0 (iy)
   10B7 18 D7              4548 	jr	00107$
   10B9                    4549 00105$:
                           4550 ;demo.c:511: else if (ltr == '_') { ly+=9; lx = x; }
   10B9 7A                 4551 	ld	a,d
   10BA D6 5F              4552 	sub	a,#0x5F
   10BC 20 0D              4553 	jr	NZ,00102$
   10BE 21rBDs41           4554 	ld	hl,#_ly
   10C1 7E                 4555 	ld	a,(hl)
   10C2 C6 09              4556 	add	a,#0x09
   10C4 77                 4557 	ld	(hl),a
   10C5 21rBCs41           4558 	ld	hl,#_lx + 0
   10C8 73                 4559 	ld	(hl), e
   10C9 18 C5              4560 	jr	00107$
   10CB                    4561 00102$:
                           4562 ;demo.c:512: else do_letter(ltr);
   10CB C5                 4563 	push	bc
   10CC D5                 4564 	push	de
   10CD D5                 4565 	push	de
   10CE 33                 4566 	inc	sp
   10CF CDrF8s0E           4567 	call	_do_letter
   10D2 33                 4568 	inc	sp
   10D3 D1                 4569 	pop	de
   10D4 C1                 4570 	pop	bc
   10D5 18 B9              4571 	jr	00107$
   10D7                    4572 00110$:
   10D7 DD E1              4573 	pop	ix
   10D9 C9                 4574 	ret
   10DA                    4575 _drawstr_end::
                           4576 ;demo.c:519: void drawstrslow(char* str, uint8_t x, uint8_t y) {
                           4577 ;	---------------------------------
                           4578 ; Function drawstrslow
                           4579 ; ---------------------------------
   10DA                    4580 _drawstrslow_start::
   10DA                    4581 _drawstrslow:
   10DA DD E5              4582 	push	ix
   10DC DD 21 00 00        4583 	ld	ix,#0
   10E0 DD 39              4584 	add	ix,sp
                           4585 ;demo.c:520: char* c = str+ltrpointer;
   10E2 21rBEs41           4586 	ld	hl,#_ltrpointer
   10E5 DD 7E 04           4587 	ld	a,4 (ix)
   10E8 86                 4588 	add	a,(hl)
   10E9 4F                 4589 	ld	c,a
   10EA DD 7E 05           4590 	ld	a,5 (ix)
   10ED 23                 4591 	inc	hl
   10EE 8E                 4592 	adc	a,(hl)
   10EF 47                 4593 	ld	b,a
                           4594 ;demo.c:521: if (ltrpointer > slowend) return;
   10F0 21rC0s41           4595 	ld	hl,#_slowend
   10F3 7E                 4596 	ld	a,(hl)
   10F4 FD 21rBEs41        4597 	ld	iy,#_ltrpointer
   10F8 FD 96 00           4598 	sub	a,0 (iy)
   10FB 23                 4599 	inc	hl
   10FC 7E                 4600 	ld	a,(hl)
   10FD FD 21rBEs41        4601 	ld	iy,#_ltrpointer
   1101 FD 9E 01           4602 	sbc	a,1 (iy)
   1104 F2r0As11           4603 	jp	P,00102$
   1107 C3r75s11           4604 	jp	00114$
   110A                    4605 00102$:
                           4606 ;demo.c:522: if (ltrpointer == 0) {
   110A 3ArBEs41           4607 	ld	a,(#_ltrpointer+0)
   110D 21rBFs41           4608 	ld	hl,#_ltrpointer + 1
   1110 B6                 4609 	or	a,(hl)
   1111 20 0E              4610 	jr	NZ,00111$
                           4611 ;demo.c:523: lx = x;
   1113 DD 7E 06           4612 	ld	a,6 (ix)
   1116 21rBCs41           4613 	ld	hl,#_lx + 0
   1119 77                 4614 	ld	(hl), a
                           4615 ;demo.c:524: ly = y;
   111A DD 7E 07           4616 	ld	a,7 (ix)
   111D 21rBDs41           4617 	ld	hl,#_ly + 0
   1120 77                 4618 	ld	(hl), a
                           4619 ;demo.c:526: while (*c) {
   1121                    4620 00111$:
   1121 0A                 4621 	ld	a,(bc)
   1122 4F                 4622 	ld	c,a
   1123 B7                 4623 	or	a,a
   1124 28 3F              4624 	jr	Z,00113$
                           4625 ;demo.c:527: char ltr = *c++; 
                           4626 ;demo.c:528: if (ltr == ' ') lx+=4;
   1126 79                 4627 	ld	a,c
   1127 D6 20              4628 	sub	a,#0x20
   1129 20 1E              4629 	jr	NZ,00109$
   112B FD 21rBCs41        4630 	ld	iy,#_lx
   112F FD 34 00           4631 	inc	0 (iy)
   1132 FD 21rBCs41        4632 	ld	iy,#_lx
   1136 FD 34 00           4633 	inc	0 (iy)
   1139 FD 21rBCs41        4634 	ld	iy,#_lx
   113D FD 34 00           4635 	inc	0 (iy)
   1140 FD 21rBCs41        4636 	ld	iy,#_lx
   1144 FD 34 00           4637 	inc	0 (iy)
   1147 18 1C              4638 	jr	00113$
   1149                    4639 00109$:
                           4640 ;demo.c:529: else if (ltr == '_') { ly+=9; lx = x; }
   1149 79                 4641 	ld	a,c
   114A D6 5F              4642 	sub	a,#0x5F
   114C 20 10              4643 	jr	NZ,00106$
   114E 21rBDs41           4644 	ld	hl,#_ly
   1151 7E                 4645 	ld	a,(hl)
   1152 C6 09              4646 	add	a,#0x09
   1154 77                 4647 	ld	(hl),a
   1155 DD 7E 06           4648 	ld	a,6 (ix)
   1158 21rBCs41           4649 	ld	hl,#_lx + 0
   115B 77                 4650 	ld	(hl), a
   115C 18 07              4651 	jr	00113$
   115E                    4652 00106$:
                           4653 ;demo.c:530: else do_letter(ltr);
   115E 79                 4654 	ld	a,c
   115F F5                 4655 	push	af
   1160 33                 4656 	inc	sp
   1161 CDrF8s0E           4657 	call	_do_letter
   1164 33                 4658 	inc	sp
                           4659 ;demo.c:531: break;
   1165                    4660 00113$:
                           4661 ;demo.c:534: ltrpointer++;
   1165 FD 21rBEs41        4662 	ld	iy,#_ltrpointer
   1169 FD 34 00           4663 	inc	0 (iy)
   116C 20 07              4664 	jr	NZ,00125$
   116E FD 21rBEs41        4665 	ld	iy,#_ltrpointer
   1172 FD 34 01           4666 	inc	1 (iy)
   1175                    4667 00125$:
   1175                    4668 00114$:
   1175 DD E1              4669 	pop	ix
   1177 C9                 4670 	ret
   1178                    4671 _drawstrslow_end::
                           4672 ;demo.c:537: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           4673 ;	---------------------------------
                           4674 ; Function drawstr2x
                           4675 ; ---------------------------------
   1178                    4676 _drawstr2x_start::
   1178                    4677 _drawstr2x:
   1178 DD E5              4678 	push	ix
   117A DD 21 00 00        4679 	ld	ix,#0
   117E DD 39              4680 	add	ix,sp
                           4681 ;demo.c:538: char* c = str;
   1180 DD 4E 04           4682 	ld	c,4 (ix)
   1183 DD 46 05           4683 	ld	b,5 (ix)
                           4684 ;demo.c:539: lx = x;
   1186 DD 5E 06           4685 	ld	e,6 (ix)
   1189 21rBCs41           4686 	ld	hl,#_lx + 0
   118C 73                 4687 	ld	(hl), e
                           4688 ;demo.c:540: ly = y;
   118D DD 7E 07           4689 	ld	a,7 (ix)
   1190 21rBDs41           4690 	ld	hl,#_ly + 0
   1193 77                 4691 	ld	(hl), a
                           4692 ;demo.c:541: while (*c) {
   1194                    4693 00107$:
   1194 0A                 4694 	ld	a,(bc)
   1195 57                 4695 	ld	d,a
   1196 B7                 4696 	or	a,a
   1197 28 2D              4697 	jr	Z,00110$
                           4698 ;demo.c:542: char ltr = *c++; 
   1199 03                 4699 	inc	bc
                           4700 ;demo.c:543: if (ltr == ' ') lx+=4*4;
   119A 7A                 4701 	ld	a,d
   119B D6 20              4702 	sub	a,#0x20
   119D 20 09              4703 	jr	NZ,00105$
   119F 21rBCs41           4704 	ld	hl,#_lx
   11A2 7E                 4705 	ld	a,(hl)
   11A3 C6 10              4706 	add	a,#0x10
   11A5 77                 4707 	ld	(hl),a
   11A6 18 EC              4708 	jr	00107$
   11A8                    4709 00105$:
                           4710 ;demo.c:544: else if (ltr == '_') { ly+=9*4; lx = x; }
   11A8 7A                 4711 	ld	a,d
   11A9 D6 5F              4712 	sub	a,#0x5F
   11AB 20 0D              4713 	jr	NZ,00102$
   11AD 21rBDs41           4714 	ld	hl,#_ly
   11B0 7E                 4715 	ld	a,(hl)
   11B1 C6 24              4716 	add	a,#0x24
   11B3 77                 4717 	ld	(hl),a
   11B4 21rBCs41           4718 	ld	hl,#_lx + 0
   11B7 73                 4719 	ld	(hl), e
   11B8 18 DA              4720 	jr	00107$
   11BA                    4721 00102$:
                           4722 ;demo.c:545: else do_2xletter(ltr);
   11BA C5                 4723 	push	bc
   11BB D5                 4724 	push	de
   11BC D5                 4725 	push	de
   11BD 33                 4726 	inc	sp
   11BE CDr8As0B           4727 	call	_do_2xletter
   11C1 33                 4728 	inc	sp
   11C2 D1                 4729 	pop	de
   11C3 C1                 4730 	pop	bc
   11C4 18 CE              4731 	jr	00107$
   11C6                    4732 00110$:
   11C6 DD E1              4733 	pop	ix
   11C8 C9                 4734 	ret
   11C9                    4735 _drawstr2x_end::
                           4736 ;demo.c:550: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4737 ;	---------------------------------
                           4738 ; Function drawsine
                           4739 ; ---------------------------------
   11C9                    4740 _drawsine_start::
   11C9                    4741 _drawsine:
   11C9 DD E5              4742 	push	ix
   11CB DD 21 00 00        4743 	ld	ix,#0
   11CF DD 39              4744 	add	ix,sp
   11D1 3B                 4745 	dec	sp
                           4746 ;demo.c:551: char* c = str;
   11D2 DD 4E 04           4747 	ld	c,4 (ix)
   11D5 DD 46 05           4748 	ld	b,5 (ix)
                           4749 ;demo.c:552: lx = x;
   11D8 DD 7E 06           4750 	ld	a,6 (ix)
   11DB 21rBCs41           4751 	ld	hl,#_lx + 0
   11DE 77                 4752 	ld	(hl), a
                           4753 ;demo.c:554: while (*c) {
   11DF                    4754 00104$:
   11DF 0A                 4755 	ld	a,(bc)
   11E0 5F                 4756 	ld	e,a
   11E1 B7                 4757 	or	a,a
   11E2 CAr48s12           4758 	jp	Z,00107$
                           4759 ;demo.c:555: char ltr = *c++; 
   11E5 03                 4760 	inc	bc
   11E6 DD 73 FF           4761 	ld	-1 (ix),e
                           4762 ;demo.c:556: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   11E9 21rBCs41           4763 	ld	hl,#_lx + 0
   11EC 5E                 4764 	ld	e,(hl)
   11ED 16 00              4765 	ld	d,#0x00
   11EF 21r26s41           4766 	ld	hl,#_vbicount
   11F2 7B                 4767 	ld	a,e
   11F3 86                 4768 	add	a,(hl)
   11F4 5F                 4769 	ld	e,a
   11F5 7A                 4770 	ld	a,d
   11F6 23                 4771 	inc	hl
   11F7 8E                 4772 	adc	a,(hl)
   11F8 57                 4773 	ld	d,a
   11F9 CB 2A              4774 	sra	d
   11FB CB 1B              4775 	rr	e
   11FD 16 00              4776 	ld	d,#0x00
   11FF 21r2Cs00           4777 	ld	hl,#_sintabx
   1202 19                 4778 	add	hl,de
   1203 5E                 4779 	ld	e,(hl)
   1204 CB 3B              4780 	srl	e
   1206 CB 3B              4781 	srl	e
   1208 CB 3B              4782 	srl	e
   120A CB 3B              4783 	srl	e
   120C 21rBDs41           4784 	ld	hl,#_ly
   120F DD 7E 07           4785 	ld	a,7 (ix)
   1212 83                 4786 	add	a,e
   1213 77                 4787 	ld	(hl),a
                           4788 ;demo.c:557: if (ltr == ' ') lx+=4;
   1214 DD 7E FF           4789 	ld	a,-1 (ix)
   1217 D6 20              4790 	sub	a,#0x20
   1219 20 1F              4791 	jr	NZ,00102$
   121B FD 21rBCs41        4792 	ld	iy,#_lx
   121F FD 34 00           4793 	inc	0 (iy)
   1222 FD 21rBCs41        4794 	ld	iy,#_lx
   1226 FD 34 00           4795 	inc	0 (iy)
   1229 FD 21rBCs41        4796 	ld	iy,#_lx
   122D FD 34 00           4797 	inc	0 (iy)
   1230 FD 21rBCs41        4798 	ld	iy,#_lx
   1234 FD 34 00           4799 	inc	0 (iy)
   1237 C3rDFs11           4800 	jp	00104$
   123A                    4801 00102$:
                           4802 ;demo.c:558: else do_letter_tall(ltr);
   123A C5                 4803 	push	bc
   123B DD 7E FF           4804 	ld	a,-1 (ix)
   123E F5                 4805 	push	af
   123F 33                 4806 	inc	sp
   1240 CDrB6s0F           4807 	call	_do_letter_tall
   1243 33                 4808 	inc	sp
   1244 C1                 4809 	pop	bc
   1245 C3rDFs11           4810 	jp	00104$
   1248                    4811 00107$:
   1248 DD F9              4812 	ld	sp,ix
   124A DD E1              4813 	pop	ix
   124C C9                 4814 	ret
   124D                    4815 _drawsine_end::
                           4816 ;demo.c:562: void font() {
                           4817 ;	---------------------------------
                           4818 ; Function font
                           4819 ; ---------------------------------
   124D                    4820 _font_start::
   124D                    4821 _font:
                           4822 ;demo.c:563: slowend = 128;
   124D 21rC0s41           4823 	ld	hl,#_slowend + 0
   1250 36 80              4824 	ld	(hl), #0x80
   1252 21rC1s41           4825 	ld	hl,#_slowend + 1
   1255 36 00              4826 	ld	(hl), #0x00
                           4827 ;demo.c:564: drawstrslow("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PARTY PEOPLE",74,60);
   1257 21 4A 3C           4828 	ld	hl,#0x3C4A
   125A E5                 4829 	push	hl
   125B 21r65s12           4830 	ld	hl,#__str_6
   125E E5                 4831 	push	hl
   125F CDrDAs10           4832 	call	_drawstrslow
   1262 F1                 4833 	pop	af
   1263 F1                 4834 	pop	af
   1264 C9                 4835 	ret
   1265                    4836 _font_end::
   1265                    4837 __str_6:
   1265 44 49 47 49 54 41  4838 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   12A1 4F 4E 5F 5F 20 20  4839 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PART"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F 5F 5F 4D 41
        4B 45 20 53 4F 4D
        45 20 4E 4F 49 53
        45 20 50 41 52 54
   12DD 59 20 50 45 4F 50  4840 	.ascii "Y PEOPLE"
        4C 45
   12E5 00                 4841 	.db 0x00
                           4842 ;demo.c:572: void twister() {
                           4843 ;	---------------------------------
                           4844 ; Function twister
                           4845 ; ---------------------------------
   12E6                    4846 _twister_start::
   12E6                    4847 _twister:
   12E6 DD E5              4848 	push	ix
   12E8 DD 21 00 00        4849 	ld	ix,#0
   12EC DD 39              4850 	add	ix,sp
   12EE F5                 4851 	push	af
                           4852 ;demo.c:576: if (twinited == 0) {
   12EF 3ArC4s41           4853 	ld	a,(#_twinited+0)
   12F2 FD 21rC4s41        4854 	ld	iy,#_twinited
   12F6 FD B6 01           4855 	or	a,1 (iy)
   12F9 C2r73s13           4856 	jp	NZ,00102$
                           4857 ;demo.c:577: cmd.size_x = 256;
   12FC 21r32s41           4858 	ld	hl, #_cmd + 8
   12FF 36 00              4859 	ld	(hl),#0x00
   1301 23                 4860 	inc	hl
   1302 36 01              4861 	ld	(hl),#0x01
                           4862 ;demo.c:578: cmd.size_y = 1;
   1304 21r34s41           4863 	ld	hl, #_cmd + 10
   1307 36 01              4864 	ld	(hl),#0x01
   1309 23                 4865 	inc	hl
   130A 36 00              4866 	ld	(hl),#0x00
                           4867 ;demo.c:579: cmd.data = 0;
                           4868 ;demo.c:580: cmd.argument = 0x00; // from 70xY to left
   130C 3E 00              4869 	ld	a,#0x00
   130E 32r36s41           4870 	ld	(#_cmd + 12),a
   1311 32r37s41           4871 	ld	(#_cmd + 13),a
                           4872 ;demo.c:581: cmd.command = 0xd0; // vram to vram, y only
   1314 01r38s41           4873 	ld	bc,#_cmd + 14
   1317 3E D0              4874 	ld	a,#0xD0
   1319 02                 4875 	ld	(bc),a
                           4876 ;demo.c:582: cmd.source_x = 0;
   131A 21r2As41           4877 	ld	hl,#_cmd
   131D 36 00              4878 	ld	(hl),#0x00
   131F 23                 4879 	inc	hl
   1320 36 00              4880 	ld	(hl),#0x00
                           4881 ;demo.c:583: cmd.dest_x = 0;
   1322 21r2Es41           4882 	ld	hl, #_cmd + 4
   1325 36 00              4883 	ld	(hl),#0x00
   1327 23                 4884 	inc	hl
   1328 36 00              4885 	ld	(hl),#0x00
                           4886 ;demo.c:585: for (y = 0; y < 212; y+=1) {
   132A 01 00 00           4887 	ld	bc,#0x0000
   132D                    4888 00103$:
   132D 79                 4889 	ld	a,c
   132E D6 D4              4890 	sub	a,#0xD4
   1330 78                 4891 	ld	a,b
   1331 DE 00              4892 	sbc	a,#0x00
   1333 F2r54s13           4893 	jp	P,00106$
                           4894 ;demo.c:586: waitVB();
   1336 76                 4895 		halt 
                           4896 ;demo.c:587: cmd.source_y = 0;
   1337 11r2Cs41           4897 	ld	de,#_cmd + 2
   133A EB                 4898 	ex	de,hl
   133B 36 00              4899 	ld	(hl),#0x00
   133D 23                 4900 	inc	hl
   133E 36 00              4901 	ld	(hl),#0x00
                           4902 ;demo.c:588: cmd.dest_y = y;
   1340 11r30s41           4903 	ld	de,#_cmd + 6
   1343 EB                 4904 	ex	de,hl
   1344 71                 4905 	ld	(hl),c
   1345 23                 4906 	inc	hl
   1346 70                 4907 	ld	(hl),b
                           4908 ;demo.c:589: vdp_copier(&cmd);
   1347 C5                 4909 	push	bc
   1348 21r2As41           4910 	ld	hl,#_cmd
   134B E5                 4911 	push	hl
   134C CDr00s00           4912 	call	_vdp_copier
   134F F1                 4913 	pop	af
   1350 C1                 4914 	pop	bc
                           4915 ;demo.c:585: for (y = 0; y < 212; y+=1) {
   1351 03                 4916 	inc	bc
   1352 18 D9              4917 	jr	00103$
   1354                    4918 00106$:
                           4919 ;demo.c:593: twinited = 1;
   1354 21rC4s41           4920 	ld	hl,#_twinited + 0
   1357 36 01              4921 	ld	(hl), #0x01
   1359 21rC5s41           4922 	ld	hl,#_twinited + 1
   135C 36 00              4923 	ld	(hl), #0x00
                           4924 ;demo.c:594: vdp_load_palette(twister_palette);
   135E 21rA6s40           4925 	ld	hl,#_twister_palette
   1361 E5                 4926 	push	hl
   1362 CDr00s00           4927 	call	_vdp_load_palette
   1365 F1                 4928 	pop	af
                           4929 ;demo.c:595: drawstr2x("DSS",80,15);
   1366 21 50 0F           4930 	ld	hl,#0x0F50
   1369 E5                 4931 	push	hl
   136A 21r7Fs14           4932 	ld	hl,#__str_7
   136D E5                 4933 	push	hl
   136E CDr78s11           4934 	call	_drawstr2x
   1371 F1                 4935 	pop	af
   1372 F1                 4936 	pop	af
   1373                    4937 00102$:
                           4938 ;demo.c:599: cmd.size_x = 70;
   1373 21r32s41           4939 	ld	hl, #_cmd + 8
   1376 36 46              4940 	ld	(hl),#0x46
   1378 23                 4941 	inc	hl
   1379 36 00              4942 	ld	(hl),#0x00
                           4943 ;demo.c:600: cmd.size_y = 2;
   137B 21r34s41           4944 	ld	hl, #_cmd + 10
   137E 36 02              4945 	ld	(hl),#0x02
   1380 23                 4946 	inc	hl
   1381 36 00              4947 	ld	(hl),#0x00
                           4948 ;demo.c:601: cmd.data = 0;
   1383 3E 00              4949 	ld	a,#0x00
   1385 32r36s41           4950 	ld	(#_cmd + 12),a
                           4951 ;demo.c:602: cmd.argument = 0x04; // from 70xY to left
   1388 3E 04              4952 	ld	a,#0x04
   138A 32r37s41           4953 	ld	(#_cmd + 13),a
                           4954 ;demo.c:603: cmd.command = 0xe0; // vram to vram, y only
   138D 01r38s41           4955 	ld	bc,#_cmd + 14
   1390 3E E0              4956 	ld	a,#0xE0
   1392 02                 4957 	ld	(bc),a
                           4958 ;demo.c:604: cmd.source_x = 70;
   1393 21r2As41           4959 	ld	hl,#_cmd
   1396 36 46              4960 	ld	(hl),#0x46
   1398 23                 4961 	inc	hl
   1399 36 00              4962 	ld	(hl),#0x00
                           4963 ;demo.c:605: cmd.dest_x = 70;
   139B 21r2Es41           4964 	ld	hl, #_cmd + 4
   139E 36 46              4965 	ld	(hl),#0x46
   13A0 23                 4966 	inc	hl
   13A1 36 00              4967 	ld	(hl),#0x00
                           4968 ;demo.c:607: for (y = 0; y < 212; y+=2) {
   13A3 DD 36 FE 00        4969 	ld	-2 (ix),#0x00
   13A7 DD 36 FF 00        4970 	ld	-1 (ix),#0x00
   13AB                    4971 00107$:
   13AB DD 7E FE           4972 	ld	a,-2 (ix)
   13AE D6 D4              4973 	sub	a,#0xD4
   13B0 DD 7E FF           4974 	ld	a,-1 (ix)
   13B3 DE 00              4975 	sbc	a,#0x00
   13B5 F2r0Es14           4976 	jp	P,00110$
                           4977 ;demo.c:608: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   13B8 11r2Cs41           4978 	ld	de,#_cmd + 2
   13BB DD 4E FE           4979 	ld	c,-2 (ix)
   13BE DD 46 FF           4980 	ld	b,-1 (ix)
   13C1 CB 28              4981 	sra	b
   13C3 CB 19              4982 	rr	c
   13C5 3ArC2s41           4983 	ld	a,(#_ff+0)
   13C8 81                 4984 	add	a,c
   13C9 4F                 4985 	ld	c,a
   13CA 3ArC3s41           4986 	ld	a,(#_ff+1)
   13CD 88                 4987 	adc	a,b
   13CE 06 00              4988 	ld	b,#0x00
   13D0 21r00s00           4989 	ld	hl,#_sintab
   13D3 09                 4990 	add	hl,bc
   13D4 7E                 4991 	ld	a,(hl)
   13D5 4F                 4992 	ld	c,a
   13D6 CB 29              4993 	sra	c
   13D8 79                 4994 	ld	a,c
   13D9 17                 4995 	rla	
   13DA 9F                 4996 	sbc	a,a
   13DB 47                 4997 	ld	b,a
   13DC 21 40 02           4998 	ld	hl,#0x0240
   13DF 09                 4999 	add	hl,bc
   13E0 4D                 5000 	ld	c,l
   13E1 44                 5001 	ld	b,h
   13E2 6B                 5002 	ld	l,e
   13E3 62                 5003 	ld	h,d
   13E4 71                 5004 	ld	(hl),c
   13E5 23                 5005 	inc	hl
   13E6 70                 5006 	ld	(hl),b
                           5007 ;demo.c:609: cmd.dest_y = y;
   13E7 21r30s41           5008 	ld	hl, #_cmd + 6
   13EA DD 7E FE           5009 	ld	a,-2 (ix)
   13ED 77                 5010 	ld	(hl),a
   13EE 23                 5011 	inc	hl
   13EF DD 7E FF           5012 	ld	a,-1 (ix)
   13F2 77                 5013 	ld	(hl),a
                           5014 ;demo.c:610: vdp_copier(&cmd);
   13F3 21r2As41           5015 	ld	hl,#_cmd
   13F6 E5                 5016 	push	hl
   13F7 CDr00s00           5017 	call	_vdp_copier
   13FA F1                 5018 	pop	af
                           5019 ;demo.c:607: for (y = 0; y < 212; y+=2) {
   13FB DD 7E FE           5020 	ld	a,-2 (ix)
   13FE C6 02              5021 	add	a,#0x02
   1400 DD 77 FE           5022 	ld	-2 (ix),a
   1403 DD 7E FF           5023 	ld	a,-1 (ix)
   1406 CE 00              5024 	adc	a,#0x00
   1408 DD 77 FF           5025 	ld	-1 (ix),a
   140B C3rABs13           5026 	jp	00107$
   140E                    5027 00110$:
                           5028 ;demo.c:614: msx2_palette(4,PLY_PSGReg8+ff>>2,PLY_PSGReg9+ff>>3,ff>>2);
   140E 21rC2s41           5029 	ld	hl,#_ff + 0
   1411 4E                 5030 	ld	c,(hl)
   1412 21rC3s41           5031 	ld	hl,#_ff + 1
   1415 46                 5032 	ld	b,(hl)
   1416 CB 28              5033 	sra	b
   1418 CB 19              5034 	rr	c
   141A CB 28              5035 	sra	b
   141C CB 19              5036 	rr	c
   141E 21r00s00           5037 	ld	hl,#_PLY_PSGReg9 + 0
   1421 5E                 5038 	ld	e,(hl)
   1422 16 00              5039 	ld	d,#0x00
   1424 21rC2s41           5040 	ld	hl,#_ff
   1427 7B                 5041 	ld	a,e
   1428 86                 5042 	add	a,(hl)
   1429 5F                 5043 	ld	e,a
   142A 7A                 5044 	ld	a,d
   142B 23                 5045 	inc	hl
   142C 8E                 5046 	adc	a,(hl)
   142D 57                 5047 	ld	d,a
   142E CB 2A              5048 	sra	d
   1430 CB 1B              5049 	rr	e
   1432 CB 2A              5050 	sra	d
   1434 CB 1B              5051 	rr	e
   1436 CB 2A              5052 	sra	d
   1438 CB 1B              5053 	rr	e
   143A 43                 5054 	ld	b,e
   143B 21r00s00           5055 	ld	hl,#_PLY_PSGReg8 + 0
   143E 5E                 5056 	ld	e,(hl)
   143F 16 00              5057 	ld	d,#0x00
   1441 21rC2s41           5058 	ld	hl,#_ff
   1444 7B                 5059 	ld	a,e
   1445 86                 5060 	add	a,(hl)
   1446 5F                 5061 	ld	e,a
   1447 7A                 5062 	ld	a,d
   1448 23                 5063 	inc	hl
   1449 8E                 5064 	adc	a,(hl)
   144A 57                 5065 	ld	d,a
   144B CB 2A              5066 	sra	d
   144D CB 1B              5067 	rr	e
   144F CB 2A              5068 	sra	d
   1451 CB 1B              5069 	rr	e
   1453 79                 5070 	ld	a,c
   1454 F5                 5071 	push	af
   1455 33                 5072 	inc	sp
   1456 C5                 5073 	push	bc
   1457 33                 5074 	inc	sp
   1458 53                 5075 	ld	d,e
   1459 1E 04              5076 	ld	e,#0x04
   145B D5                 5077 	push	de
   145C CDr00s00           5078 	call	_msx2_palette
   145F F1                 5079 	pop	af
   1460 F1                 5080 	pop	af
                           5081 ;demo.c:616: font();
   1461 CDr4Ds12           5082 	call	_font
                           5083 ;demo.c:618: ff+=4;
   1464 21rC2s41           5084 	ld	hl,#_ff
   1467 7E                 5085 	ld	a,(hl)
   1468 C6 04              5086 	add	a,#0x04
   146A 23                 5087 	inc	hl
   146B 2B                 5088 	dec	hl
   146C C5                 5089 	push	bc
   146D 4F                 5090 	ld	c, a
   146E 23                 5091 	inc	hl
   146F 7E                 5092 	ld	a, (hl)
   1470 47                 5093 	ld	b, a
   1471 79                 5094 	ld	a, c
   1472 2B                 5095 	dec	hl
   1473 77                 5096 	ld	(hl), a
   1474 78                 5097 	ld	a, b
   1475 C1                 5098 	pop	bc
   1476 CE 00              5099 	adc	a,#0x00
   1478 23                 5100 	inc	hl
   1479 77                 5101 	ld	(hl),a
   147A DD F9              5102 	ld	sp,ix
   147C DD E1              5103 	pop	ix
   147E C9                 5104 	ret
   147F                    5105 _twister_end::
   147F                    5106 __str_7:
   147F 44 53 53           5107 	.ascii "DSS"
   1482 00                 5108 	.db 0x00
                           5109 ;demo.c:629: void bulbs() {
                           5110 ;	---------------------------------
                           5111 ; Function bulbs
                           5112 ; ---------------------------------
   1483                    5113 _bulbs_start::
   1483                    5114 _bulbs:
   1483 DD E5              5115 	push	ix
   1485 DD 21 00 00        5116 	ld	ix,#0
   1489 DD 39              5117 	add	ix,sp
   148B 21 FA FF           5118 	ld	hl,#-6
   148E 39                 5119 	add	hl,sp
   148F F9                 5120 	ld	sp,hl
                           5121 ;demo.c:633: ender+=enderdir;
   1490 21rCEs41           5122 	ld	hl,#_enderdir
   1493 D5                 5123 	push	de
   1494 FD 21rCCs41        5124 	ld	iy,#_ender
   1498 FD E5              5125 	push	iy
   149A D1                 5126 	pop	de
   149B 1A                 5127 	ld	a,(de)
   149C 86                 5128 	add	a,(hl)
   149D 13                 5129 	inc	de
   149E 1B                 5130 	dec	de
   149F C5                 5131 	push	bc
   14A0 4F                 5132 	ld	c, a
   14A1 13                 5133 	inc	de
   14A2 1A                 5134 	ld	a, (de)
   14A3 47                 5135 	ld	b, a
   14A4 79                 5136 	ld	a, c
   14A5 1B                 5137 	dec	de
   14A6 12                 5138 	ld	(de), a
   14A7 78                 5139 	ld	a, b
   14A8 C1                 5140 	pop	bc
   14A9 23                 5141 	inc	hl
   14AA 8E                 5142 	adc	a,(hl)
   14AB 13                 5143 	inc	de
   14AC 12                 5144 	ld	(de),a
   14AD D1                 5145 	pop	de
                           5146 ;demo.c:634: if (ender < 2) { enderdir = -enderdir; }
   14AE 3ArCCs41           5147 	ld	a,(#_ender+0)
   14B1 D6 02              5148 	sub	a,#0x02
   14B3 3ArCDs41           5149 	ld	a,(#_ender+1)
   14B6 DE 00              5150 	sbc	a,#0x00
   14B8 F2rDCs14           5151 	jp	P,00102$
   14BB AF                 5152 	xor	a,a
   14BC FD 21rCEs41        5153 	ld	iy,#_enderdir
   14C0 3E 00              5154 	ld	a,#0x00
   14C2 FD 9E 00           5155 	sbc	a,0 (iy)
   14C5 FD 21rCEs41        5156 	ld	iy,#_enderdir
   14C9 FD 77 00           5157 	ld	0 (iy),a
   14CC FD 21rCEs41        5158 	ld	iy,#_enderdir
   14D0 3E 00              5159 	ld	a,#0x00
   14D2 FD 9E 01           5160 	sbc	a,1 (iy)
   14D5 FD 21rCEs41        5161 	ld	iy,#_enderdir
   14D9 FD 77 01           5162 	ld	1 (iy),a
   14DC                    5163 00102$:
                           5164 ;demo.c:635: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   14DC 3ArCCs41           5165 	ld	a,(#_ender+0)
   14DF D6 D4              5166 	sub	a,#0xD4
   14E1 3ArCDs41           5167 	ld	a,(#_ender+1)
   14E4 DE 00              5168 	sbc	a,#0x00
   14E6 FAr0Cs15           5169 	jp	M,00104$
   14E9 AF                 5170 	xor	a,a
   14EA FD 21rCEs41        5171 	ld	iy,#_enderdir
   14EE 3E 00              5172 	ld	a,#0x00
   14F0 FD 9E 00           5173 	sbc	a,0 (iy)
   14F3 21rCEs41           5174 	ld	hl,#_enderdir + 0
   14F6 77                 5175 	ld	(hl), a
   14F7 FD 21rCEs41        5176 	ld	iy,#_enderdir
   14FB 3E 00              5177 	ld	a,#0x00
   14FD FD 9E 01           5178 	sbc	a,1 (iy)
   1500 21rCFs41           5179 	ld	hl,#_enderdir + 1
   1503 77                 5180 	ld	(hl), a
   1504 2ArD0s41           5181 	ld	hl,(_sy)
   1507 2B                 5182 	dec	hl
   1508 2B                 5183 	dec	hl
   1509 22rD0s41           5184 	ld	(_sy),hl
   150C                    5185 00104$:
                           5186 ;demo.c:637: enderend = ender + 92;
   150C 3ArCCs41           5187 	ld	a,(#_ender+0)
   150F C6 5C              5188 	add	a,#0x5C
   1511 DD 77 FE           5189 	ld	-2 (ix),a
   1514 3ArCDs41           5190 	ld	a,(#_ender+1)
   1517 CE 00              5191 	adc	a,#0x00
   1519 DD 77 FF           5192 	ld	-1 (ix),a
                           5193 ;demo.c:639: if (enderend > 212) enderend = 212;
   151C 3E D4              5194 	ld	a,#0xD4
   151E DD 96 FE           5195 	sub	a,-2 (ix)
   1521 3E 00              5196 	ld	a,#0x00
   1523 DD 9E FF           5197 	sbc	a,-1 (ix)
   1526 F2r31s15           5198 	jp	P,00106$
   1529 DD 36 FE D4        5199 	ld	-2 (ix),#0xD4
   152D DD 36 FF 00        5200 	ld	-1 (ix),#0x00
   1531                    5201 00106$:
                           5202 ;demo.c:640: if (enderend > 212-16) sy = 16-(212-enderend);
   1531 3E C4              5203 	ld	a,#0xC4
   1533 DD 96 FE           5204 	sub	a,-2 (ix)
   1536 3E 00              5205 	ld	a,#0x00
   1538 DD 9E FF           5206 	sbc	a,-1 (ix)
   153B F2r56s15           5207 	jp	P,00108$
   153E 3E D4              5208 	ld	a,#0xD4
   1540 DD 96 FE           5209 	sub	a,-2 (ix)
   1543 5F                 5210 	ld	e,a
   1544 3E 00              5211 	ld	a,#0x00
   1546 DD 9E FF           5212 	sbc	a,-1 (ix)
   1549 57                 5213 	ld	d,a
   154A 21rD0s41           5214 	ld	hl,#_sy
   154D 3E 10              5215 	ld	a,#0x10
   154F 93                 5216 	sub	a,e
   1550 77                 5217 	ld	(hl),a
   1551 3E 00              5218 	ld	a,#0x00
   1553 9A                 5219 	sbc	a,d
   1554 23                 5220 	inc	hl
   1555 77                 5221 	ld	(hl),a
   1556                    5222 00108$:
                           5223 ;demo.c:642: if(bulbflipper == 1) {
   1556 3ArC6s41           5224 	ld	a,(#_bulbflipper+0)
   1559 D6 01              5225 	sub	a,#0x01
   155B 20 06              5226 	jr	NZ,00133$
   155D 3ArC7s41           5227 	ld	a,(#_bulbflipper+1)
   1560 B7                 5228 	or	a,a
   1561 28 03              5229 	jr	Z,00134$
   1563                    5230 00133$:
   1563 C3r1Cs16           5231 	jp	00110$
   1566                    5232 00134$:
                           5233 ;demo.c:643: cmd.size_x = 72;
   1566 11r32s41           5234 	ld	de,#_cmd + 8
   1569 EB                 5235 	ex	de,hl
   156A 36 48              5236 	ld	(hl),#0x48
   156C 23                 5237 	inc	hl
   156D 36 00              5238 	ld	(hl),#0x00
                           5239 ;demo.c:644: cmd.size_y = sy;
   156F 11r34s41           5240 	ld	de,#_cmd + 10
   1572 ED 4BrD0s41        5241 	ld	bc,(_sy)
   1576 6B                 5242 	ld	l,e
   1577 62                 5243 	ld	h,d
   1578 71                 5244 	ld	(hl),c
   1579 23                 5245 	inc	hl
   157A 70                 5246 	ld	(hl),b
                           5247 ;demo.c:645: cmd.data = 0;
   157B 3E 00              5248 	ld	a,#0x00
   157D 32r36s41           5249 	ld	(#_cmd + 12),a
                           5250 ;demo.c:646: cmd.argument = 0x04; // from 72xY to left
   1580 3E 04              5251 	ld	a,#0x04
   1582 32r37s41           5252 	ld	(#_cmd + 13),a
                           5253 ;demo.c:647: cmd.command = 0xe0; // vram to vram, y only
   1585 01r38s41           5254 	ld	bc,#_cmd + 14
   1588 3E E0              5255 	ld	a,#0xE0
   158A 02                 5256 	ld	(bc),a
                           5257 ;demo.c:648: cmd.source_x = 72;
   158B 21r2As41           5258 	ld	hl,#_cmd
   158E 36 48              5259 	ld	(hl),#0x48
   1590 23                 5260 	inc	hl
   1591 36 00              5261 	ld	(hl),#0x00
                           5262 ;demo.c:649: cmd.dest_x = 72;
   1593 21r2Es41           5263 	ld	hl, #_cmd + 4
   1596 36 48              5264 	ld	(hl),#0x48
   1598 23                 5265 	inc	hl
   1599 36 00              5266 	ld	(hl),#0x00
                           5267 ;demo.c:651: for (y = ender; y < enderend; y+=16) {
   159B ED 4BrCCs41        5268 	ld	bc,(_ender)
   159F DD 71 FC           5269 	ld	-4 (ix),c
   15A2 DD 70 FD           5270 	ld	-3 (ix),b
   15A5                    5271 00112$:
   15A5 DD 7E FC           5272 	ld	a,-4 (ix)
   15A8 DD 96 FE           5273 	sub	a,-2 (ix)
   15AB DD 7E FD           5274 	ld	a,-3 (ix)
   15AE DD 9E FF           5275 	sbc	a,-1 (ix)
   15B1 F2r03s16           5276 	jp	P,00115$
                           5277 ;demo.c:652: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   15B4 01r2Cs41           5278 	ld	bc,#_cmd + 2
   15B7 3ArC8s41           5279 	ld	a,(#_ff1+0)
   15BA DD 86 FC           5280 	add	a,-4 (ix)
   15BD 5F                 5281 	ld	e,a
   15BE 3ArC9s41           5282 	ld	a,(#_ff1+1)
   15C1 DD 8E FD           5283 	adc	a,-3 (ix)
   15C4 16 00              5284 	ld	d,#0x00
   15C6 21r00s00           5285 	ld	hl,#_sintab
   15C9 19                 5286 	add	hl,de
   15CA 5E                 5287 	ld	e,(hl)
   15CB CB 2B              5288 	sra	e
   15CD 7B                 5289 	ld	a,e
   15CE 17                 5290 	rla	
   15CF 9F                 5291 	sbc	a,a
   15D0 57                 5292 	ld	d,a
   15D1 21 40 01           5293 	ld	hl,#0x0140
   15D4 19                 5294 	add	hl,de
   15D5 EB                 5295 	ex	de,hl
   15D6 69                 5296 	ld	l,c
   15D7 60                 5297 	ld	h,b
   15D8 73                 5298 	ld	(hl),e
   15D9 23                 5299 	inc	hl
   15DA 72                 5300 	ld	(hl),d
                           5301 ;demo.c:653: cmd.dest_y = y;
   15DB 11r30s41           5302 	ld	de,#_cmd + 6
   15DE EB                 5303 	ex	de,hl
   15DF DD 7E FC           5304 	ld	a,-4 (ix)
   15E2 77                 5305 	ld	(hl),a
   15E3 23                 5306 	inc	hl
   15E4 DD 7E FD           5307 	ld	a,-3 (ix)
   15E7 77                 5308 	ld	(hl),a
                           5309 ;demo.c:654: vdp_copier(&cmd);
   15E8 21r2As41           5310 	ld	hl,#_cmd
   15EB E5                 5311 	push	hl
   15EC CDr00s00           5312 	call	_vdp_copier
   15EF F1                 5313 	pop	af
                           5314 ;demo.c:651: for (y = ender; y < enderend; y+=16) {
   15F0 DD 7E FC           5315 	ld	a,-4 (ix)
   15F3 C6 10              5316 	add	a,#0x10
   15F5 DD 77 FC           5317 	ld	-4 (ix),a
   15F8 DD 7E FD           5318 	ld	a,-3 (ix)
   15FB CE 00              5319 	adc	a,#0x00
   15FD DD 77 FD           5320 	ld	-3 (ix),a
   1600 C3rA5s15           5321 	jp	00112$
   1603                    5322 00115$:
                           5323 ;demo.c:656: ff1+=4;
   1603 21rC8s41           5324 	ld	hl,#_ff1
   1606 7E                 5325 	ld	a,(hl)
   1607 C6 04              5326 	add	a,#0x04
   1609 23                 5327 	inc	hl
   160A 2B                 5328 	dec	hl
   160B C5                 5329 	push	bc
   160C 4F                 5330 	ld	c, a
   160D 23                 5331 	inc	hl
   160E 7E                 5332 	ld	a, (hl)
   160F 47                 5333 	ld	b, a
   1610 79                 5334 	ld	a, c
   1611 2B                 5335 	dec	hl
   1612 77                 5336 	ld	(hl), a
   1613 78                 5337 	ld	a, b
   1614 C1                 5338 	pop	bc
   1615 CE 00              5339 	adc	a,#0x00
   1617 23                 5340 	inc	hl
   1618 77                 5341 	ld	(hl),a
   1619 C3rC1s16           5342 	jp	00111$
   161C                    5343 00110$:
                           5344 ;demo.c:660: cmd.size_x = 72;
   161C 11r32s41           5345 	ld	de,#_cmd + 8
   161F EB                 5346 	ex	de,hl
   1620 36 48              5347 	ld	(hl),#0x48
   1622 23                 5348 	inc	hl
   1623 36 00              5349 	ld	(hl),#0x00
                           5350 ;demo.c:661: cmd.size_y = sy;
   1625 01r34s41           5351 	ld	bc,#_cmd + 10
   1628 ED 5BrD0s41        5352 	ld	de,(_sy)
   162C 69                 5353 	ld	l,c
   162D 60                 5354 	ld	h,b
   162E 73                 5355 	ld	(hl),e
   162F 23                 5356 	inc	hl
   1630 72                 5357 	ld	(hl),d
                           5358 ;demo.c:662: cmd.data = 0;
   1631 11r36s41           5359 	ld	de,#_cmd + 12
   1634 3E 00              5360 	ld	a,#0x00
   1636 12                 5361 	ld	(de),a
                           5362 ;demo.c:663: cmd.argument = 0x00; // from 182xY to right
   1637 11r37s41           5363 	ld	de,#_cmd + 13
   163A 3E 00              5364 	ld	a,#0x00
   163C 12                 5365 	ld	(de),a
                           5366 ;demo.c:664: cmd.command = 0xe0; // vram to vram, y only
   163D 11r38s41           5367 	ld	de,#_cmd + 14
   1640 3E E0              5368 	ld	a,#0xE0
   1642 12                 5369 	ld	(de),a
                           5370 ;demo.c:665: cmd.source_x = 182;
   1643 21r2As41           5371 	ld	hl,#_cmd
   1646 36 B6              5372 	ld	(hl),#0xB6
   1648 23                 5373 	inc	hl
   1649 36 00              5374 	ld	(hl),#0x00
                           5375 ;demo.c:666: cmd.dest_x = 182;
   164B 11r2Es41           5376 	ld	de,#_cmd + 4
   164E 6B                 5377 	ld	l,e
   164F 62                 5378 	ld	h,d
   1650 36 B6              5379 	ld	(hl),#0xB6
   1652 23                 5380 	inc	hl
   1653 36 00              5381 	ld	(hl),#0x00
                           5382 ;demo.c:668: for (y = ender; y < enderend; y+=16) {
   1655 ED 4BrCCs41        5383 	ld	bc,(_ender)
   1659                    5384 00116$:
   1659 79                 5385 	ld	a,c
   165A DD 96 FE           5386 	sub	a,-2 (ix)
   165D 78                 5387 	ld	a,b
   165E DD 9E FF           5388 	sbc	a,-1 (ix)
   1661 F2rABs16           5389 	jp	P,00119$
                           5390 ;demo.c:669: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1664 21r2Cs41           5391 	ld	hl,#_cmd + 2
   1667 DD 75 FA           5392 	ld	-6 (ix),l
   166A DD 74 FB           5393 	ld	-5 (ix),h
   166D 3ArCAs41           5394 	ld	a,(#_ff2+0)
   1670 81                 5395 	add	a,c
   1671 5F                 5396 	ld	e,a
   1672 3ArCBs41           5397 	ld	a,(#_ff2+1)
   1675 88                 5398 	adc	a,b
   1676 16 00              5399 	ld	d,#0x00
   1678 21r00s00           5400 	ld	hl,#_sintab
   167B 19                 5401 	add	hl,de
   167C 5E                 5402 	ld	e,(hl)
   167D CB 2B              5403 	sra	e
   167F 7B                 5404 	ld	a,e
   1680 17                 5405 	rla	
   1681 9F                 5406 	sbc	a,a
   1682 57                 5407 	ld	d,a
   1683 21 40 01           5408 	ld	hl,#0x0140
   1686 19                 5409 	add	hl,de
   1687 EB                 5410 	ex	de,hl
   1688 DD 6E FA           5411 	ld	l,-6 (ix)
   168B DD 66 FB           5412 	ld	h,-5 (ix)
   168E 73                 5413 	ld	(hl),e
   168F 23                 5414 	inc	hl
   1690 72                 5415 	ld	(hl),d
                           5416 ;demo.c:670: cmd.dest_y = y;
   1691 11r30s41           5417 	ld	de,#_cmd + 6
   1694 EB                 5418 	ex	de,hl
   1695 71                 5419 	ld	(hl),c
   1696 23                 5420 	inc	hl
   1697 70                 5421 	ld	(hl),b
                           5422 ;demo.c:671: vdp_copier(&cmd);
   1698 C5                 5423 	push	bc
   1699 21r2As41           5424 	ld	hl,#_cmd
   169C E5                 5425 	push	hl
   169D CDr00s00           5426 	call	_vdp_copier
   16A0 F1                 5427 	pop	af
   16A1 C1                 5428 	pop	bc
                           5429 ;demo.c:668: for (y = ender; y < enderend; y+=16) {
   16A2 21 10 00           5430 	ld	hl,#0x0010
   16A5 09                 5431 	add	hl,bc
   16A6 4D                 5432 	ld	c,l
   16A7 44                 5433 	ld	b,h
   16A8 C3r59s16           5434 	jp	00116$
   16AB                    5435 00119$:
                           5436 ;demo.c:673: ff2+=4;
   16AB 21rCAs41           5437 	ld	hl,#_ff2
   16AE 7E                 5438 	ld	a,(hl)
   16AF C6 04              5439 	add	a,#0x04
   16B1 23                 5440 	inc	hl
   16B2 2B                 5441 	dec	hl
   16B3 C5                 5442 	push	bc
   16B4 4F                 5443 	ld	c, a
   16B5 23                 5444 	inc	hl
   16B6 7E                 5445 	ld	a, (hl)
   16B7 47                 5446 	ld	b, a
   16B8 79                 5447 	ld	a, c
   16B9 2B                 5448 	dec	hl
   16BA 77                 5449 	ld	(hl), a
   16BB 78                 5450 	ld	a, b
   16BC C1                 5451 	pop	bc
   16BD CE 00              5452 	adc	a,#0x00
   16BF 23                 5453 	inc	hl
   16C0 77                 5454 	ld	(hl),a
   16C1                    5455 00111$:
                           5456 ;demo.c:676: bulbflipper = -bulbflipper;
   16C1 AF                 5457 	xor	a,a
   16C2 FD 21rC6s41        5458 	ld	iy,#_bulbflipper
   16C6 3E 00              5459 	ld	a,#0x00
   16C8 FD 9E 00           5460 	sbc	a,0 (iy)
   16CB 21rC6s41           5461 	ld	hl,#_bulbflipper + 0
   16CE 77                 5462 	ld	(hl), a
   16CF FD 21rC6s41        5463 	ld	iy,#_bulbflipper
   16D3 3E 00              5464 	ld	a,#0x00
   16D5 FD 9E 01           5465 	sbc	a,1 (iy)
   16D8 21rC7s41           5466 	ld	hl,#_bulbflipper + 1
   16DB 77                 5467 	ld	(hl), a
   16DC DD F9              5468 	ld	sp,ix
   16DE DD E1              5469 	pop	ix
   16E0 C9                 5470 	ret
   16E1                    5471 _bulbs_end::
                           5472 ;demo.c:690: void animplay() {
                           5473 ;	---------------------------------
                           5474 ; Function animplay
                           5475 ; ---------------------------------
   16E1                    5476 _animplay_start::
   16E1                    5477 _animplay:
                           5478 ;demo.c:691: }
   16E1 C9                 5479 	ret
   16E2                    5480 _animplay_end::
                           5481 ;demo.c:704: void drawbox(uint8_t x, uint8_t y) {
                           5482 ;	---------------------------------
                           5483 ; Function drawbox
                           5484 ; ---------------------------------
   16E2                    5485 _drawbox_start::
   16E2                    5486 _drawbox:
   16E2 DD E5              5487 	push	ix
   16E4 DD 21 00 00        5488 	ld	ix,#0
   16E8 DD 39              5489 	add	ix,sp
                           5490 ;demo.c:705: cmd.source_x = boxes_x[boxi];
   16EA 21rF2s41           5491 	ld	hl,#_boxi
   16ED 3ErE3              5492 	ld	a,#<_boxes_x
   16EF 86                 5493 	add	a,(hl)
   16F0 4F                 5494 	ld	c,a
   16F1 3Es41              5495 	ld	a,#>_boxes_x
   16F3 CE 00              5496 	adc	a,#0x00
   16F5 47                 5497 	ld	b,a
   16F6 0A                 5498 	ld	a,(bc)
   16F7 4F                 5499 	ld	c,a
   16F8 06 00              5500 	ld	b,#0x00
   16FA 21r2As41           5501 	ld	hl,#_cmd
   16FD 71                 5502 	ld	(hl),c
   16FE 23                 5503 	inc	hl
   16FF 70                 5504 	ld	(hl),b
                           5505 ;demo.c:706: cmd.source_y = boxes_y[boxi];
   1700 01r2Cs41           5506 	ld	bc,#_cmd + 2
   1703 3ArF2s41           5507 	ld	a,(#_boxi+0)
   1706 87                 5508 	add	a,a
   1707 C6rE8              5509 	add	a,#<_boxes_y
   1709 6F                 5510 	ld	l,a
   170A 3Es41              5511 	ld	a,#>_boxes_y
   170C CE 00              5512 	adc	a,#0x00
   170E 67                 5513 	ld	h,a
   170F 5E                 5514 	ld	e,(hl)
   1710 23                 5515 	inc	hl
   1711 56                 5516 	ld	d,(hl)
   1712 69                 5517 	ld	l,c
   1713 60                 5518 	ld	h,b
   1714 73                 5519 	ld	(hl),e
   1715 23                 5520 	inc	hl
   1716 72                 5521 	ld	(hl),d
                           5522 ;demo.c:707: cmd.dest_x = x;
   1717 01r2Es41           5523 	ld	bc,#_cmd + 4
   171A DD 5E 04           5524 	ld	e,4 (ix)
   171D 16 00              5525 	ld	d,#0x00
   171F 69                 5526 	ld	l,c
   1720 60                 5527 	ld	h,b
   1721 73                 5528 	ld	(hl),e
   1722 23                 5529 	inc	hl
   1723 72                 5530 	ld	(hl),d
                           5531 ;demo.c:708: cmd.dest_y = y;
   1724 01r30s41           5532 	ld	bc,#_cmd + 6
   1727 DD 5E 05           5533 	ld	e,5 (ix)
   172A 16 00              5534 	ld	d,#0x00
   172C 69                 5535 	ld	l,c
   172D 60                 5536 	ld	h,b
   172E 73                 5537 	ld	(hl),e
   172F 23                 5538 	inc	hl
   1730 72                 5539 	ld	(hl),d
                           5540 ;demo.c:709: cmd.size_x = 36;
   1731 21r32s41           5541 	ld	hl, #_cmd + 8
   1734 36 24              5542 	ld	(hl),#0x24
   1736 23                 5543 	inc	hl
   1737 36 00              5544 	ld	(hl),#0x00
                           5545 ;demo.c:710: cmd.size_y = 36;
   1739 21r34s41           5546 	ld	hl, #_cmd + 10
   173C 36 24              5547 	ld	(hl),#0x24
   173E 23                 5548 	inc	hl
   173F 36 00              5549 	ld	(hl),#0x00
                           5550 ;demo.c:711: cmd.data = 0;
                           5551 ;demo.c:712: cmd.argument = 0x00;
   1741 3E 00              5552 	ld	a,#0x00
   1743 32r36s41           5553 	ld	(#_cmd + 12),a
   1746 32r37s41           5554 	ld	(#_cmd + 13),a
                           5555 ;demo.c:713: cmd.command = 0x98; // TIMP sprite
   1749 3E 98              5556 	ld	a,#0x98
   174B 32r38s41           5557 	ld	(#_cmd + 14),a
                           5558 ;demo.c:714: vdp_copier(&cmd);
   174E 21r2As41           5559 	ld	hl,#_cmd
   1751 E5                 5560 	push	hl
   1752 CDr00s00           5561 	call	_vdp_copier
   1755 F1                 5562 	pop	af
                           5563 ;demo.c:716: prevx = x;
   1756 DD 7E 04           5564 	ld	a,4 (ix)
   1759 21rDFs41           5565 	ld	hl,#_prevx + 0
   175C 77                 5566 	ld	(hl), a
   175D 21rE0s41           5567 	ld	hl,#_prevx + 1
   1760 36 00              5568 	ld	(hl), #0x00
                           5569 ;demo.c:717: prevy = y;
   1762 DD 7E 05           5570 	ld	a,5 (ix)
   1765 21rE1s41           5571 	ld	hl,#_prevy + 0
   1768 77                 5572 	ld	(hl), a
   1769 21rE2s41           5573 	ld	hl,#_prevy + 1
   176C 36 00              5574 	ld	(hl), #0x00
   176E DD E1              5575 	pop	ix
   1770 C9                 5576 	ret
   1771                    5577 _drawbox_end::
                           5578 ;demo.c:731: void boxes() {
                           5579 ;	---------------------------------
                           5580 ; Function boxes
                           5581 ; ---------------------------------
   1771                    5582 _boxes_start::
   1771                    5583 _boxes:
   1771 DD E5              5584 	push	ix
   1773 DD 21 00 00        5585 	ld	ix,#0
   1777 DD 39              5586 	add	ix,sp
   1779 F5                 5587 	push	af
                           5588 ;demo.c:735: if (bx < 0) return;
   177A FD 21rF3s41        5589 	ld	iy,#_bx
   177E FD CB 01 7E        5590 	bit	7,1 (iy)
   1782 C2rF1s1B           5591 	jp	NZ,00149$
                           5592 ;demo.c:737: if (bonc == 1) {
   1785 3ArFBs41           5593 	ld	a,(#_bonc+0)
   1788 D6 01              5594 	sub	a,#0x01
   178A 20 06              5595 	jr	NZ,00178$
   178C 3ArFCs41           5596 	ld	a,(#_bonc+1)
   178F B7                 5597 	or	a,a
   1790 28 02              5598 	jr	Z,00179$
   1792                    5599 00178$:
   1792 18 4D              5600 	jr	00104$
   1794                    5601 00179$:
                           5602 ;demo.c:739: cmd.source_x = 0;
   1794 21r2As41           5603 	ld	hl,#_cmd
   1797 36 00              5604 	ld	(hl),#0x00
   1799 23                 5605 	inc	hl
   179A 36 00              5606 	ld	(hl),#0x00
                           5607 ;demo.c:740: cmd.source_y = 256;
   179C 21r2Cs41           5608 	ld	hl, #_cmd + 2
   179F 36 00              5609 	ld	(hl),#0x00
   17A1 23                 5610 	inc	hl
   17A2 36 01              5611 	ld	(hl),#0x01
                           5612 ;demo.c:741: cmd.dest_x = pbx;
   17A4 01r2Es41           5613 	ld	bc,#_cmd + 4
   17A7 ED 5BrFDs41        5614 	ld	de,(_pbx)
   17AB 69                 5615 	ld	l,c
   17AC 60                 5616 	ld	h,b
   17AD 73                 5617 	ld	(hl),e
   17AE 23                 5618 	inc	hl
   17AF 72                 5619 	ld	(hl),d
                           5620 ;demo.c:742: cmd.dest_y = pbt;
   17B0 01r30s41           5621 	ld	bc,#_cmd + 6
   17B3 ED 5BrFFs41        5622 	ld	de,(_pbt)
   17B7 69                 5623 	ld	l,c
   17B8 60                 5624 	ld	h,b
   17B9 73                 5625 	ld	(hl),e
   17BA 23                 5626 	inc	hl
   17BB 72                 5627 	ld	(hl),d
                           5628 ;demo.c:743: cmd.size_x = 36;
   17BC 21r32s41           5629 	ld	hl, #_cmd + 8
   17BF 36 24              5630 	ld	(hl),#0x24
   17C1 23                 5631 	inc	hl
   17C2 36 00              5632 	ld	(hl),#0x00
                           5633 ;demo.c:744: cmd.size_y = 36;
   17C4 21r34s41           5634 	ld	hl, #_cmd + 10
   17C7 36 24              5635 	ld	(hl),#0x24
   17C9 23                 5636 	inc	hl
   17CA 36 00              5637 	ld	(hl),#0x00
                           5638 ;demo.c:745: cmd.data = 0;
                           5639 ;demo.c:746: cmd.argument = 0x00;
   17CC 3E 00              5640 	ld	a,#0x00
   17CE 32r36s41           5641 	ld	(#_cmd + 12),a
   17D1 32r37s41           5642 	ld	(#_cmd + 13),a
                           5643 ;demo.c:747: cmd.command = 0xD0; // HMMM
   17D4 3E D0              5644 	ld	a,#0xD0
   17D6 32r38s41           5645 	ld	(#_cmd + 14),a
                           5646 ;demo.c:748: vdp_copier(&cmd);
   17D9 21r2As41           5647 	ld	hl,#_cmd
   17DC E5                 5648 	push	hl
   17DD CDr00s00           5649 	call	_vdp_copier
   17E0 F1                 5650 	pop	af
   17E1                    5651 00104$:
                           5652 ;demo.c:751: if (boxes_init == 0) {
   17E1 AF                 5653 	xor	a,a
   17E2 21rDCs41           5654 	ld	hl,#_boxes_init + 0
   17E5 B6                 5655 	or	a,(hl)
   17E6 C2r41s19           5656 	jp	NZ,00106$
                           5657 ;demo.c:752: boxes_init = 1;
   17E9 FD 21rDCs41        5658 	ld	iy,#_boxes_init
   17ED FD 36 00 01        5659 	ld	0 (iy),#0x01
                           5660 ;demo.c:754: cmd.size_x = 8;
   17F1 21r32s41           5661 	ld	hl, #_cmd + 8
   17F4 36 08              5662 	ld	(hl),#0x08
   17F6 23                 5663 	inc	hl
   17F7 36 00              5664 	ld	(hl),#0x00
                           5665 ;demo.c:755: cmd.size_y = 212;
   17F9 21r34s41           5666 	ld	hl, #_cmd + 10
   17FC 36 D4              5667 	ld	(hl),#0xD4
   17FE 23                 5668 	inc	hl
   17FF 36 00              5669 	ld	(hl),#0x00
                           5670 ;demo.c:756: cmd.data = 0;
                           5671 ;demo.c:757: cmd.argument = 0x00; // from 70xY to left
   1801 3E 00              5672 	ld	a,#0x00
   1803 32r36s41           5673 	ld	(#_cmd + 12),a
   1806 32r37s41           5674 	ld	(#_cmd + 13),a
                           5675 ;demo.c:758: cmd.command = 0xd0; // vram to vram, y only
   1809 01r38s41           5676 	ld	bc,#_cmd + 14
   180C 3E D0              5677 	ld	a,#0xD0
   180E 02                 5678 	ld	(bc),a
                           5679 ;demo.c:759: cmd.source_x = 248;
   180F 21r2As41           5680 	ld	hl,#_cmd
   1812 36 F8              5681 	ld	(hl),#0xF8
   1814 23                 5682 	inc	hl
   1815 36 00              5683 	ld	(hl),#0x00
                           5684 ;demo.c:760: cmd.source_y = 0;
   1817 21r2Cs41           5685 	ld	hl, #_cmd + 2
   181A 36 00              5686 	ld	(hl),#0x00
   181C 23                 5687 	inc	hl
   181D 36 00              5688 	ld	(hl),#0x00
                           5689 ;demo.c:761: cmd.dest_y = 0;
   181F 01r30s41           5690 	ld	bc,#_cmd + 6
   1822 69                 5691 	ld	l,c
   1823 60                 5692 	ld	h,b
   1824 36 00              5693 	ld	(hl),#0x00
   1826 23                 5694 	inc	hl
   1827 36 00              5695 	ld	(hl),#0x00
                           5696 ;demo.c:763: for (x = 248; x >= 0; x-=8) {
   1829 DD 36 FE F8        5697 	ld	-2 (ix),#0xF8
   182D DD 36 FF 00        5698 	ld	-1 (ix),#0x00
   1831                    5699 00137$:
   1831 DD CB FF 7E        5700 	bit	7,-1 (ix)
   1835 C2rC0s18           5701 	jp	NZ,00140$
                           5702 ;demo.c:764: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1838 21rC2s41           5703 	ld	hl,#_ff + 0
   183B 5E                 5704 	ld	e,(hl)
   183C 21rC3s41           5705 	ld	hl,#_ff + 1
   183F 56                 5706 	ld	d,(hl)
   1840 CB 2A              5707 	sra	d
   1842 CB 1B              5708 	rr	e
   1844 CB 2A              5709 	sra	d
   1846 CB 1B              5710 	rr	e
   1848 21rC2s41           5711 	ld	hl,#_ff + 0
   184B 56                 5712 	ld	d,(hl)
   184C 21rC3s41           5713 	ld	hl,#_ff + 1
   184F 4E                 5714 	ld	c,(hl)
   1850 CB 29              5715 	sra	c
   1852 CB 1A              5716 	rr	d
   1854 CB 29              5717 	sra	c
   1856 CB 1A              5718 	rr	d
   1858 CB 29              5719 	sra	c
   185A CB 1A              5720 	rr	d
   185C 7B                 5721 	ld	a,e
   185D F5                 5722 	push	af
   185E 33                 5723 	inc	sp
   185F D5                 5724 	push	de
   1860 33                 5725 	inc	sp
   1861 53                 5726 	ld	d,e
   1862 1E 04              5727 	ld	e,#0x04
   1864 D5                 5728 	push	de
   1865 CDr00s00           5729 	call	_msx2_palette
   1868 F1                 5730 	pop	af
   1869 F1                 5731 	pop	af
                           5732 ;demo.c:765: ff+=2;
   186A 21rC2s41           5733 	ld	hl,#_ff
   186D 7E                 5734 	ld	a,(hl)
   186E C6 02              5735 	add	a,#0x02
   1870 23                 5736 	inc	hl
   1871 2B                 5737 	dec	hl
   1872 C5                 5738 	push	bc
   1873 4F                 5739 	ld	c, a
   1874 23                 5740 	inc	hl
   1875 7E                 5741 	ld	a, (hl)
   1876 47                 5742 	ld	b, a
   1877 79                 5743 	ld	a, c
   1878 2B                 5744 	dec	hl
   1879 77                 5745 	ld	(hl), a
   187A 78                 5746 	ld	a, b
   187B C1                 5747 	pop	bc
   187C CE 00              5748 	adc	a,#0x00
   187E 23                 5749 	inc	hl
   187F 77                 5750 	ld	(hl),a
                           5751 ;demo.c:766: waitVB();
   1880 76                 5752 		halt 
                           5753 ;demo.c:767: cmd.dest_x = x;
   1881 21r2Es41           5754 	ld	hl, #_cmd + 4
   1884 DD 7E FE           5755 	ld	a,-2 (ix)
   1887 77                 5756 	ld	(hl),a
   1888 23                 5757 	inc	hl
   1889 DD 7E FF           5758 	ld	a,-1 (ix)
   188C 77                 5759 	ld	(hl),a
                           5760 ;demo.c:768: cmd.dest_y = 0;
   188D 21r30s41           5761 	ld	hl, #_cmd + 6
   1890 36 00              5762 	ld	(hl),#0x00
   1892 23                 5763 	inc	hl
   1893 36 00              5764 	ld	(hl),#0x00
                           5765 ;demo.c:769: vdp_copier(&cmd);
   1895 21r2As41           5766 	ld	hl,#_cmd
   1898 E5                 5767 	push	hl
   1899 CDr00s00           5768 	call	_vdp_copier
   189C F1                 5769 	pop	af
                           5770 ;demo.c:770: cmd.dest_y = 256;
   189D 21r30s41           5771 	ld	hl, #_cmd + 6
   18A0 36 00              5772 	ld	(hl),#0x00
   18A2 23                 5773 	inc	hl
   18A3 36 01              5774 	ld	(hl),#0x01
                           5775 ;demo.c:771: vdp_copier(&cmd);
   18A5 21r2As41           5776 	ld	hl,#_cmd
   18A8 E5                 5777 	push	hl
   18A9 CDr00s00           5778 	call	_vdp_copier
   18AC F1                 5779 	pop	af
                           5780 ;demo.c:763: for (x = 248; x >= 0; x-=8) {
   18AD DD 7E FE           5781 	ld	a,-2 (ix)
   18B0 C6 F8              5782 	add	a,#0xF8
   18B2 DD 77 FE           5783 	ld	-2 (ix),a
   18B5 DD 7E FF           5784 	ld	a,-1 (ix)
   18B8 CE FF              5785 	adc	a,#0xFF
   18BA DD 77 FF           5786 	ld	-1 (ix),a
   18BD C3r31s18           5787 	jp	00137$
   18C0                    5788 00140$:
                           5789 ;demo.c:774: vdp_load_palette(boxes_palette);
   18C0 21rE6s40           5790 	ld	hl,#_boxes_palette
   18C3 E5                 5791 	push	hl
   18C4 CDr00s00           5792 	call	_vdp_load_palette
   18C7 F1                 5793 	pop	af
                           5794 ;demo.c:776: for (x=0;x < 8;x++) {
   18C8 DD 36 FE 00        5795 	ld	-2 (ix),#0x00
   18CC DD 36 FF 00        5796 	ld	-1 (ix),#0x00
   18D0                    5797 00145$:
   18D0 DD 7E FE           5798 	ld	a,-2 (ix)
   18D3 D6 08              5799 	sub	a,#0x08
   18D5 DD 7E FF           5800 	ld	a,-1 (ix)
   18D8 DE 00              5801 	sbc	a,#0x00
   18DA F2r34s19           5802 	jp	P,00148$
                           5803 ;demo.c:778: for (y=0;y < 9;y++) {
   18DD 11 00 00           5804 	ld	de,#0x0000
   18E0                    5805 00141$:
   18E0 7B                 5806 	ld	a,e
   18E1 D6 09              5807 	sub	a,#0x09
   18E3 7A                 5808 	ld	a,d
   18E4 DE 00              5809 	sbc	a,#0x00
   18E6 F2r29s19           5810 	jp	P,00147$
                           5811 ;demo.c:779: boxes_x[4] = 0;
   18E9 01rE7s41           5812 	ld	bc,#_boxes_x + 4
   18EC 3E 00              5813 	ld	a,#0x00
   18EE 02                 5814 	ld	(bc),a
                           5815 ;demo.c:780: boxes_y[4] = 768+2*36;
   18EF 21rF0s41           5816 	ld	hl, #_boxes_y + 8
   18F2 36 48              5817 	ld	(hl),#0x48
   18F4 23                 5818 	inc	hl
   18F5 36 03              5819 	ld	(hl),#0x03
                           5820 ;demo.c:781: boxi = 4;
   18F7 21rF2s41           5821 	ld	hl,#_boxi + 0
   18FA 36 04              5822 	ld	(hl), #0x04
                           5823 ;demo.c:782: drawbox((x*36),y*18);
   18FC 4B                 5824 	ld	c,e
   18FD D5                 5825 	push	de
   18FE 79                 5826 	ld	a,c
   18FF 5F                 5827 	ld	e,a
   1900 87                 5828 	add	a,a
   1901 87                 5829 	add	a,a
   1902 87                 5830 	add	a,a
   1903 83                 5831 	add	a,e
   1904 87                 5832 	add	a,a
   1905 D1                 5833 	pop	de
   1906 4F                 5834 	ld	c,a
   1907 DD 46 FE           5835 	ld	b,-2 (ix)
   190A D5                 5836 	push	de
   190B 78                 5837 	ld	a,b
   190C 5F                 5838 	ld	e,a
   190D 87                 5839 	add	a,a
   190E 87                 5840 	add	a,a
   190F 87                 5841 	add	a,a
   1910 83                 5842 	add	a,e
   1911 87                 5843 	add	a,a
   1912 87                 5844 	add	a,a
   1913 D1                 5845 	pop	de
   1914 47                 5846 	ld	b,a
   1915 D5                 5847 	push	de
   1916 79                 5848 	ld	a,c
   1917 F5                 5849 	push	af
   1918 33                 5850 	inc	sp
   1919 C5                 5851 	push	bc
   191A 33                 5852 	inc	sp
   191B CDrE2s16           5853 	call	_drawbox
   191E F1                 5854 	pop	af
   191F D1                 5855 	pop	de
                           5856 ;demo.c:783: boxi = 0;
   1920 21rF2s41           5857 	ld	hl,#_boxi + 0
   1923 36 00              5858 	ld	(hl), #0x00
                           5859 ;demo.c:778: for (y=0;y < 9;y++) {
   1925 13                 5860 	inc	de
   1926 C3rE0s18           5861 	jp	00141$
   1929                    5862 00147$:
                           5863 ;demo.c:776: for (x=0;x < 8;x++) {
   1929 DD 34 FE           5864 	inc	-2 (ix)
   192C 20 03              5865 	jr	NZ,00182$
   192E DD 34 FF           5866 	inc	-1 (ix)
   1931                    5867 00182$:
   1931 C3rD0s18           5868 	jp	00145$
   1934                    5869 00148$:
                           5870 ;demo.c:787: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,182);
   1934 21 08 B6           5871 	ld	hl,#0xB608
   1937 E5                 5872 	push	hl
   1938 21rF6s1B           5873 	ld	hl,#__str_8
   193B E5                 5874 	push	hl
   193C CDrC9s11           5875 	call	_drawsine
   193F F1                 5876 	pop	af
   1940 F1                 5877 	pop	af
   1941                    5878 00106$:
                           5879 ;demo.c:790: if (bt >= 80) bt+=8;
   1941 3ArF7s41           5880 	ld	a,(#_bt+0)
   1944 D6 50              5881 	sub	a,#0x50
   1946 3ArF8s41           5882 	ld	a,(#_bt+1)
   1949 DE 00              5883 	sbc	a,#0x00
   194B FAr64s19           5884 	jp	M,00108$
   194E 21rF7s41           5885 	ld	hl,#_bt
   1951 7E                 5886 	ld	a,(hl)
   1952 C6 08              5887 	add	a,#0x08
   1954 23                 5888 	inc	hl
   1955 2B                 5889 	dec	hl
   1956 C5                 5890 	push	bc
   1957 4F                 5891 	ld	c, a
   1958 23                 5892 	inc	hl
   1959 7E                 5893 	ld	a, (hl)
   195A 47                 5894 	ld	b, a
   195B 79                 5895 	ld	a, c
   195C 2B                 5896 	dec	hl
   195D 77                 5897 	ld	(hl), a
   195E 78                 5898 	ld	a, b
   195F C1                 5899 	pop	bc
   1960 CE 00              5900 	adc	a,#0x00
   1962 23                 5901 	inc	hl
   1963 77                 5902 	ld	(hl),a
   1964                    5903 00108$:
                           5904 ;demo.c:791: if (bt < 80 && bt >= 60) bt+=7;
   1964 3ArF7s41           5905 	ld	a,(#_bt+0)
   1967 D6 50              5906 	sub	a,#0x50
   1969 3ArF8s41           5907 	ld	a,(#_bt+1)
   196C DE 00              5908 	sbc	a,#0x00
   196E F2r94s19           5909 	jp	P,00110$
   1971 3ArF7s41           5910 	ld	a,(#_bt+0)
   1974 D6 3C              5911 	sub	a,#0x3C
   1976 3ArF8s41           5912 	ld	a,(#_bt+1)
   1979 DE 00              5913 	sbc	a,#0x00
   197B FAr94s19           5914 	jp	M,00110$
   197E 21rF7s41           5915 	ld	hl,#_bt
   1981 7E                 5916 	ld	a,(hl)
   1982 C6 07              5917 	add	a,#0x07
   1984 23                 5918 	inc	hl
   1985 2B                 5919 	dec	hl
   1986 C5                 5920 	push	bc
   1987 4F                 5921 	ld	c, a
   1988 23                 5922 	inc	hl
   1989 7E                 5923 	ld	a, (hl)
   198A 47                 5924 	ld	b, a
   198B 79                 5925 	ld	a, c
   198C 2B                 5926 	dec	hl
   198D 77                 5927 	ld	(hl), a
   198E 78                 5928 	ld	a, b
   198F C1                 5929 	pop	bc
   1990 CE 00              5930 	adc	a,#0x00
   1992 23                 5931 	inc	hl
   1993 77                 5932 	ld	(hl),a
   1994                    5933 00110$:
                           5934 ;demo.c:792: if (bt < 60 && bt >= 40) bt+=6;
   1994 3ArF7s41           5935 	ld	a,(#_bt+0)
   1997 D6 3C              5936 	sub	a,#0x3C
   1999 3ArF8s41           5937 	ld	a,(#_bt+1)
   199C DE 00              5938 	sbc	a,#0x00
   199E F2rC4s19           5939 	jp	P,00113$
   19A1 3ArF7s41           5940 	ld	a,(#_bt+0)
   19A4 D6 28              5941 	sub	a,#0x28
   19A6 3ArF8s41           5942 	ld	a,(#_bt+1)
   19A9 DE 00              5943 	sbc	a,#0x00
   19AB FArC4s19           5944 	jp	M,00113$
   19AE 21rF7s41           5945 	ld	hl,#_bt
   19B1 7E                 5946 	ld	a,(hl)
   19B2 C6 06              5947 	add	a,#0x06
   19B4 23                 5948 	inc	hl
   19B5 2B                 5949 	dec	hl
   19B6 C5                 5950 	push	bc
   19B7 4F                 5951 	ld	c, a
   19B8 23                 5952 	inc	hl
   19B9 7E                 5953 	ld	a, (hl)
   19BA 47                 5954 	ld	b, a
   19BB 79                 5955 	ld	a, c
   19BC 2B                 5956 	dec	hl
   19BD 77                 5957 	ld	(hl), a
   19BE 78                 5958 	ld	a, b
   19BF C1                 5959 	pop	bc
   19C0 CE 00              5960 	adc	a,#0x00
   19C2 23                 5961 	inc	hl
   19C3 77                 5962 	ld	(hl),a
   19C4                    5963 00113$:
                           5964 ;demo.c:793: if (bt < 40 && bt >= 10) bt+=5;
   19C4 3ArF7s41           5965 	ld	a,(#_bt+0)
   19C7 D6 28              5966 	sub	a,#0x28
   19C9 3ArF8s41           5967 	ld	a,(#_bt+1)
   19CC DE 00              5968 	sbc	a,#0x00
   19CE F2rF4s19           5969 	jp	P,00116$
   19D1 3ArF7s41           5970 	ld	a,(#_bt+0)
   19D4 D6 0A              5971 	sub	a,#0x0A
   19D6 3ArF8s41           5972 	ld	a,(#_bt+1)
   19D9 DE 00              5973 	sbc	a,#0x00
   19DB FArF4s19           5974 	jp	M,00116$
   19DE 21rF7s41           5975 	ld	hl,#_bt
   19E1 7E                 5976 	ld	a,(hl)
   19E2 C6 05              5977 	add	a,#0x05
   19E4 23                 5978 	inc	hl
   19E5 2B                 5979 	dec	hl
   19E6 C5                 5980 	push	bc
   19E7 4F                 5981 	ld	c, a
   19E8 23                 5982 	inc	hl
   19E9 7E                 5983 	ld	a, (hl)
   19EA 47                 5984 	ld	b, a
   19EB 79                 5985 	ld	a, c
   19EC 2B                 5986 	dec	hl
   19ED 77                 5987 	ld	(hl), a
   19EE 78                 5988 	ld	a, b
   19EF C1                 5989 	pop	bc
   19F0 CE 00              5990 	adc	a,#0x00
   19F2 23                 5991 	inc	hl
   19F3 77                 5992 	ld	(hl),a
   19F4                    5993 00116$:
                           5994 ;demo.c:794: if (bt < 10 ) bt+=4;
   19F4 3ArF7s41           5995 	ld	a,(#_bt+0)
   19F7 D6 0A              5996 	sub	a,#0x0A
   19F9 3ArF8s41           5997 	ld	a,(#_bt+1)
   19FC DE 00              5998 	sbc	a,#0x00
   19FE F2r17s1A           5999 	jp	P,00119$
   1A01 21rF7s41           6000 	ld	hl,#_bt
   1A04 7E                 6001 	ld	a,(hl)
   1A05 C6 04              6002 	add	a,#0x04
   1A07 23                 6003 	inc	hl
   1A08 2B                 6004 	dec	hl
   1A09 C5                 6005 	push	bc
   1A0A 4F                 6006 	ld	c, a
   1A0B 23                 6007 	inc	hl
   1A0C 7E                 6008 	ld	a, (hl)
   1A0D 47                 6009 	ld	b, a
   1A0E 79                 6010 	ld	a, c
   1A0F 2B                 6011 	dec	hl
   1A10 77                 6012 	ld	(hl), a
   1A11 78                 6013 	ld	a, b
   1A12 C1                 6014 	pop	bc
   1A13 CE 00              6015 	adc	a,#0x00
   1A15 23                 6016 	inc	hl
   1A16 77                 6017 	ld	(hl),a
   1A17                    6018 00119$:
                           6019 ;demo.c:797: cmd.source_x = bx;
   1A17 ED 4BrF3s41        6020 	ld	bc,(_bx)
   1A1B 21r2As41           6021 	ld	hl,#_cmd
   1A1E 71                 6022 	ld	(hl),c
   1A1F 23                 6023 	inc	hl
   1A20 70                 6024 	ld	(hl),b
                           6025 ;demo.c:798: cmd.source_y = bt;
   1A21 01r2Cs41           6026 	ld	bc,#_cmd + 2
   1A24 ED 5BrF7s41        6027 	ld	de,(_bt)
   1A28 69                 6028 	ld	l,c
   1A29 60                 6029 	ld	h,b
   1A2A 73                 6030 	ld	(hl),e
   1A2B 23                 6031 	inc	hl
   1A2C 72                 6032 	ld	(hl),d
                           6033 ;demo.c:799: cmd.dest_x = 0;
   1A2D 21r2Es41           6034 	ld	hl, #_cmd + 4
   1A30 36 00              6035 	ld	(hl),#0x00
   1A32 23                 6036 	inc	hl
   1A33 36 00              6037 	ld	(hl),#0x00
                           6038 ;demo.c:800: cmd.dest_y = 256;
   1A35 21r30s41           6039 	ld	hl, #_cmd + 6
   1A38 36 00              6040 	ld	(hl),#0x00
   1A3A 23                 6041 	inc	hl
   1A3B 36 01              6042 	ld	(hl),#0x01
                           6043 ;demo.c:801: cmd.size_x = 36;
   1A3D 21r32s41           6044 	ld	hl, #_cmd + 8
   1A40 36 24              6045 	ld	(hl),#0x24
   1A42 23                 6046 	inc	hl
   1A43 36 00              6047 	ld	(hl),#0x00
                           6048 ;demo.c:802: cmd.size_y = 36;
   1A45 21r34s41           6049 	ld	hl, #_cmd + 10
   1A48 36 24              6050 	ld	(hl),#0x24
   1A4A 23                 6051 	inc	hl
   1A4B 36 00              6052 	ld	(hl),#0x00
                           6053 ;demo.c:803: cmd.data = 0;
                           6054 ;demo.c:804: cmd.argument = 0x00;
   1A4D 3E 00              6055 	ld	a,#0x00
   1A4F 32r36s41           6056 	ld	(#_cmd + 12),a
   1A52 32r37s41           6057 	ld	(#_cmd + 13),a
                           6058 ;demo.c:805: cmd.command = 0xD0; // HMMM
   1A55 3E D0              6059 	ld	a,#0xD0
   1A57 32r38s41           6060 	ld	(#_cmd + 14),a
                           6061 ;demo.c:806: vdp_copier(&cmd);
   1A5A 21r2As41           6062 	ld	hl,#_cmd
   1A5D E5                 6063 	push	hl
   1A5E CDr00s00           6064 	call	_vdp_copier
   1A61 F1                 6065 	pop	af
                           6066 ;demo.c:808: pbx = bx;
   1A62 2ArF3s41           6067 	ld	hl,(_bx)
   1A65 FD 21rFDs41        6068 	ld	iy,#_pbx
   1A69 FD 75 00           6069 	ld	0 (iy),l
   1A6C FD 21rFDs41        6070 	ld	iy,#_pbx
   1A70 FD 74 01           6071 	ld	1 (iy),h
                           6072 ;demo.c:809: pbt = bt;
   1A73 2ArF7s41           6073 	ld	hl,(_bt)
   1A76 FD 21rFFs41        6074 	ld	iy,#_pbt
   1A7A FD 75 00           6075 	ld	0 (iy),l
   1A7D FD 21rFFs41        6076 	ld	iy,#_pbt
   1A81 FD 74 01           6077 	ld	1 (iy),h
                           6078 ;demo.c:814: bonc = 1;
   1A84 21rFBs41           6079 	ld	hl,#_bonc + 0
   1A87 36 01              6080 	ld	(hl), #0x01
   1A89 21rFCs41           6081 	ld	hl,#_bonc + 1
   1A8C 36 00              6082 	ld	(hl), #0x00
                           6083 ;demo.c:815: if (bt > by) {
   1A8E 21rF5s41           6084 	ld	hl,#_by
   1A91 7E                 6085 	ld	a,(hl)
   1A92 FD 21rF7s41        6086 	ld	iy,#_bt
   1A96 FD 96 00           6087 	sub	a,0 (iy)
   1A99 23                 6088 	inc	hl
   1A9A 7E                 6089 	ld	a,(hl)
   1A9B FD 21rF7s41        6090 	ld	iy,#_bt
   1A9F FD 9E 01           6091 	sbc	a,1 (iy)
   1AA2 F2rE0s1B           6092 	jp	P,00135$
                           6093 ;demo.c:816: bt = by;
   1AA5 2ArF5s41           6094 	ld	hl,(_by)
   1AA8 FD 21rF7s41        6095 	ld	iy,#_bt
   1AAC FD 75 00           6096 	ld	0 (iy),l
   1AAF FD 21rF7s41        6097 	ld	iy,#_bt
   1AB3 FD 74 01           6098 	ld	1 (iy),h
                           6099 ;demo.c:817: drawbox(bx,bt);
   1AB6 21rF7s41           6100 	ld	hl,#_bt + 0
   1AB9 4E                 6101 	ld	c,(hl)
   1ABA 21rF3s41           6102 	ld	hl,#_bx + 0
   1ABD 46                 6103 	ld	b,(hl)
   1ABE 79                 6104 	ld	a,c
   1ABF F5                 6105 	push	af
   1AC0 33                 6106 	inc	sp
   1AC1 C5                 6107 	push	bc
   1AC2 33                 6108 	inc	sp
   1AC3 CDrE2s16           6109 	call	_drawbox
   1AC6 F1                 6110 	pop	af
                           6111 ;demo.c:818: bt = 0;
   1AC7 21rF7s41           6112 	ld	hl,#_bt + 0
   1ACA 36 00              6113 	ld	(hl), #0x00
   1ACC 21rF8s41           6114 	ld	hl,#_bt + 1
   1ACF 36 00              6115 	ld	(hl), #0x00
                           6116 ;demo.c:819: if (by > 48) {
   1AD1 3E 30              6117 	ld	a,#0x30
   1AD3 FD 21rF5s41        6118 	ld	iy,#_by
   1AD7 FD 96 00           6119 	sub	a,0 (iy)
   1ADA 3E 00              6120 	ld	a,#0x00
   1ADC FD 21rF5s41        6121 	ld	iy,#_by
   1AE0 FD 9E 01           6122 	sbc	a,1 (iy)
   1AE3 F2r3Bs1B           6123 	jp	P,00123$
                           6124 ;demo.c:820: bonc = 0;
   1AE6 21rFBs41           6125 	ld	hl,#_bonc + 0
   1AE9 36 00              6126 	ld	(hl), #0x00
   1AEB 21rFCs41           6127 	ld	hl,#_bonc + 1
   1AEE 36 00              6128 	ld	(hl), #0x00
                           6129 ;demo.c:821: by-=16;
   1AF0 21rF5s41           6130 	ld	hl,#_by
   1AF3 7E                 6131 	ld	a,(hl)
   1AF4 C6 F0              6132 	add	a,#0xF0
   1AF6 77                 6133 	ld	(hl),a
   1AF7 23                 6134 	inc	hl
   1AF8 7E                 6135 	ld	a,(hl)
   1AF9 CE FF              6136 	adc	a,#0xFF
   1AFB 77                 6137 	ld	(hl),a
                           6138 ;demo.c:822: prevbox_of = boxes_of[boxi];
   1AFC 3ArF2s41           6139 	ld	a,(#_boxi+0)
   1AFF 87                 6140 	add	a,a
   1B00 C6r01              6141 	add	a,#<_boxes_of
   1B02 6F                 6142 	ld	l,a
   1B03 3Es42              6143 	ld	a,#>_boxes_of
   1B05 CE 00              6144 	adc	a,#0x00
   1B07 67                 6145 	ld	h,a
   1B08 4E                 6146 	ld	c,(hl)
   1B09 23                 6147 	inc	hl
   1B0A 21r0Bs42           6148 	ld	hl,#_prevbox_of + 0
   1B0D 71                 6149 	ld	(hl), c
                           6150 ;demo.c:823: by+=prevbox_of;
   1B0E 21r0Bs42           6151 	ld	hl,#_prevbox_of + 0
   1B11 4E                 6152 	ld	c,(hl)
   1B12 06 00              6153 	ld	b,#0x00
   1B14 21rF5s41           6154 	ld	hl,#_by
   1B17 7E                 6155 	ld	a,(hl)
   1B18 81                 6156 	add	a,c
   1B19 23                 6157 	inc	hl
   1B1A 2B                 6158 	dec	hl
   1B1B C5                 6159 	push	bc
   1B1C 4F                 6160 	ld	c, a
   1B1D 23                 6161 	inc	hl
   1B1E 7E                 6162 	ld	a, (hl)
   1B1F 47                 6163 	ld	b, a
   1B20 79                 6164 	ld	a, c
   1B21 2B                 6165 	dec	hl
   1B22 77                 6166 	ld	(hl), a
   1B23 78                 6167 	ld	a, b
   1B24 C1                 6168 	pop	bc
   1B25 88                 6169 	adc	a,b
   1B26 23                 6170 	inc	hl
   1B27 77                 6171 	ld	(hl),a
                           6172 ;demo.c:824: boxi++;
   1B28 FD 21rF2s41        6173 	ld	iy,#_boxi
   1B2C FD 34 00           6174 	inc	0 (iy)
                           6175 ;demo.c:825: if (boxi >= 4) boxi = 0;
   1B2F 3ArF2s41           6176 	ld	a,(#_boxi+0)
   1B32 D6 04              6177 	sub	a,#0x04
   1B34 38 05              6178 	jr	C,00123$
   1B36 21rF2s41           6179 	ld	hl,#_boxi + 0
   1B39 36 00              6180 	ld	(hl), #0x00
   1B3B                    6181 00123$:
                           6182 ;demo.c:828: if (by <= 48) {
   1B3B 3E 30              6183 	ld	a,#0x30
   1B3D FD 21rF5s41        6184 	ld	iy,#_by
   1B41 FD 96 00           6185 	sub	a,0 (iy)
   1B44 3E 00              6186 	ld	a,#0x00
   1B46 FD 21rF5s41        6187 	ld	iy,#_by
   1B4A FD 9E 01           6188 	sbc	a,1 (iy)
   1B4D FArF1s1B           6189 	jp	M,00149$
                           6190 ;demo.c:829: bx-=16;
   1B50 21rF3s41           6191 	ld	hl,#_bx
   1B53 7E                 6192 	ld	a,(hl)
   1B54 C6 F0              6193 	add	a,#0xF0
   1B56 77                 6194 	ld	(hl),a
   1B57 23                 6195 	inc	hl
   1B58 7E                 6196 	ld	a,(hl)
   1B59 CE FF              6197 	adc	a,#0xFF
   1B5B 77                 6198 	ld	(hl),a
                           6199 ;demo.c:831: if (bx>128)bo+=8;
   1B5C 3E 80              6200 	ld	a,#0x80
   1B5E FD 21rF3s41        6201 	ld	iy,#_bx
   1B62 FD 96 00           6202 	sub	a,0 (iy)
   1B65 3E 00              6203 	ld	a,#0x00
   1B67 FD 21rF3s41        6204 	ld	iy,#_bx
   1B6B FD 9E 01           6205 	sbc	a,1 (iy)
   1B6E 07                 6206 	rlca
   1B6F E6 01              6207 	and	a,#0x01
   1B71 4F                 6208 	ld	c,a
   1B72 B7                 6209 	or	a,a
   1B73 28 18              6210 	jr	Z,00125$
   1B75 21rF9s41           6211 	ld	hl,#_bo
   1B78 7E                 6212 	ld	a,(hl)
   1B79 C6 08              6213 	add	a,#0x08
   1B7B 23                 6214 	inc	hl
   1B7C 2B                 6215 	dec	hl
   1B7D C5                 6216 	push	bc
   1B7E 4F                 6217 	ld	c, a
   1B7F 23                 6218 	inc	hl
   1B80 7E                 6219 	ld	a, (hl)
   1B81 47                 6220 	ld	b, a
   1B82 79                 6221 	ld	a, c
   1B83 2B                 6222 	dec	hl
   1B84 77                 6223 	ld	(hl), a
   1B85 78                 6224 	ld	a, b
   1B86 C1                 6225 	pop	bc
   1B87 CE 00              6226 	adc	a,#0x00
   1B89 23                 6227 	inc	hl
   1B8A 77                 6228 	ld	(hl),a
   1B8B 18 0C              6229 	jr	00126$
   1B8D                    6230 00125$:
                           6231 ;demo.c:832: else bo-=8;
   1B8D 21rF9s41           6232 	ld	hl,#_bo
   1B90 7E                 6233 	ld	a,(hl)
   1B91 C6 F8              6234 	add	a,#0xF8
   1B93 77                 6235 	ld	(hl),a
   1B94 23                 6236 	inc	hl
   1B95 7E                 6237 	ld	a,(hl)
   1B96 CE FF              6238 	adc	a,#0xFF
   1B98 77                 6239 	ld	(hl),a
   1B99                    6240 00126$:
                           6241 ;demo.c:833: if (bo > 192) bo = 0;
   1B99 3E C0              6242 	ld	a,#0xC0
   1B9B FD 21rF9s41        6243 	ld	iy,#_bo
   1B9F FD 96 00           6244 	sub	a,0 (iy)
   1BA2 3E 00              6245 	ld	a,#0x00
   1BA4 FD 21rF9s41        6246 	ld	iy,#_bo
   1BA8 FD 9E 01           6247 	sbc	a,1 (iy)
   1BAB F2rB8s1B           6248 	jp	P,00128$
   1BAE 21rF9s41           6249 	ld	hl,#_bo + 0
   1BB1 36 00              6250 	ld	(hl), #0x00
   1BB3 21rFAs41           6251 	ld	hl,#_bo + 1
   1BB6 36 00              6252 	ld	(hl), #0x00
   1BB8                    6253 00128$:
                           6254 ;demo.c:834: if (bx>128)by=84+bo;
   1BB8 AF                 6255 	xor	a,a
   1BB9 B1                 6256 	or	a,c
   1BBA 28 12              6257 	jr	Z,00130$
   1BBC 21rF5s41           6258 	ld	hl,#_by
   1BBF 3ArF9s41           6259 	ld	a,(#_bo+0)
   1BC2 C6 54              6260 	add	a,#0x54
   1BC4 77                 6261 	ld	(hl),a
   1BC5 3ArFAs41           6262 	ld	a,(#_bo+1)
   1BC8 CE 00              6263 	adc	a,#0x00
   1BCA 23                 6264 	inc	hl
   1BCB 77                 6265 	ld	(hl),a
   1BCC 18 23              6266 	jr	00149$
   1BCE                    6267 00130$:
                           6268 ;demo.c:835: else by=36+36+84+bo;
   1BCE 21rF5s41           6269 	ld	hl,#_by
   1BD1 3ArF9s41           6270 	ld	a,(#_bo+0)
   1BD4 C6 9C              6271 	add	a,#0x9C
   1BD6 77                 6272 	ld	(hl),a
   1BD7 3ArFAs41           6273 	ld	a,(#_bo+1)
   1BDA CE 00              6274 	adc	a,#0x00
   1BDC 23                 6275 	inc	hl
   1BDD 77                 6276 	ld	(hl),a
   1BDE 18 11              6277 	jr	00149$
   1BE0                    6278 00135$:
                           6279 ;demo.c:838: drawbox(bx,bt);
   1BE0 21rF7s41           6280 	ld	hl,#_bt + 0
   1BE3 4E                 6281 	ld	c,(hl)
   1BE4 21rF3s41           6282 	ld	hl,#_bx + 0
   1BE7 46                 6283 	ld	b,(hl)
   1BE8 79                 6284 	ld	a,c
   1BE9 F5                 6285 	push	af
   1BEA 33                 6286 	inc	sp
   1BEB C5                 6287 	push	bc
   1BEC 33                 6288 	inc	sp
   1BED CDrE2s16           6289 	call	_drawbox
   1BF0 F1                 6290 	pop	af
   1BF1                    6291 00149$:
   1BF1 DD F9              6292 	ld	sp,ix
   1BF3 DD E1              6293 	pop	ix
   1BF5 C9                 6294 	ret
   1BF6                    6295 _boxes_end::
   1BF6                    6296 __str_8:
   1BF6 4C 45 54 20 55 53  6297 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1C21 00                 6298 	.db 0x00
                           6299 ;demo.c:849: void thewave() {
                           6300 ;	---------------------------------
                           6301 ; Function thewave
                           6302 ; ---------------------------------
   1C22                    6303 _thewave_start::
   1C22                    6304 _thewave:
   1C22 DD E5              6305 	push	ix
   1C24 DD 21 00 00        6306 	ld	ix,#0
   1C28 DD 39              6307 	add	ix,sp
   1C2A 21 F5 FF           6308 	ld	hl,#-11
   1C2D 39                 6309 	add	hl,sp
   1C2E F9                 6310 	ld	sp,hl
                           6311 ;demo.c:858: if (initwave == 0) {
   1C2F AF                 6312 	xor	a,a
   1C30 21r0Cs42           6313 	ld	hl,#_initwave + 0
   1C33 B6                 6314 	or	a,(hl)
   1C34 C2rBCs1E           6315 	jp	NZ,00113$
                           6316 ;demo.c:859: initwave = 1;
   1C37 21r0Cs42           6317 	ld	hl,#_initwave + 0
   1C3A 36 01              6318 	ld	(hl), #0x01
                           6319 ;demo.c:860: for (y = 0; y < 212; y++) {
   1C3C DD 36 FE 00        6320 	ld	-2 (ix),#0x00
   1C40                    6321 00128$:
   1C40 DD 7E FE           6322 	ld	a,-2 (ix)
   1C43 D6 D4              6323 	sub	a,#0xD4
   1C45 D2rB8s1C           6324 	jp	NC,00131$
                           6325 ;demo.c:861: cmd.size_x = 256;
   1C48 11r32s41           6326 	ld	de,#_cmd + 8
   1C4B EB                 6327 	ex	de,hl
   1C4C 36 00              6328 	ld	(hl),#0x00
   1C4E 23                 6329 	inc	hl
   1C4F 36 01              6330 	ld	(hl),#0x01
                           6331 ;demo.c:862: cmd.size_y = 2;
   1C51 11r34s41           6332 	ld	de,#_cmd + 10
   1C54 EB                 6333 	ex	de,hl
   1C55 36 02              6334 	ld	(hl),#0x02
   1C57 23                 6335 	inc	hl
   1C58 36 00              6336 	ld	(hl),#0x00
                           6337 ;demo.c:863: cmd.data = 0;
   1C5A 11r36s41           6338 	ld	de,#_cmd + 12
   1C5D 3E 00              6339 	ld	a,#0x00
   1C5F 12                 6340 	ld	(de),a
                           6341 ;demo.c:864: cmd.argument = 0x00; // from 70xY to left
   1C60 11r37s41           6342 	ld	de,#_cmd + 13
   1C63 3E 00              6343 	ld	a,#0x00
   1C65 12                 6344 	ld	(de),a
                           6345 ;demo.c:865: cmd.command = 0xd0; // vram to vram, y only
   1C66 11r38s41           6346 	ld	de,#_cmd + 14
   1C69 3E D0              6347 	ld	a,#0xD0
   1C6B 12                 6348 	ld	(de),a
                           6349 ;demo.c:867: cmd.source_x = 0;
   1C6C 21r2As41           6350 	ld	hl,#_cmd
   1C6F 36 00              6351 	ld	(hl),#0x00
   1C71 23                 6352 	inc	hl
   1C72 36 00              6353 	ld	(hl),#0x00
                           6354 ;demo.c:868: cmd.source_y = 0;
   1C74 11r2Cs41           6355 	ld	de,#_cmd + 2
   1C77 EB                 6356 	ex	de,hl
   1C78 36 00              6357 	ld	(hl),#0x00
   1C7A 23                 6358 	inc	hl
   1C7B 36 00              6359 	ld	(hl),#0x00
                           6360 ;demo.c:869: cmd.dest_x = 0;
   1C7D 11r2Es41           6361 	ld	de,#_cmd + 4
   1C80 EB                 6362 	ex	de,hl
   1C81 36 00              6363 	ld	(hl),#0x00
   1C83 23                 6364 	inc	hl
   1C84 36 00              6365 	ld	(hl),#0x00
                           6366 ;demo.c:870: cmd.dest_y = 0+y;
   1C86 11r30s41           6367 	ld	de,#_cmd + 6
   1C89 DD 4E FE           6368 	ld	c,-2 (ix)
   1C8C 06 00              6369 	ld	b,#0x00
   1C8E EB                 6370 	ex	de,hl
   1C8F 71                 6371 	ld	(hl),c
   1C90 23                 6372 	inc	hl
   1C91 70                 6373 	ld	(hl),b
                           6374 ;demo.c:871: vdp_copier(&cmd);
   1C92 C5                 6375 	push	bc
   1C93 21r2As41           6376 	ld	hl,#_cmd
   1C96 E5                 6377 	push	hl
   1C97 CDr00s00           6378 	call	_vdp_copier
   1C9A F1                 6379 	pop	af
   1C9B C1                 6380 	pop	bc
                           6381 ;demo.c:872: cmd.dest_y = 256+y;
   1C9C 11r30s41           6382 	ld	de,#_cmd + 6
   1C9F 21 00 01           6383 	ld	hl,#0x0100
   1CA2 09                 6384 	add	hl,bc
   1CA3 4D                 6385 	ld	c,l
   1CA4 44                 6386 	ld	b,h
   1CA5 EB                 6387 	ex	de,hl
   1CA6 71                 6388 	ld	(hl),c
   1CA7 23                 6389 	inc	hl
   1CA8 70                 6390 	ld	(hl),b
                           6391 ;demo.c:873: vdp_copier(&cmd);
   1CA9 21r2As41           6392 	ld	hl,#_cmd
   1CAC E5                 6393 	push	hl
   1CAD CDr00s00           6394 	call	_vdp_copier
   1CB0 F1                 6395 	pop	af
                           6396 ;demo.c:874: waitVB();
   1CB1 76                 6397 		halt 
                           6398 ;demo.c:860: for (y = 0; y < 212; y++) {
   1CB2 DD 34 FE           6399 	inc	-2 (ix)
   1CB5 C3r40s1C           6400 	jp	00128$
   1CB8                    6401 00131$:
                           6402 ;demo.c:878: for (y = 9; y < 15; y+=1) {
   1CB8 DD 36 FE 09        6403 	ld	-2 (ix),#0x09
   1CBC                    6404 00132$:
   1CBC DD 7E FE           6405 	ld	a,-2 (ix)
   1CBF D6 0F              6406 	sub	a,#0x0F
   1CC1 D2rBCs1E           6407 	jp	NC,00113$
                           6408 ;demo.c:879: for (x = 0; x < 21; x+=1) {
   1CC4 DD 7E FE           6409 	ld	a,-2 (ix)
   1CC7 87                 6410 	add	a,a
   1CC8 DD 77 F7           6411 	ld	-9 (ix),a
   1CCB DD 36 FF 00        6412 	ld	-1 (ix),#0x00
   1CCF                    6413 00108$:
   1CCF DD 7E FF           6414 	ld	a,-1 (ix)
   1CD2 D6 15              6415 	sub	a,#0x15
   1CD4 D2rB6s1E           6416 	jp	NC,00134$
                           6417 ;demo.c:880: if (x > 6 && x < 13) continue; 
   1CD7 3E 06              6418 	ld	a,#0x06
   1CD9 DD 96 FF           6419 	sub	a,-1 (ix)
   1CDC 30 08              6420 	jr	NC,00102$
   1CDE DD 7E FF           6421 	ld	a,-1 (ix)
   1CE1 D6 0D              6422 	sub	a,#0x0D
   1CE3 DArB0s1E           6423 	jp	C,00110$
   1CE6                    6424 00102$:
                           6425 ;demo.c:882: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   1CE6 3E 06              6426 	ld	a,#0x06
   1CE8 DD 96 FF           6427 	sub	a,-1 (ix)
   1CEB DAr41s1D           6428 	jp	C,00105$
   1CEE DD 56 FF           6429 	ld	d,-1 (ix)
   1CF1 0E 00              6430 	ld	c,#0x00
   1CF3 CB 22              6431 	sla	d
   1CF5 CB 11              6432 	rl	c
   1CF7 CB 22              6433 	sla	d
   1CF9 CB 11              6434 	rl	c
   1CFB CB 22              6435 	sla	d
   1CFD CB 11              6436 	rl	c
   1CFF 7A                 6437 	ld	a,d
   1D00 C6 69              6438 	add	a,#0x69
   1D02 57                 6439 	ld	d,a
   1D03 79                 6440 	ld	a,c
   1D04 CE 00              6441 	adc	a,#0x00
   1D06 47                 6442 	ld	b,a
   1D07 DD 5E FE           6443 	ld	e,-2 (ix)
   1D0A 0E 00              6444 	ld	c,#0x00
   1D0C CB 23              6445 	sla	e
   1D0E CB 11              6446 	rl	c
   1D10 CB 23              6447 	sla	e
   1D12 CB 11              6448 	rl	c
   1D14 CB 23              6449 	sla	e
   1D16 CB 11              6450 	rl	c
   1D18 7A                 6451 	ld	a,d
   1D19 83                 6452 	add	a,e
   1D1A 5F                 6453 	ld	e,a
   1D1B 78                 6454 	ld	a,b
   1D1C 89                 6455 	adc	a,c
   1D1D 0E 00              6456 	ld	c,#0x00
   1D1F 3Er00              6457 	ld	a,#<_sintab
   1D21 83                 6458 	add	a,e
   1D22 5F                 6459 	ld	e,a
   1D23 3Es00              6460 	ld	a,#>_sintab
   1D25 89                 6461 	adc	a,c
   1D26 6B                 6462 	ld	l,e
   1D27 67                 6463 	ld	h,a
   1D28 5E                 6464 	ld	e,(hl)
   1D29 CB 2B              6465 	sra	e
   1D2B CB 2B              6466 	sra	e
   1D2D CB 2B              6467 	sra	e
   1D2F CB 2B              6468 	sra	e
   1D31 7B                 6469 	ld	a,e
   1D32 17                 6470 	rla	
   1D33 9F                 6471 	sbc	a,a
   1D34 4F                 6472 	ld	c,a
   1D35 7B                 6473 	ld	a,e
   1D36 C6 07              6474 	add	a,#0x07
   1D38 DD 77 FC           6475 	ld	-4 (ix),a
   1D3B 79                 6476 	ld	a,c
   1D3C CE 00              6477 	adc	a,#0x00
   1D3E DD 77 FD           6478 	ld	-3 (ix),a
   1D41                    6479 00105$:
                           6480 ;demo.c:883: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   1D41 DD 7E FF           6481 	ld	a,-1 (ix)
   1D44 D6 0D              6482 	sub	a,#0x0D
   1D46 DArA7s1D           6483 	jp	C,00107$
   1D49 DD 5E FF           6484 	ld	e,-1 (ix)
   1D4C 16 00              6485 	ld	d,#0x00
   1D4E 21 17 00           6486 	ld	hl,#0x0017
   1D51 19                 6487 	add	hl,de
   1D52 EB                 6488 	ex	de,hl
   1D53 CB 23              6489 	sla	e
   1D55 CB 12              6490 	rl	d
   1D57 CB 23              6491 	sla	e
   1D59 CB 12              6492 	rl	d
   1D5B CB 23              6493 	sla	e
   1D5D CB 12              6494 	rl	d
   1D5F 21 69 00           6495 	ld	hl,#0x0069
   1D62 19                 6496 	add	hl,de
   1D63 45                 6497 	ld	b,l
   1D64 54                 6498 	ld	d,h
   1D65 DD 4E FE           6499 	ld	c,-2 (ix)
   1D68 1E 00              6500 	ld	e,#0x00
   1D6A 79                 6501 	ld	a,c
   1D6B C6 13              6502 	add	a,#0x13
   1D6D 4F                 6503 	ld	c,a
   1D6E 7B                 6504 	ld	a,e
   1D6F CE 00              6505 	adc	a,#0x00
   1D71 5F                 6506 	ld	e,a
   1D72 CB 21              6507 	sla	c
   1D74 CB 13              6508 	rl	e
   1D76 CB 21              6509 	sla	c
   1D78 CB 13              6510 	rl	e
   1D7A CB 21              6511 	sla	c
   1D7C CB 13              6512 	rl	e
   1D7E 78                 6513 	ld	a,b
   1D7F 81                 6514 	add	a,c
   1D80 4F                 6515 	ld	c,a
   1D81 7A                 6516 	ld	a,d
   1D82 8B                 6517 	adc	a,e
   1D83 1E 00              6518 	ld	e,#0x00
   1D85 3Er00              6519 	ld	a,#<_sintab
   1D87 81                 6520 	add	a,c
   1D88 4F                 6521 	ld	c,a
   1D89 3Es00              6522 	ld	a,#>_sintab
   1D8B 8B                 6523 	adc	a,e
   1D8C 69                 6524 	ld	l,c
   1D8D 67                 6525 	ld	h,a
   1D8E 4E                 6526 	ld	c,(hl)
   1D8F CB 29              6527 	sra	c
   1D91 CB 29              6528 	sra	c
   1D93 CB 29              6529 	sra	c
   1D95 CB 29              6530 	sra	c
   1D97 79                 6531 	ld	a,c
   1D98 17                 6532 	rla	
   1D99 9F                 6533 	sbc	a,a
   1D9A 5F                 6534 	ld	e,a
   1D9B 79                 6535 	ld	a,c
   1D9C C6 07              6536 	add	a,#0x07
   1D9E DD 77 FC           6537 	ld	-4 (ix),a
   1DA1 7B                 6538 	ld	a,e
   1DA2 CE 00              6539 	adc	a,#0x00
   1DA4 DD 77 FD           6540 	ld	-3 (ix),a
   1DA7                    6541 00107$:
                           6542 ;demo.c:885: cmd.size_x = 11;
   1DA7 11r32s41           6543 	ld	de,#_cmd + 8
   1DAA EB                 6544 	ex	de,hl
   1DAB 36 0B              6545 	ld	(hl),#0x0B
   1DAD 23                 6546 	inc	hl
   1DAE 36 00              6547 	ld	(hl),#0x00
                           6548 ;demo.c:886: cmd.size_y = 28-(14-px);
   1DB0 21r34s41           6549 	ld	hl,#_cmd + 10
   1DB3 DD 75 F8           6550 	ld	-8 (ix),l
   1DB6 DD 74 F9           6551 	ld	-7 (ix),h
   1DB9 3E 0E              6552 	ld	a,#0x0E
   1DBB DD 96 FC           6553 	sub	a,-4 (ix)
   1DBE 4F                 6554 	ld	c,a
   1DBF 3E 00              6555 	ld	a,#0x00
   1DC1 DD 9E FD           6556 	sbc	a,-3 (ix)
   1DC4 5F                 6557 	ld	e,a
   1DC5 3E 1C              6558 	ld	a,#0x1C
   1DC7 91                 6559 	sub	a,c
   1DC8 57                 6560 	ld	d,a
   1DC9 3E 00              6561 	ld	a,#0x00
   1DCB 9B                 6562 	sbc	a,e
   1DCC 47                 6563 	ld	b,a
   1DCD DD 6E F8           6564 	ld	l,-8 (ix)
   1DD0 DD 66 F9           6565 	ld	h,-7 (ix)
   1DD3 72                 6566 	ld	(hl),d
   1DD4 23                 6567 	inc	hl
   1DD5 70                 6568 	ld	(hl),b
                           6569 ;demo.c:887: cmd.data = 0;
   1DD6 21r36s41           6570 	ld	hl,#_cmd + 12
   1DD9 36 00              6571 	ld	(hl),#0x00
                           6572 ;demo.c:888: cmd.argument = 0x00; // from 70xY to left
   1DDB 21r37s41           6573 	ld	hl,#_cmd + 13
   1DDE 36 00              6574 	ld	(hl),#0x00
                           6575 ;demo.c:889: cmd.command = 0x98; // vram to vram, y only
   1DE0 21r38s41           6576 	ld	hl,#_cmd + 14
   1DE3 36 98              6577 	ld	(hl),#0x98
                           6578 ;demo.c:891: cmd.source_x = twelvetimes[px];
   1DE5 DD 46 FC           6579 	ld	b,-4 (ix)
   1DE8 DD 56 FD           6580 	ld	d,-3 (ix)
   1DEB CB 20              6581 	sla	b
   1DED CB 12              6582 	rl	d
   1DEF 3Er20              6583 	ld	a,#<_twelvetimes
   1DF1 80                 6584 	add	a,b
   1DF2 47                 6585 	ld	b,a
   1DF3 3Es01              6586 	ld	a,#>_twelvetimes
   1DF5 8A                 6587 	adc	a,d
   1DF6 68                 6588 	ld	l,b
   1DF7 67                 6589 	ld	h,a
   1DF8 46                 6590 	ld	b,(hl)
   1DF9 23                 6591 	inc	hl
   1DFA 56                 6592 	ld	d,(hl)
   1DFB 21r2As41           6593 	ld	hl,#_cmd
   1DFE 70                 6594 	ld	(hl),b
   1DFF 23                 6595 	inc	hl
   1E00 72                 6596 	ld	(hl),d
                           6597 ;demo.c:892: cmd.source_y = 768+183+(15-px);
   1E01 23                 6598 	inc	hl
   1E02 DD 75 F8           6599 	ld	-8 (ix),l
   1E05 DD 74 F9           6600 	ld	-7 (ix),h
   1E08 3E C6              6601 	ld	a,#0xC6
   1E0A DD 96 FC           6602 	sub	a,-4 (ix)
   1E0D 47                 6603 	ld	b,a
   1E0E 3E 03              6604 	ld	a,#0x03
   1E10 DD 9E FD           6605 	sbc	a,-3 (ix)
   1E13 57                 6606 	ld	d,a
   1E14 DD 6E F8           6607 	ld	l,-8 (ix)
   1E17 DD 66 F9           6608 	ld	h,-7 (ix)
   1E1A 70                 6609 	ld	(hl),b
   1E1B 23                 6610 	inc	hl
   1E1C 72                 6611 	ld	(hl),d
                           6612 ;demo.c:893: cmd.dest_x = 0+twelvetimes[x];
   1E1D 21r2Es41           6613 	ld	hl,#_cmd + 4
   1E20 DD 75 F8           6614 	ld	-8 (ix),l
   1E23 DD 74 F9           6615 	ld	-7 (ix),h
   1E26 DD 7E FF           6616 	ld	a,-1 (ix)
   1E29 87                 6617 	add	a,a
   1E2A C6r20              6618 	add	a,#<_twelvetimes
   1E2C 6F                 6619 	ld	l,a
   1E2D 3Es01              6620 	ld	a,#>_twelvetimes
   1E2F CE 00              6621 	adc	a,#0x00
   1E31 67                 6622 	ld	h,a
   1E32 46                 6623 	ld	b,(hl)
   1E33 23                 6624 	inc	hl
   1E34 56                 6625 	ld	d,(hl)
   1E35 DD 6E F8           6626 	ld	l,-8 (ix)
   1E38 DD 66 F9           6627 	ld	h,-7 (ix)
   1E3B 70                 6628 	ld	(hl),b
   1E3C 23                 6629 	inc	hl
   1E3D 72                 6630 	ld	(hl),d
                           6631 ;demo.c:894: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   1E3E 21r30s41           6632 	ld	hl,#_cmd + 6
   1E41 DD 75 F8           6633 	ld	-8 (ix),l
   1E44 DD 74 F9           6634 	ld	-7 (ix),h
   1E47 3Er54              6635 	ld	a,#<_eighttimes
   1E49 DD 86 F7           6636 	add	a,-9 (ix)
   1E4C 6F                 6637 	ld	l,a
   1E4D 3Es01              6638 	ld	a,#>_eighttimes
   1E4F CE 00              6639 	adc	a,#0x00
   1E51 67                 6640 	ld	h,a
   1E52 46                 6641 	ld	b,(hl)
   1E53 23                 6642 	inc	hl
   1E54 56                 6643 	ld	d,(hl)
   1E55 78                 6644 	ld	a,b
   1E56 C6 04              6645 	add	a,#0x04
   1E58 47                 6646 	ld	b,a
   1E59 7A                 6647 	ld	a,d
   1E5A CE 00              6648 	adc	a,#0x00
   1E5C 57                 6649 	ld	d,a
   1E5D 78                 6650 	ld	a,b
   1E5E 81                 6651 	add	a,c
   1E5F 47                 6652 	ld	b,a
   1E60 7A                 6653 	ld	a,d
   1E61 8B                 6654 	adc	a,e
   1E62 57                 6655 	ld	d,a
   1E63 DD 6E F8           6656 	ld	l,-8 (ix)
   1E66 DD 66 F9           6657 	ld	h,-7 (ix)
   1E69 70                 6658 	ld	(hl),b
   1E6A 23                 6659 	inc	hl
   1E6B 72                 6660 	ld	(hl),d
                           6661 ;demo.c:895: vdp_copier(&cmd);
   1E6C C5                 6662 	push	bc
   1E6D D5                 6663 	push	de
   1E6E 21r2As41           6664 	ld	hl,#_cmd
   1E71 E5                 6665 	push	hl
   1E72 CDr00s00           6666 	call	_vdp_copier
   1E75 F1                 6667 	pop	af
   1E76 D1                 6668 	pop	de
   1E77 C1                 6669 	pop	bc
                           6670 ;demo.c:896: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   1E78 21r30s41           6671 	ld	hl,#_cmd + 6
   1E7B DD 75 F8           6672 	ld	-8 (ix),l
   1E7E DD 74 F9           6673 	ld	-7 (ix),h
   1E81 3Er54              6674 	ld	a,#<_eighttimes
   1E83 DD 86 F7           6675 	add	a,-9 (ix)
   1E86 6F                 6676 	ld	l,a
   1E87 3Es01              6677 	ld	a,#>_eighttimes
   1E89 CE 00              6678 	adc	a,#0x00
   1E8B 67                 6679 	ld	h,a
   1E8C 46                 6680 	ld	b,(hl)
   1E8D 23                 6681 	inc	hl
   1E8E 56                 6682 	ld	d,(hl)
   1E8F 78                 6683 	ld	a,b
   1E90 C6 04              6684 	add	a,#0x04
   1E92 47                 6685 	ld	b,a
   1E93 7A                 6686 	ld	a,d
   1E94 CE 00              6687 	adc	a,#0x00
   1E96 C6 01              6688 	add	a,#0x01
   1E98 57                 6689 	ld	d,a
   1E99 78                 6690 	ld	a,b
   1E9A 81                 6691 	add	a,c
   1E9B 4F                 6692 	ld	c,a
   1E9C 7A                 6693 	ld	a,d
   1E9D 8B                 6694 	adc	a,e
   1E9E 5F                 6695 	ld	e,a
   1E9F DD 6E F8           6696 	ld	l,-8 (ix)
   1EA2 DD 66 F9           6697 	ld	h,-7 (ix)
   1EA5 71                 6698 	ld	(hl),c
   1EA6 23                 6699 	inc	hl
   1EA7 73                 6700 	ld	(hl),e
                           6701 ;demo.c:897: vdp_copier(&cmd);
   1EA8 21r2As41           6702 	ld	hl,#_cmd
   1EAB E5                 6703 	push	hl
   1EAC CDr00s00           6704 	call	_vdp_copier
   1EAF F1                 6705 	pop	af
   1EB0                    6706 00110$:
                           6707 ;demo.c:879: for (x = 0; x < 21; x+=1) {
   1EB0 DD 34 FF           6708 	inc	-1 (ix)
   1EB3 C3rCFs1C           6709 	jp	00108$
   1EB6                    6710 00134$:
                           6711 ;demo.c:878: for (y = 9; y < 15; y+=1) {
   1EB6 DD 34 FE           6712 	inc	-2 (ix)
   1EB9 C3rBCs1C           6713 	jp	00132$
   1EBC                    6714 00113$:
                           6715 ;demo.c:903: if (buf == -1) { bo = 0; ya = 0; }
   1EBC 3Ar0Ds42           6716 	ld	a,(#_buf+0)
   1EBF 3C                 6717 	inc	a
   1EC0 20 06              6718 	jr	NZ,00188$
   1EC2 3Ar0Es42           6719 	ld	a,(#_buf+1)
   1EC5 3C                 6720 	inc	a
   1EC6 28 02              6721 	jr	Z,00189$
   1EC8                    6722 00188$:
   1EC8 18 05              6723 	jr	00115$
   1ECA                    6724 00189$:
   1ECA 01 00 00           6725 	ld	bc,#0x0000
   1ECD 18 03              6726 	jr	00116$
   1ECF                    6727 00115$:
                           6728 ;demo.c:904: else { bo = 256; ya = 6;}
   1ECF 01 00 01           6729 	ld	bc,#0x0100
   1ED2                    6730 00116$:
                           6731 ;demo.c:906: cmd.size_x = 72;
   1ED2 11r32s41           6732 	ld	de,#_cmd + 8
   1ED5 EB                 6733 	ex	de,hl
   1ED6 36 48              6734 	ld	(hl),#0x48
   1ED8 23                 6735 	inc	hl
   1ED9 36 00              6736 	ld	(hl),#0x00
                           6737 ;demo.c:907: cmd.size_y = 80;
   1EDB 11r34s41           6738 	ld	de,#_cmd + 10
   1EDE EB                 6739 	ex	de,hl
   1EDF 36 50              6740 	ld	(hl),#0x50
   1EE1 23                 6741 	inc	hl
   1EE2 36 00              6742 	ld	(hl),#0x00
                           6743 ;demo.c:908: cmd.data = 0;
   1EE4 11r36s41           6744 	ld	de,#_cmd + 12
   1EE7 3E 00              6745 	ld	a,#0x00
   1EE9 12                 6746 	ld	(de),a
                           6747 ;demo.c:909: cmd.argument = 0x00; // from 70xY to left
   1EEA 11r37s41           6748 	ld	de,#_cmd + 13
   1EED 3E 00              6749 	ld	a,#0x00
   1EEF 12                 6750 	ld	(de),a
                           6751 ;demo.c:910: cmd.command = 0xd0; // vram to vram, y only
   1EF0 11r38s41           6752 	ld	de,#_cmd + 14
   1EF3 3E D0              6753 	ld	a,#0xD0
   1EF5 12                 6754 	ld	(de),a
                           6755 ;demo.c:911: cmd.source_x = 178;
   1EF6 21r2As41           6756 	ld	hl,#_cmd
   1EF9 36 B2              6757 	ld	(hl),#0xB2
   1EFB 23                 6758 	inc	hl
   1EFC 36 00              6759 	ld	(hl),#0x00
                           6760 ;demo.c:912: cmd.source_y = 0;
   1EFE 11r2Cs41           6761 	ld	de,#_cmd + 2
   1F01 EB                 6762 	ex	de,hl
   1F02 36 00              6763 	ld	(hl),#0x00
   1F04 23                 6764 	inc	hl
   1F05 36 00              6765 	ld	(hl),#0x00
                           6766 ;demo.c:913: cmd.dest_x = 84;
   1F07 11r2Es41           6767 	ld	de,#_cmd + 4
   1F0A EB                 6768 	ex	de,hl
   1F0B 36 54              6769 	ld	(hl),#0x54
   1F0D 23                 6770 	inc	hl
   1F0E 36 00              6771 	ld	(hl),#0x00
                           6772 ;demo.c:914: cmd.dest_y = 72+bo;
   1F10 11r30s41           6773 	ld	de,#_cmd + 6
   1F13 21 48 00           6774 	ld	hl,#0x0048
   1F16 09                 6775 	add	hl,bc
   1F17 4D                 6776 	ld	c,l
   1F18 44                 6777 	ld	b,h
   1F19 EB                 6778 	ex	de,hl
   1F1A 71                 6779 	ld	(hl),c
   1F1B 23                 6780 	inc	hl
   1F1C 70                 6781 	ld	(hl),b
                           6782 ;demo.c:915: vdp_copier(&cmd);
   1F1D C5                 6783 	push	bc
   1F1E 21r2As41           6784 	ld	hl,#_cmd
   1F21 E5                 6785 	push	hl
   1F22 CDr00s00           6786 	call	_vdp_copier
   1F25 F1                 6787 	pop	af
   1F26 C1                 6788 	pop	bc
                           6789 ;demo.c:917: lukema = ffa;
   1F27 2Ar0Fs42           6790 	ld	hl,(_ffa)
   1F2A DD 75 FA           6791 	ld	-6 (ix),l
   1F2D DD 74 FB           6792 	ld	-5 (ix),h
                           6793 ;demo.c:918: for (y = 0; y < 5; y+=1) {
   1F30 DD 36 FE 00        6794 	ld	-2 (ix),#0x00
   1F34                    6795 00140$:
   1F34 DD 7E FE           6796 	ld	a,-2 (ix)
   1F37 D6 05              6797 	sub	a,#0x05
   1F39 D2r9As20           6798 	jp	NC,00143$
                           6799 ;demo.c:919: for (x = 0; x < 6; x+=1) {
   1F3C DD 7E FE           6800 	ld	a,-2 (ix)
   1F3F 87                 6801 	add	a,a
   1F40 DD 77 F7           6802 	ld	-9 (ix),a
   1F43 DD 36 FF 00        6803 	ld	-1 (ix),#0x00
   1F47                    6804 00136$:
   1F47 DD 7E FF           6805 	ld	a,-1 (ix)
   1F4A D6 06              6806 	sub	a,#0x06
   1F4C D2r94s20           6807 	jp	NC,00142$
                           6808 ;demo.c:921: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   1F4F DD 5E FF           6809 	ld	e,-1 (ix)
   1F52 16 00              6810 	ld	d,#0x00
   1F54 CB 23              6811 	sla	e
   1F56 CB 12              6812 	rl	d
   1F58 CB 23              6813 	sla	e
   1F5A CB 12              6814 	rl	d
   1F5C CB 23              6815 	sla	e
   1F5E CB 12              6816 	rl	d
   1F60 DD 7E FA           6817 	ld	a,-6 (ix)
   1F63 83                 6818 	add	a,e
   1F64 DD 77 F8           6819 	ld	-8 (ix),a
   1F67 DD 7E FB           6820 	ld	a,-5 (ix)
   1F6A 8A                 6821 	adc	a,d
   1F6B DD 77 F9           6822 	ld	-7 (ix),a
   1F6E DD 5E FE           6823 	ld	e,-2 (ix)
   1F71 16 00              6824 	ld	d,#0x00
   1F73 CB 23              6825 	sla	e
   1F75 CB 12              6826 	rl	d
   1F77 CB 23              6827 	sla	e
   1F79 CB 12              6828 	rl	d
   1F7B DD 7E F8           6829 	ld	a,-8 (ix)
   1F7E 83                 6830 	add	a,e
   1F7F 5F                 6831 	ld	e,a
   1F80 DD 7E F9           6832 	ld	a,-7 (ix)
   1F83 8A                 6833 	adc	a,d
   1F84 16 00              6834 	ld	d,#0x00
   1F86 21r00s00           6835 	ld	hl,#_sintab
   1F89 19                 6836 	add	hl,de
   1F8A 5E                 6837 	ld	e,(hl)
   1F8B CB 2B              6838 	sra	e
   1F8D CB 2B              6839 	sra	e
   1F8F CB 2B              6840 	sra	e
   1F91 CB 2B              6841 	sra	e
   1F93 7B                 6842 	ld	a,e
   1F94 17                 6843 	rla	
   1F95 9F                 6844 	sbc	a,a
   1F96 57                 6845 	ld	d,a
   1F97 21 07 00           6846 	ld	hl,#0x0007
   1F9A 19                 6847 	add	hl,de
   1F9B DD 75 FC           6848 	ld	-4 (ix),l
                           6849 ;demo.c:922: if (px < 0) px = 0; 
   1F9E DD 74 FD           6850 	ld	-3 (ix),h
   1FA1 7C                 6851 	ld	a, h
   1FA2 CB 7F              6852 	bit	7,a
   1FA4 28 08              6853 	jr	Z,00118$
   1FA6 DD 36 FC 00        6854 	ld	-4 (ix),#0x00
   1FAA DD 36 FD 00        6855 	ld	-3 (ix),#0x00
   1FAE                    6856 00118$:
                           6857 ;demo.c:923: if (px > 14) px = 14; 
   1FAE 3E 0E              6858 	ld	a,#0x0E
   1FB0 DD 96 FC           6859 	sub	a,-4 (ix)
   1FB3 3E 00              6860 	ld	a,#0x00
   1FB5 DD 9E FD           6861 	sbc	a,-3 (ix)
   1FB8 F2rC3s1F           6862 	jp	P,00120$
   1FBB DD 36 FC 0E        6863 	ld	-4 (ix),#0x0E
   1FBF DD 36 FD 00        6864 	ld	-3 (ix),#0x00
   1FC3                    6865 00120$:
                           6866 ;demo.c:925: cmd.size_x = 12;
   1FC3 11r32s41           6867 	ld	de,#_cmd + 8
   1FC6 EB                 6868 	ex	de,hl
   1FC7 36 0C              6869 	ld	(hl),#0x0C
   1FC9 23                 6870 	inc	hl
   1FCA 36 00              6871 	ld	(hl),#0x00
                           6872 ;demo.c:926: cmd.size_y = 11;
   1FCC 11r34s41           6873 	ld	de,#_cmd + 10
   1FCF EB                 6874 	ex	de,hl
   1FD0 36 0B              6875 	ld	(hl),#0x0B
   1FD2 23                 6876 	inc	hl
   1FD3 36 00              6877 	ld	(hl),#0x00
                           6878 ;demo.c:927: cmd.data = 0;
   1FD5 11r36s41           6879 	ld	de,#_cmd + 12
   1FD8 3E 00              6880 	ld	a,#0x00
   1FDA 12                 6881 	ld	(de),a
                           6882 ;demo.c:928: cmd.argument = 0x00; // from 70xY to left
   1FDB 11r37s41           6883 	ld	de,#_cmd + 13
   1FDE 3E 00              6884 	ld	a,#0x00
   1FE0 12                 6885 	ld	(de),a
                           6886 ;demo.c:929: cmd.command = 0x98; // vram to vram, y only
   1FE1 11r38s41           6887 	ld	de,#_cmd + 14
   1FE4 3E 98              6888 	ld	a,#0x98
   1FE6 12                 6889 	ld	(de),a
                           6890 ;demo.c:931: cmd.source_x = twelvetimes[px];
   1FE7 DD 5E FC           6891 	ld	e,-4 (ix)
   1FEA DD 56 FD           6892 	ld	d,-3 (ix)
   1FED CB 23              6893 	sla	e
   1FEF CB 12              6894 	rl	d
   1FF1 21r20s01           6895 	ld	hl,#_twelvetimes
   1FF4 19                 6896 	add	hl,de
   1FF5 5E                 6897 	ld	e,(hl)
   1FF6 23                 6898 	inc	hl
   1FF7 56                 6899 	ld	d,(hl)
   1FF8 21r2As41           6900 	ld	hl,#_cmd
   1FFB 73                 6901 	ld	(hl),e
   1FFC 23                 6902 	inc	hl
   1FFD 72                 6903 	ld	(hl),d
                           6904 ;demo.c:932: cmd.source_y = 768+183+16-px;
   1FFE 23                 6905 	inc	hl
   1FFF DD 75 F8           6906 	ld	-8 (ix),l
   2002 DD 74 F9           6907 	ld	-7 (ix),h
   2005 3E C7              6908 	ld	a,#0xC7
   2007 DD 96 FC           6909 	sub	a,-4 (ix)
   200A 5F                 6910 	ld	e,a
   200B 3E 03              6911 	ld	a,#0x03
   200D DD 9E FD           6912 	sbc	a,-3 (ix)
   2010 57                 6913 	ld	d,a
   2011 DD 6E F8           6914 	ld	l,-8 (ix)
   2014 DD 66 F9           6915 	ld	h,-7 (ix)
   2017 73                 6916 	ld	(hl),e
   2018 23                 6917 	inc	hl
   2019 72                 6918 	ld	(hl),d
                           6919 ;demo.c:933: cmd.dest_x = 84+twelvetimes[x];
   201A 21r2Es41           6920 	ld	hl,#_cmd + 4
   201D DD 75 F8           6921 	ld	-8 (ix),l
   2020 DD 74 F9           6922 	ld	-7 (ix),h
   2023 DD 7E FF           6923 	ld	a,-1 (ix)
   2026 87                 6924 	add	a,a
   2027 C6r20              6925 	add	a,#<_twelvetimes
   2029 6F                 6926 	ld	l,a
   202A 3Es01              6927 	ld	a,#>_twelvetimes
   202C CE 00              6928 	adc	a,#0x00
   202E 67                 6929 	ld	h,a
   202F 5E                 6930 	ld	e,(hl)
   2030 23                 6931 	inc	hl
   2031 56                 6932 	ld	d,(hl)
   2032 21 54 00           6933 	ld	hl,#0x0054
   2035 19                 6934 	add	hl,de
   2036 EB                 6935 	ex	de,hl
   2037 DD 6E F8           6936 	ld	l,-8 (ix)
   203A DD 66 F9           6937 	ld	h,-7 (ix)
   203D 73                 6938 	ld	(hl),e
   203E 23                 6939 	inc	hl
   203F 72                 6940 	ld	(hl),d
                           6941 ;demo.c:934: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   2040 21r30s41           6942 	ld	hl,#_cmd + 6
   2043 DD 75 F8           6943 	ld	-8 (ix),l
   2046 DD 74 F9           6944 	ld	-7 (ix),h
   2049 3Er54              6945 	ld	a,#<_eighttimes
   204B DD 86 F7           6946 	add	a,-9 (ix)
   204E 6F                 6947 	ld	l,a
   204F 3Es01              6948 	ld	a,#>_eighttimes
   2051 CE 00              6949 	adc	a,#0x00
   2053 67                 6950 	ld	h,a
   2054 5E                 6951 	ld	e,(hl)
   2055 23                 6952 	inc	hl
   2056 56                 6953 	ld	d,(hl)
   2057 13                 6954 	inc	de
   2058 13                 6955 	inc	de
   2059 13                 6956 	inc	de
   205A 13                 6957 	inc	de
   205B 79                 6958 	ld	a,c
   205C 83                 6959 	add	a,e
   205D DD 77 F5           6960 	ld	-11 (ix),a
   2060 78                 6961 	ld	a,b
   2061 8A                 6962 	adc	a,d
   2062 DD 77 F6           6963 	ld	-10 (ix),a
   2065 3E 0E              6964 	ld	a,#0x0E
   2067 DD 96 FC           6965 	sub	a,-4 (ix)
   206A 5F                 6966 	ld	e,a
   206B 3E 00              6967 	ld	a,#0x00
   206D DD 9E FD           6968 	sbc	a,-3 (ix)
   2070 57                 6969 	ld	d,a
   2071 DD 7E F5           6970 	ld	a,-11 (ix)
   2074 83                 6971 	add	a,e
   2075 5F                 6972 	ld	e,a
   2076 DD 7E F6           6973 	ld	a,-10 (ix)
   2079 8A                 6974 	adc	a,d
   207A 57                 6975 	ld	d,a
   207B DD 6E F8           6976 	ld	l,-8 (ix)
   207E DD 66 F9           6977 	ld	h,-7 (ix)
   2081 73                 6978 	ld	(hl),e
   2082 23                 6979 	inc	hl
   2083 72                 6980 	ld	(hl),d
                           6981 ;demo.c:935: vdp_copier(&cmd);
   2084 C5                 6982 	push	bc
   2085 21r2As41           6983 	ld	hl,#_cmd
   2088 E5                 6984 	push	hl
   2089 CDr00s00           6985 	call	_vdp_copier
   208C F1                 6986 	pop	af
   208D C1                 6987 	pop	bc
                           6988 ;demo.c:919: for (x = 0; x < 6; x+=1) {
   208E DD 34 FF           6989 	inc	-1 (ix)
   2091 C3r47s1F           6990 	jp	00136$
   2094                    6991 00142$:
                           6992 ;demo.c:918: for (y = 0; y < 5; y+=1) {
   2094 DD 34 FE           6993 	inc	-2 (ix)
   2097 C3r34s1F           6994 	jp	00140$
   209A                    6995 00143$:
                           6996 ;demo.c:940: for (x = 0; x < 6; x+=1) {
   209A DD 36 FF 00        6997 	ld	-1 (ix),#0x00
   209E                    6998 00144$:
   209E DD 7E FF           6999 	ld	a,-1 (ix)
   20A1 D6 06              7000 	sub	a,#0x06
   20A3 D2rE4s21           7001 	jp	NC,00147$
                           7002 ;demo.c:941: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   20A6 DD 5E FF           7003 	ld	e,-1 (ix)
   20A9 16 00              7004 	ld	d,#0x00
   20AB CB 23              7005 	sla	e
   20AD CB 12              7006 	rl	d
   20AF CB 23              7007 	sla	e
   20B1 CB 12              7008 	rl	d
   20B3 CB 23              7009 	sla	e
   20B5 CB 12              7010 	rl	d
   20B7 DD 7E FA           7011 	ld	a,-6 (ix)
   20BA 83                 7012 	add	a,e
   20BB 5F                 7013 	ld	e,a
   20BC DD 7E FB           7014 	ld	a,-5 (ix)
   20BF 8A                 7015 	adc	a,d
   20C0 57                 7016 	ld	d,a
   20C1 21 14 00           7017 	ld	hl,#0x0014
   20C4 19                 7018 	add	hl,de
   20C5 5D                 7019 	ld	e,l
   20C6 16 00              7020 	ld	d,#0x00
   20C8 21r00s00           7021 	ld	hl,#_sintab
   20CB 19                 7022 	add	hl,de
   20CC 5E                 7023 	ld	e,(hl)
   20CD CB 2B              7024 	sra	e
   20CF CB 2B              7025 	sra	e
   20D1 CB 2B              7026 	sra	e
   20D3 CB 2B              7027 	sra	e
   20D5 7B                 7028 	ld	a,e
   20D6 17                 7029 	rla	
   20D7 9F                 7030 	sbc	a,a
   20D8 57                 7031 	ld	d,a
   20D9 21 07 00           7032 	ld	hl,#0x0007
   20DC 19                 7033 	add	hl,de
   20DD DD 75 FC           7034 	ld	-4 (ix),l
                           7035 ;demo.c:942: if (px < 0) px = 0; 
   20E0 DD 74 FD           7036 	ld	-3 (ix),h
   20E3 7C                 7037 	ld	a, h
   20E4 CB 7F              7038 	bit	7,a
   20E6 28 08              7039 	jr	Z,00122$
   20E8 DD 36 FC 00        7040 	ld	-4 (ix),#0x00
   20EC DD 36 FD 00        7041 	ld	-3 (ix),#0x00
   20F0                    7042 00122$:
                           7043 ;demo.c:943: if (px > 14) px = 14; 
   20F0 3E 0E              7044 	ld	a,#0x0E
   20F2 DD 96 FC           7045 	sub	a,-4 (ix)
   20F5 3E 00              7046 	ld	a,#0x00
   20F7 DD 9E FD           7047 	sbc	a,-3 (ix)
   20FA F2r05s21           7048 	jp	P,00124$
   20FD DD 36 FC 0E        7049 	ld	-4 (ix),#0x0E
   2101 DD 36 FD 00        7050 	ld	-3 (ix),#0x00
   2105                    7051 00124$:
                           7052 ;demo.c:945: cmd.size_x = 12;
   2105 11r32s41           7053 	ld	de,#_cmd + 8
   2108 EB                 7054 	ex	de,hl
   2109 36 0C              7055 	ld	(hl),#0x0C
   210B 23                 7056 	inc	hl
   210C 36 00              7057 	ld	(hl),#0x00
                           7058 ;demo.c:946: cmd.size_y = 27-(14-px);
   210E 21r34s41           7059 	ld	hl,#_cmd + 10
   2111 DD 75 F5           7060 	ld	-11 (ix),l
   2114 DD 74 F6           7061 	ld	-10 (ix),h
   2117 3E 0E              7062 	ld	a,#0x0E
   2119 DD 96 FC           7063 	sub	a,-4 (ix)
   211C DD 77 F8           7064 	ld	-8 (ix),a
   211F 3E 00              7065 	ld	a,#0x00
   2121 DD 9E FD           7066 	sbc	a,-3 (ix)
   2124 DD 77 F9           7067 	ld	-7 (ix),a
   2127 3E 1B              7068 	ld	a,#0x1B
   2129 DD 96 F8           7069 	sub	a,-8 (ix)
   212C 5F                 7070 	ld	e,a
   212D 3E 00              7071 	ld	a,#0x00
   212F DD 9E F9           7072 	sbc	a,-7 (ix)
   2132 57                 7073 	ld	d,a
   2133 DD 6E F5           7074 	ld	l,-11 (ix)
   2136 DD 66 F6           7075 	ld	h,-10 (ix)
   2139 73                 7076 	ld	(hl),e
   213A 23                 7077 	inc	hl
   213B 72                 7078 	ld	(hl),d
                           7079 ;demo.c:947: cmd.data = 0;
   213C 11r36s41           7080 	ld	de,#_cmd + 12
   213F 3E 00              7081 	ld	a,#0x00
   2141 12                 7082 	ld	(de),a
                           7083 ;demo.c:948: cmd.argument = 0x00; // from 70xY to left
   2142 11r37s41           7084 	ld	de,#_cmd + 13
   2145 3E 00              7085 	ld	a,#0x00
   2147 12                 7086 	ld	(de),a
                           7087 ;demo.c:949: cmd.command = 0x98; // vram to vram, y only
   2148 11r38s41           7088 	ld	de,#_cmd + 14
   214B 3E 98              7089 	ld	a,#0x98
   214D 12                 7090 	ld	(de),a
                           7091 ;demo.c:951: cmd.source_x = twelvetimes[px];
   214E DD 5E FC           7092 	ld	e,-4 (ix)
   2151 DD 56 FD           7093 	ld	d,-3 (ix)
   2154 CB 23              7094 	sla	e
   2156 CB 12              7095 	rl	d
   2158 21r20s01           7096 	ld	hl,#_twelvetimes
   215B 19                 7097 	add	hl,de
   215C 5E                 7098 	ld	e,(hl)
   215D 23                 7099 	inc	hl
   215E 56                 7100 	ld	d,(hl)
   215F 21r2As41           7101 	ld	hl,#_cmd
   2162 73                 7102 	ld	(hl),e
   2163 23                 7103 	inc	hl
   2164 72                 7104 	ld	(hl),d
                           7105 ;demo.c:952: cmd.source_y = 768+183+ 16-px;
   2165 23                 7106 	inc	hl
   2166 DD 75 F5           7107 	ld	-11 (ix),l
   2169 DD 74 F6           7108 	ld	-10 (ix),h
   216C 3E C7              7109 	ld	a,#0xC7
   216E DD 96 FC           7110 	sub	a,-4 (ix)
   2171 5F                 7111 	ld	e,a
   2172 3E 03              7112 	ld	a,#0x03
   2174 DD 9E FD           7113 	sbc	a,-3 (ix)
   2177 57                 7114 	ld	d,a
   2178 DD 6E F5           7115 	ld	l,-11 (ix)
   217B DD 66 F6           7116 	ld	h,-10 (ix)
   217E 73                 7117 	ld	(hl),e
   217F 23                 7118 	inc	hl
   2180 72                 7119 	ld	(hl),d
                           7120 ;demo.c:953: cmd.dest_x = 84+twelvetimes[x];
   2181 21r2Es41           7121 	ld	hl,#_cmd + 4
   2184 DD 75 F5           7122 	ld	-11 (ix),l
   2187 DD 74 F6           7123 	ld	-10 (ix),h
   218A DD 7E FF           7124 	ld	a,-1 (ix)
   218D 87                 7125 	add	a,a
   218E C6r20              7126 	add	a,#<_twelvetimes
   2190 6F                 7127 	ld	l,a
   2191 3Es01              7128 	ld	a,#>_twelvetimes
   2193 CE 00              7129 	adc	a,#0x00
   2195 67                 7130 	ld	h,a
   2196 5E                 7131 	ld	e,(hl)
   2197 23                 7132 	inc	hl
   2198 56                 7133 	ld	d,(hl)
   2199 21 54 00           7134 	ld	hl,#0x0054
   219C 19                 7135 	add	hl,de
   219D EB                 7136 	ex	de,hl
   219E DD 6E F5           7137 	ld	l,-11 (ix)
   21A1 DD 66 F6           7138 	ld	h,-10 (ix)
   21A4 73                 7139 	ld	(hl),e
   21A5 23                 7140 	inc	hl
   21A6 72                 7141 	ld	(hl),d
                           7142 ;demo.c:954: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   21A7 21r30s41           7143 	ld	hl,#_cmd + 6
   21AA DD 75 F5           7144 	ld	-11 (ix),l
   21AD DD 74 F6           7145 	ld	-10 (ix),h
   21B0 11r5Es01           7146 	ld	de,#_eighttimes + 10
   21B3 EB                 7147 	ex	de,hl
   21B4 5E                 7148 	ld	e,(hl)
   21B5 23                 7149 	inc	hl
   21B6 56                 7150 	ld	d,(hl)
   21B7 13                 7151 	inc	de
   21B8 13                 7152 	inc	de
   21B9 13                 7153 	inc	de
   21BA 13                 7154 	inc	de
   21BB 79                 7155 	ld	a,c
   21BC 83                 7156 	add	a,e
   21BD 5F                 7157 	ld	e,a
   21BE 78                 7158 	ld	a,b
   21BF 8A                 7159 	adc	a,d
   21C0 57                 7160 	ld	d,a
   21C1 7B                 7161 	ld	a,e
   21C2 DD 86 F8           7162 	add	a,-8 (ix)
   21C5 5F                 7163 	ld	e,a
   21C6 7A                 7164 	ld	a,d
   21C7 DD 8E F9           7165 	adc	a,-7 (ix)
   21CA 57                 7166 	ld	d,a
   21CB DD 6E F5           7167 	ld	l,-11 (ix)
   21CE DD 66 F6           7168 	ld	h,-10 (ix)
   21D1 73                 7169 	ld	(hl),e
   21D2 23                 7170 	inc	hl
   21D3 72                 7171 	ld	(hl),d
                           7172 ;demo.c:955: vdp_copier(&cmd);
   21D4 C5                 7173 	push	bc
   21D5 21r2As41           7174 	ld	hl,#_cmd
   21D8 E5                 7175 	push	hl
   21D9 CDr00s00           7176 	call	_vdp_copier
   21DC F1                 7177 	pop	af
   21DD C1                 7178 	pop	bc
                           7179 ;demo.c:940: for (x = 0; x < 6; x+=1) {
   21DE DD 34 FF           7180 	inc	-1 (ix)
   21E1 C3r9Es20           7181 	jp	00144$
   21E4                    7182 00147$:
                           7183 ;demo.c:959: if (buf == -1) vdp_register(2, 0x1F);
   21E4 3Ar0Ds42           7184 	ld	a,(#_buf+0)
   21E7 3C                 7185 	inc	a
   21E8 20 06              7186 	jr	NZ,00200$
   21EA 3Ar0Es42           7187 	ld	a,(#_buf+1)
   21ED 3C                 7188 	inc	a
   21EE 28 02              7189 	jr	Z,00201$
   21F0                    7190 00200$:
   21F0 18 0A              7191 	jr	00126$
   21F2                    7192 00201$:
   21F2 21 02 1F           7193 	ld	hl,#0x1F02
   21F5 E5                 7194 	push	hl
   21F6 CDr00s00           7195 	call	_vdp_register
   21F9 F1                 7196 	pop	af
   21FA 18 08              7197 	jr	00127$
   21FC                    7198 00126$:
                           7199 ;demo.c:960: else vdp_register(2, 0x3F);
   21FC 21 02 3F           7200 	ld	hl,#0x3F02
   21FF E5                 7201 	push	hl
   2200 CDr00s00           7202 	call	_vdp_register
   2203 F1                 7203 	pop	af
   2204                    7204 00127$:
                           7205 ;demo.c:963: buf = -buf;
   2204 AF                 7206 	xor	a,a
   2205 FD 21r0Ds42        7207 	ld	iy,#_buf
   2209 3E 00              7208 	ld	a,#0x00
   220B FD 9E 00           7209 	sbc	a,0 (iy)
   220E 21r0Ds42           7210 	ld	hl,#_buf + 0
   2211 77                 7211 	ld	(hl), a
   2212 FD 21r0Ds42        7212 	ld	iy,#_buf
   2216 3E 00              7213 	ld	a,#0x00
   2218 FD 9E 01           7214 	sbc	a,1 (iy)
   221B 21r0Es42           7215 	ld	hl,#_buf + 1
   221E 77                 7216 	ld	(hl), a
                           7217 ;demo.c:965: ffa+=8;
   221F 21r0Fs42           7218 	ld	hl,#_ffa
   2222 7E                 7219 	ld	a,(hl)
   2223 C6 08              7220 	add	a,#0x08
   2225 23                 7221 	inc	hl
   2226 2B                 7222 	dec	hl
   2227 C5                 7223 	push	bc
   2228 4F                 7224 	ld	c, a
   2229 23                 7225 	inc	hl
   222A 7E                 7226 	ld	a, (hl)
   222B 47                 7227 	ld	b, a
   222C 79                 7228 	ld	a, c
   222D 2B                 7229 	dec	hl
   222E 77                 7230 	ld	(hl), a
   222F 78                 7231 	ld	a, b
   2230 C1                 7232 	pop	bc
   2231 CE 00              7233 	adc	a,#0x00
   2233 23                 7234 	inc	hl
   2234 77                 7235 	ld	(hl),a
   2235 DD F9              7236 	ld	sp,ix
   2237 DD E1              7237 	pop	ix
   2239 C9                 7238 	ret
   223A                    7239 _thewave_end::
                           7240 ;demo.c:971: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           7241 ;	---------------------------------
                           7242 ; Function drawtritile
                           7243 ; ---------------------------------
   223A                    7244 _drawtritile_start::
   223A                    7245 _drawtritile:
   223A DD E5              7246 	push	ix
   223C DD 21 00 00        7247 	ld	ix,#0
   2240 DD 39              7248 	add	ix,sp
                           7249 ;demo.c:972: cmd.source_x = tx;
   2242 DD 4E 04           7250 	ld	c,4 (ix)
   2245 06 00              7251 	ld	b,#0x00
   2247 21r2As41           7252 	ld	hl,#_cmd
   224A 71                 7253 	ld	(hl),c
   224B 23                 7254 	inc	hl
   224C 70                 7255 	ld	(hl),b
                           7256 ;demo.c:973: cmd.source_y = ty-1;
   224D 01r2Cs41           7257 	ld	bc,#_cmd + 2
   2250 DD 5E 05           7258 	ld	e,5 (ix)
   2253 DD 56 06           7259 	ld	d,6 (ix)
   2256 1B                 7260 	dec	de
   2257 69                 7261 	ld	l,c
   2258 60                 7262 	ld	h,b
   2259 73                 7263 	ld	(hl),e
   225A 23                 7264 	inc	hl
   225B 72                 7265 	ld	(hl),d
                           7266 ;demo.c:974: cmd.dest_x = x;
   225C 01r2Es41           7267 	ld	bc,#_cmd + 4
   225F DD 5E 07           7268 	ld	e,7 (ix)
   2262 16 00              7269 	ld	d,#0x00
   2264 69                 7270 	ld	l,c
   2265 60                 7271 	ld	h,b
   2266 73                 7272 	ld	(hl),e
   2267 23                 7273 	inc	hl
   2268 72                 7274 	ld	(hl),d
                           7275 ;demo.c:975: cmd.dest_y = y;
   2269 01r30s41           7276 	ld	bc,#_cmd + 6
   226C DD 5E 08           7277 	ld	e,8 (ix)
   226F 16 00              7278 	ld	d,#0x00
   2271 69                 7279 	ld	l,c
   2272 60                 7280 	ld	h,b
   2273 73                 7281 	ld	(hl),e
   2274 23                 7282 	inc	hl
   2275 72                 7283 	ld	(hl),d
                           7284 ;demo.c:976: cmd.size_x = 16;
   2276 21r32s41           7285 	ld	hl, #_cmd + 8
   2279 36 10              7286 	ld	(hl),#0x10
   227B 23                 7287 	inc	hl
   227C 36 00              7288 	ld	(hl),#0x00
                           7289 ;demo.c:977: cmd.size_y = 16;
   227E 21r34s41           7290 	ld	hl, #_cmd + 10
   2281 36 10              7291 	ld	(hl),#0x10
   2283 23                 7292 	inc	hl
   2284 36 00              7293 	ld	(hl),#0x00
                           7294 ;demo.c:978: cmd.data = 0;
                           7295 ;demo.c:979: cmd.argument = 0x00;
   2286 3E 00              7296 	ld	a,#0x00
   2288 32r36s41           7297 	ld	(#_cmd + 12),a
   228B 32r37s41           7298 	ld	(#_cmd + 13),a
                           7299 ;demo.c:980: cmd.command = 0xd0; // HMMM
   228E 3E D0              7300 	ld	a,#0xD0
   2290 32r38s41           7301 	ld	(#_cmd + 14),a
                           7302 ;demo.c:981: vdp_copier(&cmd);
   2293 21r2As41           7303 	ld	hl,#_cmd
   2296 E5                 7304 	push	hl
   2297 CDr00s00           7305 	call	_vdp_copier
   229A F1                 7306 	pop	af
   229B DD E1              7307 	pop	ix
   229D C9                 7308 	ret
   229E                    7309 _drawtritile_end::
                           7310 ;demo.c:988: void drawtilescreen(char* tripic) {
                           7311 ;	---------------------------------
                           7312 ; Function drawtilescreen
                           7313 ; ---------------------------------
   229E                    7314 _drawtilescreen_start::
   229E                    7315 _drawtilescreen:
   229E DD E5              7316 	push	ix
   22A0 DD 21 00 00        7317 	ld	ix,#0
   22A4 DD 39              7318 	add	ix,sp
   22A6 F5                 7319 	push	af
   22A7 3B                 7320 	dec	sp
                           7321 ;demo.c:990: if(tilei >= 192) return;
   22A8 3Ar12s42           7322 	ld	a,(#_tilei+0)
   22AB D6 C0              7323 	sub	a,#0xC0
   22AD 3Ar13s42           7324 	ld	a,(#_tilei+1)
   22B0 DE 00              7325 	sbc	a,#0x00
   22B2 FArB8s22           7326 	jp	M,00102$
   22B5 C3r83s23           7327 	jp	00112$
   22B8                    7328 00102$:
                           7329 ;demo.c:992: tiletick++;
   22B8 FD 21r18s42        7330 	ld	iy,#_tiletick
   22BC FD 34 00           7331 	inc	0 (iy)
                           7332 ;demo.c:993: if (tiletick > 6) { tiletick = 0;}
   22BF 3E 06              7333 	ld	a,#0x06
   22C1 FD 21r18s42        7334 	ld	iy,#_tiletick
   22C5 FD 96 00           7335 	sub	a,0 (iy)
   22C8 30 0A              7336 	jr	NC,00104$
   22CA FD 21r18s42        7337 	ld	iy,#_tiletick
   22CE FD 36 00 00        7338 	ld	0 (iy),#0x00
   22D2 18 03              7339 	jr	00118$
   22D4                    7340 00104$:
                           7341 ;demo.c:994: else return;
   22D4 C3r83s23           7342 	jp	00112$
                           7343 ;demo.c:995: for (i=0;i<20;i++) {
   22D7                    7344 00118$:
   22D7 DD 36 FF 00        7345 	ld	-1 (ix),#0x00
   22DB                    7346 00108$:
   22DB DD 7E FF           7347 	ld	a,-1 (ix)
   22DE D6 14              7348 	sub	a,#0x14
   22E0 D2r83s23           7349 	jp	NC,00112$
                           7350 ;demo.c:996: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   22E3 3Ar16s42           7351 	ld	a,(#_tiley+0)
   22E6 DD 77 FD           7352 	ld	-3 (ix),a
   22E9 3Ar14s42           7353 	ld	a,(#_tilex+0)
   22EC DD 77 FE           7354 	ld	-2 (ix),a
   22EF 21r12s42           7355 	ld	hl,#_tilei
   22F2 DD 7E 04           7356 	ld	a,4 (ix)
   22F5 86                 7357 	add	a,(hl)
   22F6 57                 7358 	ld	d,a
   22F7 DD 7E 05           7359 	ld	a,5 (ix)
   22FA 23                 7360 	inc	hl
   22FB 8E                 7361 	adc	a,(hl)
   22FC 6A                 7362 	ld	l,d
   22FD 67                 7363 	ld	h,a
   22FE 56                 7364 	ld	d,(hl)
   22FF 7A                 7365 	ld	a,d
   2300 87                 7366 	add	a,a
   2301 C6r88              7367 	add	a,#<_tri_lookup_y
   2303 6F                 7368 	ld	l,a
   2304 3Es01              7369 	ld	a,#>_tri_lookup_y
   2306 CE 00              7370 	adc	a,#0x00
   2308 67                 7371 	ld	h,a
   2309 4E                 7372 	ld	c,(hl)
   230A 23                 7373 	inc	hl
   230B 5E                 7374 	ld	e,(hl)
   230C 3Er00              7375 	ld	a,#<_tri_lookup_x
   230E 82                 7376 	add	a,d
   230F 6F                 7377 	ld	l,a
   2310 3Es01              7378 	ld	a,#>_tri_lookup_x
   2312 CE 00              7379 	adc	a,#0x00
   2314 67                 7380 	ld	h,a
   2315 56                 7381 	ld	d,(hl)
   2316 DD 66 FD           7382 	ld	h,-3 (ix)
   2319 DD 6E FE           7383 	ld	l,-2 (ix)
   231C E5                 7384 	push	hl
   231D 69                 7385 	ld	l,c
   231E 63                 7386 	ld	h,e
   231F E5                 7387 	push	hl
   2320 D5                 7388 	push	de
   2321 33                 7389 	inc	sp
   2322 CDr3As22           7390 	call	_drawtritile
   2325 F1                 7391 	pop	af
   2326 F1                 7392 	pop	af
   2327 33                 7393 	inc	sp
                           7394 ;demo.c:997: tilex+=16;
   2328 21r14s42           7395 	ld	hl,#_tilex
   232B 7E                 7396 	ld	a,(hl)
   232C C6 10              7397 	add	a,#0x10
   232E 23                 7398 	inc	hl
   232F 2B                 7399 	dec	hl
   2330 C5                 7400 	push	bc
   2331 4F                 7401 	ld	c, a
   2332 23                 7402 	inc	hl
   2333 7E                 7403 	ld	a, (hl)
   2334 47                 7404 	ld	b, a
   2335 79                 7405 	ld	a, c
   2336 2B                 7406 	dec	hl
   2337 77                 7407 	ld	(hl), a
   2338 78                 7408 	ld	a, b
   2339 C1                 7409 	pop	bc
   233A CE 00              7410 	adc	a,#0x00
   233C 23                 7411 	inc	hl
   233D 77                 7412 	ld	(hl),a
                           7413 ;demo.c:998: tilei++;
   233E FD 21r12s42        7414 	ld	iy,#_tilei
   2342 FD 34 00           7415 	inc	0 (iy)
   2345 20 07              7416 	jr	NZ,00119$
   2347 FD 21r12s42        7417 	ld	iy,#_tilei
   234B FD 34 01           7418 	inc	1 (iy)
   234E                    7419 00119$:
                           7420 ;demo.c:999: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   234E 3Ar14s42           7421 	ld	a,(#_tilex+0)
   2351 D6 00              7422 	sub	a,#0x00
   2353 3Ar15s42           7423 	ld	a,(#_tilex+1)
   2356 DE 01              7424 	sbc	a,#0x01
   2358 FAr7Ds23           7425 	jp	M,00110$
   235B 21r14s42           7426 	ld	hl,#_tilex + 0
   235E 36 00              7427 	ld	(hl), #0x00
   2360 21r15s42           7428 	ld	hl,#_tilex + 1
   2363 36 00              7429 	ld	(hl), #0x00
   2365 21r16s42           7430 	ld	hl,#_tiley
   2368 7E                 7431 	ld	a,(hl)
   2369 C6 10              7432 	add	a,#0x10
   236B 23                 7433 	inc	hl
   236C 2B                 7434 	dec	hl
   236D C5                 7435 	push	bc
   236E 4F                 7436 	ld	c, a
   236F 23                 7437 	inc	hl
   2370 7E                 7438 	ld	a, (hl)
   2371 47                 7439 	ld	b, a
   2372 79                 7440 	ld	a, c
   2373 2B                 7441 	dec	hl
   2374 77                 7442 	ld	(hl), a
   2375 78                 7443 	ld	a, b
   2376 C1                 7444 	pop	bc
   2377 CE 00              7445 	adc	a,#0x00
   2379 23                 7446 	inc	hl
   237A 77                 7447 	ld	(hl),a
   237B 18 06              7448 	jr	00112$
   237D                    7449 00110$:
                           7450 ;demo.c:995: for (i=0;i<20;i++) {
   237D DD 34 FF           7451 	inc	-1 (ix)
   2380 C3rDBs22           7452 	jp	00108$
   2383                    7453 00112$:
   2383 DD F9              7454 	ld	sp,ix
   2385 DD E1              7455 	pop	ix
   2387 C9                 7456 	ret
   2388                    7457 _drawtilescreen_end::
                           7458 ;demo.c:1004: void drawtilescreen_full(char* tripic) {
                           7459 ;	---------------------------------
                           7460 ; Function drawtilescreen_full
                           7461 ; ---------------------------------
   2388                    7462 _drawtilescreen_full_start::
   2388                    7463 _drawtilescreen_full:
   2388 DD E5              7464 	push	ix
   238A DD 21 00 00        7465 	ld	ix,#0
   238E DD 39              7466 	add	ix,sp
   2390 21 F8 FF           7467 	ld	hl,#-8
   2393 39                 7468 	add	hl,sp
   2394 F9                 7469 	ld	sp,hl
                           7470 ;demo.c:1005: int x = 0;
   2395 DD 36 FE 00        7471 	ld	-2 (ix),#0x00
   2399 DD 36 FF 00        7472 	ld	-1 (ix),#0x00
                           7473 ;demo.c:1008: while(i < 192) {
   239D DD 36 FC 00        7474 	ld	-4 (ix),#0x00
   23A1 DD 36 FD 00        7475 	ld	-3 (ix),#0x00
   23A5 DD 36 FA 00        7476 	ld	-6 (ix),#0x00
   23A9 DD 36 FB 00        7477 	ld	-5 (ix),#0x00
   23AD                    7478 00103$:
   23AD DD 7E FA           7479 	ld	a,-6 (ix)
   23B0 D6 C0              7480 	sub	a,#0xC0
   23B2 DD 7E FB           7481 	ld	a,-5 (ix)
   23B5 DE 00              7482 	sbc	a,#0x00
   23B7 F2r3Es24           7483 	jp	P,00106$
                           7484 ;demo.c:1009: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   23BA DD 7E FC           7485 	ld	a,-4 (ix)
   23BD DD 77 F8           7486 	ld	-8 (ix),a
   23C0 DD 7E FE           7487 	ld	a,-2 (ix)
   23C3 DD 77 F9           7488 	ld	-7 (ix),a
   23C6 DD 7E 04           7489 	ld	a,4 (ix)
   23C9 DD 86 FA           7490 	add	a,-6 (ix)
   23CC 4F                 7491 	ld	c,a
   23CD DD 7E 05           7492 	ld	a,5 (ix)
   23D0 DD 8E FB           7493 	adc	a,-5 (ix)
   23D3 47                 7494 	ld	b,a
   23D4 0A                 7495 	ld	a,(bc)
   23D5 4F                 7496 	ld	c,a
   23D6 87                 7497 	add	a,a
   23D7 C6r88              7498 	add	a,#<_tri_lookup_y
   23D9 6F                 7499 	ld	l,a
   23DA 3Es01              7500 	ld	a,#>_tri_lookup_y
   23DC CE 00              7501 	adc	a,#0x00
   23DE 67                 7502 	ld	h,a
   23DF 46                 7503 	ld	b,(hl)
   23E0 23                 7504 	inc	hl
   23E1 56                 7505 	ld	d,(hl)
   23E2 3Er00              7506 	ld	a,#<_tri_lookup_x
   23E4 81                 7507 	add	a,c
   23E5 6F                 7508 	ld	l,a
   23E6 3Es01              7509 	ld	a,#>_tri_lookup_x
   23E8 CE 00              7510 	adc	a,#0x00
   23EA 67                 7511 	ld	h,a
   23EB 4E                 7512 	ld	c,(hl)
   23EC DD 66 F8           7513 	ld	h,-8 (ix)
   23EF DD 6E F9           7514 	ld	l,-7 (ix)
   23F2 E5                 7515 	push	hl
   23F3 58                 7516 	ld	e,b
   23F4 D5                 7517 	push	de
   23F5 79                 7518 	ld	a,c
   23F6 F5                 7519 	push	af
   23F7 33                 7520 	inc	sp
   23F8 CDr3As22           7521 	call	_drawtritile
   23FB F1                 7522 	pop	af
   23FC F1                 7523 	pop	af
   23FD 33                 7524 	inc	sp
                           7525 ;demo.c:1010: x+=16;
   23FE DD 7E FE           7526 	ld	a,-2 (ix)
   2401 C6 10              7527 	add	a,#0x10
   2403 DD 77 FE           7528 	ld	-2 (ix),a
   2406 DD 7E FF           7529 	ld	a,-1 (ix)
   2409 CE 00              7530 	adc	a,#0x00
   240B DD 77 FF           7531 	ld	-1 (ix),a
                           7532 ;demo.c:1011: if (x >= 256) {x = 0; y+=16;}
   240E DD 7E FE           7533 	ld	a,-2 (ix)
   2411 D6 00              7534 	sub	a,#0x00
   2413 DD 7E FF           7535 	ld	a,-1 (ix)
   2416 DE 01              7536 	sbc	a,#0x01
   2418 FAr33s24           7537 	jp	M,00102$
   241B DD 36 FE 00        7538 	ld	-2 (ix),#0x00
   241F DD 36 FF 00        7539 	ld	-1 (ix),#0x00
   2423 DD 7E FC           7540 	ld	a,-4 (ix)
   2426 C6 10              7541 	add	a,#0x10
   2428 DD 77 FC           7542 	ld	-4 (ix),a
   242B DD 7E FD           7543 	ld	a,-3 (ix)
   242E CE 00              7544 	adc	a,#0x00
   2430 DD 77 FD           7545 	ld	-3 (ix),a
   2433                    7546 00102$:
                           7547 ;demo.c:1012: i++;
   2433 DD 34 FA           7548 	inc	-6 (ix)
   2436 20 03              7549 	jr	NZ,00112$
   2438 DD 34 FB           7550 	inc	-5 (ix)
   243B                    7551 00112$:
   243B C3rADs23           7552 	jp	00103$
   243E                    7553 00106$:
   243E DD F9              7554 	ld	sp,ix
   2440 DD E1              7555 	pop	ix
   2442 C9                 7556 	ret
   2443                    7557 _drawtilescreen_full_end::
                           7558 ;demo.c:1028: void tritiles() {
                           7559 ;	---------------------------------
                           7560 ; Function tritiles
                           7561 ; ---------------------------------
   2443                    7562 _tritiles_start::
   2443                    7563 _tritiles:
   2443 DD E5              7564 	push	ix
   2445 DD 21 00 00        7565 	ld	ix,#0
   2449 DD 39              7566 	add	ix,sp
   244B 21 FB FF           7567 	ld	hl,#-5
   244E 39                 7568 	add	hl,sp
   244F F9                 7569 	ld	sp,hl
                           7570 ;demo.c:1035: if (tri_inited == 0 || tri_inited == 2) {
   2450 AF                 7571 	xor	a,a
   2451 FD 21r11s42        7572 	ld	iy,#_tri_inited
   2455 FD B6 00           7573 	or	a,0 (iy)
   2458 28 0C              7574 	jr	Z,00109$
   245A FD 21r11s42        7575 	ld	iy,#_tri_inited
   245E FD 7E 00           7576 	ld	a,0 (iy)
   2461 D6 02              7577 	sub	a,#0x02
   2463 C2r6Fs25           7578 	jp	NZ,00110$
   2466                    7579 00109$:
                           7580 ;demo.c:1037: cmd.size_x = 2;
   2466 21r32s41           7581 	ld	hl, #_cmd + 8
   2469 36 02              7582 	ld	(hl),#0x02
   246B 23                 7583 	inc	hl
   246C 36 00              7584 	ld	(hl),#0x00
                           7585 ;demo.c:1038: cmd.size_y = 212;
   246E 21r34s41           7586 	ld	hl, #_cmd + 10
   2471 36 D4              7587 	ld	(hl),#0xD4
   2473 23                 7588 	inc	hl
   2474 36 00              7589 	ld	(hl),#0x00
                           7590 ;demo.c:1039: cmd.data = 0;
                           7591 ;demo.c:1040: cmd.argument = 0x00; // from 70xY to left
   2476 3E 00              7592 	ld	a,#0x00
   2478 32r36s41           7593 	ld	(#_cmd + 12),a
   247B 32r37s41           7594 	ld	(#_cmd + 13),a
                           7595 ;demo.c:1041: cmd.command = 0xd0; // vram to vram, y only
   247E 01r38s41           7596 	ld	bc,#_cmd + 14
   2481 3E D0              7597 	ld	a,#0xD0
   2483 02                 7598 	ld	(bc),a
                           7599 ;demo.c:1042: cmd.source_x = 255;
   2484 21r2As41           7600 	ld	hl,#_cmd
   2487 36 FF              7601 	ld	(hl),#0xFF
   2489 23                 7602 	inc	hl
   248A 36 00              7603 	ld	(hl),#0x00
                           7604 ;demo.c:1043: cmd.source_y = 0;
   248C 21r2Cs41           7605 	ld	hl, #_cmd + 2
   248F 36 00              7606 	ld	(hl),#0x00
   2491 23                 7607 	inc	hl
   2492 36 00              7608 	ld	(hl),#0x00
                           7609 ;demo.c:1045: for (x = 0; x < 256; x+=2) {
   2494 01 00 00           7610 	ld	bc,#0x0000
   2497                    7611 00170$:
   2497 79                 7612 	ld	a,c
   2498 D6 00              7613 	sub	a,#0x00
   249A 78                 7614 	ld	a,b
   249B DE 01              7615 	sbc	a,#0x01
   249D F2rD2s24           7616 	jp	P,00173$
                           7617 ;demo.c:1046: waitVB();
   24A0 76                 7618 		halt 
                           7619 ;demo.c:1047: cmd.dest_y = 256;
   24A1 11r30s41           7620 	ld	de,#_cmd + 6
   24A4 EB                 7621 	ex	de,hl
   24A5 36 00              7622 	ld	(hl),#0x00
   24A7 23                 7623 	inc	hl
   24A8 36 01              7624 	ld	(hl),#0x01
                           7625 ;demo.c:1048: cmd.dest_x = x;
   24AA 11r2Es41           7626 	ld	de,#_cmd + 4
   24AD EB                 7627 	ex	de,hl
   24AE 71                 7628 	ld	(hl),c
   24AF 23                 7629 	inc	hl
   24B0 70                 7630 	ld	(hl),b
                           7631 ;demo.c:1049: vdp_copier(&cmd);
   24B1 C5                 7632 	push	bc
   24B2 21r2As41           7633 	ld	hl,#_cmd
   24B5 E5                 7634 	push	hl
   24B6 CDr00s00           7635 	call	_vdp_copier
   24B9 F1                 7636 	pop	af
   24BA C1                 7637 	pop	bc
                           7638 ;demo.c:1050: cmd.dest_y = 0;
   24BB 11r30s41           7639 	ld	de,#_cmd + 6
   24BE EB                 7640 	ex	de,hl
   24BF 36 00              7641 	ld	(hl),#0x00
   24C1 23                 7642 	inc	hl
   24C2 36 00              7643 	ld	(hl),#0x00
                           7644 ;demo.c:1051: vdp_copier(&cmd);
   24C4 C5                 7645 	push	bc
   24C5 21r2As41           7646 	ld	hl,#_cmd
   24C8 E5                 7647 	push	hl
   24C9 CDr00s00           7648 	call	_vdp_copier
   24CC F1                 7649 	pop	af
   24CD C1                 7650 	pop	bc
                           7651 ;demo.c:1045: for (x = 0; x < 256; x+=2) {
   24CE 03                 7652 	inc	bc
   24CF 03                 7653 	inc	bc
   24D0 18 C5              7654 	jr	00170$
   24D2                    7655 00173$:
                           7656 ;demo.c:1054: if (tri_inited == 0) vdp_load_palette(boxes_palette);
   24D2 AF                 7657 	xor	a,a
   24D3 21r11s42           7658 	ld	hl,#_tri_inited + 0
   24D6 B6                 7659 	or	a,(hl)
   24D7 20 0A              7660 	jr	NZ,00104$
   24D9 21rE6s40           7661 	ld	hl,#_boxes_palette
   24DC E5                 7662 	push	hl
   24DD CDr00s00           7663 	call	_vdp_load_palette
   24E0 F1                 7664 	pop	af
   24E1 18 46              7665 	jr	00105$
   24E3                    7666 00104$:
                           7667 ;demo.c:1055: else if (tri_inited == 2) { 
   24E3 3Ar11s42           7668 	ld	a,(#_tri_inited+0)
   24E6 D6 02              7669 	sub	a,#0x02
   24E8 20 3F              7670 	jr	NZ,00105$
                           7671 ;demo.c:1056: vdp_load_palette(boxes_palette); 
   24EA 21rE6s40           7672 	ld	hl,#_boxes_palette
   24ED E5                 7673 	push	hl
   24EE CDr00s00           7674 	call	_vdp_load_palette
   24F1 F1                 7675 	pop	af
                           7676 ;demo.c:1057: triframes = 0; 
   24F2 21r24s42           7677 	ld	hl,#_triframes + 0
   24F5 36 00              7678 	ld	(hl), #0x00
   24F7 21r25s42           7679 	ld	hl,#_triframes + 1
   24FA 36 00              7680 	ld	(hl), #0x00
                           7681 ;demo.c:1059: tripal[0] = 4;
   24FC 21r19s42           7682 	ld	hl,#_tripal
   24FF 36 04              7683 	ld	(hl),#0x04
                           7684 ;demo.c:1060: tripal[1] = 4;
   2501 3E 04              7685 	ld	a,#0x04
   2503 32r1As42           7686 	ld	(#_tripal + 1),a
                           7687 ;demo.c:1061: tripal[2] = 3;
   2506 3E 03              7688 	ld	a,#0x03
   2508 32r1Bs42           7689 	ld	(#_tripal + 2),a
                           7690 ;demo.c:1063: tripal[3] = 2;
   250B 3E 02              7691 	ld	a,#0x02
   250D 32r1Cs42           7692 	ld	(#_tripal + 3),a
                           7693 ;demo.c:1064: tripal[4] = 3;
   2510 3E 03              7694 	ld	a,#0x03
   2512 32r1Ds42           7695 	ld	(#_tripal + 4),a
                           7696 ;demo.c:1065: tripal[5] = 4;
   2515 3E 04              7697 	ld	a,#0x04
   2517 32r1Es42           7698 	ld	(#_tripal + 5),a
                           7699 ;demo.c:1067: tripal[6] = 1;
   251A 3E 01              7700 	ld	a,#0x01
   251C 32r1Fs42           7701 	ld	(#_tripal + 6),a
                           7702 ;demo.c:1068: tripal[7] = 3;
   251F 3E 03              7703 	ld	a,#0x03
   2521 32r20s42           7704 	ld	(#_tripal + 7),a
                           7705 ;demo.c:1069: tripal[8] = 1;
   2524 3E 01              7706 	ld	a,#0x01
   2526 32r21s42           7707 	ld	(#_tripal + 8),a
   2529                    7708 00105$:
                           7709 ;demo.c:1071: tri_inited++;
   2529 FD 21r11s42        7710 	ld	iy,#_tri_inited
   252D FD 34 00           7711 	inc	0 (iy)
                           7712 ;demo.c:1072: vdp_register(9,2); // 50hz,192
   2530 21 09 02           7713 	ld	hl,#0x0209
   2533 E5                 7714 	push	hl
   2534 CDr00s00           7715 	call	_vdp_register
   2537 F1                 7716 	pop	af
                           7717 ;demo.c:1074: msx2_palette(15,0,0,0);
   2538 21 00 00           7718 	ld	hl,#0x0000
   253B E5                 7719 	push	hl
   253C 2E 0F              7720 	ld	l, #0x0F
   253E E5                 7721 	push	hl
   253F CDr00s00           7722 	call	_msx2_palette
   2542 F1                 7723 	pop	af
   2543 F1                 7724 	pop	af
                           7725 ;demo.c:1076: if (tri_inited == 1) drawtilescreen_full(tri_center);
   2544 3Ar11s42           7726 	ld	a,(#_tri_inited+0)
   2547 D6 01              7727 	sub	a,#0x01
   2549 20 0A              7728 	jr	NZ,00107$
   254B 21r2Cs01           7729 	ld	hl,#_tri_center
   254E E5                 7730 	push	hl
   254F CDr88s23           7731 	call	_drawtilescreen_full
   2552 F1                 7732 	pop	af
   2553 18 08              7733 	jr	00108$
   2555                    7734 00107$:
                           7735 ;demo.c:1077: else drawtilescreen_full(tri_inva2);
   2555 21rACs05           7736 	ld	hl,#_tri_inva2
   2558 E5                 7737 	push	hl
   2559 CDr88s23           7738 	call	_drawtilescreen_full
   255C F1                 7739 	pop	af
   255D                    7740 00108$:
                           7741 ;demo.c:1078: vdp_register(2, 0x1f);
   255D 21 02 1F           7742 	ld	hl,#0x1F02
   2560 E5                 7743 	push	hl
   2561 CDr00s00           7744 	call	_vdp_register
   2564 F1                 7745 	pop	af
                           7746 ;demo.c:1079: tick = 0;
   2565 21r28s41           7747 	ld	hl,#_tick + 0
   2568 36 00              7748 	ld	(hl), #0x00
   256A 21r29s41           7749 	ld	hl,#_tick + 1
   256D 36 00              7750 	ld	(hl), #0x00
   256F                    7751 00110$:
                           7752 ;demo.c:1083: if (tri_inited == 1) triframes++;
   256F 3Ar11s42           7753 	ld	a,(#_tri_inited+0)
   2572 D6 01              7754 	sub	a,#0x01
   2574 20 10              7755 	jr	NZ,00113$
   2576 FD 21r24s42        7756 	ld	iy,#_triframes
   257A FD 34 00           7757 	inc	0 (iy)
   257D 20 07              7758 	jr	NZ,00231$
   257F FD 21r24s42        7759 	ld	iy,#_triframes
   2583 FD 34 01           7760 	inc	1 (iy)
   2586                    7761 00231$:
   2586                    7762 00113$:
                           7763 ;demo.c:1085: if (triframes == 150) { tilei = 0; tilex = 0; tiley = 0; }
   2586 3Ar24s42           7764 	ld	a,(#_triframes+0)
   2589 D6 96              7765 	sub	a,#0x96
   258B 20 06              7766 	jr	NZ,00232$
   258D 3Ar25s42           7767 	ld	a,(#_triframes+1)
   2590 B7                 7768 	or	a,a
   2591 28 02              7769 	jr	Z,00233$
   2593                    7770 00232$:
   2593 18 1E              7771 	jr	00115$
   2595                    7772 00233$:
   2595 21r12s42           7773 	ld	hl,#_tilei + 0
   2598 36 00              7774 	ld	(hl), #0x00
   259A 21r13s42           7775 	ld	hl,#_tilei + 1
   259D 36 00              7776 	ld	(hl), #0x00
   259F 21r14s42           7777 	ld	hl,#_tilex + 0
   25A2 36 00              7778 	ld	(hl), #0x00
   25A4 21r15s42           7779 	ld	hl,#_tilex + 1
   25A7 36 00              7780 	ld	(hl), #0x00
   25A9 21r16s42           7781 	ld	hl,#_tiley + 0
   25AC 36 00              7782 	ld	(hl), #0x00
   25AE 21r17s42           7783 	ld	hl,#_tiley + 1
   25B1 36 00              7784 	ld	(hl), #0x00
   25B3                    7785 00115$:
                           7786 ;demo.c:1086: if (triframes >= 150 && triframes < 300) {
   25B3 3Ar24s42           7787 	ld	a,(#_triframes+0)
   25B6 D6 96              7788 	sub	a,#0x96
   25B8 3Ar25s42           7789 	ld	a,(#_triframes+1)
   25BB DE 00              7790 	sbc	a,#0x00
   25BD FArD5s25           7791 	jp	M,00117$
   25C0 3Ar24s42           7792 	ld	a,(#_triframes+0)
   25C3 D6 2C              7793 	sub	a,#0x2C
   25C5 3Ar25s42           7794 	ld	a,(#_triframes+1)
   25C8 DE 01              7795 	sbc	a,#0x01
   25CA F2rD5s25           7796 	jp	P,00117$
                           7797 ;demo.c:1087: drawtilescreen(tri_up);
   25CD 21rECs01           7798 	ld	hl,#_tri_up
   25D0 E5                 7799 	push	hl
   25D1 CDr9Es22           7800 	call	_drawtilescreen
   25D4 F1                 7801 	pop	af
   25D5                    7802 00117$:
                           7803 ;demo.c:1090: if (triframes == 300) { tilei = 0; tilex = 0; tiley = 0; }
   25D5 3Ar24s42           7804 	ld	a,(#_triframes+0)
   25D8 D6 2C              7805 	sub	a,#0x2C
   25DA 20 07              7806 	jr	NZ,00234$
   25DC 3Ar25s42           7807 	ld	a,(#_triframes+1)
   25DF D6 01              7808 	sub	a,#0x01
   25E1 28 02              7809 	jr	Z,00235$
   25E3                    7810 00234$:
   25E3 18 1E              7811 	jr	00120$
   25E5                    7812 00235$:
   25E5 21r12s42           7813 	ld	hl,#_tilei + 0
   25E8 36 00              7814 	ld	(hl), #0x00
   25EA 21r13s42           7815 	ld	hl,#_tilei + 1
   25ED 36 00              7816 	ld	(hl), #0x00
   25EF 21r14s42           7817 	ld	hl,#_tilex + 0
   25F2 36 00              7818 	ld	(hl), #0x00
   25F4 21r15s42           7819 	ld	hl,#_tilex + 1
   25F7 36 00              7820 	ld	(hl), #0x00
   25F9 21r16s42           7821 	ld	hl,#_tiley + 0
   25FC 36 00              7822 	ld	(hl), #0x00
   25FE 21r17s42           7823 	ld	hl,#_tiley + 1
   2601 36 00              7824 	ld	(hl), #0x00
   2603                    7825 00120$:
                           7826 ;demo.c:1091: if (triframes >= 300 && triframes < 450) {
   2603 3Ar24s42           7827 	ld	a,(#_triframes+0)
   2606 D6 2C              7828 	sub	a,#0x2C
   2608 3Ar25s42           7829 	ld	a,(#_triframes+1)
   260B DE 01              7830 	sbc	a,#0x01
   260D FAr25s26           7831 	jp	M,00122$
   2610 3Ar24s42           7832 	ld	a,(#_triframes+0)
   2613 D6 C2              7833 	sub	a,#0xC2
   2615 3Ar25s42           7834 	ld	a,(#_triframes+1)
   2618 DE 01              7835 	sbc	a,#0x01
   261A F2r25s26           7836 	jp	P,00122$
                           7837 ;demo.c:1092: drawtilescreen(tri_dia);
   261D 21rACs02           7838 	ld	hl,#_tri_dia
   2620 E5                 7839 	push	hl
   2621 CDr9Es22           7840 	call	_drawtilescreen
   2624 F1                 7841 	pop	af
   2625                    7842 00122$:
                           7843 ;demo.c:1095: if (triframes == 450) { tilei = 0; tilex = 0; tiley = 0; }
   2625 3Ar24s42           7844 	ld	a,(#_triframes+0)
   2628 D6 C2              7845 	sub	a,#0xC2
   262A 20 07              7846 	jr	NZ,00236$
   262C 3Ar25s42           7847 	ld	a,(#_triframes+1)
   262F D6 01              7848 	sub	a,#0x01
   2631 28 02              7849 	jr	Z,00237$
   2633                    7850 00236$:
   2633 18 1E              7851 	jr	00125$
   2635                    7852 00237$:
   2635 21r12s42           7853 	ld	hl,#_tilei + 0
   2638 36 00              7854 	ld	(hl), #0x00
   263A 21r13s42           7855 	ld	hl,#_tilei + 1
   263D 36 00              7856 	ld	(hl), #0x00
   263F 21r14s42           7857 	ld	hl,#_tilex + 0
   2642 36 00              7858 	ld	(hl), #0x00
   2644 21r15s42           7859 	ld	hl,#_tilex + 1
   2647 36 00              7860 	ld	(hl), #0x00
   2649 21r16s42           7861 	ld	hl,#_tiley + 0
   264C 36 00              7862 	ld	(hl), #0x00
   264E 21r17s42           7863 	ld	hl,#_tiley + 1
   2651 36 00              7864 	ld	(hl), #0x00
   2653                    7865 00125$:
                           7866 ;demo.c:1096: if (triframes >= 450 && triframes < 600) {
   2653 3Ar24s42           7867 	ld	a,(#_triframes+0)
   2656 D6 C2              7868 	sub	a,#0xC2
   2658 3Ar25s42           7869 	ld	a,(#_triframes+1)
   265B DE 01              7870 	sbc	a,#0x01
   265D FAr75s26           7871 	jp	M,00127$
   2660 3Ar24s42           7872 	ld	a,(#_triframes+0)
   2663 D6 58              7873 	sub	a,#0x58
   2665 3Ar25s42           7874 	ld	a,(#_triframes+1)
   2668 DE 02              7875 	sbc	a,#0x02
   266A F2r75s26           7876 	jp	P,00127$
                           7877 ;demo.c:1097: drawtilescreen(tri_side1);
   266D 21r6Cs03           7878 	ld	hl,#_tri_side1
   2670 E5                 7879 	push	hl
   2671 CDr9Es22           7880 	call	_drawtilescreen
   2674 F1                 7881 	pop	af
   2675                    7882 00127$:
                           7883 ;demo.c:1100: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2675 3Ar24s42           7884 	ld	a,(#_triframes+0)
   2678 D6 58              7885 	sub	a,#0x58
   267A 20 07              7886 	jr	NZ,00238$
   267C 3Ar25s42           7887 	ld	a,(#_triframes+1)
   267F D6 02              7888 	sub	a,#0x02
   2681 28 02              7889 	jr	Z,00239$
   2683                    7890 00238$:
   2683 18 1E              7891 	jr	00130$
   2685                    7892 00239$:
   2685 21r12s42           7893 	ld	hl,#_tilei + 0
   2688 36 00              7894 	ld	(hl), #0x00
   268A 21r13s42           7895 	ld	hl,#_tilei + 1
   268D 36 00              7896 	ld	(hl), #0x00
   268F 21r14s42           7897 	ld	hl,#_tilex + 0
   2692 36 00              7898 	ld	(hl), #0x00
   2694 21r15s42           7899 	ld	hl,#_tilex + 1
   2697 36 00              7900 	ld	(hl), #0x00
   2699 21r16s42           7901 	ld	hl,#_tiley + 0
   269C 36 00              7902 	ld	(hl), #0x00
   269E 21r17s42           7903 	ld	hl,#_tiley + 1
   26A1 36 00              7904 	ld	(hl), #0x00
   26A3                    7905 00130$:
                           7906 ;demo.c:1101: if (triframes >= 600 && triframes < 750) {
   26A3 3Ar24s42           7907 	ld	a,(#_triframes+0)
   26A6 D6 58              7908 	sub	a,#0x58
   26A8 3Ar25s42           7909 	ld	a,(#_triframes+1)
   26AB DE 02              7910 	sbc	a,#0x02
   26AD FArC5s26           7911 	jp	M,00132$
   26B0 3Ar24s42           7912 	ld	a,(#_triframes+0)
   26B3 D6 EE              7913 	sub	a,#0xEE
   26B5 3Ar25s42           7914 	ld	a,(#_triframes+1)
   26B8 DE 02              7915 	sbc	a,#0x02
   26BA F2rC5s26           7916 	jp	P,00132$
                           7917 ;demo.c:1102: drawtilescreen(tri_side2);
   26BD 21r2Cs04           7918 	ld	hl,#_tri_side2
   26C0 E5                 7919 	push	hl
   26C1 CDr9Es22           7920 	call	_drawtilescreen
   26C4 F1                 7921 	pop	af
   26C5                    7922 00132$:
                           7923 ;demo.c:1105: if (triframes == 750) { tilei = 0; tilex = 0; tiley = 0; }
   26C5 3Ar24s42           7924 	ld	a,(#_triframes+0)
   26C8 D6 EE              7925 	sub	a,#0xEE
   26CA 20 07              7926 	jr	NZ,00240$
   26CC 3Ar25s42           7927 	ld	a,(#_triframes+1)
   26CF D6 02              7928 	sub	a,#0x02
   26D1 28 02              7929 	jr	Z,00241$
   26D3                    7930 00240$:
   26D3 18 1E              7931 	jr	00135$
   26D5                    7932 00241$:
   26D5 21r12s42           7933 	ld	hl,#_tilei + 0
   26D8 36 00              7934 	ld	(hl), #0x00
   26DA 21r13s42           7935 	ld	hl,#_tilei + 1
   26DD 36 00              7936 	ld	(hl), #0x00
   26DF 21r14s42           7937 	ld	hl,#_tilex + 0
   26E2 36 00              7938 	ld	(hl), #0x00
   26E4 21r15s42           7939 	ld	hl,#_tilex + 1
   26E7 36 00              7940 	ld	(hl), #0x00
   26E9 21r16s42           7941 	ld	hl,#_tiley + 0
   26EC 36 00              7942 	ld	(hl), #0x00
   26EE 21r17s42           7943 	ld	hl,#_tiley + 1
   26F1 36 00              7944 	ld	(hl), #0x00
   26F3                    7945 00135$:
                           7946 ;demo.c:1106: if (triframes >= 750 && triframes < 900) {
   26F3 3Ar24s42           7947 	ld	a,(#_triframes+0)
   26F6 D6 EE              7948 	sub	a,#0xEE
   26F8 3Ar25s42           7949 	ld	a,(#_triframes+1)
   26FB DE 02              7950 	sbc	a,#0x02
   26FD FAr15s27           7951 	jp	M,00137$
   2700 3Ar24s42           7952 	ld	a,(#_triframes+0)
   2703 D6 84              7953 	sub	a,#0x84
   2705 3Ar25s42           7954 	ld	a,(#_triframes+1)
   2708 DE 03              7955 	sbc	a,#0x03
   270A F2r15s27           7956 	jp	P,00137$
                           7957 ;demo.c:1107: drawtilescreen(tri_inva1);
   270D 21rECs04           7958 	ld	hl,#_tri_inva1
   2710 E5                 7959 	push	hl
   2711 CDr9Es22           7960 	call	_drawtilescreen
   2714 F1                 7961 	pop	af
   2715                    7962 00137$:
                           7963 ;demo.c:1110: if (triframes == 900) { tilei = 0; tilex = 0; tiley = 0; }
   2715 3Ar24s42           7964 	ld	a,(#_triframes+0)
   2718 D6 84              7965 	sub	a,#0x84
   271A 20 07              7966 	jr	NZ,00242$
   271C 3Ar25s42           7967 	ld	a,(#_triframes+1)
   271F D6 03              7968 	sub	a,#0x03
   2721 28 02              7969 	jr	Z,00243$
   2723                    7970 00242$:
   2723 18 1E              7971 	jr	00140$
   2725                    7972 00243$:
   2725 21r12s42           7973 	ld	hl,#_tilei + 0
   2728 36 00              7974 	ld	(hl), #0x00
   272A 21r13s42           7975 	ld	hl,#_tilei + 1
   272D 36 00              7976 	ld	(hl), #0x00
   272F 21r14s42           7977 	ld	hl,#_tilex + 0
   2732 36 00              7978 	ld	(hl), #0x00
   2734 21r15s42           7979 	ld	hl,#_tilex + 1
   2737 36 00              7980 	ld	(hl), #0x00
   2739 21r16s42           7981 	ld	hl,#_tiley + 0
   273C 36 00              7982 	ld	(hl), #0x00
   273E 21r17s42           7983 	ld	hl,#_tiley + 1
   2741 36 00              7984 	ld	(hl), #0x00
   2743                    7985 00140$:
                           7986 ;demo.c:1111: if (triframes >= 900 && triframes < 1050) {
   2743 3Ar24s42           7987 	ld	a,(#_triframes+0)
   2746 D6 84              7988 	sub	a,#0x84
   2748 3Ar25s42           7989 	ld	a,(#_triframes+1)
   274B DE 03              7990 	sbc	a,#0x03
   274D FAr65s27           7991 	jp	M,00142$
   2750 3Ar24s42           7992 	ld	a,(#_triframes+0)
   2753 D6 1A              7993 	sub	a,#0x1A
   2755 3Ar25s42           7994 	ld	a,(#_triframes+1)
   2758 DE 04              7995 	sbc	a,#0x04
   275A F2r65s27           7996 	jp	P,00142$
                           7997 ;demo.c:1112: drawtilescreen(tri_inva2);
   275D 21rACs05           7998 	ld	hl,#_tri_inva2
   2760 E5                 7999 	push	hl
   2761 CDr9Es22           8000 	call	_drawtilescreen
   2764 F1                 8001 	pop	af
   2765                    8002 00142$:
                           8003 ;demo.c:1115: if (triframes == 1050) { tilei = 0; tilex = 0; tiley = 0; }
   2765 3Ar24s42           8004 	ld	a,(#_triframes+0)
   2768 D6 1A              8005 	sub	a,#0x1A
   276A 20 07              8006 	jr	NZ,00244$
   276C 3Ar25s42           8007 	ld	a,(#_triframes+1)
   276F D6 04              8008 	sub	a,#0x04
   2771 28 02              8009 	jr	Z,00245$
   2773                    8010 00244$:
   2773 18 1E              8011 	jr	00145$
   2775                    8012 00245$:
   2775 21r12s42           8013 	ld	hl,#_tilei + 0
   2778 36 00              8014 	ld	(hl), #0x00
   277A 21r13s42           8015 	ld	hl,#_tilei + 1
   277D 36 00              8016 	ld	(hl), #0x00
   277F 21r14s42           8017 	ld	hl,#_tilex + 0
   2782 36 00              8018 	ld	(hl), #0x00
   2784 21r15s42           8019 	ld	hl,#_tilex + 1
   2787 36 00              8020 	ld	(hl), #0x00
   2789 21r16s42           8021 	ld	hl,#_tiley + 0
   278C 36 00              8022 	ld	(hl), #0x00
   278E 21r17s42           8023 	ld	hl,#_tiley + 1
   2791 36 00              8024 	ld	(hl), #0x00
   2793                    8025 00145$:
                           8026 ;demo.c:1116: if (triframes >= 1050 && triframes < 1200) {
   2793 3Ar24s42           8027 	ld	a,(#_triframes+0)
   2796 D6 1A              8028 	sub	a,#0x1A
   2798 3Ar25s42           8029 	ld	a,(#_triframes+1)
   279B DE 04              8030 	sbc	a,#0x04
   279D FArB5s27           8031 	jp	M,00147$
   27A0 3Ar24s42           8032 	ld	a,(#_triframes+0)
   27A3 D6 B0              8033 	sub	a,#0xB0
   27A5 3Ar25s42           8034 	ld	a,(#_triframes+1)
   27A8 DE 04              8035 	sbc	a,#0x04
   27AA F2rB5s27           8036 	jp	P,00147$
                           8037 ;demo.c:1117: drawtilescreen(tri_inva3);
   27AD 21r6Cs06           8038 	ld	hl,#_tri_inva3
   27B0 E5                 8039 	push	hl
   27B1 CDr9Es22           8040 	call	_drawtilescreen
   27B4 F1                 8041 	pop	af
   27B5                    8042 00147$:
                           8043 ;demo.c:1120: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   27B5 3Ar24s42           8044 	ld	a,(#_triframes+0)
   27B8 D6 B0              8045 	sub	a,#0xB0
   27BA 20 07              8046 	jr	NZ,00246$
   27BC 3Ar25s42           8047 	ld	a,(#_triframes+1)
   27BF D6 04              8048 	sub	a,#0x04
   27C1 28 02              8049 	jr	Z,00247$
   27C3                    8050 00246$:
   27C3 18 1E              8051 	jr	00150$
   27C5                    8052 00247$:
   27C5 21r12s42           8053 	ld	hl,#_tilei + 0
   27C8 36 00              8054 	ld	(hl), #0x00
   27CA 21r13s42           8055 	ld	hl,#_tilei + 1
   27CD 36 00              8056 	ld	(hl), #0x00
   27CF 21r14s42           8057 	ld	hl,#_tilex + 0
   27D2 36 00              8058 	ld	(hl), #0x00
   27D4 21r15s42           8059 	ld	hl,#_tilex + 1
   27D7 36 00              8060 	ld	(hl), #0x00
   27D9 21r16s42           8061 	ld	hl,#_tiley + 0
   27DC 36 00              8062 	ld	(hl), #0x00
   27DE 21r17s42           8063 	ld	hl,#_tiley + 1
   27E1 36 00              8064 	ld	(hl), #0x00
   27E3                    8065 00150$:
                           8066 ;demo.c:1121: if (triframes >= 1200 && triframes < 1350) {
   27E3 3Ar24s42           8067 	ld	a,(#_triframes+0)
   27E6 D6 B0              8068 	sub	a,#0xB0
   27E8 3Ar25s42           8069 	ld	a,(#_triframes+1)
   27EB DE 04              8070 	sbc	a,#0x04
   27ED FAr05s28           8071 	jp	M,00152$
   27F0 3Ar24s42           8072 	ld	a,(#_triframes+0)
   27F3 D6 46              8073 	sub	a,#0x46
   27F5 3Ar25s42           8074 	ld	a,(#_triframes+1)
   27F8 DE 05              8075 	sbc	a,#0x05
   27FA F2r05s28           8076 	jp	P,00152$
                           8077 ;demo.c:1122: drawtilescreen(tri_inva4);
   27FD 21r2Cs07           8078 	ld	hl,#_tri_inva4
   2800 E5                 8079 	push	hl
   2801 CDr9Es22           8080 	call	_drawtilescreen
   2804 F1                 8081 	pop	af
   2805                    8082 00152$:
                           8083 ;demo.c:1125: if (triframes == 1350) { tilei = 0; tilex = 0; tiley = 0; }
   2805 3Ar24s42           8084 	ld	a,(#_triframes+0)
   2808 D6 46              8085 	sub	a,#0x46
   280A 20 07              8086 	jr	NZ,00248$
   280C 3Ar25s42           8087 	ld	a,(#_triframes+1)
   280F D6 05              8088 	sub	a,#0x05
   2811 28 02              8089 	jr	Z,00249$
   2813                    8090 00248$:
   2813 18 1E              8091 	jr	00155$
   2815                    8092 00249$:
   2815 21r12s42           8093 	ld	hl,#_tilei + 0
   2818 36 00              8094 	ld	(hl), #0x00
   281A 21r13s42           8095 	ld	hl,#_tilei + 1
   281D 36 00              8096 	ld	(hl), #0x00
   281F 21r14s42           8097 	ld	hl,#_tilex + 0
   2822 36 00              8098 	ld	(hl), #0x00
   2824 21r15s42           8099 	ld	hl,#_tilex + 1
   2827 36 00              8100 	ld	(hl), #0x00
   2829 21r16s42           8101 	ld	hl,#_tiley + 0
   282C 36 00              8102 	ld	(hl), #0x00
   282E 21r17s42           8103 	ld	hl,#_tiley + 1
   2831 36 00              8104 	ld	(hl), #0x00
   2833                    8105 00155$:
                           8106 ;demo.c:1126: if (triframes >= 1350 && triframes < 1500) {
   2833 3Ar24s42           8107 	ld	a,(#_triframes+0)
   2836 D6 46              8108 	sub	a,#0x46
   2838 3Ar25s42           8109 	ld	a,(#_triframes+1)
   283B DE 05              8110 	sbc	a,#0x05
   283D FAr55s28           8111 	jp	M,00157$
   2840 3Ar24s42           8112 	ld	a,(#_triframes+0)
   2843 D6 DC              8113 	sub	a,#0xDC
   2845 3Ar25s42           8114 	ld	a,(#_triframes+1)
   2848 DE 05              8115 	sbc	a,#0x05
   284A F2r55s28           8116 	jp	P,00157$
                           8117 ;demo.c:1127: drawtilescreen(tri_center);
   284D 21r2Cs01           8118 	ld	hl,#_tri_center
   2850 E5                 8119 	push	hl
   2851 CDr9Es22           8120 	call	_drawtilescreen
   2854 F1                 8121 	pop	af
   2855                    8122 00157$:
                           8123 ;demo.c:1130: if (triframes > 1500) triframes = 199;
   2855 3E DC              8124 	ld	a,#0xDC
   2857 FD 21r24s42        8125 	ld	iy,#_triframes
   285B FD 96 00           8126 	sub	a,0 (iy)
   285E 3E 05              8127 	ld	a,#0x05
   2860 FD 21r24s42        8128 	ld	iy,#_triframes
   2864 FD 9E 01           8129 	sbc	a,1 (iy)
   2867 F2r74s28           8130 	jp	P,00160$
   286A 21r24s42           8131 	ld	hl,#_triframes + 0
   286D 36 C7              8132 	ld	(hl), #0xC7
   286F 21r25s42           8133 	ld	hl,#_triframes + 1
   2872 36 00              8134 	ld	(hl), #0x00
   2874                    8135 00160$:
                           8136 ;demo.c:1133: msx2_palette(2,0,0,0);
   2874 21 00 00           8137 	ld	hl,#0x0000
   2877 E5                 8138 	push	hl
   2878 2E 02              8139 	ld	l, #0x02
   287A E5                 8140 	push	hl
   287B CDr00s00           8141 	call	_msx2_palette
   287E F1                 8142 	pop	af
   287F F1                 8143 	pop	af
                           8144 ;demo.c:1134: msx2_palette(11,0,0,0);
   2880 21 00 00           8145 	ld	hl,#0x0000
   2883 E5                 8146 	push	hl
   2884 2E 0B              8147 	ld	l, #0x0B
   2886 E5                 8148 	push	hl
   2887 CDr00s00           8149 	call	_msx2_palette
   288A F1                 8150 	pop	af
   288B F1                 8151 	pop	af
                           8152 ;demo.c:1136: if (PLY_PSGReg10 > 4) {
   288C 3E 04              8153 	ld	a,#0x04
   288E FD 21r00s00        8154 	ld	iy,#_PLY_PSGReg10
   2892 FD 96 00           8155 	sub	a,0 (iy)
   2895 D2r2As29           8156 	jp	NC,00162$
                           8157 ;demo.c:1137: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2898 21r00s00           8158 	ld	hl,#_PLY_PSGReg10 + 0
   289B 4E                 8159 	ld	c,(hl)
   289C 06 00              8160 	ld	b,#0x00
   289E 21r22s42           8161 	ld	hl,#_tripaltick + 0
   28A1 5E                 8162 	ld	e,(hl)
   28A2 16 00              8163 	ld	d,#0x00
   28A4 79                 8164 	ld	a,c
   28A5 83                 8165 	add	a,e
   28A6 4F                 8166 	ld	c,a
   28A7 78                 8167 	ld	a,b
   28A8 8A                 8168 	adc	a,d
   28A9 06 00              8169 	ld	b,#0x00
   28AB 21r2Cs00           8170 	ld	hl,#_sintabx
   28AE 09                 8171 	add	hl,bc
   28AF 7E                 8172 	ld	a,(hl)
   28B0 4F                 8173 	ld	c,a
   28B1 06 00              8174 	ld	b,#0x00
   28B3 3E C0              8175 	ld	a,#0xC0
   28B5 91                 8176 	sub	a,c
   28B6 4F                 8177 	ld	c,a
   28B7 3E 00              8178 	ld	a,#0x00
   28B9 98                 8179 	sbc	a,b
   28BA 47                 8180 	ld	b,a
   28BB CB 28              8181 	sra	b
   28BD CB 19              8182 	rr	c
   28BF CB 28              8183 	sra	b
   28C1 CB 19              8184 	rr	c
   28C3 CB 28              8185 	sra	b
   28C5 CB 19              8186 	rr	c
   28C7 41                 8187 	ld	b,c
   28C8 0E 17              8188 	ld	c,#0x17
   28CA C5                 8189 	push	bc
   28CB CDr00s00           8190 	call	_vdp_register
   28CE F1                 8191 	pop	af
                           8192 ;demo.c:1139: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   28CF 21r1Bs42           8193 	ld	hl,#_tripal + 2
   28D2 4E                 8194 	ld	c,(hl)
   28D3 11r1As42           8195 	ld	de,#_tripal + 1
   28D6 1A                 8196 	ld	a,(de)
   28D7 47                 8197 	ld	b,a
   28D8 21r19s42           8198 	ld	hl,#_tripal
   28DB 5E                 8199 	ld	e,(hl)
   28DC 21r00s00           8200 	ld	hl,#_PLY_PSGReg10 + 0
   28DF 56                 8201 	ld	d,(hl)
   28E0 7B                 8202 	ld	a,e
   28E1 82                 8203 	add	a,d
   28E2 5F                 8204 	ld	e,a
   28E3 79                 8205 	ld	a,c
   28E4 F5                 8206 	push	af
   28E5 33                 8207 	inc	sp
   28E6 C5                 8208 	push	bc
   28E7 33                 8209 	inc	sp
   28E8 53                 8210 	ld	d,e
   28E9 1E 03              8211 	ld	e,#0x03
   28EB D5                 8212 	push	de
   28EC CDr00s00           8213 	call	_msx2_palette
   28EF F1                 8214 	pop	af
   28F0 F1                 8215 	pop	af
                           8216 ;demo.c:1140: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   28F1 21r1Es42           8217 	ld	hl,#_tripal + 5
   28F4 4E                 8218 	ld	c,(hl)
   28F5 11r1Ds42           8219 	ld	de,#_tripal + 4
   28F8 1A                 8220 	ld	a,(de)
   28F9 47                 8221 	ld	b,a
   28FA 21r1Cs42           8222 	ld	hl,#_tripal + 3
   28FD 5E                 8223 	ld	e,(hl)
   28FE 79                 8224 	ld	a,c
   28FF F5                 8225 	push	af
   2900 33                 8226 	inc	sp
   2901 C5                 8227 	push	bc
   2902 33                 8228 	inc	sp
   2903 53                 8229 	ld	d,e
   2904 1E 0E              8230 	ld	e,#0x0E
   2906 D5                 8231 	push	de
   2907 CDr00s00           8232 	call	_msx2_palette
   290A F1                 8233 	pop	af
   290B F1                 8234 	pop	af
                           8235 ;demo.c:1141: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   290C 21r21s42           8236 	ld	hl,#_tripal + 8
   290F 4E                 8237 	ld	c,(hl)
   2910 11r20s42           8238 	ld	de,#_tripal + 7
   2913 1A                 8239 	ld	a,(de)
   2914 47                 8240 	ld	b,a
   2915 21r1Fs42           8241 	ld	hl,#_tripal + 6
   2918 5E                 8242 	ld	e,(hl)
   2919 79                 8243 	ld	a,c
   291A F5                 8244 	push	af
   291B 33                 8245 	inc	sp
   291C C5                 8246 	push	bc
   291D 33                 8247 	inc	sp
   291E 53                 8248 	ld	d,e
   291F 1E 06              8249 	ld	e,#0x06
   2921 D5                 8250 	push	de
   2922 CDr00s00           8251 	call	_msx2_palette
   2925 F1                 8252 	pop	af
   2926 F1                 8253 	pop	af
   2927 C3r83s29           8254 	jp	00163$
   292A                    8255 00162$:
                           8256 ;demo.c:1144: vdp_register(VDP_VOFFSET,0);
   292A 21 17 00           8257 	ld	hl,#0x0017
   292D E5                 8258 	push	hl
   292E CDr00s00           8259 	call	_vdp_register
   2931 F1                 8260 	pop	af
                           8261 ;demo.c:1146: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2932 21r1Bs42           8262 	ld	hl,#_tripal + 2
   2935 4E                 8263 	ld	c,(hl)
   2936 11r1As42           8264 	ld	de,#_tripal + 1
   2939 1A                 8265 	ld	a,(de)
   293A 47                 8266 	ld	b,a
   293B 21r19s42           8267 	ld	hl,#_tripal
   293E 5E                 8268 	ld	e,(hl)
   293F 79                 8269 	ld	a,c
   2940 F5                 8270 	push	af
   2941 33                 8271 	inc	sp
   2942 C5                 8272 	push	bc
   2943 33                 8273 	inc	sp
   2944 53                 8274 	ld	d,e
   2945 1E 03              8275 	ld	e,#0x03
   2947 D5                 8276 	push	de
   2948 CDr00s00           8277 	call	_msx2_palette
   294B F1                 8278 	pop	af
   294C F1                 8279 	pop	af
                           8280 ;demo.c:1147: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   294D 21r1Es42           8281 	ld	hl,#_tripal + 5
   2950 4E                 8282 	ld	c,(hl)
   2951 11r1Ds42           8283 	ld	de,#_tripal + 4
   2954 1A                 8284 	ld	a,(de)
   2955 47                 8285 	ld	b,a
   2956 21r1Cs42           8286 	ld	hl,#_tripal + 3
   2959 5E                 8287 	ld	e,(hl)
   295A 79                 8288 	ld	a,c
   295B F5                 8289 	push	af
   295C 33                 8290 	inc	sp
   295D C5                 8291 	push	bc
   295E 33                 8292 	inc	sp
   295F 53                 8293 	ld	d,e
   2960 1E 0E              8294 	ld	e,#0x0E
   2962 D5                 8295 	push	de
   2963 CDr00s00           8296 	call	_msx2_palette
   2966 F1                 8297 	pop	af
   2967 F1                 8298 	pop	af
                           8299 ;demo.c:1148: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2968 21r21s42           8300 	ld	hl,#_tripal + 8
   296B 4E                 8301 	ld	c,(hl)
   296C 11r20s42           8302 	ld	de,#_tripal + 7
   296F 1A                 8303 	ld	a,(de)
   2970 47                 8304 	ld	b,a
   2971 21r1Fs42           8305 	ld	hl,#_tripal + 6
   2974 5E                 8306 	ld	e,(hl)
   2975 79                 8307 	ld	a,c
   2976 F5                 8308 	push	af
   2977 33                 8309 	inc	sp
   2978 C5                 8310 	push	bc
   2979 33                 8311 	inc	sp
   297A 53                 8312 	ld	d,e
   297B 1E 06              8313 	ld	e,#0x06
   297D D5                 8314 	push	de
   297E CDr00s00           8315 	call	_msx2_palette
   2981 F1                 8316 	pop	af
   2982 F1                 8317 	pop	af
   2983                    8318 00163$:
                           8319 ;demo.c:1152: if (tick > 28) tick = 0;
   2983 3E 1C              8320 	ld	a,#0x1C
   2985 FD 21r28s41        8321 	ld	iy,#_tick
   2989 FD 96 00           8322 	sub	a,0 (iy)
   298C 3E 00              8323 	ld	a,#0x00
   298E FD 21r28s41        8324 	ld	iy,#_tick
   2992 FD 9E 01           8325 	sbc	a,1 (iy)
   2995 F2rA2s29           8326 	jp	P,00165$
   2998 21r28s41           8327 	ld	hl,#_tick + 0
   299B 36 00              8328 	ld	(hl), #0x00
   299D 21r29s41           8329 	ld	hl,#_tick + 1
   29A0 36 00              8330 	ld	(hl), #0x00
   29A2                    8331 00165$:
                           8332 ;demo.c:1154: tripaltick++;
   29A2 FD 21r22s42        8333 	ld	iy,#_tripaltick
   29A6 FD 34 00           8334 	inc	0 (iy)
                           8335 ;demo.c:1155: if (tripaltick > 6) {
   29A9 3E 06              8336 	ld	a,#0x06
   29AB FD 21r22s42        8337 	ld	iy,#_tripaltick
   29AF FD 96 00           8338 	sub	a,0 (iy)
   29B2 D2r37s2A           8339 	jp	NC,00178$
                           8340 ;demo.c:1156: tripaltick2++;
   29B5 FD 21r23s42        8341 	ld	iy,#_tripaltick2
   29B9 FD 34 00           8342 	inc	0 (iy)
                           8343 ;demo.c:1157: if (tripaltick2 > 6) tripaltick2 = 0;
   29BC 3E 06              8344 	ld	a,#0x06
   29BE FD 21r23s42        8345 	ld	iy,#_tripaltick2
   29C2 FD 96 00           8346 	sub	a,0 (iy)
   29C5 30 05              8347 	jr	NC,00167$
   29C7 21r23s42           8348 	ld	hl,#_tripaltick2 + 0
   29CA 36 00              8349 	ld	(hl), #0x00
   29CC                    8350 00167$:
                           8351 ;demo.c:1159: r = tripal[0];
   29CC 21r19s42           8352 	ld	hl,#_tripal
   29CF 4E                 8353 	ld	c,(hl)
   29D0 DD 71 FD           8354 	ld	-3 (ix),c
                           8355 ;demo.c:1160: g = tripal[1];
   29D3 11r1As42           8356 	ld	de,#_tripal + 1
   29D6 1A                 8357 	ld	a,(de)
   29D7 DD 77 FC           8358 	ld	-4 (ix),a
                           8359 ;demo.c:1161: b = tripal[2];
   29DA 21r1Bs42           8360 	ld	hl,#_tripal + 2
   29DD 5E                 8361 	ld	e,(hl)
   29DE DD 73 FB           8362 	ld	-5 (ix),e
                           8363 ;demo.c:1163: for (x = 0; x < 6; x++) {
   29E1 DD 36 FE 00        8364 	ld	-2 (ix),#0x00
   29E5 DD 36 FF 00        8365 	ld	-1 (ix),#0x00
   29E9                    8366 00174$:
   29E9 DD 7E FE           8367 	ld	a,-2 (ix)
   29EC D6 06              8368 	sub	a,#0x06
   29EE DD 7E FF           8369 	ld	a,-1 (ix)
   29F1 DE 00              8370 	sbc	a,#0x00
   29F3 F2r1Ds2A           8371 	jp	P,00177$
                           8372 ;demo.c:1164: tripal[x] = tripal[x+3];
   29F6 3Er19              8373 	ld	a,#<_tripal
   29F8 DD 86 FE           8374 	add	a,-2 (ix)
   29FB 4F                 8375 	ld	c,a
   29FC 3Es42              8376 	ld	a,#>_tripal
   29FE DD 8E FF           8377 	adc	a,-1 (ix)
   2A01 47                 8378 	ld	b,a
   2A02 DD 5E FE           8379 	ld	e,-2 (ix)
   2A05 1C                 8380 	inc	e
   2A06 1C                 8381 	inc	e
   2A07 1C                 8382 	inc	e
   2A08 3Er19              8383 	ld	a,#<_tripal
   2A0A 83                 8384 	add	a,e
   2A0B 5F                 8385 	ld	e,a
   2A0C 3Es42              8386 	ld	a,#>_tripal
   2A0E CE 00              8387 	adc	a,#0x00
   2A10 57                 8388 	ld	d,a
   2A11 1A                 8389 	ld	a,(de)
   2A12 02                 8390 	ld	(bc),a
                           8391 ;demo.c:1163: for (x = 0; x < 6; x++) {
   2A13 DD 34 FE           8392 	inc	-2 (ix)
   2A16 20 03              8393 	jr	NZ,00251$
   2A18 DD 34 FF           8394 	inc	-1 (ix)
   2A1B                    8395 00251$:
   2A1B 18 CC              8396 	jr	00174$
   2A1D                    8397 00177$:
                           8398 ;demo.c:1167: tripal[6] = r;
   2A1D 01r1Fs42           8399 	ld	bc,#_tripal + 6
   2A20 DD 7E FD           8400 	ld	a,-3 (ix)
   2A23 02                 8401 	ld	(bc),a
                           8402 ;demo.c:1168: tripal[7] = g;
   2A24 01r20s42           8403 	ld	bc,#_tripal + 7
   2A27 DD 7E FC           8404 	ld	a,-4 (ix)
   2A2A 02                 8405 	ld	(bc),a
                           8406 ;demo.c:1169: tripal[8] = b;
   2A2B 01r21s42           8407 	ld	bc,#_tripal + 8
   2A2E DD 7E FB           8408 	ld	a,-5 (ix)
   2A31 02                 8409 	ld	(bc),a
                           8410 ;demo.c:1170: tripaltick = 0;
   2A32 21r22s42           8411 	ld	hl,#_tripaltick + 0
   2A35 36 00              8412 	ld	(hl), #0x00
   2A37                    8413 00178$:
   2A37 DD F9              8414 	ld	sp,ix
   2A39 DD E1              8415 	pop	ix
   2A3B C9                 8416 	ret
   2A3C                    8417 _tritiles_end::
                           8418 ;demo.c:1175: int abs (int n) {
                           8419 ;	---------------------------------
                           8420 ; Function abs
                           8421 ; ---------------------------------
   2A3C                    8422 _abs_start::
   2A3C                    8423 _abs:
   2A3C DD E5              8424 	push	ix
   2A3E DD 21 00 00        8425 	ld	ix,#0
   2A42 DD 39              8426 	add	ix,sp
   2A44 21 FA FF           8427 	ld	hl,#-6
   2A47 39                 8428 	add	hl,sp
   2A48 F9                 8429 	ld	sp,hl
                           8430 ;demo.c:1176: const int ret[2] = { n, -n };
   2A49 21 02 00           8431 	ld	hl,#0x0002
   2A4C 39                 8432 	add	hl,sp
   2A4D 4D                 8433 	ld	c,l
   2A4E 44                 8434 	ld	b,h
   2A4F DD 7E 04           8435 	ld	a,4 (ix)
   2A52 77                 8436 	ld	(hl),a
   2A53 23                 8437 	inc	hl
   2A54 DD 7E 05           8438 	ld	a,5 (ix)
   2A57 77                 8439 	ld	(hl),a
   2A58 21 02 00           8440 	ld	hl,#0x0002
   2A5B 09                 8441 	add	hl,bc
   2A5C DD 75 FA           8442 	ld	-6 (ix),l
   2A5F DD 74 FB           8443 	ld	-5 (ix),h
   2A62 AF                 8444 	xor	a,a
   2A63 DD 9E 04           8445 	sbc	a,4 (ix)
   2A66 5F                 8446 	ld	e,a
   2A67 3E 00              8447 	ld	a,#0x00
   2A69 DD 9E 05           8448 	sbc	a,5 (ix)
   2A6C 57                 8449 	ld	d,a
   2A6D DD 6E FA           8450 	ld	l,-6 (ix)
   2A70 DD 66 FB           8451 	ld	h,-5 (ix)
   2A73 73                 8452 	ld	(hl),e
   2A74 23                 8453 	inc	hl
   2A75 72                 8454 	ld	(hl),d
                           8455 ;demo.c:1177: return ret [n<0];
   2A76 DD 7E 05           8456 	ld	a,5 (ix)
   2A79 07                 8457 	rlca
   2A7A E6 01              8458 	and	a,#0x01
   2A7C 5F                 8459 	ld	e,a
   2A7D CB 23              8460 	sla	e
   2A7F 79                 8461 	ld	a,c
   2A80 83                 8462 	add	a,e
   2A81 6F                 8463 	ld	l,a
   2A82 78                 8464 	ld	a,b
   2A83 CE 00              8465 	adc	a,#0x00
   2A85 67                 8466 	ld	h,a
   2A86 5E                 8467 	ld	e,(hl)
   2A87 23                 8468 	inc	hl
   2A88 4E                 8469 	ld	c,(hl)
   2A89 6B                 8470 	ld	l,e
   2A8A 61                 8471 	ld	h,c
   2A8B DD F9              8472 	ld	sp,ix
   2A8D DD E1              8473 	pop	ix
   2A8F C9                 8474 	ret
   2A90                    8475 _abs_end::
                           8476 ;demo.c:1183: void logoeffu() {
                           8477 ;	---------------------------------
                           8478 ; Function logoeffu
                           8479 ; ---------------------------------
   2A90                    8480 _logoeffu_start::
   2A90                    8481 _logoeffu:
   2A90 DD E5              8482 	push	ix
   2A92 DD 21 00 00        8483 	ld	ix,#0
   2A96 DD 39              8484 	add	ix,sp
   2A98 F5                 8485 	push	af
   2A99 F5                 8486 	push	af
                           8487 ;demo.c:1187: fadein();
   2A9A CDrBBs0A           8488 	call	_fadein
                           8489 ;demo.c:1189: v = abs(sintabx[(vbicount) & 255]>>4);
   2A9D 21r26s41           8490 	ld	hl,#_vbicount + 0
   2AA0 4E                 8491 	ld	c,(hl)
   2AA1 06 00              8492 	ld	b,#0x00
   2AA3 21r2Cs00           8493 	ld	hl,#_sintabx
   2AA6 09                 8494 	add	hl,bc
   2AA7 7E                 8495 	ld	a,(hl)
   2AA8 4F                 8496 	ld	c,a
   2AA9 CB 39              8497 	srl	c
   2AAB CB 39              8498 	srl	c
   2AAD CB 39              8499 	srl	c
   2AAF CB 39              8500 	srl	c
   2AB1 06 00              8501 	ld	b,#0x00
   2AB3 C5                 8502 	push	bc
   2AB4 CDr3Cs2A           8503 	call	_abs
   2AB7 F1                 8504 	pop	af
   2AB8 44                 8505 	ld	b,h
   2AB9 DD 75 FC           8506 	ld	-4 (ix),l
   2ABC DD 70 FD           8507 	ld	-3 (ix),b
                           8508 ;demo.c:1191: for (y = 0; y < 116; y+=2) {
   2ABF DD 36 FE 00        8509 	ld	-2 (ix),#0x00
   2AC3 DD 36 FF 00        8510 	ld	-1 (ix),#0x00
   2AC7                    8511 00108$:
   2AC7 DD 7E FE           8512 	ld	a,-2 (ix)
   2ACA D6 74              8513 	sub	a,#0x74
   2ACC DD 7E FF           8514 	ld	a,-1 (ix)
   2ACF DE 00              8515 	sbc	a,#0x00
   2AD1 F2r9Cs2B           8516 	jp	P,00111$
                           8517 ;demo.c:1192: cmd.size_x = 108;
   2AD4 11r32s41           8518 	ld	de,#_cmd + 8
   2AD7 EB                 8519 	ex	de,hl
   2AD8 36 6C              8520 	ld	(hl),#0x6C
   2ADA 23                 8521 	inc	hl
   2ADB 36 00              8522 	ld	(hl),#0x00
                           8523 ;demo.c:1193: cmd.size_y = 2;
   2ADD 11r34s41           8524 	ld	de,#_cmd + 10
   2AE0 EB                 8525 	ex	de,hl
   2AE1 36 02              8526 	ld	(hl),#0x02
   2AE3 23                 8527 	inc	hl
   2AE4 36 00              8528 	ld	(hl),#0x00
                           8529 ;demo.c:1194: cmd.data = 0;
   2AE6 11r36s41           8530 	ld	de,#_cmd + 12
   2AE9 3E 00              8531 	ld	a,#0x00
   2AEB 12                 8532 	ld	(de),a
                           8533 ;demo.c:1195: cmd.argument = 0x00;
   2AEC 11r37s41           8534 	ld	de,#_cmd + 13
   2AEF 3E 00              8535 	ld	a,#0x00
   2AF1 12                 8536 	ld	(de),a
                           8537 ;demo.c:1196: cmd.command = 0xd0; 
   2AF2 11r38s41           8538 	ld	de,#_cmd + 14
   2AF5 3E D0              8539 	ld	a,#0xD0
   2AF7 12                 8540 	ld	(de),a
                           8541 ;demo.c:1197: cmd.source_x = 74;
   2AF8 21r2As41           8542 	ld	hl,#_cmd
   2AFB 36 4A              8543 	ld	(hl),#0x4A
   2AFD 23                 8544 	inc	hl
   2AFE 36 00              8545 	ld	(hl),#0x00
                           8546 ;demo.c:1198: cmd.source_y = 256+y;
   2B00 11r2Cs41           8547 	ld	de,#_cmd + 2
   2B03 DD 7E FE           8548 	ld	a,-2 (ix)
   2B06 C6 00              8549 	add	a,#0x00
   2B08 4F                 8550 	ld	c,a
   2B09 DD 7E FF           8551 	ld	a,-1 (ix)
   2B0C CE 01              8552 	adc	a,#0x01
   2B0E 47                 8553 	ld	b,a
   2B0F 6B                 8554 	ld	l,e
   2B10 62                 8555 	ld	h,d
   2B11 71                 8556 	ld	(hl),c
   2B12 23                 8557 	inc	hl
   2B13 70                 8558 	ld	(hl),b
                           8559 ;demo.c:1199: v+=y;
   2B14 DD 7E FC           8560 	ld	a,-4 (ix)
   2B17 DD 86 FE           8561 	add	a,-2 (ix)
   2B1A DD 77 FC           8562 	ld	-4 (ix),a
   2B1D DD 7E FD           8563 	ld	a,-3 (ix)
   2B20 DD 8E FF           8564 	adc	a,-1 (ix)
   2B23 DD 77 FD           8565 	ld	-3 (ix),a
                           8566 ;demo.c:1200: v -= powa;
   2B26 21r28s42           8567 	ld	hl,#_powa
   2B29 DD 7E FC           8568 	ld	a,-4 (ix)
   2B2C 96                 8569 	sub	a,(hl)
   2B2D DD 77 FC           8570 	ld	-4 (ix),a
   2B30 DD 7E FD           8571 	ld	a,-3 (ix)
   2B33 23                 8572 	inc	hl
   2B34 9E                 8573 	sbc	a,(hl)
                           8574 ;demo.c:1201: if (v<0) v = 0;
   2B35 DD 77 FD           8575 	ld	-3 (ix),a
   2B38 CB 7F              8576 	bit	7,a
   2B3A 28 08              8577 	jr	Z,00102$
   2B3C DD 36 FC 00        8578 	ld	-4 (ix),#0x00
   2B40 DD 36 FD 00        8579 	ld	-3 (ix),#0x00
   2B44                    8580 00102$:
                           8581 ;demo.c:1202: if (v>150) v = 150;
   2B44 3E 96              8582 	ld	a,#0x96
   2B46 DD 96 FC           8583 	sub	a,-4 (ix)
   2B49 3E 00              8584 	ld	a,#0x00
   2B4B DD 9E FD           8585 	sbc	a,-3 (ix)
   2B4E F2r59s2B           8586 	jp	P,00104$
   2B51 DD 36 FC 96        8587 	ld	-4 (ix),#0x96
   2B55 DD 36 FD 00        8588 	ld	-3 (ix),#0x00
   2B59                    8589 00104$:
                           8590 ;demo.c:1203: cmd.dest_x = 74+v;
   2B59 01r2Es41           8591 	ld	bc,#_cmd + 4
   2B5C DD 7E FC           8592 	ld	a,-4 (ix)
   2B5F C6 4A              8593 	add	a,#0x4A
   2B61 5F                 8594 	ld	e,a
   2B62 DD 7E FD           8595 	ld	a,-3 (ix)
   2B65 CE 00              8596 	adc	a,#0x00
   2B67 57                 8597 	ld	d,a
   2B68 69                 8598 	ld	l,c
   2B69 60                 8599 	ld	h,b
   2B6A 73                 8600 	ld	(hl),e
   2B6B 23                 8601 	inc	hl
   2B6C 72                 8602 	ld	(hl),d
                           8603 ;demo.c:1204: cmd.dest_y = 50+y+1;
   2B6D 01r30s41           8604 	ld	bc,#_cmd + 6
   2B70 DD 7E FE           8605 	ld	a,-2 (ix)
   2B73 C6 33              8606 	add	a,#0x33
   2B75 5F                 8607 	ld	e,a
   2B76 DD 7E FF           8608 	ld	a,-1 (ix)
   2B79 CE 00              8609 	adc	a,#0x00
   2B7B 57                 8610 	ld	d,a
   2B7C 69                 8611 	ld	l,c
   2B7D 60                 8612 	ld	h,b
   2B7E 73                 8613 	ld	(hl),e
   2B7F 23                 8614 	inc	hl
   2B80 72                 8615 	ld	(hl),d
                           8616 ;demo.c:1205: vdp_copier(&cmd);
   2B81 21r2As41           8617 	ld	hl,#_cmd
   2B84 E5                 8618 	push	hl
   2B85 CDr00s00           8619 	call	_vdp_copier
   2B88 F1                 8620 	pop	af
                           8621 ;demo.c:1191: for (y = 0; y < 116; y+=2) {
   2B89 DD 7E FE           8622 	ld	a,-2 (ix)
   2B8C C6 02              8623 	add	a,#0x02
   2B8E DD 77 FE           8624 	ld	-2 (ix),a
   2B91 DD 7E FF           8625 	ld	a,-1 (ix)
   2B94 CE 00              8626 	adc	a,#0x00
   2B96 DD 77 FF           8627 	ld	-1 (ix),a
   2B99 C3rC7s2A           8628 	jp	00108$
   2B9C                    8629 00111$:
                           8630 ;demo.c:1208: if (vbicount > scenetimings[2]+84 && onceclear > 182) {
   2B9C 21r55s41           8631 	ld	hl, #_scenetimings + 4
   2B9F 4E                 8632 	ld	c,(hl)
   2BA0 23                 8633 	inc	hl
   2BA1 46                 8634 	ld	b,(hl)
   2BA2 21 54 00           8635 	ld	hl,#0x0054
   2BA5 09                 8636 	add	hl,bc
   2BA6 4D                 8637 	ld	c,l
   2BA7 44                 8638 	ld	b,h
   2BA8 79                 8639 	ld	a,c
   2BA9 FD 21r26s41        8640 	ld	iy,#_vbicount
   2BAD FD 96 00           8641 	sub	a,0 (iy)
   2BB0 78                 8642 	ld	a,b
   2BB1 FD 21r26s41        8643 	ld	iy,#_vbicount
   2BB5 FD 9E 01           8644 	sbc	a,1 (iy)
   2BB8 F2r1As2C           8645 	jp	P,00106$
   2BBB 3E B6              8646 	ld	a,#0xB6
   2BBD FD 21r2As42        8647 	ld	iy,#_onceclear
   2BC1 FD 96 00           8648 	sub	a,0 (iy)
   2BC4 D2r1As2C           8649 	jp	NC,00106$
                           8650 ;demo.c:1209: cmd.size_x = 4;
   2BC7 21r32s41           8651 	ld	hl, #_cmd + 8
   2BCA 36 04              8652 	ld	(hl),#0x04
   2BCC 23                 8653 	inc	hl
   2BCD 36 00              8654 	ld	(hl),#0x00
                           8655 ;demo.c:1210: cmd.size_y = 116;
   2BCF 21r34s41           8656 	ld	hl, #_cmd + 10
   2BD2 36 74              8657 	ld	(hl),#0x74
   2BD4 23                 8658 	inc	hl
   2BD5 36 00              8659 	ld	(hl),#0x00
                           8660 ;demo.c:1211: cmd.data = 0;
                           8661 ;demo.c:1212: cmd.argument = 0x00;
   2BD7 3E 00              8662 	ld	a,#0x00
   2BD9 32r36s41           8663 	ld	(#_cmd + 12),a
   2BDC 32r37s41           8664 	ld	(#_cmd + 13),a
                           8665 ;demo.c:1213: cmd.command = 0xd0; 
   2BDF 01r38s41           8666 	ld	bc,#_cmd + 14
   2BE2 3E D0              8667 	ld	a,#0xD0
   2BE4 02                 8668 	ld	(bc),a
                           8669 ;demo.c:1214: cmd.source_x = 20;
   2BE5 21r2As41           8670 	ld	hl,#_cmd
   2BE8 36 14              8671 	ld	(hl),#0x14
   2BEA 23                 8672 	inc	hl
   2BEB 36 00              8673 	ld	(hl),#0x00
                           8674 ;demo.c:1215: cmd.source_y = 0;
   2BED 21r2Cs41           8675 	ld	hl, #_cmd + 2
   2BF0 36 00              8676 	ld	(hl),#0x00
   2BF2 23                 8677 	inc	hl
   2BF3 36 00              8678 	ld	(hl),#0x00
                           8679 ;demo.c:1216: cmd.dest_x = onceclear;
   2BF5 01r2Es41           8680 	ld	bc,#_cmd + 4
   2BF8 21r2As42           8681 	ld	hl,#_onceclear + 0
   2BFB 5E                 8682 	ld	e,(hl)
   2BFC 16 00              8683 	ld	d,#0x00
   2BFE 69                 8684 	ld	l,c
   2BFF 60                 8685 	ld	h,b
   2C00 73                 8686 	ld	(hl),e
   2C01 23                 8687 	inc	hl
   2C02 72                 8688 	ld	(hl),d
                           8689 ;demo.c:1217: cmd.dest_y = 68;
   2C03 21r30s41           8690 	ld	hl, #_cmd + 6
   2C06 36 44              8691 	ld	(hl),#0x44
   2C08 23                 8692 	inc	hl
   2C09 36 00              8693 	ld	(hl),#0x00
                           8694 ;demo.c:1218: vdp_copier(&cmd);
   2C0B 21r2As41           8695 	ld	hl,#_cmd
   2C0E E5                 8696 	push	hl
   2C0F CDr00s00           8697 	call	_vdp_copier
   2C12 F1                 8698 	pop	af
                           8699 ;demo.c:1219: onceclear-=4;
   2C13 21r2As42           8700 	ld	hl,#_onceclear
   2C16 7E                 8701 	ld	a,(hl)
   2C17 C6 FC              8702 	add	a,#0xFC
   2C19 77                 8703 	ld	(hl),a
   2C1A                    8704 00106$:
                           8705 ;demo.c:1223: powa+=2;
   2C1A 21r28s42           8706 	ld	hl,#_powa
   2C1D 7E                 8707 	ld	a,(hl)
   2C1E C6 02              8708 	add	a,#0x02
   2C20 23                 8709 	inc	hl
   2C21 2B                 8710 	dec	hl
   2C22 C5                 8711 	push	bc
   2C23 4F                 8712 	ld	c, a
   2C24 23                 8713 	inc	hl
   2C25 7E                 8714 	ld	a, (hl)
   2C26 47                 8715 	ld	b, a
   2C27 79                 8716 	ld	a, c
   2C28 2B                 8717 	dec	hl
   2C29 77                 8718 	ld	(hl), a
   2C2A 78                 8719 	ld	a, b
   2C2B C1                 8720 	pop	bc
   2C2C CE 00              8721 	adc	a,#0x00
   2C2E 23                 8722 	inc	hl
   2C2F 77                 8723 	ld	(hl),a
                           8724 ;demo.c:1224: powatick = 0;
   2C30 21r26s42           8725 	ld	hl,#_powatick + 0
   2C33 36 00              8726 	ld	(hl), #0x00
   2C35 21r27s42           8727 	ld	hl,#_powatick + 1
   2C38 36 00              8728 	ld	(hl), #0x00
   2C3A DD F9              8729 	ld	sp,ix
   2C3C DD E1              8730 	pop	ix
   2C3E C9                 8731 	ret
   2C3F                    8732 _logoeffu_end::
                           8733 ;demo.c:1233: void points() {
                           8734 ;	---------------------------------
                           8735 ; Function points
                           8736 ; ---------------------------------
   2C3F                    8737 _points_start::
   2C3F                    8738 _points:
   2C3F DD E5              8739 	push	ix
   2C41 DD 21 00 00        8740 	ld	ix,#0
   2C45 DD 39              8741 	add	ix,sp
   2C47 F5                 8742 	push	af
   2C48 3B                 8743 	dec	sp
                           8744 ;demo.c:1237: if (initpoints == 0) {
   2C49 AF                 8745 	xor	a,a
   2C4A 21r2Bs42           8746 	ld	hl,#_initpoints + 0
   2C4D B6                 8747 	or	a,(hl)
   2C4E C2r57s2E           8748 	jp	NZ,00105$
                           8749 ;demo.c:1238: cmd.size_x = 256;
   2C51 21r32s41           8750 	ld	hl, #_cmd + 8
   2C54 36 00              8751 	ld	(hl),#0x00
   2C56 23                 8752 	inc	hl
   2C57 36 01              8753 	ld	(hl),#0x01
                           8754 ;demo.c:1239: cmd.size_y = 4;
   2C59 21r34s41           8755 	ld	hl, #_cmd + 10
   2C5C 36 04              8756 	ld	(hl),#0x04
   2C5E 23                 8757 	inc	hl
   2C5F 36 00              8758 	ld	(hl),#0x00
                           8759 ;demo.c:1240: cmd.data = 0;
                           8760 ;demo.c:1241: cmd.argument = 0x00; // from 70xY to left
   2C61 3E 00              8761 	ld	a,#0x00
   2C63 32r36s41           8762 	ld	(#_cmd + 12),a
   2C66 32r37s41           8763 	ld	(#_cmd + 13),a
                           8764 ;demo.c:1242: cmd.command = 0xd0; // vram to vram, y only
   2C69 01r38s41           8765 	ld	bc,#_cmd + 14
   2C6C 3E D0              8766 	ld	a,#0xD0
   2C6E 02                 8767 	ld	(bc),a
                           8768 ;demo.c:1243: cmd.source_x = 0;
   2C6F 21r2As41           8769 	ld	hl,#_cmd
   2C72 36 00              8770 	ld	(hl),#0x00
   2C74 23                 8771 	inc	hl
   2C75 36 00              8772 	ld	(hl),#0x00
                           8773 ;demo.c:1244: cmd.dest_x = 0;
   2C77 21r2Es41           8774 	ld	hl, #_cmd + 4
   2C7A 36 00              8775 	ld	(hl),#0x00
   2C7C 23                 8776 	inc	hl
   2C7D 36 00              8777 	ld	(hl),#0x00
                           8778 ;demo.c:1246: for (y = 0; y < 212; y+=4) {
   2C7F DD 36 FF 00        8779 	ld	-1 (ix),#0x00
   2C83                    8780 00116$:
   2C83 DD 7E FF           8781 	ld	a,-1 (ix)
   2C86 D6 D4              8782 	sub	a,#0xD4
   2C88 D2rAFs2D           8783 	jp	NC,00119$
                           8784 ;demo.c:1247: if (PLY_PSGReg10 > 4) {
   2C8B 3E 04              8785 	ld	a,#0x04
   2C8D FD 21r00s00        8786 	ld	iy,#_PLY_PSGReg10
   2C91 FD 96 00           8787 	sub	a,0 (iy)
   2C94 D2r29s2D           8788 	jp	NC,00102$
                           8789 ;demo.c:1248: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2C97 21r00s00           8790 	ld	hl,#_PLY_PSGReg10 + 0
   2C9A 5E                 8791 	ld	e,(hl)
   2C9B 16 00              8792 	ld	d,#0x00
   2C9D 21r22s42           8793 	ld	hl,#_tripaltick + 0
   2CA0 4E                 8794 	ld	c,(hl)
   2CA1 06 00              8795 	ld	b,#0x00
   2CA3 7B                 8796 	ld	a,e
   2CA4 81                 8797 	add	a,c
   2CA5 4F                 8798 	ld	c,a
   2CA6 7A                 8799 	ld	a,d
   2CA7 88                 8800 	adc	a,b
   2CA8 06 00              8801 	ld	b,#0x00
   2CAA 21r2Cs00           8802 	ld	hl,#_sintabx
   2CAD 09                 8803 	add	hl,bc
   2CAE 7E                 8804 	ld	a,(hl)
   2CAF 4F                 8805 	ld	c,a
   2CB0 06 00              8806 	ld	b,#0x00
   2CB2 3E C0              8807 	ld	a,#0xC0
   2CB4 91                 8808 	sub	a,c
   2CB5 4F                 8809 	ld	c,a
   2CB6 3E 00              8810 	ld	a,#0x00
   2CB8 98                 8811 	sbc	a,b
   2CB9 47                 8812 	ld	b,a
   2CBA CB 28              8813 	sra	b
   2CBC CB 19              8814 	rr	c
   2CBE CB 28              8815 	sra	b
   2CC0 CB 19              8816 	rr	c
   2CC2 CB 28              8817 	sra	b
   2CC4 CB 19              8818 	rr	c
   2CC6 41                 8819 	ld	b,c
   2CC7 0E 17              8820 	ld	c,#0x17
   2CC9 C5                 8821 	push	bc
   2CCA CDr00s00           8822 	call	_vdp_register
   2CCD F1                 8823 	pop	af
                           8824 ;demo.c:1250: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   2CCE 21r1Bs42           8825 	ld	hl,#_tripal + 2
   2CD1 4E                 8826 	ld	c,(hl)
   2CD2 11r1As42           8827 	ld	de,#_tripal + 1
   2CD5 1A                 8828 	ld	a,(de)
   2CD6 47                 8829 	ld	b,a
   2CD7 21r19s42           8830 	ld	hl,#_tripal
   2CDA 5E                 8831 	ld	e,(hl)
   2CDB 21r00s00           8832 	ld	hl,#_PLY_PSGReg10 + 0
   2CDE 56                 8833 	ld	d,(hl)
   2CDF 7B                 8834 	ld	a,e
   2CE0 82                 8835 	add	a,d
   2CE1 5F                 8836 	ld	e,a
   2CE2 79                 8837 	ld	a,c
   2CE3 F5                 8838 	push	af
   2CE4 33                 8839 	inc	sp
   2CE5 C5                 8840 	push	bc
   2CE6 33                 8841 	inc	sp
   2CE7 53                 8842 	ld	d,e
   2CE8 1E 03              8843 	ld	e,#0x03
   2CEA D5                 8844 	push	de
   2CEB CDr00s00           8845 	call	_msx2_palette
   2CEE F1                 8846 	pop	af
   2CEF F1                 8847 	pop	af
                           8848 ;demo.c:1251: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2CF0 21r1Es42           8849 	ld	hl,#_tripal + 5
   2CF3 4E                 8850 	ld	c,(hl)
   2CF4 11r1Ds42           8851 	ld	de,#_tripal + 4
   2CF7 1A                 8852 	ld	a,(de)
   2CF8 47                 8853 	ld	b,a
   2CF9 21r1Cs42           8854 	ld	hl,#_tripal + 3
   2CFC 5E                 8855 	ld	e,(hl)
   2CFD 79                 8856 	ld	a,c
   2CFE F5                 8857 	push	af
   2CFF 33                 8858 	inc	sp
   2D00 C5                 8859 	push	bc
   2D01 33                 8860 	inc	sp
   2D02 53                 8861 	ld	d,e
   2D03 1E 0E              8862 	ld	e,#0x0E
   2D05 D5                 8863 	push	de
   2D06 CDr00s00           8864 	call	_msx2_palette
   2D09 F1                 8865 	pop	af
   2D0A F1                 8866 	pop	af
                           8867 ;demo.c:1252: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2D0B 21r21s42           8868 	ld	hl,#_tripal + 8
   2D0E 4E                 8869 	ld	c,(hl)
   2D0F 11r20s42           8870 	ld	de,#_tripal + 7
   2D12 1A                 8871 	ld	a,(de)
   2D13 47                 8872 	ld	b,a
   2D14 21r1Fs42           8873 	ld	hl,#_tripal + 6
   2D17 5E                 8874 	ld	e,(hl)
   2D18 79                 8875 	ld	a,c
   2D19 F5                 8876 	push	af
   2D1A 33                 8877 	inc	sp
   2D1B C5                 8878 	push	bc
   2D1C 33                 8879 	inc	sp
   2D1D 53                 8880 	ld	d,e
   2D1E 1E 06              8881 	ld	e,#0x06
   2D20 D5                 8882 	push	de
   2D21 CDr00s00           8883 	call	_msx2_palette
   2D24 F1                 8884 	pop	af
   2D25 F1                 8885 	pop	af
   2D26 C3r82s2D           8886 	jp	00103$
   2D29                    8887 00102$:
                           8888 ;demo.c:1255: vdp_register(VDP_VOFFSET,0);
   2D29 21 17 00           8889 	ld	hl,#0x0017
   2D2C E5                 8890 	push	hl
   2D2D CDr00s00           8891 	call	_vdp_register
   2D30 F1                 8892 	pop	af
                           8893 ;demo.c:1257: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2D31 21r1Bs42           8894 	ld	hl,#_tripal + 2
   2D34 4E                 8895 	ld	c,(hl)
   2D35 11r1As42           8896 	ld	de,#_tripal + 1
   2D38 1A                 8897 	ld	a,(de)
   2D39 47                 8898 	ld	b,a
   2D3A 21r19s42           8899 	ld	hl,#_tripal
   2D3D 5E                 8900 	ld	e,(hl)
   2D3E 79                 8901 	ld	a,c
   2D3F F5                 8902 	push	af
   2D40 33                 8903 	inc	sp
   2D41 C5                 8904 	push	bc
   2D42 33                 8905 	inc	sp
   2D43 53                 8906 	ld	d,e
   2D44 1E 03              8907 	ld	e,#0x03
   2D46 D5                 8908 	push	de
   2D47 CDr00s00           8909 	call	_msx2_palette
   2D4A F1                 8910 	pop	af
   2D4B F1                 8911 	pop	af
                           8912 ;demo.c:1258: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2D4C 21r1Es42           8913 	ld	hl,#_tripal + 5
   2D4F 4E                 8914 	ld	c,(hl)
   2D50 11r1Ds42           8915 	ld	de,#_tripal + 4
   2D53 1A                 8916 	ld	a,(de)
   2D54 47                 8917 	ld	b,a
   2D55 21r1Cs42           8918 	ld	hl,#_tripal + 3
   2D58 5E                 8919 	ld	e,(hl)
   2D59 79                 8920 	ld	a,c
   2D5A F5                 8921 	push	af
   2D5B 33                 8922 	inc	sp
   2D5C C5                 8923 	push	bc
   2D5D 33                 8924 	inc	sp
   2D5E 53                 8925 	ld	d,e
   2D5F 1E 0E              8926 	ld	e,#0x0E
   2D61 D5                 8927 	push	de
   2D62 CDr00s00           8928 	call	_msx2_palette
   2D65 F1                 8929 	pop	af
   2D66 F1                 8930 	pop	af
                           8931 ;demo.c:1259: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2D67 21r21s42           8932 	ld	hl,#_tripal + 8
   2D6A 4E                 8933 	ld	c,(hl)
   2D6B 11r20s42           8934 	ld	de,#_tripal + 7
   2D6E 1A                 8935 	ld	a,(de)
   2D6F 47                 8936 	ld	b,a
   2D70 21r1Fs42           8937 	ld	hl,#_tripal + 6
   2D73 5E                 8938 	ld	e,(hl)
   2D74 79                 8939 	ld	a,c
   2D75 F5                 8940 	push	af
   2D76 33                 8941 	inc	sp
   2D77 C5                 8942 	push	bc
   2D78 33                 8943 	inc	sp
   2D79 53                 8944 	ld	d,e
   2D7A 1E 06              8945 	ld	e,#0x06
   2D7C D5                 8946 	push	de
   2D7D CDr00s00           8947 	call	_msx2_palette
   2D80 F1                 8948 	pop	af
   2D81 F1                 8949 	pop	af
   2D82                    8950 00103$:
                           8951 ;demo.c:1262: waitVB();
   2D82 76                 8952 		halt 
                           8953 ;demo.c:1263: cmd.source_y = 193;
   2D83 21r2Cs41           8954 	ld	hl, #_cmd + 2
   2D86 36 C1              8955 	ld	(hl),#0xC1
   2D88 23                 8956 	inc	hl
   2D89 36 00              8957 	ld	(hl),#0x00
                           8958 ;demo.c:1264: cmd.dest_y = y;
   2D8B 01r30s41           8959 	ld	bc,#_cmd + 6
   2D8E DD 5E FF           8960 	ld	e,-1 (ix)
   2D91 16 00              8961 	ld	d,#0x00
   2D93 69                 8962 	ld	l,c
   2D94 60                 8963 	ld	h,b
   2D95 73                 8964 	ld	(hl),e
   2D96 23                 8965 	inc	hl
   2D97 72                 8966 	ld	(hl),d
                           8967 ;demo.c:1265: vdp_copier(&cmd);
   2D98 21r2As41           8968 	ld	hl,#_cmd
   2D9B E5                 8969 	push	hl
   2D9C CDr00s00           8970 	call	_vdp_copier
   2D9F F1                 8971 	pop	af
                           8972 ;demo.c:1246: for (y = 0; y < 212; y+=4) {
   2DA0 DD 34 FF           8973 	inc	-1 (ix)
   2DA3 DD 34 FF           8974 	inc	-1 (ix)
   2DA6 DD 34 FF           8975 	inc	-1 (ix)
   2DA9 DD 34 FF           8976 	inc	-1 (ix)
   2DAC C3r83s2C           8977 	jp	00116$
   2DAF                    8978 00119$:
                           8979 ;demo.c:1269: vdp_load_palette(bulbs_palette);
   2DAF 21r66s40           8980 	ld	hl,#_bulbs_palette
   2DB2 E5                 8981 	push	hl
   2DB3 CDr00s00           8982 	call	_vdp_load_palette
   2DB6 F1                 8983 	pop	af
                           8984 ;demo.c:1271: for (x = 0; x < 256; x+=1) {
   2DB7 DD 36 FD 00        8985 	ld	-3 (ix),#0x00
   2DBB DD 36 FE 00        8986 	ld	-2 (ix),#0x00
   2DBF                    8987 00120$:
   2DBF DD 7E FD           8988 	ld	a,-3 (ix)
   2DC2 D6 00              8989 	sub	a,#0x00
   2DC4 DD 7E FE           8990 	ld	a,-2 (ix)
   2DC7 DE 01              8991 	sbc	a,#0x01
   2DC9 F2r48s2E           8992 	jp	P,00123$
                           8993 ;demo.c:1273: cmd.data = 1+((pointframe>>2) & 0xe);
   2DCC 11r36s41           8994 	ld	de,#_cmd + 12
   2DCF 21r2Cs42           8995 	ld	hl,#_pointframe + 0
   2DD2 4E                 8996 	ld	c,(hl)
   2DD3 21r2Ds42           8997 	ld	hl,#_pointframe + 1
   2DD6 46                 8998 	ld	b,(hl)
   2DD7 CB 28              8999 	sra	b
   2DD9 CB 19              9000 	rr	c
   2DDB CB 28              9001 	sra	b
   2DDD CB 19              9002 	rr	c
   2DDF 79                 9003 	ld	a,c
   2DE0 E6 0E              9004 	and	a,#0x0E
   2DE2 3C                 9005 	inc	a
   2DE3 12                 9006 	ld	(de),a
                           9007 ;demo.c:1274: cmd.dest_x = x;
   2DE4 21r2Es41           9008 	ld	hl, #_cmd + 4
   2DE7 DD 7E FD           9009 	ld	a,-3 (ix)
   2DEA 77                 9010 	ld	(hl),a
   2DEB 23                 9011 	inc	hl
   2DEC DD 7E FE           9012 	ld	a,-2 (ix)
   2DEF 77                 9013 	ld	(hl),a
                           9014 ;demo.c:1275: cmd.dest_y = y;
   2DF0 21r30s41           9015 	ld	hl, #_cmd + 6
   2DF3 36 1D              9016 	ld	(hl),#0x1D
   2DF5 23                 9017 	inc	hl
   2DF6 36 00              9018 	ld	(hl),#0x00
                           9019 ;demo.c:1276: cmd.command = 0x50;
   2DF8 3E 50              9020 	ld	a,#0x50
   2DFA 32r38s41           9021 	ld	(#_cmd + 14),a
                           9022 ;demo.c:1277: vdp_copier(&cmd);
   2DFD 21r2As41           9023 	ld	hl,#_cmd
   2E00 E5                 9024 	push	hl
   2E01 CDr00s00           9025 	call	_vdp_copier
   2E04 F1                 9026 	pop	af
                           9027 ;demo.c:1280: cmd.data = 1+((pointframe>>2) & 0xe);
   2E05 01r36s41           9028 	ld	bc,#_cmd + 12
   2E08 21r2Cs42           9029 	ld	hl,#_pointframe + 0
   2E0B 5E                 9030 	ld	e,(hl)
   2E0C 21r2Ds42           9031 	ld	hl,#_pointframe + 1
   2E0F 56                 9032 	ld	d,(hl)
   2E10 CB 2A              9033 	sra	d
   2E12 CB 1B              9034 	rr	e
   2E14 CB 2A              9035 	sra	d
   2E16 CB 1B              9036 	rr	e
   2E18 7B                 9037 	ld	a,e
   2E19 E6 0E              9038 	and	a,#0x0E
   2E1B 3C                 9039 	inc	a
   2E1C 02                 9040 	ld	(bc),a
                           9041 ;demo.c:1281: cmd.dest_y = y;
   2E1D 21r30s41           9042 	ld	hl, #_cmd + 6
   2E20 36 A2              9043 	ld	(hl),#0xA2
   2E22 23                 9044 	inc	hl
   2E23 36 00              9045 	ld	(hl),#0x00
                           9046 ;demo.c:1282: vdp_copier(&cmd);
   2E25 21r2As41           9047 	ld	hl,#_cmd
   2E28 E5                 9048 	push	hl
   2E29 CDr00s00           9049 	call	_vdp_copier
   2E2C F1                 9050 	pop	af
                           9051 ;demo.c:1284: pointframe+=1;
   2E2D FD 21r2Cs42        9052 	ld	iy,#_pointframe
   2E31 FD 34 00           9053 	inc	0 (iy)
   2E34 20 07              9054 	jr	NZ,00149$
   2E36 FD 21r2Cs42        9055 	ld	iy,#_pointframe
   2E3A FD 34 01           9056 	inc	1 (iy)
   2E3D                    9057 00149$:
                           9058 ;demo.c:1271: for (x = 0; x < 256; x+=1) {
   2E3D DD 34 FD           9059 	inc	-3 (ix)
   2E40 20 03              9060 	jr	NZ,00150$
   2E42 DD 34 FE           9061 	inc	-2 (ix)
   2E45                    9062 00150$:
   2E45 C3rBFs2D           9063 	jp	00120$
   2E48                    9064 00123$:
                           9065 ;demo.c:1287: initpoints = 1;
   2E48 21r2Bs42           9066 	ld	hl,#_initpoints + 0
   2E4B 36 01              9067 	ld	(hl), #0x01
                           9068 ;demo.c:1288: ltrpointer = 0;
   2E4D 21rBEs41           9069 	ld	hl,#_ltrpointer + 0
   2E50 36 00              9070 	ld	(hl), #0x00
   2E52 21rBFs41           9071 	ld	hl,#_ltrpointer + 1
   2E55 36 00              9072 	ld	(hl), #0x00
   2E57                    9073 00105$:
                           9074 ;demo.c:1291: cmd.argument = 0x0;
   2E57 3E 00              9075 	ld	a,#0x00
   2E59 32r37s41           9076 	ld	(#_cmd + 13),a
                           9077 ;demo.c:1293: cmd.data = 1+((pointframe>>2) & 0xe);
   2E5C 01r36s41           9078 	ld	bc,#_cmd + 12
   2E5F 21r2Cs42           9079 	ld	hl,#_pointframe + 0
   2E62 5E                 9080 	ld	e,(hl)
   2E63 21r2Ds42           9081 	ld	hl,#_pointframe + 1
   2E66 56                 9082 	ld	d,(hl)
   2E67 CB 2A              9083 	sra	d
   2E69 CB 1B              9084 	rr	e
   2E6B CB 2A              9085 	sra	d
   2E6D CB 1B              9086 	rr	e
   2E6F 7B                 9087 	ld	a,e
   2E70 E6 0E              9088 	and	a,#0x0E
   2E72 3C                 9089 	inc	a
   2E73 02                 9090 	ld	(bc),a
                           9091 ;demo.c:1295: for (x = 30; x < 162; x+=1) {
   2E74 DD 36 FD 1E        9092 	ld	-3 (ix),#0x1E
   2E78 DD 36 FE 00        9093 	ld	-2 (ix),#0x00
   2E7C                    9094 00124$:
   2E7C DD 7E FD           9095 	ld	a,-3 (ix)
   2E7F D6 A2              9096 	sub	a,#0xA2
   2E81 DD 7E FE           9097 	ld	a,-2 (ix)
   2E84 DE 00              9098 	sbc	a,#0x00
   2E86 F2rCFs2E           9099 	jp	P,00127$
                           9100 ;demo.c:1296: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   2E89 21r2Cs42           9101 	ld	hl,#_pointframe
   2E8C DD 7E FD           9102 	ld	a,-3 (ix)
   2E8F 86                 9103 	add	a,(hl)
   2E90 5F                 9104 	ld	e,a
   2E91 DD 7E FE           9105 	ld	a,-2 (ix)
   2E94 23                 9106 	inc	hl
   2E95 8E                 9107 	adc	a,(hl)
   2E96 16 00              9108 	ld	d,#0x00
   2E98 21r2Cs00           9109 	ld	hl,#_sintabx
   2E9B 19                 9110 	add	hl,de
   2E9C 7E                 9111 	ld	a,(hl)
   2E9D CB 3F              9112 	srl	a
   2E9F C6 40              9113 	add	a,#0x40
   2EA1 4F                 9114 	ld	c,a
                           9115 ;demo.c:1297: cmd.dest_x = y;
   2EA2 11r2Es41           9116 	ld	de,#_cmd + 4
   2EA5 06 00              9117 	ld	b,#0x00
   2EA7 6B                 9118 	ld	l,e
   2EA8 62                 9119 	ld	h,d
   2EA9 71                 9120 	ld	(hl),c
   2EAA 23                 9121 	inc	hl
   2EAB 70                 9122 	ld	(hl),b
                           9123 ;demo.c:1298: cmd.dest_y = x;
   2EAC 21r30s41           9124 	ld	hl, #_cmd + 6
   2EAF DD 7E FD           9125 	ld	a,-3 (ix)
   2EB2 77                 9126 	ld	(hl),a
   2EB3 23                 9127 	inc	hl
   2EB4 DD 7E FE           9128 	ld	a,-2 (ix)
   2EB7 77                 9129 	ld	(hl),a
                           9130 ;demo.c:1299: cmd.command = 0x53;
   2EB8 3E 53              9131 	ld	a,#0x53
   2EBA 32r38s41           9132 	ld	(#_cmd + 14),a
                           9133 ;demo.c:1300: vdp_copier(&cmd);
   2EBD 21r2As41           9134 	ld	hl,#_cmd
   2EC0 E5                 9135 	push	hl
   2EC1 CDr00s00           9136 	call	_vdp_copier
   2EC4 F1                 9137 	pop	af
                           9138 ;demo.c:1295: for (x = 30; x < 162; x+=1) {
   2EC5 DD 34 FD           9139 	inc	-3 (ix)
   2EC8 20 03              9140 	jr	NZ,00152$
   2ECA DD 34 FE           9141 	inc	-2 (ix)
   2ECD                    9142 00152$:
   2ECD 18 AD              9143 	jr	00124$
   2ECF                    9144 00127$:
                           9145 ;demo.c:1302: pointframe+=2;
   2ECF 21r2Cs42           9146 	ld	hl,#_pointframe
   2ED2 7E                 9147 	ld	a,(hl)
   2ED3 C6 02              9148 	add	a,#0x02
   2ED5 23                 9149 	inc	hl
   2ED6 2B                 9150 	dec	hl
   2ED7 C5                 9151 	push	bc
   2ED8 4F                 9152 	ld	c, a
   2ED9 23                 9153 	inc	hl
   2EDA 7E                 9154 	ld	a, (hl)
   2EDB 47                 9155 	ld	b, a
   2EDC 79                 9156 	ld	a, c
   2EDD 2B                 9157 	dec	hl
   2EDE 77                 9158 	ld	(hl), a
   2EDF 78                 9159 	ld	a, b
   2EE0 C1                 9160 	pop	bc
   2EE1 CE 00              9161 	adc	a,#0x00
   2EE3 23                 9162 	inc	hl
   2EE4 77                 9163 	ld	(hl),a
                           9164 ;demo.c:1304: if (greetindex == 0) {
   2EE5 3Ar2Es42           9165 	ld	a,(#_greetindex+0)
   2EE8 21r2Fs42           9166 	ld	hl,#_greetindex + 1
   2EEB B6                 9167 	or	a,(hl)
   2EEC 20 17              9168 	jr	NZ,00107$
                           9169 ;demo.c:1305: slowend = 27;
   2EEE 21rC0s41           9170 	ld	hl,#_slowend + 0
   2EF1 36 1B              9171 	ld	(hl), #0x1B
   2EF3 21rC1s41           9172 	ld	hl,#_slowend + 1
   2EF6 36 00              9173 	ld	(hl), #0x00
                           9174 ;demo.c:1306: drawstrslow("GREETINGS TO VARIOUS GROUPS",10,20);
   2EF8 21 0A 14           9175 	ld	hl,#0x140A
   2EFB E5                 9176 	push	hl
   2EFC 21rB1s2F           9177 	ld	hl,#__str_9
   2EFF E5                 9178 	push	hl
   2F00 CDrDAs10           9179 	call	_drawstrslow
   2F03 F1                 9180 	pop	af
   2F04 F1                 9181 	pop	af
   2F05                    9182 00107$:
                           9183 ;demo.c:1308: if (greetindex == 1) {
   2F05 3Ar2Es42           9184 	ld	a,(#_greetindex+0)
   2F08 D6 01              9185 	sub	a,#0x01
   2F0A 20 06              9186 	jr	NZ,00153$
   2F0C 3Ar2Fs42           9187 	ld	a,(#_greetindex+1)
   2F0F B7                 9188 	or	a,a
   2F10 28 02              9189 	jr	Z,00154$
   2F12                    9190 00153$:
   2F12 18 17              9191 	jr	00109$
   2F14                    9192 00154$:
                           9193 ;demo.c:1309: slowend = 33;
   2F14 21rC0s41           9194 	ld	hl,#_slowend + 0
   2F17 36 21              9195 	ld	(hl), #0x21
   2F19 21rC1s41           9196 	ld	hl,#_slowend + 1
   2F1C 36 00              9197 	ld	(hl), #0x00
                           9198 ;demo.c:1310: drawstrslow("Trilobit  Prismbeings  Ivory Labs",10,164);
   2F1E 21 0A A4           9199 	ld	hl,#0xA40A
   2F21 E5                 9200 	push	hl
   2F22 21rCDs2F           9201 	ld	hl,#__str_10
   2F25 E5                 9202 	push	hl
   2F26 CDrDAs10           9203 	call	_drawstrslow
   2F29 F1                 9204 	pop	af
   2F2A F1                 9205 	pop	af
   2F2B                    9206 00109$:
                           9207 ;demo.c:1312: if (greetindex == 2) {
   2F2B 3Ar2Es42           9208 	ld	a,(#_greetindex+0)
   2F2E D6 02              9209 	sub	a,#0x02
   2F30 20 06              9210 	jr	NZ,00155$
   2F32 3Ar2Fs42           9211 	ld	a,(#_greetindex+1)
   2F35 B7                 9212 	or	a,a
   2F36 28 02              9213 	jr	Z,00156$
   2F38                    9214 00155$:
   2F38 18 17              9215 	jr	00111$
   2F3A                    9216 00156$:
                           9217 ;demo.c:1313: slowend = 29;
   2F3A 21rC0s41           9218 	ld	hl,#_slowend + 0
   2F3D 36 1D              9219 	ld	(hl), #0x1D
   2F3F 21rC1s41           9220 	ld	hl,#_slowend + 1
   2F42 36 00              9221 	ld	(hl), #0x00
                           9222 ;demo.c:1314: drawstrslow("PWP  Dekadence  Paraguay  ISO",18,174);
   2F44 21 12 AE           9223 	ld	hl,#0xAE12
   2F47 E5                 9224 	push	hl
   2F48 21rEFs2F           9225 	ld	hl,#__str_11
   2F4B E5                 9226 	push	hl
   2F4C CDrDAs10           9227 	call	_drawstrslow
   2F4F F1                 9228 	pop	af
   2F50 F1                 9229 	pop	af
   2F51                    9230 00111$:
                           9231 ;demo.c:1316: if (greetindex == 3) {
   2F51 3Ar2Es42           9232 	ld	a,(#_greetindex+0)
   2F54 D6 03              9233 	sub	a,#0x03
   2F56 20 06              9234 	jr	NZ,00157$
   2F58 3Ar2Fs42           9235 	ld	a,(#_greetindex+1)
   2F5B B7                 9236 	or	a,a
   2F5C 28 02              9237 	jr	Z,00158$
   2F5E                    9238 00157$:
   2F5E 18 17              9239 	jr	00113$
   2F60                    9240 00158$:
                           9241 ;demo.c:1317: slowend = 17;
   2F60 21rC0s41           9242 	ld	hl,#_slowend + 0
   2F63 36 11              9243 	ld	(hl), #0x11
   2F65 21rC1s41           9244 	ld	hl,#_slowend + 1
   2F68 36 00              9245 	ld	(hl), #0x00
                           9246 ;demo.c:1318: drawstrslow("Furry Trash Group",26,184);
   2F6A 21 1A B8           9247 	ld	hl,#0xB81A
   2F6D E5                 9248 	push	hl
   2F6E 21r0Ds30           9249 	ld	hl,#__str_12
   2F71 E5                 9250 	push	hl
   2F72 CDrDAs10           9251 	call	_drawstrslow
   2F75 F1                 9252 	pop	af
   2F76 F1                 9253 	pop	af
   2F77                    9254 00113$:
                           9255 ;demo.c:1320: if (ltrpointer >= slowend) { greetindex++; ltrpointer = 0; }
   2F77 21rC0s41           9256 	ld	hl,#_slowend
   2F7A 3ArBEs41           9257 	ld	a,(#_ltrpointer+0)
   2F7D 96                 9258 	sub	a,(hl)
   2F7E 3ArBFs41           9259 	ld	a,(#_ltrpointer+1)
   2F81 23                 9260 	inc	hl
   2F82 9E                 9261 	sbc	a,(hl)
   2F83 FArA0s2F           9262 	jp	M,00115$
   2F86 FD 21r2Es42        9263 	ld	iy,#_greetindex
   2F8A FD 34 00           9264 	inc	0 (iy)
   2F8D 20 07              9265 	jr	NZ,00159$
   2F8F FD 21r2Es42        9266 	ld	iy,#_greetindex
   2F93 FD 34 01           9267 	inc	1 (iy)
   2F96                    9268 00159$:
   2F96 21rBEs41           9269 	ld	hl,#_ltrpointer + 0
   2F99 36 00              9270 	ld	(hl), #0x00
   2F9B 21rBFs41           9271 	ld	hl,#_ltrpointer + 1
   2F9E 36 00              9272 	ld	(hl), #0x00
   2FA0                    9273 00115$:
                           9274 ;demo.c:1322: msx2_palette(4,0,0,0);
   2FA0 21 00 00           9275 	ld	hl,#0x0000
   2FA3 E5                 9276 	push	hl
   2FA4 2E 04              9277 	ld	l, #0x04
   2FA6 E5                 9278 	push	hl
   2FA7 CDr00s00           9279 	call	_msx2_palette
   2FAA F1                 9280 	pop	af
   2FAB F1                 9281 	pop	af
   2FAC DD F9              9282 	ld	sp,ix
   2FAE DD E1              9283 	pop	ix
   2FB0 C9                 9284 	ret
   2FB1                    9285 _points_end::
   2FB1                    9286 __str_9:
   2FB1 47 52 45 45 54 49  9287 	.ascii "GREETINGS TO VARIOUS GROUPS"
        4E 47 53 20 54 4F
        20 56 41 52 49 4F
        55 53 20 47 52 4F
        55 50 53
   2FCC 00                 9288 	.db 0x00
   2FCD                    9289 __str_10:
   2FCD 54 72 69 6C 6F 62  9290 	.ascii "Trilobit  Prismbeings  Ivory Labs"
        69 74 20 20 50 72
        69 73 6D 62 65 69
        6E 67 73 20 20 49
        76 6F 72 79 20 4C
        61 62 73
   2FEE 00                 9291 	.db 0x00
   2FEF                    9292 __str_11:
   2FEF 50 57 50 20 20 44  9293 	.ascii "PWP  Dekadence  Paraguay  ISO"
        65 6B 61 64 65 6E
        63 65 20 20 50 61
        72 61 67 75 61 79
        20 20 49 53 4F
   300C 00                 9294 	.db 0x00
   300D                    9295 __str_12:
   300D 46 75 72 72 79 20  9296 	.ascii "Furry Trash Group"
        54 72 61 73 68 20
        47 72 6F 75 70
   301E 00                 9297 	.db 0x00
                           9298 ;demo.c:1327: void bigtext() {
                           9299 ;	---------------------------------
                           9300 ; Function bigtext
                           9301 ; ---------------------------------
   301F                    9302 _bigtext_start::
   301F                    9303 _bigtext:
   301F DD E5              9304 	push	ix
   3021 DD 21 00 00        9305 	ld	ix,#0
   3025 DD 39              9306 	add	ix,sp
   3027 F5                 9307 	push	af
                           9308 ;demo.c:1329: if (bigtextp == 0) {
   3028 3Ar30s42           9309 	ld	a,(#_bigtextp+0)
   302B FD 21r30s42        9310 	ld	iy,#_bigtextp
   302F FD B6 01           9311 	or	a,1 (iy)
   3032 C2r3Fs31           9312 	jp	NZ,00102$
                           9313 ;demo.c:1330: cmd.size_x = 2;
   3035 21r32s41           9314 	ld	hl, #_cmd + 8
   3038 36 02              9315 	ld	(hl),#0x02
   303A 23                 9316 	inc	hl
   303B 36 00              9317 	ld	(hl),#0x00
                           9318 ;demo.c:1331: cmd.size_y = 212;
   303D 21r34s41           9319 	ld	hl, #_cmd + 10
   3040 36 D4              9320 	ld	(hl),#0xD4
   3042 23                 9321 	inc	hl
   3043 36 00              9322 	ld	(hl),#0x00
                           9323 ;demo.c:1332: cmd.data = 0;
                           9324 ;demo.c:1333: cmd.argument = 0x00; // from 70xY to left
   3045 3E 00              9325 	ld	a,#0x00
   3047 32r36s41           9326 	ld	(#_cmd + 12),a
   304A 32r37s41           9327 	ld	(#_cmd + 13),a
                           9328 ;demo.c:1334: cmd.command = 0xd0; // vram to vram, y only
   304D 01r38s41           9329 	ld	bc,#_cmd + 14
   3050 3E D0              9330 	ld	a,#0xD0
   3052 02                 9331 	ld	(bc),a
                           9332 ;demo.c:1335: cmd.source_x = 255;
   3053 21r2As41           9333 	ld	hl,#_cmd
   3056 36 FF              9334 	ld	(hl),#0xFF
   3058 23                 9335 	inc	hl
   3059 36 00              9336 	ld	(hl),#0x00
                           9337 ;demo.c:1336: cmd.source_y = 0;
   305B 21r2Cs41           9338 	ld	hl, #_cmd + 2
   305E 36 00              9339 	ld	(hl),#0x00
   3060 23                 9340 	inc	hl
   3061 36 00              9341 	ld	(hl),#0x00
                           9342 ;demo.c:1338: for (x = 0; x < 256; x+=4) {
   3063 01 00 00           9343 	ld	bc,#0x0000
   3066                    9344 00128$:
   3066 79                 9345 	ld	a,c
   3067 D6 00              9346 	sub	a,#0x00
   3069 78                 9347 	ld	a,b
   306A DE 01              9348 	sbc	a,#0x01
   306C F2rA3s30           9349 	jp	P,00131$
                           9350 ;demo.c:1339: waitVB();
   306F 76                 9351 		halt 
                           9352 ;demo.c:1340: cmd.dest_y = 256;
   3070 11r30s41           9353 	ld	de,#_cmd + 6
   3073 EB                 9354 	ex	de,hl
   3074 36 00              9355 	ld	(hl),#0x00
   3076 23                 9356 	inc	hl
   3077 36 01              9357 	ld	(hl),#0x01
                           9358 ;demo.c:1341: cmd.dest_x = x;
   3079 11r2Es41           9359 	ld	de,#_cmd + 4
   307C EB                 9360 	ex	de,hl
   307D 71                 9361 	ld	(hl),c
   307E 23                 9362 	inc	hl
   307F 70                 9363 	ld	(hl),b
                           9364 ;demo.c:1342: vdp_copier(&cmd);
   3080 C5                 9365 	push	bc
   3081 21r2As41           9366 	ld	hl,#_cmd
   3084 E5                 9367 	push	hl
   3085 CDr00s00           9368 	call	_vdp_copier
   3088 F1                 9369 	pop	af
   3089 C1                 9370 	pop	bc
                           9371 ;demo.c:1343: cmd.dest_y = 0;
   308A 11r30s41           9372 	ld	de,#_cmd + 6
   308D EB                 9373 	ex	de,hl
   308E 36 00              9374 	ld	(hl),#0x00
   3090 23                 9375 	inc	hl
   3091 36 00              9376 	ld	(hl),#0x00
                           9377 ;demo.c:1344: vdp_copier(&cmd);
   3093 C5                 9378 	push	bc
   3094 21r2As41           9379 	ld	hl,#_cmd
   3097 E5                 9380 	push	hl
   3098 CDr00s00           9381 	call	_vdp_copier
   309B F1                 9382 	pop	af
   309C C1                 9383 	pop	bc
                           9384 ;demo.c:1338: for (x = 0; x < 256; x+=4) {
   309D 03                 9385 	inc	bc
   309E 03                 9386 	inc	bc
   309F 03                 9387 	inc	bc
   30A0 03                 9388 	inc	bc
   30A1 18 C3              9389 	jr	00128$
   30A3                    9390 00131$:
                           9391 ;demo.c:1347: for (x = 254; x > 0; x-=4) {
   30A3 01 FE 00           9392 	ld	bc,#0x00FE
   30A6                    9393 00132$:
   30A6 3E 00              9394 	ld	a,#0x00
   30A8 91                 9395 	sub	a,c
   30A9 3E 00              9396 	ld	a,#0x00
   30AB 98                 9397 	sbc	a,b
   30AC F2rE7s30           9398 	jp	P,00135$
                           9399 ;demo.c:1348: waitVB();
   30AF 76                 9400 		halt 
                           9401 ;demo.c:1349: cmd.dest_y = 256;
   30B0 11r30s41           9402 	ld	de,#_cmd + 6
   30B3 EB                 9403 	ex	de,hl
   30B4 36 00              9404 	ld	(hl),#0x00
   30B6 23                 9405 	inc	hl
   30B7 36 01              9406 	ld	(hl),#0x01
                           9407 ;demo.c:1350: cmd.dest_x = x;
   30B9 11r2Es41           9408 	ld	de,#_cmd + 4
   30BC EB                 9409 	ex	de,hl
   30BD 71                 9410 	ld	(hl),c
   30BE 23                 9411 	inc	hl
   30BF 70                 9412 	ld	(hl),b
                           9413 ;demo.c:1351: vdp_copier(&cmd);
   30C0 C5                 9414 	push	bc
   30C1 21r2As41           9415 	ld	hl,#_cmd
   30C4 E5                 9416 	push	hl
   30C5 CDr00s00           9417 	call	_vdp_copier
   30C8 F1                 9418 	pop	af
   30C9 C1                 9419 	pop	bc
                           9420 ;demo.c:1352: cmd.dest_y = 0;
   30CA 11r30s41           9421 	ld	de,#_cmd + 6
   30CD EB                 9422 	ex	de,hl
   30CE 36 00              9423 	ld	(hl),#0x00
   30D0 23                 9424 	inc	hl
   30D1 36 00              9425 	ld	(hl),#0x00
                           9426 ;demo.c:1353: vdp_copier(&cmd);
   30D3 C5                 9427 	push	bc
   30D4 21r2As41           9428 	ld	hl,#_cmd
   30D7 E5                 9429 	push	hl
   30D8 CDr00s00           9430 	call	_vdp_copier
   30DB F1                 9431 	pop	af
   30DC C1                 9432 	pop	bc
                           9433 ;demo.c:1347: for (x = 254; x > 0; x-=4) {
   30DD 79                 9434 	ld	a,c
   30DE C6 FC              9435 	add	a,#0xFC
   30E0 4F                 9436 	ld	c,a
   30E1 78                 9437 	ld	a,b
   30E2 CE FF              9438 	adc	a,#0xFF
   30E4 47                 9439 	ld	b,a
   30E5 18 BF              9440 	jr	00132$
   30E7                    9441 00135$:
                           9442 ;demo.c:1356: vdp_load_palette(boxes_palette);
   30E7 21rE6s40           9443 	ld	hl,#_boxes_palette
   30EA E5                 9444 	push	hl
   30EB CDr00s00           9445 	call	_vdp_load_palette
   30EE F1                 9446 	pop	af
                           9447 ;demo.c:1357: drawstr2x("DIGITAL",26,44);
   30EF 21 1A 2C           9448 	ld	hl,#0x2C1A
   30F2 E5                 9449 	push	hl
   30F3 21r25s37           9450 	ld	hl,#__str_13
   30F6 E5                 9451 	push	hl
   30F7 CDr78s11           9452 	call	_drawstr2x
   30FA F1                 9453 	pop	af
   30FB F1                 9454 	pop	af
                           9455 ;demo.c:1358: drawstr2x("SOUNDS",27,84);
   30FC 21 1B 54           9456 	ld	hl,#0x541B
   30FF E5                 9457 	push	hl
   3100 21r2Ds37           9458 	ld	hl,#__str_14
   3103 E5                 9459 	push	hl
   3104 CDr78s11           9460 	call	_drawstr2x
   3107 F1                 9461 	pop	af
   3108 F1                 9462 	pop	af
                           9463 ;demo.c:1359: drawstr2x("SYSTEM",25,124);
   3109 21 19 7C           9464 	ld	hl,#0x7C19
   310C E5                 9465 	push	hl
   310D 21r34s37           9466 	ld	hl,#__str_15
   3110 E5                 9467 	push	hl
   3111 CDr78s11           9468 	call	_drawstr2x
   3114 F1                 9469 	pop	af
   3115 F1                 9470 	pop	af
                           9471 ;demo.c:1360: bigtextp++;
   3116 FD 21r30s42        9472 	ld	iy,#_bigtextp
   311A FD 34 00           9473 	inc	0 (iy)
   311D 20 07              9474 	jr	NZ,00188$
   311F FD 21r30s42        9475 	ld	iy,#_bigtextp
   3123 FD 34 01           9476 	inc	1 (iy)
   3126                    9477 00188$:
                           9478 ;demo.c:1361: tri_inited = 2;
   3126 21r11s42           9479 	ld	hl,#_tri_inited + 0
   3129 36 02              9480 	ld	(hl), #0x02
                           9481 ;demo.c:1362: ff = 0;
   312B 21rC2s41           9482 	ld	hl,#_ff + 0
   312E 36 00              9483 	ld	(hl), #0x00
   3130 21rC3s41           9484 	ld	hl,#_ff + 1
   3133 36 00              9485 	ld	(hl), #0x00
                           9486 ;demo.c:1363: ltrpointer = 0;
   3135 21rBEs41           9487 	ld	hl,#_ltrpointer + 0
   3138 36 00              9488 	ld	(hl), #0x00
   313A 21rBFs41           9489 	ld	hl,#_ltrpointer + 1
   313D 36 00              9490 	ld	(hl), #0x00
   313F                    9491 00102$:
                           9492 ;demo.c:1366: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   313F 21rC2s41           9493 	ld	hl,#_ff + 0
   3142 4E                 9494 	ld	c,(hl)
   3143 21rC3s41           9495 	ld	hl,#_ff + 1
   3146 46                 9496 	ld	b,(hl)
   3147 CB 28              9497 	sra	b
   3149 CB 19              9498 	rr	c
   314B CB 28              9499 	sra	b
   314D CB 19              9500 	rr	c
   314F 21rC2s41           9501 	ld	hl,#_ff + 0
   3152 5E                 9502 	ld	e,(hl)
   3153 21rC3s41           9503 	ld	hl,#_ff + 1
   3156 56                 9504 	ld	d,(hl)
   3157 CB 2A              9505 	sra	d
   3159 CB 1B              9506 	rr	e
   315B CB 2A              9507 	sra	d
   315D CB 1B              9508 	rr	e
   315F CB 2A              9509 	sra	d
   3161 CB 1B              9510 	rr	e
   3163 43                 9511 	ld	b,e
   3164 79                 9512 	ld	a,c
   3165 F5                 9513 	push	af
   3166 33                 9514 	inc	sp
   3167 C5                 9515 	push	bc
   3168 33                 9516 	inc	sp
   3169 41                 9517 	ld	b,c
   316A 0E 04              9518 	ld	c,#0x04
   316C C5                 9519 	push	bc
   316D CDr00s00           9520 	call	_msx2_palette
   3170 F1                 9521 	pop	af
   3171 F1                 9522 	pop	af
                           9523 ;demo.c:1367: ff+=2;
   3172 21rC2s41           9524 	ld	hl,#_ff
   3175 7E                 9525 	ld	a,(hl)
   3176 C6 02              9526 	add	a,#0x02
   3178 23                 9527 	inc	hl
   3179 2B                 9528 	dec	hl
   317A C5                 9529 	push	bc
   317B 4F                 9530 	ld	c, a
   317C 23                 9531 	inc	hl
   317D 7E                 9532 	ld	a, (hl)
   317E 47                 9533 	ld	b, a
   317F 79                 9534 	ld	a, c
   3180 2B                 9535 	dec	hl
   3181 77                 9536 	ld	(hl), a
   3182 78                 9537 	ld	a, b
   3183 C1                 9538 	pop	bc
   3184 CE 00              9539 	adc	a,#0x00
   3186 23                 9540 	inc	hl
   3187 77                 9541 	ld	(hl),a
                           9542 ;demo.c:1369: if (ff == 600) {
   3188 3ArC2s41           9543 	ld	a,(#_ff+0)
   318B D6 58              9544 	sub	a,#0x58
   318D 20 07              9545 	jr	NZ,00191$
   318F 3ArC3s41           9546 	ld	a,(#_ff+1)
   3192 D6 02              9547 	sub	a,#0x02
   3194 28 03              9548 	jr	Z,00192$
   3196                    9549 00191$:
   3196 C3r28s33           9550 	jp	00104$
   3199                    9551 00192$:
                           9552 ;demo.c:1370: cmd.size_x = 2;
   3199 21r32s41           9553 	ld	hl, #_cmd + 8
   319C 36 02              9554 	ld	(hl),#0x02
   319E 23                 9555 	inc	hl
   319F 36 00              9556 	ld	(hl),#0x00
                           9557 ;demo.c:1371: cmd.size_y = 212;
   31A1 21r34s41           9558 	ld	hl, #_cmd + 10
   31A4 36 D4              9559 	ld	(hl),#0xD4
   31A6 23                 9560 	inc	hl
   31A7 36 00              9561 	ld	(hl),#0x00
                           9562 ;demo.c:1372: cmd.data = 0;
                           9563 ;demo.c:1373: cmd.argument = 0x00; // from 70xY to left
   31A9 3E 00              9564 	ld	a,#0x00
   31AB 32r36s41           9565 	ld	(#_cmd + 12),a
   31AE 32r37s41           9566 	ld	(#_cmd + 13),a
                           9567 ;demo.c:1374: cmd.command = 0xd0; // vram to vram, y only
   31B1 01r38s41           9568 	ld	bc,#_cmd + 14
   31B4 3E D0              9569 	ld	a,#0xD0
   31B6 02                 9570 	ld	(bc),a
                           9571 ;demo.c:1375: cmd.source_x = 255;
   31B7 21r2As41           9572 	ld	hl,#_cmd
   31BA 36 FF              9573 	ld	(hl),#0xFF
   31BC 23                 9574 	inc	hl
   31BD 36 00              9575 	ld	(hl),#0x00
                           9576 ;demo.c:1376: cmd.source_y = 0;
   31BF 21r2Cs41           9577 	ld	hl, #_cmd + 2
   31C2 36 00              9578 	ld	(hl),#0x00
   31C4 23                 9579 	inc	hl
   31C5 36 00              9580 	ld	(hl),#0x00
                           9581 ;demo.c:1378: for (x = 254; x > 0; x-=4) {
   31C7 DD 36 FE FE        9582 	ld	-2 (ix),#0xFE
   31CB DD 36 FF 00        9583 	ld	-1 (ix),#0x00
   31CF                    9584 00136$:
   31CF 3E 00              9585 	ld	a,#0x00
   31D1 DD 96 FE           9586 	sub	a,-2 (ix)
   31D4 3E 00              9587 	ld	a,#0x00
   31D6 DD 9E FF           9588 	sbc	a,-1 (ix)
   31D9 F2r64s32           9589 	jp	P,00139$
                           9590 ;demo.c:1379: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   31DC 21rC2s41           9591 	ld	hl,#_ff + 0
   31DF 5E                 9592 	ld	e,(hl)
   31E0 21rC3s41           9593 	ld	hl,#_ff + 1
   31E3 56                 9594 	ld	d,(hl)
   31E4 CB 2A              9595 	sra	d
   31E6 CB 1B              9596 	rr	e
   31E8 CB 2A              9597 	sra	d
   31EA CB 1B              9598 	rr	e
   31EC 21rC2s41           9599 	ld	hl,#_ff + 0
   31EF 56                 9600 	ld	d,(hl)
   31F0 21rC3s41           9601 	ld	hl,#_ff + 1
   31F3 4E                 9602 	ld	c,(hl)
   31F4 CB 29              9603 	sra	c
   31F6 CB 1A              9604 	rr	d
   31F8 CB 29              9605 	sra	c
   31FA CB 1A              9606 	rr	d
   31FC CB 29              9607 	sra	c
   31FE CB 1A              9608 	rr	d
   3200 7B                 9609 	ld	a,e
   3201 F5                 9610 	push	af
   3202 33                 9611 	inc	sp
   3203 D5                 9612 	push	de
   3204 33                 9613 	inc	sp
   3205 53                 9614 	ld	d,e
   3206 1E 04              9615 	ld	e,#0x04
   3208 D5                 9616 	push	de
   3209 CDr00s00           9617 	call	_msx2_palette
   320C F1                 9618 	pop	af
   320D F1                 9619 	pop	af
                           9620 ;demo.c:1380: ff+=2;
   320E 21rC2s41           9621 	ld	hl,#_ff
   3211 7E                 9622 	ld	a,(hl)
   3212 C6 02              9623 	add	a,#0x02
   3214 23                 9624 	inc	hl
   3215 2B                 9625 	dec	hl
   3216 C5                 9626 	push	bc
   3217 4F                 9627 	ld	c, a
   3218 23                 9628 	inc	hl
   3219 7E                 9629 	ld	a, (hl)
   321A 47                 9630 	ld	b, a
   321B 79                 9631 	ld	a, c
   321C 2B                 9632 	dec	hl
   321D 77                 9633 	ld	(hl), a
   321E 78                 9634 	ld	a, b
   321F C1                 9635 	pop	bc
   3220 CE 00              9636 	adc	a,#0x00
   3222 23                 9637 	inc	hl
   3223 77                 9638 	ld	(hl),a
                           9639 ;demo.c:1381: waitVB();
   3224 76                 9640 		halt 
                           9641 ;demo.c:1382: cmd.dest_y = 256;
   3225 21r30s41           9642 	ld	hl, #_cmd + 6
   3228 36 00              9643 	ld	(hl),#0x00
   322A 23                 9644 	inc	hl
   322B 36 01              9645 	ld	(hl),#0x01
                           9646 ;demo.c:1383: cmd.dest_x = x;
   322D 21r2Es41           9647 	ld	hl, #_cmd + 4
   3230 DD 7E FE           9648 	ld	a,-2 (ix)
   3233 77                 9649 	ld	(hl),a
   3234 23                 9650 	inc	hl
   3235 DD 7E FF           9651 	ld	a,-1 (ix)
   3238 77                 9652 	ld	(hl),a
                           9653 ;demo.c:1384: vdp_copier(&cmd);
   3239 21r2As41           9654 	ld	hl,#_cmd
   323C E5                 9655 	push	hl
   323D CDr00s00           9656 	call	_vdp_copier
   3240 F1                 9657 	pop	af
                           9658 ;demo.c:1385: cmd.dest_y = 0;
   3241 21r30s41           9659 	ld	hl, #_cmd + 6
   3244 36 00              9660 	ld	(hl),#0x00
   3246 23                 9661 	inc	hl
   3247 36 00              9662 	ld	(hl),#0x00
                           9663 ;demo.c:1386: vdp_copier(&cmd);
   3249 21r2As41           9664 	ld	hl,#_cmd
   324C E5                 9665 	push	hl
   324D CDr00s00           9666 	call	_vdp_copier
   3250 F1                 9667 	pop	af
                           9668 ;demo.c:1378: for (x = 254; x > 0; x-=4) {
   3251 DD 7E FE           9669 	ld	a,-2 (ix)
   3254 C6 FC              9670 	add	a,#0xFC
   3256 DD 77 FE           9671 	ld	-2 (ix),a
   3259 DD 7E FF           9672 	ld	a,-1 (ix)
   325C CE FF              9673 	adc	a,#0xFF
   325E DD 77 FF           9674 	ld	-1 (ix),a
   3261 C3rCFs31           9675 	jp	00136$
   3264                    9676 00139$:
                           9677 ;demo.c:1390: for (x = 0; x < 256; x+=4) {
   3264 DD 36 FE 00        9678 	ld	-2 (ix),#0x00
   3268 DD 36 FF 00        9679 	ld	-1 (ix),#0x00
   326C                    9680 00140$:
   326C DD 7E FE           9681 	ld	a,-2 (ix)
   326F D6 00              9682 	sub	a,#0x00
   3271 DD 7E FF           9683 	ld	a,-1 (ix)
   3274 DE 01              9684 	sbc	a,#0x01
   3276 F2r01s33           9685 	jp	P,00143$
                           9686 ;demo.c:1391: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3279 21rC2s41           9687 	ld	hl,#_ff + 0
   327C 5E                 9688 	ld	e,(hl)
   327D 21rC3s41           9689 	ld	hl,#_ff + 1
   3280 56                 9690 	ld	d,(hl)
   3281 CB 2A              9691 	sra	d
   3283 CB 1B              9692 	rr	e
   3285 CB 2A              9693 	sra	d
   3287 CB 1B              9694 	rr	e
   3289 21rC2s41           9695 	ld	hl,#_ff + 0
   328C 56                 9696 	ld	d,(hl)
   328D 21rC3s41           9697 	ld	hl,#_ff + 1
   3290 4E                 9698 	ld	c,(hl)
   3291 CB 29              9699 	sra	c
   3293 CB 1A              9700 	rr	d
   3295 CB 29              9701 	sra	c
   3297 CB 1A              9702 	rr	d
   3299 CB 29              9703 	sra	c
   329B CB 1A              9704 	rr	d
   329D 7B                 9705 	ld	a,e
   329E F5                 9706 	push	af
   329F 33                 9707 	inc	sp
   32A0 D5                 9708 	push	de
   32A1 33                 9709 	inc	sp
   32A2 53                 9710 	ld	d,e
   32A3 1E 04              9711 	ld	e,#0x04
   32A5 D5                 9712 	push	de
   32A6 CDr00s00           9713 	call	_msx2_palette
   32A9 F1                 9714 	pop	af
   32AA F1                 9715 	pop	af
                           9716 ;demo.c:1392: ff+=2;
   32AB 21rC2s41           9717 	ld	hl,#_ff
   32AE 7E                 9718 	ld	a,(hl)
   32AF C6 02              9719 	add	a,#0x02
   32B1 23                 9720 	inc	hl
   32B2 2B                 9721 	dec	hl
   32B3 C5                 9722 	push	bc
   32B4 4F                 9723 	ld	c, a
   32B5 23                 9724 	inc	hl
   32B6 7E                 9725 	ld	a, (hl)
   32B7 47                 9726 	ld	b, a
   32B8 79                 9727 	ld	a, c
   32B9 2B                 9728 	dec	hl
   32BA 77                 9729 	ld	(hl), a
   32BB 78                 9730 	ld	a, b
   32BC C1                 9731 	pop	bc
   32BD CE 00              9732 	adc	a,#0x00
   32BF 23                 9733 	inc	hl
   32C0 77                 9734 	ld	(hl),a
                           9735 ;demo.c:1393: waitVB();
   32C1 76                 9736 		halt 
                           9737 ;demo.c:1394: cmd.dest_y = 256;
   32C2 21r30s41           9738 	ld	hl, #_cmd + 6
   32C5 36 00              9739 	ld	(hl),#0x00
   32C7 23                 9740 	inc	hl
   32C8 36 01              9741 	ld	(hl),#0x01
                           9742 ;demo.c:1395: cmd.dest_x = x;
   32CA 21r2Es41           9743 	ld	hl, #_cmd + 4
   32CD DD 7E FE           9744 	ld	a,-2 (ix)
   32D0 77                 9745 	ld	(hl),a
   32D1 23                 9746 	inc	hl
   32D2 DD 7E FF           9747 	ld	a,-1 (ix)
   32D5 77                 9748 	ld	(hl),a
                           9749 ;demo.c:1396: vdp_copier(&cmd);
   32D6 21r2As41           9750 	ld	hl,#_cmd
   32D9 E5                 9751 	push	hl
   32DA CDr00s00           9752 	call	_vdp_copier
   32DD F1                 9753 	pop	af
                           9754 ;demo.c:1397: cmd.dest_y = 0;
   32DE 21r30s41           9755 	ld	hl, #_cmd + 6
   32E1 36 00              9756 	ld	(hl),#0x00
   32E3 23                 9757 	inc	hl
   32E4 36 00              9758 	ld	(hl),#0x00
                           9759 ;demo.c:1398: vdp_copier(&cmd);
   32E6 21r2As41           9760 	ld	hl,#_cmd
   32E9 E5                 9761 	push	hl
   32EA CDr00s00           9762 	call	_vdp_copier
   32ED F1                 9763 	pop	af
                           9764 ;demo.c:1390: for (x = 0; x < 256; x+=4) {
   32EE DD 7E FE           9765 	ld	a,-2 (ix)
   32F1 C6 04              9766 	add	a,#0x04
   32F3 DD 77 FE           9767 	ld	-2 (ix),a
   32F6 DD 7E FF           9768 	ld	a,-1 (ix)
   32F9 CE 00              9769 	adc	a,#0x00
   32FB DD 77 FF           9770 	ld	-1 (ix),a
   32FE C3r6Cs32           9771 	jp	00140$
   3301                    9772 00143$:
                           9773 ;demo.c:1401: drawstr2x("COMMAND",4,44);
   3301 21 04 2C           9774 	ld	hl,#0x2C04
   3304 E5                 9775 	push	hl
   3305 21r3Bs37           9776 	ld	hl,#__str_16
   3308 E5                 9777 	push	hl
   3309 CDr78s11           9778 	call	_drawstr2x
   330C F1                 9779 	pop	af
   330D F1                 9780 	pop	af
                           9781 ;demo.c:1402: drawstr2x("   THE  ",32,84);
   330E 21 20 54           9782 	ld	hl,#0x5420
   3311 E5                 9783 	push	hl
   3312 21r43s37           9784 	ld	hl,#__str_17
   3315 E5                 9785 	push	hl
   3316 CDr78s11           9786 	call	_drawstr2x
   3319 F1                 9787 	pop	af
   331A F1                 9788 	pop	af
                           9789 ;demo.c:1403: drawstr2x("  BASS ",35,124);
   331B 21 23 7C           9790 	ld	hl,#0x7C23
   331E E5                 9791 	push	hl
   331F 21r4Cs37           9792 	ld	hl,#__str_18
   3322 E5                 9793 	push	hl
   3323 CDr78s11           9794 	call	_drawstr2x
   3326 F1                 9795 	pop	af
   3327 F1                 9796 	pop	af
   3328                    9797 00104$:
                           9798 ;demo.c:1406: if (ff == 1200) {
   3328 3ArC2s41           9799 	ld	a,(#_ff+0)
   332B D6 B0              9800 	sub	a,#0xB0
   332D 20 07              9801 	jr	NZ,00197$
   332F 3ArC3s41           9802 	ld	a,(#_ff+1)
   3332 D6 04              9803 	sub	a,#0x04
   3334 28 03              9804 	jr	Z,00198$
   3336                    9805 00197$:
   3336 C3rC8s34           9806 	jp	00106$
   3339                    9807 00198$:
                           9808 ;demo.c:1407: cmd.size_x = 3;
   3339 21r32s41           9809 	ld	hl, #_cmd + 8
   333C 36 03              9810 	ld	(hl),#0x03
   333E 23                 9811 	inc	hl
   333F 36 00              9812 	ld	(hl),#0x00
                           9813 ;demo.c:1408: cmd.size_y = 212;
   3341 21r34s41           9814 	ld	hl, #_cmd + 10
   3344 36 D4              9815 	ld	(hl),#0xD4
   3346 23                 9816 	inc	hl
   3347 36 00              9817 	ld	(hl),#0x00
                           9818 ;demo.c:1409: cmd.data = 0;
                           9819 ;demo.c:1410: cmd.argument = 0x00; // from 70xY to left
   3349 3E 00              9820 	ld	a,#0x00
   334B 32r36s41           9821 	ld	(#_cmd + 12),a
   334E 32r37s41           9822 	ld	(#_cmd + 13),a
                           9823 ;demo.c:1411: cmd.command = 0xd0; // vram to vram, y only
   3351 01r38s41           9824 	ld	bc,#_cmd + 14
   3354 3E D0              9825 	ld	a,#0xD0
   3356 02                 9826 	ld	(bc),a
                           9827 ;demo.c:1412: cmd.source_x = 255;
   3357 21r2As41           9828 	ld	hl,#_cmd
   335A 36 FF              9829 	ld	(hl),#0xFF
   335C 23                 9830 	inc	hl
   335D 36 00              9831 	ld	(hl),#0x00
                           9832 ;demo.c:1413: cmd.source_y = 0;
   335F 21r2Cs41           9833 	ld	hl, #_cmd + 2
   3362 36 00              9834 	ld	(hl),#0x00
   3364 23                 9835 	inc	hl
   3365 36 00              9836 	ld	(hl),#0x00
                           9837 ;demo.c:1415: for (x = 254; x > 0; x-=4) {
   3367 DD 36 FE FE        9838 	ld	-2 (ix),#0xFE
   336B DD 36 FF 00        9839 	ld	-1 (ix),#0x00
   336F                    9840 00144$:
   336F 3E 00              9841 	ld	a,#0x00
   3371 DD 96 FE           9842 	sub	a,-2 (ix)
   3374 3E 00              9843 	ld	a,#0x00
   3376 DD 9E FF           9844 	sbc	a,-1 (ix)
   3379 F2r04s34           9845 	jp	P,00147$
                           9846 ;demo.c:1416: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   337C 21rC2s41           9847 	ld	hl,#_ff + 0
   337F 5E                 9848 	ld	e,(hl)
   3380 21rC3s41           9849 	ld	hl,#_ff + 1
   3383 56                 9850 	ld	d,(hl)
   3384 CB 2A              9851 	sra	d
   3386 CB 1B              9852 	rr	e
   3388 CB 2A              9853 	sra	d
   338A CB 1B              9854 	rr	e
   338C 21rC2s41           9855 	ld	hl,#_ff + 0
   338F 56                 9856 	ld	d,(hl)
   3390 21rC3s41           9857 	ld	hl,#_ff + 1
   3393 4E                 9858 	ld	c,(hl)
   3394 CB 29              9859 	sra	c
   3396 CB 1A              9860 	rr	d
   3398 CB 29              9861 	sra	c
   339A CB 1A              9862 	rr	d
   339C CB 29              9863 	sra	c
   339E CB 1A              9864 	rr	d
   33A0 7B                 9865 	ld	a,e
   33A1 F5                 9866 	push	af
   33A2 33                 9867 	inc	sp
   33A3 D5                 9868 	push	de
   33A4 33                 9869 	inc	sp
   33A5 53                 9870 	ld	d,e
   33A6 1E 04              9871 	ld	e,#0x04
   33A8 D5                 9872 	push	de
   33A9 CDr00s00           9873 	call	_msx2_palette
   33AC F1                 9874 	pop	af
   33AD F1                 9875 	pop	af
                           9876 ;demo.c:1417: ff+=2;
   33AE 21rC2s41           9877 	ld	hl,#_ff
   33B1 7E                 9878 	ld	a,(hl)
   33B2 C6 02              9879 	add	a,#0x02
   33B4 23                 9880 	inc	hl
   33B5 2B                 9881 	dec	hl
   33B6 C5                 9882 	push	bc
   33B7 4F                 9883 	ld	c, a
   33B8 23                 9884 	inc	hl
   33B9 7E                 9885 	ld	a, (hl)
   33BA 47                 9886 	ld	b, a
   33BB 79                 9887 	ld	a, c
   33BC 2B                 9888 	dec	hl
   33BD 77                 9889 	ld	(hl), a
   33BE 78                 9890 	ld	a, b
   33BF C1                 9891 	pop	bc
   33C0 CE 00              9892 	adc	a,#0x00
   33C2 23                 9893 	inc	hl
   33C3 77                 9894 	ld	(hl),a
                           9895 ;demo.c:1418: waitVB();
   33C4 76                 9896 		halt 
                           9897 ;demo.c:1419: cmd.dest_y = 256;
   33C5 21r30s41           9898 	ld	hl, #_cmd + 6
   33C8 36 00              9899 	ld	(hl),#0x00
   33CA 23                 9900 	inc	hl
   33CB 36 01              9901 	ld	(hl),#0x01
                           9902 ;demo.c:1420: cmd.dest_x = x;
   33CD 21r2Es41           9903 	ld	hl, #_cmd + 4
   33D0 DD 7E FE           9904 	ld	a,-2 (ix)
   33D3 77                 9905 	ld	(hl),a
   33D4 23                 9906 	inc	hl
   33D5 DD 7E FF           9907 	ld	a,-1 (ix)
   33D8 77                 9908 	ld	(hl),a
                           9909 ;demo.c:1421: vdp_copier(&cmd);
   33D9 21r2As41           9910 	ld	hl,#_cmd
   33DC E5                 9911 	push	hl
   33DD CDr00s00           9912 	call	_vdp_copier
   33E0 F1                 9913 	pop	af
                           9914 ;demo.c:1422: cmd.dest_y = 0;
   33E1 21r30s41           9915 	ld	hl, #_cmd + 6
   33E4 36 00              9916 	ld	(hl),#0x00
   33E6 23                 9917 	inc	hl
   33E7 36 00              9918 	ld	(hl),#0x00
                           9919 ;demo.c:1423: vdp_copier(&cmd);
   33E9 21r2As41           9920 	ld	hl,#_cmd
   33EC E5                 9921 	push	hl
   33ED CDr00s00           9922 	call	_vdp_copier
   33F0 F1                 9923 	pop	af
                           9924 ;demo.c:1415: for (x = 254; x > 0; x-=4) {
   33F1 DD 7E FE           9925 	ld	a,-2 (ix)
   33F4 C6 FC              9926 	add	a,#0xFC
   33F6 DD 77 FE           9927 	ld	-2 (ix),a
   33F9 DD 7E FF           9928 	ld	a,-1 (ix)
   33FC CE FF              9929 	adc	a,#0xFF
   33FE DD 77 FF           9930 	ld	-1 (ix),a
   3401 C3r6Fs33           9931 	jp	00144$
   3404                    9932 00147$:
                           9933 ;demo.c:1427: for (x = 0; x < 256; x+=4) {
   3404 DD 36 FE 00        9934 	ld	-2 (ix),#0x00
   3408 DD 36 FF 00        9935 	ld	-1 (ix),#0x00
   340C                    9936 00148$:
   340C DD 7E FE           9937 	ld	a,-2 (ix)
   340F D6 00              9938 	sub	a,#0x00
   3411 DD 7E FF           9939 	ld	a,-1 (ix)
   3414 DE 01              9940 	sbc	a,#0x01
   3416 F2rA1s34           9941 	jp	P,00151$
                           9942 ;demo.c:1428: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3419 21rC2s41           9943 	ld	hl,#_ff + 0
   341C 5E                 9944 	ld	e,(hl)
   341D 21rC3s41           9945 	ld	hl,#_ff + 1
   3420 56                 9946 	ld	d,(hl)
   3421 CB 2A              9947 	sra	d
   3423 CB 1B              9948 	rr	e
   3425 CB 2A              9949 	sra	d
   3427 CB 1B              9950 	rr	e
   3429 21rC2s41           9951 	ld	hl,#_ff + 0
   342C 56                 9952 	ld	d,(hl)
   342D 21rC3s41           9953 	ld	hl,#_ff + 1
   3430 4E                 9954 	ld	c,(hl)
   3431 CB 29              9955 	sra	c
   3433 CB 1A              9956 	rr	d
   3435 CB 29              9957 	sra	c
   3437 CB 1A              9958 	rr	d
   3439 CB 29              9959 	sra	c
   343B CB 1A              9960 	rr	d
   343D 7B                 9961 	ld	a,e
   343E F5                 9962 	push	af
   343F 33                 9963 	inc	sp
   3440 D5                 9964 	push	de
   3441 33                 9965 	inc	sp
   3442 53                 9966 	ld	d,e
   3443 1E 04              9967 	ld	e,#0x04
   3445 D5                 9968 	push	de
   3446 CDr00s00           9969 	call	_msx2_palette
   3449 F1                 9970 	pop	af
   344A F1                 9971 	pop	af
                           9972 ;demo.c:1429: ff+=2;
   344B 21rC2s41           9973 	ld	hl,#_ff
   344E 7E                 9974 	ld	a,(hl)
   344F C6 02              9975 	add	a,#0x02
   3451 23                 9976 	inc	hl
   3452 2B                 9977 	dec	hl
   3453 C5                 9978 	push	bc
   3454 4F                 9979 	ld	c, a
   3455 23                 9980 	inc	hl
   3456 7E                 9981 	ld	a, (hl)
   3457 47                 9982 	ld	b, a
   3458 79                 9983 	ld	a, c
   3459 2B                 9984 	dec	hl
   345A 77                 9985 	ld	(hl), a
   345B 78                 9986 	ld	a, b
   345C C1                 9987 	pop	bc
   345D CE 00              9988 	adc	a,#0x00
   345F 23                 9989 	inc	hl
   3460 77                 9990 	ld	(hl),a
                           9991 ;demo.c:1430: waitVB();
   3461 76                 9992 		halt 
                           9993 ;demo.c:1431: cmd.dest_y = 256;
   3462 21r30s41           9994 	ld	hl, #_cmd + 6
   3465 36 00              9995 	ld	(hl),#0x00
   3467 23                 9996 	inc	hl
   3468 36 01              9997 	ld	(hl),#0x01
                           9998 ;demo.c:1432: cmd.dest_x = x;
   346A 21r2Es41           9999 	ld	hl, #_cmd + 4
   346D DD 7E FE          10000 	ld	a,-2 (ix)
   3470 77                10001 	ld	(hl),a
   3471 23                10002 	inc	hl
   3472 DD 7E FF          10003 	ld	a,-1 (ix)
   3475 77                10004 	ld	(hl),a
                          10005 ;demo.c:1433: vdp_copier(&cmd);
   3476 21r2As41          10006 	ld	hl,#_cmd
   3479 E5                10007 	push	hl
   347A CDr00s00          10008 	call	_vdp_copier
   347D F1                10009 	pop	af
                          10010 ;demo.c:1434: cmd.dest_y = 0;
   347E 21r30s41          10011 	ld	hl, #_cmd + 6
   3481 36 00             10012 	ld	(hl),#0x00
   3483 23                10013 	inc	hl
   3484 36 00             10014 	ld	(hl),#0x00
                          10015 ;demo.c:1435: vdp_copier(&cmd);
   3486 21r2As41          10016 	ld	hl,#_cmd
   3489 E5                10017 	push	hl
   348A CDr00s00          10018 	call	_vdp_copier
   348D F1                10019 	pop	af
                          10020 ;demo.c:1427: for (x = 0; x < 256; x+=4) {
   348E DD 7E FE          10021 	ld	a,-2 (ix)
   3491 C6 04             10022 	add	a,#0x04
   3493 DD 77 FE          10023 	ld	-2 (ix),a
   3496 DD 7E FF          10024 	ld	a,-1 (ix)
   3499 CE 00             10025 	adc	a,#0x00
   349B DD 77 FF          10026 	ld	-1 (ix),a
   349E C3r0Cs34          10027 	jp	00148$
   34A1                   10028 00151$:
                          10029 ;demo.c:1438: drawstr2x("REVISION",10,44);
   34A1 21 0A 2C          10030 	ld	hl,#0x2C0A
   34A4 E5                10031 	push	hl
   34A5 21r54s37          10032 	ld	hl,#__str_19
   34A8 E5                10033 	push	hl
   34A9 CDr78s11          10034 	call	_drawstr2x
   34AC F1                10035 	pop	af
   34AD F1                10036 	pop	af
                          10037 ;demo.c:1439: drawstr2x("   IS OUR",0,84);
   34AE 21 00 54          10038 	ld	hl,#0x5400
   34B1 E5                10039 	push	hl
   34B2 21r5Ds37          10040 	ld	hl,#__str_20
   34B5 E5                10041 	push	hl
   34B6 CDr78s11          10042 	call	_drawstr2x
   34B9 F1                10043 	pop	af
   34BA F1                10044 	pop	af
                          10045 ;demo.c:1440: drawstr2x("  PARTY",12,124);
   34BB 21 0C 7C          10046 	ld	hl,#0x7C0C
   34BE E5                10047 	push	hl
   34BF 21r67s37          10048 	ld	hl,#__str_21
   34C2 E5                10049 	push	hl
   34C3 CDr78s11          10050 	call	_drawstr2x
   34C6 F1                10051 	pop	af
   34C7 F1                10052 	pop	af
   34C8                   10053 00106$:
                          10054 ;demo.c:1443: if (ff >= 1600 && ff < 1700) {
   34C8 3ArC2s41          10055 	ld	a,(#_ff+0)
   34CB D6 40             10056 	sub	a,#0x40
   34CD 3ArC3s41          10057 	ld	a,(#_ff+1)
   34D0 DE 06             10058 	sbc	a,#0x06
   34D2 FArF9s34          10059 	jp	M,00108$
   34D5 3ArC2s41          10060 	ld	a,(#_ff+0)
   34D8 D6 A4             10061 	sub	a,#0xA4
   34DA 3ArC3s41          10062 	ld	a,(#_ff+1)
   34DD DE 06             10063 	sbc	a,#0x06
   34DF F2rF9s34          10064 	jp	P,00108$
                          10065 ;demo.c:1444: slowend = 37;
   34E2 21rC0s41          10066 	ld	hl,#_slowend + 0
   34E5 36 25             10067 	ld	(hl), #0x25
   34E7 21rC1s41          10068 	ld	hl,#_slowend + 1
   34EA 36 00             10069 	ld	(hl), #0x00
                          10070 ;demo.c:1445: drawstrslow("Give a big hand to all the organizers",28,164+6);
   34EC 21 1C AA          10071 	ld	hl,#0xAA1C
   34EF E5                10072 	push	hl
   34F0 21r6Fs37          10073 	ld	hl,#__str_22
   34F3 E5                10074 	push	hl
   34F4 CDrDAs10          10075 	call	_drawstrslow
   34F7 F1                10076 	pop	af
   34F8 F1                10077 	pop	af
   34F9                   10078 00108$:
                          10079 ;demo.c:1448: if (ff == 1700) {
   34F9 3ArC2s41          10080 	ld	a,(#_ff+0)
   34FC D6 A4             10081 	sub	a,#0xA4
   34FE 20 07             10082 	jr	NZ,00203$
   3500 3ArC3s41          10083 	ld	a,(#_ff+1)
   3503 D6 06             10084 	sub	a,#0x06
   3505 28 02             10085 	jr	Z,00204$
   3507                   10086 00203$:
   3507 18 0A             10087 	jr	00111$
   3509                   10088 00204$:
                          10089 ;demo.c:1449: ltrpointer = 0;
   3509 21rBEs41          10090 	ld	hl,#_ltrpointer + 0
   350C 36 00             10091 	ld	(hl), #0x00
   350E 21rBFs41          10092 	ld	hl,#_ltrpointer + 1
   3511 36 00             10093 	ld	(hl), #0x00
   3513                   10094 00111$:
                          10095 ;demo.c:1452: if (ff > 1700 && ff < 1800) {
   3513 3E A4             10096 	ld	a,#0xA4
   3515 FD 21rC2s41       10097 	ld	iy,#_ff
   3519 FD 96 00          10098 	sub	a,0 (iy)
   351C 3E 06             10099 	ld	a,#0x06
   351E FD 21rC2s41       10100 	ld	iy,#_ff
   3522 FD 9E 01          10101 	sbc	a,1 (iy)
   3525 F2r4Cs35          10102 	jp	P,00113$
   3528 3ArC2s41          10103 	ld	a,(#_ff+0)
   352B D6 08             10104 	sub	a,#0x08
   352D 3ArC3s41          10105 	ld	a,(#_ff+1)
   3530 DE 07             10106 	sbc	a,#0x07
   3532 F2r4Cs35          10107 	jp	P,00113$
                          10108 ;demo.c:1453: slowend = 21;
   3535 21rC0s41          10109 	ld	hl,#_slowend + 0
   3538 36 15             10110 	ld	(hl), #0x15
   353A 21rC1s41          10111 	ld	hl,#_slowend + 1
   353D 36 00             10112 	ld	(hl), #0x00
                          10113 ;demo.c:1454: drawstrslow("of this amazing party",64,164+16);
   353F 21 40 B4          10114 	ld	hl,#0xB440
   3542 E5                10115 	push	hl
   3543 21r95s37          10116 	ld	hl,#__str_23
   3546 E5                10117 	push	hl
   3547 CDrDAs10          10118 	call	_drawstrslow
   354A F1                10119 	pop	af
   354B F1                10120 	pop	af
   354C                   10121 00113$:
                          10122 ;demo.c:1457: if (ff >= 2000 && ff < 3890) {
   354C 3ArC2s41          10123 	ld	a,(#_ff+0)
   354F D6 D0             10124 	sub	a,#0xD0
   3551 3ArC3s41          10125 	ld	a,(#_ff+1)
   3554 DE 07             10126 	sbc	a,#0x07
   3556 FAr7As36          10127 	jp	M,00116$
   3559 3ArC2s41          10128 	ld	a,(#_ff+0)
   355C D6 32             10129 	sub	a,#0x32
   355E 3ArC3s41          10130 	ld	a,(#_ff+1)
   3561 DE 0F             10131 	sbc	a,#0x0F
   3563 F2r7As36          10132 	jp	P,00116$
                          10133 ;demo.c:1458: cmd.size_x = 1;
   3566 21r32s41          10134 	ld	hl, #_cmd + 8
   3569 36 01             10135 	ld	(hl),#0x01
   356B 23                10136 	inc	hl
   356C 36 00             10137 	ld	(hl),#0x00
                          10138 ;demo.c:1459: cmd.size_y = 17;
   356E 21r34s41          10139 	ld	hl, #_cmd + 10
   3571 36 11             10140 	ld	(hl),#0x11
   3573 23                10141 	inc	hl
   3574 36 00             10142 	ld	(hl),#0x00
                          10143 ;demo.c:1460: cmd.data = 0;
                          10144 ;demo.c:1461: cmd.argument = 0x00; // from 70xY to left
   3576 3E 00             10145 	ld	a,#0x00
   3578 32r36s41          10146 	ld	(#_cmd + 12),a
   357B 32r37s41          10147 	ld	(#_cmd + 13),a
                          10148 ;demo.c:1462: cmd.command = 0xd0; // vram to vram, y only
   357E 3E D0             10149 	ld	a,#0xD0
   3580 32r38s41          10150 	ld	(#_cmd + 14),a
                          10151 ;demo.c:1463: cmd.source_x = 128+20*(((ff-2001)>>3) % 6);
   3583 3ArC2s41          10152 	ld	a,(#_ff+0)
   3586 C6 2F             10153 	add	a,#0x2F
   3588 4F                10154 	ld	c,a
   3589 3ArC3s41          10155 	ld	a,(#_ff+1)
   358C CE F8             10156 	adc	a,#0xF8
   358E 47                10157 	ld	b,a
   358F CB 28             10158 	sra	b
   3591 CB 19             10159 	rr	c
   3593 CB 28             10160 	sra	b
   3595 CB 19             10161 	rr	c
   3597 CB 28             10162 	sra	b
   3599 CB 19             10163 	rr	c
   359B 21 06 00          10164 	ld	hl,#0x0006
   359E E5                10165 	push	hl
   359F C5                10166 	push	bc
   35A0 CDr00s00          10167 	call	__modsint_rrx_s
   35A3 F1                10168 	pop	af
   35A4 F1                10169 	pop	af
   35A5 44                10170 	ld	b,h
   35A6 4D                10171 	ld	c,l
   35A7 59                10172 	ld	e,c
   35A8 50                10173 	ld	d,b
   35A9 6B                10174 	ld	l,e
   35AA 62                10175 	ld	h,d
   35AB 29                10176 	add	hl,hl
   35AC 29                10177 	add	hl,hl
   35AD 19                10178 	add	hl,de
   35AE 29                10179 	add	hl,hl
   35AF 29                10180 	add	hl,hl
   35B0 01 80 00          10181 	ld	bc,#0x0080
   35B3 09                10182 	add	hl,bc
   35B4 4D                10183 	ld	c,l
   35B5 44                10184 	ld	b,h
   35B6 21r2As41          10185 	ld	hl,#_cmd
   35B9 71                10186 	ld	(hl),c
   35BA 23                10187 	inc	hl
   35BB 70                10188 	ld	(hl),b
                          10189 ;demo.c:1464: cmd.source_y = 768+30;
   35BC 21r2Cs41          10190 	ld	hl, #_cmd + 2
   35BF 36 1E             10191 	ld	(hl),#0x1E
   35C1 23                10192 	inc	hl
   35C2 36 03             10193 	ld	(hl),#0x03
                          10194 ;demo.c:1465: cmd.dest_x = (255)-((ff-2000)>>3);
   35C4 01r2Es41          10195 	ld	bc,#_cmd + 4
   35C7 3ArC2s41          10196 	ld	a,(#_ff+0)
   35CA C6 30             10197 	add	a,#0x30
   35CC 5F                10198 	ld	e,a
   35CD 3ArC3s41          10199 	ld	a,(#_ff+1)
   35D0 CE F8             10200 	adc	a,#0xF8
   35D2 57                10201 	ld	d,a
   35D3 CB 2A             10202 	sra	d
   35D5 CB 1B             10203 	rr	e
   35D7 CB 2A             10204 	sra	d
   35D9 CB 1B             10205 	rr	e
   35DB CB 2A             10206 	sra	d
   35DD CB 1B             10207 	rr	e
   35DF 3E FF             10208 	ld	a,#0xFF
   35E1 93                10209 	sub	a,e
   35E2 5F                10210 	ld	e,a
   35E3 3E 00             10211 	ld	a,#0x00
   35E5 9A                10212 	sbc	a,d
   35E6 57                10213 	ld	d,a
   35E7 69                10214 	ld	l,c
   35E8 60                10215 	ld	h,b
   35E9 73                10216 	ld	(hl),e
   35EA 23                10217 	inc	hl
   35EB 72                10218 	ld	(hl),d
                          10219 ;demo.c:1466: cmd.dest_y = 12;
   35EC 21r30s41          10220 	ld	hl, #_cmd + 6
   35EF 36 0C             10221 	ld	(hl),#0x0C
   35F1 23                10222 	inc	hl
   35F2 36 00             10223 	ld	(hl),#0x00
                          10224 ;demo.c:1467: vdp_copier(&cmd);
   35F4 21r2As41          10225 	ld	hl,#_cmd
   35F7 E5                10226 	push	hl
   35F8 CDr00s00          10227 	call	_vdp_copier
   35FB F1                10228 	pop	af
                          10229 ;demo.c:1470: cmd.size_x = 20;
   35FC 21r32s41          10230 	ld	hl, #_cmd + 8
   35FF 36 14             10231 	ld	(hl),#0x14
   3601 23                10232 	inc	hl
   3602 36 00             10233 	ld	(hl),#0x00
                          10234 ;demo.c:1471: cmd.size_y = 17;
   3604 21r34s41          10235 	ld	hl, #_cmd + 10
   3607 36 11             10236 	ld	(hl),#0x11
   3609 23                10237 	inc	hl
   360A 36 00             10238 	ld	(hl),#0x00
                          10239 ;demo.c:1472: cmd.data = 0;
                          10240 ;demo.c:1473: cmd.argument = 0x00; // from 70xY to left
   360C 3E 00             10241 	ld	a,#0x00
   360E 32r36s41          10242 	ld	(#_cmd + 12),a
   3611 32r37s41          10243 	ld	(#_cmd + 13),a
                          10244 ;demo.c:1474: cmd.command = 0xd0; // vram to vram, y only
   3614 3E D0             10245 	ld	a,#0xD0
   3616 32r38s41          10246 	ld	(#_cmd + 14),a
                          10247 ;demo.c:1475: cmd.source_x = 128+20*(((ff-2000)>>3) % 6);
   3619 3ArC2s41          10248 	ld	a,(#_ff+0)
   361C C6 30             10249 	add	a,#0x30
   361E 4F                10250 	ld	c,a
   361F 3ArC3s41          10251 	ld	a,(#_ff+1)
   3622 CE F8             10252 	adc	a,#0xF8
   3624 47                10253 	ld	b,a
   3625 CB 28             10254 	sra	b
   3627 CB 19             10255 	rr	c
   3629 CB 28             10256 	sra	b
   362B CB 19             10257 	rr	c
   362D CB 28             10258 	sra	b
   362F CB 19             10259 	rr	c
   3631 C5                10260 	push	bc
   3632 21 06 00          10261 	ld	hl,#0x0006
   3635 E5                10262 	push	hl
   3636 C5                10263 	push	bc
   3637 CDr00s00          10264 	call	__modsint_rrx_s
   363A F1                10265 	pop	af
   363B F1                10266 	pop	af
   363C EB                10267 	ex	de,hl
   363D C1                10268 	pop	bc
   363E 6B                10269 	ld	l,e
   363F 62                10270 	ld	h,d
   3640 29                10271 	add	hl,hl
   3641 29                10272 	add	hl,hl
   3642 19                10273 	add	hl,de
   3643 29                10274 	add	hl,hl
   3644 29                10275 	add	hl,hl
   3645 EB                10276 	ex	de,hl
   3646 21 80 00          10277 	ld	hl,#0x0080
   3649 19                10278 	add	hl,de
   364A EB                10279 	ex	de,hl
   364B 21r2As41          10280 	ld	hl,#_cmd
   364E 73                10281 	ld	(hl),e
   364F 23                10282 	inc	hl
   3650 72                10283 	ld	(hl),d
                          10284 ;demo.c:1476: cmd.source_y = 768;
   3651 11r2Cs41          10285 	ld	de,#_cmd + 2
   3654 EB                10286 	ex	de,hl
   3655 36 00             10287 	ld	(hl),#0x00
   3657 23                10288 	inc	hl
   3658 36 03             10289 	ld	(hl),#0x03
                          10290 ;demo.c:1477: cmd.dest_x = (256-20)-((ff-2000)>>3);
   365A 11r2Es41          10291 	ld	de,#_cmd + 4
   365D 3E EC             10292 	ld	a,#0xEC
   365F 91                10293 	sub	a,c
   3660 4F                10294 	ld	c,a
   3661 3E 00             10295 	ld	a,#0x00
   3663 98                10296 	sbc	a,b
   3664 47                10297 	ld	b,a
   3665 6B                10298 	ld	l,e
   3666 62                10299 	ld	h,d
   3667 71                10300 	ld	(hl),c
   3668 23                10301 	inc	hl
   3669 70                10302 	ld	(hl),b
                          10303 ;demo.c:1478: cmd.dest_y = 12;
   366A 21r30s41          10304 	ld	hl, #_cmd + 6
   366D 36 0C             10305 	ld	(hl),#0x0C
   366F 23                10306 	inc	hl
   3670 36 00             10307 	ld	(hl),#0x00
                          10308 ;demo.c:1479: vdp_copier(&cmd);
   3672 21r2As41          10309 	ld	hl,#_cmd
   3675 E5                10310 	push	hl
   3676 CDr00s00          10311 	call	_vdp_copier
   3679 F1                10312 	pop	af
   367A                   10313 00116$:
                          10314 ;demo.c:1484: if (ff == 2800) {
   367A 3ArC2s41          10315 	ld	a,(#_ff+0)
   367D D6 F0             10316 	sub	a,#0xF0
   367F 20 07             10317 	jr	NZ,00208$
   3681 3ArC3s41          10318 	ld	a,(#_ff+1)
   3684 D6 0A             10319 	sub	a,#0x0A
   3686 28 02             10320 	jr	Z,00209$
   3688                   10321 00208$:
   3688 18 0A             10322 	jr	00119$
   368A                   10323 00209$:
                          10324 ;demo.c:1485: ltrpointer = 0;
   368A 21rBEs41          10325 	ld	hl,#_ltrpointer + 0
   368D 36 00             10326 	ld	(hl), #0x00
   368F 21rBFs41          10327 	ld	hl,#_ltrpointer + 1
   3692 36 00             10328 	ld	(hl), #0x00
   3694                   10329 00119$:
                          10330 ;demo.c:1488: if (ff > 2800 && ff < 2900) {
   3694 3E F0             10331 	ld	a,#0xF0
   3696 FD 21rC2s41       10332 	ld	iy,#_ff
   369A FD 96 00          10333 	sub	a,0 (iy)
   369D 3E 0A             10334 	ld	a,#0x0A
   369F FD 21rC2s41       10335 	ld	iy,#_ff
   36A3 FD 9E 01          10336 	sbc	a,1 (iy)
   36A6 F2rCDs36          10337 	jp	P,00121$
   36A9 3ArC2s41          10338 	ld	a,(#_ff+0)
   36AC D6 54             10339 	sub	a,#0x54
   36AE 3ArC3s41          10340 	ld	a,(#_ff+1)
   36B1 DE 0B             10341 	sbc	a,#0x0B
   36B3 F2rCDs36          10342 	jp	P,00121$
                          10343 ;demo.c:1489: slowend = 21;
   36B6 21rC0s41          10344 	ld	hl,#_slowend + 0
   36B9 36 15             10345 	ld	(hl), #0x15
   36BB 21rC1s41          10346 	ld	hl,#_slowend + 1
   36BE 36 00             10347 	ld	(hl), #0x00
                          10348 ;demo.c:1490: drawstrslow("Digital Sounds System",0,0);
   36C0 21 00 00          10349 	ld	hl,#0x0000
   36C3 E5                10350 	push	hl
   36C4 21rABs37          10351 	ld	hl,#__str_24
   36C7 E5                10352 	push	hl
   36C8 CDrDAs10          10353 	call	_drawstrslow
   36CB F1                10354 	pop	af
   36CC F1                10355 	pop	af
   36CD                   10356 00121$:
                          10357 ;demo.c:1493: if (ff == 3400) {
   36CD 3ArC2s41          10358 	ld	a,(#_ff+0)
   36D0 D6 48             10359 	sub	a,#0x48
   36D2 20 07             10360 	jr	NZ,00210$
   36D4 3ArC3s41          10361 	ld	a,(#_ff+1)
   36D7 D6 0D             10362 	sub	a,#0x0D
   36D9 28 02             10363 	jr	Z,00211$
   36DB                   10364 00210$:
   36DB 18 0A             10365 	jr	00124$
   36DD                   10366 00211$:
                          10367 ;demo.c:1494: ltrpointer = 0;
   36DD 21rBEs41          10368 	ld	hl,#_ltrpointer + 0
   36E0 36 00             10369 	ld	(hl), #0x00
   36E2 21rBFs41          10370 	ld	hl,#_ltrpointer + 1
   36E5 36 00             10371 	ld	(hl), #0x00
   36E7                   10372 00124$:
                          10373 ;demo.c:1497: if (ff > 3400 && ff < 3500) {
   36E7 3E 48             10374 	ld	a,#0x48
   36E9 FD 21rC2s41       10375 	ld	iy,#_ff
   36ED FD 96 00          10376 	sub	a,0 (iy)
   36F0 3E 0D             10377 	ld	a,#0x0D
   36F2 FD 21rC2s41       10378 	ld	iy,#_ff
   36F6 FD 9E 01          10379 	sbc	a,1 (iy)
   36F9 F2r20s37          10380 	jp	P,00152$
   36FC 3ArC2s41          10381 	ld	a,(#_ff+0)
   36FF D6 AC             10382 	sub	a,#0xAC
   3701 3ArC3s41          10383 	ld	a,(#_ff+1)
   3704 DE 0D             10384 	sbc	a,#0x0D
   3706 F2r20s37          10385 	jp	P,00152$
                          10386 ;demo.c:1498: slowend = 19;
   3709 21rC0s41          10387 	ld	hl,#_slowend + 0
   370C 36 13             10388 	ld	(hl), #0x13
   370E 21rC1s41          10389 	ld	hl,#_slowend + 1
   3711 36 00             10390 	ld	(hl), #0x00
                          10391 ;demo.c:1499: drawstrslow("mew mew mew miu mou",134,0);
   3713 21 86 00          10392 	ld	hl,#0x0086
   3716 E5                10393 	push	hl
   3717 21rC1s37          10394 	ld	hl,#__str_25
   371A E5                10395 	push	hl
   371B CDrDAs10          10396 	call	_drawstrslow
   371E F1                10397 	pop	af
   371F F1                10398 	pop	af
   3720                   10399 00152$:
   3720 DD F9             10400 	ld	sp,ix
   3722 DD E1             10401 	pop	ix
   3724 C9                10402 	ret
   3725                   10403 _bigtext_end::
   3725                   10404 __str_13:
   3725 44 49 47 49 54 41 10405 	.ascii "DIGITAL"
        4C
   372C 00                10406 	.db 0x00
   372D                   10407 __str_14:
   372D 53 4F 55 4E 44 53 10408 	.ascii "SOUNDS"
   3733 00                10409 	.db 0x00
   3734                   10410 __str_15:
   3734 53 59 53 54 45 4D 10411 	.ascii "SYSTEM"
   373A 00                10412 	.db 0x00
   373B                   10413 __str_16:
   373B 43 4F 4D 4D 41 4E 10414 	.ascii "COMMAND"
        44
   3742 00                10415 	.db 0x00
   3743                   10416 __str_17:
   3743 20 20 20 54 48 45 10417 	.ascii "   THE  "
        20 20
   374B 00                10418 	.db 0x00
   374C                   10419 __str_18:
   374C 20 20 42 41 53 53 10420 	.ascii "  BASS "
        20
   3753 00                10421 	.db 0x00
   3754                   10422 __str_19:
   3754 52 45 56 49 53 49 10423 	.ascii "REVISION"
        4F 4E
   375C 00                10424 	.db 0x00
   375D                   10425 __str_20:
   375D 20 20 20 49 53 20 10426 	.ascii "   IS OUR"
        4F 55 52
   3766 00                10427 	.db 0x00
   3767                   10428 __str_21:
   3767 20 20 50 41 52 54 10429 	.ascii "  PARTY"
        59
   376E 00                10430 	.db 0x00
   376F                   10431 __str_22:
   376F 47 69 76 65 20 61 10432 	.ascii "Give a big hand to all the organizers"
        20 62 69 67 20 68
        61 6E 64 20 74 6F
        20 61 6C 6C 20 74
        68 65 20 6F 72 67
        61 6E 69 7A 65 72
        73
   3794 00                10433 	.db 0x00
   3795                   10434 __str_23:
   3795 6F 66 20 74 68 69 10435 	.ascii "of this amazing party"
        73 20 61 6D 61 7A
        69 6E 67 20 70 61
        72 74 79
   37AA 00                10436 	.db 0x00
   37AB                   10437 __str_24:
   37AB 44 69 67 69 74 61 10438 	.ascii "Digital Sounds System"
        6C 20 53 6F 75 6E
        64 73 20 53 79 73
        74 65 6D
   37C0 00                10439 	.db 0x00
   37C1                   10440 __str_25:
   37C1 6D 65 77 20 6D 65 10441 	.ascii "mew mew mew miu mou"
        77 20 6D 65 77 20
        6D 69 75 20 6D 6F
        75
   37D4 00                10442 	.db 0x00
                          10443 ;demo.c:1504: void waiter() {
                          10444 ;	---------------------------------
                          10445 ; Function waiter
                          10446 ; ---------------------------------
   37D5                   10447 _waiter_start::
   37D5                   10448 _waiter:
                          10449 ;demo.c:1506: }
   37D5 C9                10450 	ret
   37D6                   10451 _waiter_end::
                          10452 ;demo.c:1512: void credits() {
                          10453 ;	---------------------------------
                          10454 ; Function credits
                          10455 ; ---------------------------------
   37D6                   10456 _credits_start::
   37D6                   10457 _credits:
                          10458 ;demo.c:1515: if (initcredits == 0) {
   37D6 3Ar32s42          10459 	ld	a,(#_initcredits+0)
   37D9 21r33s42          10460 	ld	hl,#_initcredits + 1
   37DC B6                10461 	or	a,(hl)
   37DD C2rEDs38          10462 	jp	NZ,00102$
                          10463 ;demo.c:1516: scratch_clear();
   37E0 CDr24s08          10464 	call	_scratch_clear
                          10465 ;demo.c:1517: vdp_load_palette(scratch);
   37E3 21rC6s3F          10466 	ld	hl,#_scratch
   37E6 E5                10467 	push	hl
   37E7 CDr00s00          10468 	call	_vdp_load_palette
   37EA F1                10469 	pop	af
                          10470 ;demo.c:1519: vdp_register(0,8); // mode 512x212
   37EB 21 00 08          10471 	ld	hl,#0x0800
   37EE E5                10472 	push	hl
   37EF CDr00s00          10473 	call	_vdp_register
   37F2 F1                10474 	pop	af
                          10475 ;demo.c:1520: vdp_register(9,130); // 50hz,192
   37F3 21 09 82          10476 	ld	hl,#0x8209
   37F6 E5                10477 	push	hl
   37F7 CDr00s00          10478 	call	_vdp_register
   37FA F1                10479 	pop	af
                          10480 ;demo.c:1522: uninstall_isr();
   37FB CDr00s00          10481 	call	_uninstall_isr
                          10482 ;demo.c:1523: PLY_Stop();
   37FE CDr00s00          10483 	call	_PLY_Stop
                          10484 ;demo.c:1524: PLY_SendRegisters();
   3801 CDr00s00          10485 	call	_PLY_SendRegisters
                          10486 ;demo.c:1526: initcredits = 1;
   3804 21r32s42          10487 	ld	hl,#_initcredits + 0
   3807 36 01             10488 	ld	(hl), #0x01
   3809 21r33s42          10489 	ld	hl,#_initcredits + 1
   380C 36 00             10490 	ld	(hl), #0x00
                          10491 ;demo.c:1528: bitbuster(crebuffer2,0x0000,VRAM_0);
   380E 3E 01             10492 	ld	a,#0x01
   3810 F5                10493 	push	af
   3811 33                10494 	inc	sp
   3812 21 00 00          10495 	ld	hl,#0x0000
   3815 E5                10496 	push	hl
   3816 21rC7s1E          10497 	ld	hl,#_crebuffer2
   3819 E5                10498 	push	hl
   381A CDr00s00          10499 	call	_bitbuster
   381D F1                10500 	pop	af
   381E F1                10501 	pop	af
   381F 33                10502 	inc	sp
                          10503 ;demo.c:1530: cmd.size_x = 512;
   3820 21r32s41          10504 	ld	hl, #_cmd + 8
   3823 36 00             10505 	ld	(hl),#0x00
   3825 23                10506 	inc	hl
   3826 36 02             10507 	ld	(hl),#0x02
                          10508 ;demo.c:1531: cmd.size_y = 212;
   3828 21r34s41          10509 	ld	hl, #_cmd + 10
   382B 36 D4             10510 	ld	(hl),#0xD4
   382D 23                10511 	inc	hl
   382E 36 00             10512 	ld	(hl),#0x00
                          10513 ;demo.c:1532: cmd.data = 0;
                          10514 ;demo.c:1533: cmd.argument = 0x00;
   3830 3E 00             10515 	ld	a,#0x00
   3832 32r36s41          10516 	ld	(#_cmd + 12),a
   3835 32r37s41          10517 	ld	(#_cmd + 13),a
                          10518 ;demo.c:1534: cmd.command = 0xd0; 
   3838 01r38s41          10519 	ld	bc,#_cmd + 14
   383B 3E D0             10520 	ld	a,#0xD0
   383D 02                10521 	ld	(bc),a
                          10522 ;demo.c:1535: cmd.source_x = 0;
   383E 21r2As41          10523 	ld	hl,#_cmd
   3841 36 00             10524 	ld	(hl),#0x00
   3843 23                10525 	inc	hl
   3844 36 00             10526 	ld	(hl),#0x00
                          10527 ;demo.c:1536: cmd.source_y = 0;
   3846 21r2Cs41          10528 	ld	hl, #_cmd + 2
   3849 36 00             10529 	ld	(hl),#0x00
   384B 23                10530 	inc	hl
   384C 36 00             10531 	ld	(hl),#0x00
                          10532 ;demo.c:1537: cmd.dest_x = 0;
   384E 21r2Es41          10533 	ld	hl, #_cmd + 4
   3851 36 00             10534 	ld	(hl),#0x00
   3853 23                10535 	inc	hl
   3854 36 00             10536 	ld	(hl),#0x00
                          10537 ;demo.c:1538: cmd.dest_y = 256;
   3856 21r30s41          10538 	ld	hl, #_cmd + 6
   3859 36 00             10539 	ld	(hl),#0x00
   385B 23                10540 	inc	hl
   385C 36 01             10541 	ld	(hl),#0x01
                          10542 ;demo.c:1539: vdp_copier(&cmd);
   385E 21r2As41          10543 	ld	hl,#_cmd
   3861 E5                10544 	push	hl
   3862 CDr00s00          10545 	call	_vdp_copier
   3865 F1                10546 	pop	af
                          10547 ;demo.c:1541: bitbuster(crebuffer3,0x0000,VRAM_0);
   3866 3E 01             10548 	ld	a,#0x01
   3868 F5                10549 	push	af
   3869 33                10550 	inc	sp
   386A 21 00 00          10551 	ld	hl,#0x0000
   386D E5                10552 	push	hl
   386E 21r3Bs31          10553 	ld	hl,#_crebuffer3
   3871 E5                10554 	push	hl
   3872 CDr00s00          10555 	call	_bitbuster
   3875 F1                10556 	pop	af
   3876 F1                10557 	pop	af
   3877 33                10558 	inc	sp
                          10559 ;demo.c:1543: cmd.size_x = 512;
   3878 21r32s41          10560 	ld	hl, #_cmd + 8
   387B 36 00             10561 	ld	(hl),#0x00
   387D 23                10562 	inc	hl
   387E 36 02             10563 	ld	(hl),#0x02
                          10564 ;demo.c:1544: cmd.size_y = 212;
   3880 21r34s41          10565 	ld	hl, #_cmd + 10
   3883 36 D4             10566 	ld	(hl),#0xD4
   3885 23                10567 	inc	hl
   3886 36 00             10568 	ld	(hl),#0x00
                          10569 ;demo.c:1545: cmd.data = 0;
                          10570 ;demo.c:1546: cmd.argument = 0x00;
   3888 3E 00             10571 	ld	a,#0x00
   388A 32r36s41          10572 	ld	(#_cmd + 12),a
   388D 32r37s41          10573 	ld	(#_cmd + 13),a
                          10574 ;demo.c:1547: cmd.command = 0xd0; 
   3890 01r38s41          10575 	ld	bc,#_cmd + 14
   3893 3E D0             10576 	ld	a,#0xD0
   3895 02                10577 	ld	(bc),a
                          10578 ;demo.c:1548: cmd.source_x = 0;
   3896 21r2As41          10579 	ld	hl,#_cmd
   3899 36 00             10580 	ld	(hl),#0x00
   389B 23                10581 	inc	hl
   389C 36 00             10582 	ld	(hl),#0x00
                          10583 ;demo.c:1549: cmd.source_y = 0;
   389E 21r2Cs41          10584 	ld	hl, #_cmd + 2
   38A1 36 00             10585 	ld	(hl),#0x00
   38A3 23                10586 	inc	hl
   38A4 36 00             10587 	ld	(hl),#0x00
                          10588 ;demo.c:1550: cmd.dest_x = 0;
   38A6 21r2Es41          10589 	ld	hl, #_cmd + 4
   38A9 36 00             10590 	ld	(hl),#0x00
   38AB 23                10591 	inc	hl
   38AC 36 00             10592 	ld	(hl),#0x00
                          10593 ;demo.c:1551: cmd.dest_y = 512;
   38AE 21r30s41          10594 	ld	hl, #_cmd + 6
   38B1 36 00             10595 	ld	(hl),#0x00
   38B3 23                10596 	inc	hl
   38B4 36 02             10597 	ld	(hl),#0x02
                          10598 ;demo.c:1552: vdp_copier(&cmd);
   38B6 21r2As41          10599 	ld	hl,#_cmd
   38B9 E5                10600 	push	hl
   38BA CDr00s00          10601 	call	_vdp_copier
   38BD F1                10602 	pop	af
                          10603 ;demo.c:1554: bitbuster(crebuffer1,0x0000,VRAM_0);
   38BE 3E 01             10604 	ld	a,#0x01
   38C0 F5                10605 	push	af
   38C1 33                10606 	inc	sp
   38C2 21 00 00          10607 	ld	hl,#0x0000
   38C5 E5                10608 	push	hl
   38C6 21rCCs11          10609 	ld	hl,#_crebuffer1
   38C9 E5                10610 	push	hl
   38CA CDr00s00          10611 	call	_bitbuster
   38CD F1                10612 	pop	af
   38CE F1                10613 	pop	af
   38CF 33                10614 	inc	sp
                          10615 ;demo.c:1556: install_isr(my_isr);
   38D0 21rECs07          10616 	ld	hl,#_my_isr
   38D3 E5                10617 	push	hl
   38D4 CDr00s00          10618 	call	_install_isr
   38D7 F1                10619 	pop	af
                          10620 ;demo.c:1558: memcpy(cur_palette, credits_palette, 32);
   38D8 21 20 00          10621 	ld	hl,#0x0020
   38DB E5                10622 	push	hl
   38DC 21r06s41          10623 	ld	hl,#_credits_palette
   38DF E5                10624 	push	hl
   38E0 21r46s40          10625 	ld	hl,#_cur_palette
   38E3 E5                10626 	push	hl
   38E4 CDr00s00          10627 	call	_memcpy
   38E7 F1                10628 	pop	af
   38E8 F1                10629 	pop	af
   38E9 F1                10630 	pop	af
                          10631 ;demo.c:1560: scratch_clear();
   38EA CDr24s08          10632 	call	_scratch_clear
   38ED                   10633 00102$:
                          10634 ;demo.c:1563: if (credittimer < 100) fadein();
   38ED 3Ar34s42          10635 	ld	a,(#_credittimer+0)
   38F0 D6 64             10636 	sub	a,#0x64
   38F2 3Ar35s42          10637 	ld	a,(#_credittimer+1)
   38F5 DE 00             10638 	sbc	a,#0x00
   38F7 F2rFDs38          10639 	jp	P,00104$
   38FA CDrBBs0A          10640 	call	_fadein
   38FD                   10641 00104$:
                          10642 ;demo.c:1565: if(credittimer == 200) vdp_register(2, 0x3f);
   38FD 3Ar34s42          10643 	ld	a,(#_credittimer+0)
   3900 D6 C8             10644 	sub	a,#0xC8
   3902 20 06             10645 	jr	NZ,00118$
   3904 3Ar35s42          10646 	ld	a,(#_credittimer+1)
   3907 B7                10647 	or	a,a
   3908 28 02             10648 	jr	Z,00119$
   390A                   10649 00118$:
   390A 18 08             10650 	jr	00106$
   390C                   10651 00119$:
   390C 21 02 3F          10652 	ld	hl,#0x3F02
   390F E5                10653 	push	hl
   3910 CDr00s00          10654 	call	_vdp_register
   3913 F1                10655 	pop	af
   3914                   10656 00106$:
                          10657 ;demo.c:1566: if(credittimer == 400) vdp_register(2, 0x5f);
   3914 3Ar34s42          10658 	ld	a,(#_credittimer+0)
   3917 D6 90             10659 	sub	a,#0x90
   3919 20 07             10660 	jr	NZ,00120$
   391B 3Ar35s42          10661 	ld	a,(#_credittimer+1)
   391E D6 01             10662 	sub	a,#0x01
   3920 28 02             10663 	jr	Z,00121$
   3922                   10664 00120$:
   3922 18 08             10665 	jr	00108$
   3924                   10666 00121$:
   3924 21 02 5F          10667 	ld	hl,#0x5F02
   3927 E5                10668 	push	hl
   3928 CDr00s00          10669 	call	_vdp_register
   392B F1                10670 	pop	af
   392C                   10671 00108$:
                          10672 ;demo.c:1568: credittimer++;
   392C FD 21r34s42       10673 	ld	iy,#_credittimer
   3930 FD 34 00          10674 	inc	0 (iy)
   3933 20 07             10675 	jr	NZ,00122$
   3935 FD 21r34s42       10676 	ld	iy,#_credittimer
   3939 FD 34 01          10677 	inc	1 (iy)
   393C                   10678 00122$:
                          10679 ;demo.c:1569: if (credittimer == 600) {
   393C 3Ar34s42          10680 	ld	a,(#_credittimer+0)
   393F D6 58             10681 	sub	a,#0x58
   3941 C0                10682 	ret	NZ
   3942 3Ar35s42          10683 	ld	a,(#_credittimer+1)
   3945 D6 02             10684 	sub	a,#0x02
   3947 28 01             10685 	jr	Z,00124$
   3949 C9                10686 	ret
   394A                   10687 00124$:
                          10688 ;demo.c:1570: vdp_load_palette(scratch);
   394A 21rC6s3F          10689 	ld	hl,#_scratch
   394D E5                10690 	push	hl
   394E CDr00s00          10691 	call	_vdp_load_palette
   3951 F1                10692 	pop	af
   3952 C9                10693 	ret
   3953                   10694 _credits_end::
                          10695 ;demo.c:1580: void do_quit() {
                          10696 ;	---------------------------------
                          10697 ; Function do_quit
                          10698 ; ---------------------------------
   3953                   10699 _do_quit_start::
   3953                   10700 _do_quit:
                          10701 ;demo.c:1581: waitVB();
   3953 76                10702 		halt 
                          10703 ;demo.c:1582: uninstall_isr();
   3954 CDr00s00          10704 	call	_uninstall_isr
                          10705 ;demo.c:1583: PLY_Stop();
   3957 CDr00s00          10706 	call	_PLY_Stop
                          10707 ;demo.c:1584: PLY_SendRegisters();
   395A CDr00s00          10708 	call	_PLY_SendRegisters
                          10709 ;demo.c:1586: screen(0);
   395D 3E 00             10710 	ld	a,#0x00
   395F F5                10711 	push	af
   3960 33                10712 	inc	sp
   3961 CDr00s00          10713 	call	_screen
   3964 33                10714 	inc	sp
                          10715 ;demo.c:1587: vdp_load_palette(twister_palette);
   3965 21rA6s40          10716 	ld	hl,#_twister_palette
   3968 E5                10717 	push	hl
   3969 CDr00s00          10718 	call	_vdp_load_palette
   396C F1                10719 	pop	af
                          10720 ;demo.c:1589: puts("bye friends.\r\n\r\n");
   396D 21r7Es39          10721 	ld	hl,#__str_26
   3970 E5                10722 	push	hl
   3971 CDr00s00          10723 	call	_puts
   3974 F1                10724 	pop	af
                          10725 ;demo.c:1591: exit(0);	
   3975 3E 00             10726 	ld	a,#0x00
   3977 F5                10727 	push	af
   3978 33                10728 	inc	sp
   3979 CDr00s00          10729 	call	_exit
   397C 33                10730 	inc	sp
   397D C9                10731 	ret
   397E                   10732 _do_quit_end::
   397E                   10733 __str_26:
   397E 62 79 65 20 66 72 10734 	.ascii "bye friends."
        69 65 6E 64 73 2E
   398A 0D                10735 	.db 0x0D
   398B 0A                10736 	.db 0x0A
   398C 0D                10737 	.db 0x0D
   398D 0A                10738 	.db 0x0A
   398E 00                10739 	.db 0x00
                          10740 ;demo.c:1597: void main() {
                          10741 ;	---------------------------------
                          10742 ; Function main
                          10743 ; ---------------------------------
   398F                   10744 _main_start::
   398F                   10745 _main:
   398F DD E5             10746 	push	ix
   3991 DD 21 00 00       10747 	ld	ix,#0
   3995 DD 39             10748 	add	ix,sp
   3997 21 F9 FF          10749 	ld	hl,#-7
   399A 39                10750 	add	hl,sp
   399B F9                10751 	ld	sp,hl
                          10752 ;demo.c:1598: unsigned char quit=0;
   399C DD 36 FF 00       10753 	ld	-1 (ix),#0x00
                          10754 ;demo.c:1604: spindown();
   39A0 CDr00s00          10755 	call	_spindown
                          10756 ;demo.c:1606: puts("[starting DSS MSX demosystem]\r\n\r\n");
   39A3 21r24s3F          10757 	ld	hl,#__str_27
   39A6 E5                10758 	push	hl
   39A7 CDr00s00          10759 	call	_puts
   39AA F1                10760 	pop	af
                          10761 ;demo.c:1608: for (y = 0; y < 2; y++) {
   39AB DD 36 FB 00       10762 	ld	-5 (ix),#0x00
   39AF DD 36 FC 00       10763 	ld	-4 (ix),#0x00
   39B3                   10764 00118$:
   39B3 DD 7E FB          10765 	ld	a,-5 (ix)
   39B6 D6 02             10766 	sub	a,#0x02
   39B8 DD 7E FC          10767 	ld	a,-4 (ix)
   39BB DE 00             10768 	sbc	a,#0x00
   39BD F2r3Fs3A          10769 	jp	P,00121$
                          10770 ;demo.c:1609: for (x = 0; x < 16; x++) {
   39C0 DD 4E FB          10771 	ld	c,-5 (ix)
   39C3 DD 46 FC          10772 	ld	b,-4 (ix)
   39C6 CB 21             10773 	sla	c
   39C8 CB 10             10774 	rl	b
   39CA CB 21             10775 	sla	c
   39CC CB 10             10776 	rl	b
   39CE CB 21             10777 	sla	c
   39D0 CB 10             10778 	rl	b
   39D2 CB 21             10779 	sla	c
   39D4 CB 10             10780 	rl	b
   39D6 21 81 03          10781 	ld	hl,#0x0381
   39D9 09                10782 	add	hl,bc
   39DA DD 75 F9          10783 	ld	-7 (ix),l
   39DD DD 74 FA          10784 	ld	-6 (ix),h
   39E0 DD 36 FD 00       10785 	ld	-3 (ix),#0x00
   39E4 DD 36 FE 00       10786 	ld	-2 (ix),#0x00
   39E8                   10787 00114$:
   39E8 DD 7E FD          10788 	ld	a,-3 (ix)
   39EB D6 10             10789 	sub	a,#0x10
   39ED DD 7E FE          10790 	ld	a,-2 (ix)
   39F0 DE 00             10791 	sbc	a,#0x00
   39F2 F2r34s3A          10792 	jp	P,00120$
                          10793 ;demo.c:1610: tri_lookup_x[(y*16)+x] = x * 16;
   39F5 DD 7E FB          10794 	ld	a,-5 (ix)
   39F8 07                10795 	rlca
   39F9 07                10796 	rlca
   39FA 07                10797 	rlca
   39FB 07                10798 	rlca
   39FC E6 F0             10799 	and	a,#0xF0
   39FE 5F                10800 	ld	e,a
   39FF DD 56 FD          10801 	ld	d,-3 (ix)
   3A02 7B                10802 	ld	a,e
   3A03 82                10803 	add	a,d
   3A04 5F                10804 	ld	e, a
   3A05 C6r00             10805 	add	a,#<_tri_lookup_x
   3A07 4F                10806 	ld	c,a
   3A08 3Es01             10807 	ld	a,#>_tri_lookup_x
   3A0A CE 00             10808 	adc	a,#0x00
   3A0C 47                10809 	ld	b,a
   3A0D 7A                10810 	ld	a,d
   3A0E 07                10811 	rlca
   3A0F 07                10812 	rlca
   3A10 07                10813 	rlca
   3A11 07                10814 	rlca
   3A12 E6 F0             10815 	and	a,#0xF0
   3A14 02                10816 	ld	(bc),a
                          10817 ;demo.c:1611: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   3A15 CB 23             10818 	sla	e
   3A17 3Er88             10819 	ld	a,#<_tri_lookup_y
   3A19 83                10820 	add	a,e
   3A1A 6F                10821 	ld	l,a
   3A1B 3Es01             10822 	ld	a,#>_tri_lookup_y
   3A1D CE 00             10823 	adc	a,#0x00
   3A1F 67                10824 	ld	h,a
   3A20 DD 7E F9          10825 	ld	a,-7 (ix)
   3A23 77                10826 	ld	(hl),a
   3A24 23                10827 	inc	hl
   3A25 DD 7E FA          10828 	ld	a,-6 (ix)
   3A28 77                10829 	ld	(hl),a
                          10830 ;demo.c:1609: for (x = 0; x < 16; x++) {
   3A29 DD 34 FD          10831 	inc	-3 (ix)
   3A2C 20 03             10832 	jr	NZ,00146$
   3A2E DD 34 FE          10833 	inc	-2 (ix)
   3A31                   10834 00146$:
   3A31 C3rE8s39          10835 	jp	00114$
   3A34                   10836 00120$:
                          10837 ;demo.c:1608: for (y = 0; y < 2; y++) {
   3A34 DD 34 FB          10838 	inc	-5 (ix)
   3A37 20 03             10839 	jr	NZ,00147$
   3A39 DD 34 FC          10840 	inc	-4 (ix)
   3A3C                   10841 00147$:
   3A3C C3rB3s39          10842 	jp	00118$
   3A3F                   10843 00121$:
                          10844 ;demo.c:1615: for (x = 0; x < 26; x++) {
   3A3F DD 36 FD 00       10845 	ld	-3 (ix),#0x00
   3A43 DD 36 FE 00       10846 	ld	-2 (ix),#0x00
   3A47 DD 36 F9 00       10847 	ld	-7 (ix),#0x00
   3A4B DD 36 FA 00       10848 	ld	-6 (ix),#0x00
   3A4F                   10849 00122$:
   3A4F DD 7E FD          10850 	ld	a,-3 (ix)
   3A52 D6 1A             10851 	sub	a,#0x1A
   3A54 DD 7E FE          10852 	ld	a,-2 (ix)
   3A57 DE 00             10853 	sbc	a,#0x00
   3A59 F2rABs3A          10854 	jp	P,00125$
                          10855 ;demo.c:1616: twelvetimes[x] = x * 12;
   3A5C DD 4E FD          10856 	ld	c,-3 (ix)
   3A5F DD 46 FE          10857 	ld	b,-2 (ix)
   3A62 CB 21             10858 	sla	c
   3A64 CB 10             10859 	rl	b
   3A66 21r20s01          10860 	ld	hl,#_twelvetimes
   3A69 09                10861 	add	hl,bc
   3A6A DD 7E F9          10862 	ld	a,-7 (ix)
   3A6D 77                10863 	ld	(hl),a
   3A6E 23                10864 	inc	hl
   3A6F DD 7E FA          10865 	ld	a,-6 (ix)
   3A72 77                10866 	ld	(hl),a
                          10867 ;demo.c:1617: eighttimes[x] = x * 8;
   3A73 21r54s01          10868 	ld	hl,#_eighttimes
   3A76 09                10869 	add	hl,bc
   3A77 4D                10870 	ld	c,l
   3A78 44                10871 	ld	b,h
   3A79 DD 5E FD          10872 	ld	e,-3 (ix)
   3A7C DD 56 FE          10873 	ld	d,-2 (ix)
   3A7F CB 23             10874 	sla	e
   3A81 CB 12             10875 	rl	d
   3A83 CB 23             10876 	sla	e
   3A85 CB 12             10877 	rl	d
   3A87 CB 23             10878 	sla	e
   3A89 CB 12             10879 	rl	d
   3A8B 69                10880 	ld	l,c
   3A8C 60                10881 	ld	h,b
   3A8D 73                10882 	ld	(hl),e
   3A8E 23                10883 	inc	hl
   3A8F 72                10884 	ld	(hl),d
                          10885 ;demo.c:1615: for (x = 0; x < 26; x++) {
   3A90 DD 7E F9          10886 	ld	a,-7 (ix)
   3A93 C6 0C             10887 	add	a,#0x0C
   3A95 DD 77 F9          10888 	ld	-7 (ix),a
   3A98 DD 7E FA          10889 	ld	a,-6 (ix)
   3A9B CE 00             10890 	adc	a,#0x00
   3A9D DD 77 FA          10891 	ld	-6 (ix),a
   3AA0 DD 34 FD          10892 	inc	-3 (ix)
   3AA3 20 03             10893 	jr	NZ,00152$
   3AA5 DD 34 FE          10894 	inc	-2 (ix)
   3AA8                   10895 00152$:
   3AA8 C3r4Fs3A          10896 	jp	00122$
   3AAB                   10897 00125$:
                          10898 ;demo.c:1620: puts("init sweet PSG bleeps...");
   3AAB 21r46s3F          10899 	ld	hl,#__str_28
   3AAE E5                10900 	push	hl
   3AAF CDr00s00          10901 	call	_puts
   3AB2 F1                10902 	pop	af
                          10903 ;demo.c:1622: PLY_SongPtr = (char *)0x0103;
   3AB3 21r00s00          10904 	ld	hl,#_PLY_SongPtr + 0
   3AB6 36 03             10905 	ld	(hl), #0x03
   3AB8 21r01s00          10906 	ld	hl,#_PLY_SongPtr + 1
   3ABB 36 01             10907 	ld	(hl), #0x01
                          10908 ;demo.c:1623: PLY_Init();
   3ABD CDr00s00          10909 	call	_PLY_Init
                          10910 ;demo.c:1624: puts("done.\r\n");
   3AC0 21r5Fs3F          10911 	ld	hl,#__str_29
   3AC3 E5                10912 	push	hl
   3AC4 CDr00s00          10913 	call	_puts
   3AC7 F1                10914 	pop	af
                          10915 ;demo.c:1626: puts("detecting ya vdp type...\r\n");
   3AC8 21r67s3F          10916 	ld	hl,#__str_30
   3ACB E5                10917 	push	hl
   3ACC CDr00s00          10918 	call	_puts
   3ACF F1                10919 	pop	af
                          10920 ;demo.c:1627: if(isvdp2())
   3AD0 CDr00s00          10921 	call	_isvdp2
   3AD3 AF                10922 	xor	a,a
   3AD4 B5                10923 	or	a,l
   3AD5 28 0A             10924 	jr	Z,00102$
                          10925 ;demo.c:1629: puts("vdp2 found! setting 50hz...\r\n");
   3AD7 21r82s3F          10926 	ld	hl,#__str_31
   3ADA E5                10927 	push	hl
   3ADB CDr00s00          10928 	call	_puts
   3ADE F1                10929 	pop	af
   3ADF 18 0B             10930 	jr	00103$
   3AE1                   10931 00102$:
                          10932 ;demo.c:1632: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n");
   3AE1 21rA0s3F          10933 	ld	hl,#__str_32
   3AE4 E5                10934 	push	hl
   3AE5 CDr00s00          10935 	call	_puts
   3AE8 F1                10936 	pop	af
                          10937 ;demo.c:1633: do_quit();
   3AE9 CDr53s39          10938 	call	_do_quit
   3AEC                   10939 00103$:
                          10940 ;demo.c:1636: pal_load("TWISTER PL5",32,0);
   3AEC 21 00 00          10941 	ld	hl,#0x0000
   3AEF E5                10942 	push	hl
   3AF0 3E 20             10943 	ld	a,#0x20
   3AF2 F5                10944 	push	af
   3AF3 33                10945 	inc	sp
   3AF4 21rE5s3F          10946 	ld	hl,#__str_33
   3AF7 E5                10947 	push	hl
   3AF8 CDr37s08          10948 	call	_pal_load
   3AFB F1                10949 	pop	af
   3AFC F1                10950 	pop	af
   3AFD 33                10951 	inc	sp
                          10952 ;demo.c:1637: memcpy(twister_palette, cur_palette, 32);
   3AFE 21 20 00          10953 	ld	hl,#0x0020
   3B01 E5                10954 	push	hl
   3B02 21r46s40          10955 	ld	hl,#_cur_palette
   3B05 E5                10956 	push	hl
   3B06 21rA6s40          10957 	ld	hl,#_twister_palette
   3B09 E5                10958 	push	hl
   3B0A CDr00s00          10959 	call	_memcpy
   3B0D F1                10960 	pop	af
   3B0E F1                10961 	pop	af
   3B0F F1                10962 	pop	af
                          10963 ;demo.c:1638: pal_load("LF      PL5",32,0);
   3B10 21 00 00          10964 	ld	hl,#0x0000
   3B13 E5                10965 	push	hl
   3B14 3E 20             10966 	ld	a,#0x20
   3B16 F5                10967 	push	af
   3B17 33                10968 	inc	sp
   3B18 21rF1s3F          10969 	ld	hl,#__str_34
   3B1B E5                10970 	push	hl
   3B1C CDr37s08          10971 	call	_pal_load
   3B1F F1                10972 	pop	af
   3B20 F1                10973 	pop	af
   3B21 33                10974 	inc	sp
                          10975 ;demo.c:1639: memcpy(tf_palette, cur_palette, 32);
   3B22 21 20 00          10976 	ld	hl,#0x0020
   3B25 E5                10977 	push	hl
   3B26 21r46s40          10978 	ld	hl,#_cur_palette
   3B29 E5                10979 	push	hl
   3B2A 21rC6s40          10980 	ld	hl,#_tf_palette
   3B2D E5                10981 	push	hl
   3B2E CDr00s00          10982 	call	_memcpy
   3B31 F1                10983 	pop	af
   3B32 F1                10984 	pop	af
   3B33 F1                10985 	pop	af
                          10986 ;demo.c:1640: pal_load("BOXES   PL5",32,0);
   3B34 21 00 00          10987 	ld	hl,#0x0000
   3B37 E5                10988 	push	hl
   3B38 3E 20             10989 	ld	a,#0x20
   3B3A F5                10990 	push	af
   3B3B 33                10991 	inc	sp
   3B3C 21rFDs3F          10992 	ld	hl,#__str_35
   3B3F E5                10993 	push	hl
   3B40 CDr37s08          10994 	call	_pal_load
   3B43 F1                10995 	pop	af
   3B44 F1                10996 	pop	af
   3B45 33                10997 	inc	sp
                          10998 ;demo.c:1641: memcpy(boxes_palette, cur_palette, 32);
   3B46 21 20 00          10999 	ld	hl,#0x0020
   3B49 E5                11000 	push	hl
   3B4A 21r46s40          11001 	ld	hl,#_cur_palette
   3B4D E5                11002 	push	hl
   3B4E 21rE6s40          11003 	ld	hl,#_boxes_palette
   3B51 E5                11004 	push	hl
   3B52 CDr00s00          11005 	call	_memcpy
   3B55 F1                11006 	pop	af
   3B56 F1                11007 	pop	af
   3B57 F1                11008 	pop	af
                          11009 ;demo.c:1642: pal_load("BULBS   PL5",32,0);
   3B58 21 00 00          11010 	ld	hl,#0x0000
   3B5B E5                11011 	push	hl
   3B5C 3E 20             11012 	ld	a,#0x20
   3B5E F5                11013 	push	af
   3B5F 33                11014 	inc	sp
   3B60 21r09s40          11015 	ld	hl,#__str_36
   3B63 E5                11016 	push	hl
   3B64 CDr37s08          11017 	call	_pal_load
   3B67 F1                11018 	pop	af
   3B68 F1                11019 	pop	af
   3B69 33                11020 	inc	sp
                          11021 ;demo.c:1643: memcpy(bulbs_palette, cur_palette, 32);
   3B6A 21 20 00          11022 	ld	hl,#0x0020
   3B6D E5                11023 	push	hl
   3B6E 21r46s40          11024 	ld	hl,#_cur_palette
   3B71 E5                11025 	push	hl
   3B72 21r66s40          11026 	ld	hl,#_bulbs_palette
   3B75 E5                11027 	push	hl
   3B76 CDr00s00          11028 	call	_memcpy
   3B79 F1                11029 	pop	af
   3B7A F1                11030 	pop	af
   3B7B F1                11031 	pop	af
                          11032 ;demo.c:1644: pal_load("CREDIT1 PL6",32,0);
   3B7C 21 00 00          11033 	ld	hl,#0x0000
   3B7F E5                11034 	push	hl
   3B80 3E 20             11035 	ld	a,#0x20
   3B82 F5                11036 	push	af
   3B83 33                11037 	inc	sp
   3B84 21r15s40          11038 	ld	hl,#__str_37
   3B87 E5                11039 	push	hl
   3B88 CDr37s08          11040 	call	_pal_load
   3B8B F1                11041 	pop	af
   3B8C F1                11042 	pop	af
   3B8D 33                11043 	inc	sp
                          11044 ;demo.c:1645: memcpy(credits_palette, cur_palette, 32);
   3B8E 21 20 00          11045 	ld	hl,#0x0020
   3B91 E5                11046 	push	hl
   3B92 21r46s40          11047 	ld	hl,#_cur_palette
   3B95 E5                11048 	push	hl
   3B96 21r06s41          11049 	ld	hl,#_credits_palette
   3B99 E5                11050 	push	hl
   3B9A CDr00s00          11051 	call	_memcpy
   3B9D F1                11052 	pop	af
   3B9E F1                11053 	pop	af
   3B9F F1                11054 	pop	af
                          11055 ;demo.c:1647: puts("all good, starting the demo!\r\n");
   3BA0 21r21s40          11056 	ld	hl,#__str_38
   3BA3 E5                11057 	push	hl
   3BA4 CDr00s00          11058 	call	_puts
   3BA7 F1                11059 	pop	af
                          11060 ;demo.c:1649: pause();
   3BA8 CDr16s09          11061 	call	_pause
                          11062 ;demo.c:1650: pause();
   3BAB CDr16s09          11063 	call	_pause
                          11064 ;demo.c:1651: pause();
   3BAE CDr16s09          11065 	call	_pause
                          11066 ;demo.c:1652: pause();
   3BB1 CDr16s09          11067 	call	_pause
                          11068 ;demo.c:1653: pause();
   3BB4 CDr16s09          11069 	call	_pause
                          11070 ;demo.c:1654: pause();
   3BB7 CDr16s09          11071 	call	_pause
                          11072 ;demo.c:1656: scratch_clear();
   3BBA CDr24s08          11073 	call	_scratch_clear
                          11074 ;demo.c:1657: vdp_load_palette(scratch);
   3BBD 21rC6s3F          11075 	ld	hl,#_scratch
   3BC0 E5                11076 	push	hl
   3BC1 CDr00s00          11077 	call	_vdp_load_palette
   3BC4 F1                11078 	pop	af
                          11079 ;demo.c:1659: vdp_set_screen5();
   3BC5 CDr00s00          11080 	call	_vdp_set_screen5
                          11081 ;demo.c:1661: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   3BC8 21 00 00          11082 	ld	hl,#0x0000
   3BCB E5                11083 	push	hl
   3BCC 2E 01             11084 	ld	l, #0x01
   3BCE E5                11085 	push	hl
   3BCF 2E 00             11086 	ld	l, #0x00
   3BD1 E5                11087 	push	hl
   3BD2 21 7F 09          11088 	ld	hl,#0x097F
   3BD5 E5                11089 	push	hl
   3BD6 21r40s40          11090 	ld	hl,#__str_39
   3BD9 E5                11091 	push	hl
   3BDA CDr2Ds0A          11092 	call	_pck_load
   3BDD FD 21 0A 00       11093 	ld	iy,#0x000A
   3BE1 FD 39             11094 	add	iy,sp
   3BE3 FD F9             11095 	ld	sp,iy
                          11096 ;demo.c:1663: cmd.size_x = 256;
   3BE5 21r32s41          11097 	ld	hl, #_cmd + 8
   3BE8 36 00             11098 	ld	(hl),#0x00
   3BEA 23                11099 	inc	hl
   3BEB 36 01             11100 	ld	(hl),#0x01
                          11101 ;demo.c:1664: cmd.size_y = 212;
   3BED 21r34s41          11102 	ld	hl, #_cmd + 10
   3BF0 36 D4             11103 	ld	(hl),#0xD4
   3BF2 23                11104 	inc	hl
   3BF3 36 00             11105 	ld	(hl),#0x00
                          11106 ;demo.c:1665: cmd.data = 0;
                          11107 ;demo.c:1666: cmd.argument = 0x00;
   3BF5 3E 00             11108 	ld	a,#0x00
   3BF7 32r36s41          11109 	ld	(#_cmd + 12),a
   3BFA 32r37s41          11110 	ld	(#_cmd + 13),a
                          11111 ;demo.c:1667: cmd.command = 0xd0; 
   3BFD 01r38s41          11112 	ld	bc,#_cmd + 14
   3C00 3E D0             11113 	ld	a,#0xD0
   3C02 02                11114 	ld	(bc),a
                          11115 ;demo.c:1668: cmd.source_x = 0;
   3C03 21r2As41          11116 	ld	hl,#_cmd
   3C06 36 00             11117 	ld	(hl),#0x00
   3C08 23                11118 	inc	hl
   3C09 36 00             11119 	ld	(hl),#0x00
                          11120 ;demo.c:1669: cmd.source_y = 0;
   3C0B 21r2Cs41          11121 	ld	hl, #_cmd + 2
   3C0E 36 00             11122 	ld	(hl),#0x00
   3C10 23                11123 	inc	hl
   3C11 36 00             11124 	ld	(hl),#0x00
                          11125 ;demo.c:1670: cmd.dest_x = 0;
   3C13 21r2Es41          11126 	ld	hl, #_cmd + 4
   3C16 36 00             11127 	ld	(hl),#0x00
   3C18 23                11128 	inc	hl
   3C19 36 00             11129 	ld	(hl),#0x00
                          11130 ;demo.c:1671: cmd.dest_y = 256;
   3C1B 21r30s41          11131 	ld	hl, #_cmd + 6
   3C1E 36 00             11132 	ld	(hl),#0x00
   3C20 23                11133 	inc	hl
   3C21 36 01             11134 	ld	(hl),#0x01
                          11135 ;demo.c:1672: vdp_copier(&cmd);
   3C23 21r2As41          11136 	ld	hl,#_cmd
   3C26 E5                11137 	push	hl
   3C27 CDr00s00          11138 	call	_vdp_copier
   3C2A F1                11139 	pop	af
                          11140 ;demo.c:1674: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   3C2B 21 00 00          11141 	ld	hl,#0x0000
   3C2E E5                11142 	push	hl
   3C2F 2E 01             11143 	ld	l, #0x01
   3C31 E5                11144 	push	hl
   3C32 2E 00             11145 	ld	l, #0x00
   3C34 E5                11146 	push	hl
   3C35 21 C0 0F          11147 	ld	hl,#0x0FC0
   3C38 E5                11148 	push	hl
   3C39 21r4Cs40          11149 	ld	hl,#__str_40
   3C3C E5                11150 	push	hl
   3C3D CDr2Ds0A          11151 	call	_pck_load
   3C40 FD 21 0A 00       11152 	ld	iy,#0x000A
   3C44 FD 39             11153 	add	iy,sp
   3C46 FD F9             11154 	ld	sp,iy
                          11155 ;demo.c:1676: cmd.size_x = 256;
   3C48 21r32s41          11156 	ld	hl, #_cmd + 8
   3C4B 36 00             11157 	ld	(hl),#0x00
   3C4D 23                11158 	inc	hl
   3C4E 36 01             11159 	ld	(hl),#0x01
                          11160 ;demo.c:1677: cmd.size_y = 212;
   3C50 21r34s41          11161 	ld	hl, #_cmd + 10
   3C53 36 D4             11162 	ld	(hl),#0xD4
   3C55 23                11163 	inc	hl
   3C56 36 00             11164 	ld	(hl),#0x00
                          11165 ;demo.c:1678: cmd.data = 0;
                          11166 ;demo.c:1679: cmd.argument = 0x00;
   3C58 3E 00             11167 	ld	a,#0x00
   3C5A 32r36s41          11168 	ld	(#_cmd + 12),a
   3C5D 32r37s41          11169 	ld	(#_cmd + 13),a
                          11170 ;demo.c:1680: cmd.command = 0xd0; 
   3C60 01r38s41          11171 	ld	bc,#_cmd + 14
   3C63 3E D0             11172 	ld	a,#0xD0
   3C65 02                11173 	ld	(bc),a
                          11174 ;demo.c:1681: cmd.source_x = 0;
   3C66 21r2As41          11175 	ld	hl,#_cmd
   3C69 36 00             11176 	ld	(hl),#0x00
   3C6B 23                11177 	inc	hl
   3C6C 36 00             11178 	ld	(hl),#0x00
                          11179 ;demo.c:1682: cmd.source_y = 0;
   3C6E 21r2Cs41          11180 	ld	hl, #_cmd + 2
   3C71 36 00             11181 	ld	(hl),#0x00
   3C73 23                11182 	inc	hl
   3C74 36 00             11183 	ld	(hl),#0x00
                          11184 ;demo.c:1683: cmd.dest_x = 0;
   3C76 21r2Es41          11185 	ld	hl, #_cmd + 4
   3C79 36 00             11186 	ld	(hl),#0x00
   3C7B 23                11187 	inc	hl
   3C7C 36 00             11188 	ld	(hl),#0x00
                          11189 ;demo.c:1684: cmd.dest_y = 512;
   3C7E 21r30s41          11190 	ld	hl, #_cmd + 6
   3C81 36 00             11191 	ld	(hl),#0x00
   3C83 23                11192 	inc	hl
   3C84 36 02             11193 	ld	(hl),#0x02
                          11194 ;demo.c:1685: vdp_copier(&cmd);
   3C86 21r2As41          11195 	ld	hl,#_cmd
   3C89 E5                11196 	push	hl
   3C8A CDr00s00          11197 	call	_vdp_copier
   3C8D F1                11198 	pop	af
                          11199 ;demo.c:1688: pck_load("BOXES   PCK",3002,0x0000,VRAM_0,0);
   3C8E 21 00 00          11200 	ld	hl,#0x0000
   3C91 E5                11201 	push	hl
   3C92 2E 01             11202 	ld	l, #0x01
   3C94 E5                11203 	push	hl
   3C95 2E 00             11204 	ld	l, #0x00
   3C97 E5                11205 	push	hl
   3C98 21 BA 0B          11206 	ld	hl,#0x0BBA
   3C9B E5                11207 	push	hl
   3C9C 21r58s40          11208 	ld	hl,#__str_41
   3C9F E5                11209 	push	hl
   3CA0 CDr2Ds0A          11210 	call	_pck_load
   3CA3 FD 21 0A 00       11211 	ld	iy,#0x000A
   3CA7 FD 39             11212 	add	iy,sp
   3CA9 FD F9             11213 	ld	sp,iy
                          11214 ;demo.c:1689: cmd.size_x = 256;
   3CAB 21r32s41          11215 	ld	hl, #_cmd + 8
   3CAE 36 00             11216 	ld	(hl),#0x00
   3CB0 23                11217 	inc	hl
   3CB1 36 01             11218 	ld	(hl),#0x01
                          11219 ;demo.c:1690: cmd.size_y = 212;
   3CB3 21r34s41          11220 	ld	hl, #_cmd + 10
   3CB6 36 D4             11221 	ld	(hl),#0xD4
   3CB8 23                11222 	inc	hl
   3CB9 36 00             11223 	ld	(hl),#0x00
                          11224 ;demo.c:1691: cmd.data = 0;
                          11225 ;demo.c:1692: cmd.argument = 0x00;
   3CBB 3E 00             11226 	ld	a,#0x00
   3CBD 32r36s41          11227 	ld	(#_cmd + 12),a
   3CC0 32r37s41          11228 	ld	(#_cmd + 13),a
                          11229 ;demo.c:1693: cmd.command = 0xd0; 
   3CC3 01r38s41          11230 	ld	bc,#_cmd + 14
   3CC6 3E D0             11231 	ld	a,#0xD0
   3CC8 02                11232 	ld	(bc),a
                          11233 ;demo.c:1694: cmd.source_x = 0;
   3CC9 21r2As41          11234 	ld	hl,#_cmd
   3CCC 36 00             11235 	ld	(hl),#0x00
   3CCE 23                11236 	inc	hl
   3CCF 36 00             11237 	ld	(hl),#0x00
                          11238 ;demo.c:1695: cmd.source_y = 0;
   3CD1 21r2Cs41          11239 	ld	hl, #_cmd + 2
   3CD4 36 00             11240 	ld	(hl),#0x00
   3CD6 23                11241 	inc	hl
   3CD7 36 00             11242 	ld	(hl),#0x00
                          11243 ;demo.c:1696: cmd.dest_x = 0;
   3CD9 21r2Es41          11244 	ld	hl, #_cmd + 4
   3CDC 36 00             11245 	ld	(hl),#0x00
   3CDE 23                11246 	inc	hl
   3CDF 36 00             11247 	ld	(hl),#0x00
                          11248 ;demo.c:1697: cmd.dest_y = 768;
   3CE1 21r30s41          11249 	ld	hl, #_cmd + 6
   3CE4 36 00             11250 	ld	(hl),#0x00
   3CE6 23                11251 	inc	hl
   3CE7 36 03             11252 	ld	(hl),#0x03
                          11253 ;demo.c:1698: vdp_copier(&cmd);
   3CE9 21r2As41          11254 	ld	hl,#_cmd
   3CEC E5                11255 	push	hl
   3CED CDr00s00          11256 	call	_vdp_copier
   3CF0 F1                11257 	pop	af
                          11258 ;demo.c:1700: memset((uint8_t *) &crebuffer1, 0, 3323);
   3CF1 21 FB 0C          11259 	ld	hl,#0x0CFB
   3CF4 E5                11260 	push	hl
   3CF5 3E 00             11261 	ld	a,#0x00
   3CF7 F5                11262 	push	af
   3CF8 33                11263 	inc	sp
   3CF9 21rCCs11          11264 	ld	hl,#_crebuffer1
   3CFC E5                11265 	push	hl
   3CFD CDr00s00          11266 	call	_memset
   3D00 F1                11267 	pop	af
   3D01 F1                11268 	pop	af
   3D02 33                11269 	inc	sp
                          11270 ;demo.c:1701: raw_load("CREDIT1 PCK", 3323, crebuffer1,0);
   3D03 21 00 00          11271 	ld	hl,#0x0000
   3D06 E5                11272 	push	hl
   3D07 21rCCs11          11273 	ld	hl,#_crebuffer1
   3D0A E5                11274 	push	hl
   3D0B 21 FB 0C          11275 	ld	hl,#0x0CFB
   3D0E E5                11276 	push	hl
   3D0F 21r64s40          11277 	ld	hl,#__str_42
   3D12 E5                11278 	push	hl
   3D13 CDr2As09          11279 	call	_raw_load
   3D16 F1                11280 	pop	af
   3D17 F1                11281 	pop	af
   3D18 F1                11282 	pop	af
   3D19 F1                11283 	pop	af
                          11284 ;demo.c:1702: memset((uint8_t *) &crebuffer2, 0, 4724);
   3D1A 21 74 12          11285 	ld	hl,#0x1274
   3D1D E5                11286 	push	hl
   3D1E 3E 00             11287 	ld	a,#0x00
   3D20 F5                11288 	push	af
   3D21 33                11289 	inc	sp
   3D22 21rC7s1E          11290 	ld	hl,#_crebuffer2
   3D25 E5                11291 	push	hl
   3D26 CDr00s00          11292 	call	_memset
   3D29 F1                11293 	pop	af
   3D2A F1                11294 	pop	af
   3D2B 33                11295 	inc	sp
                          11296 ;demo.c:1703: raw_load("CREDIT2 PCK", 4724, crebuffer2,0);
   3D2C 21 00 00          11297 	ld	hl,#0x0000
   3D2F E5                11298 	push	hl
   3D30 21rC7s1E          11299 	ld	hl,#_crebuffer2
   3D33 E5                11300 	push	hl
   3D34 21 74 12          11301 	ld	hl,#0x1274
   3D37 E5                11302 	push	hl
   3D38 21r70s40          11303 	ld	hl,#__str_43
   3D3B E5                11304 	push	hl
   3D3C CDr2As09          11305 	call	_raw_load
   3D3F F1                11306 	pop	af
   3D40 F1                11307 	pop	af
   3D41 F1                11308 	pop	af
   3D42 F1                11309 	pop	af
                          11310 ;demo.c:1704: memset((uint8_t *) &crebuffer3, 0, 3723);
   3D43 21 8B 0E          11311 	ld	hl,#0x0E8B
   3D46 E5                11312 	push	hl
   3D47 3E 00             11313 	ld	a,#0x00
   3D49 F5                11314 	push	af
   3D4A 33                11315 	inc	sp
   3D4B 21r3Bs31          11316 	ld	hl,#_crebuffer3
   3D4E E5                11317 	push	hl
   3D4F CDr00s00          11318 	call	_memset
   3D52 F1                11319 	pop	af
   3D53 F1                11320 	pop	af
   3D54 33                11321 	inc	sp
                          11322 ;demo.c:1705: raw_load("CREDIT3 PCK", 3723, crebuffer3,0);
   3D55 21 00 00          11323 	ld	hl,#0x0000
   3D58 E5                11324 	push	hl
   3D59 21r3Bs31          11325 	ld	hl,#_crebuffer3
   3D5C E5                11326 	push	hl
   3D5D 21 8B 0E          11327 	ld	hl,#0x0E8B
   3D60 E5                11328 	push	hl
   3D61 21r7Cs40          11329 	ld	hl,#__str_44
   3D64 E5                11330 	push	hl
   3D65 CDr2As09          11331 	call	_raw_load
   3D68 F1                11332 	pop	af
   3D69 F1                11333 	pop	af
   3D6A F1                11334 	pop	af
   3D6B F1                11335 	pop	af
                          11336 ;demo.c:1707: scratch_clear();
   3D6C CDr24s08          11337 	call	_scratch_clear
                          11338 ;demo.c:1708: vdp_load_palette(scratch);
   3D6F 21rC6s3F          11339 	ld	hl,#_scratch
   3D72 E5                11340 	push	hl
   3D73 CDr00s00          11341 	call	_vdp_load_palette
   3D76 F1                11342 	pop	af
                          11343 ;demo.c:1710: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   3D77 21 00 00          11344 	ld	hl,#0x0000
   3D7A E5                11345 	push	hl
   3D7B 2E 01             11346 	ld	l, #0x01
   3D7D E5                11347 	push	hl
   3D7E 2E 00             11348 	ld	l, #0x00
   3D80 E5                11349 	push	hl
   3D81 21 6A 08          11350 	ld	hl,#0x086A
   3D84 E5                11351 	push	hl
   3D85 21r88s40          11352 	ld	hl,#__str_45
   3D88 E5                11353 	push	hl
   3D89 CDr2Ds0A          11354 	call	_pck_load
   3D8C FD 21 0A 00       11355 	ld	iy,#0x000A
   3D90 FD 39             11356 	add	iy,sp
   3D92 FD F9             11357 	ld	sp,iy
                          11358 ;demo.c:1712: cmd.size_x = 108;
   3D94 21r32s41          11359 	ld	hl, #_cmd + 8
   3D97 36 6C             11360 	ld	(hl),#0x6C
   3D99 23                11361 	inc	hl
   3D9A 36 00             11362 	ld	(hl),#0x00
                          11363 ;demo.c:1713: cmd.size_y = 116;
   3D9C 21r34s41          11364 	ld	hl, #_cmd + 10
   3D9F 36 74             11365 	ld	(hl),#0x74
   3DA1 23                11366 	inc	hl
   3DA2 36 00             11367 	ld	(hl),#0x00
                          11368 ;demo.c:1714: cmd.data = 0;
                          11369 ;demo.c:1715: cmd.argument = 0x00;
   3DA4 3E 00             11370 	ld	a,#0x00
   3DA6 32r36s41          11371 	ld	(#_cmd + 12),a
   3DA9 32r37s41          11372 	ld	(#_cmd + 13),a
                          11373 ;demo.c:1716: cmd.command = 0xd0; 
   3DAC 01r38s41          11374 	ld	bc,#_cmd + 14
   3DAF 3E D0             11375 	ld	a,#0xD0
   3DB1 02                11376 	ld	(bc),a
                          11377 ;demo.c:1717: cmd.source_x = 75;
   3DB2 21r2As41          11378 	ld	hl,#_cmd
   3DB5 36 4B             11379 	ld	(hl),#0x4B
   3DB7 23                11380 	inc	hl
   3DB8 36 00             11381 	ld	(hl),#0x00
                          11382 ;demo.c:1718: cmd.source_y = 50;
   3DBA 21r2Cs41          11383 	ld	hl, #_cmd + 2
   3DBD 36 32             11384 	ld	(hl),#0x32
   3DBF 23                11385 	inc	hl
   3DC0 36 00             11386 	ld	(hl),#0x00
                          11387 ;demo.c:1719: cmd.dest_x = 75;
   3DC2 21r2Es41          11388 	ld	hl, #_cmd + 4
   3DC5 36 4B             11389 	ld	(hl),#0x4B
   3DC7 23                11390 	inc	hl
   3DC8 36 00             11391 	ld	(hl),#0x00
                          11392 ;demo.c:1720: cmd.dest_y = 256;
   3DCA 21r30s41          11393 	ld	hl, #_cmd + 6
   3DCD 36 00             11394 	ld	(hl),#0x00
   3DCF 23                11395 	inc	hl
   3DD0 36 01             11396 	ld	(hl),#0x01
                          11397 ;demo.c:1721: vdp_copier(&cmd);
   3DD2 21r2As41          11398 	ld	hl,#_cmd
   3DD5 E5                11399 	push	hl
   3DD6 CDr00s00          11400 	call	_vdp_copier
   3DD9 F1                11401 	pop	af
                          11402 ;demo.c:1723: cmd.size_x = 108;
   3DDA 21r32s41          11403 	ld	hl, #_cmd + 8
   3DDD 36 6C             11404 	ld	(hl),#0x6C
   3DDF 23                11405 	inc	hl
   3DE0 36 00             11406 	ld	(hl),#0x00
                          11407 ;demo.c:1724: cmd.size_y = 60;
   3DE2 21r34s41          11408 	ld	hl, #_cmd + 10
   3DE5 36 3C             11409 	ld	(hl),#0x3C
   3DE7 23                11410 	inc	hl
   3DE8 36 00             11411 	ld	(hl),#0x00
                          11412 ;demo.c:1725: cmd.data = 0;
                          11413 ;demo.c:1726: cmd.argument = 0x00;
   3DEA 3E 00             11414 	ld	a,#0x00
   3DEC 32r36s41          11415 	ld	(#_cmd + 12),a
   3DEF 32r37s41          11416 	ld	(#_cmd + 13),a
                          11417 ;demo.c:1727: cmd.command = 0xd0; 
   3DF2 01r38s41          11418 	ld	bc,#_cmd + 14
   3DF5 3E D0             11419 	ld	a,#0xD0
   3DF7 02                11420 	ld	(bc),a
                          11421 ;demo.c:1728: cmd.source_x = 75;
   3DF8 21r2As41          11422 	ld	hl,#_cmd
   3DFB 36 4B             11423 	ld	(hl),#0x4B
   3DFD 23                11424 	inc	hl
   3DFE 36 00             11425 	ld	(hl),#0x00
                          11426 ;demo.c:1729: cmd.source_y = 256+110;
   3E00 21r2Cs41          11427 	ld	hl, #_cmd + 2
   3E03 36 6E             11428 	ld	(hl),#0x6E
   3E05 23                11429 	inc	hl
   3E06 36 01             11430 	ld	(hl),#0x01
                          11431 ;demo.c:1730: cmd.dest_x = 75;
   3E08 21r2Es41          11432 	ld	hl, #_cmd + 4
   3E0B 36 4B             11433 	ld	(hl),#0x4B
   3E0D 23                11434 	inc	hl
   3E0E 36 00             11435 	ld	(hl),#0x00
                          11436 ;demo.c:1731: cmd.dest_y = 40;
   3E10 21r30s41          11437 	ld	hl, #_cmd + 6
   3E13 36 28             11438 	ld	(hl),#0x28
   3E15 23                11439 	inc	hl
   3E16 36 00             11440 	ld	(hl),#0x00
                          11441 ;demo.c:1732: vdp_copier(&cmd);
   3E18 21r2As41          11442 	ld	hl,#_cmd
   3E1B E5                11443 	push	hl
   3E1C CDr00s00          11444 	call	_vdp_copier
   3E1F F1                11445 	pop	af
                          11446 ;demo.c:1733: cmd.dest_x = 75;
   3E20 21r2Es41          11447 	ld	hl, #_cmd + 4
   3E23 36 4B             11448 	ld	(hl),#0x4B
   3E25 23                11449 	inc	hl
   3E26 36 00             11450 	ld	(hl),#0x00
                          11451 ;demo.c:1734: cmd.dest_y = 100;
   3E28 21r30s41          11452 	ld	hl, #_cmd + 6
   3E2B 36 64             11453 	ld	(hl),#0x64
   3E2D 23                11454 	inc	hl
   3E2E 36 00             11455 	ld	(hl),#0x00
                          11456 ;demo.c:1735: vdp_copier(&cmd);
   3E30 21r2As41          11457 	ld	hl,#_cmd
   3E33 E5                11458 	push	hl
   3E34 CDr00s00          11459 	call	_vdp_copier
   3E37 F1                11460 	pop	af
                          11461 ;demo.c:1737: pal_load("DSSLOGO PL5",32,0);
   3E38 21 00 00          11462 	ld	hl,#0x0000
   3E3B E5                11463 	push	hl
   3E3C 3E 20             11464 	ld	a,#0x20
   3E3E F5                11465 	push	af
   3E3F 33                11466 	inc	sp
   3E40 21r94s40          11467 	ld	hl,#__str_46
   3E43 E5                11468 	push	hl
   3E44 CDr37s08          11469 	call	_pal_load
   3E47 F1                11470 	pop	af
   3E48 F1                11471 	pop	af
   3E49 33                11472 	inc	sp
                          11473 ;demo.c:1739: scratch_clear();
   3E4A CDr24s08          11474 	call	_scratch_clear
                          11475 ;demo.c:1741: vdp_register(9,130); // 50hz,212
   3E4D 21 09 82          11476 	ld	hl,#0x8209
   3E50 E5                11477 	push	hl
   3E51 CDr00s00          11478 	call	_vdp_register
   3E54 F1                11479 	pop	af
                          11480 ;demo.c:1743: install_isr(my_isr);
   3E55 21rECs07          11481 	ld	hl,#_my_isr
   3E58 E5                11482 	push	hl
   3E59 CDr00s00          11483 	call	_install_isr
   3E5C F1                11484 	pop	af
                          11485 ;demo.c:1747: while (!quit) {
   3E5D                   11486 00111$:
   3E5D AF                11487 	xor	a,a
   3E5E DD B6 FF          11488 	or	a,-1 (ix)
   3E61 C2r1Cs3F          11489 	jp	NZ,00113$
                          11490 ;demo.c:1749: if (vbicount >= scenetimings[timeindex+1]) {
   3E64 21r3As42          11491 	ld	hl,#_timeindex + 0
   3E67 4E                11492 	ld	c,(hl)
   3E68 0C                11493 	inc	c
   3E69 CB 21             11494 	sla	c
   3E6B 3Er51             11495 	ld	a,#<_scenetimings
   3E6D 81                11496 	add	a,c
   3E6E 6F                11497 	ld	l,a
   3E6F 3Es41             11498 	ld	a,#>_scenetimings
   3E71 CE 00             11499 	adc	a,#0x00
   3E73 67                11500 	ld	h,a
   3E74 4E                11501 	ld	c,(hl)
   3E75 23                11502 	inc	hl
   3E76 46                11503 	ld	b,(hl)
   3E77 3Ar26s41          11504 	ld	a,(#_vbicount+0)
   3E7A 91                11505 	sub	a,c
   3E7B 3Ar27s41          11506 	ld	a,(#_vbicount+1)
   3E7E 98                11507 	sbc	a,b
   3E7F FArA8s3E          11508 	jp	M,00105$
                          11509 ;demo.c:1750: sceneindex++;
   3E82 FD 21r38s42       11510 	ld	iy,#_sceneindex
   3E86 FD 34 00          11511 	inc	0 (iy)
   3E89 20 07             11512 	jr	NZ,00153$
   3E8B FD 21r38s42       11513 	ld	iy,#_sceneindex
   3E8F FD 34 01          11514 	inc	1 (iy)
   3E92                   11515 00153$:
                          11516 ;demo.c:1751: timeindex+=2;
   3E92 21r3As42          11517 	ld	hl,#_timeindex
   3E95 7E                11518 	ld	a,(hl)
   3E96 C6 02             11519 	add	a,#0x02
   3E98 23                11520 	inc	hl
   3E99 2B                11521 	dec	hl
   3E9A C5                11522 	push	bc
   3E9B 4F                11523 	ld	c, a
   3E9C 23                11524 	inc	hl
   3E9D 7E                11525 	ld	a, (hl)
   3E9E 47                11526 	ld	b, a
   3E9F 79                11527 	ld	a, c
   3EA0 2B                11528 	dec	hl
   3EA1 77                11529 	ld	(hl), a
   3EA2 78                11530 	ld	a, b
   3EA3 C1                11531 	pop	bc
   3EA4 CE 00             11532 	adc	a,#0x00
   3EA6 23                11533 	inc	hl
   3EA7 77                11534 	ld	(hl),a
   3EA8                   11535 00105$:
                          11536 ;demo.c:1754: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   3EA8 21r3As42          11537 	ld	hl,#_timeindex + 0
   3EAB 4E                11538 	ld	c,(hl)
   3EAC 21r3Bs42          11539 	ld	hl,#_timeindex + 1
   3EAF 46                11540 	ld	b,(hl)
   3EB0 CB 21             11541 	sla	c
   3EB2 CB 10             11542 	rl	b
   3EB4 21r51s41          11543 	ld	hl,#_scenetimings
   3EB7 09                11544 	add	hl,bc
   3EB8 4E                11545 	ld	c,(hl)
   3EB9 23                11546 	inc	hl
   3EBA 46                11547 	ld	b,(hl)
   3EBB 3Ar26s41          11548 	ld	a,(#_vbicount+0)
   3EBE 91                11549 	sub	a,c
   3EBF 3Ar27s41          11550 	ld	a,(#_vbicount+1)
   3EC2 98                11551 	sbc	a,b
   3EC3 FAr08s3F          11552 	jp	M,00107$
   3EC6 21r3As42          11553 	ld	hl,#_timeindex + 0
   3EC9 4E                11554 	ld	c,(hl)
   3ECA 0C                11555 	inc	c
   3ECB CB 21             11556 	sla	c
   3ECD 3Er51             11557 	ld	a,#<_scenetimings
   3ECF 81                11558 	add	a,c
   3ED0 6F                11559 	ld	l,a
   3ED1 3Es41             11560 	ld	a,#>_scenetimings
   3ED3 CE 00             11561 	adc	a,#0x00
   3ED5 67                11562 	ld	h,a
   3ED6 4E                11563 	ld	c,(hl)
   3ED7 23                11564 	inc	hl
   3ED8 46                11565 	ld	b,(hl)
   3ED9 3Ar26s41          11566 	ld	a,(#_vbicount+0)
   3EDC 91                11567 	sub	a,c
   3EDD FD 21r26s41       11568 	ld	iy,#_vbicount
   3EE1 FD 7E 01          11569 	ld	a,1 (iy)
   3EE4 98                11570 	sbc	a,b
   3EE5 F2r08s3F          11571 	jp	P,00107$
                          11572 ;demo.c:1755: waitVB();
   3EE8 76                11573 		halt 
                          11574 ;demo.c:1756: scenepointers[sceneindex]();
   3EE9 21r38s42          11575 	ld	hl,#_sceneindex + 0
   3EEC 4E                11576 	ld	c,(hl)
   3EED FD 21r38s42       11577 	ld	iy,#_sceneindex
   3EF1 FD 46 01          11578 	ld	b,1 (iy)
   3EF4 CB 21             11579 	sla	c
   3EF6 CB 10             11580 	rl	b
   3EF8 21r39s41          11581 	ld	hl,#_scenepointers
   3EFB 09                11582 	add	hl,bc
   3EFC 4E                11583 	ld	c,(hl)
   3EFD 23                11584 	inc	hl
   3EFE 46                11585 	ld	b,(hl)
   3EFF C5                11586 	push	bc
   3F00 21r07s3F          11587 	ld	hl,#00158$
   3F03 E5                11588 	push	hl
   3F04 69                11589 	ld	l,c
   3F05 60                11590 	ld	h,b
   3F06 E9                11591 	jp	(hl)
   3F07                   11592 00158$:
   3F07 C1                11593 	pop	bc
   3F08                   11594 00107$:
                          11595 ;demo.c:1760: if(space())
   3F08 21 08 01          11596 	ld	hl,#0x0108
   3F0B E5                11597 	push	hl
   3F0C CDr00s00          11598 	call	_ispressed
   3F0F F1                11599 	pop	af
   3F10 AF                11600 	xor	a,a
   3F11 B5                11601 	or	a,l
   3F12 CAr5Ds3E          11602 	jp	Z,00111$
                          11603 ;demo.c:1761: quit=1;
   3F15 DD 36 FF 01       11604 	ld	-1 (ix),#0x01
   3F19 C3r5Ds3E          11605 	jp	00111$
   3F1C                   11606 00113$:
                          11607 ;demo.c:1764: do_quit();
   3F1C CDr53s39          11608 	call	_do_quit
   3F1F DD F9             11609 	ld	sp,ix
   3F21 DD E1             11610 	pop	ix
   3F23 C9                11611 	ret
   3F24                   11612 _main_end::
   3F24                   11613 __str_27:
   3F24 5B 73 74 61 72 74 11614 	.ascii "[starting DSS MSX demosystem]"
        69 6E 67 20 44 53
        53 20 4D 53 58 20
        64 65 6D 6F 73 79
        73 74 65 6D 5D
   3F41 0D                11615 	.db 0x0D
   3F42 0A                11616 	.db 0x0A
   3F43 0D                11617 	.db 0x0D
   3F44 0A                11618 	.db 0x0A
   3F45 00                11619 	.db 0x00
   3F46                   11620 __str_28:
   3F46 69 6E 69 74 20 73 11621 	.ascii "init sweet PSG bleeps..."
        77 65 65 74 20 50
        53 47 20 62 6C 65
        65 70 73 2E 2E 2E
   3F5E 00                11622 	.db 0x00
   3F5F                   11623 __str_29:
   3F5F 64 6F 6E 65 2E    11624 	.ascii "done."
   3F64 0D                11625 	.db 0x0D
   3F65 0A                11626 	.db 0x0A
   3F66 00                11627 	.db 0x00
   3F67                   11628 __str_30:
   3F67 64 65 74 65 63 74 11629 	.ascii "detecting ya vdp type..."
        69 6E 67 20 79 61
        20 76 64 70 20 74
        79 70 65 2E 2E 2E
   3F7F 0D                11630 	.db 0x0D
   3F80 0A                11631 	.db 0x0A
   3F81 00                11632 	.db 0x00
   3F82                   11633 __str_31:
   3F82 76 64 70 32 20 66 11634 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   3F9D 0D                11635 	.db 0x0D
   3F9E 0A                11636 	.db 0x0A
   3F9F 00                11637 	.db 0x00
   3FA0                   11638 __str_32:
   3FA0 20 76 64 70 31 20 11639 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   3FAC 0D                11640 	.db 0x0D
   3FAD 0A                11641 	.db 0x0A
   3FAE 53 6F 72 72 79 2C 11642 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   3FDC 20 56 52 41 4D 2E 11643 	.ascii " VRAM."
   3FE2 0D                11644 	.db 0x0D
   3FE3 0A                11645 	.db 0x0A
   3FE4 00                11646 	.db 0x00
   3FE5                   11647 __str_33:
   3FE5 54 57 49 53 54 45 11648 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   3FF0 00                11649 	.db 0x00
   3FF1                   11650 __str_34:
   3FF1 4C 46 20 20 20 20 11651 	.ascii "LF      PL5"
        20 20 50 4C 35
   3FFC 00                11652 	.db 0x00
   3FFD                   11653 __str_35:
   3FFD 42 4F 58 45 53 20 11654 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   4008 00                11655 	.db 0x00
   4009                   11656 __str_36:
   4009 42 55 4C 42 53 20 11657 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   4014 00                11658 	.db 0x00
   4015                   11659 __str_37:
   4015 43 52 45 44 49 54 11660 	.ascii "CREDIT1 PL6"
        31 20 50 4C 36
   4020 00                11661 	.db 0x00
   4021                   11662 __str_38:
   4021 61 6C 6C 20 67 6F 11663 	.ascii "all good, starting the demo!"
        6F 64 2C 20 73 74
        61 72 74 69 6E 67
        20 74 68 65 20 64
        65 6D 6F 21
   403D 0D                11664 	.db 0x0D
   403E 0A                11665 	.db 0x0A
   403F 00                11666 	.db 0x00
   4040                   11667 __str_39:
   4040 42 55 4C 42 53 20 11668 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   404B 00                11669 	.db 0x00
   404C                   11670 __str_40:
   404C 54 57 49 53 54 45 11671 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   4057 00                11672 	.db 0x00
   4058                   11673 __str_41:
   4058 42 4F 58 45 53 20 11674 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   4063 00                11675 	.db 0x00
   4064                   11676 __str_42:
   4064 43 52 45 44 49 54 11677 	.ascii "CREDIT1 PCK"
        31 20 50 43 4B
   406F 00                11678 	.db 0x00
   4070                   11679 __str_43:
   4070 43 52 45 44 49 54 11680 	.ascii "CREDIT2 PCK"
        32 20 50 43 4B
   407B 00                11681 	.db 0x00
   407C                   11682 __str_44:
   407C 43 52 45 44 49 54 11683 	.ascii "CREDIT3 PCK"
        33 20 50 43 4B
   4087 00                11684 	.db 0x00
   4088                   11685 __str_45:
   4088 44 53 53 4C 4F 47 11686 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   4093 00                11687 	.db 0x00
   4094                   11688 __str_46:
   4094 44 53 53 4C 4F 47 11689 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   409F 00                11690 	.db 0x00
                          11691 	.area _CODE
                          11692 	.area _CABS
