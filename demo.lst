                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Tue Mar 27 12:46:42 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _credits
                             15 	.globl _waiter
                             16 	.globl _bigtext
                             17 	.globl _points
                             18 	.globl _logoeffu
                             19 	.globl _abs
                             20 	.globl _tritiles
                             21 	.globl _drawtilescreen_full
                             22 	.globl _drawtilescreen
                             23 	.globl _drawtritile
                             24 	.globl _thewave
                             25 	.globl _boxes
                             26 	.globl _drawbox
                             27 	.globl _animplay
                             28 	.globl _bulbs
                             29 	.globl _twister
                             30 	.globl _font
                             31 	.globl _drawsine
                             32 	.globl _drawstr2x
                             33 	.globl _drawstrslow
                             34 	.globl _drawstr
                             35 	.globl _do_letter_tall
                             36 	.globl _do_letter
                             37 	.globl _do_2xletter
                             38 	.globl _raster_effu
                             39 	.globl _do_blocks
                             40 	.globl _do_ymmm
                             41 	.globl _fadein
                             42 	.globl _pck_load
                             43 	.globl _raw_load
                             44 	.globl _pause
                             45 	.globl _pal_load
                             46 	.globl _scratch_clear
                             47 	.globl _my_isr
                             48 	.globl _isNthBitSet
                             49 	.globl _timeindex
                             50 	.globl _sceneindex
                             51 	.globl _myoffs
                             52 	.globl _curpage
                             53 	.globl _musicstopped
                             54 	.globl _credittimer
                             55 	.globl _initcredits
                             56 	.globl _bigtextp
                             57 	.globl _greetindex
                             58 	.globl _pointframe
                             59 	.globl _initpoints
                             60 	.globl _onceclear
                             61 	.globl _powa
                             62 	.globl _powatick
                             63 	.globl _triframes
                             64 	.globl _tripaltick2
                             65 	.globl _tripaltick
                             66 	.globl _tripal
                             67 	.globl _tiletick
                             68 	.globl _tiley
                             69 	.globl _tilex
                             70 	.globl _tilei
                             71 	.globl _tri_inited
                             72 	.globl _ffa
                             73 	.globl _buf
                             74 	.globl _initwave
                             75 	.globl _boxticks
                             76 	.globl _prevbox_of
                             77 	.globl _boxes_of
                             78 	.globl _pbt
                             79 	.globl _pbx
                             80 	.globl _bonc
                             81 	.globl _bo
                             82 	.globl _bt
                             83 	.globl _by
                             84 	.globl _bx
                             85 	.globl _boxi
                             86 	.globl _boxes_y
                             87 	.globl _boxes_x
                             88 	.globl _prevy
                             89 	.globl _prevx
                             90 	.globl _buffer
                             91 	.globl _boxes_init
                             92 	.globl _anim_init
                             93 	.globl _sy
                             94 	.globl _enderdir
                             95 	.globl _ender
                             96 	.globl _ff2
                             97 	.globl _ff1
                             98 	.globl _bulbflipper
                             99 	.globl _twialku
                            100 	.globl _twinited
                            101 	.globl _ff
                            102 	.globl _slowend
                            103 	.globl _ltrpointer
                            104 	.globl _ly
                            105 	.globl _lx
                            106 	.globl _linenum
                            107 	.globl _flof
                            108 	.globl _btab
                            109 	.globl _bty
                            110 	.globl _btx
                            111 	.globl _bsy
                            112 	.globl _bsx
                            113 	.globl _block_init
                            114 	.globl _cc
                            115 	.globl _yofff
                            116 	.globl _scenetimings
                            117 	.globl _scenepointers
                            118 	.globl _cmd
                            119 	.globl _tick
                            120 	.globl _vbicount
                            121 	.globl _credits_palette
                            122 	.globl _boxes_palette
                            123 	.globl _tf_palette
                            124 	.globl _twister_palette
                            125 	.globl _block_palette
                            126 	.globl _bulbs_palette
                            127 	.globl _cur_palette
                            128 	.globl _scratch
                            129 	.globl _crebuffer3
                            130 	.globl _crebuffer2
                            131 	.globl _crebuffer1
                            132 	.globl _packbuffer
                            133 	.globl _tri_lookup_y
                            134 	.globl _eighttimes
                            135 	.globl _twelvetimes
                            136 	.globl _tri_lookup_x
                            137 	.globl _sintab
                            138 	.globl _font_w
                            139 	.globl _font_y
                            140 	.globl _font_x
                            141 	.globl _tri_inva4
                            142 	.globl _tri_inva3
                            143 	.globl _tri_inva2
                            144 	.globl _tri_inva1
                            145 	.globl _tri_side2
                            146 	.globl _tri_side1
                            147 	.globl _tri_dia
                            148 	.globl _tri_up
                            149 	.globl _tri_center
                            150 	.globl _sintabx
                            151 ;--------------------------------------------------------
                            152 ; special function registers
                            153 ;--------------------------------------------------------
                            154 ;--------------------------------------------------------
                            155 ;  ram data
                            156 ;--------------------------------------------------------
                            157 	.area _DATA
   0000                     158 _sintab::
   0000                     159 	.ds 256
   0100                     160 _tri_lookup_x::
   0100                     161 	.ds 32
   0120                     162 _twelvetimes::
   0120                     163 	.ds 52
   0154                     164 _eighttimes::
   0154                     165 	.ds 52
   0188                     166 _tri_lookup_y::
   0188                     167 	.ds 64
   01C8                     168 _packbuffer::
   01C8                     169 	.ds 4100
   11CC                     170 _crebuffer1::
   11CC                     171 	.ds 3323
   1EC7                     172 _crebuffer2::
   1EC7                     173 	.ds 4724
   313B                     174 _crebuffer3::
   313B                     175 	.ds 3723
   3FC6                     176 _scratch::
   3FC6                     177 	.ds 128
   4046                     178 _cur_palette::
   4046                     179 	.ds 32
   4066                     180 _bulbs_palette::
   4066                     181 	.ds 32
   4086                     182 _block_palette::
   4086                     183 	.ds 32
   40A6                     184 _twister_palette::
   40A6                     185 	.ds 32
   40C6                     186 _tf_palette::
   40C6                     187 	.ds 32
   40E6                     188 _boxes_palette::
   40E6                     189 	.ds 32
   4106                     190 _credits_palette::
   4106                     191 	.ds 32
   4126                     192 _vbicount::
   4126                     193 	.ds 2
   4128                     194 _tick::
   4128                     195 	.ds 2
   412A                     196 _cmd::
   412A                     197 	.ds 15
   4139                     198 _scenepointers::
   4139                     199 	.ds 24
   4151                     200 _scenetimings::
   4151                     201 	.ds 48
   4181                     202 _isNthBitSet_mask_1_1:
   4181                     203 	.ds 8
   4189                     204 _yofff::
   4189                     205 	.ds 1
   418A                     206 _cc::
   418A                     207 	.ds 1
   418B                     208 _flipper:
   418B                     209 	.ds 2
   418D                     210 _ymmmf:
   418D                     211 	.ds 2
   418F                     212 _block_init::
   418F                     213 	.ds 1
   4190                     214 _bsx::
   4190                     215 	.ds 2
   4192                     216 _bsy::
   4192                     217 	.ds 2
   4194                     218 _btx::
   4194                     219 	.ds 2
   4196                     220 _bty::
   4196                     221 	.ds 2
   4198                     222 _btab::
   4198                     223 	.ds 32
   41B8                     224 _flof::
   41B8                     225 	.ds 2
   41BA                     226 _linenum::
   41BA                     227 	.ds 2
   41BC                     228 _lx::
   41BC                     229 	.ds 1
   41BD                     230 _ly::
   41BD                     231 	.ds 1
   41BE                     232 _ltrpointer::
   41BE                     233 	.ds 2
   41C0                     234 _slowend::
   41C0                     235 	.ds 2
   41C2                     236 _ff::
   41C2                     237 	.ds 2
   41C4                     238 _twinited::
   41C4                     239 	.ds 2
   41C6                     240 _twialku::
   41C6                     241 	.ds 2
   41C8                     242 _bulbflipper::
   41C8                     243 	.ds 2
   41CA                     244 _ff1::
   41CA                     245 	.ds 2
   41CC                     246 _ff2::
   41CC                     247 	.ds 2
   41CE                     248 _ender::
   41CE                     249 	.ds 2
   41D0                     250 _enderdir::
   41D0                     251 	.ds 2
   41D2                     252 _sy::
   41D2                     253 	.ds 2
   41D4                     254 _xo:
   41D4                     255 	.ds 2
   41D6                     256 _yo:
   41D6                     257 	.ds 2
   41D8                     258 _po:
   41D8                     259 	.ds 2
   41DA                     260 _frames:
   41DA                     261 	.ds 2
   41DC                     262 _anim_init::
   41DC                     263 	.ds 2
   41DE                     264 _boxes_init::
   41DE                     265 	.ds 1
   41DF                     266 _buffer::
   41DF                     267 	.ds 2
   41E1                     268 _prevx::
   41E1                     269 	.ds 2
   41E3                     270 _prevy::
   41E3                     271 	.ds 2
   41E5                     272 _boxes_x::
   41E5                     273 	.ds 5
   41EA                     274 _boxes_y::
   41EA                     275 	.ds 10
   41F4                     276 _boxi::
   41F4                     277 	.ds 1
   41F5                     278 _bx::
   41F5                     279 	.ds 2
   41F7                     280 _by::
   41F7                     281 	.ds 2
   41F9                     282 _bt::
   41F9                     283 	.ds 2
   41FB                     284 _bo::
   41FB                     285 	.ds 2
   41FD                     286 _bonc::
   41FD                     287 	.ds 2
   41FF                     288 _pbx::
   41FF                     289 	.ds 2
   4201                     290 _pbt::
   4201                     291 	.ds 2
   4203                     292 _boxes_of::
   4203                     293 	.ds 10
   420D                     294 _prevbox_of::
   420D                     295 	.ds 1
   420E                     296 _boxticks::
   420E                     297 	.ds 2
   4210                     298 _initwave::
   4210                     299 	.ds 1
   4211                     300 _buf::
   4211                     301 	.ds 2
   4213                     302 _ffa::
   4213                     303 	.ds 2
   4215                     304 _tri_inited::
   4215                     305 	.ds 1
   4216                     306 _tilei::
   4216                     307 	.ds 2
   4218                     308 _tilex::
   4218                     309 	.ds 2
   421A                     310 _tiley::
   421A                     311 	.ds 2
   421C                     312 _tiletick::
   421C                     313 	.ds 1
   421D                     314 _tripal::
   421D                     315 	.ds 9
   4226                     316 _tripaltick::
   4226                     317 	.ds 1
   4227                     318 _tripaltick2::
   4227                     319 	.ds 1
   4228                     320 _triframes::
   4228                     321 	.ds 2
   422A                     322 _powatick::
   422A                     323 	.ds 2
   422C                     324 _powa::
   422C                     325 	.ds 2
   422E                     326 _onceclear::
   422E                     327 	.ds 1
   422F                     328 _initpoints::
   422F                     329 	.ds 1
   4230                     330 _pointframe::
   4230                     331 	.ds 2
   4232                     332 _greetindex::
   4232                     333 	.ds 2
   4234                     334 _bigtextp::
   4234                     335 	.ds 2
   4236                     336 _initcredits::
   4236                     337 	.ds 2
   4238                     338 _credittimer::
   4238                     339 	.ds 2
   423A                     340 _musicstopped::
   423A                     341 	.ds 2
   423C                     342 _curpage::
   423C                     343 	.ds 2
   423E                     344 _myoffs::
   423E                     345 	.ds 2
   4240                     346 _sceneindex::
   4240                     347 	.ds 2
   4242                     348 _timeindex::
   4242                     349 	.ds 2
                            350 ;--------------------------------------------------------
                            351 ; overlayable items in  ram 
                            352 ;--------------------------------------------------------
                            353 	.area _OVERLAY
                            354 ;--------------------------------------------------------
                            355 ; external initialized ram data
                            356 ;--------------------------------------------------------
                            357 ;--------------------------------------------------------
                            358 ; global & static initialisations
                            359 ;--------------------------------------------------------
                            360 	.area _HOME
                            361 	.area _GSINIT
                            362 	.area _GSFINAL
                            363 	.area _GSINIT
                            364 ;demo.c:235: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r81s41            365 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            366 	call	__initrleblock
   0006 08                  367 	.db	8
   0007 01 02 04 08 10 20   368 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  369 	.db	0
                            370 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            371 	ld	hl,#_sintab
   0013 CDr00s00            372 	call	__initrleblock
   0016 3B                  373 	.db	59
   0017 00 03 06 09 0C 0F   374 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   375 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   376 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   377 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   378 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   379 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   380 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            381 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               382 	.db	#-5,#0x7E
   0054 01                  383 	.db	1
   0055 7F                  384 	.db	0x7F
   0056 FB 7E               385 	.db	#-5,#0x7E
   0058 75                  386 	.db	117
   0059 7D 7D 7C 7B 7B 7A   387 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   388 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   389 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   390 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   391 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   392 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   393 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   394 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   395 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   396 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   397 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   398 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   399 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   400 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      401 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               402 	.db	#-5,#0x82
   00D0 01                  403 	.db	1
   00D1 81                  404 	.db	0x81
   00D2 FB 82               405 	.db	#-5,#0x82
   00D4 3A                  406 	.db	58
   00D5 83 83 84 85 85 86   407 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   408 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   409 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   410 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   411 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   412 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   413 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               414 	.db	0xFA, 0xFD
   010F 00                  415 	.db	0
                            416 ;demo.c:176: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            417 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            418 	call	__initrleblock
   0116 E0 00               419 	.db	#-32,#0x00
   0118 00                  420 	.db	0
                            421 ;demo.c:177: int twelvetimes[26] = { 0 };
   0119 21r20s01            422 	ld	hl,#_twelvetimes
   011C CDr00s00            423 	call	__initrleblock
   011F CC 00               424 	.db	#-52,#0x00
   0121 00                  425 	.db	0
                            426 ;demo.c:178: int eighttimes[26] = { 0 };
   0122 21r54s01            427 	ld	hl,#_eighttimes
   0125 CDr00s00            428 	call	__initrleblock
   0128 CC 00               429 	.db	#-52,#0x00
   012A 00                  430 	.db	0
                            431 ;demo.c:180: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            432 	ld	hl,#_tri_lookup_y
   012E CDr00s00            433 	call	__initrleblock
   0131 C0 00               434 	.db	#-64,#0x00
   0133 00                  435 	.db	0
                            436 ;demo.c:182: uint8_t packbuffer[4100] = {0};
   0134 21rC8s01            437 	ld	hl,#_packbuffer
   0137 CDr00s00            438 	call	__initrleblock
   013A 81 00               439 	.db	#-127,#0x00
   013C 81 00               440 	.db	#-127,#0x00
   013E 81 00               441 	.db	#-127,#0x00
   0140 81 00               442 	.db	#-127,#0x00
   0142 81 00               443 	.db	#-127,#0x00
   0144 81 00               444 	.db	#-127,#0x00
   0146 81 00               445 	.db	#-127,#0x00
   0148 81 00               446 	.db	#-127,#0x00
   014A 81 00               447 	.db	#-127,#0x00
   014C 81 00               448 	.db	#-127,#0x00
   014E 81 00               449 	.db	#-127,#0x00
   0150 81 00               450 	.db	#-127,#0x00
   0152 81 00               451 	.db	#-127,#0x00
   0154 81 00               452 	.db	#-127,#0x00
   0156 81 00               453 	.db	#-127,#0x00
   0158 81 00               454 	.db	#-127,#0x00
   015A 81 00               455 	.db	#-127,#0x00
   015C 81 00               456 	.db	#-127,#0x00
   015E 81 00               457 	.db	#-127,#0x00
   0160 81 00               458 	.db	#-127,#0x00
   0162 81 00               459 	.db	#-127,#0x00
   0164 81 00               460 	.db	#-127,#0x00
   0166 81 00               461 	.db	#-127,#0x00
   0168 81 00               462 	.db	#-127,#0x00
   016A 81 00               463 	.db	#-127,#0x00
   016C 81 00               464 	.db	#-127,#0x00
   016E 81 00               465 	.db	#-127,#0x00
   0170 81 00               466 	.db	#-127,#0x00
   0172 81 00               467 	.db	#-127,#0x00
   0174 81 00               468 	.db	#-127,#0x00
   0176 81 00               469 	.db	#-127,#0x00
   0178 81 00               470 	.db	#-127,#0x00
   017A DC 00               471 	.db	#-36,#0x00
   017C 00                  472 	.db	0
                            473 ;demo.c:184: uint8_t crebuffer1[3323] = {0};
   017D 21rCCs11            474 	ld	hl,#_crebuffer1
   0180 CDr00s00            475 	call	__initrleblock
   0183 81 00               476 	.db	#-127,#0x00
   0185 81 00               477 	.db	#-127,#0x00
   0187 81 00               478 	.db	#-127,#0x00
   0189 81 00               479 	.db	#-127,#0x00
   018B 81 00               480 	.db	#-127,#0x00
   018D 81 00               481 	.db	#-127,#0x00
   018F 81 00               482 	.db	#-127,#0x00
   0191 81 00               483 	.db	#-127,#0x00
   0193 81 00               484 	.db	#-127,#0x00
   0195 81 00               485 	.db	#-127,#0x00
   0197 81 00               486 	.db	#-127,#0x00
   0199 81 00               487 	.db	#-127,#0x00
   019B 81 00               488 	.db	#-127,#0x00
   019D 81 00               489 	.db	#-127,#0x00
   019F 81 00               490 	.db	#-127,#0x00
   01A1 81 00               491 	.db	#-127,#0x00
   01A3 81 00               492 	.db	#-127,#0x00
   01A5 81 00               493 	.db	#-127,#0x00
   01A7 81 00               494 	.db	#-127,#0x00
   01A9 81 00               495 	.db	#-127,#0x00
   01AB 81 00               496 	.db	#-127,#0x00
   01AD 81 00               497 	.db	#-127,#0x00
   01AF 81 00               498 	.db	#-127,#0x00
   01B1 81 00               499 	.db	#-127,#0x00
   01B3 81 00               500 	.db	#-127,#0x00
   01B5 81 00               501 	.db	#-127,#0x00
   01B7 EB 00               502 	.db	#-21,#0x00
   01B9 00                  503 	.db	0
                            504 ;demo.c:185: uint8_t crebuffer2[4724] = {0};
   01BA 21rC7s1E            505 	ld	hl,#_crebuffer2
   01BD CDr00s00            506 	call	__initrleblock
   01C0 81 00               507 	.db	#-127,#0x00
   01C2 81 00               508 	.db	#-127,#0x00
   01C4 81 00               509 	.db	#-127,#0x00
   01C6 81 00               510 	.db	#-127,#0x00
   01C8 81 00               511 	.db	#-127,#0x00
   01CA 81 00               512 	.db	#-127,#0x00
   01CC 81 00               513 	.db	#-127,#0x00
   01CE 81 00               514 	.db	#-127,#0x00
   01D0 81 00               515 	.db	#-127,#0x00
   01D2 81 00               516 	.db	#-127,#0x00
   01D4 81 00               517 	.db	#-127,#0x00
   01D6 81 00               518 	.db	#-127,#0x00
   01D8 81 00               519 	.db	#-127,#0x00
   01DA 81 00               520 	.db	#-127,#0x00
   01DC 81 00               521 	.db	#-127,#0x00
   01DE 81 00               522 	.db	#-127,#0x00
   01E0 81 00               523 	.db	#-127,#0x00
   01E2 81 00               524 	.db	#-127,#0x00
   01E4 81 00               525 	.db	#-127,#0x00
   01E6 81 00               526 	.db	#-127,#0x00
   01E8 81 00               527 	.db	#-127,#0x00
   01EA 81 00               528 	.db	#-127,#0x00
   01EC 81 00               529 	.db	#-127,#0x00
   01EE 81 00               530 	.db	#-127,#0x00
   01F0 81 00               531 	.db	#-127,#0x00
   01F2 81 00               532 	.db	#-127,#0x00
   01F4 81 00               533 	.db	#-127,#0x00
   01F6 81 00               534 	.db	#-127,#0x00
   01F8 81 00               535 	.db	#-127,#0x00
   01FA 81 00               536 	.db	#-127,#0x00
   01FC 81 00               537 	.db	#-127,#0x00
   01FE 81 00               538 	.db	#-127,#0x00
   0200 81 00               539 	.db	#-127,#0x00
   0202 81 00               540 	.db	#-127,#0x00
   0204 81 00               541 	.db	#-127,#0x00
   0206 81 00               542 	.db	#-127,#0x00
   0208 81 00               543 	.db	#-127,#0x00
   020A E7 00               544 	.db	#-25,#0x00
   020C 00                  545 	.db	0
                            546 ;demo.c:186: uint8_t crebuffer3[3723] = {0};
   020D 21r3Bs31            547 	ld	hl,#_crebuffer3
   0210 CDr00s00            548 	call	__initrleblock
   0213 81 00               549 	.db	#-127,#0x00
   0215 81 00               550 	.db	#-127,#0x00
   0217 81 00               551 	.db	#-127,#0x00
   0219 81 00               552 	.db	#-127,#0x00
   021B 81 00               553 	.db	#-127,#0x00
   021D 81 00               554 	.db	#-127,#0x00
   021F 81 00               555 	.db	#-127,#0x00
   0221 81 00               556 	.db	#-127,#0x00
   0223 81 00               557 	.db	#-127,#0x00
   0225 81 00               558 	.db	#-127,#0x00
   0227 81 00               559 	.db	#-127,#0x00
   0229 81 00               560 	.db	#-127,#0x00
   022B 81 00               561 	.db	#-127,#0x00
   022D 81 00               562 	.db	#-127,#0x00
   022F 81 00               563 	.db	#-127,#0x00
   0231 81 00               564 	.db	#-127,#0x00
   0233 81 00               565 	.db	#-127,#0x00
   0235 81 00               566 	.db	#-127,#0x00
   0237 81 00               567 	.db	#-127,#0x00
   0239 81 00               568 	.db	#-127,#0x00
   023B 81 00               569 	.db	#-127,#0x00
   023D 81 00               570 	.db	#-127,#0x00
   023F 81 00               571 	.db	#-127,#0x00
   0241 81 00               572 	.db	#-127,#0x00
   0243 81 00               573 	.db	#-127,#0x00
   0245 81 00               574 	.db	#-127,#0x00
   0247 81 00               575 	.db	#-127,#0x00
   0249 81 00               576 	.db	#-127,#0x00
   024B 81 00               577 	.db	#-127,#0x00
   024D D8 00               578 	.db	#-40,#0x00
   024F 00                  579 	.db	0
                            580 ;demo.c:198: volatile int vbicount=0;
   0250 FD 21r26s41         581 	ld	iy,#_vbicount
   0254 FD 36 00 00         582 	ld	0 (iy),#0x00
   0258 FD 21r26s41         583 	ld	iy,#_vbicount
   025C FD 36 01 00         584 	ld	1 (iy),#0x00
                            585 ;demo.c:199: volatile int tick=0;
   0260 FD 21r28s41         586 	ld	iy,#_tick
   0264 FD 36 00 00         587 	ld	0 (iy),#0x00
   0268 FD 21r28s41         588 	ld	iy,#_tick
   026C FD 36 01 00         589 	ld	1 (iy),#0x00
                            590 ;demo.c:204: void (*scenepointers[12])() = {
   0270 21r39s41            591 	ld	hl,#_scenepointers
   0273 36r89               592 	ld	(hl),#<_waiter
   0275 23                  593 	inc	hl
   0276 36s39               594 	ld	(hl),#>_waiter
   0278 21r3Bs41            595 	ld	hl, #_scenepointers + 2
   027B 36r44               596 	ld	(hl),#<_logoeffu
   027D 23                  597 	inc	hl
   027E 36s2C               598 	ld	(hl),#>_logoeffu
   0280 01r3Ds41            599 	ld	bc,#_scenepointers + 4
   0283 69                  600 	ld	l,c
   0284 60                  601 	ld	h,b
   0285 36rA4               602 	ld	(hl),#<_bulbs
   0287 23                  603 	inc	hl
   0288 36s15               604 	ld	(hl),#>_bulbs
   028A 21r3Fs41            605 	ld	hl, #_scenepointers + 6
   028D 36r21               606 	ld	(hl),#<_twister
   028F 23                  607 	inc	hl
   0290 36s13               608 	ld	(hl),#>_twister
   0292 01r41s41            609 	ld	bc,#_scenepointers + 8
   0295 69                  610 	ld	l,c
   0296 60                  611 	ld	h,b
   0297 36r92               612 	ld	(hl),#<_boxes
   0299 23                  613 	inc	hl
   029A 36s18               614 	ld	(hl),#>_boxes
   029C 21r43s41            615 	ld	hl, #_scenepointers + 10
   029F 36r86               616 	ld	(hl),#<_thewave
   02A1 23                  617 	inc	hl
   02A2 36s1D               618 	ld	(hl),#>_thewave
   02A4 21r45s41            619 	ld	hl, #_scenepointers + 12
   02A7 36rA7               620 	ld	(hl),#<_tritiles
   02A9 23                  621 	inc	hl
   02AA 36s25               622 	ld	(hl),#>_tritiles
   02AC 21r47s41            623 	ld	hl, #_scenepointers + 14
   02AF 36rF3               624 	ld	(hl),#<_points
   02B1 23                  625 	inc	hl
   02B2 36s2D               626 	ld	(hl),#>_points
   02B4 01r49s41            627 	ld	bc,#_scenepointers + 16
   02B7 69                  628 	ld	l,c
   02B8 60                  629 	ld	h,b
   02B9 36rD3               630 	ld	(hl),#<_bigtext
   02BB 23                  631 	inc	hl
   02BC 36s31               632 	ld	(hl),#>_bigtext
   02BE 01r4Bs41            633 	ld	bc,#_scenepointers + 18
   02C1 69                  634 	ld	l,c
   02C2 60                  635 	ld	h,b
   02C3 36r8A               636 	ld	(hl),#<_credits
   02C5 23                  637 	inc	hl
   02C6 36s39               638 	ld	(hl),#>_credits
   02C8 01r4Ds41            639 	ld	bc,#_scenepointers + 20
   02CB 69                  640 	ld	l,c
   02CC 60                  641 	ld	h,b
   02CD 36rDD               642 	ld	(hl),#<_do_quit
   02CF 23                  643 	inc	hl
   02D0 36s3C               644 	ld	(hl),#>_do_quit
                            645 ;demo.c:218: int scenetimings[24] = {
   02D2 21r51s41            646 	ld	hl,#_scenetimings
   02D5 CDr00s00            647 	call	__initrleblock
   02D8 30                  648 	.db	48
   02D9 00 00 AA 00 AA 00   649 	.db	0x00, 0x00, 0xAA, 0x00, 0xAA, 0x00, 0x5E, 0x01
        5E 01
   02E1 EE 02 14 05 14 05   650 	.db	0xEE, 0x02, 0x14, 0x05, 0x14, 0x05, 0xFC, 0x08
        FC 08
   02E9 FC 08 10 0E 10 0E   651 	.db	0xFC, 0x08, 0x10, 0x0E, 0x10, 0x0E, 0x04, 0x10
        04 10
   02F1 04 10 AE 15 AE 15   652 	.db	0x04, 0x10, 0xAE, 0x15, 0xAE, 0x15, 0xD4, 0x17
        D4 17
   02F9 D4 17 D5 20 D5 20   653 	.db	0xD4, 0x17, 0xD5, 0x20, 0xD5, 0x20, 0x74, 0x27
        74 27
   0301 74 27 A0 86 00 00   654 	.db	0x74, 0x27, 0xA0, 0x86, 0x00, 0x00, 0x00, 0x00
        00 00
   0309 00                  655 	.db	0
                            656 ;demo.c:378: uint8_t yofff = 0;
   030A FD 21r89s41         657 	ld	iy,#_yofff
   030E FD 36 00 00         658 	ld	0 (iy),#0x00
                            659 ;demo.c:379: uint8_t cc = 0;
   0312 FD 21r8As41         660 	ld	iy,#_cc
   0316 FD 36 00 00         661 	ld	0 (iy),#0x00
                            662 ;demo.c:380: static int flipper = 0;
   031A FD 21r8Bs41         663 	ld	iy,#_flipper
   031E FD 36 00 00         664 	ld	0 (iy),#0x00
   0322 FD 21r8Bs41         665 	ld	iy,#_flipper
   0326 FD 36 01 00         666 	ld	1 (iy),#0x00
                            667 ;demo.c:381: static int ymmmf = 0;
   032A FD 21r8Ds41         668 	ld	iy,#_ymmmf
   032E FD 36 00 00         669 	ld	0 (iy),#0x00
   0332 FD 21r8Ds41         670 	ld	iy,#_ymmmf
   0336 FD 36 01 00         671 	ld	1 (iy),#0x00
                            672 ;demo.c:386: char block_init = 0;
   033A FD 21r8Fs41         673 	ld	iy,#_block_init
   033E FD 36 00 00         674 	ld	0 (iy),#0x00
                            675 ;demo.c:388: int bsx = 0;
   0342 FD 21r90s41         676 	ld	iy,#_bsx
   0346 FD 36 00 00         677 	ld	0 (iy),#0x00
   034A FD 21r90s41         678 	ld	iy,#_bsx
   034E FD 36 01 00         679 	ld	1 (iy),#0x00
                            680 ;demo.c:389: int bsy = 0;
   0352 FD 21r92s41         681 	ld	iy,#_bsy
   0356 FD 36 00 00         682 	ld	0 (iy),#0x00
   035A FD 21r92s41         683 	ld	iy,#_bsy
   035E FD 36 01 00         684 	ld	1 (iy),#0x00
                            685 ;demo.c:390: int btx = 0;
   0362 FD 21r94s41         686 	ld	iy,#_btx
   0366 FD 36 00 00         687 	ld	0 (iy),#0x00
   036A FD 21r94s41         688 	ld	iy,#_btx
   036E FD 36 01 00         689 	ld	1 (iy),#0x00
                            690 ;demo.c:391: int bty = 0;
   0372 FD 21r96s41         691 	ld	iy,#_bty
   0376 FD 36 00 00         692 	ld	0 (iy),#0x00
   037A FD 21r96s41         693 	ld	iy,#_bty
   037E FD 36 01 00         694 	ld	1 (iy),#0x00
                            695 ;demo.c:393: int btab[16] = {0};
   0382 21r98s41            696 	ld	hl,#_btab
   0385 CDr00s00            697 	call	__initrleblock
   0388 E0 00               698 	.db	#-32,#0x00
   038A 00                  699 	.db	0
                            700 ;demo.c:395: int flof = 0;
   038B FD 21rB8s41         701 	ld	iy,#_flof
   038F FD 36 00 00         702 	ld	0 (iy),#0x00
   0393 FD 21rB8s41         703 	ld	iy,#_flof
   0397 FD 36 01 00         704 	ld	1 (iy),#0x00
                            705 ;demo.c:400: int linenum = 0;
   039B FD 21rBAs41         706 	ld	iy,#_linenum
   039F FD 36 00 00         707 	ld	0 (iy),#0x00
   03A3 FD 21rBAs41         708 	ld	iy,#_linenum
   03A7 FD 36 01 00         709 	ld	1 (iy),#0x00
                            710 ;demo.c:430: uint8_t lx = 0;
   03AB FD 21rBCs41         711 	ld	iy,#_lx
   03AF FD 36 00 00         712 	ld	0 (iy),#0x00
                            713 ;demo.c:431: uint8_t ly = 0;
   03B3 FD 21rBDs41         714 	ld	iy,#_ly
   03B7 FD 36 00 00         715 	ld	0 (iy),#0x00
                            716 ;demo.c:516: int ltrpointer = 0;
   03BB FD 21rBEs41         717 	ld	iy,#_ltrpointer
   03BF FD 36 00 00         718 	ld	0 (iy),#0x00
   03C3 FD 21rBEs41         719 	ld	iy,#_ltrpointer
   03C7 FD 36 01 00         720 	ld	1 (iy),#0x00
                            721 ;demo.c:517: int slowend = 128;
   03CB FD 21rC0s41         722 	ld	iy,#_slowend
   03CF FD 36 00 80         723 	ld	0 (iy),#0x80
   03D3 FD 21rC0s41         724 	ld	iy,#_slowend
   03D7 FD 36 01 00         725 	ld	1 (iy),#0x00
                            726 ;demo.c:576: int ff = 0;
   03DB FD 21rC2s41         727 	ld	iy,#_ff
   03DF FD 36 00 00         728 	ld	0 (iy),#0x00
   03E3 FD 21rC2s41         729 	ld	iy,#_ff
   03E7 FD 36 01 00         730 	ld	1 (iy),#0x00
                            731 ;demo.c:577: int twinited = 0;
   03EB FD 21rC4s41         732 	ld	iy,#_twinited
   03EF FD 36 00 00         733 	ld	0 (iy),#0x00
   03F3 FD 21rC4s41         734 	ld	iy,#_twinited
   03F7 FD 36 01 00         735 	ld	1 (iy),#0x00
                            736 ;demo.c:578: int twialku = 2;
   03FB FD 21rC6s41         737 	ld	iy,#_twialku
   03FF FD 36 00 02         738 	ld	0 (iy),#0x02
   0403 FD 21rC6s41         739 	ld	iy,#_twialku
   0407 FD 36 01 00         740 	ld	1 (iy),#0x00
                            741 ;demo.c:652: int bulbflipper = 1;
   040B FD 21rC8s41         742 	ld	iy,#_bulbflipper
   040F FD 36 00 01         743 	ld	0 (iy),#0x01
   0413 FD 21rC8s41         744 	ld	iy,#_bulbflipper
   0417 FD 36 01 00         745 	ld	1 (iy),#0x00
                            746 ;demo.c:654: int ff1,ff2 = 0;
   041B FD 21rCCs41         747 	ld	iy,#_ff2
   041F FD 36 00 00         748 	ld	0 (iy),#0x00
   0423 FD 21rCCs41         749 	ld	iy,#_ff2
   0427 FD 36 01 00         750 	ld	1 (iy),#0x00
                            751 ;demo.c:655: int ender = 212;
   042B FD 21rCEs41         752 	ld	iy,#_ender
   042F FD 36 00 D4         753 	ld	0 (iy),#0xD4
   0433 FD 21rCEs41         754 	ld	iy,#_ender
   0437 FD 36 01 00         755 	ld	1 (iy),#0x00
                            756 ;demo.c:656: int enderdir = -1;
   043B FD 21rD0s41         757 	ld	iy,#_enderdir
   043F FD 36 00 FF         758 	ld	0 (iy),#0xFF
   0443 FD 21rD0s41         759 	ld	iy,#_enderdir
   0447 FD 36 01 FF         760 	ld	1 (iy),#0xFF
                            761 ;demo.c:657: int sy = 16;
   044B FD 21rD2s41         762 	ld	iy,#_sy
   044F FD 36 00 10         763 	ld	0 (iy),#0x10
   0453 FD 21rD2s41         764 	ld	iy,#_sy
   0457 FD 36 01 00         765 	ld	1 (iy),#0x00
                            766 ;demo.c:713: static int xo = 0;
   045B FD 21rD4s41         767 	ld	iy,#_xo
   045F FD 36 00 00         768 	ld	0 (iy),#0x00
   0463 FD 21rD4s41         769 	ld	iy,#_xo
   0467 FD 36 01 00         770 	ld	1 (iy),#0x00
                            771 ;demo.c:714: static int yo = 0;
   046B FD 21rD6s41         772 	ld	iy,#_yo
   046F FD 36 00 00         773 	ld	0 (iy),#0x00
   0473 FD 21rD6s41         774 	ld	iy,#_yo
   0477 FD 36 01 00         775 	ld	1 (iy),#0x00
                            776 ;demo.c:715: static int po = 0;
   047B FD 21rD8s41         777 	ld	iy,#_po
   047F FD 36 00 00         778 	ld	0 (iy),#0x00
   0483 FD 21rD8s41         779 	ld	iy,#_po
   0487 FD 36 01 00         780 	ld	1 (iy),#0x00
                            781 ;demo.c:716: static int frames = 0;
   048B FD 21rDAs41         782 	ld	iy,#_frames
   048F FD 36 00 00         783 	ld	0 (iy),#0x00
   0493 FD 21rDAs41         784 	ld	iy,#_frames
   0497 FD 36 01 00         785 	ld	1 (iy),#0x00
                            786 ;demo.c:718: int anim_init = 0;
   049B FD 21rDCs41         787 	ld	iy,#_anim_init
   049F FD 36 00 00         788 	ld	0 (iy),#0x00
   04A3 FD 21rDCs41         789 	ld	iy,#_anim_init
   04A7 FD 36 01 00         790 	ld	1 (iy),#0x00
                            791 ;demo.c:724: uint8_t boxes_init = 0;
   04AB FD 21rDEs41         792 	ld	iy,#_boxes_init
   04AF FD 36 00 00         793 	ld	0 (iy),#0x00
                            794 ;demo.c:725: int buffer = 1;
   04B3 FD 21rDFs41         795 	ld	iy,#_buffer
   04B7 FD 36 00 01         796 	ld	0 (iy),#0x01
   04BB FD 21rDFs41         797 	ld	iy,#_buffer
   04BF FD 36 01 00         798 	ld	1 (iy),#0x00
                            799 ;demo.c:726: int prevx = -1;
   04C3 FD 21rE1s41         800 	ld	iy,#_prevx
   04C7 FD 36 00 FF         801 	ld	0 (iy),#0xFF
   04CB FD 21rE1s41         802 	ld	iy,#_prevx
   04CF FD 36 01 FF         803 	ld	1 (iy),#0xFF
                            804 ;demo.c:728: uint8_t boxes_x[5] = {0,36,0,36,0};
   04D3 21rE5s41            805 	ld	hl,#_boxes_x
   04D6 CDr00s00            806 	call	__initrleblock
   04D9 05                  807 	.db	5
   04DA 00 24 00 24 00      808 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   04DF 00                  809 	.db	0
                            810 ;demo.c:729: int boxes_y[5] = {768,768,768+36,768+36,0};
   04E0 21rEAs41            811 	ld	hl,#_boxes_y
   04E3 CDr00s00            812 	call	__initrleblock
   04E6 0A                  813 	.db	10
   04E7 00 03 00 03 24 03   814 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   04EF 00 00               815 	.db	0x00, 0x00
   04F1 00                  816 	.db	0
                            817 ;demo.c:730: uint8_t boxi = 0;
   04F2 FD 21rF4s41         818 	ld	iy,#_boxi
   04F6 FD 36 00 00         819 	ld	0 (iy),#0x00
                            820 ;demo.c:731: int bx = 220;
   04FA FD 21rF5s41         821 	ld	iy,#_bx
   04FE FD 36 00 DC         822 	ld	0 (iy),#0xDC
   0502 FD 21rF5s41         823 	ld	iy,#_bx
   0506 FD 36 01 00         824 	ld	1 (iy),#0x00
                            825 ;demo.c:732: int by = 84;
   050A FD 21rF7s41         826 	ld	iy,#_by
   050E FD 36 00 54         827 	ld	0 (iy),#0x54
   0512 FD 21rF7s41         828 	ld	iy,#_by
   0516 FD 36 01 00         829 	ld	1 (iy),#0x00
                            830 ;demo.c:750: int bt = 0;
   051A FD 21rF9s41         831 	ld	iy,#_bt
   051E FD 36 00 00         832 	ld	0 (iy),#0x00
   0522 FD 21rF9s41         833 	ld	iy,#_bt
   0526 FD 36 01 00         834 	ld	1 (iy),#0x00
                            835 ;demo.c:751: int bo = 0;
   052A FD 21rFBs41         836 	ld	iy,#_bo
   052E FD 36 00 00         837 	ld	0 (iy),#0x00
   0532 FD 21rFBs41         838 	ld	iy,#_bo
   0536 FD 36 01 00         839 	ld	1 (iy),#0x00
                            840 ;demo.c:753: int bonc = 0;
   053A FD 21rFDs41         841 	ld	iy,#_bonc
   053E FD 36 00 00         842 	ld	0 (iy),#0x00
   0542 FD 21rFDs41         843 	ld	iy,#_bonc
   0546 FD 36 01 00         844 	ld	1 (iy),#0x00
                            845 ;demo.c:754: int pbx = 0;
   054A FD 21rFFs41         846 	ld	iy,#_pbx
   054E FD 36 00 00         847 	ld	0 (iy),#0x00
   0552 FD 21rFFs41         848 	ld	iy,#_pbx
   0556 FD 36 01 00         849 	ld	1 (iy),#0x00
                            850 ;demo.c:755: int pbt = 0;
   055A FD 21r01s42         851 	ld	iy,#_pbt
   055E FD 36 00 00         852 	ld	0 (iy),#0x00
   0562 FD 21r01s42         853 	ld	iy,#_pbt
   0566 FD 36 01 00         854 	ld	1 (iy),#0x00
                            855 ;demo.c:757: int boxes_of[5] = {0,0,6,0,0};
   056A 21r03s42            856 	ld	hl,#_boxes_of
   056D CDr00s00            857 	call	__initrleblock
   0570 05                  858 	.db	5
   0571 00 00 00 00 06      859 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0576 FB 00               860 	.db	#-5,#0x00
   0578 00                  861 	.db	0
                            862 ;demo.c:758: uint8_t prevbox_of = 0;
   0579 FD 21r0Ds42         863 	ld	iy,#_prevbox_of
   057D FD 36 00 00         864 	ld	0 (iy),#0x00
                            865 ;demo.c:759: int boxticks = 0;
   0581 FD 21r0Es42         866 	ld	iy,#_boxticks
   0585 FD 36 00 00         867 	ld	0 (iy),#0x00
   0589 FD 21r0Es42         868 	ld	iy,#_boxticks
   058D FD 36 01 00         869 	ld	1 (iy),#0x00
                            870 ;demo.c:879: uint8_t initwave = 0;
   0591 FD 21r10s42         871 	ld	iy,#_initwave
   0595 FD 36 00 00         872 	ld	0 (iy),#0x00
                            873 ;demo.c:880: int buf = -1;
   0599 FD 21r11s42         874 	ld	iy,#_buf
   059D FD 36 00 FF         875 	ld	0 (iy),#0xFF
   05A1 FD 21r11s42         876 	ld	iy,#_buf
   05A5 FD 36 01 FF         877 	ld	1 (iy),#0xFF
                            878 ;demo.c:881: int ffa = 0;
   05A9 FD 21r13s42         879 	ld	iy,#_ffa
   05AD FD 36 00 00         880 	ld	0 (iy),#0x00
   05B1 FD 21r13s42         881 	ld	iy,#_ffa
   05B5 FD 36 01 00         882 	ld	1 (iy),#0x00
                            883 ;demo.c:1003: uint8_t tri_inited = 0;
   05B9 FD 21r15s42         884 	ld	iy,#_tri_inited
   05BD FD 36 00 00         885 	ld	0 (iy),#0x00
                            886 ;demo.c:1018: int tilei = 0;
   05C1 FD 21r16s42         887 	ld	iy,#_tilei
   05C5 FD 36 00 00         888 	ld	0 (iy),#0x00
   05C9 FD 21r16s42         889 	ld	iy,#_tilei
   05CD FD 36 01 00         890 	ld	1 (iy),#0x00
                            891 ;demo.c:1019: int tilex = 0;
   05D1 FD 21r18s42         892 	ld	iy,#_tilex
   05D5 FD 36 00 00         893 	ld	0 (iy),#0x00
   05D9 FD 21r18s42         894 	ld	iy,#_tilex
   05DD FD 36 01 00         895 	ld	1 (iy),#0x00
                            896 ;demo.c:1020: int tiley = 0;
   05E1 FD 21r1As42         897 	ld	iy,#_tiley
   05E5 FD 36 00 00         898 	ld	0 (iy),#0x00
   05E9 FD 21r1As42         899 	ld	iy,#_tiley
   05ED FD 36 01 00         900 	ld	1 (iy),#0x00
                            901 ;demo.c:1021: uint8_t tiletick = 0;
   05F1 FD 21r1Cs42         902 	ld	iy,#_tiletick
   05F5 FD 36 00 00         903 	ld	0 (iy),#0x00
                            904 ;demo.c:1051: char tripal[9] = {
   05F9 21r1Ds42            905 	ld	hl,#_tripal
   05FC CDr00s00            906 	call	__initrleblock
   05FF 09                  907 	.db	9
   0600 02 02 01 01 02 03   908 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0608 02                  909 	.db	0x02
   0609 00                  910 	.db	0
                            911 ;demo.c:1057: uint8_t tripaltick = 0;
   060A FD 21r26s42         912 	ld	iy,#_tripaltick
   060E FD 36 00 00         913 	ld	0 (iy),#0x00
                            914 ;demo.c:1058: uint8_t tripaltick2 = 0;
   0612 FD 21r27s42         915 	ld	iy,#_tripaltick2
   0616 FD 36 00 00         916 	ld	0 (iy),#0x00
                            917 ;demo.c:1060: int triframes = 0;
   061A FD 21r28s42         918 	ld	iy,#_triframes
   061E FD 36 00 00         919 	ld	0 (iy),#0x00
   0622 FD 21r28s42         920 	ld	iy,#_triframes
   0626 FD 36 01 00         921 	ld	1 (iy),#0x00
                            922 ;demo.c:1225: int powatick = 0;
   062A FD 21r2As42         923 	ld	iy,#_powatick
   062E FD 36 00 00         924 	ld	0 (iy),#0x00
   0632 FD 21r2As42         925 	ld	iy,#_powatick
   0636 FD 36 01 00         926 	ld	1 (iy),#0x00
                            927 ;demo.c:1226: int powa = 0;
   063A FD 21r2Cs42         928 	ld	iy,#_powa
   063E FD 36 00 00         929 	ld	0 (iy),#0x00
   0642 FD 21r2Cs42         930 	ld	iy,#_powa
   0646 FD 36 01 00         931 	ld	1 (iy),#0x00
                            932 ;demo.c:1227: uint8_t onceclear = 255;
   064A FD 21r2Es42         933 	ld	iy,#_onceclear
   064E FD 36 00 FF         934 	ld	0 (iy),#0xFF
                            935 ;demo.c:1272: uint8_t initpoints = 0;
   0652 FD 21r2Fs42         936 	ld	iy,#_initpoints
   0656 FD 36 00 00         937 	ld	0 (iy),#0x00
                            938 ;demo.c:1273: int pointframe = 0;
   065A FD 21r30s42         939 	ld	iy,#_pointframe
   065E FD 36 00 00         940 	ld	0 (iy),#0x00
   0662 FD 21r30s42         941 	ld	iy,#_pointframe
   0666 FD 36 01 00         942 	ld	1 (iy),#0x00
                            943 ;demo.c:1276: int greetindex = 0;
   066A FD 21r32s42         944 	ld	iy,#_greetindex
   066E FD 36 00 00         945 	ld	0 (iy),#0x00
   0672 FD 21r32s42         946 	ld	iy,#_greetindex
   0676 FD 36 01 00         947 	ld	1 (iy),#0x00
                            948 ;demo.c:1371: int bigtextp = 0;
   067A FD 21r34s42         949 	ld	iy,#_bigtextp
   067E FD 36 00 00         950 	ld	0 (iy),#0x00
   0682 FD 21r34s42         951 	ld	iy,#_bigtextp
   0686 FD 36 01 00         952 	ld	1 (iy),#0x00
                            953 ;demo.c:1554: int initcredits = 0;
   068A FD 21r36s42         954 	ld	iy,#_initcredits
   068E FD 36 00 00         955 	ld	0 (iy),#0x00
   0692 FD 21r36s42         956 	ld	iy,#_initcredits
   0696 FD 36 01 00         957 	ld	1 (iy),#0x00
                            958 ;demo.c:1555: int credittimer = 0;
   069A FD 21r38s42         959 	ld	iy,#_credittimer
   069E FD 36 00 00         960 	ld	0 (iy),#0x00
   06A2 FD 21r38s42         961 	ld	iy,#_credittimer
   06A6 FD 36 01 00         962 	ld	1 (iy),#0x00
                            963 ;demo.c:1556: int musicstopped = 0;
   06AA FD 21r3As42         964 	ld	iy,#_musicstopped
   06AE FD 36 00 00         965 	ld	0 (iy),#0x00
   06B2 FD 21r3As42         966 	ld	iy,#_musicstopped
   06B6 FD 36 01 00         967 	ld	1 (iy),#0x00
                            968 ;demo.c:1558: int curpage = 0;
   06BA FD 21r3Cs42         969 	ld	iy,#_curpage
   06BE FD 36 00 00         970 	ld	0 (iy),#0x00
   06C2 FD 21r3Cs42         971 	ld	iy,#_curpage
   06C6 FD 36 01 00         972 	ld	1 (iy),#0x00
                            973 ;demo.c:1559: int myoffs = 0;
   06CA FD 21r3Es42         974 	ld	iy,#_myoffs
   06CE FD 36 00 00         975 	ld	0 (iy),#0x00
   06D2 FD 21r3Es42         976 	ld	iy,#_myoffs
   06D6 FD 36 01 00         977 	ld	1 (iy),#0x00
                            978 ;demo.c:1673: int sceneindex = 0;
   06DA FD 21r40s42         979 	ld	iy,#_sceneindex
   06DE FD 36 00 00         980 	ld	0 (iy),#0x00
   06E2 FD 21r40s42         981 	ld	iy,#_sceneindex
   06E6 FD 36 01 00         982 	ld	1 (iy),#0x00
                            983 ;demo.c:1674: int timeindex = 0;
   06EA FD 21r42s42         984 	ld	iy,#_timeindex
   06EE FD 36 00 00         985 	ld	0 (iy),#0x00
   06F2 FD 21r42s42         986 	ld	iy,#_timeindex
   06F6 FD 36 01 00         987 	ld	1 (iy),#0x00
                            988 ;--------------------------------------------------------
                            989 ; Home
                            990 ;--------------------------------------------------------
                            991 	.area _HOME
                            992 	.area _HOME
                            993 ;--------------------------------------------------------
                            994 ; code
                            995 ;--------------------------------------------------------
                            996 	.area _CODE
                            997 ;demo.c:234: int isNthBitSet (unsigned char c, int n) {
                            998 ;	---------------------------------
                            999 ; Function isNthBitSet
                           1000 ; ---------------------------------
   0000                    1001 _isNthBitSet_start::
   0000                    1002 _isNthBitSet:
   0000 DD E5              1003 	push	ix
   0002 DD 21 00 00        1004 	ld	ix,#0
   0006 DD 39              1005 	add	ix,sp
                           1006 ;demo.c:236: return ((c & mask[n]) != 0);
   0008 3Er81              1007 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05           1008 	add	a,5 (ix)
   000D 4F                 1009 	ld	c,a
   000E 3Es41              1010 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06           1011 	adc	a,6 (ix)
   0013 47                 1012 	ld	b,a
   0014 0A                 1013 	ld	a,(bc)
   0015 DD A6 04           1014 	and	a,4 (ix)
   0018 20 04              1015 	jr	NZ,00103$
   001A 3E 01              1016 	ld	a,#0x01
   001C 18 01              1017 	jr	00104$
   001E                    1018 00103$:
   001E AF                 1019 	xor	a,a
   001F                    1020 00104$:
   001F B7                 1021 	or	a,a
   0020 D6 01              1022 	sub	a,#0x01
   0022 3E 00              1023 	ld	a,#0x00
   0024 17                 1024 	rla
   0025 4F                 1025 	ld	c,a
   0026 69                 1026 	ld	l,c
   0027 26 00              1027 	ld	h,#0x00
   0029 DD E1              1028 	pop	ix
   002B C9                 1029 	ret
   002C                    1030 _isNthBitSet_end::
   002C                    1031 _sintabx:
   002C 78                 1032 	.db #0x78
   002D 7A                 1033 	.db #0x7A
   002E 7D                 1034 	.db #0x7D
   002F 80                 1035 	.db #0x80
   0030 83                 1036 	.db #0x83
   0031 86                 1037 	.db #0x86
   0032 89                 1038 	.db #0x89
   0033 8C                 1039 	.db #0x8C
   0034 8F                 1040 	.db #0x8F
   0035 92                 1041 	.db #0x92
   0036 95                 1042 	.db #0x95
   0037 98                 1043 	.db #0x98
   0038 9A                 1044 	.db #0x9A
   0039 9D                 1045 	.db #0x9D
   003A A0                 1046 	.db #0xA0
   003B A3                 1047 	.db #0xA3
   003C A5                 1048 	.db #0xA5
   003D A8                 1049 	.db #0xA8
   003E AB                 1050 	.db #0xAB
   003F AD                 1051 	.db #0xAD
   0040 B0                 1052 	.db #0xB0
   0041 B3                 1053 	.db #0xB3
   0042 B5                 1054 	.db #0xB5
   0043 B8                 1055 	.db #0xB8
   0044 BA                 1056 	.db #0xBA
   0045 BD                 1057 	.db #0xBD
   0046 BF                 1058 	.db #0xBF
   0047 C1                 1059 	.db #0xC1
   0048 C4                 1060 	.db #0xC4
   0049 C6                 1061 	.db #0xC6
   004A C8                 1062 	.db #0xC8
   004B CA                 1063 	.db #0xCA
   004C CC                 1064 	.db #0xCC
   004D CE                 1065 	.db #0xCE
   004E D0                 1066 	.db #0xD0
   004F D2                 1067 	.db #0xD2
   0050 D4                 1068 	.db #0xD4
   0051 D6                 1069 	.db #0xD6
   0052 D8                 1070 	.db #0xD8
   0053 DA                 1071 	.db #0xDA
   0054 DB                 1072 	.db #0xDB
   0055 DD                 1073 	.db #0xDD
   0056 DE                 1074 	.db #0xDE
   0057 E0                 1075 	.db #0xE0
   0058 E1                 1076 	.db #0xE1
   0059 E3                 1077 	.db #0xE3
   005A E4                 1078 	.db #0xE4
   005B E5                 1079 	.db #0xE5
   005C E6                 1080 	.db #0xE6
   005D E7                 1081 	.db #0xE7
   005E E8                 1082 	.db #0xE8
   005F E9                 1083 	.db #0xE9
   0060 EA                 1084 	.db #0xEA
   0061 EB                 1085 	.db #0xEB
   0062 EC                 1086 	.db #0xEC
   0063 ED                 1087 	.db #0xED
   0064 ED                 1088 	.db #0xED
   0065 EE                 1089 	.db #0xEE
   0066 EE                 1090 	.db #0xEE
   0067 EF                 1091 	.db #0xEF
   0068 EF                 1092 	.db #0xEF
   0069 EF                 1093 	.db #0xEF
   006A EF                 1094 	.db #0xEF
   006B EF                 1095 	.db #0xEF
   006C F0                 1096 	.db #0xF0
   006D EF                 1097 	.db #0xEF
   006E EF                 1098 	.db #0xEF
   006F EF                 1099 	.db #0xEF
   0070 EF                 1100 	.db #0xEF
   0071 EF                 1101 	.db #0xEF
   0072 EE                 1102 	.db #0xEE
   0073 EE                 1103 	.db #0xEE
   0074 ED                 1104 	.db #0xED
   0075 ED                 1105 	.db #0xED
   0076 EC                 1106 	.db #0xEC
   0077 EB                 1107 	.db #0xEB
   0078 EA                 1108 	.db #0xEA
   0079 E9                 1109 	.db #0xE9
   007A E8                 1110 	.db #0xE8
   007B E7                 1111 	.db #0xE7
   007C E6                 1112 	.db #0xE6
   007D E5                 1113 	.db #0xE5
   007E E4                 1114 	.db #0xE4
   007F E3                 1115 	.db #0xE3
   0080 E1                 1116 	.db #0xE1
   0081 E0                 1117 	.db #0xE0
   0082 DE                 1118 	.db #0xDE
   0083 DD                 1119 	.db #0xDD
   0084 DB                 1120 	.db #0xDB
   0085 DA                 1121 	.db #0xDA
   0086 D8                 1122 	.db #0xD8
   0087 D6                 1123 	.db #0xD6
   0088 D4                 1124 	.db #0xD4
   0089 D2                 1125 	.db #0xD2
   008A D0                 1126 	.db #0xD0
   008B CE                 1127 	.db #0xCE
   008C CC                 1128 	.db #0xCC
   008D CA                 1129 	.db #0xCA
   008E C8                 1130 	.db #0xC8
   008F C6                 1131 	.db #0xC6
   0090 C4                 1132 	.db #0xC4
   0091 C1                 1133 	.db #0xC1
   0092 BF                 1134 	.db #0xBF
   0093 BD                 1135 	.db #0xBD
   0094 BA                 1136 	.db #0xBA
   0095 B8                 1137 	.db #0xB8
   0096 B5                 1138 	.db #0xB5
   0097 B3                 1139 	.db #0xB3
   0098 B0                 1140 	.db #0xB0
   0099 AD                 1141 	.db #0xAD
   009A AB                 1142 	.db #0xAB
   009B A8                 1143 	.db #0xA8
   009C A5                 1144 	.db #0xA5
   009D A3                 1145 	.db #0xA3
   009E A0                 1146 	.db #0xA0
   009F 9D                 1147 	.db #0x9D
   00A0 9A                 1148 	.db #0x9A
   00A1 98                 1149 	.db #0x98
   00A2 95                 1150 	.db #0x95
   00A3 92                 1151 	.db #0x92
   00A4 8F                 1152 	.db #0x8F
   00A5 8C                 1153 	.db #0x8C
   00A6 89                 1154 	.db #0x89
   00A7 86                 1155 	.db #0x86
   00A8 83                 1156 	.db #0x83
   00A9 80                 1157 	.db #0x80
   00AA 7D                 1158 	.db #0x7D
   00AB 7A                 1159 	.db #0x7A
   00AC 78                 1160 	.db #0x78
   00AD 75                 1161 	.db #0x75
   00AE 72                 1162 	.db #0x72
   00AF 6F                 1163 	.db #0x6F
   00B0 6C                 1164 	.db #0x6C
   00B1 69                 1165 	.db #0x69
   00B2 66                 1166 	.db #0x66
   00B3 63                 1167 	.db #0x63
   00B4 60                 1168 	.db #0x60
   00B5 5D                 1169 	.db #0x5D
   00B6 5A                 1170 	.db #0x5A
   00B7 57                 1171 	.db #0x57
   00B8 55                 1172 	.db #0x55
   00B9 52                 1173 	.db #0x52
   00BA 4F                 1174 	.db #0x4F
   00BB 4C                 1175 	.db #0x4C
   00BC 4A                 1176 	.db #0x4A
   00BD 47                 1177 	.db #0x47
   00BE 44                 1178 	.db #0x44
   00BF 42                 1179 	.db #0x42
   00C0 3F                 1180 	.db #0x3F
   00C1 3C                 1181 	.db #0x3C
   00C2 3A                 1182 	.db #0x3A
   00C3 37                 1183 	.db #0x37
   00C4 35                 1184 	.db #0x35
   00C5 32                 1185 	.db #0x32
   00C6 30                 1186 	.db #0x30
   00C7 2E                 1187 	.db #0x2E
   00C8 2B                 1188 	.db #0x2B
   00C9 29                 1189 	.db #0x29
   00CA 27                 1190 	.db #0x27
   00CB 25                 1191 	.db #0x25
   00CC 23                 1192 	.db #0x23
   00CD 21                 1193 	.db #0x21
   00CE 1F                 1194 	.db #0x1F
   00CF 1D                 1195 	.db #0x1D
   00D0 1B                 1196 	.db #0x1B
   00D1 19                 1197 	.db #0x19
   00D2 17                 1198 	.db #0x17
   00D3 15                 1199 	.db #0x15
   00D4 14                 1200 	.db #0x14
   00D5 12                 1201 	.db #0x12
   00D6 11                 1202 	.db #0x11
   00D7 0F                 1203 	.db #0x0F
   00D8 0E                 1204 	.db #0x0E
   00D9 0C                 1205 	.db #0x0C
   00DA 0B                 1206 	.db #0x0B
   00DB 0A                 1207 	.db #0x0A
   00DC 09                 1208 	.db #0x09
   00DD 08                 1209 	.db #0x08
   00DE 07                 1210 	.db #0x07
   00DF 06                 1211 	.db #0x06
   00E0 05                 1212 	.db #0x05
   00E1 04                 1213 	.db #0x04
   00E2 03                 1214 	.db #0x03
   00E3 02                 1215 	.db #0x02
   00E4 02                 1216 	.db #0x02
   00E5 01                 1217 	.db #0x01
   00E6 01                 1218 	.db #0x01
   00E7 00                 1219 	.db #0x00
   00E8 00                 1220 	.db #0x00
   00E9 00                 1221 	.db #0x00
   00EA 00                 1222 	.db #0x00
   00EB 00                 1223 	.db #0x00
   00EC 00                 1224 	.db #0x00
   00ED 00                 1225 	.db #0x00
   00EE 00                 1226 	.db #0x00
   00EF 00                 1227 	.db #0x00
   00F0 00                 1228 	.db #0x00
   00F1 00                 1229 	.db #0x00
   00F2 01                 1230 	.db #0x01
   00F3 01                 1231 	.db #0x01
   00F4 02                 1232 	.db #0x02
   00F5 02                 1233 	.db #0x02
   00F6 03                 1234 	.db #0x03
   00F7 04                 1235 	.db #0x04
   00F8 05                 1236 	.db #0x05
   00F9 06                 1237 	.db #0x06
   00FA 07                 1238 	.db #0x07
   00FB 08                 1239 	.db #0x08
   00FC 09                 1240 	.db #0x09
   00FD 0A                 1241 	.db #0x0A
   00FE 0B                 1242 	.db #0x0B
   00FF 0C                 1243 	.db #0x0C
   0100 0E                 1244 	.db #0x0E
   0101 0F                 1245 	.db #0x0F
   0102 11                 1246 	.db #0x11
   0103 12                 1247 	.db #0x12
   0104 14                 1248 	.db #0x14
   0105 15                 1249 	.db #0x15
   0106 17                 1250 	.db #0x17
   0107 19                 1251 	.db #0x19
   0108 1B                 1252 	.db #0x1B
   0109 1D                 1253 	.db #0x1D
   010A 1F                 1254 	.db #0x1F
   010B 21                 1255 	.db #0x21
   010C 23                 1256 	.db #0x23
   010D 25                 1257 	.db #0x25
   010E 27                 1258 	.db #0x27
   010F 29                 1259 	.db #0x29
   0110 2B                 1260 	.db #0x2B
   0111 2E                 1261 	.db #0x2E
   0112 30                 1262 	.db #0x30
   0113 32                 1263 	.db #0x32
   0114 35                 1264 	.db #0x35
   0115 37                 1265 	.db #0x37
   0116 3A                 1266 	.db #0x3A
   0117 3C                 1267 	.db #0x3C
   0118 3F                 1268 	.db #0x3F
   0119 42                 1269 	.db #0x42
   011A 44                 1270 	.db #0x44
   011B 47                 1271 	.db #0x47
   011C 4A                 1272 	.db #0x4A
   011D 4C                 1273 	.db #0x4C
   011E 4F                 1274 	.db #0x4F
   011F 52                 1275 	.db #0x52
   0120 55                 1276 	.db #0x55
   0121 57                 1277 	.db #0x57
   0122 5A                 1278 	.db #0x5A
   0123 5D                 1279 	.db #0x5D
   0124 60                 1280 	.db #0x60
   0125 63                 1281 	.db #0x63
   0126 66                 1282 	.db #0x66
   0127 69                 1283 	.db #0x69
   0128 6C                 1284 	.db #0x6C
   0129 6F                 1285 	.db #0x6F
   012A 72                 1286 	.db #0x72
   012B 75                 1287 	.db #0x75
   012C                    1288 _tri_center:
   012C 08                 1289 	.db #0x08
   012D 0A                 1290 	.db #0x0A
   012E 12                 1291 	.db #0x12
   012F 10                 1292 	.db #0x10
   0130 00                 1293 	.db #0x00
   0131 02                 1294 	.db #0x02
   0132 08                 1295 	.db #0x08
   0133 0A                 1296 	.db #0x0A
   0134 0B                 1297 	.db #0x0B
   0135 09                 1298 	.db #0x09
   0136 03                 1299 	.db #0x03
   0137 01                 1300 	.db #0x01
   0138 11                 1301 	.db #0x11
   0139 13                 1302 	.db #0x13
   013A 0B                 1303 	.db #0x0B
   013B 09                 1304 	.db #0x09
   013C 0A                 1305 	.db #0x0A
   013D 12                 1306 	.db #0x12
   013E 10                 1307 	.db #0x10
   013F 00                 1308 	.db #0x00
   0140 02                 1309 	.db #0x02
   0141 08                 1310 	.db #0x08
   0142 0A                 1311 	.db #0x0A
   0143 12                 1312 	.db #0x12
   0144 13                 1313 	.db #0x13
   0145 0B                 1314 	.db #0x0B
   0146 09                 1315 	.db #0x09
   0147 03                 1316 	.db #0x03
   0148 01                 1317 	.db #0x01
   0149 11                 1318 	.db #0x11
   014A 13                 1319 	.db #0x13
   014B 0B                 1320 	.db #0x0B
   014C 12                 1321 	.db #0x12
   014D 10                 1322 	.db #0x10
   014E 00                 1323 	.db #0x00
   014F 02                 1324 	.db #0x02
   0150 08                 1325 	.db #0x08
   0151 0A                 1326 	.db #0x0A
   0152 12                 1327 	.db #0x12
   0153 10                 1328 	.db #0x10
   0154 11                 1329 	.db #0x11
   0155 13                 1330 	.db #0x13
   0156 0B                 1331 	.db #0x0B
   0157 09                 1332 	.db #0x09
   0158 03                 1333 	.db #0x03
   0159 01                 1334 	.db #0x01
   015A 11                 1335 	.db #0x11
   015B 13                 1336 	.db #0x13
   015C 10                 1337 	.db #0x10
   015D 00                 1338 	.db #0x00
   015E 02                 1339 	.db #0x02
   015F 08                 1340 	.db #0x08
   0160 0A                 1341 	.db #0x0A
   0161 12                 1342 	.db #0x12
   0162 10                 1343 	.db #0x10
   0163 00                 1344 	.db #0x00
   0164 01                 1345 	.db #0x01
   0165 11                 1346 	.db #0x11
   0166 13                 1347 	.db #0x13
   0167 0B                 1348 	.db #0x0B
   0168 09                 1349 	.db #0x09
   0169 03                 1350 	.db #0x03
   016A 01                 1351 	.db #0x01
   016B 11                 1352 	.db #0x11
   016C 00                 1353 	.db #0x00
   016D 02                 1354 	.db #0x02
   016E 08                 1355 	.db #0x08
   016F 0A                 1356 	.db #0x0A
   0170 12                 1357 	.db #0x12
   0171 10                 1358 	.db #0x10
   0172 00                 1359 	.db #0x00
   0173 02                 1360 	.db #0x02
   0174 03                 1361 	.db #0x03
   0175 01                 1362 	.db #0x01
   0176 11                 1363 	.db #0x11
   0177 13                 1364 	.db #0x13
   0178 0B                 1365 	.db #0x0B
   0179 09                 1366 	.db #0x09
   017A 03                 1367 	.db #0x03
   017B 01                 1368 	.db #0x01
   017C 02                 1369 	.db #0x02
   017D 08                 1370 	.db #0x08
   017E 0A                 1371 	.db #0x0A
   017F 12                 1372 	.db #0x12
   0180 10                 1373 	.db #0x10
   0181 00                 1374 	.db #0x00
   0182 02                 1375 	.db #0x02
   0183 08                 1376 	.db #0x08
   0184 09                 1377 	.db #0x09
   0185 03                 1378 	.db #0x03
   0186 01                 1379 	.db #0x01
   0187 11                 1380 	.db #0x11
   0188 13                 1381 	.db #0x13
   0189 0B                 1382 	.db #0x0B
   018A 09                 1383 	.db #0x09
   018B 03                 1384 	.db #0x03
   018C 01                 1385 	.db #0x01
   018D 0B                 1386 	.db #0x0B
   018E 09                 1387 	.db #0x09
   018F 11                 1388 	.db #0x11
   0190 13                 1389 	.db #0x13
   0191 03                 1390 	.db #0x03
   0192 01                 1391 	.db #0x01
   0193 0B                 1392 	.db #0x0B
   0194 0A                 1393 	.db #0x0A
   0195 00                 1394 	.db #0x00
   0196 02                 1395 	.db #0x02
   0197 12                 1396 	.db #0x12
   0198 10                 1397 	.db #0x10
   0199 08                 1398 	.db #0x08
   019A 0A                 1399 	.db #0x0A
   019B 00                 1400 	.db #0x00
   019C 03                 1401 	.db #0x03
   019D 01                 1402 	.db #0x01
   019E 0B                 1403 	.db #0x0B
   019F 09                 1404 	.db #0x09
   01A0 11                 1405 	.db #0x11
   01A1 13                 1406 	.db #0x13
   01A2 03                 1407 	.db #0x03
   01A3 01                 1408 	.db #0x01
   01A4 00                 1409 	.db #0x00
   01A5 02                 1410 	.db #0x02
   01A6 12                 1411 	.db #0x12
   01A7 10                 1412 	.db #0x10
   01A8 08                 1413 	.db #0x08
   01A9 0A                 1414 	.db #0x0A
   01AA 00                 1415 	.db #0x00
   01AB 02                 1416 	.db #0x02
   01AC 13                 1417 	.db #0x13
   01AD 03                 1418 	.db #0x03
   01AE 01                 1419 	.db #0x01
   01AF 0B                 1420 	.db #0x0B
   01B0 09                 1421 	.db #0x09
   01B1 11                 1422 	.db #0x11
   01B2 13                 1423 	.db #0x13
   01B3 03                 1424 	.db #0x03
   01B4 02                 1425 	.db #0x02
   01B5 12                 1426 	.db #0x12
   01B6 10                 1427 	.db #0x10
   01B7 08                 1428 	.db #0x08
   01B8 0A                 1429 	.db #0x0A
   01B9 00                 1430 	.db #0x00
   01BA 02                 1431 	.db #0x02
   01BB 12                 1432 	.db #0x12
   01BC 11                 1433 	.db #0x11
   01BD 13                 1434 	.db #0x13
   01BE 03                 1435 	.db #0x03
   01BF 01                 1436 	.db #0x01
   01C0 0B                 1437 	.db #0x0B
   01C1 09                 1438 	.db #0x09
   01C2 11                 1439 	.db #0x11
   01C3 13                 1440 	.db #0x13
   01C4 12                 1441 	.db #0x12
   01C5 10                 1442 	.db #0x10
   01C6 08                 1443 	.db #0x08
   01C7 0A                 1444 	.db #0x0A
   01C8 00                 1445 	.db #0x00
   01C9 02                 1446 	.db #0x02
   01CA 12                 1447 	.db #0x12
   01CB 10                 1448 	.db #0x10
   01CC 09                 1449 	.db #0x09
   01CD 11                 1450 	.db #0x11
   01CE 13                 1451 	.db #0x13
   01CF 03                 1452 	.db #0x03
   01D0 01                 1453 	.db #0x01
   01D1 0B                 1454 	.db #0x0B
   01D2 09                 1455 	.db #0x09
   01D3 11                 1456 	.db #0x11
   01D4 10                 1457 	.db #0x10
   01D5 08                 1458 	.db #0x08
   01D6 0A                 1459 	.db #0x0A
   01D7 00                 1460 	.db #0x00
   01D8 02                 1461 	.db #0x02
   01D9 12                 1462 	.db #0x12
   01DA 10                 1463 	.db #0x10
   01DB 08                 1464 	.db #0x08
   01DC 0B                 1465 	.db #0x0B
   01DD 09                 1466 	.db #0x09
   01DE 11                 1467 	.db #0x11
   01DF 13                 1468 	.db #0x13
   01E0 03                 1469 	.db #0x03
   01E1 01                 1470 	.db #0x01
   01E2 0B                 1471 	.db #0x0B
   01E3 09                 1472 	.db #0x09
   01E4 08                 1473 	.db #0x08
   01E5 0A                 1474 	.db #0x0A
   01E6 00                 1475 	.db #0x00
   01E7 02                 1476 	.db #0x02
   01E8 12                 1477 	.db #0x12
   01E9 10                 1478 	.db #0x10
   01EA 08                 1479 	.db #0x08
   01EB 0A                 1480 	.db #0x0A
   01EC                    1481 _tri_up:
   01EC 0A                 1482 	.db #0x0A
   01ED 12                 1483 	.db #0x12
   01EE 10                 1484 	.db #0x10
   01EF 00                 1485 	.db #0x00
   01F0 02                 1486 	.db #0x02
   01F1 08                 1487 	.db #0x08
   01F2 0A                 1488 	.db #0x0A
   01F3 12                 1489 	.db #0x12
   01F4 13                 1490 	.db #0x13
   01F5 0B                 1491 	.db #0x0B
   01F6 09                 1492 	.db #0x09
   01F7 03                 1493 	.db #0x03
   01F8 01                 1494 	.db #0x01
   01F9 11                 1495 	.db #0x11
   01FA 13                 1496 	.db #0x13
   01FB 0B                 1497 	.db #0x0B
   01FC 12                 1498 	.db #0x12
   01FD 10                 1499 	.db #0x10
   01FE 00                 1500 	.db #0x00
   01FF 02                 1501 	.db #0x02
   0200 08                 1502 	.db #0x08
   0201 0A                 1503 	.db #0x0A
   0202 12                 1504 	.db #0x12
   0203 10                 1505 	.db #0x10
   0204 11                 1506 	.db #0x11
   0205 13                 1507 	.db #0x13
   0206 0B                 1508 	.db #0x0B
   0207 09                 1509 	.db #0x09
   0208 03                 1510 	.db #0x03
   0209 01                 1511 	.db #0x01
   020A 11                 1512 	.db #0x11
   020B 13                 1513 	.db #0x13
   020C 10                 1514 	.db #0x10
   020D 00                 1515 	.db #0x00
   020E 02                 1516 	.db #0x02
   020F 08                 1517 	.db #0x08
   0210 0A                 1518 	.db #0x0A
   0211 12                 1519 	.db #0x12
   0212 10                 1520 	.db #0x10
   0213 00                 1521 	.db #0x00
   0214 01                 1522 	.db #0x01
   0215 11                 1523 	.db #0x11
   0216 13                 1524 	.db #0x13
   0217 0B                 1525 	.db #0x0B
   0218 09                 1526 	.db #0x09
   0219 03                 1527 	.db #0x03
   021A 01                 1528 	.db #0x01
   021B 11                 1529 	.db #0x11
   021C 00                 1530 	.db #0x00
   021D 02                 1531 	.db #0x02
   021E 08                 1532 	.db #0x08
   021F 0A                 1533 	.db #0x0A
   0220 12                 1534 	.db #0x12
   0221 10                 1535 	.db #0x10
   0222 00                 1536 	.db #0x00
   0223 02                 1537 	.db #0x02
   0224 03                 1538 	.db #0x03
   0225 01                 1539 	.db #0x01
   0226 11                 1540 	.db #0x11
   0227 13                 1541 	.db #0x13
   0228 0B                 1542 	.db #0x0B
   0229 09                 1543 	.db #0x09
   022A 03                 1544 	.db #0x03
   022B 01                 1545 	.db #0x01
   022C 02                 1546 	.db #0x02
   022D 08                 1547 	.db #0x08
   022E 0A                 1548 	.db #0x0A
   022F 12                 1549 	.db #0x12
   0230 10                 1550 	.db #0x10
   0231 00                 1551 	.db #0x00
   0232 02                 1552 	.db #0x02
   0233 08                 1553 	.db #0x08
   0234 09                 1554 	.db #0x09
   0235 03                 1555 	.db #0x03
   0236 01                 1556 	.db #0x01
   0237 11                 1557 	.db #0x11
   0238 13                 1558 	.db #0x13
   0239 0B                 1559 	.db #0x0B
   023A 09                 1560 	.db #0x09
   023B 03                 1561 	.db #0x03
   023C 08                 1562 	.db #0x08
   023D 0A                 1563 	.db #0x0A
   023E 12                 1564 	.db #0x12
   023F 10                 1565 	.db #0x10
   0240 00                 1566 	.db #0x00
   0241 02                 1567 	.db #0x02
   0242 08                 1568 	.db #0x08
   0243 0A                 1569 	.db #0x0A
   0244 0B                 1570 	.db #0x0B
   0245 09                 1571 	.db #0x09
   0246 03                 1572 	.db #0x03
   0247 01                 1573 	.db #0x01
   0248 11                 1574 	.db #0x11
   0249 13                 1575 	.db #0x13
   024A 0B                 1576 	.db #0x0B
   024B 09                 1577 	.db #0x09
   024C 0A                 1578 	.db #0x0A
   024D 12                 1579 	.db #0x12
   024E 10                 1580 	.db #0x10
   024F 00                 1581 	.db #0x00
   0250 02                 1582 	.db #0x02
   0251 08                 1583 	.db #0x08
   0252 0A                 1584 	.db #0x0A
   0253 12                 1585 	.db #0x12
   0254 13                 1586 	.db #0x13
   0255 0B                 1587 	.db #0x0B
   0256 09                 1588 	.db #0x09
   0257 03                 1589 	.db #0x03
   0258 01                 1590 	.db #0x01
   0259 11                 1591 	.db #0x11
   025A 13                 1592 	.db #0x13
   025B 0B                 1593 	.db #0x0B
   025C 12                 1594 	.db #0x12
   025D 10                 1595 	.db #0x10
   025E 00                 1596 	.db #0x00
   025F 02                 1597 	.db #0x02
   0260 08                 1598 	.db #0x08
   0261 0A                 1599 	.db #0x0A
   0262 12                 1600 	.db #0x12
   0263 10                 1601 	.db #0x10
   0264 11                 1602 	.db #0x11
   0265 13                 1603 	.db #0x13
   0266 0B                 1604 	.db #0x0B
   0267 09                 1605 	.db #0x09
   0268 03                 1606 	.db #0x03
   0269 01                 1607 	.db #0x01
   026A 11                 1608 	.db #0x11
   026B 13                 1609 	.db #0x13
   026C 10                 1610 	.db #0x10
   026D 00                 1611 	.db #0x00
   026E 02                 1612 	.db #0x02
   026F 08                 1613 	.db #0x08
   0270 0A                 1614 	.db #0x0A
   0271 12                 1615 	.db #0x12
   0272 10                 1616 	.db #0x10
   0273 00                 1617 	.db #0x00
   0274 01                 1618 	.db #0x01
   0275 11                 1619 	.db #0x11
   0276 13                 1620 	.db #0x13
   0277 0B                 1621 	.db #0x0B
   0278 09                 1622 	.db #0x09
   0279 03                 1623 	.db #0x03
   027A 01                 1624 	.db #0x01
   027B 11                 1625 	.db #0x11
   027C 00                 1626 	.db #0x00
   027D 02                 1627 	.db #0x02
   027E 08                 1628 	.db #0x08
   027F 0A                 1629 	.db #0x0A
   0280 12                 1630 	.db #0x12
   0281 10                 1631 	.db #0x10
   0282 00                 1632 	.db #0x00
   0283 02                 1633 	.db #0x02
   0284 03                 1634 	.db #0x03
   0285 01                 1635 	.db #0x01
   0286 11                 1636 	.db #0x11
   0287 13                 1637 	.db #0x13
   0288 0B                 1638 	.db #0x0B
   0289 09                 1639 	.db #0x09
   028A 03                 1640 	.db #0x03
   028B 01                 1641 	.db #0x01
   028C 02                 1642 	.db #0x02
   028D 08                 1643 	.db #0x08
   028E 0A                 1644 	.db #0x0A
   028F 12                 1645 	.db #0x12
   0290 10                 1646 	.db #0x10
   0291 00                 1647 	.db #0x00
   0292 02                 1648 	.db #0x02
   0293 08                 1649 	.db #0x08
   0294 09                 1650 	.db #0x09
   0295 03                 1651 	.db #0x03
   0296 01                 1652 	.db #0x01
   0297 11                 1653 	.db #0x11
   0298 13                 1654 	.db #0x13
   0299 0B                 1655 	.db #0x0B
   029A 09                 1656 	.db #0x09
   029B 03                 1657 	.db #0x03
   029C 08                 1658 	.db #0x08
   029D 0A                 1659 	.db #0x0A
   029E 12                 1660 	.db #0x12
   029F 10                 1661 	.db #0x10
   02A0 00                 1662 	.db #0x00
   02A1 02                 1663 	.db #0x02
   02A2 08                 1664 	.db #0x08
   02A3 0A                 1665 	.db #0x0A
   02A4 0B                 1666 	.db #0x0B
   02A5 09                 1667 	.db #0x09
   02A6 03                 1668 	.db #0x03
   02A7 01                 1669 	.db #0x01
   02A8 11                 1670 	.db #0x11
   02A9 13                 1671 	.db #0x13
   02AA 0B                 1672 	.db #0x0B
   02AB 09                 1673 	.db #0x09
   02AC                    1674 _tri_dia:
   02AC 05                 1675 	.db #0x05
   02AD 1B                 1676 	.db #0x1B
   02AE 0F                 1677 	.db #0x0F
   02AF 1D                 1678 	.db #0x1D
   02B0 15                 1679 	.db #0x15
   02B1 19                 1680 	.db #0x19
   02B2 05                 1681 	.db #0x05
   02B3 1B                 1682 	.db #0x1B
   02B4 0F                 1683 	.db #0x0F
   02B5 1D                 1684 	.db #0x1D
   02B6 15                 1685 	.db #0x15
   02B7 19                 1686 	.db #0x19
   02B8 05                 1687 	.db #0x05
   02B9 1B                 1688 	.db #0x1B
   02BA 0F                 1689 	.db #0x0F
   02BB 1D                 1690 	.db #0x1D
   02BC 1D                 1691 	.db #0x1D
   02BD 05                 1692 	.db #0x05
   02BE 19                 1693 	.db #0x19
   02BF 0F                 1694 	.db #0x0F
   02C0 1B                 1695 	.db #0x1B
   02C1 15                 1696 	.db #0x15
   02C2 1D                 1697 	.db #0x1D
   02C3 05                 1698 	.db #0x05
   02C4 19                 1699 	.db #0x19
   02C5 0F                 1700 	.db #0x0F
   02C6 1B                 1701 	.db #0x1B
   02C7 15                 1702 	.db #0x15
   02C8 1D                 1703 	.db #0x1D
   02C9 05                 1704 	.db #0x05
   02CA 19                 1705 	.db #0x19
   02CB 0F                 1706 	.db #0x0F
   02CC 0F                 1707 	.db #0x0F
   02CD 1D                 1708 	.db #0x1D
   02CE 15                 1709 	.db #0x15
   02CF 19                 1710 	.db #0x19
   02D0 05                 1711 	.db #0x05
   02D1 1B                 1712 	.db #0x1B
   02D2 0F                 1713 	.db #0x0F
   02D3 1D                 1714 	.db #0x1D
   02D4 15                 1715 	.db #0x15
   02D5 19                 1716 	.db #0x19
   02D6 05                 1717 	.db #0x05
   02D7 1B                 1718 	.db #0x1B
   02D8 0F                 1719 	.db #0x0F
   02D9 1D                 1720 	.db #0x1D
   02DA 15                 1721 	.db #0x15
   02DB 19                 1722 	.db #0x19
   02DC 19                 1723 	.db #0x19
   02DD 0F                 1724 	.db #0x0F
   02DE 1B                 1725 	.db #0x1B
   02DF 15                 1726 	.db #0x15
   02E0 1D                 1727 	.db #0x1D
   02E1 05                 1728 	.db #0x05
   02E2 19                 1729 	.db #0x19
   02E3 0F                 1730 	.db #0x0F
   02E4 1B                 1731 	.db #0x1B
   02E5 15                 1732 	.db #0x15
   02E6 1D                 1733 	.db #0x1D
   02E7 05                 1734 	.db #0x05
   02E8 19                 1735 	.db #0x19
   02E9 0F                 1736 	.db #0x0F
   02EA 1B                 1737 	.db #0x1B
   02EB 15                 1738 	.db #0x15
   02EC 15                 1739 	.db #0x15
   02ED 19                 1740 	.db #0x19
   02EE 05                 1741 	.db #0x05
   02EF 1B                 1742 	.db #0x1B
   02F0 0F                 1743 	.db #0x0F
   02F1 1D                 1744 	.db #0x1D
   02F2 15                 1745 	.db #0x15
   02F3 19                 1746 	.db #0x19
   02F4 05                 1747 	.db #0x05
   02F5 1B                 1748 	.db #0x1B
   02F6 0F                 1749 	.db #0x0F
   02F7 1D                 1750 	.db #0x1D
   02F8 15                 1751 	.db #0x15
   02F9 19                 1752 	.db #0x19
   02FA 05                 1753 	.db #0x05
   02FB 1B                 1754 	.db #0x1B
   02FC 1B                 1755 	.db #0x1B
   02FD 15                 1756 	.db #0x15
   02FE 1D                 1757 	.db #0x1D
   02FF 05                 1758 	.db #0x05
   0300 19                 1759 	.db #0x19
   0301 0F                 1760 	.db #0x0F
   0302 1B                 1761 	.db #0x1B
   0303 15                 1762 	.db #0x15
   0304 1D                 1763 	.db #0x1D
   0305 05                 1764 	.db #0x05
   0306 19                 1765 	.db #0x19
   0307 0F                 1766 	.db #0x0F
   0308 1B                 1767 	.db #0x1B
   0309 15                 1768 	.db #0x15
   030A 1D                 1769 	.db #0x1D
   030B 05                 1770 	.db #0x05
   030C 05                 1771 	.db #0x05
   030D 1B                 1772 	.db #0x1B
   030E 0F                 1773 	.db #0x0F
   030F 1D                 1774 	.db #0x1D
   0310 15                 1775 	.db #0x15
   0311 19                 1776 	.db #0x19
   0312 05                 1777 	.db #0x05
   0313 1B                 1778 	.db #0x1B
   0314 0F                 1779 	.db #0x0F
   0315 1D                 1780 	.db #0x1D
   0316 15                 1781 	.db #0x15
   0317 19                 1782 	.db #0x19
   0318 05                 1783 	.db #0x05
   0319 1B                 1784 	.db #0x1B
   031A 0F                 1785 	.db #0x0F
   031B 1D                 1786 	.db #0x1D
   031C 1D                 1787 	.db #0x1D
   031D 05                 1788 	.db #0x05
   031E 19                 1789 	.db #0x19
   031F 0F                 1790 	.db #0x0F
   0320 1B                 1791 	.db #0x1B
   0321 15                 1792 	.db #0x15
   0322 1D                 1793 	.db #0x1D
   0323 05                 1794 	.db #0x05
   0324 19                 1795 	.db #0x19
   0325 0F                 1796 	.db #0x0F
   0326 1B                 1797 	.db #0x1B
   0327 15                 1798 	.db #0x15
   0328 1D                 1799 	.db #0x1D
   0329 05                 1800 	.db #0x05
   032A 19                 1801 	.db #0x19
   032B 0F                 1802 	.db #0x0F
   032C 0F                 1803 	.db #0x0F
   032D 1D                 1804 	.db #0x1D
   032E 15                 1805 	.db #0x15
   032F 19                 1806 	.db #0x19
   0330 05                 1807 	.db #0x05
   0331 1B                 1808 	.db #0x1B
   0332 0F                 1809 	.db #0x0F
   0333 1D                 1810 	.db #0x1D
   0334 15                 1811 	.db #0x15
   0335 19                 1812 	.db #0x19
   0336 05                 1813 	.db #0x05
   0337 1B                 1814 	.db #0x1B
   0338 0F                 1815 	.db #0x0F
   0339 1D                 1816 	.db #0x1D
   033A 15                 1817 	.db #0x15
   033B 19                 1818 	.db #0x19
   033C 19                 1819 	.db #0x19
   033D 0F                 1820 	.db #0x0F
   033E 1B                 1821 	.db #0x1B
   033F 15                 1822 	.db #0x15
   0340 1D                 1823 	.db #0x1D
   0341 05                 1824 	.db #0x05
   0342 19                 1825 	.db #0x19
   0343 0F                 1826 	.db #0x0F
   0344 1B                 1827 	.db #0x1B
   0345 15                 1828 	.db #0x15
   0346 1D                 1829 	.db #0x1D
   0347 05                 1830 	.db #0x05
   0348 19                 1831 	.db #0x19
   0349 0F                 1832 	.db #0x0F
   034A 1B                 1833 	.db #0x1B
   034B 15                 1834 	.db #0x15
   034C 15                 1835 	.db #0x15
   034D 19                 1836 	.db #0x19
   034E 05                 1837 	.db #0x05
   034F 1B                 1838 	.db #0x1B
   0350 0F                 1839 	.db #0x0F
   0351 1D                 1840 	.db #0x1D
   0352 15                 1841 	.db #0x15
   0353 19                 1842 	.db #0x19
   0354 05                 1843 	.db #0x05
   0355 1B                 1844 	.db #0x1B
   0356 0F                 1845 	.db #0x0F
   0357 1D                 1846 	.db #0x1D
   0358 15                 1847 	.db #0x15
   0359 19                 1848 	.db #0x19
   035A 05                 1849 	.db #0x05
   035B 1B                 1850 	.db #0x1B
   035C 1B                 1851 	.db #0x1B
   035D 15                 1852 	.db #0x15
   035E 1D                 1853 	.db #0x1D
   035F 05                 1854 	.db #0x05
   0360 19                 1855 	.db #0x19
   0361 0F                 1856 	.db #0x0F
   0362 1B                 1857 	.db #0x1B
   0363 15                 1858 	.db #0x15
   0364 1D                 1859 	.db #0x1D
   0365 05                 1860 	.db #0x05
   0366 19                 1861 	.db #0x19
   0367 0F                 1862 	.db #0x0F
   0368 1B                 1863 	.db #0x1B
   0369 15                 1864 	.db #0x15
   036A 1D                 1865 	.db #0x1D
   036B 05                 1866 	.db #0x05
   036C                    1867 _tri_side1:
   036C 0A                 1868 	.db #0x0A
   036D 12                 1869 	.db #0x12
   036E 10                 1870 	.db #0x10
   036F 00                 1871 	.db #0x00
   0370 02                 1872 	.db #0x02
   0371 08                 1873 	.db #0x08
   0372 0A                 1874 	.db #0x0A
   0373 12                 1875 	.db #0x12
   0374 10                 1876 	.db #0x10
   0375 00                 1877 	.db #0x00
   0376 02                 1878 	.db #0x02
   0377 08                 1879 	.db #0x08
   0378 0A                 1880 	.db #0x0A
   0379 12                 1881 	.db #0x12
   037A 10                 1882 	.db #0x10
   037B 00                 1883 	.db #0x00
   037C 12                 1884 	.db #0x12
   037D 10                 1885 	.db #0x10
   037E 00                 1886 	.db #0x00
   037F 02                 1887 	.db #0x02
   0380 08                 1888 	.db #0x08
   0381 0A                 1889 	.db #0x0A
   0382 12                 1890 	.db #0x12
   0383 10                 1891 	.db #0x10
   0384 00                 1892 	.db #0x00
   0385 02                 1893 	.db #0x02
   0386 08                 1894 	.db #0x08
   0387 0A                 1895 	.db #0x0A
   0388 12                 1896 	.db #0x12
   0389 10                 1897 	.db #0x10
   038A 00                 1898 	.db #0x00
   038B 02                 1899 	.db #0x02
   038C 10                 1900 	.db #0x10
   038D 00                 1901 	.db #0x00
   038E 02                 1902 	.db #0x02
   038F 08                 1903 	.db #0x08
   0390 0A                 1904 	.db #0x0A
   0391 12                 1905 	.db #0x12
   0392 10                 1906 	.db #0x10
   0393 00                 1907 	.db #0x00
   0394 02                 1908 	.db #0x02
   0395 08                 1909 	.db #0x08
   0396 0A                 1910 	.db #0x0A
   0397 12                 1911 	.db #0x12
   0398 10                 1912 	.db #0x10
   0399 00                 1913 	.db #0x00
   039A 02                 1914 	.db #0x02
   039B 08                 1915 	.db #0x08
   039C 00                 1916 	.db #0x00
   039D 02                 1917 	.db #0x02
   039E 08                 1918 	.db #0x08
   039F 0A                 1919 	.db #0x0A
   03A0 12                 1920 	.db #0x12
   03A1 10                 1921 	.db #0x10
   03A2 00                 1922 	.db #0x00
   03A3 02                 1923 	.db #0x02
   03A4 08                 1924 	.db #0x08
   03A5 0A                 1925 	.db #0x0A
   03A6 12                 1926 	.db #0x12
   03A7 10                 1927 	.db #0x10
   03A8 00                 1928 	.db #0x00
   03A9 02                 1929 	.db #0x02
   03AA 08                 1930 	.db #0x08
   03AB 0A                 1931 	.db #0x0A
   03AC 02                 1932 	.db #0x02
   03AD 08                 1933 	.db #0x08
   03AE 0A                 1934 	.db #0x0A
   03AF 12                 1935 	.db #0x12
   03B0 10                 1936 	.db #0x10
   03B1 00                 1937 	.db #0x00
   03B2 02                 1938 	.db #0x02
   03B3 08                 1939 	.db #0x08
   03B4 0A                 1940 	.db #0x0A
   03B5 12                 1941 	.db #0x12
   03B6 10                 1942 	.db #0x10
   03B7 00                 1943 	.db #0x00
   03B8 02                 1944 	.db #0x02
   03B9 08                 1945 	.db #0x08
   03BA 0A                 1946 	.db #0x0A
   03BB 12                 1947 	.db #0x12
   03BC 08                 1948 	.db #0x08
   03BD 0A                 1949 	.db #0x0A
   03BE 12                 1950 	.db #0x12
   03BF 10                 1951 	.db #0x10
   03C0 00                 1952 	.db #0x00
   03C1 02                 1953 	.db #0x02
   03C2 08                 1954 	.db #0x08
   03C3 0A                 1955 	.db #0x0A
   03C4 12                 1956 	.db #0x12
   03C5 10                 1957 	.db #0x10
   03C6 00                 1958 	.db #0x00
   03C7 02                 1959 	.db #0x02
   03C8 08                 1960 	.db #0x08
   03C9 0A                 1961 	.db #0x0A
   03CA 12                 1962 	.db #0x12
   03CB 10                 1963 	.db #0x10
   03CC 0A                 1964 	.db #0x0A
   03CD 12                 1965 	.db #0x12
   03CE 10                 1966 	.db #0x10
   03CF 00                 1967 	.db #0x00
   03D0 02                 1968 	.db #0x02
   03D1 08                 1969 	.db #0x08
   03D2 0A                 1970 	.db #0x0A
   03D3 12                 1971 	.db #0x12
   03D4 10                 1972 	.db #0x10
   03D5 00                 1973 	.db #0x00
   03D6 02                 1974 	.db #0x02
   03D7 08                 1975 	.db #0x08
   03D8 0A                 1976 	.db #0x0A
   03D9 12                 1977 	.db #0x12
   03DA 10                 1978 	.db #0x10
   03DB 00                 1979 	.db #0x00
   03DC 12                 1980 	.db #0x12
   03DD 10                 1981 	.db #0x10
   03DE 00                 1982 	.db #0x00
   03DF 02                 1983 	.db #0x02
   03E0 08                 1984 	.db #0x08
   03E1 0A                 1985 	.db #0x0A
   03E2 12                 1986 	.db #0x12
   03E3 10                 1987 	.db #0x10
   03E4 00                 1988 	.db #0x00
   03E5 02                 1989 	.db #0x02
   03E6 08                 1990 	.db #0x08
   03E7 0A                 1991 	.db #0x0A
   03E8 12                 1992 	.db #0x12
   03E9 10                 1993 	.db #0x10
   03EA 00                 1994 	.db #0x00
   03EB 02                 1995 	.db #0x02
   03EC 10                 1996 	.db #0x10
   03ED 00                 1997 	.db #0x00
   03EE 02                 1998 	.db #0x02
   03EF 08                 1999 	.db #0x08
   03F0 0A                 2000 	.db #0x0A
   03F1 12                 2001 	.db #0x12
   03F2 10                 2002 	.db #0x10
   03F3 00                 2003 	.db #0x00
   03F4 02                 2004 	.db #0x02
   03F5 08                 2005 	.db #0x08
   03F6 0A                 2006 	.db #0x0A
   03F7 12                 2007 	.db #0x12
   03F8 10                 2008 	.db #0x10
   03F9 00                 2009 	.db #0x00
   03FA 02                 2010 	.db #0x02
   03FB 08                 2011 	.db #0x08
   03FC 00                 2012 	.db #0x00
   03FD 02                 2013 	.db #0x02
   03FE 08                 2014 	.db #0x08
   03FF 0A                 2015 	.db #0x0A
   0400 12                 2016 	.db #0x12
   0401 10                 2017 	.db #0x10
   0402 00                 2018 	.db #0x00
   0403 02                 2019 	.db #0x02
   0404 08                 2020 	.db #0x08
   0405 0A                 2021 	.db #0x0A
   0406 12                 2022 	.db #0x12
   0407 10                 2023 	.db #0x10
   0408 00                 2024 	.db #0x00
   0409 02                 2025 	.db #0x02
   040A 08                 2026 	.db #0x08
   040B 0A                 2027 	.db #0x0A
   040C 02                 2028 	.db #0x02
   040D 08                 2029 	.db #0x08
   040E 0A                 2030 	.db #0x0A
   040F 12                 2031 	.db #0x12
   0410 10                 2032 	.db #0x10
   0411 00                 2033 	.db #0x00
   0412 02                 2034 	.db #0x02
   0413 08                 2035 	.db #0x08
   0414 0A                 2036 	.db #0x0A
   0415 12                 2037 	.db #0x12
   0416 10                 2038 	.db #0x10
   0417 00                 2039 	.db #0x00
   0418 02                 2040 	.db #0x02
   0419 08                 2041 	.db #0x08
   041A 0A                 2042 	.db #0x0A
   041B 12                 2043 	.db #0x12
   041C 08                 2044 	.db #0x08
   041D 0A                 2045 	.db #0x0A
   041E 12                 2046 	.db #0x12
   041F 10                 2047 	.db #0x10
   0420 00                 2048 	.db #0x00
   0421 02                 2049 	.db #0x02
   0422 08                 2050 	.db #0x08
   0423 0A                 2051 	.db #0x0A
   0424 12                 2052 	.db #0x12
   0425 10                 2053 	.db #0x10
   0426 00                 2054 	.db #0x00
   0427 02                 2055 	.db #0x02
   0428 08                 2056 	.db #0x08
   0429 0A                 2057 	.db #0x0A
   042A 12                 2058 	.db #0x12
   042B 10                 2059 	.db #0x10
   042C                    2060 _tri_side2:
   042C 00                 2061 	.db #0x00
   042D 10                 2062 	.db #0x10
   042E 12                 2063 	.db #0x12
   042F 0A                 2064 	.db #0x0A
   0430 08                 2065 	.db #0x08
   0431 02                 2066 	.db #0x02
   0432 00                 2067 	.db #0x00
   0433 10                 2068 	.db #0x10
   0434 12                 2069 	.db #0x12
   0435 0A                 2070 	.db #0x0A
   0436 08                 2071 	.db #0x08
   0437 02                 2072 	.db #0x02
   0438 00                 2073 	.db #0x00
   0439 10                 2074 	.db #0x10
   043A 12                 2075 	.db #0x12
   043B 0A                 2076 	.db #0x0A
   043C 02                 2077 	.db #0x02
   043D 00                 2078 	.db #0x00
   043E 10                 2079 	.db #0x10
   043F 12                 2080 	.db #0x12
   0440 0A                 2081 	.db #0x0A
   0441 08                 2082 	.db #0x08
   0442 02                 2083 	.db #0x02
   0443 00                 2084 	.db #0x00
   0444 10                 2085 	.db #0x10
   0445 12                 2086 	.db #0x12
   0446 0A                 2087 	.db #0x0A
   0447 08                 2088 	.db #0x08
   0448 02                 2089 	.db #0x02
   0449 00                 2090 	.db #0x00
   044A 10                 2091 	.db #0x10
   044B 12                 2092 	.db #0x12
   044C 08                 2093 	.db #0x08
   044D 02                 2094 	.db #0x02
   044E 00                 2095 	.db #0x00
   044F 10                 2096 	.db #0x10
   0450 12                 2097 	.db #0x12
   0451 0A                 2098 	.db #0x0A
   0452 08                 2099 	.db #0x08
   0453 02                 2100 	.db #0x02
   0454 00                 2101 	.db #0x00
   0455 10                 2102 	.db #0x10
   0456 12                 2103 	.db #0x12
   0457 0A                 2104 	.db #0x0A
   0458 08                 2105 	.db #0x08
   0459 02                 2106 	.db #0x02
   045A 00                 2107 	.db #0x00
   045B 10                 2108 	.db #0x10
   045C 0A                 2109 	.db #0x0A
   045D 08                 2110 	.db #0x08
   045E 02                 2111 	.db #0x02
   045F 00                 2112 	.db #0x00
   0460 10                 2113 	.db #0x10
   0461 12                 2114 	.db #0x12
   0462 0A                 2115 	.db #0x0A
   0463 08                 2116 	.db #0x08
   0464 02                 2117 	.db #0x02
   0465 00                 2118 	.db #0x00
   0466 10                 2119 	.db #0x10
   0467 12                 2120 	.db #0x12
   0468 0A                 2121 	.db #0x0A
   0469 08                 2122 	.db #0x08
   046A 02                 2123 	.db #0x02
   046B 00                 2124 	.db #0x00
   046C 12                 2125 	.db #0x12
   046D 0A                 2126 	.db #0x0A
   046E 08                 2127 	.db #0x08
   046F 02                 2128 	.db #0x02
   0470 00                 2129 	.db #0x00
   0471 10                 2130 	.db #0x10
   0472 12                 2131 	.db #0x12
   0473 0A                 2132 	.db #0x0A
   0474 08                 2133 	.db #0x08
   0475 02                 2134 	.db #0x02
   0476 00                 2135 	.db #0x00
   0477 10                 2136 	.db #0x10
   0478 12                 2137 	.db #0x12
   0479 0A                 2138 	.db #0x0A
   047A 08                 2139 	.db #0x08
   047B 02                 2140 	.db #0x02
   047C 10                 2141 	.db #0x10
   047D 12                 2142 	.db #0x12
   047E 0A                 2143 	.db #0x0A
   047F 08                 2144 	.db #0x08
   0480 02                 2145 	.db #0x02
   0481 00                 2146 	.db #0x00
   0482 10                 2147 	.db #0x10
   0483 12                 2148 	.db #0x12
   0484 0A                 2149 	.db #0x0A
   0485 08                 2150 	.db #0x08
   0486 02                 2151 	.db #0x02
   0487 00                 2152 	.db #0x00
   0488 10                 2153 	.db #0x10
   0489 12                 2154 	.db #0x12
   048A 0A                 2155 	.db #0x0A
   048B 08                 2156 	.db #0x08
   048C 00                 2157 	.db #0x00
   048D 10                 2158 	.db #0x10
   048E 12                 2159 	.db #0x12
   048F 0A                 2160 	.db #0x0A
   0490 08                 2161 	.db #0x08
   0491 02                 2162 	.db #0x02
   0492 00                 2163 	.db #0x00
   0493 10                 2164 	.db #0x10
   0494 12                 2165 	.db #0x12
   0495 0A                 2166 	.db #0x0A
   0496 08                 2167 	.db #0x08
   0497 02                 2168 	.db #0x02
   0498 00                 2169 	.db #0x00
   0499 10                 2170 	.db #0x10
   049A 12                 2171 	.db #0x12
   049B 0A                 2172 	.db #0x0A
   049C 02                 2173 	.db #0x02
   049D 00                 2174 	.db #0x00
   049E 10                 2175 	.db #0x10
   049F 12                 2176 	.db #0x12
   04A0 0A                 2177 	.db #0x0A
   04A1 08                 2178 	.db #0x08
   04A2 02                 2179 	.db #0x02
   04A3 00                 2180 	.db #0x00
   04A4 10                 2181 	.db #0x10
   04A5 12                 2182 	.db #0x12
   04A6 0A                 2183 	.db #0x0A
   04A7 08                 2184 	.db #0x08
   04A8 02                 2185 	.db #0x02
   04A9 00                 2186 	.db #0x00
   04AA 10                 2187 	.db #0x10
   04AB 12                 2188 	.db #0x12
   04AC 08                 2189 	.db #0x08
   04AD 02                 2190 	.db #0x02
   04AE 00                 2191 	.db #0x00
   04AF 10                 2192 	.db #0x10
   04B0 12                 2193 	.db #0x12
   04B1 0A                 2194 	.db #0x0A
   04B2 08                 2195 	.db #0x08
   04B3 02                 2196 	.db #0x02
   04B4 00                 2197 	.db #0x00
   04B5 10                 2198 	.db #0x10
   04B6 12                 2199 	.db #0x12
   04B7 0A                 2200 	.db #0x0A
   04B8 08                 2201 	.db #0x08
   04B9 02                 2202 	.db #0x02
   04BA 00                 2203 	.db #0x00
   04BB 10                 2204 	.db #0x10
   04BC 0A                 2205 	.db #0x0A
   04BD 08                 2206 	.db #0x08
   04BE 02                 2207 	.db #0x02
   04BF 00                 2208 	.db #0x00
   04C0 10                 2209 	.db #0x10
   04C1 12                 2210 	.db #0x12
   04C2 0A                 2211 	.db #0x0A
   04C3 08                 2212 	.db #0x08
   04C4 02                 2213 	.db #0x02
   04C5 00                 2214 	.db #0x00
   04C6 10                 2215 	.db #0x10
   04C7 12                 2216 	.db #0x12
   04C8 0A                 2217 	.db #0x0A
   04C9 08                 2218 	.db #0x08
   04CA 02                 2219 	.db #0x02
   04CB 00                 2220 	.db #0x00
   04CC 12                 2221 	.db #0x12
   04CD 0A                 2222 	.db #0x0A
   04CE 08                 2223 	.db #0x08
   04CF 02                 2224 	.db #0x02
   04D0 00                 2225 	.db #0x00
   04D1 10                 2226 	.db #0x10
   04D2 12                 2227 	.db #0x12
   04D3 0A                 2228 	.db #0x0A
   04D4 08                 2229 	.db #0x08
   04D5 02                 2230 	.db #0x02
   04D6 00                 2231 	.db #0x00
   04D7 10                 2232 	.db #0x10
   04D8 12                 2233 	.db #0x12
   04D9 0A                 2234 	.db #0x0A
   04DA 08                 2235 	.db #0x08
   04DB 02                 2236 	.db #0x02
   04DC 10                 2237 	.db #0x10
   04DD 12                 2238 	.db #0x12
   04DE 0A                 2239 	.db #0x0A
   04DF 08                 2240 	.db #0x08
   04E0 02                 2241 	.db #0x02
   04E1 00                 2242 	.db #0x00
   04E2 10                 2243 	.db #0x10
   04E3 12                 2244 	.db #0x12
   04E4 0A                 2245 	.db #0x0A
   04E5 08                 2246 	.db #0x08
   04E6 02                 2247 	.db #0x02
   04E7 00                 2248 	.db #0x00
   04E8 10                 2249 	.db #0x10
   04E9 12                 2250 	.db #0x12
   04EA 0A                 2251 	.db #0x0A
   04EB 08                 2252 	.db #0x08
   04EC                    2253 _tri_inva1:
   04EC 1E                 2254 	.db #0x1E
   04ED 1F                 2255 	.db #0x1F
   04EE 1E                 2256 	.db #0x1E
   04EF 11                 2257 	.db #0x11
   04F0 13                 2258 	.db #0x13
   04F1 1E                 2259 	.db #0x1E
   04F2 08                 2260 	.db #0x08
   04F3 0A                 2261 	.db #0x0A
   04F4 00                 2262 	.db #0x00
   04F5 0E                 2263 	.db #0x0E
   04F6 10                 2264 	.db #0x10
   04F7 1E                 2265 	.db #0x1E
   04F8 1C                 2266 	.db #0x1C
   04F9 1E                 2267 	.db #0x1E
   04FA 08                 2268 	.db #0x08
   04FB 0A                 2269 	.db #0x0A
   04FC 1F                 2270 	.db #0x1F
   04FD 1F                 2271 	.db #0x1F
   04FE 1E                 2272 	.db #0x1E
   04FF 1E                 2273 	.db #0x1E
   0500 15                 2274 	.db #0x15
   0501 17                 2275 	.db #0x17
   0502 0A                 2276 	.db #0x0A
   0503 00                 2277 	.db #0x00
   0504 02                 2278 	.db #0x02
   0505 11                 2279 	.db #0x11
   0506 13                 2280 	.db #0x13
   0507 1F                 2281 	.db #0x1F
   0508 1C                 2282 	.db #0x1C
   0509 08                 2283 	.db #0x08
   050A 0A                 2284 	.db #0x0A
   050B 1F                 2285 	.db #0x1F
   050C 1E                 2286 	.db #0x1E
   050D 1F                 2287 	.db #0x1F
   050E 08                 2288 	.db #0x08
   050F 1B                 2289 	.db #0x1B
   0510 1A                 2290 	.db #0x1A
   0511 11                 2291 	.db #0x11
   0512 13                 2292 	.db #0x13
   0513 1C                 2293 	.db #0x1C
   0514 1E                 2294 	.db #0x1E
   0515 1F                 2295 	.db #0x1F
   0516 19                 2296 	.db #0x19
   0517 1E                 2297 	.db #0x1E
   0518 06                 2298 	.db #0x06
   0519 04                 2299 	.db #0x04
   051A 1C                 2300 	.db #0x1C
   051B 1C                 2301 	.db #0x1C
   051C 1E                 2302 	.db #0x1E
   051D 08                 2303 	.db #0x08
   051E 16                 2304 	.db #0x16
   051F 18                 2305 	.db #0x18
   0520 1B                 2306 	.db #0x1B
   0521 1E                 2307 	.db #0x1E
   0522 19                 2308 	.db #0x19
   0523 1D                 2309 	.db #0x1D
   0524 1F                 2310 	.db #0x1F
   0525 1E                 2311 	.db #0x1E
   0526 19                 2312 	.db #0x19
   0527 08                 2313 	.db #0x08
   0528 1B                 2314 	.db #0x1B
   0529 1E                 2315 	.db #0x1E
   052A 12                 2316 	.db #0x12
   052B 10                 2317 	.db #0x10
   052C 08                 2318 	.db #0x08
   052D 16                 2319 	.db #0x16
   052E 10                 2320 	.db #0x10
   052F 11                 2321 	.db #0x11
   0530 17                 2322 	.db #0x17
   0531 09                 2323 	.db #0x09
   0532 11                 2324 	.db #0x11
   0533 0F                 2325 	.db #0x0F
   0534 01                 2326 	.db #0x01
   0535 1E                 2327 	.db #0x1E
   0536 14                 2328 	.db #0x14
   0537 16                 2329 	.db #0x16
   0538 17                 2330 	.db #0x17
   0539 15                 2331 	.db #0x15
   053A 10                 2332 	.db #0x10
   053B 1E                 2333 	.db #0x1E
   053C 0A                 2334 	.db #0x0A
   053D 18                 2335 	.db #0x18
   053E 1F                 2336 	.db #0x1F
   053F 1E                 2337 	.db #0x1E
   0540 19                 2338 	.db #0x19
   0541 0B                 2339 	.db #0x0B
   0542 09                 2340 	.db #0x09
   0543 11                 2341 	.db #0x11
   0544 0F                 2342 	.db #0x0F
   0545 1C                 2343 	.db #0x1C
   0546 05                 2344 	.db #0x05
   0547 09                 2345 	.db #0x09
   0548 1E                 2346 	.db #0x1E
   0549 0B                 2347 	.db #0x0B
   054A 09                 2348 	.db #0x09
   054B 1F                 2349 	.db #0x1F
   054C 1E                 2350 	.db #0x1E
   054D 19                 2351 	.db #0x19
   054E 1E                 2352 	.db #0x1E
   054F 1F                 2353 	.db #0x1F
   0550 19                 2354 	.db #0x19
   0551 1E                 2355 	.db #0x1E
   0552 0B                 2356 	.db #0x0B
   0553 1B                 2357 	.db #0x1B
   0554 15                 2358 	.db #0x15
   0555 19                 2359 	.db #0x19
   0556 1D                 2360 	.db #0x1D
   0557 19                 2361 	.db #0x19
   0558 19                 2362 	.db #0x19
   0559 13                 2363 	.db #0x13
   055A 0B                 2364 	.db #0x0B
   055B 09                 2365 	.db #0x09
   055C 1E                 2366 	.db #0x1E
   055D 15                 2367 	.db #0x15
   055E 13                 2368 	.db #0x13
   055F 1E                 2369 	.db #0x1E
   0560 0C                 2370 	.db #0x0C
   0561 01                 2371 	.db #0x01
   0562 1E                 2372 	.db #0x1E
   0563 1F                 2373 	.db #0x1F
   0564 1E                 2374 	.db #0x1E
   0565 1E                 2375 	.db #0x1E
   0566 1C                 2376 	.db #0x1C
   0567 1D                 2377 	.db #0x1D
   0568 01                 2378 	.db #0x01
   0569 11                 2379 	.db #0x11
   056A 13                 2380 	.db #0x13
   056B 0B                 2381 	.db #0x0B
   056C 09                 2382 	.db #0x09
   056D 1A                 2383 	.db #0x1A
   056E 14                 2384 	.db #0x14
   056F 04                 2385 	.db #0x04
   0570 0E                 2386 	.db #0x0E
   0571 07                 2387 	.db #0x07
   0572 01                 2388 	.db #0x01
   0573 1E                 2389 	.db #0x1E
   0574 1F                 2390 	.db #0x1F
   0575 00                 2391 	.db #0x00
   0576 02                 2392 	.db #0x02
   0577 1E                 2393 	.db #0x1E
   0578 03                 2394 	.db #0x03
   0579 01                 2395 	.db #0x01
   057A 0C                 2396 	.db #0x0C
   057B 06                 2397 	.db #0x06
   057C 0B                 2398 	.db #0x0B
   057D 1B                 2399 	.db #0x1B
   057E 04                 2400 	.db #0x04
   057F 0E                 2401 	.db #0x0E
   0580 19                 2402 	.db #0x19
   0581 17                 2403 	.db #0x17
   0582 07                 2404 	.db #0x07
   0583 1D                 2405 	.db #0x1D
   0584 1C                 2406 	.db #0x1C
   0585 02                 2407 	.db #0x02
   0586 1F                 2408 	.db #0x1F
   0587 1E                 2409 	.db #0x1E
   0588 08                 2410 	.db #0x08
   0589 07                 2411 	.db #0x07
   058A 06                 2412 	.db #0x06
   058B 1E                 2413 	.db #0x1E
   058C 08                 2414 	.db #0x08
   058D 04                 2415 	.db #0x04
   058E 0E                 2416 	.db #0x0E
   058F 14                 2417 	.db #0x14
   0590 09                 2418 	.db #0x09
   0591 11                 2419 	.db #0x11
   0592 17                 2420 	.db #0x17
   0593 07                 2421 	.db #0x07
   0594 1D                 2422 	.db #0x1D
   0595 1F                 2423 	.db #0x1F
   0596 1E                 2424 	.db #0x1E
   0597 08                 2425 	.db #0x08
   0598 0A                 2426 	.db #0x0A
   0599 1E                 2427 	.db #0x1E
   059A 1F                 2428 	.db #0x1F
   059B 1F                 2429 	.db #0x1F
   059C 04                 2430 	.db #0x04
   059D 0E                 2431 	.db #0x0E
   059E 14                 2432 	.db #0x14
   059F 0A                 2433 	.db #0x0A
   05A0 0B                 2434 	.db #0x0B
   05A1 09                 2435 	.db #0x09
   05A2 11                 2436 	.db #0x11
   05A3 17                 2437 	.db #0x17
   05A4 07                 2438 	.db #0x07
   05A5 01                 2439 	.db #0x01
   05A6 08                 2440 	.db #0x08
   05A7 0A                 2441 	.db #0x0A
   05A8 1E                 2442 	.db #0x1E
   05A9 1F                 2443 	.db #0x1F
   05AA 1F                 2444 	.db #0x1F
   05AB 1E                 2445 	.db #0x1E
   05AC                    2446 _tri_inva2:
   05AC 14                 2447 	.db #0x14
   05AD 04                 2448 	.db #0x04
   05AE 0E                 2449 	.db #0x0E
   05AF 14                 2450 	.db #0x14
   05B0 04                 2451 	.db #0x04
   05B1 0E                 2452 	.db #0x0E
   05B2 14                 2453 	.db #0x14
   05B3 1A                 2454 	.db #0x1A
   05B4 1B                 2455 	.db #0x1B
   05B5 15                 2456 	.db #0x15
   05B6 0F                 2457 	.db #0x0F
   05B7 05                 2458 	.db #0x05
   05B8 15                 2459 	.db #0x15
   05B9 0F                 2460 	.db #0x0F
   05BA 05                 2461 	.db #0x05
   05BB 15                 2462 	.db #0x15
   05BC 04                 2463 	.db #0x04
   05BD 0E                 2464 	.db #0x0E
   05BE 14                 2465 	.db #0x14
   05BF 04                 2466 	.db #0x04
   05C0 0E                 2467 	.db #0x0E
   05C1 14                 2468 	.db #0x14
   05C2 04                 2469 	.db #0x04
   05C3 1C                 2470 	.db #0x1C
   05C4 1D                 2471 	.db #0x1D
   05C5 05                 2472 	.db #0x05
   05C6 15                 2473 	.db #0x15
   05C7 0F                 2474 	.db #0x0F
   05C8 05                 2475 	.db #0x05
   05C9 15                 2476 	.db #0x15
   05CA 0F                 2477 	.db #0x0F
   05CB 05                 2478 	.db #0x05
   05CC 0E                 2479 	.db #0x0E
   05CD 14                 2480 	.db #0x14
   05CE 04                 2481 	.db #0x04
   05CF 0E                 2482 	.db #0x0E
   05D0 14                 2483 	.db #0x14
   05D1 04                 2484 	.db #0x04
   05D2 0E                 2485 	.db #0x0E
   05D3 18                 2486 	.db #0x18
   05D4 19                 2487 	.db #0x19
   05D5 0F                 2488 	.db #0x0F
   05D6 05                 2489 	.db #0x05
   05D7 15                 2490 	.db #0x15
   05D8 0F                 2491 	.db #0x0F
   05D9 05                 2492 	.db #0x05
   05DA 15                 2493 	.db #0x15
   05DB 0F                 2494 	.db #0x0F
   05DC 18                 2495 	.db #0x18
   05DD 1A                 2496 	.db #0x1A
   05DE 1C                 2497 	.db #0x1C
   05DF 18                 2498 	.db #0x18
   05E0 1A                 2499 	.db #0x1A
   05E1 1C                 2500 	.db #0x1C
   05E2 18                 2501 	.db #0x18
   05E3 18                 2502 	.db #0x18
   05E4 19                 2503 	.db #0x19
   05E5 19                 2504 	.db #0x19
   05E6 1D                 2505 	.db #0x1D
   05E7 1B                 2506 	.db #0x1B
   05E8 19                 2507 	.db #0x19
   05E9 1D                 2508 	.db #0x1D
   05EA 1B                 2509 	.db #0x1B
   05EB 19                 2510 	.db #0x19
   05EC 18                 2511 	.db #0x18
   05ED 1A                 2512 	.db #0x1A
   05EE 1C                 2513 	.db #0x1C
   05EF 18                 2514 	.db #0x18
   05F0 1A                 2515 	.db #0x1A
   05F1 1C                 2516 	.db #0x1C
   05F2 18                 2517 	.db #0x18
   05F3 18                 2518 	.db #0x18
   05F4 0D                 2519 	.db #0x0D
   05F5 19                 2520 	.db #0x19
   05F6 1D                 2521 	.db #0x1D
   05F7 1B                 2522 	.db #0x1B
   05F8 19                 2523 	.db #0x19
   05F9 1D                 2524 	.db #0x1D
   05FA 1B                 2525 	.db #0x1B
   05FB 19                 2526 	.db #0x19
   05FC 19                 2527 	.db #0x19
   05FD 1B                 2528 	.db #0x1B
   05FE 1D                 2529 	.db #0x1D
   05FF 19                 2530 	.db #0x19
   0600 1B                 2531 	.db #0x1B
   0601 1D                 2532 	.db #0x1D
   0602 19                 2533 	.db #0x19
   0603 0C                 2534 	.db #0x0C
   0604 0E                 2535 	.db #0x0E
   0605 18                 2536 	.db #0x18
   0606 1C                 2537 	.db #0x1C
   0607 1A                 2538 	.db #0x1A
   0608 18                 2539 	.db #0x18
   0609 1C                 2540 	.db #0x1C
   060A 1A                 2541 	.db #0x1A
   060B 18                 2542 	.db #0x18
   060C 19                 2543 	.db #0x19
   060D 1B                 2544 	.db #0x1B
   060E 1D                 2545 	.db #0x1D
   060F 19                 2546 	.db #0x19
   0610 1B                 2547 	.db #0x1B
   0611 1D                 2548 	.db #0x1D
   0612 19                 2549 	.db #0x19
   0613 0F                 2550 	.db #0x0F
   0614 0D                 2551 	.db #0x0D
   0615 18                 2552 	.db #0x18
   0616 1C                 2553 	.db #0x1C
   0617 1A                 2554 	.db #0x1A
   0618 18                 2555 	.db #0x18
   0619 1C                 2556 	.db #0x1C
   061A 1A                 2557 	.db #0x1A
   061B 18                 2558 	.db #0x18
   061C 0D                 2559 	.db #0x0D
   061D 17                 2560 	.db #0x17
   061E 07                 2561 	.db #0x07
   061F 0D                 2562 	.db #0x0D
   0620 17                 2563 	.db #0x17
   0621 07                 2564 	.db #0x07
   0622 0D                 2565 	.db #0x0D
   0623 0C                 2566 	.db #0x0C
   0624 0E                 2567 	.db #0x0E
   0625 0C                 2568 	.db #0x0C
   0626 06                 2569 	.db #0x06
   0627 16                 2570 	.db #0x16
   0628 0C                 2571 	.db #0x0C
   0629 06                 2572 	.db #0x06
   062A 16                 2573 	.db #0x16
   062B 0C                 2574 	.db #0x0C
   062C 07                 2575 	.db #0x07
   062D 0D                 2576 	.db #0x0D
   062E 17                 2577 	.db #0x17
   062F 07                 2578 	.db #0x07
   0630 0D                 2579 	.db #0x0D
   0631 17                 2580 	.db #0x17
   0632 02                 2581 	.db #0x02
   0633 1A                 2582 	.db #0x1A
   0634 1A                 2583 	.db #0x1A
   0635 03                 2584 	.db #0x03
   0636 16                 2585 	.db #0x16
   0637 0C                 2586 	.db #0x0C
   0638 06                 2587 	.db #0x06
   0639 16                 2588 	.db #0x16
   063A 0C                 2589 	.db #0x0C
   063B 06                 2590 	.db #0x06
   063C 17                 2591 	.db #0x17
   063D 07                 2592 	.db #0x07
   063E 0D                 2593 	.db #0x0D
   063F 17                 2594 	.db #0x17
   0640 07                 2595 	.db #0x07
   0641 10                 2596 	.db #0x10
   0642 1F                 2597 	.db #0x1F
   0643 1A                 2598 	.db #0x1A
   0644 1A                 2599 	.db #0x1A
   0645 1F                 2600 	.db #0x1F
   0646 11                 2601 	.db #0x11
   0647 06                 2602 	.db #0x06
   0648 16                 2603 	.db #0x16
   0649 0C                 2604 	.db #0x0C
   064A 06                 2605 	.db #0x06
   064B 16                 2606 	.db #0x16
   064C 0D                 2607 	.db #0x0D
   064D 17                 2608 	.db #0x17
   064E 07                 2609 	.db #0x07
   064F 0D                 2610 	.db #0x0D
   0650 0A                 2611 	.db #0x0A
   0651 1F                 2612 	.db #0x1F
   0652 1F                 2613 	.db #0x1F
   0653 1A                 2614 	.db #0x1A
   0654 1A                 2615 	.db #0x1A
   0655 1F                 2616 	.db #0x1F
   0656 1F                 2617 	.db #0x1F
   0657 0B                 2618 	.db #0x0B
   0658 0C                 2619 	.db #0x0C
   0659 06                 2620 	.db #0x06
   065A 16                 2621 	.db #0x16
   065B 0C                 2622 	.db #0x0C
   065C 07                 2623 	.db #0x07
   065D 0D                 2624 	.db #0x0D
   065E 17                 2625 	.db #0x17
   065F 02                 2626 	.db #0x02
   0660 1F                 2627 	.db #0x1F
   0661 1F                 2628 	.db #0x1F
   0662 1F                 2629 	.db #0x1F
   0663 1F                 2630 	.db #0x1F
   0664 1F                 2631 	.db #0x1F
   0665 1F                 2632 	.db #0x1F
   0666 1F                 2633 	.db #0x1F
   0667 1F                 2634 	.db #0x1F
   0668 03                 2635 	.db #0x03
   0669 16                 2636 	.db #0x16
   066A 0C                 2637 	.db #0x0C
   066B 06                 2638 	.db #0x06
   066C                    2639 _tri_inva3:
   066C 1A                 2640 	.db #0x1A
   066D 1C                 2641 	.db #0x1C
   066E 18                 2642 	.db #0x18
   066F 1A                 2643 	.db #0x1A
   0670 1C                 2644 	.db #0x1C
   0671 18                 2645 	.db #0x18
   0672 1A                 2646 	.db #0x1A
   0673 1E                 2647 	.db #0x1E
   0674 00                 2648 	.db #0x00
   0675 1C                 2649 	.db #0x1C
   0676 1C                 2650 	.db #0x1C
   0677 1D                 2651 	.db #0x1D
   0678 1C                 2652 	.db #0x1C
   0679 1C                 2653 	.db #0x1C
   067A 1D                 2654 	.db #0x1D
   067B 1C                 2655 	.db #0x1C
   067C 1A                 2656 	.db #0x1A
   067D 1C                 2657 	.db #0x1C
   067E 18                 2658 	.db #0x18
   067F 1A                 2659 	.db #0x1A
   0680 1C                 2660 	.db #0x1C
   0681 18                 2661 	.db #0x18
   0682 1A                 2662 	.db #0x1A
   0683 1F                 2663 	.db #0x1F
   0684 1C                 2664 	.db #0x1C
   0685 18                 2665 	.db #0x18
   0686 1F                 2666 	.db #0x1F
   0687 1C                 2667 	.db #0x1C
   0688 1D                 2668 	.db #0x1D
   0689 1D                 2669 	.db #0x1D
   068A 1C                 2670 	.db #0x1C
   068B 1D                 2671 	.db #0x1D
   068C 04                 2672 	.db #0x04
   068D 0E                 2673 	.db #0x0E
   068E 14                 2674 	.db #0x14
   068F 04                 2675 	.db #0x04
   0690 0E                 2676 	.db #0x0E
   0691 14                 2677 	.db #0x14
   0692 0A                 2678 	.db #0x0A
   0693 1E                 2679 	.db #0x1E
   0694 1C                 2680 	.db #0x1C
   0695 0D                 2681 	.db #0x0D
   0696 18                 2682 	.db #0x18
   0697 1C                 2683 	.db #0x1C
   0698 1C                 2684 	.db #0x1C
   0699 1C                 2685 	.db #0x1C
   069A 1C                 2686 	.db #0x1C
   069B 1C                 2687 	.db #0x1C
   069C 1C                 2688 	.db #0x1C
   069D 18                 2689 	.db #0x18
   069E 1A                 2690 	.db #0x1A
   069F 1C                 2691 	.db #0x1C
   06A0 18                 2692 	.db #0x18
   06A1 1A                 2693 	.db #0x1A
   06A2 1E                 2694 	.db #0x1E
   06A3 00                 2695 	.db #0x00
   06A4 1C                 2696 	.db #0x1C
   06A5 1D                 2697 	.db #0x1D
   06A6 1C                 2698 	.db #0x1C
   06A7 1C                 2699 	.db #0x1C
   06A8 1D                 2700 	.db #0x1D
   06A9 18                 2701 	.db #0x18
   06AA 0F                 2702 	.db #0x0F
   06AB 1C                 2703 	.db #0x1C
   06AC 1C                 2704 	.db #0x1C
   06AD 18                 2705 	.db #0x18
   06AE 1A                 2706 	.db #0x1A
   06AF 1C                 2707 	.db #0x1C
   06B0 18                 2708 	.db #0x18
   06B1 1A                 2709 	.db #0x1A
   06B2 1F                 2710 	.db #0x1F
   06B3 1C                 2711 	.db #0x1C
   06B4 1D                 2712 	.db #0x1D
   06B5 02                 2713 	.db #0x02
   06B6 1C                 2714 	.db #0x1C
   06B7 02                 2715 	.db #0x02
   06B8 1D                 2716 	.db #0x1D
   06B9 1F                 2717 	.db #0x1F
   06BA 18                 2718 	.db #0x18
   06BB 1C                 2719 	.db #0x1C
   06BC 1C                 2720 	.db #0x1C
   06BD 18                 2721 	.db #0x18
   06BE 1A                 2722 	.db #0x1A
   06BF 1C                 2723 	.db #0x1C
   06C0 18                 2724 	.db #0x18
   06C1 1A                 2725 	.db #0x1A
   06C2 1F                 2726 	.db #0x1F
   06C3 03                 2727 	.db #0x03
   06C4 1C                 2728 	.db #0x1C
   06C5 1D                 2729 	.db #0x1D
   06C6 1C                 2730 	.db #0x1C
   06C7 1C                 2731 	.db #0x1C
   06C8 1C                 2732 	.db #0x1C
   06C9 1C                 2733 	.db #0x1C
   06CA 1D                 2734 	.db #0x1D
   06CB 1C                 2735 	.db #0x1C
   06CC 0E                 2736 	.db #0x0E
   06CD 14                 2737 	.db #0x14
   06CE 04                 2738 	.db #0x04
   06CF 0E                 2739 	.db #0x0E
   06D0 14                 2740 	.db #0x14
   06D1 0A                 2741 	.db #0x0A
   06D2 1E                 2742 	.db #0x1E
   06D3 00                 2743 	.db #0x00
   06D4 0B                 2744 	.db #0x0B
   06D5 0A                 2745 	.db #0x0A
   06D6 0B                 2746 	.db #0x0B
   06D7 0A                 2747 	.db #0x0A
   06D8 0B                 2748 	.db #0x0B
   06D9 0A                 2749 	.db #0x0A
   06DA 1D                 2750 	.db #0x1D
   06DB 1C                 2751 	.db #0x1C
   06DC 14                 2752 	.db #0x14
   06DD 04                 2753 	.db #0x04
   06DE 0E                 2754 	.db #0x0E
   06DF 14                 2755 	.db #0x14
   06E0 0A                 2756 	.db #0x0A
   06E1 1F                 2757 	.db #0x1F
   06E2 1E                 2758 	.db #0x1E
   06E3 1C                 2759 	.db #0x1C
   06E4 1F                 2760 	.db #0x1F
   06E5 1E                 2761 	.db #0x1E
   06E6 1F                 2762 	.db #0x1F
   06E7 1E                 2763 	.db #0x1E
   06E8 1F                 2764 	.db #0x1F
   06E9 1E                 2765 	.db #0x1E
   06EA 1D                 2766 	.db #0x1D
   06EB 1C                 2767 	.db #0x1C
   06EC 1A                 2768 	.db #0x1A
   06ED 1C                 2769 	.db #0x1C
   06EE 18                 2770 	.db #0x18
   06EF 1A                 2771 	.db #0x1A
   06F0 1F                 2772 	.db #0x1F
   06F1 12                 2773 	.db #0x12
   06F2 18                 2774 	.db #0x18
   06F3 18                 2775 	.db #0x18
   06F4 19                 2776 	.db #0x19
   06F5 19                 2777 	.db #0x19
   06F6 13                 2778 	.db #0x13
   06F7 1E                 2779 	.db #0x1E
   06F8 1F                 2780 	.db #0x1F
   06F9 1E                 2781 	.db #0x1E
   06FA 1D                 2782 	.db #0x1D
   06FB 1C                 2783 	.db #0x1C
   06FC 1B                 2784 	.db #0x1B
   06FD 1D                 2785 	.db #0x1D
   06FE 19                 2786 	.db #0x19
   06FF 1B                 2787 	.db #0x1B
   0700 1E                 2788 	.db #0x1E
   0701 18                 2789 	.db #0x18
   0702 18                 2790 	.db #0x18
   0703 18                 2791 	.db #0x18
   0704 19                 2792 	.db #0x19
   0705 19                 2793 	.db #0x19
   0706 19                 2794 	.db #0x19
   0707 13                 2795 	.db #0x13
   0708 1F                 2796 	.db #0x1F
   0709 00                 2797 	.db #0x00
   070A 1C                 2798 	.db #0x1C
   070B 1C                 2799 	.db #0x1C
   070C 1B                 2800 	.db #0x1B
   070D 1D                 2801 	.db #0x1D
   070E 19                 2802 	.db #0x19
   070F 1B                 2803 	.db #0x1B
   0710 1F                 2804 	.db #0x1F
   0711 18                 2805 	.db #0x18
   0712 18                 2806 	.db #0x18
   0713 0C                 2807 	.db #0x0C
   0714 1C                 2808 	.db #0x1C
   0715 1C                 2809 	.db #0x1C
   0716 1C                 2810 	.db #0x1C
   0717 1C                 2811 	.db #0x1C
   0718 1C                 2812 	.db #0x1C
   0719 1C                 2813 	.db #0x1C
   071A 1C                 2814 	.db #0x1C
   071B 1C                 2815 	.db #0x1C
   071C 17                 2816 	.db #0x17
   071D 07                 2817 	.db #0x07
   071E 0D                 2818 	.db #0x0D
   071F 17                 2819 	.db #0x17
   0720 09                 2820 	.db #0x09
   0721 1E                 2821 	.db #0x1E
   0722 1F                 2822 	.db #0x1F
   0723 1D                 2823 	.db #0x1D
   0724 1D                 2824 	.db #0x1D
   0725 1D                 2825 	.db #0x1D
   0726 1C                 2826 	.db #0x1C
   0727 1D                 2827 	.db #0x1D
   0728 1C                 2828 	.db #0x1C
   0729 1C                 2829 	.db #0x1C
   072A 1C                 2830 	.db #0x1C
   072B 1C                 2831 	.db #0x1C
   072C                    2832 _tri_inva4:
   072C 1E                 2833 	.db #0x1E
   072D 00                 2834 	.db #0x00
   072E 05                 2835 	.db #0x05
   072F 0A                 2836 	.db #0x0A
   0730 1E                 2837 	.db #0x1E
   0731 00                 2838 	.db #0x00
   0732 06                 2839 	.db #0x06
   0733 16                 2840 	.db #0x16
   0734 0F                 2841 	.db #0x0F
   0735 01                 2842 	.db #0x01
   0736 1F                 2843 	.db #0x1F
   0737 11                 2844 	.db #0x11
   0738 0C                 2845 	.db #0x0C
   0739 01                 2846 	.db #0x01
   073A 1F                 2847 	.db #0x1F
   073B 1F                 2848 	.db #0x1F
   073C 12                 2849 	.db #0x12
   073D 0F                 2850 	.db #0x0F
   073E 02                 2851 	.db #0x02
   073F 1E                 2852 	.db #0x1E
   0740 12                 2853 	.db #0x12
   0741 0F                 2854 	.db #0x0F
   0742 05                 2855 	.db #0x05
   0743 15                 2856 	.db #0x15
   0744 0C                 2857 	.db #0x0C
   0745 06                 2858 	.db #0x06
   0746 09                 2859 	.db #0x09
   0747 1F                 2860 	.db #0x1F
   0748 03                 2861 	.db #0x03
   0749 06                 2862 	.db #0x06
   074A 09                 2863 	.db #0x09
   074B 1F                 2864 	.db #0x1F
   074C 15                 2865 	.db #0x15
   074D 10                 2866 	.db #0x10
   074E 1E                 2867 	.db #0x1E
   074F 08                 2868 	.db #0x08
   0750 15                 2869 	.db #0x15
   0751 10                 2870 	.db #0x10
   0752 1E                 2871 	.db #0x1E
   0753 1F                 2872 	.db #0x1F
   0754 1F                 2873 	.db #0x1F
   0755 0B                 2874 	.db #0x0B
   0756 16                 2875 	.db #0x16
   0757 13                 2876 	.db #0x13
   0758 1F                 2877 	.db #0x1F
   0759 0B                 2878 	.db #0x0B
   075A 16                 2879 	.db #0x16
   075B 13                 2880 	.db #0x13
   075C 05                 2881 	.db #0x05
   075D 1E                 2882 	.db #0x1E
   075E 00                 2883 	.db #0x00
   075F 05                 2884 	.db #0x05
   0760 0A                 2885 	.db #0x0A
   0761 1E                 2886 	.db #0x1E
   0762 08                 2887 	.db #0x08
   0763 15                 2888 	.db #0x15
   0764 13                 2889 	.db #0x13
   0765 1F                 2890 	.db #0x1F
   0766 11                 2891 	.db #0x11
   0767 0D                 2892 	.db #0x0D
   0768 01                 2893 	.db #0x01
   0769 1F                 2894 	.db #0x1F
   076A 0C                 2895 	.db #0x0C
   076B 0D                 2896 	.db #0x0D
   076C 02                 2897 	.db #0x02
   076D 1E                 2898 	.db #0x1E
   076E 0E                 2899 	.db #0x0E
   076F 0F                 2900 	.db #0x0F
   0770 1E                 2901 	.db #0x1E
   0771 00                 2902 	.db #0x00
   0772 05                 2903 	.db #0x05
   0773 15                 2904 	.db #0x15
   0774 0C                 2905 	.db #0x0C
   0775 01                 2906 	.db #0x01
   0776 1F                 2907 	.db #0x1F
   0777 07                 2908 	.db #0x07
   0778 07                 2909 	.db #0x07
   0779 1F                 2910 	.db #0x1F
   077A 06                 2911 	.db #0x06
   077B 07                 2912 	.db #0x07
   077C 1E                 2913 	.db #0x1E
   077D 1E                 2914 	.db #0x1E
   077E 15                 2915 	.db #0x15
   077F 15                 2916 	.db #0x15
   0780 1E                 2917 	.db #0x1E
   0781 0F                 2918 	.db #0x0F
   0782 02                 2919 	.db #0x02
   0783 1E                 2920 	.db #0x1E
   0784 07                 2921 	.db #0x07
   0785 06                 2922 	.db #0x06
   0786 1F                 2923 	.db #0x1F
   0787 17                 2924 	.db #0x17
   0788 17                 2925 	.db #0x17
   0789 1E                 2926 	.db #0x1E
   078A 17                 2927 	.db #0x17
   078B 16                 2928 	.db #0x16
   078C 1F                 2929 	.db #0x1F
   078D 1F                 2930 	.db #0x1F
   078E 04                 2931 	.db #0x04
   078F 05                 2932 	.db #0x05
   0790 1F                 2933 	.db #0x1F
   0791 14                 2934 	.db #0x14
   0792 09                 2935 	.db #0x09
   0793 11                 2936 	.db #0x11
   0794 17                 2937 	.db #0x17
   0795 0A                 2938 	.db #0x0A
   0796 1E                 2939 	.db #0x1E
   0797 0D                 2940 	.db #0x0D
   0798 0D                 2941 	.db #0x0D
   0799 1E                 2942 	.db #0x1E
   079A 0D                 2943 	.db #0x0D
   079B 0C                 2944 	.db #0x0C
   079C 09                 2945 	.db #0x09
   079D 1F                 2946 	.db #0x1F
   079E 0E                 2947 	.db #0x0E
   079F 0F                 2948 	.db #0x0F
   07A0 1F                 2949 	.db #0x1F
   07A1 04                 2950 	.db #0x04
   07A2 04                 2951 	.db #0x04
   07A3 1F                 2952 	.db #0x1F
   07A4 1F                 2953 	.db #0x1F
   07A5 1E                 2954 	.db #0x1E
   07A6 08                 2955 	.db #0x08
   07A7 06                 2956 	.db #0x06
   07A8 07                 2957 	.db #0x07
   07A9 1E                 2958 	.db #0x1E
   07AA 07                 2959 	.db #0x07
   07AB 06                 2960 	.db #0x06
   07AC 04                 2961 	.db #0x04
   07AD 1F                 2962 	.db #0x1F
   07AE 11                 2963 	.db #0x11
   07AF 14                 2964 	.db #0x14
   07B0 1F                 2965 	.db #0x1F
   07B1 03                 2966 	.db #0x03
   07B2 0E                 2967 	.db #0x0E
   07B3 14                 2968 	.db #0x14
   07B4 07                 2969 	.db #0x07
   07B5 0D                 2970 	.db #0x0D
   07B6 17                 2971 	.db #0x17
   07B7 0A                 2972 	.db #0x0A
   07B8 1E                 2973 	.db #0x1E
   07B9 12                 2974 	.db #0x12
   07BA 17                 2975 	.db #0x17
   07BB 0A                 2976 	.db #0x0A
   07BC 0E                 2977 	.db #0x0E
   07BD 1F                 2978 	.db #0x1F
   07BE 1F                 2979 	.db #0x1F
   07BF 04                 2980 	.db #0x04
   07C0 01                 2981 	.db #0x01
   07C1 1F                 2982 	.db #0x1F
   07C2 11                 2983 	.db #0x11
   07C3 17                 2984 	.db #0x17
   07C4 07                 2985 	.db #0x07
   07C5 0D                 2986 	.db #0x0D
   07C6 10                 2987 	.db #0x10
   07C7 1E                 2988 	.db #0x1E
   07C8 00                 2989 	.db #0x00
   07C9 0D                 2990 	.db #0x0D
   07CA 10                 2991 	.db #0x10
   07CB 1E                 2992 	.db #0x1E
   07CC 14                 2993 	.db #0x14
   07CD 09                 2994 	.db #0x09
   07CE 1F                 2995 	.db #0x1F
   07CF 03                 2996 	.db #0x03
   07D0 0E                 2997 	.db #0x0E
   07D1 13                 2998 	.db #0x13
   07D2 1F                 2999 	.db #0x1F
   07D3 1F                 3000 	.db #0x1F
   07D4 1F                 3001 	.db #0x1F
   07D5 1E                 3002 	.db #0x1E
   07D6 1E                 3003 	.db #0x1E
   07D7 08                 3004 	.db #0x08
   07D8 07                 3005 	.db #0x07
   07D9 02                 3006 	.db #0x02
   07DA 1E                 3007 	.db #0x1E
   07DB 1E                 3008 	.db #0x1E
   07DC 0B                 3009 	.db #0x0B
   07DD 04                 3010 	.db #0x04
   07DE 01                 3011 	.db #0x01
   07DF 1F                 3012 	.db #0x1F
   07E0 11                 3013 	.db #0x11
   07E1 14                 3014 	.db #0x14
   07E2 04                 3015 	.db #0x04
   07E3 0E                 3016 	.db #0x0E
   07E4 17                 3017 	.db #0x17
   07E5 07                 3018 	.db #0x07
   07E6 0D                 3019 	.db #0x0D
   07E7 17                 3020 	.db #0x17
   07E8 0A                 3021 	.db #0x0A
   07E9 1E                 3022 	.db #0x1E
   07EA 1E                 3023 	.db #0x1E
   07EB 1E                 3024 	.db #0x1E
                           3025 ;demo.c:243: void my_isr(void) interrupt
                           3026 ;	---------------------------------
                           3027 ; Function my_isr
                           3028 ; ---------------------------------
   07EC                    3029 _my_isr_start::
   07EC                    3030 _my_isr:
   07EC F5                 3031 	push	af
   07ED C5                 3032 	push	bc
   07EE D5                 3033 	push	de
   07EF E5                 3034 	push	hl
   07F0 FD E5              3035 	push	iy
                           3036 ;demo.c:245: DI;
   07F2 F3                 3037 		di 
                           3038 ;demo.c:247: READ_VDP_STATUS;
   07F3 DB 99              3039 		in a,(#0x99) 
                           3040 ;demo.c:249: PLY_Play();
   07F5 CDr00s00           3041 	call	_PLY_Play
                           3042 ;demo.c:250: PLY_SendRegisters();
   07F8 CDr00s00           3043 	call	_PLY_SendRegisters
                           3044 ;demo.c:252: vbicount+=1;
   07FB FD 21r26s41        3045 	ld	iy,#_vbicount
   07FF FD 34 00           3046 	inc	0 (iy)
   0802 20 07              3047 	jr	NZ,00103$
   0804 FD 21r26s41        3048 	ld	iy,#_vbicount
   0808 FD 34 01           3049 	inc	1 (iy)
   080B                    3050 00103$:
                           3051 ;demo.c:253: tick++;
   080B FD 21r28s41        3052 	ld	iy,#_tick
   080F FD 34 00           3053 	inc	0 (iy)
   0812 20 07              3054 	jr	NZ,00104$
   0814 FD 21r28s41        3055 	ld	iy,#_tick
   0818 FD 34 01           3056 	inc	1 (iy)
   081B                    3057 00104$:
                           3058 ;demo.c:255: EI;
   081B FB                 3059 		ei 
   081C FD E1              3060 	pop	iy
   081E E1                 3061 	pop	hl
   081F D1                 3062 	pop	de
   0820 C1                 3063 	pop	bc
   0821 F1                 3064 	pop	af
   0822 ED 4D              3065 	reti
   0824                    3066 _my_isr_end::
                           3067 ;demo.c:263: void scratch_clear() {
                           3068 ;	---------------------------------
                           3069 ; Function scratch_clear
                           3070 ; ---------------------------------
   0824                    3071 _scratch_clear_start::
   0824                    3072 _scratch_clear:
                           3073 ;demo.c:264: memset((uint8_t *) &scratch, 0, 128);
   0824 21 80 00           3074 	ld	hl,#0x0080
   0827 E5                 3075 	push	hl
   0828 3E 00              3076 	ld	a,#0x00
   082A F5                 3077 	push	af
   082B 33                 3078 	inc	sp
   082C 21rC6s3F           3079 	ld	hl,#_scratch
   082F E5                 3080 	push	hl
   0830 CDr00s00           3081 	call	_memset
   0833 F1                 3082 	pop	af
   0834 F1                 3083 	pop	af
   0835 33                 3084 	inc	sp
   0836 C9                 3085 	ret
   0837                    3086 _scratch_clear_end::
                           3087 ;demo.c:267: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3088 ;	---------------------------------
                           3089 ; Function pal_load
                           3090 ; ---------------------------------
   0837                    3091 _pal_load_start::
   0837                    3092 _pal_load:
   0837 DD E5              3093 	push	ix
   0839 DD 21 00 00        3094 	ld	ix,#0
   083D DD 39              3095 	add	ix,sp
   083F 21 D2 FF           3096 	ld	hl,#-46
   0842 39                 3097 	add	hl,sp
   0843 F9                 3098 	ld	sp,hl
                           3099 ;demo.c:270: if(debugprint == 1) {
   0844 DD 7E 07           3100 	ld	a,7 (ix)
   0847 D6 01              3101 	sub	a,#0x01
   0849 20 06              3102 	jr	NZ,00115$
   084B DD 7E 08           3103 	ld	a,8 (ix)
   084E B7                 3104 	or	a,a
   084F 28 02              3105 	jr	Z,00116$
   0851                    3106 00115$:
   0851 18 1B              3107 	jr	00102$
   0853                    3108 00116$:
                           3109 ;demo.c:271: puts("loading palfile: ");
   0853 21r01s09           3110 	ld	hl,#__str_0
   0856 E5                 3111 	push	hl
   0857 CDr00s00           3112 	call	_puts
   085A F1                 3113 	pop	af
                           3114 ;demo.c:272: puts(file_name);
   085B DD 6E 04           3115 	ld	l,4 (ix)
   085E DD 66 05           3116 	ld	h,5 (ix)
   0861 E5                 3117 	push	hl
   0862 CDr00s00           3118 	call	_puts
   0865 F1                 3119 	pop	af
                           3120 ;demo.c:273: puts("\r\n");
   0866 21r13s09           3121 	ld	hl,#__str_1
   0869 E5                 3122 	push	hl
   086A CDr00s00           3123 	call	_puts
   086D F1                 3124 	pop	af
   086E                    3125 00102$:
                           3126 ;demo.c:276: memset((uint8_t *) &f, 0, sizeof(fcb));
   086E 21 00 00           3127 	ld	hl,#0x0000
   0871 39                 3128 	add	hl,sp
   0872 4D                 3129 	ld	c,l
   0873 44                 3130 	ld	b,h
   0874 21 2E 00           3131 	ld	hl,#0x002E
   0877 E5                 3132 	push	hl
   0878 3E 00              3133 	ld	a,#0x00
   087A F5                 3134 	push	af
   087B 33                 3135 	inc	sp
   087C C5                 3136 	push	bc
   087D CDr00s00           3137 	call	_memset
   0880 F1                 3138 	pop	af
   0881 F1                 3139 	pop	af
   0882 33                 3140 	inc	sp
                           3141 ;demo.c:277: scratch_clear();
   0883 CDr24s08           3142 	call	_scratch_clear
                           3143 ;demo.c:279: f.record_size = ss;
   0886 21 00 00           3144 	ld	hl,#0x0000
   0889 39                 3145 	add	hl,sp
   088A 4D                 3146 	ld	c,l
   088B 44                 3147 	ld	b,h
   088C 21 0F 00           3148 	ld	hl,#0x000F
   088F 09                 3149 	add	hl,bc
   0890 EB                 3150 	ex	de,hl
   0891 DD 7E 06           3151 	ld	a,6 (ix)
   0894 12                 3152 	ld	(de),a
                           3153 ;demo.c:280: f.drive = 0;
   0895 3E 00              3154 	ld	a,#0x00
   0897 02                 3155 	ld	(bc),a
                           3156 ;demo.c:282: memcpy(f.name, file_name, 11);
   0898 DD 5E 04           3157 	ld	e,4 (ix)
   089B DD 56 05           3158 	ld	d,5 (ix)
   089E 03                 3159 	inc	bc
   089F 21 0B 00           3160 	ld	hl,#0x000B
   08A2 E5                 3161 	push	hl
   08A3 D5                 3162 	push	de
   08A4 C5                 3163 	push	bc
   08A5 CDr00s00           3164 	call	_memcpy
   08A8 F1                 3165 	pop	af
   08A9 F1                 3166 	pop	af
   08AA F1                 3167 	pop	af
                           3168 ;demo.c:284: if (open(&f) != 0) return 0;
   08AB 21 00 00           3169 	ld	hl,#0x0000
   08AE 39                 3170 	add	hl,sp
   08AF E5                 3171 	push	hl
   08B0 CDr00s00           3172 	call	_open
   08B3 F1                 3173 	pop	af
   08B4 AF                 3174 	xor	a,a
   08B5 B5                 3175 	or	a,l
   08B6 28 04              3176 	jr	Z,00104$
   08B8 2E 00              3177 	ld	l,#0x00
   08BA 18 40              3178 	jr	00109$
   08BC                    3179 00104$:
                           3180 ;demo.c:285: if (block_set_data_ptr(scratch) != 0) return 0;
   08BC 21rC6s3F           3181 	ld	hl,#_scratch
   08BF E5                 3182 	push	hl
   08C0 CDr00s00           3183 	call	_block_set_data_ptr
   08C3 F1                 3184 	pop	af
   08C4 AF                 3185 	xor	a,a
   08C5 B5                 3186 	or	a,l
   08C6 28 04              3187 	jr	Z,00106$
   08C8 2E 00              3188 	ld	l,#0x00
   08CA 18 30              3189 	jr	00109$
   08CC                    3190 00106$:
                           3191 ;demo.c:286: if (block_read(&f) != 0) return 0;
   08CC 21 00 00           3192 	ld	hl,#0x0000
   08CF 39                 3193 	add	hl,sp
   08D0 E5                 3194 	push	hl
   08D1 CDr00s00           3195 	call	_block_read
   08D4 F1                 3196 	pop	af
   08D5 AF                 3197 	xor	a,a
   08D6 B5                 3198 	or	a,l
   08D7 28 04              3199 	jr	Z,00108$
   08D9 2E 00              3200 	ld	l,#0x00
   08DB 18 1F              3201 	jr	00109$
   08DD                    3202 00108$:
                           3203 ;demo.c:288: memcpy(cur_palette, scratch+7, ss);
   08DD DD 4E 06           3204 	ld	c,6 (ix)
   08E0 06 00              3205 	ld	b,#0x00
   08E2 11rCDs3F           3206 	ld	de,#_scratch + 7
   08E5 C5                 3207 	push	bc
   08E6 D5                 3208 	push	de
   08E7 21r46s40           3209 	ld	hl,#_cur_palette
   08EA E5                 3210 	push	hl
   08EB CDr00s00           3211 	call	_memcpy
   08EE F1                 3212 	pop	af
   08EF F1                 3213 	pop	af
   08F0 F1                 3214 	pop	af
                           3215 ;demo.c:290: close(&f);
   08F1 21 00 00           3216 	ld	hl,#0x0000
   08F4 39                 3217 	add	hl,sp
   08F5 E5                 3218 	push	hl
   08F6 CDr00s00           3219 	call	_close
   08F9 F1                 3220 	pop	af
                           3221 ;demo.c:291: return 1;
   08FA 2E 01              3222 	ld	l,#0x01
   08FC                    3223 00109$:
   08FC DD F9              3224 	ld	sp,ix
   08FE DD E1              3225 	pop	ix
   0900 C9                 3226 	ret
   0901                    3227 _pal_load_end::
   0901                    3228 __str_0:
   0901 6C 6F 61 64 69 6E  3229 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0912 00                 3230 	.db 0x00
   0913                    3231 __str_1:
   0913 0D                 3232 	.db 0x0D
   0914 0A                 3233 	.db 0x0A
   0915 00                 3234 	.db 0x00
                           3235 ;demo.c:295: void pause() {
                           3236 ;	---------------------------------
                           3237 ; Function pause
                           3238 ; ---------------------------------
   0916                    3239 _pause_start::
   0916                    3240 _pause:
                           3241 ;demo.c:296: uint8_t i,j,k = 0;
                           3242 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0916 01 00 00           3243 	ld	bc,#0x0000
   0919                    3244 00104$:
   0919 78                 3245 	ld	a,b
   091A D6 FF              3246 	sub	a,#0xFF
   091C D0                 3247 	ret	NC
                           3248 ;demo.c:298: for (j = 0; j < 255; j++) {
   091D 59                 3249 	ld	e,c
   091E 16 FF              3250 	ld	d,#0xFF
   0920                    3251 00103$:
                           3252 ;demo.c:299: k++;
   0920 1C                 3253 	inc	e
   0921 15                 3254 	dec	d
                           3255 ;demo.c:298: for (j = 0; j < 255; j++) {
   0922 AF                 3256 	xor	a,a
   0923 B2                 3257 	or	a,d
   0924 20 FA              3258 	jr	NZ,00103$
                           3259 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0926 4B                 3260 	ld	c,e
   0927 04                 3261 	inc	b
   0928 18 EF              3262 	jr	00104$
   092A                    3263 _pause_end::
                           3264 ;demo.c:305: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3265 ;	---------------------------------
                           3266 ; Function raw_load
                           3267 ; ---------------------------------
   092A                    3268 _raw_load_start::
   092A                    3269 _raw_load:
   092A DD E5              3270 	push	ix
   092C DD 21 00 00        3271 	ld	ix,#0
   0930 DD 39              3272 	add	ix,sp
   0932 21 D2 FF           3273 	ld	hl,#-46
   0935 39                 3274 	add	hl,sp
   0936 F9                 3275 	ld	sp,hl
                           3276 ;demo.c:310: if(debugprint == 1) {
   0937 DD 7E 0A           3277 	ld	a,10 (ix)
   093A D6 01              3278 	sub	a,#0x01
   093C 20 06              3279 	jr	NZ,00120$
   093E DD 7E 0B           3280 	ld	a,11 (ix)
   0941 B7                 3281 	or	a,a
   0942 28 02              3282 	jr	Z,00121$
   0944                    3283 00120$:
   0944 18 1B              3284 	jr	00102$
   0946                    3285 00121$:
                           3286 ;demo.c:311: puts("loading rawfile: ");
   0946 21r18s0A           3287 	ld	hl,#__str_2
   0949 E5                 3288 	push	hl
   094A CDr00s00           3289 	call	_puts
   094D F1                 3290 	pop	af
                           3291 ;demo.c:312: puts(file_name);
   094E DD 6E 04           3292 	ld	l,4 (ix)
   0951 DD 66 05           3293 	ld	h,5 (ix)
   0954 E5                 3294 	push	hl
   0955 CDr00s00           3295 	call	_puts
   0958 F1                 3296 	pop	af
                           3297 ;demo.c:313: puts("\r\n");
   0959 21r2As0A           3298 	ld	hl,#__str_3
   095C E5                 3299 	push	hl
   095D CDr00s00           3300 	call	_puts
   0960 F1                 3301 	pop	af
   0961                    3302 00102$:
                           3303 ;demo.c:316: memset((uint8_t *) &f, 0, sizeof(fcb));
   0961 21 00 00           3304 	ld	hl,#0x0000
   0964 39                 3305 	add	hl,sp
   0965 4D                 3306 	ld	c,l
   0966 44                 3307 	ld	b,h
   0967 21 2E 00           3308 	ld	hl,#0x002E
   096A E5                 3309 	push	hl
   096B 3E 00              3310 	ld	a,#0x00
   096D F5                 3311 	push	af
   096E 33                 3312 	inc	sp
   096F C5                 3313 	push	bc
   0970 CDr00s00           3314 	call	_memset
   0973 F1                 3315 	pop	af
   0974 F1                 3316 	pop	af
   0975 33                 3317 	inc	sp
                           3318 ;demo.c:317: scratch_clear();
   0976 CDr24s08           3319 	call	_scratch_clear
                           3320 ;demo.c:319: f.record_size = 128;
   0979 21 00 00           3321 	ld	hl,#0x0000
   097C 39                 3322 	add	hl,sp
   097D 4D                 3323 	ld	c,l
   097E 44                 3324 	ld	b,h
   097F 21 0F 00           3325 	ld	hl,#0x000F
   0982 09                 3326 	add	hl,bc
   0983 EB                 3327 	ex	de,hl
   0984 3E 80              3328 	ld	a,#0x80
   0986 12                 3329 	ld	(de),a
                           3330 ;demo.c:320: f.drive = 0;
   0987 3E 00              3331 	ld	a,#0x00
   0989 02                 3332 	ld	(bc),a
                           3333 ;demo.c:322: memcpy(f.name, file_name, 11);
   098A DD 5E 04           3334 	ld	e,4 (ix)
   098D DD 56 05           3335 	ld	d,5 (ix)
   0990 03                 3336 	inc	bc
   0991 21 0B 00           3337 	ld	hl,#0x000B
   0994 E5                 3338 	push	hl
   0995 D5                 3339 	push	de
   0996 C5                 3340 	push	bc
   0997 CDr00s00           3341 	call	_memcpy
   099A F1                 3342 	pop	af
   099B F1                 3343 	pop	af
   099C F1                 3344 	pop	af
                           3345 ;demo.c:324: if (open(&f) != 0) return 0;
   099D 21 00 00           3346 	ld	hl,#0x0000
   09A0 39                 3347 	add	hl,sp
   09A1 E5                 3348 	push	hl
   09A2 CDr00s00           3349 	call	_open
   09A5 F1                 3350 	pop	af
   09A6 AF                 3351 	xor	a,a
   09A7 B5                 3352 	or	a,l
   09A8 28 05              3353 	jr	Z,00119$
   09AA 2E 00              3354 	ld	l,#0x00
   09AC C3r13s0A           3355 	jp	00112$
                           3356 ;demo.c:326: while(total < size) {
   09AF                    3357 00119$:
   09AF 01 00 00           3358 	ld	bc,#0x0000
   09B2                    3359 00109$:
   09B2 79                 3360 	ld	a,c
   09B3 DD 96 06           3361 	sub	a,6 (ix)
   09B6 78                 3362 	ld	a,b
   09B7 DD 9E 07           3363 	sbc	a,7 (ix)
   09BA F2r08s0A           3364 	jp	P,00111$
                           3365 ;demo.c:327: if (block_set_data_ptr(scratch) != 0) return 0;
   09BD C5                 3366 	push	bc
   09BE 21rC6s3F           3367 	ld	hl,#_scratch
   09C1 E5                 3368 	push	hl
   09C2 CDr00s00           3369 	call	_block_set_data_ptr
   09C5 F1                 3370 	pop	af
   09C6 5D                 3371 	ld	e,l
   09C7 C1                 3372 	pop	bc
   09C8 AF                 3373 	xor	a,a
   09C9 B3                 3374 	or	a,e
   09CA 28 04              3375 	jr	Z,00106$
   09CC 2E 00              3376 	ld	l,#0x00
   09CE 18 43              3377 	jr	00112$
   09D0                    3378 00106$:
                           3379 ;demo.c:328: if (block_read(&f) != 0) return 0;
   09D0 21 00 00           3380 	ld	hl,#0x0000
   09D3 39                 3381 	add	hl,sp
   09D4 C5                 3382 	push	bc
   09D5 E5                 3383 	push	hl
   09D6 CDr00s00           3384 	call	_block_read
   09D9 F1                 3385 	pop	af
   09DA 5D                 3386 	ld	e,l
   09DB C1                 3387 	pop	bc
   09DC AF                 3388 	xor	a,a
   09DD B3                 3389 	or	a,e
   09DE 28 04              3390 	jr	Z,00108$
   09E0 2E 00              3391 	ld	l,#0x00
   09E2 18 2F              3392 	jr	00112$
   09E4                    3393 00108$:
                           3394 ;demo.c:330: memcpy(buffer+total,scratch,incr);
   09E4 DD 7E 08           3395 	ld	a,8 (ix)
   09E7 81                 3396 	add	a,c
   09E8 5F                 3397 	ld	e,a
   09E9 DD 7E 09           3398 	ld	a,9 (ix)
   09EC 88                 3399 	adc	a,b
   09ED 57                 3400 	ld	d,a
   09EE C5                 3401 	push	bc
   09EF 21 80 00           3402 	ld	hl,#0x0080
   09F2 E5                 3403 	push	hl
   09F3 21rC6s3F           3404 	ld	hl,#_scratch
   09F6 E5                 3405 	push	hl
   09F7 D5                 3406 	push	de
   09F8 CDr00s00           3407 	call	_memcpy
   09FB F1                 3408 	pop	af
   09FC F1                 3409 	pop	af
   09FD F1                 3410 	pop	af
   09FE C1                 3411 	pop	bc
                           3412 ;demo.c:332: total+=incr;
   09FF 21 80 00           3413 	ld	hl,#0x0080
   0A02 09                 3414 	add	hl,bc
   0A03 4D                 3415 	ld	c,l
   0A04 44                 3416 	ld	b,h
   0A05 C3rB2s09           3417 	jp	00109$
   0A08                    3418 00111$:
                           3419 ;demo.c:335: close(&f);
   0A08 21 00 00           3420 	ld	hl,#0x0000
   0A0B 39                 3421 	add	hl,sp
   0A0C E5                 3422 	push	hl
   0A0D CDr00s00           3423 	call	_close
   0A10 F1                 3424 	pop	af
                           3425 ;demo.c:337: return 1;
   0A11 2E 01              3426 	ld	l,#0x01
   0A13                    3427 00112$:
   0A13 DD F9              3428 	ld	sp,ix
   0A15 DD E1              3429 	pop	ix
   0A17 C9                 3430 	ret
   0A18                    3431 _raw_load_end::
   0A18                    3432 __str_2:
   0A18 6C 6F 61 64 69 6E  3433 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0A29 00                 3434 	.db 0x00
   0A2A                    3435 __str_3:
   0A2A 0D                 3436 	.db 0x0D
   0A2B 0A                 3437 	.db 0x0A
   0A2C 00                 3438 	.db 0x00
                           3439 ;demo.c:340: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3440 ;	---------------------------------
                           3441 ; Function pck_load
                           3442 ; ---------------------------------
   0A2D                    3443 _pck_load_start::
   0A2D                    3444 _pck_load:
   0A2D DD E5              3445 	push	ix
   0A2F DD 21 00 00        3446 	ld	ix,#0
   0A33 DD 39              3447 	add	ix,sp
                           3448 ;demo.c:341: if(debugprint == 1) {
   0A35 DD 7E 0C           3449 	ld	a,12 (ix)
   0A38 D6 01              3450 	sub	a,#0x01
   0A3A 20 06              3451 	jr	NZ,00106$
   0A3C DD 7E 0D           3452 	ld	a,13 (ix)
   0A3F B7                 3453 	or	a,a
   0A40 28 02              3454 	jr	Z,00107$
   0A42                    3455 00106$:
   0A42 18 1B              3456 	jr	00102$
   0A44                    3457 00107$:
                           3458 ;demo.c:342: puts("loading pckfile: ");
   0A44 21rA6s0A           3459 	ld	hl,#__str_4
   0A47 E5                 3460 	push	hl
   0A48 CDr00s00           3461 	call	_puts
   0A4B F1                 3462 	pop	af
                           3463 ;demo.c:343: puts(file_name);
   0A4C DD 6E 04           3464 	ld	l,4 (ix)
   0A4F DD 66 05           3465 	ld	h,5 (ix)
   0A52 E5                 3466 	push	hl
   0A53 CDr00s00           3467 	call	_puts
   0A56 F1                 3468 	pop	af
                           3469 ;demo.c:344: puts("\r\n");
   0A57 21rB8s0A           3470 	ld	hl,#__str_5
   0A5A E5                 3471 	push	hl
   0A5B CDr00s00           3472 	call	_puts
   0A5E F1                 3473 	pop	af
   0A5F                    3474 00102$:
                           3475 ;demo.c:346: memset((uint8_t *) &packbuffer, 0, size);
   0A5F DD 4E 06           3476 	ld	c,6 (ix)
   0A62 DD 46 07           3477 	ld	b,7 (ix)
   0A65 C5                 3478 	push	bc
   0A66 C5                 3479 	push	bc
   0A67 3E 00              3480 	ld	a,#0x00
   0A69 F5                 3481 	push	af
   0A6A 33                 3482 	inc	sp
   0A6B 21rC8s01           3483 	ld	hl,#_packbuffer
   0A6E E5                 3484 	push	hl
   0A6F CDr00s00           3485 	call	_memset
   0A72 F1                 3486 	pop	af
   0A73 F1                 3487 	pop	af
   0A74 33                 3488 	inc	sp
   0A75 C1                 3489 	pop	bc
                           3490 ;demo.c:347: raw_load(file_name, size, packbuffer,0);
   0A76 21 00 00           3491 	ld	hl,#0x0000
   0A79 E5                 3492 	push	hl
   0A7A 21rC8s01           3493 	ld	hl,#_packbuffer
   0A7D E5                 3494 	push	hl
   0A7E C5                 3495 	push	bc
   0A7F DD 6E 04           3496 	ld	l,4 (ix)
   0A82 DD 66 05           3497 	ld	h,5 (ix)
   0A85 E5                 3498 	push	hl
   0A86 CDr2As09           3499 	call	_raw_load
   0A89 F1                 3500 	pop	af
   0A8A F1                 3501 	pop	af
   0A8B F1                 3502 	pop	af
   0A8C F1                 3503 	pop	af
                           3504 ;demo.c:348: bitbuster(packbuffer,address,vram_offset);
   0A8D DD 7E 0A           3505 	ld	a,10 (ix)
   0A90 F5                 3506 	push	af
   0A91 33                 3507 	inc	sp
   0A92 DD 6E 08           3508 	ld	l,8 (ix)
   0A95 DD 66 09           3509 	ld	h,9 (ix)
   0A98 E5                 3510 	push	hl
   0A99 21rC8s01           3511 	ld	hl,#_packbuffer
   0A9C E5                 3512 	push	hl
   0A9D CDr00s00           3513 	call	_bitbuster
   0AA0 F1                 3514 	pop	af
   0AA1 F1                 3515 	pop	af
   0AA2 33                 3516 	inc	sp
   0AA3 DD E1              3517 	pop	ix
   0AA5 C9                 3518 	ret
   0AA6                    3519 _pck_load_end::
   0AA6                    3520 __str_4:
   0AA6 6C 6F 61 64 69 6E  3521 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0AB7 00                 3522 	.db 0x00
   0AB8                    3523 __str_5:
   0AB8 0D                 3524 	.db 0x0D
   0AB9 0A                 3525 	.db 0x0A
   0ABA 00                 3526 	.db 0x00
                           3527 ;demo.c:351: void fadein() {
                           3528 ;	---------------------------------
                           3529 ; Function fadein
                           3530 ; ---------------------------------
   0ABB                    3531 _fadein_start::
   0ABB                    3532 _fadein:
   0ABB DD E5              3533 	push	ix
   0ABD DD 21 00 00        3534 	ld	ix,#0
   0AC1 DD 39              3535 	add	ix,sp
   0AC3 F5                 3536 	push	af
                           3537 ;demo.c:354: if (tick < 8) return;
   0AC4 3Ar28s41           3538 	ld	a,(#_tick+0)
   0AC7 D6 08              3539 	sub	a,#0x08
   0AC9 3Ar29s41           3540 	ld	a,(#_tick+1)
   0ACC DE 00              3541 	sbc	a,#0x00
   0ACE F2rD4s0A           3542 	jp	P,00102$
   0AD1 C3r82s0B           3543 	jp	00113$
   0AD4                    3544 00102$:
                           3545 ;demo.c:356: tick = 0;
   0AD4 21r28s41           3546 	ld	hl,#_tick + 0
   0AD7 36 00              3547 	ld	(hl), #0x00
   0AD9 21r29s41           3548 	ld	hl,#_tick + 1
   0ADC 36 00              3549 	ld	(hl), #0x00
                           3550 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0ADE 0E 00              3551 	ld	c,#0x00
   0AE0                    3552 00109$:
   0AE0 79                 3553 	ld	a,c
   0AE1 D6 20              3554 	sub	a,#0x20
   0AE3 D2r7As0B           3555 	jp	NC,00112$
                           3556 ;demo.c:359: uint8_t r = scratch[i] >> 4;
   0AE6 3ErC6              3557 	ld	a,#<_scratch
   0AE8 81                 3558 	add	a,c
   0AE9 5F                 3559 	ld	e,a
   0AEA 3Es3F              3560 	ld	a,#>_scratch
   0AEC CE 00              3561 	adc	a,#0x00
   0AEE 57                 3562 	ld	d,a
   0AEF 1A                 3563 	ld	a,(de)
   0AF0 47                 3564 	ld	b,a
   0AF1 58                 3565 	ld	e,b
   0AF2 CB 3B              3566 	srl	e
   0AF4 CB 3B              3567 	srl	e
   0AF6 CB 3B              3568 	srl	e
   0AF8 CB 3B              3569 	srl	e
                           3570 ;demo.c:360: uint8_t b = scratch[i] & 0xf;
   0AFA 78                 3571 	ld	a,b
   0AFB E6 0F              3572 	and	a,#0x0F
   0AFD DD 77 FF           3573 	ld	-1 (ix),a
                           3574 ;demo.c:361: uint8_t g = scratch[i+1];
   0B00 51                 3575 	ld	d,c
   0B01 14                 3576 	inc	d
   0B02 3ErC6              3577 	ld	a,#<_scratch
   0B04 82                 3578 	add	a,d
   0B05 6F                 3579 	ld	l,a
   0B06 3Es3F              3580 	ld	a,#>_scratch
   0B08 CE 00              3581 	adc	a,#0x00
   0B0A 67                 3582 	ld	h,a
   0B0B 56                 3583 	ld	d,(hl)
   0B0C DD 72 FE           3584 	ld	-2 (ix),d
                           3585 ;demo.c:363: if (r < (cur_palette[i] >> 4)) r++;
   0B0F 3Er46              3586 	ld	a,#<_cur_palette
   0B11 81                 3587 	add	a,c
   0B12 6F                 3588 	ld	l,a
   0B13 3Es40              3589 	ld	a,#>_cur_palette
   0B15 CE 00              3590 	adc	a,#0x00
   0B17 67                 3591 	ld	h,a
   0B18 56                 3592 	ld	d,(hl)
   0B19 CB 3A              3593 	srl	d
   0B1B CB 3A              3594 	srl	d
   0B1D CB 3A              3595 	srl	d
   0B1F CB 3A              3596 	srl	d
   0B21 7B                 3597 	ld	a,e
   0B22 92                 3598 	sub	a,d
   0B23 30 01              3599 	jr	NC,00104$
   0B25 1C                 3600 	inc	e
   0B26                    3601 00104$:
                           3602 ;demo.c:364: if (b < (cur_palette[i] & 0xf)) b++;
   0B26 3Er46              3603 	ld	a,#<_cur_palette
   0B28 81                 3604 	add	a,c
   0B29 6F                 3605 	ld	l,a
   0B2A 3Es40              3606 	ld	a,#>_cur_palette
   0B2C CE 00              3607 	adc	a,#0x00
   0B2E 67                 3608 	ld	h,a
   0B2F 7E                 3609 	ld	a,(hl)
   0B30 E6 0F              3610 	and	a,#0x0F
   0B32 47                 3611 	ld	b,a
   0B33 DD 7E FF           3612 	ld	a,-1 (ix)
   0B36 90                 3613 	sub	a,b
   0B37 30 03              3614 	jr	NC,00106$
   0B39 DD 34 FF           3615 	inc	-1 (ix)
   0B3C                    3616 00106$:
                           3617 ;demo.c:366: scratch[i] = (r << 4) | b;
   0B3C 3ErC6              3618 	ld	a,#<_scratch
   0B3E 81                 3619 	add	a,c
   0B3F 47                 3620 	ld	b,a
   0B40 3Es3F              3621 	ld	a,#>_scratch
   0B42 CE 00              3622 	adc	a,#0x00
   0B44 57                 3623 	ld	d,a
   0B45 7B                 3624 	ld	a,e
   0B46 07                 3625 	rlca
   0B47 07                 3626 	rlca
   0B48 07                 3627 	rlca
   0B49 07                 3628 	rlca
   0B4A E6 F0              3629 	and	a,#0xF0
   0B4C DD B6 FF           3630 	or	a,-1 (ix)
   0B4F 68                 3631 	ld	l,b
   0B50 62                 3632 	ld	h,d
   0B51 77                 3633 	ld	(hl),a
                           3634 ;demo.c:367: if (g < cur_palette[i+1]) scratch[i+1]++;
   0B52 41                 3635 	ld	b,c
   0B53 04                 3636 	inc	b
   0B54 3Er46              3637 	ld	a,#<_cur_palette
   0B56 80                 3638 	add	a,b
   0B57 5F                 3639 	ld	e,a
   0B58 3Es40              3640 	ld	a,#>_cur_palette
   0B5A CE 00              3641 	adc	a,#0x00
   0B5C 57                 3642 	ld	d,a
   0B5D 1A                 3643 	ld	a,(de)
   0B5E 5F                 3644 	ld	e,a
   0B5F DD 7E FE           3645 	ld	a,-2 (ix)
   0B62 93                 3646 	sub	a,e
   0B63 30 10              3647 	jr	NC,00111$
   0B65 3ErC6              3648 	ld	a,#<_scratch
   0B67 80                 3649 	add	a,b
   0B68 47                 3650 	ld	b,a
   0B69 3Es3F              3651 	ld	a,#>_scratch
   0B6B CE 00              3652 	adc	a,#0x00
   0B6D 5F                 3653 	ld	e,a
   0B6E 68                 3654 	ld	l,b
   0B6F 67                 3655 	ld	h,a
   0B70 7E                 3656 	ld	a,(hl)
   0B71 3C                 3657 	inc	a
   0B72 68                 3658 	ld	l,b
   0B73 63                 3659 	ld	h,e
   0B74 77                 3660 	ld	(hl),a
   0B75                    3661 00111$:
                           3662 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0B75 0C                 3663 	inc	c
   0B76 0C                 3664 	inc	c
   0B77 C3rE0s0A           3665 	jp	00109$
   0B7A                    3666 00112$:
                           3667 ;demo.c:371: vdp_load_palette(scratch);
   0B7A 21rC6s3F           3668 	ld	hl,#_scratch
   0B7D E5                 3669 	push	hl
   0B7E CDr00s00           3670 	call	_vdp_load_palette
   0B81 F1                 3671 	pop	af
   0B82                    3672 00113$:
   0B82 DD F9              3673 	ld	sp,ix
   0B84 DD E1              3674 	pop	ix
   0B86 C9                 3675 	ret
   0B87                    3676 _fadein_end::
                           3677 ;demo.c:383: void do_ymmm() {
                           3678 ;	---------------------------------
                           3679 ; Function do_ymmm
                           3680 ; ---------------------------------
   0B87                    3681 _do_ymmm_start::
   0B87                    3682 _do_ymmm:
                           3683 ;demo.c:384: }
   0B87 C9                 3684 	ret
   0B88                    3685 _do_ymmm_end::
                           3686 ;demo.c:397: void do_blocks() {
                           3687 ;	---------------------------------
                           3688 ; Function do_blocks
                           3689 ; ---------------------------------
   0B88                    3690 _do_blocks_start::
   0B88                    3691 _do_blocks:
                           3692 ;demo.c:398: }
   0B88 C9                 3693 	ret
   0B89                    3694 _do_blocks_end::
                           3695 ;demo.c:402: void raster_effu() {
                           3696 ;	---------------------------------
                           3697 ; Function raster_effu
                           3698 ; ---------------------------------
   0B89                    3699 _raster_effu_start::
   0B89                    3700 _raster_effu:
                           3701 ;demo.c:403: }
   0B89 C9                 3702 	ret
   0B8A                    3703 _raster_effu_end::
                           3704 ;demo.c:434: void do_2xletter(char cc) {
                           3705 ;	---------------------------------
                           3706 ; Function do_2xletter
                           3707 ; ---------------------------------
   0B8A                    3708 _do_2xletter_start::
   0B8A                    3709 _do_2xletter:
   0B8A DD E5              3710 	push	ix
   0B8C DD 21 00 00        3711 	ld	ix,#0
   0B90 DD 39              3712 	add	ix,sp
   0B92 21 F2 FF           3713 	ld	hl,#-14
   0B95 39                 3714 	add	hl,sp
   0B96 F9                 3715 	ld	sp,hl
                           3716 ;demo.c:435: int cidx = cc - 65;
   0B97 DD 4E 04           3717 	ld	c,4 (ix)
   0B9A DD 7E 04           3718 	ld	a,4 (ix)
   0B9D 17                 3719 	rla	
   0B9E 9F                 3720 	sbc	a,a
   0B9F 47                 3721 	ld	b,a
   0BA0 79                 3722 	ld	a,c
   0BA1 C6 BF              3723 	add	a,#0xBF
   0BA3 DD 77 FE           3724 	ld	-2 (ix),a
   0BA6 78                 3725 	ld	a,b
   0BA7 CE FF              3726 	adc	a,#0xFF
   0BA9 DD 77 FF           3727 	ld	-1 (ix),a
                           3728 ;demo.c:438: for (y=0;y<8;y++) {
   0BAC 3ErB8              3729 	ld	a,#<_font_w
   0BAE DD 86 FE           3730 	add	a,-2 (ix)
   0BB1 5F                 3731 	ld	e,a
   0BB2 3Es0E              3732 	ld	a,#>_font_w
   0BB4 DD 8E FF           3733 	adc	a,-1 (ix)
   0BB7 57                 3734 	ld	d,a
   0BB8 DD 36 FA 00        3735 	ld	-6 (ix),#0x00
   0BBC DD 36 FB 00        3736 	ld	-5 (ix),#0x00
   0BC0 DD 36 F6 00        3737 	ld	-10 (ix),#0x00
   0BC4 DD 36 F7 00        3738 	ld	-9 (ix),#0x00
   0BC8                    3739 00105$:
   0BC8 DD 7E FA           3740 	ld	a,-6 (ix)
   0BCB D6 08              3741 	sub	a,#0x08
   0BCD DD 7E FB           3742 	ld	a,-5 (ix)
   0BD0 DE 00              3743 	sbc	a,#0x00
   0BD2 F2r10s0E           3744 	jp	P,00108$
                           3745 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0BD5 DD 36 FC 00        3746 	ld	-4 (ix),#0x00
   0BD9 DD 36 FD 00        3747 	ld	-3 (ix),#0x00
   0BDD DD 36 F4 00        3748 	ld	-12 (ix),#0x00
   0BE1 DD 36 F5 00        3749 	ld	-11 (ix),#0x00
   0BE5                    3750 00101$:
   0BE5 1A                 3751 	ld	a,(de)
   0BE6 4F                 3752 	ld	c,a
   0BE7 06 00              3753 	ld	b,#0x00
   0BE9 DD 7E FC           3754 	ld	a,-4 (ix)
   0BEC 91                 3755 	sub	a,c
   0BED DD 7E FD           3756 	ld	a,-3 (ix)
   0BF0 98                 3757 	sbc	a,b
   0BF1 F2rE8s0D           3758 	jp	P,00115$
                           3759 ;demo.c:440: cmd.source_x = 127+font_x[cidx]+x;
   0BF4 3Er38              3760 	ld	a,#<_font_x
   0BF6 DD 86 FE           3761 	add	a,-2 (ix)
   0BF9 4F                 3762 	ld	c,a
   0BFA 3Es0E              3763 	ld	a,#>_font_x
   0BFC DD 8E FF           3764 	adc	a,-1 (ix)
   0BFF 47                 3765 	ld	b,a
   0C00 0A                 3766 	ld	a,(bc)
   0C01 4F                 3767 	ld	c,a
   0C02 06 00              3768 	ld	b,#0x00
   0C04 21 7F 00           3769 	ld	hl,#0x007F
   0C07 09                 3770 	add	hl,bc
   0C08 4D                 3771 	ld	c,l
   0C09 44                 3772 	ld	b,h
   0C0A 79                 3773 	ld	a,c
   0C0B DD 86 FC           3774 	add	a,-4 (ix)
   0C0E 4F                 3775 	ld	c,a
   0C0F 78                 3776 	ld	a,b
   0C10 DD 8E FD           3777 	adc	a,-3 (ix)
   0C13 47                 3778 	ld	b,a
   0C14 21r2As41           3779 	ld	hl,#_cmd
   0C17 71                 3780 	ld	(hl),c
   0C18 23                 3781 	inc	hl
   0C19 70                 3782 	ld	(hl),b
                           3783 ;demo.c:441: cmd.source_y = 512+font_y[cidx]+y;
   0C1A 23                 3784 	inc	hl
   0C1B DD 75 F2           3785 	ld	-14 (ix),l
   0C1E DD 74 F3           3786 	ld	-13 (ix),h
   0C21 3Er78              3787 	ld	a,#<_font_y
   0C23 DD 86 FE           3788 	add	a,-2 (ix)
   0C26 4F                 3789 	ld	c,a
   0C27 3Es0E              3790 	ld	a,#>_font_y
   0C29 DD 8E FF           3791 	adc	a,-1 (ix)
   0C2C 47                 3792 	ld	b,a
   0C2D 0A                 3793 	ld	a,(bc)
   0C2E 4F                 3794 	ld	c,a
   0C2F 06 00              3795 	ld	b,#0x00
   0C31 21 00 02           3796 	ld	hl,#0x0200
   0C34 09                 3797 	add	hl,bc
   0C35 4D                 3798 	ld	c,l
   0C36 44                 3799 	ld	b,h
   0C37 79                 3800 	ld	a,c
   0C38 DD 86 FA           3801 	add	a,-6 (ix)
   0C3B 4F                 3802 	ld	c,a
   0C3C 78                 3803 	ld	a,b
   0C3D DD 8E FB           3804 	adc	a,-5 (ix)
   0C40 47                 3805 	ld	b,a
   0C41 DD 6E F2           3806 	ld	l,-14 (ix)
   0C44 DD 66 F3           3807 	ld	h,-13 (ix)
   0C47 71                 3808 	ld	(hl),c
   0C48 23                 3809 	inc	hl
   0C49 70                 3810 	ld	(hl),b
                           3811 ;demo.c:442: cmd.size_x = 1;
   0C4A 21r32s41           3812 	ld	hl, #_cmd + 8
   0C4D 36 01              3813 	ld	(hl),#0x01
   0C4F 23                 3814 	inc	hl
   0C50 36 00              3815 	ld	(hl),#0x00
                           3816 ;demo.c:443: cmd.size_y = 1;
   0C52 21r34s41           3817 	ld	hl, #_cmd + 10
   0C55 36 01              3818 	ld	(hl),#0x01
   0C57 23                 3819 	inc	hl
   0C58 36 00              3820 	ld	(hl),#0x00
                           3821 ;demo.c:444: cmd.argument = 0x00;
   0C5A 3E 00              3822 	ld	a,#0x00
   0C5C 32r37s41           3823 	ld	(#_cmd + 13),a
                           3824 ;demo.c:445: cmd.command = 0x40; // get pixel
   0C5F 3E 40              3825 	ld	a,#0x40
   0C61 32r38s41           3826 	ld	(#_cmd + 14),a
                           3827 ;demo.c:446: vdp_copier(&cmd);
   0C64 D5                 3828 	push	de
   0C65 21r2As41           3829 	ld	hl,#_cmd
   0C68 E5                 3830 	push	hl
   0C69 CDr00s00           3831 	call	_vdp_copier
   0C6C F1                 3832 	pop	af
   0C6D D1                 3833 	pop	de
                           3834 ;demo.c:448: col = vdp2_status(7);
   0C6E D5                 3835 	push	de
   0C6F 3E 07              3836 	ld	a,#0x07
   0C71 F5                 3837 	push	af
   0C72 33                 3838 	inc	sp
   0C73 CDr00s00           3839 	call	_vdp2_status
   0C76 33                 3840 	inc	sp
   0C77 4D                 3841 	ld	c,l
   0C78 D1                 3842 	pop	de
   0C79 DD 71 F8           3843 	ld	-8 (ix),c
   0C7C DD 36 F9 00        3844 	ld	-7 (ix),#0x00
                           3845 ;demo.c:450: cmd.data = col;
   0C80 01r36s41           3846 	ld	bc,#_cmd + 12
   0C83 DD 7E F8           3847 	ld	a,-8 (ix)
   0C86 02                 3848 	ld	(bc),a
                           3849 ;demo.c:451: cmd.dest_x = lx+x*3;
   0C87 21r2Es41           3850 	ld	hl,#_cmd + 4
   0C8A DD 75 F2           3851 	ld	-14 (ix),l
   0C8D DD 74 F3           3852 	ld	-13 (ix),h
   0C90 21rBCs41           3853 	ld	hl,#_lx + 0
   0C93 4E                 3854 	ld	c,(hl)
   0C94 06 00              3855 	ld	b,#0x00
   0C96 79                 3856 	ld	a,c
   0C97 DD 86 F4           3857 	add	a,-12 (ix)
   0C9A 4F                 3858 	ld	c,a
   0C9B 78                 3859 	ld	a,b
   0C9C DD 8E F5           3860 	adc	a,-11 (ix)
   0C9F 47                 3861 	ld	b,a
   0CA0 DD 6E F2           3862 	ld	l,-14 (ix)
   0CA3 DD 66 F3           3863 	ld	h,-13 (ix)
   0CA6 71                 3864 	ld	(hl),c
   0CA7 23                 3865 	inc	hl
   0CA8 70                 3866 	ld	(hl),b
                           3867 ;demo.c:452: cmd.dest_y = ly+y*3;
   0CA9 21r30s41           3868 	ld	hl,#_cmd + 6
   0CAC DD 75 F2           3869 	ld	-14 (ix),l
   0CAF DD 74 F3           3870 	ld	-13 (ix),h
   0CB2 21rBDs41           3871 	ld	hl,#_ly + 0
   0CB5 4E                 3872 	ld	c,(hl)
   0CB6 06 00              3873 	ld	b,#0x00
   0CB8 79                 3874 	ld	a,c
   0CB9 DD 86 F6           3875 	add	a,-10 (ix)
   0CBC 4F                 3876 	ld	c,a
   0CBD 78                 3877 	ld	a,b
   0CBE DD 8E F7           3878 	adc	a,-9 (ix)
   0CC1 47                 3879 	ld	b,a
   0CC2 DD 6E F2           3880 	ld	l,-14 (ix)
   0CC5 DD 66 F3           3881 	ld	h,-13 (ix)
   0CC8 71                 3882 	ld	(hl),c
   0CC9 23                 3883 	inc	hl
   0CCA 70                 3884 	ld	(hl),b
                           3885 ;demo.c:455: cmd.argument = 0x00;
   0CCB 3E 00              3886 	ld	a,#0x00
   0CCD 32r37s41           3887 	ld	(#_cmd + 13),a
                           3888 ;demo.c:456: cmd.command = 0x50; // rect
   0CD0 3E 50              3889 	ld	a,#0x50
   0CD2 32r38s41           3890 	ld	(#_cmd + 14),a
                           3891 ;demo.c:457: vdp_copier(&cmd);
   0CD5 D5                 3892 	push	de
   0CD6 21r2As41           3893 	ld	hl,#_cmd
   0CD9 E5                 3894 	push	hl
   0CDA CDr00s00           3895 	call	_vdp_copier
   0CDD F1                 3896 	pop	af
   0CDE D1                 3897 	pop	de
                           3898 ;demo.c:458: cmd.dest_x = 1+lx+x*3;
   0CDF 21r2Es41           3899 	ld	hl,#_cmd + 4
   0CE2 DD 75 F2           3900 	ld	-14 (ix),l
   0CE5 DD 74 F3           3901 	ld	-13 (ix),h
   0CE8 21rBCs41           3902 	ld	hl,#_lx + 0
   0CEB 4E                 3903 	ld	c,(hl)
   0CEC 06 00              3904 	ld	b,#0x00
   0CEE 03                 3905 	inc	bc
   0CEF 79                 3906 	ld	a,c
   0CF0 DD 86 F4           3907 	add	a,-12 (ix)
   0CF3 4F                 3908 	ld	c,a
   0CF4 78                 3909 	ld	a,b
   0CF5 DD 8E F5           3910 	adc	a,-11 (ix)
   0CF8 47                 3911 	ld	b,a
   0CF9 DD 6E F2           3912 	ld	l,-14 (ix)
   0CFC DD 66 F3           3913 	ld	h,-13 (ix)
   0CFF 71                 3914 	ld	(hl),c
   0D00 23                 3915 	inc	hl
   0D01 70                 3916 	ld	(hl),b
                           3917 ;demo.c:459: cmd.dest_y = ly+y*3;
   0D02 21r30s41           3918 	ld	hl,#_cmd + 6
   0D05 DD 75 F2           3919 	ld	-14 (ix),l
   0D08 DD 74 F3           3920 	ld	-13 (ix),h
   0D0B 21rBDs41           3921 	ld	hl,#_ly + 0
   0D0E 4E                 3922 	ld	c,(hl)
   0D0F 06 00              3923 	ld	b,#0x00
   0D11 79                 3924 	ld	a,c
   0D12 DD 86 F6           3925 	add	a,-10 (ix)
   0D15 4F                 3926 	ld	c,a
   0D16 78                 3927 	ld	a,b
   0D17 DD 8E F7           3928 	adc	a,-9 (ix)
   0D1A 47                 3929 	ld	b,a
   0D1B DD 6E F2           3930 	ld	l,-14 (ix)
   0D1E DD 66 F3           3931 	ld	h,-13 (ix)
   0D21 71                 3932 	ld	(hl),c
   0D22 23                 3933 	inc	hl
   0D23 70                 3934 	ld	(hl),b
                           3935 ;demo.c:460: vdp_copier(&cmd);
   0D24 D5                 3936 	push	de
   0D25 21r2As41           3937 	ld	hl,#_cmd
   0D28 E5                 3938 	push	hl
   0D29 CDr00s00           3939 	call	_vdp_copier
   0D2C F1                 3940 	pop	af
   0D2D D1                 3941 	pop	de
                           3942 ;demo.c:461: cmd.dest_x = 1+lx+x*3;
   0D2E 21r2Es41           3943 	ld	hl,#_cmd + 4
   0D31 DD 75 F2           3944 	ld	-14 (ix),l
   0D34 DD 74 F3           3945 	ld	-13 (ix),h
   0D37 21rBCs41           3946 	ld	hl,#_lx + 0
   0D3A 4E                 3947 	ld	c,(hl)
   0D3B 06 00              3948 	ld	b,#0x00
   0D3D 03                 3949 	inc	bc
   0D3E 79                 3950 	ld	a,c
   0D3F DD 86 F4           3951 	add	a,-12 (ix)
   0D42 4F                 3952 	ld	c,a
   0D43 78                 3953 	ld	a,b
   0D44 DD 8E F5           3954 	adc	a,-11 (ix)
   0D47 47                 3955 	ld	b,a
   0D48 DD 6E F2           3956 	ld	l,-14 (ix)
   0D4B DD 66 F3           3957 	ld	h,-13 (ix)
   0D4E 71                 3958 	ld	(hl),c
   0D4F 23                 3959 	inc	hl
   0D50 70                 3960 	ld	(hl),b
                           3961 ;demo.c:462: cmd.dest_y = 1+ly+y*3;
   0D51 21r30s41           3962 	ld	hl,#_cmd + 6
   0D54 DD 75 F2           3963 	ld	-14 (ix),l
   0D57 DD 74 F3           3964 	ld	-13 (ix),h
   0D5A 21rBDs41           3965 	ld	hl,#_ly + 0
   0D5D 4E                 3966 	ld	c,(hl)
   0D5E 06 00              3967 	ld	b,#0x00
   0D60 03                 3968 	inc	bc
   0D61 79                 3969 	ld	a,c
   0D62 DD 86 F6           3970 	add	a,-10 (ix)
   0D65 4F                 3971 	ld	c,a
   0D66 78                 3972 	ld	a,b
   0D67 DD 8E F7           3973 	adc	a,-9 (ix)
   0D6A 47                 3974 	ld	b,a
   0D6B DD 6E F2           3975 	ld	l,-14 (ix)
   0D6E DD 66 F3           3976 	ld	h,-13 (ix)
   0D71 71                 3977 	ld	(hl),c
   0D72 23                 3978 	inc	hl
   0D73 70                 3979 	ld	(hl),b
                           3980 ;demo.c:463: vdp_copier(&cmd);
   0D74 D5                 3981 	push	de
   0D75 21r2As41           3982 	ld	hl,#_cmd
   0D78 E5                 3983 	push	hl
   0D79 CDr00s00           3984 	call	_vdp_copier
   0D7C F1                 3985 	pop	af
   0D7D D1                 3986 	pop	de
                           3987 ;demo.c:464: cmd.dest_x = lx+x*3;
   0D7E 21r2Es41           3988 	ld	hl,#_cmd + 4
   0D81 DD 75 F2           3989 	ld	-14 (ix),l
   0D84 DD 74 F3           3990 	ld	-13 (ix),h
   0D87 21rBCs41           3991 	ld	hl,#_lx + 0
   0D8A 4E                 3992 	ld	c,(hl)
   0D8B 06 00              3993 	ld	b,#0x00
   0D8D 79                 3994 	ld	a,c
   0D8E DD 86 F4           3995 	add	a,-12 (ix)
   0D91 4F                 3996 	ld	c,a
   0D92 78                 3997 	ld	a,b
   0D93 DD 8E F5           3998 	adc	a,-11 (ix)
   0D96 47                 3999 	ld	b,a
   0D97 DD 6E F2           4000 	ld	l,-14 (ix)
   0D9A DD 66 F3           4001 	ld	h,-13 (ix)
   0D9D 71                 4002 	ld	(hl),c
   0D9E 23                 4003 	inc	hl
   0D9F 70                 4004 	ld	(hl),b
                           4005 ;demo.c:465: cmd.dest_y = 1+ly+y*3;
   0DA0 21r30s41           4006 	ld	hl,#_cmd + 6
   0DA3 DD 75 F2           4007 	ld	-14 (ix),l
   0DA6 DD 74 F3           4008 	ld	-13 (ix),h
   0DA9 21rBDs41           4009 	ld	hl,#_ly + 0
   0DAC 4E                 4010 	ld	c,(hl)
   0DAD 06 00              4011 	ld	b,#0x00
   0DAF 03                 4012 	inc	bc
   0DB0 79                 4013 	ld	a,c
   0DB1 DD 86 F6           4014 	add	a,-10 (ix)
   0DB4 4F                 4015 	ld	c,a
   0DB5 78                 4016 	ld	a,b
   0DB6 DD 8E F7           4017 	adc	a,-9 (ix)
   0DB9 47                 4018 	ld	b,a
   0DBA DD 6E F2           4019 	ld	l,-14 (ix)
   0DBD DD 66 F3           4020 	ld	h,-13 (ix)
   0DC0 71                 4021 	ld	(hl),c
   0DC1 23                 4022 	inc	hl
   0DC2 70                 4023 	ld	(hl),b
                           4024 ;demo.c:466: vdp_copier(&cmd);
   0DC3 D5                 4025 	push	de
   0DC4 21r2As41           4026 	ld	hl,#_cmd
   0DC7 E5                 4027 	push	hl
   0DC8 CDr00s00           4028 	call	_vdp_copier
   0DCB F1                 4029 	pop	af
   0DCC D1                 4030 	pop	de
                           4031 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0DCD DD 7E F4           4032 	ld	a,-12 (ix)
   0DD0 C6 03              4033 	add	a,#0x03
   0DD2 DD 77 F4           4034 	ld	-12 (ix),a
   0DD5 DD 7E F5           4035 	ld	a,-11 (ix)
   0DD8 CE 00              4036 	adc	a,#0x00
   0DDA DD 77 F5           4037 	ld	-11 (ix),a
   0DDD DD 34 FC           4038 	inc	-4 (ix)
   0DE0 20 03              4039 	jr	NZ,00117$
   0DE2 DD 34 FD           4040 	inc	-3 (ix)
   0DE5                    4041 00117$:
   0DE5 C3rE5s0B           4042 	jp	00101$
   0DE8                    4043 00115$:
   0DE8 DD 7E FC           4044 	ld	a,-4 (ix)
   0DEB DD 77 F2           4045 	ld	-14 (ix),a
   0DEE DD 7E FD           4046 	ld	a,-3 (ix)
   0DF1 DD 77 F3           4047 	ld	-13 (ix),a
                           4048 ;demo.c:468: waitVB();
   0DF4 76                 4049 		halt 
                           4050 ;demo.c:438: for (y=0;y<8;y++) {
   0DF5 DD 7E F6           4051 	ld	a,-10 (ix)
   0DF8 C6 03              4052 	add	a,#0x03
   0DFA DD 77 F6           4053 	ld	-10 (ix),a
   0DFD DD 7E F7           4054 	ld	a,-9 (ix)
   0E00 CE 00              4055 	adc	a,#0x00
   0E02 DD 77 F7           4056 	ld	-9 (ix),a
   0E05 DD 34 FA           4057 	inc	-6 (ix)
   0E08 20 03              4058 	jr	NZ,00118$
   0E0A DD 34 FB           4059 	inc	-5 (ix)
   0E0D                    4060 00118$:
   0E0D C3rC8s0B           4061 	jp	00105$
   0E10                    4062 00108$:
                           4063 ;demo.c:471: lx+=font_w[cidx]-1+(x*4);
   0E10 3ErB8              4064 	ld	a,#<_font_w
   0E12 DD 86 FE           4065 	add	a,-2 (ix)
   0E15 4F                 4066 	ld	c,a
   0E16 3Es0E              4067 	ld	a,#>_font_w
   0E18 DD 8E FF           4068 	adc	a,-1 (ix)
   0E1B 47                 4069 	ld	b,a
   0E1C 0A                 4070 	ld	a,(bc)
   0E1D 4F                 4071 	ld	c,a
   0E1E 0D                 4072 	dec	c
   0E1F DD 46 F2           4073 	ld	b,-14 (ix)
   0E22 CB 20              4074 	sla	b
   0E24 CB 20              4075 	sla	b
   0E26 79                 4076 	ld	a,c
   0E27 80                 4077 	add	a,b
   0E28 4F                 4078 	ld	c,a
   0E29 21rBCs41           4079 	ld	hl,#_lx + 0
   0E2C 46                 4080 	ld	b,(hl)
   0E2D 21rBCs41           4081 	ld	hl,#_lx
   0E30 78                 4082 	ld	a,b
   0E31 81                 4083 	add	a,c
   0E32 77                 4084 	ld	(hl),a
   0E33 DD F9              4085 	ld	sp,ix
   0E35 DD E1              4086 	pop	ix
   0E37 C9                 4087 	ret
   0E38                    4088 _do_2xletter_end::
   0E38                    4089 _font_x:
   0E38 01                 4090 	.db #0x01
   0E39 09                 4091 	.db #0x09
   0E3A 11                 4092 	.db #0x11
   0E3B 19                 4093 	.db #0x19
   0E3C 21                 4094 	.db #0x21
   0E3D 29                 4095 	.db #0x29
   0E3E 31                 4096 	.db #0x31
   0E3F 39                 4097 	.db #0x39
   0E40 41                 4098 	.db #0x41
   0E41 46                 4099 	.db #0x46
   0E42 4E                 4100 	.db #0x4E
   0E43 56                 4101 	.db #0x56
   0E44 5E                 4102 	.db #0x5E
   0E45 01                 4103 	.db #0x01
   0E46 0A                 4104 	.db #0x0A
   0E47 12                 4105 	.db #0x12
   0E48 1A                 4106 	.db #0x1A
   0E49 23                 4107 	.db #0x23
   0E4A 2B                 4108 	.db #0x2B
   0E4B 33                 4109 	.db #0x33
   0E4C 3C                 4110 	.db #0x3C
   0E4D 44                 4111 	.db #0x44
   0E4E 4C                 4112 	.db #0x4C
   0E4F 56                 4113 	.db #0x56
   0E50 5E                 4114 	.db #0x5E
   0E51 67                 4115 	.db #0x67
   0E52 00                 4116 	.db #0x00
   0E53 00                 4117 	.db #0x00
   0E54 00                 4118 	.db #0x00
   0E55 00                 4119 	.db #0x00
   0E56 00                 4120 	.db #0x00
   0E57 00                 4121 	.db #0x00
   0E58 01                 4122 	.db #0x01
   0E59 09                 4123 	.db #0x09
   0E5A 11                 4124 	.db #0x11
   0E5B 18                 4125 	.db #0x18
   0E5C 20                 4126 	.db #0x20
   0E5D 28                 4127 	.db #0x28
   0E5E 2F                 4128 	.db #0x2F
   0E5F 37                 4129 	.db #0x37
   0E60 3F                 4130 	.db #0x3F
   0E61 45                 4131 	.db #0x45
   0E62 4C                 4132 	.db #0x4C
   0E63 54                 4133 	.db #0x54
   0E64 5A                 4134 	.db #0x5A
   0E65 64                 4135 	.db #0x64
   0E66 01                 4136 	.db #0x01
   0E67 09                 4137 	.db #0x09
   0E68 11                 4138 	.db #0x11
   0E69 19                 4139 	.db #0x19
   0E6A 21                 4140 	.db #0x21
   0E6B 29                 4141 	.db #0x29
   0E6C 30                 4142 	.db #0x30
   0E6D 38                 4143 	.db #0x38
   0E6E 40                 4144 	.db #0x40
   0E6F 4A                 4145 	.db #0x4A
   0E70 52                 4146 	.db #0x52
   0E71 5A                 4147 	.db #0x5A
   0E72 00                 4148 	.db 0x00
   0E73 00                 4149 	.db 0x00
   0E74 00                 4150 	.db 0x00
   0E75 00                 4151 	.db 0x00
   0E76 00                 4152 	.db 0x00
   0E77 00                 4153 	.db 0x00
   0E78                    4154 _font_y:
   0E78 1C                 4155 	.db #0x1C
   0E79 1C                 4156 	.db #0x1C
   0E7A 1C                 4157 	.db #0x1C
   0E7B 1C                 4158 	.db #0x1C
   0E7C 1C                 4159 	.db #0x1C
   0E7D 1C                 4160 	.db #0x1C
   0E7E 1C                 4161 	.db #0x1C
   0E7F 1C                 4162 	.db #0x1C
   0E80 1C                 4163 	.db #0x1C
   0E81 1C                 4164 	.db #0x1C
   0E82 1C                 4165 	.db #0x1C
   0E83 1C                 4166 	.db #0x1C
   0E84 1C                 4167 	.db #0x1C
   0E85 25                 4168 	.db #0x25
   0E86 25                 4169 	.db #0x25
   0E87 25                 4170 	.db #0x25
   0E88 25                 4171 	.db #0x25
   0E89 25                 4172 	.db #0x25
   0E8A 25                 4173 	.db #0x25
   0E8B 25                 4174 	.db #0x25
   0E8C 25                 4175 	.db #0x25
   0E8D 25                 4176 	.db #0x25
   0E8E 25                 4177 	.db #0x25
   0E8F 25                 4178 	.db #0x25
   0E90 25                 4179 	.db #0x25
   0E91 25                 4180 	.db #0x25
   0E92 00                 4181 	.db #0x00
   0E93 00                 4182 	.db #0x00
   0E94 00                 4183 	.db #0x00
   0E95 00                 4184 	.db #0x00
   0E96 00                 4185 	.db #0x00
   0E97 00                 4186 	.db #0x00
   0E98 37                 4187 	.db #0x37
   0E99 37                 4188 	.db #0x37
   0E9A 37                 4189 	.db #0x37
   0E9B 37                 4190 	.db #0x37
   0E9C 37                 4191 	.db #0x37
   0E9D 37                 4192 	.db #0x37
   0E9E 37                 4193 	.db #0x37
   0E9F 37                 4194 	.db #0x37
   0EA0 37                 4195 	.db #0x37
   0EA1 37                 4196 	.db #0x37
   0EA2 37                 4197 	.db #0x37
   0EA3 37                 4198 	.db #0x37
   0EA4 37                 4199 	.db #0x37
   0EA5 37                 4200 	.db #0x37
   0EA6 40                 4201 	.db #0x40
   0EA7 40                 4202 	.db #0x40
   0EA8 40                 4203 	.db #0x40
   0EA9 40                 4204 	.db #0x40
   0EAA 40                 4205 	.db #0x40
   0EAB 40                 4206 	.db #0x40
   0EAC 40                 4207 	.db #0x40
   0EAD 40                 4208 	.db #0x40
   0EAE 40                 4209 	.db #0x40
   0EAF 40                 4210 	.db #0x40
   0EB0 40                 4211 	.db #0x40
   0EB1 40                 4212 	.db #0x40
   0EB2 00                 4213 	.db 0x00
   0EB3 00                 4214 	.db 0x00
   0EB4 00                 4215 	.db 0x00
   0EB5 00                 4216 	.db 0x00
   0EB6 00                 4217 	.db 0x00
   0EB7 00                 4218 	.db 0x00
   0EB8                    4219 _font_w:
   0EB8 07                 4220 	.db #0x07
   0EB9 07                 4221 	.db #0x07
   0EBA 07                 4222 	.db #0x07
   0EBB 07                 4223 	.db #0x07
   0EBC 07                 4224 	.db #0x07
   0EBD 07                 4225 	.db #0x07
   0EBE 07                 4226 	.db #0x07
   0EBF 07                 4227 	.db #0x07
   0EC0 04                 4228 	.db #0x04
   0EC1 07                 4229 	.db #0x07
   0EC2 07                 4230 	.db #0x07
   0EC3 07                 4231 	.db #0x07
   0EC4 09                 4232 	.db #0x09
   0EC5 08                 4233 	.db #0x08
   0EC6 07                 4234 	.db #0x07
   0EC7 07                 4235 	.db #0x07
   0EC8 08                 4236 	.db #0x08
   0EC9 07                 4237 	.db #0x07
   0ECA 07                 4238 	.db #0x07
   0ECB 08                 4239 	.db #0x08
   0ECC 07                 4240 	.db #0x07
   0ECD 07                 4241 	.db #0x07
   0ECE 09                 4242 	.db #0x09
   0ECF 07                 4243 	.db #0x07
   0ED0 08                 4244 	.db #0x08
   0ED1 07                 4245 	.db #0x07
   0ED2 00                 4246 	.db #0x00
   0ED3 00                 4247 	.db #0x00
   0ED4 00                 4248 	.db #0x00
   0ED5 00                 4249 	.db #0x00
   0ED6 00                 4250 	.db #0x00
   0ED7 00                 4251 	.db #0x00
   0ED8 07                 4252 	.db #0x07
   0ED9 07                 4253 	.db #0x07
   0EDA 06                 4254 	.db #0x06
   0EDB 07                 4255 	.db #0x07
   0EDC 07                 4256 	.db #0x07
   0EDD 07                 4257 	.db #0x07
   0EDE 07                 4258 	.db #0x07
   0EDF 07                 4259 	.db #0x07
   0EE0 05                 4260 	.db #0x05
   0EE1 06                 4261 	.db #0x06
   0EE2 07                 4262 	.db #0x07
   0EE3 05                 4263 	.db #0x05
   0EE4 09                 4264 	.db #0x09
   0EE5 07                 4265 	.db #0x07
   0EE6 07                 4266 	.db #0x07
   0EE7 07                 4267 	.db #0x07
   0EE8 07                 4268 	.db #0x07
   0EE9 07                 4269 	.db #0x07
   0EEA 07                 4270 	.db #0x07
   0EEB 06                 4271 	.db #0x06
   0EEC 07                 4272 	.db #0x07
   0EED 07                 4273 	.db #0x07
   0EEE 09                 4274 	.db #0x09
   0EEF 07                 4275 	.db #0x07
   0EF0 07                 4276 	.db #0x07
   0EF1 07                 4277 	.db #0x07
   0EF2 00                 4278 	.db 0x00
   0EF3 00                 4279 	.db 0x00
   0EF4 00                 4280 	.db 0x00
   0EF5 00                 4281 	.db 0x00
   0EF6 00                 4282 	.db 0x00
   0EF7 00                 4283 	.db 0x00
                           4284 ;demo.c:475: void do_letter(char cc) {
                           4285 ;	---------------------------------
                           4286 ; Function do_letter
                           4287 ; ---------------------------------
   0EF8                    4288 _do_letter_start::
   0EF8                    4289 _do_letter:
   0EF8 DD E5              4290 	push	ix
   0EFA DD 21 00 00        4291 	ld	ix,#0
   0EFE DD 39              4292 	add	ix,sp
   0F00 F5                 4293 	push	af
                           4294 ;demo.c:476: int cidx = cc - 65;
   0F01 DD 4E 04           4295 	ld	c,4 (ix)
   0F04 DD 7E 04           4296 	ld	a,4 (ix)
   0F07 17                 4297 	rla	
   0F08 9F                 4298 	sbc	a,a
   0F09 47                 4299 	ld	b,a
   0F0A 79                 4300 	ld	a,c
   0F0B C6 BF              4301 	add	a,#0xBF
   0F0D DD 77 FE           4302 	ld	-2 (ix),a
   0F10 78                 4303 	ld	a,b
   0F11 CE FF              4304 	adc	a,#0xFF
   0F13 DD 77 FF           4305 	ld	-1 (ix),a
                           4306 ;demo.c:477: cmd.source_x = 127+font_x[cidx];
   0F16 3Er38              4307 	ld	a,#<_font_x
   0F18 DD 86 FE           4308 	add	a,-2 (ix)
   0F1B 5F                 4309 	ld	e,a
   0F1C 3Es0E              4310 	ld	a,#>_font_x
   0F1E DD 8E FF           4311 	adc	a,-1 (ix)
   0F21 57                 4312 	ld	d,a
   0F22 1A                 4313 	ld	a,(de)
   0F23 5F                 4314 	ld	e,a
   0F24 16 00              4315 	ld	d,#0x00
   0F26 21 7F 00           4316 	ld	hl,#0x007F
   0F29 19                 4317 	add	hl,de
   0F2A EB                 4318 	ex	de,hl
   0F2B 21r2As41           4319 	ld	hl,#_cmd
   0F2E 73                 4320 	ld	(hl),e
   0F2F 23                 4321 	inc	hl
   0F30 72                 4322 	ld	(hl),d
                           4323 ;demo.c:478: cmd.source_y = 512+font_y[cidx];
   0F31 11r2Cs41           4324 	ld	de,#_cmd + 2
   0F34 3Er78              4325 	ld	a,#<_font_y
   0F36 DD 86 FE           4326 	add	a,-2 (ix)
   0F39 4F                 4327 	ld	c,a
   0F3A 3Es0E              4328 	ld	a,#>_font_y
   0F3C DD 8E FF           4329 	adc	a,-1 (ix)
   0F3F 47                 4330 	ld	b,a
   0F40 0A                 4331 	ld	a,(bc)
   0F41 4F                 4332 	ld	c,a
   0F42 06 00              4333 	ld	b,#0x00
   0F44 21 00 02           4334 	ld	hl,#0x0200
   0F47 09                 4335 	add	hl,bc
   0F48 4D                 4336 	ld	c,l
   0F49 44                 4337 	ld	b,h
   0F4A EB                 4338 	ex	de,hl
   0F4B 71                 4339 	ld	(hl),c
   0F4C 23                 4340 	inc	hl
   0F4D 70                 4341 	ld	(hl),b
                           4342 ;demo.c:479: cmd.dest_x = lx;
   0F4E 01r2Es41           4343 	ld	bc,#_cmd + 4
   0F51 21rBCs41           4344 	ld	hl,#_lx + 0
   0F54 5E                 4345 	ld	e,(hl)
   0F55 16 00              4346 	ld	d,#0x00
   0F57 69                 4347 	ld	l,c
   0F58 60                 4348 	ld	h,b
   0F59 73                 4349 	ld	(hl),e
   0F5A 23                 4350 	inc	hl
   0F5B 72                 4351 	ld	(hl),d
                           4352 ;demo.c:480: cmd.dest_y = ly;
   0F5C 01r30s41           4353 	ld	bc,#_cmd + 6
   0F5F 21rBDs41           4354 	ld	hl,#_ly + 0
   0F62 5E                 4355 	ld	e,(hl)
   0F63 16 00              4356 	ld	d,#0x00
   0F65 69                 4357 	ld	l,c
   0F66 60                 4358 	ld	h,b
   0F67 73                 4359 	ld	(hl),e
   0F68 23                 4360 	inc	hl
   0F69 72                 4361 	ld	(hl),d
                           4362 ;demo.c:481: cmd.size_x = font_w[cidx];
   0F6A 01r32s41           4363 	ld	bc,#_cmd + 8
   0F6D 3ErB8              4364 	ld	a,#<_font_w
   0F6F DD 86 FE           4365 	add	a,-2 (ix)
   0F72 5F                 4366 	ld	e,a
   0F73 3Es0E              4367 	ld	a,#>_font_w
   0F75 DD 8E FF           4368 	adc	a,-1 (ix)
   0F78 57                 4369 	ld	d,a
   0F79 1A                 4370 	ld	a,(de)
   0F7A 5F                 4371 	ld	e,a
   0F7B 16 00              4372 	ld	d,#0x00
   0F7D 69                 4373 	ld	l,c
   0F7E 60                 4374 	ld	h,b
   0F7F 73                 4375 	ld	(hl),e
   0F80 23                 4376 	inc	hl
   0F81 72                 4377 	ld	(hl),d
                           4378 ;demo.c:482: cmd.size_y = 8;
   0F82 21r34s41           4379 	ld	hl, #_cmd + 10
   0F85 36 08              4380 	ld	(hl),#0x08
   0F87 23                 4381 	inc	hl
   0F88 36 00              4382 	ld	(hl),#0x00
                           4383 ;demo.c:483: cmd.argument = 0x00;
   0F8A 3E 00              4384 	ld	a,#0x00
   0F8C 32r37s41           4385 	ld	(#_cmd + 13),a
                           4386 ;demo.c:484: cmd.command = 0x90; // logical vram to vram
   0F8F 3E 90              4387 	ld	a,#0x90
   0F91 32r38s41           4388 	ld	(#_cmd + 14),a
                           4389 ;demo.c:485: vdp_copier(&cmd);
   0F94 21r2As41           4390 	ld	hl,#_cmd
   0F97 E5                 4391 	push	hl
   0F98 CDr00s00           4392 	call	_vdp_copier
   0F9B F1                 4393 	pop	af
                           4394 ;demo.c:486: lx+=font_w[cidx]-1;
   0F9C 3ErB8              4395 	ld	a,#<_font_w
   0F9E DD 86 FE           4396 	add	a,-2 (ix)
   0FA1 4F                 4397 	ld	c,a
   0FA2 3Es0E              4398 	ld	a,#>_font_w
   0FA4 DD 8E FF           4399 	adc	a,-1 (ix)
   0FA7 47                 4400 	ld	b,a
   0FA8 0A                 4401 	ld	a,(bc)
   0FA9 4F                 4402 	ld	c,a
   0FAA 0D                 4403 	dec	c
   0FAB 21rBCs41           4404 	ld	hl,#_lx
   0FAE 7E                 4405 	ld	a,(hl)
   0FAF 81                 4406 	add	a,c
   0FB0 77                 4407 	ld	(hl),a
   0FB1 DD F9              4408 	ld	sp,ix
   0FB3 DD E1              4409 	pop	ix
   0FB5 C9                 4410 	ret
   0FB6                    4411 _do_letter_end::
                           4412 ;demo.c:490: void do_letter_tall(char cc) {
                           4413 ;	---------------------------------
                           4414 ; Function do_letter_tall
                           4415 ; ---------------------------------
   0FB6                    4416 _do_letter_tall_start::
   0FB6                    4417 _do_letter_tall:
   0FB6 DD E5              4418 	push	ix
   0FB8 DD 21 00 00        4419 	ld	ix,#0
   0FBC DD 39              4420 	add	ix,sp
   0FBE F5                 4421 	push	af
                           4422 ;demo.c:491: int cidx = cc - 65;
   0FBF DD 4E 04           4423 	ld	c,4 (ix)
   0FC2 DD 7E 04           4424 	ld	a,4 (ix)
   0FC5 17                 4425 	rla	
   0FC6 9F                 4426 	sbc	a,a
   0FC7 47                 4427 	ld	b,a
   0FC8 79                 4428 	ld	a,c
   0FC9 C6 BF              4429 	add	a,#0xBF
   0FCB DD 77 FE           4430 	ld	-2 (ix),a
   0FCE 78                 4431 	ld	a,b
   0FCF CE FF              4432 	adc	a,#0xFF
   0FD1 DD 77 FF           4433 	ld	-1 (ix),a
                           4434 ;demo.c:492: cmd.source_x = 127+font_x[cidx];
   0FD4 3Er38              4435 	ld	a,#<_font_x
   0FD6 DD 86 FE           4436 	add	a,-2 (ix)
   0FD9 5F                 4437 	ld	e,a
   0FDA 3Es0E              4438 	ld	a,#>_font_x
   0FDC DD 8E FF           4439 	adc	a,-1 (ix)
   0FDF 57                 4440 	ld	d,a
   0FE0 1A                 4441 	ld	a,(de)
   0FE1 5F                 4442 	ld	e,a
   0FE2 16 00              4443 	ld	d,#0x00
   0FE4 21 7F 00           4444 	ld	hl,#0x007F
   0FE7 19                 4445 	add	hl,de
   0FE8 EB                 4446 	ex	de,hl
   0FE9 21r2As41           4447 	ld	hl,#_cmd
   0FEC 73                 4448 	ld	(hl),e
   0FED 23                 4449 	inc	hl
   0FEE 72                 4450 	ld	(hl),d
                           4451 ;demo.c:493: cmd.source_y = 512+font_y[cidx];
   0FEF 11r2Cs41           4452 	ld	de,#_cmd + 2
   0FF2 3Er78              4453 	ld	a,#<_font_y
   0FF4 DD 86 FE           4454 	add	a,-2 (ix)
   0FF7 4F                 4455 	ld	c,a
   0FF8 3Es0E              4456 	ld	a,#>_font_y
   0FFA DD 8E FF           4457 	adc	a,-1 (ix)
   0FFD 47                 4458 	ld	b,a
   0FFE 0A                 4459 	ld	a,(bc)
   0FFF 4F                 4460 	ld	c,a
   1000 06 00              4461 	ld	b,#0x00
   1002 21 00 02           4462 	ld	hl,#0x0200
   1005 09                 4463 	add	hl,bc
   1006 4D                 4464 	ld	c,l
   1007 44                 4465 	ld	b,h
   1008 EB                 4466 	ex	de,hl
   1009 71                 4467 	ld	(hl),c
   100A 23                 4468 	inc	hl
   100B 70                 4469 	ld	(hl),b
                           4470 ;demo.c:494: cmd.dest_x = lx;
   100C 01r2Es41           4471 	ld	bc,#_cmd + 4
   100F 21rBCs41           4472 	ld	hl,#_lx + 0
   1012 5E                 4473 	ld	e,(hl)
   1013 16 00              4474 	ld	d,#0x00
   1015 69                 4475 	ld	l,c
   1016 60                 4476 	ld	h,b
   1017 73                 4477 	ld	(hl),e
   1018 23                 4478 	inc	hl
   1019 72                 4479 	ld	(hl),d
                           4480 ;demo.c:495: cmd.dest_y = ly;
   101A 01r30s41           4481 	ld	bc,#_cmd + 6
   101D 21rBDs41           4482 	ld	hl,#_ly + 0
   1020 5E                 4483 	ld	e,(hl)
   1021 16 00              4484 	ld	d,#0x00
   1023 69                 4485 	ld	l,c
   1024 60                 4486 	ld	h,b
   1025 73                 4487 	ld	(hl),e
   1026 23                 4488 	inc	hl
   1027 72                 4489 	ld	(hl),d
                           4490 ;demo.c:496: cmd.size_x = font_w[cidx];
   1028 01r32s41           4491 	ld	bc,#_cmd + 8
   102B 3ErB8              4492 	ld	a,#<_font_w
   102D DD 86 FE           4493 	add	a,-2 (ix)
   1030 5F                 4494 	ld	e,a
   1031 3Es0E              4495 	ld	a,#>_font_w
   1033 DD 8E FF           4496 	adc	a,-1 (ix)
   1036 57                 4497 	ld	d,a
   1037 1A                 4498 	ld	a,(de)
   1038 5F                 4499 	ld	e,a
   1039 16 00              4500 	ld	d,#0x00
   103B 69                 4501 	ld	l,c
   103C 60                 4502 	ld	h,b
   103D 73                 4503 	ld	(hl),e
   103E 23                 4504 	inc	hl
   103F 72                 4505 	ld	(hl),d
                           4506 ;demo.c:497: cmd.size_y = 8;
   1040 21r34s41           4507 	ld	hl, #_cmd + 10
   1043 36 08              4508 	ld	(hl),#0x08
   1045 23                 4509 	inc	hl
   1046 36 00              4510 	ld	(hl),#0x00
                           4511 ;demo.c:498: cmd.argument = 0x00;
   1048 3E 00              4512 	ld	a,#0x00
   104A 32r37s41           4513 	ld	(#_cmd + 13),a
                           4514 ;demo.c:499: cmd.command = 0x90; // logical vram to vram
   104D 3E 90              4515 	ld	a,#0x90
   104F 32r38s41           4516 	ld	(#_cmd + 14),a
                           4517 ;demo.c:500: vdp_copier(&cmd);
   1052 21r2As41           4518 	ld	hl,#_cmd
   1055 E5                 4519 	push	hl
   1056 CDr00s00           4520 	call	_vdp_copier
   1059 F1                 4521 	pop	af
                           4522 ;demo.c:501: lx+=font_w[cidx]-1;
   105A 3ErB8              4523 	ld	a,#<_font_w
   105C DD 86 FE           4524 	add	a,-2 (ix)
   105F 4F                 4525 	ld	c,a
   1060 3Es0E              4526 	ld	a,#>_font_w
   1062 DD 8E FF           4527 	adc	a,-1 (ix)
   1065 47                 4528 	ld	b,a
   1066 0A                 4529 	ld	a,(bc)
   1067 4F                 4530 	ld	c,a
   1068 0D                 4531 	dec	c
   1069 21rBCs41           4532 	ld	hl,#_lx
   106C 7E                 4533 	ld	a,(hl)
   106D 81                 4534 	add	a,c
   106E 77                 4535 	ld	(hl),a
   106F DD F9              4536 	ld	sp,ix
   1071 DD E1              4537 	pop	ix
   1073 C9                 4538 	ret
   1074                    4539 _do_letter_tall_end::
                           4540 ;demo.c:504: void drawstr(char* str, uint8_t x, uint8_t y) {
                           4541 ;	---------------------------------
                           4542 ; Function drawstr
                           4543 ; ---------------------------------
   1074                    4544 _drawstr_start::
   1074                    4545 _drawstr:
   1074 DD E5              4546 	push	ix
   1076 DD 21 00 00        4547 	ld	ix,#0
   107A DD 39              4548 	add	ix,sp
                           4549 ;demo.c:505: char* c = str;
   107C DD 4E 04           4550 	ld	c,4 (ix)
   107F DD 46 05           4551 	ld	b,5 (ix)
                           4552 ;demo.c:506: lx = x;
   1082 DD 5E 06           4553 	ld	e,6 (ix)
   1085 21rBCs41           4554 	ld	hl,#_lx + 0
   1088 73                 4555 	ld	(hl), e
                           4556 ;demo.c:507: ly = y;
   1089 DD 7E 07           4557 	ld	a,7 (ix)
   108C 21rBDs41           4558 	ld	hl,#_ly + 0
   108F 77                 4559 	ld	(hl), a
                           4560 ;demo.c:508: while (*c) {
   1090                    4561 00107$:
   1090 0A                 4562 	ld	a,(bc)
   1091 57                 4563 	ld	d,a
   1092 B7                 4564 	or	a,a
   1093 28 42              4565 	jr	Z,00110$
                           4566 ;demo.c:509: char ltr = *c++; 
   1095 03                 4567 	inc	bc
                           4568 ;demo.c:510: if (ltr == ' ') lx+=4;
   1096 7A                 4569 	ld	a,d
   1097 D6 20              4570 	sub	a,#0x20
   1099 20 1E              4571 	jr	NZ,00105$
   109B FD 21rBCs41        4572 	ld	iy,#_lx
   109F FD 34 00           4573 	inc	0 (iy)
   10A2 FD 21rBCs41        4574 	ld	iy,#_lx
   10A6 FD 34 00           4575 	inc	0 (iy)
   10A9 FD 21rBCs41        4576 	ld	iy,#_lx
   10AD FD 34 00           4577 	inc	0 (iy)
   10B0 FD 21rBCs41        4578 	ld	iy,#_lx
   10B4 FD 34 00           4579 	inc	0 (iy)
   10B7 18 D7              4580 	jr	00107$
   10B9                    4581 00105$:
                           4582 ;demo.c:511: else if (ltr == '_') { ly+=9; lx = x; }
   10B9 7A                 4583 	ld	a,d
   10BA D6 5F              4584 	sub	a,#0x5F
   10BC 20 0D              4585 	jr	NZ,00102$
   10BE 21rBDs41           4586 	ld	hl,#_ly
   10C1 7E                 4587 	ld	a,(hl)
   10C2 C6 09              4588 	add	a,#0x09
   10C4 77                 4589 	ld	(hl),a
   10C5 21rBCs41           4590 	ld	hl,#_lx + 0
   10C8 73                 4591 	ld	(hl), e
   10C9 18 C5              4592 	jr	00107$
   10CB                    4593 00102$:
                           4594 ;demo.c:512: else do_letter(ltr);
   10CB C5                 4595 	push	bc
   10CC D5                 4596 	push	de
   10CD D5                 4597 	push	de
   10CE 33                 4598 	inc	sp
   10CF CDrF8s0E           4599 	call	_do_letter
   10D2 33                 4600 	inc	sp
   10D3 D1                 4601 	pop	de
   10D4 C1                 4602 	pop	bc
   10D5 18 B9              4603 	jr	00107$
   10D7                    4604 00110$:
   10D7 DD E1              4605 	pop	ix
   10D9 C9                 4606 	ret
   10DA                    4607 _drawstr_end::
                           4608 ;demo.c:519: void drawstrslow(char* str, uint8_t x, uint8_t y) {
                           4609 ;	---------------------------------
                           4610 ; Function drawstrslow
                           4611 ; ---------------------------------
   10DA                    4612 _drawstrslow_start::
   10DA                    4613 _drawstrslow:
   10DA DD E5              4614 	push	ix
   10DC DD 21 00 00        4615 	ld	ix,#0
   10E0 DD 39              4616 	add	ix,sp
                           4617 ;demo.c:520: char* c = str+ltrpointer;
   10E2 21rBEs41           4618 	ld	hl,#_ltrpointer
   10E5 DD 7E 04           4619 	ld	a,4 (ix)
   10E8 86                 4620 	add	a,(hl)
   10E9 4F                 4621 	ld	c,a
   10EA DD 7E 05           4622 	ld	a,5 (ix)
   10ED 23                 4623 	inc	hl
   10EE 8E                 4624 	adc	a,(hl)
   10EF 47                 4625 	ld	b,a
                           4626 ;demo.c:521: if (ltrpointer > slowend) return;
   10F0 21rC0s41           4627 	ld	hl,#_slowend
   10F3 7E                 4628 	ld	a,(hl)
   10F4 FD 21rBEs41        4629 	ld	iy,#_ltrpointer
   10F8 FD 96 00           4630 	sub	a,0 (iy)
   10FB 23                 4631 	inc	hl
   10FC 7E                 4632 	ld	a,(hl)
   10FD FD 21rBEs41        4633 	ld	iy,#_ltrpointer
   1101 FD 9E 01           4634 	sbc	a,1 (iy)
   1104 F2r0As11           4635 	jp	P,00102$
   1107 C3r75s11           4636 	jp	00114$
   110A                    4637 00102$:
                           4638 ;demo.c:522: if (ltrpointer == 0) {
   110A 3ArBEs41           4639 	ld	a,(#_ltrpointer+0)
   110D 21rBFs41           4640 	ld	hl,#_ltrpointer + 1
   1110 B6                 4641 	or	a,(hl)
   1111 20 0E              4642 	jr	NZ,00111$
                           4643 ;demo.c:523: lx = x;
   1113 DD 7E 06           4644 	ld	a,6 (ix)
   1116 21rBCs41           4645 	ld	hl,#_lx + 0
   1119 77                 4646 	ld	(hl), a
                           4647 ;demo.c:524: ly = y;
   111A DD 7E 07           4648 	ld	a,7 (ix)
   111D 21rBDs41           4649 	ld	hl,#_ly + 0
   1120 77                 4650 	ld	(hl), a
                           4651 ;demo.c:526: while (*c) {
   1121                    4652 00111$:
   1121 0A                 4653 	ld	a,(bc)
   1122 4F                 4654 	ld	c,a
   1123 B7                 4655 	or	a,a
   1124 28 3F              4656 	jr	Z,00113$
                           4657 ;demo.c:527: char ltr = *c++; 
                           4658 ;demo.c:528: if (ltr == ' ') lx+=4;
   1126 79                 4659 	ld	a,c
   1127 D6 20              4660 	sub	a,#0x20
   1129 20 1E              4661 	jr	NZ,00109$
   112B FD 21rBCs41        4662 	ld	iy,#_lx
   112F FD 34 00           4663 	inc	0 (iy)
   1132 FD 21rBCs41        4664 	ld	iy,#_lx
   1136 FD 34 00           4665 	inc	0 (iy)
   1139 FD 21rBCs41        4666 	ld	iy,#_lx
   113D FD 34 00           4667 	inc	0 (iy)
   1140 FD 21rBCs41        4668 	ld	iy,#_lx
   1144 FD 34 00           4669 	inc	0 (iy)
   1147 18 1C              4670 	jr	00113$
   1149                    4671 00109$:
                           4672 ;demo.c:529: else if (ltr == '_') { ly+=9; lx = x; }
   1149 79                 4673 	ld	a,c
   114A D6 5F              4674 	sub	a,#0x5F
   114C 20 10              4675 	jr	NZ,00106$
   114E 21rBDs41           4676 	ld	hl,#_ly
   1151 7E                 4677 	ld	a,(hl)
   1152 C6 09              4678 	add	a,#0x09
   1154 77                 4679 	ld	(hl),a
   1155 DD 7E 06           4680 	ld	a,6 (ix)
   1158 21rBCs41           4681 	ld	hl,#_lx + 0
   115B 77                 4682 	ld	(hl), a
   115C 18 07              4683 	jr	00113$
   115E                    4684 00106$:
                           4685 ;demo.c:530: else do_letter(ltr);
   115E 79                 4686 	ld	a,c
   115F F5                 4687 	push	af
   1160 33                 4688 	inc	sp
   1161 CDrF8s0E           4689 	call	_do_letter
   1164 33                 4690 	inc	sp
                           4691 ;demo.c:531: break;
   1165                    4692 00113$:
                           4693 ;demo.c:534: ltrpointer++;
   1165 FD 21rBEs41        4694 	ld	iy,#_ltrpointer
   1169 FD 34 00           4695 	inc	0 (iy)
   116C 20 07              4696 	jr	NZ,00125$
   116E FD 21rBEs41        4697 	ld	iy,#_ltrpointer
   1172 FD 34 01           4698 	inc	1 (iy)
   1175                    4699 00125$:
   1175                    4700 00114$:
   1175 DD E1              4701 	pop	ix
   1177 C9                 4702 	ret
   1178                    4703 _drawstrslow_end::
                           4704 ;demo.c:537: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           4705 ;	---------------------------------
                           4706 ; Function drawstr2x
                           4707 ; ---------------------------------
   1178                    4708 _drawstr2x_start::
   1178                    4709 _drawstr2x:
   1178 DD E5              4710 	push	ix
   117A DD 21 00 00        4711 	ld	ix,#0
   117E DD 39              4712 	add	ix,sp
                           4713 ;demo.c:538: char* c = str;
   1180 DD 4E 04           4714 	ld	c,4 (ix)
   1183 DD 46 05           4715 	ld	b,5 (ix)
                           4716 ;demo.c:539: lx = x;
   1186 DD 5E 06           4717 	ld	e,6 (ix)
   1189 21rBCs41           4718 	ld	hl,#_lx + 0
   118C 73                 4719 	ld	(hl), e
                           4720 ;demo.c:540: ly = y;
   118D DD 7E 07           4721 	ld	a,7 (ix)
   1190 21rBDs41           4722 	ld	hl,#_ly + 0
   1193 77                 4723 	ld	(hl), a
                           4724 ;demo.c:541: while (*c) {
   1194                    4725 00107$:
   1194 0A                 4726 	ld	a,(bc)
   1195 57                 4727 	ld	d,a
   1196 B7                 4728 	or	a,a
   1197 28 2D              4729 	jr	Z,00110$
                           4730 ;demo.c:542: char ltr = *c++; 
   1199 03                 4731 	inc	bc
                           4732 ;demo.c:543: if (ltr == ' ') lx+=4*4;
   119A 7A                 4733 	ld	a,d
   119B D6 20              4734 	sub	a,#0x20
   119D 20 09              4735 	jr	NZ,00105$
   119F 21rBCs41           4736 	ld	hl,#_lx
   11A2 7E                 4737 	ld	a,(hl)
   11A3 C6 10              4738 	add	a,#0x10
   11A5 77                 4739 	ld	(hl),a
   11A6 18 EC              4740 	jr	00107$
   11A8                    4741 00105$:
                           4742 ;demo.c:544: else if (ltr == '_') { ly+=9*4; lx = x; }
   11A8 7A                 4743 	ld	a,d
   11A9 D6 5F              4744 	sub	a,#0x5F
   11AB 20 0D              4745 	jr	NZ,00102$
   11AD 21rBDs41           4746 	ld	hl,#_ly
   11B0 7E                 4747 	ld	a,(hl)
   11B1 C6 24              4748 	add	a,#0x24
   11B3 77                 4749 	ld	(hl),a
   11B4 21rBCs41           4750 	ld	hl,#_lx + 0
   11B7 73                 4751 	ld	(hl), e
   11B8 18 DA              4752 	jr	00107$
   11BA                    4753 00102$:
                           4754 ;demo.c:545: else do_2xletter(ltr);
   11BA C5                 4755 	push	bc
   11BB D5                 4756 	push	de
   11BC D5                 4757 	push	de
   11BD 33                 4758 	inc	sp
   11BE CDr8As0B           4759 	call	_do_2xletter
   11C1 33                 4760 	inc	sp
   11C2 D1                 4761 	pop	de
   11C3 C1                 4762 	pop	bc
   11C4 18 CE              4763 	jr	00107$
   11C6                    4764 00110$:
   11C6 DD E1              4765 	pop	ix
   11C8 C9                 4766 	ret
   11C9                    4767 _drawstr2x_end::
                           4768 ;demo.c:550: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4769 ;	---------------------------------
                           4770 ; Function drawsine
                           4771 ; ---------------------------------
   11C9                    4772 _drawsine_start::
   11C9                    4773 _drawsine:
   11C9 DD E5              4774 	push	ix
   11CB DD 21 00 00        4775 	ld	ix,#0
   11CF DD 39              4776 	add	ix,sp
                           4777 ;demo.c:551: char* c = str+ltrpointer;
   11D1 21rBEs41           4778 	ld	hl,#_ltrpointer
   11D4 DD 7E 04           4779 	ld	a,4 (ix)
   11D7 86                 4780 	add	a,(hl)
   11D8 4F                 4781 	ld	c,a
   11D9 DD 7E 05           4782 	ld	a,5 (ix)
   11DC 23                 4783 	inc	hl
   11DD 8E                 4784 	adc	a,(hl)
   11DE 47                 4785 	ld	b,a
                           4786 ;demo.c:552: if (ltrpointer > slowend) return;
   11DF 21rC0s41           4787 	ld	hl,#_slowend
   11E2 7E                 4788 	ld	a,(hl)
   11E3 FD 21rBEs41        4789 	ld	iy,#_ltrpointer
   11E7 FD 96 00           4790 	sub	a,0 (iy)
   11EA 23                 4791 	inc	hl
   11EB 7E                 4792 	ld	a,(hl)
   11EC FD 21rBEs41        4793 	ld	iy,#_ltrpointer
   11F0 FD 9E 01           4794 	sbc	a,1 (iy)
   11F3 F2rF9s11           4795 	jp	P,00102$
   11F6 C3r85s12           4796 	jp	00114$
   11F9                    4797 00102$:
                           4798 ;demo.c:553: if (ltrpointer == 0) {
   11F9 3ArBEs41           4799 	ld	a,(#_ltrpointer+0)
   11FC 21rBFs41           4800 	ld	hl,#_ltrpointer + 1
   11FF B6                 4801 	or	a,(hl)
   1200 20 07              4802 	jr	NZ,00111$
                           4803 ;demo.c:554: lx = x;
   1202 DD 7E 06           4804 	ld	a,6 (ix)
   1205 21rBCs41           4805 	ld	hl,#_lx + 0
   1208 77                 4806 	ld	(hl), a
                           4807 ;demo.c:556: while (*c) {
   1209                    4808 00111$:
   1209 0A                 4809 	ld	a,(bc)
   120A 4F                 4810 	ld	c,a
   120B B7                 4811 	or	a,a
   120C CAr75s12           4812 	jp	Z,00113$
                           4813 ;demo.c:557: char ltr = *c++; 
                           4814 ;demo.c:558: ly = y+(sintabx[(lx+10>>1) & 255]>>4);
   120F 21rBCs41           4815 	ld	hl,#_lx + 0
   1212 5E                 4816 	ld	e,(hl)
   1213 16 00              4817 	ld	d,#0x00
   1215 21 0A 00           4818 	ld	hl,#0x000A
   1218 19                 4819 	add	hl,de
   1219 EB                 4820 	ex	de,hl
   121A CB 2A              4821 	sra	d
   121C CB 1B              4822 	rr	e
   121E 16 00              4823 	ld	d,#0x00
   1220 21r2Cs00           4824 	ld	hl,#_sintabx
   1223 19                 4825 	add	hl,de
   1224 7E                 4826 	ld	a,(hl)
   1225 47                 4827 	ld	b,a
   1226 CB 38              4828 	srl	b
   1228 CB 38              4829 	srl	b
   122A CB 38              4830 	srl	b
   122C CB 38              4831 	srl	b
   122E 21rBDs41           4832 	ld	hl,#_ly
   1231 DD 7E 07           4833 	ld	a,7 (ix)
   1234 80                 4834 	add	a,b
   1235 77                 4835 	ld	(hl),a
                           4836 ;demo.c:560: if (ltr == ' ') lx+=4;
   1236 79                 4837 	ld	a,c
   1237 D6 20              4838 	sub	a,#0x20
   1239 20 1E              4839 	jr	NZ,00109$
   123B FD 21rBCs41        4840 	ld	iy,#_lx
   123F FD 34 00           4841 	inc	0 (iy)
   1242 FD 21rBCs41        4842 	ld	iy,#_lx
   1246 FD 34 00           4843 	inc	0 (iy)
   1249 FD 21rBCs41        4844 	ld	iy,#_lx
   124D FD 34 00           4845 	inc	0 (iy)
   1250 FD 21rBCs41        4846 	ld	iy,#_lx
   1254 FD 34 00           4847 	inc	0 (iy)
   1257 18 1C              4848 	jr	00113$
   1259                    4849 00109$:
                           4850 ;demo.c:561: else if (ltr == '_') { ly+=9; lx = x; }
   1259 79                 4851 	ld	a,c
   125A D6 5F              4852 	sub	a,#0x5F
   125C 20 10              4853 	jr	NZ,00106$
   125E 21rBDs41           4854 	ld	hl,#_ly
   1261 7E                 4855 	ld	a,(hl)
   1262 C6 09              4856 	add	a,#0x09
   1264 77                 4857 	ld	(hl),a
   1265 DD 7E 06           4858 	ld	a,6 (ix)
   1268 21rBCs41           4859 	ld	hl,#_lx + 0
   126B 77                 4860 	ld	(hl), a
   126C 18 07              4861 	jr	00113$
   126E                    4862 00106$:
                           4863 ;demo.c:562: else do_letter_tall(ltr);
   126E 79                 4864 	ld	a,c
   126F F5                 4865 	push	af
   1270 33                 4866 	inc	sp
   1271 CDrB6s0F           4867 	call	_do_letter_tall
   1274 33                 4868 	inc	sp
                           4869 ;demo.c:563: break;
   1275                    4870 00113$:
                           4871 ;demo.c:566: ltrpointer++;
   1275 FD 21rBEs41        4872 	ld	iy,#_ltrpointer
   1279 FD 34 00           4873 	inc	0 (iy)
   127C 20 07              4874 	jr	NZ,00126$
   127E FD 21rBEs41        4875 	ld	iy,#_ltrpointer
   1282 FD 34 01           4876 	inc	1 (iy)
   1285                    4877 00126$:
   1285                    4878 00114$:
   1285 DD E1              4879 	pop	ix
   1287 C9                 4880 	ret
   1288                    4881 _drawsine_end::
                           4882 ;demo.c:569: void font() {
                           4883 ;	---------------------------------
                           4884 ; Function font
                           4885 ; ---------------------------------
   1288                    4886 _font_start::
   1288                    4887 _font:
                           4888 ;demo.c:570: slowend = 128;
   1288 21rC0s41           4889 	ld	hl,#_slowend + 0
   128B 36 80              4890 	ld	(hl), #0x80
   128D 21rC1s41           4891 	ld	hl,#_slowend + 1
   1290 36 00              4892 	ld	(hl), #0x00
                           4893 ;demo.c:571: drawstrslow("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PARTY PEOPLE",74,60);
   1292 21 4A 3C           4894 	ld	hl,#0x3C4A
   1295 E5                 4895 	push	hl
   1296 21rA0s12           4896 	ld	hl,#__str_6
   1299 E5                 4897 	push	hl
   129A CDrDAs10           4898 	call	_drawstrslow
   129D F1                 4899 	pop	af
   129E F1                 4900 	pop	af
   129F C9                 4901 	ret
   12A0                    4902 _font_end::
   12A0                    4903 __str_6:
   12A0 44 49 47 49 54 41  4904 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   12DC 4F 4E 5F 5F 20 20  4905 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PART"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F 5F 5F 4D 41
        4B 45 20 53 4F 4D
        45 20 4E 4F 49 53
        45 20 50 41 52 54
   1318 59 20 50 45 4F 50  4906 	.ascii "Y PEOPLE"
        4C 45
   1320 00                 4907 	.db 0x00
                           4908 ;demo.c:579: void twister() {
                           4909 ;	---------------------------------
                           4910 ; Function twister
                           4911 ; ---------------------------------
   1321                    4912 _twister_start::
   1321                    4913 _twister:
   1321 DD E5              4914 	push	ix
   1323 DD 21 00 00        4915 	ld	ix,#0
   1327 DD 39              4916 	add	ix,sp
   1329 F5                 4917 	push	af
   132A F5                 4918 	push	af
                           4919 ;demo.c:583: if (twinited == 0) {
   132B 3ArC4s41           4920 	ld	a,(#_twinited+0)
   132E FD 21rC4s41        4921 	ld	iy,#_twinited
   1332 FD B6 01           4922 	or	a,1 (iy)
   1335 C2r57s14           4923 	jp	NZ,00102$
                           4924 ;demo.c:584: cmd.size_x = 74;
   1338 21r32s41           4925 	ld	hl, #_cmd + 8
   133B 36 4A              4926 	ld	(hl),#0x4A
   133D 23                 4927 	inc	hl
   133E 36 00              4928 	ld	(hl),#0x00
                           4929 ;demo.c:585: cmd.size_y = 1;
   1340 21r34s41           4930 	ld	hl, #_cmd + 10
   1343 36 01              4931 	ld	(hl),#0x01
   1345 23                 4932 	inc	hl
   1346 36 00              4933 	ld	(hl),#0x00
                           4934 ;demo.c:586: cmd.data = 0;
                           4935 ;demo.c:587: cmd.argument = 0x00; // from 70xY to left
   1348 3E 00              4936 	ld	a,#0x00
   134A 32r36s41           4937 	ld	(#_cmd + 12),a
   134D 32r37s41           4938 	ld	(#_cmd + 13),a
                           4939 ;demo.c:588: cmd.command = 0xd0; // vram to vram, y only
   1350 3E D0              4940 	ld	a,#0xD0
   1352 32r38s41           4941 	ld	(#_cmd + 14),a
                           4942 ;demo.c:589: cmd.source_x = 0;
   1355 21r2As41           4943 	ld	hl,#_cmd
   1358 36 00              4944 	ld	(hl),#0x00
   135A 23                 4945 	inc	hl
   135B 36 00              4946 	ld	(hl),#0x00
                           4947 ;demo.c:590: cmd.source_y = 0;
   135D 01r2Cs41           4948 	ld	bc,#_cmd + 2
   1360 69                 4949 	ld	l,c
   1361 60                 4950 	ld	h,b
   1362 36 00              4951 	ld	(hl),#0x00
   1364 23                 4952 	inc	hl
   1365 36 00              4953 	ld	(hl),#0x00
                           4954 ;demo.c:592: for (y = 0; y < 106; y+=1) {
   1367 DD 36 FE 00        4955 	ld	-2 (ix),#0x00
   136B DD 36 FF 00        4956 	ld	-1 (ix),#0x00
   136F                    4957 00105$:
   136F DD 7E FE           4958 	ld	a,-2 (ix)
   1372 D6 6A              4959 	sub	a,#0x6A
   1374 DD 7E FF           4960 	ld	a,-1 (ix)
   1377 DE 00              4961 	sbc	a,#0x00
   1379 F2r02s14           4962 	jp	P,00108$
                           4963 ;demo.c:593: waitVB();
   137C 76                 4964 		halt 
                           4965 ;demo.c:594: cmd.dest_x = 0;
   137D 11r2Es41           4966 	ld	de,#_cmd + 4
   1380 EB                 4967 	ex	de,hl
   1381 36 00              4968 	ld	(hl),#0x00
   1383 23                 4969 	inc	hl
   1384 36 00              4970 	ld	(hl),#0x00
                           4971 ;demo.c:595: cmd.dest_y = 106+y;
   1386 11r30s41           4972 	ld	de,#_cmd + 6
   1389 DD 7E FE           4973 	ld	a,-2 (ix)
   138C C6 6A              4974 	add	a,#0x6A
   138E 4F                 4975 	ld	c,a
   138F DD 7E FF           4976 	ld	a,-1 (ix)
   1392 CE 00              4977 	adc	a,#0x00
   1394 47                 4978 	ld	b,a
   1395 EB                 4979 	ex	de,hl
   1396 71                 4980 	ld	(hl),c
   1397 23                 4981 	inc	hl
   1398 70                 4982 	ld	(hl),b
                           4983 ;demo.c:596: vdp_copier(&cmd);
   1399 C5                 4984 	push	bc
   139A 21r2As41           4985 	ld	hl,#_cmd
   139D E5                 4986 	push	hl
   139E CDr00s00           4987 	call	_vdp_copier
   13A1 F1                 4988 	pop	af
   13A2 C1                 4989 	pop	bc
                           4990 ;demo.c:597: cmd.dest_x = 256-74;
   13A3 11r2Es41           4991 	ld	de,#_cmd + 4
   13A6 EB                 4992 	ex	de,hl
   13A7 36 B6              4993 	ld	(hl),#0xB6
   13A9 23                 4994 	inc	hl
   13AA 36 00              4995 	ld	(hl),#0x00
                           4996 ;demo.c:598: cmd.dest_y = 106+y;
   13AC 11r30s41           4997 	ld	de,#_cmd + 6
   13AF EB                 4998 	ex	de,hl
   13B0 71                 4999 	ld	(hl),c
   13B1 23                 5000 	inc	hl
   13B2 70                 5001 	ld	(hl),b
                           5002 ;demo.c:599: vdp_copier(&cmd);
   13B3 21r2As41           5003 	ld	hl,#_cmd
   13B6 E5                 5004 	push	hl
   13B7 CDr00s00           5005 	call	_vdp_copier
   13BA F1                 5006 	pop	af
                           5007 ;demo.c:601: cmd.dest_x = 0;
   13BB 21r2Es41           5008 	ld	hl, #_cmd + 4
   13BE 36 00              5009 	ld	(hl),#0x00
   13C0 23                 5010 	inc	hl
   13C1 36 00              5011 	ld	(hl),#0x00
                           5012 ;demo.c:602: cmd.dest_y = 106-y;
   13C3 01r30s41           5013 	ld	bc,#_cmd + 6
   13C6 3E 6A              5014 	ld	a,#0x6A
   13C8 DD 96 FE           5015 	sub	a,-2 (ix)
   13CB 5F                 5016 	ld	e,a
   13CC 3E 00              5017 	ld	a,#0x00
   13CE DD 9E FF           5018 	sbc	a,-1 (ix)
   13D1 57                 5019 	ld	d,a
   13D2 69                 5020 	ld	l,c
   13D3 60                 5021 	ld	h,b
   13D4 73                 5022 	ld	(hl),e
   13D5 23                 5023 	inc	hl
   13D6 72                 5024 	ld	(hl),d
                           5025 ;demo.c:603: vdp_copier(&cmd);
   13D7 D5                 5026 	push	de
   13D8 21r2As41           5027 	ld	hl,#_cmd
   13DB E5                 5028 	push	hl
   13DC CDr00s00           5029 	call	_vdp_copier
   13DF F1                 5030 	pop	af
   13E0 D1                 5031 	pop	de
                           5032 ;demo.c:604: cmd.dest_x = 256-74;
   13E1 21r2Es41           5033 	ld	hl, #_cmd + 4
   13E4 36 B6              5034 	ld	(hl),#0xB6
   13E6 23                 5035 	inc	hl
   13E7 36 00              5036 	ld	(hl),#0x00
                           5037 ;demo.c:605: cmd.dest_y = 106-y;
   13E9 21r30s41           5038 	ld	hl, #_cmd + 6
   13EC 73                 5039 	ld	(hl),e
   13ED 23                 5040 	inc	hl
   13EE 72                 5041 	ld	(hl),d
                           5042 ;demo.c:606: vdp_copier(&cmd);
   13EF 21r2As41           5043 	ld	hl,#_cmd
   13F2 E5                 5044 	push	hl
   13F3 CDr00s00           5045 	call	_vdp_copier
   13F6 F1                 5046 	pop	af
                           5047 ;demo.c:592: for (y = 0; y < 106; y+=1) {
   13F7 DD 34 FE           5048 	inc	-2 (ix)
   13FA 20 03              5049 	jr	NZ,00130$
   13FC DD 34 FF           5050 	inc	-1 (ix)
   13FF                    5051 00130$:
   13FF C3r6Fs13           5052 	jp	00105$
   1402                    5053 00108$:
                           5054 ;demo.c:610: cmd.dest_x = 72;
   1402 21r2Es41           5055 	ld	hl, #_cmd + 4
   1405 36 48              5056 	ld	(hl),#0x48
   1407 23                 5057 	inc	hl
   1408 36 00              5058 	ld	(hl),#0x00
                           5059 ;demo.c:611: cmd.size_x = 140;
   140A 21r32s41           5060 	ld	hl, #_cmd + 8
   140D 36 8C              5061 	ld	(hl),#0x8C
   140F 23                 5062 	inc	hl
   1410 36 00              5063 	ld	(hl),#0x00
                           5064 ;demo.c:612: cmd.size_y = 2;
   1412 21r34s41           5065 	ld	hl, #_cmd + 10
   1415 36 02              5066 	ld	(hl),#0x02
   1417 23                 5067 	inc	hl
   1418 36 00              5068 	ld	(hl),#0x00
                           5069 ;demo.c:613: for (y = 212-2; y >= 0; y-=2) {
   141A 01 D2 00           5070 	ld	bc,#0x00D2
   141D                    5071 00109$:
   141D 78                 5072 	ld	a,b
   141E CB 7F              5073 	bit	7,a
   1420 20 16              5074 	jr	NZ,00112$
                           5075 ;demo.c:614: waitVB();
   1422 76                 5076 		halt 
                           5077 ;demo.c:615: cmd.dest_y = y;
   1423 11r30s41           5078 	ld	de,#_cmd + 6
   1426 EB                 5079 	ex	de,hl
   1427 71                 5080 	ld	(hl),c
   1428 23                 5081 	inc	hl
   1429 70                 5082 	ld	(hl),b
                           5083 ;demo.c:616: vdp_copier(&cmd);
   142A C5                 5084 	push	bc
   142B 21r2As41           5085 	ld	hl,#_cmd
   142E E5                 5086 	push	hl
   142F CDr00s00           5087 	call	_vdp_copier
   1432 F1                 5088 	pop	af
   1433 C1                 5089 	pop	bc
                           5090 ;demo.c:613: for (y = 212-2; y >= 0; y-=2) {
   1434 0B                 5091 	dec	bc
   1435 0B                 5092 	dec	bc
   1436 18 E5              5093 	jr	00109$
   1438                    5094 00112$:
                           5095 ;demo.c:619: twinited = 1;
   1438 21rC4s41           5096 	ld	hl,#_twinited + 0
   143B 36 01              5097 	ld	(hl), #0x01
   143D 21rC5s41           5098 	ld	hl,#_twinited + 1
   1440 36 00              5099 	ld	(hl), #0x00
                           5100 ;demo.c:620: vdp_load_palette(twister_palette);
   1442 21rA6s40           5101 	ld	hl,#_twister_palette
   1445 E5                 5102 	push	hl
   1446 CDr00s00           5103 	call	_vdp_load_palette
   1449 F1                 5104 	pop	af
                           5105 ;demo.c:621: drawstr2x("DSS",80,15);
   144A 21 50 0F           5106 	ld	hl,#0x0F50
   144D E5                 5107 	push	hl
   144E 21rA0s15           5108 	ld	hl,#__str_7
   1451 E5                 5109 	push	hl
   1452 CDr78s11           5110 	call	_drawstr2x
   1455 F1                 5111 	pop	af
   1456 F1                 5112 	pop	af
   1457                    5113 00102$:
                           5114 ;demo.c:625: cmd.size_x = 70;
   1457 21r32s41           5115 	ld	hl, #_cmd + 8
   145A 36 46              5116 	ld	(hl),#0x46
   145C 23                 5117 	inc	hl
   145D 36 00              5118 	ld	(hl),#0x00
                           5119 ;demo.c:626: cmd.size_y = 2;
   145F 21r34s41           5120 	ld	hl, #_cmd + 10
   1462 36 02              5121 	ld	(hl),#0x02
   1464 23                 5122 	inc	hl
   1465 36 00              5123 	ld	(hl),#0x00
                           5124 ;demo.c:627: cmd.data = 0;
   1467 3E 00              5125 	ld	a,#0x00
   1469 32r36s41           5126 	ld	(#_cmd + 12),a
                           5127 ;demo.c:628: cmd.argument = 0x04; // from 70xY to left
   146C 3E 04              5128 	ld	a,#0x04
   146E 32r37s41           5129 	ld	(#_cmd + 13),a
                           5130 ;demo.c:629: cmd.command = 0xe0; // vram to vram, y only
   1471 01r38s41           5131 	ld	bc,#_cmd + 14
   1474 3E E0              5132 	ld	a,#0xE0
   1476 02                 5133 	ld	(bc),a
                           5134 ;demo.c:630: cmd.source_x = 70;
   1477 21r2As41           5135 	ld	hl,#_cmd
   147A 36 46              5136 	ld	(hl),#0x46
   147C 23                 5137 	inc	hl
   147D 36 00              5138 	ld	(hl),#0x00
                           5139 ;demo.c:631: cmd.dest_x = 70;
   147F 11r2Es41           5140 	ld	de,#_cmd + 4
   1482 EB                 5141 	ex	de,hl
   1483 36 46              5142 	ld	(hl),#0x46
   1485 23                 5143 	inc	hl
   1486 36 00              5144 	ld	(hl),#0x00
                           5145 ;demo.c:633: twialku++;
   1488 FD 21rC6s41        5146 	ld	iy,#_twialku
   148C FD 34 00           5147 	inc	0 (iy)
   148F 20 07              5148 	jr	NZ,00131$
   1491 FD 21rC6s41        5149 	ld	iy,#_twialku
   1495 FD 34 01           5150 	inc	1 (iy)
   1498                    5151 00131$:
                           5152 ;demo.c:635: if (twialku > 212) twialku = 212;
   1498 3E D4              5153 	ld	a,#0xD4
   149A FD 21rC6s41        5154 	ld	iy,#_twialku
   149E FD 96 00           5155 	sub	a,0 (iy)
   14A1 3E 00              5156 	ld	a,#0x00
   14A3 FD 21rC6s41        5157 	ld	iy,#_twialku
   14A7 FD 9E 01           5158 	sbc	a,1 (iy)
   14AA F2rB7s14           5159 	jp	P,00104$
   14AD 21rC6s41           5160 	ld	hl,#_twialku + 0
   14B0 36 D4              5161 	ld	(hl), #0xD4
   14B2 21rC7s41           5162 	ld	hl,#_twialku + 1
   14B5 36 00              5163 	ld	(hl), #0x00
   14B7                    5164 00104$:
                           5165 ;demo.c:637: cmd.command = 0xd0; // vram to vram, y only
   14B7 3E D0              5166 	ld	a,#0xD0
   14B9 02                 5167 	ld	(bc),a
                           5168 ;demo.c:638: for (y = 104-(twialku>>1); y < 106+(twialku>>1); y+=2) {
   14BA 21rC6s41           5169 	ld	hl,#_twialku + 0
   14BD 4E                 5170 	ld	c,(hl)
   14BE 21rC7s41           5171 	ld	hl,#_twialku + 1
   14C1 46                 5172 	ld	b,(hl)
   14C2 CB 28              5173 	sra	b
   14C4 CB 19              5174 	rr	c
   14C6 3E 68              5175 	ld	a,#0x68
   14C8 91                 5176 	sub	a,c
   14C9 4F                 5177 	ld	c,a
   14CA 3E 00              5178 	ld	a,#0x00
   14CC 98                 5179 	sbc	a,b
   14CD 47                 5180 	ld	b,a
   14CE                    5181 00113$:
   14CE 21rC6s41           5182 	ld	hl,#_twialku + 0
   14D1 5E                 5183 	ld	e,(hl)
   14D2 21rC7s41           5184 	ld	hl,#_twialku + 1
   14D5 56                 5185 	ld	d,(hl)
   14D6 CB 2A              5186 	sra	d
   14D8 CB 1B              5187 	rr	e
   14DA 21 6A 00           5188 	ld	hl,#0x006A
   14DD 19                 5189 	add	hl,de
   14DE EB                 5190 	ex	de,hl
   14DF 79                 5191 	ld	a,c
   14E0 93                 5192 	sub	a,e
   14E1 78                 5193 	ld	a,b
   14E2 9A                 5194 	sbc	a,d
   14E3 F2r2Fs15           5195 	jp	P,00116$
                           5196 ;demo.c:639: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+80;
   14E6 21r2Cs41           5197 	ld	hl,#_cmd + 2
   14E9 DD 75 FC           5198 	ld	-4 (ix),l
   14EC DD 74 FD           5199 	ld	-3 (ix),h
   14EF 59                 5200 	ld	e,c
   14F0 50                 5201 	ld	d,b
   14F1 CB 2A              5202 	sra	d
   14F3 CB 1B              5203 	rr	e
   14F5 3ArC2s41           5204 	ld	a,(#_ff+0)
   14F8 83                 5205 	add	a,e
   14F9 5F                 5206 	ld	e,a
   14FA 3ArC3s41           5207 	ld	a,(#_ff+1)
   14FD 8A                 5208 	adc	a,d
   14FE 16 00              5209 	ld	d,#0x00
   1500 21r00s00           5210 	ld	hl,#_sintab
   1503 19                 5211 	add	hl,de
   1504 5E                 5212 	ld	e,(hl)
   1505 CB 2B              5213 	sra	e
   1507 7B                 5214 	ld	a,e
   1508 17                 5215 	rla	
   1509 9F                 5216 	sbc	a,a
   150A 57                 5217 	ld	d,a
   150B 21 50 02           5218 	ld	hl,#0x0250
   150E 19                 5219 	add	hl,de
   150F EB                 5220 	ex	de,hl
   1510 DD 6E FC           5221 	ld	l,-4 (ix)
   1513 DD 66 FD           5222 	ld	h,-3 (ix)
   1516 73                 5223 	ld	(hl),e
   1517 23                 5224 	inc	hl
   1518 72                 5225 	ld	(hl),d
                           5226 ;demo.c:640: cmd.dest_y = y;
   1519 11r30s41           5227 	ld	de,#_cmd + 6
   151C EB                 5228 	ex	de,hl
   151D 71                 5229 	ld	(hl),c
   151E 23                 5230 	inc	hl
   151F 70                 5231 	ld	(hl),b
                           5232 ;demo.c:641: vdp_copier(&cmd);
   1520 C5                 5233 	push	bc
   1521 21r2As41           5234 	ld	hl,#_cmd
   1524 E5                 5235 	push	hl
   1525 CDr00s00           5236 	call	_vdp_copier
   1528 F1                 5237 	pop	af
   1529 C1                 5238 	pop	bc
                           5239 ;demo.c:638: for (y = 104-(twialku>>1); y < 106+(twialku>>1); y+=2) {
   152A 03                 5240 	inc	bc
   152B 03                 5241 	inc	bc
   152C C3rCEs14           5242 	jp	00113$
   152F                    5243 00116$:
                           5244 ;demo.c:644: msx2_palette(4,PLY_PSGReg8+ff>>2,PLY_PSGReg9+ff>>3,ff>>2);
   152F 21rC2s41           5245 	ld	hl,#_ff + 0
   1532 4E                 5246 	ld	c,(hl)
   1533 21rC3s41           5247 	ld	hl,#_ff + 1
   1536 46                 5248 	ld	b,(hl)
   1537 CB 28              5249 	sra	b
   1539 CB 19              5250 	rr	c
   153B CB 28              5251 	sra	b
   153D CB 19              5252 	rr	c
   153F 21r00s00           5253 	ld	hl,#_PLY_PSGReg9 + 0
   1542 5E                 5254 	ld	e,(hl)
   1543 16 00              5255 	ld	d,#0x00
   1545 21rC2s41           5256 	ld	hl,#_ff
   1548 7B                 5257 	ld	a,e
   1549 86                 5258 	add	a,(hl)
   154A 5F                 5259 	ld	e,a
   154B 7A                 5260 	ld	a,d
   154C 23                 5261 	inc	hl
   154D 8E                 5262 	adc	a,(hl)
   154E 57                 5263 	ld	d,a
   154F CB 2A              5264 	sra	d
   1551 CB 1B              5265 	rr	e
   1553 CB 2A              5266 	sra	d
   1555 CB 1B              5267 	rr	e
   1557 CB 2A              5268 	sra	d
   1559 CB 1B              5269 	rr	e
   155B 43                 5270 	ld	b,e
   155C 21r00s00           5271 	ld	hl,#_PLY_PSGReg8 + 0
   155F 5E                 5272 	ld	e,(hl)
   1560 16 00              5273 	ld	d,#0x00
   1562 21rC2s41           5274 	ld	hl,#_ff
   1565 7B                 5275 	ld	a,e
   1566 86                 5276 	add	a,(hl)
   1567 5F                 5277 	ld	e,a
   1568 7A                 5278 	ld	a,d
   1569 23                 5279 	inc	hl
   156A 8E                 5280 	adc	a,(hl)
   156B 57                 5281 	ld	d,a
   156C CB 2A              5282 	sra	d
   156E CB 1B              5283 	rr	e
   1570 CB 2A              5284 	sra	d
   1572 CB 1B              5285 	rr	e
   1574 79                 5286 	ld	a,c
   1575 F5                 5287 	push	af
   1576 33                 5288 	inc	sp
   1577 C5                 5289 	push	bc
   1578 33                 5290 	inc	sp
   1579 53                 5291 	ld	d,e
   157A 1E 04              5292 	ld	e,#0x04
   157C D5                 5293 	push	de
   157D CDr00s00           5294 	call	_msx2_palette
   1580 F1                 5295 	pop	af
   1581 F1                 5296 	pop	af
                           5297 ;demo.c:646: font();
   1582 CDr88s12           5298 	call	_font
                           5299 ;demo.c:648: ff+=4;
   1585 21rC2s41           5300 	ld	hl,#_ff
   1588 7E                 5301 	ld	a,(hl)
   1589 C6 04              5302 	add	a,#0x04
   158B 23                 5303 	inc	hl
   158C 2B                 5304 	dec	hl
   158D C5                 5305 	push	bc
   158E 4F                 5306 	ld	c, a
   158F 23                 5307 	inc	hl
   1590 7E                 5308 	ld	a, (hl)
   1591 47                 5309 	ld	b, a
   1592 79                 5310 	ld	a, c
   1593 2B                 5311 	dec	hl
   1594 77                 5312 	ld	(hl), a
   1595 78                 5313 	ld	a, b
   1596 C1                 5314 	pop	bc
   1597 CE 00              5315 	adc	a,#0x00
   1599 23                 5316 	inc	hl
   159A 77                 5317 	ld	(hl),a
   159B DD F9              5318 	ld	sp,ix
   159D DD E1              5319 	pop	ix
   159F C9                 5320 	ret
   15A0                    5321 _twister_end::
   15A0                    5322 __str_7:
   15A0 44 53 53           5323 	.ascii "DSS"
   15A3 00                 5324 	.db 0x00
                           5325 ;demo.c:659: void bulbs() {
                           5326 ;	---------------------------------
                           5327 ; Function bulbs
                           5328 ; ---------------------------------
   15A4                    5329 _bulbs_start::
   15A4                    5330 _bulbs:
   15A4 DD E5              5331 	push	ix
   15A6 DD 21 00 00        5332 	ld	ix,#0
   15AA DD 39              5333 	add	ix,sp
   15AC 21 FA FF           5334 	ld	hl,#-6
   15AF 39                 5335 	add	hl,sp
   15B0 F9                 5336 	ld	sp,hl
                           5337 ;demo.c:663: ender+=enderdir;
   15B1 21rD0s41           5338 	ld	hl,#_enderdir
   15B4 D5                 5339 	push	de
   15B5 FD 21rCEs41        5340 	ld	iy,#_ender
   15B9 FD E5              5341 	push	iy
   15BB D1                 5342 	pop	de
   15BC 1A                 5343 	ld	a,(de)
   15BD 86                 5344 	add	a,(hl)
   15BE 13                 5345 	inc	de
   15BF 1B                 5346 	dec	de
   15C0 C5                 5347 	push	bc
   15C1 4F                 5348 	ld	c, a
   15C2 13                 5349 	inc	de
   15C3 1A                 5350 	ld	a, (de)
   15C4 47                 5351 	ld	b, a
   15C5 79                 5352 	ld	a, c
   15C6 1B                 5353 	dec	de
   15C7 12                 5354 	ld	(de), a
   15C8 78                 5355 	ld	a, b
   15C9 C1                 5356 	pop	bc
   15CA 23                 5357 	inc	hl
   15CB 8E                 5358 	adc	a,(hl)
   15CC 13                 5359 	inc	de
   15CD 12                 5360 	ld	(de),a
   15CE D1                 5361 	pop	de
                           5362 ;demo.c:664: if (ender < 2) { enderdir = -enderdir; }
   15CF 3ArCEs41           5363 	ld	a,(#_ender+0)
   15D2 D6 02              5364 	sub	a,#0x02
   15D4 3ArCFs41           5365 	ld	a,(#_ender+1)
   15D7 DE 00              5366 	sbc	a,#0x00
   15D9 F2rFDs15           5367 	jp	P,00102$
   15DC AF                 5368 	xor	a,a
   15DD FD 21rD0s41        5369 	ld	iy,#_enderdir
   15E1 3E 00              5370 	ld	a,#0x00
   15E3 FD 9E 00           5371 	sbc	a,0 (iy)
   15E6 FD 21rD0s41        5372 	ld	iy,#_enderdir
   15EA FD 77 00           5373 	ld	0 (iy),a
   15ED FD 21rD0s41        5374 	ld	iy,#_enderdir
   15F1 3E 00              5375 	ld	a,#0x00
   15F3 FD 9E 01           5376 	sbc	a,1 (iy)
   15F6 FD 21rD0s41        5377 	ld	iy,#_enderdir
   15FA FD 77 01           5378 	ld	1 (iy),a
   15FD                    5379 00102$:
                           5380 ;demo.c:665: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   15FD 3ArCEs41           5381 	ld	a,(#_ender+0)
   1600 D6 D4              5382 	sub	a,#0xD4
   1602 3ArCFs41           5383 	ld	a,(#_ender+1)
   1605 DE 00              5384 	sbc	a,#0x00
   1607 FAr2Ds16           5385 	jp	M,00104$
   160A AF                 5386 	xor	a,a
   160B FD 21rD0s41        5387 	ld	iy,#_enderdir
   160F 3E 00              5388 	ld	a,#0x00
   1611 FD 9E 00           5389 	sbc	a,0 (iy)
   1614 21rD0s41           5390 	ld	hl,#_enderdir + 0
   1617 77                 5391 	ld	(hl), a
   1618 FD 21rD0s41        5392 	ld	iy,#_enderdir
   161C 3E 00              5393 	ld	a,#0x00
   161E FD 9E 01           5394 	sbc	a,1 (iy)
   1621 21rD1s41           5395 	ld	hl,#_enderdir + 1
   1624 77                 5396 	ld	(hl), a
   1625 2ArD2s41           5397 	ld	hl,(_sy)
   1628 2B                 5398 	dec	hl
   1629 2B                 5399 	dec	hl
   162A 22rD2s41           5400 	ld	(_sy),hl
   162D                    5401 00104$:
                           5402 ;demo.c:667: enderend = ender + 92;
   162D 3ArCEs41           5403 	ld	a,(#_ender+0)
   1630 C6 5C              5404 	add	a,#0x5C
   1632 DD 77 FE           5405 	ld	-2 (ix),a
   1635 3ArCFs41           5406 	ld	a,(#_ender+1)
   1638 CE 00              5407 	adc	a,#0x00
   163A DD 77 FF           5408 	ld	-1 (ix),a
                           5409 ;demo.c:669: if (enderend > 212) enderend = 212;
   163D 3E D4              5410 	ld	a,#0xD4
   163F DD 96 FE           5411 	sub	a,-2 (ix)
   1642 3E 00              5412 	ld	a,#0x00
   1644 DD 9E FF           5413 	sbc	a,-1 (ix)
   1647 F2r52s16           5414 	jp	P,00106$
   164A DD 36 FE D4        5415 	ld	-2 (ix),#0xD4
   164E DD 36 FF 00        5416 	ld	-1 (ix),#0x00
   1652                    5417 00106$:
                           5418 ;demo.c:670: if (enderend > 212-16) sy = 16-(212-enderend);
   1652 3E C4              5419 	ld	a,#0xC4
   1654 DD 96 FE           5420 	sub	a,-2 (ix)
   1657 3E 00              5421 	ld	a,#0x00
   1659 DD 9E FF           5422 	sbc	a,-1 (ix)
   165C F2r77s16           5423 	jp	P,00108$
   165F 3E D4              5424 	ld	a,#0xD4
   1661 DD 96 FE           5425 	sub	a,-2 (ix)
   1664 5F                 5426 	ld	e,a
   1665 3E 00              5427 	ld	a,#0x00
   1667 DD 9E FF           5428 	sbc	a,-1 (ix)
   166A 57                 5429 	ld	d,a
   166B 21rD2s41           5430 	ld	hl,#_sy
   166E 3E 10              5431 	ld	a,#0x10
   1670 93                 5432 	sub	a,e
   1671 77                 5433 	ld	(hl),a
   1672 3E 00              5434 	ld	a,#0x00
   1674 9A                 5435 	sbc	a,d
   1675 23                 5436 	inc	hl
   1676 77                 5437 	ld	(hl),a
   1677                    5438 00108$:
                           5439 ;demo.c:672: if(bulbflipper == 1) {
   1677 3ArC8s41           5440 	ld	a,(#_bulbflipper+0)
   167A D6 01              5441 	sub	a,#0x01
   167C 20 06              5442 	jr	NZ,00133$
   167E 3ArC9s41           5443 	ld	a,(#_bulbflipper+1)
   1681 B7                 5444 	or	a,a
   1682 28 03              5445 	jr	Z,00134$
   1684                    5446 00133$:
   1684 C3r3Ds17           5447 	jp	00110$
   1687                    5448 00134$:
                           5449 ;demo.c:673: cmd.size_x = 72;
   1687 11r32s41           5450 	ld	de,#_cmd + 8
   168A EB                 5451 	ex	de,hl
   168B 36 48              5452 	ld	(hl),#0x48
   168D 23                 5453 	inc	hl
   168E 36 00              5454 	ld	(hl),#0x00
                           5455 ;demo.c:674: cmd.size_y = sy;
   1690 11r34s41           5456 	ld	de,#_cmd + 10
   1693 ED 4BrD2s41        5457 	ld	bc,(_sy)
   1697 6B                 5458 	ld	l,e
   1698 62                 5459 	ld	h,d
   1699 71                 5460 	ld	(hl),c
   169A 23                 5461 	inc	hl
   169B 70                 5462 	ld	(hl),b
                           5463 ;demo.c:675: cmd.data = 0;
   169C 3E 00              5464 	ld	a,#0x00
   169E 32r36s41           5465 	ld	(#_cmd + 12),a
                           5466 ;demo.c:676: cmd.argument = 0x04; // from 72xY to left
   16A1 3E 04              5467 	ld	a,#0x04
   16A3 32r37s41           5468 	ld	(#_cmd + 13),a
                           5469 ;demo.c:677: cmd.command = 0xe0; // vram to vram, y only
   16A6 01r38s41           5470 	ld	bc,#_cmd + 14
   16A9 3E E0              5471 	ld	a,#0xE0
   16AB 02                 5472 	ld	(bc),a
                           5473 ;demo.c:678: cmd.source_x = 72;
   16AC 21r2As41           5474 	ld	hl,#_cmd
   16AF 36 48              5475 	ld	(hl),#0x48
   16B1 23                 5476 	inc	hl
   16B2 36 00              5477 	ld	(hl),#0x00
                           5478 ;demo.c:679: cmd.dest_x = 72;
   16B4 21r2Es41           5479 	ld	hl, #_cmd + 4
   16B7 36 48              5480 	ld	(hl),#0x48
   16B9 23                 5481 	inc	hl
   16BA 36 00              5482 	ld	(hl),#0x00
                           5483 ;demo.c:681: for (y = ender; y < enderend; y+=16) {
   16BC ED 4BrCEs41        5484 	ld	bc,(_ender)
   16C0 DD 71 FC           5485 	ld	-4 (ix),c
   16C3 DD 70 FD           5486 	ld	-3 (ix),b
   16C6                    5487 00112$:
   16C6 DD 7E FC           5488 	ld	a,-4 (ix)
   16C9 DD 96 FE           5489 	sub	a,-2 (ix)
   16CC DD 7E FD           5490 	ld	a,-3 (ix)
   16CF DD 9E FF           5491 	sbc	a,-1 (ix)
   16D2 F2r24s17           5492 	jp	P,00115$
                           5493 ;demo.c:682: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   16D5 01r2Cs41           5494 	ld	bc,#_cmd + 2
   16D8 3ArCAs41           5495 	ld	a,(#_ff1+0)
   16DB DD 86 FC           5496 	add	a,-4 (ix)
   16DE 5F                 5497 	ld	e,a
   16DF 3ArCBs41           5498 	ld	a,(#_ff1+1)
   16E2 DD 8E FD           5499 	adc	a,-3 (ix)
   16E5 16 00              5500 	ld	d,#0x00
   16E7 21r00s00           5501 	ld	hl,#_sintab
   16EA 19                 5502 	add	hl,de
   16EB 5E                 5503 	ld	e,(hl)
   16EC CB 2B              5504 	sra	e
   16EE 7B                 5505 	ld	a,e
   16EF 17                 5506 	rla	
   16F0 9F                 5507 	sbc	a,a
   16F1 57                 5508 	ld	d,a
   16F2 21 40 01           5509 	ld	hl,#0x0140
   16F5 19                 5510 	add	hl,de
   16F6 EB                 5511 	ex	de,hl
   16F7 69                 5512 	ld	l,c
   16F8 60                 5513 	ld	h,b
   16F9 73                 5514 	ld	(hl),e
   16FA 23                 5515 	inc	hl
   16FB 72                 5516 	ld	(hl),d
                           5517 ;demo.c:683: cmd.dest_y = y;
   16FC 11r30s41           5518 	ld	de,#_cmd + 6
   16FF EB                 5519 	ex	de,hl
   1700 DD 7E FC           5520 	ld	a,-4 (ix)
   1703 77                 5521 	ld	(hl),a
   1704 23                 5522 	inc	hl
   1705 DD 7E FD           5523 	ld	a,-3 (ix)
   1708 77                 5524 	ld	(hl),a
                           5525 ;demo.c:684: vdp_copier(&cmd);
   1709 21r2As41           5526 	ld	hl,#_cmd
   170C E5                 5527 	push	hl
   170D CDr00s00           5528 	call	_vdp_copier
   1710 F1                 5529 	pop	af
                           5530 ;demo.c:681: for (y = ender; y < enderend; y+=16) {
   1711 DD 7E FC           5531 	ld	a,-4 (ix)
   1714 C6 10              5532 	add	a,#0x10
   1716 DD 77 FC           5533 	ld	-4 (ix),a
   1719 DD 7E FD           5534 	ld	a,-3 (ix)
   171C CE 00              5535 	adc	a,#0x00
   171E DD 77 FD           5536 	ld	-3 (ix),a
   1721 C3rC6s16           5537 	jp	00112$
   1724                    5538 00115$:
                           5539 ;demo.c:686: ff1+=4;
   1724 21rCAs41           5540 	ld	hl,#_ff1
   1727 7E                 5541 	ld	a,(hl)
   1728 C6 04              5542 	add	a,#0x04
   172A 23                 5543 	inc	hl
   172B 2B                 5544 	dec	hl
   172C C5                 5545 	push	bc
   172D 4F                 5546 	ld	c, a
   172E 23                 5547 	inc	hl
   172F 7E                 5548 	ld	a, (hl)
   1730 47                 5549 	ld	b, a
   1731 79                 5550 	ld	a, c
   1732 2B                 5551 	dec	hl
   1733 77                 5552 	ld	(hl), a
   1734 78                 5553 	ld	a, b
   1735 C1                 5554 	pop	bc
   1736 CE 00              5555 	adc	a,#0x00
   1738 23                 5556 	inc	hl
   1739 77                 5557 	ld	(hl),a
   173A C3rE2s17           5558 	jp	00111$
   173D                    5559 00110$:
                           5560 ;demo.c:690: cmd.size_x = 72;
   173D 11r32s41           5561 	ld	de,#_cmd + 8
   1740 EB                 5562 	ex	de,hl
   1741 36 48              5563 	ld	(hl),#0x48
   1743 23                 5564 	inc	hl
   1744 36 00              5565 	ld	(hl),#0x00
                           5566 ;demo.c:691: cmd.size_y = sy;
   1746 01r34s41           5567 	ld	bc,#_cmd + 10
   1749 ED 5BrD2s41        5568 	ld	de,(_sy)
   174D 69                 5569 	ld	l,c
   174E 60                 5570 	ld	h,b
   174F 73                 5571 	ld	(hl),e
   1750 23                 5572 	inc	hl
   1751 72                 5573 	ld	(hl),d
                           5574 ;demo.c:692: cmd.data = 0;
   1752 11r36s41           5575 	ld	de,#_cmd + 12
   1755 3E 00              5576 	ld	a,#0x00
   1757 12                 5577 	ld	(de),a
                           5578 ;demo.c:693: cmd.argument = 0x00; // from 182xY to right
   1758 11r37s41           5579 	ld	de,#_cmd + 13
   175B 3E 00              5580 	ld	a,#0x00
   175D 12                 5581 	ld	(de),a
                           5582 ;demo.c:694: cmd.command = 0xe0; // vram to vram, y only
   175E 11r38s41           5583 	ld	de,#_cmd + 14
   1761 3E E0              5584 	ld	a,#0xE0
   1763 12                 5585 	ld	(de),a
                           5586 ;demo.c:695: cmd.source_x = 182;
   1764 21r2As41           5587 	ld	hl,#_cmd
   1767 36 B6              5588 	ld	(hl),#0xB6
   1769 23                 5589 	inc	hl
   176A 36 00              5590 	ld	(hl),#0x00
                           5591 ;demo.c:696: cmd.dest_x = 182;
   176C 11r2Es41           5592 	ld	de,#_cmd + 4
   176F 6B                 5593 	ld	l,e
   1770 62                 5594 	ld	h,d
   1771 36 B6              5595 	ld	(hl),#0xB6
   1773 23                 5596 	inc	hl
   1774 36 00              5597 	ld	(hl),#0x00
                           5598 ;demo.c:698: for (y = ender; y < enderend; y+=16) {
   1776 ED 4BrCEs41        5599 	ld	bc,(_ender)
   177A                    5600 00116$:
   177A 79                 5601 	ld	a,c
   177B DD 96 FE           5602 	sub	a,-2 (ix)
   177E 78                 5603 	ld	a,b
   177F DD 9E FF           5604 	sbc	a,-1 (ix)
   1782 F2rCCs17           5605 	jp	P,00119$
                           5606 ;demo.c:699: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1785 21r2Cs41           5607 	ld	hl,#_cmd + 2
   1788 DD 75 FA           5608 	ld	-6 (ix),l
   178B DD 74 FB           5609 	ld	-5 (ix),h
   178E 3ArCCs41           5610 	ld	a,(#_ff2+0)
   1791 81                 5611 	add	a,c
   1792 5F                 5612 	ld	e,a
   1793 3ArCDs41           5613 	ld	a,(#_ff2+1)
   1796 88                 5614 	adc	a,b
   1797 16 00              5615 	ld	d,#0x00
   1799 21r00s00           5616 	ld	hl,#_sintab
   179C 19                 5617 	add	hl,de
   179D 5E                 5618 	ld	e,(hl)
   179E CB 2B              5619 	sra	e
   17A0 7B                 5620 	ld	a,e
   17A1 17                 5621 	rla	
   17A2 9F                 5622 	sbc	a,a
   17A3 57                 5623 	ld	d,a
   17A4 21 40 01           5624 	ld	hl,#0x0140
   17A7 19                 5625 	add	hl,de
   17A8 EB                 5626 	ex	de,hl
   17A9 DD 6E FA           5627 	ld	l,-6 (ix)
   17AC DD 66 FB           5628 	ld	h,-5 (ix)
   17AF 73                 5629 	ld	(hl),e
   17B0 23                 5630 	inc	hl
   17B1 72                 5631 	ld	(hl),d
                           5632 ;demo.c:700: cmd.dest_y = y;
   17B2 11r30s41           5633 	ld	de,#_cmd + 6
   17B5 EB                 5634 	ex	de,hl
   17B6 71                 5635 	ld	(hl),c
   17B7 23                 5636 	inc	hl
   17B8 70                 5637 	ld	(hl),b
                           5638 ;demo.c:701: vdp_copier(&cmd);
   17B9 C5                 5639 	push	bc
   17BA 21r2As41           5640 	ld	hl,#_cmd
   17BD E5                 5641 	push	hl
   17BE CDr00s00           5642 	call	_vdp_copier
   17C1 F1                 5643 	pop	af
   17C2 C1                 5644 	pop	bc
                           5645 ;demo.c:698: for (y = ender; y < enderend; y+=16) {
   17C3 21 10 00           5646 	ld	hl,#0x0010
   17C6 09                 5647 	add	hl,bc
   17C7 4D                 5648 	ld	c,l
   17C8 44                 5649 	ld	b,h
   17C9 C3r7As17           5650 	jp	00116$
   17CC                    5651 00119$:
                           5652 ;demo.c:703: ff2+=4;
   17CC 21rCCs41           5653 	ld	hl,#_ff2
   17CF 7E                 5654 	ld	a,(hl)
   17D0 C6 04              5655 	add	a,#0x04
   17D2 23                 5656 	inc	hl
   17D3 2B                 5657 	dec	hl
   17D4 C5                 5658 	push	bc
   17D5 4F                 5659 	ld	c, a
   17D6 23                 5660 	inc	hl
   17D7 7E                 5661 	ld	a, (hl)
   17D8 47                 5662 	ld	b, a
   17D9 79                 5663 	ld	a, c
   17DA 2B                 5664 	dec	hl
   17DB 77                 5665 	ld	(hl), a
   17DC 78                 5666 	ld	a, b
   17DD C1                 5667 	pop	bc
   17DE CE 00              5668 	adc	a,#0x00
   17E0 23                 5669 	inc	hl
   17E1 77                 5670 	ld	(hl),a
   17E2                    5671 00111$:
                           5672 ;demo.c:706: bulbflipper = -bulbflipper;
   17E2 AF                 5673 	xor	a,a
   17E3 FD 21rC8s41        5674 	ld	iy,#_bulbflipper
   17E7 3E 00              5675 	ld	a,#0x00
   17E9 FD 9E 00           5676 	sbc	a,0 (iy)
   17EC 21rC8s41           5677 	ld	hl,#_bulbflipper + 0
   17EF 77                 5678 	ld	(hl), a
   17F0 FD 21rC8s41        5679 	ld	iy,#_bulbflipper
   17F4 3E 00              5680 	ld	a,#0x00
   17F6 FD 9E 01           5681 	sbc	a,1 (iy)
   17F9 21rC9s41           5682 	ld	hl,#_bulbflipper + 1
   17FC 77                 5683 	ld	(hl), a
   17FD DD F9              5684 	ld	sp,ix
   17FF DD E1              5685 	pop	ix
   1801 C9                 5686 	ret
   1802                    5687 _bulbs_end::
                           5688 ;demo.c:720: void animplay() {
                           5689 ;	---------------------------------
                           5690 ; Function animplay
                           5691 ; ---------------------------------
   1802                    5692 _animplay_start::
   1802                    5693 _animplay:
                           5694 ;demo.c:721: }
   1802 C9                 5695 	ret
   1803                    5696 _animplay_end::
                           5697 ;demo.c:734: void drawbox(uint8_t x, uint8_t y) {
                           5698 ;	---------------------------------
                           5699 ; Function drawbox
                           5700 ; ---------------------------------
   1803                    5701 _drawbox_start::
   1803                    5702 _drawbox:
   1803 DD E5              5703 	push	ix
   1805 DD 21 00 00        5704 	ld	ix,#0
   1809 DD 39              5705 	add	ix,sp
                           5706 ;demo.c:735: cmd.source_x = boxes_x[boxi];
   180B 21rF4s41           5707 	ld	hl,#_boxi
   180E 3ErE5              5708 	ld	a,#<_boxes_x
   1810 86                 5709 	add	a,(hl)
   1811 4F                 5710 	ld	c,a
   1812 3Es41              5711 	ld	a,#>_boxes_x
   1814 CE 00              5712 	adc	a,#0x00
   1816 47                 5713 	ld	b,a
   1817 0A                 5714 	ld	a,(bc)
   1818 4F                 5715 	ld	c,a
   1819 06 00              5716 	ld	b,#0x00
   181B 21r2As41           5717 	ld	hl,#_cmd
   181E 71                 5718 	ld	(hl),c
   181F 23                 5719 	inc	hl
   1820 70                 5720 	ld	(hl),b
                           5721 ;demo.c:736: cmd.source_y = boxes_y[boxi];
   1821 01r2Cs41           5722 	ld	bc,#_cmd + 2
   1824 3ArF4s41           5723 	ld	a,(#_boxi+0)
   1827 87                 5724 	add	a,a
   1828 C6rEA              5725 	add	a,#<_boxes_y
   182A 6F                 5726 	ld	l,a
   182B 3Es41              5727 	ld	a,#>_boxes_y
   182D CE 00              5728 	adc	a,#0x00
   182F 67                 5729 	ld	h,a
   1830 5E                 5730 	ld	e,(hl)
   1831 23                 5731 	inc	hl
   1832 56                 5732 	ld	d,(hl)
   1833 69                 5733 	ld	l,c
   1834 60                 5734 	ld	h,b
   1835 73                 5735 	ld	(hl),e
   1836 23                 5736 	inc	hl
   1837 72                 5737 	ld	(hl),d
                           5738 ;demo.c:737: cmd.dest_x = x;
   1838 01r2Es41           5739 	ld	bc,#_cmd + 4
   183B DD 5E 04           5740 	ld	e,4 (ix)
   183E 16 00              5741 	ld	d,#0x00
   1840 69                 5742 	ld	l,c
   1841 60                 5743 	ld	h,b
   1842 73                 5744 	ld	(hl),e
   1843 23                 5745 	inc	hl
   1844 72                 5746 	ld	(hl),d
                           5747 ;demo.c:738: cmd.dest_y = y;
   1845 01r30s41           5748 	ld	bc,#_cmd + 6
   1848 DD 5E 05           5749 	ld	e,5 (ix)
   184B 16 00              5750 	ld	d,#0x00
   184D 69                 5751 	ld	l,c
   184E 60                 5752 	ld	h,b
   184F 73                 5753 	ld	(hl),e
   1850 23                 5754 	inc	hl
   1851 72                 5755 	ld	(hl),d
                           5756 ;demo.c:739: cmd.size_x = 36;
   1852 21r32s41           5757 	ld	hl, #_cmd + 8
   1855 36 24              5758 	ld	(hl),#0x24
   1857 23                 5759 	inc	hl
   1858 36 00              5760 	ld	(hl),#0x00
                           5761 ;demo.c:740: cmd.size_y = 36;
   185A 21r34s41           5762 	ld	hl, #_cmd + 10
   185D 36 24              5763 	ld	(hl),#0x24
   185F 23                 5764 	inc	hl
   1860 36 00              5765 	ld	(hl),#0x00
                           5766 ;demo.c:741: cmd.data = 0;
                           5767 ;demo.c:742: cmd.argument = 0x00;
   1862 3E 00              5768 	ld	a,#0x00
   1864 32r36s41           5769 	ld	(#_cmd + 12),a
   1867 32r37s41           5770 	ld	(#_cmd + 13),a
                           5771 ;demo.c:743: cmd.command = 0x98; // TIMP sprite
   186A 3E 98              5772 	ld	a,#0x98
   186C 32r38s41           5773 	ld	(#_cmd + 14),a
                           5774 ;demo.c:744: vdp_copier(&cmd);
   186F 21r2As41           5775 	ld	hl,#_cmd
   1872 E5                 5776 	push	hl
   1873 CDr00s00           5777 	call	_vdp_copier
   1876 F1                 5778 	pop	af
                           5779 ;demo.c:746: prevx = x;
   1877 DD 7E 04           5780 	ld	a,4 (ix)
   187A 21rE1s41           5781 	ld	hl,#_prevx + 0
   187D 77                 5782 	ld	(hl), a
   187E 21rE2s41           5783 	ld	hl,#_prevx + 1
   1881 36 00              5784 	ld	(hl), #0x00
                           5785 ;demo.c:747: prevy = y;
   1883 DD 7E 05           5786 	ld	a,5 (ix)
   1886 21rE3s41           5787 	ld	hl,#_prevy + 0
   1889 77                 5788 	ld	(hl), a
   188A 21rE4s41           5789 	ld	hl,#_prevy + 1
   188D 36 00              5790 	ld	(hl), #0x00
   188F DD E1              5791 	pop	ix
   1891 C9                 5792 	ret
   1892                    5793 _drawbox_end::
                           5794 ;demo.c:761: void boxes() {
                           5795 ;	---------------------------------
                           5796 ; Function boxes
                           5797 ; ---------------------------------
   1892                    5798 _boxes_start::
   1892                    5799 _boxes:
   1892 DD E5              5800 	push	ix
   1894 DD 21 00 00        5801 	ld	ix,#0
   1898 DD 39              5802 	add	ix,sp
   189A F5                 5803 	push	af
                           5804 ;demo.c:765: if (bx < 0) return;
   189B FD 21rF5s41        5805 	ld	iy,#_bx
   189F FD CB 01 7E        5806 	bit	7,1 (iy)
   18A3 C2r55s1D           5807 	jp	NZ,00151$
                           5808 ;demo.c:767: if (bonc == 1) {
   18A6 3ArFDs41           5809 	ld	a,(#_bonc+0)
   18A9 D6 01              5810 	sub	a,#0x01
   18AB 20 06              5811 	jr	NZ,00181$
   18AD 3ArFEs41           5812 	ld	a,(#_bonc+1)
   18B0 B7                 5813 	or	a,a
   18B1 28 02              5814 	jr	Z,00182$
   18B3                    5815 00181$:
   18B3 18 4D              5816 	jr	00104$
   18B5                    5817 00182$:
                           5818 ;demo.c:769: cmd.source_x = 0;
   18B5 21r2As41           5819 	ld	hl,#_cmd
   18B8 36 00              5820 	ld	(hl),#0x00
   18BA 23                 5821 	inc	hl
   18BB 36 00              5822 	ld	(hl),#0x00
                           5823 ;demo.c:770: cmd.source_y = 256;
   18BD 21r2Cs41           5824 	ld	hl, #_cmd + 2
   18C0 36 00              5825 	ld	(hl),#0x00
   18C2 23                 5826 	inc	hl
   18C3 36 01              5827 	ld	(hl),#0x01
                           5828 ;demo.c:771: cmd.dest_x = pbx;
   18C5 01r2Es41           5829 	ld	bc,#_cmd + 4
   18C8 ED 5BrFFs41        5830 	ld	de,(_pbx)
   18CC 69                 5831 	ld	l,c
   18CD 60                 5832 	ld	h,b
   18CE 73                 5833 	ld	(hl),e
   18CF 23                 5834 	inc	hl
   18D0 72                 5835 	ld	(hl),d
                           5836 ;demo.c:772: cmd.dest_y = pbt;
   18D1 01r30s41           5837 	ld	bc,#_cmd + 6
   18D4 ED 5Br01s42        5838 	ld	de,(_pbt)
   18D8 69                 5839 	ld	l,c
   18D9 60                 5840 	ld	h,b
   18DA 73                 5841 	ld	(hl),e
   18DB 23                 5842 	inc	hl
   18DC 72                 5843 	ld	(hl),d
                           5844 ;demo.c:773: cmd.size_x = 36;
   18DD 21r32s41           5845 	ld	hl, #_cmd + 8
   18E0 36 24              5846 	ld	(hl),#0x24
   18E2 23                 5847 	inc	hl
   18E3 36 00              5848 	ld	(hl),#0x00
                           5849 ;demo.c:774: cmd.size_y = 36;
   18E5 21r34s41           5850 	ld	hl, #_cmd + 10
   18E8 36 24              5851 	ld	(hl),#0x24
   18EA 23                 5852 	inc	hl
   18EB 36 00              5853 	ld	(hl),#0x00
                           5854 ;demo.c:775: cmd.data = 0;
                           5855 ;demo.c:776: cmd.argument = 0x00;
   18ED 3E 00              5856 	ld	a,#0x00
   18EF 32r36s41           5857 	ld	(#_cmd + 12),a
   18F2 32r37s41           5858 	ld	(#_cmd + 13),a
                           5859 ;demo.c:777: cmd.command = 0xD0; // HMMM
   18F5 3E D0              5860 	ld	a,#0xD0
   18F7 32r38s41           5861 	ld	(#_cmd + 14),a
                           5862 ;demo.c:778: vdp_copier(&cmd);
   18FA 21r2As41           5863 	ld	hl,#_cmd
   18FD E5                 5864 	push	hl
   18FE CDr00s00           5865 	call	_vdp_copier
   1901 F1                 5866 	pop	af
   1902                    5867 00104$:
                           5868 ;demo.c:781: if (boxes_init == 0) {
   1902 AF                 5869 	xor	a,a
   1903 21rDEs41           5870 	ld	hl,#_boxes_init + 0
   1906 B6                 5871 	or	a,(hl)
   1907 C2r69s1A           5872 	jp	NZ,00106$
                           5873 ;demo.c:782: boxes_init = 1;
   190A FD 21rDEs41        5874 	ld	iy,#_boxes_init
   190E FD 36 00 01        5875 	ld	0 (iy),#0x01
                           5876 ;demo.c:784: cmd.size_x = 8;
   1912 21r32s41           5877 	ld	hl, #_cmd + 8
   1915 36 08              5878 	ld	(hl),#0x08
   1917 23                 5879 	inc	hl
   1918 36 00              5880 	ld	(hl),#0x00
                           5881 ;demo.c:785: cmd.size_y = 212;
   191A 21r34s41           5882 	ld	hl, #_cmd + 10
   191D 36 D4              5883 	ld	(hl),#0xD4
   191F 23                 5884 	inc	hl
   1920 36 00              5885 	ld	(hl),#0x00
                           5886 ;demo.c:786: cmd.data = 0;
                           5887 ;demo.c:787: cmd.argument = 0x00; // from 70xY to left
   1922 3E 00              5888 	ld	a,#0x00
   1924 32r36s41           5889 	ld	(#_cmd + 12),a
   1927 32r37s41           5890 	ld	(#_cmd + 13),a
                           5891 ;demo.c:788: cmd.command = 0xd0; // vram to vram, y only
   192A 01r38s41           5892 	ld	bc,#_cmd + 14
   192D 3E D0              5893 	ld	a,#0xD0
   192F 02                 5894 	ld	(bc),a
                           5895 ;demo.c:789: cmd.source_x = 248;
   1930 21r2As41           5896 	ld	hl,#_cmd
   1933 36 F8              5897 	ld	(hl),#0xF8
   1935 23                 5898 	inc	hl
   1936 36 00              5899 	ld	(hl),#0x00
                           5900 ;demo.c:790: cmd.source_y = 0;
   1938 21r2Cs41           5901 	ld	hl, #_cmd + 2
   193B 36 00              5902 	ld	(hl),#0x00
   193D 23                 5903 	inc	hl
   193E 36 00              5904 	ld	(hl),#0x00
                           5905 ;demo.c:791: cmd.dest_y = 0;
   1940 01r30s41           5906 	ld	bc,#_cmd + 6
   1943 69                 5907 	ld	l,c
   1944 60                 5908 	ld	h,b
   1945 36 00              5909 	ld	(hl),#0x00
   1947 23                 5910 	inc	hl
   1948 36 00              5911 	ld	(hl),#0x00
                           5912 ;demo.c:793: for (x = 248; x >= 0; x-=8) {
   194A DD 36 FE F8        5913 	ld	-2 (ix),#0xF8
   194E DD 36 FF 00        5914 	ld	-1 (ix),#0x00
   1952                    5915 00139$:
   1952 DD CB FF 7E        5916 	bit	7,-1 (ix)
   1956 C2rE1s19           5917 	jp	NZ,00142$
                           5918 ;demo.c:794: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1959 21rC2s41           5919 	ld	hl,#_ff + 0
   195C 5E                 5920 	ld	e,(hl)
   195D 21rC3s41           5921 	ld	hl,#_ff + 1
   1960 56                 5922 	ld	d,(hl)
   1961 CB 2A              5923 	sra	d
   1963 CB 1B              5924 	rr	e
   1965 CB 2A              5925 	sra	d
   1967 CB 1B              5926 	rr	e
   1969 21rC2s41           5927 	ld	hl,#_ff + 0
   196C 56                 5928 	ld	d,(hl)
   196D 21rC3s41           5929 	ld	hl,#_ff + 1
   1970 4E                 5930 	ld	c,(hl)
   1971 CB 29              5931 	sra	c
   1973 CB 1A              5932 	rr	d
   1975 CB 29              5933 	sra	c
   1977 CB 1A              5934 	rr	d
   1979 CB 29              5935 	sra	c
   197B CB 1A              5936 	rr	d
   197D 7B                 5937 	ld	a,e
   197E F5                 5938 	push	af
   197F 33                 5939 	inc	sp
   1980 D5                 5940 	push	de
   1981 33                 5941 	inc	sp
   1982 53                 5942 	ld	d,e
   1983 1E 04              5943 	ld	e,#0x04
   1985 D5                 5944 	push	de
   1986 CDr00s00           5945 	call	_msx2_palette
   1989 F1                 5946 	pop	af
   198A F1                 5947 	pop	af
                           5948 ;demo.c:795: ff+=2;
   198B 21rC2s41           5949 	ld	hl,#_ff
   198E 7E                 5950 	ld	a,(hl)
   198F C6 02              5951 	add	a,#0x02
   1991 23                 5952 	inc	hl
   1992 2B                 5953 	dec	hl
   1993 C5                 5954 	push	bc
   1994 4F                 5955 	ld	c, a
   1995 23                 5956 	inc	hl
   1996 7E                 5957 	ld	a, (hl)
   1997 47                 5958 	ld	b, a
   1998 79                 5959 	ld	a, c
   1999 2B                 5960 	dec	hl
   199A 77                 5961 	ld	(hl), a
   199B 78                 5962 	ld	a, b
   199C C1                 5963 	pop	bc
   199D CE 00              5964 	adc	a,#0x00
   199F 23                 5965 	inc	hl
   19A0 77                 5966 	ld	(hl),a
                           5967 ;demo.c:796: waitVB();
   19A1 76                 5968 		halt 
                           5969 ;demo.c:797: cmd.dest_x = x;
   19A2 21r2Es41           5970 	ld	hl, #_cmd + 4
   19A5 DD 7E FE           5971 	ld	a,-2 (ix)
   19A8 77                 5972 	ld	(hl),a
   19A9 23                 5973 	inc	hl
   19AA DD 7E FF           5974 	ld	a,-1 (ix)
   19AD 77                 5975 	ld	(hl),a
                           5976 ;demo.c:798: cmd.dest_y = 0;
   19AE 21r30s41           5977 	ld	hl, #_cmd + 6
   19B1 36 00              5978 	ld	(hl),#0x00
   19B3 23                 5979 	inc	hl
   19B4 36 00              5980 	ld	(hl),#0x00
                           5981 ;demo.c:799: vdp_copier(&cmd);
   19B6 21r2As41           5982 	ld	hl,#_cmd
   19B9 E5                 5983 	push	hl
   19BA CDr00s00           5984 	call	_vdp_copier
   19BD F1                 5985 	pop	af
                           5986 ;demo.c:800: cmd.dest_y = 256;
   19BE 21r30s41           5987 	ld	hl, #_cmd + 6
   19C1 36 00              5988 	ld	(hl),#0x00
   19C3 23                 5989 	inc	hl
   19C4 36 01              5990 	ld	(hl),#0x01
                           5991 ;demo.c:801: vdp_copier(&cmd);
   19C6 21r2As41           5992 	ld	hl,#_cmd
   19C9 E5                 5993 	push	hl
   19CA CDr00s00           5994 	call	_vdp_copier
   19CD F1                 5995 	pop	af
                           5996 ;demo.c:793: for (x = 248; x >= 0; x-=8) {
   19CE DD 7E FE           5997 	ld	a,-2 (ix)
   19D1 C6 F8              5998 	add	a,#0xF8
   19D3 DD 77 FE           5999 	ld	-2 (ix),a
   19D6 DD 7E FF           6000 	ld	a,-1 (ix)
   19D9 CE FF              6001 	adc	a,#0xFF
   19DB DD 77 FF           6002 	ld	-1 (ix),a
   19DE C3r52s19           6003 	jp	00139$
   19E1                    6004 00142$:
                           6005 ;demo.c:804: vdp_load_palette(boxes_palette);
   19E1 21rE6s40           6006 	ld	hl,#_boxes_palette
   19E4 E5                 6007 	push	hl
   19E5 CDr00s00           6008 	call	_vdp_load_palette
   19E8 F1                 6009 	pop	af
                           6010 ;demo.c:806: for (x=0;x < 8;x++) {
   19E9 DD 36 FE 00        6011 	ld	-2 (ix),#0x00
   19ED DD 36 FF 00        6012 	ld	-1 (ix),#0x00
   19F1                    6013 00147$:
   19F1 DD 7E FE           6014 	ld	a,-2 (ix)
   19F4 D6 08              6015 	sub	a,#0x08
   19F6 DD 7E FF           6016 	ld	a,-1 (ix)
   19F9 DE 00              6017 	sbc	a,#0x00
   19FB F2r55s1A           6018 	jp	P,00150$
                           6019 ;demo.c:808: for (y=0;y < 9;y++) {
   19FE 11 00 00           6020 	ld	de,#0x0000
   1A01                    6021 00143$:
   1A01 7B                 6022 	ld	a,e
   1A02 D6 09              6023 	sub	a,#0x09
   1A04 7A                 6024 	ld	a,d
   1A05 DE 00              6025 	sbc	a,#0x00
   1A07 F2r4As1A           6026 	jp	P,00149$
                           6027 ;demo.c:809: boxes_x[4] = 0;
   1A0A 01rE9s41           6028 	ld	bc,#_boxes_x + 4
   1A0D 3E 00              6029 	ld	a,#0x00
   1A0F 02                 6030 	ld	(bc),a
                           6031 ;demo.c:810: boxes_y[4] = 768+2*36;
   1A10 21rF2s41           6032 	ld	hl, #_boxes_y + 8
   1A13 36 48              6033 	ld	(hl),#0x48
   1A15 23                 6034 	inc	hl
   1A16 36 03              6035 	ld	(hl),#0x03
                           6036 ;demo.c:811: boxi = 4;
   1A18 21rF4s41           6037 	ld	hl,#_boxi + 0
   1A1B 36 04              6038 	ld	(hl), #0x04
                           6039 ;demo.c:812: drawbox((x*36),y*18);
   1A1D 4B                 6040 	ld	c,e
   1A1E D5                 6041 	push	de
   1A1F 79                 6042 	ld	a,c
   1A20 5F                 6043 	ld	e,a
   1A21 87                 6044 	add	a,a
   1A22 87                 6045 	add	a,a
   1A23 87                 6046 	add	a,a
   1A24 83                 6047 	add	a,e
   1A25 87                 6048 	add	a,a
   1A26 D1                 6049 	pop	de
   1A27 4F                 6050 	ld	c,a
   1A28 DD 46 FE           6051 	ld	b,-2 (ix)
   1A2B D5                 6052 	push	de
   1A2C 78                 6053 	ld	a,b
   1A2D 5F                 6054 	ld	e,a
   1A2E 87                 6055 	add	a,a
   1A2F 87                 6056 	add	a,a
   1A30 87                 6057 	add	a,a
   1A31 83                 6058 	add	a,e
   1A32 87                 6059 	add	a,a
   1A33 87                 6060 	add	a,a
   1A34 D1                 6061 	pop	de
   1A35 47                 6062 	ld	b,a
   1A36 D5                 6063 	push	de
   1A37 79                 6064 	ld	a,c
   1A38 F5                 6065 	push	af
   1A39 33                 6066 	inc	sp
   1A3A C5                 6067 	push	bc
   1A3B 33                 6068 	inc	sp
   1A3C CDr03s18           6069 	call	_drawbox
   1A3F F1                 6070 	pop	af
   1A40 D1                 6071 	pop	de
                           6072 ;demo.c:813: boxi = 0;
   1A41 21rF4s41           6073 	ld	hl,#_boxi + 0
   1A44 36 00              6074 	ld	(hl), #0x00
                           6075 ;demo.c:808: for (y=0;y < 9;y++) {
   1A46 13                 6076 	inc	de
   1A47 C3r01s1A           6077 	jp	00143$
   1A4A                    6078 00149$:
                           6079 ;demo.c:806: for (x=0;x < 8;x++) {
   1A4A DD 34 FE           6080 	inc	-2 (ix)
   1A4D 20 03              6081 	jr	NZ,00185$
   1A4F DD 34 FF           6082 	inc	-1 (ix)
   1A52                    6083 00185$:
   1A52 C3rF1s19           6084 	jp	00147$
   1A55                    6085 00150$:
                           6086 ;demo.c:817: slowend = 43;
   1A55 21rC0s41           6087 	ld	hl,#_slowend + 0
   1A58 36 2B              6088 	ld	(hl), #0x2B
   1A5A 21rC1s41           6089 	ld	hl,#_slowend + 1
   1A5D 36 00              6090 	ld	(hl), #0x00
                           6091 ;demo.c:818: ltrpointer = 0;
   1A5F 21rBEs41           6092 	ld	hl,#_ltrpointer + 0
   1A62 36 00              6093 	ld	(hl), #0x00
   1A64 21rBFs41           6094 	ld	hl,#_ltrpointer + 1
   1A67 36 00              6095 	ld	(hl), #0x00
   1A69                    6096 00106$:
                           6097 ;demo.c:821: if (bt >= 80) bt+=8;
   1A69 3ArF9s41           6098 	ld	a,(#_bt+0)
   1A6C D6 50              6099 	sub	a,#0x50
   1A6E 3ArFAs41           6100 	ld	a,(#_bt+1)
   1A71 DE 00              6101 	sbc	a,#0x00
   1A73 FAr8Cs1A           6102 	jp	M,00108$
   1A76 21rF9s41           6103 	ld	hl,#_bt
   1A79 7E                 6104 	ld	a,(hl)
   1A7A C6 08              6105 	add	a,#0x08
   1A7C 23                 6106 	inc	hl
   1A7D 2B                 6107 	dec	hl
   1A7E C5                 6108 	push	bc
   1A7F 4F                 6109 	ld	c, a
   1A80 23                 6110 	inc	hl
   1A81 7E                 6111 	ld	a, (hl)
   1A82 47                 6112 	ld	b, a
   1A83 79                 6113 	ld	a, c
   1A84 2B                 6114 	dec	hl
   1A85 77                 6115 	ld	(hl), a
   1A86 78                 6116 	ld	a, b
   1A87 C1                 6117 	pop	bc
   1A88 CE 00              6118 	adc	a,#0x00
   1A8A 23                 6119 	inc	hl
   1A8B 77                 6120 	ld	(hl),a
   1A8C                    6121 00108$:
                           6122 ;demo.c:822: if (bt < 80 && bt >= 60) bt+=7;
   1A8C 3ArF9s41           6123 	ld	a,(#_bt+0)
   1A8F D6 50              6124 	sub	a,#0x50
   1A91 3ArFAs41           6125 	ld	a,(#_bt+1)
   1A94 DE 00              6126 	sbc	a,#0x00
   1A96 F2rBCs1A           6127 	jp	P,00110$
   1A99 3ArF9s41           6128 	ld	a,(#_bt+0)
   1A9C D6 3C              6129 	sub	a,#0x3C
   1A9E 3ArFAs41           6130 	ld	a,(#_bt+1)
   1AA1 DE 00              6131 	sbc	a,#0x00
   1AA3 FArBCs1A           6132 	jp	M,00110$
   1AA6 21rF9s41           6133 	ld	hl,#_bt
   1AA9 7E                 6134 	ld	a,(hl)
   1AAA C6 07              6135 	add	a,#0x07
   1AAC 23                 6136 	inc	hl
   1AAD 2B                 6137 	dec	hl
   1AAE C5                 6138 	push	bc
   1AAF 4F                 6139 	ld	c, a
   1AB0 23                 6140 	inc	hl
   1AB1 7E                 6141 	ld	a, (hl)
   1AB2 47                 6142 	ld	b, a
   1AB3 79                 6143 	ld	a, c
   1AB4 2B                 6144 	dec	hl
   1AB5 77                 6145 	ld	(hl), a
   1AB6 78                 6146 	ld	a, b
   1AB7 C1                 6147 	pop	bc
   1AB8 CE 00              6148 	adc	a,#0x00
   1ABA 23                 6149 	inc	hl
   1ABB 77                 6150 	ld	(hl),a
   1ABC                    6151 00110$:
                           6152 ;demo.c:823: if (bt < 60 && bt >= 40) bt+=6;
   1ABC 3ArF9s41           6153 	ld	a,(#_bt+0)
   1ABF D6 3C              6154 	sub	a,#0x3C
   1AC1 3ArFAs41           6155 	ld	a,(#_bt+1)
   1AC4 DE 00              6156 	sbc	a,#0x00
   1AC6 F2rECs1A           6157 	jp	P,00113$
   1AC9 3ArF9s41           6158 	ld	a,(#_bt+0)
   1ACC D6 28              6159 	sub	a,#0x28
   1ACE 3ArFAs41           6160 	ld	a,(#_bt+1)
   1AD1 DE 00              6161 	sbc	a,#0x00
   1AD3 FArECs1A           6162 	jp	M,00113$
   1AD6 21rF9s41           6163 	ld	hl,#_bt
   1AD9 7E                 6164 	ld	a,(hl)
   1ADA C6 06              6165 	add	a,#0x06
   1ADC 23                 6166 	inc	hl
   1ADD 2B                 6167 	dec	hl
   1ADE C5                 6168 	push	bc
   1ADF 4F                 6169 	ld	c, a
   1AE0 23                 6170 	inc	hl
   1AE1 7E                 6171 	ld	a, (hl)
   1AE2 47                 6172 	ld	b, a
   1AE3 79                 6173 	ld	a, c
   1AE4 2B                 6174 	dec	hl
   1AE5 77                 6175 	ld	(hl), a
   1AE6 78                 6176 	ld	a, b
   1AE7 C1                 6177 	pop	bc
   1AE8 CE 00              6178 	adc	a,#0x00
   1AEA 23                 6179 	inc	hl
   1AEB 77                 6180 	ld	(hl),a
   1AEC                    6181 00113$:
                           6182 ;demo.c:824: if (bt < 40 && bt >= 10) bt+=5;
   1AEC 3ArF9s41           6183 	ld	a,(#_bt+0)
   1AEF D6 28              6184 	sub	a,#0x28
   1AF1 3ArFAs41           6185 	ld	a,(#_bt+1)
   1AF4 DE 00              6186 	sbc	a,#0x00
   1AF6 F2r1Cs1B           6187 	jp	P,00116$
   1AF9 3ArF9s41           6188 	ld	a,(#_bt+0)
   1AFC D6 0A              6189 	sub	a,#0x0A
   1AFE 3ArFAs41           6190 	ld	a,(#_bt+1)
   1B01 DE 00              6191 	sbc	a,#0x00
   1B03 FAr1Cs1B           6192 	jp	M,00116$
   1B06 21rF9s41           6193 	ld	hl,#_bt
   1B09 7E                 6194 	ld	a,(hl)
   1B0A C6 05              6195 	add	a,#0x05
   1B0C 23                 6196 	inc	hl
   1B0D 2B                 6197 	dec	hl
   1B0E C5                 6198 	push	bc
   1B0F 4F                 6199 	ld	c, a
   1B10 23                 6200 	inc	hl
   1B11 7E                 6201 	ld	a, (hl)
   1B12 47                 6202 	ld	b, a
   1B13 79                 6203 	ld	a, c
   1B14 2B                 6204 	dec	hl
   1B15 77                 6205 	ld	(hl), a
   1B16 78                 6206 	ld	a, b
   1B17 C1                 6207 	pop	bc
   1B18 CE 00              6208 	adc	a,#0x00
   1B1A 23                 6209 	inc	hl
   1B1B 77                 6210 	ld	(hl),a
   1B1C                    6211 00116$:
                           6212 ;demo.c:825: if (bt < 10 ) bt+=4;
   1B1C 3ArF9s41           6213 	ld	a,(#_bt+0)
   1B1F D6 0A              6214 	sub	a,#0x0A
   1B21 3ArFAs41           6215 	ld	a,(#_bt+1)
   1B24 DE 00              6216 	sbc	a,#0x00
   1B26 F2r3Fs1B           6217 	jp	P,00119$
   1B29 21rF9s41           6218 	ld	hl,#_bt
   1B2C 7E                 6219 	ld	a,(hl)
   1B2D C6 04              6220 	add	a,#0x04
   1B2F 23                 6221 	inc	hl
   1B30 2B                 6222 	dec	hl
   1B31 C5                 6223 	push	bc
   1B32 4F                 6224 	ld	c, a
   1B33 23                 6225 	inc	hl
   1B34 7E                 6226 	ld	a, (hl)
   1B35 47                 6227 	ld	b, a
   1B36 79                 6228 	ld	a, c
   1B37 2B                 6229 	dec	hl
   1B38 77                 6230 	ld	(hl), a
   1B39 78                 6231 	ld	a, b
   1B3A C1                 6232 	pop	bc
   1B3B CE 00              6233 	adc	a,#0x00
   1B3D 23                 6234 	inc	hl
   1B3E 77                 6235 	ld	(hl),a
   1B3F                    6236 00119$:
                           6237 ;demo.c:828: cmd.source_x = bx;
   1B3F ED 4BrF5s41        6238 	ld	bc,(_bx)
   1B43 21r2As41           6239 	ld	hl,#_cmd
   1B46 71                 6240 	ld	(hl),c
   1B47 23                 6241 	inc	hl
   1B48 70                 6242 	ld	(hl),b
                           6243 ;demo.c:829: cmd.source_y = bt;
   1B49 01r2Cs41           6244 	ld	bc,#_cmd + 2
   1B4C ED 5BrF9s41        6245 	ld	de,(_bt)
   1B50 69                 6246 	ld	l,c
   1B51 60                 6247 	ld	h,b
   1B52 73                 6248 	ld	(hl),e
   1B53 23                 6249 	inc	hl
   1B54 72                 6250 	ld	(hl),d
                           6251 ;demo.c:830: cmd.dest_x = 0;
   1B55 21r2Es41           6252 	ld	hl, #_cmd + 4
   1B58 36 00              6253 	ld	(hl),#0x00
   1B5A 23                 6254 	inc	hl
   1B5B 36 00              6255 	ld	(hl),#0x00
                           6256 ;demo.c:831: cmd.dest_y = 256;
   1B5D 21r30s41           6257 	ld	hl, #_cmd + 6
   1B60 36 00              6258 	ld	(hl),#0x00
   1B62 23                 6259 	inc	hl
   1B63 36 01              6260 	ld	(hl),#0x01
                           6261 ;demo.c:832: cmd.size_x = 36;
   1B65 21r32s41           6262 	ld	hl, #_cmd + 8
   1B68 36 24              6263 	ld	(hl),#0x24
   1B6A 23                 6264 	inc	hl
   1B6B 36 00              6265 	ld	(hl),#0x00
                           6266 ;demo.c:833: cmd.size_y = 36;
   1B6D 21r34s41           6267 	ld	hl, #_cmd + 10
   1B70 36 24              6268 	ld	(hl),#0x24
   1B72 23                 6269 	inc	hl
   1B73 36 00              6270 	ld	(hl),#0x00
                           6271 ;demo.c:834: cmd.data = 0;
                           6272 ;demo.c:835: cmd.argument = 0x00;
   1B75 3E 00              6273 	ld	a,#0x00
   1B77 32r36s41           6274 	ld	(#_cmd + 12),a
   1B7A 32r37s41           6275 	ld	(#_cmd + 13),a
                           6276 ;demo.c:836: cmd.command = 0xD0; // HMMM
   1B7D 3E D0              6277 	ld	a,#0xD0
   1B7F 32r38s41           6278 	ld	(#_cmd + 14),a
                           6279 ;demo.c:837: vdp_copier(&cmd);
   1B82 21r2As41           6280 	ld	hl,#_cmd
   1B85 E5                 6281 	push	hl
   1B86 CDr00s00           6282 	call	_vdp_copier
   1B89 F1                 6283 	pop	af
                           6284 ;demo.c:839: pbx = bx;
   1B8A 2ArF5s41           6285 	ld	hl,(_bx)
   1B8D FD 21rFFs41        6286 	ld	iy,#_pbx
   1B91 FD 75 00           6287 	ld	0 (iy),l
   1B94 FD 21rFFs41        6288 	ld	iy,#_pbx
   1B98 FD 74 01           6289 	ld	1 (iy),h
                           6290 ;demo.c:840: pbt = bt;
   1B9B 2ArF9s41           6291 	ld	hl,(_bt)
   1B9E FD 21r01s42        6292 	ld	iy,#_pbt
   1BA2 FD 75 00           6293 	ld	0 (iy),l
   1BA5 FD 21r01s42        6294 	ld	iy,#_pbt
   1BA9 FD 74 01           6295 	ld	1 (iy),h
                           6296 ;demo.c:842: boxticks++;
   1BAC FD 21r0Es42        6297 	ld	iy,#_boxticks
   1BB0 FD 34 00           6298 	inc	0 (iy)
   1BB3 20 07              6299 	jr	NZ,00186$
   1BB5 FD 21r0Es42        6300 	ld	iy,#_boxticks
   1BB9 FD 34 01           6301 	inc	1 (iy)
   1BBC                    6302 00186$:
                           6303 ;demo.c:843: if (boxticks > 8) {
   1BBC 3E 08              6304 	ld	a,#0x08
   1BBE FD 21r0Es42        6305 	ld	iy,#_boxticks
   1BC2 FD 96 00           6306 	sub	a,0 (iy)
   1BC5 3E 00              6307 	ld	a,#0x00
   1BC7 FD 21r0Es42        6308 	ld	iy,#_boxticks
   1BCB FD 9E 01           6309 	sbc	a,1 (iy)
   1BCE F2rE8s1B           6310 	jp	P,00121$
                           6311 ;demo.c:844: drawsine("Let us stop   We are building walls between",8,182);
   1BD1 21 08 B6           6312 	ld	hl,#0xB608
   1BD4 E5                 6313 	push	hl
   1BD5 21r5As1D           6314 	ld	hl,#__str_8
   1BD8 E5                 6315 	push	hl
   1BD9 CDrC9s11           6316 	call	_drawsine
   1BDC F1                 6317 	pop	af
   1BDD F1                 6318 	pop	af
                           6319 ;demo.c:845: boxticks  = 0;
   1BDE 21r0Es42           6320 	ld	hl,#_boxticks + 0
   1BE1 36 00              6321 	ld	(hl), #0x00
   1BE3 21r0Fs42           6322 	ld	hl,#_boxticks + 1
   1BE6 36 00              6323 	ld	(hl), #0x00
   1BE8                    6324 00121$:
                           6325 ;demo.c:848: bonc = 1;
   1BE8 21rFDs41           6326 	ld	hl,#_bonc + 0
   1BEB 36 01              6327 	ld	(hl), #0x01
   1BED 21rFEs41           6328 	ld	hl,#_bonc + 1
   1BF0 36 00              6329 	ld	(hl), #0x00
                           6330 ;demo.c:849: if (bt > by) {
   1BF2 21rF7s41           6331 	ld	hl,#_by
   1BF5 7E                 6332 	ld	a,(hl)
   1BF6 FD 21rF9s41        6333 	ld	iy,#_bt
   1BFA FD 96 00           6334 	sub	a,0 (iy)
   1BFD 23                 6335 	inc	hl
   1BFE 7E                 6336 	ld	a,(hl)
   1BFF FD 21rF9s41        6337 	ld	iy,#_bt
   1C03 FD 9E 01           6338 	sbc	a,1 (iy)
   1C06 F2r44s1D           6339 	jp	P,00137$
                           6340 ;demo.c:850: bt = by;
   1C09 2ArF7s41           6341 	ld	hl,(_by)
   1C0C FD 21rF9s41        6342 	ld	iy,#_bt
   1C10 FD 75 00           6343 	ld	0 (iy),l
   1C13 FD 21rF9s41        6344 	ld	iy,#_bt
   1C17 FD 74 01           6345 	ld	1 (iy),h
                           6346 ;demo.c:851: drawbox(bx,bt);
   1C1A 21rF9s41           6347 	ld	hl,#_bt + 0
   1C1D 4E                 6348 	ld	c,(hl)
   1C1E 21rF5s41           6349 	ld	hl,#_bx + 0
   1C21 46                 6350 	ld	b,(hl)
   1C22 79                 6351 	ld	a,c
   1C23 F5                 6352 	push	af
   1C24 33                 6353 	inc	sp
   1C25 C5                 6354 	push	bc
   1C26 33                 6355 	inc	sp
   1C27 CDr03s18           6356 	call	_drawbox
   1C2A F1                 6357 	pop	af
                           6358 ;demo.c:852: bt = 0;
   1C2B 21rF9s41           6359 	ld	hl,#_bt + 0
   1C2E 36 00              6360 	ld	(hl), #0x00
   1C30 21rFAs41           6361 	ld	hl,#_bt + 1
   1C33 36 00              6362 	ld	(hl), #0x00
                           6363 ;demo.c:853: if (by > 48) {
   1C35 3E 30              6364 	ld	a,#0x30
   1C37 FD 21rF7s41        6365 	ld	iy,#_by
   1C3B FD 96 00           6366 	sub	a,0 (iy)
   1C3E 3E 00              6367 	ld	a,#0x00
   1C40 FD 21rF7s41        6368 	ld	iy,#_by
   1C44 FD 9E 01           6369 	sbc	a,1 (iy)
   1C47 F2r9Fs1C           6370 	jp	P,00125$
                           6371 ;demo.c:854: bonc = 0;
   1C4A 21rFDs41           6372 	ld	hl,#_bonc + 0
   1C4D 36 00              6373 	ld	(hl), #0x00
   1C4F 21rFEs41           6374 	ld	hl,#_bonc + 1
   1C52 36 00              6375 	ld	(hl), #0x00
                           6376 ;demo.c:855: by-=16;
   1C54 21rF7s41           6377 	ld	hl,#_by
   1C57 7E                 6378 	ld	a,(hl)
   1C58 C6 F0              6379 	add	a,#0xF0
   1C5A 77                 6380 	ld	(hl),a
   1C5B 23                 6381 	inc	hl
   1C5C 7E                 6382 	ld	a,(hl)
   1C5D CE FF              6383 	adc	a,#0xFF
   1C5F 77                 6384 	ld	(hl),a
                           6385 ;demo.c:856: prevbox_of = boxes_of[boxi];
   1C60 3ArF4s41           6386 	ld	a,(#_boxi+0)
   1C63 87                 6387 	add	a,a
   1C64 C6r03              6388 	add	a,#<_boxes_of
   1C66 6F                 6389 	ld	l,a
   1C67 3Es42              6390 	ld	a,#>_boxes_of
   1C69 CE 00              6391 	adc	a,#0x00
   1C6B 67                 6392 	ld	h,a
   1C6C 4E                 6393 	ld	c,(hl)
   1C6D 23                 6394 	inc	hl
   1C6E 21r0Ds42           6395 	ld	hl,#_prevbox_of + 0
   1C71 71                 6396 	ld	(hl), c
                           6397 ;demo.c:857: by+=prevbox_of;
   1C72 21r0Ds42           6398 	ld	hl,#_prevbox_of + 0
   1C75 4E                 6399 	ld	c,(hl)
   1C76 06 00              6400 	ld	b,#0x00
   1C78 21rF7s41           6401 	ld	hl,#_by
   1C7B 7E                 6402 	ld	a,(hl)
   1C7C 81                 6403 	add	a,c
   1C7D 23                 6404 	inc	hl
   1C7E 2B                 6405 	dec	hl
   1C7F C5                 6406 	push	bc
   1C80 4F                 6407 	ld	c, a
   1C81 23                 6408 	inc	hl
   1C82 7E                 6409 	ld	a, (hl)
   1C83 47                 6410 	ld	b, a
   1C84 79                 6411 	ld	a, c
   1C85 2B                 6412 	dec	hl
   1C86 77                 6413 	ld	(hl), a
   1C87 78                 6414 	ld	a, b
   1C88 C1                 6415 	pop	bc
   1C89 88                 6416 	adc	a,b
   1C8A 23                 6417 	inc	hl
   1C8B 77                 6418 	ld	(hl),a
                           6419 ;demo.c:858: boxi++;
   1C8C FD 21rF4s41        6420 	ld	iy,#_boxi
   1C90 FD 34 00           6421 	inc	0 (iy)
                           6422 ;demo.c:859: if (boxi >= 4) boxi = 0;
   1C93 3ArF4s41           6423 	ld	a,(#_boxi+0)
   1C96 D6 04              6424 	sub	a,#0x04
   1C98 38 05              6425 	jr	C,00125$
   1C9A 21rF4s41           6426 	ld	hl,#_boxi + 0
   1C9D 36 00              6427 	ld	(hl), #0x00
   1C9F                    6428 00125$:
                           6429 ;demo.c:862: if (by <= 48) {
   1C9F 3E 30              6430 	ld	a,#0x30
   1CA1 FD 21rF7s41        6431 	ld	iy,#_by
   1CA5 FD 96 00           6432 	sub	a,0 (iy)
   1CA8 3E 00              6433 	ld	a,#0x00
   1CAA FD 21rF7s41        6434 	ld	iy,#_by
   1CAE FD 9E 01           6435 	sbc	a,1 (iy)
   1CB1 FAr55s1D           6436 	jp	M,00151$
                           6437 ;demo.c:863: bx-=16;
   1CB4 21rF5s41           6438 	ld	hl,#_bx
   1CB7 7E                 6439 	ld	a,(hl)
   1CB8 C6 F0              6440 	add	a,#0xF0
   1CBA 77                 6441 	ld	(hl),a
   1CBB 23                 6442 	inc	hl
   1CBC 7E                 6443 	ld	a,(hl)
   1CBD CE FF              6444 	adc	a,#0xFF
   1CBF 77                 6445 	ld	(hl),a
                           6446 ;demo.c:865: if (bx>128)bo+=8;
   1CC0 3E 80              6447 	ld	a,#0x80
   1CC2 FD 21rF5s41        6448 	ld	iy,#_bx
   1CC6 FD 96 00           6449 	sub	a,0 (iy)
   1CC9 3E 00              6450 	ld	a,#0x00
   1CCB FD 21rF5s41        6451 	ld	iy,#_bx
   1CCF FD 9E 01           6452 	sbc	a,1 (iy)
   1CD2 07                 6453 	rlca
   1CD3 E6 01              6454 	and	a,#0x01
   1CD5 4F                 6455 	ld	c,a
   1CD6 B7                 6456 	or	a,a
   1CD7 28 18              6457 	jr	Z,00127$
   1CD9 21rFBs41           6458 	ld	hl,#_bo
   1CDC 7E                 6459 	ld	a,(hl)
   1CDD C6 08              6460 	add	a,#0x08
   1CDF 23                 6461 	inc	hl
   1CE0 2B                 6462 	dec	hl
   1CE1 C5                 6463 	push	bc
   1CE2 4F                 6464 	ld	c, a
   1CE3 23                 6465 	inc	hl
   1CE4 7E                 6466 	ld	a, (hl)
   1CE5 47                 6467 	ld	b, a
   1CE6 79                 6468 	ld	a, c
   1CE7 2B                 6469 	dec	hl
   1CE8 77                 6470 	ld	(hl), a
   1CE9 78                 6471 	ld	a, b
   1CEA C1                 6472 	pop	bc
   1CEB CE 00              6473 	adc	a,#0x00
   1CED 23                 6474 	inc	hl
   1CEE 77                 6475 	ld	(hl),a
   1CEF 18 0C              6476 	jr	00128$
   1CF1                    6477 00127$:
                           6478 ;demo.c:866: else bo-=8;
   1CF1 21rFBs41           6479 	ld	hl,#_bo
   1CF4 7E                 6480 	ld	a,(hl)
   1CF5 C6 F8              6481 	add	a,#0xF8
   1CF7 77                 6482 	ld	(hl),a
   1CF8 23                 6483 	inc	hl
   1CF9 7E                 6484 	ld	a,(hl)
   1CFA CE FF              6485 	adc	a,#0xFF
   1CFC 77                 6486 	ld	(hl),a
   1CFD                    6487 00128$:
                           6488 ;demo.c:867: if (bo > 192) bo = 0;
   1CFD 3E C0              6489 	ld	a,#0xC0
   1CFF FD 21rFBs41        6490 	ld	iy,#_bo
   1D03 FD 96 00           6491 	sub	a,0 (iy)
   1D06 3E 00              6492 	ld	a,#0x00
   1D08 FD 21rFBs41        6493 	ld	iy,#_bo
   1D0C FD 9E 01           6494 	sbc	a,1 (iy)
   1D0F F2r1Cs1D           6495 	jp	P,00130$
   1D12 21rFBs41           6496 	ld	hl,#_bo + 0
   1D15 36 00              6497 	ld	(hl), #0x00
   1D17 21rFCs41           6498 	ld	hl,#_bo + 1
   1D1A 36 00              6499 	ld	(hl), #0x00
   1D1C                    6500 00130$:
                           6501 ;demo.c:868: if (bx>128)by=84+bo;
   1D1C AF                 6502 	xor	a,a
   1D1D B1                 6503 	or	a,c
   1D1E 28 12              6504 	jr	Z,00132$
   1D20 21rF7s41           6505 	ld	hl,#_by
   1D23 3ArFBs41           6506 	ld	a,(#_bo+0)
   1D26 C6 54              6507 	add	a,#0x54
   1D28 77                 6508 	ld	(hl),a
   1D29 3ArFCs41           6509 	ld	a,(#_bo+1)
   1D2C CE 00              6510 	adc	a,#0x00
   1D2E 23                 6511 	inc	hl
   1D2F 77                 6512 	ld	(hl),a
   1D30 18 23              6513 	jr	00151$
   1D32                    6514 00132$:
                           6515 ;demo.c:869: else by=36+36+84+bo;
   1D32 21rF7s41           6516 	ld	hl,#_by
   1D35 3ArFBs41           6517 	ld	a,(#_bo+0)
   1D38 C6 9C              6518 	add	a,#0x9C
   1D3A 77                 6519 	ld	(hl),a
   1D3B 3ArFCs41           6520 	ld	a,(#_bo+1)
   1D3E CE 00              6521 	adc	a,#0x00
   1D40 23                 6522 	inc	hl
   1D41 77                 6523 	ld	(hl),a
   1D42 18 11              6524 	jr	00151$
   1D44                    6525 00137$:
                           6526 ;demo.c:872: drawbox(bx,bt);
   1D44 21rF9s41           6527 	ld	hl,#_bt + 0
   1D47 4E                 6528 	ld	c,(hl)
   1D48 21rF5s41           6529 	ld	hl,#_bx + 0
   1D4B 46                 6530 	ld	b,(hl)
   1D4C 79                 6531 	ld	a,c
   1D4D F5                 6532 	push	af
   1D4E 33                 6533 	inc	sp
   1D4F C5                 6534 	push	bc
   1D50 33                 6535 	inc	sp
   1D51 CDr03s18           6536 	call	_drawbox
   1D54 F1                 6537 	pop	af
   1D55                    6538 00151$:
   1D55 DD F9              6539 	ld	sp,ix
   1D57 DD E1              6540 	pop	ix
   1D59 C9                 6541 	ret
   1D5A                    6542 _boxes_end::
   1D5A                    6543 __str_8:
   1D5A 4C 65 74 20 75 73  6544 	.ascii "Let us stop   We are building walls between"
        20 73 74 6F 70 20
        20 20 57 65 20 61
        72 65 20 62 75 69
        6C 64 69 6E 67 20
        77 61 6C 6C 73 20
        62 65 74 77 65 65
        6E
   1D85 00                 6545 	.db 0x00
                           6546 ;demo.c:883: void thewave() {
                           6547 ;	---------------------------------
                           6548 ; Function thewave
                           6549 ; ---------------------------------
   1D86                    6550 _thewave_start::
   1D86                    6551 _thewave:
   1D86 DD E5              6552 	push	ix
   1D88 DD 21 00 00        6553 	ld	ix,#0
   1D8C DD 39              6554 	add	ix,sp
   1D8E 21 F5 FF           6555 	ld	hl,#-11
   1D91 39                 6556 	add	hl,sp
   1D92 F9                 6557 	ld	sp,hl
                           6558 ;demo.c:892: if (initwave == 0) {
   1D93 AF                 6559 	xor	a,a
   1D94 21r10s42           6560 	ld	hl,#_initwave + 0
   1D97 B6                 6561 	or	a,(hl)
   1D98 C2r20s20           6562 	jp	NZ,00113$
                           6563 ;demo.c:893: initwave = 1;
   1D9B 21r10s42           6564 	ld	hl,#_initwave + 0
   1D9E 36 01              6565 	ld	(hl), #0x01
                           6566 ;demo.c:894: for (y = 0; y < 212; y++) {
   1DA0 DD 36 FE 00        6567 	ld	-2 (ix),#0x00
   1DA4                    6568 00128$:
   1DA4 DD 7E FE           6569 	ld	a,-2 (ix)
   1DA7 D6 D4              6570 	sub	a,#0xD4
   1DA9 D2r1Cs1E           6571 	jp	NC,00131$
                           6572 ;demo.c:895: cmd.size_x = 256;
   1DAC 11r32s41           6573 	ld	de,#_cmd + 8
   1DAF EB                 6574 	ex	de,hl
   1DB0 36 00              6575 	ld	(hl),#0x00
   1DB2 23                 6576 	inc	hl
   1DB3 36 01              6577 	ld	(hl),#0x01
                           6578 ;demo.c:896: cmd.size_y = 2;
   1DB5 11r34s41           6579 	ld	de,#_cmd + 10
   1DB8 EB                 6580 	ex	de,hl
   1DB9 36 02              6581 	ld	(hl),#0x02
   1DBB 23                 6582 	inc	hl
   1DBC 36 00              6583 	ld	(hl),#0x00
                           6584 ;demo.c:897: cmd.data = 0;
   1DBE 11r36s41           6585 	ld	de,#_cmd + 12
   1DC1 3E 00              6586 	ld	a,#0x00
   1DC3 12                 6587 	ld	(de),a
                           6588 ;demo.c:898: cmd.argument = 0x00; // from 70xY to left
   1DC4 11r37s41           6589 	ld	de,#_cmd + 13
   1DC7 3E 00              6590 	ld	a,#0x00
   1DC9 12                 6591 	ld	(de),a
                           6592 ;demo.c:899: cmd.command = 0xd0; // vram to vram, y only
   1DCA 11r38s41           6593 	ld	de,#_cmd + 14
   1DCD 3E D0              6594 	ld	a,#0xD0
   1DCF 12                 6595 	ld	(de),a
                           6596 ;demo.c:901: cmd.source_x = 0;
   1DD0 21r2As41           6597 	ld	hl,#_cmd
   1DD3 36 00              6598 	ld	(hl),#0x00
   1DD5 23                 6599 	inc	hl
   1DD6 36 00              6600 	ld	(hl),#0x00
                           6601 ;demo.c:902: cmd.source_y = 0;
   1DD8 11r2Cs41           6602 	ld	de,#_cmd + 2
   1DDB EB                 6603 	ex	de,hl
   1DDC 36 00              6604 	ld	(hl),#0x00
   1DDE 23                 6605 	inc	hl
   1DDF 36 00              6606 	ld	(hl),#0x00
                           6607 ;demo.c:903: cmd.dest_x = 0;
   1DE1 11r2Es41           6608 	ld	de,#_cmd + 4
   1DE4 EB                 6609 	ex	de,hl
   1DE5 36 00              6610 	ld	(hl),#0x00
   1DE7 23                 6611 	inc	hl
   1DE8 36 00              6612 	ld	(hl),#0x00
                           6613 ;demo.c:904: cmd.dest_y = 0+y;
   1DEA 11r30s41           6614 	ld	de,#_cmd + 6
   1DED DD 4E FE           6615 	ld	c,-2 (ix)
   1DF0 06 00              6616 	ld	b,#0x00
   1DF2 EB                 6617 	ex	de,hl
   1DF3 71                 6618 	ld	(hl),c
   1DF4 23                 6619 	inc	hl
   1DF5 70                 6620 	ld	(hl),b
                           6621 ;demo.c:905: vdp_copier(&cmd);
   1DF6 C5                 6622 	push	bc
   1DF7 21r2As41           6623 	ld	hl,#_cmd
   1DFA E5                 6624 	push	hl
   1DFB CDr00s00           6625 	call	_vdp_copier
   1DFE F1                 6626 	pop	af
   1DFF C1                 6627 	pop	bc
                           6628 ;demo.c:906: cmd.dest_y = 256+y;
   1E00 11r30s41           6629 	ld	de,#_cmd + 6
   1E03 21 00 01           6630 	ld	hl,#0x0100
   1E06 09                 6631 	add	hl,bc
   1E07 4D                 6632 	ld	c,l
   1E08 44                 6633 	ld	b,h
   1E09 EB                 6634 	ex	de,hl
   1E0A 71                 6635 	ld	(hl),c
   1E0B 23                 6636 	inc	hl
   1E0C 70                 6637 	ld	(hl),b
                           6638 ;demo.c:907: vdp_copier(&cmd);
   1E0D 21r2As41           6639 	ld	hl,#_cmd
   1E10 E5                 6640 	push	hl
   1E11 CDr00s00           6641 	call	_vdp_copier
   1E14 F1                 6642 	pop	af
                           6643 ;demo.c:908: waitVB();
   1E15 76                 6644 		halt 
                           6645 ;demo.c:894: for (y = 0; y < 212; y++) {
   1E16 DD 34 FE           6646 	inc	-2 (ix)
   1E19 C3rA4s1D           6647 	jp	00128$
   1E1C                    6648 00131$:
                           6649 ;demo.c:912: for (y = 9; y < 15; y+=1) {
   1E1C DD 36 FE 09        6650 	ld	-2 (ix),#0x09
   1E20                    6651 00132$:
   1E20 DD 7E FE           6652 	ld	a,-2 (ix)
   1E23 D6 0F              6653 	sub	a,#0x0F
   1E25 D2r20s20           6654 	jp	NC,00113$
                           6655 ;demo.c:913: for (x = 0; x < 21; x+=1) {
   1E28 DD 7E FE           6656 	ld	a,-2 (ix)
   1E2B 87                 6657 	add	a,a
   1E2C DD 77 F7           6658 	ld	-9 (ix),a
   1E2F DD 36 FF 00        6659 	ld	-1 (ix),#0x00
   1E33                    6660 00108$:
   1E33 DD 7E FF           6661 	ld	a,-1 (ix)
   1E36 D6 15              6662 	sub	a,#0x15
   1E38 D2r1As20           6663 	jp	NC,00134$
                           6664 ;demo.c:914: if (x > 6 && x < 13) continue; 
   1E3B 3E 06              6665 	ld	a,#0x06
   1E3D DD 96 FF           6666 	sub	a,-1 (ix)
   1E40 30 08              6667 	jr	NC,00102$
   1E42 DD 7E FF           6668 	ld	a,-1 (ix)
   1E45 D6 0D              6669 	sub	a,#0x0D
   1E47 DAr14s20           6670 	jp	C,00110$
   1E4A                    6671 00102$:
                           6672 ;demo.c:916: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   1E4A 3E 06              6673 	ld	a,#0x06
   1E4C DD 96 FF           6674 	sub	a,-1 (ix)
   1E4F DArA5s1E           6675 	jp	C,00105$
   1E52 DD 56 FF           6676 	ld	d,-1 (ix)
   1E55 0E 00              6677 	ld	c,#0x00
   1E57 CB 22              6678 	sla	d
   1E59 CB 11              6679 	rl	c
   1E5B CB 22              6680 	sla	d
   1E5D CB 11              6681 	rl	c
   1E5F CB 22              6682 	sla	d
   1E61 CB 11              6683 	rl	c
   1E63 7A                 6684 	ld	a,d
   1E64 C6 69              6685 	add	a,#0x69
   1E66 57                 6686 	ld	d,a
   1E67 79                 6687 	ld	a,c
   1E68 CE 00              6688 	adc	a,#0x00
   1E6A 47                 6689 	ld	b,a
   1E6B DD 5E FE           6690 	ld	e,-2 (ix)
   1E6E 0E 00              6691 	ld	c,#0x00
   1E70 CB 23              6692 	sla	e
   1E72 CB 11              6693 	rl	c
   1E74 CB 23              6694 	sla	e
   1E76 CB 11              6695 	rl	c
   1E78 CB 23              6696 	sla	e
   1E7A CB 11              6697 	rl	c
   1E7C 7A                 6698 	ld	a,d
   1E7D 83                 6699 	add	a,e
   1E7E 5F                 6700 	ld	e,a
   1E7F 78                 6701 	ld	a,b
   1E80 89                 6702 	adc	a,c
   1E81 0E 00              6703 	ld	c,#0x00
   1E83 3Er00              6704 	ld	a,#<_sintab
   1E85 83                 6705 	add	a,e
   1E86 5F                 6706 	ld	e,a
   1E87 3Es00              6707 	ld	a,#>_sintab
   1E89 89                 6708 	adc	a,c
   1E8A 6B                 6709 	ld	l,e
   1E8B 67                 6710 	ld	h,a
   1E8C 5E                 6711 	ld	e,(hl)
   1E8D CB 2B              6712 	sra	e
   1E8F CB 2B              6713 	sra	e
   1E91 CB 2B              6714 	sra	e
   1E93 CB 2B              6715 	sra	e
   1E95 7B                 6716 	ld	a,e
   1E96 17                 6717 	rla	
   1E97 9F                 6718 	sbc	a,a
   1E98 4F                 6719 	ld	c,a
   1E99 7B                 6720 	ld	a,e
   1E9A C6 07              6721 	add	a,#0x07
   1E9C DD 77 FC           6722 	ld	-4 (ix),a
   1E9F 79                 6723 	ld	a,c
   1EA0 CE 00              6724 	adc	a,#0x00
   1EA2 DD 77 FD           6725 	ld	-3 (ix),a
   1EA5                    6726 00105$:
                           6727 ;demo.c:917: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   1EA5 DD 7E FF           6728 	ld	a,-1 (ix)
   1EA8 D6 0D              6729 	sub	a,#0x0D
   1EAA DAr0Bs1F           6730 	jp	C,00107$
   1EAD DD 5E FF           6731 	ld	e,-1 (ix)
   1EB0 16 00              6732 	ld	d,#0x00
   1EB2 21 17 00           6733 	ld	hl,#0x0017
   1EB5 19                 6734 	add	hl,de
   1EB6 EB                 6735 	ex	de,hl
   1EB7 CB 23              6736 	sla	e
   1EB9 CB 12              6737 	rl	d
   1EBB CB 23              6738 	sla	e
   1EBD CB 12              6739 	rl	d
   1EBF CB 23              6740 	sla	e
   1EC1 CB 12              6741 	rl	d
   1EC3 21 69 00           6742 	ld	hl,#0x0069
   1EC6 19                 6743 	add	hl,de
   1EC7 45                 6744 	ld	b,l
   1EC8 54                 6745 	ld	d,h
   1EC9 DD 4E FE           6746 	ld	c,-2 (ix)
   1ECC 1E 00              6747 	ld	e,#0x00
   1ECE 79                 6748 	ld	a,c
   1ECF C6 13              6749 	add	a,#0x13
   1ED1 4F                 6750 	ld	c,a
   1ED2 7B                 6751 	ld	a,e
   1ED3 CE 00              6752 	adc	a,#0x00
   1ED5 5F                 6753 	ld	e,a
   1ED6 CB 21              6754 	sla	c
   1ED8 CB 13              6755 	rl	e
   1EDA CB 21              6756 	sla	c
   1EDC CB 13              6757 	rl	e
   1EDE CB 21              6758 	sla	c
   1EE0 CB 13              6759 	rl	e
   1EE2 78                 6760 	ld	a,b
   1EE3 81                 6761 	add	a,c
   1EE4 4F                 6762 	ld	c,a
   1EE5 7A                 6763 	ld	a,d
   1EE6 8B                 6764 	adc	a,e
   1EE7 1E 00              6765 	ld	e,#0x00
   1EE9 3Er00              6766 	ld	a,#<_sintab
   1EEB 81                 6767 	add	a,c
   1EEC 4F                 6768 	ld	c,a
   1EED 3Es00              6769 	ld	a,#>_sintab
   1EEF 8B                 6770 	adc	a,e
   1EF0 69                 6771 	ld	l,c
   1EF1 67                 6772 	ld	h,a
   1EF2 4E                 6773 	ld	c,(hl)
   1EF3 CB 29              6774 	sra	c
   1EF5 CB 29              6775 	sra	c
   1EF7 CB 29              6776 	sra	c
   1EF9 CB 29              6777 	sra	c
   1EFB 79                 6778 	ld	a,c
   1EFC 17                 6779 	rla	
   1EFD 9F                 6780 	sbc	a,a
   1EFE 5F                 6781 	ld	e,a
   1EFF 79                 6782 	ld	a,c
   1F00 C6 07              6783 	add	a,#0x07
   1F02 DD 77 FC           6784 	ld	-4 (ix),a
   1F05 7B                 6785 	ld	a,e
   1F06 CE 00              6786 	adc	a,#0x00
   1F08 DD 77 FD           6787 	ld	-3 (ix),a
   1F0B                    6788 00107$:
                           6789 ;demo.c:919: cmd.size_x = 11;
   1F0B 11r32s41           6790 	ld	de,#_cmd + 8
   1F0E EB                 6791 	ex	de,hl
   1F0F 36 0B              6792 	ld	(hl),#0x0B
   1F11 23                 6793 	inc	hl
   1F12 36 00              6794 	ld	(hl),#0x00
                           6795 ;demo.c:920: cmd.size_y = 28-(14-px);
   1F14 21r34s41           6796 	ld	hl,#_cmd + 10
   1F17 DD 75 F8           6797 	ld	-8 (ix),l
   1F1A DD 74 F9           6798 	ld	-7 (ix),h
   1F1D 3E 0E              6799 	ld	a,#0x0E
   1F1F DD 96 FC           6800 	sub	a,-4 (ix)
   1F22 4F                 6801 	ld	c,a
   1F23 3E 00              6802 	ld	a,#0x00
   1F25 DD 9E FD           6803 	sbc	a,-3 (ix)
   1F28 5F                 6804 	ld	e,a
   1F29 3E 1C              6805 	ld	a,#0x1C
   1F2B 91                 6806 	sub	a,c
   1F2C 57                 6807 	ld	d,a
   1F2D 3E 00              6808 	ld	a,#0x00
   1F2F 9B                 6809 	sbc	a,e
   1F30 47                 6810 	ld	b,a
   1F31 DD 6E F8           6811 	ld	l,-8 (ix)
   1F34 DD 66 F9           6812 	ld	h,-7 (ix)
   1F37 72                 6813 	ld	(hl),d
   1F38 23                 6814 	inc	hl
   1F39 70                 6815 	ld	(hl),b
                           6816 ;demo.c:921: cmd.data = 0;
   1F3A 21r36s41           6817 	ld	hl,#_cmd + 12
   1F3D 36 00              6818 	ld	(hl),#0x00
                           6819 ;demo.c:922: cmd.argument = 0x00; // from 70xY to left
   1F3F 21r37s41           6820 	ld	hl,#_cmd + 13
   1F42 36 00              6821 	ld	(hl),#0x00
                           6822 ;demo.c:923: cmd.command = 0x98; // vram to vram, y only
   1F44 21r38s41           6823 	ld	hl,#_cmd + 14
   1F47 36 98              6824 	ld	(hl),#0x98
                           6825 ;demo.c:925: cmd.source_x = twelvetimes[px];
   1F49 DD 46 FC           6826 	ld	b,-4 (ix)
   1F4C DD 56 FD           6827 	ld	d,-3 (ix)
   1F4F CB 20              6828 	sla	b
   1F51 CB 12              6829 	rl	d
   1F53 3Er20              6830 	ld	a,#<_twelvetimes
   1F55 80                 6831 	add	a,b
   1F56 47                 6832 	ld	b,a
   1F57 3Es01              6833 	ld	a,#>_twelvetimes
   1F59 8A                 6834 	adc	a,d
   1F5A 68                 6835 	ld	l,b
   1F5B 67                 6836 	ld	h,a
   1F5C 46                 6837 	ld	b,(hl)
   1F5D 23                 6838 	inc	hl
   1F5E 56                 6839 	ld	d,(hl)
   1F5F 21r2As41           6840 	ld	hl,#_cmd
   1F62 70                 6841 	ld	(hl),b
   1F63 23                 6842 	inc	hl
   1F64 72                 6843 	ld	(hl),d
                           6844 ;demo.c:926: cmd.source_y = 768+183+(15-px);
   1F65 23                 6845 	inc	hl
   1F66 DD 75 F8           6846 	ld	-8 (ix),l
   1F69 DD 74 F9           6847 	ld	-7 (ix),h
   1F6C 3E C6              6848 	ld	a,#0xC6
   1F6E DD 96 FC           6849 	sub	a,-4 (ix)
   1F71 47                 6850 	ld	b,a
   1F72 3E 03              6851 	ld	a,#0x03
   1F74 DD 9E FD           6852 	sbc	a,-3 (ix)
   1F77 57                 6853 	ld	d,a
   1F78 DD 6E F8           6854 	ld	l,-8 (ix)
   1F7B DD 66 F9           6855 	ld	h,-7 (ix)
   1F7E 70                 6856 	ld	(hl),b
   1F7F 23                 6857 	inc	hl
   1F80 72                 6858 	ld	(hl),d
                           6859 ;demo.c:927: cmd.dest_x = 0+twelvetimes[x];
   1F81 21r2Es41           6860 	ld	hl,#_cmd + 4
   1F84 DD 75 F8           6861 	ld	-8 (ix),l
   1F87 DD 74 F9           6862 	ld	-7 (ix),h
   1F8A DD 7E FF           6863 	ld	a,-1 (ix)
   1F8D 87                 6864 	add	a,a
   1F8E C6r20              6865 	add	a,#<_twelvetimes
   1F90 6F                 6866 	ld	l,a
   1F91 3Es01              6867 	ld	a,#>_twelvetimes
   1F93 CE 00              6868 	adc	a,#0x00
   1F95 67                 6869 	ld	h,a
   1F96 46                 6870 	ld	b,(hl)
   1F97 23                 6871 	inc	hl
   1F98 56                 6872 	ld	d,(hl)
   1F99 DD 6E F8           6873 	ld	l,-8 (ix)
   1F9C DD 66 F9           6874 	ld	h,-7 (ix)
   1F9F 70                 6875 	ld	(hl),b
   1FA0 23                 6876 	inc	hl
   1FA1 72                 6877 	ld	(hl),d
                           6878 ;demo.c:928: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   1FA2 21r30s41           6879 	ld	hl,#_cmd + 6
   1FA5 DD 75 F8           6880 	ld	-8 (ix),l
   1FA8 DD 74 F9           6881 	ld	-7 (ix),h
   1FAB 3Er54              6882 	ld	a,#<_eighttimes
   1FAD DD 86 F7           6883 	add	a,-9 (ix)
   1FB0 6F                 6884 	ld	l,a
   1FB1 3Es01              6885 	ld	a,#>_eighttimes
   1FB3 CE 00              6886 	adc	a,#0x00
   1FB5 67                 6887 	ld	h,a
   1FB6 46                 6888 	ld	b,(hl)
   1FB7 23                 6889 	inc	hl
   1FB8 56                 6890 	ld	d,(hl)
   1FB9 78                 6891 	ld	a,b
   1FBA C6 04              6892 	add	a,#0x04
   1FBC 47                 6893 	ld	b,a
   1FBD 7A                 6894 	ld	a,d
   1FBE CE 00              6895 	adc	a,#0x00
   1FC0 57                 6896 	ld	d,a
   1FC1 78                 6897 	ld	a,b
   1FC2 81                 6898 	add	a,c
   1FC3 47                 6899 	ld	b,a
   1FC4 7A                 6900 	ld	a,d
   1FC5 8B                 6901 	adc	a,e
   1FC6 57                 6902 	ld	d,a
   1FC7 DD 6E F8           6903 	ld	l,-8 (ix)
   1FCA DD 66 F9           6904 	ld	h,-7 (ix)
   1FCD 70                 6905 	ld	(hl),b
   1FCE 23                 6906 	inc	hl
   1FCF 72                 6907 	ld	(hl),d
                           6908 ;demo.c:929: vdp_copier(&cmd);
   1FD0 C5                 6909 	push	bc
   1FD1 D5                 6910 	push	de
   1FD2 21r2As41           6911 	ld	hl,#_cmd
   1FD5 E5                 6912 	push	hl
   1FD6 CDr00s00           6913 	call	_vdp_copier
   1FD9 F1                 6914 	pop	af
   1FDA D1                 6915 	pop	de
   1FDB C1                 6916 	pop	bc
                           6917 ;demo.c:930: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   1FDC 21r30s41           6918 	ld	hl,#_cmd + 6
   1FDF DD 75 F8           6919 	ld	-8 (ix),l
   1FE2 DD 74 F9           6920 	ld	-7 (ix),h
   1FE5 3Er54              6921 	ld	a,#<_eighttimes
   1FE7 DD 86 F7           6922 	add	a,-9 (ix)
   1FEA 6F                 6923 	ld	l,a
   1FEB 3Es01              6924 	ld	a,#>_eighttimes
   1FED CE 00              6925 	adc	a,#0x00
   1FEF 67                 6926 	ld	h,a
   1FF0 46                 6927 	ld	b,(hl)
   1FF1 23                 6928 	inc	hl
   1FF2 56                 6929 	ld	d,(hl)
   1FF3 78                 6930 	ld	a,b
   1FF4 C6 04              6931 	add	a,#0x04
   1FF6 47                 6932 	ld	b,a
   1FF7 7A                 6933 	ld	a,d
   1FF8 CE 00              6934 	adc	a,#0x00
   1FFA C6 01              6935 	add	a,#0x01
   1FFC 57                 6936 	ld	d,a
   1FFD 78                 6937 	ld	a,b
   1FFE 81                 6938 	add	a,c
   1FFF 4F                 6939 	ld	c,a
   2000 7A                 6940 	ld	a,d
   2001 8B                 6941 	adc	a,e
   2002 5F                 6942 	ld	e,a
   2003 DD 6E F8           6943 	ld	l,-8 (ix)
   2006 DD 66 F9           6944 	ld	h,-7 (ix)
   2009 71                 6945 	ld	(hl),c
   200A 23                 6946 	inc	hl
   200B 73                 6947 	ld	(hl),e
                           6948 ;demo.c:931: vdp_copier(&cmd);
   200C 21r2As41           6949 	ld	hl,#_cmd
   200F E5                 6950 	push	hl
   2010 CDr00s00           6951 	call	_vdp_copier
   2013 F1                 6952 	pop	af
   2014                    6953 00110$:
                           6954 ;demo.c:913: for (x = 0; x < 21; x+=1) {
   2014 DD 34 FF           6955 	inc	-1 (ix)
   2017 C3r33s1E           6956 	jp	00108$
   201A                    6957 00134$:
                           6958 ;demo.c:912: for (y = 9; y < 15; y+=1) {
   201A DD 34 FE           6959 	inc	-2 (ix)
   201D C3r20s1E           6960 	jp	00132$
   2020                    6961 00113$:
                           6962 ;demo.c:937: if (buf == -1) { bo = 0; ya = 0; }
   2020 3Ar11s42           6963 	ld	a,(#_buf+0)
   2023 3C                 6964 	inc	a
   2024 20 06              6965 	jr	NZ,00188$
   2026 3Ar12s42           6966 	ld	a,(#_buf+1)
   2029 3C                 6967 	inc	a
   202A 28 02              6968 	jr	Z,00189$
   202C                    6969 00188$:
   202C 18 05              6970 	jr	00115$
   202E                    6971 00189$:
   202E 01 00 00           6972 	ld	bc,#0x0000
   2031 18 03              6973 	jr	00116$
   2033                    6974 00115$:
                           6975 ;demo.c:938: else { bo = 256; ya = 6;}
   2033 01 00 01           6976 	ld	bc,#0x0100
   2036                    6977 00116$:
                           6978 ;demo.c:940: cmd.size_x = 72;
   2036 11r32s41           6979 	ld	de,#_cmd + 8
   2039 EB                 6980 	ex	de,hl
   203A 36 48              6981 	ld	(hl),#0x48
   203C 23                 6982 	inc	hl
   203D 36 00              6983 	ld	(hl),#0x00
                           6984 ;demo.c:941: cmd.size_y = 80;
   203F 11r34s41           6985 	ld	de,#_cmd + 10
   2042 EB                 6986 	ex	de,hl
   2043 36 50              6987 	ld	(hl),#0x50
   2045 23                 6988 	inc	hl
   2046 36 00              6989 	ld	(hl),#0x00
                           6990 ;demo.c:942: cmd.data = 0;
   2048 11r36s41           6991 	ld	de,#_cmd + 12
   204B 3E 00              6992 	ld	a,#0x00
   204D 12                 6993 	ld	(de),a
                           6994 ;demo.c:943: cmd.argument = 0x00; // from 70xY to left
   204E 11r37s41           6995 	ld	de,#_cmd + 13
   2051 3E 00              6996 	ld	a,#0x00
   2053 12                 6997 	ld	(de),a
                           6998 ;demo.c:944: cmd.command = 0xd0; // vram to vram, y only
   2054 11r38s41           6999 	ld	de,#_cmd + 14
   2057 3E D0              7000 	ld	a,#0xD0
   2059 12                 7001 	ld	(de),a
                           7002 ;demo.c:945: cmd.source_x = 178;
   205A 21r2As41           7003 	ld	hl,#_cmd
   205D 36 B2              7004 	ld	(hl),#0xB2
   205F 23                 7005 	inc	hl
   2060 36 00              7006 	ld	(hl),#0x00
                           7007 ;demo.c:946: cmd.source_y = 0;
   2062 11r2Cs41           7008 	ld	de,#_cmd + 2
   2065 EB                 7009 	ex	de,hl
   2066 36 00              7010 	ld	(hl),#0x00
   2068 23                 7011 	inc	hl
   2069 36 00              7012 	ld	(hl),#0x00
                           7013 ;demo.c:947: cmd.dest_x = 84;
   206B 11r2Es41           7014 	ld	de,#_cmd + 4
   206E EB                 7015 	ex	de,hl
   206F 36 54              7016 	ld	(hl),#0x54
   2071 23                 7017 	inc	hl
   2072 36 00              7018 	ld	(hl),#0x00
                           7019 ;demo.c:948: cmd.dest_y = 72+bo;
   2074 11r30s41           7020 	ld	de,#_cmd + 6
   2077 21 48 00           7021 	ld	hl,#0x0048
   207A 09                 7022 	add	hl,bc
   207B 4D                 7023 	ld	c,l
   207C 44                 7024 	ld	b,h
   207D EB                 7025 	ex	de,hl
   207E 71                 7026 	ld	(hl),c
   207F 23                 7027 	inc	hl
   2080 70                 7028 	ld	(hl),b
                           7029 ;demo.c:949: vdp_copier(&cmd);
   2081 C5                 7030 	push	bc
   2082 21r2As41           7031 	ld	hl,#_cmd
   2085 E5                 7032 	push	hl
   2086 CDr00s00           7033 	call	_vdp_copier
   2089 F1                 7034 	pop	af
   208A C1                 7035 	pop	bc
                           7036 ;demo.c:951: lukema = ffa;
   208B 2Ar13s42           7037 	ld	hl,(_ffa)
   208E DD 75 FA           7038 	ld	-6 (ix),l
   2091 DD 74 FB           7039 	ld	-5 (ix),h
                           7040 ;demo.c:952: for (y = 0; y < 5; y+=1) {
   2094 DD 36 FE 00        7041 	ld	-2 (ix),#0x00
   2098                    7042 00140$:
   2098 DD 7E FE           7043 	ld	a,-2 (ix)
   209B D6 05              7044 	sub	a,#0x05
   209D D2rFEs21           7045 	jp	NC,00143$
                           7046 ;demo.c:953: for (x = 0; x < 6; x+=1) {
   20A0 DD 7E FE           7047 	ld	a,-2 (ix)
   20A3 87                 7048 	add	a,a
   20A4 DD 77 F7           7049 	ld	-9 (ix),a
   20A7 DD 36 FF 00        7050 	ld	-1 (ix),#0x00
   20AB                    7051 00136$:
   20AB DD 7E FF           7052 	ld	a,-1 (ix)
   20AE D6 06              7053 	sub	a,#0x06
   20B0 D2rF8s21           7054 	jp	NC,00142$
                           7055 ;demo.c:955: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   20B3 DD 5E FF           7056 	ld	e,-1 (ix)
   20B6 16 00              7057 	ld	d,#0x00
   20B8 CB 23              7058 	sla	e
   20BA CB 12              7059 	rl	d
   20BC CB 23              7060 	sla	e
   20BE CB 12              7061 	rl	d
   20C0 CB 23              7062 	sla	e
   20C2 CB 12              7063 	rl	d
   20C4 DD 7E FA           7064 	ld	a,-6 (ix)
   20C7 83                 7065 	add	a,e
   20C8 DD 77 F8           7066 	ld	-8 (ix),a
   20CB DD 7E FB           7067 	ld	a,-5 (ix)
   20CE 8A                 7068 	adc	a,d
   20CF DD 77 F9           7069 	ld	-7 (ix),a
   20D2 DD 5E FE           7070 	ld	e,-2 (ix)
   20D5 16 00              7071 	ld	d,#0x00
   20D7 CB 23              7072 	sla	e
   20D9 CB 12              7073 	rl	d
   20DB CB 23              7074 	sla	e
   20DD CB 12              7075 	rl	d
   20DF DD 7E F8           7076 	ld	a,-8 (ix)
   20E2 83                 7077 	add	a,e
   20E3 5F                 7078 	ld	e,a
   20E4 DD 7E F9           7079 	ld	a,-7 (ix)
   20E7 8A                 7080 	adc	a,d
   20E8 16 00              7081 	ld	d,#0x00
   20EA 21r00s00           7082 	ld	hl,#_sintab
   20ED 19                 7083 	add	hl,de
   20EE 5E                 7084 	ld	e,(hl)
   20EF CB 2B              7085 	sra	e
   20F1 CB 2B              7086 	sra	e
   20F3 CB 2B              7087 	sra	e
   20F5 CB 2B              7088 	sra	e
   20F7 7B                 7089 	ld	a,e
   20F8 17                 7090 	rla	
   20F9 9F                 7091 	sbc	a,a
   20FA 57                 7092 	ld	d,a
   20FB 21 07 00           7093 	ld	hl,#0x0007
   20FE 19                 7094 	add	hl,de
   20FF DD 75 FC           7095 	ld	-4 (ix),l
                           7096 ;demo.c:956: if (px < 0) px = 0; 
   2102 DD 74 FD           7097 	ld	-3 (ix),h
   2105 7C                 7098 	ld	a, h
   2106 CB 7F              7099 	bit	7,a
   2108 28 08              7100 	jr	Z,00118$
   210A DD 36 FC 00        7101 	ld	-4 (ix),#0x00
   210E DD 36 FD 00        7102 	ld	-3 (ix),#0x00
   2112                    7103 00118$:
                           7104 ;demo.c:957: if (px > 14) px = 14; 
   2112 3E 0E              7105 	ld	a,#0x0E
   2114 DD 96 FC           7106 	sub	a,-4 (ix)
   2117 3E 00              7107 	ld	a,#0x00
   2119 DD 9E FD           7108 	sbc	a,-3 (ix)
   211C F2r27s21           7109 	jp	P,00120$
   211F DD 36 FC 0E        7110 	ld	-4 (ix),#0x0E
   2123 DD 36 FD 00        7111 	ld	-3 (ix),#0x00
   2127                    7112 00120$:
                           7113 ;demo.c:959: cmd.size_x = 12;
   2127 11r32s41           7114 	ld	de,#_cmd + 8
   212A EB                 7115 	ex	de,hl
   212B 36 0C              7116 	ld	(hl),#0x0C
   212D 23                 7117 	inc	hl
   212E 36 00              7118 	ld	(hl),#0x00
                           7119 ;demo.c:960: cmd.size_y = 11;
   2130 11r34s41           7120 	ld	de,#_cmd + 10
   2133 EB                 7121 	ex	de,hl
   2134 36 0B              7122 	ld	(hl),#0x0B
   2136 23                 7123 	inc	hl
   2137 36 00              7124 	ld	(hl),#0x00
                           7125 ;demo.c:961: cmd.data = 0;
   2139 11r36s41           7126 	ld	de,#_cmd + 12
   213C 3E 00              7127 	ld	a,#0x00
   213E 12                 7128 	ld	(de),a
                           7129 ;demo.c:962: cmd.argument = 0x00; // from 70xY to left
   213F 11r37s41           7130 	ld	de,#_cmd + 13
   2142 3E 00              7131 	ld	a,#0x00
   2144 12                 7132 	ld	(de),a
                           7133 ;demo.c:963: cmd.command = 0x98; // vram to vram, y only
   2145 11r38s41           7134 	ld	de,#_cmd + 14
   2148 3E 98              7135 	ld	a,#0x98
   214A 12                 7136 	ld	(de),a
                           7137 ;demo.c:965: cmd.source_x = twelvetimes[px];
   214B DD 5E FC           7138 	ld	e,-4 (ix)
   214E DD 56 FD           7139 	ld	d,-3 (ix)
   2151 CB 23              7140 	sla	e
   2153 CB 12              7141 	rl	d
   2155 21r20s01           7142 	ld	hl,#_twelvetimes
   2158 19                 7143 	add	hl,de
   2159 5E                 7144 	ld	e,(hl)
   215A 23                 7145 	inc	hl
   215B 56                 7146 	ld	d,(hl)
   215C 21r2As41           7147 	ld	hl,#_cmd
   215F 73                 7148 	ld	(hl),e
   2160 23                 7149 	inc	hl
   2161 72                 7150 	ld	(hl),d
                           7151 ;demo.c:966: cmd.source_y = 768+183+16-px;
   2162 23                 7152 	inc	hl
   2163 DD 75 F8           7153 	ld	-8 (ix),l
   2166 DD 74 F9           7154 	ld	-7 (ix),h
   2169 3E C7              7155 	ld	a,#0xC7
   216B DD 96 FC           7156 	sub	a,-4 (ix)
   216E 5F                 7157 	ld	e,a
   216F 3E 03              7158 	ld	a,#0x03
   2171 DD 9E FD           7159 	sbc	a,-3 (ix)
   2174 57                 7160 	ld	d,a
   2175 DD 6E F8           7161 	ld	l,-8 (ix)
   2178 DD 66 F9           7162 	ld	h,-7 (ix)
   217B 73                 7163 	ld	(hl),e
   217C 23                 7164 	inc	hl
   217D 72                 7165 	ld	(hl),d
                           7166 ;demo.c:967: cmd.dest_x = 84+twelvetimes[x];
   217E 21r2Es41           7167 	ld	hl,#_cmd + 4
   2181 DD 75 F8           7168 	ld	-8 (ix),l
   2184 DD 74 F9           7169 	ld	-7 (ix),h
   2187 DD 7E FF           7170 	ld	a,-1 (ix)
   218A 87                 7171 	add	a,a
   218B C6r20              7172 	add	a,#<_twelvetimes
   218D 6F                 7173 	ld	l,a
   218E 3Es01              7174 	ld	a,#>_twelvetimes
   2190 CE 00              7175 	adc	a,#0x00
   2192 67                 7176 	ld	h,a
   2193 5E                 7177 	ld	e,(hl)
   2194 23                 7178 	inc	hl
   2195 56                 7179 	ld	d,(hl)
   2196 21 54 00           7180 	ld	hl,#0x0054
   2199 19                 7181 	add	hl,de
   219A EB                 7182 	ex	de,hl
   219B DD 6E F8           7183 	ld	l,-8 (ix)
   219E DD 66 F9           7184 	ld	h,-7 (ix)
   21A1 73                 7185 	ld	(hl),e
   21A2 23                 7186 	inc	hl
   21A3 72                 7187 	ld	(hl),d
                           7188 ;demo.c:968: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   21A4 21r30s41           7189 	ld	hl,#_cmd + 6
   21A7 DD 75 F8           7190 	ld	-8 (ix),l
   21AA DD 74 F9           7191 	ld	-7 (ix),h
   21AD 3Er54              7192 	ld	a,#<_eighttimes
   21AF DD 86 F7           7193 	add	a,-9 (ix)
   21B2 6F                 7194 	ld	l,a
   21B3 3Es01              7195 	ld	a,#>_eighttimes
   21B5 CE 00              7196 	adc	a,#0x00
   21B7 67                 7197 	ld	h,a
   21B8 5E                 7198 	ld	e,(hl)
   21B9 23                 7199 	inc	hl
   21BA 56                 7200 	ld	d,(hl)
   21BB 13                 7201 	inc	de
   21BC 13                 7202 	inc	de
   21BD 13                 7203 	inc	de
   21BE 13                 7204 	inc	de
   21BF 79                 7205 	ld	a,c
   21C0 83                 7206 	add	a,e
   21C1 DD 77 F5           7207 	ld	-11 (ix),a
   21C4 78                 7208 	ld	a,b
   21C5 8A                 7209 	adc	a,d
   21C6 DD 77 F6           7210 	ld	-10 (ix),a
   21C9 3E 0E              7211 	ld	a,#0x0E
   21CB DD 96 FC           7212 	sub	a,-4 (ix)
   21CE 5F                 7213 	ld	e,a
   21CF 3E 00              7214 	ld	a,#0x00
   21D1 DD 9E FD           7215 	sbc	a,-3 (ix)
   21D4 57                 7216 	ld	d,a
   21D5 DD 7E F5           7217 	ld	a,-11 (ix)
   21D8 83                 7218 	add	a,e
   21D9 5F                 7219 	ld	e,a
   21DA DD 7E F6           7220 	ld	a,-10 (ix)
   21DD 8A                 7221 	adc	a,d
   21DE 57                 7222 	ld	d,a
   21DF DD 6E F8           7223 	ld	l,-8 (ix)
   21E2 DD 66 F9           7224 	ld	h,-7 (ix)
   21E5 73                 7225 	ld	(hl),e
   21E6 23                 7226 	inc	hl
   21E7 72                 7227 	ld	(hl),d
                           7228 ;demo.c:969: vdp_copier(&cmd);
   21E8 C5                 7229 	push	bc
   21E9 21r2As41           7230 	ld	hl,#_cmd
   21EC E5                 7231 	push	hl
   21ED CDr00s00           7232 	call	_vdp_copier
   21F0 F1                 7233 	pop	af
   21F1 C1                 7234 	pop	bc
                           7235 ;demo.c:953: for (x = 0; x < 6; x+=1) {
   21F2 DD 34 FF           7236 	inc	-1 (ix)
   21F5 C3rABs20           7237 	jp	00136$
   21F8                    7238 00142$:
                           7239 ;demo.c:952: for (y = 0; y < 5; y+=1) {
   21F8 DD 34 FE           7240 	inc	-2 (ix)
   21FB C3r98s20           7241 	jp	00140$
   21FE                    7242 00143$:
                           7243 ;demo.c:974: for (x = 0; x < 6; x+=1) {
   21FE DD 36 FF 00        7244 	ld	-1 (ix),#0x00
   2202                    7245 00144$:
   2202 DD 7E FF           7246 	ld	a,-1 (ix)
   2205 D6 06              7247 	sub	a,#0x06
   2207 D2r48s23           7248 	jp	NC,00147$
                           7249 ;demo.c:975: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   220A DD 5E FF           7250 	ld	e,-1 (ix)
   220D 16 00              7251 	ld	d,#0x00
   220F CB 23              7252 	sla	e
   2211 CB 12              7253 	rl	d
   2213 CB 23              7254 	sla	e
   2215 CB 12              7255 	rl	d
   2217 CB 23              7256 	sla	e
   2219 CB 12              7257 	rl	d
   221B DD 7E FA           7258 	ld	a,-6 (ix)
   221E 83                 7259 	add	a,e
   221F 5F                 7260 	ld	e,a
   2220 DD 7E FB           7261 	ld	a,-5 (ix)
   2223 8A                 7262 	adc	a,d
   2224 57                 7263 	ld	d,a
   2225 21 14 00           7264 	ld	hl,#0x0014
   2228 19                 7265 	add	hl,de
   2229 5D                 7266 	ld	e,l
   222A 16 00              7267 	ld	d,#0x00
   222C 21r00s00           7268 	ld	hl,#_sintab
   222F 19                 7269 	add	hl,de
   2230 5E                 7270 	ld	e,(hl)
   2231 CB 2B              7271 	sra	e
   2233 CB 2B              7272 	sra	e
   2235 CB 2B              7273 	sra	e
   2237 CB 2B              7274 	sra	e
   2239 7B                 7275 	ld	a,e
   223A 17                 7276 	rla	
   223B 9F                 7277 	sbc	a,a
   223C 57                 7278 	ld	d,a
   223D 21 07 00           7279 	ld	hl,#0x0007
   2240 19                 7280 	add	hl,de
   2241 DD 75 FC           7281 	ld	-4 (ix),l
                           7282 ;demo.c:976: if (px < 0) px = 0; 
   2244 DD 74 FD           7283 	ld	-3 (ix),h
   2247 7C                 7284 	ld	a, h
   2248 CB 7F              7285 	bit	7,a
   224A 28 08              7286 	jr	Z,00122$
   224C DD 36 FC 00        7287 	ld	-4 (ix),#0x00
   2250 DD 36 FD 00        7288 	ld	-3 (ix),#0x00
   2254                    7289 00122$:
                           7290 ;demo.c:977: if (px > 14) px = 14; 
   2254 3E 0E              7291 	ld	a,#0x0E
   2256 DD 96 FC           7292 	sub	a,-4 (ix)
   2259 3E 00              7293 	ld	a,#0x00
   225B DD 9E FD           7294 	sbc	a,-3 (ix)
   225E F2r69s22           7295 	jp	P,00124$
   2261 DD 36 FC 0E        7296 	ld	-4 (ix),#0x0E
   2265 DD 36 FD 00        7297 	ld	-3 (ix),#0x00
   2269                    7298 00124$:
                           7299 ;demo.c:979: cmd.size_x = 12;
   2269 11r32s41           7300 	ld	de,#_cmd + 8
   226C EB                 7301 	ex	de,hl
   226D 36 0C              7302 	ld	(hl),#0x0C
   226F 23                 7303 	inc	hl
   2270 36 00              7304 	ld	(hl),#0x00
                           7305 ;demo.c:980: cmd.size_y = 27-(14-px);
   2272 21r34s41           7306 	ld	hl,#_cmd + 10
   2275 DD 75 F5           7307 	ld	-11 (ix),l
   2278 DD 74 F6           7308 	ld	-10 (ix),h
   227B 3E 0E              7309 	ld	a,#0x0E
   227D DD 96 FC           7310 	sub	a,-4 (ix)
   2280 DD 77 F8           7311 	ld	-8 (ix),a
   2283 3E 00              7312 	ld	a,#0x00
   2285 DD 9E FD           7313 	sbc	a,-3 (ix)
   2288 DD 77 F9           7314 	ld	-7 (ix),a
   228B 3E 1B              7315 	ld	a,#0x1B
   228D DD 96 F8           7316 	sub	a,-8 (ix)
   2290 5F                 7317 	ld	e,a
   2291 3E 00              7318 	ld	a,#0x00
   2293 DD 9E F9           7319 	sbc	a,-7 (ix)
   2296 57                 7320 	ld	d,a
   2297 DD 6E F5           7321 	ld	l,-11 (ix)
   229A DD 66 F6           7322 	ld	h,-10 (ix)
   229D 73                 7323 	ld	(hl),e
   229E 23                 7324 	inc	hl
   229F 72                 7325 	ld	(hl),d
                           7326 ;demo.c:981: cmd.data = 0;
   22A0 11r36s41           7327 	ld	de,#_cmd + 12
   22A3 3E 00              7328 	ld	a,#0x00
   22A5 12                 7329 	ld	(de),a
                           7330 ;demo.c:982: cmd.argument = 0x00; // from 70xY to left
   22A6 11r37s41           7331 	ld	de,#_cmd + 13
   22A9 3E 00              7332 	ld	a,#0x00
   22AB 12                 7333 	ld	(de),a
                           7334 ;demo.c:983: cmd.command = 0x98; // vram to vram, y only
   22AC 11r38s41           7335 	ld	de,#_cmd + 14
   22AF 3E 98              7336 	ld	a,#0x98
   22B1 12                 7337 	ld	(de),a
                           7338 ;demo.c:985: cmd.source_x = twelvetimes[px];
   22B2 DD 5E FC           7339 	ld	e,-4 (ix)
   22B5 DD 56 FD           7340 	ld	d,-3 (ix)
   22B8 CB 23              7341 	sla	e
   22BA CB 12              7342 	rl	d
   22BC 21r20s01           7343 	ld	hl,#_twelvetimes
   22BF 19                 7344 	add	hl,de
   22C0 5E                 7345 	ld	e,(hl)
   22C1 23                 7346 	inc	hl
   22C2 56                 7347 	ld	d,(hl)
   22C3 21r2As41           7348 	ld	hl,#_cmd
   22C6 73                 7349 	ld	(hl),e
   22C7 23                 7350 	inc	hl
   22C8 72                 7351 	ld	(hl),d
                           7352 ;demo.c:986: cmd.source_y = 768+183+ 16-px;
   22C9 23                 7353 	inc	hl
   22CA DD 75 F5           7354 	ld	-11 (ix),l
   22CD DD 74 F6           7355 	ld	-10 (ix),h
   22D0 3E C7              7356 	ld	a,#0xC7
   22D2 DD 96 FC           7357 	sub	a,-4 (ix)
   22D5 5F                 7358 	ld	e,a
   22D6 3E 03              7359 	ld	a,#0x03
   22D8 DD 9E FD           7360 	sbc	a,-3 (ix)
   22DB 57                 7361 	ld	d,a
   22DC DD 6E F5           7362 	ld	l,-11 (ix)
   22DF DD 66 F6           7363 	ld	h,-10 (ix)
   22E2 73                 7364 	ld	(hl),e
   22E3 23                 7365 	inc	hl
   22E4 72                 7366 	ld	(hl),d
                           7367 ;demo.c:987: cmd.dest_x = 84+twelvetimes[x];
   22E5 21r2Es41           7368 	ld	hl,#_cmd + 4
   22E8 DD 75 F5           7369 	ld	-11 (ix),l
   22EB DD 74 F6           7370 	ld	-10 (ix),h
   22EE DD 7E FF           7371 	ld	a,-1 (ix)
   22F1 87                 7372 	add	a,a
   22F2 C6r20              7373 	add	a,#<_twelvetimes
   22F4 6F                 7374 	ld	l,a
   22F5 3Es01              7375 	ld	a,#>_twelvetimes
   22F7 CE 00              7376 	adc	a,#0x00
   22F9 67                 7377 	ld	h,a
   22FA 5E                 7378 	ld	e,(hl)
   22FB 23                 7379 	inc	hl
   22FC 56                 7380 	ld	d,(hl)
   22FD 21 54 00           7381 	ld	hl,#0x0054
   2300 19                 7382 	add	hl,de
   2301 EB                 7383 	ex	de,hl
   2302 DD 6E F5           7384 	ld	l,-11 (ix)
   2305 DD 66 F6           7385 	ld	h,-10 (ix)
   2308 73                 7386 	ld	(hl),e
   2309 23                 7387 	inc	hl
   230A 72                 7388 	ld	(hl),d
                           7389 ;demo.c:988: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   230B 21r30s41           7390 	ld	hl,#_cmd + 6
   230E DD 75 F5           7391 	ld	-11 (ix),l
   2311 DD 74 F6           7392 	ld	-10 (ix),h
   2314 11r5Es01           7393 	ld	de,#_eighttimes + 10
   2317 EB                 7394 	ex	de,hl
   2318 5E                 7395 	ld	e,(hl)
   2319 23                 7396 	inc	hl
   231A 56                 7397 	ld	d,(hl)
   231B 13                 7398 	inc	de
   231C 13                 7399 	inc	de
   231D 13                 7400 	inc	de
   231E 13                 7401 	inc	de
   231F 79                 7402 	ld	a,c
   2320 83                 7403 	add	a,e
   2321 5F                 7404 	ld	e,a
   2322 78                 7405 	ld	a,b
   2323 8A                 7406 	adc	a,d
   2324 57                 7407 	ld	d,a
   2325 7B                 7408 	ld	a,e
   2326 DD 86 F8           7409 	add	a,-8 (ix)
   2329 5F                 7410 	ld	e,a
   232A 7A                 7411 	ld	a,d
   232B DD 8E F9           7412 	adc	a,-7 (ix)
   232E 57                 7413 	ld	d,a
   232F DD 6E F5           7414 	ld	l,-11 (ix)
   2332 DD 66 F6           7415 	ld	h,-10 (ix)
   2335 73                 7416 	ld	(hl),e
   2336 23                 7417 	inc	hl
   2337 72                 7418 	ld	(hl),d
                           7419 ;demo.c:989: vdp_copier(&cmd);
   2338 C5                 7420 	push	bc
   2339 21r2As41           7421 	ld	hl,#_cmd
   233C E5                 7422 	push	hl
   233D CDr00s00           7423 	call	_vdp_copier
   2340 F1                 7424 	pop	af
   2341 C1                 7425 	pop	bc
                           7426 ;demo.c:974: for (x = 0; x < 6; x+=1) {
   2342 DD 34 FF           7427 	inc	-1 (ix)
   2345 C3r02s22           7428 	jp	00144$
   2348                    7429 00147$:
                           7430 ;demo.c:993: if (buf == -1) vdp_register(2, 0x1F);
   2348 3Ar11s42           7431 	ld	a,(#_buf+0)
   234B 3C                 7432 	inc	a
   234C 20 06              7433 	jr	NZ,00200$
   234E 3Ar12s42           7434 	ld	a,(#_buf+1)
   2351 3C                 7435 	inc	a
   2352 28 02              7436 	jr	Z,00201$
   2354                    7437 00200$:
   2354 18 0A              7438 	jr	00126$
   2356                    7439 00201$:
   2356 21 02 1F           7440 	ld	hl,#0x1F02
   2359 E5                 7441 	push	hl
   235A CDr00s00           7442 	call	_vdp_register
   235D F1                 7443 	pop	af
   235E 18 08              7444 	jr	00127$
   2360                    7445 00126$:
                           7446 ;demo.c:994: else vdp_register(2, 0x3F);
   2360 21 02 3F           7447 	ld	hl,#0x3F02
   2363 E5                 7448 	push	hl
   2364 CDr00s00           7449 	call	_vdp_register
   2367 F1                 7450 	pop	af
   2368                    7451 00127$:
                           7452 ;demo.c:997: buf = -buf;
   2368 AF                 7453 	xor	a,a
   2369 FD 21r11s42        7454 	ld	iy,#_buf
   236D 3E 00              7455 	ld	a,#0x00
   236F FD 9E 00           7456 	sbc	a,0 (iy)
   2372 21r11s42           7457 	ld	hl,#_buf + 0
   2375 77                 7458 	ld	(hl), a
   2376 FD 21r11s42        7459 	ld	iy,#_buf
   237A 3E 00              7460 	ld	a,#0x00
   237C FD 9E 01           7461 	sbc	a,1 (iy)
   237F 21r12s42           7462 	ld	hl,#_buf + 1
   2382 77                 7463 	ld	(hl), a
                           7464 ;demo.c:999: ffa+=8;
   2383 21r13s42           7465 	ld	hl,#_ffa
   2386 7E                 7466 	ld	a,(hl)
   2387 C6 08              7467 	add	a,#0x08
   2389 23                 7468 	inc	hl
   238A 2B                 7469 	dec	hl
   238B C5                 7470 	push	bc
   238C 4F                 7471 	ld	c, a
   238D 23                 7472 	inc	hl
   238E 7E                 7473 	ld	a, (hl)
   238F 47                 7474 	ld	b, a
   2390 79                 7475 	ld	a, c
   2391 2B                 7476 	dec	hl
   2392 77                 7477 	ld	(hl), a
   2393 78                 7478 	ld	a, b
   2394 C1                 7479 	pop	bc
   2395 CE 00              7480 	adc	a,#0x00
   2397 23                 7481 	inc	hl
   2398 77                 7482 	ld	(hl),a
   2399 DD F9              7483 	ld	sp,ix
   239B DD E1              7484 	pop	ix
   239D C9                 7485 	ret
   239E                    7486 _thewave_end::
                           7487 ;demo.c:1005: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           7488 ;	---------------------------------
                           7489 ; Function drawtritile
                           7490 ; ---------------------------------
   239E                    7491 _drawtritile_start::
   239E                    7492 _drawtritile:
   239E DD E5              7493 	push	ix
   23A0 DD 21 00 00        7494 	ld	ix,#0
   23A4 DD 39              7495 	add	ix,sp
                           7496 ;demo.c:1006: cmd.source_x = tx;
   23A6 DD 4E 04           7497 	ld	c,4 (ix)
   23A9 06 00              7498 	ld	b,#0x00
   23AB 21r2As41           7499 	ld	hl,#_cmd
   23AE 71                 7500 	ld	(hl),c
   23AF 23                 7501 	inc	hl
   23B0 70                 7502 	ld	(hl),b
                           7503 ;demo.c:1007: cmd.source_y = ty-1;
   23B1 01r2Cs41           7504 	ld	bc,#_cmd + 2
   23B4 DD 5E 05           7505 	ld	e,5 (ix)
   23B7 DD 56 06           7506 	ld	d,6 (ix)
   23BA 1B                 7507 	dec	de
   23BB 69                 7508 	ld	l,c
   23BC 60                 7509 	ld	h,b
   23BD 73                 7510 	ld	(hl),e
   23BE 23                 7511 	inc	hl
   23BF 72                 7512 	ld	(hl),d
                           7513 ;demo.c:1008: cmd.dest_x = x;
   23C0 01r2Es41           7514 	ld	bc,#_cmd + 4
   23C3 DD 5E 07           7515 	ld	e,7 (ix)
   23C6 16 00              7516 	ld	d,#0x00
   23C8 69                 7517 	ld	l,c
   23C9 60                 7518 	ld	h,b
   23CA 73                 7519 	ld	(hl),e
   23CB 23                 7520 	inc	hl
   23CC 72                 7521 	ld	(hl),d
                           7522 ;demo.c:1009: cmd.dest_y = y;
   23CD 01r30s41           7523 	ld	bc,#_cmd + 6
   23D0 DD 5E 08           7524 	ld	e,8 (ix)
   23D3 16 00              7525 	ld	d,#0x00
   23D5 69                 7526 	ld	l,c
   23D6 60                 7527 	ld	h,b
   23D7 73                 7528 	ld	(hl),e
   23D8 23                 7529 	inc	hl
   23D9 72                 7530 	ld	(hl),d
                           7531 ;demo.c:1010: cmd.size_x = 16;
   23DA 21r32s41           7532 	ld	hl, #_cmd + 8
   23DD 36 10              7533 	ld	(hl),#0x10
   23DF 23                 7534 	inc	hl
   23E0 36 00              7535 	ld	(hl),#0x00
                           7536 ;demo.c:1011: cmd.size_y = 16;
   23E2 21r34s41           7537 	ld	hl, #_cmd + 10
   23E5 36 10              7538 	ld	(hl),#0x10
   23E7 23                 7539 	inc	hl
   23E8 36 00              7540 	ld	(hl),#0x00
                           7541 ;demo.c:1012: cmd.data = 0;
                           7542 ;demo.c:1013: cmd.argument = 0x00;
   23EA 3E 00              7543 	ld	a,#0x00
   23EC 32r36s41           7544 	ld	(#_cmd + 12),a
   23EF 32r37s41           7545 	ld	(#_cmd + 13),a
                           7546 ;demo.c:1014: cmd.command = 0xd0; // HMMM
   23F2 3E D0              7547 	ld	a,#0xD0
   23F4 32r38s41           7548 	ld	(#_cmd + 14),a
                           7549 ;demo.c:1015: vdp_copier(&cmd);
   23F7 21r2As41           7550 	ld	hl,#_cmd
   23FA E5                 7551 	push	hl
   23FB CDr00s00           7552 	call	_vdp_copier
   23FE F1                 7553 	pop	af
   23FF DD E1              7554 	pop	ix
   2401 C9                 7555 	ret
   2402                    7556 _drawtritile_end::
                           7557 ;demo.c:1022: void drawtilescreen(char* tripic) {
                           7558 ;	---------------------------------
                           7559 ; Function drawtilescreen
                           7560 ; ---------------------------------
   2402                    7561 _drawtilescreen_start::
   2402                    7562 _drawtilescreen:
   2402 DD E5              7563 	push	ix
   2404 DD 21 00 00        7564 	ld	ix,#0
   2408 DD 39              7565 	add	ix,sp
   240A F5                 7566 	push	af
   240B 3B                 7567 	dec	sp
                           7568 ;demo.c:1024: if(tilei >= 192) return;
   240C 3Ar16s42           7569 	ld	a,(#_tilei+0)
   240F D6 C0              7570 	sub	a,#0xC0
   2411 3Ar17s42           7571 	ld	a,(#_tilei+1)
   2414 DE 00              7572 	sbc	a,#0x00
   2416 FAr1Cs24           7573 	jp	M,00102$
   2419 C3rE7s24           7574 	jp	00112$
   241C                    7575 00102$:
                           7576 ;demo.c:1026: tiletick++;
   241C FD 21r1Cs42        7577 	ld	iy,#_tiletick
   2420 FD 34 00           7578 	inc	0 (iy)
                           7579 ;demo.c:1027: if (tiletick > 6) { tiletick = 0;}
   2423 3E 06              7580 	ld	a,#0x06
   2425 FD 21r1Cs42        7581 	ld	iy,#_tiletick
   2429 FD 96 00           7582 	sub	a,0 (iy)
   242C 30 0A              7583 	jr	NC,00104$
   242E FD 21r1Cs42        7584 	ld	iy,#_tiletick
   2432 FD 36 00 00        7585 	ld	0 (iy),#0x00
   2436 18 03              7586 	jr	00118$
   2438                    7587 00104$:
                           7588 ;demo.c:1028: else return;
   2438 C3rE7s24           7589 	jp	00112$
                           7590 ;demo.c:1029: for (i=0;i<20;i++) {
   243B                    7591 00118$:
   243B DD 36 FF 00        7592 	ld	-1 (ix),#0x00
   243F                    7593 00108$:
   243F DD 7E FF           7594 	ld	a,-1 (ix)
   2442 D6 14              7595 	sub	a,#0x14
   2444 D2rE7s24           7596 	jp	NC,00112$
                           7597 ;demo.c:1030: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2447 3Ar1As42           7598 	ld	a,(#_tiley+0)
   244A DD 77 FD           7599 	ld	-3 (ix),a
   244D 3Ar18s42           7600 	ld	a,(#_tilex+0)
   2450 DD 77 FE           7601 	ld	-2 (ix),a
   2453 21r16s42           7602 	ld	hl,#_tilei
   2456 DD 7E 04           7603 	ld	a,4 (ix)
   2459 86                 7604 	add	a,(hl)
   245A 57                 7605 	ld	d,a
   245B DD 7E 05           7606 	ld	a,5 (ix)
   245E 23                 7607 	inc	hl
   245F 8E                 7608 	adc	a,(hl)
   2460 6A                 7609 	ld	l,d
   2461 67                 7610 	ld	h,a
   2462 56                 7611 	ld	d,(hl)
   2463 7A                 7612 	ld	a,d
   2464 87                 7613 	add	a,a
   2465 C6r88              7614 	add	a,#<_tri_lookup_y
   2467 6F                 7615 	ld	l,a
   2468 3Es01              7616 	ld	a,#>_tri_lookup_y
   246A CE 00              7617 	adc	a,#0x00
   246C 67                 7618 	ld	h,a
   246D 4E                 7619 	ld	c,(hl)
   246E 23                 7620 	inc	hl
   246F 5E                 7621 	ld	e,(hl)
   2470 3Er00              7622 	ld	a,#<_tri_lookup_x
   2472 82                 7623 	add	a,d
   2473 6F                 7624 	ld	l,a
   2474 3Es01              7625 	ld	a,#>_tri_lookup_x
   2476 CE 00              7626 	adc	a,#0x00
   2478 67                 7627 	ld	h,a
   2479 56                 7628 	ld	d,(hl)
   247A DD 66 FD           7629 	ld	h,-3 (ix)
   247D DD 6E FE           7630 	ld	l,-2 (ix)
   2480 E5                 7631 	push	hl
   2481 69                 7632 	ld	l,c
   2482 63                 7633 	ld	h,e
   2483 E5                 7634 	push	hl
   2484 D5                 7635 	push	de
   2485 33                 7636 	inc	sp
   2486 CDr9Es23           7637 	call	_drawtritile
   2489 F1                 7638 	pop	af
   248A F1                 7639 	pop	af
   248B 33                 7640 	inc	sp
                           7641 ;demo.c:1031: tilex+=16;
   248C 21r18s42           7642 	ld	hl,#_tilex
   248F 7E                 7643 	ld	a,(hl)
   2490 C6 10              7644 	add	a,#0x10
   2492 23                 7645 	inc	hl
   2493 2B                 7646 	dec	hl
   2494 C5                 7647 	push	bc
   2495 4F                 7648 	ld	c, a
   2496 23                 7649 	inc	hl
   2497 7E                 7650 	ld	a, (hl)
   2498 47                 7651 	ld	b, a
   2499 79                 7652 	ld	a, c
   249A 2B                 7653 	dec	hl
   249B 77                 7654 	ld	(hl), a
   249C 78                 7655 	ld	a, b
   249D C1                 7656 	pop	bc
   249E CE 00              7657 	adc	a,#0x00
   24A0 23                 7658 	inc	hl
   24A1 77                 7659 	ld	(hl),a
                           7660 ;demo.c:1032: tilei++;
   24A2 FD 21r16s42        7661 	ld	iy,#_tilei
   24A6 FD 34 00           7662 	inc	0 (iy)
   24A9 20 07              7663 	jr	NZ,00119$
   24AB FD 21r16s42        7664 	ld	iy,#_tilei
   24AF FD 34 01           7665 	inc	1 (iy)
   24B2                    7666 00119$:
                           7667 ;demo.c:1033: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   24B2 3Ar18s42           7668 	ld	a,(#_tilex+0)
   24B5 D6 00              7669 	sub	a,#0x00
   24B7 3Ar19s42           7670 	ld	a,(#_tilex+1)
   24BA DE 01              7671 	sbc	a,#0x01
   24BC FArE1s24           7672 	jp	M,00110$
   24BF 21r18s42           7673 	ld	hl,#_tilex + 0
   24C2 36 00              7674 	ld	(hl), #0x00
   24C4 21r19s42           7675 	ld	hl,#_tilex + 1
   24C7 36 00              7676 	ld	(hl), #0x00
   24C9 21r1As42           7677 	ld	hl,#_tiley
   24CC 7E                 7678 	ld	a,(hl)
   24CD C6 10              7679 	add	a,#0x10
   24CF 23                 7680 	inc	hl
   24D0 2B                 7681 	dec	hl
   24D1 C5                 7682 	push	bc
   24D2 4F                 7683 	ld	c, a
   24D3 23                 7684 	inc	hl
   24D4 7E                 7685 	ld	a, (hl)
   24D5 47                 7686 	ld	b, a
   24D6 79                 7687 	ld	a, c
   24D7 2B                 7688 	dec	hl
   24D8 77                 7689 	ld	(hl), a
   24D9 78                 7690 	ld	a, b
   24DA C1                 7691 	pop	bc
   24DB CE 00              7692 	adc	a,#0x00
   24DD 23                 7693 	inc	hl
   24DE 77                 7694 	ld	(hl),a
   24DF 18 06              7695 	jr	00112$
   24E1                    7696 00110$:
                           7697 ;demo.c:1029: for (i=0;i<20;i++) {
   24E1 DD 34 FF           7698 	inc	-1 (ix)
   24E4 C3r3Fs24           7699 	jp	00108$
   24E7                    7700 00112$:
   24E7 DD F9              7701 	ld	sp,ix
   24E9 DD E1              7702 	pop	ix
   24EB C9                 7703 	ret
   24EC                    7704 _drawtilescreen_end::
                           7705 ;demo.c:1038: void drawtilescreen_full(char* tripic) {
                           7706 ;	---------------------------------
                           7707 ; Function drawtilescreen_full
                           7708 ; ---------------------------------
   24EC                    7709 _drawtilescreen_full_start::
   24EC                    7710 _drawtilescreen_full:
   24EC DD E5              7711 	push	ix
   24EE DD 21 00 00        7712 	ld	ix,#0
   24F2 DD 39              7713 	add	ix,sp
   24F4 21 F8 FF           7714 	ld	hl,#-8
   24F7 39                 7715 	add	hl,sp
   24F8 F9                 7716 	ld	sp,hl
                           7717 ;demo.c:1039: int x = 0;
   24F9 DD 36 FE 00        7718 	ld	-2 (ix),#0x00
   24FD DD 36 FF 00        7719 	ld	-1 (ix),#0x00
                           7720 ;demo.c:1042: while(i < 192) {
   2501 DD 36 FC 00        7721 	ld	-4 (ix),#0x00
   2505 DD 36 FD 00        7722 	ld	-3 (ix),#0x00
   2509 DD 36 FA 00        7723 	ld	-6 (ix),#0x00
   250D DD 36 FB 00        7724 	ld	-5 (ix),#0x00
   2511                    7725 00103$:
   2511 DD 7E FA           7726 	ld	a,-6 (ix)
   2514 D6 C0              7727 	sub	a,#0xC0
   2516 DD 7E FB           7728 	ld	a,-5 (ix)
   2519 DE 00              7729 	sbc	a,#0x00
   251B F2rA2s25           7730 	jp	P,00106$
                           7731 ;demo.c:1043: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   251E DD 7E FC           7732 	ld	a,-4 (ix)
   2521 DD 77 F8           7733 	ld	-8 (ix),a
   2524 DD 7E FE           7734 	ld	a,-2 (ix)
   2527 DD 77 F9           7735 	ld	-7 (ix),a
   252A DD 7E 04           7736 	ld	a,4 (ix)
   252D DD 86 FA           7737 	add	a,-6 (ix)
   2530 4F                 7738 	ld	c,a
   2531 DD 7E 05           7739 	ld	a,5 (ix)
   2534 DD 8E FB           7740 	adc	a,-5 (ix)
   2537 47                 7741 	ld	b,a
   2538 0A                 7742 	ld	a,(bc)
   2539 4F                 7743 	ld	c,a
   253A 87                 7744 	add	a,a
   253B C6r88              7745 	add	a,#<_tri_lookup_y
   253D 6F                 7746 	ld	l,a
   253E 3Es01              7747 	ld	a,#>_tri_lookup_y
   2540 CE 00              7748 	adc	a,#0x00
   2542 67                 7749 	ld	h,a
   2543 46                 7750 	ld	b,(hl)
   2544 23                 7751 	inc	hl
   2545 56                 7752 	ld	d,(hl)
   2546 3Er00              7753 	ld	a,#<_tri_lookup_x
   2548 81                 7754 	add	a,c
   2549 6F                 7755 	ld	l,a
   254A 3Es01              7756 	ld	a,#>_tri_lookup_x
   254C CE 00              7757 	adc	a,#0x00
   254E 67                 7758 	ld	h,a
   254F 4E                 7759 	ld	c,(hl)
   2550 DD 66 F8           7760 	ld	h,-8 (ix)
   2553 DD 6E F9           7761 	ld	l,-7 (ix)
   2556 E5                 7762 	push	hl
   2557 58                 7763 	ld	e,b
   2558 D5                 7764 	push	de
   2559 79                 7765 	ld	a,c
   255A F5                 7766 	push	af
   255B 33                 7767 	inc	sp
   255C CDr9Es23           7768 	call	_drawtritile
   255F F1                 7769 	pop	af
   2560 F1                 7770 	pop	af
   2561 33                 7771 	inc	sp
                           7772 ;demo.c:1044: x+=16;
   2562 DD 7E FE           7773 	ld	a,-2 (ix)
   2565 C6 10              7774 	add	a,#0x10
   2567 DD 77 FE           7775 	ld	-2 (ix),a
   256A DD 7E FF           7776 	ld	a,-1 (ix)
   256D CE 00              7777 	adc	a,#0x00
   256F DD 77 FF           7778 	ld	-1 (ix),a
                           7779 ;demo.c:1045: if (x >= 256) {x = 0; y+=16;}
   2572 DD 7E FE           7780 	ld	a,-2 (ix)
   2575 D6 00              7781 	sub	a,#0x00
   2577 DD 7E FF           7782 	ld	a,-1 (ix)
   257A DE 01              7783 	sbc	a,#0x01
   257C FAr97s25           7784 	jp	M,00102$
   257F DD 36 FE 00        7785 	ld	-2 (ix),#0x00
   2583 DD 36 FF 00        7786 	ld	-1 (ix),#0x00
   2587 DD 7E FC           7787 	ld	a,-4 (ix)
   258A C6 10              7788 	add	a,#0x10
   258C DD 77 FC           7789 	ld	-4 (ix),a
   258F DD 7E FD           7790 	ld	a,-3 (ix)
   2592 CE 00              7791 	adc	a,#0x00
   2594 DD 77 FD           7792 	ld	-3 (ix),a
   2597                    7793 00102$:
                           7794 ;demo.c:1046: i++;
   2597 DD 34 FA           7795 	inc	-6 (ix)
   259A 20 03              7796 	jr	NZ,00112$
   259C DD 34 FB           7797 	inc	-5 (ix)
   259F                    7798 00112$:
   259F C3r11s25           7799 	jp	00103$
   25A2                    7800 00106$:
   25A2 DD F9              7801 	ld	sp,ix
   25A4 DD E1              7802 	pop	ix
   25A6 C9                 7803 	ret
   25A7                    7804 _drawtilescreen_full_end::
                           7805 ;demo.c:1062: void tritiles() {
                           7806 ;	---------------------------------
                           7807 ; Function tritiles
                           7808 ; ---------------------------------
   25A7                    7809 _tritiles_start::
   25A7                    7810 _tritiles:
   25A7 DD E5              7811 	push	ix
   25A9 DD 21 00 00        7812 	ld	ix,#0
   25AD DD 39              7813 	add	ix,sp
   25AF 21 FB FF           7814 	ld	hl,#-5
   25B2 39                 7815 	add	hl,sp
   25B3 F9                 7816 	ld	sp,hl
                           7817 ;demo.c:1069: if (tri_inited == 0 || tri_inited == 2) {
   25B4 AF                 7818 	xor	a,a
   25B5 FD 21r15s42        7819 	ld	iy,#_tri_inited
   25B9 FD B6 00           7820 	or	a,0 (iy)
   25BC 28 0C              7821 	jr	Z,00106$
   25BE FD 21r15s42        7822 	ld	iy,#_tri_inited
   25C2 FD 7E 00           7823 	ld	a,0 (iy)
   25C5 D6 02              7824 	sub	a,#0x02
   25C7 C2r23s27           7825 	jp	NZ,00107$
   25CA                    7826 00106$:
                           7827 ;demo.c:1071: cmd.size_x = 2;
   25CA 21r32s41           7828 	ld	hl, #_cmd + 8
   25CD 36 02              7829 	ld	(hl),#0x02
   25CF 23                 7830 	inc	hl
   25D0 36 00              7831 	ld	(hl),#0x00
                           7832 ;demo.c:1072: cmd.size_y = 212;
   25D2 21r34s41           7833 	ld	hl, #_cmd + 10
   25D5 36 D4              7834 	ld	(hl),#0xD4
   25D7 23                 7835 	inc	hl
   25D8 36 00              7836 	ld	(hl),#0x00
                           7837 ;demo.c:1073: cmd.data = 0;
                           7838 ;demo.c:1074: cmd.argument = 0x00; // from 70xY to left
   25DA 3E 00              7839 	ld	a,#0x00
   25DC 32r36s41           7840 	ld	(#_cmd + 12),a
   25DF 32r37s41           7841 	ld	(#_cmd + 13),a
                           7842 ;demo.c:1075: cmd.command = 0xd0; // vram to vram, y only
   25E2 3E D0              7843 	ld	a,#0xD0
   25E4 32r38s41           7844 	ld	(#_cmd + 14),a
                           7845 ;demo.c:1076: cmd.source_x = 255;
   25E7 21r2As41           7846 	ld	hl,#_cmd
   25EA 36 FF              7847 	ld	(hl),#0xFF
   25EC 23                 7848 	inc	hl
   25ED 36 00              7849 	ld	(hl),#0x00
                           7850 ;demo.c:1077: cmd.source_y = 0;
   25EF 01r2Cs41           7851 	ld	bc,#_cmd + 2
   25F2 69                 7852 	ld	l,c
   25F3 60                 7853 	ld	h,b
   25F4 36 00              7854 	ld	(hl),#0x00
   25F6 23                 7855 	inc	hl
   25F7 36 00              7856 	ld	(hl),#0x00
                           7857 ;demo.c:1079: for (x = 0; x < 128; x+=2) {
   25F9 DD 36 FE 00        7858 	ld	-2 (ix),#0x00
   25FD DD 36 FF 00        7859 	ld	-1 (ix),#0x00
   2601                    7860 00167$:
   2601 DD 7E FE           7861 	ld	a,-2 (ix)
   2604 D6 80              7862 	sub	a,#0x80
   2606 DD 7E FF           7863 	ld	a,-1 (ix)
   2609 DE 00              7864 	sbc	a,#0x00
   260B F2r8As26           7865 	jp	P,00170$
                           7866 ;demo.c:1080: waitVB();
   260E 76                 7867 		halt 
                           7868 ;demo.c:1081: cmd.dest_y = 256;
   260F 11r30s41           7869 	ld	de,#_cmd + 6
   2612 EB                 7870 	ex	de,hl
   2613 36 00              7871 	ld	(hl),#0x00
   2615 23                 7872 	inc	hl
   2616 36 01              7873 	ld	(hl),#0x01
                           7874 ;demo.c:1082: cmd.dest_x = 128-x;
   2618 11r2Es41           7875 	ld	de,#_cmd + 4
   261B 3E 80              7876 	ld	a,#0x80
   261D DD 96 FE           7877 	sub	a,-2 (ix)
   2620 4F                 7878 	ld	c,a
   2621 3E 00              7879 	ld	a,#0x00
   2623 DD 9E FF           7880 	sbc	a,-1 (ix)
   2626 47                 7881 	ld	b,a
   2627 EB                 7882 	ex	de,hl
   2628 71                 7883 	ld	(hl),c
   2629 23                 7884 	inc	hl
   262A 70                 7885 	ld	(hl),b
                           7886 ;demo.c:1083: vdp_copier(&cmd);
   262B 21r2As41           7887 	ld	hl,#_cmd
   262E E5                 7888 	push	hl
   262F CDr00s00           7889 	call	_vdp_copier
   2632 F1                 7890 	pop	af
                           7891 ;demo.c:1084: cmd.dest_y = 0;
   2633 21r30s41           7892 	ld	hl, #_cmd + 6
   2636 36 00              7893 	ld	(hl),#0x00
   2638 23                 7894 	inc	hl
   2639 36 00              7895 	ld	(hl),#0x00
                           7896 ;demo.c:1085: vdp_copier(&cmd);
   263B 21r2As41           7897 	ld	hl,#_cmd
   263E E5                 7898 	push	hl
   263F CDr00s00           7899 	call	_vdp_copier
   2642 F1                 7900 	pop	af
                           7901 ;demo.c:1086: cmd.dest_y = 256;
   2643 21r30s41           7902 	ld	hl, #_cmd + 6
   2646 36 00              7903 	ld	(hl),#0x00
   2648 23                 7904 	inc	hl
   2649 36 01              7905 	ld	(hl),#0x01
                           7906 ;demo.c:1087: cmd.dest_x = 128+x;
   264B 01r2Es41           7907 	ld	bc,#_cmd + 4
   264E DD 7E FE           7908 	ld	a,-2 (ix)
   2651 C6 80              7909 	add	a,#0x80
   2653 5F                 7910 	ld	e,a
   2654 DD 7E FF           7911 	ld	a,-1 (ix)
   2657 CE 00              7912 	adc	a,#0x00
   2659 57                 7913 	ld	d,a
   265A 69                 7914 	ld	l,c
   265B 60                 7915 	ld	h,b
   265C 73                 7916 	ld	(hl),e
   265D 23                 7917 	inc	hl
   265E 72                 7918 	ld	(hl),d
                           7919 ;demo.c:1088: vdp_copier(&cmd);
   265F 21r2As41           7920 	ld	hl,#_cmd
   2662 E5                 7921 	push	hl
   2663 CDr00s00           7922 	call	_vdp_copier
   2666 F1                 7923 	pop	af
                           7924 ;demo.c:1089: cmd.dest_y = 0;
   2667 21r30s41           7925 	ld	hl, #_cmd + 6
   266A 36 00              7926 	ld	(hl),#0x00
   266C 23                 7927 	inc	hl
   266D 36 00              7928 	ld	(hl),#0x00
                           7929 ;demo.c:1090: vdp_copier(&cmd);
   266F 21r2As41           7930 	ld	hl,#_cmd
   2672 E5                 7931 	push	hl
   2673 CDr00s00           7932 	call	_vdp_copier
   2676 F1                 7933 	pop	af
                           7934 ;demo.c:1079: for (x = 0; x < 128; x+=2) {
   2677 DD 7E FE           7935 	ld	a,-2 (ix)
   267A C6 02              7936 	add	a,#0x02
   267C DD 77 FE           7937 	ld	-2 (ix),a
   267F DD 7E FF           7938 	ld	a,-1 (ix)
   2682 CE 00              7939 	adc	a,#0x00
   2684 DD 77 FF           7940 	ld	-1 (ix),a
   2687 C3r01s26           7941 	jp	00167$
   268A                    7942 00170$:
                           7943 ;demo.c:1093: scratch_clear();
   268A CDr24s08           7944 	call	_scratch_clear
                           7945 ;demo.c:1094: vdp_load_palette(scratch);
   268D 21rC6s3F           7946 	ld	hl,#_scratch
   2690 E5                 7947 	push	hl
   2691 CDr00s00           7948 	call	_vdp_load_palette
   2694 F1                 7949 	pop	af
                           7950 ;demo.c:1096: tri_inited++;
   2695 FD 21r15s42        7951 	ld	iy,#_tri_inited
   2699 FD 34 00           7952 	inc	0 (iy)
                           7953 ;demo.c:1097: vdp_register(9,2); // 50hz,192
   269C 21 09 02           7954 	ld	hl,#0x0209
   269F E5                 7955 	push	hl
   26A0 CDr00s00           7956 	call	_vdp_register
   26A3 F1                 7957 	pop	af
                           7958 ;demo.c:1101: vdp_register(2, 0x1f);
   26A4 21 02 1F           7959 	ld	hl,#0x1F02
   26A7 E5                 7960 	push	hl
   26A8 CDr00s00           7961 	call	_vdp_register
   26AB F1                 7962 	pop	af
                           7963 ;demo.c:1102: tick = 0;
   26AC 21r28s41           7964 	ld	hl,#_tick + 0
   26AF 36 00              7965 	ld	(hl), #0x00
   26B1 21r29s41           7966 	ld	hl,#_tick + 1
   26B4 36 00              7967 	ld	(hl), #0x00
                           7968 ;demo.c:1105: if (tri_inited == 0) vdp_load_palette(boxes_palette);
   26B6 AF                 7969 	xor	a,a
   26B7 21r15s42           7970 	ld	hl,#_tri_inited + 0
   26BA B6                 7971 	or	a,(hl)
   26BB 20 0A              7972 	jr	NZ,00104$
   26BD 21rE6s40           7973 	ld	hl,#_boxes_palette
   26C0 E5                 7974 	push	hl
   26C1 CDr00s00           7975 	call	_vdp_load_palette
   26C4 F1                 7976 	pop	af
   26C5 18 46              7977 	jr	00105$
   26C7                    7978 00104$:
                           7979 ;demo.c:1106: else if (tri_inited == 2) { 
   26C7 3Ar15s42           7980 	ld	a,(#_tri_inited+0)
   26CA D6 02              7981 	sub	a,#0x02
   26CC 20 3F              7982 	jr	NZ,00105$
                           7983 ;demo.c:1107: vdp_load_palette(boxes_palette); 
   26CE 21rE6s40           7984 	ld	hl,#_boxes_palette
   26D1 E5                 7985 	push	hl
   26D2 CDr00s00           7986 	call	_vdp_load_palette
   26D5 F1                 7987 	pop	af
                           7988 ;demo.c:1108: triframes = 0; 
   26D6 21r28s42           7989 	ld	hl,#_triframes + 0
   26D9 36 00              7990 	ld	(hl), #0x00
   26DB 21r29s42           7991 	ld	hl,#_triframes + 1
   26DE 36 00              7992 	ld	(hl), #0x00
                           7993 ;demo.c:1110: tripal[0] = 4;
   26E0 21r1Ds42           7994 	ld	hl,#_tripal
   26E3 36 04              7995 	ld	(hl),#0x04
                           7996 ;demo.c:1111: tripal[1] = 4;
   26E5 3E 04              7997 	ld	a,#0x04
   26E7 32r1Es42           7998 	ld	(#_tripal + 1),a
                           7999 ;demo.c:1112: tripal[2] = 3;
   26EA 3E 03              8000 	ld	a,#0x03
   26EC 32r1Fs42           8001 	ld	(#_tripal + 2),a
                           8002 ;demo.c:1114: tripal[3] = 2;
   26EF 3E 02              8003 	ld	a,#0x02
   26F1 32r20s42           8004 	ld	(#_tripal + 3),a
                           8005 ;demo.c:1115: tripal[4] = 3;
   26F4 3E 03              8006 	ld	a,#0x03
   26F6 32r21s42           8007 	ld	(#_tripal + 4),a
                           8008 ;demo.c:1116: tripal[5] = 4;
   26F9 3E 04              8009 	ld	a,#0x04
   26FB 32r22s42           8010 	ld	(#_tripal + 5),a
                           8011 ;demo.c:1118: tripal[6] = 1;
   26FE 3E 01              8012 	ld	a,#0x01
   2700 32r23s42           8013 	ld	(#_tripal + 6),a
                           8014 ;demo.c:1119: tripal[7] = 3;
   2703 3E 03              8015 	ld	a,#0x03
   2705 32r24s42           8016 	ld	(#_tripal + 7),a
                           8017 ;demo.c:1120: tripal[8] = 1;
   2708 3E 01              8018 	ld	a,#0x01
   270A 32r25s42           8019 	ld	(#_tripal + 8),a
   270D                    8020 00105$:
                           8021 ;demo.c:1123: msx2_palette(15,0,0,0);
   270D 21 00 00           8022 	ld	hl,#0x0000
   2710 E5                 8023 	push	hl
   2711 2E 0F              8024 	ld	l, #0x0F
   2713 E5                 8025 	push	hl
   2714 CDr00s00           8026 	call	_msx2_palette
   2717 F1                 8027 	pop	af
   2718 F1                 8028 	pop	af
                           8029 ;demo.c:1124: triframes = 1350;
   2719 21r28s42           8030 	ld	hl,#_triframes + 0
   271C 36 46              8031 	ld	(hl), #0x46
   271E 21r29s42           8032 	ld	hl,#_triframes + 1
   2721 36 05              8033 	ld	(hl), #0x05
   2723                    8034 00107$:
                           8035 ;demo.c:1128: if (tri_inited == 1) triframes++;
   2723 3Ar15s42           8036 	ld	a,(#_tri_inited+0)
   2726 D6 01              8037 	sub	a,#0x01
   2728 20 10              8038 	jr	NZ,00110$
   272A FD 21r28s42        8039 	ld	iy,#_triframes
   272E FD 34 00           8040 	inc	0 (iy)
   2731 20 07              8041 	jr	NZ,00225$
   2733 FD 21r28s42        8042 	ld	iy,#_triframes
   2737 FD 34 01           8043 	inc	1 (iy)
   273A                    8044 00225$:
   273A                    8045 00110$:
                           8046 ;demo.c:1130: if (triframes == 150) { tilei = 0; tilex = 0; tiley = 0; }
   273A 3Ar28s42           8047 	ld	a,(#_triframes+0)
   273D D6 96              8048 	sub	a,#0x96
   273F 20 06              8049 	jr	NZ,00226$
   2741 3Ar29s42           8050 	ld	a,(#_triframes+1)
   2744 B7                 8051 	or	a,a
   2745 28 02              8052 	jr	Z,00227$
   2747                    8053 00226$:
   2747 18 1E              8054 	jr	00112$
   2749                    8055 00227$:
   2749 21r16s42           8056 	ld	hl,#_tilei + 0
   274C 36 00              8057 	ld	(hl), #0x00
   274E 21r17s42           8058 	ld	hl,#_tilei + 1
   2751 36 00              8059 	ld	(hl), #0x00
   2753 21r18s42           8060 	ld	hl,#_tilex + 0
   2756 36 00              8061 	ld	(hl), #0x00
   2758 21r19s42           8062 	ld	hl,#_tilex + 1
   275B 36 00              8063 	ld	(hl), #0x00
   275D 21r1As42           8064 	ld	hl,#_tiley + 0
   2760 36 00              8065 	ld	(hl), #0x00
   2762 21r1Bs42           8066 	ld	hl,#_tiley + 1
   2765 36 00              8067 	ld	(hl), #0x00
   2767                    8068 00112$:
                           8069 ;demo.c:1131: if (triframes >= 150 && triframes < 300) {
   2767 3Ar28s42           8070 	ld	a,(#_triframes+0)
   276A D6 96              8071 	sub	a,#0x96
   276C 3Ar29s42           8072 	ld	a,(#_triframes+1)
   276F DE 00              8073 	sbc	a,#0x00
   2771 FAr89s27           8074 	jp	M,00114$
   2774 3Ar28s42           8075 	ld	a,(#_triframes+0)
   2777 D6 2C              8076 	sub	a,#0x2C
   2779 3Ar29s42           8077 	ld	a,(#_triframes+1)
   277C DE 01              8078 	sbc	a,#0x01
   277E F2r89s27           8079 	jp	P,00114$
                           8080 ;demo.c:1132: drawtilescreen(tri_up);
   2781 21rECs01           8081 	ld	hl,#_tri_up
   2784 E5                 8082 	push	hl
   2785 CDr02s24           8083 	call	_drawtilescreen
   2788 F1                 8084 	pop	af
   2789                    8085 00114$:
                           8086 ;demo.c:1135: if (triframes == 300) { tilei = 0; tilex = 0; tiley = 0; }
   2789 3Ar28s42           8087 	ld	a,(#_triframes+0)
   278C D6 2C              8088 	sub	a,#0x2C
   278E 20 07              8089 	jr	NZ,00228$
   2790 3Ar29s42           8090 	ld	a,(#_triframes+1)
   2793 D6 01              8091 	sub	a,#0x01
   2795 28 02              8092 	jr	Z,00229$
   2797                    8093 00228$:
   2797 18 1E              8094 	jr	00117$
   2799                    8095 00229$:
   2799 21r16s42           8096 	ld	hl,#_tilei + 0
   279C 36 00              8097 	ld	(hl), #0x00
   279E 21r17s42           8098 	ld	hl,#_tilei + 1
   27A1 36 00              8099 	ld	(hl), #0x00
   27A3 21r18s42           8100 	ld	hl,#_tilex + 0
   27A6 36 00              8101 	ld	(hl), #0x00
   27A8 21r19s42           8102 	ld	hl,#_tilex + 1
   27AB 36 00              8103 	ld	(hl), #0x00
   27AD 21r1As42           8104 	ld	hl,#_tiley + 0
   27B0 36 00              8105 	ld	(hl), #0x00
   27B2 21r1Bs42           8106 	ld	hl,#_tiley + 1
   27B5 36 00              8107 	ld	(hl), #0x00
   27B7                    8108 00117$:
                           8109 ;demo.c:1136: if (triframes >= 300 && triframes < 450) {
   27B7 3Ar28s42           8110 	ld	a,(#_triframes+0)
   27BA D6 2C              8111 	sub	a,#0x2C
   27BC 3Ar29s42           8112 	ld	a,(#_triframes+1)
   27BF DE 01              8113 	sbc	a,#0x01
   27C1 FArD9s27           8114 	jp	M,00119$
   27C4 3Ar28s42           8115 	ld	a,(#_triframes+0)
   27C7 D6 C2              8116 	sub	a,#0xC2
   27C9 3Ar29s42           8117 	ld	a,(#_triframes+1)
   27CC DE 01              8118 	sbc	a,#0x01
   27CE F2rD9s27           8119 	jp	P,00119$
                           8120 ;demo.c:1137: drawtilescreen(tri_dia);
   27D1 21rACs02           8121 	ld	hl,#_tri_dia
   27D4 E5                 8122 	push	hl
   27D5 CDr02s24           8123 	call	_drawtilescreen
   27D8 F1                 8124 	pop	af
   27D9                    8125 00119$:
                           8126 ;demo.c:1140: if (triframes == 450) { tilei = 0; tilex = 0; tiley = 0; }
   27D9 3Ar28s42           8127 	ld	a,(#_triframes+0)
   27DC D6 C2              8128 	sub	a,#0xC2
   27DE 20 07              8129 	jr	NZ,00230$
   27E0 3Ar29s42           8130 	ld	a,(#_triframes+1)
   27E3 D6 01              8131 	sub	a,#0x01
   27E5 28 02              8132 	jr	Z,00231$
   27E7                    8133 00230$:
   27E7 18 1E              8134 	jr	00122$
   27E9                    8135 00231$:
   27E9 21r16s42           8136 	ld	hl,#_tilei + 0
   27EC 36 00              8137 	ld	(hl), #0x00
   27EE 21r17s42           8138 	ld	hl,#_tilei + 1
   27F1 36 00              8139 	ld	(hl), #0x00
   27F3 21r18s42           8140 	ld	hl,#_tilex + 0
   27F6 36 00              8141 	ld	(hl), #0x00
   27F8 21r19s42           8142 	ld	hl,#_tilex + 1
   27FB 36 00              8143 	ld	(hl), #0x00
   27FD 21r1As42           8144 	ld	hl,#_tiley + 0
   2800 36 00              8145 	ld	(hl), #0x00
   2802 21r1Bs42           8146 	ld	hl,#_tiley + 1
   2805 36 00              8147 	ld	(hl), #0x00
   2807                    8148 00122$:
                           8149 ;demo.c:1141: if (triframes >= 450 && triframes < 600) {
   2807 3Ar28s42           8150 	ld	a,(#_triframes+0)
   280A D6 C2              8151 	sub	a,#0xC2
   280C 3Ar29s42           8152 	ld	a,(#_triframes+1)
   280F DE 01              8153 	sbc	a,#0x01
   2811 FAr29s28           8154 	jp	M,00124$
   2814 3Ar28s42           8155 	ld	a,(#_triframes+0)
   2817 D6 58              8156 	sub	a,#0x58
   2819 3Ar29s42           8157 	ld	a,(#_triframes+1)
   281C DE 02              8158 	sbc	a,#0x02
   281E F2r29s28           8159 	jp	P,00124$
                           8160 ;demo.c:1142: drawtilescreen(tri_side1);
   2821 21r6Cs03           8161 	ld	hl,#_tri_side1
   2824 E5                 8162 	push	hl
   2825 CDr02s24           8163 	call	_drawtilescreen
   2828 F1                 8164 	pop	af
   2829                    8165 00124$:
                           8166 ;demo.c:1145: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2829 3Ar28s42           8167 	ld	a,(#_triframes+0)
   282C D6 58              8168 	sub	a,#0x58
   282E 20 07              8169 	jr	NZ,00232$
   2830 3Ar29s42           8170 	ld	a,(#_triframes+1)
   2833 D6 02              8171 	sub	a,#0x02
   2835 28 02              8172 	jr	Z,00233$
   2837                    8173 00232$:
   2837 18 1E              8174 	jr	00127$
   2839                    8175 00233$:
   2839 21r16s42           8176 	ld	hl,#_tilei + 0
   283C 36 00              8177 	ld	(hl), #0x00
   283E 21r17s42           8178 	ld	hl,#_tilei + 1
   2841 36 00              8179 	ld	(hl), #0x00
   2843 21r18s42           8180 	ld	hl,#_tilex + 0
   2846 36 00              8181 	ld	(hl), #0x00
   2848 21r19s42           8182 	ld	hl,#_tilex + 1
   284B 36 00              8183 	ld	(hl), #0x00
   284D 21r1As42           8184 	ld	hl,#_tiley + 0
   2850 36 00              8185 	ld	(hl), #0x00
   2852 21r1Bs42           8186 	ld	hl,#_tiley + 1
   2855 36 00              8187 	ld	(hl), #0x00
   2857                    8188 00127$:
                           8189 ;demo.c:1146: if (triframes >= 600 && triframes < 750) {
   2857 3Ar28s42           8190 	ld	a,(#_triframes+0)
   285A D6 58              8191 	sub	a,#0x58
   285C 3Ar29s42           8192 	ld	a,(#_triframes+1)
   285F DE 02              8193 	sbc	a,#0x02
   2861 FAr79s28           8194 	jp	M,00129$
   2864 3Ar28s42           8195 	ld	a,(#_triframes+0)
   2867 D6 EE              8196 	sub	a,#0xEE
   2869 3Ar29s42           8197 	ld	a,(#_triframes+1)
   286C DE 02              8198 	sbc	a,#0x02
   286E F2r79s28           8199 	jp	P,00129$
                           8200 ;demo.c:1147: drawtilescreen(tri_side2);
   2871 21r2Cs04           8201 	ld	hl,#_tri_side2
   2874 E5                 8202 	push	hl
   2875 CDr02s24           8203 	call	_drawtilescreen
   2878 F1                 8204 	pop	af
   2879                    8205 00129$:
                           8206 ;demo.c:1150: if (triframes == 750) { tilei = 0; tilex = 0; tiley = 0; }
   2879 3Ar28s42           8207 	ld	a,(#_triframes+0)
   287C D6 EE              8208 	sub	a,#0xEE
   287E 20 07              8209 	jr	NZ,00234$
   2880 3Ar29s42           8210 	ld	a,(#_triframes+1)
   2883 D6 02              8211 	sub	a,#0x02
   2885 28 02              8212 	jr	Z,00235$
   2887                    8213 00234$:
   2887 18 1E              8214 	jr	00132$
   2889                    8215 00235$:
   2889 21r16s42           8216 	ld	hl,#_tilei + 0
   288C 36 00              8217 	ld	(hl), #0x00
   288E 21r17s42           8218 	ld	hl,#_tilei + 1
   2891 36 00              8219 	ld	(hl), #0x00
   2893 21r18s42           8220 	ld	hl,#_tilex + 0
   2896 36 00              8221 	ld	(hl), #0x00
   2898 21r19s42           8222 	ld	hl,#_tilex + 1
   289B 36 00              8223 	ld	(hl), #0x00
   289D 21r1As42           8224 	ld	hl,#_tiley + 0
   28A0 36 00              8225 	ld	(hl), #0x00
   28A2 21r1Bs42           8226 	ld	hl,#_tiley + 1
   28A5 36 00              8227 	ld	(hl), #0x00
   28A7                    8228 00132$:
                           8229 ;demo.c:1151: if (triframes >= 750 && triframes < 900) {
   28A7 3Ar28s42           8230 	ld	a,(#_triframes+0)
   28AA D6 EE              8231 	sub	a,#0xEE
   28AC 3Ar29s42           8232 	ld	a,(#_triframes+1)
   28AF DE 02              8233 	sbc	a,#0x02
   28B1 FArC9s28           8234 	jp	M,00134$
   28B4 3Ar28s42           8235 	ld	a,(#_triframes+0)
   28B7 D6 84              8236 	sub	a,#0x84
   28B9 3Ar29s42           8237 	ld	a,(#_triframes+1)
   28BC DE 03              8238 	sbc	a,#0x03
   28BE F2rC9s28           8239 	jp	P,00134$
                           8240 ;demo.c:1152: drawtilescreen(tri_inva1);
   28C1 21rECs04           8241 	ld	hl,#_tri_inva1
   28C4 E5                 8242 	push	hl
   28C5 CDr02s24           8243 	call	_drawtilescreen
   28C8 F1                 8244 	pop	af
   28C9                    8245 00134$:
                           8246 ;demo.c:1155: if (triframes == 900) { tilei = 0; tilex = 0; tiley = 0; }
   28C9 3Ar28s42           8247 	ld	a,(#_triframes+0)
   28CC D6 84              8248 	sub	a,#0x84
   28CE 20 07              8249 	jr	NZ,00236$
   28D0 3Ar29s42           8250 	ld	a,(#_triframes+1)
   28D3 D6 03              8251 	sub	a,#0x03
   28D5 28 02              8252 	jr	Z,00237$
   28D7                    8253 00236$:
   28D7 18 1E              8254 	jr	00137$
   28D9                    8255 00237$:
   28D9 21r16s42           8256 	ld	hl,#_tilei + 0
   28DC 36 00              8257 	ld	(hl), #0x00
   28DE 21r17s42           8258 	ld	hl,#_tilei + 1
   28E1 36 00              8259 	ld	(hl), #0x00
   28E3 21r18s42           8260 	ld	hl,#_tilex + 0
   28E6 36 00              8261 	ld	(hl), #0x00
   28E8 21r19s42           8262 	ld	hl,#_tilex + 1
   28EB 36 00              8263 	ld	(hl), #0x00
   28ED 21r1As42           8264 	ld	hl,#_tiley + 0
   28F0 36 00              8265 	ld	(hl), #0x00
   28F2 21r1Bs42           8266 	ld	hl,#_tiley + 1
   28F5 36 00              8267 	ld	(hl), #0x00
   28F7                    8268 00137$:
                           8269 ;demo.c:1156: if (triframes >= 900 && triframes < 1050) {
   28F7 3Ar28s42           8270 	ld	a,(#_triframes+0)
   28FA D6 84              8271 	sub	a,#0x84
   28FC 3Ar29s42           8272 	ld	a,(#_triframes+1)
   28FF DE 03              8273 	sbc	a,#0x03
   2901 FAr19s29           8274 	jp	M,00139$
   2904 3Ar28s42           8275 	ld	a,(#_triframes+0)
   2907 D6 1A              8276 	sub	a,#0x1A
   2909 3Ar29s42           8277 	ld	a,(#_triframes+1)
   290C DE 04              8278 	sbc	a,#0x04
   290E F2r19s29           8279 	jp	P,00139$
                           8280 ;demo.c:1157: drawtilescreen(tri_inva2);
   2911 21rACs05           8281 	ld	hl,#_tri_inva2
   2914 E5                 8282 	push	hl
   2915 CDr02s24           8283 	call	_drawtilescreen
   2918 F1                 8284 	pop	af
   2919                    8285 00139$:
                           8286 ;demo.c:1160: if (triframes == 1050) { tilei = 0; tilex = 0; tiley = 0; }
   2919 3Ar28s42           8287 	ld	a,(#_triframes+0)
   291C D6 1A              8288 	sub	a,#0x1A
   291E 20 07              8289 	jr	NZ,00238$
   2920 3Ar29s42           8290 	ld	a,(#_triframes+1)
   2923 D6 04              8291 	sub	a,#0x04
   2925 28 02              8292 	jr	Z,00239$
   2927                    8293 00238$:
   2927 18 1E              8294 	jr	00142$
   2929                    8295 00239$:
   2929 21r16s42           8296 	ld	hl,#_tilei + 0
   292C 36 00              8297 	ld	(hl), #0x00
   292E 21r17s42           8298 	ld	hl,#_tilei + 1
   2931 36 00              8299 	ld	(hl), #0x00
   2933 21r18s42           8300 	ld	hl,#_tilex + 0
   2936 36 00              8301 	ld	(hl), #0x00
   2938 21r19s42           8302 	ld	hl,#_tilex + 1
   293B 36 00              8303 	ld	(hl), #0x00
   293D 21r1As42           8304 	ld	hl,#_tiley + 0
   2940 36 00              8305 	ld	(hl), #0x00
   2942 21r1Bs42           8306 	ld	hl,#_tiley + 1
   2945 36 00              8307 	ld	(hl), #0x00
   2947                    8308 00142$:
                           8309 ;demo.c:1161: if (triframes >= 1050 && triframes < 1200) {
   2947 3Ar28s42           8310 	ld	a,(#_triframes+0)
   294A D6 1A              8311 	sub	a,#0x1A
   294C 3Ar29s42           8312 	ld	a,(#_triframes+1)
   294F DE 04              8313 	sbc	a,#0x04
   2951 FAr69s29           8314 	jp	M,00144$
   2954 3Ar28s42           8315 	ld	a,(#_triframes+0)
   2957 D6 B0              8316 	sub	a,#0xB0
   2959 3Ar29s42           8317 	ld	a,(#_triframes+1)
   295C DE 04              8318 	sbc	a,#0x04
   295E F2r69s29           8319 	jp	P,00144$
                           8320 ;demo.c:1162: drawtilescreen(tri_inva3);
   2961 21r6Cs06           8321 	ld	hl,#_tri_inva3
   2964 E5                 8322 	push	hl
   2965 CDr02s24           8323 	call	_drawtilescreen
   2968 F1                 8324 	pop	af
   2969                    8325 00144$:
                           8326 ;demo.c:1165: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   2969 3Ar28s42           8327 	ld	a,(#_triframes+0)
   296C D6 B0              8328 	sub	a,#0xB0
   296E 20 07              8329 	jr	NZ,00240$
   2970 3Ar29s42           8330 	ld	a,(#_triframes+1)
   2973 D6 04              8331 	sub	a,#0x04
   2975 28 02              8332 	jr	Z,00241$
   2977                    8333 00240$:
   2977 18 1E              8334 	jr	00147$
   2979                    8335 00241$:
   2979 21r16s42           8336 	ld	hl,#_tilei + 0
   297C 36 00              8337 	ld	(hl), #0x00
   297E 21r17s42           8338 	ld	hl,#_tilei + 1
   2981 36 00              8339 	ld	(hl), #0x00
   2983 21r18s42           8340 	ld	hl,#_tilex + 0
   2986 36 00              8341 	ld	(hl), #0x00
   2988 21r19s42           8342 	ld	hl,#_tilex + 1
   298B 36 00              8343 	ld	(hl), #0x00
   298D 21r1As42           8344 	ld	hl,#_tiley + 0
   2990 36 00              8345 	ld	(hl), #0x00
   2992 21r1Bs42           8346 	ld	hl,#_tiley + 1
   2995 36 00              8347 	ld	(hl), #0x00
   2997                    8348 00147$:
                           8349 ;demo.c:1166: if (triframes >= 1200 && triframes < 1350) {
   2997 3Ar28s42           8350 	ld	a,(#_triframes+0)
   299A D6 B0              8351 	sub	a,#0xB0
   299C 3Ar29s42           8352 	ld	a,(#_triframes+1)
   299F DE 04              8353 	sbc	a,#0x04
   29A1 FArB9s29           8354 	jp	M,00149$
   29A4 3Ar28s42           8355 	ld	a,(#_triframes+0)
   29A7 D6 46              8356 	sub	a,#0x46
   29A9 3Ar29s42           8357 	ld	a,(#_triframes+1)
   29AC DE 05              8358 	sbc	a,#0x05
   29AE F2rB9s29           8359 	jp	P,00149$
                           8360 ;demo.c:1167: drawtilescreen(tri_inva4);
   29B1 21r2Cs07           8361 	ld	hl,#_tri_inva4
   29B4 E5                 8362 	push	hl
   29B5 CDr02s24           8363 	call	_drawtilescreen
   29B8 F1                 8364 	pop	af
   29B9                    8365 00149$:
                           8366 ;demo.c:1170: if (triframes == 1350) { tilei = 0; tilex = 0; tiley = 0; }
   29B9 3Ar28s42           8367 	ld	a,(#_triframes+0)
   29BC D6 46              8368 	sub	a,#0x46
   29BE 20 07              8369 	jr	NZ,00242$
   29C0 3Ar29s42           8370 	ld	a,(#_triframes+1)
   29C3 D6 05              8371 	sub	a,#0x05
   29C5 28 02              8372 	jr	Z,00243$
   29C7                    8373 00242$:
   29C7 18 1E              8374 	jr	00152$
   29C9                    8375 00243$:
   29C9 21r16s42           8376 	ld	hl,#_tilei + 0
   29CC 36 00              8377 	ld	(hl), #0x00
   29CE 21r17s42           8378 	ld	hl,#_tilei + 1
   29D1 36 00              8379 	ld	(hl), #0x00
   29D3 21r18s42           8380 	ld	hl,#_tilex + 0
   29D6 36 00              8381 	ld	(hl), #0x00
   29D8 21r19s42           8382 	ld	hl,#_tilex + 1
   29DB 36 00              8383 	ld	(hl), #0x00
   29DD 21r1As42           8384 	ld	hl,#_tiley + 0
   29E0 36 00              8385 	ld	(hl), #0x00
   29E2 21r1Bs42           8386 	ld	hl,#_tiley + 1
   29E5 36 00              8387 	ld	(hl), #0x00
   29E7                    8388 00152$:
                           8389 ;demo.c:1171: if (triframes >= 1350 && triframes < 1500) {
   29E7 3Ar28s42           8390 	ld	a,(#_triframes+0)
   29EA D6 46              8391 	sub	a,#0x46
   29EC 3Ar29s42           8392 	ld	a,(#_triframes+1)
   29EF DE 05              8393 	sbc	a,#0x05
   29F1 FAr09s2A           8394 	jp	M,00154$
   29F4 3Ar28s42           8395 	ld	a,(#_triframes+0)
   29F7 D6 DC              8396 	sub	a,#0xDC
   29F9 3Ar29s42           8397 	ld	a,(#_triframes+1)
   29FC DE 05              8398 	sbc	a,#0x05
   29FE F2r09s2A           8399 	jp	P,00154$
                           8400 ;demo.c:1172: drawtilescreen(tri_center);
   2A01 21r2Cs01           8401 	ld	hl,#_tri_center
   2A04 E5                 8402 	push	hl
   2A05 CDr02s24           8403 	call	_drawtilescreen
   2A08 F1                 8404 	pop	af
   2A09                    8405 00154$:
                           8406 ;demo.c:1175: if (triframes > 1500) triframes = 149;
   2A09 3E DC              8407 	ld	a,#0xDC
   2A0B FD 21r28s42        8408 	ld	iy,#_triframes
   2A0F FD 96 00           8409 	sub	a,0 (iy)
   2A12 3E 05              8410 	ld	a,#0x05
   2A14 FD 21r28s42        8411 	ld	iy,#_triframes
   2A18 FD 9E 01           8412 	sbc	a,1 (iy)
   2A1B F2r28s2A           8413 	jp	P,00157$
   2A1E 21r28s42           8414 	ld	hl,#_triframes + 0
   2A21 36 95              8415 	ld	(hl), #0x95
   2A23 21r29s42           8416 	ld	hl,#_triframes + 1
   2A26 36 00              8417 	ld	(hl), #0x00
   2A28                    8418 00157$:
                           8419 ;demo.c:1178: msx2_palette(2,0,0,0);
   2A28 21 00 00           8420 	ld	hl,#0x0000
   2A2B E5                 8421 	push	hl
   2A2C 2E 02              8422 	ld	l, #0x02
   2A2E E5                 8423 	push	hl
   2A2F CDr00s00           8424 	call	_msx2_palette
   2A32 F1                 8425 	pop	af
   2A33 F1                 8426 	pop	af
                           8427 ;demo.c:1179: msx2_palette(11,0,0,0);
   2A34 21 00 00           8428 	ld	hl,#0x0000
   2A37 E5                 8429 	push	hl
   2A38 2E 0B              8430 	ld	l, #0x0B
   2A3A E5                 8431 	push	hl
   2A3B CDr00s00           8432 	call	_msx2_palette
   2A3E F1                 8433 	pop	af
   2A3F F1                 8434 	pop	af
                           8435 ;demo.c:1181: if (PLY_PSGReg10 > 4) {
   2A40 3E 04              8436 	ld	a,#0x04
   2A42 FD 21r00s00        8437 	ld	iy,#_PLY_PSGReg10
   2A46 FD 96 00           8438 	sub	a,0 (iy)
   2A49 D2rDEs2A           8439 	jp	NC,00159$
                           8440 ;demo.c:1182: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2A4C 21r00s00           8441 	ld	hl,#_PLY_PSGReg10 + 0
   2A4F 4E                 8442 	ld	c,(hl)
   2A50 06 00              8443 	ld	b,#0x00
   2A52 21r26s42           8444 	ld	hl,#_tripaltick + 0
   2A55 5E                 8445 	ld	e,(hl)
   2A56 16 00              8446 	ld	d,#0x00
   2A58 79                 8447 	ld	a,c
   2A59 83                 8448 	add	a,e
   2A5A 4F                 8449 	ld	c,a
   2A5B 78                 8450 	ld	a,b
   2A5C 8A                 8451 	adc	a,d
   2A5D 06 00              8452 	ld	b,#0x00
   2A5F 21r2Cs00           8453 	ld	hl,#_sintabx
   2A62 09                 8454 	add	hl,bc
   2A63 7E                 8455 	ld	a,(hl)
   2A64 4F                 8456 	ld	c,a
   2A65 06 00              8457 	ld	b,#0x00
   2A67 3E C0              8458 	ld	a,#0xC0
   2A69 91                 8459 	sub	a,c
   2A6A 4F                 8460 	ld	c,a
   2A6B 3E 00              8461 	ld	a,#0x00
   2A6D 98                 8462 	sbc	a,b
   2A6E 47                 8463 	ld	b,a
   2A6F CB 28              8464 	sra	b
   2A71 CB 19              8465 	rr	c
   2A73 CB 28              8466 	sra	b
   2A75 CB 19              8467 	rr	c
   2A77 CB 28              8468 	sra	b
   2A79 CB 19              8469 	rr	c
   2A7B 41                 8470 	ld	b,c
   2A7C 0E 17              8471 	ld	c,#0x17
   2A7E C5                 8472 	push	bc
   2A7F CDr00s00           8473 	call	_vdp_register
   2A82 F1                 8474 	pop	af
                           8475 ;demo.c:1184: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   2A83 21r1Fs42           8476 	ld	hl,#_tripal + 2
   2A86 4E                 8477 	ld	c,(hl)
   2A87 11r1Es42           8478 	ld	de,#_tripal + 1
   2A8A 1A                 8479 	ld	a,(de)
   2A8B 47                 8480 	ld	b,a
   2A8C 21r1Ds42           8481 	ld	hl,#_tripal
   2A8F 5E                 8482 	ld	e,(hl)
   2A90 21r00s00           8483 	ld	hl,#_PLY_PSGReg10 + 0
   2A93 56                 8484 	ld	d,(hl)
   2A94 7B                 8485 	ld	a,e
   2A95 82                 8486 	add	a,d
   2A96 5F                 8487 	ld	e,a
   2A97 79                 8488 	ld	a,c
   2A98 F5                 8489 	push	af
   2A99 33                 8490 	inc	sp
   2A9A C5                 8491 	push	bc
   2A9B 33                 8492 	inc	sp
   2A9C 53                 8493 	ld	d,e
   2A9D 1E 03              8494 	ld	e,#0x03
   2A9F D5                 8495 	push	de
   2AA0 CDr00s00           8496 	call	_msx2_palette
   2AA3 F1                 8497 	pop	af
   2AA4 F1                 8498 	pop	af
                           8499 ;demo.c:1185: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2AA5 21r22s42           8500 	ld	hl,#_tripal + 5
   2AA8 4E                 8501 	ld	c,(hl)
   2AA9 11r21s42           8502 	ld	de,#_tripal + 4
   2AAC 1A                 8503 	ld	a,(de)
   2AAD 47                 8504 	ld	b,a
   2AAE 21r20s42           8505 	ld	hl,#_tripal + 3
   2AB1 5E                 8506 	ld	e,(hl)
   2AB2 79                 8507 	ld	a,c
   2AB3 F5                 8508 	push	af
   2AB4 33                 8509 	inc	sp
   2AB5 C5                 8510 	push	bc
   2AB6 33                 8511 	inc	sp
   2AB7 53                 8512 	ld	d,e
   2AB8 1E 0E              8513 	ld	e,#0x0E
   2ABA D5                 8514 	push	de
   2ABB CDr00s00           8515 	call	_msx2_palette
   2ABE F1                 8516 	pop	af
   2ABF F1                 8517 	pop	af
                           8518 ;demo.c:1186: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2AC0 21r25s42           8519 	ld	hl,#_tripal + 8
   2AC3 4E                 8520 	ld	c,(hl)
   2AC4 11r24s42           8521 	ld	de,#_tripal + 7
   2AC7 1A                 8522 	ld	a,(de)
   2AC8 47                 8523 	ld	b,a
   2AC9 21r23s42           8524 	ld	hl,#_tripal + 6
   2ACC 5E                 8525 	ld	e,(hl)
   2ACD 79                 8526 	ld	a,c
   2ACE F5                 8527 	push	af
   2ACF 33                 8528 	inc	sp
   2AD0 C5                 8529 	push	bc
   2AD1 33                 8530 	inc	sp
   2AD2 53                 8531 	ld	d,e
   2AD3 1E 06              8532 	ld	e,#0x06
   2AD5 D5                 8533 	push	de
   2AD6 CDr00s00           8534 	call	_msx2_palette
   2AD9 F1                 8535 	pop	af
   2ADA F1                 8536 	pop	af
   2ADB C3r37s2B           8537 	jp	00160$
   2ADE                    8538 00159$:
                           8539 ;demo.c:1189: vdp_register(VDP_VOFFSET,0);
   2ADE 21 17 00           8540 	ld	hl,#0x0017
   2AE1 E5                 8541 	push	hl
   2AE2 CDr00s00           8542 	call	_vdp_register
   2AE5 F1                 8543 	pop	af
                           8544 ;demo.c:1191: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2AE6 21r1Fs42           8545 	ld	hl,#_tripal + 2
   2AE9 4E                 8546 	ld	c,(hl)
   2AEA 11r1Es42           8547 	ld	de,#_tripal + 1
   2AED 1A                 8548 	ld	a,(de)
   2AEE 47                 8549 	ld	b,a
   2AEF 21r1Ds42           8550 	ld	hl,#_tripal
   2AF2 5E                 8551 	ld	e,(hl)
   2AF3 79                 8552 	ld	a,c
   2AF4 F5                 8553 	push	af
   2AF5 33                 8554 	inc	sp
   2AF6 C5                 8555 	push	bc
   2AF7 33                 8556 	inc	sp
   2AF8 53                 8557 	ld	d,e
   2AF9 1E 03              8558 	ld	e,#0x03
   2AFB D5                 8559 	push	de
   2AFC CDr00s00           8560 	call	_msx2_palette
   2AFF F1                 8561 	pop	af
   2B00 F1                 8562 	pop	af
                           8563 ;demo.c:1192: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2B01 21r22s42           8564 	ld	hl,#_tripal + 5
   2B04 4E                 8565 	ld	c,(hl)
   2B05 11r21s42           8566 	ld	de,#_tripal + 4
   2B08 1A                 8567 	ld	a,(de)
   2B09 47                 8568 	ld	b,a
   2B0A 21r20s42           8569 	ld	hl,#_tripal + 3
   2B0D 5E                 8570 	ld	e,(hl)
   2B0E 79                 8571 	ld	a,c
   2B0F F5                 8572 	push	af
   2B10 33                 8573 	inc	sp
   2B11 C5                 8574 	push	bc
   2B12 33                 8575 	inc	sp
   2B13 53                 8576 	ld	d,e
   2B14 1E 0E              8577 	ld	e,#0x0E
   2B16 D5                 8578 	push	de
   2B17 CDr00s00           8579 	call	_msx2_palette
   2B1A F1                 8580 	pop	af
   2B1B F1                 8581 	pop	af
                           8582 ;demo.c:1193: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2B1C 21r25s42           8583 	ld	hl,#_tripal + 8
   2B1F 4E                 8584 	ld	c,(hl)
   2B20 11r24s42           8585 	ld	de,#_tripal + 7
   2B23 1A                 8586 	ld	a,(de)
   2B24 47                 8587 	ld	b,a
   2B25 21r23s42           8588 	ld	hl,#_tripal + 6
   2B28 5E                 8589 	ld	e,(hl)
   2B29 79                 8590 	ld	a,c
   2B2A F5                 8591 	push	af
   2B2B 33                 8592 	inc	sp
   2B2C C5                 8593 	push	bc
   2B2D 33                 8594 	inc	sp
   2B2E 53                 8595 	ld	d,e
   2B2F 1E 06              8596 	ld	e,#0x06
   2B31 D5                 8597 	push	de
   2B32 CDr00s00           8598 	call	_msx2_palette
   2B35 F1                 8599 	pop	af
   2B36 F1                 8600 	pop	af
   2B37                    8601 00160$:
                           8602 ;demo.c:1197: if (tick > 28) tick = 0;
   2B37 3E 1C              8603 	ld	a,#0x1C
   2B39 FD 21r28s41        8604 	ld	iy,#_tick
   2B3D FD 96 00           8605 	sub	a,0 (iy)
   2B40 3E 00              8606 	ld	a,#0x00
   2B42 FD 21r28s41        8607 	ld	iy,#_tick
   2B46 FD 9E 01           8608 	sbc	a,1 (iy)
   2B49 F2r56s2B           8609 	jp	P,00162$
   2B4C 21r28s41           8610 	ld	hl,#_tick + 0
   2B4F 36 00              8611 	ld	(hl), #0x00
   2B51 21r29s41           8612 	ld	hl,#_tick + 1
   2B54 36 00              8613 	ld	(hl), #0x00
   2B56                    8614 00162$:
                           8615 ;demo.c:1199: tripaltick++;
   2B56 FD 21r26s42        8616 	ld	iy,#_tripaltick
   2B5A FD 34 00           8617 	inc	0 (iy)
                           8618 ;demo.c:1200: if (tripaltick > 6) {
   2B5D 3E 06              8619 	ld	a,#0x06
   2B5F FD 21r26s42        8620 	ld	iy,#_tripaltick
   2B63 FD 96 00           8621 	sub	a,0 (iy)
   2B66 D2rEBs2B           8622 	jp	NC,00175$
                           8623 ;demo.c:1201: tripaltick2++;
   2B69 FD 21r27s42        8624 	ld	iy,#_tripaltick2
   2B6D FD 34 00           8625 	inc	0 (iy)
                           8626 ;demo.c:1202: if (tripaltick2 > 6) tripaltick2 = 0;
   2B70 3E 06              8627 	ld	a,#0x06
   2B72 FD 21r27s42        8628 	ld	iy,#_tripaltick2
   2B76 FD 96 00           8629 	sub	a,0 (iy)
   2B79 30 05              8630 	jr	NC,00164$
   2B7B 21r27s42           8631 	ld	hl,#_tripaltick2 + 0
   2B7E 36 00              8632 	ld	(hl), #0x00
   2B80                    8633 00164$:
                           8634 ;demo.c:1204: r = tripal[0];
   2B80 21r1Ds42           8635 	ld	hl,#_tripal
   2B83 4E                 8636 	ld	c,(hl)
   2B84 DD 71 FD           8637 	ld	-3 (ix),c
                           8638 ;demo.c:1205: g = tripal[1];
   2B87 11r1Es42           8639 	ld	de,#_tripal + 1
   2B8A 1A                 8640 	ld	a,(de)
   2B8B DD 77 FC           8641 	ld	-4 (ix),a
                           8642 ;demo.c:1206: b = tripal[2];
   2B8E 21r1Fs42           8643 	ld	hl,#_tripal + 2
   2B91 5E                 8644 	ld	e,(hl)
   2B92 DD 73 FB           8645 	ld	-5 (ix),e
                           8646 ;demo.c:1208: for (x = 0; x < 6; x++) {
   2B95 DD 36 FE 00        8647 	ld	-2 (ix),#0x00
   2B99 DD 36 FF 00        8648 	ld	-1 (ix),#0x00
   2B9D                    8649 00171$:
   2B9D DD 7E FE           8650 	ld	a,-2 (ix)
   2BA0 D6 06              8651 	sub	a,#0x06
   2BA2 DD 7E FF           8652 	ld	a,-1 (ix)
   2BA5 DE 00              8653 	sbc	a,#0x00
   2BA7 F2rD1s2B           8654 	jp	P,00174$
                           8655 ;demo.c:1209: tripal[x] = tripal[x+3];
   2BAA 3Er1D              8656 	ld	a,#<_tripal
   2BAC DD 86 FE           8657 	add	a,-2 (ix)
   2BAF 4F                 8658 	ld	c,a
   2BB0 3Es42              8659 	ld	a,#>_tripal
   2BB2 DD 8E FF           8660 	adc	a,-1 (ix)
   2BB5 47                 8661 	ld	b,a
   2BB6 DD 5E FE           8662 	ld	e,-2 (ix)
   2BB9 1C                 8663 	inc	e
   2BBA 1C                 8664 	inc	e
   2BBB 1C                 8665 	inc	e
   2BBC 3Er1D              8666 	ld	a,#<_tripal
   2BBE 83                 8667 	add	a,e
   2BBF 5F                 8668 	ld	e,a
   2BC0 3Es42              8669 	ld	a,#>_tripal
   2BC2 CE 00              8670 	adc	a,#0x00
   2BC4 57                 8671 	ld	d,a
   2BC5 1A                 8672 	ld	a,(de)
   2BC6 02                 8673 	ld	(bc),a
                           8674 ;demo.c:1208: for (x = 0; x < 6; x++) {
   2BC7 DD 34 FE           8675 	inc	-2 (ix)
   2BCA 20 03              8676 	jr	NZ,00245$
   2BCC DD 34 FF           8677 	inc	-1 (ix)
   2BCF                    8678 00245$:
   2BCF 18 CC              8679 	jr	00171$
   2BD1                    8680 00174$:
                           8681 ;demo.c:1212: tripal[6] = r;
   2BD1 01r23s42           8682 	ld	bc,#_tripal + 6
   2BD4 DD 7E FD           8683 	ld	a,-3 (ix)
   2BD7 02                 8684 	ld	(bc),a
                           8685 ;demo.c:1213: tripal[7] = g;
   2BD8 01r24s42           8686 	ld	bc,#_tripal + 7
   2BDB DD 7E FC           8687 	ld	a,-4 (ix)
   2BDE 02                 8688 	ld	(bc),a
                           8689 ;demo.c:1214: tripal[8] = b;
   2BDF 01r25s42           8690 	ld	bc,#_tripal + 8
   2BE2 DD 7E FB           8691 	ld	a,-5 (ix)
   2BE5 02                 8692 	ld	(bc),a
                           8693 ;demo.c:1215: tripaltick = 0;
   2BE6 21r26s42           8694 	ld	hl,#_tripaltick + 0
   2BE9 36 00              8695 	ld	(hl), #0x00
   2BEB                    8696 00175$:
   2BEB DD F9              8697 	ld	sp,ix
   2BED DD E1              8698 	pop	ix
   2BEF C9                 8699 	ret
   2BF0                    8700 _tritiles_end::
                           8701 ;demo.c:1220: int abs (int n) {
                           8702 ;	---------------------------------
                           8703 ; Function abs
                           8704 ; ---------------------------------
   2BF0                    8705 _abs_start::
   2BF0                    8706 _abs:
   2BF0 DD E5              8707 	push	ix
   2BF2 DD 21 00 00        8708 	ld	ix,#0
   2BF6 DD 39              8709 	add	ix,sp
   2BF8 21 FA FF           8710 	ld	hl,#-6
   2BFB 39                 8711 	add	hl,sp
   2BFC F9                 8712 	ld	sp,hl
                           8713 ;demo.c:1221: const int ret[2] = { n, -n };
   2BFD 21 02 00           8714 	ld	hl,#0x0002
   2C00 39                 8715 	add	hl,sp
   2C01 4D                 8716 	ld	c,l
   2C02 44                 8717 	ld	b,h
   2C03 DD 7E 04           8718 	ld	a,4 (ix)
   2C06 77                 8719 	ld	(hl),a
   2C07 23                 8720 	inc	hl
   2C08 DD 7E 05           8721 	ld	a,5 (ix)
   2C0B 77                 8722 	ld	(hl),a
   2C0C 21 02 00           8723 	ld	hl,#0x0002
   2C0F 09                 8724 	add	hl,bc
   2C10 DD 75 FA           8725 	ld	-6 (ix),l
   2C13 DD 74 FB           8726 	ld	-5 (ix),h
   2C16 AF                 8727 	xor	a,a
   2C17 DD 9E 04           8728 	sbc	a,4 (ix)
   2C1A 5F                 8729 	ld	e,a
   2C1B 3E 00              8730 	ld	a,#0x00
   2C1D DD 9E 05           8731 	sbc	a,5 (ix)
   2C20 57                 8732 	ld	d,a
   2C21 DD 6E FA           8733 	ld	l,-6 (ix)
   2C24 DD 66 FB           8734 	ld	h,-5 (ix)
   2C27 73                 8735 	ld	(hl),e
   2C28 23                 8736 	inc	hl
   2C29 72                 8737 	ld	(hl),d
                           8738 ;demo.c:1222: return ret [n<0];
   2C2A DD 7E 05           8739 	ld	a,5 (ix)
   2C2D 07                 8740 	rlca
   2C2E E6 01              8741 	and	a,#0x01
   2C30 5F                 8742 	ld	e,a
   2C31 CB 23              8743 	sla	e
   2C33 79                 8744 	ld	a,c
   2C34 83                 8745 	add	a,e
   2C35 6F                 8746 	ld	l,a
   2C36 78                 8747 	ld	a,b
   2C37 CE 00              8748 	adc	a,#0x00
   2C39 67                 8749 	ld	h,a
   2C3A 5E                 8750 	ld	e,(hl)
   2C3B 23                 8751 	inc	hl
   2C3C 4E                 8752 	ld	c,(hl)
   2C3D 6B                 8753 	ld	l,e
   2C3E 61                 8754 	ld	h,c
   2C3F DD F9              8755 	ld	sp,ix
   2C41 DD E1              8756 	pop	ix
   2C43 C9                 8757 	ret
   2C44                    8758 _abs_end::
                           8759 ;demo.c:1228: void logoeffu() {
                           8760 ;	---------------------------------
                           8761 ; Function logoeffu
                           8762 ; ---------------------------------
   2C44                    8763 _logoeffu_start::
   2C44                    8764 _logoeffu:
   2C44 DD E5              8765 	push	ix
   2C46 DD 21 00 00        8766 	ld	ix,#0
   2C4A DD 39              8767 	add	ix,sp
   2C4C F5                 8768 	push	af
   2C4D F5                 8769 	push	af
                           8770 ;demo.c:1232: fadein();
   2C4E CDrBBs0A           8771 	call	_fadein
                           8772 ;demo.c:1234: v = abs(sintabx[(vbicount) & 255]>>4);
   2C51 21r26s41           8773 	ld	hl,#_vbicount + 0
   2C54 4E                 8774 	ld	c,(hl)
   2C55 06 00              8775 	ld	b,#0x00
   2C57 21r2Cs00           8776 	ld	hl,#_sintabx
   2C5A 09                 8777 	add	hl,bc
   2C5B 7E                 8778 	ld	a,(hl)
   2C5C 4F                 8779 	ld	c,a
   2C5D CB 39              8780 	srl	c
   2C5F CB 39              8781 	srl	c
   2C61 CB 39              8782 	srl	c
   2C63 CB 39              8783 	srl	c
   2C65 06 00              8784 	ld	b,#0x00
   2C67 C5                 8785 	push	bc
   2C68 CDrF0s2B           8786 	call	_abs
   2C6B F1                 8787 	pop	af
   2C6C 44                 8788 	ld	b,h
   2C6D DD 75 FC           8789 	ld	-4 (ix),l
   2C70 DD 70 FD           8790 	ld	-3 (ix),b
                           8791 ;demo.c:1236: for (y = 0; y < 116; y+=2) {
   2C73 DD 36 FE 00        8792 	ld	-2 (ix),#0x00
   2C77 DD 36 FF 00        8793 	ld	-1 (ix),#0x00
   2C7B                    8794 00108$:
   2C7B DD 7E FE           8795 	ld	a,-2 (ix)
   2C7E D6 74              8796 	sub	a,#0x74
   2C80 DD 7E FF           8797 	ld	a,-1 (ix)
   2C83 DE 00              8798 	sbc	a,#0x00
   2C85 F2r50s2D           8799 	jp	P,00111$
                           8800 ;demo.c:1237: cmd.size_x = 108;
   2C88 11r32s41           8801 	ld	de,#_cmd + 8
   2C8B EB                 8802 	ex	de,hl
   2C8C 36 6C              8803 	ld	(hl),#0x6C
   2C8E 23                 8804 	inc	hl
   2C8F 36 00              8805 	ld	(hl),#0x00
                           8806 ;demo.c:1238: cmd.size_y = 2;
   2C91 11r34s41           8807 	ld	de,#_cmd + 10
   2C94 EB                 8808 	ex	de,hl
   2C95 36 02              8809 	ld	(hl),#0x02
   2C97 23                 8810 	inc	hl
   2C98 36 00              8811 	ld	(hl),#0x00
                           8812 ;demo.c:1239: cmd.data = 0;
   2C9A 11r36s41           8813 	ld	de,#_cmd + 12
   2C9D 3E 00              8814 	ld	a,#0x00
   2C9F 12                 8815 	ld	(de),a
                           8816 ;demo.c:1240: cmd.argument = 0x00;
   2CA0 11r37s41           8817 	ld	de,#_cmd + 13
   2CA3 3E 00              8818 	ld	a,#0x00
   2CA5 12                 8819 	ld	(de),a
                           8820 ;demo.c:1241: cmd.command = 0xd0; 
   2CA6 11r38s41           8821 	ld	de,#_cmd + 14
   2CA9 3E D0              8822 	ld	a,#0xD0
   2CAB 12                 8823 	ld	(de),a
                           8824 ;demo.c:1242: cmd.source_x = 74;
   2CAC 21r2As41           8825 	ld	hl,#_cmd
   2CAF 36 4A              8826 	ld	(hl),#0x4A
   2CB1 23                 8827 	inc	hl
   2CB2 36 00              8828 	ld	(hl),#0x00
                           8829 ;demo.c:1243: cmd.source_y = 256+y;
   2CB4 11r2Cs41           8830 	ld	de,#_cmd + 2
   2CB7 DD 7E FE           8831 	ld	a,-2 (ix)
   2CBA C6 00              8832 	add	a,#0x00
   2CBC 4F                 8833 	ld	c,a
   2CBD DD 7E FF           8834 	ld	a,-1 (ix)
   2CC0 CE 01              8835 	adc	a,#0x01
   2CC2 47                 8836 	ld	b,a
   2CC3 6B                 8837 	ld	l,e
   2CC4 62                 8838 	ld	h,d
   2CC5 71                 8839 	ld	(hl),c
   2CC6 23                 8840 	inc	hl
   2CC7 70                 8841 	ld	(hl),b
                           8842 ;demo.c:1244: v+=y;
   2CC8 DD 7E FC           8843 	ld	a,-4 (ix)
   2CCB DD 86 FE           8844 	add	a,-2 (ix)
   2CCE DD 77 FC           8845 	ld	-4 (ix),a
   2CD1 DD 7E FD           8846 	ld	a,-3 (ix)
   2CD4 DD 8E FF           8847 	adc	a,-1 (ix)
   2CD7 DD 77 FD           8848 	ld	-3 (ix),a
                           8849 ;demo.c:1245: v -= powa;
   2CDA 21r2Cs42           8850 	ld	hl,#_powa
   2CDD DD 7E FC           8851 	ld	a,-4 (ix)
   2CE0 96                 8852 	sub	a,(hl)
   2CE1 DD 77 FC           8853 	ld	-4 (ix),a
   2CE4 DD 7E FD           8854 	ld	a,-3 (ix)
   2CE7 23                 8855 	inc	hl
   2CE8 9E                 8856 	sbc	a,(hl)
                           8857 ;demo.c:1246: if (v<0) v = 0;
   2CE9 DD 77 FD           8858 	ld	-3 (ix),a
   2CEC CB 7F              8859 	bit	7,a
   2CEE 28 08              8860 	jr	Z,00102$
   2CF0 DD 36 FC 00        8861 	ld	-4 (ix),#0x00
   2CF4 DD 36 FD 00        8862 	ld	-3 (ix),#0x00
   2CF8                    8863 00102$:
                           8864 ;demo.c:1247: if (v>150) v = 150;
   2CF8 3E 96              8865 	ld	a,#0x96
   2CFA DD 96 FC           8866 	sub	a,-4 (ix)
   2CFD 3E 00              8867 	ld	a,#0x00
   2CFF DD 9E FD           8868 	sbc	a,-3 (ix)
   2D02 F2r0Ds2D           8869 	jp	P,00104$
   2D05 DD 36 FC 96        8870 	ld	-4 (ix),#0x96
   2D09 DD 36 FD 00        8871 	ld	-3 (ix),#0x00
   2D0D                    8872 00104$:
                           8873 ;demo.c:1248: cmd.dest_x = 74+v;
   2D0D 01r2Es41           8874 	ld	bc,#_cmd + 4
   2D10 DD 7E FC           8875 	ld	a,-4 (ix)
   2D13 C6 4A              8876 	add	a,#0x4A
   2D15 5F                 8877 	ld	e,a
   2D16 DD 7E FD           8878 	ld	a,-3 (ix)
   2D19 CE 00              8879 	adc	a,#0x00
   2D1B 57                 8880 	ld	d,a
   2D1C 69                 8881 	ld	l,c
   2D1D 60                 8882 	ld	h,b
   2D1E 73                 8883 	ld	(hl),e
   2D1F 23                 8884 	inc	hl
   2D20 72                 8885 	ld	(hl),d
                           8886 ;demo.c:1249: cmd.dest_y = 50+y+1;
   2D21 01r30s41           8887 	ld	bc,#_cmd + 6
   2D24 DD 7E FE           8888 	ld	a,-2 (ix)
   2D27 C6 33              8889 	add	a,#0x33
   2D29 5F                 8890 	ld	e,a
   2D2A DD 7E FF           8891 	ld	a,-1 (ix)
   2D2D CE 00              8892 	adc	a,#0x00
   2D2F 57                 8893 	ld	d,a
   2D30 69                 8894 	ld	l,c
   2D31 60                 8895 	ld	h,b
   2D32 73                 8896 	ld	(hl),e
   2D33 23                 8897 	inc	hl
   2D34 72                 8898 	ld	(hl),d
                           8899 ;demo.c:1250: vdp_copier(&cmd);
   2D35 21r2As41           8900 	ld	hl,#_cmd
   2D38 E5                 8901 	push	hl
   2D39 CDr00s00           8902 	call	_vdp_copier
   2D3C F1                 8903 	pop	af
                           8904 ;demo.c:1236: for (y = 0; y < 116; y+=2) {
   2D3D DD 7E FE           8905 	ld	a,-2 (ix)
   2D40 C6 02              8906 	add	a,#0x02
   2D42 DD 77 FE           8907 	ld	-2 (ix),a
   2D45 DD 7E FF           8908 	ld	a,-1 (ix)
   2D48 CE 00              8909 	adc	a,#0x00
   2D4A DD 77 FF           8910 	ld	-1 (ix),a
   2D4D C3r7Bs2C           8911 	jp	00108$
   2D50                    8912 00111$:
                           8913 ;demo.c:1253: if (vbicount > scenetimings[2]+84 && onceclear > 182) {
   2D50 21r55s41           8914 	ld	hl, #_scenetimings + 4
   2D53 4E                 8915 	ld	c,(hl)
   2D54 23                 8916 	inc	hl
   2D55 46                 8917 	ld	b,(hl)
   2D56 21 54 00           8918 	ld	hl,#0x0054
   2D59 09                 8919 	add	hl,bc
   2D5A 4D                 8920 	ld	c,l
   2D5B 44                 8921 	ld	b,h
   2D5C 79                 8922 	ld	a,c
   2D5D FD 21r26s41        8923 	ld	iy,#_vbicount
   2D61 FD 96 00           8924 	sub	a,0 (iy)
   2D64 78                 8925 	ld	a,b
   2D65 FD 21r26s41        8926 	ld	iy,#_vbicount
   2D69 FD 9E 01           8927 	sbc	a,1 (iy)
   2D6C F2rCEs2D           8928 	jp	P,00106$
   2D6F 3E B6              8929 	ld	a,#0xB6
   2D71 FD 21r2Es42        8930 	ld	iy,#_onceclear
   2D75 FD 96 00           8931 	sub	a,0 (iy)
   2D78 D2rCEs2D           8932 	jp	NC,00106$
                           8933 ;demo.c:1254: cmd.size_x = 4;
   2D7B 21r32s41           8934 	ld	hl, #_cmd + 8
   2D7E 36 04              8935 	ld	(hl),#0x04
   2D80 23                 8936 	inc	hl
   2D81 36 00              8937 	ld	(hl),#0x00
                           8938 ;demo.c:1255: cmd.size_y = 116;
   2D83 21r34s41           8939 	ld	hl, #_cmd + 10
   2D86 36 74              8940 	ld	(hl),#0x74
   2D88 23                 8941 	inc	hl
   2D89 36 00              8942 	ld	(hl),#0x00
                           8943 ;demo.c:1256: cmd.data = 0;
                           8944 ;demo.c:1257: cmd.argument = 0x00;
   2D8B 3E 00              8945 	ld	a,#0x00
   2D8D 32r36s41           8946 	ld	(#_cmd + 12),a
   2D90 32r37s41           8947 	ld	(#_cmd + 13),a
                           8948 ;demo.c:1258: cmd.command = 0xd0; 
   2D93 01r38s41           8949 	ld	bc,#_cmd + 14
   2D96 3E D0              8950 	ld	a,#0xD0
   2D98 02                 8951 	ld	(bc),a
                           8952 ;demo.c:1259: cmd.source_x = 20;
   2D99 21r2As41           8953 	ld	hl,#_cmd
   2D9C 36 14              8954 	ld	(hl),#0x14
   2D9E 23                 8955 	inc	hl
   2D9F 36 00              8956 	ld	(hl),#0x00
                           8957 ;demo.c:1260: cmd.source_y = 0;
   2DA1 21r2Cs41           8958 	ld	hl, #_cmd + 2
   2DA4 36 00              8959 	ld	(hl),#0x00
   2DA6 23                 8960 	inc	hl
   2DA7 36 00              8961 	ld	(hl),#0x00
                           8962 ;demo.c:1261: cmd.dest_x = onceclear;
   2DA9 01r2Es41           8963 	ld	bc,#_cmd + 4
   2DAC 21r2Es42           8964 	ld	hl,#_onceclear + 0
   2DAF 5E                 8965 	ld	e,(hl)
   2DB0 16 00              8966 	ld	d,#0x00
   2DB2 69                 8967 	ld	l,c
   2DB3 60                 8968 	ld	h,b
   2DB4 73                 8969 	ld	(hl),e
   2DB5 23                 8970 	inc	hl
   2DB6 72                 8971 	ld	(hl),d
                           8972 ;demo.c:1262: cmd.dest_y = 68;
   2DB7 21r30s41           8973 	ld	hl, #_cmd + 6
   2DBA 36 44              8974 	ld	(hl),#0x44
   2DBC 23                 8975 	inc	hl
   2DBD 36 00              8976 	ld	(hl),#0x00
                           8977 ;demo.c:1263: vdp_copier(&cmd);
   2DBF 21r2As41           8978 	ld	hl,#_cmd
   2DC2 E5                 8979 	push	hl
   2DC3 CDr00s00           8980 	call	_vdp_copier
   2DC6 F1                 8981 	pop	af
                           8982 ;demo.c:1264: onceclear-=4;
   2DC7 21r2Es42           8983 	ld	hl,#_onceclear
   2DCA 7E                 8984 	ld	a,(hl)
   2DCB C6 FC              8985 	add	a,#0xFC
   2DCD 77                 8986 	ld	(hl),a
   2DCE                    8987 00106$:
                           8988 ;demo.c:1268: powa+=2;
   2DCE 21r2Cs42           8989 	ld	hl,#_powa
   2DD1 7E                 8990 	ld	a,(hl)
   2DD2 C6 02              8991 	add	a,#0x02
   2DD4 23                 8992 	inc	hl
   2DD5 2B                 8993 	dec	hl
   2DD6 C5                 8994 	push	bc
   2DD7 4F                 8995 	ld	c, a
   2DD8 23                 8996 	inc	hl
   2DD9 7E                 8997 	ld	a, (hl)
   2DDA 47                 8998 	ld	b, a
   2DDB 79                 8999 	ld	a, c
   2DDC 2B                 9000 	dec	hl
   2DDD 77                 9001 	ld	(hl), a
   2DDE 78                 9002 	ld	a, b
   2DDF C1                 9003 	pop	bc
   2DE0 CE 00              9004 	adc	a,#0x00
   2DE2 23                 9005 	inc	hl
   2DE3 77                 9006 	ld	(hl),a
                           9007 ;demo.c:1269: powatick = 0;
   2DE4 21r2As42           9008 	ld	hl,#_powatick + 0
   2DE7 36 00              9009 	ld	(hl), #0x00
   2DE9 21r2Bs42           9010 	ld	hl,#_powatick + 1
   2DEC 36 00              9011 	ld	(hl), #0x00
   2DEE DD F9              9012 	ld	sp,ix
   2DF0 DD E1              9013 	pop	ix
   2DF2 C9                 9014 	ret
   2DF3                    9015 _logoeffu_end::
                           9016 ;demo.c:1278: void points() {
                           9017 ;	---------------------------------
                           9018 ; Function points
                           9019 ; ---------------------------------
   2DF3                    9020 _points_start::
   2DF3                    9021 _points:
   2DF3 DD E5              9022 	push	ix
   2DF5 DD 21 00 00        9023 	ld	ix,#0
   2DF9 DD 39              9024 	add	ix,sp
   2DFB F5                 9025 	push	af
   2DFC 3B                 9026 	dec	sp
                           9027 ;demo.c:1282: if (initpoints == 0) {
   2DFD AF                 9028 	xor	a,a
   2DFE 21r2Fs42           9029 	ld	hl,#_initpoints + 0
   2E01 B6                 9030 	or	a,(hl)
   2E02 C2r0Bs30           9031 	jp	NZ,00105$
                           9032 ;demo.c:1283: cmd.size_x = 256;
   2E05 21r32s41           9033 	ld	hl, #_cmd + 8
   2E08 36 00              9034 	ld	(hl),#0x00
   2E0A 23                 9035 	inc	hl
   2E0B 36 01              9036 	ld	(hl),#0x01
                           9037 ;demo.c:1284: cmd.size_y = 4;
   2E0D 21r34s41           9038 	ld	hl, #_cmd + 10
   2E10 36 04              9039 	ld	(hl),#0x04
   2E12 23                 9040 	inc	hl
   2E13 36 00              9041 	ld	(hl),#0x00
                           9042 ;demo.c:1285: cmd.data = 0;
                           9043 ;demo.c:1286: cmd.argument = 0x00; // from 70xY to left
   2E15 3E 00              9044 	ld	a,#0x00
   2E17 32r36s41           9045 	ld	(#_cmd + 12),a
   2E1A 32r37s41           9046 	ld	(#_cmd + 13),a
                           9047 ;demo.c:1287: cmd.command = 0xd0; // vram to vram, y only
   2E1D 01r38s41           9048 	ld	bc,#_cmd + 14
   2E20 3E D0              9049 	ld	a,#0xD0
   2E22 02                 9050 	ld	(bc),a
                           9051 ;demo.c:1288: cmd.source_x = 0;
   2E23 21r2As41           9052 	ld	hl,#_cmd
   2E26 36 00              9053 	ld	(hl),#0x00
   2E28 23                 9054 	inc	hl
   2E29 36 00              9055 	ld	(hl),#0x00
                           9056 ;demo.c:1289: cmd.dest_x = 0;
   2E2B 21r2Es41           9057 	ld	hl, #_cmd + 4
   2E2E 36 00              9058 	ld	(hl),#0x00
   2E30 23                 9059 	inc	hl
   2E31 36 00              9060 	ld	(hl),#0x00
                           9061 ;demo.c:1291: for (y = 0; y < 212; y+=4) {
   2E33 DD 36 FF 00        9062 	ld	-1 (ix),#0x00
   2E37                    9063 00116$:
   2E37 DD 7E FF           9064 	ld	a,-1 (ix)
   2E3A D6 D4              9065 	sub	a,#0xD4
   2E3C D2r63s2F           9066 	jp	NC,00119$
                           9067 ;demo.c:1292: if (PLY_PSGReg10 > 4) {
   2E3F 3E 04              9068 	ld	a,#0x04
   2E41 FD 21r00s00        9069 	ld	iy,#_PLY_PSGReg10
   2E45 FD 96 00           9070 	sub	a,0 (iy)
   2E48 D2rDDs2E           9071 	jp	NC,00102$
                           9072 ;demo.c:1293: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2E4B 21r00s00           9073 	ld	hl,#_PLY_PSGReg10 + 0
   2E4E 5E                 9074 	ld	e,(hl)
   2E4F 16 00              9075 	ld	d,#0x00
   2E51 21r26s42           9076 	ld	hl,#_tripaltick + 0
   2E54 4E                 9077 	ld	c,(hl)
   2E55 06 00              9078 	ld	b,#0x00
   2E57 7B                 9079 	ld	a,e
   2E58 81                 9080 	add	a,c
   2E59 4F                 9081 	ld	c,a
   2E5A 7A                 9082 	ld	a,d
   2E5B 88                 9083 	adc	a,b
   2E5C 06 00              9084 	ld	b,#0x00
   2E5E 21r2Cs00           9085 	ld	hl,#_sintabx
   2E61 09                 9086 	add	hl,bc
   2E62 7E                 9087 	ld	a,(hl)
   2E63 4F                 9088 	ld	c,a
   2E64 06 00              9089 	ld	b,#0x00
   2E66 3E C0              9090 	ld	a,#0xC0
   2E68 91                 9091 	sub	a,c
   2E69 4F                 9092 	ld	c,a
   2E6A 3E 00              9093 	ld	a,#0x00
   2E6C 98                 9094 	sbc	a,b
   2E6D 47                 9095 	ld	b,a
   2E6E CB 28              9096 	sra	b
   2E70 CB 19              9097 	rr	c
   2E72 CB 28              9098 	sra	b
   2E74 CB 19              9099 	rr	c
   2E76 CB 28              9100 	sra	b
   2E78 CB 19              9101 	rr	c
   2E7A 41                 9102 	ld	b,c
   2E7B 0E 17              9103 	ld	c,#0x17
   2E7D C5                 9104 	push	bc
   2E7E CDr00s00           9105 	call	_vdp_register
   2E81 F1                 9106 	pop	af
                           9107 ;demo.c:1295: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   2E82 21r1Fs42           9108 	ld	hl,#_tripal + 2
   2E85 4E                 9109 	ld	c,(hl)
   2E86 11r1Es42           9110 	ld	de,#_tripal + 1
   2E89 1A                 9111 	ld	a,(de)
   2E8A 47                 9112 	ld	b,a
   2E8B 21r1Ds42           9113 	ld	hl,#_tripal
   2E8E 5E                 9114 	ld	e,(hl)
   2E8F 21r00s00           9115 	ld	hl,#_PLY_PSGReg10 + 0
   2E92 56                 9116 	ld	d,(hl)
   2E93 7B                 9117 	ld	a,e
   2E94 82                 9118 	add	a,d
   2E95 5F                 9119 	ld	e,a
   2E96 79                 9120 	ld	a,c
   2E97 F5                 9121 	push	af
   2E98 33                 9122 	inc	sp
   2E99 C5                 9123 	push	bc
   2E9A 33                 9124 	inc	sp
   2E9B 53                 9125 	ld	d,e
   2E9C 1E 03              9126 	ld	e,#0x03
   2E9E D5                 9127 	push	de
   2E9F CDr00s00           9128 	call	_msx2_palette
   2EA2 F1                 9129 	pop	af
   2EA3 F1                 9130 	pop	af
                           9131 ;demo.c:1296: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2EA4 21r22s42           9132 	ld	hl,#_tripal + 5
   2EA7 4E                 9133 	ld	c,(hl)
   2EA8 11r21s42           9134 	ld	de,#_tripal + 4
   2EAB 1A                 9135 	ld	a,(de)
   2EAC 47                 9136 	ld	b,a
   2EAD 21r20s42           9137 	ld	hl,#_tripal + 3
   2EB0 5E                 9138 	ld	e,(hl)
   2EB1 79                 9139 	ld	a,c
   2EB2 F5                 9140 	push	af
   2EB3 33                 9141 	inc	sp
   2EB4 C5                 9142 	push	bc
   2EB5 33                 9143 	inc	sp
   2EB6 53                 9144 	ld	d,e
   2EB7 1E 0E              9145 	ld	e,#0x0E
   2EB9 D5                 9146 	push	de
   2EBA CDr00s00           9147 	call	_msx2_palette
   2EBD F1                 9148 	pop	af
   2EBE F1                 9149 	pop	af
                           9150 ;demo.c:1297: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2EBF 21r25s42           9151 	ld	hl,#_tripal + 8
   2EC2 4E                 9152 	ld	c,(hl)
   2EC3 11r24s42           9153 	ld	de,#_tripal + 7
   2EC6 1A                 9154 	ld	a,(de)
   2EC7 47                 9155 	ld	b,a
   2EC8 21r23s42           9156 	ld	hl,#_tripal + 6
   2ECB 5E                 9157 	ld	e,(hl)
   2ECC 79                 9158 	ld	a,c
   2ECD F5                 9159 	push	af
   2ECE 33                 9160 	inc	sp
   2ECF C5                 9161 	push	bc
   2ED0 33                 9162 	inc	sp
   2ED1 53                 9163 	ld	d,e
   2ED2 1E 06              9164 	ld	e,#0x06
   2ED4 D5                 9165 	push	de
   2ED5 CDr00s00           9166 	call	_msx2_palette
   2ED8 F1                 9167 	pop	af
   2ED9 F1                 9168 	pop	af
   2EDA C3r36s2F           9169 	jp	00103$
   2EDD                    9170 00102$:
                           9171 ;demo.c:1300: vdp_register(VDP_VOFFSET,0);
   2EDD 21 17 00           9172 	ld	hl,#0x0017
   2EE0 E5                 9173 	push	hl
   2EE1 CDr00s00           9174 	call	_vdp_register
   2EE4 F1                 9175 	pop	af
                           9176 ;demo.c:1302: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2EE5 21r1Fs42           9177 	ld	hl,#_tripal + 2
   2EE8 4E                 9178 	ld	c,(hl)
   2EE9 11r1Es42           9179 	ld	de,#_tripal + 1
   2EEC 1A                 9180 	ld	a,(de)
   2EED 47                 9181 	ld	b,a
   2EEE 21r1Ds42           9182 	ld	hl,#_tripal
   2EF1 5E                 9183 	ld	e,(hl)
   2EF2 79                 9184 	ld	a,c
   2EF3 F5                 9185 	push	af
   2EF4 33                 9186 	inc	sp
   2EF5 C5                 9187 	push	bc
   2EF6 33                 9188 	inc	sp
   2EF7 53                 9189 	ld	d,e
   2EF8 1E 03              9190 	ld	e,#0x03
   2EFA D5                 9191 	push	de
   2EFB CDr00s00           9192 	call	_msx2_palette
   2EFE F1                 9193 	pop	af
   2EFF F1                 9194 	pop	af
                           9195 ;demo.c:1303: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2F00 21r22s42           9196 	ld	hl,#_tripal + 5
   2F03 4E                 9197 	ld	c,(hl)
   2F04 11r21s42           9198 	ld	de,#_tripal + 4
   2F07 1A                 9199 	ld	a,(de)
   2F08 47                 9200 	ld	b,a
   2F09 21r20s42           9201 	ld	hl,#_tripal + 3
   2F0C 5E                 9202 	ld	e,(hl)
   2F0D 79                 9203 	ld	a,c
   2F0E F5                 9204 	push	af
   2F0F 33                 9205 	inc	sp
   2F10 C5                 9206 	push	bc
   2F11 33                 9207 	inc	sp
   2F12 53                 9208 	ld	d,e
   2F13 1E 0E              9209 	ld	e,#0x0E
   2F15 D5                 9210 	push	de
   2F16 CDr00s00           9211 	call	_msx2_palette
   2F19 F1                 9212 	pop	af
   2F1A F1                 9213 	pop	af
                           9214 ;demo.c:1304: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2F1B 21r25s42           9215 	ld	hl,#_tripal + 8
   2F1E 4E                 9216 	ld	c,(hl)
   2F1F 11r24s42           9217 	ld	de,#_tripal + 7
   2F22 1A                 9218 	ld	a,(de)
   2F23 47                 9219 	ld	b,a
   2F24 21r23s42           9220 	ld	hl,#_tripal + 6
   2F27 5E                 9221 	ld	e,(hl)
   2F28 79                 9222 	ld	a,c
   2F29 F5                 9223 	push	af
   2F2A 33                 9224 	inc	sp
   2F2B C5                 9225 	push	bc
   2F2C 33                 9226 	inc	sp
   2F2D 53                 9227 	ld	d,e
   2F2E 1E 06              9228 	ld	e,#0x06
   2F30 D5                 9229 	push	de
   2F31 CDr00s00           9230 	call	_msx2_palette
   2F34 F1                 9231 	pop	af
   2F35 F1                 9232 	pop	af
   2F36                    9233 00103$:
                           9234 ;demo.c:1307: waitVB();
   2F36 76                 9235 		halt 
                           9236 ;demo.c:1308: cmd.source_y = 193;
   2F37 21r2Cs41           9237 	ld	hl, #_cmd + 2
   2F3A 36 C1              9238 	ld	(hl),#0xC1
   2F3C 23                 9239 	inc	hl
   2F3D 36 00              9240 	ld	(hl),#0x00
                           9241 ;demo.c:1309: cmd.dest_y = y;
   2F3F 01r30s41           9242 	ld	bc,#_cmd + 6
   2F42 DD 5E FF           9243 	ld	e,-1 (ix)
   2F45 16 00              9244 	ld	d,#0x00
   2F47 69                 9245 	ld	l,c
   2F48 60                 9246 	ld	h,b
   2F49 73                 9247 	ld	(hl),e
   2F4A 23                 9248 	inc	hl
   2F4B 72                 9249 	ld	(hl),d
                           9250 ;demo.c:1310: vdp_copier(&cmd);
   2F4C 21r2As41           9251 	ld	hl,#_cmd
   2F4F E5                 9252 	push	hl
   2F50 CDr00s00           9253 	call	_vdp_copier
   2F53 F1                 9254 	pop	af
                           9255 ;demo.c:1291: for (y = 0; y < 212; y+=4) {
   2F54 DD 34 FF           9256 	inc	-1 (ix)
   2F57 DD 34 FF           9257 	inc	-1 (ix)
   2F5A DD 34 FF           9258 	inc	-1 (ix)
   2F5D DD 34 FF           9259 	inc	-1 (ix)
   2F60 C3r37s2E           9260 	jp	00116$
   2F63                    9261 00119$:
                           9262 ;demo.c:1314: vdp_load_palette(bulbs_palette);
   2F63 21r66s40           9263 	ld	hl,#_bulbs_palette
   2F66 E5                 9264 	push	hl
   2F67 CDr00s00           9265 	call	_vdp_load_palette
   2F6A F1                 9266 	pop	af
                           9267 ;demo.c:1316: for (x = 0; x < 256; x+=1) {
   2F6B DD 36 FD 00        9268 	ld	-3 (ix),#0x00
   2F6F DD 36 FE 00        9269 	ld	-2 (ix),#0x00
   2F73                    9270 00120$:
   2F73 DD 7E FD           9271 	ld	a,-3 (ix)
   2F76 D6 00              9272 	sub	a,#0x00
   2F78 DD 7E FE           9273 	ld	a,-2 (ix)
   2F7B DE 01              9274 	sbc	a,#0x01
   2F7D F2rFCs2F           9275 	jp	P,00123$
                           9276 ;demo.c:1318: cmd.data = 1+((pointframe>>2) & 0xe);
   2F80 11r36s41           9277 	ld	de,#_cmd + 12
   2F83 21r30s42           9278 	ld	hl,#_pointframe + 0
   2F86 4E                 9279 	ld	c,(hl)
   2F87 21r31s42           9280 	ld	hl,#_pointframe + 1
   2F8A 46                 9281 	ld	b,(hl)
   2F8B CB 28              9282 	sra	b
   2F8D CB 19              9283 	rr	c
   2F8F CB 28              9284 	sra	b
   2F91 CB 19              9285 	rr	c
   2F93 79                 9286 	ld	a,c
   2F94 E6 0E              9287 	and	a,#0x0E
   2F96 3C                 9288 	inc	a
   2F97 12                 9289 	ld	(de),a
                           9290 ;demo.c:1319: cmd.dest_x = x;
   2F98 21r2Es41           9291 	ld	hl, #_cmd + 4
   2F9B DD 7E FD           9292 	ld	a,-3 (ix)
   2F9E 77                 9293 	ld	(hl),a
   2F9F 23                 9294 	inc	hl
   2FA0 DD 7E FE           9295 	ld	a,-2 (ix)
   2FA3 77                 9296 	ld	(hl),a
                           9297 ;demo.c:1320: cmd.dest_y = y;
   2FA4 21r30s41           9298 	ld	hl, #_cmd + 6
   2FA7 36 1D              9299 	ld	(hl),#0x1D
   2FA9 23                 9300 	inc	hl
   2FAA 36 00              9301 	ld	(hl),#0x00
                           9302 ;demo.c:1321: cmd.command = 0x50;
   2FAC 3E 50              9303 	ld	a,#0x50
   2FAE 32r38s41           9304 	ld	(#_cmd + 14),a
                           9305 ;demo.c:1322: vdp_copier(&cmd);
   2FB1 21r2As41           9306 	ld	hl,#_cmd
   2FB4 E5                 9307 	push	hl
   2FB5 CDr00s00           9308 	call	_vdp_copier
   2FB8 F1                 9309 	pop	af
                           9310 ;demo.c:1325: cmd.data = 1+((pointframe>>2) & 0xe);
   2FB9 01r36s41           9311 	ld	bc,#_cmd + 12
   2FBC 21r30s42           9312 	ld	hl,#_pointframe + 0
   2FBF 5E                 9313 	ld	e,(hl)
   2FC0 21r31s42           9314 	ld	hl,#_pointframe + 1
   2FC3 56                 9315 	ld	d,(hl)
   2FC4 CB 2A              9316 	sra	d
   2FC6 CB 1B              9317 	rr	e
   2FC8 CB 2A              9318 	sra	d
   2FCA CB 1B              9319 	rr	e
   2FCC 7B                 9320 	ld	a,e
   2FCD E6 0E              9321 	and	a,#0x0E
   2FCF 3C                 9322 	inc	a
   2FD0 02                 9323 	ld	(bc),a
                           9324 ;demo.c:1326: cmd.dest_y = y;
   2FD1 21r30s41           9325 	ld	hl, #_cmd + 6
   2FD4 36 A2              9326 	ld	(hl),#0xA2
   2FD6 23                 9327 	inc	hl
   2FD7 36 00              9328 	ld	(hl),#0x00
                           9329 ;demo.c:1327: vdp_copier(&cmd);
   2FD9 21r2As41           9330 	ld	hl,#_cmd
   2FDC E5                 9331 	push	hl
   2FDD CDr00s00           9332 	call	_vdp_copier
   2FE0 F1                 9333 	pop	af
                           9334 ;demo.c:1329: pointframe+=1;
   2FE1 FD 21r30s42        9335 	ld	iy,#_pointframe
   2FE5 FD 34 00           9336 	inc	0 (iy)
   2FE8 20 07              9337 	jr	NZ,00149$
   2FEA FD 21r30s42        9338 	ld	iy,#_pointframe
   2FEE FD 34 01           9339 	inc	1 (iy)
   2FF1                    9340 00149$:
                           9341 ;demo.c:1316: for (x = 0; x < 256; x+=1) {
   2FF1 DD 34 FD           9342 	inc	-3 (ix)
   2FF4 20 03              9343 	jr	NZ,00150$
   2FF6 DD 34 FE           9344 	inc	-2 (ix)
   2FF9                    9345 00150$:
   2FF9 C3r73s2F           9346 	jp	00120$
   2FFC                    9347 00123$:
                           9348 ;demo.c:1332: initpoints = 1;
   2FFC 21r2Fs42           9349 	ld	hl,#_initpoints + 0
   2FFF 36 01              9350 	ld	(hl), #0x01
                           9351 ;demo.c:1333: ltrpointer = 0;
   3001 21rBEs41           9352 	ld	hl,#_ltrpointer + 0
   3004 36 00              9353 	ld	(hl), #0x00
   3006 21rBFs41           9354 	ld	hl,#_ltrpointer + 1
   3009 36 00              9355 	ld	(hl), #0x00
   300B                    9356 00105$:
                           9357 ;demo.c:1336: cmd.argument = 0x0;
   300B 3E 00              9358 	ld	a,#0x00
   300D 32r37s41           9359 	ld	(#_cmd + 13),a
                           9360 ;demo.c:1338: cmd.data = 1+((pointframe>>2) & 0xe);
   3010 01r36s41           9361 	ld	bc,#_cmd + 12
   3013 21r30s42           9362 	ld	hl,#_pointframe + 0
   3016 5E                 9363 	ld	e,(hl)
   3017 21r31s42           9364 	ld	hl,#_pointframe + 1
   301A 56                 9365 	ld	d,(hl)
   301B CB 2A              9366 	sra	d
   301D CB 1B              9367 	rr	e
   301F CB 2A              9368 	sra	d
   3021 CB 1B              9369 	rr	e
   3023 7B                 9370 	ld	a,e
   3024 E6 0E              9371 	and	a,#0x0E
   3026 3C                 9372 	inc	a
   3027 02                 9373 	ld	(bc),a
                           9374 ;demo.c:1340: for (x = 30; x < 162; x+=1) {
   3028 DD 36 FD 1E        9375 	ld	-3 (ix),#0x1E
   302C DD 36 FE 00        9376 	ld	-2 (ix),#0x00
   3030                    9377 00124$:
   3030 DD 7E FD           9378 	ld	a,-3 (ix)
   3033 D6 A2              9379 	sub	a,#0xA2
   3035 DD 7E FE           9380 	ld	a,-2 (ix)
   3038 DE 00              9381 	sbc	a,#0x00
   303A F2r83s30           9382 	jp	P,00127$
                           9383 ;demo.c:1341: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   303D 21r30s42           9384 	ld	hl,#_pointframe
   3040 DD 7E FD           9385 	ld	a,-3 (ix)
   3043 86                 9386 	add	a,(hl)
   3044 5F                 9387 	ld	e,a
   3045 DD 7E FE           9388 	ld	a,-2 (ix)
   3048 23                 9389 	inc	hl
   3049 8E                 9390 	adc	a,(hl)
   304A 16 00              9391 	ld	d,#0x00
   304C 21r2Cs00           9392 	ld	hl,#_sintabx
   304F 19                 9393 	add	hl,de
   3050 7E                 9394 	ld	a,(hl)
   3051 CB 3F              9395 	srl	a
   3053 C6 40              9396 	add	a,#0x40
   3055 4F                 9397 	ld	c,a
                           9398 ;demo.c:1342: cmd.dest_x = y;
   3056 11r2Es41           9399 	ld	de,#_cmd + 4
   3059 06 00              9400 	ld	b,#0x00
   305B 6B                 9401 	ld	l,e
   305C 62                 9402 	ld	h,d
   305D 71                 9403 	ld	(hl),c
   305E 23                 9404 	inc	hl
   305F 70                 9405 	ld	(hl),b
                           9406 ;demo.c:1343: cmd.dest_y = x;
   3060 21r30s41           9407 	ld	hl, #_cmd + 6
   3063 DD 7E FD           9408 	ld	a,-3 (ix)
   3066 77                 9409 	ld	(hl),a
   3067 23                 9410 	inc	hl
   3068 DD 7E FE           9411 	ld	a,-2 (ix)
   306B 77                 9412 	ld	(hl),a
                           9413 ;demo.c:1344: cmd.command = 0x53;
   306C 3E 53              9414 	ld	a,#0x53
   306E 32r38s41           9415 	ld	(#_cmd + 14),a
                           9416 ;demo.c:1345: vdp_copier(&cmd);
   3071 21r2As41           9417 	ld	hl,#_cmd
   3074 E5                 9418 	push	hl
   3075 CDr00s00           9419 	call	_vdp_copier
   3078 F1                 9420 	pop	af
                           9421 ;demo.c:1340: for (x = 30; x < 162; x+=1) {
   3079 DD 34 FD           9422 	inc	-3 (ix)
   307C 20 03              9423 	jr	NZ,00152$
   307E DD 34 FE           9424 	inc	-2 (ix)
   3081                    9425 00152$:
   3081 18 AD              9426 	jr	00124$
   3083                    9427 00127$:
                           9428 ;demo.c:1347: pointframe+=2;
   3083 21r30s42           9429 	ld	hl,#_pointframe
   3086 7E                 9430 	ld	a,(hl)
   3087 C6 02              9431 	add	a,#0x02
   3089 23                 9432 	inc	hl
   308A 2B                 9433 	dec	hl
   308B C5                 9434 	push	bc
   308C 4F                 9435 	ld	c, a
   308D 23                 9436 	inc	hl
   308E 7E                 9437 	ld	a, (hl)
   308F 47                 9438 	ld	b, a
   3090 79                 9439 	ld	a, c
   3091 2B                 9440 	dec	hl
   3092 77                 9441 	ld	(hl), a
   3093 78                 9442 	ld	a, b
   3094 C1                 9443 	pop	bc
   3095 CE 00              9444 	adc	a,#0x00
   3097 23                 9445 	inc	hl
   3098 77                 9446 	ld	(hl),a
                           9447 ;demo.c:1349: if (greetindex == 0) {
   3099 3Ar32s42           9448 	ld	a,(#_greetindex+0)
   309C 21r33s42           9449 	ld	hl,#_greetindex + 1
   309F B6                 9450 	or	a,(hl)
   30A0 20 17              9451 	jr	NZ,00107$
                           9452 ;demo.c:1350: slowend = 27;
   30A2 21rC0s41           9453 	ld	hl,#_slowend + 0
   30A5 36 1B              9454 	ld	(hl), #0x1B
   30A7 21rC1s41           9455 	ld	hl,#_slowend + 1
   30AA 36 00              9456 	ld	(hl), #0x00
                           9457 ;demo.c:1351: drawstrslow("GREETINGS TO VARIOUS GROUPS",10,20);
   30AC 21 0A 14           9458 	ld	hl,#0x140A
   30AF E5                 9459 	push	hl
   30B0 21r65s31           9460 	ld	hl,#__str_9
   30B3 E5                 9461 	push	hl
   30B4 CDrDAs10           9462 	call	_drawstrslow
   30B7 F1                 9463 	pop	af
   30B8 F1                 9464 	pop	af
   30B9                    9465 00107$:
                           9466 ;demo.c:1353: if (greetindex == 1) {
   30B9 3Ar32s42           9467 	ld	a,(#_greetindex+0)
   30BC D6 01              9468 	sub	a,#0x01
   30BE 20 06              9469 	jr	NZ,00153$
   30C0 3Ar33s42           9470 	ld	a,(#_greetindex+1)
   30C3 B7                 9471 	or	a,a
   30C4 28 02              9472 	jr	Z,00154$
   30C6                    9473 00153$:
   30C6 18 17              9474 	jr	00109$
   30C8                    9475 00154$:
                           9476 ;demo.c:1354: slowend = 33;
   30C8 21rC0s41           9477 	ld	hl,#_slowend + 0
   30CB 36 21              9478 	ld	(hl), #0x21
   30CD 21rC1s41           9479 	ld	hl,#_slowend + 1
   30D0 36 00              9480 	ld	(hl), #0x00
                           9481 ;demo.c:1355: drawstrslow("Trilobit  Prismbeings  Ivory Labs",10,164);
   30D2 21 0A A4           9482 	ld	hl,#0xA40A
   30D5 E5                 9483 	push	hl
   30D6 21r81s31           9484 	ld	hl,#__str_10
   30D9 E5                 9485 	push	hl
   30DA CDrDAs10           9486 	call	_drawstrslow
   30DD F1                 9487 	pop	af
   30DE F1                 9488 	pop	af
   30DF                    9489 00109$:
                           9490 ;demo.c:1357: if (greetindex == 2) {
   30DF 3Ar32s42           9491 	ld	a,(#_greetindex+0)
   30E2 D6 02              9492 	sub	a,#0x02
   30E4 20 06              9493 	jr	NZ,00155$
   30E6 3Ar33s42           9494 	ld	a,(#_greetindex+1)
   30E9 B7                 9495 	or	a,a
   30EA 28 02              9496 	jr	Z,00156$
   30EC                    9497 00155$:
   30EC 18 17              9498 	jr	00111$
   30EE                    9499 00156$:
                           9500 ;demo.c:1358: slowend = 29;
   30EE 21rC0s41           9501 	ld	hl,#_slowend + 0
   30F1 36 1D              9502 	ld	(hl), #0x1D
   30F3 21rC1s41           9503 	ld	hl,#_slowend + 1
   30F6 36 00              9504 	ld	(hl), #0x00
                           9505 ;demo.c:1359: drawstrslow("PWP  Dekadence  Paraguay  ISO",18,174);
   30F8 21 12 AE           9506 	ld	hl,#0xAE12
   30FB E5                 9507 	push	hl
   30FC 21rA3s31           9508 	ld	hl,#__str_11
   30FF E5                 9509 	push	hl
   3100 CDrDAs10           9510 	call	_drawstrslow
   3103 F1                 9511 	pop	af
   3104 F1                 9512 	pop	af
   3105                    9513 00111$:
                           9514 ;demo.c:1361: if (greetindex == 3) {
   3105 3Ar32s42           9515 	ld	a,(#_greetindex+0)
   3108 D6 03              9516 	sub	a,#0x03
   310A 20 06              9517 	jr	NZ,00157$
   310C 3Ar33s42           9518 	ld	a,(#_greetindex+1)
   310F B7                 9519 	or	a,a
   3110 28 02              9520 	jr	Z,00158$
   3112                    9521 00157$:
   3112 18 17              9522 	jr	00113$
   3114                    9523 00158$:
                           9524 ;demo.c:1362: slowend = 17;
   3114 21rC0s41           9525 	ld	hl,#_slowend + 0
   3117 36 11              9526 	ld	(hl), #0x11
   3119 21rC1s41           9527 	ld	hl,#_slowend + 1
   311C 36 00              9528 	ld	(hl), #0x00
                           9529 ;demo.c:1363: drawstrslow("Furry Trash Group",26,184);
   311E 21 1A B8           9530 	ld	hl,#0xB81A
   3121 E5                 9531 	push	hl
   3122 21rC1s31           9532 	ld	hl,#__str_12
   3125 E5                 9533 	push	hl
   3126 CDrDAs10           9534 	call	_drawstrslow
   3129 F1                 9535 	pop	af
   312A F1                 9536 	pop	af
   312B                    9537 00113$:
                           9538 ;demo.c:1365: if (ltrpointer >= slowend) { greetindex++; ltrpointer = 0; }
   312B 21rC0s41           9539 	ld	hl,#_slowend
   312E 3ArBEs41           9540 	ld	a,(#_ltrpointer+0)
   3131 96                 9541 	sub	a,(hl)
   3132 3ArBFs41           9542 	ld	a,(#_ltrpointer+1)
   3135 23                 9543 	inc	hl
   3136 9E                 9544 	sbc	a,(hl)
   3137 FAr54s31           9545 	jp	M,00115$
   313A FD 21r32s42        9546 	ld	iy,#_greetindex
   313E FD 34 00           9547 	inc	0 (iy)
   3141 20 07              9548 	jr	NZ,00159$
   3143 FD 21r32s42        9549 	ld	iy,#_greetindex
   3147 FD 34 01           9550 	inc	1 (iy)
   314A                    9551 00159$:
   314A 21rBEs41           9552 	ld	hl,#_ltrpointer + 0
   314D 36 00              9553 	ld	(hl), #0x00
   314F 21rBFs41           9554 	ld	hl,#_ltrpointer + 1
   3152 36 00              9555 	ld	(hl), #0x00
   3154                    9556 00115$:
                           9557 ;demo.c:1367: msx2_palette(4,0,0,0);
   3154 21 00 00           9558 	ld	hl,#0x0000
   3157 E5                 9559 	push	hl
   3158 2E 04              9560 	ld	l, #0x04
   315A E5                 9561 	push	hl
   315B CDr00s00           9562 	call	_msx2_palette
   315E F1                 9563 	pop	af
   315F F1                 9564 	pop	af
   3160 DD F9              9565 	ld	sp,ix
   3162 DD E1              9566 	pop	ix
   3164 C9                 9567 	ret
   3165                    9568 _points_end::
   3165                    9569 __str_9:
   3165 47 52 45 45 54 49  9570 	.ascii "GREETINGS TO VARIOUS GROUPS"
        4E 47 53 20 54 4F
        20 56 41 52 49 4F
        55 53 20 47 52 4F
        55 50 53
   3180 00                 9571 	.db 0x00
   3181                    9572 __str_10:
   3181 54 72 69 6C 6F 62  9573 	.ascii "Trilobit  Prismbeings  Ivory Labs"
        69 74 20 20 50 72
        69 73 6D 62 65 69
        6E 67 73 20 20 49
        76 6F 72 79 20 4C
        61 62 73
   31A2 00                 9574 	.db 0x00
   31A3                    9575 __str_11:
   31A3 50 57 50 20 20 44  9576 	.ascii "PWP  Dekadence  Paraguay  ISO"
        65 6B 61 64 65 6E
        63 65 20 20 50 61
        72 61 67 75 61 79
        20 20 49 53 4F
   31C0 00                 9577 	.db 0x00
   31C1                    9578 __str_12:
   31C1 46 75 72 72 79 20  9579 	.ascii "Furry Trash Group"
        54 72 61 73 68 20
        47 72 6F 75 70
   31D2 00                 9580 	.db 0x00
                           9581 ;demo.c:1372: void bigtext() {
                           9582 ;	---------------------------------
                           9583 ; Function bigtext
                           9584 ; ---------------------------------
   31D3                    9585 _bigtext_start::
   31D3                    9586 _bigtext:
   31D3 DD E5              9587 	push	ix
   31D5 DD 21 00 00        9588 	ld	ix,#0
   31D9 DD 39              9589 	add	ix,sp
   31DB F5                 9590 	push	af
                           9591 ;demo.c:1374: if (bigtextp == 0) {
   31DC 3Ar34s42           9592 	ld	a,(#_bigtextp+0)
   31DF FD 21r34s42        9593 	ld	iy,#_bigtextp
   31E3 FD B6 01           9594 	or	a,1 (iy)
   31E6 C2rF3s32           9595 	jp	NZ,00102$
                           9596 ;demo.c:1375: cmd.size_x = 2;
   31E9 21r32s41           9597 	ld	hl, #_cmd + 8
   31EC 36 02              9598 	ld	(hl),#0x02
   31EE 23                 9599 	inc	hl
   31EF 36 00              9600 	ld	(hl),#0x00
                           9601 ;demo.c:1376: cmd.size_y = 212;
   31F1 21r34s41           9602 	ld	hl, #_cmd + 10
   31F4 36 D4              9603 	ld	(hl),#0xD4
   31F6 23                 9604 	inc	hl
   31F7 36 00              9605 	ld	(hl),#0x00
                           9606 ;demo.c:1377: cmd.data = 0;
                           9607 ;demo.c:1378: cmd.argument = 0x00; // from 70xY to left
   31F9 3E 00              9608 	ld	a,#0x00
   31FB 32r36s41           9609 	ld	(#_cmd + 12),a
   31FE 32r37s41           9610 	ld	(#_cmd + 13),a
                           9611 ;demo.c:1379: cmd.command = 0xd0; // vram to vram, y only
   3201 01r38s41           9612 	ld	bc,#_cmd + 14
   3204 3E D0              9613 	ld	a,#0xD0
   3206 02                 9614 	ld	(bc),a
                           9615 ;demo.c:1380: cmd.source_x = 255;
   3207 21r2As41           9616 	ld	hl,#_cmd
   320A 36 FF              9617 	ld	(hl),#0xFF
   320C 23                 9618 	inc	hl
   320D 36 00              9619 	ld	(hl),#0x00
                           9620 ;demo.c:1381: cmd.source_y = 0;
   320F 21r2Cs41           9621 	ld	hl, #_cmd + 2
   3212 36 00              9622 	ld	(hl),#0x00
   3214 23                 9623 	inc	hl
   3215 36 00              9624 	ld	(hl),#0x00
                           9625 ;demo.c:1383: for (x = 0; x < 256; x+=4) {
   3217 01 00 00           9626 	ld	bc,#0x0000
   321A                    9627 00128$:
   321A 79                 9628 	ld	a,c
   321B D6 00              9629 	sub	a,#0x00
   321D 78                 9630 	ld	a,b
   321E DE 01              9631 	sbc	a,#0x01
   3220 F2r57s32           9632 	jp	P,00131$
                           9633 ;demo.c:1384: waitVB();
   3223 76                 9634 		halt 
                           9635 ;demo.c:1385: cmd.dest_y = 256;
   3224 11r30s41           9636 	ld	de,#_cmd + 6
   3227 EB                 9637 	ex	de,hl
   3228 36 00              9638 	ld	(hl),#0x00
   322A 23                 9639 	inc	hl
   322B 36 01              9640 	ld	(hl),#0x01
                           9641 ;demo.c:1386: cmd.dest_x = x;
   322D 11r2Es41           9642 	ld	de,#_cmd + 4
   3230 EB                 9643 	ex	de,hl
   3231 71                 9644 	ld	(hl),c
   3232 23                 9645 	inc	hl
   3233 70                 9646 	ld	(hl),b
                           9647 ;demo.c:1387: vdp_copier(&cmd);
   3234 C5                 9648 	push	bc
   3235 21r2As41           9649 	ld	hl,#_cmd
   3238 E5                 9650 	push	hl
   3239 CDr00s00           9651 	call	_vdp_copier
   323C F1                 9652 	pop	af
   323D C1                 9653 	pop	bc
                           9654 ;demo.c:1388: cmd.dest_y = 0;
   323E 11r30s41           9655 	ld	de,#_cmd + 6
   3241 EB                 9656 	ex	de,hl
   3242 36 00              9657 	ld	(hl),#0x00
   3244 23                 9658 	inc	hl
   3245 36 00              9659 	ld	(hl),#0x00
                           9660 ;demo.c:1389: vdp_copier(&cmd);
   3247 C5                 9661 	push	bc
   3248 21r2As41           9662 	ld	hl,#_cmd
   324B E5                 9663 	push	hl
   324C CDr00s00           9664 	call	_vdp_copier
   324F F1                 9665 	pop	af
   3250 C1                 9666 	pop	bc
                           9667 ;demo.c:1383: for (x = 0; x < 256; x+=4) {
   3251 03                 9668 	inc	bc
   3252 03                 9669 	inc	bc
   3253 03                 9670 	inc	bc
   3254 03                 9671 	inc	bc
   3255 18 C3              9672 	jr	00128$
   3257                    9673 00131$:
                           9674 ;demo.c:1392: for (x = 254; x > 0; x-=4) {
   3257 01 FE 00           9675 	ld	bc,#0x00FE
   325A                    9676 00132$:
   325A 3E 00              9677 	ld	a,#0x00
   325C 91                 9678 	sub	a,c
   325D 3E 00              9679 	ld	a,#0x00
   325F 98                 9680 	sbc	a,b
   3260 F2r9Bs32           9681 	jp	P,00135$
                           9682 ;demo.c:1393: waitVB();
   3263 76                 9683 		halt 
                           9684 ;demo.c:1394: cmd.dest_y = 256;
   3264 11r30s41           9685 	ld	de,#_cmd + 6
   3267 EB                 9686 	ex	de,hl
   3268 36 00              9687 	ld	(hl),#0x00
   326A 23                 9688 	inc	hl
   326B 36 01              9689 	ld	(hl),#0x01
                           9690 ;demo.c:1395: cmd.dest_x = x;
   326D 11r2Es41           9691 	ld	de,#_cmd + 4
   3270 EB                 9692 	ex	de,hl
   3271 71                 9693 	ld	(hl),c
   3272 23                 9694 	inc	hl
   3273 70                 9695 	ld	(hl),b
                           9696 ;demo.c:1396: vdp_copier(&cmd);
   3274 C5                 9697 	push	bc
   3275 21r2As41           9698 	ld	hl,#_cmd
   3278 E5                 9699 	push	hl
   3279 CDr00s00           9700 	call	_vdp_copier
   327C F1                 9701 	pop	af
   327D C1                 9702 	pop	bc
                           9703 ;demo.c:1397: cmd.dest_y = 0;
   327E 11r30s41           9704 	ld	de,#_cmd + 6
   3281 EB                 9705 	ex	de,hl
   3282 36 00              9706 	ld	(hl),#0x00
   3284 23                 9707 	inc	hl
   3285 36 00              9708 	ld	(hl),#0x00
                           9709 ;demo.c:1398: vdp_copier(&cmd);
   3287 C5                 9710 	push	bc
   3288 21r2As41           9711 	ld	hl,#_cmd
   328B E5                 9712 	push	hl
   328C CDr00s00           9713 	call	_vdp_copier
   328F F1                 9714 	pop	af
   3290 C1                 9715 	pop	bc
                           9716 ;demo.c:1392: for (x = 254; x > 0; x-=4) {
   3291 79                 9717 	ld	a,c
   3292 C6 FC              9718 	add	a,#0xFC
   3294 4F                 9719 	ld	c,a
   3295 78                 9720 	ld	a,b
   3296 CE FF              9721 	adc	a,#0xFF
   3298 47                 9722 	ld	b,a
   3299 18 BF              9723 	jr	00132$
   329B                    9724 00135$:
                           9725 ;demo.c:1401: vdp_load_palette(boxes_palette);
   329B 21rE6s40           9726 	ld	hl,#_boxes_palette
   329E E5                 9727 	push	hl
   329F CDr00s00           9728 	call	_vdp_load_palette
   32A2 F1                 9729 	pop	af
                           9730 ;demo.c:1402: drawstr2x("DIGITAL",26,44);
   32A3 21 1A 2C           9731 	ld	hl,#0x2C1A
   32A6 E5                 9732 	push	hl
   32A7 21rD9s38           9733 	ld	hl,#__str_13
   32AA E5                 9734 	push	hl
   32AB CDr78s11           9735 	call	_drawstr2x
   32AE F1                 9736 	pop	af
   32AF F1                 9737 	pop	af
                           9738 ;demo.c:1403: drawstr2x("SOUNDS",27,84);
   32B0 21 1B 54           9739 	ld	hl,#0x541B
   32B3 E5                 9740 	push	hl
   32B4 21rE1s38           9741 	ld	hl,#__str_14
   32B7 E5                 9742 	push	hl
   32B8 CDr78s11           9743 	call	_drawstr2x
   32BB F1                 9744 	pop	af
   32BC F1                 9745 	pop	af
                           9746 ;demo.c:1404: drawstr2x("SYSTEM",25,124);
   32BD 21 19 7C           9747 	ld	hl,#0x7C19
   32C0 E5                 9748 	push	hl
   32C1 21rE8s38           9749 	ld	hl,#__str_15
   32C4 E5                 9750 	push	hl
   32C5 CDr78s11           9751 	call	_drawstr2x
   32C8 F1                 9752 	pop	af
   32C9 F1                 9753 	pop	af
                           9754 ;demo.c:1405: bigtextp++;
   32CA FD 21r34s42        9755 	ld	iy,#_bigtextp
   32CE FD 34 00           9756 	inc	0 (iy)
   32D1 20 07              9757 	jr	NZ,00188$
   32D3 FD 21r34s42        9758 	ld	iy,#_bigtextp
   32D7 FD 34 01           9759 	inc	1 (iy)
   32DA                    9760 00188$:
                           9761 ;demo.c:1406: tri_inited = 2;
   32DA 21r15s42           9762 	ld	hl,#_tri_inited + 0
   32DD 36 02              9763 	ld	(hl), #0x02
                           9764 ;demo.c:1407: ff = 0;
   32DF 21rC2s41           9765 	ld	hl,#_ff + 0
   32E2 36 00              9766 	ld	(hl), #0x00
   32E4 21rC3s41           9767 	ld	hl,#_ff + 1
   32E7 36 00              9768 	ld	(hl), #0x00
                           9769 ;demo.c:1408: ltrpointer = 0;
   32E9 21rBEs41           9770 	ld	hl,#_ltrpointer + 0
   32EC 36 00              9771 	ld	(hl), #0x00
   32EE 21rBFs41           9772 	ld	hl,#_ltrpointer + 1
   32F1 36 00              9773 	ld	(hl), #0x00
   32F3                    9774 00102$:
                           9775 ;demo.c:1411: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   32F3 21rC2s41           9776 	ld	hl,#_ff + 0
   32F6 4E                 9777 	ld	c,(hl)
   32F7 21rC3s41           9778 	ld	hl,#_ff + 1
   32FA 46                 9779 	ld	b,(hl)
   32FB CB 28              9780 	sra	b
   32FD CB 19              9781 	rr	c
   32FF CB 28              9782 	sra	b
   3301 CB 19              9783 	rr	c
   3303 21rC2s41           9784 	ld	hl,#_ff + 0
   3306 5E                 9785 	ld	e,(hl)
   3307 21rC3s41           9786 	ld	hl,#_ff + 1
   330A 56                 9787 	ld	d,(hl)
   330B CB 2A              9788 	sra	d
   330D CB 1B              9789 	rr	e
   330F CB 2A              9790 	sra	d
   3311 CB 1B              9791 	rr	e
   3313 CB 2A              9792 	sra	d
   3315 CB 1B              9793 	rr	e
   3317 43                 9794 	ld	b,e
   3318 79                 9795 	ld	a,c
   3319 F5                 9796 	push	af
   331A 33                 9797 	inc	sp
   331B C5                 9798 	push	bc
   331C 33                 9799 	inc	sp
   331D 41                 9800 	ld	b,c
   331E 0E 04              9801 	ld	c,#0x04
   3320 C5                 9802 	push	bc
   3321 CDr00s00           9803 	call	_msx2_palette
   3324 F1                 9804 	pop	af
   3325 F1                 9805 	pop	af
                           9806 ;demo.c:1412: ff+=2;
   3326 21rC2s41           9807 	ld	hl,#_ff
   3329 7E                 9808 	ld	a,(hl)
   332A C6 02              9809 	add	a,#0x02
   332C 23                 9810 	inc	hl
   332D 2B                 9811 	dec	hl
   332E C5                 9812 	push	bc
   332F 4F                 9813 	ld	c, a
   3330 23                 9814 	inc	hl
   3331 7E                 9815 	ld	a, (hl)
   3332 47                 9816 	ld	b, a
   3333 79                 9817 	ld	a, c
   3334 2B                 9818 	dec	hl
   3335 77                 9819 	ld	(hl), a
   3336 78                 9820 	ld	a, b
   3337 C1                 9821 	pop	bc
   3338 CE 00              9822 	adc	a,#0x00
   333A 23                 9823 	inc	hl
   333B 77                 9824 	ld	(hl),a
                           9825 ;demo.c:1414: if (ff == 600) {
   333C 3ArC2s41           9826 	ld	a,(#_ff+0)
   333F D6 58              9827 	sub	a,#0x58
   3341 20 07              9828 	jr	NZ,00191$
   3343 3ArC3s41           9829 	ld	a,(#_ff+1)
   3346 D6 02              9830 	sub	a,#0x02
   3348 28 03              9831 	jr	Z,00192$
   334A                    9832 00191$:
   334A C3rDCs34           9833 	jp	00104$
   334D                    9834 00192$:
                           9835 ;demo.c:1415: cmd.size_x = 2;
   334D 21r32s41           9836 	ld	hl, #_cmd + 8
   3350 36 02              9837 	ld	(hl),#0x02
   3352 23                 9838 	inc	hl
   3353 36 00              9839 	ld	(hl),#0x00
                           9840 ;demo.c:1416: cmd.size_y = 212;
   3355 21r34s41           9841 	ld	hl, #_cmd + 10
   3358 36 D4              9842 	ld	(hl),#0xD4
   335A 23                 9843 	inc	hl
   335B 36 00              9844 	ld	(hl),#0x00
                           9845 ;demo.c:1417: cmd.data = 0;
                           9846 ;demo.c:1418: cmd.argument = 0x00; // from 70xY to left
   335D 3E 00              9847 	ld	a,#0x00
   335F 32r36s41           9848 	ld	(#_cmd + 12),a
   3362 32r37s41           9849 	ld	(#_cmd + 13),a
                           9850 ;demo.c:1419: cmd.command = 0xd0; // vram to vram, y only
   3365 01r38s41           9851 	ld	bc,#_cmd + 14
   3368 3E D0              9852 	ld	a,#0xD0
   336A 02                 9853 	ld	(bc),a
                           9854 ;demo.c:1420: cmd.source_x = 255;
   336B 21r2As41           9855 	ld	hl,#_cmd
   336E 36 FF              9856 	ld	(hl),#0xFF
   3370 23                 9857 	inc	hl
   3371 36 00              9858 	ld	(hl),#0x00
                           9859 ;demo.c:1421: cmd.source_y = 0;
   3373 21r2Cs41           9860 	ld	hl, #_cmd + 2
   3376 36 00              9861 	ld	(hl),#0x00
   3378 23                 9862 	inc	hl
   3379 36 00              9863 	ld	(hl),#0x00
                           9864 ;demo.c:1423: for (x = 254; x > 0; x-=4) {
   337B DD 36 FE FE        9865 	ld	-2 (ix),#0xFE
   337F DD 36 FF 00        9866 	ld	-1 (ix),#0x00
   3383                    9867 00136$:
   3383 3E 00              9868 	ld	a,#0x00
   3385 DD 96 FE           9869 	sub	a,-2 (ix)
   3388 3E 00              9870 	ld	a,#0x00
   338A DD 9E FF           9871 	sbc	a,-1 (ix)
   338D F2r18s34           9872 	jp	P,00139$
                           9873 ;demo.c:1424: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3390 21rC2s41           9874 	ld	hl,#_ff + 0
   3393 5E                 9875 	ld	e,(hl)
   3394 21rC3s41           9876 	ld	hl,#_ff + 1
   3397 56                 9877 	ld	d,(hl)
   3398 CB 2A              9878 	sra	d
   339A CB 1B              9879 	rr	e
   339C CB 2A              9880 	sra	d
   339E CB 1B              9881 	rr	e
   33A0 21rC2s41           9882 	ld	hl,#_ff + 0
   33A3 56                 9883 	ld	d,(hl)
   33A4 21rC3s41           9884 	ld	hl,#_ff + 1
   33A7 4E                 9885 	ld	c,(hl)
   33A8 CB 29              9886 	sra	c
   33AA CB 1A              9887 	rr	d
   33AC CB 29              9888 	sra	c
   33AE CB 1A              9889 	rr	d
   33B0 CB 29              9890 	sra	c
   33B2 CB 1A              9891 	rr	d
   33B4 7B                 9892 	ld	a,e
   33B5 F5                 9893 	push	af
   33B6 33                 9894 	inc	sp
   33B7 D5                 9895 	push	de
   33B8 33                 9896 	inc	sp
   33B9 53                 9897 	ld	d,e
   33BA 1E 04              9898 	ld	e,#0x04
   33BC D5                 9899 	push	de
   33BD CDr00s00           9900 	call	_msx2_palette
   33C0 F1                 9901 	pop	af
   33C1 F1                 9902 	pop	af
                           9903 ;demo.c:1425: ff+=2;
   33C2 21rC2s41           9904 	ld	hl,#_ff
   33C5 7E                 9905 	ld	a,(hl)
   33C6 C6 02              9906 	add	a,#0x02
   33C8 23                 9907 	inc	hl
   33C9 2B                 9908 	dec	hl
   33CA C5                 9909 	push	bc
   33CB 4F                 9910 	ld	c, a
   33CC 23                 9911 	inc	hl
   33CD 7E                 9912 	ld	a, (hl)
   33CE 47                 9913 	ld	b, a
   33CF 79                 9914 	ld	a, c
   33D0 2B                 9915 	dec	hl
   33D1 77                 9916 	ld	(hl), a
   33D2 78                 9917 	ld	a, b
   33D3 C1                 9918 	pop	bc
   33D4 CE 00              9919 	adc	a,#0x00
   33D6 23                 9920 	inc	hl
   33D7 77                 9921 	ld	(hl),a
                           9922 ;demo.c:1426: waitVB();
   33D8 76                 9923 		halt 
                           9924 ;demo.c:1427: cmd.dest_y = 256;
   33D9 21r30s41           9925 	ld	hl, #_cmd + 6
   33DC 36 00              9926 	ld	(hl),#0x00
   33DE 23                 9927 	inc	hl
   33DF 36 01              9928 	ld	(hl),#0x01
                           9929 ;demo.c:1428: cmd.dest_x = x;
   33E1 21r2Es41           9930 	ld	hl, #_cmd + 4
   33E4 DD 7E FE           9931 	ld	a,-2 (ix)
   33E7 77                 9932 	ld	(hl),a
   33E8 23                 9933 	inc	hl
   33E9 DD 7E FF           9934 	ld	a,-1 (ix)
   33EC 77                 9935 	ld	(hl),a
                           9936 ;demo.c:1429: vdp_copier(&cmd);
   33ED 21r2As41           9937 	ld	hl,#_cmd
   33F0 E5                 9938 	push	hl
   33F1 CDr00s00           9939 	call	_vdp_copier
   33F4 F1                 9940 	pop	af
                           9941 ;demo.c:1430: cmd.dest_y = 0;
   33F5 21r30s41           9942 	ld	hl, #_cmd + 6
   33F8 36 00              9943 	ld	(hl),#0x00
   33FA 23                 9944 	inc	hl
   33FB 36 00              9945 	ld	(hl),#0x00
                           9946 ;demo.c:1431: vdp_copier(&cmd);
   33FD 21r2As41           9947 	ld	hl,#_cmd
   3400 E5                 9948 	push	hl
   3401 CDr00s00           9949 	call	_vdp_copier
   3404 F1                 9950 	pop	af
                           9951 ;demo.c:1423: for (x = 254; x > 0; x-=4) {
   3405 DD 7E FE           9952 	ld	a,-2 (ix)
   3408 C6 FC              9953 	add	a,#0xFC
   340A DD 77 FE           9954 	ld	-2 (ix),a
   340D DD 7E FF           9955 	ld	a,-1 (ix)
   3410 CE FF              9956 	adc	a,#0xFF
   3412 DD 77 FF           9957 	ld	-1 (ix),a
   3415 C3r83s33           9958 	jp	00136$
   3418                    9959 00139$:
                           9960 ;demo.c:1435: for (x = 0; x < 256; x+=4) {
   3418 DD 36 FE 00        9961 	ld	-2 (ix),#0x00
   341C DD 36 FF 00        9962 	ld	-1 (ix),#0x00
   3420                    9963 00140$:
   3420 DD 7E FE           9964 	ld	a,-2 (ix)
   3423 D6 00              9965 	sub	a,#0x00
   3425 DD 7E FF           9966 	ld	a,-1 (ix)
   3428 DE 01              9967 	sbc	a,#0x01
   342A F2rB5s34           9968 	jp	P,00143$
                           9969 ;demo.c:1436: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   342D 21rC2s41           9970 	ld	hl,#_ff + 0
   3430 5E                 9971 	ld	e,(hl)
   3431 21rC3s41           9972 	ld	hl,#_ff + 1
   3434 56                 9973 	ld	d,(hl)
   3435 CB 2A              9974 	sra	d
   3437 CB 1B              9975 	rr	e
   3439 CB 2A              9976 	sra	d
   343B CB 1B              9977 	rr	e
   343D 21rC2s41           9978 	ld	hl,#_ff + 0
   3440 56                 9979 	ld	d,(hl)
   3441 21rC3s41           9980 	ld	hl,#_ff + 1
   3444 4E                 9981 	ld	c,(hl)
   3445 CB 29              9982 	sra	c
   3447 CB 1A              9983 	rr	d
   3449 CB 29              9984 	sra	c
   344B CB 1A              9985 	rr	d
   344D CB 29              9986 	sra	c
   344F CB 1A              9987 	rr	d
   3451 7B                 9988 	ld	a,e
   3452 F5                 9989 	push	af
   3453 33                 9990 	inc	sp
   3454 D5                 9991 	push	de
   3455 33                 9992 	inc	sp
   3456 53                 9993 	ld	d,e
   3457 1E 04              9994 	ld	e,#0x04
   3459 D5                 9995 	push	de
   345A CDr00s00           9996 	call	_msx2_palette
   345D F1                 9997 	pop	af
   345E F1                 9998 	pop	af
                           9999 ;demo.c:1437: ff+=2;
   345F 21rC2s41          10000 	ld	hl,#_ff
   3462 7E                10001 	ld	a,(hl)
   3463 C6 02             10002 	add	a,#0x02
   3465 23                10003 	inc	hl
   3466 2B                10004 	dec	hl
   3467 C5                10005 	push	bc
   3468 4F                10006 	ld	c, a
   3469 23                10007 	inc	hl
   346A 7E                10008 	ld	a, (hl)
   346B 47                10009 	ld	b, a
   346C 79                10010 	ld	a, c
   346D 2B                10011 	dec	hl
   346E 77                10012 	ld	(hl), a
   346F 78                10013 	ld	a, b
   3470 C1                10014 	pop	bc
   3471 CE 00             10015 	adc	a,#0x00
   3473 23                10016 	inc	hl
   3474 77                10017 	ld	(hl),a
                          10018 ;demo.c:1438: waitVB();
   3475 76                10019 		halt 
                          10020 ;demo.c:1439: cmd.dest_y = 256;
   3476 21r30s41          10021 	ld	hl, #_cmd + 6
   3479 36 00             10022 	ld	(hl),#0x00
   347B 23                10023 	inc	hl
   347C 36 01             10024 	ld	(hl),#0x01
                          10025 ;demo.c:1440: cmd.dest_x = x;
   347E 21r2Es41          10026 	ld	hl, #_cmd + 4
   3481 DD 7E FE          10027 	ld	a,-2 (ix)
   3484 77                10028 	ld	(hl),a
   3485 23                10029 	inc	hl
   3486 DD 7E FF          10030 	ld	a,-1 (ix)
   3489 77                10031 	ld	(hl),a
                          10032 ;demo.c:1441: vdp_copier(&cmd);
   348A 21r2As41          10033 	ld	hl,#_cmd
   348D E5                10034 	push	hl
   348E CDr00s00          10035 	call	_vdp_copier
   3491 F1                10036 	pop	af
                          10037 ;demo.c:1442: cmd.dest_y = 0;
   3492 21r30s41          10038 	ld	hl, #_cmd + 6
   3495 36 00             10039 	ld	(hl),#0x00
   3497 23                10040 	inc	hl
   3498 36 00             10041 	ld	(hl),#0x00
                          10042 ;demo.c:1443: vdp_copier(&cmd);
   349A 21r2As41          10043 	ld	hl,#_cmd
   349D E5                10044 	push	hl
   349E CDr00s00          10045 	call	_vdp_copier
   34A1 F1                10046 	pop	af
                          10047 ;demo.c:1435: for (x = 0; x < 256; x+=4) {
   34A2 DD 7E FE          10048 	ld	a,-2 (ix)
   34A5 C6 04             10049 	add	a,#0x04
   34A7 DD 77 FE          10050 	ld	-2 (ix),a
   34AA DD 7E FF          10051 	ld	a,-1 (ix)
   34AD CE 00             10052 	adc	a,#0x00
   34AF DD 77 FF          10053 	ld	-1 (ix),a
   34B2 C3r20s34          10054 	jp	00140$
   34B5                   10055 00143$:
                          10056 ;demo.c:1446: drawstr2x("COMMAND",4,44);
   34B5 21 04 2C          10057 	ld	hl,#0x2C04
   34B8 E5                10058 	push	hl
   34B9 21rEFs38          10059 	ld	hl,#__str_16
   34BC E5                10060 	push	hl
   34BD CDr78s11          10061 	call	_drawstr2x
   34C0 F1                10062 	pop	af
   34C1 F1                10063 	pop	af
                          10064 ;demo.c:1447: drawstr2x("   THE  ",32,84);
   34C2 21 20 54          10065 	ld	hl,#0x5420
   34C5 E5                10066 	push	hl
   34C6 21rF7s38          10067 	ld	hl,#__str_17
   34C9 E5                10068 	push	hl
   34CA CDr78s11          10069 	call	_drawstr2x
   34CD F1                10070 	pop	af
   34CE F1                10071 	pop	af
                          10072 ;demo.c:1448: drawstr2x("  BASS ",35,124);
   34CF 21 23 7C          10073 	ld	hl,#0x7C23
   34D2 E5                10074 	push	hl
   34D3 21r00s39          10075 	ld	hl,#__str_18
   34D6 E5                10076 	push	hl
   34D7 CDr78s11          10077 	call	_drawstr2x
   34DA F1                10078 	pop	af
   34DB F1                10079 	pop	af
   34DC                   10080 00104$:
                          10081 ;demo.c:1451: if (ff == 1200) {
   34DC 3ArC2s41          10082 	ld	a,(#_ff+0)
   34DF D6 B0             10083 	sub	a,#0xB0
   34E1 20 07             10084 	jr	NZ,00197$
   34E3 3ArC3s41          10085 	ld	a,(#_ff+1)
   34E6 D6 04             10086 	sub	a,#0x04
   34E8 28 03             10087 	jr	Z,00198$
   34EA                   10088 00197$:
   34EA C3r7Cs36          10089 	jp	00106$
   34ED                   10090 00198$:
                          10091 ;demo.c:1452: cmd.size_x = 3;
   34ED 21r32s41          10092 	ld	hl, #_cmd + 8
   34F0 36 03             10093 	ld	(hl),#0x03
   34F2 23                10094 	inc	hl
   34F3 36 00             10095 	ld	(hl),#0x00
                          10096 ;demo.c:1453: cmd.size_y = 212;
   34F5 21r34s41          10097 	ld	hl, #_cmd + 10
   34F8 36 D4             10098 	ld	(hl),#0xD4
   34FA 23                10099 	inc	hl
   34FB 36 00             10100 	ld	(hl),#0x00
                          10101 ;demo.c:1454: cmd.data = 0;
                          10102 ;demo.c:1455: cmd.argument = 0x00; // from 70xY to left
   34FD 3E 00             10103 	ld	a,#0x00
   34FF 32r36s41          10104 	ld	(#_cmd + 12),a
   3502 32r37s41          10105 	ld	(#_cmd + 13),a
                          10106 ;demo.c:1456: cmd.command = 0xd0; // vram to vram, y only
   3505 01r38s41          10107 	ld	bc,#_cmd + 14
   3508 3E D0             10108 	ld	a,#0xD0
   350A 02                10109 	ld	(bc),a
                          10110 ;demo.c:1457: cmd.source_x = 255;
   350B 21r2As41          10111 	ld	hl,#_cmd
   350E 36 FF             10112 	ld	(hl),#0xFF
   3510 23                10113 	inc	hl
   3511 36 00             10114 	ld	(hl),#0x00
                          10115 ;demo.c:1458: cmd.source_y = 0;
   3513 21r2Cs41          10116 	ld	hl, #_cmd + 2
   3516 36 00             10117 	ld	(hl),#0x00
   3518 23                10118 	inc	hl
   3519 36 00             10119 	ld	(hl),#0x00
                          10120 ;demo.c:1460: for (x = 254; x > 0; x-=4) {
   351B DD 36 FE FE       10121 	ld	-2 (ix),#0xFE
   351F DD 36 FF 00       10122 	ld	-1 (ix),#0x00
   3523                   10123 00144$:
   3523 3E 00             10124 	ld	a,#0x00
   3525 DD 96 FE          10125 	sub	a,-2 (ix)
   3528 3E 00             10126 	ld	a,#0x00
   352A DD 9E FF          10127 	sbc	a,-1 (ix)
   352D F2rB8s35          10128 	jp	P,00147$
                          10129 ;demo.c:1461: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3530 21rC2s41          10130 	ld	hl,#_ff + 0
   3533 5E                10131 	ld	e,(hl)
   3534 21rC3s41          10132 	ld	hl,#_ff + 1
   3537 56                10133 	ld	d,(hl)
   3538 CB 2A             10134 	sra	d
   353A CB 1B             10135 	rr	e
   353C CB 2A             10136 	sra	d
   353E CB 1B             10137 	rr	e
   3540 21rC2s41          10138 	ld	hl,#_ff + 0
   3543 56                10139 	ld	d,(hl)
   3544 21rC3s41          10140 	ld	hl,#_ff + 1
   3547 4E                10141 	ld	c,(hl)
   3548 CB 29             10142 	sra	c
   354A CB 1A             10143 	rr	d
   354C CB 29             10144 	sra	c
   354E CB 1A             10145 	rr	d
   3550 CB 29             10146 	sra	c
   3552 CB 1A             10147 	rr	d
   3554 7B                10148 	ld	a,e
   3555 F5                10149 	push	af
   3556 33                10150 	inc	sp
   3557 D5                10151 	push	de
   3558 33                10152 	inc	sp
   3559 53                10153 	ld	d,e
   355A 1E 04             10154 	ld	e,#0x04
   355C D5                10155 	push	de
   355D CDr00s00          10156 	call	_msx2_palette
   3560 F1                10157 	pop	af
   3561 F1                10158 	pop	af
                          10159 ;demo.c:1462: ff+=2;
   3562 21rC2s41          10160 	ld	hl,#_ff
   3565 7E                10161 	ld	a,(hl)
   3566 C6 02             10162 	add	a,#0x02
   3568 23                10163 	inc	hl
   3569 2B                10164 	dec	hl
   356A C5                10165 	push	bc
   356B 4F                10166 	ld	c, a
   356C 23                10167 	inc	hl
   356D 7E                10168 	ld	a, (hl)
   356E 47                10169 	ld	b, a
   356F 79                10170 	ld	a, c
   3570 2B                10171 	dec	hl
   3571 77                10172 	ld	(hl), a
   3572 78                10173 	ld	a, b
   3573 C1                10174 	pop	bc
   3574 CE 00             10175 	adc	a,#0x00
   3576 23                10176 	inc	hl
   3577 77                10177 	ld	(hl),a
                          10178 ;demo.c:1463: waitVB();
   3578 76                10179 		halt 
                          10180 ;demo.c:1464: cmd.dest_y = 256;
   3579 21r30s41          10181 	ld	hl, #_cmd + 6
   357C 36 00             10182 	ld	(hl),#0x00
   357E 23                10183 	inc	hl
   357F 36 01             10184 	ld	(hl),#0x01
                          10185 ;demo.c:1465: cmd.dest_x = x;
   3581 21r2Es41          10186 	ld	hl, #_cmd + 4
   3584 DD 7E FE          10187 	ld	a,-2 (ix)
   3587 77                10188 	ld	(hl),a
   3588 23                10189 	inc	hl
   3589 DD 7E FF          10190 	ld	a,-1 (ix)
   358C 77                10191 	ld	(hl),a
                          10192 ;demo.c:1466: vdp_copier(&cmd);
   358D 21r2As41          10193 	ld	hl,#_cmd
   3590 E5                10194 	push	hl
   3591 CDr00s00          10195 	call	_vdp_copier
   3594 F1                10196 	pop	af
                          10197 ;demo.c:1467: cmd.dest_y = 0;
   3595 21r30s41          10198 	ld	hl, #_cmd + 6
   3598 36 00             10199 	ld	(hl),#0x00
   359A 23                10200 	inc	hl
   359B 36 00             10201 	ld	(hl),#0x00
                          10202 ;demo.c:1468: vdp_copier(&cmd);
   359D 21r2As41          10203 	ld	hl,#_cmd
   35A0 E5                10204 	push	hl
   35A1 CDr00s00          10205 	call	_vdp_copier
   35A4 F1                10206 	pop	af
                          10207 ;demo.c:1460: for (x = 254; x > 0; x-=4) {
   35A5 DD 7E FE          10208 	ld	a,-2 (ix)
   35A8 C6 FC             10209 	add	a,#0xFC
   35AA DD 77 FE          10210 	ld	-2 (ix),a
   35AD DD 7E FF          10211 	ld	a,-1 (ix)
   35B0 CE FF             10212 	adc	a,#0xFF
   35B2 DD 77 FF          10213 	ld	-1 (ix),a
   35B5 C3r23s35          10214 	jp	00144$
   35B8                   10215 00147$:
                          10216 ;demo.c:1472: for (x = 0; x < 256; x+=4) {
   35B8 DD 36 FE 00       10217 	ld	-2 (ix),#0x00
   35BC DD 36 FF 00       10218 	ld	-1 (ix),#0x00
   35C0                   10219 00148$:
   35C0 DD 7E FE          10220 	ld	a,-2 (ix)
   35C3 D6 00             10221 	sub	a,#0x00
   35C5 DD 7E FF          10222 	ld	a,-1 (ix)
   35C8 DE 01             10223 	sbc	a,#0x01
   35CA F2r55s36          10224 	jp	P,00151$
                          10225 ;demo.c:1473: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   35CD 21rC2s41          10226 	ld	hl,#_ff + 0
   35D0 5E                10227 	ld	e,(hl)
   35D1 21rC3s41          10228 	ld	hl,#_ff + 1
   35D4 56                10229 	ld	d,(hl)
   35D5 CB 2A             10230 	sra	d
   35D7 CB 1B             10231 	rr	e
   35D9 CB 2A             10232 	sra	d
   35DB CB 1B             10233 	rr	e
   35DD 21rC2s41          10234 	ld	hl,#_ff + 0
   35E0 56                10235 	ld	d,(hl)
   35E1 21rC3s41          10236 	ld	hl,#_ff + 1
   35E4 4E                10237 	ld	c,(hl)
   35E5 CB 29             10238 	sra	c
   35E7 CB 1A             10239 	rr	d
   35E9 CB 29             10240 	sra	c
   35EB CB 1A             10241 	rr	d
   35ED CB 29             10242 	sra	c
   35EF CB 1A             10243 	rr	d
   35F1 7B                10244 	ld	a,e
   35F2 F5                10245 	push	af
   35F3 33                10246 	inc	sp
   35F4 D5                10247 	push	de
   35F5 33                10248 	inc	sp
   35F6 53                10249 	ld	d,e
   35F7 1E 04             10250 	ld	e,#0x04
   35F9 D5                10251 	push	de
   35FA CDr00s00          10252 	call	_msx2_palette
   35FD F1                10253 	pop	af
   35FE F1                10254 	pop	af
                          10255 ;demo.c:1474: ff+=2;
   35FF 21rC2s41          10256 	ld	hl,#_ff
   3602 7E                10257 	ld	a,(hl)
   3603 C6 02             10258 	add	a,#0x02
   3605 23                10259 	inc	hl
   3606 2B                10260 	dec	hl
   3607 C5                10261 	push	bc
   3608 4F                10262 	ld	c, a
   3609 23                10263 	inc	hl
   360A 7E                10264 	ld	a, (hl)
   360B 47                10265 	ld	b, a
   360C 79                10266 	ld	a, c
   360D 2B                10267 	dec	hl
   360E 77                10268 	ld	(hl), a
   360F 78                10269 	ld	a, b
   3610 C1                10270 	pop	bc
   3611 CE 00             10271 	adc	a,#0x00
   3613 23                10272 	inc	hl
   3614 77                10273 	ld	(hl),a
                          10274 ;demo.c:1475: waitVB();
   3615 76                10275 		halt 
                          10276 ;demo.c:1476: cmd.dest_y = 256;
   3616 21r30s41          10277 	ld	hl, #_cmd + 6
   3619 36 00             10278 	ld	(hl),#0x00
   361B 23                10279 	inc	hl
   361C 36 01             10280 	ld	(hl),#0x01
                          10281 ;demo.c:1477: cmd.dest_x = x;
   361E 21r2Es41          10282 	ld	hl, #_cmd + 4
   3621 DD 7E FE          10283 	ld	a,-2 (ix)
   3624 77                10284 	ld	(hl),a
   3625 23                10285 	inc	hl
   3626 DD 7E FF          10286 	ld	a,-1 (ix)
   3629 77                10287 	ld	(hl),a
                          10288 ;demo.c:1478: vdp_copier(&cmd);
   362A 21r2As41          10289 	ld	hl,#_cmd
   362D E5                10290 	push	hl
   362E CDr00s00          10291 	call	_vdp_copier
   3631 F1                10292 	pop	af
                          10293 ;demo.c:1479: cmd.dest_y = 0;
   3632 21r30s41          10294 	ld	hl, #_cmd + 6
   3635 36 00             10295 	ld	(hl),#0x00
   3637 23                10296 	inc	hl
   3638 36 00             10297 	ld	(hl),#0x00
                          10298 ;demo.c:1480: vdp_copier(&cmd);
   363A 21r2As41          10299 	ld	hl,#_cmd
   363D E5                10300 	push	hl
   363E CDr00s00          10301 	call	_vdp_copier
   3641 F1                10302 	pop	af
                          10303 ;demo.c:1472: for (x = 0; x < 256; x+=4) {
   3642 DD 7E FE          10304 	ld	a,-2 (ix)
   3645 C6 04             10305 	add	a,#0x04
   3647 DD 77 FE          10306 	ld	-2 (ix),a
   364A DD 7E FF          10307 	ld	a,-1 (ix)
   364D CE 00             10308 	adc	a,#0x00
   364F DD 77 FF          10309 	ld	-1 (ix),a
   3652 C3rC0s35          10310 	jp	00148$
   3655                   10311 00151$:
                          10312 ;demo.c:1483: drawstr2x("REVISION",10,44);
   3655 21 0A 2C          10313 	ld	hl,#0x2C0A
   3658 E5                10314 	push	hl
   3659 21r08s39          10315 	ld	hl,#__str_19
   365C E5                10316 	push	hl
   365D CDr78s11          10317 	call	_drawstr2x
   3660 F1                10318 	pop	af
   3661 F1                10319 	pop	af
                          10320 ;demo.c:1484: drawstr2x("   IS OUR",0,84);
   3662 21 00 54          10321 	ld	hl,#0x5400
   3665 E5                10322 	push	hl
   3666 21r11s39          10323 	ld	hl,#__str_20
   3669 E5                10324 	push	hl
   366A CDr78s11          10325 	call	_drawstr2x
   366D F1                10326 	pop	af
   366E F1                10327 	pop	af
                          10328 ;demo.c:1485: drawstr2x("  PARTY",12,124);
   366F 21 0C 7C          10329 	ld	hl,#0x7C0C
   3672 E5                10330 	push	hl
   3673 21r1Bs39          10331 	ld	hl,#__str_21
   3676 E5                10332 	push	hl
   3677 CDr78s11          10333 	call	_drawstr2x
   367A F1                10334 	pop	af
   367B F1                10335 	pop	af
   367C                   10336 00106$:
                          10337 ;demo.c:1488: if (ff >= 1600 && ff < 1700) {
   367C 3ArC2s41          10338 	ld	a,(#_ff+0)
   367F D6 40             10339 	sub	a,#0x40
   3681 3ArC3s41          10340 	ld	a,(#_ff+1)
   3684 DE 06             10341 	sbc	a,#0x06
   3686 FArADs36          10342 	jp	M,00108$
   3689 3ArC2s41          10343 	ld	a,(#_ff+0)
   368C D6 A4             10344 	sub	a,#0xA4
   368E 3ArC3s41          10345 	ld	a,(#_ff+1)
   3691 DE 06             10346 	sbc	a,#0x06
   3693 F2rADs36          10347 	jp	P,00108$
                          10348 ;demo.c:1489: slowend = 37;
   3696 21rC0s41          10349 	ld	hl,#_slowend + 0
   3699 36 25             10350 	ld	(hl), #0x25
   369B 21rC1s41          10351 	ld	hl,#_slowend + 1
   369E 36 00             10352 	ld	(hl), #0x00
                          10353 ;demo.c:1490: drawstrslow("Give a big hand to all the organizers",28,164+6);
   36A0 21 1C AA          10354 	ld	hl,#0xAA1C
   36A3 E5                10355 	push	hl
   36A4 21r23s39          10356 	ld	hl,#__str_22
   36A7 E5                10357 	push	hl
   36A8 CDrDAs10          10358 	call	_drawstrslow
   36AB F1                10359 	pop	af
   36AC F1                10360 	pop	af
   36AD                   10361 00108$:
                          10362 ;demo.c:1493: if (ff == 1700) {
   36AD 3ArC2s41          10363 	ld	a,(#_ff+0)
   36B0 D6 A4             10364 	sub	a,#0xA4
   36B2 20 07             10365 	jr	NZ,00203$
   36B4 3ArC3s41          10366 	ld	a,(#_ff+1)
   36B7 D6 06             10367 	sub	a,#0x06
   36B9 28 02             10368 	jr	Z,00204$
   36BB                   10369 00203$:
   36BB 18 0A             10370 	jr	00111$
   36BD                   10371 00204$:
                          10372 ;demo.c:1494: ltrpointer = 0;
   36BD 21rBEs41          10373 	ld	hl,#_ltrpointer + 0
   36C0 36 00             10374 	ld	(hl), #0x00
   36C2 21rBFs41          10375 	ld	hl,#_ltrpointer + 1
   36C5 36 00             10376 	ld	(hl), #0x00
   36C7                   10377 00111$:
                          10378 ;demo.c:1497: if (ff > 1700 && ff < 1800) {
   36C7 3E A4             10379 	ld	a,#0xA4
   36C9 FD 21rC2s41       10380 	ld	iy,#_ff
   36CD FD 96 00          10381 	sub	a,0 (iy)
   36D0 3E 06             10382 	ld	a,#0x06
   36D2 FD 21rC2s41       10383 	ld	iy,#_ff
   36D6 FD 9E 01          10384 	sbc	a,1 (iy)
   36D9 F2r00s37          10385 	jp	P,00113$
   36DC 3ArC2s41          10386 	ld	a,(#_ff+0)
   36DF D6 08             10387 	sub	a,#0x08
   36E1 3ArC3s41          10388 	ld	a,(#_ff+1)
   36E4 DE 07             10389 	sbc	a,#0x07
   36E6 F2r00s37          10390 	jp	P,00113$
                          10391 ;demo.c:1498: slowend = 21;
   36E9 21rC0s41          10392 	ld	hl,#_slowend + 0
   36EC 36 15             10393 	ld	(hl), #0x15
   36EE 21rC1s41          10394 	ld	hl,#_slowend + 1
   36F1 36 00             10395 	ld	(hl), #0x00
                          10396 ;demo.c:1499: drawstrslow("of this amazing party",64,164+16);
   36F3 21 40 B4          10397 	ld	hl,#0xB440
   36F6 E5                10398 	push	hl
   36F7 21r49s39          10399 	ld	hl,#__str_23
   36FA E5                10400 	push	hl
   36FB CDrDAs10          10401 	call	_drawstrslow
   36FE F1                10402 	pop	af
   36FF F1                10403 	pop	af
   3700                   10404 00113$:
                          10405 ;demo.c:1502: if (ff >= 2000 && ff < 3890) {
   3700 3ArC2s41          10406 	ld	a,(#_ff+0)
   3703 D6 D0             10407 	sub	a,#0xD0
   3705 3ArC3s41          10408 	ld	a,(#_ff+1)
   3708 DE 07             10409 	sbc	a,#0x07
   370A FAr2Es38          10410 	jp	M,00116$
   370D 3ArC2s41          10411 	ld	a,(#_ff+0)
   3710 D6 32             10412 	sub	a,#0x32
   3712 3ArC3s41          10413 	ld	a,(#_ff+1)
   3715 DE 0F             10414 	sbc	a,#0x0F
   3717 F2r2Es38          10415 	jp	P,00116$
                          10416 ;demo.c:1503: cmd.size_x = 1;
   371A 21r32s41          10417 	ld	hl, #_cmd + 8
   371D 36 01             10418 	ld	(hl),#0x01
   371F 23                10419 	inc	hl
   3720 36 00             10420 	ld	(hl),#0x00
                          10421 ;demo.c:1504: cmd.size_y = 17;
   3722 21r34s41          10422 	ld	hl, #_cmd + 10
   3725 36 11             10423 	ld	(hl),#0x11
   3727 23                10424 	inc	hl
   3728 36 00             10425 	ld	(hl),#0x00
                          10426 ;demo.c:1505: cmd.data = 0;
                          10427 ;demo.c:1506: cmd.argument = 0x00; // from 70xY to left
   372A 3E 00             10428 	ld	a,#0x00
   372C 32r36s41          10429 	ld	(#_cmd + 12),a
   372F 32r37s41          10430 	ld	(#_cmd + 13),a
                          10431 ;demo.c:1507: cmd.command = 0xd0; // vram to vram, y only
   3732 3E D0             10432 	ld	a,#0xD0
   3734 32r38s41          10433 	ld	(#_cmd + 14),a
                          10434 ;demo.c:1508: cmd.source_x = 128+20*(((ff-2001)>>3) % 6);
   3737 3ArC2s41          10435 	ld	a,(#_ff+0)
   373A C6 2F             10436 	add	a,#0x2F
   373C 4F                10437 	ld	c,a
   373D 3ArC3s41          10438 	ld	a,(#_ff+1)
   3740 CE F8             10439 	adc	a,#0xF8
   3742 47                10440 	ld	b,a
   3743 CB 28             10441 	sra	b
   3745 CB 19             10442 	rr	c
   3747 CB 28             10443 	sra	b
   3749 CB 19             10444 	rr	c
   374B CB 28             10445 	sra	b
   374D CB 19             10446 	rr	c
   374F 21 06 00          10447 	ld	hl,#0x0006
   3752 E5                10448 	push	hl
   3753 C5                10449 	push	bc
   3754 CDr00s00          10450 	call	__modsint_rrx_s
   3757 F1                10451 	pop	af
   3758 F1                10452 	pop	af
   3759 44                10453 	ld	b,h
   375A 4D                10454 	ld	c,l
   375B 59                10455 	ld	e,c
   375C 50                10456 	ld	d,b
   375D 6B                10457 	ld	l,e
   375E 62                10458 	ld	h,d
   375F 29                10459 	add	hl,hl
   3760 29                10460 	add	hl,hl
   3761 19                10461 	add	hl,de
   3762 29                10462 	add	hl,hl
   3763 29                10463 	add	hl,hl
   3764 01 80 00          10464 	ld	bc,#0x0080
   3767 09                10465 	add	hl,bc
   3768 4D                10466 	ld	c,l
   3769 44                10467 	ld	b,h
   376A 21r2As41          10468 	ld	hl,#_cmd
   376D 71                10469 	ld	(hl),c
   376E 23                10470 	inc	hl
   376F 70                10471 	ld	(hl),b
                          10472 ;demo.c:1509: cmd.source_y = 768+30;
   3770 21r2Cs41          10473 	ld	hl, #_cmd + 2
   3773 36 1E             10474 	ld	(hl),#0x1E
   3775 23                10475 	inc	hl
   3776 36 03             10476 	ld	(hl),#0x03
                          10477 ;demo.c:1510: cmd.dest_x = (255)-((ff-2000)>>3);
   3778 01r2Es41          10478 	ld	bc,#_cmd + 4
   377B 3ArC2s41          10479 	ld	a,(#_ff+0)
   377E C6 30             10480 	add	a,#0x30
   3780 5F                10481 	ld	e,a
   3781 3ArC3s41          10482 	ld	a,(#_ff+1)
   3784 CE F8             10483 	adc	a,#0xF8
   3786 57                10484 	ld	d,a
   3787 CB 2A             10485 	sra	d
   3789 CB 1B             10486 	rr	e
   378B CB 2A             10487 	sra	d
   378D CB 1B             10488 	rr	e
   378F CB 2A             10489 	sra	d
   3791 CB 1B             10490 	rr	e
   3793 3E FF             10491 	ld	a,#0xFF
   3795 93                10492 	sub	a,e
   3796 5F                10493 	ld	e,a
   3797 3E 00             10494 	ld	a,#0x00
   3799 9A                10495 	sbc	a,d
   379A 57                10496 	ld	d,a
   379B 69                10497 	ld	l,c
   379C 60                10498 	ld	h,b
   379D 73                10499 	ld	(hl),e
   379E 23                10500 	inc	hl
   379F 72                10501 	ld	(hl),d
                          10502 ;demo.c:1511: cmd.dest_y = 12;
   37A0 21r30s41          10503 	ld	hl, #_cmd + 6
   37A3 36 0C             10504 	ld	(hl),#0x0C
   37A5 23                10505 	inc	hl
   37A6 36 00             10506 	ld	(hl),#0x00
                          10507 ;demo.c:1512: vdp_copier(&cmd);
   37A8 21r2As41          10508 	ld	hl,#_cmd
   37AB E5                10509 	push	hl
   37AC CDr00s00          10510 	call	_vdp_copier
   37AF F1                10511 	pop	af
                          10512 ;demo.c:1515: cmd.size_x = 20;
   37B0 21r32s41          10513 	ld	hl, #_cmd + 8
   37B3 36 14             10514 	ld	(hl),#0x14
   37B5 23                10515 	inc	hl
   37B6 36 00             10516 	ld	(hl),#0x00
                          10517 ;demo.c:1516: cmd.size_y = 17;
   37B8 21r34s41          10518 	ld	hl, #_cmd + 10
   37BB 36 11             10519 	ld	(hl),#0x11
   37BD 23                10520 	inc	hl
   37BE 36 00             10521 	ld	(hl),#0x00
                          10522 ;demo.c:1517: cmd.data = 0;
                          10523 ;demo.c:1518: cmd.argument = 0x00; // from 70xY to left
   37C0 3E 00             10524 	ld	a,#0x00
   37C2 32r36s41          10525 	ld	(#_cmd + 12),a
   37C5 32r37s41          10526 	ld	(#_cmd + 13),a
                          10527 ;demo.c:1519: cmd.command = 0xd0; // vram to vram, y only
   37C8 3E D0             10528 	ld	a,#0xD0
   37CA 32r38s41          10529 	ld	(#_cmd + 14),a
                          10530 ;demo.c:1520: cmd.source_x = 128+20*(((ff-2000)>>3) % 6);
   37CD 3ArC2s41          10531 	ld	a,(#_ff+0)
   37D0 C6 30             10532 	add	a,#0x30
   37D2 4F                10533 	ld	c,a
   37D3 3ArC3s41          10534 	ld	a,(#_ff+1)
   37D6 CE F8             10535 	adc	a,#0xF8
   37D8 47                10536 	ld	b,a
   37D9 CB 28             10537 	sra	b
   37DB CB 19             10538 	rr	c
   37DD CB 28             10539 	sra	b
   37DF CB 19             10540 	rr	c
   37E1 CB 28             10541 	sra	b
   37E3 CB 19             10542 	rr	c
   37E5 C5                10543 	push	bc
   37E6 21 06 00          10544 	ld	hl,#0x0006
   37E9 E5                10545 	push	hl
   37EA C5                10546 	push	bc
   37EB CDr00s00          10547 	call	__modsint_rrx_s
   37EE F1                10548 	pop	af
   37EF F1                10549 	pop	af
   37F0 EB                10550 	ex	de,hl
   37F1 C1                10551 	pop	bc
   37F2 6B                10552 	ld	l,e
   37F3 62                10553 	ld	h,d
   37F4 29                10554 	add	hl,hl
   37F5 29                10555 	add	hl,hl
   37F6 19                10556 	add	hl,de
   37F7 29                10557 	add	hl,hl
   37F8 29                10558 	add	hl,hl
   37F9 EB                10559 	ex	de,hl
   37FA 21 80 00          10560 	ld	hl,#0x0080
   37FD 19                10561 	add	hl,de
   37FE EB                10562 	ex	de,hl
   37FF 21r2As41          10563 	ld	hl,#_cmd
   3802 73                10564 	ld	(hl),e
   3803 23                10565 	inc	hl
   3804 72                10566 	ld	(hl),d
                          10567 ;demo.c:1521: cmd.source_y = 768;
   3805 11r2Cs41          10568 	ld	de,#_cmd + 2
   3808 EB                10569 	ex	de,hl
   3809 36 00             10570 	ld	(hl),#0x00
   380B 23                10571 	inc	hl
   380C 36 03             10572 	ld	(hl),#0x03
                          10573 ;demo.c:1522: cmd.dest_x = (256-20)-((ff-2000)>>3);
   380E 11r2Es41          10574 	ld	de,#_cmd + 4
   3811 3E EC             10575 	ld	a,#0xEC
   3813 91                10576 	sub	a,c
   3814 4F                10577 	ld	c,a
   3815 3E 00             10578 	ld	a,#0x00
   3817 98                10579 	sbc	a,b
   3818 47                10580 	ld	b,a
   3819 6B                10581 	ld	l,e
   381A 62                10582 	ld	h,d
   381B 71                10583 	ld	(hl),c
   381C 23                10584 	inc	hl
   381D 70                10585 	ld	(hl),b
                          10586 ;demo.c:1523: cmd.dest_y = 12;
   381E 21r30s41          10587 	ld	hl, #_cmd + 6
   3821 36 0C             10588 	ld	(hl),#0x0C
   3823 23                10589 	inc	hl
   3824 36 00             10590 	ld	(hl),#0x00
                          10591 ;demo.c:1524: vdp_copier(&cmd);
   3826 21r2As41          10592 	ld	hl,#_cmd
   3829 E5                10593 	push	hl
   382A CDr00s00          10594 	call	_vdp_copier
   382D F1                10595 	pop	af
   382E                   10596 00116$:
                          10597 ;demo.c:1529: if (ff == 2800) {
   382E 3ArC2s41          10598 	ld	a,(#_ff+0)
   3831 D6 F0             10599 	sub	a,#0xF0
   3833 20 07             10600 	jr	NZ,00208$
   3835 3ArC3s41          10601 	ld	a,(#_ff+1)
   3838 D6 0A             10602 	sub	a,#0x0A
   383A 28 02             10603 	jr	Z,00209$
   383C                   10604 00208$:
   383C 18 0A             10605 	jr	00119$
   383E                   10606 00209$:
                          10607 ;demo.c:1530: ltrpointer = 0;
   383E 21rBEs41          10608 	ld	hl,#_ltrpointer + 0
   3841 36 00             10609 	ld	(hl), #0x00
   3843 21rBFs41          10610 	ld	hl,#_ltrpointer + 1
   3846 36 00             10611 	ld	(hl), #0x00
   3848                   10612 00119$:
                          10613 ;demo.c:1533: if (ff > 2800 && ff < 2900) {
   3848 3E F0             10614 	ld	a,#0xF0
   384A FD 21rC2s41       10615 	ld	iy,#_ff
   384E FD 96 00          10616 	sub	a,0 (iy)
   3851 3E 0A             10617 	ld	a,#0x0A
   3853 FD 21rC2s41       10618 	ld	iy,#_ff
   3857 FD 9E 01          10619 	sbc	a,1 (iy)
   385A F2r81s38          10620 	jp	P,00121$
   385D 3ArC2s41          10621 	ld	a,(#_ff+0)
   3860 D6 54             10622 	sub	a,#0x54
   3862 3ArC3s41          10623 	ld	a,(#_ff+1)
   3865 DE 0B             10624 	sbc	a,#0x0B
   3867 F2r81s38          10625 	jp	P,00121$
                          10626 ;demo.c:1534: slowend = 21;
   386A 21rC0s41          10627 	ld	hl,#_slowend + 0
   386D 36 15             10628 	ld	(hl), #0x15
   386F 21rC1s41          10629 	ld	hl,#_slowend + 1
   3872 36 00             10630 	ld	(hl), #0x00
                          10631 ;demo.c:1535: drawstrslow("Digital Sounds System",0,0);
   3874 21 00 00          10632 	ld	hl,#0x0000
   3877 E5                10633 	push	hl
   3878 21r5Fs39          10634 	ld	hl,#__str_24
   387B E5                10635 	push	hl
   387C CDrDAs10          10636 	call	_drawstrslow
   387F F1                10637 	pop	af
   3880 F1                10638 	pop	af
   3881                   10639 00121$:
                          10640 ;demo.c:1538: if (ff == 3400) {
   3881 3ArC2s41          10641 	ld	a,(#_ff+0)
   3884 D6 48             10642 	sub	a,#0x48
   3886 20 07             10643 	jr	NZ,00210$
   3888 3ArC3s41          10644 	ld	a,(#_ff+1)
   388B D6 0D             10645 	sub	a,#0x0D
   388D 28 02             10646 	jr	Z,00211$
   388F                   10647 00210$:
   388F 18 0A             10648 	jr	00124$
   3891                   10649 00211$:
                          10650 ;demo.c:1539: ltrpointer = 0;
   3891 21rBEs41          10651 	ld	hl,#_ltrpointer + 0
   3894 36 00             10652 	ld	(hl), #0x00
   3896 21rBFs41          10653 	ld	hl,#_ltrpointer + 1
   3899 36 00             10654 	ld	(hl), #0x00
   389B                   10655 00124$:
                          10656 ;demo.c:1542: if (ff > 3400 && ff < 3500) {
   389B 3E 48             10657 	ld	a,#0x48
   389D FD 21rC2s41       10658 	ld	iy,#_ff
   38A1 FD 96 00          10659 	sub	a,0 (iy)
   38A4 3E 0D             10660 	ld	a,#0x0D
   38A6 FD 21rC2s41       10661 	ld	iy,#_ff
   38AA FD 9E 01          10662 	sbc	a,1 (iy)
   38AD F2rD4s38          10663 	jp	P,00152$
   38B0 3ArC2s41          10664 	ld	a,(#_ff+0)
   38B3 D6 AC             10665 	sub	a,#0xAC
   38B5 3ArC3s41          10666 	ld	a,(#_ff+1)
   38B8 DE 0D             10667 	sbc	a,#0x0D
   38BA F2rD4s38          10668 	jp	P,00152$
                          10669 ;demo.c:1543: slowend = 19;
   38BD 21rC0s41          10670 	ld	hl,#_slowend + 0
   38C0 36 13             10671 	ld	(hl), #0x13
   38C2 21rC1s41          10672 	ld	hl,#_slowend + 1
   38C5 36 00             10673 	ld	(hl), #0x00
                          10674 ;demo.c:1544: drawstrslow("mew mew mew miu mou",134,0);
   38C7 21 86 00          10675 	ld	hl,#0x0086
   38CA E5                10676 	push	hl
   38CB 21r75s39          10677 	ld	hl,#__str_25
   38CE E5                10678 	push	hl
   38CF CDrDAs10          10679 	call	_drawstrslow
   38D2 F1                10680 	pop	af
   38D3 F1                10681 	pop	af
   38D4                   10682 00152$:
   38D4 DD F9             10683 	ld	sp,ix
   38D6 DD E1             10684 	pop	ix
   38D8 C9                10685 	ret
   38D9                   10686 _bigtext_end::
   38D9                   10687 __str_13:
   38D9 44 49 47 49 54 41 10688 	.ascii "DIGITAL"
        4C
   38E0 00                10689 	.db 0x00
   38E1                   10690 __str_14:
   38E1 53 4F 55 4E 44 53 10691 	.ascii "SOUNDS"
   38E7 00                10692 	.db 0x00
   38E8                   10693 __str_15:
   38E8 53 59 53 54 45 4D 10694 	.ascii "SYSTEM"
   38EE 00                10695 	.db 0x00
   38EF                   10696 __str_16:
   38EF 43 4F 4D 4D 41 4E 10697 	.ascii "COMMAND"
        44
   38F6 00                10698 	.db 0x00
   38F7                   10699 __str_17:
   38F7 20 20 20 54 48 45 10700 	.ascii "   THE  "
        20 20
   38FF 00                10701 	.db 0x00
   3900                   10702 __str_18:
   3900 20 20 42 41 53 53 10703 	.ascii "  BASS "
        20
   3907 00                10704 	.db 0x00
   3908                   10705 __str_19:
   3908 52 45 56 49 53 49 10706 	.ascii "REVISION"
        4F 4E
   3910 00                10707 	.db 0x00
   3911                   10708 __str_20:
   3911 20 20 20 49 53 20 10709 	.ascii "   IS OUR"
        4F 55 52
   391A 00                10710 	.db 0x00
   391B                   10711 __str_21:
   391B 20 20 50 41 52 54 10712 	.ascii "  PARTY"
        59
   3922 00                10713 	.db 0x00
   3923                   10714 __str_22:
   3923 47 69 76 65 20 61 10715 	.ascii "Give a big hand to all the organizers"
        20 62 69 67 20 68
        61 6E 64 20 74 6F
        20 61 6C 6C 20 74
        68 65 20 6F 72 67
        61 6E 69 7A 65 72
        73
   3948 00                10716 	.db 0x00
   3949                   10717 __str_23:
   3949 6F 66 20 74 68 69 10718 	.ascii "of this amazing party"
        73 20 61 6D 61 7A
        69 6E 67 20 70 61
        72 74 79
   395E 00                10719 	.db 0x00
   395F                   10720 __str_24:
   395F 44 69 67 69 74 61 10721 	.ascii "Digital Sounds System"
        6C 20 53 6F 75 6E
        64 73 20 53 79 73
        74 65 6D
   3974 00                10722 	.db 0x00
   3975                   10723 __str_25:
   3975 6D 65 77 20 6D 65 10724 	.ascii "mew mew mew miu mou"
        77 20 6D 65 77 20
        6D 69 75 20 6D 6F
        75
   3988 00                10725 	.db 0x00
                          10726 ;demo.c:1549: void waiter() {
                          10727 ;	---------------------------------
                          10728 ; Function waiter
                          10729 ; ---------------------------------
   3989                   10730 _waiter_start::
   3989                   10731 _waiter:
                          10732 ;demo.c:1551: }
   3989 C9                10733 	ret
   398A                   10734 _waiter_end::
                          10735 ;demo.c:1560: void credits() {
                          10736 ;	---------------------------------
                          10737 ; Function credits
                          10738 ; ---------------------------------
   398A                   10739 _credits_start::
   398A                   10740 _credits:
   398A DD E5             10741 	push	ix
   398C DD 21 00 00       10742 	ld	ix,#0
   3990 DD 39             10743 	add	ix,sp
   3992 21 FA FF          10744 	ld	hl,#-6
   3995 39                10745 	add	hl,sp
   3996 F9                10746 	ld	sp,hl
                          10747 ;demo.c:1566: if (initcredits == 0) {
   3997 3Ar36s42          10748 	ld	a,(#_initcredits+0)
   399A 21r37s42          10749 	ld	hl,#_initcredits + 1
   399D B6                10750 	or	a,(hl)
   399E C2rCCs3A          10751 	jp	NZ,00102$
                          10752 ;demo.c:1567: scratch_clear();
   39A1 CDr24s08          10753 	call	_scratch_clear
                          10754 ;demo.c:1568: vdp_load_palette(scratch);
   39A4 21rC6s3F          10755 	ld	hl,#_scratch
   39A7 E5                10756 	push	hl
   39A8 CDr00s00          10757 	call	_vdp_load_palette
   39AB F1                10758 	pop	af
                          10759 ;demo.c:1570: vdp_register(0,8); // mode 512x212
   39AC 21 00 08          10760 	ld	hl,#0x0800
   39AF E5                10761 	push	hl
   39B0 CDr00s00          10762 	call	_vdp_register
   39B3 F1                10763 	pop	af
                          10764 ;demo.c:1571: vdp_register(9,130); // 50hz,192
   39B4 21 09 82          10765 	ld	hl,#0x8209
   39B7 E5                10766 	push	hl
   39B8 CDr00s00          10767 	call	_vdp_register
   39BB F1                10768 	pop	af
                          10769 ;demo.c:1573: uninstall_isr();
   39BC CDr00s00          10770 	call	_uninstall_isr
                          10771 ;demo.c:1574: PLY_Stop();
   39BF CDr00s00          10772 	call	_PLY_Stop
                          10773 ;demo.c:1575: PLY_SendRegisters();
   39C2 CDr00s00          10774 	call	_PLY_SendRegisters
                          10775 ;demo.c:1577: initcredits = 1;
   39C5 21r36s42          10776 	ld	hl,#_initcredits + 0
   39C8 36 01             10777 	ld	(hl), #0x01
   39CA 21r37s42          10778 	ld	hl,#_initcredits + 1
   39CD 36 00             10779 	ld	(hl), #0x00
                          10780 ;demo.c:1579: bitbuster(crebuffer2,0x0000,VRAM_0);
   39CF 3E 01             10781 	ld	a,#0x01
   39D1 F5                10782 	push	af
   39D2 33                10783 	inc	sp
   39D3 21 00 00          10784 	ld	hl,#0x0000
   39D6 E5                10785 	push	hl
   39D7 21rC7s1E          10786 	ld	hl,#_crebuffer2
   39DA E5                10787 	push	hl
   39DB CDr00s00          10788 	call	_bitbuster
   39DE F1                10789 	pop	af
   39DF F1                10790 	pop	af
   39E0 33                10791 	inc	sp
                          10792 ;demo.c:1581: cmd.size_x = 512;
   39E1 21r32s41          10793 	ld	hl, #_cmd + 8
   39E4 36 00             10794 	ld	(hl),#0x00
   39E6 23                10795 	inc	hl
   39E7 36 02             10796 	ld	(hl),#0x02
                          10797 ;demo.c:1582: cmd.size_y = 212;
   39E9 21r34s41          10798 	ld	hl, #_cmd + 10
   39EC 36 D4             10799 	ld	(hl),#0xD4
   39EE 23                10800 	inc	hl
   39EF 36 00             10801 	ld	(hl),#0x00
                          10802 ;demo.c:1583: cmd.data = 0;
                          10803 ;demo.c:1584: cmd.argument = 0x00;
   39F1 3E 00             10804 	ld	a,#0x00
   39F3 32r36s41          10805 	ld	(#_cmd + 12),a
   39F6 32r37s41          10806 	ld	(#_cmd + 13),a
                          10807 ;demo.c:1585: cmd.command = 0xd0; 
   39F9 01r38s41          10808 	ld	bc,#_cmd + 14
   39FC 3E D0             10809 	ld	a,#0xD0
   39FE 02                10810 	ld	(bc),a
                          10811 ;demo.c:1586: cmd.source_x = 0;
   39FF 21r2As41          10812 	ld	hl,#_cmd
   3A02 36 00             10813 	ld	(hl),#0x00
   3A04 23                10814 	inc	hl
   3A05 36 00             10815 	ld	(hl),#0x00
                          10816 ;demo.c:1587: cmd.source_y = 0;
   3A07 21r2Cs41          10817 	ld	hl, #_cmd + 2
   3A0A 36 00             10818 	ld	(hl),#0x00
   3A0C 23                10819 	inc	hl
   3A0D 36 00             10820 	ld	(hl),#0x00
                          10821 ;demo.c:1588: cmd.dest_x = 0;
   3A0F 21r2Es41          10822 	ld	hl, #_cmd + 4
   3A12 36 00             10823 	ld	(hl),#0x00
   3A14 23                10824 	inc	hl
   3A15 36 00             10825 	ld	(hl),#0x00
                          10826 ;demo.c:1589: cmd.dest_y = 256;
   3A17 21r30s41          10827 	ld	hl, #_cmd + 6
   3A1A 36 00             10828 	ld	(hl),#0x00
   3A1C 23                10829 	inc	hl
   3A1D 36 01             10830 	ld	(hl),#0x01
                          10831 ;demo.c:1590: vdp_copier(&cmd);
   3A1F 21r2As41          10832 	ld	hl,#_cmd
   3A22 E5                10833 	push	hl
   3A23 CDr00s00          10834 	call	_vdp_copier
   3A26 F1                10835 	pop	af
                          10836 ;demo.c:1592: bitbuster(crebuffer3,0x0000,VRAM_0);
   3A27 3E 01             10837 	ld	a,#0x01
   3A29 F5                10838 	push	af
   3A2A 33                10839 	inc	sp
   3A2B 21 00 00          10840 	ld	hl,#0x0000
   3A2E E5                10841 	push	hl
   3A2F 21r3Bs31          10842 	ld	hl,#_crebuffer3
   3A32 E5                10843 	push	hl
   3A33 CDr00s00          10844 	call	_bitbuster
   3A36 F1                10845 	pop	af
   3A37 F1                10846 	pop	af
   3A38 33                10847 	inc	sp
                          10848 ;demo.c:1594: cmd.size_x = 512;
   3A39 21r32s41          10849 	ld	hl, #_cmd + 8
   3A3C 36 00             10850 	ld	(hl),#0x00
   3A3E 23                10851 	inc	hl
   3A3F 36 02             10852 	ld	(hl),#0x02
                          10853 ;demo.c:1595: cmd.size_y = 212;
   3A41 21r34s41          10854 	ld	hl, #_cmd + 10
   3A44 36 D4             10855 	ld	(hl),#0xD4
   3A46 23                10856 	inc	hl
   3A47 36 00             10857 	ld	(hl),#0x00
                          10858 ;demo.c:1596: cmd.data = 0;
                          10859 ;demo.c:1597: cmd.argument = 0x00;
   3A49 3E 00             10860 	ld	a,#0x00
   3A4B 32r36s41          10861 	ld	(#_cmd + 12),a
   3A4E 32r37s41          10862 	ld	(#_cmd + 13),a
                          10863 ;demo.c:1598: cmd.command = 0xd0; 
   3A51 01r38s41          10864 	ld	bc,#_cmd + 14
   3A54 3E D0             10865 	ld	a,#0xD0
   3A56 02                10866 	ld	(bc),a
                          10867 ;demo.c:1599: cmd.source_x = 0;
   3A57 21r2As41          10868 	ld	hl,#_cmd
   3A5A 36 00             10869 	ld	(hl),#0x00
   3A5C 23                10870 	inc	hl
   3A5D 36 00             10871 	ld	(hl),#0x00
                          10872 ;demo.c:1600: cmd.source_y = 0;
   3A5F 21r2Cs41          10873 	ld	hl, #_cmd + 2
   3A62 36 00             10874 	ld	(hl),#0x00
   3A64 23                10875 	inc	hl
   3A65 36 00             10876 	ld	(hl),#0x00
                          10877 ;demo.c:1601: cmd.dest_x = 0;
   3A67 21r2Es41          10878 	ld	hl, #_cmd + 4
   3A6A 36 00             10879 	ld	(hl),#0x00
   3A6C 23                10880 	inc	hl
   3A6D 36 00             10881 	ld	(hl),#0x00
                          10882 ;demo.c:1602: cmd.dest_y = 512;
   3A6F 21r30s41          10883 	ld	hl, #_cmd + 6
   3A72 36 00             10884 	ld	(hl),#0x00
   3A74 23                10885 	inc	hl
   3A75 36 02             10886 	ld	(hl),#0x02
                          10887 ;demo.c:1603: vdp_copier(&cmd);
   3A77 21r2As41          10888 	ld	hl,#_cmd
   3A7A E5                10889 	push	hl
   3A7B CDr00s00          10890 	call	_vdp_copier
   3A7E F1                10891 	pop	af
                          10892 ;demo.c:1605: bitbuster(crebuffer1,0x0000,VRAM_0);
   3A7F 3E 01             10893 	ld	a,#0x01
   3A81 F5                10894 	push	af
   3A82 33                10895 	inc	sp
   3A83 21 00 00          10896 	ld	hl,#0x0000
   3A86 E5                10897 	push	hl
   3A87 21rCCs11          10898 	ld	hl,#_crebuffer1
   3A8A E5                10899 	push	hl
   3A8B CDr00s00          10900 	call	_bitbuster
   3A8E F1                10901 	pop	af
   3A8F F1                10902 	pop	af
   3A90 33                10903 	inc	sp
                          10904 ;demo.c:1607: install_isr(my_isr);
   3A91 21rECs07          10905 	ld	hl,#_my_isr
   3A94 E5                10906 	push	hl
   3A95 CDr00s00          10907 	call	_install_isr
   3A98 F1                10908 	pop	af
                          10909 ;demo.c:1609: memcpy(cur_palette, credits_palette, 32);
   3A99 21 20 00          10910 	ld	hl,#0x0020
   3A9C E5                10911 	push	hl
   3A9D 21r06s41          10912 	ld	hl,#_credits_palette
   3AA0 E5                10913 	push	hl
   3AA1 21r46s40          10914 	ld	hl,#_cur_palette
   3AA4 E5                10915 	push	hl
   3AA5 CDr00s00          10916 	call	_memcpy
   3AA8 F1                10917 	pop	af
   3AA9 F1                10918 	pop	af
   3AAA F1                10919 	pop	af
                          10920 ;demo.c:1611: scratch_clear();
   3AAB CDr24s08          10921 	call	_scratch_clear
                          10922 ;demo.c:1612: pointframe = 0;
   3AAE 21r30s42          10923 	ld	hl,#_pointframe + 0
   3AB1 36 00             10924 	ld	(hl), #0x00
   3AB3 21r31s42          10925 	ld	hl,#_pointframe + 1
   3AB6 36 00             10926 	ld	(hl), #0x00
                          10927 ;demo.c:1613: curpage = 0;
   3AB8 21r3Cs42          10928 	ld	hl,#_curpage + 0
   3ABB 36 00             10929 	ld	(hl), #0x00
   3ABD 21r3Ds42          10930 	ld	hl,#_curpage + 1
   3AC0 36 00             10931 	ld	(hl), #0x00
                          10932 ;demo.c:1614: myoffs = 180;
   3AC2 21r3Es42          10933 	ld	hl,#_myoffs + 0
   3AC5 36 B4             10934 	ld	(hl), #0xB4
   3AC7 21r3Fs42          10935 	ld	hl,#_myoffs + 1
   3ACA 36 00             10936 	ld	(hl), #0x00
   3ACC                   10937 00102$:
                          10938 ;demo.c:1617: if (credittimer < 400) fadein();
   3ACC 3Ar38s42          10939 	ld	a,(#_credittimer+0)
   3ACF D6 90             10940 	sub	a,#0x90
   3AD1 3Ar39s42          10941 	ld	a,(#_credittimer+1)
   3AD4 DE 01             10942 	sbc	a,#0x01
   3AD6 F2rDCs3A          10943 	jp	P,00104$
   3AD9 CDrBBs0A          10944 	call	_fadein
   3ADC                   10945 00104$:
                          10946 ;demo.c:1619: if(credittimer >= 500 && curpage == 0) { vdp_register(2, 0x3f); curpage = 256; myoffs = 100; }
   3ADC 3Ar38s42          10947 	ld	a,(#_credittimer+0)
   3ADF D6 F4             10948 	sub	a,#0xF4
   3AE1 3Ar39s42          10949 	ld	a,(#_credittimer+1)
   3AE4 DE 01             10950 	sbc	a,#0x01
   3AE6 FAr0Es3B          10951 	jp	M,00106$
   3AE9 3Ar3Cs42          10952 	ld	a,(#_curpage+0)
   3AEC 21r3Ds42          10953 	ld	hl,#_curpage + 1
   3AEF B6                10954 	or	a,(hl)
   3AF0 20 1C             10955 	jr	NZ,00106$
   3AF2 21 02 3F          10956 	ld	hl,#0x3F02
   3AF5 E5                10957 	push	hl
   3AF6 CDr00s00          10958 	call	_vdp_register
   3AF9 F1                10959 	pop	af
   3AFA 21r3Cs42          10960 	ld	hl,#_curpage + 0
   3AFD 36 00             10961 	ld	(hl), #0x00
   3AFF 21r3Ds42          10962 	ld	hl,#_curpage + 1
   3B02 36 01             10963 	ld	(hl), #0x01
   3B04 21r3Es42          10964 	ld	hl,#_myoffs + 0
   3B07 36 64             10965 	ld	(hl), #0x64
   3B09 21r3Fs42          10966 	ld	hl,#_myoffs + 1
   3B0C 36 00             10967 	ld	(hl), #0x00
   3B0E                   10968 00106$:
                          10969 ;demo.c:1620: if(credittimer >= 1000 && curpage == 256) { vdp_register(2, 0x5f); curpage = 512; myoffs = 200; }
   3B0E 3Ar38s42          10970 	ld	a,(#_credittimer+0)
   3B11 D6 E8             10971 	sub	a,#0xE8
   3B13 3Ar39s42          10972 	ld	a,(#_credittimer+1)
   3B16 DE 03             10973 	sbc	a,#0x03
   3B18 FAr46s3B          10974 	jp	M,00109$
   3B1B 3Ar3Cs42          10975 	ld	a,(#_curpage+0)
   3B1E B7                10976 	or	a,a
   3B1F 20 07             10977 	jr	NZ,00138$
   3B21 3Ar3Ds42          10978 	ld	a,(#_curpage+1)
   3B24 D6 01             10979 	sub	a,#0x01
   3B26 28 02             10980 	jr	Z,00139$
   3B28                   10981 00138$:
   3B28 18 1C             10982 	jr	00109$
   3B2A                   10983 00139$:
   3B2A 21 02 5F          10984 	ld	hl,#0x5F02
   3B2D E5                10985 	push	hl
   3B2E CDr00s00          10986 	call	_vdp_register
   3B31 F1                10987 	pop	af
   3B32 21r3Cs42          10988 	ld	hl,#_curpage + 0
   3B35 36 00             10989 	ld	(hl), #0x00
   3B37 21r3Ds42          10990 	ld	hl,#_curpage + 1
   3B3A 36 02             10991 	ld	(hl), #0x02
   3B3C 21r3Es42          10992 	ld	hl,#_myoffs + 0
   3B3F 36 C8             10993 	ld	(hl), #0xC8
   3B41 21r3Fs42          10994 	ld	hl,#_myoffs + 1
   3B44 36 00             10995 	ld	(hl), #0x00
   3B46                   10996 00109$:
                          10997 ;demo.c:1622: credittimer+=3;
   3B46 21r38s42          10998 	ld	hl,#_credittimer
   3B49 7E                10999 	ld	a,(hl)
   3B4A C6 03             11000 	add	a,#0x03
   3B4C 23                11001 	inc	hl
   3B4D 2B                11002 	dec	hl
   3B4E C5                11003 	push	bc
   3B4F 4F                11004 	ld	c, a
   3B50 23                11005 	inc	hl
   3B51 7E                11006 	ld	a, (hl)
   3B52 47                11007 	ld	b, a
   3B53 79                11008 	ld	a, c
   3B54 2B                11009 	dec	hl
   3B55 77                11010 	ld	(hl), a
   3B56 78                11011 	ld	a, b
   3B57 C1                11012 	pop	bc
   3B58 CE 00             11013 	adc	a,#0x00
   3B5A 23                11014 	inc	hl
   3B5B 77                11015 	ld	(hl),a
                          11016 ;demo.c:1623: if (credittimer == 1500) {
   3B5C 3Ar38s42          11017 	ld	a,(#_credittimer+0)
   3B5F D6 DC             11018 	sub	a,#0xDC
   3B61 20 07             11019 	jr	NZ,00140$
   3B63 3Ar39s42          11020 	ld	a,(#_credittimer+1)
   3B66 D6 05             11021 	sub	a,#0x05
   3B68 28 02             11022 	jr	Z,00141$
   3B6A                   11023 00140$:
   3B6A 18 08             11024 	jr	00112$
   3B6C                   11025 00141$:
                          11026 ;demo.c:1624: vdp_load_palette(scratch);
   3B6C 21rC6s3F          11027 	ld	hl,#_scratch
   3B6F E5                11028 	push	hl
   3B70 CDr00s00          11029 	call	_vdp_load_palette
   3B73 F1                11030 	pop	af
   3B74                   11031 00112$:
                          11032 ;demo.c:1627: if ((credittimer > 200 && credittimer < 500) || (credittimer > 700 && credittimer < 1000) || (credittimer > 1200)) {
   3B74 3E C8             11033 	ld	a,#0xC8
   3B76 FD 21r38s42       11034 	ld	iy,#_credittimer
   3B7A FD 96 00          11035 	sub	a,0 (iy)
   3B7D 3E 00             11036 	ld	a,#0x00
   3B7F FD 21r38s42       11037 	ld	iy,#_credittimer
   3B83 FD 9E 01          11038 	sbc	a,1 (iy)
   3B86 F2r96s3B          11039 	jp	P,00118$
   3B89 3Ar38s42          11040 	ld	a,(#_credittimer+0)
   3B8C D6 F4             11041 	sub	a,#0xF4
   3B8E 3Ar39s42          11042 	ld	a,(#_credittimer+1)
   3B91 DE 01             11043 	sbc	a,#0x01
   3B93 FArCDs3B          11044 	jp	M,00113$
   3B96                   11045 00118$:
   3B96 3E BC             11046 	ld	a,#0xBC
   3B98 FD 21r38s42       11047 	ld	iy,#_credittimer
   3B9C FD 96 00          11048 	sub	a,0 (iy)
   3B9F 3E 02             11049 	ld	a,#0x02
   3BA1 FD 21r38s42       11050 	ld	iy,#_credittimer
   3BA5 FD 9E 01          11051 	sbc	a,1 (iy)
   3BA8 F2rB8s3B          11052 	jp	P,00119$
   3BAB 3Ar38s42          11053 	ld	a,(#_credittimer+0)
   3BAE D6 E8             11054 	sub	a,#0xE8
   3BB0 3Ar39s42          11055 	ld	a,(#_credittimer+1)
   3BB3 DE 03             11056 	sbc	a,#0x03
   3BB5 FArCDs3B          11057 	jp	M,00113$
   3BB8                   11058 00119$:
   3BB8 3E B0             11059 	ld	a,#0xB0
   3BBA FD 21r38s42       11060 	ld	iy,#_credittimer
   3BBE FD 96 00          11061 	sub	a,0 (iy)
   3BC1 3E 04             11062 	ld	a,#0x04
   3BC3 FD 21r38s42       11063 	ld	iy,#_credittimer
   3BC7 FD 9E 01          11064 	sbc	a,1 (iy)
   3BCA F2rCCs3C          11065 	jp	P,00114$
   3BCD                   11066 00113$:
                          11067 ;demo.c:1628: msx2_palette(0,PLY_PSGReg10,PLY_PSGReg10,PLY_PSGReg10);
   3BCD 21r00s00          11068 	ld	hl,#_PLY_PSGReg10 + 0
   3BD0 4E                11069 	ld	c,(hl)
   3BD1 21r00s00          11070 	ld	hl,#_PLY_PSGReg10 + 0
   3BD4 46                11071 	ld	b,(hl)
   3BD5 21r00s00          11072 	ld	hl,#_PLY_PSGReg10 + 0
   3BD8 5E                11073 	ld	e,(hl)
   3BD9 79                11074 	ld	a,c
   3BDA F5                11075 	push	af
   3BDB 33                11076 	inc	sp
   3BDC C5                11077 	push	bc
   3BDD 33                11078 	inc	sp
   3BDE 53                11079 	ld	d,e
   3BDF 1E 00             11080 	ld	e,#0x00
   3BE1 D5                11081 	push	de
   3BE2 CDr00s00          11082 	call	_msx2_palette
   3BE5 F1                11083 	pop	af
   3BE6 F1                11084 	pop	af
                          11085 ;demo.c:1630: cmd.size_x = 256;
   3BE7 21r32s41          11086 	ld	hl, #_cmd + 8
   3BEA 36 00             11087 	ld	(hl),#0x00
   3BEC 23                11088 	inc	hl
   3BED 36 01             11089 	ld	(hl),#0x01
                          11090 ;demo.c:1631: cmd.size_y = 1;
   3BEF 21r34s41          11091 	ld	hl, #_cmd + 10
   3BF2 36 01             11092 	ld	(hl),#0x01
   3BF4 23                11093 	inc	hl
   3BF5 36 00             11094 	ld	(hl),#0x00
                          11095 ;demo.c:1632: cmd.data = 0;
   3BF7 01r36s41          11096 	ld	bc,#_cmd + 12
   3BFA 3E 00             11097 	ld	a,#0x00
   3BFC 02                11098 	ld	(bc),a
                          11099 ;demo.c:1633: cmd.argument = 0x00; // from 70xY to left
   3BFD 21r37s41          11100 	ld	hl,#_cmd + 13
   3C00 DD 75 FC          11101 	ld	-4 (ix),l
   3C03 DD 74 FD          11102 	ld	-3 (ix),h
   3C06 36 00             11103 	ld	(hl),#0x00
                          11104 ;demo.c:1634: cmd.command = 0xd0; // vram to vram, y only
   3C08 21r38s41          11105 	ld	hl,#_cmd + 14
   3C0B DD 75 FA          11106 	ld	-6 (ix),l
   3C0E DD 74 FB          11107 	ld	-5 (ix),h
   3C11 36 D0             11108 	ld	(hl),#0xD0
                          11109 ;demo.c:1635: cmd.source_x = 0;
   3C13 21r2As41          11110 	ld	hl,#_cmd
   3C16 36 00             11111 	ld	(hl),#0x00
   3C18 23                11112 	inc	hl
   3C19 36 00             11113 	ld	(hl),#0x00
                          11114 ;demo.c:1636: cmd.dest_x = 0;
   3C1B 11r2Es41          11115 	ld	de,#_cmd + 4
   3C1E EB                11116 	ex	de,hl
   3C1F 36 00             11117 	ld	(hl),#0x00
   3C21 23                11118 	inc	hl
   3C22 36 00             11119 	ld	(hl),#0x00
                          11120 ;demo.c:1637: cmd.argument = 0x0;
   3C24 DD 6E FC          11121 	ld	l,-4 (ix)
   3C27 DD 66 FD          11122 	ld	h,-3 (ix)
   3C2A 36 00             11123 	ld	(hl),#0x00
                          11124 ;demo.c:1639: cmd.data = 1+((pointframe>>2) & 0xe);
   3C2C 21r30s42          11125 	ld	hl,#_pointframe + 0
   3C2F 5E                11126 	ld	e,(hl)
   3C30 21r31s42          11127 	ld	hl,#_pointframe + 1
   3C33 56                11128 	ld	d,(hl)
   3C34 CB 2A             11129 	sra	d
   3C36 CB 1B             11130 	rr	e
   3C38 CB 2A             11131 	sra	d
   3C3A CB 1B             11132 	rr	e
   3C3C 7B                11133 	ld	a,e
   3C3D E6 0E             11134 	and	a,#0x0E
   3C3F 3C                11135 	inc	a
   3C40 02                11136 	ld	(bc),a
                          11137 ;demo.c:1640: cmd.command = 0x53;
   3C41 DD 6E FA          11138 	ld	l,-6 (ix)
   3C44 DD 66 FB          11139 	ld	h,-5 (ix)
   3C47 36 53             11140 	ld	(hl),#0x53
                          11141 ;demo.c:1641: for (x = 0; x < 212; x+=1) {
   3C49 DD 36 FE 00       11142 	ld	-2 (ix),#0x00
   3C4D DD 36 FF 00       11143 	ld	-1 (ix),#0x00
   3C51                   11144 00120$:
   3C51 DD 7E FE          11145 	ld	a,-2 (ix)
   3C54 D6 D4             11146 	sub	a,#0xD4
   3C56 DD 7E FF          11147 	ld	a,-1 (ix)
   3C59 DE 00             11148 	sbc	a,#0x00
   3C5B F2rB4s3C          11149 	jp	P,00123$
                          11150 ;demo.c:1642: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   3C5E 21r30s42          11151 	ld	hl,#_pointframe
   3C61 DD 7E FE          11152 	ld	a,-2 (ix)
   3C64 86                11153 	add	a,(hl)
   3C65 5F                11154 	ld	e,a
   3C66 DD 7E FF          11155 	ld	a,-1 (ix)
   3C69 23                11156 	inc	hl
   3C6A 8E                11157 	adc	a,(hl)
   3C6B 16 00             11158 	ld	d,#0x00
   3C6D 21r2Cs00          11159 	ld	hl,#_sintabx
   3C70 19                11160 	add	hl,de
   3C71 7E                11161 	ld	a,(hl)
   3C72 CB 3F             11162 	srl	a
   3C74 C6 40             11163 	add	a,#0x40
   3C76 4F                11164 	ld	c,a
                          11165 ;demo.c:1643: cmd.dest_x = myoffs+y;
   3C77 11r2Es41          11166 	ld	de,#_cmd + 4
   3C7A 06 00             11167 	ld	b,#0x00
   3C7C 3Ar3Es42          11168 	ld	a,(#_myoffs+0)
   3C7F 81                11169 	add	a,c
   3C80 4F                11170 	ld	c,a
   3C81 3Ar3Fs42          11171 	ld	a,(#_myoffs+1)
   3C84 88                11172 	adc	a,b
   3C85 47                11173 	ld	b,a
   3C86 6B                11174 	ld	l,e
   3C87 62                11175 	ld	h,d
   3C88 71                11176 	ld	(hl),c
   3C89 23                11177 	inc	hl
   3C8A 70                11178 	ld	(hl),b
                          11179 ;demo.c:1644: cmd.dest_y = curpage+x;
   3C8B 01r30s41          11180 	ld	bc,#_cmd + 6
   3C8E 3Ar3Cs42          11181 	ld	a,(#_curpage+0)
   3C91 DD 86 FE          11182 	add	a,-2 (ix)
   3C94 5F                11183 	ld	e,a
   3C95 3Ar3Ds42          11184 	ld	a,(#_curpage+1)
   3C98 DD 8E FF          11185 	adc	a,-1 (ix)
   3C9B 57                11186 	ld	d,a
   3C9C 69                11187 	ld	l,c
   3C9D 60                11188 	ld	h,b
   3C9E 73                11189 	ld	(hl),e
   3C9F 23                11190 	inc	hl
   3CA0 72                11191 	ld	(hl),d
                          11192 ;demo.c:1645: vdp_copier(&cmd);
   3CA1 21r2As41          11193 	ld	hl,#_cmd
   3CA4 E5                11194 	push	hl
   3CA5 CDr00s00          11195 	call	_vdp_copier
   3CA8 F1                11196 	pop	af
                          11197 ;demo.c:1641: for (x = 0; x < 212; x+=1) {
   3CA9 DD 34 FE          11198 	inc	-2 (ix)
   3CAC 20 03             11199 	jr	NZ,00143$
   3CAE DD 34 FF          11200 	inc	-1 (ix)
   3CB1                   11201 00143$:
   3CB1 C3r51s3C          11202 	jp	00120$
   3CB4                   11203 00123$:
                          11204 ;demo.c:1647: pointframe+=2;
   3CB4 21r30s42          11205 	ld	hl,#_pointframe
   3CB7 7E                11206 	ld	a,(hl)
   3CB8 C6 02             11207 	add	a,#0x02
   3CBA 23                11208 	inc	hl
   3CBB 2B                11209 	dec	hl
   3CBC C5                11210 	push	bc
   3CBD 4F                11211 	ld	c, a
   3CBE 23                11212 	inc	hl
   3CBF 7E                11213 	ld	a, (hl)
   3CC0 47                11214 	ld	b, a
   3CC1 79                11215 	ld	a, c
   3CC2 2B                11216 	dec	hl
   3CC3 77                11217 	ld	(hl), a
   3CC4 78                11218 	ld	a, b
   3CC5 C1                11219 	pop	bc
   3CC6 CE 00             11220 	adc	a,#0x00
   3CC8 23                11221 	inc	hl
   3CC9 77                11222 	ld	(hl),a
   3CCA 18 0C             11223 	jr	00124$
   3CCC                   11224 00114$:
                          11225 ;demo.c:1650: msx2_palette(0,0,0,0);
   3CCC 21 00 00          11226 	ld	hl,#0x0000
   3CCF E5                11227 	push	hl
   3CD0 2E 00             11228 	ld	l, #0x00
   3CD2 E5                11229 	push	hl
   3CD3 CDr00s00          11230 	call	_msx2_palette
   3CD6 F1                11231 	pop	af
   3CD7 F1                11232 	pop	af
   3CD8                   11233 00124$:
   3CD8 DD F9             11234 	ld	sp,ix
   3CDA DD E1             11235 	pop	ix
   3CDC C9                11236 	ret
   3CDD                   11237 _credits_end::
                          11238 ;demo.c:1659: void do_quit() {
                          11239 ;	---------------------------------
                          11240 ; Function do_quit
                          11241 ; ---------------------------------
   3CDD                   11242 _do_quit_start::
   3CDD                   11243 _do_quit:
                          11244 ;demo.c:1660: waitVB();
   3CDD 76                11245 		halt 
                          11246 ;demo.c:1661: uninstall_isr();
   3CDE CDr00s00          11247 	call	_uninstall_isr
                          11248 ;demo.c:1662: PLY_Stop();
   3CE1 CDr00s00          11249 	call	_PLY_Stop
                          11250 ;demo.c:1663: PLY_SendRegisters();
   3CE4 CDr00s00          11251 	call	_PLY_SendRegisters
                          11252 ;demo.c:1665: screen(0);
   3CE7 3E 00             11253 	ld	a,#0x00
   3CE9 F5                11254 	push	af
   3CEA 33                11255 	inc	sp
   3CEB CDr00s00          11256 	call	_screen
   3CEE 33                11257 	inc	sp
                          11258 ;demo.c:1666: vdp_load_palette(twister_palette);
   3CEF 21rA6s40          11259 	ld	hl,#_twister_palette
   3CF2 E5                11260 	push	hl
   3CF3 CDr00s00          11261 	call	_vdp_load_palette
   3CF6 F1                11262 	pop	af
                          11263 ;demo.c:1668: puts("bye friends.\r\n\r\n");
   3CF7 21r08s3D          11264 	ld	hl,#__str_26
   3CFA E5                11265 	push	hl
   3CFB CDr00s00          11266 	call	_puts
   3CFE F1                11267 	pop	af
                          11268 ;demo.c:1670: exit(0);	
   3CFF 3E 00             11269 	ld	a,#0x00
   3D01 F5                11270 	push	af
   3D02 33                11271 	inc	sp
   3D03 CDr00s00          11272 	call	_exit
   3D06 33                11273 	inc	sp
   3D07 C9                11274 	ret
   3D08                   11275 _do_quit_end::
   3D08                   11276 __str_26:
   3D08 62 79 65 20 66 72 11277 	.ascii "bye friends."
        69 65 6E 64 73 2E
   3D14 0D                11278 	.db 0x0D
   3D15 0A                11279 	.db 0x0A
   3D16 0D                11280 	.db 0x0D
   3D17 0A                11281 	.db 0x0A
   3D18 00                11282 	.db 0x00
                          11283 ;demo.c:1676: void main() {
                          11284 ;	---------------------------------
                          11285 ; Function main
                          11286 ; ---------------------------------
   3D19                   11287 _main_start::
   3D19                   11288 _main:
   3D19 DD E5             11289 	push	ix
   3D1B DD 21 00 00       11290 	ld	ix,#0
   3D1F DD 39             11291 	add	ix,sp
   3D21 21 F9 FF          11292 	ld	hl,#-7
   3D24 39                11293 	add	hl,sp
   3D25 F9                11294 	ld	sp,hl
                          11295 ;demo.c:1677: unsigned char quit=0;
   3D26 DD 36 FF 00       11296 	ld	-1 (ix),#0x00
                          11297 ;demo.c:1683: spindown();
   3D2A CDr00s00          11298 	call	_spindown
                          11299 ;demo.c:1685: puts("[starting DSS MSX demosystem]\r\n\r\n");
   3D2D 21r29s43          11300 	ld	hl,#__str_27
   3D30 E5                11301 	push	hl
   3D31 CDr00s00          11302 	call	_puts
   3D34 F1                11303 	pop	af
                          11304 ;demo.c:1687: for (y = 0; y < 2; y++) {
   3D35 DD 36 FB 00       11305 	ld	-5 (ix),#0x00
   3D39 DD 36 FC 00       11306 	ld	-4 (ix),#0x00
   3D3D                   11307 00118$:
   3D3D DD 7E FB          11308 	ld	a,-5 (ix)
   3D40 D6 02             11309 	sub	a,#0x02
   3D42 DD 7E FC          11310 	ld	a,-4 (ix)
   3D45 DE 00             11311 	sbc	a,#0x00
   3D47 F2rC9s3D          11312 	jp	P,00121$
                          11313 ;demo.c:1688: for (x = 0; x < 16; x++) {
   3D4A DD 4E FB          11314 	ld	c,-5 (ix)
   3D4D DD 46 FC          11315 	ld	b,-4 (ix)
   3D50 CB 21             11316 	sla	c
   3D52 CB 10             11317 	rl	b
   3D54 CB 21             11318 	sla	c
   3D56 CB 10             11319 	rl	b
   3D58 CB 21             11320 	sla	c
   3D5A CB 10             11321 	rl	b
   3D5C CB 21             11322 	sla	c
   3D5E CB 10             11323 	rl	b
   3D60 21 81 03          11324 	ld	hl,#0x0381
   3D63 09                11325 	add	hl,bc
   3D64 DD 75 F9          11326 	ld	-7 (ix),l
   3D67 DD 74 FA          11327 	ld	-6 (ix),h
   3D6A DD 36 FD 00       11328 	ld	-3 (ix),#0x00
   3D6E DD 36 FE 00       11329 	ld	-2 (ix),#0x00
   3D72                   11330 00114$:
   3D72 DD 7E FD          11331 	ld	a,-3 (ix)
   3D75 D6 10             11332 	sub	a,#0x10
   3D77 DD 7E FE          11333 	ld	a,-2 (ix)
   3D7A DE 00             11334 	sbc	a,#0x00
   3D7C F2rBEs3D          11335 	jp	P,00120$
                          11336 ;demo.c:1689: tri_lookup_x[(y*16)+x] = x * 16;
   3D7F DD 7E FB          11337 	ld	a,-5 (ix)
   3D82 07                11338 	rlca
   3D83 07                11339 	rlca
   3D84 07                11340 	rlca
   3D85 07                11341 	rlca
   3D86 E6 F0             11342 	and	a,#0xF0
   3D88 5F                11343 	ld	e,a
   3D89 DD 56 FD          11344 	ld	d,-3 (ix)
   3D8C 7B                11345 	ld	a,e
   3D8D 82                11346 	add	a,d
   3D8E 5F                11347 	ld	e, a
   3D8F C6r00             11348 	add	a,#<_tri_lookup_x
   3D91 4F                11349 	ld	c,a
   3D92 3Es01             11350 	ld	a,#>_tri_lookup_x
   3D94 CE 00             11351 	adc	a,#0x00
   3D96 47                11352 	ld	b,a
   3D97 7A                11353 	ld	a,d
   3D98 07                11354 	rlca
   3D99 07                11355 	rlca
   3D9A 07                11356 	rlca
   3D9B 07                11357 	rlca
   3D9C E6 F0             11358 	and	a,#0xF0
   3D9E 02                11359 	ld	(bc),a
                          11360 ;demo.c:1690: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   3D9F CB 23             11361 	sla	e
   3DA1 3Er88             11362 	ld	a,#<_tri_lookup_y
   3DA3 83                11363 	add	a,e
   3DA4 6F                11364 	ld	l,a
   3DA5 3Es01             11365 	ld	a,#>_tri_lookup_y
   3DA7 CE 00             11366 	adc	a,#0x00
   3DA9 67                11367 	ld	h,a
   3DAA DD 7E F9          11368 	ld	a,-7 (ix)
   3DAD 77                11369 	ld	(hl),a
   3DAE 23                11370 	inc	hl
   3DAF DD 7E FA          11371 	ld	a,-6 (ix)
   3DB2 77                11372 	ld	(hl),a
                          11373 ;demo.c:1688: for (x = 0; x < 16; x++) {
   3DB3 DD 34 FD          11374 	inc	-3 (ix)
   3DB6 20 03             11375 	jr	NZ,00146$
   3DB8 DD 34 FE          11376 	inc	-2 (ix)
   3DBB                   11377 00146$:
   3DBB C3r72s3D          11378 	jp	00114$
   3DBE                   11379 00120$:
                          11380 ;demo.c:1687: for (y = 0; y < 2; y++) {
   3DBE DD 34 FB          11381 	inc	-5 (ix)
   3DC1 20 03             11382 	jr	NZ,00147$
   3DC3 DD 34 FC          11383 	inc	-4 (ix)
   3DC6                   11384 00147$:
   3DC6 C3r3Ds3D          11385 	jp	00118$
   3DC9                   11386 00121$:
                          11387 ;demo.c:1694: for (x = 0; x < 26; x++) {
   3DC9 DD 36 FD 00       11388 	ld	-3 (ix),#0x00
   3DCD DD 36 FE 00       11389 	ld	-2 (ix),#0x00
   3DD1 DD 36 F9 00       11390 	ld	-7 (ix),#0x00
   3DD5 DD 36 FA 00       11391 	ld	-6 (ix),#0x00
   3DD9                   11392 00122$:
   3DD9 DD 7E FD          11393 	ld	a,-3 (ix)
   3DDC D6 1A             11394 	sub	a,#0x1A
   3DDE DD 7E FE          11395 	ld	a,-2 (ix)
   3DE1 DE 00             11396 	sbc	a,#0x00
   3DE3 F2r35s3E          11397 	jp	P,00125$
                          11398 ;demo.c:1695: twelvetimes[x] = x * 12;
   3DE6 DD 4E FD          11399 	ld	c,-3 (ix)
   3DE9 DD 46 FE          11400 	ld	b,-2 (ix)
   3DEC CB 21             11401 	sla	c
   3DEE CB 10             11402 	rl	b
   3DF0 21r20s01          11403 	ld	hl,#_twelvetimes
   3DF3 09                11404 	add	hl,bc
   3DF4 DD 7E F9          11405 	ld	a,-7 (ix)
   3DF7 77                11406 	ld	(hl),a
   3DF8 23                11407 	inc	hl
   3DF9 DD 7E FA          11408 	ld	a,-6 (ix)
   3DFC 77                11409 	ld	(hl),a
                          11410 ;demo.c:1696: eighttimes[x] = x * 8;
   3DFD 21r54s01          11411 	ld	hl,#_eighttimes
   3E00 09                11412 	add	hl,bc
   3E01 4D                11413 	ld	c,l
   3E02 44                11414 	ld	b,h
   3E03 DD 5E FD          11415 	ld	e,-3 (ix)
   3E06 DD 56 FE          11416 	ld	d,-2 (ix)
   3E09 CB 23             11417 	sla	e
   3E0B CB 12             11418 	rl	d
   3E0D CB 23             11419 	sla	e
   3E0F CB 12             11420 	rl	d
   3E11 CB 23             11421 	sla	e
   3E13 CB 12             11422 	rl	d
   3E15 69                11423 	ld	l,c
   3E16 60                11424 	ld	h,b
   3E17 73                11425 	ld	(hl),e
   3E18 23                11426 	inc	hl
   3E19 72                11427 	ld	(hl),d
                          11428 ;demo.c:1694: for (x = 0; x < 26; x++) {
   3E1A DD 7E F9          11429 	ld	a,-7 (ix)
   3E1D C6 0C             11430 	add	a,#0x0C
   3E1F DD 77 F9          11431 	ld	-7 (ix),a
   3E22 DD 7E FA          11432 	ld	a,-6 (ix)
   3E25 CE 00             11433 	adc	a,#0x00
   3E27 DD 77 FA          11434 	ld	-6 (ix),a
   3E2A DD 34 FD          11435 	inc	-3 (ix)
   3E2D 20 03             11436 	jr	NZ,00152$
   3E2F DD 34 FE          11437 	inc	-2 (ix)
   3E32                   11438 00152$:
   3E32 C3rD9s3D          11439 	jp	00122$
   3E35                   11440 00125$:
                          11441 ;demo.c:1699: puts("init sweet PSG bleeps...");
   3E35 21r4Bs43          11442 	ld	hl,#__str_28
   3E38 E5                11443 	push	hl
   3E39 CDr00s00          11444 	call	_puts
   3E3C F1                11445 	pop	af
                          11446 ;demo.c:1701: PLY_SongPtr = (char *)0x0103;
   3E3D 21r00s00          11447 	ld	hl,#_PLY_SongPtr + 0
   3E40 36 03             11448 	ld	(hl), #0x03
   3E42 21r01s00          11449 	ld	hl,#_PLY_SongPtr + 1
   3E45 36 01             11450 	ld	(hl), #0x01
                          11451 ;demo.c:1702: PLY_Init();
   3E47 CDr00s00          11452 	call	_PLY_Init
                          11453 ;demo.c:1703: puts("done.\r\n");
   3E4A 21r64s43          11454 	ld	hl,#__str_29
   3E4D E5                11455 	push	hl
   3E4E CDr00s00          11456 	call	_puts
   3E51 F1                11457 	pop	af
                          11458 ;demo.c:1705: puts("detecting ya vdp type...\r\n");
   3E52 21r6Cs43          11459 	ld	hl,#__str_30
   3E55 E5                11460 	push	hl
   3E56 CDr00s00          11461 	call	_puts
   3E59 F1                11462 	pop	af
                          11463 ;demo.c:1706: if(isvdp2())
   3E5A CDr00s00          11464 	call	_isvdp2
   3E5D AF                11465 	xor	a,a
   3E5E B5                11466 	or	a,l
   3E5F 28 0A             11467 	jr	Z,00102$
                          11468 ;demo.c:1708: puts("vdp2 found! setting 50hz...\r\n");
   3E61 21r87s43          11469 	ld	hl,#__str_31
   3E64 E5                11470 	push	hl
   3E65 CDr00s00          11471 	call	_puts
   3E68 F1                11472 	pop	af
   3E69 18 0B             11473 	jr	00103$
   3E6B                   11474 00102$:
                          11475 ;demo.c:1711: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n");
   3E6B 21rA5s43          11476 	ld	hl,#__str_32
   3E6E E5                11477 	push	hl
   3E6F CDr00s00          11478 	call	_puts
   3E72 F1                11479 	pop	af
                          11480 ;demo.c:1712: do_quit();
   3E73 CDrDDs3C          11481 	call	_do_quit
   3E76                   11482 00103$:
                          11483 ;demo.c:1715: pal_load("TWISTER PL5",32,0);
   3E76 21 00 00          11484 	ld	hl,#0x0000
   3E79 E5                11485 	push	hl
   3E7A 3E 20             11486 	ld	a,#0x20
   3E7C F5                11487 	push	af
   3E7D 33                11488 	inc	sp
   3E7E 21rEAs43          11489 	ld	hl,#__str_33
   3E81 E5                11490 	push	hl
   3E82 CDr37s08          11491 	call	_pal_load
   3E85 F1                11492 	pop	af
   3E86 F1                11493 	pop	af
   3E87 33                11494 	inc	sp
                          11495 ;demo.c:1716: memcpy(twister_palette, cur_palette, 32);
   3E88 21 20 00          11496 	ld	hl,#0x0020
   3E8B E5                11497 	push	hl
   3E8C 21r46s40          11498 	ld	hl,#_cur_palette
   3E8F E5                11499 	push	hl
   3E90 21rA6s40          11500 	ld	hl,#_twister_palette
   3E93 E5                11501 	push	hl
   3E94 CDr00s00          11502 	call	_memcpy
   3E97 F1                11503 	pop	af
   3E98 F1                11504 	pop	af
   3E99 F1                11505 	pop	af
                          11506 ;demo.c:1717: pal_load("LF      PL5",32,0);
   3E9A 21 00 00          11507 	ld	hl,#0x0000
   3E9D E5                11508 	push	hl
   3E9E 3E 20             11509 	ld	a,#0x20
   3EA0 F5                11510 	push	af
   3EA1 33                11511 	inc	sp
   3EA2 21rF6s43          11512 	ld	hl,#__str_34
   3EA5 E5                11513 	push	hl
   3EA6 CDr37s08          11514 	call	_pal_load
   3EA9 F1                11515 	pop	af
   3EAA F1                11516 	pop	af
   3EAB 33                11517 	inc	sp
                          11518 ;demo.c:1718: memcpy(tf_palette, cur_palette, 32);
   3EAC 21 20 00          11519 	ld	hl,#0x0020
   3EAF E5                11520 	push	hl
   3EB0 21r46s40          11521 	ld	hl,#_cur_palette
   3EB3 E5                11522 	push	hl
   3EB4 21rC6s40          11523 	ld	hl,#_tf_palette
   3EB7 E5                11524 	push	hl
   3EB8 CDr00s00          11525 	call	_memcpy
   3EBB F1                11526 	pop	af
   3EBC F1                11527 	pop	af
   3EBD F1                11528 	pop	af
                          11529 ;demo.c:1719: pal_load("BOXES   PL5",32,0);
   3EBE 21 00 00          11530 	ld	hl,#0x0000
   3EC1 E5                11531 	push	hl
   3EC2 3E 20             11532 	ld	a,#0x20
   3EC4 F5                11533 	push	af
   3EC5 33                11534 	inc	sp
   3EC6 21r02s44          11535 	ld	hl,#__str_35
   3EC9 E5                11536 	push	hl
   3ECA CDr37s08          11537 	call	_pal_load
   3ECD F1                11538 	pop	af
   3ECE F1                11539 	pop	af
   3ECF 33                11540 	inc	sp
                          11541 ;demo.c:1720: memcpy(boxes_palette, cur_palette, 32);
   3ED0 21 20 00          11542 	ld	hl,#0x0020
   3ED3 E5                11543 	push	hl
   3ED4 21r46s40          11544 	ld	hl,#_cur_palette
   3ED7 E5                11545 	push	hl
   3ED8 21rE6s40          11546 	ld	hl,#_boxes_palette
   3EDB E5                11547 	push	hl
   3EDC CDr00s00          11548 	call	_memcpy
   3EDF F1                11549 	pop	af
   3EE0 F1                11550 	pop	af
   3EE1 F1                11551 	pop	af
                          11552 ;demo.c:1721: pal_load("BULBS   PL5",32,0);
   3EE2 21 00 00          11553 	ld	hl,#0x0000
   3EE5 E5                11554 	push	hl
   3EE6 3E 20             11555 	ld	a,#0x20
   3EE8 F5                11556 	push	af
   3EE9 33                11557 	inc	sp
   3EEA 21r0Es44          11558 	ld	hl,#__str_36
   3EED E5                11559 	push	hl
   3EEE CDr37s08          11560 	call	_pal_load
   3EF1 F1                11561 	pop	af
   3EF2 F1                11562 	pop	af
   3EF3 33                11563 	inc	sp
                          11564 ;demo.c:1722: memcpy(bulbs_palette, cur_palette, 32);
   3EF4 21 20 00          11565 	ld	hl,#0x0020
   3EF7 E5                11566 	push	hl
   3EF8 21r46s40          11567 	ld	hl,#_cur_palette
   3EFB E5                11568 	push	hl
   3EFC 21r66s40          11569 	ld	hl,#_bulbs_palette
   3EFF E5                11570 	push	hl
   3F00 CDr00s00          11571 	call	_memcpy
   3F03 F1                11572 	pop	af
   3F04 F1                11573 	pop	af
   3F05 F1                11574 	pop	af
                          11575 ;demo.c:1723: pal_load("CREDIT1 PL6",32,0);
   3F06 21 00 00          11576 	ld	hl,#0x0000
   3F09 E5                11577 	push	hl
   3F0A 3E 20             11578 	ld	a,#0x20
   3F0C F5                11579 	push	af
   3F0D 33                11580 	inc	sp
   3F0E 21r1As44          11581 	ld	hl,#__str_37
   3F11 E5                11582 	push	hl
   3F12 CDr37s08          11583 	call	_pal_load
   3F15 F1                11584 	pop	af
   3F16 F1                11585 	pop	af
   3F17 33                11586 	inc	sp
                          11587 ;demo.c:1724: memcpy(credits_palette, cur_palette, 32);
   3F18 21 20 00          11588 	ld	hl,#0x0020
   3F1B E5                11589 	push	hl
   3F1C 21r46s40          11590 	ld	hl,#_cur_palette
   3F1F E5                11591 	push	hl
   3F20 21r06s41          11592 	ld	hl,#_credits_palette
   3F23 E5                11593 	push	hl
   3F24 CDr00s00          11594 	call	_memcpy
   3F27 F1                11595 	pop	af
   3F28 F1                11596 	pop	af
   3F29 F1                11597 	pop	af
                          11598 ;demo.c:1726: puts("all good, starting the demo!\r\n");
   3F2A 21r26s44          11599 	ld	hl,#__str_38
   3F2D E5                11600 	push	hl
   3F2E CDr00s00          11601 	call	_puts
   3F31 F1                11602 	pop	af
                          11603 ;demo.c:1728: pause();
   3F32 CDr16s09          11604 	call	_pause
                          11605 ;demo.c:1729: pause();
   3F35 CDr16s09          11606 	call	_pause
                          11607 ;demo.c:1730: pause();
   3F38 CDr16s09          11608 	call	_pause
                          11609 ;demo.c:1731: pause();
   3F3B CDr16s09          11610 	call	_pause
                          11611 ;demo.c:1732: pause();
   3F3E CDr16s09          11612 	call	_pause
                          11613 ;demo.c:1733: pause();
   3F41 CDr16s09          11614 	call	_pause
                          11615 ;demo.c:1735: scratch_clear();
   3F44 CDr24s08          11616 	call	_scratch_clear
                          11617 ;demo.c:1736: vdp_load_palette(scratch);
   3F47 21rC6s3F          11618 	ld	hl,#_scratch
   3F4A E5                11619 	push	hl
   3F4B CDr00s00          11620 	call	_vdp_load_palette
   3F4E F1                11621 	pop	af
                          11622 ;demo.c:1738: vdp_set_screen5();
   3F4F CDr00s00          11623 	call	_vdp_set_screen5
                          11624 ;demo.c:1740: pck_load("LOADING PCK",5489,0x0000,VRAM_0,0);
   3F52 21 00 00          11625 	ld	hl,#0x0000
   3F55 E5                11626 	push	hl
   3F56 2E 01             11627 	ld	l, #0x01
   3F58 E5                11628 	push	hl
   3F59 2E 00             11629 	ld	l, #0x00
   3F5B E5                11630 	push	hl
   3F5C 21 71 15          11631 	ld	hl,#0x1571
   3F5F E5                11632 	push	hl
   3F60 21r45s44          11633 	ld	hl,#__str_39
   3F63 E5                11634 	push	hl
   3F64 CDr2Ds0A          11635 	call	_pck_load
   3F67 FD 21 0A 00       11636 	ld	iy,#0x000A
   3F6B FD 39             11637 	add	iy,sp
   3F6D FD F9             11638 	ld	sp,iy
                          11639 ;demo.c:1741: cmd.size_x = 256;
   3F6F 21r32s41          11640 	ld	hl, #_cmd + 8
   3F72 36 00             11641 	ld	(hl),#0x00
   3F74 23                11642 	inc	hl
   3F75 36 01             11643 	ld	(hl),#0x01
                          11644 ;demo.c:1742: cmd.size_y = 212;
   3F77 21r34s41          11645 	ld	hl, #_cmd + 10
   3F7A 36 D4             11646 	ld	(hl),#0xD4
   3F7C 23                11647 	inc	hl
   3F7D 36 00             11648 	ld	(hl),#0x00
                          11649 ;demo.c:1743: cmd.data = 0;
                          11650 ;demo.c:1744: cmd.argument = 0x00;
   3F7F 3E 00             11651 	ld	a,#0x00
   3F81 32r36s41          11652 	ld	(#_cmd + 12),a
   3F84 32r37s41          11653 	ld	(#_cmd + 13),a
                          11654 ;demo.c:1745: cmd.command = 0xd0; 
   3F87 01r38s41          11655 	ld	bc,#_cmd + 14
   3F8A 3E D0             11656 	ld	a,#0xD0
   3F8C 02                11657 	ld	(bc),a
                          11658 ;demo.c:1746: cmd.source_x = 0;
   3F8D 21r2As41          11659 	ld	hl,#_cmd
   3F90 36 00             11660 	ld	(hl),#0x00
   3F92 23                11661 	inc	hl
   3F93 36 00             11662 	ld	(hl),#0x00
                          11663 ;demo.c:1747: cmd.source_y = 0;
   3F95 21r2Cs41          11664 	ld	hl, #_cmd + 2
   3F98 36 00             11665 	ld	(hl),#0x00
   3F9A 23                11666 	inc	hl
   3F9B 36 00             11667 	ld	(hl),#0x00
                          11668 ;demo.c:1748: cmd.dest_x = 0;
   3F9D 21r2Es41          11669 	ld	hl, #_cmd + 4
   3FA0 36 00             11670 	ld	(hl),#0x00
   3FA2 23                11671 	inc	hl
   3FA3 36 00             11672 	ld	(hl),#0x00
                          11673 ;demo.c:1749: cmd.dest_y = 768;
   3FA5 21r30s41          11674 	ld	hl, #_cmd + 6
   3FA8 36 00             11675 	ld	(hl),#0x00
   3FAA 23                11676 	inc	hl
   3FAB 36 03             11677 	ld	(hl),#0x03
                          11678 ;demo.c:1750: vdp_copier(&cmd);
   3FAD 21r2As41          11679 	ld	hl,#_cmd
   3FB0 E5                11680 	push	hl
   3FB1 CDr00s00          11681 	call	_vdp_copier
   3FB4 F1                11682 	pop	af
                          11683 ;demo.c:1752: vdp_register(2,0x7f);
   3FB5 21 02 7F          11684 	ld	hl,#0x7F02
   3FB8 E5                11685 	push	hl
   3FB9 CDr00s00          11686 	call	_vdp_register
   3FBC F1                11687 	pop	af
                          11688 ;demo.c:1753: vdp_load_palette(boxes_palette);
   3FBD 21rE6s40          11689 	ld	hl,#_boxes_palette
   3FC0 E5                11690 	push	hl
   3FC1 CDr00s00          11691 	call	_vdp_load_palette
   3FC4 F1                11692 	pop	af
                          11693 ;demo.c:1757: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   3FC5 21 00 00          11694 	ld	hl,#0x0000
   3FC8 E5                11695 	push	hl
   3FC9 2E 01             11696 	ld	l, #0x01
   3FCB E5                11697 	push	hl
   3FCC 2E 00             11698 	ld	l, #0x00
   3FCE E5                11699 	push	hl
   3FCF 21 7F 09          11700 	ld	hl,#0x097F
   3FD2 E5                11701 	push	hl
   3FD3 21r51s44          11702 	ld	hl,#__str_40
   3FD6 E5                11703 	push	hl
   3FD7 CDr2Ds0A          11704 	call	_pck_load
   3FDA FD 21 0A 00       11705 	ld	iy,#0x000A
   3FDE FD 39             11706 	add	iy,sp
   3FE0 FD F9             11707 	ld	sp,iy
                          11708 ;demo.c:1759: cmd.size_x = 256;
   3FE2 21r32s41          11709 	ld	hl, #_cmd + 8
   3FE5 36 00             11710 	ld	(hl),#0x00
   3FE7 23                11711 	inc	hl
   3FE8 36 01             11712 	ld	(hl),#0x01
                          11713 ;demo.c:1760: cmd.size_y = 212;
   3FEA 21r34s41          11714 	ld	hl, #_cmd + 10
   3FED 36 D4             11715 	ld	(hl),#0xD4
   3FEF 23                11716 	inc	hl
   3FF0 36 00             11717 	ld	(hl),#0x00
                          11718 ;demo.c:1761: cmd.data = 0;
                          11719 ;demo.c:1762: cmd.argument = 0x00;
   3FF2 3E 00             11720 	ld	a,#0x00
   3FF4 32r36s41          11721 	ld	(#_cmd + 12),a
   3FF7 32r37s41          11722 	ld	(#_cmd + 13),a
                          11723 ;demo.c:1763: cmd.command = 0xd0; 
   3FFA 01r38s41          11724 	ld	bc,#_cmd + 14
   3FFD 3E D0             11725 	ld	a,#0xD0
   3FFF 02                11726 	ld	(bc),a
                          11727 ;demo.c:1764: cmd.source_x = 0;
   4000 21r2As41          11728 	ld	hl,#_cmd
   4003 36 00             11729 	ld	(hl),#0x00
   4005 23                11730 	inc	hl
   4006 36 00             11731 	ld	(hl),#0x00
                          11732 ;demo.c:1765: cmd.source_y = 0;
   4008 21r2Cs41          11733 	ld	hl, #_cmd + 2
   400B 36 00             11734 	ld	(hl),#0x00
   400D 23                11735 	inc	hl
   400E 36 00             11736 	ld	(hl),#0x00
                          11737 ;demo.c:1766: cmd.dest_x = 0;
   4010 21r2Es41          11738 	ld	hl, #_cmd + 4
   4013 36 00             11739 	ld	(hl),#0x00
   4015 23                11740 	inc	hl
   4016 36 00             11741 	ld	(hl),#0x00
                          11742 ;demo.c:1767: cmd.dest_y = 256;
   4018 21r30s41          11743 	ld	hl, #_cmd + 6
   401B 36 00             11744 	ld	(hl),#0x00
   401D 23                11745 	inc	hl
   401E 36 01             11746 	ld	(hl),#0x01
                          11747 ;demo.c:1768: vdp_copier(&cmd);
   4020 21r2As41          11748 	ld	hl,#_cmd
   4023 E5                11749 	push	hl
   4024 CDr00s00          11750 	call	_vdp_copier
   4027 F1                11751 	pop	af
                          11752 ;demo.c:1770: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   4028 21 00 00          11753 	ld	hl,#0x0000
   402B E5                11754 	push	hl
   402C 2E 01             11755 	ld	l, #0x01
   402E E5                11756 	push	hl
   402F 2E 00             11757 	ld	l, #0x00
   4031 E5                11758 	push	hl
   4032 21 C0 0F          11759 	ld	hl,#0x0FC0
   4035 E5                11760 	push	hl
   4036 21r5Ds44          11761 	ld	hl,#__str_41
   4039 E5                11762 	push	hl
   403A CDr2Ds0A          11763 	call	_pck_load
   403D FD 21 0A 00       11764 	ld	iy,#0x000A
   4041 FD 39             11765 	add	iy,sp
   4043 FD F9             11766 	ld	sp,iy
                          11767 ;demo.c:1772: cmd.size_x = 256;
   4045 21r32s41          11768 	ld	hl, #_cmd + 8
   4048 36 00             11769 	ld	(hl),#0x00
   404A 23                11770 	inc	hl
   404B 36 01             11771 	ld	(hl),#0x01
                          11772 ;demo.c:1773: cmd.size_y = 212;
   404D 21r34s41          11773 	ld	hl, #_cmd + 10
   4050 36 D4             11774 	ld	(hl),#0xD4
   4052 23                11775 	inc	hl
   4053 36 00             11776 	ld	(hl),#0x00
                          11777 ;demo.c:1774: cmd.data = 0;
                          11778 ;demo.c:1775: cmd.argument = 0x00;
   4055 3E 00             11779 	ld	a,#0x00
   4057 32r36s41          11780 	ld	(#_cmd + 12),a
   405A 32r37s41          11781 	ld	(#_cmd + 13),a
                          11782 ;demo.c:1776: cmd.command = 0xd0; 
   405D 01r38s41          11783 	ld	bc,#_cmd + 14
   4060 3E D0             11784 	ld	a,#0xD0
   4062 02                11785 	ld	(bc),a
                          11786 ;demo.c:1777: cmd.source_x = 0;
   4063 21r2As41          11787 	ld	hl,#_cmd
   4066 36 00             11788 	ld	(hl),#0x00
   4068 23                11789 	inc	hl
   4069 36 00             11790 	ld	(hl),#0x00
                          11791 ;demo.c:1778: cmd.source_y = 0;
   406B 21r2Cs41          11792 	ld	hl, #_cmd + 2
   406E 36 00             11793 	ld	(hl),#0x00
   4070 23                11794 	inc	hl
   4071 36 00             11795 	ld	(hl),#0x00
                          11796 ;demo.c:1779: cmd.dest_x = 0;
   4073 21r2Es41          11797 	ld	hl, #_cmd + 4
   4076 36 00             11798 	ld	(hl),#0x00
   4078 23                11799 	inc	hl
   4079 36 00             11800 	ld	(hl),#0x00
                          11801 ;demo.c:1780: cmd.dest_y = 512;
   407B 21r30s41          11802 	ld	hl, #_cmd + 6
   407E 36 00             11803 	ld	(hl),#0x00
   4080 23                11804 	inc	hl
   4081 36 02             11805 	ld	(hl),#0x02
                          11806 ;demo.c:1781: vdp_copier(&cmd);
   4083 21r2As41          11807 	ld	hl,#_cmd
   4086 E5                11808 	push	hl
   4087 CDr00s00          11809 	call	_vdp_copier
   408A F1                11810 	pop	af
                          11811 ;demo.c:1783: memset((uint8_t *) &crebuffer1, 0, 3323);
   408B 21 FB 0C          11812 	ld	hl,#0x0CFB
   408E E5                11813 	push	hl
   408F 3E 00             11814 	ld	a,#0x00
   4091 F5                11815 	push	af
   4092 33                11816 	inc	sp
   4093 21rCCs11          11817 	ld	hl,#_crebuffer1
   4096 E5                11818 	push	hl
   4097 CDr00s00          11819 	call	_memset
   409A F1                11820 	pop	af
   409B F1                11821 	pop	af
   409C 33                11822 	inc	sp
                          11823 ;demo.c:1784: raw_load("CREDIT1 PCK", 3323, crebuffer1,0);
   409D 21 00 00          11824 	ld	hl,#0x0000
   40A0 E5                11825 	push	hl
   40A1 21rCCs11          11826 	ld	hl,#_crebuffer1
   40A4 E5                11827 	push	hl
   40A5 21 FB 0C          11828 	ld	hl,#0x0CFB
   40A8 E5                11829 	push	hl
   40A9 21r69s44          11830 	ld	hl,#__str_42
   40AC E5                11831 	push	hl
   40AD CDr2As09          11832 	call	_raw_load
   40B0 F1                11833 	pop	af
   40B1 F1                11834 	pop	af
   40B2 F1                11835 	pop	af
   40B3 F1                11836 	pop	af
                          11837 ;demo.c:1785: memset((uint8_t *) &crebuffer2, 0, 4724);
   40B4 21 74 12          11838 	ld	hl,#0x1274
   40B7 E5                11839 	push	hl
   40B8 3E 00             11840 	ld	a,#0x00
   40BA F5                11841 	push	af
   40BB 33                11842 	inc	sp
   40BC 21rC7s1E          11843 	ld	hl,#_crebuffer2
   40BF E5                11844 	push	hl
   40C0 CDr00s00          11845 	call	_memset
   40C3 F1                11846 	pop	af
   40C4 F1                11847 	pop	af
   40C5 33                11848 	inc	sp
                          11849 ;demo.c:1786: raw_load("CREDIT2 PCK", 4724, crebuffer2,0);
   40C6 21 00 00          11850 	ld	hl,#0x0000
   40C9 E5                11851 	push	hl
   40CA 21rC7s1E          11852 	ld	hl,#_crebuffer2
   40CD E5                11853 	push	hl
   40CE 21 74 12          11854 	ld	hl,#0x1274
   40D1 E5                11855 	push	hl
   40D2 21r75s44          11856 	ld	hl,#__str_43
   40D5 E5                11857 	push	hl
   40D6 CDr2As09          11858 	call	_raw_load
   40D9 F1                11859 	pop	af
   40DA F1                11860 	pop	af
   40DB F1                11861 	pop	af
   40DC F1                11862 	pop	af
                          11863 ;demo.c:1787: memset((uint8_t *) &crebuffer3, 0, 3723);
   40DD 21 8B 0E          11864 	ld	hl,#0x0E8B
   40E0 E5                11865 	push	hl
   40E1 3E 00             11866 	ld	a,#0x00
   40E3 F5                11867 	push	af
   40E4 33                11868 	inc	sp
   40E5 21r3Bs31          11869 	ld	hl,#_crebuffer3
   40E8 E5                11870 	push	hl
   40E9 CDr00s00          11871 	call	_memset
   40EC F1                11872 	pop	af
   40ED F1                11873 	pop	af
   40EE 33                11874 	inc	sp
                          11875 ;demo.c:1788: raw_load("CREDIT3 PCK", 3723, crebuffer3,0);
   40EF 21 00 00          11876 	ld	hl,#0x0000
   40F2 E5                11877 	push	hl
   40F3 21r3Bs31          11878 	ld	hl,#_crebuffer3
   40F6 E5                11879 	push	hl
   40F7 21 8B 0E          11880 	ld	hl,#0x0E8B
   40FA E5                11881 	push	hl
   40FB 21r81s44          11882 	ld	hl,#__str_44
   40FE E5                11883 	push	hl
   40FF CDr2As09          11884 	call	_raw_load
   4102 F1                11885 	pop	af
   4103 F1                11886 	pop	af
   4104 F1                11887 	pop	af
   4105 F1                11888 	pop	af
                          11889 ;demo.c:1790: scratch_clear();
   4106 CDr24s08          11890 	call	_scratch_clear
                          11891 ;demo.c:1791: vdp_load_palette(scratch);
   4109 21rC6s3F          11892 	ld	hl,#_scratch
   410C E5                11893 	push	hl
   410D CDr00s00          11894 	call	_vdp_load_palette
   4110 F1                11895 	pop	af
                          11896 ;demo.c:1793: vdp_register(2,0x1f);
   4111 21 02 1F          11897 	ld	hl,#0x1F02
   4114 E5                11898 	push	hl
   4115 CDr00s00          11899 	call	_vdp_register
   4118 F1                11900 	pop	af
                          11901 ;demo.c:1795: pck_load("BOXES   PCK",3002,0x0000,VRAM_0,0);
   4119 21 00 00          11902 	ld	hl,#0x0000
   411C E5                11903 	push	hl
   411D 2E 01             11904 	ld	l, #0x01
   411F E5                11905 	push	hl
   4120 2E 00             11906 	ld	l, #0x00
   4122 E5                11907 	push	hl
   4123 21 BA 0B          11908 	ld	hl,#0x0BBA
   4126 E5                11909 	push	hl
   4127 21r8Ds44          11910 	ld	hl,#__str_45
   412A E5                11911 	push	hl
   412B CDr2Ds0A          11912 	call	_pck_load
   412E FD 21 0A 00       11913 	ld	iy,#0x000A
   4132 FD 39             11914 	add	iy,sp
   4134 FD F9             11915 	ld	sp,iy
                          11916 ;demo.c:1796: cmd.size_x = 256;
   4136 21r32s41          11917 	ld	hl, #_cmd + 8
   4139 36 00             11918 	ld	(hl),#0x00
   413B 23                11919 	inc	hl
   413C 36 01             11920 	ld	(hl),#0x01
                          11921 ;demo.c:1797: cmd.size_y = 212;
   413E 21r34s41          11922 	ld	hl, #_cmd + 10
   4141 36 D4             11923 	ld	(hl),#0xD4
   4143 23                11924 	inc	hl
   4144 36 00             11925 	ld	(hl),#0x00
                          11926 ;demo.c:1798: cmd.data = 0;
                          11927 ;demo.c:1799: cmd.argument = 0x00;
   4146 3E 00             11928 	ld	a,#0x00
   4148 32r36s41          11929 	ld	(#_cmd + 12),a
   414B 32r37s41          11930 	ld	(#_cmd + 13),a
                          11931 ;demo.c:1800: cmd.command = 0xd0; 
   414E 01r38s41          11932 	ld	bc,#_cmd + 14
   4151 3E D0             11933 	ld	a,#0xD0
   4153 02                11934 	ld	(bc),a
                          11935 ;demo.c:1801: cmd.source_x = 0;
   4154 21r2As41          11936 	ld	hl,#_cmd
   4157 36 00             11937 	ld	(hl),#0x00
   4159 23                11938 	inc	hl
   415A 36 00             11939 	ld	(hl),#0x00
                          11940 ;demo.c:1802: cmd.source_y = 0;
   415C 21r2Cs41          11941 	ld	hl, #_cmd + 2
   415F 36 00             11942 	ld	(hl),#0x00
   4161 23                11943 	inc	hl
   4162 36 00             11944 	ld	(hl),#0x00
                          11945 ;demo.c:1803: cmd.dest_x = 0;
   4164 21r2Es41          11946 	ld	hl, #_cmd + 4
   4167 36 00             11947 	ld	(hl),#0x00
   4169 23                11948 	inc	hl
   416A 36 00             11949 	ld	(hl),#0x00
                          11950 ;demo.c:1804: cmd.dest_y = 768;
   416C 21r30s41          11951 	ld	hl, #_cmd + 6
   416F 36 00             11952 	ld	(hl),#0x00
   4171 23                11953 	inc	hl
   4172 36 03             11954 	ld	(hl),#0x03
                          11955 ;demo.c:1805: vdp_copier(&cmd);
   4174 21r2As41          11956 	ld	hl,#_cmd
   4177 E5                11957 	push	hl
   4178 CDr00s00          11958 	call	_vdp_copier
   417B F1                11959 	pop	af
                          11960 ;demo.c:1807: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   417C 21 00 00          11961 	ld	hl,#0x0000
   417F E5                11962 	push	hl
   4180 2E 01             11963 	ld	l, #0x01
   4182 E5                11964 	push	hl
   4183 2E 00             11965 	ld	l, #0x00
   4185 E5                11966 	push	hl
   4186 21 6A 08          11967 	ld	hl,#0x086A
   4189 E5                11968 	push	hl
   418A 21r99s44          11969 	ld	hl,#__str_46
   418D E5                11970 	push	hl
   418E CDr2Ds0A          11971 	call	_pck_load
   4191 FD 21 0A 00       11972 	ld	iy,#0x000A
   4195 FD 39             11973 	add	iy,sp
   4197 FD F9             11974 	ld	sp,iy
                          11975 ;demo.c:1809: cmd.size_x = 108;
   4199 21r32s41          11976 	ld	hl, #_cmd + 8
   419C 36 6C             11977 	ld	(hl),#0x6C
   419E 23                11978 	inc	hl
   419F 36 00             11979 	ld	(hl),#0x00
                          11980 ;demo.c:1810: cmd.size_y = 116;
   41A1 21r34s41          11981 	ld	hl, #_cmd + 10
   41A4 36 74             11982 	ld	(hl),#0x74
   41A6 23                11983 	inc	hl
   41A7 36 00             11984 	ld	(hl),#0x00
                          11985 ;demo.c:1811: cmd.data = 0;
                          11986 ;demo.c:1812: cmd.argument = 0x00;
   41A9 3E 00             11987 	ld	a,#0x00
   41AB 32r36s41          11988 	ld	(#_cmd + 12),a
   41AE 32r37s41          11989 	ld	(#_cmd + 13),a
                          11990 ;demo.c:1813: cmd.command = 0xd0; 
   41B1 01r38s41          11991 	ld	bc,#_cmd + 14
   41B4 3E D0             11992 	ld	a,#0xD0
   41B6 02                11993 	ld	(bc),a
                          11994 ;demo.c:1814: cmd.source_x = 75;
   41B7 21r2As41          11995 	ld	hl,#_cmd
   41BA 36 4B             11996 	ld	(hl),#0x4B
   41BC 23                11997 	inc	hl
   41BD 36 00             11998 	ld	(hl),#0x00
                          11999 ;demo.c:1815: cmd.source_y = 50;
   41BF 21r2Cs41          12000 	ld	hl, #_cmd + 2
   41C2 36 32             12001 	ld	(hl),#0x32
   41C4 23                12002 	inc	hl
   41C5 36 00             12003 	ld	(hl),#0x00
                          12004 ;demo.c:1816: cmd.dest_x = 75;
   41C7 21r2Es41          12005 	ld	hl, #_cmd + 4
   41CA 36 4B             12006 	ld	(hl),#0x4B
   41CC 23                12007 	inc	hl
   41CD 36 00             12008 	ld	(hl),#0x00
                          12009 ;demo.c:1817: cmd.dest_y = 256;
   41CF 21r30s41          12010 	ld	hl, #_cmd + 6
   41D2 36 00             12011 	ld	(hl),#0x00
   41D4 23                12012 	inc	hl
   41D5 36 01             12013 	ld	(hl),#0x01
                          12014 ;demo.c:1818: vdp_copier(&cmd);
   41D7 21r2As41          12015 	ld	hl,#_cmd
   41DA E5                12016 	push	hl
   41DB CDr00s00          12017 	call	_vdp_copier
   41DE F1                12018 	pop	af
                          12019 ;demo.c:1820: cmd.size_x = 108;
   41DF 21r32s41          12020 	ld	hl, #_cmd + 8
   41E2 36 6C             12021 	ld	(hl),#0x6C
   41E4 23                12022 	inc	hl
   41E5 36 00             12023 	ld	(hl),#0x00
                          12024 ;demo.c:1821: cmd.size_y = 60;
   41E7 21r34s41          12025 	ld	hl, #_cmd + 10
   41EA 36 3C             12026 	ld	(hl),#0x3C
   41EC 23                12027 	inc	hl
   41ED 36 00             12028 	ld	(hl),#0x00
                          12029 ;demo.c:1822: cmd.data = 0;
                          12030 ;demo.c:1823: cmd.argument = 0x00;
   41EF 3E 00             12031 	ld	a,#0x00
   41F1 32r36s41          12032 	ld	(#_cmd + 12),a
   41F4 32r37s41          12033 	ld	(#_cmd + 13),a
                          12034 ;demo.c:1824: cmd.command = 0xd0; 
   41F7 01r38s41          12035 	ld	bc,#_cmd + 14
   41FA 3E D0             12036 	ld	a,#0xD0
   41FC 02                12037 	ld	(bc),a
                          12038 ;demo.c:1825: cmd.source_x = 75;
   41FD 21r2As41          12039 	ld	hl,#_cmd
   4200 36 4B             12040 	ld	(hl),#0x4B
   4202 23                12041 	inc	hl
   4203 36 00             12042 	ld	(hl),#0x00
                          12043 ;demo.c:1826: cmd.source_y = 256+110;
   4205 21r2Cs41          12044 	ld	hl, #_cmd + 2
   4208 36 6E             12045 	ld	(hl),#0x6E
   420A 23                12046 	inc	hl
   420B 36 01             12047 	ld	(hl),#0x01
                          12048 ;demo.c:1827: cmd.dest_x = 75;
   420D 21r2Es41          12049 	ld	hl, #_cmd + 4
   4210 36 4B             12050 	ld	(hl),#0x4B
   4212 23                12051 	inc	hl
   4213 36 00             12052 	ld	(hl),#0x00
                          12053 ;demo.c:1828: cmd.dest_y = 40;
   4215 21r30s41          12054 	ld	hl, #_cmd + 6
   4218 36 28             12055 	ld	(hl),#0x28
   421A 23                12056 	inc	hl
   421B 36 00             12057 	ld	(hl),#0x00
                          12058 ;demo.c:1829: vdp_copier(&cmd);
   421D 21r2As41          12059 	ld	hl,#_cmd
   4220 E5                12060 	push	hl
   4221 CDr00s00          12061 	call	_vdp_copier
   4224 F1                12062 	pop	af
                          12063 ;demo.c:1830: cmd.dest_x = 75;
   4225 21r2Es41          12064 	ld	hl, #_cmd + 4
   4228 36 4B             12065 	ld	(hl),#0x4B
   422A 23                12066 	inc	hl
   422B 36 00             12067 	ld	(hl),#0x00
                          12068 ;demo.c:1831: cmd.dest_y = 100;
   422D 21r30s41          12069 	ld	hl, #_cmd + 6
   4230 36 64             12070 	ld	(hl),#0x64
   4232 23                12071 	inc	hl
   4233 36 00             12072 	ld	(hl),#0x00
                          12073 ;demo.c:1832: vdp_copier(&cmd);
   4235 21r2As41          12074 	ld	hl,#_cmd
   4238 E5                12075 	push	hl
   4239 CDr00s00          12076 	call	_vdp_copier
   423C F1                12077 	pop	af
                          12078 ;demo.c:1834: pal_load("DSSLOGO PL5",32,0);
   423D 21 00 00          12079 	ld	hl,#0x0000
   4240 E5                12080 	push	hl
   4241 3E 20             12081 	ld	a,#0x20
   4243 F5                12082 	push	af
   4244 33                12083 	inc	sp
   4245 21rA5s44          12084 	ld	hl,#__str_47
   4248 E5                12085 	push	hl
   4249 CDr37s08          12086 	call	_pal_load
   424C F1                12087 	pop	af
   424D F1                12088 	pop	af
   424E 33                12089 	inc	sp
                          12090 ;demo.c:1836: scratch_clear();
   424F CDr24s08          12091 	call	_scratch_clear
                          12092 ;demo.c:1838: vdp_register(9,130); // 50hz,212
   4252 21 09 82          12093 	ld	hl,#0x8209
   4255 E5                12094 	push	hl
   4256 CDr00s00          12095 	call	_vdp_register
   4259 F1                12096 	pop	af
                          12097 ;demo.c:1840: install_isr(my_isr);
   425A 21rECs07          12098 	ld	hl,#_my_isr
   425D E5                12099 	push	hl
   425E CDr00s00          12100 	call	_install_isr
   4261 F1                12101 	pop	af
                          12102 ;demo.c:1844: while (!quit) {
   4262                   12103 00111$:
   4262 AF                12104 	xor	a,a
   4263 DD B6 FF          12105 	or	a,-1 (ix)
   4266 C2r21s43          12106 	jp	NZ,00113$
                          12107 ;demo.c:1846: if (vbicount >= scenetimings[timeindex+1]) {
   4269 21r42s42          12108 	ld	hl,#_timeindex + 0
   426C 4E                12109 	ld	c,(hl)
   426D 0C                12110 	inc	c
   426E CB 21             12111 	sla	c
   4270 3Er51             12112 	ld	a,#<_scenetimings
   4272 81                12113 	add	a,c
   4273 6F                12114 	ld	l,a
   4274 3Es41             12115 	ld	a,#>_scenetimings
   4276 CE 00             12116 	adc	a,#0x00
   4278 67                12117 	ld	h,a
   4279 4E                12118 	ld	c,(hl)
   427A 23                12119 	inc	hl
   427B 46                12120 	ld	b,(hl)
   427C 3Ar26s41          12121 	ld	a,(#_vbicount+0)
   427F 91                12122 	sub	a,c
   4280 3Ar27s41          12123 	ld	a,(#_vbicount+1)
   4283 98                12124 	sbc	a,b
   4284 FArADs42          12125 	jp	M,00105$
                          12126 ;demo.c:1847: sceneindex++;
   4287 FD 21r40s42       12127 	ld	iy,#_sceneindex
   428B FD 34 00          12128 	inc	0 (iy)
   428E 20 07             12129 	jr	NZ,00153$
   4290 FD 21r40s42       12130 	ld	iy,#_sceneindex
   4294 FD 34 01          12131 	inc	1 (iy)
   4297                   12132 00153$:
                          12133 ;demo.c:1848: timeindex+=2;
   4297 21r42s42          12134 	ld	hl,#_timeindex
   429A 7E                12135 	ld	a,(hl)
   429B C6 02             12136 	add	a,#0x02
   429D 23                12137 	inc	hl
   429E 2B                12138 	dec	hl
   429F C5                12139 	push	bc
   42A0 4F                12140 	ld	c, a
   42A1 23                12141 	inc	hl
   42A2 7E                12142 	ld	a, (hl)
   42A3 47                12143 	ld	b, a
   42A4 79                12144 	ld	a, c
   42A5 2B                12145 	dec	hl
   42A6 77                12146 	ld	(hl), a
   42A7 78                12147 	ld	a, b
   42A8 C1                12148 	pop	bc
   42A9 CE 00             12149 	adc	a,#0x00
   42AB 23                12150 	inc	hl
   42AC 77                12151 	ld	(hl),a
   42AD                   12152 00105$:
                          12153 ;demo.c:1851: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   42AD 21r42s42          12154 	ld	hl,#_timeindex + 0
   42B0 4E                12155 	ld	c,(hl)
   42B1 21r43s42          12156 	ld	hl,#_timeindex + 1
   42B4 46                12157 	ld	b,(hl)
   42B5 CB 21             12158 	sla	c
   42B7 CB 10             12159 	rl	b
   42B9 21r51s41          12160 	ld	hl,#_scenetimings
   42BC 09                12161 	add	hl,bc
   42BD 4E                12162 	ld	c,(hl)
   42BE 23                12163 	inc	hl
   42BF 46                12164 	ld	b,(hl)
   42C0 3Ar26s41          12165 	ld	a,(#_vbicount+0)
   42C3 91                12166 	sub	a,c
   42C4 3Ar27s41          12167 	ld	a,(#_vbicount+1)
   42C7 98                12168 	sbc	a,b
   42C8 FAr0Ds43          12169 	jp	M,00107$
   42CB 21r42s42          12170 	ld	hl,#_timeindex + 0
   42CE 4E                12171 	ld	c,(hl)
   42CF 0C                12172 	inc	c
   42D0 CB 21             12173 	sla	c
   42D2 3Er51             12174 	ld	a,#<_scenetimings
   42D4 81                12175 	add	a,c
   42D5 6F                12176 	ld	l,a
   42D6 3Es41             12177 	ld	a,#>_scenetimings
   42D8 CE 00             12178 	adc	a,#0x00
   42DA 67                12179 	ld	h,a
   42DB 4E                12180 	ld	c,(hl)
   42DC 23                12181 	inc	hl
   42DD 46                12182 	ld	b,(hl)
   42DE 3Ar26s41          12183 	ld	a,(#_vbicount+0)
   42E1 91                12184 	sub	a,c
   42E2 FD 21r26s41       12185 	ld	iy,#_vbicount
   42E6 FD 7E 01          12186 	ld	a,1 (iy)
   42E9 98                12187 	sbc	a,b
   42EA F2r0Ds43          12188 	jp	P,00107$
                          12189 ;demo.c:1852: waitVB();
   42ED 76                12190 		halt 
                          12191 ;demo.c:1853: scenepointers[sceneindex]();
   42EE 21r40s42          12192 	ld	hl,#_sceneindex + 0
   42F1 4E                12193 	ld	c,(hl)
   42F2 FD 21r40s42       12194 	ld	iy,#_sceneindex
   42F6 FD 46 01          12195 	ld	b,1 (iy)
   42F9 CB 21             12196 	sla	c
   42FB CB 10             12197 	rl	b
   42FD 21r39s41          12198 	ld	hl,#_scenepointers
   4300 09                12199 	add	hl,bc
   4301 4E                12200 	ld	c,(hl)
   4302 23                12201 	inc	hl
   4303 46                12202 	ld	b,(hl)
   4304 C5                12203 	push	bc
   4305 21r0Cs43          12204 	ld	hl,#00158$
   4308 E5                12205 	push	hl
   4309 69                12206 	ld	l,c
   430A 60                12207 	ld	h,b
   430B E9                12208 	jp	(hl)
   430C                   12209 00158$:
   430C C1                12210 	pop	bc
   430D                   12211 00107$:
                          12212 ;demo.c:1857: if(space())
   430D 21 08 01          12213 	ld	hl,#0x0108
   4310 E5                12214 	push	hl
   4311 CDr00s00          12215 	call	_ispressed
   4314 F1                12216 	pop	af
   4315 AF                12217 	xor	a,a
   4316 B5                12218 	or	a,l
   4317 CAr62s42          12219 	jp	Z,00111$
                          12220 ;demo.c:1858: quit=1;
   431A DD 36 FF 01       12221 	ld	-1 (ix),#0x01
   431E C3r62s42          12222 	jp	00111$
   4321                   12223 00113$:
                          12224 ;demo.c:1861: do_quit();
   4321 CDrDDs3C          12225 	call	_do_quit
   4324 DD F9             12226 	ld	sp,ix
   4326 DD E1             12227 	pop	ix
   4328 C9                12228 	ret
   4329                   12229 _main_end::
   4329                   12230 __str_27:
   4329 5B 73 74 61 72 74 12231 	.ascii "[starting DSS MSX demosystem]"
        69 6E 67 20 44 53
        53 20 4D 53 58 20
        64 65 6D 6F 73 79
        73 74 65 6D 5D
   4346 0D                12232 	.db 0x0D
   4347 0A                12233 	.db 0x0A
   4348 0D                12234 	.db 0x0D
   4349 0A                12235 	.db 0x0A
   434A 00                12236 	.db 0x00
   434B                   12237 __str_28:
   434B 69 6E 69 74 20 73 12238 	.ascii "init sweet PSG bleeps..."
        77 65 65 74 20 50
        53 47 20 62 6C 65
        65 70 73 2E 2E 2E
   4363 00                12239 	.db 0x00
   4364                   12240 __str_29:
   4364 64 6F 6E 65 2E    12241 	.ascii "done."
   4369 0D                12242 	.db 0x0D
   436A 0A                12243 	.db 0x0A
   436B 00                12244 	.db 0x00
   436C                   12245 __str_30:
   436C 64 65 74 65 63 74 12246 	.ascii "detecting ya vdp type..."
        69 6E 67 20 79 61
        20 76 64 70 20 74
        79 70 65 2E 2E 2E
   4384 0D                12247 	.db 0x0D
   4385 0A                12248 	.db 0x0A
   4386 00                12249 	.db 0x00
   4387                   12250 __str_31:
   4387 76 64 70 32 20 66 12251 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   43A2 0D                12252 	.db 0x0D
   43A3 0A                12253 	.db 0x0A
   43A4 00                12254 	.db 0x00
   43A5                   12255 __str_32:
   43A5 20 76 64 70 31 20 12256 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   43B1 0D                12257 	.db 0x0D
   43B2 0A                12258 	.db 0x0A
   43B3 53 6F 72 72 79 2C 12259 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   43E1 20 56 52 41 4D 2E 12260 	.ascii " VRAM."
   43E7 0D                12261 	.db 0x0D
   43E8 0A                12262 	.db 0x0A
   43E9 00                12263 	.db 0x00
   43EA                   12264 __str_33:
   43EA 54 57 49 53 54 45 12265 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   43F5 00                12266 	.db 0x00
   43F6                   12267 __str_34:
   43F6 4C 46 20 20 20 20 12268 	.ascii "LF      PL5"
        20 20 50 4C 35
   4401 00                12269 	.db 0x00
   4402                   12270 __str_35:
   4402 42 4F 58 45 53 20 12271 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   440D 00                12272 	.db 0x00
   440E                   12273 __str_36:
   440E 42 55 4C 42 53 20 12274 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   4419 00                12275 	.db 0x00
   441A                   12276 __str_37:
   441A 43 52 45 44 49 54 12277 	.ascii "CREDIT1 PL6"
        31 20 50 4C 36
   4425 00                12278 	.db 0x00
   4426                   12279 __str_38:
   4426 61 6C 6C 20 67 6F 12280 	.ascii "all good, starting the demo!"
        6F 64 2C 20 73 74
        61 72 74 69 6E 67
        20 74 68 65 20 64
        65 6D 6F 21
   4442 0D                12281 	.db 0x0D
   4443 0A                12282 	.db 0x0A
   4444 00                12283 	.db 0x00
   4445                   12284 __str_39:
   4445 4C 4F 41 44 49 4E 12285 	.ascii "LOADING PCK"
        47 20 50 43 4B
   4450 00                12286 	.db 0x00
   4451                   12287 __str_40:
   4451 42 55 4C 42 53 20 12288 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   445C 00                12289 	.db 0x00
   445D                   12290 __str_41:
   445D 54 57 49 53 54 45 12291 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   4468 00                12292 	.db 0x00
   4469                   12293 __str_42:
   4469 43 52 45 44 49 54 12294 	.ascii "CREDIT1 PCK"
        31 20 50 43 4B
   4474 00                12295 	.db 0x00
   4475                   12296 __str_43:
   4475 43 52 45 44 49 54 12297 	.ascii "CREDIT2 PCK"
        32 20 50 43 4B
   4480 00                12298 	.db 0x00
   4481                   12299 __str_44:
   4481 43 52 45 44 49 54 12300 	.ascii "CREDIT3 PCK"
        33 20 50 43 4B
   448C 00                12301 	.db 0x00
   448D                   12302 __str_45:
   448D 42 4F 58 45 53 20 12303 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   4498 00                12304 	.db 0x00
   4499                   12305 __str_46:
   4499 44 53 53 4C 4F 47 12306 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   44A4 00                12307 	.db 0x00
   44A5                   12308 __str_47:
   44A5 44 53 53 4C 4F 47 12309 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   44B0 00                12310 	.db 0x00
                          12311 	.area _CODE
                          12312 	.area _CABS
