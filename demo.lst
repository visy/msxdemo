                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Sat Feb 24 22:01:29 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_animplay
                             14 	.globl _bulbs
                             15 	.globl _twister
                             16 	.globl _font
                             17 	.globl _drawsine
                             18 	.globl _drawstr
                             19 	.globl _do_letter_tall
                             20 	.globl _do_letter
                             21 	.globl _raster_effu
                             22 	.globl _do_blocks
                             23 	.globl _do_ymmm
                             24 	.globl _fadein
                             25 	.globl _pck_load
                             26 	.globl _raw_load
                             27 	.globl _pause
                             28 	.globl _pal_load
                             29 	.globl _scratch_clear
                             30 	.globl _ge5_load
                             31 	.globl _color_isr
                             32 	.globl _my_isr
                             33 	.globl _isNthBitSet
                             34 	.globl _enderdir
                             35 	.globl _ender
                             36 	.globl _ff2
                             37 	.globl _ff1
                             38 	.globl _bulbflipper
                             39 	.globl _twinited
                             40 	.globl _ff
                             41 	.globl _ly
                             42 	.globl _lx
                             43 	.globl _linenum
                             44 	.globl _flof
                             45 	.globl _btab
                             46 	.globl _bty
                             47 	.globl _btx
                             48 	.globl _bsy
                             49 	.globl _bsx
                             50 	.globl _block_init
                             51 	.globl _cc
                             52 	.globl _yofff
                             53 	.globl _tick
                             54 	.globl _vbicount
                             55 	.globl _twister_palette
                             56 	.globl _block_palette
                             57 	.globl _cur_palette
                             58 	.globl _scratch
                             59 	.globl _packbuffer
                             60 	.globl _sintab
                             61 	.globl _font_w
                             62 	.globl _font_y
                             63 	.globl _font_x
                             64 	.globl _sintabx
                             65 ;--------------------------------------------------------
                             66 ; special function registers
                             67 ;--------------------------------------------------------
                             68 ;--------------------------------------------------------
                             69 ;  ram data
                             70 ;--------------------------------------------------------
                             71 	.area _DATA
   0000                      72 _sintab::
   0000                      73 	.ds 256
   0100                      74 _packbuffer::
   0100                      75 	.ds 16000
   3F80                      76 _scratch::
   3F80                      77 	.ds 128
   4000                      78 _cur_palette::
   4000                      79 	.ds 32
   4020                      80 _block_palette::
   4020                      81 	.ds 32
   4040                      82 _twister_palette::
   4040                      83 	.ds 32
   4060                      84 _vbicount::
   4060                      85 	.ds 2
   4062                      86 _tick::
   4062                      87 	.ds 2
   4064                      88 _isNthBitSet_mask_1_1:
   4064                      89 	.ds 8
   406C                      90 _yofff::
   406C                      91 	.ds 1
   406D                      92 _cc::
   406D                      93 	.ds 1
   406E                      94 _flipper:
   406E                      95 	.ds 2
   4070                      96 _ymmmf:
   4070                      97 	.ds 2
   4072                      98 _block_init::
   4072                      99 	.ds 1
   4073                     100 _bsx::
   4073                     101 	.ds 2
   4075                     102 _bsy::
   4075                     103 	.ds 2
   4077                     104 _btx::
   4077                     105 	.ds 2
   4079                     106 _bty::
   4079                     107 	.ds 2
   407B                     108 _btab::
   407B                     109 	.ds 32
   409B                     110 _flof::
   409B                     111 	.ds 2
   409D                     112 _linenum::
   409D                     113 	.ds 2
   409F                     114 _lx::
   409F                     115 	.ds 1
   40A0                     116 _ly::
   40A0                     117 	.ds 1
   40A1                     118 _ff::
   40A1                     119 	.ds 2
   40A3                     120 _twinited::
   40A3                     121 	.ds 2
   40A5                     122 _bulbflipper::
   40A5                     123 	.ds 2
   40A7                     124 _ff1::
   40A7                     125 	.ds 2
   40A9                     126 _ff2::
   40A9                     127 	.ds 2
   40AB                     128 _ender::
   40AB                     129 	.ds 2
   40AD                     130 _enderdir::
   40AD                     131 	.ds 2
   40AF                     132 _xo:
   40AF                     133 	.ds 2
   40B1                     134 _yo:
   40B1                     135 	.ds 2
   40B3                     136 _po:
   40B3                     137 	.ds 2
   40B5                     138 _fffaaa:
   40B5                     139 	.ds 2
                            140 ;--------------------------------------------------------
                            141 ; overlayable items in  ram 
                            142 ;--------------------------------------------------------
                            143 	.area _OVERLAY
                            144 ;--------------------------------------------------------
                            145 ; external initialized ram data
                            146 ;--------------------------------------------------------
                            147 ;--------------------------------------------------------
                            148 ; global & static initialisations
                            149 ;--------------------------------------------------------
                            150 	.area _HOME
                            151 	.area _GSINIT
                            152 	.area _GSFINAL
                            153 	.area _GSINIT
                            154 ;demo.c:50: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r64s40            155 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            156 	call	__initrleblock
   0006 08                  157 	.db	8
   0007 01 02 04 08 10 20   158 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  159 	.db	0
                            160 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            161 	ld	hl,#_sintab
   0013 CDr00s00            162 	call	__initrleblock
   0016 3B                  163 	.db	59
   0017 00 03 06 09 0C 0F   164 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   165 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   166 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   167 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   168 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   169 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   170 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            171 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               172 	.db	#-5,#0x7E
   0054 01                  173 	.db	1
   0055 7F                  174 	.db	0x7F
   0056 FB 7E               175 	.db	#-5,#0x7E
   0058 75                  176 	.db	117
   0059 7D 7D 7C 7B 7B 7A   177 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   178 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   179 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   180 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   181 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   182 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   183 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   184 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   185 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   186 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   187 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   188 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   189 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   190 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      191 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               192 	.db	#-5,#0x82
   00D0 01                  193 	.db	1
   00D1 81                  194 	.db	0x81
   00D2 FB 82               195 	.db	#-5,#0x82
   00D4 3A                  196 	.db	58
   00D5 83 83 84 85 85 86   197 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   198 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   199 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   200 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   201 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   202 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   203 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               204 	.db	0xFA, 0xFD
   010F 00                  205 	.db	0
                            206 ;demo.c:38: uint8_t packbuffer[16000] = {0};
   0110 21r00s01            207 	ld	hl,#_packbuffer
   0113 CDr00s00            208 	call	__initrleblock
   0116 81 00               209 	.db	#-127,#0x00
   0118 81 00               210 	.db	#-127,#0x00
   011A 81 00               211 	.db	#-127,#0x00
   011C 81 00               212 	.db	#-127,#0x00
   011E 81 00               213 	.db	#-127,#0x00
   0120 81 00               214 	.db	#-127,#0x00
   0122 81 00               215 	.db	#-127,#0x00
   0124 81 00               216 	.db	#-127,#0x00
   0126 81 00               217 	.db	#-127,#0x00
   0128 81 00               218 	.db	#-127,#0x00
   012A 81 00               219 	.db	#-127,#0x00
   012C 81 00               220 	.db	#-127,#0x00
   012E 81 00               221 	.db	#-127,#0x00
   0130 81 00               222 	.db	#-127,#0x00
   0132 81 00               223 	.db	#-127,#0x00
   0134 81 00               224 	.db	#-127,#0x00
   0136 81 00               225 	.db	#-127,#0x00
   0138 81 00               226 	.db	#-127,#0x00
   013A 81 00               227 	.db	#-127,#0x00
   013C 81 00               228 	.db	#-127,#0x00
   013E 81 00               229 	.db	#-127,#0x00
   0140 81 00               230 	.db	#-127,#0x00
   0142 81 00               231 	.db	#-127,#0x00
   0144 81 00               232 	.db	#-127,#0x00
   0146 81 00               233 	.db	#-127,#0x00
   0148 81 00               234 	.db	#-127,#0x00
   014A 81 00               235 	.db	#-127,#0x00
   014C 81 00               236 	.db	#-127,#0x00
   014E 81 00               237 	.db	#-127,#0x00
   0150 81 00               238 	.db	#-127,#0x00
   0152 81 00               239 	.db	#-127,#0x00
   0154 81 00               240 	.db	#-127,#0x00
   0156 81 00               241 	.db	#-127,#0x00
   0158 81 00               242 	.db	#-127,#0x00
   015A 81 00               243 	.db	#-127,#0x00
   015C 81 00               244 	.db	#-127,#0x00
   015E 81 00               245 	.db	#-127,#0x00
   0160 81 00               246 	.db	#-127,#0x00
   0162 81 00               247 	.db	#-127,#0x00
   0164 81 00               248 	.db	#-127,#0x00
   0166 81 00               249 	.db	#-127,#0x00
   0168 81 00               250 	.db	#-127,#0x00
   016A 81 00               251 	.db	#-127,#0x00
   016C 81 00               252 	.db	#-127,#0x00
   016E 81 00               253 	.db	#-127,#0x00
   0170 81 00               254 	.db	#-127,#0x00
   0172 81 00               255 	.db	#-127,#0x00
   0174 81 00               256 	.db	#-127,#0x00
   0176 81 00               257 	.db	#-127,#0x00
   0178 81 00               258 	.db	#-127,#0x00
   017A 81 00               259 	.db	#-127,#0x00
   017C 81 00               260 	.db	#-127,#0x00
   017E 81 00               261 	.db	#-127,#0x00
   0180 81 00               262 	.db	#-127,#0x00
   0182 81 00               263 	.db	#-127,#0x00
   0184 81 00               264 	.db	#-127,#0x00
   0186 81 00               265 	.db	#-127,#0x00
   0188 81 00               266 	.db	#-127,#0x00
   018A 81 00               267 	.db	#-127,#0x00
   018C 81 00               268 	.db	#-127,#0x00
   018E 81 00               269 	.db	#-127,#0x00
   0190 81 00               270 	.db	#-127,#0x00
   0192 81 00               271 	.db	#-127,#0x00
   0194 81 00               272 	.db	#-127,#0x00
   0196 81 00               273 	.db	#-127,#0x00
   0198 81 00               274 	.db	#-127,#0x00
   019A 81 00               275 	.db	#-127,#0x00
   019C 81 00               276 	.db	#-127,#0x00
   019E 81 00               277 	.db	#-127,#0x00
   01A0 81 00               278 	.db	#-127,#0x00
   01A2 81 00               279 	.db	#-127,#0x00
   01A4 81 00               280 	.db	#-127,#0x00
   01A6 81 00               281 	.db	#-127,#0x00
   01A8 81 00               282 	.db	#-127,#0x00
   01AA 81 00               283 	.db	#-127,#0x00
   01AC 81 00               284 	.db	#-127,#0x00
   01AE 81 00               285 	.db	#-127,#0x00
   01B0 81 00               286 	.db	#-127,#0x00
   01B2 81 00               287 	.db	#-127,#0x00
   01B4 81 00               288 	.db	#-127,#0x00
   01B6 81 00               289 	.db	#-127,#0x00
   01B8 81 00               290 	.db	#-127,#0x00
   01BA 81 00               291 	.db	#-127,#0x00
   01BC 81 00               292 	.db	#-127,#0x00
   01BE 81 00               293 	.db	#-127,#0x00
   01C0 81 00               294 	.db	#-127,#0x00
   01C2 81 00               295 	.db	#-127,#0x00
   01C4 81 00               296 	.db	#-127,#0x00
   01C6 81 00               297 	.db	#-127,#0x00
   01C8 81 00               298 	.db	#-127,#0x00
   01CA 81 00               299 	.db	#-127,#0x00
   01CC 81 00               300 	.db	#-127,#0x00
   01CE 81 00               301 	.db	#-127,#0x00
   01D0 81 00               302 	.db	#-127,#0x00
   01D2 81 00               303 	.db	#-127,#0x00
   01D4 81 00               304 	.db	#-127,#0x00
   01D6 81 00               305 	.db	#-127,#0x00
   01D8 81 00               306 	.db	#-127,#0x00
   01DA 81 00               307 	.db	#-127,#0x00
   01DC 81 00               308 	.db	#-127,#0x00
   01DE 81 00               309 	.db	#-127,#0x00
   01E0 81 00               310 	.db	#-127,#0x00
   01E2 81 00               311 	.db	#-127,#0x00
   01E4 81 00               312 	.db	#-127,#0x00
   01E6 81 00               313 	.db	#-127,#0x00
   01E8 81 00               314 	.db	#-127,#0x00
   01EA 81 00               315 	.db	#-127,#0x00
   01EC 81 00               316 	.db	#-127,#0x00
   01EE 81 00               317 	.db	#-127,#0x00
   01F0 81 00               318 	.db	#-127,#0x00
   01F2 81 00               319 	.db	#-127,#0x00
   01F4 81 00               320 	.db	#-127,#0x00
   01F6 81 00               321 	.db	#-127,#0x00
   01F8 81 00               322 	.db	#-127,#0x00
   01FA 81 00               323 	.db	#-127,#0x00
   01FC 81 00               324 	.db	#-127,#0x00
   01FE 81 00               325 	.db	#-127,#0x00
   0200 81 00               326 	.db	#-127,#0x00
   0202 81 00               327 	.db	#-127,#0x00
   0204 81 00               328 	.db	#-127,#0x00
   0206 81 00               329 	.db	#-127,#0x00
   0208 81 00               330 	.db	#-127,#0x00
   020A 81 00               331 	.db	#-127,#0x00
   020C 81 00               332 	.db	#-127,#0x00
   020E 81 00               333 	.db	#-127,#0x00
   0210 83 00               334 	.db	#-125,#0x00
   0212 00                  335 	.db	0
                            336 ;demo.c:45: volatile int vbicount=0;
   0213 FD 21r60s40         337 	ld	iy,#_vbicount
   0217 FD 36 00 00         338 	ld	0 (iy),#0x00
   021B FD 21r60s40         339 	ld	iy,#_vbicount
   021F FD 36 01 00         340 	ld	1 (iy),#0x00
                            341 ;demo.c:46: volatile int tick=0;
   0223 FD 21r62s40         342 	ld	iy,#_tick
   0227 FD 36 00 00         343 	ld	0 (iy),#0x00
   022B FD 21r62s40         344 	ld	iy,#_tick
   022F FD 36 01 00         345 	ld	1 (iy),#0x00
                            346 ;demo.c:222: uint8_t yofff = 0;
   0233 FD 21r6Cs40         347 	ld	iy,#_yofff
   0237 FD 36 00 00         348 	ld	0 (iy),#0x00
                            349 ;demo.c:223: uint8_t cc = 0;
   023B FD 21r6Ds40         350 	ld	iy,#_cc
   023F FD 36 00 00         351 	ld	0 (iy),#0x00
                            352 ;demo.c:224: static int flipper = 0;
   0243 FD 21r6Es40         353 	ld	iy,#_flipper
   0247 FD 36 00 00         354 	ld	0 (iy),#0x00
   024B FD 21r6Es40         355 	ld	iy,#_flipper
   024F FD 36 01 00         356 	ld	1 (iy),#0x00
                            357 ;demo.c:225: static int ymmmf = 0;
   0253 FD 21r70s40         358 	ld	iy,#_ymmmf
   0257 FD 36 00 00         359 	ld	0 (iy),#0x00
   025B FD 21r70s40         360 	ld	iy,#_ymmmf
   025F FD 36 01 00         361 	ld	1 (iy),#0x00
                            362 ;demo.c:257: char block_init = 0;
   0263 FD 21r72s40         363 	ld	iy,#_block_init
   0267 FD 36 00 00         364 	ld	0 (iy),#0x00
                            365 ;demo.c:259: int bsx = 0;
   026B FD 21r73s40         366 	ld	iy,#_bsx
   026F FD 36 00 00         367 	ld	0 (iy),#0x00
   0273 FD 21r73s40         368 	ld	iy,#_bsx
   0277 FD 36 01 00         369 	ld	1 (iy),#0x00
                            370 ;demo.c:260: int bsy = 0;
   027B FD 21r75s40         371 	ld	iy,#_bsy
   027F FD 36 00 00         372 	ld	0 (iy),#0x00
   0283 FD 21r75s40         373 	ld	iy,#_bsy
   0287 FD 36 01 00         374 	ld	1 (iy),#0x00
                            375 ;demo.c:261: int btx = 0;
   028B FD 21r77s40         376 	ld	iy,#_btx
   028F FD 36 00 00         377 	ld	0 (iy),#0x00
   0293 FD 21r77s40         378 	ld	iy,#_btx
   0297 FD 36 01 00         379 	ld	1 (iy),#0x00
                            380 ;demo.c:262: int bty = 0;
   029B FD 21r79s40         381 	ld	iy,#_bty
   029F FD 36 00 00         382 	ld	0 (iy),#0x00
   02A3 FD 21r79s40         383 	ld	iy,#_bty
   02A7 FD 36 01 00         384 	ld	1 (iy),#0x00
                            385 ;demo.c:264: int btab[16] = {0};
   02AB 21r7Bs40            386 	ld	hl,#_btab
   02AE CDr00s00            387 	call	__initrleblock
   02B1 E0 00               388 	.db	#-32,#0x00
   02B3 00                  389 	.db	0
                            390 ;demo.c:266: int flof = 0;
   02B4 FD 21r9Bs40         391 	ld	iy,#_flof
   02B8 FD 36 00 00         392 	ld	0 (iy),#0x00
   02BC FD 21r9Bs40         393 	ld	iy,#_flof
   02C0 FD 36 01 00         394 	ld	1 (iy),#0x00
                            395 ;demo.c:316: int linenum = 0;
   02C4 FD 21r9Ds40         396 	ld	iy,#_linenum
   02C8 FD 36 00 00         397 	ld	0 (iy),#0x00
   02CC FD 21r9Ds40         398 	ld	iy,#_linenum
   02D0 FD 36 01 00         399 	ld	1 (iy),#0x00
                            400 ;demo.c:374: uint8_t lx = 0;
   02D4 FD 21r9Fs40         401 	ld	iy,#_lx
   02D8 FD 36 00 00         402 	ld	0 (iy),#0x00
                            403 ;demo.c:375: uint8_t ly = 0;
   02DC FD 21rA0s40         404 	ld	iy,#_ly
   02E0 FD 36 00 00         405 	ld	0 (iy),#0x00
                            406 ;demo.c:440: int ff = 0;
   02E4 FD 21rA1s40         407 	ld	iy,#_ff
   02E8 FD 36 00 00         408 	ld	0 (iy),#0x00
   02EC FD 21rA1s40         409 	ld	iy,#_ff
   02F0 FD 36 01 00         410 	ld	1 (iy),#0x00
                            411 ;demo.c:441: int twinited = 0;
   02F4 FD 21rA3s40         412 	ld	iy,#_twinited
   02F8 FD 36 00 00         413 	ld	0 (iy),#0x00
   02FC FD 21rA3s40         414 	ld	iy,#_twinited
   0300 FD 36 01 00         415 	ld	1 (iy),#0x00
                            416 ;demo.c:492: int bulbflipper = 1;
   0304 FD 21rA5s40         417 	ld	iy,#_bulbflipper
   0308 FD 36 00 01         418 	ld	0 (iy),#0x01
   030C FD 21rA5s40         419 	ld	iy,#_bulbflipper
   0310 FD 36 01 00         420 	ld	1 (iy),#0x00
                            421 ;demo.c:494: int ff1,ff2 = 0;
   0314 FD 21rA9s40         422 	ld	iy,#_ff2
   0318 FD 36 00 00         423 	ld	0 (iy),#0x00
   031C FD 21rA9s40         424 	ld	iy,#_ff2
   0320 FD 36 01 00         425 	ld	1 (iy),#0x00
                            426 ;demo.c:495: int ender = 212;
   0324 FD 21rABs40         427 	ld	iy,#_ender
   0328 FD 36 00 D4         428 	ld	0 (iy),#0xD4
   032C FD 21rABs40         429 	ld	iy,#_ender
   0330 FD 36 01 00         430 	ld	1 (iy),#0x00
                            431 ;demo.c:496: int enderdir = -1;
   0334 FD 21rADs40         432 	ld	iy,#_enderdir
   0338 FD 36 00 FF         433 	ld	0 (iy),#0xFF
   033C FD 21rADs40         434 	ld	iy,#_enderdir
   0340 FD 36 01 FF         435 	ld	1 (iy),#0xFF
                            436 ;demo.c:552: static int xo = 0;
   0344 FD 21rAFs40         437 	ld	iy,#_xo
   0348 FD 36 00 00         438 	ld	0 (iy),#0x00
   034C FD 21rAFs40         439 	ld	iy,#_xo
   0350 FD 36 01 00         440 	ld	1 (iy),#0x00
                            441 ;demo.c:553: static int yo = 0;
   0354 FD 21rB1s40         442 	ld	iy,#_yo
   0358 FD 36 00 00         443 	ld	0 (iy),#0x00
   035C FD 21rB1s40         444 	ld	iy,#_yo
   0360 FD 36 01 00         445 	ld	1 (iy),#0x00
                            446 ;demo.c:554: static int po = 0;
   0364 FD 21rB3s40         447 	ld	iy,#_po
   0368 FD 36 00 00         448 	ld	0 (iy),#0x00
   036C FD 21rB3s40         449 	ld	iy,#_po
   0370 FD 36 01 00         450 	ld	1 (iy),#0x00
                            451 ;demo.c:555: static int fffaaa = 0;
   0374 FD 21rB5s40         452 	ld	iy,#_fffaaa
   0378 FD 36 00 00         453 	ld	0 (iy),#0x00
   037C FD 21rB5s40         454 	ld	iy,#_fffaaa
   0380 FD 36 01 00         455 	ld	1 (iy),#0x00
                            456 ;--------------------------------------------------------
                            457 ; Home
                            458 ;--------------------------------------------------------
                            459 	.area _HOME
                            460 	.area _HOME
                            461 ;--------------------------------------------------------
                            462 ; code
                            463 ;--------------------------------------------------------
                            464 	.area _CODE
                            465 ;demo.c:49: int isNthBitSet (unsigned char c, int n) {
                            466 ;	---------------------------------
                            467 ; Function isNthBitSet
                            468 ; ---------------------------------
   0000                     469 _isNthBitSet_start::
   0000                     470 _isNthBitSet:
   0000 DD E5               471 	push	ix
   0002 DD 21 00 00         472 	ld	ix,#0
   0006 DD 39               473 	add	ix,sp
                            474 ;demo.c:51: return ((c & mask[n]) != 0);
   0008 3Er64               475 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            476 	add	a,5 (ix)
   000D 4F                  477 	ld	c,a
   000E 3Es40               478 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            479 	adc	a,6 (ix)
   0013 47                  480 	ld	b,a
   0014 0A                  481 	ld	a,(bc)
   0015 DD A6 04            482 	and	a,4 (ix)
   0018 20 04               483 	jr	NZ,00103$
   001A 3E 01               484 	ld	a,#0x01
   001C 18 01               485 	jr	00104$
   001E                     486 00103$:
   001E AF                  487 	xor	a,a
   001F                     488 00104$:
   001F B7                  489 	or	a,a
   0020 D6 01               490 	sub	a,#0x01
   0022 3E 00               491 	ld	a,#0x00
   0024 17                  492 	rla
   0025 4F                  493 	ld	c,a
   0026 69                  494 	ld	l,c
   0027 26 00               495 	ld	h,#0x00
   0029 DD E1               496 	pop	ix
   002B C9                  497 	ret
   002C                     498 _isNthBitSet_end::
   002C                     499 _sintabx:
   002C 78 00               500 	.dw #0x0078
   002E 7A 00               501 	.dw #0x007A
   0030 7D 00               502 	.dw #0x007D
   0032 80 00               503 	.dw #0x0080
   0034 83 00               504 	.dw #0x0083
   0036 86 00               505 	.dw #0x0086
   0038 89 00               506 	.dw #0x0089
   003A 8C 00               507 	.dw #0x008C
   003C 8F 00               508 	.dw #0x008F
   003E 92 00               509 	.dw #0x0092
   0040 95 00               510 	.dw #0x0095
   0042 98 00               511 	.dw #0x0098
   0044 9A 00               512 	.dw #0x009A
   0046 9D 00               513 	.dw #0x009D
   0048 A0 00               514 	.dw #0x00A0
   004A A3 00               515 	.dw #0x00A3
   004C A5 00               516 	.dw #0x00A5
   004E A8 00               517 	.dw #0x00A8
   0050 AB 00               518 	.dw #0x00AB
   0052 AD 00               519 	.dw #0x00AD
   0054 B0 00               520 	.dw #0x00B0
   0056 B3 00               521 	.dw #0x00B3
   0058 B5 00               522 	.dw #0x00B5
   005A B8 00               523 	.dw #0x00B8
   005C BA 00               524 	.dw #0x00BA
   005E BD 00               525 	.dw #0x00BD
   0060 BF 00               526 	.dw #0x00BF
   0062 C1 00               527 	.dw #0x00C1
   0064 C4 00               528 	.dw #0x00C4
   0066 C6 00               529 	.dw #0x00C6
   0068 C8 00               530 	.dw #0x00C8
   006A CA 00               531 	.dw #0x00CA
   006C CC 00               532 	.dw #0x00CC
   006E CE 00               533 	.dw #0x00CE
   0070 D0 00               534 	.dw #0x00D0
   0072 D2 00               535 	.dw #0x00D2
   0074 D4 00               536 	.dw #0x00D4
   0076 D6 00               537 	.dw #0x00D6
   0078 D8 00               538 	.dw #0x00D8
   007A DA 00               539 	.dw #0x00DA
   007C DB 00               540 	.dw #0x00DB
   007E DD 00               541 	.dw #0x00DD
   0080 DE 00               542 	.dw #0x00DE
   0082 E0 00               543 	.dw #0x00E0
   0084 E1 00               544 	.dw #0x00E1
   0086 E3 00               545 	.dw #0x00E3
   0088 E4 00               546 	.dw #0x00E4
   008A E5 00               547 	.dw #0x00E5
   008C E6 00               548 	.dw #0x00E6
   008E E7 00               549 	.dw #0x00E7
   0090 E8 00               550 	.dw #0x00E8
   0092 E9 00               551 	.dw #0x00E9
   0094 EA 00               552 	.dw #0x00EA
   0096 EB 00               553 	.dw #0x00EB
   0098 EC 00               554 	.dw #0x00EC
   009A ED 00               555 	.dw #0x00ED
   009C ED 00               556 	.dw #0x00ED
   009E EE 00               557 	.dw #0x00EE
   00A0 EE 00               558 	.dw #0x00EE
   00A2 EF 00               559 	.dw #0x00EF
   00A4 EF 00               560 	.dw #0x00EF
   00A6 EF 00               561 	.dw #0x00EF
   00A8 EF 00               562 	.dw #0x00EF
   00AA EF 00               563 	.dw #0x00EF
   00AC F0 00               564 	.dw #0x00F0
   00AE EF 00               565 	.dw #0x00EF
   00B0 EF 00               566 	.dw #0x00EF
   00B2 EF 00               567 	.dw #0x00EF
   00B4 EF 00               568 	.dw #0x00EF
   00B6 EF 00               569 	.dw #0x00EF
   00B8 EE 00               570 	.dw #0x00EE
   00BA EE 00               571 	.dw #0x00EE
   00BC ED 00               572 	.dw #0x00ED
   00BE ED 00               573 	.dw #0x00ED
   00C0 EC 00               574 	.dw #0x00EC
   00C2 EB 00               575 	.dw #0x00EB
   00C4 EA 00               576 	.dw #0x00EA
   00C6 E9 00               577 	.dw #0x00E9
   00C8 E8 00               578 	.dw #0x00E8
   00CA E7 00               579 	.dw #0x00E7
   00CC E6 00               580 	.dw #0x00E6
   00CE E5 00               581 	.dw #0x00E5
   00D0 E4 00               582 	.dw #0x00E4
   00D2 E3 00               583 	.dw #0x00E3
   00D4 E1 00               584 	.dw #0x00E1
   00D6 E0 00               585 	.dw #0x00E0
   00D8 DE 00               586 	.dw #0x00DE
   00DA DD 00               587 	.dw #0x00DD
   00DC DB 00               588 	.dw #0x00DB
   00DE DA 00               589 	.dw #0x00DA
   00E0 D8 00               590 	.dw #0x00D8
   00E2 D6 00               591 	.dw #0x00D6
   00E4 D4 00               592 	.dw #0x00D4
   00E6 D2 00               593 	.dw #0x00D2
   00E8 D0 00               594 	.dw #0x00D0
   00EA CE 00               595 	.dw #0x00CE
   00EC CC 00               596 	.dw #0x00CC
   00EE CA 00               597 	.dw #0x00CA
   00F0 C8 00               598 	.dw #0x00C8
   00F2 C6 00               599 	.dw #0x00C6
   00F4 C4 00               600 	.dw #0x00C4
   00F6 C1 00               601 	.dw #0x00C1
   00F8 BF 00               602 	.dw #0x00BF
   00FA BD 00               603 	.dw #0x00BD
   00FC BA 00               604 	.dw #0x00BA
   00FE B8 00               605 	.dw #0x00B8
   0100 B5 00               606 	.dw #0x00B5
   0102 B3 00               607 	.dw #0x00B3
   0104 B0 00               608 	.dw #0x00B0
   0106 AD 00               609 	.dw #0x00AD
   0108 AB 00               610 	.dw #0x00AB
   010A A8 00               611 	.dw #0x00A8
   010C A5 00               612 	.dw #0x00A5
   010E A3 00               613 	.dw #0x00A3
   0110 A0 00               614 	.dw #0x00A0
   0112 9D 00               615 	.dw #0x009D
   0114 9A 00               616 	.dw #0x009A
   0116 98 00               617 	.dw #0x0098
   0118 95 00               618 	.dw #0x0095
   011A 92 00               619 	.dw #0x0092
   011C 8F 00               620 	.dw #0x008F
   011E 8C 00               621 	.dw #0x008C
   0120 89 00               622 	.dw #0x0089
   0122 86 00               623 	.dw #0x0086
   0124 83 00               624 	.dw #0x0083
   0126 80 00               625 	.dw #0x0080
   0128 7D 00               626 	.dw #0x007D
   012A 7A 00               627 	.dw #0x007A
   012C 78 00               628 	.dw #0x0078
   012E 75 00               629 	.dw #0x0075
   0130 72 00               630 	.dw #0x0072
   0132 6F 00               631 	.dw #0x006F
   0134 6C 00               632 	.dw #0x006C
   0136 69 00               633 	.dw #0x0069
   0138 66 00               634 	.dw #0x0066
   013A 63 00               635 	.dw #0x0063
   013C 60 00               636 	.dw #0x0060
   013E 5D 00               637 	.dw #0x005D
   0140 5A 00               638 	.dw #0x005A
   0142 57 00               639 	.dw #0x0057
   0144 55 00               640 	.dw #0x0055
   0146 52 00               641 	.dw #0x0052
   0148 4F 00               642 	.dw #0x004F
   014A 4C 00               643 	.dw #0x004C
   014C 4A 00               644 	.dw #0x004A
   014E 47 00               645 	.dw #0x0047
   0150 44 00               646 	.dw #0x0044
   0152 42 00               647 	.dw #0x0042
   0154 3F 00               648 	.dw #0x003F
   0156 3C 00               649 	.dw #0x003C
   0158 3A 00               650 	.dw #0x003A
   015A 37 00               651 	.dw #0x0037
   015C 35 00               652 	.dw #0x0035
   015E 32 00               653 	.dw #0x0032
   0160 30 00               654 	.dw #0x0030
   0162 2E 00               655 	.dw #0x002E
   0164 2B 00               656 	.dw #0x002B
   0166 29 00               657 	.dw #0x0029
   0168 27 00               658 	.dw #0x0027
   016A 25 00               659 	.dw #0x0025
   016C 23 00               660 	.dw #0x0023
   016E 21 00               661 	.dw #0x0021
   0170 1F 00               662 	.dw #0x001F
   0172 1D 00               663 	.dw #0x001D
   0174 1B 00               664 	.dw #0x001B
   0176 19 00               665 	.dw #0x0019
   0178 17 00               666 	.dw #0x0017
   017A 15 00               667 	.dw #0x0015
   017C 14 00               668 	.dw #0x0014
   017E 12 00               669 	.dw #0x0012
   0180 11 00               670 	.dw #0x0011
   0182 0F 00               671 	.dw #0x000F
   0184 0E 00               672 	.dw #0x000E
   0186 0C 00               673 	.dw #0x000C
   0188 0B 00               674 	.dw #0x000B
   018A 0A 00               675 	.dw #0x000A
   018C 09 00               676 	.dw #0x0009
   018E 08 00               677 	.dw #0x0008
   0190 07 00               678 	.dw #0x0007
   0192 06 00               679 	.dw #0x0006
   0194 05 00               680 	.dw #0x0005
   0196 04 00               681 	.dw #0x0004
   0198 03 00               682 	.dw #0x0003
   019A 02 00               683 	.dw #0x0002
   019C 02 00               684 	.dw #0x0002
   019E 01 00               685 	.dw #0x0001
   01A0 01 00               686 	.dw #0x0001
   01A2 00 00               687 	.dw #0x0000
   01A4 00 00               688 	.dw #0x0000
   01A6 00 00               689 	.dw #0x0000
   01A8 00 00               690 	.dw #0x0000
   01AA 00 00               691 	.dw #0x0000
   01AC 00 00               692 	.dw #0x0000
   01AE 00 00               693 	.dw #0x0000
   01B0 00 00               694 	.dw #0x0000
   01B2 00 00               695 	.dw #0x0000
   01B4 00 00               696 	.dw #0x0000
   01B6 00 00               697 	.dw #0x0000
   01B8 01 00               698 	.dw #0x0001
   01BA 01 00               699 	.dw #0x0001
   01BC 02 00               700 	.dw #0x0002
   01BE 02 00               701 	.dw #0x0002
   01C0 03 00               702 	.dw #0x0003
   01C2 04 00               703 	.dw #0x0004
   01C4 05 00               704 	.dw #0x0005
   01C6 06 00               705 	.dw #0x0006
   01C8 07 00               706 	.dw #0x0007
   01CA 08 00               707 	.dw #0x0008
   01CC 09 00               708 	.dw #0x0009
   01CE 0A 00               709 	.dw #0x000A
   01D0 0B 00               710 	.dw #0x000B
   01D2 0C 00               711 	.dw #0x000C
   01D4 0E 00               712 	.dw #0x000E
   01D6 0F 00               713 	.dw #0x000F
   01D8 11 00               714 	.dw #0x0011
   01DA 12 00               715 	.dw #0x0012
   01DC 14 00               716 	.dw #0x0014
   01DE 15 00               717 	.dw #0x0015
   01E0 17 00               718 	.dw #0x0017
   01E2 19 00               719 	.dw #0x0019
   01E4 1B 00               720 	.dw #0x001B
   01E6 1D 00               721 	.dw #0x001D
   01E8 1F 00               722 	.dw #0x001F
   01EA 21 00               723 	.dw #0x0021
   01EC 23 00               724 	.dw #0x0023
   01EE 25 00               725 	.dw #0x0025
   01F0 27 00               726 	.dw #0x0027
   01F2 29 00               727 	.dw #0x0029
   01F4 2B 00               728 	.dw #0x002B
   01F6 2E 00               729 	.dw #0x002E
   01F8 30 00               730 	.dw #0x0030
   01FA 32 00               731 	.dw #0x0032
   01FC 35 00               732 	.dw #0x0035
   01FE 37 00               733 	.dw #0x0037
   0200 3A 00               734 	.dw #0x003A
   0202 3C 00               735 	.dw #0x003C
   0204 3F 00               736 	.dw #0x003F
   0206 42 00               737 	.dw #0x0042
   0208 44 00               738 	.dw #0x0044
   020A 47 00               739 	.dw #0x0047
   020C 4A 00               740 	.dw #0x004A
   020E 4C 00               741 	.dw #0x004C
   0210 4F 00               742 	.dw #0x004F
   0212 52 00               743 	.dw #0x0052
   0214 55 00               744 	.dw #0x0055
   0216 57 00               745 	.dw #0x0057
   0218 5A 00               746 	.dw #0x005A
   021A 5D 00               747 	.dw #0x005D
   021C 60 00               748 	.dw #0x0060
   021E 63 00               749 	.dw #0x0063
   0220 66 00               750 	.dw #0x0066
   0222 69 00               751 	.dw #0x0069
   0224 6C 00               752 	.dw #0x006C
   0226 6F 00               753 	.dw #0x006F
   0228 72 00               754 	.dw #0x0072
   022A 75 00               755 	.dw #0x0075
                            756 ;demo.c:58: void my_isr(void) interrupt
                            757 ;	---------------------------------
                            758 ; Function my_isr
                            759 ; ---------------------------------
   022C                     760 _my_isr_start::
   022C                     761 _my_isr:
   022C F5                  762 	push	af
   022D C5                  763 	push	bc
   022E D5                  764 	push	de
   022F E5                  765 	push	hl
   0230 FD E5               766 	push	iy
                            767 ;demo.c:60: DI;
   0232 F3                  768 		di 
                            769 ;demo.c:62: READ_VDP_STATUS;
   0233 DB 99               770 		in a,(#0x99) 
                            771 ;demo.c:64: PLY_Play();
   0235 CDr00s00            772 	call	_PLY_Play
                            773 ;demo.c:65: PLY_SendRegisters();
   0238 CDr00s00            774 	call	_PLY_SendRegisters
                            775 ;demo.c:67: vbicount+=1;
   023B FD 21r60s40         776 	ld	iy,#_vbicount
   023F FD 34 00            777 	inc	0 (iy)
   0242 20 07               778 	jr	NZ,00103$
   0244 FD 21r60s40         779 	ld	iy,#_vbicount
   0248 FD 34 01            780 	inc	1 (iy)
   024B                     781 00103$:
                            782 ;demo.c:68: tick++;
   024B FD 21r62s40         783 	ld	iy,#_tick
   024F FD 34 00            784 	inc	0 (iy)
   0252 20 07               785 	jr	NZ,00104$
   0254 FD 21r62s40         786 	ld	iy,#_tick
   0258 FD 34 01            787 	inc	1 (iy)
   025B                     788 00104$:
                            789 ;demo.c:70: EI;
   025B FB                  790 		ei 
   025C FD E1               791 	pop	iy
   025E E1                  792 	pop	hl
   025F D1                  793 	pop	de
   0260 C1                  794 	pop	bc
   0261 F1                  795 	pop	af
   0262 ED 4D               796 	reti
   0264                     797 _my_isr_end::
                            798 ;demo.c:73: void color_isr(void) interrupt
                            799 ;	---------------------------------
                            800 ; Function color_isr
                            801 ; ---------------------------------
   0264                     802 _color_isr_start::
   0264                     803 _color_isr:
   0264 F5                  804 	push	af
   0265 C5                  805 	push	bc
   0266 D5                  806 	push	de
   0267 E5                  807 	push	hl
   0268 FD E5               808 	push	iy
                            809 ;demo.c:75: DI;
   026A F3                  810 		di 
                            811 ;demo.c:77: if(isNthBitSet(vdp2_status(1),0)) {
   026B 3E 01               812 	ld	a,#0x01
   026D F5                  813 	push	af
   026E 33                  814 	inc	sp
   026F CDr00s00            815 	call	_vdp2_status
   0272 33                  816 	inc	sp
   0273 4D                  817 	ld	c,l
   0274 21 00 00            818 	ld	hl,#0x0000
   0277 E5                  819 	push	hl
   0278 79                  820 	ld	a,c
   0279 F5                  821 	push	af
   027A 33                  822 	inc	sp
   027B CDr00s00            823 	call	_isNthBitSet
   027E F1                  824 	pop	af
   027F 33                  825 	inc	sp
   0280 44                  826 	ld	b,h
   0281 4D                  827 	ld	c,l
   0282 79                  828 	ld	a,c
   0283 B0                  829 	or	a,b
   0284 28 19               830 	jr	Z,00102$
                            831 ;demo.c:78: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0286 21r60s40            832 	ld	hl,#_vbicount + 0
   0289 4E                  833 	ld	c,(hl)
   028A 06 00               834 	ld	b,#0x00
   028C 21r00s00            835 	ld	hl,#_sintab
   028F 09                  836 	add	hl,bc
   0290 7E                  837 	ld	a,(hl)
   0291 F5                  838 	push	af
   0292 33                  839 	inc	sp
   0293 3E 17               840 	ld	a,#0x17
   0295 F5                  841 	push	af
   0296 33                  842 	inc	sp
   0297 CDr00s00            843 	call	_vdp_register
   029A F1                  844 	pop	af
                            845 ;demo.c:79: READ_VDP_STATUS;
   029B DB 99               846 		in a,(#0x99) 
   029D 18 18               847 	jr	00103$
   029F                     848 00102$:
                            849 ;demo.c:82: READ_VDP_STATUS;
   029F DB 99               850 		in a,(#0x99) 
                            851 ;demo.c:83: vbicount++;
   02A1 FD 21r60s40         852 	ld	iy,#_vbicount
   02A5 FD 34 00            853 	inc	0 (iy)
   02A8 20 07               854 	jr	NZ,00107$
   02AA FD 21r60s40         855 	ld	iy,#_vbicount
   02AE FD 34 01            856 	inc	1 (iy)
   02B1                     857 00107$:
                            858 ;demo.c:86: PLY_Play();
   02B1 CDr00s00            859 	call	_PLY_Play
                            860 ;demo.c:87: PLY_SendRegisters();
   02B4 CDr00s00            861 	call	_PLY_SendRegisters
   02B7                     862 00103$:
                            863 ;demo.c:90: EI;
   02B7 FB                  864 		ei 
   02B8 FD E1               865 	pop	iy
   02BA E1                  866 	pop	hl
   02BB D1                  867 	pop	de
   02BC C1                  868 	pop	bc
   02BD F1                  869 	pop	af
   02BE ED 4D               870 	reti
   02C0                     871 _color_isr_end::
                            872 ;demo.c:97: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml) {
                            873 ;	---------------------------------
                            874 ; Function ge5_load
                            875 ; ---------------------------------
   02C0                     876 _ge5_load_start::
   02C0                     877 _ge5_load:
   02C0 DD E5               878 	push	ix
   02C2 DD 21 00 00         879 	ld	ix,#0
   02C6 DD 39               880 	add	ix,sp
   02C8 21 D2 FF            881 	ld	hl,#-46
   02CB 39                  882 	add	hl,sp
   02CC F9                  883 	ld	sp,hl
                            884 ;demo.c:101: memset((uint8_t *) &f, 0, sizeof(fcb));
   02CD 21 00 00            885 	ld	hl,#0x0000
   02D0 39                  886 	add	hl,sp
   02D1 4D                  887 	ld	c,l
   02D2 44                  888 	ld	b,h
   02D3 21 2E 00            889 	ld	hl,#0x002E
   02D6 E5                  890 	push	hl
   02D7 3E 00               891 	ld	a,#0x00
   02D9 F5                  892 	push	af
   02DA 33                  893 	inc	sp
   02DB C5                  894 	push	bc
   02DC CDr00s00            895 	call	_memset
   02DF F1                  896 	pop	af
   02E0 F1                  897 	pop	af
   02E1 33                  898 	inc	sp
                            899 ;demo.c:103: f.record_size = 128;
   02E2 21 00 00            900 	ld	hl,#0x0000
   02E5 39                  901 	add	hl,sp
   02E6 4D                  902 	ld	c,l
   02E7 44                  903 	ld	b,h
   02E8 21 0F 00            904 	ld	hl,#0x000F
   02EB 09                  905 	add	hl,bc
   02EC EB                  906 	ex	de,hl
   02ED 3E 80               907 	ld	a,#0x80
   02EF 12                  908 	ld	(de),a
                            909 ;demo.c:104: f.drive = 0;
   02F0 3E 00               910 	ld	a,#0x00
   02F2 02                  911 	ld	(bc),a
                            912 ;demo.c:106: memcpy(f.name, file_name, 11);
   02F3 DD 5E 04            913 	ld	e,4 (ix)
   02F6 DD 56 05            914 	ld	d,5 (ix)
   02F9 03                  915 	inc	bc
   02FA 21 0B 00            916 	ld	hl,#0x000B
   02FD E5                  917 	push	hl
   02FE D5                  918 	push	de
   02FF C5                  919 	push	bc
   0300 CDr00s00            920 	call	_memcpy
   0303 F1                  921 	pop	af
   0304 F1                  922 	pop	af
   0305 F1                  923 	pop	af
                            924 ;demo.c:108: if (open(&f) != 0) return 0;
   0306 21 00 00            925 	ld	hl,#0x0000
   0309 39                  926 	add	hl,sp
   030A E5                  927 	push	hl
   030B CDr00s00            928 	call	_open
   030E F1                  929 	pop	af
   030F AF                  930 	xor	a,a
   0310 B5                  931 	or	a,l
   0311 28 05               932 	jr	Z,00102$
   0313 2E 00               933 	ld	l,#0x00
   0315 C3r8Cs03            934 	jp	00114$
   0318                     935 00102$:
                            936 ;demo.c:109: vdp_set_write_address(vramh, vraml);
   0318 DD 6E 07            937 	ld	l,7 (ix)
   031B DD 66 08            938 	ld	h,8 (ix)
   031E E5                  939 	push	hl
   031F DD 7E 06            940 	ld	a,6 (ix)
   0322 F5                  941 	push	af
   0323 33                  942 	inc	sp
   0324 CDr00s00            943 	call	_vdp_set_write_address
   0327 F1                  944 	pop	af
   0328 33                  945 	inc	sp
                            946 ;demo.c:111: for (i = 0; i < 213; i++) {
   0329 0E 00               947 	ld	c,#0x00
   032B                     948 00110$:
   032B 79                  949 	ld	a,c
   032C D6 D5               950 	sub	a,#0xD5
   032E D2r81s03            951 	jp	NC,00113$
                            952 ;demo.c:112: if (block_set_data_ptr(scratch) != 0) return 0;
   0331 C5                  953 	push	bc
   0332 21r80s3F            954 	ld	hl,#_scratch
   0335 E5                  955 	push	hl
   0336 CDr00s00            956 	call	_block_set_data_ptr
   0339 F1                  957 	pop	af
   033A 7D                  958 	ld	a,l
   033B C1                  959 	pop	bc
   033C 47                  960 	ld	b,a
   033D B7                  961 	or	a,a
   033E 28 05               962 	jr	Z,00104$
   0340 2E 00               963 	ld	l,#0x00
   0342 C3r8Cs03            964 	jp	00114$
   0345                     965 00104$:
                            966 ;demo.c:113: if (block_read(&f) != 0) return 0;
   0345 21 00 00            967 	ld	hl,#0x0000
   0348 39                  968 	add	hl,sp
   0349 C5                  969 	push	bc
   034A E5                  970 	push	hl
   034B CDr00s00            971 	call	_block_read
   034E F1                  972 	pop	af
   034F 7D                  973 	ld	a,l
   0350 C1                  974 	pop	bc
   0351 47                  975 	ld	b,a
   0352 B7                  976 	or	a,a
   0353 28 04               977 	jr	Z,00106$
   0355 2E 00               978 	ld	l,#0x00
   0357 18 33               979 	jr	00114$
   0359                     980 00106$:
                            981 ;demo.c:115: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0359 AF                  982 	xor	a,a
   035A B1                  983 	or	a,c
   035B 20 11               984 	jr	NZ,00108$
   035D 11r87s3F            985 	ld	de,#_scratch + 7
   0360 C5                  986 	push	bc
   0361 3E 79               987 	ld	a,#0x79
   0363 F5                  988 	push	af
   0364 33                  989 	inc	sp
   0365 D5                  990 	push	de
   0366 CDr00s00            991 	call	_vdp_load_screen
   0369 F1                  992 	pop	af
   036A 33                  993 	inc	sp
   036B C1                  994 	pop	bc
   036C 18 0F               995 	jr	00112$
   036E                     996 00108$:
                            997 ;demo.c:116: else vdp_load_screen(scratch, 128);
   036E C5                  998 	push	bc
   036F 3E 80               999 	ld	a,#0x80
   0371 F5                 1000 	push	af
   0372 33                 1001 	inc	sp
   0373 21r80s3F           1002 	ld	hl,#_scratch
   0376 E5                 1003 	push	hl
   0377 CDr00s00           1004 	call	_vdp_load_screen
   037A F1                 1005 	pop	af
   037B 33                 1006 	inc	sp
   037C C1                 1007 	pop	bc
   037D                    1008 00112$:
                           1009 ;demo.c:111: for (i = 0; i < 213; i++) {
   037D 0C                 1010 	inc	c
   037E C3r2Bs03           1011 	jp	00110$
   0381                    1012 00113$:
                           1013 ;demo.c:119: close(&f);
   0381 21 00 00           1014 	ld	hl,#0x0000
   0384 39                 1015 	add	hl,sp
   0385 E5                 1016 	push	hl
   0386 CDr00s00           1017 	call	_close
   0389 F1                 1018 	pop	af
                           1019 ;demo.c:121: return 1;
   038A 2E 01              1020 	ld	l,#0x01
   038C                    1021 00114$:
   038C DD F9              1022 	ld	sp,ix
   038E DD E1              1023 	pop	ix
   0390 C9                 1024 	ret
   0391                    1025 _ge5_load_end::
                           1026 ;demo.c:124: void scratch_clear() {
                           1027 ;	---------------------------------
                           1028 ; Function scratch_clear
                           1029 ; ---------------------------------
   0391                    1030 _scratch_clear_start::
   0391                    1031 _scratch_clear:
                           1032 ;demo.c:125: memset((uint8_t *) &scratch, 0, 128);
   0391 21 80 00           1033 	ld	hl,#0x0080
   0394 E5                 1034 	push	hl
   0395 3E 00              1035 	ld	a,#0x00
   0397 F5                 1036 	push	af
   0398 33                 1037 	inc	sp
   0399 21r80s3F           1038 	ld	hl,#_scratch
   039C E5                 1039 	push	hl
   039D CDr00s00           1040 	call	_memset
   03A0 F1                 1041 	pop	af
   03A1 F1                 1042 	pop	af
   03A2 33                 1043 	inc	sp
   03A3 C9                 1044 	ret
   03A4                    1045 _scratch_clear_end::
                           1046 ;demo.c:128: uint8_t pal_load(char *file_name, uint8_t ss) {
                           1047 ;	---------------------------------
                           1048 ; Function pal_load
                           1049 ; ---------------------------------
   03A4                    1050 _pal_load_start::
   03A4                    1051 _pal_load:
   03A4 DD E5              1052 	push	ix
   03A6 DD 21 00 00        1053 	ld	ix,#0
   03AA DD 39              1054 	add	ix,sp
   03AC 21 D2 FF           1055 	ld	hl,#-46
   03AF 39                 1056 	add	hl,sp
   03B0 F9                 1057 	ld	sp,hl
                           1058 ;demo.c:131: memset((uint8_t *) &f, 0, sizeof(fcb));
   03B1 21 00 00           1059 	ld	hl,#0x0000
   03B4 39                 1060 	add	hl,sp
   03B5 4D                 1061 	ld	c,l
   03B6 44                 1062 	ld	b,h
   03B7 21 2E 00           1063 	ld	hl,#0x002E
   03BA E5                 1064 	push	hl
   03BB 3E 00              1065 	ld	a,#0x00
   03BD F5                 1066 	push	af
   03BE 33                 1067 	inc	sp
   03BF C5                 1068 	push	bc
   03C0 CDr00s00           1069 	call	_memset
   03C3 F1                 1070 	pop	af
   03C4 F1                 1071 	pop	af
   03C5 33                 1072 	inc	sp
                           1073 ;demo.c:132: scratch_clear();
   03C6 CDr91s03           1074 	call	_scratch_clear
                           1075 ;demo.c:134: f.record_size = ss;
   03C9 21 00 00           1076 	ld	hl,#0x0000
   03CC 39                 1077 	add	hl,sp
   03CD 4D                 1078 	ld	c,l
   03CE 44                 1079 	ld	b,h
   03CF 21 0F 00           1080 	ld	hl,#0x000F
   03D2 09                 1081 	add	hl,bc
   03D3 EB                 1082 	ex	de,hl
   03D4 DD 7E 06           1083 	ld	a,6 (ix)
   03D7 12                 1084 	ld	(de),a
                           1085 ;demo.c:135: f.drive = 0;
   03D8 3E 00              1086 	ld	a,#0x00
   03DA 02                 1087 	ld	(bc),a
                           1088 ;demo.c:137: memcpy(f.name, file_name, 11);
   03DB DD 5E 04           1089 	ld	e,4 (ix)
   03DE DD 56 05           1090 	ld	d,5 (ix)
   03E1 03                 1091 	inc	bc
   03E2 21 0B 00           1092 	ld	hl,#0x000B
   03E5 E5                 1093 	push	hl
   03E6 D5                 1094 	push	de
   03E7 C5                 1095 	push	bc
   03E8 CDr00s00           1096 	call	_memcpy
   03EB F1                 1097 	pop	af
   03EC F1                 1098 	pop	af
   03ED F1                 1099 	pop	af
                           1100 ;demo.c:139: if (open(&f) != 0) return 0;
   03EE 21 00 00           1101 	ld	hl,#0x0000
   03F1 39                 1102 	add	hl,sp
   03F2 E5                 1103 	push	hl
   03F3 CDr00s00           1104 	call	_open
   03F6 F1                 1105 	pop	af
   03F7 AF                 1106 	xor	a,a
   03F8 B5                 1107 	or	a,l
   03F9 28 04              1108 	jr	Z,00102$
   03FB 2E 00              1109 	ld	l,#0x00
   03FD 18 40              1110 	jr	00107$
   03FF                    1111 00102$:
                           1112 ;demo.c:140: if (block_set_data_ptr(scratch) != 0) return 0;
   03FF 21r80s3F           1113 	ld	hl,#_scratch
   0402 E5                 1114 	push	hl
   0403 CDr00s00           1115 	call	_block_set_data_ptr
   0406 F1                 1116 	pop	af
   0407 AF                 1117 	xor	a,a
   0408 B5                 1118 	or	a,l
   0409 28 04              1119 	jr	Z,00104$
   040B 2E 00              1120 	ld	l,#0x00
   040D 18 30              1121 	jr	00107$
   040F                    1122 00104$:
                           1123 ;demo.c:141: if (block_read(&f) != 0) return 0;
   040F 21 00 00           1124 	ld	hl,#0x0000
   0412 39                 1125 	add	hl,sp
   0413 E5                 1126 	push	hl
   0414 CDr00s00           1127 	call	_block_read
   0417 F1                 1128 	pop	af
   0418 AF                 1129 	xor	a,a
   0419 B5                 1130 	or	a,l
   041A 28 04              1131 	jr	Z,00106$
   041C 2E 00              1132 	ld	l,#0x00
   041E 18 1F              1133 	jr	00107$
   0420                    1134 00106$:
                           1135 ;demo.c:143: memcpy(cur_palette, scratch+7, ss);
   0420 DD 4E 06           1136 	ld	c,6 (ix)
   0423 06 00              1137 	ld	b,#0x00
   0425 11r87s3F           1138 	ld	de,#_scratch + 7
   0428 C5                 1139 	push	bc
   0429 D5                 1140 	push	de
   042A 21r00s40           1141 	ld	hl,#_cur_palette
   042D E5                 1142 	push	hl
   042E CDr00s00           1143 	call	_memcpy
   0431 F1                 1144 	pop	af
   0432 F1                 1145 	pop	af
   0433 F1                 1146 	pop	af
                           1147 ;demo.c:145: close(&f);
   0434 21 00 00           1148 	ld	hl,#0x0000
   0437 39                 1149 	add	hl,sp
   0438 E5                 1150 	push	hl
   0439 CDr00s00           1151 	call	_close
   043C F1                 1152 	pop	af
                           1153 ;demo.c:146: return 1;
   043D 2E 01              1154 	ld	l,#0x01
   043F                    1155 00107$:
   043F DD F9              1156 	ld	sp,ix
   0441 DD E1              1157 	pop	ix
   0443 C9                 1158 	ret
   0444                    1159 _pal_load_end::
                           1160 ;demo.c:150: void pause() {
                           1161 ;	---------------------------------
                           1162 ; Function pause
                           1163 ; ---------------------------------
   0444                    1164 _pause_start::
   0444                    1165 _pause:
                           1166 ;demo.c:151: uint8_t i,j,k = 0;
                           1167 ;demo.c:152: for (i = 0; i < 255; i++) {	
   0444 01 00 00           1168 	ld	bc,#0x0000
   0447                    1169 00104$:
   0447 78                 1170 	ld	a,b
   0448 D6 FF              1171 	sub	a,#0xFF
   044A D0                 1172 	ret	NC
                           1173 ;demo.c:153: for (j = 0; j < 255; j++) {
   044B 59                 1174 	ld	e,c
   044C 16 FF              1175 	ld	d,#0xFF
   044E                    1176 00103$:
                           1177 ;demo.c:154: k++;
   044E 1C                 1178 	inc	e
   044F 15                 1179 	dec	d
                           1180 ;demo.c:153: for (j = 0; j < 255; j++) {
   0450 AF                 1181 	xor	a,a
   0451 B2                 1182 	or	a,d
   0452 20 FA              1183 	jr	NZ,00103$
                           1184 ;demo.c:152: for (i = 0; i < 255; i++) {	
   0454 4B                 1185 	ld	c,e
   0455 04                 1186 	inc	b
   0456 18 EF              1187 	jr	00104$
   0458                    1188 _pause_end::
                           1189 ;demo.c:160: uint8_t raw_load(char *file_name, int size, char* buffer) {
                           1190 ;	---------------------------------
                           1191 ; Function raw_load
                           1192 ; ---------------------------------
   0458                    1193 _raw_load_start::
   0458                    1194 _raw_load:
   0458 DD E5              1195 	push	ix
   045A DD 21 00 00        1196 	ld	ix,#0
   045E DD 39              1197 	add	ix,sp
   0460 21 D2 FF           1198 	ld	hl,#-46
   0463 39                 1199 	add	hl,sp
   0464 F9                 1200 	ld	sp,hl
                           1201 ;demo.c:165: memset((uint8_t *) &f, 0, sizeof(fcb));
   0465 21 00 00           1202 	ld	hl,#0x0000
   0468 39                 1203 	add	hl,sp
   0469 4D                 1204 	ld	c,l
   046A 44                 1205 	ld	b,h
   046B 21 2E 00           1206 	ld	hl,#0x002E
   046E E5                 1207 	push	hl
   046F 3E 00              1208 	ld	a,#0x00
   0471 F5                 1209 	push	af
   0472 33                 1210 	inc	sp
   0473 C5                 1211 	push	bc
   0474 CDr00s00           1212 	call	_memset
   0477 F1                 1213 	pop	af
   0478 F1                 1214 	pop	af
   0479 33                 1215 	inc	sp
                           1216 ;demo.c:166: scratch_clear();
   047A CDr91s03           1217 	call	_scratch_clear
                           1218 ;demo.c:168: f.record_size = 128;
   047D 21 00 00           1219 	ld	hl,#0x0000
   0480 39                 1220 	add	hl,sp
   0481 4D                 1221 	ld	c,l
   0482 44                 1222 	ld	b,h
   0483 21 0F 00           1223 	ld	hl,#0x000F
   0486 09                 1224 	add	hl,bc
   0487 EB                 1225 	ex	de,hl
   0488 3E 80              1226 	ld	a,#0x80
   048A 12                 1227 	ld	(de),a
                           1228 ;demo.c:169: f.drive = 0;
   048B 3E 00              1229 	ld	a,#0x00
   048D 02                 1230 	ld	(bc),a
                           1231 ;demo.c:171: memcpy(f.name, file_name, 11);
   048E DD 5E 04           1232 	ld	e,4 (ix)
   0491 DD 56 05           1233 	ld	d,5 (ix)
   0494 03                 1234 	inc	bc
   0495 21 0B 00           1235 	ld	hl,#0x000B
   0498 E5                 1236 	push	hl
   0499 D5                 1237 	push	de
   049A C5                 1238 	push	bc
   049B CDr00s00           1239 	call	_memcpy
   049E F1                 1240 	pop	af
   049F F1                 1241 	pop	af
   04A0 F1                 1242 	pop	af
                           1243 ;demo.c:173: if (open(&f) != 0) return 0;
   04A1 21 00 00           1244 	ld	hl,#0x0000
   04A4 39                 1245 	add	hl,sp
   04A5 E5                 1246 	push	hl
   04A6 CDr00s00           1247 	call	_open
   04A9 F1                 1248 	pop	af
   04AA AF                 1249 	xor	a,a
   04AB B5                 1250 	or	a,l
   04AC 28 05              1251 	jr	Z,00116$
   04AE 2E 00              1252 	ld	l,#0x00
   04B0 C3r17s05           1253 	jp	00110$
                           1254 ;demo.c:175: while(total < size) {
   04B3                    1255 00116$:
   04B3 01 00 00           1256 	ld	bc,#0x0000
   04B6                    1257 00107$:
   04B6 79                 1258 	ld	a,c
   04B7 DD 96 06           1259 	sub	a,6 (ix)
   04BA 78                 1260 	ld	a,b
   04BB DD 9E 07           1261 	sbc	a,7 (ix)
   04BE F2r0Cs05           1262 	jp	P,00109$
                           1263 ;demo.c:176: if (block_set_data_ptr(scratch) != 0) return 0;
   04C1 C5                 1264 	push	bc
   04C2 21r80s3F           1265 	ld	hl,#_scratch
   04C5 E5                 1266 	push	hl
   04C6 CDr00s00           1267 	call	_block_set_data_ptr
   04C9 F1                 1268 	pop	af
   04CA 5D                 1269 	ld	e,l
   04CB C1                 1270 	pop	bc
   04CC AF                 1271 	xor	a,a
   04CD B3                 1272 	or	a,e
   04CE 28 04              1273 	jr	Z,00104$
   04D0 2E 00              1274 	ld	l,#0x00
   04D2 18 43              1275 	jr	00110$
   04D4                    1276 00104$:
                           1277 ;demo.c:177: if (block_read(&f) != 0) return 0;
   04D4 21 00 00           1278 	ld	hl,#0x0000
   04D7 39                 1279 	add	hl,sp
   04D8 C5                 1280 	push	bc
   04D9 E5                 1281 	push	hl
   04DA CDr00s00           1282 	call	_block_read
   04DD F1                 1283 	pop	af
   04DE 5D                 1284 	ld	e,l
   04DF C1                 1285 	pop	bc
   04E0 AF                 1286 	xor	a,a
   04E1 B3                 1287 	or	a,e
   04E2 28 04              1288 	jr	Z,00106$
   04E4 2E 00              1289 	ld	l,#0x00
   04E6 18 2F              1290 	jr	00110$
   04E8                    1291 00106$:
                           1292 ;demo.c:179: memcpy(buffer+total,scratch,incr);
   04E8 DD 7E 08           1293 	ld	a,8 (ix)
   04EB 81                 1294 	add	a,c
   04EC 5F                 1295 	ld	e,a
   04ED DD 7E 09           1296 	ld	a,9 (ix)
   04F0 88                 1297 	adc	a,b
   04F1 57                 1298 	ld	d,a
   04F2 C5                 1299 	push	bc
   04F3 21 80 00           1300 	ld	hl,#0x0080
   04F6 E5                 1301 	push	hl
   04F7 21r80s3F           1302 	ld	hl,#_scratch
   04FA E5                 1303 	push	hl
   04FB D5                 1304 	push	de
   04FC CDr00s00           1305 	call	_memcpy
   04FF F1                 1306 	pop	af
   0500 F1                 1307 	pop	af
   0501 F1                 1308 	pop	af
   0502 C1                 1309 	pop	bc
                           1310 ;demo.c:181: total+=incr;
   0503 21 80 00           1311 	ld	hl,#0x0080
   0506 09                 1312 	add	hl,bc
   0507 4D                 1313 	ld	c,l
   0508 44                 1314 	ld	b,h
   0509 C3rB6s04           1315 	jp	00107$
   050C                    1316 00109$:
                           1317 ;demo.c:184: close(&f);
   050C 21 00 00           1318 	ld	hl,#0x0000
   050F 39                 1319 	add	hl,sp
   0510 E5                 1320 	push	hl
   0511 CDr00s00           1321 	call	_close
   0514 F1                 1322 	pop	af
                           1323 ;demo.c:186: return 1;
   0515 2E 01              1324 	ld	l,#0x01
   0517                    1325 00110$:
   0517 DD F9              1326 	ld	sp,ix
   0519 DD E1              1327 	pop	ix
   051B C9                 1328 	ret
   051C                    1329 _raw_load_end::
                           1330 ;demo.c:189: void pck_load(char *file_name, int size, uint16_t address, int vram_offset) {
                           1331 ;	---------------------------------
                           1332 ; Function pck_load
                           1333 ; ---------------------------------
   051C                    1334 _pck_load_start::
   051C                    1335 _pck_load:
   051C DD E5              1336 	push	ix
   051E DD 21 00 00        1337 	ld	ix,#0
   0522 DD 39              1338 	add	ix,sp
                           1339 ;demo.c:190: memset((uint8_t *) &packbuffer, 0, size);
   0524 DD 4E 06           1340 	ld	c,6 (ix)
   0527 DD 46 07           1341 	ld	b,7 (ix)
   052A C5                 1342 	push	bc
   052B C5                 1343 	push	bc
   052C 3E 00              1344 	ld	a,#0x00
   052E F5                 1345 	push	af
   052F 33                 1346 	inc	sp
   0530 21r00s01           1347 	ld	hl,#_packbuffer
   0533 E5                 1348 	push	hl
   0534 CDr00s00           1349 	call	_memset
   0537 F1                 1350 	pop	af
   0538 F1                 1351 	pop	af
   0539 33                 1352 	inc	sp
   053A C1                 1353 	pop	bc
                           1354 ;demo.c:191: raw_load(file_name, size, packbuffer);
   053B 21r00s01           1355 	ld	hl,#_packbuffer
   053E E5                 1356 	push	hl
   053F C5                 1357 	push	bc
   0540 DD 6E 04           1358 	ld	l,4 (ix)
   0543 DD 66 05           1359 	ld	h,5 (ix)
   0546 E5                 1360 	push	hl
   0547 CDr58s04           1361 	call	_raw_load
   054A F1                 1362 	pop	af
   054B F1                 1363 	pop	af
   054C F1                 1364 	pop	af
                           1365 ;demo.c:192: bitbuster(packbuffer,address,vram_offset);
   054D DD 7E 0A           1366 	ld	a,10 (ix)
   0550 F5                 1367 	push	af
   0551 33                 1368 	inc	sp
   0552 DD 6E 08           1369 	ld	l,8 (ix)
   0555 DD 66 09           1370 	ld	h,9 (ix)
   0558 E5                 1371 	push	hl
   0559 21r00s01           1372 	ld	hl,#_packbuffer
   055C E5                 1373 	push	hl
   055D CDr00s00           1374 	call	_bitbuster
   0560 F1                 1375 	pop	af
   0561 F1                 1376 	pop	af
   0562 33                 1377 	inc	sp
   0563 DD E1              1378 	pop	ix
   0565 C9                 1379 	ret
   0566                    1380 _pck_load_end::
                           1381 ;demo.c:195: void fadein() {
                           1382 ;	---------------------------------
                           1383 ; Function fadein
                           1384 ; ---------------------------------
   0566                    1385 _fadein_start::
   0566                    1386 _fadein:
   0566 DD E5              1387 	push	ix
   0568 DD 21 00 00        1388 	ld	ix,#0
   056C DD 39              1389 	add	ix,sp
   056E F5                 1390 	push	af
                           1391 ;demo.c:198: if (tick < 4) return;
   056F 3Ar62s40           1392 	ld	a,(#_tick+0)
   0572 D6 04              1393 	sub	a,#0x04
   0574 3Ar63s40           1394 	ld	a,(#_tick+1)
   0577 DE 00              1395 	sbc	a,#0x00
   0579 F2r7Fs05           1396 	jp	P,00102$
   057C C3r2Ds06           1397 	jp	00113$
   057F                    1398 00102$:
                           1399 ;demo.c:200: tick = 0;
   057F 21r62s40           1400 	ld	hl,#_tick + 0
   0582 36 00              1401 	ld	(hl), #0x00
   0584 21r63s40           1402 	ld	hl,#_tick + 1
   0587 36 00              1403 	ld	(hl), #0x00
                           1404 ;demo.c:202: for(i = 0; i < 32; i+=2) {
   0589 0E 00              1405 	ld	c,#0x00
   058B                    1406 00109$:
   058B 79                 1407 	ld	a,c
   058C D6 20              1408 	sub	a,#0x20
   058E D2r25s06           1409 	jp	NC,00112$
                           1410 ;demo.c:203: uint8_t r = scratch[i] >> 4;
   0591 3Er80              1411 	ld	a,#<_scratch
   0593 81                 1412 	add	a,c
   0594 5F                 1413 	ld	e,a
   0595 3Es3F              1414 	ld	a,#>_scratch
   0597 CE 00              1415 	adc	a,#0x00
   0599 57                 1416 	ld	d,a
   059A 1A                 1417 	ld	a,(de)
   059B 47                 1418 	ld	b,a
   059C 58                 1419 	ld	e,b
   059D CB 3B              1420 	srl	e
   059F CB 3B              1421 	srl	e
   05A1 CB 3B              1422 	srl	e
   05A3 CB 3B              1423 	srl	e
                           1424 ;demo.c:204: uint8_t b = scratch[i] & 0xf;
   05A5 78                 1425 	ld	a,b
   05A6 E6 0F              1426 	and	a,#0x0F
   05A8 DD 77 FF           1427 	ld	-1 (ix),a
                           1428 ;demo.c:205: uint8_t g = scratch[i+1];
   05AB 51                 1429 	ld	d,c
   05AC 14                 1430 	inc	d
   05AD 3Er80              1431 	ld	a,#<_scratch
   05AF 82                 1432 	add	a,d
   05B0 6F                 1433 	ld	l,a
   05B1 3Es3F              1434 	ld	a,#>_scratch
   05B3 CE 00              1435 	adc	a,#0x00
   05B5 67                 1436 	ld	h,a
   05B6 56                 1437 	ld	d,(hl)
   05B7 DD 72 FE           1438 	ld	-2 (ix),d
                           1439 ;demo.c:207: if (r < (cur_palette[i] >> 4)) r++;
   05BA 3Er00              1440 	ld	a,#<_cur_palette
   05BC 81                 1441 	add	a,c
   05BD 6F                 1442 	ld	l,a
   05BE 3Es40              1443 	ld	a,#>_cur_palette
   05C0 CE 00              1444 	adc	a,#0x00
   05C2 67                 1445 	ld	h,a
   05C3 56                 1446 	ld	d,(hl)
   05C4 CB 3A              1447 	srl	d
   05C6 CB 3A              1448 	srl	d
   05C8 CB 3A              1449 	srl	d
   05CA CB 3A              1450 	srl	d
   05CC 7B                 1451 	ld	a,e
   05CD 92                 1452 	sub	a,d
   05CE 30 01              1453 	jr	NC,00104$
   05D0 1C                 1454 	inc	e
   05D1                    1455 00104$:
                           1456 ;demo.c:208: if (b < (cur_palette[i] & 0xf)) b++;
   05D1 3Er00              1457 	ld	a,#<_cur_palette
   05D3 81                 1458 	add	a,c
   05D4 6F                 1459 	ld	l,a
   05D5 3Es40              1460 	ld	a,#>_cur_palette
   05D7 CE 00              1461 	adc	a,#0x00
   05D9 67                 1462 	ld	h,a
   05DA 7E                 1463 	ld	a,(hl)
   05DB E6 0F              1464 	and	a,#0x0F
   05DD 47                 1465 	ld	b,a
   05DE DD 7E FF           1466 	ld	a,-1 (ix)
   05E1 90                 1467 	sub	a,b
   05E2 30 03              1468 	jr	NC,00106$
   05E4 DD 34 FF           1469 	inc	-1 (ix)
   05E7                    1470 00106$:
                           1471 ;demo.c:210: scratch[i] = (r << 4) | b;
   05E7 3Er80              1472 	ld	a,#<_scratch
   05E9 81                 1473 	add	a,c
   05EA 47                 1474 	ld	b,a
   05EB 3Es3F              1475 	ld	a,#>_scratch
   05ED CE 00              1476 	adc	a,#0x00
   05EF 57                 1477 	ld	d,a
   05F0 7B                 1478 	ld	a,e
   05F1 07                 1479 	rlca
   05F2 07                 1480 	rlca
   05F3 07                 1481 	rlca
   05F4 07                 1482 	rlca
   05F5 E6 F0              1483 	and	a,#0xF0
   05F7 DD B6 FF           1484 	or	a,-1 (ix)
   05FA 68                 1485 	ld	l,b
   05FB 62                 1486 	ld	h,d
   05FC 77                 1487 	ld	(hl),a
                           1488 ;demo.c:211: if (g < cur_palette[i+1]) scratch[i+1]++;
   05FD 41                 1489 	ld	b,c
   05FE 04                 1490 	inc	b
   05FF 3Er00              1491 	ld	a,#<_cur_palette
   0601 80                 1492 	add	a,b
   0602 5F                 1493 	ld	e,a
   0603 3Es40              1494 	ld	a,#>_cur_palette
   0605 CE 00              1495 	adc	a,#0x00
   0607 57                 1496 	ld	d,a
   0608 1A                 1497 	ld	a,(de)
   0609 5F                 1498 	ld	e,a
   060A DD 7E FE           1499 	ld	a,-2 (ix)
   060D 93                 1500 	sub	a,e
   060E 30 10              1501 	jr	NC,00111$
   0610 3Er80              1502 	ld	a,#<_scratch
   0612 80                 1503 	add	a,b
   0613 47                 1504 	ld	b,a
   0614 3Es3F              1505 	ld	a,#>_scratch
   0616 CE 00              1506 	adc	a,#0x00
   0618 5F                 1507 	ld	e,a
   0619 68                 1508 	ld	l,b
   061A 67                 1509 	ld	h,a
   061B 7E                 1510 	ld	a,(hl)
   061C 3C                 1511 	inc	a
   061D 68                 1512 	ld	l,b
   061E 63                 1513 	ld	h,e
   061F 77                 1514 	ld	(hl),a
   0620                    1515 00111$:
                           1516 ;demo.c:202: for(i = 0; i < 32; i+=2) {
   0620 0C                 1517 	inc	c
   0621 0C                 1518 	inc	c
   0622 C3r8Bs05           1519 	jp	00109$
   0625                    1520 00112$:
                           1521 ;demo.c:215: vdp_load_palette(scratch);
   0625 21r80s3F           1522 	ld	hl,#_scratch
   0628 E5                 1523 	push	hl
   0629 CDr00s00           1524 	call	_vdp_load_palette
   062C F1                 1525 	pop	af
   062D                    1526 00113$:
   062D DD F9              1527 	ld	sp,ix
   062F DD E1              1528 	pop	ix
   0631 C9                 1529 	ret
   0632                    1530 _fadein_end::
                           1531 ;demo.c:227: void do_ymmm() {
                           1532 ;	---------------------------------
                           1533 ; Function do_ymmm
                           1534 ; ---------------------------------
   0632                    1535 _do_ymmm_start::
   0632                    1536 _do_ymmm:
   0632 DD E5              1537 	push	ix
   0634 DD 21 00 00        1538 	ld	ix,#0
   0638 DD 39              1539 	add	ix,sp
   063A 21 EB FF           1540 	ld	hl,#-21
   063D 39                 1541 	add	hl,sp
   063E F9                 1542 	ld	sp,hl
                           1543 ;demo.c:232: if (tick > 32) { tick = 0; flipper++;}
   063F 3E 20              1544 	ld	a,#0x20
   0641 FD 21r62s40        1545 	ld	iy,#_tick
   0645 FD 96 00           1546 	sub	a,0 (iy)
   0648 3E 00              1547 	ld	a,#0x00
   064A FD 21r62s40        1548 	ld	iy,#_tick
   064E FD 9E 01           1549 	sbc	a,1 (iy)
   0651 F2r6Es06           1550 	jp	P,00102$
   0654 21r62s40           1551 	ld	hl,#_tick + 0
   0657 36 00              1552 	ld	(hl), #0x00
   0659 21r63s40           1553 	ld	hl,#_tick + 1
   065C 36 00              1554 	ld	(hl), #0x00
   065E FD 21r6Es40        1555 	ld	iy,#_flipper
   0662 FD 34 00           1556 	inc	0 (iy)
   0665 20 07              1557 	jr	NZ,00115$
   0667 FD 21r6Es40        1558 	ld	iy,#_flipper
   066B FD 34 01           1559 	inc	1 (iy)
   066E                    1560 00115$:
   066E                    1561 00102$:
                           1562 ;demo.c:233: if (flipper > 10) { flipper = 0;}
   066E 3E 0A              1563 	ld	a,#0x0A
   0670 FD 21r6Es40        1564 	ld	iy,#_flipper
   0674 FD 96 00           1565 	sub	a,0 (iy)
   0677 3E 00              1566 	ld	a,#0x00
   0679 FD 21r6Es40        1567 	ld	iy,#_flipper
   067D FD 9E 01           1568 	sbc	a,1 (iy)
   0680 F2r8Ds06           1569 	jp	P,00104$
   0683 21r6Es40           1570 	ld	hl,#_flipper + 0
   0686 36 00              1571 	ld	(hl), #0x00
   0688 21r6Fs40           1572 	ld	hl,#_flipper + 1
   068B 36 00              1573 	ld	(hl), #0x00
   068D                    1574 00104$:
                           1575 ;demo.c:235: ymmmf++;
   068D FD 21r70s40        1576 	ld	iy,#_ymmmf
   0691 FD 34 00           1577 	inc	0 (iy)
   0694 20 07              1578 	jr	NZ,00116$
   0696 FD 21r70s40        1579 	ld	iy,#_ymmmf
   069A FD 34 01           1580 	inc	1 (iy)
   069D                    1581 00116$:
                           1582 ;demo.c:236: for (yofff = 0; yofff<212-step;yofff+=step) {
   069D 21r6Cs40           1583 	ld	hl,#_yofff + 0
   06A0 36 00              1584 	ld	(hl), #0x00
   06A2                    1585 00105$:
   06A2 3Ar6Cs40           1586 	ld	a,(#_yofff+0)
   06A5 DD 77 ED           1587 	ld	-19 (ix),a
   06A8 DD 36 EE 00        1588 	ld	-18 (ix),#0x00
   06AC DD 7E ED           1589 	ld	a,-19 (ix)
   06AF D6 D2              1590 	sub	a,#0xD2
   06B1 DD 7E EE           1591 	ld	a,-18 (ix)
   06B4 DE 00              1592 	sbc	a,#0x00
   06B6 F2r62s07           1593 	jp	P,00109$
                           1594 ;demo.c:237: xo = (sintabx[(yofff+ymmmf) & 255]);
   06B9 21r70s40           1595 	ld	hl,#_ymmmf
   06BC DD 7E ED           1596 	ld	a,-19 (ix)
   06BF 86                 1597 	add	a,(hl)
   06C0 5F                 1598 	ld	e,a
   06C1 DD 7E EE           1599 	ld	a,-18 (ix)
   06C4 23                 1600 	inc	hl
   06C5 8E                 1601 	adc	a,(hl)
   06C6 16 00              1602 	ld	d,#0x00
   06C8 CB 23              1603 	sla	e
   06CA CB 12              1604 	rl	d
   06CC 21r2Cs00           1605 	ld	hl,#_sintabx
   06CF 19                 1606 	add	hl,de
   06D0 5E                 1607 	ld	e,(hl)
   06D1 23                 1608 	inc	hl
   06D2 56                 1609 	ld	d,(hl)
   06D3 DD 73 EF           1610 	ld	-17 (ix),e
   06D6 DD 72 F0           1611 	ld	-16 (ix),d
                           1612 ;demo.c:240: cmd.source_x = 0;
   06D9 21 06 00           1613 	ld	hl,#0x0006
   06DC 39                 1614 	add	hl,sp
   06DD 36 00              1615 	ld	(hl),#0x00
   06DF 23                 1616 	inc	hl
   06E0 36 00              1617 	ld	(hl),#0x00
                           1618 ;demo.c:241: cmd.source_y = 0+yofff;
   06E2 21 06 00           1619 	ld	hl,#0x0006
   06E5 39                 1620 	add	hl,sp
   06E6 EB                 1621 	ex	de,hl
   06E7 4B                 1622 	ld	c,e
   06E8 42                 1623 	ld	b,d
   06E9 69                 1624 	ld	l,c
   06EA 60                 1625 	ld	h,b
   06EB 23                 1626 	inc	hl
   06EC 23                 1627 	inc	hl
   06ED DD 7E ED           1628 	ld	a,-19 (ix)
   06F0 77                 1629 	ld	(hl),a
   06F1 23                 1630 	inc	hl
   06F2 DD 7E EE           1631 	ld	a,-18 (ix)
   06F5 77                 1632 	ld	(hl),a
                           1633 ;demo.c:242: cmd.dest_x = xo;
   06F6 21 04 00           1634 	ld	hl,#0x0004
   06F9 19                 1635 	add	hl,de
   06FA DD 7E EF           1636 	ld	a,-17 (ix)
   06FD 77                 1637 	ld	(hl),a
   06FE 23                 1638 	inc	hl
   06FF DD 7E F0           1639 	ld	a,-16 (ix)
   0702 77                 1640 	ld	(hl),a
                           1641 ;demo.c:243: cmd.dest_y = 3+yofff;
   0703 21 06 00           1642 	ld	hl,#0x0006
   0706 19                 1643 	add	hl,de
   0707 DD 75 EB           1644 	ld	-21 (ix),l
   070A DD 74 EC           1645 	ld	-20 (ix),h
   070D DD 7E ED           1646 	ld	a,-19 (ix)
   0710 C6 03              1647 	add	a,#0x03
   0712 4F                 1648 	ld	c,a
   0713 DD 7E EE           1649 	ld	a,-18 (ix)
   0716 CE 00              1650 	adc	a,#0x00
   0718 47                 1651 	ld	b,a
   0719 DD 6E EB           1652 	ld	l,-21 (ix)
   071C DD 66 EC           1653 	ld	h,-20 (ix)
   071F 71                 1654 	ld	(hl),c
   0720 23                 1655 	inc	hl
   0721 70                 1656 	ld	(hl),b
                           1657 ;demo.c:244: cmd.size_x = 256;
   0722 21 08 00           1658 	ld	hl,#0x0008
   0725 19                 1659 	add	hl,de
   0726 36 00              1660 	ld	(hl),#0x00
   0728 23                 1661 	inc	hl
   0729 36 01              1662 	ld	(hl),#0x01
                           1663 ;demo.c:245: cmd.size_y = 1;
   072B 21 0A 00           1664 	ld	hl,#0x000A
   072E 19                 1665 	add	hl,de
   072F 36 01              1666 	ld	(hl),#0x01
   0731 23                 1667 	inc	hl
   0732 36 00              1668 	ld	(hl),#0x00
                           1669 ;demo.c:246: cmd.data = 0;
   0734 21 0C 00           1670 	ld	hl,#0x000C
   0737 19                 1671 	add	hl,de
   0738 4D                 1672 	ld	c,l
   0739 44                 1673 	ld	b,h
   073A 3E 00              1674 	ld	a,#0x00
   073C 02                 1675 	ld	(bc),a
                           1676 ;demo.c:247: cmd.argument = 0;
   073D 21 0D 00           1677 	ld	hl,#0x000D
   0740 19                 1678 	add	hl,de
   0741 4D                 1679 	ld	c,l
   0742 44                 1680 	ld	b,h
   0743 3E 00              1681 	ld	a,#0x00
   0745 02                 1682 	ld	(bc),a
                           1683 ;demo.c:248: cmd.command = 0xD0;
   0746 21 0E 00           1684 	ld	hl,#0x000E
   0749 19                 1685 	add	hl,de
   074A 4D                 1686 	ld	c,l
   074B 44                 1687 	ld	b,h
   074C 3E D0              1688 	ld	a,#0xD0
   074E 02                 1689 	ld	(bc),a
                           1690 ;demo.c:251: vdp_copier(&cmd);
   074F D5                 1691 	push	de
   0750 CDr00s00           1692 	call	_vdp_copier
   0753 F1                 1693 	pop	af
                           1694 ;demo.c:236: for (yofff = 0; yofff<212-step;yofff+=step) {
   0754 21r6Cs40           1695 	ld	hl,#_yofff + 0
   0757 4E                 1696 	ld	c,(hl)
   0758 21r6Cs40           1697 	ld	hl,#_yofff
   075B 79                 1698 	ld	a,c
   075C C6 02              1699 	add	a,#0x02
   075E 77                 1700 	ld	(hl),a
   075F C3rA2s06           1701 	jp	00105$
   0762                    1702 00109$:
   0762 DD F9              1703 	ld	sp,ix
   0764 DD E1              1704 	pop	ix
   0766 C9                 1705 	ret
   0767                    1706 _do_ymmm_end::
                           1707 ;demo.c:268: void do_blocks() {
                           1708 ;	---------------------------------
                           1709 ; Function do_blocks
                           1710 ; ---------------------------------
   0767                    1711 _do_blocks_start::
   0767                    1712 _do_blocks:
   0767 DD E5              1713 	push	ix
   0769 DD 21 00 00        1714 	ld	ix,#0
   076D DD 39              1715 	add	ix,sp
   076F 21 E9 FF           1716 	ld	hl,#-23
   0772 39                 1717 	add	hl,sp
   0773 F9                 1718 	ld	sp,hl
                           1719 ;demo.c:271: int ys = 0;
   0774 DD 36 ED 00        1720 	ld	-19 (ix),#0x00
   0778 DD 36 EE 00        1721 	ld	-18 (ix),#0x00
                           1722 ;demo.c:272: int ye = 0;
   077C DD 36 EB 00        1723 	ld	-21 (ix),#0x00
   0780 DD 36 EC 00        1724 	ld	-20 (ix),#0x00
                           1725 ;demo.c:274: vdp_register(VDP_VOFFSET,0);
   0784 21 17 00           1726 	ld	hl,#0x0017
   0787 E5                 1727 	push	hl
   0788 CDr00s00           1728 	call	_vdp_register
   078B F1                 1729 	pop	af
                           1730 ;demo.c:276: if (block_init == 0) {
   078C AF                 1731 	xor	a,a
   078D FD 21r72s40        1732 	ld	iy,#_block_init
   0791 FD B6 00           1733 	or	a,0 (iy)
   0794 C2rFCs07           1734 	jp	NZ,00108$
                           1735 ;demo.c:278: vdp_set_screen5();
   0797 CDr00s00           1736 	call	_vdp_set_screen5
                           1737 ;demo.c:280: vdp_register(2, 0x5F);
   079A 21 02 5F           1738 	ld	hl,#0x5F02
   079D E5                 1739 	push	hl
   079E CDr00s00           1740 	call	_vdp_register
   07A1 F1                 1741 	pop	af
                           1742 ;demo.c:282: for(i=0;i<16;i++) btab[i] = i*16;
   07A2 DD 36 EF 00        1743 	ld	-17 (ix),#0x00
   07A6 DD 36 F0 00        1744 	ld	-16 (ix),#0x00
   07AA                    1745 00110$:
   07AA DD 7E EF           1746 	ld	a,-17 (ix)
   07AD D6 10              1747 	sub	a,#0x10
   07AF DD 7E F0           1748 	ld	a,-16 (ix)
   07B2 DE 00              1749 	sbc	a,#0x00
   07B4 F2rECs07           1750 	jp	P,00113$
   07B7 DD 4E EF           1751 	ld	c,-17 (ix)
   07BA DD 46 F0           1752 	ld	b,-16 (ix)
   07BD CB 21              1753 	sla	c
   07BF CB 10              1754 	rl	b
   07C1 21r7Bs40           1755 	ld	hl,#_btab
   07C4 09                 1756 	add	hl,bc
   07C5 4D                 1757 	ld	c,l
   07C6 44                 1758 	ld	b,h
   07C7 DD 5E EF           1759 	ld	e,-17 (ix)
   07CA DD 56 F0           1760 	ld	d,-16 (ix)
   07CD CB 23              1761 	sla	e
   07CF CB 12              1762 	rl	d
   07D1 CB 23              1763 	sla	e
   07D3 CB 12              1764 	rl	d
   07D5 CB 23              1765 	sla	e
   07D7 CB 12              1766 	rl	d
   07D9 CB 23              1767 	sla	e
   07DB CB 12              1768 	rl	d
   07DD 69                 1769 	ld	l,c
   07DE 60                 1770 	ld	h,b
   07DF 73                 1771 	ld	(hl),e
   07E0 23                 1772 	inc	hl
   07E1 72                 1773 	ld	(hl),d
   07E2 DD 34 EF           1774 	inc	-17 (ix)
   07E5 20 03              1775 	jr	NZ,00139$
   07E7 DD 34 F0           1776 	inc	-16 (ix)
   07EA                    1777 00139$:
   07EA 18 BE              1778 	jr	00110$
   07EC                    1779 00113$:
                           1780 ;demo.c:283: vdp_load_palette(block_palette);
   07EC 21r20s40           1781 	ld	hl,#_block_palette
   07EF E5                 1782 	push	hl
   07F0 CDr00s00           1783 	call	_vdp_load_palette
   07F3 F1                 1784 	pop	af
                           1785 ;demo.c:285: block_init = 1;
   07F4 21r72s40           1786 	ld	hl,#_block_init + 0
   07F7 36 01              1787 	ld	(hl), #0x01
   07F9 C3rBBs09           1788 	jp	00122$
   07FC                    1789 00108$:
                           1790 ;demo.c:289: if (flof == 0) { ys = 0; ye = 8; }
   07FC 3Ar9Bs40           1791 	ld	a,(#_flof+0)
   07FF FD 21r9Bs40        1792 	ld	iy,#_flof
   0803 FD B6 01           1793 	or	a,1 (iy)
   0806 20 10              1794 	jr	NZ,00102$
   0808 DD 36 ED 00        1795 	ld	-19 (ix),#0x00
   080C DD 36 EE 00        1796 	ld	-18 (ix),#0x00
   0810 DD 36 EB 08        1797 	ld	-21 (ix),#0x08
   0814 DD 36 EC 00        1798 	ld	-20 (ix),#0x00
   0818                    1799 00102$:
                           1800 ;demo.c:290: if (flof == 1) { ys = 8; ye = 16; }
   0818 3Ar9Bs40           1801 	ld	a,(#_flof+0)
   081B D6 01              1802 	sub	a,#0x01
   081D 20 06              1803 	jr	NZ,00140$
   081F 3Ar9Cs40           1804 	ld	a,(#_flof+1)
   0822 B7                 1805 	or	a,a
   0823 28 02              1806 	jr	Z,00141$
   0825                    1807 00140$:
   0825 18 10              1808 	jr	00104$
   0827                    1809 00141$:
   0827 DD 36 ED 08        1810 	ld	-19 (ix),#0x08
   082B DD 36 EE 00        1811 	ld	-18 (ix),#0x00
   082F DD 36 EB 10        1812 	ld	-21 (ix),#0x10
   0833 DD 36 EC 00        1813 	ld	-20 (ix),#0x00
   0837                    1814 00104$:
                           1815 ;demo.c:292: for(bty=3;bty<11;bty++) {
   0837 FD 21r79s40        1816 	ld	iy,#_bty
   083B FD 36 00 03        1817 	ld	0 (iy),#0x03
   083F FD 21r79s40        1818 	ld	iy,#_bty
   0843 FD 36 01 00        1819 	ld	1 (iy),#0x00
   0847                    1820 00118$:
   0847 3Ar79s40           1821 	ld	a,(#_bty+0)
   084A D6 0B              1822 	sub	a,#0x0B
   084C 3Ar7As40           1823 	ld	a,(#_bty+1)
   084F DE 00              1824 	sbc	a,#0x00
   0851 F2r92s09           1825 	jp	P,00121$
                           1826 ;demo.c:293: for(btx=ys;btx<ye;btx++) {
   0854 DD 7E ED           1827 	ld	a,-19 (ix)
   0857 FD 21r77s40        1828 	ld	iy,#_btx
   085B FD 77 00           1829 	ld	0 (iy),a
   085E DD 7E EE           1830 	ld	a,-18 (ix)
   0861 FD 21r77s40        1831 	ld	iy,#_btx
   0865 FD 77 01           1832 	ld	1 (iy),a
   0868                    1833 00114$:
   0868 3Ar77s40           1834 	ld	a,(#_btx+0)
   086B DD 96 EB           1835 	sub	a,-21 (ix)
   086E 3Ar78s40           1836 	ld	a,(#_btx+1)
   0871 DD 9E EC           1837 	sbc	a,-20 (ix)
   0874 F2r7Fs09           1838 	jp	P,00120$
                           1839 ;demo.c:294: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0877 3Ar00s00           1840 	ld	a,(#_PLY_PSGReg8+0)
   087A FD 21r00s00        1841 	ld	iy,#_PLY_PSGReg9
   087E FD A6 00           1842 	and	a,0 (iy)
   0881 21r00s00           1843 	ld	hl,#_PLY_PSGReg10 + 0
   0884 B6                 1844 	or	a,(hl)
   0885 4F                 1845 	ld	c,a
   0886 CB 39              1846 	srl	c
   0888 21r73s40           1847 	ld	hl,#_bsx + 0
   088B 71                 1848 	ld	(hl), c
   088C 21r74s40           1849 	ld	hl,#_bsx + 1
   088F 36 00              1850 	ld	(hl), #0x00
                           1851 ;demo.c:295: bsy = PLY_PSGReg10;
   0891 3Ar00s00           1852 	ld	a,(#_PLY_PSGReg10+0)
   0894 21r75s40           1853 	ld	hl,#_bsy + 0
   0897 77                 1854 	ld	(hl), a
   0898 21r76s40           1855 	ld	hl,#_bsy + 1
   089B 36 00              1856 	ld	(hl), #0x00
                           1857 ;demo.c:296: cmd.source_x = btab[bsx];
   089D 21 08 00           1858 	ld	hl,#0x0008
   08A0 39                 1859 	add	hl,sp
   08A1 4D                 1860 	ld	c,l
   08A2 44                 1861 	ld	b,h
   08A3 21r73s40           1862 	ld	hl,#_bsx + 0
   08A6 5E                 1863 	ld	e,(hl)
   08A7 21r74s40           1864 	ld	hl,#_bsx + 1
   08AA 56                 1865 	ld	d,(hl)
   08AB CB 23              1866 	sla	e
   08AD CB 12              1867 	rl	d
   08AF 21r7Bs40           1868 	ld	hl,#_btab
   08B2 19                 1869 	add	hl,de
   08B3 5E                 1870 	ld	e,(hl)
   08B4 23                 1871 	inc	hl
   08B5 56                 1872 	ld	d,(hl)
   08B6 69                 1873 	ld	l,c
   08B7 60                 1874 	ld	h,b
   08B8 73                 1875 	ld	(hl),e
   08B9 23                 1876 	inc	hl
   08BA 72                 1877 	ld	(hl),d
                           1878 ;demo.c:297: cmd.source_y = 768+btab[bsy];
   08BB 21 08 00           1879 	ld	hl,#0x0008
   08BE 39                 1880 	add	hl,sp
   08BF 4D                 1881 	ld	c,l
   08C0 44                 1882 	ld	b,h
   08C1 21 02 00           1883 	ld	hl,#0x0002
   08C4 09                 1884 	add	hl,bc
   08C5 DD 75 E9           1885 	ld	-23 (ix),l
   08C8 DD 74 EA           1886 	ld	-22 (ix),h
   08CB 21r75s40           1887 	ld	hl,#_bsy + 0
   08CE 5E                 1888 	ld	e,(hl)
   08CF 21r76s40           1889 	ld	hl,#_bsy + 1
   08D2 56                 1890 	ld	d,(hl)
   08D3 CB 23              1891 	sla	e
   08D5 CB 12              1892 	rl	d
   08D7 21r7Bs40           1893 	ld	hl,#_btab
   08DA 19                 1894 	add	hl,de
   08DB 5E                 1895 	ld	e,(hl)
   08DC 23                 1896 	inc	hl
   08DD 56                 1897 	ld	d,(hl)
   08DE 21 00 03           1898 	ld	hl,#0x0300
   08E1 19                 1899 	add	hl,de
   08E2 EB                 1900 	ex	de,hl
   08E3 DD 6E E9           1901 	ld	l,-23 (ix)
   08E6 DD 66 EA           1902 	ld	h,-22 (ix)
   08E9 73                 1903 	ld	(hl),e
   08EA 23                 1904 	inc	hl
   08EB 72                 1905 	ld	(hl),d
                           1906 ;demo.c:298: cmd.dest_x = btab[btx];
   08EC 21 04 00           1907 	ld	hl,#0x0004
   08EF 09                 1908 	add	hl,bc
   08F0 DD 75 E9           1909 	ld	-23 (ix),l
   08F3 DD 74 EA           1910 	ld	-22 (ix),h
   08F6 21r77s40           1911 	ld	hl,#_btx + 0
   08F9 5E                 1912 	ld	e,(hl)
   08FA 21r78s40           1913 	ld	hl,#_btx + 1
   08FD 56                 1914 	ld	d,(hl)
   08FE CB 23              1915 	sla	e
   0900 CB 12              1916 	rl	d
   0902 21r7Bs40           1917 	ld	hl,#_btab
   0905 19                 1918 	add	hl,de
   0906 5E                 1919 	ld	e,(hl)
   0907 23                 1920 	inc	hl
   0908 56                 1921 	ld	d,(hl)
   0909 DD 6E E9           1922 	ld	l,-23 (ix)
   090C DD 66 EA           1923 	ld	h,-22 (ix)
   090F 73                 1924 	ld	(hl),e
   0910 23                 1925 	inc	hl
   0911 72                 1926 	ld	(hl),d
                           1927 ;demo.c:299: cmd.dest_y = 512+btab[bty];
   0912 21 06 00           1928 	ld	hl,#0x0006
   0915 09                 1929 	add	hl,bc
   0916 DD 75 E9           1930 	ld	-23 (ix),l
   0919 DD 74 EA           1931 	ld	-22 (ix),h
   091C 21r79s40           1932 	ld	hl,#_bty + 0
   091F 5E                 1933 	ld	e,(hl)
   0920 21r7As40           1934 	ld	hl,#_bty + 1
   0923 56                 1935 	ld	d,(hl)
   0924 CB 23              1936 	sla	e
   0926 CB 12              1937 	rl	d
   0928 21r7Bs40           1938 	ld	hl,#_btab
   092B 19                 1939 	add	hl,de
   092C 5E                 1940 	ld	e,(hl)
   092D 23                 1941 	inc	hl
   092E 56                 1942 	ld	d,(hl)
   092F 21 00 02           1943 	ld	hl,#0x0200
   0932 19                 1944 	add	hl,de
   0933 EB                 1945 	ex	de,hl
   0934 DD 6E E9           1946 	ld	l,-23 (ix)
   0937 DD 66 EA           1947 	ld	h,-22 (ix)
   093A 73                 1948 	ld	(hl),e
   093B 23                 1949 	inc	hl
   093C 72                 1950 	ld	(hl),d
                           1951 ;demo.c:300: cmd.size_x = 16;
   093D 21 08 00           1952 	ld	hl,#0x0008
   0940 09                 1953 	add	hl,bc
   0941 36 10              1954 	ld	(hl),#0x10
   0943 23                 1955 	inc	hl
   0944 36 00              1956 	ld	(hl),#0x00
                           1957 ;demo.c:301: cmd.size_y = 16;
   0946 21 0A 00           1958 	ld	hl,#0x000A
   0949 09                 1959 	add	hl,bc
   094A 36 10              1960 	ld	(hl),#0x10
   094C 23                 1961 	inc	hl
   094D 36 00              1962 	ld	(hl),#0x00
                           1963 ;demo.c:302: cmd.data = 0;
   094F 21 0C 00           1964 	ld	hl,#0x000C
   0952 09                 1965 	add	hl,bc
   0953 EB                 1966 	ex	de,hl
   0954 3E 00              1967 	ld	a,#0x00
   0956 12                 1968 	ld	(de),a
                           1969 ;demo.c:303: cmd.argument = 0x00;
   0957 21 0D 00           1970 	ld	hl,#0x000D
   095A 09                 1971 	add	hl,bc
   095B EB                 1972 	ex	de,hl
   095C 3E 00              1973 	ld	a,#0x00
   095E 12                 1974 	ld	(de),a
                           1975 ;demo.c:304: cmd.command = 0xD0;
   095F 21 0E 00           1976 	ld	hl,#0x000E
   0962 09                 1977 	add	hl,bc
   0963 EB                 1978 	ex	de,hl
   0964 3E D0              1979 	ld	a,#0xD0
   0966 12                 1980 	ld	(de),a
                           1981 ;demo.c:305: vdp_copier(&cmd);
   0967 C5                 1982 	push	bc
   0968 CDr00s00           1983 	call	_vdp_copier
   096B F1                 1984 	pop	af
                           1985 ;demo.c:293: for(btx=ys;btx<ye;btx++) {
   096C FD 21r77s40        1986 	ld	iy,#_btx
   0970 FD 34 00           1987 	inc	0 (iy)
   0973 20 07              1988 	jr	NZ,00150$
   0975 FD 21r77s40        1989 	ld	iy,#_btx
   0979 FD 34 01           1990 	inc	1 (iy)
   097C                    1991 00150$:
   097C C3r68s08           1992 	jp	00114$
   097F                    1993 00120$:
                           1994 ;demo.c:292: for(bty=3;bty<11;bty++) {
   097F FD 21r79s40        1995 	ld	iy,#_bty
   0983 FD 34 00           1996 	inc	0 (iy)
   0986 20 07              1997 	jr	NZ,00151$
   0988 FD 21r79s40        1998 	ld	iy,#_bty
   098C FD 34 01           1999 	inc	1 (iy)
   098F                    2000 00151$:
   098F C3r47s08           2001 	jp	00118$
   0992                    2002 00121$:
                           2003 ;demo.c:309: flof++;
   0992 FD 21r9Bs40        2004 	ld	iy,#_flof
   0996 FD 34 00           2005 	inc	0 (iy)
   0999 20 07              2006 	jr	NZ,00152$
   099B FD 21r9Bs40        2007 	ld	iy,#_flof
   099F FD 34 01           2008 	inc	1 (iy)
   09A2                    2009 00152$:
                           2010 ;demo.c:310: if (flof == 2) flof = 0;
   09A2 3Ar9Bs40           2011 	ld	a,(#_flof+0)
   09A5 D6 02              2012 	sub	a,#0x02
   09A7 20 06              2013 	jr	NZ,00153$
   09A9 3Ar9Cs40           2014 	ld	a,(#_flof+1)
   09AC B7                 2015 	or	a,a
   09AD 28 02              2016 	jr	Z,00154$
   09AF                    2017 00153$:
   09AF 18 0A              2018 	jr	00122$
   09B1                    2019 00154$:
   09B1 21r9Bs40           2020 	ld	hl,#_flof + 0
   09B4 36 00              2021 	ld	(hl), #0x00
   09B6 21r9Cs40           2022 	ld	hl,#_flof + 1
   09B9 36 00              2023 	ld	(hl), #0x00
   09BB                    2024 00122$:
   09BB DD F9              2025 	ld	sp,ix
   09BD DD E1              2026 	pop	ix
   09BF C9                 2027 	ret
   09C0                    2028 _do_blocks_end::
                           2029 ;demo.c:318: void raster_effu() {
                           2030 ;	---------------------------------
                           2031 ; Function raster_effu
                           2032 ; ---------------------------------
   09C0                    2033 _raster_effu_start::
   09C0                    2034 _raster_effu:
                           2035 ;demo.c:319: vdp_register(VDP_VOFFSET,0);
   09C0 21 17 00           2036 	ld	hl,#0x0017
   09C3 E5                 2037 	push	hl
   09C4 CDr00s00           2038 	call	_vdp_register
   09C7 F1                 2039 	pop	af
                           2040 ;demo.c:320: waitVB();
   09C8 76                 2041 		halt 
                           2042 ;demo.c:322: vdp_register(1,0x40); // disable vblank
   09C9 21 01 40           2043 	ld	hl,#0x4001
   09CC E5                 2044 	push	hl
   09CD CDr00s00           2045 	call	_vdp_register
                           2046 ;demo.c:324: for (linenum = 40; linenum < 212; linenum+=4) {
   09D0 3E 28              2047 	ld	a,#0x28
   09D2 32r9Ds40           2048 	ld	(#_linenum + 0),a
   09D5 F1                 2049 	pop	af
   09D6 FD 21r9Ds40        2050 	ld	iy,#_linenum
   09DA FD 36 01 00        2051 	ld	1 (iy),#0x00
   09DE                    2052 00101$:
   09DE 3Ar9Ds40           2053 	ld	a,(#_linenum+0)
   09E1 D6 D4              2054 	sub	a,#0xD4
   09E3 3Ar9Es40           2055 	ld	a,(#_linenum+1)
   09E6 DE 00              2056 	sbc	a,#0x00
   09E8 F2r19s0A           2057 	jp	P,00104$
                           2058 ;demo.c:325: vdp_register(19,linenum); // interrupt on line
   09EB 3Ar9Ds40           2059 	ld	a,(#_linenum+0)
   09EE F5                 2060 	push	af
   09EF 33                 2061 	inc	sp
   09F0 3E 13              2062 	ld	a,#0x13
   09F2 F5                 2063 	push	af
   09F3 33                 2064 	inc	sp
   09F4 CDr00s00           2065 	call	_vdp_register
   09F7 F1                 2066 	pop	af
                           2067 ;demo.c:326: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   09F8 21 00 16           2068 	ld	hl,#0x1600
   09FB E5                 2069 	push	hl
   09FC CDr00s00           2070 	call	_vdp_register
   09FF F1                 2071 	pop	af
                           2072 ;demo.c:328: waitVB();
   0A00 76                 2073 		halt 
                           2074 ;demo.c:324: for (linenum = 40; linenum < 212; linenum+=4) {
   0A01 21r9Ds40           2075 	ld	hl,#_linenum
   0A04 7E                 2076 	ld	a,(hl)
   0A05 C6 04              2077 	add	a,#0x04
   0A07 23                 2078 	inc	hl
   0A08 2B                 2079 	dec	hl
   0A09 C5                 2080 	push	bc
   0A0A 4F                 2081 	ld	c, a
   0A0B 23                 2082 	inc	hl
   0A0C 7E                 2083 	ld	a, (hl)
   0A0D 47                 2084 	ld	b, a
   0A0E 79                 2085 	ld	a, c
   0A0F 2B                 2086 	dec	hl
   0A10 77                 2087 	ld	(hl), a
   0A11 78                 2088 	ld	a, b
   0A12 C1                 2089 	pop	bc
   0A13 CE 00              2090 	adc	a,#0x00
   0A15 23                 2091 	inc	hl
   0A16 77                 2092 	ld	(hl),a
   0A17 18 C5              2093 	jr	00101$
   0A19                    2094 00104$:
                           2095 ;demo.c:331: vdp_register(VDP_VOFFSET,0);
   0A19 21 17 00           2096 	ld	hl,#0x0017
   0A1C E5                 2097 	push	hl
   0A1D CDr00s00           2098 	call	_vdp_register
   0A20 F1                 2099 	pop	af
                           2100 ;demo.c:345: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0A21 21 00 06           2101 	ld	hl,#0x0600
   0A24 E5                 2102 	push	hl
   0A25 CDr00s00           2103 	call	_vdp_register
   0A28 F1                 2104 	pop	af
                           2105 ;demo.c:346: vdp_register(1,0x60); // enable vblank
   0A29 21 01 60           2106 	ld	hl,#0x6001
   0A2C E5                 2107 	push	hl
   0A2D CDr00s00           2108 	call	_vdp_register
   0A30 F1                 2109 	pop	af
   0A31 C9                 2110 	ret
   0A32                    2111 _raster_effu_end::
                           2112 ;demo.c:377: void do_letter(char cc) {
                           2113 ;	---------------------------------
                           2114 ; Function do_letter
                           2115 ; ---------------------------------
   0A32                    2116 _do_letter_start::
   0A32                    2117 _do_letter:
   0A32 DD E5              2118 	push	ix
   0A34 DD 21 00 00        2119 	ld	ix,#0
   0A38 DD 39              2120 	add	ix,sp
   0A3A 21 ED FF           2121 	ld	hl,#-19
   0A3D 39                 2122 	add	hl,sp
   0A3E F9                 2123 	ld	sp,hl
                           2124 ;demo.c:379: int cidx = cc - 65;
   0A3F DD 4E 04           2125 	ld	c,4 (ix)
   0A42 DD 7E 04           2126 	ld	a,4 (ix)
   0A45 17                 2127 	rla	
   0A46 9F                 2128 	sbc	a,a
   0A47 47                 2129 	ld	b,a
   0A48 79                 2130 	ld	a,c
   0A49 C6 BF              2131 	add	a,#0xBF
   0A4B DD 77 EF           2132 	ld	-17 (ix),a
   0A4E 78                 2133 	ld	a,b
   0A4F CE FF              2134 	adc	a,#0xFF
   0A51 DD 77 F0           2135 	ld	-16 (ix),a
                           2136 ;demo.c:380: cmd.source_x = 127+font_x[cidx];
   0A54 21 04 00           2137 	ld	hl,#0x0004
   0A57 39                 2138 	add	hl,sp
   0A58 EB                 2139 	ex	de,hl
   0A59 3Er2E              2140 	ld	a,#<_font_x
   0A5B DD 86 EF           2141 	add	a,-17 (ix)
   0A5E 4F                 2142 	ld	c,a
   0A5F 3Es0B              2143 	ld	a,#>_font_x
   0A61 DD 8E F0           2144 	adc	a,-16 (ix)
   0A64 47                 2145 	ld	b,a
   0A65 0A                 2146 	ld	a,(bc)
   0A66 4F                 2147 	ld	c,a
   0A67 06 00              2148 	ld	b,#0x00
   0A69 21 7F 00           2149 	ld	hl,#0x007F
   0A6C 09                 2150 	add	hl,bc
   0A6D 4D                 2151 	ld	c,l
   0A6E 44                 2152 	ld	b,h
   0A6F EB                 2153 	ex	de,hl
   0A70 71                 2154 	ld	(hl),c
   0A71 23                 2155 	inc	hl
   0A72 70                 2156 	ld	(hl),b
                           2157 ;demo.c:381: cmd.source_y = 512+font_y[cidx];
   0A73 21 04 00           2158 	ld	hl,#0x0004
   0A76 39                 2159 	add	hl,sp
   0A77 4D                 2160 	ld	c,l
   0A78 44                 2161 	ld	b,h
   0A79 21 02 00           2162 	ld	hl,#0x0002
   0A7C 09                 2163 	add	hl,bc
   0A7D DD 75 ED           2164 	ld	-19 (ix),l
   0A80 DD 74 EE           2165 	ld	-18 (ix),h
   0A83 3Er6E              2166 	ld	a,#<_font_y
   0A85 DD 86 EF           2167 	add	a,-17 (ix)
   0A88 5F                 2168 	ld	e,a
   0A89 3Es0B              2169 	ld	a,#>_font_y
   0A8B DD 8E F0           2170 	adc	a,-16 (ix)
   0A8E 57                 2171 	ld	d,a
   0A8F 1A                 2172 	ld	a,(de)
   0A90 5F                 2173 	ld	e,a
   0A91 16 00              2174 	ld	d,#0x00
   0A93 21 00 02           2175 	ld	hl,#0x0200
   0A96 19                 2176 	add	hl,de
   0A97 EB                 2177 	ex	de,hl
   0A98 DD 6E ED           2178 	ld	l,-19 (ix)
   0A9B DD 66 EE           2179 	ld	h,-18 (ix)
   0A9E 73                 2180 	ld	(hl),e
   0A9F 23                 2181 	inc	hl
   0AA0 72                 2182 	ld	(hl),d
                           2183 ;demo.c:382: cmd.dest_x = lx;
   0AA1 21 04 00           2184 	ld	hl,#0x0004
   0AA4 09                 2185 	add	hl,bc
   0AA5 DD 75 ED           2186 	ld	-19 (ix),l
   0AA8 DD 74 EE           2187 	ld	-18 (ix),h
   0AAB 21r9Fs40           2188 	ld	hl,#_lx + 0
   0AAE 5E                 2189 	ld	e,(hl)
   0AAF 16 00              2190 	ld	d,#0x00
   0AB1 DD 6E ED           2191 	ld	l,-19 (ix)
   0AB4 DD 66 EE           2192 	ld	h,-18 (ix)
   0AB7 73                 2193 	ld	(hl),e
   0AB8 23                 2194 	inc	hl
   0AB9 72                 2195 	ld	(hl),d
                           2196 ;demo.c:383: cmd.dest_y = ly;
   0ABA 21 06 00           2197 	ld	hl,#0x0006
   0ABD 09                 2198 	add	hl,bc
   0ABE DD 75 ED           2199 	ld	-19 (ix),l
   0AC1 DD 74 EE           2200 	ld	-18 (ix),h
   0AC4 21rA0s40           2201 	ld	hl,#_ly + 0
   0AC7 5E                 2202 	ld	e,(hl)
   0AC8 16 00              2203 	ld	d,#0x00
   0ACA DD 6E ED           2204 	ld	l,-19 (ix)
   0ACD DD 66 EE           2205 	ld	h,-18 (ix)
   0AD0 73                 2206 	ld	(hl),e
   0AD1 23                 2207 	inc	hl
   0AD2 72                 2208 	ld	(hl),d
                           2209 ;demo.c:384: cmd.size_x = font_w[cidx];
   0AD3 21 08 00           2210 	ld	hl,#0x0008
   0AD6 09                 2211 	add	hl,bc
   0AD7 DD 75 ED           2212 	ld	-19 (ix),l
   0ADA DD 74 EE           2213 	ld	-18 (ix),h
   0ADD 3ErAE              2214 	ld	a,#<_font_w
   0ADF DD 86 EF           2215 	add	a,-17 (ix)
   0AE2 5F                 2216 	ld	e,a
   0AE3 3Es0B              2217 	ld	a,#>_font_w
   0AE5 DD 8E F0           2218 	adc	a,-16 (ix)
   0AE8 57                 2219 	ld	d,a
   0AE9 1A                 2220 	ld	a,(de)
   0AEA 5F                 2221 	ld	e,a
   0AEB 16 00              2222 	ld	d,#0x00
   0AED DD 6E ED           2223 	ld	l,-19 (ix)
   0AF0 DD 66 EE           2224 	ld	h,-18 (ix)
   0AF3 73                 2225 	ld	(hl),e
   0AF4 23                 2226 	inc	hl
   0AF5 72                 2227 	ld	(hl),d
                           2228 ;demo.c:385: cmd.size_y = 8;
   0AF6 21 0A 00           2229 	ld	hl,#0x000A
   0AF9 09                 2230 	add	hl,bc
   0AFA 36 08              2231 	ld	(hl),#0x08
   0AFC 23                 2232 	inc	hl
   0AFD 36 00              2233 	ld	(hl),#0x00
                           2234 ;demo.c:386: cmd.argument = 0x00;
   0AFF 21 0D 00           2235 	ld	hl,#0x000D
   0B02 09                 2236 	add	hl,bc
   0B03 EB                 2237 	ex	de,hl
   0B04 3E 00              2238 	ld	a,#0x00
   0B06 12                 2239 	ld	(de),a
                           2240 ;demo.c:387: cmd.command = 0x90; // logical vram to vram
   0B07 21 0E 00           2241 	ld	hl,#0x000E
   0B0A 09                 2242 	add	hl,bc
   0B0B EB                 2243 	ex	de,hl
   0B0C 3E 90              2244 	ld	a,#0x90
   0B0E 12                 2245 	ld	(de),a
                           2246 ;demo.c:388: vdp_copier(&cmd);
   0B0F C5                 2247 	push	bc
   0B10 CDr00s00           2248 	call	_vdp_copier
   0B13 F1                 2249 	pop	af
                           2250 ;demo.c:389: lx+=font_w[cidx]-1;
   0B14 3ErAE              2251 	ld	a,#<_font_w
   0B16 DD 86 EF           2252 	add	a,-17 (ix)
   0B19 4F                 2253 	ld	c,a
   0B1A 3Es0B              2254 	ld	a,#>_font_w
   0B1C DD 8E F0           2255 	adc	a,-16 (ix)
   0B1F 47                 2256 	ld	b,a
   0B20 0A                 2257 	ld	a,(bc)
   0B21 4F                 2258 	ld	c,a
   0B22 0D                 2259 	dec	c
   0B23 21r9Fs40           2260 	ld	hl,#_lx
   0B26 7E                 2261 	ld	a,(hl)
   0B27 81                 2262 	add	a,c
   0B28 77                 2263 	ld	(hl),a
   0B29 DD F9              2264 	ld	sp,ix
   0B2B DD E1              2265 	pop	ix
   0B2D C9                 2266 	ret
   0B2E                    2267 _do_letter_end::
   0B2E                    2268 _font_x:
   0B2E 01                 2269 	.db #0x01
   0B2F 09                 2270 	.db #0x09
   0B30 11                 2271 	.db #0x11
   0B31 19                 2272 	.db #0x19
   0B32 21                 2273 	.db #0x21
   0B33 29                 2274 	.db #0x29
   0B34 31                 2275 	.db #0x31
   0B35 39                 2276 	.db #0x39
   0B36 41                 2277 	.db #0x41
   0B37 46                 2278 	.db #0x46
   0B38 4E                 2279 	.db #0x4E
   0B39 56                 2280 	.db #0x56
   0B3A 5E                 2281 	.db #0x5E
   0B3B 01                 2282 	.db #0x01
   0B3C 0A                 2283 	.db #0x0A
   0B3D 12                 2284 	.db #0x12
   0B3E 1A                 2285 	.db #0x1A
   0B3F 23                 2286 	.db #0x23
   0B40 2B                 2287 	.db #0x2B
   0B41 33                 2288 	.db #0x33
   0B42 3C                 2289 	.db #0x3C
   0B43 44                 2290 	.db #0x44
   0B44 4C                 2291 	.db #0x4C
   0B45 56                 2292 	.db #0x56
   0B46 5E                 2293 	.db #0x5E
   0B47 67                 2294 	.db #0x67
   0B48 00                 2295 	.db #0x00
   0B49 00                 2296 	.db #0x00
   0B4A 00                 2297 	.db #0x00
   0B4B 00                 2298 	.db #0x00
   0B4C 00                 2299 	.db #0x00
   0B4D 00                 2300 	.db #0x00
   0B4E 01                 2301 	.db #0x01
   0B4F 09                 2302 	.db #0x09
   0B50 11                 2303 	.db #0x11
   0B51 18                 2304 	.db #0x18
   0B52 20                 2305 	.db #0x20
   0B53 28                 2306 	.db #0x28
   0B54 2F                 2307 	.db #0x2F
   0B55 37                 2308 	.db #0x37
   0B56 3F                 2309 	.db #0x3F
   0B57 45                 2310 	.db #0x45
   0B58 4C                 2311 	.db #0x4C
   0B59 54                 2312 	.db #0x54
   0B5A 5A                 2313 	.db #0x5A
   0B5B 64                 2314 	.db #0x64
   0B5C 01                 2315 	.db #0x01
   0B5D 09                 2316 	.db #0x09
   0B5E 11                 2317 	.db #0x11
   0B5F 19                 2318 	.db #0x19
   0B60 21                 2319 	.db #0x21
   0B61 29                 2320 	.db #0x29
   0B62 30                 2321 	.db #0x30
   0B63 38                 2322 	.db #0x38
   0B64 40                 2323 	.db #0x40
   0B65 4A                 2324 	.db #0x4A
   0B66 52                 2325 	.db #0x52
   0B67 5A                 2326 	.db #0x5A
   0B68 00                 2327 	.db 0x00
   0B69 00                 2328 	.db 0x00
   0B6A 00                 2329 	.db 0x00
   0B6B 00                 2330 	.db 0x00
   0B6C 00                 2331 	.db 0x00
   0B6D 00                 2332 	.db 0x00
   0B6E                    2333 _font_y:
   0B6E 1C                 2334 	.db #0x1C
   0B6F 1C                 2335 	.db #0x1C
   0B70 1C                 2336 	.db #0x1C
   0B71 1C                 2337 	.db #0x1C
   0B72 1C                 2338 	.db #0x1C
   0B73 1C                 2339 	.db #0x1C
   0B74 1C                 2340 	.db #0x1C
   0B75 1C                 2341 	.db #0x1C
   0B76 1C                 2342 	.db #0x1C
   0B77 1C                 2343 	.db #0x1C
   0B78 1C                 2344 	.db #0x1C
   0B79 1C                 2345 	.db #0x1C
   0B7A 1C                 2346 	.db #0x1C
   0B7B 25                 2347 	.db #0x25
   0B7C 25                 2348 	.db #0x25
   0B7D 25                 2349 	.db #0x25
   0B7E 25                 2350 	.db #0x25
   0B7F 25                 2351 	.db #0x25
   0B80 25                 2352 	.db #0x25
   0B81 25                 2353 	.db #0x25
   0B82 25                 2354 	.db #0x25
   0B83 25                 2355 	.db #0x25
   0B84 25                 2356 	.db #0x25
   0B85 25                 2357 	.db #0x25
   0B86 25                 2358 	.db #0x25
   0B87 25                 2359 	.db #0x25
   0B88 00                 2360 	.db #0x00
   0B89 00                 2361 	.db #0x00
   0B8A 00                 2362 	.db #0x00
   0B8B 00                 2363 	.db #0x00
   0B8C 00                 2364 	.db #0x00
   0B8D 00                 2365 	.db #0x00
   0B8E 37                 2366 	.db #0x37
   0B8F 37                 2367 	.db #0x37
   0B90 37                 2368 	.db #0x37
   0B91 37                 2369 	.db #0x37
   0B92 37                 2370 	.db #0x37
   0B93 37                 2371 	.db #0x37
   0B94 37                 2372 	.db #0x37
   0B95 37                 2373 	.db #0x37
   0B96 37                 2374 	.db #0x37
   0B97 37                 2375 	.db #0x37
   0B98 37                 2376 	.db #0x37
   0B99 37                 2377 	.db #0x37
   0B9A 37                 2378 	.db #0x37
   0B9B 37                 2379 	.db #0x37
   0B9C 40                 2380 	.db #0x40
   0B9D 40                 2381 	.db #0x40
   0B9E 40                 2382 	.db #0x40
   0B9F 40                 2383 	.db #0x40
   0BA0 40                 2384 	.db #0x40
   0BA1 40                 2385 	.db #0x40
   0BA2 40                 2386 	.db #0x40
   0BA3 40                 2387 	.db #0x40
   0BA4 40                 2388 	.db #0x40
   0BA5 40                 2389 	.db #0x40
   0BA6 40                 2390 	.db #0x40
   0BA7 40                 2391 	.db #0x40
   0BA8 00                 2392 	.db 0x00
   0BA9 00                 2393 	.db 0x00
   0BAA 00                 2394 	.db 0x00
   0BAB 00                 2395 	.db 0x00
   0BAC 00                 2396 	.db 0x00
   0BAD 00                 2397 	.db 0x00
   0BAE                    2398 _font_w:
   0BAE 07                 2399 	.db #0x07
   0BAF 07                 2400 	.db #0x07
   0BB0 07                 2401 	.db #0x07
   0BB1 07                 2402 	.db #0x07
   0BB2 07                 2403 	.db #0x07
   0BB3 07                 2404 	.db #0x07
   0BB4 07                 2405 	.db #0x07
   0BB5 07                 2406 	.db #0x07
   0BB6 04                 2407 	.db #0x04
   0BB7 07                 2408 	.db #0x07
   0BB8 07                 2409 	.db #0x07
   0BB9 07                 2410 	.db #0x07
   0BBA 09                 2411 	.db #0x09
   0BBB 08                 2412 	.db #0x08
   0BBC 07                 2413 	.db #0x07
   0BBD 07                 2414 	.db #0x07
   0BBE 08                 2415 	.db #0x08
   0BBF 07                 2416 	.db #0x07
   0BC0 07                 2417 	.db #0x07
   0BC1 08                 2418 	.db #0x08
   0BC2 07                 2419 	.db #0x07
   0BC3 07                 2420 	.db #0x07
   0BC4 09                 2421 	.db #0x09
   0BC5 07                 2422 	.db #0x07
   0BC6 08                 2423 	.db #0x08
   0BC7 07                 2424 	.db #0x07
   0BC8 00                 2425 	.db #0x00
   0BC9 00                 2426 	.db #0x00
   0BCA 00                 2427 	.db #0x00
   0BCB 00                 2428 	.db #0x00
   0BCC 00                 2429 	.db #0x00
   0BCD 00                 2430 	.db #0x00
   0BCE 07                 2431 	.db #0x07
   0BCF 07                 2432 	.db #0x07
   0BD0 06                 2433 	.db #0x06
   0BD1 07                 2434 	.db #0x07
   0BD2 07                 2435 	.db #0x07
   0BD3 07                 2436 	.db #0x07
   0BD4 07                 2437 	.db #0x07
   0BD5 07                 2438 	.db #0x07
   0BD6 05                 2439 	.db #0x05
   0BD7 06                 2440 	.db #0x06
   0BD8 07                 2441 	.db #0x07
   0BD9 05                 2442 	.db #0x05
   0BDA 09                 2443 	.db #0x09
   0BDB 07                 2444 	.db #0x07
   0BDC 07                 2445 	.db #0x07
   0BDD 07                 2446 	.db #0x07
   0BDE 07                 2447 	.db #0x07
   0BDF 07                 2448 	.db #0x07
   0BE0 07                 2449 	.db #0x07
   0BE1 06                 2450 	.db #0x06
   0BE2 07                 2451 	.db #0x07
   0BE3 07                 2452 	.db #0x07
   0BE4 09                 2453 	.db #0x09
   0BE5 07                 2454 	.db #0x07
   0BE6 07                 2455 	.db #0x07
   0BE7 07                 2456 	.db #0x07
   0BE8 00                 2457 	.db 0x00
   0BE9 00                 2458 	.db 0x00
   0BEA 00                 2459 	.db 0x00
   0BEB 00                 2460 	.db 0x00
   0BEC 00                 2461 	.db 0x00
   0BED 00                 2462 	.db 0x00
                           2463 ;demo.c:393: void do_letter_tall(char cc) {
                           2464 ;	---------------------------------
                           2465 ; Function do_letter_tall
                           2466 ; ---------------------------------
   0BEE                    2467 _do_letter_tall_start::
   0BEE                    2468 _do_letter_tall:
   0BEE DD E5              2469 	push	ix
   0BF0 DD 21 00 00        2470 	ld	ix,#0
   0BF4 DD 39              2471 	add	ix,sp
   0BF6 21 ED FF           2472 	ld	hl,#-19
   0BF9 39                 2473 	add	hl,sp
   0BFA F9                 2474 	ld	sp,hl
                           2475 ;demo.c:395: int cidx = cc - 65;
   0BFB DD 4E 04           2476 	ld	c,4 (ix)
   0BFE DD 7E 04           2477 	ld	a,4 (ix)
   0C01 17                 2478 	rla	
   0C02 9F                 2479 	sbc	a,a
   0C03 47                 2480 	ld	b,a
   0C04 79                 2481 	ld	a,c
   0C05 C6 BF              2482 	add	a,#0xBF
   0C07 DD 77 EF           2483 	ld	-17 (ix),a
   0C0A 78                 2484 	ld	a,b
   0C0B CE FF              2485 	adc	a,#0xFF
   0C0D DD 77 F0           2486 	ld	-16 (ix),a
                           2487 ;demo.c:396: cmd.source_x = 127+font_x[cidx];
   0C10 21 04 00           2488 	ld	hl,#0x0004
   0C13 39                 2489 	add	hl,sp
   0C14 EB                 2490 	ex	de,hl
   0C15 3Er2E              2491 	ld	a,#<_font_x
   0C17 DD 86 EF           2492 	add	a,-17 (ix)
   0C1A 4F                 2493 	ld	c,a
   0C1B 3Es0B              2494 	ld	a,#>_font_x
   0C1D DD 8E F0           2495 	adc	a,-16 (ix)
   0C20 47                 2496 	ld	b,a
   0C21 0A                 2497 	ld	a,(bc)
   0C22 4F                 2498 	ld	c,a
   0C23 06 00              2499 	ld	b,#0x00
   0C25 21 7F 00           2500 	ld	hl,#0x007F
   0C28 09                 2501 	add	hl,bc
   0C29 4D                 2502 	ld	c,l
   0C2A 44                 2503 	ld	b,h
   0C2B EB                 2504 	ex	de,hl
   0C2C 71                 2505 	ld	(hl),c
   0C2D 23                 2506 	inc	hl
   0C2E 70                 2507 	ld	(hl),b
                           2508 ;demo.c:397: cmd.source_y = 512+font_y[cidx]-1;
   0C2F 21 04 00           2509 	ld	hl,#0x0004
   0C32 39                 2510 	add	hl,sp
   0C33 4D                 2511 	ld	c,l
   0C34 44                 2512 	ld	b,h
   0C35 21 02 00           2513 	ld	hl,#0x0002
   0C38 09                 2514 	add	hl,bc
   0C39 DD 75 ED           2515 	ld	-19 (ix),l
   0C3C DD 74 EE           2516 	ld	-18 (ix),h
   0C3F 3Er6E              2517 	ld	a,#<_font_y
   0C41 DD 86 EF           2518 	add	a,-17 (ix)
   0C44 5F                 2519 	ld	e,a
   0C45 3Es0B              2520 	ld	a,#>_font_y
   0C47 DD 8E F0           2521 	adc	a,-16 (ix)
   0C4A 57                 2522 	ld	d,a
   0C4B 1A                 2523 	ld	a,(de)
   0C4C 5F                 2524 	ld	e,a
   0C4D 16 00              2525 	ld	d,#0x00
   0C4F 21 FF 01           2526 	ld	hl,#0x01FF
   0C52 19                 2527 	add	hl,de
   0C53 EB                 2528 	ex	de,hl
   0C54 DD 6E ED           2529 	ld	l,-19 (ix)
   0C57 DD 66 EE           2530 	ld	h,-18 (ix)
   0C5A 73                 2531 	ld	(hl),e
   0C5B 23                 2532 	inc	hl
   0C5C 72                 2533 	ld	(hl),d
                           2534 ;demo.c:398: cmd.dest_x = lx;
   0C5D 21 04 00           2535 	ld	hl,#0x0004
   0C60 09                 2536 	add	hl,bc
   0C61 DD 75 ED           2537 	ld	-19 (ix),l
   0C64 DD 74 EE           2538 	ld	-18 (ix),h
   0C67 21r9Fs40           2539 	ld	hl,#_lx + 0
   0C6A 5E                 2540 	ld	e,(hl)
   0C6B 16 00              2541 	ld	d,#0x00
   0C6D DD 6E ED           2542 	ld	l,-19 (ix)
   0C70 DD 66 EE           2543 	ld	h,-18 (ix)
   0C73 73                 2544 	ld	(hl),e
   0C74 23                 2545 	inc	hl
   0C75 72                 2546 	ld	(hl),d
                           2547 ;demo.c:399: cmd.dest_y = ly;
   0C76 21 06 00           2548 	ld	hl,#0x0006
   0C79 09                 2549 	add	hl,bc
   0C7A DD 75 ED           2550 	ld	-19 (ix),l
   0C7D DD 74 EE           2551 	ld	-18 (ix),h
   0C80 21rA0s40           2552 	ld	hl,#_ly + 0
   0C83 5E                 2553 	ld	e,(hl)
   0C84 16 00              2554 	ld	d,#0x00
   0C86 DD 6E ED           2555 	ld	l,-19 (ix)
   0C89 DD 66 EE           2556 	ld	h,-18 (ix)
   0C8C 73                 2557 	ld	(hl),e
   0C8D 23                 2558 	inc	hl
   0C8E 72                 2559 	ld	(hl),d
                           2560 ;demo.c:400: cmd.size_x = font_w[cidx];
   0C8F 21 08 00           2561 	ld	hl,#0x0008
   0C92 09                 2562 	add	hl,bc
   0C93 DD 75 ED           2563 	ld	-19 (ix),l
   0C96 DD 74 EE           2564 	ld	-18 (ix),h
   0C99 3ErAE              2565 	ld	a,#<_font_w
   0C9B DD 86 EF           2566 	add	a,-17 (ix)
   0C9E 5F                 2567 	ld	e,a
   0C9F 3Es0B              2568 	ld	a,#>_font_w
   0CA1 DD 8E F0           2569 	adc	a,-16 (ix)
   0CA4 57                 2570 	ld	d,a
   0CA5 1A                 2571 	ld	a,(de)
   0CA6 5F                 2572 	ld	e,a
   0CA7 16 00              2573 	ld	d,#0x00
   0CA9 DD 6E ED           2574 	ld	l,-19 (ix)
   0CAC DD 66 EE           2575 	ld	h,-18 (ix)
   0CAF 73                 2576 	ld	(hl),e
   0CB0 23                 2577 	inc	hl
   0CB1 72                 2578 	ld	(hl),d
                           2579 ;demo.c:401: cmd.size_y = 10;
   0CB2 21 0A 00           2580 	ld	hl,#0x000A
   0CB5 09                 2581 	add	hl,bc
   0CB6 36 0A              2582 	ld	(hl),#0x0A
   0CB8 23                 2583 	inc	hl
   0CB9 36 00              2584 	ld	(hl),#0x00
                           2585 ;demo.c:402: cmd.argument = 0x00;
   0CBB 21 0D 00           2586 	ld	hl,#0x000D
   0CBE 09                 2587 	add	hl,bc
   0CBF EB                 2588 	ex	de,hl
   0CC0 3E 00              2589 	ld	a,#0x00
   0CC2 12                 2590 	ld	(de),a
                           2591 ;demo.c:403: cmd.command = 0x90; // logical vram to vram
   0CC3 21 0E 00           2592 	ld	hl,#0x000E
   0CC6 09                 2593 	add	hl,bc
   0CC7 EB                 2594 	ex	de,hl
   0CC8 3E 90              2595 	ld	a,#0x90
   0CCA 12                 2596 	ld	(de),a
                           2597 ;demo.c:404: vdp_copier(&cmd);
   0CCB C5                 2598 	push	bc
   0CCC CDr00s00           2599 	call	_vdp_copier
   0CCF F1                 2600 	pop	af
                           2601 ;demo.c:405: lx+=font_w[cidx]-1;
   0CD0 3ErAE              2602 	ld	a,#<_font_w
   0CD2 DD 86 EF           2603 	add	a,-17 (ix)
   0CD5 4F                 2604 	ld	c,a
   0CD6 3Es0B              2605 	ld	a,#>_font_w
   0CD8 DD 8E F0           2606 	adc	a,-16 (ix)
   0CDB 47                 2607 	ld	b,a
   0CDC 0A                 2608 	ld	a,(bc)
   0CDD 4F                 2609 	ld	c,a
   0CDE 0D                 2610 	dec	c
   0CDF 21r9Fs40           2611 	ld	hl,#_lx
   0CE2 7E                 2612 	ld	a,(hl)
   0CE3 81                 2613 	add	a,c
   0CE4 77                 2614 	ld	(hl),a
   0CE5 DD F9              2615 	ld	sp,ix
   0CE7 DD E1              2616 	pop	ix
   0CE9 C9                 2617 	ret
   0CEA                    2618 _do_letter_tall_end::
                           2619 ;demo.c:408: void drawstr(char* str, uint8_t x, uint8_t y) {
                           2620 ;	---------------------------------
                           2621 ; Function drawstr
                           2622 ; ---------------------------------
   0CEA                    2623 _drawstr_start::
   0CEA                    2624 _drawstr:
   0CEA DD E5              2625 	push	ix
   0CEC DD 21 00 00        2626 	ld	ix,#0
   0CF0 DD 39              2627 	add	ix,sp
                           2628 ;demo.c:409: char* c = str;
   0CF2 DD 4E 04           2629 	ld	c,4 (ix)
   0CF5 DD 46 05           2630 	ld	b,5 (ix)
                           2631 ;demo.c:410: lx = x;
   0CF8 DD 5E 06           2632 	ld	e,6 (ix)
   0CFB 21r9Fs40           2633 	ld	hl,#_lx + 0
   0CFE 73                 2634 	ld	(hl), e
                           2635 ;demo.c:411: ly = y;
   0CFF DD 7E 07           2636 	ld	a,7 (ix)
   0D02 21rA0s40           2637 	ld	hl,#_ly + 0
   0D05 77                 2638 	ld	(hl), a
                           2639 ;demo.c:412: while (*c) {
   0D06                    2640 00107$:
   0D06 0A                 2641 	ld	a,(bc)
   0D07 57                 2642 	ld	d,a
   0D08 B7                 2643 	or	a,a
   0D09 28 42              2644 	jr	Z,00110$
                           2645 ;demo.c:413: char ltr = *c++; 
   0D0B 03                 2646 	inc	bc
                           2647 ;demo.c:414: if (ltr == ' ') lx+=4;
   0D0C 7A                 2648 	ld	a,d
   0D0D D6 20              2649 	sub	a,#0x20
   0D0F 20 1E              2650 	jr	NZ,00105$
   0D11 FD 21r9Fs40        2651 	ld	iy,#_lx
   0D15 FD 34 00           2652 	inc	0 (iy)
   0D18 FD 21r9Fs40        2653 	ld	iy,#_lx
   0D1C FD 34 00           2654 	inc	0 (iy)
   0D1F FD 21r9Fs40        2655 	ld	iy,#_lx
   0D23 FD 34 00           2656 	inc	0 (iy)
   0D26 FD 21r9Fs40        2657 	ld	iy,#_lx
   0D2A FD 34 00           2658 	inc	0 (iy)
   0D2D 18 D7              2659 	jr	00107$
   0D2F                    2660 00105$:
                           2661 ;demo.c:415: else if (ltr == '_') { ly+=9; lx = x; }
   0D2F 7A                 2662 	ld	a,d
   0D30 D6 5F              2663 	sub	a,#0x5F
   0D32 20 0D              2664 	jr	NZ,00102$
   0D34 21rA0s40           2665 	ld	hl,#_ly
   0D37 7E                 2666 	ld	a,(hl)
   0D38 C6 09              2667 	add	a,#0x09
   0D3A 77                 2668 	ld	(hl),a
   0D3B 21r9Fs40           2669 	ld	hl,#_lx + 0
   0D3E 73                 2670 	ld	(hl), e
   0D3F 18 C5              2671 	jr	00107$
   0D41                    2672 00102$:
                           2673 ;demo.c:416: else do_letter(ltr);
   0D41 C5                 2674 	push	bc
   0D42 D5                 2675 	push	de
   0D43 D5                 2676 	push	de
   0D44 33                 2677 	inc	sp
   0D45 CDr32s0A           2678 	call	_do_letter
   0D48 33                 2679 	inc	sp
   0D49 D1                 2680 	pop	de
   0D4A C1                 2681 	pop	bc
   0D4B 18 B9              2682 	jr	00107$
   0D4D                    2683 00110$:
   0D4D DD E1              2684 	pop	ix
   0D4F C9                 2685 	ret
   0D50                    2686 _drawstr_end::
                           2687 ;demo.c:420: void drawsine(char* str, uint8_t x, uint8_t y) {
                           2688 ;	---------------------------------
                           2689 ; Function drawsine
                           2690 ; ---------------------------------
   0D50                    2691 _drawsine_start::
   0D50                    2692 _drawsine:
   0D50 DD E5              2693 	push	ix
   0D52 DD 21 00 00        2694 	ld	ix,#0
   0D56 DD 39              2695 	add	ix,sp
   0D58 3B                 2696 	dec	sp
                           2697 ;demo.c:421: char* c = str;
   0D59 DD 4E 04           2698 	ld	c,4 (ix)
   0D5C DD 46 05           2699 	ld	b,5 (ix)
                           2700 ;demo.c:422: lx = x;
   0D5F DD 7E 06           2701 	ld	a,6 (ix)
   0D62 21r9Fs40           2702 	ld	hl,#_lx + 0
   0D65 77                 2703 	ld	(hl), a
                           2704 ;demo.c:424: while (*c) {
   0D66                    2705 00104$:
   0D66 0A                 2706 	ld	a,(bc)
   0D67 5F                 2707 	ld	e,a
   0D68 B7                 2708 	or	a,a
   0D69 CArDDs0D           2709 	jp	Z,00107$
                           2710 ;demo.c:425: char ltr = *c++; 
   0D6C 03                 2711 	inc	bc
   0D6D DD 73 FF           2712 	ld	-1 (ix),e
                           2713 ;demo.c:426: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   0D70 21r9Fs40           2714 	ld	hl,#_lx + 0
   0D73 5E                 2715 	ld	e,(hl)
   0D74 16 00              2716 	ld	d,#0x00
   0D76 21r60s40           2717 	ld	hl,#_vbicount
   0D79 7B                 2718 	ld	a,e
   0D7A 86                 2719 	add	a,(hl)
   0D7B 5F                 2720 	ld	e,a
   0D7C 7A                 2721 	ld	a,d
   0D7D 23                 2722 	inc	hl
   0D7E 8E                 2723 	adc	a,(hl)
   0D7F 57                 2724 	ld	d,a
   0D80 CB 2A              2725 	sra	d
   0D82 CB 1B              2726 	rr	e
   0D84 16 00              2727 	ld	d,#0x00
   0D86 CB 23              2728 	sla	e
   0D88 CB 12              2729 	rl	d
   0D8A 21r2Cs00           2730 	ld	hl,#_sintabx
   0D8D 19                 2731 	add	hl,de
   0D8E 5E                 2732 	ld	e,(hl)
   0D8F 23                 2733 	inc	hl
   0D90 56                 2734 	ld	d,(hl)
   0D91 CB 3A              2735 	srl	d
   0D93 CB 1B              2736 	rr	e
   0D95 CB 3A              2737 	srl	d
   0D97 CB 1B              2738 	rr	e
   0D99 CB 3A              2739 	srl	d
   0D9B CB 1B              2740 	rr	e
   0D9D CB 3A              2741 	srl	d
   0D9F CB 1B              2742 	rr	e
   0DA1 21rA0s40           2743 	ld	hl,#_ly
   0DA4 DD 7E 07           2744 	ld	a,7 (ix)
   0DA7 83                 2745 	add	a,e
   0DA8 77                 2746 	ld	(hl),a
                           2747 ;demo.c:427: if (ltr == ' ') lx+=4;
   0DA9 DD 7E FF           2748 	ld	a,-1 (ix)
   0DAC D6 20              2749 	sub	a,#0x20
   0DAE 20 1F              2750 	jr	NZ,00102$
   0DB0 FD 21r9Fs40        2751 	ld	iy,#_lx
   0DB4 FD 34 00           2752 	inc	0 (iy)
   0DB7 FD 21r9Fs40        2753 	ld	iy,#_lx
   0DBB FD 34 00           2754 	inc	0 (iy)
   0DBE FD 21r9Fs40        2755 	ld	iy,#_lx
   0DC2 FD 34 00           2756 	inc	0 (iy)
   0DC5 FD 21r9Fs40        2757 	ld	iy,#_lx
   0DC9 FD 34 00           2758 	inc	0 (iy)
   0DCC C3r66s0D           2759 	jp	00104$
   0DCF                    2760 00102$:
                           2761 ;demo.c:428: else do_letter_tall(ltr);
   0DCF C5                 2762 	push	bc
   0DD0 DD 7E FF           2763 	ld	a,-1 (ix)
   0DD3 F5                 2764 	push	af
   0DD4 33                 2765 	inc	sp
   0DD5 CDrEEs0B           2766 	call	_do_letter_tall
   0DD8 33                 2767 	inc	sp
   0DD9 C1                 2768 	pop	bc
   0DDA C3r66s0D           2769 	jp	00104$
   0DDD                    2770 00107$:
   0DDD DD F9              2771 	ld	sp,ix
   0DDF DD E1              2772 	pop	ix
   0DE1 C9                 2773 	ret
   0DE2                    2774 _drawsine_end::
                           2775 ;demo.c:432: void font() {
                           2776 ;	---------------------------------
                           2777 ; Function font
                           2778 ; ---------------------------------
   0DE2                    2779 _font_start::
   0DE2                    2780 _font:
                           2781 ;demo.c:434: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   0DE2 21 4A 3C           2782 	ld	hl,#0x3C4A
   0DE5 E5                 2783 	push	hl
   0DE6 21rF0s0D           2784 	ld	hl,#__str_0
   0DE9 E5                 2785 	push	hl
   0DEA CDrEAs0C           2786 	call	_drawstr
   0DED F1                 2787 	pop	af
   0DEE F1                 2788 	pop	af
   0DEF C9                 2789 	ret
   0DF0                    2790 _font_end::
   0DF0                    2791 __str_0:
   0DF0 44 49 47 49 54 41  2792 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   0E2C 4F 4E 5F 5F 20 20  2793 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   0E52 00                 2794 	.db 0x00
                           2795 ;demo.c:443: void twister() {
                           2796 ;	---------------------------------
                           2797 ; Function twister
                           2798 ; ---------------------------------
   0E53                    2799 _twister_start::
   0E53                    2800 _twister:
   0E53 DD E5              2801 	push	ix
   0E55 DD 21 00 00        2802 	ld	ix,#0
   0E59 DD 39              2803 	add	ix,sp
   0E5B 21 ED FF           2804 	ld	hl,#-19
   0E5E 39                 2805 	add	hl,sp
   0E5F F9                 2806 	ld	sp,hl
                           2807 ;demo.c:448: if (twinited == 0) {
   0E60 3ArA3s40           2808 	ld	a,(#_twinited+0)
   0E63 FD 21rA3s40        2809 	ld	iy,#_twinited
   0E67 FD B6 01           2810 	or	a,1 (iy)
   0E6A C2r0Es0F           2811 	jp	NZ,00102$
                           2812 ;demo.c:449: cmd.size_x = 256;
   0E6D 21 04 00           2813 	ld	hl,#0x0004
   0E70 39                 2814 	add	hl,sp
   0E71 4D                 2815 	ld	c,l
   0E72 44                 2816 	ld	b,h
   0E73 21 08 00           2817 	ld	hl,#0x0008
   0E76 09                 2818 	add	hl,bc
   0E77 36 00              2819 	ld	(hl),#0x00
   0E79 23                 2820 	inc	hl
   0E7A 36 01              2821 	ld	(hl),#0x01
                           2822 ;demo.c:450: cmd.size_y = 1;
   0E7C 21 0A 00           2823 	ld	hl,#0x000A
   0E7F 09                 2824 	add	hl,bc
   0E80 36 01              2825 	ld	(hl),#0x01
   0E82 23                 2826 	inc	hl
   0E83 36 00              2827 	ld	(hl),#0x00
                           2828 ;demo.c:451: cmd.data = 0;
   0E85 21 0C 00           2829 	ld	hl,#0x000C
   0E88 09                 2830 	add	hl,bc
   0E89 EB                 2831 	ex	de,hl
   0E8A 3E 00              2832 	ld	a,#0x00
   0E8C 12                 2833 	ld	(de),a
                           2834 ;demo.c:452: cmd.argument = 0x04; // from 70xY to left
   0E8D 21 0D 00           2835 	ld	hl,#0x000D
   0E90 09                 2836 	add	hl,bc
   0E91 EB                 2837 	ex	de,hl
   0E92 3E 04              2838 	ld	a,#0x04
   0E94 12                 2839 	ld	(de),a
                           2840 ;demo.c:453: cmd.command = 0xe0; // vram to vram, y only
   0E95 21 0E 00           2841 	ld	hl,#0x000E
   0E98 09                 2842 	add	hl,bc
   0E99 EB                 2843 	ex	de,hl
   0E9A 3E E0              2844 	ld	a,#0xE0
   0E9C 12                 2845 	ld	(de),a
                           2846 ;demo.c:454: cmd.source_x = 256;
   0E9D 69                 2847 	ld	l,c
   0E9E 60                 2848 	ld	h,b
   0E9F 36 00              2849 	ld	(hl),#0x00
   0EA1 23                 2850 	inc	hl
   0EA2 36 01              2851 	ld	(hl),#0x01
                           2852 ;demo.c:455: cmd.dest_x = 256;
   0EA4 03                 2853 	inc	bc
   0EA5 03                 2854 	inc	bc
   0EA6 03                 2855 	inc	bc
   0EA7 03                 2856 	inc	bc
   0EA8 69                 2857 	ld	l,c
   0EA9 60                 2858 	ld	h,b
   0EAA 36 00              2859 	ld	(hl),#0x00
   0EAC 23                 2860 	inc	hl
   0EAD 36 01              2861 	ld	(hl),#0x01
                           2862 ;demo.c:457: for (y = 0; y < 212; y+=1) {
   0EAF DD 36 EF 00        2863 	ld	-17 (ix),#0x00
   0EB3 DD 36 F0 00        2864 	ld	-16 (ix),#0x00
   0EB7                    2865 00103$:
   0EB7 DD 7E EF           2866 	ld	a,-17 (ix)
   0EBA D6 D4              2867 	sub	a,#0xD4
   0EBC DD 7E F0           2868 	ld	a,-16 (ix)
   0EBF DE 00              2869 	sbc	a,#0x00
   0EC1 F2rF1s0E           2870 	jp	P,00106$
                           2871 ;demo.c:458: waitVB();
   0EC4 76                 2872 		halt 
                           2873 ;demo.c:459: cmd.source_y = 0;
   0EC5 21 04 00           2874 	ld	hl,#0x0004
   0EC8 39                 2875 	add	hl,sp
   0EC9 EB                 2876 	ex	de,hl
   0ECA 4B                 2877 	ld	c,e
   0ECB 42                 2878 	ld	b,d
   0ECC 69                 2879 	ld	l,c
   0ECD 60                 2880 	ld	h,b
   0ECE 23                 2881 	inc	hl
   0ECF 23                 2882 	inc	hl
   0ED0 36 00              2883 	ld	(hl),#0x00
   0ED2 23                 2884 	inc	hl
   0ED3 36 00              2885 	ld	(hl),#0x00
                           2886 ;demo.c:460: cmd.dest_y = y;
   0ED5 21 06 00           2887 	ld	hl,#0x0006
   0ED8 19                 2888 	add	hl,de
   0ED9 DD 7E EF           2889 	ld	a,-17 (ix)
   0EDC 77                 2890 	ld	(hl),a
   0EDD 23                 2891 	inc	hl
   0EDE DD 7E F0           2892 	ld	a,-16 (ix)
   0EE1 77                 2893 	ld	(hl),a
                           2894 ;demo.c:461: vdp_copier(&cmd);
   0EE2 D5                 2895 	push	de
   0EE3 CDr00s00           2896 	call	_vdp_copier
   0EE6 F1                 2897 	pop	af
                           2898 ;demo.c:457: for (y = 0; y < 212; y+=1) {
   0EE7 DD 34 EF           2899 	inc	-17 (ix)
   0EEA 20 03              2900 	jr	NZ,00120$
   0EEC DD 34 F0           2901 	inc	-16 (ix)
   0EEF                    2902 00120$:
   0EEF 18 C6              2903 	jr	00103$
   0EF1                    2904 00106$:
                           2905 ;demo.c:465: twinited = 1;
   0EF1 21rA3s40           2906 	ld	hl,#_twinited + 0
   0EF4 36 01              2907 	ld	(hl), #0x01
   0EF6 21rA4s40           2908 	ld	hl,#_twinited + 1
   0EF9 36 00              2909 	ld	(hl), #0x00
                           2910 ;demo.c:466: vdp_register(8,0x2); // no sprites
   0EFB 21 08 02           2911 	ld	hl,#0x0208
   0EFE E5                 2912 	push	hl
   0EFF CDr00s00           2913 	call	_vdp_register
   0F02 F1                 2914 	pop	af
                           2915 ;demo.c:467: vdp_load_palette(twister_palette);
   0F03 21r40s40           2916 	ld	hl,#_twister_palette
   0F06 E5                 2917 	push	hl
   0F07 CDr00s00           2918 	call	_vdp_load_palette
   0F0A F1                 2919 	pop	af
                           2920 ;demo.c:468: font();
   0F0B CDrE2s0D           2921 	call	_font
   0F0E                    2922 00102$:
                           2923 ;demo.c:471: cmd.size_x = 70;
   0F0E 21 04 00           2924 	ld	hl,#0x0004
   0F11 39                 2925 	add	hl,sp
   0F12 4D                 2926 	ld	c,l
   0F13 44                 2927 	ld	b,h
   0F14 21 08 00           2928 	ld	hl,#0x0008
   0F17 09                 2929 	add	hl,bc
   0F18 36 46              2930 	ld	(hl),#0x46
   0F1A 23                 2931 	inc	hl
   0F1B 36 00              2932 	ld	(hl),#0x00
                           2933 ;demo.c:472: cmd.size_y = 2;
   0F1D 21 0A 00           2934 	ld	hl,#0x000A
   0F20 09                 2935 	add	hl,bc
   0F21 36 02              2936 	ld	(hl),#0x02
   0F23 23                 2937 	inc	hl
   0F24 36 00              2938 	ld	(hl),#0x00
                           2939 ;demo.c:473: cmd.data = 0;
   0F26 21 0C 00           2940 	ld	hl,#0x000C
   0F29 09                 2941 	add	hl,bc
   0F2A EB                 2942 	ex	de,hl
   0F2B 3E 00              2943 	ld	a,#0x00
   0F2D 12                 2944 	ld	(de),a
                           2945 ;demo.c:474: cmd.argument = 0x04; // from 70xY to left
   0F2E 21 0D 00           2946 	ld	hl,#0x000D
   0F31 09                 2947 	add	hl,bc
   0F32 EB                 2948 	ex	de,hl
   0F33 3E 04              2949 	ld	a,#0x04
   0F35 12                 2950 	ld	(de),a
                           2951 ;demo.c:475: cmd.command = 0xe0; // vram to vram, y only
   0F36 21 0E 00           2952 	ld	hl,#0x000E
   0F39 09                 2953 	add	hl,bc
   0F3A EB                 2954 	ex	de,hl
   0F3B 3E E0              2955 	ld	a,#0xE0
   0F3D 12                 2956 	ld	(de),a
                           2957 ;demo.c:476: cmd.source_x = 70;
   0F3E 69                 2958 	ld	l,c
   0F3F 60                 2959 	ld	h,b
   0F40 36 46              2960 	ld	(hl),#0x46
   0F42 23                 2961 	inc	hl
   0F43 36 00              2962 	ld	(hl),#0x00
                           2963 ;demo.c:477: cmd.dest_x = 70;
   0F45 69                 2964 	ld	l,c
   0F46 60                 2965 	ld	h,b
   0F47 23                 2966 	inc	hl
   0F48 23                 2967 	inc	hl
   0F49 23                 2968 	inc	hl
   0F4A 23                 2969 	inc	hl
   0F4B 36 46              2970 	ld	(hl),#0x46
   0F4D 23                 2971 	inc	hl
   0F4E 36 00              2972 	ld	(hl),#0x00
                           2973 ;demo.c:479: for (y = 0; y < 212; y+=2) {
   0F50 DD 36 EF 00        2974 	ld	-17 (ix),#0x00
   0F54 DD 36 F0 00        2975 	ld	-16 (ix),#0x00
   0F58                    2976 00107$:
   0F58 DD 7E EF           2977 	ld	a,-17 (ix)
   0F5B D6 D4              2978 	sub	a,#0xD4
   0F5D DD 7E F0           2979 	ld	a,-16 (ix)
   0F60 DE 00              2980 	sbc	a,#0x00
   0F62 F2rC9s0F           2981 	jp	P,00110$
                           2982 ;demo.c:480: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   0F65 21 04 00           2983 	ld	hl,#0x0004
   0F68 39                 2984 	add	hl,sp
   0F69 EB                 2985 	ex	de,hl
   0F6A 21 02 00           2986 	ld	hl,#0x0002
   0F6D 19                 2987 	add	hl,de
   0F6E DD 75 ED           2988 	ld	-19 (ix),l
   0F71 DD 74 EE           2989 	ld	-18 (ix),h
   0F74 DD 4E EF           2990 	ld	c,-17 (ix)
   0F77 DD 46 F0           2991 	ld	b,-16 (ix)
   0F7A CB 28              2992 	sra	b
   0F7C CB 19              2993 	rr	c
   0F7E 3ArA1s40           2994 	ld	a,(#_ff+0)
   0F81 81                 2995 	add	a,c
   0F82 4F                 2996 	ld	c,a
   0F83 3ArA2s40           2997 	ld	a,(#_ff+1)
   0F86 88                 2998 	adc	a,b
   0F87 06 00              2999 	ld	b,#0x00
   0F89 21r00s00           3000 	ld	hl,#_sintab
   0F8C 09                 3001 	add	hl,bc
   0F8D 7E                 3002 	ld	a,(hl)
   0F8E 4F                 3003 	ld	c,a
   0F8F CB 29              3004 	sra	c
   0F91 79                 3005 	ld	a,c
   0F92 17                 3006 	rla	
   0F93 9F                 3007 	sbc	a,a
   0F94 47                 3008 	ld	b,a
   0F95 21 40 02           3009 	ld	hl,#0x0240
   0F98 09                 3010 	add	hl,bc
   0F99 4D                 3011 	ld	c,l
   0F9A 44                 3012 	ld	b,h
   0F9B DD 6E ED           3013 	ld	l,-19 (ix)
   0F9E DD 66 EE           3014 	ld	h,-18 (ix)
   0FA1 71                 3015 	ld	(hl),c
   0FA2 23                 3016 	inc	hl
   0FA3 70                 3017 	ld	(hl),b
                           3018 ;demo.c:481: cmd.dest_y = y;
   0FA4 21 06 00           3019 	ld	hl,#0x0006
   0FA7 19                 3020 	add	hl,de
   0FA8 DD 7E EF           3021 	ld	a,-17 (ix)
   0FAB 77                 3022 	ld	(hl),a
   0FAC 23                 3023 	inc	hl
   0FAD DD 7E F0           3024 	ld	a,-16 (ix)
   0FB0 77                 3025 	ld	(hl),a
                           3026 ;demo.c:482: vdp_copier(&cmd);
   0FB1 D5                 3027 	push	de
   0FB2 CDr00s00           3028 	call	_vdp_copier
   0FB5 F1                 3029 	pop	af
                           3030 ;demo.c:479: for (y = 0; y < 212; y+=2) {
   0FB6 DD 7E EF           3031 	ld	a,-17 (ix)
   0FB9 C6 02              3032 	add	a,#0x02
   0FBB DD 77 EF           3033 	ld	-17 (ix),a
   0FBE DD 7E F0           3034 	ld	a,-16 (ix)
   0FC1 CE 00              3035 	adc	a,#0x00
   0FC3 DD 77 F0           3036 	ld	-16 (ix),a
   0FC6 C3r58s0F           3037 	jp	00107$
   0FC9                    3038 00110$:
                           3039 ;demo.c:486: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   0FC9 21rA1s40           3040 	ld	hl,#_ff + 0
   0FCC 4E                 3041 	ld	c,(hl)
   0FCD 21rA2s40           3042 	ld	hl,#_ff + 1
   0FD0 46                 3043 	ld	b,(hl)
   0FD1 CB 28              3044 	sra	b
   0FD3 CB 19              3045 	rr	c
   0FD5 CB 28              3046 	sra	b
   0FD7 CB 19              3047 	rr	c
   0FD9 21rA1s40           3048 	ld	hl,#_ff + 0
   0FDC 5E                 3049 	ld	e,(hl)
   0FDD 21rA2s40           3050 	ld	hl,#_ff + 1
   0FE0 56                 3051 	ld	d,(hl)
   0FE1 CB 2A              3052 	sra	d
   0FE3 CB 1B              3053 	rr	e
   0FE5 CB 2A              3054 	sra	d
   0FE7 CB 1B              3055 	rr	e
   0FE9 CB 2A              3056 	sra	d
   0FEB CB 1B              3057 	rr	e
   0FED 43                 3058 	ld	b,e
   0FEE 79                 3059 	ld	a,c
   0FEF F5                 3060 	push	af
   0FF0 33                 3061 	inc	sp
   0FF1 C5                 3062 	push	bc
   0FF2 33                 3063 	inc	sp
   0FF3 41                 3064 	ld	b,c
   0FF4 0E 04              3065 	ld	c,#0x04
   0FF6 C5                 3066 	push	bc
   0FF7 CDr00s00           3067 	call	_msx2_palette
   0FFA F1                 3068 	pop	af
   0FFB F1                 3069 	pop	af
                           3070 ;demo.c:488: ff+=4;
   0FFC 21rA1s40           3071 	ld	hl,#_ff
   0FFF 7E                 3072 	ld	a,(hl)
   1000 C6 04              3073 	add	a,#0x04
   1002 23                 3074 	inc	hl
   1003 2B                 3075 	dec	hl
   1004 C5                 3076 	push	bc
   1005 4F                 3077 	ld	c, a
   1006 23                 3078 	inc	hl
   1007 7E                 3079 	ld	a, (hl)
   1008 47                 3080 	ld	b, a
   1009 79                 3081 	ld	a, c
   100A 2B                 3082 	dec	hl
   100B 77                 3083 	ld	(hl), a
   100C 78                 3084 	ld	a, b
   100D C1                 3085 	pop	bc
   100E CE 00              3086 	adc	a,#0x00
   1010 23                 3087 	inc	hl
   1011 77                 3088 	ld	(hl),a
   1012 DD F9              3089 	ld	sp,ix
   1014 DD E1              3090 	pop	ix
   1016 C9                 3091 	ret
   1017                    3092 _twister_end::
                           3093 ;demo.c:498: void bulbs() {
                           3094 ;	---------------------------------
                           3095 ; Function bulbs
                           3096 ; ---------------------------------
   1017                    3097 _bulbs_start::
   1017                    3098 _bulbs:
   1017 DD E5              3099 	push	ix
   1019 DD 21 00 00        3100 	ld	ix,#0
   101D DD 39              3101 	add	ix,sp
   101F 21 E9 FF           3102 	ld	hl,#-23
   1022 39                 3103 	add	hl,sp
   1023 F9                 3104 	ld	sp,hl
                           3105 ;demo.c:503: ender+=enderdir;
   1024 21rADs40           3106 	ld	hl,#_enderdir
   1027 D5                 3107 	push	de
   1028 FD 21rABs40        3108 	ld	iy,#_ender
   102C FD E5              3109 	push	iy
   102E D1                 3110 	pop	de
   102F 1A                 3111 	ld	a,(de)
   1030 86                 3112 	add	a,(hl)
   1031 13                 3113 	inc	de
   1032 1B                 3114 	dec	de
   1033 C5                 3115 	push	bc
   1034 4F                 3116 	ld	c, a
   1035 13                 3117 	inc	de
   1036 1A                 3118 	ld	a, (de)
   1037 47                 3119 	ld	b, a
   1038 79                 3120 	ld	a, c
   1039 1B                 3121 	dec	de
   103A 12                 3122 	ld	(de), a
   103B 78                 3123 	ld	a, b
   103C C1                 3124 	pop	bc
   103D 23                 3125 	inc	hl
   103E 8E                 3126 	adc	a,(hl)
   103F 13                 3127 	inc	de
   1040 12                 3128 	ld	(de),a
   1041 D1                 3129 	pop	de
                           3130 ;demo.c:504: if (ender < 2) enderdir = -enderdir;
   1042 3ArABs40           3131 	ld	a,(#_ender+0)
   1045 D6 02              3132 	sub	a,#0x02
   1047 3ArACs40           3133 	ld	a,(#_ender+1)
   104A DE 00              3134 	sbc	a,#0x00
   104C F2r70s10           3135 	jp	P,00102$
   104F AF                 3136 	xor	a,a
   1050 FD 21rADs40        3137 	ld	iy,#_enderdir
   1054 3E 00              3138 	ld	a,#0x00
   1056 FD 9E 00           3139 	sbc	a,0 (iy)
   1059 FD 21rADs40        3140 	ld	iy,#_enderdir
   105D FD 77 00           3141 	ld	0 (iy),a
   1060 FD 21rADs40        3142 	ld	iy,#_enderdir
   1064 3E 00              3143 	ld	a,#0x00
   1066 FD 9E 01           3144 	sbc	a,1 (iy)
   1069 FD 21rADs40        3145 	ld	iy,#_enderdir
   106D FD 77 01           3146 	ld	1 (iy),a
   1070                    3147 00102$:
                           3148 ;demo.c:505: if (ender >= 212) enderdir = -enderdir;
   1070 3ArABs40           3149 	ld	a,(#_ender+0)
   1073 D6 D4              3150 	sub	a,#0xD4
   1075 3ArACs40           3151 	ld	a,(#_ender+1)
   1078 DE 00              3152 	sbc	a,#0x00
   107A FAr9Es10           3153 	jp	M,00104$
   107D AF                 3154 	xor	a,a
   107E FD 21rADs40        3155 	ld	iy,#_enderdir
   1082 3E 00              3156 	ld	a,#0x00
   1084 FD 9E 00           3157 	sbc	a,0 (iy)
   1087 FD 21rADs40        3158 	ld	iy,#_enderdir
   108B FD 77 00           3159 	ld	0 (iy),a
   108E FD 21rADs40        3160 	ld	iy,#_enderdir
   1092 3E 00              3161 	ld	a,#0x00
   1094 FD 9E 01           3162 	sbc	a,1 (iy)
   1097 FD 21rADs40        3163 	ld	iy,#_enderdir
   109B FD 77 01           3164 	ld	1 (iy),a
   109E                    3165 00104$:
                           3166 ;demo.c:507: enderend = ender + 92;
   109E 3ArABs40           3167 	ld	a,(#_ender+0)
   10A1 C6 5C              3168 	add	a,#0x5C
   10A3 DD 77 EF           3169 	ld	-17 (ix),a
   10A6 3ArACs40           3170 	ld	a,(#_ender+1)
   10A9 CE 00              3171 	adc	a,#0x00
   10AB DD 77 F0           3172 	ld	-16 (ix),a
                           3173 ;demo.c:509: if (enderend > 212) enderend = 212;
   10AE 3E D4              3174 	ld	a,#0xD4
   10B0 DD 96 EF           3175 	sub	a,-17 (ix)
   10B3 3E 00              3176 	ld	a,#0x00
   10B5 DD 9E F0           3177 	sbc	a,-16 (ix)
   10B8 F2rC3s10           3178 	jp	P,00106$
   10BB DD 36 EF D4        3179 	ld	-17 (ix),#0xD4
   10BF DD 36 F0 00        3180 	ld	-16 (ix),#0x00
   10C3                    3181 00106$:
                           3182 ;demo.c:511: if(bulbflipper == 1) {
   10C3 3ArA5s40           3183 	ld	a,(#_bulbflipper+0)
   10C6 D6 01              3184 	sub	a,#0x01
   10C8 20 06              3185 	jr	NZ,00130$
   10CA 3ArA6s40           3186 	ld	a,(#_bulbflipper+1)
   10CD B7                 3187 	or	a,a
   10CE 28 03              3188 	jr	Z,00131$
   10D0                    3189 00130$:
   10D0 C3rA4s11           3190 	jp	00108$
   10D3                    3191 00131$:
                           3192 ;demo.c:512: cmd.size_x = 72;
   10D3 21 08 00           3193 	ld	hl,#0x0008
   10D6 39                 3194 	add	hl,sp
   10D7 EB                 3195 	ex	de,hl
   10D8 21 08 00           3196 	ld	hl,#0x0008
   10DB 19                 3197 	add	hl,de
   10DC 36 48              3198 	ld	(hl),#0x48
   10DE 23                 3199 	inc	hl
   10DF 36 00              3200 	ld	(hl),#0x00
                           3201 ;demo.c:513: cmd.size_y = 16;
   10E1 21 0A 00           3202 	ld	hl,#0x000A
   10E4 19                 3203 	add	hl,de
   10E5 36 10              3204 	ld	(hl),#0x10
   10E7 23                 3205 	inc	hl
   10E8 36 00              3206 	ld	(hl),#0x00
                           3207 ;demo.c:514: cmd.data = 0;
   10EA 21 0C 00           3208 	ld	hl,#0x000C
   10ED 19                 3209 	add	hl,de
   10EE 4D                 3210 	ld	c,l
   10EF 44                 3211 	ld	b,h
   10F0 3E 00              3212 	ld	a,#0x00
   10F2 02                 3213 	ld	(bc),a
                           3214 ;demo.c:515: cmd.argument = 0x04; // from 72xY to left
   10F3 21 0D 00           3215 	ld	hl,#0x000D
   10F6 19                 3216 	add	hl,de
   10F7 4D                 3217 	ld	c,l
   10F8 44                 3218 	ld	b,h
   10F9 3E 04              3219 	ld	a,#0x04
   10FB 02                 3220 	ld	(bc),a
                           3221 ;demo.c:516: cmd.command = 0xe0; // vram to vram, y only
   10FC 21 0E 00           3222 	ld	hl,#0x000E
   10FF 19                 3223 	add	hl,de
   1100 4D                 3224 	ld	c,l
   1101 44                 3225 	ld	b,h
   1102 3E E0              3226 	ld	a,#0xE0
   1104 02                 3227 	ld	(bc),a
                           3228 ;demo.c:517: cmd.source_x = 72;
   1105 6B                 3229 	ld	l,e
   1106 62                 3230 	ld	h,d
   1107 36 48              3231 	ld	(hl),#0x48
   1109 23                 3232 	inc	hl
   110A 36 00              3233 	ld	(hl),#0x00
                           3234 ;demo.c:518: cmd.dest_x = 72;
   110C 21 04 00           3235 	ld	hl,#0x0004
   110F 19                 3236 	add	hl,de
   1110 36 48              3237 	ld	(hl),#0x48
   1112 23                 3238 	inc	hl
   1113 36 00              3239 	ld	(hl),#0x00
                           3240 ;demo.c:520: for (y = ender; y < enderend; y+=16) {
   1115 ED 4BrABs40        3241 	ld	bc,(_ender)
   1119 DD 71 ED           3242 	ld	-19 (ix),c
   111C DD 70 EE           3243 	ld	-18 (ix),b
   111F                    3244 00110$:
   111F DD 7E ED           3245 	ld	a,-19 (ix)
   1122 DD 96 EF           3246 	sub	a,-17 (ix)
   1125 DD 7E EE           3247 	ld	a,-18 (ix)
   1128 DD 9E F0           3248 	sbc	a,-16 (ix)
   112B F2r8Bs11           3249 	jp	P,00113$
                           3250 ;demo.c:521: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   112E 21 08 00           3251 	ld	hl,#0x0008
   1131 39                 3252 	add	hl,sp
   1132 4D                 3253 	ld	c,l
   1133 44                 3254 	ld	b,h
   1134 21 02 00           3255 	ld	hl,#0x0002
   1137 09                 3256 	add	hl,bc
   1138 DD 75 E9           3257 	ld	-23 (ix),l
   113B DD 74 EA           3258 	ld	-22 (ix),h
   113E 3ArA7s40           3259 	ld	a,(#_ff1+0)
   1141 DD 86 ED           3260 	add	a,-19 (ix)
   1144 5F                 3261 	ld	e,a
   1145 3ArA8s40           3262 	ld	a,(#_ff1+1)
   1148 DD 8E EE           3263 	adc	a,-18 (ix)
   114B 16 00              3264 	ld	d,#0x00
   114D 21r00s00           3265 	ld	hl,#_sintab
   1150 19                 3266 	add	hl,de
   1151 5E                 3267 	ld	e,(hl)
   1152 CB 2B              3268 	sra	e
   1154 7B                 3269 	ld	a,e
   1155 17                 3270 	rla	
   1156 9F                 3271 	sbc	a,a
   1157 57                 3272 	ld	d,a
   1158 21 40 01           3273 	ld	hl,#0x0140
   115B 19                 3274 	add	hl,de
   115C EB                 3275 	ex	de,hl
   115D DD 6E E9           3276 	ld	l,-23 (ix)
   1160 DD 66 EA           3277 	ld	h,-22 (ix)
   1163 73                 3278 	ld	(hl),e
   1164 23                 3279 	inc	hl
   1165 72                 3280 	ld	(hl),d
                           3281 ;demo.c:522: cmd.dest_y = y;
   1166 21 06 00           3282 	ld	hl,#0x0006
   1169 09                 3283 	add	hl,bc
   116A DD 7E ED           3284 	ld	a,-19 (ix)
   116D 77                 3285 	ld	(hl),a
   116E 23                 3286 	inc	hl
   116F DD 7E EE           3287 	ld	a,-18 (ix)
   1172 77                 3288 	ld	(hl),a
                           3289 ;demo.c:523: vdp_copier(&cmd);
   1173 C5                 3290 	push	bc
   1174 CDr00s00           3291 	call	_vdp_copier
   1177 F1                 3292 	pop	af
                           3293 ;demo.c:520: for (y = ender; y < enderend; y+=16) {
   1178 DD 7E ED           3294 	ld	a,-19 (ix)
   117B C6 10              3295 	add	a,#0x10
   117D DD 77 ED           3296 	ld	-19 (ix),a
   1180 DD 7E EE           3297 	ld	a,-18 (ix)
   1183 CE 00              3298 	adc	a,#0x00
   1185 DD 77 EE           3299 	ld	-18 (ix),a
   1188 C3r1Fs11           3300 	jp	00110$
   118B                    3301 00113$:
                           3302 ;demo.c:525: ff1+=4;
   118B 21rA7s40           3303 	ld	hl,#_ff1
   118E 7E                 3304 	ld	a,(hl)
   118F C6 04              3305 	add	a,#0x04
   1191 23                 3306 	inc	hl
   1192 2B                 3307 	dec	hl
   1193 C5                 3308 	push	bc
   1194 4F                 3309 	ld	c, a
   1195 23                 3310 	inc	hl
   1196 7E                 3311 	ld	a, (hl)
   1197 47                 3312 	ld	b, a
   1198 79                 3313 	ld	a, c
   1199 2B                 3314 	dec	hl
   119A 77                 3315 	ld	(hl), a
   119B 78                 3316 	ld	a, b
   119C C1                 3317 	pop	bc
   119D CE 00              3318 	adc	a,#0x00
   119F 23                 3319 	inc	hl
   11A0 77                 3320 	ld	(hl),a
   11A1 C3r6Es12           3321 	jp	00109$
   11A4                    3322 00108$:
                           3323 ;demo.c:529: cmd.size_x = 72;
   11A4 21 08 00           3324 	ld	hl,#0x0008
   11A7 39                 3325 	add	hl,sp
   11A8 4D                 3326 	ld	c,l
   11A9 44                 3327 	ld	b,h
   11AA 21 08 00           3328 	ld	hl,#0x0008
   11AD 09                 3329 	add	hl,bc
   11AE 36 48              3330 	ld	(hl),#0x48
   11B0 23                 3331 	inc	hl
   11B1 36 00              3332 	ld	(hl),#0x00
                           3333 ;demo.c:530: cmd.size_y = 16;
   11B3 21 0A 00           3334 	ld	hl,#0x000A
   11B6 09                 3335 	add	hl,bc
   11B7 36 10              3336 	ld	(hl),#0x10
   11B9 23                 3337 	inc	hl
   11BA 36 00              3338 	ld	(hl),#0x00
                           3339 ;demo.c:531: cmd.data = 0;
   11BC 21 0C 00           3340 	ld	hl,#0x000C
   11BF 09                 3341 	add	hl,bc
   11C0 EB                 3342 	ex	de,hl
   11C1 3E 00              3343 	ld	a,#0x00
   11C3 12                 3344 	ld	(de),a
                           3345 ;demo.c:532: cmd.argument = 0x00; // from 182xY to right
   11C4 21 0D 00           3346 	ld	hl,#0x000D
   11C7 09                 3347 	add	hl,bc
   11C8 EB                 3348 	ex	de,hl
   11C9 3E 00              3349 	ld	a,#0x00
   11CB 12                 3350 	ld	(de),a
                           3351 ;demo.c:533: cmd.command = 0xe0; // vram to vram, y only
   11CC 21 0E 00           3352 	ld	hl,#0x000E
   11CF 09                 3353 	add	hl,bc
   11D0 EB                 3354 	ex	de,hl
   11D1 3E E0              3355 	ld	a,#0xE0
   11D3 12                 3356 	ld	(de),a
                           3357 ;demo.c:534: cmd.source_x = 182;
   11D4 69                 3358 	ld	l,c
   11D5 60                 3359 	ld	h,b
   11D6 36 B6              3360 	ld	(hl),#0xB6
   11D8 23                 3361 	inc	hl
   11D9 36 00              3362 	ld	(hl),#0x00
                           3363 ;demo.c:535: cmd.dest_x = 182;
   11DB 21 04 00           3364 	ld	hl,#0x0004
   11DE 09                 3365 	add	hl,bc
   11DF 5D                 3366 	ld	e,l
   11E0 54                 3367 	ld	d,h
   11E1 36 B6              3368 	ld	(hl),#0xB6
   11E3 23                 3369 	inc	hl
   11E4 36 00              3370 	ld	(hl),#0x00
                           3371 ;demo.c:537: for (y = ender; y < enderend; y+=16) {
   11E6 ED 4BrABs40        3372 	ld	bc,(_ender)
   11EA                    3373 00114$:
   11EA 79                 3374 	ld	a,c
   11EB DD 96 EF           3375 	sub	a,-17 (ix)
   11EE 78                 3376 	ld	a,b
   11EF DD 9E F0           3377 	sbc	a,-16 (ix)
   11F2 F2r58s12           3378 	jp	P,00117$
                           3379 ;demo.c:538: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   11F5 21 08 00           3380 	ld	hl,#0x0008
   11F8 39                 3381 	add	hl,sp
   11F9 DD 75 E9           3382 	ld	-23 (ix),l
   11FC DD 74 EA           3383 	ld	-22 (ix),h
   11FF DD 7E E9           3384 	ld	a,-23 (ix)
   1202 C6 02              3385 	add	a,#0x02
   1204 DD 77 EB           3386 	ld	-21 (ix),a
   1207 DD 7E EA           3387 	ld	a,-22 (ix)
   120A CE 00              3388 	adc	a,#0x00
   120C DD 77 EC           3389 	ld	-20 (ix),a
   120F 3ArA9s40           3390 	ld	a,(#_ff2+0)
   1212 81                 3391 	add	a,c
   1213 5F                 3392 	ld	e,a
   1214 3ArAAs40           3393 	ld	a,(#_ff2+1)
   1217 88                 3394 	adc	a,b
   1218 16 00              3395 	ld	d,#0x00
   121A 21r00s00           3396 	ld	hl,#_sintab
   121D 19                 3397 	add	hl,de
   121E 5E                 3398 	ld	e,(hl)
   121F CB 2B              3399 	sra	e
   1221 7B                 3400 	ld	a,e
   1222 17                 3401 	rla	
   1223 9F                 3402 	sbc	a,a
   1224 57                 3403 	ld	d,a
   1225 21 40 01           3404 	ld	hl,#0x0140
   1228 19                 3405 	add	hl,de
   1229 EB                 3406 	ex	de,hl
   122A DD 6E EB           3407 	ld	l,-21 (ix)
   122D DD 66 EC           3408 	ld	h,-20 (ix)
   1230 73                 3409 	ld	(hl),e
   1231 23                 3410 	inc	hl
   1232 72                 3411 	ld	(hl),d
                           3412 ;demo.c:539: cmd.dest_y = y;
   1233 DD 7E E9           3413 	ld	a,-23 (ix)
   1236 C6 06              3414 	add	a,#0x06
   1238 6F                 3415 	ld	l, a
   1239 DD 7E EA           3416 	ld	a, -22 (ix)
   123C CE 00              3417 	adc	a, #0x00
   123E 67                 3418 	ld	h,a
   123F 71                 3419 	ld	(hl),c
   1240 23                 3420 	inc	hl
   1241 70                 3421 	ld	(hl),b
                           3422 ;demo.c:540: vdp_copier(&cmd);
   1242 C5                 3423 	push	bc
   1243 DD 6E E9           3424 	ld	l,-23 (ix)
   1246 DD 66 EA           3425 	ld	h,-22 (ix)
   1249 E5                 3426 	push	hl
   124A CDr00s00           3427 	call	_vdp_copier
   124D F1                 3428 	pop	af
   124E C1                 3429 	pop	bc
                           3430 ;demo.c:537: for (y = ender; y < enderend; y+=16) {
   124F 21 10 00           3431 	ld	hl,#0x0010
   1252 09                 3432 	add	hl,bc
   1253 4D                 3433 	ld	c,l
   1254 44                 3434 	ld	b,h
   1255 C3rEAs11           3435 	jp	00114$
   1258                    3436 00117$:
                           3437 ;demo.c:542: ff2+=4;
   1258 21rA9s40           3438 	ld	hl,#_ff2
   125B 7E                 3439 	ld	a,(hl)
   125C C6 04              3440 	add	a,#0x04
   125E 23                 3441 	inc	hl
   125F 2B                 3442 	dec	hl
   1260 C5                 3443 	push	bc
   1261 4F                 3444 	ld	c, a
   1262 23                 3445 	inc	hl
   1263 7E                 3446 	ld	a, (hl)
   1264 47                 3447 	ld	b, a
   1265 79                 3448 	ld	a, c
   1266 2B                 3449 	dec	hl
   1267 77                 3450 	ld	(hl), a
   1268 78                 3451 	ld	a, b
   1269 C1                 3452 	pop	bc
   126A CE 00              3453 	adc	a,#0x00
   126C 23                 3454 	inc	hl
   126D 77                 3455 	ld	(hl),a
   126E                    3456 00109$:
                           3457 ;demo.c:545: bulbflipper = -bulbflipper;
   126E AF                 3458 	xor	a,a
   126F FD 21rA5s40        3459 	ld	iy,#_bulbflipper
   1273 3E 00              3460 	ld	a,#0x00
   1275 FD 9E 00           3461 	sbc	a,0 (iy)
   1278 21rA5s40           3462 	ld	hl,#_bulbflipper + 0
   127B 77                 3463 	ld	(hl), a
   127C FD 21rA5s40        3464 	ld	iy,#_bulbflipper
   1280 3E 00              3465 	ld	a,#0x00
   1282 FD 9E 01           3466 	sbc	a,1 (iy)
   1285 21rA6s40           3467 	ld	hl,#_bulbflipper + 1
   1288 77                 3468 	ld	(hl), a
   1289 DD F9              3469 	ld	sp,ix
   128B DD E1              3470 	pop	ix
   128D C9                 3471 	ret
   128E                    3472 _bulbs_end::
                           3473 ;demo.c:556: void do_animplay() {
                           3474 ;	---------------------------------
                           3475 ; Function do_animplay
                           3476 ; ---------------------------------
   128E                    3477 _do_animplay_start::
   128E                    3478 _do_animplay:
   128E DD E5              3479 	push	ix
   1290 DD 21 00 00        3480 	ld	ix,#0
   1294 DD 39              3481 	add	ix,sp
   1296 21 EC FF           3482 	ld	hl,#-20
   1299 39                 3483 	add	hl,sp
   129A F9                 3484 	ld	sp,hl
                           3485 ;demo.c:562: for (y = 0; y < 106; y+=1) {
   129B DD 36 FF 00        3486 	ld	-1 (ix),#0x00
   129F                    3487 00107$:
   129F DD 7E FF           3488 	ld	a,-1 (ix)
   12A2 D6 6A              3489 	sub	a,#0x6A
   12A4 D2r50s13           3490 	jp	NC,00110$
                           3491 ;demo.c:563: cmd.source_x = xo;
   12A7 21 04 00           3492 	ld	hl,#0x0004
   12AA 39                 3493 	add	hl,sp
   12AB EB                 3494 	ex	de,hl
   12AC ED 4BrAFs40        3495 	ld	bc,(_xo)
   12B0 EB                 3496 	ex	de,hl
   12B1 71                 3497 	ld	(hl),c
   12B2 23                 3498 	inc	hl
   12B3 70                 3499 	ld	(hl),b
                           3500 ;demo.c:564: cmd.source_y = 256+po+yo+(y>>1);
   12B4 21 04 00           3501 	ld	hl,#0x0004
   12B7 39                 3502 	add	hl,sp
   12B8 4D                 3503 	ld	c,l
   12B9 44                 3504 	ld	b,h
   12BA 21 02 00           3505 	ld	hl,#0x0002
   12BD 09                 3506 	add	hl,bc
   12BE DD 75 EE           3507 	ld	-18 (ix),l
   12C1 DD 74 EF           3508 	ld	-17 (ix),h
   12C4 3ArB3s40           3509 	ld	a,(#_po+0)
   12C7 5F                 3510 	ld	e,a
   12C8 3ArB4s40           3511 	ld	a,(#_po+1)
   12CB C6 01              3512 	add	a,#0x01
   12CD 57                 3513 	ld	d,a
   12CE 21rB1s40           3514 	ld	hl,#_yo
   12D1 7B                 3515 	ld	a,e
   12D2 86                 3516 	add	a,(hl)
   12D3 DD 77 EC           3517 	ld	-20 (ix),a
   12D6 7A                 3518 	ld	a,d
   12D7 23                 3519 	inc	hl
   12D8 8E                 3520 	adc	a,(hl)
   12D9 DD 77 ED           3521 	ld	-19 (ix),a
   12DC DD 5E FF           3522 	ld	e,-1 (ix)
   12DF CB 3B              3523 	srl	e
   12E1 16 00              3524 	ld	d,#0x00
   12E3 DD 7E EC           3525 	ld	a,-20 (ix)
   12E6 83                 3526 	add	a,e
   12E7 5F                 3527 	ld	e,a
   12E8 DD 7E ED           3528 	ld	a,-19 (ix)
   12EB 8A                 3529 	adc	a,d
   12EC 57                 3530 	ld	d,a
   12ED DD 6E EE           3531 	ld	l,-18 (ix)
   12F0 DD 66 EF           3532 	ld	h,-17 (ix)
   12F3 73                 3533 	ld	(hl),e
   12F4 23                 3534 	inc	hl
   12F5 72                 3535 	ld	(hl),d
                           3536 ;demo.c:565: cmd.dest_x = 0;
   12F6 21 04 00           3537 	ld	hl,#0x0004
   12F9 09                 3538 	add	hl,bc
   12FA 36 00              3539 	ld	(hl),#0x00
   12FC 23                 3540 	inc	hl
   12FD 36 00              3541 	ld	(hl),#0x00
                           3542 ;demo.c:566: cmd.dest_y = (y<<1);
   12FF 21 06 00           3543 	ld	hl,#0x0006
   1302 09                 3544 	add	hl,bc
   1303 DD 75 EC           3545 	ld	-20 (ix),l
   1306 DD 74 ED           3546 	ld	-19 (ix),h
   1309 DD 5E FF           3547 	ld	e,-1 (ix)
   130C 16 00              3548 	ld	d,#0x00
   130E CB 23              3549 	sla	e
   1310 CB 12              3550 	rl	d
   1312 DD 6E EC           3551 	ld	l,-20 (ix)
   1315 DD 66 ED           3552 	ld	h,-19 (ix)
   1318 73                 3553 	ld	(hl),e
   1319 23                 3554 	inc	hl
   131A 72                 3555 	ld	(hl),d
                           3556 ;demo.c:567: cmd.size_x = 128;
   131B 21 08 00           3557 	ld	hl,#0x0008
   131E 09                 3558 	add	hl,bc
   131F 36 80              3559 	ld	(hl),#0x80
   1321 23                 3560 	inc	hl
   1322 36 00              3561 	ld	(hl),#0x00
                           3562 ;demo.c:568: cmd.size_y = 1;
   1324 21 0A 00           3563 	ld	hl,#0x000A
   1327 09                 3564 	add	hl,bc
   1328 36 01              3565 	ld	(hl),#0x01
   132A 23                 3566 	inc	hl
   132B 36 00              3567 	ld	(hl),#0x00
                           3568 ;demo.c:569: cmd.data = 0;
   132D 21 0C 00           3569 	ld	hl,#0x000C
   1330 09                 3570 	add	hl,bc
   1331 EB                 3571 	ex	de,hl
   1332 3E 00              3572 	ld	a,#0x00
   1334 12                 3573 	ld	(de),a
                           3574 ;demo.c:570: cmd.argument = 0x00;
   1335 21 0D 00           3575 	ld	hl,#0x000D
   1338 09                 3576 	add	hl,bc
   1339 EB                 3577 	ex	de,hl
   133A 3E 00              3578 	ld	a,#0x00
   133C 12                 3579 	ld	(de),a
                           3580 ;demo.c:571: cmd.command = 0xD0;
   133D 21 0E 00           3581 	ld	hl,#0x000E
   1340 09                 3582 	add	hl,bc
   1341 EB                 3583 	ex	de,hl
   1342 3E D0              3584 	ld	a,#0xD0
   1344 12                 3585 	ld	(de),a
                           3586 ;demo.c:572: vdp_copier(&cmd);
   1345 C5                 3587 	push	bc
   1346 CDr00s00           3588 	call	_vdp_copier
   1349 F1                 3589 	pop	af
                           3590 ;demo.c:562: for (y = 0; y < 106; y+=1) {
   134A DD 34 FF           3591 	inc	-1 (ix)
   134D C3r9Fs12           3592 	jp	00107$
   1350                    3593 00110$:
                           3594 ;demo.c:575: for (y = 0; y < 106; y+=1) {
   1350 DD 36 FF 00        3595 	ld	-1 (ix),#0x00
   1354                    3596 00111$:
   1354 DD 7E FF           3597 	ld	a,-1 (ix)
   1357 D6 6A              3598 	sub	a,#0x6A
   1359 D2r05s14           3599 	jp	NC,00114$
                           3600 ;demo.c:576: cmd.source_x = xo;
   135C 21 04 00           3601 	ld	hl,#0x0004
   135F 39                 3602 	add	hl,sp
   1360 EB                 3603 	ex	de,hl
   1361 ED 4BrAFs40        3604 	ld	bc,(_xo)
   1365 EB                 3605 	ex	de,hl
   1366 71                 3606 	ld	(hl),c
   1367 23                 3607 	inc	hl
   1368 70                 3608 	ld	(hl),b
                           3609 ;demo.c:577: cmd.source_y = 256+po+yo+(y>>1);
   1369 21 04 00           3610 	ld	hl,#0x0004
   136C 39                 3611 	add	hl,sp
   136D 4D                 3612 	ld	c,l
   136E 44                 3613 	ld	b,h
   136F 21 02 00           3614 	ld	hl,#0x0002
   1372 09                 3615 	add	hl,bc
   1373 DD 75 EC           3616 	ld	-20 (ix),l
   1376 DD 74 ED           3617 	ld	-19 (ix),h
   1379 3ArB3s40           3618 	ld	a,(#_po+0)
   137C 5F                 3619 	ld	e,a
   137D 3ArB4s40           3620 	ld	a,(#_po+1)
   1380 C6 01              3621 	add	a,#0x01
   1382 57                 3622 	ld	d,a
   1383 21rB1s40           3623 	ld	hl,#_yo
   1386 7B                 3624 	ld	a,e
   1387 86                 3625 	add	a,(hl)
   1388 DD 77 EE           3626 	ld	-18 (ix),a
   138B 7A                 3627 	ld	a,d
   138C 23                 3628 	inc	hl
   138D 8E                 3629 	adc	a,(hl)
   138E DD 77 EF           3630 	ld	-17 (ix),a
   1391 DD 5E FF           3631 	ld	e,-1 (ix)
   1394 CB 3B              3632 	srl	e
   1396 16 00              3633 	ld	d,#0x00
   1398 DD 7E EE           3634 	ld	a,-18 (ix)
   139B 83                 3635 	add	a,e
   139C 5F                 3636 	ld	e,a
   139D DD 7E EF           3637 	ld	a,-17 (ix)
   13A0 8A                 3638 	adc	a,d
   13A1 57                 3639 	ld	d,a
   13A2 DD 6E EC           3640 	ld	l,-20 (ix)
   13A5 DD 66 ED           3641 	ld	h,-19 (ix)
   13A8 73                 3642 	ld	(hl),e
   13A9 23                 3643 	inc	hl
   13AA 72                 3644 	ld	(hl),d
                           3645 ;demo.c:578: cmd.dest_x = 128;
   13AB 21 04 00           3646 	ld	hl,#0x0004
   13AE 09                 3647 	add	hl,bc
   13AF 36 80              3648 	ld	(hl),#0x80
   13B1 23                 3649 	inc	hl
   13B2 36 00              3650 	ld	(hl),#0x00
                           3651 ;demo.c:579: cmd.dest_y = (y<<1);
   13B4 21 06 00           3652 	ld	hl,#0x0006
   13B7 09                 3653 	add	hl,bc
   13B8 DD 75 EC           3654 	ld	-20 (ix),l
   13BB DD 74 ED           3655 	ld	-19 (ix),h
   13BE DD 5E FF           3656 	ld	e,-1 (ix)
   13C1 16 00              3657 	ld	d,#0x00
   13C3 CB 23              3658 	sla	e
   13C5 CB 12              3659 	rl	d
   13C7 DD 6E EC           3660 	ld	l,-20 (ix)
   13CA DD 66 ED           3661 	ld	h,-19 (ix)
   13CD 73                 3662 	ld	(hl),e
   13CE 23                 3663 	inc	hl
   13CF 72                 3664 	ld	(hl),d
                           3665 ;demo.c:580: cmd.size_x = 128;
   13D0 21 08 00           3666 	ld	hl,#0x0008
   13D3 09                 3667 	add	hl,bc
   13D4 36 80              3668 	ld	(hl),#0x80
   13D6 23                 3669 	inc	hl
   13D7 36 00              3670 	ld	(hl),#0x00
                           3671 ;demo.c:581: cmd.size_y = 1;
   13D9 21 0A 00           3672 	ld	hl,#0x000A
   13DC 09                 3673 	add	hl,bc
   13DD 36 01              3674 	ld	(hl),#0x01
   13DF 23                 3675 	inc	hl
   13E0 36 00              3676 	ld	(hl),#0x00
                           3677 ;demo.c:582: cmd.data = 0;
   13E2 21 0C 00           3678 	ld	hl,#0x000C
   13E5 09                 3679 	add	hl,bc
   13E6 EB                 3680 	ex	de,hl
   13E7 3E 00              3681 	ld	a,#0x00
   13E9 12                 3682 	ld	(de),a
                           3683 ;demo.c:583: cmd.argument = 0x00;
   13EA 21 0D 00           3684 	ld	hl,#0x000D
   13ED 09                 3685 	add	hl,bc
   13EE EB                 3686 	ex	de,hl
   13EF 3E 00              3687 	ld	a,#0x00
   13F1 12                 3688 	ld	(de),a
                           3689 ;demo.c:584: cmd.command = 0xd2; // logical vram to vram, xor
   13F2 21 0E 00           3690 	ld	hl,#0x000E
   13F5 09                 3691 	add	hl,bc
   13F6 EB                 3692 	ex	de,hl
   13F7 3E D2              3693 	ld	a,#0xD2
   13F9 12                 3694 	ld	(de),a
                           3695 ;demo.c:585: vdp_copier(&cmd);
   13FA C5                 3696 	push	bc
   13FB CDr00s00           3697 	call	_vdp_copier
   13FE F1                 3698 	pop	af
                           3699 ;demo.c:575: for (y = 0; y < 106; y+=1) {
   13FF DD 34 FF           3700 	inc	-1 (ix)
   1402 C3r54s13           3701 	jp	00111$
   1405                    3702 00114$:
                           3703 ;demo.c:589: xo+=128;
   1405 21rAFs40           3704 	ld	hl,#_xo
   1408 7E                 3705 	ld	a,(hl)
   1409 C6 80              3706 	add	a,#0x80
   140B 23                 3707 	inc	hl
   140C 2B                 3708 	dec	hl
   140D C5                 3709 	push	bc
   140E 4F                 3710 	ld	c, a
   140F 23                 3711 	inc	hl
   1410 7E                 3712 	ld	a, (hl)
   1411 47                 3713 	ld	b, a
   1412 79                 3714 	ld	a, c
   1413 2B                 3715 	dec	hl
   1414 77                 3716 	ld	(hl), a
   1415 78                 3717 	ld	a, b
   1416 C1                 3718 	pop	bc
   1417 CE 00              3719 	adc	a,#0x00
   1419 23                 3720 	inc	hl
   141A 77                 3721 	ld	(hl),a
                           3722 ;demo.c:590: if (xo >= 256) {
   141B 3ArAFs40           3723 	ld	a,(#_xo+0)
   141E D6 00              3724 	sub	a,#0x00
   1420 3ArB0s40           3725 	ld	a,(#_xo+1)
   1423 DE 01              3726 	sbc	a,#0x01
   1425 FAr8Cs14           3727 	jp	M,00106$
                           3728 ;demo.c:591: xo = 0;
   1428 21rAFs40           3729 	ld	hl,#_xo + 0
   142B 36 00              3730 	ld	(hl), #0x00
   142D 21rB0s40           3731 	ld	hl,#_xo + 1
   1430 36 00              3732 	ld	(hl), #0x00
                           3733 ;demo.c:592: yo+=53;
   1432 21rB1s40           3734 	ld	hl,#_yo
   1435 7E                 3735 	ld	a,(hl)
   1436 C6 35              3736 	add	a,#0x35
   1438 23                 3737 	inc	hl
   1439 2B                 3738 	dec	hl
   143A C5                 3739 	push	bc
   143B 4F                 3740 	ld	c, a
   143C 23                 3741 	inc	hl
   143D 7E                 3742 	ld	a, (hl)
   143E 47                 3743 	ld	b, a
   143F 79                 3744 	ld	a, c
   1440 2B                 3745 	dec	hl
   1441 77                 3746 	ld	(hl), a
   1442 78                 3747 	ld	a, b
   1443 C1                 3748 	pop	bc
   1444 CE 00              3749 	adc	a,#0x00
   1446 23                 3750 	inc	hl
   1447 77                 3751 	ld	(hl),a
                           3752 ;demo.c:593: if (yo >= 212) { yo = 0; po+=256; }
   1448 3ArB1s40           3753 	ld	a,(#_yo+0)
   144B D6 D4              3754 	sub	a,#0xD4
   144D 3ArB2s40           3755 	ld	a,(#_yo+1)
   1450 DE 00              3756 	sbc	a,#0x00
   1452 FAr75s14           3757 	jp	M,00102$
   1455 21rB1s40           3758 	ld	hl,#_yo + 0
   1458 36 00              3759 	ld	(hl), #0x00
   145A 21rB2s40           3760 	ld	hl,#_yo + 1
   145D 36 00              3761 	ld	(hl), #0x00
   145F 21rB3s40           3762 	ld	hl,#_po
   1462 7E                 3763 	ld	a,(hl)
   1463 C6 00              3764 	add	a,#0x00
   1465 23                 3765 	inc	hl
   1466 2B                 3766 	dec	hl
   1467 C5                 3767 	push	bc
   1468 4F                 3768 	ld	c, a
   1469 23                 3769 	inc	hl
   146A 7E                 3770 	ld	a, (hl)
   146B 47                 3771 	ld	b, a
   146C 79                 3772 	ld	a, c
   146D 2B                 3773 	dec	hl
   146E 77                 3774 	ld	(hl), a
   146F 78                 3775 	ld	a, b
   1470 C1                 3776 	pop	bc
   1471 CE 01              3777 	adc	a,#0x01
   1473 23                 3778 	inc	hl
   1474 77                 3779 	ld	(hl),a
   1475                    3780 00102$:
                           3781 ;demo.c:594: if (po >= 768) {
   1475 3ArB3s40           3782 	ld	a,(#_po+0)
   1478 D6 00              3783 	sub	a,#0x00
   147A 3ArB4s40           3784 	ld	a,(#_po+1)
   147D DE 03              3785 	sbc	a,#0x03
   147F FAr8Cs14           3786 	jp	M,00106$
                           3787 ;demo.c:595: po = 0;
   1482 21rB3s40           3788 	ld	hl,#_po + 0
   1485 36 00              3789 	ld	(hl), #0x00
   1487 21rB4s40           3790 	ld	hl,#_po + 1
   148A 36 00              3791 	ld	(hl), #0x00
   148C                    3792 00106$:
                           3793 ;demo.c:600: msx2_palette(15,3+sintab[fffaaa & 255]>>5,3,4);
   148C 21rB5s40           3794 	ld	hl,#_fffaaa + 0
   148F 4E                 3795 	ld	c,(hl)
   1490 06 00              3796 	ld	b,#0x00
   1492 21r00s00           3797 	ld	hl,#_sintab
   1495 09                 3798 	add	hl,bc
   1496 7E                 3799 	ld	a,(hl)
   1497 4F                 3800 	ld	c,a
   1498 17                 3801 	rla	
   1499 9F                 3802 	sbc	a,a
   149A 47                 3803 	ld	b,a
   149B 03                 3804 	inc	bc
   149C 03                 3805 	inc	bc
   149D 03                 3806 	inc	bc
   149E CB 28              3807 	sra	b
   14A0 CB 19              3808 	rr	c
   14A2 CB 28              3809 	sra	b
   14A4 CB 19              3810 	rr	c
   14A6 CB 28              3811 	sra	b
   14A8 CB 19              3812 	rr	c
   14AA CB 28              3813 	sra	b
   14AC CB 19              3814 	rr	c
   14AE CB 28              3815 	sra	b
   14B0 CB 19              3816 	rr	c
   14B2 21 03 04           3817 	ld	hl,#0x0403
   14B5 E5                 3818 	push	hl
   14B6 41                 3819 	ld	b,c
   14B7 0E 0F              3820 	ld	c,#0x0F
   14B9 C5                 3821 	push	bc
   14BA CDr00s00           3822 	call	_msx2_palette
   14BD F1                 3823 	pop	af
   14BE F1                 3824 	pop	af
                           3825 ;demo.c:601: msx2_palette(3,2+sintab[fffaaa & 255]>>5,0,0);
   14BF 21rB5s40           3826 	ld	hl,#_fffaaa + 0
   14C2 4E                 3827 	ld	c,(hl)
   14C3 06 00              3828 	ld	b,#0x00
   14C5 21r00s00           3829 	ld	hl,#_sintab
   14C8 09                 3830 	add	hl,bc
   14C9 7E                 3831 	ld	a,(hl)
   14CA 4F                 3832 	ld	c,a
   14CB 17                 3833 	rla	
   14CC 9F                 3834 	sbc	a,a
   14CD 47                 3835 	ld	b,a
   14CE 03                 3836 	inc	bc
   14CF 03                 3837 	inc	bc
   14D0 CB 28              3838 	sra	b
   14D2 CB 19              3839 	rr	c
   14D4 CB 28              3840 	sra	b
   14D6 CB 19              3841 	rr	c
   14D8 CB 28              3842 	sra	b
   14DA CB 19              3843 	rr	c
   14DC CB 28              3844 	sra	b
   14DE CB 19              3845 	rr	c
   14E0 CB 28              3846 	sra	b
   14E2 CB 19              3847 	rr	c
   14E4 21 00 00           3848 	ld	hl,#0x0000
   14E7 E5                 3849 	push	hl
   14E8 41                 3850 	ld	b,c
   14E9 0E 03              3851 	ld	c,#0x03
   14EB C5                 3852 	push	bc
   14EC CDr00s00           3853 	call	_msx2_palette
   14EF F1                 3854 	pop	af
   14F0 F1                 3855 	pop	af
                           3856 ;demo.c:602: fffaaa++;
   14F1 FD 21rB5s40        3857 	ld	iy,#_fffaaa
   14F5 FD 34 00           3858 	inc	0 (iy)
   14F8 20 07              3859 	jr	NZ,00132$
   14FA FD 21rB5s40        3860 	ld	iy,#_fffaaa
   14FE FD 34 01           3861 	inc	1 (iy)
   1501                    3862 00132$:
   1501 DD F9              3863 	ld	sp,ix
   1503 DD E1              3864 	pop	ix
   1505 C9                 3865 	ret
   1506                    3866 _do_animplay_end::
                           3867 ;demo.c:611: void main() {
                           3868 ;	---------------------------------
                           3869 ; Function main
                           3870 ; ---------------------------------
   1506                    3871 _main_start::
   1506                    3872 _main:
                           3873 ;demo.c:612: unsigned char quit=0;
   1506 0E 00              3874 	ld	c,#0x00
                           3875 ;demo.c:613: int modes = 128; // interlace bit on
   1508 11 80 00           3876 	ld	de,#0x0080
                           3877 ;demo.c:617: spindown();
   150B C5                 3878 	push	bc
   150C D5                 3879 	push	de
   150D CDr00s00           3880 	call	_spindown
   1510 D1                 3881 	pop	de
   1511 C1                 3882 	pop	bc
                           3883 ;demo.c:619: puts("demo init\r\n\r\n");
   1512 C5                 3884 	push	bc
   1513 D5                 3885 	push	de
   1514 21rB0s16           3886 	ld	hl,#__str_1
   1517 E5                 3887 	push	hl
   1518 CDr00s00           3888 	call	_puts
   151B F1                 3889 	pop	af
   151C D1                 3890 	pop	de
   151D C1                 3891 	pop	bc
                           3892 ;demo.c:632: puts("music init...");
   151E C5                 3893 	push	bc
   151F D5                 3894 	push	de
   1520 21rBEs16           3895 	ld	hl,#__str_2
   1523 E5                 3896 	push	hl
   1524 CDr00s00           3897 	call	_puts
   1527 F1                 3898 	pop	af
   1528 D1                 3899 	pop	de
   1529 C1                 3900 	pop	bc
                           3901 ;demo.c:634: PLY_SongPtr = (char *)0x0103;
   152A 21r00s00           3902 	ld	hl,#_PLY_SongPtr + 0
   152D 36 03              3903 	ld	(hl), #0x03
   152F 21r01s00           3904 	ld	hl,#_PLY_SongPtr + 1
   1532 36 01              3905 	ld	(hl), #0x01
                           3906 ;demo.c:635: PLY_Init();
   1534 C5                 3907 	push	bc
   1535 D5                 3908 	push	de
   1536 CDr00s00           3909 	call	_PLY_Init
   1539 D1                 3910 	pop	de
   153A C1                 3911 	pop	bc
                           3912 ;demo.c:636: puts("done.\n\n");
   153B C5                 3913 	push	bc
   153C D5                 3914 	push	de
   153D 21rCCs16           3915 	ld	hl,#__str_3
   1540 E5                 3916 	push	hl
   1541 CDr00s00           3917 	call	_puts
   1544 F1                 3918 	pop	af
   1545 D1                 3919 	pop	de
   1546 C1                 3920 	pop	bc
                           3921 ;demo.c:638: if(isvdp2())
   1547 C5                 3922 	push	bc
   1548 D5                 3923 	push	de
   1549 CDr00s00           3924 	call	_isvdp2
   154C 45                 3925 	ld	b,l
   154D D1                 3926 	pop	de
   154E 78                 3927 	ld	a,b
   154F C1                 3928 	pop	bc
   1550 47                 3929 	ld	b,a
   1551 B7                 3930 	or	a,a
   1552 28 03              3931 	jr	Z,00102$
                           3932 ;demo.c:640: modes+=2; // pal
   1554 11 82 00           3933 	ld	de,#0x0082
   1557                    3934 00102$:
                           3935 ;demo.c:644: vdp_set_screen5();
   1557 C5                 3936 	push	bc
   1558 D5                 3937 	push	de
   1559 CDr00s00           3938 	call	_vdp_set_screen5
   155C D1                 3939 	pop	de
   155D C1                 3940 	pop	bc
                           3941 ;demo.c:646: vdp_register(VDP_MODE3,modes); // interlace on, screen mode pal or ntsc
   155E 43                 3942 	ld	b,e
   155F C5                 3943 	push	bc
   1560 C5                 3944 	push	bc
   1561 33                 3945 	inc	sp
   1562 3E 09              3946 	ld	a,#0x09
   1564 F5                 3947 	push	af
   1565 33                 3948 	inc	sp
   1566 CDr00s00           3949 	call	_vdp_register
   1569 F1                 3950 	pop	af
   156A C1                 3951 	pop	bc
                           3952 ;demo.c:648: puts("demo start\r\n");
   156B C5                 3953 	push	bc
   156C 21rD4s16           3954 	ld	hl,#__str_4
   156F E5                 3955 	push	hl
   1570 CDr00s00           3956 	call	_puts
   1573 F1                 3957 	pop	af
   1574 C1                 3958 	pop	bc
                           3959 ;demo.c:650: scratch_clear();
   1575 C5                 3960 	push	bc
   1576 CDr91s03           3961 	call	_scratch_clear
   1579 C1                 3962 	pop	bc
                           3963 ;demo.c:651: vdp_load_palette(scratch);
   157A C5                 3964 	push	bc
   157B 21r80s3F           3965 	ld	hl,#_scratch
   157E E5                 3966 	push	hl
   157F CDr00s00           3967 	call	_vdp_load_palette
   1582 F1                 3968 	pop	af
   1583 C1                 3969 	pop	bc
                           3970 ;demo.c:653: vdp_register(VDP_VOFFSET,0);
   1584 C5                 3971 	push	bc
   1585 21 17 00           3972 	ld	hl,#0x0017
   1588 E5                 3973 	push	hl
   1589 CDr00s00           3974 	call	_vdp_register
   158C F1                 3975 	pop	af
   158D C1                 3976 	pop	bc
                           3977 ;demo.c:659: pal_load("TWISTER PL5",32);
   158E C5                 3978 	push	bc
   158F 3E 20              3979 	ld	a,#0x20
   1591 F5                 3980 	push	af
   1592 33                 3981 	inc	sp
   1593 21rE1s16           3982 	ld	hl,#__str_5
   1596 E5                 3983 	push	hl
   1597 CDrA4s03           3984 	call	_pal_load
   159A F1                 3985 	pop	af
   159B 33                 3986 	inc	sp
   159C C1                 3987 	pop	bc
                           3988 ;demo.c:660: memcpy(twister_palette, cur_palette, 32);
   159D C5                 3989 	push	bc
   159E 21 20 00           3990 	ld	hl,#0x0020
   15A1 E5                 3991 	push	hl
   15A2 21r00s40           3992 	ld	hl,#_cur_palette
   15A5 E5                 3993 	push	hl
   15A6 21r40s40           3994 	ld	hl,#_twister_palette
   15A9 E5                 3995 	push	hl
   15AA CDr00s00           3996 	call	_memcpy
   15AD F1                 3997 	pop	af
   15AE F1                 3998 	pop	af
   15AF F1                 3999 	pop	af
   15B0 C1                 4000 	pop	bc
                           4001 ;demo.c:662: pal_load("BULBS   PL5",32);
   15B1 C5                 4002 	push	bc
   15B2 3E 20              4003 	ld	a,#0x20
   15B4 F5                 4004 	push	af
   15B5 33                 4005 	inc	sp
   15B6 21rEDs16           4006 	ld	hl,#__str_6
   15B9 E5                 4007 	push	hl
   15BA CDrA4s03           4008 	call	_pal_load
   15BD F1                 4009 	pop	af
   15BE 33                 4010 	inc	sp
   15BF C1                 4011 	pop	bc
                           4012 ;demo.c:665: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0);
   15C0 C5                 4013 	push	bc
   15C1 21 01 00           4014 	ld	hl,#0x0001
   15C4 E5                 4015 	push	hl
   15C5 2E 00              4016 	ld	l, #0x00
   15C7 E5                 4017 	push	hl
   15C8 21 6A 08           4018 	ld	hl,#0x086A
   15CB E5                 4019 	push	hl
   15CC 21rF9s16           4020 	ld	hl,#__str_7
   15CF E5                 4021 	push	hl
   15D0 CDr1Cs05           4022 	call	_pck_load
   15D3 F1                 4023 	pop	af
   15D4 F1                 4024 	pop	af
   15D5 F1                 4025 	pop	af
   15D6 F1                 4026 	pop	af
   15D7 C1                 4027 	pop	bc
                           4028 ;demo.c:666: pck_load("BULBS   PCK",2431,0x8000,VRAM_0);
   15D8 C5                 4029 	push	bc
   15D9 21 01 00           4030 	ld	hl,#0x0001
   15DC E5                 4031 	push	hl
   15DD 21 00 80           4032 	ld	hl,#0x8000
   15E0 E5                 4033 	push	hl
   15E1 21 7F 09           4034 	ld	hl,#0x097F
   15E4 E5                 4035 	push	hl
   15E5 21r05s17           4036 	ld	hl,#__str_8
   15E8 E5                 4037 	push	hl
   15E9 CDr1Cs05           4038 	call	_pck_load
   15EC F1                 4039 	pop	af
   15ED F1                 4040 	pop	af
   15EE F1                 4041 	pop	af
   15EF F1                 4042 	pop	af
   15F0 C1                 4043 	pop	bc
                           4044 ;demo.c:667: pck_load("TWISTER PCK",4032,0x0000,VRAM_1);
   15F1 C5                 4045 	push	bc
   15F2 21 00 00           4046 	ld	hl,#0x0000
   15F5 E5                 4047 	push	hl
   15F6 2E 00              4048 	ld	l, #0x00
   15F8 E5                 4049 	push	hl
   15F9 21 C0 0F           4050 	ld	hl,#0x0FC0
   15FC E5                 4051 	push	hl
   15FD 21r11s17           4052 	ld	hl,#__str_9
   1600 E5                 4053 	push	hl
   1601 CDr1Cs05           4054 	call	_pck_load
   1604 F1                 4055 	pop	af
   1605 F1                 4056 	pop	af
   1606 F1                 4057 	pop	af
   1607 F1                 4058 	pop	af
   1608 C1                 4059 	pop	bc
                           4060 ;demo.c:674: scratch_clear();
   1609 C5                 4061 	push	bc
   160A CDr91s03           4062 	call	_scratch_clear
   160D C1                 4063 	pop	bc
                           4064 ;demo.c:675: vdp_load_palette(scratch);
   160E C5                 4065 	push	bc
   160F 21r80s3F           4066 	ld	hl,#_scratch
   1612 E5                 4067 	push	hl
   1613 CDr00s00           4068 	call	_vdp_load_palette
   1616 F1                 4069 	pop	af
   1617 C1                 4070 	pop	bc
                           4071 ;demo.c:677: install_isr(my_isr);
   1618 C5                 4072 	push	bc
   1619 21r2Cs02           4073 	ld	hl,#_my_isr
   161C E5                 4074 	push	hl
   161D CDr00s00           4075 	call	_install_isr
   1620 F1                 4076 	pop	af
   1621 C1                 4077 	pop	bc
                           4078 ;demo.c:679: while (!quit) {
   1622                    4079 00113$:
   1622 AF                 4080 	xor	a,a
   1623 B1                 4081 	or	a,c
   1624 C2r8Ds16           4082 	jp	NZ,00115$
                           4083 ;demo.c:680: waitVB();
   1627 76                 4084 		halt 
                           4085 ;demo.c:687: if (vbicount < 64) { 
   1628 3Ar60s40           4086 	ld	a,(#_vbicount+0)
   162B D6 40              4087 	sub	a,#0x40
   162D 3Ar61s40           4088 	ld	a,(#_vbicount+1)
   1630 DE 00              4089 	sbc	a,#0x00
   1632 F2r3As16           4090 	jp	P,00104$
                           4091 ;demo.c:688: fadein(); 
   1635 C5                 4092 	push	bc
   1636 CDr66s05           4093 	call	_fadein
   1639 C1                 4094 	pop	bc
   163A                    4095 00104$:
                           4096 ;demo.c:691: if (vbicount >= 192 && vbicount < 800) {
   163A 3Ar60s40           4097 	ld	a,(#_vbicount+0)
   163D D6 C0              4098 	sub	a,#0xC0
   163F 3Ar61s40           4099 	ld	a,(#_vbicount+1)
   1642 DE 00              4100 	sbc	a,#0x00
   1644 FAr59s16           4101 	jp	M,00106$
   1647 3Ar60s40           4102 	ld	a,(#_vbicount+0)
   164A D6 20              4103 	sub	a,#0x20
   164C 3Ar61s40           4104 	ld	a,(#_vbicount+1)
   164F DE 03              4105 	sbc	a,#0x03
   1651 F2r59s16           4106 	jp	P,00106$
                           4107 ;demo.c:692: bulbs();
   1654 C5                 4108 	push	bc
   1655 CDr17s10           4109 	call	_bulbs
   1658 C1                 4110 	pop	bc
   1659                    4111 00106$:
                           4112 ;demo.c:695: if (vbicount >= 800 && vbicount < 10000) {
   1659 3Ar60s40           4113 	ld	a,(#_vbicount+0)
   165C D6 20              4114 	sub	a,#0x20
   165E 3Ar61s40           4115 	ld	a,(#_vbicount+1)
   1661 DE 03              4116 	sbc	a,#0x03
   1663 FAr78s16           4117 	jp	M,00109$
   1666 3Ar60s40           4118 	ld	a,(#_vbicount+0)
   1669 D6 10              4119 	sub	a,#0x10
   166B 3Ar61s40           4120 	ld	a,(#_vbicount+1)
   166E DE 27              4121 	sbc	a,#0x27
   1670 F2r78s16           4122 	jp	P,00109$
                           4123 ;demo.c:696: twister();
   1673 C5                 4124 	push	bc
   1674 CDr53s0E           4125 	call	_twister
   1677 C1                 4126 	pop	bc
   1678                    4127 00109$:
                           4128 ;demo.c:701: if(space())
   1678 C5                 4129 	push	bc
   1679 21 08 01           4130 	ld	hl,#0x0108
   167C E5                 4131 	push	hl
   167D CDr00s00           4132 	call	_ispressed
   1680 F1                 4133 	pop	af
   1681 7D                 4134 	ld	a,l
   1682 C1                 4135 	pop	bc
   1683 47                 4136 	ld	b,a
   1684 B7                 4137 	or	a,a
   1685 CAr22s16           4138 	jp	Z,00113$
                           4139 ;demo.c:702: quit=1;
   1688 0E 01              4140 	ld	c,#0x01
   168A C3r22s16           4141 	jp	00113$
   168D                    4142 00115$:
                           4143 ;demo.c:705: waitVB();
   168D 76                 4144 		halt 
                           4145 ;demo.c:706: uninstall_isr();
   168E CDr00s00           4146 	call	_uninstall_isr
                           4147 ;demo.c:707: PLY_Stop();
   1691 CDr00s00           4148 	call	_PLY_Stop
                           4149 ;demo.c:708: PLY_SendRegisters();
   1694 CDr00s00           4150 	call	_PLY_SendRegisters
                           4151 ;demo.c:710: screen(0);
   1697 3E 00              4152 	ld	a,#0x00
   1699 F5                 4153 	push	af
   169A 33                 4154 	inc	sp
   169B CDr00s00           4155 	call	_screen
   169E 33                 4156 	inc	sp
                           4157 ;demo.c:712: puts("demo exit\r\n\r\n");
   169F 21r1Ds17           4158 	ld	hl,#__str_10
   16A2 E5                 4159 	push	hl
   16A3 CDr00s00           4160 	call	_puts
   16A6 F1                 4161 	pop	af
                           4162 ;demo.c:714: exit(0);
   16A7 3E 00              4163 	ld	a,#0x00
   16A9 F5                 4164 	push	af
   16AA 33                 4165 	inc	sp
   16AB CDr00s00           4166 	call	_exit
   16AE 33                 4167 	inc	sp
   16AF C9                 4168 	ret
   16B0                    4169 _main_end::
   16B0                    4170 __str_1:
   16B0 64 65 6D 6F 20 69  4171 	.ascii "demo init"
        6E 69 74
   16B9 0D                 4172 	.db 0x0D
   16BA 0A                 4173 	.db 0x0A
   16BB 0D                 4174 	.db 0x0D
   16BC 0A                 4175 	.db 0x0A
   16BD 00                 4176 	.db 0x00
   16BE                    4177 __str_2:
   16BE 6D 75 73 69 63 20  4178 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   16CB 00                 4179 	.db 0x00
   16CC                    4180 __str_3:
   16CC 64 6F 6E 65 2E     4181 	.ascii "done."
   16D1 0A                 4182 	.db 0x0A
   16D2 0A                 4183 	.db 0x0A
   16D3 00                 4184 	.db 0x00
   16D4                    4185 __str_4:
   16D4 64 65 6D 6F 20 73  4186 	.ascii "demo start"
        74 61 72 74
   16DE 0D                 4187 	.db 0x0D
   16DF 0A                 4188 	.db 0x0A
   16E0 00                 4189 	.db 0x00
   16E1                    4190 __str_5:
   16E1 54 57 49 53 54 45  4191 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   16EC 00                 4192 	.db 0x00
   16ED                    4193 __str_6:
   16ED 42 55 4C 42 53 20  4194 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   16F8 00                 4195 	.db 0x00
   16F9                    4196 __str_7:
   16F9 44 53 53 4C 4F 47  4197 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   1704 00                 4198 	.db 0x00
   1705                    4199 __str_8:
   1705 42 55 4C 42 53 20  4200 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   1710 00                 4201 	.db 0x00
   1711                    4202 __str_9:
   1711 54 57 49 53 54 45  4203 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   171C 00                 4204 	.db 0x00
   171D                    4205 __str_10:
   171D 64 65 6D 6F 20 65  4206 	.ascii "demo exit"
        78 69 74
   1726 0D                 4207 	.db 0x0D
   1727 0A                 4208 	.db 0x0A
   1728 0D                 4209 	.db 0x0D
   1729 0A                 4210 	.db 0x0A
   172A 00                 4211 	.db 0x00
                           4212 	.area _CODE
                           4213 	.area _CABS
