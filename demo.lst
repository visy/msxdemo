                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Mon Mar  5 01:00:21 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _logoeffu
                             15 	.globl _abs
                             16 	.globl _tritiles
                             17 	.globl _drawtilescreen_full
                             18 	.globl _drawtilescreen
                             19 	.globl _drawtritile
                             20 	.globl _thewave
                             21 	.globl _boxes
                             22 	.globl _drawbox
                             23 	.globl _animplay
                             24 	.globl _bulbs
                             25 	.globl _twister
                             26 	.globl _font
                             27 	.globl _drawsine
                             28 	.globl _drawstr
                             29 	.globl _do_letter_tall
                             30 	.globl _do_letter
                             31 	.globl _raster_effu
                             32 	.globl _do_blocks
                             33 	.globl _do_ymmm
                             34 	.globl _fadein
                             35 	.globl _pck_load
                             36 	.globl _raw_load
                             37 	.globl _pause
                             38 	.globl _pal_load
                             39 	.globl _scratch_clear
                             40 	.globl _ge5_load
                             41 	.globl _color_isr
                             42 	.globl _my_isr
                             43 	.globl _isNthBitSet
                             44 	.globl _scenetimings
                             45 	.globl _scenepointers
                             46 	.globl _timeindex
                             47 	.globl _sceneindex
                             48 	.globl _onceclear
                             49 	.globl _powa
                             50 	.globl _powatick
                             51 	.globl _triframes
                             52 	.globl _tripaltick2
                             53 	.globl _tripaltick
                             54 	.globl _tripal
                             55 	.globl _tiletick
                             56 	.globl _tiley
                             57 	.globl _tilex
                             58 	.globl _tilei
                             59 	.globl _tri_inited
                             60 	.globl _ffa
                             61 	.globl _buf
                             62 	.globl _initwave
                             63 	.globl _prevbox_of
                             64 	.globl _boxes_of
                             65 	.globl _pbt
                             66 	.globl _pbx
                             67 	.globl _bonc
                             68 	.globl _bo
                             69 	.globl _bt
                             70 	.globl _by
                             71 	.globl _bx
                             72 	.globl _boxi
                             73 	.globl _boxes_y
                             74 	.globl _boxes_x
                             75 	.globl _prevy
                             76 	.globl _prevx
                             77 	.globl _buffer
                             78 	.globl _boxes_init
                             79 	.globl _anim_init
                             80 	.globl _sy
                             81 	.globl _enderdir
                             82 	.globl _ender
                             83 	.globl _ff2
                             84 	.globl _ff1
                             85 	.globl _bulbflipper
                             86 	.globl _twinited
                             87 	.globl _ff
                             88 	.globl _ly
                             89 	.globl _lx
                             90 	.globl _linenum
                             91 	.globl _flof
                             92 	.globl _btab
                             93 	.globl _bty
                             94 	.globl _btx
                             95 	.globl _bsy
                             96 	.globl _bsx
                             97 	.globl _block_init
                             98 	.globl _cc
                             99 	.globl _yofff
                            100 	.globl _cmd
                            101 	.globl _tick
                            102 	.globl _vbicount
                            103 	.globl _boxes_palette
                            104 	.globl _tf_palette
                            105 	.globl _twister_palette
                            106 	.globl _block_palette
                            107 	.globl _cur_palette
                            108 	.globl _scratch
                            109 	.globl _packbuffer
                            110 	.globl _tri_lookup_y
                            111 	.globl _eighttimes
                            112 	.globl _twelvetimes
                            113 	.globl _tri_lookup_x
                            114 	.globl _sintab
                            115 	.globl _font_w
                            116 	.globl _font_y
                            117 	.globl _font_x
                            118 	.globl _tri_side2
                            119 	.globl _tri_side1
                            120 	.globl _tri_dia
                            121 	.globl _tri_up
                            122 	.globl _tri_center
                            123 	.globl _sintabx
                            124 ;--------------------------------------------------------
                            125 ; special function registers
                            126 ;--------------------------------------------------------
                            127 ;--------------------------------------------------------
                            128 ;  ram data
                            129 ;--------------------------------------------------------
                            130 	.area _DATA
   0000                     131 _sintab::
   0000                     132 	.ds 256
   0100                     133 _tri_lookup_x::
   0100                     134 	.ds 32
   0120                     135 _twelvetimes::
   0120                     136 	.ds 52
   0154                     137 _eighttimes::
   0154                     138 	.ds 52
   0188                     139 _tri_lookup_y::
   0188                     140 	.ds 64
   01C8                     141 _packbuffer::
   01C8                     142 	.ds 16000
   4048                     143 _scratch::
   4048                     144 	.ds 128
   40C8                     145 _cur_palette::
   40C8                     146 	.ds 32
   40E8                     147 _block_palette::
   40E8                     148 	.ds 32
   4108                     149 _twister_palette::
   4108                     150 	.ds 32
   4128                     151 _tf_palette::
   4128                     152 	.ds 32
   4148                     153 _boxes_palette::
   4148                     154 	.ds 32
   4168                     155 _vbicount::
   4168                     156 	.ds 2
   416A                     157 _tick::
   416A                     158 	.ds 2
   416C                     159 _cmd::
   416C                     160 	.ds 15
   417B                     161 _isNthBitSet_mask_1_1:
   417B                     162 	.ds 8
   4183                     163 _yofff::
   4183                     164 	.ds 1
   4184                     165 _cc::
   4184                     166 	.ds 1
   4185                     167 _flipper:
   4185                     168 	.ds 2
   4187                     169 _ymmmf:
   4187                     170 	.ds 2
   4189                     171 _block_init::
   4189                     172 	.ds 1
   418A                     173 _bsx::
   418A                     174 	.ds 2
   418C                     175 _bsy::
   418C                     176 	.ds 2
   418E                     177 _btx::
   418E                     178 	.ds 2
   4190                     179 _bty::
   4190                     180 	.ds 2
   4192                     181 _btab::
   4192                     182 	.ds 32
   41B2                     183 _flof::
   41B2                     184 	.ds 2
   41B4                     185 _linenum::
   41B4                     186 	.ds 2
   41B6                     187 _lx::
   41B6                     188 	.ds 1
   41B7                     189 _ly::
   41B7                     190 	.ds 1
   41B8                     191 _ff::
   41B8                     192 	.ds 2
   41BA                     193 _twinited::
   41BA                     194 	.ds 2
   41BC                     195 _bulbflipper::
   41BC                     196 	.ds 2
   41BE                     197 _ff1::
   41BE                     198 	.ds 2
   41C0                     199 _ff2::
   41C0                     200 	.ds 2
   41C2                     201 _ender::
   41C2                     202 	.ds 2
   41C4                     203 _enderdir::
   41C4                     204 	.ds 2
   41C6                     205 _sy::
   41C6                     206 	.ds 2
   41C8                     207 _xo:
   41C8                     208 	.ds 2
   41CA                     209 _yo:
   41CA                     210 	.ds 2
   41CC                     211 _po:
   41CC                     212 	.ds 2
   41CE                     213 _frames:
   41CE                     214 	.ds 2
   41D0                     215 _anim_init::
   41D0                     216 	.ds 2
   41D2                     217 _boxes_init::
   41D2                     218 	.ds 1
   41D3                     219 _buffer::
   41D3                     220 	.ds 2
   41D5                     221 _prevx::
   41D5                     222 	.ds 2
   41D7                     223 _prevy::
   41D7                     224 	.ds 2
   41D9                     225 _boxes_x::
   41D9                     226 	.ds 5
   41DE                     227 _boxes_y::
   41DE                     228 	.ds 10
   41E8                     229 _boxi::
   41E8                     230 	.ds 1
   41E9                     231 _bx::
   41E9                     232 	.ds 2
   41EB                     233 _by::
   41EB                     234 	.ds 2
   41ED                     235 _bt::
   41ED                     236 	.ds 2
   41EF                     237 _bo::
   41EF                     238 	.ds 2
   41F1                     239 _bonc::
   41F1                     240 	.ds 2
   41F3                     241 _pbx::
   41F3                     242 	.ds 2
   41F5                     243 _pbt::
   41F5                     244 	.ds 2
   41F7                     245 _boxes_of::
   41F7                     246 	.ds 10
   4201                     247 _prevbox_of::
   4201                     248 	.ds 1
   4202                     249 _initwave::
   4202                     250 	.ds 1
   4203                     251 _buf::
   4203                     252 	.ds 2
   4205                     253 _ffa::
   4205                     254 	.ds 2
   4207                     255 _tri_inited::
   4207                     256 	.ds 1
   4208                     257 _tilei::
   4208                     258 	.ds 2
   420A                     259 _tilex::
   420A                     260 	.ds 2
   420C                     261 _tiley::
   420C                     262 	.ds 2
   420E                     263 _tiletick::
   420E                     264 	.ds 1
   420F                     265 _tripal::
   420F                     266 	.ds 9
   4218                     267 _tripaltick::
   4218                     268 	.ds 1
   4219                     269 _tripaltick2::
   4219                     270 	.ds 1
   421A                     271 _triframes::
   421A                     272 	.ds 2
   421C                     273 _powatick::
   421C                     274 	.ds 2
   421E                     275 _powa::
   421E                     276 	.ds 2
   4220                     277 _onceclear::
   4220                     278 	.ds 1
   4221                     279 _sceneindex::
   4221                     280 	.ds 2
   4223                     281 _timeindex::
   4223                     282 	.ds 2
   4225                     283 _scenepointers::
   4225                     284 	.ds 14
   4233                     285 _scenetimings::
   4233                     286 	.ds 28
                            287 ;--------------------------------------------------------
                            288 ; overlayable items in  ram 
                            289 ;--------------------------------------------------------
                            290 	.area _OVERLAY
                            291 ;--------------------------------------------------------
                            292 ; external initialized ram data
                            293 ;--------------------------------------------------------
                            294 ;--------------------------------------------------------
                            295 ; global & static initialisations
                            296 ;--------------------------------------------------------
                            297 	.area _HOME
                            298 	.area _GSINIT
                            299 	.area _GSFINAL
                            300 	.area _GSINIT
                            301 ;demo.c:134: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r7Bs41            302 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            303 	call	__initrleblock
   0006 08                  304 	.db	8
   0007 01 02 04 08 10 20   305 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  306 	.db	0
                            307 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            308 	ld	hl,#_sintab
   0013 CDr00s00            309 	call	__initrleblock
   0016 3B                  310 	.db	59
   0017 00 03 06 09 0C 0F   311 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   312 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   313 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   314 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   315 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   316 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   317 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            318 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               319 	.db	#-5,#0x7E
   0054 01                  320 	.db	1
   0055 7F                  321 	.db	0x7F
   0056 FB 7E               322 	.db	#-5,#0x7E
   0058 75                  323 	.db	117
   0059 7D 7D 7C 7B 7B 7A   324 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   325 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   326 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   327 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   328 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   329 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   330 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   331 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   332 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   333 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   334 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   335 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   336 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   337 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      338 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               339 	.db	#-5,#0x82
   00D0 01                  340 	.db	1
   00D1 81                  341 	.db	0x81
   00D2 FB 82               342 	.db	#-5,#0x82
   00D4 3A                  343 	.db	58
   00D5 83 83 84 85 85 86   344 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   345 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   346 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   347 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   348 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   349 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   350 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               351 	.db	0xFA, 0xFD
   010F 00                  352 	.db	0
                            353 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            354 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            355 	call	__initrleblock
   0116 E0 00               356 	.db	#-32,#0x00
   0118 00                  357 	.db	0
                            358 ;demo.c:114: int twelvetimes[26] = { 0 };
   0119 21r20s01            359 	ld	hl,#_twelvetimes
   011C CDr00s00            360 	call	__initrleblock
   011F CC 00               361 	.db	#-52,#0x00
   0121 00                  362 	.db	0
                            363 ;demo.c:115: int eighttimes[26] = { 0 };
   0122 21r54s01            364 	ld	hl,#_eighttimes
   0125 CDr00s00            365 	call	__initrleblock
   0128 CC 00               366 	.db	#-52,#0x00
   012A 00                  367 	.db	0
                            368 ;demo.c:117: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            369 	ld	hl,#_tri_lookup_y
   012E CDr00s00            370 	call	__initrleblock
   0131 C0 00               371 	.db	#-64,#0x00
   0133 00                  372 	.db	0
                            373 ;demo.c:119: uint8_t packbuffer[16000] = {0};
   0134 21rC8s01            374 	ld	hl,#_packbuffer
   0137 CDr00s00            375 	call	__initrleblock
   013A 81 00               376 	.db	#-127,#0x00
   013C 81 00               377 	.db	#-127,#0x00
   013E 81 00               378 	.db	#-127,#0x00
   0140 81 00               379 	.db	#-127,#0x00
   0142 81 00               380 	.db	#-127,#0x00
   0144 81 00               381 	.db	#-127,#0x00
   0146 81 00               382 	.db	#-127,#0x00
   0148 81 00               383 	.db	#-127,#0x00
   014A 81 00               384 	.db	#-127,#0x00
   014C 81 00               385 	.db	#-127,#0x00
   014E 81 00               386 	.db	#-127,#0x00
   0150 81 00               387 	.db	#-127,#0x00
   0152 81 00               388 	.db	#-127,#0x00
   0154 81 00               389 	.db	#-127,#0x00
   0156 81 00               390 	.db	#-127,#0x00
   0158 81 00               391 	.db	#-127,#0x00
   015A 81 00               392 	.db	#-127,#0x00
   015C 81 00               393 	.db	#-127,#0x00
   015E 81 00               394 	.db	#-127,#0x00
   0160 81 00               395 	.db	#-127,#0x00
   0162 81 00               396 	.db	#-127,#0x00
   0164 81 00               397 	.db	#-127,#0x00
   0166 81 00               398 	.db	#-127,#0x00
   0168 81 00               399 	.db	#-127,#0x00
   016A 81 00               400 	.db	#-127,#0x00
   016C 81 00               401 	.db	#-127,#0x00
   016E 81 00               402 	.db	#-127,#0x00
   0170 81 00               403 	.db	#-127,#0x00
   0172 81 00               404 	.db	#-127,#0x00
   0174 81 00               405 	.db	#-127,#0x00
   0176 81 00               406 	.db	#-127,#0x00
   0178 81 00               407 	.db	#-127,#0x00
   017A 81 00               408 	.db	#-127,#0x00
   017C 81 00               409 	.db	#-127,#0x00
   017E 81 00               410 	.db	#-127,#0x00
   0180 81 00               411 	.db	#-127,#0x00
   0182 81 00               412 	.db	#-127,#0x00
   0184 81 00               413 	.db	#-127,#0x00
   0186 81 00               414 	.db	#-127,#0x00
   0188 81 00               415 	.db	#-127,#0x00
   018A 81 00               416 	.db	#-127,#0x00
   018C 81 00               417 	.db	#-127,#0x00
   018E 81 00               418 	.db	#-127,#0x00
   0190 81 00               419 	.db	#-127,#0x00
   0192 81 00               420 	.db	#-127,#0x00
   0194 81 00               421 	.db	#-127,#0x00
   0196 81 00               422 	.db	#-127,#0x00
   0198 81 00               423 	.db	#-127,#0x00
   019A 81 00               424 	.db	#-127,#0x00
   019C 81 00               425 	.db	#-127,#0x00
   019E 81 00               426 	.db	#-127,#0x00
   01A0 81 00               427 	.db	#-127,#0x00
   01A2 81 00               428 	.db	#-127,#0x00
   01A4 81 00               429 	.db	#-127,#0x00
   01A6 81 00               430 	.db	#-127,#0x00
   01A8 81 00               431 	.db	#-127,#0x00
   01AA 81 00               432 	.db	#-127,#0x00
   01AC 81 00               433 	.db	#-127,#0x00
   01AE 81 00               434 	.db	#-127,#0x00
   01B0 81 00               435 	.db	#-127,#0x00
   01B2 81 00               436 	.db	#-127,#0x00
   01B4 81 00               437 	.db	#-127,#0x00
   01B6 81 00               438 	.db	#-127,#0x00
   01B8 81 00               439 	.db	#-127,#0x00
   01BA 81 00               440 	.db	#-127,#0x00
   01BC 81 00               441 	.db	#-127,#0x00
   01BE 81 00               442 	.db	#-127,#0x00
   01C0 81 00               443 	.db	#-127,#0x00
   01C2 81 00               444 	.db	#-127,#0x00
   01C4 81 00               445 	.db	#-127,#0x00
   01C6 81 00               446 	.db	#-127,#0x00
   01C8 81 00               447 	.db	#-127,#0x00
   01CA 81 00               448 	.db	#-127,#0x00
   01CC 81 00               449 	.db	#-127,#0x00
   01CE 81 00               450 	.db	#-127,#0x00
   01D0 81 00               451 	.db	#-127,#0x00
   01D2 81 00               452 	.db	#-127,#0x00
   01D4 81 00               453 	.db	#-127,#0x00
   01D6 81 00               454 	.db	#-127,#0x00
   01D8 81 00               455 	.db	#-127,#0x00
   01DA 81 00               456 	.db	#-127,#0x00
   01DC 81 00               457 	.db	#-127,#0x00
   01DE 81 00               458 	.db	#-127,#0x00
   01E0 81 00               459 	.db	#-127,#0x00
   01E2 81 00               460 	.db	#-127,#0x00
   01E4 81 00               461 	.db	#-127,#0x00
   01E6 81 00               462 	.db	#-127,#0x00
   01E8 81 00               463 	.db	#-127,#0x00
   01EA 81 00               464 	.db	#-127,#0x00
   01EC 81 00               465 	.db	#-127,#0x00
   01EE 81 00               466 	.db	#-127,#0x00
   01F0 81 00               467 	.db	#-127,#0x00
   01F2 81 00               468 	.db	#-127,#0x00
   01F4 81 00               469 	.db	#-127,#0x00
   01F6 81 00               470 	.db	#-127,#0x00
   01F8 81 00               471 	.db	#-127,#0x00
   01FA 81 00               472 	.db	#-127,#0x00
   01FC 81 00               473 	.db	#-127,#0x00
   01FE 81 00               474 	.db	#-127,#0x00
   0200 81 00               475 	.db	#-127,#0x00
   0202 81 00               476 	.db	#-127,#0x00
   0204 81 00               477 	.db	#-127,#0x00
   0206 81 00               478 	.db	#-127,#0x00
   0208 81 00               479 	.db	#-127,#0x00
   020A 81 00               480 	.db	#-127,#0x00
   020C 81 00               481 	.db	#-127,#0x00
   020E 81 00               482 	.db	#-127,#0x00
   0210 81 00               483 	.db	#-127,#0x00
   0212 81 00               484 	.db	#-127,#0x00
   0214 81 00               485 	.db	#-127,#0x00
   0216 81 00               486 	.db	#-127,#0x00
   0218 81 00               487 	.db	#-127,#0x00
   021A 81 00               488 	.db	#-127,#0x00
   021C 81 00               489 	.db	#-127,#0x00
   021E 81 00               490 	.db	#-127,#0x00
   0220 81 00               491 	.db	#-127,#0x00
   0222 81 00               492 	.db	#-127,#0x00
   0224 81 00               493 	.db	#-127,#0x00
   0226 81 00               494 	.db	#-127,#0x00
   0228 81 00               495 	.db	#-127,#0x00
   022A 81 00               496 	.db	#-127,#0x00
   022C 81 00               497 	.db	#-127,#0x00
   022E 81 00               498 	.db	#-127,#0x00
   0230 81 00               499 	.db	#-127,#0x00
   0232 81 00               500 	.db	#-127,#0x00
   0234 83 00               501 	.db	#-125,#0x00
   0236 00                  502 	.db	0
                            503 ;demo.c:128: volatile int vbicount=0;
   0237 FD 21r68s41         504 	ld	iy,#_vbicount
   023B FD 36 00 00         505 	ld	0 (iy),#0x00
   023F FD 21r68s41         506 	ld	iy,#_vbicount
   0243 FD 36 01 00         507 	ld	1 (iy),#0x00
                            508 ;demo.c:129: volatile int tick=0;
   0247 FD 21r6As41         509 	ld	iy,#_tick
   024B FD 36 00 00         510 	ld	0 (iy),#0x00
   024F FD 21r6As41         511 	ld	iy,#_tick
   0253 FD 36 01 00         512 	ld	1 (iy),#0x00
                            513 ;demo.c:329: uint8_t yofff = 0;
   0257 FD 21r83s41         514 	ld	iy,#_yofff
   025B FD 36 00 00         515 	ld	0 (iy),#0x00
                            516 ;demo.c:330: uint8_t cc = 0;
   025F FD 21r84s41         517 	ld	iy,#_cc
   0263 FD 36 00 00         518 	ld	0 (iy),#0x00
                            519 ;demo.c:331: static int flipper = 0;
   0267 FD 21r85s41         520 	ld	iy,#_flipper
   026B FD 36 00 00         521 	ld	0 (iy),#0x00
   026F FD 21r85s41         522 	ld	iy,#_flipper
   0273 FD 36 01 00         523 	ld	1 (iy),#0x00
                            524 ;demo.c:332: static int ymmmf = 0;
   0277 FD 21r87s41         525 	ld	iy,#_ymmmf
   027B FD 36 00 00         526 	ld	0 (iy),#0x00
   027F FD 21r87s41         527 	ld	iy,#_ymmmf
   0283 FD 36 01 00         528 	ld	1 (iy),#0x00
                            529 ;demo.c:363: char block_init = 0;
   0287 FD 21r89s41         530 	ld	iy,#_block_init
   028B FD 36 00 00         531 	ld	0 (iy),#0x00
                            532 ;demo.c:365: int bsx = 0;
   028F FD 21r8As41         533 	ld	iy,#_bsx
   0293 FD 36 00 00         534 	ld	0 (iy),#0x00
   0297 FD 21r8As41         535 	ld	iy,#_bsx
   029B FD 36 01 00         536 	ld	1 (iy),#0x00
                            537 ;demo.c:366: int bsy = 0;
   029F FD 21r8Cs41         538 	ld	iy,#_bsy
   02A3 FD 36 00 00         539 	ld	0 (iy),#0x00
   02A7 FD 21r8Cs41         540 	ld	iy,#_bsy
   02AB FD 36 01 00         541 	ld	1 (iy),#0x00
                            542 ;demo.c:367: int btx = 0;
   02AF FD 21r8Es41         543 	ld	iy,#_btx
   02B3 FD 36 00 00         544 	ld	0 (iy),#0x00
   02B7 FD 21r8Es41         545 	ld	iy,#_btx
   02BB FD 36 01 00         546 	ld	1 (iy),#0x00
                            547 ;demo.c:368: int bty = 0;
   02BF FD 21r90s41         548 	ld	iy,#_bty
   02C3 FD 36 00 00         549 	ld	0 (iy),#0x00
   02C7 FD 21r90s41         550 	ld	iy,#_bty
   02CB FD 36 01 00         551 	ld	1 (iy),#0x00
                            552 ;demo.c:370: int btab[16] = {0};
   02CF 21r92s41            553 	ld	hl,#_btab
   02D2 CDr00s00            554 	call	__initrleblock
   02D5 E0 00               555 	.db	#-32,#0x00
   02D7 00                  556 	.db	0
                            557 ;demo.c:372: int flof = 0;
   02D8 FD 21rB2s41         558 	ld	iy,#_flof
   02DC FD 36 00 00         559 	ld	0 (iy),#0x00
   02E0 FD 21rB2s41         560 	ld	iy,#_flof
   02E4 FD 36 01 00         561 	ld	1 (iy),#0x00
                            562 ;demo.c:421: int linenum = 0;
   02E8 FD 21rB4s41         563 	ld	iy,#_linenum
   02EC FD 36 00 00         564 	ld	0 (iy),#0x00
   02F0 FD 21rB4s41         565 	ld	iy,#_linenum
   02F4 FD 36 01 00         566 	ld	1 (iy),#0x00
                            567 ;demo.c:479: uint8_t lx = 0;
   02F8 FD 21rB6s41         568 	ld	iy,#_lx
   02FC FD 36 00 00         569 	ld	0 (iy),#0x00
                            570 ;demo.c:480: uint8_t ly = 0;
   0300 FD 21rB7s41         571 	ld	iy,#_ly
   0304 FD 36 00 00         572 	ld	0 (iy),#0x00
                            573 ;demo.c:543: int ff = 0;
   0308 FD 21rB8s41         574 	ld	iy,#_ff
   030C FD 36 00 00         575 	ld	0 (iy),#0x00
   0310 FD 21rB8s41         576 	ld	iy,#_ff
   0314 FD 36 01 00         577 	ld	1 (iy),#0x00
                            578 ;demo.c:544: int twinited = 0;
   0318 FD 21rBAs41         579 	ld	iy,#_twinited
   031C FD 36 00 00         580 	ld	0 (iy),#0x00
   0320 FD 21rBAs41         581 	ld	iy,#_twinited
   0324 FD 36 01 00         582 	ld	1 (iy),#0x00
                            583 ;demo.c:593: int bulbflipper = 1;
   0328 FD 21rBCs41         584 	ld	iy,#_bulbflipper
   032C FD 36 00 01         585 	ld	0 (iy),#0x01
   0330 FD 21rBCs41         586 	ld	iy,#_bulbflipper
   0334 FD 36 01 00         587 	ld	1 (iy),#0x00
                            588 ;demo.c:595: int ff1,ff2 = 0;
   0338 FD 21rC0s41         589 	ld	iy,#_ff2
   033C FD 36 00 00         590 	ld	0 (iy),#0x00
   0340 FD 21rC0s41         591 	ld	iy,#_ff2
   0344 FD 36 01 00         592 	ld	1 (iy),#0x00
                            593 ;demo.c:596: int ender = 212;
   0348 FD 21rC2s41         594 	ld	iy,#_ender
   034C FD 36 00 D4         595 	ld	0 (iy),#0xD4
   0350 FD 21rC2s41         596 	ld	iy,#_ender
   0354 FD 36 01 00         597 	ld	1 (iy),#0x00
                            598 ;demo.c:597: int enderdir = -1;
   0358 FD 21rC4s41         599 	ld	iy,#_enderdir
   035C FD 36 00 FF         600 	ld	0 (iy),#0xFF
   0360 FD 21rC4s41         601 	ld	iy,#_enderdir
   0364 FD 36 01 FF         602 	ld	1 (iy),#0xFF
                            603 ;demo.c:598: int sy = 16;
   0368 FD 21rC6s41         604 	ld	iy,#_sy
   036C FD 36 00 10         605 	ld	0 (iy),#0x10
   0370 FD 21rC6s41         606 	ld	iy,#_sy
   0374 FD 36 01 00         607 	ld	1 (iy),#0x00
                            608 ;demo.c:654: static int xo = 0;
   0378 FD 21rC8s41         609 	ld	iy,#_xo
   037C FD 36 00 00         610 	ld	0 (iy),#0x00
   0380 FD 21rC8s41         611 	ld	iy,#_xo
   0384 FD 36 01 00         612 	ld	1 (iy),#0x00
                            613 ;demo.c:655: static int yo = 0;
   0388 FD 21rCAs41         614 	ld	iy,#_yo
   038C FD 36 00 00         615 	ld	0 (iy),#0x00
   0390 FD 21rCAs41         616 	ld	iy,#_yo
   0394 FD 36 01 00         617 	ld	1 (iy),#0x00
                            618 ;demo.c:656: static int po = 0;
   0398 FD 21rCCs41         619 	ld	iy,#_po
   039C FD 36 00 00         620 	ld	0 (iy),#0x00
   03A0 FD 21rCCs41         621 	ld	iy,#_po
   03A4 FD 36 01 00         622 	ld	1 (iy),#0x00
                            623 ;demo.c:657: static int frames = 0;
   03A8 FD 21rCEs41         624 	ld	iy,#_frames
   03AC FD 36 00 00         625 	ld	0 (iy),#0x00
   03B0 FD 21rCEs41         626 	ld	iy,#_frames
   03B4 FD 36 01 00         627 	ld	1 (iy),#0x00
                            628 ;demo.c:659: int anim_init = 0;
   03B8 FD 21rD0s41         629 	ld	iy,#_anim_init
   03BC FD 36 00 00         630 	ld	0 (iy),#0x00
   03C0 FD 21rD0s41         631 	ld	iy,#_anim_init
   03C4 FD 36 01 00         632 	ld	1 (iy),#0x00
                            633 ;demo.c:755: uint8_t boxes_init = 0;
   03C8 FD 21rD2s41         634 	ld	iy,#_boxes_init
   03CC FD 36 00 00         635 	ld	0 (iy),#0x00
                            636 ;demo.c:756: int buffer = 1;
   03D0 FD 21rD3s41         637 	ld	iy,#_buffer
   03D4 FD 36 00 01         638 	ld	0 (iy),#0x01
   03D8 FD 21rD3s41         639 	ld	iy,#_buffer
   03DC FD 36 01 00         640 	ld	1 (iy),#0x00
                            641 ;demo.c:757: int prevx = -1;
   03E0 FD 21rD5s41         642 	ld	iy,#_prevx
   03E4 FD 36 00 FF         643 	ld	0 (iy),#0xFF
   03E8 FD 21rD5s41         644 	ld	iy,#_prevx
   03EC FD 36 01 FF         645 	ld	1 (iy),#0xFF
                            646 ;demo.c:759: uint8_t boxes_x[5] = {0,36,0,36,0};
   03F0 21rD9s41            647 	ld	hl,#_boxes_x
   03F3 CDr00s00            648 	call	__initrleblock
   03F6 05                  649 	.db	5
   03F7 00 24 00 24 00      650 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   03FC 00                  651 	.db	0
                            652 ;demo.c:760: int boxes_y[5] = {768,768,768+36,768+36,0};
   03FD 21rDEs41            653 	ld	hl,#_boxes_y
   0400 CDr00s00            654 	call	__initrleblock
   0403 0A                  655 	.db	10
   0404 00 03 00 03 24 03   656 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   040C 00 00               657 	.db	0x00, 0x00
   040E 00                  658 	.db	0
                            659 ;demo.c:761: uint8_t boxi = 0;
   040F FD 21rE8s41         660 	ld	iy,#_boxi
   0413 FD 36 00 00         661 	ld	0 (iy),#0x00
                            662 ;demo.c:762: int bx = 220;
   0417 FD 21rE9s41         663 	ld	iy,#_bx
   041B FD 36 00 DC         664 	ld	0 (iy),#0xDC
   041F FD 21rE9s41         665 	ld	iy,#_bx
   0423 FD 36 01 00         666 	ld	1 (iy),#0x00
                            667 ;demo.c:763: int by = 84;
   0427 FD 21rEBs41         668 	ld	iy,#_by
   042B FD 36 00 54         669 	ld	0 (iy),#0x54
   042F FD 21rEBs41         670 	ld	iy,#_by
   0433 FD 36 01 00         671 	ld	1 (iy),#0x00
                            672 ;demo.c:781: int bt = 0;
   0437 FD 21rEDs41         673 	ld	iy,#_bt
   043B FD 36 00 00         674 	ld	0 (iy),#0x00
   043F FD 21rEDs41         675 	ld	iy,#_bt
   0443 FD 36 01 00         676 	ld	1 (iy),#0x00
                            677 ;demo.c:782: int bo = 0;
   0447 FD 21rEFs41         678 	ld	iy,#_bo
   044B FD 36 00 00         679 	ld	0 (iy),#0x00
   044F FD 21rEFs41         680 	ld	iy,#_bo
   0453 FD 36 01 00         681 	ld	1 (iy),#0x00
                            682 ;demo.c:784: int bonc = 0;
   0457 FD 21rF1s41         683 	ld	iy,#_bonc
   045B FD 36 00 00         684 	ld	0 (iy),#0x00
   045F FD 21rF1s41         685 	ld	iy,#_bonc
   0463 FD 36 01 00         686 	ld	1 (iy),#0x00
                            687 ;demo.c:785: int pbx = 0;
   0467 FD 21rF3s41         688 	ld	iy,#_pbx
   046B FD 36 00 00         689 	ld	0 (iy),#0x00
   046F FD 21rF3s41         690 	ld	iy,#_pbx
   0473 FD 36 01 00         691 	ld	1 (iy),#0x00
                            692 ;demo.c:786: int pbt = 0;
   0477 FD 21rF5s41         693 	ld	iy,#_pbt
   047B FD 36 00 00         694 	ld	0 (iy),#0x00
   047F FD 21rF5s41         695 	ld	iy,#_pbt
   0483 FD 36 01 00         696 	ld	1 (iy),#0x00
                            697 ;demo.c:788: int boxes_of[5] = {0,0,6,0,0};
   0487 21rF7s41            698 	ld	hl,#_boxes_of
   048A CDr00s00            699 	call	__initrleblock
   048D 05                  700 	.db	5
   048E 00 00 00 00 06      701 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0493 FB 00               702 	.db	#-5,#0x00
   0495 00                  703 	.db	0
                            704 ;demo.c:789: uint8_t prevbox_of = 0;
   0496 FD 21r01s42         705 	ld	iy,#_prevbox_of
   049A FD 36 00 00         706 	ld	0 (iy),#0x00
                            707 ;demo.c:904: uint8_t initwave = 0;
   049E FD 21r02s42         708 	ld	iy,#_initwave
   04A2 FD 36 00 00         709 	ld	0 (iy),#0x00
                            710 ;demo.c:905: int buf = -1;
   04A6 FD 21r03s42         711 	ld	iy,#_buf
   04AA FD 36 00 FF         712 	ld	0 (iy),#0xFF
   04AE FD 21r03s42         713 	ld	iy,#_buf
   04B2 FD 36 01 FF         714 	ld	1 (iy),#0xFF
                            715 ;demo.c:906: int ffa = 0;
   04B6 FD 21r05s42         716 	ld	iy,#_ffa
   04BA FD 36 00 00         717 	ld	0 (iy),#0x00
   04BE FD 21r05s42         718 	ld	iy,#_ffa
   04C2 FD 36 01 00         719 	ld	1 (iy),#0x00
                            720 ;demo.c:1026: uint8_t tri_inited = 0;
   04C6 FD 21r07s42         721 	ld	iy,#_tri_inited
   04CA FD 36 00 00         722 	ld	0 (iy),#0x00
                            723 ;demo.c:1041: int tilei = 0;
   04CE FD 21r08s42         724 	ld	iy,#_tilei
   04D2 FD 36 00 00         725 	ld	0 (iy),#0x00
   04D6 FD 21r08s42         726 	ld	iy,#_tilei
   04DA FD 36 01 00         727 	ld	1 (iy),#0x00
                            728 ;demo.c:1042: int tilex = 0;
   04DE FD 21r0As42         729 	ld	iy,#_tilex
   04E2 FD 36 00 00         730 	ld	0 (iy),#0x00
   04E6 FD 21r0As42         731 	ld	iy,#_tilex
   04EA FD 36 01 00         732 	ld	1 (iy),#0x00
                            733 ;demo.c:1043: int tiley = 0;
   04EE FD 21r0Cs42         734 	ld	iy,#_tiley
   04F2 FD 36 00 00         735 	ld	0 (iy),#0x00
   04F6 FD 21r0Cs42         736 	ld	iy,#_tiley
   04FA FD 36 01 00         737 	ld	1 (iy),#0x00
                            738 ;demo.c:1044: uint8_t tiletick = 0;
   04FE FD 21r0Es42         739 	ld	iy,#_tiletick
   0502 FD 36 00 00         740 	ld	0 (iy),#0x00
                            741 ;demo.c:1074: char tripal[9] = {
   0506 21r0Fs42            742 	ld	hl,#_tripal
   0509 CDr00s00            743 	call	__initrleblock
   050C 09                  744 	.db	9
   050D 02 02 01 01 02 03   745 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0515 02                  746 	.db	0x02
   0516 00                  747 	.db	0
                            748 ;demo.c:1080: uint8_t tripaltick = 0;
   0517 FD 21r18s42         749 	ld	iy,#_tripaltick
   051B FD 36 00 00         750 	ld	0 (iy),#0x00
                            751 ;demo.c:1081: uint8_t tripaltick2 = 0;
   051F FD 21r19s42         752 	ld	iy,#_tripaltick2
   0523 FD 36 00 00         753 	ld	0 (iy),#0x00
                            754 ;demo.c:1083: int triframes = 0;
   0527 FD 21r1As42         755 	ld	iy,#_triframes
   052B FD 36 00 00         756 	ld	0 (iy),#0x00
   052F FD 21r1As42         757 	ld	iy,#_triframes
   0533 FD 36 01 00         758 	ld	1 (iy),#0x00
                            759 ;demo.c:1190: int powatick = 0;
   0537 FD 21r1Cs42         760 	ld	iy,#_powatick
   053B FD 36 00 00         761 	ld	0 (iy),#0x00
   053F FD 21r1Cs42         762 	ld	iy,#_powatick
   0543 FD 36 01 00         763 	ld	1 (iy),#0x00
                            764 ;demo.c:1191: int powa = 0;
   0547 FD 21r1Es42         765 	ld	iy,#_powa
   054B FD 36 00 00         766 	ld	0 (iy),#0x00
   054F FD 21r1Es42         767 	ld	iy,#_powa
   0553 FD 36 01 00         768 	ld	1 (iy),#0x00
                            769 ;demo.c:1192: uint8_t onceclear = 255;
   0557 FD 21r20s42         770 	ld	iy,#_onceclear
   055B FD 36 00 FF         771 	ld	0 (iy),#0xFF
                            772 ;demo.c:1254: int sceneindex = 0;
   055F FD 21r21s42         773 	ld	iy,#_sceneindex
   0563 FD 36 00 00         774 	ld	0 (iy),#0x00
   0567 FD 21r21s42         775 	ld	iy,#_sceneindex
   056B FD 36 01 00         776 	ld	1 (iy),#0x00
                            777 ;demo.c:1255: int timeindex = 0;
   056F FD 21r23s42         778 	ld	iy,#_timeindex
   0573 FD 36 00 00         779 	ld	0 (iy),#0x00
   0577 FD 21r23s42         780 	ld	iy,#_timeindex
   057B FD 36 01 00         781 	ld	1 (iy),#0x00
                            782 ;demo.c:1257: void (*scenepointers[7])() = {
   057F 21r25s42            783 	ld	hl,#_scenepointers
   0582 36r9A               784 	ld	(hl),#<_logoeffu
   0584 23                  785 	inc	hl
   0585 36s29               786 	ld	(hl),#>_logoeffu
   0587 01r27s42            787 	ld	bc,#_scenepointers + 2
   058A 69                  788 	ld	l,c
   058B 60                  789 	ld	h,b
   058C 36r8F               790 	ld	(hl),#<_bulbs
   058E 23                  791 	inc	hl
   058F 36s13               792 	ld	(hl),#>_bulbs
   0591 21r29s42            793 	ld	hl, #_scenepointers + 4
   0594 36r23               794 	ld	(hl),#<_twister
   0596 23                  795 	inc	hl
   0597 36s12               796 	ld	(hl),#>_twister
   0599 01r2Bs42            797 	ld	bc,#_scenepointers + 6
   059C 69                  798 	ld	l,c
   059D 60                  799 	ld	h,b
   059E 36r3C               800 	ld	(hl),#<_boxes
   05A0 23                  801 	inc	hl
   05A1 36s19               802 	ld	(hl),#>_boxes
   05A3 21r2Ds42            803 	ld	hl, #_scenepointers + 8
   05A6 36r94               804 	ld	(hl),#<_thewave
   05A8 23                  805 	inc	hl
   05A9 36s1D               806 	ld	(hl),#>_thewave
   05AB 21r2Fs42            807 	ld	hl, #_scenepointers + 10
   05AE 36rAC               808 	ld	(hl),#<_tritiles
   05B0 23                  809 	inc	hl
   05B1 36s25               810 	ld	(hl),#>_tritiles
   05B3 01r31s42            811 	ld	bc,#_scenepointers + 12
   05B6 69                  812 	ld	l,c
   05B7 60                  813 	ld	h,b
   05B8 36rED               814 	ld	(hl),#<_animplay
   05BA 23                  815 	inc	hl
   05BB 36s15               816 	ld	(hl),#>_animplay
                            817 ;demo.c:1267: int scenetimings[14] = {
   05BD 21r33s42            818 	ld	hl,#_scenetimings
   05C0 CDr00s00            819 	call	__initrleblock
   05C3 1C                  820 	.db	28
   05C4 00 00 FA 00 FA 00   821 	.db	0x00, 0x00, 0xFA, 0x00, 0xFA, 0x00, 0x4C, 0x04
        4C 04
   05CC 4C 04 98 08 98 08   822 	.db	0x4C, 0x04, 0x98, 0x08, 0x98, 0x08, 0x74, 0x0E
        74 0E
   05D4 74 0E 88 13 88 13   823 	.db	0x74, 0x0E, 0x88, 0x13, 0x88, 0x13, 0x58, 0x1B
        58 1B
   05DC 58 1B 98 3A         824 	.db	0x58, 0x1B, 0x98, 0x3A
   05E0 00                  825 	.db	0
                            826 ;--------------------------------------------------------
                            827 ; Home
                            828 ;--------------------------------------------------------
                            829 	.area _HOME
                            830 	.area _HOME
                            831 ;--------------------------------------------------------
                            832 ; code
                            833 ;--------------------------------------------------------
                            834 	.area _CODE
                            835 ;demo.c:133: int isNthBitSet (unsigned char c, int n) {
                            836 ;	---------------------------------
                            837 ; Function isNthBitSet
                            838 ; ---------------------------------
   0000                     839 _isNthBitSet_start::
   0000                     840 _isNthBitSet:
   0000 DD E5               841 	push	ix
   0002 DD 21 00 00         842 	ld	ix,#0
   0006 DD 39               843 	add	ix,sp
                            844 ;demo.c:135: return ((c & mask[n]) != 0);
   0008 3Er7B               845 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            846 	add	a,5 (ix)
   000D 4F                  847 	ld	c,a
   000E 3Es41               848 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            849 	adc	a,6 (ix)
   0013 47                  850 	ld	b,a
   0014 0A                  851 	ld	a,(bc)
   0015 DD A6 04            852 	and	a,4 (ix)
   0018 20 04               853 	jr	NZ,00103$
   001A 3E 01               854 	ld	a,#0x01
   001C 18 01               855 	jr	00104$
   001E                     856 00103$:
   001E AF                  857 	xor	a,a
   001F                     858 00104$:
   001F B7                  859 	or	a,a
   0020 D6 01               860 	sub	a,#0x01
   0022 3E 00               861 	ld	a,#0x00
   0024 17                  862 	rla
   0025 4F                  863 	ld	c,a
   0026 69                  864 	ld	l,c
   0027 26 00               865 	ld	h,#0x00
   0029 DD E1               866 	pop	ix
   002B C9                  867 	ret
   002C                     868 _isNthBitSet_end::
   002C                     869 _sintabx:
   002C 78 00               870 	.dw #0x0078
   002E 7A 00               871 	.dw #0x007A
   0030 7D 00               872 	.dw #0x007D
   0032 80 00               873 	.dw #0x0080
   0034 83 00               874 	.dw #0x0083
   0036 86 00               875 	.dw #0x0086
   0038 89 00               876 	.dw #0x0089
   003A 8C 00               877 	.dw #0x008C
   003C 8F 00               878 	.dw #0x008F
   003E 92 00               879 	.dw #0x0092
   0040 95 00               880 	.dw #0x0095
   0042 98 00               881 	.dw #0x0098
   0044 9A 00               882 	.dw #0x009A
   0046 9D 00               883 	.dw #0x009D
   0048 A0 00               884 	.dw #0x00A0
   004A A3 00               885 	.dw #0x00A3
   004C A5 00               886 	.dw #0x00A5
   004E A8 00               887 	.dw #0x00A8
   0050 AB 00               888 	.dw #0x00AB
   0052 AD 00               889 	.dw #0x00AD
   0054 B0 00               890 	.dw #0x00B0
   0056 B3 00               891 	.dw #0x00B3
   0058 B5 00               892 	.dw #0x00B5
   005A B8 00               893 	.dw #0x00B8
   005C BA 00               894 	.dw #0x00BA
   005E BD 00               895 	.dw #0x00BD
   0060 BF 00               896 	.dw #0x00BF
   0062 C1 00               897 	.dw #0x00C1
   0064 C4 00               898 	.dw #0x00C4
   0066 C6 00               899 	.dw #0x00C6
   0068 C8 00               900 	.dw #0x00C8
   006A CA 00               901 	.dw #0x00CA
   006C CC 00               902 	.dw #0x00CC
   006E CE 00               903 	.dw #0x00CE
   0070 D0 00               904 	.dw #0x00D0
   0072 D2 00               905 	.dw #0x00D2
   0074 D4 00               906 	.dw #0x00D4
   0076 D6 00               907 	.dw #0x00D6
   0078 D8 00               908 	.dw #0x00D8
   007A DA 00               909 	.dw #0x00DA
   007C DB 00               910 	.dw #0x00DB
   007E DD 00               911 	.dw #0x00DD
   0080 DE 00               912 	.dw #0x00DE
   0082 E0 00               913 	.dw #0x00E0
   0084 E1 00               914 	.dw #0x00E1
   0086 E3 00               915 	.dw #0x00E3
   0088 E4 00               916 	.dw #0x00E4
   008A E5 00               917 	.dw #0x00E5
   008C E6 00               918 	.dw #0x00E6
   008E E7 00               919 	.dw #0x00E7
   0090 E8 00               920 	.dw #0x00E8
   0092 E9 00               921 	.dw #0x00E9
   0094 EA 00               922 	.dw #0x00EA
   0096 EB 00               923 	.dw #0x00EB
   0098 EC 00               924 	.dw #0x00EC
   009A ED 00               925 	.dw #0x00ED
   009C ED 00               926 	.dw #0x00ED
   009E EE 00               927 	.dw #0x00EE
   00A0 EE 00               928 	.dw #0x00EE
   00A2 EF 00               929 	.dw #0x00EF
   00A4 EF 00               930 	.dw #0x00EF
   00A6 EF 00               931 	.dw #0x00EF
   00A8 EF 00               932 	.dw #0x00EF
   00AA EF 00               933 	.dw #0x00EF
   00AC F0 00               934 	.dw #0x00F0
   00AE EF 00               935 	.dw #0x00EF
   00B0 EF 00               936 	.dw #0x00EF
   00B2 EF 00               937 	.dw #0x00EF
   00B4 EF 00               938 	.dw #0x00EF
   00B6 EF 00               939 	.dw #0x00EF
   00B8 EE 00               940 	.dw #0x00EE
   00BA EE 00               941 	.dw #0x00EE
   00BC ED 00               942 	.dw #0x00ED
   00BE ED 00               943 	.dw #0x00ED
   00C0 EC 00               944 	.dw #0x00EC
   00C2 EB 00               945 	.dw #0x00EB
   00C4 EA 00               946 	.dw #0x00EA
   00C6 E9 00               947 	.dw #0x00E9
   00C8 E8 00               948 	.dw #0x00E8
   00CA E7 00               949 	.dw #0x00E7
   00CC E6 00               950 	.dw #0x00E6
   00CE E5 00               951 	.dw #0x00E5
   00D0 E4 00               952 	.dw #0x00E4
   00D2 E3 00               953 	.dw #0x00E3
   00D4 E1 00               954 	.dw #0x00E1
   00D6 E0 00               955 	.dw #0x00E0
   00D8 DE 00               956 	.dw #0x00DE
   00DA DD 00               957 	.dw #0x00DD
   00DC DB 00               958 	.dw #0x00DB
   00DE DA 00               959 	.dw #0x00DA
   00E0 D8 00               960 	.dw #0x00D8
   00E2 D6 00               961 	.dw #0x00D6
   00E4 D4 00               962 	.dw #0x00D4
   00E6 D2 00               963 	.dw #0x00D2
   00E8 D0 00               964 	.dw #0x00D0
   00EA CE 00               965 	.dw #0x00CE
   00EC CC 00               966 	.dw #0x00CC
   00EE CA 00               967 	.dw #0x00CA
   00F0 C8 00               968 	.dw #0x00C8
   00F2 C6 00               969 	.dw #0x00C6
   00F4 C4 00               970 	.dw #0x00C4
   00F6 C1 00               971 	.dw #0x00C1
   00F8 BF 00               972 	.dw #0x00BF
   00FA BD 00               973 	.dw #0x00BD
   00FC BA 00               974 	.dw #0x00BA
   00FE B8 00               975 	.dw #0x00B8
   0100 B5 00               976 	.dw #0x00B5
   0102 B3 00               977 	.dw #0x00B3
   0104 B0 00               978 	.dw #0x00B0
   0106 AD 00               979 	.dw #0x00AD
   0108 AB 00               980 	.dw #0x00AB
   010A A8 00               981 	.dw #0x00A8
   010C A5 00               982 	.dw #0x00A5
   010E A3 00               983 	.dw #0x00A3
   0110 A0 00               984 	.dw #0x00A0
   0112 9D 00               985 	.dw #0x009D
   0114 9A 00               986 	.dw #0x009A
   0116 98 00               987 	.dw #0x0098
   0118 95 00               988 	.dw #0x0095
   011A 92 00               989 	.dw #0x0092
   011C 8F 00               990 	.dw #0x008F
   011E 8C 00               991 	.dw #0x008C
   0120 89 00               992 	.dw #0x0089
   0122 86 00               993 	.dw #0x0086
   0124 83 00               994 	.dw #0x0083
   0126 80 00               995 	.dw #0x0080
   0128 7D 00               996 	.dw #0x007D
   012A 7A 00               997 	.dw #0x007A
   012C 78 00               998 	.dw #0x0078
   012E 75 00               999 	.dw #0x0075
   0130 72 00              1000 	.dw #0x0072
   0132 6F 00              1001 	.dw #0x006F
   0134 6C 00              1002 	.dw #0x006C
   0136 69 00              1003 	.dw #0x0069
   0138 66 00              1004 	.dw #0x0066
   013A 63 00              1005 	.dw #0x0063
   013C 60 00              1006 	.dw #0x0060
   013E 5D 00              1007 	.dw #0x005D
   0140 5A 00              1008 	.dw #0x005A
   0142 57 00              1009 	.dw #0x0057
   0144 55 00              1010 	.dw #0x0055
   0146 52 00              1011 	.dw #0x0052
   0148 4F 00              1012 	.dw #0x004F
   014A 4C 00              1013 	.dw #0x004C
   014C 4A 00              1014 	.dw #0x004A
   014E 47 00              1015 	.dw #0x0047
   0150 44 00              1016 	.dw #0x0044
   0152 42 00              1017 	.dw #0x0042
   0154 3F 00              1018 	.dw #0x003F
   0156 3C 00              1019 	.dw #0x003C
   0158 3A 00              1020 	.dw #0x003A
   015A 37 00              1021 	.dw #0x0037
   015C 35 00              1022 	.dw #0x0035
   015E 32 00              1023 	.dw #0x0032
   0160 30 00              1024 	.dw #0x0030
   0162 2E 00              1025 	.dw #0x002E
   0164 2B 00              1026 	.dw #0x002B
   0166 29 00              1027 	.dw #0x0029
   0168 27 00              1028 	.dw #0x0027
   016A 25 00              1029 	.dw #0x0025
   016C 23 00              1030 	.dw #0x0023
   016E 21 00              1031 	.dw #0x0021
   0170 1F 00              1032 	.dw #0x001F
   0172 1D 00              1033 	.dw #0x001D
   0174 1B 00              1034 	.dw #0x001B
   0176 19 00              1035 	.dw #0x0019
   0178 17 00              1036 	.dw #0x0017
   017A 15 00              1037 	.dw #0x0015
   017C 14 00              1038 	.dw #0x0014
   017E 12 00              1039 	.dw #0x0012
   0180 11 00              1040 	.dw #0x0011
   0182 0F 00              1041 	.dw #0x000F
   0184 0E 00              1042 	.dw #0x000E
   0186 0C 00              1043 	.dw #0x000C
   0188 0B 00              1044 	.dw #0x000B
   018A 0A 00              1045 	.dw #0x000A
   018C 09 00              1046 	.dw #0x0009
   018E 08 00              1047 	.dw #0x0008
   0190 07 00              1048 	.dw #0x0007
   0192 06 00              1049 	.dw #0x0006
   0194 05 00              1050 	.dw #0x0005
   0196 04 00              1051 	.dw #0x0004
   0198 03 00              1052 	.dw #0x0003
   019A 02 00              1053 	.dw #0x0002
   019C 02 00              1054 	.dw #0x0002
   019E 01 00              1055 	.dw #0x0001
   01A0 01 00              1056 	.dw #0x0001
   01A2 00 00              1057 	.dw #0x0000
   01A4 00 00              1058 	.dw #0x0000
   01A6 00 00              1059 	.dw #0x0000
   01A8 00 00              1060 	.dw #0x0000
   01AA 00 00              1061 	.dw #0x0000
   01AC 00 00              1062 	.dw #0x0000
   01AE 00 00              1063 	.dw #0x0000
   01B0 00 00              1064 	.dw #0x0000
   01B2 00 00              1065 	.dw #0x0000
   01B4 00 00              1066 	.dw #0x0000
   01B6 00 00              1067 	.dw #0x0000
   01B8 01 00              1068 	.dw #0x0001
   01BA 01 00              1069 	.dw #0x0001
   01BC 02 00              1070 	.dw #0x0002
   01BE 02 00              1071 	.dw #0x0002
   01C0 03 00              1072 	.dw #0x0003
   01C2 04 00              1073 	.dw #0x0004
   01C4 05 00              1074 	.dw #0x0005
   01C6 06 00              1075 	.dw #0x0006
   01C8 07 00              1076 	.dw #0x0007
   01CA 08 00              1077 	.dw #0x0008
   01CC 09 00              1078 	.dw #0x0009
   01CE 0A 00              1079 	.dw #0x000A
   01D0 0B 00              1080 	.dw #0x000B
   01D2 0C 00              1081 	.dw #0x000C
   01D4 0E 00              1082 	.dw #0x000E
   01D6 0F 00              1083 	.dw #0x000F
   01D8 11 00              1084 	.dw #0x0011
   01DA 12 00              1085 	.dw #0x0012
   01DC 14 00              1086 	.dw #0x0014
   01DE 15 00              1087 	.dw #0x0015
   01E0 17 00              1088 	.dw #0x0017
   01E2 19 00              1089 	.dw #0x0019
   01E4 1B 00              1090 	.dw #0x001B
   01E6 1D 00              1091 	.dw #0x001D
   01E8 1F 00              1092 	.dw #0x001F
   01EA 21 00              1093 	.dw #0x0021
   01EC 23 00              1094 	.dw #0x0023
   01EE 25 00              1095 	.dw #0x0025
   01F0 27 00              1096 	.dw #0x0027
   01F2 29 00              1097 	.dw #0x0029
   01F4 2B 00              1098 	.dw #0x002B
   01F6 2E 00              1099 	.dw #0x002E
   01F8 30 00              1100 	.dw #0x0030
   01FA 32 00              1101 	.dw #0x0032
   01FC 35 00              1102 	.dw #0x0035
   01FE 37 00              1103 	.dw #0x0037
   0200 3A 00              1104 	.dw #0x003A
   0202 3C 00              1105 	.dw #0x003C
   0204 3F 00              1106 	.dw #0x003F
   0206 42 00              1107 	.dw #0x0042
   0208 44 00              1108 	.dw #0x0044
   020A 47 00              1109 	.dw #0x0047
   020C 4A 00              1110 	.dw #0x004A
   020E 4C 00              1111 	.dw #0x004C
   0210 4F 00              1112 	.dw #0x004F
   0212 52 00              1113 	.dw #0x0052
   0214 55 00              1114 	.dw #0x0055
   0216 57 00              1115 	.dw #0x0057
   0218 5A 00              1116 	.dw #0x005A
   021A 5D 00              1117 	.dw #0x005D
   021C 60 00              1118 	.dw #0x0060
   021E 63 00              1119 	.dw #0x0063
   0220 66 00              1120 	.dw #0x0066
   0222 69 00              1121 	.dw #0x0069
   0224 6C 00              1122 	.dw #0x006C
   0226 6F 00              1123 	.dw #0x006F
   0228 72 00              1124 	.dw #0x0072
   022A 75 00              1125 	.dw #0x0075
   022C                    1126 _tri_center:
   022C 08                 1127 	.db #0x08
   022D 0A                 1128 	.db #0x0A
   022E 12                 1129 	.db #0x12
   022F 10                 1130 	.db #0x10
   0230 00                 1131 	.db #0x00
   0231 02                 1132 	.db #0x02
   0232 08                 1133 	.db #0x08
   0233 0A                 1134 	.db #0x0A
   0234 0B                 1135 	.db #0x0B
   0235 09                 1136 	.db #0x09
   0236 03                 1137 	.db #0x03
   0237 01                 1138 	.db #0x01
   0238 11                 1139 	.db #0x11
   0239 13                 1140 	.db #0x13
   023A 0B                 1141 	.db #0x0B
   023B 09                 1142 	.db #0x09
   023C 0A                 1143 	.db #0x0A
   023D 12                 1144 	.db #0x12
   023E 10                 1145 	.db #0x10
   023F 00                 1146 	.db #0x00
   0240 02                 1147 	.db #0x02
   0241 08                 1148 	.db #0x08
   0242 0A                 1149 	.db #0x0A
   0243 12                 1150 	.db #0x12
   0244 13                 1151 	.db #0x13
   0245 0B                 1152 	.db #0x0B
   0246 09                 1153 	.db #0x09
   0247 03                 1154 	.db #0x03
   0248 01                 1155 	.db #0x01
   0249 11                 1156 	.db #0x11
   024A 13                 1157 	.db #0x13
   024B 0B                 1158 	.db #0x0B
   024C 12                 1159 	.db #0x12
   024D 10                 1160 	.db #0x10
   024E 00                 1161 	.db #0x00
   024F 02                 1162 	.db #0x02
   0250 08                 1163 	.db #0x08
   0251 0A                 1164 	.db #0x0A
   0252 12                 1165 	.db #0x12
   0253 10                 1166 	.db #0x10
   0254 11                 1167 	.db #0x11
   0255 13                 1168 	.db #0x13
   0256 0B                 1169 	.db #0x0B
   0257 09                 1170 	.db #0x09
   0258 03                 1171 	.db #0x03
   0259 01                 1172 	.db #0x01
   025A 11                 1173 	.db #0x11
   025B 13                 1174 	.db #0x13
   025C 10                 1175 	.db #0x10
   025D 00                 1176 	.db #0x00
   025E 02                 1177 	.db #0x02
   025F 08                 1178 	.db #0x08
   0260 0A                 1179 	.db #0x0A
   0261 12                 1180 	.db #0x12
   0262 10                 1181 	.db #0x10
   0263 00                 1182 	.db #0x00
   0264 01                 1183 	.db #0x01
   0265 11                 1184 	.db #0x11
   0266 13                 1185 	.db #0x13
   0267 0B                 1186 	.db #0x0B
   0268 09                 1187 	.db #0x09
   0269 03                 1188 	.db #0x03
   026A 01                 1189 	.db #0x01
   026B 11                 1190 	.db #0x11
   026C 00                 1191 	.db #0x00
   026D 02                 1192 	.db #0x02
   026E 08                 1193 	.db #0x08
   026F 0A                 1194 	.db #0x0A
   0270 12                 1195 	.db #0x12
   0271 10                 1196 	.db #0x10
   0272 00                 1197 	.db #0x00
   0273 02                 1198 	.db #0x02
   0274 03                 1199 	.db #0x03
   0275 01                 1200 	.db #0x01
   0276 11                 1201 	.db #0x11
   0277 13                 1202 	.db #0x13
   0278 0B                 1203 	.db #0x0B
   0279 09                 1204 	.db #0x09
   027A 03                 1205 	.db #0x03
   027B 01                 1206 	.db #0x01
   027C 02                 1207 	.db #0x02
   027D 08                 1208 	.db #0x08
   027E 0A                 1209 	.db #0x0A
   027F 12                 1210 	.db #0x12
   0280 10                 1211 	.db #0x10
   0281 00                 1212 	.db #0x00
   0282 02                 1213 	.db #0x02
   0283 08                 1214 	.db #0x08
   0284 09                 1215 	.db #0x09
   0285 03                 1216 	.db #0x03
   0286 01                 1217 	.db #0x01
   0287 11                 1218 	.db #0x11
   0288 13                 1219 	.db #0x13
   0289 0B                 1220 	.db #0x0B
   028A 09                 1221 	.db #0x09
   028B 03                 1222 	.db #0x03
   028C 01                 1223 	.db #0x01
   028D 0B                 1224 	.db #0x0B
   028E 09                 1225 	.db #0x09
   028F 11                 1226 	.db #0x11
   0290 13                 1227 	.db #0x13
   0291 03                 1228 	.db #0x03
   0292 01                 1229 	.db #0x01
   0293 0B                 1230 	.db #0x0B
   0294 0A                 1231 	.db #0x0A
   0295 00                 1232 	.db #0x00
   0296 02                 1233 	.db #0x02
   0297 12                 1234 	.db #0x12
   0298 10                 1235 	.db #0x10
   0299 08                 1236 	.db #0x08
   029A 0A                 1237 	.db #0x0A
   029B 00                 1238 	.db #0x00
   029C 03                 1239 	.db #0x03
   029D 01                 1240 	.db #0x01
   029E 0B                 1241 	.db #0x0B
   029F 09                 1242 	.db #0x09
   02A0 11                 1243 	.db #0x11
   02A1 13                 1244 	.db #0x13
   02A2 03                 1245 	.db #0x03
   02A3 01                 1246 	.db #0x01
   02A4 00                 1247 	.db #0x00
   02A5 02                 1248 	.db #0x02
   02A6 12                 1249 	.db #0x12
   02A7 10                 1250 	.db #0x10
   02A8 08                 1251 	.db #0x08
   02A9 0A                 1252 	.db #0x0A
   02AA 00                 1253 	.db #0x00
   02AB 02                 1254 	.db #0x02
   02AC 13                 1255 	.db #0x13
   02AD 03                 1256 	.db #0x03
   02AE 01                 1257 	.db #0x01
   02AF 0B                 1258 	.db #0x0B
   02B0 09                 1259 	.db #0x09
   02B1 11                 1260 	.db #0x11
   02B2 13                 1261 	.db #0x13
   02B3 03                 1262 	.db #0x03
   02B4 02                 1263 	.db #0x02
   02B5 12                 1264 	.db #0x12
   02B6 10                 1265 	.db #0x10
   02B7 08                 1266 	.db #0x08
   02B8 0A                 1267 	.db #0x0A
   02B9 00                 1268 	.db #0x00
   02BA 02                 1269 	.db #0x02
   02BB 12                 1270 	.db #0x12
   02BC 11                 1271 	.db #0x11
   02BD 13                 1272 	.db #0x13
   02BE 03                 1273 	.db #0x03
   02BF 01                 1274 	.db #0x01
   02C0 0B                 1275 	.db #0x0B
   02C1 09                 1276 	.db #0x09
   02C2 11                 1277 	.db #0x11
   02C3 13                 1278 	.db #0x13
   02C4 12                 1279 	.db #0x12
   02C5 10                 1280 	.db #0x10
   02C6 08                 1281 	.db #0x08
   02C7 0A                 1282 	.db #0x0A
   02C8 00                 1283 	.db #0x00
   02C9 02                 1284 	.db #0x02
   02CA 12                 1285 	.db #0x12
   02CB 10                 1286 	.db #0x10
   02CC 09                 1287 	.db #0x09
   02CD 11                 1288 	.db #0x11
   02CE 13                 1289 	.db #0x13
   02CF 03                 1290 	.db #0x03
   02D0 01                 1291 	.db #0x01
   02D1 0B                 1292 	.db #0x0B
   02D2 09                 1293 	.db #0x09
   02D3 11                 1294 	.db #0x11
   02D4 10                 1295 	.db #0x10
   02D5 08                 1296 	.db #0x08
   02D6 0A                 1297 	.db #0x0A
   02D7 00                 1298 	.db #0x00
   02D8 02                 1299 	.db #0x02
   02D9 12                 1300 	.db #0x12
   02DA 10                 1301 	.db #0x10
   02DB 08                 1302 	.db #0x08
   02DC 0B                 1303 	.db #0x0B
   02DD 09                 1304 	.db #0x09
   02DE 11                 1305 	.db #0x11
   02DF 13                 1306 	.db #0x13
   02E0 03                 1307 	.db #0x03
   02E1 01                 1308 	.db #0x01
   02E2 0B                 1309 	.db #0x0B
   02E3 09                 1310 	.db #0x09
   02E4 08                 1311 	.db #0x08
   02E5 0A                 1312 	.db #0x0A
   02E6 00                 1313 	.db #0x00
   02E7 02                 1314 	.db #0x02
   02E8 12                 1315 	.db #0x12
   02E9 10                 1316 	.db #0x10
   02EA 08                 1317 	.db #0x08
   02EB 0A                 1318 	.db #0x0A
   02EC                    1319 _tri_up:
   02EC 0A                 1320 	.db #0x0A
   02ED 12                 1321 	.db #0x12
   02EE 10                 1322 	.db #0x10
   02EF 00                 1323 	.db #0x00
   02F0 02                 1324 	.db #0x02
   02F1 08                 1325 	.db #0x08
   02F2 0A                 1326 	.db #0x0A
   02F3 12                 1327 	.db #0x12
   02F4 13                 1328 	.db #0x13
   02F5 0B                 1329 	.db #0x0B
   02F6 09                 1330 	.db #0x09
   02F7 03                 1331 	.db #0x03
   02F8 01                 1332 	.db #0x01
   02F9 11                 1333 	.db #0x11
   02FA 13                 1334 	.db #0x13
   02FB 0B                 1335 	.db #0x0B
   02FC 12                 1336 	.db #0x12
   02FD 10                 1337 	.db #0x10
   02FE 00                 1338 	.db #0x00
   02FF 02                 1339 	.db #0x02
   0300 08                 1340 	.db #0x08
   0301 0A                 1341 	.db #0x0A
   0302 12                 1342 	.db #0x12
   0303 10                 1343 	.db #0x10
   0304 11                 1344 	.db #0x11
   0305 13                 1345 	.db #0x13
   0306 0B                 1346 	.db #0x0B
   0307 09                 1347 	.db #0x09
   0308 03                 1348 	.db #0x03
   0309 01                 1349 	.db #0x01
   030A 11                 1350 	.db #0x11
   030B 13                 1351 	.db #0x13
   030C 10                 1352 	.db #0x10
   030D 00                 1353 	.db #0x00
   030E 02                 1354 	.db #0x02
   030F 08                 1355 	.db #0x08
   0310 0A                 1356 	.db #0x0A
   0311 12                 1357 	.db #0x12
   0312 10                 1358 	.db #0x10
   0313 00                 1359 	.db #0x00
   0314 01                 1360 	.db #0x01
   0315 11                 1361 	.db #0x11
   0316 13                 1362 	.db #0x13
   0317 0B                 1363 	.db #0x0B
   0318 09                 1364 	.db #0x09
   0319 03                 1365 	.db #0x03
   031A 01                 1366 	.db #0x01
   031B 11                 1367 	.db #0x11
   031C 00                 1368 	.db #0x00
   031D 02                 1369 	.db #0x02
   031E 08                 1370 	.db #0x08
   031F 0A                 1371 	.db #0x0A
   0320 12                 1372 	.db #0x12
   0321 10                 1373 	.db #0x10
   0322 00                 1374 	.db #0x00
   0323 02                 1375 	.db #0x02
   0324 03                 1376 	.db #0x03
   0325 01                 1377 	.db #0x01
   0326 11                 1378 	.db #0x11
   0327 13                 1379 	.db #0x13
   0328 0B                 1380 	.db #0x0B
   0329 09                 1381 	.db #0x09
   032A 03                 1382 	.db #0x03
   032B 01                 1383 	.db #0x01
   032C 02                 1384 	.db #0x02
   032D 08                 1385 	.db #0x08
   032E 0A                 1386 	.db #0x0A
   032F 12                 1387 	.db #0x12
   0330 10                 1388 	.db #0x10
   0331 00                 1389 	.db #0x00
   0332 02                 1390 	.db #0x02
   0333 08                 1391 	.db #0x08
   0334 09                 1392 	.db #0x09
   0335 03                 1393 	.db #0x03
   0336 01                 1394 	.db #0x01
   0337 11                 1395 	.db #0x11
   0338 13                 1396 	.db #0x13
   0339 0B                 1397 	.db #0x0B
   033A 09                 1398 	.db #0x09
   033B 03                 1399 	.db #0x03
   033C 08                 1400 	.db #0x08
   033D 0A                 1401 	.db #0x0A
   033E 12                 1402 	.db #0x12
   033F 10                 1403 	.db #0x10
   0340 00                 1404 	.db #0x00
   0341 02                 1405 	.db #0x02
   0342 08                 1406 	.db #0x08
   0343 0A                 1407 	.db #0x0A
   0344 0B                 1408 	.db #0x0B
   0345 09                 1409 	.db #0x09
   0346 03                 1410 	.db #0x03
   0347 01                 1411 	.db #0x01
   0348 11                 1412 	.db #0x11
   0349 13                 1413 	.db #0x13
   034A 0B                 1414 	.db #0x0B
   034B 09                 1415 	.db #0x09
   034C 0A                 1416 	.db #0x0A
   034D 12                 1417 	.db #0x12
   034E 10                 1418 	.db #0x10
   034F 00                 1419 	.db #0x00
   0350 02                 1420 	.db #0x02
   0351 08                 1421 	.db #0x08
   0352 0A                 1422 	.db #0x0A
   0353 12                 1423 	.db #0x12
   0354 13                 1424 	.db #0x13
   0355 0B                 1425 	.db #0x0B
   0356 09                 1426 	.db #0x09
   0357 03                 1427 	.db #0x03
   0358 01                 1428 	.db #0x01
   0359 11                 1429 	.db #0x11
   035A 13                 1430 	.db #0x13
   035B 0B                 1431 	.db #0x0B
   035C 12                 1432 	.db #0x12
   035D 10                 1433 	.db #0x10
   035E 00                 1434 	.db #0x00
   035F 02                 1435 	.db #0x02
   0360 08                 1436 	.db #0x08
   0361 0A                 1437 	.db #0x0A
   0362 12                 1438 	.db #0x12
   0363 10                 1439 	.db #0x10
   0364 11                 1440 	.db #0x11
   0365 13                 1441 	.db #0x13
   0366 0B                 1442 	.db #0x0B
   0367 09                 1443 	.db #0x09
   0368 03                 1444 	.db #0x03
   0369 01                 1445 	.db #0x01
   036A 11                 1446 	.db #0x11
   036B 13                 1447 	.db #0x13
   036C 10                 1448 	.db #0x10
   036D 00                 1449 	.db #0x00
   036E 02                 1450 	.db #0x02
   036F 08                 1451 	.db #0x08
   0370 0A                 1452 	.db #0x0A
   0371 12                 1453 	.db #0x12
   0372 10                 1454 	.db #0x10
   0373 00                 1455 	.db #0x00
   0374 01                 1456 	.db #0x01
   0375 11                 1457 	.db #0x11
   0376 13                 1458 	.db #0x13
   0377 0B                 1459 	.db #0x0B
   0378 09                 1460 	.db #0x09
   0379 03                 1461 	.db #0x03
   037A 01                 1462 	.db #0x01
   037B 11                 1463 	.db #0x11
   037C 00                 1464 	.db #0x00
   037D 02                 1465 	.db #0x02
   037E 08                 1466 	.db #0x08
   037F 0A                 1467 	.db #0x0A
   0380 12                 1468 	.db #0x12
   0381 10                 1469 	.db #0x10
   0382 00                 1470 	.db #0x00
   0383 02                 1471 	.db #0x02
   0384 03                 1472 	.db #0x03
   0385 01                 1473 	.db #0x01
   0386 11                 1474 	.db #0x11
   0387 13                 1475 	.db #0x13
   0388 0B                 1476 	.db #0x0B
   0389 09                 1477 	.db #0x09
   038A 03                 1478 	.db #0x03
   038B 01                 1479 	.db #0x01
   038C 02                 1480 	.db #0x02
   038D 08                 1481 	.db #0x08
   038E 0A                 1482 	.db #0x0A
   038F 12                 1483 	.db #0x12
   0390 10                 1484 	.db #0x10
   0391 00                 1485 	.db #0x00
   0392 02                 1486 	.db #0x02
   0393 08                 1487 	.db #0x08
   0394 09                 1488 	.db #0x09
   0395 03                 1489 	.db #0x03
   0396 01                 1490 	.db #0x01
   0397 11                 1491 	.db #0x11
   0398 13                 1492 	.db #0x13
   0399 0B                 1493 	.db #0x0B
   039A 09                 1494 	.db #0x09
   039B 03                 1495 	.db #0x03
   039C 08                 1496 	.db #0x08
   039D 0A                 1497 	.db #0x0A
   039E 12                 1498 	.db #0x12
   039F 10                 1499 	.db #0x10
   03A0 00                 1500 	.db #0x00
   03A1 02                 1501 	.db #0x02
   03A2 08                 1502 	.db #0x08
   03A3 0A                 1503 	.db #0x0A
   03A4 0B                 1504 	.db #0x0B
   03A5 09                 1505 	.db #0x09
   03A6 03                 1506 	.db #0x03
   03A7 01                 1507 	.db #0x01
   03A8 11                 1508 	.db #0x11
   03A9 13                 1509 	.db #0x13
   03AA 0B                 1510 	.db #0x0B
   03AB 09                 1511 	.db #0x09
   03AC                    1512 _tri_dia:
   03AC 05                 1513 	.db #0x05
   03AD 1B                 1514 	.db #0x1B
   03AE 0F                 1515 	.db #0x0F
   03AF 1D                 1516 	.db #0x1D
   03B0 15                 1517 	.db #0x15
   03B1 19                 1518 	.db #0x19
   03B2 05                 1519 	.db #0x05
   03B3 1B                 1520 	.db #0x1B
   03B4 0F                 1521 	.db #0x0F
   03B5 1D                 1522 	.db #0x1D
   03B6 15                 1523 	.db #0x15
   03B7 19                 1524 	.db #0x19
   03B8 05                 1525 	.db #0x05
   03B9 1B                 1526 	.db #0x1B
   03BA 0F                 1527 	.db #0x0F
   03BB 1D                 1528 	.db #0x1D
   03BC 1D                 1529 	.db #0x1D
   03BD 05                 1530 	.db #0x05
   03BE 19                 1531 	.db #0x19
   03BF 0F                 1532 	.db #0x0F
   03C0 1B                 1533 	.db #0x1B
   03C1 15                 1534 	.db #0x15
   03C2 1D                 1535 	.db #0x1D
   03C3 05                 1536 	.db #0x05
   03C4 19                 1537 	.db #0x19
   03C5 0F                 1538 	.db #0x0F
   03C6 1B                 1539 	.db #0x1B
   03C7 15                 1540 	.db #0x15
   03C8 1D                 1541 	.db #0x1D
   03C9 05                 1542 	.db #0x05
   03CA 19                 1543 	.db #0x19
   03CB 0F                 1544 	.db #0x0F
   03CC 0F                 1545 	.db #0x0F
   03CD 1D                 1546 	.db #0x1D
   03CE 15                 1547 	.db #0x15
   03CF 19                 1548 	.db #0x19
   03D0 05                 1549 	.db #0x05
   03D1 1B                 1550 	.db #0x1B
   03D2 0F                 1551 	.db #0x0F
   03D3 1D                 1552 	.db #0x1D
   03D4 15                 1553 	.db #0x15
   03D5 19                 1554 	.db #0x19
   03D6 05                 1555 	.db #0x05
   03D7 1B                 1556 	.db #0x1B
   03D8 0F                 1557 	.db #0x0F
   03D9 1D                 1558 	.db #0x1D
   03DA 15                 1559 	.db #0x15
   03DB 19                 1560 	.db #0x19
   03DC 19                 1561 	.db #0x19
   03DD 0F                 1562 	.db #0x0F
   03DE 1B                 1563 	.db #0x1B
   03DF 15                 1564 	.db #0x15
   03E0 1D                 1565 	.db #0x1D
   03E1 05                 1566 	.db #0x05
   03E2 19                 1567 	.db #0x19
   03E3 0F                 1568 	.db #0x0F
   03E4 1B                 1569 	.db #0x1B
   03E5 15                 1570 	.db #0x15
   03E6 1D                 1571 	.db #0x1D
   03E7 05                 1572 	.db #0x05
   03E8 19                 1573 	.db #0x19
   03E9 0F                 1574 	.db #0x0F
   03EA 1B                 1575 	.db #0x1B
   03EB 15                 1576 	.db #0x15
   03EC 15                 1577 	.db #0x15
   03ED 19                 1578 	.db #0x19
   03EE 05                 1579 	.db #0x05
   03EF 1B                 1580 	.db #0x1B
   03F0 0F                 1581 	.db #0x0F
   03F1 1D                 1582 	.db #0x1D
   03F2 15                 1583 	.db #0x15
   03F3 19                 1584 	.db #0x19
   03F4 05                 1585 	.db #0x05
   03F5 1B                 1586 	.db #0x1B
   03F6 0F                 1587 	.db #0x0F
   03F7 1D                 1588 	.db #0x1D
   03F8 15                 1589 	.db #0x15
   03F9 19                 1590 	.db #0x19
   03FA 05                 1591 	.db #0x05
   03FB 1B                 1592 	.db #0x1B
   03FC 1B                 1593 	.db #0x1B
   03FD 15                 1594 	.db #0x15
   03FE 1D                 1595 	.db #0x1D
   03FF 05                 1596 	.db #0x05
   0400 19                 1597 	.db #0x19
   0401 0F                 1598 	.db #0x0F
   0402 1B                 1599 	.db #0x1B
   0403 15                 1600 	.db #0x15
   0404 1D                 1601 	.db #0x1D
   0405 05                 1602 	.db #0x05
   0406 19                 1603 	.db #0x19
   0407 0F                 1604 	.db #0x0F
   0408 1B                 1605 	.db #0x1B
   0409 15                 1606 	.db #0x15
   040A 1D                 1607 	.db #0x1D
   040B 05                 1608 	.db #0x05
   040C 05                 1609 	.db #0x05
   040D 1B                 1610 	.db #0x1B
   040E 0F                 1611 	.db #0x0F
   040F 1D                 1612 	.db #0x1D
   0410 15                 1613 	.db #0x15
   0411 19                 1614 	.db #0x19
   0412 05                 1615 	.db #0x05
   0413 1B                 1616 	.db #0x1B
   0414 0F                 1617 	.db #0x0F
   0415 1D                 1618 	.db #0x1D
   0416 15                 1619 	.db #0x15
   0417 19                 1620 	.db #0x19
   0418 05                 1621 	.db #0x05
   0419 1B                 1622 	.db #0x1B
   041A 0F                 1623 	.db #0x0F
   041B 1D                 1624 	.db #0x1D
   041C 1D                 1625 	.db #0x1D
   041D 05                 1626 	.db #0x05
   041E 19                 1627 	.db #0x19
   041F 0F                 1628 	.db #0x0F
   0420 1B                 1629 	.db #0x1B
   0421 15                 1630 	.db #0x15
   0422 1D                 1631 	.db #0x1D
   0423 05                 1632 	.db #0x05
   0424 19                 1633 	.db #0x19
   0425 0F                 1634 	.db #0x0F
   0426 1B                 1635 	.db #0x1B
   0427 15                 1636 	.db #0x15
   0428 1D                 1637 	.db #0x1D
   0429 05                 1638 	.db #0x05
   042A 19                 1639 	.db #0x19
   042B 0F                 1640 	.db #0x0F
   042C 0F                 1641 	.db #0x0F
   042D 1D                 1642 	.db #0x1D
   042E 15                 1643 	.db #0x15
   042F 19                 1644 	.db #0x19
   0430 05                 1645 	.db #0x05
   0431 1B                 1646 	.db #0x1B
   0432 0F                 1647 	.db #0x0F
   0433 1D                 1648 	.db #0x1D
   0434 15                 1649 	.db #0x15
   0435 19                 1650 	.db #0x19
   0436 05                 1651 	.db #0x05
   0437 1B                 1652 	.db #0x1B
   0438 0F                 1653 	.db #0x0F
   0439 1D                 1654 	.db #0x1D
   043A 15                 1655 	.db #0x15
   043B 19                 1656 	.db #0x19
   043C 19                 1657 	.db #0x19
   043D 0F                 1658 	.db #0x0F
   043E 1B                 1659 	.db #0x1B
   043F 15                 1660 	.db #0x15
   0440 1D                 1661 	.db #0x1D
   0441 05                 1662 	.db #0x05
   0442 19                 1663 	.db #0x19
   0443 0F                 1664 	.db #0x0F
   0444 1B                 1665 	.db #0x1B
   0445 15                 1666 	.db #0x15
   0446 1D                 1667 	.db #0x1D
   0447 05                 1668 	.db #0x05
   0448 19                 1669 	.db #0x19
   0449 0F                 1670 	.db #0x0F
   044A 1B                 1671 	.db #0x1B
   044B 15                 1672 	.db #0x15
   044C 15                 1673 	.db #0x15
   044D 19                 1674 	.db #0x19
   044E 05                 1675 	.db #0x05
   044F 1B                 1676 	.db #0x1B
   0450 0F                 1677 	.db #0x0F
   0451 1D                 1678 	.db #0x1D
   0452 15                 1679 	.db #0x15
   0453 19                 1680 	.db #0x19
   0454 05                 1681 	.db #0x05
   0455 1B                 1682 	.db #0x1B
   0456 0F                 1683 	.db #0x0F
   0457 1D                 1684 	.db #0x1D
   0458 15                 1685 	.db #0x15
   0459 19                 1686 	.db #0x19
   045A 05                 1687 	.db #0x05
   045B 1B                 1688 	.db #0x1B
   045C 1B                 1689 	.db #0x1B
   045D 15                 1690 	.db #0x15
   045E 1D                 1691 	.db #0x1D
   045F 05                 1692 	.db #0x05
   0460 19                 1693 	.db #0x19
   0461 0F                 1694 	.db #0x0F
   0462 1B                 1695 	.db #0x1B
   0463 15                 1696 	.db #0x15
   0464 1D                 1697 	.db #0x1D
   0465 05                 1698 	.db #0x05
   0466 19                 1699 	.db #0x19
   0467 0F                 1700 	.db #0x0F
   0468 1B                 1701 	.db #0x1B
   0469 15                 1702 	.db #0x15
   046A 1D                 1703 	.db #0x1D
   046B 05                 1704 	.db #0x05
   046C                    1705 _tri_side1:
   046C 0A                 1706 	.db #0x0A
   046D 12                 1707 	.db #0x12
   046E 10                 1708 	.db #0x10
   046F 00                 1709 	.db #0x00
   0470 02                 1710 	.db #0x02
   0471 08                 1711 	.db #0x08
   0472 0A                 1712 	.db #0x0A
   0473 12                 1713 	.db #0x12
   0474 10                 1714 	.db #0x10
   0475 00                 1715 	.db #0x00
   0476 02                 1716 	.db #0x02
   0477 08                 1717 	.db #0x08
   0478 0A                 1718 	.db #0x0A
   0479 12                 1719 	.db #0x12
   047A 10                 1720 	.db #0x10
   047B 00                 1721 	.db #0x00
   047C 12                 1722 	.db #0x12
   047D 10                 1723 	.db #0x10
   047E 00                 1724 	.db #0x00
   047F 02                 1725 	.db #0x02
   0480 08                 1726 	.db #0x08
   0481 0A                 1727 	.db #0x0A
   0482 12                 1728 	.db #0x12
   0483 10                 1729 	.db #0x10
   0484 00                 1730 	.db #0x00
   0485 02                 1731 	.db #0x02
   0486 08                 1732 	.db #0x08
   0487 0A                 1733 	.db #0x0A
   0488 12                 1734 	.db #0x12
   0489 10                 1735 	.db #0x10
   048A 00                 1736 	.db #0x00
   048B 02                 1737 	.db #0x02
   048C 10                 1738 	.db #0x10
   048D 00                 1739 	.db #0x00
   048E 02                 1740 	.db #0x02
   048F 08                 1741 	.db #0x08
   0490 0A                 1742 	.db #0x0A
   0491 12                 1743 	.db #0x12
   0492 10                 1744 	.db #0x10
   0493 00                 1745 	.db #0x00
   0494 02                 1746 	.db #0x02
   0495 08                 1747 	.db #0x08
   0496 0A                 1748 	.db #0x0A
   0497 12                 1749 	.db #0x12
   0498 10                 1750 	.db #0x10
   0499 00                 1751 	.db #0x00
   049A 02                 1752 	.db #0x02
   049B 08                 1753 	.db #0x08
   049C 00                 1754 	.db #0x00
   049D 02                 1755 	.db #0x02
   049E 08                 1756 	.db #0x08
   049F 0A                 1757 	.db #0x0A
   04A0 12                 1758 	.db #0x12
   04A1 10                 1759 	.db #0x10
   04A2 00                 1760 	.db #0x00
   04A3 02                 1761 	.db #0x02
   04A4 08                 1762 	.db #0x08
   04A5 0A                 1763 	.db #0x0A
   04A6 12                 1764 	.db #0x12
   04A7 10                 1765 	.db #0x10
   04A8 00                 1766 	.db #0x00
   04A9 02                 1767 	.db #0x02
   04AA 08                 1768 	.db #0x08
   04AB 0A                 1769 	.db #0x0A
   04AC 02                 1770 	.db #0x02
   04AD 08                 1771 	.db #0x08
   04AE 0A                 1772 	.db #0x0A
   04AF 12                 1773 	.db #0x12
   04B0 10                 1774 	.db #0x10
   04B1 00                 1775 	.db #0x00
   04B2 02                 1776 	.db #0x02
   04B3 08                 1777 	.db #0x08
   04B4 0A                 1778 	.db #0x0A
   04B5 12                 1779 	.db #0x12
   04B6 10                 1780 	.db #0x10
   04B7 00                 1781 	.db #0x00
   04B8 02                 1782 	.db #0x02
   04B9 08                 1783 	.db #0x08
   04BA 0A                 1784 	.db #0x0A
   04BB 12                 1785 	.db #0x12
   04BC 08                 1786 	.db #0x08
   04BD 0A                 1787 	.db #0x0A
   04BE 12                 1788 	.db #0x12
   04BF 10                 1789 	.db #0x10
   04C0 00                 1790 	.db #0x00
   04C1 02                 1791 	.db #0x02
   04C2 08                 1792 	.db #0x08
   04C3 0A                 1793 	.db #0x0A
   04C4 12                 1794 	.db #0x12
   04C5 10                 1795 	.db #0x10
   04C6 00                 1796 	.db #0x00
   04C7 02                 1797 	.db #0x02
   04C8 08                 1798 	.db #0x08
   04C9 0A                 1799 	.db #0x0A
   04CA 12                 1800 	.db #0x12
   04CB 10                 1801 	.db #0x10
   04CC 0A                 1802 	.db #0x0A
   04CD 12                 1803 	.db #0x12
   04CE 10                 1804 	.db #0x10
   04CF 00                 1805 	.db #0x00
   04D0 02                 1806 	.db #0x02
   04D1 08                 1807 	.db #0x08
   04D2 0A                 1808 	.db #0x0A
   04D3 12                 1809 	.db #0x12
   04D4 10                 1810 	.db #0x10
   04D5 00                 1811 	.db #0x00
   04D6 02                 1812 	.db #0x02
   04D7 08                 1813 	.db #0x08
   04D8 0A                 1814 	.db #0x0A
   04D9 12                 1815 	.db #0x12
   04DA 10                 1816 	.db #0x10
   04DB 00                 1817 	.db #0x00
   04DC 12                 1818 	.db #0x12
   04DD 10                 1819 	.db #0x10
   04DE 00                 1820 	.db #0x00
   04DF 02                 1821 	.db #0x02
   04E0 08                 1822 	.db #0x08
   04E1 0A                 1823 	.db #0x0A
   04E2 12                 1824 	.db #0x12
   04E3 10                 1825 	.db #0x10
   04E4 00                 1826 	.db #0x00
   04E5 02                 1827 	.db #0x02
   04E6 08                 1828 	.db #0x08
   04E7 0A                 1829 	.db #0x0A
   04E8 12                 1830 	.db #0x12
   04E9 10                 1831 	.db #0x10
   04EA 00                 1832 	.db #0x00
   04EB 02                 1833 	.db #0x02
   04EC 10                 1834 	.db #0x10
   04ED 00                 1835 	.db #0x00
   04EE 02                 1836 	.db #0x02
   04EF 08                 1837 	.db #0x08
   04F0 0A                 1838 	.db #0x0A
   04F1 12                 1839 	.db #0x12
   04F2 10                 1840 	.db #0x10
   04F3 00                 1841 	.db #0x00
   04F4 02                 1842 	.db #0x02
   04F5 08                 1843 	.db #0x08
   04F6 0A                 1844 	.db #0x0A
   04F7 12                 1845 	.db #0x12
   04F8 10                 1846 	.db #0x10
   04F9 00                 1847 	.db #0x00
   04FA 02                 1848 	.db #0x02
   04FB 08                 1849 	.db #0x08
   04FC 00                 1850 	.db #0x00
   04FD 02                 1851 	.db #0x02
   04FE 08                 1852 	.db #0x08
   04FF 0A                 1853 	.db #0x0A
   0500 12                 1854 	.db #0x12
   0501 10                 1855 	.db #0x10
   0502 00                 1856 	.db #0x00
   0503 02                 1857 	.db #0x02
   0504 08                 1858 	.db #0x08
   0505 0A                 1859 	.db #0x0A
   0506 12                 1860 	.db #0x12
   0507 10                 1861 	.db #0x10
   0508 00                 1862 	.db #0x00
   0509 02                 1863 	.db #0x02
   050A 08                 1864 	.db #0x08
   050B 0A                 1865 	.db #0x0A
   050C 02                 1866 	.db #0x02
   050D 08                 1867 	.db #0x08
   050E 0A                 1868 	.db #0x0A
   050F 12                 1869 	.db #0x12
   0510 10                 1870 	.db #0x10
   0511 00                 1871 	.db #0x00
   0512 02                 1872 	.db #0x02
   0513 08                 1873 	.db #0x08
   0514 0A                 1874 	.db #0x0A
   0515 12                 1875 	.db #0x12
   0516 10                 1876 	.db #0x10
   0517 00                 1877 	.db #0x00
   0518 02                 1878 	.db #0x02
   0519 08                 1879 	.db #0x08
   051A 0A                 1880 	.db #0x0A
   051B 12                 1881 	.db #0x12
   051C 08                 1882 	.db #0x08
   051D 0A                 1883 	.db #0x0A
   051E 12                 1884 	.db #0x12
   051F 10                 1885 	.db #0x10
   0520 00                 1886 	.db #0x00
   0521 02                 1887 	.db #0x02
   0522 08                 1888 	.db #0x08
   0523 0A                 1889 	.db #0x0A
   0524 12                 1890 	.db #0x12
   0525 10                 1891 	.db #0x10
   0526 00                 1892 	.db #0x00
   0527 02                 1893 	.db #0x02
   0528 08                 1894 	.db #0x08
   0529 0A                 1895 	.db #0x0A
   052A 12                 1896 	.db #0x12
   052B 10                 1897 	.db #0x10
   052C                    1898 _tri_side2:
   052C 00                 1899 	.db #0x00
   052D 10                 1900 	.db #0x10
   052E 12                 1901 	.db #0x12
   052F 0A                 1902 	.db #0x0A
   0530 08                 1903 	.db #0x08
   0531 02                 1904 	.db #0x02
   0532 00                 1905 	.db #0x00
   0533 10                 1906 	.db #0x10
   0534 12                 1907 	.db #0x12
   0535 0A                 1908 	.db #0x0A
   0536 08                 1909 	.db #0x08
   0537 02                 1910 	.db #0x02
   0538 00                 1911 	.db #0x00
   0539 10                 1912 	.db #0x10
   053A 12                 1913 	.db #0x12
   053B 0A                 1914 	.db #0x0A
   053C 02                 1915 	.db #0x02
   053D 00                 1916 	.db #0x00
   053E 10                 1917 	.db #0x10
   053F 12                 1918 	.db #0x12
   0540 0A                 1919 	.db #0x0A
   0541 08                 1920 	.db #0x08
   0542 02                 1921 	.db #0x02
   0543 00                 1922 	.db #0x00
   0544 10                 1923 	.db #0x10
   0545 12                 1924 	.db #0x12
   0546 0A                 1925 	.db #0x0A
   0547 08                 1926 	.db #0x08
   0548 02                 1927 	.db #0x02
   0549 00                 1928 	.db #0x00
   054A 10                 1929 	.db #0x10
   054B 12                 1930 	.db #0x12
   054C 08                 1931 	.db #0x08
   054D 02                 1932 	.db #0x02
   054E 00                 1933 	.db #0x00
   054F 10                 1934 	.db #0x10
   0550 12                 1935 	.db #0x12
   0551 0A                 1936 	.db #0x0A
   0552 08                 1937 	.db #0x08
   0553 02                 1938 	.db #0x02
   0554 00                 1939 	.db #0x00
   0555 10                 1940 	.db #0x10
   0556 12                 1941 	.db #0x12
   0557 0A                 1942 	.db #0x0A
   0558 08                 1943 	.db #0x08
   0559 02                 1944 	.db #0x02
   055A 00                 1945 	.db #0x00
   055B 10                 1946 	.db #0x10
   055C 0A                 1947 	.db #0x0A
   055D 08                 1948 	.db #0x08
   055E 02                 1949 	.db #0x02
   055F 00                 1950 	.db #0x00
   0560 10                 1951 	.db #0x10
   0561 12                 1952 	.db #0x12
   0562 0A                 1953 	.db #0x0A
   0563 08                 1954 	.db #0x08
   0564 02                 1955 	.db #0x02
   0565 00                 1956 	.db #0x00
   0566 10                 1957 	.db #0x10
   0567 12                 1958 	.db #0x12
   0568 0A                 1959 	.db #0x0A
   0569 08                 1960 	.db #0x08
   056A 02                 1961 	.db #0x02
   056B 00                 1962 	.db #0x00
   056C 12                 1963 	.db #0x12
   056D 0A                 1964 	.db #0x0A
   056E 08                 1965 	.db #0x08
   056F 02                 1966 	.db #0x02
   0570 00                 1967 	.db #0x00
   0571 10                 1968 	.db #0x10
   0572 12                 1969 	.db #0x12
   0573 0A                 1970 	.db #0x0A
   0574 08                 1971 	.db #0x08
   0575 02                 1972 	.db #0x02
   0576 00                 1973 	.db #0x00
   0577 10                 1974 	.db #0x10
   0578 12                 1975 	.db #0x12
   0579 0A                 1976 	.db #0x0A
   057A 08                 1977 	.db #0x08
   057B 02                 1978 	.db #0x02
   057C 10                 1979 	.db #0x10
   057D 12                 1980 	.db #0x12
   057E 0A                 1981 	.db #0x0A
   057F 08                 1982 	.db #0x08
   0580 02                 1983 	.db #0x02
   0581 00                 1984 	.db #0x00
   0582 10                 1985 	.db #0x10
   0583 12                 1986 	.db #0x12
   0584 0A                 1987 	.db #0x0A
   0585 08                 1988 	.db #0x08
   0586 02                 1989 	.db #0x02
   0587 00                 1990 	.db #0x00
   0588 10                 1991 	.db #0x10
   0589 12                 1992 	.db #0x12
   058A 0A                 1993 	.db #0x0A
   058B 08                 1994 	.db #0x08
   058C 00                 1995 	.db #0x00
   058D 10                 1996 	.db #0x10
   058E 12                 1997 	.db #0x12
   058F 0A                 1998 	.db #0x0A
   0590 08                 1999 	.db #0x08
   0591 02                 2000 	.db #0x02
   0592 00                 2001 	.db #0x00
   0593 10                 2002 	.db #0x10
   0594 12                 2003 	.db #0x12
   0595 0A                 2004 	.db #0x0A
   0596 08                 2005 	.db #0x08
   0597 02                 2006 	.db #0x02
   0598 00                 2007 	.db #0x00
   0599 10                 2008 	.db #0x10
   059A 12                 2009 	.db #0x12
   059B 0A                 2010 	.db #0x0A
   059C 02                 2011 	.db #0x02
   059D 00                 2012 	.db #0x00
   059E 10                 2013 	.db #0x10
   059F 12                 2014 	.db #0x12
   05A0 0A                 2015 	.db #0x0A
   05A1 08                 2016 	.db #0x08
   05A2 02                 2017 	.db #0x02
   05A3 00                 2018 	.db #0x00
   05A4 10                 2019 	.db #0x10
   05A5 12                 2020 	.db #0x12
   05A6 0A                 2021 	.db #0x0A
   05A7 08                 2022 	.db #0x08
   05A8 02                 2023 	.db #0x02
   05A9 00                 2024 	.db #0x00
   05AA 10                 2025 	.db #0x10
   05AB 12                 2026 	.db #0x12
   05AC 08                 2027 	.db #0x08
   05AD 02                 2028 	.db #0x02
   05AE 00                 2029 	.db #0x00
   05AF 10                 2030 	.db #0x10
   05B0 12                 2031 	.db #0x12
   05B1 0A                 2032 	.db #0x0A
   05B2 08                 2033 	.db #0x08
   05B3 02                 2034 	.db #0x02
   05B4 00                 2035 	.db #0x00
   05B5 10                 2036 	.db #0x10
   05B6 12                 2037 	.db #0x12
   05B7 0A                 2038 	.db #0x0A
   05B8 08                 2039 	.db #0x08
   05B9 02                 2040 	.db #0x02
   05BA 00                 2041 	.db #0x00
   05BB 10                 2042 	.db #0x10
   05BC 0A                 2043 	.db #0x0A
   05BD 08                 2044 	.db #0x08
   05BE 02                 2045 	.db #0x02
   05BF 00                 2046 	.db #0x00
   05C0 10                 2047 	.db #0x10
   05C1 12                 2048 	.db #0x12
   05C2 0A                 2049 	.db #0x0A
   05C3 08                 2050 	.db #0x08
   05C4 02                 2051 	.db #0x02
   05C5 00                 2052 	.db #0x00
   05C6 10                 2053 	.db #0x10
   05C7 12                 2054 	.db #0x12
   05C8 0A                 2055 	.db #0x0A
   05C9 08                 2056 	.db #0x08
   05CA 02                 2057 	.db #0x02
   05CB 00                 2058 	.db #0x00
   05CC 12                 2059 	.db #0x12
   05CD 0A                 2060 	.db #0x0A
   05CE 08                 2061 	.db #0x08
   05CF 02                 2062 	.db #0x02
   05D0 00                 2063 	.db #0x00
   05D1 10                 2064 	.db #0x10
   05D2 12                 2065 	.db #0x12
   05D3 0A                 2066 	.db #0x0A
   05D4 08                 2067 	.db #0x08
   05D5 02                 2068 	.db #0x02
   05D6 00                 2069 	.db #0x00
   05D7 10                 2070 	.db #0x10
   05D8 12                 2071 	.db #0x12
   05D9 0A                 2072 	.db #0x0A
   05DA 08                 2073 	.db #0x08
   05DB 02                 2074 	.db #0x02
   05DC 10                 2075 	.db #0x10
   05DD 12                 2076 	.db #0x12
   05DE 0A                 2077 	.db #0x0A
   05DF 08                 2078 	.db #0x08
   05E0 02                 2079 	.db #0x02
   05E1 00                 2080 	.db #0x00
   05E2 10                 2081 	.db #0x10
   05E3 12                 2082 	.db #0x12
   05E4 0A                 2083 	.db #0x0A
   05E5 08                 2084 	.db #0x08
   05E6 02                 2085 	.db #0x02
   05E7 00                 2086 	.db #0x00
   05E8 10                 2087 	.db #0x10
   05E9 12                 2088 	.db #0x12
   05EA 0A                 2089 	.db #0x0A
   05EB 08                 2090 	.db #0x08
                           2091 ;demo.c:142: void my_isr(void) interrupt
                           2092 ;	---------------------------------
                           2093 ; Function my_isr
                           2094 ; ---------------------------------
   05EC                    2095 _my_isr_start::
   05EC                    2096 _my_isr:
   05EC F5                 2097 	push	af
   05ED C5                 2098 	push	bc
   05EE D5                 2099 	push	de
   05EF E5                 2100 	push	hl
   05F0 FD E5              2101 	push	iy
                           2102 ;demo.c:144: DI;
   05F2 F3                 2103 		di 
                           2104 ;demo.c:146: READ_VDP_STATUS;
   05F3 DB 99              2105 		in a,(#0x99) 
                           2106 ;demo.c:148: PLY_Play();
   05F5 CDr00s00           2107 	call	_PLY_Play
                           2108 ;demo.c:149: PLY_SendRegisters();
   05F8 CDr00s00           2109 	call	_PLY_SendRegisters
                           2110 ;demo.c:151: vbicount+=1;
   05FB FD 21r68s41        2111 	ld	iy,#_vbicount
   05FF FD 34 00           2112 	inc	0 (iy)
   0602 20 07              2113 	jr	NZ,00103$
   0604 FD 21r68s41        2114 	ld	iy,#_vbicount
   0608 FD 34 01           2115 	inc	1 (iy)
   060B                    2116 00103$:
                           2117 ;demo.c:152: tick++;
   060B FD 21r6As41        2118 	ld	iy,#_tick
   060F FD 34 00           2119 	inc	0 (iy)
   0612 20 07              2120 	jr	NZ,00104$
   0614 FD 21r6As41        2121 	ld	iy,#_tick
   0618 FD 34 01           2122 	inc	1 (iy)
   061B                    2123 00104$:
                           2124 ;demo.c:154: EI;
   061B FB                 2125 		ei 
   061C FD E1              2126 	pop	iy
   061E E1                 2127 	pop	hl
   061F D1                 2128 	pop	de
   0620 C1                 2129 	pop	bc
   0621 F1                 2130 	pop	af
   0622 ED 4D              2131 	reti
   0624                    2132 _my_isr_end::
                           2133 ;demo.c:157: void color_isr(void) interrupt
                           2134 ;	---------------------------------
                           2135 ; Function color_isr
                           2136 ; ---------------------------------
   0624                    2137 _color_isr_start::
   0624                    2138 _color_isr:
   0624 F5                 2139 	push	af
   0625 C5                 2140 	push	bc
   0626 D5                 2141 	push	de
   0627 E5                 2142 	push	hl
   0628 FD E5              2143 	push	iy
                           2144 ;demo.c:159: DI;
   062A F3                 2145 		di 
                           2146 ;demo.c:161: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              2147 	ld	a,#0x01
   062D F5                 2148 	push	af
   062E 33                 2149 	inc	sp
   062F CDr00s00           2150 	call	_vdp2_status
   0632 33                 2151 	inc	sp
   0633 4D                 2152 	ld	c,l
   0634 21 00 00           2153 	ld	hl,#0x0000
   0637 E5                 2154 	push	hl
   0638 79                 2155 	ld	a,c
   0639 F5                 2156 	push	af
   063A 33                 2157 	inc	sp
   063B CDr00s00           2158 	call	_isNthBitSet
   063E F1                 2159 	pop	af
   063F 33                 2160 	inc	sp
   0640 44                 2161 	ld	b,h
   0641 4D                 2162 	ld	c,l
   0642 79                 2163 	ld	a,c
   0643 B0                 2164 	or	a,b
   0644 28 19              2165 	jr	Z,00102$
                           2166 ;demo.c:162: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r68s41           2167 	ld	hl,#_vbicount + 0
   0649 4E                 2168 	ld	c,(hl)
   064A 06 00              2169 	ld	b,#0x00
   064C 21r00s00           2170 	ld	hl,#_sintab
   064F 09                 2171 	add	hl,bc
   0650 7E                 2172 	ld	a,(hl)
   0651 F5                 2173 	push	af
   0652 33                 2174 	inc	sp
   0653 3E 17              2175 	ld	a,#0x17
   0655 F5                 2176 	push	af
   0656 33                 2177 	inc	sp
   0657 CDr00s00           2178 	call	_vdp_register
   065A F1                 2179 	pop	af
                           2180 ;demo.c:163: READ_VDP_STATUS;
   065B DB 99              2181 		in a,(#0x99) 
   065D 18 18              2182 	jr	00103$
   065F                    2183 00102$:
                           2184 ;demo.c:166: READ_VDP_STATUS;
   065F DB 99              2185 		in a,(#0x99) 
                           2186 ;demo.c:167: vbicount++;
   0661 FD 21r68s41        2187 	ld	iy,#_vbicount
   0665 FD 34 00           2188 	inc	0 (iy)
   0668 20 07              2189 	jr	NZ,00107$
   066A FD 21r68s41        2190 	ld	iy,#_vbicount
   066E FD 34 01           2191 	inc	1 (iy)
   0671                    2192 00107$:
                           2193 ;demo.c:170: PLY_Play();
   0671 CDr00s00           2194 	call	_PLY_Play
                           2195 ;demo.c:171: PLY_SendRegisters();
   0674 CDr00s00           2196 	call	_PLY_SendRegisters
   0677                    2197 00103$:
                           2198 ;demo.c:174: EI;
   0677 FB                 2199 		ei 
   0678 FD E1              2200 	pop	iy
   067A E1                 2201 	pop	hl
   067B D1                 2202 	pop	de
   067C C1                 2203 	pop	bc
   067D F1                 2204 	pop	af
   067E ED 4D              2205 	reti
   0680                    2206 _color_isr_end::
                           2207 ;demo.c:181: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2208 ;	---------------------------------
                           2209 ; Function ge5_load
                           2210 ; ---------------------------------
   0680                    2211 _ge5_load_start::
   0680                    2212 _ge5_load:
   0680 DD E5              2213 	push	ix
   0682 DD 21 00 00        2214 	ld	ix,#0
   0686 DD 39              2215 	add	ix,sp
   0688 21 D2 FF           2216 	ld	hl,#-46
   068B 39                 2217 	add	hl,sp
   068C F9                 2218 	ld	sp,hl
                           2219 ;demo.c:185: if(debugprint == 1) {
   068D DD 7E 09           2220 	ld	a,9 (ix)
   0690 D6 01              2221 	sub	a,#0x01
   0692 20 06              2222 	jr	NZ,00125$
   0694 DD 7E 0A           2223 	ld	a,10 (ix)
   0697 B7                 2224 	or	a,a
   0698 28 02              2225 	jr	Z,00126$
   069A                    2226 00125$:
   069A 18 1B              2227 	jr	00102$
   069C                    2228 00126$:
                           2229 ;demo.c:186: puts("loading ge5file: ");
   069C 21r7Bs07           2230 	ld	hl,#__str_0
   069F E5                 2231 	push	hl
   06A0 CDr00s00           2232 	call	_puts
   06A3 F1                 2233 	pop	af
                           2234 ;demo.c:187: puts(file_name);
   06A4 DD 6E 04           2235 	ld	l,4 (ix)
   06A7 DD 66 05           2236 	ld	h,5 (ix)
   06AA E5                 2237 	push	hl
   06AB CDr00s00           2238 	call	_puts
   06AE F1                 2239 	pop	af
                           2240 ;demo.c:188: puts("\r\n");
   06AF 21r8Ds07           2241 	ld	hl,#__str_1
   06B2 E5                 2242 	push	hl
   06B3 CDr00s00           2243 	call	_puts
   06B6 F1                 2244 	pop	af
   06B7                    2245 00102$:
                           2246 ;demo.c:191: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2247 	ld	hl,#0x0000
   06BA 39                 2248 	add	hl,sp
   06BB 4D                 2249 	ld	c,l
   06BC 44                 2250 	ld	b,h
   06BD 21 2E 00           2251 	ld	hl,#0x002E
   06C0 E5                 2252 	push	hl
   06C1 3E 00              2253 	ld	a,#0x00
   06C3 F5                 2254 	push	af
   06C4 33                 2255 	inc	sp
   06C5 C5                 2256 	push	bc
   06C6 CDr00s00           2257 	call	_memset
   06C9 F1                 2258 	pop	af
   06CA F1                 2259 	pop	af
   06CB 33                 2260 	inc	sp
                           2261 ;demo.c:193: f.record_size = 128;
   06CC 21 00 00           2262 	ld	hl,#0x0000
   06CF 39                 2263 	add	hl,sp
   06D0 4D                 2264 	ld	c,l
   06D1 44                 2265 	ld	b,h
   06D2 21 0F 00           2266 	ld	hl,#0x000F
   06D5 09                 2267 	add	hl,bc
   06D6 EB                 2268 	ex	de,hl
   06D7 3E 80              2269 	ld	a,#0x80
   06D9 12                 2270 	ld	(de),a
                           2271 ;demo.c:194: f.drive = 0;
   06DA 3E 00              2272 	ld	a,#0x00
   06DC 02                 2273 	ld	(bc),a
                           2274 ;demo.c:196: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2275 	ld	e,4 (ix)
   06E0 DD 56 05           2276 	ld	d,5 (ix)
   06E3 03                 2277 	inc	bc
   06E4 21 0B 00           2278 	ld	hl,#0x000B
   06E7 E5                 2279 	push	hl
   06E8 D5                 2280 	push	de
   06E9 C5                 2281 	push	bc
   06EA CDr00s00           2282 	call	_memcpy
   06ED F1                 2283 	pop	af
   06EE F1                 2284 	pop	af
   06EF F1                 2285 	pop	af
                           2286 ;demo.c:198: if (open(&f) != 0) return 0;
   06F0 21 00 00           2287 	ld	hl,#0x0000
   06F3 39                 2288 	add	hl,sp
   06F4 E5                 2289 	push	hl
   06F5 CDr00s00           2290 	call	_open
   06F8 F1                 2291 	pop	af
   06F9 AF                 2292 	xor	a,a
   06FA B5                 2293 	or	a,l
   06FB 28 05              2294 	jr	Z,00104$
   06FD 2E 00              2295 	ld	l,#0x00
   06FF C3r76s07           2296 	jp	00116$
   0702                    2297 00104$:
                           2298 ;demo.c:199: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2299 	ld	l,7 (ix)
   0705 DD 66 08           2300 	ld	h,8 (ix)
   0708 E5                 2301 	push	hl
   0709 DD 7E 06           2302 	ld	a,6 (ix)
   070C F5                 2303 	push	af
   070D 33                 2304 	inc	sp
   070E CDr00s00           2305 	call	_vdp_set_write_address
   0711 F1                 2306 	pop	af
   0712 33                 2307 	inc	sp
                           2308 ;demo.c:201: for (i = 0; i < 213; i++) {
   0713 0E 00              2309 	ld	c,#0x00
   0715                    2310 00112$:
   0715 79                 2311 	ld	a,c
   0716 D6 D5              2312 	sub	a,#0xD5
   0718 D2r6Bs07           2313 	jp	NC,00115$
                           2314 ;demo.c:202: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2315 	push	bc
   071C 21r48s40           2316 	ld	hl,#_scratch
   071F E5                 2317 	push	hl
   0720 CDr00s00           2318 	call	_block_set_data_ptr
   0723 F1                 2319 	pop	af
   0724 7D                 2320 	ld	a,l
   0725 C1                 2321 	pop	bc
   0726 47                 2322 	ld	b,a
   0727 B7                 2323 	or	a,a
   0728 28 05              2324 	jr	Z,00106$
   072A 2E 00              2325 	ld	l,#0x00
   072C C3r76s07           2326 	jp	00116$
   072F                    2327 00106$:
                           2328 ;demo.c:203: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2329 	ld	hl,#0x0000
   0732 39                 2330 	add	hl,sp
   0733 C5                 2331 	push	bc
   0734 E5                 2332 	push	hl
   0735 CDr00s00           2333 	call	_block_read
   0738 F1                 2334 	pop	af
   0739 7D                 2335 	ld	a,l
   073A C1                 2336 	pop	bc
   073B 47                 2337 	ld	b,a
   073C B7                 2338 	or	a,a
   073D 28 04              2339 	jr	Z,00108$
   073F 2E 00              2340 	ld	l,#0x00
   0741 18 33              2341 	jr	00116$
   0743                    2342 00108$:
                           2343 ;demo.c:205: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2344 	xor	a,a
   0744 B1                 2345 	or	a,c
   0745 20 11              2346 	jr	NZ,00110$
   0747 11r4Fs40           2347 	ld	de,#_scratch + 7
   074A C5                 2348 	push	bc
   074B 3E 79              2349 	ld	a,#0x79
   074D F5                 2350 	push	af
   074E 33                 2351 	inc	sp
   074F D5                 2352 	push	de
   0750 CDr00s00           2353 	call	_vdp_load_screen
   0753 F1                 2354 	pop	af
   0754 33                 2355 	inc	sp
   0755 C1                 2356 	pop	bc
   0756 18 0F              2357 	jr	00114$
   0758                    2358 00110$:
                           2359 ;demo.c:206: else vdp_load_screen(scratch, 128);
   0758 C5                 2360 	push	bc
   0759 3E 80              2361 	ld	a,#0x80
   075B F5                 2362 	push	af
   075C 33                 2363 	inc	sp
   075D 21r48s40           2364 	ld	hl,#_scratch
   0760 E5                 2365 	push	hl
   0761 CDr00s00           2366 	call	_vdp_load_screen
   0764 F1                 2367 	pop	af
   0765 33                 2368 	inc	sp
   0766 C1                 2369 	pop	bc
   0767                    2370 00114$:
                           2371 ;demo.c:201: for (i = 0; i < 213; i++) {
   0767 0C                 2372 	inc	c
   0768 C3r15s07           2373 	jp	00112$
   076B                    2374 00115$:
                           2375 ;demo.c:209: close(&f);
   076B 21 00 00           2376 	ld	hl,#0x0000
   076E 39                 2377 	add	hl,sp
   076F E5                 2378 	push	hl
   0770 CDr00s00           2379 	call	_close
   0773 F1                 2380 	pop	af
                           2381 ;demo.c:211: return 1;
   0774 2E 01              2382 	ld	l,#0x01
   0776                    2383 00116$:
   0776 DD F9              2384 	ld	sp,ix
   0778 DD E1              2385 	pop	ix
   077A C9                 2386 	ret
   077B                    2387 _ge5_load_end::
   077B                    2388 __str_0:
   077B 6C 6F 61 64 69 6E  2389 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2390 	.db 0x00
   078D                    2391 __str_1:
   078D 0D                 2392 	.db 0x0D
   078E 0A                 2393 	.db 0x0A
   078F 00                 2394 	.db 0x00
                           2395 ;demo.c:214: void scratch_clear() {
                           2396 ;	---------------------------------
                           2397 ; Function scratch_clear
                           2398 ; ---------------------------------
   0790                    2399 _scratch_clear_start::
   0790                    2400 _scratch_clear:
                           2401 ;demo.c:215: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2402 	ld	hl,#0x0080
   0793 E5                 2403 	push	hl
   0794 3E 00              2404 	ld	a,#0x00
   0796 F5                 2405 	push	af
   0797 33                 2406 	inc	sp
   0798 21r48s40           2407 	ld	hl,#_scratch
   079B E5                 2408 	push	hl
   079C CDr00s00           2409 	call	_memset
   079F F1                 2410 	pop	af
   07A0 F1                 2411 	pop	af
   07A1 33                 2412 	inc	sp
   07A2 C9                 2413 	ret
   07A3                    2414 _scratch_clear_end::
                           2415 ;demo.c:218: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2416 ;	---------------------------------
                           2417 ; Function pal_load
                           2418 ; ---------------------------------
   07A3                    2419 _pal_load_start::
   07A3                    2420 _pal_load:
   07A3 DD E5              2421 	push	ix
   07A5 DD 21 00 00        2422 	ld	ix,#0
   07A9 DD 39              2423 	add	ix,sp
   07AB 21 D2 FF           2424 	ld	hl,#-46
   07AE 39                 2425 	add	hl,sp
   07AF F9                 2426 	ld	sp,hl
                           2427 ;demo.c:221: if(debugprint == 1) {
   07B0 DD 7E 07           2428 	ld	a,7 (ix)
   07B3 D6 01              2429 	sub	a,#0x01
   07B5 20 06              2430 	jr	NZ,00115$
   07B7 DD 7E 08           2431 	ld	a,8 (ix)
   07BA B7                 2432 	or	a,a
   07BB 28 02              2433 	jr	Z,00116$
   07BD                    2434 00115$:
   07BD 18 1B              2435 	jr	00102$
   07BF                    2436 00116$:
                           2437 ;demo.c:222: puts("loading palfile: ");
   07BF 21r6Ds08           2438 	ld	hl,#__str_2
   07C2 E5                 2439 	push	hl
   07C3 CDr00s00           2440 	call	_puts
   07C6 F1                 2441 	pop	af
                           2442 ;demo.c:223: puts(file_name);
   07C7 DD 6E 04           2443 	ld	l,4 (ix)
   07CA DD 66 05           2444 	ld	h,5 (ix)
   07CD E5                 2445 	push	hl
   07CE CDr00s00           2446 	call	_puts
   07D1 F1                 2447 	pop	af
                           2448 ;demo.c:224: puts("\r\n");
   07D2 21r7Fs08           2449 	ld	hl,#__str_3
   07D5 E5                 2450 	push	hl
   07D6 CDr00s00           2451 	call	_puts
   07D9 F1                 2452 	pop	af
   07DA                    2453 00102$:
                           2454 ;demo.c:227: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2455 	ld	hl,#0x0000
   07DD 39                 2456 	add	hl,sp
   07DE 4D                 2457 	ld	c,l
   07DF 44                 2458 	ld	b,h
   07E0 21 2E 00           2459 	ld	hl,#0x002E
   07E3 E5                 2460 	push	hl
   07E4 3E 00              2461 	ld	a,#0x00
   07E6 F5                 2462 	push	af
   07E7 33                 2463 	inc	sp
   07E8 C5                 2464 	push	bc
   07E9 CDr00s00           2465 	call	_memset
   07EC F1                 2466 	pop	af
   07ED F1                 2467 	pop	af
   07EE 33                 2468 	inc	sp
                           2469 ;demo.c:228: scratch_clear();
   07EF CDr90s07           2470 	call	_scratch_clear
                           2471 ;demo.c:230: f.record_size = ss;
   07F2 21 00 00           2472 	ld	hl,#0x0000
   07F5 39                 2473 	add	hl,sp
   07F6 4D                 2474 	ld	c,l
   07F7 44                 2475 	ld	b,h
   07F8 21 0F 00           2476 	ld	hl,#0x000F
   07FB 09                 2477 	add	hl,bc
   07FC EB                 2478 	ex	de,hl
   07FD DD 7E 06           2479 	ld	a,6 (ix)
   0800 12                 2480 	ld	(de),a
                           2481 ;demo.c:231: f.drive = 0;
   0801 3E 00              2482 	ld	a,#0x00
   0803 02                 2483 	ld	(bc),a
                           2484 ;demo.c:233: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2485 	ld	e,4 (ix)
   0807 DD 56 05           2486 	ld	d,5 (ix)
   080A 03                 2487 	inc	bc
   080B 21 0B 00           2488 	ld	hl,#0x000B
   080E E5                 2489 	push	hl
   080F D5                 2490 	push	de
   0810 C5                 2491 	push	bc
   0811 CDr00s00           2492 	call	_memcpy
   0814 F1                 2493 	pop	af
   0815 F1                 2494 	pop	af
   0816 F1                 2495 	pop	af
                           2496 ;demo.c:235: if (open(&f) != 0) return 0;
   0817 21 00 00           2497 	ld	hl,#0x0000
   081A 39                 2498 	add	hl,sp
   081B E5                 2499 	push	hl
   081C CDr00s00           2500 	call	_open
   081F F1                 2501 	pop	af
   0820 AF                 2502 	xor	a,a
   0821 B5                 2503 	or	a,l
   0822 28 04              2504 	jr	Z,00104$
   0824 2E 00              2505 	ld	l,#0x00
   0826 18 40              2506 	jr	00109$
   0828                    2507 00104$:
                           2508 ;demo.c:236: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21r48s40           2509 	ld	hl,#_scratch
   082B E5                 2510 	push	hl
   082C CDr00s00           2511 	call	_block_set_data_ptr
   082F F1                 2512 	pop	af
   0830 AF                 2513 	xor	a,a
   0831 B5                 2514 	or	a,l
   0832 28 04              2515 	jr	Z,00106$
   0834 2E 00              2516 	ld	l,#0x00
   0836 18 30              2517 	jr	00109$
   0838                    2518 00106$:
                           2519 ;demo.c:237: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2520 	ld	hl,#0x0000
   083B 39                 2521 	add	hl,sp
   083C E5                 2522 	push	hl
   083D CDr00s00           2523 	call	_block_read
   0840 F1                 2524 	pop	af
   0841 AF                 2525 	xor	a,a
   0842 B5                 2526 	or	a,l
   0843 28 04              2527 	jr	Z,00108$
   0845 2E 00              2528 	ld	l,#0x00
   0847 18 1F              2529 	jr	00109$
   0849                    2530 00108$:
                           2531 ;demo.c:239: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2532 	ld	c,6 (ix)
   084C 06 00              2533 	ld	b,#0x00
   084E 11r4Fs40           2534 	ld	de,#_scratch + 7
   0851 C5                 2535 	push	bc
   0852 D5                 2536 	push	de
   0853 21rC8s40           2537 	ld	hl,#_cur_palette
   0856 E5                 2538 	push	hl
   0857 CDr00s00           2539 	call	_memcpy
   085A F1                 2540 	pop	af
   085B F1                 2541 	pop	af
   085C F1                 2542 	pop	af
                           2543 ;demo.c:241: close(&f);
   085D 21 00 00           2544 	ld	hl,#0x0000
   0860 39                 2545 	add	hl,sp
   0861 E5                 2546 	push	hl
   0862 CDr00s00           2547 	call	_close
   0865 F1                 2548 	pop	af
                           2549 ;demo.c:242: return 1;
   0866 2E 01              2550 	ld	l,#0x01
   0868                    2551 00109$:
   0868 DD F9              2552 	ld	sp,ix
   086A DD E1              2553 	pop	ix
   086C C9                 2554 	ret
   086D                    2555 _pal_load_end::
   086D                    2556 __str_2:
   086D 6C 6F 61 64 69 6E  2557 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2558 	.db 0x00
   087F                    2559 __str_3:
   087F 0D                 2560 	.db 0x0D
   0880 0A                 2561 	.db 0x0A
   0881 00                 2562 	.db 0x00
                           2563 ;demo.c:246: void pause() {
                           2564 ;	---------------------------------
                           2565 ; Function pause
                           2566 ; ---------------------------------
   0882                    2567 _pause_start::
   0882                    2568 _pause:
                           2569 ;demo.c:247: uint8_t i,j,k = 0;
                           2570 ;demo.c:248: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2571 	ld	bc,#0x0000
   0885                    2572 00104$:
   0885 78                 2573 	ld	a,b
   0886 D6 FF              2574 	sub	a,#0xFF
   0888 D0                 2575 	ret	NC
                           2576 ;demo.c:249: for (j = 0; j < 255; j++) {
   0889 59                 2577 	ld	e,c
   088A 16 FF              2578 	ld	d,#0xFF
   088C                    2579 00103$:
                           2580 ;demo.c:250: k++;
   088C 1C                 2581 	inc	e
   088D 15                 2582 	dec	d
                           2583 ;demo.c:249: for (j = 0; j < 255; j++) {
   088E AF                 2584 	xor	a,a
   088F B2                 2585 	or	a,d
   0890 20 FA              2586 	jr	NZ,00103$
                           2587 ;demo.c:248: for (i = 0; i < 255; i++) {	
   0892 4B                 2588 	ld	c,e
   0893 04                 2589 	inc	b
   0894 18 EF              2590 	jr	00104$
   0896                    2591 _pause_end::
                           2592 ;demo.c:256: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2593 ;	---------------------------------
                           2594 ; Function raw_load
                           2595 ; ---------------------------------
   0896                    2596 _raw_load_start::
   0896                    2597 _raw_load:
   0896 DD E5              2598 	push	ix
   0898 DD 21 00 00        2599 	ld	ix,#0
   089C DD 39              2600 	add	ix,sp
   089E 21 D2 FF           2601 	ld	hl,#-46
   08A1 39                 2602 	add	hl,sp
   08A2 F9                 2603 	ld	sp,hl
                           2604 ;demo.c:261: if(debugprint == 1) {
   08A3 DD 7E 0A           2605 	ld	a,10 (ix)
   08A6 D6 01              2606 	sub	a,#0x01
   08A8 20 06              2607 	jr	NZ,00120$
   08AA DD 7E 0B           2608 	ld	a,11 (ix)
   08AD B7                 2609 	or	a,a
   08AE 28 02              2610 	jr	Z,00121$
   08B0                    2611 00120$:
   08B0 18 1B              2612 	jr	00102$
   08B2                    2613 00121$:
                           2614 ;demo.c:262: puts("loading rawfile: ");
   08B2 21r84s09           2615 	ld	hl,#__str_4
   08B5 E5                 2616 	push	hl
   08B6 CDr00s00           2617 	call	_puts
   08B9 F1                 2618 	pop	af
                           2619 ;demo.c:263: puts(file_name);
   08BA DD 6E 04           2620 	ld	l,4 (ix)
   08BD DD 66 05           2621 	ld	h,5 (ix)
   08C0 E5                 2622 	push	hl
   08C1 CDr00s00           2623 	call	_puts
   08C4 F1                 2624 	pop	af
                           2625 ;demo.c:264: puts("\r\n");
   08C5 21r96s09           2626 	ld	hl,#__str_5
   08C8 E5                 2627 	push	hl
   08C9 CDr00s00           2628 	call	_puts
   08CC F1                 2629 	pop	af
   08CD                    2630 00102$:
                           2631 ;demo.c:267: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2632 	ld	hl,#0x0000
   08D0 39                 2633 	add	hl,sp
   08D1 4D                 2634 	ld	c,l
   08D2 44                 2635 	ld	b,h
   08D3 21 2E 00           2636 	ld	hl,#0x002E
   08D6 E5                 2637 	push	hl
   08D7 3E 00              2638 	ld	a,#0x00
   08D9 F5                 2639 	push	af
   08DA 33                 2640 	inc	sp
   08DB C5                 2641 	push	bc
   08DC CDr00s00           2642 	call	_memset
   08DF F1                 2643 	pop	af
   08E0 F1                 2644 	pop	af
   08E1 33                 2645 	inc	sp
                           2646 ;demo.c:268: scratch_clear();
   08E2 CDr90s07           2647 	call	_scratch_clear
                           2648 ;demo.c:270: f.record_size = 128;
   08E5 21 00 00           2649 	ld	hl,#0x0000
   08E8 39                 2650 	add	hl,sp
   08E9 4D                 2651 	ld	c,l
   08EA 44                 2652 	ld	b,h
   08EB 21 0F 00           2653 	ld	hl,#0x000F
   08EE 09                 2654 	add	hl,bc
   08EF EB                 2655 	ex	de,hl
   08F0 3E 80              2656 	ld	a,#0x80
   08F2 12                 2657 	ld	(de),a
                           2658 ;demo.c:271: f.drive = 0;
   08F3 3E 00              2659 	ld	a,#0x00
   08F5 02                 2660 	ld	(bc),a
                           2661 ;demo.c:273: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2662 	ld	e,4 (ix)
   08F9 DD 56 05           2663 	ld	d,5 (ix)
   08FC 03                 2664 	inc	bc
   08FD 21 0B 00           2665 	ld	hl,#0x000B
   0900 E5                 2666 	push	hl
   0901 D5                 2667 	push	de
   0902 C5                 2668 	push	bc
   0903 CDr00s00           2669 	call	_memcpy
   0906 F1                 2670 	pop	af
   0907 F1                 2671 	pop	af
   0908 F1                 2672 	pop	af
                           2673 ;demo.c:275: if (open(&f) != 0) return 0;
   0909 21 00 00           2674 	ld	hl,#0x0000
   090C 39                 2675 	add	hl,sp
   090D E5                 2676 	push	hl
   090E CDr00s00           2677 	call	_open
   0911 F1                 2678 	pop	af
   0912 AF                 2679 	xor	a,a
   0913 B5                 2680 	or	a,l
   0914 28 05              2681 	jr	Z,00119$
   0916 2E 00              2682 	ld	l,#0x00
   0918 C3r7Fs09           2683 	jp	00112$
                           2684 ;demo.c:277: while(total < size) {
   091B                    2685 00119$:
   091B 01 00 00           2686 	ld	bc,#0x0000
   091E                    2687 00109$:
   091E 79                 2688 	ld	a,c
   091F DD 96 06           2689 	sub	a,6 (ix)
   0922 78                 2690 	ld	a,b
   0923 DD 9E 07           2691 	sbc	a,7 (ix)
   0926 F2r74s09           2692 	jp	P,00111$
                           2693 ;demo.c:278: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2694 	push	bc
   092A 21r48s40           2695 	ld	hl,#_scratch
   092D E5                 2696 	push	hl
   092E CDr00s00           2697 	call	_block_set_data_ptr
   0931 F1                 2698 	pop	af
   0932 5D                 2699 	ld	e,l
   0933 C1                 2700 	pop	bc
   0934 AF                 2701 	xor	a,a
   0935 B3                 2702 	or	a,e
   0936 28 04              2703 	jr	Z,00106$
   0938 2E 00              2704 	ld	l,#0x00
   093A 18 43              2705 	jr	00112$
   093C                    2706 00106$:
                           2707 ;demo.c:279: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2708 	ld	hl,#0x0000
   093F 39                 2709 	add	hl,sp
   0940 C5                 2710 	push	bc
   0941 E5                 2711 	push	hl
   0942 CDr00s00           2712 	call	_block_read
   0945 F1                 2713 	pop	af
   0946 5D                 2714 	ld	e,l
   0947 C1                 2715 	pop	bc
   0948 AF                 2716 	xor	a,a
   0949 B3                 2717 	or	a,e
   094A 28 04              2718 	jr	Z,00108$
   094C 2E 00              2719 	ld	l,#0x00
   094E 18 2F              2720 	jr	00112$
   0950                    2721 00108$:
                           2722 ;demo.c:281: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2723 	ld	a,8 (ix)
   0953 81                 2724 	add	a,c
   0954 5F                 2725 	ld	e,a
   0955 DD 7E 09           2726 	ld	a,9 (ix)
   0958 88                 2727 	adc	a,b
   0959 57                 2728 	ld	d,a
   095A C5                 2729 	push	bc
   095B 21 80 00           2730 	ld	hl,#0x0080
   095E E5                 2731 	push	hl
   095F 21r48s40           2732 	ld	hl,#_scratch
   0962 E5                 2733 	push	hl
   0963 D5                 2734 	push	de
   0964 CDr00s00           2735 	call	_memcpy
   0967 F1                 2736 	pop	af
   0968 F1                 2737 	pop	af
   0969 F1                 2738 	pop	af
   096A C1                 2739 	pop	bc
                           2740 ;demo.c:283: total+=incr;
   096B 21 80 00           2741 	ld	hl,#0x0080
   096E 09                 2742 	add	hl,bc
   096F 4D                 2743 	ld	c,l
   0970 44                 2744 	ld	b,h
   0971 C3r1Es09           2745 	jp	00109$
   0974                    2746 00111$:
                           2747 ;demo.c:286: close(&f);
   0974 21 00 00           2748 	ld	hl,#0x0000
   0977 39                 2749 	add	hl,sp
   0978 E5                 2750 	push	hl
   0979 CDr00s00           2751 	call	_close
   097C F1                 2752 	pop	af
                           2753 ;demo.c:288: return 1;
   097D 2E 01              2754 	ld	l,#0x01
   097F                    2755 00112$:
   097F DD F9              2756 	ld	sp,ix
   0981 DD E1              2757 	pop	ix
   0983 C9                 2758 	ret
   0984                    2759 _raw_load_end::
   0984                    2760 __str_4:
   0984 6C 6F 61 64 69 6E  2761 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2762 	.db 0x00
   0996                    2763 __str_5:
   0996 0D                 2764 	.db 0x0D
   0997 0A                 2765 	.db 0x0A
   0998 00                 2766 	.db 0x00
                           2767 ;demo.c:291: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2768 ;	---------------------------------
                           2769 ; Function pck_load
                           2770 ; ---------------------------------
   0999                    2771 _pck_load_start::
   0999                    2772 _pck_load:
   0999 DD E5              2773 	push	ix
   099B DD 21 00 00        2774 	ld	ix,#0
   099F DD 39              2775 	add	ix,sp
                           2776 ;demo.c:292: if(debugprint == 1) {
   09A1 DD 7E 0C           2777 	ld	a,12 (ix)
   09A4 D6 01              2778 	sub	a,#0x01
   09A6 20 06              2779 	jr	NZ,00106$
   09A8 DD 7E 0D           2780 	ld	a,13 (ix)
   09AB B7                 2781 	or	a,a
   09AC 28 02              2782 	jr	Z,00107$
   09AE                    2783 00106$:
   09AE 18 1B              2784 	jr	00102$
   09B0                    2785 00107$:
                           2786 ;demo.c:293: puts("loading pckfile: ");
   09B0 21r12s0A           2787 	ld	hl,#__str_6
   09B3 E5                 2788 	push	hl
   09B4 CDr00s00           2789 	call	_puts
   09B7 F1                 2790 	pop	af
                           2791 ;demo.c:294: puts(file_name);
   09B8 DD 6E 04           2792 	ld	l,4 (ix)
   09BB DD 66 05           2793 	ld	h,5 (ix)
   09BE E5                 2794 	push	hl
   09BF CDr00s00           2795 	call	_puts
   09C2 F1                 2796 	pop	af
                           2797 ;demo.c:295: puts("\r\n");
   09C3 21r24s0A           2798 	ld	hl,#__str_7
   09C6 E5                 2799 	push	hl
   09C7 CDr00s00           2800 	call	_puts
   09CA F1                 2801 	pop	af
   09CB                    2802 00102$:
                           2803 ;demo.c:297: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2804 	ld	c,6 (ix)
   09CE DD 46 07           2805 	ld	b,7 (ix)
   09D1 C5                 2806 	push	bc
   09D2 C5                 2807 	push	bc
   09D3 3E 00              2808 	ld	a,#0x00
   09D5 F5                 2809 	push	af
   09D6 33                 2810 	inc	sp
   09D7 21rC8s01           2811 	ld	hl,#_packbuffer
   09DA E5                 2812 	push	hl
   09DB CDr00s00           2813 	call	_memset
   09DE F1                 2814 	pop	af
   09DF F1                 2815 	pop	af
   09E0 33                 2816 	inc	sp
   09E1 C1                 2817 	pop	bc
                           2818 ;demo.c:298: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2819 	ld	hl,#0x0000
   09E5 E5                 2820 	push	hl
   09E6 21rC8s01           2821 	ld	hl,#_packbuffer
   09E9 E5                 2822 	push	hl
   09EA C5                 2823 	push	bc
   09EB DD 6E 04           2824 	ld	l,4 (ix)
   09EE DD 66 05           2825 	ld	h,5 (ix)
   09F1 E5                 2826 	push	hl
   09F2 CDr96s08           2827 	call	_raw_load
   09F5 F1                 2828 	pop	af
   09F6 F1                 2829 	pop	af
   09F7 F1                 2830 	pop	af
   09F8 F1                 2831 	pop	af
                           2832 ;demo.c:299: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2833 	ld	a,10 (ix)
   09FC F5                 2834 	push	af
   09FD 33                 2835 	inc	sp
   09FE DD 6E 08           2836 	ld	l,8 (ix)
   0A01 DD 66 09           2837 	ld	h,9 (ix)
   0A04 E5                 2838 	push	hl
   0A05 21rC8s01           2839 	ld	hl,#_packbuffer
   0A08 E5                 2840 	push	hl
   0A09 CDr00s00           2841 	call	_bitbuster
   0A0C F1                 2842 	pop	af
   0A0D F1                 2843 	pop	af
   0A0E 33                 2844 	inc	sp
   0A0F DD E1              2845 	pop	ix
   0A11 C9                 2846 	ret
   0A12                    2847 _pck_load_end::
   0A12                    2848 __str_6:
   0A12 6C 6F 61 64 69 6E  2849 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2850 	.db 0x00
   0A24                    2851 __str_7:
   0A24 0D                 2852 	.db 0x0D
   0A25 0A                 2853 	.db 0x0A
   0A26 00                 2854 	.db 0x00
                           2855 ;demo.c:302: void fadein() {
                           2856 ;	---------------------------------
                           2857 ; Function fadein
                           2858 ; ---------------------------------
   0A27                    2859 _fadein_start::
   0A27                    2860 _fadein:
   0A27 DD E5              2861 	push	ix
   0A29 DD 21 00 00        2862 	ld	ix,#0
   0A2D DD 39              2863 	add	ix,sp
   0A2F F5                 2864 	push	af
                           2865 ;demo.c:305: if (tick < 8) return;
   0A30 3Ar6As41           2866 	ld	a,(#_tick+0)
   0A33 D6 08              2867 	sub	a,#0x08
   0A35 3Ar6Bs41           2868 	ld	a,(#_tick+1)
   0A38 DE 00              2869 	sbc	a,#0x00
   0A3A F2r40s0A           2870 	jp	P,00102$
   0A3D C3rEEs0A           2871 	jp	00113$
   0A40                    2872 00102$:
                           2873 ;demo.c:307: tick = 0;
   0A40 21r6As41           2874 	ld	hl,#_tick + 0
   0A43 36 00              2875 	ld	(hl), #0x00
   0A45 21r6Bs41           2876 	ld	hl,#_tick + 1
   0A48 36 00              2877 	ld	(hl), #0x00
                           2878 ;demo.c:309: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2879 	ld	c,#0x00
   0A4C                    2880 00109$:
   0A4C 79                 2881 	ld	a,c
   0A4D D6 20              2882 	sub	a,#0x20
   0A4F D2rE6s0A           2883 	jp	NC,00112$
                           2884 ;demo.c:310: uint8_t r = scratch[i] >> 4;
   0A52 3Er48              2885 	ld	a,#<_scratch
   0A54 81                 2886 	add	a,c
   0A55 5F                 2887 	ld	e,a
   0A56 3Es40              2888 	ld	a,#>_scratch
   0A58 CE 00              2889 	adc	a,#0x00
   0A5A 57                 2890 	ld	d,a
   0A5B 1A                 2891 	ld	a,(de)
   0A5C 47                 2892 	ld	b,a
   0A5D 58                 2893 	ld	e,b
   0A5E CB 3B              2894 	srl	e
   0A60 CB 3B              2895 	srl	e
   0A62 CB 3B              2896 	srl	e
   0A64 CB 3B              2897 	srl	e
                           2898 ;demo.c:311: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2899 	ld	a,b
   0A67 E6 0F              2900 	and	a,#0x0F
   0A69 DD 77 FF           2901 	ld	-1 (ix),a
                           2902 ;demo.c:312: uint8_t g = scratch[i+1];
   0A6C 51                 2903 	ld	d,c
   0A6D 14                 2904 	inc	d
   0A6E 3Er48              2905 	ld	a,#<_scratch
   0A70 82                 2906 	add	a,d
   0A71 6F                 2907 	ld	l,a
   0A72 3Es40              2908 	ld	a,#>_scratch
   0A74 CE 00              2909 	adc	a,#0x00
   0A76 67                 2910 	ld	h,a
   0A77 56                 2911 	ld	d,(hl)
   0A78 DD 72 FE           2912 	ld	-2 (ix),d
                           2913 ;demo.c:314: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3ErC8              2914 	ld	a,#<_cur_palette
   0A7D 81                 2915 	add	a,c
   0A7E 6F                 2916 	ld	l,a
   0A7F 3Es40              2917 	ld	a,#>_cur_palette
   0A81 CE 00              2918 	adc	a,#0x00
   0A83 67                 2919 	ld	h,a
   0A84 56                 2920 	ld	d,(hl)
   0A85 CB 3A              2921 	srl	d
   0A87 CB 3A              2922 	srl	d
   0A89 CB 3A              2923 	srl	d
   0A8B CB 3A              2924 	srl	d
   0A8D 7B                 2925 	ld	a,e
   0A8E 92                 2926 	sub	a,d
   0A8F 30 01              2927 	jr	NC,00104$
   0A91 1C                 2928 	inc	e
   0A92                    2929 00104$:
                           2930 ;demo.c:315: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3ErC8              2931 	ld	a,#<_cur_palette
   0A94 81                 2932 	add	a,c
   0A95 6F                 2933 	ld	l,a
   0A96 3Es40              2934 	ld	a,#>_cur_palette
   0A98 CE 00              2935 	adc	a,#0x00
   0A9A 67                 2936 	ld	h,a
   0A9B 7E                 2937 	ld	a,(hl)
   0A9C E6 0F              2938 	and	a,#0x0F
   0A9E 47                 2939 	ld	b,a
   0A9F DD 7E FF           2940 	ld	a,-1 (ix)
   0AA2 90                 2941 	sub	a,b
   0AA3 30 03              2942 	jr	NC,00106$
   0AA5 DD 34 FF           2943 	inc	-1 (ix)
   0AA8                    2944 00106$:
                           2945 ;demo.c:317: scratch[i] = (r << 4) | b;
   0AA8 3Er48              2946 	ld	a,#<_scratch
   0AAA 81                 2947 	add	a,c
   0AAB 47                 2948 	ld	b,a
   0AAC 3Es40              2949 	ld	a,#>_scratch
   0AAE CE 00              2950 	adc	a,#0x00
   0AB0 57                 2951 	ld	d,a
   0AB1 7B                 2952 	ld	a,e
   0AB2 07                 2953 	rlca
   0AB3 07                 2954 	rlca
   0AB4 07                 2955 	rlca
   0AB5 07                 2956 	rlca
   0AB6 E6 F0              2957 	and	a,#0xF0
   0AB8 DD B6 FF           2958 	or	a,-1 (ix)
   0ABB 68                 2959 	ld	l,b
   0ABC 62                 2960 	ld	h,d
   0ABD 77                 2961 	ld	(hl),a
                           2962 ;demo.c:318: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2963 	ld	b,c
   0ABF 04                 2964 	inc	b
   0AC0 3ErC8              2965 	ld	a,#<_cur_palette
   0AC2 80                 2966 	add	a,b
   0AC3 5F                 2967 	ld	e,a
   0AC4 3Es40              2968 	ld	a,#>_cur_palette
   0AC6 CE 00              2969 	adc	a,#0x00
   0AC8 57                 2970 	ld	d,a
   0AC9 1A                 2971 	ld	a,(de)
   0ACA 5F                 2972 	ld	e,a
   0ACB DD 7E FE           2973 	ld	a,-2 (ix)
   0ACE 93                 2974 	sub	a,e
   0ACF 30 10              2975 	jr	NC,00111$
   0AD1 3Er48              2976 	ld	a,#<_scratch
   0AD3 80                 2977 	add	a,b
   0AD4 47                 2978 	ld	b,a
   0AD5 3Es40              2979 	ld	a,#>_scratch
   0AD7 CE 00              2980 	adc	a,#0x00
   0AD9 5F                 2981 	ld	e,a
   0ADA 68                 2982 	ld	l,b
   0ADB 67                 2983 	ld	h,a
   0ADC 7E                 2984 	ld	a,(hl)
   0ADD 3C                 2985 	inc	a
   0ADE 68                 2986 	ld	l,b
   0ADF 63                 2987 	ld	h,e
   0AE0 77                 2988 	ld	(hl),a
   0AE1                    2989 00111$:
                           2990 ;demo.c:309: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2991 	inc	c
   0AE2 0C                 2992 	inc	c
   0AE3 C3r4Cs0A           2993 	jp	00109$
   0AE6                    2994 00112$:
                           2995 ;demo.c:322: vdp_load_palette(scratch);
   0AE6 21r48s40           2996 	ld	hl,#_scratch
   0AE9 E5                 2997 	push	hl
   0AEA CDr00s00           2998 	call	_vdp_load_palette
   0AED F1                 2999 	pop	af
   0AEE                    3000 00113$:
   0AEE DD F9              3001 	ld	sp,ix
   0AF0 DD E1              3002 	pop	ix
   0AF2 C9                 3003 	ret
   0AF3                    3004 _fadein_end::
                           3005 ;demo.c:334: void do_ymmm() {
                           3006 ;	---------------------------------
                           3007 ; Function do_ymmm
                           3008 ; ---------------------------------
   0AF3                    3009 _do_ymmm_start::
   0AF3                    3010 _do_ymmm:
   0AF3 DD E5              3011 	push	ix
   0AF5 DD 21 00 00        3012 	ld	ix,#0
   0AF9 DD 39              3013 	add	ix,sp
   0AFB F5                 3014 	push	af
                           3015 ;demo.c:338: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              3016 	ld	a,#0x20
   0AFE FD 21r6As41        3017 	ld	iy,#_tick
   0B02 FD 96 00           3018 	sub	a,0 (iy)
   0B05 3E 00              3019 	ld	a,#0x00
   0B07 FD 21r6As41        3020 	ld	iy,#_tick
   0B0B FD 9E 01           3021 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           3022 	jp	P,00102$
   0B11 21r6As41           3023 	ld	hl,#_tick + 0
   0B14 36 00              3024 	ld	(hl), #0x00
   0B16 21r6Bs41           3025 	ld	hl,#_tick + 1
   0B19 36 00              3026 	ld	(hl), #0x00
   0B1B FD 21r85s41        3027 	ld	iy,#_flipper
   0B1F FD 34 00           3028 	inc	0 (iy)
   0B22 20 07              3029 	jr	NZ,00115$
   0B24 FD 21r85s41        3030 	ld	iy,#_flipper
   0B28 FD 34 01           3031 	inc	1 (iy)
   0B2B                    3032 00115$:
   0B2B                    3033 00102$:
                           3034 ;demo.c:339: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              3035 	ld	a,#0x0A
   0B2D FD 21r85s41        3036 	ld	iy,#_flipper
   0B31 FD 96 00           3037 	sub	a,0 (iy)
   0B34 3E 00              3038 	ld	a,#0x00
   0B36 FD 21r85s41        3039 	ld	iy,#_flipper
   0B3A FD 9E 01           3040 	sbc	a,1 (iy)
   0B3D F2r4As0B           3041 	jp	P,00104$
   0B40 21r85s41           3042 	ld	hl,#_flipper + 0
   0B43 36 00              3043 	ld	(hl), #0x00
   0B45 21r86s41           3044 	ld	hl,#_flipper + 1
   0B48 36 00              3045 	ld	(hl), #0x00
   0B4A                    3046 00104$:
                           3047 ;demo.c:341: ymmmf++;
   0B4A FD 21r87s41        3048 	ld	iy,#_ymmmf
   0B4E FD 34 00           3049 	inc	0 (iy)
   0B51 20 07              3050 	jr	NZ,00116$
   0B53 FD 21r87s41        3051 	ld	iy,#_ymmmf
   0B57 FD 34 01           3052 	inc	1 (iy)
   0B5A                    3053 00116$:
                           3054 ;demo.c:342: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r83s41           3055 	ld	hl,#_yofff + 0
   0B5D 36 00              3056 	ld	(hl), #0x00
   0B5F                    3057 00105$:
   0B5F 21r83s41           3058 	ld	hl,#_yofff + 0
   0B62 4E                 3059 	ld	c,(hl)
   0B63 06 00              3060 	ld	b,#0x00
   0B65 79                 3061 	ld	a,c
   0B66 D6 D2              3062 	sub	a,#0xD2
   0B68 78                 3063 	ld	a,b
   0B69 DE 00              3064 	sbc	a,#0x00
   0B6B F2rE4s0B           3065 	jp	P,00109$
                           3066 ;demo.c:343: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r87s41           3067 	ld	hl,#_ymmmf
   0B71 79                 3068 	ld	a,c
   0B72 86                 3069 	add	a,(hl)
   0B73 5F                 3070 	ld	e,a
   0B74 78                 3071 	ld	a,b
   0B75 23                 3072 	inc	hl
   0B76 8E                 3073 	adc	a,(hl)
   0B77 16 00              3074 	ld	d,#0x00
   0B79 CB 23              3075 	sla	e
   0B7B CB 12              3076 	rl	d
   0B7D 21r2Cs00           3077 	ld	hl,#_sintabx
   0B80 19                 3078 	add	hl,de
   0B81 5E                 3079 	ld	e,(hl)
   0B82 23                 3080 	inc	hl
   0B83 56                 3081 	ld	d,(hl)
   0B84 DD 73 FE           3082 	ld	-2 (ix),e
   0B87 DD 72 FF           3083 	ld	-1 (ix),d
                           3084 ;demo.c:346: cmd.source_x = 0;
   0B8A 21r6Cs41           3085 	ld	hl,#_cmd
   0B8D 36 00              3086 	ld	(hl),#0x00
   0B8F 23                 3087 	inc	hl
   0B90 36 00              3088 	ld	(hl),#0x00
                           3089 ;demo.c:347: cmd.source_y = 0+yofff;
   0B92 11r6Es41           3090 	ld	de,#_cmd + 2
   0B95 EB                 3091 	ex	de,hl
   0B96 71                 3092 	ld	(hl),c
   0B97 23                 3093 	inc	hl
   0B98 70                 3094 	ld	(hl),b
                           3095 ;demo.c:348: cmd.dest_x = xo;
   0B99 11r70s41           3096 	ld	de,#_cmd + 4
   0B9C EB                 3097 	ex	de,hl
   0B9D DD 7E FE           3098 	ld	a,-2 (ix)
   0BA0 77                 3099 	ld	(hl),a
   0BA1 23                 3100 	inc	hl
   0BA2 DD 7E FF           3101 	ld	a,-1 (ix)
   0BA5 77                 3102 	ld	(hl),a
                           3103 ;demo.c:349: cmd.dest_y = 3+yofff;
   0BA6 11r72s41           3104 	ld	de,#_cmd + 6
   0BA9 03                 3105 	inc	bc
   0BAA 03                 3106 	inc	bc
   0BAB 03                 3107 	inc	bc
   0BAC 6B                 3108 	ld	l,e
   0BAD 62                 3109 	ld	h,d
   0BAE 71                 3110 	ld	(hl),c
   0BAF 23                 3111 	inc	hl
   0BB0 70                 3112 	ld	(hl),b
                           3113 ;demo.c:350: cmd.size_x = 256;
   0BB1 21r74s41           3114 	ld	hl, #_cmd + 8
   0BB4 36 00              3115 	ld	(hl),#0x00
   0BB6 23                 3116 	inc	hl
   0BB7 36 01              3117 	ld	(hl),#0x01
                           3118 ;demo.c:351: cmd.size_y = 1;
   0BB9 21r76s41           3119 	ld	hl, #_cmd + 10
   0BBC 36 01              3120 	ld	(hl),#0x01
   0BBE 23                 3121 	inc	hl
   0BBF 36 00              3122 	ld	(hl),#0x00
                           3123 ;demo.c:352: cmd.data = 0;
                           3124 ;demo.c:353: cmd.argument = 0;
   0BC1 3E 00              3125 	ld	a,#0x00
   0BC3 32r78s41           3126 	ld	(#_cmd + 12),a
   0BC6 32r79s41           3127 	ld	(#_cmd + 13),a
                           3128 ;demo.c:354: cmd.command = 0xD0;
   0BC9 3E D0              3129 	ld	a,#0xD0
   0BCB 32r7As41           3130 	ld	(#_cmd + 14),a
                           3131 ;demo.c:357: vdp_copier(&cmd);
   0BCE 21r6Cs41           3132 	ld	hl,#_cmd
   0BD1 E5                 3133 	push	hl
   0BD2 CDr00s00           3134 	call	_vdp_copier
   0BD5 F1                 3135 	pop	af
                           3136 ;demo.c:342: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r83s41           3137 	ld	hl,#_yofff + 0
   0BD9 4E                 3138 	ld	c,(hl)
   0BDA 21r83s41           3139 	ld	hl,#_yofff
   0BDD 79                 3140 	ld	a,c
   0BDE C6 02              3141 	add	a,#0x02
   0BE0 77                 3142 	ld	(hl),a
   0BE1 C3r5Fs0B           3143 	jp	00105$
   0BE4                    3144 00109$:
   0BE4 DD F9              3145 	ld	sp,ix
   0BE6 DD E1              3146 	pop	ix
   0BE8 C9                 3147 	ret
   0BE9                    3148 _do_ymmm_end::
                           3149 ;demo.c:374: void do_blocks() {
                           3150 ;	---------------------------------
                           3151 ; Function do_blocks
                           3152 ; ---------------------------------
   0BE9                    3153 _do_blocks_start::
   0BE9                    3154 _do_blocks:
   0BE9 DD E5              3155 	push	ix
   0BEB DD 21 00 00        3156 	ld	ix,#0
   0BEF DD 39              3157 	add	ix,sp
   0BF1 21 FA FF           3158 	ld	hl,#-6
   0BF4 39                 3159 	add	hl,sp
   0BF5 F9                 3160 	ld	sp,hl
                           3161 ;demo.c:376: int ys = 0;
   0BF6 DD 36 FC 00        3162 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3163 	ld	-3 (ix),#0x00
                           3164 ;demo.c:377: int ye = 0;
   0BFE DD 36 FA 00        3165 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3166 	ld	-5 (ix),#0x00
                           3167 ;demo.c:379: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3168 	ld	hl,#0x0017
   0C09 E5                 3169 	push	hl
   0C0A CDr00s00           3170 	call	_vdp_register
   0C0D F1                 3171 	pop	af
                           3172 ;demo.c:381: if (block_init == 0) {
   0C0E AF                 3173 	xor	a,a
   0C0F FD 21r89s41        3174 	ld	iy,#_block_init
   0C13 FD B6 00           3175 	or	a,0 (iy)
   0C16 C2r7Es0C           3176 	jp	NZ,00108$
                           3177 ;demo.c:383: vdp_set_screen5();
   0C19 CDr00s00           3178 	call	_vdp_set_screen5
                           3179 ;demo.c:385: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3180 	ld	hl,#0x5F02
   0C1F E5                 3181 	push	hl
   0C20 CDr00s00           3182 	call	_vdp_register
   0C23 F1                 3183 	pop	af
                           3184 ;demo.c:387: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3185 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3186 	ld	-1 (ix),#0x00
   0C2C                    3187 00110$:
   0C2C DD 7E FE           3188 	ld	a,-2 (ix)
   0C2F D6 10              3189 	sub	a,#0x10
   0C31 DD 7E FF           3190 	ld	a,-1 (ix)
   0C34 DE 00              3191 	sbc	a,#0x00
   0C36 F2r6Es0C           3192 	jp	P,00113$
   0C39 DD 4E FE           3193 	ld	c,-2 (ix)
   0C3C DD 46 FF           3194 	ld	b,-1 (ix)
   0C3F CB 21              3195 	sla	c
   0C41 CB 10              3196 	rl	b
   0C43 21r92s41           3197 	ld	hl,#_btab
   0C46 09                 3198 	add	hl,bc
   0C47 4D                 3199 	ld	c,l
   0C48 44                 3200 	ld	b,h
   0C49 DD 5E FE           3201 	ld	e,-2 (ix)
   0C4C DD 56 FF           3202 	ld	d,-1 (ix)
   0C4F CB 23              3203 	sla	e
   0C51 CB 12              3204 	rl	d
   0C53 CB 23              3205 	sla	e
   0C55 CB 12              3206 	rl	d
   0C57 CB 23              3207 	sla	e
   0C59 CB 12              3208 	rl	d
   0C5B CB 23              3209 	sla	e
   0C5D CB 12              3210 	rl	d
   0C5F 69                 3211 	ld	l,c
   0C60 60                 3212 	ld	h,b
   0C61 73                 3213 	ld	(hl),e
   0C62 23                 3214 	inc	hl
   0C63 72                 3215 	ld	(hl),d
   0C64 DD 34 FE           3216 	inc	-2 (ix)
   0C67 20 03              3217 	jr	NZ,00139$
   0C69 DD 34 FF           3218 	inc	-1 (ix)
   0C6C                    3219 00139$:
   0C6C 18 BE              3220 	jr	00110$
   0C6E                    3221 00113$:
                           3222 ;demo.c:388: vdp_load_palette(block_palette);
   0C6E 21rE8s40           3223 	ld	hl,#_block_palette
   0C71 E5                 3224 	push	hl
   0C72 CDr00s00           3225 	call	_vdp_load_palette
   0C75 F1                 3226 	pop	af
                           3227 ;demo.c:390: block_init = 1;
   0C76 21r89s41           3228 	ld	hl,#_block_init + 0
   0C79 36 01              3229 	ld	(hl), #0x01
   0C7B C3r07s0E           3230 	jp	00122$
   0C7E                    3231 00108$:
                           3232 ;demo.c:394: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3ArB2s41           3233 	ld	a,(#_flof+0)
   0C81 FD 21rB2s41        3234 	ld	iy,#_flof
   0C85 FD B6 01           3235 	or	a,1 (iy)
   0C88 20 10              3236 	jr	NZ,00102$
   0C8A DD 36 FC 00        3237 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3238 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3239 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3240 	ld	-5 (ix),#0x00
   0C9A                    3241 00102$:
                           3242 ;demo.c:395: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3ArB2s41           3243 	ld	a,(#_flof+0)
   0C9D D6 01              3244 	sub	a,#0x01
   0C9F 20 06              3245 	jr	NZ,00140$
   0CA1 3ArB3s41           3246 	ld	a,(#_flof+1)
   0CA4 B7                 3247 	or	a,a
   0CA5 28 02              3248 	jr	Z,00141$
   0CA7                    3249 00140$:
   0CA7 18 10              3250 	jr	00104$
   0CA9                    3251 00141$:
   0CA9 DD 36 FC 08        3252 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3253 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3254 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3255 	ld	-5 (ix),#0x00
   0CB9                    3256 00104$:
                           3257 ;demo.c:397: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r90s41        3258 	ld	iy,#_bty
   0CBD FD 36 00 03        3259 	ld	0 (iy),#0x03
   0CC1 FD 21r90s41        3260 	ld	iy,#_bty
   0CC5 FD 36 01 00        3261 	ld	1 (iy),#0x00
   0CC9                    3262 00118$:
   0CC9 3Ar90s41           3263 	ld	a,(#_bty+0)
   0CCC D6 0B              3264 	sub	a,#0x0B
   0CCE 3Ar91s41           3265 	ld	a,(#_bty+1)
   0CD1 DE 00              3266 	sbc	a,#0x00
   0CD3 F2rDEs0D           3267 	jp	P,00121$
                           3268 ;demo.c:398: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3269 	ld	a,-4 (ix)
   0CD9 FD 21r8Es41        3270 	ld	iy,#_btx
   0CDD FD 77 00           3271 	ld	0 (iy),a
   0CE0 DD 7E FD           3272 	ld	a,-3 (ix)
   0CE3 FD 21r8Es41        3273 	ld	iy,#_btx
   0CE7 FD 77 01           3274 	ld	1 (iy),a
   0CEA                    3275 00114$:
   0CEA 3Ar8Es41           3276 	ld	a,(#_btx+0)
   0CED DD 96 FA           3277 	sub	a,-6 (ix)
   0CF0 3Ar8Fs41           3278 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3279 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3280 	jp	P,00120$
                           3281 ;demo.c:399: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3282 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3283 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3284 	and	a,0 (iy)
   0D03 21r00s00           3285 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3286 	or	a,(hl)
   0D07 4F                 3287 	ld	c,a
   0D08 CB 39              3288 	srl	c
   0D0A 21r8As41           3289 	ld	hl,#_bsx + 0
   0D0D 71                 3290 	ld	(hl), c
   0D0E 21r8Bs41           3291 	ld	hl,#_bsx + 1
   0D11 36 00              3292 	ld	(hl), #0x00
                           3293 ;demo.c:400: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3294 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r8Cs41           3295 	ld	hl,#_bsy + 0
   0D19 77                 3296 	ld	(hl), a
   0D1A 21r8Ds41           3297 	ld	hl,#_bsy + 1
   0D1D 36 00              3298 	ld	(hl), #0x00
                           3299 ;demo.c:401: cmd.source_x = btab[bsx];
   0D1F 21r8As41           3300 	ld	hl,#_bsx + 0
   0D22 4E                 3301 	ld	c,(hl)
   0D23 21r8Bs41           3302 	ld	hl,#_bsx + 1
   0D26 46                 3303 	ld	b,(hl)
   0D27 CB 21              3304 	sla	c
   0D29 CB 10              3305 	rl	b
   0D2B 21r92s41           3306 	ld	hl,#_btab
   0D2E 09                 3307 	add	hl,bc
   0D2F 4E                 3308 	ld	c,(hl)
   0D30 23                 3309 	inc	hl
   0D31 46                 3310 	ld	b,(hl)
   0D32 21r6Cs41           3311 	ld	hl,#_cmd
   0D35 71                 3312 	ld	(hl),c
   0D36 23                 3313 	inc	hl
   0D37 70                 3314 	ld	(hl),b
                           3315 ;demo.c:402: cmd.source_y = 768+btab[bsy];
   0D38 01r6Es41           3316 	ld	bc,#_cmd + 2
   0D3B 21r8Cs41           3317 	ld	hl,#_bsy + 0
   0D3E 5E                 3318 	ld	e,(hl)
   0D3F 21r8Ds41           3319 	ld	hl,#_bsy + 1
   0D42 56                 3320 	ld	d,(hl)
   0D43 CB 23              3321 	sla	e
   0D45 CB 12              3322 	rl	d
   0D47 21r92s41           3323 	ld	hl,#_btab
   0D4A 19                 3324 	add	hl,de
   0D4B 5E                 3325 	ld	e,(hl)
   0D4C 23                 3326 	inc	hl
   0D4D 56                 3327 	ld	d,(hl)
   0D4E 21 00 03           3328 	ld	hl,#0x0300
   0D51 19                 3329 	add	hl,de
   0D52 EB                 3330 	ex	de,hl
   0D53 69                 3331 	ld	l,c
   0D54 60                 3332 	ld	h,b
   0D55 73                 3333 	ld	(hl),e
   0D56 23                 3334 	inc	hl
   0D57 72                 3335 	ld	(hl),d
                           3336 ;demo.c:403: cmd.dest_x = btab[btx];
   0D58 01r70s41           3337 	ld	bc,#_cmd + 4
   0D5B 21r8Es41           3338 	ld	hl,#_btx + 0
   0D5E 5E                 3339 	ld	e,(hl)
   0D5F 21r8Fs41           3340 	ld	hl,#_btx + 1
   0D62 56                 3341 	ld	d,(hl)
   0D63 CB 23              3342 	sla	e
   0D65 CB 12              3343 	rl	d
   0D67 21r92s41           3344 	ld	hl,#_btab
   0D6A 19                 3345 	add	hl,de
   0D6B 5E                 3346 	ld	e,(hl)
   0D6C 23                 3347 	inc	hl
   0D6D 56                 3348 	ld	d,(hl)
   0D6E 69                 3349 	ld	l,c
   0D6F 60                 3350 	ld	h,b
   0D70 73                 3351 	ld	(hl),e
   0D71 23                 3352 	inc	hl
   0D72 72                 3353 	ld	(hl),d
                           3354 ;demo.c:404: cmd.dest_y = 512+btab[bty];
   0D73 01r72s41           3355 	ld	bc,#_cmd + 6
   0D76 21r90s41           3356 	ld	hl,#_bty + 0
   0D79 5E                 3357 	ld	e,(hl)
   0D7A 21r91s41           3358 	ld	hl,#_bty + 1
   0D7D 56                 3359 	ld	d,(hl)
   0D7E CB 23              3360 	sla	e
   0D80 CB 12              3361 	rl	d
   0D82 21r92s41           3362 	ld	hl,#_btab
   0D85 19                 3363 	add	hl,de
   0D86 5E                 3364 	ld	e,(hl)
   0D87 23                 3365 	inc	hl
   0D88 56                 3366 	ld	d,(hl)
   0D89 21 00 02           3367 	ld	hl,#0x0200
   0D8C 19                 3368 	add	hl,de
   0D8D EB                 3369 	ex	de,hl
   0D8E 69                 3370 	ld	l,c
   0D8F 60                 3371 	ld	h,b
   0D90 73                 3372 	ld	(hl),e
   0D91 23                 3373 	inc	hl
   0D92 72                 3374 	ld	(hl),d
                           3375 ;demo.c:405: cmd.size_x = 16;
   0D93 21r74s41           3376 	ld	hl, #_cmd + 8
   0D96 36 10              3377 	ld	(hl),#0x10
   0D98 23                 3378 	inc	hl
   0D99 36 00              3379 	ld	(hl),#0x00
                           3380 ;demo.c:406: cmd.size_y = 16;
   0D9B 21r76s41           3381 	ld	hl, #_cmd + 10
   0D9E 36 10              3382 	ld	(hl),#0x10
   0DA0 23                 3383 	inc	hl
   0DA1 36 00              3384 	ld	(hl),#0x00
                           3385 ;demo.c:407: cmd.data = 0;
                           3386 ;demo.c:408: cmd.argument = 0x00;
   0DA3 3E 00              3387 	ld	a,#0x00
   0DA5 32r78s41           3388 	ld	(#_cmd + 12),a
   0DA8 32r79s41           3389 	ld	(#_cmd + 13),a
                           3390 ;demo.c:409: cmd.command = 0xD0;
   0DAB 3E D0              3391 	ld	a,#0xD0
   0DAD 32r7As41           3392 	ld	(#_cmd + 14),a
                           3393 ;demo.c:410: vdp_copier(&cmd);
   0DB0 21r6Cs41           3394 	ld	hl,#_cmd
   0DB3 E5                 3395 	push	hl
   0DB4 CDr00s00           3396 	call	_vdp_copier
   0DB7 F1                 3397 	pop	af
                           3398 ;demo.c:398: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r8Es41        3399 	ld	iy,#_btx
   0DBC FD 34 00           3400 	inc	0 (iy)
   0DBF 20 07              3401 	jr	NZ,00150$
   0DC1 FD 21r8Es41        3402 	ld	iy,#_btx
   0DC5 FD 34 01           3403 	inc	1 (iy)
   0DC8                    3404 00150$:
   0DC8 C3rEAs0C           3405 	jp	00114$
   0DCB                    3406 00120$:
                           3407 ;demo.c:397: for(bty=3;bty<11;bty++) {
   0DCB FD 21r90s41        3408 	ld	iy,#_bty
   0DCF FD 34 00           3409 	inc	0 (iy)
   0DD2 20 07              3410 	jr	NZ,00151$
   0DD4 FD 21r90s41        3411 	ld	iy,#_bty
   0DD8 FD 34 01           3412 	inc	1 (iy)
   0DDB                    3413 00151$:
   0DDB C3rC9s0C           3414 	jp	00118$
   0DDE                    3415 00121$:
                           3416 ;demo.c:414: flof++;
   0DDE FD 21rB2s41        3417 	ld	iy,#_flof
   0DE2 FD 34 00           3418 	inc	0 (iy)
   0DE5 20 07              3419 	jr	NZ,00152$
   0DE7 FD 21rB2s41        3420 	ld	iy,#_flof
   0DEB FD 34 01           3421 	inc	1 (iy)
   0DEE                    3422 00152$:
                           3423 ;demo.c:415: if (flof == 2) flof = 0;
   0DEE 3ArB2s41           3424 	ld	a,(#_flof+0)
   0DF1 D6 02              3425 	sub	a,#0x02
   0DF3 20 06              3426 	jr	NZ,00153$
   0DF5 3ArB3s41           3427 	ld	a,(#_flof+1)
   0DF8 B7                 3428 	or	a,a
   0DF9 28 02              3429 	jr	Z,00154$
   0DFB                    3430 00153$:
   0DFB 18 0A              3431 	jr	00122$
   0DFD                    3432 00154$:
   0DFD 21rB2s41           3433 	ld	hl,#_flof + 0
   0E00 36 00              3434 	ld	(hl), #0x00
   0E02 21rB3s41           3435 	ld	hl,#_flof + 1
   0E05 36 00              3436 	ld	(hl), #0x00
   0E07                    3437 00122$:
   0E07 DD F9              3438 	ld	sp,ix
   0E09 DD E1              3439 	pop	ix
   0E0B C9                 3440 	ret
   0E0C                    3441 _do_blocks_end::
                           3442 ;demo.c:423: void raster_effu() {
                           3443 ;	---------------------------------
                           3444 ; Function raster_effu
                           3445 ; ---------------------------------
   0E0C                    3446 _raster_effu_start::
   0E0C                    3447 _raster_effu:
                           3448 ;demo.c:424: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3449 	ld	hl,#0x0017
   0E0F E5                 3450 	push	hl
   0E10 CDr00s00           3451 	call	_vdp_register
   0E13 F1                 3452 	pop	af
                           3453 ;demo.c:425: waitVB();
   0E14 76                 3454 		halt 
                           3455 ;demo.c:427: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3456 	ld	hl,#0x4001
   0E18 E5                 3457 	push	hl
   0E19 CDr00s00           3458 	call	_vdp_register
                           3459 ;demo.c:429: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3460 	ld	a,#0x28
   0E1E 32rB4s41           3461 	ld	(#_linenum + 0),a
   0E21 F1                 3462 	pop	af
   0E22 FD 21rB4s41        3463 	ld	iy,#_linenum
   0E26 FD 36 01 00        3464 	ld	1 (iy),#0x00
   0E2A                    3465 00101$:
   0E2A 3ArB4s41           3466 	ld	a,(#_linenum+0)
   0E2D D6 D4              3467 	sub	a,#0xD4
   0E2F 3ArB5s41           3468 	ld	a,(#_linenum+1)
   0E32 DE 00              3469 	sbc	a,#0x00
   0E34 F2r65s0E           3470 	jp	P,00104$
                           3471 ;demo.c:430: vdp_register(19,linenum); // interrupt on line
   0E37 3ArB4s41           3472 	ld	a,(#_linenum+0)
   0E3A F5                 3473 	push	af
   0E3B 33                 3474 	inc	sp
   0E3C 3E 13              3475 	ld	a,#0x13
   0E3E F5                 3476 	push	af
   0E3F 33                 3477 	inc	sp
   0E40 CDr00s00           3478 	call	_vdp_register
   0E43 F1                 3479 	pop	af
                           3480 ;demo.c:431: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3481 	ld	hl,#0x1600
   0E47 E5                 3482 	push	hl
   0E48 CDr00s00           3483 	call	_vdp_register
   0E4B F1                 3484 	pop	af
                           3485 ;demo.c:433: waitVB();
   0E4C 76                 3486 		halt 
                           3487 ;demo.c:429: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21rB4s41           3488 	ld	hl,#_linenum
   0E50 7E                 3489 	ld	a,(hl)
   0E51 C6 04              3490 	add	a,#0x04
   0E53 23                 3491 	inc	hl
   0E54 2B                 3492 	dec	hl
   0E55 C5                 3493 	push	bc
   0E56 4F                 3494 	ld	c, a
   0E57 23                 3495 	inc	hl
   0E58 7E                 3496 	ld	a, (hl)
   0E59 47                 3497 	ld	b, a
   0E5A 79                 3498 	ld	a, c
   0E5B 2B                 3499 	dec	hl
   0E5C 77                 3500 	ld	(hl), a
   0E5D 78                 3501 	ld	a, b
   0E5E C1                 3502 	pop	bc
   0E5F CE 00              3503 	adc	a,#0x00
   0E61 23                 3504 	inc	hl
   0E62 77                 3505 	ld	(hl),a
   0E63 18 C5              3506 	jr	00101$
   0E65                    3507 00104$:
                           3508 ;demo.c:436: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3509 	ld	hl,#0x0017
   0E68 E5                 3510 	push	hl
   0E69 CDr00s00           3511 	call	_vdp_register
   0E6C F1                 3512 	pop	af
                           3513 ;demo.c:450: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3514 	ld	hl,#0x0600
   0E70 E5                 3515 	push	hl
   0E71 CDr00s00           3516 	call	_vdp_register
   0E74 F1                 3517 	pop	af
                           3518 ;demo.c:451: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3519 	ld	hl,#0x6001
   0E78 E5                 3520 	push	hl
   0E79 CDr00s00           3521 	call	_vdp_register
   0E7C F1                 3522 	pop	af
   0E7D C9                 3523 	ret
   0E7E                    3524 _raster_effu_end::
                           3525 ;demo.c:482: void do_letter(char cc) {
                           3526 ;	---------------------------------
                           3527 ; Function do_letter
                           3528 ; ---------------------------------
   0E7E                    3529 _do_letter_start::
   0E7E                    3530 _do_letter:
   0E7E DD E5              3531 	push	ix
   0E80 DD 21 00 00        3532 	ld	ix,#0
   0E84 DD 39              3533 	add	ix,sp
   0E86 F5                 3534 	push	af
                           3535 ;demo.c:483: int cidx = cc - 65;
   0E87 DD 4E 04           3536 	ld	c,4 (ix)
   0E8A DD 7E 04           3537 	ld	a,4 (ix)
   0E8D 17                 3538 	rla	
   0E8E 9F                 3539 	sbc	a,a
   0E8F 47                 3540 	ld	b,a
   0E90 79                 3541 	ld	a,c
   0E91 C6 BF              3542 	add	a,#0xBF
   0E93 DD 77 FE           3543 	ld	-2 (ix),a
   0E96 78                 3544 	ld	a,b
   0E97 CE FF              3545 	adc	a,#0xFF
   0E99 DD 77 FF           3546 	ld	-1 (ix),a
                           3547 ;demo.c:484: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3548 	ld	a,#<_font_x
   0E9E DD 86 FE           3549 	add	a,-2 (ix)
   0EA1 5F                 3550 	ld	e,a
   0EA2 3Es0F              3551 	ld	a,#>_font_x
   0EA4 DD 8E FF           3552 	adc	a,-1 (ix)
   0EA7 57                 3553 	ld	d,a
   0EA8 1A                 3554 	ld	a,(de)
   0EA9 5F                 3555 	ld	e,a
   0EAA 16 00              3556 	ld	d,#0x00
   0EAC 21 7F 00           3557 	ld	hl,#0x007F
   0EAF 19                 3558 	add	hl,de
   0EB0 EB                 3559 	ex	de,hl
   0EB1 21r6Cs41           3560 	ld	hl,#_cmd
   0EB4 73                 3561 	ld	(hl),e
   0EB5 23                 3562 	inc	hl
   0EB6 72                 3563 	ld	(hl),d
                           3564 ;demo.c:485: cmd.source_y = 512+font_y[cidx];
   0EB7 11r6Es41           3565 	ld	de,#_cmd + 2
   0EBA 3Er7C              3566 	ld	a,#<_font_y
   0EBC DD 86 FE           3567 	add	a,-2 (ix)
   0EBF 4F                 3568 	ld	c,a
   0EC0 3Es0F              3569 	ld	a,#>_font_y
   0EC2 DD 8E FF           3570 	adc	a,-1 (ix)
   0EC5 47                 3571 	ld	b,a
   0EC6 0A                 3572 	ld	a,(bc)
   0EC7 4F                 3573 	ld	c,a
   0EC8 06 00              3574 	ld	b,#0x00
   0ECA 21 00 02           3575 	ld	hl,#0x0200
   0ECD 09                 3576 	add	hl,bc
   0ECE 4D                 3577 	ld	c,l
   0ECF 44                 3578 	ld	b,h
   0ED0 EB                 3579 	ex	de,hl
   0ED1 71                 3580 	ld	(hl),c
   0ED2 23                 3581 	inc	hl
   0ED3 70                 3582 	ld	(hl),b
                           3583 ;demo.c:486: cmd.dest_x = lx;
   0ED4 01r70s41           3584 	ld	bc,#_cmd + 4
   0ED7 21rB6s41           3585 	ld	hl,#_lx + 0
   0EDA 5E                 3586 	ld	e,(hl)
   0EDB 16 00              3587 	ld	d,#0x00
   0EDD 69                 3588 	ld	l,c
   0EDE 60                 3589 	ld	h,b
   0EDF 73                 3590 	ld	(hl),e
   0EE0 23                 3591 	inc	hl
   0EE1 72                 3592 	ld	(hl),d
                           3593 ;demo.c:487: cmd.dest_y = ly;
   0EE2 01r72s41           3594 	ld	bc,#_cmd + 6
   0EE5 21rB7s41           3595 	ld	hl,#_ly + 0
   0EE8 5E                 3596 	ld	e,(hl)
   0EE9 16 00              3597 	ld	d,#0x00
   0EEB 69                 3598 	ld	l,c
   0EEC 60                 3599 	ld	h,b
   0EED 73                 3600 	ld	(hl),e
   0EEE 23                 3601 	inc	hl
   0EEF 72                 3602 	ld	(hl),d
                           3603 ;demo.c:488: cmd.size_x = font_w[cidx];
   0EF0 01r74s41           3604 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3605 	ld	a,#<_font_w
   0EF5 DD 86 FE           3606 	add	a,-2 (ix)
   0EF8 5F                 3607 	ld	e,a
   0EF9 3Es0F              3608 	ld	a,#>_font_w
   0EFB DD 8E FF           3609 	adc	a,-1 (ix)
   0EFE 57                 3610 	ld	d,a
   0EFF 1A                 3611 	ld	a,(de)
   0F00 5F                 3612 	ld	e,a
   0F01 16 00              3613 	ld	d,#0x00
   0F03 69                 3614 	ld	l,c
   0F04 60                 3615 	ld	h,b
   0F05 73                 3616 	ld	(hl),e
   0F06 23                 3617 	inc	hl
   0F07 72                 3618 	ld	(hl),d
                           3619 ;demo.c:489: cmd.size_y = 8;
   0F08 21r76s41           3620 	ld	hl, #_cmd + 10
   0F0B 36 08              3621 	ld	(hl),#0x08
   0F0D 23                 3622 	inc	hl
   0F0E 36 00              3623 	ld	(hl),#0x00
                           3624 ;demo.c:490: cmd.argument = 0x00;
   0F10 3E 00              3625 	ld	a,#0x00
   0F12 32r79s41           3626 	ld	(#_cmd + 13),a
                           3627 ;demo.c:491: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3628 	ld	a,#0x90
   0F17 32r7As41           3629 	ld	(#_cmd + 14),a
                           3630 ;demo.c:492: vdp_copier(&cmd);
   0F1A 21r6Cs41           3631 	ld	hl,#_cmd
   0F1D E5                 3632 	push	hl
   0F1E CDr00s00           3633 	call	_vdp_copier
   0F21 F1                 3634 	pop	af
                           3635 ;demo.c:493: lx+=font_w[cidx]-1;
   0F22 3ErBC              3636 	ld	a,#<_font_w
   0F24 DD 86 FE           3637 	add	a,-2 (ix)
   0F27 4F                 3638 	ld	c,a
   0F28 3Es0F              3639 	ld	a,#>_font_w
   0F2A DD 8E FF           3640 	adc	a,-1 (ix)
   0F2D 47                 3641 	ld	b,a
   0F2E 0A                 3642 	ld	a,(bc)
   0F2F 4F                 3643 	ld	c,a
   0F30 0D                 3644 	dec	c
   0F31 21rB6s41           3645 	ld	hl,#_lx
   0F34 7E                 3646 	ld	a,(hl)
   0F35 81                 3647 	add	a,c
   0F36 77                 3648 	ld	(hl),a
   0F37 DD F9              3649 	ld	sp,ix
   0F39 DD E1              3650 	pop	ix
   0F3B C9                 3651 	ret
   0F3C                    3652 _do_letter_end::
   0F3C                    3653 _font_x:
   0F3C 01                 3654 	.db #0x01
   0F3D 09                 3655 	.db #0x09
   0F3E 11                 3656 	.db #0x11
   0F3F 19                 3657 	.db #0x19
   0F40 21                 3658 	.db #0x21
   0F41 29                 3659 	.db #0x29
   0F42 31                 3660 	.db #0x31
   0F43 39                 3661 	.db #0x39
   0F44 41                 3662 	.db #0x41
   0F45 46                 3663 	.db #0x46
   0F46 4E                 3664 	.db #0x4E
   0F47 56                 3665 	.db #0x56
   0F48 5E                 3666 	.db #0x5E
   0F49 01                 3667 	.db #0x01
   0F4A 0A                 3668 	.db #0x0A
   0F4B 12                 3669 	.db #0x12
   0F4C 1A                 3670 	.db #0x1A
   0F4D 23                 3671 	.db #0x23
   0F4E 2B                 3672 	.db #0x2B
   0F4F 33                 3673 	.db #0x33
   0F50 3C                 3674 	.db #0x3C
   0F51 44                 3675 	.db #0x44
   0F52 4C                 3676 	.db #0x4C
   0F53 56                 3677 	.db #0x56
   0F54 5E                 3678 	.db #0x5E
   0F55 67                 3679 	.db #0x67
   0F56 00                 3680 	.db #0x00
   0F57 00                 3681 	.db #0x00
   0F58 00                 3682 	.db #0x00
   0F59 00                 3683 	.db #0x00
   0F5A 00                 3684 	.db #0x00
   0F5B 00                 3685 	.db #0x00
   0F5C 01                 3686 	.db #0x01
   0F5D 09                 3687 	.db #0x09
   0F5E 11                 3688 	.db #0x11
   0F5F 18                 3689 	.db #0x18
   0F60 20                 3690 	.db #0x20
   0F61 28                 3691 	.db #0x28
   0F62 2F                 3692 	.db #0x2F
   0F63 37                 3693 	.db #0x37
   0F64 3F                 3694 	.db #0x3F
   0F65 45                 3695 	.db #0x45
   0F66 4C                 3696 	.db #0x4C
   0F67 54                 3697 	.db #0x54
   0F68 5A                 3698 	.db #0x5A
   0F69 64                 3699 	.db #0x64
   0F6A 01                 3700 	.db #0x01
   0F6B 09                 3701 	.db #0x09
   0F6C 11                 3702 	.db #0x11
   0F6D 19                 3703 	.db #0x19
   0F6E 21                 3704 	.db #0x21
   0F6F 29                 3705 	.db #0x29
   0F70 30                 3706 	.db #0x30
   0F71 38                 3707 	.db #0x38
   0F72 40                 3708 	.db #0x40
   0F73 4A                 3709 	.db #0x4A
   0F74 52                 3710 	.db #0x52
   0F75 5A                 3711 	.db #0x5A
   0F76 00                 3712 	.db 0x00
   0F77 00                 3713 	.db 0x00
   0F78 00                 3714 	.db 0x00
   0F79 00                 3715 	.db 0x00
   0F7A 00                 3716 	.db 0x00
   0F7B 00                 3717 	.db 0x00
   0F7C                    3718 _font_y:
   0F7C 1C                 3719 	.db #0x1C
   0F7D 1C                 3720 	.db #0x1C
   0F7E 1C                 3721 	.db #0x1C
   0F7F 1C                 3722 	.db #0x1C
   0F80 1C                 3723 	.db #0x1C
   0F81 1C                 3724 	.db #0x1C
   0F82 1C                 3725 	.db #0x1C
   0F83 1C                 3726 	.db #0x1C
   0F84 1C                 3727 	.db #0x1C
   0F85 1C                 3728 	.db #0x1C
   0F86 1C                 3729 	.db #0x1C
   0F87 1C                 3730 	.db #0x1C
   0F88 1C                 3731 	.db #0x1C
   0F89 25                 3732 	.db #0x25
   0F8A 25                 3733 	.db #0x25
   0F8B 25                 3734 	.db #0x25
   0F8C 25                 3735 	.db #0x25
   0F8D 25                 3736 	.db #0x25
   0F8E 25                 3737 	.db #0x25
   0F8F 25                 3738 	.db #0x25
   0F90 25                 3739 	.db #0x25
   0F91 25                 3740 	.db #0x25
   0F92 25                 3741 	.db #0x25
   0F93 25                 3742 	.db #0x25
   0F94 25                 3743 	.db #0x25
   0F95 25                 3744 	.db #0x25
   0F96 00                 3745 	.db #0x00
   0F97 00                 3746 	.db #0x00
   0F98 00                 3747 	.db #0x00
   0F99 00                 3748 	.db #0x00
   0F9A 00                 3749 	.db #0x00
   0F9B 00                 3750 	.db #0x00
   0F9C 37                 3751 	.db #0x37
   0F9D 37                 3752 	.db #0x37
   0F9E 37                 3753 	.db #0x37
   0F9F 37                 3754 	.db #0x37
   0FA0 37                 3755 	.db #0x37
   0FA1 37                 3756 	.db #0x37
   0FA2 37                 3757 	.db #0x37
   0FA3 37                 3758 	.db #0x37
   0FA4 37                 3759 	.db #0x37
   0FA5 37                 3760 	.db #0x37
   0FA6 37                 3761 	.db #0x37
   0FA7 37                 3762 	.db #0x37
   0FA8 37                 3763 	.db #0x37
   0FA9 37                 3764 	.db #0x37
   0FAA 40                 3765 	.db #0x40
   0FAB 40                 3766 	.db #0x40
   0FAC 40                 3767 	.db #0x40
   0FAD 40                 3768 	.db #0x40
   0FAE 40                 3769 	.db #0x40
   0FAF 40                 3770 	.db #0x40
   0FB0 40                 3771 	.db #0x40
   0FB1 40                 3772 	.db #0x40
   0FB2 40                 3773 	.db #0x40
   0FB3 40                 3774 	.db #0x40
   0FB4 40                 3775 	.db #0x40
   0FB5 40                 3776 	.db #0x40
   0FB6 00                 3777 	.db 0x00
   0FB7 00                 3778 	.db 0x00
   0FB8 00                 3779 	.db 0x00
   0FB9 00                 3780 	.db 0x00
   0FBA 00                 3781 	.db 0x00
   0FBB 00                 3782 	.db 0x00
   0FBC                    3783 _font_w:
   0FBC 07                 3784 	.db #0x07
   0FBD 07                 3785 	.db #0x07
   0FBE 07                 3786 	.db #0x07
   0FBF 07                 3787 	.db #0x07
   0FC0 07                 3788 	.db #0x07
   0FC1 07                 3789 	.db #0x07
   0FC2 07                 3790 	.db #0x07
   0FC3 07                 3791 	.db #0x07
   0FC4 04                 3792 	.db #0x04
   0FC5 07                 3793 	.db #0x07
   0FC6 07                 3794 	.db #0x07
   0FC7 07                 3795 	.db #0x07
   0FC8 09                 3796 	.db #0x09
   0FC9 08                 3797 	.db #0x08
   0FCA 07                 3798 	.db #0x07
   0FCB 07                 3799 	.db #0x07
   0FCC 08                 3800 	.db #0x08
   0FCD 07                 3801 	.db #0x07
   0FCE 07                 3802 	.db #0x07
   0FCF 08                 3803 	.db #0x08
   0FD0 07                 3804 	.db #0x07
   0FD1 07                 3805 	.db #0x07
   0FD2 09                 3806 	.db #0x09
   0FD3 07                 3807 	.db #0x07
   0FD4 08                 3808 	.db #0x08
   0FD5 07                 3809 	.db #0x07
   0FD6 00                 3810 	.db #0x00
   0FD7 00                 3811 	.db #0x00
   0FD8 00                 3812 	.db #0x00
   0FD9 00                 3813 	.db #0x00
   0FDA 00                 3814 	.db #0x00
   0FDB 00                 3815 	.db #0x00
   0FDC 07                 3816 	.db #0x07
   0FDD 07                 3817 	.db #0x07
   0FDE 06                 3818 	.db #0x06
   0FDF 07                 3819 	.db #0x07
   0FE0 07                 3820 	.db #0x07
   0FE1 07                 3821 	.db #0x07
   0FE2 07                 3822 	.db #0x07
   0FE3 07                 3823 	.db #0x07
   0FE4 05                 3824 	.db #0x05
   0FE5 06                 3825 	.db #0x06
   0FE6 07                 3826 	.db #0x07
   0FE7 05                 3827 	.db #0x05
   0FE8 09                 3828 	.db #0x09
   0FE9 07                 3829 	.db #0x07
   0FEA 07                 3830 	.db #0x07
   0FEB 07                 3831 	.db #0x07
   0FEC 07                 3832 	.db #0x07
   0FED 07                 3833 	.db #0x07
   0FEE 07                 3834 	.db #0x07
   0FEF 06                 3835 	.db #0x06
   0FF0 07                 3836 	.db #0x07
   0FF1 07                 3837 	.db #0x07
   0FF2 09                 3838 	.db #0x09
   0FF3 07                 3839 	.db #0x07
   0FF4 07                 3840 	.db #0x07
   0FF5 07                 3841 	.db #0x07
   0FF6 00                 3842 	.db 0x00
   0FF7 00                 3843 	.db 0x00
   0FF8 00                 3844 	.db 0x00
   0FF9 00                 3845 	.db 0x00
   0FFA 00                 3846 	.db 0x00
   0FFB 00                 3847 	.db 0x00
                           3848 ;demo.c:497: void do_letter_tall(char cc) {
                           3849 ;	---------------------------------
                           3850 ; Function do_letter_tall
                           3851 ; ---------------------------------
   0FFC                    3852 _do_letter_tall_start::
   0FFC                    3853 _do_letter_tall:
   0FFC DD E5              3854 	push	ix
   0FFE DD 21 00 00        3855 	ld	ix,#0
   1002 DD 39              3856 	add	ix,sp
   1004 F5                 3857 	push	af
                           3858 ;demo.c:498: int cidx = cc - 65;
   1005 DD 4E 04           3859 	ld	c,4 (ix)
   1008 DD 7E 04           3860 	ld	a,4 (ix)
   100B 17                 3861 	rla	
   100C 9F                 3862 	sbc	a,a
   100D 47                 3863 	ld	b,a
   100E 79                 3864 	ld	a,c
   100F C6 BF              3865 	add	a,#0xBF
   1011 DD 77 FE           3866 	ld	-2 (ix),a
   1014 78                 3867 	ld	a,b
   1015 CE FF              3868 	adc	a,#0xFF
   1017 DD 77 FF           3869 	ld	-1 (ix),a
                           3870 ;demo.c:499: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3871 	ld	a,#<_font_x
   101C DD 86 FE           3872 	add	a,-2 (ix)
   101F 5F                 3873 	ld	e,a
   1020 3Es0F              3874 	ld	a,#>_font_x
   1022 DD 8E FF           3875 	adc	a,-1 (ix)
   1025 57                 3876 	ld	d,a
   1026 1A                 3877 	ld	a,(de)
   1027 5F                 3878 	ld	e,a
   1028 16 00              3879 	ld	d,#0x00
   102A 21 7F 00           3880 	ld	hl,#0x007F
   102D 19                 3881 	add	hl,de
   102E EB                 3882 	ex	de,hl
   102F 21r6Cs41           3883 	ld	hl,#_cmd
   1032 73                 3884 	ld	(hl),e
   1033 23                 3885 	inc	hl
   1034 72                 3886 	ld	(hl),d
                           3887 ;demo.c:500: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r6Es41           3888 	ld	de,#_cmd + 2
   1038 3Er7C              3889 	ld	a,#<_font_y
   103A DD 86 FE           3890 	add	a,-2 (ix)
   103D 4F                 3891 	ld	c,a
   103E 3Es0F              3892 	ld	a,#>_font_y
   1040 DD 8E FF           3893 	adc	a,-1 (ix)
   1043 47                 3894 	ld	b,a
   1044 0A                 3895 	ld	a,(bc)
   1045 4F                 3896 	ld	c,a
   1046 06 00              3897 	ld	b,#0x00
   1048 21 FF 01           3898 	ld	hl,#0x01FF
   104B 09                 3899 	add	hl,bc
   104C 4D                 3900 	ld	c,l
   104D 44                 3901 	ld	b,h
   104E EB                 3902 	ex	de,hl
   104F 71                 3903 	ld	(hl),c
   1050 23                 3904 	inc	hl
   1051 70                 3905 	ld	(hl),b
                           3906 ;demo.c:501: cmd.dest_x = lx;
   1052 01r70s41           3907 	ld	bc,#_cmd + 4
   1055 21rB6s41           3908 	ld	hl,#_lx + 0
   1058 5E                 3909 	ld	e,(hl)
   1059 16 00              3910 	ld	d,#0x00
   105B 69                 3911 	ld	l,c
   105C 60                 3912 	ld	h,b
   105D 73                 3913 	ld	(hl),e
   105E 23                 3914 	inc	hl
   105F 72                 3915 	ld	(hl),d
                           3916 ;demo.c:502: cmd.dest_y = ly;
   1060 01r72s41           3917 	ld	bc,#_cmd + 6
   1063 21rB7s41           3918 	ld	hl,#_ly + 0
   1066 5E                 3919 	ld	e,(hl)
   1067 16 00              3920 	ld	d,#0x00
   1069 69                 3921 	ld	l,c
   106A 60                 3922 	ld	h,b
   106B 73                 3923 	ld	(hl),e
   106C 23                 3924 	inc	hl
   106D 72                 3925 	ld	(hl),d
                           3926 ;demo.c:503: cmd.size_x = font_w[cidx];
   106E 01r74s41           3927 	ld	bc,#_cmd + 8
   1071 3ErBC              3928 	ld	a,#<_font_w
   1073 DD 86 FE           3929 	add	a,-2 (ix)
   1076 5F                 3930 	ld	e,a
   1077 3Es0F              3931 	ld	a,#>_font_w
   1079 DD 8E FF           3932 	adc	a,-1 (ix)
   107C 57                 3933 	ld	d,a
   107D 1A                 3934 	ld	a,(de)
   107E 5F                 3935 	ld	e,a
   107F 16 00              3936 	ld	d,#0x00
   1081 69                 3937 	ld	l,c
   1082 60                 3938 	ld	h,b
   1083 73                 3939 	ld	(hl),e
   1084 23                 3940 	inc	hl
   1085 72                 3941 	ld	(hl),d
                           3942 ;demo.c:504: cmd.size_y = 10;
   1086 21r76s41           3943 	ld	hl, #_cmd + 10
   1089 36 0A              3944 	ld	(hl),#0x0A
   108B 23                 3945 	inc	hl
   108C 36 00              3946 	ld	(hl),#0x00
                           3947 ;demo.c:505: cmd.argument = 0x00;
   108E 3E 00              3948 	ld	a,#0x00
   1090 32r79s41           3949 	ld	(#_cmd + 13),a
                           3950 ;demo.c:506: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3951 	ld	a,#0x90
   1095 32r7As41           3952 	ld	(#_cmd + 14),a
                           3953 ;demo.c:507: vdp_copier(&cmd);
   1098 21r6Cs41           3954 	ld	hl,#_cmd
   109B E5                 3955 	push	hl
   109C CDr00s00           3956 	call	_vdp_copier
   109F F1                 3957 	pop	af
                           3958 ;demo.c:508: lx+=font_w[cidx]-1;
   10A0 3ErBC              3959 	ld	a,#<_font_w
   10A2 DD 86 FE           3960 	add	a,-2 (ix)
   10A5 4F                 3961 	ld	c,a
   10A6 3Es0F              3962 	ld	a,#>_font_w
   10A8 DD 8E FF           3963 	adc	a,-1 (ix)
   10AB 47                 3964 	ld	b,a
   10AC 0A                 3965 	ld	a,(bc)
   10AD 4F                 3966 	ld	c,a
   10AE 0D                 3967 	dec	c
   10AF 21rB6s41           3968 	ld	hl,#_lx
   10B2 7E                 3969 	ld	a,(hl)
   10B3 81                 3970 	add	a,c
   10B4 77                 3971 	ld	(hl),a
   10B5 DD F9              3972 	ld	sp,ix
   10B7 DD E1              3973 	pop	ix
   10B9 C9                 3974 	ret
   10BA                    3975 _do_letter_tall_end::
                           3976 ;demo.c:511: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3977 ;	---------------------------------
                           3978 ; Function drawstr
                           3979 ; ---------------------------------
   10BA                    3980 _drawstr_start::
   10BA                    3981 _drawstr:
   10BA DD E5              3982 	push	ix
   10BC DD 21 00 00        3983 	ld	ix,#0
   10C0 DD 39              3984 	add	ix,sp
                           3985 ;demo.c:512: char* c = str;
   10C2 DD 4E 04           3986 	ld	c,4 (ix)
   10C5 DD 46 05           3987 	ld	b,5 (ix)
                           3988 ;demo.c:513: lx = x;
   10C8 DD 5E 06           3989 	ld	e,6 (ix)
   10CB 21rB6s41           3990 	ld	hl,#_lx + 0
   10CE 73                 3991 	ld	(hl), e
                           3992 ;demo.c:514: ly = y;
   10CF DD 7E 07           3993 	ld	a,7 (ix)
   10D2 21rB7s41           3994 	ld	hl,#_ly + 0
   10D5 77                 3995 	ld	(hl), a
                           3996 ;demo.c:515: while (*c) {
   10D6                    3997 00107$:
   10D6 0A                 3998 	ld	a,(bc)
   10D7 57                 3999 	ld	d,a
   10D8 B7                 4000 	or	a,a
   10D9 28 42              4001 	jr	Z,00110$
                           4002 ;demo.c:516: char ltr = *c++; 
   10DB 03                 4003 	inc	bc
                           4004 ;demo.c:517: if (ltr == ' ') lx+=4;
   10DC 7A                 4005 	ld	a,d
   10DD D6 20              4006 	sub	a,#0x20
   10DF 20 1E              4007 	jr	NZ,00105$
   10E1 FD 21rB6s41        4008 	ld	iy,#_lx
   10E5 FD 34 00           4009 	inc	0 (iy)
   10E8 FD 21rB6s41        4010 	ld	iy,#_lx
   10EC FD 34 00           4011 	inc	0 (iy)
   10EF FD 21rB6s41        4012 	ld	iy,#_lx
   10F3 FD 34 00           4013 	inc	0 (iy)
   10F6 FD 21rB6s41        4014 	ld	iy,#_lx
   10FA FD 34 00           4015 	inc	0 (iy)
   10FD 18 D7              4016 	jr	00107$
   10FF                    4017 00105$:
                           4018 ;demo.c:518: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 4019 	ld	a,d
   1100 D6 5F              4020 	sub	a,#0x5F
   1102 20 0D              4021 	jr	NZ,00102$
   1104 21rB7s41           4022 	ld	hl,#_ly
   1107 7E                 4023 	ld	a,(hl)
   1108 C6 09              4024 	add	a,#0x09
   110A 77                 4025 	ld	(hl),a
   110B 21rB6s41           4026 	ld	hl,#_lx + 0
   110E 73                 4027 	ld	(hl), e
   110F 18 C5              4028 	jr	00107$
   1111                    4029 00102$:
                           4030 ;demo.c:519: else do_letter(ltr);
   1111 C5                 4031 	push	bc
   1112 D5                 4032 	push	de
   1113 D5                 4033 	push	de
   1114 33                 4034 	inc	sp
   1115 CDr7Es0E           4035 	call	_do_letter
   1118 33                 4036 	inc	sp
   1119 D1                 4037 	pop	de
   111A C1                 4038 	pop	bc
   111B 18 B9              4039 	jr	00107$
   111D                    4040 00110$:
   111D DD E1              4041 	pop	ix
   111F C9                 4042 	ret
   1120                    4043 _drawstr_end::
                           4044 ;demo.c:523: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4045 ;	---------------------------------
                           4046 ; Function drawsine
                           4047 ; ---------------------------------
   1120                    4048 _drawsine_start::
   1120                    4049 _drawsine:
   1120 DD E5              4050 	push	ix
   1122 DD 21 00 00        4051 	ld	ix,#0
   1126 DD 39              4052 	add	ix,sp
   1128 3B                 4053 	dec	sp
                           4054 ;demo.c:524: char* c = str;
   1129 DD 4E 04           4055 	ld	c,4 (ix)
   112C DD 46 05           4056 	ld	b,5 (ix)
                           4057 ;demo.c:525: lx = x;
   112F DD 7E 06           4058 	ld	a,6 (ix)
   1132 21rB6s41           4059 	ld	hl,#_lx + 0
   1135 77                 4060 	ld	(hl), a
                           4061 ;demo.c:527: while (*c) {
   1136                    4062 00104$:
   1136 0A                 4063 	ld	a,(bc)
   1137 5F                 4064 	ld	e,a
   1138 B7                 4065 	or	a,a
   1139 CArADs11           4066 	jp	Z,00107$
                           4067 ;demo.c:528: char ltr = *c++; 
   113C 03                 4068 	inc	bc
   113D DD 73 FF           4069 	ld	-1 (ix),e
                           4070 ;demo.c:529: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21rB6s41           4071 	ld	hl,#_lx + 0
   1143 5E                 4072 	ld	e,(hl)
   1144 16 00              4073 	ld	d,#0x00
   1146 21r68s41           4074 	ld	hl,#_vbicount
   1149 7B                 4075 	ld	a,e
   114A 86                 4076 	add	a,(hl)
   114B 5F                 4077 	ld	e,a
   114C 7A                 4078 	ld	a,d
   114D 23                 4079 	inc	hl
   114E 8E                 4080 	adc	a,(hl)
   114F 57                 4081 	ld	d,a
   1150 CB 2A              4082 	sra	d
   1152 CB 1B              4083 	rr	e
   1154 16 00              4084 	ld	d,#0x00
   1156 CB 23              4085 	sla	e
   1158 CB 12              4086 	rl	d
   115A 21r2Cs00           4087 	ld	hl,#_sintabx
   115D 19                 4088 	add	hl,de
   115E 5E                 4089 	ld	e,(hl)
   115F 23                 4090 	inc	hl
   1160 56                 4091 	ld	d,(hl)
   1161 CB 3A              4092 	srl	d
   1163 CB 1B              4093 	rr	e
   1165 CB 3A              4094 	srl	d
   1167 CB 1B              4095 	rr	e
   1169 CB 3A              4096 	srl	d
   116B CB 1B              4097 	rr	e
   116D CB 3A              4098 	srl	d
   116F CB 1B              4099 	rr	e
   1171 21rB7s41           4100 	ld	hl,#_ly
   1174 DD 7E 07           4101 	ld	a,7 (ix)
   1177 83                 4102 	add	a,e
   1178 77                 4103 	ld	(hl),a
                           4104 ;demo.c:530: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           4105 	ld	a,-1 (ix)
   117C D6 20              4106 	sub	a,#0x20
   117E 20 1F              4107 	jr	NZ,00102$
   1180 FD 21rB6s41        4108 	ld	iy,#_lx
   1184 FD 34 00           4109 	inc	0 (iy)
   1187 FD 21rB6s41        4110 	ld	iy,#_lx
   118B FD 34 00           4111 	inc	0 (iy)
   118E FD 21rB6s41        4112 	ld	iy,#_lx
   1192 FD 34 00           4113 	inc	0 (iy)
   1195 FD 21rB6s41        4114 	ld	iy,#_lx
   1199 FD 34 00           4115 	inc	0 (iy)
   119C C3r36s11           4116 	jp	00104$
   119F                    4117 00102$:
                           4118 ;demo.c:531: else do_letter_tall(ltr);
   119F C5                 4119 	push	bc
   11A0 DD 7E FF           4120 	ld	a,-1 (ix)
   11A3 F5                 4121 	push	af
   11A4 33                 4122 	inc	sp
   11A5 CDrFCs0F           4123 	call	_do_letter_tall
   11A8 33                 4124 	inc	sp
   11A9 C1                 4125 	pop	bc
   11AA C3r36s11           4126 	jp	00104$
   11AD                    4127 00107$:
   11AD DD F9              4128 	ld	sp,ix
   11AF DD E1              4129 	pop	ix
   11B1 C9                 4130 	ret
   11B2                    4131 _drawsine_end::
                           4132 ;demo.c:535: void font() {
                           4133 ;	---------------------------------
                           4134 ; Function font
                           4135 ; ---------------------------------
   11B2                    4136 _font_start::
   11B2                    4137 _font:
                           4138 ;demo.c:537: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           4139 	ld	hl,#0x3C4A
   11B5 E5                 4140 	push	hl
   11B6 21rC0s11           4141 	ld	hl,#__str_8
   11B9 E5                 4142 	push	hl
   11BA CDrBAs10           4143 	call	_drawstr
   11BD F1                 4144 	pop	af
   11BE F1                 4145 	pop	af
   11BF C9                 4146 	ret
   11C0                    4147 _font_end::
   11C0                    4148 __str_8:
   11C0 44 49 47 49 54 41  4149 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  4150 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 4151 	.db 0x00
                           4152 ;demo.c:546: void twister() {
                           4153 ;	---------------------------------
                           4154 ; Function twister
                           4155 ; ---------------------------------
   1223                    4156 _twister_start::
   1223                    4157 _twister:
   1223 DD E5              4158 	push	ix
   1225 DD 21 00 00        4159 	ld	ix,#0
   1229 DD 39              4160 	add	ix,sp
   122B F5                 4161 	push	af
                           4162 ;demo.c:550: if (twinited == 0) {
   122C 3ArBAs41           4163 	ld	a,(#_twinited+0)
   122F FD 21rBAs41        4164 	ld	iy,#_twinited
   1233 FD B6 01           4165 	or	a,1 (iy)
   1236 C2rA6s12           4166 	jp	NZ,00102$
                           4167 ;demo.c:551: cmd.size_x = 256;
   1239 21r74s41           4168 	ld	hl, #_cmd + 8
   123C 36 00              4169 	ld	(hl),#0x00
   123E 23                 4170 	inc	hl
   123F 36 01              4171 	ld	(hl),#0x01
                           4172 ;demo.c:552: cmd.size_y = 1;
   1241 21r76s41           4173 	ld	hl, #_cmd + 10
   1244 36 01              4174 	ld	(hl),#0x01
   1246 23                 4175 	inc	hl
   1247 36 00              4176 	ld	(hl),#0x00
                           4177 ;demo.c:553: cmd.data = 0;
                           4178 ;demo.c:554: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4179 	ld	a,#0x00
   124B 32r78s41           4180 	ld	(#_cmd + 12),a
   124E 32r79s41           4181 	ld	(#_cmd + 13),a
                           4182 ;demo.c:555: cmd.command = 0xd0; // vram to vram, y only
   1251 01r7As41           4183 	ld	bc,#_cmd + 14
   1254 3E D0              4184 	ld	a,#0xD0
   1256 02                 4185 	ld	(bc),a
                           4186 ;demo.c:556: cmd.source_x = 0;
   1257 21r6Cs41           4187 	ld	hl,#_cmd
   125A 36 00              4188 	ld	(hl),#0x00
   125C 23                 4189 	inc	hl
   125D 36 00              4190 	ld	(hl),#0x00
                           4191 ;demo.c:557: cmd.dest_x = 0;
   125F 21r70s41           4192 	ld	hl, #_cmd + 4
   1262 36 00              4193 	ld	(hl),#0x00
   1264 23                 4194 	inc	hl
   1265 36 00              4195 	ld	(hl),#0x00
                           4196 ;demo.c:559: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4197 	ld	bc,#0x0000
   126A                    4198 00103$:
   126A 79                 4199 	ld	a,c
   126B D6 D4              4200 	sub	a,#0xD4
   126D 78                 4201 	ld	a,b
   126E DE 00              4202 	sbc	a,#0x00
   1270 F2r91s12           4203 	jp	P,00106$
                           4204 ;demo.c:560: waitVB();
   1273 76                 4205 		halt 
                           4206 ;demo.c:561: cmd.source_y = 0;
   1274 11r6Es41           4207 	ld	de,#_cmd + 2
   1277 EB                 4208 	ex	de,hl
   1278 36 00              4209 	ld	(hl),#0x00
   127A 23                 4210 	inc	hl
   127B 36 00              4211 	ld	(hl),#0x00
                           4212 ;demo.c:562: cmd.dest_y = y;
   127D 11r72s41           4213 	ld	de,#_cmd + 6
   1280 EB                 4214 	ex	de,hl
   1281 71                 4215 	ld	(hl),c
   1282 23                 4216 	inc	hl
   1283 70                 4217 	ld	(hl),b
                           4218 ;demo.c:563: vdp_copier(&cmd);
   1284 C5                 4219 	push	bc
   1285 21r6Cs41           4220 	ld	hl,#_cmd
   1288 E5                 4221 	push	hl
   1289 CDr00s00           4222 	call	_vdp_copier
   128C F1                 4223 	pop	af
   128D C1                 4224 	pop	bc
                           4225 ;demo.c:559: for (y = 0; y < 212; y+=1) {
   128E 03                 4226 	inc	bc
   128F 18 D9              4227 	jr	00103$
   1291                    4228 00106$:
                           4229 ;demo.c:567: twinited = 1;
   1291 21rBAs41           4230 	ld	hl,#_twinited + 0
   1294 36 01              4231 	ld	(hl), #0x01
   1296 21rBBs41           4232 	ld	hl,#_twinited + 1
   1299 36 00              4233 	ld	(hl), #0x00
                           4234 ;demo.c:568: vdp_load_palette(twister_palette);
   129B 21r08s41           4235 	ld	hl,#_twister_palette
   129E E5                 4236 	push	hl
   129F CDr00s00           4237 	call	_vdp_load_palette
   12A2 F1                 4238 	pop	af
                           4239 ;demo.c:569: font();
   12A3 CDrB2s11           4240 	call	_font
   12A6                    4241 00102$:
                           4242 ;demo.c:572: cmd.size_x = 70;
   12A6 21r74s41           4243 	ld	hl, #_cmd + 8
   12A9 36 46              4244 	ld	(hl),#0x46
   12AB 23                 4245 	inc	hl
   12AC 36 00              4246 	ld	(hl),#0x00
                           4247 ;demo.c:573: cmd.size_y = 2;
   12AE 21r76s41           4248 	ld	hl, #_cmd + 10
   12B1 36 02              4249 	ld	(hl),#0x02
   12B3 23                 4250 	inc	hl
   12B4 36 00              4251 	ld	(hl),#0x00
                           4252 ;demo.c:574: cmd.data = 0;
   12B6 3E 00              4253 	ld	a,#0x00
   12B8 32r78s41           4254 	ld	(#_cmd + 12),a
                           4255 ;demo.c:575: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4256 	ld	a,#0x04
   12BD 32r79s41           4257 	ld	(#_cmd + 13),a
                           4258 ;demo.c:576: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r7As41           4259 	ld	bc,#_cmd + 14
   12C3 3E E0              4260 	ld	a,#0xE0
   12C5 02                 4261 	ld	(bc),a
                           4262 ;demo.c:577: cmd.source_x = 70;
   12C6 21r6Cs41           4263 	ld	hl,#_cmd
   12C9 36 46              4264 	ld	(hl),#0x46
   12CB 23                 4265 	inc	hl
   12CC 36 00              4266 	ld	(hl),#0x00
                           4267 ;demo.c:578: cmd.dest_x = 70;
   12CE 21r70s41           4268 	ld	hl, #_cmd + 4
   12D1 36 46              4269 	ld	(hl),#0x46
   12D3 23                 4270 	inc	hl
   12D4 36 00              4271 	ld	(hl),#0x00
                           4272 ;demo.c:580: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4273 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4274 	ld	-1 (ix),#0x00
   12DE                    4275 00107$:
   12DE DD 7E FE           4276 	ld	a,-2 (ix)
   12E1 D6 D4              4277 	sub	a,#0xD4
   12E3 DD 7E FF           4278 	ld	a,-1 (ix)
   12E6 DE 00              4279 	sbc	a,#0x00
   12E8 F2r41s13           4280 	jp	P,00110$
                           4281 ;demo.c:581: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r6Es41           4282 	ld	de,#_cmd + 2
   12EE DD 4E FE           4283 	ld	c,-2 (ix)
   12F1 DD 46 FF           4284 	ld	b,-1 (ix)
   12F4 CB 28              4285 	sra	b
   12F6 CB 19              4286 	rr	c
   12F8 3ArB8s41           4287 	ld	a,(#_ff+0)
   12FB 81                 4288 	add	a,c
   12FC 4F                 4289 	ld	c,a
   12FD 3ArB9s41           4290 	ld	a,(#_ff+1)
   1300 88                 4291 	adc	a,b
   1301 06 00              4292 	ld	b,#0x00
   1303 21r00s00           4293 	ld	hl,#_sintab
   1306 09                 4294 	add	hl,bc
   1307 7E                 4295 	ld	a,(hl)
   1308 4F                 4296 	ld	c,a
   1309 CB 29              4297 	sra	c
   130B 79                 4298 	ld	a,c
   130C 17                 4299 	rla	
   130D 9F                 4300 	sbc	a,a
   130E 47                 4301 	ld	b,a
   130F 21 40 02           4302 	ld	hl,#0x0240
   1312 09                 4303 	add	hl,bc
   1313 4D                 4304 	ld	c,l
   1314 44                 4305 	ld	b,h
   1315 6B                 4306 	ld	l,e
   1316 62                 4307 	ld	h,d
   1317 71                 4308 	ld	(hl),c
   1318 23                 4309 	inc	hl
   1319 70                 4310 	ld	(hl),b
                           4311 ;demo.c:582: cmd.dest_y = y;
   131A 21r72s41           4312 	ld	hl, #_cmd + 6
   131D DD 7E FE           4313 	ld	a,-2 (ix)
   1320 77                 4314 	ld	(hl),a
   1321 23                 4315 	inc	hl
   1322 DD 7E FF           4316 	ld	a,-1 (ix)
   1325 77                 4317 	ld	(hl),a
                           4318 ;demo.c:583: vdp_copier(&cmd);
   1326 21r6Cs41           4319 	ld	hl,#_cmd
   1329 E5                 4320 	push	hl
   132A CDr00s00           4321 	call	_vdp_copier
   132D F1                 4322 	pop	af
                           4323 ;demo.c:580: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4324 	ld	a,-2 (ix)
   1331 C6 02              4325 	add	a,#0x02
   1333 DD 77 FE           4326 	ld	-2 (ix),a
   1336 DD 7E FF           4327 	ld	a,-1 (ix)
   1339 CE 00              4328 	adc	a,#0x00
   133B DD 77 FF           4329 	ld	-1 (ix),a
   133E C3rDEs12           4330 	jp	00107$
   1341                    4331 00110$:
                           4332 ;demo.c:587: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21rB8s41           4333 	ld	hl,#_ff + 0
   1344 4E                 4334 	ld	c,(hl)
   1345 21rB9s41           4335 	ld	hl,#_ff + 1
   1348 46                 4336 	ld	b,(hl)
   1349 CB 28              4337 	sra	b
   134B CB 19              4338 	rr	c
   134D CB 28              4339 	sra	b
   134F CB 19              4340 	rr	c
   1351 21rB8s41           4341 	ld	hl,#_ff + 0
   1354 5E                 4342 	ld	e,(hl)
   1355 21rB9s41           4343 	ld	hl,#_ff + 1
   1358 56                 4344 	ld	d,(hl)
   1359 CB 2A              4345 	sra	d
   135B CB 1B              4346 	rr	e
   135D CB 2A              4347 	sra	d
   135F CB 1B              4348 	rr	e
   1361 CB 2A              4349 	sra	d
   1363 CB 1B              4350 	rr	e
   1365 43                 4351 	ld	b,e
   1366 79                 4352 	ld	a,c
   1367 F5                 4353 	push	af
   1368 33                 4354 	inc	sp
   1369 C5                 4355 	push	bc
   136A 33                 4356 	inc	sp
   136B 41                 4357 	ld	b,c
   136C 0E 04              4358 	ld	c,#0x04
   136E C5                 4359 	push	bc
   136F CDr00s00           4360 	call	_msx2_palette
   1372 F1                 4361 	pop	af
   1373 F1                 4362 	pop	af
                           4363 ;demo.c:589: ff+=4;
   1374 21rB8s41           4364 	ld	hl,#_ff
   1377 7E                 4365 	ld	a,(hl)
   1378 C6 04              4366 	add	a,#0x04
   137A 23                 4367 	inc	hl
   137B 2B                 4368 	dec	hl
   137C C5                 4369 	push	bc
   137D 4F                 4370 	ld	c, a
   137E 23                 4371 	inc	hl
   137F 7E                 4372 	ld	a, (hl)
   1380 47                 4373 	ld	b, a
   1381 79                 4374 	ld	a, c
   1382 2B                 4375 	dec	hl
   1383 77                 4376 	ld	(hl), a
   1384 78                 4377 	ld	a, b
   1385 C1                 4378 	pop	bc
   1386 CE 00              4379 	adc	a,#0x00
   1388 23                 4380 	inc	hl
   1389 77                 4381 	ld	(hl),a
   138A DD F9              4382 	ld	sp,ix
   138C DD E1              4383 	pop	ix
   138E C9                 4384 	ret
   138F                    4385 _twister_end::
                           4386 ;demo.c:600: void bulbs() {
                           4387 ;	---------------------------------
                           4388 ; Function bulbs
                           4389 ; ---------------------------------
   138F                    4390 _bulbs_start::
   138F                    4391 _bulbs:
   138F DD E5              4392 	push	ix
   1391 DD 21 00 00        4393 	ld	ix,#0
   1395 DD 39              4394 	add	ix,sp
   1397 21 FA FF           4395 	ld	hl,#-6
   139A 39                 4396 	add	hl,sp
   139B F9                 4397 	ld	sp,hl
                           4398 ;demo.c:604: ender+=enderdir;
   139C 21rC4s41           4399 	ld	hl,#_enderdir
   139F D5                 4400 	push	de
   13A0 FD 21rC2s41        4401 	ld	iy,#_ender
   13A4 FD E5              4402 	push	iy
   13A6 D1                 4403 	pop	de
   13A7 1A                 4404 	ld	a,(de)
   13A8 86                 4405 	add	a,(hl)
   13A9 13                 4406 	inc	de
   13AA 1B                 4407 	dec	de
   13AB C5                 4408 	push	bc
   13AC 4F                 4409 	ld	c, a
   13AD 13                 4410 	inc	de
   13AE 1A                 4411 	ld	a, (de)
   13AF 47                 4412 	ld	b, a
   13B0 79                 4413 	ld	a, c
   13B1 1B                 4414 	dec	de
   13B2 12                 4415 	ld	(de), a
   13B3 78                 4416 	ld	a, b
   13B4 C1                 4417 	pop	bc
   13B5 23                 4418 	inc	hl
   13B6 8E                 4419 	adc	a,(hl)
   13B7 13                 4420 	inc	de
   13B8 12                 4421 	ld	(de),a
   13B9 D1                 4422 	pop	de
                           4423 ;demo.c:605: if (ender < 2) { enderdir = -enderdir; }
   13BA 3ArC2s41           4424 	ld	a,(#_ender+0)
   13BD D6 02              4425 	sub	a,#0x02
   13BF 3ArC3s41           4426 	ld	a,(#_ender+1)
   13C2 DE 00              4427 	sbc	a,#0x00
   13C4 F2rE8s13           4428 	jp	P,00102$
   13C7 AF                 4429 	xor	a,a
   13C8 FD 21rC4s41        4430 	ld	iy,#_enderdir
   13CC 3E 00              4431 	ld	a,#0x00
   13CE FD 9E 00           4432 	sbc	a,0 (iy)
   13D1 FD 21rC4s41        4433 	ld	iy,#_enderdir
   13D5 FD 77 00           4434 	ld	0 (iy),a
   13D8 FD 21rC4s41        4435 	ld	iy,#_enderdir
   13DC 3E 00              4436 	ld	a,#0x00
   13DE FD 9E 01           4437 	sbc	a,1 (iy)
   13E1 FD 21rC4s41        4438 	ld	iy,#_enderdir
   13E5 FD 77 01           4439 	ld	1 (iy),a
   13E8                    4440 00102$:
                           4441 ;demo.c:606: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   13E8 3ArC2s41           4442 	ld	a,(#_ender+0)
   13EB D6 D4              4443 	sub	a,#0xD4
   13ED 3ArC3s41           4444 	ld	a,(#_ender+1)
   13F0 DE 00              4445 	sbc	a,#0x00
   13F2 FAr18s14           4446 	jp	M,00104$
   13F5 AF                 4447 	xor	a,a
   13F6 FD 21rC4s41        4448 	ld	iy,#_enderdir
   13FA 3E 00              4449 	ld	a,#0x00
   13FC FD 9E 00           4450 	sbc	a,0 (iy)
   13FF 21rC4s41           4451 	ld	hl,#_enderdir + 0
   1402 77                 4452 	ld	(hl), a
   1403 FD 21rC4s41        4453 	ld	iy,#_enderdir
   1407 3E 00              4454 	ld	a,#0x00
   1409 FD 9E 01           4455 	sbc	a,1 (iy)
   140C 21rC5s41           4456 	ld	hl,#_enderdir + 1
   140F 77                 4457 	ld	(hl), a
   1410 2ArC6s41           4458 	ld	hl,(_sy)
   1413 2B                 4459 	dec	hl
   1414 2B                 4460 	dec	hl
   1415 22rC6s41           4461 	ld	(_sy),hl
   1418                    4462 00104$:
                           4463 ;demo.c:608: enderend = ender + 92;
   1418 3ArC2s41           4464 	ld	a,(#_ender+0)
   141B C6 5C              4465 	add	a,#0x5C
   141D DD 77 FE           4466 	ld	-2 (ix),a
   1420 3ArC3s41           4467 	ld	a,(#_ender+1)
   1423 CE 00              4468 	adc	a,#0x00
   1425 DD 77 FF           4469 	ld	-1 (ix),a
                           4470 ;demo.c:610: if (enderend > 212) enderend = 212;
   1428 3E D4              4471 	ld	a,#0xD4
   142A DD 96 FE           4472 	sub	a,-2 (ix)
   142D 3E 00              4473 	ld	a,#0x00
   142F DD 9E FF           4474 	sbc	a,-1 (ix)
   1432 F2r3Ds14           4475 	jp	P,00106$
   1435 DD 36 FE D4        4476 	ld	-2 (ix),#0xD4
   1439 DD 36 FF 00        4477 	ld	-1 (ix),#0x00
   143D                    4478 00106$:
                           4479 ;demo.c:611: if (enderend > 212-16) sy = 16-(212-enderend);
   143D 3E C4              4480 	ld	a,#0xC4
   143F DD 96 FE           4481 	sub	a,-2 (ix)
   1442 3E 00              4482 	ld	a,#0x00
   1444 DD 9E FF           4483 	sbc	a,-1 (ix)
   1447 F2r62s14           4484 	jp	P,00108$
   144A 3E D4              4485 	ld	a,#0xD4
   144C DD 96 FE           4486 	sub	a,-2 (ix)
   144F 5F                 4487 	ld	e,a
   1450 3E 00              4488 	ld	a,#0x00
   1452 DD 9E FF           4489 	sbc	a,-1 (ix)
   1455 57                 4490 	ld	d,a
   1456 21rC6s41           4491 	ld	hl,#_sy
   1459 3E 10              4492 	ld	a,#0x10
   145B 93                 4493 	sub	a,e
   145C 77                 4494 	ld	(hl),a
   145D 3E 00              4495 	ld	a,#0x00
   145F 9A                 4496 	sbc	a,d
   1460 23                 4497 	inc	hl
   1461 77                 4498 	ld	(hl),a
   1462                    4499 00108$:
                           4500 ;demo.c:613: if(bulbflipper == 1) {
   1462 3ArBCs41           4501 	ld	a,(#_bulbflipper+0)
   1465 D6 01              4502 	sub	a,#0x01
   1467 20 06              4503 	jr	NZ,00133$
   1469 3ArBDs41           4504 	ld	a,(#_bulbflipper+1)
   146C B7                 4505 	or	a,a
   146D 28 03              4506 	jr	Z,00134$
   146F                    4507 00133$:
   146F C3r28s15           4508 	jp	00110$
   1472                    4509 00134$:
                           4510 ;demo.c:614: cmd.size_x = 72;
   1472 11r74s41           4511 	ld	de,#_cmd + 8
   1475 EB                 4512 	ex	de,hl
   1476 36 48              4513 	ld	(hl),#0x48
   1478 23                 4514 	inc	hl
   1479 36 00              4515 	ld	(hl),#0x00
                           4516 ;demo.c:615: cmd.size_y = sy;
   147B 11r76s41           4517 	ld	de,#_cmd + 10
   147E ED 4BrC6s41        4518 	ld	bc,(_sy)
   1482 6B                 4519 	ld	l,e
   1483 62                 4520 	ld	h,d
   1484 71                 4521 	ld	(hl),c
   1485 23                 4522 	inc	hl
   1486 70                 4523 	ld	(hl),b
                           4524 ;demo.c:616: cmd.data = 0;
   1487 3E 00              4525 	ld	a,#0x00
   1489 32r78s41           4526 	ld	(#_cmd + 12),a
                           4527 ;demo.c:617: cmd.argument = 0x04; // from 72xY to left
   148C 3E 04              4528 	ld	a,#0x04
   148E 32r79s41           4529 	ld	(#_cmd + 13),a
                           4530 ;demo.c:618: cmd.command = 0xe0; // vram to vram, y only
   1491 01r7As41           4531 	ld	bc,#_cmd + 14
   1494 3E E0              4532 	ld	a,#0xE0
   1496 02                 4533 	ld	(bc),a
                           4534 ;demo.c:619: cmd.source_x = 72;
   1497 21r6Cs41           4535 	ld	hl,#_cmd
   149A 36 48              4536 	ld	(hl),#0x48
   149C 23                 4537 	inc	hl
   149D 36 00              4538 	ld	(hl),#0x00
                           4539 ;demo.c:620: cmd.dest_x = 72;
   149F 21r70s41           4540 	ld	hl, #_cmd + 4
   14A2 36 48              4541 	ld	(hl),#0x48
   14A4 23                 4542 	inc	hl
   14A5 36 00              4543 	ld	(hl),#0x00
                           4544 ;demo.c:622: for (y = ender; y < enderend; y+=16) {
   14A7 ED 4BrC2s41        4545 	ld	bc,(_ender)
   14AB DD 71 FC           4546 	ld	-4 (ix),c
   14AE DD 70 FD           4547 	ld	-3 (ix),b
   14B1                    4548 00112$:
   14B1 DD 7E FC           4549 	ld	a,-4 (ix)
   14B4 DD 96 FE           4550 	sub	a,-2 (ix)
   14B7 DD 7E FD           4551 	ld	a,-3 (ix)
   14BA DD 9E FF           4552 	sbc	a,-1 (ix)
   14BD F2r0Fs15           4553 	jp	P,00115$
                           4554 ;demo.c:623: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   14C0 01r6Es41           4555 	ld	bc,#_cmd + 2
   14C3 3ArBEs41           4556 	ld	a,(#_ff1+0)
   14C6 DD 86 FC           4557 	add	a,-4 (ix)
   14C9 5F                 4558 	ld	e,a
   14CA 3ArBFs41           4559 	ld	a,(#_ff1+1)
   14CD DD 8E FD           4560 	adc	a,-3 (ix)
   14D0 16 00              4561 	ld	d,#0x00
   14D2 21r00s00           4562 	ld	hl,#_sintab
   14D5 19                 4563 	add	hl,de
   14D6 5E                 4564 	ld	e,(hl)
   14D7 CB 2B              4565 	sra	e
   14D9 7B                 4566 	ld	a,e
   14DA 17                 4567 	rla	
   14DB 9F                 4568 	sbc	a,a
   14DC 57                 4569 	ld	d,a
   14DD 21 40 01           4570 	ld	hl,#0x0140
   14E0 19                 4571 	add	hl,de
   14E1 EB                 4572 	ex	de,hl
   14E2 69                 4573 	ld	l,c
   14E3 60                 4574 	ld	h,b
   14E4 73                 4575 	ld	(hl),e
   14E5 23                 4576 	inc	hl
   14E6 72                 4577 	ld	(hl),d
                           4578 ;demo.c:624: cmd.dest_y = y;
   14E7 11r72s41           4579 	ld	de,#_cmd + 6
   14EA EB                 4580 	ex	de,hl
   14EB DD 7E FC           4581 	ld	a,-4 (ix)
   14EE 77                 4582 	ld	(hl),a
   14EF 23                 4583 	inc	hl
   14F0 DD 7E FD           4584 	ld	a,-3 (ix)
   14F3 77                 4585 	ld	(hl),a
                           4586 ;demo.c:625: vdp_copier(&cmd);
   14F4 21r6Cs41           4587 	ld	hl,#_cmd
   14F7 E5                 4588 	push	hl
   14F8 CDr00s00           4589 	call	_vdp_copier
   14FB F1                 4590 	pop	af
                           4591 ;demo.c:622: for (y = ender; y < enderend; y+=16) {
   14FC DD 7E FC           4592 	ld	a,-4 (ix)
   14FF C6 10              4593 	add	a,#0x10
   1501 DD 77 FC           4594 	ld	-4 (ix),a
   1504 DD 7E FD           4595 	ld	a,-3 (ix)
   1507 CE 00              4596 	adc	a,#0x00
   1509 DD 77 FD           4597 	ld	-3 (ix),a
   150C C3rB1s14           4598 	jp	00112$
   150F                    4599 00115$:
                           4600 ;demo.c:627: ff1+=4;
   150F 21rBEs41           4601 	ld	hl,#_ff1
   1512 7E                 4602 	ld	a,(hl)
   1513 C6 04              4603 	add	a,#0x04
   1515 23                 4604 	inc	hl
   1516 2B                 4605 	dec	hl
   1517 C5                 4606 	push	bc
   1518 4F                 4607 	ld	c, a
   1519 23                 4608 	inc	hl
   151A 7E                 4609 	ld	a, (hl)
   151B 47                 4610 	ld	b, a
   151C 79                 4611 	ld	a, c
   151D 2B                 4612 	dec	hl
   151E 77                 4613 	ld	(hl), a
   151F 78                 4614 	ld	a, b
   1520 C1                 4615 	pop	bc
   1521 CE 00              4616 	adc	a,#0x00
   1523 23                 4617 	inc	hl
   1524 77                 4618 	ld	(hl),a
   1525 C3rCDs15           4619 	jp	00111$
   1528                    4620 00110$:
                           4621 ;demo.c:631: cmd.size_x = 72;
   1528 11r74s41           4622 	ld	de,#_cmd + 8
   152B EB                 4623 	ex	de,hl
   152C 36 48              4624 	ld	(hl),#0x48
   152E 23                 4625 	inc	hl
   152F 36 00              4626 	ld	(hl),#0x00
                           4627 ;demo.c:632: cmd.size_y = sy;
   1531 01r76s41           4628 	ld	bc,#_cmd + 10
   1534 ED 5BrC6s41        4629 	ld	de,(_sy)
   1538 69                 4630 	ld	l,c
   1539 60                 4631 	ld	h,b
   153A 73                 4632 	ld	(hl),e
   153B 23                 4633 	inc	hl
   153C 72                 4634 	ld	(hl),d
                           4635 ;demo.c:633: cmd.data = 0;
   153D 11r78s41           4636 	ld	de,#_cmd + 12
   1540 3E 00              4637 	ld	a,#0x00
   1542 12                 4638 	ld	(de),a
                           4639 ;demo.c:634: cmd.argument = 0x00; // from 182xY to right
   1543 11r79s41           4640 	ld	de,#_cmd + 13
   1546 3E 00              4641 	ld	a,#0x00
   1548 12                 4642 	ld	(de),a
                           4643 ;demo.c:635: cmd.command = 0xe0; // vram to vram, y only
   1549 11r7As41           4644 	ld	de,#_cmd + 14
   154C 3E E0              4645 	ld	a,#0xE0
   154E 12                 4646 	ld	(de),a
                           4647 ;demo.c:636: cmd.source_x = 182;
   154F 21r6Cs41           4648 	ld	hl,#_cmd
   1552 36 B6              4649 	ld	(hl),#0xB6
   1554 23                 4650 	inc	hl
   1555 36 00              4651 	ld	(hl),#0x00
                           4652 ;demo.c:637: cmd.dest_x = 182;
   1557 11r70s41           4653 	ld	de,#_cmd + 4
   155A 6B                 4654 	ld	l,e
   155B 62                 4655 	ld	h,d
   155C 36 B6              4656 	ld	(hl),#0xB6
   155E 23                 4657 	inc	hl
   155F 36 00              4658 	ld	(hl),#0x00
                           4659 ;demo.c:639: for (y = ender; y < enderend; y+=16) {
   1561 ED 4BrC2s41        4660 	ld	bc,(_ender)
   1565                    4661 00116$:
   1565 79                 4662 	ld	a,c
   1566 DD 96 FE           4663 	sub	a,-2 (ix)
   1569 78                 4664 	ld	a,b
   156A DD 9E FF           4665 	sbc	a,-1 (ix)
   156D F2rB7s15           4666 	jp	P,00119$
                           4667 ;demo.c:640: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1570 21r6Es41           4668 	ld	hl,#_cmd + 2
   1573 DD 75 FA           4669 	ld	-6 (ix),l
   1576 DD 74 FB           4670 	ld	-5 (ix),h
   1579 3ArC0s41           4671 	ld	a,(#_ff2+0)
   157C 81                 4672 	add	a,c
   157D 5F                 4673 	ld	e,a
   157E 3ArC1s41           4674 	ld	a,(#_ff2+1)
   1581 88                 4675 	adc	a,b
   1582 16 00              4676 	ld	d,#0x00
   1584 21r00s00           4677 	ld	hl,#_sintab
   1587 19                 4678 	add	hl,de
   1588 5E                 4679 	ld	e,(hl)
   1589 CB 2B              4680 	sra	e
   158B 7B                 4681 	ld	a,e
   158C 17                 4682 	rla	
   158D 9F                 4683 	sbc	a,a
   158E 57                 4684 	ld	d,a
   158F 21 40 01           4685 	ld	hl,#0x0140
   1592 19                 4686 	add	hl,de
   1593 EB                 4687 	ex	de,hl
   1594 DD 6E FA           4688 	ld	l,-6 (ix)
   1597 DD 66 FB           4689 	ld	h,-5 (ix)
   159A 73                 4690 	ld	(hl),e
   159B 23                 4691 	inc	hl
   159C 72                 4692 	ld	(hl),d
                           4693 ;demo.c:641: cmd.dest_y = y;
   159D 11r72s41           4694 	ld	de,#_cmd + 6
   15A0 EB                 4695 	ex	de,hl
   15A1 71                 4696 	ld	(hl),c
   15A2 23                 4697 	inc	hl
   15A3 70                 4698 	ld	(hl),b
                           4699 ;demo.c:642: vdp_copier(&cmd);
   15A4 C5                 4700 	push	bc
   15A5 21r6Cs41           4701 	ld	hl,#_cmd
   15A8 E5                 4702 	push	hl
   15A9 CDr00s00           4703 	call	_vdp_copier
   15AC F1                 4704 	pop	af
   15AD C1                 4705 	pop	bc
                           4706 ;demo.c:639: for (y = ender; y < enderend; y+=16) {
   15AE 21 10 00           4707 	ld	hl,#0x0010
   15B1 09                 4708 	add	hl,bc
   15B2 4D                 4709 	ld	c,l
   15B3 44                 4710 	ld	b,h
   15B4 C3r65s15           4711 	jp	00116$
   15B7                    4712 00119$:
                           4713 ;demo.c:644: ff2+=4;
   15B7 21rC0s41           4714 	ld	hl,#_ff2
   15BA 7E                 4715 	ld	a,(hl)
   15BB C6 04              4716 	add	a,#0x04
   15BD 23                 4717 	inc	hl
   15BE 2B                 4718 	dec	hl
   15BF C5                 4719 	push	bc
   15C0 4F                 4720 	ld	c, a
   15C1 23                 4721 	inc	hl
   15C2 7E                 4722 	ld	a, (hl)
   15C3 47                 4723 	ld	b, a
   15C4 79                 4724 	ld	a, c
   15C5 2B                 4725 	dec	hl
   15C6 77                 4726 	ld	(hl), a
   15C7 78                 4727 	ld	a, b
   15C8 C1                 4728 	pop	bc
   15C9 CE 00              4729 	adc	a,#0x00
   15CB 23                 4730 	inc	hl
   15CC 77                 4731 	ld	(hl),a
   15CD                    4732 00111$:
                           4733 ;demo.c:647: bulbflipper = -bulbflipper;
   15CD AF                 4734 	xor	a,a
   15CE FD 21rBCs41        4735 	ld	iy,#_bulbflipper
   15D2 3E 00              4736 	ld	a,#0x00
   15D4 FD 9E 00           4737 	sbc	a,0 (iy)
   15D7 21rBCs41           4738 	ld	hl,#_bulbflipper + 0
   15DA 77                 4739 	ld	(hl), a
   15DB FD 21rBCs41        4740 	ld	iy,#_bulbflipper
   15DF 3E 00              4741 	ld	a,#0x00
   15E1 FD 9E 01           4742 	sbc	a,1 (iy)
   15E4 21rBDs41           4743 	ld	hl,#_bulbflipper + 1
   15E7 77                 4744 	ld	(hl), a
   15E8 DD F9              4745 	ld	sp,ix
   15EA DD E1              4746 	pop	ix
   15EC C9                 4747 	ret
   15ED                    4748 _bulbs_end::
                           4749 ;demo.c:661: void animplay() {
                           4750 ;	---------------------------------
                           4751 ; Function animplay
                           4752 ; ---------------------------------
   15ED                    4753 _animplay_start::
   15ED                    4754 _animplay:
   15ED DD E5              4755 	push	ix
   15EF DD 21 00 00        4756 	ld	ix,#0
   15F3 DD 39              4757 	add	ix,sp
   15F5 F5                 4758 	push	af
   15F6 3B                 4759 	dec	sp
                           4760 ;demo.c:666: if (anim_init == 0) {
   15F7 3ArD0s41           4761 	ld	a,(#_anim_init+0)
   15FA 21rD1s41           4762 	ld	hl,#_anim_init + 1
   15FD B6                 4763 	or	a,(hl)
   15FE C2r93s17           4764 	jp	NZ,00120$
                           4765 ;demo.c:667: drawsine("L O A D I N G",8,100);
   1601 21 08 64           4766 	ld	hl,#0x6408
   1604 E5                 4767 	push	hl
   1605 21r7Bs18           4768 	ld	hl,#__str_9
   1608 E5                 4769 	push	hl
   1609 CDr20s11           4770 	call	_drawsine
   160C F1                 4771 	pop	af
   160D F1                 4772 	pop	af
                           4773 ;demo.c:670: uninstall_isr();
   160E CDr00s00           4774 	call	_uninstall_isr
                           4775 ;demo.c:671: PLY_Stop();
   1611 CDr00s00           4776 	call	_PLY_Stop
                           4777 ;demo.c:672: PLY_SendRegisters();
   1614 CDr00s00           4778 	call	_PLY_SendRegisters
                           4779 ;demo.c:674: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1617 21 00 00           4780 	ld	hl,#0x0000
   161A E5                 4781 	push	hl
   161B 2E 01              4782 	ld	l, #0x01
   161D E5                 4783 	push	hl
   161E 2E 00              4784 	ld	l, #0x00
   1620 E5                 4785 	push	hl
   1621 21 09 37           4786 	ld	hl,#0x3709
   1624 E5                 4787 	push	hl
   1625 21r89s18           4788 	ld	hl,#__str_10
   1628 E5                 4789 	push	hl
   1629 CDr99s09           4790 	call	_pck_load
   162C FD 21 0A 00        4791 	ld	iy,#0x000A
   1630 FD 39              4792 	add	iy,sp
   1632 FD F9              4793 	ld	sp,iy
                           4794 ;demo.c:677: scratch_clear();
   1634 CDr90s07           4795 	call	_scratch_clear
                           4796 ;demo.c:678: vdp_load_palette(scratch);
   1637 21r48s40           4797 	ld	hl,#_scratch
   163A E5                 4798 	push	hl
   163B CDr00s00           4799 	call	_vdp_load_palette
   163E F1                 4800 	pop	af
                           4801 ;demo.c:680: cmd.size_x = 256;
   163F 21r74s41           4802 	ld	hl, #_cmd + 8
   1642 36 00              4803 	ld	(hl),#0x00
   1644 23                 4804 	inc	hl
   1645 36 01              4805 	ld	(hl),#0x01
                           4806 ;demo.c:681: cmd.size_y = 212;
   1647 21r76s41           4807 	ld	hl, #_cmd + 10
   164A 36 D4              4808 	ld	(hl),#0xD4
   164C 23                 4809 	inc	hl
   164D 36 00              4810 	ld	(hl),#0x00
                           4811 ;demo.c:682: cmd.data = 0;
                           4812 ;demo.c:683: cmd.argument = 0x00;
   164F 3E 00              4813 	ld	a,#0x00
   1651 32r78s41           4814 	ld	(#_cmd + 12),a
   1654 32r79s41           4815 	ld	(#_cmd + 13),a
                           4816 ;demo.c:684: cmd.command = 0xd0; 
   1657 01r7As41           4817 	ld	bc,#_cmd + 14
   165A 3E D0              4818 	ld	a,#0xD0
   165C 02                 4819 	ld	(bc),a
                           4820 ;demo.c:685: cmd.source_x = 0;
   165D 21r6Cs41           4821 	ld	hl,#_cmd
   1660 36 00              4822 	ld	(hl),#0x00
   1662 23                 4823 	inc	hl
   1663 36 00              4824 	ld	(hl),#0x00
                           4825 ;demo.c:686: cmd.source_y = 0;
   1665 21r6Es41           4826 	ld	hl, #_cmd + 2
   1668 36 00              4827 	ld	(hl),#0x00
   166A 23                 4828 	inc	hl
   166B 36 00              4829 	ld	(hl),#0x00
                           4830 ;demo.c:687: cmd.dest_x = 0;
   166D 21r70s41           4831 	ld	hl, #_cmd + 4
   1670 36 00              4832 	ld	(hl),#0x00
   1672 23                 4833 	inc	hl
   1673 36 00              4834 	ld	(hl),#0x00
                           4835 ;demo.c:688: cmd.dest_y = 256;
   1675 21r72s41           4836 	ld	hl, #_cmd + 6
   1678 36 00              4837 	ld	(hl),#0x00
   167A 23                 4838 	inc	hl
   167B 36 01              4839 	ld	(hl),#0x01
                           4840 ;demo.c:689: vdp_copier(&cmd);
   167D 21r6Cs41           4841 	ld	hl,#_cmd
   1680 E5                 4842 	push	hl
   1681 CDr00s00           4843 	call	_vdp_copier
   1684 F1                 4844 	pop	af
                           4845 ;demo.c:691: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1685 21 00 00           4846 	ld	hl,#0x0000
   1688 E5                 4847 	push	hl
   1689 2E 01              4848 	ld	l, #0x01
   168B E5                 4849 	push	hl
   168C 2E 00              4850 	ld	l, #0x00
   168E E5                 4851 	push	hl
   168F 21 76 3E           4852 	ld	hl,#0x3E76
   1692 E5                 4853 	push	hl
   1693 21r95s18           4854 	ld	hl,#__str_11
   1696 E5                 4855 	push	hl
   1697 CDr99s09           4856 	call	_pck_load
   169A FD 21 0A 00        4857 	ld	iy,#0x000A
   169E FD 39              4858 	add	iy,sp
   16A0 FD F9              4859 	ld	sp,iy
                           4860 ;demo.c:693: cmd.size_x = 256;
   16A2 21r74s41           4861 	ld	hl, #_cmd + 8
   16A5 36 00              4862 	ld	(hl),#0x00
   16A7 23                 4863 	inc	hl
   16A8 36 01              4864 	ld	(hl),#0x01
                           4865 ;demo.c:694: cmd.size_y = 212;
   16AA 21r76s41           4866 	ld	hl, #_cmd + 10
   16AD 36 D4              4867 	ld	(hl),#0xD4
   16AF 23                 4868 	inc	hl
   16B0 36 00              4869 	ld	(hl),#0x00
                           4870 ;demo.c:695: cmd.data = 0;
                           4871 ;demo.c:696: cmd.argument = 0x00;
   16B2 3E 00              4872 	ld	a,#0x00
   16B4 32r78s41           4873 	ld	(#_cmd + 12),a
   16B7 32r79s41           4874 	ld	(#_cmd + 13),a
                           4875 ;demo.c:697: cmd.command = 0xd0; 
   16BA 01r7As41           4876 	ld	bc,#_cmd + 14
   16BD 3E D0              4877 	ld	a,#0xD0
   16BF 02                 4878 	ld	(bc),a
                           4879 ;demo.c:698: cmd.source_x = 0;
   16C0 21r6Cs41           4880 	ld	hl,#_cmd
   16C3 36 00              4881 	ld	(hl),#0x00
   16C5 23                 4882 	inc	hl
   16C6 36 00              4883 	ld	(hl),#0x00
                           4884 ;demo.c:699: cmd.source_y = 0;
   16C8 21r6Es41           4885 	ld	hl, #_cmd + 2
   16CB 36 00              4886 	ld	(hl),#0x00
   16CD 23                 4887 	inc	hl
   16CE 36 00              4888 	ld	(hl),#0x00
                           4889 ;demo.c:700: cmd.dest_x = 0;
   16D0 21r70s41           4890 	ld	hl, #_cmd + 4
   16D3 36 00              4891 	ld	(hl),#0x00
   16D5 23                 4892 	inc	hl
   16D6 36 00              4893 	ld	(hl),#0x00
                           4894 ;demo.c:701: cmd.dest_y = 512;
   16D8 21r72s41           4895 	ld	hl, #_cmd + 6
   16DB 36 00              4896 	ld	(hl),#0x00
   16DD 23                 4897 	inc	hl
   16DE 36 02              4898 	ld	(hl),#0x02
                           4899 ;demo.c:702: vdp_copier(&cmd);
   16E0 21r6Cs41           4900 	ld	hl,#_cmd
   16E3 E5                 4901 	push	hl
   16E4 CDr00s00           4902 	call	_vdp_copier
   16E7 F1                 4903 	pop	af
                           4904 ;demo.c:705: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   16E8 21 00 00           4905 	ld	hl,#0x0000
   16EB E5                 4906 	push	hl
   16EC 2E 01              4907 	ld	l, #0x01
   16EE E5                 4908 	push	hl
   16EF 2E 00              4909 	ld	l, #0x00
   16F1 E5                 4910 	push	hl
   16F2 21 9E 3A           4911 	ld	hl,#0x3A9E
   16F5 E5                 4912 	push	hl
   16F6 21rA1s18           4913 	ld	hl,#__str_12
   16F9 E5                 4914 	push	hl
   16FA CDr99s09           4915 	call	_pck_load
   16FD FD 21 0A 00        4916 	ld	iy,#0x000A
   1701 FD 39              4917 	add	iy,sp
   1703 FD F9              4918 	ld	sp,iy
                           4919 ;demo.c:707: cmd.size_x = 256;
   1705 21r74s41           4920 	ld	hl, #_cmd + 8
   1708 36 00              4921 	ld	(hl),#0x00
   170A 23                 4922 	inc	hl
   170B 36 01              4923 	ld	(hl),#0x01
                           4924 ;demo.c:708: cmd.size_y = 212;
   170D 21r76s41           4925 	ld	hl, #_cmd + 10
   1710 36 D4              4926 	ld	(hl),#0xD4
   1712 23                 4927 	inc	hl
   1713 36 00              4928 	ld	(hl),#0x00
                           4929 ;demo.c:709: cmd.data = 0;
                           4930 ;demo.c:710: cmd.argument = 0x00;
   1715 3E 00              4931 	ld	a,#0x00
   1717 32r78s41           4932 	ld	(#_cmd + 12),a
   171A 32r79s41           4933 	ld	(#_cmd + 13),a
                           4934 ;demo.c:711: cmd.command = 0xd0; 
   171D 01r7As41           4935 	ld	bc,#_cmd + 14
   1720 3E D0              4936 	ld	a,#0xD0
   1722 02                 4937 	ld	(bc),a
                           4938 ;demo.c:712: cmd.source_x = 0;
   1723 21r6Cs41           4939 	ld	hl,#_cmd
   1726 36 00              4940 	ld	(hl),#0x00
   1728 23                 4941 	inc	hl
   1729 36 00              4942 	ld	(hl),#0x00
                           4943 ;demo.c:713: cmd.source_y = 0;
   172B 21r6Es41           4944 	ld	hl, #_cmd + 2
   172E 36 00              4945 	ld	(hl),#0x00
   1730 23                 4946 	inc	hl
   1731 36 00              4947 	ld	(hl),#0x00
                           4948 ;demo.c:714: cmd.dest_x = 0;
   1733 21r70s41           4949 	ld	hl, #_cmd + 4
   1736 36 00              4950 	ld	(hl),#0x00
   1738 23                 4951 	inc	hl
   1739 36 00              4952 	ld	(hl),#0x00
                           4953 ;demo.c:715: cmd.dest_y = 768;
   173B 21r72s41           4954 	ld	hl, #_cmd + 6
   173E 36 00              4955 	ld	(hl),#0x00
   1740 23                 4956 	inc	hl
   1741 36 03              4957 	ld	(hl),#0x03
                           4958 ;demo.c:716: vdp_copier(&cmd);
   1743 21r6Cs41           4959 	ld	hl,#_cmd
   1746 E5                 4960 	push	hl
   1747 CDr00s00           4961 	call	_vdp_copier
   174A F1                 4962 	pop	af
                           4963 ;demo.c:718: vdp_register(9,130); // 50hz,212
   174B 21 09 82           4964 	ld	hl,#0x8209
   174E E5                 4965 	push	hl
   174F CDr00s00           4966 	call	_vdp_register
   1752 F1                 4967 	pop	af
                           4968 ;demo.c:720: scratch_clear();
   1753 CDr90s07           4969 	call	_scratch_clear
                           4970 ;demo.c:722: vdp_set_write_address(0, 0);
   1756 21 00 00           4971 	ld	hl,#0x0000
   1759 E5                 4972 	push	hl
   175A 3E 00              4973 	ld	a,#0x00
   175C F5                 4974 	push	af
   175D 33                 4975 	inc	sp
   175E CDr00s00           4976 	call	_vdp_set_write_address
   1761 F1                 4977 	pop	af
   1762 33                 4978 	inc	sp
                           4979 ;demo.c:724: for (y = 0; y < 212; y++) { 
   1763 0E D4              4980 	ld	c,#0xD4
   1765                    4981 00109$:
                           4982 ;demo.c:725: vdp_load_screen(scratch, 128);
   1765 C5                 4983 	push	bc
   1766 3E 80              4984 	ld	a,#0x80
   1768 F5                 4985 	push	af
   1769 33                 4986 	inc	sp
   176A 21r48s40           4987 	ld	hl,#_scratch
   176D E5                 4988 	push	hl
   176E CDr00s00           4989 	call	_vdp_load_screen
   1771 F1                 4990 	pop	af
   1772 33                 4991 	inc	sp
   1773 C1                 4992 	pop	bc
   1774 0D                 4993 	dec	c
                           4994 ;demo.c:724: for (y = 0; y < 212; y++) { 
   1775 AF                 4995 	xor	a,a
   1776 B1                 4996 	or	a,c
   1777 20 EC              4997 	jr	NZ,00109$
                           4998 ;demo.c:728: install_isr(my_isr);
   1779 21rECs05           4999 	ld	hl,#_my_isr
   177C E5                 5000 	push	hl
   177D CDr00s00           5001 	call	_install_isr
   1780 F1                 5002 	pop	af
                           5003 ;demo.c:729: anim_init = 1;
   1781 21rD0s41           5004 	ld	hl,#_anim_init + 0
   1784 36 01              5005 	ld	(hl), #0x01
   1786 21rD1s41           5006 	ld	hl,#_anim_init + 1
   1789 36 00              5007 	ld	(hl), #0x00
                           5008 ;demo.c:730: vdp_load_palette(tf_palette);
   178B 21r28s41           5009 	ld	hl,#_tf_palette
   178E E5                 5010 	push	hl
   178F CDr00s00           5011 	call	_vdp_load_palette
   1792 F1                 5012 	pop	af
                           5013 ;demo.c:733: for (y = 0; y < 106; y+=1) {
   1793                    5014 00120$:
   1793 DD 36 FF 00        5015 	ld	-1 (ix),#0x00
   1797                    5016 00110$:
   1797 DD 7E FF           5017 	ld	a,-1 (ix)
   179A D6 6A              5018 	sub	a,#0x6A
   179C D2r1Cs18           5019 	jp	NC,00113$
                           5020 ;demo.c:734: cmd.source_x = 0;
   179F 21r6Cs41           5021 	ld	hl,#_cmd
   17A2 36 00              5022 	ld	(hl),#0x00
   17A4 23                 5023 	inc	hl
   17A5 36 00              5024 	ld	(hl),#0x00
                           5025 ;demo.c:735: cmd.source_y = 256+po+frames+(y>>1);
   17A7 11r6Es41           5026 	ld	de,#_cmd + 2
   17AA 3ArCCs41           5027 	ld	a,(#_po+0)
   17AD 4F                 5028 	ld	c,a
   17AE 3ArCDs41           5029 	ld	a,(#_po+1)
   17B1 C6 01              5030 	add	a,#0x01
   17B3 47                 5031 	ld	b,a
   17B4 21rCEs41           5032 	ld	hl,#_frames
   17B7 79                 5033 	ld	a,c
   17B8 86                 5034 	add	a,(hl)
   17B9 DD 77 FD           5035 	ld	-3 (ix),a
   17BC 78                 5036 	ld	a,b
   17BD 23                 5037 	inc	hl
   17BE 8E                 5038 	adc	a,(hl)
   17BF DD 77 FE           5039 	ld	-2 (ix),a
   17C2 DD 4E FF           5040 	ld	c,-1 (ix)
   17C5 CB 39              5041 	srl	c
   17C7 06 00              5042 	ld	b,#0x00
   17C9 DD 7E FD           5043 	ld	a,-3 (ix)
   17CC 81                 5044 	add	a,c
   17CD 4F                 5045 	ld	c,a
   17CE DD 7E FE           5046 	ld	a,-2 (ix)
   17D1 88                 5047 	adc	a,b
   17D2 47                 5048 	ld	b,a
   17D3 6B                 5049 	ld	l,e
   17D4 62                 5050 	ld	h,d
   17D5 71                 5051 	ld	(hl),c
   17D6 23                 5052 	inc	hl
   17D7 70                 5053 	ld	(hl),b
                           5054 ;demo.c:736: cmd.dest_x = 0;
   17D8 21r70s41           5055 	ld	hl, #_cmd + 4
   17DB 36 00              5056 	ld	(hl),#0x00
   17DD 23                 5057 	inc	hl
   17DE 36 00              5058 	ld	(hl),#0x00
                           5059 ;demo.c:737: cmd.dest_y = (y<<1);
   17E0 01r72s41           5060 	ld	bc,#_cmd + 6
   17E3 DD 5E FF           5061 	ld	e,-1 (ix)
   17E6 16 00              5062 	ld	d,#0x00
   17E8 CB 23              5063 	sla	e
   17EA CB 12              5064 	rl	d
   17EC 69                 5065 	ld	l,c
   17ED 60                 5066 	ld	h,b
   17EE 73                 5067 	ld	(hl),e
   17EF 23                 5068 	inc	hl
   17F0 72                 5069 	ld	(hl),d
                           5070 ;demo.c:738: cmd.size_x = 256;
   17F1 21r74s41           5071 	ld	hl, #_cmd + 8
   17F4 36 00              5072 	ld	(hl),#0x00
   17F6 23                 5073 	inc	hl
   17F7 36 01              5074 	ld	(hl),#0x01
                           5075 ;demo.c:739: cmd.size_y = 1;
   17F9 21r76s41           5076 	ld	hl, #_cmd + 10
   17FC 36 01              5077 	ld	(hl),#0x01
   17FE 23                 5078 	inc	hl
   17FF 36 00              5079 	ld	(hl),#0x00
                           5080 ;demo.c:740: cmd.data = 0;
                           5081 ;demo.c:741: cmd.argument = 0x00;
   1801 3E 00              5082 	ld	a,#0x00
   1803 32r78s41           5083 	ld	(#_cmd + 12),a
   1806 32r79s41           5084 	ld	(#_cmd + 13),a
                           5085 ;demo.c:742: cmd.command = 0xD0;
   1809 3E D0              5086 	ld	a,#0xD0
   180B 32r7As41           5087 	ld	(#_cmd + 14),a
                           5088 ;demo.c:743: vdp_copier(&cmd);
   180E 21r6Cs41           5089 	ld	hl,#_cmd
   1811 E5                 5090 	push	hl
   1812 CDr00s00           5091 	call	_vdp_copier
   1815 F1                 5092 	pop	af
                           5093 ;demo.c:733: for (y = 0; y < 106; y+=1) {
   1816 DD 34 FF           5094 	inc	-1 (ix)
   1819 C3r97s17           5095 	jp	00110$
   181C                    5096 00113$:
                           5097 ;demo.c:746: frames+=53;
   181C 21rCEs41           5098 	ld	hl,#_frames
   181F 7E                 5099 	ld	a,(hl)
   1820 C6 35              5100 	add	a,#0x35
   1822 23                 5101 	inc	hl
   1823 2B                 5102 	dec	hl
   1824 C5                 5103 	push	bc
   1825 4F                 5104 	ld	c, a
   1826 23                 5105 	inc	hl
   1827 7E                 5106 	ld	a, (hl)
   1828 47                 5107 	ld	b, a
   1829 79                 5108 	ld	a, c
   182A 2B                 5109 	dec	hl
   182B 77                 5110 	ld	(hl), a
   182C 78                 5111 	ld	a, b
   182D C1                 5112 	pop	bc
   182E CE 00              5113 	adc	a,#0x00
   1830 23                 5114 	inc	hl
   1831 77                 5115 	ld	(hl),a
                           5116 ;demo.c:747: if (frames >= 212) { frames = 0; po+=256; }
   1832 3ArCEs41           5117 	ld	a,(#_frames+0)
   1835 D6 D4              5118 	sub	a,#0xD4
   1837 3ArCFs41           5119 	ld	a,(#_frames+1)
   183A DE 00              5120 	sbc	a,#0x00
   183C FAr5Fs18           5121 	jp	M,00104$
   183F 21rCEs41           5122 	ld	hl,#_frames + 0
   1842 36 00              5123 	ld	(hl), #0x00
   1844 21rCFs41           5124 	ld	hl,#_frames + 1
   1847 36 00              5125 	ld	(hl), #0x00
   1849 21rCCs41           5126 	ld	hl,#_po
   184C 7E                 5127 	ld	a,(hl)
   184D C6 00              5128 	add	a,#0x00
   184F 23                 5129 	inc	hl
   1850 2B                 5130 	dec	hl
   1851 C5                 5131 	push	bc
   1852 4F                 5132 	ld	c, a
   1853 23                 5133 	inc	hl
   1854 7E                 5134 	ld	a, (hl)
   1855 47                 5135 	ld	b, a
   1856 79                 5136 	ld	a, c
   1857 2B                 5137 	dec	hl
   1858 77                 5138 	ld	(hl), a
   1859 78                 5139 	ld	a, b
   185A C1                 5140 	pop	bc
   185B CE 01              5141 	adc	a,#0x01
   185D 23                 5142 	inc	hl
   185E 77                 5143 	ld	(hl),a
   185F                    5144 00104$:
                           5145 ;demo.c:748: if (po >= 768) {
   185F 3ArCCs41           5146 	ld	a,(#_po+0)
   1862 D6 00              5147 	sub	a,#0x00
   1864 3ArCDs41           5148 	ld	a,(#_po+1)
   1867 DE 03              5149 	sbc	a,#0x03
   1869 FAr76s18           5150 	jp	M,00114$
                           5151 ;demo.c:749: po = 0;
   186C 21rCCs41           5152 	ld	hl,#_po + 0
   186F 36 00              5153 	ld	(hl), #0x00
   1871 21rCDs41           5154 	ld	hl,#_po + 1
   1874 36 00              5155 	ld	(hl), #0x00
   1876                    5156 00114$:
   1876 DD F9              5157 	ld	sp,ix
   1878 DD E1              5158 	pop	ix
   187A C9                 5159 	ret
   187B                    5160 _animplay_end::
   187B                    5161 __str_9:
   187B 4C 20 4F 20 41 20  5162 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1888 00                 5163 	.db 0x00
   1889                    5164 __str_10:
   1889 4C 46 31 20 20 20  5165 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1894 00                 5166 	.db 0x00
   1895                    5167 __str_11:
   1895 4C 46 32 20 20 20  5168 	.ascii "LF2     PCK"
        20 20 50 43 4B
   18A0 00                 5169 	.db 0x00
   18A1                    5170 __str_12:
   18A1 4C 46 33 20 20 20  5171 	.ascii "LF3     PCK"
        20 20 50 43 4B
   18AC 00                 5172 	.db 0x00
                           5173 ;demo.c:765: void drawbox(uint8_t x, uint8_t y) {
                           5174 ;	---------------------------------
                           5175 ; Function drawbox
                           5176 ; ---------------------------------
   18AD                    5177 _drawbox_start::
   18AD                    5178 _drawbox:
   18AD DD E5              5179 	push	ix
   18AF DD 21 00 00        5180 	ld	ix,#0
   18B3 DD 39              5181 	add	ix,sp
                           5182 ;demo.c:766: cmd.source_x = boxes_x[boxi];
   18B5 21rE8s41           5183 	ld	hl,#_boxi
   18B8 3ErD9              5184 	ld	a,#<_boxes_x
   18BA 86                 5185 	add	a,(hl)
   18BB 4F                 5186 	ld	c,a
   18BC 3Es41              5187 	ld	a,#>_boxes_x
   18BE CE 00              5188 	adc	a,#0x00
   18C0 47                 5189 	ld	b,a
   18C1 0A                 5190 	ld	a,(bc)
   18C2 4F                 5191 	ld	c,a
   18C3 06 00              5192 	ld	b,#0x00
   18C5 21r6Cs41           5193 	ld	hl,#_cmd
   18C8 71                 5194 	ld	(hl),c
   18C9 23                 5195 	inc	hl
   18CA 70                 5196 	ld	(hl),b
                           5197 ;demo.c:767: cmd.source_y = boxes_y[boxi];
   18CB 01r6Es41           5198 	ld	bc,#_cmd + 2
   18CE 3ArE8s41           5199 	ld	a,(#_boxi+0)
   18D1 87                 5200 	add	a,a
   18D2 C6rDE              5201 	add	a,#<_boxes_y
   18D4 6F                 5202 	ld	l,a
   18D5 3Es41              5203 	ld	a,#>_boxes_y
   18D7 CE 00              5204 	adc	a,#0x00
   18D9 67                 5205 	ld	h,a
   18DA 5E                 5206 	ld	e,(hl)
   18DB 23                 5207 	inc	hl
   18DC 56                 5208 	ld	d,(hl)
   18DD 69                 5209 	ld	l,c
   18DE 60                 5210 	ld	h,b
   18DF 73                 5211 	ld	(hl),e
   18E0 23                 5212 	inc	hl
   18E1 72                 5213 	ld	(hl),d
                           5214 ;demo.c:768: cmd.dest_x = x;
   18E2 01r70s41           5215 	ld	bc,#_cmd + 4
   18E5 DD 5E 04           5216 	ld	e,4 (ix)
   18E8 16 00              5217 	ld	d,#0x00
   18EA 69                 5218 	ld	l,c
   18EB 60                 5219 	ld	h,b
   18EC 73                 5220 	ld	(hl),e
   18ED 23                 5221 	inc	hl
   18EE 72                 5222 	ld	(hl),d
                           5223 ;demo.c:769: cmd.dest_y = y;
   18EF 01r72s41           5224 	ld	bc,#_cmd + 6
   18F2 DD 5E 05           5225 	ld	e,5 (ix)
   18F5 16 00              5226 	ld	d,#0x00
   18F7 69                 5227 	ld	l,c
   18F8 60                 5228 	ld	h,b
   18F9 73                 5229 	ld	(hl),e
   18FA 23                 5230 	inc	hl
   18FB 72                 5231 	ld	(hl),d
                           5232 ;demo.c:770: cmd.size_x = 36;
   18FC 21r74s41           5233 	ld	hl, #_cmd + 8
   18FF 36 24              5234 	ld	(hl),#0x24
   1901 23                 5235 	inc	hl
   1902 36 00              5236 	ld	(hl),#0x00
                           5237 ;demo.c:771: cmd.size_y = 36;
   1904 21r76s41           5238 	ld	hl, #_cmd + 10
   1907 36 24              5239 	ld	(hl),#0x24
   1909 23                 5240 	inc	hl
   190A 36 00              5241 	ld	(hl),#0x00
                           5242 ;demo.c:772: cmd.data = 0;
                           5243 ;demo.c:773: cmd.argument = 0x00;
   190C 3E 00              5244 	ld	a,#0x00
   190E 32r78s41           5245 	ld	(#_cmd + 12),a
   1911 32r79s41           5246 	ld	(#_cmd + 13),a
                           5247 ;demo.c:774: cmd.command = 0x98; // TIMP sprite
   1914 3E 98              5248 	ld	a,#0x98
   1916 32r7As41           5249 	ld	(#_cmd + 14),a
                           5250 ;demo.c:775: vdp_copier(&cmd);
   1919 21r6Cs41           5251 	ld	hl,#_cmd
   191C E5                 5252 	push	hl
   191D CDr00s00           5253 	call	_vdp_copier
   1920 F1                 5254 	pop	af
                           5255 ;demo.c:777: prevx = x;
   1921 DD 7E 04           5256 	ld	a,4 (ix)
   1924 21rD5s41           5257 	ld	hl,#_prevx + 0
   1927 77                 5258 	ld	(hl), a
   1928 21rD6s41           5259 	ld	hl,#_prevx + 1
   192B 36 00              5260 	ld	(hl), #0x00
                           5261 ;demo.c:778: prevy = y;
   192D DD 7E 05           5262 	ld	a,5 (ix)
   1930 21rD7s41           5263 	ld	hl,#_prevy + 0
   1933 77                 5264 	ld	(hl), a
   1934 21rD8s41           5265 	ld	hl,#_prevy + 1
   1937 36 00              5266 	ld	(hl), #0x00
   1939 DD E1              5267 	pop	ix
   193B C9                 5268 	ret
   193C                    5269 _drawbox_end::
                           5270 ;demo.c:792: void boxes() {
                           5271 ;	---------------------------------
                           5272 ; Function boxes
                           5273 ; ---------------------------------
   193C                    5274 _boxes_start::
   193C                    5275 _boxes:
   193C DD E5              5276 	push	ix
   193E DD 21 00 00        5277 	ld	ix,#0
   1942 DD 39              5278 	add	ix,sp
   1944 F5                 5279 	push	af
                           5280 ;demo.c:796: if (bx < 0) return;
   1945 FD 21rE9s41        5281 	ld	iy,#_bx
   1949 FD CB 01 7E        5282 	bit	7,1 (iy)
   194D C2r63s1D           5283 	jp	NZ,00149$
                           5284 ;demo.c:798: if (bonc == 1) {
   1950 3ArF1s41           5285 	ld	a,(#_bonc+0)
   1953 D6 01              5286 	sub	a,#0x01
   1955 20 06              5287 	jr	NZ,00178$
   1957 3ArF2s41           5288 	ld	a,(#_bonc+1)
   195A B7                 5289 	or	a,a
   195B 28 02              5290 	jr	Z,00179$
   195D                    5291 00178$:
   195D 18 4D              5292 	jr	00104$
   195F                    5293 00179$:
                           5294 ;demo.c:800: cmd.source_x = 0;
   195F 21r6Cs41           5295 	ld	hl,#_cmd
   1962 36 00              5296 	ld	(hl),#0x00
   1964 23                 5297 	inc	hl
   1965 36 00              5298 	ld	(hl),#0x00
                           5299 ;demo.c:801: cmd.source_y = 256;
   1967 21r6Es41           5300 	ld	hl, #_cmd + 2
   196A 36 00              5301 	ld	(hl),#0x00
   196C 23                 5302 	inc	hl
   196D 36 01              5303 	ld	(hl),#0x01
                           5304 ;demo.c:802: cmd.dest_x = pbx;
   196F 01r70s41           5305 	ld	bc,#_cmd + 4
   1972 ED 5BrF3s41        5306 	ld	de,(_pbx)
   1976 69                 5307 	ld	l,c
   1977 60                 5308 	ld	h,b
   1978 73                 5309 	ld	(hl),e
   1979 23                 5310 	inc	hl
   197A 72                 5311 	ld	(hl),d
                           5312 ;demo.c:803: cmd.dest_y = pbt;
   197B 01r72s41           5313 	ld	bc,#_cmd + 6
   197E ED 5BrF5s41        5314 	ld	de,(_pbt)
   1982 69                 5315 	ld	l,c
   1983 60                 5316 	ld	h,b
   1984 73                 5317 	ld	(hl),e
   1985 23                 5318 	inc	hl
   1986 72                 5319 	ld	(hl),d
                           5320 ;demo.c:804: cmd.size_x = 36;
   1987 21r74s41           5321 	ld	hl, #_cmd + 8
   198A 36 24              5322 	ld	(hl),#0x24
   198C 23                 5323 	inc	hl
   198D 36 00              5324 	ld	(hl),#0x00
                           5325 ;demo.c:805: cmd.size_y = 36;
   198F 21r76s41           5326 	ld	hl, #_cmd + 10
   1992 36 24              5327 	ld	(hl),#0x24
   1994 23                 5328 	inc	hl
   1995 36 00              5329 	ld	(hl),#0x00
                           5330 ;demo.c:806: cmd.data = 0;
                           5331 ;demo.c:807: cmd.argument = 0x00;
   1997 3E 00              5332 	ld	a,#0x00
   1999 32r78s41           5333 	ld	(#_cmd + 12),a
   199C 32r79s41           5334 	ld	(#_cmd + 13),a
                           5335 ;demo.c:808: cmd.command = 0xD0; // HMMM
   199F 3E D0              5336 	ld	a,#0xD0
   19A1 32r7As41           5337 	ld	(#_cmd + 14),a
                           5338 ;demo.c:809: vdp_copier(&cmd);
   19A4 21r6Cs41           5339 	ld	hl,#_cmd
   19A7 E5                 5340 	push	hl
   19A8 CDr00s00           5341 	call	_vdp_copier
   19AB F1                 5342 	pop	af
   19AC                    5343 00104$:
                           5344 ;demo.c:812: if (boxes_init == 0) {
   19AC AF                 5345 	xor	a,a
   19AD 21rD2s41           5346 	ld	hl,#_boxes_init + 0
   19B0 B6                 5347 	or	a,(hl)
   19B1 C2rB3s1A           5348 	jp	NZ,00106$
                           5349 ;demo.c:813: boxes_init = 1;
   19B4 FD 21rD2s41        5350 	ld	iy,#_boxes_init
   19B8 FD 36 00 01        5351 	ld	0 (iy),#0x01
                           5352 ;demo.c:815: cmd.size_x = 8;
   19BC 21r74s41           5353 	ld	hl, #_cmd + 8
   19BF 36 08              5354 	ld	(hl),#0x08
   19C1 23                 5355 	inc	hl
   19C2 36 00              5356 	ld	(hl),#0x00
                           5357 ;demo.c:816: cmd.size_y = 212;
   19C4 21r76s41           5358 	ld	hl, #_cmd + 10
   19C7 36 D4              5359 	ld	(hl),#0xD4
   19C9 23                 5360 	inc	hl
   19CA 36 00              5361 	ld	(hl),#0x00
                           5362 ;demo.c:817: cmd.data = 0;
                           5363 ;demo.c:818: cmd.argument = 0x00; // from 70xY to left
   19CC 3E 00              5364 	ld	a,#0x00
   19CE 32r78s41           5365 	ld	(#_cmd + 12),a
   19D1 32r79s41           5366 	ld	(#_cmd + 13),a
                           5367 ;demo.c:819: cmd.command = 0xd0; // vram to vram, y only
   19D4 01r7As41           5368 	ld	bc,#_cmd + 14
   19D7 3E D0              5369 	ld	a,#0xD0
   19D9 02                 5370 	ld	(bc),a
                           5371 ;demo.c:820: cmd.source_x = 248;
   19DA 21r6Cs41           5372 	ld	hl,#_cmd
   19DD 36 F8              5373 	ld	(hl),#0xF8
   19DF 23                 5374 	inc	hl
   19E0 36 00              5375 	ld	(hl),#0x00
                           5376 ;demo.c:821: cmd.source_y = 0;
   19E2 21r6Es41           5377 	ld	hl, #_cmd + 2
   19E5 36 00              5378 	ld	(hl),#0x00
   19E7 23                 5379 	inc	hl
   19E8 36 00              5380 	ld	(hl),#0x00
                           5381 ;demo.c:822: cmd.dest_y = 0;
   19EA 21r72s41           5382 	ld	hl, #_cmd + 6
   19ED 36 00              5383 	ld	(hl),#0x00
   19EF 23                 5384 	inc	hl
   19F0 36 00              5385 	ld	(hl),#0x00
                           5386 ;demo.c:824: for (x = 248; x >= 0; x-=8) {
   19F2 01 F8 00           5387 	ld	bc,#0x00F8
   19F5                    5388 00137$:
   19F5 78                 5389 	ld	a,b
   19F6 CB 7F              5390 	bit	7,a
   19F8 20 38              5391 	jr	NZ,00140$
                           5392 ;demo.c:825: waitVB();
   19FA 76                 5393 		halt 
                           5394 ;demo.c:826: cmd.dest_x = x;
   19FB 11r70s41           5395 	ld	de,#_cmd + 4
   19FE EB                 5396 	ex	de,hl
   19FF 71                 5397 	ld	(hl),c
   1A00 23                 5398 	inc	hl
   1A01 70                 5399 	ld	(hl),b
                           5400 ;demo.c:827: cmd.dest_y = 0;
   1A02 11r72s41           5401 	ld	de,#_cmd + 6
   1A05 EB                 5402 	ex	de,hl
   1A06 36 00              5403 	ld	(hl),#0x00
   1A08 23                 5404 	inc	hl
   1A09 36 00              5405 	ld	(hl),#0x00
                           5406 ;demo.c:828: vdp_copier(&cmd);
   1A0B C5                 5407 	push	bc
   1A0C 21r6Cs41           5408 	ld	hl,#_cmd
   1A0F E5                 5409 	push	hl
   1A10 CDr00s00           5410 	call	_vdp_copier
   1A13 F1                 5411 	pop	af
   1A14 C1                 5412 	pop	bc
                           5413 ;demo.c:829: cmd.dest_y = 256;
   1A15 11r72s41           5414 	ld	de,#_cmd + 6
   1A18 EB                 5415 	ex	de,hl
   1A19 36 00              5416 	ld	(hl),#0x00
   1A1B 23                 5417 	inc	hl
   1A1C 36 01              5418 	ld	(hl),#0x01
                           5419 ;demo.c:830: vdp_copier(&cmd);
   1A1E C5                 5420 	push	bc
   1A1F 21r6Cs41           5421 	ld	hl,#_cmd
   1A22 E5                 5422 	push	hl
   1A23 CDr00s00           5423 	call	_vdp_copier
   1A26 F1                 5424 	pop	af
   1A27 C1                 5425 	pop	bc
                           5426 ;demo.c:824: for (x = 248; x >= 0; x-=8) {
   1A28 79                 5427 	ld	a,c
   1A29 C6 F8              5428 	add	a,#0xF8
   1A2B 4F                 5429 	ld	c,a
   1A2C 78                 5430 	ld	a,b
   1A2D CE FF              5431 	adc	a,#0xFF
   1A2F 47                 5432 	ld	b,a
   1A30 18 C3              5433 	jr	00137$
   1A32                    5434 00140$:
                           5435 ;demo.c:833: for (x=0;x < 8;x++) {
   1A32 DD 36 FE 00        5436 	ld	-2 (ix),#0x00
   1A36 DD 36 FF 00        5437 	ld	-1 (ix),#0x00
   1A3A                    5438 00145$:
   1A3A DD 7E FE           5439 	ld	a,-2 (ix)
   1A3D D6 08              5440 	sub	a,#0x08
   1A3F DD 7E FF           5441 	ld	a,-1 (ix)
   1A42 DE 00              5442 	sbc	a,#0x00
   1A44 F2r9Es1A           5443 	jp	P,00148$
                           5444 ;demo.c:835: for (y=0;y < 9;y++) {
   1A47 11 00 00           5445 	ld	de,#0x0000
   1A4A                    5446 00141$:
   1A4A 7B                 5447 	ld	a,e
   1A4B D6 09              5448 	sub	a,#0x09
   1A4D 7A                 5449 	ld	a,d
   1A4E DE 00              5450 	sbc	a,#0x00
   1A50 F2r93s1A           5451 	jp	P,00147$
                           5452 ;demo.c:836: boxes_x[4] = 0;
   1A53 01rDDs41           5453 	ld	bc,#_boxes_x + 4
   1A56 3E 00              5454 	ld	a,#0x00
   1A58 02                 5455 	ld	(bc),a
                           5456 ;demo.c:837: boxes_y[4] = 768+2*36;
   1A59 21rE6s41           5457 	ld	hl, #_boxes_y + 8
   1A5C 36 48              5458 	ld	(hl),#0x48
   1A5E 23                 5459 	inc	hl
   1A5F 36 03              5460 	ld	(hl),#0x03
                           5461 ;demo.c:838: boxi = 4;
   1A61 21rE8s41           5462 	ld	hl,#_boxi + 0
   1A64 36 04              5463 	ld	(hl), #0x04
                           5464 ;demo.c:839: drawbox((x*36),y*18);
   1A66 4B                 5465 	ld	c,e
   1A67 D5                 5466 	push	de
   1A68 79                 5467 	ld	a,c
   1A69 5F                 5468 	ld	e,a
   1A6A 87                 5469 	add	a,a
   1A6B 87                 5470 	add	a,a
   1A6C 87                 5471 	add	a,a
   1A6D 83                 5472 	add	a,e
   1A6E 87                 5473 	add	a,a
   1A6F D1                 5474 	pop	de
   1A70 4F                 5475 	ld	c,a
   1A71 DD 46 FE           5476 	ld	b,-2 (ix)
   1A74 D5                 5477 	push	de
   1A75 78                 5478 	ld	a,b
   1A76 5F                 5479 	ld	e,a
   1A77 87                 5480 	add	a,a
   1A78 87                 5481 	add	a,a
   1A79 87                 5482 	add	a,a
   1A7A 83                 5483 	add	a,e
   1A7B 87                 5484 	add	a,a
   1A7C 87                 5485 	add	a,a
   1A7D D1                 5486 	pop	de
   1A7E 47                 5487 	ld	b,a
   1A7F D5                 5488 	push	de
   1A80 79                 5489 	ld	a,c
   1A81 F5                 5490 	push	af
   1A82 33                 5491 	inc	sp
   1A83 C5                 5492 	push	bc
   1A84 33                 5493 	inc	sp
   1A85 CDrADs18           5494 	call	_drawbox
   1A88 F1                 5495 	pop	af
   1A89 D1                 5496 	pop	de
                           5497 ;demo.c:840: boxi = 0;
   1A8A 21rE8s41           5498 	ld	hl,#_boxi + 0
   1A8D 36 00              5499 	ld	(hl), #0x00
                           5500 ;demo.c:835: for (y=0;y < 9;y++) {
   1A8F 13                 5501 	inc	de
   1A90 C3r4As1A           5502 	jp	00141$
   1A93                    5503 00147$:
                           5504 ;demo.c:833: for (x=0;x < 8;x++) {
   1A93 DD 34 FE           5505 	inc	-2 (ix)
   1A96 20 03              5506 	jr	NZ,00180$
   1A98 DD 34 FF           5507 	inc	-1 (ix)
   1A9B                    5508 00180$:
   1A9B C3r3As1A           5509 	jp	00145$
   1A9E                    5510 00148$:
                           5511 ;demo.c:844: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   1A9E 21 08 B4           5512 	ld	hl,#0xB408
   1AA1 E5                 5513 	push	hl
   1AA2 21r68s1D           5514 	ld	hl,#__str_13
   1AA5 E5                 5515 	push	hl
   1AA6 CDr20s11           5516 	call	_drawsine
   1AA9 F1                 5517 	pop	af
   1AAA F1                 5518 	pop	af
                           5519 ;demo.c:846: vdp_load_palette(boxes_palette);
   1AAB 21r48s41           5520 	ld	hl,#_boxes_palette
   1AAE E5                 5521 	push	hl
   1AAF CDr00s00           5522 	call	_vdp_load_palette
   1AB2 F1                 5523 	pop	af
   1AB3                    5524 00106$:
                           5525 ;demo.c:849: if (bt >= 80) bt+=8;
   1AB3 3ArEDs41           5526 	ld	a,(#_bt+0)
   1AB6 D6 50              5527 	sub	a,#0x50
   1AB8 3ArEEs41           5528 	ld	a,(#_bt+1)
   1ABB DE 00              5529 	sbc	a,#0x00
   1ABD FArD6s1A           5530 	jp	M,00108$
   1AC0 21rEDs41           5531 	ld	hl,#_bt
   1AC3 7E                 5532 	ld	a,(hl)
   1AC4 C6 08              5533 	add	a,#0x08
   1AC6 23                 5534 	inc	hl
   1AC7 2B                 5535 	dec	hl
   1AC8 C5                 5536 	push	bc
   1AC9 4F                 5537 	ld	c, a
   1ACA 23                 5538 	inc	hl
   1ACB 7E                 5539 	ld	a, (hl)
   1ACC 47                 5540 	ld	b, a
   1ACD 79                 5541 	ld	a, c
   1ACE 2B                 5542 	dec	hl
   1ACF 77                 5543 	ld	(hl), a
   1AD0 78                 5544 	ld	a, b
   1AD1 C1                 5545 	pop	bc
   1AD2 CE 00              5546 	adc	a,#0x00
   1AD4 23                 5547 	inc	hl
   1AD5 77                 5548 	ld	(hl),a
   1AD6                    5549 00108$:
                           5550 ;demo.c:850: if (bt < 80 && bt >= 60) bt+=7;
   1AD6 3ArEDs41           5551 	ld	a,(#_bt+0)
   1AD9 D6 50              5552 	sub	a,#0x50
   1ADB 3ArEEs41           5553 	ld	a,(#_bt+1)
   1ADE DE 00              5554 	sbc	a,#0x00
   1AE0 F2r06s1B           5555 	jp	P,00110$
   1AE3 3ArEDs41           5556 	ld	a,(#_bt+0)
   1AE6 D6 3C              5557 	sub	a,#0x3C
   1AE8 3ArEEs41           5558 	ld	a,(#_bt+1)
   1AEB DE 00              5559 	sbc	a,#0x00
   1AED FAr06s1B           5560 	jp	M,00110$
   1AF0 21rEDs41           5561 	ld	hl,#_bt
   1AF3 7E                 5562 	ld	a,(hl)
   1AF4 C6 07              5563 	add	a,#0x07
   1AF6 23                 5564 	inc	hl
   1AF7 2B                 5565 	dec	hl
   1AF8 C5                 5566 	push	bc
   1AF9 4F                 5567 	ld	c, a
   1AFA 23                 5568 	inc	hl
   1AFB 7E                 5569 	ld	a, (hl)
   1AFC 47                 5570 	ld	b, a
   1AFD 79                 5571 	ld	a, c
   1AFE 2B                 5572 	dec	hl
   1AFF 77                 5573 	ld	(hl), a
   1B00 78                 5574 	ld	a, b
   1B01 C1                 5575 	pop	bc
   1B02 CE 00              5576 	adc	a,#0x00
   1B04 23                 5577 	inc	hl
   1B05 77                 5578 	ld	(hl),a
   1B06                    5579 00110$:
                           5580 ;demo.c:851: if (bt < 60 && bt >= 40) bt+=6;
   1B06 3ArEDs41           5581 	ld	a,(#_bt+0)
   1B09 D6 3C              5582 	sub	a,#0x3C
   1B0B 3ArEEs41           5583 	ld	a,(#_bt+1)
   1B0E DE 00              5584 	sbc	a,#0x00
   1B10 F2r36s1B           5585 	jp	P,00113$
   1B13 3ArEDs41           5586 	ld	a,(#_bt+0)
   1B16 D6 28              5587 	sub	a,#0x28
   1B18 3ArEEs41           5588 	ld	a,(#_bt+1)
   1B1B DE 00              5589 	sbc	a,#0x00
   1B1D FAr36s1B           5590 	jp	M,00113$
   1B20 21rEDs41           5591 	ld	hl,#_bt
   1B23 7E                 5592 	ld	a,(hl)
   1B24 C6 06              5593 	add	a,#0x06
   1B26 23                 5594 	inc	hl
   1B27 2B                 5595 	dec	hl
   1B28 C5                 5596 	push	bc
   1B29 4F                 5597 	ld	c, a
   1B2A 23                 5598 	inc	hl
   1B2B 7E                 5599 	ld	a, (hl)
   1B2C 47                 5600 	ld	b, a
   1B2D 79                 5601 	ld	a, c
   1B2E 2B                 5602 	dec	hl
   1B2F 77                 5603 	ld	(hl), a
   1B30 78                 5604 	ld	a, b
   1B31 C1                 5605 	pop	bc
   1B32 CE 00              5606 	adc	a,#0x00
   1B34 23                 5607 	inc	hl
   1B35 77                 5608 	ld	(hl),a
   1B36                    5609 00113$:
                           5610 ;demo.c:852: if (bt < 40 && bt >= 10) bt+=5;
   1B36 3ArEDs41           5611 	ld	a,(#_bt+0)
   1B39 D6 28              5612 	sub	a,#0x28
   1B3B 3ArEEs41           5613 	ld	a,(#_bt+1)
   1B3E DE 00              5614 	sbc	a,#0x00
   1B40 F2r66s1B           5615 	jp	P,00116$
   1B43 3ArEDs41           5616 	ld	a,(#_bt+0)
   1B46 D6 0A              5617 	sub	a,#0x0A
   1B48 3ArEEs41           5618 	ld	a,(#_bt+1)
   1B4B DE 00              5619 	sbc	a,#0x00
   1B4D FAr66s1B           5620 	jp	M,00116$
   1B50 21rEDs41           5621 	ld	hl,#_bt
   1B53 7E                 5622 	ld	a,(hl)
   1B54 C6 05              5623 	add	a,#0x05
   1B56 23                 5624 	inc	hl
   1B57 2B                 5625 	dec	hl
   1B58 C5                 5626 	push	bc
   1B59 4F                 5627 	ld	c, a
   1B5A 23                 5628 	inc	hl
   1B5B 7E                 5629 	ld	a, (hl)
   1B5C 47                 5630 	ld	b, a
   1B5D 79                 5631 	ld	a, c
   1B5E 2B                 5632 	dec	hl
   1B5F 77                 5633 	ld	(hl), a
   1B60 78                 5634 	ld	a, b
   1B61 C1                 5635 	pop	bc
   1B62 CE 00              5636 	adc	a,#0x00
   1B64 23                 5637 	inc	hl
   1B65 77                 5638 	ld	(hl),a
   1B66                    5639 00116$:
                           5640 ;demo.c:853: if (bt < 10 ) bt+=4;
   1B66 3ArEDs41           5641 	ld	a,(#_bt+0)
   1B69 D6 0A              5642 	sub	a,#0x0A
   1B6B 3ArEEs41           5643 	ld	a,(#_bt+1)
   1B6E DE 00              5644 	sbc	a,#0x00
   1B70 F2r89s1B           5645 	jp	P,00119$
   1B73 21rEDs41           5646 	ld	hl,#_bt
   1B76 7E                 5647 	ld	a,(hl)
   1B77 C6 04              5648 	add	a,#0x04
   1B79 23                 5649 	inc	hl
   1B7A 2B                 5650 	dec	hl
   1B7B C5                 5651 	push	bc
   1B7C 4F                 5652 	ld	c, a
   1B7D 23                 5653 	inc	hl
   1B7E 7E                 5654 	ld	a, (hl)
   1B7F 47                 5655 	ld	b, a
   1B80 79                 5656 	ld	a, c
   1B81 2B                 5657 	dec	hl
   1B82 77                 5658 	ld	(hl), a
   1B83 78                 5659 	ld	a, b
   1B84 C1                 5660 	pop	bc
   1B85 CE 00              5661 	adc	a,#0x00
   1B87 23                 5662 	inc	hl
   1B88 77                 5663 	ld	(hl),a
   1B89                    5664 00119$:
                           5665 ;demo.c:856: cmd.source_x = bx;
   1B89 ED 4BrE9s41        5666 	ld	bc,(_bx)
   1B8D 21r6Cs41           5667 	ld	hl,#_cmd
   1B90 71                 5668 	ld	(hl),c
   1B91 23                 5669 	inc	hl
   1B92 70                 5670 	ld	(hl),b
                           5671 ;demo.c:857: cmd.source_y = bt;
   1B93 01r6Es41           5672 	ld	bc,#_cmd + 2
   1B96 ED 5BrEDs41        5673 	ld	de,(_bt)
   1B9A 69                 5674 	ld	l,c
   1B9B 60                 5675 	ld	h,b
   1B9C 73                 5676 	ld	(hl),e
   1B9D 23                 5677 	inc	hl
   1B9E 72                 5678 	ld	(hl),d
                           5679 ;demo.c:858: cmd.dest_x = 0;
   1B9F 21r70s41           5680 	ld	hl, #_cmd + 4
   1BA2 36 00              5681 	ld	(hl),#0x00
   1BA4 23                 5682 	inc	hl
   1BA5 36 00              5683 	ld	(hl),#0x00
                           5684 ;demo.c:859: cmd.dest_y = 256;
   1BA7 21r72s41           5685 	ld	hl, #_cmd + 6
   1BAA 36 00              5686 	ld	(hl),#0x00
   1BAC 23                 5687 	inc	hl
   1BAD 36 01              5688 	ld	(hl),#0x01
                           5689 ;demo.c:860: cmd.size_x = 36;
   1BAF 21r74s41           5690 	ld	hl, #_cmd + 8
   1BB2 36 24              5691 	ld	(hl),#0x24
   1BB4 23                 5692 	inc	hl
   1BB5 36 00              5693 	ld	(hl),#0x00
                           5694 ;demo.c:861: cmd.size_y = 36;
   1BB7 21r76s41           5695 	ld	hl, #_cmd + 10
   1BBA 36 24              5696 	ld	(hl),#0x24
   1BBC 23                 5697 	inc	hl
   1BBD 36 00              5698 	ld	(hl),#0x00
                           5699 ;demo.c:862: cmd.data = 0;
                           5700 ;demo.c:863: cmd.argument = 0x00;
   1BBF 3E 00              5701 	ld	a,#0x00
   1BC1 32r78s41           5702 	ld	(#_cmd + 12),a
   1BC4 32r79s41           5703 	ld	(#_cmd + 13),a
                           5704 ;demo.c:864: cmd.command = 0xD0; // HMMM
   1BC7 3E D0              5705 	ld	a,#0xD0
   1BC9 32r7As41           5706 	ld	(#_cmd + 14),a
                           5707 ;demo.c:865: vdp_copier(&cmd);
   1BCC 21r6Cs41           5708 	ld	hl,#_cmd
   1BCF E5                 5709 	push	hl
   1BD0 CDr00s00           5710 	call	_vdp_copier
   1BD3 F1                 5711 	pop	af
                           5712 ;demo.c:867: pbx = bx;
   1BD4 2ArE9s41           5713 	ld	hl,(_bx)
   1BD7 FD 21rF3s41        5714 	ld	iy,#_pbx
   1BDB FD 75 00           5715 	ld	0 (iy),l
   1BDE FD 21rF3s41        5716 	ld	iy,#_pbx
   1BE2 FD 74 01           5717 	ld	1 (iy),h
                           5718 ;demo.c:868: pbt = bt;
   1BE5 2ArEDs41           5719 	ld	hl,(_bt)
   1BE8 FD 21rF5s41        5720 	ld	iy,#_pbt
   1BEC FD 75 00           5721 	ld	0 (iy),l
   1BEF FD 21rF5s41        5722 	ld	iy,#_pbt
   1BF3 FD 74 01           5723 	ld	1 (iy),h
                           5724 ;demo.c:873: bonc = 1;
   1BF6 21rF1s41           5725 	ld	hl,#_bonc + 0
   1BF9 36 01              5726 	ld	(hl), #0x01
   1BFB 21rF2s41           5727 	ld	hl,#_bonc + 1
   1BFE 36 00              5728 	ld	(hl), #0x00
                           5729 ;demo.c:874: if (bt > by) {
   1C00 21rEBs41           5730 	ld	hl,#_by
   1C03 7E                 5731 	ld	a,(hl)
   1C04 FD 21rEDs41        5732 	ld	iy,#_bt
   1C08 FD 96 00           5733 	sub	a,0 (iy)
   1C0B 23                 5734 	inc	hl
   1C0C 7E                 5735 	ld	a,(hl)
   1C0D FD 21rEDs41        5736 	ld	iy,#_bt
   1C11 FD 9E 01           5737 	sbc	a,1 (iy)
   1C14 F2r52s1D           5738 	jp	P,00135$
                           5739 ;demo.c:875: bt = by;
   1C17 2ArEBs41           5740 	ld	hl,(_by)
   1C1A FD 21rEDs41        5741 	ld	iy,#_bt
   1C1E FD 75 00           5742 	ld	0 (iy),l
   1C21 FD 21rEDs41        5743 	ld	iy,#_bt
   1C25 FD 74 01           5744 	ld	1 (iy),h
                           5745 ;demo.c:876: drawbox(bx,bt);
   1C28 21rEDs41           5746 	ld	hl,#_bt + 0
   1C2B 4E                 5747 	ld	c,(hl)
   1C2C 21rE9s41           5748 	ld	hl,#_bx + 0
   1C2F 46                 5749 	ld	b,(hl)
   1C30 79                 5750 	ld	a,c
   1C31 F5                 5751 	push	af
   1C32 33                 5752 	inc	sp
   1C33 C5                 5753 	push	bc
   1C34 33                 5754 	inc	sp
   1C35 CDrADs18           5755 	call	_drawbox
   1C38 F1                 5756 	pop	af
                           5757 ;demo.c:877: bt = 0;
   1C39 21rEDs41           5758 	ld	hl,#_bt + 0
   1C3C 36 00              5759 	ld	(hl), #0x00
   1C3E 21rEEs41           5760 	ld	hl,#_bt + 1
   1C41 36 00              5761 	ld	(hl), #0x00
                           5762 ;demo.c:878: if (by > 48) {
   1C43 3E 30              5763 	ld	a,#0x30
   1C45 FD 21rEBs41        5764 	ld	iy,#_by
   1C49 FD 96 00           5765 	sub	a,0 (iy)
   1C4C 3E 00              5766 	ld	a,#0x00
   1C4E FD 21rEBs41        5767 	ld	iy,#_by
   1C52 FD 9E 01           5768 	sbc	a,1 (iy)
   1C55 F2rADs1C           5769 	jp	P,00123$
                           5770 ;demo.c:879: bonc = 0;
   1C58 21rF1s41           5771 	ld	hl,#_bonc + 0
   1C5B 36 00              5772 	ld	(hl), #0x00
   1C5D 21rF2s41           5773 	ld	hl,#_bonc + 1
   1C60 36 00              5774 	ld	(hl), #0x00
                           5775 ;demo.c:880: by-=16;
   1C62 21rEBs41           5776 	ld	hl,#_by
   1C65 7E                 5777 	ld	a,(hl)
   1C66 C6 F0              5778 	add	a,#0xF0
   1C68 77                 5779 	ld	(hl),a
   1C69 23                 5780 	inc	hl
   1C6A 7E                 5781 	ld	a,(hl)
   1C6B CE FF              5782 	adc	a,#0xFF
   1C6D 77                 5783 	ld	(hl),a
                           5784 ;demo.c:881: prevbox_of = boxes_of[boxi];
   1C6E 3ArE8s41           5785 	ld	a,(#_boxi+0)
   1C71 87                 5786 	add	a,a
   1C72 C6rF7              5787 	add	a,#<_boxes_of
   1C74 6F                 5788 	ld	l,a
   1C75 3Es41              5789 	ld	a,#>_boxes_of
   1C77 CE 00              5790 	adc	a,#0x00
   1C79 67                 5791 	ld	h,a
   1C7A 4E                 5792 	ld	c,(hl)
   1C7B 23                 5793 	inc	hl
   1C7C 21r01s42           5794 	ld	hl,#_prevbox_of + 0
   1C7F 71                 5795 	ld	(hl), c
                           5796 ;demo.c:882: by+=prevbox_of;
   1C80 21r01s42           5797 	ld	hl,#_prevbox_of + 0
   1C83 4E                 5798 	ld	c,(hl)
   1C84 06 00              5799 	ld	b,#0x00
   1C86 21rEBs41           5800 	ld	hl,#_by
   1C89 7E                 5801 	ld	a,(hl)
   1C8A 81                 5802 	add	a,c
   1C8B 23                 5803 	inc	hl
   1C8C 2B                 5804 	dec	hl
   1C8D C5                 5805 	push	bc
   1C8E 4F                 5806 	ld	c, a
   1C8F 23                 5807 	inc	hl
   1C90 7E                 5808 	ld	a, (hl)
   1C91 47                 5809 	ld	b, a
   1C92 79                 5810 	ld	a, c
   1C93 2B                 5811 	dec	hl
   1C94 77                 5812 	ld	(hl), a
   1C95 78                 5813 	ld	a, b
   1C96 C1                 5814 	pop	bc
   1C97 88                 5815 	adc	a,b
   1C98 23                 5816 	inc	hl
   1C99 77                 5817 	ld	(hl),a
                           5818 ;demo.c:883: boxi++;
   1C9A FD 21rE8s41        5819 	ld	iy,#_boxi
   1C9E FD 34 00           5820 	inc	0 (iy)
                           5821 ;demo.c:884: if (boxi >= 4) boxi = 0;
   1CA1 3ArE8s41           5822 	ld	a,(#_boxi+0)
   1CA4 D6 04              5823 	sub	a,#0x04
   1CA6 38 05              5824 	jr	C,00123$
   1CA8 21rE8s41           5825 	ld	hl,#_boxi + 0
   1CAB 36 00              5826 	ld	(hl), #0x00
   1CAD                    5827 00123$:
                           5828 ;demo.c:887: if (by <= 48) {
   1CAD 3E 30              5829 	ld	a,#0x30
   1CAF FD 21rEBs41        5830 	ld	iy,#_by
   1CB3 FD 96 00           5831 	sub	a,0 (iy)
   1CB6 3E 00              5832 	ld	a,#0x00
   1CB8 FD 21rEBs41        5833 	ld	iy,#_by
   1CBC FD 9E 01           5834 	sbc	a,1 (iy)
   1CBF FAr63s1D           5835 	jp	M,00149$
                           5836 ;demo.c:888: bx-=16;
   1CC2 21rE9s41           5837 	ld	hl,#_bx
   1CC5 7E                 5838 	ld	a,(hl)
   1CC6 C6 F0              5839 	add	a,#0xF0
   1CC8 77                 5840 	ld	(hl),a
   1CC9 23                 5841 	inc	hl
   1CCA 7E                 5842 	ld	a,(hl)
   1CCB CE FF              5843 	adc	a,#0xFF
   1CCD 77                 5844 	ld	(hl),a
                           5845 ;demo.c:890: if (bx>128)bo+=8;
   1CCE 3E 80              5846 	ld	a,#0x80
   1CD0 FD 21rE9s41        5847 	ld	iy,#_bx
   1CD4 FD 96 00           5848 	sub	a,0 (iy)
   1CD7 3E 00              5849 	ld	a,#0x00
   1CD9 FD 21rE9s41        5850 	ld	iy,#_bx
   1CDD FD 9E 01           5851 	sbc	a,1 (iy)
   1CE0 07                 5852 	rlca
   1CE1 E6 01              5853 	and	a,#0x01
   1CE3 4F                 5854 	ld	c,a
   1CE4 B7                 5855 	or	a,a
   1CE5 28 18              5856 	jr	Z,00125$
   1CE7 21rEFs41           5857 	ld	hl,#_bo
   1CEA 7E                 5858 	ld	a,(hl)
   1CEB C6 08              5859 	add	a,#0x08
   1CED 23                 5860 	inc	hl
   1CEE 2B                 5861 	dec	hl
   1CEF C5                 5862 	push	bc
   1CF0 4F                 5863 	ld	c, a
   1CF1 23                 5864 	inc	hl
   1CF2 7E                 5865 	ld	a, (hl)
   1CF3 47                 5866 	ld	b, a
   1CF4 79                 5867 	ld	a, c
   1CF5 2B                 5868 	dec	hl
   1CF6 77                 5869 	ld	(hl), a
   1CF7 78                 5870 	ld	a, b
   1CF8 C1                 5871 	pop	bc
   1CF9 CE 00              5872 	adc	a,#0x00
   1CFB 23                 5873 	inc	hl
   1CFC 77                 5874 	ld	(hl),a
   1CFD 18 0C              5875 	jr	00126$
   1CFF                    5876 00125$:
                           5877 ;demo.c:891: else bo-=8;
   1CFF 21rEFs41           5878 	ld	hl,#_bo
   1D02 7E                 5879 	ld	a,(hl)
   1D03 C6 F8              5880 	add	a,#0xF8
   1D05 77                 5881 	ld	(hl),a
   1D06 23                 5882 	inc	hl
   1D07 7E                 5883 	ld	a,(hl)
   1D08 CE FF              5884 	adc	a,#0xFF
   1D0A 77                 5885 	ld	(hl),a
   1D0B                    5886 00126$:
                           5887 ;demo.c:892: if (bo > 192) bo = 0;
   1D0B 3E C0              5888 	ld	a,#0xC0
   1D0D FD 21rEFs41        5889 	ld	iy,#_bo
   1D11 FD 96 00           5890 	sub	a,0 (iy)
   1D14 3E 00              5891 	ld	a,#0x00
   1D16 FD 21rEFs41        5892 	ld	iy,#_bo
   1D1A FD 9E 01           5893 	sbc	a,1 (iy)
   1D1D F2r2As1D           5894 	jp	P,00128$
   1D20 21rEFs41           5895 	ld	hl,#_bo + 0
   1D23 36 00              5896 	ld	(hl), #0x00
   1D25 21rF0s41           5897 	ld	hl,#_bo + 1
   1D28 36 00              5898 	ld	(hl), #0x00
   1D2A                    5899 00128$:
                           5900 ;demo.c:893: if (bx>128)by=84+bo;
   1D2A AF                 5901 	xor	a,a
   1D2B B1                 5902 	or	a,c
   1D2C 28 12              5903 	jr	Z,00130$
   1D2E 21rEBs41           5904 	ld	hl,#_by
   1D31 3ArEFs41           5905 	ld	a,(#_bo+0)
   1D34 C6 54              5906 	add	a,#0x54
   1D36 77                 5907 	ld	(hl),a
   1D37 3ArF0s41           5908 	ld	a,(#_bo+1)
   1D3A CE 00              5909 	adc	a,#0x00
   1D3C 23                 5910 	inc	hl
   1D3D 77                 5911 	ld	(hl),a
   1D3E 18 23              5912 	jr	00149$
   1D40                    5913 00130$:
                           5914 ;demo.c:894: else by=36+36+84+bo;
   1D40 21rEBs41           5915 	ld	hl,#_by
   1D43 3ArEFs41           5916 	ld	a,(#_bo+0)
   1D46 C6 9C              5917 	add	a,#0x9C
   1D48 77                 5918 	ld	(hl),a
   1D49 3ArF0s41           5919 	ld	a,(#_bo+1)
   1D4C CE 00              5920 	adc	a,#0x00
   1D4E 23                 5921 	inc	hl
   1D4F 77                 5922 	ld	(hl),a
   1D50 18 11              5923 	jr	00149$
   1D52                    5924 00135$:
                           5925 ;demo.c:897: drawbox(bx,bt);
   1D52 21rEDs41           5926 	ld	hl,#_bt + 0
   1D55 4E                 5927 	ld	c,(hl)
   1D56 21rE9s41           5928 	ld	hl,#_bx + 0
   1D59 46                 5929 	ld	b,(hl)
   1D5A 79                 5930 	ld	a,c
   1D5B F5                 5931 	push	af
   1D5C 33                 5932 	inc	sp
   1D5D C5                 5933 	push	bc
   1D5E 33                 5934 	inc	sp
   1D5F CDrADs18           5935 	call	_drawbox
   1D62 F1                 5936 	pop	af
   1D63                    5937 00149$:
   1D63 DD F9              5938 	ld	sp,ix
   1D65 DD E1              5939 	pop	ix
   1D67 C9                 5940 	ret
   1D68                    5941 _boxes_end::
   1D68                    5942 __str_13:
   1D68 4C 45 54 20 55 53  5943 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1D93 00                 5944 	.db 0x00
                           5945 ;demo.c:908: void thewave() {
                           5946 ;	---------------------------------
                           5947 ; Function thewave
                           5948 ; ---------------------------------
   1D94                    5949 _thewave_start::
   1D94                    5950 _thewave:
   1D94 DD E5              5951 	push	ix
   1D96 DD 21 00 00        5952 	ld	ix,#0
   1D9A DD 39              5953 	add	ix,sp
   1D9C 21 F7 FF           5954 	ld	hl,#-9
   1D9F 39                 5955 	add	hl,sp
   1DA0 F9                 5956 	ld	sp,hl
                           5957 ;demo.c:916: if (initwave == 0) {
   1DA1 AF                 5958 	xor	a,a
   1DA2 21r02s42           5959 	ld	hl,#_initwave + 0
   1DA5 B6                 5960 	or	a,(hl)
   1DA6 C2r2Es20           5961 	jp	NZ,00113$
                           5962 ;demo.c:917: initwave = 1;
   1DA9 21r02s42           5963 	ld	hl,#_initwave + 0
   1DAC 36 01              5964 	ld	(hl), #0x01
                           5965 ;demo.c:918: for (y = 0; y < 212; y++) {
   1DAE DD 36 FE 00        5966 	ld	-2 (ix),#0x00
   1DB2                    5967 00128$:
   1DB2 DD 7E FE           5968 	ld	a,-2 (ix)
   1DB5 D6 D4              5969 	sub	a,#0xD4
   1DB7 D2r2As1E           5970 	jp	NC,00131$
                           5971 ;demo.c:919: cmd.size_x = 256;
   1DBA 11r74s41           5972 	ld	de,#_cmd + 8
   1DBD EB                 5973 	ex	de,hl
   1DBE 36 00              5974 	ld	(hl),#0x00
   1DC0 23                 5975 	inc	hl
   1DC1 36 01              5976 	ld	(hl),#0x01
                           5977 ;demo.c:920: cmd.size_y = 2;
   1DC3 11r76s41           5978 	ld	de,#_cmd + 10
   1DC6 EB                 5979 	ex	de,hl
   1DC7 36 02              5980 	ld	(hl),#0x02
   1DC9 23                 5981 	inc	hl
   1DCA 36 00              5982 	ld	(hl),#0x00
                           5983 ;demo.c:921: cmd.data = 0;
   1DCC 11r78s41           5984 	ld	de,#_cmd + 12
   1DCF 3E 00              5985 	ld	a,#0x00
   1DD1 12                 5986 	ld	(de),a
                           5987 ;demo.c:922: cmd.argument = 0x00; // from 70xY to left
   1DD2 11r79s41           5988 	ld	de,#_cmd + 13
   1DD5 3E 00              5989 	ld	a,#0x00
   1DD7 12                 5990 	ld	(de),a
                           5991 ;demo.c:923: cmd.command = 0xd0; // vram to vram, y only
   1DD8 11r7As41           5992 	ld	de,#_cmd + 14
   1DDB 3E D0              5993 	ld	a,#0xD0
   1DDD 12                 5994 	ld	(de),a
                           5995 ;demo.c:925: cmd.source_x = 0;
   1DDE 21r6Cs41           5996 	ld	hl,#_cmd
   1DE1 36 00              5997 	ld	(hl),#0x00
   1DE3 23                 5998 	inc	hl
   1DE4 36 00              5999 	ld	(hl),#0x00
                           6000 ;demo.c:926: cmd.source_y = 0;
   1DE6 11r6Es41           6001 	ld	de,#_cmd + 2
   1DE9 EB                 6002 	ex	de,hl
   1DEA 36 00              6003 	ld	(hl),#0x00
   1DEC 23                 6004 	inc	hl
   1DED 36 00              6005 	ld	(hl),#0x00
                           6006 ;demo.c:927: cmd.dest_x = 0;
   1DEF 11r70s41           6007 	ld	de,#_cmd + 4
   1DF2 EB                 6008 	ex	de,hl
   1DF3 36 00              6009 	ld	(hl),#0x00
   1DF5 23                 6010 	inc	hl
   1DF6 36 00              6011 	ld	(hl),#0x00
                           6012 ;demo.c:928: cmd.dest_y = 0+y;
   1DF8 11r72s41           6013 	ld	de,#_cmd + 6
   1DFB DD 4E FE           6014 	ld	c,-2 (ix)
   1DFE 06 00              6015 	ld	b,#0x00
   1E00 EB                 6016 	ex	de,hl
   1E01 71                 6017 	ld	(hl),c
   1E02 23                 6018 	inc	hl
   1E03 70                 6019 	ld	(hl),b
                           6020 ;demo.c:929: vdp_copier(&cmd);
   1E04 C5                 6021 	push	bc
   1E05 21r6Cs41           6022 	ld	hl,#_cmd
   1E08 E5                 6023 	push	hl
   1E09 CDr00s00           6024 	call	_vdp_copier
   1E0C F1                 6025 	pop	af
   1E0D C1                 6026 	pop	bc
                           6027 ;demo.c:930: cmd.dest_y = 256+y;
   1E0E 11r72s41           6028 	ld	de,#_cmd + 6
   1E11 21 00 01           6029 	ld	hl,#0x0100
   1E14 09                 6030 	add	hl,bc
   1E15 4D                 6031 	ld	c,l
   1E16 44                 6032 	ld	b,h
   1E17 EB                 6033 	ex	de,hl
   1E18 71                 6034 	ld	(hl),c
   1E19 23                 6035 	inc	hl
   1E1A 70                 6036 	ld	(hl),b
                           6037 ;demo.c:931: vdp_copier(&cmd);
   1E1B 21r6Cs41           6038 	ld	hl,#_cmd
   1E1E E5                 6039 	push	hl
   1E1F CDr00s00           6040 	call	_vdp_copier
   1E22 F1                 6041 	pop	af
                           6042 ;demo.c:932: waitVB();
   1E23 76                 6043 		halt 
                           6044 ;demo.c:918: for (y = 0; y < 212; y++) {
   1E24 DD 34 FE           6045 	inc	-2 (ix)
   1E27 C3rB2s1D           6046 	jp	00128$
   1E2A                    6047 00131$:
                           6048 ;demo.c:936: for (y = 9; y < 15; y+=1) {
   1E2A DD 36 FE 09        6049 	ld	-2 (ix),#0x09
   1E2E                    6050 00132$:
   1E2E DD 7E FE           6051 	ld	a,-2 (ix)
   1E31 D6 0F              6052 	sub	a,#0x0F
   1E33 D2r2Es20           6053 	jp	NC,00113$
                           6054 ;demo.c:937: for (x = 0; x < 21; x+=1) {
   1E36 DD 7E FE           6055 	ld	a,-2 (ix)
   1E39 87                 6056 	add	a,a
   1E3A DD 77 F9           6057 	ld	-7 (ix),a
   1E3D DD 36 FF 00        6058 	ld	-1 (ix),#0x00
   1E41                    6059 00108$:
   1E41 DD 7E FF           6060 	ld	a,-1 (ix)
   1E44 D6 15              6061 	sub	a,#0x15
   1E46 D2r28s20           6062 	jp	NC,00134$
                           6063 ;demo.c:938: if (x > 6 && x < 13) continue; 
   1E49 3E 06              6064 	ld	a,#0x06
   1E4B DD 96 FF           6065 	sub	a,-1 (ix)
   1E4E 30 08              6066 	jr	NC,00102$
   1E50 DD 7E FF           6067 	ld	a,-1 (ix)
   1E53 D6 0D              6068 	sub	a,#0x0D
   1E55 DAr22s20           6069 	jp	C,00110$
   1E58                    6070 00102$:
                           6071 ;demo.c:940: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   1E58 3E 06              6072 	ld	a,#0x06
   1E5A DD 96 FF           6073 	sub	a,-1 (ix)
   1E5D DArB3s1E           6074 	jp	C,00105$
   1E60 DD 56 FF           6075 	ld	d,-1 (ix)
   1E63 0E 00              6076 	ld	c,#0x00
   1E65 CB 22              6077 	sla	d
   1E67 CB 11              6078 	rl	c
   1E69 CB 22              6079 	sla	d
   1E6B CB 11              6080 	rl	c
   1E6D CB 22              6081 	sla	d
   1E6F CB 11              6082 	rl	c
   1E71 7A                 6083 	ld	a,d
   1E72 C6 69              6084 	add	a,#0x69
   1E74 57                 6085 	ld	d,a
   1E75 79                 6086 	ld	a,c
   1E76 CE 00              6087 	adc	a,#0x00
   1E78 47                 6088 	ld	b,a
   1E79 DD 5E FE           6089 	ld	e,-2 (ix)
   1E7C 0E 00              6090 	ld	c,#0x00
   1E7E CB 23              6091 	sla	e
   1E80 CB 11              6092 	rl	c
   1E82 CB 23              6093 	sla	e
   1E84 CB 11              6094 	rl	c
   1E86 CB 23              6095 	sla	e
   1E88 CB 11              6096 	rl	c
   1E8A 7A                 6097 	ld	a,d
   1E8B 83                 6098 	add	a,e
   1E8C 5F                 6099 	ld	e,a
   1E8D 78                 6100 	ld	a,b
   1E8E 89                 6101 	adc	a,c
   1E8F 0E 00              6102 	ld	c,#0x00
   1E91 3Er00              6103 	ld	a,#<_sintab
   1E93 83                 6104 	add	a,e
   1E94 5F                 6105 	ld	e,a
   1E95 3Es00              6106 	ld	a,#>_sintab
   1E97 89                 6107 	adc	a,c
   1E98 6B                 6108 	ld	l,e
   1E99 67                 6109 	ld	h,a
   1E9A 5E                 6110 	ld	e,(hl)
   1E9B CB 2B              6111 	sra	e
   1E9D CB 2B              6112 	sra	e
   1E9F CB 2B              6113 	sra	e
   1EA1 CB 2B              6114 	sra	e
   1EA3 7B                 6115 	ld	a,e
   1EA4 17                 6116 	rla	
   1EA5 9F                 6117 	sbc	a,a
   1EA6 4F                 6118 	ld	c,a
   1EA7 7B                 6119 	ld	a,e
   1EA8 C6 07              6120 	add	a,#0x07
   1EAA DD 77 FC           6121 	ld	-4 (ix),a
   1EAD 79                 6122 	ld	a,c
   1EAE CE 00              6123 	adc	a,#0x00
   1EB0 DD 77 FD           6124 	ld	-3 (ix),a
   1EB3                    6125 00105$:
                           6126 ;demo.c:941: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   1EB3 DD 7E FF           6127 	ld	a,-1 (ix)
   1EB6 D6 0D              6128 	sub	a,#0x0D
   1EB8 DAr19s1F           6129 	jp	C,00107$
   1EBB DD 5E FF           6130 	ld	e,-1 (ix)
   1EBE 16 00              6131 	ld	d,#0x00
   1EC0 21 17 00           6132 	ld	hl,#0x0017
   1EC3 19                 6133 	add	hl,de
   1EC4 EB                 6134 	ex	de,hl
   1EC5 CB 23              6135 	sla	e
   1EC7 CB 12              6136 	rl	d
   1EC9 CB 23              6137 	sla	e
   1ECB CB 12              6138 	rl	d
   1ECD CB 23              6139 	sla	e
   1ECF CB 12              6140 	rl	d
   1ED1 21 69 00           6141 	ld	hl,#0x0069
   1ED4 19                 6142 	add	hl,de
   1ED5 45                 6143 	ld	b,l
   1ED6 54                 6144 	ld	d,h
   1ED7 DD 4E FE           6145 	ld	c,-2 (ix)
   1EDA 1E 00              6146 	ld	e,#0x00
   1EDC 79                 6147 	ld	a,c
   1EDD C6 13              6148 	add	a,#0x13
   1EDF 4F                 6149 	ld	c,a
   1EE0 7B                 6150 	ld	a,e
   1EE1 CE 00              6151 	adc	a,#0x00
   1EE3 5F                 6152 	ld	e,a
   1EE4 CB 21              6153 	sla	c
   1EE6 CB 13              6154 	rl	e
   1EE8 CB 21              6155 	sla	c
   1EEA CB 13              6156 	rl	e
   1EEC CB 21              6157 	sla	c
   1EEE CB 13              6158 	rl	e
   1EF0 78                 6159 	ld	a,b
   1EF1 81                 6160 	add	a,c
   1EF2 4F                 6161 	ld	c,a
   1EF3 7A                 6162 	ld	a,d
   1EF4 8B                 6163 	adc	a,e
   1EF5 1E 00              6164 	ld	e,#0x00
   1EF7 3Er00              6165 	ld	a,#<_sintab
   1EF9 81                 6166 	add	a,c
   1EFA 4F                 6167 	ld	c,a
   1EFB 3Es00              6168 	ld	a,#>_sintab
   1EFD 8B                 6169 	adc	a,e
   1EFE 69                 6170 	ld	l,c
   1EFF 67                 6171 	ld	h,a
   1F00 4E                 6172 	ld	c,(hl)
   1F01 CB 29              6173 	sra	c
   1F03 CB 29              6174 	sra	c
   1F05 CB 29              6175 	sra	c
   1F07 CB 29              6176 	sra	c
   1F09 79                 6177 	ld	a,c
   1F0A 17                 6178 	rla	
   1F0B 9F                 6179 	sbc	a,a
   1F0C 5F                 6180 	ld	e,a
   1F0D 79                 6181 	ld	a,c
   1F0E C6 07              6182 	add	a,#0x07
   1F10 DD 77 FC           6183 	ld	-4 (ix),a
   1F13 7B                 6184 	ld	a,e
   1F14 CE 00              6185 	adc	a,#0x00
   1F16 DD 77 FD           6186 	ld	-3 (ix),a
   1F19                    6187 00107$:
                           6188 ;demo.c:943: cmd.size_x = 11;
   1F19 11r74s41           6189 	ld	de,#_cmd + 8
   1F1C EB                 6190 	ex	de,hl
   1F1D 36 0B              6191 	ld	(hl),#0x0B
   1F1F 23                 6192 	inc	hl
   1F20 36 00              6193 	ld	(hl),#0x00
                           6194 ;demo.c:944: cmd.size_y = 28-(14-px);
   1F22 21r76s41           6195 	ld	hl,#_cmd + 10
   1F25 DD 75 FA           6196 	ld	-6 (ix),l
   1F28 DD 74 FB           6197 	ld	-5 (ix),h
   1F2B 3E 0E              6198 	ld	a,#0x0E
   1F2D DD 96 FC           6199 	sub	a,-4 (ix)
   1F30 4F                 6200 	ld	c,a
   1F31 3E 00              6201 	ld	a,#0x00
   1F33 DD 9E FD           6202 	sbc	a,-3 (ix)
   1F36 5F                 6203 	ld	e,a
   1F37 3E 1C              6204 	ld	a,#0x1C
   1F39 91                 6205 	sub	a,c
   1F3A 57                 6206 	ld	d,a
   1F3B 3E 00              6207 	ld	a,#0x00
   1F3D 9B                 6208 	sbc	a,e
   1F3E 47                 6209 	ld	b,a
   1F3F DD 6E FA           6210 	ld	l,-6 (ix)
   1F42 DD 66 FB           6211 	ld	h,-5 (ix)
   1F45 72                 6212 	ld	(hl),d
   1F46 23                 6213 	inc	hl
   1F47 70                 6214 	ld	(hl),b
                           6215 ;demo.c:945: cmd.data = 0;
   1F48 21r78s41           6216 	ld	hl,#_cmd + 12
   1F4B 36 00              6217 	ld	(hl),#0x00
                           6218 ;demo.c:946: cmd.argument = 0x00; // from 70xY to left
   1F4D 21r79s41           6219 	ld	hl,#_cmd + 13
   1F50 36 00              6220 	ld	(hl),#0x00
                           6221 ;demo.c:947: cmd.command = 0x98; // vram to vram, y only
   1F52 21r7As41           6222 	ld	hl,#_cmd + 14
   1F55 36 98              6223 	ld	(hl),#0x98
                           6224 ;demo.c:949: cmd.source_x = twelvetimes[px];
   1F57 DD 46 FC           6225 	ld	b,-4 (ix)
   1F5A DD 56 FD           6226 	ld	d,-3 (ix)
   1F5D CB 20              6227 	sla	b
   1F5F CB 12              6228 	rl	d
   1F61 3Er20              6229 	ld	a,#<_twelvetimes
   1F63 80                 6230 	add	a,b
   1F64 47                 6231 	ld	b,a
   1F65 3Es01              6232 	ld	a,#>_twelvetimes
   1F67 8A                 6233 	adc	a,d
   1F68 68                 6234 	ld	l,b
   1F69 67                 6235 	ld	h,a
   1F6A 46                 6236 	ld	b,(hl)
   1F6B 23                 6237 	inc	hl
   1F6C 56                 6238 	ld	d,(hl)
   1F6D 21r6Cs41           6239 	ld	hl,#_cmd
   1F70 70                 6240 	ld	(hl),b
   1F71 23                 6241 	inc	hl
   1F72 72                 6242 	ld	(hl),d
                           6243 ;demo.c:950: cmd.source_y = 768+183+(15-px);
   1F73 23                 6244 	inc	hl
   1F74 DD 75 FA           6245 	ld	-6 (ix),l
   1F77 DD 74 FB           6246 	ld	-5 (ix),h
   1F7A 3E C6              6247 	ld	a,#0xC6
   1F7C DD 96 FC           6248 	sub	a,-4 (ix)
   1F7F 47                 6249 	ld	b,a
   1F80 3E 03              6250 	ld	a,#0x03
   1F82 DD 9E FD           6251 	sbc	a,-3 (ix)
   1F85 57                 6252 	ld	d,a
   1F86 DD 6E FA           6253 	ld	l,-6 (ix)
   1F89 DD 66 FB           6254 	ld	h,-5 (ix)
   1F8C 70                 6255 	ld	(hl),b
   1F8D 23                 6256 	inc	hl
   1F8E 72                 6257 	ld	(hl),d
                           6258 ;demo.c:951: cmd.dest_x = 0+twelvetimes[x];
   1F8F 21r70s41           6259 	ld	hl,#_cmd + 4
   1F92 DD 75 FA           6260 	ld	-6 (ix),l
   1F95 DD 74 FB           6261 	ld	-5 (ix),h
   1F98 DD 7E FF           6262 	ld	a,-1 (ix)
   1F9B 87                 6263 	add	a,a
   1F9C C6r20              6264 	add	a,#<_twelvetimes
   1F9E 6F                 6265 	ld	l,a
   1F9F 3Es01              6266 	ld	a,#>_twelvetimes
   1FA1 CE 00              6267 	adc	a,#0x00
   1FA3 67                 6268 	ld	h,a
   1FA4 46                 6269 	ld	b,(hl)
   1FA5 23                 6270 	inc	hl
   1FA6 56                 6271 	ld	d,(hl)
   1FA7 DD 6E FA           6272 	ld	l,-6 (ix)
   1FAA DD 66 FB           6273 	ld	h,-5 (ix)
   1FAD 70                 6274 	ld	(hl),b
   1FAE 23                 6275 	inc	hl
   1FAF 72                 6276 	ld	(hl),d
                           6277 ;demo.c:952: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   1FB0 21r72s41           6278 	ld	hl,#_cmd + 6
   1FB3 DD 75 FA           6279 	ld	-6 (ix),l
   1FB6 DD 74 FB           6280 	ld	-5 (ix),h
   1FB9 3Er54              6281 	ld	a,#<_eighttimes
   1FBB DD 86 F9           6282 	add	a,-7 (ix)
   1FBE 6F                 6283 	ld	l,a
   1FBF 3Es01              6284 	ld	a,#>_eighttimes
   1FC1 CE 00              6285 	adc	a,#0x00
   1FC3 67                 6286 	ld	h,a
   1FC4 46                 6287 	ld	b,(hl)
   1FC5 23                 6288 	inc	hl
   1FC6 56                 6289 	ld	d,(hl)
   1FC7 78                 6290 	ld	a,b
   1FC8 C6 04              6291 	add	a,#0x04
   1FCA 47                 6292 	ld	b,a
   1FCB 7A                 6293 	ld	a,d
   1FCC CE 00              6294 	adc	a,#0x00
   1FCE 57                 6295 	ld	d,a
   1FCF 78                 6296 	ld	a,b
   1FD0 81                 6297 	add	a,c
   1FD1 47                 6298 	ld	b,a
   1FD2 7A                 6299 	ld	a,d
   1FD3 8B                 6300 	adc	a,e
   1FD4 57                 6301 	ld	d,a
   1FD5 DD 6E FA           6302 	ld	l,-6 (ix)
   1FD8 DD 66 FB           6303 	ld	h,-5 (ix)
   1FDB 70                 6304 	ld	(hl),b
   1FDC 23                 6305 	inc	hl
   1FDD 72                 6306 	ld	(hl),d
                           6307 ;demo.c:953: vdp_copier(&cmd);
   1FDE C5                 6308 	push	bc
   1FDF D5                 6309 	push	de
   1FE0 21r6Cs41           6310 	ld	hl,#_cmd
   1FE3 E5                 6311 	push	hl
   1FE4 CDr00s00           6312 	call	_vdp_copier
   1FE7 F1                 6313 	pop	af
   1FE8 D1                 6314 	pop	de
   1FE9 C1                 6315 	pop	bc
                           6316 ;demo.c:954: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   1FEA 21r72s41           6317 	ld	hl,#_cmd + 6
   1FED DD 75 FA           6318 	ld	-6 (ix),l
   1FF0 DD 74 FB           6319 	ld	-5 (ix),h
   1FF3 3Er54              6320 	ld	a,#<_eighttimes
   1FF5 DD 86 F9           6321 	add	a,-7 (ix)
   1FF8 6F                 6322 	ld	l,a
   1FF9 3Es01              6323 	ld	a,#>_eighttimes
   1FFB CE 00              6324 	adc	a,#0x00
   1FFD 67                 6325 	ld	h,a
   1FFE 46                 6326 	ld	b,(hl)
   1FFF 23                 6327 	inc	hl
   2000 56                 6328 	ld	d,(hl)
   2001 78                 6329 	ld	a,b
   2002 C6 04              6330 	add	a,#0x04
   2004 47                 6331 	ld	b,a
   2005 7A                 6332 	ld	a,d
   2006 CE 00              6333 	adc	a,#0x00
   2008 C6 01              6334 	add	a,#0x01
   200A 57                 6335 	ld	d,a
   200B 78                 6336 	ld	a,b
   200C 81                 6337 	add	a,c
   200D 4F                 6338 	ld	c,a
   200E 7A                 6339 	ld	a,d
   200F 8B                 6340 	adc	a,e
   2010 5F                 6341 	ld	e,a
   2011 DD 6E FA           6342 	ld	l,-6 (ix)
   2014 DD 66 FB           6343 	ld	h,-5 (ix)
   2017 71                 6344 	ld	(hl),c
   2018 23                 6345 	inc	hl
   2019 73                 6346 	ld	(hl),e
                           6347 ;demo.c:955: vdp_copier(&cmd);
   201A 21r6Cs41           6348 	ld	hl,#_cmd
   201D E5                 6349 	push	hl
   201E CDr00s00           6350 	call	_vdp_copier
   2021 F1                 6351 	pop	af
   2022                    6352 00110$:
                           6353 ;demo.c:937: for (x = 0; x < 21; x+=1) {
   2022 DD 34 FF           6354 	inc	-1 (ix)
   2025 C3r41s1E           6355 	jp	00108$
   2028                    6356 00134$:
                           6357 ;demo.c:936: for (y = 9; y < 15; y+=1) {
   2028 DD 34 FE           6358 	inc	-2 (ix)
   202B C3r2Es1E           6359 	jp	00132$
   202E                    6360 00113$:
                           6361 ;demo.c:961: if (buf == -1) { bo = 0; ya = 0; }
   202E 3Ar03s42           6362 	ld	a,(#_buf+0)
   2031 3C                 6363 	inc	a
   2032 20 06              6364 	jr	NZ,00188$
   2034 3Ar04s42           6365 	ld	a,(#_buf+1)
   2037 3C                 6366 	inc	a
   2038 28 02              6367 	jr	Z,00189$
   203A                    6368 00188$:
   203A 18 05              6369 	jr	00115$
   203C                    6370 00189$:
   203C 01 00 00           6371 	ld	bc,#0x0000
   203F 18 03              6372 	jr	00116$
   2041                    6373 00115$:
                           6374 ;demo.c:962: else { bo = 256; ya = 6;}
   2041 01 00 01           6375 	ld	bc,#0x0100
   2044                    6376 00116$:
                           6377 ;demo.c:964: cmd.size_x = 72;
   2044 11r74s41           6378 	ld	de,#_cmd + 8
   2047 EB                 6379 	ex	de,hl
   2048 36 48              6380 	ld	(hl),#0x48
   204A 23                 6381 	inc	hl
   204B 36 00              6382 	ld	(hl),#0x00
                           6383 ;demo.c:965: cmd.size_y = 80;
   204D 11r76s41           6384 	ld	de,#_cmd + 10
   2050 EB                 6385 	ex	de,hl
   2051 36 50              6386 	ld	(hl),#0x50
   2053 23                 6387 	inc	hl
   2054 36 00              6388 	ld	(hl),#0x00
                           6389 ;demo.c:966: cmd.data = 0;
   2056 11r78s41           6390 	ld	de,#_cmd + 12
   2059 3E 00              6391 	ld	a,#0x00
   205B 12                 6392 	ld	(de),a
                           6393 ;demo.c:967: cmd.argument = 0x00; // from 70xY to left
   205C 11r79s41           6394 	ld	de,#_cmd + 13
   205F 3E 00              6395 	ld	a,#0x00
   2061 12                 6396 	ld	(de),a
                           6397 ;demo.c:968: cmd.command = 0xd0; // vram to vram, y only
   2062 11r7As41           6398 	ld	de,#_cmd + 14
   2065 3E D0              6399 	ld	a,#0xD0
   2067 12                 6400 	ld	(de),a
                           6401 ;demo.c:969: cmd.source_x = 178;
   2068 21r6Cs41           6402 	ld	hl,#_cmd
   206B 36 B2              6403 	ld	(hl),#0xB2
   206D 23                 6404 	inc	hl
   206E 36 00              6405 	ld	(hl),#0x00
                           6406 ;demo.c:970: cmd.source_y = 0;
   2070 11r6Es41           6407 	ld	de,#_cmd + 2
   2073 EB                 6408 	ex	de,hl
   2074 36 00              6409 	ld	(hl),#0x00
   2076 23                 6410 	inc	hl
   2077 36 00              6411 	ld	(hl),#0x00
                           6412 ;demo.c:971: cmd.dest_x = 84;
   2079 11r70s41           6413 	ld	de,#_cmd + 4
   207C EB                 6414 	ex	de,hl
   207D 36 54              6415 	ld	(hl),#0x54
   207F 23                 6416 	inc	hl
   2080 36 00              6417 	ld	(hl),#0x00
                           6418 ;demo.c:972: cmd.dest_y = 72+bo;
   2082 11r72s41           6419 	ld	de,#_cmd + 6
   2085 21 48 00           6420 	ld	hl,#0x0048
   2088 09                 6421 	add	hl,bc
   2089 4D                 6422 	ld	c,l
   208A 44                 6423 	ld	b,h
   208B EB                 6424 	ex	de,hl
   208C 71                 6425 	ld	(hl),c
   208D 23                 6426 	inc	hl
   208E 70                 6427 	ld	(hl),b
                           6428 ;demo.c:973: vdp_copier(&cmd);
   208F C5                 6429 	push	bc
   2090 21r6Cs41           6430 	ld	hl,#_cmd
   2093 E5                 6431 	push	hl
   2094 CDr00s00           6432 	call	_vdp_copier
   2097 F1                 6433 	pop	af
   2098 C1                 6434 	pop	bc
                           6435 ;demo.c:975: for (y = 0; y < 5; y+=1) {
   2099 DD 36 FE 00        6436 	ld	-2 (ix),#0x00
   209D                    6437 00140$:
   209D DD 7E FE           6438 	ld	a,-2 (ix)
   20A0 D6 05              6439 	sub	a,#0x05
   20A2 D2r03s22           6440 	jp	NC,00143$
                           6441 ;demo.c:976: for (x = 0; x < 6; x+=1) {
   20A5 DD 7E FE           6442 	ld	a,-2 (ix)
   20A8 87                 6443 	add	a,a
   20A9 DD 77 F9           6444 	ld	-7 (ix),a
   20AC DD 36 FF 00        6445 	ld	-1 (ix),#0x00
   20B0                    6446 00136$:
   20B0 DD 7E FF           6447 	ld	a,-1 (ix)
   20B3 D6 06              6448 	sub	a,#0x06
   20B5 D2rFDs21           6449 	jp	NC,00142$
                           6450 ;demo.c:978: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   20B8 DD 5E FF           6451 	ld	e,-1 (ix)
   20BB 16 00              6452 	ld	d,#0x00
   20BD CB 23              6453 	sla	e
   20BF CB 12              6454 	rl	d
   20C1 CB 23              6455 	sla	e
   20C3 CB 12              6456 	rl	d
   20C5 3Ar05s42           6457 	ld	a,(#_ffa+0)
   20C8 83                 6458 	add	a,e
   20C9 DD 77 FA           6459 	ld	-6 (ix),a
   20CC FD 21r05s42        6460 	ld	iy,#_ffa
   20D0 FD 7E 01           6461 	ld	a,1 (iy)
   20D3 8A                 6462 	adc	a,d
   20D4 DD 77 FB           6463 	ld	-5 (ix),a
   20D7 DD 5E FE           6464 	ld	e,-2 (ix)
   20DA 16 00              6465 	ld	d,#0x00
   20DC CB 23              6466 	sla	e
   20DE CB 12              6467 	rl	d
   20E0 CB 23              6468 	sla	e
   20E2 CB 12              6469 	rl	d
   20E4 DD 7E FA           6470 	ld	a,-6 (ix)
   20E7 83                 6471 	add	a,e
   20E8 5F                 6472 	ld	e,a
   20E9 DD 7E FB           6473 	ld	a,-5 (ix)
   20EC 8A                 6474 	adc	a,d
   20ED 16 00              6475 	ld	d,#0x00
   20EF 21r00s00           6476 	ld	hl,#_sintab
   20F2 19                 6477 	add	hl,de
   20F3 5E                 6478 	ld	e,(hl)
   20F4 CB 2B              6479 	sra	e
   20F6 CB 2B              6480 	sra	e
   20F8 CB 2B              6481 	sra	e
   20FA CB 2B              6482 	sra	e
   20FC 7B                 6483 	ld	a,e
   20FD 17                 6484 	rla	
   20FE 9F                 6485 	sbc	a,a
   20FF 57                 6486 	ld	d,a
   2100 21 07 00           6487 	ld	hl,#0x0007
   2103 19                 6488 	add	hl,de
   2104 DD 75 FC           6489 	ld	-4 (ix),l
                           6490 ;demo.c:979: if (px < 0) px = 0; 
   2107 DD 74 FD           6491 	ld	-3 (ix),h
   210A 7C                 6492 	ld	a, h
   210B CB 7F              6493 	bit	7,a
   210D 28 08              6494 	jr	Z,00118$
   210F DD 36 FC 00        6495 	ld	-4 (ix),#0x00
   2113 DD 36 FD 00        6496 	ld	-3 (ix),#0x00
   2117                    6497 00118$:
                           6498 ;demo.c:980: if (px > 14) px = 14; 
   2117 3E 0E              6499 	ld	a,#0x0E
   2119 DD 96 FC           6500 	sub	a,-4 (ix)
   211C 3E 00              6501 	ld	a,#0x00
   211E DD 9E FD           6502 	sbc	a,-3 (ix)
   2121 F2r2Cs21           6503 	jp	P,00120$
   2124 DD 36 FC 0E        6504 	ld	-4 (ix),#0x0E
   2128 DD 36 FD 00        6505 	ld	-3 (ix),#0x00
   212C                    6506 00120$:
                           6507 ;demo.c:982: cmd.size_x = 12;
   212C 11r74s41           6508 	ld	de,#_cmd + 8
   212F EB                 6509 	ex	de,hl
   2130 36 0C              6510 	ld	(hl),#0x0C
   2132 23                 6511 	inc	hl
   2133 36 00              6512 	ld	(hl),#0x00
                           6513 ;demo.c:983: cmd.size_y = 11;
   2135 11r76s41           6514 	ld	de,#_cmd + 10
   2138 EB                 6515 	ex	de,hl
   2139 36 0B              6516 	ld	(hl),#0x0B
   213B 23                 6517 	inc	hl
   213C 36 00              6518 	ld	(hl),#0x00
                           6519 ;demo.c:984: cmd.data = 0;
   213E 11r78s41           6520 	ld	de,#_cmd + 12
   2141 3E 00              6521 	ld	a,#0x00
   2143 12                 6522 	ld	(de),a
                           6523 ;demo.c:985: cmd.argument = 0x00; // from 70xY to left
   2144 11r79s41           6524 	ld	de,#_cmd + 13
   2147 3E 00              6525 	ld	a,#0x00
   2149 12                 6526 	ld	(de),a
                           6527 ;demo.c:986: cmd.command = 0x98; // vram to vram, y only
   214A 11r7As41           6528 	ld	de,#_cmd + 14
   214D 3E 98              6529 	ld	a,#0x98
   214F 12                 6530 	ld	(de),a
                           6531 ;demo.c:988: cmd.source_x = twelvetimes[px];
   2150 DD 5E FC           6532 	ld	e,-4 (ix)
   2153 DD 56 FD           6533 	ld	d,-3 (ix)
   2156 CB 23              6534 	sla	e
   2158 CB 12              6535 	rl	d
   215A 21r20s01           6536 	ld	hl,#_twelvetimes
   215D 19                 6537 	add	hl,de
   215E 5E                 6538 	ld	e,(hl)
   215F 23                 6539 	inc	hl
   2160 56                 6540 	ld	d,(hl)
   2161 21r6Cs41           6541 	ld	hl,#_cmd
   2164 73                 6542 	ld	(hl),e
   2165 23                 6543 	inc	hl
   2166 72                 6544 	ld	(hl),d
                           6545 ;demo.c:989: cmd.source_y = 768+183+16-px;
   2167 23                 6546 	inc	hl
   2168 DD 75 FA           6547 	ld	-6 (ix),l
   216B DD 74 FB           6548 	ld	-5 (ix),h
   216E 3E C7              6549 	ld	a,#0xC7
   2170 DD 96 FC           6550 	sub	a,-4 (ix)
   2173 5F                 6551 	ld	e,a
   2174 3E 03              6552 	ld	a,#0x03
   2176 DD 9E FD           6553 	sbc	a,-3 (ix)
   2179 57                 6554 	ld	d,a
   217A DD 6E FA           6555 	ld	l,-6 (ix)
   217D DD 66 FB           6556 	ld	h,-5 (ix)
   2180 73                 6557 	ld	(hl),e
   2181 23                 6558 	inc	hl
   2182 72                 6559 	ld	(hl),d
                           6560 ;demo.c:990: cmd.dest_x = 84+twelvetimes[x];
   2183 21r70s41           6561 	ld	hl,#_cmd + 4
   2186 DD 75 FA           6562 	ld	-6 (ix),l
   2189 DD 74 FB           6563 	ld	-5 (ix),h
   218C DD 7E FF           6564 	ld	a,-1 (ix)
   218F 87                 6565 	add	a,a
   2190 C6r20              6566 	add	a,#<_twelvetimes
   2192 6F                 6567 	ld	l,a
   2193 3Es01              6568 	ld	a,#>_twelvetimes
   2195 CE 00              6569 	adc	a,#0x00
   2197 67                 6570 	ld	h,a
   2198 5E                 6571 	ld	e,(hl)
   2199 23                 6572 	inc	hl
   219A 56                 6573 	ld	d,(hl)
   219B 21 54 00           6574 	ld	hl,#0x0054
   219E 19                 6575 	add	hl,de
   219F EB                 6576 	ex	de,hl
   21A0 DD 6E FA           6577 	ld	l,-6 (ix)
   21A3 DD 66 FB           6578 	ld	h,-5 (ix)
   21A6 73                 6579 	ld	(hl),e
   21A7 23                 6580 	inc	hl
   21A8 72                 6581 	ld	(hl),d
                           6582 ;demo.c:991: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   21A9 21r72s41           6583 	ld	hl,#_cmd + 6
   21AC DD 75 FA           6584 	ld	-6 (ix),l
   21AF DD 74 FB           6585 	ld	-5 (ix),h
   21B2 3Er54              6586 	ld	a,#<_eighttimes
   21B4 DD 86 F9           6587 	add	a,-7 (ix)
   21B7 6F                 6588 	ld	l,a
   21B8 3Es01              6589 	ld	a,#>_eighttimes
   21BA CE 00              6590 	adc	a,#0x00
   21BC 67                 6591 	ld	h,a
   21BD 5E                 6592 	ld	e,(hl)
   21BE 23                 6593 	inc	hl
   21BF 56                 6594 	ld	d,(hl)
   21C0 13                 6595 	inc	de
   21C1 13                 6596 	inc	de
   21C2 13                 6597 	inc	de
   21C3 13                 6598 	inc	de
   21C4 79                 6599 	ld	a,c
   21C5 83                 6600 	add	a,e
   21C6 DD 77 F7           6601 	ld	-9 (ix),a
   21C9 78                 6602 	ld	a,b
   21CA 8A                 6603 	adc	a,d
   21CB DD 77 F8           6604 	ld	-8 (ix),a
   21CE 3E 0E              6605 	ld	a,#0x0E
   21D0 DD 96 FC           6606 	sub	a,-4 (ix)
   21D3 5F                 6607 	ld	e,a
   21D4 3E 00              6608 	ld	a,#0x00
   21D6 DD 9E FD           6609 	sbc	a,-3 (ix)
   21D9 57                 6610 	ld	d,a
   21DA DD 7E F7           6611 	ld	a,-9 (ix)
   21DD 83                 6612 	add	a,e
   21DE 5F                 6613 	ld	e,a
   21DF DD 7E F8           6614 	ld	a,-8 (ix)
   21E2 8A                 6615 	adc	a,d
   21E3 57                 6616 	ld	d,a
   21E4 DD 6E FA           6617 	ld	l,-6 (ix)
   21E7 DD 66 FB           6618 	ld	h,-5 (ix)
   21EA 73                 6619 	ld	(hl),e
   21EB 23                 6620 	inc	hl
   21EC 72                 6621 	ld	(hl),d
                           6622 ;demo.c:992: vdp_copier(&cmd);
   21ED C5                 6623 	push	bc
   21EE 21r6Cs41           6624 	ld	hl,#_cmd
   21F1 E5                 6625 	push	hl
   21F2 CDr00s00           6626 	call	_vdp_copier
   21F5 F1                 6627 	pop	af
   21F6 C1                 6628 	pop	bc
                           6629 ;demo.c:976: for (x = 0; x < 6; x+=1) {
   21F7 DD 34 FF           6630 	inc	-1 (ix)
   21FA C3rB0s20           6631 	jp	00136$
   21FD                    6632 00142$:
                           6633 ;demo.c:975: for (y = 0; y < 5; y+=1) {
   21FD DD 34 FE           6634 	inc	-2 (ix)
   2200 C3r9Ds20           6635 	jp	00140$
   2203                    6636 00143$:
                           6637 ;demo.c:997: for (x = 0; x < 6; x+=1) {
   2203 DD 36 FF 00        6638 	ld	-1 (ix),#0x00
   2207                    6639 00144$:
   2207 DD 7E FF           6640 	ld	a,-1 (ix)
   220A D6 06              6641 	sub	a,#0x06
   220C D2r4Ds23           6642 	jp	NC,00147$
                           6643 ;demo.c:998: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   220F DD 5E FF           6644 	ld	e,-1 (ix)
   2212 16 00              6645 	ld	d,#0x00
   2214 CB 23              6646 	sla	e
   2216 CB 12              6647 	rl	d
   2218 CB 23              6648 	sla	e
   221A CB 12              6649 	rl	d
   221C 3Ar05s42           6650 	ld	a,(#_ffa+0)
   221F 83                 6651 	add	a,e
   2220 5F                 6652 	ld	e,a
   2221 FD 21r05s42        6653 	ld	iy,#_ffa
   2225 FD 7E 01           6654 	ld	a,1 (iy)
   2228 8A                 6655 	adc	a,d
   2229 57                 6656 	ld	d,a
   222A 21 14 00           6657 	ld	hl,#0x0014
   222D 19                 6658 	add	hl,de
   222E 5D                 6659 	ld	e,l
   222F 16 00              6660 	ld	d,#0x00
   2231 21r00s00           6661 	ld	hl,#_sintab
   2234 19                 6662 	add	hl,de
   2235 5E                 6663 	ld	e,(hl)
   2236 CB 2B              6664 	sra	e
   2238 CB 2B              6665 	sra	e
   223A CB 2B              6666 	sra	e
   223C CB 2B              6667 	sra	e
   223E 7B                 6668 	ld	a,e
   223F 17                 6669 	rla	
   2240 9F                 6670 	sbc	a,a
   2241 57                 6671 	ld	d,a
   2242 21 07 00           6672 	ld	hl,#0x0007
   2245 19                 6673 	add	hl,de
   2246 DD 75 FC           6674 	ld	-4 (ix),l
                           6675 ;demo.c:999: if (px < 0) px = 0; 
   2249 DD 74 FD           6676 	ld	-3 (ix),h
   224C 7C                 6677 	ld	a, h
   224D CB 7F              6678 	bit	7,a
   224F 28 08              6679 	jr	Z,00122$
   2251 DD 36 FC 00        6680 	ld	-4 (ix),#0x00
   2255 DD 36 FD 00        6681 	ld	-3 (ix),#0x00
   2259                    6682 00122$:
                           6683 ;demo.c:1000: if (px > 14) px = 14; 
   2259 3E 0E              6684 	ld	a,#0x0E
   225B DD 96 FC           6685 	sub	a,-4 (ix)
   225E 3E 00              6686 	ld	a,#0x00
   2260 DD 9E FD           6687 	sbc	a,-3 (ix)
   2263 F2r6Es22           6688 	jp	P,00124$
   2266 DD 36 FC 0E        6689 	ld	-4 (ix),#0x0E
   226A DD 36 FD 00        6690 	ld	-3 (ix),#0x00
   226E                    6691 00124$:
                           6692 ;demo.c:1002: cmd.size_x = 12;
   226E 11r74s41           6693 	ld	de,#_cmd + 8
   2271 EB                 6694 	ex	de,hl
   2272 36 0C              6695 	ld	(hl),#0x0C
   2274 23                 6696 	inc	hl
   2275 36 00              6697 	ld	(hl),#0x00
                           6698 ;demo.c:1003: cmd.size_y = 27-(14-px);
   2277 21r76s41           6699 	ld	hl,#_cmd + 10
   227A DD 75 F7           6700 	ld	-9 (ix),l
   227D DD 74 F8           6701 	ld	-8 (ix),h
   2280 3E 0E              6702 	ld	a,#0x0E
   2282 DD 96 FC           6703 	sub	a,-4 (ix)
   2285 DD 77 FA           6704 	ld	-6 (ix),a
   2288 3E 00              6705 	ld	a,#0x00
   228A DD 9E FD           6706 	sbc	a,-3 (ix)
   228D DD 77 FB           6707 	ld	-5 (ix),a
   2290 3E 1B              6708 	ld	a,#0x1B
   2292 DD 96 FA           6709 	sub	a,-6 (ix)
   2295 5F                 6710 	ld	e,a
   2296 3E 00              6711 	ld	a,#0x00
   2298 DD 9E FB           6712 	sbc	a,-5 (ix)
   229B 57                 6713 	ld	d,a
   229C DD 6E F7           6714 	ld	l,-9 (ix)
   229F DD 66 F8           6715 	ld	h,-8 (ix)
   22A2 73                 6716 	ld	(hl),e
   22A3 23                 6717 	inc	hl
   22A4 72                 6718 	ld	(hl),d
                           6719 ;demo.c:1004: cmd.data = 0;
   22A5 11r78s41           6720 	ld	de,#_cmd + 12
   22A8 3E 00              6721 	ld	a,#0x00
   22AA 12                 6722 	ld	(de),a
                           6723 ;demo.c:1005: cmd.argument = 0x00; // from 70xY to left
   22AB 11r79s41           6724 	ld	de,#_cmd + 13
   22AE 3E 00              6725 	ld	a,#0x00
   22B0 12                 6726 	ld	(de),a
                           6727 ;demo.c:1006: cmd.command = 0x98; // vram to vram, y only
   22B1 11r7As41           6728 	ld	de,#_cmd + 14
   22B4 3E 98              6729 	ld	a,#0x98
   22B6 12                 6730 	ld	(de),a
                           6731 ;demo.c:1008: cmd.source_x = twelvetimes[px];
   22B7 DD 5E FC           6732 	ld	e,-4 (ix)
   22BA DD 56 FD           6733 	ld	d,-3 (ix)
   22BD CB 23              6734 	sla	e
   22BF CB 12              6735 	rl	d
   22C1 21r20s01           6736 	ld	hl,#_twelvetimes
   22C4 19                 6737 	add	hl,de
   22C5 5E                 6738 	ld	e,(hl)
   22C6 23                 6739 	inc	hl
   22C7 56                 6740 	ld	d,(hl)
   22C8 21r6Cs41           6741 	ld	hl,#_cmd
   22CB 73                 6742 	ld	(hl),e
   22CC 23                 6743 	inc	hl
   22CD 72                 6744 	ld	(hl),d
                           6745 ;demo.c:1009: cmd.source_y = 768+183+ 16-px;
   22CE 23                 6746 	inc	hl
   22CF DD 75 F7           6747 	ld	-9 (ix),l
   22D2 DD 74 F8           6748 	ld	-8 (ix),h
   22D5 3E C7              6749 	ld	a,#0xC7
   22D7 DD 96 FC           6750 	sub	a,-4 (ix)
   22DA 5F                 6751 	ld	e,a
   22DB 3E 03              6752 	ld	a,#0x03
   22DD DD 9E FD           6753 	sbc	a,-3 (ix)
   22E0 57                 6754 	ld	d,a
   22E1 DD 6E F7           6755 	ld	l,-9 (ix)
   22E4 DD 66 F8           6756 	ld	h,-8 (ix)
   22E7 73                 6757 	ld	(hl),e
   22E8 23                 6758 	inc	hl
   22E9 72                 6759 	ld	(hl),d
                           6760 ;demo.c:1010: cmd.dest_x = 84+twelvetimes[x];
   22EA 21r70s41           6761 	ld	hl,#_cmd + 4
   22ED DD 75 F7           6762 	ld	-9 (ix),l
   22F0 DD 74 F8           6763 	ld	-8 (ix),h
   22F3 DD 7E FF           6764 	ld	a,-1 (ix)
   22F6 87                 6765 	add	a,a
   22F7 C6r20              6766 	add	a,#<_twelvetimes
   22F9 6F                 6767 	ld	l,a
   22FA 3Es01              6768 	ld	a,#>_twelvetimes
   22FC CE 00              6769 	adc	a,#0x00
   22FE 67                 6770 	ld	h,a
   22FF 5E                 6771 	ld	e,(hl)
   2300 23                 6772 	inc	hl
   2301 56                 6773 	ld	d,(hl)
   2302 21 54 00           6774 	ld	hl,#0x0054
   2305 19                 6775 	add	hl,de
   2306 EB                 6776 	ex	de,hl
   2307 DD 6E F7           6777 	ld	l,-9 (ix)
   230A DD 66 F8           6778 	ld	h,-8 (ix)
   230D 73                 6779 	ld	(hl),e
   230E 23                 6780 	inc	hl
   230F 72                 6781 	ld	(hl),d
                           6782 ;demo.c:1011: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   2310 21r72s41           6783 	ld	hl,#_cmd + 6
   2313 DD 75 F7           6784 	ld	-9 (ix),l
   2316 DD 74 F8           6785 	ld	-8 (ix),h
   2319 11r5Es01           6786 	ld	de,#_eighttimes + 10
   231C EB                 6787 	ex	de,hl
   231D 5E                 6788 	ld	e,(hl)
   231E 23                 6789 	inc	hl
   231F 56                 6790 	ld	d,(hl)
   2320 13                 6791 	inc	de
   2321 13                 6792 	inc	de
   2322 13                 6793 	inc	de
   2323 13                 6794 	inc	de
   2324 79                 6795 	ld	a,c
   2325 83                 6796 	add	a,e
   2326 5F                 6797 	ld	e,a
   2327 78                 6798 	ld	a,b
   2328 8A                 6799 	adc	a,d
   2329 57                 6800 	ld	d,a
   232A 7B                 6801 	ld	a,e
   232B DD 86 FA           6802 	add	a,-6 (ix)
   232E 5F                 6803 	ld	e,a
   232F 7A                 6804 	ld	a,d
   2330 DD 8E FB           6805 	adc	a,-5 (ix)
   2333 57                 6806 	ld	d,a
   2334 DD 6E F7           6807 	ld	l,-9 (ix)
   2337 DD 66 F8           6808 	ld	h,-8 (ix)
   233A 73                 6809 	ld	(hl),e
   233B 23                 6810 	inc	hl
   233C 72                 6811 	ld	(hl),d
                           6812 ;demo.c:1012: vdp_copier(&cmd);
   233D C5                 6813 	push	bc
   233E 21r6Cs41           6814 	ld	hl,#_cmd
   2341 E5                 6815 	push	hl
   2342 CDr00s00           6816 	call	_vdp_copier
   2345 F1                 6817 	pop	af
   2346 C1                 6818 	pop	bc
                           6819 ;demo.c:997: for (x = 0; x < 6; x+=1) {
   2347 DD 34 FF           6820 	inc	-1 (ix)
   234A C3r07s22           6821 	jp	00144$
   234D                    6822 00147$:
                           6823 ;demo.c:1016: if (buf == -1) vdp_register(2, 0x1F);
   234D 3Ar03s42           6824 	ld	a,(#_buf+0)
   2350 3C                 6825 	inc	a
   2351 20 06              6826 	jr	NZ,00200$
   2353 3Ar04s42           6827 	ld	a,(#_buf+1)
   2356 3C                 6828 	inc	a
   2357 28 02              6829 	jr	Z,00201$
   2359                    6830 00200$:
   2359 18 0A              6831 	jr	00126$
   235B                    6832 00201$:
   235B 21 02 1F           6833 	ld	hl,#0x1F02
   235E E5                 6834 	push	hl
   235F CDr00s00           6835 	call	_vdp_register
   2362 F1                 6836 	pop	af
   2363 18 08              6837 	jr	00127$
   2365                    6838 00126$:
                           6839 ;demo.c:1017: else vdp_register(2, 0x3F);
   2365 21 02 3F           6840 	ld	hl,#0x3F02
   2368 E5                 6841 	push	hl
   2369 CDr00s00           6842 	call	_vdp_register
   236C F1                 6843 	pop	af
   236D                    6844 00127$:
                           6845 ;demo.c:1020: buf = -buf;
   236D AF                 6846 	xor	a,a
   236E FD 21r03s42        6847 	ld	iy,#_buf
   2372 3E 00              6848 	ld	a,#0x00
   2374 FD 9E 00           6849 	sbc	a,0 (iy)
   2377 21r03s42           6850 	ld	hl,#_buf + 0
   237A 77                 6851 	ld	(hl), a
   237B FD 21r03s42        6852 	ld	iy,#_buf
   237F 3E 00              6853 	ld	a,#0x00
   2381 FD 9E 01           6854 	sbc	a,1 (iy)
   2384 21r04s42           6855 	ld	hl,#_buf + 1
   2387 77                 6856 	ld	(hl), a
                           6857 ;demo.c:1022: ffa+=8;
   2388 21r05s42           6858 	ld	hl,#_ffa
   238B 7E                 6859 	ld	a,(hl)
   238C C6 08              6860 	add	a,#0x08
   238E 23                 6861 	inc	hl
   238F 2B                 6862 	dec	hl
   2390 C5                 6863 	push	bc
   2391 4F                 6864 	ld	c, a
   2392 23                 6865 	inc	hl
   2393 7E                 6866 	ld	a, (hl)
   2394 47                 6867 	ld	b, a
   2395 79                 6868 	ld	a, c
   2396 2B                 6869 	dec	hl
   2397 77                 6870 	ld	(hl), a
   2398 78                 6871 	ld	a, b
   2399 C1                 6872 	pop	bc
   239A CE 00              6873 	adc	a,#0x00
   239C 23                 6874 	inc	hl
   239D 77                 6875 	ld	(hl),a
   239E DD F9              6876 	ld	sp,ix
   23A0 DD E1              6877 	pop	ix
   23A2 C9                 6878 	ret
   23A3                    6879 _thewave_end::
                           6880 ;demo.c:1028: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           6881 ;	---------------------------------
                           6882 ; Function drawtritile
                           6883 ; ---------------------------------
   23A3                    6884 _drawtritile_start::
   23A3                    6885 _drawtritile:
   23A3 DD E5              6886 	push	ix
   23A5 DD 21 00 00        6887 	ld	ix,#0
   23A9 DD 39              6888 	add	ix,sp
                           6889 ;demo.c:1029: cmd.source_x = tx;
   23AB DD 4E 04           6890 	ld	c,4 (ix)
   23AE 06 00              6891 	ld	b,#0x00
   23B0 21r6Cs41           6892 	ld	hl,#_cmd
   23B3 71                 6893 	ld	(hl),c
   23B4 23                 6894 	inc	hl
   23B5 70                 6895 	ld	(hl),b
                           6896 ;demo.c:1030: cmd.source_y = ty-1;
   23B6 01r6Es41           6897 	ld	bc,#_cmd + 2
   23B9 DD 5E 05           6898 	ld	e,5 (ix)
   23BC DD 56 06           6899 	ld	d,6 (ix)
   23BF 1B                 6900 	dec	de
   23C0 69                 6901 	ld	l,c
   23C1 60                 6902 	ld	h,b
   23C2 73                 6903 	ld	(hl),e
   23C3 23                 6904 	inc	hl
   23C4 72                 6905 	ld	(hl),d
                           6906 ;demo.c:1031: cmd.dest_x = x;
   23C5 01r70s41           6907 	ld	bc,#_cmd + 4
   23C8 DD 5E 07           6908 	ld	e,7 (ix)
   23CB 16 00              6909 	ld	d,#0x00
   23CD 69                 6910 	ld	l,c
   23CE 60                 6911 	ld	h,b
   23CF 73                 6912 	ld	(hl),e
   23D0 23                 6913 	inc	hl
   23D1 72                 6914 	ld	(hl),d
                           6915 ;demo.c:1032: cmd.dest_y = y;
   23D2 01r72s41           6916 	ld	bc,#_cmd + 6
   23D5 DD 5E 08           6917 	ld	e,8 (ix)
   23D8 16 00              6918 	ld	d,#0x00
   23DA 69                 6919 	ld	l,c
   23DB 60                 6920 	ld	h,b
   23DC 73                 6921 	ld	(hl),e
   23DD 23                 6922 	inc	hl
   23DE 72                 6923 	ld	(hl),d
                           6924 ;demo.c:1033: cmd.size_x = 16;
   23DF 21r74s41           6925 	ld	hl, #_cmd + 8
   23E2 36 10              6926 	ld	(hl),#0x10
   23E4 23                 6927 	inc	hl
   23E5 36 00              6928 	ld	(hl),#0x00
                           6929 ;demo.c:1034: cmd.size_y = 16;
   23E7 21r76s41           6930 	ld	hl, #_cmd + 10
   23EA 36 10              6931 	ld	(hl),#0x10
   23EC 23                 6932 	inc	hl
   23ED 36 00              6933 	ld	(hl),#0x00
                           6934 ;demo.c:1035: cmd.data = 0;
                           6935 ;demo.c:1036: cmd.argument = 0x00;
   23EF 3E 00              6936 	ld	a,#0x00
   23F1 32r78s41           6937 	ld	(#_cmd + 12),a
   23F4 32r79s41           6938 	ld	(#_cmd + 13),a
                           6939 ;demo.c:1037: cmd.command = 0xd0; // HMMM
   23F7 3E D0              6940 	ld	a,#0xD0
   23F9 32r7As41           6941 	ld	(#_cmd + 14),a
                           6942 ;demo.c:1038: vdp_copier(&cmd);
   23FC 21r6Cs41           6943 	ld	hl,#_cmd
   23FF E5                 6944 	push	hl
   2400 CDr00s00           6945 	call	_vdp_copier
   2403 F1                 6946 	pop	af
   2404 DD E1              6947 	pop	ix
   2406 C9                 6948 	ret
   2407                    6949 _drawtritile_end::
                           6950 ;demo.c:1045: void drawtilescreen(char* tripic) {
                           6951 ;	---------------------------------
                           6952 ; Function drawtilescreen
                           6953 ; ---------------------------------
   2407                    6954 _drawtilescreen_start::
   2407                    6955 _drawtilescreen:
   2407 DD E5              6956 	push	ix
   2409 DD 21 00 00        6957 	ld	ix,#0
   240D DD 39              6958 	add	ix,sp
   240F F5                 6959 	push	af
   2410 3B                 6960 	dec	sp
                           6961 ;demo.c:1047: if(tilei >= 192) return;
   2411 3Ar08s42           6962 	ld	a,(#_tilei+0)
   2414 D6 C0              6963 	sub	a,#0xC0
   2416 3Ar09s42           6964 	ld	a,(#_tilei+1)
   2419 DE 00              6965 	sbc	a,#0x00
   241B FAr21s24           6966 	jp	M,00102$
   241E C3rECs24           6967 	jp	00112$
   2421                    6968 00102$:
                           6969 ;demo.c:1049: tiletick++;
   2421 FD 21r0Es42        6970 	ld	iy,#_tiletick
   2425 FD 34 00           6971 	inc	0 (iy)
                           6972 ;demo.c:1050: if (tiletick > 6) { tiletick = 0;}
   2428 3E 06              6973 	ld	a,#0x06
   242A FD 21r0Es42        6974 	ld	iy,#_tiletick
   242E FD 96 00           6975 	sub	a,0 (iy)
   2431 30 0A              6976 	jr	NC,00104$
   2433 FD 21r0Es42        6977 	ld	iy,#_tiletick
   2437 FD 36 00 00        6978 	ld	0 (iy),#0x00
   243B 18 03              6979 	jr	00118$
   243D                    6980 00104$:
                           6981 ;demo.c:1051: else return;
   243D C3rECs24           6982 	jp	00112$
                           6983 ;demo.c:1052: for (i=0;i<20;i++) {
   2440                    6984 00118$:
   2440 DD 36 FF 00        6985 	ld	-1 (ix),#0x00
   2444                    6986 00108$:
   2444 DD 7E FF           6987 	ld	a,-1 (ix)
   2447 D6 14              6988 	sub	a,#0x14
   2449 D2rECs24           6989 	jp	NC,00112$
                           6990 ;demo.c:1053: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   244C 3Ar0Cs42           6991 	ld	a,(#_tiley+0)
   244F DD 77 FD           6992 	ld	-3 (ix),a
   2452 3Ar0As42           6993 	ld	a,(#_tilex+0)
   2455 DD 77 FE           6994 	ld	-2 (ix),a
   2458 21r08s42           6995 	ld	hl,#_tilei
   245B DD 7E 04           6996 	ld	a,4 (ix)
   245E 86                 6997 	add	a,(hl)
   245F 57                 6998 	ld	d,a
   2460 DD 7E 05           6999 	ld	a,5 (ix)
   2463 23                 7000 	inc	hl
   2464 8E                 7001 	adc	a,(hl)
   2465 6A                 7002 	ld	l,d
   2466 67                 7003 	ld	h,a
   2467 56                 7004 	ld	d,(hl)
   2468 7A                 7005 	ld	a,d
   2469 87                 7006 	add	a,a
   246A C6r88              7007 	add	a,#<_tri_lookup_y
   246C 6F                 7008 	ld	l,a
   246D 3Es01              7009 	ld	a,#>_tri_lookup_y
   246F CE 00              7010 	adc	a,#0x00
   2471 67                 7011 	ld	h,a
   2472 4E                 7012 	ld	c,(hl)
   2473 23                 7013 	inc	hl
   2474 5E                 7014 	ld	e,(hl)
   2475 3Er00              7015 	ld	a,#<_tri_lookup_x
   2477 82                 7016 	add	a,d
   2478 6F                 7017 	ld	l,a
   2479 3Es01              7018 	ld	a,#>_tri_lookup_x
   247B CE 00              7019 	adc	a,#0x00
   247D 67                 7020 	ld	h,a
   247E 56                 7021 	ld	d,(hl)
   247F DD 66 FD           7022 	ld	h,-3 (ix)
   2482 DD 6E FE           7023 	ld	l,-2 (ix)
   2485 E5                 7024 	push	hl
   2486 69                 7025 	ld	l,c
   2487 63                 7026 	ld	h,e
   2488 E5                 7027 	push	hl
   2489 D5                 7028 	push	de
   248A 33                 7029 	inc	sp
   248B CDrA3s23           7030 	call	_drawtritile
   248E F1                 7031 	pop	af
   248F F1                 7032 	pop	af
   2490 33                 7033 	inc	sp
                           7034 ;demo.c:1054: tilex+=16;
   2491 21r0As42           7035 	ld	hl,#_tilex
   2494 7E                 7036 	ld	a,(hl)
   2495 C6 10              7037 	add	a,#0x10
   2497 23                 7038 	inc	hl
   2498 2B                 7039 	dec	hl
   2499 C5                 7040 	push	bc
   249A 4F                 7041 	ld	c, a
   249B 23                 7042 	inc	hl
   249C 7E                 7043 	ld	a, (hl)
   249D 47                 7044 	ld	b, a
   249E 79                 7045 	ld	a, c
   249F 2B                 7046 	dec	hl
   24A0 77                 7047 	ld	(hl), a
   24A1 78                 7048 	ld	a, b
   24A2 C1                 7049 	pop	bc
   24A3 CE 00              7050 	adc	a,#0x00
   24A5 23                 7051 	inc	hl
   24A6 77                 7052 	ld	(hl),a
                           7053 ;demo.c:1055: tilei++;
   24A7 FD 21r08s42        7054 	ld	iy,#_tilei
   24AB FD 34 00           7055 	inc	0 (iy)
   24AE 20 07              7056 	jr	NZ,00119$
   24B0 FD 21r08s42        7057 	ld	iy,#_tilei
   24B4 FD 34 01           7058 	inc	1 (iy)
   24B7                    7059 00119$:
                           7060 ;demo.c:1056: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   24B7 3Ar0As42           7061 	ld	a,(#_tilex+0)
   24BA D6 00              7062 	sub	a,#0x00
   24BC 3Ar0Bs42           7063 	ld	a,(#_tilex+1)
   24BF DE 01              7064 	sbc	a,#0x01
   24C1 FArE6s24           7065 	jp	M,00110$
   24C4 21r0As42           7066 	ld	hl,#_tilex + 0
   24C7 36 00              7067 	ld	(hl), #0x00
   24C9 21r0Bs42           7068 	ld	hl,#_tilex + 1
   24CC 36 00              7069 	ld	(hl), #0x00
   24CE 21r0Cs42           7070 	ld	hl,#_tiley
   24D1 7E                 7071 	ld	a,(hl)
   24D2 C6 10              7072 	add	a,#0x10
   24D4 23                 7073 	inc	hl
   24D5 2B                 7074 	dec	hl
   24D6 C5                 7075 	push	bc
   24D7 4F                 7076 	ld	c, a
   24D8 23                 7077 	inc	hl
   24D9 7E                 7078 	ld	a, (hl)
   24DA 47                 7079 	ld	b, a
   24DB 79                 7080 	ld	a, c
   24DC 2B                 7081 	dec	hl
   24DD 77                 7082 	ld	(hl), a
   24DE 78                 7083 	ld	a, b
   24DF C1                 7084 	pop	bc
   24E0 CE 00              7085 	adc	a,#0x00
   24E2 23                 7086 	inc	hl
   24E3 77                 7087 	ld	(hl),a
   24E4 18 06              7088 	jr	00112$
   24E6                    7089 00110$:
                           7090 ;demo.c:1052: for (i=0;i<20;i++) {
   24E6 DD 34 FF           7091 	inc	-1 (ix)
   24E9 C3r44s24           7092 	jp	00108$
   24EC                    7093 00112$:
   24EC DD F9              7094 	ld	sp,ix
   24EE DD E1              7095 	pop	ix
   24F0 C9                 7096 	ret
   24F1                    7097 _drawtilescreen_end::
                           7098 ;demo.c:1061: void drawtilescreen_full(char* tripic) {
                           7099 ;	---------------------------------
                           7100 ; Function drawtilescreen_full
                           7101 ; ---------------------------------
   24F1                    7102 _drawtilescreen_full_start::
   24F1                    7103 _drawtilescreen_full:
   24F1 DD E5              7104 	push	ix
   24F3 DD 21 00 00        7105 	ld	ix,#0
   24F7 DD 39              7106 	add	ix,sp
   24F9 21 F8 FF           7107 	ld	hl,#-8
   24FC 39                 7108 	add	hl,sp
   24FD F9                 7109 	ld	sp,hl
                           7110 ;demo.c:1062: int x = 0;
   24FE DD 36 FE 00        7111 	ld	-2 (ix),#0x00
   2502 DD 36 FF 00        7112 	ld	-1 (ix),#0x00
                           7113 ;demo.c:1065: while(i < 192) {
   2506 DD 36 FC 00        7114 	ld	-4 (ix),#0x00
   250A DD 36 FD 00        7115 	ld	-3 (ix),#0x00
   250E DD 36 FA 00        7116 	ld	-6 (ix),#0x00
   2512 DD 36 FB 00        7117 	ld	-5 (ix),#0x00
   2516                    7118 00103$:
   2516 DD 7E FA           7119 	ld	a,-6 (ix)
   2519 D6 C0              7120 	sub	a,#0xC0
   251B DD 7E FB           7121 	ld	a,-5 (ix)
   251E DE 00              7122 	sbc	a,#0x00
   2520 F2rA7s25           7123 	jp	P,00106$
                           7124 ;demo.c:1066: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   2523 DD 7E FC           7125 	ld	a,-4 (ix)
   2526 DD 77 F8           7126 	ld	-8 (ix),a
   2529 DD 7E FE           7127 	ld	a,-2 (ix)
   252C DD 77 F9           7128 	ld	-7 (ix),a
   252F DD 7E 04           7129 	ld	a,4 (ix)
   2532 DD 86 FA           7130 	add	a,-6 (ix)
   2535 4F                 7131 	ld	c,a
   2536 DD 7E 05           7132 	ld	a,5 (ix)
   2539 DD 8E FB           7133 	adc	a,-5 (ix)
   253C 47                 7134 	ld	b,a
   253D 0A                 7135 	ld	a,(bc)
   253E 4F                 7136 	ld	c,a
   253F 87                 7137 	add	a,a
   2540 C6r88              7138 	add	a,#<_tri_lookup_y
   2542 6F                 7139 	ld	l,a
   2543 3Es01              7140 	ld	a,#>_tri_lookup_y
   2545 CE 00              7141 	adc	a,#0x00
   2547 67                 7142 	ld	h,a
   2548 46                 7143 	ld	b,(hl)
   2549 23                 7144 	inc	hl
   254A 56                 7145 	ld	d,(hl)
   254B 3Er00              7146 	ld	a,#<_tri_lookup_x
   254D 81                 7147 	add	a,c
   254E 6F                 7148 	ld	l,a
   254F 3Es01              7149 	ld	a,#>_tri_lookup_x
   2551 CE 00              7150 	adc	a,#0x00
   2553 67                 7151 	ld	h,a
   2554 4E                 7152 	ld	c,(hl)
   2555 DD 66 F8           7153 	ld	h,-8 (ix)
   2558 DD 6E F9           7154 	ld	l,-7 (ix)
   255B E5                 7155 	push	hl
   255C 58                 7156 	ld	e,b
   255D D5                 7157 	push	de
   255E 79                 7158 	ld	a,c
   255F F5                 7159 	push	af
   2560 33                 7160 	inc	sp
   2561 CDrA3s23           7161 	call	_drawtritile
   2564 F1                 7162 	pop	af
   2565 F1                 7163 	pop	af
   2566 33                 7164 	inc	sp
                           7165 ;demo.c:1067: x+=16;
   2567 DD 7E FE           7166 	ld	a,-2 (ix)
   256A C6 10              7167 	add	a,#0x10
   256C DD 77 FE           7168 	ld	-2 (ix),a
   256F DD 7E FF           7169 	ld	a,-1 (ix)
   2572 CE 00              7170 	adc	a,#0x00
   2574 DD 77 FF           7171 	ld	-1 (ix),a
                           7172 ;demo.c:1068: if (x >= 256) {x = 0; y+=16;}
   2577 DD 7E FE           7173 	ld	a,-2 (ix)
   257A D6 00              7174 	sub	a,#0x00
   257C DD 7E FF           7175 	ld	a,-1 (ix)
   257F DE 01              7176 	sbc	a,#0x01
   2581 FAr9Cs25           7177 	jp	M,00102$
   2584 DD 36 FE 00        7178 	ld	-2 (ix),#0x00
   2588 DD 36 FF 00        7179 	ld	-1 (ix),#0x00
   258C DD 7E FC           7180 	ld	a,-4 (ix)
   258F C6 10              7181 	add	a,#0x10
   2591 DD 77 FC           7182 	ld	-4 (ix),a
   2594 DD 7E FD           7183 	ld	a,-3 (ix)
   2597 CE 00              7184 	adc	a,#0x00
   2599 DD 77 FD           7185 	ld	-3 (ix),a
   259C                    7186 00102$:
                           7187 ;demo.c:1069: i++;
   259C DD 34 FA           7188 	inc	-6 (ix)
   259F 20 03              7189 	jr	NZ,00112$
   25A1 DD 34 FB           7190 	inc	-5 (ix)
   25A4                    7191 00112$:
   25A4 C3r16s25           7192 	jp	00103$
   25A7                    7193 00106$:
   25A7 DD F9              7194 	ld	sp,ix
   25A9 DD E1              7195 	pop	ix
   25AB C9                 7196 	ret
   25AC                    7197 _drawtilescreen_full_end::
                           7198 ;demo.c:1085: void tritiles() {
                           7199 ;	---------------------------------
                           7200 ; Function tritiles
                           7201 ; ---------------------------------
   25AC                    7202 _tritiles_start::
   25AC                    7203 _tritiles:
   25AC DD E5              7204 	push	ix
   25AE DD 21 00 00        7205 	ld	ix,#0
   25B2 DD 39              7206 	add	ix,sp
   25B4 21 FB FF           7207 	ld	hl,#-5
   25B7 39                 7208 	add	hl,sp
   25B8 F9                 7209 	ld	sp,hl
                           7210 ;demo.c:1092: if (tri_inited == 0) {
   25B9 AF                 7211 	xor	a,a
   25BA 21r07s42           7212 	ld	hl,#_tri_inited + 0
   25BD B6                 7213 	or	a,(hl)
   25BE C2r85s26           7214 	jp	NZ,00102$
                           7215 ;demo.c:1093: tri_inited = 1;
   25C1 FD 21r07s42        7216 	ld	iy,#_tri_inited
   25C5 FD 36 00 01        7217 	ld	0 (iy),#0x01
                           7218 ;demo.c:1095: cmd.size_x = 256;
   25C9 21r74s41           7219 	ld	hl, #_cmd + 8
   25CC 36 00              7220 	ld	(hl),#0x00
   25CE 23                 7221 	inc	hl
   25CF 36 01              7222 	ld	(hl),#0x01
                           7223 ;demo.c:1096: cmd.size_y = 1;
   25D1 21r76s41           7224 	ld	hl, #_cmd + 10
   25D4 36 01              7225 	ld	(hl),#0x01
   25D6 23                 7226 	inc	hl
   25D7 36 00              7227 	ld	(hl),#0x00
                           7228 ;demo.c:1097: cmd.data = 0;
                           7229 ;demo.c:1098: cmd.argument = 0x00; // from 70xY to left
   25D9 3E 00              7230 	ld	a,#0x00
   25DB 32r78s41           7231 	ld	(#_cmd + 12),a
   25DE 32r79s41           7232 	ld	(#_cmd + 13),a
                           7233 ;demo.c:1099: cmd.command = 0xd0; // vram to vram, y only
   25E1 01r7As41           7234 	ld	bc,#_cmd + 14
   25E4 3E D0              7235 	ld	a,#0xD0
   25E6 02                 7236 	ld	(bc),a
                           7237 ;demo.c:1100: cmd.source_x = 0;
   25E7 21r6Cs41           7238 	ld	hl,#_cmd
   25EA 36 00              7239 	ld	(hl),#0x00
   25EC 23                 7240 	inc	hl
   25ED 36 00              7241 	ld	(hl),#0x00
                           7242 ;demo.c:1101: cmd.source_y = 212;
   25EF 21r6Es41           7243 	ld	hl, #_cmd + 2
   25F2 36 D4              7244 	ld	(hl),#0xD4
   25F4 23                 7245 	inc	hl
   25F5 36 00              7246 	ld	(hl),#0x00
                           7247 ;demo.c:1102: cmd.dest_y = 0;
   25F7 01r72s41           7248 	ld	bc,#_cmd + 6
   25FA 69                 7249 	ld	l,c
   25FB 60                 7250 	ld	h,b
   25FC 36 00              7251 	ld	(hl),#0x00
   25FE 23                 7252 	inc	hl
   25FF 36 00              7253 	ld	(hl),#0x00
                           7254 ;demo.c:1104: for (x = 0; x < 212; x++) {
   2601 DD 36 FE 00        7255 	ld	-2 (ix),#0x00
   2605 DD 36 FF 00        7256 	ld	-1 (ix),#0x00
   2609                    7257 00134$:
   2609 DD 7E FE           7258 	ld	a,-2 (ix)
   260C D6 D4              7259 	sub	a,#0xD4
   260E DD 7E FF           7260 	ld	a,-1 (ix)
   2611 DE 00              7261 	sbc	a,#0x00
   2613 F2r59s26           7262 	jp	P,00137$
                           7263 ;demo.c:1105: waitVB();
   2616 76                 7264 		halt 
                           7265 ;demo.c:1106: cmd.dest_x = 0;
   2617 11r70s41           7266 	ld	de,#_cmd + 4
   261A EB                 7267 	ex	de,hl
   261B 36 00              7268 	ld	(hl),#0x00
   261D 23                 7269 	inc	hl
   261E 36 00              7270 	ld	(hl),#0x00
                           7271 ;demo.c:1107: cmd.dest_y = 256+x;
   2620 11r72s41           7272 	ld	de,#_cmd + 6
   2623 DD 7E FE           7273 	ld	a,-2 (ix)
   2626 C6 00              7274 	add	a,#0x00
   2628 4F                 7275 	ld	c,a
   2629 DD 7E FF           7276 	ld	a,-1 (ix)
   262C CE 01              7277 	adc	a,#0x01
   262E 47                 7278 	ld	b,a
   262F EB                 7279 	ex	de,hl
   2630 71                 7280 	ld	(hl),c
   2631 23                 7281 	inc	hl
   2632 70                 7282 	ld	(hl),b
                           7283 ;demo.c:1108: vdp_copier(&cmd);
   2633 21r6Cs41           7284 	ld	hl,#_cmd
   2636 E5                 7285 	push	hl
   2637 CDr00s00           7286 	call	_vdp_copier
   263A F1                 7287 	pop	af
                           7288 ;demo.c:1109: cmd.dest_y = 0+x;
   263B 21r72s41           7289 	ld	hl, #_cmd + 6
   263E DD 7E FE           7290 	ld	a,-2 (ix)
   2641 77                 7291 	ld	(hl),a
   2642 23                 7292 	inc	hl
   2643 DD 7E FF           7293 	ld	a,-1 (ix)
   2646 77                 7294 	ld	(hl),a
                           7295 ;demo.c:1110: vdp_copier(&cmd);
   2647 21r6Cs41           7296 	ld	hl,#_cmd
   264A E5                 7297 	push	hl
   264B CDr00s00           7298 	call	_vdp_copier
   264E F1                 7299 	pop	af
                           7300 ;demo.c:1104: for (x = 0; x < 212; x++) {
   264F DD 34 FE           7301 	inc	-2 (ix)
   2652 20 03              7302 	jr	NZ,00169$
   2654 DD 34 FF           7303 	inc	-1 (ix)
   2657                    7304 00169$:
   2657 18 B0              7305 	jr	00134$
   2659                    7306 00137$:
                           7307 ;demo.c:1113: vdp_register(9,2); // 50hz,192
   2659 21 09 02           7308 	ld	hl,#0x0209
   265C E5                 7309 	push	hl
   265D CDr00s00           7310 	call	_vdp_register
   2660 F1                 7311 	pop	af
                           7312 ;demo.c:1115: vdp_load_palette(boxes_palette);
   2661 21r48s41           7313 	ld	hl,#_boxes_palette
   2664 E5                 7314 	push	hl
   2665 CDr00s00           7315 	call	_vdp_load_palette
   2668 F1                 7316 	pop	af
                           7317 ;demo.c:1117: msx2_palette(15,0,0,0);
   2669 21 00 00           7318 	ld	hl,#0x0000
   266C E5                 7319 	push	hl
   266D 2E 0F              7320 	ld	l, #0x0F
   266F E5                 7321 	push	hl
   2670 CDr00s00           7322 	call	_msx2_palette
   2673 F1                 7323 	pop	af
   2674 F1                 7324 	pop	af
                           7325 ;demo.c:1119: drawtilescreen_full(tri_center);
   2675 21r2Cs02           7326 	ld	hl,#_tri_center
   2678 E5                 7327 	push	hl
   2679 CDrF1s24           7328 	call	_drawtilescreen_full
   267C F1                 7329 	pop	af
                           7330 ;demo.c:1120: vdp_register(2, 0x1f);
   267D 21 02 1F           7331 	ld	hl,#0x1F02
   2680 E5                 7332 	push	hl
   2681 CDr00s00           7333 	call	_vdp_register
   2684 F1                 7334 	pop	af
   2685                    7335 00102$:
                           7336 ;demo.c:1125: triframes++;
   2685 FD 21r1As42        7337 	ld	iy,#_triframes
   2689 FD 34 00           7338 	inc	0 (iy)
   268C 20 07              7339 	jr	NZ,00170$
   268E FD 21r1As42        7340 	ld	iy,#_triframes
   2692 FD 34 01           7341 	inc	1 (iy)
   2695                    7342 00170$:
                           7343 ;demo.c:1127: if (triframes == 200) { tilei = 0; tilex = 0; tiley = 0; }
   2695 3Ar1As42           7344 	ld	a,(#_triframes+0)
   2698 D6 C8              7345 	sub	a,#0xC8
   269A 20 06              7346 	jr	NZ,00171$
   269C 3Ar1Bs42           7347 	ld	a,(#_triframes+1)
   269F B7                 7348 	or	a,a
   26A0 28 02              7349 	jr	Z,00172$
   26A2                    7350 00171$:
   26A2 18 1E              7351 	jr	00104$
   26A4                    7352 00172$:
   26A4 21r08s42           7353 	ld	hl,#_tilei + 0
   26A7 36 00              7354 	ld	(hl), #0x00
   26A9 21r09s42           7355 	ld	hl,#_tilei + 1
   26AC 36 00              7356 	ld	(hl), #0x00
   26AE 21r0As42           7357 	ld	hl,#_tilex + 0
   26B1 36 00              7358 	ld	(hl), #0x00
   26B3 21r0Bs42           7359 	ld	hl,#_tilex + 1
   26B6 36 00              7360 	ld	(hl), #0x00
   26B8 21r0Cs42           7361 	ld	hl,#_tiley + 0
   26BB 36 00              7362 	ld	(hl), #0x00
   26BD 21r0Ds42           7363 	ld	hl,#_tiley + 1
   26C0 36 00              7364 	ld	(hl), #0x00
   26C2                    7365 00104$:
                           7366 ;demo.c:1128: if (triframes >= 200 && triframes < 400) {
   26C2 3Ar1As42           7367 	ld	a,(#_triframes+0)
   26C5 D6 C8              7368 	sub	a,#0xC8
   26C7 3Ar1Bs42           7369 	ld	a,(#_triframes+1)
   26CA DE 00              7370 	sbc	a,#0x00
   26CC FArE4s26           7371 	jp	M,00106$
   26CF 3Ar1As42           7372 	ld	a,(#_triframes+0)
   26D2 D6 90              7373 	sub	a,#0x90
   26D4 3Ar1Bs42           7374 	ld	a,(#_triframes+1)
   26D7 DE 01              7375 	sbc	a,#0x01
   26D9 F2rE4s26           7376 	jp	P,00106$
                           7377 ;demo.c:1129: drawtilescreen(tri_up);
   26DC 21rECs02           7378 	ld	hl,#_tri_up
   26DF E5                 7379 	push	hl
   26E0 CDr07s24           7380 	call	_drawtilescreen
   26E3 F1                 7381 	pop	af
   26E4                    7382 00106$:
                           7383 ;demo.c:1132: if (triframes == 400) { tilei = 0; tilex = 0; tiley = 0; }
   26E4 3Ar1As42           7384 	ld	a,(#_triframes+0)
   26E7 D6 90              7385 	sub	a,#0x90
   26E9 20 07              7386 	jr	NZ,00173$
   26EB 3Ar1Bs42           7387 	ld	a,(#_triframes+1)
   26EE D6 01              7388 	sub	a,#0x01
   26F0 28 02              7389 	jr	Z,00174$
   26F2                    7390 00173$:
   26F2 18 1E              7391 	jr	00109$
   26F4                    7392 00174$:
   26F4 21r08s42           7393 	ld	hl,#_tilei + 0
   26F7 36 00              7394 	ld	(hl), #0x00
   26F9 21r09s42           7395 	ld	hl,#_tilei + 1
   26FC 36 00              7396 	ld	(hl), #0x00
   26FE 21r0As42           7397 	ld	hl,#_tilex + 0
   2701 36 00              7398 	ld	(hl), #0x00
   2703 21r0Bs42           7399 	ld	hl,#_tilex + 1
   2706 36 00              7400 	ld	(hl), #0x00
   2708 21r0Cs42           7401 	ld	hl,#_tiley + 0
   270B 36 00              7402 	ld	(hl), #0x00
   270D 21r0Ds42           7403 	ld	hl,#_tiley + 1
   2710 36 00              7404 	ld	(hl), #0x00
   2712                    7405 00109$:
                           7406 ;demo.c:1133: if (triframes >= 400 && triframes < 600) {
   2712 3Ar1As42           7407 	ld	a,(#_triframes+0)
   2715 D6 90              7408 	sub	a,#0x90
   2717 3Ar1Bs42           7409 	ld	a,(#_triframes+1)
   271A DE 01              7410 	sbc	a,#0x01
   271C FAr34s27           7411 	jp	M,00111$
   271F 3Ar1As42           7412 	ld	a,(#_triframes+0)
   2722 D6 58              7413 	sub	a,#0x58
   2724 3Ar1Bs42           7414 	ld	a,(#_triframes+1)
   2727 DE 02              7415 	sbc	a,#0x02
   2729 F2r34s27           7416 	jp	P,00111$
                           7417 ;demo.c:1134: drawtilescreen(tri_dia);
   272C 21rACs03           7418 	ld	hl,#_tri_dia
   272F E5                 7419 	push	hl
   2730 CDr07s24           7420 	call	_drawtilescreen
   2733 F1                 7421 	pop	af
   2734                    7422 00111$:
                           7423 ;demo.c:1137: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2734 3Ar1As42           7424 	ld	a,(#_triframes+0)
   2737 D6 58              7425 	sub	a,#0x58
   2739 20 07              7426 	jr	NZ,00175$
   273B 3Ar1Bs42           7427 	ld	a,(#_triframes+1)
   273E D6 02              7428 	sub	a,#0x02
   2740 28 02              7429 	jr	Z,00176$
   2742                    7430 00175$:
   2742 18 1E              7431 	jr	00114$
   2744                    7432 00176$:
   2744 21r08s42           7433 	ld	hl,#_tilei + 0
   2747 36 00              7434 	ld	(hl), #0x00
   2749 21r09s42           7435 	ld	hl,#_tilei + 1
   274C 36 00              7436 	ld	(hl), #0x00
   274E 21r0As42           7437 	ld	hl,#_tilex + 0
   2751 36 00              7438 	ld	(hl), #0x00
   2753 21r0Bs42           7439 	ld	hl,#_tilex + 1
   2756 36 00              7440 	ld	(hl), #0x00
   2758 21r0Cs42           7441 	ld	hl,#_tiley + 0
   275B 36 00              7442 	ld	(hl), #0x00
   275D 21r0Ds42           7443 	ld	hl,#_tiley + 1
   2760 36 00              7444 	ld	(hl), #0x00
   2762                    7445 00114$:
                           7446 ;demo.c:1138: if (triframes >= 600 && triframes < 700) {
   2762 3Ar1As42           7447 	ld	a,(#_triframes+0)
   2765 D6 58              7448 	sub	a,#0x58
   2767 3Ar1Bs42           7449 	ld	a,(#_triframes+1)
   276A DE 02              7450 	sbc	a,#0x02
   276C FAr84s27           7451 	jp	M,00116$
   276F 3Ar1As42           7452 	ld	a,(#_triframes+0)
   2772 D6 BC              7453 	sub	a,#0xBC
   2774 3Ar1Bs42           7454 	ld	a,(#_triframes+1)
   2777 DE 02              7455 	sbc	a,#0x02
   2779 F2r84s27           7456 	jp	P,00116$
                           7457 ;demo.c:1139: drawtilescreen(tri_side1);
   277C 21r6Cs04           7458 	ld	hl,#_tri_side1
   277F E5                 7459 	push	hl
   2780 CDr07s24           7460 	call	_drawtilescreen
   2783 F1                 7461 	pop	af
   2784                    7462 00116$:
                           7463 ;demo.c:1142: if (triframes == 800) { tilei = 0; tilex = 0; tiley = 0; }
   2784 3Ar1As42           7464 	ld	a,(#_triframes+0)
   2787 D6 20              7465 	sub	a,#0x20
   2789 20 07              7466 	jr	NZ,00177$
   278B 3Ar1Bs42           7467 	ld	a,(#_triframes+1)
   278E D6 03              7468 	sub	a,#0x03
   2790 28 02              7469 	jr	Z,00178$
   2792                    7470 00177$:
   2792 18 1E              7471 	jr	00119$
   2794                    7472 00178$:
   2794 21r08s42           7473 	ld	hl,#_tilei + 0
   2797 36 00              7474 	ld	(hl), #0x00
   2799 21r09s42           7475 	ld	hl,#_tilei + 1
   279C 36 00              7476 	ld	(hl), #0x00
   279E 21r0As42           7477 	ld	hl,#_tilex + 0
   27A1 36 00              7478 	ld	(hl), #0x00
   27A3 21r0Bs42           7479 	ld	hl,#_tilex + 1
   27A6 36 00              7480 	ld	(hl), #0x00
   27A8 21r0Cs42           7481 	ld	hl,#_tiley + 0
   27AB 36 00              7482 	ld	(hl), #0x00
   27AD 21r0Ds42           7483 	ld	hl,#_tiley + 1
   27B0 36 00              7484 	ld	(hl), #0x00
   27B2                    7485 00119$:
                           7486 ;demo.c:1143: if (triframes >= 800 && triframes < 1000) {
   27B2 3Ar1As42           7487 	ld	a,(#_triframes+0)
   27B5 D6 20              7488 	sub	a,#0x20
   27B7 3Ar1Bs42           7489 	ld	a,(#_triframes+1)
   27BA DE 03              7490 	sbc	a,#0x03
   27BC FArD4s27           7491 	jp	M,00121$
   27BF 3Ar1As42           7492 	ld	a,(#_triframes+0)
   27C2 D6 E8              7493 	sub	a,#0xE8
   27C4 3Ar1Bs42           7494 	ld	a,(#_triframes+1)
   27C7 DE 03              7495 	sbc	a,#0x03
   27C9 F2rD4s27           7496 	jp	P,00121$
                           7497 ;demo.c:1144: drawtilescreen(tri_side2);
   27CC 21r2Cs05           7498 	ld	hl,#_tri_side2
   27CF E5                 7499 	push	hl
   27D0 CDr07s24           7500 	call	_drawtilescreen
   27D3 F1                 7501 	pop	af
   27D4                    7502 00121$:
                           7503 ;demo.c:1147: if (triframes == 1000) { tilei = 0; tilex = 0; tiley = 0; }
   27D4 3Ar1As42           7504 	ld	a,(#_triframes+0)
   27D7 D6 E8              7505 	sub	a,#0xE8
   27D9 20 07              7506 	jr	NZ,00179$
   27DB 3Ar1Bs42           7507 	ld	a,(#_triframes+1)
   27DE D6 03              7508 	sub	a,#0x03
   27E0 28 02              7509 	jr	Z,00180$
   27E2                    7510 00179$:
   27E2 18 1E              7511 	jr	00124$
   27E4                    7512 00180$:
   27E4 21r08s42           7513 	ld	hl,#_tilei + 0
   27E7 36 00              7514 	ld	(hl), #0x00
   27E9 21r09s42           7515 	ld	hl,#_tilei + 1
   27EC 36 00              7516 	ld	(hl), #0x00
   27EE 21r0As42           7517 	ld	hl,#_tilex + 0
   27F1 36 00              7518 	ld	(hl), #0x00
   27F3 21r0Bs42           7519 	ld	hl,#_tilex + 1
   27F6 36 00              7520 	ld	(hl), #0x00
   27F8 21r0Cs42           7521 	ld	hl,#_tiley + 0
   27FB 36 00              7522 	ld	(hl), #0x00
   27FD 21r0Ds42           7523 	ld	hl,#_tiley + 1
   2800 36 00              7524 	ld	(hl), #0x00
   2802                    7525 00124$:
                           7526 ;demo.c:1148: if (triframes >= 1000 && triframes < 1200) {
   2802 3Ar1As42           7527 	ld	a,(#_triframes+0)
   2805 D6 E8              7528 	sub	a,#0xE8
   2807 3Ar1Bs42           7529 	ld	a,(#_triframes+1)
   280A DE 03              7530 	sbc	a,#0x03
   280C FAr24s28           7531 	jp	M,00126$
   280F 3Ar1As42           7532 	ld	a,(#_triframes+0)
   2812 D6 B0              7533 	sub	a,#0xB0
   2814 3Ar1Bs42           7534 	ld	a,(#_triframes+1)
   2817 DE 04              7535 	sbc	a,#0x04
   2819 F2r24s28           7536 	jp	P,00126$
                           7537 ;demo.c:1149: drawtilescreen(tri_center);
   281C 21r2Cs02           7538 	ld	hl,#_tri_center
   281F E5                 7539 	push	hl
   2820 CDr07s24           7540 	call	_drawtilescreen
   2823 F1                 7541 	pop	af
   2824                    7542 00126$:
                           7543 ;demo.c:1152: if (triframes > 1200) triframes = 199;
   2824 3E B0              7544 	ld	a,#0xB0
   2826 FD 21r1As42        7545 	ld	iy,#_triframes
   282A FD 96 00           7546 	sub	a,0 (iy)
   282D 3E 04              7547 	ld	a,#0x04
   282F FD 21r1As42        7548 	ld	iy,#_triframes
   2833 FD 9E 01           7549 	sbc	a,1 (iy)
   2836 F2r43s28           7550 	jp	P,00129$
   2839 21r1As42           7551 	ld	hl,#_triframes + 0
   283C 36 C7              7552 	ld	(hl), #0xC7
   283E 21r1Bs42           7553 	ld	hl,#_triframes + 1
   2841 36 00              7554 	ld	(hl), #0x00
   2843                    7555 00129$:
                           7556 ;demo.c:1155: msx2_palette(2,0,0,0);
   2843 21 00 00           7557 	ld	hl,#0x0000
   2846 E5                 7558 	push	hl
   2847 2E 02              7559 	ld	l, #0x02
   2849 E5                 7560 	push	hl
   284A CDr00s00           7561 	call	_msx2_palette
   284D F1                 7562 	pop	af
   284E F1                 7563 	pop	af
                           7564 ;demo.c:1156: msx2_palette(11,0,0,0);
   284F 21 00 00           7565 	ld	hl,#0x0000
   2852 E5                 7566 	push	hl
   2853 2E 0B              7567 	ld	l, #0x0B
   2855 E5                 7568 	push	hl
   2856 CDr00s00           7569 	call	_msx2_palette
   2859 F1                 7570 	pop	af
   285A F1                 7571 	pop	af
                           7572 ;demo.c:1159: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   285B 21r11s42           7573 	ld	hl,#_tripal + 2
   285E 4E                 7574 	ld	c,(hl)
   285F 11r10s42           7575 	ld	de,#_tripal + 1
   2862 1A                 7576 	ld	a,(de)
   2863 47                 7577 	ld	b,a
   2864 21r0Fs42           7578 	ld	hl,#_tripal
   2867 5E                 7579 	ld	e,(hl)
   2868 79                 7580 	ld	a,c
   2869 F5                 7581 	push	af
   286A 33                 7582 	inc	sp
   286B C5                 7583 	push	bc
   286C 33                 7584 	inc	sp
   286D 53                 7585 	ld	d,e
   286E 1E 03              7586 	ld	e,#0x03
   2870 D5                 7587 	push	de
   2871 CDr00s00           7588 	call	_msx2_palette
   2874 F1                 7589 	pop	af
   2875 F1                 7590 	pop	af
                           7591 ;demo.c:1160: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2876 21r14s42           7592 	ld	hl,#_tripal + 5
   2879 4E                 7593 	ld	c,(hl)
   287A 11r13s42           7594 	ld	de,#_tripal + 4
   287D 1A                 7595 	ld	a,(de)
   287E 47                 7596 	ld	b,a
   287F 21r12s42           7597 	ld	hl,#_tripal + 3
   2882 5E                 7598 	ld	e,(hl)
   2883 79                 7599 	ld	a,c
   2884 F5                 7600 	push	af
   2885 33                 7601 	inc	sp
   2886 C5                 7602 	push	bc
   2887 33                 7603 	inc	sp
   2888 53                 7604 	ld	d,e
   2889 1E 0E              7605 	ld	e,#0x0E
   288B D5                 7606 	push	de
   288C CDr00s00           7607 	call	_msx2_palette
   288F F1                 7608 	pop	af
   2890 F1                 7609 	pop	af
                           7610 ;demo.c:1161: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2891 21r17s42           7611 	ld	hl,#_tripal + 8
   2894 4E                 7612 	ld	c,(hl)
   2895 11r16s42           7613 	ld	de,#_tripal + 7
   2898 1A                 7614 	ld	a,(de)
   2899 47                 7615 	ld	b,a
   289A 21r15s42           7616 	ld	hl,#_tripal + 6
   289D 5E                 7617 	ld	e,(hl)
   289E 79                 7618 	ld	a,c
   289F F5                 7619 	push	af
   28A0 33                 7620 	inc	sp
   28A1 C5                 7621 	push	bc
   28A2 33                 7622 	inc	sp
   28A3 53                 7623 	ld	d,e
   28A4 1E 06              7624 	ld	e,#0x06
   28A6 D5                 7625 	push	de
   28A7 CDr00s00           7626 	call	_msx2_palette
   28AA F1                 7627 	pop	af
   28AB F1                 7628 	pop	af
                           7629 ;demo.c:1164: tripaltick++;
   28AC FD 21r18s42        7630 	ld	iy,#_tripaltick
   28B0 FD 34 00           7631 	inc	0 (iy)
                           7632 ;demo.c:1165: if (tripaltick > 6) {
   28B3 3E 06              7633 	ld	a,#0x06
   28B5 FD 21r18s42        7634 	ld	iy,#_tripaltick
   28B9 FD 96 00           7635 	sub	a,0 (iy)
   28BC D2r41s29           7636 	jp	NC,00142$
                           7637 ;demo.c:1166: tripaltick2++;
   28BF FD 21r19s42        7638 	ld	iy,#_tripaltick2
   28C3 FD 34 00           7639 	inc	0 (iy)
                           7640 ;demo.c:1167: if (tripaltick2 > 6) tripaltick2 = 0;
   28C6 3E 06              7641 	ld	a,#0x06
   28C8 FD 21r19s42        7642 	ld	iy,#_tripaltick2
   28CC FD 96 00           7643 	sub	a,0 (iy)
   28CF 30 05              7644 	jr	NC,00131$
   28D1 21r19s42           7645 	ld	hl,#_tripaltick2 + 0
   28D4 36 00              7646 	ld	(hl), #0x00
   28D6                    7647 00131$:
                           7648 ;demo.c:1169: r = tripal[0];
   28D6 21r0Fs42           7649 	ld	hl,#_tripal
   28D9 4E                 7650 	ld	c,(hl)
   28DA DD 71 FD           7651 	ld	-3 (ix),c
                           7652 ;demo.c:1170: g = tripal[1];
   28DD 11r10s42           7653 	ld	de,#_tripal + 1
   28E0 1A                 7654 	ld	a,(de)
   28E1 DD 77 FC           7655 	ld	-4 (ix),a
                           7656 ;demo.c:1171: b = tripal[2];
   28E4 21r11s42           7657 	ld	hl,#_tripal + 2
   28E7 5E                 7658 	ld	e,(hl)
   28E8 DD 73 FB           7659 	ld	-5 (ix),e
                           7660 ;demo.c:1173: for (x = 0; x < 6; x++) {
   28EB DD 36 FE 00        7661 	ld	-2 (ix),#0x00
   28EF DD 36 FF 00        7662 	ld	-1 (ix),#0x00
   28F3                    7663 00138$:
   28F3 DD 7E FE           7664 	ld	a,-2 (ix)
   28F6 D6 06              7665 	sub	a,#0x06
   28F8 DD 7E FF           7666 	ld	a,-1 (ix)
   28FB DE 00              7667 	sbc	a,#0x00
   28FD F2r27s29           7668 	jp	P,00141$
                           7669 ;demo.c:1174: tripal[x] = tripal[x+3];
   2900 3Er0F              7670 	ld	a,#<_tripal
   2902 DD 86 FE           7671 	add	a,-2 (ix)
   2905 4F                 7672 	ld	c,a
   2906 3Es42              7673 	ld	a,#>_tripal
   2908 DD 8E FF           7674 	adc	a,-1 (ix)
   290B 47                 7675 	ld	b,a
   290C DD 5E FE           7676 	ld	e,-2 (ix)
   290F 1C                 7677 	inc	e
   2910 1C                 7678 	inc	e
   2911 1C                 7679 	inc	e
   2912 3Er0F              7680 	ld	a,#<_tripal
   2914 83                 7681 	add	a,e
   2915 5F                 7682 	ld	e,a
   2916 3Es42              7683 	ld	a,#>_tripal
   2918 CE 00              7684 	adc	a,#0x00
   291A 57                 7685 	ld	d,a
   291B 1A                 7686 	ld	a,(de)
   291C 02                 7687 	ld	(bc),a
                           7688 ;demo.c:1173: for (x = 0; x < 6; x++) {
   291D DD 34 FE           7689 	inc	-2 (ix)
   2920 20 03              7690 	jr	NZ,00181$
   2922 DD 34 FF           7691 	inc	-1 (ix)
   2925                    7692 00181$:
   2925 18 CC              7693 	jr	00138$
   2927                    7694 00141$:
                           7695 ;demo.c:1177: tripal[6] = r;
   2927 01r15s42           7696 	ld	bc,#_tripal + 6
   292A DD 7E FD           7697 	ld	a,-3 (ix)
   292D 02                 7698 	ld	(bc),a
                           7699 ;demo.c:1178: tripal[7] = g;
   292E 01r16s42           7700 	ld	bc,#_tripal + 7
   2931 DD 7E FC           7701 	ld	a,-4 (ix)
   2934 02                 7702 	ld	(bc),a
                           7703 ;demo.c:1179: tripal[8] = b;
   2935 01r17s42           7704 	ld	bc,#_tripal + 8
   2938 DD 7E FB           7705 	ld	a,-5 (ix)
   293B 02                 7706 	ld	(bc),a
                           7707 ;demo.c:1180: tripaltick = 0;
   293C 21r18s42           7708 	ld	hl,#_tripaltick + 0
   293F 36 00              7709 	ld	(hl), #0x00
   2941                    7710 00142$:
   2941 DD F9              7711 	ld	sp,ix
   2943 DD E1              7712 	pop	ix
   2945 C9                 7713 	ret
   2946                    7714 _tritiles_end::
                           7715 ;demo.c:1185: int abs (int n) {
                           7716 ;	---------------------------------
                           7717 ; Function abs
                           7718 ; ---------------------------------
   2946                    7719 _abs_start::
   2946                    7720 _abs:
   2946 DD E5              7721 	push	ix
   2948 DD 21 00 00        7722 	ld	ix,#0
   294C DD 39              7723 	add	ix,sp
   294E 21 FA FF           7724 	ld	hl,#-6
   2951 39                 7725 	add	hl,sp
   2952 F9                 7726 	ld	sp,hl
                           7727 ;demo.c:1186: const int ret[2] = { n, -n };
   2953 21 02 00           7728 	ld	hl,#0x0002
   2956 39                 7729 	add	hl,sp
   2957 4D                 7730 	ld	c,l
   2958 44                 7731 	ld	b,h
   2959 DD 7E 04           7732 	ld	a,4 (ix)
   295C 77                 7733 	ld	(hl),a
   295D 23                 7734 	inc	hl
   295E DD 7E 05           7735 	ld	a,5 (ix)
   2961 77                 7736 	ld	(hl),a
   2962 21 02 00           7737 	ld	hl,#0x0002
   2965 09                 7738 	add	hl,bc
   2966 DD 75 FA           7739 	ld	-6 (ix),l
   2969 DD 74 FB           7740 	ld	-5 (ix),h
   296C AF                 7741 	xor	a,a
   296D DD 9E 04           7742 	sbc	a,4 (ix)
   2970 5F                 7743 	ld	e,a
   2971 3E 00              7744 	ld	a,#0x00
   2973 DD 9E 05           7745 	sbc	a,5 (ix)
   2976 57                 7746 	ld	d,a
   2977 DD 6E FA           7747 	ld	l,-6 (ix)
   297A DD 66 FB           7748 	ld	h,-5 (ix)
   297D 73                 7749 	ld	(hl),e
   297E 23                 7750 	inc	hl
   297F 72                 7751 	ld	(hl),d
                           7752 ;demo.c:1187: return ret [n<0];
   2980 DD 7E 05           7753 	ld	a,5 (ix)
   2983 07                 7754 	rlca
   2984 E6 01              7755 	and	a,#0x01
   2986 5F                 7756 	ld	e,a
   2987 CB 23              7757 	sla	e
   2989 79                 7758 	ld	a,c
   298A 83                 7759 	add	a,e
   298B 6F                 7760 	ld	l,a
   298C 78                 7761 	ld	a,b
   298D CE 00              7762 	adc	a,#0x00
   298F 67                 7763 	ld	h,a
   2990 5E                 7764 	ld	e,(hl)
   2991 23                 7765 	inc	hl
   2992 4E                 7766 	ld	c,(hl)
   2993 6B                 7767 	ld	l,e
   2994 61                 7768 	ld	h,c
   2995 DD F9              7769 	ld	sp,ix
   2997 DD E1              7770 	pop	ix
   2999 C9                 7771 	ret
   299A                    7772 _abs_end::
                           7773 ;demo.c:1193: void logoeffu() {
                           7774 ;	---------------------------------
                           7775 ; Function logoeffu
                           7776 ; ---------------------------------
   299A                    7777 _logoeffu_start::
   299A                    7778 _logoeffu:
   299A DD E5              7779 	push	ix
   299C DD 21 00 00        7780 	ld	ix,#0
   29A0 DD 39              7781 	add	ix,sp
   29A2 F5                 7782 	push	af
   29A3 F5                 7783 	push	af
                           7784 ;demo.c:1197: fadein();
   29A4 CDr27s0A           7785 	call	_fadein
                           7786 ;demo.c:1199: v = abs(sintabx[(vbicount) & 255]>>4);
   29A7 21r68s41           7787 	ld	hl,#_vbicount + 0
   29AA 4E                 7788 	ld	c,(hl)
   29AB 06 00              7789 	ld	b,#0x00
   29AD CB 21              7790 	sla	c
   29AF CB 10              7791 	rl	b
   29B1 21r2Cs00           7792 	ld	hl,#_sintabx
   29B4 09                 7793 	add	hl,bc
   29B5 4E                 7794 	ld	c,(hl)
   29B6 23                 7795 	inc	hl
   29B7 46                 7796 	ld	b,(hl)
   29B8 CB 38              7797 	srl	b
   29BA CB 19              7798 	rr	c
   29BC CB 38              7799 	srl	b
   29BE CB 19              7800 	rr	c
   29C0 CB 38              7801 	srl	b
   29C2 CB 19              7802 	rr	c
   29C4 CB 38              7803 	srl	b
   29C6 CB 19              7804 	rr	c
   29C8 C5                 7805 	push	bc
   29C9 CDr46s29           7806 	call	_abs
   29CC F1                 7807 	pop	af
   29CD 44                 7808 	ld	b,h
   29CE 4D                 7809 	ld	c,l
   29CF DD 71 FC           7810 	ld	-4 (ix),c
   29D2 DD 70 FD           7811 	ld	-3 (ix),b
                           7812 ;demo.c:1201: for (y = 0; y < 116; y+=2) {
   29D5 DD 36 FE 00        7813 	ld	-2 (ix),#0x00
   29D9 DD 36 FF 00        7814 	ld	-1 (ix),#0x00
   29DD                    7815 00108$:
   29DD DD 7E FE           7816 	ld	a,-2 (ix)
   29E0 D6 74              7817 	sub	a,#0x74
   29E2 DD 7E FF           7818 	ld	a,-1 (ix)
   29E5 DE 00              7819 	sbc	a,#0x00
   29E7 F2rB2s2A           7820 	jp	P,00111$
                           7821 ;demo.c:1202: cmd.size_x = 108;
   29EA 11r74s41           7822 	ld	de,#_cmd + 8
   29ED EB                 7823 	ex	de,hl
   29EE 36 6C              7824 	ld	(hl),#0x6C
   29F0 23                 7825 	inc	hl
   29F1 36 00              7826 	ld	(hl),#0x00
                           7827 ;demo.c:1203: cmd.size_y = 2;
   29F3 11r76s41           7828 	ld	de,#_cmd + 10
   29F6 EB                 7829 	ex	de,hl
   29F7 36 02              7830 	ld	(hl),#0x02
   29F9 23                 7831 	inc	hl
   29FA 36 00              7832 	ld	(hl),#0x00
                           7833 ;demo.c:1204: cmd.data = 0;
   29FC 11r78s41           7834 	ld	de,#_cmd + 12
   29FF 3E 00              7835 	ld	a,#0x00
   2A01 12                 7836 	ld	(de),a
                           7837 ;demo.c:1205: cmd.argument = 0x00;
   2A02 11r79s41           7838 	ld	de,#_cmd + 13
   2A05 3E 00              7839 	ld	a,#0x00
   2A07 12                 7840 	ld	(de),a
                           7841 ;demo.c:1206: cmd.command = 0xd0; 
   2A08 11r7As41           7842 	ld	de,#_cmd + 14
   2A0B 3E D0              7843 	ld	a,#0xD0
   2A0D 12                 7844 	ld	(de),a
                           7845 ;demo.c:1207: cmd.source_x = 74;
   2A0E 21r6Cs41           7846 	ld	hl,#_cmd
   2A11 36 4A              7847 	ld	(hl),#0x4A
   2A13 23                 7848 	inc	hl
   2A14 36 00              7849 	ld	(hl),#0x00
                           7850 ;demo.c:1208: cmd.source_y = 256+y;
   2A16 11r6Es41           7851 	ld	de,#_cmd + 2
   2A19 DD 7E FE           7852 	ld	a,-2 (ix)
   2A1C C6 00              7853 	add	a,#0x00
   2A1E 4F                 7854 	ld	c,a
   2A1F DD 7E FF           7855 	ld	a,-1 (ix)
   2A22 CE 01              7856 	adc	a,#0x01
   2A24 47                 7857 	ld	b,a
   2A25 6B                 7858 	ld	l,e
   2A26 62                 7859 	ld	h,d
   2A27 71                 7860 	ld	(hl),c
   2A28 23                 7861 	inc	hl
   2A29 70                 7862 	ld	(hl),b
                           7863 ;demo.c:1209: v+=y;
   2A2A DD 7E FC           7864 	ld	a,-4 (ix)
   2A2D DD 86 FE           7865 	add	a,-2 (ix)
   2A30 DD 77 FC           7866 	ld	-4 (ix),a
   2A33 DD 7E FD           7867 	ld	a,-3 (ix)
   2A36 DD 8E FF           7868 	adc	a,-1 (ix)
   2A39 DD 77 FD           7869 	ld	-3 (ix),a
                           7870 ;demo.c:1210: v -= powa;
   2A3C 21r1Es42           7871 	ld	hl,#_powa
   2A3F DD 7E FC           7872 	ld	a,-4 (ix)
   2A42 96                 7873 	sub	a,(hl)
   2A43 DD 77 FC           7874 	ld	-4 (ix),a
   2A46 DD 7E FD           7875 	ld	a,-3 (ix)
   2A49 23                 7876 	inc	hl
   2A4A 9E                 7877 	sbc	a,(hl)
                           7878 ;demo.c:1211: if (v<0) v = 0;
   2A4B DD 77 FD           7879 	ld	-3 (ix),a
   2A4E CB 7F              7880 	bit	7,a
   2A50 28 08              7881 	jr	Z,00102$
   2A52 DD 36 FC 00        7882 	ld	-4 (ix),#0x00
   2A56 DD 36 FD 00        7883 	ld	-3 (ix),#0x00
   2A5A                    7884 00102$:
                           7885 ;demo.c:1212: if (v>150) v = 150;
   2A5A 3E 96              7886 	ld	a,#0x96
   2A5C DD 96 FC           7887 	sub	a,-4 (ix)
   2A5F 3E 00              7888 	ld	a,#0x00
   2A61 DD 9E FD           7889 	sbc	a,-3 (ix)
   2A64 F2r6Fs2A           7890 	jp	P,00104$
   2A67 DD 36 FC 96        7891 	ld	-4 (ix),#0x96
   2A6B DD 36 FD 00        7892 	ld	-3 (ix),#0x00
   2A6F                    7893 00104$:
                           7894 ;demo.c:1213: cmd.dest_x = 74+v;
   2A6F 01r70s41           7895 	ld	bc,#_cmd + 4
   2A72 DD 7E FC           7896 	ld	a,-4 (ix)
   2A75 C6 4A              7897 	add	a,#0x4A
   2A77 5F                 7898 	ld	e,a
   2A78 DD 7E FD           7899 	ld	a,-3 (ix)
   2A7B CE 00              7900 	adc	a,#0x00
   2A7D 57                 7901 	ld	d,a
   2A7E 69                 7902 	ld	l,c
   2A7F 60                 7903 	ld	h,b
   2A80 73                 7904 	ld	(hl),e
   2A81 23                 7905 	inc	hl
   2A82 72                 7906 	ld	(hl),d
                           7907 ;demo.c:1214: cmd.dest_y = 50+y+1;
   2A83 01r72s41           7908 	ld	bc,#_cmd + 6
   2A86 DD 7E FE           7909 	ld	a,-2 (ix)
   2A89 C6 33              7910 	add	a,#0x33
   2A8B 5F                 7911 	ld	e,a
   2A8C DD 7E FF           7912 	ld	a,-1 (ix)
   2A8F CE 00              7913 	adc	a,#0x00
   2A91 57                 7914 	ld	d,a
   2A92 69                 7915 	ld	l,c
   2A93 60                 7916 	ld	h,b
   2A94 73                 7917 	ld	(hl),e
   2A95 23                 7918 	inc	hl
   2A96 72                 7919 	ld	(hl),d
                           7920 ;demo.c:1215: vdp_copier(&cmd);
   2A97 21r6Cs41           7921 	ld	hl,#_cmd
   2A9A E5                 7922 	push	hl
   2A9B CDr00s00           7923 	call	_vdp_copier
   2A9E F1                 7924 	pop	af
                           7925 ;demo.c:1201: for (y = 0; y < 116; y+=2) {
   2A9F DD 7E FE           7926 	ld	a,-2 (ix)
   2AA2 C6 02              7927 	add	a,#0x02
   2AA4 DD 77 FE           7928 	ld	-2 (ix),a
   2AA7 DD 7E FF           7929 	ld	a,-1 (ix)
   2AAA CE 00              7930 	adc	a,#0x00
   2AAC DD 77 FF           7931 	ld	-1 (ix),a
   2AAF C3rDDs29           7932 	jp	00108$
   2AB2                    7933 00111$:
                           7934 ;demo.c:1218: if (vbicount > 84 && onceclear > 182) {
   2AB2 3E 54              7935 	ld	a,#0x54
   2AB4 FD 21r68s41        7936 	ld	iy,#_vbicount
   2AB8 FD 96 00           7937 	sub	a,0 (iy)
   2ABB 3E 00              7938 	ld	a,#0x00
   2ABD FD 21r68s41        7939 	ld	iy,#_vbicount
   2AC1 FD 9E 01           7940 	sbc	a,1 (iy)
   2AC4 F2r26s2B           7941 	jp	P,00106$
   2AC7 3E B6              7942 	ld	a,#0xB6
   2AC9 FD 21r20s42        7943 	ld	iy,#_onceclear
   2ACD FD 96 00           7944 	sub	a,0 (iy)
   2AD0 D2r26s2B           7945 	jp	NC,00106$
                           7946 ;demo.c:1219: cmd.size_x = 4;
   2AD3 21r74s41           7947 	ld	hl, #_cmd + 8
   2AD6 36 04              7948 	ld	(hl),#0x04
   2AD8 23                 7949 	inc	hl
   2AD9 36 00              7950 	ld	(hl),#0x00
                           7951 ;demo.c:1220: cmd.size_y = 116;
   2ADB 21r76s41           7952 	ld	hl, #_cmd + 10
   2ADE 36 74              7953 	ld	(hl),#0x74
   2AE0 23                 7954 	inc	hl
   2AE1 36 00              7955 	ld	(hl),#0x00
                           7956 ;demo.c:1221: cmd.data = 0;
                           7957 ;demo.c:1222: cmd.argument = 0x00;
   2AE3 3E 00              7958 	ld	a,#0x00
   2AE5 32r78s41           7959 	ld	(#_cmd + 12),a
   2AE8 32r79s41           7960 	ld	(#_cmd + 13),a
                           7961 ;demo.c:1223: cmd.command = 0xd0; 
   2AEB 01r7As41           7962 	ld	bc,#_cmd + 14
   2AEE 3E D0              7963 	ld	a,#0xD0
   2AF0 02                 7964 	ld	(bc),a
                           7965 ;demo.c:1224: cmd.source_x = 20;
   2AF1 21r6Cs41           7966 	ld	hl,#_cmd
   2AF4 36 14              7967 	ld	(hl),#0x14
   2AF6 23                 7968 	inc	hl
   2AF7 36 00              7969 	ld	(hl),#0x00
                           7970 ;demo.c:1225: cmd.source_y = 0;
   2AF9 21r6Es41           7971 	ld	hl, #_cmd + 2
   2AFC 36 00              7972 	ld	(hl),#0x00
   2AFE 23                 7973 	inc	hl
   2AFF 36 00              7974 	ld	(hl),#0x00
                           7975 ;demo.c:1226: cmd.dest_x = onceclear;
   2B01 01r70s41           7976 	ld	bc,#_cmd + 4
   2B04 21r20s42           7977 	ld	hl,#_onceclear + 0
   2B07 5E                 7978 	ld	e,(hl)
   2B08 16 00              7979 	ld	d,#0x00
   2B0A 69                 7980 	ld	l,c
   2B0B 60                 7981 	ld	h,b
   2B0C 73                 7982 	ld	(hl),e
   2B0D 23                 7983 	inc	hl
   2B0E 72                 7984 	ld	(hl),d
                           7985 ;demo.c:1227: cmd.dest_y = 68;
   2B0F 21r72s41           7986 	ld	hl, #_cmd + 6
   2B12 36 44              7987 	ld	(hl),#0x44
   2B14 23                 7988 	inc	hl
   2B15 36 00              7989 	ld	(hl),#0x00
                           7990 ;demo.c:1228: vdp_copier(&cmd);
   2B17 21r6Cs41           7991 	ld	hl,#_cmd
   2B1A E5                 7992 	push	hl
   2B1B CDr00s00           7993 	call	_vdp_copier
   2B1E F1                 7994 	pop	af
                           7995 ;demo.c:1229: onceclear-=4;
   2B1F 21r20s42           7996 	ld	hl,#_onceclear
   2B22 7E                 7997 	ld	a,(hl)
   2B23 C6 FC              7998 	add	a,#0xFC
   2B25 77                 7999 	ld	(hl),a
   2B26                    8000 00106$:
                           8001 ;demo.c:1233: powa+=2;
   2B26 21r1Es42           8002 	ld	hl,#_powa
   2B29 7E                 8003 	ld	a,(hl)
   2B2A C6 02              8004 	add	a,#0x02
   2B2C 23                 8005 	inc	hl
   2B2D 2B                 8006 	dec	hl
   2B2E C5                 8007 	push	bc
   2B2F 4F                 8008 	ld	c, a
   2B30 23                 8009 	inc	hl
   2B31 7E                 8010 	ld	a, (hl)
   2B32 47                 8011 	ld	b, a
   2B33 79                 8012 	ld	a, c
   2B34 2B                 8013 	dec	hl
   2B35 77                 8014 	ld	(hl), a
   2B36 78                 8015 	ld	a, b
   2B37 C1                 8016 	pop	bc
   2B38 CE 00              8017 	adc	a,#0x00
   2B3A 23                 8018 	inc	hl
   2B3B 77                 8019 	ld	(hl),a
                           8020 ;demo.c:1234: powatick = 0;
   2B3C 21r1Cs42           8021 	ld	hl,#_powatick + 0
   2B3F 36 00              8022 	ld	(hl), #0x00
   2B41 21r1Ds42           8023 	ld	hl,#_powatick + 1
   2B44 36 00              8024 	ld	(hl), #0x00
   2B46 DD F9              8025 	ld	sp,ix
   2B48 DD E1              8026 	pop	ix
   2B4A C9                 8027 	ret
   2B4B                    8028 _logoeffu_end::
                           8029 ;demo.c:1241: void do_quit() {
                           8030 ;	---------------------------------
                           8031 ; Function do_quit
                           8032 ; ---------------------------------
   2B4B                    8033 _do_quit_start::
   2B4B                    8034 _do_quit:
                           8035 ;demo.c:1242: waitVB();
   2B4B 76                 8036 		halt 
                           8037 ;demo.c:1243: uninstall_isr();
   2B4C CDr00s00           8038 	call	_uninstall_isr
                           8039 ;demo.c:1244: PLY_Stop();
   2B4F CDr00s00           8040 	call	_PLY_Stop
                           8041 ;demo.c:1245: PLY_SendRegisters();
   2B52 CDr00s00           8042 	call	_PLY_SendRegisters
                           8043 ;demo.c:1247: screen(0);
   2B55 3E 00              8044 	ld	a,#0x00
   2B57 F5                 8045 	push	af
   2B58 33                 8046 	inc	sp
   2B59 CDr00s00           8047 	call	_screen
   2B5C 33                 8048 	inc	sp
                           8049 ;demo.c:1249: puts("demo quit\r\n\r\n");
   2B5D 21r6Es2B           8050 	ld	hl,#__str_14
   2B60 E5                 8051 	push	hl
   2B61 CDr00s00           8052 	call	_puts
   2B64 F1                 8053 	pop	af
                           8054 ;demo.c:1251: exit(0);	
   2B65 3E 00              8055 	ld	a,#0x00
   2B67 F5                 8056 	push	af
   2B68 33                 8057 	inc	sp
   2B69 CDr00s00           8058 	call	_exit
   2B6C 33                 8059 	inc	sp
   2B6D C9                 8060 	ret
   2B6E                    8061 _do_quit_end::
   2B6E                    8062 __str_14:
   2B6E 64 65 6D 6F 20 71  8063 	.ascii "demo quit"
        75 69 74
   2B77 0D                 8064 	.db 0x0D
   2B78 0A                 8065 	.db 0x0A
   2B79 0D                 8066 	.db 0x0D
   2B7A 0A                 8067 	.db 0x0A
   2B7B 00                 8068 	.db 0x00
                           8069 ;demo.c:1277: void main() {
                           8070 ;	---------------------------------
                           8071 ; Function main
                           8072 ; ---------------------------------
   2B7C                    8073 _main_start::
   2B7C                    8074 _main:
   2B7C DD E5              8075 	push	ix
   2B7E DD 21 00 00        8076 	ld	ix,#0
   2B82 DD 39              8077 	add	ix,sp
   2B84 21 F9 FF           8078 	ld	hl,#-7
   2B87 39                 8079 	add	hl,sp
   2B88 F9                 8080 	ld	sp,hl
                           8081 ;demo.c:1278: unsigned char quit=0;
   2B89 DD 36 FF 00        8082 	ld	-1 (ix),#0x00
                           8083 ;demo.c:1284: spindown();
   2B8D CDr00s00           8084 	call	_spindown
                           8085 ;demo.c:1286: puts("demo init\r\n\r\n");
   2B90 21r46s30           8086 	ld	hl,#__str_15
   2B93 E5                 8087 	push	hl
   2B94 CDr00s00           8088 	call	_puts
   2B97 F1                 8089 	pop	af
                           8090 ;demo.c:1288: for (y = 0; y < 2; y++) {
   2B98 DD 36 FB 00        8091 	ld	-5 (ix),#0x00
   2B9C DD 36 FC 00        8092 	ld	-4 (ix),#0x00
   2BA0                    8093 00118$:
   2BA0 DD 7E FB           8094 	ld	a,-5 (ix)
   2BA3 D6 02              8095 	sub	a,#0x02
   2BA5 DD 7E FC           8096 	ld	a,-4 (ix)
   2BA8 DE 00              8097 	sbc	a,#0x00
   2BAA F2r2Cs2C           8098 	jp	P,00121$
                           8099 ;demo.c:1289: for (x = 0; x < 16; x++) {
   2BAD DD 4E FB           8100 	ld	c,-5 (ix)
   2BB0 DD 46 FC           8101 	ld	b,-4 (ix)
   2BB3 CB 21              8102 	sla	c
   2BB5 CB 10              8103 	rl	b
   2BB7 CB 21              8104 	sla	c
   2BB9 CB 10              8105 	rl	b
   2BBB CB 21              8106 	sla	c
   2BBD CB 10              8107 	rl	b
   2BBF CB 21              8108 	sla	c
   2BC1 CB 10              8109 	rl	b
   2BC3 21 81 03           8110 	ld	hl,#0x0381
   2BC6 09                 8111 	add	hl,bc
   2BC7 DD 75 F9           8112 	ld	-7 (ix),l
   2BCA DD 74 FA           8113 	ld	-6 (ix),h
   2BCD DD 36 FD 00        8114 	ld	-3 (ix),#0x00
   2BD1 DD 36 FE 00        8115 	ld	-2 (ix),#0x00
   2BD5                    8116 00114$:
   2BD5 DD 7E FD           8117 	ld	a,-3 (ix)
   2BD8 D6 10              8118 	sub	a,#0x10
   2BDA DD 7E FE           8119 	ld	a,-2 (ix)
   2BDD DE 00              8120 	sbc	a,#0x00
   2BDF F2r21s2C           8121 	jp	P,00120$
                           8122 ;demo.c:1290: tri_lookup_x[(y*16)+x] = x * 16;
   2BE2 DD 7E FB           8123 	ld	a,-5 (ix)
   2BE5 07                 8124 	rlca
   2BE6 07                 8125 	rlca
   2BE7 07                 8126 	rlca
   2BE8 07                 8127 	rlca
   2BE9 E6 F0              8128 	and	a,#0xF0
   2BEB 5F                 8129 	ld	e,a
   2BEC DD 56 FD           8130 	ld	d,-3 (ix)
   2BEF 7B                 8131 	ld	a,e
   2BF0 82                 8132 	add	a,d
   2BF1 5F                 8133 	ld	e, a
   2BF2 C6r00              8134 	add	a,#<_tri_lookup_x
   2BF4 4F                 8135 	ld	c,a
   2BF5 3Es01              8136 	ld	a,#>_tri_lookup_x
   2BF7 CE 00              8137 	adc	a,#0x00
   2BF9 47                 8138 	ld	b,a
   2BFA 7A                 8139 	ld	a,d
   2BFB 07                 8140 	rlca
   2BFC 07                 8141 	rlca
   2BFD 07                 8142 	rlca
   2BFE 07                 8143 	rlca
   2BFF E6 F0              8144 	and	a,#0xF0
   2C01 02                 8145 	ld	(bc),a
                           8146 ;demo.c:1291: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   2C02 CB 23              8147 	sla	e
   2C04 3Er88              8148 	ld	a,#<_tri_lookup_y
   2C06 83                 8149 	add	a,e
   2C07 6F                 8150 	ld	l,a
   2C08 3Es01              8151 	ld	a,#>_tri_lookup_y
   2C0A CE 00              8152 	adc	a,#0x00
   2C0C 67                 8153 	ld	h,a
   2C0D DD 7E F9           8154 	ld	a,-7 (ix)
   2C10 77                 8155 	ld	(hl),a
   2C11 23                 8156 	inc	hl
   2C12 DD 7E FA           8157 	ld	a,-6 (ix)
   2C15 77                 8158 	ld	(hl),a
                           8159 ;demo.c:1289: for (x = 0; x < 16; x++) {
   2C16 DD 34 FD           8160 	inc	-3 (ix)
   2C19 20 03              8161 	jr	NZ,00146$
   2C1B DD 34 FE           8162 	inc	-2 (ix)
   2C1E                    8163 00146$:
   2C1E C3rD5s2B           8164 	jp	00114$
   2C21                    8165 00120$:
                           8166 ;demo.c:1288: for (y = 0; y < 2; y++) {
   2C21 DD 34 FB           8167 	inc	-5 (ix)
   2C24 20 03              8168 	jr	NZ,00147$
   2C26 DD 34 FC           8169 	inc	-4 (ix)
   2C29                    8170 00147$:
   2C29 C3rA0s2B           8171 	jp	00118$
   2C2C                    8172 00121$:
                           8173 ;demo.c:1295: for (x = 0; x < 26; x++) {
   2C2C DD 36 FD 00        8174 	ld	-3 (ix),#0x00
   2C30 DD 36 FE 00        8175 	ld	-2 (ix),#0x00
   2C34 DD 36 F9 00        8176 	ld	-7 (ix),#0x00
   2C38 DD 36 FA 00        8177 	ld	-6 (ix),#0x00
   2C3C                    8178 00122$:
   2C3C DD 7E FD           8179 	ld	a,-3 (ix)
   2C3F D6 1A              8180 	sub	a,#0x1A
   2C41 DD 7E FE           8181 	ld	a,-2 (ix)
   2C44 DE 00              8182 	sbc	a,#0x00
   2C46 F2r98s2C           8183 	jp	P,00125$
                           8184 ;demo.c:1296: twelvetimes[x] = x * 12;
   2C49 DD 4E FD           8185 	ld	c,-3 (ix)
   2C4C DD 46 FE           8186 	ld	b,-2 (ix)
   2C4F CB 21              8187 	sla	c
   2C51 CB 10              8188 	rl	b
   2C53 21r20s01           8189 	ld	hl,#_twelvetimes
   2C56 09                 8190 	add	hl,bc
   2C57 DD 7E F9           8191 	ld	a,-7 (ix)
   2C5A 77                 8192 	ld	(hl),a
   2C5B 23                 8193 	inc	hl
   2C5C DD 7E FA           8194 	ld	a,-6 (ix)
   2C5F 77                 8195 	ld	(hl),a
                           8196 ;demo.c:1297: eighttimes[x] = x * 8;
   2C60 21r54s01           8197 	ld	hl,#_eighttimes
   2C63 09                 8198 	add	hl,bc
   2C64 4D                 8199 	ld	c,l
   2C65 44                 8200 	ld	b,h
   2C66 DD 5E FD           8201 	ld	e,-3 (ix)
   2C69 DD 56 FE           8202 	ld	d,-2 (ix)
   2C6C CB 23              8203 	sla	e
   2C6E CB 12              8204 	rl	d
   2C70 CB 23              8205 	sla	e
   2C72 CB 12              8206 	rl	d
   2C74 CB 23              8207 	sla	e
   2C76 CB 12              8208 	rl	d
   2C78 69                 8209 	ld	l,c
   2C79 60                 8210 	ld	h,b
   2C7A 73                 8211 	ld	(hl),e
   2C7B 23                 8212 	inc	hl
   2C7C 72                 8213 	ld	(hl),d
                           8214 ;demo.c:1295: for (x = 0; x < 26; x++) {
   2C7D DD 7E F9           8215 	ld	a,-7 (ix)
   2C80 C6 0C              8216 	add	a,#0x0C
   2C82 DD 77 F9           8217 	ld	-7 (ix),a
   2C85 DD 7E FA           8218 	ld	a,-6 (ix)
   2C88 CE 00              8219 	adc	a,#0x00
   2C8A DD 77 FA           8220 	ld	-6 (ix),a
   2C8D DD 34 FD           8221 	inc	-3 (ix)
   2C90 20 03              8222 	jr	NZ,00152$
   2C92 DD 34 FE           8223 	inc	-2 (ix)
   2C95                    8224 00152$:
   2C95 C3r3Cs2C           8225 	jp	00122$
   2C98                    8226 00125$:
                           8227 ;demo.c:1300: puts("music init...");
   2C98 21r54s30           8228 	ld	hl,#__str_16
   2C9B E5                 8229 	push	hl
   2C9C CDr00s00           8230 	call	_puts
   2C9F F1                 8231 	pop	af
                           8232 ;demo.c:1302: PLY_SongPtr = (char *)0x0103;
   2CA0 21r00s00           8233 	ld	hl,#_PLY_SongPtr + 0
   2CA3 36 03              8234 	ld	(hl), #0x03
   2CA5 21r01s00           8235 	ld	hl,#_PLY_SongPtr + 1
   2CA8 36 01              8236 	ld	(hl), #0x01
                           8237 ;demo.c:1303: PLY_Init();
   2CAA CDr00s00           8238 	call	_PLY_Init
                           8239 ;demo.c:1304: puts("done.\r\n");
   2CAD 21r62s30           8240 	ld	hl,#__str_17
   2CB0 E5                 8241 	push	hl
   2CB1 CDr00s00           8242 	call	_puts
   2CB4 F1                 8243 	pop	af
                           8244 ;demo.c:1306: puts("detecting vdp type...\r\n\r\n");
   2CB5 21r6As30           8245 	ld	hl,#__str_18
   2CB8 E5                 8246 	push	hl
   2CB9 CDr00s00           8247 	call	_puts
   2CBC F1                 8248 	pop	af
                           8249 ;demo.c:1307: if(isvdp2())
   2CBD CDr00s00           8250 	call	_isvdp2
   2CC0 AF                 8251 	xor	a,a
   2CC1 B5                 8252 	or	a,l
   2CC2 28 0A              8253 	jr	Z,00102$
                           8254 ;demo.c:1309: puts("vdp2 found! setting 50hz...\r\n\r\n");
   2CC4 21r84s30           8255 	ld	hl,#__str_19
   2CC7 E5                 8256 	push	hl
   2CC8 CDr00s00           8257 	call	_puts
   2CCB F1                 8258 	pop	af
   2CCC 18 0B              8259 	jr	00103$
   2CCE                    8260 00102$:
                           8261 ;demo.c:1312: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   2CCE 21rA4s30           8262 	ld	hl,#__str_20
   2CD1 E5                 8263 	push	hl
   2CD2 CDr00s00           8264 	call	_puts
   2CD5 F1                 8265 	pop	af
                           8266 ;demo.c:1313: do_quit();
   2CD6 CDr4Bs2B           8267 	call	_do_quit
   2CD9                    8268 00103$:
                           8269 ;demo.c:1316: pal_load("TWISTER PL5",32,1);
   2CD9 21 01 00           8270 	ld	hl,#0x0001
   2CDC E5                 8271 	push	hl
   2CDD 3E 20              8272 	ld	a,#0x20
   2CDF F5                 8273 	push	af
   2CE0 33                 8274 	inc	sp
   2CE1 21rEBs30           8275 	ld	hl,#__str_21
   2CE4 E5                 8276 	push	hl
   2CE5 CDrA3s07           8277 	call	_pal_load
   2CE8 F1                 8278 	pop	af
   2CE9 F1                 8279 	pop	af
   2CEA 33                 8280 	inc	sp
                           8281 ;demo.c:1317: memcpy(twister_palette, cur_palette, 32);
   2CEB 21 20 00           8282 	ld	hl,#0x0020
   2CEE E5                 8283 	push	hl
   2CEF 21rC8s40           8284 	ld	hl,#_cur_palette
   2CF2 E5                 8285 	push	hl
   2CF3 21r08s41           8286 	ld	hl,#_twister_palette
   2CF6 E5                 8287 	push	hl
   2CF7 CDr00s00           8288 	call	_memcpy
   2CFA F1                 8289 	pop	af
   2CFB F1                 8290 	pop	af
   2CFC F1                 8291 	pop	af
                           8292 ;demo.c:1318: pal_load("LF      PL5",32,1);
   2CFD 21 01 00           8293 	ld	hl,#0x0001
   2D00 E5                 8294 	push	hl
   2D01 3E 20              8295 	ld	a,#0x20
   2D03 F5                 8296 	push	af
   2D04 33                 8297 	inc	sp
   2D05 21rF7s30           8298 	ld	hl,#__str_22
   2D08 E5                 8299 	push	hl
   2D09 CDrA3s07           8300 	call	_pal_load
   2D0C F1                 8301 	pop	af
   2D0D F1                 8302 	pop	af
   2D0E 33                 8303 	inc	sp
                           8304 ;demo.c:1319: memcpy(tf_palette, cur_palette, 32);
   2D0F 21 20 00           8305 	ld	hl,#0x0020
   2D12 E5                 8306 	push	hl
   2D13 21rC8s40           8307 	ld	hl,#_cur_palette
   2D16 E5                 8308 	push	hl
   2D17 21r28s41           8309 	ld	hl,#_tf_palette
   2D1A E5                 8310 	push	hl
   2D1B CDr00s00           8311 	call	_memcpy
   2D1E F1                 8312 	pop	af
   2D1F F1                 8313 	pop	af
   2D20 F1                 8314 	pop	af
                           8315 ;demo.c:1320: pal_load("BOXES   PL5",32,1);
   2D21 21 01 00           8316 	ld	hl,#0x0001
   2D24 E5                 8317 	push	hl
   2D25 3E 20              8318 	ld	a,#0x20
   2D27 F5                 8319 	push	af
   2D28 33                 8320 	inc	sp
   2D29 21r03s31           8321 	ld	hl,#__str_23
   2D2C E5                 8322 	push	hl
   2D2D CDrA3s07           8323 	call	_pal_load
   2D30 F1                 8324 	pop	af
   2D31 F1                 8325 	pop	af
   2D32 33                 8326 	inc	sp
                           8327 ;demo.c:1321: memcpy(boxes_palette, cur_palette, 32);
   2D33 21 20 00           8328 	ld	hl,#0x0020
   2D36 E5                 8329 	push	hl
   2D37 21rC8s40           8330 	ld	hl,#_cur_palette
   2D3A E5                 8331 	push	hl
   2D3B 21r48s41           8332 	ld	hl,#_boxes_palette
   2D3E E5                 8333 	push	hl
   2D3F CDr00s00           8334 	call	_memcpy
   2D42 F1                 8335 	pop	af
   2D43 F1                 8336 	pop	af
   2D44 F1                 8337 	pop	af
                           8338 ;demo.c:1322: pal_load("BULBS   PL5",32,1);
   2D45 21 01 00           8339 	ld	hl,#0x0001
   2D48 E5                 8340 	push	hl
   2D49 3E 20              8341 	ld	a,#0x20
   2D4B F5                 8342 	push	af
   2D4C 33                 8343 	inc	sp
   2D4D 21r0Fs31           8344 	ld	hl,#__str_24
   2D50 E5                 8345 	push	hl
   2D51 CDrA3s07           8346 	call	_pal_load
   2D54 F1                 8347 	pop	af
   2D55 F1                 8348 	pop	af
   2D56 33                 8349 	inc	sp
                           8350 ;demo.c:1324: scratch_clear();
   2D57 CDr90s07           8351 	call	_scratch_clear
                           8352 ;demo.c:1325: vdp_load_palette(scratch);
   2D5A 21r48s40           8353 	ld	hl,#_scratch
   2D5D E5                 8354 	push	hl
   2D5E CDr00s00           8355 	call	_vdp_load_palette
   2D61 F1                 8356 	pop	af
                           8357 ;demo.c:1327: vdp_set_screen5();
   2D62 CDr00s00           8358 	call	_vdp_set_screen5
                           8359 ;demo.c:1329: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   2D65 21 00 00           8360 	ld	hl,#0x0000
   2D68 E5                 8361 	push	hl
   2D69 2E 01              8362 	ld	l, #0x01
   2D6B E5                 8363 	push	hl
   2D6C 2E 00              8364 	ld	l, #0x00
   2D6E E5                 8365 	push	hl
   2D6F 21 7F 09           8366 	ld	hl,#0x097F
   2D72 E5                 8367 	push	hl
   2D73 21r1Bs31           8368 	ld	hl,#__str_25
   2D76 E5                 8369 	push	hl
   2D77 CDr99s09           8370 	call	_pck_load
   2D7A FD 21 0A 00        8371 	ld	iy,#0x000A
   2D7E FD 39              8372 	add	iy,sp
   2D80 FD F9              8373 	ld	sp,iy
                           8374 ;demo.c:1331: cmd.size_x = 256;
   2D82 21r74s41           8375 	ld	hl, #_cmd + 8
   2D85 36 00              8376 	ld	(hl),#0x00
   2D87 23                 8377 	inc	hl
   2D88 36 01              8378 	ld	(hl),#0x01
                           8379 ;demo.c:1332: cmd.size_y = 212;
   2D8A 21r76s41           8380 	ld	hl, #_cmd + 10
   2D8D 36 D4              8381 	ld	(hl),#0xD4
   2D8F 23                 8382 	inc	hl
   2D90 36 00              8383 	ld	(hl),#0x00
                           8384 ;demo.c:1333: cmd.data = 0;
                           8385 ;demo.c:1334: cmd.argument = 0x00;
   2D92 3E 00              8386 	ld	a,#0x00
   2D94 32r78s41           8387 	ld	(#_cmd + 12),a
   2D97 32r79s41           8388 	ld	(#_cmd + 13),a
                           8389 ;demo.c:1335: cmd.command = 0xd0; 
   2D9A 01r7As41           8390 	ld	bc,#_cmd + 14
   2D9D 3E D0              8391 	ld	a,#0xD0
   2D9F 02                 8392 	ld	(bc),a
                           8393 ;demo.c:1336: cmd.source_x = 0;
   2DA0 21r6Cs41           8394 	ld	hl,#_cmd
   2DA3 36 00              8395 	ld	(hl),#0x00
   2DA5 23                 8396 	inc	hl
   2DA6 36 00              8397 	ld	(hl),#0x00
                           8398 ;demo.c:1337: cmd.source_y = 0;
   2DA8 21r6Es41           8399 	ld	hl, #_cmd + 2
   2DAB 36 00              8400 	ld	(hl),#0x00
   2DAD 23                 8401 	inc	hl
   2DAE 36 00              8402 	ld	(hl),#0x00
                           8403 ;demo.c:1338: cmd.dest_x = 0;
   2DB0 21r70s41           8404 	ld	hl, #_cmd + 4
   2DB3 36 00              8405 	ld	(hl),#0x00
   2DB5 23                 8406 	inc	hl
   2DB6 36 00              8407 	ld	(hl),#0x00
                           8408 ;demo.c:1339: cmd.dest_y = 256;
   2DB8 21r72s41           8409 	ld	hl, #_cmd + 6
   2DBB 36 00              8410 	ld	(hl),#0x00
   2DBD 23                 8411 	inc	hl
   2DBE 36 01              8412 	ld	(hl),#0x01
                           8413 ;demo.c:1340: vdp_copier(&cmd);
   2DC0 21r6Cs41           8414 	ld	hl,#_cmd
   2DC3 E5                 8415 	push	hl
   2DC4 CDr00s00           8416 	call	_vdp_copier
   2DC7 F1                 8417 	pop	af
                           8418 ;demo.c:1342: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   2DC8 21 00 00           8419 	ld	hl,#0x0000
   2DCB E5                 8420 	push	hl
   2DCC 2E 01              8421 	ld	l, #0x01
   2DCE E5                 8422 	push	hl
   2DCF 2E 00              8423 	ld	l, #0x00
   2DD1 E5                 8424 	push	hl
   2DD2 21 C0 0F           8425 	ld	hl,#0x0FC0
   2DD5 E5                 8426 	push	hl
   2DD6 21r27s31           8427 	ld	hl,#__str_26
   2DD9 E5                 8428 	push	hl
   2DDA CDr99s09           8429 	call	_pck_load
   2DDD FD 21 0A 00        8430 	ld	iy,#0x000A
   2DE1 FD 39              8431 	add	iy,sp
   2DE3 FD F9              8432 	ld	sp,iy
                           8433 ;demo.c:1344: cmd.size_x = 256;
   2DE5 21r74s41           8434 	ld	hl, #_cmd + 8
   2DE8 36 00              8435 	ld	(hl),#0x00
   2DEA 23                 8436 	inc	hl
   2DEB 36 01              8437 	ld	(hl),#0x01
                           8438 ;demo.c:1345: cmd.size_y = 212;
   2DED 21r76s41           8439 	ld	hl, #_cmd + 10
   2DF0 36 D4              8440 	ld	(hl),#0xD4
   2DF2 23                 8441 	inc	hl
   2DF3 36 00              8442 	ld	(hl),#0x00
                           8443 ;demo.c:1346: cmd.data = 0;
                           8444 ;demo.c:1347: cmd.argument = 0x00;
   2DF5 3E 00              8445 	ld	a,#0x00
   2DF7 32r78s41           8446 	ld	(#_cmd + 12),a
   2DFA 32r79s41           8447 	ld	(#_cmd + 13),a
                           8448 ;demo.c:1348: cmd.command = 0xd0; 
   2DFD 01r7As41           8449 	ld	bc,#_cmd + 14
   2E00 3E D0              8450 	ld	a,#0xD0
   2E02 02                 8451 	ld	(bc),a
                           8452 ;demo.c:1349: cmd.source_x = 0;
   2E03 21r6Cs41           8453 	ld	hl,#_cmd
   2E06 36 00              8454 	ld	(hl),#0x00
   2E08 23                 8455 	inc	hl
   2E09 36 00              8456 	ld	(hl),#0x00
                           8457 ;demo.c:1350: cmd.source_y = 0;
   2E0B 21r6Es41           8458 	ld	hl, #_cmd + 2
   2E0E 36 00              8459 	ld	(hl),#0x00
   2E10 23                 8460 	inc	hl
   2E11 36 00              8461 	ld	(hl),#0x00
                           8462 ;demo.c:1351: cmd.dest_x = 0;
   2E13 21r70s41           8463 	ld	hl, #_cmd + 4
   2E16 36 00              8464 	ld	(hl),#0x00
   2E18 23                 8465 	inc	hl
   2E19 36 00              8466 	ld	(hl),#0x00
                           8467 ;demo.c:1352: cmd.dest_y = 512;
   2E1B 21r72s41           8468 	ld	hl, #_cmd + 6
   2E1E 36 00              8469 	ld	(hl),#0x00
   2E20 23                 8470 	inc	hl
   2E21 36 02              8471 	ld	(hl),#0x02
                           8472 ;demo.c:1353: vdp_copier(&cmd);
   2E23 21r6Cs41           8473 	ld	hl,#_cmd
   2E26 E5                 8474 	push	hl
   2E27 CDr00s00           8475 	call	_vdp_copier
   2E2A F1                 8476 	pop	af
                           8477 ;demo.c:1356: pck_load("BOXES   PCK",2731,0x0000,VRAM_0,0);
   2E2B 21 00 00           8478 	ld	hl,#0x0000
   2E2E E5                 8479 	push	hl
   2E2F 2E 01              8480 	ld	l, #0x01
   2E31 E5                 8481 	push	hl
   2E32 2E 00              8482 	ld	l, #0x00
   2E34 E5                 8483 	push	hl
   2E35 21 AB 0A           8484 	ld	hl,#0x0AAB
   2E38 E5                 8485 	push	hl
   2E39 21r33s31           8486 	ld	hl,#__str_27
   2E3C E5                 8487 	push	hl
   2E3D CDr99s09           8488 	call	_pck_load
   2E40 FD 21 0A 00        8489 	ld	iy,#0x000A
   2E44 FD 39              8490 	add	iy,sp
   2E46 FD F9              8491 	ld	sp,iy
                           8492 ;demo.c:1357: cmd.size_x = 256;
   2E48 21r74s41           8493 	ld	hl, #_cmd + 8
   2E4B 36 00              8494 	ld	(hl),#0x00
   2E4D 23                 8495 	inc	hl
   2E4E 36 01              8496 	ld	(hl),#0x01
                           8497 ;demo.c:1358: cmd.size_y = 212;
   2E50 21r76s41           8498 	ld	hl, #_cmd + 10
   2E53 36 D4              8499 	ld	(hl),#0xD4
   2E55 23                 8500 	inc	hl
   2E56 36 00              8501 	ld	(hl),#0x00
                           8502 ;demo.c:1359: cmd.data = 0;
                           8503 ;demo.c:1360: cmd.argument = 0x00;
   2E58 3E 00              8504 	ld	a,#0x00
   2E5A 32r78s41           8505 	ld	(#_cmd + 12),a
   2E5D 32r79s41           8506 	ld	(#_cmd + 13),a
                           8507 ;demo.c:1361: cmd.command = 0xd0; 
   2E60 01r7As41           8508 	ld	bc,#_cmd + 14
   2E63 3E D0              8509 	ld	a,#0xD0
   2E65 02                 8510 	ld	(bc),a
                           8511 ;demo.c:1362: cmd.source_x = 0;
   2E66 21r6Cs41           8512 	ld	hl,#_cmd
   2E69 36 00              8513 	ld	(hl),#0x00
   2E6B 23                 8514 	inc	hl
   2E6C 36 00              8515 	ld	(hl),#0x00
                           8516 ;demo.c:1363: cmd.source_y = 0;
   2E6E 21r6Es41           8517 	ld	hl, #_cmd + 2
   2E71 36 00              8518 	ld	(hl),#0x00
   2E73 23                 8519 	inc	hl
   2E74 36 00              8520 	ld	(hl),#0x00
                           8521 ;demo.c:1364: cmd.dest_x = 0;
   2E76 21r70s41           8522 	ld	hl, #_cmd + 4
   2E79 36 00              8523 	ld	(hl),#0x00
   2E7B 23                 8524 	inc	hl
   2E7C 36 00              8525 	ld	(hl),#0x00
                           8526 ;demo.c:1365: cmd.dest_y = 768;
   2E7E 21r72s41           8527 	ld	hl, #_cmd + 6
   2E81 36 00              8528 	ld	(hl),#0x00
   2E83 23                 8529 	inc	hl
   2E84 36 03              8530 	ld	(hl),#0x03
                           8531 ;demo.c:1366: vdp_copier(&cmd);
   2E86 21r6Cs41           8532 	ld	hl,#_cmd
   2E89 E5                 8533 	push	hl
   2E8A CDr00s00           8534 	call	_vdp_copier
   2E8D F1                 8535 	pop	af
                           8536 ;demo.c:1368: scratch_clear();
   2E8E CDr90s07           8537 	call	_scratch_clear
                           8538 ;demo.c:1369: vdp_load_palette(scratch);
   2E91 21r48s40           8539 	ld	hl,#_scratch
   2E94 E5                 8540 	push	hl
   2E95 CDr00s00           8541 	call	_vdp_load_palette
   2E98 F1                 8542 	pop	af
                           8543 ;demo.c:1371: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   2E99 21 00 00           8544 	ld	hl,#0x0000
   2E9C E5                 8545 	push	hl
   2E9D 2E 01              8546 	ld	l, #0x01
   2E9F E5                 8547 	push	hl
   2EA0 2E 00              8548 	ld	l, #0x00
   2EA2 E5                 8549 	push	hl
   2EA3 21 6A 08           8550 	ld	hl,#0x086A
   2EA6 E5                 8551 	push	hl
   2EA7 21r3Fs31           8552 	ld	hl,#__str_28
   2EAA E5                 8553 	push	hl
   2EAB CDr99s09           8554 	call	_pck_load
   2EAE FD 21 0A 00        8555 	ld	iy,#0x000A
   2EB2 FD 39              8556 	add	iy,sp
   2EB4 FD F9              8557 	ld	sp,iy
                           8558 ;demo.c:1373: cmd.size_x = 108;
   2EB6 21r74s41           8559 	ld	hl, #_cmd + 8
   2EB9 36 6C              8560 	ld	(hl),#0x6C
   2EBB 23                 8561 	inc	hl
   2EBC 36 00              8562 	ld	(hl),#0x00
                           8563 ;demo.c:1374: cmd.size_y = 116;
   2EBE 21r76s41           8564 	ld	hl, #_cmd + 10
   2EC1 36 74              8565 	ld	(hl),#0x74
   2EC3 23                 8566 	inc	hl
   2EC4 36 00              8567 	ld	(hl),#0x00
                           8568 ;demo.c:1375: cmd.data = 0;
                           8569 ;demo.c:1376: cmd.argument = 0x00;
   2EC6 3E 00              8570 	ld	a,#0x00
   2EC8 32r78s41           8571 	ld	(#_cmd + 12),a
   2ECB 32r79s41           8572 	ld	(#_cmd + 13),a
                           8573 ;demo.c:1377: cmd.command = 0xd0; 
   2ECE 01r7As41           8574 	ld	bc,#_cmd + 14
   2ED1 3E D0              8575 	ld	a,#0xD0
   2ED3 02                 8576 	ld	(bc),a
                           8577 ;demo.c:1378: cmd.source_x = 75;
   2ED4 21r6Cs41           8578 	ld	hl,#_cmd
   2ED7 36 4B              8579 	ld	(hl),#0x4B
   2ED9 23                 8580 	inc	hl
   2EDA 36 00              8581 	ld	(hl),#0x00
                           8582 ;demo.c:1379: cmd.source_y = 50;
   2EDC 21r6Es41           8583 	ld	hl, #_cmd + 2
   2EDF 36 32              8584 	ld	(hl),#0x32
   2EE1 23                 8585 	inc	hl
   2EE2 36 00              8586 	ld	(hl),#0x00
                           8587 ;demo.c:1380: cmd.dest_x = 75;
   2EE4 21r70s41           8588 	ld	hl, #_cmd + 4
   2EE7 36 4B              8589 	ld	(hl),#0x4B
   2EE9 23                 8590 	inc	hl
   2EEA 36 00              8591 	ld	(hl),#0x00
                           8592 ;demo.c:1381: cmd.dest_y = 256;
   2EEC 21r72s41           8593 	ld	hl, #_cmd + 6
   2EEF 36 00              8594 	ld	(hl),#0x00
   2EF1 23                 8595 	inc	hl
   2EF2 36 01              8596 	ld	(hl),#0x01
                           8597 ;demo.c:1382: vdp_copier(&cmd);
   2EF4 21r6Cs41           8598 	ld	hl,#_cmd
   2EF7 E5                 8599 	push	hl
   2EF8 CDr00s00           8600 	call	_vdp_copier
   2EFB F1                 8601 	pop	af
                           8602 ;demo.c:1384: cmd.size_x = 108;
   2EFC 21r74s41           8603 	ld	hl, #_cmd + 8
   2EFF 36 6C              8604 	ld	(hl),#0x6C
   2F01 23                 8605 	inc	hl
   2F02 36 00              8606 	ld	(hl),#0x00
                           8607 ;demo.c:1385: cmd.size_y = 60;
   2F04 21r76s41           8608 	ld	hl, #_cmd + 10
   2F07 36 3C              8609 	ld	(hl),#0x3C
   2F09 23                 8610 	inc	hl
   2F0A 36 00              8611 	ld	(hl),#0x00
                           8612 ;demo.c:1386: cmd.data = 0;
                           8613 ;demo.c:1387: cmd.argument = 0x00;
   2F0C 3E 00              8614 	ld	a,#0x00
   2F0E 32r78s41           8615 	ld	(#_cmd + 12),a
   2F11 32r79s41           8616 	ld	(#_cmd + 13),a
                           8617 ;demo.c:1388: cmd.command = 0xd0; 
   2F14 01r7As41           8618 	ld	bc,#_cmd + 14
   2F17 3E D0              8619 	ld	a,#0xD0
   2F19 02                 8620 	ld	(bc),a
                           8621 ;demo.c:1389: cmd.source_x = 75;
   2F1A 21r6Cs41           8622 	ld	hl,#_cmd
   2F1D 36 4B              8623 	ld	(hl),#0x4B
   2F1F 23                 8624 	inc	hl
   2F20 36 00              8625 	ld	(hl),#0x00
                           8626 ;demo.c:1390: cmd.source_y = 256+110;
   2F22 21r6Es41           8627 	ld	hl, #_cmd + 2
   2F25 36 6E              8628 	ld	(hl),#0x6E
   2F27 23                 8629 	inc	hl
   2F28 36 01              8630 	ld	(hl),#0x01
                           8631 ;demo.c:1391: cmd.dest_x = 75;
   2F2A 21r70s41           8632 	ld	hl, #_cmd + 4
   2F2D 36 4B              8633 	ld	(hl),#0x4B
   2F2F 23                 8634 	inc	hl
   2F30 36 00              8635 	ld	(hl),#0x00
                           8636 ;demo.c:1392: cmd.dest_y = 40;
   2F32 21r72s41           8637 	ld	hl, #_cmd + 6
   2F35 36 28              8638 	ld	(hl),#0x28
   2F37 23                 8639 	inc	hl
   2F38 36 00              8640 	ld	(hl),#0x00
                           8641 ;demo.c:1393: vdp_copier(&cmd);
   2F3A 21r6Cs41           8642 	ld	hl,#_cmd
   2F3D E5                 8643 	push	hl
   2F3E CDr00s00           8644 	call	_vdp_copier
   2F41 F1                 8645 	pop	af
                           8646 ;demo.c:1394: cmd.dest_x = 75;
   2F42 21r70s41           8647 	ld	hl, #_cmd + 4
   2F45 36 4B              8648 	ld	(hl),#0x4B
   2F47 23                 8649 	inc	hl
   2F48 36 00              8650 	ld	(hl),#0x00
                           8651 ;demo.c:1395: cmd.dest_y = 100;
   2F4A 21r72s41           8652 	ld	hl, #_cmd + 6
   2F4D 36 64              8653 	ld	(hl),#0x64
   2F4F 23                 8654 	inc	hl
   2F50 36 00              8655 	ld	(hl),#0x00
                           8656 ;demo.c:1396: vdp_copier(&cmd);
   2F52 21r6Cs41           8657 	ld	hl,#_cmd
   2F55 E5                 8658 	push	hl
   2F56 CDr00s00           8659 	call	_vdp_copier
   2F59 F1                 8660 	pop	af
                           8661 ;demo.c:1398: pal_load("DSSLOGO PL5",32,0);
   2F5A 21 00 00           8662 	ld	hl,#0x0000
   2F5D E5                 8663 	push	hl
   2F5E 3E 20              8664 	ld	a,#0x20
   2F60 F5                 8665 	push	af
   2F61 33                 8666 	inc	sp
   2F62 21r4Bs31           8667 	ld	hl,#__str_29
   2F65 E5                 8668 	push	hl
   2F66 CDrA3s07           8669 	call	_pal_load
   2F69 F1                 8670 	pop	af
   2F6A F1                 8671 	pop	af
   2F6B 33                 8672 	inc	sp
                           8673 ;demo.c:1400: scratch_clear();
   2F6C CDr90s07           8674 	call	_scratch_clear
                           8675 ;demo.c:1402: vdp_register(9,130); // 50hz,212
   2F6F 21 09 82           8676 	ld	hl,#0x8209
   2F72 E5                 8677 	push	hl
   2F73 CDr00s00           8678 	call	_vdp_register
   2F76 F1                 8679 	pop	af
                           8680 ;demo.c:1404: install_isr(my_isr);
   2F77 21rECs05           8681 	ld	hl,#_my_isr
   2F7A E5                 8682 	push	hl
   2F7B CDr00s00           8683 	call	_install_isr
   2F7E F1                 8684 	pop	af
                           8685 ;demo.c:1406: while (!quit) {
   2F7F                    8686 00111$:
   2F7F AF                 8687 	xor	a,a
   2F80 DD B6 FF           8688 	or	a,-1 (ix)
   2F83 C2r3Es30           8689 	jp	NZ,00113$
                           8690 ;demo.c:1408: if (vbicount >= scenetimings[timeindex+1]) {
   2F86 21r23s42           8691 	ld	hl,#_timeindex + 0
   2F89 4E                 8692 	ld	c,(hl)
   2F8A 0C                 8693 	inc	c
   2F8B CB 21              8694 	sla	c
   2F8D 3Er33              8695 	ld	a,#<_scenetimings
   2F8F 81                 8696 	add	a,c
   2F90 6F                 8697 	ld	l,a
   2F91 3Es42              8698 	ld	a,#>_scenetimings
   2F93 CE 00              8699 	adc	a,#0x00
   2F95 67                 8700 	ld	h,a
   2F96 4E                 8701 	ld	c,(hl)
   2F97 23                 8702 	inc	hl
   2F98 46                 8703 	ld	b,(hl)
   2F99 3Ar68s41           8704 	ld	a,(#_vbicount+0)
   2F9C 91                 8705 	sub	a,c
   2F9D 3Ar69s41           8706 	ld	a,(#_vbicount+1)
   2FA0 98                 8707 	sbc	a,b
   2FA1 FArCAs2F           8708 	jp	M,00105$
                           8709 ;demo.c:1409: sceneindex++;
   2FA4 FD 21r21s42        8710 	ld	iy,#_sceneindex
   2FA8 FD 34 00           8711 	inc	0 (iy)
   2FAB 20 07              8712 	jr	NZ,00153$
   2FAD FD 21r21s42        8713 	ld	iy,#_sceneindex
   2FB1 FD 34 01           8714 	inc	1 (iy)
   2FB4                    8715 00153$:
                           8716 ;demo.c:1410: timeindex+=2;
   2FB4 21r23s42           8717 	ld	hl,#_timeindex
   2FB7 7E                 8718 	ld	a,(hl)
   2FB8 C6 02              8719 	add	a,#0x02
   2FBA 23                 8720 	inc	hl
   2FBB 2B                 8721 	dec	hl
   2FBC C5                 8722 	push	bc
   2FBD 4F                 8723 	ld	c, a
   2FBE 23                 8724 	inc	hl
   2FBF 7E                 8725 	ld	a, (hl)
   2FC0 47                 8726 	ld	b, a
   2FC1 79                 8727 	ld	a, c
   2FC2 2B                 8728 	dec	hl
   2FC3 77                 8729 	ld	(hl), a
   2FC4 78                 8730 	ld	a, b
   2FC5 C1                 8731 	pop	bc
   2FC6 CE 00              8732 	adc	a,#0x00
   2FC8 23                 8733 	inc	hl
   2FC9 77                 8734 	ld	(hl),a
   2FCA                    8735 00105$:
                           8736 ;demo.c:1413: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   2FCA 21r23s42           8737 	ld	hl,#_timeindex + 0
   2FCD 4E                 8738 	ld	c,(hl)
   2FCE 21r24s42           8739 	ld	hl,#_timeindex + 1
   2FD1 46                 8740 	ld	b,(hl)
   2FD2 CB 21              8741 	sla	c
   2FD4 CB 10              8742 	rl	b
   2FD6 21r33s42           8743 	ld	hl,#_scenetimings
   2FD9 09                 8744 	add	hl,bc
   2FDA 4E                 8745 	ld	c,(hl)
   2FDB 23                 8746 	inc	hl
   2FDC 46                 8747 	ld	b,(hl)
   2FDD 3Ar68s41           8748 	ld	a,(#_vbicount+0)
   2FE0 91                 8749 	sub	a,c
   2FE1 3Ar69s41           8750 	ld	a,(#_vbicount+1)
   2FE4 98                 8751 	sbc	a,b
   2FE5 FAr2As30           8752 	jp	M,00107$
   2FE8 21r23s42           8753 	ld	hl,#_timeindex + 0
   2FEB 4E                 8754 	ld	c,(hl)
   2FEC 0C                 8755 	inc	c
   2FED CB 21              8756 	sla	c
   2FEF 3Er33              8757 	ld	a,#<_scenetimings
   2FF1 81                 8758 	add	a,c
   2FF2 6F                 8759 	ld	l,a
   2FF3 3Es42              8760 	ld	a,#>_scenetimings
   2FF5 CE 00              8761 	adc	a,#0x00
   2FF7 67                 8762 	ld	h,a
   2FF8 4E                 8763 	ld	c,(hl)
   2FF9 23                 8764 	inc	hl
   2FFA 46                 8765 	ld	b,(hl)
   2FFB 3Ar68s41           8766 	ld	a,(#_vbicount+0)
   2FFE 91                 8767 	sub	a,c
   2FFF FD 21r68s41        8768 	ld	iy,#_vbicount
   3003 FD 7E 01           8769 	ld	a,1 (iy)
   3006 98                 8770 	sbc	a,b
   3007 F2r2As30           8771 	jp	P,00107$
                           8772 ;demo.c:1414: waitVB();
   300A 76                 8773 		halt 
                           8774 ;demo.c:1415: scenepointers[sceneindex]();
   300B 21r21s42           8775 	ld	hl,#_sceneindex + 0
   300E 4E                 8776 	ld	c,(hl)
   300F FD 21r21s42        8777 	ld	iy,#_sceneindex
   3013 FD 46 01           8778 	ld	b,1 (iy)
   3016 CB 21              8779 	sla	c
   3018 CB 10              8780 	rl	b
   301A 21r25s42           8781 	ld	hl,#_scenepointers
   301D 09                 8782 	add	hl,bc
   301E 4E                 8783 	ld	c,(hl)
   301F 23                 8784 	inc	hl
   3020 46                 8785 	ld	b,(hl)
   3021 C5                 8786 	push	bc
   3022 21r29s30           8787 	ld	hl,#00158$
   3025 E5                 8788 	push	hl
   3026 69                 8789 	ld	l,c
   3027 60                 8790 	ld	h,b
   3028 E9                 8791 	jp	(hl)
   3029                    8792 00158$:
   3029 C1                 8793 	pop	bc
   302A                    8794 00107$:
                           8795 ;demo.c:1417: if(space())
   302A 21 08 01           8796 	ld	hl,#0x0108
   302D E5                 8797 	push	hl
   302E CDr00s00           8798 	call	_ispressed
   3031 F1                 8799 	pop	af
   3032 AF                 8800 	xor	a,a
   3033 B5                 8801 	or	a,l
   3034 CAr7Fs2F           8802 	jp	Z,00111$
                           8803 ;demo.c:1418: quit=1;
   3037 DD 36 FF 01        8804 	ld	-1 (ix),#0x01
   303B C3r7Fs2F           8805 	jp	00111$
   303E                    8806 00113$:
                           8807 ;demo.c:1421: do_quit();
   303E CDr4Bs2B           8808 	call	_do_quit
   3041 DD F9              8809 	ld	sp,ix
   3043 DD E1              8810 	pop	ix
   3045 C9                 8811 	ret
   3046                    8812 _main_end::
   3046                    8813 __str_15:
   3046 64 65 6D 6F 20 69  8814 	.ascii "demo init"
        6E 69 74
   304F 0D                 8815 	.db 0x0D
   3050 0A                 8816 	.db 0x0A
   3051 0D                 8817 	.db 0x0D
   3052 0A                 8818 	.db 0x0A
   3053 00                 8819 	.db 0x00
   3054                    8820 __str_16:
   3054 6D 75 73 69 63 20  8821 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   3061 00                 8822 	.db 0x00
   3062                    8823 __str_17:
   3062 64 6F 6E 65 2E     8824 	.ascii "done."
   3067 0D                 8825 	.db 0x0D
   3068 0A                 8826 	.db 0x0A
   3069 00                 8827 	.db 0x00
   306A                    8828 __str_18:
   306A 64 65 74 65 63 74  8829 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   307F 0D                 8830 	.db 0x0D
   3080 0A                 8831 	.db 0x0A
   3081 0D                 8832 	.db 0x0D
   3082 0A                 8833 	.db 0x0A
   3083 00                 8834 	.db 0x00
   3084                    8835 __str_19:
   3084 76 64 70 32 20 66  8836 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   309F 0D                 8837 	.db 0x0D
   30A0 0A                 8838 	.db 0x0A
   30A1 0D                 8839 	.db 0x0D
   30A2 0A                 8840 	.db 0x0A
   30A3 00                 8841 	.db 0x00
   30A4                    8842 __str_20:
   30A4 20 76 64 70 31 20  8843 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   30B0 0D                 8844 	.db 0x0D
   30B1 0A                 8845 	.db 0x0A
   30B2 53 6F 72 72 79 2C  8846 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   30E0 20 56 52 41 4D 2E  8847 	.ascii " VRAM."
   30E6 0D                 8848 	.db 0x0D
   30E7 0A                 8849 	.db 0x0A
   30E8 0D                 8850 	.db 0x0D
   30E9 0A                 8851 	.db 0x0A
   30EA 00                 8852 	.db 0x00
   30EB                    8853 __str_21:
   30EB 54 57 49 53 54 45  8854 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   30F6 00                 8855 	.db 0x00
   30F7                    8856 __str_22:
   30F7 4C 46 20 20 20 20  8857 	.ascii "LF      PL5"
        20 20 50 4C 35
   3102 00                 8858 	.db 0x00
   3103                    8859 __str_23:
   3103 42 4F 58 45 53 20  8860 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   310E 00                 8861 	.db 0x00
   310F                    8862 __str_24:
   310F 42 55 4C 42 53 20  8863 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   311A 00                 8864 	.db 0x00
   311B                    8865 __str_25:
   311B 42 55 4C 42 53 20  8866 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   3126 00                 8867 	.db 0x00
   3127                    8868 __str_26:
   3127 54 57 49 53 54 45  8869 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   3132 00                 8870 	.db 0x00
   3133                    8871 __str_27:
   3133 42 4F 58 45 53 20  8872 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   313E 00                 8873 	.db 0x00
   313F                    8874 __str_28:
   313F 44 53 53 4C 4F 47  8875 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   314A 00                 8876 	.db 0x00
   314B                    8877 __str_29:
   314B 44 53 53 4C 4F 47  8878 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   3156 00                 8879 	.db 0x00
                           8880 	.area _CODE
                           8881 	.area _CABS
