                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Fri Mar 23 17:57:55 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _waiter
                             15 	.globl _bigtext
                             16 	.globl _points
                             17 	.globl _logoeffu
                             18 	.globl _abs
                             19 	.globl _tritiles
                             20 	.globl _drawtilescreen_full
                             21 	.globl _drawtilescreen
                             22 	.globl _drawtritile
                             23 	.globl _thewave
                             24 	.globl _boxes
                             25 	.globl _drawbox
                             26 	.globl _animplay
                             27 	.globl _bulbs
                             28 	.globl _twister
                             29 	.globl _font
                             30 	.globl _drawsine
                             31 	.globl _drawstr2x
                             32 	.globl _drawstrslow
                             33 	.globl _drawstr
                             34 	.globl _do_letter_tall
                             35 	.globl _do_letter
                             36 	.globl _do_2xletter
                             37 	.globl _raster_effu
                             38 	.globl _do_blocks
                             39 	.globl _do_ymmm
                             40 	.globl _fadein
                             41 	.globl _pck_load
                             42 	.globl _raw_load
                             43 	.globl _pause
                             44 	.globl _pal_load
                             45 	.globl _scratch_clear
                             46 	.globl _ge5_load
                             47 	.globl _color_isr
                             48 	.globl _my_isr
                             49 	.globl _isNthBitSet
                             50 	.globl _timeindex
                             51 	.globl _sceneindex
                             52 	.globl _bigtextp
                             53 	.globl _greetindex
                             54 	.globl _pointframe
                             55 	.globl _initpoints
                             56 	.globl _onceclear
                             57 	.globl _powa
                             58 	.globl _powatick
                             59 	.globl _triframes
                             60 	.globl _tripaltick2
                             61 	.globl _tripaltick
                             62 	.globl _tripal
                             63 	.globl _tiletick
                             64 	.globl _tiley
                             65 	.globl _tilex
                             66 	.globl _tilei
                             67 	.globl _tri_inited
                             68 	.globl _ffa
                             69 	.globl _buf
                             70 	.globl _initwave
                             71 	.globl _prevbox_of
                             72 	.globl _boxes_of
                             73 	.globl _pbt
                             74 	.globl _pbx
                             75 	.globl _bonc
                             76 	.globl _bo
                             77 	.globl _bt
                             78 	.globl _by
                             79 	.globl _bx
                             80 	.globl _boxi
                             81 	.globl _boxes_y
                             82 	.globl _boxes_x
                             83 	.globl _prevy
                             84 	.globl _prevx
                             85 	.globl _buffer
                             86 	.globl _boxes_init
                             87 	.globl _anim_init
                             88 	.globl _sy
                             89 	.globl _enderdir
                             90 	.globl _ender
                             91 	.globl _ff2
                             92 	.globl _ff1
                             93 	.globl _bulbflipper
                             94 	.globl _twinited
                             95 	.globl _ff
                             96 	.globl _slowend
                             97 	.globl _ltrpointer
                             98 	.globl _ly
                             99 	.globl _lx
                            100 	.globl _linenum
                            101 	.globl _flof
                            102 	.globl _btab
                            103 	.globl _bty
                            104 	.globl _btx
                            105 	.globl _bsy
                            106 	.globl _bsx
                            107 	.globl _block_init
                            108 	.globl _cc
                            109 	.globl _yofff
                            110 	.globl _scenetimings
                            111 	.globl _scenepointers
                            112 	.globl _cmd
                            113 	.globl _tick
                            114 	.globl _vbicount
                            115 	.globl _boxes_palette
                            116 	.globl _tf_palette
                            117 	.globl _twister_palette
                            118 	.globl _block_palette
                            119 	.globl _bulbs_palette
                            120 	.globl _cur_palette
                            121 	.globl _scratch
                            122 	.globl _packbuffer
                            123 	.globl _tri_lookup_y
                            124 	.globl _eighttimes
                            125 	.globl _twelvetimes
                            126 	.globl _tri_lookup_x
                            127 	.globl _sintab
                            128 	.globl _font_w
                            129 	.globl _font_y
                            130 	.globl _font_x
                            131 	.globl _tri_inva4
                            132 	.globl _tri_inva3
                            133 	.globl _tri_inva2
                            134 	.globl _tri_inva1
                            135 	.globl _tri_side2
                            136 	.globl _tri_side1
                            137 	.globl _tri_dia
                            138 	.globl _tri_up
                            139 	.globl _tri_center
                            140 	.globl _sintabx
                            141 ;--------------------------------------------------------
                            142 ; special function registers
                            143 ;--------------------------------------------------------
                            144 ;--------------------------------------------------------
                            145 ;  ram data
                            146 ;--------------------------------------------------------
                            147 	.area _DATA
   0000                     148 _sintab::
   0000                     149 	.ds 256
   0100                     150 _tri_lookup_x::
   0100                     151 	.ds 32
   0120                     152 _twelvetimes::
   0120                     153 	.ds 52
   0154                     154 _eighttimes::
   0154                     155 	.ds 52
   0188                     156 _tri_lookup_y::
   0188                     157 	.ds 64
   01C8                     158 _packbuffer::
   01C8                     159 	.ds 5000
   1550                     160 _scratch::
   1550                     161 	.ds 128
   15D0                     162 _cur_palette::
   15D0                     163 	.ds 32
   15F0                     164 _bulbs_palette::
   15F0                     165 	.ds 32
   1610                     166 _block_palette::
   1610                     167 	.ds 32
   1630                     168 _twister_palette::
   1630                     169 	.ds 32
   1650                     170 _tf_palette::
   1650                     171 	.ds 32
   1670                     172 _boxes_palette::
   1670                     173 	.ds 32
   1690                     174 _vbicount::
   1690                     175 	.ds 2
   1692                     176 _tick::
   1692                     177 	.ds 2
   1694                     178 _cmd::
   1694                     179 	.ds 15
   16A3                     180 _scenepointers::
   16A3                     181 	.ds 20
   16B7                     182 _scenetimings::
   16B7                     183 	.ds 40
   16DF                     184 _isNthBitSet_mask_1_1:
   16DF                     185 	.ds 8
   16E7                     186 _yofff::
   16E7                     187 	.ds 1
   16E8                     188 _cc::
   16E8                     189 	.ds 1
   16E9                     190 _flipper:
   16E9                     191 	.ds 2
   16EB                     192 _ymmmf:
   16EB                     193 	.ds 2
   16ED                     194 _block_init::
   16ED                     195 	.ds 1
   16EE                     196 _bsx::
   16EE                     197 	.ds 2
   16F0                     198 _bsy::
   16F0                     199 	.ds 2
   16F2                     200 _btx::
   16F2                     201 	.ds 2
   16F4                     202 _bty::
   16F4                     203 	.ds 2
   16F6                     204 _btab::
   16F6                     205 	.ds 32
   1716                     206 _flof::
   1716                     207 	.ds 2
   1718                     208 _linenum::
   1718                     209 	.ds 2
   171A                     210 _lx::
   171A                     211 	.ds 1
   171B                     212 _ly::
   171B                     213 	.ds 1
   171C                     214 _ltrpointer::
   171C                     215 	.ds 2
   171E                     216 _slowend::
   171E                     217 	.ds 2
   1720                     218 _ff::
   1720                     219 	.ds 2
   1722                     220 _twinited::
   1722                     221 	.ds 2
   1724                     222 _bulbflipper::
   1724                     223 	.ds 2
   1726                     224 _ff1::
   1726                     225 	.ds 2
   1728                     226 _ff2::
   1728                     227 	.ds 2
   172A                     228 _ender::
   172A                     229 	.ds 2
   172C                     230 _enderdir::
   172C                     231 	.ds 2
   172E                     232 _sy::
   172E                     233 	.ds 2
   1730                     234 _xo:
   1730                     235 	.ds 2
   1732                     236 _yo:
   1732                     237 	.ds 2
   1734                     238 _po:
   1734                     239 	.ds 2
   1736                     240 _frames:
   1736                     241 	.ds 2
   1738                     242 _anim_init::
   1738                     243 	.ds 2
   173A                     244 _boxes_init::
   173A                     245 	.ds 1
   173B                     246 _buffer::
   173B                     247 	.ds 2
   173D                     248 _prevx::
   173D                     249 	.ds 2
   173F                     250 _prevy::
   173F                     251 	.ds 2
   1741                     252 _boxes_x::
   1741                     253 	.ds 5
   1746                     254 _boxes_y::
   1746                     255 	.ds 10
   1750                     256 _boxi::
   1750                     257 	.ds 1
   1751                     258 _bx::
   1751                     259 	.ds 2
   1753                     260 _by::
   1753                     261 	.ds 2
   1755                     262 _bt::
   1755                     263 	.ds 2
   1757                     264 _bo::
   1757                     265 	.ds 2
   1759                     266 _bonc::
   1759                     267 	.ds 2
   175B                     268 _pbx::
   175B                     269 	.ds 2
   175D                     270 _pbt::
   175D                     271 	.ds 2
   175F                     272 _boxes_of::
   175F                     273 	.ds 10
   1769                     274 _prevbox_of::
   1769                     275 	.ds 1
   176A                     276 _initwave::
   176A                     277 	.ds 1
   176B                     278 _buf::
   176B                     279 	.ds 2
   176D                     280 _ffa::
   176D                     281 	.ds 2
   176F                     282 _tri_inited::
   176F                     283 	.ds 1
   1770                     284 _tilei::
   1770                     285 	.ds 2
   1772                     286 _tilex::
   1772                     287 	.ds 2
   1774                     288 _tiley::
   1774                     289 	.ds 2
   1776                     290 _tiletick::
   1776                     291 	.ds 1
   1777                     292 _tripal::
   1777                     293 	.ds 9
   1780                     294 _tripaltick::
   1780                     295 	.ds 1
   1781                     296 _tripaltick2::
   1781                     297 	.ds 1
   1782                     298 _triframes::
   1782                     299 	.ds 2
   1784                     300 _powatick::
   1784                     301 	.ds 2
   1786                     302 _powa::
   1786                     303 	.ds 2
   1788                     304 _onceclear::
   1788                     305 	.ds 1
   1789                     306 _initpoints::
   1789                     307 	.ds 1
   178A                     308 _pointframe::
   178A                     309 	.ds 2
   178C                     310 _greetindex::
   178C                     311 	.ds 2
   178E                     312 _bigtextp::
   178E                     313 	.ds 2
   1790                     314 _sceneindex::
   1790                     315 	.ds 2
   1792                     316 _timeindex::
   1792                     317 	.ds 2
                            318 ;--------------------------------------------------------
                            319 ; overlayable items in  ram 
                            320 ;--------------------------------------------------------
                            321 	.area _OVERLAY
                            322 ;--------------------------------------------------------
                            323 ; external initialized ram data
                            324 ;--------------------------------------------------------
                            325 ;--------------------------------------------------------
                            326 ; global & static initialisations
                            327 ;--------------------------------------------------------
                            328 	.area _HOME
                            329 	.area _GSINIT
                            330 	.area _GSFINAL
                            331 	.area _GSINIT
                            332 ;demo.c:228: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21rDFs16            333 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            334 	call	__initrleblock
   0006 08                  335 	.db	8
   0007 01 02 04 08 10 20   336 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  337 	.db	0
                            338 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            339 	ld	hl,#_sintab
   0013 CDr00s00            340 	call	__initrleblock
   0016 3B                  341 	.db	59
   0017 00 03 06 09 0C 0F   342 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   343 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   344 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   345 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   346 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   347 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   348 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            349 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               350 	.db	#-5,#0x7E
   0054 01                  351 	.db	1
   0055 7F                  352 	.db	0x7F
   0056 FB 7E               353 	.db	#-5,#0x7E
   0058 75                  354 	.db	117
   0059 7D 7D 7C 7B 7B 7A   355 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   356 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   357 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   358 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   359 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   360 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   361 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   362 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   363 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   364 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   365 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   366 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   367 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   368 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      369 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               370 	.db	#-5,#0x82
   00D0 01                  371 	.db	1
   00D1 81                  372 	.db	0x81
   00D2 FB 82               373 	.db	#-5,#0x82
   00D4 3A                  374 	.db	58
   00D5 83 83 84 85 85 86   375 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   376 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   377 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   378 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   379 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   380 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   381 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               382 	.db	0xFA, 0xFD
   010F 00                  383 	.db	0
                            384 ;demo.c:177: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            385 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            386 	call	__initrleblock
   0116 E0 00               387 	.db	#-32,#0x00
   0118 00                  388 	.db	0
                            389 ;demo.c:178: int twelvetimes[26] = { 0 };
   0119 21r20s01            390 	ld	hl,#_twelvetimes
   011C CDr00s00            391 	call	__initrleblock
   011F CC 00               392 	.db	#-52,#0x00
   0121 00                  393 	.db	0
                            394 ;demo.c:179: int eighttimes[26] = { 0 };
   0122 21r54s01            395 	ld	hl,#_eighttimes
   0125 CDr00s00            396 	call	__initrleblock
   0128 CC 00               397 	.db	#-52,#0x00
   012A 00                  398 	.db	0
                            399 ;demo.c:181: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            400 	ld	hl,#_tri_lookup_y
   012E CDr00s00            401 	call	__initrleblock
   0131 C0 00               402 	.db	#-64,#0x00
   0133 00                  403 	.db	0
                            404 ;demo.c:183: uint8_t packbuffer[5000] = {0};
   0134 21rC8s01            405 	ld	hl,#_packbuffer
   0137 CDr00s00            406 	call	__initrleblock
   013A 81 00               407 	.db	#-127,#0x00
   013C 81 00               408 	.db	#-127,#0x00
   013E 81 00               409 	.db	#-127,#0x00
   0140 81 00               410 	.db	#-127,#0x00
   0142 81 00               411 	.db	#-127,#0x00
   0144 81 00               412 	.db	#-127,#0x00
   0146 81 00               413 	.db	#-127,#0x00
   0148 81 00               414 	.db	#-127,#0x00
   014A 81 00               415 	.db	#-127,#0x00
   014C 81 00               416 	.db	#-127,#0x00
   014E 81 00               417 	.db	#-127,#0x00
   0150 81 00               418 	.db	#-127,#0x00
   0152 81 00               419 	.db	#-127,#0x00
   0154 81 00               420 	.db	#-127,#0x00
   0156 81 00               421 	.db	#-127,#0x00
   0158 81 00               422 	.db	#-127,#0x00
   015A 81 00               423 	.db	#-127,#0x00
   015C 81 00               424 	.db	#-127,#0x00
   015E 81 00               425 	.db	#-127,#0x00
   0160 81 00               426 	.db	#-127,#0x00
   0162 81 00               427 	.db	#-127,#0x00
   0164 81 00               428 	.db	#-127,#0x00
   0166 81 00               429 	.db	#-127,#0x00
   0168 81 00               430 	.db	#-127,#0x00
   016A 81 00               431 	.db	#-127,#0x00
   016C 81 00               432 	.db	#-127,#0x00
   016E 81 00               433 	.db	#-127,#0x00
   0170 81 00               434 	.db	#-127,#0x00
   0172 81 00               435 	.db	#-127,#0x00
   0174 81 00               436 	.db	#-127,#0x00
   0176 81 00               437 	.db	#-127,#0x00
   0178 81 00               438 	.db	#-127,#0x00
   017A 81 00               439 	.db	#-127,#0x00
   017C 81 00               440 	.db	#-127,#0x00
   017E 81 00               441 	.db	#-127,#0x00
   0180 81 00               442 	.db	#-127,#0x00
   0182 81 00               443 	.db	#-127,#0x00
   0184 81 00               444 	.db	#-127,#0x00
   0186 81 00               445 	.db	#-127,#0x00
   0188 D1 00               446 	.db	#-47,#0x00
   018A 00                  447 	.db	0
                            448 ;demo.c:193: volatile int vbicount=0;
   018B FD 21r90s16         449 	ld	iy,#_vbicount
   018F FD 36 00 00         450 	ld	0 (iy),#0x00
   0193 FD 21r90s16         451 	ld	iy,#_vbicount
   0197 FD 36 01 00         452 	ld	1 (iy),#0x00
                            453 ;demo.c:194: volatile int tick=0;
   019B FD 21r92s16         454 	ld	iy,#_tick
   019F FD 36 00 00         455 	ld	0 (iy),#0x00
   01A3 FD 21r92s16         456 	ld	iy,#_tick
   01A7 FD 36 01 00         457 	ld	1 (iy),#0x00
                            458 ;demo.c:199: void (*scenepointers[10])() = {
   01AB 21rA3s16            459 	ld	hl,#_scenepointers
   01AE 36rEF               460 	ld	(hl),#<_waiter
   01B0 23                  461 	inc	hl
   01B1 36s37               462 	ld	(hl),#>_waiter
   01B3 21rA5s16            463 	ld	hl, #_scenepointers + 2
   01B6 36rEB               464 	ld	(hl),#<_logoeffu
   01B8 23                  465 	inc	hl
   01B9 36s31               466 	ld	(hl),#>_logoeffu
   01BB 01rA7s16            467 	ld	bc,#_scenepointers + 4
   01BE 69                  468 	ld	l,c
   01BF 60                  469 	ld	h,b
   01C0 36r72               470 	ld	(hl),#<_bulbs
   01C2 23                  471 	inc	hl
   01C3 36s19               472 	ld	(hl),#>_bulbs
   01C5 21rA9s16            473 	ld	hl, #_scenepointers + 6
   01C8 36rD5               474 	ld	(hl),#<_twister
   01CA 23                  475 	inc	hl
   01CB 36s17               476 	ld	(hl),#>_twister
   01CD 01rABs16            477 	ld	bc,#_scenepointers + 8
   01D0 69                  478 	ld	l,c
   01D1 60                  479 	ld	h,b
   01D2 36r25               480 	ld	(hl),#<_boxes
   01D4 23                  481 	inc	hl
   01D5 36s1F               482 	ld	(hl),#>_boxes
   01D7 21rADs16            483 	ld	hl, #_scenepointers + 10
   01DA 36r7D               484 	ld	(hl),#<_thewave
   01DC 23                  485 	inc	hl
   01DD 36s23               486 	ld	(hl),#>_thewave
   01DF 21rAFs16            487 	ld	hl, #_scenepointers + 12
   01E2 36r9E               488 	ld	(hl),#<_tritiles
   01E4 23                  489 	inc	hl
   01E5 36s2B               490 	ld	(hl),#>_tritiles
   01E7 21rB1s16            491 	ld	hl, #_scenepointers + 14
   01EA 36r9A               492 	ld	(hl),#<_points
   01EC 23                  493 	inc	hl
   01ED 36s33               494 	ld	(hl),#>_points
   01EF 01rB3s16            495 	ld	bc,#_scenepointers + 16
   01F2 69                  496 	ld	l,c
   01F3 60                  497 	ld	h,b
   01F4 36r8C               498 	ld	(hl),#<_bigtext
   01F6 23                  499 	inc	hl
   01F7 36s36               500 	ld	(hl),#>_bigtext
   01F9 01rB5s16            501 	ld	bc,#_scenepointers + 18
   01FC 69                  502 	ld	l,c
   01FD 60                  503 	ld	h,b
   01FE 36r9E               504 	ld	(hl),#<_tritiles
   0200 23                  505 	inc	hl
   0201 36s2B               506 	ld	(hl),#>_tritiles
                            507 ;demo.c:212: int scenetimings[20] = {
   0203 21rB7s16            508 	ld	hl,#_scenetimings
   0206 CDr00s00            509 	call	__initrleblock
   0209 28                  510 	.db	40
   020A 00 00 AA 00 AA 00   511 	.db	0x00, 0x00, 0xAA, 0x00, 0xAA, 0x00, 0x5E, 0x01
        5E 01
   0212 EE 02 14 05 14 05   512 	.db	0xEE, 0x02, 0x14, 0x05, 0x14, 0x05, 0xFC, 0x08
        FC 08
   021A FC 08 10 0E 10 0E   513 	.db	0xFC, 0x08, 0x10, 0x0E, 0x10, 0x0E, 0x04, 0x10
        04 10
   0222 04 10 AE 15 AE 15   514 	.db	0x04, 0x10, 0xAE, 0x15, 0xAE, 0x15, 0xD4, 0x17
        D4 17
   022A D4 17 90 1A 90 1A   515 	.db	0xD4, 0x17, 0x90, 0x1A, 0x90, 0x1A, 0x40, 0x1F
        40 1F
   0232 00                  516 	.db	0
                            517 ;demo.c:423: uint8_t yofff = 0;
   0233 FD 21rE7s16         518 	ld	iy,#_yofff
   0237 FD 36 00 00         519 	ld	0 (iy),#0x00
                            520 ;demo.c:424: uint8_t cc = 0;
   023B FD 21rE8s16         521 	ld	iy,#_cc
   023F FD 36 00 00         522 	ld	0 (iy),#0x00
                            523 ;demo.c:425: static int flipper = 0;
   0243 FD 21rE9s16         524 	ld	iy,#_flipper
   0247 FD 36 00 00         525 	ld	0 (iy),#0x00
   024B FD 21rE9s16         526 	ld	iy,#_flipper
   024F FD 36 01 00         527 	ld	1 (iy),#0x00
                            528 ;demo.c:426: static int ymmmf = 0;
   0253 FD 21rEBs16         529 	ld	iy,#_ymmmf
   0257 FD 36 00 00         530 	ld	0 (iy),#0x00
   025B FD 21rEBs16         531 	ld	iy,#_ymmmf
   025F FD 36 01 00         532 	ld	1 (iy),#0x00
                            533 ;demo.c:457: char block_init = 0;
   0263 FD 21rEDs16         534 	ld	iy,#_block_init
   0267 FD 36 00 00         535 	ld	0 (iy),#0x00
                            536 ;demo.c:459: int bsx = 0;
   026B FD 21rEEs16         537 	ld	iy,#_bsx
   026F FD 36 00 00         538 	ld	0 (iy),#0x00
   0273 FD 21rEEs16         539 	ld	iy,#_bsx
   0277 FD 36 01 00         540 	ld	1 (iy),#0x00
                            541 ;demo.c:460: int bsy = 0;
   027B FD 21rF0s16         542 	ld	iy,#_bsy
   027F FD 36 00 00         543 	ld	0 (iy),#0x00
   0283 FD 21rF0s16         544 	ld	iy,#_bsy
   0287 FD 36 01 00         545 	ld	1 (iy),#0x00
                            546 ;demo.c:461: int btx = 0;
   028B FD 21rF2s16         547 	ld	iy,#_btx
   028F FD 36 00 00         548 	ld	0 (iy),#0x00
   0293 FD 21rF2s16         549 	ld	iy,#_btx
   0297 FD 36 01 00         550 	ld	1 (iy),#0x00
                            551 ;demo.c:462: int bty = 0;
   029B FD 21rF4s16         552 	ld	iy,#_bty
   029F FD 36 00 00         553 	ld	0 (iy),#0x00
   02A3 FD 21rF4s16         554 	ld	iy,#_bty
   02A7 FD 36 01 00         555 	ld	1 (iy),#0x00
                            556 ;demo.c:464: int btab[16] = {0};
   02AB 21rF6s16            557 	ld	hl,#_btab
   02AE CDr00s00            558 	call	__initrleblock
   02B1 E0 00               559 	.db	#-32,#0x00
   02B3 00                  560 	.db	0
                            561 ;demo.c:466: int flof = 0;
   02B4 FD 21r16s17         562 	ld	iy,#_flof
   02B8 FD 36 00 00         563 	ld	0 (iy),#0x00
   02BC FD 21r16s17         564 	ld	iy,#_flof
   02C0 FD 36 01 00         565 	ld	1 (iy),#0x00
                            566 ;demo.c:515: int linenum = 0;
   02C4 FD 21r18s17         567 	ld	iy,#_linenum
   02C8 FD 36 00 00         568 	ld	0 (iy),#0x00
   02CC FD 21r18s17         569 	ld	iy,#_linenum
   02D0 FD 36 01 00         570 	ld	1 (iy),#0x00
                            571 ;demo.c:573: uint8_t lx = 0;
   02D4 FD 21r1As17         572 	ld	iy,#_lx
   02D8 FD 36 00 00         573 	ld	0 (iy),#0x00
                            574 ;demo.c:574: uint8_t ly = 0;
   02DC FD 21r1Bs17         575 	ld	iy,#_ly
   02E0 FD 36 00 00         576 	ld	0 (iy),#0x00
                            577 ;demo.c:659: int ltrpointer = 0;
   02E4 FD 21r1Cs17         578 	ld	iy,#_ltrpointer
   02E8 FD 36 00 00         579 	ld	0 (iy),#0x00
   02EC FD 21r1Cs17         580 	ld	iy,#_ltrpointer
   02F0 FD 36 01 00         581 	ld	1 (iy),#0x00
                            582 ;demo.c:660: int slowend = 128;
   02F4 FD 21r1Es17         583 	ld	iy,#_slowend
   02F8 FD 36 00 80         584 	ld	0 (iy),#0x80
   02FC FD 21r1Es17         585 	ld	iy,#_slowend
   0300 FD 36 01 00         586 	ld	1 (iy),#0x00
                            587 ;demo.c:712: int ff = 0;
   0304 FD 21r20s17         588 	ld	iy,#_ff
   0308 FD 36 00 00         589 	ld	0 (iy),#0x00
   030C FD 21r20s17         590 	ld	iy,#_ff
   0310 FD 36 01 00         591 	ld	1 (iy),#0x00
                            592 ;demo.c:713: int twinited = 0;
   0314 FD 21r22s17         593 	ld	iy,#_twinited
   0318 FD 36 00 00         594 	ld	0 (iy),#0x00
   031C FD 21r22s17         595 	ld	iy,#_twinited
   0320 FD 36 01 00         596 	ld	1 (iy),#0x00
                            597 ;demo.c:765: int bulbflipper = 1;
   0324 FD 21r24s17         598 	ld	iy,#_bulbflipper
   0328 FD 36 00 01         599 	ld	0 (iy),#0x01
   032C FD 21r24s17         600 	ld	iy,#_bulbflipper
   0330 FD 36 01 00         601 	ld	1 (iy),#0x00
                            602 ;demo.c:767: int ff1,ff2 = 0;
   0334 FD 21r28s17         603 	ld	iy,#_ff2
   0338 FD 36 00 00         604 	ld	0 (iy),#0x00
   033C FD 21r28s17         605 	ld	iy,#_ff2
   0340 FD 36 01 00         606 	ld	1 (iy),#0x00
                            607 ;demo.c:768: int ender = 212;
   0344 FD 21r2As17         608 	ld	iy,#_ender
   0348 FD 36 00 D4         609 	ld	0 (iy),#0xD4
   034C FD 21r2As17         610 	ld	iy,#_ender
   0350 FD 36 01 00         611 	ld	1 (iy),#0x00
                            612 ;demo.c:769: int enderdir = -1;
   0354 FD 21r2Cs17         613 	ld	iy,#_enderdir
   0358 FD 36 00 FF         614 	ld	0 (iy),#0xFF
   035C FD 21r2Cs17         615 	ld	iy,#_enderdir
   0360 FD 36 01 FF         616 	ld	1 (iy),#0xFF
                            617 ;demo.c:770: int sy = 16;
   0364 FD 21r2Es17         618 	ld	iy,#_sy
   0368 FD 36 00 10         619 	ld	0 (iy),#0x10
   036C FD 21r2Es17         620 	ld	iy,#_sy
   0370 FD 36 01 00         621 	ld	1 (iy),#0x00
                            622 ;demo.c:826: static int xo = 0;
   0374 FD 21r30s17         623 	ld	iy,#_xo
   0378 FD 36 00 00         624 	ld	0 (iy),#0x00
   037C FD 21r30s17         625 	ld	iy,#_xo
   0380 FD 36 01 00         626 	ld	1 (iy),#0x00
                            627 ;demo.c:827: static int yo = 0;
   0384 FD 21r32s17         628 	ld	iy,#_yo
   0388 FD 36 00 00         629 	ld	0 (iy),#0x00
   038C FD 21r32s17         630 	ld	iy,#_yo
   0390 FD 36 01 00         631 	ld	1 (iy),#0x00
                            632 ;demo.c:828: static int po = 0;
   0394 FD 21r34s17         633 	ld	iy,#_po
   0398 FD 36 00 00         634 	ld	0 (iy),#0x00
   039C FD 21r34s17         635 	ld	iy,#_po
   03A0 FD 36 01 00         636 	ld	1 (iy),#0x00
                            637 ;demo.c:829: static int frames = 0;
   03A4 FD 21r36s17         638 	ld	iy,#_frames
   03A8 FD 36 00 00         639 	ld	0 (iy),#0x00
   03AC FD 21r36s17         640 	ld	iy,#_frames
   03B0 FD 36 01 00         641 	ld	1 (iy),#0x00
                            642 ;demo.c:831: int anim_init = 0;
   03B4 FD 21r38s17         643 	ld	iy,#_anim_init
   03B8 FD 36 00 00         644 	ld	0 (iy),#0x00
   03BC FD 21r38s17         645 	ld	iy,#_anim_init
   03C0 FD 36 01 00         646 	ld	1 (iy),#0x00
                            647 ;demo.c:931: uint8_t boxes_init = 0;
   03C4 FD 21r3As17         648 	ld	iy,#_boxes_init
   03C8 FD 36 00 00         649 	ld	0 (iy),#0x00
                            650 ;demo.c:932: int buffer = 1;
   03CC FD 21r3Bs17         651 	ld	iy,#_buffer
   03D0 FD 36 00 01         652 	ld	0 (iy),#0x01
   03D4 FD 21r3Bs17         653 	ld	iy,#_buffer
   03D8 FD 36 01 00         654 	ld	1 (iy),#0x00
                            655 ;demo.c:933: int prevx = -1;
   03DC FD 21r3Ds17         656 	ld	iy,#_prevx
   03E0 FD 36 00 FF         657 	ld	0 (iy),#0xFF
   03E4 FD 21r3Ds17         658 	ld	iy,#_prevx
   03E8 FD 36 01 FF         659 	ld	1 (iy),#0xFF
                            660 ;demo.c:935: uint8_t boxes_x[5] = {0,36,0,36,0};
   03EC 21r41s17            661 	ld	hl,#_boxes_x
   03EF CDr00s00            662 	call	__initrleblock
   03F2 05                  663 	.db	5
   03F3 00 24 00 24 00      664 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   03F8 00                  665 	.db	0
                            666 ;demo.c:936: int boxes_y[5] = {768,768,768+36,768+36,0};
   03F9 21r46s17            667 	ld	hl,#_boxes_y
   03FC CDr00s00            668 	call	__initrleblock
   03FF 0A                  669 	.db	10
   0400 00 03 00 03 24 03   670 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   0408 00 00               671 	.db	0x00, 0x00
   040A 00                  672 	.db	0
                            673 ;demo.c:937: uint8_t boxi = 0;
   040B FD 21r50s17         674 	ld	iy,#_boxi
   040F FD 36 00 00         675 	ld	0 (iy),#0x00
                            676 ;demo.c:938: int bx = 220;
   0413 FD 21r51s17         677 	ld	iy,#_bx
   0417 FD 36 00 DC         678 	ld	0 (iy),#0xDC
   041B FD 21r51s17         679 	ld	iy,#_bx
   041F FD 36 01 00         680 	ld	1 (iy),#0x00
                            681 ;demo.c:939: int by = 84;
   0423 FD 21r53s17         682 	ld	iy,#_by
   0427 FD 36 00 54         683 	ld	0 (iy),#0x54
   042B FD 21r53s17         684 	ld	iy,#_by
   042F FD 36 01 00         685 	ld	1 (iy),#0x00
                            686 ;demo.c:957: int bt = 0;
   0433 FD 21r55s17         687 	ld	iy,#_bt
   0437 FD 36 00 00         688 	ld	0 (iy),#0x00
   043B FD 21r55s17         689 	ld	iy,#_bt
   043F FD 36 01 00         690 	ld	1 (iy),#0x00
                            691 ;demo.c:958: int bo = 0;
   0443 FD 21r57s17         692 	ld	iy,#_bo
   0447 FD 36 00 00         693 	ld	0 (iy),#0x00
   044B FD 21r57s17         694 	ld	iy,#_bo
   044F FD 36 01 00         695 	ld	1 (iy),#0x00
                            696 ;demo.c:960: int bonc = 0;
   0453 FD 21r59s17         697 	ld	iy,#_bonc
   0457 FD 36 00 00         698 	ld	0 (iy),#0x00
   045B FD 21r59s17         699 	ld	iy,#_bonc
   045F FD 36 01 00         700 	ld	1 (iy),#0x00
                            701 ;demo.c:961: int pbx = 0;
   0463 FD 21r5Bs17         702 	ld	iy,#_pbx
   0467 FD 36 00 00         703 	ld	0 (iy),#0x00
   046B FD 21r5Bs17         704 	ld	iy,#_pbx
   046F FD 36 01 00         705 	ld	1 (iy),#0x00
                            706 ;demo.c:962: int pbt = 0;
   0473 FD 21r5Ds17         707 	ld	iy,#_pbt
   0477 FD 36 00 00         708 	ld	0 (iy),#0x00
   047B FD 21r5Ds17         709 	ld	iy,#_pbt
   047F FD 36 01 00         710 	ld	1 (iy),#0x00
                            711 ;demo.c:964: int boxes_of[5] = {0,0,6,0,0};
   0483 21r5Fs17            712 	ld	hl,#_boxes_of
   0486 CDr00s00            713 	call	__initrleblock
   0489 05                  714 	.db	5
   048A 00 00 00 00 06      715 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   048F FB 00               716 	.db	#-5,#0x00
   0491 00                  717 	.db	0
                            718 ;demo.c:965: uint8_t prevbox_of = 0;
   0492 FD 21r69s17         719 	ld	iy,#_prevbox_of
   0496 FD 36 00 00         720 	ld	0 (iy),#0x00
                            721 ;demo.c:1080: uint8_t initwave = 0;
   049A FD 21r6As17         722 	ld	iy,#_initwave
   049E FD 36 00 00         723 	ld	0 (iy),#0x00
                            724 ;demo.c:1081: int buf = -1;
   04A2 FD 21r6Bs17         725 	ld	iy,#_buf
   04A6 FD 36 00 FF         726 	ld	0 (iy),#0xFF
   04AA FD 21r6Bs17         727 	ld	iy,#_buf
   04AE FD 36 01 FF         728 	ld	1 (iy),#0xFF
                            729 ;demo.c:1082: int ffa = 0;
   04B2 FD 21r6Ds17         730 	ld	iy,#_ffa
   04B6 FD 36 00 00         731 	ld	0 (iy),#0x00
   04BA FD 21r6Ds17         732 	ld	iy,#_ffa
   04BE FD 36 01 00         733 	ld	1 (iy),#0x00
                            734 ;demo.c:1204: uint8_t tri_inited = 0;
   04C2 FD 21r6Fs17         735 	ld	iy,#_tri_inited
   04C6 FD 36 00 00         736 	ld	0 (iy),#0x00
                            737 ;demo.c:1219: int tilei = 0;
   04CA FD 21r70s17         738 	ld	iy,#_tilei
   04CE FD 36 00 00         739 	ld	0 (iy),#0x00
   04D2 FD 21r70s17         740 	ld	iy,#_tilei
   04D6 FD 36 01 00         741 	ld	1 (iy),#0x00
                            742 ;demo.c:1220: int tilex = 0;
   04DA FD 21r72s17         743 	ld	iy,#_tilex
   04DE FD 36 00 00         744 	ld	0 (iy),#0x00
   04E2 FD 21r72s17         745 	ld	iy,#_tilex
   04E6 FD 36 01 00         746 	ld	1 (iy),#0x00
                            747 ;demo.c:1221: int tiley = 0;
   04EA FD 21r74s17         748 	ld	iy,#_tiley
   04EE FD 36 00 00         749 	ld	0 (iy),#0x00
   04F2 FD 21r74s17         750 	ld	iy,#_tiley
   04F6 FD 36 01 00         751 	ld	1 (iy),#0x00
                            752 ;demo.c:1222: uint8_t tiletick = 0;
   04FA FD 21r76s17         753 	ld	iy,#_tiletick
   04FE FD 36 00 00         754 	ld	0 (iy),#0x00
                            755 ;demo.c:1252: char tripal[9] = {
   0502 21r77s17            756 	ld	hl,#_tripal
   0505 CDr00s00            757 	call	__initrleblock
   0508 09                  758 	.db	9
   0509 02 02 01 01 02 03   759 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0511 02                  760 	.db	0x02
   0512 00                  761 	.db	0
                            762 ;demo.c:1258: uint8_t tripaltick = 0;
   0513 FD 21r80s17         763 	ld	iy,#_tripaltick
   0517 FD 36 00 00         764 	ld	0 (iy),#0x00
                            765 ;demo.c:1259: uint8_t tripaltick2 = 0;
   051B FD 21r81s17         766 	ld	iy,#_tripaltick2
   051F FD 36 00 00         767 	ld	0 (iy),#0x00
                            768 ;demo.c:1261: int triframes = 0;
   0523 FD 21r82s17         769 	ld	iy,#_triframes
   0527 FD 36 00 00         770 	ld	0 (iy),#0x00
   052B FD 21r82s17         771 	ld	iy,#_triframes
   052F FD 36 01 00         772 	ld	1 (iy),#0x00
                            773 ;demo.c:1415: int powatick = 0;
   0533 FD 21r84s17         774 	ld	iy,#_powatick
   0537 FD 36 00 00         775 	ld	0 (iy),#0x00
   053B FD 21r84s17         776 	ld	iy,#_powatick
   053F FD 36 01 00         777 	ld	1 (iy),#0x00
                            778 ;demo.c:1416: int powa = 0;
   0543 FD 21r86s17         779 	ld	iy,#_powa
   0547 FD 36 00 00         780 	ld	0 (iy),#0x00
   054B FD 21r86s17         781 	ld	iy,#_powa
   054F FD 36 01 00         782 	ld	1 (iy),#0x00
                            783 ;demo.c:1417: uint8_t onceclear = 255;
   0553 FD 21r88s17         784 	ld	iy,#_onceclear
   0557 FD 36 00 FF         785 	ld	0 (iy),#0xFF
                            786 ;demo.c:1462: uint8_t initpoints = 0;
   055B FD 21r89s17         787 	ld	iy,#_initpoints
   055F FD 36 00 00         788 	ld	0 (iy),#0x00
                            789 ;demo.c:1463: int pointframe = 0;
   0563 FD 21r8As17         790 	ld	iy,#_pointframe
   0567 FD 36 00 00         791 	ld	0 (iy),#0x00
   056B FD 21r8As17         792 	ld	iy,#_pointframe
   056F FD 36 01 00         793 	ld	1 (iy),#0x00
                            794 ;demo.c:1466: int greetindex = 0;
   0573 FD 21r8Cs17         795 	ld	iy,#_greetindex
   0577 FD 36 00 00         796 	ld	0 (iy),#0x00
   057B FD 21r8Cs17         797 	ld	iy,#_greetindex
   057F FD 36 01 00         798 	ld	1 (iy),#0x00
                            799 ;demo.c:1546: int bigtextp = 0;
   0583 FD 21r8Es17         800 	ld	iy,#_bigtextp
   0587 FD 36 00 00         801 	ld	0 (iy),#0x00
   058B FD 21r8Es17         802 	ld	iy,#_bigtextp
   058F FD 36 01 00         803 	ld	1 (iy),#0x00
                            804 ;demo.c:1610: int sceneindex = 0;
   0593 FD 21r90s17         805 	ld	iy,#_sceneindex
   0597 FD 36 00 00         806 	ld	0 (iy),#0x00
   059B FD 21r90s17         807 	ld	iy,#_sceneindex
   059F FD 36 01 00         808 	ld	1 (iy),#0x00
                            809 ;demo.c:1611: int timeindex = 0;
   05A3 FD 21r92s17         810 	ld	iy,#_timeindex
   05A7 FD 36 00 00         811 	ld	0 (iy),#0x00
   05AB FD 21r92s17         812 	ld	iy,#_timeindex
   05AF FD 36 01 00         813 	ld	1 (iy),#0x00
                            814 ;--------------------------------------------------------
                            815 ; Home
                            816 ;--------------------------------------------------------
                            817 	.area _HOME
                            818 	.area _HOME
                            819 ;--------------------------------------------------------
                            820 ; code
                            821 ;--------------------------------------------------------
                            822 	.area _CODE
                            823 ;demo.c:227: int isNthBitSet (unsigned char c, int n) {
                            824 ;	---------------------------------
                            825 ; Function isNthBitSet
                            826 ; ---------------------------------
   0000                     827 _isNthBitSet_start::
   0000                     828 _isNthBitSet:
   0000 DD E5               829 	push	ix
   0002 DD 21 00 00         830 	ld	ix,#0
   0006 DD 39               831 	add	ix,sp
                            832 ;demo.c:229: return ((c & mask[n]) != 0);
   0008 3ErDF               833 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            834 	add	a,5 (ix)
   000D 4F                  835 	ld	c,a
   000E 3Es16               836 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            837 	adc	a,6 (ix)
   0013 47                  838 	ld	b,a
   0014 0A                  839 	ld	a,(bc)
   0015 DD A6 04            840 	and	a,4 (ix)
   0018 20 04               841 	jr	NZ,00103$
   001A 3E 01               842 	ld	a,#0x01
   001C 18 01               843 	jr	00104$
   001E                     844 00103$:
   001E AF                  845 	xor	a,a
   001F                     846 00104$:
   001F B7                  847 	or	a,a
   0020 D6 01               848 	sub	a,#0x01
   0022 3E 00               849 	ld	a,#0x00
   0024 17                  850 	rla
   0025 4F                  851 	ld	c,a
   0026 69                  852 	ld	l,c
   0027 26 00               853 	ld	h,#0x00
   0029 DD E1               854 	pop	ix
   002B C9                  855 	ret
   002C                     856 _isNthBitSet_end::
   002C                     857 _sintabx:
   002C 78                  858 	.db #0x78
   002D 7A                  859 	.db #0x7A
   002E 7D                  860 	.db #0x7D
   002F 80                  861 	.db #0x80
   0030 83                  862 	.db #0x83
   0031 86                  863 	.db #0x86
   0032 89                  864 	.db #0x89
   0033 8C                  865 	.db #0x8C
   0034 8F                  866 	.db #0x8F
   0035 92                  867 	.db #0x92
   0036 95                  868 	.db #0x95
   0037 98                  869 	.db #0x98
   0038 9A                  870 	.db #0x9A
   0039 9D                  871 	.db #0x9D
   003A A0                  872 	.db #0xA0
   003B A3                  873 	.db #0xA3
   003C A5                  874 	.db #0xA5
   003D A8                  875 	.db #0xA8
   003E AB                  876 	.db #0xAB
   003F AD                  877 	.db #0xAD
   0040 B0                  878 	.db #0xB0
   0041 B3                  879 	.db #0xB3
   0042 B5                  880 	.db #0xB5
   0043 B8                  881 	.db #0xB8
   0044 BA                  882 	.db #0xBA
   0045 BD                  883 	.db #0xBD
   0046 BF                  884 	.db #0xBF
   0047 C1                  885 	.db #0xC1
   0048 C4                  886 	.db #0xC4
   0049 C6                  887 	.db #0xC6
   004A C8                  888 	.db #0xC8
   004B CA                  889 	.db #0xCA
   004C CC                  890 	.db #0xCC
   004D CE                  891 	.db #0xCE
   004E D0                  892 	.db #0xD0
   004F D2                  893 	.db #0xD2
   0050 D4                  894 	.db #0xD4
   0051 D6                  895 	.db #0xD6
   0052 D8                  896 	.db #0xD8
   0053 DA                  897 	.db #0xDA
   0054 DB                  898 	.db #0xDB
   0055 DD                  899 	.db #0xDD
   0056 DE                  900 	.db #0xDE
   0057 E0                  901 	.db #0xE0
   0058 E1                  902 	.db #0xE1
   0059 E3                  903 	.db #0xE3
   005A E4                  904 	.db #0xE4
   005B E5                  905 	.db #0xE5
   005C E6                  906 	.db #0xE6
   005D E7                  907 	.db #0xE7
   005E E8                  908 	.db #0xE8
   005F E9                  909 	.db #0xE9
   0060 EA                  910 	.db #0xEA
   0061 EB                  911 	.db #0xEB
   0062 EC                  912 	.db #0xEC
   0063 ED                  913 	.db #0xED
   0064 ED                  914 	.db #0xED
   0065 EE                  915 	.db #0xEE
   0066 EE                  916 	.db #0xEE
   0067 EF                  917 	.db #0xEF
   0068 EF                  918 	.db #0xEF
   0069 EF                  919 	.db #0xEF
   006A EF                  920 	.db #0xEF
   006B EF                  921 	.db #0xEF
   006C F0                  922 	.db #0xF0
   006D EF                  923 	.db #0xEF
   006E EF                  924 	.db #0xEF
   006F EF                  925 	.db #0xEF
   0070 EF                  926 	.db #0xEF
   0071 EF                  927 	.db #0xEF
   0072 EE                  928 	.db #0xEE
   0073 EE                  929 	.db #0xEE
   0074 ED                  930 	.db #0xED
   0075 ED                  931 	.db #0xED
   0076 EC                  932 	.db #0xEC
   0077 EB                  933 	.db #0xEB
   0078 EA                  934 	.db #0xEA
   0079 E9                  935 	.db #0xE9
   007A E8                  936 	.db #0xE8
   007B E7                  937 	.db #0xE7
   007C E6                  938 	.db #0xE6
   007D E5                  939 	.db #0xE5
   007E E4                  940 	.db #0xE4
   007F E3                  941 	.db #0xE3
   0080 E1                  942 	.db #0xE1
   0081 E0                  943 	.db #0xE0
   0082 DE                  944 	.db #0xDE
   0083 DD                  945 	.db #0xDD
   0084 DB                  946 	.db #0xDB
   0085 DA                  947 	.db #0xDA
   0086 D8                  948 	.db #0xD8
   0087 D6                  949 	.db #0xD6
   0088 D4                  950 	.db #0xD4
   0089 D2                  951 	.db #0xD2
   008A D0                  952 	.db #0xD0
   008B CE                  953 	.db #0xCE
   008C CC                  954 	.db #0xCC
   008D CA                  955 	.db #0xCA
   008E C8                  956 	.db #0xC8
   008F C6                  957 	.db #0xC6
   0090 C4                  958 	.db #0xC4
   0091 C1                  959 	.db #0xC1
   0092 BF                  960 	.db #0xBF
   0093 BD                  961 	.db #0xBD
   0094 BA                  962 	.db #0xBA
   0095 B8                  963 	.db #0xB8
   0096 B5                  964 	.db #0xB5
   0097 B3                  965 	.db #0xB3
   0098 B0                  966 	.db #0xB0
   0099 AD                  967 	.db #0xAD
   009A AB                  968 	.db #0xAB
   009B A8                  969 	.db #0xA8
   009C A5                  970 	.db #0xA5
   009D A3                  971 	.db #0xA3
   009E A0                  972 	.db #0xA0
   009F 9D                  973 	.db #0x9D
   00A0 9A                  974 	.db #0x9A
   00A1 98                  975 	.db #0x98
   00A2 95                  976 	.db #0x95
   00A3 92                  977 	.db #0x92
   00A4 8F                  978 	.db #0x8F
   00A5 8C                  979 	.db #0x8C
   00A6 89                  980 	.db #0x89
   00A7 86                  981 	.db #0x86
   00A8 83                  982 	.db #0x83
   00A9 80                  983 	.db #0x80
   00AA 7D                  984 	.db #0x7D
   00AB 7A                  985 	.db #0x7A
   00AC 78                  986 	.db #0x78
   00AD 75                  987 	.db #0x75
   00AE 72                  988 	.db #0x72
   00AF 6F                  989 	.db #0x6F
   00B0 6C                  990 	.db #0x6C
   00B1 69                  991 	.db #0x69
   00B2 66                  992 	.db #0x66
   00B3 63                  993 	.db #0x63
   00B4 60                  994 	.db #0x60
   00B5 5D                  995 	.db #0x5D
   00B6 5A                  996 	.db #0x5A
   00B7 57                  997 	.db #0x57
   00B8 55                  998 	.db #0x55
   00B9 52                  999 	.db #0x52
   00BA 4F                 1000 	.db #0x4F
   00BB 4C                 1001 	.db #0x4C
   00BC 4A                 1002 	.db #0x4A
   00BD 47                 1003 	.db #0x47
   00BE 44                 1004 	.db #0x44
   00BF 42                 1005 	.db #0x42
   00C0 3F                 1006 	.db #0x3F
   00C1 3C                 1007 	.db #0x3C
   00C2 3A                 1008 	.db #0x3A
   00C3 37                 1009 	.db #0x37
   00C4 35                 1010 	.db #0x35
   00C5 32                 1011 	.db #0x32
   00C6 30                 1012 	.db #0x30
   00C7 2E                 1013 	.db #0x2E
   00C8 2B                 1014 	.db #0x2B
   00C9 29                 1015 	.db #0x29
   00CA 27                 1016 	.db #0x27
   00CB 25                 1017 	.db #0x25
   00CC 23                 1018 	.db #0x23
   00CD 21                 1019 	.db #0x21
   00CE 1F                 1020 	.db #0x1F
   00CF 1D                 1021 	.db #0x1D
   00D0 1B                 1022 	.db #0x1B
   00D1 19                 1023 	.db #0x19
   00D2 17                 1024 	.db #0x17
   00D3 15                 1025 	.db #0x15
   00D4 14                 1026 	.db #0x14
   00D5 12                 1027 	.db #0x12
   00D6 11                 1028 	.db #0x11
   00D7 0F                 1029 	.db #0x0F
   00D8 0E                 1030 	.db #0x0E
   00D9 0C                 1031 	.db #0x0C
   00DA 0B                 1032 	.db #0x0B
   00DB 0A                 1033 	.db #0x0A
   00DC 09                 1034 	.db #0x09
   00DD 08                 1035 	.db #0x08
   00DE 07                 1036 	.db #0x07
   00DF 06                 1037 	.db #0x06
   00E0 05                 1038 	.db #0x05
   00E1 04                 1039 	.db #0x04
   00E2 03                 1040 	.db #0x03
   00E3 02                 1041 	.db #0x02
   00E4 02                 1042 	.db #0x02
   00E5 01                 1043 	.db #0x01
   00E6 01                 1044 	.db #0x01
   00E7 00                 1045 	.db #0x00
   00E8 00                 1046 	.db #0x00
   00E9 00                 1047 	.db #0x00
   00EA 00                 1048 	.db #0x00
   00EB 00                 1049 	.db #0x00
   00EC 00                 1050 	.db #0x00
   00ED 00                 1051 	.db #0x00
   00EE 00                 1052 	.db #0x00
   00EF 00                 1053 	.db #0x00
   00F0 00                 1054 	.db #0x00
   00F1 00                 1055 	.db #0x00
   00F2 01                 1056 	.db #0x01
   00F3 01                 1057 	.db #0x01
   00F4 02                 1058 	.db #0x02
   00F5 02                 1059 	.db #0x02
   00F6 03                 1060 	.db #0x03
   00F7 04                 1061 	.db #0x04
   00F8 05                 1062 	.db #0x05
   00F9 06                 1063 	.db #0x06
   00FA 07                 1064 	.db #0x07
   00FB 08                 1065 	.db #0x08
   00FC 09                 1066 	.db #0x09
   00FD 0A                 1067 	.db #0x0A
   00FE 0B                 1068 	.db #0x0B
   00FF 0C                 1069 	.db #0x0C
   0100 0E                 1070 	.db #0x0E
   0101 0F                 1071 	.db #0x0F
   0102 11                 1072 	.db #0x11
   0103 12                 1073 	.db #0x12
   0104 14                 1074 	.db #0x14
   0105 15                 1075 	.db #0x15
   0106 17                 1076 	.db #0x17
   0107 19                 1077 	.db #0x19
   0108 1B                 1078 	.db #0x1B
   0109 1D                 1079 	.db #0x1D
   010A 1F                 1080 	.db #0x1F
   010B 21                 1081 	.db #0x21
   010C 23                 1082 	.db #0x23
   010D 25                 1083 	.db #0x25
   010E 27                 1084 	.db #0x27
   010F 29                 1085 	.db #0x29
   0110 2B                 1086 	.db #0x2B
   0111 2E                 1087 	.db #0x2E
   0112 30                 1088 	.db #0x30
   0113 32                 1089 	.db #0x32
   0114 35                 1090 	.db #0x35
   0115 37                 1091 	.db #0x37
   0116 3A                 1092 	.db #0x3A
   0117 3C                 1093 	.db #0x3C
   0118 3F                 1094 	.db #0x3F
   0119 42                 1095 	.db #0x42
   011A 44                 1096 	.db #0x44
   011B 47                 1097 	.db #0x47
   011C 4A                 1098 	.db #0x4A
   011D 4C                 1099 	.db #0x4C
   011E 4F                 1100 	.db #0x4F
   011F 52                 1101 	.db #0x52
   0120 55                 1102 	.db #0x55
   0121 57                 1103 	.db #0x57
   0122 5A                 1104 	.db #0x5A
   0123 5D                 1105 	.db #0x5D
   0124 60                 1106 	.db #0x60
   0125 63                 1107 	.db #0x63
   0126 66                 1108 	.db #0x66
   0127 69                 1109 	.db #0x69
   0128 6C                 1110 	.db #0x6C
   0129 6F                 1111 	.db #0x6F
   012A 72                 1112 	.db #0x72
   012B 75                 1113 	.db #0x75
   012C                    1114 _tri_center:
   012C 08                 1115 	.db #0x08
   012D 0A                 1116 	.db #0x0A
   012E 12                 1117 	.db #0x12
   012F 10                 1118 	.db #0x10
   0130 00                 1119 	.db #0x00
   0131 02                 1120 	.db #0x02
   0132 08                 1121 	.db #0x08
   0133 0A                 1122 	.db #0x0A
   0134 0B                 1123 	.db #0x0B
   0135 09                 1124 	.db #0x09
   0136 03                 1125 	.db #0x03
   0137 01                 1126 	.db #0x01
   0138 11                 1127 	.db #0x11
   0139 13                 1128 	.db #0x13
   013A 0B                 1129 	.db #0x0B
   013B 09                 1130 	.db #0x09
   013C 0A                 1131 	.db #0x0A
   013D 12                 1132 	.db #0x12
   013E 10                 1133 	.db #0x10
   013F 00                 1134 	.db #0x00
   0140 02                 1135 	.db #0x02
   0141 08                 1136 	.db #0x08
   0142 0A                 1137 	.db #0x0A
   0143 12                 1138 	.db #0x12
   0144 13                 1139 	.db #0x13
   0145 0B                 1140 	.db #0x0B
   0146 09                 1141 	.db #0x09
   0147 03                 1142 	.db #0x03
   0148 01                 1143 	.db #0x01
   0149 11                 1144 	.db #0x11
   014A 13                 1145 	.db #0x13
   014B 0B                 1146 	.db #0x0B
   014C 12                 1147 	.db #0x12
   014D 10                 1148 	.db #0x10
   014E 00                 1149 	.db #0x00
   014F 02                 1150 	.db #0x02
   0150 08                 1151 	.db #0x08
   0151 0A                 1152 	.db #0x0A
   0152 12                 1153 	.db #0x12
   0153 10                 1154 	.db #0x10
   0154 11                 1155 	.db #0x11
   0155 13                 1156 	.db #0x13
   0156 0B                 1157 	.db #0x0B
   0157 09                 1158 	.db #0x09
   0158 03                 1159 	.db #0x03
   0159 01                 1160 	.db #0x01
   015A 11                 1161 	.db #0x11
   015B 13                 1162 	.db #0x13
   015C 10                 1163 	.db #0x10
   015D 00                 1164 	.db #0x00
   015E 02                 1165 	.db #0x02
   015F 08                 1166 	.db #0x08
   0160 0A                 1167 	.db #0x0A
   0161 12                 1168 	.db #0x12
   0162 10                 1169 	.db #0x10
   0163 00                 1170 	.db #0x00
   0164 01                 1171 	.db #0x01
   0165 11                 1172 	.db #0x11
   0166 13                 1173 	.db #0x13
   0167 0B                 1174 	.db #0x0B
   0168 09                 1175 	.db #0x09
   0169 03                 1176 	.db #0x03
   016A 01                 1177 	.db #0x01
   016B 11                 1178 	.db #0x11
   016C 00                 1179 	.db #0x00
   016D 02                 1180 	.db #0x02
   016E 08                 1181 	.db #0x08
   016F 0A                 1182 	.db #0x0A
   0170 12                 1183 	.db #0x12
   0171 10                 1184 	.db #0x10
   0172 00                 1185 	.db #0x00
   0173 02                 1186 	.db #0x02
   0174 03                 1187 	.db #0x03
   0175 01                 1188 	.db #0x01
   0176 11                 1189 	.db #0x11
   0177 13                 1190 	.db #0x13
   0178 0B                 1191 	.db #0x0B
   0179 09                 1192 	.db #0x09
   017A 03                 1193 	.db #0x03
   017B 01                 1194 	.db #0x01
   017C 02                 1195 	.db #0x02
   017D 08                 1196 	.db #0x08
   017E 0A                 1197 	.db #0x0A
   017F 12                 1198 	.db #0x12
   0180 10                 1199 	.db #0x10
   0181 00                 1200 	.db #0x00
   0182 02                 1201 	.db #0x02
   0183 08                 1202 	.db #0x08
   0184 09                 1203 	.db #0x09
   0185 03                 1204 	.db #0x03
   0186 01                 1205 	.db #0x01
   0187 11                 1206 	.db #0x11
   0188 13                 1207 	.db #0x13
   0189 0B                 1208 	.db #0x0B
   018A 09                 1209 	.db #0x09
   018B 03                 1210 	.db #0x03
   018C 01                 1211 	.db #0x01
   018D 0B                 1212 	.db #0x0B
   018E 09                 1213 	.db #0x09
   018F 11                 1214 	.db #0x11
   0190 13                 1215 	.db #0x13
   0191 03                 1216 	.db #0x03
   0192 01                 1217 	.db #0x01
   0193 0B                 1218 	.db #0x0B
   0194 0A                 1219 	.db #0x0A
   0195 00                 1220 	.db #0x00
   0196 02                 1221 	.db #0x02
   0197 12                 1222 	.db #0x12
   0198 10                 1223 	.db #0x10
   0199 08                 1224 	.db #0x08
   019A 0A                 1225 	.db #0x0A
   019B 00                 1226 	.db #0x00
   019C 03                 1227 	.db #0x03
   019D 01                 1228 	.db #0x01
   019E 0B                 1229 	.db #0x0B
   019F 09                 1230 	.db #0x09
   01A0 11                 1231 	.db #0x11
   01A1 13                 1232 	.db #0x13
   01A2 03                 1233 	.db #0x03
   01A3 01                 1234 	.db #0x01
   01A4 00                 1235 	.db #0x00
   01A5 02                 1236 	.db #0x02
   01A6 12                 1237 	.db #0x12
   01A7 10                 1238 	.db #0x10
   01A8 08                 1239 	.db #0x08
   01A9 0A                 1240 	.db #0x0A
   01AA 00                 1241 	.db #0x00
   01AB 02                 1242 	.db #0x02
   01AC 13                 1243 	.db #0x13
   01AD 03                 1244 	.db #0x03
   01AE 01                 1245 	.db #0x01
   01AF 0B                 1246 	.db #0x0B
   01B0 09                 1247 	.db #0x09
   01B1 11                 1248 	.db #0x11
   01B2 13                 1249 	.db #0x13
   01B3 03                 1250 	.db #0x03
   01B4 02                 1251 	.db #0x02
   01B5 12                 1252 	.db #0x12
   01B6 10                 1253 	.db #0x10
   01B7 08                 1254 	.db #0x08
   01B8 0A                 1255 	.db #0x0A
   01B9 00                 1256 	.db #0x00
   01BA 02                 1257 	.db #0x02
   01BB 12                 1258 	.db #0x12
   01BC 11                 1259 	.db #0x11
   01BD 13                 1260 	.db #0x13
   01BE 03                 1261 	.db #0x03
   01BF 01                 1262 	.db #0x01
   01C0 0B                 1263 	.db #0x0B
   01C1 09                 1264 	.db #0x09
   01C2 11                 1265 	.db #0x11
   01C3 13                 1266 	.db #0x13
   01C4 12                 1267 	.db #0x12
   01C5 10                 1268 	.db #0x10
   01C6 08                 1269 	.db #0x08
   01C7 0A                 1270 	.db #0x0A
   01C8 00                 1271 	.db #0x00
   01C9 02                 1272 	.db #0x02
   01CA 12                 1273 	.db #0x12
   01CB 10                 1274 	.db #0x10
   01CC 09                 1275 	.db #0x09
   01CD 11                 1276 	.db #0x11
   01CE 13                 1277 	.db #0x13
   01CF 03                 1278 	.db #0x03
   01D0 01                 1279 	.db #0x01
   01D1 0B                 1280 	.db #0x0B
   01D2 09                 1281 	.db #0x09
   01D3 11                 1282 	.db #0x11
   01D4 10                 1283 	.db #0x10
   01D5 08                 1284 	.db #0x08
   01D6 0A                 1285 	.db #0x0A
   01D7 00                 1286 	.db #0x00
   01D8 02                 1287 	.db #0x02
   01D9 12                 1288 	.db #0x12
   01DA 10                 1289 	.db #0x10
   01DB 08                 1290 	.db #0x08
   01DC 0B                 1291 	.db #0x0B
   01DD 09                 1292 	.db #0x09
   01DE 11                 1293 	.db #0x11
   01DF 13                 1294 	.db #0x13
   01E0 03                 1295 	.db #0x03
   01E1 01                 1296 	.db #0x01
   01E2 0B                 1297 	.db #0x0B
   01E3 09                 1298 	.db #0x09
   01E4 08                 1299 	.db #0x08
   01E5 0A                 1300 	.db #0x0A
   01E6 00                 1301 	.db #0x00
   01E7 02                 1302 	.db #0x02
   01E8 12                 1303 	.db #0x12
   01E9 10                 1304 	.db #0x10
   01EA 08                 1305 	.db #0x08
   01EB 0A                 1306 	.db #0x0A
   01EC                    1307 _tri_up:
   01EC 0A                 1308 	.db #0x0A
   01ED 12                 1309 	.db #0x12
   01EE 10                 1310 	.db #0x10
   01EF 00                 1311 	.db #0x00
   01F0 02                 1312 	.db #0x02
   01F1 08                 1313 	.db #0x08
   01F2 0A                 1314 	.db #0x0A
   01F3 12                 1315 	.db #0x12
   01F4 13                 1316 	.db #0x13
   01F5 0B                 1317 	.db #0x0B
   01F6 09                 1318 	.db #0x09
   01F7 03                 1319 	.db #0x03
   01F8 01                 1320 	.db #0x01
   01F9 11                 1321 	.db #0x11
   01FA 13                 1322 	.db #0x13
   01FB 0B                 1323 	.db #0x0B
   01FC 12                 1324 	.db #0x12
   01FD 10                 1325 	.db #0x10
   01FE 00                 1326 	.db #0x00
   01FF 02                 1327 	.db #0x02
   0200 08                 1328 	.db #0x08
   0201 0A                 1329 	.db #0x0A
   0202 12                 1330 	.db #0x12
   0203 10                 1331 	.db #0x10
   0204 11                 1332 	.db #0x11
   0205 13                 1333 	.db #0x13
   0206 0B                 1334 	.db #0x0B
   0207 09                 1335 	.db #0x09
   0208 03                 1336 	.db #0x03
   0209 01                 1337 	.db #0x01
   020A 11                 1338 	.db #0x11
   020B 13                 1339 	.db #0x13
   020C 10                 1340 	.db #0x10
   020D 00                 1341 	.db #0x00
   020E 02                 1342 	.db #0x02
   020F 08                 1343 	.db #0x08
   0210 0A                 1344 	.db #0x0A
   0211 12                 1345 	.db #0x12
   0212 10                 1346 	.db #0x10
   0213 00                 1347 	.db #0x00
   0214 01                 1348 	.db #0x01
   0215 11                 1349 	.db #0x11
   0216 13                 1350 	.db #0x13
   0217 0B                 1351 	.db #0x0B
   0218 09                 1352 	.db #0x09
   0219 03                 1353 	.db #0x03
   021A 01                 1354 	.db #0x01
   021B 11                 1355 	.db #0x11
   021C 00                 1356 	.db #0x00
   021D 02                 1357 	.db #0x02
   021E 08                 1358 	.db #0x08
   021F 0A                 1359 	.db #0x0A
   0220 12                 1360 	.db #0x12
   0221 10                 1361 	.db #0x10
   0222 00                 1362 	.db #0x00
   0223 02                 1363 	.db #0x02
   0224 03                 1364 	.db #0x03
   0225 01                 1365 	.db #0x01
   0226 11                 1366 	.db #0x11
   0227 13                 1367 	.db #0x13
   0228 0B                 1368 	.db #0x0B
   0229 09                 1369 	.db #0x09
   022A 03                 1370 	.db #0x03
   022B 01                 1371 	.db #0x01
   022C 02                 1372 	.db #0x02
   022D 08                 1373 	.db #0x08
   022E 0A                 1374 	.db #0x0A
   022F 12                 1375 	.db #0x12
   0230 10                 1376 	.db #0x10
   0231 00                 1377 	.db #0x00
   0232 02                 1378 	.db #0x02
   0233 08                 1379 	.db #0x08
   0234 09                 1380 	.db #0x09
   0235 03                 1381 	.db #0x03
   0236 01                 1382 	.db #0x01
   0237 11                 1383 	.db #0x11
   0238 13                 1384 	.db #0x13
   0239 0B                 1385 	.db #0x0B
   023A 09                 1386 	.db #0x09
   023B 03                 1387 	.db #0x03
   023C 08                 1388 	.db #0x08
   023D 0A                 1389 	.db #0x0A
   023E 12                 1390 	.db #0x12
   023F 10                 1391 	.db #0x10
   0240 00                 1392 	.db #0x00
   0241 02                 1393 	.db #0x02
   0242 08                 1394 	.db #0x08
   0243 0A                 1395 	.db #0x0A
   0244 0B                 1396 	.db #0x0B
   0245 09                 1397 	.db #0x09
   0246 03                 1398 	.db #0x03
   0247 01                 1399 	.db #0x01
   0248 11                 1400 	.db #0x11
   0249 13                 1401 	.db #0x13
   024A 0B                 1402 	.db #0x0B
   024B 09                 1403 	.db #0x09
   024C 0A                 1404 	.db #0x0A
   024D 12                 1405 	.db #0x12
   024E 10                 1406 	.db #0x10
   024F 00                 1407 	.db #0x00
   0250 02                 1408 	.db #0x02
   0251 08                 1409 	.db #0x08
   0252 0A                 1410 	.db #0x0A
   0253 12                 1411 	.db #0x12
   0254 13                 1412 	.db #0x13
   0255 0B                 1413 	.db #0x0B
   0256 09                 1414 	.db #0x09
   0257 03                 1415 	.db #0x03
   0258 01                 1416 	.db #0x01
   0259 11                 1417 	.db #0x11
   025A 13                 1418 	.db #0x13
   025B 0B                 1419 	.db #0x0B
   025C 12                 1420 	.db #0x12
   025D 10                 1421 	.db #0x10
   025E 00                 1422 	.db #0x00
   025F 02                 1423 	.db #0x02
   0260 08                 1424 	.db #0x08
   0261 0A                 1425 	.db #0x0A
   0262 12                 1426 	.db #0x12
   0263 10                 1427 	.db #0x10
   0264 11                 1428 	.db #0x11
   0265 13                 1429 	.db #0x13
   0266 0B                 1430 	.db #0x0B
   0267 09                 1431 	.db #0x09
   0268 03                 1432 	.db #0x03
   0269 01                 1433 	.db #0x01
   026A 11                 1434 	.db #0x11
   026B 13                 1435 	.db #0x13
   026C 10                 1436 	.db #0x10
   026D 00                 1437 	.db #0x00
   026E 02                 1438 	.db #0x02
   026F 08                 1439 	.db #0x08
   0270 0A                 1440 	.db #0x0A
   0271 12                 1441 	.db #0x12
   0272 10                 1442 	.db #0x10
   0273 00                 1443 	.db #0x00
   0274 01                 1444 	.db #0x01
   0275 11                 1445 	.db #0x11
   0276 13                 1446 	.db #0x13
   0277 0B                 1447 	.db #0x0B
   0278 09                 1448 	.db #0x09
   0279 03                 1449 	.db #0x03
   027A 01                 1450 	.db #0x01
   027B 11                 1451 	.db #0x11
   027C 00                 1452 	.db #0x00
   027D 02                 1453 	.db #0x02
   027E 08                 1454 	.db #0x08
   027F 0A                 1455 	.db #0x0A
   0280 12                 1456 	.db #0x12
   0281 10                 1457 	.db #0x10
   0282 00                 1458 	.db #0x00
   0283 02                 1459 	.db #0x02
   0284 03                 1460 	.db #0x03
   0285 01                 1461 	.db #0x01
   0286 11                 1462 	.db #0x11
   0287 13                 1463 	.db #0x13
   0288 0B                 1464 	.db #0x0B
   0289 09                 1465 	.db #0x09
   028A 03                 1466 	.db #0x03
   028B 01                 1467 	.db #0x01
   028C 02                 1468 	.db #0x02
   028D 08                 1469 	.db #0x08
   028E 0A                 1470 	.db #0x0A
   028F 12                 1471 	.db #0x12
   0290 10                 1472 	.db #0x10
   0291 00                 1473 	.db #0x00
   0292 02                 1474 	.db #0x02
   0293 08                 1475 	.db #0x08
   0294 09                 1476 	.db #0x09
   0295 03                 1477 	.db #0x03
   0296 01                 1478 	.db #0x01
   0297 11                 1479 	.db #0x11
   0298 13                 1480 	.db #0x13
   0299 0B                 1481 	.db #0x0B
   029A 09                 1482 	.db #0x09
   029B 03                 1483 	.db #0x03
   029C 08                 1484 	.db #0x08
   029D 0A                 1485 	.db #0x0A
   029E 12                 1486 	.db #0x12
   029F 10                 1487 	.db #0x10
   02A0 00                 1488 	.db #0x00
   02A1 02                 1489 	.db #0x02
   02A2 08                 1490 	.db #0x08
   02A3 0A                 1491 	.db #0x0A
   02A4 0B                 1492 	.db #0x0B
   02A5 09                 1493 	.db #0x09
   02A6 03                 1494 	.db #0x03
   02A7 01                 1495 	.db #0x01
   02A8 11                 1496 	.db #0x11
   02A9 13                 1497 	.db #0x13
   02AA 0B                 1498 	.db #0x0B
   02AB 09                 1499 	.db #0x09
   02AC                    1500 _tri_dia:
   02AC 05                 1501 	.db #0x05
   02AD 1B                 1502 	.db #0x1B
   02AE 0F                 1503 	.db #0x0F
   02AF 1D                 1504 	.db #0x1D
   02B0 15                 1505 	.db #0x15
   02B1 19                 1506 	.db #0x19
   02B2 05                 1507 	.db #0x05
   02B3 1B                 1508 	.db #0x1B
   02B4 0F                 1509 	.db #0x0F
   02B5 1D                 1510 	.db #0x1D
   02B6 15                 1511 	.db #0x15
   02B7 19                 1512 	.db #0x19
   02B8 05                 1513 	.db #0x05
   02B9 1B                 1514 	.db #0x1B
   02BA 0F                 1515 	.db #0x0F
   02BB 1D                 1516 	.db #0x1D
   02BC 1D                 1517 	.db #0x1D
   02BD 05                 1518 	.db #0x05
   02BE 19                 1519 	.db #0x19
   02BF 0F                 1520 	.db #0x0F
   02C0 1B                 1521 	.db #0x1B
   02C1 15                 1522 	.db #0x15
   02C2 1D                 1523 	.db #0x1D
   02C3 05                 1524 	.db #0x05
   02C4 19                 1525 	.db #0x19
   02C5 0F                 1526 	.db #0x0F
   02C6 1B                 1527 	.db #0x1B
   02C7 15                 1528 	.db #0x15
   02C8 1D                 1529 	.db #0x1D
   02C9 05                 1530 	.db #0x05
   02CA 19                 1531 	.db #0x19
   02CB 0F                 1532 	.db #0x0F
   02CC 0F                 1533 	.db #0x0F
   02CD 1D                 1534 	.db #0x1D
   02CE 15                 1535 	.db #0x15
   02CF 19                 1536 	.db #0x19
   02D0 05                 1537 	.db #0x05
   02D1 1B                 1538 	.db #0x1B
   02D2 0F                 1539 	.db #0x0F
   02D3 1D                 1540 	.db #0x1D
   02D4 15                 1541 	.db #0x15
   02D5 19                 1542 	.db #0x19
   02D6 05                 1543 	.db #0x05
   02D7 1B                 1544 	.db #0x1B
   02D8 0F                 1545 	.db #0x0F
   02D9 1D                 1546 	.db #0x1D
   02DA 15                 1547 	.db #0x15
   02DB 19                 1548 	.db #0x19
   02DC 19                 1549 	.db #0x19
   02DD 0F                 1550 	.db #0x0F
   02DE 1B                 1551 	.db #0x1B
   02DF 15                 1552 	.db #0x15
   02E0 1D                 1553 	.db #0x1D
   02E1 05                 1554 	.db #0x05
   02E2 19                 1555 	.db #0x19
   02E3 0F                 1556 	.db #0x0F
   02E4 1B                 1557 	.db #0x1B
   02E5 15                 1558 	.db #0x15
   02E6 1D                 1559 	.db #0x1D
   02E7 05                 1560 	.db #0x05
   02E8 19                 1561 	.db #0x19
   02E9 0F                 1562 	.db #0x0F
   02EA 1B                 1563 	.db #0x1B
   02EB 15                 1564 	.db #0x15
   02EC 15                 1565 	.db #0x15
   02ED 19                 1566 	.db #0x19
   02EE 05                 1567 	.db #0x05
   02EF 1B                 1568 	.db #0x1B
   02F0 0F                 1569 	.db #0x0F
   02F1 1D                 1570 	.db #0x1D
   02F2 15                 1571 	.db #0x15
   02F3 19                 1572 	.db #0x19
   02F4 05                 1573 	.db #0x05
   02F5 1B                 1574 	.db #0x1B
   02F6 0F                 1575 	.db #0x0F
   02F7 1D                 1576 	.db #0x1D
   02F8 15                 1577 	.db #0x15
   02F9 19                 1578 	.db #0x19
   02FA 05                 1579 	.db #0x05
   02FB 1B                 1580 	.db #0x1B
   02FC 1B                 1581 	.db #0x1B
   02FD 15                 1582 	.db #0x15
   02FE 1D                 1583 	.db #0x1D
   02FF 05                 1584 	.db #0x05
   0300 19                 1585 	.db #0x19
   0301 0F                 1586 	.db #0x0F
   0302 1B                 1587 	.db #0x1B
   0303 15                 1588 	.db #0x15
   0304 1D                 1589 	.db #0x1D
   0305 05                 1590 	.db #0x05
   0306 19                 1591 	.db #0x19
   0307 0F                 1592 	.db #0x0F
   0308 1B                 1593 	.db #0x1B
   0309 15                 1594 	.db #0x15
   030A 1D                 1595 	.db #0x1D
   030B 05                 1596 	.db #0x05
   030C 05                 1597 	.db #0x05
   030D 1B                 1598 	.db #0x1B
   030E 0F                 1599 	.db #0x0F
   030F 1D                 1600 	.db #0x1D
   0310 15                 1601 	.db #0x15
   0311 19                 1602 	.db #0x19
   0312 05                 1603 	.db #0x05
   0313 1B                 1604 	.db #0x1B
   0314 0F                 1605 	.db #0x0F
   0315 1D                 1606 	.db #0x1D
   0316 15                 1607 	.db #0x15
   0317 19                 1608 	.db #0x19
   0318 05                 1609 	.db #0x05
   0319 1B                 1610 	.db #0x1B
   031A 0F                 1611 	.db #0x0F
   031B 1D                 1612 	.db #0x1D
   031C 1D                 1613 	.db #0x1D
   031D 05                 1614 	.db #0x05
   031E 19                 1615 	.db #0x19
   031F 0F                 1616 	.db #0x0F
   0320 1B                 1617 	.db #0x1B
   0321 15                 1618 	.db #0x15
   0322 1D                 1619 	.db #0x1D
   0323 05                 1620 	.db #0x05
   0324 19                 1621 	.db #0x19
   0325 0F                 1622 	.db #0x0F
   0326 1B                 1623 	.db #0x1B
   0327 15                 1624 	.db #0x15
   0328 1D                 1625 	.db #0x1D
   0329 05                 1626 	.db #0x05
   032A 19                 1627 	.db #0x19
   032B 0F                 1628 	.db #0x0F
   032C 0F                 1629 	.db #0x0F
   032D 1D                 1630 	.db #0x1D
   032E 15                 1631 	.db #0x15
   032F 19                 1632 	.db #0x19
   0330 05                 1633 	.db #0x05
   0331 1B                 1634 	.db #0x1B
   0332 0F                 1635 	.db #0x0F
   0333 1D                 1636 	.db #0x1D
   0334 15                 1637 	.db #0x15
   0335 19                 1638 	.db #0x19
   0336 05                 1639 	.db #0x05
   0337 1B                 1640 	.db #0x1B
   0338 0F                 1641 	.db #0x0F
   0339 1D                 1642 	.db #0x1D
   033A 15                 1643 	.db #0x15
   033B 19                 1644 	.db #0x19
   033C 19                 1645 	.db #0x19
   033D 0F                 1646 	.db #0x0F
   033E 1B                 1647 	.db #0x1B
   033F 15                 1648 	.db #0x15
   0340 1D                 1649 	.db #0x1D
   0341 05                 1650 	.db #0x05
   0342 19                 1651 	.db #0x19
   0343 0F                 1652 	.db #0x0F
   0344 1B                 1653 	.db #0x1B
   0345 15                 1654 	.db #0x15
   0346 1D                 1655 	.db #0x1D
   0347 05                 1656 	.db #0x05
   0348 19                 1657 	.db #0x19
   0349 0F                 1658 	.db #0x0F
   034A 1B                 1659 	.db #0x1B
   034B 15                 1660 	.db #0x15
   034C 15                 1661 	.db #0x15
   034D 19                 1662 	.db #0x19
   034E 05                 1663 	.db #0x05
   034F 1B                 1664 	.db #0x1B
   0350 0F                 1665 	.db #0x0F
   0351 1D                 1666 	.db #0x1D
   0352 15                 1667 	.db #0x15
   0353 19                 1668 	.db #0x19
   0354 05                 1669 	.db #0x05
   0355 1B                 1670 	.db #0x1B
   0356 0F                 1671 	.db #0x0F
   0357 1D                 1672 	.db #0x1D
   0358 15                 1673 	.db #0x15
   0359 19                 1674 	.db #0x19
   035A 05                 1675 	.db #0x05
   035B 1B                 1676 	.db #0x1B
   035C 1B                 1677 	.db #0x1B
   035D 15                 1678 	.db #0x15
   035E 1D                 1679 	.db #0x1D
   035F 05                 1680 	.db #0x05
   0360 19                 1681 	.db #0x19
   0361 0F                 1682 	.db #0x0F
   0362 1B                 1683 	.db #0x1B
   0363 15                 1684 	.db #0x15
   0364 1D                 1685 	.db #0x1D
   0365 05                 1686 	.db #0x05
   0366 19                 1687 	.db #0x19
   0367 0F                 1688 	.db #0x0F
   0368 1B                 1689 	.db #0x1B
   0369 15                 1690 	.db #0x15
   036A 1D                 1691 	.db #0x1D
   036B 05                 1692 	.db #0x05
   036C                    1693 _tri_side1:
   036C 0A                 1694 	.db #0x0A
   036D 12                 1695 	.db #0x12
   036E 10                 1696 	.db #0x10
   036F 00                 1697 	.db #0x00
   0370 02                 1698 	.db #0x02
   0371 08                 1699 	.db #0x08
   0372 0A                 1700 	.db #0x0A
   0373 12                 1701 	.db #0x12
   0374 10                 1702 	.db #0x10
   0375 00                 1703 	.db #0x00
   0376 02                 1704 	.db #0x02
   0377 08                 1705 	.db #0x08
   0378 0A                 1706 	.db #0x0A
   0379 12                 1707 	.db #0x12
   037A 10                 1708 	.db #0x10
   037B 00                 1709 	.db #0x00
   037C 12                 1710 	.db #0x12
   037D 10                 1711 	.db #0x10
   037E 00                 1712 	.db #0x00
   037F 02                 1713 	.db #0x02
   0380 08                 1714 	.db #0x08
   0381 0A                 1715 	.db #0x0A
   0382 12                 1716 	.db #0x12
   0383 10                 1717 	.db #0x10
   0384 00                 1718 	.db #0x00
   0385 02                 1719 	.db #0x02
   0386 08                 1720 	.db #0x08
   0387 0A                 1721 	.db #0x0A
   0388 12                 1722 	.db #0x12
   0389 10                 1723 	.db #0x10
   038A 00                 1724 	.db #0x00
   038B 02                 1725 	.db #0x02
   038C 10                 1726 	.db #0x10
   038D 00                 1727 	.db #0x00
   038E 02                 1728 	.db #0x02
   038F 08                 1729 	.db #0x08
   0390 0A                 1730 	.db #0x0A
   0391 12                 1731 	.db #0x12
   0392 10                 1732 	.db #0x10
   0393 00                 1733 	.db #0x00
   0394 02                 1734 	.db #0x02
   0395 08                 1735 	.db #0x08
   0396 0A                 1736 	.db #0x0A
   0397 12                 1737 	.db #0x12
   0398 10                 1738 	.db #0x10
   0399 00                 1739 	.db #0x00
   039A 02                 1740 	.db #0x02
   039B 08                 1741 	.db #0x08
   039C 00                 1742 	.db #0x00
   039D 02                 1743 	.db #0x02
   039E 08                 1744 	.db #0x08
   039F 0A                 1745 	.db #0x0A
   03A0 12                 1746 	.db #0x12
   03A1 10                 1747 	.db #0x10
   03A2 00                 1748 	.db #0x00
   03A3 02                 1749 	.db #0x02
   03A4 08                 1750 	.db #0x08
   03A5 0A                 1751 	.db #0x0A
   03A6 12                 1752 	.db #0x12
   03A7 10                 1753 	.db #0x10
   03A8 00                 1754 	.db #0x00
   03A9 02                 1755 	.db #0x02
   03AA 08                 1756 	.db #0x08
   03AB 0A                 1757 	.db #0x0A
   03AC 02                 1758 	.db #0x02
   03AD 08                 1759 	.db #0x08
   03AE 0A                 1760 	.db #0x0A
   03AF 12                 1761 	.db #0x12
   03B0 10                 1762 	.db #0x10
   03B1 00                 1763 	.db #0x00
   03B2 02                 1764 	.db #0x02
   03B3 08                 1765 	.db #0x08
   03B4 0A                 1766 	.db #0x0A
   03B5 12                 1767 	.db #0x12
   03B6 10                 1768 	.db #0x10
   03B7 00                 1769 	.db #0x00
   03B8 02                 1770 	.db #0x02
   03B9 08                 1771 	.db #0x08
   03BA 0A                 1772 	.db #0x0A
   03BB 12                 1773 	.db #0x12
   03BC 08                 1774 	.db #0x08
   03BD 0A                 1775 	.db #0x0A
   03BE 12                 1776 	.db #0x12
   03BF 10                 1777 	.db #0x10
   03C0 00                 1778 	.db #0x00
   03C1 02                 1779 	.db #0x02
   03C2 08                 1780 	.db #0x08
   03C3 0A                 1781 	.db #0x0A
   03C4 12                 1782 	.db #0x12
   03C5 10                 1783 	.db #0x10
   03C6 00                 1784 	.db #0x00
   03C7 02                 1785 	.db #0x02
   03C8 08                 1786 	.db #0x08
   03C9 0A                 1787 	.db #0x0A
   03CA 12                 1788 	.db #0x12
   03CB 10                 1789 	.db #0x10
   03CC 0A                 1790 	.db #0x0A
   03CD 12                 1791 	.db #0x12
   03CE 10                 1792 	.db #0x10
   03CF 00                 1793 	.db #0x00
   03D0 02                 1794 	.db #0x02
   03D1 08                 1795 	.db #0x08
   03D2 0A                 1796 	.db #0x0A
   03D3 12                 1797 	.db #0x12
   03D4 10                 1798 	.db #0x10
   03D5 00                 1799 	.db #0x00
   03D6 02                 1800 	.db #0x02
   03D7 08                 1801 	.db #0x08
   03D8 0A                 1802 	.db #0x0A
   03D9 12                 1803 	.db #0x12
   03DA 10                 1804 	.db #0x10
   03DB 00                 1805 	.db #0x00
   03DC 12                 1806 	.db #0x12
   03DD 10                 1807 	.db #0x10
   03DE 00                 1808 	.db #0x00
   03DF 02                 1809 	.db #0x02
   03E0 08                 1810 	.db #0x08
   03E1 0A                 1811 	.db #0x0A
   03E2 12                 1812 	.db #0x12
   03E3 10                 1813 	.db #0x10
   03E4 00                 1814 	.db #0x00
   03E5 02                 1815 	.db #0x02
   03E6 08                 1816 	.db #0x08
   03E7 0A                 1817 	.db #0x0A
   03E8 12                 1818 	.db #0x12
   03E9 10                 1819 	.db #0x10
   03EA 00                 1820 	.db #0x00
   03EB 02                 1821 	.db #0x02
   03EC 10                 1822 	.db #0x10
   03ED 00                 1823 	.db #0x00
   03EE 02                 1824 	.db #0x02
   03EF 08                 1825 	.db #0x08
   03F0 0A                 1826 	.db #0x0A
   03F1 12                 1827 	.db #0x12
   03F2 10                 1828 	.db #0x10
   03F3 00                 1829 	.db #0x00
   03F4 02                 1830 	.db #0x02
   03F5 08                 1831 	.db #0x08
   03F6 0A                 1832 	.db #0x0A
   03F7 12                 1833 	.db #0x12
   03F8 10                 1834 	.db #0x10
   03F9 00                 1835 	.db #0x00
   03FA 02                 1836 	.db #0x02
   03FB 08                 1837 	.db #0x08
   03FC 00                 1838 	.db #0x00
   03FD 02                 1839 	.db #0x02
   03FE 08                 1840 	.db #0x08
   03FF 0A                 1841 	.db #0x0A
   0400 12                 1842 	.db #0x12
   0401 10                 1843 	.db #0x10
   0402 00                 1844 	.db #0x00
   0403 02                 1845 	.db #0x02
   0404 08                 1846 	.db #0x08
   0405 0A                 1847 	.db #0x0A
   0406 12                 1848 	.db #0x12
   0407 10                 1849 	.db #0x10
   0408 00                 1850 	.db #0x00
   0409 02                 1851 	.db #0x02
   040A 08                 1852 	.db #0x08
   040B 0A                 1853 	.db #0x0A
   040C 02                 1854 	.db #0x02
   040D 08                 1855 	.db #0x08
   040E 0A                 1856 	.db #0x0A
   040F 12                 1857 	.db #0x12
   0410 10                 1858 	.db #0x10
   0411 00                 1859 	.db #0x00
   0412 02                 1860 	.db #0x02
   0413 08                 1861 	.db #0x08
   0414 0A                 1862 	.db #0x0A
   0415 12                 1863 	.db #0x12
   0416 10                 1864 	.db #0x10
   0417 00                 1865 	.db #0x00
   0418 02                 1866 	.db #0x02
   0419 08                 1867 	.db #0x08
   041A 0A                 1868 	.db #0x0A
   041B 12                 1869 	.db #0x12
   041C 08                 1870 	.db #0x08
   041D 0A                 1871 	.db #0x0A
   041E 12                 1872 	.db #0x12
   041F 10                 1873 	.db #0x10
   0420 00                 1874 	.db #0x00
   0421 02                 1875 	.db #0x02
   0422 08                 1876 	.db #0x08
   0423 0A                 1877 	.db #0x0A
   0424 12                 1878 	.db #0x12
   0425 10                 1879 	.db #0x10
   0426 00                 1880 	.db #0x00
   0427 02                 1881 	.db #0x02
   0428 08                 1882 	.db #0x08
   0429 0A                 1883 	.db #0x0A
   042A 12                 1884 	.db #0x12
   042B 10                 1885 	.db #0x10
   042C                    1886 _tri_side2:
   042C 00                 1887 	.db #0x00
   042D 10                 1888 	.db #0x10
   042E 12                 1889 	.db #0x12
   042F 0A                 1890 	.db #0x0A
   0430 08                 1891 	.db #0x08
   0431 02                 1892 	.db #0x02
   0432 00                 1893 	.db #0x00
   0433 10                 1894 	.db #0x10
   0434 12                 1895 	.db #0x12
   0435 0A                 1896 	.db #0x0A
   0436 08                 1897 	.db #0x08
   0437 02                 1898 	.db #0x02
   0438 00                 1899 	.db #0x00
   0439 10                 1900 	.db #0x10
   043A 12                 1901 	.db #0x12
   043B 0A                 1902 	.db #0x0A
   043C 02                 1903 	.db #0x02
   043D 00                 1904 	.db #0x00
   043E 10                 1905 	.db #0x10
   043F 12                 1906 	.db #0x12
   0440 0A                 1907 	.db #0x0A
   0441 08                 1908 	.db #0x08
   0442 02                 1909 	.db #0x02
   0443 00                 1910 	.db #0x00
   0444 10                 1911 	.db #0x10
   0445 12                 1912 	.db #0x12
   0446 0A                 1913 	.db #0x0A
   0447 08                 1914 	.db #0x08
   0448 02                 1915 	.db #0x02
   0449 00                 1916 	.db #0x00
   044A 10                 1917 	.db #0x10
   044B 12                 1918 	.db #0x12
   044C 08                 1919 	.db #0x08
   044D 02                 1920 	.db #0x02
   044E 00                 1921 	.db #0x00
   044F 10                 1922 	.db #0x10
   0450 12                 1923 	.db #0x12
   0451 0A                 1924 	.db #0x0A
   0452 08                 1925 	.db #0x08
   0453 02                 1926 	.db #0x02
   0454 00                 1927 	.db #0x00
   0455 10                 1928 	.db #0x10
   0456 12                 1929 	.db #0x12
   0457 0A                 1930 	.db #0x0A
   0458 08                 1931 	.db #0x08
   0459 02                 1932 	.db #0x02
   045A 00                 1933 	.db #0x00
   045B 10                 1934 	.db #0x10
   045C 0A                 1935 	.db #0x0A
   045D 08                 1936 	.db #0x08
   045E 02                 1937 	.db #0x02
   045F 00                 1938 	.db #0x00
   0460 10                 1939 	.db #0x10
   0461 12                 1940 	.db #0x12
   0462 0A                 1941 	.db #0x0A
   0463 08                 1942 	.db #0x08
   0464 02                 1943 	.db #0x02
   0465 00                 1944 	.db #0x00
   0466 10                 1945 	.db #0x10
   0467 12                 1946 	.db #0x12
   0468 0A                 1947 	.db #0x0A
   0469 08                 1948 	.db #0x08
   046A 02                 1949 	.db #0x02
   046B 00                 1950 	.db #0x00
   046C 12                 1951 	.db #0x12
   046D 0A                 1952 	.db #0x0A
   046E 08                 1953 	.db #0x08
   046F 02                 1954 	.db #0x02
   0470 00                 1955 	.db #0x00
   0471 10                 1956 	.db #0x10
   0472 12                 1957 	.db #0x12
   0473 0A                 1958 	.db #0x0A
   0474 08                 1959 	.db #0x08
   0475 02                 1960 	.db #0x02
   0476 00                 1961 	.db #0x00
   0477 10                 1962 	.db #0x10
   0478 12                 1963 	.db #0x12
   0479 0A                 1964 	.db #0x0A
   047A 08                 1965 	.db #0x08
   047B 02                 1966 	.db #0x02
   047C 10                 1967 	.db #0x10
   047D 12                 1968 	.db #0x12
   047E 0A                 1969 	.db #0x0A
   047F 08                 1970 	.db #0x08
   0480 02                 1971 	.db #0x02
   0481 00                 1972 	.db #0x00
   0482 10                 1973 	.db #0x10
   0483 12                 1974 	.db #0x12
   0484 0A                 1975 	.db #0x0A
   0485 08                 1976 	.db #0x08
   0486 02                 1977 	.db #0x02
   0487 00                 1978 	.db #0x00
   0488 10                 1979 	.db #0x10
   0489 12                 1980 	.db #0x12
   048A 0A                 1981 	.db #0x0A
   048B 08                 1982 	.db #0x08
   048C 00                 1983 	.db #0x00
   048D 10                 1984 	.db #0x10
   048E 12                 1985 	.db #0x12
   048F 0A                 1986 	.db #0x0A
   0490 08                 1987 	.db #0x08
   0491 02                 1988 	.db #0x02
   0492 00                 1989 	.db #0x00
   0493 10                 1990 	.db #0x10
   0494 12                 1991 	.db #0x12
   0495 0A                 1992 	.db #0x0A
   0496 08                 1993 	.db #0x08
   0497 02                 1994 	.db #0x02
   0498 00                 1995 	.db #0x00
   0499 10                 1996 	.db #0x10
   049A 12                 1997 	.db #0x12
   049B 0A                 1998 	.db #0x0A
   049C 02                 1999 	.db #0x02
   049D 00                 2000 	.db #0x00
   049E 10                 2001 	.db #0x10
   049F 12                 2002 	.db #0x12
   04A0 0A                 2003 	.db #0x0A
   04A1 08                 2004 	.db #0x08
   04A2 02                 2005 	.db #0x02
   04A3 00                 2006 	.db #0x00
   04A4 10                 2007 	.db #0x10
   04A5 12                 2008 	.db #0x12
   04A6 0A                 2009 	.db #0x0A
   04A7 08                 2010 	.db #0x08
   04A8 02                 2011 	.db #0x02
   04A9 00                 2012 	.db #0x00
   04AA 10                 2013 	.db #0x10
   04AB 12                 2014 	.db #0x12
   04AC 08                 2015 	.db #0x08
   04AD 02                 2016 	.db #0x02
   04AE 00                 2017 	.db #0x00
   04AF 10                 2018 	.db #0x10
   04B0 12                 2019 	.db #0x12
   04B1 0A                 2020 	.db #0x0A
   04B2 08                 2021 	.db #0x08
   04B3 02                 2022 	.db #0x02
   04B4 00                 2023 	.db #0x00
   04B5 10                 2024 	.db #0x10
   04B6 12                 2025 	.db #0x12
   04B7 0A                 2026 	.db #0x0A
   04B8 08                 2027 	.db #0x08
   04B9 02                 2028 	.db #0x02
   04BA 00                 2029 	.db #0x00
   04BB 10                 2030 	.db #0x10
   04BC 0A                 2031 	.db #0x0A
   04BD 08                 2032 	.db #0x08
   04BE 02                 2033 	.db #0x02
   04BF 00                 2034 	.db #0x00
   04C0 10                 2035 	.db #0x10
   04C1 12                 2036 	.db #0x12
   04C2 0A                 2037 	.db #0x0A
   04C3 08                 2038 	.db #0x08
   04C4 02                 2039 	.db #0x02
   04C5 00                 2040 	.db #0x00
   04C6 10                 2041 	.db #0x10
   04C7 12                 2042 	.db #0x12
   04C8 0A                 2043 	.db #0x0A
   04C9 08                 2044 	.db #0x08
   04CA 02                 2045 	.db #0x02
   04CB 00                 2046 	.db #0x00
   04CC 12                 2047 	.db #0x12
   04CD 0A                 2048 	.db #0x0A
   04CE 08                 2049 	.db #0x08
   04CF 02                 2050 	.db #0x02
   04D0 00                 2051 	.db #0x00
   04D1 10                 2052 	.db #0x10
   04D2 12                 2053 	.db #0x12
   04D3 0A                 2054 	.db #0x0A
   04D4 08                 2055 	.db #0x08
   04D5 02                 2056 	.db #0x02
   04D6 00                 2057 	.db #0x00
   04D7 10                 2058 	.db #0x10
   04D8 12                 2059 	.db #0x12
   04D9 0A                 2060 	.db #0x0A
   04DA 08                 2061 	.db #0x08
   04DB 02                 2062 	.db #0x02
   04DC 10                 2063 	.db #0x10
   04DD 12                 2064 	.db #0x12
   04DE 0A                 2065 	.db #0x0A
   04DF 08                 2066 	.db #0x08
   04E0 02                 2067 	.db #0x02
   04E1 00                 2068 	.db #0x00
   04E2 10                 2069 	.db #0x10
   04E3 12                 2070 	.db #0x12
   04E4 0A                 2071 	.db #0x0A
   04E5 08                 2072 	.db #0x08
   04E6 02                 2073 	.db #0x02
   04E7 00                 2074 	.db #0x00
   04E8 10                 2075 	.db #0x10
   04E9 12                 2076 	.db #0x12
   04EA 0A                 2077 	.db #0x0A
   04EB 08                 2078 	.db #0x08
   04EC                    2079 _tri_inva1:
   04EC 1E                 2080 	.db #0x1E
   04ED 1F                 2081 	.db #0x1F
   04EE 1E                 2082 	.db #0x1E
   04EF 11                 2083 	.db #0x11
   04F0 13                 2084 	.db #0x13
   04F1 1E                 2085 	.db #0x1E
   04F2 08                 2086 	.db #0x08
   04F3 0A                 2087 	.db #0x0A
   04F4 00                 2088 	.db #0x00
   04F5 0E                 2089 	.db #0x0E
   04F6 10                 2090 	.db #0x10
   04F7 1E                 2091 	.db #0x1E
   04F8 1C                 2092 	.db #0x1C
   04F9 1E                 2093 	.db #0x1E
   04FA 08                 2094 	.db #0x08
   04FB 0A                 2095 	.db #0x0A
   04FC 1F                 2096 	.db #0x1F
   04FD 1F                 2097 	.db #0x1F
   04FE 1E                 2098 	.db #0x1E
   04FF 1E                 2099 	.db #0x1E
   0500 15                 2100 	.db #0x15
   0501 17                 2101 	.db #0x17
   0502 0A                 2102 	.db #0x0A
   0503 00                 2103 	.db #0x00
   0504 02                 2104 	.db #0x02
   0505 11                 2105 	.db #0x11
   0506 13                 2106 	.db #0x13
   0507 1F                 2107 	.db #0x1F
   0508 1C                 2108 	.db #0x1C
   0509 08                 2109 	.db #0x08
   050A 0A                 2110 	.db #0x0A
   050B 1F                 2111 	.db #0x1F
   050C 1E                 2112 	.db #0x1E
   050D 1F                 2113 	.db #0x1F
   050E 08                 2114 	.db #0x08
   050F 1B                 2115 	.db #0x1B
   0510 1A                 2116 	.db #0x1A
   0511 11                 2117 	.db #0x11
   0512 13                 2118 	.db #0x13
   0513 1C                 2119 	.db #0x1C
   0514 1E                 2120 	.db #0x1E
   0515 1F                 2121 	.db #0x1F
   0516 19                 2122 	.db #0x19
   0517 1E                 2123 	.db #0x1E
   0518 06                 2124 	.db #0x06
   0519 04                 2125 	.db #0x04
   051A 1C                 2126 	.db #0x1C
   051B 1C                 2127 	.db #0x1C
   051C 1E                 2128 	.db #0x1E
   051D 08                 2129 	.db #0x08
   051E 16                 2130 	.db #0x16
   051F 18                 2131 	.db #0x18
   0520 1B                 2132 	.db #0x1B
   0521 1E                 2133 	.db #0x1E
   0522 19                 2134 	.db #0x19
   0523 1D                 2135 	.db #0x1D
   0524 1F                 2136 	.db #0x1F
   0525 1E                 2137 	.db #0x1E
   0526 19                 2138 	.db #0x19
   0527 08                 2139 	.db #0x08
   0528 1B                 2140 	.db #0x1B
   0529 1E                 2141 	.db #0x1E
   052A 12                 2142 	.db #0x12
   052B 10                 2143 	.db #0x10
   052C 08                 2144 	.db #0x08
   052D 16                 2145 	.db #0x16
   052E 10                 2146 	.db #0x10
   052F 11                 2147 	.db #0x11
   0530 17                 2148 	.db #0x17
   0531 09                 2149 	.db #0x09
   0532 11                 2150 	.db #0x11
   0533 0F                 2151 	.db #0x0F
   0534 01                 2152 	.db #0x01
   0535 1E                 2153 	.db #0x1E
   0536 14                 2154 	.db #0x14
   0537 16                 2155 	.db #0x16
   0538 17                 2156 	.db #0x17
   0539 15                 2157 	.db #0x15
   053A 10                 2158 	.db #0x10
   053B 1E                 2159 	.db #0x1E
   053C 0A                 2160 	.db #0x0A
   053D 18                 2161 	.db #0x18
   053E 1F                 2162 	.db #0x1F
   053F 1E                 2163 	.db #0x1E
   0540 19                 2164 	.db #0x19
   0541 0B                 2165 	.db #0x0B
   0542 09                 2166 	.db #0x09
   0543 11                 2167 	.db #0x11
   0544 0F                 2168 	.db #0x0F
   0545 1C                 2169 	.db #0x1C
   0546 05                 2170 	.db #0x05
   0547 09                 2171 	.db #0x09
   0548 1E                 2172 	.db #0x1E
   0549 0B                 2173 	.db #0x0B
   054A 09                 2174 	.db #0x09
   054B 1F                 2175 	.db #0x1F
   054C 1E                 2176 	.db #0x1E
   054D 19                 2177 	.db #0x19
   054E 1E                 2178 	.db #0x1E
   054F 1F                 2179 	.db #0x1F
   0550 19                 2180 	.db #0x19
   0551 1E                 2181 	.db #0x1E
   0552 0B                 2182 	.db #0x0B
   0553 1B                 2183 	.db #0x1B
   0554 15                 2184 	.db #0x15
   0555 19                 2185 	.db #0x19
   0556 1D                 2186 	.db #0x1D
   0557 19                 2187 	.db #0x19
   0558 19                 2188 	.db #0x19
   0559 13                 2189 	.db #0x13
   055A 0B                 2190 	.db #0x0B
   055B 09                 2191 	.db #0x09
   055C 1E                 2192 	.db #0x1E
   055D 15                 2193 	.db #0x15
   055E 13                 2194 	.db #0x13
   055F 1E                 2195 	.db #0x1E
   0560 0C                 2196 	.db #0x0C
   0561 01                 2197 	.db #0x01
   0562 1E                 2198 	.db #0x1E
   0563 1F                 2199 	.db #0x1F
   0564 1E                 2200 	.db #0x1E
   0565 1E                 2201 	.db #0x1E
   0566 1C                 2202 	.db #0x1C
   0567 1D                 2203 	.db #0x1D
   0568 01                 2204 	.db #0x01
   0569 11                 2205 	.db #0x11
   056A 13                 2206 	.db #0x13
   056B 0B                 2207 	.db #0x0B
   056C 09                 2208 	.db #0x09
   056D 1A                 2209 	.db #0x1A
   056E 14                 2210 	.db #0x14
   056F 04                 2211 	.db #0x04
   0570 0E                 2212 	.db #0x0E
   0571 07                 2213 	.db #0x07
   0572 01                 2214 	.db #0x01
   0573 1E                 2215 	.db #0x1E
   0574 1F                 2216 	.db #0x1F
   0575 00                 2217 	.db #0x00
   0576 02                 2218 	.db #0x02
   0577 1E                 2219 	.db #0x1E
   0578 03                 2220 	.db #0x03
   0579 01                 2221 	.db #0x01
   057A 0C                 2222 	.db #0x0C
   057B 06                 2223 	.db #0x06
   057C 0B                 2224 	.db #0x0B
   057D 1B                 2225 	.db #0x1B
   057E 04                 2226 	.db #0x04
   057F 0E                 2227 	.db #0x0E
   0580 19                 2228 	.db #0x19
   0581 17                 2229 	.db #0x17
   0582 07                 2230 	.db #0x07
   0583 1D                 2231 	.db #0x1D
   0584 1C                 2232 	.db #0x1C
   0585 02                 2233 	.db #0x02
   0586 1F                 2234 	.db #0x1F
   0587 1E                 2235 	.db #0x1E
   0588 08                 2236 	.db #0x08
   0589 07                 2237 	.db #0x07
   058A 06                 2238 	.db #0x06
   058B 1E                 2239 	.db #0x1E
   058C 08                 2240 	.db #0x08
   058D 04                 2241 	.db #0x04
   058E 0E                 2242 	.db #0x0E
   058F 14                 2243 	.db #0x14
   0590 09                 2244 	.db #0x09
   0591 11                 2245 	.db #0x11
   0592 17                 2246 	.db #0x17
   0593 07                 2247 	.db #0x07
   0594 1D                 2248 	.db #0x1D
   0595 1F                 2249 	.db #0x1F
   0596 1E                 2250 	.db #0x1E
   0597 08                 2251 	.db #0x08
   0598 0A                 2252 	.db #0x0A
   0599 1E                 2253 	.db #0x1E
   059A 1F                 2254 	.db #0x1F
   059B 1F                 2255 	.db #0x1F
   059C 04                 2256 	.db #0x04
   059D 0E                 2257 	.db #0x0E
   059E 14                 2258 	.db #0x14
   059F 0A                 2259 	.db #0x0A
   05A0 0B                 2260 	.db #0x0B
   05A1 09                 2261 	.db #0x09
   05A2 11                 2262 	.db #0x11
   05A3 17                 2263 	.db #0x17
   05A4 07                 2264 	.db #0x07
   05A5 01                 2265 	.db #0x01
   05A6 08                 2266 	.db #0x08
   05A7 0A                 2267 	.db #0x0A
   05A8 1E                 2268 	.db #0x1E
   05A9 1F                 2269 	.db #0x1F
   05AA 1F                 2270 	.db #0x1F
   05AB 1E                 2271 	.db #0x1E
   05AC                    2272 _tri_inva2:
   05AC 14                 2273 	.db #0x14
   05AD 04                 2274 	.db #0x04
   05AE 0E                 2275 	.db #0x0E
   05AF 14                 2276 	.db #0x14
   05B0 04                 2277 	.db #0x04
   05B1 0E                 2278 	.db #0x0E
   05B2 14                 2279 	.db #0x14
   05B3 1A                 2280 	.db #0x1A
   05B4 1B                 2281 	.db #0x1B
   05B5 15                 2282 	.db #0x15
   05B6 0F                 2283 	.db #0x0F
   05B7 05                 2284 	.db #0x05
   05B8 15                 2285 	.db #0x15
   05B9 0F                 2286 	.db #0x0F
   05BA 05                 2287 	.db #0x05
   05BB 15                 2288 	.db #0x15
   05BC 04                 2289 	.db #0x04
   05BD 0E                 2290 	.db #0x0E
   05BE 14                 2291 	.db #0x14
   05BF 04                 2292 	.db #0x04
   05C0 0E                 2293 	.db #0x0E
   05C1 14                 2294 	.db #0x14
   05C2 04                 2295 	.db #0x04
   05C3 1C                 2296 	.db #0x1C
   05C4 1D                 2297 	.db #0x1D
   05C5 05                 2298 	.db #0x05
   05C6 15                 2299 	.db #0x15
   05C7 0F                 2300 	.db #0x0F
   05C8 05                 2301 	.db #0x05
   05C9 15                 2302 	.db #0x15
   05CA 0F                 2303 	.db #0x0F
   05CB 05                 2304 	.db #0x05
   05CC 0E                 2305 	.db #0x0E
   05CD 14                 2306 	.db #0x14
   05CE 04                 2307 	.db #0x04
   05CF 0E                 2308 	.db #0x0E
   05D0 14                 2309 	.db #0x14
   05D1 04                 2310 	.db #0x04
   05D2 0E                 2311 	.db #0x0E
   05D3 18                 2312 	.db #0x18
   05D4 19                 2313 	.db #0x19
   05D5 0F                 2314 	.db #0x0F
   05D6 05                 2315 	.db #0x05
   05D7 15                 2316 	.db #0x15
   05D8 0F                 2317 	.db #0x0F
   05D9 05                 2318 	.db #0x05
   05DA 15                 2319 	.db #0x15
   05DB 0F                 2320 	.db #0x0F
   05DC 18                 2321 	.db #0x18
   05DD 1A                 2322 	.db #0x1A
   05DE 1C                 2323 	.db #0x1C
   05DF 18                 2324 	.db #0x18
   05E0 1A                 2325 	.db #0x1A
   05E1 1C                 2326 	.db #0x1C
   05E2 18                 2327 	.db #0x18
   05E3 18                 2328 	.db #0x18
   05E4 19                 2329 	.db #0x19
   05E5 19                 2330 	.db #0x19
   05E6 1D                 2331 	.db #0x1D
   05E7 1B                 2332 	.db #0x1B
   05E8 19                 2333 	.db #0x19
   05E9 1D                 2334 	.db #0x1D
   05EA 1B                 2335 	.db #0x1B
   05EB 19                 2336 	.db #0x19
   05EC 18                 2337 	.db #0x18
   05ED 1A                 2338 	.db #0x1A
   05EE 1C                 2339 	.db #0x1C
   05EF 18                 2340 	.db #0x18
   05F0 1A                 2341 	.db #0x1A
   05F1 1C                 2342 	.db #0x1C
   05F2 18                 2343 	.db #0x18
   05F3 18                 2344 	.db #0x18
   05F4 0D                 2345 	.db #0x0D
   05F5 19                 2346 	.db #0x19
   05F6 1D                 2347 	.db #0x1D
   05F7 1B                 2348 	.db #0x1B
   05F8 19                 2349 	.db #0x19
   05F9 1D                 2350 	.db #0x1D
   05FA 1B                 2351 	.db #0x1B
   05FB 19                 2352 	.db #0x19
   05FC 19                 2353 	.db #0x19
   05FD 1B                 2354 	.db #0x1B
   05FE 1D                 2355 	.db #0x1D
   05FF 19                 2356 	.db #0x19
   0600 1B                 2357 	.db #0x1B
   0601 1D                 2358 	.db #0x1D
   0602 19                 2359 	.db #0x19
   0603 0C                 2360 	.db #0x0C
   0604 0E                 2361 	.db #0x0E
   0605 18                 2362 	.db #0x18
   0606 1C                 2363 	.db #0x1C
   0607 1A                 2364 	.db #0x1A
   0608 18                 2365 	.db #0x18
   0609 1C                 2366 	.db #0x1C
   060A 1A                 2367 	.db #0x1A
   060B 18                 2368 	.db #0x18
   060C 19                 2369 	.db #0x19
   060D 1B                 2370 	.db #0x1B
   060E 1D                 2371 	.db #0x1D
   060F 19                 2372 	.db #0x19
   0610 1B                 2373 	.db #0x1B
   0611 1D                 2374 	.db #0x1D
   0612 19                 2375 	.db #0x19
   0613 0F                 2376 	.db #0x0F
   0614 0D                 2377 	.db #0x0D
   0615 18                 2378 	.db #0x18
   0616 1C                 2379 	.db #0x1C
   0617 1A                 2380 	.db #0x1A
   0618 18                 2381 	.db #0x18
   0619 1C                 2382 	.db #0x1C
   061A 1A                 2383 	.db #0x1A
   061B 18                 2384 	.db #0x18
   061C 0D                 2385 	.db #0x0D
   061D 17                 2386 	.db #0x17
   061E 07                 2387 	.db #0x07
   061F 0D                 2388 	.db #0x0D
   0620 17                 2389 	.db #0x17
   0621 07                 2390 	.db #0x07
   0622 0D                 2391 	.db #0x0D
   0623 0C                 2392 	.db #0x0C
   0624 0E                 2393 	.db #0x0E
   0625 0C                 2394 	.db #0x0C
   0626 06                 2395 	.db #0x06
   0627 16                 2396 	.db #0x16
   0628 0C                 2397 	.db #0x0C
   0629 06                 2398 	.db #0x06
   062A 16                 2399 	.db #0x16
   062B 0C                 2400 	.db #0x0C
   062C 07                 2401 	.db #0x07
   062D 0D                 2402 	.db #0x0D
   062E 17                 2403 	.db #0x17
   062F 07                 2404 	.db #0x07
   0630 0D                 2405 	.db #0x0D
   0631 17                 2406 	.db #0x17
   0632 02                 2407 	.db #0x02
   0633 1A                 2408 	.db #0x1A
   0634 1A                 2409 	.db #0x1A
   0635 03                 2410 	.db #0x03
   0636 16                 2411 	.db #0x16
   0637 0C                 2412 	.db #0x0C
   0638 06                 2413 	.db #0x06
   0639 16                 2414 	.db #0x16
   063A 0C                 2415 	.db #0x0C
   063B 06                 2416 	.db #0x06
   063C 17                 2417 	.db #0x17
   063D 07                 2418 	.db #0x07
   063E 0D                 2419 	.db #0x0D
   063F 17                 2420 	.db #0x17
   0640 07                 2421 	.db #0x07
   0641 10                 2422 	.db #0x10
   0642 1F                 2423 	.db #0x1F
   0643 1A                 2424 	.db #0x1A
   0644 1A                 2425 	.db #0x1A
   0645 1F                 2426 	.db #0x1F
   0646 11                 2427 	.db #0x11
   0647 06                 2428 	.db #0x06
   0648 16                 2429 	.db #0x16
   0649 0C                 2430 	.db #0x0C
   064A 06                 2431 	.db #0x06
   064B 16                 2432 	.db #0x16
   064C 0D                 2433 	.db #0x0D
   064D 17                 2434 	.db #0x17
   064E 07                 2435 	.db #0x07
   064F 0D                 2436 	.db #0x0D
   0650 0A                 2437 	.db #0x0A
   0651 1F                 2438 	.db #0x1F
   0652 1F                 2439 	.db #0x1F
   0653 1A                 2440 	.db #0x1A
   0654 1A                 2441 	.db #0x1A
   0655 1F                 2442 	.db #0x1F
   0656 1F                 2443 	.db #0x1F
   0657 0B                 2444 	.db #0x0B
   0658 0C                 2445 	.db #0x0C
   0659 06                 2446 	.db #0x06
   065A 16                 2447 	.db #0x16
   065B 0C                 2448 	.db #0x0C
   065C 07                 2449 	.db #0x07
   065D 0D                 2450 	.db #0x0D
   065E 17                 2451 	.db #0x17
   065F 02                 2452 	.db #0x02
   0660 1F                 2453 	.db #0x1F
   0661 1F                 2454 	.db #0x1F
   0662 1F                 2455 	.db #0x1F
   0663 1F                 2456 	.db #0x1F
   0664 1F                 2457 	.db #0x1F
   0665 1F                 2458 	.db #0x1F
   0666 1F                 2459 	.db #0x1F
   0667 1F                 2460 	.db #0x1F
   0668 03                 2461 	.db #0x03
   0669 16                 2462 	.db #0x16
   066A 0C                 2463 	.db #0x0C
   066B 06                 2464 	.db #0x06
   066C                    2465 _tri_inva3:
   066C 1A                 2466 	.db #0x1A
   066D 1C                 2467 	.db #0x1C
   066E 18                 2468 	.db #0x18
   066F 1A                 2469 	.db #0x1A
   0670 1C                 2470 	.db #0x1C
   0671 18                 2471 	.db #0x18
   0672 1A                 2472 	.db #0x1A
   0673 1E                 2473 	.db #0x1E
   0674 00                 2474 	.db #0x00
   0675 1C                 2475 	.db #0x1C
   0676 1C                 2476 	.db #0x1C
   0677 1D                 2477 	.db #0x1D
   0678 1C                 2478 	.db #0x1C
   0679 1C                 2479 	.db #0x1C
   067A 1D                 2480 	.db #0x1D
   067B 1C                 2481 	.db #0x1C
   067C 1A                 2482 	.db #0x1A
   067D 1C                 2483 	.db #0x1C
   067E 18                 2484 	.db #0x18
   067F 1A                 2485 	.db #0x1A
   0680 1C                 2486 	.db #0x1C
   0681 18                 2487 	.db #0x18
   0682 1A                 2488 	.db #0x1A
   0683 1F                 2489 	.db #0x1F
   0684 1C                 2490 	.db #0x1C
   0685 18                 2491 	.db #0x18
   0686 1F                 2492 	.db #0x1F
   0687 1C                 2493 	.db #0x1C
   0688 1D                 2494 	.db #0x1D
   0689 1D                 2495 	.db #0x1D
   068A 1C                 2496 	.db #0x1C
   068B 1D                 2497 	.db #0x1D
   068C 04                 2498 	.db #0x04
   068D 0E                 2499 	.db #0x0E
   068E 14                 2500 	.db #0x14
   068F 04                 2501 	.db #0x04
   0690 0E                 2502 	.db #0x0E
   0691 14                 2503 	.db #0x14
   0692 0A                 2504 	.db #0x0A
   0693 1E                 2505 	.db #0x1E
   0694 1C                 2506 	.db #0x1C
   0695 0D                 2507 	.db #0x0D
   0696 18                 2508 	.db #0x18
   0697 1C                 2509 	.db #0x1C
   0698 1C                 2510 	.db #0x1C
   0699 1C                 2511 	.db #0x1C
   069A 1C                 2512 	.db #0x1C
   069B 1C                 2513 	.db #0x1C
   069C 1C                 2514 	.db #0x1C
   069D 18                 2515 	.db #0x18
   069E 1A                 2516 	.db #0x1A
   069F 1C                 2517 	.db #0x1C
   06A0 18                 2518 	.db #0x18
   06A1 1A                 2519 	.db #0x1A
   06A2 1E                 2520 	.db #0x1E
   06A3 00                 2521 	.db #0x00
   06A4 1C                 2522 	.db #0x1C
   06A5 1D                 2523 	.db #0x1D
   06A6 1C                 2524 	.db #0x1C
   06A7 1C                 2525 	.db #0x1C
   06A8 1D                 2526 	.db #0x1D
   06A9 18                 2527 	.db #0x18
   06AA 0F                 2528 	.db #0x0F
   06AB 1C                 2529 	.db #0x1C
   06AC 1C                 2530 	.db #0x1C
   06AD 18                 2531 	.db #0x18
   06AE 1A                 2532 	.db #0x1A
   06AF 1C                 2533 	.db #0x1C
   06B0 18                 2534 	.db #0x18
   06B1 1A                 2535 	.db #0x1A
   06B2 1F                 2536 	.db #0x1F
   06B3 1C                 2537 	.db #0x1C
   06B4 1D                 2538 	.db #0x1D
   06B5 02                 2539 	.db #0x02
   06B6 1C                 2540 	.db #0x1C
   06B7 02                 2541 	.db #0x02
   06B8 1D                 2542 	.db #0x1D
   06B9 1F                 2543 	.db #0x1F
   06BA 18                 2544 	.db #0x18
   06BB 1C                 2545 	.db #0x1C
   06BC 1C                 2546 	.db #0x1C
   06BD 18                 2547 	.db #0x18
   06BE 1A                 2548 	.db #0x1A
   06BF 1C                 2549 	.db #0x1C
   06C0 18                 2550 	.db #0x18
   06C1 1A                 2551 	.db #0x1A
   06C2 1F                 2552 	.db #0x1F
   06C3 03                 2553 	.db #0x03
   06C4 1C                 2554 	.db #0x1C
   06C5 1D                 2555 	.db #0x1D
   06C6 1C                 2556 	.db #0x1C
   06C7 1C                 2557 	.db #0x1C
   06C8 1C                 2558 	.db #0x1C
   06C9 1C                 2559 	.db #0x1C
   06CA 1D                 2560 	.db #0x1D
   06CB 1C                 2561 	.db #0x1C
   06CC 0E                 2562 	.db #0x0E
   06CD 14                 2563 	.db #0x14
   06CE 04                 2564 	.db #0x04
   06CF 0E                 2565 	.db #0x0E
   06D0 14                 2566 	.db #0x14
   06D1 0A                 2567 	.db #0x0A
   06D2 1E                 2568 	.db #0x1E
   06D3 00                 2569 	.db #0x00
   06D4 0B                 2570 	.db #0x0B
   06D5 0A                 2571 	.db #0x0A
   06D6 0B                 2572 	.db #0x0B
   06D7 0A                 2573 	.db #0x0A
   06D8 0B                 2574 	.db #0x0B
   06D9 0A                 2575 	.db #0x0A
   06DA 1D                 2576 	.db #0x1D
   06DB 1C                 2577 	.db #0x1C
   06DC 14                 2578 	.db #0x14
   06DD 04                 2579 	.db #0x04
   06DE 0E                 2580 	.db #0x0E
   06DF 14                 2581 	.db #0x14
   06E0 0A                 2582 	.db #0x0A
   06E1 1F                 2583 	.db #0x1F
   06E2 1E                 2584 	.db #0x1E
   06E3 1C                 2585 	.db #0x1C
   06E4 1F                 2586 	.db #0x1F
   06E5 1E                 2587 	.db #0x1E
   06E6 1F                 2588 	.db #0x1F
   06E7 1E                 2589 	.db #0x1E
   06E8 1F                 2590 	.db #0x1F
   06E9 1E                 2591 	.db #0x1E
   06EA 1D                 2592 	.db #0x1D
   06EB 1C                 2593 	.db #0x1C
   06EC 1A                 2594 	.db #0x1A
   06ED 1C                 2595 	.db #0x1C
   06EE 18                 2596 	.db #0x18
   06EF 1A                 2597 	.db #0x1A
   06F0 1F                 2598 	.db #0x1F
   06F1 12                 2599 	.db #0x12
   06F2 18                 2600 	.db #0x18
   06F3 18                 2601 	.db #0x18
   06F4 19                 2602 	.db #0x19
   06F5 19                 2603 	.db #0x19
   06F6 13                 2604 	.db #0x13
   06F7 1E                 2605 	.db #0x1E
   06F8 1F                 2606 	.db #0x1F
   06F9 1E                 2607 	.db #0x1E
   06FA 1D                 2608 	.db #0x1D
   06FB 1C                 2609 	.db #0x1C
   06FC 1B                 2610 	.db #0x1B
   06FD 1D                 2611 	.db #0x1D
   06FE 19                 2612 	.db #0x19
   06FF 1B                 2613 	.db #0x1B
   0700 1E                 2614 	.db #0x1E
   0701 18                 2615 	.db #0x18
   0702 18                 2616 	.db #0x18
   0703 18                 2617 	.db #0x18
   0704 19                 2618 	.db #0x19
   0705 19                 2619 	.db #0x19
   0706 19                 2620 	.db #0x19
   0707 13                 2621 	.db #0x13
   0708 1F                 2622 	.db #0x1F
   0709 00                 2623 	.db #0x00
   070A 1C                 2624 	.db #0x1C
   070B 1C                 2625 	.db #0x1C
   070C 1B                 2626 	.db #0x1B
   070D 1D                 2627 	.db #0x1D
   070E 19                 2628 	.db #0x19
   070F 1B                 2629 	.db #0x1B
   0710 1F                 2630 	.db #0x1F
   0711 18                 2631 	.db #0x18
   0712 18                 2632 	.db #0x18
   0713 0C                 2633 	.db #0x0C
   0714 1C                 2634 	.db #0x1C
   0715 1C                 2635 	.db #0x1C
   0716 1C                 2636 	.db #0x1C
   0717 1C                 2637 	.db #0x1C
   0718 1C                 2638 	.db #0x1C
   0719 1C                 2639 	.db #0x1C
   071A 1C                 2640 	.db #0x1C
   071B 1C                 2641 	.db #0x1C
   071C 17                 2642 	.db #0x17
   071D 07                 2643 	.db #0x07
   071E 0D                 2644 	.db #0x0D
   071F 17                 2645 	.db #0x17
   0720 09                 2646 	.db #0x09
   0721 1E                 2647 	.db #0x1E
   0722 1F                 2648 	.db #0x1F
   0723 1D                 2649 	.db #0x1D
   0724 1D                 2650 	.db #0x1D
   0725 1D                 2651 	.db #0x1D
   0726 1C                 2652 	.db #0x1C
   0727 1D                 2653 	.db #0x1D
   0728 1C                 2654 	.db #0x1C
   0729 1C                 2655 	.db #0x1C
   072A 1C                 2656 	.db #0x1C
   072B 1C                 2657 	.db #0x1C
   072C                    2658 _tri_inva4:
   072C 1E                 2659 	.db #0x1E
   072D 00                 2660 	.db #0x00
   072E 05                 2661 	.db #0x05
   072F 0A                 2662 	.db #0x0A
   0730 1E                 2663 	.db #0x1E
   0731 00                 2664 	.db #0x00
   0732 06                 2665 	.db #0x06
   0733 16                 2666 	.db #0x16
   0734 0F                 2667 	.db #0x0F
   0735 01                 2668 	.db #0x01
   0736 1F                 2669 	.db #0x1F
   0737 11                 2670 	.db #0x11
   0738 0C                 2671 	.db #0x0C
   0739 01                 2672 	.db #0x01
   073A 1F                 2673 	.db #0x1F
   073B 1F                 2674 	.db #0x1F
   073C 12                 2675 	.db #0x12
   073D 0F                 2676 	.db #0x0F
   073E 02                 2677 	.db #0x02
   073F 1E                 2678 	.db #0x1E
   0740 12                 2679 	.db #0x12
   0741 0F                 2680 	.db #0x0F
   0742 05                 2681 	.db #0x05
   0743 15                 2682 	.db #0x15
   0744 0C                 2683 	.db #0x0C
   0745 06                 2684 	.db #0x06
   0746 09                 2685 	.db #0x09
   0747 1F                 2686 	.db #0x1F
   0748 03                 2687 	.db #0x03
   0749 06                 2688 	.db #0x06
   074A 09                 2689 	.db #0x09
   074B 1F                 2690 	.db #0x1F
   074C 15                 2691 	.db #0x15
   074D 10                 2692 	.db #0x10
   074E 1E                 2693 	.db #0x1E
   074F 08                 2694 	.db #0x08
   0750 15                 2695 	.db #0x15
   0751 10                 2696 	.db #0x10
   0752 1E                 2697 	.db #0x1E
   0753 1F                 2698 	.db #0x1F
   0754 1F                 2699 	.db #0x1F
   0755 0B                 2700 	.db #0x0B
   0756 16                 2701 	.db #0x16
   0757 13                 2702 	.db #0x13
   0758 1F                 2703 	.db #0x1F
   0759 0B                 2704 	.db #0x0B
   075A 16                 2705 	.db #0x16
   075B 13                 2706 	.db #0x13
   075C 05                 2707 	.db #0x05
   075D 1E                 2708 	.db #0x1E
   075E 00                 2709 	.db #0x00
   075F 05                 2710 	.db #0x05
   0760 0A                 2711 	.db #0x0A
   0761 1E                 2712 	.db #0x1E
   0762 08                 2713 	.db #0x08
   0763 15                 2714 	.db #0x15
   0764 13                 2715 	.db #0x13
   0765 1F                 2716 	.db #0x1F
   0766 11                 2717 	.db #0x11
   0767 0D                 2718 	.db #0x0D
   0768 01                 2719 	.db #0x01
   0769 1F                 2720 	.db #0x1F
   076A 0C                 2721 	.db #0x0C
   076B 0D                 2722 	.db #0x0D
   076C 02                 2723 	.db #0x02
   076D 1E                 2724 	.db #0x1E
   076E 0E                 2725 	.db #0x0E
   076F 0F                 2726 	.db #0x0F
   0770 1E                 2727 	.db #0x1E
   0771 00                 2728 	.db #0x00
   0772 05                 2729 	.db #0x05
   0773 15                 2730 	.db #0x15
   0774 0C                 2731 	.db #0x0C
   0775 01                 2732 	.db #0x01
   0776 1F                 2733 	.db #0x1F
   0777 07                 2734 	.db #0x07
   0778 07                 2735 	.db #0x07
   0779 1F                 2736 	.db #0x1F
   077A 06                 2737 	.db #0x06
   077B 07                 2738 	.db #0x07
   077C 1E                 2739 	.db #0x1E
   077D 1E                 2740 	.db #0x1E
   077E 15                 2741 	.db #0x15
   077F 15                 2742 	.db #0x15
   0780 1E                 2743 	.db #0x1E
   0781 0F                 2744 	.db #0x0F
   0782 02                 2745 	.db #0x02
   0783 1E                 2746 	.db #0x1E
   0784 07                 2747 	.db #0x07
   0785 06                 2748 	.db #0x06
   0786 1F                 2749 	.db #0x1F
   0787 17                 2750 	.db #0x17
   0788 17                 2751 	.db #0x17
   0789 1E                 2752 	.db #0x1E
   078A 17                 2753 	.db #0x17
   078B 16                 2754 	.db #0x16
   078C 1F                 2755 	.db #0x1F
   078D 1F                 2756 	.db #0x1F
   078E 04                 2757 	.db #0x04
   078F 05                 2758 	.db #0x05
   0790 1F                 2759 	.db #0x1F
   0791 14                 2760 	.db #0x14
   0792 09                 2761 	.db #0x09
   0793 11                 2762 	.db #0x11
   0794 17                 2763 	.db #0x17
   0795 0A                 2764 	.db #0x0A
   0796 1E                 2765 	.db #0x1E
   0797 0D                 2766 	.db #0x0D
   0798 0D                 2767 	.db #0x0D
   0799 1E                 2768 	.db #0x1E
   079A 0D                 2769 	.db #0x0D
   079B 0C                 2770 	.db #0x0C
   079C 09                 2771 	.db #0x09
   079D 1F                 2772 	.db #0x1F
   079E 0E                 2773 	.db #0x0E
   079F 0F                 2774 	.db #0x0F
   07A0 1F                 2775 	.db #0x1F
   07A1 04                 2776 	.db #0x04
   07A2 04                 2777 	.db #0x04
   07A3 1F                 2778 	.db #0x1F
   07A4 1F                 2779 	.db #0x1F
   07A5 1E                 2780 	.db #0x1E
   07A6 08                 2781 	.db #0x08
   07A7 06                 2782 	.db #0x06
   07A8 07                 2783 	.db #0x07
   07A9 1E                 2784 	.db #0x1E
   07AA 07                 2785 	.db #0x07
   07AB 06                 2786 	.db #0x06
   07AC 04                 2787 	.db #0x04
   07AD 1F                 2788 	.db #0x1F
   07AE 11                 2789 	.db #0x11
   07AF 14                 2790 	.db #0x14
   07B0 1F                 2791 	.db #0x1F
   07B1 03                 2792 	.db #0x03
   07B2 0E                 2793 	.db #0x0E
   07B3 14                 2794 	.db #0x14
   07B4 07                 2795 	.db #0x07
   07B5 0D                 2796 	.db #0x0D
   07B6 17                 2797 	.db #0x17
   07B7 0A                 2798 	.db #0x0A
   07B8 1E                 2799 	.db #0x1E
   07B9 12                 2800 	.db #0x12
   07BA 17                 2801 	.db #0x17
   07BB 0A                 2802 	.db #0x0A
   07BC 0E                 2803 	.db #0x0E
   07BD 1F                 2804 	.db #0x1F
   07BE 1F                 2805 	.db #0x1F
   07BF 04                 2806 	.db #0x04
   07C0 01                 2807 	.db #0x01
   07C1 1F                 2808 	.db #0x1F
   07C2 11                 2809 	.db #0x11
   07C3 17                 2810 	.db #0x17
   07C4 07                 2811 	.db #0x07
   07C5 0D                 2812 	.db #0x0D
   07C6 10                 2813 	.db #0x10
   07C7 1E                 2814 	.db #0x1E
   07C8 00                 2815 	.db #0x00
   07C9 0D                 2816 	.db #0x0D
   07CA 10                 2817 	.db #0x10
   07CB 1E                 2818 	.db #0x1E
   07CC 14                 2819 	.db #0x14
   07CD 09                 2820 	.db #0x09
   07CE 1F                 2821 	.db #0x1F
   07CF 03                 2822 	.db #0x03
   07D0 0E                 2823 	.db #0x0E
   07D1 13                 2824 	.db #0x13
   07D2 1F                 2825 	.db #0x1F
   07D3 1F                 2826 	.db #0x1F
   07D4 1F                 2827 	.db #0x1F
   07D5 1E                 2828 	.db #0x1E
   07D6 1E                 2829 	.db #0x1E
   07D7 08                 2830 	.db #0x08
   07D8 07                 2831 	.db #0x07
   07D9 02                 2832 	.db #0x02
   07DA 1E                 2833 	.db #0x1E
   07DB 1E                 2834 	.db #0x1E
   07DC 0B                 2835 	.db #0x0B
   07DD 04                 2836 	.db #0x04
   07DE 01                 2837 	.db #0x01
   07DF 1F                 2838 	.db #0x1F
   07E0 11                 2839 	.db #0x11
   07E1 14                 2840 	.db #0x14
   07E2 04                 2841 	.db #0x04
   07E3 0E                 2842 	.db #0x0E
   07E4 17                 2843 	.db #0x17
   07E5 07                 2844 	.db #0x07
   07E6 0D                 2845 	.db #0x0D
   07E7 17                 2846 	.db #0x17
   07E8 0A                 2847 	.db #0x0A
   07E9 1E                 2848 	.db #0x1E
   07EA 1E                 2849 	.db #0x1E
   07EB 1E                 2850 	.db #0x1E
                           2851 ;demo.c:236: void my_isr(void) interrupt
                           2852 ;	---------------------------------
                           2853 ; Function my_isr
                           2854 ; ---------------------------------
   07EC                    2855 _my_isr_start::
   07EC                    2856 _my_isr:
   07EC F5                 2857 	push	af
   07ED C5                 2858 	push	bc
   07EE D5                 2859 	push	de
   07EF E5                 2860 	push	hl
   07F0 FD E5              2861 	push	iy
                           2862 ;demo.c:238: DI;
   07F2 F3                 2863 		di 
                           2864 ;demo.c:240: READ_VDP_STATUS;
   07F3 DB 99              2865 		in a,(#0x99) 
                           2866 ;demo.c:242: PLY_Play();
   07F5 CDr00s00           2867 	call	_PLY_Play
                           2868 ;demo.c:243: PLY_SendRegisters();
   07F8 CDr00s00           2869 	call	_PLY_SendRegisters
                           2870 ;demo.c:245: vbicount+=1;
   07FB FD 21r90s16        2871 	ld	iy,#_vbicount
   07FF FD 34 00           2872 	inc	0 (iy)
   0802 20 07              2873 	jr	NZ,00103$
   0804 FD 21r90s16        2874 	ld	iy,#_vbicount
   0808 FD 34 01           2875 	inc	1 (iy)
   080B                    2876 00103$:
                           2877 ;demo.c:246: tick++;
   080B FD 21r92s16        2878 	ld	iy,#_tick
   080F FD 34 00           2879 	inc	0 (iy)
   0812 20 07              2880 	jr	NZ,00104$
   0814 FD 21r92s16        2881 	ld	iy,#_tick
   0818 FD 34 01           2882 	inc	1 (iy)
   081B                    2883 00104$:
                           2884 ;demo.c:248: EI;
   081B FB                 2885 		ei 
   081C FD E1              2886 	pop	iy
   081E E1                 2887 	pop	hl
   081F D1                 2888 	pop	de
   0820 C1                 2889 	pop	bc
   0821 F1                 2890 	pop	af
   0822 ED 4D              2891 	reti
   0824                    2892 _my_isr_end::
                           2893 ;demo.c:251: void color_isr(void) interrupt
                           2894 ;	---------------------------------
                           2895 ; Function color_isr
                           2896 ; ---------------------------------
   0824                    2897 _color_isr_start::
   0824                    2898 _color_isr:
   0824 F5                 2899 	push	af
   0825 C5                 2900 	push	bc
   0826 D5                 2901 	push	de
   0827 E5                 2902 	push	hl
   0828 FD E5              2903 	push	iy
                           2904 ;demo.c:253: DI;
   082A F3                 2905 		di 
                           2906 ;demo.c:255: if(isNthBitSet(vdp2_status(1),0)) {
   082B 3E 01              2907 	ld	a,#0x01
   082D F5                 2908 	push	af
   082E 33                 2909 	inc	sp
   082F CDr00s00           2910 	call	_vdp2_status
   0832 33                 2911 	inc	sp
   0833 4D                 2912 	ld	c,l
   0834 21 00 00           2913 	ld	hl,#0x0000
   0837 E5                 2914 	push	hl
   0838 79                 2915 	ld	a,c
   0839 F5                 2916 	push	af
   083A 33                 2917 	inc	sp
   083B CDr00s00           2918 	call	_isNthBitSet
   083E F1                 2919 	pop	af
   083F 33                 2920 	inc	sp
   0840 44                 2921 	ld	b,h
   0841 4D                 2922 	ld	c,l
   0842 79                 2923 	ld	a,c
   0843 B0                 2924 	or	a,b
   0844 28 19              2925 	jr	Z,00102$
                           2926 ;demo.c:256: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0846 21r90s16           2927 	ld	hl,#_vbicount + 0
   0849 4E                 2928 	ld	c,(hl)
   084A 06 00              2929 	ld	b,#0x00
   084C 21r00s00           2930 	ld	hl,#_sintab
   084F 09                 2931 	add	hl,bc
   0850 7E                 2932 	ld	a,(hl)
   0851 F5                 2933 	push	af
   0852 33                 2934 	inc	sp
   0853 3E 17              2935 	ld	a,#0x17
   0855 F5                 2936 	push	af
   0856 33                 2937 	inc	sp
   0857 CDr00s00           2938 	call	_vdp_register
   085A F1                 2939 	pop	af
                           2940 ;demo.c:257: READ_VDP_STATUS;
   085B DB 99              2941 		in a,(#0x99) 
   085D 18 18              2942 	jr	00103$
   085F                    2943 00102$:
                           2944 ;demo.c:260: READ_VDP_STATUS;
   085F DB 99              2945 		in a,(#0x99) 
                           2946 ;demo.c:261: vbicount++;
   0861 FD 21r90s16        2947 	ld	iy,#_vbicount
   0865 FD 34 00           2948 	inc	0 (iy)
   0868 20 07              2949 	jr	NZ,00107$
   086A FD 21r90s16        2950 	ld	iy,#_vbicount
   086E FD 34 01           2951 	inc	1 (iy)
   0871                    2952 00107$:
                           2953 ;demo.c:264: PLY_Play();
   0871 CDr00s00           2954 	call	_PLY_Play
                           2955 ;demo.c:265: PLY_SendRegisters();
   0874 CDr00s00           2956 	call	_PLY_SendRegisters
   0877                    2957 00103$:
                           2958 ;demo.c:268: EI;
   0877 FB                 2959 		ei 
   0878 FD E1              2960 	pop	iy
   087A E1                 2961 	pop	hl
   087B D1                 2962 	pop	de
   087C C1                 2963 	pop	bc
   087D F1                 2964 	pop	af
   087E ED 4D              2965 	reti
   0880                    2966 _color_isr_end::
                           2967 ;demo.c:275: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2968 ;	---------------------------------
                           2969 ; Function ge5_load
                           2970 ; ---------------------------------
   0880                    2971 _ge5_load_start::
   0880                    2972 _ge5_load:
   0880 DD E5              2973 	push	ix
   0882 DD 21 00 00        2974 	ld	ix,#0
   0886 DD 39              2975 	add	ix,sp
   0888 21 D2 FF           2976 	ld	hl,#-46
   088B 39                 2977 	add	hl,sp
   088C F9                 2978 	ld	sp,hl
                           2979 ;demo.c:279: if(debugprint == 1) {
   088D DD 7E 09           2980 	ld	a,9 (ix)
   0890 D6 01              2981 	sub	a,#0x01
   0892 20 06              2982 	jr	NZ,00125$
   0894 DD 7E 0A           2983 	ld	a,10 (ix)
   0897 B7                 2984 	or	a,a
   0898 28 02              2985 	jr	Z,00126$
   089A                    2986 00125$:
   089A 18 1B              2987 	jr	00102$
   089C                    2988 00126$:
                           2989 ;demo.c:280: puts("loading ge5file: ");
   089C 21r7Bs09           2990 	ld	hl,#__str_0
   089F E5                 2991 	push	hl
   08A0 CDr00s00           2992 	call	_puts
   08A3 F1                 2993 	pop	af
                           2994 ;demo.c:281: puts(file_name);
   08A4 DD 6E 04           2995 	ld	l,4 (ix)
   08A7 DD 66 05           2996 	ld	h,5 (ix)
   08AA E5                 2997 	push	hl
   08AB CDr00s00           2998 	call	_puts
   08AE F1                 2999 	pop	af
                           3000 ;demo.c:282: puts("\r\n");
   08AF 21r8Ds09           3001 	ld	hl,#__str_1
   08B2 E5                 3002 	push	hl
   08B3 CDr00s00           3003 	call	_puts
   08B6 F1                 3004 	pop	af
   08B7                    3005 00102$:
                           3006 ;demo.c:285: memset((uint8_t *) &f, 0, sizeof(fcb));
   08B7 21 00 00           3007 	ld	hl,#0x0000
   08BA 39                 3008 	add	hl,sp
   08BB 4D                 3009 	ld	c,l
   08BC 44                 3010 	ld	b,h
   08BD 21 2E 00           3011 	ld	hl,#0x002E
   08C0 E5                 3012 	push	hl
   08C1 3E 00              3013 	ld	a,#0x00
   08C3 F5                 3014 	push	af
   08C4 33                 3015 	inc	sp
   08C5 C5                 3016 	push	bc
   08C6 CDr00s00           3017 	call	_memset
   08C9 F1                 3018 	pop	af
   08CA F1                 3019 	pop	af
   08CB 33                 3020 	inc	sp
                           3021 ;demo.c:287: f.record_size = 128;
   08CC 21 00 00           3022 	ld	hl,#0x0000
   08CF 39                 3023 	add	hl,sp
   08D0 4D                 3024 	ld	c,l
   08D1 44                 3025 	ld	b,h
   08D2 21 0F 00           3026 	ld	hl,#0x000F
   08D5 09                 3027 	add	hl,bc
   08D6 EB                 3028 	ex	de,hl
   08D7 3E 80              3029 	ld	a,#0x80
   08D9 12                 3030 	ld	(de),a
                           3031 ;demo.c:288: f.drive = 0;
   08DA 3E 00              3032 	ld	a,#0x00
   08DC 02                 3033 	ld	(bc),a
                           3034 ;demo.c:290: memcpy(f.name, file_name, 11);
   08DD DD 5E 04           3035 	ld	e,4 (ix)
   08E0 DD 56 05           3036 	ld	d,5 (ix)
   08E3 03                 3037 	inc	bc
   08E4 21 0B 00           3038 	ld	hl,#0x000B
   08E7 E5                 3039 	push	hl
   08E8 D5                 3040 	push	de
   08E9 C5                 3041 	push	bc
   08EA CDr00s00           3042 	call	_memcpy
   08ED F1                 3043 	pop	af
   08EE F1                 3044 	pop	af
   08EF F1                 3045 	pop	af
                           3046 ;demo.c:292: if (open(&f) != 0) return 0;
   08F0 21 00 00           3047 	ld	hl,#0x0000
   08F3 39                 3048 	add	hl,sp
   08F4 E5                 3049 	push	hl
   08F5 CDr00s00           3050 	call	_open
   08F8 F1                 3051 	pop	af
   08F9 AF                 3052 	xor	a,a
   08FA B5                 3053 	or	a,l
   08FB 28 05              3054 	jr	Z,00104$
   08FD 2E 00              3055 	ld	l,#0x00
   08FF C3r76s09           3056 	jp	00116$
   0902                    3057 00104$:
                           3058 ;demo.c:293: vdp_set_write_address(vramh, vraml);
   0902 DD 6E 07           3059 	ld	l,7 (ix)
   0905 DD 66 08           3060 	ld	h,8 (ix)
   0908 E5                 3061 	push	hl
   0909 DD 7E 06           3062 	ld	a,6 (ix)
   090C F5                 3063 	push	af
   090D 33                 3064 	inc	sp
   090E CDr00s00           3065 	call	_vdp_set_write_address
   0911 F1                 3066 	pop	af
   0912 33                 3067 	inc	sp
                           3068 ;demo.c:295: for (i = 0; i < 213; i++) {
   0913 0E 00              3069 	ld	c,#0x00
   0915                    3070 00112$:
   0915 79                 3071 	ld	a,c
   0916 D6 D5              3072 	sub	a,#0xD5
   0918 D2r6Bs09           3073 	jp	NC,00115$
                           3074 ;demo.c:296: if (block_set_data_ptr(scratch) != 0) return 0;
   091B C5                 3075 	push	bc
   091C 21r50s15           3076 	ld	hl,#_scratch
   091F E5                 3077 	push	hl
   0920 CDr00s00           3078 	call	_block_set_data_ptr
   0923 F1                 3079 	pop	af
   0924 7D                 3080 	ld	a,l
   0925 C1                 3081 	pop	bc
   0926 47                 3082 	ld	b,a
   0927 B7                 3083 	or	a,a
   0928 28 05              3084 	jr	Z,00106$
   092A 2E 00              3085 	ld	l,#0x00
   092C C3r76s09           3086 	jp	00116$
   092F                    3087 00106$:
                           3088 ;demo.c:297: if (block_read(&f) != 0) return 0;
   092F 21 00 00           3089 	ld	hl,#0x0000
   0932 39                 3090 	add	hl,sp
   0933 C5                 3091 	push	bc
   0934 E5                 3092 	push	hl
   0935 CDr00s00           3093 	call	_block_read
   0938 F1                 3094 	pop	af
   0939 7D                 3095 	ld	a,l
   093A C1                 3096 	pop	bc
   093B 47                 3097 	ld	b,a
   093C B7                 3098 	or	a,a
   093D 28 04              3099 	jr	Z,00108$
   093F 2E 00              3100 	ld	l,#0x00
   0941 18 33              3101 	jr	00116$
   0943                    3102 00108$:
                           3103 ;demo.c:299: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0943 AF                 3104 	xor	a,a
   0944 B1                 3105 	or	a,c
   0945 20 11              3106 	jr	NZ,00110$
   0947 11r57s15           3107 	ld	de,#_scratch + 7
   094A C5                 3108 	push	bc
   094B 3E 79              3109 	ld	a,#0x79
   094D F5                 3110 	push	af
   094E 33                 3111 	inc	sp
   094F D5                 3112 	push	de
   0950 CDr00s00           3113 	call	_vdp_load_screen
   0953 F1                 3114 	pop	af
   0954 33                 3115 	inc	sp
   0955 C1                 3116 	pop	bc
   0956 18 0F              3117 	jr	00114$
   0958                    3118 00110$:
                           3119 ;demo.c:300: else vdp_load_screen(scratch, 128);
   0958 C5                 3120 	push	bc
   0959 3E 80              3121 	ld	a,#0x80
   095B F5                 3122 	push	af
   095C 33                 3123 	inc	sp
   095D 21r50s15           3124 	ld	hl,#_scratch
   0960 E5                 3125 	push	hl
   0961 CDr00s00           3126 	call	_vdp_load_screen
   0964 F1                 3127 	pop	af
   0965 33                 3128 	inc	sp
   0966 C1                 3129 	pop	bc
   0967                    3130 00114$:
                           3131 ;demo.c:295: for (i = 0; i < 213; i++) {
   0967 0C                 3132 	inc	c
   0968 C3r15s09           3133 	jp	00112$
   096B                    3134 00115$:
                           3135 ;demo.c:303: close(&f);
   096B 21 00 00           3136 	ld	hl,#0x0000
   096E 39                 3137 	add	hl,sp
   096F E5                 3138 	push	hl
   0970 CDr00s00           3139 	call	_close
   0973 F1                 3140 	pop	af
                           3141 ;demo.c:305: return 1;
   0974 2E 01              3142 	ld	l,#0x01
   0976                    3143 00116$:
   0976 DD F9              3144 	ld	sp,ix
   0978 DD E1              3145 	pop	ix
   097A C9                 3146 	ret
   097B                    3147 _ge5_load_end::
   097B                    3148 __str_0:
   097B 6C 6F 61 64 69 6E  3149 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   098C 00                 3150 	.db 0x00
   098D                    3151 __str_1:
   098D 0D                 3152 	.db 0x0D
   098E 0A                 3153 	.db 0x0A
   098F 00                 3154 	.db 0x00
                           3155 ;demo.c:308: void scratch_clear() {
                           3156 ;	---------------------------------
                           3157 ; Function scratch_clear
                           3158 ; ---------------------------------
   0990                    3159 _scratch_clear_start::
   0990                    3160 _scratch_clear:
                           3161 ;demo.c:309: memset((uint8_t *) &scratch, 0, 128);
   0990 21 80 00           3162 	ld	hl,#0x0080
   0993 E5                 3163 	push	hl
   0994 3E 00              3164 	ld	a,#0x00
   0996 F5                 3165 	push	af
   0997 33                 3166 	inc	sp
   0998 21r50s15           3167 	ld	hl,#_scratch
   099B E5                 3168 	push	hl
   099C CDr00s00           3169 	call	_memset
   099F F1                 3170 	pop	af
   09A0 F1                 3171 	pop	af
   09A1 33                 3172 	inc	sp
   09A2 C9                 3173 	ret
   09A3                    3174 _scratch_clear_end::
                           3175 ;demo.c:312: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3176 ;	---------------------------------
                           3177 ; Function pal_load
                           3178 ; ---------------------------------
   09A3                    3179 _pal_load_start::
   09A3                    3180 _pal_load:
   09A3 DD E5              3181 	push	ix
   09A5 DD 21 00 00        3182 	ld	ix,#0
   09A9 DD 39              3183 	add	ix,sp
   09AB 21 D2 FF           3184 	ld	hl,#-46
   09AE 39                 3185 	add	hl,sp
   09AF F9                 3186 	ld	sp,hl
                           3187 ;demo.c:315: if(debugprint == 1) {
   09B0 DD 7E 07           3188 	ld	a,7 (ix)
   09B3 D6 01              3189 	sub	a,#0x01
   09B5 20 06              3190 	jr	NZ,00115$
   09B7 DD 7E 08           3191 	ld	a,8 (ix)
   09BA B7                 3192 	or	a,a
   09BB 28 02              3193 	jr	Z,00116$
   09BD                    3194 00115$:
   09BD 18 1B              3195 	jr	00102$
   09BF                    3196 00116$:
                           3197 ;demo.c:316: puts("loading palfile: ");
   09BF 21r6Ds0A           3198 	ld	hl,#__str_2
   09C2 E5                 3199 	push	hl
   09C3 CDr00s00           3200 	call	_puts
   09C6 F1                 3201 	pop	af
                           3202 ;demo.c:317: puts(file_name);
   09C7 DD 6E 04           3203 	ld	l,4 (ix)
   09CA DD 66 05           3204 	ld	h,5 (ix)
   09CD E5                 3205 	push	hl
   09CE CDr00s00           3206 	call	_puts
   09D1 F1                 3207 	pop	af
                           3208 ;demo.c:318: puts("\r\n");
   09D2 21r7Fs0A           3209 	ld	hl,#__str_3
   09D5 E5                 3210 	push	hl
   09D6 CDr00s00           3211 	call	_puts
   09D9 F1                 3212 	pop	af
   09DA                    3213 00102$:
                           3214 ;demo.c:321: memset((uint8_t *) &f, 0, sizeof(fcb));
   09DA 21 00 00           3215 	ld	hl,#0x0000
   09DD 39                 3216 	add	hl,sp
   09DE 4D                 3217 	ld	c,l
   09DF 44                 3218 	ld	b,h
   09E0 21 2E 00           3219 	ld	hl,#0x002E
   09E3 E5                 3220 	push	hl
   09E4 3E 00              3221 	ld	a,#0x00
   09E6 F5                 3222 	push	af
   09E7 33                 3223 	inc	sp
   09E8 C5                 3224 	push	bc
   09E9 CDr00s00           3225 	call	_memset
   09EC F1                 3226 	pop	af
   09ED F1                 3227 	pop	af
   09EE 33                 3228 	inc	sp
                           3229 ;demo.c:322: scratch_clear();
   09EF CDr90s09           3230 	call	_scratch_clear
                           3231 ;demo.c:324: f.record_size = ss;
   09F2 21 00 00           3232 	ld	hl,#0x0000
   09F5 39                 3233 	add	hl,sp
   09F6 4D                 3234 	ld	c,l
   09F7 44                 3235 	ld	b,h
   09F8 21 0F 00           3236 	ld	hl,#0x000F
   09FB 09                 3237 	add	hl,bc
   09FC EB                 3238 	ex	de,hl
   09FD DD 7E 06           3239 	ld	a,6 (ix)
   0A00 12                 3240 	ld	(de),a
                           3241 ;demo.c:325: f.drive = 0;
   0A01 3E 00              3242 	ld	a,#0x00
   0A03 02                 3243 	ld	(bc),a
                           3244 ;demo.c:327: memcpy(f.name, file_name, 11);
   0A04 DD 5E 04           3245 	ld	e,4 (ix)
   0A07 DD 56 05           3246 	ld	d,5 (ix)
   0A0A 03                 3247 	inc	bc
   0A0B 21 0B 00           3248 	ld	hl,#0x000B
   0A0E E5                 3249 	push	hl
   0A0F D5                 3250 	push	de
   0A10 C5                 3251 	push	bc
   0A11 CDr00s00           3252 	call	_memcpy
   0A14 F1                 3253 	pop	af
   0A15 F1                 3254 	pop	af
   0A16 F1                 3255 	pop	af
                           3256 ;demo.c:329: if (open(&f) != 0) return 0;
   0A17 21 00 00           3257 	ld	hl,#0x0000
   0A1A 39                 3258 	add	hl,sp
   0A1B E5                 3259 	push	hl
   0A1C CDr00s00           3260 	call	_open
   0A1F F1                 3261 	pop	af
   0A20 AF                 3262 	xor	a,a
   0A21 B5                 3263 	or	a,l
   0A22 28 04              3264 	jr	Z,00104$
   0A24 2E 00              3265 	ld	l,#0x00
   0A26 18 40              3266 	jr	00109$
   0A28                    3267 00104$:
                           3268 ;demo.c:330: if (block_set_data_ptr(scratch) != 0) return 0;
   0A28 21r50s15           3269 	ld	hl,#_scratch
   0A2B E5                 3270 	push	hl
   0A2C CDr00s00           3271 	call	_block_set_data_ptr
   0A2F F1                 3272 	pop	af
   0A30 AF                 3273 	xor	a,a
   0A31 B5                 3274 	or	a,l
   0A32 28 04              3275 	jr	Z,00106$
   0A34 2E 00              3276 	ld	l,#0x00
   0A36 18 30              3277 	jr	00109$
   0A38                    3278 00106$:
                           3279 ;demo.c:331: if (block_read(&f) != 0) return 0;
   0A38 21 00 00           3280 	ld	hl,#0x0000
   0A3B 39                 3281 	add	hl,sp
   0A3C E5                 3282 	push	hl
   0A3D CDr00s00           3283 	call	_block_read
   0A40 F1                 3284 	pop	af
   0A41 AF                 3285 	xor	a,a
   0A42 B5                 3286 	or	a,l
   0A43 28 04              3287 	jr	Z,00108$
   0A45 2E 00              3288 	ld	l,#0x00
   0A47 18 1F              3289 	jr	00109$
   0A49                    3290 00108$:
                           3291 ;demo.c:333: memcpy(cur_palette, scratch+7, ss);
   0A49 DD 4E 06           3292 	ld	c,6 (ix)
   0A4C 06 00              3293 	ld	b,#0x00
   0A4E 11r57s15           3294 	ld	de,#_scratch + 7
   0A51 C5                 3295 	push	bc
   0A52 D5                 3296 	push	de
   0A53 21rD0s15           3297 	ld	hl,#_cur_palette
   0A56 E5                 3298 	push	hl
   0A57 CDr00s00           3299 	call	_memcpy
   0A5A F1                 3300 	pop	af
   0A5B F1                 3301 	pop	af
   0A5C F1                 3302 	pop	af
                           3303 ;demo.c:335: close(&f);
   0A5D 21 00 00           3304 	ld	hl,#0x0000
   0A60 39                 3305 	add	hl,sp
   0A61 E5                 3306 	push	hl
   0A62 CDr00s00           3307 	call	_close
   0A65 F1                 3308 	pop	af
                           3309 ;demo.c:336: return 1;
   0A66 2E 01              3310 	ld	l,#0x01
   0A68                    3311 00109$:
   0A68 DD F9              3312 	ld	sp,ix
   0A6A DD E1              3313 	pop	ix
   0A6C C9                 3314 	ret
   0A6D                    3315 _pal_load_end::
   0A6D                    3316 __str_2:
   0A6D 6C 6F 61 64 69 6E  3317 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0A7E 00                 3318 	.db 0x00
   0A7F                    3319 __str_3:
   0A7F 0D                 3320 	.db 0x0D
   0A80 0A                 3321 	.db 0x0A
   0A81 00                 3322 	.db 0x00
                           3323 ;demo.c:340: void pause() {
                           3324 ;	---------------------------------
                           3325 ; Function pause
                           3326 ; ---------------------------------
   0A82                    3327 _pause_start::
   0A82                    3328 _pause:
                           3329 ;demo.c:341: uint8_t i,j,k = 0;
                           3330 ;demo.c:342: for (i = 0; i < 255; i++) {	
   0A82 01 00 00           3331 	ld	bc,#0x0000
   0A85                    3332 00104$:
   0A85 78                 3333 	ld	a,b
   0A86 D6 FF              3334 	sub	a,#0xFF
   0A88 D0                 3335 	ret	NC
                           3336 ;demo.c:343: for (j = 0; j < 255; j++) {
   0A89 59                 3337 	ld	e,c
   0A8A 16 FF              3338 	ld	d,#0xFF
   0A8C                    3339 00103$:
                           3340 ;demo.c:344: k++;
   0A8C 1C                 3341 	inc	e
   0A8D 15                 3342 	dec	d
                           3343 ;demo.c:343: for (j = 0; j < 255; j++) {
   0A8E AF                 3344 	xor	a,a
   0A8F B2                 3345 	or	a,d
   0A90 20 FA              3346 	jr	NZ,00103$
                           3347 ;demo.c:342: for (i = 0; i < 255; i++) {	
   0A92 4B                 3348 	ld	c,e
   0A93 04                 3349 	inc	b
   0A94 18 EF              3350 	jr	00104$
   0A96                    3351 _pause_end::
                           3352 ;demo.c:350: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3353 ;	---------------------------------
                           3354 ; Function raw_load
                           3355 ; ---------------------------------
   0A96                    3356 _raw_load_start::
   0A96                    3357 _raw_load:
   0A96 DD E5              3358 	push	ix
   0A98 DD 21 00 00        3359 	ld	ix,#0
   0A9C DD 39              3360 	add	ix,sp
   0A9E 21 D2 FF           3361 	ld	hl,#-46
   0AA1 39                 3362 	add	hl,sp
   0AA2 F9                 3363 	ld	sp,hl
                           3364 ;demo.c:355: if(debugprint == 1) {
   0AA3 DD 7E 0A           3365 	ld	a,10 (ix)
   0AA6 D6 01              3366 	sub	a,#0x01
   0AA8 20 06              3367 	jr	NZ,00120$
   0AAA DD 7E 0B           3368 	ld	a,11 (ix)
   0AAD B7                 3369 	or	a,a
   0AAE 28 02              3370 	jr	Z,00121$
   0AB0                    3371 00120$:
   0AB0 18 1B              3372 	jr	00102$
   0AB2                    3373 00121$:
                           3374 ;demo.c:356: puts("loading rawfile: ");
   0AB2 21r84s0B           3375 	ld	hl,#__str_4
   0AB5 E5                 3376 	push	hl
   0AB6 CDr00s00           3377 	call	_puts
   0AB9 F1                 3378 	pop	af
                           3379 ;demo.c:357: puts(file_name);
   0ABA DD 6E 04           3380 	ld	l,4 (ix)
   0ABD DD 66 05           3381 	ld	h,5 (ix)
   0AC0 E5                 3382 	push	hl
   0AC1 CDr00s00           3383 	call	_puts
   0AC4 F1                 3384 	pop	af
                           3385 ;demo.c:358: puts("\r\n");
   0AC5 21r96s0B           3386 	ld	hl,#__str_5
   0AC8 E5                 3387 	push	hl
   0AC9 CDr00s00           3388 	call	_puts
   0ACC F1                 3389 	pop	af
   0ACD                    3390 00102$:
                           3391 ;demo.c:361: memset((uint8_t *) &f, 0, sizeof(fcb));
   0ACD 21 00 00           3392 	ld	hl,#0x0000
   0AD0 39                 3393 	add	hl,sp
   0AD1 4D                 3394 	ld	c,l
   0AD2 44                 3395 	ld	b,h
   0AD3 21 2E 00           3396 	ld	hl,#0x002E
   0AD6 E5                 3397 	push	hl
   0AD7 3E 00              3398 	ld	a,#0x00
   0AD9 F5                 3399 	push	af
   0ADA 33                 3400 	inc	sp
   0ADB C5                 3401 	push	bc
   0ADC CDr00s00           3402 	call	_memset
   0ADF F1                 3403 	pop	af
   0AE0 F1                 3404 	pop	af
   0AE1 33                 3405 	inc	sp
                           3406 ;demo.c:362: scratch_clear();
   0AE2 CDr90s09           3407 	call	_scratch_clear
                           3408 ;demo.c:364: f.record_size = 128;
   0AE5 21 00 00           3409 	ld	hl,#0x0000
   0AE8 39                 3410 	add	hl,sp
   0AE9 4D                 3411 	ld	c,l
   0AEA 44                 3412 	ld	b,h
   0AEB 21 0F 00           3413 	ld	hl,#0x000F
   0AEE 09                 3414 	add	hl,bc
   0AEF EB                 3415 	ex	de,hl
   0AF0 3E 80              3416 	ld	a,#0x80
   0AF2 12                 3417 	ld	(de),a
                           3418 ;demo.c:365: f.drive = 0;
   0AF3 3E 00              3419 	ld	a,#0x00
   0AF5 02                 3420 	ld	(bc),a
                           3421 ;demo.c:367: memcpy(f.name, file_name, 11);
   0AF6 DD 5E 04           3422 	ld	e,4 (ix)
   0AF9 DD 56 05           3423 	ld	d,5 (ix)
   0AFC 03                 3424 	inc	bc
   0AFD 21 0B 00           3425 	ld	hl,#0x000B
   0B00 E5                 3426 	push	hl
   0B01 D5                 3427 	push	de
   0B02 C5                 3428 	push	bc
   0B03 CDr00s00           3429 	call	_memcpy
   0B06 F1                 3430 	pop	af
   0B07 F1                 3431 	pop	af
   0B08 F1                 3432 	pop	af
                           3433 ;demo.c:369: if (open(&f) != 0) return 0;
   0B09 21 00 00           3434 	ld	hl,#0x0000
   0B0C 39                 3435 	add	hl,sp
   0B0D E5                 3436 	push	hl
   0B0E CDr00s00           3437 	call	_open
   0B11 F1                 3438 	pop	af
   0B12 AF                 3439 	xor	a,a
   0B13 B5                 3440 	or	a,l
   0B14 28 05              3441 	jr	Z,00119$
   0B16 2E 00              3442 	ld	l,#0x00
   0B18 C3r7Fs0B           3443 	jp	00112$
                           3444 ;demo.c:371: while(total < size) {
   0B1B                    3445 00119$:
   0B1B 01 00 00           3446 	ld	bc,#0x0000
   0B1E                    3447 00109$:
   0B1E 79                 3448 	ld	a,c
   0B1F DD 96 06           3449 	sub	a,6 (ix)
   0B22 78                 3450 	ld	a,b
   0B23 DD 9E 07           3451 	sbc	a,7 (ix)
   0B26 F2r74s0B           3452 	jp	P,00111$
                           3453 ;demo.c:372: if (block_set_data_ptr(scratch) != 0) return 0;
   0B29 C5                 3454 	push	bc
   0B2A 21r50s15           3455 	ld	hl,#_scratch
   0B2D E5                 3456 	push	hl
   0B2E CDr00s00           3457 	call	_block_set_data_ptr
   0B31 F1                 3458 	pop	af
   0B32 5D                 3459 	ld	e,l
   0B33 C1                 3460 	pop	bc
   0B34 AF                 3461 	xor	a,a
   0B35 B3                 3462 	or	a,e
   0B36 28 04              3463 	jr	Z,00106$
   0B38 2E 00              3464 	ld	l,#0x00
   0B3A 18 43              3465 	jr	00112$
   0B3C                    3466 00106$:
                           3467 ;demo.c:373: if (block_read(&f) != 0) return 0;
   0B3C 21 00 00           3468 	ld	hl,#0x0000
   0B3F 39                 3469 	add	hl,sp
   0B40 C5                 3470 	push	bc
   0B41 E5                 3471 	push	hl
   0B42 CDr00s00           3472 	call	_block_read
   0B45 F1                 3473 	pop	af
   0B46 5D                 3474 	ld	e,l
   0B47 C1                 3475 	pop	bc
   0B48 AF                 3476 	xor	a,a
   0B49 B3                 3477 	or	a,e
   0B4A 28 04              3478 	jr	Z,00108$
   0B4C 2E 00              3479 	ld	l,#0x00
   0B4E 18 2F              3480 	jr	00112$
   0B50                    3481 00108$:
                           3482 ;demo.c:375: memcpy(buffer+total,scratch,incr);
   0B50 DD 7E 08           3483 	ld	a,8 (ix)
   0B53 81                 3484 	add	a,c
   0B54 5F                 3485 	ld	e,a
   0B55 DD 7E 09           3486 	ld	a,9 (ix)
   0B58 88                 3487 	adc	a,b
   0B59 57                 3488 	ld	d,a
   0B5A C5                 3489 	push	bc
   0B5B 21 80 00           3490 	ld	hl,#0x0080
   0B5E E5                 3491 	push	hl
   0B5F 21r50s15           3492 	ld	hl,#_scratch
   0B62 E5                 3493 	push	hl
   0B63 D5                 3494 	push	de
   0B64 CDr00s00           3495 	call	_memcpy
   0B67 F1                 3496 	pop	af
   0B68 F1                 3497 	pop	af
   0B69 F1                 3498 	pop	af
   0B6A C1                 3499 	pop	bc
                           3500 ;demo.c:377: total+=incr;
   0B6B 21 80 00           3501 	ld	hl,#0x0080
   0B6E 09                 3502 	add	hl,bc
   0B6F 4D                 3503 	ld	c,l
   0B70 44                 3504 	ld	b,h
   0B71 C3r1Es0B           3505 	jp	00109$
   0B74                    3506 00111$:
                           3507 ;demo.c:380: close(&f);
   0B74 21 00 00           3508 	ld	hl,#0x0000
   0B77 39                 3509 	add	hl,sp
   0B78 E5                 3510 	push	hl
   0B79 CDr00s00           3511 	call	_close
   0B7C F1                 3512 	pop	af
                           3513 ;demo.c:382: return 1;
   0B7D 2E 01              3514 	ld	l,#0x01
   0B7F                    3515 00112$:
   0B7F DD F9              3516 	ld	sp,ix
   0B81 DD E1              3517 	pop	ix
   0B83 C9                 3518 	ret
   0B84                    3519 _raw_load_end::
   0B84                    3520 __str_4:
   0B84 6C 6F 61 64 69 6E  3521 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0B95 00                 3522 	.db 0x00
   0B96                    3523 __str_5:
   0B96 0D                 3524 	.db 0x0D
   0B97 0A                 3525 	.db 0x0A
   0B98 00                 3526 	.db 0x00
                           3527 ;demo.c:385: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3528 ;	---------------------------------
                           3529 ; Function pck_load
                           3530 ; ---------------------------------
   0B99                    3531 _pck_load_start::
   0B99                    3532 _pck_load:
   0B99 DD E5              3533 	push	ix
   0B9B DD 21 00 00        3534 	ld	ix,#0
   0B9F DD 39              3535 	add	ix,sp
                           3536 ;demo.c:386: if(debugprint == 1) {
   0BA1 DD 7E 0C           3537 	ld	a,12 (ix)
   0BA4 D6 01              3538 	sub	a,#0x01
   0BA6 20 06              3539 	jr	NZ,00106$
   0BA8 DD 7E 0D           3540 	ld	a,13 (ix)
   0BAB B7                 3541 	or	a,a
   0BAC 28 02              3542 	jr	Z,00107$
   0BAE                    3543 00106$:
   0BAE 18 1B              3544 	jr	00102$
   0BB0                    3545 00107$:
                           3546 ;demo.c:387: puts("loading pckfile: ");
   0BB0 21r12s0C           3547 	ld	hl,#__str_6
   0BB3 E5                 3548 	push	hl
   0BB4 CDr00s00           3549 	call	_puts
   0BB7 F1                 3550 	pop	af
                           3551 ;demo.c:388: puts(file_name);
   0BB8 DD 6E 04           3552 	ld	l,4 (ix)
   0BBB DD 66 05           3553 	ld	h,5 (ix)
   0BBE E5                 3554 	push	hl
   0BBF CDr00s00           3555 	call	_puts
   0BC2 F1                 3556 	pop	af
                           3557 ;demo.c:389: puts("\r\n");
   0BC3 21r24s0C           3558 	ld	hl,#__str_7
   0BC6 E5                 3559 	push	hl
   0BC7 CDr00s00           3560 	call	_puts
   0BCA F1                 3561 	pop	af
   0BCB                    3562 00102$:
                           3563 ;demo.c:391: memset((uint8_t *) &packbuffer, 0, size);
   0BCB DD 4E 06           3564 	ld	c,6 (ix)
   0BCE DD 46 07           3565 	ld	b,7 (ix)
   0BD1 C5                 3566 	push	bc
   0BD2 C5                 3567 	push	bc
   0BD3 3E 00              3568 	ld	a,#0x00
   0BD5 F5                 3569 	push	af
   0BD6 33                 3570 	inc	sp
   0BD7 21rC8s01           3571 	ld	hl,#_packbuffer
   0BDA E5                 3572 	push	hl
   0BDB CDr00s00           3573 	call	_memset
   0BDE F1                 3574 	pop	af
   0BDF F1                 3575 	pop	af
   0BE0 33                 3576 	inc	sp
   0BE1 C1                 3577 	pop	bc
                           3578 ;demo.c:392: raw_load(file_name, size, packbuffer,0);
   0BE2 21 00 00           3579 	ld	hl,#0x0000
   0BE5 E5                 3580 	push	hl
   0BE6 21rC8s01           3581 	ld	hl,#_packbuffer
   0BE9 E5                 3582 	push	hl
   0BEA C5                 3583 	push	bc
   0BEB DD 6E 04           3584 	ld	l,4 (ix)
   0BEE DD 66 05           3585 	ld	h,5 (ix)
   0BF1 E5                 3586 	push	hl
   0BF2 CDr96s0A           3587 	call	_raw_load
   0BF5 F1                 3588 	pop	af
   0BF6 F1                 3589 	pop	af
   0BF7 F1                 3590 	pop	af
   0BF8 F1                 3591 	pop	af
                           3592 ;demo.c:393: bitbuster(packbuffer,address,vram_offset);
   0BF9 DD 7E 0A           3593 	ld	a,10 (ix)
   0BFC F5                 3594 	push	af
   0BFD 33                 3595 	inc	sp
   0BFE DD 6E 08           3596 	ld	l,8 (ix)
   0C01 DD 66 09           3597 	ld	h,9 (ix)
   0C04 E5                 3598 	push	hl
   0C05 21rC8s01           3599 	ld	hl,#_packbuffer
   0C08 E5                 3600 	push	hl
   0C09 CDr00s00           3601 	call	_bitbuster
   0C0C F1                 3602 	pop	af
   0C0D F1                 3603 	pop	af
   0C0E 33                 3604 	inc	sp
   0C0F DD E1              3605 	pop	ix
   0C11 C9                 3606 	ret
   0C12                    3607 _pck_load_end::
   0C12                    3608 __str_6:
   0C12 6C 6F 61 64 69 6E  3609 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0C23 00                 3610 	.db 0x00
   0C24                    3611 __str_7:
   0C24 0D                 3612 	.db 0x0D
   0C25 0A                 3613 	.db 0x0A
   0C26 00                 3614 	.db 0x00
                           3615 ;demo.c:396: void fadein() {
                           3616 ;	---------------------------------
                           3617 ; Function fadein
                           3618 ; ---------------------------------
   0C27                    3619 _fadein_start::
   0C27                    3620 _fadein:
   0C27 DD E5              3621 	push	ix
   0C29 DD 21 00 00        3622 	ld	ix,#0
   0C2D DD 39              3623 	add	ix,sp
   0C2F F5                 3624 	push	af
                           3625 ;demo.c:399: if (tick < 8) return;
   0C30 3Ar92s16           3626 	ld	a,(#_tick+0)
   0C33 D6 08              3627 	sub	a,#0x08
   0C35 3Ar93s16           3628 	ld	a,(#_tick+1)
   0C38 DE 00              3629 	sbc	a,#0x00
   0C3A F2r40s0C           3630 	jp	P,00102$
   0C3D C3rEEs0C           3631 	jp	00113$
   0C40                    3632 00102$:
                           3633 ;demo.c:401: tick = 0;
   0C40 21r92s16           3634 	ld	hl,#_tick + 0
   0C43 36 00              3635 	ld	(hl), #0x00
   0C45 21r93s16           3636 	ld	hl,#_tick + 1
   0C48 36 00              3637 	ld	(hl), #0x00
                           3638 ;demo.c:403: for(i = 0; i < 32; i+=2) {
   0C4A 0E 00              3639 	ld	c,#0x00
   0C4C                    3640 00109$:
   0C4C 79                 3641 	ld	a,c
   0C4D D6 20              3642 	sub	a,#0x20
   0C4F D2rE6s0C           3643 	jp	NC,00112$
                           3644 ;demo.c:404: uint8_t r = scratch[i] >> 4;
   0C52 3Er50              3645 	ld	a,#<_scratch
   0C54 81                 3646 	add	a,c
   0C55 5F                 3647 	ld	e,a
   0C56 3Es15              3648 	ld	a,#>_scratch
   0C58 CE 00              3649 	adc	a,#0x00
   0C5A 57                 3650 	ld	d,a
   0C5B 1A                 3651 	ld	a,(de)
   0C5C 47                 3652 	ld	b,a
   0C5D 58                 3653 	ld	e,b
   0C5E CB 3B              3654 	srl	e
   0C60 CB 3B              3655 	srl	e
   0C62 CB 3B              3656 	srl	e
   0C64 CB 3B              3657 	srl	e
                           3658 ;demo.c:405: uint8_t b = scratch[i] & 0xf;
   0C66 78                 3659 	ld	a,b
   0C67 E6 0F              3660 	and	a,#0x0F
   0C69 DD 77 FF           3661 	ld	-1 (ix),a
                           3662 ;demo.c:406: uint8_t g = scratch[i+1];
   0C6C 51                 3663 	ld	d,c
   0C6D 14                 3664 	inc	d
   0C6E 3Er50              3665 	ld	a,#<_scratch
   0C70 82                 3666 	add	a,d
   0C71 6F                 3667 	ld	l,a
   0C72 3Es15              3668 	ld	a,#>_scratch
   0C74 CE 00              3669 	adc	a,#0x00
   0C76 67                 3670 	ld	h,a
   0C77 56                 3671 	ld	d,(hl)
   0C78 DD 72 FE           3672 	ld	-2 (ix),d
                           3673 ;demo.c:408: if (r < (cur_palette[i] >> 4)) r++;
   0C7B 3ErD0              3674 	ld	a,#<_cur_palette
   0C7D 81                 3675 	add	a,c
   0C7E 6F                 3676 	ld	l,a
   0C7F 3Es15              3677 	ld	a,#>_cur_palette
   0C81 CE 00              3678 	adc	a,#0x00
   0C83 67                 3679 	ld	h,a
   0C84 56                 3680 	ld	d,(hl)
   0C85 CB 3A              3681 	srl	d
   0C87 CB 3A              3682 	srl	d
   0C89 CB 3A              3683 	srl	d
   0C8B CB 3A              3684 	srl	d
   0C8D 7B                 3685 	ld	a,e
   0C8E 92                 3686 	sub	a,d
   0C8F 30 01              3687 	jr	NC,00104$
   0C91 1C                 3688 	inc	e
   0C92                    3689 00104$:
                           3690 ;demo.c:409: if (b < (cur_palette[i] & 0xf)) b++;
   0C92 3ErD0              3691 	ld	a,#<_cur_palette
   0C94 81                 3692 	add	a,c
   0C95 6F                 3693 	ld	l,a
   0C96 3Es15              3694 	ld	a,#>_cur_palette
   0C98 CE 00              3695 	adc	a,#0x00
   0C9A 67                 3696 	ld	h,a
   0C9B 7E                 3697 	ld	a,(hl)
   0C9C E6 0F              3698 	and	a,#0x0F
   0C9E 47                 3699 	ld	b,a
   0C9F DD 7E FF           3700 	ld	a,-1 (ix)
   0CA2 90                 3701 	sub	a,b
   0CA3 30 03              3702 	jr	NC,00106$
   0CA5 DD 34 FF           3703 	inc	-1 (ix)
   0CA8                    3704 00106$:
                           3705 ;demo.c:411: scratch[i] = (r << 4) | b;
   0CA8 3Er50              3706 	ld	a,#<_scratch
   0CAA 81                 3707 	add	a,c
   0CAB 47                 3708 	ld	b,a
   0CAC 3Es15              3709 	ld	a,#>_scratch
   0CAE CE 00              3710 	adc	a,#0x00
   0CB0 57                 3711 	ld	d,a
   0CB1 7B                 3712 	ld	a,e
   0CB2 07                 3713 	rlca
   0CB3 07                 3714 	rlca
   0CB4 07                 3715 	rlca
   0CB5 07                 3716 	rlca
   0CB6 E6 F0              3717 	and	a,#0xF0
   0CB8 DD B6 FF           3718 	or	a,-1 (ix)
   0CBB 68                 3719 	ld	l,b
   0CBC 62                 3720 	ld	h,d
   0CBD 77                 3721 	ld	(hl),a
                           3722 ;demo.c:412: if (g < cur_palette[i+1]) scratch[i+1]++;
   0CBE 41                 3723 	ld	b,c
   0CBF 04                 3724 	inc	b
   0CC0 3ErD0              3725 	ld	a,#<_cur_palette
   0CC2 80                 3726 	add	a,b
   0CC3 5F                 3727 	ld	e,a
   0CC4 3Es15              3728 	ld	a,#>_cur_palette
   0CC6 CE 00              3729 	adc	a,#0x00
   0CC8 57                 3730 	ld	d,a
   0CC9 1A                 3731 	ld	a,(de)
   0CCA 5F                 3732 	ld	e,a
   0CCB DD 7E FE           3733 	ld	a,-2 (ix)
   0CCE 93                 3734 	sub	a,e
   0CCF 30 10              3735 	jr	NC,00111$
   0CD1 3Er50              3736 	ld	a,#<_scratch
   0CD3 80                 3737 	add	a,b
   0CD4 47                 3738 	ld	b,a
   0CD5 3Es15              3739 	ld	a,#>_scratch
   0CD7 CE 00              3740 	adc	a,#0x00
   0CD9 5F                 3741 	ld	e,a
   0CDA 68                 3742 	ld	l,b
   0CDB 67                 3743 	ld	h,a
   0CDC 7E                 3744 	ld	a,(hl)
   0CDD 3C                 3745 	inc	a
   0CDE 68                 3746 	ld	l,b
   0CDF 63                 3747 	ld	h,e
   0CE0 77                 3748 	ld	(hl),a
   0CE1                    3749 00111$:
                           3750 ;demo.c:403: for(i = 0; i < 32; i+=2) {
   0CE1 0C                 3751 	inc	c
   0CE2 0C                 3752 	inc	c
   0CE3 C3r4Cs0C           3753 	jp	00109$
   0CE6                    3754 00112$:
                           3755 ;demo.c:416: vdp_load_palette(scratch);
   0CE6 21r50s15           3756 	ld	hl,#_scratch
   0CE9 E5                 3757 	push	hl
   0CEA CDr00s00           3758 	call	_vdp_load_palette
   0CED F1                 3759 	pop	af
   0CEE                    3760 00113$:
   0CEE DD F9              3761 	ld	sp,ix
   0CF0 DD E1              3762 	pop	ix
   0CF2 C9                 3763 	ret
   0CF3                    3764 _fadein_end::
                           3765 ;demo.c:428: void do_ymmm() {
                           3766 ;	---------------------------------
                           3767 ; Function do_ymmm
                           3768 ; ---------------------------------
   0CF3                    3769 _do_ymmm_start::
   0CF3                    3770 _do_ymmm:
   0CF3 DD E5              3771 	push	ix
   0CF5 DD 21 00 00        3772 	ld	ix,#0
   0CF9 DD 39              3773 	add	ix,sp
   0CFB F5                 3774 	push	af
                           3775 ;demo.c:432: if (tick > 32) { tick = 0; flipper++;}
   0CFC 3E 20              3776 	ld	a,#0x20
   0CFE FD 21r92s16        3777 	ld	iy,#_tick
   0D02 FD 96 00           3778 	sub	a,0 (iy)
   0D05 3E 00              3779 	ld	a,#0x00
   0D07 FD 21r92s16        3780 	ld	iy,#_tick
   0D0B FD 9E 01           3781 	sbc	a,1 (iy)
   0D0E F2r2Bs0D           3782 	jp	P,00102$
   0D11 21r92s16           3783 	ld	hl,#_tick + 0
   0D14 36 00              3784 	ld	(hl), #0x00
   0D16 21r93s16           3785 	ld	hl,#_tick + 1
   0D19 36 00              3786 	ld	(hl), #0x00
   0D1B FD 21rE9s16        3787 	ld	iy,#_flipper
   0D1F FD 34 00           3788 	inc	0 (iy)
   0D22 20 07              3789 	jr	NZ,00115$
   0D24 FD 21rE9s16        3790 	ld	iy,#_flipper
   0D28 FD 34 01           3791 	inc	1 (iy)
   0D2B                    3792 00115$:
   0D2B                    3793 00102$:
                           3794 ;demo.c:433: if (flipper > 10) { flipper = 0;}
   0D2B 3E 0A              3795 	ld	a,#0x0A
   0D2D FD 21rE9s16        3796 	ld	iy,#_flipper
   0D31 FD 96 00           3797 	sub	a,0 (iy)
   0D34 3E 00              3798 	ld	a,#0x00
   0D36 FD 21rE9s16        3799 	ld	iy,#_flipper
   0D3A FD 9E 01           3800 	sbc	a,1 (iy)
   0D3D F2r4As0D           3801 	jp	P,00104$
   0D40 21rE9s16           3802 	ld	hl,#_flipper + 0
   0D43 36 00              3803 	ld	(hl), #0x00
   0D45 21rEAs16           3804 	ld	hl,#_flipper + 1
   0D48 36 00              3805 	ld	(hl), #0x00
   0D4A                    3806 00104$:
                           3807 ;demo.c:435: ymmmf++;
   0D4A FD 21rEBs16        3808 	ld	iy,#_ymmmf
   0D4E FD 34 00           3809 	inc	0 (iy)
   0D51 20 07              3810 	jr	NZ,00116$
   0D53 FD 21rEBs16        3811 	ld	iy,#_ymmmf
   0D57 FD 34 01           3812 	inc	1 (iy)
   0D5A                    3813 00116$:
                           3814 ;demo.c:436: for (yofff = 0; yofff<212-step;yofff+=step) {
   0D5A 21rE7s16           3815 	ld	hl,#_yofff + 0
   0D5D 36 00              3816 	ld	(hl), #0x00
   0D5F                    3817 00105$:
   0D5F 21rE7s16           3818 	ld	hl,#_yofff + 0
   0D62 4E                 3819 	ld	c,(hl)
   0D63 06 00              3820 	ld	b,#0x00
   0D65 79                 3821 	ld	a,c
   0D66 D6 D2              3822 	sub	a,#0xD2
   0D68 78                 3823 	ld	a,b
   0D69 DE 00              3824 	sbc	a,#0x00
   0D6B F2rDFs0D           3825 	jp	P,00109$
                           3826 ;demo.c:437: xo = (sintabx[(yofff+ymmmf) & 255]);
   0D6E 21rEBs16           3827 	ld	hl,#_ymmmf
   0D71 79                 3828 	ld	a,c
   0D72 86                 3829 	add	a,(hl)
   0D73 5F                 3830 	ld	e,a
   0D74 78                 3831 	ld	a,b
   0D75 23                 3832 	inc	hl
   0D76 8E                 3833 	adc	a,(hl)
   0D77 16 00              3834 	ld	d,#0x00
   0D79 21r2Cs00           3835 	ld	hl,#_sintabx
   0D7C 19                 3836 	add	hl,de
   0D7D 7E                 3837 	ld	a,(hl)
   0D7E DD 77 FE           3838 	ld	-2 (ix),a
   0D81 DD 36 FF 00        3839 	ld	-1 (ix),#0x00
                           3840 ;demo.c:440: cmd.source_x = 0;
   0D85 21r94s16           3841 	ld	hl,#_cmd
   0D88 36 00              3842 	ld	(hl),#0x00
   0D8A 23                 3843 	inc	hl
   0D8B 36 00              3844 	ld	(hl),#0x00
                           3845 ;demo.c:441: cmd.source_y = 0+yofff;
   0D8D 11r96s16           3846 	ld	de,#_cmd + 2
   0D90 EB                 3847 	ex	de,hl
   0D91 71                 3848 	ld	(hl),c
   0D92 23                 3849 	inc	hl
   0D93 70                 3850 	ld	(hl),b
                           3851 ;demo.c:442: cmd.dest_x = xo;
   0D94 11r98s16           3852 	ld	de,#_cmd + 4
   0D97 EB                 3853 	ex	de,hl
   0D98 DD 7E FE           3854 	ld	a,-2 (ix)
   0D9B 77                 3855 	ld	(hl),a
   0D9C 23                 3856 	inc	hl
   0D9D DD 7E FF           3857 	ld	a,-1 (ix)
   0DA0 77                 3858 	ld	(hl),a
                           3859 ;demo.c:443: cmd.dest_y = 3+yofff;
   0DA1 11r9As16           3860 	ld	de,#_cmd + 6
   0DA4 03                 3861 	inc	bc
   0DA5 03                 3862 	inc	bc
   0DA6 03                 3863 	inc	bc
   0DA7 6B                 3864 	ld	l,e
   0DA8 62                 3865 	ld	h,d
   0DA9 71                 3866 	ld	(hl),c
   0DAA 23                 3867 	inc	hl
   0DAB 70                 3868 	ld	(hl),b
                           3869 ;demo.c:444: cmd.size_x = 256;
   0DAC 21r9Cs16           3870 	ld	hl, #_cmd + 8
   0DAF 36 00              3871 	ld	(hl),#0x00
   0DB1 23                 3872 	inc	hl
   0DB2 36 01              3873 	ld	(hl),#0x01
                           3874 ;demo.c:445: cmd.size_y = 1;
   0DB4 21r9Es16           3875 	ld	hl, #_cmd + 10
   0DB7 36 01              3876 	ld	(hl),#0x01
   0DB9 23                 3877 	inc	hl
   0DBA 36 00              3878 	ld	(hl),#0x00
                           3879 ;demo.c:446: cmd.data = 0;
                           3880 ;demo.c:447: cmd.argument = 0;
   0DBC 3E 00              3881 	ld	a,#0x00
   0DBE 32rA0s16           3882 	ld	(#_cmd + 12),a
   0DC1 32rA1s16           3883 	ld	(#_cmd + 13),a
                           3884 ;demo.c:448: cmd.command = 0xD0;
   0DC4 3E D0              3885 	ld	a,#0xD0
   0DC6 32rA2s16           3886 	ld	(#_cmd + 14),a
                           3887 ;demo.c:451: vdp_copier(&cmd);
   0DC9 21r94s16           3888 	ld	hl,#_cmd
   0DCC E5                 3889 	push	hl
   0DCD CDr00s00           3890 	call	_vdp_copier
   0DD0 F1                 3891 	pop	af
                           3892 ;demo.c:436: for (yofff = 0; yofff<212-step;yofff+=step) {
   0DD1 21rE7s16           3893 	ld	hl,#_yofff + 0
   0DD4 4E                 3894 	ld	c,(hl)
   0DD5 21rE7s16           3895 	ld	hl,#_yofff
   0DD8 79                 3896 	ld	a,c
   0DD9 C6 02              3897 	add	a,#0x02
   0DDB 77                 3898 	ld	(hl),a
   0DDC C3r5Fs0D           3899 	jp	00105$
   0DDF                    3900 00109$:
   0DDF DD F9              3901 	ld	sp,ix
   0DE1 DD E1              3902 	pop	ix
   0DE3 C9                 3903 	ret
   0DE4                    3904 _do_ymmm_end::
                           3905 ;demo.c:468: void do_blocks() {
                           3906 ;	---------------------------------
                           3907 ; Function do_blocks
                           3908 ; ---------------------------------
   0DE4                    3909 _do_blocks_start::
   0DE4                    3910 _do_blocks:
   0DE4 DD E5              3911 	push	ix
   0DE6 DD 21 00 00        3912 	ld	ix,#0
   0DEA DD 39              3913 	add	ix,sp
   0DEC 21 FA FF           3914 	ld	hl,#-6
   0DEF 39                 3915 	add	hl,sp
   0DF0 F9                 3916 	ld	sp,hl
                           3917 ;demo.c:470: int ys = 0;
   0DF1 DD 36 FC 00        3918 	ld	-4 (ix),#0x00
   0DF5 DD 36 FD 00        3919 	ld	-3 (ix),#0x00
                           3920 ;demo.c:471: int ye = 0;
   0DF9 DD 36 FA 00        3921 	ld	-6 (ix),#0x00
   0DFD DD 36 FB 00        3922 	ld	-5 (ix),#0x00
                           3923 ;demo.c:473: vdp_register(VDP_VOFFSET,0);
   0E01 21 17 00           3924 	ld	hl,#0x0017
   0E04 E5                 3925 	push	hl
   0E05 CDr00s00           3926 	call	_vdp_register
   0E08 F1                 3927 	pop	af
                           3928 ;demo.c:475: if (block_init == 0) {
   0E09 AF                 3929 	xor	a,a
   0E0A FD 21rEDs16        3930 	ld	iy,#_block_init
   0E0E FD B6 00           3931 	or	a,0 (iy)
   0E11 C2r79s0E           3932 	jp	NZ,00108$
                           3933 ;demo.c:477: vdp_set_screen5();
   0E14 CDr00s00           3934 	call	_vdp_set_screen5
                           3935 ;demo.c:479: vdp_register(2, 0x5F);
   0E17 21 02 5F           3936 	ld	hl,#0x5F02
   0E1A E5                 3937 	push	hl
   0E1B CDr00s00           3938 	call	_vdp_register
   0E1E F1                 3939 	pop	af
                           3940 ;demo.c:481: for(i=0;i<16;i++) btab[i] = i*16;
   0E1F DD 36 FE 00        3941 	ld	-2 (ix),#0x00
   0E23 DD 36 FF 00        3942 	ld	-1 (ix),#0x00
   0E27                    3943 00110$:
   0E27 DD 7E FE           3944 	ld	a,-2 (ix)
   0E2A D6 10              3945 	sub	a,#0x10
   0E2C DD 7E FF           3946 	ld	a,-1 (ix)
   0E2F DE 00              3947 	sbc	a,#0x00
   0E31 F2r69s0E           3948 	jp	P,00113$
   0E34 DD 4E FE           3949 	ld	c,-2 (ix)
   0E37 DD 46 FF           3950 	ld	b,-1 (ix)
   0E3A CB 21              3951 	sla	c
   0E3C CB 10              3952 	rl	b
   0E3E 21rF6s16           3953 	ld	hl,#_btab
   0E41 09                 3954 	add	hl,bc
   0E42 4D                 3955 	ld	c,l
   0E43 44                 3956 	ld	b,h
   0E44 DD 5E FE           3957 	ld	e,-2 (ix)
   0E47 DD 56 FF           3958 	ld	d,-1 (ix)
   0E4A CB 23              3959 	sla	e
   0E4C CB 12              3960 	rl	d
   0E4E CB 23              3961 	sla	e
   0E50 CB 12              3962 	rl	d
   0E52 CB 23              3963 	sla	e
   0E54 CB 12              3964 	rl	d
   0E56 CB 23              3965 	sla	e
   0E58 CB 12              3966 	rl	d
   0E5A 69                 3967 	ld	l,c
   0E5B 60                 3968 	ld	h,b
   0E5C 73                 3969 	ld	(hl),e
   0E5D 23                 3970 	inc	hl
   0E5E 72                 3971 	ld	(hl),d
   0E5F DD 34 FE           3972 	inc	-2 (ix)
   0E62 20 03              3973 	jr	NZ,00139$
   0E64 DD 34 FF           3974 	inc	-1 (ix)
   0E67                    3975 00139$:
   0E67 18 BE              3976 	jr	00110$
   0E69                    3977 00113$:
                           3978 ;demo.c:482: vdp_load_palette(block_palette);
   0E69 21r10s16           3979 	ld	hl,#_block_palette
   0E6C E5                 3980 	push	hl
   0E6D CDr00s00           3981 	call	_vdp_load_palette
   0E70 F1                 3982 	pop	af
                           3983 ;demo.c:484: block_init = 1;
   0E71 21rEDs16           3984 	ld	hl,#_block_init + 0
   0E74 36 01              3985 	ld	(hl), #0x01
   0E76 C3r02s10           3986 	jp	00122$
   0E79                    3987 00108$:
                           3988 ;demo.c:488: if (flof == 0) { ys = 0; ye = 8; }
   0E79 3Ar16s17           3989 	ld	a,(#_flof+0)
   0E7C FD 21r16s17        3990 	ld	iy,#_flof
   0E80 FD B6 01           3991 	or	a,1 (iy)
   0E83 20 10              3992 	jr	NZ,00102$
   0E85 DD 36 FC 00        3993 	ld	-4 (ix),#0x00
   0E89 DD 36 FD 00        3994 	ld	-3 (ix),#0x00
   0E8D DD 36 FA 08        3995 	ld	-6 (ix),#0x08
   0E91 DD 36 FB 00        3996 	ld	-5 (ix),#0x00
   0E95                    3997 00102$:
                           3998 ;demo.c:489: if (flof == 1) { ys = 8; ye = 16; }
   0E95 3Ar16s17           3999 	ld	a,(#_flof+0)
   0E98 D6 01              4000 	sub	a,#0x01
   0E9A 20 06              4001 	jr	NZ,00140$
   0E9C 3Ar17s17           4002 	ld	a,(#_flof+1)
   0E9F B7                 4003 	or	a,a
   0EA0 28 02              4004 	jr	Z,00141$
   0EA2                    4005 00140$:
   0EA2 18 10              4006 	jr	00104$
   0EA4                    4007 00141$:
   0EA4 DD 36 FC 08        4008 	ld	-4 (ix),#0x08
   0EA8 DD 36 FD 00        4009 	ld	-3 (ix),#0x00
   0EAC DD 36 FA 10        4010 	ld	-6 (ix),#0x10
   0EB0 DD 36 FB 00        4011 	ld	-5 (ix),#0x00
   0EB4                    4012 00104$:
                           4013 ;demo.c:491: for(bty=3;bty<11;bty++) {
   0EB4 FD 21rF4s16        4014 	ld	iy,#_bty
   0EB8 FD 36 00 03        4015 	ld	0 (iy),#0x03
   0EBC FD 21rF4s16        4016 	ld	iy,#_bty
   0EC0 FD 36 01 00        4017 	ld	1 (iy),#0x00
   0EC4                    4018 00118$:
   0EC4 3ArF4s16           4019 	ld	a,(#_bty+0)
   0EC7 D6 0B              4020 	sub	a,#0x0B
   0EC9 3ArF5s16           4021 	ld	a,(#_bty+1)
   0ECC DE 00              4022 	sbc	a,#0x00
   0ECE F2rD9s0F           4023 	jp	P,00121$
                           4024 ;demo.c:492: for(btx=ys;btx<ye;btx++) {
   0ED1 DD 7E FC           4025 	ld	a,-4 (ix)
   0ED4 FD 21rF2s16        4026 	ld	iy,#_btx
   0ED8 FD 77 00           4027 	ld	0 (iy),a
   0EDB DD 7E FD           4028 	ld	a,-3 (ix)
   0EDE FD 21rF2s16        4029 	ld	iy,#_btx
   0EE2 FD 77 01           4030 	ld	1 (iy),a
   0EE5                    4031 00114$:
   0EE5 3ArF2s16           4032 	ld	a,(#_btx+0)
   0EE8 DD 96 FA           4033 	sub	a,-6 (ix)
   0EEB 3ArF3s16           4034 	ld	a,(#_btx+1)
   0EEE DD 9E FB           4035 	sbc	a,-5 (ix)
   0EF1 F2rC6s0F           4036 	jp	P,00120$
                           4037 ;demo.c:493: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0EF4 3Ar00s00           4038 	ld	a,(#_PLY_PSGReg8+0)
   0EF7 FD 21r00s00        4039 	ld	iy,#_PLY_PSGReg9
   0EFB FD A6 00           4040 	and	a,0 (iy)
   0EFE 21r00s00           4041 	ld	hl,#_PLY_PSGReg10 + 0
   0F01 B6                 4042 	or	a,(hl)
   0F02 4F                 4043 	ld	c,a
   0F03 CB 39              4044 	srl	c
   0F05 21rEEs16           4045 	ld	hl,#_bsx + 0
   0F08 71                 4046 	ld	(hl), c
   0F09 21rEFs16           4047 	ld	hl,#_bsx + 1
   0F0C 36 00              4048 	ld	(hl), #0x00
                           4049 ;demo.c:494: bsy = PLY_PSGReg10;
   0F0E 3Ar00s00           4050 	ld	a,(#_PLY_PSGReg10+0)
   0F11 21rF0s16           4051 	ld	hl,#_bsy + 0
   0F14 77                 4052 	ld	(hl), a
   0F15 21rF1s16           4053 	ld	hl,#_bsy + 1
   0F18 36 00              4054 	ld	(hl), #0x00
                           4055 ;demo.c:495: cmd.source_x = btab[bsx];
   0F1A 21rEEs16           4056 	ld	hl,#_bsx + 0
   0F1D 4E                 4057 	ld	c,(hl)
   0F1E 21rEFs16           4058 	ld	hl,#_bsx + 1
   0F21 46                 4059 	ld	b,(hl)
   0F22 CB 21              4060 	sla	c
   0F24 CB 10              4061 	rl	b
   0F26 21rF6s16           4062 	ld	hl,#_btab
   0F29 09                 4063 	add	hl,bc
   0F2A 4E                 4064 	ld	c,(hl)
   0F2B 23                 4065 	inc	hl
   0F2C 46                 4066 	ld	b,(hl)
   0F2D 21r94s16           4067 	ld	hl,#_cmd
   0F30 71                 4068 	ld	(hl),c
   0F31 23                 4069 	inc	hl
   0F32 70                 4070 	ld	(hl),b
                           4071 ;demo.c:496: cmd.source_y = 768+btab[bsy];
   0F33 01r96s16           4072 	ld	bc,#_cmd + 2
   0F36 21rF0s16           4073 	ld	hl,#_bsy + 0
   0F39 5E                 4074 	ld	e,(hl)
   0F3A 21rF1s16           4075 	ld	hl,#_bsy + 1
   0F3D 56                 4076 	ld	d,(hl)
   0F3E CB 23              4077 	sla	e
   0F40 CB 12              4078 	rl	d
   0F42 21rF6s16           4079 	ld	hl,#_btab
   0F45 19                 4080 	add	hl,de
   0F46 5E                 4081 	ld	e,(hl)
   0F47 23                 4082 	inc	hl
   0F48 56                 4083 	ld	d,(hl)
   0F49 21 00 03           4084 	ld	hl,#0x0300
   0F4C 19                 4085 	add	hl,de
   0F4D EB                 4086 	ex	de,hl
   0F4E 69                 4087 	ld	l,c
   0F4F 60                 4088 	ld	h,b
   0F50 73                 4089 	ld	(hl),e
   0F51 23                 4090 	inc	hl
   0F52 72                 4091 	ld	(hl),d
                           4092 ;demo.c:497: cmd.dest_x = btab[btx];
   0F53 01r98s16           4093 	ld	bc,#_cmd + 4
   0F56 21rF2s16           4094 	ld	hl,#_btx + 0
   0F59 5E                 4095 	ld	e,(hl)
   0F5A 21rF3s16           4096 	ld	hl,#_btx + 1
   0F5D 56                 4097 	ld	d,(hl)
   0F5E CB 23              4098 	sla	e
   0F60 CB 12              4099 	rl	d
   0F62 21rF6s16           4100 	ld	hl,#_btab
   0F65 19                 4101 	add	hl,de
   0F66 5E                 4102 	ld	e,(hl)
   0F67 23                 4103 	inc	hl
   0F68 56                 4104 	ld	d,(hl)
   0F69 69                 4105 	ld	l,c
   0F6A 60                 4106 	ld	h,b
   0F6B 73                 4107 	ld	(hl),e
   0F6C 23                 4108 	inc	hl
   0F6D 72                 4109 	ld	(hl),d
                           4110 ;demo.c:498: cmd.dest_y = 512+btab[bty];
   0F6E 01r9As16           4111 	ld	bc,#_cmd + 6
   0F71 21rF4s16           4112 	ld	hl,#_bty + 0
   0F74 5E                 4113 	ld	e,(hl)
   0F75 21rF5s16           4114 	ld	hl,#_bty + 1
   0F78 56                 4115 	ld	d,(hl)
   0F79 CB 23              4116 	sla	e
   0F7B CB 12              4117 	rl	d
   0F7D 21rF6s16           4118 	ld	hl,#_btab
   0F80 19                 4119 	add	hl,de
   0F81 5E                 4120 	ld	e,(hl)
   0F82 23                 4121 	inc	hl
   0F83 56                 4122 	ld	d,(hl)
   0F84 21 00 02           4123 	ld	hl,#0x0200
   0F87 19                 4124 	add	hl,de
   0F88 EB                 4125 	ex	de,hl
   0F89 69                 4126 	ld	l,c
   0F8A 60                 4127 	ld	h,b
   0F8B 73                 4128 	ld	(hl),e
   0F8C 23                 4129 	inc	hl
   0F8D 72                 4130 	ld	(hl),d
                           4131 ;demo.c:499: cmd.size_x = 16;
   0F8E 21r9Cs16           4132 	ld	hl, #_cmd + 8
   0F91 36 10              4133 	ld	(hl),#0x10
   0F93 23                 4134 	inc	hl
   0F94 36 00              4135 	ld	(hl),#0x00
                           4136 ;demo.c:500: cmd.size_y = 16;
   0F96 21r9Es16           4137 	ld	hl, #_cmd + 10
   0F99 36 10              4138 	ld	(hl),#0x10
   0F9B 23                 4139 	inc	hl
   0F9C 36 00              4140 	ld	(hl),#0x00
                           4141 ;demo.c:501: cmd.data = 0;
                           4142 ;demo.c:502: cmd.argument = 0x00;
   0F9E 3E 00              4143 	ld	a,#0x00
   0FA0 32rA0s16           4144 	ld	(#_cmd + 12),a
   0FA3 32rA1s16           4145 	ld	(#_cmd + 13),a
                           4146 ;demo.c:503: cmd.command = 0xD0;
   0FA6 3E D0              4147 	ld	a,#0xD0
   0FA8 32rA2s16           4148 	ld	(#_cmd + 14),a
                           4149 ;demo.c:504: vdp_copier(&cmd);
   0FAB 21r94s16           4150 	ld	hl,#_cmd
   0FAE E5                 4151 	push	hl
   0FAF CDr00s00           4152 	call	_vdp_copier
   0FB2 F1                 4153 	pop	af
                           4154 ;demo.c:492: for(btx=ys;btx<ye;btx++) {
   0FB3 FD 21rF2s16        4155 	ld	iy,#_btx
   0FB7 FD 34 00           4156 	inc	0 (iy)
   0FBA 20 07              4157 	jr	NZ,00150$
   0FBC FD 21rF2s16        4158 	ld	iy,#_btx
   0FC0 FD 34 01           4159 	inc	1 (iy)
   0FC3                    4160 00150$:
   0FC3 C3rE5s0E           4161 	jp	00114$
   0FC6                    4162 00120$:
                           4163 ;demo.c:491: for(bty=3;bty<11;bty++) {
   0FC6 FD 21rF4s16        4164 	ld	iy,#_bty
   0FCA FD 34 00           4165 	inc	0 (iy)
   0FCD 20 07              4166 	jr	NZ,00151$
   0FCF FD 21rF4s16        4167 	ld	iy,#_bty
   0FD3 FD 34 01           4168 	inc	1 (iy)
   0FD6                    4169 00151$:
   0FD6 C3rC4s0E           4170 	jp	00118$
   0FD9                    4171 00121$:
                           4172 ;demo.c:508: flof++;
   0FD9 FD 21r16s17        4173 	ld	iy,#_flof
   0FDD FD 34 00           4174 	inc	0 (iy)
   0FE0 20 07              4175 	jr	NZ,00152$
   0FE2 FD 21r16s17        4176 	ld	iy,#_flof
   0FE6 FD 34 01           4177 	inc	1 (iy)
   0FE9                    4178 00152$:
                           4179 ;demo.c:509: if (flof == 2) flof = 0;
   0FE9 3Ar16s17           4180 	ld	a,(#_flof+0)
   0FEC D6 02              4181 	sub	a,#0x02
   0FEE 20 06              4182 	jr	NZ,00153$
   0FF0 3Ar17s17           4183 	ld	a,(#_flof+1)
   0FF3 B7                 4184 	or	a,a
   0FF4 28 02              4185 	jr	Z,00154$
   0FF6                    4186 00153$:
   0FF6 18 0A              4187 	jr	00122$
   0FF8                    4188 00154$:
   0FF8 21r16s17           4189 	ld	hl,#_flof + 0
   0FFB 36 00              4190 	ld	(hl), #0x00
   0FFD 21r17s17           4191 	ld	hl,#_flof + 1
   1000 36 00              4192 	ld	(hl), #0x00
   1002                    4193 00122$:
   1002 DD F9              4194 	ld	sp,ix
   1004 DD E1              4195 	pop	ix
   1006 C9                 4196 	ret
   1007                    4197 _do_blocks_end::
                           4198 ;demo.c:517: void raster_effu() {
                           4199 ;	---------------------------------
                           4200 ; Function raster_effu
                           4201 ; ---------------------------------
   1007                    4202 _raster_effu_start::
   1007                    4203 _raster_effu:
                           4204 ;demo.c:518: vdp_register(VDP_VOFFSET,0);
   1007 21 17 00           4205 	ld	hl,#0x0017
   100A E5                 4206 	push	hl
   100B CDr00s00           4207 	call	_vdp_register
   100E F1                 4208 	pop	af
                           4209 ;demo.c:519: waitVB();
   100F 76                 4210 		halt 
                           4211 ;demo.c:521: vdp_register(1,0x40); // disable vblank
   1010 21 01 40           4212 	ld	hl,#0x4001
   1013 E5                 4213 	push	hl
   1014 CDr00s00           4214 	call	_vdp_register
                           4215 ;demo.c:523: for (linenum = 40; linenum < 212; linenum+=4) {
   1017 3E 28              4216 	ld	a,#0x28
   1019 32r18s17           4217 	ld	(#_linenum + 0),a
   101C F1                 4218 	pop	af
   101D FD 21r18s17        4219 	ld	iy,#_linenum
   1021 FD 36 01 00        4220 	ld	1 (iy),#0x00
   1025                    4221 00101$:
   1025 3Ar18s17           4222 	ld	a,(#_linenum+0)
   1028 D6 D4              4223 	sub	a,#0xD4
   102A 3Ar19s17           4224 	ld	a,(#_linenum+1)
   102D DE 00              4225 	sbc	a,#0x00
   102F F2r60s10           4226 	jp	P,00104$
                           4227 ;demo.c:524: vdp_register(19,linenum); // interrupt on line
   1032 3Ar18s17           4228 	ld	a,(#_linenum+0)
   1035 F5                 4229 	push	af
   1036 33                 4230 	inc	sp
   1037 3E 13              4231 	ld	a,#0x13
   1039 F5                 4232 	push	af
   103A 33                 4233 	inc	sp
   103B CDr00s00           4234 	call	_vdp_register
   103E F1                 4235 	pop	af
                           4236 ;demo.c:525: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   103F 21 00 16           4237 	ld	hl,#0x1600
   1042 E5                 4238 	push	hl
   1043 CDr00s00           4239 	call	_vdp_register
   1046 F1                 4240 	pop	af
                           4241 ;demo.c:527: waitVB();
   1047 76                 4242 		halt 
                           4243 ;demo.c:523: for (linenum = 40; linenum < 212; linenum+=4) {
   1048 21r18s17           4244 	ld	hl,#_linenum
   104B 7E                 4245 	ld	a,(hl)
   104C C6 04              4246 	add	a,#0x04
   104E 23                 4247 	inc	hl
   104F 2B                 4248 	dec	hl
   1050 C5                 4249 	push	bc
   1051 4F                 4250 	ld	c, a
   1052 23                 4251 	inc	hl
   1053 7E                 4252 	ld	a, (hl)
   1054 47                 4253 	ld	b, a
   1055 79                 4254 	ld	a, c
   1056 2B                 4255 	dec	hl
   1057 77                 4256 	ld	(hl), a
   1058 78                 4257 	ld	a, b
   1059 C1                 4258 	pop	bc
   105A CE 00              4259 	adc	a,#0x00
   105C 23                 4260 	inc	hl
   105D 77                 4261 	ld	(hl),a
   105E 18 C5              4262 	jr	00101$
   1060                    4263 00104$:
                           4264 ;demo.c:530: vdp_register(VDP_VOFFSET,0);
   1060 21 17 00           4265 	ld	hl,#0x0017
   1063 E5                 4266 	push	hl
   1064 CDr00s00           4267 	call	_vdp_register
   1067 F1                 4268 	pop	af
                           4269 ;demo.c:544: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   1068 21 00 06           4270 	ld	hl,#0x0600
   106B E5                 4271 	push	hl
   106C CDr00s00           4272 	call	_vdp_register
   106F F1                 4273 	pop	af
                           4274 ;demo.c:545: vdp_register(1,0x60); // enable vblank
   1070 21 01 60           4275 	ld	hl,#0x6001
   1073 E5                 4276 	push	hl
   1074 CDr00s00           4277 	call	_vdp_register
   1077 F1                 4278 	pop	af
   1078 C9                 4279 	ret
   1079                    4280 _raster_effu_end::
                           4281 ;demo.c:577: void do_2xletter(char cc) {
                           4282 ;	---------------------------------
                           4283 ; Function do_2xletter
                           4284 ; ---------------------------------
   1079                    4285 _do_2xletter_start::
   1079                    4286 _do_2xletter:
   1079 DD E5              4287 	push	ix
   107B DD 21 00 00        4288 	ld	ix,#0
   107F DD 39              4289 	add	ix,sp
   1081 21 F2 FF           4290 	ld	hl,#-14
   1084 39                 4291 	add	hl,sp
   1085 F9                 4292 	ld	sp,hl
                           4293 ;demo.c:578: int cidx = cc - 65;
   1086 DD 4E 04           4294 	ld	c,4 (ix)
   1089 DD 7E 04           4295 	ld	a,4 (ix)
   108C 17                 4296 	rla	
   108D 9F                 4297 	sbc	a,a
   108E 47                 4298 	ld	b,a
   108F 79                 4299 	ld	a,c
   1090 C6 BF              4300 	add	a,#0xBF
   1092 DD 77 FE           4301 	ld	-2 (ix),a
   1095 78                 4302 	ld	a,b
   1096 CE FF              4303 	adc	a,#0xFF
   1098 DD 77 FF           4304 	ld	-1 (ix),a
                           4305 ;demo.c:581: for (y=0;y<8;y++) {
   109B 3ErA7              4306 	ld	a,#<_font_w
   109D DD 86 FE           4307 	add	a,-2 (ix)
   10A0 5F                 4308 	ld	e,a
   10A1 3Es13              4309 	ld	a,#>_font_w
   10A3 DD 8E FF           4310 	adc	a,-1 (ix)
   10A6 57                 4311 	ld	d,a
   10A7 DD 36 FA 00        4312 	ld	-6 (ix),#0x00
   10AB DD 36 FB 00        4313 	ld	-5 (ix),#0x00
   10AF DD 36 F6 00        4314 	ld	-10 (ix),#0x00
   10B3 DD 36 F7 00        4315 	ld	-9 (ix),#0x00
   10B7                    4316 00105$:
   10B7 DD 7E FA           4317 	ld	a,-6 (ix)
   10BA D6 08              4318 	sub	a,#0x08
   10BC DD 7E FB           4319 	ld	a,-5 (ix)
   10BF DE 00              4320 	sbc	a,#0x00
   10C1 F2rFFs12           4321 	jp	P,00108$
                           4322 ;demo.c:582: for (x=0;x<font_w[cidx];x++) {
   10C4 DD 36 FC 00        4323 	ld	-4 (ix),#0x00
   10C8 DD 36 FD 00        4324 	ld	-3 (ix),#0x00
   10CC DD 36 F4 00        4325 	ld	-12 (ix),#0x00
   10D0 DD 36 F5 00        4326 	ld	-11 (ix),#0x00
   10D4                    4327 00101$:
   10D4 1A                 4328 	ld	a,(de)
   10D5 4F                 4329 	ld	c,a
   10D6 06 00              4330 	ld	b,#0x00
   10D8 DD 7E FC           4331 	ld	a,-4 (ix)
   10DB 91                 4332 	sub	a,c
   10DC DD 7E FD           4333 	ld	a,-3 (ix)
   10DF 98                 4334 	sbc	a,b
   10E0 F2rD7s12           4335 	jp	P,00115$
                           4336 ;demo.c:583: cmd.source_x = 127+font_x[cidx]+x;
   10E3 3Er27              4337 	ld	a,#<_font_x
   10E5 DD 86 FE           4338 	add	a,-2 (ix)
   10E8 4F                 4339 	ld	c,a
   10E9 3Es13              4340 	ld	a,#>_font_x
   10EB DD 8E FF           4341 	adc	a,-1 (ix)
   10EE 47                 4342 	ld	b,a
   10EF 0A                 4343 	ld	a,(bc)
   10F0 4F                 4344 	ld	c,a
   10F1 06 00              4345 	ld	b,#0x00
   10F3 21 7F 00           4346 	ld	hl,#0x007F
   10F6 09                 4347 	add	hl,bc
   10F7 4D                 4348 	ld	c,l
   10F8 44                 4349 	ld	b,h
   10F9 79                 4350 	ld	a,c
   10FA DD 86 FC           4351 	add	a,-4 (ix)
   10FD 4F                 4352 	ld	c,a
   10FE 78                 4353 	ld	a,b
   10FF DD 8E FD           4354 	adc	a,-3 (ix)
   1102 47                 4355 	ld	b,a
   1103 21r94s16           4356 	ld	hl,#_cmd
   1106 71                 4357 	ld	(hl),c
   1107 23                 4358 	inc	hl
   1108 70                 4359 	ld	(hl),b
                           4360 ;demo.c:584: cmd.source_y = 512+font_y[cidx]+y;
   1109 23                 4361 	inc	hl
   110A DD 75 F2           4362 	ld	-14 (ix),l
   110D DD 74 F3           4363 	ld	-13 (ix),h
   1110 3Er67              4364 	ld	a,#<_font_y
   1112 DD 86 FE           4365 	add	a,-2 (ix)
   1115 4F                 4366 	ld	c,a
   1116 3Es13              4367 	ld	a,#>_font_y
   1118 DD 8E FF           4368 	adc	a,-1 (ix)
   111B 47                 4369 	ld	b,a
   111C 0A                 4370 	ld	a,(bc)
   111D 4F                 4371 	ld	c,a
   111E 06 00              4372 	ld	b,#0x00
   1120 21 00 02           4373 	ld	hl,#0x0200
   1123 09                 4374 	add	hl,bc
   1124 4D                 4375 	ld	c,l
   1125 44                 4376 	ld	b,h
   1126 79                 4377 	ld	a,c
   1127 DD 86 FA           4378 	add	a,-6 (ix)
   112A 4F                 4379 	ld	c,a
   112B 78                 4380 	ld	a,b
   112C DD 8E FB           4381 	adc	a,-5 (ix)
   112F 47                 4382 	ld	b,a
   1130 DD 6E F2           4383 	ld	l,-14 (ix)
   1133 DD 66 F3           4384 	ld	h,-13 (ix)
   1136 71                 4385 	ld	(hl),c
   1137 23                 4386 	inc	hl
   1138 70                 4387 	ld	(hl),b
                           4388 ;demo.c:585: cmd.size_x = 1;
   1139 21r9Cs16           4389 	ld	hl, #_cmd + 8
   113C 36 01              4390 	ld	(hl),#0x01
   113E 23                 4391 	inc	hl
   113F 36 00              4392 	ld	(hl),#0x00
                           4393 ;demo.c:586: cmd.size_y = 1;
   1141 21r9Es16           4394 	ld	hl, #_cmd + 10
   1144 36 01              4395 	ld	(hl),#0x01
   1146 23                 4396 	inc	hl
   1147 36 00              4397 	ld	(hl),#0x00
                           4398 ;demo.c:587: cmd.argument = 0x00;
   1149 3E 00              4399 	ld	a,#0x00
   114B 32rA1s16           4400 	ld	(#_cmd + 13),a
                           4401 ;demo.c:588: cmd.command = 0x40; // get pixel
   114E 3E 40              4402 	ld	a,#0x40
   1150 32rA2s16           4403 	ld	(#_cmd + 14),a
                           4404 ;demo.c:589: vdp_copier(&cmd);
   1153 D5                 4405 	push	de
   1154 21r94s16           4406 	ld	hl,#_cmd
   1157 E5                 4407 	push	hl
   1158 CDr00s00           4408 	call	_vdp_copier
   115B F1                 4409 	pop	af
   115C D1                 4410 	pop	de
                           4411 ;demo.c:591: col = vdp2_status(7);
   115D D5                 4412 	push	de
   115E 3E 07              4413 	ld	a,#0x07
   1160 F5                 4414 	push	af
   1161 33                 4415 	inc	sp
   1162 CDr00s00           4416 	call	_vdp2_status
   1165 33                 4417 	inc	sp
   1166 4D                 4418 	ld	c,l
   1167 D1                 4419 	pop	de
   1168 DD 71 F8           4420 	ld	-8 (ix),c
   116B DD 36 F9 00        4421 	ld	-7 (ix),#0x00
                           4422 ;demo.c:593: cmd.data = col;
   116F 01rA0s16           4423 	ld	bc,#_cmd + 12
   1172 DD 7E F8           4424 	ld	a,-8 (ix)
   1175 02                 4425 	ld	(bc),a
                           4426 ;demo.c:594: cmd.dest_x = lx+x*3;
   1176 21r98s16           4427 	ld	hl,#_cmd + 4
   1179 DD 75 F2           4428 	ld	-14 (ix),l
   117C DD 74 F3           4429 	ld	-13 (ix),h
   117F 21r1As17           4430 	ld	hl,#_lx + 0
   1182 4E                 4431 	ld	c,(hl)
   1183 06 00              4432 	ld	b,#0x00
   1185 79                 4433 	ld	a,c
   1186 DD 86 F4           4434 	add	a,-12 (ix)
   1189 4F                 4435 	ld	c,a
   118A 78                 4436 	ld	a,b
   118B DD 8E F5           4437 	adc	a,-11 (ix)
   118E 47                 4438 	ld	b,a
   118F DD 6E F2           4439 	ld	l,-14 (ix)
   1192 DD 66 F3           4440 	ld	h,-13 (ix)
   1195 71                 4441 	ld	(hl),c
   1196 23                 4442 	inc	hl
   1197 70                 4443 	ld	(hl),b
                           4444 ;demo.c:595: cmd.dest_y = ly+y*3;
   1198 21r9As16           4445 	ld	hl,#_cmd + 6
   119B DD 75 F2           4446 	ld	-14 (ix),l
   119E DD 74 F3           4447 	ld	-13 (ix),h
   11A1 21r1Bs17           4448 	ld	hl,#_ly + 0
   11A4 4E                 4449 	ld	c,(hl)
   11A5 06 00              4450 	ld	b,#0x00
   11A7 79                 4451 	ld	a,c
   11A8 DD 86 F6           4452 	add	a,-10 (ix)
   11AB 4F                 4453 	ld	c,a
   11AC 78                 4454 	ld	a,b
   11AD DD 8E F7           4455 	adc	a,-9 (ix)
   11B0 47                 4456 	ld	b,a
   11B1 DD 6E F2           4457 	ld	l,-14 (ix)
   11B4 DD 66 F3           4458 	ld	h,-13 (ix)
   11B7 71                 4459 	ld	(hl),c
   11B8 23                 4460 	inc	hl
   11B9 70                 4461 	ld	(hl),b
                           4462 ;demo.c:598: cmd.argument = 0x00;
   11BA 3E 00              4463 	ld	a,#0x00
   11BC 32rA1s16           4464 	ld	(#_cmd + 13),a
                           4465 ;demo.c:599: cmd.command = 0x50; // rect
   11BF 3E 50              4466 	ld	a,#0x50
   11C1 32rA2s16           4467 	ld	(#_cmd + 14),a
                           4468 ;demo.c:600: vdp_copier(&cmd);
   11C4 D5                 4469 	push	de
   11C5 21r94s16           4470 	ld	hl,#_cmd
   11C8 E5                 4471 	push	hl
   11C9 CDr00s00           4472 	call	_vdp_copier
   11CC F1                 4473 	pop	af
   11CD D1                 4474 	pop	de
                           4475 ;demo.c:601: cmd.dest_x = 1+lx+x*3;
   11CE 21r98s16           4476 	ld	hl,#_cmd + 4
   11D1 DD 75 F2           4477 	ld	-14 (ix),l
   11D4 DD 74 F3           4478 	ld	-13 (ix),h
   11D7 21r1As17           4479 	ld	hl,#_lx + 0
   11DA 4E                 4480 	ld	c,(hl)
   11DB 06 00              4481 	ld	b,#0x00
   11DD 03                 4482 	inc	bc
   11DE 79                 4483 	ld	a,c
   11DF DD 86 F4           4484 	add	a,-12 (ix)
   11E2 4F                 4485 	ld	c,a
   11E3 78                 4486 	ld	a,b
   11E4 DD 8E F5           4487 	adc	a,-11 (ix)
   11E7 47                 4488 	ld	b,a
   11E8 DD 6E F2           4489 	ld	l,-14 (ix)
   11EB DD 66 F3           4490 	ld	h,-13 (ix)
   11EE 71                 4491 	ld	(hl),c
   11EF 23                 4492 	inc	hl
   11F0 70                 4493 	ld	(hl),b
                           4494 ;demo.c:602: cmd.dest_y = ly+y*3;
   11F1 21r9As16           4495 	ld	hl,#_cmd + 6
   11F4 DD 75 F2           4496 	ld	-14 (ix),l
   11F7 DD 74 F3           4497 	ld	-13 (ix),h
   11FA 21r1Bs17           4498 	ld	hl,#_ly + 0
   11FD 4E                 4499 	ld	c,(hl)
   11FE 06 00              4500 	ld	b,#0x00
   1200 79                 4501 	ld	a,c
   1201 DD 86 F6           4502 	add	a,-10 (ix)
   1204 4F                 4503 	ld	c,a
   1205 78                 4504 	ld	a,b
   1206 DD 8E F7           4505 	adc	a,-9 (ix)
   1209 47                 4506 	ld	b,a
   120A DD 6E F2           4507 	ld	l,-14 (ix)
   120D DD 66 F3           4508 	ld	h,-13 (ix)
   1210 71                 4509 	ld	(hl),c
   1211 23                 4510 	inc	hl
   1212 70                 4511 	ld	(hl),b
                           4512 ;demo.c:603: vdp_copier(&cmd);
   1213 D5                 4513 	push	de
   1214 21r94s16           4514 	ld	hl,#_cmd
   1217 E5                 4515 	push	hl
   1218 CDr00s00           4516 	call	_vdp_copier
   121B F1                 4517 	pop	af
   121C D1                 4518 	pop	de
                           4519 ;demo.c:604: cmd.dest_x = 1+lx+x*3;
   121D 21r98s16           4520 	ld	hl,#_cmd + 4
   1220 DD 75 F2           4521 	ld	-14 (ix),l
   1223 DD 74 F3           4522 	ld	-13 (ix),h
   1226 21r1As17           4523 	ld	hl,#_lx + 0
   1229 4E                 4524 	ld	c,(hl)
   122A 06 00              4525 	ld	b,#0x00
   122C 03                 4526 	inc	bc
   122D 79                 4527 	ld	a,c
   122E DD 86 F4           4528 	add	a,-12 (ix)
   1231 4F                 4529 	ld	c,a
   1232 78                 4530 	ld	a,b
   1233 DD 8E F5           4531 	adc	a,-11 (ix)
   1236 47                 4532 	ld	b,a
   1237 DD 6E F2           4533 	ld	l,-14 (ix)
   123A DD 66 F3           4534 	ld	h,-13 (ix)
   123D 71                 4535 	ld	(hl),c
   123E 23                 4536 	inc	hl
   123F 70                 4537 	ld	(hl),b
                           4538 ;demo.c:605: cmd.dest_y = 1+ly+y*3;
   1240 21r9As16           4539 	ld	hl,#_cmd + 6
   1243 DD 75 F2           4540 	ld	-14 (ix),l
   1246 DD 74 F3           4541 	ld	-13 (ix),h
   1249 21r1Bs17           4542 	ld	hl,#_ly + 0
   124C 4E                 4543 	ld	c,(hl)
   124D 06 00              4544 	ld	b,#0x00
   124F 03                 4545 	inc	bc
   1250 79                 4546 	ld	a,c
   1251 DD 86 F6           4547 	add	a,-10 (ix)
   1254 4F                 4548 	ld	c,a
   1255 78                 4549 	ld	a,b
   1256 DD 8E F7           4550 	adc	a,-9 (ix)
   1259 47                 4551 	ld	b,a
   125A DD 6E F2           4552 	ld	l,-14 (ix)
   125D DD 66 F3           4553 	ld	h,-13 (ix)
   1260 71                 4554 	ld	(hl),c
   1261 23                 4555 	inc	hl
   1262 70                 4556 	ld	(hl),b
                           4557 ;demo.c:606: vdp_copier(&cmd);
   1263 D5                 4558 	push	de
   1264 21r94s16           4559 	ld	hl,#_cmd
   1267 E5                 4560 	push	hl
   1268 CDr00s00           4561 	call	_vdp_copier
   126B F1                 4562 	pop	af
   126C D1                 4563 	pop	de
                           4564 ;demo.c:607: cmd.dest_x = lx+x*3;
   126D 21r98s16           4565 	ld	hl,#_cmd + 4
   1270 DD 75 F2           4566 	ld	-14 (ix),l
   1273 DD 74 F3           4567 	ld	-13 (ix),h
   1276 21r1As17           4568 	ld	hl,#_lx + 0
   1279 4E                 4569 	ld	c,(hl)
   127A 06 00              4570 	ld	b,#0x00
   127C 79                 4571 	ld	a,c
   127D DD 86 F4           4572 	add	a,-12 (ix)
   1280 4F                 4573 	ld	c,a
   1281 78                 4574 	ld	a,b
   1282 DD 8E F5           4575 	adc	a,-11 (ix)
   1285 47                 4576 	ld	b,a
   1286 DD 6E F2           4577 	ld	l,-14 (ix)
   1289 DD 66 F3           4578 	ld	h,-13 (ix)
   128C 71                 4579 	ld	(hl),c
   128D 23                 4580 	inc	hl
   128E 70                 4581 	ld	(hl),b
                           4582 ;demo.c:608: cmd.dest_y = 1+ly+y*3;
   128F 21r9As16           4583 	ld	hl,#_cmd + 6
   1292 DD 75 F2           4584 	ld	-14 (ix),l
   1295 DD 74 F3           4585 	ld	-13 (ix),h
   1298 21r1Bs17           4586 	ld	hl,#_ly + 0
   129B 4E                 4587 	ld	c,(hl)
   129C 06 00              4588 	ld	b,#0x00
   129E 03                 4589 	inc	bc
   129F 79                 4590 	ld	a,c
   12A0 DD 86 F6           4591 	add	a,-10 (ix)
   12A3 4F                 4592 	ld	c,a
   12A4 78                 4593 	ld	a,b
   12A5 DD 8E F7           4594 	adc	a,-9 (ix)
   12A8 47                 4595 	ld	b,a
   12A9 DD 6E F2           4596 	ld	l,-14 (ix)
   12AC DD 66 F3           4597 	ld	h,-13 (ix)
   12AF 71                 4598 	ld	(hl),c
   12B0 23                 4599 	inc	hl
   12B1 70                 4600 	ld	(hl),b
                           4601 ;demo.c:609: vdp_copier(&cmd);
   12B2 D5                 4602 	push	de
   12B3 21r94s16           4603 	ld	hl,#_cmd
   12B6 E5                 4604 	push	hl
   12B7 CDr00s00           4605 	call	_vdp_copier
   12BA F1                 4606 	pop	af
   12BB D1                 4607 	pop	de
                           4608 ;demo.c:582: for (x=0;x<font_w[cidx];x++) {
   12BC DD 7E F4           4609 	ld	a,-12 (ix)
   12BF C6 03              4610 	add	a,#0x03
   12C1 DD 77 F4           4611 	ld	-12 (ix),a
   12C4 DD 7E F5           4612 	ld	a,-11 (ix)
   12C7 CE 00              4613 	adc	a,#0x00
   12C9 DD 77 F5           4614 	ld	-11 (ix),a
   12CC DD 34 FC           4615 	inc	-4 (ix)
   12CF 20 03              4616 	jr	NZ,00117$
   12D1 DD 34 FD           4617 	inc	-3 (ix)
   12D4                    4618 00117$:
   12D4 C3rD4s10           4619 	jp	00101$
   12D7                    4620 00115$:
   12D7 DD 7E FC           4621 	ld	a,-4 (ix)
   12DA DD 77 F2           4622 	ld	-14 (ix),a
   12DD DD 7E FD           4623 	ld	a,-3 (ix)
   12E0 DD 77 F3           4624 	ld	-13 (ix),a
                           4625 ;demo.c:611: waitVB();
   12E3 76                 4626 		halt 
                           4627 ;demo.c:581: for (y=0;y<8;y++) {
   12E4 DD 7E F6           4628 	ld	a,-10 (ix)
   12E7 C6 03              4629 	add	a,#0x03
   12E9 DD 77 F6           4630 	ld	-10 (ix),a
   12EC DD 7E F7           4631 	ld	a,-9 (ix)
   12EF CE 00              4632 	adc	a,#0x00
   12F1 DD 77 F7           4633 	ld	-9 (ix),a
   12F4 DD 34 FA           4634 	inc	-6 (ix)
   12F7 20 03              4635 	jr	NZ,00118$
   12F9 DD 34 FB           4636 	inc	-5 (ix)
   12FC                    4637 00118$:
   12FC C3rB7s10           4638 	jp	00105$
   12FF                    4639 00108$:
                           4640 ;demo.c:614: lx+=font_w[cidx]-1+(x*4);
   12FF 3ErA7              4641 	ld	a,#<_font_w
   1301 DD 86 FE           4642 	add	a,-2 (ix)
   1304 4F                 4643 	ld	c,a
   1305 3Es13              4644 	ld	a,#>_font_w
   1307 DD 8E FF           4645 	adc	a,-1 (ix)
   130A 47                 4646 	ld	b,a
   130B 0A                 4647 	ld	a,(bc)
   130C 4F                 4648 	ld	c,a
   130D 0D                 4649 	dec	c
   130E DD 46 F2           4650 	ld	b,-14 (ix)
   1311 CB 20              4651 	sla	b
   1313 CB 20              4652 	sla	b
   1315 79                 4653 	ld	a,c
   1316 80                 4654 	add	a,b
   1317 4F                 4655 	ld	c,a
   1318 21r1As17           4656 	ld	hl,#_lx + 0
   131B 46                 4657 	ld	b,(hl)
   131C 21r1As17           4658 	ld	hl,#_lx
   131F 78                 4659 	ld	a,b
   1320 81                 4660 	add	a,c
   1321 77                 4661 	ld	(hl),a
   1322 DD F9              4662 	ld	sp,ix
   1324 DD E1              4663 	pop	ix
   1326 C9                 4664 	ret
   1327                    4665 _do_2xletter_end::
   1327                    4666 _font_x:
   1327 01                 4667 	.db #0x01
   1328 09                 4668 	.db #0x09
   1329 11                 4669 	.db #0x11
   132A 19                 4670 	.db #0x19
   132B 21                 4671 	.db #0x21
   132C 29                 4672 	.db #0x29
   132D 31                 4673 	.db #0x31
   132E 39                 4674 	.db #0x39
   132F 41                 4675 	.db #0x41
   1330 46                 4676 	.db #0x46
   1331 4E                 4677 	.db #0x4E
   1332 56                 4678 	.db #0x56
   1333 5E                 4679 	.db #0x5E
   1334 01                 4680 	.db #0x01
   1335 0A                 4681 	.db #0x0A
   1336 12                 4682 	.db #0x12
   1337 1A                 4683 	.db #0x1A
   1338 23                 4684 	.db #0x23
   1339 2B                 4685 	.db #0x2B
   133A 33                 4686 	.db #0x33
   133B 3C                 4687 	.db #0x3C
   133C 44                 4688 	.db #0x44
   133D 4C                 4689 	.db #0x4C
   133E 56                 4690 	.db #0x56
   133F 5E                 4691 	.db #0x5E
   1340 67                 4692 	.db #0x67
   1341 00                 4693 	.db #0x00
   1342 00                 4694 	.db #0x00
   1343 00                 4695 	.db #0x00
   1344 00                 4696 	.db #0x00
   1345 00                 4697 	.db #0x00
   1346 00                 4698 	.db #0x00
   1347 01                 4699 	.db #0x01
   1348 09                 4700 	.db #0x09
   1349 11                 4701 	.db #0x11
   134A 18                 4702 	.db #0x18
   134B 20                 4703 	.db #0x20
   134C 28                 4704 	.db #0x28
   134D 2F                 4705 	.db #0x2F
   134E 37                 4706 	.db #0x37
   134F 3F                 4707 	.db #0x3F
   1350 45                 4708 	.db #0x45
   1351 4C                 4709 	.db #0x4C
   1352 54                 4710 	.db #0x54
   1353 5A                 4711 	.db #0x5A
   1354 64                 4712 	.db #0x64
   1355 01                 4713 	.db #0x01
   1356 09                 4714 	.db #0x09
   1357 11                 4715 	.db #0x11
   1358 19                 4716 	.db #0x19
   1359 21                 4717 	.db #0x21
   135A 29                 4718 	.db #0x29
   135B 30                 4719 	.db #0x30
   135C 38                 4720 	.db #0x38
   135D 40                 4721 	.db #0x40
   135E 4A                 4722 	.db #0x4A
   135F 52                 4723 	.db #0x52
   1360 5A                 4724 	.db #0x5A
   1361 00                 4725 	.db 0x00
   1362 00                 4726 	.db 0x00
   1363 00                 4727 	.db 0x00
   1364 00                 4728 	.db 0x00
   1365 00                 4729 	.db 0x00
   1366 00                 4730 	.db 0x00
   1367                    4731 _font_y:
   1367 1C                 4732 	.db #0x1C
   1368 1C                 4733 	.db #0x1C
   1369 1C                 4734 	.db #0x1C
   136A 1C                 4735 	.db #0x1C
   136B 1C                 4736 	.db #0x1C
   136C 1C                 4737 	.db #0x1C
   136D 1C                 4738 	.db #0x1C
   136E 1C                 4739 	.db #0x1C
   136F 1C                 4740 	.db #0x1C
   1370 1C                 4741 	.db #0x1C
   1371 1C                 4742 	.db #0x1C
   1372 1C                 4743 	.db #0x1C
   1373 1C                 4744 	.db #0x1C
   1374 25                 4745 	.db #0x25
   1375 25                 4746 	.db #0x25
   1376 25                 4747 	.db #0x25
   1377 25                 4748 	.db #0x25
   1378 25                 4749 	.db #0x25
   1379 25                 4750 	.db #0x25
   137A 25                 4751 	.db #0x25
   137B 25                 4752 	.db #0x25
   137C 25                 4753 	.db #0x25
   137D 25                 4754 	.db #0x25
   137E 25                 4755 	.db #0x25
   137F 25                 4756 	.db #0x25
   1380 25                 4757 	.db #0x25
   1381 00                 4758 	.db #0x00
   1382 00                 4759 	.db #0x00
   1383 00                 4760 	.db #0x00
   1384 00                 4761 	.db #0x00
   1385 00                 4762 	.db #0x00
   1386 00                 4763 	.db #0x00
   1387 37                 4764 	.db #0x37
   1388 37                 4765 	.db #0x37
   1389 37                 4766 	.db #0x37
   138A 37                 4767 	.db #0x37
   138B 37                 4768 	.db #0x37
   138C 37                 4769 	.db #0x37
   138D 37                 4770 	.db #0x37
   138E 37                 4771 	.db #0x37
   138F 37                 4772 	.db #0x37
   1390 37                 4773 	.db #0x37
   1391 37                 4774 	.db #0x37
   1392 37                 4775 	.db #0x37
   1393 37                 4776 	.db #0x37
   1394 37                 4777 	.db #0x37
   1395 40                 4778 	.db #0x40
   1396 40                 4779 	.db #0x40
   1397 40                 4780 	.db #0x40
   1398 40                 4781 	.db #0x40
   1399 40                 4782 	.db #0x40
   139A 40                 4783 	.db #0x40
   139B 40                 4784 	.db #0x40
   139C 40                 4785 	.db #0x40
   139D 40                 4786 	.db #0x40
   139E 40                 4787 	.db #0x40
   139F 40                 4788 	.db #0x40
   13A0 40                 4789 	.db #0x40
   13A1 00                 4790 	.db 0x00
   13A2 00                 4791 	.db 0x00
   13A3 00                 4792 	.db 0x00
   13A4 00                 4793 	.db 0x00
   13A5 00                 4794 	.db 0x00
   13A6 00                 4795 	.db 0x00
   13A7                    4796 _font_w:
   13A7 07                 4797 	.db #0x07
   13A8 07                 4798 	.db #0x07
   13A9 07                 4799 	.db #0x07
   13AA 07                 4800 	.db #0x07
   13AB 07                 4801 	.db #0x07
   13AC 07                 4802 	.db #0x07
   13AD 07                 4803 	.db #0x07
   13AE 07                 4804 	.db #0x07
   13AF 04                 4805 	.db #0x04
   13B0 07                 4806 	.db #0x07
   13B1 07                 4807 	.db #0x07
   13B2 07                 4808 	.db #0x07
   13B3 09                 4809 	.db #0x09
   13B4 08                 4810 	.db #0x08
   13B5 07                 4811 	.db #0x07
   13B6 07                 4812 	.db #0x07
   13B7 08                 4813 	.db #0x08
   13B8 07                 4814 	.db #0x07
   13B9 07                 4815 	.db #0x07
   13BA 08                 4816 	.db #0x08
   13BB 07                 4817 	.db #0x07
   13BC 07                 4818 	.db #0x07
   13BD 09                 4819 	.db #0x09
   13BE 07                 4820 	.db #0x07
   13BF 08                 4821 	.db #0x08
   13C0 07                 4822 	.db #0x07
   13C1 00                 4823 	.db #0x00
   13C2 00                 4824 	.db #0x00
   13C3 00                 4825 	.db #0x00
   13C4 00                 4826 	.db #0x00
   13C5 00                 4827 	.db #0x00
   13C6 00                 4828 	.db #0x00
   13C7 07                 4829 	.db #0x07
   13C8 07                 4830 	.db #0x07
   13C9 06                 4831 	.db #0x06
   13CA 07                 4832 	.db #0x07
   13CB 07                 4833 	.db #0x07
   13CC 07                 4834 	.db #0x07
   13CD 07                 4835 	.db #0x07
   13CE 07                 4836 	.db #0x07
   13CF 05                 4837 	.db #0x05
   13D0 06                 4838 	.db #0x06
   13D1 07                 4839 	.db #0x07
   13D2 05                 4840 	.db #0x05
   13D3 09                 4841 	.db #0x09
   13D4 07                 4842 	.db #0x07
   13D5 07                 4843 	.db #0x07
   13D6 07                 4844 	.db #0x07
   13D7 07                 4845 	.db #0x07
   13D8 07                 4846 	.db #0x07
   13D9 07                 4847 	.db #0x07
   13DA 06                 4848 	.db #0x06
   13DB 07                 4849 	.db #0x07
   13DC 07                 4850 	.db #0x07
   13DD 09                 4851 	.db #0x09
   13DE 07                 4852 	.db #0x07
   13DF 07                 4853 	.db #0x07
   13E0 07                 4854 	.db #0x07
   13E1 00                 4855 	.db 0x00
   13E2 00                 4856 	.db 0x00
   13E3 00                 4857 	.db 0x00
   13E4 00                 4858 	.db 0x00
   13E5 00                 4859 	.db 0x00
   13E6 00                 4860 	.db 0x00
                           4861 ;demo.c:618: void do_letter(char cc) {
                           4862 ;	---------------------------------
                           4863 ; Function do_letter
                           4864 ; ---------------------------------
   13E7                    4865 _do_letter_start::
   13E7                    4866 _do_letter:
   13E7 DD E5              4867 	push	ix
   13E9 DD 21 00 00        4868 	ld	ix,#0
   13ED DD 39              4869 	add	ix,sp
   13EF F5                 4870 	push	af
                           4871 ;demo.c:619: int cidx = cc - 65;
   13F0 DD 4E 04           4872 	ld	c,4 (ix)
   13F3 DD 7E 04           4873 	ld	a,4 (ix)
   13F6 17                 4874 	rla	
   13F7 9F                 4875 	sbc	a,a
   13F8 47                 4876 	ld	b,a
   13F9 79                 4877 	ld	a,c
   13FA C6 BF              4878 	add	a,#0xBF
   13FC DD 77 FE           4879 	ld	-2 (ix),a
   13FF 78                 4880 	ld	a,b
   1400 CE FF              4881 	adc	a,#0xFF
   1402 DD 77 FF           4882 	ld	-1 (ix),a
                           4883 ;demo.c:620: cmd.source_x = 127+font_x[cidx];
   1405 3Er27              4884 	ld	a,#<_font_x
   1407 DD 86 FE           4885 	add	a,-2 (ix)
   140A 5F                 4886 	ld	e,a
   140B 3Es13              4887 	ld	a,#>_font_x
   140D DD 8E FF           4888 	adc	a,-1 (ix)
   1410 57                 4889 	ld	d,a
   1411 1A                 4890 	ld	a,(de)
   1412 5F                 4891 	ld	e,a
   1413 16 00              4892 	ld	d,#0x00
   1415 21 7F 00           4893 	ld	hl,#0x007F
   1418 19                 4894 	add	hl,de
   1419 EB                 4895 	ex	de,hl
   141A 21r94s16           4896 	ld	hl,#_cmd
   141D 73                 4897 	ld	(hl),e
   141E 23                 4898 	inc	hl
   141F 72                 4899 	ld	(hl),d
                           4900 ;demo.c:621: cmd.source_y = 512+font_y[cidx];
   1420 11r96s16           4901 	ld	de,#_cmd + 2
   1423 3Er67              4902 	ld	a,#<_font_y
   1425 DD 86 FE           4903 	add	a,-2 (ix)
   1428 4F                 4904 	ld	c,a
   1429 3Es13              4905 	ld	a,#>_font_y
   142B DD 8E FF           4906 	adc	a,-1 (ix)
   142E 47                 4907 	ld	b,a
   142F 0A                 4908 	ld	a,(bc)
   1430 4F                 4909 	ld	c,a
   1431 06 00              4910 	ld	b,#0x00
   1433 21 00 02           4911 	ld	hl,#0x0200
   1436 09                 4912 	add	hl,bc
   1437 4D                 4913 	ld	c,l
   1438 44                 4914 	ld	b,h
   1439 EB                 4915 	ex	de,hl
   143A 71                 4916 	ld	(hl),c
   143B 23                 4917 	inc	hl
   143C 70                 4918 	ld	(hl),b
                           4919 ;demo.c:622: cmd.dest_x = lx;
   143D 01r98s16           4920 	ld	bc,#_cmd + 4
   1440 21r1As17           4921 	ld	hl,#_lx + 0
   1443 5E                 4922 	ld	e,(hl)
   1444 16 00              4923 	ld	d,#0x00
   1446 69                 4924 	ld	l,c
   1447 60                 4925 	ld	h,b
   1448 73                 4926 	ld	(hl),e
   1449 23                 4927 	inc	hl
   144A 72                 4928 	ld	(hl),d
                           4929 ;demo.c:623: cmd.dest_y = ly;
   144B 01r9As16           4930 	ld	bc,#_cmd + 6
   144E 21r1Bs17           4931 	ld	hl,#_ly + 0
   1451 5E                 4932 	ld	e,(hl)
   1452 16 00              4933 	ld	d,#0x00
   1454 69                 4934 	ld	l,c
   1455 60                 4935 	ld	h,b
   1456 73                 4936 	ld	(hl),e
   1457 23                 4937 	inc	hl
   1458 72                 4938 	ld	(hl),d
                           4939 ;demo.c:624: cmd.size_x = font_w[cidx];
   1459 01r9Cs16           4940 	ld	bc,#_cmd + 8
   145C 3ErA7              4941 	ld	a,#<_font_w
   145E DD 86 FE           4942 	add	a,-2 (ix)
   1461 5F                 4943 	ld	e,a
   1462 3Es13              4944 	ld	a,#>_font_w
   1464 DD 8E FF           4945 	adc	a,-1 (ix)
   1467 57                 4946 	ld	d,a
   1468 1A                 4947 	ld	a,(de)
   1469 5F                 4948 	ld	e,a
   146A 16 00              4949 	ld	d,#0x00
   146C 69                 4950 	ld	l,c
   146D 60                 4951 	ld	h,b
   146E 73                 4952 	ld	(hl),e
   146F 23                 4953 	inc	hl
   1470 72                 4954 	ld	(hl),d
                           4955 ;demo.c:625: cmd.size_y = 8;
   1471 21r9Es16           4956 	ld	hl, #_cmd + 10
   1474 36 08              4957 	ld	(hl),#0x08
   1476 23                 4958 	inc	hl
   1477 36 00              4959 	ld	(hl),#0x00
                           4960 ;demo.c:626: cmd.argument = 0x00;
   1479 3E 00              4961 	ld	a,#0x00
   147B 32rA1s16           4962 	ld	(#_cmd + 13),a
                           4963 ;demo.c:627: cmd.command = 0x90; // logical vram to vram
   147E 3E 90              4964 	ld	a,#0x90
   1480 32rA2s16           4965 	ld	(#_cmd + 14),a
                           4966 ;demo.c:628: vdp_copier(&cmd);
   1483 21r94s16           4967 	ld	hl,#_cmd
   1486 E5                 4968 	push	hl
   1487 CDr00s00           4969 	call	_vdp_copier
   148A F1                 4970 	pop	af
                           4971 ;demo.c:629: lx+=font_w[cidx]-1;
   148B 3ErA7              4972 	ld	a,#<_font_w
   148D DD 86 FE           4973 	add	a,-2 (ix)
   1490 4F                 4974 	ld	c,a
   1491 3Es13              4975 	ld	a,#>_font_w
   1493 DD 8E FF           4976 	adc	a,-1 (ix)
   1496 47                 4977 	ld	b,a
   1497 0A                 4978 	ld	a,(bc)
   1498 4F                 4979 	ld	c,a
   1499 0D                 4980 	dec	c
   149A 21r1As17           4981 	ld	hl,#_lx
   149D 7E                 4982 	ld	a,(hl)
   149E 81                 4983 	add	a,c
   149F 77                 4984 	ld	(hl),a
   14A0 DD F9              4985 	ld	sp,ix
   14A2 DD E1              4986 	pop	ix
   14A4 C9                 4987 	ret
   14A5                    4988 _do_letter_end::
                           4989 ;demo.c:633: void do_letter_tall(char cc) {
                           4990 ;	---------------------------------
                           4991 ; Function do_letter_tall
                           4992 ; ---------------------------------
   14A5                    4993 _do_letter_tall_start::
   14A5                    4994 _do_letter_tall:
   14A5 DD E5              4995 	push	ix
   14A7 DD 21 00 00        4996 	ld	ix,#0
   14AB DD 39              4997 	add	ix,sp
   14AD F5                 4998 	push	af
                           4999 ;demo.c:634: int cidx = cc - 65;
   14AE DD 4E 04           5000 	ld	c,4 (ix)
   14B1 DD 7E 04           5001 	ld	a,4 (ix)
   14B4 17                 5002 	rla	
   14B5 9F                 5003 	sbc	a,a
   14B6 47                 5004 	ld	b,a
   14B7 79                 5005 	ld	a,c
   14B8 C6 BF              5006 	add	a,#0xBF
   14BA DD 77 FE           5007 	ld	-2 (ix),a
   14BD 78                 5008 	ld	a,b
   14BE CE FF              5009 	adc	a,#0xFF
   14C0 DD 77 FF           5010 	ld	-1 (ix),a
                           5011 ;demo.c:635: cmd.source_x = 127+font_x[cidx];
   14C3 3Er27              5012 	ld	a,#<_font_x
   14C5 DD 86 FE           5013 	add	a,-2 (ix)
   14C8 5F                 5014 	ld	e,a
   14C9 3Es13              5015 	ld	a,#>_font_x
   14CB DD 8E FF           5016 	adc	a,-1 (ix)
   14CE 57                 5017 	ld	d,a
   14CF 1A                 5018 	ld	a,(de)
   14D0 5F                 5019 	ld	e,a
   14D1 16 00              5020 	ld	d,#0x00
   14D3 21 7F 00           5021 	ld	hl,#0x007F
   14D6 19                 5022 	add	hl,de
   14D7 EB                 5023 	ex	de,hl
   14D8 21r94s16           5024 	ld	hl,#_cmd
   14DB 73                 5025 	ld	(hl),e
   14DC 23                 5026 	inc	hl
   14DD 72                 5027 	ld	(hl),d
                           5028 ;demo.c:636: cmd.source_y = 512+font_y[cidx]-1;
   14DE 11r96s16           5029 	ld	de,#_cmd + 2
   14E1 3Er67              5030 	ld	a,#<_font_y
   14E3 DD 86 FE           5031 	add	a,-2 (ix)
   14E6 4F                 5032 	ld	c,a
   14E7 3Es13              5033 	ld	a,#>_font_y
   14E9 DD 8E FF           5034 	adc	a,-1 (ix)
   14EC 47                 5035 	ld	b,a
   14ED 0A                 5036 	ld	a,(bc)
   14EE 4F                 5037 	ld	c,a
   14EF 06 00              5038 	ld	b,#0x00
   14F1 21 FF 01           5039 	ld	hl,#0x01FF
   14F4 09                 5040 	add	hl,bc
   14F5 4D                 5041 	ld	c,l
   14F6 44                 5042 	ld	b,h
   14F7 EB                 5043 	ex	de,hl
   14F8 71                 5044 	ld	(hl),c
   14F9 23                 5045 	inc	hl
   14FA 70                 5046 	ld	(hl),b
                           5047 ;demo.c:637: cmd.dest_x = lx;
   14FB 01r98s16           5048 	ld	bc,#_cmd + 4
   14FE 21r1As17           5049 	ld	hl,#_lx + 0
   1501 5E                 5050 	ld	e,(hl)
   1502 16 00              5051 	ld	d,#0x00
   1504 69                 5052 	ld	l,c
   1505 60                 5053 	ld	h,b
   1506 73                 5054 	ld	(hl),e
   1507 23                 5055 	inc	hl
   1508 72                 5056 	ld	(hl),d
                           5057 ;demo.c:638: cmd.dest_y = ly;
   1509 01r9As16           5058 	ld	bc,#_cmd + 6
   150C 21r1Bs17           5059 	ld	hl,#_ly + 0
   150F 5E                 5060 	ld	e,(hl)
   1510 16 00              5061 	ld	d,#0x00
   1512 69                 5062 	ld	l,c
   1513 60                 5063 	ld	h,b
   1514 73                 5064 	ld	(hl),e
   1515 23                 5065 	inc	hl
   1516 72                 5066 	ld	(hl),d
                           5067 ;demo.c:639: cmd.size_x = font_w[cidx];
   1517 01r9Cs16           5068 	ld	bc,#_cmd + 8
   151A 3ErA7              5069 	ld	a,#<_font_w
   151C DD 86 FE           5070 	add	a,-2 (ix)
   151F 5F                 5071 	ld	e,a
   1520 3Es13              5072 	ld	a,#>_font_w
   1522 DD 8E FF           5073 	adc	a,-1 (ix)
   1525 57                 5074 	ld	d,a
   1526 1A                 5075 	ld	a,(de)
   1527 5F                 5076 	ld	e,a
   1528 16 00              5077 	ld	d,#0x00
   152A 69                 5078 	ld	l,c
   152B 60                 5079 	ld	h,b
   152C 73                 5080 	ld	(hl),e
   152D 23                 5081 	inc	hl
   152E 72                 5082 	ld	(hl),d
                           5083 ;demo.c:640: cmd.size_y = 10;
   152F 21r9Es16           5084 	ld	hl, #_cmd + 10
   1532 36 0A              5085 	ld	(hl),#0x0A
   1534 23                 5086 	inc	hl
   1535 36 00              5087 	ld	(hl),#0x00
                           5088 ;demo.c:641: cmd.argument = 0x00;
   1537 3E 00              5089 	ld	a,#0x00
   1539 32rA1s16           5090 	ld	(#_cmd + 13),a
                           5091 ;demo.c:642: cmd.command = 0x90; // logical vram to vram
   153C 3E 90              5092 	ld	a,#0x90
   153E 32rA2s16           5093 	ld	(#_cmd + 14),a
                           5094 ;demo.c:643: vdp_copier(&cmd);
   1541 21r94s16           5095 	ld	hl,#_cmd
   1544 E5                 5096 	push	hl
   1545 CDr00s00           5097 	call	_vdp_copier
   1548 F1                 5098 	pop	af
                           5099 ;demo.c:644: lx+=font_w[cidx]-1;
   1549 3ErA7              5100 	ld	a,#<_font_w
   154B DD 86 FE           5101 	add	a,-2 (ix)
   154E 4F                 5102 	ld	c,a
   154F 3Es13              5103 	ld	a,#>_font_w
   1551 DD 8E FF           5104 	adc	a,-1 (ix)
   1554 47                 5105 	ld	b,a
   1555 0A                 5106 	ld	a,(bc)
   1556 4F                 5107 	ld	c,a
   1557 0D                 5108 	dec	c
   1558 21r1As17           5109 	ld	hl,#_lx
   155B 7E                 5110 	ld	a,(hl)
   155C 81                 5111 	add	a,c
   155D 77                 5112 	ld	(hl),a
   155E DD F9              5113 	ld	sp,ix
   1560 DD E1              5114 	pop	ix
   1562 C9                 5115 	ret
   1563                    5116 _do_letter_tall_end::
                           5117 ;demo.c:647: void drawstr(char* str, uint8_t x, uint8_t y) {
                           5118 ;	---------------------------------
                           5119 ; Function drawstr
                           5120 ; ---------------------------------
   1563                    5121 _drawstr_start::
   1563                    5122 _drawstr:
   1563 DD E5              5123 	push	ix
   1565 DD 21 00 00        5124 	ld	ix,#0
   1569 DD 39              5125 	add	ix,sp
                           5126 ;demo.c:648: char* c = str;
   156B DD 4E 04           5127 	ld	c,4 (ix)
   156E DD 46 05           5128 	ld	b,5 (ix)
                           5129 ;demo.c:649: lx = x;
   1571 DD 5E 06           5130 	ld	e,6 (ix)
   1574 21r1As17           5131 	ld	hl,#_lx + 0
   1577 73                 5132 	ld	(hl), e
                           5133 ;demo.c:650: ly = y;
   1578 DD 7E 07           5134 	ld	a,7 (ix)
   157B 21r1Bs17           5135 	ld	hl,#_ly + 0
   157E 77                 5136 	ld	(hl), a
                           5137 ;demo.c:651: while (*c) {
   157F                    5138 00107$:
   157F 0A                 5139 	ld	a,(bc)
   1580 57                 5140 	ld	d,a
   1581 B7                 5141 	or	a,a
   1582 28 42              5142 	jr	Z,00110$
                           5143 ;demo.c:652: char ltr = *c++; 
   1584 03                 5144 	inc	bc
                           5145 ;demo.c:653: if (ltr == ' ') lx+=4;
   1585 7A                 5146 	ld	a,d
   1586 D6 20              5147 	sub	a,#0x20
   1588 20 1E              5148 	jr	NZ,00105$
   158A FD 21r1As17        5149 	ld	iy,#_lx
   158E FD 34 00           5150 	inc	0 (iy)
   1591 FD 21r1As17        5151 	ld	iy,#_lx
   1595 FD 34 00           5152 	inc	0 (iy)
   1598 FD 21r1As17        5153 	ld	iy,#_lx
   159C FD 34 00           5154 	inc	0 (iy)
   159F FD 21r1As17        5155 	ld	iy,#_lx
   15A3 FD 34 00           5156 	inc	0 (iy)
   15A6 18 D7              5157 	jr	00107$
   15A8                    5158 00105$:
                           5159 ;demo.c:654: else if (ltr == '_') { ly+=9; lx = x; }
   15A8 7A                 5160 	ld	a,d
   15A9 D6 5F              5161 	sub	a,#0x5F
   15AB 20 0D              5162 	jr	NZ,00102$
   15AD 21r1Bs17           5163 	ld	hl,#_ly
   15B0 7E                 5164 	ld	a,(hl)
   15B1 C6 09              5165 	add	a,#0x09
   15B3 77                 5166 	ld	(hl),a
   15B4 21r1As17           5167 	ld	hl,#_lx + 0
   15B7 73                 5168 	ld	(hl), e
   15B8 18 C5              5169 	jr	00107$
   15BA                    5170 00102$:
                           5171 ;demo.c:655: else do_letter(ltr);
   15BA C5                 5172 	push	bc
   15BB D5                 5173 	push	de
   15BC D5                 5174 	push	de
   15BD 33                 5175 	inc	sp
   15BE CDrE7s13           5176 	call	_do_letter
   15C1 33                 5177 	inc	sp
   15C2 D1                 5178 	pop	de
   15C3 C1                 5179 	pop	bc
   15C4 18 B9              5180 	jr	00107$
   15C6                    5181 00110$:
   15C6 DD E1              5182 	pop	ix
   15C8 C9                 5183 	ret
   15C9                    5184 _drawstr_end::
                           5185 ;demo.c:662: void drawstrslow(char* str, uint8_t x, uint8_t y) {
                           5186 ;	---------------------------------
                           5187 ; Function drawstrslow
                           5188 ; ---------------------------------
   15C9                    5189 _drawstrslow_start::
   15C9                    5190 _drawstrslow:
   15C9 DD E5              5191 	push	ix
   15CB DD 21 00 00        5192 	ld	ix,#0
   15CF DD 39              5193 	add	ix,sp
                           5194 ;demo.c:663: char* c = str+ltrpointer;
   15D1 21r1Cs17           5195 	ld	hl,#_ltrpointer
   15D4 DD 7E 04           5196 	ld	a,4 (ix)
   15D7 86                 5197 	add	a,(hl)
   15D8 4F                 5198 	ld	c,a
   15D9 DD 7E 05           5199 	ld	a,5 (ix)
   15DC 23                 5200 	inc	hl
   15DD 8E                 5201 	adc	a,(hl)
   15DE 47                 5202 	ld	b,a
                           5203 ;demo.c:664: if (ltrpointer > slowend) return;
   15DF 21r1Es17           5204 	ld	hl,#_slowend
   15E2 7E                 5205 	ld	a,(hl)
   15E3 FD 21r1Cs17        5206 	ld	iy,#_ltrpointer
   15E7 FD 96 00           5207 	sub	a,0 (iy)
   15EA 23                 5208 	inc	hl
   15EB 7E                 5209 	ld	a,(hl)
   15EC FD 21r1Cs17        5210 	ld	iy,#_ltrpointer
   15F0 FD 9E 01           5211 	sbc	a,1 (iy)
   15F3 F2rF9s15           5212 	jp	P,00102$
   15F6 C3r64s16           5213 	jp	00114$
   15F9                    5214 00102$:
                           5215 ;demo.c:665: if (ltrpointer == 0) {
   15F9 3Ar1Cs17           5216 	ld	a,(#_ltrpointer+0)
   15FC 21r1Ds17           5217 	ld	hl,#_ltrpointer + 1
   15FF B6                 5218 	or	a,(hl)
   1600 20 0E              5219 	jr	NZ,00111$
                           5220 ;demo.c:666: lx = x;
   1602 DD 7E 06           5221 	ld	a,6 (ix)
   1605 21r1As17           5222 	ld	hl,#_lx + 0
   1608 77                 5223 	ld	(hl), a
                           5224 ;demo.c:667: ly = y;
   1609 DD 7E 07           5225 	ld	a,7 (ix)
   160C 21r1Bs17           5226 	ld	hl,#_ly + 0
   160F 77                 5227 	ld	(hl), a
                           5228 ;demo.c:669: while (*c) {
   1610                    5229 00111$:
   1610 0A                 5230 	ld	a,(bc)
   1611 4F                 5231 	ld	c,a
   1612 B7                 5232 	or	a,a
   1613 28 3F              5233 	jr	Z,00113$
                           5234 ;demo.c:670: char ltr = *c++; 
                           5235 ;demo.c:671: if (ltr == ' ') lx+=4;
   1615 79                 5236 	ld	a,c
   1616 D6 20              5237 	sub	a,#0x20
   1618 20 1E              5238 	jr	NZ,00109$
   161A FD 21r1As17        5239 	ld	iy,#_lx
   161E FD 34 00           5240 	inc	0 (iy)
   1621 FD 21r1As17        5241 	ld	iy,#_lx
   1625 FD 34 00           5242 	inc	0 (iy)
   1628 FD 21r1As17        5243 	ld	iy,#_lx
   162C FD 34 00           5244 	inc	0 (iy)
   162F FD 21r1As17        5245 	ld	iy,#_lx
   1633 FD 34 00           5246 	inc	0 (iy)
   1636 18 1C              5247 	jr	00113$
   1638                    5248 00109$:
                           5249 ;demo.c:672: else if (ltr == '_') { ly+=9; lx = x; }
   1638 79                 5250 	ld	a,c
   1639 D6 5F              5251 	sub	a,#0x5F
   163B 20 10              5252 	jr	NZ,00106$
   163D 21r1Bs17           5253 	ld	hl,#_ly
   1640 7E                 5254 	ld	a,(hl)
   1641 C6 09              5255 	add	a,#0x09
   1643 77                 5256 	ld	(hl),a
   1644 DD 7E 06           5257 	ld	a,6 (ix)
   1647 21r1As17           5258 	ld	hl,#_lx + 0
   164A 77                 5259 	ld	(hl), a
   164B 18 07              5260 	jr	00113$
   164D                    5261 00106$:
                           5262 ;demo.c:673: else do_letter(ltr);
   164D 79                 5263 	ld	a,c
   164E F5                 5264 	push	af
   164F 33                 5265 	inc	sp
   1650 CDrE7s13           5266 	call	_do_letter
   1653 33                 5267 	inc	sp
                           5268 ;demo.c:674: break;
   1654                    5269 00113$:
                           5270 ;demo.c:677: ltrpointer++;
   1654 FD 21r1Cs17        5271 	ld	iy,#_ltrpointer
   1658 FD 34 00           5272 	inc	0 (iy)
   165B 20 07              5273 	jr	NZ,00125$
   165D FD 21r1Cs17        5274 	ld	iy,#_ltrpointer
   1661 FD 34 01           5275 	inc	1 (iy)
   1664                    5276 00125$:
   1664                    5277 00114$:
   1664 DD E1              5278 	pop	ix
   1666 C9                 5279 	ret
   1667                    5280 _drawstrslow_end::
                           5281 ;demo.c:680: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           5282 ;	---------------------------------
                           5283 ; Function drawstr2x
                           5284 ; ---------------------------------
   1667                    5285 _drawstr2x_start::
   1667                    5286 _drawstr2x:
   1667 DD E5              5287 	push	ix
   1669 DD 21 00 00        5288 	ld	ix,#0
   166D DD 39              5289 	add	ix,sp
                           5290 ;demo.c:681: char* c = str;
   166F DD 4E 04           5291 	ld	c,4 (ix)
   1672 DD 46 05           5292 	ld	b,5 (ix)
                           5293 ;demo.c:682: lx = x;
   1675 DD 5E 06           5294 	ld	e,6 (ix)
   1678 21r1As17           5295 	ld	hl,#_lx + 0
   167B 73                 5296 	ld	(hl), e
                           5297 ;demo.c:683: ly = y;
   167C DD 7E 07           5298 	ld	a,7 (ix)
   167F 21r1Bs17           5299 	ld	hl,#_ly + 0
   1682 77                 5300 	ld	(hl), a
                           5301 ;demo.c:684: while (*c) {
   1683                    5302 00107$:
   1683 0A                 5303 	ld	a,(bc)
   1684 57                 5304 	ld	d,a
   1685 B7                 5305 	or	a,a
   1686 28 2D              5306 	jr	Z,00110$
                           5307 ;demo.c:685: char ltr = *c++; 
   1688 03                 5308 	inc	bc
                           5309 ;demo.c:686: if (ltr == ' ') lx+=4*4;
   1689 7A                 5310 	ld	a,d
   168A D6 20              5311 	sub	a,#0x20
   168C 20 09              5312 	jr	NZ,00105$
   168E 21r1As17           5313 	ld	hl,#_lx
   1691 7E                 5314 	ld	a,(hl)
   1692 C6 10              5315 	add	a,#0x10
   1694 77                 5316 	ld	(hl),a
   1695 18 EC              5317 	jr	00107$
   1697                    5318 00105$:
                           5319 ;demo.c:687: else if (ltr == '_') { ly+=9*4; lx = x; }
   1697 7A                 5320 	ld	a,d
   1698 D6 5F              5321 	sub	a,#0x5F
   169A 20 0D              5322 	jr	NZ,00102$
   169C 21r1Bs17           5323 	ld	hl,#_ly
   169F 7E                 5324 	ld	a,(hl)
   16A0 C6 24              5325 	add	a,#0x24
   16A2 77                 5326 	ld	(hl),a
   16A3 21r1As17           5327 	ld	hl,#_lx + 0
   16A6 73                 5328 	ld	(hl), e
   16A7 18 DA              5329 	jr	00107$
   16A9                    5330 00102$:
                           5331 ;demo.c:688: else do_2xletter(ltr);
   16A9 C5                 5332 	push	bc
   16AA D5                 5333 	push	de
   16AB D5                 5334 	push	de
   16AC 33                 5335 	inc	sp
   16AD CDr79s10           5336 	call	_do_2xletter
   16B0 33                 5337 	inc	sp
   16B1 D1                 5338 	pop	de
   16B2 C1                 5339 	pop	bc
   16B3 18 CE              5340 	jr	00107$
   16B5                    5341 00110$:
   16B5 DD E1              5342 	pop	ix
   16B7 C9                 5343 	ret
   16B8                    5344 _drawstr2x_end::
                           5345 ;demo.c:693: void drawsine(char* str, uint8_t x, uint8_t y) {
                           5346 ;	---------------------------------
                           5347 ; Function drawsine
                           5348 ; ---------------------------------
   16B8                    5349 _drawsine_start::
   16B8                    5350 _drawsine:
   16B8 DD E5              5351 	push	ix
   16BA DD 21 00 00        5352 	ld	ix,#0
   16BE DD 39              5353 	add	ix,sp
   16C0 3B                 5354 	dec	sp
                           5355 ;demo.c:694: char* c = str;
   16C1 DD 4E 04           5356 	ld	c,4 (ix)
   16C4 DD 46 05           5357 	ld	b,5 (ix)
                           5358 ;demo.c:695: lx = x;
   16C7 DD 7E 06           5359 	ld	a,6 (ix)
   16CA 21r1As17           5360 	ld	hl,#_lx + 0
   16CD 77                 5361 	ld	(hl), a
                           5362 ;demo.c:697: while (*c) {
   16CE                    5363 00104$:
   16CE 0A                 5364 	ld	a,(bc)
   16CF 5F                 5365 	ld	e,a
   16D0 B7                 5366 	or	a,a
   16D1 CAr37s17           5367 	jp	Z,00107$
                           5368 ;demo.c:698: char ltr = *c++; 
   16D4 03                 5369 	inc	bc
   16D5 DD 73 FF           5370 	ld	-1 (ix),e
                           5371 ;demo.c:699: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   16D8 21r1As17           5372 	ld	hl,#_lx + 0
   16DB 5E                 5373 	ld	e,(hl)
   16DC 16 00              5374 	ld	d,#0x00
   16DE 21r90s16           5375 	ld	hl,#_vbicount
   16E1 7B                 5376 	ld	a,e
   16E2 86                 5377 	add	a,(hl)
   16E3 5F                 5378 	ld	e,a
   16E4 7A                 5379 	ld	a,d
   16E5 23                 5380 	inc	hl
   16E6 8E                 5381 	adc	a,(hl)
   16E7 57                 5382 	ld	d,a
   16E8 CB 2A              5383 	sra	d
   16EA CB 1B              5384 	rr	e
   16EC 16 00              5385 	ld	d,#0x00
   16EE 21r2Cs00           5386 	ld	hl,#_sintabx
   16F1 19                 5387 	add	hl,de
   16F2 5E                 5388 	ld	e,(hl)
   16F3 CB 3B              5389 	srl	e
   16F5 CB 3B              5390 	srl	e
   16F7 CB 3B              5391 	srl	e
   16F9 CB 3B              5392 	srl	e
   16FB 21r1Bs17           5393 	ld	hl,#_ly
   16FE DD 7E 07           5394 	ld	a,7 (ix)
   1701 83                 5395 	add	a,e
   1702 77                 5396 	ld	(hl),a
                           5397 ;demo.c:700: if (ltr == ' ') lx+=4;
   1703 DD 7E FF           5398 	ld	a,-1 (ix)
   1706 D6 20              5399 	sub	a,#0x20
   1708 20 1F              5400 	jr	NZ,00102$
   170A FD 21r1As17        5401 	ld	iy,#_lx
   170E FD 34 00           5402 	inc	0 (iy)
   1711 FD 21r1As17        5403 	ld	iy,#_lx
   1715 FD 34 00           5404 	inc	0 (iy)
   1718 FD 21r1As17        5405 	ld	iy,#_lx
   171C FD 34 00           5406 	inc	0 (iy)
   171F FD 21r1As17        5407 	ld	iy,#_lx
   1723 FD 34 00           5408 	inc	0 (iy)
   1726 C3rCEs16           5409 	jp	00104$
   1729                    5410 00102$:
                           5411 ;demo.c:701: else do_letter_tall(ltr);
   1729 C5                 5412 	push	bc
   172A DD 7E FF           5413 	ld	a,-1 (ix)
   172D F5                 5414 	push	af
   172E 33                 5415 	inc	sp
   172F CDrA5s14           5416 	call	_do_letter_tall
   1732 33                 5417 	inc	sp
   1733 C1                 5418 	pop	bc
   1734 C3rCEs16           5419 	jp	00104$
   1737                    5420 00107$:
   1737 DD F9              5421 	ld	sp,ix
   1739 DD E1              5422 	pop	ix
   173B C9                 5423 	ret
   173C                    5424 _drawsine_end::
                           5425 ;demo.c:705: void font() {
                           5426 ;	---------------------------------
                           5427 ; Function font
                           5428 ; ---------------------------------
   173C                    5429 _font_start::
   173C                    5430 _font:
                           5431 ;demo.c:706: slowend = 128;
   173C 21r1Es17           5432 	ld	hl,#_slowend + 0
   173F 36 80              5433 	ld	(hl), #0x80
   1741 21r1Fs17           5434 	ld	hl,#_slowend + 1
   1744 36 00              5435 	ld	(hl), #0x00
                           5436 ;demo.c:707: drawstrslow("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PARTY PEOPLE",74,60);
   1746 21 4A 3C           5437 	ld	hl,#0x3C4A
   1749 E5                 5438 	push	hl
   174A 21r54s17           5439 	ld	hl,#__str_8
   174D E5                 5440 	push	hl
   174E CDrC9s15           5441 	call	_drawstrslow
   1751 F1                 5442 	pop	af
   1752 F1                 5443 	pop	af
   1753 C9                 5444 	ret
   1754                    5445 _font_end::
   1754                    5446 __str_8:
   1754 44 49 47 49 54 41  5447 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   1790 4F 4E 5F 5F 20 20  5448 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PART"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F 5F 5F 4D 41
        4B 45 20 53 4F 4D
        45 20 4E 4F 49 53
        45 20 50 41 52 54
   17CC 59 20 50 45 4F 50  5449 	.ascii "Y PEOPLE"
        4C 45
   17D4 00                 5450 	.db 0x00
                           5451 ;demo.c:715: void twister() {
                           5452 ;	---------------------------------
                           5453 ; Function twister
                           5454 ; ---------------------------------
   17D5                    5455 _twister_start::
   17D5                    5456 _twister:
   17D5 DD E5              5457 	push	ix
   17D7 DD 21 00 00        5458 	ld	ix,#0
   17DB DD 39              5459 	add	ix,sp
   17DD F5                 5460 	push	af
                           5461 ;demo.c:719: if (twinited == 0) {
   17DE 3Ar22s17           5462 	ld	a,(#_twinited+0)
   17E1 FD 21r22s17        5463 	ld	iy,#_twinited
   17E5 FD B6 01           5464 	or	a,1 (iy)
   17E8 C2r62s18           5465 	jp	NZ,00102$
                           5466 ;demo.c:720: cmd.size_x = 256;
   17EB 21r9Cs16           5467 	ld	hl, #_cmd + 8
   17EE 36 00              5468 	ld	(hl),#0x00
   17F0 23                 5469 	inc	hl
   17F1 36 01              5470 	ld	(hl),#0x01
                           5471 ;demo.c:721: cmd.size_y = 1;
   17F3 21r9Es16           5472 	ld	hl, #_cmd + 10
   17F6 36 01              5473 	ld	(hl),#0x01
   17F8 23                 5474 	inc	hl
   17F9 36 00              5475 	ld	(hl),#0x00
                           5476 ;demo.c:722: cmd.data = 0;
                           5477 ;demo.c:723: cmd.argument = 0x00; // from 70xY to left
   17FB 3E 00              5478 	ld	a,#0x00
   17FD 32rA0s16           5479 	ld	(#_cmd + 12),a
   1800 32rA1s16           5480 	ld	(#_cmd + 13),a
                           5481 ;demo.c:724: cmd.command = 0xd0; // vram to vram, y only
   1803 01rA2s16           5482 	ld	bc,#_cmd + 14
   1806 3E D0              5483 	ld	a,#0xD0
   1808 02                 5484 	ld	(bc),a
                           5485 ;demo.c:725: cmd.source_x = 0;
   1809 21r94s16           5486 	ld	hl,#_cmd
   180C 36 00              5487 	ld	(hl),#0x00
   180E 23                 5488 	inc	hl
   180F 36 00              5489 	ld	(hl),#0x00
                           5490 ;demo.c:726: cmd.dest_x = 0;
   1811 21r98s16           5491 	ld	hl, #_cmd + 4
   1814 36 00              5492 	ld	(hl),#0x00
   1816 23                 5493 	inc	hl
   1817 36 00              5494 	ld	(hl),#0x00
                           5495 ;demo.c:728: for (y = 0; y < 212; y+=1) {
   1819 01 00 00           5496 	ld	bc,#0x0000
   181C                    5497 00103$:
   181C 79                 5498 	ld	a,c
   181D D6 D4              5499 	sub	a,#0xD4
   181F 78                 5500 	ld	a,b
   1820 DE 00              5501 	sbc	a,#0x00
   1822 F2r43s18           5502 	jp	P,00106$
                           5503 ;demo.c:729: waitVB();
   1825 76                 5504 		halt 
                           5505 ;demo.c:730: cmd.source_y = 0;
   1826 11r96s16           5506 	ld	de,#_cmd + 2
   1829 EB                 5507 	ex	de,hl
   182A 36 00              5508 	ld	(hl),#0x00
   182C 23                 5509 	inc	hl
   182D 36 00              5510 	ld	(hl),#0x00
                           5511 ;demo.c:731: cmd.dest_y = y;
   182F 11r9As16           5512 	ld	de,#_cmd + 6
   1832 EB                 5513 	ex	de,hl
   1833 71                 5514 	ld	(hl),c
   1834 23                 5515 	inc	hl
   1835 70                 5516 	ld	(hl),b
                           5517 ;demo.c:732: vdp_copier(&cmd);
   1836 C5                 5518 	push	bc
   1837 21r94s16           5519 	ld	hl,#_cmd
   183A E5                 5520 	push	hl
   183B CDr00s00           5521 	call	_vdp_copier
   183E F1                 5522 	pop	af
   183F C1                 5523 	pop	bc
                           5524 ;demo.c:728: for (y = 0; y < 212; y+=1) {
   1840 03                 5525 	inc	bc
   1841 18 D9              5526 	jr	00103$
   1843                    5527 00106$:
                           5528 ;demo.c:736: twinited = 1;
   1843 21r22s17           5529 	ld	hl,#_twinited + 0
   1846 36 01              5530 	ld	(hl), #0x01
   1848 21r23s17           5531 	ld	hl,#_twinited + 1
   184B 36 00              5532 	ld	(hl), #0x00
                           5533 ;demo.c:737: vdp_load_palette(twister_palette);
   184D 21r30s16           5534 	ld	hl,#_twister_palette
   1850 E5                 5535 	push	hl
   1851 CDr00s00           5536 	call	_vdp_load_palette
   1854 F1                 5537 	pop	af
                           5538 ;demo.c:738: drawstr2x("DSS",80,15);
   1855 21 50 0F           5539 	ld	hl,#0x0F50
   1858 E5                 5540 	push	hl
   1859 21r6Es19           5541 	ld	hl,#__str_9
   185C E5                 5542 	push	hl
   185D CDr67s16           5543 	call	_drawstr2x
   1860 F1                 5544 	pop	af
   1861 F1                 5545 	pop	af
   1862                    5546 00102$:
                           5547 ;demo.c:742: cmd.size_x = 70;
   1862 21r9Cs16           5548 	ld	hl, #_cmd + 8
   1865 36 46              5549 	ld	(hl),#0x46
   1867 23                 5550 	inc	hl
   1868 36 00              5551 	ld	(hl),#0x00
                           5552 ;demo.c:743: cmd.size_y = 2;
   186A 21r9Es16           5553 	ld	hl, #_cmd + 10
   186D 36 02              5554 	ld	(hl),#0x02
   186F 23                 5555 	inc	hl
   1870 36 00              5556 	ld	(hl),#0x00
                           5557 ;demo.c:744: cmd.data = 0;
   1872 3E 00              5558 	ld	a,#0x00
   1874 32rA0s16           5559 	ld	(#_cmd + 12),a
                           5560 ;demo.c:745: cmd.argument = 0x04; // from 70xY to left
   1877 3E 04              5561 	ld	a,#0x04
   1879 32rA1s16           5562 	ld	(#_cmd + 13),a
                           5563 ;demo.c:746: cmd.command = 0xe0; // vram to vram, y only
   187C 01rA2s16           5564 	ld	bc,#_cmd + 14
   187F 3E E0              5565 	ld	a,#0xE0
   1881 02                 5566 	ld	(bc),a
                           5567 ;demo.c:747: cmd.source_x = 70;
   1882 21r94s16           5568 	ld	hl,#_cmd
   1885 36 46              5569 	ld	(hl),#0x46
   1887 23                 5570 	inc	hl
   1888 36 00              5571 	ld	(hl),#0x00
                           5572 ;demo.c:748: cmd.dest_x = 70;
   188A 21r98s16           5573 	ld	hl, #_cmd + 4
   188D 36 46              5574 	ld	(hl),#0x46
   188F 23                 5575 	inc	hl
   1890 36 00              5576 	ld	(hl),#0x00
                           5577 ;demo.c:750: for (y = 0; y < 212; y+=2) {
   1892 DD 36 FE 00        5578 	ld	-2 (ix),#0x00
   1896 DD 36 FF 00        5579 	ld	-1 (ix),#0x00
   189A                    5580 00107$:
   189A DD 7E FE           5581 	ld	a,-2 (ix)
   189D D6 D4              5582 	sub	a,#0xD4
   189F DD 7E FF           5583 	ld	a,-1 (ix)
   18A2 DE 00              5584 	sbc	a,#0x00
   18A4 F2rFDs18           5585 	jp	P,00110$
                           5586 ;demo.c:751: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   18A7 11r96s16           5587 	ld	de,#_cmd + 2
   18AA DD 4E FE           5588 	ld	c,-2 (ix)
   18AD DD 46 FF           5589 	ld	b,-1 (ix)
   18B0 CB 28              5590 	sra	b
   18B2 CB 19              5591 	rr	c
   18B4 3Ar20s17           5592 	ld	a,(#_ff+0)
   18B7 81                 5593 	add	a,c
   18B8 4F                 5594 	ld	c,a
   18B9 3Ar21s17           5595 	ld	a,(#_ff+1)
   18BC 88                 5596 	adc	a,b
   18BD 06 00              5597 	ld	b,#0x00
   18BF 21r00s00           5598 	ld	hl,#_sintab
   18C2 09                 5599 	add	hl,bc
   18C3 7E                 5600 	ld	a,(hl)
   18C4 4F                 5601 	ld	c,a
   18C5 CB 29              5602 	sra	c
   18C7 79                 5603 	ld	a,c
   18C8 17                 5604 	rla	
   18C9 9F                 5605 	sbc	a,a
   18CA 47                 5606 	ld	b,a
   18CB 21 40 02           5607 	ld	hl,#0x0240
   18CE 09                 5608 	add	hl,bc
   18CF 4D                 5609 	ld	c,l
   18D0 44                 5610 	ld	b,h
   18D1 6B                 5611 	ld	l,e
   18D2 62                 5612 	ld	h,d
   18D3 71                 5613 	ld	(hl),c
   18D4 23                 5614 	inc	hl
   18D5 70                 5615 	ld	(hl),b
                           5616 ;demo.c:752: cmd.dest_y = y;
   18D6 21r9As16           5617 	ld	hl, #_cmd + 6
   18D9 DD 7E FE           5618 	ld	a,-2 (ix)
   18DC 77                 5619 	ld	(hl),a
   18DD 23                 5620 	inc	hl
   18DE DD 7E FF           5621 	ld	a,-1 (ix)
   18E1 77                 5622 	ld	(hl),a
                           5623 ;demo.c:753: vdp_copier(&cmd);
   18E2 21r94s16           5624 	ld	hl,#_cmd
   18E5 E5                 5625 	push	hl
   18E6 CDr00s00           5626 	call	_vdp_copier
   18E9 F1                 5627 	pop	af
                           5628 ;demo.c:750: for (y = 0; y < 212; y+=2) {
   18EA DD 7E FE           5629 	ld	a,-2 (ix)
   18ED C6 02              5630 	add	a,#0x02
   18EF DD 77 FE           5631 	ld	-2 (ix),a
   18F2 DD 7E FF           5632 	ld	a,-1 (ix)
   18F5 CE 00              5633 	adc	a,#0x00
   18F7 DD 77 FF           5634 	ld	-1 (ix),a
   18FA C3r9As18           5635 	jp	00107$
   18FD                    5636 00110$:
                           5637 ;demo.c:757: msx2_palette(4,PLY_PSGReg8+ff>>2,PLY_PSGReg9+ff>>3,ff>>2);
   18FD 21r20s17           5638 	ld	hl,#_ff + 0
   1900 4E                 5639 	ld	c,(hl)
   1901 21r21s17           5640 	ld	hl,#_ff + 1
   1904 46                 5641 	ld	b,(hl)
   1905 CB 28              5642 	sra	b
   1907 CB 19              5643 	rr	c
   1909 CB 28              5644 	sra	b
   190B CB 19              5645 	rr	c
   190D 21r00s00           5646 	ld	hl,#_PLY_PSGReg9 + 0
   1910 5E                 5647 	ld	e,(hl)
   1911 16 00              5648 	ld	d,#0x00
   1913 21r20s17           5649 	ld	hl,#_ff
   1916 7B                 5650 	ld	a,e
   1917 86                 5651 	add	a,(hl)
   1918 5F                 5652 	ld	e,a
   1919 7A                 5653 	ld	a,d
   191A 23                 5654 	inc	hl
   191B 8E                 5655 	adc	a,(hl)
   191C 57                 5656 	ld	d,a
   191D CB 2A              5657 	sra	d
   191F CB 1B              5658 	rr	e
   1921 CB 2A              5659 	sra	d
   1923 CB 1B              5660 	rr	e
   1925 CB 2A              5661 	sra	d
   1927 CB 1B              5662 	rr	e
   1929 43                 5663 	ld	b,e
   192A 21r00s00           5664 	ld	hl,#_PLY_PSGReg8 + 0
   192D 5E                 5665 	ld	e,(hl)
   192E 16 00              5666 	ld	d,#0x00
   1930 21r20s17           5667 	ld	hl,#_ff
   1933 7B                 5668 	ld	a,e
   1934 86                 5669 	add	a,(hl)
   1935 5F                 5670 	ld	e,a
   1936 7A                 5671 	ld	a,d
   1937 23                 5672 	inc	hl
   1938 8E                 5673 	adc	a,(hl)
   1939 57                 5674 	ld	d,a
   193A CB 2A              5675 	sra	d
   193C CB 1B              5676 	rr	e
   193E CB 2A              5677 	sra	d
   1940 CB 1B              5678 	rr	e
   1942 79                 5679 	ld	a,c
   1943 F5                 5680 	push	af
   1944 33                 5681 	inc	sp
   1945 C5                 5682 	push	bc
   1946 33                 5683 	inc	sp
   1947 53                 5684 	ld	d,e
   1948 1E 04              5685 	ld	e,#0x04
   194A D5                 5686 	push	de
   194B CDr00s00           5687 	call	_msx2_palette
   194E F1                 5688 	pop	af
   194F F1                 5689 	pop	af
                           5690 ;demo.c:759: font();
   1950 CDr3Cs17           5691 	call	_font
                           5692 ;demo.c:761: ff+=4;
   1953 21r20s17           5693 	ld	hl,#_ff
   1956 7E                 5694 	ld	a,(hl)
   1957 C6 04              5695 	add	a,#0x04
   1959 23                 5696 	inc	hl
   195A 2B                 5697 	dec	hl
   195B C5                 5698 	push	bc
   195C 4F                 5699 	ld	c, a
   195D 23                 5700 	inc	hl
   195E 7E                 5701 	ld	a, (hl)
   195F 47                 5702 	ld	b, a
   1960 79                 5703 	ld	a, c
   1961 2B                 5704 	dec	hl
   1962 77                 5705 	ld	(hl), a
   1963 78                 5706 	ld	a, b
   1964 C1                 5707 	pop	bc
   1965 CE 00              5708 	adc	a,#0x00
   1967 23                 5709 	inc	hl
   1968 77                 5710 	ld	(hl),a
   1969 DD F9              5711 	ld	sp,ix
   196B DD E1              5712 	pop	ix
   196D C9                 5713 	ret
   196E                    5714 _twister_end::
   196E                    5715 __str_9:
   196E 44 53 53           5716 	.ascii "DSS"
   1971 00                 5717 	.db 0x00
                           5718 ;demo.c:772: void bulbs() {
                           5719 ;	---------------------------------
                           5720 ; Function bulbs
                           5721 ; ---------------------------------
   1972                    5722 _bulbs_start::
   1972                    5723 _bulbs:
   1972 DD E5              5724 	push	ix
   1974 DD 21 00 00        5725 	ld	ix,#0
   1978 DD 39              5726 	add	ix,sp
   197A 21 FA FF           5727 	ld	hl,#-6
   197D 39                 5728 	add	hl,sp
   197E F9                 5729 	ld	sp,hl
                           5730 ;demo.c:776: ender+=enderdir;
   197F 21r2Cs17           5731 	ld	hl,#_enderdir
   1982 D5                 5732 	push	de
   1983 FD 21r2As17        5733 	ld	iy,#_ender
   1987 FD E5              5734 	push	iy
   1989 D1                 5735 	pop	de
   198A 1A                 5736 	ld	a,(de)
   198B 86                 5737 	add	a,(hl)
   198C 13                 5738 	inc	de
   198D 1B                 5739 	dec	de
   198E C5                 5740 	push	bc
   198F 4F                 5741 	ld	c, a
   1990 13                 5742 	inc	de
   1991 1A                 5743 	ld	a, (de)
   1992 47                 5744 	ld	b, a
   1993 79                 5745 	ld	a, c
   1994 1B                 5746 	dec	de
   1995 12                 5747 	ld	(de), a
   1996 78                 5748 	ld	a, b
   1997 C1                 5749 	pop	bc
   1998 23                 5750 	inc	hl
   1999 8E                 5751 	adc	a,(hl)
   199A 13                 5752 	inc	de
   199B 12                 5753 	ld	(de),a
   199C D1                 5754 	pop	de
                           5755 ;demo.c:777: if (ender < 2) { enderdir = -enderdir; }
   199D 3Ar2As17           5756 	ld	a,(#_ender+0)
   19A0 D6 02              5757 	sub	a,#0x02
   19A2 3Ar2Bs17           5758 	ld	a,(#_ender+1)
   19A5 DE 00              5759 	sbc	a,#0x00
   19A7 F2rCBs19           5760 	jp	P,00102$
   19AA AF                 5761 	xor	a,a
   19AB FD 21r2Cs17        5762 	ld	iy,#_enderdir
   19AF 3E 00              5763 	ld	a,#0x00
   19B1 FD 9E 00           5764 	sbc	a,0 (iy)
   19B4 FD 21r2Cs17        5765 	ld	iy,#_enderdir
   19B8 FD 77 00           5766 	ld	0 (iy),a
   19BB FD 21r2Cs17        5767 	ld	iy,#_enderdir
   19BF 3E 00              5768 	ld	a,#0x00
   19C1 FD 9E 01           5769 	sbc	a,1 (iy)
   19C4 FD 21r2Cs17        5770 	ld	iy,#_enderdir
   19C8 FD 77 01           5771 	ld	1 (iy),a
   19CB                    5772 00102$:
                           5773 ;demo.c:778: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   19CB 3Ar2As17           5774 	ld	a,(#_ender+0)
   19CE D6 D4              5775 	sub	a,#0xD4
   19D0 3Ar2Bs17           5776 	ld	a,(#_ender+1)
   19D3 DE 00              5777 	sbc	a,#0x00
   19D5 FArFBs19           5778 	jp	M,00104$
   19D8 AF                 5779 	xor	a,a
   19D9 FD 21r2Cs17        5780 	ld	iy,#_enderdir
   19DD 3E 00              5781 	ld	a,#0x00
   19DF FD 9E 00           5782 	sbc	a,0 (iy)
   19E2 21r2Cs17           5783 	ld	hl,#_enderdir + 0
   19E5 77                 5784 	ld	(hl), a
   19E6 FD 21r2Cs17        5785 	ld	iy,#_enderdir
   19EA 3E 00              5786 	ld	a,#0x00
   19EC FD 9E 01           5787 	sbc	a,1 (iy)
   19EF 21r2Ds17           5788 	ld	hl,#_enderdir + 1
   19F2 77                 5789 	ld	(hl), a
   19F3 2Ar2Es17           5790 	ld	hl,(_sy)
   19F6 2B                 5791 	dec	hl
   19F7 2B                 5792 	dec	hl
   19F8 22r2Es17           5793 	ld	(_sy),hl
   19FB                    5794 00104$:
                           5795 ;demo.c:780: enderend = ender + 92;
   19FB 3Ar2As17           5796 	ld	a,(#_ender+0)
   19FE C6 5C              5797 	add	a,#0x5C
   1A00 DD 77 FE           5798 	ld	-2 (ix),a
   1A03 3Ar2Bs17           5799 	ld	a,(#_ender+1)
   1A06 CE 00              5800 	adc	a,#0x00
   1A08 DD 77 FF           5801 	ld	-1 (ix),a
                           5802 ;demo.c:782: if (enderend > 212) enderend = 212;
   1A0B 3E D4              5803 	ld	a,#0xD4
   1A0D DD 96 FE           5804 	sub	a,-2 (ix)
   1A10 3E 00              5805 	ld	a,#0x00
   1A12 DD 9E FF           5806 	sbc	a,-1 (ix)
   1A15 F2r20s1A           5807 	jp	P,00106$
   1A18 DD 36 FE D4        5808 	ld	-2 (ix),#0xD4
   1A1C DD 36 FF 00        5809 	ld	-1 (ix),#0x00
   1A20                    5810 00106$:
                           5811 ;demo.c:783: if (enderend > 212-16) sy = 16-(212-enderend);
   1A20 3E C4              5812 	ld	a,#0xC4
   1A22 DD 96 FE           5813 	sub	a,-2 (ix)
   1A25 3E 00              5814 	ld	a,#0x00
   1A27 DD 9E FF           5815 	sbc	a,-1 (ix)
   1A2A F2r45s1A           5816 	jp	P,00108$
   1A2D 3E D4              5817 	ld	a,#0xD4
   1A2F DD 96 FE           5818 	sub	a,-2 (ix)
   1A32 5F                 5819 	ld	e,a
   1A33 3E 00              5820 	ld	a,#0x00
   1A35 DD 9E FF           5821 	sbc	a,-1 (ix)
   1A38 57                 5822 	ld	d,a
   1A39 21r2Es17           5823 	ld	hl,#_sy
   1A3C 3E 10              5824 	ld	a,#0x10
   1A3E 93                 5825 	sub	a,e
   1A3F 77                 5826 	ld	(hl),a
   1A40 3E 00              5827 	ld	a,#0x00
   1A42 9A                 5828 	sbc	a,d
   1A43 23                 5829 	inc	hl
   1A44 77                 5830 	ld	(hl),a
   1A45                    5831 00108$:
                           5832 ;demo.c:785: if(bulbflipper == 1) {
   1A45 3Ar24s17           5833 	ld	a,(#_bulbflipper+0)
   1A48 D6 01              5834 	sub	a,#0x01
   1A4A 20 06              5835 	jr	NZ,00133$
   1A4C 3Ar25s17           5836 	ld	a,(#_bulbflipper+1)
   1A4F B7                 5837 	or	a,a
   1A50 28 03              5838 	jr	Z,00134$
   1A52                    5839 00133$:
   1A52 C3r0Bs1B           5840 	jp	00110$
   1A55                    5841 00134$:
                           5842 ;demo.c:786: cmd.size_x = 72;
   1A55 11r9Cs16           5843 	ld	de,#_cmd + 8
   1A58 EB                 5844 	ex	de,hl
   1A59 36 48              5845 	ld	(hl),#0x48
   1A5B 23                 5846 	inc	hl
   1A5C 36 00              5847 	ld	(hl),#0x00
                           5848 ;demo.c:787: cmd.size_y = sy;
   1A5E 11r9Es16           5849 	ld	de,#_cmd + 10
   1A61 ED 4Br2Es17        5850 	ld	bc,(_sy)
   1A65 6B                 5851 	ld	l,e
   1A66 62                 5852 	ld	h,d
   1A67 71                 5853 	ld	(hl),c
   1A68 23                 5854 	inc	hl
   1A69 70                 5855 	ld	(hl),b
                           5856 ;demo.c:788: cmd.data = 0;
   1A6A 3E 00              5857 	ld	a,#0x00
   1A6C 32rA0s16           5858 	ld	(#_cmd + 12),a
                           5859 ;demo.c:789: cmd.argument = 0x04; // from 72xY to left
   1A6F 3E 04              5860 	ld	a,#0x04
   1A71 32rA1s16           5861 	ld	(#_cmd + 13),a
                           5862 ;demo.c:790: cmd.command = 0xe0; // vram to vram, y only
   1A74 01rA2s16           5863 	ld	bc,#_cmd + 14
   1A77 3E E0              5864 	ld	a,#0xE0
   1A79 02                 5865 	ld	(bc),a
                           5866 ;demo.c:791: cmd.source_x = 72;
   1A7A 21r94s16           5867 	ld	hl,#_cmd
   1A7D 36 48              5868 	ld	(hl),#0x48
   1A7F 23                 5869 	inc	hl
   1A80 36 00              5870 	ld	(hl),#0x00
                           5871 ;demo.c:792: cmd.dest_x = 72;
   1A82 21r98s16           5872 	ld	hl, #_cmd + 4
   1A85 36 48              5873 	ld	(hl),#0x48
   1A87 23                 5874 	inc	hl
   1A88 36 00              5875 	ld	(hl),#0x00
                           5876 ;demo.c:794: for (y = ender; y < enderend; y+=16) {
   1A8A ED 4Br2As17        5877 	ld	bc,(_ender)
   1A8E DD 71 FC           5878 	ld	-4 (ix),c
   1A91 DD 70 FD           5879 	ld	-3 (ix),b
   1A94                    5880 00112$:
   1A94 DD 7E FC           5881 	ld	a,-4 (ix)
   1A97 DD 96 FE           5882 	sub	a,-2 (ix)
   1A9A DD 7E FD           5883 	ld	a,-3 (ix)
   1A9D DD 9E FF           5884 	sbc	a,-1 (ix)
   1AA0 F2rF2s1A           5885 	jp	P,00115$
                           5886 ;demo.c:795: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   1AA3 01r96s16           5887 	ld	bc,#_cmd + 2
   1AA6 3Ar26s17           5888 	ld	a,(#_ff1+0)
   1AA9 DD 86 FC           5889 	add	a,-4 (ix)
   1AAC 5F                 5890 	ld	e,a
   1AAD 3Ar27s17           5891 	ld	a,(#_ff1+1)
   1AB0 DD 8E FD           5892 	adc	a,-3 (ix)
   1AB3 16 00              5893 	ld	d,#0x00
   1AB5 21r00s00           5894 	ld	hl,#_sintab
   1AB8 19                 5895 	add	hl,de
   1AB9 5E                 5896 	ld	e,(hl)
   1ABA CB 2B              5897 	sra	e
   1ABC 7B                 5898 	ld	a,e
   1ABD 17                 5899 	rla	
   1ABE 9F                 5900 	sbc	a,a
   1ABF 57                 5901 	ld	d,a
   1AC0 21 40 01           5902 	ld	hl,#0x0140
   1AC3 19                 5903 	add	hl,de
   1AC4 EB                 5904 	ex	de,hl
   1AC5 69                 5905 	ld	l,c
   1AC6 60                 5906 	ld	h,b
   1AC7 73                 5907 	ld	(hl),e
   1AC8 23                 5908 	inc	hl
   1AC9 72                 5909 	ld	(hl),d
                           5910 ;demo.c:796: cmd.dest_y = y;
   1ACA 11r9As16           5911 	ld	de,#_cmd + 6
   1ACD EB                 5912 	ex	de,hl
   1ACE DD 7E FC           5913 	ld	a,-4 (ix)
   1AD1 77                 5914 	ld	(hl),a
   1AD2 23                 5915 	inc	hl
   1AD3 DD 7E FD           5916 	ld	a,-3 (ix)
   1AD6 77                 5917 	ld	(hl),a
                           5918 ;demo.c:797: vdp_copier(&cmd);
   1AD7 21r94s16           5919 	ld	hl,#_cmd
   1ADA E5                 5920 	push	hl
   1ADB CDr00s00           5921 	call	_vdp_copier
   1ADE F1                 5922 	pop	af
                           5923 ;demo.c:794: for (y = ender; y < enderend; y+=16) {
   1ADF DD 7E FC           5924 	ld	a,-4 (ix)
   1AE2 C6 10              5925 	add	a,#0x10
   1AE4 DD 77 FC           5926 	ld	-4 (ix),a
   1AE7 DD 7E FD           5927 	ld	a,-3 (ix)
   1AEA CE 00              5928 	adc	a,#0x00
   1AEC DD 77 FD           5929 	ld	-3 (ix),a
   1AEF C3r94s1A           5930 	jp	00112$
   1AF2                    5931 00115$:
                           5932 ;demo.c:799: ff1+=4;
   1AF2 21r26s17           5933 	ld	hl,#_ff1
   1AF5 7E                 5934 	ld	a,(hl)
   1AF6 C6 04              5935 	add	a,#0x04
   1AF8 23                 5936 	inc	hl
   1AF9 2B                 5937 	dec	hl
   1AFA C5                 5938 	push	bc
   1AFB 4F                 5939 	ld	c, a
   1AFC 23                 5940 	inc	hl
   1AFD 7E                 5941 	ld	a, (hl)
   1AFE 47                 5942 	ld	b, a
   1AFF 79                 5943 	ld	a, c
   1B00 2B                 5944 	dec	hl
   1B01 77                 5945 	ld	(hl), a
   1B02 78                 5946 	ld	a, b
   1B03 C1                 5947 	pop	bc
   1B04 CE 00              5948 	adc	a,#0x00
   1B06 23                 5949 	inc	hl
   1B07 77                 5950 	ld	(hl),a
   1B08 C3rB0s1B           5951 	jp	00111$
   1B0B                    5952 00110$:
                           5953 ;demo.c:803: cmd.size_x = 72;
   1B0B 11r9Cs16           5954 	ld	de,#_cmd + 8
   1B0E EB                 5955 	ex	de,hl
   1B0F 36 48              5956 	ld	(hl),#0x48
   1B11 23                 5957 	inc	hl
   1B12 36 00              5958 	ld	(hl),#0x00
                           5959 ;demo.c:804: cmd.size_y = sy;
   1B14 01r9Es16           5960 	ld	bc,#_cmd + 10
   1B17 ED 5Br2Es17        5961 	ld	de,(_sy)
   1B1B 69                 5962 	ld	l,c
   1B1C 60                 5963 	ld	h,b
   1B1D 73                 5964 	ld	(hl),e
   1B1E 23                 5965 	inc	hl
   1B1F 72                 5966 	ld	(hl),d
                           5967 ;demo.c:805: cmd.data = 0;
   1B20 11rA0s16           5968 	ld	de,#_cmd + 12
   1B23 3E 00              5969 	ld	a,#0x00
   1B25 12                 5970 	ld	(de),a
                           5971 ;demo.c:806: cmd.argument = 0x00; // from 182xY to right
   1B26 11rA1s16           5972 	ld	de,#_cmd + 13
   1B29 3E 00              5973 	ld	a,#0x00
   1B2B 12                 5974 	ld	(de),a
                           5975 ;demo.c:807: cmd.command = 0xe0; // vram to vram, y only
   1B2C 11rA2s16           5976 	ld	de,#_cmd + 14
   1B2F 3E E0              5977 	ld	a,#0xE0
   1B31 12                 5978 	ld	(de),a
                           5979 ;demo.c:808: cmd.source_x = 182;
   1B32 21r94s16           5980 	ld	hl,#_cmd
   1B35 36 B6              5981 	ld	(hl),#0xB6
   1B37 23                 5982 	inc	hl
   1B38 36 00              5983 	ld	(hl),#0x00
                           5984 ;demo.c:809: cmd.dest_x = 182;
   1B3A 11r98s16           5985 	ld	de,#_cmd + 4
   1B3D 6B                 5986 	ld	l,e
   1B3E 62                 5987 	ld	h,d
   1B3F 36 B6              5988 	ld	(hl),#0xB6
   1B41 23                 5989 	inc	hl
   1B42 36 00              5990 	ld	(hl),#0x00
                           5991 ;demo.c:811: for (y = ender; y < enderend; y+=16) {
   1B44 ED 4Br2As17        5992 	ld	bc,(_ender)
   1B48                    5993 00116$:
   1B48 79                 5994 	ld	a,c
   1B49 DD 96 FE           5995 	sub	a,-2 (ix)
   1B4C 78                 5996 	ld	a,b
   1B4D DD 9E FF           5997 	sbc	a,-1 (ix)
   1B50 F2r9As1B           5998 	jp	P,00119$
                           5999 ;demo.c:812: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1B53 21r96s16           6000 	ld	hl,#_cmd + 2
   1B56 DD 75 FA           6001 	ld	-6 (ix),l
   1B59 DD 74 FB           6002 	ld	-5 (ix),h
   1B5C 3Ar28s17           6003 	ld	a,(#_ff2+0)
   1B5F 81                 6004 	add	a,c
   1B60 5F                 6005 	ld	e,a
   1B61 3Ar29s17           6006 	ld	a,(#_ff2+1)
   1B64 88                 6007 	adc	a,b
   1B65 16 00              6008 	ld	d,#0x00
   1B67 21r00s00           6009 	ld	hl,#_sintab
   1B6A 19                 6010 	add	hl,de
   1B6B 5E                 6011 	ld	e,(hl)
   1B6C CB 2B              6012 	sra	e
   1B6E 7B                 6013 	ld	a,e
   1B6F 17                 6014 	rla	
   1B70 9F                 6015 	sbc	a,a
   1B71 57                 6016 	ld	d,a
   1B72 21 40 01           6017 	ld	hl,#0x0140
   1B75 19                 6018 	add	hl,de
   1B76 EB                 6019 	ex	de,hl
   1B77 DD 6E FA           6020 	ld	l,-6 (ix)
   1B7A DD 66 FB           6021 	ld	h,-5 (ix)
   1B7D 73                 6022 	ld	(hl),e
   1B7E 23                 6023 	inc	hl
   1B7F 72                 6024 	ld	(hl),d
                           6025 ;demo.c:813: cmd.dest_y = y;
   1B80 11r9As16           6026 	ld	de,#_cmd + 6
   1B83 EB                 6027 	ex	de,hl
   1B84 71                 6028 	ld	(hl),c
   1B85 23                 6029 	inc	hl
   1B86 70                 6030 	ld	(hl),b
                           6031 ;demo.c:814: vdp_copier(&cmd);
   1B87 C5                 6032 	push	bc
   1B88 21r94s16           6033 	ld	hl,#_cmd
   1B8B E5                 6034 	push	hl
   1B8C CDr00s00           6035 	call	_vdp_copier
   1B8F F1                 6036 	pop	af
   1B90 C1                 6037 	pop	bc
                           6038 ;demo.c:811: for (y = ender; y < enderend; y+=16) {
   1B91 21 10 00           6039 	ld	hl,#0x0010
   1B94 09                 6040 	add	hl,bc
   1B95 4D                 6041 	ld	c,l
   1B96 44                 6042 	ld	b,h
   1B97 C3r48s1B           6043 	jp	00116$
   1B9A                    6044 00119$:
                           6045 ;demo.c:816: ff2+=4;
   1B9A 21r28s17           6046 	ld	hl,#_ff2
   1B9D 7E                 6047 	ld	a,(hl)
   1B9E C6 04              6048 	add	a,#0x04
   1BA0 23                 6049 	inc	hl
   1BA1 2B                 6050 	dec	hl
   1BA2 C5                 6051 	push	bc
   1BA3 4F                 6052 	ld	c, a
   1BA4 23                 6053 	inc	hl
   1BA5 7E                 6054 	ld	a, (hl)
   1BA6 47                 6055 	ld	b, a
   1BA7 79                 6056 	ld	a, c
   1BA8 2B                 6057 	dec	hl
   1BA9 77                 6058 	ld	(hl), a
   1BAA 78                 6059 	ld	a, b
   1BAB C1                 6060 	pop	bc
   1BAC CE 00              6061 	adc	a,#0x00
   1BAE 23                 6062 	inc	hl
   1BAF 77                 6063 	ld	(hl),a
   1BB0                    6064 00111$:
                           6065 ;demo.c:819: bulbflipper = -bulbflipper;
   1BB0 AF                 6066 	xor	a,a
   1BB1 FD 21r24s17        6067 	ld	iy,#_bulbflipper
   1BB5 3E 00              6068 	ld	a,#0x00
   1BB7 FD 9E 00           6069 	sbc	a,0 (iy)
   1BBA 21r24s17           6070 	ld	hl,#_bulbflipper + 0
   1BBD 77                 6071 	ld	(hl), a
   1BBE FD 21r24s17        6072 	ld	iy,#_bulbflipper
   1BC2 3E 00              6073 	ld	a,#0x00
   1BC4 FD 9E 01           6074 	sbc	a,1 (iy)
   1BC7 21r25s17           6075 	ld	hl,#_bulbflipper + 1
   1BCA 77                 6076 	ld	(hl), a
   1BCB DD F9              6077 	ld	sp,ix
   1BCD DD E1              6078 	pop	ix
   1BCF C9                 6079 	ret
   1BD0                    6080 _bulbs_end::
                           6081 ;demo.c:833: void animplay() {
                           6082 ;	---------------------------------
                           6083 ; Function animplay
                           6084 ; ---------------------------------
   1BD0                    6085 _animplay_start::
   1BD0                    6086 _animplay:
   1BD0 DD E5              6087 	push	ix
   1BD2 DD 21 00 00        6088 	ld	ix,#0
   1BD6 DD 39              6089 	add	ix,sp
   1BD8 F5                 6090 	push	af
   1BD9 3B                 6091 	dec	sp
                           6092 ;demo.c:838: if (anim_init == 0) {
   1BDA 3Ar38s17           6093 	ld	a,(#_anim_init+0)
   1BDD 21r39s17           6094 	ld	hl,#_anim_init + 1
   1BE0 B6                 6095 	or	a,(hl)
   1BE1 C2r7Cs1D           6096 	jp	NZ,00120$
                           6097 ;demo.c:839: drawsine("L O A D I N G",8,180);
   1BE4 21 08 B4           6098 	ld	hl,#0xB408
   1BE7 E5                 6099 	push	hl
   1BE8 21r64s1E           6100 	ld	hl,#__str_10
   1BEB E5                 6101 	push	hl
   1BEC CDrB8s16           6102 	call	_drawsine
   1BEF F1                 6103 	pop	af
   1BF0 F1                 6104 	pop	af
                           6105 ;demo.c:842: uninstall_isr();
   1BF1 CDr00s00           6106 	call	_uninstall_isr
                           6107 ;demo.c:843: PLY_Stop();
   1BF4 CDr00s00           6108 	call	_PLY_Stop
                           6109 ;demo.c:844: PLY_SendRegisters();
   1BF7 CDr00s00           6110 	call	_PLY_SendRegisters
                           6111 ;demo.c:846: pause();
   1BFA CDr82s0A           6112 	call	_pause
                           6113 ;demo.c:847: pause();
   1BFD CDr82s0A           6114 	call	_pause
                           6115 ;demo.c:849: scratch_clear();
   1C00 CDr90s09           6116 	call	_scratch_clear
                           6117 ;demo.c:850: vdp_load_palette(scratch);
   1C03 21r50s15           6118 	ld	hl,#_scratch
   1C06 E5                 6119 	push	hl
   1C07 CDr00s00           6120 	call	_vdp_load_palette
   1C0A F1                 6121 	pop	af
                           6122 ;demo.c:852: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1C0B 21 00 00           6123 	ld	hl,#0x0000
   1C0E E5                 6124 	push	hl
   1C0F 2E 01              6125 	ld	l, #0x01
   1C11 E5                 6126 	push	hl
   1C12 2E 00              6127 	ld	l, #0x00
   1C14 E5                 6128 	push	hl
   1C15 21 09 37           6129 	ld	hl,#0x3709
   1C18 E5                 6130 	push	hl
   1C19 21r72s1E           6131 	ld	hl,#__str_11
   1C1C E5                 6132 	push	hl
   1C1D CDr99s0B           6133 	call	_pck_load
   1C20 FD 21 0A 00        6134 	ld	iy,#0x000A
   1C24 FD 39              6135 	add	iy,sp
   1C26 FD F9              6136 	ld	sp,iy
                           6137 ;demo.c:856: cmd.size_x = 256;
   1C28 21r9Cs16           6138 	ld	hl, #_cmd + 8
   1C2B 36 00              6139 	ld	(hl),#0x00
   1C2D 23                 6140 	inc	hl
   1C2E 36 01              6141 	ld	(hl),#0x01
                           6142 ;demo.c:857: cmd.size_y = 212;
   1C30 21r9Es16           6143 	ld	hl, #_cmd + 10
   1C33 36 D4              6144 	ld	(hl),#0xD4
   1C35 23                 6145 	inc	hl
   1C36 36 00              6146 	ld	(hl),#0x00
                           6147 ;demo.c:858: cmd.data = 0;
                           6148 ;demo.c:859: cmd.argument = 0x00;
   1C38 3E 00              6149 	ld	a,#0x00
   1C3A 32rA0s16           6150 	ld	(#_cmd + 12),a
   1C3D 32rA1s16           6151 	ld	(#_cmd + 13),a
                           6152 ;demo.c:860: cmd.command = 0xd0; 
   1C40 01rA2s16           6153 	ld	bc,#_cmd + 14
   1C43 3E D0              6154 	ld	a,#0xD0
   1C45 02                 6155 	ld	(bc),a
                           6156 ;demo.c:861: cmd.source_x = 0;
   1C46 21r94s16           6157 	ld	hl,#_cmd
   1C49 36 00              6158 	ld	(hl),#0x00
   1C4B 23                 6159 	inc	hl
   1C4C 36 00              6160 	ld	(hl),#0x00
                           6161 ;demo.c:862: cmd.source_y = 0;
   1C4E 21r96s16           6162 	ld	hl, #_cmd + 2
   1C51 36 00              6163 	ld	(hl),#0x00
   1C53 23                 6164 	inc	hl
   1C54 36 00              6165 	ld	(hl),#0x00
                           6166 ;demo.c:863: cmd.dest_x = 0;
   1C56 21r98s16           6167 	ld	hl, #_cmd + 4
   1C59 36 00              6168 	ld	(hl),#0x00
   1C5B 23                 6169 	inc	hl
   1C5C 36 00              6170 	ld	(hl),#0x00
                           6171 ;demo.c:864: cmd.dest_y = 256;
   1C5E 21r9As16           6172 	ld	hl, #_cmd + 6
   1C61 36 00              6173 	ld	(hl),#0x00
   1C63 23                 6174 	inc	hl
   1C64 36 01              6175 	ld	(hl),#0x01
                           6176 ;demo.c:865: vdp_copier(&cmd);
   1C66 21r94s16           6177 	ld	hl,#_cmd
   1C69 E5                 6178 	push	hl
   1C6A CDr00s00           6179 	call	_vdp_copier
   1C6D F1                 6180 	pop	af
                           6181 ;demo.c:867: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1C6E 21 00 00           6182 	ld	hl,#0x0000
   1C71 E5                 6183 	push	hl
   1C72 2E 01              6184 	ld	l, #0x01
   1C74 E5                 6185 	push	hl
   1C75 2E 00              6186 	ld	l, #0x00
   1C77 E5                 6187 	push	hl
   1C78 21 76 3E           6188 	ld	hl,#0x3E76
   1C7B E5                 6189 	push	hl
   1C7C 21r7Es1E           6190 	ld	hl,#__str_12
   1C7F E5                 6191 	push	hl
   1C80 CDr99s0B           6192 	call	_pck_load
   1C83 FD 21 0A 00        6193 	ld	iy,#0x000A
   1C87 FD 39              6194 	add	iy,sp
   1C89 FD F9              6195 	ld	sp,iy
                           6196 ;demo.c:869: cmd.size_x = 256;
   1C8B 21r9Cs16           6197 	ld	hl, #_cmd + 8
   1C8E 36 00              6198 	ld	(hl),#0x00
   1C90 23                 6199 	inc	hl
   1C91 36 01              6200 	ld	(hl),#0x01
                           6201 ;demo.c:870: cmd.size_y = 212;
   1C93 21r9Es16           6202 	ld	hl, #_cmd + 10
   1C96 36 D4              6203 	ld	(hl),#0xD4
   1C98 23                 6204 	inc	hl
   1C99 36 00              6205 	ld	(hl),#0x00
                           6206 ;demo.c:871: cmd.data = 0;
                           6207 ;demo.c:872: cmd.argument = 0x00;
   1C9B 3E 00              6208 	ld	a,#0x00
   1C9D 32rA0s16           6209 	ld	(#_cmd + 12),a
   1CA0 32rA1s16           6210 	ld	(#_cmd + 13),a
                           6211 ;demo.c:873: cmd.command = 0xd0; 
   1CA3 01rA2s16           6212 	ld	bc,#_cmd + 14
   1CA6 3E D0              6213 	ld	a,#0xD0
   1CA8 02                 6214 	ld	(bc),a
                           6215 ;demo.c:874: cmd.source_x = 0;
   1CA9 21r94s16           6216 	ld	hl,#_cmd
   1CAC 36 00              6217 	ld	(hl),#0x00
   1CAE 23                 6218 	inc	hl
   1CAF 36 00              6219 	ld	(hl),#0x00
                           6220 ;demo.c:875: cmd.source_y = 0;
   1CB1 21r96s16           6221 	ld	hl, #_cmd + 2
   1CB4 36 00              6222 	ld	(hl),#0x00
   1CB6 23                 6223 	inc	hl
   1CB7 36 00              6224 	ld	(hl),#0x00
                           6225 ;demo.c:876: cmd.dest_x = 0;
   1CB9 21r98s16           6226 	ld	hl, #_cmd + 4
   1CBC 36 00              6227 	ld	(hl),#0x00
   1CBE 23                 6228 	inc	hl
   1CBF 36 00              6229 	ld	(hl),#0x00
                           6230 ;demo.c:877: cmd.dest_y = 512;
   1CC1 21r9As16           6231 	ld	hl, #_cmd + 6
   1CC4 36 00              6232 	ld	(hl),#0x00
   1CC6 23                 6233 	inc	hl
   1CC7 36 02              6234 	ld	(hl),#0x02
                           6235 ;demo.c:878: vdp_copier(&cmd);
   1CC9 21r94s16           6236 	ld	hl,#_cmd
   1CCC E5                 6237 	push	hl
   1CCD CDr00s00           6238 	call	_vdp_copier
   1CD0 F1                 6239 	pop	af
                           6240 ;demo.c:881: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   1CD1 21 00 00           6241 	ld	hl,#0x0000
   1CD4 E5                 6242 	push	hl
   1CD5 2E 01              6243 	ld	l, #0x01
   1CD7 E5                 6244 	push	hl
   1CD8 2E 00              6245 	ld	l, #0x00
   1CDA E5                 6246 	push	hl
   1CDB 21 9E 3A           6247 	ld	hl,#0x3A9E
   1CDE E5                 6248 	push	hl
   1CDF 21r8As1E           6249 	ld	hl,#__str_13
   1CE2 E5                 6250 	push	hl
   1CE3 CDr99s0B           6251 	call	_pck_load
   1CE6 FD 21 0A 00        6252 	ld	iy,#0x000A
   1CEA FD 39              6253 	add	iy,sp
   1CEC FD F9              6254 	ld	sp,iy
                           6255 ;demo.c:883: cmd.size_x = 256;
   1CEE 21r9Cs16           6256 	ld	hl, #_cmd + 8
   1CF1 36 00              6257 	ld	(hl),#0x00
   1CF3 23                 6258 	inc	hl
   1CF4 36 01              6259 	ld	(hl),#0x01
                           6260 ;demo.c:884: cmd.size_y = 212;
   1CF6 21r9Es16           6261 	ld	hl, #_cmd + 10
   1CF9 36 D4              6262 	ld	(hl),#0xD4
   1CFB 23                 6263 	inc	hl
   1CFC 36 00              6264 	ld	(hl),#0x00
                           6265 ;demo.c:885: cmd.data = 0;
                           6266 ;demo.c:886: cmd.argument = 0x00;
   1CFE 3E 00              6267 	ld	a,#0x00
   1D00 32rA0s16           6268 	ld	(#_cmd + 12),a
   1D03 32rA1s16           6269 	ld	(#_cmd + 13),a
                           6270 ;demo.c:887: cmd.command = 0xd0; 
   1D06 01rA2s16           6271 	ld	bc,#_cmd + 14
   1D09 3E D0              6272 	ld	a,#0xD0
   1D0B 02                 6273 	ld	(bc),a
                           6274 ;demo.c:888: cmd.source_x = 0;
   1D0C 21r94s16           6275 	ld	hl,#_cmd
   1D0F 36 00              6276 	ld	(hl),#0x00
   1D11 23                 6277 	inc	hl
   1D12 36 00              6278 	ld	(hl),#0x00
                           6279 ;demo.c:889: cmd.source_y = 0;
   1D14 21r96s16           6280 	ld	hl, #_cmd + 2
   1D17 36 00              6281 	ld	(hl),#0x00
   1D19 23                 6282 	inc	hl
   1D1A 36 00              6283 	ld	(hl),#0x00
                           6284 ;demo.c:890: cmd.dest_x = 0;
   1D1C 21r98s16           6285 	ld	hl, #_cmd + 4
   1D1F 36 00              6286 	ld	(hl),#0x00
   1D21 23                 6287 	inc	hl
   1D22 36 00              6288 	ld	(hl),#0x00
                           6289 ;demo.c:891: cmd.dest_y = 768;
   1D24 21r9As16           6290 	ld	hl, #_cmd + 6
   1D27 36 00              6291 	ld	(hl),#0x00
   1D29 23                 6292 	inc	hl
   1D2A 36 03              6293 	ld	(hl),#0x03
                           6294 ;demo.c:892: vdp_copier(&cmd);
   1D2C 21r94s16           6295 	ld	hl,#_cmd
   1D2F E5                 6296 	push	hl
   1D30 CDr00s00           6297 	call	_vdp_copier
   1D33 F1                 6298 	pop	af
                           6299 ;demo.c:894: vdp_register(9,130); // 50hz,212
   1D34 21 09 82           6300 	ld	hl,#0x8209
   1D37 E5                 6301 	push	hl
   1D38 CDr00s00           6302 	call	_vdp_register
   1D3B F1                 6303 	pop	af
                           6304 ;demo.c:896: scratch_clear();
   1D3C CDr90s09           6305 	call	_scratch_clear
                           6306 ;demo.c:898: vdp_set_write_address(0, 0);
   1D3F 21 00 00           6307 	ld	hl,#0x0000
   1D42 E5                 6308 	push	hl
   1D43 3E 00              6309 	ld	a,#0x00
   1D45 F5                 6310 	push	af
   1D46 33                 6311 	inc	sp
   1D47 CDr00s00           6312 	call	_vdp_set_write_address
   1D4A F1                 6313 	pop	af
   1D4B 33                 6314 	inc	sp
                           6315 ;demo.c:900: for (y = 0; y < 212; y++) { 
   1D4C 0E D4              6316 	ld	c,#0xD4
   1D4E                    6317 00109$:
                           6318 ;demo.c:901: vdp_load_screen(scratch, 128);
   1D4E C5                 6319 	push	bc
   1D4F 3E 80              6320 	ld	a,#0x80
   1D51 F5                 6321 	push	af
   1D52 33                 6322 	inc	sp
   1D53 21r50s15           6323 	ld	hl,#_scratch
   1D56 E5                 6324 	push	hl
   1D57 CDr00s00           6325 	call	_vdp_load_screen
   1D5A F1                 6326 	pop	af
   1D5B 33                 6327 	inc	sp
   1D5C C1                 6328 	pop	bc
   1D5D 0D                 6329 	dec	c
                           6330 ;demo.c:900: for (y = 0; y < 212; y++) { 
   1D5E AF                 6331 	xor	a,a
   1D5F B1                 6332 	or	a,c
   1D60 20 EC              6333 	jr	NZ,00109$
                           6334 ;demo.c:904: install_isr(my_isr);
   1D62 21rECs07           6335 	ld	hl,#_my_isr
   1D65 E5                 6336 	push	hl
   1D66 CDr00s00           6337 	call	_install_isr
   1D69 F1                 6338 	pop	af
                           6339 ;demo.c:905: anim_init = 1;
   1D6A 21r38s17           6340 	ld	hl,#_anim_init + 0
   1D6D 36 01              6341 	ld	(hl), #0x01
   1D6F 21r39s17           6342 	ld	hl,#_anim_init + 1
   1D72 36 00              6343 	ld	(hl), #0x00
                           6344 ;demo.c:906: vdp_load_palette(tf_palette);
   1D74 21r50s16           6345 	ld	hl,#_tf_palette
   1D77 E5                 6346 	push	hl
   1D78 CDr00s00           6347 	call	_vdp_load_palette
   1D7B F1                 6348 	pop	af
                           6349 ;demo.c:909: for (y = 0; y < 106; y+=1) {
   1D7C                    6350 00120$:
   1D7C DD 36 FF 00        6351 	ld	-1 (ix),#0x00
   1D80                    6352 00110$:
   1D80 DD 7E FF           6353 	ld	a,-1 (ix)
   1D83 D6 6A              6354 	sub	a,#0x6A
   1D85 D2r05s1E           6355 	jp	NC,00113$
                           6356 ;demo.c:910: cmd.source_x = 0;
   1D88 21r94s16           6357 	ld	hl,#_cmd
   1D8B 36 00              6358 	ld	(hl),#0x00
   1D8D 23                 6359 	inc	hl
   1D8E 36 00              6360 	ld	(hl),#0x00
                           6361 ;demo.c:911: cmd.source_y = 256+po+frames+(y>>1);
   1D90 11r96s16           6362 	ld	de,#_cmd + 2
   1D93 3Ar34s17           6363 	ld	a,(#_po+0)
   1D96 4F                 6364 	ld	c,a
   1D97 3Ar35s17           6365 	ld	a,(#_po+1)
   1D9A C6 01              6366 	add	a,#0x01
   1D9C 47                 6367 	ld	b,a
   1D9D 21r36s17           6368 	ld	hl,#_frames
   1DA0 79                 6369 	ld	a,c
   1DA1 86                 6370 	add	a,(hl)
   1DA2 DD 77 FD           6371 	ld	-3 (ix),a
   1DA5 78                 6372 	ld	a,b
   1DA6 23                 6373 	inc	hl
   1DA7 8E                 6374 	adc	a,(hl)
   1DA8 DD 77 FE           6375 	ld	-2 (ix),a
   1DAB DD 4E FF           6376 	ld	c,-1 (ix)
   1DAE CB 39              6377 	srl	c
   1DB0 06 00              6378 	ld	b,#0x00
   1DB2 DD 7E FD           6379 	ld	a,-3 (ix)
   1DB5 81                 6380 	add	a,c
   1DB6 4F                 6381 	ld	c,a
   1DB7 DD 7E FE           6382 	ld	a,-2 (ix)
   1DBA 88                 6383 	adc	a,b
   1DBB 47                 6384 	ld	b,a
   1DBC 6B                 6385 	ld	l,e
   1DBD 62                 6386 	ld	h,d
   1DBE 71                 6387 	ld	(hl),c
   1DBF 23                 6388 	inc	hl
   1DC0 70                 6389 	ld	(hl),b
                           6390 ;demo.c:912: cmd.dest_x = 0;
   1DC1 21r98s16           6391 	ld	hl, #_cmd + 4
   1DC4 36 00              6392 	ld	(hl),#0x00
   1DC6 23                 6393 	inc	hl
   1DC7 36 00              6394 	ld	(hl),#0x00
                           6395 ;demo.c:913: cmd.dest_y = (y<<1);
   1DC9 01r9As16           6396 	ld	bc,#_cmd + 6
   1DCC DD 5E FF           6397 	ld	e,-1 (ix)
   1DCF 16 00              6398 	ld	d,#0x00
   1DD1 CB 23              6399 	sla	e
   1DD3 CB 12              6400 	rl	d
   1DD5 69                 6401 	ld	l,c
   1DD6 60                 6402 	ld	h,b
   1DD7 73                 6403 	ld	(hl),e
   1DD8 23                 6404 	inc	hl
   1DD9 72                 6405 	ld	(hl),d
                           6406 ;demo.c:914: cmd.size_x = 256;
   1DDA 21r9Cs16           6407 	ld	hl, #_cmd + 8
   1DDD 36 00              6408 	ld	(hl),#0x00
   1DDF 23                 6409 	inc	hl
   1DE0 36 01              6410 	ld	(hl),#0x01
                           6411 ;demo.c:915: cmd.size_y = 1;
   1DE2 21r9Es16           6412 	ld	hl, #_cmd + 10
   1DE5 36 01              6413 	ld	(hl),#0x01
   1DE7 23                 6414 	inc	hl
   1DE8 36 00              6415 	ld	(hl),#0x00
                           6416 ;demo.c:916: cmd.data = 0;
                           6417 ;demo.c:917: cmd.argument = 0x00;
   1DEA 3E 00              6418 	ld	a,#0x00
   1DEC 32rA0s16           6419 	ld	(#_cmd + 12),a
   1DEF 32rA1s16           6420 	ld	(#_cmd + 13),a
                           6421 ;demo.c:918: cmd.command = 0xD0;
   1DF2 3E D0              6422 	ld	a,#0xD0
   1DF4 32rA2s16           6423 	ld	(#_cmd + 14),a
                           6424 ;demo.c:919: vdp_copier(&cmd);
   1DF7 21r94s16           6425 	ld	hl,#_cmd
   1DFA E5                 6426 	push	hl
   1DFB CDr00s00           6427 	call	_vdp_copier
   1DFE F1                 6428 	pop	af
                           6429 ;demo.c:909: for (y = 0; y < 106; y+=1) {
   1DFF DD 34 FF           6430 	inc	-1 (ix)
   1E02 C3r80s1D           6431 	jp	00110$
   1E05                    6432 00113$:
                           6433 ;demo.c:922: frames+=53;
   1E05 21r36s17           6434 	ld	hl,#_frames
   1E08 7E                 6435 	ld	a,(hl)
   1E09 C6 35              6436 	add	a,#0x35
   1E0B 23                 6437 	inc	hl
   1E0C 2B                 6438 	dec	hl
   1E0D C5                 6439 	push	bc
   1E0E 4F                 6440 	ld	c, a
   1E0F 23                 6441 	inc	hl
   1E10 7E                 6442 	ld	a, (hl)
   1E11 47                 6443 	ld	b, a
   1E12 79                 6444 	ld	a, c
   1E13 2B                 6445 	dec	hl
   1E14 77                 6446 	ld	(hl), a
   1E15 78                 6447 	ld	a, b
   1E16 C1                 6448 	pop	bc
   1E17 CE 00              6449 	adc	a,#0x00
   1E19 23                 6450 	inc	hl
   1E1A 77                 6451 	ld	(hl),a
                           6452 ;demo.c:923: if (frames >= 212) { frames = 0; po+=256; }
   1E1B 3Ar36s17           6453 	ld	a,(#_frames+0)
   1E1E D6 D4              6454 	sub	a,#0xD4
   1E20 3Ar37s17           6455 	ld	a,(#_frames+1)
   1E23 DE 00              6456 	sbc	a,#0x00
   1E25 FAr48s1E           6457 	jp	M,00104$
   1E28 21r36s17           6458 	ld	hl,#_frames + 0
   1E2B 36 00              6459 	ld	(hl), #0x00
   1E2D 21r37s17           6460 	ld	hl,#_frames + 1
   1E30 36 00              6461 	ld	(hl), #0x00
   1E32 21r34s17           6462 	ld	hl,#_po
   1E35 7E                 6463 	ld	a,(hl)
   1E36 C6 00              6464 	add	a,#0x00
   1E38 23                 6465 	inc	hl
   1E39 2B                 6466 	dec	hl
   1E3A C5                 6467 	push	bc
   1E3B 4F                 6468 	ld	c, a
   1E3C 23                 6469 	inc	hl
   1E3D 7E                 6470 	ld	a, (hl)
   1E3E 47                 6471 	ld	b, a
   1E3F 79                 6472 	ld	a, c
   1E40 2B                 6473 	dec	hl
   1E41 77                 6474 	ld	(hl), a
   1E42 78                 6475 	ld	a, b
   1E43 C1                 6476 	pop	bc
   1E44 CE 01              6477 	adc	a,#0x01
   1E46 23                 6478 	inc	hl
   1E47 77                 6479 	ld	(hl),a
   1E48                    6480 00104$:
                           6481 ;demo.c:924: if (po >= 768) {
   1E48 3Ar34s17           6482 	ld	a,(#_po+0)
   1E4B D6 00              6483 	sub	a,#0x00
   1E4D 3Ar35s17           6484 	ld	a,(#_po+1)
   1E50 DE 03              6485 	sbc	a,#0x03
   1E52 FAr5Fs1E           6486 	jp	M,00114$
                           6487 ;demo.c:925: po = 0;
   1E55 21r34s17           6488 	ld	hl,#_po + 0
   1E58 36 00              6489 	ld	(hl), #0x00
   1E5A 21r35s17           6490 	ld	hl,#_po + 1
   1E5D 36 00              6491 	ld	(hl), #0x00
   1E5F                    6492 00114$:
   1E5F DD F9              6493 	ld	sp,ix
   1E61 DD E1              6494 	pop	ix
   1E63 C9                 6495 	ret
   1E64                    6496 _animplay_end::
   1E64                    6497 __str_10:
   1E64 4C 20 4F 20 41 20  6498 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1E71 00                 6499 	.db 0x00
   1E72                    6500 __str_11:
   1E72 4C 46 31 20 20 20  6501 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1E7D 00                 6502 	.db 0x00
   1E7E                    6503 __str_12:
   1E7E 4C 46 32 20 20 20  6504 	.ascii "LF2     PCK"
        20 20 50 43 4B
   1E89 00                 6505 	.db 0x00
   1E8A                    6506 __str_13:
   1E8A 4C 46 33 20 20 20  6507 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1E95 00                 6508 	.db 0x00
                           6509 ;demo.c:941: void drawbox(uint8_t x, uint8_t y) {
                           6510 ;	---------------------------------
                           6511 ; Function drawbox
                           6512 ; ---------------------------------
   1E96                    6513 _drawbox_start::
   1E96                    6514 _drawbox:
   1E96 DD E5              6515 	push	ix
   1E98 DD 21 00 00        6516 	ld	ix,#0
   1E9C DD 39              6517 	add	ix,sp
                           6518 ;demo.c:942: cmd.source_x = boxes_x[boxi];
   1E9E 21r50s17           6519 	ld	hl,#_boxi
   1EA1 3Er41              6520 	ld	a,#<_boxes_x
   1EA3 86                 6521 	add	a,(hl)
   1EA4 4F                 6522 	ld	c,a
   1EA5 3Es17              6523 	ld	a,#>_boxes_x
   1EA7 CE 00              6524 	adc	a,#0x00
   1EA9 47                 6525 	ld	b,a
   1EAA 0A                 6526 	ld	a,(bc)
   1EAB 4F                 6527 	ld	c,a
   1EAC 06 00              6528 	ld	b,#0x00
   1EAE 21r94s16           6529 	ld	hl,#_cmd
   1EB1 71                 6530 	ld	(hl),c
   1EB2 23                 6531 	inc	hl
   1EB3 70                 6532 	ld	(hl),b
                           6533 ;demo.c:943: cmd.source_y = boxes_y[boxi];
   1EB4 01r96s16           6534 	ld	bc,#_cmd + 2
   1EB7 3Ar50s17           6535 	ld	a,(#_boxi+0)
   1EBA 87                 6536 	add	a,a
   1EBB C6r46              6537 	add	a,#<_boxes_y
   1EBD 6F                 6538 	ld	l,a
   1EBE 3Es17              6539 	ld	a,#>_boxes_y
   1EC0 CE 00              6540 	adc	a,#0x00
   1EC2 67                 6541 	ld	h,a
   1EC3 5E                 6542 	ld	e,(hl)
   1EC4 23                 6543 	inc	hl
   1EC5 56                 6544 	ld	d,(hl)
   1EC6 69                 6545 	ld	l,c
   1EC7 60                 6546 	ld	h,b
   1EC8 73                 6547 	ld	(hl),e
   1EC9 23                 6548 	inc	hl
   1ECA 72                 6549 	ld	(hl),d
                           6550 ;demo.c:944: cmd.dest_x = x;
   1ECB 01r98s16           6551 	ld	bc,#_cmd + 4
   1ECE DD 5E 04           6552 	ld	e,4 (ix)
   1ED1 16 00              6553 	ld	d,#0x00
   1ED3 69                 6554 	ld	l,c
   1ED4 60                 6555 	ld	h,b
   1ED5 73                 6556 	ld	(hl),e
   1ED6 23                 6557 	inc	hl
   1ED7 72                 6558 	ld	(hl),d
                           6559 ;demo.c:945: cmd.dest_y = y;
   1ED8 01r9As16           6560 	ld	bc,#_cmd + 6
   1EDB DD 5E 05           6561 	ld	e,5 (ix)
   1EDE 16 00              6562 	ld	d,#0x00
   1EE0 69                 6563 	ld	l,c
   1EE1 60                 6564 	ld	h,b
   1EE2 73                 6565 	ld	(hl),e
   1EE3 23                 6566 	inc	hl
   1EE4 72                 6567 	ld	(hl),d
                           6568 ;demo.c:946: cmd.size_x = 36;
   1EE5 21r9Cs16           6569 	ld	hl, #_cmd + 8
   1EE8 36 24              6570 	ld	(hl),#0x24
   1EEA 23                 6571 	inc	hl
   1EEB 36 00              6572 	ld	(hl),#0x00
                           6573 ;demo.c:947: cmd.size_y = 36;
   1EED 21r9Es16           6574 	ld	hl, #_cmd + 10
   1EF0 36 24              6575 	ld	(hl),#0x24
   1EF2 23                 6576 	inc	hl
   1EF3 36 00              6577 	ld	(hl),#0x00
                           6578 ;demo.c:948: cmd.data = 0;
                           6579 ;demo.c:949: cmd.argument = 0x00;
   1EF5 3E 00              6580 	ld	a,#0x00
   1EF7 32rA0s16           6581 	ld	(#_cmd + 12),a
   1EFA 32rA1s16           6582 	ld	(#_cmd + 13),a
                           6583 ;demo.c:950: cmd.command = 0x98; // TIMP sprite
   1EFD 3E 98              6584 	ld	a,#0x98
   1EFF 32rA2s16           6585 	ld	(#_cmd + 14),a
                           6586 ;demo.c:951: vdp_copier(&cmd);
   1F02 21r94s16           6587 	ld	hl,#_cmd
   1F05 E5                 6588 	push	hl
   1F06 CDr00s00           6589 	call	_vdp_copier
   1F09 F1                 6590 	pop	af
                           6591 ;demo.c:953: prevx = x;
   1F0A DD 7E 04           6592 	ld	a,4 (ix)
   1F0D 21r3Ds17           6593 	ld	hl,#_prevx + 0
   1F10 77                 6594 	ld	(hl), a
   1F11 21r3Es17           6595 	ld	hl,#_prevx + 1
   1F14 36 00              6596 	ld	(hl), #0x00
                           6597 ;demo.c:954: prevy = y;
   1F16 DD 7E 05           6598 	ld	a,5 (ix)
   1F19 21r3Fs17           6599 	ld	hl,#_prevy + 0
   1F1C 77                 6600 	ld	(hl), a
   1F1D 21r40s17           6601 	ld	hl,#_prevy + 1
   1F20 36 00              6602 	ld	(hl), #0x00
   1F22 DD E1              6603 	pop	ix
   1F24 C9                 6604 	ret
   1F25                    6605 _drawbox_end::
                           6606 ;demo.c:968: void boxes() {
                           6607 ;	---------------------------------
                           6608 ; Function boxes
                           6609 ; ---------------------------------
   1F25                    6610 _boxes_start::
   1F25                    6611 _boxes:
   1F25 DD E5              6612 	push	ix
   1F27 DD 21 00 00        6613 	ld	ix,#0
   1F2B DD 39              6614 	add	ix,sp
   1F2D F5                 6615 	push	af
                           6616 ;demo.c:972: if (bx < 0) return;
   1F2E FD 21r51s17        6617 	ld	iy,#_bx
   1F32 FD CB 01 7E        6618 	bit	7,1 (iy)
   1F36 C2r4Cs23           6619 	jp	NZ,00149$
                           6620 ;demo.c:974: if (bonc == 1) {
   1F39 3Ar59s17           6621 	ld	a,(#_bonc+0)
   1F3C D6 01              6622 	sub	a,#0x01
   1F3E 20 06              6623 	jr	NZ,00178$
   1F40 3Ar5As17           6624 	ld	a,(#_bonc+1)
   1F43 B7                 6625 	or	a,a
   1F44 28 02              6626 	jr	Z,00179$
   1F46                    6627 00178$:
   1F46 18 4D              6628 	jr	00104$
   1F48                    6629 00179$:
                           6630 ;demo.c:976: cmd.source_x = 0;
   1F48 21r94s16           6631 	ld	hl,#_cmd
   1F4B 36 00              6632 	ld	(hl),#0x00
   1F4D 23                 6633 	inc	hl
   1F4E 36 00              6634 	ld	(hl),#0x00
                           6635 ;demo.c:977: cmd.source_y = 256;
   1F50 21r96s16           6636 	ld	hl, #_cmd + 2
   1F53 36 00              6637 	ld	(hl),#0x00
   1F55 23                 6638 	inc	hl
   1F56 36 01              6639 	ld	(hl),#0x01
                           6640 ;demo.c:978: cmd.dest_x = pbx;
   1F58 01r98s16           6641 	ld	bc,#_cmd + 4
   1F5B ED 5Br5Bs17        6642 	ld	de,(_pbx)
   1F5F 69                 6643 	ld	l,c
   1F60 60                 6644 	ld	h,b
   1F61 73                 6645 	ld	(hl),e
   1F62 23                 6646 	inc	hl
   1F63 72                 6647 	ld	(hl),d
                           6648 ;demo.c:979: cmd.dest_y = pbt;
   1F64 01r9As16           6649 	ld	bc,#_cmd + 6
   1F67 ED 5Br5Ds17        6650 	ld	de,(_pbt)
   1F6B 69                 6651 	ld	l,c
   1F6C 60                 6652 	ld	h,b
   1F6D 73                 6653 	ld	(hl),e
   1F6E 23                 6654 	inc	hl
   1F6F 72                 6655 	ld	(hl),d
                           6656 ;demo.c:980: cmd.size_x = 36;
   1F70 21r9Cs16           6657 	ld	hl, #_cmd + 8
   1F73 36 24              6658 	ld	(hl),#0x24
   1F75 23                 6659 	inc	hl
   1F76 36 00              6660 	ld	(hl),#0x00
                           6661 ;demo.c:981: cmd.size_y = 36;
   1F78 21r9Es16           6662 	ld	hl, #_cmd + 10
   1F7B 36 24              6663 	ld	(hl),#0x24
   1F7D 23                 6664 	inc	hl
   1F7E 36 00              6665 	ld	(hl),#0x00
                           6666 ;demo.c:982: cmd.data = 0;
                           6667 ;demo.c:983: cmd.argument = 0x00;
   1F80 3E 00              6668 	ld	a,#0x00
   1F82 32rA0s16           6669 	ld	(#_cmd + 12),a
   1F85 32rA1s16           6670 	ld	(#_cmd + 13),a
                           6671 ;demo.c:984: cmd.command = 0xD0; // HMMM
   1F88 3E D0              6672 	ld	a,#0xD0
   1F8A 32rA2s16           6673 	ld	(#_cmd + 14),a
                           6674 ;demo.c:985: vdp_copier(&cmd);
   1F8D 21r94s16           6675 	ld	hl,#_cmd
   1F90 E5                 6676 	push	hl
   1F91 CDr00s00           6677 	call	_vdp_copier
   1F94 F1                 6678 	pop	af
   1F95                    6679 00104$:
                           6680 ;demo.c:988: if (boxes_init == 0) {
   1F95 AF                 6681 	xor	a,a
   1F96 21r3As17           6682 	ld	hl,#_boxes_init + 0
   1F99 B6                 6683 	or	a,(hl)
   1F9A C2r9Cs20           6684 	jp	NZ,00106$
                           6685 ;demo.c:989: boxes_init = 1;
   1F9D FD 21r3As17        6686 	ld	iy,#_boxes_init
   1FA1 FD 36 00 01        6687 	ld	0 (iy),#0x01
                           6688 ;demo.c:991: cmd.size_x = 8;
   1FA5 21r9Cs16           6689 	ld	hl, #_cmd + 8
   1FA8 36 08              6690 	ld	(hl),#0x08
   1FAA 23                 6691 	inc	hl
   1FAB 36 00              6692 	ld	(hl),#0x00
                           6693 ;demo.c:992: cmd.size_y = 212;
   1FAD 21r9Es16           6694 	ld	hl, #_cmd + 10
   1FB0 36 D4              6695 	ld	(hl),#0xD4
   1FB2 23                 6696 	inc	hl
   1FB3 36 00              6697 	ld	(hl),#0x00
                           6698 ;demo.c:993: cmd.data = 0;
                           6699 ;demo.c:994: cmd.argument = 0x00; // from 70xY to left
   1FB5 3E 00              6700 	ld	a,#0x00
   1FB7 32rA0s16           6701 	ld	(#_cmd + 12),a
   1FBA 32rA1s16           6702 	ld	(#_cmd + 13),a
                           6703 ;demo.c:995: cmd.command = 0xd0; // vram to vram, y only
   1FBD 01rA2s16           6704 	ld	bc,#_cmd + 14
   1FC0 3E D0              6705 	ld	a,#0xD0
   1FC2 02                 6706 	ld	(bc),a
                           6707 ;demo.c:996: cmd.source_x = 248;
   1FC3 21r94s16           6708 	ld	hl,#_cmd
   1FC6 36 F8              6709 	ld	(hl),#0xF8
   1FC8 23                 6710 	inc	hl
   1FC9 36 00              6711 	ld	(hl),#0x00
                           6712 ;demo.c:997: cmd.source_y = 0;
   1FCB 21r96s16           6713 	ld	hl, #_cmd + 2
   1FCE 36 00              6714 	ld	(hl),#0x00
   1FD0 23                 6715 	inc	hl
   1FD1 36 00              6716 	ld	(hl),#0x00
                           6717 ;demo.c:998: cmd.dest_y = 0;
   1FD3 21r9As16           6718 	ld	hl, #_cmd + 6
   1FD6 36 00              6719 	ld	(hl),#0x00
   1FD8 23                 6720 	inc	hl
   1FD9 36 00              6721 	ld	(hl),#0x00
                           6722 ;demo.c:1000: for (x = 248; x >= 0; x-=8) {
   1FDB 01 F8 00           6723 	ld	bc,#0x00F8
   1FDE                    6724 00137$:
   1FDE 78                 6725 	ld	a,b
   1FDF CB 7F              6726 	bit	7,a
   1FE1 20 38              6727 	jr	NZ,00140$
                           6728 ;demo.c:1001: waitVB();
   1FE3 76                 6729 		halt 
                           6730 ;demo.c:1002: cmd.dest_x = x;
   1FE4 11r98s16           6731 	ld	de,#_cmd + 4
   1FE7 EB                 6732 	ex	de,hl
   1FE8 71                 6733 	ld	(hl),c
   1FE9 23                 6734 	inc	hl
   1FEA 70                 6735 	ld	(hl),b
                           6736 ;demo.c:1003: cmd.dest_y = 0;
   1FEB 11r9As16           6737 	ld	de,#_cmd + 6
   1FEE EB                 6738 	ex	de,hl
   1FEF 36 00              6739 	ld	(hl),#0x00
   1FF1 23                 6740 	inc	hl
   1FF2 36 00              6741 	ld	(hl),#0x00
                           6742 ;demo.c:1004: vdp_copier(&cmd);
   1FF4 C5                 6743 	push	bc
   1FF5 21r94s16           6744 	ld	hl,#_cmd
   1FF8 E5                 6745 	push	hl
   1FF9 CDr00s00           6746 	call	_vdp_copier
   1FFC F1                 6747 	pop	af
   1FFD C1                 6748 	pop	bc
                           6749 ;demo.c:1005: cmd.dest_y = 256;
   1FFE 11r9As16           6750 	ld	de,#_cmd + 6
   2001 EB                 6751 	ex	de,hl
   2002 36 00              6752 	ld	(hl),#0x00
   2004 23                 6753 	inc	hl
   2005 36 01              6754 	ld	(hl),#0x01
                           6755 ;demo.c:1006: vdp_copier(&cmd);
   2007 C5                 6756 	push	bc
   2008 21r94s16           6757 	ld	hl,#_cmd
   200B E5                 6758 	push	hl
   200C CDr00s00           6759 	call	_vdp_copier
   200F F1                 6760 	pop	af
   2010 C1                 6761 	pop	bc
                           6762 ;demo.c:1000: for (x = 248; x >= 0; x-=8) {
   2011 79                 6763 	ld	a,c
   2012 C6 F8              6764 	add	a,#0xF8
   2014 4F                 6765 	ld	c,a
   2015 78                 6766 	ld	a,b
   2016 CE FF              6767 	adc	a,#0xFF
   2018 47                 6768 	ld	b,a
   2019 18 C3              6769 	jr	00137$
   201B                    6770 00140$:
                           6771 ;demo.c:1009: vdp_load_palette(boxes_palette);
   201B 21r70s16           6772 	ld	hl,#_boxes_palette
   201E E5                 6773 	push	hl
   201F CDr00s00           6774 	call	_vdp_load_palette
   2022 F1                 6775 	pop	af
                           6776 ;demo.c:1011: for (x=0;x < 8;x++) {
   2023 DD 36 FE 00        6777 	ld	-2 (ix),#0x00
   2027 DD 36 FF 00        6778 	ld	-1 (ix),#0x00
   202B                    6779 00145$:
   202B DD 7E FE           6780 	ld	a,-2 (ix)
   202E D6 08              6781 	sub	a,#0x08
   2030 DD 7E FF           6782 	ld	a,-1 (ix)
   2033 DE 00              6783 	sbc	a,#0x00
   2035 F2r8Fs20           6784 	jp	P,00148$
                           6785 ;demo.c:1013: for (y=0;y < 9;y++) {
   2038 11 00 00           6786 	ld	de,#0x0000
   203B                    6787 00141$:
   203B 7B                 6788 	ld	a,e
   203C D6 09              6789 	sub	a,#0x09
   203E 7A                 6790 	ld	a,d
   203F DE 00              6791 	sbc	a,#0x00
   2041 F2r84s20           6792 	jp	P,00147$
                           6793 ;demo.c:1014: boxes_x[4] = 0;
   2044 01r45s17           6794 	ld	bc,#_boxes_x + 4
   2047 3E 00              6795 	ld	a,#0x00
   2049 02                 6796 	ld	(bc),a
                           6797 ;demo.c:1015: boxes_y[4] = 768+2*36;
   204A 21r4Es17           6798 	ld	hl, #_boxes_y + 8
   204D 36 48              6799 	ld	(hl),#0x48
   204F 23                 6800 	inc	hl
   2050 36 03              6801 	ld	(hl),#0x03
                           6802 ;demo.c:1016: boxi = 4;
   2052 21r50s17           6803 	ld	hl,#_boxi + 0
   2055 36 04              6804 	ld	(hl), #0x04
                           6805 ;demo.c:1017: drawbox((x*36),y*18);
   2057 4B                 6806 	ld	c,e
   2058 D5                 6807 	push	de
   2059 79                 6808 	ld	a,c
   205A 5F                 6809 	ld	e,a
   205B 87                 6810 	add	a,a
   205C 87                 6811 	add	a,a
   205D 87                 6812 	add	a,a
   205E 83                 6813 	add	a,e
   205F 87                 6814 	add	a,a
   2060 D1                 6815 	pop	de
   2061 4F                 6816 	ld	c,a
   2062 DD 46 FE           6817 	ld	b,-2 (ix)
   2065 D5                 6818 	push	de
   2066 78                 6819 	ld	a,b
   2067 5F                 6820 	ld	e,a
   2068 87                 6821 	add	a,a
   2069 87                 6822 	add	a,a
   206A 87                 6823 	add	a,a
   206B 83                 6824 	add	a,e
   206C 87                 6825 	add	a,a
   206D 87                 6826 	add	a,a
   206E D1                 6827 	pop	de
   206F 47                 6828 	ld	b,a
   2070 D5                 6829 	push	de
   2071 79                 6830 	ld	a,c
   2072 F5                 6831 	push	af
   2073 33                 6832 	inc	sp
   2074 C5                 6833 	push	bc
   2075 33                 6834 	inc	sp
   2076 CDr96s1E           6835 	call	_drawbox
   2079 F1                 6836 	pop	af
   207A D1                 6837 	pop	de
                           6838 ;demo.c:1018: boxi = 0;
   207B 21r50s17           6839 	ld	hl,#_boxi + 0
   207E 36 00              6840 	ld	(hl), #0x00
                           6841 ;demo.c:1013: for (y=0;y < 9;y++) {
   2080 13                 6842 	inc	de
   2081 C3r3Bs20           6843 	jp	00141$
   2084                    6844 00147$:
                           6845 ;demo.c:1011: for (x=0;x < 8;x++) {
   2084 DD 34 FE           6846 	inc	-2 (ix)
   2087 20 03              6847 	jr	NZ,00180$
   2089 DD 34 FF           6848 	inc	-1 (ix)
   208C                    6849 00180$:
   208C C3r2Bs20           6850 	jp	00145$
   208F                    6851 00148$:
                           6852 ;demo.c:1022: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,182);
   208F 21 08 B6           6853 	ld	hl,#0xB608
   2092 E5                 6854 	push	hl
   2093 21r51s23           6855 	ld	hl,#__str_14
   2096 E5                 6856 	push	hl
   2097 CDrB8s16           6857 	call	_drawsine
   209A F1                 6858 	pop	af
   209B F1                 6859 	pop	af
   209C                    6860 00106$:
                           6861 ;demo.c:1025: if (bt >= 80) bt+=8;
   209C 3Ar55s17           6862 	ld	a,(#_bt+0)
   209F D6 50              6863 	sub	a,#0x50
   20A1 3Ar56s17           6864 	ld	a,(#_bt+1)
   20A4 DE 00              6865 	sbc	a,#0x00
   20A6 FArBFs20           6866 	jp	M,00108$
   20A9 21r55s17           6867 	ld	hl,#_bt
   20AC 7E                 6868 	ld	a,(hl)
   20AD C6 08              6869 	add	a,#0x08
   20AF 23                 6870 	inc	hl
   20B0 2B                 6871 	dec	hl
   20B1 C5                 6872 	push	bc
   20B2 4F                 6873 	ld	c, a
   20B3 23                 6874 	inc	hl
   20B4 7E                 6875 	ld	a, (hl)
   20B5 47                 6876 	ld	b, a
   20B6 79                 6877 	ld	a, c
   20B7 2B                 6878 	dec	hl
   20B8 77                 6879 	ld	(hl), a
   20B9 78                 6880 	ld	a, b
   20BA C1                 6881 	pop	bc
   20BB CE 00              6882 	adc	a,#0x00
   20BD 23                 6883 	inc	hl
   20BE 77                 6884 	ld	(hl),a
   20BF                    6885 00108$:
                           6886 ;demo.c:1026: if (bt < 80 && bt >= 60) bt+=7;
   20BF 3Ar55s17           6887 	ld	a,(#_bt+0)
   20C2 D6 50              6888 	sub	a,#0x50
   20C4 3Ar56s17           6889 	ld	a,(#_bt+1)
   20C7 DE 00              6890 	sbc	a,#0x00
   20C9 F2rEFs20           6891 	jp	P,00110$
   20CC 3Ar55s17           6892 	ld	a,(#_bt+0)
   20CF D6 3C              6893 	sub	a,#0x3C
   20D1 3Ar56s17           6894 	ld	a,(#_bt+1)
   20D4 DE 00              6895 	sbc	a,#0x00
   20D6 FArEFs20           6896 	jp	M,00110$
   20D9 21r55s17           6897 	ld	hl,#_bt
   20DC 7E                 6898 	ld	a,(hl)
   20DD C6 07              6899 	add	a,#0x07
   20DF 23                 6900 	inc	hl
   20E0 2B                 6901 	dec	hl
   20E1 C5                 6902 	push	bc
   20E2 4F                 6903 	ld	c, a
   20E3 23                 6904 	inc	hl
   20E4 7E                 6905 	ld	a, (hl)
   20E5 47                 6906 	ld	b, a
   20E6 79                 6907 	ld	a, c
   20E7 2B                 6908 	dec	hl
   20E8 77                 6909 	ld	(hl), a
   20E9 78                 6910 	ld	a, b
   20EA C1                 6911 	pop	bc
   20EB CE 00              6912 	adc	a,#0x00
   20ED 23                 6913 	inc	hl
   20EE 77                 6914 	ld	(hl),a
   20EF                    6915 00110$:
                           6916 ;demo.c:1027: if (bt < 60 && bt >= 40) bt+=6;
   20EF 3Ar55s17           6917 	ld	a,(#_bt+0)
   20F2 D6 3C              6918 	sub	a,#0x3C
   20F4 3Ar56s17           6919 	ld	a,(#_bt+1)
   20F7 DE 00              6920 	sbc	a,#0x00
   20F9 F2r1Fs21           6921 	jp	P,00113$
   20FC 3Ar55s17           6922 	ld	a,(#_bt+0)
   20FF D6 28              6923 	sub	a,#0x28
   2101 3Ar56s17           6924 	ld	a,(#_bt+1)
   2104 DE 00              6925 	sbc	a,#0x00
   2106 FAr1Fs21           6926 	jp	M,00113$
   2109 21r55s17           6927 	ld	hl,#_bt
   210C 7E                 6928 	ld	a,(hl)
   210D C6 06              6929 	add	a,#0x06
   210F 23                 6930 	inc	hl
   2110 2B                 6931 	dec	hl
   2111 C5                 6932 	push	bc
   2112 4F                 6933 	ld	c, a
   2113 23                 6934 	inc	hl
   2114 7E                 6935 	ld	a, (hl)
   2115 47                 6936 	ld	b, a
   2116 79                 6937 	ld	a, c
   2117 2B                 6938 	dec	hl
   2118 77                 6939 	ld	(hl), a
   2119 78                 6940 	ld	a, b
   211A C1                 6941 	pop	bc
   211B CE 00              6942 	adc	a,#0x00
   211D 23                 6943 	inc	hl
   211E 77                 6944 	ld	(hl),a
   211F                    6945 00113$:
                           6946 ;demo.c:1028: if (bt < 40 && bt >= 10) bt+=5;
   211F 3Ar55s17           6947 	ld	a,(#_bt+0)
   2122 D6 28              6948 	sub	a,#0x28
   2124 3Ar56s17           6949 	ld	a,(#_bt+1)
   2127 DE 00              6950 	sbc	a,#0x00
   2129 F2r4Fs21           6951 	jp	P,00116$
   212C 3Ar55s17           6952 	ld	a,(#_bt+0)
   212F D6 0A              6953 	sub	a,#0x0A
   2131 3Ar56s17           6954 	ld	a,(#_bt+1)
   2134 DE 00              6955 	sbc	a,#0x00
   2136 FAr4Fs21           6956 	jp	M,00116$
   2139 21r55s17           6957 	ld	hl,#_bt
   213C 7E                 6958 	ld	a,(hl)
   213D C6 05              6959 	add	a,#0x05
   213F 23                 6960 	inc	hl
   2140 2B                 6961 	dec	hl
   2141 C5                 6962 	push	bc
   2142 4F                 6963 	ld	c, a
   2143 23                 6964 	inc	hl
   2144 7E                 6965 	ld	a, (hl)
   2145 47                 6966 	ld	b, a
   2146 79                 6967 	ld	a, c
   2147 2B                 6968 	dec	hl
   2148 77                 6969 	ld	(hl), a
   2149 78                 6970 	ld	a, b
   214A C1                 6971 	pop	bc
   214B CE 00              6972 	adc	a,#0x00
   214D 23                 6973 	inc	hl
   214E 77                 6974 	ld	(hl),a
   214F                    6975 00116$:
                           6976 ;demo.c:1029: if (bt < 10 ) bt+=4;
   214F 3Ar55s17           6977 	ld	a,(#_bt+0)
   2152 D6 0A              6978 	sub	a,#0x0A
   2154 3Ar56s17           6979 	ld	a,(#_bt+1)
   2157 DE 00              6980 	sbc	a,#0x00
   2159 F2r72s21           6981 	jp	P,00119$
   215C 21r55s17           6982 	ld	hl,#_bt
   215F 7E                 6983 	ld	a,(hl)
   2160 C6 04              6984 	add	a,#0x04
   2162 23                 6985 	inc	hl
   2163 2B                 6986 	dec	hl
   2164 C5                 6987 	push	bc
   2165 4F                 6988 	ld	c, a
   2166 23                 6989 	inc	hl
   2167 7E                 6990 	ld	a, (hl)
   2168 47                 6991 	ld	b, a
   2169 79                 6992 	ld	a, c
   216A 2B                 6993 	dec	hl
   216B 77                 6994 	ld	(hl), a
   216C 78                 6995 	ld	a, b
   216D C1                 6996 	pop	bc
   216E CE 00              6997 	adc	a,#0x00
   2170 23                 6998 	inc	hl
   2171 77                 6999 	ld	(hl),a
   2172                    7000 00119$:
                           7001 ;demo.c:1032: cmd.source_x = bx;
   2172 ED 4Br51s17        7002 	ld	bc,(_bx)
   2176 21r94s16           7003 	ld	hl,#_cmd
   2179 71                 7004 	ld	(hl),c
   217A 23                 7005 	inc	hl
   217B 70                 7006 	ld	(hl),b
                           7007 ;demo.c:1033: cmd.source_y = bt;
   217C 01r96s16           7008 	ld	bc,#_cmd + 2
   217F ED 5Br55s17        7009 	ld	de,(_bt)
   2183 69                 7010 	ld	l,c
   2184 60                 7011 	ld	h,b
   2185 73                 7012 	ld	(hl),e
   2186 23                 7013 	inc	hl
   2187 72                 7014 	ld	(hl),d
                           7015 ;demo.c:1034: cmd.dest_x = 0;
   2188 21r98s16           7016 	ld	hl, #_cmd + 4
   218B 36 00              7017 	ld	(hl),#0x00
   218D 23                 7018 	inc	hl
   218E 36 00              7019 	ld	(hl),#0x00
                           7020 ;demo.c:1035: cmd.dest_y = 256;
   2190 21r9As16           7021 	ld	hl, #_cmd + 6
   2193 36 00              7022 	ld	(hl),#0x00
   2195 23                 7023 	inc	hl
   2196 36 01              7024 	ld	(hl),#0x01
                           7025 ;demo.c:1036: cmd.size_x = 36;
   2198 21r9Cs16           7026 	ld	hl, #_cmd + 8
   219B 36 24              7027 	ld	(hl),#0x24
   219D 23                 7028 	inc	hl
   219E 36 00              7029 	ld	(hl),#0x00
                           7030 ;demo.c:1037: cmd.size_y = 36;
   21A0 21r9Es16           7031 	ld	hl, #_cmd + 10
   21A3 36 24              7032 	ld	(hl),#0x24
   21A5 23                 7033 	inc	hl
   21A6 36 00              7034 	ld	(hl),#0x00
                           7035 ;demo.c:1038: cmd.data = 0;
                           7036 ;demo.c:1039: cmd.argument = 0x00;
   21A8 3E 00              7037 	ld	a,#0x00
   21AA 32rA0s16           7038 	ld	(#_cmd + 12),a
   21AD 32rA1s16           7039 	ld	(#_cmd + 13),a
                           7040 ;demo.c:1040: cmd.command = 0xD0; // HMMM
   21B0 3E D0              7041 	ld	a,#0xD0
   21B2 32rA2s16           7042 	ld	(#_cmd + 14),a
                           7043 ;demo.c:1041: vdp_copier(&cmd);
   21B5 21r94s16           7044 	ld	hl,#_cmd
   21B8 E5                 7045 	push	hl
   21B9 CDr00s00           7046 	call	_vdp_copier
   21BC F1                 7047 	pop	af
                           7048 ;demo.c:1043: pbx = bx;
   21BD 2Ar51s17           7049 	ld	hl,(_bx)
   21C0 FD 21r5Bs17        7050 	ld	iy,#_pbx
   21C4 FD 75 00           7051 	ld	0 (iy),l
   21C7 FD 21r5Bs17        7052 	ld	iy,#_pbx
   21CB FD 74 01           7053 	ld	1 (iy),h
                           7054 ;demo.c:1044: pbt = bt;
   21CE 2Ar55s17           7055 	ld	hl,(_bt)
   21D1 FD 21r5Ds17        7056 	ld	iy,#_pbt
   21D5 FD 75 00           7057 	ld	0 (iy),l
   21D8 FD 21r5Ds17        7058 	ld	iy,#_pbt
   21DC FD 74 01           7059 	ld	1 (iy),h
                           7060 ;demo.c:1049: bonc = 1;
   21DF 21r59s17           7061 	ld	hl,#_bonc + 0
   21E2 36 01              7062 	ld	(hl), #0x01
   21E4 21r5As17           7063 	ld	hl,#_bonc + 1
   21E7 36 00              7064 	ld	(hl), #0x00
                           7065 ;demo.c:1050: if (bt > by) {
   21E9 21r53s17           7066 	ld	hl,#_by
   21EC 7E                 7067 	ld	a,(hl)
   21ED FD 21r55s17        7068 	ld	iy,#_bt
   21F1 FD 96 00           7069 	sub	a,0 (iy)
   21F4 23                 7070 	inc	hl
   21F5 7E                 7071 	ld	a,(hl)
   21F6 FD 21r55s17        7072 	ld	iy,#_bt
   21FA FD 9E 01           7073 	sbc	a,1 (iy)
   21FD F2r3Bs23           7074 	jp	P,00135$
                           7075 ;demo.c:1051: bt = by;
   2200 2Ar53s17           7076 	ld	hl,(_by)
   2203 FD 21r55s17        7077 	ld	iy,#_bt
   2207 FD 75 00           7078 	ld	0 (iy),l
   220A FD 21r55s17        7079 	ld	iy,#_bt
   220E FD 74 01           7080 	ld	1 (iy),h
                           7081 ;demo.c:1052: drawbox(bx,bt);
   2211 21r55s17           7082 	ld	hl,#_bt + 0
   2214 4E                 7083 	ld	c,(hl)
   2215 21r51s17           7084 	ld	hl,#_bx + 0
   2218 46                 7085 	ld	b,(hl)
   2219 79                 7086 	ld	a,c
   221A F5                 7087 	push	af
   221B 33                 7088 	inc	sp
   221C C5                 7089 	push	bc
   221D 33                 7090 	inc	sp
   221E CDr96s1E           7091 	call	_drawbox
   2221 F1                 7092 	pop	af
                           7093 ;demo.c:1053: bt = 0;
   2222 21r55s17           7094 	ld	hl,#_bt + 0
   2225 36 00              7095 	ld	(hl), #0x00
   2227 21r56s17           7096 	ld	hl,#_bt + 1
   222A 36 00              7097 	ld	(hl), #0x00
                           7098 ;demo.c:1054: if (by > 48) {
   222C 3E 30              7099 	ld	a,#0x30
   222E FD 21r53s17        7100 	ld	iy,#_by
   2232 FD 96 00           7101 	sub	a,0 (iy)
   2235 3E 00              7102 	ld	a,#0x00
   2237 FD 21r53s17        7103 	ld	iy,#_by
   223B FD 9E 01           7104 	sbc	a,1 (iy)
   223E F2r96s22           7105 	jp	P,00123$
                           7106 ;demo.c:1055: bonc = 0;
   2241 21r59s17           7107 	ld	hl,#_bonc + 0
   2244 36 00              7108 	ld	(hl), #0x00
   2246 21r5As17           7109 	ld	hl,#_bonc + 1
   2249 36 00              7110 	ld	(hl), #0x00
                           7111 ;demo.c:1056: by-=16;
   224B 21r53s17           7112 	ld	hl,#_by
   224E 7E                 7113 	ld	a,(hl)
   224F C6 F0              7114 	add	a,#0xF0
   2251 77                 7115 	ld	(hl),a
   2252 23                 7116 	inc	hl
   2253 7E                 7117 	ld	a,(hl)
   2254 CE FF              7118 	adc	a,#0xFF
   2256 77                 7119 	ld	(hl),a
                           7120 ;demo.c:1057: prevbox_of = boxes_of[boxi];
   2257 3Ar50s17           7121 	ld	a,(#_boxi+0)
   225A 87                 7122 	add	a,a
   225B C6r5F              7123 	add	a,#<_boxes_of
   225D 6F                 7124 	ld	l,a
   225E 3Es17              7125 	ld	a,#>_boxes_of
   2260 CE 00              7126 	adc	a,#0x00
   2262 67                 7127 	ld	h,a
   2263 4E                 7128 	ld	c,(hl)
   2264 23                 7129 	inc	hl
   2265 21r69s17           7130 	ld	hl,#_prevbox_of + 0
   2268 71                 7131 	ld	(hl), c
                           7132 ;demo.c:1058: by+=prevbox_of;
   2269 21r69s17           7133 	ld	hl,#_prevbox_of + 0
   226C 4E                 7134 	ld	c,(hl)
   226D 06 00              7135 	ld	b,#0x00
   226F 21r53s17           7136 	ld	hl,#_by
   2272 7E                 7137 	ld	a,(hl)
   2273 81                 7138 	add	a,c
   2274 23                 7139 	inc	hl
   2275 2B                 7140 	dec	hl
   2276 C5                 7141 	push	bc
   2277 4F                 7142 	ld	c, a
   2278 23                 7143 	inc	hl
   2279 7E                 7144 	ld	a, (hl)
   227A 47                 7145 	ld	b, a
   227B 79                 7146 	ld	a, c
   227C 2B                 7147 	dec	hl
   227D 77                 7148 	ld	(hl), a
   227E 78                 7149 	ld	a, b
   227F C1                 7150 	pop	bc
   2280 88                 7151 	adc	a,b
   2281 23                 7152 	inc	hl
   2282 77                 7153 	ld	(hl),a
                           7154 ;demo.c:1059: boxi++;
   2283 FD 21r50s17        7155 	ld	iy,#_boxi
   2287 FD 34 00           7156 	inc	0 (iy)
                           7157 ;demo.c:1060: if (boxi >= 4) boxi = 0;
   228A 3Ar50s17           7158 	ld	a,(#_boxi+0)
   228D D6 04              7159 	sub	a,#0x04
   228F 38 05              7160 	jr	C,00123$
   2291 21r50s17           7161 	ld	hl,#_boxi + 0
   2294 36 00              7162 	ld	(hl), #0x00
   2296                    7163 00123$:
                           7164 ;demo.c:1063: if (by <= 48) {
   2296 3E 30              7165 	ld	a,#0x30
   2298 FD 21r53s17        7166 	ld	iy,#_by
   229C FD 96 00           7167 	sub	a,0 (iy)
   229F 3E 00              7168 	ld	a,#0x00
   22A1 FD 21r53s17        7169 	ld	iy,#_by
   22A5 FD 9E 01           7170 	sbc	a,1 (iy)
   22A8 FAr4Cs23           7171 	jp	M,00149$
                           7172 ;demo.c:1064: bx-=16;
   22AB 21r51s17           7173 	ld	hl,#_bx
   22AE 7E                 7174 	ld	a,(hl)
   22AF C6 F0              7175 	add	a,#0xF0
   22B1 77                 7176 	ld	(hl),a
   22B2 23                 7177 	inc	hl
   22B3 7E                 7178 	ld	a,(hl)
   22B4 CE FF              7179 	adc	a,#0xFF
   22B6 77                 7180 	ld	(hl),a
                           7181 ;demo.c:1066: if (bx>128)bo+=8;
   22B7 3E 80              7182 	ld	a,#0x80
   22B9 FD 21r51s17        7183 	ld	iy,#_bx
   22BD FD 96 00           7184 	sub	a,0 (iy)
   22C0 3E 00              7185 	ld	a,#0x00
   22C2 FD 21r51s17        7186 	ld	iy,#_bx
   22C6 FD 9E 01           7187 	sbc	a,1 (iy)
   22C9 07                 7188 	rlca
   22CA E6 01              7189 	and	a,#0x01
   22CC 4F                 7190 	ld	c,a
   22CD B7                 7191 	or	a,a
   22CE 28 18              7192 	jr	Z,00125$
   22D0 21r57s17           7193 	ld	hl,#_bo
   22D3 7E                 7194 	ld	a,(hl)
   22D4 C6 08              7195 	add	a,#0x08
   22D6 23                 7196 	inc	hl
   22D7 2B                 7197 	dec	hl
   22D8 C5                 7198 	push	bc
   22D9 4F                 7199 	ld	c, a
   22DA 23                 7200 	inc	hl
   22DB 7E                 7201 	ld	a, (hl)
   22DC 47                 7202 	ld	b, a
   22DD 79                 7203 	ld	a, c
   22DE 2B                 7204 	dec	hl
   22DF 77                 7205 	ld	(hl), a
   22E0 78                 7206 	ld	a, b
   22E1 C1                 7207 	pop	bc
   22E2 CE 00              7208 	adc	a,#0x00
   22E4 23                 7209 	inc	hl
   22E5 77                 7210 	ld	(hl),a
   22E6 18 0C              7211 	jr	00126$
   22E8                    7212 00125$:
                           7213 ;demo.c:1067: else bo-=8;
   22E8 21r57s17           7214 	ld	hl,#_bo
   22EB 7E                 7215 	ld	a,(hl)
   22EC C6 F8              7216 	add	a,#0xF8
   22EE 77                 7217 	ld	(hl),a
   22EF 23                 7218 	inc	hl
   22F0 7E                 7219 	ld	a,(hl)
   22F1 CE FF              7220 	adc	a,#0xFF
   22F3 77                 7221 	ld	(hl),a
   22F4                    7222 00126$:
                           7223 ;demo.c:1068: if (bo > 192) bo = 0;
   22F4 3E C0              7224 	ld	a,#0xC0
   22F6 FD 21r57s17        7225 	ld	iy,#_bo
   22FA FD 96 00           7226 	sub	a,0 (iy)
   22FD 3E 00              7227 	ld	a,#0x00
   22FF FD 21r57s17        7228 	ld	iy,#_bo
   2303 FD 9E 01           7229 	sbc	a,1 (iy)
   2306 F2r13s23           7230 	jp	P,00128$
   2309 21r57s17           7231 	ld	hl,#_bo + 0
   230C 36 00              7232 	ld	(hl), #0x00
   230E 21r58s17           7233 	ld	hl,#_bo + 1
   2311 36 00              7234 	ld	(hl), #0x00
   2313                    7235 00128$:
                           7236 ;demo.c:1069: if (bx>128)by=84+bo;
   2313 AF                 7237 	xor	a,a
   2314 B1                 7238 	or	a,c
   2315 28 12              7239 	jr	Z,00130$
   2317 21r53s17           7240 	ld	hl,#_by
   231A 3Ar57s17           7241 	ld	a,(#_bo+0)
   231D C6 54              7242 	add	a,#0x54
   231F 77                 7243 	ld	(hl),a
   2320 3Ar58s17           7244 	ld	a,(#_bo+1)
   2323 CE 00              7245 	adc	a,#0x00
   2325 23                 7246 	inc	hl
   2326 77                 7247 	ld	(hl),a
   2327 18 23              7248 	jr	00149$
   2329                    7249 00130$:
                           7250 ;demo.c:1070: else by=36+36+84+bo;
   2329 21r53s17           7251 	ld	hl,#_by
   232C 3Ar57s17           7252 	ld	a,(#_bo+0)
   232F C6 9C              7253 	add	a,#0x9C
   2331 77                 7254 	ld	(hl),a
   2332 3Ar58s17           7255 	ld	a,(#_bo+1)
   2335 CE 00              7256 	adc	a,#0x00
   2337 23                 7257 	inc	hl
   2338 77                 7258 	ld	(hl),a
   2339 18 11              7259 	jr	00149$
   233B                    7260 00135$:
                           7261 ;demo.c:1073: drawbox(bx,bt);
   233B 21r55s17           7262 	ld	hl,#_bt + 0
   233E 4E                 7263 	ld	c,(hl)
   233F 21r51s17           7264 	ld	hl,#_bx + 0
   2342 46                 7265 	ld	b,(hl)
   2343 79                 7266 	ld	a,c
   2344 F5                 7267 	push	af
   2345 33                 7268 	inc	sp
   2346 C5                 7269 	push	bc
   2347 33                 7270 	inc	sp
   2348 CDr96s1E           7271 	call	_drawbox
   234B F1                 7272 	pop	af
   234C                    7273 00149$:
   234C DD F9              7274 	ld	sp,ix
   234E DD E1              7275 	pop	ix
   2350 C9                 7276 	ret
   2351                    7277 _boxes_end::
   2351                    7278 __str_14:
   2351 4C 45 54 20 55 53  7279 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   237C 00                 7280 	.db 0x00
                           7281 ;demo.c:1084: void thewave() {
                           7282 ;	---------------------------------
                           7283 ; Function thewave
                           7284 ; ---------------------------------
   237D                    7285 _thewave_start::
   237D                    7286 _thewave:
   237D DD E5              7287 	push	ix
   237F DD 21 00 00        7288 	ld	ix,#0
   2383 DD 39              7289 	add	ix,sp
   2385 21 F5 FF           7290 	ld	hl,#-11
   2388 39                 7291 	add	hl,sp
   2389 F9                 7292 	ld	sp,hl
                           7293 ;demo.c:1093: if (initwave == 0) {
   238A AF                 7294 	xor	a,a
   238B 21r6As17           7295 	ld	hl,#_initwave + 0
   238E B6                 7296 	or	a,(hl)
   238F C2r17s26           7297 	jp	NZ,00113$
                           7298 ;demo.c:1094: initwave = 1;
   2392 21r6As17           7299 	ld	hl,#_initwave + 0
   2395 36 01              7300 	ld	(hl), #0x01
                           7301 ;demo.c:1095: for (y = 0; y < 212; y++) {
   2397 DD 36 FE 00        7302 	ld	-2 (ix),#0x00
   239B                    7303 00128$:
   239B DD 7E FE           7304 	ld	a,-2 (ix)
   239E D6 D4              7305 	sub	a,#0xD4
   23A0 D2r13s24           7306 	jp	NC,00131$
                           7307 ;demo.c:1096: cmd.size_x = 256;
   23A3 11r9Cs16           7308 	ld	de,#_cmd + 8
   23A6 EB                 7309 	ex	de,hl
   23A7 36 00              7310 	ld	(hl),#0x00
   23A9 23                 7311 	inc	hl
   23AA 36 01              7312 	ld	(hl),#0x01
                           7313 ;demo.c:1097: cmd.size_y = 2;
   23AC 11r9Es16           7314 	ld	de,#_cmd + 10
   23AF EB                 7315 	ex	de,hl
   23B0 36 02              7316 	ld	(hl),#0x02
   23B2 23                 7317 	inc	hl
   23B3 36 00              7318 	ld	(hl),#0x00
                           7319 ;demo.c:1098: cmd.data = 0;
   23B5 11rA0s16           7320 	ld	de,#_cmd + 12
   23B8 3E 00              7321 	ld	a,#0x00
   23BA 12                 7322 	ld	(de),a
                           7323 ;demo.c:1099: cmd.argument = 0x00; // from 70xY to left
   23BB 11rA1s16           7324 	ld	de,#_cmd + 13
   23BE 3E 00              7325 	ld	a,#0x00
   23C0 12                 7326 	ld	(de),a
                           7327 ;demo.c:1100: cmd.command = 0xd0; // vram to vram, y only
   23C1 11rA2s16           7328 	ld	de,#_cmd + 14
   23C4 3E D0              7329 	ld	a,#0xD0
   23C6 12                 7330 	ld	(de),a
                           7331 ;demo.c:1102: cmd.source_x = 0;
   23C7 21r94s16           7332 	ld	hl,#_cmd
   23CA 36 00              7333 	ld	(hl),#0x00
   23CC 23                 7334 	inc	hl
   23CD 36 00              7335 	ld	(hl),#0x00
                           7336 ;demo.c:1103: cmd.source_y = 0;
   23CF 11r96s16           7337 	ld	de,#_cmd + 2
   23D2 EB                 7338 	ex	de,hl
   23D3 36 00              7339 	ld	(hl),#0x00
   23D5 23                 7340 	inc	hl
   23D6 36 00              7341 	ld	(hl),#0x00
                           7342 ;demo.c:1104: cmd.dest_x = 0;
   23D8 11r98s16           7343 	ld	de,#_cmd + 4
   23DB EB                 7344 	ex	de,hl
   23DC 36 00              7345 	ld	(hl),#0x00
   23DE 23                 7346 	inc	hl
   23DF 36 00              7347 	ld	(hl),#0x00
                           7348 ;demo.c:1105: cmd.dest_y = 0+y;
   23E1 11r9As16           7349 	ld	de,#_cmd + 6
   23E4 DD 4E FE           7350 	ld	c,-2 (ix)
   23E7 06 00              7351 	ld	b,#0x00
   23E9 EB                 7352 	ex	de,hl
   23EA 71                 7353 	ld	(hl),c
   23EB 23                 7354 	inc	hl
   23EC 70                 7355 	ld	(hl),b
                           7356 ;demo.c:1106: vdp_copier(&cmd);
   23ED C5                 7357 	push	bc
   23EE 21r94s16           7358 	ld	hl,#_cmd
   23F1 E5                 7359 	push	hl
   23F2 CDr00s00           7360 	call	_vdp_copier
   23F5 F1                 7361 	pop	af
   23F6 C1                 7362 	pop	bc
                           7363 ;demo.c:1107: cmd.dest_y = 256+y;
   23F7 11r9As16           7364 	ld	de,#_cmd + 6
   23FA 21 00 01           7365 	ld	hl,#0x0100
   23FD 09                 7366 	add	hl,bc
   23FE 4D                 7367 	ld	c,l
   23FF 44                 7368 	ld	b,h
   2400 EB                 7369 	ex	de,hl
   2401 71                 7370 	ld	(hl),c
   2402 23                 7371 	inc	hl
   2403 70                 7372 	ld	(hl),b
                           7373 ;demo.c:1108: vdp_copier(&cmd);
   2404 21r94s16           7374 	ld	hl,#_cmd
   2407 E5                 7375 	push	hl
   2408 CDr00s00           7376 	call	_vdp_copier
   240B F1                 7377 	pop	af
                           7378 ;demo.c:1109: waitVB();
   240C 76                 7379 		halt 
                           7380 ;demo.c:1095: for (y = 0; y < 212; y++) {
   240D DD 34 FE           7381 	inc	-2 (ix)
   2410 C3r9Bs23           7382 	jp	00128$
   2413                    7383 00131$:
                           7384 ;demo.c:1113: for (y = 9; y < 15; y+=1) {
   2413 DD 36 FE 09        7385 	ld	-2 (ix),#0x09
   2417                    7386 00132$:
   2417 DD 7E FE           7387 	ld	a,-2 (ix)
   241A D6 0F              7388 	sub	a,#0x0F
   241C D2r17s26           7389 	jp	NC,00113$
                           7390 ;demo.c:1114: for (x = 0; x < 21; x+=1) {
   241F DD 7E FE           7391 	ld	a,-2 (ix)
   2422 87                 7392 	add	a,a
   2423 DD 77 F7           7393 	ld	-9 (ix),a
   2426 DD 36 FF 00        7394 	ld	-1 (ix),#0x00
   242A                    7395 00108$:
   242A DD 7E FF           7396 	ld	a,-1 (ix)
   242D D6 15              7397 	sub	a,#0x15
   242F D2r11s26           7398 	jp	NC,00134$
                           7399 ;demo.c:1115: if (x > 6 && x < 13) continue; 
   2432 3E 06              7400 	ld	a,#0x06
   2434 DD 96 FF           7401 	sub	a,-1 (ix)
   2437 30 08              7402 	jr	NC,00102$
   2439 DD 7E FF           7403 	ld	a,-1 (ix)
   243C D6 0D              7404 	sub	a,#0x0D
   243E DAr0Bs26           7405 	jp	C,00110$
   2441                    7406 00102$:
                           7407 ;demo.c:1117: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   2441 3E 06              7408 	ld	a,#0x06
   2443 DD 96 FF           7409 	sub	a,-1 (ix)
   2446 DAr9Cs24           7410 	jp	C,00105$
   2449 DD 56 FF           7411 	ld	d,-1 (ix)
   244C 0E 00              7412 	ld	c,#0x00
   244E CB 22              7413 	sla	d
   2450 CB 11              7414 	rl	c
   2452 CB 22              7415 	sla	d
   2454 CB 11              7416 	rl	c
   2456 CB 22              7417 	sla	d
   2458 CB 11              7418 	rl	c
   245A 7A                 7419 	ld	a,d
   245B C6 69              7420 	add	a,#0x69
   245D 57                 7421 	ld	d,a
   245E 79                 7422 	ld	a,c
   245F CE 00              7423 	adc	a,#0x00
   2461 47                 7424 	ld	b,a
   2462 DD 5E FE           7425 	ld	e,-2 (ix)
   2465 0E 00              7426 	ld	c,#0x00
   2467 CB 23              7427 	sla	e
   2469 CB 11              7428 	rl	c
   246B CB 23              7429 	sla	e
   246D CB 11              7430 	rl	c
   246F CB 23              7431 	sla	e
   2471 CB 11              7432 	rl	c
   2473 7A                 7433 	ld	a,d
   2474 83                 7434 	add	a,e
   2475 5F                 7435 	ld	e,a
   2476 78                 7436 	ld	a,b
   2477 89                 7437 	adc	a,c
   2478 0E 00              7438 	ld	c,#0x00
   247A 3Er00              7439 	ld	a,#<_sintab
   247C 83                 7440 	add	a,e
   247D 5F                 7441 	ld	e,a
   247E 3Es00              7442 	ld	a,#>_sintab
   2480 89                 7443 	adc	a,c
   2481 6B                 7444 	ld	l,e
   2482 67                 7445 	ld	h,a
   2483 5E                 7446 	ld	e,(hl)
   2484 CB 2B              7447 	sra	e
   2486 CB 2B              7448 	sra	e
   2488 CB 2B              7449 	sra	e
   248A CB 2B              7450 	sra	e
   248C 7B                 7451 	ld	a,e
   248D 17                 7452 	rla	
   248E 9F                 7453 	sbc	a,a
   248F 4F                 7454 	ld	c,a
   2490 7B                 7455 	ld	a,e
   2491 C6 07              7456 	add	a,#0x07
   2493 DD 77 FC           7457 	ld	-4 (ix),a
   2496 79                 7458 	ld	a,c
   2497 CE 00              7459 	adc	a,#0x00
   2499 DD 77 FD           7460 	ld	-3 (ix),a
   249C                    7461 00105$:
                           7462 ;demo.c:1118: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   249C DD 7E FF           7463 	ld	a,-1 (ix)
   249F D6 0D              7464 	sub	a,#0x0D
   24A1 DAr02s25           7465 	jp	C,00107$
   24A4 DD 5E FF           7466 	ld	e,-1 (ix)
   24A7 16 00              7467 	ld	d,#0x00
   24A9 21 17 00           7468 	ld	hl,#0x0017
   24AC 19                 7469 	add	hl,de
   24AD EB                 7470 	ex	de,hl
   24AE CB 23              7471 	sla	e
   24B0 CB 12              7472 	rl	d
   24B2 CB 23              7473 	sla	e
   24B4 CB 12              7474 	rl	d
   24B6 CB 23              7475 	sla	e
   24B8 CB 12              7476 	rl	d
   24BA 21 69 00           7477 	ld	hl,#0x0069
   24BD 19                 7478 	add	hl,de
   24BE 45                 7479 	ld	b,l
   24BF 54                 7480 	ld	d,h
   24C0 DD 4E FE           7481 	ld	c,-2 (ix)
   24C3 1E 00              7482 	ld	e,#0x00
   24C5 79                 7483 	ld	a,c
   24C6 C6 13              7484 	add	a,#0x13
   24C8 4F                 7485 	ld	c,a
   24C9 7B                 7486 	ld	a,e
   24CA CE 00              7487 	adc	a,#0x00
   24CC 5F                 7488 	ld	e,a
   24CD CB 21              7489 	sla	c
   24CF CB 13              7490 	rl	e
   24D1 CB 21              7491 	sla	c
   24D3 CB 13              7492 	rl	e
   24D5 CB 21              7493 	sla	c
   24D7 CB 13              7494 	rl	e
   24D9 78                 7495 	ld	a,b
   24DA 81                 7496 	add	a,c
   24DB 4F                 7497 	ld	c,a
   24DC 7A                 7498 	ld	a,d
   24DD 8B                 7499 	adc	a,e
   24DE 1E 00              7500 	ld	e,#0x00
   24E0 3Er00              7501 	ld	a,#<_sintab
   24E2 81                 7502 	add	a,c
   24E3 4F                 7503 	ld	c,a
   24E4 3Es00              7504 	ld	a,#>_sintab
   24E6 8B                 7505 	adc	a,e
   24E7 69                 7506 	ld	l,c
   24E8 67                 7507 	ld	h,a
   24E9 4E                 7508 	ld	c,(hl)
   24EA CB 29              7509 	sra	c
   24EC CB 29              7510 	sra	c
   24EE CB 29              7511 	sra	c
   24F0 CB 29              7512 	sra	c
   24F2 79                 7513 	ld	a,c
   24F3 17                 7514 	rla	
   24F4 9F                 7515 	sbc	a,a
   24F5 5F                 7516 	ld	e,a
   24F6 79                 7517 	ld	a,c
   24F7 C6 07              7518 	add	a,#0x07
   24F9 DD 77 FC           7519 	ld	-4 (ix),a
   24FC 7B                 7520 	ld	a,e
   24FD CE 00              7521 	adc	a,#0x00
   24FF DD 77 FD           7522 	ld	-3 (ix),a
   2502                    7523 00107$:
                           7524 ;demo.c:1120: cmd.size_x = 11;
   2502 11r9Cs16           7525 	ld	de,#_cmd + 8
   2505 EB                 7526 	ex	de,hl
   2506 36 0B              7527 	ld	(hl),#0x0B
   2508 23                 7528 	inc	hl
   2509 36 00              7529 	ld	(hl),#0x00
                           7530 ;demo.c:1121: cmd.size_y = 28-(14-px);
   250B 21r9Es16           7531 	ld	hl,#_cmd + 10
   250E DD 75 F8           7532 	ld	-8 (ix),l
   2511 DD 74 F9           7533 	ld	-7 (ix),h
   2514 3E 0E              7534 	ld	a,#0x0E
   2516 DD 96 FC           7535 	sub	a,-4 (ix)
   2519 4F                 7536 	ld	c,a
   251A 3E 00              7537 	ld	a,#0x00
   251C DD 9E FD           7538 	sbc	a,-3 (ix)
   251F 5F                 7539 	ld	e,a
   2520 3E 1C              7540 	ld	a,#0x1C
   2522 91                 7541 	sub	a,c
   2523 57                 7542 	ld	d,a
   2524 3E 00              7543 	ld	a,#0x00
   2526 9B                 7544 	sbc	a,e
   2527 47                 7545 	ld	b,a
   2528 DD 6E F8           7546 	ld	l,-8 (ix)
   252B DD 66 F9           7547 	ld	h,-7 (ix)
   252E 72                 7548 	ld	(hl),d
   252F 23                 7549 	inc	hl
   2530 70                 7550 	ld	(hl),b
                           7551 ;demo.c:1122: cmd.data = 0;
   2531 21rA0s16           7552 	ld	hl,#_cmd + 12
   2534 36 00              7553 	ld	(hl),#0x00
                           7554 ;demo.c:1123: cmd.argument = 0x00; // from 70xY to left
   2536 21rA1s16           7555 	ld	hl,#_cmd + 13
   2539 36 00              7556 	ld	(hl),#0x00
                           7557 ;demo.c:1124: cmd.command = 0x98; // vram to vram, y only
   253B 21rA2s16           7558 	ld	hl,#_cmd + 14
   253E 36 98              7559 	ld	(hl),#0x98
                           7560 ;demo.c:1126: cmd.source_x = twelvetimes[px];
   2540 DD 46 FC           7561 	ld	b,-4 (ix)
   2543 DD 56 FD           7562 	ld	d,-3 (ix)
   2546 CB 20              7563 	sla	b
   2548 CB 12              7564 	rl	d
   254A 3Er20              7565 	ld	a,#<_twelvetimes
   254C 80                 7566 	add	a,b
   254D 47                 7567 	ld	b,a
   254E 3Es01              7568 	ld	a,#>_twelvetimes
   2550 8A                 7569 	adc	a,d
   2551 68                 7570 	ld	l,b
   2552 67                 7571 	ld	h,a
   2553 46                 7572 	ld	b,(hl)
   2554 23                 7573 	inc	hl
   2555 56                 7574 	ld	d,(hl)
   2556 21r94s16           7575 	ld	hl,#_cmd
   2559 70                 7576 	ld	(hl),b
   255A 23                 7577 	inc	hl
   255B 72                 7578 	ld	(hl),d
                           7579 ;demo.c:1127: cmd.source_y = 768+183+(15-px);
   255C 23                 7580 	inc	hl
   255D DD 75 F8           7581 	ld	-8 (ix),l
   2560 DD 74 F9           7582 	ld	-7 (ix),h
   2563 3E C6              7583 	ld	a,#0xC6
   2565 DD 96 FC           7584 	sub	a,-4 (ix)
   2568 47                 7585 	ld	b,a
   2569 3E 03              7586 	ld	a,#0x03
   256B DD 9E FD           7587 	sbc	a,-3 (ix)
   256E 57                 7588 	ld	d,a
   256F DD 6E F8           7589 	ld	l,-8 (ix)
   2572 DD 66 F9           7590 	ld	h,-7 (ix)
   2575 70                 7591 	ld	(hl),b
   2576 23                 7592 	inc	hl
   2577 72                 7593 	ld	(hl),d
                           7594 ;demo.c:1128: cmd.dest_x = 0+twelvetimes[x];
   2578 21r98s16           7595 	ld	hl,#_cmd + 4
   257B DD 75 F8           7596 	ld	-8 (ix),l
   257E DD 74 F9           7597 	ld	-7 (ix),h
   2581 DD 7E FF           7598 	ld	a,-1 (ix)
   2584 87                 7599 	add	a,a
   2585 C6r20              7600 	add	a,#<_twelvetimes
   2587 6F                 7601 	ld	l,a
   2588 3Es01              7602 	ld	a,#>_twelvetimes
   258A CE 00              7603 	adc	a,#0x00
   258C 67                 7604 	ld	h,a
   258D 46                 7605 	ld	b,(hl)
   258E 23                 7606 	inc	hl
   258F 56                 7607 	ld	d,(hl)
   2590 DD 6E F8           7608 	ld	l,-8 (ix)
   2593 DD 66 F9           7609 	ld	h,-7 (ix)
   2596 70                 7610 	ld	(hl),b
   2597 23                 7611 	inc	hl
   2598 72                 7612 	ld	(hl),d
                           7613 ;demo.c:1129: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   2599 21r9As16           7614 	ld	hl,#_cmd + 6
   259C DD 75 F8           7615 	ld	-8 (ix),l
   259F DD 74 F9           7616 	ld	-7 (ix),h
   25A2 3Er54              7617 	ld	a,#<_eighttimes
   25A4 DD 86 F7           7618 	add	a,-9 (ix)
   25A7 6F                 7619 	ld	l,a
   25A8 3Es01              7620 	ld	a,#>_eighttimes
   25AA CE 00              7621 	adc	a,#0x00
   25AC 67                 7622 	ld	h,a
   25AD 46                 7623 	ld	b,(hl)
   25AE 23                 7624 	inc	hl
   25AF 56                 7625 	ld	d,(hl)
   25B0 78                 7626 	ld	a,b
   25B1 C6 04              7627 	add	a,#0x04
   25B3 47                 7628 	ld	b,a
   25B4 7A                 7629 	ld	a,d
   25B5 CE 00              7630 	adc	a,#0x00
   25B7 57                 7631 	ld	d,a
   25B8 78                 7632 	ld	a,b
   25B9 81                 7633 	add	a,c
   25BA 47                 7634 	ld	b,a
   25BB 7A                 7635 	ld	a,d
   25BC 8B                 7636 	adc	a,e
   25BD 57                 7637 	ld	d,a
   25BE DD 6E F8           7638 	ld	l,-8 (ix)
   25C1 DD 66 F9           7639 	ld	h,-7 (ix)
   25C4 70                 7640 	ld	(hl),b
   25C5 23                 7641 	inc	hl
   25C6 72                 7642 	ld	(hl),d
                           7643 ;demo.c:1130: vdp_copier(&cmd);
   25C7 C5                 7644 	push	bc
   25C8 D5                 7645 	push	de
   25C9 21r94s16           7646 	ld	hl,#_cmd
   25CC E5                 7647 	push	hl
   25CD CDr00s00           7648 	call	_vdp_copier
   25D0 F1                 7649 	pop	af
   25D1 D1                 7650 	pop	de
   25D2 C1                 7651 	pop	bc
                           7652 ;demo.c:1131: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   25D3 21r9As16           7653 	ld	hl,#_cmd + 6
   25D6 DD 75 F8           7654 	ld	-8 (ix),l
   25D9 DD 74 F9           7655 	ld	-7 (ix),h
   25DC 3Er54              7656 	ld	a,#<_eighttimes
   25DE DD 86 F7           7657 	add	a,-9 (ix)
   25E1 6F                 7658 	ld	l,a
   25E2 3Es01              7659 	ld	a,#>_eighttimes
   25E4 CE 00              7660 	adc	a,#0x00
   25E6 67                 7661 	ld	h,a
   25E7 46                 7662 	ld	b,(hl)
   25E8 23                 7663 	inc	hl
   25E9 56                 7664 	ld	d,(hl)
   25EA 78                 7665 	ld	a,b
   25EB C6 04              7666 	add	a,#0x04
   25ED 47                 7667 	ld	b,a
   25EE 7A                 7668 	ld	a,d
   25EF CE 00              7669 	adc	a,#0x00
   25F1 C6 01              7670 	add	a,#0x01
   25F3 57                 7671 	ld	d,a
   25F4 78                 7672 	ld	a,b
   25F5 81                 7673 	add	a,c
   25F6 4F                 7674 	ld	c,a
   25F7 7A                 7675 	ld	a,d
   25F8 8B                 7676 	adc	a,e
   25F9 5F                 7677 	ld	e,a
   25FA DD 6E F8           7678 	ld	l,-8 (ix)
   25FD DD 66 F9           7679 	ld	h,-7 (ix)
   2600 71                 7680 	ld	(hl),c
   2601 23                 7681 	inc	hl
   2602 73                 7682 	ld	(hl),e
                           7683 ;demo.c:1132: vdp_copier(&cmd);
   2603 21r94s16           7684 	ld	hl,#_cmd
   2606 E5                 7685 	push	hl
   2607 CDr00s00           7686 	call	_vdp_copier
   260A F1                 7687 	pop	af
   260B                    7688 00110$:
                           7689 ;demo.c:1114: for (x = 0; x < 21; x+=1) {
   260B DD 34 FF           7690 	inc	-1 (ix)
   260E C3r2As24           7691 	jp	00108$
   2611                    7692 00134$:
                           7693 ;demo.c:1113: for (y = 9; y < 15; y+=1) {
   2611 DD 34 FE           7694 	inc	-2 (ix)
   2614 C3r17s24           7695 	jp	00132$
   2617                    7696 00113$:
                           7697 ;demo.c:1138: if (buf == -1) { bo = 0; ya = 0; }
   2617 3Ar6Bs17           7698 	ld	a,(#_buf+0)
   261A 3C                 7699 	inc	a
   261B 20 06              7700 	jr	NZ,00188$
   261D 3Ar6Cs17           7701 	ld	a,(#_buf+1)
   2620 3C                 7702 	inc	a
   2621 28 02              7703 	jr	Z,00189$
   2623                    7704 00188$:
   2623 18 05              7705 	jr	00115$
   2625                    7706 00189$:
   2625 01 00 00           7707 	ld	bc,#0x0000
   2628 18 03              7708 	jr	00116$
   262A                    7709 00115$:
                           7710 ;demo.c:1139: else { bo = 256; ya = 6;}
   262A 01 00 01           7711 	ld	bc,#0x0100
   262D                    7712 00116$:
                           7713 ;demo.c:1141: cmd.size_x = 72;
   262D 11r9Cs16           7714 	ld	de,#_cmd + 8
   2630 EB                 7715 	ex	de,hl
   2631 36 48              7716 	ld	(hl),#0x48
   2633 23                 7717 	inc	hl
   2634 36 00              7718 	ld	(hl),#0x00
                           7719 ;demo.c:1142: cmd.size_y = 80;
   2636 11r9Es16           7720 	ld	de,#_cmd + 10
   2639 EB                 7721 	ex	de,hl
   263A 36 50              7722 	ld	(hl),#0x50
   263C 23                 7723 	inc	hl
   263D 36 00              7724 	ld	(hl),#0x00
                           7725 ;demo.c:1143: cmd.data = 0;
   263F 11rA0s16           7726 	ld	de,#_cmd + 12
   2642 3E 00              7727 	ld	a,#0x00
   2644 12                 7728 	ld	(de),a
                           7729 ;demo.c:1144: cmd.argument = 0x00; // from 70xY to left
   2645 11rA1s16           7730 	ld	de,#_cmd + 13
   2648 3E 00              7731 	ld	a,#0x00
   264A 12                 7732 	ld	(de),a
                           7733 ;demo.c:1145: cmd.command = 0xd0; // vram to vram, y only
   264B 11rA2s16           7734 	ld	de,#_cmd + 14
   264E 3E D0              7735 	ld	a,#0xD0
   2650 12                 7736 	ld	(de),a
                           7737 ;demo.c:1146: cmd.source_x = 178;
   2651 21r94s16           7738 	ld	hl,#_cmd
   2654 36 B2              7739 	ld	(hl),#0xB2
   2656 23                 7740 	inc	hl
   2657 36 00              7741 	ld	(hl),#0x00
                           7742 ;demo.c:1147: cmd.source_y = 0;
   2659 11r96s16           7743 	ld	de,#_cmd + 2
   265C EB                 7744 	ex	de,hl
   265D 36 00              7745 	ld	(hl),#0x00
   265F 23                 7746 	inc	hl
   2660 36 00              7747 	ld	(hl),#0x00
                           7748 ;demo.c:1148: cmd.dest_x = 84;
   2662 11r98s16           7749 	ld	de,#_cmd + 4
   2665 EB                 7750 	ex	de,hl
   2666 36 54              7751 	ld	(hl),#0x54
   2668 23                 7752 	inc	hl
   2669 36 00              7753 	ld	(hl),#0x00
                           7754 ;demo.c:1149: cmd.dest_y = 72+bo;
   266B 11r9As16           7755 	ld	de,#_cmd + 6
   266E 21 48 00           7756 	ld	hl,#0x0048
   2671 09                 7757 	add	hl,bc
   2672 4D                 7758 	ld	c,l
   2673 44                 7759 	ld	b,h
   2674 EB                 7760 	ex	de,hl
   2675 71                 7761 	ld	(hl),c
   2676 23                 7762 	inc	hl
   2677 70                 7763 	ld	(hl),b
                           7764 ;demo.c:1150: vdp_copier(&cmd);
   2678 C5                 7765 	push	bc
   2679 21r94s16           7766 	ld	hl,#_cmd
   267C E5                 7767 	push	hl
   267D CDr00s00           7768 	call	_vdp_copier
   2680 F1                 7769 	pop	af
   2681 C1                 7770 	pop	bc
                           7771 ;demo.c:1152: lukema = ffa;
   2682 2Ar6Ds17           7772 	ld	hl,(_ffa)
   2685 DD 75 FA           7773 	ld	-6 (ix),l
   2688 DD 74 FB           7774 	ld	-5 (ix),h
                           7775 ;demo.c:1153: for (y = 0; y < 5; y+=1) {
   268B DD 36 FE 00        7776 	ld	-2 (ix),#0x00
   268F                    7777 00140$:
   268F DD 7E FE           7778 	ld	a,-2 (ix)
   2692 D6 05              7779 	sub	a,#0x05
   2694 D2rF5s27           7780 	jp	NC,00143$
                           7781 ;demo.c:1154: for (x = 0; x < 6; x+=1) {
   2697 DD 7E FE           7782 	ld	a,-2 (ix)
   269A 87                 7783 	add	a,a
   269B DD 77 F7           7784 	ld	-9 (ix),a
   269E DD 36 FF 00        7785 	ld	-1 (ix),#0x00
   26A2                    7786 00136$:
   26A2 DD 7E FF           7787 	ld	a,-1 (ix)
   26A5 D6 06              7788 	sub	a,#0x06
   26A7 D2rEFs27           7789 	jp	NC,00142$
                           7790 ;demo.c:1156: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   26AA DD 5E FF           7791 	ld	e,-1 (ix)
   26AD 16 00              7792 	ld	d,#0x00
   26AF CB 23              7793 	sla	e
   26B1 CB 12              7794 	rl	d
   26B3 CB 23              7795 	sla	e
   26B5 CB 12              7796 	rl	d
   26B7 CB 23              7797 	sla	e
   26B9 CB 12              7798 	rl	d
   26BB DD 7E FA           7799 	ld	a,-6 (ix)
   26BE 83                 7800 	add	a,e
   26BF DD 77 F8           7801 	ld	-8 (ix),a
   26C2 DD 7E FB           7802 	ld	a,-5 (ix)
   26C5 8A                 7803 	adc	a,d
   26C6 DD 77 F9           7804 	ld	-7 (ix),a
   26C9 DD 5E FE           7805 	ld	e,-2 (ix)
   26CC 16 00              7806 	ld	d,#0x00
   26CE CB 23              7807 	sla	e
   26D0 CB 12              7808 	rl	d
   26D2 CB 23              7809 	sla	e
   26D4 CB 12              7810 	rl	d
   26D6 DD 7E F8           7811 	ld	a,-8 (ix)
   26D9 83                 7812 	add	a,e
   26DA 5F                 7813 	ld	e,a
   26DB DD 7E F9           7814 	ld	a,-7 (ix)
   26DE 8A                 7815 	adc	a,d
   26DF 16 00              7816 	ld	d,#0x00
   26E1 21r00s00           7817 	ld	hl,#_sintab
   26E4 19                 7818 	add	hl,de
   26E5 5E                 7819 	ld	e,(hl)
   26E6 CB 2B              7820 	sra	e
   26E8 CB 2B              7821 	sra	e
   26EA CB 2B              7822 	sra	e
   26EC CB 2B              7823 	sra	e
   26EE 7B                 7824 	ld	a,e
   26EF 17                 7825 	rla	
   26F0 9F                 7826 	sbc	a,a
   26F1 57                 7827 	ld	d,a
   26F2 21 07 00           7828 	ld	hl,#0x0007
   26F5 19                 7829 	add	hl,de
   26F6 DD 75 FC           7830 	ld	-4 (ix),l
                           7831 ;demo.c:1157: if (px < 0) px = 0; 
   26F9 DD 74 FD           7832 	ld	-3 (ix),h
   26FC 7C                 7833 	ld	a, h
   26FD CB 7F              7834 	bit	7,a
   26FF 28 08              7835 	jr	Z,00118$
   2701 DD 36 FC 00        7836 	ld	-4 (ix),#0x00
   2705 DD 36 FD 00        7837 	ld	-3 (ix),#0x00
   2709                    7838 00118$:
                           7839 ;demo.c:1158: if (px > 14) px = 14; 
   2709 3E 0E              7840 	ld	a,#0x0E
   270B DD 96 FC           7841 	sub	a,-4 (ix)
   270E 3E 00              7842 	ld	a,#0x00
   2710 DD 9E FD           7843 	sbc	a,-3 (ix)
   2713 F2r1Es27           7844 	jp	P,00120$
   2716 DD 36 FC 0E        7845 	ld	-4 (ix),#0x0E
   271A DD 36 FD 00        7846 	ld	-3 (ix),#0x00
   271E                    7847 00120$:
                           7848 ;demo.c:1160: cmd.size_x = 12;
   271E 11r9Cs16           7849 	ld	de,#_cmd + 8
   2721 EB                 7850 	ex	de,hl
   2722 36 0C              7851 	ld	(hl),#0x0C
   2724 23                 7852 	inc	hl
   2725 36 00              7853 	ld	(hl),#0x00
                           7854 ;demo.c:1161: cmd.size_y = 11;
   2727 11r9Es16           7855 	ld	de,#_cmd + 10
   272A EB                 7856 	ex	de,hl
   272B 36 0B              7857 	ld	(hl),#0x0B
   272D 23                 7858 	inc	hl
   272E 36 00              7859 	ld	(hl),#0x00
                           7860 ;demo.c:1162: cmd.data = 0;
   2730 11rA0s16           7861 	ld	de,#_cmd + 12
   2733 3E 00              7862 	ld	a,#0x00
   2735 12                 7863 	ld	(de),a
                           7864 ;demo.c:1163: cmd.argument = 0x00; // from 70xY to left
   2736 11rA1s16           7865 	ld	de,#_cmd + 13
   2739 3E 00              7866 	ld	a,#0x00
   273B 12                 7867 	ld	(de),a
                           7868 ;demo.c:1164: cmd.command = 0x98; // vram to vram, y only
   273C 11rA2s16           7869 	ld	de,#_cmd + 14
   273F 3E 98              7870 	ld	a,#0x98
   2741 12                 7871 	ld	(de),a
                           7872 ;demo.c:1166: cmd.source_x = twelvetimes[px];
   2742 DD 5E FC           7873 	ld	e,-4 (ix)
   2745 DD 56 FD           7874 	ld	d,-3 (ix)
   2748 CB 23              7875 	sla	e
   274A CB 12              7876 	rl	d
   274C 21r20s01           7877 	ld	hl,#_twelvetimes
   274F 19                 7878 	add	hl,de
   2750 5E                 7879 	ld	e,(hl)
   2751 23                 7880 	inc	hl
   2752 56                 7881 	ld	d,(hl)
   2753 21r94s16           7882 	ld	hl,#_cmd
   2756 73                 7883 	ld	(hl),e
   2757 23                 7884 	inc	hl
   2758 72                 7885 	ld	(hl),d
                           7886 ;demo.c:1167: cmd.source_y = 768+183+16-px;
   2759 23                 7887 	inc	hl
   275A DD 75 F8           7888 	ld	-8 (ix),l
   275D DD 74 F9           7889 	ld	-7 (ix),h
   2760 3E C7              7890 	ld	a,#0xC7
   2762 DD 96 FC           7891 	sub	a,-4 (ix)
   2765 5F                 7892 	ld	e,a
   2766 3E 03              7893 	ld	a,#0x03
   2768 DD 9E FD           7894 	sbc	a,-3 (ix)
   276B 57                 7895 	ld	d,a
   276C DD 6E F8           7896 	ld	l,-8 (ix)
   276F DD 66 F9           7897 	ld	h,-7 (ix)
   2772 73                 7898 	ld	(hl),e
   2773 23                 7899 	inc	hl
   2774 72                 7900 	ld	(hl),d
                           7901 ;demo.c:1168: cmd.dest_x = 84+twelvetimes[x];
   2775 21r98s16           7902 	ld	hl,#_cmd + 4
   2778 DD 75 F8           7903 	ld	-8 (ix),l
   277B DD 74 F9           7904 	ld	-7 (ix),h
   277E DD 7E FF           7905 	ld	a,-1 (ix)
   2781 87                 7906 	add	a,a
   2782 C6r20              7907 	add	a,#<_twelvetimes
   2784 6F                 7908 	ld	l,a
   2785 3Es01              7909 	ld	a,#>_twelvetimes
   2787 CE 00              7910 	adc	a,#0x00
   2789 67                 7911 	ld	h,a
   278A 5E                 7912 	ld	e,(hl)
   278B 23                 7913 	inc	hl
   278C 56                 7914 	ld	d,(hl)
   278D 21 54 00           7915 	ld	hl,#0x0054
   2790 19                 7916 	add	hl,de
   2791 EB                 7917 	ex	de,hl
   2792 DD 6E F8           7918 	ld	l,-8 (ix)
   2795 DD 66 F9           7919 	ld	h,-7 (ix)
   2798 73                 7920 	ld	(hl),e
   2799 23                 7921 	inc	hl
   279A 72                 7922 	ld	(hl),d
                           7923 ;demo.c:1169: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   279B 21r9As16           7924 	ld	hl,#_cmd + 6
   279E DD 75 F8           7925 	ld	-8 (ix),l
   27A1 DD 74 F9           7926 	ld	-7 (ix),h
   27A4 3Er54              7927 	ld	a,#<_eighttimes
   27A6 DD 86 F7           7928 	add	a,-9 (ix)
   27A9 6F                 7929 	ld	l,a
   27AA 3Es01              7930 	ld	a,#>_eighttimes
   27AC CE 00              7931 	adc	a,#0x00
   27AE 67                 7932 	ld	h,a
   27AF 5E                 7933 	ld	e,(hl)
   27B0 23                 7934 	inc	hl
   27B1 56                 7935 	ld	d,(hl)
   27B2 13                 7936 	inc	de
   27B3 13                 7937 	inc	de
   27B4 13                 7938 	inc	de
   27B5 13                 7939 	inc	de
   27B6 79                 7940 	ld	a,c
   27B7 83                 7941 	add	a,e
   27B8 DD 77 F5           7942 	ld	-11 (ix),a
   27BB 78                 7943 	ld	a,b
   27BC 8A                 7944 	adc	a,d
   27BD DD 77 F6           7945 	ld	-10 (ix),a
   27C0 3E 0E              7946 	ld	a,#0x0E
   27C2 DD 96 FC           7947 	sub	a,-4 (ix)
   27C5 5F                 7948 	ld	e,a
   27C6 3E 00              7949 	ld	a,#0x00
   27C8 DD 9E FD           7950 	sbc	a,-3 (ix)
   27CB 57                 7951 	ld	d,a
   27CC DD 7E F5           7952 	ld	a,-11 (ix)
   27CF 83                 7953 	add	a,e
   27D0 5F                 7954 	ld	e,a
   27D1 DD 7E F6           7955 	ld	a,-10 (ix)
   27D4 8A                 7956 	adc	a,d
   27D5 57                 7957 	ld	d,a
   27D6 DD 6E F8           7958 	ld	l,-8 (ix)
   27D9 DD 66 F9           7959 	ld	h,-7 (ix)
   27DC 73                 7960 	ld	(hl),e
   27DD 23                 7961 	inc	hl
   27DE 72                 7962 	ld	(hl),d
                           7963 ;demo.c:1170: vdp_copier(&cmd);
   27DF C5                 7964 	push	bc
   27E0 21r94s16           7965 	ld	hl,#_cmd
   27E3 E5                 7966 	push	hl
   27E4 CDr00s00           7967 	call	_vdp_copier
   27E7 F1                 7968 	pop	af
   27E8 C1                 7969 	pop	bc
                           7970 ;demo.c:1154: for (x = 0; x < 6; x+=1) {
   27E9 DD 34 FF           7971 	inc	-1 (ix)
   27EC C3rA2s26           7972 	jp	00136$
   27EF                    7973 00142$:
                           7974 ;demo.c:1153: for (y = 0; y < 5; y+=1) {
   27EF DD 34 FE           7975 	inc	-2 (ix)
   27F2 C3r8Fs26           7976 	jp	00140$
   27F5                    7977 00143$:
                           7978 ;demo.c:1175: for (x = 0; x < 6; x+=1) {
   27F5 DD 36 FF 00        7979 	ld	-1 (ix),#0x00
   27F9                    7980 00144$:
   27F9 DD 7E FF           7981 	ld	a,-1 (ix)
   27FC D6 06              7982 	sub	a,#0x06
   27FE D2r3Fs29           7983 	jp	NC,00147$
                           7984 ;demo.c:1176: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   2801 DD 5E FF           7985 	ld	e,-1 (ix)
   2804 16 00              7986 	ld	d,#0x00
   2806 CB 23              7987 	sla	e
   2808 CB 12              7988 	rl	d
   280A CB 23              7989 	sla	e
   280C CB 12              7990 	rl	d
   280E CB 23              7991 	sla	e
   2810 CB 12              7992 	rl	d
   2812 DD 7E FA           7993 	ld	a,-6 (ix)
   2815 83                 7994 	add	a,e
   2816 5F                 7995 	ld	e,a
   2817 DD 7E FB           7996 	ld	a,-5 (ix)
   281A 8A                 7997 	adc	a,d
   281B 57                 7998 	ld	d,a
   281C 21 14 00           7999 	ld	hl,#0x0014
   281F 19                 8000 	add	hl,de
   2820 5D                 8001 	ld	e,l
   2821 16 00              8002 	ld	d,#0x00
   2823 21r00s00           8003 	ld	hl,#_sintab
   2826 19                 8004 	add	hl,de
   2827 5E                 8005 	ld	e,(hl)
   2828 CB 2B              8006 	sra	e
   282A CB 2B              8007 	sra	e
   282C CB 2B              8008 	sra	e
   282E CB 2B              8009 	sra	e
   2830 7B                 8010 	ld	a,e
   2831 17                 8011 	rla	
   2832 9F                 8012 	sbc	a,a
   2833 57                 8013 	ld	d,a
   2834 21 07 00           8014 	ld	hl,#0x0007
   2837 19                 8015 	add	hl,de
   2838 DD 75 FC           8016 	ld	-4 (ix),l
                           8017 ;demo.c:1177: if (px < 0) px = 0; 
   283B DD 74 FD           8018 	ld	-3 (ix),h
   283E 7C                 8019 	ld	a, h
   283F CB 7F              8020 	bit	7,a
   2841 28 08              8021 	jr	Z,00122$
   2843 DD 36 FC 00        8022 	ld	-4 (ix),#0x00
   2847 DD 36 FD 00        8023 	ld	-3 (ix),#0x00
   284B                    8024 00122$:
                           8025 ;demo.c:1178: if (px > 14) px = 14; 
   284B 3E 0E              8026 	ld	a,#0x0E
   284D DD 96 FC           8027 	sub	a,-4 (ix)
   2850 3E 00              8028 	ld	a,#0x00
   2852 DD 9E FD           8029 	sbc	a,-3 (ix)
   2855 F2r60s28           8030 	jp	P,00124$
   2858 DD 36 FC 0E        8031 	ld	-4 (ix),#0x0E
   285C DD 36 FD 00        8032 	ld	-3 (ix),#0x00
   2860                    8033 00124$:
                           8034 ;demo.c:1180: cmd.size_x = 12;
   2860 11r9Cs16           8035 	ld	de,#_cmd + 8
   2863 EB                 8036 	ex	de,hl
   2864 36 0C              8037 	ld	(hl),#0x0C
   2866 23                 8038 	inc	hl
   2867 36 00              8039 	ld	(hl),#0x00
                           8040 ;demo.c:1181: cmd.size_y = 27-(14-px);
   2869 21r9Es16           8041 	ld	hl,#_cmd + 10
   286C DD 75 F5           8042 	ld	-11 (ix),l
   286F DD 74 F6           8043 	ld	-10 (ix),h
   2872 3E 0E              8044 	ld	a,#0x0E
   2874 DD 96 FC           8045 	sub	a,-4 (ix)
   2877 DD 77 F8           8046 	ld	-8 (ix),a
   287A 3E 00              8047 	ld	a,#0x00
   287C DD 9E FD           8048 	sbc	a,-3 (ix)
   287F DD 77 F9           8049 	ld	-7 (ix),a
   2882 3E 1B              8050 	ld	a,#0x1B
   2884 DD 96 F8           8051 	sub	a,-8 (ix)
   2887 5F                 8052 	ld	e,a
   2888 3E 00              8053 	ld	a,#0x00
   288A DD 9E F9           8054 	sbc	a,-7 (ix)
   288D 57                 8055 	ld	d,a
   288E DD 6E F5           8056 	ld	l,-11 (ix)
   2891 DD 66 F6           8057 	ld	h,-10 (ix)
   2894 73                 8058 	ld	(hl),e
   2895 23                 8059 	inc	hl
   2896 72                 8060 	ld	(hl),d
                           8061 ;demo.c:1182: cmd.data = 0;
   2897 11rA0s16           8062 	ld	de,#_cmd + 12
   289A 3E 00              8063 	ld	a,#0x00
   289C 12                 8064 	ld	(de),a
                           8065 ;demo.c:1183: cmd.argument = 0x00; // from 70xY to left
   289D 11rA1s16           8066 	ld	de,#_cmd + 13
   28A0 3E 00              8067 	ld	a,#0x00
   28A2 12                 8068 	ld	(de),a
                           8069 ;demo.c:1184: cmd.command = 0x98; // vram to vram, y only
   28A3 11rA2s16           8070 	ld	de,#_cmd + 14
   28A6 3E 98              8071 	ld	a,#0x98
   28A8 12                 8072 	ld	(de),a
                           8073 ;demo.c:1186: cmd.source_x = twelvetimes[px];
   28A9 DD 5E FC           8074 	ld	e,-4 (ix)
   28AC DD 56 FD           8075 	ld	d,-3 (ix)
   28AF CB 23              8076 	sla	e
   28B1 CB 12              8077 	rl	d
   28B3 21r20s01           8078 	ld	hl,#_twelvetimes
   28B6 19                 8079 	add	hl,de
   28B7 5E                 8080 	ld	e,(hl)
   28B8 23                 8081 	inc	hl
   28B9 56                 8082 	ld	d,(hl)
   28BA 21r94s16           8083 	ld	hl,#_cmd
   28BD 73                 8084 	ld	(hl),e
   28BE 23                 8085 	inc	hl
   28BF 72                 8086 	ld	(hl),d
                           8087 ;demo.c:1187: cmd.source_y = 768+183+ 16-px;
   28C0 23                 8088 	inc	hl
   28C1 DD 75 F5           8089 	ld	-11 (ix),l
   28C4 DD 74 F6           8090 	ld	-10 (ix),h
   28C7 3E C7              8091 	ld	a,#0xC7
   28C9 DD 96 FC           8092 	sub	a,-4 (ix)
   28CC 5F                 8093 	ld	e,a
   28CD 3E 03              8094 	ld	a,#0x03
   28CF DD 9E FD           8095 	sbc	a,-3 (ix)
   28D2 57                 8096 	ld	d,a
   28D3 DD 6E F5           8097 	ld	l,-11 (ix)
   28D6 DD 66 F6           8098 	ld	h,-10 (ix)
   28D9 73                 8099 	ld	(hl),e
   28DA 23                 8100 	inc	hl
   28DB 72                 8101 	ld	(hl),d
                           8102 ;demo.c:1188: cmd.dest_x = 84+twelvetimes[x];
   28DC 21r98s16           8103 	ld	hl,#_cmd + 4
   28DF DD 75 F5           8104 	ld	-11 (ix),l
   28E2 DD 74 F6           8105 	ld	-10 (ix),h
   28E5 DD 7E FF           8106 	ld	a,-1 (ix)
   28E8 87                 8107 	add	a,a
   28E9 C6r20              8108 	add	a,#<_twelvetimes
   28EB 6F                 8109 	ld	l,a
   28EC 3Es01              8110 	ld	a,#>_twelvetimes
   28EE CE 00              8111 	adc	a,#0x00
   28F0 67                 8112 	ld	h,a
   28F1 5E                 8113 	ld	e,(hl)
   28F2 23                 8114 	inc	hl
   28F3 56                 8115 	ld	d,(hl)
   28F4 21 54 00           8116 	ld	hl,#0x0054
   28F7 19                 8117 	add	hl,de
   28F8 EB                 8118 	ex	de,hl
   28F9 DD 6E F5           8119 	ld	l,-11 (ix)
   28FC DD 66 F6           8120 	ld	h,-10 (ix)
   28FF 73                 8121 	ld	(hl),e
   2900 23                 8122 	inc	hl
   2901 72                 8123 	ld	(hl),d
                           8124 ;demo.c:1189: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   2902 21r9As16           8125 	ld	hl,#_cmd + 6
   2905 DD 75 F5           8126 	ld	-11 (ix),l
   2908 DD 74 F6           8127 	ld	-10 (ix),h
   290B 11r5Es01           8128 	ld	de,#_eighttimes + 10
   290E EB                 8129 	ex	de,hl
   290F 5E                 8130 	ld	e,(hl)
   2910 23                 8131 	inc	hl
   2911 56                 8132 	ld	d,(hl)
   2912 13                 8133 	inc	de
   2913 13                 8134 	inc	de
   2914 13                 8135 	inc	de
   2915 13                 8136 	inc	de
   2916 79                 8137 	ld	a,c
   2917 83                 8138 	add	a,e
   2918 5F                 8139 	ld	e,a
   2919 78                 8140 	ld	a,b
   291A 8A                 8141 	adc	a,d
   291B 57                 8142 	ld	d,a
   291C 7B                 8143 	ld	a,e
   291D DD 86 F8           8144 	add	a,-8 (ix)
   2920 5F                 8145 	ld	e,a
   2921 7A                 8146 	ld	a,d
   2922 DD 8E F9           8147 	adc	a,-7 (ix)
   2925 57                 8148 	ld	d,a
   2926 DD 6E F5           8149 	ld	l,-11 (ix)
   2929 DD 66 F6           8150 	ld	h,-10 (ix)
   292C 73                 8151 	ld	(hl),e
   292D 23                 8152 	inc	hl
   292E 72                 8153 	ld	(hl),d
                           8154 ;demo.c:1190: vdp_copier(&cmd);
   292F C5                 8155 	push	bc
   2930 21r94s16           8156 	ld	hl,#_cmd
   2933 E5                 8157 	push	hl
   2934 CDr00s00           8158 	call	_vdp_copier
   2937 F1                 8159 	pop	af
   2938 C1                 8160 	pop	bc
                           8161 ;demo.c:1175: for (x = 0; x < 6; x+=1) {
   2939 DD 34 FF           8162 	inc	-1 (ix)
   293C C3rF9s27           8163 	jp	00144$
   293F                    8164 00147$:
                           8165 ;demo.c:1194: if (buf == -1) vdp_register(2, 0x1F);
   293F 3Ar6Bs17           8166 	ld	a,(#_buf+0)
   2942 3C                 8167 	inc	a
   2943 20 06              8168 	jr	NZ,00200$
   2945 3Ar6Cs17           8169 	ld	a,(#_buf+1)
   2948 3C                 8170 	inc	a
   2949 28 02              8171 	jr	Z,00201$
   294B                    8172 00200$:
   294B 18 0A              8173 	jr	00126$
   294D                    8174 00201$:
   294D 21 02 1F           8175 	ld	hl,#0x1F02
   2950 E5                 8176 	push	hl
   2951 CDr00s00           8177 	call	_vdp_register
   2954 F1                 8178 	pop	af
   2955 18 08              8179 	jr	00127$
   2957                    8180 00126$:
                           8181 ;demo.c:1195: else vdp_register(2, 0x3F);
   2957 21 02 3F           8182 	ld	hl,#0x3F02
   295A E5                 8183 	push	hl
   295B CDr00s00           8184 	call	_vdp_register
   295E F1                 8185 	pop	af
   295F                    8186 00127$:
                           8187 ;demo.c:1198: buf = -buf;
   295F AF                 8188 	xor	a,a
   2960 FD 21r6Bs17        8189 	ld	iy,#_buf
   2964 3E 00              8190 	ld	a,#0x00
   2966 FD 9E 00           8191 	sbc	a,0 (iy)
   2969 21r6Bs17           8192 	ld	hl,#_buf + 0
   296C 77                 8193 	ld	(hl), a
   296D FD 21r6Bs17        8194 	ld	iy,#_buf
   2971 3E 00              8195 	ld	a,#0x00
   2973 FD 9E 01           8196 	sbc	a,1 (iy)
   2976 21r6Cs17           8197 	ld	hl,#_buf + 1
   2979 77                 8198 	ld	(hl), a
                           8199 ;demo.c:1200: ffa+=8;
   297A 21r6Ds17           8200 	ld	hl,#_ffa
   297D 7E                 8201 	ld	a,(hl)
   297E C6 08              8202 	add	a,#0x08
   2980 23                 8203 	inc	hl
   2981 2B                 8204 	dec	hl
   2982 C5                 8205 	push	bc
   2983 4F                 8206 	ld	c, a
   2984 23                 8207 	inc	hl
   2985 7E                 8208 	ld	a, (hl)
   2986 47                 8209 	ld	b, a
   2987 79                 8210 	ld	a, c
   2988 2B                 8211 	dec	hl
   2989 77                 8212 	ld	(hl), a
   298A 78                 8213 	ld	a, b
   298B C1                 8214 	pop	bc
   298C CE 00              8215 	adc	a,#0x00
   298E 23                 8216 	inc	hl
   298F 77                 8217 	ld	(hl),a
   2990 DD F9              8218 	ld	sp,ix
   2992 DD E1              8219 	pop	ix
   2994 C9                 8220 	ret
   2995                    8221 _thewave_end::
                           8222 ;demo.c:1206: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           8223 ;	---------------------------------
                           8224 ; Function drawtritile
                           8225 ; ---------------------------------
   2995                    8226 _drawtritile_start::
   2995                    8227 _drawtritile:
   2995 DD E5              8228 	push	ix
   2997 DD 21 00 00        8229 	ld	ix,#0
   299B DD 39              8230 	add	ix,sp
                           8231 ;demo.c:1207: cmd.source_x = tx;
   299D DD 4E 04           8232 	ld	c,4 (ix)
   29A0 06 00              8233 	ld	b,#0x00
   29A2 21r94s16           8234 	ld	hl,#_cmd
   29A5 71                 8235 	ld	(hl),c
   29A6 23                 8236 	inc	hl
   29A7 70                 8237 	ld	(hl),b
                           8238 ;demo.c:1208: cmd.source_y = ty-1;
   29A8 01r96s16           8239 	ld	bc,#_cmd + 2
   29AB DD 5E 05           8240 	ld	e,5 (ix)
   29AE DD 56 06           8241 	ld	d,6 (ix)
   29B1 1B                 8242 	dec	de
   29B2 69                 8243 	ld	l,c
   29B3 60                 8244 	ld	h,b
   29B4 73                 8245 	ld	(hl),e
   29B5 23                 8246 	inc	hl
   29B6 72                 8247 	ld	(hl),d
                           8248 ;demo.c:1209: cmd.dest_x = x;
   29B7 01r98s16           8249 	ld	bc,#_cmd + 4
   29BA DD 5E 07           8250 	ld	e,7 (ix)
   29BD 16 00              8251 	ld	d,#0x00
   29BF 69                 8252 	ld	l,c
   29C0 60                 8253 	ld	h,b
   29C1 73                 8254 	ld	(hl),e
   29C2 23                 8255 	inc	hl
   29C3 72                 8256 	ld	(hl),d
                           8257 ;demo.c:1210: cmd.dest_y = y;
   29C4 01r9As16           8258 	ld	bc,#_cmd + 6
   29C7 DD 5E 08           8259 	ld	e,8 (ix)
   29CA 16 00              8260 	ld	d,#0x00
   29CC 69                 8261 	ld	l,c
   29CD 60                 8262 	ld	h,b
   29CE 73                 8263 	ld	(hl),e
   29CF 23                 8264 	inc	hl
   29D0 72                 8265 	ld	(hl),d
                           8266 ;demo.c:1211: cmd.size_x = 16;
   29D1 21r9Cs16           8267 	ld	hl, #_cmd + 8
   29D4 36 10              8268 	ld	(hl),#0x10
   29D6 23                 8269 	inc	hl
   29D7 36 00              8270 	ld	(hl),#0x00
                           8271 ;demo.c:1212: cmd.size_y = 16;
   29D9 21r9Es16           8272 	ld	hl, #_cmd + 10
   29DC 36 10              8273 	ld	(hl),#0x10
   29DE 23                 8274 	inc	hl
   29DF 36 00              8275 	ld	(hl),#0x00
                           8276 ;demo.c:1213: cmd.data = 0;
                           8277 ;demo.c:1214: cmd.argument = 0x00;
   29E1 3E 00              8278 	ld	a,#0x00
   29E3 32rA0s16           8279 	ld	(#_cmd + 12),a
   29E6 32rA1s16           8280 	ld	(#_cmd + 13),a
                           8281 ;demo.c:1215: cmd.command = 0xd0; // HMMM
   29E9 3E D0              8282 	ld	a,#0xD0
   29EB 32rA2s16           8283 	ld	(#_cmd + 14),a
                           8284 ;demo.c:1216: vdp_copier(&cmd);
   29EE 21r94s16           8285 	ld	hl,#_cmd
   29F1 E5                 8286 	push	hl
   29F2 CDr00s00           8287 	call	_vdp_copier
   29F5 F1                 8288 	pop	af
   29F6 DD E1              8289 	pop	ix
   29F8 C9                 8290 	ret
   29F9                    8291 _drawtritile_end::
                           8292 ;demo.c:1223: void drawtilescreen(char* tripic) {
                           8293 ;	---------------------------------
                           8294 ; Function drawtilescreen
                           8295 ; ---------------------------------
   29F9                    8296 _drawtilescreen_start::
   29F9                    8297 _drawtilescreen:
   29F9 DD E5              8298 	push	ix
   29FB DD 21 00 00        8299 	ld	ix,#0
   29FF DD 39              8300 	add	ix,sp
   2A01 F5                 8301 	push	af
   2A02 3B                 8302 	dec	sp
                           8303 ;demo.c:1225: if(tilei >= 192) return;
   2A03 3Ar70s17           8304 	ld	a,(#_tilei+0)
   2A06 D6 C0              8305 	sub	a,#0xC0
   2A08 3Ar71s17           8306 	ld	a,(#_tilei+1)
   2A0B DE 00              8307 	sbc	a,#0x00
   2A0D FAr13s2A           8308 	jp	M,00102$
   2A10 C3rDEs2A           8309 	jp	00112$
   2A13                    8310 00102$:
                           8311 ;demo.c:1227: tiletick++;
   2A13 FD 21r76s17        8312 	ld	iy,#_tiletick
   2A17 FD 34 00           8313 	inc	0 (iy)
                           8314 ;demo.c:1228: if (tiletick > 6) { tiletick = 0;}
   2A1A 3E 06              8315 	ld	a,#0x06
   2A1C FD 21r76s17        8316 	ld	iy,#_tiletick
   2A20 FD 96 00           8317 	sub	a,0 (iy)
   2A23 30 0A              8318 	jr	NC,00104$
   2A25 FD 21r76s17        8319 	ld	iy,#_tiletick
   2A29 FD 36 00 00        8320 	ld	0 (iy),#0x00
   2A2D 18 03              8321 	jr	00118$
   2A2F                    8322 00104$:
                           8323 ;demo.c:1229: else return;
   2A2F C3rDEs2A           8324 	jp	00112$
                           8325 ;demo.c:1230: for (i=0;i<20;i++) {
   2A32                    8326 00118$:
   2A32 DD 36 FF 00        8327 	ld	-1 (ix),#0x00
   2A36                    8328 00108$:
   2A36 DD 7E FF           8329 	ld	a,-1 (ix)
   2A39 D6 14              8330 	sub	a,#0x14
   2A3B D2rDEs2A           8331 	jp	NC,00112$
                           8332 ;demo.c:1231: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2A3E 3Ar74s17           8333 	ld	a,(#_tiley+0)
   2A41 DD 77 FD           8334 	ld	-3 (ix),a
   2A44 3Ar72s17           8335 	ld	a,(#_tilex+0)
   2A47 DD 77 FE           8336 	ld	-2 (ix),a
   2A4A 21r70s17           8337 	ld	hl,#_tilei
   2A4D DD 7E 04           8338 	ld	a,4 (ix)
   2A50 86                 8339 	add	a,(hl)
   2A51 57                 8340 	ld	d,a
   2A52 DD 7E 05           8341 	ld	a,5 (ix)
   2A55 23                 8342 	inc	hl
   2A56 8E                 8343 	adc	a,(hl)
   2A57 6A                 8344 	ld	l,d
   2A58 67                 8345 	ld	h,a
   2A59 56                 8346 	ld	d,(hl)
   2A5A 7A                 8347 	ld	a,d
   2A5B 87                 8348 	add	a,a
   2A5C C6r88              8349 	add	a,#<_tri_lookup_y
   2A5E 6F                 8350 	ld	l,a
   2A5F 3Es01              8351 	ld	a,#>_tri_lookup_y
   2A61 CE 00              8352 	adc	a,#0x00
   2A63 67                 8353 	ld	h,a
   2A64 4E                 8354 	ld	c,(hl)
   2A65 23                 8355 	inc	hl
   2A66 5E                 8356 	ld	e,(hl)
   2A67 3Er00              8357 	ld	a,#<_tri_lookup_x
   2A69 82                 8358 	add	a,d
   2A6A 6F                 8359 	ld	l,a
   2A6B 3Es01              8360 	ld	a,#>_tri_lookup_x
   2A6D CE 00              8361 	adc	a,#0x00
   2A6F 67                 8362 	ld	h,a
   2A70 56                 8363 	ld	d,(hl)
   2A71 DD 66 FD           8364 	ld	h,-3 (ix)
   2A74 DD 6E FE           8365 	ld	l,-2 (ix)
   2A77 E5                 8366 	push	hl
   2A78 69                 8367 	ld	l,c
   2A79 63                 8368 	ld	h,e
   2A7A E5                 8369 	push	hl
   2A7B D5                 8370 	push	de
   2A7C 33                 8371 	inc	sp
   2A7D CDr95s29           8372 	call	_drawtritile
   2A80 F1                 8373 	pop	af
   2A81 F1                 8374 	pop	af
   2A82 33                 8375 	inc	sp
                           8376 ;demo.c:1232: tilex+=16;
   2A83 21r72s17           8377 	ld	hl,#_tilex
   2A86 7E                 8378 	ld	a,(hl)
   2A87 C6 10              8379 	add	a,#0x10
   2A89 23                 8380 	inc	hl
   2A8A 2B                 8381 	dec	hl
   2A8B C5                 8382 	push	bc
   2A8C 4F                 8383 	ld	c, a
   2A8D 23                 8384 	inc	hl
   2A8E 7E                 8385 	ld	a, (hl)
   2A8F 47                 8386 	ld	b, a
   2A90 79                 8387 	ld	a, c
   2A91 2B                 8388 	dec	hl
   2A92 77                 8389 	ld	(hl), a
   2A93 78                 8390 	ld	a, b
   2A94 C1                 8391 	pop	bc
   2A95 CE 00              8392 	adc	a,#0x00
   2A97 23                 8393 	inc	hl
   2A98 77                 8394 	ld	(hl),a
                           8395 ;demo.c:1233: tilei++;
   2A99 FD 21r70s17        8396 	ld	iy,#_tilei
   2A9D FD 34 00           8397 	inc	0 (iy)
   2AA0 20 07              8398 	jr	NZ,00119$
   2AA2 FD 21r70s17        8399 	ld	iy,#_tilei
   2AA6 FD 34 01           8400 	inc	1 (iy)
   2AA9                    8401 00119$:
                           8402 ;demo.c:1234: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   2AA9 3Ar72s17           8403 	ld	a,(#_tilex+0)
   2AAC D6 00              8404 	sub	a,#0x00
   2AAE 3Ar73s17           8405 	ld	a,(#_tilex+1)
   2AB1 DE 01              8406 	sbc	a,#0x01
   2AB3 FArD8s2A           8407 	jp	M,00110$
   2AB6 21r72s17           8408 	ld	hl,#_tilex + 0
   2AB9 36 00              8409 	ld	(hl), #0x00
   2ABB 21r73s17           8410 	ld	hl,#_tilex + 1
   2ABE 36 00              8411 	ld	(hl), #0x00
   2AC0 21r74s17           8412 	ld	hl,#_tiley
   2AC3 7E                 8413 	ld	a,(hl)
   2AC4 C6 10              8414 	add	a,#0x10
   2AC6 23                 8415 	inc	hl
   2AC7 2B                 8416 	dec	hl
   2AC8 C5                 8417 	push	bc
   2AC9 4F                 8418 	ld	c, a
   2ACA 23                 8419 	inc	hl
   2ACB 7E                 8420 	ld	a, (hl)
   2ACC 47                 8421 	ld	b, a
   2ACD 79                 8422 	ld	a, c
   2ACE 2B                 8423 	dec	hl
   2ACF 77                 8424 	ld	(hl), a
   2AD0 78                 8425 	ld	a, b
   2AD1 C1                 8426 	pop	bc
   2AD2 CE 00              8427 	adc	a,#0x00
   2AD4 23                 8428 	inc	hl
   2AD5 77                 8429 	ld	(hl),a
   2AD6 18 06              8430 	jr	00112$
   2AD8                    8431 00110$:
                           8432 ;demo.c:1230: for (i=0;i<20;i++) {
   2AD8 DD 34 FF           8433 	inc	-1 (ix)
   2ADB C3r36s2A           8434 	jp	00108$
   2ADE                    8435 00112$:
   2ADE DD F9              8436 	ld	sp,ix
   2AE0 DD E1              8437 	pop	ix
   2AE2 C9                 8438 	ret
   2AE3                    8439 _drawtilescreen_end::
                           8440 ;demo.c:1239: void drawtilescreen_full(char* tripic) {
                           8441 ;	---------------------------------
                           8442 ; Function drawtilescreen_full
                           8443 ; ---------------------------------
   2AE3                    8444 _drawtilescreen_full_start::
   2AE3                    8445 _drawtilescreen_full:
   2AE3 DD E5              8446 	push	ix
   2AE5 DD 21 00 00        8447 	ld	ix,#0
   2AE9 DD 39              8448 	add	ix,sp
   2AEB 21 F8 FF           8449 	ld	hl,#-8
   2AEE 39                 8450 	add	hl,sp
   2AEF F9                 8451 	ld	sp,hl
                           8452 ;demo.c:1240: int x = 0;
   2AF0 DD 36 FE 00        8453 	ld	-2 (ix),#0x00
   2AF4 DD 36 FF 00        8454 	ld	-1 (ix),#0x00
                           8455 ;demo.c:1243: while(i < 192) {
   2AF8 DD 36 FC 00        8456 	ld	-4 (ix),#0x00
   2AFC DD 36 FD 00        8457 	ld	-3 (ix),#0x00
   2B00 DD 36 FA 00        8458 	ld	-6 (ix),#0x00
   2B04 DD 36 FB 00        8459 	ld	-5 (ix),#0x00
   2B08                    8460 00103$:
   2B08 DD 7E FA           8461 	ld	a,-6 (ix)
   2B0B D6 C0              8462 	sub	a,#0xC0
   2B0D DD 7E FB           8463 	ld	a,-5 (ix)
   2B10 DE 00              8464 	sbc	a,#0x00
   2B12 F2r99s2B           8465 	jp	P,00106$
                           8466 ;demo.c:1244: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   2B15 DD 7E FC           8467 	ld	a,-4 (ix)
   2B18 DD 77 F8           8468 	ld	-8 (ix),a
   2B1B DD 7E FE           8469 	ld	a,-2 (ix)
   2B1E DD 77 F9           8470 	ld	-7 (ix),a
   2B21 DD 7E 04           8471 	ld	a,4 (ix)
   2B24 DD 86 FA           8472 	add	a,-6 (ix)
   2B27 4F                 8473 	ld	c,a
   2B28 DD 7E 05           8474 	ld	a,5 (ix)
   2B2B DD 8E FB           8475 	adc	a,-5 (ix)
   2B2E 47                 8476 	ld	b,a
   2B2F 0A                 8477 	ld	a,(bc)
   2B30 4F                 8478 	ld	c,a
   2B31 87                 8479 	add	a,a
   2B32 C6r88              8480 	add	a,#<_tri_lookup_y
   2B34 6F                 8481 	ld	l,a
   2B35 3Es01              8482 	ld	a,#>_tri_lookup_y
   2B37 CE 00              8483 	adc	a,#0x00
   2B39 67                 8484 	ld	h,a
   2B3A 46                 8485 	ld	b,(hl)
   2B3B 23                 8486 	inc	hl
   2B3C 56                 8487 	ld	d,(hl)
   2B3D 3Er00              8488 	ld	a,#<_tri_lookup_x
   2B3F 81                 8489 	add	a,c
   2B40 6F                 8490 	ld	l,a
   2B41 3Es01              8491 	ld	a,#>_tri_lookup_x
   2B43 CE 00              8492 	adc	a,#0x00
   2B45 67                 8493 	ld	h,a
   2B46 4E                 8494 	ld	c,(hl)
   2B47 DD 66 F8           8495 	ld	h,-8 (ix)
   2B4A DD 6E F9           8496 	ld	l,-7 (ix)
   2B4D E5                 8497 	push	hl
   2B4E 58                 8498 	ld	e,b
   2B4F D5                 8499 	push	de
   2B50 79                 8500 	ld	a,c
   2B51 F5                 8501 	push	af
   2B52 33                 8502 	inc	sp
   2B53 CDr95s29           8503 	call	_drawtritile
   2B56 F1                 8504 	pop	af
   2B57 F1                 8505 	pop	af
   2B58 33                 8506 	inc	sp
                           8507 ;demo.c:1245: x+=16;
   2B59 DD 7E FE           8508 	ld	a,-2 (ix)
   2B5C C6 10              8509 	add	a,#0x10
   2B5E DD 77 FE           8510 	ld	-2 (ix),a
   2B61 DD 7E FF           8511 	ld	a,-1 (ix)
   2B64 CE 00              8512 	adc	a,#0x00
   2B66 DD 77 FF           8513 	ld	-1 (ix),a
                           8514 ;demo.c:1246: if (x >= 256) {x = 0; y+=16;}
   2B69 DD 7E FE           8515 	ld	a,-2 (ix)
   2B6C D6 00              8516 	sub	a,#0x00
   2B6E DD 7E FF           8517 	ld	a,-1 (ix)
   2B71 DE 01              8518 	sbc	a,#0x01
   2B73 FAr8Es2B           8519 	jp	M,00102$
   2B76 DD 36 FE 00        8520 	ld	-2 (ix),#0x00
   2B7A DD 36 FF 00        8521 	ld	-1 (ix),#0x00
   2B7E DD 7E FC           8522 	ld	a,-4 (ix)
   2B81 C6 10              8523 	add	a,#0x10
   2B83 DD 77 FC           8524 	ld	-4 (ix),a
   2B86 DD 7E FD           8525 	ld	a,-3 (ix)
   2B89 CE 00              8526 	adc	a,#0x00
   2B8B DD 77 FD           8527 	ld	-3 (ix),a
   2B8E                    8528 00102$:
                           8529 ;demo.c:1247: i++;
   2B8E DD 34 FA           8530 	inc	-6 (ix)
   2B91 20 03              8531 	jr	NZ,00112$
   2B93 DD 34 FB           8532 	inc	-5 (ix)
   2B96                    8533 00112$:
   2B96 C3r08s2B           8534 	jp	00103$
   2B99                    8535 00106$:
   2B99 DD F9              8536 	ld	sp,ix
   2B9B DD E1              8537 	pop	ix
   2B9D C9                 8538 	ret
   2B9E                    8539 _drawtilescreen_full_end::
                           8540 ;demo.c:1263: void tritiles() {
                           8541 ;	---------------------------------
                           8542 ; Function tritiles
                           8543 ; ---------------------------------
   2B9E                    8544 _tritiles_start::
   2B9E                    8545 _tritiles:
   2B9E DD E5              8546 	push	ix
   2BA0 DD 21 00 00        8547 	ld	ix,#0
   2BA4 DD 39              8548 	add	ix,sp
   2BA6 21 FB FF           8549 	ld	hl,#-5
   2BA9 39                 8550 	add	hl,sp
   2BAA F9                 8551 	ld	sp,hl
                           8552 ;demo.c:1270: if (tri_inited == 0 || tri_inited == 2) {
   2BAB AF                 8553 	xor	a,a
   2BAC FD 21r6Fs17        8554 	ld	iy,#_tri_inited
   2BB0 FD B6 00           8555 	or	a,0 (iy)
   2BB3 28 0C              8556 	jr	Z,00109$
   2BB5 FD 21r6Fs17        8557 	ld	iy,#_tri_inited
   2BB9 FD 7E 00           8558 	ld	a,0 (iy)
   2BBC D6 02              8559 	sub	a,#0x02
   2BBE C2rCAs2C           8560 	jp	NZ,00110$
   2BC1                    8561 00109$:
                           8562 ;demo.c:1272: cmd.size_x = 2;
   2BC1 21r9Cs16           8563 	ld	hl, #_cmd + 8
   2BC4 36 02              8564 	ld	(hl),#0x02
   2BC6 23                 8565 	inc	hl
   2BC7 36 00              8566 	ld	(hl),#0x00
                           8567 ;demo.c:1273: cmd.size_y = 212;
   2BC9 21r9Es16           8568 	ld	hl, #_cmd + 10
   2BCC 36 D4              8569 	ld	(hl),#0xD4
   2BCE 23                 8570 	inc	hl
   2BCF 36 00              8571 	ld	(hl),#0x00
                           8572 ;demo.c:1274: cmd.data = 0;
                           8573 ;demo.c:1275: cmd.argument = 0x00; // from 70xY to left
   2BD1 3E 00              8574 	ld	a,#0x00
   2BD3 32rA0s16           8575 	ld	(#_cmd + 12),a
   2BD6 32rA1s16           8576 	ld	(#_cmd + 13),a
                           8577 ;demo.c:1276: cmd.command = 0xd0; // vram to vram, y only
   2BD9 01rA2s16           8578 	ld	bc,#_cmd + 14
   2BDC 3E D0              8579 	ld	a,#0xD0
   2BDE 02                 8580 	ld	(bc),a
                           8581 ;demo.c:1277: cmd.source_x = 255;
   2BDF 21r94s16           8582 	ld	hl,#_cmd
   2BE2 36 FF              8583 	ld	(hl),#0xFF
   2BE4 23                 8584 	inc	hl
   2BE5 36 00              8585 	ld	(hl),#0x00
                           8586 ;demo.c:1278: cmd.source_y = 0;
   2BE7 21r96s16           8587 	ld	hl, #_cmd + 2
   2BEA 36 00              8588 	ld	(hl),#0x00
   2BEC 23                 8589 	inc	hl
   2BED 36 00              8590 	ld	(hl),#0x00
                           8591 ;demo.c:1280: for (x = 0; x < 256; x+=2) {
   2BEF 01 00 00           8592 	ld	bc,#0x0000
   2BF2                    8593 00170$:
   2BF2 79                 8594 	ld	a,c
   2BF3 D6 00              8595 	sub	a,#0x00
   2BF5 78                 8596 	ld	a,b
   2BF6 DE 01              8597 	sbc	a,#0x01
   2BF8 F2r2Ds2C           8598 	jp	P,00173$
                           8599 ;demo.c:1281: waitVB();
   2BFB 76                 8600 		halt 
                           8601 ;demo.c:1282: cmd.dest_y = 256;
   2BFC 11r9As16           8602 	ld	de,#_cmd + 6
   2BFF EB                 8603 	ex	de,hl
   2C00 36 00              8604 	ld	(hl),#0x00
   2C02 23                 8605 	inc	hl
   2C03 36 01              8606 	ld	(hl),#0x01
                           8607 ;demo.c:1283: cmd.dest_x = x;
   2C05 11r98s16           8608 	ld	de,#_cmd + 4
   2C08 EB                 8609 	ex	de,hl
   2C09 71                 8610 	ld	(hl),c
   2C0A 23                 8611 	inc	hl
   2C0B 70                 8612 	ld	(hl),b
                           8613 ;demo.c:1284: vdp_copier(&cmd);
   2C0C C5                 8614 	push	bc
   2C0D 21r94s16           8615 	ld	hl,#_cmd
   2C10 E5                 8616 	push	hl
   2C11 CDr00s00           8617 	call	_vdp_copier
   2C14 F1                 8618 	pop	af
   2C15 C1                 8619 	pop	bc
                           8620 ;demo.c:1285: cmd.dest_y = 0;
   2C16 11r9As16           8621 	ld	de,#_cmd + 6
   2C19 EB                 8622 	ex	de,hl
   2C1A 36 00              8623 	ld	(hl),#0x00
   2C1C 23                 8624 	inc	hl
   2C1D 36 00              8625 	ld	(hl),#0x00
                           8626 ;demo.c:1286: vdp_copier(&cmd);
   2C1F C5                 8627 	push	bc
   2C20 21r94s16           8628 	ld	hl,#_cmd
   2C23 E5                 8629 	push	hl
   2C24 CDr00s00           8630 	call	_vdp_copier
   2C27 F1                 8631 	pop	af
   2C28 C1                 8632 	pop	bc
                           8633 ;demo.c:1280: for (x = 0; x < 256; x+=2) {
   2C29 03                 8634 	inc	bc
   2C2A 03                 8635 	inc	bc
   2C2B 18 C5              8636 	jr	00170$
   2C2D                    8637 00173$:
                           8638 ;demo.c:1289: if (tri_inited == 0) vdp_load_palette(boxes_palette);
   2C2D AF                 8639 	xor	a,a
   2C2E 21r6Fs17           8640 	ld	hl,#_tri_inited + 0
   2C31 B6                 8641 	or	a,(hl)
   2C32 20 0A              8642 	jr	NZ,00104$
   2C34 21r70s16           8643 	ld	hl,#_boxes_palette
   2C37 E5                 8644 	push	hl
   2C38 CDr00s00           8645 	call	_vdp_load_palette
   2C3B F1                 8646 	pop	af
   2C3C 18 46              8647 	jr	00105$
   2C3E                    8648 00104$:
                           8649 ;demo.c:1290: else if (tri_inited == 2) { 
   2C3E 3Ar6Fs17           8650 	ld	a,(#_tri_inited+0)
   2C41 D6 02              8651 	sub	a,#0x02
   2C43 20 3F              8652 	jr	NZ,00105$
                           8653 ;demo.c:1291: vdp_load_palette(boxes_palette); 
   2C45 21r70s16           8654 	ld	hl,#_boxes_palette
   2C48 E5                 8655 	push	hl
   2C49 CDr00s00           8656 	call	_vdp_load_palette
   2C4C F1                 8657 	pop	af
                           8658 ;demo.c:1292: triframes = 0; 
   2C4D 21r82s17           8659 	ld	hl,#_triframes + 0
   2C50 36 00              8660 	ld	(hl), #0x00
   2C52 21r83s17           8661 	ld	hl,#_triframes + 1
   2C55 36 00              8662 	ld	(hl), #0x00
                           8663 ;demo.c:1294: tripal[0] = 4;
   2C57 21r77s17           8664 	ld	hl,#_tripal
   2C5A 36 04              8665 	ld	(hl),#0x04
                           8666 ;demo.c:1295: tripal[1] = 4;
   2C5C 3E 04              8667 	ld	a,#0x04
   2C5E 32r78s17           8668 	ld	(#_tripal + 1),a
                           8669 ;demo.c:1296: tripal[2] = 3;
   2C61 3E 03              8670 	ld	a,#0x03
   2C63 32r79s17           8671 	ld	(#_tripal + 2),a
                           8672 ;demo.c:1298: tripal[3] = 2;
   2C66 3E 02              8673 	ld	a,#0x02
   2C68 32r7As17           8674 	ld	(#_tripal + 3),a
                           8675 ;demo.c:1299: tripal[4] = 3;
   2C6B 3E 03              8676 	ld	a,#0x03
   2C6D 32r7Bs17           8677 	ld	(#_tripal + 4),a
                           8678 ;demo.c:1300: tripal[5] = 4;
   2C70 3E 04              8679 	ld	a,#0x04
   2C72 32r7Cs17           8680 	ld	(#_tripal + 5),a
                           8681 ;demo.c:1302: tripal[6] = 1;
   2C75 3E 01              8682 	ld	a,#0x01
   2C77 32r7Ds17           8683 	ld	(#_tripal + 6),a
                           8684 ;demo.c:1303: tripal[7] = 3;
   2C7A 3E 03              8685 	ld	a,#0x03
   2C7C 32r7Es17           8686 	ld	(#_tripal + 7),a
                           8687 ;demo.c:1304: tripal[8] = 1;
   2C7F 3E 01              8688 	ld	a,#0x01
   2C81 32r7Fs17           8689 	ld	(#_tripal + 8),a
   2C84                    8690 00105$:
                           8691 ;demo.c:1306: tri_inited++;
   2C84 FD 21r6Fs17        8692 	ld	iy,#_tri_inited
   2C88 FD 34 00           8693 	inc	0 (iy)
                           8694 ;demo.c:1307: vdp_register(9,2); // 50hz,192
   2C8B 21 09 02           8695 	ld	hl,#0x0209
   2C8E E5                 8696 	push	hl
   2C8F CDr00s00           8697 	call	_vdp_register
   2C92 F1                 8698 	pop	af
                           8699 ;demo.c:1309: msx2_palette(15,0,0,0);
   2C93 21 00 00           8700 	ld	hl,#0x0000
   2C96 E5                 8701 	push	hl
   2C97 2E 0F              8702 	ld	l, #0x0F
   2C99 E5                 8703 	push	hl
   2C9A CDr00s00           8704 	call	_msx2_palette
   2C9D F1                 8705 	pop	af
   2C9E F1                 8706 	pop	af
                           8707 ;demo.c:1311: if (tri_inited == 1) drawtilescreen_full(tri_center);
   2C9F 3Ar6Fs17           8708 	ld	a,(#_tri_inited+0)
   2CA2 D6 01              8709 	sub	a,#0x01
   2CA4 20 0A              8710 	jr	NZ,00107$
   2CA6 21r2Cs01           8711 	ld	hl,#_tri_center
   2CA9 E5                 8712 	push	hl
   2CAA CDrE3s2A           8713 	call	_drawtilescreen_full
   2CAD F1                 8714 	pop	af
   2CAE 18 08              8715 	jr	00108$
   2CB0                    8716 00107$:
                           8717 ;demo.c:1312: else drawtilescreen_full(tri_inva2);
   2CB0 21rACs05           8718 	ld	hl,#_tri_inva2
   2CB3 E5                 8719 	push	hl
   2CB4 CDrE3s2A           8720 	call	_drawtilescreen_full
   2CB7 F1                 8721 	pop	af
   2CB8                    8722 00108$:
                           8723 ;demo.c:1313: vdp_register(2, 0x1f);
   2CB8 21 02 1F           8724 	ld	hl,#0x1F02
   2CBB E5                 8725 	push	hl
   2CBC CDr00s00           8726 	call	_vdp_register
   2CBF F1                 8727 	pop	af
                           8728 ;demo.c:1314: tick = 0;
   2CC0 21r92s16           8729 	ld	hl,#_tick + 0
   2CC3 36 00              8730 	ld	(hl), #0x00
   2CC5 21r93s16           8731 	ld	hl,#_tick + 1
   2CC8 36 00              8732 	ld	(hl), #0x00
   2CCA                    8733 00110$:
                           8734 ;demo.c:1318: if (tri_inited == 1) triframes++;
   2CCA 3Ar6Fs17           8735 	ld	a,(#_tri_inited+0)
   2CCD D6 01              8736 	sub	a,#0x01
   2CCF 20 10              8737 	jr	NZ,00113$
   2CD1 FD 21r82s17        8738 	ld	iy,#_triframes
   2CD5 FD 34 00           8739 	inc	0 (iy)
   2CD8 20 07              8740 	jr	NZ,00231$
   2CDA FD 21r82s17        8741 	ld	iy,#_triframes
   2CDE FD 34 01           8742 	inc	1 (iy)
   2CE1                    8743 00231$:
   2CE1                    8744 00113$:
                           8745 ;demo.c:1320: if (triframes == 150) { tilei = 0; tilex = 0; tiley = 0; }
   2CE1 3Ar82s17           8746 	ld	a,(#_triframes+0)
   2CE4 D6 96              8747 	sub	a,#0x96
   2CE6 20 06              8748 	jr	NZ,00232$
   2CE8 3Ar83s17           8749 	ld	a,(#_triframes+1)
   2CEB B7                 8750 	or	a,a
   2CEC 28 02              8751 	jr	Z,00233$
   2CEE                    8752 00232$:
   2CEE 18 1E              8753 	jr	00115$
   2CF0                    8754 00233$:
   2CF0 21r70s17           8755 	ld	hl,#_tilei + 0
   2CF3 36 00              8756 	ld	(hl), #0x00
   2CF5 21r71s17           8757 	ld	hl,#_tilei + 1
   2CF8 36 00              8758 	ld	(hl), #0x00
   2CFA 21r72s17           8759 	ld	hl,#_tilex + 0
   2CFD 36 00              8760 	ld	(hl), #0x00
   2CFF 21r73s17           8761 	ld	hl,#_tilex + 1
   2D02 36 00              8762 	ld	(hl), #0x00
   2D04 21r74s17           8763 	ld	hl,#_tiley + 0
   2D07 36 00              8764 	ld	(hl), #0x00
   2D09 21r75s17           8765 	ld	hl,#_tiley + 1
   2D0C 36 00              8766 	ld	(hl), #0x00
   2D0E                    8767 00115$:
                           8768 ;demo.c:1321: if (triframes >= 150 && triframes < 300) {
   2D0E 3Ar82s17           8769 	ld	a,(#_triframes+0)
   2D11 D6 96              8770 	sub	a,#0x96
   2D13 3Ar83s17           8771 	ld	a,(#_triframes+1)
   2D16 DE 00              8772 	sbc	a,#0x00
   2D18 FAr30s2D           8773 	jp	M,00117$
   2D1B 3Ar82s17           8774 	ld	a,(#_triframes+0)
   2D1E D6 2C              8775 	sub	a,#0x2C
   2D20 3Ar83s17           8776 	ld	a,(#_triframes+1)
   2D23 DE 01              8777 	sbc	a,#0x01
   2D25 F2r30s2D           8778 	jp	P,00117$
                           8779 ;demo.c:1322: drawtilescreen(tri_up);
   2D28 21rECs01           8780 	ld	hl,#_tri_up
   2D2B E5                 8781 	push	hl
   2D2C CDrF9s29           8782 	call	_drawtilescreen
   2D2F F1                 8783 	pop	af
   2D30                    8784 00117$:
                           8785 ;demo.c:1325: if (triframes == 300) { tilei = 0; tilex = 0; tiley = 0; }
   2D30 3Ar82s17           8786 	ld	a,(#_triframes+0)
   2D33 D6 2C              8787 	sub	a,#0x2C
   2D35 20 07              8788 	jr	NZ,00234$
   2D37 3Ar83s17           8789 	ld	a,(#_triframes+1)
   2D3A D6 01              8790 	sub	a,#0x01
   2D3C 28 02              8791 	jr	Z,00235$
   2D3E                    8792 00234$:
   2D3E 18 1E              8793 	jr	00120$
   2D40                    8794 00235$:
   2D40 21r70s17           8795 	ld	hl,#_tilei + 0
   2D43 36 00              8796 	ld	(hl), #0x00
   2D45 21r71s17           8797 	ld	hl,#_tilei + 1
   2D48 36 00              8798 	ld	(hl), #0x00
   2D4A 21r72s17           8799 	ld	hl,#_tilex + 0
   2D4D 36 00              8800 	ld	(hl), #0x00
   2D4F 21r73s17           8801 	ld	hl,#_tilex + 1
   2D52 36 00              8802 	ld	(hl), #0x00
   2D54 21r74s17           8803 	ld	hl,#_tiley + 0
   2D57 36 00              8804 	ld	(hl), #0x00
   2D59 21r75s17           8805 	ld	hl,#_tiley + 1
   2D5C 36 00              8806 	ld	(hl), #0x00
   2D5E                    8807 00120$:
                           8808 ;demo.c:1326: if (triframes >= 300 && triframes < 450) {
   2D5E 3Ar82s17           8809 	ld	a,(#_triframes+0)
   2D61 D6 2C              8810 	sub	a,#0x2C
   2D63 3Ar83s17           8811 	ld	a,(#_triframes+1)
   2D66 DE 01              8812 	sbc	a,#0x01
   2D68 FAr80s2D           8813 	jp	M,00122$
   2D6B 3Ar82s17           8814 	ld	a,(#_triframes+0)
   2D6E D6 C2              8815 	sub	a,#0xC2
   2D70 3Ar83s17           8816 	ld	a,(#_triframes+1)
   2D73 DE 01              8817 	sbc	a,#0x01
   2D75 F2r80s2D           8818 	jp	P,00122$
                           8819 ;demo.c:1327: drawtilescreen(tri_dia);
   2D78 21rACs02           8820 	ld	hl,#_tri_dia
   2D7B E5                 8821 	push	hl
   2D7C CDrF9s29           8822 	call	_drawtilescreen
   2D7F F1                 8823 	pop	af
   2D80                    8824 00122$:
                           8825 ;demo.c:1330: if (triframes == 450) { tilei = 0; tilex = 0; tiley = 0; }
   2D80 3Ar82s17           8826 	ld	a,(#_triframes+0)
   2D83 D6 C2              8827 	sub	a,#0xC2
   2D85 20 07              8828 	jr	NZ,00236$
   2D87 3Ar83s17           8829 	ld	a,(#_triframes+1)
   2D8A D6 01              8830 	sub	a,#0x01
   2D8C 28 02              8831 	jr	Z,00237$
   2D8E                    8832 00236$:
   2D8E 18 1E              8833 	jr	00125$
   2D90                    8834 00237$:
   2D90 21r70s17           8835 	ld	hl,#_tilei + 0
   2D93 36 00              8836 	ld	(hl), #0x00
   2D95 21r71s17           8837 	ld	hl,#_tilei + 1
   2D98 36 00              8838 	ld	(hl), #0x00
   2D9A 21r72s17           8839 	ld	hl,#_tilex + 0
   2D9D 36 00              8840 	ld	(hl), #0x00
   2D9F 21r73s17           8841 	ld	hl,#_tilex + 1
   2DA2 36 00              8842 	ld	(hl), #0x00
   2DA4 21r74s17           8843 	ld	hl,#_tiley + 0
   2DA7 36 00              8844 	ld	(hl), #0x00
   2DA9 21r75s17           8845 	ld	hl,#_tiley + 1
   2DAC 36 00              8846 	ld	(hl), #0x00
   2DAE                    8847 00125$:
                           8848 ;demo.c:1331: if (triframes >= 450 && triframes < 600) {
   2DAE 3Ar82s17           8849 	ld	a,(#_triframes+0)
   2DB1 D6 C2              8850 	sub	a,#0xC2
   2DB3 3Ar83s17           8851 	ld	a,(#_triframes+1)
   2DB6 DE 01              8852 	sbc	a,#0x01
   2DB8 FArD0s2D           8853 	jp	M,00127$
   2DBB 3Ar82s17           8854 	ld	a,(#_triframes+0)
   2DBE D6 58              8855 	sub	a,#0x58
   2DC0 3Ar83s17           8856 	ld	a,(#_triframes+1)
   2DC3 DE 02              8857 	sbc	a,#0x02
   2DC5 F2rD0s2D           8858 	jp	P,00127$
                           8859 ;demo.c:1332: drawtilescreen(tri_side1);
   2DC8 21r6Cs03           8860 	ld	hl,#_tri_side1
   2DCB E5                 8861 	push	hl
   2DCC CDrF9s29           8862 	call	_drawtilescreen
   2DCF F1                 8863 	pop	af
   2DD0                    8864 00127$:
                           8865 ;demo.c:1335: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2DD0 3Ar82s17           8866 	ld	a,(#_triframes+0)
   2DD3 D6 58              8867 	sub	a,#0x58
   2DD5 20 07              8868 	jr	NZ,00238$
   2DD7 3Ar83s17           8869 	ld	a,(#_triframes+1)
   2DDA D6 02              8870 	sub	a,#0x02
   2DDC 28 02              8871 	jr	Z,00239$
   2DDE                    8872 00238$:
   2DDE 18 1E              8873 	jr	00130$
   2DE0                    8874 00239$:
   2DE0 21r70s17           8875 	ld	hl,#_tilei + 0
   2DE3 36 00              8876 	ld	(hl), #0x00
   2DE5 21r71s17           8877 	ld	hl,#_tilei + 1
   2DE8 36 00              8878 	ld	(hl), #0x00
   2DEA 21r72s17           8879 	ld	hl,#_tilex + 0
   2DED 36 00              8880 	ld	(hl), #0x00
   2DEF 21r73s17           8881 	ld	hl,#_tilex + 1
   2DF2 36 00              8882 	ld	(hl), #0x00
   2DF4 21r74s17           8883 	ld	hl,#_tiley + 0
   2DF7 36 00              8884 	ld	(hl), #0x00
   2DF9 21r75s17           8885 	ld	hl,#_tiley + 1
   2DFC 36 00              8886 	ld	(hl), #0x00
   2DFE                    8887 00130$:
                           8888 ;demo.c:1336: if (triframes >= 600 && triframes < 750) {
   2DFE 3Ar82s17           8889 	ld	a,(#_triframes+0)
   2E01 D6 58              8890 	sub	a,#0x58
   2E03 3Ar83s17           8891 	ld	a,(#_triframes+1)
   2E06 DE 02              8892 	sbc	a,#0x02
   2E08 FAr20s2E           8893 	jp	M,00132$
   2E0B 3Ar82s17           8894 	ld	a,(#_triframes+0)
   2E0E D6 EE              8895 	sub	a,#0xEE
   2E10 3Ar83s17           8896 	ld	a,(#_triframes+1)
   2E13 DE 02              8897 	sbc	a,#0x02
   2E15 F2r20s2E           8898 	jp	P,00132$
                           8899 ;demo.c:1337: drawtilescreen(tri_side2);
   2E18 21r2Cs04           8900 	ld	hl,#_tri_side2
   2E1B E5                 8901 	push	hl
   2E1C CDrF9s29           8902 	call	_drawtilescreen
   2E1F F1                 8903 	pop	af
   2E20                    8904 00132$:
                           8905 ;demo.c:1340: if (triframes == 750) { tilei = 0; tilex = 0; tiley = 0; }
   2E20 3Ar82s17           8906 	ld	a,(#_triframes+0)
   2E23 D6 EE              8907 	sub	a,#0xEE
   2E25 20 07              8908 	jr	NZ,00240$
   2E27 3Ar83s17           8909 	ld	a,(#_triframes+1)
   2E2A D6 02              8910 	sub	a,#0x02
   2E2C 28 02              8911 	jr	Z,00241$
   2E2E                    8912 00240$:
   2E2E 18 1E              8913 	jr	00135$
   2E30                    8914 00241$:
   2E30 21r70s17           8915 	ld	hl,#_tilei + 0
   2E33 36 00              8916 	ld	(hl), #0x00
   2E35 21r71s17           8917 	ld	hl,#_tilei + 1
   2E38 36 00              8918 	ld	(hl), #0x00
   2E3A 21r72s17           8919 	ld	hl,#_tilex + 0
   2E3D 36 00              8920 	ld	(hl), #0x00
   2E3F 21r73s17           8921 	ld	hl,#_tilex + 1
   2E42 36 00              8922 	ld	(hl), #0x00
   2E44 21r74s17           8923 	ld	hl,#_tiley + 0
   2E47 36 00              8924 	ld	(hl), #0x00
   2E49 21r75s17           8925 	ld	hl,#_tiley + 1
   2E4C 36 00              8926 	ld	(hl), #0x00
   2E4E                    8927 00135$:
                           8928 ;demo.c:1341: if (triframes >= 750 && triframes < 900) {
   2E4E 3Ar82s17           8929 	ld	a,(#_triframes+0)
   2E51 D6 EE              8930 	sub	a,#0xEE
   2E53 3Ar83s17           8931 	ld	a,(#_triframes+1)
   2E56 DE 02              8932 	sbc	a,#0x02
   2E58 FAr70s2E           8933 	jp	M,00137$
   2E5B 3Ar82s17           8934 	ld	a,(#_triframes+0)
   2E5E D6 84              8935 	sub	a,#0x84
   2E60 3Ar83s17           8936 	ld	a,(#_triframes+1)
   2E63 DE 03              8937 	sbc	a,#0x03
   2E65 F2r70s2E           8938 	jp	P,00137$
                           8939 ;demo.c:1342: drawtilescreen(tri_inva1);
   2E68 21rECs04           8940 	ld	hl,#_tri_inva1
   2E6B E5                 8941 	push	hl
   2E6C CDrF9s29           8942 	call	_drawtilescreen
   2E6F F1                 8943 	pop	af
   2E70                    8944 00137$:
                           8945 ;demo.c:1345: if (triframes == 900) { tilei = 0; tilex = 0; tiley = 0; }
   2E70 3Ar82s17           8946 	ld	a,(#_triframes+0)
   2E73 D6 84              8947 	sub	a,#0x84
   2E75 20 07              8948 	jr	NZ,00242$
   2E77 3Ar83s17           8949 	ld	a,(#_triframes+1)
   2E7A D6 03              8950 	sub	a,#0x03
   2E7C 28 02              8951 	jr	Z,00243$
   2E7E                    8952 00242$:
   2E7E 18 1E              8953 	jr	00140$
   2E80                    8954 00243$:
   2E80 21r70s17           8955 	ld	hl,#_tilei + 0
   2E83 36 00              8956 	ld	(hl), #0x00
   2E85 21r71s17           8957 	ld	hl,#_tilei + 1
   2E88 36 00              8958 	ld	(hl), #0x00
   2E8A 21r72s17           8959 	ld	hl,#_tilex + 0
   2E8D 36 00              8960 	ld	(hl), #0x00
   2E8F 21r73s17           8961 	ld	hl,#_tilex + 1
   2E92 36 00              8962 	ld	(hl), #0x00
   2E94 21r74s17           8963 	ld	hl,#_tiley + 0
   2E97 36 00              8964 	ld	(hl), #0x00
   2E99 21r75s17           8965 	ld	hl,#_tiley + 1
   2E9C 36 00              8966 	ld	(hl), #0x00
   2E9E                    8967 00140$:
                           8968 ;demo.c:1346: if (triframes >= 900 && triframes < 1050) {
   2E9E 3Ar82s17           8969 	ld	a,(#_triframes+0)
   2EA1 D6 84              8970 	sub	a,#0x84
   2EA3 3Ar83s17           8971 	ld	a,(#_triframes+1)
   2EA6 DE 03              8972 	sbc	a,#0x03
   2EA8 FArC0s2E           8973 	jp	M,00142$
   2EAB 3Ar82s17           8974 	ld	a,(#_triframes+0)
   2EAE D6 1A              8975 	sub	a,#0x1A
   2EB0 3Ar83s17           8976 	ld	a,(#_triframes+1)
   2EB3 DE 04              8977 	sbc	a,#0x04
   2EB5 F2rC0s2E           8978 	jp	P,00142$
                           8979 ;demo.c:1347: drawtilescreen(tri_inva2);
   2EB8 21rACs05           8980 	ld	hl,#_tri_inva2
   2EBB E5                 8981 	push	hl
   2EBC CDrF9s29           8982 	call	_drawtilescreen
   2EBF F1                 8983 	pop	af
   2EC0                    8984 00142$:
                           8985 ;demo.c:1350: if (triframes == 1050) { tilei = 0; tilex = 0; tiley = 0; }
   2EC0 3Ar82s17           8986 	ld	a,(#_triframes+0)
   2EC3 D6 1A              8987 	sub	a,#0x1A
   2EC5 20 07              8988 	jr	NZ,00244$
   2EC7 3Ar83s17           8989 	ld	a,(#_triframes+1)
   2ECA D6 04              8990 	sub	a,#0x04
   2ECC 28 02              8991 	jr	Z,00245$
   2ECE                    8992 00244$:
   2ECE 18 1E              8993 	jr	00145$
   2ED0                    8994 00245$:
   2ED0 21r70s17           8995 	ld	hl,#_tilei + 0
   2ED3 36 00              8996 	ld	(hl), #0x00
   2ED5 21r71s17           8997 	ld	hl,#_tilei + 1
   2ED8 36 00              8998 	ld	(hl), #0x00
   2EDA 21r72s17           8999 	ld	hl,#_tilex + 0
   2EDD 36 00              9000 	ld	(hl), #0x00
   2EDF 21r73s17           9001 	ld	hl,#_tilex + 1
   2EE2 36 00              9002 	ld	(hl), #0x00
   2EE4 21r74s17           9003 	ld	hl,#_tiley + 0
   2EE7 36 00              9004 	ld	(hl), #0x00
   2EE9 21r75s17           9005 	ld	hl,#_tiley + 1
   2EEC 36 00              9006 	ld	(hl), #0x00
   2EEE                    9007 00145$:
                           9008 ;demo.c:1351: if (triframes >= 1050 && triframes < 1200) {
   2EEE 3Ar82s17           9009 	ld	a,(#_triframes+0)
   2EF1 D6 1A              9010 	sub	a,#0x1A
   2EF3 3Ar83s17           9011 	ld	a,(#_triframes+1)
   2EF6 DE 04              9012 	sbc	a,#0x04
   2EF8 FAr10s2F           9013 	jp	M,00147$
   2EFB 3Ar82s17           9014 	ld	a,(#_triframes+0)
   2EFE D6 B0              9015 	sub	a,#0xB0
   2F00 3Ar83s17           9016 	ld	a,(#_triframes+1)
   2F03 DE 04              9017 	sbc	a,#0x04
   2F05 F2r10s2F           9018 	jp	P,00147$
                           9019 ;demo.c:1352: drawtilescreen(tri_inva3);
   2F08 21r6Cs06           9020 	ld	hl,#_tri_inva3
   2F0B E5                 9021 	push	hl
   2F0C CDrF9s29           9022 	call	_drawtilescreen
   2F0F F1                 9023 	pop	af
   2F10                    9024 00147$:
                           9025 ;demo.c:1355: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   2F10 3Ar82s17           9026 	ld	a,(#_triframes+0)
   2F13 D6 B0              9027 	sub	a,#0xB0
   2F15 20 07              9028 	jr	NZ,00246$
   2F17 3Ar83s17           9029 	ld	a,(#_triframes+1)
   2F1A D6 04              9030 	sub	a,#0x04
   2F1C 28 02              9031 	jr	Z,00247$
   2F1E                    9032 00246$:
   2F1E 18 1E              9033 	jr	00150$
   2F20                    9034 00247$:
   2F20 21r70s17           9035 	ld	hl,#_tilei + 0
   2F23 36 00              9036 	ld	(hl), #0x00
   2F25 21r71s17           9037 	ld	hl,#_tilei + 1
   2F28 36 00              9038 	ld	(hl), #0x00
   2F2A 21r72s17           9039 	ld	hl,#_tilex + 0
   2F2D 36 00              9040 	ld	(hl), #0x00
   2F2F 21r73s17           9041 	ld	hl,#_tilex + 1
   2F32 36 00              9042 	ld	(hl), #0x00
   2F34 21r74s17           9043 	ld	hl,#_tiley + 0
   2F37 36 00              9044 	ld	(hl), #0x00
   2F39 21r75s17           9045 	ld	hl,#_tiley + 1
   2F3C 36 00              9046 	ld	(hl), #0x00
   2F3E                    9047 00150$:
                           9048 ;demo.c:1356: if (triframes >= 1200 && triframes < 1350) {
   2F3E 3Ar82s17           9049 	ld	a,(#_triframes+0)
   2F41 D6 B0              9050 	sub	a,#0xB0
   2F43 3Ar83s17           9051 	ld	a,(#_triframes+1)
   2F46 DE 04              9052 	sbc	a,#0x04
   2F48 FAr60s2F           9053 	jp	M,00152$
   2F4B 3Ar82s17           9054 	ld	a,(#_triframes+0)
   2F4E D6 46              9055 	sub	a,#0x46
   2F50 3Ar83s17           9056 	ld	a,(#_triframes+1)
   2F53 DE 05              9057 	sbc	a,#0x05
   2F55 F2r60s2F           9058 	jp	P,00152$
                           9059 ;demo.c:1357: drawtilescreen(tri_inva4);
   2F58 21r2Cs07           9060 	ld	hl,#_tri_inva4
   2F5B E5                 9061 	push	hl
   2F5C CDrF9s29           9062 	call	_drawtilescreen
   2F5F F1                 9063 	pop	af
   2F60                    9064 00152$:
                           9065 ;demo.c:1360: if (triframes == 1350) { tilei = 0; tilex = 0; tiley = 0; }
   2F60 3Ar82s17           9066 	ld	a,(#_triframes+0)
   2F63 D6 46              9067 	sub	a,#0x46
   2F65 20 07              9068 	jr	NZ,00248$
   2F67 3Ar83s17           9069 	ld	a,(#_triframes+1)
   2F6A D6 05              9070 	sub	a,#0x05
   2F6C 28 02              9071 	jr	Z,00249$
   2F6E                    9072 00248$:
   2F6E 18 1E              9073 	jr	00155$
   2F70                    9074 00249$:
   2F70 21r70s17           9075 	ld	hl,#_tilei + 0
   2F73 36 00              9076 	ld	(hl), #0x00
   2F75 21r71s17           9077 	ld	hl,#_tilei + 1
   2F78 36 00              9078 	ld	(hl), #0x00
   2F7A 21r72s17           9079 	ld	hl,#_tilex + 0
   2F7D 36 00              9080 	ld	(hl), #0x00
   2F7F 21r73s17           9081 	ld	hl,#_tilex + 1
   2F82 36 00              9082 	ld	(hl), #0x00
   2F84 21r74s17           9083 	ld	hl,#_tiley + 0
   2F87 36 00              9084 	ld	(hl), #0x00
   2F89 21r75s17           9085 	ld	hl,#_tiley + 1
   2F8C 36 00              9086 	ld	(hl), #0x00
   2F8E                    9087 00155$:
                           9088 ;demo.c:1361: if (triframes >= 1350 && triframes < 1500) {
   2F8E 3Ar82s17           9089 	ld	a,(#_triframes+0)
   2F91 D6 46              9090 	sub	a,#0x46
   2F93 3Ar83s17           9091 	ld	a,(#_triframes+1)
   2F96 DE 05              9092 	sbc	a,#0x05
   2F98 FArB0s2F           9093 	jp	M,00157$
   2F9B 3Ar82s17           9094 	ld	a,(#_triframes+0)
   2F9E D6 DC              9095 	sub	a,#0xDC
   2FA0 3Ar83s17           9096 	ld	a,(#_triframes+1)
   2FA3 DE 05              9097 	sbc	a,#0x05
   2FA5 F2rB0s2F           9098 	jp	P,00157$
                           9099 ;demo.c:1362: drawtilescreen(tri_center);
   2FA8 21r2Cs01           9100 	ld	hl,#_tri_center
   2FAB E5                 9101 	push	hl
   2FAC CDrF9s29           9102 	call	_drawtilescreen
   2FAF F1                 9103 	pop	af
   2FB0                    9104 00157$:
                           9105 ;demo.c:1365: if (triframes > 1500) triframes = 199;
   2FB0 3E DC              9106 	ld	a,#0xDC
   2FB2 FD 21r82s17        9107 	ld	iy,#_triframes
   2FB6 FD 96 00           9108 	sub	a,0 (iy)
   2FB9 3E 05              9109 	ld	a,#0x05
   2FBB FD 21r82s17        9110 	ld	iy,#_triframes
   2FBF FD 9E 01           9111 	sbc	a,1 (iy)
   2FC2 F2rCFs2F           9112 	jp	P,00160$
   2FC5 21r82s17           9113 	ld	hl,#_triframes + 0
   2FC8 36 C7              9114 	ld	(hl), #0xC7
   2FCA 21r83s17           9115 	ld	hl,#_triframes + 1
   2FCD 36 00              9116 	ld	(hl), #0x00
   2FCF                    9117 00160$:
                           9118 ;demo.c:1368: msx2_palette(2,0,0,0);
   2FCF 21 00 00           9119 	ld	hl,#0x0000
   2FD2 E5                 9120 	push	hl
   2FD3 2E 02              9121 	ld	l, #0x02
   2FD5 E5                 9122 	push	hl
   2FD6 CDr00s00           9123 	call	_msx2_palette
   2FD9 F1                 9124 	pop	af
   2FDA F1                 9125 	pop	af
                           9126 ;demo.c:1369: msx2_palette(11,0,0,0);
   2FDB 21 00 00           9127 	ld	hl,#0x0000
   2FDE E5                 9128 	push	hl
   2FDF 2E 0B              9129 	ld	l, #0x0B
   2FE1 E5                 9130 	push	hl
   2FE2 CDr00s00           9131 	call	_msx2_palette
   2FE5 F1                 9132 	pop	af
   2FE6 F1                 9133 	pop	af
                           9134 ;demo.c:1371: if (PLY_PSGReg10 > 4) {
   2FE7 3E 04              9135 	ld	a,#0x04
   2FE9 FD 21r00s00        9136 	ld	iy,#_PLY_PSGReg10
   2FED FD 96 00           9137 	sub	a,0 (iy)
   2FF0 D2r85s30           9138 	jp	NC,00162$
                           9139 ;demo.c:1372: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2FF3 21r00s00           9140 	ld	hl,#_PLY_PSGReg10 + 0
   2FF6 4E                 9141 	ld	c,(hl)
   2FF7 06 00              9142 	ld	b,#0x00
   2FF9 21r80s17           9143 	ld	hl,#_tripaltick + 0
   2FFC 5E                 9144 	ld	e,(hl)
   2FFD 16 00              9145 	ld	d,#0x00
   2FFF 79                 9146 	ld	a,c
   3000 83                 9147 	add	a,e
   3001 4F                 9148 	ld	c,a
   3002 78                 9149 	ld	a,b
   3003 8A                 9150 	adc	a,d
   3004 06 00              9151 	ld	b,#0x00
   3006 21r2Cs00           9152 	ld	hl,#_sintabx
   3009 09                 9153 	add	hl,bc
   300A 7E                 9154 	ld	a,(hl)
   300B 4F                 9155 	ld	c,a
   300C 06 00              9156 	ld	b,#0x00
   300E 3E C0              9157 	ld	a,#0xC0
   3010 91                 9158 	sub	a,c
   3011 4F                 9159 	ld	c,a
   3012 3E 00              9160 	ld	a,#0x00
   3014 98                 9161 	sbc	a,b
   3015 47                 9162 	ld	b,a
   3016 CB 28              9163 	sra	b
   3018 CB 19              9164 	rr	c
   301A CB 28              9165 	sra	b
   301C CB 19              9166 	rr	c
   301E CB 28              9167 	sra	b
   3020 CB 19              9168 	rr	c
   3022 41                 9169 	ld	b,c
   3023 0E 17              9170 	ld	c,#0x17
   3025 C5                 9171 	push	bc
   3026 CDr00s00           9172 	call	_vdp_register
   3029 F1                 9173 	pop	af
                           9174 ;demo.c:1374: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   302A 21r79s17           9175 	ld	hl,#_tripal + 2
   302D 4E                 9176 	ld	c,(hl)
   302E 11r78s17           9177 	ld	de,#_tripal + 1
   3031 1A                 9178 	ld	a,(de)
   3032 47                 9179 	ld	b,a
   3033 21r77s17           9180 	ld	hl,#_tripal
   3036 5E                 9181 	ld	e,(hl)
   3037 21r00s00           9182 	ld	hl,#_PLY_PSGReg10 + 0
   303A 56                 9183 	ld	d,(hl)
   303B 7B                 9184 	ld	a,e
   303C 82                 9185 	add	a,d
   303D 5F                 9186 	ld	e,a
   303E 79                 9187 	ld	a,c
   303F F5                 9188 	push	af
   3040 33                 9189 	inc	sp
   3041 C5                 9190 	push	bc
   3042 33                 9191 	inc	sp
   3043 53                 9192 	ld	d,e
   3044 1E 03              9193 	ld	e,#0x03
   3046 D5                 9194 	push	de
   3047 CDr00s00           9195 	call	_msx2_palette
   304A F1                 9196 	pop	af
   304B F1                 9197 	pop	af
                           9198 ;demo.c:1375: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   304C 21r7Cs17           9199 	ld	hl,#_tripal + 5
   304F 4E                 9200 	ld	c,(hl)
   3050 11r7Bs17           9201 	ld	de,#_tripal + 4
   3053 1A                 9202 	ld	a,(de)
   3054 47                 9203 	ld	b,a
   3055 21r7As17           9204 	ld	hl,#_tripal + 3
   3058 5E                 9205 	ld	e,(hl)
   3059 79                 9206 	ld	a,c
   305A F5                 9207 	push	af
   305B 33                 9208 	inc	sp
   305C C5                 9209 	push	bc
   305D 33                 9210 	inc	sp
   305E 53                 9211 	ld	d,e
   305F 1E 0E              9212 	ld	e,#0x0E
   3061 D5                 9213 	push	de
   3062 CDr00s00           9214 	call	_msx2_palette
   3065 F1                 9215 	pop	af
   3066 F1                 9216 	pop	af
                           9217 ;demo.c:1376: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   3067 21r7Fs17           9218 	ld	hl,#_tripal + 8
   306A 4E                 9219 	ld	c,(hl)
   306B 11r7Es17           9220 	ld	de,#_tripal + 7
   306E 1A                 9221 	ld	a,(de)
   306F 47                 9222 	ld	b,a
   3070 21r7Ds17           9223 	ld	hl,#_tripal + 6
   3073 5E                 9224 	ld	e,(hl)
   3074 79                 9225 	ld	a,c
   3075 F5                 9226 	push	af
   3076 33                 9227 	inc	sp
   3077 C5                 9228 	push	bc
   3078 33                 9229 	inc	sp
   3079 53                 9230 	ld	d,e
   307A 1E 06              9231 	ld	e,#0x06
   307C D5                 9232 	push	de
   307D CDr00s00           9233 	call	_msx2_palette
   3080 F1                 9234 	pop	af
   3081 F1                 9235 	pop	af
   3082 C3rDEs30           9236 	jp	00163$
   3085                    9237 00162$:
                           9238 ;demo.c:1379: vdp_register(VDP_VOFFSET,0);
   3085 21 17 00           9239 	ld	hl,#0x0017
   3088 E5                 9240 	push	hl
   3089 CDr00s00           9241 	call	_vdp_register
   308C F1                 9242 	pop	af
                           9243 ;demo.c:1381: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   308D 21r79s17           9244 	ld	hl,#_tripal + 2
   3090 4E                 9245 	ld	c,(hl)
   3091 11r78s17           9246 	ld	de,#_tripal + 1
   3094 1A                 9247 	ld	a,(de)
   3095 47                 9248 	ld	b,a
   3096 21r77s17           9249 	ld	hl,#_tripal
   3099 5E                 9250 	ld	e,(hl)
   309A 79                 9251 	ld	a,c
   309B F5                 9252 	push	af
   309C 33                 9253 	inc	sp
   309D C5                 9254 	push	bc
   309E 33                 9255 	inc	sp
   309F 53                 9256 	ld	d,e
   30A0 1E 03              9257 	ld	e,#0x03
   30A2 D5                 9258 	push	de
   30A3 CDr00s00           9259 	call	_msx2_palette
   30A6 F1                 9260 	pop	af
   30A7 F1                 9261 	pop	af
                           9262 ;demo.c:1382: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   30A8 21r7Cs17           9263 	ld	hl,#_tripal + 5
   30AB 4E                 9264 	ld	c,(hl)
   30AC 11r7Bs17           9265 	ld	de,#_tripal + 4
   30AF 1A                 9266 	ld	a,(de)
   30B0 47                 9267 	ld	b,a
   30B1 21r7As17           9268 	ld	hl,#_tripal + 3
   30B4 5E                 9269 	ld	e,(hl)
   30B5 79                 9270 	ld	a,c
   30B6 F5                 9271 	push	af
   30B7 33                 9272 	inc	sp
   30B8 C5                 9273 	push	bc
   30B9 33                 9274 	inc	sp
   30BA 53                 9275 	ld	d,e
   30BB 1E 0E              9276 	ld	e,#0x0E
   30BD D5                 9277 	push	de
   30BE CDr00s00           9278 	call	_msx2_palette
   30C1 F1                 9279 	pop	af
   30C2 F1                 9280 	pop	af
                           9281 ;demo.c:1383: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   30C3 21r7Fs17           9282 	ld	hl,#_tripal + 8
   30C6 4E                 9283 	ld	c,(hl)
   30C7 11r7Es17           9284 	ld	de,#_tripal + 7
   30CA 1A                 9285 	ld	a,(de)
   30CB 47                 9286 	ld	b,a
   30CC 21r7Ds17           9287 	ld	hl,#_tripal + 6
   30CF 5E                 9288 	ld	e,(hl)
   30D0 79                 9289 	ld	a,c
   30D1 F5                 9290 	push	af
   30D2 33                 9291 	inc	sp
   30D3 C5                 9292 	push	bc
   30D4 33                 9293 	inc	sp
   30D5 53                 9294 	ld	d,e
   30D6 1E 06              9295 	ld	e,#0x06
   30D8 D5                 9296 	push	de
   30D9 CDr00s00           9297 	call	_msx2_palette
   30DC F1                 9298 	pop	af
   30DD F1                 9299 	pop	af
   30DE                    9300 00163$:
                           9301 ;demo.c:1387: if (tick > 28) tick = 0;
   30DE 3E 1C              9302 	ld	a,#0x1C
   30E0 FD 21r92s16        9303 	ld	iy,#_tick
   30E4 FD 96 00           9304 	sub	a,0 (iy)
   30E7 3E 00              9305 	ld	a,#0x00
   30E9 FD 21r92s16        9306 	ld	iy,#_tick
   30ED FD 9E 01           9307 	sbc	a,1 (iy)
   30F0 F2rFDs30           9308 	jp	P,00165$
   30F3 21r92s16           9309 	ld	hl,#_tick + 0
   30F6 36 00              9310 	ld	(hl), #0x00
   30F8 21r93s16           9311 	ld	hl,#_tick + 1
   30FB 36 00              9312 	ld	(hl), #0x00
   30FD                    9313 00165$:
                           9314 ;demo.c:1389: tripaltick++;
   30FD FD 21r80s17        9315 	ld	iy,#_tripaltick
   3101 FD 34 00           9316 	inc	0 (iy)
                           9317 ;demo.c:1390: if (tripaltick > 6) {
   3104 3E 06              9318 	ld	a,#0x06
   3106 FD 21r80s17        9319 	ld	iy,#_tripaltick
   310A FD 96 00           9320 	sub	a,0 (iy)
   310D D2r92s31           9321 	jp	NC,00178$
                           9322 ;demo.c:1391: tripaltick2++;
   3110 FD 21r81s17        9323 	ld	iy,#_tripaltick2
   3114 FD 34 00           9324 	inc	0 (iy)
                           9325 ;demo.c:1392: if (tripaltick2 > 6) tripaltick2 = 0;
   3117 3E 06              9326 	ld	a,#0x06
   3119 FD 21r81s17        9327 	ld	iy,#_tripaltick2
   311D FD 96 00           9328 	sub	a,0 (iy)
   3120 30 05              9329 	jr	NC,00167$
   3122 21r81s17           9330 	ld	hl,#_tripaltick2 + 0
   3125 36 00              9331 	ld	(hl), #0x00
   3127                    9332 00167$:
                           9333 ;demo.c:1394: r = tripal[0];
   3127 21r77s17           9334 	ld	hl,#_tripal
   312A 4E                 9335 	ld	c,(hl)
   312B DD 71 FD           9336 	ld	-3 (ix),c
                           9337 ;demo.c:1395: g = tripal[1];
   312E 11r78s17           9338 	ld	de,#_tripal + 1
   3131 1A                 9339 	ld	a,(de)
   3132 DD 77 FC           9340 	ld	-4 (ix),a
                           9341 ;demo.c:1396: b = tripal[2];
   3135 21r79s17           9342 	ld	hl,#_tripal + 2
   3138 5E                 9343 	ld	e,(hl)
   3139 DD 73 FB           9344 	ld	-5 (ix),e
                           9345 ;demo.c:1398: for (x = 0; x < 6; x++) {
   313C DD 36 FE 00        9346 	ld	-2 (ix),#0x00
   3140 DD 36 FF 00        9347 	ld	-1 (ix),#0x00
   3144                    9348 00174$:
   3144 DD 7E FE           9349 	ld	a,-2 (ix)
   3147 D6 06              9350 	sub	a,#0x06
   3149 DD 7E FF           9351 	ld	a,-1 (ix)
   314C DE 00              9352 	sbc	a,#0x00
   314E F2r78s31           9353 	jp	P,00177$
                           9354 ;demo.c:1399: tripal[x] = tripal[x+3];
   3151 3Er77              9355 	ld	a,#<_tripal
   3153 DD 86 FE           9356 	add	a,-2 (ix)
   3156 4F                 9357 	ld	c,a
   3157 3Es17              9358 	ld	a,#>_tripal
   3159 DD 8E FF           9359 	adc	a,-1 (ix)
   315C 47                 9360 	ld	b,a
   315D DD 5E FE           9361 	ld	e,-2 (ix)
   3160 1C                 9362 	inc	e
   3161 1C                 9363 	inc	e
   3162 1C                 9364 	inc	e
   3163 3Er77              9365 	ld	a,#<_tripal
   3165 83                 9366 	add	a,e
   3166 5F                 9367 	ld	e,a
   3167 3Es17              9368 	ld	a,#>_tripal
   3169 CE 00              9369 	adc	a,#0x00
   316B 57                 9370 	ld	d,a
   316C 1A                 9371 	ld	a,(de)
   316D 02                 9372 	ld	(bc),a
                           9373 ;demo.c:1398: for (x = 0; x < 6; x++) {
   316E DD 34 FE           9374 	inc	-2 (ix)
   3171 20 03              9375 	jr	NZ,00251$
   3173 DD 34 FF           9376 	inc	-1 (ix)
   3176                    9377 00251$:
   3176 18 CC              9378 	jr	00174$
   3178                    9379 00177$:
                           9380 ;demo.c:1402: tripal[6] = r;
   3178 01r7Ds17           9381 	ld	bc,#_tripal + 6
   317B DD 7E FD           9382 	ld	a,-3 (ix)
   317E 02                 9383 	ld	(bc),a
                           9384 ;demo.c:1403: tripal[7] = g;
   317F 01r7Es17           9385 	ld	bc,#_tripal + 7
   3182 DD 7E FC           9386 	ld	a,-4 (ix)
   3185 02                 9387 	ld	(bc),a
                           9388 ;demo.c:1404: tripal[8] = b;
   3186 01r7Fs17           9389 	ld	bc,#_tripal + 8
   3189 DD 7E FB           9390 	ld	a,-5 (ix)
   318C 02                 9391 	ld	(bc),a
                           9392 ;demo.c:1405: tripaltick = 0;
   318D 21r80s17           9393 	ld	hl,#_tripaltick + 0
   3190 36 00              9394 	ld	(hl), #0x00
   3192                    9395 00178$:
   3192 DD F9              9396 	ld	sp,ix
   3194 DD E1              9397 	pop	ix
   3196 C9                 9398 	ret
   3197                    9399 _tritiles_end::
                           9400 ;demo.c:1410: int abs (int n) {
                           9401 ;	---------------------------------
                           9402 ; Function abs
                           9403 ; ---------------------------------
   3197                    9404 _abs_start::
   3197                    9405 _abs:
   3197 DD E5              9406 	push	ix
   3199 DD 21 00 00        9407 	ld	ix,#0
   319D DD 39              9408 	add	ix,sp
   319F 21 FA FF           9409 	ld	hl,#-6
   31A2 39                 9410 	add	hl,sp
   31A3 F9                 9411 	ld	sp,hl
                           9412 ;demo.c:1411: const int ret[2] = { n, -n };
   31A4 21 02 00           9413 	ld	hl,#0x0002
   31A7 39                 9414 	add	hl,sp
   31A8 4D                 9415 	ld	c,l
   31A9 44                 9416 	ld	b,h
   31AA DD 7E 04           9417 	ld	a,4 (ix)
   31AD 77                 9418 	ld	(hl),a
   31AE 23                 9419 	inc	hl
   31AF DD 7E 05           9420 	ld	a,5 (ix)
   31B2 77                 9421 	ld	(hl),a
   31B3 21 02 00           9422 	ld	hl,#0x0002
   31B6 09                 9423 	add	hl,bc
   31B7 DD 75 FA           9424 	ld	-6 (ix),l
   31BA DD 74 FB           9425 	ld	-5 (ix),h
   31BD AF                 9426 	xor	a,a
   31BE DD 9E 04           9427 	sbc	a,4 (ix)
   31C1 5F                 9428 	ld	e,a
   31C2 3E 00              9429 	ld	a,#0x00
   31C4 DD 9E 05           9430 	sbc	a,5 (ix)
   31C7 57                 9431 	ld	d,a
   31C8 DD 6E FA           9432 	ld	l,-6 (ix)
   31CB DD 66 FB           9433 	ld	h,-5 (ix)
   31CE 73                 9434 	ld	(hl),e
   31CF 23                 9435 	inc	hl
   31D0 72                 9436 	ld	(hl),d
                           9437 ;demo.c:1412: return ret [n<0];
   31D1 DD 7E 05           9438 	ld	a,5 (ix)
   31D4 07                 9439 	rlca
   31D5 E6 01              9440 	and	a,#0x01
   31D7 5F                 9441 	ld	e,a
   31D8 CB 23              9442 	sla	e
   31DA 79                 9443 	ld	a,c
   31DB 83                 9444 	add	a,e
   31DC 6F                 9445 	ld	l,a
   31DD 78                 9446 	ld	a,b
   31DE CE 00              9447 	adc	a,#0x00
   31E0 67                 9448 	ld	h,a
   31E1 5E                 9449 	ld	e,(hl)
   31E2 23                 9450 	inc	hl
   31E3 4E                 9451 	ld	c,(hl)
   31E4 6B                 9452 	ld	l,e
   31E5 61                 9453 	ld	h,c
   31E6 DD F9              9454 	ld	sp,ix
   31E8 DD E1              9455 	pop	ix
   31EA C9                 9456 	ret
   31EB                    9457 _abs_end::
                           9458 ;demo.c:1418: void logoeffu() {
                           9459 ;	---------------------------------
                           9460 ; Function logoeffu
                           9461 ; ---------------------------------
   31EB                    9462 _logoeffu_start::
   31EB                    9463 _logoeffu:
   31EB DD E5              9464 	push	ix
   31ED DD 21 00 00        9465 	ld	ix,#0
   31F1 DD 39              9466 	add	ix,sp
   31F3 F5                 9467 	push	af
   31F4 F5                 9468 	push	af
                           9469 ;demo.c:1422: fadein();
   31F5 CDr27s0C           9470 	call	_fadein
                           9471 ;demo.c:1424: v = abs(sintabx[(vbicount) & 255]>>4);
   31F8 21r90s16           9472 	ld	hl,#_vbicount + 0
   31FB 4E                 9473 	ld	c,(hl)
   31FC 06 00              9474 	ld	b,#0x00
   31FE 21r2Cs00           9475 	ld	hl,#_sintabx
   3201 09                 9476 	add	hl,bc
   3202 7E                 9477 	ld	a,(hl)
   3203 4F                 9478 	ld	c,a
   3204 CB 39              9479 	srl	c
   3206 CB 39              9480 	srl	c
   3208 CB 39              9481 	srl	c
   320A CB 39              9482 	srl	c
   320C 06 00              9483 	ld	b,#0x00
   320E C5                 9484 	push	bc
   320F CDr97s31           9485 	call	_abs
   3212 F1                 9486 	pop	af
   3213 44                 9487 	ld	b,h
   3214 DD 75 FC           9488 	ld	-4 (ix),l
   3217 DD 70 FD           9489 	ld	-3 (ix),b
                           9490 ;demo.c:1426: for (y = 0; y < 116; y+=2) {
   321A DD 36 FE 00        9491 	ld	-2 (ix),#0x00
   321E DD 36 FF 00        9492 	ld	-1 (ix),#0x00
   3222                    9493 00108$:
   3222 DD 7E FE           9494 	ld	a,-2 (ix)
   3225 D6 74              9495 	sub	a,#0x74
   3227 DD 7E FF           9496 	ld	a,-1 (ix)
   322A DE 00              9497 	sbc	a,#0x00
   322C F2rF7s32           9498 	jp	P,00111$
                           9499 ;demo.c:1427: cmd.size_x = 108;
   322F 11r9Cs16           9500 	ld	de,#_cmd + 8
   3232 EB                 9501 	ex	de,hl
   3233 36 6C              9502 	ld	(hl),#0x6C
   3235 23                 9503 	inc	hl
   3236 36 00              9504 	ld	(hl),#0x00
                           9505 ;demo.c:1428: cmd.size_y = 2;
   3238 11r9Es16           9506 	ld	de,#_cmd + 10
   323B EB                 9507 	ex	de,hl
   323C 36 02              9508 	ld	(hl),#0x02
   323E 23                 9509 	inc	hl
   323F 36 00              9510 	ld	(hl),#0x00
                           9511 ;demo.c:1429: cmd.data = 0;
   3241 11rA0s16           9512 	ld	de,#_cmd + 12
   3244 3E 00              9513 	ld	a,#0x00
   3246 12                 9514 	ld	(de),a
                           9515 ;demo.c:1430: cmd.argument = 0x00;
   3247 11rA1s16           9516 	ld	de,#_cmd + 13
   324A 3E 00              9517 	ld	a,#0x00
   324C 12                 9518 	ld	(de),a
                           9519 ;demo.c:1431: cmd.command = 0xd0; 
   324D 11rA2s16           9520 	ld	de,#_cmd + 14
   3250 3E D0              9521 	ld	a,#0xD0
   3252 12                 9522 	ld	(de),a
                           9523 ;demo.c:1432: cmd.source_x = 74;
   3253 21r94s16           9524 	ld	hl,#_cmd
   3256 36 4A              9525 	ld	(hl),#0x4A
   3258 23                 9526 	inc	hl
   3259 36 00              9527 	ld	(hl),#0x00
                           9528 ;demo.c:1433: cmd.source_y = 256+y;
   325B 11r96s16           9529 	ld	de,#_cmd + 2
   325E DD 7E FE           9530 	ld	a,-2 (ix)
   3261 C6 00              9531 	add	a,#0x00
   3263 4F                 9532 	ld	c,a
   3264 DD 7E FF           9533 	ld	a,-1 (ix)
   3267 CE 01              9534 	adc	a,#0x01
   3269 47                 9535 	ld	b,a
   326A 6B                 9536 	ld	l,e
   326B 62                 9537 	ld	h,d
   326C 71                 9538 	ld	(hl),c
   326D 23                 9539 	inc	hl
   326E 70                 9540 	ld	(hl),b
                           9541 ;demo.c:1434: v+=y;
   326F DD 7E FC           9542 	ld	a,-4 (ix)
   3272 DD 86 FE           9543 	add	a,-2 (ix)
   3275 DD 77 FC           9544 	ld	-4 (ix),a
   3278 DD 7E FD           9545 	ld	a,-3 (ix)
   327B DD 8E FF           9546 	adc	a,-1 (ix)
   327E DD 77 FD           9547 	ld	-3 (ix),a
                           9548 ;demo.c:1435: v -= powa;
   3281 21r86s17           9549 	ld	hl,#_powa
   3284 DD 7E FC           9550 	ld	a,-4 (ix)
   3287 96                 9551 	sub	a,(hl)
   3288 DD 77 FC           9552 	ld	-4 (ix),a
   328B DD 7E FD           9553 	ld	a,-3 (ix)
   328E 23                 9554 	inc	hl
   328F 9E                 9555 	sbc	a,(hl)
                           9556 ;demo.c:1436: if (v<0) v = 0;
   3290 DD 77 FD           9557 	ld	-3 (ix),a
   3293 CB 7F              9558 	bit	7,a
   3295 28 08              9559 	jr	Z,00102$
   3297 DD 36 FC 00        9560 	ld	-4 (ix),#0x00
   329B DD 36 FD 00        9561 	ld	-3 (ix),#0x00
   329F                    9562 00102$:
                           9563 ;demo.c:1437: if (v>150) v = 150;
   329F 3E 96              9564 	ld	a,#0x96
   32A1 DD 96 FC           9565 	sub	a,-4 (ix)
   32A4 3E 00              9566 	ld	a,#0x00
   32A6 DD 9E FD           9567 	sbc	a,-3 (ix)
   32A9 F2rB4s32           9568 	jp	P,00104$
   32AC DD 36 FC 96        9569 	ld	-4 (ix),#0x96
   32B0 DD 36 FD 00        9570 	ld	-3 (ix),#0x00
   32B4                    9571 00104$:
                           9572 ;demo.c:1438: cmd.dest_x = 74+v;
   32B4 01r98s16           9573 	ld	bc,#_cmd + 4
   32B7 DD 7E FC           9574 	ld	a,-4 (ix)
   32BA C6 4A              9575 	add	a,#0x4A
   32BC 5F                 9576 	ld	e,a
   32BD DD 7E FD           9577 	ld	a,-3 (ix)
   32C0 CE 00              9578 	adc	a,#0x00
   32C2 57                 9579 	ld	d,a
   32C3 69                 9580 	ld	l,c
   32C4 60                 9581 	ld	h,b
   32C5 73                 9582 	ld	(hl),e
   32C6 23                 9583 	inc	hl
   32C7 72                 9584 	ld	(hl),d
                           9585 ;demo.c:1439: cmd.dest_y = 50+y+1;
   32C8 01r9As16           9586 	ld	bc,#_cmd + 6
   32CB DD 7E FE           9587 	ld	a,-2 (ix)
   32CE C6 33              9588 	add	a,#0x33
   32D0 5F                 9589 	ld	e,a
   32D1 DD 7E FF           9590 	ld	a,-1 (ix)
   32D4 CE 00              9591 	adc	a,#0x00
   32D6 57                 9592 	ld	d,a
   32D7 69                 9593 	ld	l,c
   32D8 60                 9594 	ld	h,b
   32D9 73                 9595 	ld	(hl),e
   32DA 23                 9596 	inc	hl
   32DB 72                 9597 	ld	(hl),d
                           9598 ;demo.c:1440: vdp_copier(&cmd);
   32DC 21r94s16           9599 	ld	hl,#_cmd
   32DF E5                 9600 	push	hl
   32E0 CDr00s00           9601 	call	_vdp_copier
   32E3 F1                 9602 	pop	af
                           9603 ;demo.c:1426: for (y = 0; y < 116; y+=2) {
   32E4 DD 7E FE           9604 	ld	a,-2 (ix)
   32E7 C6 02              9605 	add	a,#0x02
   32E9 DD 77 FE           9606 	ld	-2 (ix),a
   32EC DD 7E FF           9607 	ld	a,-1 (ix)
   32EF CE 00              9608 	adc	a,#0x00
   32F1 DD 77 FF           9609 	ld	-1 (ix),a
   32F4 C3r22s32           9610 	jp	00108$
   32F7                    9611 00111$:
                           9612 ;demo.c:1443: if (vbicount > scenetimings[2]+84 && onceclear > 182) {
   32F7 21rBBs16           9613 	ld	hl, #_scenetimings + 4
   32FA 4E                 9614 	ld	c,(hl)
   32FB 23                 9615 	inc	hl
   32FC 46                 9616 	ld	b,(hl)
   32FD 21 54 00           9617 	ld	hl,#0x0054
   3300 09                 9618 	add	hl,bc
   3301 4D                 9619 	ld	c,l
   3302 44                 9620 	ld	b,h
   3303 79                 9621 	ld	a,c
   3304 FD 21r90s16        9622 	ld	iy,#_vbicount
   3308 FD 96 00           9623 	sub	a,0 (iy)
   330B 78                 9624 	ld	a,b
   330C FD 21r90s16        9625 	ld	iy,#_vbicount
   3310 FD 9E 01           9626 	sbc	a,1 (iy)
   3313 F2r75s33           9627 	jp	P,00106$
   3316 3E B6              9628 	ld	a,#0xB6
   3318 FD 21r88s17        9629 	ld	iy,#_onceclear
   331C FD 96 00           9630 	sub	a,0 (iy)
   331F D2r75s33           9631 	jp	NC,00106$
                           9632 ;demo.c:1444: cmd.size_x = 4;
   3322 21r9Cs16           9633 	ld	hl, #_cmd + 8
   3325 36 04              9634 	ld	(hl),#0x04
   3327 23                 9635 	inc	hl
   3328 36 00              9636 	ld	(hl),#0x00
                           9637 ;demo.c:1445: cmd.size_y = 116;
   332A 21r9Es16           9638 	ld	hl, #_cmd + 10
   332D 36 74              9639 	ld	(hl),#0x74
   332F 23                 9640 	inc	hl
   3330 36 00              9641 	ld	(hl),#0x00
                           9642 ;demo.c:1446: cmd.data = 0;
                           9643 ;demo.c:1447: cmd.argument = 0x00;
   3332 3E 00              9644 	ld	a,#0x00
   3334 32rA0s16           9645 	ld	(#_cmd + 12),a
   3337 32rA1s16           9646 	ld	(#_cmd + 13),a
                           9647 ;demo.c:1448: cmd.command = 0xd0; 
   333A 01rA2s16           9648 	ld	bc,#_cmd + 14
   333D 3E D0              9649 	ld	a,#0xD0
   333F 02                 9650 	ld	(bc),a
                           9651 ;demo.c:1449: cmd.source_x = 20;
   3340 21r94s16           9652 	ld	hl,#_cmd
   3343 36 14              9653 	ld	(hl),#0x14
   3345 23                 9654 	inc	hl
   3346 36 00              9655 	ld	(hl),#0x00
                           9656 ;demo.c:1450: cmd.source_y = 0;
   3348 21r96s16           9657 	ld	hl, #_cmd + 2
   334B 36 00              9658 	ld	(hl),#0x00
   334D 23                 9659 	inc	hl
   334E 36 00              9660 	ld	(hl),#0x00
                           9661 ;demo.c:1451: cmd.dest_x = onceclear;
   3350 01r98s16           9662 	ld	bc,#_cmd + 4
   3353 21r88s17           9663 	ld	hl,#_onceclear + 0
   3356 5E                 9664 	ld	e,(hl)
   3357 16 00              9665 	ld	d,#0x00
   3359 69                 9666 	ld	l,c
   335A 60                 9667 	ld	h,b
   335B 73                 9668 	ld	(hl),e
   335C 23                 9669 	inc	hl
   335D 72                 9670 	ld	(hl),d
                           9671 ;demo.c:1452: cmd.dest_y = 68;
   335E 21r9As16           9672 	ld	hl, #_cmd + 6
   3361 36 44              9673 	ld	(hl),#0x44
   3363 23                 9674 	inc	hl
   3364 36 00              9675 	ld	(hl),#0x00
                           9676 ;demo.c:1453: vdp_copier(&cmd);
   3366 21r94s16           9677 	ld	hl,#_cmd
   3369 E5                 9678 	push	hl
   336A CDr00s00           9679 	call	_vdp_copier
   336D F1                 9680 	pop	af
                           9681 ;demo.c:1454: onceclear-=4;
   336E 21r88s17           9682 	ld	hl,#_onceclear
   3371 7E                 9683 	ld	a,(hl)
   3372 C6 FC              9684 	add	a,#0xFC
   3374 77                 9685 	ld	(hl),a
   3375                    9686 00106$:
                           9687 ;demo.c:1458: powa+=2;
   3375 21r86s17           9688 	ld	hl,#_powa
   3378 7E                 9689 	ld	a,(hl)
   3379 C6 02              9690 	add	a,#0x02
   337B 23                 9691 	inc	hl
   337C 2B                 9692 	dec	hl
   337D C5                 9693 	push	bc
   337E 4F                 9694 	ld	c, a
   337F 23                 9695 	inc	hl
   3380 7E                 9696 	ld	a, (hl)
   3381 47                 9697 	ld	b, a
   3382 79                 9698 	ld	a, c
   3383 2B                 9699 	dec	hl
   3384 77                 9700 	ld	(hl), a
   3385 78                 9701 	ld	a, b
   3386 C1                 9702 	pop	bc
   3387 CE 00              9703 	adc	a,#0x00
   3389 23                 9704 	inc	hl
   338A 77                 9705 	ld	(hl),a
                           9706 ;demo.c:1459: powatick = 0;
   338B 21r84s17           9707 	ld	hl,#_powatick + 0
   338E 36 00              9708 	ld	(hl), #0x00
   3390 21r85s17           9709 	ld	hl,#_powatick + 1
   3393 36 00              9710 	ld	(hl), #0x00
   3395 DD F9              9711 	ld	sp,ix
   3397 DD E1              9712 	pop	ix
   3399 C9                 9713 	ret
   339A                    9714 _logoeffu_end::
                           9715 ;demo.c:1468: void points() {
                           9716 ;	---------------------------------
                           9717 ; Function points
                           9718 ; ---------------------------------
   339A                    9719 _points_start::
   339A                    9720 _points:
   339A DD E5              9721 	push	ix
   339C DD 21 00 00        9722 	ld	ix,#0
   33A0 DD 39              9723 	add	ix,sp
   33A2 F5                 9724 	push	af
   33A3 3B                 9725 	dec	sp
                           9726 ;demo.c:1472: if (initpoints == 0) {
   33A4 AF                 9727 	xor	a,a
   33A5 FD 21r89s17        9728 	ld	iy,#_initpoints
   33A9 FD B6 00           9729 	or	a,0 (iy)
   33AC C2rBDs34           9730 	jp	NZ,00102$
                           9731 ;demo.c:1473: cmd.size_x = 256;
   33AF 21r9Cs16           9732 	ld	hl, #_cmd + 8
   33B2 36 00              9733 	ld	(hl),#0x00
   33B4 23                 9734 	inc	hl
   33B5 36 01              9735 	ld	(hl),#0x01
                           9736 ;demo.c:1474: cmd.size_y = 4;
   33B7 21r9Es16           9737 	ld	hl, #_cmd + 10
   33BA 36 04              9738 	ld	(hl),#0x04
   33BC 23                 9739 	inc	hl
   33BD 36 00              9740 	ld	(hl),#0x00
                           9741 ;demo.c:1475: cmd.data = 0;
                           9742 ;demo.c:1476: cmd.argument = 0x00; // from 70xY to left
   33BF 3E 00              9743 	ld	a,#0x00
   33C1 32rA0s16           9744 	ld	(#_cmd + 12),a
   33C4 32rA1s16           9745 	ld	(#_cmd + 13),a
                           9746 ;demo.c:1477: cmd.command = 0xd0; // vram to vram, y only
   33C7 3E D0              9747 	ld	a,#0xD0
   33C9 32rA2s16           9748 	ld	(#_cmd + 14),a
                           9749 ;demo.c:1478: cmd.source_x = 0;
   33CC 21r94s16           9750 	ld	hl,#_cmd
   33CF 36 00              9751 	ld	(hl),#0x00
   33D1 23                 9752 	inc	hl
   33D2 36 00              9753 	ld	(hl),#0x00
                           9754 ;demo.c:1479: cmd.dest_x = 0;
   33D4 01r98s16           9755 	ld	bc,#_cmd + 4
   33D7 69                 9756 	ld	l,c
   33D8 60                 9757 	ld	h,b
   33D9 36 00              9758 	ld	(hl),#0x00
   33DB 23                 9759 	inc	hl
   33DC 36 00              9760 	ld	(hl),#0x00
                           9761 ;demo.c:1481: for (y = 0; y < 212; y+=4) {
   33DE DD 36 FF 00        9762 	ld	-1 (ix),#0x00
   33E2                    9763 00113$:
   33E2 DD 7E FF           9764 	ld	a,-1 (ix)
   33E5 D6 D4              9765 	sub	a,#0xD4
   33E7 30 2C              9766 	jr	NC,00116$
                           9767 ;demo.c:1482: waitVB();
   33E9 76                 9768 		halt 
                           9769 ;demo.c:1483: cmd.source_y = 193;
   33EA 11r96s16           9770 	ld	de,#_cmd + 2
   33ED EB                 9771 	ex	de,hl
   33EE 36 C1              9772 	ld	(hl),#0xC1
   33F0 23                 9773 	inc	hl
   33F1 36 00              9774 	ld	(hl),#0x00
                           9775 ;demo.c:1484: cmd.dest_y = y;
   33F3 11r9As16           9776 	ld	de,#_cmd + 6
   33F6 DD 4E FF           9777 	ld	c,-1 (ix)
   33F9 06 00              9778 	ld	b,#0x00
   33FB EB                 9779 	ex	de,hl
   33FC 71                 9780 	ld	(hl),c
   33FD 23                 9781 	inc	hl
   33FE 70                 9782 	ld	(hl),b
                           9783 ;demo.c:1485: vdp_copier(&cmd);
   33FF 21r94s16           9784 	ld	hl,#_cmd
   3402 E5                 9785 	push	hl
   3403 CDr00s00           9786 	call	_vdp_copier
   3406 F1                 9787 	pop	af
                           9788 ;demo.c:1481: for (y = 0; y < 212; y+=4) {
   3407 DD 34 FF           9789 	inc	-1 (ix)
   340A DD 34 FF           9790 	inc	-1 (ix)
   340D DD 34 FF           9791 	inc	-1 (ix)
   3410 DD 34 FF           9792 	inc	-1 (ix)
   3413 18 CD              9793 	jr	00113$
   3415                    9794 00116$:
                           9795 ;demo.c:1489: vdp_load_palette(bulbs_palette);
   3415 21rF0s15           9796 	ld	hl,#_bulbs_palette
   3418 E5                 9797 	push	hl
   3419 CDr00s00           9798 	call	_vdp_load_palette
   341C F1                 9799 	pop	af
                           9800 ;demo.c:1491: for (x = 0; x < 256; x+=1) {
   341D DD 36 FD 00        9801 	ld	-3 (ix),#0x00
   3421 DD 36 FE 00        9802 	ld	-2 (ix),#0x00
   3425                    9803 00117$:
   3425 DD 7E FD           9804 	ld	a,-3 (ix)
   3428 D6 00              9805 	sub	a,#0x00
   342A DD 7E FE           9806 	ld	a,-2 (ix)
   342D DE 01              9807 	sbc	a,#0x01
   342F F2rAEs34           9808 	jp	P,00120$
                           9809 ;demo.c:1493: cmd.data = 1+((pointframe>>2) & 0xe);
   3432 11rA0s16           9810 	ld	de,#_cmd + 12
   3435 21r8As17           9811 	ld	hl,#_pointframe + 0
   3438 4E                 9812 	ld	c,(hl)
   3439 21r8Bs17           9813 	ld	hl,#_pointframe + 1
   343C 46                 9814 	ld	b,(hl)
   343D CB 28              9815 	sra	b
   343F CB 19              9816 	rr	c
   3441 CB 28              9817 	sra	b
   3443 CB 19              9818 	rr	c
   3445 79                 9819 	ld	a,c
   3446 E6 0E              9820 	and	a,#0x0E
   3448 3C                 9821 	inc	a
   3449 12                 9822 	ld	(de),a
                           9823 ;demo.c:1494: cmd.dest_x = x;
   344A 21r98s16           9824 	ld	hl, #_cmd + 4
   344D DD 7E FD           9825 	ld	a,-3 (ix)
   3450 77                 9826 	ld	(hl),a
   3451 23                 9827 	inc	hl
   3452 DD 7E FE           9828 	ld	a,-2 (ix)
   3455 77                 9829 	ld	(hl),a
                           9830 ;demo.c:1495: cmd.dest_y = y;
   3456 21r9As16           9831 	ld	hl, #_cmd + 6
   3459 36 1D              9832 	ld	(hl),#0x1D
   345B 23                 9833 	inc	hl
   345C 36 00              9834 	ld	(hl),#0x00
                           9835 ;demo.c:1496: cmd.command = 0x50;
   345E 3E 50              9836 	ld	a,#0x50
   3460 32rA2s16           9837 	ld	(#_cmd + 14),a
                           9838 ;demo.c:1497: vdp_copier(&cmd);
   3463 21r94s16           9839 	ld	hl,#_cmd
   3466 E5                 9840 	push	hl
   3467 CDr00s00           9841 	call	_vdp_copier
   346A F1                 9842 	pop	af
                           9843 ;demo.c:1500: cmd.data = 1+((pointframe>>2) & 0xe);
   346B 01rA0s16           9844 	ld	bc,#_cmd + 12
   346E 21r8As17           9845 	ld	hl,#_pointframe + 0
   3471 5E                 9846 	ld	e,(hl)
   3472 21r8Bs17           9847 	ld	hl,#_pointframe + 1
   3475 56                 9848 	ld	d,(hl)
   3476 CB 2A              9849 	sra	d
   3478 CB 1B              9850 	rr	e
   347A CB 2A              9851 	sra	d
   347C CB 1B              9852 	rr	e
   347E 7B                 9853 	ld	a,e
   347F E6 0E              9854 	and	a,#0x0E
   3481 3C                 9855 	inc	a
   3482 02                 9856 	ld	(bc),a
                           9857 ;demo.c:1501: cmd.dest_y = y;
   3483 21r9As16           9858 	ld	hl, #_cmd + 6
   3486 36 A2              9859 	ld	(hl),#0xA2
   3488 23                 9860 	inc	hl
   3489 36 00              9861 	ld	(hl),#0x00
                           9862 ;demo.c:1502: vdp_copier(&cmd);
   348B 21r94s16           9863 	ld	hl,#_cmd
   348E E5                 9864 	push	hl
   348F CDr00s00           9865 	call	_vdp_copier
   3492 F1                 9866 	pop	af
                           9867 ;demo.c:1504: pointframe+=1;
   3493 FD 21r8As17        9868 	ld	iy,#_pointframe
   3497 FD 34 00           9869 	inc	0 (iy)
   349A 20 07              9870 	jr	NZ,00144$
   349C FD 21r8As17        9871 	ld	iy,#_pointframe
   34A0 FD 34 01           9872 	inc	1 (iy)
   34A3                    9873 00144$:
                           9874 ;demo.c:1491: for (x = 0; x < 256; x+=1) {
   34A3 DD 34 FD           9875 	inc	-3 (ix)
   34A6 20 03              9876 	jr	NZ,00145$
   34A8 DD 34 FE           9877 	inc	-2 (ix)
   34AB                    9878 00145$:
   34AB C3r25s34           9879 	jp	00117$
   34AE                    9880 00120$:
                           9881 ;demo.c:1507: initpoints = 1;
   34AE 21r89s17           9882 	ld	hl,#_initpoints + 0
   34B1 36 01              9883 	ld	(hl), #0x01
                           9884 ;demo.c:1508: ltrpointer = 0;
   34B3 21r1Cs17           9885 	ld	hl,#_ltrpointer + 0
   34B6 36 00              9886 	ld	(hl), #0x00
   34B8 21r1Ds17           9887 	ld	hl,#_ltrpointer + 1
   34BB 36 00              9888 	ld	(hl), #0x00
   34BD                    9889 00102$:
                           9890 ;demo.c:1511: cmd.argument = 0x0;
   34BD 3E 00              9891 	ld	a,#0x00
   34BF 32rA1s16           9892 	ld	(#_cmd + 13),a
                           9893 ;demo.c:1513: cmd.data = 1+((pointframe>>2) & 0xe);
   34C2 01rA0s16           9894 	ld	bc,#_cmd + 12
   34C5 21r8As17           9895 	ld	hl,#_pointframe + 0
   34C8 5E                 9896 	ld	e,(hl)
   34C9 21r8Bs17           9897 	ld	hl,#_pointframe + 1
   34CC 56                 9898 	ld	d,(hl)
   34CD CB 2A              9899 	sra	d
   34CF CB 1B              9900 	rr	e
   34D1 CB 2A              9901 	sra	d
   34D3 CB 1B              9902 	rr	e
   34D5 7B                 9903 	ld	a,e
   34D6 E6 0E              9904 	and	a,#0x0E
   34D8 3C                 9905 	inc	a
   34D9 02                 9906 	ld	(bc),a
                           9907 ;demo.c:1515: for (x = 30; x < 162; x+=1) {
   34DA DD 36 FD 1E        9908 	ld	-3 (ix),#0x1E
   34DE DD 36 FE 00        9909 	ld	-2 (ix),#0x00
   34E2                    9910 00121$:
   34E2 DD 7E FD           9911 	ld	a,-3 (ix)
   34E5 D6 A2              9912 	sub	a,#0xA2
   34E7 DD 7E FE           9913 	ld	a,-2 (ix)
   34EA DE 00              9914 	sbc	a,#0x00
   34EC F2r35s35           9915 	jp	P,00124$
                           9916 ;demo.c:1516: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   34EF 21r8As17           9917 	ld	hl,#_pointframe
   34F2 DD 7E FD           9918 	ld	a,-3 (ix)
   34F5 86                 9919 	add	a,(hl)
   34F6 5F                 9920 	ld	e,a
   34F7 DD 7E FE           9921 	ld	a,-2 (ix)
   34FA 23                 9922 	inc	hl
   34FB 8E                 9923 	adc	a,(hl)
   34FC 16 00              9924 	ld	d,#0x00
   34FE 21r2Cs00           9925 	ld	hl,#_sintabx
   3501 19                 9926 	add	hl,de
   3502 7E                 9927 	ld	a,(hl)
   3503 CB 3F              9928 	srl	a
   3505 C6 40              9929 	add	a,#0x40
   3507 4F                 9930 	ld	c,a
                           9931 ;demo.c:1517: cmd.dest_x = y;
   3508 11r98s16           9932 	ld	de,#_cmd + 4
   350B 06 00              9933 	ld	b,#0x00
   350D 6B                 9934 	ld	l,e
   350E 62                 9935 	ld	h,d
   350F 71                 9936 	ld	(hl),c
   3510 23                 9937 	inc	hl
   3511 70                 9938 	ld	(hl),b
                           9939 ;demo.c:1518: cmd.dest_y = x;
   3512 21r9As16           9940 	ld	hl, #_cmd + 6
   3515 DD 7E FD           9941 	ld	a,-3 (ix)
   3518 77                 9942 	ld	(hl),a
   3519 23                 9943 	inc	hl
   351A DD 7E FE           9944 	ld	a,-2 (ix)
   351D 77                 9945 	ld	(hl),a
                           9946 ;demo.c:1519: cmd.command = 0x53;
   351E 3E 53              9947 	ld	a,#0x53
   3520 32rA2s16           9948 	ld	(#_cmd + 14),a
                           9949 ;demo.c:1520: vdp_copier(&cmd);
   3523 21r94s16           9950 	ld	hl,#_cmd
   3526 E5                 9951 	push	hl
   3527 CDr00s00           9952 	call	_vdp_copier
   352A F1                 9953 	pop	af
                           9954 ;demo.c:1515: for (x = 30; x < 162; x+=1) {
   352B DD 34 FD           9955 	inc	-3 (ix)
   352E 20 03              9956 	jr	NZ,00147$
   3530 DD 34 FE           9957 	inc	-2 (ix)
   3533                    9958 00147$:
   3533 18 AD              9959 	jr	00121$
   3535                    9960 00124$:
                           9961 ;demo.c:1522: pointframe+=2;
   3535 21r8As17           9962 	ld	hl,#_pointframe
   3538 7E                 9963 	ld	a,(hl)
   3539 C6 02              9964 	add	a,#0x02
   353B 23                 9965 	inc	hl
   353C 2B                 9966 	dec	hl
   353D C5                 9967 	push	bc
   353E 4F                 9968 	ld	c, a
   353F 23                 9969 	inc	hl
   3540 7E                 9970 	ld	a, (hl)
   3541 47                 9971 	ld	b, a
   3542 79                 9972 	ld	a, c
   3543 2B                 9973 	dec	hl
   3544 77                 9974 	ld	(hl), a
   3545 78                 9975 	ld	a, b
   3546 C1                 9976 	pop	bc
   3547 CE 00              9977 	adc	a,#0x00
   3549 23                 9978 	inc	hl
   354A 77                 9979 	ld	(hl),a
                           9980 ;demo.c:1524: if (greetindex == 0) {
   354B 3Ar8Cs17           9981 	ld	a,(#_greetindex+0)
   354E 21r8Ds17           9982 	ld	hl,#_greetindex + 1
   3551 B6                 9983 	or	a,(hl)
   3552 20 17              9984 	jr	NZ,00104$
                           9985 ;demo.c:1525: slowend = 27;
   3554 21r1Es17           9986 	ld	hl,#_slowend + 0
   3557 36 1B              9987 	ld	(hl), #0x1B
   3559 21r1Fs17           9988 	ld	hl,#_slowend + 1
   355C 36 00              9989 	ld	(hl), #0x00
                           9990 ;demo.c:1526: drawstrslow("GREETINGS TO VARIOUS GROUPS",10,20);
   355E 21 0A 14           9991 	ld	hl,#0x140A
   3561 E5                 9992 	push	hl
   3562 21r17s36           9993 	ld	hl,#__str_15
   3565 E5                 9994 	push	hl
   3566 CDrC9s15           9995 	call	_drawstrslow
   3569 F1                 9996 	pop	af
   356A F1                 9997 	pop	af
   356B                    9998 00104$:
                           9999 ;demo.c:1528: if (greetindex == 1) {
   356B 3Ar8Cs17          10000 	ld	a,(#_greetindex+0)
   356E D6 01             10001 	sub	a,#0x01
   3570 20 06             10002 	jr	NZ,00148$
   3572 3Ar8Ds17          10003 	ld	a,(#_greetindex+1)
   3575 B7                10004 	or	a,a
   3576 28 02             10005 	jr	Z,00149$
   3578                   10006 00148$:
   3578 18 17             10007 	jr	00106$
   357A                   10008 00149$:
                          10009 ;demo.c:1529: slowend = 33;
   357A 21r1Es17          10010 	ld	hl,#_slowend + 0
   357D 36 21             10011 	ld	(hl), #0x21
   357F 21r1Fs17          10012 	ld	hl,#_slowend + 1
   3582 36 00             10013 	ld	(hl), #0x00
                          10014 ;demo.c:1530: drawstrslow("Trilobit  Prismbeings  Ivory Labs",10,164);
   3584 21 0A A4          10015 	ld	hl,#0xA40A
   3587 E5                10016 	push	hl
   3588 21r33s36          10017 	ld	hl,#__str_16
   358B E5                10018 	push	hl
   358C CDrC9s15          10019 	call	_drawstrslow
   358F F1                10020 	pop	af
   3590 F1                10021 	pop	af
   3591                   10022 00106$:
                          10023 ;demo.c:1532: if (greetindex == 2) {
   3591 3Ar8Cs17          10024 	ld	a,(#_greetindex+0)
   3594 D6 02             10025 	sub	a,#0x02
   3596 20 06             10026 	jr	NZ,00150$
   3598 3Ar8Ds17          10027 	ld	a,(#_greetindex+1)
   359B B7                10028 	or	a,a
   359C 28 02             10029 	jr	Z,00151$
   359E                   10030 00150$:
   359E 18 17             10031 	jr	00108$
   35A0                   10032 00151$:
                          10033 ;demo.c:1533: slowend = 29;
   35A0 21r1Es17          10034 	ld	hl,#_slowend + 0
   35A3 36 1D             10035 	ld	(hl), #0x1D
   35A5 21r1Fs17          10036 	ld	hl,#_slowend + 1
   35A8 36 00             10037 	ld	(hl), #0x00
                          10038 ;demo.c:1534: drawstrslow("PWP  Dekadence  Paraguay  ISO",18,174);
   35AA 21 12 AE          10039 	ld	hl,#0xAE12
   35AD E5                10040 	push	hl
   35AE 21r55s36          10041 	ld	hl,#__str_17
   35B1 E5                10042 	push	hl
   35B2 CDrC9s15          10043 	call	_drawstrslow
   35B5 F1                10044 	pop	af
   35B6 F1                10045 	pop	af
   35B7                   10046 00108$:
                          10047 ;demo.c:1536: if (greetindex == 3) {
   35B7 3Ar8Cs17          10048 	ld	a,(#_greetindex+0)
   35BA D6 03             10049 	sub	a,#0x03
   35BC 20 06             10050 	jr	NZ,00152$
   35BE 3Ar8Ds17          10051 	ld	a,(#_greetindex+1)
   35C1 B7                10052 	or	a,a
   35C2 28 02             10053 	jr	Z,00153$
   35C4                   10054 00152$:
   35C4 18 17             10055 	jr	00110$
   35C6                   10056 00153$:
                          10057 ;demo.c:1537: slowend = 24;
   35C6 21r1Es17          10058 	ld	hl,#_slowend + 0
   35C9 36 18             10059 	ld	(hl), #0x18
   35CB 21r1Fs17          10060 	ld	hl,#_slowend + 1
   35CE 36 00             10061 	ld	(hl), #0x00
                          10062 ;demo.c:1538: drawstrslow("Cartoon Horse Demo Force",20,184);
   35D0 21 14 B8          10063 	ld	hl,#0xB814
   35D3 E5                10064 	push	hl
   35D4 21r73s36          10065 	ld	hl,#__str_18
   35D7 E5                10066 	push	hl
   35D8 CDrC9s15          10067 	call	_drawstrslow
   35DB F1                10068 	pop	af
   35DC F1                10069 	pop	af
   35DD                   10070 00110$:
                          10071 ;demo.c:1540: if (ltrpointer >= slowend) { greetindex++; ltrpointer = 0; }
   35DD 21r1Es17          10072 	ld	hl,#_slowend
   35E0 3Ar1Cs17          10073 	ld	a,(#_ltrpointer+0)
   35E3 96                10074 	sub	a,(hl)
   35E4 3Ar1Ds17          10075 	ld	a,(#_ltrpointer+1)
   35E7 23                10076 	inc	hl
   35E8 9E                10077 	sbc	a,(hl)
   35E9 FAr06s36          10078 	jp	M,00112$
   35EC FD 21r8Cs17       10079 	ld	iy,#_greetindex
   35F0 FD 34 00          10080 	inc	0 (iy)
   35F3 20 07             10081 	jr	NZ,00154$
   35F5 FD 21r8Cs17       10082 	ld	iy,#_greetindex
   35F9 FD 34 01          10083 	inc	1 (iy)
   35FC                   10084 00154$:
   35FC 21r1Cs17          10085 	ld	hl,#_ltrpointer + 0
   35FF 36 00             10086 	ld	(hl), #0x00
   3601 21r1Ds17          10087 	ld	hl,#_ltrpointer + 1
   3604 36 00             10088 	ld	(hl), #0x00
   3606                   10089 00112$:
                          10090 ;demo.c:1542: msx2_palette(4,0,0,0);
   3606 21 00 00          10091 	ld	hl,#0x0000
   3609 E5                10092 	push	hl
   360A 2E 04             10093 	ld	l, #0x04
   360C E5                10094 	push	hl
   360D CDr00s00          10095 	call	_msx2_palette
   3610 F1                10096 	pop	af
   3611 F1                10097 	pop	af
   3612 DD F9             10098 	ld	sp,ix
   3614 DD E1             10099 	pop	ix
   3616 C9                10100 	ret
   3617                   10101 _points_end::
   3617                   10102 __str_15:
   3617 47 52 45 45 54 49 10103 	.ascii "GREETINGS TO VARIOUS GROUPS"
        4E 47 53 20 54 4F
        20 56 41 52 49 4F
        55 53 20 47 52 4F
        55 50 53
   3632 00                10104 	.db 0x00
   3633                   10105 __str_16:
   3633 54 72 69 6C 6F 62 10106 	.ascii "Trilobit  Prismbeings  Ivory Labs"
        69 74 20 20 50 72
        69 73 6D 62 65 69
        6E 67 73 20 20 49
        76 6F 72 79 20 4C
        61 62 73
   3654 00                10107 	.db 0x00
   3655                   10108 __str_17:
   3655 50 57 50 20 20 44 10109 	.ascii "PWP  Dekadence  Paraguay  ISO"
        65 6B 61 64 65 6E
        63 65 20 20 50 61
        72 61 67 75 61 79
        20 20 49 53 4F
   3672 00                10110 	.db 0x00
   3673                   10111 __str_18:
   3673 43 61 72 74 6F 6F 10112 	.ascii "Cartoon Horse Demo Force"
        6E 20 48 6F 72 73
        65 20 44 65 6D 6F
        20 46 6F 72 63 65
   368B 00                10113 	.db 0x00
                          10114 ;demo.c:1547: void bigtext() {
                          10115 ;	---------------------------------
                          10116 ; Function bigtext
                          10117 ; ---------------------------------
   368C                   10118 _bigtext_start::
   368C                   10119 _bigtext:
                          10120 ;demo.c:1549: if (bigtextp == 0) {
   368C 3Ar8Es17          10121 	ld	a,(#_bigtextp+0)
   368F FD 21r8Es17       10122 	ld	iy,#_bigtextp
   3693 FD B6 01          10123 	or	a,1 (iy)
   3696 C2r8Fs37          10124 	jp	NZ,00102$
                          10125 ;demo.c:1550: cmd.size_x = 2;
   3699 21r9Cs16          10126 	ld	hl, #_cmd + 8
   369C 36 02             10127 	ld	(hl),#0x02
   369E 23                10128 	inc	hl
   369F 36 00             10129 	ld	(hl),#0x00
                          10130 ;demo.c:1551: cmd.size_y = 212;
   36A1 21r9Es16          10131 	ld	hl, #_cmd + 10
   36A4 36 D4             10132 	ld	(hl),#0xD4
   36A6 23                10133 	inc	hl
   36A7 36 00             10134 	ld	(hl),#0x00
                          10135 ;demo.c:1552: cmd.data = 0;
                          10136 ;demo.c:1553: cmd.argument = 0x00; // from 70xY to left
   36A9 3E 00             10137 	ld	a,#0x00
   36AB 32rA0s16          10138 	ld	(#_cmd + 12),a
   36AE 32rA1s16          10139 	ld	(#_cmd + 13),a
                          10140 ;demo.c:1554: cmd.command = 0xd0; // vram to vram, y only
   36B1 01rA2s16          10141 	ld	bc,#_cmd + 14
   36B4 3E D0             10142 	ld	a,#0xD0
   36B6 02                10143 	ld	(bc),a
                          10144 ;demo.c:1555: cmd.source_x = 255;
   36B7 21r94s16          10145 	ld	hl,#_cmd
   36BA 36 FF             10146 	ld	(hl),#0xFF
   36BC 23                10147 	inc	hl
   36BD 36 00             10148 	ld	(hl),#0x00
                          10149 ;demo.c:1556: cmd.source_y = 0;
   36BF 21r96s16          10150 	ld	hl, #_cmd + 2
   36C2 36 00             10151 	ld	(hl),#0x00
   36C4 23                10152 	inc	hl
   36C5 36 00             10153 	ld	(hl),#0x00
                          10154 ;demo.c:1558: for (x = 0; x < 256; x+=4) {
   36C7 01 00 00          10155 	ld	bc,#0x0000
   36CA                   10156 00103$:
   36CA 79                10157 	ld	a,c
   36CB D6 00             10158 	sub	a,#0x00
   36CD 78                10159 	ld	a,b
   36CE DE 01             10160 	sbc	a,#0x01
   36D0 F2r07s37          10161 	jp	P,00106$
                          10162 ;demo.c:1559: waitVB();
   36D3 76                10163 		halt 
                          10164 ;demo.c:1560: cmd.dest_y = 256;
   36D4 11r9As16          10165 	ld	de,#_cmd + 6
   36D7 EB                10166 	ex	de,hl
   36D8 36 00             10167 	ld	(hl),#0x00
   36DA 23                10168 	inc	hl
   36DB 36 01             10169 	ld	(hl),#0x01
                          10170 ;demo.c:1561: cmd.dest_x = x;
   36DD 11r98s16          10171 	ld	de,#_cmd + 4
   36E0 EB                10172 	ex	de,hl
   36E1 71                10173 	ld	(hl),c
   36E2 23                10174 	inc	hl
   36E3 70                10175 	ld	(hl),b
                          10176 ;demo.c:1562: vdp_copier(&cmd);
   36E4 C5                10177 	push	bc
   36E5 21r94s16          10178 	ld	hl,#_cmd
   36E8 E5                10179 	push	hl
   36E9 CDr00s00          10180 	call	_vdp_copier
   36EC F1                10181 	pop	af
   36ED C1                10182 	pop	bc
                          10183 ;demo.c:1563: cmd.dest_y = 0;
   36EE 11r9As16          10184 	ld	de,#_cmd + 6
   36F1 EB                10185 	ex	de,hl
   36F2 36 00             10186 	ld	(hl),#0x00
   36F4 23                10187 	inc	hl
   36F5 36 00             10188 	ld	(hl),#0x00
                          10189 ;demo.c:1564: vdp_copier(&cmd);
   36F7 C5                10190 	push	bc
   36F8 21r94s16          10191 	ld	hl,#_cmd
   36FB E5                10192 	push	hl
   36FC CDr00s00          10193 	call	_vdp_copier
   36FF F1                10194 	pop	af
   3700 C1                10195 	pop	bc
                          10196 ;demo.c:1558: for (x = 0; x < 256; x+=4) {
   3701 03                10197 	inc	bc
   3702 03                10198 	inc	bc
   3703 03                10199 	inc	bc
   3704 03                10200 	inc	bc
   3705 18 C3             10201 	jr	00103$
   3707                   10202 00106$:
                          10203 ;demo.c:1567: for (x = 254; x > 0; x-=4) {
   3707 01 FE 00          10204 	ld	bc,#0x00FE
   370A                   10205 00107$:
   370A 3E 00             10206 	ld	a,#0x00
   370C 91                10207 	sub	a,c
   370D 3E 00             10208 	ld	a,#0x00
   370F 98                10209 	sbc	a,b
   3710 F2r4Bs37          10210 	jp	P,00110$
                          10211 ;demo.c:1568: waitVB();
   3713 76                10212 		halt 
                          10213 ;demo.c:1569: cmd.dest_y = 256;
   3714 11r9As16          10214 	ld	de,#_cmd + 6
   3717 EB                10215 	ex	de,hl
   3718 36 00             10216 	ld	(hl),#0x00
   371A 23                10217 	inc	hl
   371B 36 01             10218 	ld	(hl),#0x01
                          10219 ;demo.c:1570: cmd.dest_x = x;
   371D 11r98s16          10220 	ld	de,#_cmd + 4
   3720 EB                10221 	ex	de,hl
   3721 71                10222 	ld	(hl),c
   3722 23                10223 	inc	hl
   3723 70                10224 	ld	(hl),b
                          10225 ;demo.c:1571: vdp_copier(&cmd);
   3724 C5                10226 	push	bc
   3725 21r94s16          10227 	ld	hl,#_cmd
   3728 E5                10228 	push	hl
   3729 CDr00s00          10229 	call	_vdp_copier
   372C F1                10230 	pop	af
   372D C1                10231 	pop	bc
                          10232 ;demo.c:1572: cmd.dest_y = 0;
   372E 11r9As16          10233 	ld	de,#_cmd + 6
   3731 EB                10234 	ex	de,hl
   3732 36 00             10235 	ld	(hl),#0x00
   3734 23                10236 	inc	hl
   3735 36 00             10237 	ld	(hl),#0x00
                          10238 ;demo.c:1573: vdp_copier(&cmd);
   3737 C5                10239 	push	bc
   3738 21r94s16          10240 	ld	hl,#_cmd
   373B E5                10241 	push	hl
   373C CDr00s00          10242 	call	_vdp_copier
   373F F1                10243 	pop	af
   3740 C1                10244 	pop	bc
                          10245 ;demo.c:1567: for (x = 254; x > 0; x-=4) {
   3741 79                10246 	ld	a,c
   3742 C6 FC             10247 	add	a,#0xFC
   3744 4F                10248 	ld	c,a
   3745 78                10249 	ld	a,b
   3746 CE FF             10250 	adc	a,#0xFF
   3748 47                10251 	ld	b,a
   3749 18 BF             10252 	jr	00107$
   374B                   10253 00110$:
                          10254 ;demo.c:1576: vdp_load_palette(twister_palette);
   374B 21r30s16          10255 	ld	hl,#_twister_palette
   374E E5                10256 	push	hl
   374F CDr00s00          10257 	call	_vdp_load_palette
   3752 F1                10258 	pop	af
                          10259 ;demo.c:1577: drawstr2x("DIGITAL",26,44);
   3753 21 1A 2C          10260 	ld	hl,#0x2C1A
   3756 E5                10261 	push	hl
   3757 21rD9s37          10262 	ld	hl,#__str_19
   375A E5                10263 	push	hl
   375B CDr67s16          10264 	call	_drawstr2x
   375E F1                10265 	pop	af
   375F F1                10266 	pop	af
                          10267 ;demo.c:1578: drawstr2x("SOUNDS",27,84);
   3760 21 1B 54          10268 	ld	hl,#0x541B
   3763 E5                10269 	push	hl
   3764 21rE1s37          10270 	ld	hl,#__str_20
   3767 E5                10271 	push	hl
   3768 CDr67s16          10272 	call	_drawstr2x
   376B F1                10273 	pop	af
   376C F1                10274 	pop	af
                          10275 ;demo.c:1579: drawstr2x("SYSTEM",25,124);
   376D 21 19 7C          10276 	ld	hl,#0x7C19
   3770 E5                10277 	push	hl
   3771 21rE8s37          10278 	ld	hl,#__str_21
   3774 E5                10279 	push	hl
   3775 CDr67s16          10280 	call	_drawstr2x
   3778 F1                10281 	pop	af
   3779 F1                10282 	pop	af
                          10283 ;demo.c:1580: bigtextp++;
   377A FD 21r8Es17       10284 	ld	iy,#_bigtextp
   377E FD 34 00          10285 	inc	0 (iy)
   3781 20 07             10286 	jr	NZ,00120$
   3783 FD 21r8Es17       10287 	ld	iy,#_bigtextp
   3787 FD 34 01          10288 	inc	1 (iy)
   378A                   10289 00120$:
                          10290 ;demo.c:1581: tri_inited = 2;
   378A 21r6Fs17          10291 	ld	hl,#_tri_inited + 0
   378D 36 02             10292 	ld	(hl), #0x02
   378F                   10293 00102$:
                          10294 ;demo.c:1584: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   378F 21r20s17          10295 	ld	hl,#_ff + 0
   3792 4E                10296 	ld	c,(hl)
   3793 21r21s17          10297 	ld	hl,#_ff + 1
   3796 46                10298 	ld	b,(hl)
   3797 CB 28             10299 	sra	b
   3799 CB 19             10300 	rr	c
   379B CB 28             10301 	sra	b
   379D CB 19             10302 	rr	c
   379F 21r20s17          10303 	ld	hl,#_ff + 0
   37A2 5E                10304 	ld	e,(hl)
   37A3 21r21s17          10305 	ld	hl,#_ff + 1
   37A6 56                10306 	ld	d,(hl)
   37A7 CB 2A             10307 	sra	d
   37A9 CB 1B             10308 	rr	e
   37AB CB 2A             10309 	sra	d
   37AD CB 1B             10310 	rr	e
   37AF CB 2A             10311 	sra	d
   37B1 CB 1B             10312 	rr	e
   37B3 43                10313 	ld	b,e
   37B4 79                10314 	ld	a,c
   37B5 F5                10315 	push	af
   37B6 33                10316 	inc	sp
   37B7 C5                10317 	push	bc
   37B8 33                10318 	inc	sp
   37B9 41                10319 	ld	b,c
   37BA 0E 04             10320 	ld	c,#0x04
   37BC C5                10321 	push	bc
   37BD CDr00s00          10322 	call	_msx2_palette
   37C0 F1                10323 	pop	af
   37C1 F1                10324 	pop	af
                          10325 ;demo.c:1585: ff+=2;
   37C2 21r20s17          10326 	ld	hl,#_ff
   37C5 7E                10327 	ld	a,(hl)
   37C6 C6 02             10328 	add	a,#0x02
   37C8 23                10329 	inc	hl
   37C9 2B                10330 	dec	hl
   37CA C5                10331 	push	bc
   37CB 4F                10332 	ld	c, a
   37CC 23                10333 	inc	hl
   37CD 7E                10334 	ld	a, (hl)
   37CE 47                10335 	ld	b, a
   37CF 79                10336 	ld	a, c
   37D0 2B                10337 	dec	hl
   37D1 77                10338 	ld	(hl), a
   37D2 78                10339 	ld	a, b
   37D3 C1                10340 	pop	bc
   37D4 CE 00             10341 	adc	a,#0x00
   37D6 23                10342 	inc	hl
   37D7 77                10343 	ld	(hl),a
   37D8 C9                10344 	ret
   37D9                   10345 _bigtext_end::
   37D9                   10346 __str_19:
   37D9 44 49 47 49 54 41 10347 	.ascii "DIGITAL"
        4C
   37E0 00                10348 	.db 0x00
   37E1                   10349 __str_20:
   37E1 53 4F 55 4E 44 53 10350 	.ascii "SOUNDS"
   37E7 00                10351 	.db 0x00
   37E8                   10352 __str_21:
   37E8 53 59 53 54 45 4D 10353 	.ascii "SYSTEM"
   37EE 00                10354 	.db 0x00
                          10355 ;demo.c:1588: void waiter() {
                          10356 ;	---------------------------------
                          10357 ; Function waiter
                          10358 ; ---------------------------------
   37EF                   10359 _waiter_start::
   37EF                   10360 _waiter:
                          10361 ;demo.c:1590: }
   37EF C9                10362 	ret
   37F0                   10363 _waiter_end::
                          10364 ;demo.c:1597: void do_quit() {
                          10365 ;	---------------------------------
                          10366 ; Function do_quit
                          10367 ; ---------------------------------
   37F0                   10368 _do_quit_start::
   37F0                   10369 _do_quit:
                          10370 ;demo.c:1598: waitVB();
   37F0 76                10371 		halt 
                          10372 ;demo.c:1599: uninstall_isr();
   37F1 CDr00s00          10373 	call	_uninstall_isr
                          10374 ;demo.c:1600: PLY_Stop();
   37F4 CDr00s00          10375 	call	_PLY_Stop
                          10376 ;demo.c:1601: PLY_SendRegisters();
   37F7 CDr00s00          10377 	call	_PLY_SendRegisters
                          10378 ;demo.c:1603: screen(0);
   37FA 3E 00             10379 	ld	a,#0x00
   37FC F5                10380 	push	af
   37FD 33                10381 	inc	sp
   37FE CDr00s00          10382 	call	_screen
   3801 33                10383 	inc	sp
                          10384 ;demo.c:1605: puts("demo quit\r\n\r\n");
   3802 21r13s38          10385 	ld	hl,#__str_22
   3805 E5                10386 	push	hl
   3806 CDr00s00          10387 	call	_puts
   3809 F1                10388 	pop	af
                          10389 ;demo.c:1607: exit(0);	
   380A 3E 00             10390 	ld	a,#0x00
   380C F5                10391 	push	af
   380D 33                10392 	inc	sp
   380E CDr00s00          10393 	call	_exit
   3811 33                10394 	inc	sp
   3812 C9                10395 	ret
   3813                   10396 _do_quit_end::
   3813                   10397 __str_22:
   3813 64 65 6D 6F 20 71 10398 	.ascii "demo quit"
        75 69 74
   381C 0D                10399 	.db 0x0D
   381D 0A                10400 	.db 0x0A
   381E 0D                10401 	.db 0x0D
   381F 0A                10402 	.db 0x0A
   3820 00                10403 	.db 0x00
                          10404 ;demo.c:1613: void main() {
                          10405 ;	---------------------------------
                          10406 ; Function main
                          10407 ; ---------------------------------
   3821                   10408 _main_start::
   3821                   10409 _main:
   3821 DD E5             10410 	push	ix
   3823 DD 21 00 00       10411 	ld	ix,#0
   3827 DD 39             10412 	add	ix,sp
   3829 21 F9 FF          10413 	ld	hl,#-7
   382C 39                10414 	add	hl,sp
   382D F9                10415 	ld	sp,hl
                          10416 ;demo.c:1614: unsigned char quit=0;
   382E DD 36 FF 00       10417 	ld	-1 (ix),#0x00
                          10418 ;demo.c:1620: spindown();
   3832 CDr00s00          10419 	call	_spindown
                          10420 ;demo.c:1622: puts("demo init\r\n\r\n");
   3835 21rFDs3C          10421 	ld	hl,#__str_23
   3838 E5                10422 	push	hl
   3839 CDr00s00          10423 	call	_puts
   383C F1                10424 	pop	af
                          10425 ;demo.c:1624: for (y = 0; y < 2; y++) {
   383D DD 36 FB 00       10426 	ld	-5 (ix),#0x00
   3841 DD 36 FC 00       10427 	ld	-4 (ix),#0x00
   3845                   10428 00118$:
   3845 DD 7E FB          10429 	ld	a,-5 (ix)
   3848 D6 02             10430 	sub	a,#0x02
   384A DD 7E FC          10431 	ld	a,-4 (ix)
   384D DE 00             10432 	sbc	a,#0x00
   384F F2rD1s38          10433 	jp	P,00121$
                          10434 ;demo.c:1625: for (x = 0; x < 16; x++) {
   3852 DD 4E FB          10435 	ld	c,-5 (ix)
   3855 DD 46 FC          10436 	ld	b,-4 (ix)
   3858 CB 21             10437 	sla	c
   385A CB 10             10438 	rl	b
   385C CB 21             10439 	sla	c
   385E CB 10             10440 	rl	b
   3860 CB 21             10441 	sla	c
   3862 CB 10             10442 	rl	b
   3864 CB 21             10443 	sla	c
   3866 CB 10             10444 	rl	b
   3868 21 81 03          10445 	ld	hl,#0x0381
   386B 09                10446 	add	hl,bc
   386C DD 75 F9          10447 	ld	-7 (ix),l
   386F DD 74 FA          10448 	ld	-6 (ix),h
   3872 DD 36 FD 00       10449 	ld	-3 (ix),#0x00
   3876 DD 36 FE 00       10450 	ld	-2 (ix),#0x00
   387A                   10451 00114$:
   387A DD 7E FD          10452 	ld	a,-3 (ix)
   387D D6 10             10453 	sub	a,#0x10
   387F DD 7E FE          10454 	ld	a,-2 (ix)
   3882 DE 00             10455 	sbc	a,#0x00
   3884 F2rC6s38          10456 	jp	P,00120$
                          10457 ;demo.c:1626: tri_lookup_x[(y*16)+x] = x * 16;
   3887 DD 7E FB          10458 	ld	a,-5 (ix)
   388A 07                10459 	rlca
   388B 07                10460 	rlca
   388C 07                10461 	rlca
   388D 07                10462 	rlca
   388E E6 F0             10463 	and	a,#0xF0
   3890 5F                10464 	ld	e,a
   3891 DD 56 FD          10465 	ld	d,-3 (ix)
   3894 7B                10466 	ld	a,e
   3895 82                10467 	add	a,d
   3896 5F                10468 	ld	e, a
   3897 C6r00             10469 	add	a,#<_tri_lookup_x
   3899 4F                10470 	ld	c,a
   389A 3Es01             10471 	ld	a,#>_tri_lookup_x
   389C CE 00             10472 	adc	a,#0x00
   389E 47                10473 	ld	b,a
   389F 7A                10474 	ld	a,d
   38A0 07                10475 	rlca
   38A1 07                10476 	rlca
   38A2 07                10477 	rlca
   38A3 07                10478 	rlca
   38A4 E6 F0             10479 	and	a,#0xF0
   38A6 02                10480 	ld	(bc),a
                          10481 ;demo.c:1627: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   38A7 CB 23             10482 	sla	e
   38A9 3Er88             10483 	ld	a,#<_tri_lookup_y
   38AB 83                10484 	add	a,e
   38AC 6F                10485 	ld	l,a
   38AD 3Es01             10486 	ld	a,#>_tri_lookup_y
   38AF CE 00             10487 	adc	a,#0x00
   38B1 67                10488 	ld	h,a
   38B2 DD 7E F9          10489 	ld	a,-7 (ix)
   38B5 77                10490 	ld	(hl),a
   38B6 23                10491 	inc	hl
   38B7 DD 7E FA          10492 	ld	a,-6 (ix)
   38BA 77                10493 	ld	(hl),a
                          10494 ;demo.c:1625: for (x = 0; x < 16; x++) {
   38BB DD 34 FD          10495 	inc	-3 (ix)
   38BE 20 03             10496 	jr	NZ,00146$
   38C0 DD 34 FE          10497 	inc	-2 (ix)
   38C3                   10498 00146$:
   38C3 C3r7As38          10499 	jp	00114$
   38C6                   10500 00120$:
                          10501 ;demo.c:1624: for (y = 0; y < 2; y++) {
   38C6 DD 34 FB          10502 	inc	-5 (ix)
   38C9 20 03             10503 	jr	NZ,00147$
   38CB DD 34 FC          10504 	inc	-4 (ix)
   38CE                   10505 00147$:
   38CE C3r45s38          10506 	jp	00118$
   38D1                   10507 00121$:
                          10508 ;demo.c:1631: for (x = 0; x < 26; x++) {
   38D1 DD 36 FD 00       10509 	ld	-3 (ix),#0x00
   38D5 DD 36 FE 00       10510 	ld	-2 (ix),#0x00
   38D9 DD 36 F9 00       10511 	ld	-7 (ix),#0x00
   38DD DD 36 FA 00       10512 	ld	-6 (ix),#0x00
   38E1                   10513 00122$:
   38E1 DD 7E FD          10514 	ld	a,-3 (ix)
   38E4 D6 1A             10515 	sub	a,#0x1A
   38E6 DD 7E FE          10516 	ld	a,-2 (ix)
   38E9 DE 00             10517 	sbc	a,#0x00
   38EB F2r3Ds39          10518 	jp	P,00125$
                          10519 ;demo.c:1632: twelvetimes[x] = x * 12;
   38EE DD 4E FD          10520 	ld	c,-3 (ix)
   38F1 DD 46 FE          10521 	ld	b,-2 (ix)
   38F4 CB 21             10522 	sla	c
   38F6 CB 10             10523 	rl	b
   38F8 21r20s01          10524 	ld	hl,#_twelvetimes
   38FB 09                10525 	add	hl,bc
   38FC DD 7E F9          10526 	ld	a,-7 (ix)
   38FF 77                10527 	ld	(hl),a
   3900 23                10528 	inc	hl
   3901 DD 7E FA          10529 	ld	a,-6 (ix)
   3904 77                10530 	ld	(hl),a
                          10531 ;demo.c:1633: eighttimes[x] = x * 8;
   3905 21r54s01          10532 	ld	hl,#_eighttimes
   3908 09                10533 	add	hl,bc
   3909 4D                10534 	ld	c,l
   390A 44                10535 	ld	b,h
   390B DD 5E FD          10536 	ld	e,-3 (ix)
   390E DD 56 FE          10537 	ld	d,-2 (ix)
   3911 CB 23             10538 	sla	e
   3913 CB 12             10539 	rl	d
   3915 CB 23             10540 	sla	e
   3917 CB 12             10541 	rl	d
   3919 CB 23             10542 	sla	e
   391B CB 12             10543 	rl	d
   391D 69                10544 	ld	l,c
   391E 60                10545 	ld	h,b
   391F 73                10546 	ld	(hl),e
   3920 23                10547 	inc	hl
   3921 72                10548 	ld	(hl),d
                          10549 ;demo.c:1631: for (x = 0; x < 26; x++) {
   3922 DD 7E F9          10550 	ld	a,-7 (ix)
   3925 C6 0C             10551 	add	a,#0x0C
   3927 DD 77 F9          10552 	ld	-7 (ix),a
   392A DD 7E FA          10553 	ld	a,-6 (ix)
   392D CE 00             10554 	adc	a,#0x00
   392F DD 77 FA          10555 	ld	-6 (ix),a
   3932 DD 34 FD          10556 	inc	-3 (ix)
   3935 20 03             10557 	jr	NZ,00152$
   3937 DD 34 FE          10558 	inc	-2 (ix)
   393A                   10559 00152$:
   393A C3rE1s38          10560 	jp	00122$
   393D                   10561 00125$:
                          10562 ;demo.c:1636: puts("music init...");
   393D 21r0Bs3D          10563 	ld	hl,#__str_24
   3940 E5                10564 	push	hl
   3941 CDr00s00          10565 	call	_puts
   3944 F1                10566 	pop	af
                          10567 ;demo.c:1638: PLY_SongPtr = (char *)0x0103;
   3945 21r00s00          10568 	ld	hl,#_PLY_SongPtr + 0
   3948 36 03             10569 	ld	(hl), #0x03
   394A 21r01s00          10570 	ld	hl,#_PLY_SongPtr + 1
   394D 36 01             10571 	ld	(hl), #0x01
                          10572 ;demo.c:1639: PLY_Init();
   394F CDr00s00          10573 	call	_PLY_Init
                          10574 ;demo.c:1640: puts("done.\r\n");
   3952 21r19s3D          10575 	ld	hl,#__str_25
   3955 E5                10576 	push	hl
   3956 CDr00s00          10577 	call	_puts
   3959 F1                10578 	pop	af
                          10579 ;demo.c:1642: puts("detecting vdp type...\r\n\r\n");
   395A 21r21s3D          10580 	ld	hl,#__str_26
   395D E5                10581 	push	hl
   395E CDr00s00          10582 	call	_puts
   3961 F1                10583 	pop	af
                          10584 ;demo.c:1643: if(isvdp2())
   3962 CDr00s00          10585 	call	_isvdp2
   3965 AF                10586 	xor	a,a
   3966 B5                10587 	or	a,l
   3967 28 0A             10588 	jr	Z,00102$
                          10589 ;demo.c:1645: puts("vdp2 found! setting 50hz...\r\n\r\n");
   3969 21r3Bs3D          10590 	ld	hl,#__str_27
   396C E5                10591 	push	hl
   396D CDr00s00          10592 	call	_puts
   3970 F1                10593 	pop	af
   3971 18 0B             10594 	jr	00103$
   3973                   10595 00102$:
                          10596 ;demo.c:1648: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   3973 21r5Bs3D          10597 	ld	hl,#__str_28
   3976 E5                10598 	push	hl
   3977 CDr00s00          10599 	call	_puts
   397A F1                10600 	pop	af
                          10601 ;demo.c:1649: do_quit();
   397B CDrF0s37          10602 	call	_do_quit
   397E                   10603 00103$:
                          10604 ;demo.c:1652: pal_load("TWISTER PL5",32,1);
   397E 21 01 00          10605 	ld	hl,#0x0001
   3981 E5                10606 	push	hl
   3982 3E 20             10607 	ld	a,#0x20
   3984 F5                10608 	push	af
   3985 33                10609 	inc	sp
   3986 21rA2s3D          10610 	ld	hl,#__str_29
   3989 E5                10611 	push	hl
   398A CDrA3s09          10612 	call	_pal_load
   398D F1                10613 	pop	af
   398E F1                10614 	pop	af
   398F 33                10615 	inc	sp
                          10616 ;demo.c:1653: memcpy(twister_palette, cur_palette, 32);
   3990 21 20 00          10617 	ld	hl,#0x0020
   3993 E5                10618 	push	hl
   3994 21rD0s15          10619 	ld	hl,#_cur_palette
   3997 E5                10620 	push	hl
   3998 21r30s16          10621 	ld	hl,#_twister_palette
   399B E5                10622 	push	hl
   399C CDr00s00          10623 	call	_memcpy
   399F F1                10624 	pop	af
   39A0 F1                10625 	pop	af
   39A1 F1                10626 	pop	af
                          10627 ;demo.c:1654: pal_load("LF      PL5",32,1);
   39A2 21 01 00          10628 	ld	hl,#0x0001
   39A5 E5                10629 	push	hl
   39A6 3E 20             10630 	ld	a,#0x20
   39A8 F5                10631 	push	af
   39A9 33                10632 	inc	sp
   39AA 21rAEs3D          10633 	ld	hl,#__str_30
   39AD E5                10634 	push	hl
   39AE CDrA3s09          10635 	call	_pal_load
   39B1 F1                10636 	pop	af
   39B2 F1                10637 	pop	af
   39B3 33                10638 	inc	sp
                          10639 ;demo.c:1655: memcpy(tf_palette, cur_palette, 32);
   39B4 21 20 00          10640 	ld	hl,#0x0020
   39B7 E5                10641 	push	hl
   39B8 21rD0s15          10642 	ld	hl,#_cur_palette
   39BB E5                10643 	push	hl
   39BC 21r50s16          10644 	ld	hl,#_tf_palette
   39BF E5                10645 	push	hl
   39C0 CDr00s00          10646 	call	_memcpy
   39C3 F1                10647 	pop	af
   39C4 F1                10648 	pop	af
   39C5 F1                10649 	pop	af
                          10650 ;demo.c:1656: pal_load("BOXES   PL5",32,1);
   39C6 21 01 00          10651 	ld	hl,#0x0001
   39C9 E5                10652 	push	hl
   39CA 3E 20             10653 	ld	a,#0x20
   39CC F5                10654 	push	af
   39CD 33                10655 	inc	sp
   39CE 21rBAs3D          10656 	ld	hl,#__str_31
   39D1 E5                10657 	push	hl
   39D2 CDrA3s09          10658 	call	_pal_load
   39D5 F1                10659 	pop	af
   39D6 F1                10660 	pop	af
   39D7 33                10661 	inc	sp
                          10662 ;demo.c:1657: memcpy(boxes_palette, cur_palette, 32);
   39D8 21 20 00          10663 	ld	hl,#0x0020
   39DB E5                10664 	push	hl
   39DC 21rD0s15          10665 	ld	hl,#_cur_palette
   39DF E5                10666 	push	hl
   39E0 21r70s16          10667 	ld	hl,#_boxes_palette
   39E3 E5                10668 	push	hl
   39E4 CDr00s00          10669 	call	_memcpy
   39E7 F1                10670 	pop	af
   39E8 F1                10671 	pop	af
   39E9 F1                10672 	pop	af
                          10673 ;demo.c:1658: pal_load("BULBS   PL5",32,1);
   39EA 21 01 00          10674 	ld	hl,#0x0001
   39ED E5                10675 	push	hl
   39EE 3E 20             10676 	ld	a,#0x20
   39F0 F5                10677 	push	af
   39F1 33                10678 	inc	sp
   39F2 21rC6s3D          10679 	ld	hl,#__str_32
   39F5 E5                10680 	push	hl
   39F6 CDrA3s09          10681 	call	_pal_load
   39F9 F1                10682 	pop	af
   39FA F1                10683 	pop	af
   39FB 33                10684 	inc	sp
                          10685 ;demo.c:1659: memcpy(bulbs_palette, cur_palette, 32);
   39FC 21 20 00          10686 	ld	hl,#0x0020
   39FF E5                10687 	push	hl
   3A00 21rD0s15          10688 	ld	hl,#_cur_palette
   3A03 E5                10689 	push	hl
   3A04 21rF0s15          10690 	ld	hl,#_bulbs_palette
   3A07 E5                10691 	push	hl
   3A08 CDr00s00          10692 	call	_memcpy
   3A0B F1                10693 	pop	af
   3A0C F1                10694 	pop	af
   3A0D F1                10695 	pop	af
                          10696 ;demo.c:1661: scratch_clear();
   3A0E CDr90s09          10697 	call	_scratch_clear
                          10698 ;demo.c:1662: vdp_load_palette(scratch);
   3A11 21r50s15          10699 	ld	hl,#_scratch
   3A14 E5                10700 	push	hl
   3A15 CDr00s00          10701 	call	_vdp_load_palette
   3A18 F1                10702 	pop	af
                          10703 ;demo.c:1664: vdp_set_screen5();
   3A19 CDr00s00          10704 	call	_vdp_set_screen5
                          10705 ;demo.c:1666: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   3A1C 21 00 00          10706 	ld	hl,#0x0000
   3A1F E5                10707 	push	hl
   3A20 2E 01             10708 	ld	l, #0x01
   3A22 E5                10709 	push	hl
   3A23 2E 00             10710 	ld	l, #0x00
   3A25 E5                10711 	push	hl
   3A26 21 7F 09          10712 	ld	hl,#0x097F
   3A29 E5                10713 	push	hl
   3A2A 21rD2s3D          10714 	ld	hl,#__str_33
   3A2D E5                10715 	push	hl
   3A2E CDr99s0B          10716 	call	_pck_load
   3A31 FD 21 0A 00       10717 	ld	iy,#0x000A
   3A35 FD 39             10718 	add	iy,sp
   3A37 FD F9             10719 	ld	sp,iy
                          10720 ;demo.c:1668: cmd.size_x = 256;
   3A39 21r9Cs16          10721 	ld	hl, #_cmd + 8
   3A3C 36 00             10722 	ld	(hl),#0x00
   3A3E 23                10723 	inc	hl
   3A3F 36 01             10724 	ld	(hl),#0x01
                          10725 ;demo.c:1669: cmd.size_y = 212;
   3A41 21r9Es16          10726 	ld	hl, #_cmd + 10
   3A44 36 D4             10727 	ld	(hl),#0xD4
   3A46 23                10728 	inc	hl
   3A47 36 00             10729 	ld	(hl),#0x00
                          10730 ;demo.c:1670: cmd.data = 0;
                          10731 ;demo.c:1671: cmd.argument = 0x00;
   3A49 3E 00             10732 	ld	a,#0x00
   3A4B 32rA0s16          10733 	ld	(#_cmd + 12),a
   3A4E 32rA1s16          10734 	ld	(#_cmd + 13),a
                          10735 ;demo.c:1672: cmd.command = 0xd0; 
   3A51 01rA2s16          10736 	ld	bc,#_cmd + 14
   3A54 3E D0             10737 	ld	a,#0xD0
   3A56 02                10738 	ld	(bc),a
                          10739 ;demo.c:1673: cmd.source_x = 0;
   3A57 21r94s16          10740 	ld	hl,#_cmd
   3A5A 36 00             10741 	ld	(hl),#0x00
   3A5C 23                10742 	inc	hl
   3A5D 36 00             10743 	ld	(hl),#0x00
                          10744 ;demo.c:1674: cmd.source_y = 0;
   3A5F 21r96s16          10745 	ld	hl, #_cmd + 2
   3A62 36 00             10746 	ld	(hl),#0x00
   3A64 23                10747 	inc	hl
   3A65 36 00             10748 	ld	(hl),#0x00
                          10749 ;demo.c:1675: cmd.dest_x = 0;
   3A67 21r98s16          10750 	ld	hl, #_cmd + 4
   3A6A 36 00             10751 	ld	(hl),#0x00
   3A6C 23                10752 	inc	hl
   3A6D 36 00             10753 	ld	(hl),#0x00
                          10754 ;demo.c:1676: cmd.dest_y = 256;
   3A6F 21r9As16          10755 	ld	hl, #_cmd + 6
   3A72 36 00             10756 	ld	(hl),#0x00
   3A74 23                10757 	inc	hl
   3A75 36 01             10758 	ld	(hl),#0x01
                          10759 ;demo.c:1677: vdp_copier(&cmd);
   3A77 21r94s16          10760 	ld	hl,#_cmd
   3A7A E5                10761 	push	hl
   3A7B CDr00s00          10762 	call	_vdp_copier
   3A7E F1                10763 	pop	af
                          10764 ;demo.c:1679: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   3A7F 21 00 00          10765 	ld	hl,#0x0000
   3A82 E5                10766 	push	hl
   3A83 2E 01             10767 	ld	l, #0x01
   3A85 E5                10768 	push	hl
   3A86 2E 00             10769 	ld	l, #0x00
   3A88 E5                10770 	push	hl
   3A89 21 C0 0F          10771 	ld	hl,#0x0FC0
   3A8C E5                10772 	push	hl
   3A8D 21rDEs3D          10773 	ld	hl,#__str_34
   3A90 E5                10774 	push	hl
   3A91 CDr99s0B          10775 	call	_pck_load
   3A94 FD 21 0A 00       10776 	ld	iy,#0x000A
   3A98 FD 39             10777 	add	iy,sp
   3A9A FD F9             10778 	ld	sp,iy
                          10779 ;demo.c:1681: cmd.size_x = 256;
   3A9C 21r9Cs16          10780 	ld	hl, #_cmd + 8
   3A9F 36 00             10781 	ld	(hl),#0x00
   3AA1 23                10782 	inc	hl
   3AA2 36 01             10783 	ld	(hl),#0x01
                          10784 ;demo.c:1682: cmd.size_y = 212;
   3AA4 21r9Es16          10785 	ld	hl, #_cmd + 10
   3AA7 36 D4             10786 	ld	(hl),#0xD4
   3AA9 23                10787 	inc	hl
   3AAA 36 00             10788 	ld	(hl),#0x00
                          10789 ;demo.c:1683: cmd.data = 0;
                          10790 ;demo.c:1684: cmd.argument = 0x00;
   3AAC 3E 00             10791 	ld	a,#0x00
   3AAE 32rA0s16          10792 	ld	(#_cmd + 12),a
   3AB1 32rA1s16          10793 	ld	(#_cmd + 13),a
                          10794 ;demo.c:1685: cmd.command = 0xd0; 
   3AB4 01rA2s16          10795 	ld	bc,#_cmd + 14
   3AB7 3E D0             10796 	ld	a,#0xD0
   3AB9 02                10797 	ld	(bc),a
                          10798 ;demo.c:1686: cmd.source_x = 0;
   3ABA 21r94s16          10799 	ld	hl,#_cmd
   3ABD 36 00             10800 	ld	(hl),#0x00
   3ABF 23                10801 	inc	hl
   3AC0 36 00             10802 	ld	(hl),#0x00
                          10803 ;demo.c:1687: cmd.source_y = 0;
   3AC2 21r96s16          10804 	ld	hl, #_cmd + 2
   3AC5 36 00             10805 	ld	(hl),#0x00
   3AC7 23                10806 	inc	hl
   3AC8 36 00             10807 	ld	(hl),#0x00
                          10808 ;demo.c:1688: cmd.dest_x = 0;
   3ACA 21r98s16          10809 	ld	hl, #_cmd + 4
   3ACD 36 00             10810 	ld	(hl),#0x00
   3ACF 23                10811 	inc	hl
   3AD0 36 00             10812 	ld	(hl),#0x00
                          10813 ;demo.c:1689: cmd.dest_y = 512;
   3AD2 21r9As16          10814 	ld	hl, #_cmd + 6
   3AD5 36 00             10815 	ld	(hl),#0x00
   3AD7 23                10816 	inc	hl
   3AD8 36 02             10817 	ld	(hl),#0x02
                          10818 ;demo.c:1690: vdp_copier(&cmd);
   3ADA 21r94s16          10819 	ld	hl,#_cmd
   3ADD E5                10820 	push	hl
   3ADE CDr00s00          10821 	call	_vdp_copier
   3AE1 F1                10822 	pop	af
                          10823 ;demo.c:1693: pck_load("BOXES   PCK",2731,0x0000,VRAM_0,0);
   3AE2 21 00 00          10824 	ld	hl,#0x0000
   3AE5 E5                10825 	push	hl
   3AE6 2E 01             10826 	ld	l, #0x01
   3AE8 E5                10827 	push	hl
   3AE9 2E 00             10828 	ld	l, #0x00
   3AEB E5                10829 	push	hl
   3AEC 21 AB 0A          10830 	ld	hl,#0x0AAB
   3AEF E5                10831 	push	hl
   3AF0 21rEAs3D          10832 	ld	hl,#__str_35
   3AF3 E5                10833 	push	hl
   3AF4 CDr99s0B          10834 	call	_pck_load
   3AF7 FD 21 0A 00       10835 	ld	iy,#0x000A
   3AFB FD 39             10836 	add	iy,sp
   3AFD FD F9             10837 	ld	sp,iy
                          10838 ;demo.c:1694: cmd.size_x = 256;
   3AFF 21r9Cs16          10839 	ld	hl, #_cmd + 8
   3B02 36 00             10840 	ld	(hl),#0x00
   3B04 23                10841 	inc	hl
   3B05 36 01             10842 	ld	(hl),#0x01
                          10843 ;demo.c:1695: cmd.size_y = 212;
   3B07 21r9Es16          10844 	ld	hl, #_cmd + 10
   3B0A 36 D4             10845 	ld	(hl),#0xD4
   3B0C 23                10846 	inc	hl
   3B0D 36 00             10847 	ld	(hl),#0x00
                          10848 ;demo.c:1696: cmd.data = 0;
                          10849 ;demo.c:1697: cmd.argument = 0x00;
   3B0F 3E 00             10850 	ld	a,#0x00
   3B11 32rA0s16          10851 	ld	(#_cmd + 12),a
   3B14 32rA1s16          10852 	ld	(#_cmd + 13),a
                          10853 ;demo.c:1698: cmd.command = 0xd0; 
   3B17 01rA2s16          10854 	ld	bc,#_cmd + 14
   3B1A 3E D0             10855 	ld	a,#0xD0
   3B1C 02                10856 	ld	(bc),a
                          10857 ;demo.c:1699: cmd.source_x = 0;
   3B1D 21r94s16          10858 	ld	hl,#_cmd
   3B20 36 00             10859 	ld	(hl),#0x00
   3B22 23                10860 	inc	hl
   3B23 36 00             10861 	ld	(hl),#0x00
                          10862 ;demo.c:1700: cmd.source_y = 0;
   3B25 21r96s16          10863 	ld	hl, #_cmd + 2
   3B28 36 00             10864 	ld	(hl),#0x00
   3B2A 23                10865 	inc	hl
   3B2B 36 00             10866 	ld	(hl),#0x00
                          10867 ;demo.c:1701: cmd.dest_x = 0;
   3B2D 21r98s16          10868 	ld	hl, #_cmd + 4
   3B30 36 00             10869 	ld	(hl),#0x00
   3B32 23                10870 	inc	hl
   3B33 36 00             10871 	ld	(hl),#0x00
                          10872 ;demo.c:1702: cmd.dest_y = 768;
   3B35 21r9As16          10873 	ld	hl, #_cmd + 6
   3B38 36 00             10874 	ld	(hl),#0x00
   3B3A 23                10875 	inc	hl
   3B3B 36 03             10876 	ld	(hl),#0x03
                          10877 ;demo.c:1703: vdp_copier(&cmd);
   3B3D 21r94s16          10878 	ld	hl,#_cmd
   3B40 E5                10879 	push	hl
   3B41 CDr00s00          10880 	call	_vdp_copier
   3B44 F1                10881 	pop	af
                          10882 ;demo.c:1705: scratch_clear();
   3B45 CDr90s09          10883 	call	_scratch_clear
                          10884 ;demo.c:1706: vdp_load_palette(scratch);
   3B48 21r50s15          10885 	ld	hl,#_scratch
   3B4B E5                10886 	push	hl
   3B4C CDr00s00          10887 	call	_vdp_load_palette
   3B4F F1                10888 	pop	af
                          10889 ;demo.c:1708: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   3B50 21 00 00          10890 	ld	hl,#0x0000
   3B53 E5                10891 	push	hl
   3B54 2E 01             10892 	ld	l, #0x01
   3B56 E5                10893 	push	hl
   3B57 2E 00             10894 	ld	l, #0x00
   3B59 E5                10895 	push	hl
   3B5A 21 6A 08          10896 	ld	hl,#0x086A
   3B5D E5                10897 	push	hl
   3B5E 21rF6s3D          10898 	ld	hl,#__str_36
   3B61 E5                10899 	push	hl
   3B62 CDr99s0B          10900 	call	_pck_load
   3B65 FD 21 0A 00       10901 	ld	iy,#0x000A
   3B69 FD 39             10902 	add	iy,sp
   3B6B FD F9             10903 	ld	sp,iy
                          10904 ;demo.c:1710: cmd.size_x = 108;
   3B6D 21r9Cs16          10905 	ld	hl, #_cmd + 8
   3B70 36 6C             10906 	ld	(hl),#0x6C
   3B72 23                10907 	inc	hl
   3B73 36 00             10908 	ld	(hl),#0x00
                          10909 ;demo.c:1711: cmd.size_y = 116;
   3B75 21r9Es16          10910 	ld	hl, #_cmd + 10
   3B78 36 74             10911 	ld	(hl),#0x74
   3B7A 23                10912 	inc	hl
   3B7B 36 00             10913 	ld	(hl),#0x00
                          10914 ;demo.c:1712: cmd.data = 0;
                          10915 ;demo.c:1713: cmd.argument = 0x00;
   3B7D 3E 00             10916 	ld	a,#0x00
   3B7F 32rA0s16          10917 	ld	(#_cmd + 12),a
   3B82 32rA1s16          10918 	ld	(#_cmd + 13),a
                          10919 ;demo.c:1714: cmd.command = 0xd0; 
   3B85 01rA2s16          10920 	ld	bc,#_cmd + 14
   3B88 3E D0             10921 	ld	a,#0xD0
   3B8A 02                10922 	ld	(bc),a
                          10923 ;demo.c:1715: cmd.source_x = 75;
   3B8B 21r94s16          10924 	ld	hl,#_cmd
   3B8E 36 4B             10925 	ld	(hl),#0x4B
   3B90 23                10926 	inc	hl
   3B91 36 00             10927 	ld	(hl),#0x00
                          10928 ;demo.c:1716: cmd.source_y = 50;
   3B93 21r96s16          10929 	ld	hl, #_cmd + 2
   3B96 36 32             10930 	ld	(hl),#0x32
   3B98 23                10931 	inc	hl
   3B99 36 00             10932 	ld	(hl),#0x00
                          10933 ;demo.c:1717: cmd.dest_x = 75;
   3B9B 21r98s16          10934 	ld	hl, #_cmd + 4
   3B9E 36 4B             10935 	ld	(hl),#0x4B
   3BA0 23                10936 	inc	hl
   3BA1 36 00             10937 	ld	(hl),#0x00
                          10938 ;demo.c:1718: cmd.dest_y = 256;
   3BA3 21r9As16          10939 	ld	hl, #_cmd + 6
   3BA6 36 00             10940 	ld	(hl),#0x00
   3BA8 23                10941 	inc	hl
   3BA9 36 01             10942 	ld	(hl),#0x01
                          10943 ;demo.c:1719: vdp_copier(&cmd);
   3BAB 21r94s16          10944 	ld	hl,#_cmd
   3BAE E5                10945 	push	hl
   3BAF CDr00s00          10946 	call	_vdp_copier
   3BB2 F1                10947 	pop	af
                          10948 ;demo.c:1721: cmd.size_x = 108;
   3BB3 21r9Cs16          10949 	ld	hl, #_cmd + 8
   3BB6 36 6C             10950 	ld	(hl),#0x6C
   3BB8 23                10951 	inc	hl
   3BB9 36 00             10952 	ld	(hl),#0x00
                          10953 ;demo.c:1722: cmd.size_y = 60;
   3BBB 21r9Es16          10954 	ld	hl, #_cmd + 10
   3BBE 36 3C             10955 	ld	(hl),#0x3C
   3BC0 23                10956 	inc	hl
   3BC1 36 00             10957 	ld	(hl),#0x00
                          10958 ;demo.c:1723: cmd.data = 0;
                          10959 ;demo.c:1724: cmd.argument = 0x00;
   3BC3 3E 00             10960 	ld	a,#0x00
   3BC5 32rA0s16          10961 	ld	(#_cmd + 12),a
   3BC8 32rA1s16          10962 	ld	(#_cmd + 13),a
                          10963 ;demo.c:1725: cmd.command = 0xd0; 
   3BCB 01rA2s16          10964 	ld	bc,#_cmd + 14
   3BCE 3E D0             10965 	ld	a,#0xD0
   3BD0 02                10966 	ld	(bc),a
                          10967 ;demo.c:1726: cmd.source_x = 75;
   3BD1 21r94s16          10968 	ld	hl,#_cmd
   3BD4 36 4B             10969 	ld	(hl),#0x4B
   3BD6 23                10970 	inc	hl
   3BD7 36 00             10971 	ld	(hl),#0x00
                          10972 ;demo.c:1727: cmd.source_y = 256+110;
   3BD9 21r96s16          10973 	ld	hl, #_cmd + 2
   3BDC 36 6E             10974 	ld	(hl),#0x6E
   3BDE 23                10975 	inc	hl
   3BDF 36 01             10976 	ld	(hl),#0x01
                          10977 ;demo.c:1728: cmd.dest_x = 75;
   3BE1 21r98s16          10978 	ld	hl, #_cmd + 4
   3BE4 36 4B             10979 	ld	(hl),#0x4B
   3BE6 23                10980 	inc	hl
   3BE7 36 00             10981 	ld	(hl),#0x00
                          10982 ;demo.c:1729: cmd.dest_y = 40;
   3BE9 21r9As16          10983 	ld	hl, #_cmd + 6
   3BEC 36 28             10984 	ld	(hl),#0x28
   3BEE 23                10985 	inc	hl
   3BEF 36 00             10986 	ld	(hl),#0x00
                          10987 ;demo.c:1730: vdp_copier(&cmd);
   3BF1 21r94s16          10988 	ld	hl,#_cmd
   3BF4 E5                10989 	push	hl
   3BF5 CDr00s00          10990 	call	_vdp_copier
   3BF8 F1                10991 	pop	af
                          10992 ;demo.c:1731: cmd.dest_x = 75;
   3BF9 21r98s16          10993 	ld	hl, #_cmd + 4
   3BFC 36 4B             10994 	ld	(hl),#0x4B
   3BFE 23                10995 	inc	hl
   3BFF 36 00             10996 	ld	(hl),#0x00
                          10997 ;demo.c:1732: cmd.dest_y = 100;
   3C01 21r9As16          10998 	ld	hl, #_cmd + 6
   3C04 36 64             10999 	ld	(hl),#0x64
   3C06 23                11000 	inc	hl
   3C07 36 00             11001 	ld	(hl),#0x00
                          11002 ;demo.c:1733: vdp_copier(&cmd);
   3C09 21r94s16          11003 	ld	hl,#_cmd
   3C0C E5                11004 	push	hl
   3C0D CDr00s00          11005 	call	_vdp_copier
   3C10 F1                11006 	pop	af
                          11007 ;demo.c:1735: pal_load("DSSLOGO PL5",32,0);
   3C11 21 00 00          11008 	ld	hl,#0x0000
   3C14 E5                11009 	push	hl
   3C15 3E 20             11010 	ld	a,#0x20
   3C17 F5                11011 	push	af
   3C18 33                11012 	inc	sp
   3C19 21r02s3E          11013 	ld	hl,#__str_37
   3C1C E5                11014 	push	hl
   3C1D CDrA3s09          11015 	call	_pal_load
   3C20 F1                11016 	pop	af
   3C21 F1                11017 	pop	af
   3C22 33                11018 	inc	sp
                          11019 ;demo.c:1737: scratch_clear();
   3C23 CDr90s09          11020 	call	_scratch_clear
                          11021 ;demo.c:1739: vdp_register(9,130); // 50hz,212
   3C26 21 09 82          11022 	ld	hl,#0x8209
   3C29 E5                11023 	push	hl
   3C2A CDr00s00          11024 	call	_vdp_register
   3C2D F1                11025 	pop	af
                          11026 ;demo.c:1741: install_isr(my_isr);
   3C2E 21rECs07          11027 	ld	hl,#_my_isr
   3C31 E5                11028 	push	hl
   3C32 CDr00s00          11029 	call	_install_isr
   3C35 F1                11030 	pop	af
                          11031 ;demo.c:1745: while (!quit) {
   3C36                   11032 00111$:
   3C36 AF                11033 	xor	a,a
   3C37 DD B6 FF          11034 	or	a,-1 (ix)
   3C3A C2rF5s3C          11035 	jp	NZ,00113$
                          11036 ;demo.c:1747: if (vbicount >= scenetimings[timeindex+1]) {
   3C3D 21r92s17          11037 	ld	hl,#_timeindex + 0
   3C40 4E                11038 	ld	c,(hl)
   3C41 0C                11039 	inc	c
   3C42 CB 21             11040 	sla	c
   3C44 3ErB7             11041 	ld	a,#<_scenetimings
   3C46 81                11042 	add	a,c
   3C47 6F                11043 	ld	l,a
   3C48 3Es16             11044 	ld	a,#>_scenetimings
   3C4A CE 00             11045 	adc	a,#0x00
   3C4C 67                11046 	ld	h,a
   3C4D 4E                11047 	ld	c,(hl)
   3C4E 23                11048 	inc	hl
   3C4F 46                11049 	ld	b,(hl)
   3C50 3Ar90s16          11050 	ld	a,(#_vbicount+0)
   3C53 91                11051 	sub	a,c
   3C54 3Ar91s16          11052 	ld	a,(#_vbicount+1)
   3C57 98                11053 	sbc	a,b
   3C58 FAr81s3C          11054 	jp	M,00105$
                          11055 ;demo.c:1748: sceneindex++;
   3C5B FD 21r90s17       11056 	ld	iy,#_sceneindex
   3C5F FD 34 00          11057 	inc	0 (iy)
   3C62 20 07             11058 	jr	NZ,00153$
   3C64 FD 21r90s17       11059 	ld	iy,#_sceneindex
   3C68 FD 34 01          11060 	inc	1 (iy)
   3C6B                   11061 00153$:
                          11062 ;demo.c:1749: timeindex+=2;
   3C6B 21r92s17          11063 	ld	hl,#_timeindex
   3C6E 7E                11064 	ld	a,(hl)
   3C6F C6 02             11065 	add	a,#0x02
   3C71 23                11066 	inc	hl
   3C72 2B                11067 	dec	hl
   3C73 C5                11068 	push	bc
   3C74 4F                11069 	ld	c, a
   3C75 23                11070 	inc	hl
   3C76 7E                11071 	ld	a, (hl)
   3C77 47                11072 	ld	b, a
   3C78 79                11073 	ld	a, c
   3C79 2B                11074 	dec	hl
   3C7A 77                11075 	ld	(hl), a
   3C7B 78                11076 	ld	a, b
   3C7C C1                11077 	pop	bc
   3C7D CE 00             11078 	adc	a,#0x00
   3C7F 23                11079 	inc	hl
   3C80 77                11080 	ld	(hl),a
   3C81                   11081 00105$:
                          11082 ;demo.c:1752: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   3C81 21r92s17          11083 	ld	hl,#_timeindex + 0
   3C84 4E                11084 	ld	c,(hl)
   3C85 21r93s17          11085 	ld	hl,#_timeindex + 1
   3C88 46                11086 	ld	b,(hl)
   3C89 CB 21             11087 	sla	c
   3C8B CB 10             11088 	rl	b
   3C8D 21rB7s16          11089 	ld	hl,#_scenetimings
   3C90 09                11090 	add	hl,bc
   3C91 4E                11091 	ld	c,(hl)
   3C92 23                11092 	inc	hl
   3C93 46                11093 	ld	b,(hl)
   3C94 3Ar90s16          11094 	ld	a,(#_vbicount+0)
   3C97 91                11095 	sub	a,c
   3C98 3Ar91s16          11096 	ld	a,(#_vbicount+1)
   3C9B 98                11097 	sbc	a,b
   3C9C FArE1s3C          11098 	jp	M,00107$
   3C9F 21r92s17          11099 	ld	hl,#_timeindex + 0
   3CA2 4E                11100 	ld	c,(hl)
   3CA3 0C                11101 	inc	c
   3CA4 CB 21             11102 	sla	c
   3CA6 3ErB7             11103 	ld	a,#<_scenetimings
   3CA8 81                11104 	add	a,c
   3CA9 6F                11105 	ld	l,a
   3CAA 3Es16             11106 	ld	a,#>_scenetimings
   3CAC CE 00             11107 	adc	a,#0x00
   3CAE 67                11108 	ld	h,a
   3CAF 4E                11109 	ld	c,(hl)
   3CB0 23                11110 	inc	hl
   3CB1 46                11111 	ld	b,(hl)
   3CB2 3Ar90s16          11112 	ld	a,(#_vbicount+0)
   3CB5 91                11113 	sub	a,c
   3CB6 FD 21r90s16       11114 	ld	iy,#_vbicount
   3CBA FD 7E 01          11115 	ld	a,1 (iy)
   3CBD 98                11116 	sbc	a,b
   3CBE F2rE1s3C          11117 	jp	P,00107$
                          11118 ;demo.c:1753: waitVB();
   3CC1 76                11119 		halt 
                          11120 ;demo.c:1754: scenepointers[sceneindex]();
   3CC2 21r90s17          11121 	ld	hl,#_sceneindex + 0
   3CC5 4E                11122 	ld	c,(hl)
   3CC6 FD 21r90s17       11123 	ld	iy,#_sceneindex
   3CCA FD 46 01          11124 	ld	b,1 (iy)
   3CCD CB 21             11125 	sla	c
   3CCF CB 10             11126 	rl	b
   3CD1 21rA3s16          11127 	ld	hl,#_scenepointers
   3CD4 09                11128 	add	hl,bc
   3CD5 4E                11129 	ld	c,(hl)
   3CD6 23                11130 	inc	hl
   3CD7 46                11131 	ld	b,(hl)
   3CD8 C5                11132 	push	bc
   3CD9 21rE0s3C          11133 	ld	hl,#00158$
   3CDC E5                11134 	push	hl
   3CDD 69                11135 	ld	l,c
   3CDE 60                11136 	ld	h,b
   3CDF E9                11137 	jp	(hl)
   3CE0                   11138 00158$:
   3CE0 C1                11139 	pop	bc
   3CE1                   11140 00107$:
                          11141 ;demo.c:1758: if(space())
   3CE1 21 08 01          11142 	ld	hl,#0x0108
   3CE4 E5                11143 	push	hl
   3CE5 CDr00s00          11144 	call	_ispressed
   3CE8 F1                11145 	pop	af
   3CE9 AF                11146 	xor	a,a
   3CEA B5                11147 	or	a,l
   3CEB CAr36s3C          11148 	jp	Z,00111$
                          11149 ;demo.c:1759: quit=1;
   3CEE DD 36 FF 01       11150 	ld	-1 (ix),#0x01
   3CF2 C3r36s3C          11151 	jp	00111$
   3CF5                   11152 00113$:
                          11153 ;demo.c:1762: do_quit();
   3CF5 CDrF0s37          11154 	call	_do_quit
   3CF8 DD F9             11155 	ld	sp,ix
   3CFA DD E1             11156 	pop	ix
   3CFC C9                11157 	ret
   3CFD                   11158 _main_end::
   3CFD                   11159 __str_23:
   3CFD 64 65 6D 6F 20 69 11160 	.ascii "demo init"
        6E 69 74
   3D06 0D                11161 	.db 0x0D
   3D07 0A                11162 	.db 0x0A
   3D08 0D                11163 	.db 0x0D
   3D09 0A                11164 	.db 0x0A
   3D0A 00                11165 	.db 0x00
   3D0B                   11166 __str_24:
   3D0B 6D 75 73 69 63 20 11167 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   3D18 00                11168 	.db 0x00
   3D19                   11169 __str_25:
   3D19 64 6F 6E 65 2E    11170 	.ascii "done."
   3D1E 0D                11171 	.db 0x0D
   3D1F 0A                11172 	.db 0x0A
   3D20 00                11173 	.db 0x00
   3D21                   11174 __str_26:
   3D21 64 65 74 65 63 74 11175 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   3D36 0D                11176 	.db 0x0D
   3D37 0A                11177 	.db 0x0A
   3D38 0D                11178 	.db 0x0D
   3D39 0A                11179 	.db 0x0A
   3D3A 00                11180 	.db 0x00
   3D3B                   11181 __str_27:
   3D3B 76 64 70 32 20 66 11182 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   3D56 0D                11183 	.db 0x0D
   3D57 0A                11184 	.db 0x0A
   3D58 0D                11185 	.db 0x0D
   3D59 0A                11186 	.db 0x0A
   3D5A 00                11187 	.db 0x00
   3D5B                   11188 __str_28:
   3D5B 20 76 64 70 31 20 11189 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   3D67 0D                11190 	.db 0x0D
   3D68 0A                11191 	.db 0x0A
   3D69 53 6F 72 72 79 2C 11192 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   3D97 20 56 52 41 4D 2E 11193 	.ascii " VRAM."
   3D9D 0D                11194 	.db 0x0D
   3D9E 0A                11195 	.db 0x0A
   3D9F 0D                11196 	.db 0x0D
   3DA0 0A                11197 	.db 0x0A
   3DA1 00                11198 	.db 0x00
   3DA2                   11199 __str_29:
   3DA2 54 57 49 53 54 45 11200 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   3DAD 00                11201 	.db 0x00
   3DAE                   11202 __str_30:
   3DAE 4C 46 20 20 20 20 11203 	.ascii "LF      PL5"
        20 20 50 4C 35
   3DB9 00                11204 	.db 0x00
   3DBA                   11205 __str_31:
   3DBA 42 4F 58 45 53 20 11206 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   3DC5 00                11207 	.db 0x00
   3DC6                   11208 __str_32:
   3DC6 42 55 4C 42 53 20 11209 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   3DD1 00                11210 	.db 0x00
   3DD2                   11211 __str_33:
   3DD2 42 55 4C 42 53 20 11212 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   3DDD 00                11213 	.db 0x00
   3DDE                   11214 __str_34:
   3DDE 54 57 49 53 54 45 11215 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   3DE9 00                11216 	.db 0x00
   3DEA                   11217 __str_35:
   3DEA 42 4F 58 45 53 20 11218 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   3DF5 00                11219 	.db 0x00
   3DF6                   11220 __str_36:
   3DF6 44 53 53 4C 4F 47 11221 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   3E01 00                11222 	.db 0x00
   3E02                   11223 __str_37:
   3E02 44 53 53 4C 4F 47 11224 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   3E0D 00                11225 	.db 0x00
                          11226 	.area _CODE
                          11227 	.area _CABS
