                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Mon Feb 26 23:56:52 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _tritiles
                             15 	.globl _drawtilescreen
                             16 	.globl _drawtritile
                             17 	.globl _boxes
                             18 	.globl _drawbox
                             19 	.globl _animplay
                             20 	.globl _bulbs
                             21 	.globl _twister
                             22 	.globl _font
                             23 	.globl _drawsine
                             24 	.globl _drawstr
                             25 	.globl _do_letter_tall
                             26 	.globl _do_letter
                             27 	.globl _raster_effu
                             28 	.globl _do_blocks
                             29 	.globl _do_ymmm
                             30 	.globl _fadein
                             31 	.globl _pck_load
                             32 	.globl _raw_load
                             33 	.globl _pause
                             34 	.globl _pal_load
                             35 	.globl _scratch_clear
                             36 	.globl _ge5_load
                             37 	.globl _color_isr
                             38 	.globl _my_isr
                             39 	.globl _isNthBitSet
                             40 	.globl _triframes
                             41 	.globl _tripaltick
                             42 	.globl _tripal
                             43 	.globl _tri_inited
                             44 	.globl _pbt
                             45 	.globl _pbx
                             46 	.globl _bonc
                             47 	.globl _bo
                             48 	.globl _byy
                             49 	.globl _bxx
                             50 	.globl _bt
                             51 	.globl _by
                             52 	.globl _bx
                             53 	.globl _prevby
                             54 	.globl _prevbx
                             55 	.globl _prevy
                             56 	.globl _prevx
                             57 	.globl _dbly
                             58 	.globl _buffer
                             59 	.globl _boxes_init
                             60 	.globl _anim_init
                             61 	.globl _enderdir
                             62 	.globl _ender
                             63 	.globl _ff2
                             64 	.globl _ff1
                             65 	.globl _bulbflipper
                             66 	.globl _twinited
                             67 	.globl _ff
                             68 	.globl _ly
                             69 	.globl _lx
                             70 	.globl _linenum
                             71 	.globl _flof
                             72 	.globl _btab
                             73 	.globl _bty
                             74 	.globl _btx
                             75 	.globl _bsy
                             76 	.globl _bsx
                             77 	.globl _block_init
                             78 	.globl _cc
                             79 	.globl _yofff
                             80 	.globl _cmd
                             81 	.globl _tick
                             82 	.globl _vbicount
                             83 	.globl _boxes_palette
                             84 	.globl _tf_palette
                             85 	.globl _twister_palette
                             86 	.globl _block_palette
                             87 	.globl _cur_palette
                             88 	.globl _scratch
                             89 	.globl _tf2
                             90 	.globl _tf1
                             91 	.globl _packbuffer
                             92 	.globl _tri_lookup_y
                             93 	.globl _tri_lookup_x
                             94 	.globl _sintab
                             95 	.globl _font_w
                             96 	.globl _font_y
                             97 	.globl _font_x
                             98 	.globl _tri_side2
                             99 	.globl _tri_side1
                            100 	.globl _tri_up
                            101 	.globl _tri_center
                            102 	.globl _sintabx
                            103 ;--------------------------------------------------------
                            104 ; special function registers
                            105 ;--------------------------------------------------------
                            106 ;--------------------------------------------------------
                            107 ;  ram data
                            108 ;--------------------------------------------------------
                            109 	.area _DATA
   0000                     110 _sintab::
   0000                     111 	.ds 256
   0100                     112 _tri_lookup_x::
   0100                     113 	.ds 32
   0120                     114 _tri_lookup_y::
   0120                     115 	.ds 64
   0160                     116 _packbuffer::
   0160                     117 	.ds 12000
   3040                     118 _tf1::
   3040                     119 	.ds 12000
   5F20                     120 _tf2::
   5F20                     121 	.ds 12000
   8E00                     122 _scratch::
   8E00                     123 	.ds 128
   8E80                     124 _cur_palette::
   8E80                     125 	.ds 32
   8EA0                     126 _block_palette::
   8EA0                     127 	.ds 32
   8EC0                     128 _twister_palette::
   8EC0                     129 	.ds 32
   8EE0                     130 _tf_palette::
   8EE0                     131 	.ds 32
   8F00                     132 _boxes_palette::
   8F00                     133 	.ds 32
   8F20                     134 _vbicount::
   8F20                     135 	.ds 2
   8F22                     136 _tick::
   8F22                     137 	.ds 2
   8F24                     138 _cmd::
   8F24                     139 	.ds 15
   8F33                     140 _isNthBitSet_mask_1_1:
   8F33                     141 	.ds 8
   8F3B                     142 _yofff::
   8F3B                     143 	.ds 1
   8F3C                     144 _cc::
   8F3C                     145 	.ds 1
   8F3D                     146 _flipper:
   8F3D                     147 	.ds 2
   8F3F                     148 _ymmmf:
   8F3F                     149 	.ds 2
   8F41                     150 _block_init::
   8F41                     151 	.ds 1
   8F42                     152 _bsx::
   8F42                     153 	.ds 2
   8F44                     154 _bsy::
   8F44                     155 	.ds 2
   8F46                     156 _btx::
   8F46                     157 	.ds 2
   8F48                     158 _bty::
   8F48                     159 	.ds 2
   8F4A                     160 _btab::
   8F4A                     161 	.ds 32
   8F6A                     162 _flof::
   8F6A                     163 	.ds 2
   8F6C                     164 _linenum::
   8F6C                     165 	.ds 2
   8F6E                     166 _lx::
   8F6E                     167 	.ds 1
   8F6F                     168 _ly::
   8F6F                     169 	.ds 1
   8F70                     170 _ff::
   8F70                     171 	.ds 2
   8F72                     172 _twinited::
   8F72                     173 	.ds 2
   8F74                     174 _bulbflipper::
   8F74                     175 	.ds 2
   8F76                     176 _ff1::
   8F76                     177 	.ds 2
   8F78                     178 _ff2::
   8F78                     179 	.ds 2
   8F7A                     180 _ender::
   8F7A                     181 	.ds 2
   8F7C                     182 _enderdir::
   8F7C                     183 	.ds 2
   8F7E                     184 _xo:
   8F7E                     185 	.ds 2
   8F80                     186 _yo:
   8F80                     187 	.ds 2
   8F82                     188 _po:
   8F82                     189 	.ds 2
   8F84                     190 _fffaaa:
   8F84                     191 	.ds 2
   8F86                     192 _anim_init::
   8F86                     193 	.ds 2
   8F88                     194 _boxes_init::
   8F88                     195 	.ds 1
   8F89                     196 _buffer::
   8F89                     197 	.ds 2
   8F8B                     198 _dbly::
   8F8B                     199 	.ds 2
   8F8D                     200 _prevx::
   8F8D                     201 	.ds 2
   8F8F                     202 _prevy::
   8F8F                     203 	.ds 2
   8F91                     204 _prevbx::
   8F91                     205 	.ds 2
   8F93                     206 _prevby::
   8F93                     207 	.ds 2
   8F95                     208 _bx::
   8F95                     209 	.ds 2
   8F97                     210 _by::
   8F97                     211 	.ds 2
   8F99                     212 _bt::
   8F99                     213 	.ds 2
   8F9B                     214 _bxx::
   8F9B                     215 	.ds 2
   8F9D                     216 _byy::
   8F9D                     217 	.ds 2
   8F9F                     218 _bo::
   8F9F                     219 	.ds 2
   8FA1                     220 _bonc::
   8FA1                     221 	.ds 2
   8FA3                     222 _pbx::
   8FA3                     223 	.ds 2
   8FA5                     224 _pbt::
   8FA5                     225 	.ds 2
   8FA7                     226 _tri_inited::
   8FA7                     227 	.ds 1
   8FA8                     228 _tripal::
   8FA8                     229 	.ds 9
   8FB1                     230 _tripaltick::
   8FB1                     231 	.ds 1
   8FB2                     232 _triframes::
   8FB2                     233 	.ds 2
                            234 ;--------------------------------------------------------
                            235 ; overlayable items in  ram 
                            236 ;--------------------------------------------------------
                            237 	.area _OVERLAY
                            238 ;--------------------------------------------------------
                            239 ; external initialized ram data
                            240 ;--------------------------------------------------------
                            241 ;--------------------------------------------------------
                            242 ; global & static initialisations
                            243 ;--------------------------------------------------------
                            244 	.area _HOME
                            245 	.area _GSINIT
                            246 	.area _GSFINAL
                            247 	.area _GSINIT
                            248 ;demo.c:117: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r33s8F            249 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            250 	call	__initrleblock
   0006 08                  251 	.db	8
   0007 01 02 04 08 10 20   252 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  253 	.db	0
                            254 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            255 	ld	hl,#_sintab
   0013 CDr00s00            256 	call	__initrleblock
   0016 3B                  257 	.db	59
   0017 00 03 06 09 0C 0F   258 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   259 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   260 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   261 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   262 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   263 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   264 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            265 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               266 	.db	#-5,#0x7E
   0054 01                  267 	.db	1
   0055 7F                  268 	.db	0x7F
   0056 FB 7E               269 	.db	#-5,#0x7E
   0058 75                  270 	.db	117
   0059 7D 7D 7C 7B 7B 7A   271 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   272 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   273 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   274 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   275 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   276 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   277 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   278 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   279 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   280 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   281 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   282 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   283 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   284 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      285 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               286 	.db	#-5,#0x82
   00D0 01                  287 	.db	1
   00D1 81                  288 	.db	0x81
   00D2 FB 82               289 	.db	#-5,#0x82
   00D4 3A                  290 	.db	58
   00D5 83 83 84 85 85 86   291 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   292 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   293 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   294 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   295 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   296 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   297 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               298 	.db	0xFA, 0xFD
   010F 00                  299 	.db	0
                            300 ;demo.c:96: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            301 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            302 	call	__initrleblock
   0116 E0 00               303 	.db	#-32,#0x00
   0118 00                  304 	.db	0
                            305 ;demo.c:97: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            306 	ld	hl,#_tri_lookup_y
   011C CDr00s00            307 	call	__initrleblock
   011F C0 00               308 	.db	#-64,#0x00
   0121 00                  309 	.db	0
                            310 ;demo.c:99: uint8_t packbuffer[12000] = {0};
   0122 21r60s01            311 	ld	hl,#_packbuffer
   0125 CDr00s00            312 	call	__initrleblock
   0128 81 00               313 	.db	#-127,#0x00
   012A 81 00               314 	.db	#-127,#0x00
   012C 81 00               315 	.db	#-127,#0x00
   012E 81 00               316 	.db	#-127,#0x00
   0130 81 00               317 	.db	#-127,#0x00
   0132 81 00               318 	.db	#-127,#0x00
   0134 81 00               319 	.db	#-127,#0x00
   0136 81 00               320 	.db	#-127,#0x00
   0138 81 00               321 	.db	#-127,#0x00
   013A 81 00               322 	.db	#-127,#0x00
   013C 81 00               323 	.db	#-127,#0x00
   013E 81 00               324 	.db	#-127,#0x00
   0140 81 00               325 	.db	#-127,#0x00
   0142 81 00               326 	.db	#-127,#0x00
   0144 81 00               327 	.db	#-127,#0x00
   0146 81 00               328 	.db	#-127,#0x00
   0148 81 00               329 	.db	#-127,#0x00
   014A 81 00               330 	.db	#-127,#0x00
   014C 81 00               331 	.db	#-127,#0x00
   014E 81 00               332 	.db	#-127,#0x00
   0150 81 00               333 	.db	#-127,#0x00
   0152 81 00               334 	.db	#-127,#0x00
   0154 81 00               335 	.db	#-127,#0x00
   0156 81 00               336 	.db	#-127,#0x00
   0158 81 00               337 	.db	#-127,#0x00
   015A 81 00               338 	.db	#-127,#0x00
   015C 81 00               339 	.db	#-127,#0x00
   015E 81 00               340 	.db	#-127,#0x00
   0160 81 00               341 	.db	#-127,#0x00
   0162 81 00               342 	.db	#-127,#0x00
   0164 81 00               343 	.db	#-127,#0x00
   0166 81 00               344 	.db	#-127,#0x00
   0168 81 00               345 	.db	#-127,#0x00
   016A 81 00               346 	.db	#-127,#0x00
   016C 81 00               347 	.db	#-127,#0x00
   016E 81 00               348 	.db	#-127,#0x00
   0170 81 00               349 	.db	#-127,#0x00
   0172 81 00               350 	.db	#-127,#0x00
   0174 81 00               351 	.db	#-127,#0x00
   0176 81 00               352 	.db	#-127,#0x00
   0178 81 00               353 	.db	#-127,#0x00
   017A 81 00               354 	.db	#-127,#0x00
   017C 81 00               355 	.db	#-127,#0x00
   017E 81 00               356 	.db	#-127,#0x00
   0180 81 00               357 	.db	#-127,#0x00
   0182 81 00               358 	.db	#-127,#0x00
   0184 81 00               359 	.db	#-127,#0x00
   0186 81 00               360 	.db	#-127,#0x00
   0188 81 00               361 	.db	#-127,#0x00
   018A 81 00               362 	.db	#-127,#0x00
   018C 81 00               363 	.db	#-127,#0x00
   018E 81 00               364 	.db	#-127,#0x00
   0190 81 00               365 	.db	#-127,#0x00
   0192 81 00               366 	.db	#-127,#0x00
   0194 81 00               367 	.db	#-127,#0x00
   0196 81 00               368 	.db	#-127,#0x00
   0198 81 00               369 	.db	#-127,#0x00
   019A 81 00               370 	.db	#-127,#0x00
   019C 81 00               371 	.db	#-127,#0x00
   019E 81 00               372 	.db	#-127,#0x00
   01A0 81 00               373 	.db	#-127,#0x00
   01A2 81 00               374 	.db	#-127,#0x00
   01A4 81 00               375 	.db	#-127,#0x00
   01A6 81 00               376 	.db	#-127,#0x00
   01A8 81 00               377 	.db	#-127,#0x00
   01AA 81 00               378 	.db	#-127,#0x00
   01AC 81 00               379 	.db	#-127,#0x00
   01AE 81 00               380 	.db	#-127,#0x00
   01B0 81 00               381 	.db	#-127,#0x00
   01B2 81 00               382 	.db	#-127,#0x00
   01B4 81 00               383 	.db	#-127,#0x00
   01B6 81 00               384 	.db	#-127,#0x00
   01B8 81 00               385 	.db	#-127,#0x00
   01BA 81 00               386 	.db	#-127,#0x00
   01BC 81 00               387 	.db	#-127,#0x00
   01BE 81 00               388 	.db	#-127,#0x00
   01C0 81 00               389 	.db	#-127,#0x00
   01C2 81 00               390 	.db	#-127,#0x00
   01C4 81 00               391 	.db	#-127,#0x00
   01C6 81 00               392 	.db	#-127,#0x00
   01C8 81 00               393 	.db	#-127,#0x00
   01CA 81 00               394 	.db	#-127,#0x00
   01CC 81 00               395 	.db	#-127,#0x00
   01CE 81 00               396 	.db	#-127,#0x00
   01D0 81 00               397 	.db	#-127,#0x00
   01D2 81 00               398 	.db	#-127,#0x00
   01D4 81 00               399 	.db	#-127,#0x00
   01D6 81 00               400 	.db	#-127,#0x00
   01D8 81 00               401 	.db	#-127,#0x00
   01DA 81 00               402 	.db	#-127,#0x00
   01DC 81 00               403 	.db	#-127,#0x00
   01DE 81 00               404 	.db	#-127,#0x00
   01E0 81 00               405 	.db	#-127,#0x00
   01E2 81 00               406 	.db	#-127,#0x00
   01E4 C2 00               407 	.db	#-62,#0x00
   01E6 00                  408 	.db	0
                            409 ;demo.c:101: uint8_t tf1[12000] = {0};
   01E7 21r40s30            410 	ld	hl,#_tf1
   01EA CDr00s00            411 	call	__initrleblock
   01ED 81 00               412 	.db	#-127,#0x00
   01EF 81 00               413 	.db	#-127,#0x00
   01F1 81 00               414 	.db	#-127,#0x00
   01F3 81 00               415 	.db	#-127,#0x00
   01F5 81 00               416 	.db	#-127,#0x00
   01F7 81 00               417 	.db	#-127,#0x00
   01F9 81 00               418 	.db	#-127,#0x00
   01FB 81 00               419 	.db	#-127,#0x00
   01FD 81 00               420 	.db	#-127,#0x00
   01FF 81 00               421 	.db	#-127,#0x00
   0201 81 00               422 	.db	#-127,#0x00
   0203 81 00               423 	.db	#-127,#0x00
   0205 81 00               424 	.db	#-127,#0x00
   0207 81 00               425 	.db	#-127,#0x00
   0209 81 00               426 	.db	#-127,#0x00
   020B 81 00               427 	.db	#-127,#0x00
   020D 81 00               428 	.db	#-127,#0x00
   020F 81 00               429 	.db	#-127,#0x00
   0211 81 00               430 	.db	#-127,#0x00
   0213 81 00               431 	.db	#-127,#0x00
   0215 81 00               432 	.db	#-127,#0x00
   0217 81 00               433 	.db	#-127,#0x00
   0219 81 00               434 	.db	#-127,#0x00
   021B 81 00               435 	.db	#-127,#0x00
   021D 81 00               436 	.db	#-127,#0x00
   021F 81 00               437 	.db	#-127,#0x00
   0221 81 00               438 	.db	#-127,#0x00
   0223 81 00               439 	.db	#-127,#0x00
   0225 81 00               440 	.db	#-127,#0x00
   0227 81 00               441 	.db	#-127,#0x00
   0229 81 00               442 	.db	#-127,#0x00
   022B 81 00               443 	.db	#-127,#0x00
   022D 81 00               444 	.db	#-127,#0x00
   022F 81 00               445 	.db	#-127,#0x00
   0231 81 00               446 	.db	#-127,#0x00
   0233 81 00               447 	.db	#-127,#0x00
   0235 81 00               448 	.db	#-127,#0x00
   0237 81 00               449 	.db	#-127,#0x00
   0239 81 00               450 	.db	#-127,#0x00
   023B 81 00               451 	.db	#-127,#0x00
   023D 81 00               452 	.db	#-127,#0x00
   023F 81 00               453 	.db	#-127,#0x00
   0241 81 00               454 	.db	#-127,#0x00
   0243 81 00               455 	.db	#-127,#0x00
   0245 81 00               456 	.db	#-127,#0x00
   0247 81 00               457 	.db	#-127,#0x00
   0249 81 00               458 	.db	#-127,#0x00
   024B 81 00               459 	.db	#-127,#0x00
   024D 81 00               460 	.db	#-127,#0x00
   024F 81 00               461 	.db	#-127,#0x00
   0251 81 00               462 	.db	#-127,#0x00
   0253 81 00               463 	.db	#-127,#0x00
   0255 81 00               464 	.db	#-127,#0x00
   0257 81 00               465 	.db	#-127,#0x00
   0259 81 00               466 	.db	#-127,#0x00
   025B 81 00               467 	.db	#-127,#0x00
   025D 81 00               468 	.db	#-127,#0x00
   025F 81 00               469 	.db	#-127,#0x00
   0261 81 00               470 	.db	#-127,#0x00
   0263 81 00               471 	.db	#-127,#0x00
   0265 81 00               472 	.db	#-127,#0x00
   0267 81 00               473 	.db	#-127,#0x00
   0269 81 00               474 	.db	#-127,#0x00
   026B 81 00               475 	.db	#-127,#0x00
   026D 81 00               476 	.db	#-127,#0x00
   026F 81 00               477 	.db	#-127,#0x00
   0271 81 00               478 	.db	#-127,#0x00
   0273 81 00               479 	.db	#-127,#0x00
   0275 81 00               480 	.db	#-127,#0x00
   0277 81 00               481 	.db	#-127,#0x00
   0279 81 00               482 	.db	#-127,#0x00
   027B 81 00               483 	.db	#-127,#0x00
   027D 81 00               484 	.db	#-127,#0x00
   027F 81 00               485 	.db	#-127,#0x00
   0281 81 00               486 	.db	#-127,#0x00
   0283 81 00               487 	.db	#-127,#0x00
   0285 81 00               488 	.db	#-127,#0x00
   0287 81 00               489 	.db	#-127,#0x00
   0289 81 00               490 	.db	#-127,#0x00
   028B 81 00               491 	.db	#-127,#0x00
   028D 81 00               492 	.db	#-127,#0x00
   028F 81 00               493 	.db	#-127,#0x00
   0291 81 00               494 	.db	#-127,#0x00
   0293 81 00               495 	.db	#-127,#0x00
   0295 81 00               496 	.db	#-127,#0x00
   0297 81 00               497 	.db	#-127,#0x00
   0299 81 00               498 	.db	#-127,#0x00
   029B 81 00               499 	.db	#-127,#0x00
   029D 81 00               500 	.db	#-127,#0x00
   029F 81 00               501 	.db	#-127,#0x00
   02A1 81 00               502 	.db	#-127,#0x00
   02A3 81 00               503 	.db	#-127,#0x00
   02A5 81 00               504 	.db	#-127,#0x00
   02A7 81 00               505 	.db	#-127,#0x00
   02A9 C2 00               506 	.db	#-62,#0x00
   02AB 00                  507 	.db	0
                            508 ;demo.c:102: uint8_t tf2[12000] = {0};
   02AC 21r20s5F            509 	ld	hl,#_tf2
   02AF CDr00s00            510 	call	__initrleblock
   02B2 81 00               511 	.db	#-127,#0x00
   02B4 81 00               512 	.db	#-127,#0x00
   02B6 81 00               513 	.db	#-127,#0x00
   02B8 81 00               514 	.db	#-127,#0x00
   02BA 81 00               515 	.db	#-127,#0x00
   02BC 81 00               516 	.db	#-127,#0x00
   02BE 81 00               517 	.db	#-127,#0x00
   02C0 81 00               518 	.db	#-127,#0x00
   02C2 81 00               519 	.db	#-127,#0x00
   02C4 81 00               520 	.db	#-127,#0x00
   02C6 81 00               521 	.db	#-127,#0x00
   02C8 81 00               522 	.db	#-127,#0x00
   02CA 81 00               523 	.db	#-127,#0x00
   02CC 81 00               524 	.db	#-127,#0x00
   02CE 81 00               525 	.db	#-127,#0x00
   02D0 81 00               526 	.db	#-127,#0x00
   02D2 81 00               527 	.db	#-127,#0x00
   02D4 81 00               528 	.db	#-127,#0x00
   02D6 81 00               529 	.db	#-127,#0x00
   02D8 81 00               530 	.db	#-127,#0x00
   02DA 81 00               531 	.db	#-127,#0x00
   02DC 81 00               532 	.db	#-127,#0x00
   02DE 81 00               533 	.db	#-127,#0x00
   02E0 81 00               534 	.db	#-127,#0x00
   02E2 81 00               535 	.db	#-127,#0x00
   02E4 81 00               536 	.db	#-127,#0x00
   02E6 81 00               537 	.db	#-127,#0x00
   02E8 81 00               538 	.db	#-127,#0x00
   02EA 81 00               539 	.db	#-127,#0x00
   02EC 81 00               540 	.db	#-127,#0x00
   02EE 81 00               541 	.db	#-127,#0x00
   02F0 81 00               542 	.db	#-127,#0x00
   02F2 81 00               543 	.db	#-127,#0x00
   02F4 81 00               544 	.db	#-127,#0x00
   02F6 81 00               545 	.db	#-127,#0x00
   02F8 81 00               546 	.db	#-127,#0x00
   02FA 81 00               547 	.db	#-127,#0x00
   02FC 81 00               548 	.db	#-127,#0x00
   02FE 81 00               549 	.db	#-127,#0x00
   0300 81 00               550 	.db	#-127,#0x00
   0302 81 00               551 	.db	#-127,#0x00
   0304 81 00               552 	.db	#-127,#0x00
   0306 81 00               553 	.db	#-127,#0x00
   0308 81 00               554 	.db	#-127,#0x00
   030A 81 00               555 	.db	#-127,#0x00
   030C 81 00               556 	.db	#-127,#0x00
   030E 81 00               557 	.db	#-127,#0x00
   0310 81 00               558 	.db	#-127,#0x00
   0312 81 00               559 	.db	#-127,#0x00
   0314 81 00               560 	.db	#-127,#0x00
   0316 81 00               561 	.db	#-127,#0x00
   0318 81 00               562 	.db	#-127,#0x00
   031A 81 00               563 	.db	#-127,#0x00
   031C 81 00               564 	.db	#-127,#0x00
   031E 81 00               565 	.db	#-127,#0x00
   0320 81 00               566 	.db	#-127,#0x00
   0322 81 00               567 	.db	#-127,#0x00
   0324 81 00               568 	.db	#-127,#0x00
   0326 81 00               569 	.db	#-127,#0x00
   0328 81 00               570 	.db	#-127,#0x00
   032A 81 00               571 	.db	#-127,#0x00
   032C 81 00               572 	.db	#-127,#0x00
   032E 81 00               573 	.db	#-127,#0x00
   0330 81 00               574 	.db	#-127,#0x00
   0332 81 00               575 	.db	#-127,#0x00
   0334 81 00               576 	.db	#-127,#0x00
   0336 81 00               577 	.db	#-127,#0x00
   0338 81 00               578 	.db	#-127,#0x00
   033A 81 00               579 	.db	#-127,#0x00
   033C 81 00               580 	.db	#-127,#0x00
   033E 81 00               581 	.db	#-127,#0x00
   0340 81 00               582 	.db	#-127,#0x00
   0342 81 00               583 	.db	#-127,#0x00
   0344 81 00               584 	.db	#-127,#0x00
   0346 81 00               585 	.db	#-127,#0x00
   0348 81 00               586 	.db	#-127,#0x00
   034A 81 00               587 	.db	#-127,#0x00
   034C 81 00               588 	.db	#-127,#0x00
   034E 81 00               589 	.db	#-127,#0x00
   0350 81 00               590 	.db	#-127,#0x00
   0352 81 00               591 	.db	#-127,#0x00
   0354 81 00               592 	.db	#-127,#0x00
   0356 81 00               593 	.db	#-127,#0x00
   0358 81 00               594 	.db	#-127,#0x00
   035A 81 00               595 	.db	#-127,#0x00
   035C 81 00               596 	.db	#-127,#0x00
   035E 81 00               597 	.db	#-127,#0x00
   0360 81 00               598 	.db	#-127,#0x00
   0362 81 00               599 	.db	#-127,#0x00
   0364 81 00               600 	.db	#-127,#0x00
   0366 81 00               601 	.db	#-127,#0x00
   0368 81 00               602 	.db	#-127,#0x00
   036A 81 00               603 	.db	#-127,#0x00
   036C 81 00               604 	.db	#-127,#0x00
   036E C2 00               605 	.db	#-62,#0x00
   0370 00                  606 	.db	0
                            607 ;demo.c:111: volatile int vbicount=0;
   0371 FD 21r20s8F         608 	ld	iy,#_vbicount
   0375 FD 36 00 00         609 	ld	0 (iy),#0x00
   0379 FD 21r20s8F         610 	ld	iy,#_vbicount
   037D FD 36 01 00         611 	ld	1 (iy),#0x00
                            612 ;demo.c:112: volatile int tick=0;
   0381 FD 21r22s8F         613 	ld	iy,#_tick
   0385 FD 36 00 00         614 	ld	0 (iy),#0x00
   0389 FD 21r22s8F         615 	ld	iy,#_tick
   038D FD 36 01 00         616 	ld	1 (iy),#0x00
                            617 ;demo.c:312: uint8_t yofff = 0;
   0391 FD 21r3Bs8F         618 	ld	iy,#_yofff
   0395 FD 36 00 00         619 	ld	0 (iy),#0x00
                            620 ;demo.c:313: uint8_t cc = 0;
   0399 FD 21r3Cs8F         621 	ld	iy,#_cc
   039D FD 36 00 00         622 	ld	0 (iy),#0x00
                            623 ;demo.c:314: static int flipper = 0;
   03A1 FD 21r3Ds8F         624 	ld	iy,#_flipper
   03A5 FD 36 00 00         625 	ld	0 (iy),#0x00
   03A9 FD 21r3Ds8F         626 	ld	iy,#_flipper
   03AD FD 36 01 00         627 	ld	1 (iy),#0x00
                            628 ;demo.c:315: static int ymmmf = 0;
   03B1 FD 21r3Fs8F         629 	ld	iy,#_ymmmf
   03B5 FD 36 00 00         630 	ld	0 (iy),#0x00
   03B9 FD 21r3Fs8F         631 	ld	iy,#_ymmmf
   03BD FD 36 01 00         632 	ld	1 (iy),#0x00
                            633 ;demo.c:346: char block_init = 0;
   03C1 FD 21r41s8F         634 	ld	iy,#_block_init
   03C5 FD 36 00 00         635 	ld	0 (iy),#0x00
                            636 ;demo.c:348: int bsx = 0;
   03C9 FD 21r42s8F         637 	ld	iy,#_bsx
   03CD FD 36 00 00         638 	ld	0 (iy),#0x00
   03D1 FD 21r42s8F         639 	ld	iy,#_bsx
   03D5 FD 36 01 00         640 	ld	1 (iy),#0x00
                            641 ;demo.c:349: int bsy = 0;
   03D9 FD 21r44s8F         642 	ld	iy,#_bsy
   03DD FD 36 00 00         643 	ld	0 (iy),#0x00
   03E1 FD 21r44s8F         644 	ld	iy,#_bsy
   03E5 FD 36 01 00         645 	ld	1 (iy),#0x00
                            646 ;demo.c:350: int btx = 0;
   03E9 FD 21r46s8F         647 	ld	iy,#_btx
   03ED FD 36 00 00         648 	ld	0 (iy),#0x00
   03F1 FD 21r46s8F         649 	ld	iy,#_btx
   03F5 FD 36 01 00         650 	ld	1 (iy),#0x00
                            651 ;demo.c:351: int bty = 0;
   03F9 FD 21r48s8F         652 	ld	iy,#_bty
   03FD FD 36 00 00         653 	ld	0 (iy),#0x00
   0401 FD 21r48s8F         654 	ld	iy,#_bty
   0405 FD 36 01 00         655 	ld	1 (iy),#0x00
                            656 ;demo.c:353: int btab[16] = {0};
   0409 21r4As8F            657 	ld	hl,#_btab
   040C CDr00s00            658 	call	__initrleblock
   040F E0 00               659 	.db	#-32,#0x00
   0411 00                  660 	.db	0
                            661 ;demo.c:355: int flof = 0;
   0412 FD 21r6As8F         662 	ld	iy,#_flof
   0416 FD 36 00 00         663 	ld	0 (iy),#0x00
   041A FD 21r6As8F         664 	ld	iy,#_flof
   041E FD 36 01 00         665 	ld	1 (iy),#0x00
                            666 ;demo.c:404: int linenum = 0;
   0422 FD 21r6Cs8F         667 	ld	iy,#_linenum
   0426 FD 36 00 00         668 	ld	0 (iy),#0x00
   042A FD 21r6Cs8F         669 	ld	iy,#_linenum
   042E FD 36 01 00         670 	ld	1 (iy),#0x00
                            671 ;demo.c:462: uint8_t lx = 0;
   0432 FD 21r6Es8F         672 	ld	iy,#_lx
   0436 FD 36 00 00         673 	ld	0 (iy),#0x00
                            674 ;demo.c:463: uint8_t ly = 0;
   043A FD 21r6Fs8F         675 	ld	iy,#_ly
   043E FD 36 00 00         676 	ld	0 (iy),#0x00
                            677 ;demo.c:526: int ff = 0;
   0442 FD 21r70s8F         678 	ld	iy,#_ff
   0446 FD 36 00 00         679 	ld	0 (iy),#0x00
   044A FD 21r70s8F         680 	ld	iy,#_ff
   044E FD 36 01 00         681 	ld	1 (iy),#0x00
                            682 ;demo.c:527: int twinited = 0;
   0452 FD 21r72s8F         683 	ld	iy,#_twinited
   0456 FD 36 00 00         684 	ld	0 (iy),#0x00
   045A FD 21r72s8F         685 	ld	iy,#_twinited
   045E FD 36 01 00         686 	ld	1 (iy),#0x00
                            687 ;demo.c:577: int bulbflipper = 1;
   0462 FD 21r74s8F         688 	ld	iy,#_bulbflipper
   0466 FD 36 00 01         689 	ld	0 (iy),#0x01
   046A FD 21r74s8F         690 	ld	iy,#_bulbflipper
   046E FD 36 01 00         691 	ld	1 (iy),#0x00
                            692 ;demo.c:579: int ff1,ff2 = 0;
   0472 FD 21r78s8F         693 	ld	iy,#_ff2
   0476 FD 36 00 00         694 	ld	0 (iy),#0x00
   047A FD 21r78s8F         695 	ld	iy,#_ff2
   047E FD 36 01 00         696 	ld	1 (iy),#0x00
                            697 ;demo.c:580: int ender = 212;
   0482 FD 21r7As8F         698 	ld	iy,#_ender
   0486 FD 36 00 D4         699 	ld	0 (iy),#0xD4
   048A FD 21r7As8F         700 	ld	iy,#_ender
   048E FD 36 01 00         701 	ld	1 (iy),#0x00
                            702 ;demo.c:581: int enderdir = -1;
   0492 FD 21r7Cs8F         703 	ld	iy,#_enderdir
   0496 FD 36 00 FF         704 	ld	0 (iy),#0xFF
   049A FD 21r7Cs8F         705 	ld	iy,#_enderdir
   049E FD 36 01 FF         706 	ld	1 (iy),#0xFF
                            707 ;demo.c:636: static int xo = 0;
   04A2 FD 21r7Es8F         708 	ld	iy,#_xo
   04A6 FD 36 00 00         709 	ld	0 (iy),#0x00
   04AA FD 21r7Es8F         710 	ld	iy,#_xo
   04AE FD 36 01 00         711 	ld	1 (iy),#0x00
                            712 ;demo.c:637: static int yo = 0;
   04B2 FD 21r80s8F         713 	ld	iy,#_yo
   04B6 FD 36 00 00         714 	ld	0 (iy),#0x00
   04BA FD 21r80s8F         715 	ld	iy,#_yo
   04BE FD 36 01 00         716 	ld	1 (iy),#0x00
                            717 ;demo.c:638: static int po = 0;
   04C2 FD 21r82s8F         718 	ld	iy,#_po
   04C6 FD 36 00 00         719 	ld	0 (iy),#0x00
   04CA FD 21r82s8F         720 	ld	iy,#_po
   04CE FD 36 01 00         721 	ld	1 (iy),#0x00
                            722 ;demo.c:639: static int fffaaa = 0;
   04D2 FD 21r84s8F         723 	ld	iy,#_fffaaa
   04D6 FD 36 00 00         724 	ld	0 (iy),#0x00
   04DA FD 21r84s8F         725 	ld	iy,#_fffaaa
   04DE FD 36 01 00         726 	ld	1 (iy),#0x00
                            727 ;demo.c:641: int anim_init = 0;
   04E2 FD 21r86s8F         728 	ld	iy,#_anim_init
   04E6 FD 36 00 00         729 	ld	0 (iy),#0x00
   04EA FD 21r86s8F         730 	ld	iy,#_anim_init
   04EE FD 36 01 00         731 	ld	1 (iy),#0x00
                            732 ;demo.c:695: uint8_t boxes_init = 0;
   04F2 FD 21r88s8F         733 	ld	iy,#_boxes_init
   04F6 FD 36 00 00         734 	ld	0 (iy),#0x00
                            735 ;demo.c:696: int buffer = 1;
   04FA FD 21r89s8F         736 	ld	iy,#_buffer
   04FE FD 36 00 01         737 	ld	0 (iy),#0x01
   0502 FD 21r89s8F         738 	ld	iy,#_buffer
   0506 FD 36 01 00         739 	ld	1 (iy),#0x00
                            740 ;demo.c:697: int dbly = 0;
   050A FD 21r8Bs8F         741 	ld	iy,#_dbly
   050E FD 36 00 00         742 	ld	0 (iy),#0x00
   0512 FD 21r8Bs8F         743 	ld	iy,#_dbly
   0516 FD 36 01 00         744 	ld	1 (iy),#0x00
                            745 ;demo.c:698: int prevx = -1;
   051A FD 21r8Ds8F         746 	ld	iy,#_prevx
   051E FD 36 00 FF         747 	ld	0 (iy),#0xFF
   0522 FD 21r8Ds8F         748 	ld	iy,#_prevx
   0526 FD 36 01 FF         749 	ld	1 (iy),#0xFF
                            750 ;demo.c:723: int bx = 256-42;
   052A FD 21r95s8F         751 	ld	iy,#_bx
   052E FD 36 00 D6         752 	ld	0 (iy),#0xD6
   0532 FD 21r95s8F         753 	ld	iy,#_bx
   0536 FD 36 01 00         754 	ld	1 (iy),#0x00
                            755 ;demo.c:724: int by = 84;
   053A FD 21r97s8F         756 	ld	iy,#_by
   053E FD 36 00 54         757 	ld	0 (iy),#0x54
   0542 FD 21r97s8F         758 	ld	iy,#_by
   0546 FD 36 01 00         759 	ld	1 (iy),#0x00
                            760 ;demo.c:725: int bt = 0;
   054A FD 21r99s8F         761 	ld	iy,#_bt
   054E FD 36 00 00         762 	ld	0 (iy),#0x00
   0552 FD 21r99s8F         763 	ld	iy,#_bt
   0556 FD 36 01 00         764 	ld	1 (iy),#0x00
                            765 ;demo.c:726: int bxx = 0;
   055A FD 21r9Bs8F         766 	ld	iy,#_bxx
   055E FD 36 00 00         767 	ld	0 (iy),#0x00
   0562 FD 21r9Bs8F         768 	ld	iy,#_bxx
   0566 FD 36 01 00         769 	ld	1 (iy),#0x00
                            770 ;demo.c:727: int byy = 0;
   056A FD 21r9Ds8F         771 	ld	iy,#_byy
   056E FD 36 00 00         772 	ld	0 (iy),#0x00
   0572 FD 21r9Ds8F         773 	ld	iy,#_byy
   0576 FD 36 01 00         774 	ld	1 (iy),#0x00
                            775 ;demo.c:728: int bo = 0;
   057A FD 21r9Fs8F         776 	ld	iy,#_bo
   057E FD 36 00 00         777 	ld	0 (iy),#0x00
   0582 FD 21r9Fs8F         778 	ld	iy,#_bo
   0586 FD 36 01 00         779 	ld	1 (iy),#0x00
                            780 ;demo.c:730: int bonc = 0;
   058A FD 21rA1s8F         781 	ld	iy,#_bonc
   058E FD 36 00 00         782 	ld	0 (iy),#0x00
   0592 FD 21rA1s8F         783 	ld	iy,#_bonc
   0596 FD 36 01 00         784 	ld	1 (iy),#0x00
                            785 ;demo.c:731: int pbx = 0;
   059A FD 21rA3s8F         786 	ld	iy,#_pbx
   059E FD 36 00 00         787 	ld	0 (iy),#0x00
   05A2 FD 21rA3s8F         788 	ld	iy,#_pbx
   05A6 FD 36 01 00         789 	ld	1 (iy),#0x00
                            790 ;demo.c:732: int pbt = 0;
   05AA FD 21rA5s8F         791 	ld	iy,#_pbt
   05AE FD 36 00 00         792 	ld	0 (iy),#0x00
   05B2 FD 21rA5s8F         793 	ld	iy,#_pbt
   05B6 FD 36 01 00         794 	ld	1 (iy),#0x00
                            795 ;demo.c:834: uint8_t tri_inited = 0;
   05BA FD 21rA7s8F         796 	ld	iy,#_tri_inited
   05BE FD 36 00 00         797 	ld	0 (iy),#0x00
                            798 ;demo.c:862: char tripal[9] = {
   05C2 21rA8s8F            799 	ld	hl,#_tripal
   05C5 CDr00s00            800 	call	__initrleblock
   05C8 09                  801 	.db	9
   05C9 02 02 01 01 02 03   802 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   05D1 02                  803 	.db	0x02
   05D2 00                  804 	.db	0
                            805 ;demo.c:868: uint8_t tripaltick = 0;
   05D3 FD 21rB1s8F         806 	ld	iy,#_tripaltick
   05D7 FD 36 00 00         807 	ld	0 (iy),#0x00
                            808 ;demo.c:870: int triframes = 0;
   05DB FD 21rB2s8F         809 	ld	iy,#_triframes
   05DF FD 36 00 00         810 	ld	0 (iy),#0x00
   05E3 FD 21rB2s8F         811 	ld	iy,#_triframes
   05E7 FD 36 01 00         812 	ld	1 (iy),#0x00
                            813 ;--------------------------------------------------------
                            814 ; Home
                            815 ;--------------------------------------------------------
                            816 	.area _HOME
                            817 	.area _HOME
                            818 ;--------------------------------------------------------
                            819 ; code
                            820 ;--------------------------------------------------------
                            821 	.area _CODE
                            822 ;demo.c:116: int isNthBitSet (unsigned char c, int n) {
                            823 ;	---------------------------------
                            824 ; Function isNthBitSet
                            825 ; ---------------------------------
   0000                     826 _isNthBitSet_start::
   0000                     827 _isNthBitSet:
   0000 DD E5               828 	push	ix
   0002 DD 21 00 00         829 	ld	ix,#0
   0006 DD 39               830 	add	ix,sp
                            831 ;demo.c:118: return ((c & mask[n]) != 0);
   0008 3Er33               832 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            833 	add	a,5 (ix)
   000D 4F                  834 	ld	c,a
   000E 3Es8F               835 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            836 	adc	a,6 (ix)
   0013 47                  837 	ld	b,a
   0014 0A                  838 	ld	a,(bc)
   0015 DD A6 04            839 	and	a,4 (ix)
   0018 20 04               840 	jr	NZ,00103$
   001A 3E 01               841 	ld	a,#0x01
   001C 18 01               842 	jr	00104$
   001E                     843 00103$:
   001E AF                  844 	xor	a,a
   001F                     845 00104$:
   001F B7                  846 	or	a,a
   0020 D6 01               847 	sub	a,#0x01
   0022 3E 00               848 	ld	a,#0x00
   0024 17                  849 	rla
   0025 4F                  850 	ld	c,a
   0026 69                  851 	ld	l,c
   0027 26 00               852 	ld	h,#0x00
   0029 DD E1               853 	pop	ix
   002B C9                  854 	ret
   002C                     855 _isNthBitSet_end::
   002C                     856 _sintabx:
   002C 78 00               857 	.dw #0x0078
   002E 7A 00               858 	.dw #0x007A
   0030 7D 00               859 	.dw #0x007D
   0032 80 00               860 	.dw #0x0080
   0034 83 00               861 	.dw #0x0083
   0036 86 00               862 	.dw #0x0086
   0038 89 00               863 	.dw #0x0089
   003A 8C 00               864 	.dw #0x008C
   003C 8F 00               865 	.dw #0x008F
   003E 92 00               866 	.dw #0x0092
   0040 95 00               867 	.dw #0x0095
   0042 98 00               868 	.dw #0x0098
   0044 9A 00               869 	.dw #0x009A
   0046 9D 00               870 	.dw #0x009D
   0048 A0 00               871 	.dw #0x00A0
   004A A3 00               872 	.dw #0x00A3
   004C A5 00               873 	.dw #0x00A5
   004E A8 00               874 	.dw #0x00A8
   0050 AB 00               875 	.dw #0x00AB
   0052 AD 00               876 	.dw #0x00AD
   0054 B0 00               877 	.dw #0x00B0
   0056 B3 00               878 	.dw #0x00B3
   0058 B5 00               879 	.dw #0x00B5
   005A B8 00               880 	.dw #0x00B8
   005C BA 00               881 	.dw #0x00BA
   005E BD 00               882 	.dw #0x00BD
   0060 BF 00               883 	.dw #0x00BF
   0062 C1 00               884 	.dw #0x00C1
   0064 C4 00               885 	.dw #0x00C4
   0066 C6 00               886 	.dw #0x00C6
   0068 C8 00               887 	.dw #0x00C8
   006A CA 00               888 	.dw #0x00CA
   006C CC 00               889 	.dw #0x00CC
   006E CE 00               890 	.dw #0x00CE
   0070 D0 00               891 	.dw #0x00D0
   0072 D2 00               892 	.dw #0x00D2
   0074 D4 00               893 	.dw #0x00D4
   0076 D6 00               894 	.dw #0x00D6
   0078 D8 00               895 	.dw #0x00D8
   007A DA 00               896 	.dw #0x00DA
   007C DB 00               897 	.dw #0x00DB
   007E DD 00               898 	.dw #0x00DD
   0080 DE 00               899 	.dw #0x00DE
   0082 E0 00               900 	.dw #0x00E0
   0084 E1 00               901 	.dw #0x00E1
   0086 E3 00               902 	.dw #0x00E3
   0088 E4 00               903 	.dw #0x00E4
   008A E5 00               904 	.dw #0x00E5
   008C E6 00               905 	.dw #0x00E6
   008E E7 00               906 	.dw #0x00E7
   0090 E8 00               907 	.dw #0x00E8
   0092 E9 00               908 	.dw #0x00E9
   0094 EA 00               909 	.dw #0x00EA
   0096 EB 00               910 	.dw #0x00EB
   0098 EC 00               911 	.dw #0x00EC
   009A ED 00               912 	.dw #0x00ED
   009C ED 00               913 	.dw #0x00ED
   009E EE 00               914 	.dw #0x00EE
   00A0 EE 00               915 	.dw #0x00EE
   00A2 EF 00               916 	.dw #0x00EF
   00A4 EF 00               917 	.dw #0x00EF
   00A6 EF 00               918 	.dw #0x00EF
   00A8 EF 00               919 	.dw #0x00EF
   00AA EF 00               920 	.dw #0x00EF
   00AC F0 00               921 	.dw #0x00F0
   00AE EF 00               922 	.dw #0x00EF
   00B0 EF 00               923 	.dw #0x00EF
   00B2 EF 00               924 	.dw #0x00EF
   00B4 EF 00               925 	.dw #0x00EF
   00B6 EF 00               926 	.dw #0x00EF
   00B8 EE 00               927 	.dw #0x00EE
   00BA EE 00               928 	.dw #0x00EE
   00BC ED 00               929 	.dw #0x00ED
   00BE ED 00               930 	.dw #0x00ED
   00C0 EC 00               931 	.dw #0x00EC
   00C2 EB 00               932 	.dw #0x00EB
   00C4 EA 00               933 	.dw #0x00EA
   00C6 E9 00               934 	.dw #0x00E9
   00C8 E8 00               935 	.dw #0x00E8
   00CA E7 00               936 	.dw #0x00E7
   00CC E6 00               937 	.dw #0x00E6
   00CE E5 00               938 	.dw #0x00E5
   00D0 E4 00               939 	.dw #0x00E4
   00D2 E3 00               940 	.dw #0x00E3
   00D4 E1 00               941 	.dw #0x00E1
   00D6 E0 00               942 	.dw #0x00E0
   00D8 DE 00               943 	.dw #0x00DE
   00DA DD 00               944 	.dw #0x00DD
   00DC DB 00               945 	.dw #0x00DB
   00DE DA 00               946 	.dw #0x00DA
   00E0 D8 00               947 	.dw #0x00D8
   00E2 D6 00               948 	.dw #0x00D6
   00E4 D4 00               949 	.dw #0x00D4
   00E6 D2 00               950 	.dw #0x00D2
   00E8 D0 00               951 	.dw #0x00D0
   00EA CE 00               952 	.dw #0x00CE
   00EC CC 00               953 	.dw #0x00CC
   00EE CA 00               954 	.dw #0x00CA
   00F0 C8 00               955 	.dw #0x00C8
   00F2 C6 00               956 	.dw #0x00C6
   00F4 C4 00               957 	.dw #0x00C4
   00F6 C1 00               958 	.dw #0x00C1
   00F8 BF 00               959 	.dw #0x00BF
   00FA BD 00               960 	.dw #0x00BD
   00FC BA 00               961 	.dw #0x00BA
   00FE B8 00               962 	.dw #0x00B8
   0100 B5 00               963 	.dw #0x00B5
   0102 B3 00               964 	.dw #0x00B3
   0104 B0 00               965 	.dw #0x00B0
   0106 AD 00               966 	.dw #0x00AD
   0108 AB 00               967 	.dw #0x00AB
   010A A8 00               968 	.dw #0x00A8
   010C A5 00               969 	.dw #0x00A5
   010E A3 00               970 	.dw #0x00A3
   0110 A0 00               971 	.dw #0x00A0
   0112 9D 00               972 	.dw #0x009D
   0114 9A 00               973 	.dw #0x009A
   0116 98 00               974 	.dw #0x0098
   0118 95 00               975 	.dw #0x0095
   011A 92 00               976 	.dw #0x0092
   011C 8F 00               977 	.dw #0x008F
   011E 8C 00               978 	.dw #0x008C
   0120 89 00               979 	.dw #0x0089
   0122 86 00               980 	.dw #0x0086
   0124 83 00               981 	.dw #0x0083
   0126 80 00               982 	.dw #0x0080
   0128 7D 00               983 	.dw #0x007D
   012A 7A 00               984 	.dw #0x007A
   012C 78 00               985 	.dw #0x0078
   012E 75 00               986 	.dw #0x0075
   0130 72 00               987 	.dw #0x0072
   0132 6F 00               988 	.dw #0x006F
   0134 6C 00               989 	.dw #0x006C
   0136 69 00               990 	.dw #0x0069
   0138 66 00               991 	.dw #0x0066
   013A 63 00               992 	.dw #0x0063
   013C 60 00               993 	.dw #0x0060
   013E 5D 00               994 	.dw #0x005D
   0140 5A 00               995 	.dw #0x005A
   0142 57 00               996 	.dw #0x0057
   0144 55 00               997 	.dw #0x0055
   0146 52 00               998 	.dw #0x0052
   0148 4F 00               999 	.dw #0x004F
   014A 4C 00              1000 	.dw #0x004C
   014C 4A 00              1001 	.dw #0x004A
   014E 47 00              1002 	.dw #0x0047
   0150 44 00              1003 	.dw #0x0044
   0152 42 00              1004 	.dw #0x0042
   0154 3F 00              1005 	.dw #0x003F
   0156 3C 00              1006 	.dw #0x003C
   0158 3A 00              1007 	.dw #0x003A
   015A 37 00              1008 	.dw #0x0037
   015C 35 00              1009 	.dw #0x0035
   015E 32 00              1010 	.dw #0x0032
   0160 30 00              1011 	.dw #0x0030
   0162 2E 00              1012 	.dw #0x002E
   0164 2B 00              1013 	.dw #0x002B
   0166 29 00              1014 	.dw #0x0029
   0168 27 00              1015 	.dw #0x0027
   016A 25 00              1016 	.dw #0x0025
   016C 23 00              1017 	.dw #0x0023
   016E 21 00              1018 	.dw #0x0021
   0170 1F 00              1019 	.dw #0x001F
   0172 1D 00              1020 	.dw #0x001D
   0174 1B 00              1021 	.dw #0x001B
   0176 19 00              1022 	.dw #0x0019
   0178 17 00              1023 	.dw #0x0017
   017A 15 00              1024 	.dw #0x0015
   017C 14 00              1025 	.dw #0x0014
   017E 12 00              1026 	.dw #0x0012
   0180 11 00              1027 	.dw #0x0011
   0182 0F 00              1028 	.dw #0x000F
   0184 0E 00              1029 	.dw #0x000E
   0186 0C 00              1030 	.dw #0x000C
   0188 0B 00              1031 	.dw #0x000B
   018A 0A 00              1032 	.dw #0x000A
   018C 09 00              1033 	.dw #0x0009
   018E 08 00              1034 	.dw #0x0008
   0190 07 00              1035 	.dw #0x0007
   0192 06 00              1036 	.dw #0x0006
   0194 05 00              1037 	.dw #0x0005
   0196 04 00              1038 	.dw #0x0004
   0198 03 00              1039 	.dw #0x0003
   019A 02 00              1040 	.dw #0x0002
   019C 02 00              1041 	.dw #0x0002
   019E 01 00              1042 	.dw #0x0001
   01A0 01 00              1043 	.dw #0x0001
   01A2 00 00              1044 	.dw #0x0000
   01A4 00 00              1045 	.dw #0x0000
   01A6 00 00              1046 	.dw #0x0000
   01A8 00 00              1047 	.dw #0x0000
   01AA 00 00              1048 	.dw #0x0000
   01AC 00 00              1049 	.dw #0x0000
   01AE 00 00              1050 	.dw #0x0000
   01B0 00 00              1051 	.dw #0x0000
   01B2 00 00              1052 	.dw #0x0000
   01B4 00 00              1053 	.dw #0x0000
   01B6 00 00              1054 	.dw #0x0000
   01B8 01 00              1055 	.dw #0x0001
   01BA 01 00              1056 	.dw #0x0001
   01BC 02 00              1057 	.dw #0x0002
   01BE 02 00              1058 	.dw #0x0002
   01C0 03 00              1059 	.dw #0x0003
   01C2 04 00              1060 	.dw #0x0004
   01C4 05 00              1061 	.dw #0x0005
   01C6 06 00              1062 	.dw #0x0006
   01C8 07 00              1063 	.dw #0x0007
   01CA 08 00              1064 	.dw #0x0008
   01CC 09 00              1065 	.dw #0x0009
   01CE 0A 00              1066 	.dw #0x000A
   01D0 0B 00              1067 	.dw #0x000B
   01D2 0C 00              1068 	.dw #0x000C
   01D4 0E 00              1069 	.dw #0x000E
   01D6 0F 00              1070 	.dw #0x000F
   01D8 11 00              1071 	.dw #0x0011
   01DA 12 00              1072 	.dw #0x0012
   01DC 14 00              1073 	.dw #0x0014
   01DE 15 00              1074 	.dw #0x0015
   01E0 17 00              1075 	.dw #0x0017
   01E2 19 00              1076 	.dw #0x0019
   01E4 1B 00              1077 	.dw #0x001B
   01E6 1D 00              1078 	.dw #0x001D
   01E8 1F 00              1079 	.dw #0x001F
   01EA 21 00              1080 	.dw #0x0021
   01EC 23 00              1081 	.dw #0x0023
   01EE 25 00              1082 	.dw #0x0025
   01F0 27 00              1083 	.dw #0x0027
   01F2 29 00              1084 	.dw #0x0029
   01F4 2B 00              1085 	.dw #0x002B
   01F6 2E 00              1086 	.dw #0x002E
   01F8 30 00              1087 	.dw #0x0030
   01FA 32 00              1088 	.dw #0x0032
   01FC 35 00              1089 	.dw #0x0035
   01FE 37 00              1090 	.dw #0x0037
   0200 3A 00              1091 	.dw #0x003A
   0202 3C 00              1092 	.dw #0x003C
   0204 3F 00              1093 	.dw #0x003F
   0206 42 00              1094 	.dw #0x0042
   0208 44 00              1095 	.dw #0x0044
   020A 47 00              1096 	.dw #0x0047
   020C 4A 00              1097 	.dw #0x004A
   020E 4C 00              1098 	.dw #0x004C
   0210 4F 00              1099 	.dw #0x004F
   0212 52 00              1100 	.dw #0x0052
   0214 55 00              1101 	.dw #0x0055
   0216 57 00              1102 	.dw #0x0057
   0218 5A 00              1103 	.dw #0x005A
   021A 5D 00              1104 	.dw #0x005D
   021C 60 00              1105 	.dw #0x0060
   021E 63 00              1106 	.dw #0x0063
   0220 66 00              1107 	.dw #0x0066
   0222 69 00              1108 	.dw #0x0069
   0224 6C 00              1109 	.dw #0x006C
   0226 6F 00              1110 	.dw #0x006F
   0228 72 00              1111 	.dw #0x0072
   022A 75 00              1112 	.dw #0x0075
   022C                    1113 _tri_center:
   022C 08                 1114 	.db #0x08
   022D 0A                 1115 	.db #0x0A
   022E 12                 1116 	.db #0x12
   022F 10                 1117 	.db #0x10
   0230 00                 1118 	.db #0x00
   0231 02                 1119 	.db #0x02
   0232 08                 1120 	.db #0x08
   0233 0A                 1121 	.db #0x0A
   0234 0B                 1122 	.db #0x0B
   0235 09                 1123 	.db #0x09
   0236 03                 1124 	.db #0x03
   0237 01                 1125 	.db #0x01
   0238 11                 1126 	.db #0x11
   0239 13                 1127 	.db #0x13
   023A 0B                 1128 	.db #0x0B
   023B 09                 1129 	.db #0x09
   023C 0A                 1130 	.db #0x0A
   023D 12                 1131 	.db #0x12
   023E 10                 1132 	.db #0x10
   023F 00                 1133 	.db #0x00
   0240 02                 1134 	.db #0x02
   0241 08                 1135 	.db #0x08
   0242 0A                 1136 	.db #0x0A
   0243 12                 1137 	.db #0x12
   0244 13                 1138 	.db #0x13
   0245 0B                 1139 	.db #0x0B
   0246 09                 1140 	.db #0x09
   0247 03                 1141 	.db #0x03
   0248 01                 1142 	.db #0x01
   0249 11                 1143 	.db #0x11
   024A 13                 1144 	.db #0x13
   024B 0B                 1145 	.db #0x0B
   024C 12                 1146 	.db #0x12
   024D 10                 1147 	.db #0x10
   024E 00                 1148 	.db #0x00
   024F 02                 1149 	.db #0x02
   0250 08                 1150 	.db #0x08
   0251 0A                 1151 	.db #0x0A
   0252 12                 1152 	.db #0x12
   0253 10                 1153 	.db #0x10
   0254 11                 1154 	.db #0x11
   0255 13                 1155 	.db #0x13
   0256 0B                 1156 	.db #0x0B
   0257 09                 1157 	.db #0x09
   0258 03                 1158 	.db #0x03
   0259 01                 1159 	.db #0x01
   025A 11                 1160 	.db #0x11
   025B 13                 1161 	.db #0x13
   025C 10                 1162 	.db #0x10
   025D 00                 1163 	.db #0x00
   025E 02                 1164 	.db #0x02
   025F 08                 1165 	.db #0x08
   0260 0A                 1166 	.db #0x0A
   0261 12                 1167 	.db #0x12
   0262 10                 1168 	.db #0x10
   0263 00                 1169 	.db #0x00
   0264 01                 1170 	.db #0x01
   0265 11                 1171 	.db #0x11
   0266 13                 1172 	.db #0x13
   0267 0B                 1173 	.db #0x0B
   0268 09                 1174 	.db #0x09
   0269 03                 1175 	.db #0x03
   026A 01                 1176 	.db #0x01
   026B 11                 1177 	.db #0x11
   026C 00                 1178 	.db #0x00
   026D 02                 1179 	.db #0x02
   026E 08                 1180 	.db #0x08
   026F 0A                 1181 	.db #0x0A
   0270 12                 1182 	.db #0x12
   0271 10                 1183 	.db #0x10
   0272 00                 1184 	.db #0x00
   0273 02                 1185 	.db #0x02
   0274 03                 1186 	.db #0x03
   0275 01                 1187 	.db #0x01
   0276 11                 1188 	.db #0x11
   0277 13                 1189 	.db #0x13
   0278 0B                 1190 	.db #0x0B
   0279 09                 1191 	.db #0x09
   027A 03                 1192 	.db #0x03
   027B 01                 1193 	.db #0x01
   027C 02                 1194 	.db #0x02
   027D 08                 1195 	.db #0x08
   027E 0A                 1196 	.db #0x0A
   027F 12                 1197 	.db #0x12
   0280 10                 1198 	.db #0x10
   0281 00                 1199 	.db #0x00
   0282 02                 1200 	.db #0x02
   0283 08                 1201 	.db #0x08
   0284 09                 1202 	.db #0x09
   0285 03                 1203 	.db #0x03
   0286 01                 1204 	.db #0x01
   0287 11                 1205 	.db #0x11
   0288 13                 1206 	.db #0x13
   0289 0B                 1207 	.db #0x0B
   028A 09                 1208 	.db #0x09
   028B 03                 1209 	.db #0x03
   028C 01                 1210 	.db #0x01
   028D 0B                 1211 	.db #0x0B
   028E 09                 1212 	.db #0x09
   028F 11                 1213 	.db #0x11
   0290 13                 1214 	.db #0x13
   0291 03                 1215 	.db #0x03
   0292 01                 1216 	.db #0x01
   0293 0B                 1217 	.db #0x0B
   0294 0A                 1218 	.db #0x0A
   0295 00                 1219 	.db #0x00
   0296 02                 1220 	.db #0x02
   0297 12                 1221 	.db #0x12
   0298 10                 1222 	.db #0x10
   0299 08                 1223 	.db #0x08
   029A 0A                 1224 	.db #0x0A
   029B 00                 1225 	.db #0x00
   029C 03                 1226 	.db #0x03
   029D 01                 1227 	.db #0x01
   029E 0B                 1228 	.db #0x0B
   029F 09                 1229 	.db #0x09
   02A0 11                 1230 	.db #0x11
   02A1 13                 1231 	.db #0x13
   02A2 03                 1232 	.db #0x03
   02A3 01                 1233 	.db #0x01
   02A4 00                 1234 	.db #0x00
   02A5 02                 1235 	.db #0x02
   02A6 12                 1236 	.db #0x12
   02A7 10                 1237 	.db #0x10
   02A8 08                 1238 	.db #0x08
   02A9 0A                 1239 	.db #0x0A
   02AA 00                 1240 	.db #0x00
   02AB 02                 1241 	.db #0x02
   02AC 13                 1242 	.db #0x13
   02AD 03                 1243 	.db #0x03
   02AE 01                 1244 	.db #0x01
   02AF 0B                 1245 	.db #0x0B
   02B0 09                 1246 	.db #0x09
   02B1 11                 1247 	.db #0x11
   02B2 13                 1248 	.db #0x13
   02B3 03                 1249 	.db #0x03
   02B4 02                 1250 	.db #0x02
   02B5 12                 1251 	.db #0x12
   02B6 10                 1252 	.db #0x10
   02B7 08                 1253 	.db #0x08
   02B8 0A                 1254 	.db #0x0A
   02B9 00                 1255 	.db #0x00
   02BA 02                 1256 	.db #0x02
   02BB 12                 1257 	.db #0x12
   02BC 11                 1258 	.db #0x11
   02BD 13                 1259 	.db #0x13
   02BE 03                 1260 	.db #0x03
   02BF 01                 1261 	.db #0x01
   02C0 0B                 1262 	.db #0x0B
   02C1 09                 1263 	.db #0x09
   02C2 11                 1264 	.db #0x11
   02C3 13                 1265 	.db #0x13
   02C4 12                 1266 	.db #0x12
   02C5 10                 1267 	.db #0x10
   02C6 08                 1268 	.db #0x08
   02C7 0A                 1269 	.db #0x0A
   02C8 00                 1270 	.db #0x00
   02C9 02                 1271 	.db #0x02
   02CA 12                 1272 	.db #0x12
   02CB 10                 1273 	.db #0x10
   02CC 09                 1274 	.db #0x09
   02CD 11                 1275 	.db #0x11
   02CE 13                 1276 	.db #0x13
   02CF 03                 1277 	.db #0x03
   02D0 01                 1278 	.db #0x01
   02D1 0B                 1279 	.db #0x0B
   02D2 09                 1280 	.db #0x09
   02D3 11                 1281 	.db #0x11
   02D4 10                 1282 	.db #0x10
   02D5 08                 1283 	.db #0x08
   02D6 0A                 1284 	.db #0x0A
   02D7 00                 1285 	.db #0x00
   02D8 02                 1286 	.db #0x02
   02D9 12                 1287 	.db #0x12
   02DA 10                 1288 	.db #0x10
   02DB 08                 1289 	.db #0x08
   02DC 0B                 1290 	.db #0x0B
   02DD 09                 1291 	.db #0x09
   02DE 11                 1292 	.db #0x11
   02DF 13                 1293 	.db #0x13
   02E0 03                 1294 	.db #0x03
   02E1 01                 1295 	.db #0x01
   02E2 0B                 1296 	.db #0x0B
   02E3 09                 1297 	.db #0x09
   02E4 08                 1298 	.db #0x08
   02E5 0A                 1299 	.db #0x0A
   02E6 00                 1300 	.db #0x00
   02E7 02                 1301 	.db #0x02
   02E8 12                 1302 	.db #0x12
   02E9 10                 1303 	.db #0x10
   02EA 08                 1304 	.db #0x08
   02EB 0A                 1305 	.db #0x0A
   02EC                    1306 _tri_up:
   02EC 0A                 1307 	.db #0x0A
   02ED 12                 1308 	.db #0x12
   02EE 10                 1309 	.db #0x10
   02EF 00                 1310 	.db #0x00
   02F0 02                 1311 	.db #0x02
   02F1 08                 1312 	.db #0x08
   02F2 0A                 1313 	.db #0x0A
   02F3 12                 1314 	.db #0x12
   02F4 13                 1315 	.db #0x13
   02F5 0B                 1316 	.db #0x0B
   02F6 09                 1317 	.db #0x09
   02F7 03                 1318 	.db #0x03
   02F8 01                 1319 	.db #0x01
   02F9 11                 1320 	.db #0x11
   02FA 13                 1321 	.db #0x13
   02FB 0B                 1322 	.db #0x0B
   02FC 12                 1323 	.db #0x12
   02FD 10                 1324 	.db #0x10
   02FE 00                 1325 	.db #0x00
   02FF 02                 1326 	.db #0x02
   0300 08                 1327 	.db #0x08
   0301 0A                 1328 	.db #0x0A
   0302 12                 1329 	.db #0x12
   0303 10                 1330 	.db #0x10
   0304 11                 1331 	.db #0x11
   0305 13                 1332 	.db #0x13
   0306 0B                 1333 	.db #0x0B
   0307 09                 1334 	.db #0x09
   0308 03                 1335 	.db #0x03
   0309 01                 1336 	.db #0x01
   030A 11                 1337 	.db #0x11
   030B 13                 1338 	.db #0x13
   030C 10                 1339 	.db #0x10
   030D 00                 1340 	.db #0x00
   030E 02                 1341 	.db #0x02
   030F 08                 1342 	.db #0x08
   0310 0A                 1343 	.db #0x0A
   0311 12                 1344 	.db #0x12
   0312 10                 1345 	.db #0x10
   0313 00                 1346 	.db #0x00
   0314 01                 1347 	.db #0x01
   0315 11                 1348 	.db #0x11
   0316 13                 1349 	.db #0x13
   0317 0B                 1350 	.db #0x0B
   0318 09                 1351 	.db #0x09
   0319 03                 1352 	.db #0x03
   031A 01                 1353 	.db #0x01
   031B 11                 1354 	.db #0x11
   031C 00                 1355 	.db #0x00
   031D 02                 1356 	.db #0x02
   031E 08                 1357 	.db #0x08
   031F 0A                 1358 	.db #0x0A
   0320 12                 1359 	.db #0x12
   0321 10                 1360 	.db #0x10
   0322 00                 1361 	.db #0x00
   0323 02                 1362 	.db #0x02
   0324 03                 1363 	.db #0x03
   0325 01                 1364 	.db #0x01
   0326 11                 1365 	.db #0x11
   0327 13                 1366 	.db #0x13
   0328 0B                 1367 	.db #0x0B
   0329 09                 1368 	.db #0x09
   032A 03                 1369 	.db #0x03
   032B 01                 1370 	.db #0x01
   032C 02                 1371 	.db #0x02
   032D 08                 1372 	.db #0x08
   032E 0A                 1373 	.db #0x0A
   032F 12                 1374 	.db #0x12
   0330 10                 1375 	.db #0x10
   0331 00                 1376 	.db #0x00
   0332 02                 1377 	.db #0x02
   0333 08                 1378 	.db #0x08
   0334 09                 1379 	.db #0x09
   0335 03                 1380 	.db #0x03
   0336 01                 1381 	.db #0x01
   0337 11                 1382 	.db #0x11
   0338 13                 1383 	.db #0x13
   0339 0B                 1384 	.db #0x0B
   033A 09                 1385 	.db #0x09
   033B 03                 1386 	.db #0x03
   033C 08                 1387 	.db #0x08
   033D 0A                 1388 	.db #0x0A
   033E 12                 1389 	.db #0x12
   033F 10                 1390 	.db #0x10
   0340 00                 1391 	.db #0x00
   0341 02                 1392 	.db #0x02
   0342 08                 1393 	.db #0x08
   0343 0A                 1394 	.db #0x0A
   0344 0B                 1395 	.db #0x0B
   0345 09                 1396 	.db #0x09
   0346 03                 1397 	.db #0x03
   0347 01                 1398 	.db #0x01
   0348 11                 1399 	.db #0x11
   0349 13                 1400 	.db #0x13
   034A 0B                 1401 	.db #0x0B
   034B 09                 1402 	.db #0x09
   034C 0A                 1403 	.db #0x0A
   034D 12                 1404 	.db #0x12
   034E 10                 1405 	.db #0x10
   034F 00                 1406 	.db #0x00
   0350 02                 1407 	.db #0x02
   0351 08                 1408 	.db #0x08
   0352 0A                 1409 	.db #0x0A
   0353 12                 1410 	.db #0x12
   0354 13                 1411 	.db #0x13
   0355 0B                 1412 	.db #0x0B
   0356 09                 1413 	.db #0x09
   0357 03                 1414 	.db #0x03
   0358 01                 1415 	.db #0x01
   0359 11                 1416 	.db #0x11
   035A 13                 1417 	.db #0x13
   035B 0B                 1418 	.db #0x0B
   035C 12                 1419 	.db #0x12
   035D 10                 1420 	.db #0x10
   035E 00                 1421 	.db #0x00
   035F 02                 1422 	.db #0x02
   0360 08                 1423 	.db #0x08
   0361 0A                 1424 	.db #0x0A
   0362 12                 1425 	.db #0x12
   0363 10                 1426 	.db #0x10
   0364 11                 1427 	.db #0x11
   0365 13                 1428 	.db #0x13
   0366 0B                 1429 	.db #0x0B
   0367 09                 1430 	.db #0x09
   0368 03                 1431 	.db #0x03
   0369 01                 1432 	.db #0x01
   036A 11                 1433 	.db #0x11
   036B 13                 1434 	.db #0x13
   036C 10                 1435 	.db #0x10
   036D 00                 1436 	.db #0x00
   036E 02                 1437 	.db #0x02
   036F 08                 1438 	.db #0x08
   0370 0A                 1439 	.db #0x0A
   0371 12                 1440 	.db #0x12
   0372 10                 1441 	.db #0x10
   0373 00                 1442 	.db #0x00
   0374 01                 1443 	.db #0x01
   0375 11                 1444 	.db #0x11
   0376 13                 1445 	.db #0x13
   0377 0B                 1446 	.db #0x0B
   0378 09                 1447 	.db #0x09
   0379 03                 1448 	.db #0x03
   037A 01                 1449 	.db #0x01
   037B 11                 1450 	.db #0x11
   037C 00                 1451 	.db #0x00
   037D 02                 1452 	.db #0x02
   037E 08                 1453 	.db #0x08
   037F 0A                 1454 	.db #0x0A
   0380 12                 1455 	.db #0x12
   0381 10                 1456 	.db #0x10
   0382 00                 1457 	.db #0x00
   0383 02                 1458 	.db #0x02
   0384 03                 1459 	.db #0x03
   0385 01                 1460 	.db #0x01
   0386 11                 1461 	.db #0x11
   0387 13                 1462 	.db #0x13
   0388 0B                 1463 	.db #0x0B
   0389 09                 1464 	.db #0x09
   038A 03                 1465 	.db #0x03
   038B 01                 1466 	.db #0x01
   038C 02                 1467 	.db #0x02
   038D 08                 1468 	.db #0x08
   038E 0A                 1469 	.db #0x0A
   038F 12                 1470 	.db #0x12
   0390 10                 1471 	.db #0x10
   0391 00                 1472 	.db #0x00
   0392 02                 1473 	.db #0x02
   0393 08                 1474 	.db #0x08
   0394 09                 1475 	.db #0x09
   0395 03                 1476 	.db #0x03
   0396 01                 1477 	.db #0x01
   0397 11                 1478 	.db #0x11
   0398 13                 1479 	.db #0x13
   0399 0B                 1480 	.db #0x0B
   039A 09                 1481 	.db #0x09
   039B 03                 1482 	.db #0x03
   039C 08                 1483 	.db #0x08
   039D 0A                 1484 	.db #0x0A
   039E 12                 1485 	.db #0x12
   039F 10                 1486 	.db #0x10
   03A0 00                 1487 	.db #0x00
   03A1 02                 1488 	.db #0x02
   03A2 08                 1489 	.db #0x08
   03A3 0A                 1490 	.db #0x0A
   03A4 0B                 1491 	.db #0x0B
   03A5 09                 1492 	.db #0x09
   03A6 03                 1493 	.db #0x03
   03A7 01                 1494 	.db #0x01
   03A8 11                 1495 	.db #0x11
   03A9 13                 1496 	.db #0x13
   03AA 0B                 1497 	.db #0x0B
   03AB 09                 1498 	.db #0x09
   03AC                    1499 _tri_side1:
   03AC 0A                 1500 	.db #0x0A
   03AD 12                 1501 	.db #0x12
   03AE 10                 1502 	.db #0x10
   03AF 00                 1503 	.db #0x00
   03B0 02                 1504 	.db #0x02
   03B1 08                 1505 	.db #0x08
   03B2 0A                 1506 	.db #0x0A
   03B3 12                 1507 	.db #0x12
   03B4 10                 1508 	.db #0x10
   03B5 00                 1509 	.db #0x00
   03B6 02                 1510 	.db #0x02
   03B7 08                 1511 	.db #0x08
   03B8 0A                 1512 	.db #0x0A
   03B9 12                 1513 	.db #0x12
   03BA 10                 1514 	.db #0x10
   03BB 00                 1515 	.db #0x00
   03BC 12                 1516 	.db #0x12
   03BD 10                 1517 	.db #0x10
   03BE 00                 1518 	.db #0x00
   03BF 02                 1519 	.db #0x02
   03C0 08                 1520 	.db #0x08
   03C1 0A                 1521 	.db #0x0A
   03C2 12                 1522 	.db #0x12
   03C3 10                 1523 	.db #0x10
   03C4 00                 1524 	.db #0x00
   03C5 02                 1525 	.db #0x02
   03C6 08                 1526 	.db #0x08
   03C7 0A                 1527 	.db #0x0A
   03C8 12                 1528 	.db #0x12
   03C9 10                 1529 	.db #0x10
   03CA 00                 1530 	.db #0x00
   03CB 02                 1531 	.db #0x02
   03CC 10                 1532 	.db #0x10
   03CD 00                 1533 	.db #0x00
   03CE 02                 1534 	.db #0x02
   03CF 08                 1535 	.db #0x08
   03D0 0A                 1536 	.db #0x0A
   03D1 12                 1537 	.db #0x12
   03D2 10                 1538 	.db #0x10
   03D3 00                 1539 	.db #0x00
   03D4 02                 1540 	.db #0x02
   03D5 08                 1541 	.db #0x08
   03D6 0A                 1542 	.db #0x0A
   03D7 12                 1543 	.db #0x12
   03D8 10                 1544 	.db #0x10
   03D9 00                 1545 	.db #0x00
   03DA 02                 1546 	.db #0x02
   03DB 08                 1547 	.db #0x08
   03DC 00                 1548 	.db #0x00
   03DD 02                 1549 	.db #0x02
   03DE 08                 1550 	.db #0x08
   03DF 0A                 1551 	.db #0x0A
   03E0 12                 1552 	.db #0x12
   03E1 10                 1553 	.db #0x10
   03E2 00                 1554 	.db #0x00
   03E3 02                 1555 	.db #0x02
   03E4 08                 1556 	.db #0x08
   03E5 0A                 1557 	.db #0x0A
   03E6 12                 1558 	.db #0x12
   03E7 10                 1559 	.db #0x10
   03E8 00                 1560 	.db #0x00
   03E9 02                 1561 	.db #0x02
   03EA 08                 1562 	.db #0x08
   03EB 0A                 1563 	.db #0x0A
   03EC 02                 1564 	.db #0x02
   03ED 08                 1565 	.db #0x08
   03EE 0A                 1566 	.db #0x0A
   03EF 12                 1567 	.db #0x12
   03F0 10                 1568 	.db #0x10
   03F1 00                 1569 	.db #0x00
   03F2 02                 1570 	.db #0x02
   03F3 08                 1571 	.db #0x08
   03F4 0A                 1572 	.db #0x0A
   03F5 12                 1573 	.db #0x12
   03F6 10                 1574 	.db #0x10
   03F7 00                 1575 	.db #0x00
   03F8 02                 1576 	.db #0x02
   03F9 08                 1577 	.db #0x08
   03FA 0A                 1578 	.db #0x0A
   03FB 12                 1579 	.db #0x12
   03FC 08                 1580 	.db #0x08
   03FD 0A                 1581 	.db #0x0A
   03FE 12                 1582 	.db #0x12
   03FF 10                 1583 	.db #0x10
   0400 00                 1584 	.db #0x00
   0401 02                 1585 	.db #0x02
   0402 08                 1586 	.db #0x08
   0403 0A                 1587 	.db #0x0A
   0404 12                 1588 	.db #0x12
   0405 10                 1589 	.db #0x10
   0406 00                 1590 	.db #0x00
   0407 02                 1591 	.db #0x02
   0408 08                 1592 	.db #0x08
   0409 0A                 1593 	.db #0x0A
   040A 12                 1594 	.db #0x12
   040B 10                 1595 	.db #0x10
   040C 0A                 1596 	.db #0x0A
   040D 12                 1597 	.db #0x12
   040E 10                 1598 	.db #0x10
   040F 00                 1599 	.db #0x00
   0410 02                 1600 	.db #0x02
   0411 08                 1601 	.db #0x08
   0412 0A                 1602 	.db #0x0A
   0413 12                 1603 	.db #0x12
   0414 10                 1604 	.db #0x10
   0415 00                 1605 	.db #0x00
   0416 02                 1606 	.db #0x02
   0417 08                 1607 	.db #0x08
   0418 0A                 1608 	.db #0x0A
   0419 12                 1609 	.db #0x12
   041A 10                 1610 	.db #0x10
   041B 00                 1611 	.db #0x00
   041C 12                 1612 	.db #0x12
   041D 10                 1613 	.db #0x10
   041E 00                 1614 	.db #0x00
   041F 02                 1615 	.db #0x02
   0420 08                 1616 	.db #0x08
   0421 0A                 1617 	.db #0x0A
   0422 12                 1618 	.db #0x12
   0423 10                 1619 	.db #0x10
   0424 00                 1620 	.db #0x00
   0425 02                 1621 	.db #0x02
   0426 08                 1622 	.db #0x08
   0427 0A                 1623 	.db #0x0A
   0428 12                 1624 	.db #0x12
   0429 10                 1625 	.db #0x10
   042A 00                 1626 	.db #0x00
   042B 02                 1627 	.db #0x02
   042C 10                 1628 	.db #0x10
   042D 00                 1629 	.db #0x00
   042E 02                 1630 	.db #0x02
   042F 08                 1631 	.db #0x08
   0430 0A                 1632 	.db #0x0A
   0431 12                 1633 	.db #0x12
   0432 10                 1634 	.db #0x10
   0433 00                 1635 	.db #0x00
   0434 02                 1636 	.db #0x02
   0435 08                 1637 	.db #0x08
   0436 0A                 1638 	.db #0x0A
   0437 12                 1639 	.db #0x12
   0438 10                 1640 	.db #0x10
   0439 00                 1641 	.db #0x00
   043A 02                 1642 	.db #0x02
   043B 08                 1643 	.db #0x08
   043C 00                 1644 	.db #0x00
   043D 02                 1645 	.db #0x02
   043E 08                 1646 	.db #0x08
   043F 0A                 1647 	.db #0x0A
   0440 12                 1648 	.db #0x12
   0441 10                 1649 	.db #0x10
   0442 00                 1650 	.db #0x00
   0443 02                 1651 	.db #0x02
   0444 08                 1652 	.db #0x08
   0445 0A                 1653 	.db #0x0A
   0446 12                 1654 	.db #0x12
   0447 10                 1655 	.db #0x10
   0448 00                 1656 	.db #0x00
   0449 02                 1657 	.db #0x02
   044A 08                 1658 	.db #0x08
   044B 0A                 1659 	.db #0x0A
   044C 02                 1660 	.db #0x02
   044D 08                 1661 	.db #0x08
   044E 0A                 1662 	.db #0x0A
   044F 12                 1663 	.db #0x12
   0450 10                 1664 	.db #0x10
   0451 00                 1665 	.db #0x00
   0452 02                 1666 	.db #0x02
   0453 08                 1667 	.db #0x08
   0454 0A                 1668 	.db #0x0A
   0455 12                 1669 	.db #0x12
   0456 10                 1670 	.db #0x10
   0457 00                 1671 	.db #0x00
   0458 02                 1672 	.db #0x02
   0459 08                 1673 	.db #0x08
   045A 0A                 1674 	.db #0x0A
   045B 12                 1675 	.db #0x12
   045C 08                 1676 	.db #0x08
   045D 0A                 1677 	.db #0x0A
   045E 12                 1678 	.db #0x12
   045F 10                 1679 	.db #0x10
   0460 00                 1680 	.db #0x00
   0461 02                 1681 	.db #0x02
   0462 08                 1682 	.db #0x08
   0463 0A                 1683 	.db #0x0A
   0464 12                 1684 	.db #0x12
   0465 10                 1685 	.db #0x10
   0466 00                 1686 	.db #0x00
   0467 02                 1687 	.db #0x02
   0468 08                 1688 	.db #0x08
   0469 0A                 1689 	.db #0x0A
   046A 12                 1690 	.db #0x12
   046B 10                 1691 	.db #0x10
   046C                    1692 _tri_side2:
   046C 00                 1693 	.db #0x00
   046D 10                 1694 	.db #0x10
   046E 12                 1695 	.db #0x12
   046F 0A                 1696 	.db #0x0A
   0470 08                 1697 	.db #0x08
   0471 02                 1698 	.db #0x02
   0472 00                 1699 	.db #0x00
   0473 10                 1700 	.db #0x10
   0474 12                 1701 	.db #0x12
   0475 0A                 1702 	.db #0x0A
   0476 08                 1703 	.db #0x08
   0477 02                 1704 	.db #0x02
   0478 00                 1705 	.db #0x00
   0479 10                 1706 	.db #0x10
   047A 12                 1707 	.db #0x12
   047B 0A                 1708 	.db #0x0A
   047C 02                 1709 	.db #0x02
   047D 00                 1710 	.db #0x00
   047E 10                 1711 	.db #0x10
   047F 12                 1712 	.db #0x12
   0480 0A                 1713 	.db #0x0A
   0481 08                 1714 	.db #0x08
   0482 02                 1715 	.db #0x02
   0483 00                 1716 	.db #0x00
   0484 10                 1717 	.db #0x10
   0485 12                 1718 	.db #0x12
   0486 0A                 1719 	.db #0x0A
   0487 08                 1720 	.db #0x08
   0488 02                 1721 	.db #0x02
   0489 00                 1722 	.db #0x00
   048A 10                 1723 	.db #0x10
   048B 12                 1724 	.db #0x12
   048C 08                 1725 	.db #0x08
   048D 02                 1726 	.db #0x02
   048E 00                 1727 	.db #0x00
   048F 10                 1728 	.db #0x10
   0490 12                 1729 	.db #0x12
   0491 0A                 1730 	.db #0x0A
   0492 08                 1731 	.db #0x08
   0493 02                 1732 	.db #0x02
   0494 00                 1733 	.db #0x00
   0495 10                 1734 	.db #0x10
   0496 12                 1735 	.db #0x12
   0497 0A                 1736 	.db #0x0A
   0498 08                 1737 	.db #0x08
   0499 02                 1738 	.db #0x02
   049A 00                 1739 	.db #0x00
   049B 10                 1740 	.db #0x10
   049C 0A                 1741 	.db #0x0A
   049D 08                 1742 	.db #0x08
   049E 02                 1743 	.db #0x02
   049F 00                 1744 	.db #0x00
   04A0 10                 1745 	.db #0x10
   04A1 12                 1746 	.db #0x12
   04A2 0A                 1747 	.db #0x0A
   04A3 08                 1748 	.db #0x08
   04A4 02                 1749 	.db #0x02
   04A5 00                 1750 	.db #0x00
   04A6 10                 1751 	.db #0x10
   04A7 12                 1752 	.db #0x12
   04A8 0A                 1753 	.db #0x0A
   04A9 08                 1754 	.db #0x08
   04AA 02                 1755 	.db #0x02
   04AB 00                 1756 	.db #0x00
   04AC 12                 1757 	.db #0x12
   04AD 0A                 1758 	.db #0x0A
   04AE 08                 1759 	.db #0x08
   04AF 02                 1760 	.db #0x02
   04B0 00                 1761 	.db #0x00
   04B1 10                 1762 	.db #0x10
   04B2 12                 1763 	.db #0x12
   04B3 0A                 1764 	.db #0x0A
   04B4 08                 1765 	.db #0x08
   04B5 02                 1766 	.db #0x02
   04B6 00                 1767 	.db #0x00
   04B7 10                 1768 	.db #0x10
   04B8 12                 1769 	.db #0x12
   04B9 0A                 1770 	.db #0x0A
   04BA 08                 1771 	.db #0x08
   04BB 02                 1772 	.db #0x02
   04BC 10                 1773 	.db #0x10
   04BD 12                 1774 	.db #0x12
   04BE 0A                 1775 	.db #0x0A
   04BF 08                 1776 	.db #0x08
   04C0 02                 1777 	.db #0x02
   04C1 00                 1778 	.db #0x00
   04C2 10                 1779 	.db #0x10
   04C3 12                 1780 	.db #0x12
   04C4 0A                 1781 	.db #0x0A
   04C5 08                 1782 	.db #0x08
   04C6 02                 1783 	.db #0x02
   04C7 00                 1784 	.db #0x00
   04C8 10                 1785 	.db #0x10
   04C9 12                 1786 	.db #0x12
   04CA 0A                 1787 	.db #0x0A
   04CB 08                 1788 	.db #0x08
   04CC 00                 1789 	.db #0x00
   04CD 10                 1790 	.db #0x10
   04CE 12                 1791 	.db #0x12
   04CF 0A                 1792 	.db #0x0A
   04D0 08                 1793 	.db #0x08
   04D1 02                 1794 	.db #0x02
   04D2 00                 1795 	.db #0x00
   04D3 10                 1796 	.db #0x10
   04D4 12                 1797 	.db #0x12
   04D5 0A                 1798 	.db #0x0A
   04D6 08                 1799 	.db #0x08
   04D7 02                 1800 	.db #0x02
   04D8 00                 1801 	.db #0x00
   04D9 10                 1802 	.db #0x10
   04DA 12                 1803 	.db #0x12
   04DB 0A                 1804 	.db #0x0A
   04DC 02                 1805 	.db #0x02
   04DD 00                 1806 	.db #0x00
   04DE 10                 1807 	.db #0x10
   04DF 12                 1808 	.db #0x12
   04E0 0A                 1809 	.db #0x0A
   04E1 08                 1810 	.db #0x08
   04E2 02                 1811 	.db #0x02
   04E3 00                 1812 	.db #0x00
   04E4 10                 1813 	.db #0x10
   04E5 12                 1814 	.db #0x12
   04E6 0A                 1815 	.db #0x0A
   04E7 08                 1816 	.db #0x08
   04E8 02                 1817 	.db #0x02
   04E9 00                 1818 	.db #0x00
   04EA 10                 1819 	.db #0x10
   04EB 12                 1820 	.db #0x12
   04EC 08                 1821 	.db #0x08
   04ED 02                 1822 	.db #0x02
   04EE 00                 1823 	.db #0x00
   04EF 10                 1824 	.db #0x10
   04F0 12                 1825 	.db #0x12
   04F1 0A                 1826 	.db #0x0A
   04F2 08                 1827 	.db #0x08
   04F3 02                 1828 	.db #0x02
   04F4 00                 1829 	.db #0x00
   04F5 10                 1830 	.db #0x10
   04F6 12                 1831 	.db #0x12
   04F7 0A                 1832 	.db #0x0A
   04F8 08                 1833 	.db #0x08
   04F9 02                 1834 	.db #0x02
   04FA 00                 1835 	.db #0x00
   04FB 10                 1836 	.db #0x10
   04FC 0A                 1837 	.db #0x0A
   04FD 08                 1838 	.db #0x08
   04FE 02                 1839 	.db #0x02
   04FF 00                 1840 	.db #0x00
   0500 10                 1841 	.db #0x10
   0501 12                 1842 	.db #0x12
   0502 0A                 1843 	.db #0x0A
   0503 08                 1844 	.db #0x08
   0504 02                 1845 	.db #0x02
   0505 00                 1846 	.db #0x00
   0506 10                 1847 	.db #0x10
   0507 12                 1848 	.db #0x12
   0508 0A                 1849 	.db #0x0A
   0509 08                 1850 	.db #0x08
   050A 02                 1851 	.db #0x02
   050B 00                 1852 	.db #0x00
   050C 12                 1853 	.db #0x12
   050D 0A                 1854 	.db #0x0A
   050E 08                 1855 	.db #0x08
   050F 02                 1856 	.db #0x02
   0510 00                 1857 	.db #0x00
   0511 10                 1858 	.db #0x10
   0512 12                 1859 	.db #0x12
   0513 0A                 1860 	.db #0x0A
   0514 08                 1861 	.db #0x08
   0515 02                 1862 	.db #0x02
   0516 00                 1863 	.db #0x00
   0517 10                 1864 	.db #0x10
   0518 12                 1865 	.db #0x12
   0519 0A                 1866 	.db #0x0A
   051A 08                 1867 	.db #0x08
   051B 02                 1868 	.db #0x02
   051C 10                 1869 	.db #0x10
   051D 12                 1870 	.db #0x12
   051E 0A                 1871 	.db #0x0A
   051F 08                 1872 	.db #0x08
   0520 02                 1873 	.db #0x02
   0521 00                 1874 	.db #0x00
   0522 10                 1875 	.db #0x10
   0523 12                 1876 	.db #0x12
   0524 0A                 1877 	.db #0x0A
   0525 08                 1878 	.db #0x08
   0526 02                 1879 	.db #0x02
   0527 00                 1880 	.db #0x00
   0528 10                 1881 	.db #0x10
   0529 12                 1882 	.db #0x12
   052A 0A                 1883 	.db #0x0A
   052B 08                 1884 	.db #0x08
                           1885 ;demo.c:125: void my_isr(void) interrupt
                           1886 ;	---------------------------------
                           1887 ; Function my_isr
                           1888 ; ---------------------------------
   052C                    1889 _my_isr_start::
   052C                    1890 _my_isr:
   052C F5                 1891 	push	af
   052D C5                 1892 	push	bc
   052E D5                 1893 	push	de
   052F E5                 1894 	push	hl
   0530 FD E5              1895 	push	iy
                           1896 ;demo.c:127: DI;
   0532 F3                 1897 		di 
                           1898 ;demo.c:129: READ_VDP_STATUS;
   0533 DB 99              1899 		in a,(#0x99) 
                           1900 ;demo.c:131: PLY_Play();
   0535 CDr00s00           1901 	call	_PLY_Play
                           1902 ;demo.c:132: PLY_SendRegisters();
   0538 CDr00s00           1903 	call	_PLY_SendRegisters
                           1904 ;demo.c:134: vbicount+=1;
   053B FD 21r20s8F        1905 	ld	iy,#_vbicount
   053F FD 34 00           1906 	inc	0 (iy)
   0542 20 07              1907 	jr	NZ,00103$
   0544 FD 21r20s8F        1908 	ld	iy,#_vbicount
   0548 FD 34 01           1909 	inc	1 (iy)
   054B                    1910 00103$:
                           1911 ;demo.c:135: tick++;
   054B FD 21r22s8F        1912 	ld	iy,#_tick
   054F FD 34 00           1913 	inc	0 (iy)
   0552 20 07              1914 	jr	NZ,00104$
   0554 FD 21r22s8F        1915 	ld	iy,#_tick
   0558 FD 34 01           1916 	inc	1 (iy)
   055B                    1917 00104$:
                           1918 ;demo.c:137: EI;
   055B FB                 1919 		ei 
   055C FD E1              1920 	pop	iy
   055E E1                 1921 	pop	hl
   055F D1                 1922 	pop	de
   0560 C1                 1923 	pop	bc
   0561 F1                 1924 	pop	af
   0562 ED 4D              1925 	reti
   0564                    1926 _my_isr_end::
                           1927 ;demo.c:140: void color_isr(void) interrupt
                           1928 ;	---------------------------------
                           1929 ; Function color_isr
                           1930 ; ---------------------------------
   0564                    1931 _color_isr_start::
   0564                    1932 _color_isr:
   0564 F5                 1933 	push	af
   0565 C5                 1934 	push	bc
   0566 D5                 1935 	push	de
   0567 E5                 1936 	push	hl
   0568 FD E5              1937 	push	iy
                           1938 ;demo.c:142: DI;
   056A F3                 1939 		di 
                           1940 ;demo.c:144: if(isNthBitSet(vdp2_status(1),0)) {
   056B 3E 01              1941 	ld	a,#0x01
   056D F5                 1942 	push	af
   056E 33                 1943 	inc	sp
   056F CDr00s00           1944 	call	_vdp2_status
   0572 33                 1945 	inc	sp
   0573 4D                 1946 	ld	c,l
   0574 21 00 00           1947 	ld	hl,#0x0000
   0577 E5                 1948 	push	hl
   0578 79                 1949 	ld	a,c
   0579 F5                 1950 	push	af
   057A 33                 1951 	inc	sp
   057B CDr00s00           1952 	call	_isNthBitSet
   057E F1                 1953 	pop	af
   057F 33                 1954 	inc	sp
   0580 44                 1955 	ld	b,h
   0581 4D                 1956 	ld	c,l
   0582 79                 1957 	ld	a,c
   0583 B0                 1958 	or	a,b
   0584 28 19              1959 	jr	Z,00102$
                           1960 ;demo.c:145: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0586 21r20s8F           1961 	ld	hl,#_vbicount + 0
   0589 4E                 1962 	ld	c,(hl)
   058A 06 00              1963 	ld	b,#0x00
   058C 21r00s00           1964 	ld	hl,#_sintab
   058F 09                 1965 	add	hl,bc
   0590 7E                 1966 	ld	a,(hl)
   0591 F5                 1967 	push	af
   0592 33                 1968 	inc	sp
   0593 3E 17              1969 	ld	a,#0x17
   0595 F5                 1970 	push	af
   0596 33                 1971 	inc	sp
   0597 CDr00s00           1972 	call	_vdp_register
   059A F1                 1973 	pop	af
                           1974 ;demo.c:146: READ_VDP_STATUS;
   059B DB 99              1975 		in a,(#0x99) 
   059D 18 18              1976 	jr	00103$
   059F                    1977 00102$:
                           1978 ;demo.c:149: READ_VDP_STATUS;
   059F DB 99              1979 		in a,(#0x99) 
                           1980 ;demo.c:150: vbicount++;
   05A1 FD 21r20s8F        1981 	ld	iy,#_vbicount
   05A5 FD 34 00           1982 	inc	0 (iy)
   05A8 20 07              1983 	jr	NZ,00107$
   05AA FD 21r20s8F        1984 	ld	iy,#_vbicount
   05AE FD 34 01           1985 	inc	1 (iy)
   05B1                    1986 00107$:
                           1987 ;demo.c:153: PLY_Play();
   05B1 CDr00s00           1988 	call	_PLY_Play
                           1989 ;demo.c:154: PLY_SendRegisters();
   05B4 CDr00s00           1990 	call	_PLY_SendRegisters
   05B7                    1991 00103$:
                           1992 ;demo.c:157: EI;
   05B7 FB                 1993 		ei 
   05B8 FD E1              1994 	pop	iy
   05BA E1                 1995 	pop	hl
   05BB D1                 1996 	pop	de
   05BC C1                 1997 	pop	bc
   05BD F1                 1998 	pop	af
   05BE ED 4D              1999 	reti
   05C0                    2000 _color_isr_end::
                           2001 ;demo.c:164: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2002 ;	---------------------------------
                           2003 ; Function ge5_load
                           2004 ; ---------------------------------
   05C0                    2005 _ge5_load_start::
   05C0                    2006 _ge5_load:
   05C0 DD E5              2007 	push	ix
   05C2 DD 21 00 00        2008 	ld	ix,#0
   05C6 DD 39              2009 	add	ix,sp
   05C8 21 D2 FF           2010 	ld	hl,#-46
   05CB 39                 2011 	add	hl,sp
   05CC F9                 2012 	ld	sp,hl
                           2013 ;demo.c:168: if(debugprint == 1) {
   05CD DD 7E 09           2014 	ld	a,9 (ix)
   05D0 D6 01              2015 	sub	a,#0x01
   05D2 20 06              2016 	jr	NZ,00125$
   05D4 DD 7E 0A           2017 	ld	a,10 (ix)
   05D7 B7                 2018 	or	a,a
   05D8 28 02              2019 	jr	Z,00126$
   05DA                    2020 00125$:
   05DA 18 1B              2021 	jr	00102$
   05DC                    2022 00126$:
                           2023 ;demo.c:169: puts("loading ge5file: ");
   05DC 21rBBs06           2024 	ld	hl,#__str_0
   05DF E5                 2025 	push	hl
   05E0 CDr00s00           2026 	call	_puts
   05E3 F1                 2027 	pop	af
                           2028 ;demo.c:170: puts(file_name);
   05E4 DD 6E 04           2029 	ld	l,4 (ix)
   05E7 DD 66 05           2030 	ld	h,5 (ix)
   05EA E5                 2031 	push	hl
   05EB CDr00s00           2032 	call	_puts
   05EE F1                 2033 	pop	af
                           2034 ;demo.c:171: puts("\r\n");
   05EF 21rCDs06           2035 	ld	hl,#__str_1
   05F2 E5                 2036 	push	hl
   05F3 CDr00s00           2037 	call	_puts
   05F6 F1                 2038 	pop	af
   05F7                    2039 00102$:
                           2040 ;demo.c:174: memset((uint8_t *) &f, 0, sizeof(fcb));
   05F7 21 00 00           2041 	ld	hl,#0x0000
   05FA 39                 2042 	add	hl,sp
   05FB 4D                 2043 	ld	c,l
   05FC 44                 2044 	ld	b,h
   05FD 21 2E 00           2045 	ld	hl,#0x002E
   0600 E5                 2046 	push	hl
   0601 3E 00              2047 	ld	a,#0x00
   0603 F5                 2048 	push	af
   0604 33                 2049 	inc	sp
   0605 C5                 2050 	push	bc
   0606 CDr00s00           2051 	call	_memset
   0609 F1                 2052 	pop	af
   060A F1                 2053 	pop	af
   060B 33                 2054 	inc	sp
                           2055 ;demo.c:176: f.record_size = 128;
   060C 21 00 00           2056 	ld	hl,#0x0000
   060F 39                 2057 	add	hl,sp
   0610 4D                 2058 	ld	c,l
   0611 44                 2059 	ld	b,h
   0612 21 0F 00           2060 	ld	hl,#0x000F
   0615 09                 2061 	add	hl,bc
   0616 EB                 2062 	ex	de,hl
   0617 3E 80              2063 	ld	a,#0x80
   0619 12                 2064 	ld	(de),a
                           2065 ;demo.c:177: f.drive = 0;
   061A 3E 00              2066 	ld	a,#0x00
   061C 02                 2067 	ld	(bc),a
                           2068 ;demo.c:179: memcpy(f.name, file_name, 11);
   061D DD 5E 04           2069 	ld	e,4 (ix)
   0620 DD 56 05           2070 	ld	d,5 (ix)
   0623 03                 2071 	inc	bc
   0624 21 0B 00           2072 	ld	hl,#0x000B
   0627 E5                 2073 	push	hl
   0628 D5                 2074 	push	de
   0629 C5                 2075 	push	bc
   062A CDr00s00           2076 	call	_memcpy
   062D F1                 2077 	pop	af
   062E F1                 2078 	pop	af
   062F F1                 2079 	pop	af
                           2080 ;demo.c:181: if (open(&f) != 0) return 0;
   0630 21 00 00           2081 	ld	hl,#0x0000
   0633 39                 2082 	add	hl,sp
   0634 E5                 2083 	push	hl
   0635 CDr00s00           2084 	call	_open
   0638 F1                 2085 	pop	af
   0639 AF                 2086 	xor	a,a
   063A B5                 2087 	or	a,l
   063B 28 05              2088 	jr	Z,00104$
   063D 2E 00              2089 	ld	l,#0x00
   063F C3rB6s06           2090 	jp	00116$
   0642                    2091 00104$:
                           2092 ;demo.c:182: vdp_set_write_address(vramh, vraml);
   0642 DD 6E 07           2093 	ld	l,7 (ix)
   0645 DD 66 08           2094 	ld	h,8 (ix)
   0648 E5                 2095 	push	hl
   0649 DD 7E 06           2096 	ld	a,6 (ix)
   064C F5                 2097 	push	af
   064D 33                 2098 	inc	sp
   064E CDr00s00           2099 	call	_vdp_set_write_address
   0651 F1                 2100 	pop	af
   0652 33                 2101 	inc	sp
                           2102 ;demo.c:184: for (i = 0; i < 213; i++) {
   0653 0E 00              2103 	ld	c,#0x00
   0655                    2104 00112$:
   0655 79                 2105 	ld	a,c
   0656 D6 D5              2106 	sub	a,#0xD5
   0658 D2rABs06           2107 	jp	NC,00115$
                           2108 ;demo.c:185: if (block_set_data_ptr(scratch) != 0) return 0;
   065B C5                 2109 	push	bc
   065C 21r00s8E           2110 	ld	hl,#_scratch
   065F E5                 2111 	push	hl
   0660 CDr00s00           2112 	call	_block_set_data_ptr
   0663 F1                 2113 	pop	af
   0664 7D                 2114 	ld	a,l
   0665 C1                 2115 	pop	bc
   0666 47                 2116 	ld	b,a
   0667 B7                 2117 	or	a,a
   0668 28 05              2118 	jr	Z,00106$
   066A 2E 00              2119 	ld	l,#0x00
   066C C3rB6s06           2120 	jp	00116$
   066F                    2121 00106$:
                           2122 ;demo.c:186: if (block_read(&f) != 0) return 0;
   066F 21 00 00           2123 	ld	hl,#0x0000
   0672 39                 2124 	add	hl,sp
   0673 C5                 2125 	push	bc
   0674 E5                 2126 	push	hl
   0675 CDr00s00           2127 	call	_block_read
   0678 F1                 2128 	pop	af
   0679 7D                 2129 	ld	a,l
   067A C1                 2130 	pop	bc
   067B 47                 2131 	ld	b,a
   067C B7                 2132 	or	a,a
   067D 28 04              2133 	jr	Z,00108$
   067F 2E 00              2134 	ld	l,#0x00
   0681 18 33              2135 	jr	00116$
   0683                    2136 00108$:
                           2137 ;demo.c:188: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0683 AF                 2138 	xor	a,a
   0684 B1                 2139 	or	a,c
   0685 20 11              2140 	jr	NZ,00110$
   0687 11r07s8E           2141 	ld	de,#_scratch + 7
   068A C5                 2142 	push	bc
   068B 3E 79              2143 	ld	a,#0x79
   068D F5                 2144 	push	af
   068E 33                 2145 	inc	sp
   068F D5                 2146 	push	de
   0690 CDr00s00           2147 	call	_vdp_load_screen
   0693 F1                 2148 	pop	af
   0694 33                 2149 	inc	sp
   0695 C1                 2150 	pop	bc
   0696 18 0F              2151 	jr	00114$
   0698                    2152 00110$:
                           2153 ;demo.c:189: else vdp_load_screen(scratch, 128);
   0698 C5                 2154 	push	bc
   0699 3E 80              2155 	ld	a,#0x80
   069B F5                 2156 	push	af
   069C 33                 2157 	inc	sp
   069D 21r00s8E           2158 	ld	hl,#_scratch
   06A0 E5                 2159 	push	hl
   06A1 CDr00s00           2160 	call	_vdp_load_screen
   06A4 F1                 2161 	pop	af
   06A5 33                 2162 	inc	sp
   06A6 C1                 2163 	pop	bc
   06A7                    2164 00114$:
                           2165 ;demo.c:184: for (i = 0; i < 213; i++) {
   06A7 0C                 2166 	inc	c
   06A8 C3r55s06           2167 	jp	00112$
   06AB                    2168 00115$:
                           2169 ;demo.c:192: close(&f);
   06AB 21 00 00           2170 	ld	hl,#0x0000
   06AE 39                 2171 	add	hl,sp
   06AF E5                 2172 	push	hl
   06B0 CDr00s00           2173 	call	_close
   06B3 F1                 2174 	pop	af
                           2175 ;demo.c:194: return 1;
   06B4 2E 01              2176 	ld	l,#0x01
   06B6                    2177 00116$:
   06B6 DD F9              2178 	ld	sp,ix
   06B8 DD E1              2179 	pop	ix
   06BA C9                 2180 	ret
   06BB                    2181 _ge5_load_end::
   06BB                    2182 __str_0:
   06BB 6C 6F 61 64 69 6E  2183 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   06CC 00                 2184 	.db 0x00
   06CD                    2185 __str_1:
   06CD 0D                 2186 	.db 0x0D
   06CE 0A                 2187 	.db 0x0A
   06CF 00                 2188 	.db 0x00
                           2189 ;demo.c:197: void scratch_clear() {
                           2190 ;	---------------------------------
                           2191 ; Function scratch_clear
                           2192 ; ---------------------------------
   06D0                    2193 _scratch_clear_start::
   06D0                    2194 _scratch_clear:
                           2195 ;demo.c:198: memset((uint8_t *) &scratch, 0, 128);
   06D0 21 80 00           2196 	ld	hl,#0x0080
   06D3 E5                 2197 	push	hl
   06D4 3E 00              2198 	ld	a,#0x00
   06D6 F5                 2199 	push	af
   06D7 33                 2200 	inc	sp
   06D8 21r00s8E           2201 	ld	hl,#_scratch
   06DB E5                 2202 	push	hl
   06DC CDr00s00           2203 	call	_memset
   06DF F1                 2204 	pop	af
   06E0 F1                 2205 	pop	af
   06E1 33                 2206 	inc	sp
   06E2 C9                 2207 	ret
   06E3                    2208 _scratch_clear_end::
                           2209 ;demo.c:201: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2210 ;	---------------------------------
                           2211 ; Function pal_load
                           2212 ; ---------------------------------
   06E3                    2213 _pal_load_start::
   06E3                    2214 _pal_load:
   06E3 DD E5              2215 	push	ix
   06E5 DD 21 00 00        2216 	ld	ix,#0
   06E9 DD 39              2217 	add	ix,sp
   06EB 21 D2 FF           2218 	ld	hl,#-46
   06EE 39                 2219 	add	hl,sp
   06EF F9                 2220 	ld	sp,hl
                           2221 ;demo.c:204: if(debugprint == 1) {
   06F0 DD 7E 07           2222 	ld	a,7 (ix)
   06F3 D6 01              2223 	sub	a,#0x01
   06F5 20 06              2224 	jr	NZ,00115$
   06F7 DD 7E 08           2225 	ld	a,8 (ix)
   06FA B7                 2226 	or	a,a
   06FB 28 02              2227 	jr	Z,00116$
   06FD                    2228 00115$:
   06FD 18 1B              2229 	jr	00102$
   06FF                    2230 00116$:
                           2231 ;demo.c:205: puts("loading palfile: ");
   06FF 21rADs07           2232 	ld	hl,#__str_2
   0702 E5                 2233 	push	hl
   0703 CDr00s00           2234 	call	_puts
   0706 F1                 2235 	pop	af
                           2236 ;demo.c:206: puts(file_name);
   0707 DD 6E 04           2237 	ld	l,4 (ix)
   070A DD 66 05           2238 	ld	h,5 (ix)
   070D E5                 2239 	push	hl
   070E CDr00s00           2240 	call	_puts
   0711 F1                 2241 	pop	af
                           2242 ;demo.c:207: puts("\r\n");
   0712 21rBFs07           2243 	ld	hl,#__str_3
   0715 E5                 2244 	push	hl
   0716 CDr00s00           2245 	call	_puts
   0719 F1                 2246 	pop	af
   071A                    2247 00102$:
                           2248 ;demo.c:210: memset((uint8_t *) &f, 0, sizeof(fcb));
   071A 21 00 00           2249 	ld	hl,#0x0000
   071D 39                 2250 	add	hl,sp
   071E 4D                 2251 	ld	c,l
   071F 44                 2252 	ld	b,h
   0720 21 2E 00           2253 	ld	hl,#0x002E
   0723 E5                 2254 	push	hl
   0724 3E 00              2255 	ld	a,#0x00
   0726 F5                 2256 	push	af
   0727 33                 2257 	inc	sp
   0728 C5                 2258 	push	bc
   0729 CDr00s00           2259 	call	_memset
   072C F1                 2260 	pop	af
   072D F1                 2261 	pop	af
   072E 33                 2262 	inc	sp
                           2263 ;demo.c:211: scratch_clear();
   072F CDrD0s06           2264 	call	_scratch_clear
                           2265 ;demo.c:213: f.record_size = ss;
   0732 21 00 00           2266 	ld	hl,#0x0000
   0735 39                 2267 	add	hl,sp
   0736 4D                 2268 	ld	c,l
   0737 44                 2269 	ld	b,h
   0738 21 0F 00           2270 	ld	hl,#0x000F
   073B 09                 2271 	add	hl,bc
   073C EB                 2272 	ex	de,hl
   073D DD 7E 06           2273 	ld	a,6 (ix)
   0740 12                 2274 	ld	(de),a
                           2275 ;demo.c:214: f.drive = 0;
   0741 3E 00              2276 	ld	a,#0x00
   0743 02                 2277 	ld	(bc),a
                           2278 ;demo.c:216: memcpy(f.name, file_name, 11);
   0744 DD 5E 04           2279 	ld	e,4 (ix)
   0747 DD 56 05           2280 	ld	d,5 (ix)
   074A 03                 2281 	inc	bc
   074B 21 0B 00           2282 	ld	hl,#0x000B
   074E E5                 2283 	push	hl
   074F D5                 2284 	push	de
   0750 C5                 2285 	push	bc
   0751 CDr00s00           2286 	call	_memcpy
   0754 F1                 2287 	pop	af
   0755 F1                 2288 	pop	af
   0756 F1                 2289 	pop	af
                           2290 ;demo.c:218: if (open(&f) != 0) return 0;
   0757 21 00 00           2291 	ld	hl,#0x0000
   075A 39                 2292 	add	hl,sp
   075B E5                 2293 	push	hl
   075C CDr00s00           2294 	call	_open
   075F F1                 2295 	pop	af
   0760 AF                 2296 	xor	a,a
   0761 B5                 2297 	or	a,l
   0762 28 04              2298 	jr	Z,00104$
   0764 2E 00              2299 	ld	l,#0x00
   0766 18 40              2300 	jr	00109$
   0768                    2301 00104$:
                           2302 ;demo.c:219: if (block_set_data_ptr(scratch) != 0) return 0;
   0768 21r00s8E           2303 	ld	hl,#_scratch
   076B E5                 2304 	push	hl
   076C CDr00s00           2305 	call	_block_set_data_ptr
   076F F1                 2306 	pop	af
   0770 AF                 2307 	xor	a,a
   0771 B5                 2308 	or	a,l
   0772 28 04              2309 	jr	Z,00106$
   0774 2E 00              2310 	ld	l,#0x00
   0776 18 30              2311 	jr	00109$
   0778                    2312 00106$:
                           2313 ;demo.c:220: if (block_read(&f) != 0) return 0;
   0778 21 00 00           2314 	ld	hl,#0x0000
   077B 39                 2315 	add	hl,sp
   077C E5                 2316 	push	hl
   077D CDr00s00           2317 	call	_block_read
   0780 F1                 2318 	pop	af
   0781 AF                 2319 	xor	a,a
   0782 B5                 2320 	or	a,l
   0783 28 04              2321 	jr	Z,00108$
   0785 2E 00              2322 	ld	l,#0x00
   0787 18 1F              2323 	jr	00109$
   0789                    2324 00108$:
                           2325 ;demo.c:222: memcpy(cur_palette, scratch+7, ss);
   0789 DD 4E 06           2326 	ld	c,6 (ix)
   078C 06 00              2327 	ld	b,#0x00
   078E 11r07s8E           2328 	ld	de,#_scratch + 7
   0791 C5                 2329 	push	bc
   0792 D5                 2330 	push	de
   0793 21r80s8E           2331 	ld	hl,#_cur_palette
   0796 E5                 2332 	push	hl
   0797 CDr00s00           2333 	call	_memcpy
   079A F1                 2334 	pop	af
   079B F1                 2335 	pop	af
   079C F1                 2336 	pop	af
                           2337 ;demo.c:224: close(&f);
   079D 21 00 00           2338 	ld	hl,#0x0000
   07A0 39                 2339 	add	hl,sp
   07A1 E5                 2340 	push	hl
   07A2 CDr00s00           2341 	call	_close
   07A5 F1                 2342 	pop	af
                           2343 ;demo.c:225: return 1;
   07A6 2E 01              2344 	ld	l,#0x01
   07A8                    2345 00109$:
   07A8 DD F9              2346 	ld	sp,ix
   07AA DD E1              2347 	pop	ix
   07AC C9                 2348 	ret
   07AD                    2349 _pal_load_end::
   07AD                    2350 __str_2:
   07AD 6C 6F 61 64 69 6E  2351 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   07BE 00                 2352 	.db 0x00
   07BF                    2353 __str_3:
   07BF 0D                 2354 	.db 0x0D
   07C0 0A                 2355 	.db 0x0A
   07C1 00                 2356 	.db 0x00
                           2357 ;demo.c:229: void pause() {
                           2358 ;	---------------------------------
                           2359 ; Function pause
                           2360 ; ---------------------------------
   07C2                    2361 _pause_start::
   07C2                    2362 _pause:
                           2363 ;demo.c:230: uint8_t i,j,k = 0;
                           2364 ;demo.c:231: for (i = 0; i < 255; i++) {	
   07C2 01 00 00           2365 	ld	bc,#0x0000
   07C5                    2366 00104$:
   07C5 78                 2367 	ld	a,b
   07C6 D6 FF              2368 	sub	a,#0xFF
   07C8 D0                 2369 	ret	NC
                           2370 ;demo.c:232: for (j = 0; j < 255; j++) {
   07C9 59                 2371 	ld	e,c
   07CA 16 FF              2372 	ld	d,#0xFF
   07CC                    2373 00103$:
                           2374 ;demo.c:233: k++;
   07CC 1C                 2375 	inc	e
   07CD 15                 2376 	dec	d
                           2377 ;demo.c:232: for (j = 0; j < 255; j++) {
   07CE AF                 2378 	xor	a,a
   07CF B2                 2379 	or	a,d
   07D0 20 FA              2380 	jr	NZ,00103$
                           2381 ;demo.c:231: for (i = 0; i < 255; i++) {	
   07D2 4B                 2382 	ld	c,e
   07D3 04                 2383 	inc	b
   07D4 18 EF              2384 	jr	00104$
   07D6                    2385 _pause_end::
                           2386 ;demo.c:239: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2387 ;	---------------------------------
                           2388 ; Function raw_load
                           2389 ; ---------------------------------
   07D6                    2390 _raw_load_start::
   07D6                    2391 _raw_load:
   07D6 DD E5              2392 	push	ix
   07D8 DD 21 00 00        2393 	ld	ix,#0
   07DC DD 39              2394 	add	ix,sp
   07DE 21 D2 FF           2395 	ld	hl,#-46
   07E1 39                 2396 	add	hl,sp
   07E2 F9                 2397 	ld	sp,hl
                           2398 ;demo.c:244: if(debugprint == 1) {
   07E3 DD 7E 0A           2399 	ld	a,10 (ix)
   07E6 D6 01              2400 	sub	a,#0x01
   07E8 20 06              2401 	jr	NZ,00120$
   07EA DD 7E 0B           2402 	ld	a,11 (ix)
   07ED B7                 2403 	or	a,a
   07EE 28 02              2404 	jr	Z,00121$
   07F0                    2405 00120$:
   07F0 18 1B              2406 	jr	00102$
   07F2                    2407 00121$:
                           2408 ;demo.c:245: puts("loading rawfile: ");
   07F2 21rC4s08           2409 	ld	hl,#__str_4
   07F5 E5                 2410 	push	hl
   07F6 CDr00s00           2411 	call	_puts
   07F9 F1                 2412 	pop	af
                           2413 ;demo.c:246: puts(file_name);
   07FA DD 6E 04           2414 	ld	l,4 (ix)
   07FD DD 66 05           2415 	ld	h,5 (ix)
   0800 E5                 2416 	push	hl
   0801 CDr00s00           2417 	call	_puts
   0804 F1                 2418 	pop	af
                           2419 ;demo.c:247: puts("\r\n");
   0805 21rD6s08           2420 	ld	hl,#__str_5
   0808 E5                 2421 	push	hl
   0809 CDr00s00           2422 	call	_puts
   080C F1                 2423 	pop	af
   080D                    2424 00102$:
                           2425 ;demo.c:250: memset((uint8_t *) &f, 0, sizeof(fcb));
   080D 21 00 00           2426 	ld	hl,#0x0000
   0810 39                 2427 	add	hl,sp
   0811 4D                 2428 	ld	c,l
   0812 44                 2429 	ld	b,h
   0813 21 2E 00           2430 	ld	hl,#0x002E
   0816 E5                 2431 	push	hl
   0817 3E 00              2432 	ld	a,#0x00
   0819 F5                 2433 	push	af
   081A 33                 2434 	inc	sp
   081B C5                 2435 	push	bc
   081C CDr00s00           2436 	call	_memset
   081F F1                 2437 	pop	af
   0820 F1                 2438 	pop	af
   0821 33                 2439 	inc	sp
                           2440 ;demo.c:251: scratch_clear();
   0822 CDrD0s06           2441 	call	_scratch_clear
                           2442 ;demo.c:253: f.record_size = 128;
   0825 21 00 00           2443 	ld	hl,#0x0000
   0828 39                 2444 	add	hl,sp
   0829 4D                 2445 	ld	c,l
   082A 44                 2446 	ld	b,h
   082B 21 0F 00           2447 	ld	hl,#0x000F
   082E 09                 2448 	add	hl,bc
   082F EB                 2449 	ex	de,hl
   0830 3E 80              2450 	ld	a,#0x80
   0832 12                 2451 	ld	(de),a
                           2452 ;demo.c:254: f.drive = 0;
   0833 3E 00              2453 	ld	a,#0x00
   0835 02                 2454 	ld	(bc),a
                           2455 ;demo.c:256: memcpy(f.name, file_name, 11);
   0836 DD 5E 04           2456 	ld	e,4 (ix)
   0839 DD 56 05           2457 	ld	d,5 (ix)
   083C 03                 2458 	inc	bc
   083D 21 0B 00           2459 	ld	hl,#0x000B
   0840 E5                 2460 	push	hl
   0841 D5                 2461 	push	de
   0842 C5                 2462 	push	bc
   0843 CDr00s00           2463 	call	_memcpy
   0846 F1                 2464 	pop	af
   0847 F1                 2465 	pop	af
   0848 F1                 2466 	pop	af
                           2467 ;demo.c:258: if (open(&f) != 0) return 0;
   0849 21 00 00           2468 	ld	hl,#0x0000
   084C 39                 2469 	add	hl,sp
   084D E5                 2470 	push	hl
   084E CDr00s00           2471 	call	_open
   0851 F1                 2472 	pop	af
   0852 AF                 2473 	xor	a,a
   0853 B5                 2474 	or	a,l
   0854 28 05              2475 	jr	Z,00119$
   0856 2E 00              2476 	ld	l,#0x00
   0858 C3rBFs08           2477 	jp	00112$
                           2478 ;demo.c:260: while(total < size) {
   085B                    2479 00119$:
   085B 01 00 00           2480 	ld	bc,#0x0000
   085E                    2481 00109$:
   085E 79                 2482 	ld	a,c
   085F DD 96 06           2483 	sub	a,6 (ix)
   0862 78                 2484 	ld	a,b
   0863 DD 9E 07           2485 	sbc	a,7 (ix)
   0866 F2rB4s08           2486 	jp	P,00111$
                           2487 ;demo.c:261: if (block_set_data_ptr(scratch) != 0) return 0;
   0869 C5                 2488 	push	bc
   086A 21r00s8E           2489 	ld	hl,#_scratch
   086D E5                 2490 	push	hl
   086E CDr00s00           2491 	call	_block_set_data_ptr
   0871 F1                 2492 	pop	af
   0872 5D                 2493 	ld	e,l
   0873 C1                 2494 	pop	bc
   0874 AF                 2495 	xor	a,a
   0875 B3                 2496 	or	a,e
   0876 28 04              2497 	jr	Z,00106$
   0878 2E 00              2498 	ld	l,#0x00
   087A 18 43              2499 	jr	00112$
   087C                    2500 00106$:
                           2501 ;demo.c:262: if (block_read(&f) != 0) return 0;
   087C 21 00 00           2502 	ld	hl,#0x0000
   087F 39                 2503 	add	hl,sp
   0880 C5                 2504 	push	bc
   0881 E5                 2505 	push	hl
   0882 CDr00s00           2506 	call	_block_read
   0885 F1                 2507 	pop	af
   0886 5D                 2508 	ld	e,l
   0887 C1                 2509 	pop	bc
   0888 AF                 2510 	xor	a,a
   0889 B3                 2511 	or	a,e
   088A 28 04              2512 	jr	Z,00108$
   088C 2E 00              2513 	ld	l,#0x00
   088E 18 2F              2514 	jr	00112$
   0890                    2515 00108$:
                           2516 ;demo.c:264: memcpy(buffer+total,scratch,incr);
   0890 DD 7E 08           2517 	ld	a,8 (ix)
   0893 81                 2518 	add	a,c
   0894 5F                 2519 	ld	e,a
   0895 DD 7E 09           2520 	ld	a,9 (ix)
   0898 88                 2521 	adc	a,b
   0899 57                 2522 	ld	d,a
   089A C5                 2523 	push	bc
   089B 21 80 00           2524 	ld	hl,#0x0080
   089E E5                 2525 	push	hl
   089F 21r00s8E           2526 	ld	hl,#_scratch
   08A2 E5                 2527 	push	hl
   08A3 D5                 2528 	push	de
   08A4 CDr00s00           2529 	call	_memcpy
   08A7 F1                 2530 	pop	af
   08A8 F1                 2531 	pop	af
   08A9 F1                 2532 	pop	af
   08AA C1                 2533 	pop	bc
                           2534 ;demo.c:266: total+=incr;
   08AB 21 80 00           2535 	ld	hl,#0x0080
   08AE 09                 2536 	add	hl,bc
   08AF 4D                 2537 	ld	c,l
   08B0 44                 2538 	ld	b,h
   08B1 C3r5Es08           2539 	jp	00109$
   08B4                    2540 00111$:
                           2541 ;demo.c:269: close(&f);
   08B4 21 00 00           2542 	ld	hl,#0x0000
   08B7 39                 2543 	add	hl,sp
   08B8 E5                 2544 	push	hl
   08B9 CDr00s00           2545 	call	_close
   08BC F1                 2546 	pop	af
                           2547 ;demo.c:271: return 1;
   08BD 2E 01              2548 	ld	l,#0x01
   08BF                    2549 00112$:
   08BF DD F9              2550 	ld	sp,ix
   08C1 DD E1              2551 	pop	ix
   08C3 C9                 2552 	ret
   08C4                    2553 _raw_load_end::
   08C4                    2554 __str_4:
   08C4 6C 6F 61 64 69 6E  2555 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   08D5 00                 2556 	.db 0x00
   08D6                    2557 __str_5:
   08D6 0D                 2558 	.db 0x0D
   08D7 0A                 2559 	.db 0x0A
   08D8 00                 2560 	.db 0x00
                           2561 ;demo.c:274: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2562 ;	---------------------------------
                           2563 ; Function pck_load
                           2564 ; ---------------------------------
   08D9                    2565 _pck_load_start::
   08D9                    2566 _pck_load:
   08D9 DD E5              2567 	push	ix
   08DB DD 21 00 00        2568 	ld	ix,#0
   08DF DD 39              2569 	add	ix,sp
                           2570 ;demo.c:275: if(debugprint == 1) {
   08E1 DD 7E 0C           2571 	ld	a,12 (ix)
   08E4 D6 01              2572 	sub	a,#0x01
   08E6 20 06              2573 	jr	NZ,00106$
   08E8 DD 7E 0D           2574 	ld	a,13 (ix)
   08EB B7                 2575 	or	a,a
   08EC 28 02              2576 	jr	Z,00107$
   08EE                    2577 00106$:
   08EE 18 1B              2578 	jr	00102$
   08F0                    2579 00107$:
                           2580 ;demo.c:276: puts("loading pckfile: ");
   08F0 21r52s09           2581 	ld	hl,#__str_6
   08F3 E5                 2582 	push	hl
   08F4 CDr00s00           2583 	call	_puts
   08F7 F1                 2584 	pop	af
                           2585 ;demo.c:277: puts(file_name);
   08F8 DD 6E 04           2586 	ld	l,4 (ix)
   08FB DD 66 05           2587 	ld	h,5 (ix)
   08FE E5                 2588 	push	hl
   08FF CDr00s00           2589 	call	_puts
   0902 F1                 2590 	pop	af
                           2591 ;demo.c:278: puts("\r\n");
   0903 21r64s09           2592 	ld	hl,#__str_7
   0906 E5                 2593 	push	hl
   0907 CDr00s00           2594 	call	_puts
   090A F1                 2595 	pop	af
   090B                    2596 00102$:
                           2597 ;demo.c:280: memset((uint8_t *) &packbuffer, 0, size);
   090B DD 4E 06           2598 	ld	c,6 (ix)
   090E DD 46 07           2599 	ld	b,7 (ix)
   0911 C5                 2600 	push	bc
   0912 C5                 2601 	push	bc
   0913 3E 00              2602 	ld	a,#0x00
   0915 F5                 2603 	push	af
   0916 33                 2604 	inc	sp
   0917 21r60s01           2605 	ld	hl,#_packbuffer
   091A E5                 2606 	push	hl
   091B CDr00s00           2607 	call	_memset
   091E F1                 2608 	pop	af
   091F F1                 2609 	pop	af
   0920 33                 2610 	inc	sp
   0921 C1                 2611 	pop	bc
                           2612 ;demo.c:281: raw_load(file_name, size, packbuffer,0);
   0922 21 00 00           2613 	ld	hl,#0x0000
   0925 E5                 2614 	push	hl
   0926 21r60s01           2615 	ld	hl,#_packbuffer
   0929 E5                 2616 	push	hl
   092A C5                 2617 	push	bc
   092B DD 6E 04           2618 	ld	l,4 (ix)
   092E DD 66 05           2619 	ld	h,5 (ix)
   0931 E5                 2620 	push	hl
   0932 CDrD6s07           2621 	call	_raw_load
   0935 F1                 2622 	pop	af
   0936 F1                 2623 	pop	af
   0937 F1                 2624 	pop	af
   0938 F1                 2625 	pop	af
                           2626 ;demo.c:282: bitbuster(packbuffer,address,vram_offset);
   0939 DD 7E 0A           2627 	ld	a,10 (ix)
   093C F5                 2628 	push	af
   093D 33                 2629 	inc	sp
   093E DD 6E 08           2630 	ld	l,8 (ix)
   0941 DD 66 09           2631 	ld	h,9 (ix)
   0944 E5                 2632 	push	hl
   0945 21r60s01           2633 	ld	hl,#_packbuffer
   0948 E5                 2634 	push	hl
   0949 CDr00s00           2635 	call	_bitbuster
   094C F1                 2636 	pop	af
   094D F1                 2637 	pop	af
   094E 33                 2638 	inc	sp
   094F DD E1              2639 	pop	ix
   0951 C9                 2640 	ret
   0952                    2641 _pck_load_end::
   0952                    2642 __str_6:
   0952 6C 6F 61 64 69 6E  2643 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0963 00                 2644 	.db 0x00
   0964                    2645 __str_7:
   0964 0D                 2646 	.db 0x0D
   0965 0A                 2647 	.db 0x0A
   0966 00                 2648 	.db 0x00
                           2649 ;demo.c:285: void fadein() {
                           2650 ;	---------------------------------
                           2651 ; Function fadein
                           2652 ; ---------------------------------
   0967                    2653 _fadein_start::
   0967                    2654 _fadein:
   0967 DD E5              2655 	push	ix
   0969 DD 21 00 00        2656 	ld	ix,#0
   096D DD 39              2657 	add	ix,sp
   096F F5                 2658 	push	af
                           2659 ;demo.c:288: if (tick < 4) return;
   0970 3Ar22s8F           2660 	ld	a,(#_tick+0)
   0973 D6 04              2661 	sub	a,#0x04
   0975 3Ar23s8F           2662 	ld	a,(#_tick+1)
   0978 DE 00              2663 	sbc	a,#0x00
   097A F2r80s09           2664 	jp	P,00102$
   097D C3r2Es0A           2665 	jp	00113$
   0980                    2666 00102$:
                           2667 ;demo.c:290: tick = 0;
   0980 21r22s8F           2668 	ld	hl,#_tick + 0
   0983 36 00              2669 	ld	(hl), #0x00
   0985 21r23s8F           2670 	ld	hl,#_tick + 1
   0988 36 00              2671 	ld	(hl), #0x00
                           2672 ;demo.c:292: for(i = 0; i < 32; i+=2) {
   098A 0E 00              2673 	ld	c,#0x00
   098C                    2674 00109$:
   098C 79                 2675 	ld	a,c
   098D D6 20              2676 	sub	a,#0x20
   098F D2r26s0A           2677 	jp	NC,00112$
                           2678 ;demo.c:293: uint8_t r = scratch[i] >> 4;
   0992 3Er00              2679 	ld	a,#<_scratch
   0994 81                 2680 	add	a,c
   0995 5F                 2681 	ld	e,a
   0996 3Es8E              2682 	ld	a,#>_scratch
   0998 CE 00              2683 	adc	a,#0x00
   099A 57                 2684 	ld	d,a
   099B 1A                 2685 	ld	a,(de)
   099C 47                 2686 	ld	b,a
   099D 58                 2687 	ld	e,b
   099E CB 3B              2688 	srl	e
   09A0 CB 3B              2689 	srl	e
   09A2 CB 3B              2690 	srl	e
   09A4 CB 3B              2691 	srl	e
                           2692 ;demo.c:294: uint8_t b = scratch[i] & 0xf;
   09A6 78                 2693 	ld	a,b
   09A7 E6 0F              2694 	and	a,#0x0F
   09A9 DD 77 FF           2695 	ld	-1 (ix),a
                           2696 ;demo.c:295: uint8_t g = scratch[i+1];
   09AC 51                 2697 	ld	d,c
   09AD 14                 2698 	inc	d
   09AE 3Er00              2699 	ld	a,#<_scratch
   09B0 82                 2700 	add	a,d
   09B1 6F                 2701 	ld	l,a
   09B2 3Es8E              2702 	ld	a,#>_scratch
   09B4 CE 00              2703 	adc	a,#0x00
   09B6 67                 2704 	ld	h,a
   09B7 56                 2705 	ld	d,(hl)
   09B8 DD 72 FE           2706 	ld	-2 (ix),d
                           2707 ;demo.c:297: if (r < (cur_palette[i] >> 4)) r++;
   09BB 3Er80              2708 	ld	a,#<_cur_palette
   09BD 81                 2709 	add	a,c
   09BE 6F                 2710 	ld	l,a
   09BF 3Es8E              2711 	ld	a,#>_cur_palette
   09C1 CE 00              2712 	adc	a,#0x00
   09C3 67                 2713 	ld	h,a
   09C4 56                 2714 	ld	d,(hl)
   09C5 CB 3A              2715 	srl	d
   09C7 CB 3A              2716 	srl	d
   09C9 CB 3A              2717 	srl	d
   09CB CB 3A              2718 	srl	d
   09CD 7B                 2719 	ld	a,e
   09CE 92                 2720 	sub	a,d
   09CF 30 01              2721 	jr	NC,00104$
   09D1 1C                 2722 	inc	e
   09D2                    2723 00104$:
                           2724 ;demo.c:298: if (b < (cur_palette[i] & 0xf)) b++;
   09D2 3Er80              2725 	ld	a,#<_cur_palette
   09D4 81                 2726 	add	a,c
   09D5 6F                 2727 	ld	l,a
   09D6 3Es8E              2728 	ld	a,#>_cur_palette
   09D8 CE 00              2729 	adc	a,#0x00
   09DA 67                 2730 	ld	h,a
   09DB 7E                 2731 	ld	a,(hl)
   09DC E6 0F              2732 	and	a,#0x0F
   09DE 47                 2733 	ld	b,a
   09DF DD 7E FF           2734 	ld	a,-1 (ix)
   09E2 90                 2735 	sub	a,b
   09E3 30 03              2736 	jr	NC,00106$
   09E5 DD 34 FF           2737 	inc	-1 (ix)
   09E8                    2738 00106$:
                           2739 ;demo.c:300: scratch[i] = (r << 4) | b;
   09E8 3Er00              2740 	ld	a,#<_scratch
   09EA 81                 2741 	add	a,c
   09EB 47                 2742 	ld	b,a
   09EC 3Es8E              2743 	ld	a,#>_scratch
   09EE CE 00              2744 	adc	a,#0x00
   09F0 57                 2745 	ld	d,a
   09F1 7B                 2746 	ld	a,e
   09F2 07                 2747 	rlca
   09F3 07                 2748 	rlca
   09F4 07                 2749 	rlca
   09F5 07                 2750 	rlca
   09F6 E6 F0              2751 	and	a,#0xF0
   09F8 DD B6 FF           2752 	or	a,-1 (ix)
   09FB 68                 2753 	ld	l,b
   09FC 62                 2754 	ld	h,d
   09FD 77                 2755 	ld	(hl),a
                           2756 ;demo.c:301: if (g < cur_palette[i+1]) scratch[i+1]++;
   09FE 41                 2757 	ld	b,c
   09FF 04                 2758 	inc	b
   0A00 3Er80              2759 	ld	a,#<_cur_palette
   0A02 80                 2760 	add	a,b
   0A03 5F                 2761 	ld	e,a
   0A04 3Es8E              2762 	ld	a,#>_cur_palette
   0A06 CE 00              2763 	adc	a,#0x00
   0A08 57                 2764 	ld	d,a
   0A09 1A                 2765 	ld	a,(de)
   0A0A 5F                 2766 	ld	e,a
   0A0B DD 7E FE           2767 	ld	a,-2 (ix)
   0A0E 93                 2768 	sub	a,e
   0A0F 30 10              2769 	jr	NC,00111$
   0A11 3Er00              2770 	ld	a,#<_scratch
   0A13 80                 2771 	add	a,b
   0A14 47                 2772 	ld	b,a
   0A15 3Es8E              2773 	ld	a,#>_scratch
   0A17 CE 00              2774 	adc	a,#0x00
   0A19 5F                 2775 	ld	e,a
   0A1A 68                 2776 	ld	l,b
   0A1B 67                 2777 	ld	h,a
   0A1C 7E                 2778 	ld	a,(hl)
   0A1D 3C                 2779 	inc	a
   0A1E 68                 2780 	ld	l,b
   0A1F 63                 2781 	ld	h,e
   0A20 77                 2782 	ld	(hl),a
   0A21                    2783 00111$:
                           2784 ;demo.c:292: for(i = 0; i < 32; i+=2) {
   0A21 0C                 2785 	inc	c
   0A22 0C                 2786 	inc	c
   0A23 C3r8Cs09           2787 	jp	00109$
   0A26                    2788 00112$:
                           2789 ;demo.c:305: vdp_load_palette(scratch);
   0A26 21r00s8E           2790 	ld	hl,#_scratch
   0A29 E5                 2791 	push	hl
   0A2A CDr00s00           2792 	call	_vdp_load_palette
   0A2D F1                 2793 	pop	af
   0A2E                    2794 00113$:
   0A2E DD F9              2795 	ld	sp,ix
   0A30 DD E1              2796 	pop	ix
   0A32 C9                 2797 	ret
   0A33                    2798 _fadein_end::
                           2799 ;demo.c:317: void do_ymmm() {
                           2800 ;	---------------------------------
                           2801 ; Function do_ymmm
                           2802 ; ---------------------------------
   0A33                    2803 _do_ymmm_start::
   0A33                    2804 _do_ymmm:
   0A33 DD E5              2805 	push	ix
   0A35 DD 21 00 00        2806 	ld	ix,#0
   0A39 DD 39              2807 	add	ix,sp
   0A3B F5                 2808 	push	af
                           2809 ;demo.c:321: if (tick > 32) { tick = 0; flipper++;}
   0A3C 3E 20              2810 	ld	a,#0x20
   0A3E FD 21r22s8F        2811 	ld	iy,#_tick
   0A42 FD 96 00           2812 	sub	a,0 (iy)
   0A45 3E 00              2813 	ld	a,#0x00
   0A47 FD 21r22s8F        2814 	ld	iy,#_tick
   0A4B FD 9E 01           2815 	sbc	a,1 (iy)
   0A4E F2r6Bs0A           2816 	jp	P,00102$
   0A51 21r22s8F           2817 	ld	hl,#_tick + 0
   0A54 36 00              2818 	ld	(hl), #0x00
   0A56 21r23s8F           2819 	ld	hl,#_tick + 1
   0A59 36 00              2820 	ld	(hl), #0x00
   0A5B FD 21r3Ds8F        2821 	ld	iy,#_flipper
   0A5F FD 34 00           2822 	inc	0 (iy)
   0A62 20 07              2823 	jr	NZ,00115$
   0A64 FD 21r3Ds8F        2824 	ld	iy,#_flipper
   0A68 FD 34 01           2825 	inc	1 (iy)
   0A6B                    2826 00115$:
   0A6B                    2827 00102$:
                           2828 ;demo.c:322: if (flipper > 10) { flipper = 0;}
   0A6B 3E 0A              2829 	ld	a,#0x0A
   0A6D FD 21r3Ds8F        2830 	ld	iy,#_flipper
   0A71 FD 96 00           2831 	sub	a,0 (iy)
   0A74 3E 00              2832 	ld	a,#0x00
   0A76 FD 21r3Ds8F        2833 	ld	iy,#_flipper
   0A7A FD 9E 01           2834 	sbc	a,1 (iy)
   0A7D F2r8As0A           2835 	jp	P,00104$
   0A80 21r3Ds8F           2836 	ld	hl,#_flipper + 0
   0A83 36 00              2837 	ld	(hl), #0x00
   0A85 21r3Es8F           2838 	ld	hl,#_flipper + 1
   0A88 36 00              2839 	ld	(hl), #0x00
   0A8A                    2840 00104$:
                           2841 ;demo.c:324: ymmmf++;
   0A8A FD 21r3Fs8F        2842 	ld	iy,#_ymmmf
   0A8E FD 34 00           2843 	inc	0 (iy)
   0A91 20 07              2844 	jr	NZ,00116$
   0A93 FD 21r3Fs8F        2845 	ld	iy,#_ymmmf
   0A97 FD 34 01           2846 	inc	1 (iy)
   0A9A                    2847 00116$:
                           2848 ;demo.c:325: for (yofff = 0; yofff<212-step;yofff+=step) {
   0A9A 21r3Bs8F           2849 	ld	hl,#_yofff + 0
   0A9D 36 00              2850 	ld	(hl), #0x00
   0A9F                    2851 00105$:
   0A9F 21r3Bs8F           2852 	ld	hl,#_yofff + 0
   0AA2 4E                 2853 	ld	c,(hl)
   0AA3 06 00              2854 	ld	b,#0x00
   0AA5 79                 2855 	ld	a,c
   0AA6 D6 D2              2856 	sub	a,#0xD2
   0AA8 78                 2857 	ld	a,b
   0AA9 DE 00              2858 	sbc	a,#0x00
   0AAB F2r24s0B           2859 	jp	P,00109$
                           2860 ;demo.c:326: xo = (sintabx[(yofff+ymmmf) & 255]);
   0AAE 21r3Fs8F           2861 	ld	hl,#_ymmmf
   0AB1 79                 2862 	ld	a,c
   0AB2 86                 2863 	add	a,(hl)
   0AB3 5F                 2864 	ld	e,a
   0AB4 78                 2865 	ld	a,b
   0AB5 23                 2866 	inc	hl
   0AB6 8E                 2867 	adc	a,(hl)
   0AB7 16 00              2868 	ld	d,#0x00
   0AB9 CB 23              2869 	sla	e
   0ABB CB 12              2870 	rl	d
   0ABD 21r2Cs00           2871 	ld	hl,#_sintabx
   0AC0 19                 2872 	add	hl,de
   0AC1 5E                 2873 	ld	e,(hl)
   0AC2 23                 2874 	inc	hl
   0AC3 56                 2875 	ld	d,(hl)
   0AC4 DD 73 FE           2876 	ld	-2 (ix),e
   0AC7 DD 72 FF           2877 	ld	-1 (ix),d
                           2878 ;demo.c:329: cmd.source_x = 0;
   0ACA 21r24s8F           2879 	ld	hl,#_cmd
   0ACD 36 00              2880 	ld	(hl),#0x00
   0ACF 23                 2881 	inc	hl
   0AD0 36 00              2882 	ld	(hl),#0x00
                           2883 ;demo.c:330: cmd.source_y = 0+yofff;
   0AD2 11r26s8F           2884 	ld	de,#_cmd + 2
   0AD5 EB                 2885 	ex	de,hl
   0AD6 71                 2886 	ld	(hl),c
   0AD7 23                 2887 	inc	hl
   0AD8 70                 2888 	ld	(hl),b
                           2889 ;demo.c:331: cmd.dest_x = xo;
   0AD9 11r28s8F           2890 	ld	de,#_cmd + 4
   0ADC EB                 2891 	ex	de,hl
   0ADD DD 7E FE           2892 	ld	a,-2 (ix)
   0AE0 77                 2893 	ld	(hl),a
   0AE1 23                 2894 	inc	hl
   0AE2 DD 7E FF           2895 	ld	a,-1 (ix)
   0AE5 77                 2896 	ld	(hl),a
                           2897 ;demo.c:332: cmd.dest_y = 3+yofff;
   0AE6 11r2As8F           2898 	ld	de,#_cmd + 6
   0AE9 03                 2899 	inc	bc
   0AEA 03                 2900 	inc	bc
   0AEB 03                 2901 	inc	bc
   0AEC 6B                 2902 	ld	l,e
   0AED 62                 2903 	ld	h,d
   0AEE 71                 2904 	ld	(hl),c
   0AEF 23                 2905 	inc	hl
   0AF0 70                 2906 	ld	(hl),b
                           2907 ;demo.c:333: cmd.size_x = 256;
   0AF1 21r2Cs8F           2908 	ld	hl, #_cmd + 8
   0AF4 36 00              2909 	ld	(hl),#0x00
   0AF6 23                 2910 	inc	hl
   0AF7 36 01              2911 	ld	(hl),#0x01
                           2912 ;demo.c:334: cmd.size_y = 1;
   0AF9 21r2Es8F           2913 	ld	hl, #_cmd + 10
   0AFC 36 01              2914 	ld	(hl),#0x01
   0AFE 23                 2915 	inc	hl
   0AFF 36 00              2916 	ld	(hl),#0x00
                           2917 ;demo.c:335: cmd.data = 0;
                           2918 ;demo.c:336: cmd.argument = 0;
   0B01 3E 00              2919 	ld	a,#0x00
   0B03 32r30s8F           2920 	ld	(#_cmd + 12),a
   0B06 32r31s8F           2921 	ld	(#_cmd + 13),a
                           2922 ;demo.c:337: cmd.command = 0xD0;
   0B09 3E D0              2923 	ld	a,#0xD0
   0B0B 32r32s8F           2924 	ld	(#_cmd + 14),a
                           2925 ;demo.c:340: vdp_copier(&cmd);
   0B0E 21r24s8F           2926 	ld	hl,#_cmd
   0B11 E5                 2927 	push	hl
   0B12 CDr00s00           2928 	call	_vdp_copier
   0B15 F1                 2929 	pop	af
                           2930 ;demo.c:325: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B16 21r3Bs8F           2931 	ld	hl,#_yofff + 0
   0B19 4E                 2932 	ld	c,(hl)
   0B1A 21r3Bs8F           2933 	ld	hl,#_yofff
   0B1D 79                 2934 	ld	a,c
   0B1E C6 02              2935 	add	a,#0x02
   0B20 77                 2936 	ld	(hl),a
   0B21 C3r9Fs0A           2937 	jp	00105$
   0B24                    2938 00109$:
   0B24 DD F9              2939 	ld	sp,ix
   0B26 DD E1              2940 	pop	ix
   0B28 C9                 2941 	ret
   0B29                    2942 _do_ymmm_end::
                           2943 ;demo.c:357: void do_blocks() {
                           2944 ;	---------------------------------
                           2945 ; Function do_blocks
                           2946 ; ---------------------------------
   0B29                    2947 _do_blocks_start::
   0B29                    2948 _do_blocks:
   0B29 DD E5              2949 	push	ix
   0B2B DD 21 00 00        2950 	ld	ix,#0
   0B2F DD 39              2951 	add	ix,sp
   0B31 21 FA FF           2952 	ld	hl,#-6
   0B34 39                 2953 	add	hl,sp
   0B35 F9                 2954 	ld	sp,hl
                           2955 ;demo.c:359: int ys = 0;
   0B36 DD 36 FC 00        2956 	ld	-4 (ix),#0x00
   0B3A DD 36 FD 00        2957 	ld	-3 (ix),#0x00
                           2958 ;demo.c:360: int ye = 0;
   0B3E DD 36 FA 00        2959 	ld	-6 (ix),#0x00
   0B42 DD 36 FB 00        2960 	ld	-5 (ix),#0x00
                           2961 ;demo.c:362: vdp_register(VDP_VOFFSET,0);
   0B46 21 17 00           2962 	ld	hl,#0x0017
   0B49 E5                 2963 	push	hl
   0B4A CDr00s00           2964 	call	_vdp_register
   0B4D F1                 2965 	pop	af
                           2966 ;demo.c:364: if (block_init == 0) {
   0B4E AF                 2967 	xor	a,a
   0B4F FD 21r41s8F        2968 	ld	iy,#_block_init
   0B53 FD B6 00           2969 	or	a,0 (iy)
   0B56 C2rBEs0B           2970 	jp	NZ,00108$
                           2971 ;demo.c:366: vdp_set_screen5();
   0B59 CDr00s00           2972 	call	_vdp_set_screen5
                           2973 ;demo.c:368: vdp_register(2, 0x5F);
   0B5C 21 02 5F           2974 	ld	hl,#0x5F02
   0B5F E5                 2975 	push	hl
   0B60 CDr00s00           2976 	call	_vdp_register
   0B63 F1                 2977 	pop	af
                           2978 ;demo.c:370: for(i=0;i<16;i++) btab[i] = i*16;
   0B64 DD 36 FE 00        2979 	ld	-2 (ix),#0x00
   0B68 DD 36 FF 00        2980 	ld	-1 (ix),#0x00
   0B6C                    2981 00110$:
   0B6C DD 7E FE           2982 	ld	a,-2 (ix)
   0B6F D6 10              2983 	sub	a,#0x10
   0B71 DD 7E FF           2984 	ld	a,-1 (ix)
   0B74 DE 00              2985 	sbc	a,#0x00
   0B76 F2rAEs0B           2986 	jp	P,00113$
   0B79 DD 4E FE           2987 	ld	c,-2 (ix)
   0B7C DD 46 FF           2988 	ld	b,-1 (ix)
   0B7F CB 21              2989 	sla	c
   0B81 CB 10              2990 	rl	b
   0B83 21r4As8F           2991 	ld	hl,#_btab
   0B86 09                 2992 	add	hl,bc
   0B87 4D                 2993 	ld	c,l
   0B88 44                 2994 	ld	b,h
   0B89 DD 5E FE           2995 	ld	e,-2 (ix)
   0B8C DD 56 FF           2996 	ld	d,-1 (ix)
   0B8F CB 23              2997 	sla	e
   0B91 CB 12              2998 	rl	d
   0B93 CB 23              2999 	sla	e
   0B95 CB 12              3000 	rl	d
   0B97 CB 23              3001 	sla	e
   0B99 CB 12              3002 	rl	d
   0B9B CB 23              3003 	sla	e
   0B9D CB 12              3004 	rl	d
   0B9F 69                 3005 	ld	l,c
   0BA0 60                 3006 	ld	h,b
   0BA1 73                 3007 	ld	(hl),e
   0BA2 23                 3008 	inc	hl
   0BA3 72                 3009 	ld	(hl),d
   0BA4 DD 34 FE           3010 	inc	-2 (ix)
   0BA7 20 03              3011 	jr	NZ,00139$
   0BA9 DD 34 FF           3012 	inc	-1 (ix)
   0BAC                    3013 00139$:
   0BAC 18 BE              3014 	jr	00110$
   0BAE                    3015 00113$:
                           3016 ;demo.c:371: vdp_load_palette(block_palette);
   0BAE 21rA0s8E           3017 	ld	hl,#_block_palette
   0BB1 E5                 3018 	push	hl
   0BB2 CDr00s00           3019 	call	_vdp_load_palette
   0BB5 F1                 3020 	pop	af
                           3021 ;demo.c:373: block_init = 1;
   0BB6 21r41s8F           3022 	ld	hl,#_block_init + 0
   0BB9 36 01              3023 	ld	(hl), #0x01
   0BBB C3r47s0D           3024 	jp	00122$
   0BBE                    3025 00108$:
                           3026 ;demo.c:377: if (flof == 0) { ys = 0; ye = 8; }
   0BBE 3Ar6As8F           3027 	ld	a,(#_flof+0)
   0BC1 FD 21r6As8F        3028 	ld	iy,#_flof
   0BC5 FD B6 01           3029 	or	a,1 (iy)
   0BC8 20 10              3030 	jr	NZ,00102$
   0BCA DD 36 FC 00        3031 	ld	-4 (ix),#0x00
   0BCE DD 36 FD 00        3032 	ld	-3 (ix),#0x00
   0BD2 DD 36 FA 08        3033 	ld	-6 (ix),#0x08
   0BD6 DD 36 FB 00        3034 	ld	-5 (ix),#0x00
   0BDA                    3035 00102$:
                           3036 ;demo.c:378: if (flof == 1) { ys = 8; ye = 16; }
   0BDA 3Ar6As8F           3037 	ld	a,(#_flof+0)
   0BDD D6 01              3038 	sub	a,#0x01
   0BDF 20 06              3039 	jr	NZ,00140$
   0BE1 3Ar6Bs8F           3040 	ld	a,(#_flof+1)
   0BE4 B7                 3041 	or	a,a
   0BE5 28 02              3042 	jr	Z,00141$
   0BE7                    3043 00140$:
   0BE7 18 10              3044 	jr	00104$
   0BE9                    3045 00141$:
   0BE9 DD 36 FC 08        3046 	ld	-4 (ix),#0x08
   0BED DD 36 FD 00        3047 	ld	-3 (ix),#0x00
   0BF1 DD 36 FA 10        3048 	ld	-6 (ix),#0x10
   0BF5 DD 36 FB 00        3049 	ld	-5 (ix),#0x00
   0BF9                    3050 00104$:
                           3051 ;demo.c:380: for(bty=3;bty<11;bty++) {
   0BF9 FD 21r48s8F        3052 	ld	iy,#_bty
   0BFD FD 36 00 03        3053 	ld	0 (iy),#0x03
   0C01 FD 21r48s8F        3054 	ld	iy,#_bty
   0C05 FD 36 01 00        3055 	ld	1 (iy),#0x00
   0C09                    3056 00118$:
   0C09 3Ar48s8F           3057 	ld	a,(#_bty+0)
   0C0C D6 0B              3058 	sub	a,#0x0B
   0C0E 3Ar49s8F           3059 	ld	a,(#_bty+1)
   0C11 DE 00              3060 	sbc	a,#0x00
   0C13 F2r1Es0D           3061 	jp	P,00121$
                           3062 ;demo.c:381: for(btx=ys;btx<ye;btx++) {
   0C16 DD 7E FC           3063 	ld	a,-4 (ix)
   0C19 FD 21r46s8F        3064 	ld	iy,#_btx
   0C1D FD 77 00           3065 	ld	0 (iy),a
   0C20 DD 7E FD           3066 	ld	a,-3 (ix)
   0C23 FD 21r46s8F        3067 	ld	iy,#_btx
   0C27 FD 77 01           3068 	ld	1 (iy),a
   0C2A                    3069 00114$:
   0C2A 3Ar46s8F           3070 	ld	a,(#_btx+0)
   0C2D DD 96 FA           3071 	sub	a,-6 (ix)
   0C30 3Ar47s8F           3072 	ld	a,(#_btx+1)
   0C33 DD 9E FB           3073 	sbc	a,-5 (ix)
   0C36 F2r0Bs0D           3074 	jp	P,00120$
                           3075 ;demo.c:382: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0C39 3Ar00s00           3076 	ld	a,(#_PLY_PSGReg8+0)
   0C3C FD 21r00s00        3077 	ld	iy,#_PLY_PSGReg9
   0C40 FD A6 00           3078 	and	a,0 (iy)
   0C43 21r00s00           3079 	ld	hl,#_PLY_PSGReg10 + 0
   0C46 B6                 3080 	or	a,(hl)
   0C47 4F                 3081 	ld	c,a
   0C48 CB 39              3082 	srl	c
   0C4A 21r42s8F           3083 	ld	hl,#_bsx + 0
   0C4D 71                 3084 	ld	(hl), c
   0C4E 21r43s8F           3085 	ld	hl,#_bsx + 1
   0C51 36 00              3086 	ld	(hl), #0x00
                           3087 ;demo.c:383: bsy = PLY_PSGReg10;
   0C53 3Ar00s00           3088 	ld	a,(#_PLY_PSGReg10+0)
   0C56 21r44s8F           3089 	ld	hl,#_bsy + 0
   0C59 77                 3090 	ld	(hl), a
   0C5A 21r45s8F           3091 	ld	hl,#_bsy + 1
   0C5D 36 00              3092 	ld	(hl), #0x00
                           3093 ;demo.c:384: cmd.source_x = btab[bsx];
   0C5F 21r42s8F           3094 	ld	hl,#_bsx + 0
   0C62 4E                 3095 	ld	c,(hl)
   0C63 21r43s8F           3096 	ld	hl,#_bsx + 1
   0C66 46                 3097 	ld	b,(hl)
   0C67 CB 21              3098 	sla	c
   0C69 CB 10              3099 	rl	b
   0C6B 21r4As8F           3100 	ld	hl,#_btab
   0C6E 09                 3101 	add	hl,bc
   0C6F 4E                 3102 	ld	c,(hl)
   0C70 23                 3103 	inc	hl
   0C71 46                 3104 	ld	b,(hl)
   0C72 21r24s8F           3105 	ld	hl,#_cmd
   0C75 71                 3106 	ld	(hl),c
   0C76 23                 3107 	inc	hl
   0C77 70                 3108 	ld	(hl),b
                           3109 ;demo.c:385: cmd.source_y = 768+btab[bsy];
   0C78 01r26s8F           3110 	ld	bc,#_cmd + 2
   0C7B 21r44s8F           3111 	ld	hl,#_bsy + 0
   0C7E 5E                 3112 	ld	e,(hl)
   0C7F 21r45s8F           3113 	ld	hl,#_bsy + 1
   0C82 56                 3114 	ld	d,(hl)
   0C83 CB 23              3115 	sla	e
   0C85 CB 12              3116 	rl	d
   0C87 21r4As8F           3117 	ld	hl,#_btab
   0C8A 19                 3118 	add	hl,de
   0C8B 5E                 3119 	ld	e,(hl)
   0C8C 23                 3120 	inc	hl
   0C8D 56                 3121 	ld	d,(hl)
   0C8E 21 00 03           3122 	ld	hl,#0x0300
   0C91 19                 3123 	add	hl,de
   0C92 EB                 3124 	ex	de,hl
   0C93 69                 3125 	ld	l,c
   0C94 60                 3126 	ld	h,b
   0C95 73                 3127 	ld	(hl),e
   0C96 23                 3128 	inc	hl
   0C97 72                 3129 	ld	(hl),d
                           3130 ;demo.c:386: cmd.dest_x = btab[btx];
   0C98 01r28s8F           3131 	ld	bc,#_cmd + 4
   0C9B 21r46s8F           3132 	ld	hl,#_btx + 0
   0C9E 5E                 3133 	ld	e,(hl)
   0C9F 21r47s8F           3134 	ld	hl,#_btx + 1
   0CA2 56                 3135 	ld	d,(hl)
   0CA3 CB 23              3136 	sla	e
   0CA5 CB 12              3137 	rl	d
   0CA7 21r4As8F           3138 	ld	hl,#_btab
   0CAA 19                 3139 	add	hl,de
   0CAB 5E                 3140 	ld	e,(hl)
   0CAC 23                 3141 	inc	hl
   0CAD 56                 3142 	ld	d,(hl)
   0CAE 69                 3143 	ld	l,c
   0CAF 60                 3144 	ld	h,b
   0CB0 73                 3145 	ld	(hl),e
   0CB1 23                 3146 	inc	hl
   0CB2 72                 3147 	ld	(hl),d
                           3148 ;demo.c:387: cmd.dest_y = 512+btab[bty];
   0CB3 01r2As8F           3149 	ld	bc,#_cmd + 6
   0CB6 21r48s8F           3150 	ld	hl,#_bty + 0
   0CB9 5E                 3151 	ld	e,(hl)
   0CBA 21r49s8F           3152 	ld	hl,#_bty + 1
   0CBD 56                 3153 	ld	d,(hl)
   0CBE CB 23              3154 	sla	e
   0CC0 CB 12              3155 	rl	d
   0CC2 21r4As8F           3156 	ld	hl,#_btab
   0CC5 19                 3157 	add	hl,de
   0CC6 5E                 3158 	ld	e,(hl)
   0CC7 23                 3159 	inc	hl
   0CC8 56                 3160 	ld	d,(hl)
   0CC9 21 00 02           3161 	ld	hl,#0x0200
   0CCC 19                 3162 	add	hl,de
   0CCD EB                 3163 	ex	de,hl
   0CCE 69                 3164 	ld	l,c
   0CCF 60                 3165 	ld	h,b
   0CD0 73                 3166 	ld	(hl),e
   0CD1 23                 3167 	inc	hl
   0CD2 72                 3168 	ld	(hl),d
                           3169 ;demo.c:388: cmd.size_x = 16;
   0CD3 21r2Cs8F           3170 	ld	hl, #_cmd + 8
   0CD6 36 10              3171 	ld	(hl),#0x10
   0CD8 23                 3172 	inc	hl
   0CD9 36 00              3173 	ld	(hl),#0x00
                           3174 ;demo.c:389: cmd.size_y = 16;
   0CDB 21r2Es8F           3175 	ld	hl, #_cmd + 10
   0CDE 36 10              3176 	ld	(hl),#0x10
   0CE0 23                 3177 	inc	hl
   0CE1 36 00              3178 	ld	(hl),#0x00
                           3179 ;demo.c:390: cmd.data = 0;
                           3180 ;demo.c:391: cmd.argument = 0x00;
   0CE3 3E 00              3181 	ld	a,#0x00
   0CE5 32r30s8F           3182 	ld	(#_cmd + 12),a
   0CE8 32r31s8F           3183 	ld	(#_cmd + 13),a
                           3184 ;demo.c:392: cmd.command = 0xD0;
   0CEB 3E D0              3185 	ld	a,#0xD0
   0CED 32r32s8F           3186 	ld	(#_cmd + 14),a
                           3187 ;demo.c:393: vdp_copier(&cmd);
   0CF0 21r24s8F           3188 	ld	hl,#_cmd
   0CF3 E5                 3189 	push	hl
   0CF4 CDr00s00           3190 	call	_vdp_copier
   0CF7 F1                 3191 	pop	af
                           3192 ;demo.c:381: for(btx=ys;btx<ye;btx++) {
   0CF8 FD 21r46s8F        3193 	ld	iy,#_btx
   0CFC FD 34 00           3194 	inc	0 (iy)
   0CFF 20 07              3195 	jr	NZ,00150$
   0D01 FD 21r46s8F        3196 	ld	iy,#_btx
   0D05 FD 34 01           3197 	inc	1 (iy)
   0D08                    3198 00150$:
   0D08 C3r2As0C           3199 	jp	00114$
   0D0B                    3200 00120$:
                           3201 ;demo.c:380: for(bty=3;bty<11;bty++) {
   0D0B FD 21r48s8F        3202 	ld	iy,#_bty
   0D0F FD 34 00           3203 	inc	0 (iy)
   0D12 20 07              3204 	jr	NZ,00151$
   0D14 FD 21r48s8F        3205 	ld	iy,#_bty
   0D18 FD 34 01           3206 	inc	1 (iy)
   0D1B                    3207 00151$:
   0D1B C3r09s0C           3208 	jp	00118$
   0D1E                    3209 00121$:
                           3210 ;demo.c:397: flof++;
   0D1E FD 21r6As8F        3211 	ld	iy,#_flof
   0D22 FD 34 00           3212 	inc	0 (iy)
   0D25 20 07              3213 	jr	NZ,00152$
   0D27 FD 21r6As8F        3214 	ld	iy,#_flof
   0D2B FD 34 01           3215 	inc	1 (iy)
   0D2E                    3216 00152$:
                           3217 ;demo.c:398: if (flof == 2) flof = 0;
   0D2E 3Ar6As8F           3218 	ld	a,(#_flof+0)
   0D31 D6 02              3219 	sub	a,#0x02
   0D33 20 06              3220 	jr	NZ,00153$
   0D35 3Ar6Bs8F           3221 	ld	a,(#_flof+1)
   0D38 B7                 3222 	or	a,a
   0D39 28 02              3223 	jr	Z,00154$
   0D3B                    3224 00153$:
   0D3B 18 0A              3225 	jr	00122$
   0D3D                    3226 00154$:
   0D3D 21r6As8F           3227 	ld	hl,#_flof + 0
   0D40 36 00              3228 	ld	(hl), #0x00
   0D42 21r6Bs8F           3229 	ld	hl,#_flof + 1
   0D45 36 00              3230 	ld	(hl), #0x00
   0D47                    3231 00122$:
   0D47 DD F9              3232 	ld	sp,ix
   0D49 DD E1              3233 	pop	ix
   0D4B C9                 3234 	ret
   0D4C                    3235 _do_blocks_end::
                           3236 ;demo.c:406: void raster_effu() {
                           3237 ;	---------------------------------
                           3238 ; Function raster_effu
                           3239 ; ---------------------------------
   0D4C                    3240 _raster_effu_start::
   0D4C                    3241 _raster_effu:
                           3242 ;demo.c:407: vdp_register(VDP_VOFFSET,0);
   0D4C 21 17 00           3243 	ld	hl,#0x0017
   0D4F E5                 3244 	push	hl
   0D50 CDr00s00           3245 	call	_vdp_register
   0D53 F1                 3246 	pop	af
                           3247 ;demo.c:408: waitVB();
   0D54 76                 3248 		halt 
                           3249 ;demo.c:410: vdp_register(1,0x40); // disable vblank
   0D55 21 01 40           3250 	ld	hl,#0x4001
   0D58 E5                 3251 	push	hl
   0D59 CDr00s00           3252 	call	_vdp_register
                           3253 ;demo.c:412: for (linenum = 40; linenum < 212; linenum+=4) {
   0D5C 3E 28              3254 	ld	a,#0x28
   0D5E 32r6Cs8F           3255 	ld	(#_linenum + 0),a
   0D61 F1                 3256 	pop	af
   0D62 FD 21r6Cs8F        3257 	ld	iy,#_linenum
   0D66 FD 36 01 00        3258 	ld	1 (iy),#0x00
   0D6A                    3259 00101$:
   0D6A 3Ar6Cs8F           3260 	ld	a,(#_linenum+0)
   0D6D D6 D4              3261 	sub	a,#0xD4
   0D6F 3Ar6Ds8F           3262 	ld	a,(#_linenum+1)
   0D72 DE 00              3263 	sbc	a,#0x00
   0D74 F2rA5s0D           3264 	jp	P,00104$
                           3265 ;demo.c:413: vdp_register(19,linenum); // interrupt on line
   0D77 3Ar6Cs8F           3266 	ld	a,(#_linenum+0)
   0D7A F5                 3267 	push	af
   0D7B 33                 3268 	inc	sp
   0D7C 3E 13              3269 	ld	a,#0x13
   0D7E F5                 3270 	push	af
   0D7F 33                 3271 	inc	sp
   0D80 CDr00s00           3272 	call	_vdp_register
   0D83 F1                 3273 	pop	af
                           3274 ;demo.c:414: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0D84 21 00 16           3275 	ld	hl,#0x1600
   0D87 E5                 3276 	push	hl
   0D88 CDr00s00           3277 	call	_vdp_register
   0D8B F1                 3278 	pop	af
                           3279 ;demo.c:416: waitVB();
   0D8C 76                 3280 		halt 
                           3281 ;demo.c:412: for (linenum = 40; linenum < 212; linenum+=4) {
   0D8D 21r6Cs8F           3282 	ld	hl,#_linenum
   0D90 7E                 3283 	ld	a,(hl)
   0D91 C6 04              3284 	add	a,#0x04
   0D93 23                 3285 	inc	hl
   0D94 2B                 3286 	dec	hl
   0D95 C5                 3287 	push	bc
   0D96 4F                 3288 	ld	c, a
   0D97 23                 3289 	inc	hl
   0D98 7E                 3290 	ld	a, (hl)
   0D99 47                 3291 	ld	b, a
   0D9A 79                 3292 	ld	a, c
   0D9B 2B                 3293 	dec	hl
   0D9C 77                 3294 	ld	(hl), a
   0D9D 78                 3295 	ld	a, b
   0D9E C1                 3296 	pop	bc
   0D9F CE 00              3297 	adc	a,#0x00
   0DA1 23                 3298 	inc	hl
   0DA2 77                 3299 	ld	(hl),a
   0DA3 18 C5              3300 	jr	00101$
   0DA5                    3301 00104$:
                           3302 ;demo.c:419: vdp_register(VDP_VOFFSET,0);
   0DA5 21 17 00           3303 	ld	hl,#0x0017
   0DA8 E5                 3304 	push	hl
   0DA9 CDr00s00           3305 	call	_vdp_register
   0DAC F1                 3306 	pop	af
                           3307 ;demo.c:433: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0DAD 21 00 06           3308 	ld	hl,#0x0600
   0DB0 E5                 3309 	push	hl
   0DB1 CDr00s00           3310 	call	_vdp_register
   0DB4 F1                 3311 	pop	af
                           3312 ;demo.c:434: vdp_register(1,0x60); // enable vblank
   0DB5 21 01 60           3313 	ld	hl,#0x6001
   0DB8 E5                 3314 	push	hl
   0DB9 CDr00s00           3315 	call	_vdp_register
   0DBC F1                 3316 	pop	af
   0DBD C9                 3317 	ret
   0DBE                    3318 _raster_effu_end::
                           3319 ;demo.c:465: void do_letter(char cc) {
                           3320 ;	---------------------------------
                           3321 ; Function do_letter
                           3322 ; ---------------------------------
   0DBE                    3323 _do_letter_start::
   0DBE                    3324 _do_letter:
   0DBE DD E5              3325 	push	ix
   0DC0 DD 21 00 00        3326 	ld	ix,#0
   0DC4 DD 39              3327 	add	ix,sp
   0DC6 F5                 3328 	push	af
                           3329 ;demo.c:466: int cidx = cc - 65;
   0DC7 DD 4E 04           3330 	ld	c,4 (ix)
   0DCA DD 7E 04           3331 	ld	a,4 (ix)
   0DCD 17                 3332 	rla	
   0DCE 9F                 3333 	sbc	a,a
   0DCF 47                 3334 	ld	b,a
   0DD0 79                 3335 	ld	a,c
   0DD1 C6 BF              3336 	add	a,#0xBF
   0DD3 DD 77 FE           3337 	ld	-2 (ix),a
   0DD6 78                 3338 	ld	a,b
   0DD7 CE FF              3339 	adc	a,#0xFF
   0DD9 DD 77 FF           3340 	ld	-1 (ix),a
                           3341 ;demo.c:467: cmd.source_x = 127+font_x[cidx];
   0DDC 3Er7C              3342 	ld	a,#<_font_x
   0DDE DD 86 FE           3343 	add	a,-2 (ix)
   0DE1 5F                 3344 	ld	e,a
   0DE2 3Es0E              3345 	ld	a,#>_font_x
   0DE4 DD 8E FF           3346 	adc	a,-1 (ix)
   0DE7 57                 3347 	ld	d,a
   0DE8 1A                 3348 	ld	a,(de)
   0DE9 5F                 3349 	ld	e,a
   0DEA 16 00              3350 	ld	d,#0x00
   0DEC 21 7F 00           3351 	ld	hl,#0x007F
   0DEF 19                 3352 	add	hl,de
   0DF0 EB                 3353 	ex	de,hl
   0DF1 21r24s8F           3354 	ld	hl,#_cmd
   0DF4 73                 3355 	ld	(hl),e
   0DF5 23                 3356 	inc	hl
   0DF6 72                 3357 	ld	(hl),d
                           3358 ;demo.c:468: cmd.source_y = 512+font_y[cidx];
   0DF7 11r26s8F           3359 	ld	de,#_cmd + 2
   0DFA 3ErBC              3360 	ld	a,#<_font_y
   0DFC DD 86 FE           3361 	add	a,-2 (ix)
   0DFF 4F                 3362 	ld	c,a
   0E00 3Es0E              3363 	ld	a,#>_font_y
   0E02 DD 8E FF           3364 	adc	a,-1 (ix)
   0E05 47                 3365 	ld	b,a
   0E06 0A                 3366 	ld	a,(bc)
   0E07 4F                 3367 	ld	c,a
   0E08 06 00              3368 	ld	b,#0x00
   0E0A 21 00 02           3369 	ld	hl,#0x0200
   0E0D 09                 3370 	add	hl,bc
   0E0E 4D                 3371 	ld	c,l
   0E0F 44                 3372 	ld	b,h
   0E10 EB                 3373 	ex	de,hl
   0E11 71                 3374 	ld	(hl),c
   0E12 23                 3375 	inc	hl
   0E13 70                 3376 	ld	(hl),b
                           3377 ;demo.c:469: cmd.dest_x = lx;
   0E14 01r28s8F           3378 	ld	bc,#_cmd + 4
   0E17 21r6Es8F           3379 	ld	hl,#_lx + 0
   0E1A 5E                 3380 	ld	e,(hl)
   0E1B 16 00              3381 	ld	d,#0x00
   0E1D 69                 3382 	ld	l,c
   0E1E 60                 3383 	ld	h,b
   0E1F 73                 3384 	ld	(hl),e
   0E20 23                 3385 	inc	hl
   0E21 72                 3386 	ld	(hl),d
                           3387 ;demo.c:470: cmd.dest_y = ly;
   0E22 01r2As8F           3388 	ld	bc,#_cmd + 6
   0E25 21r6Fs8F           3389 	ld	hl,#_ly + 0
   0E28 5E                 3390 	ld	e,(hl)
   0E29 16 00              3391 	ld	d,#0x00
   0E2B 69                 3392 	ld	l,c
   0E2C 60                 3393 	ld	h,b
   0E2D 73                 3394 	ld	(hl),e
   0E2E 23                 3395 	inc	hl
   0E2F 72                 3396 	ld	(hl),d
                           3397 ;demo.c:471: cmd.size_x = font_w[cidx];
   0E30 01r2Cs8F           3398 	ld	bc,#_cmd + 8
   0E33 3ErFC              3399 	ld	a,#<_font_w
   0E35 DD 86 FE           3400 	add	a,-2 (ix)
   0E38 5F                 3401 	ld	e,a
   0E39 3Es0E              3402 	ld	a,#>_font_w
   0E3B DD 8E FF           3403 	adc	a,-1 (ix)
   0E3E 57                 3404 	ld	d,a
   0E3F 1A                 3405 	ld	a,(de)
   0E40 5F                 3406 	ld	e,a
   0E41 16 00              3407 	ld	d,#0x00
   0E43 69                 3408 	ld	l,c
   0E44 60                 3409 	ld	h,b
   0E45 73                 3410 	ld	(hl),e
   0E46 23                 3411 	inc	hl
   0E47 72                 3412 	ld	(hl),d
                           3413 ;demo.c:472: cmd.size_y = 8;
   0E48 21r2Es8F           3414 	ld	hl, #_cmd + 10
   0E4B 36 08              3415 	ld	(hl),#0x08
   0E4D 23                 3416 	inc	hl
   0E4E 36 00              3417 	ld	(hl),#0x00
                           3418 ;demo.c:473: cmd.argument = 0x00;
   0E50 3E 00              3419 	ld	a,#0x00
   0E52 32r31s8F           3420 	ld	(#_cmd + 13),a
                           3421 ;demo.c:474: cmd.command = 0x90; // logical vram to vram
   0E55 3E 90              3422 	ld	a,#0x90
   0E57 32r32s8F           3423 	ld	(#_cmd + 14),a
                           3424 ;demo.c:475: vdp_copier(&cmd);
   0E5A 21r24s8F           3425 	ld	hl,#_cmd
   0E5D E5                 3426 	push	hl
   0E5E CDr00s00           3427 	call	_vdp_copier
   0E61 F1                 3428 	pop	af
                           3429 ;demo.c:476: lx+=font_w[cidx]-1;
   0E62 3ErFC              3430 	ld	a,#<_font_w
   0E64 DD 86 FE           3431 	add	a,-2 (ix)
   0E67 4F                 3432 	ld	c,a
   0E68 3Es0E              3433 	ld	a,#>_font_w
   0E6A DD 8E FF           3434 	adc	a,-1 (ix)
   0E6D 47                 3435 	ld	b,a
   0E6E 0A                 3436 	ld	a,(bc)
   0E6F 4F                 3437 	ld	c,a
   0E70 0D                 3438 	dec	c
   0E71 21r6Es8F           3439 	ld	hl,#_lx
   0E74 7E                 3440 	ld	a,(hl)
   0E75 81                 3441 	add	a,c
   0E76 77                 3442 	ld	(hl),a
   0E77 DD F9              3443 	ld	sp,ix
   0E79 DD E1              3444 	pop	ix
   0E7B C9                 3445 	ret
   0E7C                    3446 _do_letter_end::
   0E7C                    3447 _font_x:
   0E7C 01                 3448 	.db #0x01
   0E7D 09                 3449 	.db #0x09
   0E7E 11                 3450 	.db #0x11
   0E7F 19                 3451 	.db #0x19
   0E80 21                 3452 	.db #0x21
   0E81 29                 3453 	.db #0x29
   0E82 31                 3454 	.db #0x31
   0E83 39                 3455 	.db #0x39
   0E84 41                 3456 	.db #0x41
   0E85 46                 3457 	.db #0x46
   0E86 4E                 3458 	.db #0x4E
   0E87 56                 3459 	.db #0x56
   0E88 5E                 3460 	.db #0x5E
   0E89 01                 3461 	.db #0x01
   0E8A 0A                 3462 	.db #0x0A
   0E8B 12                 3463 	.db #0x12
   0E8C 1A                 3464 	.db #0x1A
   0E8D 23                 3465 	.db #0x23
   0E8E 2B                 3466 	.db #0x2B
   0E8F 33                 3467 	.db #0x33
   0E90 3C                 3468 	.db #0x3C
   0E91 44                 3469 	.db #0x44
   0E92 4C                 3470 	.db #0x4C
   0E93 56                 3471 	.db #0x56
   0E94 5E                 3472 	.db #0x5E
   0E95 67                 3473 	.db #0x67
   0E96 00                 3474 	.db #0x00
   0E97 00                 3475 	.db #0x00
   0E98 00                 3476 	.db #0x00
   0E99 00                 3477 	.db #0x00
   0E9A 00                 3478 	.db #0x00
   0E9B 00                 3479 	.db #0x00
   0E9C 01                 3480 	.db #0x01
   0E9D 09                 3481 	.db #0x09
   0E9E 11                 3482 	.db #0x11
   0E9F 18                 3483 	.db #0x18
   0EA0 20                 3484 	.db #0x20
   0EA1 28                 3485 	.db #0x28
   0EA2 2F                 3486 	.db #0x2F
   0EA3 37                 3487 	.db #0x37
   0EA4 3F                 3488 	.db #0x3F
   0EA5 45                 3489 	.db #0x45
   0EA6 4C                 3490 	.db #0x4C
   0EA7 54                 3491 	.db #0x54
   0EA8 5A                 3492 	.db #0x5A
   0EA9 64                 3493 	.db #0x64
   0EAA 01                 3494 	.db #0x01
   0EAB 09                 3495 	.db #0x09
   0EAC 11                 3496 	.db #0x11
   0EAD 19                 3497 	.db #0x19
   0EAE 21                 3498 	.db #0x21
   0EAF 29                 3499 	.db #0x29
   0EB0 30                 3500 	.db #0x30
   0EB1 38                 3501 	.db #0x38
   0EB2 40                 3502 	.db #0x40
   0EB3 4A                 3503 	.db #0x4A
   0EB4 52                 3504 	.db #0x52
   0EB5 5A                 3505 	.db #0x5A
   0EB6 00                 3506 	.db 0x00
   0EB7 00                 3507 	.db 0x00
   0EB8 00                 3508 	.db 0x00
   0EB9 00                 3509 	.db 0x00
   0EBA 00                 3510 	.db 0x00
   0EBB 00                 3511 	.db 0x00
   0EBC                    3512 _font_y:
   0EBC 1C                 3513 	.db #0x1C
   0EBD 1C                 3514 	.db #0x1C
   0EBE 1C                 3515 	.db #0x1C
   0EBF 1C                 3516 	.db #0x1C
   0EC0 1C                 3517 	.db #0x1C
   0EC1 1C                 3518 	.db #0x1C
   0EC2 1C                 3519 	.db #0x1C
   0EC3 1C                 3520 	.db #0x1C
   0EC4 1C                 3521 	.db #0x1C
   0EC5 1C                 3522 	.db #0x1C
   0EC6 1C                 3523 	.db #0x1C
   0EC7 1C                 3524 	.db #0x1C
   0EC8 1C                 3525 	.db #0x1C
   0EC9 25                 3526 	.db #0x25
   0ECA 25                 3527 	.db #0x25
   0ECB 25                 3528 	.db #0x25
   0ECC 25                 3529 	.db #0x25
   0ECD 25                 3530 	.db #0x25
   0ECE 25                 3531 	.db #0x25
   0ECF 25                 3532 	.db #0x25
   0ED0 25                 3533 	.db #0x25
   0ED1 25                 3534 	.db #0x25
   0ED2 25                 3535 	.db #0x25
   0ED3 25                 3536 	.db #0x25
   0ED4 25                 3537 	.db #0x25
   0ED5 25                 3538 	.db #0x25
   0ED6 00                 3539 	.db #0x00
   0ED7 00                 3540 	.db #0x00
   0ED8 00                 3541 	.db #0x00
   0ED9 00                 3542 	.db #0x00
   0EDA 00                 3543 	.db #0x00
   0EDB 00                 3544 	.db #0x00
   0EDC 37                 3545 	.db #0x37
   0EDD 37                 3546 	.db #0x37
   0EDE 37                 3547 	.db #0x37
   0EDF 37                 3548 	.db #0x37
   0EE0 37                 3549 	.db #0x37
   0EE1 37                 3550 	.db #0x37
   0EE2 37                 3551 	.db #0x37
   0EE3 37                 3552 	.db #0x37
   0EE4 37                 3553 	.db #0x37
   0EE5 37                 3554 	.db #0x37
   0EE6 37                 3555 	.db #0x37
   0EE7 37                 3556 	.db #0x37
   0EE8 37                 3557 	.db #0x37
   0EE9 37                 3558 	.db #0x37
   0EEA 40                 3559 	.db #0x40
   0EEB 40                 3560 	.db #0x40
   0EEC 40                 3561 	.db #0x40
   0EED 40                 3562 	.db #0x40
   0EEE 40                 3563 	.db #0x40
   0EEF 40                 3564 	.db #0x40
   0EF0 40                 3565 	.db #0x40
   0EF1 40                 3566 	.db #0x40
   0EF2 40                 3567 	.db #0x40
   0EF3 40                 3568 	.db #0x40
   0EF4 40                 3569 	.db #0x40
   0EF5 40                 3570 	.db #0x40
   0EF6 00                 3571 	.db 0x00
   0EF7 00                 3572 	.db 0x00
   0EF8 00                 3573 	.db 0x00
   0EF9 00                 3574 	.db 0x00
   0EFA 00                 3575 	.db 0x00
   0EFB 00                 3576 	.db 0x00
   0EFC                    3577 _font_w:
   0EFC 07                 3578 	.db #0x07
   0EFD 07                 3579 	.db #0x07
   0EFE 07                 3580 	.db #0x07
   0EFF 07                 3581 	.db #0x07
   0F00 07                 3582 	.db #0x07
   0F01 07                 3583 	.db #0x07
   0F02 07                 3584 	.db #0x07
   0F03 07                 3585 	.db #0x07
   0F04 04                 3586 	.db #0x04
   0F05 07                 3587 	.db #0x07
   0F06 07                 3588 	.db #0x07
   0F07 07                 3589 	.db #0x07
   0F08 09                 3590 	.db #0x09
   0F09 08                 3591 	.db #0x08
   0F0A 07                 3592 	.db #0x07
   0F0B 07                 3593 	.db #0x07
   0F0C 08                 3594 	.db #0x08
   0F0D 07                 3595 	.db #0x07
   0F0E 07                 3596 	.db #0x07
   0F0F 08                 3597 	.db #0x08
   0F10 07                 3598 	.db #0x07
   0F11 07                 3599 	.db #0x07
   0F12 09                 3600 	.db #0x09
   0F13 07                 3601 	.db #0x07
   0F14 08                 3602 	.db #0x08
   0F15 07                 3603 	.db #0x07
   0F16 00                 3604 	.db #0x00
   0F17 00                 3605 	.db #0x00
   0F18 00                 3606 	.db #0x00
   0F19 00                 3607 	.db #0x00
   0F1A 00                 3608 	.db #0x00
   0F1B 00                 3609 	.db #0x00
   0F1C 07                 3610 	.db #0x07
   0F1D 07                 3611 	.db #0x07
   0F1E 06                 3612 	.db #0x06
   0F1F 07                 3613 	.db #0x07
   0F20 07                 3614 	.db #0x07
   0F21 07                 3615 	.db #0x07
   0F22 07                 3616 	.db #0x07
   0F23 07                 3617 	.db #0x07
   0F24 05                 3618 	.db #0x05
   0F25 06                 3619 	.db #0x06
   0F26 07                 3620 	.db #0x07
   0F27 05                 3621 	.db #0x05
   0F28 09                 3622 	.db #0x09
   0F29 07                 3623 	.db #0x07
   0F2A 07                 3624 	.db #0x07
   0F2B 07                 3625 	.db #0x07
   0F2C 07                 3626 	.db #0x07
   0F2D 07                 3627 	.db #0x07
   0F2E 07                 3628 	.db #0x07
   0F2F 06                 3629 	.db #0x06
   0F30 07                 3630 	.db #0x07
   0F31 07                 3631 	.db #0x07
   0F32 09                 3632 	.db #0x09
   0F33 07                 3633 	.db #0x07
   0F34 07                 3634 	.db #0x07
   0F35 07                 3635 	.db #0x07
   0F36 00                 3636 	.db 0x00
   0F37 00                 3637 	.db 0x00
   0F38 00                 3638 	.db 0x00
   0F39 00                 3639 	.db 0x00
   0F3A 00                 3640 	.db 0x00
   0F3B 00                 3641 	.db 0x00
                           3642 ;demo.c:480: void do_letter_tall(char cc) {
                           3643 ;	---------------------------------
                           3644 ; Function do_letter_tall
                           3645 ; ---------------------------------
   0F3C                    3646 _do_letter_tall_start::
   0F3C                    3647 _do_letter_tall:
   0F3C DD E5              3648 	push	ix
   0F3E DD 21 00 00        3649 	ld	ix,#0
   0F42 DD 39              3650 	add	ix,sp
   0F44 F5                 3651 	push	af
                           3652 ;demo.c:481: int cidx = cc - 65;
   0F45 DD 4E 04           3653 	ld	c,4 (ix)
   0F48 DD 7E 04           3654 	ld	a,4 (ix)
   0F4B 17                 3655 	rla	
   0F4C 9F                 3656 	sbc	a,a
   0F4D 47                 3657 	ld	b,a
   0F4E 79                 3658 	ld	a,c
   0F4F C6 BF              3659 	add	a,#0xBF
   0F51 DD 77 FE           3660 	ld	-2 (ix),a
   0F54 78                 3661 	ld	a,b
   0F55 CE FF              3662 	adc	a,#0xFF
   0F57 DD 77 FF           3663 	ld	-1 (ix),a
                           3664 ;demo.c:482: cmd.source_x = 127+font_x[cidx];
   0F5A 3Er7C              3665 	ld	a,#<_font_x
   0F5C DD 86 FE           3666 	add	a,-2 (ix)
   0F5F 5F                 3667 	ld	e,a
   0F60 3Es0E              3668 	ld	a,#>_font_x
   0F62 DD 8E FF           3669 	adc	a,-1 (ix)
   0F65 57                 3670 	ld	d,a
   0F66 1A                 3671 	ld	a,(de)
   0F67 5F                 3672 	ld	e,a
   0F68 16 00              3673 	ld	d,#0x00
   0F6A 21 7F 00           3674 	ld	hl,#0x007F
   0F6D 19                 3675 	add	hl,de
   0F6E EB                 3676 	ex	de,hl
   0F6F 21r24s8F           3677 	ld	hl,#_cmd
   0F72 73                 3678 	ld	(hl),e
   0F73 23                 3679 	inc	hl
   0F74 72                 3680 	ld	(hl),d
                           3681 ;demo.c:483: cmd.source_y = 512+font_y[cidx]-1;
   0F75 11r26s8F           3682 	ld	de,#_cmd + 2
   0F78 3ErBC              3683 	ld	a,#<_font_y
   0F7A DD 86 FE           3684 	add	a,-2 (ix)
   0F7D 4F                 3685 	ld	c,a
   0F7E 3Es0E              3686 	ld	a,#>_font_y
   0F80 DD 8E FF           3687 	adc	a,-1 (ix)
   0F83 47                 3688 	ld	b,a
   0F84 0A                 3689 	ld	a,(bc)
   0F85 4F                 3690 	ld	c,a
   0F86 06 00              3691 	ld	b,#0x00
   0F88 21 FF 01           3692 	ld	hl,#0x01FF
   0F8B 09                 3693 	add	hl,bc
   0F8C 4D                 3694 	ld	c,l
   0F8D 44                 3695 	ld	b,h
   0F8E EB                 3696 	ex	de,hl
   0F8F 71                 3697 	ld	(hl),c
   0F90 23                 3698 	inc	hl
   0F91 70                 3699 	ld	(hl),b
                           3700 ;demo.c:484: cmd.dest_x = lx;
   0F92 01r28s8F           3701 	ld	bc,#_cmd + 4
   0F95 21r6Es8F           3702 	ld	hl,#_lx + 0
   0F98 5E                 3703 	ld	e,(hl)
   0F99 16 00              3704 	ld	d,#0x00
   0F9B 69                 3705 	ld	l,c
   0F9C 60                 3706 	ld	h,b
   0F9D 73                 3707 	ld	(hl),e
   0F9E 23                 3708 	inc	hl
   0F9F 72                 3709 	ld	(hl),d
                           3710 ;demo.c:485: cmd.dest_y = ly;
   0FA0 01r2As8F           3711 	ld	bc,#_cmd + 6
   0FA3 21r6Fs8F           3712 	ld	hl,#_ly + 0
   0FA6 5E                 3713 	ld	e,(hl)
   0FA7 16 00              3714 	ld	d,#0x00
   0FA9 69                 3715 	ld	l,c
   0FAA 60                 3716 	ld	h,b
   0FAB 73                 3717 	ld	(hl),e
   0FAC 23                 3718 	inc	hl
   0FAD 72                 3719 	ld	(hl),d
                           3720 ;demo.c:486: cmd.size_x = font_w[cidx];
   0FAE 01r2Cs8F           3721 	ld	bc,#_cmd + 8
   0FB1 3ErFC              3722 	ld	a,#<_font_w
   0FB3 DD 86 FE           3723 	add	a,-2 (ix)
   0FB6 5F                 3724 	ld	e,a
   0FB7 3Es0E              3725 	ld	a,#>_font_w
   0FB9 DD 8E FF           3726 	adc	a,-1 (ix)
   0FBC 57                 3727 	ld	d,a
   0FBD 1A                 3728 	ld	a,(de)
   0FBE 5F                 3729 	ld	e,a
   0FBF 16 00              3730 	ld	d,#0x00
   0FC1 69                 3731 	ld	l,c
   0FC2 60                 3732 	ld	h,b
   0FC3 73                 3733 	ld	(hl),e
   0FC4 23                 3734 	inc	hl
   0FC5 72                 3735 	ld	(hl),d
                           3736 ;demo.c:487: cmd.size_y = 10;
   0FC6 21r2Es8F           3737 	ld	hl, #_cmd + 10
   0FC9 36 0A              3738 	ld	(hl),#0x0A
   0FCB 23                 3739 	inc	hl
   0FCC 36 00              3740 	ld	(hl),#0x00
                           3741 ;demo.c:488: cmd.argument = 0x00;
   0FCE 3E 00              3742 	ld	a,#0x00
   0FD0 32r31s8F           3743 	ld	(#_cmd + 13),a
                           3744 ;demo.c:489: cmd.command = 0x90; // logical vram to vram
   0FD3 3E 90              3745 	ld	a,#0x90
   0FD5 32r32s8F           3746 	ld	(#_cmd + 14),a
                           3747 ;demo.c:490: vdp_copier(&cmd);
   0FD8 21r24s8F           3748 	ld	hl,#_cmd
   0FDB E5                 3749 	push	hl
   0FDC CDr00s00           3750 	call	_vdp_copier
   0FDF F1                 3751 	pop	af
                           3752 ;demo.c:491: lx+=font_w[cidx]-1;
   0FE0 3ErFC              3753 	ld	a,#<_font_w
   0FE2 DD 86 FE           3754 	add	a,-2 (ix)
   0FE5 4F                 3755 	ld	c,a
   0FE6 3Es0E              3756 	ld	a,#>_font_w
   0FE8 DD 8E FF           3757 	adc	a,-1 (ix)
   0FEB 47                 3758 	ld	b,a
   0FEC 0A                 3759 	ld	a,(bc)
   0FED 4F                 3760 	ld	c,a
   0FEE 0D                 3761 	dec	c
   0FEF 21r6Es8F           3762 	ld	hl,#_lx
   0FF2 7E                 3763 	ld	a,(hl)
   0FF3 81                 3764 	add	a,c
   0FF4 77                 3765 	ld	(hl),a
   0FF5 DD F9              3766 	ld	sp,ix
   0FF7 DD E1              3767 	pop	ix
   0FF9 C9                 3768 	ret
   0FFA                    3769 _do_letter_tall_end::
                           3770 ;demo.c:494: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3771 ;	---------------------------------
                           3772 ; Function drawstr
                           3773 ; ---------------------------------
   0FFA                    3774 _drawstr_start::
   0FFA                    3775 _drawstr:
   0FFA DD E5              3776 	push	ix
   0FFC DD 21 00 00        3777 	ld	ix,#0
   1000 DD 39              3778 	add	ix,sp
                           3779 ;demo.c:495: char* c = str;
   1002 DD 4E 04           3780 	ld	c,4 (ix)
   1005 DD 46 05           3781 	ld	b,5 (ix)
                           3782 ;demo.c:496: lx = x;
   1008 DD 5E 06           3783 	ld	e,6 (ix)
   100B 21r6Es8F           3784 	ld	hl,#_lx + 0
   100E 73                 3785 	ld	(hl), e
                           3786 ;demo.c:497: ly = y;
   100F DD 7E 07           3787 	ld	a,7 (ix)
   1012 21r6Fs8F           3788 	ld	hl,#_ly + 0
   1015 77                 3789 	ld	(hl), a
                           3790 ;demo.c:498: while (*c) {
   1016                    3791 00107$:
   1016 0A                 3792 	ld	a,(bc)
   1017 57                 3793 	ld	d,a
   1018 B7                 3794 	or	a,a
   1019 28 42              3795 	jr	Z,00110$
                           3796 ;demo.c:499: char ltr = *c++; 
   101B 03                 3797 	inc	bc
                           3798 ;demo.c:500: if (ltr == ' ') lx+=4;
   101C 7A                 3799 	ld	a,d
   101D D6 20              3800 	sub	a,#0x20
   101F 20 1E              3801 	jr	NZ,00105$
   1021 FD 21r6Es8F        3802 	ld	iy,#_lx
   1025 FD 34 00           3803 	inc	0 (iy)
   1028 FD 21r6Es8F        3804 	ld	iy,#_lx
   102C FD 34 00           3805 	inc	0 (iy)
   102F FD 21r6Es8F        3806 	ld	iy,#_lx
   1033 FD 34 00           3807 	inc	0 (iy)
   1036 FD 21r6Es8F        3808 	ld	iy,#_lx
   103A FD 34 00           3809 	inc	0 (iy)
   103D 18 D7              3810 	jr	00107$
   103F                    3811 00105$:
                           3812 ;demo.c:501: else if (ltr == '_') { ly+=9; lx = x; }
   103F 7A                 3813 	ld	a,d
   1040 D6 5F              3814 	sub	a,#0x5F
   1042 20 0D              3815 	jr	NZ,00102$
   1044 21r6Fs8F           3816 	ld	hl,#_ly
   1047 7E                 3817 	ld	a,(hl)
   1048 C6 09              3818 	add	a,#0x09
   104A 77                 3819 	ld	(hl),a
   104B 21r6Es8F           3820 	ld	hl,#_lx + 0
   104E 73                 3821 	ld	(hl), e
   104F 18 C5              3822 	jr	00107$
   1051                    3823 00102$:
                           3824 ;demo.c:502: else do_letter(ltr);
   1051 C5                 3825 	push	bc
   1052 D5                 3826 	push	de
   1053 D5                 3827 	push	de
   1054 33                 3828 	inc	sp
   1055 CDrBEs0D           3829 	call	_do_letter
   1058 33                 3830 	inc	sp
   1059 D1                 3831 	pop	de
   105A C1                 3832 	pop	bc
   105B 18 B9              3833 	jr	00107$
   105D                    3834 00110$:
   105D DD E1              3835 	pop	ix
   105F C9                 3836 	ret
   1060                    3837 _drawstr_end::
                           3838 ;demo.c:506: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3839 ;	---------------------------------
                           3840 ; Function drawsine
                           3841 ; ---------------------------------
   1060                    3842 _drawsine_start::
   1060                    3843 _drawsine:
   1060 DD E5              3844 	push	ix
   1062 DD 21 00 00        3845 	ld	ix,#0
   1066 DD 39              3846 	add	ix,sp
   1068 3B                 3847 	dec	sp
                           3848 ;demo.c:507: char* c = str;
   1069 DD 4E 04           3849 	ld	c,4 (ix)
   106C DD 46 05           3850 	ld	b,5 (ix)
                           3851 ;demo.c:508: lx = x;
   106F DD 7E 06           3852 	ld	a,6 (ix)
   1072 21r6Es8F           3853 	ld	hl,#_lx + 0
   1075 77                 3854 	ld	(hl), a
                           3855 ;demo.c:510: while (*c) {
   1076                    3856 00104$:
   1076 0A                 3857 	ld	a,(bc)
   1077 5F                 3858 	ld	e,a
   1078 B7                 3859 	or	a,a
   1079 CArEDs10           3860 	jp	Z,00107$
                           3861 ;demo.c:511: char ltr = *c++; 
   107C 03                 3862 	inc	bc
   107D DD 73 FF           3863 	ld	-1 (ix),e
                           3864 ;demo.c:512: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1080 21r6Es8F           3865 	ld	hl,#_lx + 0
   1083 5E                 3866 	ld	e,(hl)
   1084 16 00              3867 	ld	d,#0x00
   1086 21r20s8F           3868 	ld	hl,#_vbicount
   1089 7B                 3869 	ld	a,e
   108A 86                 3870 	add	a,(hl)
   108B 5F                 3871 	ld	e,a
   108C 7A                 3872 	ld	a,d
   108D 23                 3873 	inc	hl
   108E 8E                 3874 	adc	a,(hl)
   108F 57                 3875 	ld	d,a
   1090 CB 2A              3876 	sra	d
   1092 CB 1B              3877 	rr	e
   1094 16 00              3878 	ld	d,#0x00
   1096 CB 23              3879 	sla	e
   1098 CB 12              3880 	rl	d
   109A 21r2Cs00           3881 	ld	hl,#_sintabx
   109D 19                 3882 	add	hl,de
   109E 5E                 3883 	ld	e,(hl)
   109F 23                 3884 	inc	hl
   10A0 56                 3885 	ld	d,(hl)
   10A1 CB 3A              3886 	srl	d
   10A3 CB 1B              3887 	rr	e
   10A5 CB 3A              3888 	srl	d
   10A7 CB 1B              3889 	rr	e
   10A9 CB 3A              3890 	srl	d
   10AB CB 1B              3891 	rr	e
   10AD CB 3A              3892 	srl	d
   10AF CB 1B              3893 	rr	e
   10B1 21r6Fs8F           3894 	ld	hl,#_ly
   10B4 DD 7E 07           3895 	ld	a,7 (ix)
   10B7 83                 3896 	add	a,e
   10B8 77                 3897 	ld	(hl),a
                           3898 ;demo.c:513: if (ltr == ' ') lx+=4;
   10B9 DD 7E FF           3899 	ld	a,-1 (ix)
   10BC D6 20              3900 	sub	a,#0x20
   10BE 20 1F              3901 	jr	NZ,00102$
   10C0 FD 21r6Es8F        3902 	ld	iy,#_lx
   10C4 FD 34 00           3903 	inc	0 (iy)
   10C7 FD 21r6Es8F        3904 	ld	iy,#_lx
   10CB FD 34 00           3905 	inc	0 (iy)
   10CE FD 21r6Es8F        3906 	ld	iy,#_lx
   10D2 FD 34 00           3907 	inc	0 (iy)
   10D5 FD 21r6Es8F        3908 	ld	iy,#_lx
   10D9 FD 34 00           3909 	inc	0 (iy)
   10DC C3r76s10           3910 	jp	00104$
   10DF                    3911 00102$:
                           3912 ;demo.c:514: else do_letter_tall(ltr);
   10DF C5                 3913 	push	bc
   10E0 DD 7E FF           3914 	ld	a,-1 (ix)
   10E3 F5                 3915 	push	af
   10E4 33                 3916 	inc	sp
   10E5 CDr3Cs0F           3917 	call	_do_letter_tall
   10E8 33                 3918 	inc	sp
   10E9 C1                 3919 	pop	bc
   10EA C3r76s10           3920 	jp	00104$
   10ED                    3921 00107$:
   10ED DD F9              3922 	ld	sp,ix
   10EF DD E1              3923 	pop	ix
   10F1 C9                 3924 	ret
   10F2                    3925 _drawsine_end::
                           3926 ;demo.c:518: void font() {
                           3927 ;	---------------------------------
                           3928 ; Function font
                           3929 ; ---------------------------------
   10F2                    3930 _font_start::
   10F2                    3931 _font:
                           3932 ;demo.c:520: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   10F2 21 4A 3C           3933 	ld	hl,#0x3C4A
   10F5 E5                 3934 	push	hl
   10F6 21r00s11           3935 	ld	hl,#__str_8
   10F9 E5                 3936 	push	hl
   10FA CDrFAs0F           3937 	call	_drawstr
   10FD F1                 3938 	pop	af
   10FE F1                 3939 	pop	af
   10FF C9                 3940 	ret
   1100                    3941 _font_end::
   1100                    3942 __str_8:
   1100 44 49 47 49 54 41  3943 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   113C 4F 4E 5F 5F 20 20  3944 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1162 00                 3945 	.db 0x00
                           3946 ;demo.c:529: void twister() {
                           3947 ;	---------------------------------
                           3948 ; Function twister
                           3949 ; ---------------------------------
   1163                    3950 _twister_start::
   1163                    3951 _twister:
   1163 DD E5              3952 	push	ix
   1165 DD 21 00 00        3953 	ld	ix,#0
   1169 DD 39              3954 	add	ix,sp
   116B F5                 3955 	push	af
                           3956 ;demo.c:533: if (twinited == 0) {
   116C 3Ar72s8F           3957 	ld	a,(#_twinited+0)
   116F FD 21r72s8F        3958 	ld	iy,#_twinited
   1173 FD B6 01           3959 	or	a,1 (iy)
   1176 C2rF0s11           3960 	jp	NZ,00102$
                           3961 ;demo.c:534: cmd.size_x = 256;
   1179 21r2Cs8F           3962 	ld	hl, #_cmd + 8
   117C 36 00              3963 	ld	(hl),#0x00
   117E 23                 3964 	inc	hl
   117F 36 01              3965 	ld	(hl),#0x01
                           3966 ;demo.c:535: cmd.size_y = 1;
   1181 21r2Es8F           3967 	ld	hl, #_cmd + 10
   1184 36 01              3968 	ld	(hl),#0x01
   1186 23                 3969 	inc	hl
   1187 36 00              3970 	ld	(hl),#0x00
                           3971 ;demo.c:536: cmd.data = 0;
   1189 3E 00              3972 	ld	a,#0x00
   118B 32r30s8F           3973 	ld	(#_cmd + 12),a
                           3974 ;demo.c:537: cmd.argument = 0x04; // from 70xY to left
   118E 3E 04              3975 	ld	a,#0x04
   1190 32r31s8F           3976 	ld	(#_cmd + 13),a
                           3977 ;demo.c:538: cmd.command = 0xe0; // vram to vram, y only
   1193 01r32s8F           3978 	ld	bc,#_cmd + 14
   1196 3E E0              3979 	ld	a,#0xE0
   1198 02                 3980 	ld	(bc),a
                           3981 ;demo.c:539: cmd.source_x = 256;
   1199 21r24s8F           3982 	ld	hl,#_cmd
   119C 36 00              3983 	ld	(hl),#0x00
   119E 23                 3984 	inc	hl
   119F 36 01              3985 	ld	(hl),#0x01
                           3986 ;demo.c:540: cmd.dest_x = 256;
   11A1 21r28s8F           3987 	ld	hl, #_cmd + 4
   11A4 36 00              3988 	ld	(hl),#0x00
   11A6 23                 3989 	inc	hl
   11A7 36 01              3990 	ld	(hl),#0x01
                           3991 ;demo.c:542: for (y = 0; y < 212; y+=1) {
   11A9 01 00 00           3992 	ld	bc,#0x0000
   11AC                    3993 00103$:
   11AC 79                 3994 	ld	a,c
   11AD D6 D4              3995 	sub	a,#0xD4
   11AF 78                 3996 	ld	a,b
   11B0 DE 00              3997 	sbc	a,#0x00
   11B2 F2rD3s11           3998 	jp	P,00106$
                           3999 ;demo.c:543: waitVB();
   11B5 76                 4000 		halt 
                           4001 ;demo.c:544: cmd.source_y = 0;
   11B6 11r26s8F           4002 	ld	de,#_cmd + 2
   11B9 EB                 4003 	ex	de,hl
   11BA 36 00              4004 	ld	(hl),#0x00
   11BC 23                 4005 	inc	hl
   11BD 36 00              4006 	ld	(hl),#0x00
                           4007 ;demo.c:545: cmd.dest_y = y;
   11BF 11r2As8F           4008 	ld	de,#_cmd + 6
   11C2 EB                 4009 	ex	de,hl
   11C3 71                 4010 	ld	(hl),c
   11C4 23                 4011 	inc	hl
   11C5 70                 4012 	ld	(hl),b
                           4013 ;demo.c:546: vdp_copier(&cmd);
   11C6 C5                 4014 	push	bc
   11C7 21r24s8F           4015 	ld	hl,#_cmd
   11CA E5                 4016 	push	hl
   11CB CDr00s00           4017 	call	_vdp_copier
   11CE F1                 4018 	pop	af
   11CF C1                 4019 	pop	bc
                           4020 ;demo.c:542: for (y = 0; y < 212; y+=1) {
   11D0 03                 4021 	inc	bc
   11D1 18 D9              4022 	jr	00103$
   11D3                    4023 00106$:
                           4024 ;demo.c:550: twinited = 1;
   11D3 21r72s8F           4025 	ld	hl,#_twinited + 0
   11D6 36 01              4026 	ld	(hl), #0x01
   11D8 21r73s8F           4027 	ld	hl,#_twinited + 1
   11DB 36 00              4028 	ld	(hl), #0x00
                           4029 ;demo.c:551: vdp_register(8,0x2); // no sprites
   11DD 21 08 02           4030 	ld	hl,#0x0208
   11E0 E5                 4031 	push	hl
   11E1 CDr00s00           4032 	call	_vdp_register
   11E4 F1                 4033 	pop	af
                           4034 ;demo.c:552: vdp_load_palette(twister_palette);
   11E5 21rC0s8E           4035 	ld	hl,#_twister_palette
   11E8 E5                 4036 	push	hl
   11E9 CDr00s00           4037 	call	_vdp_load_palette
   11EC F1                 4038 	pop	af
                           4039 ;demo.c:553: font();
   11ED CDrF2s10           4040 	call	_font
   11F0                    4041 00102$:
                           4042 ;demo.c:556: cmd.size_x = 70;
   11F0 21r2Cs8F           4043 	ld	hl, #_cmd + 8
   11F3 36 46              4044 	ld	(hl),#0x46
   11F5 23                 4045 	inc	hl
   11F6 36 00              4046 	ld	(hl),#0x00
                           4047 ;demo.c:557: cmd.size_y = 2;
   11F8 21r2Es8F           4048 	ld	hl, #_cmd + 10
   11FB 36 02              4049 	ld	(hl),#0x02
   11FD 23                 4050 	inc	hl
   11FE 36 00              4051 	ld	(hl),#0x00
                           4052 ;demo.c:558: cmd.data = 0;
   1200 3E 00              4053 	ld	a,#0x00
   1202 32r30s8F           4054 	ld	(#_cmd + 12),a
                           4055 ;demo.c:559: cmd.argument = 0x04; // from 70xY to left
   1205 3E 04              4056 	ld	a,#0x04
   1207 32r31s8F           4057 	ld	(#_cmd + 13),a
                           4058 ;demo.c:560: cmd.command = 0xe0; // vram to vram, y only
   120A 01r32s8F           4059 	ld	bc,#_cmd + 14
   120D 3E E0              4060 	ld	a,#0xE0
   120F 02                 4061 	ld	(bc),a
                           4062 ;demo.c:561: cmd.source_x = 70;
   1210 21r24s8F           4063 	ld	hl,#_cmd
   1213 36 46              4064 	ld	(hl),#0x46
   1215 23                 4065 	inc	hl
   1216 36 00              4066 	ld	(hl),#0x00
                           4067 ;demo.c:562: cmd.dest_x = 70;
   1218 21r28s8F           4068 	ld	hl, #_cmd + 4
   121B 36 46              4069 	ld	(hl),#0x46
   121D 23                 4070 	inc	hl
   121E 36 00              4071 	ld	(hl),#0x00
                           4072 ;demo.c:564: for (y = 0; y < 212; y+=2) {
   1220 DD 36 FE 00        4073 	ld	-2 (ix),#0x00
   1224 DD 36 FF 00        4074 	ld	-1 (ix),#0x00
   1228                    4075 00107$:
   1228 DD 7E FE           4076 	ld	a,-2 (ix)
   122B D6 D4              4077 	sub	a,#0xD4
   122D DD 7E FF           4078 	ld	a,-1 (ix)
   1230 DE 00              4079 	sbc	a,#0x00
   1232 F2r8Bs12           4080 	jp	P,00110$
                           4081 ;demo.c:565: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   1235 11r26s8F           4082 	ld	de,#_cmd + 2
   1238 DD 4E FE           4083 	ld	c,-2 (ix)
   123B DD 46 FF           4084 	ld	b,-1 (ix)
   123E CB 28              4085 	sra	b
   1240 CB 19              4086 	rr	c
   1242 3Ar70s8F           4087 	ld	a,(#_ff+0)
   1245 81                 4088 	add	a,c
   1246 4F                 4089 	ld	c,a
   1247 3Ar71s8F           4090 	ld	a,(#_ff+1)
   124A 88                 4091 	adc	a,b
   124B 06 00              4092 	ld	b,#0x00
   124D 21r00s00           4093 	ld	hl,#_sintab
   1250 09                 4094 	add	hl,bc
   1251 7E                 4095 	ld	a,(hl)
   1252 4F                 4096 	ld	c,a
   1253 CB 29              4097 	sra	c
   1255 79                 4098 	ld	a,c
   1256 17                 4099 	rla	
   1257 9F                 4100 	sbc	a,a
   1258 47                 4101 	ld	b,a
   1259 21 40 02           4102 	ld	hl,#0x0240
   125C 09                 4103 	add	hl,bc
   125D 4D                 4104 	ld	c,l
   125E 44                 4105 	ld	b,h
   125F 6B                 4106 	ld	l,e
   1260 62                 4107 	ld	h,d
   1261 71                 4108 	ld	(hl),c
   1262 23                 4109 	inc	hl
   1263 70                 4110 	ld	(hl),b
                           4111 ;demo.c:566: cmd.dest_y = y;
   1264 21r2As8F           4112 	ld	hl, #_cmd + 6
   1267 DD 7E FE           4113 	ld	a,-2 (ix)
   126A 77                 4114 	ld	(hl),a
   126B 23                 4115 	inc	hl
   126C DD 7E FF           4116 	ld	a,-1 (ix)
   126F 77                 4117 	ld	(hl),a
                           4118 ;demo.c:567: vdp_copier(&cmd);
   1270 21r24s8F           4119 	ld	hl,#_cmd
   1273 E5                 4120 	push	hl
   1274 CDr00s00           4121 	call	_vdp_copier
   1277 F1                 4122 	pop	af
                           4123 ;demo.c:564: for (y = 0; y < 212; y+=2) {
   1278 DD 7E FE           4124 	ld	a,-2 (ix)
   127B C6 02              4125 	add	a,#0x02
   127D DD 77 FE           4126 	ld	-2 (ix),a
   1280 DD 7E FF           4127 	ld	a,-1 (ix)
   1283 CE 00              4128 	adc	a,#0x00
   1285 DD 77 FF           4129 	ld	-1 (ix),a
   1288 C3r28s12           4130 	jp	00107$
   128B                    4131 00110$:
                           4132 ;demo.c:571: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   128B 21r70s8F           4133 	ld	hl,#_ff + 0
   128E 4E                 4134 	ld	c,(hl)
   128F 21r71s8F           4135 	ld	hl,#_ff + 1
   1292 46                 4136 	ld	b,(hl)
   1293 CB 28              4137 	sra	b
   1295 CB 19              4138 	rr	c
   1297 CB 28              4139 	sra	b
   1299 CB 19              4140 	rr	c
   129B 21r70s8F           4141 	ld	hl,#_ff + 0
   129E 5E                 4142 	ld	e,(hl)
   129F 21r71s8F           4143 	ld	hl,#_ff + 1
   12A2 56                 4144 	ld	d,(hl)
   12A3 CB 2A              4145 	sra	d
   12A5 CB 1B              4146 	rr	e
   12A7 CB 2A              4147 	sra	d
   12A9 CB 1B              4148 	rr	e
   12AB CB 2A              4149 	sra	d
   12AD CB 1B              4150 	rr	e
   12AF 43                 4151 	ld	b,e
   12B0 79                 4152 	ld	a,c
   12B1 F5                 4153 	push	af
   12B2 33                 4154 	inc	sp
   12B3 C5                 4155 	push	bc
   12B4 33                 4156 	inc	sp
   12B5 41                 4157 	ld	b,c
   12B6 0E 04              4158 	ld	c,#0x04
   12B8 C5                 4159 	push	bc
   12B9 CDr00s00           4160 	call	_msx2_palette
   12BC F1                 4161 	pop	af
   12BD F1                 4162 	pop	af
                           4163 ;demo.c:573: ff+=4;
   12BE 21r70s8F           4164 	ld	hl,#_ff
   12C1 7E                 4165 	ld	a,(hl)
   12C2 C6 04              4166 	add	a,#0x04
   12C4 23                 4167 	inc	hl
   12C5 2B                 4168 	dec	hl
   12C6 C5                 4169 	push	bc
   12C7 4F                 4170 	ld	c, a
   12C8 23                 4171 	inc	hl
   12C9 7E                 4172 	ld	a, (hl)
   12CA 47                 4173 	ld	b, a
   12CB 79                 4174 	ld	a, c
   12CC 2B                 4175 	dec	hl
   12CD 77                 4176 	ld	(hl), a
   12CE 78                 4177 	ld	a, b
   12CF C1                 4178 	pop	bc
   12D0 CE 00              4179 	adc	a,#0x00
   12D2 23                 4180 	inc	hl
   12D3 77                 4181 	ld	(hl),a
   12D4 DD F9              4182 	ld	sp,ix
   12D6 DD E1              4183 	pop	ix
   12D8 C9                 4184 	ret
   12D9                    4185 _twister_end::
                           4186 ;demo.c:583: void bulbs() {
                           4187 ;	---------------------------------
                           4188 ; Function bulbs
                           4189 ; ---------------------------------
   12D9                    4190 _bulbs_start::
   12D9                    4191 _bulbs:
   12D9 DD E5              4192 	push	ix
   12DB DD 21 00 00        4193 	ld	ix,#0
   12DF DD 39              4194 	add	ix,sp
   12E1 F5                 4195 	push	af
   12E2 F5                 4196 	push	af
                           4197 ;demo.c:587: ender+=enderdir;
   12E3 21r7Cs8F           4198 	ld	hl,#_enderdir
   12E6 D5                 4199 	push	de
   12E7 FD 21r7As8F        4200 	ld	iy,#_ender
   12EB FD E5              4201 	push	iy
   12ED D1                 4202 	pop	de
   12EE 1A                 4203 	ld	a,(de)
   12EF 86                 4204 	add	a,(hl)
   12F0 13                 4205 	inc	de
   12F1 1B                 4206 	dec	de
   12F2 C5                 4207 	push	bc
   12F3 4F                 4208 	ld	c, a
   12F4 13                 4209 	inc	de
   12F5 1A                 4210 	ld	a, (de)
   12F6 47                 4211 	ld	b, a
   12F7 79                 4212 	ld	a, c
   12F8 1B                 4213 	dec	de
   12F9 12                 4214 	ld	(de), a
   12FA 78                 4215 	ld	a, b
   12FB C1                 4216 	pop	bc
   12FC 23                 4217 	inc	hl
   12FD 8E                 4218 	adc	a,(hl)
   12FE 13                 4219 	inc	de
   12FF 12                 4220 	ld	(de),a
   1300 D1                 4221 	pop	de
                           4222 ;demo.c:588: if (ender < 2) enderdir = -enderdir;
   1301 3Ar7As8F           4223 	ld	a,(#_ender+0)
   1304 D6 02              4224 	sub	a,#0x02
   1306 3Ar7Bs8F           4225 	ld	a,(#_ender+1)
   1309 DE 00              4226 	sbc	a,#0x00
   130B F2r2Fs13           4227 	jp	P,00102$
   130E AF                 4228 	xor	a,a
   130F FD 21r7Cs8F        4229 	ld	iy,#_enderdir
   1313 3E 00              4230 	ld	a,#0x00
   1315 FD 9E 00           4231 	sbc	a,0 (iy)
   1318 FD 21r7Cs8F        4232 	ld	iy,#_enderdir
   131C FD 77 00           4233 	ld	0 (iy),a
   131F FD 21r7Cs8F        4234 	ld	iy,#_enderdir
   1323 3E 00              4235 	ld	a,#0x00
   1325 FD 9E 01           4236 	sbc	a,1 (iy)
   1328 FD 21r7Cs8F        4237 	ld	iy,#_enderdir
   132C FD 77 01           4238 	ld	1 (iy),a
   132F                    4239 00102$:
                           4240 ;demo.c:589: if (ender >= 212) enderdir = -enderdir;
   132F 3Ar7As8F           4241 	ld	a,(#_ender+0)
   1332 D6 D4              4242 	sub	a,#0xD4
   1334 3Ar7Bs8F           4243 	ld	a,(#_ender+1)
   1337 DE 00              4244 	sbc	a,#0x00
   1339 FAr5Ds13           4245 	jp	M,00104$
   133C AF                 4246 	xor	a,a
   133D FD 21r7Cs8F        4247 	ld	iy,#_enderdir
   1341 3E 00              4248 	ld	a,#0x00
   1343 FD 9E 00           4249 	sbc	a,0 (iy)
   1346 FD 21r7Cs8F        4250 	ld	iy,#_enderdir
   134A FD 77 00           4251 	ld	0 (iy),a
   134D FD 21r7Cs8F        4252 	ld	iy,#_enderdir
   1351 3E 00              4253 	ld	a,#0x00
   1353 FD 9E 01           4254 	sbc	a,1 (iy)
   1356 FD 21r7Cs8F        4255 	ld	iy,#_enderdir
   135A FD 77 01           4256 	ld	1 (iy),a
   135D                    4257 00104$:
                           4258 ;demo.c:591: enderend = ender + 92;
   135D 3Ar7As8F           4259 	ld	a,(#_ender+0)
   1360 C6 5C              4260 	add	a,#0x5C
   1362 DD 77 FE           4261 	ld	-2 (ix),a
   1365 3Ar7Bs8F           4262 	ld	a,(#_ender+1)
   1368 CE 00              4263 	adc	a,#0x00
   136A DD 77 FF           4264 	ld	-1 (ix),a
                           4265 ;demo.c:593: if (enderend > 212) enderend = 212;
   136D 3E D4              4266 	ld	a,#0xD4
   136F DD 96 FE           4267 	sub	a,-2 (ix)
   1372 3E 00              4268 	ld	a,#0x00
   1374 DD 9E FF           4269 	sbc	a,-1 (ix)
   1377 F2r82s13           4270 	jp	P,00106$
   137A DD 36 FE D4        4271 	ld	-2 (ix),#0xD4
   137E DD 36 FF 00        4272 	ld	-1 (ix),#0x00
   1382                    4273 00106$:
                           4274 ;demo.c:595: if(bulbflipper == 1) {
   1382 3Ar74s8F           4275 	ld	a,(#_bulbflipper+0)
   1385 D6 01              4276 	sub	a,#0x01
   1387 20 06              4277 	jr	NZ,00130$
   1389 3Ar75s8F           4278 	ld	a,(#_bulbflipper+1)
   138C B7                 4279 	or	a,a
   138D 28 03              4280 	jr	Z,00131$
   138F                    4281 00130$:
   138F C3r39s14           4282 	jp	00108$
   1392                    4283 00131$:
                           4284 ;demo.c:596: cmd.size_x = 72;
   1392 11r2Cs8F           4285 	ld	de,#_cmd + 8
   1395 EB                 4286 	ex	de,hl
   1396 36 48              4287 	ld	(hl),#0x48
   1398 23                 4288 	inc	hl
   1399 36 00              4289 	ld	(hl),#0x00
                           4290 ;demo.c:597: cmd.size_y = 16;
   139B 11r2Es8F           4291 	ld	de,#_cmd + 10
   139E EB                 4292 	ex	de,hl
   139F 36 10              4293 	ld	(hl),#0x10
   13A1 23                 4294 	inc	hl
   13A2 36 00              4295 	ld	(hl),#0x00
                           4296 ;demo.c:598: cmd.data = 0;
   13A4 11r30s8F           4297 	ld	de,#_cmd + 12
   13A7 3E 00              4298 	ld	a,#0x00
   13A9 12                 4299 	ld	(de),a
                           4300 ;demo.c:599: cmd.argument = 0x04; // from 72xY to left
   13AA 11r31s8F           4301 	ld	de,#_cmd + 13
   13AD 3E 04              4302 	ld	a,#0x04
   13AF 12                 4303 	ld	(de),a
                           4304 ;demo.c:600: cmd.command = 0xe0; // vram to vram, y only
   13B0 11r32s8F           4305 	ld	de,#_cmd + 14
   13B3 3E E0              4306 	ld	a,#0xE0
   13B5 12                 4307 	ld	(de),a
                           4308 ;demo.c:601: cmd.source_x = 72;
   13B6 21r24s8F           4309 	ld	hl,#_cmd
   13B9 36 48              4310 	ld	(hl),#0x48
   13BB 23                 4311 	inc	hl
   13BC 36 00              4312 	ld	(hl),#0x00
                           4313 ;demo.c:602: cmd.dest_x = 72;
   13BE 11r28s8F           4314 	ld	de,#_cmd + 4
   13C1 6B                 4315 	ld	l,e
   13C2 62                 4316 	ld	h,d
   13C3 36 48              4317 	ld	(hl),#0x48
   13C5 23                 4318 	inc	hl
   13C6 36 00              4319 	ld	(hl),#0x00
                           4320 ;demo.c:604: for (y = ender; y < enderend; y+=16) {
   13C8 ED 4Br7As8F        4321 	ld	bc,(_ender)
   13CC 59                 4322 	ld	e,c
   13CD 50                 4323 	ld	d,b
   13CE                    4324 00110$:
   13CE 7B                 4325 	ld	a,e
   13CF DD 96 FE           4326 	sub	a,-2 (ix)
   13D2 7A                 4327 	ld	a,d
   13D3 DD 9E FF           4328 	sbc	a,-1 (ix)
   13D6 F2r20s14           4329 	jp	P,00113$
                           4330 ;demo.c:605: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   13D9 21r26s8F           4331 	ld	hl,#_cmd + 2
   13DC DD 75 FC           4332 	ld	-4 (ix),l
   13DF DD 74 FD           4333 	ld	-3 (ix),h
   13E2 3Ar76s8F           4334 	ld	a,(#_ff1+0)
   13E5 83                 4335 	add	a,e
   13E6 4F                 4336 	ld	c,a
   13E7 3Ar77s8F           4337 	ld	a,(#_ff1+1)
   13EA 8A                 4338 	adc	a,d
   13EB 06 00              4339 	ld	b,#0x00
   13ED 21r00s00           4340 	ld	hl,#_sintab
   13F0 09                 4341 	add	hl,bc
   13F1 7E                 4342 	ld	a,(hl)
   13F2 4F                 4343 	ld	c,a
   13F3 CB 29              4344 	sra	c
   13F5 79                 4345 	ld	a,c
   13F6 17                 4346 	rla	
   13F7 9F                 4347 	sbc	a,a
   13F8 47                 4348 	ld	b,a
   13F9 21 40 01           4349 	ld	hl,#0x0140
   13FC 09                 4350 	add	hl,bc
   13FD 4D                 4351 	ld	c,l
   13FE 44                 4352 	ld	b,h
   13FF DD 6E FC           4353 	ld	l,-4 (ix)
   1402 DD 66 FD           4354 	ld	h,-3 (ix)
   1405 71                 4355 	ld	(hl),c
   1406 23                 4356 	inc	hl
   1407 70                 4357 	ld	(hl),b
                           4358 ;demo.c:606: cmd.dest_y = y;
   1408 21r2As8F           4359 	ld	hl, #_cmd + 6
   140B 73                 4360 	ld	(hl),e
   140C 23                 4361 	inc	hl
   140D 72                 4362 	ld	(hl),d
                           4363 ;demo.c:607: vdp_copier(&cmd);
   140E D5                 4364 	push	de
   140F 21r24s8F           4365 	ld	hl,#_cmd
   1412 E5                 4366 	push	hl
   1413 CDr00s00           4367 	call	_vdp_copier
   1416 F1                 4368 	pop	af
   1417 D1                 4369 	pop	de
                           4370 ;demo.c:604: for (y = ender; y < enderend; y+=16) {
   1418 21 10 00           4371 	ld	hl,#0x0010
   141B 19                 4372 	add	hl,de
   141C EB                 4373 	ex	de,hl
   141D C3rCEs13           4374 	jp	00110$
   1420                    4375 00113$:
                           4376 ;demo.c:609: ff1+=4;
   1420 21r76s8F           4377 	ld	hl,#_ff1
   1423 7E                 4378 	ld	a,(hl)
   1424 C6 04              4379 	add	a,#0x04
   1426 23                 4380 	inc	hl
   1427 2B                 4381 	dec	hl
   1428 C5                 4382 	push	bc
   1429 4F                 4383 	ld	c, a
   142A 23                 4384 	inc	hl
   142B 7E                 4385 	ld	a, (hl)
   142C 47                 4386 	ld	b, a
   142D 79                 4387 	ld	a, c
   142E 2B                 4388 	dec	hl
   142F 77                 4389 	ld	(hl), a
   1430 78                 4390 	ld	a, b
   1431 C1                 4391 	pop	bc
   1432 CE 00              4392 	adc	a,#0x00
   1434 23                 4393 	inc	hl
   1435 77                 4394 	ld	(hl),a
   1436 C3rD3s14           4395 	jp	00109$
   1439                    4396 00108$:
                           4397 ;demo.c:613: cmd.size_x = 72;
   1439 21r2Cs8F           4398 	ld	hl, #_cmd + 8
   143C 36 48              4399 	ld	(hl),#0x48
   143E 23                 4400 	inc	hl
   143F 36 00              4401 	ld	(hl),#0x00
                           4402 ;demo.c:614: cmd.size_y = 16;
   1441 21r2Es8F           4403 	ld	hl, #_cmd + 10
   1444 36 10              4404 	ld	(hl),#0x10
   1446 23                 4405 	inc	hl
   1447 36 00              4406 	ld	(hl),#0x00
                           4407 ;demo.c:615: cmd.data = 0;
                           4408 ;demo.c:616: cmd.argument = 0x00; // from 182xY to right
   1449 3E 00              4409 	ld	a,#0x00
   144B 32r30s8F           4410 	ld	(#_cmd + 12),a
   144E 32r31s8F           4411 	ld	(#_cmd + 13),a
                           4412 ;demo.c:617: cmd.command = 0xe0; // vram to vram, y only
   1451 01r32s8F           4413 	ld	bc,#_cmd + 14
   1454 3E E0              4414 	ld	a,#0xE0
   1456 02                 4415 	ld	(bc),a
                           4416 ;demo.c:618: cmd.source_x = 182;
   1457 21r24s8F           4417 	ld	hl,#_cmd
   145A 36 B6              4418 	ld	(hl),#0xB6
   145C 23                 4419 	inc	hl
   145D 36 00              4420 	ld	(hl),#0x00
                           4421 ;demo.c:619: cmd.dest_x = 182;
   145F 21r28s8F           4422 	ld	hl, #_cmd + 4
   1462 36 B6              4423 	ld	(hl),#0xB6
   1464 23                 4424 	inc	hl
   1465 36 00              4425 	ld	(hl),#0x00
                           4426 ;demo.c:621: for (y = ender; y < enderend; y+=16) {
   1467 ED 4Br7As8F        4427 	ld	bc,(_ender)
   146B                    4428 00114$:
   146B 79                 4429 	ld	a,c
   146C DD 96 FE           4430 	sub	a,-2 (ix)
   146F 78                 4431 	ld	a,b
   1470 DD 9E FF           4432 	sbc	a,-1 (ix)
   1473 F2rBDs14           4433 	jp	P,00117$
                           4434 ;demo.c:622: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1476 21r26s8F           4435 	ld	hl,#_cmd + 2
   1479 DD 75 FC           4436 	ld	-4 (ix),l
   147C DD 74 FD           4437 	ld	-3 (ix),h
   147F 3Ar78s8F           4438 	ld	a,(#_ff2+0)
   1482 81                 4439 	add	a,c
   1483 5F                 4440 	ld	e,a
   1484 3Ar79s8F           4441 	ld	a,(#_ff2+1)
   1487 88                 4442 	adc	a,b
   1488 16 00              4443 	ld	d,#0x00
   148A 21r00s00           4444 	ld	hl,#_sintab
   148D 19                 4445 	add	hl,de
   148E 5E                 4446 	ld	e,(hl)
   148F CB 2B              4447 	sra	e
   1491 7B                 4448 	ld	a,e
   1492 17                 4449 	rla	
   1493 9F                 4450 	sbc	a,a
   1494 57                 4451 	ld	d,a
   1495 21 40 01           4452 	ld	hl,#0x0140
   1498 19                 4453 	add	hl,de
   1499 EB                 4454 	ex	de,hl
   149A DD 6E FC           4455 	ld	l,-4 (ix)
   149D DD 66 FD           4456 	ld	h,-3 (ix)
   14A0 73                 4457 	ld	(hl),e
   14A1 23                 4458 	inc	hl
   14A2 72                 4459 	ld	(hl),d
                           4460 ;demo.c:623: cmd.dest_y = y;
   14A3 11r2As8F           4461 	ld	de,#_cmd + 6
   14A6 EB                 4462 	ex	de,hl
   14A7 71                 4463 	ld	(hl),c
   14A8 23                 4464 	inc	hl
   14A9 70                 4465 	ld	(hl),b
                           4466 ;demo.c:624: vdp_copier(&cmd);
   14AA C5                 4467 	push	bc
   14AB 21r24s8F           4468 	ld	hl,#_cmd
   14AE E5                 4469 	push	hl
   14AF CDr00s00           4470 	call	_vdp_copier
   14B2 F1                 4471 	pop	af
   14B3 C1                 4472 	pop	bc
                           4473 ;demo.c:621: for (y = ender; y < enderend; y+=16) {
   14B4 21 10 00           4474 	ld	hl,#0x0010
   14B7 09                 4475 	add	hl,bc
   14B8 4D                 4476 	ld	c,l
   14B9 44                 4477 	ld	b,h
   14BA C3r6Bs14           4478 	jp	00114$
   14BD                    4479 00117$:
                           4480 ;demo.c:626: ff2+=4;
   14BD 21r78s8F           4481 	ld	hl,#_ff2
   14C0 7E                 4482 	ld	a,(hl)
   14C1 C6 04              4483 	add	a,#0x04
   14C3 23                 4484 	inc	hl
   14C4 2B                 4485 	dec	hl
   14C5 C5                 4486 	push	bc
   14C6 4F                 4487 	ld	c, a
   14C7 23                 4488 	inc	hl
   14C8 7E                 4489 	ld	a, (hl)
   14C9 47                 4490 	ld	b, a
   14CA 79                 4491 	ld	a, c
   14CB 2B                 4492 	dec	hl
   14CC 77                 4493 	ld	(hl), a
   14CD 78                 4494 	ld	a, b
   14CE C1                 4495 	pop	bc
   14CF CE 00              4496 	adc	a,#0x00
   14D1 23                 4497 	inc	hl
   14D2 77                 4498 	ld	(hl),a
   14D3                    4499 00109$:
                           4500 ;demo.c:629: bulbflipper = -bulbflipper;
   14D3 AF                 4501 	xor	a,a
   14D4 FD 21r74s8F        4502 	ld	iy,#_bulbflipper
   14D8 3E 00              4503 	ld	a,#0x00
   14DA FD 9E 00           4504 	sbc	a,0 (iy)
   14DD 21r74s8F           4505 	ld	hl,#_bulbflipper + 0
   14E0 77                 4506 	ld	(hl), a
   14E1 FD 21r74s8F        4507 	ld	iy,#_bulbflipper
   14E5 3E 00              4508 	ld	a,#0x00
   14E7 FD 9E 01           4509 	sbc	a,1 (iy)
   14EA 21r75s8F           4510 	ld	hl,#_bulbflipper + 1
   14ED 77                 4511 	ld	(hl), a
   14EE DD F9              4512 	ld	sp,ix
   14F0 DD E1              4513 	pop	ix
   14F2 C9                 4514 	ret
   14F3                    4515 _bulbs_end::
                           4516 ;demo.c:643: void animplay() {
                           4517 ;	---------------------------------
                           4518 ; Function animplay
                           4519 ; ---------------------------------
   14F3                    4520 _animplay_start::
   14F3                    4521 _animplay:
   14F3 DD E5              4522 	push	ix
   14F5 DD 21 00 00        4523 	ld	ix,#0
   14F9 DD 39              4524 	add	ix,sp
   14FB F5                 4525 	push	af
   14FC 3B                 4526 	dec	sp
                           4527 ;demo.c:648: if (anim_init == 0) {
   14FD 3Ar86s8F           4528 	ld	a,(#_anim_init+0)
   1500 21r87s8F           4529 	ld	hl,#_anim_init + 1
   1503 B6                 4530 	or	a,(hl)
   1504 C2r60s15           4531 	jp	NZ,00117$
                           4532 ;demo.c:650: vdp_register(0,0);
   1507 21 00 00           4533 	ld	hl,#0x0000
   150A E5                 4534 	push	hl
   150B CDr00s00           4535 	call	_vdp_register
   150E F1                 4536 	pop	af
                           4537 ;demo.c:651: vdp_register(1,0);
   150F 21 01 00           4538 	ld	hl,#0x0001
   1512 E5                 4539 	push	hl
   1513 CDr00s00           4540 	call	_vdp_register
   1516 F1                 4541 	pop	af
                           4542 ;demo.c:653: bitbuster(tf1,0x8000,VRAM_0);
   1517 3E 01              4543 	ld	a,#0x01
   1519 F5                 4544 	push	af
   151A 33                 4545 	inc	sp
   151B 21 00 80           4546 	ld	hl,#0x8000
   151E E5                 4547 	push	hl
   151F 21r40s30           4548 	ld	hl,#_tf1
   1522 E5                 4549 	push	hl
   1523 CDr00s00           4550 	call	_bitbuster
   1526 F1                 4551 	pop	af
   1527 F1                 4552 	pop	af
   1528 33                 4553 	inc	sp
                           4554 ;demo.c:654: bitbuster(tf2,0x0000,VRAM_1);
   1529 3E 00              4555 	ld	a,#0x00
   152B F5                 4556 	push	af
   152C 33                 4557 	inc	sp
   152D 21 00 00           4558 	ld	hl,#0x0000
   1530 E5                 4559 	push	hl
   1531 21r20s5F           4560 	ld	hl,#_tf2
   1534 E5                 4561 	push	hl
   1535 CDr00s00           4562 	call	_bitbuster
   1538 F1                 4563 	pop	af
   1539 F1                 4564 	pop	af
   153A 33                 4565 	inc	sp
                           4566 ;demo.c:656: vdp_set_screen5();
   153B CDr00s00           4567 	call	_vdp_set_screen5
                           4568 ;demo.c:657: vdp_register(1,0x60);
   153E 21 01 60           4569 	ld	hl,#0x6001
   1541 E5                 4570 	push	hl
   1542 CDr00s00           4571 	call	_vdp_register
   1545 F1                 4572 	pop	af
                           4573 ;demo.c:658: vdp_register(9,2); // 192 lines
   1546 21 09 02           4574 	ld	hl,#0x0209
   1549 E5                 4575 	push	hl
   154A CDr00s00           4576 	call	_vdp_register
   154D F1                 4577 	pop	af
                           4578 ;demo.c:661: anim_init = 1;
   154E 21r86s8F           4579 	ld	hl,#_anim_init + 0
   1551 36 01              4580 	ld	(hl), #0x01
   1553 21r87s8F           4581 	ld	hl,#_anim_init + 1
   1556 36 00              4582 	ld	(hl), #0x00
                           4583 ;demo.c:662: vdp_load_palette(tf_palette);
   1558 21rE0s8E           4584 	ld	hl,#_tf_palette
   155B E5                 4585 	push	hl
   155C CDr00s00           4586 	call	_vdp_load_palette
   155F F1                 4587 	pop	af
                           4588 ;demo.c:665: for (y = 0; y < 96; y+=1) {
   1560                    4589 00117$:
   1560 DD 36 FF 00        4590 	ld	-1 (ix),#0x00
   1564                    4591 00109$:
   1564 DD 7E FF           4592 	ld	a,-1 (ix)
   1567 D6 60              4593 	sub	a,#0x60
   1569 D2rEBs15           4594 	jp	NC,00112$
                           4595 ;demo.c:666: cmd.source_x = xo;
   156C ED 5Br7Es8F        4596 	ld	de,(_xo)
   1570 21r24s8F           4597 	ld	hl,#_cmd
   1573 73                 4598 	ld	(hl),e
   1574 23                 4599 	inc	hl
   1575 72                 4600 	ld	(hl),d
                           4601 ;demo.c:667: cmd.source_y = 256+po+yo+(y>>1);
   1576 11r26s8F           4602 	ld	de,#_cmd + 2
   1579 3Ar82s8F           4603 	ld	a,(#_po+0)
   157C 4F                 4604 	ld	c,a
   157D 3Ar83s8F           4605 	ld	a,(#_po+1)
   1580 C6 01              4606 	add	a,#0x01
   1582 47                 4607 	ld	b,a
   1583 21r80s8F           4608 	ld	hl,#_yo
   1586 79                 4609 	ld	a,c
   1587 86                 4610 	add	a,(hl)
   1588 DD 77 FD           4611 	ld	-3 (ix),a
   158B 78                 4612 	ld	a,b
   158C 23                 4613 	inc	hl
   158D 8E                 4614 	adc	a,(hl)
   158E DD 77 FE           4615 	ld	-2 (ix),a
   1591 DD 4E FF           4616 	ld	c,-1 (ix)
   1594 CB 39              4617 	srl	c
   1596 06 00              4618 	ld	b,#0x00
   1598 DD 7E FD           4619 	ld	a,-3 (ix)
   159B 81                 4620 	add	a,c
   159C 4F                 4621 	ld	c,a
   159D DD 7E FE           4622 	ld	a,-2 (ix)
   15A0 88                 4623 	adc	a,b
   15A1 47                 4624 	ld	b,a
   15A2 6B                 4625 	ld	l,e
   15A3 62                 4626 	ld	h,d
   15A4 71                 4627 	ld	(hl),c
   15A5 23                 4628 	inc	hl
   15A6 70                 4629 	ld	(hl),b
                           4630 ;demo.c:668: cmd.dest_x = 0;
   15A7 21r28s8F           4631 	ld	hl, #_cmd + 4
   15AA 36 00              4632 	ld	(hl),#0x00
   15AC 23                 4633 	inc	hl
   15AD 36 00              4634 	ld	(hl),#0x00
                           4635 ;demo.c:669: cmd.dest_y = (y<<1);
   15AF 01r2As8F           4636 	ld	bc,#_cmd + 6
   15B2 DD 5E FF           4637 	ld	e,-1 (ix)
   15B5 16 00              4638 	ld	d,#0x00
   15B7 CB 23              4639 	sla	e
   15B9 CB 12              4640 	rl	d
   15BB 69                 4641 	ld	l,c
   15BC 60                 4642 	ld	h,b
   15BD 73                 4643 	ld	(hl),e
   15BE 23                 4644 	inc	hl
   15BF 72                 4645 	ld	(hl),d
                           4646 ;demo.c:670: cmd.size_x = 128;
   15C0 21r2Cs8F           4647 	ld	hl, #_cmd + 8
   15C3 36 80              4648 	ld	(hl),#0x80
   15C5 23                 4649 	inc	hl
   15C6 36 00              4650 	ld	(hl),#0x00
                           4651 ;demo.c:671: cmd.size_y = 1;
   15C8 21r2Es8F           4652 	ld	hl, #_cmd + 10
   15CB 36 01              4653 	ld	(hl),#0x01
   15CD 23                 4654 	inc	hl
   15CE 36 00              4655 	ld	(hl),#0x00
                           4656 ;demo.c:672: cmd.data = 0;
                           4657 ;demo.c:673: cmd.argument = 0x00;
   15D0 3E 00              4658 	ld	a,#0x00
   15D2 32r30s8F           4659 	ld	(#_cmd + 12),a
   15D5 32r31s8F           4660 	ld	(#_cmd + 13),a
                           4661 ;demo.c:674: cmd.command = 0xD0;
   15D8 3E D0              4662 	ld	a,#0xD0
   15DA 32r32s8F           4663 	ld	(#_cmd + 14),a
                           4664 ;demo.c:675: vdp_copier(&cmd);
   15DD 21r24s8F           4665 	ld	hl,#_cmd
   15E0 E5                 4666 	push	hl
   15E1 CDr00s00           4667 	call	_vdp_copier
   15E4 F1                 4668 	pop	af
                           4669 ;demo.c:665: for (y = 0; y < 96; y+=1) {
   15E5 DD 34 FF           4670 	inc	-1 (ix)
   15E8 C3r64s15           4671 	jp	00109$
   15EB                    4672 00112$:
                           4673 ;demo.c:678: xo+=128;
   15EB 21r7Es8F           4674 	ld	hl,#_xo
   15EE 7E                 4675 	ld	a,(hl)
   15EF C6 80              4676 	add	a,#0x80
   15F1 23                 4677 	inc	hl
   15F2 2B                 4678 	dec	hl
   15F3 C5                 4679 	push	bc
   15F4 4F                 4680 	ld	c, a
   15F5 23                 4681 	inc	hl
   15F6 7E                 4682 	ld	a, (hl)
   15F7 47                 4683 	ld	b, a
   15F8 79                 4684 	ld	a, c
   15F9 2B                 4685 	dec	hl
   15FA 77                 4686 	ld	(hl), a
   15FB 78                 4687 	ld	a, b
   15FC C1                 4688 	pop	bc
   15FD CE 00              4689 	adc	a,#0x00
   15FF 23                 4690 	inc	hl
   1600 77                 4691 	ld	(hl),a
                           4692 ;demo.c:679: if (xo >= 256) {
   1601 3Ar7Es8F           4693 	ld	a,(#_xo+0)
   1604 D6 00              4694 	sub	a,#0x00
   1606 3Ar7Fs8F           4695 	ld	a,(#_xo+1)
   1609 DE 01              4696 	sbc	a,#0x01
   160B FAr72s16           4697 	jp	M,00108$
                           4698 ;demo.c:680: xo = 0;
   160E 21r7Es8F           4699 	ld	hl,#_xo + 0
   1611 36 00              4700 	ld	(hl), #0x00
   1613 21r7Fs8F           4701 	ld	hl,#_xo + 1
   1616 36 00              4702 	ld	(hl), #0x00
                           4703 ;demo.c:681: yo+=48;
   1618 21r80s8F           4704 	ld	hl,#_yo
   161B 7E                 4705 	ld	a,(hl)
   161C C6 30              4706 	add	a,#0x30
   161E 23                 4707 	inc	hl
   161F 2B                 4708 	dec	hl
   1620 C5                 4709 	push	bc
   1621 4F                 4710 	ld	c, a
   1622 23                 4711 	inc	hl
   1623 7E                 4712 	ld	a, (hl)
   1624 47                 4713 	ld	b, a
   1625 79                 4714 	ld	a, c
   1626 2B                 4715 	dec	hl
   1627 77                 4716 	ld	(hl), a
   1628 78                 4717 	ld	a, b
   1629 C1                 4718 	pop	bc
   162A CE 00              4719 	adc	a,#0x00
   162C 23                 4720 	inc	hl
   162D 77                 4721 	ld	(hl),a
                           4722 ;demo.c:682: if (yo >= 192) { yo = 0; po+=256; }
   162E 3Ar80s8F           4723 	ld	a,(#_yo+0)
   1631 D6 C0              4724 	sub	a,#0xC0
   1633 3Ar81s8F           4725 	ld	a,(#_yo+1)
   1636 DE 00              4726 	sbc	a,#0x00
   1638 FAr5Bs16           4727 	jp	M,00104$
   163B 21r80s8F           4728 	ld	hl,#_yo + 0
   163E 36 00              4729 	ld	(hl), #0x00
   1640 21r81s8F           4730 	ld	hl,#_yo + 1
   1643 36 00              4731 	ld	(hl), #0x00
   1645 21r82s8F           4732 	ld	hl,#_po
   1648 7E                 4733 	ld	a,(hl)
   1649 C6 00              4734 	add	a,#0x00
   164B 23                 4735 	inc	hl
   164C 2B                 4736 	dec	hl
   164D C5                 4737 	push	bc
   164E 4F                 4738 	ld	c, a
   164F 23                 4739 	inc	hl
   1650 7E                 4740 	ld	a, (hl)
   1651 47                 4741 	ld	b, a
   1652 79                 4742 	ld	a, c
   1653 2B                 4743 	dec	hl
   1654 77                 4744 	ld	(hl), a
   1655 78                 4745 	ld	a, b
   1656 C1                 4746 	pop	bc
   1657 CE 01              4747 	adc	a,#0x01
   1659 23                 4748 	inc	hl
   165A 77                 4749 	ld	(hl),a
   165B                    4750 00104$:
                           4751 ;demo.c:683: if (po >= 768) {
   165B 3Ar82s8F           4752 	ld	a,(#_po+0)
   165E D6 00              4753 	sub	a,#0x00
   1660 3Ar83s8F           4754 	ld	a,(#_po+1)
   1663 DE 03              4755 	sbc	a,#0x03
   1665 FAr72s16           4756 	jp	M,00108$
                           4757 ;demo.c:684: po = 0;
   1668 21r82s8F           4758 	ld	hl,#_po + 0
   166B 36 00              4759 	ld	(hl), #0x00
   166D 21r83s8F           4760 	ld	hl,#_po + 1
   1670 36 00              4761 	ld	(hl), #0x00
   1672                    4762 00108$:
                           4763 ;demo.c:691: fffaaa++;
   1672 FD 21r84s8F        4764 	ld	iy,#_fffaaa
   1676 FD 34 00           4765 	inc	0 (iy)
   1679 20 07              4766 	jr	NZ,00124$
   167B FD 21r84s8F        4767 	ld	iy,#_fffaaa
   167F FD 34 01           4768 	inc	1 (iy)
   1682                    4769 00124$:
   1682 DD F9              4770 	ld	sp,ix
   1684 DD E1              4771 	pop	ix
   1686 C9                 4772 	ret
   1687                    4773 _animplay_end::
                           4774 ;demo.c:703: void drawbox(int box_x, int box_y, uint8_t x, uint8_t y) {
                           4775 ;	---------------------------------
                           4776 ; Function drawbox
                           4777 ; ---------------------------------
   1687                    4778 _drawbox_start::
   1687                    4779 _drawbox:
   1687 DD E5              4780 	push	ix
   1689 DD 21 00 00        4781 	ld	ix,#0
   168D DD 39              4782 	add	ix,sp
                           4783 ;demo.c:704: dbly = 0;
   168F 21r8Bs8F           4784 	ld	hl,#_dbly + 0
   1692 36 00              4785 	ld	(hl), #0x00
   1694 21r8Cs8F           4786 	ld	hl,#_dbly + 1
   1697 36 00              4787 	ld	(hl), #0x00
                           4788 ;demo.c:706: cmd.source_x = box_x * 42;
   1699 DD 5E 04           4789 	ld	e,4 (ix)
   169C DD 56 05           4790 	ld	d,5 (ix)
   169F 6B                 4791 	ld	l,e
   16A0 62                 4792 	ld	h,d
   16A1 29                 4793 	add	hl,hl
   16A2 29                 4794 	add	hl,hl
   16A3 19                 4795 	add	hl,de
   16A4 29                 4796 	add	hl,hl
   16A5 29                 4797 	add	hl,hl
   16A6 19                 4798 	add	hl,de
   16A7 29                 4799 	add	hl,hl
   16A8 4D                 4800 	ld	c,l
   16A9 44                 4801 	ld	b,h
   16AA 21r24s8F           4802 	ld	hl,#_cmd
   16AD 71                 4803 	ld	(hl),c
   16AE 23                 4804 	inc	hl
   16AF 70                 4805 	ld	(hl),b
                           4806 ;demo.c:707: cmd.source_y = 768+box_y * 42;
   16B0 01r26s8F           4807 	ld	bc,#_cmd + 2
   16B3 DD 5E 06           4808 	ld	e,6 (ix)
   16B6 DD 56 07           4809 	ld	d,7 (ix)
   16B9 6B                 4810 	ld	l,e
   16BA 62                 4811 	ld	h,d
   16BB 29                 4812 	add	hl,hl
   16BC 29                 4813 	add	hl,hl
   16BD 19                 4814 	add	hl,de
   16BE 29                 4815 	add	hl,hl
   16BF 29                 4816 	add	hl,hl
   16C0 19                 4817 	add	hl,de
   16C1 29                 4818 	add	hl,hl
   16C2 EB                 4819 	ex	de,hl
   16C3 21 00 03           4820 	ld	hl,#0x0300
   16C6 19                 4821 	add	hl,de
   16C7 EB                 4822 	ex	de,hl
   16C8 69                 4823 	ld	l,c
   16C9 60                 4824 	ld	h,b
   16CA 73                 4825 	ld	(hl),e
   16CB 23                 4826 	inc	hl
   16CC 72                 4827 	ld	(hl),d
                           4828 ;demo.c:708: cmd.dest_x = x;
   16CD 01r28s8F           4829 	ld	bc,#_cmd + 4
   16D0 DD 5E 08           4830 	ld	e,8 (ix)
   16D3 16 00              4831 	ld	d,#0x00
   16D5 69                 4832 	ld	l,c
   16D6 60                 4833 	ld	h,b
   16D7 73                 4834 	ld	(hl),e
   16D8 23                 4835 	inc	hl
   16D9 72                 4836 	ld	(hl),d
                           4837 ;demo.c:709: cmd.dest_y = dbly+y;
   16DA 01r2As8F           4838 	ld	bc,#_cmd + 6
   16DD DD 5E 09           4839 	ld	e,9 (ix)
   16E0 16 00              4840 	ld	d,#0x00
   16E2 69                 4841 	ld	l,c
   16E3 60                 4842 	ld	h,b
   16E4 73                 4843 	ld	(hl),e
   16E5 23                 4844 	inc	hl
   16E6 72                 4845 	ld	(hl),d
                           4846 ;demo.c:710: cmd.size_x = 42;
   16E7 21r2Cs8F           4847 	ld	hl, #_cmd + 8
   16EA 36 2A              4848 	ld	(hl),#0x2A
   16EC 23                 4849 	inc	hl
   16ED 36 00              4850 	ld	(hl),#0x00
                           4851 ;demo.c:711: cmd.size_y = 42;
   16EF 21r2Es8F           4852 	ld	hl, #_cmd + 10
   16F2 36 2A              4853 	ld	(hl),#0x2A
   16F4 23                 4854 	inc	hl
   16F5 36 00              4855 	ld	(hl),#0x00
                           4856 ;demo.c:712: cmd.data = 0;
                           4857 ;demo.c:713: cmd.argument = 0x00;
   16F7 3E 00              4858 	ld	a,#0x00
   16F9 32r30s8F           4859 	ld	(#_cmd + 12),a
   16FC 32r31s8F           4860 	ld	(#_cmd + 13),a
                           4861 ;demo.c:714: cmd.command = 0x98; // TIMP sprite
   16FF 3E 98              4862 	ld	a,#0x98
   1701 32r32s8F           4863 	ld	(#_cmd + 14),a
                           4864 ;demo.c:715: vdp_copier(&cmd);
   1704 D5                 4865 	push	de
   1705 21r24s8F           4866 	ld	hl,#_cmd
   1708 E5                 4867 	push	hl
   1709 CDr00s00           4868 	call	_vdp_copier
   170C F1                 4869 	pop	af
   170D D1                 4870 	pop	de
                           4871 ;demo.c:717: prevx = x;
   170E DD 7E 08           4872 	ld	a,8 (ix)
   1711 21r8Ds8F           4873 	ld	hl,#_prevx + 0
   1714 77                 4874 	ld	(hl), a
   1715 21r8Es8F           4875 	ld	hl,#_prevx + 1
   1718 36 00              4876 	ld	(hl), #0x00
                           4877 ;demo.c:718: prevy = y;
   171A 21r8Fs8F           4878 	ld	hl,#_prevy + 0
   171D 73                 4879 	ld	(hl), e
   171E 21r90s8F           4880 	ld	hl,#_prevy + 1
   1721 72                 4881 	ld	(hl), d
                           4882 ;demo.c:719: prevbx = box_x;
   1722 DD 7E 04           4883 	ld	a,4 (ix)
   1725 21r91s8F           4884 	ld	hl,#_prevbx + 0
   1728 77                 4885 	ld	(hl), a
   1729 DD 7E 05           4886 	ld	a,5 (ix)
   172C 21r92s8F           4887 	ld	hl,#_prevbx + 1
   172F 77                 4888 	ld	(hl), a
                           4889 ;demo.c:720: prevby = box_y;
   1730 DD 7E 06           4890 	ld	a,6 (ix)
   1733 21r93s8F           4891 	ld	hl,#_prevby + 0
   1736 77                 4892 	ld	(hl), a
   1737 DD 7E 07           4893 	ld	a,7 (ix)
   173A 21r94s8F           4894 	ld	hl,#_prevby + 1
   173D 77                 4895 	ld	(hl), a
   173E DD E1              4896 	pop	ix
   1740 C9                 4897 	ret
   1741                    4898 _drawbox_end::
                           4899 ;demo.c:734: void boxes() {
                           4900 ;	---------------------------------
                           4901 ; Function boxes
                           4902 ; ---------------------------------
   1741                    4903 _boxes_start::
   1741                    4904 _boxes:
                           4905 ;demo.c:738: if (bonc == 1) {
   1741 3ArA1s8F           4906 	ld	a,(#_bonc+0)
   1744 D6 01              4907 	sub	a,#0x01
   1746 20 06              4908 	jr	NZ,00156$
   1748 3ArA2s8F           4909 	ld	a,(#_bonc+1)
   174B B7                 4910 	or	a,a
   174C 28 02              4911 	jr	Z,00157$
   174E                    4912 00156$:
   174E 18 4D              4913 	jr	00102$
   1750                    4914 00157$:
                           4915 ;demo.c:740: cmd.source_x = 0;
   1750 21r24s8F           4916 	ld	hl,#_cmd
   1753 36 00              4917 	ld	(hl),#0x00
   1755 23                 4918 	inc	hl
   1756 36 00              4919 	ld	(hl),#0x00
                           4920 ;demo.c:741: cmd.source_y = 256;
   1758 21r26s8F           4921 	ld	hl, #_cmd + 2
   175B 36 00              4922 	ld	(hl),#0x00
   175D 23                 4923 	inc	hl
   175E 36 01              4924 	ld	(hl),#0x01
                           4925 ;demo.c:742: cmd.dest_x = pbx;
   1760 01r28s8F           4926 	ld	bc,#_cmd + 4
   1763 ED 5BrA3s8F        4927 	ld	de,(_pbx)
   1767 69                 4928 	ld	l,c
   1768 60                 4929 	ld	h,b
   1769 73                 4930 	ld	(hl),e
   176A 23                 4931 	inc	hl
   176B 72                 4932 	ld	(hl),d
                           4933 ;demo.c:743: cmd.dest_y = pbt;
   176C 01r2As8F           4934 	ld	bc,#_cmd + 6
   176F ED 5BrA5s8F        4935 	ld	de,(_pbt)
   1773 69                 4936 	ld	l,c
   1774 60                 4937 	ld	h,b
   1775 73                 4938 	ld	(hl),e
   1776 23                 4939 	inc	hl
   1777 72                 4940 	ld	(hl),d
                           4941 ;demo.c:744: cmd.size_x = 42;
   1778 21r2Cs8F           4942 	ld	hl, #_cmd + 8
   177B 36 2A              4943 	ld	(hl),#0x2A
   177D 23                 4944 	inc	hl
   177E 36 00              4945 	ld	(hl),#0x00
                           4946 ;demo.c:745: cmd.size_y = 42;
   1780 21r2Es8F           4947 	ld	hl, #_cmd + 10
   1783 36 2A              4948 	ld	(hl),#0x2A
   1785 23                 4949 	inc	hl
   1786 36 00              4950 	ld	(hl),#0x00
                           4951 ;demo.c:746: cmd.data = 0;
                           4952 ;demo.c:747: cmd.argument = 0x00;
   1788 3E 00              4953 	ld	a,#0x00
   178A 32r30s8F           4954 	ld	(#_cmd + 12),a
   178D 32r31s8F           4955 	ld	(#_cmd + 13),a
                           4956 ;demo.c:748: cmd.command = 0xD0; // HMMM
   1790 3E D0              4957 	ld	a,#0xD0
   1792 32r32s8F           4958 	ld	(#_cmd + 14),a
                           4959 ;demo.c:749: vdp_copier(&cmd);
   1795 21r24s8F           4960 	ld	hl,#_cmd
   1798 E5                 4961 	push	hl
   1799 CDr00s00           4962 	call	_vdp_copier
   179C F1                 4963 	pop	af
   179D                    4964 00102$:
                           4965 ;demo.c:753: if (boxes_init == 0) {
   179D AF                 4966 	xor	a,a
   179E 21r88s8F           4967 	ld	hl,#_boxes_init + 0
   17A1 B6                 4968 	or	a,(hl)
   17A2 C2r38s18           4969 	jp	NZ,00104$
                           4970 ;demo.c:754: boxes_init = 1;
   17A5 FD 21r88s8F        4971 	ld	iy,#_boxes_init
   17A9 FD 36 00 01        4972 	ld	0 (iy),#0x01
                           4973 ;demo.c:756: cmd.size_x = 8;
   17AD 21r2Cs8F           4974 	ld	hl, #_cmd + 8
   17B0 36 08              4975 	ld	(hl),#0x08
   17B2 23                 4976 	inc	hl
   17B3 36 00              4977 	ld	(hl),#0x00
                           4978 ;demo.c:757: cmd.size_y = 212;
   17B5 21r2Es8F           4979 	ld	hl, #_cmd + 10
   17B8 36 D4              4980 	ld	(hl),#0xD4
   17BA 23                 4981 	inc	hl
   17BB 36 00              4982 	ld	(hl),#0x00
                           4983 ;demo.c:758: cmd.data = 0;
                           4984 ;demo.c:759: cmd.argument = 0x00; // from 70xY to left
   17BD 3E 00              4985 	ld	a,#0x00
   17BF 32r30s8F           4986 	ld	(#_cmd + 12),a
   17C2 32r31s8F           4987 	ld	(#_cmd + 13),a
                           4988 ;demo.c:760: cmd.command = 0xd0; // vram to vram, y only
   17C5 01r32s8F           4989 	ld	bc,#_cmd + 14
   17C8 3E D0              4990 	ld	a,#0xD0
   17CA 02                 4991 	ld	(bc),a
                           4992 ;demo.c:761: cmd.source_x = 248;
   17CB 21r24s8F           4993 	ld	hl,#_cmd
   17CE 36 F8              4994 	ld	(hl),#0xF8
   17D0 23                 4995 	inc	hl
   17D1 36 00              4996 	ld	(hl),#0x00
                           4997 ;demo.c:762: cmd.source_y = 0;
   17D3 21r26s8F           4998 	ld	hl, #_cmd + 2
   17D6 36 00              4999 	ld	(hl),#0x00
   17D8 23                 5000 	inc	hl
   17D9 36 00              5001 	ld	(hl),#0x00
                           5002 ;demo.c:763: cmd.dest_y = 0;
   17DB 21r2As8F           5003 	ld	hl, #_cmd + 6
   17DE 36 00              5004 	ld	(hl),#0x00
   17E0 23                 5005 	inc	hl
   17E1 36 00              5006 	ld	(hl),#0x00
                           5007 ;demo.c:765: for (x = 248; x >= 0; x-=8) {
   17E3 01 F8 00           5008 	ld	bc,#0x00F8
   17E6                    5009 00131$:
   17E6 78                 5010 	ld	a,b
   17E7 CB 7F              5011 	bit	7,a
   17E9 20 38              5012 	jr	NZ,00134$
                           5013 ;demo.c:766: waitVB();
   17EB 76                 5014 		halt 
                           5015 ;demo.c:767: cmd.dest_x = x;
   17EC 11r28s8F           5016 	ld	de,#_cmd + 4
   17EF EB                 5017 	ex	de,hl
   17F0 71                 5018 	ld	(hl),c
   17F1 23                 5019 	inc	hl
   17F2 70                 5020 	ld	(hl),b
                           5021 ;demo.c:768: cmd.dest_y = 0;
   17F3 11r2As8F           5022 	ld	de,#_cmd + 6
   17F6 EB                 5023 	ex	de,hl
   17F7 36 00              5024 	ld	(hl),#0x00
   17F9 23                 5025 	inc	hl
   17FA 36 00              5026 	ld	(hl),#0x00
                           5027 ;demo.c:769: vdp_copier(&cmd);
   17FC C5                 5028 	push	bc
   17FD 21r24s8F           5029 	ld	hl,#_cmd
   1800 E5                 5030 	push	hl
   1801 CDr00s00           5031 	call	_vdp_copier
   1804 F1                 5032 	pop	af
   1805 C1                 5033 	pop	bc
                           5034 ;demo.c:770: cmd.dest_y = 256;
   1806 11r2As8F           5035 	ld	de,#_cmd + 6
   1809 EB                 5036 	ex	de,hl
   180A 36 00              5037 	ld	(hl),#0x00
   180C 23                 5038 	inc	hl
   180D 36 01              5039 	ld	(hl),#0x01
                           5040 ;demo.c:771: vdp_copier(&cmd);
   180F C5                 5041 	push	bc
   1810 21r24s8F           5042 	ld	hl,#_cmd
   1813 E5                 5043 	push	hl
   1814 CDr00s00           5044 	call	_vdp_copier
   1817 F1                 5045 	pop	af
   1818 C1                 5046 	pop	bc
                           5047 ;demo.c:765: for (x = 248; x >= 0; x-=8) {
   1819 79                 5048 	ld	a,c
   181A C6 F8              5049 	add	a,#0xF8
   181C 4F                 5050 	ld	c,a
   181D 78                 5051 	ld	a,b
   181E CE FF              5052 	adc	a,#0xFF
   1820 47                 5053 	ld	b,a
   1821 18 C3              5054 	jr	00131$
   1823                    5055 00134$:
                           5056 ;demo.c:774: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   1823 21 08 B4           5057 	ld	hl,#0xB408
   1826 E5                 5058 	push	hl
   1827 21rBCs1A           5059 	ld	hl,#__str_9
   182A E5                 5060 	push	hl
   182B CDr60s10           5061 	call	_drawsine
   182E F1                 5062 	pop	af
   182F F1                 5063 	pop	af
                           5064 ;demo.c:776: vdp_load_palette(boxes_palette);
   1830 21r00s8F           5065 	ld	hl,#_boxes_palette
   1833 E5                 5066 	push	hl
   1834 CDr00s00           5067 	call	_vdp_load_palette
   1837 F1                 5068 	pop	af
   1838                    5069 00104$:
                           5070 ;demo.c:779: if (bt >= 80) bt+=6;
   1838 3Ar99s8F           5071 	ld	a,(#_bt+0)
   183B D6 50              5072 	sub	a,#0x50
   183D 3Ar9As8F           5073 	ld	a,(#_bt+1)
   1840 DE 00              5074 	sbc	a,#0x00
   1842 FAr5Bs18           5075 	jp	M,00106$
   1845 21r99s8F           5076 	ld	hl,#_bt
   1848 7E                 5077 	ld	a,(hl)
   1849 C6 06              5078 	add	a,#0x06
   184B 23                 5079 	inc	hl
   184C 2B                 5080 	dec	hl
   184D C5                 5081 	push	bc
   184E 4F                 5082 	ld	c, a
   184F 23                 5083 	inc	hl
   1850 7E                 5084 	ld	a, (hl)
   1851 47                 5085 	ld	b, a
   1852 79                 5086 	ld	a, c
   1853 2B                 5087 	dec	hl
   1854 77                 5088 	ld	(hl), a
   1855 78                 5089 	ld	a, b
   1856 C1                 5090 	pop	bc
   1857 CE 00              5091 	adc	a,#0x00
   1859 23                 5092 	inc	hl
   185A 77                 5093 	ld	(hl),a
   185B                    5094 00106$:
                           5095 ;demo.c:780: if (bt < 80 && bt >= 60) bt+=5;
   185B 3Ar99s8F           5096 	ld	a,(#_bt+0)
   185E D6 50              5097 	sub	a,#0x50
   1860 3Ar9As8F           5098 	ld	a,(#_bt+1)
   1863 DE 00              5099 	sbc	a,#0x00
   1865 F2r8Bs18           5100 	jp	P,00108$
   1868 3Ar99s8F           5101 	ld	a,(#_bt+0)
   186B D6 3C              5102 	sub	a,#0x3C
   186D 3Ar9As8F           5103 	ld	a,(#_bt+1)
   1870 DE 00              5104 	sbc	a,#0x00
   1872 FAr8Bs18           5105 	jp	M,00108$
   1875 21r99s8F           5106 	ld	hl,#_bt
   1878 7E                 5107 	ld	a,(hl)
   1879 C6 05              5108 	add	a,#0x05
   187B 23                 5109 	inc	hl
   187C 2B                 5110 	dec	hl
   187D C5                 5111 	push	bc
   187E 4F                 5112 	ld	c, a
   187F 23                 5113 	inc	hl
   1880 7E                 5114 	ld	a, (hl)
   1881 47                 5115 	ld	b, a
   1882 79                 5116 	ld	a, c
   1883 2B                 5117 	dec	hl
   1884 77                 5118 	ld	(hl), a
   1885 78                 5119 	ld	a, b
   1886 C1                 5120 	pop	bc
   1887 CE 00              5121 	adc	a,#0x00
   1889 23                 5122 	inc	hl
   188A 77                 5123 	ld	(hl),a
   188B                    5124 00108$:
                           5125 ;demo.c:781: if (bt < 60 && bt >= 40) bt+=4;
   188B 3Ar99s8F           5126 	ld	a,(#_bt+0)
   188E D6 3C              5127 	sub	a,#0x3C
   1890 3Ar9As8F           5128 	ld	a,(#_bt+1)
   1893 DE 00              5129 	sbc	a,#0x00
   1895 F2rBBs18           5130 	jp	P,00111$
   1898 3Ar99s8F           5131 	ld	a,(#_bt+0)
   189B D6 28              5132 	sub	a,#0x28
   189D 3Ar9As8F           5133 	ld	a,(#_bt+1)
   18A0 DE 00              5134 	sbc	a,#0x00
   18A2 FArBBs18           5135 	jp	M,00111$
   18A5 21r99s8F           5136 	ld	hl,#_bt
   18A8 7E                 5137 	ld	a,(hl)
   18A9 C6 04              5138 	add	a,#0x04
   18AB 23                 5139 	inc	hl
   18AC 2B                 5140 	dec	hl
   18AD C5                 5141 	push	bc
   18AE 4F                 5142 	ld	c, a
   18AF 23                 5143 	inc	hl
   18B0 7E                 5144 	ld	a, (hl)
   18B1 47                 5145 	ld	b, a
   18B2 79                 5146 	ld	a, c
   18B3 2B                 5147 	dec	hl
   18B4 77                 5148 	ld	(hl), a
   18B5 78                 5149 	ld	a, b
   18B6 C1                 5150 	pop	bc
   18B7 CE 00              5151 	adc	a,#0x00
   18B9 23                 5152 	inc	hl
   18BA 77                 5153 	ld	(hl),a
   18BB                    5154 00111$:
                           5155 ;demo.c:782: if (bt < 40 && bt >= 10) bt+=3;
   18BB 3Ar99s8F           5156 	ld	a,(#_bt+0)
   18BE D6 28              5157 	sub	a,#0x28
   18C0 3Ar9As8F           5158 	ld	a,(#_bt+1)
   18C3 DE 00              5159 	sbc	a,#0x00
   18C5 F2rEBs18           5160 	jp	P,00114$
   18C8 3Ar99s8F           5161 	ld	a,(#_bt+0)
   18CB D6 0A              5162 	sub	a,#0x0A
   18CD 3Ar9As8F           5163 	ld	a,(#_bt+1)
   18D0 DE 00              5164 	sbc	a,#0x00
   18D2 FArEBs18           5165 	jp	M,00114$
   18D5 21r99s8F           5166 	ld	hl,#_bt
   18D8 7E                 5167 	ld	a,(hl)
   18D9 C6 03              5168 	add	a,#0x03
   18DB 23                 5169 	inc	hl
   18DC 2B                 5170 	dec	hl
   18DD C5                 5171 	push	bc
   18DE 4F                 5172 	ld	c, a
   18DF 23                 5173 	inc	hl
   18E0 7E                 5174 	ld	a, (hl)
   18E1 47                 5175 	ld	b, a
   18E2 79                 5176 	ld	a, c
   18E3 2B                 5177 	dec	hl
   18E4 77                 5178 	ld	(hl), a
   18E5 78                 5179 	ld	a, b
   18E6 C1                 5180 	pop	bc
   18E7 CE 00              5181 	adc	a,#0x00
   18E9 23                 5182 	inc	hl
   18EA 77                 5183 	ld	(hl),a
   18EB                    5184 00114$:
                           5185 ;demo.c:783: if (bt < 10 ) bt+=2;
   18EB 3Ar99s8F           5186 	ld	a,(#_bt+0)
   18EE D6 0A              5187 	sub	a,#0x0A
   18F0 3Ar9As8F           5188 	ld	a,(#_bt+1)
   18F3 DE 00              5189 	sbc	a,#0x00
   18F5 F2r0Es19           5190 	jp	P,00117$
   18F8 21r99s8F           5191 	ld	hl,#_bt
   18FB 7E                 5192 	ld	a,(hl)
   18FC C6 02              5193 	add	a,#0x02
   18FE 23                 5194 	inc	hl
   18FF 2B                 5195 	dec	hl
   1900 C5                 5196 	push	bc
   1901 4F                 5197 	ld	c, a
   1902 23                 5198 	inc	hl
   1903 7E                 5199 	ld	a, (hl)
   1904 47                 5200 	ld	b, a
   1905 79                 5201 	ld	a, c
   1906 2B                 5202 	dec	hl
   1907 77                 5203 	ld	(hl), a
   1908 78                 5204 	ld	a, b
   1909 C1                 5205 	pop	bc
   190A CE 00              5206 	adc	a,#0x00
   190C 23                 5207 	inc	hl
   190D 77                 5208 	ld	(hl),a
   190E                    5209 00117$:
                           5210 ;demo.c:787: cmd.source_x = bx;
   190E ED 4Br95s8F        5211 	ld	bc,(_bx)
   1912 21r24s8F           5212 	ld	hl,#_cmd
   1915 71                 5213 	ld	(hl),c
   1916 23                 5214 	inc	hl
   1917 70                 5215 	ld	(hl),b
                           5216 ;demo.c:788: cmd.source_y = bt;
   1918 01r26s8F           5217 	ld	bc,#_cmd + 2
   191B ED 5Br99s8F        5218 	ld	de,(_bt)
   191F 69                 5219 	ld	l,c
   1920 60                 5220 	ld	h,b
   1921 73                 5221 	ld	(hl),e
   1922 23                 5222 	inc	hl
   1923 72                 5223 	ld	(hl),d
                           5224 ;demo.c:789: cmd.dest_x = 0;
   1924 21r28s8F           5225 	ld	hl, #_cmd + 4
   1927 36 00              5226 	ld	(hl),#0x00
   1929 23                 5227 	inc	hl
   192A 36 00              5228 	ld	(hl),#0x00
                           5229 ;demo.c:790: cmd.dest_y = 256;
   192C 21r2As8F           5230 	ld	hl, #_cmd + 6
   192F 36 00              5231 	ld	(hl),#0x00
   1931 23                 5232 	inc	hl
   1932 36 01              5233 	ld	(hl),#0x01
                           5234 ;demo.c:791: cmd.size_x = 42;
   1934 21r2Cs8F           5235 	ld	hl, #_cmd + 8
   1937 36 2A              5236 	ld	(hl),#0x2A
   1939 23                 5237 	inc	hl
   193A 36 00              5238 	ld	(hl),#0x00
                           5239 ;demo.c:792: cmd.size_y = 42;
   193C 21r2Es8F           5240 	ld	hl, #_cmd + 10
   193F 36 2A              5241 	ld	(hl),#0x2A
   1941 23                 5242 	inc	hl
   1942 36 00              5243 	ld	(hl),#0x00
                           5244 ;demo.c:793: cmd.data = 0;
                           5245 ;demo.c:794: cmd.argument = 0x00;
   1944 3E 00              5246 	ld	a,#0x00
   1946 32r30s8F           5247 	ld	(#_cmd + 12),a
   1949 32r31s8F           5248 	ld	(#_cmd + 13),a
                           5249 ;demo.c:795: cmd.command = 0xD0; // HMMM
   194C 3E D0              5250 	ld	a,#0xD0
   194E 32r32s8F           5251 	ld	(#_cmd + 14),a
                           5252 ;demo.c:796: vdp_copier(&cmd);
   1951 21r24s8F           5253 	ld	hl,#_cmd
   1954 E5                 5254 	push	hl
   1955 CDr00s00           5255 	call	_vdp_copier
   1958 F1                 5256 	pop	af
                           5257 ;demo.c:798: pbx = bx;
   1959 2Ar95s8F           5258 	ld	hl,(_bx)
   195C FD 21rA3s8F        5259 	ld	iy,#_pbx
   1960 FD 75 00           5260 	ld	0 (iy),l
   1963 FD 21rA3s8F        5261 	ld	iy,#_pbx
   1967 FD 74 01           5262 	ld	1 (iy),h
                           5263 ;demo.c:799: pbt = bt;
   196A 2Ar99s8F           5264 	ld	hl,(_bt)
   196D FD 21rA5s8F        5265 	ld	iy,#_pbt
   1971 FD 75 00           5266 	ld	0 (iy),l
   1974 FD 21rA5s8F        5267 	ld	iy,#_pbt
   1978 FD 74 01           5268 	ld	1 (iy),h
                           5269 ;demo.c:801: waitVB();
   197B 76                 5270 		halt 
                           5271 ;demo.c:803: drawbox(bxx,byy,bx,bt);
   197C 21r99s8F           5272 	ld	hl,#_bt + 0
   197F 4E                 5273 	ld	c,(hl)
   1980 21r95s8F           5274 	ld	hl,#_bx + 0
   1983 46                 5275 	ld	b,(hl)
   1984 79                 5276 	ld	a,c
   1985 F5                 5277 	push	af
   1986 33                 5278 	inc	sp
   1987 C5                 5279 	push	bc
   1988 33                 5280 	inc	sp
   1989 2Ar9Ds8F           5281 	ld	hl,(_byy)
   198C E5                 5282 	push	hl
   198D 2Ar9Bs8F           5283 	ld	hl,(_bxx)
   1990 E5                 5284 	push	hl
   1991 CDr87s16           5285 	call	_drawbox
   1994 F1                 5286 	pop	af
   1995 F1                 5287 	pop	af
   1996 F1                 5288 	pop	af
                           5289 ;demo.c:805: waitVB();
   1997 76                 5290 		halt 
                           5291 ;demo.c:807: bonc = 1;
   1998 21rA1s8F           5292 	ld	hl,#_bonc + 0
   199B 36 01              5293 	ld	(hl), #0x01
   199D 21rA2s8F           5294 	ld	hl,#_bonc + 1
   19A0 36 00              5295 	ld	(hl), #0x00
                           5296 ;demo.c:808: if (bt > by) {
   19A2 21r97s8F           5297 	ld	hl,#_by
   19A5 7E                 5298 	ld	a,(hl)
   19A6 FD 21r99s8F        5299 	ld	iy,#_bt
   19AA FD 96 00           5300 	sub	a,0 (iy)
   19AD 23                 5301 	inc	hl
   19AE 7E                 5302 	ld	a,(hl)
   19AF FD 21r99s8F        5303 	ld	iy,#_bt
   19B3 FD 9E 01           5304 	sbc	a,1 (iy)
   19B6 F0                 5305 	ret	P
                           5306 ;demo.c:810: bt = 0;
   19B7 21r99s8F           5307 	ld	hl,#_bt + 0
   19BA 36 00              5308 	ld	(hl), #0x00
   19BC 21r9As8F           5309 	ld	hl,#_bt + 1
   19BF 36 00              5310 	ld	(hl), #0x00
                           5311 ;demo.c:811: if (by > 0) {
   19C1 3E 00              5312 	ld	a,#0x00
   19C3 FD 21r97s8F        5313 	ld	iy,#_by
   19C7 FD 96 00           5314 	sub	a,0 (iy)
   19CA 3E 00              5315 	ld	a,#0x00
   19CC FD 21r97s8F        5316 	ld	iy,#_by
   19D0 FD 9E 01           5317 	sbc	a,1 (iy)
   19D3 F2r39s1A           5318 	jp	P,00127$
                           5319 ;demo.c:812: bonc = 0;
   19D6 21rA1s8F           5320 	ld	hl,#_bonc + 0
   19D9 36 00              5321 	ld	(hl), #0x00
   19DB 21rA2s8F           5322 	ld	hl,#_bonc + 1
   19DE 36 00              5323 	ld	(hl), #0x00
                           5324 ;demo.c:813: by-=16;
   19E0 21r97s8F           5325 	ld	hl,#_by
   19E3 7E                 5326 	ld	a,(hl)
   19E4 C6 F0              5327 	add	a,#0xF0
   19E6 77                 5328 	ld	(hl),a
   19E7 23                 5329 	inc	hl
   19E8 7E                 5330 	ld	a,(hl)
   19E9 CE FF              5331 	adc	a,#0xFF
   19EB 77                 5332 	ld	(hl),a
                           5333 ;demo.c:814: bxx++;
   19EC FD 21r9Bs8F        5334 	ld	iy,#_bxx
   19F0 FD 34 00           5335 	inc	0 (iy)
   19F3 20 07              5336 	jr	NZ,00158$
   19F5 FD 21r9Bs8F        5337 	ld	iy,#_bxx
   19F9 FD 34 01           5338 	inc	1 (iy)
   19FC                    5339 00158$:
                           5340 ;demo.c:815: if (bxx >= 4) { bxx = 0; byy++; }
   19FC 3Ar9Bs8F           5341 	ld	a,(#_bxx+0)
   19FF D6 04              5342 	sub	a,#0x04
   1A01 3Ar9Cs8F           5343 	ld	a,(#_bxx+1)
   1A04 DE 00              5344 	sbc	a,#0x00
   1A06 FAr23s1A           5345 	jp	M,00119$
   1A09 21r9Bs8F           5346 	ld	hl,#_bxx + 0
   1A0C 36 00              5347 	ld	(hl), #0x00
   1A0E 21r9Cs8F           5348 	ld	hl,#_bxx + 1
   1A11 36 00              5349 	ld	(hl), #0x00
   1A13 FD 21r9Ds8F        5350 	ld	iy,#_byy
   1A17 FD 34 00           5351 	inc	0 (iy)
   1A1A 20 07              5352 	jr	NZ,00159$
   1A1C FD 21r9Ds8F        5353 	ld	iy,#_byy
   1A20 FD 34 01           5354 	inc	1 (iy)
   1A23                    5355 00159$:
   1A23                    5356 00119$:
                           5357 ;demo.c:816: if (byy >= 2) { byy = 0; }
   1A23 3Ar9Ds8F           5358 	ld	a,(#_byy+0)
   1A26 D6 02              5359 	sub	a,#0x02
   1A28 3Ar9Es8F           5360 	ld	a,(#_byy+1)
   1A2B DE 00              5361 	sbc	a,#0x00
   1A2D F8                 5362 	ret	M
   1A2E 21r9Ds8F           5363 	ld	hl,#_byy + 0
   1A31 36 00              5364 	ld	(hl), #0x00
   1A33 21r9Es8F           5365 	ld	hl,#_byy + 1
   1A36 36 00              5366 	ld	(hl), #0x00
   1A38 C9                 5367 	ret
   1A39                    5368 00127$:
                           5369 ;demo.c:818: bx-=21;
   1A39 21r95s8F           5370 	ld	hl,#_bx
   1A3C 7E                 5371 	ld	a,(hl)
   1A3D C6 EB              5372 	add	a,#0xEB
   1A3F 77                 5373 	ld	(hl),a
   1A40 23                 5374 	inc	hl
   1A41 7E                 5375 	ld	a,(hl)
   1A42 CE FF              5376 	adc	a,#0xFF
   1A44 77                 5377 	ld	(hl),a
                           5378 ;demo.c:819: bo+=11;
   1A45 21r9Fs8F           5379 	ld	hl,#_bo
   1A48 7E                 5380 	ld	a,(hl)
   1A49 C6 0B              5381 	add	a,#0x0B
   1A4B 23                 5382 	inc	hl
   1A4C 2B                 5383 	dec	hl
   1A4D C5                 5384 	push	bc
   1A4E 4F                 5385 	ld	c, a
   1A4F 23                 5386 	inc	hl
   1A50 7E                 5387 	ld	a, (hl)
   1A51 47                 5388 	ld	b, a
   1A52 79                 5389 	ld	a, c
   1A53 2B                 5390 	dec	hl
   1A54 77                 5391 	ld	(hl), a
   1A55 78                 5392 	ld	a, b
   1A56 C1                 5393 	pop	bc
   1A57 CE 00              5394 	adc	a,#0x00
   1A59 23                 5395 	inc	hl
   1A5A 77                 5396 	ld	(hl),a
                           5397 ;demo.c:820: if (bo > 192) bo = 0;
   1A5B 3E C0              5398 	ld	a,#0xC0
   1A5D FD 21r9Fs8F        5399 	ld	iy,#_bo
   1A61 FD 96 00           5400 	sub	a,0 (iy)
   1A64 3E 00              5401 	ld	a,#0x00
   1A66 FD 21r9Fs8F        5402 	ld	iy,#_bo
   1A6A FD 9E 01           5403 	sbc	a,1 (iy)
   1A6D F2r7As1A           5404 	jp	P,00123$
   1A70 21r9Fs8F           5405 	ld	hl,#_bo + 0
   1A73 36 00              5406 	ld	(hl), #0x00
   1A75 21rA0s8F           5407 	ld	hl,#_bo + 1
   1A78 36 00              5408 	ld	(hl), #0x00
   1A7A                    5409 00123$:
                           5410 ;demo.c:821: by=84+bo;
   1A7A 21r97s8F           5411 	ld	hl,#_by
   1A7D 3Ar9Fs8F           5412 	ld	a,(#_bo+0)
   1A80 C6 54              5413 	add	a,#0x54
   1A82 77                 5414 	ld	(hl),a
   1A83 3ArA0s8F           5415 	ld	a,(#_bo+1)
   1A86 CE 00              5416 	adc	a,#0x00
   1A88 23                 5417 	inc	hl
   1A89 77                 5418 	ld	(hl),a
                           5419 ;demo.c:822: if (bx <= 0) {
   1A8A 3E 00              5420 	ld	a,#0x00
   1A8C FD 21r95s8F        5421 	ld	iy,#_bx
   1A90 FD 96 00           5422 	sub	a,0 (iy)
   1A93 3E 00              5423 	ld	a,#0x00
   1A95 FD 21r95s8F        5424 	ld	iy,#_bx
   1A99 FD 9E 01           5425 	sbc	a,1 (iy)
   1A9C F8                 5426 	ret	M
                           5427 ;demo.c:823: bx = 256;
   1A9D 21r95s8F           5428 	ld	hl,#_bx + 0
   1AA0 36 00              5429 	ld	(hl), #0x00
   1AA2 21r96s8F           5430 	ld	hl,#_bx + 1
   1AA5 36 01              5431 	ld	(hl), #0x01
                           5432 ;demo.c:824: bo = 0;
   1AA7 21r9Fs8F           5433 	ld	hl,#_bo + 0
   1AAA 36 00              5434 	ld	(hl), #0x00
   1AAC 21rA0s8F           5435 	ld	hl,#_bo + 1
   1AAF 36 00              5436 	ld	(hl), #0x00
                           5437 ;demo.c:825: by = 84;
   1AB1 21r97s8F           5438 	ld	hl,#_by + 0
   1AB4 36 54              5439 	ld	(hl), #0x54
   1AB6 21r98s8F           5440 	ld	hl,#_by + 1
   1AB9 36 00              5441 	ld	(hl), #0x00
   1ABB C9                 5442 	ret
   1ABC                    5443 _boxes_end::
   1ABC                    5444 __str_9:
   1ABC 4C 45 54 20 55 53  5445 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1AE7 00                 5446 	.db 0x00
                           5447 ;demo.c:836: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5448 ;	---------------------------------
                           5449 ; Function drawtritile
                           5450 ; ---------------------------------
   1AE8                    5451 _drawtritile_start::
   1AE8                    5452 _drawtritile:
   1AE8 DD E5              5453 	push	ix
   1AEA DD 21 00 00        5454 	ld	ix,#0
   1AEE DD 39              5455 	add	ix,sp
                           5456 ;demo.c:837: cmd.source_x = tx;
   1AF0 DD 4E 04           5457 	ld	c,4 (ix)
   1AF3 06 00              5458 	ld	b,#0x00
   1AF5 21r24s8F           5459 	ld	hl,#_cmd
   1AF8 71                 5460 	ld	(hl),c
   1AF9 23                 5461 	inc	hl
   1AFA 70                 5462 	ld	(hl),b
                           5463 ;demo.c:838: cmd.source_y = ty-1;
   1AFB 01r26s8F           5464 	ld	bc,#_cmd + 2
   1AFE DD 5E 05           5465 	ld	e,5 (ix)
   1B01 DD 56 06           5466 	ld	d,6 (ix)
   1B04 1B                 5467 	dec	de
   1B05 69                 5468 	ld	l,c
   1B06 60                 5469 	ld	h,b
   1B07 73                 5470 	ld	(hl),e
   1B08 23                 5471 	inc	hl
   1B09 72                 5472 	ld	(hl),d
                           5473 ;demo.c:839: cmd.dest_x = x;
   1B0A 01r28s8F           5474 	ld	bc,#_cmd + 4
   1B0D DD 5E 07           5475 	ld	e,7 (ix)
   1B10 16 00              5476 	ld	d,#0x00
   1B12 69                 5477 	ld	l,c
   1B13 60                 5478 	ld	h,b
   1B14 73                 5479 	ld	(hl),e
   1B15 23                 5480 	inc	hl
   1B16 72                 5481 	ld	(hl),d
                           5482 ;demo.c:840: cmd.dest_y = y;
   1B17 01r2As8F           5483 	ld	bc,#_cmd + 6
   1B1A DD 5E 08           5484 	ld	e,8 (ix)
   1B1D 16 00              5485 	ld	d,#0x00
   1B1F 69                 5486 	ld	l,c
   1B20 60                 5487 	ld	h,b
   1B21 73                 5488 	ld	(hl),e
   1B22 23                 5489 	inc	hl
   1B23 72                 5490 	ld	(hl),d
                           5491 ;demo.c:841: cmd.size_x = 16;
   1B24 21r2Cs8F           5492 	ld	hl, #_cmd + 8
   1B27 36 10              5493 	ld	(hl),#0x10
   1B29 23                 5494 	inc	hl
   1B2A 36 00              5495 	ld	(hl),#0x00
                           5496 ;demo.c:842: cmd.size_y = 16;
   1B2C 21r2Es8F           5497 	ld	hl, #_cmd + 10
   1B2F 36 10              5498 	ld	(hl),#0x10
   1B31 23                 5499 	inc	hl
   1B32 36 00              5500 	ld	(hl),#0x00
                           5501 ;demo.c:843: cmd.data = 0;
                           5502 ;demo.c:844: cmd.argument = 0x00;
   1B34 3E 00              5503 	ld	a,#0x00
   1B36 32r30s8F           5504 	ld	(#_cmd + 12),a
   1B39 32r31s8F           5505 	ld	(#_cmd + 13),a
                           5506 ;demo.c:845: cmd.command = 0xd0; // HMMM
   1B3C 3E D0              5507 	ld	a,#0xD0
   1B3E 32r32s8F           5508 	ld	(#_cmd + 14),a
                           5509 ;demo.c:846: vdp_copier(&cmd);
   1B41 21r24s8F           5510 	ld	hl,#_cmd
   1B44 E5                 5511 	push	hl
   1B45 CDr00s00           5512 	call	_vdp_copier
   1B48 F1                 5513 	pop	af
   1B49 DD E1              5514 	pop	ix
   1B4B C9                 5515 	ret
   1B4C                    5516 _drawtritile_end::
                           5517 ;demo.c:849: void drawtilescreen(char* tripic) {
                           5518 ;	---------------------------------
                           5519 ; Function drawtilescreen
                           5520 ; ---------------------------------
   1B4C                    5521 _drawtilescreen_start::
   1B4C                    5522 _drawtilescreen:
   1B4C DD E5              5523 	push	ix
   1B4E DD 21 00 00        5524 	ld	ix,#0
   1B52 DD 39              5525 	add	ix,sp
   1B54 21 F8 FF           5526 	ld	hl,#-8
   1B57 39                 5527 	add	hl,sp
   1B58 F9                 5528 	ld	sp,hl
                           5529 ;demo.c:850: int x = 0;
   1B59 DD 36 FE 00        5530 	ld	-2 (ix),#0x00
   1B5D DD 36 FF 00        5531 	ld	-1 (ix),#0x00
                           5532 ;demo.c:853: while(i < 256) {
   1B61 DD 36 FC 00        5533 	ld	-4 (ix),#0x00
   1B65 DD 36 FD 00        5534 	ld	-3 (ix),#0x00
   1B69 DD 36 FA 00        5535 	ld	-6 (ix),#0x00
   1B6D DD 36 FB 00        5536 	ld	-5 (ix),#0x00
   1B71                    5537 00103$:
   1B71 DD 7E FA           5538 	ld	a,-6 (ix)
   1B74 D6 00              5539 	sub	a,#0x00
   1B76 DD 7E FB           5540 	ld	a,-5 (ix)
   1B79 DE 01              5541 	sbc	a,#0x01
   1B7B F2r02s1C           5542 	jp	P,00106$
                           5543 ;demo.c:854: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1B7E DD 7E FC           5544 	ld	a,-4 (ix)
   1B81 DD 77 F8           5545 	ld	-8 (ix),a
   1B84 DD 7E FE           5546 	ld	a,-2 (ix)
   1B87 DD 77 F9           5547 	ld	-7 (ix),a
   1B8A DD 7E 04           5548 	ld	a,4 (ix)
   1B8D DD 86 FA           5549 	add	a,-6 (ix)
   1B90 4F                 5550 	ld	c,a
   1B91 DD 7E 05           5551 	ld	a,5 (ix)
   1B94 DD 8E FB           5552 	adc	a,-5 (ix)
   1B97 47                 5553 	ld	b,a
   1B98 0A                 5554 	ld	a,(bc)
   1B99 4F                 5555 	ld	c,a
   1B9A 87                 5556 	add	a,a
   1B9B C6r20              5557 	add	a,#<_tri_lookup_y
   1B9D 6F                 5558 	ld	l,a
   1B9E 3Es01              5559 	ld	a,#>_tri_lookup_y
   1BA0 CE 00              5560 	adc	a,#0x00
   1BA2 67                 5561 	ld	h,a
   1BA3 46                 5562 	ld	b,(hl)
   1BA4 23                 5563 	inc	hl
   1BA5 56                 5564 	ld	d,(hl)
   1BA6 3Er00              5565 	ld	a,#<_tri_lookup_x
   1BA8 81                 5566 	add	a,c
   1BA9 6F                 5567 	ld	l,a
   1BAA 3Es01              5568 	ld	a,#>_tri_lookup_x
   1BAC CE 00              5569 	adc	a,#0x00
   1BAE 67                 5570 	ld	h,a
   1BAF 4E                 5571 	ld	c,(hl)
   1BB0 DD 66 F8           5572 	ld	h,-8 (ix)
   1BB3 DD 6E F9           5573 	ld	l,-7 (ix)
   1BB6 E5                 5574 	push	hl
   1BB7 58                 5575 	ld	e,b
   1BB8 D5                 5576 	push	de
   1BB9 79                 5577 	ld	a,c
   1BBA F5                 5578 	push	af
   1BBB 33                 5579 	inc	sp
   1BBC CDrE8s1A           5580 	call	_drawtritile
   1BBF F1                 5581 	pop	af
   1BC0 F1                 5582 	pop	af
   1BC1 33                 5583 	inc	sp
                           5584 ;demo.c:855: x+=16;
   1BC2 DD 7E FE           5585 	ld	a,-2 (ix)
   1BC5 C6 10              5586 	add	a,#0x10
   1BC7 DD 77 FE           5587 	ld	-2 (ix),a
   1BCA DD 7E FF           5588 	ld	a,-1 (ix)
   1BCD CE 00              5589 	adc	a,#0x00
   1BCF DD 77 FF           5590 	ld	-1 (ix),a
                           5591 ;demo.c:856: if (x >= 256) {x = 0; y+=16;}
   1BD2 DD 7E FE           5592 	ld	a,-2 (ix)
   1BD5 D6 00              5593 	sub	a,#0x00
   1BD7 DD 7E FF           5594 	ld	a,-1 (ix)
   1BDA DE 01              5595 	sbc	a,#0x01
   1BDC FArF7s1B           5596 	jp	M,00102$
   1BDF DD 36 FE 00        5597 	ld	-2 (ix),#0x00
   1BE3 DD 36 FF 00        5598 	ld	-1 (ix),#0x00
   1BE7 DD 7E FC           5599 	ld	a,-4 (ix)
   1BEA C6 10              5600 	add	a,#0x10
   1BEC DD 77 FC           5601 	ld	-4 (ix),a
   1BEF DD 7E FD           5602 	ld	a,-3 (ix)
   1BF2 CE 00              5603 	adc	a,#0x00
   1BF4 DD 77 FD           5604 	ld	-3 (ix),a
   1BF7                    5605 00102$:
                           5606 ;demo.c:857: i++;
   1BF7 DD 34 FA           5607 	inc	-6 (ix)
   1BFA 20 03              5608 	jr	NZ,00112$
   1BFC DD 34 FB           5609 	inc	-5 (ix)
   1BFF                    5610 00112$:
   1BFF C3r71s1B           5611 	jp	00103$
   1C02                    5612 00106$:
   1C02 DD F9              5613 	ld	sp,ix
   1C04 DD E1              5614 	pop	ix
   1C06 C9                 5615 	ret
   1C07                    5616 _drawtilescreen_end::
                           5617 ;demo.c:872: void tritiles() {
                           5618 ;	---------------------------------
                           5619 ; Function tritiles
                           5620 ; ---------------------------------
   1C07                    5621 _tritiles_start::
   1C07                    5622 _tritiles:
   1C07 DD E5              5623 	push	ix
   1C09 DD 21 00 00        5624 	ld	ix,#0
   1C0D DD 39              5625 	add	ix,sp
   1C0F 21 FB FF           5626 	ld	hl,#-5
   1C12 39                 5627 	add	hl,sp
   1C13 F9                 5628 	ld	sp,hl
                           5629 ;demo.c:879: if (tri_inited == 0) {
   1C14 AF                 5630 	xor	a,a
   1C15 21rA7s8F           5631 	ld	hl,#_tri_inited + 0
   1C18 B6                 5632 	or	a,(hl)
   1C19 C2rB8s1C           5633 	jp	NZ,00102$
                           5634 ;demo.c:880: tri_inited = 1;
   1C1C FD 21rA7s8F        5635 	ld	iy,#_tri_inited
   1C20 FD 36 00 01        5636 	ld	0 (iy),#0x01
                           5637 ;demo.c:882: cmd.size_x = 256;
   1C24 21r2Cs8F           5638 	ld	hl, #_cmd + 8
   1C27 36 00              5639 	ld	(hl),#0x00
   1C29 23                 5640 	inc	hl
   1C2A 36 01              5641 	ld	(hl),#0x01
                           5642 ;demo.c:883: cmd.size_y = 1;
   1C2C 21r2Es8F           5643 	ld	hl, #_cmd + 10
   1C2F 36 01              5644 	ld	(hl),#0x01
   1C31 23                 5645 	inc	hl
   1C32 36 00              5646 	ld	(hl),#0x00
                           5647 ;demo.c:884: cmd.data = 0;
                           5648 ;demo.c:885: cmd.argument = 0x00; // from 70xY to left
   1C34 3E 00              5649 	ld	a,#0x00
   1C36 32r30s8F           5650 	ld	(#_cmd + 12),a
   1C39 32r31s8F           5651 	ld	(#_cmd + 13),a
                           5652 ;demo.c:886: cmd.command = 0xd0; // vram to vram, y only
   1C3C 01r32s8F           5653 	ld	bc,#_cmd + 14
   1C3F 3E D0              5654 	ld	a,#0xD0
   1C41 02                 5655 	ld	(bc),a
                           5656 ;demo.c:887: cmd.source_x = 0;
   1C42 21r24s8F           5657 	ld	hl,#_cmd
   1C45 36 00              5658 	ld	(hl),#0x00
   1C47 23                 5659 	inc	hl
   1C48 36 00              5660 	ld	(hl),#0x00
                           5661 ;demo.c:888: cmd.source_y = 255;
   1C4A 21r26s8F           5662 	ld	hl, #_cmd + 2
   1C4D 36 FF              5663 	ld	(hl),#0xFF
   1C4F 23                 5664 	inc	hl
   1C50 36 00              5665 	ld	(hl),#0x00
                           5666 ;demo.c:889: cmd.dest_y = 0;
   1C52 01r2As8F           5667 	ld	bc,#_cmd + 6
   1C55 69                 5668 	ld	l,c
   1C56 60                 5669 	ld	h,b
   1C57 36 00              5670 	ld	(hl),#0x00
   1C59 23                 5671 	inc	hl
   1C5A 36 00              5672 	ld	(hl),#0x00
                           5673 ;demo.c:891: for (x = 0; x < 212; x++) {
   1C5C DD 36 FE D4        5674 	ld	-2 (ix),#0xD4
   1C60 DD 36 FF 00        5675 	ld	-1 (ix),#0x00
   1C64                    5676 00119$:
                           5677 ;demo.c:892: waitVB();
   1C64 76                 5678 		halt 
                           5679 ;demo.c:893: cmd.dest_x = 0;
   1C65 11r28s8F           5680 	ld	de,#_cmd + 4
   1C68 EB                 5681 	ex	de,hl
   1C69 36 00              5682 	ld	(hl),#0x00
   1C6B 23                 5683 	inc	hl
   1C6C 36 00              5684 	ld	(hl),#0x00
                           5685 ;demo.c:894: cmd.dest_y = x;
   1C6E 11r2As8F           5686 	ld	de,#_cmd + 6
   1C71 DD 4E FE           5687 	ld	c,-2 (ix)
   1C74 DD 46 FF           5688 	ld	b,-1 (ix)
   1C77 0B                 5689 	dec	bc
   1C78 EB                 5690 	ex	de,hl
   1C79 71                 5691 	ld	(hl),c
   1C7A 23                 5692 	inc	hl
   1C7B 70                 5693 	ld	(hl),b
                           5694 ;demo.c:895: vdp_copier(&cmd);
   1C7C C5                 5695 	push	bc
   1C7D 21r24s8F           5696 	ld	hl,#_cmd
   1C80 E5                 5697 	push	hl
   1C81 CDr00s00           5698 	call	_vdp_copier
   1C84 F1                 5699 	pop	af
   1C85 C1                 5700 	pop	bc
   1C86 DD 71 FE           5701 	ld	-2 (ix),c
   1C89 DD 70 FF           5702 	ld	-1 (ix),b
                           5703 ;demo.c:891: for (x = 0; x < 212; x++) {
   1C8C DD 7E FE           5704 	ld	a,-2 (ix)
   1C8F DD B6 FF           5705 	or	a,-1 (ix)
   1C92 20 D0              5706 	jr	NZ,00119$
                           5707 ;demo.c:897: vdp_register(9,2); // 192 lines
   1C94 21 09 02           5708 	ld	hl,#0x0209
   1C97 E5                 5709 	push	hl
   1C98 CDr00s00           5710 	call	_vdp_register
   1C9B F1                 5711 	pop	af
                           5712 ;demo.c:899: vdp_load_palette(boxes_palette);
   1C9C 21r00s8F           5713 	ld	hl,#_boxes_palette
   1C9F E5                 5714 	push	hl
   1CA0 CDr00s00           5715 	call	_vdp_load_palette
   1CA3 F1                 5716 	pop	af
                           5717 ;demo.c:900: msx2_palette(15,0,0,0);
   1CA4 21 00 00           5718 	ld	hl,#0x0000
   1CA7 E5                 5719 	push	hl
   1CA8 2E 0F              5720 	ld	l, #0x0F
   1CAA E5                 5721 	push	hl
   1CAB CDr00s00           5722 	call	_msx2_palette
   1CAE F1                 5723 	pop	af
   1CAF F1                 5724 	pop	af
                           5725 ;demo.c:902: drawtilescreen(tri_center);
   1CB0 21r2Cs02           5726 	ld	hl,#_tri_center
   1CB3 E5                 5727 	push	hl
   1CB4 CDr4Cs1B           5728 	call	_drawtilescreen
   1CB7 F1                 5729 	pop	af
   1CB8                    5730 00102$:
                           5731 ;demo.c:907: triframes++;
   1CB8 FD 21rB2s8F        5732 	ld	iy,#_triframes
   1CBC FD 34 00           5733 	inc	0 (iy)
   1CBF 20 07              5734 	jr	NZ,00139$
   1CC1 FD 21rB2s8F        5735 	ld	iy,#_triframes
   1CC5 FD 34 01           5736 	inc	1 (iy)
   1CC8                    5737 00139$:
                           5738 ;demo.c:908: if (triframes == 300) {
   1CC8 3ArB2s8F           5739 	ld	a,(#_triframes+0)
   1CCB D6 2C              5740 	sub	a,#0x2C
   1CCD 20 07              5741 	jr	NZ,00140$
   1CCF 3ArB3s8F           5742 	ld	a,(#_triframes+1)
   1CD2 D6 01              5743 	sub	a,#0x01
   1CD4 28 02              5744 	jr	Z,00141$
   1CD6                    5745 00140$:
   1CD6 18 08              5746 	jr	00104$
   1CD8                    5747 00141$:
                           5748 ;demo.c:909: drawtilescreen(tri_up);
   1CD8 21rECs02           5749 	ld	hl,#_tri_up
   1CDB E5                 5750 	push	hl
   1CDC CDr4Cs1B           5751 	call	_drawtilescreen
   1CDF F1                 5752 	pop	af
   1CE0                    5753 00104$:
                           5754 ;demo.c:911: if (triframes == 600) {
   1CE0 3ArB2s8F           5755 	ld	a,(#_triframes+0)
   1CE3 D6 58              5756 	sub	a,#0x58
   1CE5 20 07              5757 	jr	NZ,00142$
   1CE7 3ArB3s8F           5758 	ld	a,(#_triframes+1)
   1CEA D6 02              5759 	sub	a,#0x02
   1CEC 28 02              5760 	jr	Z,00143$
   1CEE                    5761 00142$:
   1CEE 18 08              5762 	jr	00106$
   1CF0                    5763 00143$:
                           5764 ;demo.c:912: drawtilescreen(tri_side1);
   1CF0 21rACs03           5765 	ld	hl,#_tri_side1
   1CF3 E5                 5766 	push	hl
   1CF4 CDr4Cs1B           5767 	call	_drawtilescreen
   1CF7 F1                 5768 	pop	af
   1CF8                    5769 00106$:
                           5770 ;demo.c:914: if (triframes == 700) {
   1CF8 3ArB2s8F           5771 	ld	a,(#_triframes+0)
   1CFB D6 BC              5772 	sub	a,#0xBC
   1CFD 20 07              5773 	jr	NZ,00144$
   1CFF 3ArB3s8F           5774 	ld	a,(#_triframes+1)
   1D02 D6 02              5775 	sub	a,#0x02
   1D04 28 02              5776 	jr	Z,00145$
   1D06                    5777 00144$:
   1D06 18 08              5778 	jr	00108$
   1D08                    5779 00145$:
                           5780 ;demo.c:915: drawtilescreen(tri_side2);
   1D08 21r6Cs04           5781 	ld	hl,#_tri_side2
   1D0B E5                 5782 	push	hl
   1D0C CDr4Cs1B           5783 	call	_drawtilescreen
   1D0F F1                 5784 	pop	af
   1D10                    5785 00108$:
                           5786 ;demo.c:917: if (triframes == 800) {
   1D10 3ArB2s8F           5787 	ld	a,(#_triframes+0)
   1D13 D6 20              5788 	sub	a,#0x20
   1D15 20 07              5789 	jr	NZ,00146$
   1D17 3ArB3s8F           5790 	ld	a,(#_triframes+1)
   1D1A D6 03              5791 	sub	a,#0x03
   1D1C 28 02              5792 	jr	Z,00147$
   1D1E                    5793 00146$:
   1D1E 18 08              5794 	jr	00110$
   1D20                    5795 00147$:
                           5796 ;demo.c:918: drawtilescreen(tri_side1);
   1D20 21rACs03           5797 	ld	hl,#_tri_side1
   1D23 E5                 5798 	push	hl
   1D24 CDr4Cs1B           5799 	call	_drawtilescreen
   1D27 F1                 5800 	pop	af
   1D28                    5801 00110$:
                           5802 ;demo.c:920: if (triframes == 900) {
   1D28 3ArB2s8F           5803 	ld	a,(#_triframes+0)
   1D2B D6 84              5804 	sub	a,#0x84
   1D2D 20 07              5805 	jr	NZ,00148$
   1D2F 3ArB3s8F           5806 	ld	a,(#_triframes+1)
   1D32 D6 03              5807 	sub	a,#0x03
   1D34 28 02              5808 	jr	Z,00149$
   1D36                    5809 00148$:
   1D36 18 08              5810 	jr	00112$
   1D38                    5811 00149$:
                           5812 ;demo.c:921: drawtilescreen(tri_side2);
   1D38 21r6Cs04           5813 	ld	hl,#_tri_side2
   1D3B E5                 5814 	push	hl
   1D3C CDr4Cs1B           5815 	call	_drawtilescreen
   1D3F F1                 5816 	pop	af
   1D40                    5817 00112$:
                           5818 ;demo.c:923: if (triframes == 1000) {
   1D40 3ArB2s8F           5819 	ld	a,(#_triframes+0)
   1D43 D6 E8              5820 	sub	a,#0xE8
   1D45 20 07              5821 	jr	NZ,00150$
   1D47 3ArB3s8F           5822 	ld	a,(#_triframes+1)
   1D4A D6 03              5823 	sub	a,#0x03
   1D4C 28 02              5824 	jr	Z,00151$
   1D4E                    5825 00150$:
   1D4E 18 12              5826 	jr	00114$
   1D50                    5827 00151$:
                           5828 ;demo.c:924: triframes = 0;
   1D50 21rB2s8F           5829 	ld	hl,#_triframes + 0
   1D53 36 00              5830 	ld	(hl), #0x00
   1D55 21rB3s8F           5831 	ld	hl,#_triframes + 1
   1D58 36 00              5832 	ld	(hl), #0x00
                           5833 ;demo.c:925: drawtilescreen(tri_center);
   1D5A 21r2Cs02           5834 	ld	hl,#_tri_center
   1D5D E5                 5835 	push	hl
   1D5E CDr4Cs1B           5836 	call	_drawtilescreen
   1D61 F1                 5837 	pop	af
   1D62                    5838 00114$:
                           5839 ;demo.c:928: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   1D62 21rAAs8F           5840 	ld	hl,#_tripal + 2
   1D65 4E                 5841 	ld	c,(hl)
   1D66 11rA9s8F           5842 	ld	de,#_tripal + 1
   1D69 1A                 5843 	ld	a,(de)
   1D6A 47                 5844 	ld	b,a
   1D6B 21rA8s8F           5845 	ld	hl,#_tripal
   1D6E 5E                 5846 	ld	e,(hl)
   1D6F 79                 5847 	ld	a,c
   1D70 F5                 5848 	push	af
   1D71 33                 5849 	inc	sp
   1D72 C5                 5850 	push	bc
   1D73 33                 5851 	inc	sp
   1D74 53                 5852 	ld	d,e
   1D75 1E 03              5853 	ld	e,#0x03
   1D77 D5                 5854 	push	de
   1D78 CDr00s00           5855 	call	_msx2_palette
   1D7B F1                 5856 	pop	af
   1D7C F1                 5857 	pop	af
                           5858 ;demo.c:929: msx2_palette(13,tripal[3],tripal[4],tripal[5]);
   1D7D 21rADs8F           5859 	ld	hl,#_tripal + 5
   1D80 4E                 5860 	ld	c,(hl)
   1D81 11rACs8F           5861 	ld	de,#_tripal + 4
   1D84 1A                 5862 	ld	a,(de)
   1D85 47                 5863 	ld	b,a
   1D86 21rABs8F           5864 	ld	hl,#_tripal + 3
   1D89 5E                 5865 	ld	e,(hl)
   1D8A 79                 5866 	ld	a,c
   1D8B F5                 5867 	push	af
   1D8C 33                 5868 	inc	sp
   1D8D C5                 5869 	push	bc
   1D8E 33                 5870 	inc	sp
   1D8F 53                 5871 	ld	d,e
   1D90 1E 0D              5872 	ld	e,#0x0D
   1D92 D5                 5873 	push	de
   1D93 CDr00s00           5874 	call	_msx2_palette
   1D96 F1                 5875 	pop	af
   1D97 F1                 5876 	pop	af
                           5877 ;demo.c:930: msx2_palette(5,tripal[6],tripal[7],tripal[8]);
   1D98 21rB0s8F           5878 	ld	hl,#_tripal + 8
   1D9B 4E                 5879 	ld	c,(hl)
   1D9C 11rAFs8F           5880 	ld	de,#_tripal + 7
   1D9F 1A                 5881 	ld	a,(de)
   1DA0 47                 5882 	ld	b,a
   1DA1 21rAEs8F           5883 	ld	hl,#_tripal + 6
   1DA4 5E                 5884 	ld	e,(hl)
   1DA5 79                 5885 	ld	a,c
   1DA6 F5                 5886 	push	af
   1DA7 33                 5887 	inc	sp
   1DA8 C5                 5888 	push	bc
   1DA9 33                 5889 	inc	sp
   1DAA 53                 5890 	ld	d,e
   1DAB 1E 05              5891 	ld	e,#0x05
   1DAD D5                 5892 	push	de
   1DAE CDr00s00           5893 	call	_msx2_palette
   1DB1 F1                 5894 	pop	af
   1DB2 F1                 5895 	pop	af
                           5896 ;demo.c:933: tripaltick++;
   1DB3 FD 21rB1s8F        5897 	ld	iy,#_tripaltick
   1DB7 FD 34 00           5898 	inc	0 (iy)
                           5899 ;demo.c:934: if (tripaltick > 6) {
   1DBA 3E 06              5900 	ld	a,#0x06
   1DBC FD 21rB1s8F        5901 	ld	iy,#_tripaltick
   1DC0 FD 96 00           5902 	sub	a,0 (iy)
   1DC3 D2r31s1E           5903 	jp	NC,00124$
                           5904 ;demo.c:936: r = tripal[0];
   1DC6 21rA8s8F           5905 	ld	hl,#_tripal
   1DC9 4E                 5906 	ld	c,(hl)
   1DCA DD 71 FD           5907 	ld	-3 (ix),c
                           5908 ;demo.c:937: g = tripal[1];
   1DCD 11rA9s8F           5909 	ld	de,#_tripal + 1
   1DD0 1A                 5910 	ld	a,(de)
   1DD1 DD 77 FC           5911 	ld	-4 (ix),a
                           5912 ;demo.c:938: b = tripal[2];
   1DD4 21rAAs8F           5913 	ld	hl,#_tripal + 2
   1DD7 5E                 5914 	ld	e,(hl)
   1DD8 DD 73 FB           5915 	ld	-5 (ix),e
                           5916 ;demo.c:940: for (x = 0; x < 6; x++) {
   1DDB DD 36 FE 00        5917 	ld	-2 (ix),#0x00
   1DDF DD 36 FF 00        5918 	ld	-1 (ix),#0x00
   1DE3                    5919 00120$:
   1DE3 DD 7E FE           5920 	ld	a,-2 (ix)
   1DE6 D6 06              5921 	sub	a,#0x06
   1DE8 DD 7E FF           5922 	ld	a,-1 (ix)
   1DEB DE 00              5923 	sbc	a,#0x00
   1DED F2r17s1E           5924 	jp	P,00123$
                           5925 ;demo.c:941: tripal[x] = tripal[x+3];
   1DF0 3ErA8              5926 	ld	a,#<_tripal
   1DF2 DD 86 FE           5927 	add	a,-2 (ix)
   1DF5 4F                 5928 	ld	c,a
   1DF6 3Es8F              5929 	ld	a,#>_tripal
   1DF8 DD 8E FF           5930 	adc	a,-1 (ix)
   1DFB 47                 5931 	ld	b,a
   1DFC DD 5E FE           5932 	ld	e,-2 (ix)
   1DFF 1C                 5933 	inc	e
   1E00 1C                 5934 	inc	e
   1E01 1C                 5935 	inc	e
   1E02 3ErA8              5936 	ld	a,#<_tripal
   1E04 83                 5937 	add	a,e
   1E05 5F                 5938 	ld	e,a
   1E06 3Es8F              5939 	ld	a,#>_tripal
   1E08 CE 00              5940 	adc	a,#0x00
   1E0A 57                 5941 	ld	d,a
   1E0B 1A                 5942 	ld	a,(de)
   1E0C 02                 5943 	ld	(bc),a
                           5944 ;demo.c:940: for (x = 0; x < 6; x++) {
   1E0D DD 34 FE           5945 	inc	-2 (ix)
   1E10 20 03              5946 	jr	NZ,00152$
   1E12 DD 34 FF           5947 	inc	-1 (ix)
   1E15                    5948 00152$:
   1E15 18 CC              5949 	jr	00120$
   1E17                    5950 00123$:
                           5951 ;demo.c:944: tripal[6] = r;
   1E17 01rAEs8F           5952 	ld	bc,#_tripal + 6
   1E1A DD 7E FD           5953 	ld	a,-3 (ix)
   1E1D 02                 5954 	ld	(bc),a
                           5955 ;demo.c:945: tripal[7] = g;
   1E1E 01rAFs8F           5956 	ld	bc,#_tripal + 7
   1E21 DD 7E FC           5957 	ld	a,-4 (ix)
   1E24 02                 5958 	ld	(bc),a
                           5959 ;demo.c:946: tripal[8] = b;
   1E25 01rB0s8F           5960 	ld	bc,#_tripal + 8
   1E28 DD 7E FB           5961 	ld	a,-5 (ix)
   1E2B 02                 5962 	ld	(bc),a
                           5963 ;demo.c:947: tripaltick = 0;
   1E2C 21rB1s8F           5964 	ld	hl,#_tripaltick + 0
   1E2F 36 00              5965 	ld	(hl), #0x00
   1E31                    5966 00124$:
   1E31 DD F9              5967 	ld	sp,ix
   1E33 DD E1              5968 	pop	ix
   1E35 C9                 5969 	ret
   1E36                    5970 _tritiles_end::
                           5971 ;demo.c:956: void do_quit() {
                           5972 ;	---------------------------------
                           5973 ; Function do_quit
                           5974 ; ---------------------------------
   1E36                    5975 _do_quit_start::
   1E36                    5976 _do_quit:
                           5977 ;demo.c:957: waitVB();
   1E36 76                 5978 		halt 
                           5979 ;demo.c:958: uninstall_isr();
   1E37 CDr00s00           5980 	call	_uninstall_isr
                           5981 ;demo.c:959: PLY_Stop();
   1E3A CDr00s00           5982 	call	_PLY_Stop
                           5983 ;demo.c:960: PLY_SendRegisters();
   1E3D CDr00s00           5984 	call	_PLY_SendRegisters
                           5985 ;demo.c:962: screen(0);
   1E40 3E 00              5986 	ld	a,#0x00
   1E42 F5                 5987 	push	af
   1E43 33                 5988 	inc	sp
   1E44 CDr00s00           5989 	call	_screen
   1E47 33                 5990 	inc	sp
                           5991 ;demo.c:964: puts("demo quit\r\n\r\n");
   1E48 21r59s1E           5992 	ld	hl,#__str_10
   1E4B E5                 5993 	push	hl
   1E4C CDr00s00           5994 	call	_puts
   1E4F F1                 5995 	pop	af
                           5996 ;demo.c:966: exit(0);	
   1E50 3E 00              5997 	ld	a,#0x00
   1E52 F5                 5998 	push	af
   1E53 33                 5999 	inc	sp
   1E54 CDr00s00           6000 	call	_exit
   1E57 33                 6001 	inc	sp
   1E58 C9                 6002 	ret
   1E59                    6003 _do_quit_end::
   1E59                    6004 __str_10:
   1E59 64 65 6D 6F 20 71  6005 	.ascii "demo quit"
        75 69 74
   1E62 0D                 6006 	.db 0x0D
   1E63 0A                 6007 	.db 0x0A
   1E64 0D                 6008 	.db 0x0D
   1E65 0A                 6009 	.db 0x0A
   1E66 00                 6010 	.db 0x00
                           6011 ;demo.c:969: void main() {
                           6012 ;	---------------------------------
                           6013 ; Function main
                           6014 ; ---------------------------------
   1E67                    6015 _main_start::
   1E67                    6016 _main:
   1E67 DD E5              6017 	push	ix
   1E69 DD 21 00 00        6018 	ld	ix,#0
   1E6D DD 39              6019 	add	ix,sp
   1E6F 21 F7 FF           6020 	ld	hl,#-9
   1E72 39                 6021 	add	hl,sp
   1E73 F9                 6022 	ld	sp,hl
                           6023 ;demo.c:970: unsigned char quit=0;
   1E74 DD 36 FF 00        6024 	ld	-1 (ix),#0x00
                           6025 ;demo.c:971: int modes = 128; // interlace bit on
   1E78 DD 36 FD 80        6026 	ld	-3 (ix),#0x80
   1E7C DD 36 FE 00        6027 	ld	-2 (ix),#0x00
                           6028 ;demo.c:977: spindown();
   1E80 CDr00s00           6029 	call	_spindown
                           6030 ;demo.c:979: puts("demo init\r\n\r\n");
   1E83 21r69s21           6031 	ld	hl,#__str_11
   1E86 E5                 6032 	push	hl
   1E87 CDr00s00           6033 	call	_puts
   1E8A F1                 6034 	pop	af
                           6035 ;demo.c:981: for (y = 0; y < 2; y++) {
   1E8B DD 36 F9 00        6036 	ld	-7 (ix),#0x00
   1E8F DD 36 FA 00        6037 	ld	-6 (ix),#0x00
   1E93                    6038 00127$:
   1E93 DD 7E F9           6039 	ld	a,-7 (ix)
   1E96 D6 02              6040 	sub	a,#0x02
   1E98 DD 7E FA           6041 	ld	a,-6 (ix)
   1E9B DE 00              6042 	sbc	a,#0x00
   1E9D F2r24s1F           6043 	jp	P,00130$
                           6044 ;demo.c:982: for (x = 0; x < 16; x++) {
   1EA0 DD 56 F9           6045 	ld	d,-7 (ix)
   1EA3 DD 4E FA           6046 	ld	c,-6 (ix)
   1EA6 CB 22              6047 	sla	d
   1EA8 CB 11              6048 	rl	c
   1EAA CB 22              6049 	sla	d
   1EAC CB 11              6050 	rl	c
   1EAE CB 22              6051 	sla	d
   1EB0 CB 11              6052 	rl	c
   1EB2 CB 22              6053 	sla	d
   1EB4 CB 11              6054 	rl	c
   1EB6 7A                 6055 	ld	a,d
   1EB7 C6 81              6056 	add	a,#0x81
   1EB9 DD 77 F7           6057 	ld	-9 (ix),a
   1EBC 79                 6058 	ld	a,c
   1EBD CE 03              6059 	adc	a,#0x03
   1EBF DD 77 F8           6060 	ld	-8 (ix),a
   1EC2 DD 36 FB 00        6061 	ld	-5 (ix),#0x00
   1EC6 DD 36 FC 00        6062 	ld	-4 (ix),#0x00
   1ECA                    6063 00123$:
   1ECA DD 7E FB           6064 	ld	a,-5 (ix)
   1ECD D6 10              6065 	sub	a,#0x10
   1ECF DD 7E FC           6066 	ld	a,-4 (ix)
   1ED2 DE 00              6067 	sbc	a,#0x00
   1ED4 F2r19s1F           6068 	jp	P,00129$
                           6069 ;demo.c:983: tri_lookup_x[(y*16)+x] = x * 16;
   1ED7 DD 7E F9           6070 	ld	a,-7 (ix)
   1EDA 07                 6071 	rlca
   1EDB 07                 6072 	rlca
   1EDC 07                 6073 	rlca
   1EDD 07                 6074 	rlca
   1EDE E6 F0              6075 	and	a,#0xF0
   1EE0 47                 6076 	ld	b,a
   1EE1 DD 5E FB           6077 	ld	e,-5 (ix)
   1EE4 78                 6078 	ld	a,b
   1EE5 83                 6079 	add	a,e
   1EE6 47                 6080 	ld	b, a
   1EE7 C6r00              6081 	add	a,#<_tri_lookup_x
   1EE9 4F                 6082 	ld	c,a
   1EEA 3Es01              6083 	ld	a,#>_tri_lookup_x
   1EEC CE 00              6084 	adc	a,#0x00
   1EEE 57                 6085 	ld	d,a
   1EEF 7B                 6086 	ld	a,e
   1EF0 07                 6087 	rlca
   1EF1 07                 6088 	rlca
   1EF2 07                 6089 	rlca
   1EF3 07                 6090 	rlca
   1EF4 E6 F0              6091 	and	a,#0xF0
   1EF6 5F                 6092 	ld	e,a
   1EF7 69                 6093 	ld	l,c
   1EF8 62                 6094 	ld	h,d
   1EF9 73                 6095 	ld	(hl),e
                           6096 ;demo.c:984: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   1EFA CB 20              6097 	sla	b
   1EFC 3Er20              6098 	ld	a,#<_tri_lookup_y
   1EFE 80                 6099 	add	a,b
   1EFF 6F                 6100 	ld	l,a
   1F00 3Es01              6101 	ld	a,#>_tri_lookup_y
   1F02 CE 00              6102 	adc	a,#0x00
   1F04 67                 6103 	ld	h,a
   1F05 DD 7E F7           6104 	ld	a,-9 (ix)
   1F08 77                 6105 	ld	(hl),a
   1F09 23                 6106 	inc	hl
   1F0A DD 7E F8           6107 	ld	a,-8 (ix)
   1F0D 77                 6108 	ld	(hl),a
                           6109 ;demo.c:982: for (x = 0; x < 16; x++) {
   1F0E DD 34 FB           6110 	inc	-5 (ix)
   1F11 20 03              6111 	jr	NZ,00154$
   1F13 DD 34 FC           6112 	inc	-4 (ix)
   1F16                    6113 00154$:
   1F16 C3rCAs1E           6114 	jp	00123$
   1F19                    6115 00129$:
                           6116 ;demo.c:981: for (y = 0; y < 2; y++) {
   1F19 DD 34 F9           6117 	inc	-7 (ix)
   1F1C 20 03              6118 	jr	NZ,00155$
   1F1E DD 34 FA           6119 	inc	-6 (ix)
   1F21                    6120 00155$:
   1F21 C3r93s1E           6121 	jp	00127$
   1F24                    6122 00130$:
                           6123 ;demo.c:999: puts("music init...");
   1F24 21r77s21           6124 	ld	hl,#__str_12
   1F27 E5                 6125 	push	hl
   1F28 CDr00s00           6126 	call	_puts
   1F2B F1                 6127 	pop	af
                           6128 ;demo.c:1001: PLY_SongPtr = (char *)0x0103;
   1F2C 21r00s00           6129 	ld	hl,#_PLY_SongPtr + 0
   1F2F 36 03              6130 	ld	(hl), #0x03
   1F31 21r01s00           6131 	ld	hl,#_PLY_SongPtr + 1
   1F34 36 01              6132 	ld	(hl), #0x01
                           6133 ;demo.c:1002: PLY_Init();
   1F36 CDr00s00           6134 	call	_PLY_Init
                           6135 ;demo.c:1003: puts("done.\r\n");
   1F39 21r85s21           6136 	ld	hl,#__str_13
   1F3C E5                 6137 	push	hl
   1F3D CDr00s00           6138 	call	_puts
   1F40 F1                 6139 	pop	af
                           6140 ;demo.c:1005: puts("detecting vdp type...");
   1F41 21r8Ds21           6141 	ld	hl,#__str_14
   1F44 E5                 6142 	push	hl
   1F45 CDr00s00           6143 	call	_puts
   1F48 F1                 6144 	pop	af
                           6145 ;demo.c:1006: if(isvdp2())
   1F49 CDr00s00           6146 	call	_isvdp2
   1F4C AF                 6147 	xor	a,a
   1F4D B5                 6148 	or	a,l
   1F4E 28 12              6149 	jr	Z,00102$
                           6150 ;demo.c:1008: puts(" vdp2 found!\r\n\r\n");
   1F50 21rA3s21           6151 	ld	hl,#__str_15
   1F53 E5                 6152 	push	hl
   1F54 CDr00s00           6153 	call	_puts
   1F57 F1                 6154 	pop	af
                           6155 ;demo.c:1009: modes+=2; // pal
   1F58 DD 36 FD 82        6156 	ld	-3 (ix),#0x82
   1F5C DD 36 FE 00        6157 	ld	-2 (ix),#0x00
   1F60 18 0B              6158 	jr	00103$
   1F62                    6159 00102$:
                           6160 ;demo.c:1012: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   1F62 21rB4s21           6161 	ld	hl,#__str_16
   1F65 E5                 6162 	push	hl
   1F66 CDr00s00           6163 	call	_puts
   1F69 F1                 6164 	pop	af
                           6165 ;demo.c:1013: do_quit();
   1F6A CDr36s1E           6166 	call	_do_quit
   1F6D                    6167 00103$:
                           6168 ;demo.c:1016: pal_load("TWISTER PL5",32,1);
   1F6D 21 01 00           6169 	ld	hl,#0x0001
   1F70 E5                 6170 	push	hl
   1F71 3E 20              6171 	ld	a,#0x20
   1F73 F5                 6172 	push	af
   1F74 33                 6173 	inc	sp
   1F75 21rFBs21           6174 	ld	hl,#__str_17
   1F78 E5                 6175 	push	hl
   1F79 CDrE3s06           6176 	call	_pal_load
   1F7C F1                 6177 	pop	af
   1F7D F1                 6178 	pop	af
   1F7E 33                 6179 	inc	sp
                           6180 ;demo.c:1017: memcpy(twister_palette, cur_palette, 32);
   1F7F 21 20 00           6181 	ld	hl,#0x0020
   1F82 E5                 6182 	push	hl
   1F83 21r80s8E           6183 	ld	hl,#_cur_palette
   1F86 E5                 6184 	push	hl
   1F87 21rC0s8E           6185 	ld	hl,#_twister_palette
   1F8A E5                 6186 	push	hl
   1F8B CDr00s00           6187 	call	_memcpy
   1F8E F1                 6188 	pop	af
   1F8F F1                 6189 	pop	af
   1F90 F1                 6190 	pop	af
                           6191 ;demo.c:1018: pal_load("TF1     PL5",32,1);
   1F91 21 01 00           6192 	ld	hl,#0x0001
   1F94 E5                 6193 	push	hl
   1F95 3E 20              6194 	ld	a,#0x20
   1F97 F5                 6195 	push	af
   1F98 33                 6196 	inc	sp
   1F99 21r07s22           6197 	ld	hl,#__str_18
   1F9C E5                 6198 	push	hl
   1F9D CDrE3s06           6199 	call	_pal_load
   1FA0 F1                 6200 	pop	af
   1FA1 F1                 6201 	pop	af
   1FA2 33                 6202 	inc	sp
                           6203 ;demo.c:1019: memcpy(tf_palette, cur_palette, 32);
   1FA3 21 20 00           6204 	ld	hl,#0x0020
   1FA6 E5                 6205 	push	hl
   1FA7 21r80s8E           6206 	ld	hl,#_cur_palette
   1FAA E5                 6207 	push	hl
   1FAB 21rE0s8E           6208 	ld	hl,#_tf_palette
   1FAE E5                 6209 	push	hl
   1FAF CDr00s00           6210 	call	_memcpy
   1FB2 F1                 6211 	pop	af
   1FB3 F1                 6212 	pop	af
   1FB4 F1                 6213 	pop	af
                           6214 ;demo.c:1020: pal_load("BOXES   PL5",32,1);
   1FB5 21 01 00           6215 	ld	hl,#0x0001
   1FB8 E5                 6216 	push	hl
   1FB9 3E 20              6217 	ld	a,#0x20
   1FBB F5                 6218 	push	af
   1FBC 33                 6219 	inc	sp
   1FBD 21r13s22           6220 	ld	hl,#__str_19
   1FC0 E5                 6221 	push	hl
   1FC1 CDrE3s06           6222 	call	_pal_load
   1FC4 F1                 6223 	pop	af
   1FC5 F1                 6224 	pop	af
   1FC6 33                 6225 	inc	sp
                           6226 ;demo.c:1021: memcpy(boxes_palette, cur_palette, 32);
   1FC7 21 20 00           6227 	ld	hl,#0x0020
   1FCA E5                 6228 	push	hl
   1FCB 21r80s8E           6229 	ld	hl,#_cur_palette
   1FCE E5                 6230 	push	hl
   1FCF 21r00s8F           6231 	ld	hl,#_boxes_palette
   1FD2 E5                 6232 	push	hl
   1FD3 CDr00s00           6233 	call	_memcpy
   1FD6 F1                 6234 	pop	af
   1FD7 F1                 6235 	pop	af
   1FD8 F1                 6236 	pop	af
                           6237 ;demo.c:1024: pal_load("BULBS   PL5",32,1);
   1FD9 21 01 00           6238 	ld	hl,#0x0001
   1FDC E5                 6239 	push	hl
   1FDD 3E 20              6240 	ld	a,#0x20
   1FDF F5                 6241 	push	af
   1FE0 33                 6242 	inc	sp
   1FE1 21r1Fs22           6243 	ld	hl,#__str_20
   1FE4 E5                 6244 	push	hl
   1FE5 CDrE3s06           6245 	call	_pal_load
   1FE8 F1                 6246 	pop	af
   1FE9 F1                 6247 	pop	af
   1FEA 33                 6248 	inc	sp
                           6249 ;demo.c:1026: pck_load("BULBS   PCK",2431,0x8000,VRAM_0,1);
   1FEB 21 01 00           6250 	ld	hl,#0x0001
   1FEE E5                 6251 	push	hl
   1FEF 2E 01              6252 	ld	l, #0x01
   1FF1 E5                 6253 	push	hl
   1FF2 21 00 80           6254 	ld	hl,#0x8000
   1FF5 E5                 6255 	push	hl
   1FF6 21 7F 09           6256 	ld	hl,#0x097F
   1FF9 E5                 6257 	push	hl
   1FFA 21r2Bs22           6258 	ld	hl,#__str_21
   1FFD E5                 6259 	push	hl
   1FFE CDrD9s08           6260 	call	_pck_load
   2001 FD 21 0A 00        6261 	ld	iy,#0x000A
   2005 FD 39              6262 	add	iy,sp
   2007 FD F9              6263 	ld	sp,iy
                           6264 ;demo.c:1028: pck_load("TWISTER PCK",4032,0x0000,VRAM_1,1);
   2009 21 01 00           6265 	ld	hl,#0x0001
   200C E5                 6266 	push	hl
   200D 2E 00              6267 	ld	l, #0x00
   200F E5                 6268 	push	hl
   2010 2E 00              6269 	ld	l, #0x00
   2012 E5                 6270 	push	hl
   2013 21 C0 0F           6271 	ld	hl,#0x0FC0
   2016 E5                 6272 	push	hl
   2017 21r37s22           6273 	ld	hl,#__str_22
   201A E5                 6274 	push	hl
   201B CDrD9s08           6275 	call	_pck_load
   201E FD 21 0A 00        6276 	ld	iy,#0x000A
   2022 FD 39              6277 	add	iy,sp
   2024 FD F9              6278 	ld	sp,iy
                           6279 ;demo.c:1029: pck_load("BOXES   PCK",4500,0x8000,VRAM_1,1);
   2026 21 01 00           6280 	ld	hl,#0x0001
   2029 E5                 6281 	push	hl
   202A 2E 00              6282 	ld	l, #0x00
   202C E5                 6283 	push	hl
   202D 26 80              6284 	ld	h, #0x80
   202F E5                 6285 	push	hl
   2030 21 94 11           6286 	ld	hl,#0x1194
   2033 E5                 6287 	push	hl
   2034 21r43s22           6288 	ld	hl,#__str_23
   2037 E5                 6289 	push	hl
   2038 CDrD9s08           6290 	call	_pck_load
   203B FD 21 0A 00        6291 	ld	iy,#0x000A
   203F FD 39              6292 	add	iy,sp
   2041 FD F9              6293 	ld	sp,iy
                           6294 ;demo.c:1033: vdp_set_screen5();
   2043 CDr00s00           6295 	call	_vdp_set_screen5
                           6296 ;demo.c:1035: vdp_register(VDP_MODE3,modes); // interlace on, screen mode pal or ntsc
   2046 DD 7E FD           6297 	ld	a,-3 (ix)
   2049 F5                 6298 	push	af
   204A 33                 6299 	inc	sp
   204B 3E 09              6300 	ld	a,#0x09
   204D F5                 6301 	push	af
   204E 33                 6302 	inc	sp
   204F CDr00s00           6303 	call	_vdp_register
   2052 F1                 6304 	pop	af
                           6305 ;demo.c:1038: puts("demo start\r\n");
   2053 21r4Fs22           6306 	ld	hl,#__str_24
   2056 E5                 6307 	push	hl
   2057 CDr00s00           6308 	call	_puts
   205A F1                 6309 	pop	af
                           6310 ;demo.c:1040: scratch_clear();
   205B CDrD0s06           6311 	call	_scratch_clear
                           6312 ;demo.c:1041: vdp_load_palette(scratch);
   205E 21r00s8E           6313 	ld	hl,#_scratch
   2061 E5                 6314 	push	hl
   2062 CDr00s00           6315 	call	_vdp_load_palette
   2065 F1                 6316 	pop	af
                           6317 ;demo.c:1043: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   2066 21 00 00           6318 	ld	hl,#0x0000
   2069 E5                 6319 	push	hl
   206A 2E 01              6320 	ld	l, #0x01
   206C E5                 6321 	push	hl
   206D 2E 00              6322 	ld	l, #0x00
   206F E5                 6323 	push	hl
   2070 21 6A 08           6324 	ld	hl,#0x086A
   2073 E5                 6325 	push	hl
   2074 21r5Cs22           6326 	ld	hl,#__str_25
   2077 E5                 6327 	push	hl
   2078 CDrD9s08           6328 	call	_pck_load
   207B FD 21 0A 00        6329 	ld	iy,#0x000A
   207F FD 39              6330 	add	iy,sp
   2081 FD F9              6331 	ld	sp,iy
                           6332 ;demo.c:1044: pal_load("DSSLOGO PL5",32,1);
   2083 21 01 00           6333 	ld	hl,#0x0001
   2086 E5                 6334 	push	hl
   2087 3E 20              6335 	ld	a,#0x20
   2089 F5                 6336 	push	af
   208A 33                 6337 	inc	sp
   208B 21r68s22           6338 	ld	hl,#__str_26
   208E E5                 6339 	push	hl
   208F CDrE3s06           6340 	call	_pal_load
   2092 F1                 6341 	pop	af
   2093 F1                 6342 	pop	af
   2094 33                 6343 	inc	sp
                           6344 ;demo.c:1045: vdp_load_palette(cur_palette);
   2095 21r80s8E           6345 	ld	hl,#_cur_palette
   2098 E5                 6346 	push	hl
   2099 CDr00s00           6347 	call	_vdp_load_palette
   209C F1                 6348 	pop	af
                           6349 ;demo.c:1047: vdp_register(VDP_VOFFSET,0);
   209D 21 17 00           6350 	ld	hl,#0x0017
   20A0 E5                 6351 	push	hl
   20A1 CDr00s00           6352 	call	_vdp_register
   20A4 F1                 6353 	pop	af
                           6354 ;demo.c:1059: install_isr(my_isr);
   20A5 21r2Cs05           6355 	ld	hl,#_my_isr
   20A8 E5                 6356 	push	hl
   20A9 CDr00s00           6357 	call	_install_isr
   20AC F1                 6358 	pop	af
                           6359 ;demo.c:1061: while (!quit) {
   20AD                    6360 00120$:
   20AD AF                 6361 	xor	a,a
   20AE DD B6 FF           6362 	or	a,-1 (ix)
   20B1 C2r61s21           6363 	jp	NZ,00122$
                           6364 ;demo.c:1064: if (vbicount < 64) { 
   20B4 3Ar20s8F           6365 	ld	a,(#_vbicount+0)
   20B7 D6 40              6366 	sub	a,#0x40
   20B9 FD 21r20s8F        6367 	ld	iy,#_vbicount
   20BD FD 7E 01           6368 	ld	a,1 (iy)
   20C0 DE 00              6369 	sbc	a,#0x00
   20C2 F2rC9s20           6370 	jp	P,00105$
                           6371 ;demo.c:1065: waitVB();
   20C5 76                 6372 		halt 
                           6373 ;demo.c:1066: fadein(); 
   20C6 CDr67s09           6374 	call	_fadein
   20C9                    6375 00105$:
                           6376 ;demo.c:1068: if (vbicount >= 192 && vbicount < 800) {
   20C9 3Ar20s8F           6377 	ld	a,(#_vbicount+0)
   20CC D6 C0              6378 	sub	a,#0xC0
   20CE 3Ar21s8F           6379 	ld	a,(#_vbicount+1)
   20D1 DE 00              6380 	sbc	a,#0x00
   20D3 FArEBs20           6381 	jp	M,00107$
   20D6 3Ar20s8F           6382 	ld	a,(#_vbicount+0)
   20D9 D6 20              6383 	sub	a,#0x20
   20DB FD 21r20s8F        6384 	ld	iy,#_vbicount
   20DF FD 7E 01           6385 	ld	a,1 (iy)
   20E2 DE 03              6386 	sbc	a,#0x03
   20E4 F2rEBs20           6387 	jp	P,00107$
                           6388 ;demo.c:1069: waitVB();
   20E7 76                 6389 		halt 
                           6390 ;demo.c:1070: bulbs();
   20E8 CDrD9s12           6391 	call	_bulbs
   20EB                    6392 00107$:
                           6393 ;demo.c:1073: if (vbicount >= 800 && vbicount < 1500) {
   20EB 3Ar20s8F           6394 	ld	a,(#_vbicount+0)
   20EE D6 20              6395 	sub	a,#0x20
   20F0 3Ar21s8F           6396 	ld	a,(#_vbicount+1)
   20F3 DE 03              6397 	sbc	a,#0x03
   20F5 FAr0Ds21           6398 	jp	M,00110$
   20F8 3Ar20s8F           6399 	ld	a,(#_vbicount+0)
   20FB D6 DC              6400 	sub	a,#0xDC
   20FD FD 21r20s8F        6401 	ld	iy,#_vbicount
   2101 FD 7E 01           6402 	ld	a,1 (iy)
   2104 DE 05              6403 	sbc	a,#0x05
   2106 F2r0Ds21           6404 	jp	P,00110$
                           6405 ;demo.c:1074: waitVB();
   2109 76                 6406 		halt 
                           6407 ;demo.c:1075: twister();
   210A CDr63s11           6408 	call	_twister
   210D                    6409 00110$:
                           6410 ;demo.c:1078: if (vbicount >= 1500 && vbicount < 2200) {
   210D 3Ar20s8F           6411 	ld	a,(#_vbicount+0)
   2110 D6 DC              6412 	sub	a,#0xDC
   2112 3Ar21s8F           6413 	ld	a,(#_vbicount+1)
   2115 DE 05              6414 	sbc	a,#0x05
   2117 FAr2As21           6415 	jp	M,00113$
   211A 3Ar20s8F           6416 	ld	a,(#_vbicount+0)
   211D D6 98              6417 	sub	a,#0x98
   211F 3Ar21s8F           6418 	ld	a,(#_vbicount+1)
   2122 DE 08              6419 	sbc	a,#0x08
   2124 F2r2As21           6420 	jp	P,00113$
                           6421 ;demo.c:1079: boxes();
   2127 CDr41s17           6422 	call	_boxes
   212A                    6423 00113$:
                           6424 ;demo.c:1083: if (vbicount >= 2200 && vbicount < 5800) {
   212A 3Ar20s8F           6425 	ld	a,(#_vbicount+0)
   212D D6 98              6426 	sub	a,#0x98
   212F 3Ar21s8F           6427 	ld	a,(#_vbicount+1)
   2132 DE 08              6428 	sbc	a,#0x08
   2134 FAr4Cs21           6429 	jp	M,00116$
   2137 3Ar20s8F           6430 	ld	a,(#_vbicount+0)
   213A D6 A8              6431 	sub	a,#0xA8
   213C FD 21r20s8F        6432 	ld	iy,#_vbicount
   2140 FD 7E 01           6433 	ld	a,1 (iy)
   2143 DE 16              6434 	sbc	a,#0x16
   2145 F2r4Cs21           6435 	jp	P,00116$
                           6436 ;demo.c:1084: waitVB();
   2148 76                 6437 		halt 
                           6438 ;demo.c:1085: tritiles();
   2149 CDr07s1C           6439 	call	_tritiles
   214C                    6440 00116$:
                           6441 ;demo.c:1089: if(space())
   214C 21 08 01           6442 	ld	hl,#0x0108
   214F E5                 6443 	push	hl
   2150 CDr00s00           6444 	call	_ispressed
   2153 F1                 6445 	pop	af
   2154 4D                 6446 	ld	c,l
   2155 AF                 6447 	xor	a,a
   2156 B5                 6448 	or	a,l
   2157 CArADs20           6449 	jp	Z,00120$
                           6450 ;demo.c:1090: quit=1;
   215A DD 36 FF 01        6451 	ld	-1 (ix),#0x01
   215E C3rADs20           6452 	jp	00120$
   2161                    6453 00122$:
                           6454 ;demo.c:1093: do_quit();
   2161 CDr36s1E           6455 	call	_do_quit
   2164 DD F9              6456 	ld	sp,ix
   2166 DD E1              6457 	pop	ix
   2168 C9                 6458 	ret
   2169                    6459 _main_end::
   2169                    6460 __str_11:
   2169 64 65 6D 6F 20 69  6461 	.ascii "demo init"
        6E 69 74
   2172 0D                 6462 	.db 0x0D
   2173 0A                 6463 	.db 0x0A
   2174 0D                 6464 	.db 0x0D
   2175 0A                 6465 	.db 0x0A
   2176 00                 6466 	.db 0x00
   2177                    6467 __str_12:
   2177 6D 75 73 69 63 20  6468 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   2184 00                 6469 	.db 0x00
   2185                    6470 __str_13:
   2185 64 6F 6E 65 2E     6471 	.ascii "done."
   218A 0D                 6472 	.db 0x0D
   218B 0A                 6473 	.db 0x0A
   218C 00                 6474 	.db 0x00
   218D                    6475 __str_14:
   218D 64 65 74 65 63 74  6476 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   21A2 00                 6477 	.db 0x00
   21A3                    6478 __str_15:
   21A3 20 76 64 70 32 20  6479 	.ascii " vdp2 found!"
        66 6F 75 6E 64 21
   21AF 0D                 6480 	.db 0x0D
   21B0 0A                 6481 	.db 0x0A
   21B1 0D                 6482 	.db 0x0D
   21B2 0A                 6483 	.db 0x0A
   21B3 00                 6484 	.db 0x00
   21B4                    6485 __str_16:
   21B4 20 76 64 70 31 20  6486 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   21C0 0D                 6487 	.db 0x0D
   21C1 0A                 6488 	.db 0x0A
   21C2 53 6F 72 72 79 2C  6489 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   21F0 20 56 52 41 4D 2E  6490 	.ascii " VRAM."
   21F6 0D                 6491 	.db 0x0D
   21F7 0A                 6492 	.db 0x0A
   21F8 0D                 6493 	.db 0x0D
   21F9 0A                 6494 	.db 0x0A
   21FA 00                 6495 	.db 0x00
   21FB                    6496 __str_17:
   21FB 54 57 49 53 54 45  6497 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   2206 00                 6498 	.db 0x00
   2207                    6499 __str_18:
   2207 54 46 31 20 20 20  6500 	.ascii "TF1     PL5"
        20 20 50 4C 35
   2212 00                 6501 	.db 0x00
   2213                    6502 __str_19:
   2213 42 4F 58 45 53 20  6503 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   221E 00                 6504 	.db 0x00
   221F                    6505 __str_20:
   221F 42 55 4C 42 53 20  6506 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   222A 00                 6507 	.db 0x00
   222B                    6508 __str_21:
   222B 42 55 4C 42 53 20  6509 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   2236 00                 6510 	.db 0x00
   2237                    6511 __str_22:
   2237 54 57 49 53 54 45  6512 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   2242 00                 6513 	.db 0x00
   2243                    6514 __str_23:
   2243 42 4F 58 45 53 20  6515 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   224E 00                 6516 	.db 0x00
   224F                    6517 __str_24:
   224F 64 65 6D 6F 20 73  6518 	.ascii "demo start"
        74 61 72 74
   2259 0D                 6519 	.db 0x0D
   225A 0A                 6520 	.db 0x0A
   225B 00                 6521 	.db 0x00
   225C                    6522 __str_25:
   225C 44 53 53 4C 4F 47  6523 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   2267 00                 6524 	.db 0x00
   2268                    6525 __str_26:
   2268 44 53 53 4C 4F 47  6526 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   2273 00                 6527 	.db 0x00
                           6528 	.area _CODE
                           6529 	.area _CABS
