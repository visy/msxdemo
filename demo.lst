                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Mon Mar  5 00:37:31 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _logoeffu
                             15 	.globl _abs
                             16 	.globl _tritiles
                             17 	.globl _drawtilescreen_full
                             18 	.globl _drawtilescreen
                             19 	.globl _drawtritile
                             20 	.globl _thewave
                             21 	.globl _boxes
                             22 	.globl _drawbox
                             23 	.globl _animplay
                             24 	.globl _bulbs
                             25 	.globl _twister
                             26 	.globl _font
                             27 	.globl _drawsine
                             28 	.globl _drawstr
                             29 	.globl _do_letter_tall
                             30 	.globl _do_letter
                             31 	.globl _raster_effu
                             32 	.globl _do_blocks
                             33 	.globl _do_ymmm
                             34 	.globl _fadein
                             35 	.globl _pck_load
                             36 	.globl _raw_load
                             37 	.globl _pause
                             38 	.globl _pal_load
                             39 	.globl _scratch_clear
                             40 	.globl _ge5_load
                             41 	.globl _color_isr
                             42 	.globl _my_isr
                             43 	.globl _isNthBitSet
                             44 	.globl _scenetimings
                             45 	.globl _scenepointers
                             46 	.globl _timeindex
                             47 	.globl _sceneindex
                             48 	.globl _onceclear
                             49 	.globl _powa
                             50 	.globl _powatick
                             51 	.globl _triframes
                             52 	.globl _tripaltick2
                             53 	.globl _tripaltick
                             54 	.globl _tripal
                             55 	.globl _tiletick
                             56 	.globl _tiley
                             57 	.globl _tilex
                             58 	.globl _tilei
                             59 	.globl _tri_inited
                             60 	.globl _waveytab
                             61 	.globl _ffa
                             62 	.globl _buf
                             63 	.globl _initwave
                             64 	.globl _prevbox_of
                             65 	.globl _boxes_of
                             66 	.globl _pbt
                             67 	.globl _pbx
                             68 	.globl _bonc
                             69 	.globl _bo
                             70 	.globl _bt
                             71 	.globl _by
                             72 	.globl _bx
                             73 	.globl _boxi
                             74 	.globl _boxes_y
                             75 	.globl _boxes_x
                             76 	.globl _prevy
                             77 	.globl _prevx
                             78 	.globl _buffer
                             79 	.globl _boxes_init
                             80 	.globl _anim_init
                             81 	.globl _sy
                             82 	.globl _enderdir
                             83 	.globl _ender
                             84 	.globl _ff2
                             85 	.globl _ff1
                             86 	.globl _bulbflipper
                             87 	.globl _twinited
                             88 	.globl _ff
                             89 	.globl _ly
                             90 	.globl _lx
                             91 	.globl _linenum
                             92 	.globl _flof
                             93 	.globl _btab
                             94 	.globl _bty
                             95 	.globl _btx
                             96 	.globl _bsy
                             97 	.globl _bsx
                             98 	.globl _block_init
                             99 	.globl _cc
                            100 	.globl _yofff
                            101 	.globl _cmd
                            102 	.globl _tick
                            103 	.globl _vbicount
                            104 	.globl _boxes_palette
                            105 	.globl _tf_palette
                            106 	.globl _twister_palette
                            107 	.globl _block_palette
                            108 	.globl _cur_palette
                            109 	.globl _scratch
                            110 	.globl _packbuffer
                            111 	.globl _tri_lookup_y
                            112 	.globl _eighttimes
                            113 	.globl _twelvetimes
                            114 	.globl _tri_lookup_x
                            115 	.globl _sintab
                            116 	.globl _font_w
                            117 	.globl _font_y
                            118 	.globl _font_x
                            119 	.globl _tri_side2
                            120 	.globl _tri_side1
                            121 	.globl _tri_dia
                            122 	.globl _tri_up
                            123 	.globl _tri_center
                            124 	.globl _sintabx
                            125 ;--------------------------------------------------------
                            126 ; special function registers
                            127 ;--------------------------------------------------------
                            128 ;--------------------------------------------------------
                            129 ;  ram data
                            130 ;--------------------------------------------------------
                            131 	.area _DATA
   0000                     132 _sintab::
   0000                     133 	.ds 256
   0100                     134 _tri_lookup_x::
   0100                     135 	.ds 32
   0120                     136 _twelvetimes::
   0120                     137 	.ds 52
   0154                     138 _eighttimes::
   0154                     139 	.ds 52
   0188                     140 _tri_lookup_y::
   0188                     141 	.ds 64
   01C8                     142 _packbuffer::
   01C8                     143 	.ds 16000
   4048                     144 _scratch::
   4048                     145 	.ds 128
   40C8                     146 _cur_palette::
   40C8                     147 	.ds 32
   40E8                     148 _block_palette::
   40E8                     149 	.ds 32
   4108                     150 _twister_palette::
   4108                     151 	.ds 32
   4128                     152 _tf_palette::
   4128                     153 	.ds 32
   4148                     154 _boxes_palette::
   4148                     155 	.ds 32
   4168                     156 _vbicount::
   4168                     157 	.ds 2
   416A                     158 _tick::
   416A                     159 	.ds 2
   416C                     160 _cmd::
   416C                     161 	.ds 15
   417B                     162 _isNthBitSet_mask_1_1:
   417B                     163 	.ds 8
   4183                     164 _yofff::
   4183                     165 	.ds 1
   4184                     166 _cc::
   4184                     167 	.ds 1
   4185                     168 _flipper:
   4185                     169 	.ds 2
   4187                     170 _ymmmf:
   4187                     171 	.ds 2
   4189                     172 _block_init::
   4189                     173 	.ds 1
   418A                     174 _bsx::
   418A                     175 	.ds 2
   418C                     176 _bsy::
   418C                     177 	.ds 2
   418E                     178 _btx::
   418E                     179 	.ds 2
   4190                     180 _bty::
   4190                     181 	.ds 2
   4192                     182 _btab::
   4192                     183 	.ds 32
   41B2                     184 _flof::
   41B2                     185 	.ds 2
   41B4                     186 _linenum::
   41B4                     187 	.ds 2
   41B6                     188 _lx::
   41B6                     189 	.ds 1
   41B7                     190 _ly::
   41B7                     191 	.ds 1
   41B8                     192 _ff::
   41B8                     193 	.ds 2
   41BA                     194 _twinited::
   41BA                     195 	.ds 2
   41BC                     196 _bulbflipper::
   41BC                     197 	.ds 2
   41BE                     198 _ff1::
   41BE                     199 	.ds 2
   41C0                     200 _ff2::
   41C0                     201 	.ds 2
   41C2                     202 _ender::
   41C2                     203 	.ds 2
   41C4                     204 _enderdir::
   41C4                     205 	.ds 2
   41C6                     206 _sy::
   41C6                     207 	.ds 2
   41C8                     208 _xo:
   41C8                     209 	.ds 2
   41CA                     210 _yo:
   41CA                     211 	.ds 2
   41CC                     212 _po:
   41CC                     213 	.ds 2
   41CE                     214 _frames:
   41CE                     215 	.ds 2
   41D0                     216 _anim_init::
   41D0                     217 	.ds 2
   41D2                     218 _boxes_init::
   41D2                     219 	.ds 1
   41D3                     220 _buffer::
   41D3                     221 	.ds 2
   41D5                     222 _prevx::
   41D5                     223 	.ds 2
   41D7                     224 _prevy::
   41D7                     225 	.ds 2
   41D9                     226 _boxes_x::
   41D9                     227 	.ds 5
   41DE                     228 _boxes_y::
   41DE                     229 	.ds 10
   41E8                     230 _boxi::
   41E8                     231 	.ds 1
   41E9                     232 _bx::
   41E9                     233 	.ds 2
   41EB                     234 _by::
   41EB                     235 	.ds 2
   41ED                     236 _bt::
   41ED                     237 	.ds 2
   41EF                     238 _bo::
   41EF                     239 	.ds 2
   41F1                     240 _bonc::
   41F1                     241 	.ds 2
   41F3                     242 _pbx::
   41F3                     243 	.ds 2
   41F5                     244 _pbt::
   41F5                     245 	.ds 2
   41F7                     246 _boxes_of::
   41F7                     247 	.ds 10
   4201                     248 _prevbox_of::
   4201                     249 	.ds 1
   4202                     250 _initwave::
   4202                     251 	.ds 1
   4203                     252 _buf::
   4203                     253 	.ds 2
   4205                     254 _ffa::
   4205                     255 	.ds 2
   4207                     256 _waveytab::
   4207                     257 	.ds 6
   420D                     258 _tri_inited::
   420D                     259 	.ds 1
   420E                     260 _tilei::
   420E                     261 	.ds 2
   4210                     262 _tilex::
   4210                     263 	.ds 2
   4212                     264 _tiley::
   4212                     265 	.ds 2
   4214                     266 _tiletick::
   4214                     267 	.ds 1
   4215                     268 _tripal::
   4215                     269 	.ds 9
   421E                     270 _tripaltick::
   421E                     271 	.ds 1
   421F                     272 _tripaltick2::
   421F                     273 	.ds 1
   4220                     274 _triframes::
   4220                     275 	.ds 2
   4222                     276 _powatick::
   4222                     277 	.ds 2
   4224                     278 _powa::
   4224                     279 	.ds 2
   4226                     280 _onceclear::
   4226                     281 	.ds 1
   4227                     282 _sceneindex::
   4227                     283 	.ds 2
   4229                     284 _timeindex::
   4229                     285 	.ds 2
   422B                     286 _scenepointers::
   422B                     287 	.ds 14
   4239                     288 _scenetimings::
   4239                     289 	.ds 28
                            290 ;--------------------------------------------------------
                            291 ; overlayable items in  ram 
                            292 ;--------------------------------------------------------
                            293 	.area _OVERLAY
                            294 ;--------------------------------------------------------
                            295 ; external initialized ram data
                            296 ;--------------------------------------------------------
                            297 ;--------------------------------------------------------
                            298 ; global & static initialisations
                            299 ;--------------------------------------------------------
                            300 	.area _HOME
                            301 	.area _GSINIT
                            302 	.area _GSFINAL
                            303 	.area _GSINIT
                            304 ;demo.c:134: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r7Bs41            305 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            306 	call	__initrleblock
   0006 08                  307 	.db	8
   0007 01 02 04 08 10 20   308 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  309 	.db	0
                            310 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            311 	ld	hl,#_sintab
   0013 CDr00s00            312 	call	__initrleblock
   0016 3B                  313 	.db	59
   0017 00 03 06 09 0C 0F   314 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   315 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   316 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   317 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   318 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   319 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   320 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            321 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               322 	.db	#-5,#0x7E
   0054 01                  323 	.db	1
   0055 7F                  324 	.db	0x7F
   0056 FB 7E               325 	.db	#-5,#0x7E
   0058 75                  326 	.db	117
   0059 7D 7D 7C 7B 7B 7A   327 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   328 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   329 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   330 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   331 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   332 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   333 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   334 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   335 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   336 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   337 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   338 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   339 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   340 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      341 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               342 	.db	#-5,#0x82
   00D0 01                  343 	.db	1
   00D1 81                  344 	.db	0x81
   00D2 FB 82               345 	.db	#-5,#0x82
   00D4 3A                  346 	.db	58
   00D5 83 83 84 85 85 86   347 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   348 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   349 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   350 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   351 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   352 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   353 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               354 	.db	0xFA, 0xFD
   010F 00                  355 	.db	0
                            356 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            357 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            358 	call	__initrleblock
   0116 E0 00               359 	.db	#-32,#0x00
   0118 00                  360 	.db	0
                            361 ;demo.c:114: int twelvetimes[26] = { 0 };
   0119 21r20s01            362 	ld	hl,#_twelvetimes
   011C CDr00s00            363 	call	__initrleblock
   011F CC 00               364 	.db	#-52,#0x00
   0121 00                  365 	.db	0
                            366 ;demo.c:115: int eighttimes[26] = { 0 };
   0122 21r54s01            367 	ld	hl,#_eighttimes
   0125 CDr00s00            368 	call	__initrleblock
   0128 CC 00               369 	.db	#-52,#0x00
   012A 00                  370 	.db	0
                            371 ;demo.c:117: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            372 	ld	hl,#_tri_lookup_y
   012E CDr00s00            373 	call	__initrleblock
   0131 C0 00               374 	.db	#-64,#0x00
   0133 00                  375 	.db	0
                            376 ;demo.c:119: uint8_t packbuffer[16000] = {0};
   0134 21rC8s01            377 	ld	hl,#_packbuffer
   0137 CDr00s00            378 	call	__initrleblock
   013A 81 00               379 	.db	#-127,#0x00
   013C 81 00               380 	.db	#-127,#0x00
   013E 81 00               381 	.db	#-127,#0x00
   0140 81 00               382 	.db	#-127,#0x00
   0142 81 00               383 	.db	#-127,#0x00
   0144 81 00               384 	.db	#-127,#0x00
   0146 81 00               385 	.db	#-127,#0x00
   0148 81 00               386 	.db	#-127,#0x00
   014A 81 00               387 	.db	#-127,#0x00
   014C 81 00               388 	.db	#-127,#0x00
   014E 81 00               389 	.db	#-127,#0x00
   0150 81 00               390 	.db	#-127,#0x00
   0152 81 00               391 	.db	#-127,#0x00
   0154 81 00               392 	.db	#-127,#0x00
   0156 81 00               393 	.db	#-127,#0x00
   0158 81 00               394 	.db	#-127,#0x00
   015A 81 00               395 	.db	#-127,#0x00
   015C 81 00               396 	.db	#-127,#0x00
   015E 81 00               397 	.db	#-127,#0x00
   0160 81 00               398 	.db	#-127,#0x00
   0162 81 00               399 	.db	#-127,#0x00
   0164 81 00               400 	.db	#-127,#0x00
   0166 81 00               401 	.db	#-127,#0x00
   0168 81 00               402 	.db	#-127,#0x00
   016A 81 00               403 	.db	#-127,#0x00
   016C 81 00               404 	.db	#-127,#0x00
   016E 81 00               405 	.db	#-127,#0x00
   0170 81 00               406 	.db	#-127,#0x00
   0172 81 00               407 	.db	#-127,#0x00
   0174 81 00               408 	.db	#-127,#0x00
   0176 81 00               409 	.db	#-127,#0x00
   0178 81 00               410 	.db	#-127,#0x00
   017A 81 00               411 	.db	#-127,#0x00
   017C 81 00               412 	.db	#-127,#0x00
   017E 81 00               413 	.db	#-127,#0x00
   0180 81 00               414 	.db	#-127,#0x00
   0182 81 00               415 	.db	#-127,#0x00
   0184 81 00               416 	.db	#-127,#0x00
   0186 81 00               417 	.db	#-127,#0x00
   0188 81 00               418 	.db	#-127,#0x00
   018A 81 00               419 	.db	#-127,#0x00
   018C 81 00               420 	.db	#-127,#0x00
   018E 81 00               421 	.db	#-127,#0x00
   0190 81 00               422 	.db	#-127,#0x00
   0192 81 00               423 	.db	#-127,#0x00
   0194 81 00               424 	.db	#-127,#0x00
   0196 81 00               425 	.db	#-127,#0x00
   0198 81 00               426 	.db	#-127,#0x00
   019A 81 00               427 	.db	#-127,#0x00
   019C 81 00               428 	.db	#-127,#0x00
   019E 81 00               429 	.db	#-127,#0x00
   01A0 81 00               430 	.db	#-127,#0x00
   01A2 81 00               431 	.db	#-127,#0x00
   01A4 81 00               432 	.db	#-127,#0x00
   01A6 81 00               433 	.db	#-127,#0x00
   01A8 81 00               434 	.db	#-127,#0x00
   01AA 81 00               435 	.db	#-127,#0x00
   01AC 81 00               436 	.db	#-127,#0x00
   01AE 81 00               437 	.db	#-127,#0x00
   01B0 81 00               438 	.db	#-127,#0x00
   01B2 81 00               439 	.db	#-127,#0x00
   01B4 81 00               440 	.db	#-127,#0x00
   01B6 81 00               441 	.db	#-127,#0x00
   01B8 81 00               442 	.db	#-127,#0x00
   01BA 81 00               443 	.db	#-127,#0x00
   01BC 81 00               444 	.db	#-127,#0x00
   01BE 81 00               445 	.db	#-127,#0x00
   01C0 81 00               446 	.db	#-127,#0x00
   01C2 81 00               447 	.db	#-127,#0x00
   01C4 81 00               448 	.db	#-127,#0x00
   01C6 81 00               449 	.db	#-127,#0x00
   01C8 81 00               450 	.db	#-127,#0x00
   01CA 81 00               451 	.db	#-127,#0x00
   01CC 81 00               452 	.db	#-127,#0x00
   01CE 81 00               453 	.db	#-127,#0x00
   01D0 81 00               454 	.db	#-127,#0x00
   01D2 81 00               455 	.db	#-127,#0x00
   01D4 81 00               456 	.db	#-127,#0x00
   01D6 81 00               457 	.db	#-127,#0x00
   01D8 81 00               458 	.db	#-127,#0x00
   01DA 81 00               459 	.db	#-127,#0x00
   01DC 81 00               460 	.db	#-127,#0x00
   01DE 81 00               461 	.db	#-127,#0x00
   01E0 81 00               462 	.db	#-127,#0x00
   01E2 81 00               463 	.db	#-127,#0x00
   01E4 81 00               464 	.db	#-127,#0x00
   01E6 81 00               465 	.db	#-127,#0x00
   01E8 81 00               466 	.db	#-127,#0x00
   01EA 81 00               467 	.db	#-127,#0x00
   01EC 81 00               468 	.db	#-127,#0x00
   01EE 81 00               469 	.db	#-127,#0x00
   01F0 81 00               470 	.db	#-127,#0x00
   01F2 81 00               471 	.db	#-127,#0x00
   01F4 81 00               472 	.db	#-127,#0x00
   01F6 81 00               473 	.db	#-127,#0x00
   01F8 81 00               474 	.db	#-127,#0x00
   01FA 81 00               475 	.db	#-127,#0x00
   01FC 81 00               476 	.db	#-127,#0x00
   01FE 81 00               477 	.db	#-127,#0x00
   0200 81 00               478 	.db	#-127,#0x00
   0202 81 00               479 	.db	#-127,#0x00
   0204 81 00               480 	.db	#-127,#0x00
   0206 81 00               481 	.db	#-127,#0x00
   0208 81 00               482 	.db	#-127,#0x00
   020A 81 00               483 	.db	#-127,#0x00
   020C 81 00               484 	.db	#-127,#0x00
   020E 81 00               485 	.db	#-127,#0x00
   0210 81 00               486 	.db	#-127,#0x00
   0212 81 00               487 	.db	#-127,#0x00
   0214 81 00               488 	.db	#-127,#0x00
   0216 81 00               489 	.db	#-127,#0x00
   0218 81 00               490 	.db	#-127,#0x00
   021A 81 00               491 	.db	#-127,#0x00
   021C 81 00               492 	.db	#-127,#0x00
   021E 81 00               493 	.db	#-127,#0x00
   0220 81 00               494 	.db	#-127,#0x00
   0222 81 00               495 	.db	#-127,#0x00
   0224 81 00               496 	.db	#-127,#0x00
   0226 81 00               497 	.db	#-127,#0x00
   0228 81 00               498 	.db	#-127,#0x00
   022A 81 00               499 	.db	#-127,#0x00
   022C 81 00               500 	.db	#-127,#0x00
   022E 81 00               501 	.db	#-127,#0x00
   0230 81 00               502 	.db	#-127,#0x00
   0232 81 00               503 	.db	#-127,#0x00
   0234 83 00               504 	.db	#-125,#0x00
   0236 00                  505 	.db	0
                            506 ;demo.c:128: volatile int vbicount=0;
   0237 FD 21r68s41         507 	ld	iy,#_vbicount
   023B FD 36 00 00         508 	ld	0 (iy),#0x00
   023F FD 21r68s41         509 	ld	iy,#_vbicount
   0243 FD 36 01 00         510 	ld	1 (iy),#0x00
                            511 ;demo.c:129: volatile int tick=0;
   0247 FD 21r6As41         512 	ld	iy,#_tick
   024B FD 36 00 00         513 	ld	0 (iy),#0x00
   024F FD 21r6As41         514 	ld	iy,#_tick
   0253 FD 36 01 00         515 	ld	1 (iy),#0x00
                            516 ;demo.c:329: uint8_t yofff = 0;
   0257 FD 21r83s41         517 	ld	iy,#_yofff
   025B FD 36 00 00         518 	ld	0 (iy),#0x00
                            519 ;demo.c:330: uint8_t cc = 0;
   025F FD 21r84s41         520 	ld	iy,#_cc
   0263 FD 36 00 00         521 	ld	0 (iy),#0x00
                            522 ;demo.c:331: static int flipper = 0;
   0267 FD 21r85s41         523 	ld	iy,#_flipper
   026B FD 36 00 00         524 	ld	0 (iy),#0x00
   026F FD 21r85s41         525 	ld	iy,#_flipper
   0273 FD 36 01 00         526 	ld	1 (iy),#0x00
                            527 ;demo.c:332: static int ymmmf = 0;
   0277 FD 21r87s41         528 	ld	iy,#_ymmmf
   027B FD 36 00 00         529 	ld	0 (iy),#0x00
   027F FD 21r87s41         530 	ld	iy,#_ymmmf
   0283 FD 36 01 00         531 	ld	1 (iy),#0x00
                            532 ;demo.c:363: char block_init = 0;
   0287 FD 21r89s41         533 	ld	iy,#_block_init
   028B FD 36 00 00         534 	ld	0 (iy),#0x00
                            535 ;demo.c:365: int bsx = 0;
   028F FD 21r8As41         536 	ld	iy,#_bsx
   0293 FD 36 00 00         537 	ld	0 (iy),#0x00
   0297 FD 21r8As41         538 	ld	iy,#_bsx
   029B FD 36 01 00         539 	ld	1 (iy),#0x00
                            540 ;demo.c:366: int bsy = 0;
   029F FD 21r8Cs41         541 	ld	iy,#_bsy
   02A3 FD 36 00 00         542 	ld	0 (iy),#0x00
   02A7 FD 21r8Cs41         543 	ld	iy,#_bsy
   02AB FD 36 01 00         544 	ld	1 (iy),#0x00
                            545 ;demo.c:367: int btx = 0;
   02AF FD 21r8Es41         546 	ld	iy,#_btx
   02B3 FD 36 00 00         547 	ld	0 (iy),#0x00
   02B7 FD 21r8Es41         548 	ld	iy,#_btx
   02BB FD 36 01 00         549 	ld	1 (iy),#0x00
                            550 ;demo.c:368: int bty = 0;
   02BF FD 21r90s41         551 	ld	iy,#_bty
   02C3 FD 36 00 00         552 	ld	0 (iy),#0x00
   02C7 FD 21r90s41         553 	ld	iy,#_bty
   02CB FD 36 01 00         554 	ld	1 (iy),#0x00
                            555 ;demo.c:370: int btab[16] = {0};
   02CF 21r92s41            556 	ld	hl,#_btab
   02D2 CDr00s00            557 	call	__initrleblock
   02D5 E0 00               558 	.db	#-32,#0x00
   02D7 00                  559 	.db	0
                            560 ;demo.c:372: int flof = 0;
   02D8 FD 21rB2s41         561 	ld	iy,#_flof
   02DC FD 36 00 00         562 	ld	0 (iy),#0x00
   02E0 FD 21rB2s41         563 	ld	iy,#_flof
   02E4 FD 36 01 00         564 	ld	1 (iy),#0x00
                            565 ;demo.c:421: int linenum = 0;
   02E8 FD 21rB4s41         566 	ld	iy,#_linenum
   02EC FD 36 00 00         567 	ld	0 (iy),#0x00
   02F0 FD 21rB4s41         568 	ld	iy,#_linenum
   02F4 FD 36 01 00         569 	ld	1 (iy),#0x00
                            570 ;demo.c:479: uint8_t lx = 0;
   02F8 FD 21rB6s41         571 	ld	iy,#_lx
   02FC FD 36 00 00         572 	ld	0 (iy),#0x00
                            573 ;demo.c:480: uint8_t ly = 0;
   0300 FD 21rB7s41         574 	ld	iy,#_ly
   0304 FD 36 00 00         575 	ld	0 (iy),#0x00
                            576 ;demo.c:543: int ff = 0;
   0308 FD 21rB8s41         577 	ld	iy,#_ff
   030C FD 36 00 00         578 	ld	0 (iy),#0x00
   0310 FD 21rB8s41         579 	ld	iy,#_ff
   0314 FD 36 01 00         580 	ld	1 (iy),#0x00
                            581 ;demo.c:544: int twinited = 0;
   0318 FD 21rBAs41         582 	ld	iy,#_twinited
   031C FD 36 00 00         583 	ld	0 (iy),#0x00
   0320 FD 21rBAs41         584 	ld	iy,#_twinited
   0324 FD 36 01 00         585 	ld	1 (iy),#0x00
                            586 ;demo.c:593: int bulbflipper = 1;
   0328 FD 21rBCs41         587 	ld	iy,#_bulbflipper
   032C FD 36 00 01         588 	ld	0 (iy),#0x01
   0330 FD 21rBCs41         589 	ld	iy,#_bulbflipper
   0334 FD 36 01 00         590 	ld	1 (iy),#0x00
                            591 ;demo.c:595: int ff1,ff2 = 0;
   0338 FD 21rC0s41         592 	ld	iy,#_ff2
   033C FD 36 00 00         593 	ld	0 (iy),#0x00
   0340 FD 21rC0s41         594 	ld	iy,#_ff2
   0344 FD 36 01 00         595 	ld	1 (iy),#0x00
                            596 ;demo.c:596: int ender = 212;
   0348 FD 21rC2s41         597 	ld	iy,#_ender
   034C FD 36 00 D4         598 	ld	0 (iy),#0xD4
   0350 FD 21rC2s41         599 	ld	iy,#_ender
   0354 FD 36 01 00         600 	ld	1 (iy),#0x00
                            601 ;demo.c:597: int enderdir = -1;
   0358 FD 21rC4s41         602 	ld	iy,#_enderdir
   035C FD 36 00 FF         603 	ld	0 (iy),#0xFF
   0360 FD 21rC4s41         604 	ld	iy,#_enderdir
   0364 FD 36 01 FF         605 	ld	1 (iy),#0xFF
                            606 ;demo.c:598: int sy = 16;
   0368 FD 21rC6s41         607 	ld	iy,#_sy
   036C FD 36 00 10         608 	ld	0 (iy),#0x10
   0370 FD 21rC6s41         609 	ld	iy,#_sy
   0374 FD 36 01 00         610 	ld	1 (iy),#0x00
                            611 ;demo.c:654: static int xo = 0;
   0378 FD 21rC8s41         612 	ld	iy,#_xo
   037C FD 36 00 00         613 	ld	0 (iy),#0x00
   0380 FD 21rC8s41         614 	ld	iy,#_xo
   0384 FD 36 01 00         615 	ld	1 (iy),#0x00
                            616 ;demo.c:655: static int yo = 0;
   0388 FD 21rCAs41         617 	ld	iy,#_yo
   038C FD 36 00 00         618 	ld	0 (iy),#0x00
   0390 FD 21rCAs41         619 	ld	iy,#_yo
   0394 FD 36 01 00         620 	ld	1 (iy),#0x00
                            621 ;demo.c:656: static int po = 0;
   0398 FD 21rCCs41         622 	ld	iy,#_po
   039C FD 36 00 00         623 	ld	0 (iy),#0x00
   03A0 FD 21rCCs41         624 	ld	iy,#_po
   03A4 FD 36 01 00         625 	ld	1 (iy),#0x00
                            626 ;demo.c:657: static int frames = 0;
   03A8 FD 21rCEs41         627 	ld	iy,#_frames
   03AC FD 36 00 00         628 	ld	0 (iy),#0x00
   03B0 FD 21rCEs41         629 	ld	iy,#_frames
   03B4 FD 36 01 00         630 	ld	1 (iy),#0x00
                            631 ;demo.c:659: int anim_init = 0;
   03B8 FD 21rD0s41         632 	ld	iy,#_anim_init
   03BC FD 36 00 00         633 	ld	0 (iy),#0x00
   03C0 FD 21rD0s41         634 	ld	iy,#_anim_init
   03C4 FD 36 01 00         635 	ld	1 (iy),#0x00
                            636 ;demo.c:755: uint8_t boxes_init = 0;
   03C8 FD 21rD2s41         637 	ld	iy,#_boxes_init
   03CC FD 36 00 00         638 	ld	0 (iy),#0x00
                            639 ;demo.c:756: int buffer = 1;
   03D0 FD 21rD3s41         640 	ld	iy,#_buffer
   03D4 FD 36 00 01         641 	ld	0 (iy),#0x01
   03D8 FD 21rD3s41         642 	ld	iy,#_buffer
   03DC FD 36 01 00         643 	ld	1 (iy),#0x00
                            644 ;demo.c:757: int prevx = -1;
   03E0 FD 21rD5s41         645 	ld	iy,#_prevx
   03E4 FD 36 00 FF         646 	ld	0 (iy),#0xFF
   03E8 FD 21rD5s41         647 	ld	iy,#_prevx
   03EC FD 36 01 FF         648 	ld	1 (iy),#0xFF
                            649 ;demo.c:759: uint8_t boxes_x[5] = {0,36,0,36,0};
   03F0 21rD9s41            650 	ld	hl,#_boxes_x
   03F3 CDr00s00            651 	call	__initrleblock
   03F6 05                  652 	.db	5
   03F7 00 24 00 24 00      653 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   03FC 00                  654 	.db	0
                            655 ;demo.c:760: int boxes_y[5] = {768,768,768+36,768+36,0};
   03FD 21rDEs41            656 	ld	hl,#_boxes_y
   0400 CDr00s00            657 	call	__initrleblock
   0403 0A                  658 	.db	10
   0404 00 03 00 03 24 03   659 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   040C 00 00               660 	.db	0x00, 0x00
   040E 00                  661 	.db	0
                            662 ;demo.c:761: uint8_t boxi = 0;
   040F FD 21rE8s41         663 	ld	iy,#_boxi
   0413 FD 36 00 00         664 	ld	0 (iy),#0x00
                            665 ;demo.c:762: int bx = 220;
   0417 FD 21rE9s41         666 	ld	iy,#_bx
   041B FD 36 00 DC         667 	ld	0 (iy),#0xDC
   041F FD 21rE9s41         668 	ld	iy,#_bx
   0423 FD 36 01 00         669 	ld	1 (iy),#0x00
                            670 ;demo.c:763: int by = 84;
   0427 FD 21rEBs41         671 	ld	iy,#_by
   042B FD 36 00 54         672 	ld	0 (iy),#0x54
   042F FD 21rEBs41         673 	ld	iy,#_by
   0433 FD 36 01 00         674 	ld	1 (iy),#0x00
                            675 ;demo.c:781: int bt = 0;
   0437 FD 21rEDs41         676 	ld	iy,#_bt
   043B FD 36 00 00         677 	ld	0 (iy),#0x00
   043F FD 21rEDs41         678 	ld	iy,#_bt
   0443 FD 36 01 00         679 	ld	1 (iy),#0x00
                            680 ;demo.c:782: int bo = 0;
   0447 FD 21rEFs41         681 	ld	iy,#_bo
   044B FD 36 00 00         682 	ld	0 (iy),#0x00
   044F FD 21rEFs41         683 	ld	iy,#_bo
   0453 FD 36 01 00         684 	ld	1 (iy),#0x00
                            685 ;demo.c:784: int bonc = 0;
   0457 FD 21rF1s41         686 	ld	iy,#_bonc
   045B FD 36 00 00         687 	ld	0 (iy),#0x00
   045F FD 21rF1s41         688 	ld	iy,#_bonc
   0463 FD 36 01 00         689 	ld	1 (iy),#0x00
                            690 ;demo.c:785: int pbx = 0;
   0467 FD 21rF3s41         691 	ld	iy,#_pbx
   046B FD 36 00 00         692 	ld	0 (iy),#0x00
   046F FD 21rF3s41         693 	ld	iy,#_pbx
   0473 FD 36 01 00         694 	ld	1 (iy),#0x00
                            695 ;demo.c:786: int pbt = 0;
   0477 FD 21rF5s41         696 	ld	iy,#_pbt
   047B FD 36 00 00         697 	ld	0 (iy),#0x00
   047F FD 21rF5s41         698 	ld	iy,#_pbt
   0483 FD 36 01 00         699 	ld	1 (iy),#0x00
                            700 ;demo.c:788: int boxes_of[5] = {0,0,6,0,0};
   0487 21rF7s41            701 	ld	hl,#_boxes_of
   048A CDr00s00            702 	call	__initrleblock
   048D 05                  703 	.db	5
   048E 00 00 00 00 06      704 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0493 FB 00               705 	.db	#-5,#0x00
   0495 00                  706 	.db	0
                            707 ;demo.c:789: uint8_t prevbox_of = 0;
   0496 FD 21r01s42         708 	ld	iy,#_prevbox_of
   049A FD 36 00 00         709 	ld	0 (iy),#0x00
                            710 ;demo.c:904: uint8_t initwave = 0;
   049E FD 21r02s42         711 	ld	iy,#_initwave
   04A2 FD 36 00 00         712 	ld	0 (iy),#0x00
                            713 ;demo.c:905: int buf = -1;
   04A6 FD 21r03s42         714 	ld	iy,#_buf
   04AA FD 36 00 FF         715 	ld	0 (iy),#0xFF
   04AE FD 21r03s42         716 	ld	iy,#_buf
   04B2 FD 36 01 FF         717 	ld	1 (iy),#0xFF
                            718 ;demo.c:906: int ffa = 0;
   04B6 FD 21r05s42         719 	ld	iy,#_ffa
   04BA FD 36 00 00         720 	ld	0 (iy),#0x00
   04BE FD 21r05s42         721 	ld	iy,#_ffa
   04C2 FD 36 01 00         722 	ld	1 (iy),#0x00
                            723 ;demo.c:907: uint8_t waveytab[6] = {25,25,25,25,25,28};
   04C6 21r07s42            724 	ld	hl,#_waveytab
   04C9 CDr00s00            725 	call	__initrleblock
   04CC FB 19               726 	.db	#-5,#0x19
   04CE 01                  727 	.db	1
   04CF 1C                  728 	.db	0x1C
   04D0 00                  729 	.db	0
                            730 ;demo.c:1008: uint8_t tri_inited = 0;
   04D1 FD 21r0Ds42         731 	ld	iy,#_tri_inited
   04D5 FD 36 00 00         732 	ld	0 (iy),#0x00
                            733 ;demo.c:1023: int tilei = 0;
   04D9 FD 21r0Es42         734 	ld	iy,#_tilei
   04DD FD 36 00 00         735 	ld	0 (iy),#0x00
   04E1 FD 21r0Es42         736 	ld	iy,#_tilei
   04E5 FD 36 01 00         737 	ld	1 (iy),#0x00
                            738 ;demo.c:1024: int tilex = 0;
   04E9 FD 21r10s42         739 	ld	iy,#_tilex
   04ED FD 36 00 00         740 	ld	0 (iy),#0x00
   04F1 FD 21r10s42         741 	ld	iy,#_tilex
   04F5 FD 36 01 00         742 	ld	1 (iy),#0x00
                            743 ;demo.c:1025: int tiley = 0;
   04F9 FD 21r12s42         744 	ld	iy,#_tiley
   04FD FD 36 00 00         745 	ld	0 (iy),#0x00
   0501 FD 21r12s42         746 	ld	iy,#_tiley
   0505 FD 36 01 00         747 	ld	1 (iy),#0x00
                            748 ;demo.c:1026: uint8_t tiletick = 0;
   0509 FD 21r14s42         749 	ld	iy,#_tiletick
   050D FD 36 00 00         750 	ld	0 (iy),#0x00
                            751 ;demo.c:1056: char tripal[9] = {
   0511 21r15s42            752 	ld	hl,#_tripal
   0514 CDr00s00            753 	call	__initrleblock
   0517 09                  754 	.db	9
   0518 02 02 01 01 02 03   755 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0520 02                  756 	.db	0x02
   0521 00                  757 	.db	0
                            758 ;demo.c:1062: uint8_t tripaltick = 0;
   0522 FD 21r1Es42         759 	ld	iy,#_tripaltick
   0526 FD 36 00 00         760 	ld	0 (iy),#0x00
                            761 ;demo.c:1063: uint8_t tripaltick2 = 0;
   052A FD 21r1Fs42         762 	ld	iy,#_tripaltick2
   052E FD 36 00 00         763 	ld	0 (iy),#0x00
                            764 ;demo.c:1065: int triframes = 0;
   0532 FD 21r20s42         765 	ld	iy,#_triframes
   0536 FD 36 00 00         766 	ld	0 (iy),#0x00
   053A FD 21r20s42         767 	ld	iy,#_triframes
   053E FD 36 01 00         768 	ld	1 (iy),#0x00
                            769 ;demo.c:1172: int powatick = 0;
   0542 FD 21r22s42         770 	ld	iy,#_powatick
   0546 FD 36 00 00         771 	ld	0 (iy),#0x00
   054A FD 21r22s42         772 	ld	iy,#_powatick
   054E FD 36 01 00         773 	ld	1 (iy),#0x00
                            774 ;demo.c:1173: int powa = 0;
   0552 FD 21r24s42         775 	ld	iy,#_powa
   0556 FD 36 00 00         776 	ld	0 (iy),#0x00
   055A FD 21r24s42         777 	ld	iy,#_powa
   055E FD 36 01 00         778 	ld	1 (iy),#0x00
                            779 ;demo.c:1174: uint8_t onceclear = 255;
   0562 FD 21r26s42         780 	ld	iy,#_onceclear
   0566 FD 36 00 FF         781 	ld	0 (iy),#0xFF
                            782 ;demo.c:1236: int sceneindex = 0;
   056A FD 21r27s42         783 	ld	iy,#_sceneindex
   056E FD 36 00 00         784 	ld	0 (iy),#0x00
   0572 FD 21r27s42         785 	ld	iy,#_sceneindex
   0576 FD 36 01 00         786 	ld	1 (iy),#0x00
                            787 ;demo.c:1237: int timeindex = 0;
   057A FD 21r29s42         788 	ld	iy,#_timeindex
   057E FD 36 00 00         789 	ld	0 (iy),#0x00
   0582 FD 21r29s42         790 	ld	iy,#_timeindex
   0586 FD 36 01 00         791 	ld	1 (iy),#0x00
                            792 ;demo.c:1239: void (*scenepointers[7])() = {
   058A 21r2Bs42            793 	ld	hl,#_scenepointers
   058D 36r65               794 	ld	(hl),#<_logoeffu
   058F 23                  795 	inc	hl
   0590 36s28               796 	ld	(hl),#>_logoeffu
   0592 01r2Ds42            797 	ld	bc,#_scenepointers + 2
   0595 69                  798 	ld	l,c
   0596 60                  799 	ld	h,b
   0597 36r8F               800 	ld	(hl),#<_bulbs
   0599 23                  801 	inc	hl
   059A 36s13               802 	ld	(hl),#>_bulbs
   059C 21r2Fs42            803 	ld	hl, #_scenepointers + 4
   059F 36r23               804 	ld	(hl),#<_twister
   05A1 23                  805 	inc	hl
   05A2 36s12               806 	ld	(hl),#>_twister
   05A4 01r31s42            807 	ld	bc,#_scenepointers + 6
   05A7 69                  808 	ld	l,c
   05A8 60                  809 	ld	h,b
   05A9 36r3C               810 	ld	(hl),#<_boxes
   05AB 23                  811 	inc	hl
   05AC 36s19               812 	ld	(hl),#>_boxes
   05AE 21r33s42            813 	ld	hl, #_scenepointers + 8
   05B1 36r94               814 	ld	(hl),#<_thewave
   05B3 23                  815 	inc	hl
   05B4 36s1D               816 	ld	(hl),#>_thewave
   05B6 21r35s42            817 	ld	hl, #_scenepointers + 10
   05B9 36r77               818 	ld	(hl),#<_tritiles
   05BB 23                  819 	inc	hl
   05BC 36s24               820 	ld	(hl),#>_tritiles
   05BE 01r37s42            821 	ld	bc,#_scenepointers + 12
   05C1 69                  822 	ld	l,c
   05C2 60                  823 	ld	h,b
   05C3 36rED               824 	ld	(hl),#<_animplay
   05C5 23                  825 	inc	hl
   05C6 36s15               826 	ld	(hl),#>_animplay
                            827 ;demo.c:1249: int scenetimings[14] = {
   05C8 21r39s42            828 	ld	hl,#_scenetimings
   05CB CDr00s00            829 	call	__initrleblock
   05CE 1C                  830 	.db	28
   05CF 00 00 FA 00 FA 00   831 	.db	0x00, 0x00, 0xFA, 0x00, 0xFA, 0x00, 0x4C, 0x04
        4C 04
   05D7 4C 04 98 08 98 08   832 	.db	0x4C, 0x04, 0x98, 0x08, 0x98, 0x08, 0x74, 0x0E
        74 0E
   05DF 74 0E 88 13 88 13   833 	.db	0x74, 0x0E, 0x88, 0x13, 0x88, 0x13, 0x58, 0x1B
        58 1B
   05E7 58 1B 98 3A         834 	.db	0x58, 0x1B, 0x98, 0x3A
   05EB 00                  835 	.db	0
                            836 ;--------------------------------------------------------
                            837 ; Home
                            838 ;--------------------------------------------------------
                            839 	.area _HOME
                            840 	.area _HOME
                            841 ;--------------------------------------------------------
                            842 ; code
                            843 ;--------------------------------------------------------
                            844 	.area _CODE
                            845 ;demo.c:133: int isNthBitSet (unsigned char c, int n) {
                            846 ;	---------------------------------
                            847 ; Function isNthBitSet
                            848 ; ---------------------------------
   0000                     849 _isNthBitSet_start::
   0000                     850 _isNthBitSet:
   0000 DD E5               851 	push	ix
   0002 DD 21 00 00         852 	ld	ix,#0
   0006 DD 39               853 	add	ix,sp
                            854 ;demo.c:135: return ((c & mask[n]) != 0);
   0008 3Er7B               855 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            856 	add	a,5 (ix)
   000D 4F                  857 	ld	c,a
   000E 3Es41               858 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            859 	adc	a,6 (ix)
   0013 47                  860 	ld	b,a
   0014 0A                  861 	ld	a,(bc)
   0015 DD A6 04            862 	and	a,4 (ix)
   0018 20 04               863 	jr	NZ,00103$
   001A 3E 01               864 	ld	a,#0x01
   001C 18 01               865 	jr	00104$
   001E                     866 00103$:
   001E AF                  867 	xor	a,a
   001F                     868 00104$:
   001F B7                  869 	or	a,a
   0020 D6 01               870 	sub	a,#0x01
   0022 3E 00               871 	ld	a,#0x00
   0024 17                  872 	rla
   0025 4F                  873 	ld	c,a
   0026 69                  874 	ld	l,c
   0027 26 00               875 	ld	h,#0x00
   0029 DD E1               876 	pop	ix
   002B C9                  877 	ret
   002C                     878 _isNthBitSet_end::
   002C                     879 _sintabx:
   002C 78 00               880 	.dw #0x0078
   002E 7A 00               881 	.dw #0x007A
   0030 7D 00               882 	.dw #0x007D
   0032 80 00               883 	.dw #0x0080
   0034 83 00               884 	.dw #0x0083
   0036 86 00               885 	.dw #0x0086
   0038 89 00               886 	.dw #0x0089
   003A 8C 00               887 	.dw #0x008C
   003C 8F 00               888 	.dw #0x008F
   003E 92 00               889 	.dw #0x0092
   0040 95 00               890 	.dw #0x0095
   0042 98 00               891 	.dw #0x0098
   0044 9A 00               892 	.dw #0x009A
   0046 9D 00               893 	.dw #0x009D
   0048 A0 00               894 	.dw #0x00A0
   004A A3 00               895 	.dw #0x00A3
   004C A5 00               896 	.dw #0x00A5
   004E A8 00               897 	.dw #0x00A8
   0050 AB 00               898 	.dw #0x00AB
   0052 AD 00               899 	.dw #0x00AD
   0054 B0 00               900 	.dw #0x00B0
   0056 B3 00               901 	.dw #0x00B3
   0058 B5 00               902 	.dw #0x00B5
   005A B8 00               903 	.dw #0x00B8
   005C BA 00               904 	.dw #0x00BA
   005E BD 00               905 	.dw #0x00BD
   0060 BF 00               906 	.dw #0x00BF
   0062 C1 00               907 	.dw #0x00C1
   0064 C4 00               908 	.dw #0x00C4
   0066 C6 00               909 	.dw #0x00C6
   0068 C8 00               910 	.dw #0x00C8
   006A CA 00               911 	.dw #0x00CA
   006C CC 00               912 	.dw #0x00CC
   006E CE 00               913 	.dw #0x00CE
   0070 D0 00               914 	.dw #0x00D0
   0072 D2 00               915 	.dw #0x00D2
   0074 D4 00               916 	.dw #0x00D4
   0076 D6 00               917 	.dw #0x00D6
   0078 D8 00               918 	.dw #0x00D8
   007A DA 00               919 	.dw #0x00DA
   007C DB 00               920 	.dw #0x00DB
   007E DD 00               921 	.dw #0x00DD
   0080 DE 00               922 	.dw #0x00DE
   0082 E0 00               923 	.dw #0x00E0
   0084 E1 00               924 	.dw #0x00E1
   0086 E3 00               925 	.dw #0x00E3
   0088 E4 00               926 	.dw #0x00E4
   008A E5 00               927 	.dw #0x00E5
   008C E6 00               928 	.dw #0x00E6
   008E E7 00               929 	.dw #0x00E7
   0090 E8 00               930 	.dw #0x00E8
   0092 E9 00               931 	.dw #0x00E9
   0094 EA 00               932 	.dw #0x00EA
   0096 EB 00               933 	.dw #0x00EB
   0098 EC 00               934 	.dw #0x00EC
   009A ED 00               935 	.dw #0x00ED
   009C ED 00               936 	.dw #0x00ED
   009E EE 00               937 	.dw #0x00EE
   00A0 EE 00               938 	.dw #0x00EE
   00A2 EF 00               939 	.dw #0x00EF
   00A4 EF 00               940 	.dw #0x00EF
   00A6 EF 00               941 	.dw #0x00EF
   00A8 EF 00               942 	.dw #0x00EF
   00AA EF 00               943 	.dw #0x00EF
   00AC F0 00               944 	.dw #0x00F0
   00AE EF 00               945 	.dw #0x00EF
   00B0 EF 00               946 	.dw #0x00EF
   00B2 EF 00               947 	.dw #0x00EF
   00B4 EF 00               948 	.dw #0x00EF
   00B6 EF 00               949 	.dw #0x00EF
   00B8 EE 00               950 	.dw #0x00EE
   00BA EE 00               951 	.dw #0x00EE
   00BC ED 00               952 	.dw #0x00ED
   00BE ED 00               953 	.dw #0x00ED
   00C0 EC 00               954 	.dw #0x00EC
   00C2 EB 00               955 	.dw #0x00EB
   00C4 EA 00               956 	.dw #0x00EA
   00C6 E9 00               957 	.dw #0x00E9
   00C8 E8 00               958 	.dw #0x00E8
   00CA E7 00               959 	.dw #0x00E7
   00CC E6 00               960 	.dw #0x00E6
   00CE E5 00               961 	.dw #0x00E5
   00D0 E4 00               962 	.dw #0x00E4
   00D2 E3 00               963 	.dw #0x00E3
   00D4 E1 00               964 	.dw #0x00E1
   00D6 E0 00               965 	.dw #0x00E0
   00D8 DE 00               966 	.dw #0x00DE
   00DA DD 00               967 	.dw #0x00DD
   00DC DB 00               968 	.dw #0x00DB
   00DE DA 00               969 	.dw #0x00DA
   00E0 D8 00               970 	.dw #0x00D8
   00E2 D6 00               971 	.dw #0x00D6
   00E4 D4 00               972 	.dw #0x00D4
   00E6 D2 00               973 	.dw #0x00D2
   00E8 D0 00               974 	.dw #0x00D0
   00EA CE 00               975 	.dw #0x00CE
   00EC CC 00               976 	.dw #0x00CC
   00EE CA 00               977 	.dw #0x00CA
   00F0 C8 00               978 	.dw #0x00C8
   00F2 C6 00               979 	.dw #0x00C6
   00F4 C4 00               980 	.dw #0x00C4
   00F6 C1 00               981 	.dw #0x00C1
   00F8 BF 00               982 	.dw #0x00BF
   00FA BD 00               983 	.dw #0x00BD
   00FC BA 00               984 	.dw #0x00BA
   00FE B8 00               985 	.dw #0x00B8
   0100 B5 00               986 	.dw #0x00B5
   0102 B3 00               987 	.dw #0x00B3
   0104 B0 00               988 	.dw #0x00B0
   0106 AD 00               989 	.dw #0x00AD
   0108 AB 00               990 	.dw #0x00AB
   010A A8 00               991 	.dw #0x00A8
   010C A5 00               992 	.dw #0x00A5
   010E A3 00               993 	.dw #0x00A3
   0110 A0 00               994 	.dw #0x00A0
   0112 9D 00               995 	.dw #0x009D
   0114 9A 00               996 	.dw #0x009A
   0116 98 00               997 	.dw #0x0098
   0118 95 00               998 	.dw #0x0095
   011A 92 00               999 	.dw #0x0092
   011C 8F 00              1000 	.dw #0x008F
   011E 8C 00              1001 	.dw #0x008C
   0120 89 00              1002 	.dw #0x0089
   0122 86 00              1003 	.dw #0x0086
   0124 83 00              1004 	.dw #0x0083
   0126 80 00              1005 	.dw #0x0080
   0128 7D 00              1006 	.dw #0x007D
   012A 7A 00              1007 	.dw #0x007A
   012C 78 00              1008 	.dw #0x0078
   012E 75 00              1009 	.dw #0x0075
   0130 72 00              1010 	.dw #0x0072
   0132 6F 00              1011 	.dw #0x006F
   0134 6C 00              1012 	.dw #0x006C
   0136 69 00              1013 	.dw #0x0069
   0138 66 00              1014 	.dw #0x0066
   013A 63 00              1015 	.dw #0x0063
   013C 60 00              1016 	.dw #0x0060
   013E 5D 00              1017 	.dw #0x005D
   0140 5A 00              1018 	.dw #0x005A
   0142 57 00              1019 	.dw #0x0057
   0144 55 00              1020 	.dw #0x0055
   0146 52 00              1021 	.dw #0x0052
   0148 4F 00              1022 	.dw #0x004F
   014A 4C 00              1023 	.dw #0x004C
   014C 4A 00              1024 	.dw #0x004A
   014E 47 00              1025 	.dw #0x0047
   0150 44 00              1026 	.dw #0x0044
   0152 42 00              1027 	.dw #0x0042
   0154 3F 00              1028 	.dw #0x003F
   0156 3C 00              1029 	.dw #0x003C
   0158 3A 00              1030 	.dw #0x003A
   015A 37 00              1031 	.dw #0x0037
   015C 35 00              1032 	.dw #0x0035
   015E 32 00              1033 	.dw #0x0032
   0160 30 00              1034 	.dw #0x0030
   0162 2E 00              1035 	.dw #0x002E
   0164 2B 00              1036 	.dw #0x002B
   0166 29 00              1037 	.dw #0x0029
   0168 27 00              1038 	.dw #0x0027
   016A 25 00              1039 	.dw #0x0025
   016C 23 00              1040 	.dw #0x0023
   016E 21 00              1041 	.dw #0x0021
   0170 1F 00              1042 	.dw #0x001F
   0172 1D 00              1043 	.dw #0x001D
   0174 1B 00              1044 	.dw #0x001B
   0176 19 00              1045 	.dw #0x0019
   0178 17 00              1046 	.dw #0x0017
   017A 15 00              1047 	.dw #0x0015
   017C 14 00              1048 	.dw #0x0014
   017E 12 00              1049 	.dw #0x0012
   0180 11 00              1050 	.dw #0x0011
   0182 0F 00              1051 	.dw #0x000F
   0184 0E 00              1052 	.dw #0x000E
   0186 0C 00              1053 	.dw #0x000C
   0188 0B 00              1054 	.dw #0x000B
   018A 0A 00              1055 	.dw #0x000A
   018C 09 00              1056 	.dw #0x0009
   018E 08 00              1057 	.dw #0x0008
   0190 07 00              1058 	.dw #0x0007
   0192 06 00              1059 	.dw #0x0006
   0194 05 00              1060 	.dw #0x0005
   0196 04 00              1061 	.dw #0x0004
   0198 03 00              1062 	.dw #0x0003
   019A 02 00              1063 	.dw #0x0002
   019C 02 00              1064 	.dw #0x0002
   019E 01 00              1065 	.dw #0x0001
   01A0 01 00              1066 	.dw #0x0001
   01A2 00 00              1067 	.dw #0x0000
   01A4 00 00              1068 	.dw #0x0000
   01A6 00 00              1069 	.dw #0x0000
   01A8 00 00              1070 	.dw #0x0000
   01AA 00 00              1071 	.dw #0x0000
   01AC 00 00              1072 	.dw #0x0000
   01AE 00 00              1073 	.dw #0x0000
   01B0 00 00              1074 	.dw #0x0000
   01B2 00 00              1075 	.dw #0x0000
   01B4 00 00              1076 	.dw #0x0000
   01B6 00 00              1077 	.dw #0x0000
   01B8 01 00              1078 	.dw #0x0001
   01BA 01 00              1079 	.dw #0x0001
   01BC 02 00              1080 	.dw #0x0002
   01BE 02 00              1081 	.dw #0x0002
   01C0 03 00              1082 	.dw #0x0003
   01C2 04 00              1083 	.dw #0x0004
   01C4 05 00              1084 	.dw #0x0005
   01C6 06 00              1085 	.dw #0x0006
   01C8 07 00              1086 	.dw #0x0007
   01CA 08 00              1087 	.dw #0x0008
   01CC 09 00              1088 	.dw #0x0009
   01CE 0A 00              1089 	.dw #0x000A
   01D0 0B 00              1090 	.dw #0x000B
   01D2 0C 00              1091 	.dw #0x000C
   01D4 0E 00              1092 	.dw #0x000E
   01D6 0F 00              1093 	.dw #0x000F
   01D8 11 00              1094 	.dw #0x0011
   01DA 12 00              1095 	.dw #0x0012
   01DC 14 00              1096 	.dw #0x0014
   01DE 15 00              1097 	.dw #0x0015
   01E0 17 00              1098 	.dw #0x0017
   01E2 19 00              1099 	.dw #0x0019
   01E4 1B 00              1100 	.dw #0x001B
   01E6 1D 00              1101 	.dw #0x001D
   01E8 1F 00              1102 	.dw #0x001F
   01EA 21 00              1103 	.dw #0x0021
   01EC 23 00              1104 	.dw #0x0023
   01EE 25 00              1105 	.dw #0x0025
   01F0 27 00              1106 	.dw #0x0027
   01F2 29 00              1107 	.dw #0x0029
   01F4 2B 00              1108 	.dw #0x002B
   01F6 2E 00              1109 	.dw #0x002E
   01F8 30 00              1110 	.dw #0x0030
   01FA 32 00              1111 	.dw #0x0032
   01FC 35 00              1112 	.dw #0x0035
   01FE 37 00              1113 	.dw #0x0037
   0200 3A 00              1114 	.dw #0x003A
   0202 3C 00              1115 	.dw #0x003C
   0204 3F 00              1116 	.dw #0x003F
   0206 42 00              1117 	.dw #0x0042
   0208 44 00              1118 	.dw #0x0044
   020A 47 00              1119 	.dw #0x0047
   020C 4A 00              1120 	.dw #0x004A
   020E 4C 00              1121 	.dw #0x004C
   0210 4F 00              1122 	.dw #0x004F
   0212 52 00              1123 	.dw #0x0052
   0214 55 00              1124 	.dw #0x0055
   0216 57 00              1125 	.dw #0x0057
   0218 5A 00              1126 	.dw #0x005A
   021A 5D 00              1127 	.dw #0x005D
   021C 60 00              1128 	.dw #0x0060
   021E 63 00              1129 	.dw #0x0063
   0220 66 00              1130 	.dw #0x0066
   0222 69 00              1131 	.dw #0x0069
   0224 6C 00              1132 	.dw #0x006C
   0226 6F 00              1133 	.dw #0x006F
   0228 72 00              1134 	.dw #0x0072
   022A 75 00              1135 	.dw #0x0075
   022C                    1136 _tri_center:
   022C 08                 1137 	.db #0x08
   022D 0A                 1138 	.db #0x0A
   022E 12                 1139 	.db #0x12
   022F 10                 1140 	.db #0x10
   0230 00                 1141 	.db #0x00
   0231 02                 1142 	.db #0x02
   0232 08                 1143 	.db #0x08
   0233 0A                 1144 	.db #0x0A
   0234 0B                 1145 	.db #0x0B
   0235 09                 1146 	.db #0x09
   0236 03                 1147 	.db #0x03
   0237 01                 1148 	.db #0x01
   0238 11                 1149 	.db #0x11
   0239 13                 1150 	.db #0x13
   023A 0B                 1151 	.db #0x0B
   023B 09                 1152 	.db #0x09
   023C 0A                 1153 	.db #0x0A
   023D 12                 1154 	.db #0x12
   023E 10                 1155 	.db #0x10
   023F 00                 1156 	.db #0x00
   0240 02                 1157 	.db #0x02
   0241 08                 1158 	.db #0x08
   0242 0A                 1159 	.db #0x0A
   0243 12                 1160 	.db #0x12
   0244 13                 1161 	.db #0x13
   0245 0B                 1162 	.db #0x0B
   0246 09                 1163 	.db #0x09
   0247 03                 1164 	.db #0x03
   0248 01                 1165 	.db #0x01
   0249 11                 1166 	.db #0x11
   024A 13                 1167 	.db #0x13
   024B 0B                 1168 	.db #0x0B
   024C 12                 1169 	.db #0x12
   024D 10                 1170 	.db #0x10
   024E 00                 1171 	.db #0x00
   024F 02                 1172 	.db #0x02
   0250 08                 1173 	.db #0x08
   0251 0A                 1174 	.db #0x0A
   0252 12                 1175 	.db #0x12
   0253 10                 1176 	.db #0x10
   0254 11                 1177 	.db #0x11
   0255 13                 1178 	.db #0x13
   0256 0B                 1179 	.db #0x0B
   0257 09                 1180 	.db #0x09
   0258 03                 1181 	.db #0x03
   0259 01                 1182 	.db #0x01
   025A 11                 1183 	.db #0x11
   025B 13                 1184 	.db #0x13
   025C 10                 1185 	.db #0x10
   025D 00                 1186 	.db #0x00
   025E 02                 1187 	.db #0x02
   025F 08                 1188 	.db #0x08
   0260 0A                 1189 	.db #0x0A
   0261 12                 1190 	.db #0x12
   0262 10                 1191 	.db #0x10
   0263 00                 1192 	.db #0x00
   0264 01                 1193 	.db #0x01
   0265 11                 1194 	.db #0x11
   0266 13                 1195 	.db #0x13
   0267 0B                 1196 	.db #0x0B
   0268 09                 1197 	.db #0x09
   0269 03                 1198 	.db #0x03
   026A 01                 1199 	.db #0x01
   026B 11                 1200 	.db #0x11
   026C 00                 1201 	.db #0x00
   026D 02                 1202 	.db #0x02
   026E 08                 1203 	.db #0x08
   026F 0A                 1204 	.db #0x0A
   0270 12                 1205 	.db #0x12
   0271 10                 1206 	.db #0x10
   0272 00                 1207 	.db #0x00
   0273 02                 1208 	.db #0x02
   0274 03                 1209 	.db #0x03
   0275 01                 1210 	.db #0x01
   0276 11                 1211 	.db #0x11
   0277 13                 1212 	.db #0x13
   0278 0B                 1213 	.db #0x0B
   0279 09                 1214 	.db #0x09
   027A 03                 1215 	.db #0x03
   027B 01                 1216 	.db #0x01
   027C 02                 1217 	.db #0x02
   027D 08                 1218 	.db #0x08
   027E 0A                 1219 	.db #0x0A
   027F 12                 1220 	.db #0x12
   0280 10                 1221 	.db #0x10
   0281 00                 1222 	.db #0x00
   0282 02                 1223 	.db #0x02
   0283 08                 1224 	.db #0x08
   0284 09                 1225 	.db #0x09
   0285 03                 1226 	.db #0x03
   0286 01                 1227 	.db #0x01
   0287 11                 1228 	.db #0x11
   0288 13                 1229 	.db #0x13
   0289 0B                 1230 	.db #0x0B
   028A 09                 1231 	.db #0x09
   028B 03                 1232 	.db #0x03
   028C 01                 1233 	.db #0x01
   028D 0B                 1234 	.db #0x0B
   028E 09                 1235 	.db #0x09
   028F 11                 1236 	.db #0x11
   0290 13                 1237 	.db #0x13
   0291 03                 1238 	.db #0x03
   0292 01                 1239 	.db #0x01
   0293 0B                 1240 	.db #0x0B
   0294 0A                 1241 	.db #0x0A
   0295 00                 1242 	.db #0x00
   0296 02                 1243 	.db #0x02
   0297 12                 1244 	.db #0x12
   0298 10                 1245 	.db #0x10
   0299 08                 1246 	.db #0x08
   029A 0A                 1247 	.db #0x0A
   029B 00                 1248 	.db #0x00
   029C 03                 1249 	.db #0x03
   029D 01                 1250 	.db #0x01
   029E 0B                 1251 	.db #0x0B
   029F 09                 1252 	.db #0x09
   02A0 11                 1253 	.db #0x11
   02A1 13                 1254 	.db #0x13
   02A2 03                 1255 	.db #0x03
   02A3 01                 1256 	.db #0x01
   02A4 00                 1257 	.db #0x00
   02A5 02                 1258 	.db #0x02
   02A6 12                 1259 	.db #0x12
   02A7 10                 1260 	.db #0x10
   02A8 08                 1261 	.db #0x08
   02A9 0A                 1262 	.db #0x0A
   02AA 00                 1263 	.db #0x00
   02AB 02                 1264 	.db #0x02
   02AC 13                 1265 	.db #0x13
   02AD 03                 1266 	.db #0x03
   02AE 01                 1267 	.db #0x01
   02AF 0B                 1268 	.db #0x0B
   02B0 09                 1269 	.db #0x09
   02B1 11                 1270 	.db #0x11
   02B2 13                 1271 	.db #0x13
   02B3 03                 1272 	.db #0x03
   02B4 02                 1273 	.db #0x02
   02B5 12                 1274 	.db #0x12
   02B6 10                 1275 	.db #0x10
   02B7 08                 1276 	.db #0x08
   02B8 0A                 1277 	.db #0x0A
   02B9 00                 1278 	.db #0x00
   02BA 02                 1279 	.db #0x02
   02BB 12                 1280 	.db #0x12
   02BC 11                 1281 	.db #0x11
   02BD 13                 1282 	.db #0x13
   02BE 03                 1283 	.db #0x03
   02BF 01                 1284 	.db #0x01
   02C0 0B                 1285 	.db #0x0B
   02C1 09                 1286 	.db #0x09
   02C2 11                 1287 	.db #0x11
   02C3 13                 1288 	.db #0x13
   02C4 12                 1289 	.db #0x12
   02C5 10                 1290 	.db #0x10
   02C6 08                 1291 	.db #0x08
   02C7 0A                 1292 	.db #0x0A
   02C8 00                 1293 	.db #0x00
   02C9 02                 1294 	.db #0x02
   02CA 12                 1295 	.db #0x12
   02CB 10                 1296 	.db #0x10
   02CC 09                 1297 	.db #0x09
   02CD 11                 1298 	.db #0x11
   02CE 13                 1299 	.db #0x13
   02CF 03                 1300 	.db #0x03
   02D0 01                 1301 	.db #0x01
   02D1 0B                 1302 	.db #0x0B
   02D2 09                 1303 	.db #0x09
   02D3 11                 1304 	.db #0x11
   02D4 10                 1305 	.db #0x10
   02D5 08                 1306 	.db #0x08
   02D6 0A                 1307 	.db #0x0A
   02D7 00                 1308 	.db #0x00
   02D8 02                 1309 	.db #0x02
   02D9 12                 1310 	.db #0x12
   02DA 10                 1311 	.db #0x10
   02DB 08                 1312 	.db #0x08
   02DC 0B                 1313 	.db #0x0B
   02DD 09                 1314 	.db #0x09
   02DE 11                 1315 	.db #0x11
   02DF 13                 1316 	.db #0x13
   02E0 03                 1317 	.db #0x03
   02E1 01                 1318 	.db #0x01
   02E2 0B                 1319 	.db #0x0B
   02E3 09                 1320 	.db #0x09
   02E4 08                 1321 	.db #0x08
   02E5 0A                 1322 	.db #0x0A
   02E6 00                 1323 	.db #0x00
   02E7 02                 1324 	.db #0x02
   02E8 12                 1325 	.db #0x12
   02E9 10                 1326 	.db #0x10
   02EA 08                 1327 	.db #0x08
   02EB 0A                 1328 	.db #0x0A
   02EC                    1329 _tri_up:
   02EC 0A                 1330 	.db #0x0A
   02ED 12                 1331 	.db #0x12
   02EE 10                 1332 	.db #0x10
   02EF 00                 1333 	.db #0x00
   02F0 02                 1334 	.db #0x02
   02F1 08                 1335 	.db #0x08
   02F2 0A                 1336 	.db #0x0A
   02F3 12                 1337 	.db #0x12
   02F4 13                 1338 	.db #0x13
   02F5 0B                 1339 	.db #0x0B
   02F6 09                 1340 	.db #0x09
   02F7 03                 1341 	.db #0x03
   02F8 01                 1342 	.db #0x01
   02F9 11                 1343 	.db #0x11
   02FA 13                 1344 	.db #0x13
   02FB 0B                 1345 	.db #0x0B
   02FC 12                 1346 	.db #0x12
   02FD 10                 1347 	.db #0x10
   02FE 00                 1348 	.db #0x00
   02FF 02                 1349 	.db #0x02
   0300 08                 1350 	.db #0x08
   0301 0A                 1351 	.db #0x0A
   0302 12                 1352 	.db #0x12
   0303 10                 1353 	.db #0x10
   0304 11                 1354 	.db #0x11
   0305 13                 1355 	.db #0x13
   0306 0B                 1356 	.db #0x0B
   0307 09                 1357 	.db #0x09
   0308 03                 1358 	.db #0x03
   0309 01                 1359 	.db #0x01
   030A 11                 1360 	.db #0x11
   030B 13                 1361 	.db #0x13
   030C 10                 1362 	.db #0x10
   030D 00                 1363 	.db #0x00
   030E 02                 1364 	.db #0x02
   030F 08                 1365 	.db #0x08
   0310 0A                 1366 	.db #0x0A
   0311 12                 1367 	.db #0x12
   0312 10                 1368 	.db #0x10
   0313 00                 1369 	.db #0x00
   0314 01                 1370 	.db #0x01
   0315 11                 1371 	.db #0x11
   0316 13                 1372 	.db #0x13
   0317 0B                 1373 	.db #0x0B
   0318 09                 1374 	.db #0x09
   0319 03                 1375 	.db #0x03
   031A 01                 1376 	.db #0x01
   031B 11                 1377 	.db #0x11
   031C 00                 1378 	.db #0x00
   031D 02                 1379 	.db #0x02
   031E 08                 1380 	.db #0x08
   031F 0A                 1381 	.db #0x0A
   0320 12                 1382 	.db #0x12
   0321 10                 1383 	.db #0x10
   0322 00                 1384 	.db #0x00
   0323 02                 1385 	.db #0x02
   0324 03                 1386 	.db #0x03
   0325 01                 1387 	.db #0x01
   0326 11                 1388 	.db #0x11
   0327 13                 1389 	.db #0x13
   0328 0B                 1390 	.db #0x0B
   0329 09                 1391 	.db #0x09
   032A 03                 1392 	.db #0x03
   032B 01                 1393 	.db #0x01
   032C 02                 1394 	.db #0x02
   032D 08                 1395 	.db #0x08
   032E 0A                 1396 	.db #0x0A
   032F 12                 1397 	.db #0x12
   0330 10                 1398 	.db #0x10
   0331 00                 1399 	.db #0x00
   0332 02                 1400 	.db #0x02
   0333 08                 1401 	.db #0x08
   0334 09                 1402 	.db #0x09
   0335 03                 1403 	.db #0x03
   0336 01                 1404 	.db #0x01
   0337 11                 1405 	.db #0x11
   0338 13                 1406 	.db #0x13
   0339 0B                 1407 	.db #0x0B
   033A 09                 1408 	.db #0x09
   033B 03                 1409 	.db #0x03
   033C 08                 1410 	.db #0x08
   033D 0A                 1411 	.db #0x0A
   033E 12                 1412 	.db #0x12
   033F 10                 1413 	.db #0x10
   0340 00                 1414 	.db #0x00
   0341 02                 1415 	.db #0x02
   0342 08                 1416 	.db #0x08
   0343 0A                 1417 	.db #0x0A
   0344 0B                 1418 	.db #0x0B
   0345 09                 1419 	.db #0x09
   0346 03                 1420 	.db #0x03
   0347 01                 1421 	.db #0x01
   0348 11                 1422 	.db #0x11
   0349 13                 1423 	.db #0x13
   034A 0B                 1424 	.db #0x0B
   034B 09                 1425 	.db #0x09
   034C 0A                 1426 	.db #0x0A
   034D 12                 1427 	.db #0x12
   034E 10                 1428 	.db #0x10
   034F 00                 1429 	.db #0x00
   0350 02                 1430 	.db #0x02
   0351 08                 1431 	.db #0x08
   0352 0A                 1432 	.db #0x0A
   0353 12                 1433 	.db #0x12
   0354 13                 1434 	.db #0x13
   0355 0B                 1435 	.db #0x0B
   0356 09                 1436 	.db #0x09
   0357 03                 1437 	.db #0x03
   0358 01                 1438 	.db #0x01
   0359 11                 1439 	.db #0x11
   035A 13                 1440 	.db #0x13
   035B 0B                 1441 	.db #0x0B
   035C 12                 1442 	.db #0x12
   035D 10                 1443 	.db #0x10
   035E 00                 1444 	.db #0x00
   035F 02                 1445 	.db #0x02
   0360 08                 1446 	.db #0x08
   0361 0A                 1447 	.db #0x0A
   0362 12                 1448 	.db #0x12
   0363 10                 1449 	.db #0x10
   0364 11                 1450 	.db #0x11
   0365 13                 1451 	.db #0x13
   0366 0B                 1452 	.db #0x0B
   0367 09                 1453 	.db #0x09
   0368 03                 1454 	.db #0x03
   0369 01                 1455 	.db #0x01
   036A 11                 1456 	.db #0x11
   036B 13                 1457 	.db #0x13
   036C 10                 1458 	.db #0x10
   036D 00                 1459 	.db #0x00
   036E 02                 1460 	.db #0x02
   036F 08                 1461 	.db #0x08
   0370 0A                 1462 	.db #0x0A
   0371 12                 1463 	.db #0x12
   0372 10                 1464 	.db #0x10
   0373 00                 1465 	.db #0x00
   0374 01                 1466 	.db #0x01
   0375 11                 1467 	.db #0x11
   0376 13                 1468 	.db #0x13
   0377 0B                 1469 	.db #0x0B
   0378 09                 1470 	.db #0x09
   0379 03                 1471 	.db #0x03
   037A 01                 1472 	.db #0x01
   037B 11                 1473 	.db #0x11
   037C 00                 1474 	.db #0x00
   037D 02                 1475 	.db #0x02
   037E 08                 1476 	.db #0x08
   037F 0A                 1477 	.db #0x0A
   0380 12                 1478 	.db #0x12
   0381 10                 1479 	.db #0x10
   0382 00                 1480 	.db #0x00
   0383 02                 1481 	.db #0x02
   0384 03                 1482 	.db #0x03
   0385 01                 1483 	.db #0x01
   0386 11                 1484 	.db #0x11
   0387 13                 1485 	.db #0x13
   0388 0B                 1486 	.db #0x0B
   0389 09                 1487 	.db #0x09
   038A 03                 1488 	.db #0x03
   038B 01                 1489 	.db #0x01
   038C 02                 1490 	.db #0x02
   038D 08                 1491 	.db #0x08
   038E 0A                 1492 	.db #0x0A
   038F 12                 1493 	.db #0x12
   0390 10                 1494 	.db #0x10
   0391 00                 1495 	.db #0x00
   0392 02                 1496 	.db #0x02
   0393 08                 1497 	.db #0x08
   0394 09                 1498 	.db #0x09
   0395 03                 1499 	.db #0x03
   0396 01                 1500 	.db #0x01
   0397 11                 1501 	.db #0x11
   0398 13                 1502 	.db #0x13
   0399 0B                 1503 	.db #0x0B
   039A 09                 1504 	.db #0x09
   039B 03                 1505 	.db #0x03
   039C 08                 1506 	.db #0x08
   039D 0A                 1507 	.db #0x0A
   039E 12                 1508 	.db #0x12
   039F 10                 1509 	.db #0x10
   03A0 00                 1510 	.db #0x00
   03A1 02                 1511 	.db #0x02
   03A2 08                 1512 	.db #0x08
   03A3 0A                 1513 	.db #0x0A
   03A4 0B                 1514 	.db #0x0B
   03A5 09                 1515 	.db #0x09
   03A6 03                 1516 	.db #0x03
   03A7 01                 1517 	.db #0x01
   03A8 11                 1518 	.db #0x11
   03A9 13                 1519 	.db #0x13
   03AA 0B                 1520 	.db #0x0B
   03AB 09                 1521 	.db #0x09
   03AC                    1522 _tri_dia:
   03AC 05                 1523 	.db #0x05
   03AD 1B                 1524 	.db #0x1B
   03AE 0F                 1525 	.db #0x0F
   03AF 1D                 1526 	.db #0x1D
   03B0 15                 1527 	.db #0x15
   03B1 19                 1528 	.db #0x19
   03B2 05                 1529 	.db #0x05
   03B3 1B                 1530 	.db #0x1B
   03B4 0F                 1531 	.db #0x0F
   03B5 1D                 1532 	.db #0x1D
   03B6 15                 1533 	.db #0x15
   03B7 19                 1534 	.db #0x19
   03B8 05                 1535 	.db #0x05
   03B9 1B                 1536 	.db #0x1B
   03BA 0F                 1537 	.db #0x0F
   03BB 1D                 1538 	.db #0x1D
   03BC 1D                 1539 	.db #0x1D
   03BD 05                 1540 	.db #0x05
   03BE 19                 1541 	.db #0x19
   03BF 0F                 1542 	.db #0x0F
   03C0 1B                 1543 	.db #0x1B
   03C1 15                 1544 	.db #0x15
   03C2 1D                 1545 	.db #0x1D
   03C3 05                 1546 	.db #0x05
   03C4 19                 1547 	.db #0x19
   03C5 0F                 1548 	.db #0x0F
   03C6 1B                 1549 	.db #0x1B
   03C7 15                 1550 	.db #0x15
   03C8 1D                 1551 	.db #0x1D
   03C9 05                 1552 	.db #0x05
   03CA 19                 1553 	.db #0x19
   03CB 0F                 1554 	.db #0x0F
   03CC 0F                 1555 	.db #0x0F
   03CD 1D                 1556 	.db #0x1D
   03CE 15                 1557 	.db #0x15
   03CF 19                 1558 	.db #0x19
   03D0 05                 1559 	.db #0x05
   03D1 1B                 1560 	.db #0x1B
   03D2 0F                 1561 	.db #0x0F
   03D3 1D                 1562 	.db #0x1D
   03D4 15                 1563 	.db #0x15
   03D5 19                 1564 	.db #0x19
   03D6 05                 1565 	.db #0x05
   03D7 1B                 1566 	.db #0x1B
   03D8 0F                 1567 	.db #0x0F
   03D9 1D                 1568 	.db #0x1D
   03DA 15                 1569 	.db #0x15
   03DB 19                 1570 	.db #0x19
   03DC 19                 1571 	.db #0x19
   03DD 0F                 1572 	.db #0x0F
   03DE 1B                 1573 	.db #0x1B
   03DF 15                 1574 	.db #0x15
   03E0 1D                 1575 	.db #0x1D
   03E1 05                 1576 	.db #0x05
   03E2 19                 1577 	.db #0x19
   03E3 0F                 1578 	.db #0x0F
   03E4 1B                 1579 	.db #0x1B
   03E5 15                 1580 	.db #0x15
   03E6 1D                 1581 	.db #0x1D
   03E7 05                 1582 	.db #0x05
   03E8 19                 1583 	.db #0x19
   03E9 0F                 1584 	.db #0x0F
   03EA 1B                 1585 	.db #0x1B
   03EB 15                 1586 	.db #0x15
   03EC 15                 1587 	.db #0x15
   03ED 19                 1588 	.db #0x19
   03EE 05                 1589 	.db #0x05
   03EF 1B                 1590 	.db #0x1B
   03F0 0F                 1591 	.db #0x0F
   03F1 1D                 1592 	.db #0x1D
   03F2 15                 1593 	.db #0x15
   03F3 19                 1594 	.db #0x19
   03F4 05                 1595 	.db #0x05
   03F5 1B                 1596 	.db #0x1B
   03F6 0F                 1597 	.db #0x0F
   03F7 1D                 1598 	.db #0x1D
   03F8 15                 1599 	.db #0x15
   03F9 19                 1600 	.db #0x19
   03FA 05                 1601 	.db #0x05
   03FB 1B                 1602 	.db #0x1B
   03FC 1B                 1603 	.db #0x1B
   03FD 15                 1604 	.db #0x15
   03FE 1D                 1605 	.db #0x1D
   03FF 05                 1606 	.db #0x05
   0400 19                 1607 	.db #0x19
   0401 0F                 1608 	.db #0x0F
   0402 1B                 1609 	.db #0x1B
   0403 15                 1610 	.db #0x15
   0404 1D                 1611 	.db #0x1D
   0405 05                 1612 	.db #0x05
   0406 19                 1613 	.db #0x19
   0407 0F                 1614 	.db #0x0F
   0408 1B                 1615 	.db #0x1B
   0409 15                 1616 	.db #0x15
   040A 1D                 1617 	.db #0x1D
   040B 05                 1618 	.db #0x05
   040C 05                 1619 	.db #0x05
   040D 1B                 1620 	.db #0x1B
   040E 0F                 1621 	.db #0x0F
   040F 1D                 1622 	.db #0x1D
   0410 15                 1623 	.db #0x15
   0411 19                 1624 	.db #0x19
   0412 05                 1625 	.db #0x05
   0413 1B                 1626 	.db #0x1B
   0414 0F                 1627 	.db #0x0F
   0415 1D                 1628 	.db #0x1D
   0416 15                 1629 	.db #0x15
   0417 19                 1630 	.db #0x19
   0418 05                 1631 	.db #0x05
   0419 1B                 1632 	.db #0x1B
   041A 0F                 1633 	.db #0x0F
   041B 1D                 1634 	.db #0x1D
   041C 1D                 1635 	.db #0x1D
   041D 05                 1636 	.db #0x05
   041E 19                 1637 	.db #0x19
   041F 0F                 1638 	.db #0x0F
   0420 1B                 1639 	.db #0x1B
   0421 15                 1640 	.db #0x15
   0422 1D                 1641 	.db #0x1D
   0423 05                 1642 	.db #0x05
   0424 19                 1643 	.db #0x19
   0425 0F                 1644 	.db #0x0F
   0426 1B                 1645 	.db #0x1B
   0427 15                 1646 	.db #0x15
   0428 1D                 1647 	.db #0x1D
   0429 05                 1648 	.db #0x05
   042A 19                 1649 	.db #0x19
   042B 0F                 1650 	.db #0x0F
   042C 0F                 1651 	.db #0x0F
   042D 1D                 1652 	.db #0x1D
   042E 15                 1653 	.db #0x15
   042F 19                 1654 	.db #0x19
   0430 05                 1655 	.db #0x05
   0431 1B                 1656 	.db #0x1B
   0432 0F                 1657 	.db #0x0F
   0433 1D                 1658 	.db #0x1D
   0434 15                 1659 	.db #0x15
   0435 19                 1660 	.db #0x19
   0436 05                 1661 	.db #0x05
   0437 1B                 1662 	.db #0x1B
   0438 0F                 1663 	.db #0x0F
   0439 1D                 1664 	.db #0x1D
   043A 15                 1665 	.db #0x15
   043B 19                 1666 	.db #0x19
   043C 19                 1667 	.db #0x19
   043D 0F                 1668 	.db #0x0F
   043E 1B                 1669 	.db #0x1B
   043F 15                 1670 	.db #0x15
   0440 1D                 1671 	.db #0x1D
   0441 05                 1672 	.db #0x05
   0442 19                 1673 	.db #0x19
   0443 0F                 1674 	.db #0x0F
   0444 1B                 1675 	.db #0x1B
   0445 15                 1676 	.db #0x15
   0446 1D                 1677 	.db #0x1D
   0447 05                 1678 	.db #0x05
   0448 19                 1679 	.db #0x19
   0449 0F                 1680 	.db #0x0F
   044A 1B                 1681 	.db #0x1B
   044B 15                 1682 	.db #0x15
   044C 15                 1683 	.db #0x15
   044D 19                 1684 	.db #0x19
   044E 05                 1685 	.db #0x05
   044F 1B                 1686 	.db #0x1B
   0450 0F                 1687 	.db #0x0F
   0451 1D                 1688 	.db #0x1D
   0452 15                 1689 	.db #0x15
   0453 19                 1690 	.db #0x19
   0454 05                 1691 	.db #0x05
   0455 1B                 1692 	.db #0x1B
   0456 0F                 1693 	.db #0x0F
   0457 1D                 1694 	.db #0x1D
   0458 15                 1695 	.db #0x15
   0459 19                 1696 	.db #0x19
   045A 05                 1697 	.db #0x05
   045B 1B                 1698 	.db #0x1B
   045C 1B                 1699 	.db #0x1B
   045D 15                 1700 	.db #0x15
   045E 1D                 1701 	.db #0x1D
   045F 05                 1702 	.db #0x05
   0460 19                 1703 	.db #0x19
   0461 0F                 1704 	.db #0x0F
   0462 1B                 1705 	.db #0x1B
   0463 15                 1706 	.db #0x15
   0464 1D                 1707 	.db #0x1D
   0465 05                 1708 	.db #0x05
   0466 19                 1709 	.db #0x19
   0467 0F                 1710 	.db #0x0F
   0468 1B                 1711 	.db #0x1B
   0469 15                 1712 	.db #0x15
   046A 1D                 1713 	.db #0x1D
   046B 05                 1714 	.db #0x05
   046C                    1715 _tri_side1:
   046C 0A                 1716 	.db #0x0A
   046D 12                 1717 	.db #0x12
   046E 10                 1718 	.db #0x10
   046F 00                 1719 	.db #0x00
   0470 02                 1720 	.db #0x02
   0471 08                 1721 	.db #0x08
   0472 0A                 1722 	.db #0x0A
   0473 12                 1723 	.db #0x12
   0474 10                 1724 	.db #0x10
   0475 00                 1725 	.db #0x00
   0476 02                 1726 	.db #0x02
   0477 08                 1727 	.db #0x08
   0478 0A                 1728 	.db #0x0A
   0479 12                 1729 	.db #0x12
   047A 10                 1730 	.db #0x10
   047B 00                 1731 	.db #0x00
   047C 12                 1732 	.db #0x12
   047D 10                 1733 	.db #0x10
   047E 00                 1734 	.db #0x00
   047F 02                 1735 	.db #0x02
   0480 08                 1736 	.db #0x08
   0481 0A                 1737 	.db #0x0A
   0482 12                 1738 	.db #0x12
   0483 10                 1739 	.db #0x10
   0484 00                 1740 	.db #0x00
   0485 02                 1741 	.db #0x02
   0486 08                 1742 	.db #0x08
   0487 0A                 1743 	.db #0x0A
   0488 12                 1744 	.db #0x12
   0489 10                 1745 	.db #0x10
   048A 00                 1746 	.db #0x00
   048B 02                 1747 	.db #0x02
   048C 10                 1748 	.db #0x10
   048D 00                 1749 	.db #0x00
   048E 02                 1750 	.db #0x02
   048F 08                 1751 	.db #0x08
   0490 0A                 1752 	.db #0x0A
   0491 12                 1753 	.db #0x12
   0492 10                 1754 	.db #0x10
   0493 00                 1755 	.db #0x00
   0494 02                 1756 	.db #0x02
   0495 08                 1757 	.db #0x08
   0496 0A                 1758 	.db #0x0A
   0497 12                 1759 	.db #0x12
   0498 10                 1760 	.db #0x10
   0499 00                 1761 	.db #0x00
   049A 02                 1762 	.db #0x02
   049B 08                 1763 	.db #0x08
   049C 00                 1764 	.db #0x00
   049D 02                 1765 	.db #0x02
   049E 08                 1766 	.db #0x08
   049F 0A                 1767 	.db #0x0A
   04A0 12                 1768 	.db #0x12
   04A1 10                 1769 	.db #0x10
   04A2 00                 1770 	.db #0x00
   04A3 02                 1771 	.db #0x02
   04A4 08                 1772 	.db #0x08
   04A5 0A                 1773 	.db #0x0A
   04A6 12                 1774 	.db #0x12
   04A7 10                 1775 	.db #0x10
   04A8 00                 1776 	.db #0x00
   04A9 02                 1777 	.db #0x02
   04AA 08                 1778 	.db #0x08
   04AB 0A                 1779 	.db #0x0A
   04AC 02                 1780 	.db #0x02
   04AD 08                 1781 	.db #0x08
   04AE 0A                 1782 	.db #0x0A
   04AF 12                 1783 	.db #0x12
   04B0 10                 1784 	.db #0x10
   04B1 00                 1785 	.db #0x00
   04B2 02                 1786 	.db #0x02
   04B3 08                 1787 	.db #0x08
   04B4 0A                 1788 	.db #0x0A
   04B5 12                 1789 	.db #0x12
   04B6 10                 1790 	.db #0x10
   04B7 00                 1791 	.db #0x00
   04B8 02                 1792 	.db #0x02
   04B9 08                 1793 	.db #0x08
   04BA 0A                 1794 	.db #0x0A
   04BB 12                 1795 	.db #0x12
   04BC 08                 1796 	.db #0x08
   04BD 0A                 1797 	.db #0x0A
   04BE 12                 1798 	.db #0x12
   04BF 10                 1799 	.db #0x10
   04C0 00                 1800 	.db #0x00
   04C1 02                 1801 	.db #0x02
   04C2 08                 1802 	.db #0x08
   04C3 0A                 1803 	.db #0x0A
   04C4 12                 1804 	.db #0x12
   04C5 10                 1805 	.db #0x10
   04C6 00                 1806 	.db #0x00
   04C7 02                 1807 	.db #0x02
   04C8 08                 1808 	.db #0x08
   04C9 0A                 1809 	.db #0x0A
   04CA 12                 1810 	.db #0x12
   04CB 10                 1811 	.db #0x10
   04CC 0A                 1812 	.db #0x0A
   04CD 12                 1813 	.db #0x12
   04CE 10                 1814 	.db #0x10
   04CF 00                 1815 	.db #0x00
   04D0 02                 1816 	.db #0x02
   04D1 08                 1817 	.db #0x08
   04D2 0A                 1818 	.db #0x0A
   04D3 12                 1819 	.db #0x12
   04D4 10                 1820 	.db #0x10
   04D5 00                 1821 	.db #0x00
   04D6 02                 1822 	.db #0x02
   04D7 08                 1823 	.db #0x08
   04D8 0A                 1824 	.db #0x0A
   04D9 12                 1825 	.db #0x12
   04DA 10                 1826 	.db #0x10
   04DB 00                 1827 	.db #0x00
   04DC 12                 1828 	.db #0x12
   04DD 10                 1829 	.db #0x10
   04DE 00                 1830 	.db #0x00
   04DF 02                 1831 	.db #0x02
   04E0 08                 1832 	.db #0x08
   04E1 0A                 1833 	.db #0x0A
   04E2 12                 1834 	.db #0x12
   04E3 10                 1835 	.db #0x10
   04E4 00                 1836 	.db #0x00
   04E5 02                 1837 	.db #0x02
   04E6 08                 1838 	.db #0x08
   04E7 0A                 1839 	.db #0x0A
   04E8 12                 1840 	.db #0x12
   04E9 10                 1841 	.db #0x10
   04EA 00                 1842 	.db #0x00
   04EB 02                 1843 	.db #0x02
   04EC 10                 1844 	.db #0x10
   04ED 00                 1845 	.db #0x00
   04EE 02                 1846 	.db #0x02
   04EF 08                 1847 	.db #0x08
   04F0 0A                 1848 	.db #0x0A
   04F1 12                 1849 	.db #0x12
   04F2 10                 1850 	.db #0x10
   04F3 00                 1851 	.db #0x00
   04F4 02                 1852 	.db #0x02
   04F5 08                 1853 	.db #0x08
   04F6 0A                 1854 	.db #0x0A
   04F7 12                 1855 	.db #0x12
   04F8 10                 1856 	.db #0x10
   04F9 00                 1857 	.db #0x00
   04FA 02                 1858 	.db #0x02
   04FB 08                 1859 	.db #0x08
   04FC 00                 1860 	.db #0x00
   04FD 02                 1861 	.db #0x02
   04FE 08                 1862 	.db #0x08
   04FF 0A                 1863 	.db #0x0A
   0500 12                 1864 	.db #0x12
   0501 10                 1865 	.db #0x10
   0502 00                 1866 	.db #0x00
   0503 02                 1867 	.db #0x02
   0504 08                 1868 	.db #0x08
   0505 0A                 1869 	.db #0x0A
   0506 12                 1870 	.db #0x12
   0507 10                 1871 	.db #0x10
   0508 00                 1872 	.db #0x00
   0509 02                 1873 	.db #0x02
   050A 08                 1874 	.db #0x08
   050B 0A                 1875 	.db #0x0A
   050C 02                 1876 	.db #0x02
   050D 08                 1877 	.db #0x08
   050E 0A                 1878 	.db #0x0A
   050F 12                 1879 	.db #0x12
   0510 10                 1880 	.db #0x10
   0511 00                 1881 	.db #0x00
   0512 02                 1882 	.db #0x02
   0513 08                 1883 	.db #0x08
   0514 0A                 1884 	.db #0x0A
   0515 12                 1885 	.db #0x12
   0516 10                 1886 	.db #0x10
   0517 00                 1887 	.db #0x00
   0518 02                 1888 	.db #0x02
   0519 08                 1889 	.db #0x08
   051A 0A                 1890 	.db #0x0A
   051B 12                 1891 	.db #0x12
   051C 08                 1892 	.db #0x08
   051D 0A                 1893 	.db #0x0A
   051E 12                 1894 	.db #0x12
   051F 10                 1895 	.db #0x10
   0520 00                 1896 	.db #0x00
   0521 02                 1897 	.db #0x02
   0522 08                 1898 	.db #0x08
   0523 0A                 1899 	.db #0x0A
   0524 12                 1900 	.db #0x12
   0525 10                 1901 	.db #0x10
   0526 00                 1902 	.db #0x00
   0527 02                 1903 	.db #0x02
   0528 08                 1904 	.db #0x08
   0529 0A                 1905 	.db #0x0A
   052A 12                 1906 	.db #0x12
   052B 10                 1907 	.db #0x10
   052C                    1908 _tri_side2:
   052C 00                 1909 	.db #0x00
   052D 10                 1910 	.db #0x10
   052E 12                 1911 	.db #0x12
   052F 0A                 1912 	.db #0x0A
   0530 08                 1913 	.db #0x08
   0531 02                 1914 	.db #0x02
   0532 00                 1915 	.db #0x00
   0533 10                 1916 	.db #0x10
   0534 12                 1917 	.db #0x12
   0535 0A                 1918 	.db #0x0A
   0536 08                 1919 	.db #0x08
   0537 02                 1920 	.db #0x02
   0538 00                 1921 	.db #0x00
   0539 10                 1922 	.db #0x10
   053A 12                 1923 	.db #0x12
   053B 0A                 1924 	.db #0x0A
   053C 02                 1925 	.db #0x02
   053D 00                 1926 	.db #0x00
   053E 10                 1927 	.db #0x10
   053F 12                 1928 	.db #0x12
   0540 0A                 1929 	.db #0x0A
   0541 08                 1930 	.db #0x08
   0542 02                 1931 	.db #0x02
   0543 00                 1932 	.db #0x00
   0544 10                 1933 	.db #0x10
   0545 12                 1934 	.db #0x12
   0546 0A                 1935 	.db #0x0A
   0547 08                 1936 	.db #0x08
   0548 02                 1937 	.db #0x02
   0549 00                 1938 	.db #0x00
   054A 10                 1939 	.db #0x10
   054B 12                 1940 	.db #0x12
   054C 08                 1941 	.db #0x08
   054D 02                 1942 	.db #0x02
   054E 00                 1943 	.db #0x00
   054F 10                 1944 	.db #0x10
   0550 12                 1945 	.db #0x12
   0551 0A                 1946 	.db #0x0A
   0552 08                 1947 	.db #0x08
   0553 02                 1948 	.db #0x02
   0554 00                 1949 	.db #0x00
   0555 10                 1950 	.db #0x10
   0556 12                 1951 	.db #0x12
   0557 0A                 1952 	.db #0x0A
   0558 08                 1953 	.db #0x08
   0559 02                 1954 	.db #0x02
   055A 00                 1955 	.db #0x00
   055B 10                 1956 	.db #0x10
   055C 0A                 1957 	.db #0x0A
   055D 08                 1958 	.db #0x08
   055E 02                 1959 	.db #0x02
   055F 00                 1960 	.db #0x00
   0560 10                 1961 	.db #0x10
   0561 12                 1962 	.db #0x12
   0562 0A                 1963 	.db #0x0A
   0563 08                 1964 	.db #0x08
   0564 02                 1965 	.db #0x02
   0565 00                 1966 	.db #0x00
   0566 10                 1967 	.db #0x10
   0567 12                 1968 	.db #0x12
   0568 0A                 1969 	.db #0x0A
   0569 08                 1970 	.db #0x08
   056A 02                 1971 	.db #0x02
   056B 00                 1972 	.db #0x00
   056C 12                 1973 	.db #0x12
   056D 0A                 1974 	.db #0x0A
   056E 08                 1975 	.db #0x08
   056F 02                 1976 	.db #0x02
   0570 00                 1977 	.db #0x00
   0571 10                 1978 	.db #0x10
   0572 12                 1979 	.db #0x12
   0573 0A                 1980 	.db #0x0A
   0574 08                 1981 	.db #0x08
   0575 02                 1982 	.db #0x02
   0576 00                 1983 	.db #0x00
   0577 10                 1984 	.db #0x10
   0578 12                 1985 	.db #0x12
   0579 0A                 1986 	.db #0x0A
   057A 08                 1987 	.db #0x08
   057B 02                 1988 	.db #0x02
   057C 10                 1989 	.db #0x10
   057D 12                 1990 	.db #0x12
   057E 0A                 1991 	.db #0x0A
   057F 08                 1992 	.db #0x08
   0580 02                 1993 	.db #0x02
   0581 00                 1994 	.db #0x00
   0582 10                 1995 	.db #0x10
   0583 12                 1996 	.db #0x12
   0584 0A                 1997 	.db #0x0A
   0585 08                 1998 	.db #0x08
   0586 02                 1999 	.db #0x02
   0587 00                 2000 	.db #0x00
   0588 10                 2001 	.db #0x10
   0589 12                 2002 	.db #0x12
   058A 0A                 2003 	.db #0x0A
   058B 08                 2004 	.db #0x08
   058C 00                 2005 	.db #0x00
   058D 10                 2006 	.db #0x10
   058E 12                 2007 	.db #0x12
   058F 0A                 2008 	.db #0x0A
   0590 08                 2009 	.db #0x08
   0591 02                 2010 	.db #0x02
   0592 00                 2011 	.db #0x00
   0593 10                 2012 	.db #0x10
   0594 12                 2013 	.db #0x12
   0595 0A                 2014 	.db #0x0A
   0596 08                 2015 	.db #0x08
   0597 02                 2016 	.db #0x02
   0598 00                 2017 	.db #0x00
   0599 10                 2018 	.db #0x10
   059A 12                 2019 	.db #0x12
   059B 0A                 2020 	.db #0x0A
   059C 02                 2021 	.db #0x02
   059D 00                 2022 	.db #0x00
   059E 10                 2023 	.db #0x10
   059F 12                 2024 	.db #0x12
   05A0 0A                 2025 	.db #0x0A
   05A1 08                 2026 	.db #0x08
   05A2 02                 2027 	.db #0x02
   05A3 00                 2028 	.db #0x00
   05A4 10                 2029 	.db #0x10
   05A5 12                 2030 	.db #0x12
   05A6 0A                 2031 	.db #0x0A
   05A7 08                 2032 	.db #0x08
   05A8 02                 2033 	.db #0x02
   05A9 00                 2034 	.db #0x00
   05AA 10                 2035 	.db #0x10
   05AB 12                 2036 	.db #0x12
   05AC 08                 2037 	.db #0x08
   05AD 02                 2038 	.db #0x02
   05AE 00                 2039 	.db #0x00
   05AF 10                 2040 	.db #0x10
   05B0 12                 2041 	.db #0x12
   05B1 0A                 2042 	.db #0x0A
   05B2 08                 2043 	.db #0x08
   05B3 02                 2044 	.db #0x02
   05B4 00                 2045 	.db #0x00
   05B5 10                 2046 	.db #0x10
   05B6 12                 2047 	.db #0x12
   05B7 0A                 2048 	.db #0x0A
   05B8 08                 2049 	.db #0x08
   05B9 02                 2050 	.db #0x02
   05BA 00                 2051 	.db #0x00
   05BB 10                 2052 	.db #0x10
   05BC 0A                 2053 	.db #0x0A
   05BD 08                 2054 	.db #0x08
   05BE 02                 2055 	.db #0x02
   05BF 00                 2056 	.db #0x00
   05C0 10                 2057 	.db #0x10
   05C1 12                 2058 	.db #0x12
   05C2 0A                 2059 	.db #0x0A
   05C3 08                 2060 	.db #0x08
   05C4 02                 2061 	.db #0x02
   05C5 00                 2062 	.db #0x00
   05C6 10                 2063 	.db #0x10
   05C7 12                 2064 	.db #0x12
   05C8 0A                 2065 	.db #0x0A
   05C9 08                 2066 	.db #0x08
   05CA 02                 2067 	.db #0x02
   05CB 00                 2068 	.db #0x00
   05CC 12                 2069 	.db #0x12
   05CD 0A                 2070 	.db #0x0A
   05CE 08                 2071 	.db #0x08
   05CF 02                 2072 	.db #0x02
   05D0 00                 2073 	.db #0x00
   05D1 10                 2074 	.db #0x10
   05D2 12                 2075 	.db #0x12
   05D3 0A                 2076 	.db #0x0A
   05D4 08                 2077 	.db #0x08
   05D5 02                 2078 	.db #0x02
   05D6 00                 2079 	.db #0x00
   05D7 10                 2080 	.db #0x10
   05D8 12                 2081 	.db #0x12
   05D9 0A                 2082 	.db #0x0A
   05DA 08                 2083 	.db #0x08
   05DB 02                 2084 	.db #0x02
   05DC 10                 2085 	.db #0x10
   05DD 12                 2086 	.db #0x12
   05DE 0A                 2087 	.db #0x0A
   05DF 08                 2088 	.db #0x08
   05E0 02                 2089 	.db #0x02
   05E1 00                 2090 	.db #0x00
   05E2 10                 2091 	.db #0x10
   05E3 12                 2092 	.db #0x12
   05E4 0A                 2093 	.db #0x0A
   05E5 08                 2094 	.db #0x08
   05E6 02                 2095 	.db #0x02
   05E7 00                 2096 	.db #0x00
   05E8 10                 2097 	.db #0x10
   05E9 12                 2098 	.db #0x12
   05EA 0A                 2099 	.db #0x0A
   05EB 08                 2100 	.db #0x08
                           2101 ;demo.c:142: void my_isr(void) interrupt
                           2102 ;	---------------------------------
                           2103 ; Function my_isr
                           2104 ; ---------------------------------
   05EC                    2105 _my_isr_start::
   05EC                    2106 _my_isr:
   05EC F5                 2107 	push	af
   05ED C5                 2108 	push	bc
   05EE D5                 2109 	push	de
   05EF E5                 2110 	push	hl
   05F0 FD E5              2111 	push	iy
                           2112 ;demo.c:144: DI;
   05F2 F3                 2113 		di 
                           2114 ;demo.c:146: READ_VDP_STATUS;
   05F3 DB 99              2115 		in a,(#0x99) 
                           2116 ;demo.c:148: PLY_Play();
   05F5 CDr00s00           2117 	call	_PLY_Play
                           2118 ;demo.c:149: PLY_SendRegisters();
   05F8 CDr00s00           2119 	call	_PLY_SendRegisters
                           2120 ;demo.c:151: vbicount+=1;
   05FB FD 21r68s41        2121 	ld	iy,#_vbicount
   05FF FD 34 00           2122 	inc	0 (iy)
   0602 20 07              2123 	jr	NZ,00103$
   0604 FD 21r68s41        2124 	ld	iy,#_vbicount
   0608 FD 34 01           2125 	inc	1 (iy)
   060B                    2126 00103$:
                           2127 ;demo.c:152: tick++;
   060B FD 21r6As41        2128 	ld	iy,#_tick
   060F FD 34 00           2129 	inc	0 (iy)
   0612 20 07              2130 	jr	NZ,00104$
   0614 FD 21r6As41        2131 	ld	iy,#_tick
   0618 FD 34 01           2132 	inc	1 (iy)
   061B                    2133 00104$:
                           2134 ;demo.c:154: EI;
   061B FB                 2135 		ei 
   061C FD E1              2136 	pop	iy
   061E E1                 2137 	pop	hl
   061F D1                 2138 	pop	de
   0620 C1                 2139 	pop	bc
   0621 F1                 2140 	pop	af
   0622 ED 4D              2141 	reti
   0624                    2142 _my_isr_end::
                           2143 ;demo.c:157: void color_isr(void) interrupt
                           2144 ;	---------------------------------
                           2145 ; Function color_isr
                           2146 ; ---------------------------------
   0624                    2147 _color_isr_start::
   0624                    2148 _color_isr:
   0624 F5                 2149 	push	af
   0625 C5                 2150 	push	bc
   0626 D5                 2151 	push	de
   0627 E5                 2152 	push	hl
   0628 FD E5              2153 	push	iy
                           2154 ;demo.c:159: DI;
   062A F3                 2155 		di 
                           2156 ;demo.c:161: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              2157 	ld	a,#0x01
   062D F5                 2158 	push	af
   062E 33                 2159 	inc	sp
   062F CDr00s00           2160 	call	_vdp2_status
   0632 33                 2161 	inc	sp
   0633 4D                 2162 	ld	c,l
   0634 21 00 00           2163 	ld	hl,#0x0000
   0637 E5                 2164 	push	hl
   0638 79                 2165 	ld	a,c
   0639 F5                 2166 	push	af
   063A 33                 2167 	inc	sp
   063B CDr00s00           2168 	call	_isNthBitSet
   063E F1                 2169 	pop	af
   063F 33                 2170 	inc	sp
   0640 44                 2171 	ld	b,h
   0641 4D                 2172 	ld	c,l
   0642 79                 2173 	ld	a,c
   0643 B0                 2174 	or	a,b
   0644 28 19              2175 	jr	Z,00102$
                           2176 ;demo.c:162: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r68s41           2177 	ld	hl,#_vbicount + 0
   0649 4E                 2178 	ld	c,(hl)
   064A 06 00              2179 	ld	b,#0x00
   064C 21r00s00           2180 	ld	hl,#_sintab
   064F 09                 2181 	add	hl,bc
   0650 7E                 2182 	ld	a,(hl)
   0651 F5                 2183 	push	af
   0652 33                 2184 	inc	sp
   0653 3E 17              2185 	ld	a,#0x17
   0655 F5                 2186 	push	af
   0656 33                 2187 	inc	sp
   0657 CDr00s00           2188 	call	_vdp_register
   065A F1                 2189 	pop	af
                           2190 ;demo.c:163: READ_VDP_STATUS;
   065B DB 99              2191 		in a,(#0x99) 
   065D 18 18              2192 	jr	00103$
   065F                    2193 00102$:
                           2194 ;demo.c:166: READ_VDP_STATUS;
   065F DB 99              2195 		in a,(#0x99) 
                           2196 ;demo.c:167: vbicount++;
   0661 FD 21r68s41        2197 	ld	iy,#_vbicount
   0665 FD 34 00           2198 	inc	0 (iy)
   0668 20 07              2199 	jr	NZ,00107$
   066A FD 21r68s41        2200 	ld	iy,#_vbicount
   066E FD 34 01           2201 	inc	1 (iy)
   0671                    2202 00107$:
                           2203 ;demo.c:170: PLY_Play();
   0671 CDr00s00           2204 	call	_PLY_Play
                           2205 ;demo.c:171: PLY_SendRegisters();
   0674 CDr00s00           2206 	call	_PLY_SendRegisters
   0677                    2207 00103$:
                           2208 ;demo.c:174: EI;
   0677 FB                 2209 		ei 
   0678 FD E1              2210 	pop	iy
   067A E1                 2211 	pop	hl
   067B D1                 2212 	pop	de
   067C C1                 2213 	pop	bc
   067D F1                 2214 	pop	af
   067E ED 4D              2215 	reti
   0680                    2216 _color_isr_end::
                           2217 ;demo.c:181: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2218 ;	---------------------------------
                           2219 ; Function ge5_load
                           2220 ; ---------------------------------
   0680                    2221 _ge5_load_start::
   0680                    2222 _ge5_load:
   0680 DD E5              2223 	push	ix
   0682 DD 21 00 00        2224 	ld	ix,#0
   0686 DD 39              2225 	add	ix,sp
   0688 21 D2 FF           2226 	ld	hl,#-46
   068B 39                 2227 	add	hl,sp
   068C F9                 2228 	ld	sp,hl
                           2229 ;demo.c:185: if(debugprint == 1) {
   068D DD 7E 09           2230 	ld	a,9 (ix)
   0690 D6 01              2231 	sub	a,#0x01
   0692 20 06              2232 	jr	NZ,00125$
   0694 DD 7E 0A           2233 	ld	a,10 (ix)
   0697 B7                 2234 	or	a,a
   0698 28 02              2235 	jr	Z,00126$
   069A                    2236 00125$:
   069A 18 1B              2237 	jr	00102$
   069C                    2238 00126$:
                           2239 ;demo.c:186: puts("loading ge5file: ");
   069C 21r7Bs07           2240 	ld	hl,#__str_0
   069F E5                 2241 	push	hl
   06A0 CDr00s00           2242 	call	_puts
   06A3 F1                 2243 	pop	af
                           2244 ;demo.c:187: puts(file_name);
   06A4 DD 6E 04           2245 	ld	l,4 (ix)
   06A7 DD 66 05           2246 	ld	h,5 (ix)
   06AA E5                 2247 	push	hl
   06AB CDr00s00           2248 	call	_puts
   06AE F1                 2249 	pop	af
                           2250 ;demo.c:188: puts("\r\n");
   06AF 21r8Ds07           2251 	ld	hl,#__str_1
   06B2 E5                 2252 	push	hl
   06B3 CDr00s00           2253 	call	_puts
   06B6 F1                 2254 	pop	af
   06B7                    2255 00102$:
                           2256 ;demo.c:191: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2257 	ld	hl,#0x0000
   06BA 39                 2258 	add	hl,sp
   06BB 4D                 2259 	ld	c,l
   06BC 44                 2260 	ld	b,h
   06BD 21 2E 00           2261 	ld	hl,#0x002E
   06C0 E5                 2262 	push	hl
   06C1 3E 00              2263 	ld	a,#0x00
   06C3 F5                 2264 	push	af
   06C4 33                 2265 	inc	sp
   06C5 C5                 2266 	push	bc
   06C6 CDr00s00           2267 	call	_memset
   06C9 F1                 2268 	pop	af
   06CA F1                 2269 	pop	af
   06CB 33                 2270 	inc	sp
                           2271 ;demo.c:193: f.record_size = 128;
   06CC 21 00 00           2272 	ld	hl,#0x0000
   06CF 39                 2273 	add	hl,sp
   06D0 4D                 2274 	ld	c,l
   06D1 44                 2275 	ld	b,h
   06D2 21 0F 00           2276 	ld	hl,#0x000F
   06D5 09                 2277 	add	hl,bc
   06D6 EB                 2278 	ex	de,hl
   06D7 3E 80              2279 	ld	a,#0x80
   06D9 12                 2280 	ld	(de),a
                           2281 ;demo.c:194: f.drive = 0;
   06DA 3E 00              2282 	ld	a,#0x00
   06DC 02                 2283 	ld	(bc),a
                           2284 ;demo.c:196: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2285 	ld	e,4 (ix)
   06E0 DD 56 05           2286 	ld	d,5 (ix)
   06E3 03                 2287 	inc	bc
   06E4 21 0B 00           2288 	ld	hl,#0x000B
   06E7 E5                 2289 	push	hl
   06E8 D5                 2290 	push	de
   06E9 C5                 2291 	push	bc
   06EA CDr00s00           2292 	call	_memcpy
   06ED F1                 2293 	pop	af
   06EE F1                 2294 	pop	af
   06EF F1                 2295 	pop	af
                           2296 ;demo.c:198: if (open(&f) != 0) return 0;
   06F0 21 00 00           2297 	ld	hl,#0x0000
   06F3 39                 2298 	add	hl,sp
   06F4 E5                 2299 	push	hl
   06F5 CDr00s00           2300 	call	_open
   06F8 F1                 2301 	pop	af
   06F9 AF                 2302 	xor	a,a
   06FA B5                 2303 	or	a,l
   06FB 28 05              2304 	jr	Z,00104$
   06FD 2E 00              2305 	ld	l,#0x00
   06FF C3r76s07           2306 	jp	00116$
   0702                    2307 00104$:
                           2308 ;demo.c:199: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2309 	ld	l,7 (ix)
   0705 DD 66 08           2310 	ld	h,8 (ix)
   0708 E5                 2311 	push	hl
   0709 DD 7E 06           2312 	ld	a,6 (ix)
   070C F5                 2313 	push	af
   070D 33                 2314 	inc	sp
   070E CDr00s00           2315 	call	_vdp_set_write_address
   0711 F1                 2316 	pop	af
   0712 33                 2317 	inc	sp
                           2318 ;demo.c:201: for (i = 0; i < 213; i++) {
   0713 0E 00              2319 	ld	c,#0x00
   0715                    2320 00112$:
   0715 79                 2321 	ld	a,c
   0716 D6 D5              2322 	sub	a,#0xD5
   0718 D2r6Bs07           2323 	jp	NC,00115$
                           2324 ;demo.c:202: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2325 	push	bc
   071C 21r48s40           2326 	ld	hl,#_scratch
   071F E5                 2327 	push	hl
   0720 CDr00s00           2328 	call	_block_set_data_ptr
   0723 F1                 2329 	pop	af
   0724 7D                 2330 	ld	a,l
   0725 C1                 2331 	pop	bc
   0726 47                 2332 	ld	b,a
   0727 B7                 2333 	or	a,a
   0728 28 05              2334 	jr	Z,00106$
   072A 2E 00              2335 	ld	l,#0x00
   072C C3r76s07           2336 	jp	00116$
   072F                    2337 00106$:
                           2338 ;demo.c:203: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2339 	ld	hl,#0x0000
   0732 39                 2340 	add	hl,sp
   0733 C5                 2341 	push	bc
   0734 E5                 2342 	push	hl
   0735 CDr00s00           2343 	call	_block_read
   0738 F1                 2344 	pop	af
   0739 7D                 2345 	ld	a,l
   073A C1                 2346 	pop	bc
   073B 47                 2347 	ld	b,a
   073C B7                 2348 	or	a,a
   073D 28 04              2349 	jr	Z,00108$
   073F 2E 00              2350 	ld	l,#0x00
   0741 18 33              2351 	jr	00116$
   0743                    2352 00108$:
                           2353 ;demo.c:205: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2354 	xor	a,a
   0744 B1                 2355 	or	a,c
   0745 20 11              2356 	jr	NZ,00110$
   0747 11r4Fs40           2357 	ld	de,#_scratch + 7
   074A C5                 2358 	push	bc
   074B 3E 79              2359 	ld	a,#0x79
   074D F5                 2360 	push	af
   074E 33                 2361 	inc	sp
   074F D5                 2362 	push	de
   0750 CDr00s00           2363 	call	_vdp_load_screen
   0753 F1                 2364 	pop	af
   0754 33                 2365 	inc	sp
   0755 C1                 2366 	pop	bc
   0756 18 0F              2367 	jr	00114$
   0758                    2368 00110$:
                           2369 ;demo.c:206: else vdp_load_screen(scratch, 128);
   0758 C5                 2370 	push	bc
   0759 3E 80              2371 	ld	a,#0x80
   075B F5                 2372 	push	af
   075C 33                 2373 	inc	sp
   075D 21r48s40           2374 	ld	hl,#_scratch
   0760 E5                 2375 	push	hl
   0761 CDr00s00           2376 	call	_vdp_load_screen
   0764 F1                 2377 	pop	af
   0765 33                 2378 	inc	sp
   0766 C1                 2379 	pop	bc
   0767                    2380 00114$:
                           2381 ;demo.c:201: for (i = 0; i < 213; i++) {
   0767 0C                 2382 	inc	c
   0768 C3r15s07           2383 	jp	00112$
   076B                    2384 00115$:
                           2385 ;demo.c:209: close(&f);
   076B 21 00 00           2386 	ld	hl,#0x0000
   076E 39                 2387 	add	hl,sp
   076F E5                 2388 	push	hl
   0770 CDr00s00           2389 	call	_close
   0773 F1                 2390 	pop	af
                           2391 ;demo.c:211: return 1;
   0774 2E 01              2392 	ld	l,#0x01
   0776                    2393 00116$:
   0776 DD F9              2394 	ld	sp,ix
   0778 DD E1              2395 	pop	ix
   077A C9                 2396 	ret
   077B                    2397 _ge5_load_end::
   077B                    2398 __str_0:
   077B 6C 6F 61 64 69 6E  2399 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2400 	.db 0x00
   078D                    2401 __str_1:
   078D 0D                 2402 	.db 0x0D
   078E 0A                 2403 	.db 0x0A
   078F 00                 2404 	.db 0x00
                           2405 ;demo.c:214: void scratch_clear() {
                           2406 ;	---------------------------------
                           2407 ; Function scratch_clear
                           2408 ; ---------------------------------
   0790                    2409 _scratch_clear_start::
   0790                    2410 _scratch_clear:
                           2411 ;demo.c:215: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2412 	ld	hl,#0x0080
   0793 E5                 2413 	push	hl
   0794 3E 00              2414 	ld	a,#0x00
   0796 F5                 2415 	push	af
   0797 33                 2416 	inc	sp
   0798 21r48s40           2417 	ld	hl,#_scratch
   079B E5                 2418 	push	hl
   079C CDr00s00           2419 	call	_memset
   079F F1                 2420 	pop	af
   07A0 F1                 2421 	pop	af
   07A1 33                 2422 	inc	sp
   07A2 C9                 2423 	ret
   07A3                    2424 _scratch_clear_end::
                           2425 ;demo.c:218: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2426 ;	---------------------------------
                           2427 ; Function pal_load
                           2428 ; ---------------------------------
   07A3                    2429 _pal_load_start::
   07A3                    2430 _pal_load:
   07A3 DD E5              2431 	push	ix
   07A5 DD 21 00 00        2432 	ld	ix,#0
   07A9 DD 39              2433 	add	ix,sp
   07AB 21 D2 FF           2434 	ld	hl,#-46
   07AE 39                 2435 	add	hl,sp
   07AF F9                 2436 	ld	sp,hl
                           2437 ;demo.c:221: if(debugprint == 1) {
   07B0 DD 7E 07           2438 	ld	a,7 (ix)
   07B3 D6 01              2439 	sub	a,#0x01
   07B5 20 06              2440 	jr	NZ,00115$
   07B7 DD 7E 08           2441 	ld	a,8 (ix)
   07BA B7                 2442 	or	a,a
   07BB 28 02              2443 	jr	Z,00116$
   07BD                    2444 00115$:
   07BD 18 1B              2445 	jr	00102$
   07BF                    2446 00116$:
                           2447 ;demo.c:222: puts("loading palfile: ");
   07BF 21r6Ds08           2448 	ld	hl,#__str_2
   07C2 E5                 2449 	push	hl
   07C3 CDr00s00           2450 	call	_puts
   07C6 F1                 2451 	pop	af
                           2452 ;demo.c:223: puts(file_name);
   07C7 DD 6E 04           2453 	ld	l,4 (ix)
   07CA DD 66 05           2454 	ld	h,5 (ix)
   07CD E5                 2455 	push	hl
   07CE CDr00s00           2456 	call	_puts
   07D1 F1                 2457 	pop	af
                           2458 ;demo.c:224: puts("\r\n");
   07D2 21r7Fs08           2459 	ld	hl,#__str_3
   07D5 E5                 2460 	push	hl
   07D6 CDr00s00           2461 	call	_puts
   07D9 F1                 2462 	pop	af
   07DA                    2463 00102$:
                           2464 ;demo.c:227: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2465 	ld	hl,#0x0000
   07DD 39                 2466 	add	hl,sp
   07DE 4D                 2467 	ld	c,l
   07DF 44                 2468 	ld	b,h
   07E0 21 2E 00           2469 	ld	hl,#0x002E
   07E3 E5                 2470 	push	hl
   07E4 3E 00              2471 	ld	a,#0x00
   07E6 F5                 2472 	push	af
   07E7 33                 2473 	inc	sp
   07E8 C5                 2474 	push	bc
   07E9 CDr00s00           2475 	call	_memset
   07EC F1                 2476 	pop	af
   07ED F1                 2477 	pop	af
   07EE 33                 2478 	inc	sp
                           2479 ;demo.c:228: scratch_clear();
   07EF CDr90s07           2480 	call	_scratch_clear
                           2481 ;demo.c:230: f.record_size = ss;
   07F2 21 00 00           2482 	ld	hl,#0x0000
   07F5 39                 2483 	add	hl,sp
   07F6 4D                 2484 	ld	c,l
   07F7 44                 2485 	ld	b,h
   07F8 21 0F 00           2486 	ld	hl,#0x000F
   07FB 09                 2487 	add	hl,bc
   07FC EB                 2488 	ex	de,hl
   07FD DD 7E 06           2489 	ld	a,6 (ix)
   0800 12                 2490 	ld	(de),a
                           2491 ;demo.c:231: f.drive = 0;
   0801 3E 00              2492 	ld	a,#0x00
   0803 02                 2493 	ld	(bc),a
                           2494 ;demo.c:233: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2495 	ld	e,4 (ix)
   0807 DD 56 05           2496 	ld	d,5 (ix)
   080A 03                 2497 	inc	bc
   080B 21 0B 00           2498 	ld	hl,#0x000B
   080E E5                 2499 	push	hl
   080F D5                 2500 	push	de
   0810 C5                 2501 	push	bc
   0811 CDr00s00           2502 	call	_memcpy
   0814 F1                 2503 	pop	af
   0815 F1                 2504 	pop	af
   0816 F1                 2505 	pop	af
                           2506 ;demo.c:235: if (open(&f) != 0) return 0;
   0817 21 00 00           2507 	ld	hl,#0x0000
   081A 39                 2508 	add	hl,sp
   081B E5                 2509 	push	hl
   081C CDr00s00           2510 	call	_open
   081F F1                 2511 	pop	af
   0820 AF                 2512 	xor	a,a
   0821 B5                 2513 	or	a,l
   0822 28 04              2514 	jr	Z,00104$
   0824 2E 00              2515 	ld	l,#0x00
   0826 18 40              2516 	jr	00109$
   0828                    2517 00104$:
                           2518 ;demo.c:236: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21r48s40           2519 	ld	hl,#_scratch
   082B E5                 2520 	push	hl
   082C CDr00s00           2521 	call	_block_set_data_ptr
   082F F1                 2522 	pop	af
   0830 AF                 2523 	xor	a,a
   0831 B5                 2524 	or	a,l
   0832 28 04              2525 	jr	Z,00106$
   0834 2E 00              2526 	ld	l,#0x00
   0836 18 30              2527 	jr	00109$
   0838                    2528 00106$:
                           2529 ;demo.c:237: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2530 	ld	hl,#0x0000
   083B 39                 2531 	add	hl,sp
   083C E5                 2532 	push	hl
   083D CDr00s00           2533 	call	_block_read
   0840 F1                 2534 	pop	af
   0841 AF                 2535 	xor	a,a
   0842 B5                 2536 	or	a,l
   0843 28 04              2537 	jr	Z,00108$
   0845 2E 00              2538 	ld	l,#0x00
   0847 18 1F              2539 	jr	00109$
   0849                    2540 00108$:
                           2541 ;demo.c:239: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2542 	ld	c,6 (ix)
   084C 06 00              2543 	ld	b,#0x00
   084E 11r4Fs40           2544 	ld	de,#_scratch + 7
   0851 C5                 2545 	push	bc
   0852 D5                 2546 	push	de
   0853 21rC8s40           2547 	ld	hl,#_cur_palette
   0856 E5                 2548 	push	hl
   0857 CDr00s00           2549 	call	_memcpy
   085A F1                 2550 	pop	af
   085B F1                 2551 	pop	af
   085C F1                 2552 	pop	af
                           2553 ;demo.c:241: close(&f);
   085D 21 00 00           2554 	ld	hl,#0x0000
   0860 39                 2555 	add	hl,sp
   0861 E5                 2556 	push	hl
   0862 CDr00s00           2557 	call	_close
   0865 F1                 2558 	pop	af
                           2559 ;demo.c:242: return 1;
   0866 2E 01              2560 	ld	l,#0x01
   0868                    2561 00109$:
   0868 DD F9              2562 	ld	sp,ix
   086A DD E1              2563 	pop	ix
   086C C9                 2564 	ret
   086D                    2565 _pal_load_end::
   086D                    2566 __str_2:
   086D 6C 6F 61 64 69 6E  2567 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2568 	.db 0x00
   087F                    2569 __str_3:
   087F 0D                 2570 	.db 0x0D
   0880 0A                 2571 	.db 0x0A
   0881 00                 2572 	.db 0x00
                           2573 ;demo.c:246: void pause() {
                           2574 ;	---------------------------------
                           2575 ; Function pause
                           2576 ; ---------------------------------
   0882                    2577 _pause_start::
   0882                    2578 _pause:
                           2579 ;demo.c:247: uint8_t i,j,k = 0;
                           2580 ;demo.c:248: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2581 	ld	bc,#0x0000
   0885                    2582 00104$:
   0885 78                 2583 	ld	a,b
   0886 D6 FF              2584 	sub	a,#0xFF
   0888 D0                 2585 	ret	NC
                           2586 ;demo.c:249: for (j = 0; j < 255; j++) {
   0889 59                 2587 	ld	e,c
   088A 16 FF              2588 	ld	d,#0xFF
   088C                    2589 00103$:
                           2590 ;demo.c:250: k++;
   088C 1C                 2591 	inc	e
   088D 15                 2592 	dec	d
                           2593 ;demo.c:249: for (j = 0; j < 255; j++) {
   088E AF                 2594 	xor	a,a
   088F B2                 2595 	or	a,d
   0890 20 FA              2596 	jr	NZ,00103$
                           2597 ;demo.c:248: for (i = 0; i < 255; i++) {	
   0892 4B                 2598 	ld	c,e
   0893 04                 2599 	inc	b
   0894 18 EF              2600 	jr	00104$
   0896                    2601 _pause_end::
                           2602 ;demo.c:256: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2603 ;	---------------------------------
                           2604 ; Function raw_load
                           2605 ; ---------------------------------
   0896                    2606 _raw_load_start::
   0896                    2607 _raw_load:
   0896 DD E5              2608 	push	ix
   0898 DD 21 00 00        2609 	ld	ix,#0
   089C DD 39              2610 	add	ix,sp
   089E 21 D2 FF           2611 	ld	hl,#-46
   08A1 39                 2612 	add	hl,sp
   08A2 F9                 2613 	ld	sp,hl
                           2614 ;demo.c:261: if(debugprint == 1) {
   08A3 DD 7E 0A           2615 	ld	a,10 (ix)
   08A6 D6 01              2616 	sub	a,#0x01
   08A8 20 06              2617 	jr	NZ,00120$
   08AA DD 7E 0B           2618 	ld	a,11 (ix)
   08AD B7                 2619 	or	a,a
   08AE 28 02              2620 	jr	Z,00121$
   08B0                    2621 00120$:
   08B0 18 1B              2622 	jr	00102$
   08B2                    2623 00121$:
                           2624 ;demo.c:262: puts("loading rawfile: ");
   08B2 21r84s09           2625 	ld	hl,#__str_4
   08B5 E5                 2626 	push	hl
   08B6 CDr00s00           2627 	call	_puts
   08B9 F1                 2628 	pop	af
                           2629 ;demo.c:263: puts(file_name);
   08BA DD 6E 04           2630 	ld	l,4 (ix)
   08BD DD 66 05           2631 	ld	h,5 (ix)
   08C0 E5                 2632 	push	hl
   08C1 CDr00s00           2633 	call	_puts
   08C4 F1                 2634 	pop	af
                           2635 ;demo.c:264: puts("\r\n");
   08C5 21r96s09           2636 	ld	hl,#__str_5
   08C8 E5                 2637 	push	hl
   08C9 CDr00s00           2638 	call	_puts
   08CC F1                 2639 	pop	af
   08CD                    2640 00102$:
                           2641 ;demo.c:267: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2642 	ld	hl,#0x0000
   08D0 39                 2643 	add	hl,sp
   08D1 4D                 2644 	ld	c,l
   08D2 44                 2645 	ld	b,h
   08D3 21 2E 00           2646 	ld	hl,#0x002E
   08D6 E5                 2647 	push	hl
   08D7 3E 00              2648 	ld	a,#0x00
   08D9 F5                 2649 	push	af
   08DA 33                 2650 	inc	sp
   08DB C5                 2651 	push	bc
   08DC CDr00s00           2652 	call	_memset
   08DF F1                 2653 	pop	af
   08E0 F1                 2654 	pop	af
   08E1 33                 2655 	inc	sp
                           2656 ;demo.c:268: scratch_clear();
   08E2 CDr90s07           2657 	call	_scratch_clear
                           2658 ;demo.c:270: f.record_size = 128;
   08E5 21 00 00           2659 	ld	hl,#0x0000
   08E8 39                 2660 	add	hl,sp
   08E9 4D                 2661 	ld	c,l
   08EA 44                 2662 	ld	b,h
   08EB 21 0F 00           2663 	ld	hl,#0x000F
   08EE 09                 2664 	add	hl,bc
   08EF EB                 2665 	ex	de,hl
   08F0 3E 80              2666 	ld	a,#0x80
   08F2 12                 2667 	ld	(de),a
                           2668 ;demo.c:271: f.drive = 0;
   08F3 3E 00              2669 	ld	a,#0x00
   08F5 02                 2670 	ld	(bc),a
                           2671 ;demo.c:273: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2672 	ld	e,4 (ix)
   08F9 DD 56 05           2673 	ld	d,5 (ix)
   08FC 03                 2674 	inc	bc
   08FD 21 0B 00           2675 	ld	hl,#0x000B
   0900 E5                 2676 	push	hl
   0901 D5                 2677 	push	de
   0902 C5                 2678 	push	bc
   0903 CDr00s00           2679 	call	_memcpy
   0906 F1                 2680 	pop	af
   0907 F1                 2681 	pop	af
   0908 F1                 2682 	pop	af
                           2683 ;demo.c:275: if (open(&f) != 0) return 0;
   0909 21 00 00           2684 	ld	hl,#0x0000
   090C 39                 2685 	add	hl,sp
   090D E5                 2686 	push	hl
   090E CDr00s00           2687 	call	_open
   0911 F1                 2688 	pop	af
   0912 AF                 2689 	xor	a,a
   0913 B5                 2690 	or	a,l
   0914 28 05              2691 	jr	Z,00119$
   0916 2E 00              2692 	ld	l,#0x00
   0918 C3r7Fs09           2693 	jp	00112$
                           2694 ;demo.c:277: while(total < size) {
   091B                    2695 00119$:
   091B 01 00 00           2696 	ld	bc,#0x0000
   091E                    2697 00109$:
   091E 79                 2698 	ld	a,c
   091F DD 96 06           2699 	sub	a,6 (ix)
   0922 78                 2700 	ld	a,b
   0923 DD 9E 07           2701 	sbc	a,7 (ix)
   0926 F2r74s09           2702 	jp	P,00111$
                           2703 ;demo.c:278: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2704 	push	bc
   092A 21r48s40           2705 	ld	hl,#_scratch
   092D E5                 2706 	push	hl
   092E CDr00s00           2707 	call	_block_set_data_ptr
   0931 F1                 2708 	pop	af
   0932 5D                 2709 	ld	e,l
   0933 C1                 2710 	pop	bc
   0934 AF                 2711 	xor	a,a
   0935 B3                 2712 	or	a,e
   0936 28 04              2713 	jr	Z,00106$
   0938 2E 00              2714 	ld	l,#0x00
   093A 18 43              2715 	jr	00112$
   093C                    2716 00106$:
                           2717 ;demo.c:279: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2718 	ld	hl,#0x0000
   093F 39                 2719 	add	hl,sp
   0940 C5                 2720 	push	bc
   0941 E5                 2721 	push	hl
   0942 CDr00s00           2722 	call	_block_read
   0945 F1                 2723 	pop	af
   0946 5D                 2724 	ld	e,l
   0947 C1                 2725 	pop	bc
   0948 AF                 2726 	xor	a,a
   0949 B3                 2727 	or	a,e
   094A 28 04              2728 	jr	Z,00108$
   094C 2E 00              2729 	ld	l,#0x00
   094E 18 2F              2730 	jr	00112$
   0950                    2731 00108$:
                           2732 ;demo.c:281: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2733 	ld	a,8 (ix)
   0953 81                 2734 	add	a,c
   0954 5F                 2735 	ld	e,a
   0955 DD 7E 09           2736 	ld	a,9 (ix)
   0958 88                 2737 	adc	a,b
   0959 57                 2738 	ld	d,a
   095A C5                 2739 	push	bc
   095B 21 80 00           2740 	ld	hl,#0x0080
   095E E5                 2741 	push	hl
   095F 21r48s40           2742 	ld	hl,#_scratch
   0962 E5                 2743 	push	hl
   0963 D5                 2744 	push	de
   0964 CDr00s00           2745 	call	_memcpy
   0967 F1                 2746 	pop	af
   0968 F1                 2747 	pop	af
   0969 F1                 2748 	pop	af
   096A C1                 2749 	pop	bc
                           2750 ;demo.c:283: total+=incr;
   096B 21 80 00           2751 	ld	hl,#0x0080
   096E 09                 2752 	add	hl,bc
   096F 4D                 2753 	ld	c,l
   0970 44                 2754 	ld	b,h
   0971 C3r1Es09           2755 	jp	00109$
   0974                    2756 00111$:
                           2757 ;demo.c:286: close(&f);
   0974 21 00 00           2758 	ld	hl,#0x0000
   0977 39                 2759 	add	hl,sp
   0978 E5                 2760 	push	hl
   0979 CDr00s00           2761 	call	_close
   097C F1                 2762 	pop	af
                           2763 ;demo.c:288: return 1;
   097D 2E 01              2764 	ld	l,#0x01
   097F                    2765 00112$:
   097F DD F9              2766 	ld	sp,ix
   0981 DD E1              2767 	pop	ix
   0983 C9                 2768 	ret
   0984                    2769 _raw_load_end::
   0984                    2770 __str_4:
   0984 6C 6F 61 64 69 6E  2771 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2772 	.db 0x00
   0996                    2773 __str_5:
   0996 0D                 2774 	.db 0x0D
   0997 0A                 2775 	.db 0x0A
   0998 00                 2776 	.db 0x00
                           2777 ;demo.c:291: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2778 ;	---------------------------------
                           2779 ; Function pck_load
                           2780 ; ---------------------------------
   0999                    2781 _pck_load_start::
   0999                    2782 _pck_load:
   0999 DD E5              2783 	push	ix
   099B DD 21 00 00        2784 	ld	ix,#0
   099F DD 39              2785 	add	ix,sp
                           2786 ;demo.c:292: if(debugprint == 1) {
   09A1 DD 7E 0C           2787 	ld	a,12 (ix)
   09A4 D6 01              2788 	sub	a,#0x01
   09A6 20 06              2789 	jr	NZ,00106$
   09A8 DD 7E 0D           2790 	ld	a,13 (ix)
   09AB B7                 2791 	or	a,a
   09AC 28 02              2792 	jr	Z,00107$
   09AE                    2793 00106$:
   09AE 18 1B              2794 	jr	00102$
   09B0                    2795 00107$:
                           2796 ;demo.c:293: puts("loading pckfile: ");
   09B0 21r12s0A           2797 	ld	hl,#__str_6
   09B3 E5                 2798 	push	hl
   09B4 CDr00s00           2799 	call	_puts
   09B7 F1                 2800 	pop	af
                           2801 ;demo.c:294: puts(file_name);
   09B8 DD 6E 04           2802 	ld	l,4 (ix)
   09BB DD 66 05           2803 	ld	h,5 (ix)
   09BE E5                 2804 	push	hl
   09BF CDr00s00           2805 	call	_puts
   09C2 F1                 2806 	pop	af
                           2807 ;demo.c:295: puts("\r\n");
   09C3 21r24s0A           2808 	ld	hl,#__str_7
   09C6 E5                 2809 	push	hl
   09C7 CDr00s00           2810 	call	_puts
   09CA F1                 2811 	pop	af
   09CB                    2812 00102$:
                           2813 ;demo.c:297: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2814 	ld	c,6 (ix)
   09CE DD 46 07           2815 	ld	b,7 (ix)
   09D1 C5                 2816 	push	bc
   09D2 C5                 2817 	push	bc
   09D3 3E 00              2818 	ld	a,#0x00
   09D5 F5                 2819 	push	af
   09D6 33                 2820 	inc	sp
   09D7 21rC8s01           2821 	ld	hl,#_packbuffer
   09DA E5                 2822 	push	hl
   09DB CDr00s00           2823 	call	_memset
   09DE F1                 2824 	pop	af
   09DF F1                 2825 	pop	af
   09E0 33                 2826 	inc	sp
   09E1 C1                 2827 	pop	bc
                           2828 ;demo.c:298: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2829 	ld	hl,#0x0000
   09E5 E5                 2830 	push	hl
   09E6 21rC8s01           2831 	ld	hl,#_packbuffer
   09E9 E5                 2832 	push	hl
   09EA C5                 2833 	push	bc
   09EB DD 6E 04           2834 	ld	l,4 (ix)
   09EE DD 66 05           2835 	ld	h,5 (ix)
   09F1 E5                 2836 	push	hl
   09F2 CDr96s08           2837 	call	_raw_load
   09F5 F1                 2838 	pop	af
   09F6 F1                 2839 	pop	af
   09F7 F1                 2840 	pop	af
   09F8 F1                 2841 	pop	af
                           2842 ;demo.c:299: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2843 	ld	a,10 (ix)
   09FC F5                 2844 	push	af
   09FD 33                 2845 	inc	sp
   09FE DD 6E 08           2846 	ld	l,8 (ix)
   0A01 DD 66 09           2847 	ld	h,9 (ix)
   0A04 E5                 2848 	push	hl
   0A05 21rC8s01           2849 	ld	hl,#_packbuffer
   0A08 E5                 2850 	push	hl
   0A09 CDr00s00           2851 	call	_bitbuster
   0A0C F1                 2852 	pop	af
   0A0D F1                 2853 	pop	af
   0A0E 33                 2854 	inc	sp
   0A0F DD E1              2855 	pop	ix
   0A11 C9                 2856 	ret
   0A12                    2857 _pck_load_end::
   0A12                    2858 __str_6:
   0A12 6C 6F 61 64 69 6E  2859 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2860 	.db 0x00
   0A24                    2861 __str_7:
   0A24 0D                 2862 	.db 0x0D
   0A25 0A                 2863 	.db 0x0A
   0A26 00                 2864 	.db 0x00
                           2865 ;demo.c:302: void fadein() {
                           2866 ;	---------------------------------
                           2867 ; Function fadein
                           2868 ; ---------------------------------
   0A27                    2869 _fadein_start::
   0A27                    2870 _fadein:
   0A27 DD E5              2871 	push	ix
   0A29 DD 21 00 00        2872 	ld	ix,#0
   0A2D DD 39              2873 	add	ix,sp
   0A2F F5                 2874 	push	af
                           2875 ;demo.c:305: if (tick < 8) return;
   0A30 3Ar6As41           2876 	ld	a,(#_tick+0)
   0A33 D6 08              2877 	sub	a,#0x08
   0A35 3Ar6Bs41           2878 	ld	a,(#_tick+1)
   0A38 DE 00              2879 	sbc	a,#0x00
   0A3A F2r40s0A           2880 	jp	P,00102$
   0A3D C3rEEs0A           2881 	jp	00113$
   0A40                    2882 00102$:
                           2883 ;demo.c:307: tick = 0;
   0A40 21r6As41           2884 	ld	hl,#_tick + 0
   0A43 36 00              2885 	ld	(hl), #0x00
   0A45 21r6Bs41           2886 	ld	hl,#_tick + 1
   0A48 36 00              2887 	ld	(hl), #0x00
                           2888 ;demo.c:309: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2889 	ld	c,#0x00
   0A4C                    2890 00109$:
   0A4C 79                 2891 	ld	a,c
   0A4D D6 20              2892 	sub	a,#0x20
   0A4F D2rE6s0A           2893 	jp	NC,00112$
                           2894 ;demo.c:310: uint8_t r = scratch[i] >> 4;
   0A52 3Er48              2895 	ld	a,#<_scratch
   0A54 81                 2896 	add	a,c
   0A55 5F                 2897 	ld	e,a
   0A56 3Es40              2898 	ld	a,#>_scratch
   0A58 CE 00              2899 	adc	a,#0x00
   0A5A 57                 2900 	ld	d,a
   0A5B 1A                 2901 	ld	a,(de)
   0A5C 47                 2902 	ld	b,a
   0A5D 58                 2903 	ld	e,b
   0A5E CB 3B              2904 	srl	e
   0A60 CB 3B              2905 	srl	e
   0A62 CB 3B              2906 	srl	e
   0A64 CB 3B              2907 	srl	e
                           2908 ;demo.c:311: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2909 	ld	a,b
   0A67 E6 0F              2910 	and	a,#0x0F
   0A69 DD 77 FF           2911 	ld	-1 (ix),a
                           2912 ;demo.c:312: uint8_t g = scratch[i+1];
   0A6C 51                 2913 	ld	d,c
   0A6D 14                 2914 	inc	d
   0A6E 3Er48              2915 	ld	a,#<_scratch
   0A70 82                 2916 	add	a,d
   0A71 6F                 2917 	ld	l,a
   0A72 3Es40              2918 	ld	a,#>_scratch
   0A74 CE 00              2919 	adc	a,#0x00
   0A76 67                 2920 	ld	h,a
   0A77 56                 2921 	ld	d,(hl)
   0A78 DD 72 FE           2922 	ld	-2 (ix),d
                           2923 ;demo.c:314: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3ErC8              2924 	ld	a,#<_cur_palette
   0A7D 81                 2925 	add	a,c
   0A7E 6F                 2926 	ld	l,a
   0A7F 3Es40              2927 	ld	a,#>_cur_palette
   0A81 CE 00              2928 	adc	a,#0x00
   0A83 67                 2929 	ld	h,a
   0A84 56                 2930 	ld	d,(hl)
   0A85 CB 3A              2931 	srl	d
   0A87 CB 3A              2932 	srl	d
   0A89 CB 3A              2933 	srl	d
   0A8B CB 3A              2934 	srl	d
   0A8D 7B                 2935 	ld	a,e
   0A8E 92                 2936 	sub	a,d
   0A8F 30 01              2937 	jr	NC,00104$
   0A91 1C                 2938 	inc	e
   0A92                    2939 00104$:
                           2940 ;demo.c:315: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3ErC8              2941 	ld	a,#<_cur_palette
   0A94 81                 2942 	add	a,c
   0A95 6F                 2943 	ld	l,a
   0A96 3Es40              2944 	ld	a,#>_cur_palette
   0A98 CE 00              2945 	adc	a,#0x00
   0A9A 67                 2946 	ld	h,a
   0A9B 7E                 2947 	ld	a,(hl)
   0A9C E6 0F              2948 	and	a,#0x0F
   0A9E 47                 2949 	ld	b,a
   0A9F DD 7E FF           2950 	ld	a,-1 (ix)
   0AA2 90                 2951 	sub	a,b
   0AA3 30 03              2952 	jr	NC,00106$
   0AA5 DD 34 FF           2953 	inc	-1 (ix)
   0AA8                    2954 00106$:
                           2955 ;demo.c:317: scratch[i] = (r << 4) | b;
   0AA8 3Er48              2956 	ld	a,#<_scratch
   0AAA 81                 2957 	add	a,c
   0AAB 47                 2958 	ld	b,a
   0AAC 3Es40              2959 	ld	a,#>_scratch
   0AAE CE 00              2960 	adc	a,#0x00
   0AB0 57                 2961 	ld	d,a
   0AB1 7B                 2962 	ld	a,e
   0AB2 07                 2963 	rlca
   0AB3 07                 2964 	rlca
   0AB4 07                 2965 	rlca
   0AB5 07                 2966 	rlca
   0AB6 E6 F0              2967 	and	a,#0xF0
   0AB8 DD B6 FF           2968 	or	a,-1 (ix)
   0ABB 68                 2969 	ld	l,b
   0ABC 62                 2970 	ld	h,d
   0ABD 77                 2971 	ld	(hl),a
                           2972 ;demo.c:318: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2973 	ld	b,c
   0ABF 04                 2974 	inc	b
   0AC0 3ErC8              2975 	ld	a,#<_cur_palette
   0AC2 80                 2976 	add	a,b
   0AC3 5F                 2977 	ld	e,a
   0AC4 3Es40              2978 	ld	a,#>_cur_palette
   0AC6 CE 00              2979 	adc	a,#0x00
   0AC8 57                 2980 	ld	d,a
   0AC9 1A                 2981 	ld	a,(de)
   0ACA 5F                 2982 	ld	e,a
   0ACB DD 7E FE           2983 	ld	a,-2 (ix)
   0ACE 93                 2984 	sub	a,e
   0ACF 30 10              2985 	jr	NC,00111$
   0AD1 3Er48              2986 	ld	a,#<_scratch
   0AD3 80                 2987 	add	a,b
   0AD4 47                 2988 	ld	b,a
   0AD5 3Es40              2989 	ld	a,#>_scratch
   0AD7 CE 00              2990 	adc	a,#0x00
   0AD9 5F                 2991 	ld	e,a
   0ADA 68                 2992 	ld	l,b
   0ADB 67                 2993 	ld	h,a
   0ADC 7E                 2994 	ld	a,(hl)
   0ADD 3C                 2995 	inc	a
   0ADE 68                 2996 	ld	l,b
   0ADF 63                 2997 	ld	h,e
   0AE0 77                 2998 	ld	(hl),a
   0AE1                    2999 00111$:
                           3000 ;demo.c:309: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 3001 	inc	c
   0AE2 0C                 3002 	inc	c
   0AE3 C3r4Cs0A           3003 	jp	00109$
   0AE6                    3004 00112$:
                           3005 ;demo.c:322: vdp_load_palette(scratch);
   0AE6 21r48s40           3006 	ld	hl,#_scratch
   0AE9 E5                 3007 	push	hl
   0AEA CDr00s00           3008 	call	_vdp_load_palette
   0AED F1                 3009 	pop	af
   0AEE                    3010 00113$:
   0AEE DD F9              3011 	ld	sp,ix
   0AF0 DD E1              3012 	pop	ix
   0AF2 C9                 3013 	ret
   0AF3                    3014 _fadein_end::
                           3015 ;demo.c:334: void do_ymmm() {
                           3016 ;	---------------------------------
                           3017 ; Function do_ymmm
                           3018 ; ---------------------------------
   0AF3                    3019 _do_ymmm_start::
   0AF3                    3020 _do_ymmm:
   0AF3 DD E5              3021 	push	ix
   0AF5 DD 21 00 00        3022 	ld	ix,#0
   0AF9 DD 39              3023 	add	ix,sp
   0AFB F5                 3024 	push	af
                           3025 ;demo.c:338: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              3026 	ld	a,#0x20
   0AFE FD 21r6As41        3027 	ld	iy,#_tick
   0B02 FD 96 00           3028 	sub	a,0 (iy)
   0B05 3E 00              3029 	ld	a,#0x00
   0B07 FD 21r6As41        3030 	ld	iy,#_tick
   0B0B FD 9E 01           3031 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           3032 	jp	P,00102$
   0B11 21r6As41           3033 	ld	hl,#_tick + 0
   0B14 36 00              3034 	ld	(hl), #0x00
   0B16 21r6Bs41           3035 	ld	hl,#_tick + 1
   0B19 36 00              3036 	ld	(hl), #0x00
   0B1B FD 21r85s41        3037 	ld	iy,#_flipper
   0B1F FD 34 00           3038 	inc	0 (iy)
   0B22 20 07              3039 	jr	NZ,00115$
   0B24 FD 21r85s41        3040 	ld	iy,#_flipper
   0B28 FD 34 01           3041 	inc	1 (iy)
   0B2B                    3042 00115$:
   0B2B                    3043 00102$:
                           3044 ;demo.c:339: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              3045 	ld	a,#0x0A
   0B2D FD 21r85s41        3046 	ld	iy,#_flipper
   0B31 FD 96 00           3047 	sub	a,0 (iy)
   0B34 3E 00              3048 	ld	a,#0x00
   0B36 FD 21r85s41        3049 	ld	iy,#_flipper
   0B3A FD 9E 01           3050 	sbc	a,1 (iy)
   0B3D F2r4As0B           3051 	jp	P,00104$
   0B40 21r85s41           3052 	ld	hl,#_flipper + 0
   0B43 36 00              3053 	ld	(hl), #0x00
   0B45 21r86s41           3054 	ld	hl,#_flipper + 1
   0B48 36 00              3055 	ld	(hl), #0x00
   0B4A                    3056 00104$:
                           3057 ;demo.c:341: ymmmf++;
   0B4A FD 21r87s41        3058 	ld	iy,#_ymmmf
   0B4E FD 34 00           3059 	inc	0 (iy)
   0B51 20 07              3060 	jr	NZ,00116$
   0B53 FD 21r87s41        3061 	ld	iy,#_ymmmf
   0B57 FD 34 01           3062 	inc	1 (iy)
   0B5A                    3063 00116$:
                           3064 ;demo.c:342: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r83s41           3065 	ld	hl,#_yofff + 0
   0B5D 36 00              3066 	ld	(hl), #0x00
   0B5F                    3067 00105$:
   0B5F 21r83s41           3068 	ld	hl,#_yofff + 0
   0B62 4E                 3069 	ld	c,(hl)
   0B63 06 00              3070 	ld	b,#0x00
   0B65 79                 3071 	ld	a,c
   0B66 D6 D2              3072 	sub	a,#0xD2
   0B68 78                 3073 	ld	a,b
   0B69 DE 00              3074 	sbc	a,#0x00
   0B6B F2rE4s0B           3075 	jp	P,00109$
                           3076 ;demo.c:343: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r87s41           3077 	ld	hl,#_ymmmf
   0B71 79                 3078 	ld	a,c
   0B72 86                 3079 	add	a,(hl)
   0B73 5F                 3080 	ld	e,a
   0B74 78                 3081 	ld	a,b
   0B75 23                 3082 	inc	hl
   0B76 8E                 3083 	adc	a,(hl)
   0B77 16 00              3084 	ld	d,#0x00
   0B79 CB 23              3085 	sla	e
   0B7B CB 12              3086 	rl	d
   0B7D 21r2Cs00           3087 	ld	hl,#_sintabx
   0B80 19                 3088 	add	hl,de
   0B81 5E                 3089 	ld	e,(hl)
   0B82 23                 3090 	inc	hl
   0B83 56                 3091 	ld	d,(hl)
   0B84 DD 73 FE           3092 	ld	-2 (ix),e
   0B87 DD 72 FF           3093 	ld	-1 (ix),d
                           3094 ;demo.c:346: cmd.source_x = 0;
   0B8A 21r6Cs41           3095 	ld	hl,#_cmd
   0B8D 36 00              3096 	ld	(hl),#0x00
   0B8F 23                 3097 	inc	hl
   0B90 36 00              3098 	ld	(hl),#0x00
                           3099 ;demo.c:347: cmd.source_y = 0+yofff;
   0B92 11r6Es41           3100 	ld	de,#_cmd + 2
   0B95 EB                 3101 	ex	de,hl
   0B96 71                 3102 	ld	(hl),c
   0B97 23                 3103 	inc	hl
   0B98 70                 3104 	ld	(hl),b
                           3105 ;demo.c:348: cmd.dest_x = xo;
   0B99 11r70s41           3106 	ld	de,#_cmd + 4
   0B9C EB                 3107 	ex	de,hl
   0B9D DD 7E FE           3108 	ld	a,-2 (ix)
   0BA0 77                 3109 	ld	(hl),a
   0BA1 23                 3110 	inc	hl
   0BA2 DD 7E FF           3111 	ld	a,-1 (ix)
   0BA5 77                 3112 	ld	(hl),a
                           3113 ;demo.c:349: cmd.dest_y = 3+yofff;
   0BA6 11r72s41           3114 	ld	de,#_cmd + 6
   0BA9 03                 3115 	inc	bc
   0BAA 03                 3116 	inc	bc
   0BAB 03                 3117 	inc	bc
   0BAC 6B                 3118 	ld	l,e
   0BAD 62                 3119 	ld	h,d
   0BAE 71                 3120 	ld	(hl),c
   0BAF 23                 3121 	inc	hl
   0BB0 70                 3122 	ld	(hl),b
                           3123 ;demo.c:350: cmd.size_x = 256;
   0BB1 21r74s41           3124 	ld	hl, #_cmd + 8
   0BB4 36 00              3125 	ld	(hl),#0x00
   0BB6 23                 3126 	inc	hl
   0BB7 36 01              3127 	ld	(hl),#0x01
                           3128 ;demo.c:351: cmd.size_y = 1;
   0BB9 21r76s41           3129 	ld	hl, #_cmd + 10
   0BBC 36 01              3130 	ld	(hl),#0x01
   0BBE 23                 3131 	inc	hl
   0BBF 36 00              3132 	ld	(hl),#0x00
                           3133 ;demo.c:352: cmd.data = 0;
                           3134 ;demo.c:353: cmd.argument = 0;
   0BC1 3E 00              3135 	ld	a,#0x00
   0BC3 32r78s41           3136 	ld	(#_cmd + 12),a
   0BC6 32r79s41           3137 	ld	(#_cmd + 13),a
                           3138 ;demo.c:354: cmd.command = 0xD0;
   0BC9 3E D0              3139 	ld	a,#0xD0
   0BCB 32r7As41           3140 	ld	(#_cmd + 14),a
                           3141 ;demo.c:357: vdp_copier(&cmd);
   0BCE 21r6Cs41           3142 	ld	hl,#_cmd
   0BD1 E5                 3143 	push	hl
   0BD2 CDr00s00           3144 	call	_vdp_copier
   0BD5 F1                 3145 	pop	af
                           3146 ;demo.c:342: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r83s41           3147 	ld	hl,#_yofff + 0
   0BD9 4E                 3148 	ld	c,(hl)
   0BDA 21r83s41           3149 	ld	hl,#_yofff
   0BDD 79                 3150 	ld	a,c
   0BDE C6 02              3151 	add	a,#0x02
   0BE0 77                 3152 	ld	(hl),a
   0BE1 C3r5Fs0B           3153 	jp	00105$
   0BE4                    3154 00109$:
   0BE4 DD F9              3155 	ld	sp,ix
   0BE6 DD E1              3156 	pop	ix
   0BE8 C9                 3157 	ret
   0BE9                    3158 _do_ymmm_end::
                           3159 ;demo.c:374: void do_blocks() {
                           3160 ;	---------------------------------
                           3161 ; Function do_blocks
                           3162 ; ---------------------------------
   0BE9                    3163 _do_blocks_start::
   0BE9                    3164 _do_blocks:
   0BE9 DD E5              3165 	push	ix
   0BEB DD 21 00 00        3166 	ld	ix,#0
   0BEF DD 39              3167 	add	ix,sp
   0BF1 21 FA FF           3168 	ld	hl,#-6
   0BF4 39                 3169 	add	hl,sp
   0BF5 F9                 3170 	ld	sp,hl
                           3171 ;demo.c:376: int ys = 0;
   0BF6 DD 36 FC 00        3172 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3173 	ld	-3 (ix),#0x00
                           3174 ;demo.c:377: int ye = 0;
   0BFE DD 36 FA 00        3175 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3176 	ld	-5 (ix),#0x00
                           3177 ;demo.c:379: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3178 	ld	hl,#0x0017
   0C09 E5                 3179 	push	hl
   0C0A CDr00s00           3180 	call	_vdp_register
   0C0D F1                 3181 	pop	af
                           3182 ;demo.c:381: if (block_init == 0) {
   0C0E AF                 3183 	xor	a,a
   0C0F FD 21r89s41        3184 	ld	iy,#_block_init
   0C13 FD B6 00           3185 	or	a,0 (iy)
   0C16 C2r7Es0C           3186 	jp	NZ,00108$
                           3187 ;demo.c:383: vdp_set_screen5();
   0C19 CDr00s00           3188 	call	_vdp_set_screen5
                           3189 ;demo.c:385: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3190 	ld	hl,#0x5F02
   0C1F E5                 3191 	push	hl
   0C20 CDr00s00           3192 	call	_vdp_register
   0C23 F1                 3193 	pop	af
                           3194 ;demo.c:387: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3195 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3196 	ld	-1 (ix),#0x00
   0C2C                    3197 00110$:
   0C2C DD 7E FE           3198 	ld	a,-2 (ix)
   0C2F D6 10              3199 	sub	a,#0x10
   0C31 DD 7E FF           3200 	ld	a,-1 (ix)
   0C34 DE 00              3201 	sbc	a,#0x00
   0C36 F2r6Es0C           3202 	jp	P,00113$
   0C39 DD 4E FE           3203 	ld	c,-2 (ix)
   0C3C DD 46 FF           3204 	ld	b,-1 (ix)
   0C3F CB 21              3205 	sla	c
   0C41 CB 10              3206 	rl	b
   0C43 21r92s41           3207 	ld	hl,#_btab
   0C46 09                 3208 	add	hl,bc
   0C47 4D                 3209 	ld	c,l
   0C48 44                 3210 	ld	b,h
   0C49 DD 5E FE           3211 	ld	e,-2 (ix)
   0C4C DD 56 FF           3212 	ld	d,-1 (ix)
   0C4F CB 23              3213 	sla	e
   0C51 CB 12              3214 	rl	d
   0C53 CB 23              3215 	sla	e
   0C55 CB 12              3216 	rl	d
   0C57 CB 23              3217 	sla	e
   0C59 CB 12              3218 	rl	d
   0C5B CB 23              3219 	sla	e
   0C5D CB 12              3220 	rl	d
   0C5F 69                 3221 	ld	l,c
   0C60 60                 3222 	ld	h,b
   0C61 73                 3223 	ld	(hl),e
   0C62 23                 3224 	inc	hl
   0C63 72                 3225 	ld	(hl),d
   0C64 DD 34 FE           3226 	inc	-2 (ix)
   0C67 20 03              3227 	jr	NZ,00139$
   0C69 DD 34 FF           3228 	inc	-1 (ix)
   0C6C                    3229 00139$:
   0C6C 18 BE              3230 	jr	00110$
   0C6E                    3231 00113$:
                           3232 ;demo.c:388: vdp_load_palette(block_palette);
   0C6E 21rE8s40           3233 	ld	hl,#_block_palette
   0C71 E5                 3234 	push	hl
   0C72 CDr00s00           3235 	call	_vdp_load_palette
   0C75 F1                 3236 	pop	af
                           3237 ;demo.c:390: block_init = 1;
   0C76 21r89s41           3238 	ld	hl,#_block_init + 0
   0C79 36 01              3239 	ld	(hl), #0x01
   0C7B C3r07s0E           3240 	jp	00122$
   0C7E                    3241 00108$:
                           3242 ;demo.c:394: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3ArB2s41           3243 	ld	a,(#_flof+0)
   0C81 FD 21rB2s41        3244 	ld	iy,#_flof
   0C85 FD B6 01           3245 	or	a,1 (iy)
   0C88 20 10              3246 	jr	NZ,00102$
   0C8A DD 36 FC 00        3247 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3248 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3249 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3250 	ld	-5 (ix),#0x00
   0C9A                    3251 00102$:
                           3252 ;demo.c:395: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3ArB2s41           3253 	ld	a,(#_flof+0)
   0C9D D6 01              3254 	sub	a,#0x01
   0C9F 20 06              3255 	jr	NZ,00140$
   0CA1 3ArB3s41           3256 	ld	a,(#_flof+1)
   0CA4 B7                 3257 	or	a,a
   0CA5 28 02              3258 	jr	Z,00141$
   0CA7                    3259 00140$:
   0CA7 18 10              3260 	jr	00104$
   0CA9                    3261 00141$:
   0CA9 DD 36 FC 08        3262 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3263 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3264 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3265 	ld	-5 (ix),#0x00
   0CB9                    3266 00104$:
                           3267 ;demo.c:397: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r90s41        3268 	ld	iy,#_bty
   0CBD FD 36 00 03        3269 	ld	0 (iy),#0x03
   0CC1 FD 21r90s41        3270 	ld	iy,#_bty
   0CC5 FD 36 01 00        3271 	ld	1 (iy),#0x00
   0CC9                    3272 00118$:
   0CC9 3Ar90s41           3273 	ld	a,(#_bty+0)
   0CCC D6 0B              3274 	sub	a,#0x0B
   0CCE 3Ar91s41           3275 	ld	a,(#_bty+1)
   0CD1 DE 00              3276 	sbc	a,#0x00
   0CD3 F2rDEs0D           3277 	jp	P,00121$
                           3278 ;demo.c:398: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3279 	ld	a,-4 (ix)
   0CD9 FD 21r8Es41        3280 	ld	iy,#_btx
   0CDD FD 77 00           3281 	ld	0 (iy),a
   0CE0 DD 7E FD           3282 	ld	a,-3 (ix)
   0CE3 FD 21r8Es41        3283 	ld	iy,#_btx
   0CE7 FD 77 01           3284 	ld	1 (iy),a
   0CEA                    3285 00114$:
   0CEA 3Ar8Es41           3286 	ld	a,(#_btx+0)
   0CED DD 96 FA           3287 	sub	a,-6 (ix)
   0CF0 3Ar8Fs41           3288 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3289 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3290 	jp	P,00120$
                           3291 ;demo.c:399: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3292 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3293 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3294 	and	a,0 (iy)
   0D03 21r00s00           3295 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3296 	or	a,(hl)
   0D07 4F                 3297 	ld	c,a
   0D08 CB 39              3298 	srl	c
   0D0A 21r8As41           3299 	ld	hl,#_bsx + 0
   0D0D 71                 3300 	ld	(hl), c
   0D0E 21r8Bs41           3301 	ld	hl,#_bsx + 1
   0D11 36 00              3302 	ld	(hl), #0x00
                           3303 ;demo.c:400: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3304 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r8Cs41           3305 	ld	hl,#_bsy + 0
   0D19 77                 3306 	ld	(hl), a
   0D1A 21r8Ds41           3307 	ld	hl,#_bsy + 1
   0D1D 36 00              3308 	ld	(hl), #0x00
                           3309 ;demo.c:401: cmd.source_x = btab[bsx];
   0D1F 21r8As41           3310 	ld	hl,#_bsx + 0
   0D22 4E                 3311 	ld	c,(hl)
   0D23 21r8Bs41           3312 	ld	hl,#_bsx + 1
   0D26 46                 3313 	ld	b,(hl)
   0D27 CB 21              3314 	sla	c
   0D29 CB 10              3315 	rl	b
   0D2B 21r92s41           3316 	ld	hl,#_btab
   0D2E 09                 3317 	add	hl,bc
   0D2F 4E                 3318 	ld	c,(hl)
   0D30 23                 3319 	inc	hl
   0D31 46                 3320 	ld	b,(hl)
   0D32 21r6Cs41           3321 	ld	hl,#_cmd
   0D35 71                 3322 	ld	(hl),c
   0D36 23                 3323 	inc	hl
   0D37 70                 3324 	ld	(hl),b
                           3325 ;demo.c:402: cmd.source_y = 768+btab[bsy];
   0D38 01r6Es41           3326 	ld	bc,#_cmd + 2
   0D3B 21r8Cs41           3327 	ld	hl,#_bsy + 0
   0D3E 5E                 3328 	ld	e,(hl)
   0D3F 21r8Ds41           3329 	ld	hl,#_bsy + 1
   0D42 56                 3330 	ld	d,(hl)
   0D43 CB 23              3331 	sla	e
   0D45 CB 12              3332 	rl	d
   0D47 21r92s41           3333 	ld	hl,#_btab
   0D4A 19                 3334 	add	hl,de
   0D4B 5E                 3335 	ld	e,(hl)
   0D4C 23                 3336 	inc	hl
   0D4D 56                 3337 	ld	d,(hl)
   0D4E 21 00 03           3338 	ld	hl,#0x0300
   0D51 19                 3339 	add	hl,de
   0D52 EB                 3340 	ex	de,hl
   0D53 69                 3341 	ld	l,c
   0D54 60                 3342 	ld	h,b
   0D55 73                 3343 	ld	(hl),e
   0D56 23                 3344 	inc	hl
   0D57 72                 3345 	ld	(hl),d
                           3346 ;demo.c:403: cmd.dest_x = btab[btx];
   0D58 01r70s41           3347 	ld	bc,#_cmd + 4
   0D5B 21r8Es41           3348 	ld	hl,#_btx + 0
   0D5E 5E                 3349 	ld	e,(hl)
   0D5F 21r8Fs41           3350 	ld	hl,#_btx + 1
   0D62 56                 3351 	ld	d,(hl)
   0D63 CB 23              3352 	sla	e
   0D65 CB 12              3353 	rl	d
   0D67 21r92s41           3354 	ld	hl,#_btab
   0D6A 19                 3355 	add	hl,de
   0D6B 5E                 3356 	ld	e,(hl)
   0D6C 23                 3357 	inc	hl
   0D6D 56                 3358 	ld	d,(hl)
   0D6E 69                 3359 	ld	l,c
   0D6F 60                 3360 	ld	h,b
   0D70 73                 3361 	ld	(hl),e
   0D71 23                 3362 	inc	hl
   0D72 72                 3363 	ld	(hl),d
                           3364 ;demo.c:404: cmd.dest_y = 512+btab[bty];
   0D73 01r72s41           3365 	ld	bc,#_cmd + 6
   0D76 21r90s41           3366 	ld	hl,#_bty + 0
   0D79 5E                 3367 	ld	e,(hl)
   0D7A 21r91s41           3368 	ld	hl,#_bty + 1
   0D7D 56                 3369 	ld	d,(hl)
   0D7E CB 23              3370 	sla	e
   0D80 CB 12              3371 	rl	d
   0D82 21r92s41           3372 	ld	hl,#_btab
   0D85 19                 3373 	add	hl,de
   0D86 5E                 3374 	ld	e,(hl)
   0D87 23                 3375 	inc	hl
   0D88 56                 3376 	ld	d,(hl)
   0D89 21 00 02           3377 	ld	hl,#0x0200
   0D8C 19                 3378 	add	hl,de
   0D8D EB                 3379 	ex	de,hl
   0D8E 69                 3380 	ld	l,c
   0D8F 60                 3381 	ld	h,b
   0D90 73                 3382 	ld	(hl),e
   0D91 23                 3383 	inc	hl
   0D92 72                 3384 	ld	(hl),d
                           3385 ;demo.c:405: cmd.size_x = 16;
   0D93 21r74s41           3386 	ld	hl, #_cmd + 8
   0D96 36 10              3387 	ld	(hl),#0x10
   0D98 23                 3388 	inc	hl
   0D99 36 00              3389 	ld	(hl),#0x00
                           3390 ;demo.c:406: cmd.size_y = 16;
   0D9B 21r76s41           3391 	ld	hl, #_cmd + 10
   0D9E 36 10              3392 	ld	(hl),#0x10
   0DA0 23                 3393 	inc	hl
   0DA1 36 00              3394 	ld	(hl),#0x00
                           3395 ;demo.c:407: cmd.data = 0;
                           3396 ;demo.c:408: cmd.argument = 0x00;
   0DA3 3E 00              3397 	ld	a,#0x00
   0DA5 32r78s41           3398 	ld	(#_cmd + 12),a
   0DA8 32r79s41           3399 	ld	(#_cmd + 13),a
                           3400 ;demo.c:409: cmd.command = 0xD0;
   0DAB 3E D0              3401 	ld	a,#0xD0
   0DAD 32r7As41           3402 	ld	(#_cmd + 14),a
                           3403 ;demo.c:410: vdp_copier(&cmd);
   0DB0 21r6Cs41           3404 	ld	hl,#_cmd
   0DB3 E5                 3405 	push	hl
   0DB4 CDr00s00           3406 	call	_vdp_copier
   0DB7 F1                 3407 	pop	af
                           3408 ;demo.c:398: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r8Es41        3409 	ld	iy,#_btx
   0DBC FD 34 00           3410 	inc	0 (iy)
   0DBF 20 07              3411 	jr	NZ,00150$
   0DC1 FD 21r8Es41        3412 	ld	iy,#_btx
   0DC5 FD 34 01           3413 	inc	1 (iy)
   0DC8                    3414 00150$:
   0DC8 C3rEAs0C           3415 	jp	00114$
   0DCB                    3416 00120$:
                           3417 ;demo.c:397: for(bty=3;bty<11;bty++) {
   0DCB FD 21r90s41        3418 	ld	iy,#_bty
   0DCF FD 34 00           3419 	inc	0 (iy)
   0DD2 20 07              3420 	jr	NZ,00151$
   0DD4 FD 21r90s41        3421 	ld	iy,#_bty
   0DD8 FD 34 01           3422 	inc	1 (iy)
   0DDB                    3423 00151$:
   0DDB C3rC9s0C           3424 	jp	00118$
   0DDE                    3425 00121$:
                           3426 ;demo.c:414: flof++;
   0DDE FD 21rB2s41        3427 	ld	iy,#_flof
   0DE2 FD 34 00           3428 	inc	0 (iy)
   0DE5 20 07              3429 	jr	NZ,00152$
   0DE7 FD 21rB2s41        3430 	ld	iy,#_flof
   0DEB FD 34 01           3431 	inc	1 (iy)
   0DEE                    3432 00152$:
                           3433 ;demo.c:415: if (flof == 2) flof = 0;
   0DEE 3ArB2s41           3434 	ld	a,(#_flof+0)
   0DF1 D6 02              3435 	sub	a,#0x02
   0DF3 20 06              3436 	jr	NZ,00153$
   0DF5 3ArB3s41           3437 	ld	a,(#_flof+1)
   0DF8 B7                 3438 	or	a,a
   0DF9 28 02              3439 	jr	Z,00154$
   0DFB                    3440 00153$:
   0DFB 18 0A              3441 	jr	00122$
   0DFD                    3442 00154$:
   0DFD 21rB2s41           3443 	ld	hl,#_flof + 0
   0E00 36 00              3444 	ld	(hl), #0x00
   0E02 21rB3s41           3445 	ld	hl,#_flof + 1
   0E05 36 00              3446 	ld	(hl), #0x00
   0E07                    3447 00122$:
   0E07 DD F9              3448 	ld	sp,ix
   0E09 DD E1              3449 	pop	ix
   0E0B C9                 3450 	ret
   0E0C                    3451 _do_blocks_end::
                           3452 ;demo.c:423: void raster_effu() {
                           3453 ;	---------------------------------
                           3454 ; Function raster_effu
                           3455 ; ---------------------------------
   0E0C                    3456 _raster_effu_start::
   0E0C                    3457 _raster_effu:
                           3458 ;demo.c:424: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3459 	ld	hl,#0x0017
   0E0F E5                 3460 	push	hl
   0E10 CDr00s00           3461 	call	_vdp_register
   0E13 F1                 3462 	pop	af
                           3463 ;demo.c:425: waitVB();
   0E14 76                 3464 		halt 
                           3465 ;demo.c:427: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3466 	ld	hl,#0x4001
   0E18 E5                 3467 	push	hl
   0E19 CDr00s00           3468 	call	_vdp_register
                           3469 ;demo.c:429: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3470 	ld	a,#0x28
   0E1E 32rB4s41           3471 	ld	(#_linenum + 0),a
   0E21 F1                 3472 	pop	af
   0E22 FD 21rB4s41        3473 	ld	iy,#_linenum
   0E26 FD 36 01 00        3474 	ld	1 (iy),#0x00
   0E2A                    3475 00101$:
   0E2A 3ArB4s41           3476 	ld	a,(#_linenum+0)
   0E2D D6 D4              3477 	sub	a,#0xD4
   0E2F 3ArB5s41           3478 	ld	a,(#_linenum+1)
   0E32 DE 00              3479 	sbc	a,#0x00
   0E34 F2r65s0E           3480 	jp	P,00104$
                           3481 ;demo.c:430: vdp_register(19,linenum); // interrupt on line
   0E37 3ArB4s41           3482 	ld	a,(#_linenum+0)
   0E3A F5                 3483 	push	af
   0E3B 33                 3484 	inc	sp
   0E3C 3E 13              3485 	ld	a,#0x13
   0E3E F5                 3486 	push	af
   0E3F 33                 3487 	inc	sp
   0E40 CDr00s00           3488 	call	_vdp_register
   0E43 F1                 3489 	pop	af
                           3490 ;demo.c:431: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3491 	ld	hl,#0x1600
   0E47 E5                 3492 	push	hl
   0E48 CDr00s00           3493 	call	_vdp_register
   0E4B F1                 3494 	pop	af
                           3495 ;demo.c:433: waitVB();
   0E4C 76                 3496 		halt 
                           3497 ;demo.c:429: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21rB4s41           3498 	ld	hl,#_linenum
   0E50 7E                 3499 	ld	a,(hl)
   0E51 C6 04              3500 	add	a,#0x04
   0E53 23                 3501 	inc	hl
   0E54 2B                 3502 	dec	hl
   0E55 C5                 3503 	push	bc
   0E56 4F                 3504 	ld	c, a
   0E57 23                 3505 	inc	hl
   0E58 7E                 3506 	ld	a, (hl)
   0E59 47                 3507 	ld	b, a
   0E5A 79                 3508 	ld	a, c
   0E5B 2B                 3509 	dec	hl
   0E5C 77                 3510 	ld	(hl), a
   0E5D 78                 3511 	ld	a, b
   0E5E C1                 3512 	pop	bc
   0E5F CE 00              3513 	adc	a,#0x00
   0E61 23                 3514 	inc	hl
   0E62 77                 3515 	ld	(hl),a
   0E63 18 C5              3516 	jr	00101$
   0E65                    3517 00104$:
                           3518 ;demo.c:436: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3519 	ld	hl,#0x0017
   0E68 E5                 3520 	push	hl
   0E69 CDr00s00           3521 	call	_vdp_register
   0E6C F1                 3522 	pop	af
                           3523 ;demo.c:450: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3524 	ld	hl,#0x0600
   0E70 E5                 3525 	push	hl
   0E71 CDr00s00           3526 	call	_vdp_register
   0E74 F1                 3527 	pop	af
                           3528 ;demo.c:451: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3529 	ld	hl,#0x6001
   0E78 E5                 3530 	push	hl
   0E79 CDr00s00           3531 	call	_vdp_register
   0E7C F1                 3532 	pop	af
   0E7D C9                 3533 	ret
   0E7E                    3534 _raster_effu_end::
                           3535 ;demo.c:482: void do_letter(char cc) {
                           3536 ;	---------------------------------
                           3537 ; Function do_letter
                           3538 ; ---------------------------------
   0E7E                    3539 _do_letter_start::
   0E7E                    3540 _do_letter:
   0E7E DD E5              3541 	push	ix
   0E80 DD 21 00 00        3542 	ld	ix,#0
   0E84 DD 39              3543 	add	ix,sp
   0E86 F5                 3544 	push	af
                           3545 ;demo.c:483: int cidx = cc - 65;
   0E87 DD 4E 04           3546 	ld	c,4 (ix)
   0E8A DD 7E 04           3547 	ld	a,4 (ix)
   0E8D 17                 3548 	rla	
   0E8E 9F                 3549 	sbc	a,a
   0E8F 47                 3550 	ld	b,a
   0E90 79                 3551 	ld	a,c
   0E91 C6 BF              3552 	add	a,#0xBF
   0E93 DD 77 FE           3553 	ld	-2 (ix),a
   0E96 78                 3554 	ld	a,b
   0E97 CE FF              3555 	adc	a,#0xFF
   0E99 DD 77 FF           3556 	ld	-1 (ix),a
                           3557 ;demo.c:484: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3558 	ld	a,#<_font_x
   0E9E DD 86 FE           3559 	add	a,-2 (ix)
   0EA1 5F                 3560 	ld	e,a
   0EA2 3Es0F              3561 	ld	a,#>_font_x
   0EA4 DD 8E FF           3562 	adc	a,-1 (ix)
   0EA7 57                 3563 	ld	d,a
   0EA8 1A                 3564 	ld	a,(de)
   0EA9 5F                 3565 	ld	e,a
   0EAA 16 00              3566 	ld	d,#0x00
   0EAC 21 7F 00           3567 	ld	hl,#0x007F
   0EAF 19                 3568 	add	hl,de
   0EB0 EB                 3569 	ex	de,hl
   0EB1 21r6Cs41           3570 	ld	hl,#_cmd
   0EB4 73                 3571 	ld	(hl),e
   0EB5 23                 3572 	inc	hl
   0EB6 72                 3573 	ld	(hl),d
                           3574 ;demo.c:485: cmd.source_y = 512+font_y[cidx];
   0EB7 11r6Es41           3575 	ld	de,#_cmd + 2
   0EBA 3Er7C              3576 	ld	a,#<_font_y
   0EBC DD 86 FE           3577 	add	a,-2 (ix)
   0EBF 4F                 3578 	ld	c,a
   0EC0 3Es0F              3579 	ld	a,#>_font_y
   0EC2 DD 8E FF           3580 	adc	a,-1 (ix)
   0EC5 47                 3581 	ld	b,a
   0EC6 0A                 3582 	ld	a,(bc)
   0EC7 4F                 3583 	ld	c,a
   0EC8 06 00              3584 	ld	b,#0x00
   0ECA 21 00 02           3585 	ld	hl,#0x0200
   0ECD 09                 3586 	add	hl,bc
   0ECE 4D                 3587 	ld	c,l
   0ECF 44                 3588 	ld	b,h
   0ED0 EB                 3589 	ex	de,hl
   0ED1 71                 3590 	ld	(hl),c
   0ED2 23                 3591 	inc	hl
   0ED3 70                 3592 	ld	(hl),b
                           3593 ;demo.c:486: cmd.dest_x = lx;
   0ED4 01r70s41           3594 	ld	bc,#_cmd + 4
   0ED7 21rB6s41           3595 	ld	hl,#_lx + 0
   0EDA 5E                 3596 	ld	e,(hl)
   0EDB 16 00              3597 	ld	d,#0x00
   0EDD 69                 3598 	ld	l,c
   0EDE 60                 3599 	ld	h,b
   0EDF 73                 3600 	ld	(hl),e
   0EE0 23                 3601 	inc	hl
   0EE1 72                 3602 	ld	(hl),d
                           3603 ;demo.c:487: cmd.dest_y = ly;
   0EE2 01r72s41           3604 	ld	bc,#_cmd + 6
   0EE5 21rB7s41           3605 	ld	hl,#_ly + 0
   0EE8 5E                 3606 	ld	e,(hl)
   0EE9 16 00              3607 	ld	d,#0x00
   0EEB 69                 3608 	ld	l,c
   0EEC 60                 3609 	ld	h,b
   0EED 73                 3610 	ld	(hl),e
   0EEE 23                 3611 	inc	hl
   0EEF 72                 3612 	ld	(hl),d
                           3613 ;demo.c:488: cmd.size_x = font_w[cidx];
   0EF0 01r74s41           3614 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3615 	ld	a,#<_font_w
   0EF5 DD 86 FE           3616 	add	a,-2 (ix)
   0EF8 5F                 3617 	ld	e,a
   0EF9 3Es0F              3618 	ld	a,#>_font_w
   0EFB DD 8E FF           3619 	adc	a,-1 (ix)
   0EFE 57                 3620 	ld	d,a
   0EFF 1A                 3621 	ld	a,(de)
   0F00 5F                 3622 	ld	e,a
   0F01 16 00              3623 	ld	d,#0x00
   0F03 69                 3624 	ld	l,c
   0F04 60                 3625 	ld	h,b
   0F05 73                 3626 	ld	(hl),e
   0F06 23                 3627 	inc	hl
   0F07 72                 3628 	ld	(hl),d
                           3629 ;demo.c:489: cmd.size_y = 8;
   0F08 21r76s41           3630 	ld	hl, #_cmd + 10
   0F0B 36 08              3631 	ld	(hl),#0x08
   0F0D 23                 3632 	inc	hl
   0F0E 36 00              3633 	ld	(hl),#0x00
                           3634 ;demo.c:490: cmd.argument = 0x00;
   0F10 3E 00              3635 	ld	a,#0x00
   0F12 32r79s41           3636 	ld	(#_cmd + 13),a
                           3637 ;demo.c:491: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3638 	ld	a,#0x90
   0F17 32r7As41           3639 	ld	(#_cmd + 14),a
                           3640 ;demo.c:492: vdp_copier(&cmd);
   0F1A 21r6Cs41           3641 	ld	hl,#_cmd
   0F1D E5                 3642 	push	hl
   0F1E CDr00s00           3643 	call	_vdp_copier
   0F21 F1                 3644 	pop	af
                           3645 ;demo.c:493: lx+=font_w[cidx]-1;
   0F22 3ErBC              3646 	ld	a,#<_font_w
   0F24 DD 86 FE           3647 	add	a,-2 (ix)
   0F27 4F                 3648 	ld	c,a
   0F28 3Es0F              3649 	ld	a,#>_font_w
   0F2A DD 8E FF           3650 	adc	a,-1 (ix)
   0F2D 47                 3651 	ld	b,a
   0F2E 0A                 3652 	ld	a,(bc)
   0F2F 4F                 3653 	ld	c,a
   0F30 0D                 3654 	dec	c
   0F31 21rB6s41           3655 	ld	hl,#_lx
   0F34 7E                 3656 	ld	a,(hl)
   0F35 81                 3657 	add	a,c
   0F36 77                 3658 	ld	(hl),a
   0F37 DD F9              3659 	ld	sp,ix
   0F39 DD E1              3660 	pop	ix
   0F3B C9                 3661 	ret
   0F3C                    3662 _do_letter_end::
   0F3C                    3663 _font_x:
   0F3C 01                 3664 	.db #0x01
   0F3D 09                 3665 	.db #0x09
   0F3E 11                 3666 	.db #0x11
   0F3F 19                 3667 	.db #0x19
   0F40 21                 3668 	.db #0x21
   0F41 29                 3669 	.db #0x29
   0F42 31                 3670 	.db #0x31
   0F43 39                 3671 	.db #0x39
   0F44 41                 3672 	.db #0x41
   0F45 46                 3673 	.db #0x46
   0F46 4E                 3674 	.db #0x4E
   0F47 56                 3675 	.db #0x56
   0F48 5E                 3676 	.db #0x5E
   0F49 01                 3677 	.db #0x01
   0F4A 0A                 3678 	.db #0x0A
   0F4B 12                 3679 	.db #0x12
   0F4C 1A                 3680 	.db #0x1A
   0F4D 23                 3681 	.db #0x23
   0F4E 2B                 3682 	.db #0x2B
   0F4F 33                 3683 	.db #0x33
   0F50 3C                 3684 	.db #0x3C
   0F51 44                 3685 	.db #0x44
   0F52 4C                 3686 	.db #0x4C
   0F53 56                 3687 	.db #0x56
   0F54 5E                 3688 	.db #0x5E
   0F55 67                 3689 	.db #0x67
   0F56 00                 3690 	.db #0x00
   0F57 00                 3691 	.db #0x00
   0F58 00                 3692 	.db #0x00
   0F59 00                 3693 	.db #0x00
   0F5A 00                 3694 	.db #0x00
   0F5B 00                 3695 	.db #0x00
   0F5C 01                 3696 	.db #0x01
   0F5D 09                 3697 	.db #0x09
   0F5E 11                 3698 	.db #0x11
   0F5F 18                 3699 	.db #0x18
   0F60 20                 3700 	.db #0x20
   0F61 28                 3701 	.db #0x28
   0F62 2F                 3702 	.db #0x2F
   0F63 37                 3703 	.db #0x37
   0F64 3F                 3704 	.db #0x3F
   0F65 45                 3705 	.db #0x45
   0F66 4C                 3706 	.db #0x4C
   0F67 54                 3707 	.db #0x54
   0F68 5A                 3708 	.db #0x5A
   0F69 64                 3709 	.db #0x64
   0F6A 01                 3710 	.db #0x01
   0F6B 09                 3711 	.db #0x09
   0F6C 11                 3712 	.db #0x11
   0F6D 19                 3713 	.db #0x19
   0F6E 21                 3714 	.db #0x21
   0F6F 29                 3715 	.db #0x29
   0F70 30                 3716 	.db #0x30
   0F71 38                 3717 	.db #0x38
   0F72 40                 3718 	.db #0x40
   0F73 4A                 3719 	.db #0x4A
   0F74 52                 3720 	.db #0x52
   0F75 5A                 3721 	.db #0x5A
   0F76 00                 3722 	.db 0x00
   0F77 00                 3723 	.db 0x00
   0F78 00                 3724 	.db 0x00
   0F79 00                 3725 	.db 0x00
   0F7A 00                 3726 	.db 0x00
   0F7B 00                 3727 	.db 0x00
   0F7C                    3728 _font_y:
   0F7C 1C                 3729 	.db #0x1C
   0F7D 1C                 3730 	.db #0x1C
   0F7E 1C                 3731 	.db #0x1C
   0F7F 1C                 3732 	.db #0x1C
   0F80 1C                 3733 	.db #0x1C
   0F81 1C                 3734 	.db #0x1C
   0F82 1C                 3735 	.db #0x1C
   0F83 1C                 3736 	.db #0x1C
   0F84 1C                 3737 	.db #0x1C
   0F85 1C                 3738 	.db #0x1C
   0F86 1C                 3739 	.db #0x1C
   0F87 1C                 3740 	.db #0x1C
   0F88 1C                 3741 	.db #0x1C
   0F89 25                 3742 	.db #0x25
   0F8A 25                 3743 	.db #0x25
   0F8B 25                 3744 	.db #0x25
   0F8C 25                 3745 	.db #0x25
   0F8D 25                 3746 	.db #0x25
   0F8E 25                 3747 	.db #0x25
   0F8F 25                 3748 	.db #0x25
   0F90 25                 3749 	.db #0x25
   0F91 25                 3750 	.db #0x25
   0F92 25                 3751 	.db #0x25
   0F93 25                 3752 	.db #0x25
   0F94 25                 3753 	.db #0x25
   0F95 25                 3754 	.db #0x25
   0F96 00                 3755 	.db #0x00
   0F97 00                 3756 	.db #0x00
   0F98 00                 3757 	.db #0x00
   0F99 00                 3758 	.db #0x00
   0F9A 00                 3759 	.db #0x00
   0F9B 00                 3760 	.db #0x00
   0F9C 37                 3761 	.db #0x37
   0F9D 37                 3762 	.db #0x37
   0F9E 37                 3763 	.db #0x37
   0F9F 37                 3764 	.db #0x37
   0FA0 37                 3765 	.db #0x37
   0FA1 37                 3766 	.db #0x37
   0FA2 37                 3767 	.db #0x37
   0FA3 37                 3768 	.db #0x37
   0FA4 37                 3769 	.db #0x37
   0FA5 37                 3770 	.db #0x37
   0FA6 37                 3771 	.db #0x37
   0FA7 37                 3772 	.db #0x37
   0FA8 37                 3773 	.db #0x37
   0FA9 37                 3774 	.db #0x37
   0FAA 40                 3775 	.db #0x40
   0FAB 40                 3776 	.db #0x40
   0FAC 40                 3777 	.db #0x40
   0FAD 40                 3778 	.db #0x40
   0FAE 40                 3779 	.db #0x40
   0FAF 40                 3780 	.db #0x40
   0FB0 40                 3781 	.db #0x40
   0FB1 40                 3782 	.db #0x40
   0FB2 40                 3783 	.db #0x40
   0FB3 40                 3784 	.db #0x40
   0FB4 40                 3785 	.db #0x40
   0FB5 40                 3786 	.db #0x40
   0FB6 00                 3787 	.db 0x00
   0FB7 00                 3788 	.db 0x00
   0FB8 00                 3789 	.db 0x00
   0FB9 00                 3790 	.db 0x00
   0FBA 00                 3791 	.db 0x00
   0FBB 00                 3792 	.db 0x00
   0FBC                    3793 _font_w:
   0FBC 07                 3794 	.db #0x07
   0FBD 07                 3795 	.db #0x07
   0FBE 07                 3796 	.db #0x07
   0FBF 07                 3797 	.db #0x07
   0FC0 07                 3798 	.db #0x07
   0FC1 07                 3799 	.db #0x07
   0FC2 07                 3800 	.db #0x07
   0FC3 07                 3801 	.db #0x07
   0FC4 04                 3802 	.db #0x04
   0FC5 07                 3803 	.db #0x07
   0FC6 07                 3804 	.db #0x07
   0FC7 07                 3805 	.db #0x07
   0FC8 09                 3806 	.db #0x09
   0FC9 08                 3807 	.db #0x08
   0FCA 07                 3808 	.db #0x07
   0FCB 07                 3809 	.db #0x07
   0FCC 08                 3810 	.db #0x08
   0FCD 07                 3811 	.db #0x07
   0FCE 07                 3812 	.db #0x07
   0FCF 08                 3813 	.db #0x08
   0FD0 07                 3814 	.db #0x07
   0FD1 07                 3815 	.db #0x07
   0FD2 09                 3816 	.db #0x09
   0FD3 07                 3817 	.db #0x07
   0FD4 08                 3818 	.db #0x08
   0FD5 07                 3819 	.db #0x07
   0FD6 00                 3820 	.db #0x00
   0FD7 00                 3821 	.db #0x00
   0FD8 00                 3822 	.db #0x00
   0FD9 00                 3823 	.db #0x00
   0FDA 00                 3824 	.db #0x00
   0FDB 00                 3825 	.db #0x00
   0FDC 07                 3826 	.db #0x07
   0FDD 07                 3827 	.db #0x07
   0FDE 06                 3828 	.db #0x06
   0FDF 07                 3829 	.db #0x07
   0FE0 07                 3830 	.db #0x07
   0FE1 07                 3831 	.db #0x07
   0FE2 07                 3832 	.db #0x07
   0FE3 07                 3833 	.db #0x07
   0FE4 05                 3834 	.db #0x05
   0FE5 06                 3835 	.db #0x06
   0FE6 07                 3836 	.db #0x07
   0FE7 05                 3837 	.db #0x05
   0FE8 09                 3838 	.db #0x09
   0FE9 07                 3839 	.db #0x07
   0FEA 07                 3840 	.db #0x07
   0FEB 07                 3841 	.db #0x07
   0FEC 07                 3842 	.db #0x07
   0FED 07                 3843 	.db #0x07
   0FEE 07                 3844 	.db #0x07
   0FEF 06                 3845 	.db #0x06
   0FF0 07                 3846 	.db #0x07
   0FF1 07                 3847 	.db #0x07
   0FF2 09                 3848 	.db #0x09
   0FF3 07                 3849 	.db #0x07
   0FF4 07                 3850 	.db #0x07
   0FF5 07                 3851 	.db #0x07
   0FF6 00                 3852 	.db 0x00
   0FF7 00                 3853 	.db 0x00
   0FF8 00                 3854 	.db 0x00
   0FF9 00                 3855 	.db 0x00
   0FFA 00                 3856 	.db 0x00
   0FFB 00                 3857 	.db 0x00
                           3858 ;demo.c:497: void do_letter_tall(char cc) {
                           3859 ;	---------------------------------
                           3860 ; Function do_letter_tall
                           3861 ; ---------------------------------
   0FFC                    3862 _do_letter_tall_start::
   0FFC                    3863 _do_letter_tall:
   0FFC DD E5              3864 	push	ix
   0FFE DD 21 00 00        3865 	ld	ix,#0
   1002 DD 39              3866 	add	ix,sp
   1004 F5                 3867 	push	af
                           3868 ;demo.c:498: int cidx = cc - 65;
   1005 DD 4E 04           3869 	ld	c,4 (ix)
   1008 DD 7E 04           3870 	ld	a,4 (ix)
   100B 17                 3871 	rla	
   100C 9F                 3872 	sbc	a,a
   100D 47                 3873 	ld	b,a
   100E 79                 3874 	ld	a,c
   100F C6 BF              3875 	add	a,#0xBF
   1011 DD 77 FE           3876 	ld	-2 (ix),a
   1014 78                 3877 	ld	a,b
   1015 CE FF              3878 	adc	a,#0xFF
   1017 DD 77 FF           3879 	ld	-1 (ix),a
                           3880 ;demo.c:499: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3881 	ld	a,#<_font_x
   101C DD 86 FE           3882 	add	a,-2 (ix)
   101F 5F                 3883 	ld	e,a
   1020 3Es0F              3884 	ld	a,#>_font_x
   1022 DD 8E FF           3885 	adc	a,-1 (ix)
   1025 57                 3886 	ld	d,a
   1026 1A                 3887 	ld	a,(de)
   1027 5F                 3888 	ld	e,a
   1028 16 00              3889 	ld	d,#0x00
   102A 21 7F 00           3890 	ld	hl,#0x007F
   102D 19                 3891 	add	hl,de
   102E EB                 3892 	ex	de,hl
   102F 21r6Cs41           3893 	ld	hl,#_cmd
   1032 73                 3894 	ld	(hl),e
   1033 23                 3895 	inc	hl
   1034 72                 3896 	ld	(hl),d
                           3897 ;demo.c:500: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r6Es41           3898 	ld	de,#_cmd + 2
   1038 3Er7C              3899 	ld	a,#<_font_y
   103A DD 86 FE           3900 	add	a,-2 (ix)
   103D 4F                 3901 	ld	c,a
   103E 3Es0F              3902 	ld	a,#>_font_y
   1040 DD 8E FF           3903 	adc	a,-1 (ix)
   1043 47                 3904 	ld	b,a
   1044 0A                 3905 	ld	a,(bc)
   1045 4F                 3906 	ld	c,a
   1046 06 00              3907 	ld	b,#0x00
   1048 21 FF 01           3908 	ld	hl,#0x01FF
   104B 09                 3909 	add	hl,bc
   104C 4D                 3910 	ld	c,l
   104D 44                 3911 	ld	b,h
   104E EB                 3912 	ex	de,hl
   104F 71                 3913 	ld	(hl),c
   1050 23                 3914 	inc	hl
   1051 70                 3915 	ld	(hl),b
                           3916 ;demo.c:501: cmd.dest_x = lx;
   1052 01r70s41           3917 	ld	bc,#_cmd + 4
   1055 21rB6s41           3918 	ld	hl,#_lx + 0
   1058 5E                 3919 	ld	e,(hl)
   1059 16 00              3920 	ld	d,#0x00
   105B 69                 3921 	ld	l,c
   105C 60                 3922 	ld	h,b
   105D 73                 3923 	ld	(hl),e
   105E 23                 3924 	inc	hl
   105F 72                 3925 	ld	(hl),d
                           3926 ;demo.c:502: cmd.dest_y = ly;
   1060 01r72s41           3927 	ld	bc,#_cmd + 6
   1063 21rB7s41           3928 	ld	hl,#_ly + 0
   1066 5E                 3929 	ld	e,(hl)
   1067 16 00              3930 	ld	d,#0x00
   1069 69                 3931 	ld	l,c
   106A 60                 3932 	ld	h,b
   106B 73                 3933 	ld	(hl),e
   106C 23                 3934 	inc	hl
   106D 72                 3935 	ld	(hl),d
                           3936 ;demo.c:503: cmd.size_x = font_w[cidx];
   106E 01r74s41           3937 	ld	bc,#_cmd + 8
   1071 3ErBC              3938 	ld	a,#<_font_w
   1073 DD 86 FE           3939 	add	a,-2 (ix)
   1076 5F                 3940 	ld	e,a
   1077 3Es0F              3941 	ld	a,#>_font_w
   1079 DD 8E FF           3942 	adc	a,-1 (ix)
   107C 57                 3943 	ld	d,a
   107D 1A                 3944 	ld	a,(de)
   107E 5F                 3945 	ld	e,a
   107F 16 00              3946 	ld	d,#0x00
   1081 69                 3947 	ld	l,c
   1082 60                 3948 	ld	h,b
   1083 73                 3949 	ld	(hl),e
   1084 23                 3950 	inc	hl
   1085 72                 3951 	ld	(hl),d
                           3952 ;demo.c:504: cmd.size_y = 10;
   1086 21r76s41           3953 	ld	hl, #_cmd + 10
   1089 36 0A              3954 	ld	(hl),#0x0A
   108B 23                 3955 	inc	hl
   108C 36 00              3956 	ld	(hl),#0x00
                           3957 ;demo.c:505: cmd.argument = 0x00;
   108E 3E 00              3958 	ld	a,#0x00
   1090 32r79s41           3959 	ld	(#_cmd + 13),a
                           3960 ;demo.c:506: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3961 	ld	a,#0x90
   1095 32r7As41           3962 	ld	(#_cmd + 14),a
                           3963 ;demo.c:507: vdp_copier(&cmd);
   1098 21r6Cs41           3964 	ld	hl,#_cmd
   109B E5                 3965 	push	hl
   109C CDr00s00           3966 	call	_vdp_copier
   109F F1                 3967 	pop	af
                           3968 ;demo.c:508: lx+=font_w[cidx]-1;
   10A0 3ErBC              3969 	ld	a,#<_font_w
   10A2 DD 86 FE           3970 	add	a,-2 (ix)
   10A5 4F                 3971 	ld	c,a
   10A6 3Es0F              3972 	ld	a,#>_font_w
   10A8 DD 8E FF           3973 	adc	a,-1 (ix)
   10AB 47                 3974 	ld	b,a
   10AC 0A                 3975 	ld	a,(bc)
   10AD 4F                 3976 	ld	c,a
   10AE 0D                 3977 	dec	c
   10AF 21rB6s41           3978 	ld	hl,#_lx
   10B2 7E                 3979 	ld	a,(hl)
   10B3 81                 3980 	add	a,c
   10B4 77                 3981 	ld	(hl),a
   10B5 DD F9              3982 	ld	sp,ix
   10B7 DD E1              3983 	pop	ix
   10B9 C9                 3984 	ret
   10BA                    3985 _do_letter_tall_end::
                           3986 ;demo.c:511: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3987 ;	---------------------------------
                           3988 ; Function drawstr
                           3989 ; ---------------------------------
   10BA                    3990 _drawstr_start::
   10BA                    3991 _drawstr:
   10BA DD E5              3992 	push	ix
   10BC DD 21 00 00        3993 	ld	ix,#0
   10C0 DD 39              3994 	add	ix,sp
                           3995 ;demo.c:512: char* c = str;
   10C2 DD 4E 04           3996 	ld	c,4 (ix)
   10C5 DD 46 05           3997 	ld	b,5 (ix)
                           3998 ;demo.c:513: lx = x;
   10C8 DD 5E 06           3999 	ld	e,6 (ix)
   10CB 21rB6s41           4000 	ld	hl,#_lx + 0
   10CE 73                 4001 	ld	(hl), e
                           4002 ;demo.c:514: ly = y;
   10CF DD 7E 07           4003 	ld	a,7 (ix)
   10D2 21rB7s41           4004 	ld	hl,#_ly + 0
   10D5 77                 4005 	ld	(hl), a
                           4006 ;demo.c:515: while (*c) {
   10D6                    4007 00107$:
   10D6 0A                 4008 	ld	a,(bc)
   10D7 57                 4009 	ld	d,a
   10D8 B7                 4010 	or	a,a
   10D9 28 42              4011 	jr	Z,00110$
                           4012 ;demo.c:516: char ltr = *c++; 
   10DB 03                 4013 	inc	bc
                           4014 ;demo.c:517: if (ltr == ' ') lx+=4;
   10DC 7A                 4015 	ld	a,d
   10DD D6 20              4016 	sub	a,#0x20
   10DF 20 1E              4017 	jr	NZ,00105$
   10E1 FD 21rB6s41        4018 	ld	iy,#_lx
   10E5 FD 34 00           4019 	inc	0 (iy)
   10E8 FD 21rB6s41        4020 	ld	iy,#_lx
   10EC FD 34 00           4021 	inc	0 (iy)
   10EF FD 21rB6s41        4022 	ld	iy,#_lx
   10F3 FD 34 00           4023 	inc	0 (iy)
   10F6 FD 21rB6s41        4024 	ld	iy,#_lx
   10FA FD 34 00           4025 	inc	0 (iy)
   10FD 18 D7              4026 	jr	00107$
   10FF                    4027 00105$:
                           4028 ;demo.c:518: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 4029 	ld	a,d
   1100 D6 5F              4030 	sub	a,#0x5F
   1102 20 0D              4031 	jr	NZ,00102$
   1104 21rB7s41           4032 	ld	hl,#_ly
   1107 7E                 4033 	ld	a,(hl)
   1108 C6 09              4034 	add	a,#0x09
   110A 77                 4035 	ld	(hl),a
   110B 21rB6s41           4036 	ld	hl,#_lx + 0
   110E 73                 4037 	ld	(hl), e
   110F 18 C5              4038 	jr	00107$
   1111                    4039 00102$:
                           4040 ;demo.c:519: else do_letter(ltr);
   1111 C5                 4041 	push	bc
   1112 D5                 4042 	push	de
   1113 D5                 4043 	push	de
   1114 33                 4044 	inc	sp
   1115 CDr7Es0E           4045 	call	_do_letter
   1118 33                 4046 	inc	sp
   1119 D1                 4047 	pop	de
   111A C1                 4048 	pop	bc
   111B 18 B9              4049 	jr	00107$
   111D                    4050 00110$:
   111D DD E1              4051 	pop	ix
   111F C9                 4052 	ret
   1120                    4053 _drawstr_end::
                           4054 ;demo.c:523: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4055 ;	---------------------------------
                           4056 ; Function drawsine
                           4057 ; ---------------------------------
   1120                    4058 _drawsine_start::
   1120                    4059 _drawsine:
   1120 DD E5              4060 	push	ix
   1122 DD 21 00 00        4061 	ld	ix,#0
   1126 DD 39              4062 	add	ix,sp
   1128 3B                 4063 	dec	sp
                           4064 ;demo.c:524: char* c = str;
   1129 DD 4E 04           4065 	ld	c,4 (ix)
   112C DD 46 05           4066 	ld	b,5 (ix)
                           4067 ;demo.c:525: lx = x;
   112F DD 7E 06           4068 	ld	a,6 (ix)
   1132 21rB6s41           4069 	ld	hl,#_lx + 0
   1135 77                 4070 	ld	(hl), a
                           4071 ;demo.c:527: while (*c) {
   1136                    4072 00104$:
   1136 0A                 4073 	ld	a,(bc)
   1137 5F                 4074 	ld	e,a
   1138 B7                 4075 	or	a,a
   1139 CArADs11           4076 	jp	Z,00107$
                           4077 ;demo.c:528: char ltr = *c++; 
   113C 03                 4078 	inc	bc
   113D DD 73 FF           4079 	ld	-1 (ix),e
                           4080 ;demo.c:529: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21rB6s41           4081 	ld	hl,#_lx + 0
   1143 5E                 4082 	ld	e,(hl)
   1144 16 00              4083 	ld	d,#0x00
   1146 21r68s41           4084 	ld	hl,#_vbicount
   1149 7B                 4085 	ld	a,e
   114A 86                 4086 	add	a,(hl)
   114B 5F                 4087 	ld	e,a
   114C 7A                 4088 	ld	a,d
   114D 23                 4089 	inc	hl
   114E 8E                 4090 	adc	a,(hl)
   114F 57                 4091 	ld	d,a
   1150 CB 2A              4092 	sra	d
   1152 CB 1B              4093 	rr	e
   1154 16 00              4094 	ld	d,#0x00
   1156 CB 23              4095 	sla	e
   1158 CB 12              4096 	rl	d
   115A 21r2Cs00           4097 	ld	hl,#_sintabx
   115D 19                 4098 	add	hl,de
   115E 5E                 4099 	ld	e,(hl)
   115F 23                 4100 	inc	hl
   1160 56                 4101 	ld	d,(hl)
   1161 CB 3A              4102 	srl	d
   1163 CB 1B              4103 	rr	e
   1165 CB 3A              4104 	srl	d
   1167 CB 1B              4105 	rr	e
   1169 CB 3A              4106 	srl	d
   116B CB 1B              4107 	rr	e
   116D CB 3A              4108 	srl	d
   116F CB 1B              4109 	rr	e
   1171 21rB7s41           4110 	ld	hl,#_ly
   1174 DD 7E 07           4111 	ld	a,7 (ix)
   1177 83                 4112 	add	a,e
   1178 77                 4113 	ld	(hl),a
                           4114 ;demo.c:530: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           4115 	ld	a,-1 (ix)
   117C D6 20              4116 	sub	a,#0x20
   117E 20 1F              4117 	jr	NZ,00102$
   1180 FD 21rB6s41        4118 	ld	iy,#_lx
   1184 FD 34 00           4119 	inc	0 (iy)
   1187 FD 21rB6s41        4120 	ld	iy,#_lx
   118B FD 34 00           4121 	inc	0 (iy)
   118E FD 21rB6s41        4122 	ld	iy,#_lx
   1192 FD 34 00           4123 	inc	0 (iy)
   1195 FD 21rB6s41        4124 	ld	iy,#_lx
   1199 FD 34 00           4125 	inc	0 (iy)
   119C C3r36s11           4126 	jp	00104$
   119F                    4127 00102$:
                           4128 ;demo.c:531: else do_letter_tall(ltr);
   119F C5                 4129 	push	bc
   11A0 DD 7E FF           4130 	ld	a,-1 (ix)
   11A3 F5                 4131 	push	af
   11A4 33                 4132 	inc	sp
   11A5 CDrFCs0F           4133 	call	_do_letter_tall
   11A8 33                 4134 	inc	sp
   11A9 C1                 4135 	pop	bc
   11AA C3r36s11           4136 	jp	00104$
   11AD                    4137 00107$:
   11AD DD F9              4138 	ld	sp,ix
   11AF DD E1              4139 	pop	ix
   11B1 C9                 4140 	ret
   11B2                    4141 _drawsine_end::
                           4142 ;demo.c:535: void font() {
                           4143 ;	---------------------------------
                           4144 ; Function font
                           4145 ; ---------------------------------
   11B2                    4146 _font_start::
   11B2                    4147 _font:
                           4148 ;demo.c:537: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           4149 	ld	hl,#0x3C4A
   11B5 E5                 4150 	push	hl
   11B6 21rC0s11           4151 	ld	hl,#__str_8
   11B9 E5                 4152 	push	hl
   11BA CDrBAs10           4153 	call	_drawstr
   11BD F1                 4154 	pop	af
   11BE F1                 4155 	pop	af
   11BF C9                 4156 	ret
   11C0                    4157 _font_end::
   11C0                    4158 __str_8:
   11C0 44 49 47 49 54 41  4159 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  4160 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 4161 	.db 0x00
                           4162 ;demo.c:546: void twister() {
                           4163 ;	---------------------------------
                           4164 ; Function twister
                           4165 ; ---------------------------------
   1223                    4166 _twister_start::
   1223                    4167 _twister:
   1223 DD E5              4168 	push	ix
   1225 DD 21 00 00        4169 	ld	ix,#0
   1229 DD 39              4170 	add	ix,sp
   122B F5                 4171 	push	af
                           4172 ;demo.c:550: if (twinited == 0) {
   122C 3ArBAs41           4173 	ld	a,(#_twinited+0)
   122F FD 21rBAs41        4174 	ld	iy,#_twinited
   1233 FD B6 01           4175 	or	a,1 (iy)
   1236 C2rA6s12           4176 	jp	NZ,00102$
                           4177 ;demo.c:551: cmd.size_x = 256;
   1239 21r74s41           4178 	ld	hl, #_cmd + 8
   123C 36 00              4179 	ld	(hl),#0x00
   123E 23                 4180 	inc	hl
   123F 36 01              4181 	ld	(hl),#0x01
                           4182 ;demo.c:552: cmd.size_y = 1;
   1241 21r76s41           4183 	ld	hl, #_cmd + 10
   1244 36 01              4184 	ld	(hl),#0x01
   1246 23                 4185 	inc	hl
   1247 36 00              4186 	ld	(hl),#0x00
                           4187 ;demo.c:553: cmd.data = 0;
                           4188 ;demo.c:554: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4189 	ld	a,#0x00
   124B 32r78s41           4190 	ld	(#_cmd + 12),a
   124E 32r79s41           4191 	ld	(#_cmd + 13),a
                           4192 ;demo.c:555: cmd.command = 0xd0; // vram to vram, y only
   1251 01r7As41           4193 	ld	bc,#_cmd + 14
   1254 3E D0              4194 	ld	a,#0xD0
   1256 02                 4195 	ld	(bc),a
                           4196 ;demo.c:556: cmd.source_x = 0;
   1257 21r6Cs41           4197 	ld	hl,#_cmd
   125A 36 00              4198 	ld	(hl),#0x00
   125C 23                 4199 	inc	hl
   125D 36 00              4200 	ld	(hl),#0x00
                           4201 ;demo.c:557: cmd.dest_x = 0;
   125F 21r70s41           4202 	ld	hl, #_cmd + 4
   1262 36 00              4203 	ld	(hl),#0x00
   1264 23                 4204 	inc	hl
   1265 36 00              4205 	ld	(hl),#0x00
                           4206 ;demo.c:559: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4207 	ld	bc,#0x0000
   126A                    4208 00103$:
   126A 79                 4209 	ld	a,c
   126B D6 D4              4210 	sub	a,#0xD4
   126D 78                 4211 	ld	a,b
   126E DE 00              4212 	sbc	a,#0x00
   1270 F2r91s12           4213 	jp	P,00106$
                           4214 ;demo.c:560: waitVB();
   1273 76                 4215 		halt 
                           4216 ;demo.c:561: cmd.source_y = 0;
   1274 11r6Es41           4217 	ld	de,#_cmd + 2
   1277 EB                 4218 	ex	de,hl
   1278 36 00              4219 	ld	(hl),#0x00
   127A 23                 4220 	inc	hl
   127B 36 00              4221 	ld	(hl),#0x00
                           4222 ;demo.c:562: cmd.dest_y = y;
   127D 11r72s41           4223 	ld	de,#_cmd + 6
   1280 EB                 4224 	ex	de,hl
   1281 71                 4225 	ld	(hl),c
   1282 23                 4226 	inc	hl
   1283 70                 4227 	ld	(hl),b
                           4228 ;demo.c:563: vdp_copier(&cmd);
   1284 C5                 4229 	push	bc
   1285 21r6Cs41           4230 	ld	hl,#_cmd
   1288 E5                 4231 	push	hl
   1289 CDr00s00           4232 	call	_vdp_copier
   128C F1                 4233 	pop	af
   128D C1                 4234 	pop	bc
                           4235 ;demo.c:559: for (y = 0; y < 212; y+=1) {
   128E 03                 4236 	inc	bc
   128F 18 D9              4237 	jr	00103$
   1291                    4238 00106$:
                           4239 ;demo.c:567: twinited = 1;
   1291 21rBAs41           4240 	ld	hl,#_twinited + 0
   1294 36 01              4241 	ld	(hl), #0x01
   1296 21rBBs41           4242 	ld	hl,#_twinited + 1
   1299 36 00              4243 	ld	(hl), #0x00
                           4244 ;demo.c:568: vdp_load_palette(twister_palette);
   129B 21r08s41           4245 	ld	hl,#_twister_palette
   129E E5                 4246 	push	hl
   129F CDr00s00           4247 	call	_vdp_load_palette
   12A2 F1                 4248 	pop	af
                           4249 ;demo.c:569: font();
   12A3 CDrB2s11           4250 	call	_font
   12A6                    4251 00102$:
                           4252 ;demo.c:572: cmd.size_x = 70;
   12A6 21r74s41           4253 	ld	hl, #_cmd + 8
   12A9 36 46              4254 	ld	(hl),#0x46
   12AB 23                 4255 	inc	hl
   12AC 36 00              4256 	ld	(hl),#0x00
                           4257 ;demo.c:573: cmd.size_y = 2;
   12AE 21r76s41           4258 	ld	hl, #_cmd + 10
   12B1 36 02              4259 	ld	(hl),#0x02
   12B3 23                 4260 	inc	hl
   12B4 36 00              4261 	ld	(hl),#0x00
                           4262 ;demo.c:574: cmd.data = 0;
   12B6 3E 00              4263 	ld	a,#0x00
   12B8 32r78s41           4264 	ld	(#_cmd + 12),a
                           4265 ;demo.c:575: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4266 	ld	a,#0x04
   12BD 32r79s41           4267 	ld	(#_cmd + 13),a
                           4268 ;demo.c:576: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r7As41           4269 	ld	bc,#_cmd + 14
   12C3 3E E0              4270 	ld	a,#0xE0
   12C5 02                 4271 	ld	(bc),a
                           4272 ;demo.c:577: cmd.source_x = 70;
   12C6 21r6Cs41           4273 	ld	hl,#_cmd
   12C9 36 46              4274 	ld	(hl),#0x46
   12CB 23                 4275 	inc	hl
   12CC 36 00              4276 	ld	(hl),#0x00
                           4277 ;demo.c:578: cmd.dest_x = 70;
   12CE 21r70s41           4278 	ld	hl, #_cmd + 4
   12D1 36 46              4279 	ld	(hl),#0x46
   12D3 23                 4280 	inc	hl
   12D4 36 00              4281 	ld	(hl),#0x00
                           4282 ;demo.c:580: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4283 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4284 	ld	-1 (ix),#0x00
   12DE                    4285 00107$:
   12DE DD 7E FE           4286 	ld	a,-2 (ix)
   12E1 D6 D4              4287 	sub	a,#0xD4
   12E3 DD 7E FF           4288 	ld	a,-1 (ix)
   12E6 DE 00              4289 	sbc	a,#0x00
   12E8 F2r41s13           4290 	jp	P,00110$
                           4291 ;demo.c:581: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r6Es41           4292 	ld	de,#_cmd + 2
   12EE DD 4E FE           4293 	ld	c,-2 (ix)
   12F1 DD 46 FF           4294 	ld	b,-1 (ix)
   12F4 CB 28              4295 	sra	b
   12F6 CB 19              4296 	rr	c
   12F8 3ArB8s41           4297 	ld	a,(#_ff+0)
   12FB 81                 4298 	add	a,c
   12FC 4F                 4299 	ld	c,a
   12FD 3ArB9s41           4300 	ld	a,(#_ff+1)
   1300 88                 4301 	adc	a,b
   1301 06 00              4302 	ld	b,#0x00
   1303 21r00s00           4303 	ld	hl,#_sintab
   1306 09                 4304 	add	hl,bc
   1307 7E                 4305 	ld	a,(hl)
   1308 4F                 4306 	ld	c,a
   1309 CB 29              4307 	sra	c
   130B 79                 4308 	ld	a,c
   130C 17                 4309 	rla	
   130D 9F                 4310 	sbc	a,a
   130E 47                 4311 	ld	b,a
   130F 21 40 02           4312 	ld	hl,#0x0240
   1312 09                 4313 	add	hl,bc
   1313 4D                 4314 	ld	c,l
   1314 44                 4315 	ld	b,h
   1315 6B                 4316 	ld	l,e
   1316 62                 4317 	ld	h,d
   1317 71                 4318 	ld	(hl),c
   1318 23                 4319 	inc	hl
   1319 70                 4320 	ld	(hl),b
                           4321 ;demo.c:582: cmd.dest_y = y;
   131A 21r72s41           4322 	ld	hl, #_cmd + 6
   131D DD 7E FE           4323 	ld	a,-2 (ix)
   1320 77                 4324 	ld	(hl),a
   1321 23                 4325 	inc	hl
   1322 DD 7E FF           4326 	ld	a,-1 (ix)
   1325 77                 4327 	ld	(hl),a
                           4328 ;demo.c:583: vdp_copier(&cmd);
   1326 21r6Cs41           4329 	ld	hl,#_cmd
   1329 E5                 4330 	push	hl
   132A CDr00s00           4331 	call	_vdp_copier
   132D F1                 4332 	pop	af
                           4333 ;demo.c:580: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4334 	ld	a,-2 (ix)
   1331 C6 02              4335 	add	a,#0x02
   1333 DD 77 FE           4336 	ld	-2 (ix),a
   1336 DD 7E FF           4337 	ld	a,-1 (ix)
   1339 CE 00              4338 	adc	a,#0x00
   133B DD 77 FF           4339 	ld	-1 (ix),a
   133E C3rDEs12           4340 	jp	00107$
   1341                    4341 00110$:
                           4342 ;demo.c:587: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21rB8s41           4343 	ld	hl,#_ff + 0
   1344 4E                 4344 	ld	c,(hl)
   1345 21rB9s41           4345 	ld	hl,#_ff + 1
   1348 46                 4346 	ld	b,(hl)
   1349 CB 28              4347 	sra	b
   134B CB 19              4348 	rr	c
   134D CB 28              4349 	sra	b
   134F CB 19              4350 	rr	c
   1351 21rB8s41           4351 	ld	hl,#_ff + 0
   1354 5E                 4352 	ld	e,(hl)
   1355 21rB9s41           4353 	ld	hl,#_ff + 1
   1358 56                 4354 	ld	d,(hl)
   1359 CB 2A              4355 	sra	d
   135B CB 1B              4356 	rr	e
   135D CB 2A              4357 	sra	d
   135F CB 1B              4358 	rr	e
   1361 CB 2A              4359 	sra	d
   1363 CB 1B              4360 	rr	e
   1365 43                 4361 	ld	b,e
   1366 79                 4362 	ld	a,c
   1367 F5                 4363 	push	af
   1368 33                 4364 	inc	sp
   1369 C5                 4365 	push	bc
   136A 33                 4366 	inc	sp
   136B 41                 4367 	ld	b,c
   136C 0E 04              4368 	ld	c,#0x04
   136E C5                 4369 	push	bc
   136F CDr00s00           4370 	call	_msx2_palette
   1372 F1                 4371 	pop	af
   1373 F1                 4372 	pop	af
                           4373 ;demo.c:589: ff+=4;
   1374 21rB8s41           4374 	ld	hl,#_ff
   1377 7E                 4375 	ld	a,(hl)
   1378 C6 04              4376 	add	a,#0x04
   137A 23                 4377 	inc	hl
   137B 2B                 4378 	dec	hl
   137C C5                 4379 	push	bc
   137D 4F                 4380 	ld	c, a
   137E 23                 4381 	inc	hl
   137F 7E                 4382 	ld	a, (hl)
   1380 47                 4383 	ld	b, a
   1381 79                 4384 	ld	a, c
   1382 2B                 4385 	dec	hl
   1383 77                 4386 	ld	(hl), a
   1384 78                 4387 	ld	a, b
   1385 C1                 4388 	pop	bc
   1386 CE 00              4389 	adc	a,#0x00
   1388 23                 4390 	inc	hl
   1389 77                 4391 	ld	(hl),a
   138A DD F9              4392 	ld	sp,ix
   138C DD E1              4393 	pop	ix
   138E C9                 4394 	ret
   138F                    4395 _twister_end::
                           4396 ;demo.c:600: void bulbs() {
                           4397 ;	---------------------------------
                           4398 ; Function bulbs
                           4399 ; ---------------------------------
   138F                    4400 _bulbs_start::
   138F                    4401 _bulbs:
   138F DD E5              4402 	push	ix
   1391 DD 21 00 00        4403 	ld	ix,#0
   1395 DD 39              4404 	add	ix,sp
   1397 21 FA FF           4405 	ld	hl,#-6
   139A 39                 4406 	add	hl,sp
   139B F9                 4407 	ld	sp,hl
                           4408 ;demo.c:604: ender+=enderdir;
   139C 21rC4s41           4409 	ld	hl,#_enderdir
   139F D5                 4410 	push	de
   13A0 FD 21rC2s41        4411 	ld	iy,#_ender
   13A4 FD E5              4412 	push	iy
   13A6 D1                 4413 	pop	de
   13A7 1A                 4414 	ld	a,(de)
   13A8 86                 4415 	add	a,(hl)
   13A9 13                 4416 	inc	de
   13AA 1B                 4417 	dec	de
   13AB C5                 4418 	push	bc
   13AC 4F                 4419 	ld	c, a
   13AD 13                 4420 	inc	de
   13AE 1A                 4421 	ld	a, (de)
   13AF 47                 4422 	ld	b, a
   13B0 79                 4423 	ld	a, c
   13B1 1B                 4424 	dec	de
   13B2 12                 4425 	ld	(de), a
   13B3 78                 4426 	ld	a, b
   13B4 C1                 4427 	pop	bc
   13B5 23                 4428 	inc	hl
   13B6 8E                 4429 	adc	a,(hl)
   13B7 13                 4430 	inc	de
   13B8 12                 4431 	ld	(de),a
   13B9 D1                 4432 	pop	de
                           4433 ;demo.c:605: if (ender < 2) { enderdir = -enderdir; }
   13BA 3ArC2s41           4434 	ld	a,(#_ender+0)
   13BD D6 02              4435 	sub	a,#0x02
   13BF 3ArC3s41           4436 	ld	a,(#_ender+1)
   13C2 DE 00              4437 	sbc	a,#0x00
   13C4 F2rE8s13           4438 	jp	P,00102$
   13C7 AF                 4439 	xor	a,a
   13C8 FD 21rC4s41        4440 	ld	iy,#_enderdir
   13CC 3E 00              4441 	ld	a,#0x00
   13CE FD 9E 00           4442 	sbc	a,0 (iy)
   13D1 FD 21rC4s41        4443 	ld	iy,#_enderdir
   13D5 FD 77 00           4444 	ld	0 (iy),a
   13D8 FD 21rC4s41        4445 	ld	iy,#_enderdir
   13DC 3E 00              4446 	ld	a,#0x00
   13DE FD 9E 01           4447 	sbc	a,1 (iy)
   13E1 FD 21rC4s41        4448 	ld	iy,#_enderdir
   13E5 FD 77 01           4449 	ld	1 (iy),a
   13E8                    4450 00102$:
                           4451 ;demo.c:606: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   13E8 3ArC2s41           4452 	ld	a,(#_ender+0)
   13EB D6 D4              4453 	sub	a,#0xD4
   13ED 3ArC3s41           4454 	ld	a,(#_ender+1)
   13F0 DE 00              4455 	sbc	a,#0x00
   13F2 FAr18s14           4456 	jp	M,00104$
   13F5 AF                 4457 	xor	a,a
   13F6 FD 21rC4s41        4458 	ld	iy,#_enderdir
   13FA 3E 00              4459 	ld	a,#0x00
   13FC FD 9E 00           4460 	sbc	a,0 (iy)
   13FF 21rC4s41           4461 	ld	hl,#_enderdir + 0
   1402 77                 4462 	ld	(hl), a
   1403 FD 21rC4s41        4463 	ld	iy,#_enderdir
   1407 3E 00              4464 	ld	a,#0x00
   1409 FD 9E 01           4465 	sbc	a,1 (iy)
   140C 21rC5s41           4466 	ld	hl,#_enderdir + 1
   140F 77                 4467 	ld	(hl), a
   1410 2ArC6s41           4468 	ld	hl,(_sy)
   1413 2B                 4469 	dec	hl
   1414 2B                 4470 	dec	hl
   1415 22rC6s41           4471 	ld	(_sy),hl
   1418                    4472 00104$:
                           4473 ;demo.c:608: enderend = ender + 92;
   1418 3ArC2s41           4474 	ld	a,(#_ender+0)
   141B C6 5C              4475 	add	a,#0x5C
   141D DD 77 FE           4476 	ld	-2 (ix),a
   1420 3ArC3s41           4477 	ld	a,(#_ender+1)
   1423 CE 00              4478 	adc	a,#0x00
   1425 DD 77 FF           4479 	ld	-1 (ix),a
                           4480 ;demo.c:610: if (enderend > 212) enderend = 212;
   1428 3E D4              4481 	ld	a,#0xD4
   142A DD 96 FE           4482 	sub	a,-2 (ix)
   142D 3E 00              4483 	ld	a,#0x00
   142F DD 9E FF           4484 	sbc	a,-1 (ix)
   1432 F2r3Ds14           4485 	jp	P,00106$
   1435 DD 36 FE D4        4486 	ld	-2 (ix),#0xD4
   1439 DD 36 FF 00        4487 	ld	-1 (ix),#0x00
   143D                    4488 00106$:
                           4489 ;demo.c:611: if (enderend > 212-16) sy = 16-(212-enderend);
   143D 3E C4              4490 	ld	a,#0xC4
   143F DD 96 FE           4491 	sub	a,-2 (ix)
   1442 3E 00              4492 	ld	a,#0x00
   1444 DD 9E FF           4493 	sbc	a,-1 (ix)
   1447 F2r62s14           4494 	jp	P,00108$
   144A 3E D4              4495 	ld	a,#0xD4
   144C DD 96 FE           4496 	sub	a,-2 (ix)
   144F 5F                 4497 	ld	e,a
   1450 3E 00              4498 	ld	a,#0x00
   1452 DD 9E FF           4499 	sbc	a,-1 (ix)
   1455 57                 4500 	ld	d,a
   1456 21rC6s41           4501 	ld	hl,#_sy
   1459 3E 10              4502 	ld	a,#0x10
   145B 93                 4503 	sub	a,e
   145C 77                 4504 	ld	(hl),a
   145D 3E 00              4505 	ld	a,#0x00
   145F 9A                 4506 	sbc	a,d
   1460 23                 4507 	inc	hl
   1461 77                 4508 	ld	(hl),a
   1462                    4509 00108$:
                           4510 ;demo.c:613: if(bulbflipper == 1) {
   1462 3ArBCs41           4511 	ld	a,(#_bulbflipper+0)
   1465 D6 01              4512 	sub	a,#0x01
   1467 20 06              4513 	jr	NZ,00133$
   1469 3ArBDs41           4514 	ld	a,(#_bulbflipper+1)
   146C B7                 4515 	or	a,a
   146D 28 03              4516 	jr	Z,00134$
   146F                    4517 00133$:
   146F C3r28s15           4518 	jp	00110$
   1472                    4519 00134$:
                           4520 ;demo.c:614: cmd.size_x = 72;
   1472 11r74s41           4521 	ld	de,#_cmd + 8
   1475 EB                 4522 	ex	de,hl
   1476 36 48              4523 	ld	(hl),#0x48
   1478 23                 4524 	inc	hl
   1479 36 00              4525 	ld	(hl),#0x00
                           4526 ;demo.c:615: cmd.size_y = sy;
   147B 11r76s41           4527 	ld	de,#_cmd + 10
   147E ED 4BrC6s41        4528 	ld	bc,(_sy)
   1482 6B                 4529 	ld	l,e
   1483 62                 4530 	ld	h,d
   1484 71                 4531 	ld	(hl),c
   1485 23                 4532 	inc	hl
   1486 70                 4533 	ld	(hl),b
                           4534 ;demo.c:616: cmd.data = 0;
   1487 3E 00              4535 	ld	a,#0x00
   1489 32r78s41           4536 	ld	(#_cmd + 12),a
                           4537 ;demo.c:617: cmd.argument = 0x04; // from 72xY to left
   148C 3E 04              4538 	ld	a,#0x04
   148E 32r79s41           4539 	ld	(#_cmd + 13),a
                           4540 ;demo.c:618: cmd.command = 0xe0; // vram to vram, y only
   1491 01r7As41           4541 	ld	bc,#_cmd + 14
   1494 3E E0              4542 	ld	a,#0xE0
   1496 02                 4543 	ld	(bc),a
                           4544 ;demo.c:619: cmd.source_x = 72;
   1497 21r6Cs41           4545 	ld	hl,#_cmd
   149A 36 48              4546 	ld	(hl),#0x48
   149C 23                 4547 	inc	hl
   149D 36 00              4548 	ld	(hl),#0x00
                           4549 ;demo.c:620: cmd.dest_x = 72;
   149F 21r70s41           4550 	ld	hl, #_cmd + 4
   14A2 36 48              4551 	ld	(hl),#0x48
   14A4 23                 4552 	inc	hl
   14A5 36 00              4553 	ld	(hl),#0x00
                           4554 ;demo.c:622: for (y = ender; y < enderend; y+=16) {
   14A7 ED 4BrC2s41        4555 	ld	bc,(_ender)
   14AB DD 71 FC           4556 	ld	-4 (ix),c
   14AE DD 70 FD           4557 	ld	-3 (ix),b
   14B1                    4558 00112$:
   14B1 DD 7E FC           4559 	ld	a,-4 (ix)
   14B4 DD 96 FE           4560 	sub	a,-2 (ix)
   14B7 DD 7E FD           4561 	ld	a,-3 (ix)
   14BA DD 9E FF           4562 	sbc	a,-1 (ix)
   14BD F2r0Fs15           4563 	jp	P,00115$
                           4564 ;demo.c:623: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   14C0 01r6Es41           4565 	ld	bc,#_cmd + 2
   14C3 3ArBEs41           4566 	ld	a,(#_ff1+0)
   14C6 DD 86 FC           4567 	add	a,-4 (ix)
   14C9 5F                 4568 	ld	e,a
   14CA 3ArBFs41           4569 	ld	a,(#_ff1+1)
   14CD DD 8E FD           4570 	adc	a,-3 (ix)
   14D0 16 00              4571 	ld	d,#0x00
   14D2 21r00s00           4572 	ld	hl,#_sintab
   14D5 19                 4573 	add	hl,de
   14D6 5E                 4574 	ld	e,(hl)
   14D7 CB 2B              4575 	sra	e
   14D9 7B                 4576 	ld	a,e
   14DA 17                 4577 	rla	
   14DB 9F                 4578 	sbc	a,a
   14DC 57                 4579 	ld	d,a
   14DD 21 40 01           4580 	ld	hl,#0x0140
   14E0 19                 4581 	add	hl,de
   14E1 EB                 4582 	ex	de,hl
   14E2 69                 4583 	ld	l,c
   14E3 60                 4584 	ld	h,b
   14E4 73                 4585 	ld	(hl),e
   14E5 23                 4586 	inc	hl
   14E6 72                 4587 	ld	(hl),d
                           4588 ;demo.c:624: cmd.dest_y = y;
   14E7 11r72s41           4589 	ld	de,#_cmd + 6
   14EA EB                 4590 	ex	de,hl
   14EB DD 7E FC           4591 	ld	a,-4 (ix)
   14EE 77                 4592 	ld	(hl),a
   14EF 23                 4593 	inc	hl
   14F0 DD 7E FD           4594 	ld	a,-3 (ix)
   14F3 77                 4595 	ld	(hl),a
                           4596 ;demo.c:625: vdp_copier(&cmd);
   14F4 21r6Cs41           4597 	ld	hl,#_cmd
   14F7 E5                 4598 	push	hl
   14F8 CDr00s00           4599 	call	_vdp_copier
   14FB F1                 4600 	pop	af
                           4601 ;demo.c:622: for (y = ender; y < enderend; y+=16) {
   14FC DD 7E FC           4602 	ld	a,-4 (ix)
   14FF C6 10              4603 	add	a,#0x10
   1501 DD 77 FC           4604 	ld	-4 (ix),a
   1504 DD 7E FD           4605 	ld	a,-3 (ix)
   1507 CE 00              4606 	adc	a,#0x00
   1509 DD 77 FD           4607 	ld	-3 (ix),a
   150C C3rB1s14           4608 	jp	00112$
   150F                    4609 00115$:
                           4610 ;demo.c:627: ff1+=4;
   150F 21rBEs41           4611 	ld	hl,#_ff1
   1512 7E                 4612 	ld	a,(hl)
   1513 C6 04              4613 	add	a,#0x04
   1515 23                 4614 	inc	hl
   1516 2B                 4615 	dec	hl
   1517 C5                 4616 	push	bc
   1518 4F                 4617 	ld	c, a
   1519 23                 4618 	inc	hl
   151A 7E                 4619 	ld	a, (hl)
   151B 47                 4620 	ld	b, a
   151C 79                 4621 	ld	a, c
   151D 2B                 4622 	dec	hl
   151E 77                 4623 	ld	(hl), a
   151F 78                 4624 	ld	a, b
   1520 C1                 4625 	pop	bc
   1521 CE 00              4626 	adc	a,#0x00
   1523 23                 4627 	inc	hl
   1524 77                 4628 	ld	(hl),a
   1525 C3rCDs15           4629 	jp	00111$
   1528                    4630 00110$:
                           4631 ;demo.c:631: cmd.size_x = 72;
   1528 11r74s41           4632 	ld	de,#_cmd + 8
   152B EB                 4633 	ex	de,hl
   152C 36 48              4634 	ld	(hl),#0x48
   152E 23                 4635 	inc	hl
   152F 36 00              4636 	ld	(hl),#0x00
                           4637 ;demo.c:632: cmd.size_y = sy;
   1531 01r76s41           4638 	ld	bc,#_cmd + 10
   1534 ED 5BrC6s41        4639 	ld	de,(_sy)
   1538 69                 4640 	ld	l,c
   1539 60                 4641 	ld	h,b
   153A 73                 4642 	ld	(hl),e
   153B 23                 4643 	inc	hl
   153C 72                 4644 	ld	(hl),d
                           4645 ;demo.c:633: cmd.data = 0;
   153D 11r78s41           4646 	ld	de,#_cmd + 12
   1540 3E 00              4647 	ld	a,#0x00
   1542 12                 4648 	ld	(de),a
                           4649 ;demo.c:634: cmd.argument = 0x00; // from 182xY to right
   1543 11r79s41           4650 	ld	de,#_cmd + 13
   1546 3E 00              4651 	ld	a,#0x00
   1548 12                 4652 	ld	(de),a
                           4653 ;demo.c:635: cmd.command = 0xe0; // vram to vram, y only
   1549 11r7As41           4654 	ld	de,#_cmd + 14
   154C 3E E0              4655 	ld	a,#0xE0
   154E 12                 4656 	ld	(de),a
                           4657 ;demo.c:636: cmd.source_x = 182;
   154F 21r6Cs41           4658 	ld	hl,#_cmd
   1552 36 B6              4659 	ld	(hl),#0xB6
   1554 23                 4660 	inc	hl
   1555 36 00              4661 	ld	(hl),#0x00
                           4662 ;demo.c:637: cmd.dest_x = 182;
   1557 11r70s41           4663 	ld	de,#_cmd + 4
   155A 6B                 4664 	ld	l,e
   155B 62                 4665 	ld	h,d
   155C 36 B6              4666 	ld	(hl),#0xB6
   155E 23                 4667 	inc	hl
   155F 36 00              4668 	ld	(hl),#0x00
                           4669 ;demo.c:639: for (y = ender; y < enderend; y+=16) {
   1561 ED 4BrC2s41        4670 	ld	bc,(_ender)
   1565                    4671 00116$:
   1565 79                 4672 	ld	a,c
   1566 DD 96 FE           4673 	sub	a,-2 (ix)
   1569 78                 4674 	ld	a,b
   156A DD 9E FF           4675 	sbc	a,-1 (ix)
   156D F2rB7s15           4676 	jp	P,00119$
                           4677 ;demo.c:640: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1570 21r6Es41           4678 	ld	hl,#_cmd + 2
   1573 DD 75 FA           4679 	ld	-6 (ix),l
   1576 DD 74 FB           4680 	ld	-5 (ix),h
   1579 3ArC0s41           4681 	ld	a,(#_ff2+0)
   157C 81                 4682 	add	a,c
   157D 5F                 4683 	ld	e,a
   157E 3ArC1s41           4684 	ld	a,(#_ff2+1)
   1581 88                 4685 	adc	a,b
   1582 16 00              4686 	ld	d,#0x00
   1584 21r00s00           4687 	ld	hl,#_sintab
   1587 19                 4688 	add	hl,de
   1588 5E                 4689 	ld	e,(hl)
   1589 CB 2B              4690 	sra	e
   158B 7B                 4691 	ld	a,e
   158C 17                 4692 	rla	
   158D 9F                 4693 	sbc	a,a
   158E 57                 4694 	ld	d,a
   158F 21 40 01           4695 	ld	hl,#0x0140
   1592 19                 4696 	add	hl,de
   1593 EB                 4697 	ex	de,hl
   1594 DD 6E FA           4698 	ld	l,-6 (ix)
   1597 DD 66 FB           4699 	ld	h,-5 (ix)
   159A 73                 4700 	ld	(hl),e
   159B 23                 4701 	inc	hl
   159C 72                 4702 	ld	(hl),d
                           4703 ;demo.c:641: cmd.dest_y = y;
   159D 11r72s41           4704 	ld	de,#_cmd + 6
   15A0 EB                 4705 	ex	de,hl
   15A1 71                 4706 	ld	(hl),c
   15A2 23                 4707 	inc	hl
   15A3 70                 4708 	ld	(hl),b
                           4709 ;demo.c:642: vdp_copier(&cmd);
   15A4 C5                 4710 	push	bc
   15A5 21r6Cs41           4711 	ld	hl,#_cmd
   15A8 E5                 4712 	push	hl
   15A9 CDr00s00           4713 	call	_vdp_copier
   15AC F1                 4714 	pop	af
   15AD C1                 4715 	pop	bc
                           4716 ;demo.c:639: for (y = ender; y < enderend; y+=16) {
   15AE 21 10 00           4717 	ld	hl,#0x0010
   15B1 09                 4718 	add	hl,bc
   15B2 4D                 4719 	ld	c,l
   15B3 44                 4720 	ld	b,h
   15B4 C3r65s15           4721 	jp	00116$
   15B7                    4722 00119$:
                           4723 ;demo.c:644: ff2+=4;
   15B7 21rC0s41           4724 	ld	hl,#_ff2
   15BA 7E                 4725 	ld	a,(hl)
   15BB C6 04              4726 	add	a,#0x04
   15BD 23                 4727 	inc	hl
   15BE 2B                 4728 	dec	hl
   15BF C5                 4729 	push	bc
   15C0 4F                 4730 	ld	c, a
   15C1 23                 4731 	inc	hl
   15C2 7E                 4732 	ld	a, (hl)
   15C3 47                 4733 	ld	b, a
   15C4 79                 4734 	ld	a, c
   15C5 2B                 4735 	dec	hl
   15C6 77                 4736 	ld	(hl), a
   15C7 78                 4737 	ld	a, b
   15C8 C1                 4738 	pop	bc
   15C9 CE 00              4739 	adc	a,#0x00
   15CB 23                 4740 	inc	hl
   15CC 77                 4741 	ld	(hl),a
   15CD                    4742 00111$:
                           4743 ;demo.c:647: bulbflipper = -bulbflipper;
   15CD AF                 4744 	xor	a,a
   15CE FD 21rBCs41        4745 	ld	iy,#_bulbflipper
   15D2 3E 00              4746 	ld	a,#0x00
   15D4 FD 9E 00           4747 	sbc	a,0 (iy)
   15D7 21rBCs41           4748 	ld	hl,#_bulbflipper + 0
   15DA 77                 4749 	ld	(hl), a
   15DB FD 21rBCs41        4750 	ld	iy,#_bulbflipper
   15DF 3E 00              4751 	ld	a,#0x00
   15E1 FD 9E 01           4752 	sbc	a,1 (iy)
   15E4 21rBDs41           4753 	ld	hl,#_bulbflipper + 1
   15E7 77                 4754 	ld	(hl), a
   15E8 DD F9              4755 	ld	sp,ix
   15EA DD E1              4756 	pop	ix
   15EC C9                 4757 	ret
   15ED                    4758 _bulbs_end::
                           4759 ;demo.c:661: void animplay() {
                           4760 ;	---------------------------------
                           4761 ; Function animplay
                           4762 ; ---------------------------------
   15ED                    4763 _animplay_start::
   15ED                    4764 _animplay:
   15ED DD E5              4765 	push	ix
   15EF DD 21 00 00        4766 	ld	ix,#0
   15F3 DD 39              4767 	add	ix,sp
   15F5 F5                 4768 	push	af
   15F6 3B                 4769 	dec	sp
                           4770 ;demo.c:666: if (anim_init == 0) {
   15F7 3ArD0s41           4771 	ld	a,(#_anim_init+0)
   15FA 21rD1s41           4772 	ld	hl,#_anim_init + 1
   15FD B6                 4773 	or	a,(hl)
   15FE C2r93s17           4774 	jp	NZ,00120$
                           4775 ;demo.c:667: drawsine("L O A D I N G",8,100);
   1601 21 08 64           4776 	ld	hl,#0x6408
   1604 E5                 4777 	push	hl
   1605 21r7Bs18           4778 	ld	hl,#__str_9
   1608 E5                 4779 	push	hl
   1609 CDr20s11           4780 	call	_drawsine
   160C F1                 4781 	pop	af
   160D F1                 4782 	pop	af
                           4783 ;demo.c:670: uninstall_isr();
   160E CDr00s00           4784 	call	_uninstall_isr
                           4785 ;demo.c:671: PLY_Stop();
   1611 CDr00s00           4786 	call	_PLY_Stop
                           4787 ;demo.c:672: PLY_SendRegisters();
   1614 CDr00s00           4788 	call	_PLY_SendRegisters
                           4789 ;demo.c:674: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1617 21 00 00           4790 	ld	hl,#0x0000
   161A E5                 4791 	push	hl
   161B 2E 01              4792 	ld	l, #0x01
   161D E5                 4793 	push	hl
   161E 2E 00              4794 	ld	l, #0x00
   1620 E5                 4795 	push	hl
   1621 21 09 37           4796 	ld	hl,#0x3709
   1624 E5                 4797 	push	hl
   1625 21r89s18           4798 	ld	hl,#__str_10
   1628 E5                 4799 	push	hl
   1629 CDr99s09           4800 	call	_pck_load
   162C FD 21 0A 00        4801 	ld	iy,#0x000A
   1630 FD 39              4802 	add	iy,sp
   1632 FD F9              4803 	ld	sp,iy
                           4804 ;demo.c:677: scratch_clear();
   1634 CDr90s07           4805 	call	_scratch_clear
                           4806 ;demo.c:678: vdp_load_palette(scratch);
   1637 21r48s40           4807 	ld	hl,#_scratch
   163A E5                 4808 	push	hl
   163B CDr00s00           4809 	call	_vdp_load_palette
   163E F1                 4810 	pop	af
                           4811 ;demo.c:680: cmd.size_x = 256;
   163F 21r74s41           4812 	ld	hl, #_cmd + 8
   1642 36 00              4813 	ld	(hl),#0x00
   1644 23                 4814 	inc	hl
   1645 36 01              4815 	ld	(hl),#0x01
                           4816 ;demo.c:681: cmd.size_y = 212;
   1647 21r76s41           4817 	ld	hl, #_cmd + 10
   164A 36 D4              4818 	ld	(hl),#0xD4
   164C 23                 4819 	inc	hl
   164D 36 00              4820 	ld	(hl),#0x00
                           4821 ;demo.c:682: cmd.data = 0;
                           4822 ;demo.c:683: cmd.argument = 0x00;
   164F 3E 00              4823 	ld	a,#0x00
   1651 32r78s41           4824 	ld	(#_cmd + 12),a
   1654 32r79s41           4825 	ld	(#_cmd + 13),a
                           4826 ;demo.c:684: cmd.command = 0xd0; 
   1657 01r7As41           4827 	ld	bc,#_cmd + 14
   165A 3E D0              4828 	ld	a,#0xD0
   165C 02                 4829 	ld	(bc),a
                           4830 ;demo.c:685: cmd.source_x = 0;
   165D 21r6Cs41           4831 	ld	hl,#_cmd
   1660 36 00              4832 	ld	(hl),#0x00
   1662 23                 4833 	inc	hl
   1663 36 00              4834 	ld	(hl),#0x00
                           4835 ;demo.c:686: cmd.source_y = 0;
   1665 21r6Es41           4836 	ld	hl, #_cmd + 2
   1668 36 00              4837 	ld	(hl),#0x00
   166A 23                 4838 	inc	hl
   166B 36 00              4839 	ld	(hl),#0x00
                           4840 ;demo.c:687: cmd.dest_x = 0;
   166D 21r70s41           4841 	ld	hl, #_cmd + 4
   1670 36 00              4842 	ld	(hl),#0x00
   1672 23                 4843 	inc	hl
   1673 36 00              4844 	ld	(hl),#0x00
                           4845 ;demo.c:688: cmd.dest_y = 256;
   1675 21r72s41           4846 	ld	hl, #_cmd + 6
   1678 36 00              4847 	ld	(hl),#0x00
   167A 23                 4848 	inc	hl
   167B 36 01              4849 	ld	(hl),#0x01
                           4850 ;demo.c:689: vdp_copier(&cmd);
   167D 21r6Cs41           4851 	ld	hl,#_cmd
   1680 E5                 4852 	push	hl
   1681 CDr00s00           4853 	call	_vdp_copier
   1684 F1                 4854 	pop	af
                           4855 ;demo.c:691: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1685 21 00 00           4856 	ld	hl,#0x0000
   1688 E5                 4857 	push	hl
   1689 2E 01              4858 	ld	l, #0x01
   168B E5                 4859 	push	hl
   168C 2E 00              4860 	ld	l, #0x00
   168E E5                 4861 	push	hl
   168F 21 76 3E           4862 	ld	hl,#0x3E76
   1692 E5                 4863 	push	hl
   1693 21r95s18           4864 	ld	hl,#__str_11
   1696 E5                 4865 	push	hl
   1697 CDr99s09           4866 	call	_pck_load
   169A FD 21 0A 00        4867 	ld	iy,#0x000A
   169E FD 39              4868 	add	iy,sp
   16A0 FD F9              4869 	ld	sp,iy
                           4870 ;demo.c:693: cmd.size_x = 256;
   16A2 21r74s41           4871 	ld	hl, #_cmd + 8
   16A5 36 00              4872 	ld	(hl),#0x00
   16A7 23                 4873 	inc	hl
   16A8 36 01              4874 	ld	(hl),#0x01
                           4875 ;demo.c:694: cmd.size_y = 212;
   16AA 21r76s41           4876 	ld	hl, #_cmd + 10
   16AD 36 D4              4877 	ld	(hl),#0xD4
   16AF 23                 4878 	inc	hl
   16B0 36 00              4879 	ld	(hl),#0x00
                           4880 ;demo.c:695: cmd.data = 0;
                           4881 ;demo.c:696: cmd.argument = 0x00;
   16B2 3E 00              4882 	ld	a,#0x00
   16B4 32r78s41           4883 	ld	(#_cmd + 12),a
   16B7 32r79s41           4884 	ld	(#_cmd + 13),a
                           4885 ;demo.c:697: cmd.command = 0xd0; 
   16BA 01r7As41           4886 	ld	bc,#_cmd + 14
   16BD 3E D0              4887 	ld	a,#0xD0
   16BF 02                 4888 	ld	(bc),a
                           4889 ;demo.c:698: cmd.source_x = 0;
   16C0 21r6Cs41           4890 	ld	hl,#_cmd
   16C3 36 00              4891 	ld	(hl),#0x00
   16C5 23                 4892 	inc	hl
   16C6 36 00              4893 	ld	(hl),#0x00
                           4894 ;demo.c:699: cmd.source_y = 0;
   16C8 21r6Es41           4895 	ld	hl, #_cmd + 2
   16CB 36 00              4896 	ld	(hl),#0x00
   16CD 23                 4897 	inc	hl
   16CE 36 00              4898 	ld	(hl),#0x00
                           4899 ;demo.c:700: cmd.dest_x = 0;
   16D0 21r70s41           4900 	ld	hl, #_cmd + 4
   16D3 36 00              4901 	ld	(hl),#0x00
   16D5 23                 4902 	inc	hl
   16D6 36 00              4903 	ld	(hl),#0x00
                           4904 ;demo.c:701: cmd.dest_y = 512;
   16D8 21r72s41           4905 	ld	hl, #_cmd + 6
   16DB 36 00              4906 	ld	(hl),#0x00
   16DD 23                 4907 	inc	hl
   16DE 36 02              4908 	ld	(hl),#0x02
                           4909 ;demo.c:702: vdp_copier(&cmd);
   16E0 21r6Cs41           4910 	ld	hl,#_cmd
   16E3 E5                 4911 	push	hl
   16E4 CDr00s00           4912 	call	_vdp_copier
   16E7 F1                 4913 	pop	af
                           4914 ;demo.c:705: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   16E8 21 00 00           4915 	ld	hl,#0x0000
   16EB E5                 4916 	push	hl
   16EC 2E 01              4917 	ld	l, #0x01
   16EE E5                 4918 	push	hl
   16EF 2E 00              4919 	ld	l, #0x00
   16F1 E5                 4920 	push	hl
   16F2 21 9E 3A           4921 	ld	hl,#0x3A9E
   16F5 E5                 4922 	push	hl
   16F6 21rA1s18           4923 	ld	hl,#__str_12
   16F9 E5                 4924 	push	hl
   16FA CDr99s09           4925 	call	_pck_load
   16FD FD 21 0A 00        4926 	ld	iy,#0x000A
   1701 FD 39              4927 	add	iy,sp
   1703 FD F9              4928 	ld	sp,iy
                           4929 ;demo.c:707: cmd.size_x = 256;
   1705 21r74s41           4930 	ld	hl, #_cmd + 8
   1708 36 00              4931 	ld	(hl),#0x00
   170A 23                 4932 	inc	hl
   170B 36 01              4933 	ld	(hl),#0x01
                           4934 ;demo.c:708: cmd.size_y = 212;
   170D 21r76s41           4935 	ld	hl, #_cmd + 10
   1710 36 D4              4936 	ld	(hl),#0xD4
   1712 23                 4937 	inc	hl
   1713 36 00              4938 	ld	(hl),#0x00
                           4939 ;demo.c:709: cmd.data = 0;
                           4940 ;demo.c:710: cmd.argument = 0x00;
   1715 3E 00              4941 	ld	a,#0x00
   1717 32r78s41           4942 	ld	(#_cmd + 12),a
   171A 32r79s41           4943 	ld	(#_cmd + 13),a
                           4944 ;demo.c:711: cmd.command = 0xd0; 
   171D 01r7As41           4945 	ld	bc,#_cmd + 14
   1720 3E D0              4946 	ld	a,#0xD0
   1722 02                 4947 	ld	(bc),a
                           4948 ;demo.c:712: cmd.source_x = 0;
   1723 21r6Cs41           4949 	ld	hl,#_cmd
   1726 36 00              4950 	ld	(hl),#0x00
   1728 23                 4951 	inc	hl
   1729 36 00              4952 	ld	(hl),#0x00
                           4953 ;demo.c:713: cmd.source_y = 0;
   172B 21r6Es41           4954 	ld	hl, #_cmd + 2
   172E 36 00              4955 	ld	(hl),#0x00
   1730 23                 4956 	inc	hl
   1731 36 00              4957 	ld	(hl),#0x00
                           4958 ;demo.c:714: cmd.dest_x = 0;
   1733 21r70s41           4959 	ld	hl, #_cmd + 4
   1736 36 00              4960 	ld	(hl),#0x00
   1738 23                 4961 	inc	hl
   1739 36 00              4962 	ld	(hl),#0x00
                           4963 ;demo.c:715: cmd.dest_y = 768;
   173B 21r72s41           4964 	ld	hl, #_cmd + 6
   173E 36 00              4965 	ld	(hl),#0x00
   1740 23                 4966 	inc	hl
   1741 36 03              4967 	ld	(hl),#0x03
                           4968 ;demo.c:716: vdp_copier(&cmd);
   1743 21r6Cs41           4969 	ld	hl,#_cmd
   1746 E5                 4970 	push	hl
   1747 CDr00s00           4971 	call	_vdp_copier
   174A F1                 4972 	pop	af
                           4973 ;demo.c:718: vdp_register(9,130); // 50hz,212
   174B 21 09 82           4974 	ld	hl,#0x8209
   174E E5                 4975 	push	hl
   174F CDr00s00           4976 	call	_vdp_register
   1752 F1                 4977 	pop	af
                           4978 ;demo.c:720: scratch_clear();
   1753 CDr90s07           4979 	call	_scratch_clear
                           4980 ;demo.c:722: vdp_set_write_address(0, 0);
   1756 21 00 00           4981 	ld	hl,#0x0000
   1759 E5                 4982 	push	hl
   175A 3E 00              4983 	ld	a,#0x00
   175C F5                 4984 	push	af
   175D 33                 4985 	inc	sp
   175E CDr00s00           4986 	call	_vdp_set_write_address
   1761 F1                 4987 	pop	af
   1762 33                 4988 	inc	sp
                           4989 ;demo.c:724: for (y = 0; y < 212; y++) { 
   1763 0E D4              4990 	ld	c,#0xD4
   1765                    4991 00109$:
                           4992 ;demo.c:725: vdp_load_screen(scratch, 128);
   1765 C5                 4993 	push	bc
   1766 3E 80              4994 	ld	a,#0x80
   1768 F5                 4995 	push	af
   1769 33                 4996 	inc	sp
   176A 21r48s40           4997 	ld	hl,#_scratch
   176D E5                 4998 	push	hl
   176E CDr00s00           4999 	call	_vdp_load_screen
   1771 F1                 5000 	pop	af
   1772 33                 5001 	inc	sp
   1773 C1                 5002 	pop	bc
   1774 0D                 5003 	dec	c
                           5004 ;demo.c:724: for (y = 0; y < 212; y++) { 
   1775 AF                 5005 	xor	a,a
   1776 B1                 5006 	or	a,c
   1777 20 EC              5007 	jr	NZ,00109$
                           5008 ;demo.c:728: install_isr(my_isr);
   1779 21rECs05           5009 	ld	hl,#_my_isr
   177C E5                 5010 	push	hl
   177D CDr00s00           5011 	call	_install_isr
   1780 F1                 5012 	pop	af
                           5013 ;demo.c:729: anim_init = 1;
   1781 21rD0s41           5014 	ld	hl,#_anim_init + 0
   1784 36 01              5015 	ld	(hl), #0x01
   1786 21rD1s41           5016 	ld	hl,#_anim_init + 1
   1789 36 00              5017 	ld	(hl), #0x00
                           5018 ;demo.c:730: vdp_load_palette(tf_palette);
   178B 21r28s41           5019 	ld	hl,#_tf_palette
   178E E5                 5020 	push	hl
   178F CDr00s00           5021 	call	_vdp_load_palette
   1792 F1                 5022 	pop	af
                           5023 ;demo.c:733: for (y = 0; y < 106; y+=1) {
   1793                    5024 00120$:
   1793 DD 36 FF 00        5025 	ld	-1 (ix),#0x00
   1797                    5026 00110$:
   1797 DD 7E FF           5027 	ld	a,-1 (ix)
   179A D6 6A              5028 	sub	a,#0x6A
   179C D2r1Cs18           5029 	jp	NC,00113$
                           5030 ;demo.c:734: cmd.source_x = 0;
   179F 21r6Cs41           5031 	ld	hl,#_cmd
   17A2 36 00              5032 	ld	(hl),#0x00
   17A4 23                 5033 	inc	hl
   17A5 36 00              5034 	ld	(hl),#0x00
                           5035 ;demo.c:735: cmd.source_y = 256+po+frames+(y>>1);
   17A7 11r6Es41           5036 	ld	de,#_cmd + 2
   17AA 3ArCCs41           5037 	ld	a,(#_po+0)
   17AD 4F                 5038 	ld	c,a
   17AE 3ArCDs41           5039 	ld	a,(#_po+1)
   17B1 C6 01              5040 	add	a,#0x01
   17B3 47                 5041 	ld	b,a
   17B4 21rCEs41           5042 	ld	hl,#_frames
   17B7 79                 5043 	ld	a,c
   17B8 86                 5044 	add	a,(hl)
   17B9 DD 77 FD           5045 	ld	-3 (ix),a
   17BC 78                 5046 	ld	a,b
   17BD 23                 5047 	inc	hl
   17BE 8E                 5048 	adc	a,(hl)
   17BF DD 77 FE           5049 	ld	-2 (ix),a
   17C2 DD 4E FF           5050 	ld	c,-1 (ix)
   17C5 CB 39              5051 	srl	c
   17C7 06 00              5052 	ld	b,#0x00
   17C9 DD 7E FD           5053 	ld	a,-3 (ix)
   17CC 81                 5054 	add	a,c
   17CD 4F                 5055 	ld	c,a
   17CE DD 7E FE           5056 	ld	a,-2 (ix)
   17D1 88                 5057 	adc	a,b
   17D2 47                 5058 	ld	b,a
   17D3 6B                 5059 	ld	l,e
   17D4 62                 5060 	ld	h,d
   17D5 71                 5061 	ld	(hl),c
   17D6 23                 5062 	inc	hl
   17D7 70                 5063 	ld	(hl),b
                           5064 ;demo.c:736: cmd.dest_x = 0;
   17D8 21r70s41           5065 	ld	hl, #_cmd + 4
   17DB 36 00              5066 	ld	(hl),#0x00
   17DD 23                 5067 	inc	hl
   17DE 36 00              5068 	ld	(hl),#0x00
                           5069 ;demo.c:737: cmd.dest_y = (y<<1);
   17E0 01r72s41           5070 	ld	bc,#_cmd + 6
   17E3 DD 5E FF           5071 	ld	e,-1 (ix)
   17E6 16 00              5072 	ld	d,#0x00
   17E8 CB 23              5073 	sla	e
   17EA CB 12              5074 	rl	d
   17EC 69                 5075 	ld	l,c
   17ED 60                 5076 	ld	h,b
   17EE 73                 5077 	ld	(hl),e
   17EF 23                 5078 	inc	hl
   17F0 72                 5079 	ld	(hl),d
                           5080 ;demo.c:738: cmd.size_x = 256;
   17F1 21r74s41           5081 	ld	hl, #_cmd + 8
   17F4 36 00              5082 	ld	(hl),#0x00
   17F6 23                 5083 	inc	hl
   17F7 36 01              5084 	ld	(hl),#0x01
                           5085 ;demo.c:739: cmd.size_y = 1;
   17F9 21r76s41           5086 	ld	hl, #_cmd + 10
   17FC 36 01              5087 	ld	(hl),#0x01
   17FE 23                 5088 	inc	hl
   17FF 36 00              5089 	ld	(hl),#0x00
                           5090 ;demo.c:740: cmd.data = 0;
                           5091 ;demo.c:741: cmd.argument = 0x00;
   1801 3E 00              5092 	ld	a,#0x00
   1803 32r78s41           5093 	ld	(#_cmd + 12),a
   1806 32r79s41           5094 	ld	(#_cmd + 13),a
                           5095 ;demo.c:742: cmd.command = 0xD0;
   1809 3E D0              5096 	ld	a,#0xD0
   180B 32r7As41           5097 	ld	(#_cmd + 14),a
                           5098 ;demo.c:743: vdp_copier(&cmd);
   180E 21r6Cs41           5099 	ld	hl,#_cmd
   1811 E5                 5100 	push	hl
   1812 CDr00s00           5101 	call	_vdp_copier
   1815 F1                 5102 	pop	af
                           5103 ;demo.c:733: for (y = 0; y < 106; y+=1) {
   1816 DD 34 FF           5104 	inc	-1 (ix)
   1819 C3r97s17           5105 	jp	00110$
   181C                    5106 00113$:
                           5107 ;demo.c:746: frames+=53;
   181C 21rCEs41           5108 	ld	hl,#_frames
   181F 7E                 5109 	ld	a,(hl)
   1820 C6 35              5110 	add	a,#0x35
   1822 23                 5111 	inc	hl
   1823 2B                 5112 	dec	hl
   1824 C5                 5113 	push	bc
   1825 4F                 5114 	ld	c, a
   1826 23                 5115 	inc	hl
   1827 7E                 5116 	ld	a, (hl)
   1828 47                 5117 	ld	b, a
   1829 79                 5118 	ld	a, c
   182A 2B                 5119 	dec	hl
   182B 77                 5120 	ld	(hl), a
   182C 78                 5121 	ld	a, b
   182D C1                 5122 	pop	bc
   182E CE 00              5123 	adc	a,#0x00
   1830 23                 5124 	inc	hl
   1831 77                 5125 	ld	(hl),a
                           5126 ;demo.c:747: if (frames >= 212) { frames = 0; po+=256; }
   1832 3ArCEs41           5127 	ld	a,(#_frames+0)
   1835 D6 D4              5128 	sub	a,#0xD4
   1837 3ArCFs41           5129 	ld	a,(#_frames+1)
   183A DE 00              5130 	sbc	a,#0x00
   183C FAr5Fs18           5131 	jp	M,00104$
   183F 21rCEs41           5132 	ld	hl,#_frames + 0
   1842 36 00              5133 	ld	(hl), #0x00
   1844 21rCFs41           5134 	ld	hl,#_frames + 1
   1847 36 00              5135 	ld	(hl), #0x00
   1849 21rCCs41           5136 	ld	hl,#_po
   184C 7E                 5137 	ld	a,(hl)
   184D C6 00              5138 	add	a,#0x00
   184F 23                 5139 	inc	hl
   1850 2B                 5140 	dec	hl
   1851 C5                 5141 	push	bc
   1852 4F                 5142 	ld	c, a
   1853 23                 5143 	inc	hl
   1854 7E                 5144 	ld	a, (hl)
   1855 47                 5145 	ld	b, a
   1856 79                 5146 	ld	a, c
   1857 2B                 5147 	dec	hl
   1858 77                 5148 	ld	(hl), a
   1859 78                 5149 	ld	a, b
   185A C1                 5150 	pop	bc
   185B CE 01              5151 	adc	a,#0x01
   185D 23                 5152 	inc	hl
   185E 77                 5153 	ld	(hl),a
   185F                    5154 00104$:
                           5155 ;demo.c:748: if (po >= 768) {
   185F 3ArCCs41           5156 	ld	a,(#_po+0)
   1862 D6 00              5157 	sub	a,#0x00
   1864 3ArCDs41           5158 	ld	a,(#_po+1)
   1867 DE 03              5159 	sbc	a,#0x03
   1869 FAr76s18           5160 	jp	M,00114$
                           5161 ;demo.c:749: po = 0;
   186C 21rCCs41           5162 	ld	hl,#_po + 0
   186F 36 00              5163 	ld	(hl), #0x00
   1871 21rCDs41           5164 	ld	hl,#_po + 1
   1874 36 00              5165 	ld	(hl), #0x00
   1876                    5166 00114$:
   1876 DD F9              5167 	ld	sp,ix
   1878 DD E1              5168 	pop	ix
   187A C9                 5169 	ret
   187B                    5170 _animplay_end::
   187B                    5171 __str_9:
   187B 4C 20 4F 20 41 20  5172 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1888 00                 5173 	.db 0x00
   1889                    5174 __str_10:
   1889 4C 46 31 20 20 20  5175 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1894 00                 5176 	.db 0x00
   1895                    5177 __str_11:
   1895 4C 46 32 20 20 20  5178 	.ascii "LF2     PCK"
        20 20 50 43 4B
   18A0 00                 5179 	.db 0x00
   18A1                    5180 __str_12:
   18A1 4C 46 33 20 20 20  5181 	.ascii "LF3     PCK"
        20 20 50 43 4B
   18AC 00                 5182 	.db 0x00
                           5183 ;demo.c:765: void drawbox(uint8_t x, uint8_t y) {
                           5184 ;	---------------------------------
                           5185 ; Function drawbox
                           5186 ; ---------------------------------
   18AD                    5187 _drawbox_start::
   18AD                    5188 _drawbox:
   18AD DD E5              5189 	push	ix
   18AF DD 21 00 00        5190 	ld	ix,#0
   18B3 DD 39              5191 	add	ix,sp
                           5192 ;demo.c:766: cmd.source_x = boxes_x[boxi];
   18B5 21rE8s41           5193 	ld	hl,#_boxi
   18B8 3ErD9              5194 	ld	a,#<_boxes_x
   18BA 86                 5195 	add	a,(hl)
   18BB 4F                 5196 	ld	c,a
   18BC 3Es41              5197 	ld	a,#>_boxes_x
   18BE CE 00              5198 	adc	a,#0x00
   18C0 47                 5199 	ld	b,a
   18C1 0A                 5200 	ld	a,(bc)
   18C2 4F                 5201 	ld	c,a
   18C3 06 00              5202 	ld	b,#0x00
   18C5 21r6Cs41           5203 	ld	hl,#_cmd
   18C8 71                 5204 	ld	(hl),c
   18C9 23                 5205 	inc	hl
   18CA 70                 5206 	ld	(hl),b
                           5207 ;demo.c:767: cmd.source_y = boxes_y[boxi];
   18CB 01r6Es41           5208 	ld	bc,#_cmd + 2
   18CE 3ArE8s41           5209 	ld	a,(#_boxi+0)
   18D1 87                 5210 	add	a,a
   18D2 C6rDE              5211 	add	a,#<_boxes_y
   18D4 6F                 5212 	ld	l,a
   18D5 3Es41              5213 	ld	a,#>_boxes_y
   18D7 CE 00              5214 	adc	a,#0x00
   18D9 67                 5215 	ld	h,a
   18DA 5E                 5216 	ld	e,(hl)
   18DB 23                 5217 	inc	hl
   18DC 56                 5218 	ld	d,(hl)
   18DD 69                 5219 	ld	l,c
   18DE 60                 5220 	ld	h,b
   18DF 73                 5221 	ld	(hl),e
   18E0 23                 5222 	inc	hl
   18E1 72                 5223 	ld	(hl),d
                           5224 ;demo.c:768: cmd.dest_x = x;
   18E2 01r70s41           5225 	ld	bc,#_cmd + 4
   18E5 DD 5E 04           5226 	ld	e,4 (ix)
   18E8 16 00              5227 	ld	d,#0x00
   18EA 69                 5228 	ld	l,c
   18EB 60                 5229 	ld	h,b
   18EC 73                 5230 	ld	(hl),e
   18ED 23                 5231 	inc	hl
   18EE 72                 5232 	ld	(hl),d
                           5233 ;demo.c:769: cmd.dest_y = y;
   18EF 01r72s41           5234 	ld	bc,#_cmd + 6
   18F2 DD 5E 05           5235 	ld	e,5 (ix)
   18F5 16 00              5236 	ld	d,#0x00
   18F7 69                 5237 	ld	l,c
   18F8 60                 5238 	ld	h,b
   18F9 73                 5239 	ld	(hl),e
   18FA 23                 5240 	inc	hl
   18FB 72                 5241 	ld	(hl),d
                           5242 ;demo.c:770: cmd.size_x = 36;
   18FC 21r74s41           5243 	ld	hl, #_cmd + 8
   18FF 36 24              5244 	ld	(hl),#0x24
   1901 23                 5245 	inc	hl
   1902 36 00              5246 	ld	(hl),#0x00
                           5247 ;demo.c:771: cmd.size_y = 36;
   1904 21r76s41           5248 	ld	hl, #_cmd + 10
   1907 36 24              5249 	ld	(hl),#0x24
   1909 23                 5250 	inc	hl
   190A 36 00              5251 	ld	(hl),#0x00
                           5252 ;demo.c:772: cmd.data = 0;
                           5253 ;demo.c:773: cmd.argument = 0x00;
   190C 3E 00              5254 	ld	a,#0x00
   190E 32r78s41           5255 	ld	(#_cmd + 12),a
   1911 32r79s41           5256 	ld	(#_cmd + 13),a
                           5257 ;demo.c:774: cmd.command = 0x98; // TIMP sprite
   1914 3E 98              5258 	ld	a,#0x98
   1916 32r7As41           5259 	ld	(#_cmd + 14),a
                           5260 ;demo.c:775: vdp_copier(&cmd);
   1919 21r6Cs41           5261 	ld	hl,#_cmd
   191C E5                 5262 	push	hl
   191D CDr00s00           5263 	call	_vdp_copier
   1920 F1                 5264 	pop	af
                           5265 ;demo.c:777: prevx = x;
   1921 DD 7E 04           5266 	ld	a,4 (ix)
   1924 21rD5s41           5267 	ld	hl,#_prevx + 0
   1927 77                 5268 	ld	(hl), a
   1928 21rD6s41           5269 	ld	hl,#_prevx + 1
   192B 36 00              5270 	ld	(hl), #0x00
                           5271 ;demo.c:778: prevy = y;
   192D DD 7E 05           5272 	ld	a,5 (ix)
   1930 21rD7s41           5273 	ld	hl,#_prevy + 0
   1933 77                 5274 	ld	(hl), a
   1934 21rD8s41           5275 	ld	hl,#_prevy + 1
   1937 36 00              5276 	ld	(hl), #0x00
   1939 DD E1              5277 	pop	ix
   193B C9                 5278 	ret
   193C                    5279 _drawbox_end::
                           5280 ;demo.c:792: void boxes() {
                           5281 ;	---------------------------------
                           5282 ; Function boxes
                           5283 ; ---------------------------------
   193C                    5284 _boxes_start::
   193C                    5285 _boxes:
   193C DD E5              5286 	push	ix
   193E DD 21 00 00        5287 	ld	ix,#0
   1942 DD 39              5288 	add	ix,sp
   1944 F5                 5289 	push	af
                           5290 ;demo.c:796: if (bx < 0) return;
   1945 FD 21rE9s41        5291 	ld	iy,#_bx
   1949 FD CB 01 7E        5292 	bit	7,1 (iy)
   194D C2r63s1D           5293 	jp	NZ,00149$
                           5294 ;demo.c:798: if (bonc == 1) {
   1950 3ArF1s41           5295 	ld	a,(#_bonc+0)
   1953 D6 01              5296 	sub	a,#0x01
   1955 20 06              5297 	jr	NZ,00178$
   1957 3ArF2s41           5298 	ld	a,(#_bonc+1)
   195A B7                 5299 	or	a,a
   195B 28 02              5300 	jr	Z,00179$
   195D                    5301 00178$:
   195D 18 4D              5302 	jr	00104$
   195F                    5303 00179$:
                           5304 ;demo.c:800: cmd.source_x = 0;
   195F 21r6Cs41           5305 	ld	hl,#_cmd
   1962 36 00              5306 	ld	(hl),#0x00
   1964 23                 5307 	inc	hl
   1965 36 00              5308 	ld	(hl),#0x00
                           5309 ;demo.c:801: cmd.source_y = 256;
   1967 21r6Es41           5310 	ld	hl, #_cmd + 2
   196A 36 00              5311 	ld	(hl),#0x00
   196C 23                 5312 	inc	hl
   196D 36 01              5313 	ld	(hl),#0x01
                           5314 ;demo.c:802: cmd.dest_x = pbx;
   196F 01r70s41           5315 	ld	bc,#_cmd + 4
   1972 ED 5BrF3s41        5316 	ld	de,(_pbx)
   1976 69                 5317 	ld	l,c
   1977 60                 5318 	ld	h,b
   1978 73                 5319 	ld	(hl),e
   1979 23                 5320 	inc	hl
   197A 72                 5321 	ld	(hl),d
                           5322 ;demo.c:803: cmd.dest_y = pbt;
   197B 01r72s41           5323 	ld	bc,#_cmd + 6
   197E ED 5BrF5s41        5324 	ld	de,(_pbt)
   1982 69                 5325 	ld	l,c
   1983 60                 5326 	ld	h,b
   1984 73                 5327 	ld	(hl),e
   1985 23                 5328 	inc	hl
   1986 72                 5329 	ld	(hl),d
                           5330 ;demo.c:804: cmd.size_x = 36;
   1987 21r74s41           5331 	ld	hl, #_cmd + 8
   198A 36 24              5332 	ld	(hl),#0x24
   198C 23                 5333 	inc	hl
   198D 36 00              5334 	ld	(hl),#0x00
                           5335 ;demo.c:805: cmd.size_y = 36;
   198F 21r76s41           5336 	ld	hl, #_cmd + 10
   1992 36 24              5337 	ld	(hl),#0x24
   1994 23                 5338 	inc	hl
   1995 36 00              5339 	ld	(hl),#0x00
                           5340 ;demo.c:806: cmd.data = 0;
                           5341 ;demo.c:807: cmd.argument = 0x00;
   1997 3E 00              5342 	ld	a,#0x00
   1999 32r78s41           5343 	ld	(#_cmd + 12),a
   199C 32r79s41           5344 	ld	(#_cmd + 13),a
                           5345 ;demo.c:808: cmd.command = 0xD0; // HMMM
   199F 3E D0              5346 	ld	a,#0xD0
   19A1 32r7As41           5347 	ld	(#_cmd + 14),a
                           5348 ;demo.c:809: vdp_copier(&cmd);
   19A4 21r6Cs41           5349 	ld	hl,#_cmd
   19A7 E5                 5350 	push	hl
   19A8 CDr00s00           5351 	call	_vdp_copier
   19AB F1                 5352 	pop	af
   19AC                    5353 00104$:
                           5354 ;demo.c:812: if (boxes_init == 0) {
   19AC AF                 5355 	xor	a,a
   19AD 21rD2s41           5356 	ld	hl,#_boxes_init + 0
   19B0 B6                 5357 	or	a,(hl)
   19B1 C2rB3s1A           5358 	jp	NZ,00106$
                           5359 ;demo.c:813: boxes_init = 1;
   19B4 FD 21rD2s41        5360 	ld	iy,#_boxes_init
   19B8 FD 36 00 01        5361 	ld	0 (iy),#0x01
                           5362 ;demo.c:815: cmd.size_x = 8;
   19BC 21r74s41           5363 	ld	hl, #_cmd + 8
   19BF 36 08              5364 	ld	(hl),#0x08
   19C1 23                 5365 	inc	hl
   19C2 36 00              5366 	ld	(hl),#0x00
                           5367 ;demo.c:816: cmd.size_y = 212;
   19C4 21r76s41           5368 	ld	hl, #_cmd + 10
   19C7 36 D4              5369 	ld	(hl),#0xD4
   19C9 23                 5370 	inc	hl
   19CA 36 00              5371 	ld	(hl),#0x00
                           5372 ;demo.c:817: cmd.data = 0;
                           5373 ;demo.c:818: cmd.argument = 0x00; // from 70xY to left
   19CC 3E 00              5374 	ld	a,#0x00
   19CE 32r78s41           5375 	ld	(#_cmd + 12),a
   19D1 32r79s41           5376 	ld	(#_cmd + 13),a
                           5377 ;demo.c:819: cmd.command = 0xd0; // vram to vram, y only
   19D4 01r7As41           5378 	ld	bc,#_cmd + 14
   19D7 3E D0              5379 	ld	a,#0xD0
   19D9 02                 5380 	ld	(bc),a
                           5381 ;demo.c:820: cmd.source_x = 248;
   19DA 21r6Cs41           5382 	ld	hl,#_cmd
   19DD 36 F8              5383 	ld	(hl),#0xF8
   19DF 23                 5384 	inc	hl
   19E0 36 00              5385 	ld	(hl),#0x00
                           5386 ;demo.c:821: cmd.source_y = 0;
   19E2 21r6Es41           5387 	ld	hl, #_cmd + 2
   19E5 36 00              5388 	ld	(hl),#0x00
   19E7 23                 5389 	inc	hl
   19E8 36 00              5390 	ld	(hl),#0x00
                           5391 ;demo.c:822: cmd.dest_y = 0;
   19EA 21r72s41           5392 	ld	hl, #_cmd + 6
   19ED 36 00              5393 	ld	(hl),#0x00
   19EF 23                 5394 	inc	hl
   19F0 36 00              5395 	ld	(hl),#0x00
                           5396 ;demo.c:824: for (x = 248; x >= 0; x-=8) {
   19F2 01 F8 00           5397 	ld	bc,#0x00F8
   19F5                    5398 00137$:
   19F5 78                 5399 	ld	a,b
   19F6 CB 7F              5400 	bit	7,a
   19F8 20 38              5401 	jr	NZ,00140$
                           5402 ;demo.c:825: waitVB();
   19FA 76                 5403 		halt 
                           5404 ;demo.c:826: cmd.dest_x = x;
   19FB 11r70s41           5405 	ld	de,#_cmd + 4
   19FE EB                 5406 	ex	de,hl
   19FF 71                 5407 	ld	(hl),c
   1A00 23                 5408 	inc	hl
   1A01 70                 5409 	ld	(hl),b
                           5410 ;demo.c:827: cmd.dest_y = 0;
   1A02 11r72s41           5411 	ld	de,#_cmd + 6
   1A05 EB                 5412 	ex	de,hl
   1A06 36 00              5413 	ld	(hl),#0x00
   1A08 23                 5414 	inc	hl
   1A09 36 00              5415 	ld	(hl),#0x00
                           5416 ;demo.c:828: vdp_copier(&cmd);
   1A0B C5                 5417 	push	bc
   1A0C 21r6Cs41           5418 	ld	hl,#_cmd
   1A0F E5                 5419 	push	hl
   1A10 CDr00s00           5420 	call	_vdp_copier
   1A13 F1                 5421 	pop	af
   1A14 C1                 5422 	pop	bc
                           5423 ;demo.c:829: cmd.dest_y = 256;
   1A15 11r72s41           5424 	ld	de,#_cmd + 6
   1A18 EB                 5425 	ex	de,hl
   1A19 36 00              5426 	ld	(hl),#0x00
   1A1B 23                 5427 	inc	hl
   1A1C 36 01              5428 	ld	(hl),#0x01
                           5429 ;demo.c:830: vdp_copier(&cmd);
   1A1E C5                 5430 	push	bc
   1A1F 21r6Cs41           5431 	ld	hl,#_cmd
   1A22 E5                 5432 	push	hl
   1A23 CDr00s00           5433 	call	_vdp_copier
   1A26 F1                 5434 	pop	af
   1A27 C1                 5435 	pop	bc
                           5436 ;demo.c:824: for (x = 248; x >= 0; x-=8) {
   1A28 79                 5437 	ld	a,c
   1A29 C6 F8              5438 	add	a,#0xF8
   1A2B 4F                 5439 	ld	c,a
   1A2C 78                 5440 	ld	a,b
   1A2D CE FF              5441 	adc	a,#0xFF
   1A2F 47                 5442 	ld	b,a
   1A30 18 C3              5443 	jr	00137$
   1A32                    5444 00140$:
                           5445 ;demo.c:833: for (x=0;x < 8;x++) {
   1A32 DD 36 FE 00        5446 	ld	-2 (ix),#0x00
   1A36 DD 36 FF 00        5447 	ld	-1 (ix),#0x00
   1A3A                    5448 00145$:
   1A3A DD 7E FE           5449 	ld	a,-2 (ix)
   1A3D D6 08              5450 	sub	a,#0x08
   1A3F DD 7E FF           5451 	ld	a,-1 (ix)
   1A42 DE 00              5452 	sbc	a,#0x00
   1A44 F2r9Es1A           5453 	jp	P,00148$
                           5454 ;demo.c:835: for (y=0;y < 9;y++) {
   1A47 11 00 00           5455 	ld	de,#0x0000
   1A4A                    5456 00141$:
   1A4A 7B                 5457 	ld	a,e
   1A4B D6 09              5458 	sub	a,#0x09
   1A4D 7A                 5459 	ld	a,d
   1A4E DE 00              5460 	sbc	a,#0x00
   1A50 F2r93s1A           5461 	jp	P,00147$
                           5462 ;demo.c:836: boxes_x[4] = 0;
   1A53 01rDDs41           5463 	ld	bc,#_boxes_x + 4
   1A56 3E 00              5464 	ld	a,#0x00
   1A58 02                 5465 	ld	(bc),a
                           5466 ;demo.c:837: boxes_y[4] = 768+2*36;
   1A59 21rE6s41           5467 	ld	hl, #_boxes_y + 8
   1A5C 36 48              5468 	ld	(hl),#0x48
   1A5E 23                 5469 	inc	hl
   1A5F 36 03              5470 	ld	(hl),#0x03
                           5471 ;demo.c:838: boxi = 4;
   1A61 21rE8s41           5472 	ld	hl,#_boxi + 0
   1A64 36 04              5473 	ld	(hl), #0x04
                           5474 ;demo.c:839: drawbox((x*36),y*18);
   1A66 4B                 5475 	ld	c,e
   1A67 D5                 5476 	push	de
   1A68 79                 5477 	ld	a,c
   1A69 5F                 5478 	ld	e,a
   1A6A 87                 5479 	add	a,a
   1A6B 87                 5480 	add	a,a
   1A6C 87                 5481 	add	a,a
   1A6D 83                 5482 	add	a,e
   1A6E 87                 5483 	add	a,a
   1A6F D1                 5484 	pop	de
   1A70 4F                 5485 	ld	c,a
   1A71 DD 46 FE           5486 	ld	b,-2 (ix)
   1A74 D5                 5487 	push	de
   1A75 78                 5488 	ld	a,b
   1A76 5F                 5489 	ld	e,a
   1A77 87                 5490 	add	a,a
   1A78 87                 5491 	add	a,a
   1A79 87                 5492 	add	a,a
   1A7A 83                 5493 	add	a,e
   1A7B 87                 5494 	add	a,a
   1A7C 87                 5495 	add	a,a
   1A7D D1                 5496 	pop	de
   1A7E 47                 5497 	ld	b,a
   1A7F D5                 5498 	push	de
   1A80 79                 5499 	ld	a,c
   1A81 F5                 5500 	push	af
   1A82 33                 5501 	inc	sp
   1A83 C5                 5502 	push	bc
   1A84 33                 5503 	inc	sp
   1A85 CDrADs18           5504 	call	_drawbox
   1A88 F1                 5505 	pop	af
   1A89 D1                 5506 	pop	de
                           5507 ;demo.c:840: boxi = 0;
   1A8A 21rE8s41           5508 	ld	hl,#_boxi + 0
   1A8D 36 00              5509 	ld	(hl), #0x00
                           5510 ;demo.c:835: for (y=0;y < 9;y++) {
   1A8F 13                 5511 	inc	de
   1A90 C3r4As1A           5512 	jp	00141$
   1A93                    5513 00147$:
                           5514 ;demo.c:833: for (x=0;x < 8;x++) {
   1A93 DD 34 FE           5515 	inc	-2 (ix)
   1A96 20 03              5516 	jr	NZ,00180$
   1A98 DD 34 FF           5517 	inc	-1 (ix)
   1A9B                    5518 00180$:
   1A9B C3r3As1A           5519 	jp	00145$
   1A9E                    5520 00148$:
                           5521 ;demo.c:844: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   1A9E 21 08 B4           5522 	ld	hl,#0xB408
   1AA1 E5                 5523 	push	hl
   1AA2 21r68s1D           5524 	ld	hl,#__str_13
   1AA5 E5                 5525 	push	hl
   1AA6 CDr20s11           5526 	call	_drawsine
   1AA9 F1                 5527 	pop	af
   1AAA F1                 5528 	pop	af
                           5529 ;demo.c:846: vdp_load_palette(boxes_palette);
   1AAB 21r48s41           5530 	ld	hl,#_boxes_palette
   1AAE E5                 5531 	push	hl
   1AAF CDr00s00           5532 	call	_vdp_load_palette
   1AB2 F1                 5533 	pop	af
   1AB3                    5534 00106$:
                           5535 ;demo.c:849: if (bt >= 80) bt+=8;
   1AB3 3ArEDs41           5536 	ld	a,(#_bt+0)
   1AB6 D6 50              5537 	sub	a,#0x50
   1AB8 3ArEEs41           5538 	ld	a,(#_bt+1)
   1ABB DE 00              5539 	sbc	a,#0x00
   1ABD FArD6s1A           5540 	jp	M,00108$
   1AC0 21rEDs41           5541 	ld	hl,#_bt
   1AC3 7E                 5542 	ld	a,(hl)
   1AC4 C6 08              5543 	add	a,#0x08
   1AC6 23                 5544 	inc	hl
   1AC7 2B                 5545 	dec	hl
   1AC8 C5                 5546 	push	bc
   1AC9 4F                 5547 	ld	c, a
   1ACA 23                 5548 	inc	hl
   1ACB 7E                 5549 	ld	a, (hl)
   1ACC 47                 5550 	ld	b, a
   1ACD 79                 5551 	ld	a, c
   1ACE 2B                 5552 	dec	hl
   1ACF 77                 5553 	ld	(hl), a
   1AD0 78                 5554 	ld	a, b
   1AD1 C1                 5555 	pop	bc
   1AD2 CE 00              5556 	adc	a,#0x00
   1AD4 23                 5557 	inc	hl
   1AD5 77                 5558 	ld	(hl),a
   1AD6                    5559 00108$:
                           5560 ;demo.c:850: if (bt < 80 && bt >= 60) bt+=7;
   1AD6 3ArEDs41           5561 	ld	a,(#_bt+0)
   1AD9 D6 50              5562 	sub	a,#0x50
   1ADB 3ArEEs41           5563 	ld	a,(#_bt+1)
   1ADE DE 00              5564 	sbc	a,#0x00
   1AE0 F2r06s1B           5565 	jp	P,00110$
   1AE3 3ArEDs41           5566 	ld	a,(#_bt+0)
   1AE6 D6 3C              5567 	sub	a,#0x3C
   1AE8 3ArEEs41           5568 	ld	a,(#_bt+1)
   1AEB DE 00              5569 	sbc	a,#0x00
   1AED FAr06s1B           5570 	jp	M,00110$
   1AF0 21rEDs41           5571 	ld	hl,#_bt
   1AF3 7E                 5572 	ld	a,(hl)
   1AF4 C6 07              5573 	add	a,#0x07
   1AF6 23                 5574 	inc	hl
   1AF7 2B                 5575 	dec	hl
   1AF8 C5                 5576 	push	bc
   1AF9 4F                 5577 	ld	c, a
   1AFA 23                 5578 	inc	hl
   1AFB 7E                 5579 	ld	a, (hl)
   1AFC 47                 5580 	ld	b, a
   1AFD 79                 5581 	ld	a, c
   1AFE 2B                 5582 	dec	hl
   1AFF 77                 5583 	ld	(hl), a
   1B00 78                 5584 	ld	a, b
   1B01 C1                 5585 	pop	bc
   1B02 CE 00              5586 	adc	a,#0x00
   1B04 23                 5587 	inc	hl
   1B05 77                 5588 	ld	(hl),a
   1B06                    5589 00110$:
                           5590 ;demo.c:851: if (bt < 60 && bt >= 40) bt+=6;
   1B06 3ArEDs41           5591 	ld	a,(#_bt+0)
   1B09 D6 3C              5592 	sub	a,#0x3C
   1B0B 3ArEEs41           5593 	ld	a,(#_bt+1)
   1B0E DE 00              5594 	sbc	a,#0x00
   1B10 F2r36s1B           5595 	jp	P,00113$
   1B13 3ArEDs41           5596 	ld	a,(#_bt+0)
   1B16 D6 28              5597 	sub	a,#0x28
   1B18 3ArEEs41           5598 	ld	a,(#_bt+1)
   1B1B DE 00              5599 	sbc	a,#0x00
   1B1D FAr36s1B           5600 	jp	M,00113$
   1B20 21rEDs41           5601 	ld	hl,#_bt
   1B23 7E                 5602 	ld	a,(hl)
   1B24 C6 06              5603 	add	a,#0x06
   1B26 23                 5604 	inc	hl
   1B27 2B                 5605 	dec	hl
   1B28 C5                 5606 	push	bc
   1B29 4F                 5607 	ld	c, a
   1B2A 23                 5608 	inc	hl
   1B2B 7E                 5609 	ld	a, (hl)
   1B2C 47                 5610 	ld	b, a
   1B2D 79                 5611 	ld	a, c
   1B2E 2B                 5612 	dec	hl
   1B2F 77                 5613 	ld	(hl), a
   1B30 78                 5614 	ld	a, b
   1B31 C1                 5615 	pop	bc
   1B32 CE 00              5616 	adc	a,#0x00
   1B34 23                 5617 	inc	hl
   1B35 77                 5618 	ld	(hl),a
   1B36                    5619 00113$:
                           5620 ;demo.c:852: if (bt < 40 && bt >= 10) bt+=5;
   1B36 3ArEDs41           5621 	ld	a,(#_bt+0)
   1B39 D6 28              5622 	sub	a,#0x28
   1B3B 3ArEEs41           5623 	ld	a,(#_bt+1)
   1B3E DE 00              5624 	sbc	a,#0x00
   1B40 F2r66s1B           5625 	jp	P,00116$
   1B43 3ArEDs41           5626 	ld	a,(#_bt+0)
   1B46 D6 0A              5627 	sub	a,#0x0A
   1B48 3ArEEs41           5628 	ld	a,(#_bt+1)
   1B4B DE 00              5629 	sbc	a,#0x00
   1B4D FAr66s1B           5630 	jp	M,00116$
   1B50 21rEDs41           5631 	ld	hl,#_bt
   1B53 7E                 5632 	ld	a,(hl)
   1B54 C6 05              5633 	add	a,#0x05
   1B56 23                 5634 	inc	hl
   1B57 2B                 5635 	dec	hl
   1B58 C5                 5636 	push	bc
   1B59 4F                 5637 	ld	c, a
   1B5A 23                 5638 	inc	hl
   1B5B 7E                 5639 	ld	a, (hl)
   1B5C 47                 5640 	ld	b, a
   1B5D 79                 5641 	ld	a, c
   1B5E 2B                 5642 	dec	hl
   1B5F 77                 5643 	ld	(hl), a
   1B60 78                 5644 	ld	a, b
   1B61 C1                 5645 	pop	bc
   1B62 CE 00              5646 	adc	a,#0x00
   1B64 23                 5647 	inc	hl
   1B65 77                 5648 	ld	(hl),a
   1B66                    5649 00116$:
                           5650 ;demo.c:853: if (bt < 10 ) bt+=4;
   1B66 3ArEDs41           5651 	ld	a,(#_bt+0)
   1B69 D6 0A              5652 	sub	a,#0x0A
   1B6B 3ArEEs41           5653 	ld	a,(#_bt+1)
   1B6E DE 00              5654 	sbc	a,#0x00
   1B70 F2r89s1B           5655 	jp	P,00119$
   1B73 21rEDs41           5656 	ld	hl,#_bt
   1B76 7E                 5657 	ld	a,(hl)
   1B77 C6 04              5658 	add	a,#0x04
   1B79 23                 5659 	inc	hl
   1B7A 2B                 5660 	dec	hl
   1B7B C5                 5661 	push	bc
   1B7C 4F                 5662 	ld	c, a
   1B7D 23                 5663 	inc	hl
   1B7E 7E                 5664 	ld	a, (hl)
   1B7F 47                 5665 	ld	b, a
   1B80 79                 5666 	ld	a, c
   1B81 2B                 5667 	dec	hl
   1B82 77                 5668 	ld	(hl), a
   1B83 78                 5669 	ld	a, b
   1B84 C1                 5670 	pop	bc
   1B85 CE 00              5671 	adc	a,#0x00
   1B87 23                 5672 	inc	hl
   1B88 77                 5673 	ld	(hl),a
   1B89                    5674 00119$:
                           5675 ;demo.c:856: cmd.source_x = bx;
   1B89 ED 4BrE9s41        5676 	ld	bc,(_bx)
   1B8D 21r6Cs41           5677 	ld	hl,#_cmd
   1B90 71                 5678 	ld	(hl),c
   1B91 23                 5679 	inc	hl
   1B92 70                 5680 	ld	(hl),b
                           5681 ;demo.c:857: cmd.source_y = bt;
   1B93 01r6Es41           5682 	ld	bc,#_cmd + 2
   1B96 ED 5BrEDs41        5683 	ld	de,(_bt)
   1B9A 69                 5684 	ld	l,c
   1B9B 60                 5685 	ld	h,b
   1B9C 73                 5686 	ld	(hl),e
   1B9D 23                 5687 	inc	hl
   1B9E 72                 5688 	ld	(hl),d
                           5689 ;demo.c:858: cmd.dest_x = 0;
   1B9F 21r70s41           5690 	ld	hl, #_cmd + 4
   1BA2 36 00              5691 	ld	(hl),#0x00
   1BA4 23                 5692 	inc	hl
   1BA5 36 00              5693 	ld	(hl),#0x00
                           5694 ;demo.c:859: cmd.dest_y = 256;
   1BA7 21r72s41           5695 	ld	hl, #_cmd + 6
   1BAA 36 00              5696 	ld	(hl),#0x00
   1BAC 23                 5697 	inc	hl
   1BAD 36 01              5698 	ld	(hl),#0x01
                           5699 ;demo.c:860: cmd.size_x = 36;
   1BAF 21r74s41           5700 	ld	hl, #_cmd + 8
   1BB2 36 24              5701 	ld	(hl),#0x24
   1BB4 23                 5702 	inc	hl
   1BB5 36 00              5703 	ld	(hl),#0x00
                           5704 ;demo.c:861: cmd.size_y = 36;
   1BB7 21r76s41           5705 	ld	hl, #_cmd + 10
   1BBA 36 24              5706 	ld	(hl),#0x24
   1BBC 23                 5707 	inc	hl
   1BBD 36 00              5708 	ld	(hl),#0x00
                           5709 ;demo.c:862: cmd.data = 0;
                           5710 ;demo.c:863: cmd.argument = 0x00;
   1BBF 3E 00              5711 	ld	a,#0x00
   1BC1 32r78s41           5712 	ld	(#_cmd + 12),a
   1BC4 32r79s41           5713 	ld	(#_cmd + 13),a
                           5714 ;demo.c:864: cmd.command = 0xD0; // HMMM
   1BC7 3E D0              5715 	ld	a,#0xD0
   1BC9 32r7As41           5716 	ld	(#_cmd + 14),a
                           5717 ;demo.c:865: vdp_copier(&cmd);
   1BCC 21r6Cs41           5718 	ld	hl,#_cmd
   1BCF E5                 5719 	push	hl
   1BD0 CDr00s00           5720 	call	_vdp_copier
   1BD3 F1                 5721 	pop	af
                           5722 ;demo.c:867: pbx = bx;
   1BD4 2ArE9s41           5723 	ld	hl,(_bx)
   1BD7 FD 21rF3s41        5724 	ld	iy,#_pbx
   1BDB FD 75 00           5725 	ld	0 (iy),l
   1BDE FD 21rF3s41        5726 	ld	iy,#_pbx
   1BE2 FD 74 01           5727 	ld	1 (iy),h
                           5728 ;demo.c:868: pbt = bt;
   1BE5 2ArEDs41           5729 	ld	hl,(_bt)
   1BE8 FD 21rF5s41        5730 	ld	iy,#_pbt
   1BEC FD 75 00           5731 	ld	0 (iy),l
   1BEF FD 21rF5s41        5732 	ld	iy,#_pbt
   1BF3 FD 74 01           5733 	ld	1 (iy),h
                           5734 ;demo.c:873: bonc = 1;
   1BF6 21rF1s41           5735 	ld	hl,#_bonc + 0
   1BF9 36 01              5736 	ld	(hl), #0x01
   1BFB 21rF2s41           5737 	ld	hl,#_bonc + 1
   1BFE 36 00              5738 	ld	(hl), #0x00
                           5739 ;demo.c:874: if (bt > by) {
   1C00 21rEBs41           5740 	ld	hl,#_by
   1C03 7E                 5741 	ld	a,(hl)
   1C04 FD 21rEDs41        5742 	ld	iy,#_bt
   1C08 FD 96 00           5743 	sub	a,0 (iy)
   1C0B 23                 5744 	inc	hl
   1C0C 7E                 5745 	ld	a,(hl)
   1C0D FD 21rEDs41        5746 	ld	iy,#_bt
   1C11 FD 9E 01           5747 	sbc	a,1 (iy)
   1C14 F2r52s1D           5748 	jp	P,00135$
                           5749 ;demo.c:875: bt = by;
   1C17 2ArEBs41           5750 	ld	hl,(_by)
   1C1A FD 21rEDs41        5751 	ld	iy,#_bt
   1C1E FD 75 00           5752 	ld	0 (iy),l
   1C21 FD 21rEDs41        5753 	ld	iy,#_bt
   1C25 FD 74 01           5754 	ld	1 (iy),h
                           5755 ;demo.c:876: drawbox(bx,bt);
   1C28 21rEDs41           5756 	ld	hl,#_bt + 0
   1C2B 4E                 5757 	ld	c,(hl)
   1C2C 21rE9s41           5758 	ld	hl,#_bx + 0
   1C2F 46                 5759 	ld	b,(hl)
   1C30 79                 5760 	ld	a,c
   1C31 F5                 5761 	push	af
   1C32 33                 5762 	inc	sp
   1C33 C5                 5763 	push	bc
   1C34 33                 5764 	inc	sp
   1C35 CDrADs18           5765 	call	_drawbox
   1C38 F1                 5766 	pop	af
                           5767 ;demo.c:877: bt = 0;
   1C39 21rEDs41           5768 	ld	hl,#_bt + 0
   1C3C 36 00              5769 	ld	(hl), #0x00
   1C3E 21rEEs41           5770 	ld	hl,#_bt + 1
   1C41 36 00              5771 	ld	(hl), #0x00
                           5772 ;demo.c:878: if (by > 48) {
   1C43 3E 30              5773 	ld	a,#0x30
   1C45 FD 21rEBs41        5774 	ld	iy,#_by
   1C49 FD 96 00           5775 	sub	a,0 (iy)
   1C4C 3E 00              5776 	ld	a,#0x00
   1C4E FD 21rEBs41        5777 	ld	iy,#_by
   1C52 FD 9E 01           5778 	sbc	a,1 (iy)
   1C55 F2rADs1C           5779 	jp	P,00123$
                           5780 ;demo.c:879: bonc = 0;
   1C58 21rF1s41           5781 	ld	hl,#_bonc + 0
   1C5B 36 00              5782 	ld	(hl), #0x00
   1C5D 21rF2s41           5783 	ld	hl,#_bonc + 1
   1C60 36 00              5784 	ld	(hl), #0x00
                           5785 ;demo.c:880: by-=16;
   1C62 21rEBs41           5786 	ld	hl,#_by
   1C65 7E                 5787 	ld	a,(hl)
   1C66 C6 F0              5788 	add	a,#0xF0
   1C68 77                 5789 	ld	(hl),a
   1C69 23                 5790 	inc	hl
   1C6A 7E                 5791 	ld	a,(hl)
   1C6B CE FF              5792 	adc	a,#0xFF
   1C6D 77                 5793 	ld	(hl),a
                           5794 ;demo.c:881: prevbox_of = boxes_of[boxi];
   1C6E 3ArE8s41           5795 	ld	a,(#_boxi+0)
   1C71 87                 5796 	add	a,a
   1C72 C6rF7              5797 	add	a,#<_boxes_of
   1C74 6F                 5798 	ld	l,a
   1C75 3Es41              5799 	ld	a,#>_boxes_of
   1C77 CE 00              5800 	adc	a,#0x00
   1C79 67                 5801 	ld	h,a
   1C7A 4E                 5802 	ld	c,(hl)
   1C7B 23                 5803 	inc	hl
   1C7C 21r01s42           5804 	ld	hl,#_prevbox_of + 0
   1C7F 71                 5805 	ld	(hl), c
                           5806 ;demo.c:882: by+=prevbox_of;
   1C80 21r01s42           5807 	ld	hl,#_prevbox_of + 0
   1C83 4E                 5808 	ld	c,(hl)
   1C84 06 00              5809 	ld	b,#0x00
   1C86 21rEBs41           5810 	ld	hl,#_by
   1C89 7E                 5811 	ld	a,(hl)
   1C8A 81                 5812 	add	a,c
   1C8B 23                 5813 	inc	hl
   1C8C 2B                 5814 	dec	hl
   1C8D C5                 5815 	push	bc
   1C8E 4F                 5816 	ld	c, a
   1C8F 23                 5817 	inc	hl
   1C90 7E                 5818 	ld	a, (hl)
   1C91 47                 5819 	ld	b, a
   1C92 79                 5820 	ld	a, c
   1C93 2B                 5821 	dec	hl
   1C94 77                 5822 	ld	(hl), a
   1C95 78                 5823 	ld	a, b
   1C96 C1                 5824 	pop	bc
   1C97 88                 5825 	adc	a,b
   1C98 23                 5826 	inc	hl
   1C99 77                 5827 	ld	(hl),a
                           5828 ;demo.c:883: boxi++;
   1C9A FD 21rE8s41        5829 	ld	iy,#_boxi
   1C9E FD 34 00           5830 	inc	0 (iy)
                           5831 ;demo.c:884: if (boxi >= 4) boxi = 0;
   1CA1 3ArE8s41           5832 	ld	a,(#_boxi+0)
   1CA4 D6 04              5833 	sub	a,#0x04
   1CA6 38 05              5834 	jr	C,00123$
   1CA8 21rE8s41           5835 	ld	hl,#_boxi + 0
   1CAB 36 00              5836 	ld	(hl), #0x00
   1CAD                    5837 00123$:
                           5838 ;demo.c:887: if (by <= 48) {
   1CAD 3E 30              5839 	ld	a,#0x30
   1CAF FD 21rEBs41        5840 	ld	iy,#_by
   1CB3 FD 96 00           5841 	sub	a,0 (iy)
   1CB6 3E 00              5842 	ld	a,#0x00
   1CB8 FD 21rEBs41        5843 	ld	iy,#_by
   1CBC FD 9E 01           5844 	sbc	a,1 (iy)
   1CBF FAr63s1D           5845 	jp	M,00149$
                           5846 ;demo.c:888: bx-=16;
   1CC2 21rE9s41           5847 	ld	hl,#_bx
   1CC5 7E                 5848 	ld	a,(hl)
   1CC6 C6 F0              5849 	add	a,#0xF0
   1CC8 77                 5850 	ld	(hl),a
   1CC9 23                 5851 	inc	hl
   1CCA 7E                 5852 	ld	a,(hl)
   1CCB CE FF              5853 	adc	a,#0xFF
   1CCD 77                 5854 	ld	(hl),a
                           5855 ;demo.c:890: if (bx>128)bo+=8;
   1CCE 3E 80              5856 	ld	a,#0x80
   1CD0 FD 21rE9s41        5857 	ld	iy,#_bx
   1CD4 FD 96 00           5858 	sub	a,0 (iy)
   1CD7 3E 00              5859 	ld	a,#0x00
   1CD9 FD 21rE9s41        5860 	ld	iy,#_bx
   1CDD FD 9E 01           5861 	sbc	a,1 (iy)
   1CE0 07                 5862 	rlca
   1CE1 E6 01              5863 	and	a,#0x01
   1CE3 4F                 5864 	ld	c,a
   1CE4 B7                 5865 	or	a,a
   1CE5 28 18              5866 	jr	Z,00125$
   1CE7 21rEFs41           5867 	ld	hl,#_bo
   1CEA 7E                 5868 	ld	a,(hl)
   1CEB C6 08              5869 	add	a,#0x08
   1CED 23                 5870 	inc	hl
   1CEE 2B                 5871 	dec	hl
   1CEF C5                 5872 	push	bc
   1CF0 4F                 5873 	ld	c, a
   1CF1 23                 5874 	inc	hl
   1CF2 7E                 5875 	ld	a, (hl)
   1CF3 47                 5876 	ld	b, a
   1CF4 79                 5877 	ld	a, c
   1CF5 2B                 5878 	dec	hl
   1CF6 77                 5879 	ld	(hl), a
   1CF7 78                 5880 	ld	a, b
   1CF8 C1                 5881 	pop	bc
   1CF9 CE 00              5882 	adc	a,#0x00
   1CFB 23                 5883 	inc	hl
   1CFC 77                 5884 	ld	(hl),a
   1CFD 18 0C              5885 	jr	00126$
   1CFF                    5886 00125$:
                           5887 ;demo.c:891: else bo-=8;
   1CFF 21rEFs41           5888 	ld	hl,#_bo
   1D02 7E                 5889 	ld	a,(hl)
   1D03 C6 F8              5890 	add	a,#0xF8
   1D05 77                 5891 	ld	(hl),a
   1D06 23                 5892 	inc	hl
   1D07 7E                 5893 	ld	a,(hl)
   1D08 CE FF              5894 	adc	a,#0xFF
   1D0A 77                 5895 	ld	(hl),a
   1D0B                    5896 00126$:
                           5897 ;demo.c:892: if (bo > 192) bo = 0;
   1D0B 3E C0              5898 	ld	a,#0xC0
   1D0D FD 21rEFs41        5899 	ld	iy,#_bo
   1D11 FD 96 00           5900 	sub	a,0 (iy)
   1D14 3E 00              5901 	ld	a,#0x00
   1D16 FD 21rEFs41        5902 	ld	iy,#_bo
   1D1A FD 9E 01           5903 	sbc	a,1 (iy)
   1D1D F2r2As1D           5904 	jp	P,00128$
   1D20 21rEFs41           5905 	ld	hl,#_bo + 0
   1D23 36 00              5906 	ld	(hl), #0x00
   1D25 21rF0s41           5907 	ld	hl,#_bo + 1
   1D28 36 00              5908 	ld	(hl), #0x00
   1D2A                    5909 00128$:
                           5910 ;demo.c:893: if (bx>128)by=84+bo;
   1D2A AF                 5911 	xor	a,a
   1D2B B1                 5912 	or	a,c
   1D2C 28 12              5913 	jr	Z,00130$
   1D2E 21rEBs41           5914 	ld	hl,#_by
   1D31 3ArEFs41           5915 	ld	a,(#_bo+0)
   1D34 C6 54              5916 	add	a,#0x54
   1D36 77                 5917 	ld	(hl),a
   1D37 3ArF0s41           5918 	ld	a,(#_bo+1)
   1D3A CE 00              5919 	adc	a,#0x00
   1D3C 23                 5920 	inc	hl
   1D3D 77                 5921 	ld	(hl),a
   1D3E 18 23              5922 	jr	00149$
   1D40                    5923 00130$:
                           5924 ;demo.c:894: else by=36+36+84+bo;
   1D40 21rEBs41           5925 	ld	hl,#_by
   1D43 3ArEFs41           5926 	ld	a,(#_bo+0)
   1D46 C6 9C              5927 	add	a,#0x9C
   1D48 77                 5928 	ld	(hl),a
   1D49 3ArF0s41           5929 	ld	a,(#_bo+1)
   1D4C CE 00              5930 	adc	a,#0x00
   1D4E 23                 5931 	inc	hl
   1D4F 77                 5932 	ld	(hl),a
   1D50 18 11              5933 	jr	00149$
   1D52                    5934 00135$:
                           5935 ;demo.c:897: drawbox(bx,bt);
   1D52 21rEDs41           5936 	ld	hl,#_bt + 0
   1D55 4E                 5937 	ld	c,(hl)
   1D56 21rE9s41           5938 	ld	hl,#_bx + 0
   1D59 46                 5939 	ld	b,(hl)
   1D5A 79                 5940 	ld	a,c
   1D5B F5                 5941 	push	af
   1D5C 33                 5942 	inc	sp
   1D5D C5                 5943 	push	bc
   1D5E 33                 5944 	inc	sp
   1D5F CDrADs18           5945 	call	_drawbox
   1D62 F1                 5946 	pop	af
   1D63                    5947 00149$:
   1D63 DD F9              5948 	ld	sp,ix
   1D65 DD E1              5949 	pop	ix
   1D67 C9                 5950 	ret
   1D68                    5951 _boxes_end::
   1D68                    5952 __str_13:
   1D68 4C 45 54 20 55 53  5953 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1D93 00                 5954 	.db 0x00
                           5955 ;demo.c:909: void thewave() {
                           5956 ;	---------------------------------
                           5957 ; Function thewave
                           5958 ; ---------------------------------
   1D94                    5959 _thewave_start::
   1D94                    5960 _thewave:
   1D94 DD E5              5961 	push	ix
   1D96 DD 21 00 00        5962 	ld	ix,#0
   1D9A DD 39              5963 	add	ix,sp
   1D9C 21 F5 FF           5964 	ld	hl,#-11
   1D9F 39                 5965 	add	hl,sp
   1DA0 F9                 5966 	ld	sp,hl
                           5967 ;demo.c:917: if (initwave == 0) {
   1DA1 AF                 5968 	xor	a,a
   1DA2 21r02s42           5969 	ld	hl,#_initwave + 0
   1DA5 B6                 5970 	or	a,(hl)
   1DA6 C2r2Es20           5971 	jp	NZ,00113$
                           5972 ;demo.c:918: initwave = 1;
   1DA9 21r02s42           5973 	ld	hl,#_initwave + 0
   1DAC 36 01              5974 	ld	(hl), #0x01
                           5975 ;demo.c:919: for (y = 0; y < 212; y++) {
   1DAE DD 36 FE 00        5976 	ld	-2 (ix),#0x00
   1DB2                    5977 00124$:
   1DB2 DD 7E FE           5978 	ld	a,-2 (ix)
   1DB5 D6 D4              5979 	sub	a,#0xD4
   1DB7 D2r2As1E           5980 	jp	NC,00127$
                           5981 ;demo.c:920: cmd.size_x = 256;
   1DBA 11r74s41           5982 	ld	de,#_cmd + 8
   1DBD EB                 5983 	ex	de,hl
   1DBE 36 00              5984 	ld	(hl),#0x00
   1DC0 23                 5985 	inc	hl
   1DC1 36 01              5986 	ld	(hl),#0x01
                           5987 ;demo.c:921: cmd.size_y = 2;
   1DC3 11r76s41           5988 	ld	de,#_cmd + 10
   1DC6 EB                 5989 	ex	de,hl
   1DC7 36 02              5990 	ld	(hl),#0x02
   1DC9 23                 5991 	inc	hl
   1DCA 36 00              5992 	ld	(hl),#0x00
                           5993 ;demo.c:922: cmd.data = 0;
   1DCC 11r78s41           5994 	ld	de,#_cmd + 12
   1DCF 3E 00              5995 	ld	a,#0x00
   1DD1 12                 5996 	ld	(de),a
                           5997 ;demo.c:923: cmd.argument = 0x00; // from 70xY to left
   1DD2 11r79s41           5998 	ld	de,#_cmd + 13
   1DD5 3E 00              5999 	ld	a,#0x00
   1DD7 12                 6000 	ld	(de),a
                           6001 ;demo.c:924: cmd.command = 0xd0; // vram to vram, y only
   1DD8 11r7As41           6002 	ld	de,#_cmd + 14
   1DDB 3E D0              6003 	ld	a,#0xD0
   1DDD 12                 6004 	ld	(de),a
                           6005 ;demo.c:926: cmd.source_x = 0;
   1DDE 21r6Cs41           6006 	ld	hl,#_cmd
   1DE1 36 00              6007 	ld	(hl),#0x00
   1DE3 23                 6008 	inc	hl
   1DE4 36 00              6009 	ld	(hl),#0x00
                           6010 ;demo.c:927: cmd.source_y = 0;
   1DE6 11r6Es41           6011 	ld	de,#_cmd + 2
   1DE9 EB                 6012 	ex	de,hl
   1DEA 36 00              6013 	ld	(hl),#0x00
   1DEC 23                 6014 	inc	hl
   1DED 36 00              6015 	ld	(hl),#0x00
                           6016 ;demo.c:928: cmd.dest_x = 0;
   1DEF 11r70s41           6017 	ld	de,#_cmd + 4
   1DF2 EB                 6018 	ex	de,hl
   1DF3 36 00              6019 	ld	(hl),#0x00
   1DF5 23                 6020 	inc	hl
   1DF6 36 00              6021 	ld	(hl),#0x00
                           6022 ;demo.c:929: cmd.dest_y = 0+y;
   1DF8 11r72s41           6023 	ld	de,#_cmd + 6
   1DFB DD 4E FE           6024 	ld	c,-2 (ix)
   1DFE 06 00              6025 	ld	b,#0x00
   1E00 EB                 6026 	ex	de,hl
   1E01 71                 6027 	ld	(hl),c
   1E02 23                 6028 	inc	hl
   1E03 70                 6029 	ld	(hl),b
                           6030 ;demo.c:930: vdp_copier(&cmd);
   1E04 C5                 6031 	push	bc
   1E05 21r6Cs41           6032 	ld	hl,#_cmd
   1E08 E5                 6033 	push	hl
   1E09 CDr00s00           6034 	call	_vdp_copier
   1E0C F1                 6035 	pop	af
   1E0D C1                 6036 	pop	bc
                           6037 ;demo.c:931: cmd.dest_y = 256+y;
   1E0E 11r72s41           6038 	ld	de,#_cmd + 6
   1E11 21 00 01           6039 	ld	hl,#0x0100
   1E14 09                 6040 	add	hl,bc
   1E15 4D                 6041 	ld	c,l
   1E16 44                 6042 	ld	b,h
   1E17 EB                 6043 	ex	de,hl
   1E18 71                 6044 	ld	(hl),c
   1E19 23                 6045 	inc	hl
   1E1A 70                 6046 	ld	(hl),b
                           6047 ;demo.c:932: vdp_copier(&cmd);
   1E1B 21r6Cs41           6048 	ld	hl,#_cmd
   1E1E E5                 6049 	push	hl
   1E1F CDr00s00           6050 	call	_vdp_copier
   1E22 F1                 6051 	pop	af
                           6052 ;demo.c:933: waitVB();
   1E23 76                 6053 		halt 
                           6054 ;demo.c:919: for (y = 0; y < 212; y++) {
   1E24 DD 34 FE           6055 	inc	-2 (ix)
   1E27 C3rB2s1D           6056 	jp	00124$
   1E2A                    6057 00127$:
                           6058 ;demo.c:937: for (y = 9; y < 15; y+=1) {
   1E2A DD 36 FE 09        6059 	ld	-2 (ix),#0x09
   1E2E                    6060 00128$:
   1E2E DD 7E FE           6061 	ld	a,-2 (ix)
   1E31 D6 0F              6062 	sub	a,#0x0F
   1E33 D2r2Es20           6063 	jp	NC,00113$
                           6064 ;demo.c:938: for (x = 0; x < 21; x+=1) {
   1E36 DD 7E FE           6065 	ld	a,-2 (ix)
   1E39 87                 6066 	add	a,a
   1E3A DD 77 F9           6067 	ld	-7 (ix),a
   1E3D DD 36 FF 00        6068 	ld	-1 (ix),#0x00
   1E41                    6069 00108$:
   1E41 DD 7E FF           6070 	ld	a,-1 (ix)
   1E44 D6 15              6071 	sub	a,#0x15
   1E46 D2r28s20           6072 	jp	NC,00130$
                           6073 ;demo.c:939: if (x > 6 && x < 13) continue; 
   1E49 3E 06              6074 	ld	a,#0x06
   1E4B DD 96 FF           6075 	sub	a,-1 (ix)
   1E4E 30 08              6076 	jr	NC,00102$
   1E50 DD 7E FF           6077 	ld	a,-1 (ix)
   1E53 D6 0D              6078 	sub	a,#0x0D
   1E55 DAr22s20           6079 	jp	C,00110$
   1E58                    6080 00102$:
                           6081 ;demo.c:941: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   1E58 3E 06              6082 	ld	a,#0x06
   1E5A DD 96 FF           6083 	sub	a,-1 (ix)
   1E5D DArB3s1E           6084 	jp	C,00105$
   1E60 DD 56 FF           6085 	ld	d,-1 (ix)
   1E63 0E 00              6086 	ld	c,#0x00
   1E65 CB 22              6087 	sla	d
   1E67 CB 11              6088 	rl	c
   1E69 CB 22              6089 	sla	d
   1E6B CB 11              6090 	rl	c
   1E6D CB 22              6091 	sla	d
   1E6F CB 11              6092 	rl	c
   1E71 7A                 6093 	ld	a,d
   1E72 C6 69              6094 	add	a,#0x69
   1E74 57                 6095 	ld	d,a
   1E75 79                 6096 	ld	a,c
   1E76 CE 00              6097 	adc	a,#0x00
   1E78 47                 6098 	ld	b,a
   1E79 DD 5E FE           6099 	ld	e,-2 (ix)
   1E7C 0E 00              6100 	ld	c,#0x00
   1E7E CB 23              6101 	sla	e
   1E80 CB 11              6102 	rl	c
   1E82 CB 23              6103 	sla	e
   1E84 CB 11              6104 	rl	c
   1E86 CB 23              6105 	sla	e
   1E88 CB 11              6106 	rl	c
   1E8A 7A                 6107 	ld	a,d
   1E8B 83                 6108 	add	a,e
   1E8C 5F                 6109 	ld	e,a
   1E8D 78                 6110 	ld	a,b
   1E8E 89                 6111 	adc	a,c
   1E8F 0E 00              6112 	ld	c,#0x00
   1E91 3Er00              6113 	ld	a,#<_sintab
   1E93 83                 6114 	add	a,e
   1E94 5F                 6115 	ld	e,a
   1E95 3Es00              6116 	ld	a,#>_sintab
   1E97 89                 6117 	adc	a,c
   1E98 6B                 6118 	ld	l,e
   1E99 67                 6119 	ld	h,a
   1E9A 5E                 6120 	ld	e,(hl)
   1E9B CB 2B              6121 	sra	e
   1E9D CB 2B              6122 	sra	e
   1E9F CB 2B              6123 	sra	e
   1EA1 CB 2B              6124 	sra	e
   1EA3 7B                 6125 	ld	a,e
   1EA4 17                 6126 	rla	
   1EA5 9F                 6127 	sbc	a,a
   1EA6 4F                 6128 	ld	c,a
   1EA7 7B                 6129 	ld	a,e
   1EA8 C6 07              6130 	add	a,#0x07
   1EAA DD 77 FC           6131 	ld	-4 (ix),a
   1EAD 79                 6132 	ld	a,c
   1EAE CE 00              6133 	adc	a,#0x00
   1EB0 DD 77 FD           6134 	ld	-3 (ix),a
   1EB3                    6135 00105$:
                           6136 ;demo.c:942: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   1EB3 DD 7E FF           6137 	ld	a,-1 (ix)
   1EB6 D6 0D              6138 	sub	a,#0x0D
   1EB8 DAr19s1F           6139 	jp	C,00107$
   1EBB DD 5E FF           6140 	ld	e,-1 (ix)
   1EBE 16 00              6141 	ld	d,#0x00
   1EC0 21 17 00           6142 	ld	hl,#0x0017
   1EC3 19                 6143 	add	hl,de
   1EC4 EB                 6144 	ex	de,hl
   1EC5 CB 23              6145 	sla	e
   1EC7 CB 12              6146 	rl	d
   1EC9 CB 23              6147 	sla	e
   1ECB CB 12              6148 	rl	d
   1ECD CB 23              6149 	sla	e
   1ECF CB 12              6150 	rl	d
   1ED1 21 69 00           6151 	ld	hl,#0x0069
   1ED4 19                 6152 	add	hl,de
   1ED5 45                 6153 	ld	b,l
   1ED6 54                 6154 	ld	d,h
   1ED7 DD 4E FE           6155 	ld	c,-2 (ix)
   1EDA 1E 00              6156 	ld	e,#0x00
   1EDC 79                 6157 	ld	a,c
   1EDD C6 13              6158 	add	a,#0x13
   1EDF 4F                 6159 	ld	c,a
   1EE0 7B                 6160 	ld	a,e
   1EE1 CE 00              6161 	adc	a,#0x00
   1EE3 5F                 6162 	ld	e,a
   1EE4 CB 21              6163 	sla	c
   1EE6 CB 13              6164 	rl	e
   1EE8 CB 21              6165 	sla	c
   1EEA CB 13              6166 	rl	e
   1EEC CB 21              6167 	sla	c
   1EEE CB 13              6168 	rl	e
   1EF0 78                 6169 	ld	a,b
   1EF1 81                 6170 	add	a,c
   1EF2 4F                 6171 	ld	c,a
   1EF3 7A                 6172 	ld	a,d
   1EF4 8B                 6173 	adc	a,e
   1EF5 1E 00              6174 	ld	e,#0x00
   1EF7 3Er00              6175 	ld	a,#<_sintab
   1EF9 81                 6176 	add	a,c
   1EFA 4F                 6177 	ld	c,a
   1EFB 3Es00              6178 	ld	a,#>_sintab
   1EFD 8B                 6179 	adc	a,e
   1EFE 69                 6180 	ld	l,c
   1EFF 67                 6181 	ld	h,a
   1F00 4E                 6182 	ld	c,(hl)
   1F01 CB 29              6183 	sra	c
   1F03 CB 29              6184 	sra	c
   1F05 CB 29              6185 	sra	c
   1F07 CB 29              6186 	sra	c
   1F09 79                 6187 	ld	a,c
   1F0A 17                 6188 	rla	
   1F0B 9F                 6189 	sbc	a,a
   1F0C 5F                 6190 	ld	e,a
   1F0D 79                 6191 	ld	a,c
   1F0E C6 07              6192 	add	a,#0x07
   1F10 DD 77 FC           6193 	ld	-4 (ix),a
   1F13 7B                 6194 	ld	a,e
   1F14 CE 00              6195 	adc	a,#0x00
   1F16 DD 77 FD           6196 	ld	-3 (ix),a
   1F19                    6197 00107$:
                           6198 ;demo.c:944: cmd.size_x = 11;
   1F19 11r74s41           6199 	ld	de,#_cmd + 8
   1F1C EB                 6200 	ex	de,hl
   1F1D 36 0B              6201 	ld	(hl),#0x0B
   1F1F 23                 6202 	inc	hl
   1F20 36 00              6203 	ld	(hl),#0x00
                           6204 ;demo.c:945: cmd.size_y = 28-(14-px);
   1F22 21r76s41           6205 	ld	hl,#_cmd + 10
   1F25 DD 75 FA           6206 	ld	-6 (ix),l
   1F28 DD 74 FB           6207 	ld	-5 (ix),h
   1F2B 3E 0E              6208 	ld	a,#0x0E
   1F2D DD 96 FC           6209 	sub	a,-4 (ix)
   1F30 4F                 6210 	ld	c,a
   1F31 3E 00              6211 	ld	a,#0x00
   1F33 DD 9E FD           6212 	sbc	a,-3 (ix)
   1F36 5F                 6213 	ld	e,a
   1F37 3E 1C              6214 	ld	a,#0x1C
   1F39 91                 6215 	sub	a,c
   1F3A 57                 6216 	ld	d,a
   1F3B 3E 00              6217 	ld	a,#0x00
   1F3D 9B                 6218 	sbc	a,e
   1F3E 47                 6219 	ld	b,a
   1F3F DD 6E FA           6220 	ld	l,-6 (ix)
   1F42 DD 66 FB           6221 	ld	h,-5 (ix)
   1F45 72                 6222 	ld	(hl),d
   1F46 23                 6223 	inc	hl
   1F47 70                 6224 	ld	(hl),b
                           6225 ;demo.c:946: cmd.data = 0;
   1F48 21r78s41           6226 	ld	hl,#_cmd + 12
   1F4B 36 00              6227 	ld	(hl),#0x00
                           6228 ;demo.c:947: cmd.argument = 0x00; // from 70xY to left
   1F4D 21r79s41           6229 	ld	hl,#_cmd + 13
   1F50 36 00              6230 	ld	(hl),#0x00
                           6231 ;demo.c:948: cmd.command = 0x98; // vram to vram, y only
   1F52 21r7As41           6232 	ld	hl,#_cmd + 14
   1F55 36 98              6233 	ld	(hl),#0x98
                           6234 ;demo.c:950: cmd.source_x = twelvetimes[px];
   1F57 DD 46 FC           6235 	ld	b,-4 (ix)
   1F5A DD 56 FD           6236 	ld	d,-3 (ix)
   1F5D CB 20              6237 	sla	b
   1F5F CB 12              6238 	rl	d
   1F61 3Er20              6239 	ld	a,#<_twelvetimes
   1F63 80                 6240 	add	a,b
   1F64 47                 6241 	ld	b,a
   1F65 3Es01              6242 	ld	a,#>_twelvetimes
   1F67 8A                 6243 	adc	a,d
   1F68 68                 6244 	ld	l,b
   1F69 67                 6245 	ld	h,a
   1F6A 46                 6246 	ld	b,(hl)
   1F6B 23                 6247 	inc	hl
   1F6C 56                 6248 	ld	d,(hl)
   1F6D 21r6Cs41           6249 	ld	hl,#_cmd
   1F70 70                 6250 	ld	(hl),b
   1F71 23                 6251 	inc	hl
   1F72 72                 6252 	ld	(hl),d
                           6253 ;demo.c:951: cmd.source_y = 768+183+(15-px);
   1F73 23                 6254 	inc	hl
   1F74 DD 75 FA           6255 	ld	-6 (ix),l
   1F77 DD 74 FB           6256 	ld	-5 (ix),h
   1F7A 3E C6              6257 	ld	a,#0xC6
   1F7C DD 96 FC           6258 	sub	a,-4 (ix)
   1F7F 47                 6259 	ld	b,a
   1F80 3E 03              6260 	ld	a,#0x03
   1F82 DD 9E FD           6261 	sbc	a,-3 (ix)
   1F85 57                 6262 	ld	d,a
   1F86 DD 6E FA           6263 	ld	l,-6 (ix)
   1F89 DD 66 FB           6264 	ld	h,-5 (ix)
   1F8C 70                 6265 	ld	(hl),b
   1F8D 23                 6266 	inc	hl
   1F8E 72                 6267 	ld	(hl),d
                           6268 ;demo.c:952: cmd.dest_x = 0+twelvetimes[x];
   1F8F 21r70s41           6269 	ld	hl,#_cmd + 4
   1F92 DD 75 FA           6270 	ld	-6 (ix),l
   1F95 DD 74 FB           6271 	ld	-5 (ix),h
   1F98 DD 7E FF           6272 	ld	a,-1 (ix)
   1F9B 87                 6273 	add	a,a
   1F9C C6r20              6274 	add	a,#<_twelvetimes
   1F9E 6F                 6275 	ld	l,a
   1F9F 3Es01              6276 	ld	a,#>_twelvetimes
   1FA1 CE 00              6277 	adc	a,#0x00
   1FA3 67                 6278 	ld	h,a
   1FA4 46                 6279 	ld	b,(hl)
   1FA5 23                 6280 	inc	hl
   1FA6 56                 6281 	ld	d,(hl)
   1FA7 DD 6E FA           6282 	ld	l,-6 (ix)
   1FAA DD 66 FB           6283 	ld	h,-5 (ix)
   1FAD 70                 6284 	ld	(hl),b
   1FAE 23                 6285 	inc	hl
   1FAF 72                 6286 	ld	(hl),d
                           6287 ;demo.c:953: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   1FB0 21r72s41           6288 	ld	hl,#_cmd + 6
   1FB3 DD 75 FA           6289 	ld	-6 (ix),l
   1FB6 DD 74 FB           6290 	ld	-5 (ix),h
   1FB9 3Er54              6291 	ld	a,#<_eighttimes
   1FBB DD 86 F9           6292 	add	a,-7 (ix)
   1FBE 6F                 6293 	ld	l,a
   1FBF 3Es01              6294 	ld	a,#>_eighttimes
   1FC1 CE 00              6295 	adc	a,#0x00
   1FC3 67                 6296 	ld	h,a
   1FC4 46                 6297 	ld	b,(hl)
   1FC5 23                 6298 	inc	hl
   1FC6 56                 6299 	ld	d,(hl)
   1FC7 78                 6300 	ld	a,b
   1FC8 C6 04              6301 	add	a,#0x04
   1FCA 47                 6302 	ld	b,a
   1FCB 7A                 6303 	ld	a,d
   1FCC CE 00              6304 	adc	a,#0x00
   1FCE 57                 6305 	ld	d,a
   1FCF 78                 6306 	ld	a,b
   1FD0 81                 6307 	add	a,c
   1FD1 47                 6308 	ld	b,a
   1FD2 7A                 6309 	ld	a,d
   1FD3 8B                 6310 	adc	a,e
   1FD4 57                 6311 	ld	d,a
   1FD5 DD 6E FA           6312 	ld	l,-6 (ix)
   1FD8 DD 66 FB           6313 	ld	h,-5 (ix)
   1FDB 70                 6314 	ld	(hl),b
   1FDC 23                 6315 	inc	hl
   1FDD 72                 6316 	ld	(hl),d
                           6317 ;demo.c:954: vdp_copier(&cmd);
   1FDE C5                 6318 	push	bc
   1FDF D5                 6319 	push	de
   1FE0 21r6Cs41           6320 	ld	hl,#_cmd
   1FE3 E5                 6321 	push	hl
   1FE4 CDr00s00           6322 	call	_vdp_copier
   1FE7 F1                 6323 	pop	af
   1FE8 D1                 6324 	pop	de
   1FE9 C1                 6325 	pop	bc
                           6326 ;demo.c:955: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   1FEA 21r72s41           6327 	ld	hl,#_cmd + 6
   1FED DD 75 FA           6328 	ld	-6 (ix),l
   1FF0 DD 74 FB           6329 	ld	-5 (ix),h
   1FF3 3Er54              6330 	ld	a,#<_eighttimes
   1FF5 DD 86 F9           6331 	add	a,-7 (ix)
   1FF8 6F                 6332 	ld	l,a
   1FF9 3Es01              6333 	ld	a,#>_eighttimes
   1FFB CE 00              6334 	adc	a,#0x00
   1FFD 67                 6335 	ld	h,a
   1FFE 46                 6336 	ld	b,(hl)
   1FFF 23                 6337 	inc	hl
   2000 56                 6338 	ld	d,(hl)
   2001 78                 6339 	ld	a,b
   2002 C6 04              6340 	add	a,#0x04
   2004 47                 6341 	ld	b,a
   2005 7A                 6342 	ld	a,d
   2006 CE 00              6343 	adc	a,#0x00
   2008 C6 01              6344 	add	a,#0x01
   200A 57                 6345 	ld	d,a
   200B 78                 6346 	ld	a,b
   200C 81                 6347 	add	a,c
   200D 4F                 6348 	ld	c,a
   200E 7A                 6349 	ld	a,d
   200F 8B                 6350 	adc	a,e
   2010 5F                 6351 	ld	e,a
   2011 DD 6E FA           6352 	ld	l,-6 (ix)
   2014 DD 66 FB           6353 	ld	h,-5 (ix)
   2017 71                 6354 	ld	(hl),c
   2018 23                 6355 	inc	hl
   2019 73                 6356 	ld	(hl),e
                           6357 ;demo.c:956: vdp_copier(&cmd);
   201A 21r6Cs41           6358 	ld	hl,#_cmd
   201D E5                 6359 	push	hl
   201E CDr00s00           6360 	call	_vdp_copier
   2021 F1                 6361 	pop	af
   2022                    6362 00110$:
                           6363 ;demo.c:938: for (x = 0; x < 21; x+=1) {
   2022 DD 34 FF           6364 	inc	-1 (ix)
   2025 C3r41s1E           6365 	jp	00108$
   2028                    6366 00130$:
                           6367 ;demo.c:937: for (y = 9; y < 15; y+=1) {
   2028 DD 34 FE           6368 	inc	-2 (ix)
   202B C3r2Es1E           6369 	jp	00128$
   202E                    6370 00113$:
                           6371 ;demo.c:962: if (buf == -1) { bo = 0; ya = 0; }
   202E 3Ar03s42           6372 	ld	a,(#_buf+0)
   2031 3C                 6373 	inc	a
   2032 20 06              6374 	jr	NZ,00175$
   2034 3Ar04s42           6375 	ld	a,(#_buf+1)
   2037 3C                 6376 	inc	a
   2038 28 02              6377 	jr	Z,00176$
   203A                    6378 00175$:
   203A 18 05              6379 	jr	00115$
   203C                    6380 00176$:
   203C 01 00 00           6381 	ld	bc,#0x0000
   203F 18 03              6382 	jr	00116$
   2041                    6383 00115$:
                           6384 ;demo.c:963: else { bo = 256; ya = 6;}
   2041 01 00 01           6385 	ld	bc,#0x0100
   2044                    6386 00116$:
                           6387 ;demo.c:965: cmd.size_x = 72;
   2044 11r74s41           6388 	ld	de,#_cmd + 8
   2047 EB                 6389 	ex	de,hl
   2048 36 48              6390 	ld	(hl),#0x48
   204A 23                 6391 	inc	hl
   204B 36 00              6392 	ld	(hl),#0x00
                           6393 ;demo.c:966: cmd.size_y = 80;
   204D 11r76s41           6394 	ld	de,#_cmd + 10
   2050 EB                 6395 	ex	de,hl
   2051 36 50              6396 	ld	(hl),#0x50
   2053 23                 6397 	inc	hl
   2054 36 00              6398 	ld	(hl),#0x00
                           6399 ;demo.c:967: cmd.data = 0;
   2056 11r78s41           6400 	ld	de,#_cmd + 12
   2059 3E 00              6401 	ld	a,#0x00
   205B 12                 6402 	ld	(de),a
                           6403 ;demo.c:968: cmd.argument = 0x00; // from 70xY to left
   205C 11r79s41           6404 	ld	de,#_cmd + 13
   205F 3E 00              6405 	ld	a,#0x00
   2061 12                 6406 	ld	(de),a
                           6407 ;demo.c:969: cmd.command = 0xd0; // vram to vram, y only
   2062 11r7As41           6408 	ld	de,#_cmd + 14
   2065 3E D0              6409 	ld	a,#0xD0
   2067 12                 6410 	ld	(de),a
                           6411 ;demo.c:970: cmd.source_x = 178;
   2068 21r6Cs41           6412 	ld	hl,#_cmd
   206B 36 B2              6413 	ld	(hl),#0xB2
   206D 23                 6414 	inc	hl
   206E 36 00              6415 	ld	(hl),#0x00
                           6416 ;demo.c:971: cmd.source_y = 0;
   2070 11r6Es41           6417 	ld	de,#_cmd + 2
   2073 EB                 6418 	ex	de,hl
   2074 36 00              6419 	ld	(hl),#0x00
   2076 23                 6420 	inc	hl
   2077 36 00              6421 	ld	(hl),#0x00
                           6422 ;demo.c:972: cmd.dest_x = 84;
   2079 11r70s41           6423 	ld	de,#_cmd + 4
   207C EB                 6424 	ex	de,hl
   207D 36 54              6425 	ld	(hl),#0x54
   207F 23                 6426 	inc	hl
   2080 36 00              6427 	ld	(hl),#0x00
                           6428 ;demo.c:973: cmd.dest_y = 72+bo;
   2082 11r72s41           6429 	ld	de,#_cmd + 6
   2085 21 48 00           6430 	ld	hl,#0x0048
   2088 09                 6431 	add	hl,bc
   2089 DD 75 F5           6432 	ld	-11 (ix),l
   208C DD 74 F6           6433 	ld	-10 (ix),h
   208F EB                 6434 	ex	de,hl
   2090 DD 7E F5           6435 	ld	a,-11 (ix)
   2093 77                 6436 	ld	(hl),a
   2094 23                 6437 	inc	hl
   2095 DD 7E F6           6438 	ld	a,-10 (ix)
   2098 77                 6439 	ld	(hl),a
                           6440 ;demo.c:974: vdp_copier(&cmd);
   2099 21r6Cs41           6441 	ld	hl,#_cmd
   209C E5                 6442 	push	hl
   209D CDr00s00           6443 	call	_vdp_copier
   20A0 F1                 6444 	pop	af
                           6445 ;demo.c:976: for (y = 0; y < 6; y+=1) {
   20A1 DD 36 FE 00        6446 	ld	-2 (ix),#0x00
   20A5                    6447 00136$:
   20A5 DD 7E FE           6448 	ld	a,-2 (ix)
   20A8 D6 06              6449 	sub	a,#0x06
   20AA D2r18s22           6450 	jp	NC,00139$
                           6451 ;demo.c:977: for (x = 0; x < 6; x+=1) {
   20AD DD 7E FE           6452 	ld	a,-2 (ix)
   20B0 87                 6453 	add	a,a
   20B1 DD 77 F9           6454 	ld	-7 (ix),a
   20B4 DD 36 FF 00        6455 	ld	-1 (ix),#0x00
   20B8                    6456 00132$:
   20B8 DD 7E FF           6457 	ld	a,-1 (ix)
   20BB D6 06              6458 	sub	a,#0x06
   20BD D2r12s22           6459 	jp	NC,00138$
                           6460 ;demo.c:979: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   20C0 DD 5E FF           6461 	ld	e,-1 (ix)
   20C3 16 00              6462 	ld	d,#0x00
   20C5 CB 23              6463 	sla	e
   20C7 CB 12              6464 	rl	d
   20C9 CB 23              6465 	sla	e
   20CB CB 12              6466 	rl	d
   20CD 3Ar05s42           6467 	ld	a,(#_ffa+0)
   20D0 83                 6468 	add	a,e
   20D1 4F                 6469 	ld	c,a
   20D2 FD 21r05s42        6470 	ld	iy,#_ffa
   20D6 FD 7E 01           6471 	ld	a,1 (iy)
   20D9 8A                 6472 	adc	a,d
   20DA 47                 6473 	ld	b,a
   20DB DD 5E FE           6474 	ld	e,-2 (ix)
   20DE 16 00              6475 	ld	d,#0x00
   20E0 CB 23              6476 	sla	e
   20E2 CB 12              6477 	rl	d
   20E4 CB 23              6478 	sla	e
   20E6 CB 12              6479 	rl	d
   20E8 79                 6480 	ld	a,c
   20E9 83                 6481 	add	a,e
   20EA 5F                 6482 	ld	e,a
   20EB 78                 6483 	ld	a,b
   20EC 8A                 6484 	adc	a,d
   20ED 16 00              6485 	ld	d,#0x00
   20EF 21r00s00           6486 	ld	hl,#_sintab
   20F2 19                 6487 	add	hl,de
   20F3 5E                 6488 	ld	e,(hl)
   20F4 CB 2B              6489 	sra	e
   20F6 CB 2B              6490 	sra	e
   20F8 CB 2B              6491 	sra	e
   20FA CB 2B              6492 	sra	e
   20FC 7B                 6493 	ld	a,e
   20FD 17                 6494 	rla	
   20FE 9F                 6495 	sbc	a,a
   20FF 57                 6496 	ld	d,a
   2100 21 07 00           6497 	ld	hl,#0x0007
   2103 19                 6498 	add	hl,de
   2104 DD 75 FC           6499 	ld	-4 (ix),l
                           6500 ;demo.c:980: if (px < 0) px = 0; 
   2107 DD 74 FD           6501 	ld	-3 (ix),h
   210A 7C                 6502 	ld	a, h
   210B CB 7F              6503 	bit	7,a
   210D 28 08              6504 	jr	Z,00118$
   210F DD 36 FC 00        6505 	ld	-4 (ix),#0x00
   2113 DD 36 FD 00        6506 	ld	-3 (ix),#0x00
   2117                    6507 00118$:
                           6508 ;demo.c:981: if (px > 14) px = 14; 
   2117 3E 0E              6509 	ld	a,#0x0E
   2119 DD 96 FC           6510 	sub	a,-4 (ix)
   211C 3E 00              6511 	ld	a,#0x00
   211E DD 9E FD           6512 	sbc	a,-3 (ix)
   2121 F2r2Cs21           6513 	jp	P,00120$
   2124 DD 36 FC 0E        6514 	ld	-4 (ix),#0x0E
   2128 DD 36 FD 00        6515 	ld	-3 (ix),#0x00
   212C                    6516 00120$:
                           6517 ;demo.c:983: cmd.size_x = 12;
   212C 11r74s41           6518 	ld	de,#_cmd + 8
   212F EB                 6519 	ex	de,hl
   2130 36 0C              6520 	ld	(hl),#0x0C
   2132 23                 6521 	inc	hl
   2133 36 00              6522 	ld	(hl),#0x00
                           6523 ;demo.c:984: cmd.size_y = waveytab[y]-(14-px);
   2135 21r76s41           6524 	ld	hl,#_cmd + 10
   2138 DD 75 FA           6525 	ld	-6 (ix),l
   213B DD 74 FB           6526 	ld	-5 (ix),h
   213E 3Er07              6527 	ld	a,#<_waveytab
   2140 DD 86 FE           6528 	add	a,-2 (ix)
   2143 5F                 6529 	ld	e,a
   2144 3Es42              6530 	ld	a,#>_waveytab
   2146 CE 00              6531 	adc	a,#0x00
   2148 57                 6532 	ld	d,a
   2149 1A                 6533 	ld	a,(de)
   214A 5F                 6534 	ld	e,a
   214B 4B                 6535 	ld	c,e
   214C 06 00              6536 	ld	b,#0x00
   214E 3E 0E              6537 	ld	a,#0x0E
   2150 DD 96 FC           6538 	sub	a,-4 (ix)
   2153 5F                 6539 	ld	e,a
   2154 3E 00              6540 	ld	a,#0x00
   2156 DD 9E FD           6541 	sbc	a,-3 (ix)
   2159 57                 6542 	ld	d,a
   215A 79                 6543 	ld	a,c
   215B 93                 6544 	sub	a,e
   215C 4F                 6545 	ld	c,a
   215D 78                 6546 	ld	a,b
   215E 9A                 6547 	sbc	a,d
   215F 47                 6548 	ld	b,a
   2160 DD 6E FA           6549 	ld	l,-6 (ix)
   2163 DD 66 FB           6550 	ld	h,-5 (ix)
   2166 71                 6551 	ld	(hl),c
   2167 23                 6552 	inc	hl
   2168 70                 6553 	ld	(hl),b
                           6554 ;demo.c:985: cmd.data = 0;
                           6555 ;demo.c:986: cmd.argument = 0x00; // from 70xY to left
   2169 3E 00              6556 	ld	a,#0x00
   216B 32r78s41           6557 	ld	(#_cmd + 12),a
   216E 32r79s41           6558 	ld	(#_cmd + 13),a
                           6559 ;demo.c:987: cmd.command = 0x98; // vram to vram, y only
   2171 3E 98              6560 	ld	a,#0x98
   2173 32r7As41           6561 	ld	(#_cmd + 14),a
                           6562 ;demo.c:989: cmd.source_x = twelvetimes[px];
   2176 DD 4E FC           6563 	ld	c,-4 (ix)
   2179 DD 46 FD           6564 	ld	b,-3 (ix)
   217C CB 21              6565 	sla	c
   217E CB 10              6566 	rl	b
   2180 21r20s01           6567 	ld	hl,#_twelvetimes
   2183 09                 6568 	add	hl,bc
   2184 4E                 6569 	ld	c,(hl)
   2185 23                 6570 	inc	hl
   2186 46                 6571 	ld	b,(hl)
   2187 21r6Cs41           6572 	ld	hl,#_cmd
   218A 71                 6573 	ld	(hl),c
   218B 23                 6574 	inc	hl
   218C 70                 6575 	ld	(hl),b
                           6576 ;demo.c:990: cmd.source_y = 768+183+(15-px);
   218D 23                 6577 	inc	hl
   218E DD 75 F7           6578 	ld	-9 (ix),l
   2191 DD 74 F8           6579 	ld	-8 (ix),h
   2194 3E C6              6580 	ld	a,#0xC6
   2196 DD 96 FC           6581 	sub	a,-4 (ix)
   2199 4F                 6582 	ld	c,a
   219A 3E 03              6583 	ld	a,#0x03
   219C DD 9E FD           6584 	sbc	a,-3 (ix)
   219F 47                 6585 	ld	b,a
   21A0 DD 6E F7           6586 	ld	l,-9 (ix)
   21A3 DD 66 F8           6587 	ld	h,-8 (ix)
   21A6 71                 6588 	ld	(hl),c
   21A7 23                 6589 	inc	hl
   21A8 70                 6590 	ld	(hl),b
                           6591 ;demo.c:991: cmd.dest_x = 84+twelvetimes[x];
   21A9 21r70s41           6592 	ld	hl,#_cmd + 4
   21AC DD 75 F7           6593 	ld	-9 (ix),l
   21AF DD 74 F8           6594 	ld	-8 (ix),h
   21B2 DD 7E FF           6595 	ld	a,-1 (ix)
   21B5 87                 6596 	add	a,a
   21B6 C6r20              6597 	add	a,#<_twelvetimes
   21B8 6F                 6598 	ld	l,a
   21B9 3Es01              6599 	ld	a,#>_twelvetimes
   21BB CE 00              6600 	adc	a,#0x00
   21BD 67                 6601 	ld	h,a
   21BE 4E                 6602 	ld	c,(hl)
   21BF 23                 6603 	inc	hl
   21C0 46                 6604 	ld	b,(hl)
   21C1 21 54 00           6605 	ld	hl,#0x0054
   21C4 09                 6606 	add	hl,bc
   21C5 4D                 6607 	ld	c,l
   21C6 44                 6608 	ld	b,h
   21C7 DD 6E F7           6609 	ld	l,-9 (ix)
   21CA DD 66 F8           6610 	ld	h,-8 (ix)
   21CD 71                 6611 	ld	(hl),c
   21CE 23                 6612 	inc	hl
   21CF 70                 6613 	ld	(hl),b
                           6614 ;demo.c:992: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   21D0 21r72s41           6615 	ld	hl,#_cmd + 6
   21D3 DD 75 F7           6616 	ld	-9 (ix),l
   21D6 DD 74 F8           6617 	ld	-8 (ix),h
   21D9 3Er54              6618 	ld	a,#<_eighttimes
   21DB DD 86 F9           6619 	add	a,-7 (ix)
   21DE 6F                 6620 	ld	l,a
   21DF 3Es01              6621 	ld	a,#>_eighttimes
   21E1 CE 00              6622 	adc	a,#0x00
   21E3 67                 6623 	ld	h,a
   21E4 4E                 6624 	ld	c,(hl)
   21E5 23                 6625 	inc	hl
   21E6 46                 6626 	ld	b,(hl)
   21E7 03                 6627 	inc	bc
   21E8 03                 6628 	inc	bc
   21E9 03                 6629 	inc	bc
   21EA 03                 6630 	inc	bc
   21EB DD 7E F5           6631 	ld	a,-11 (ix)
   21EE 81                 6632 	add	a,c
   21EF 4F                 6633 	ld	c,a
   21F0 DD 7E F6           6634 	ld	a,-10 (ix)
   21F3 88                 6635 	adc	a,b
   21F4 47                 6636 	ld	b,a
   21F5 79                 6637 	ld	a,c
   21F6 83                 6638 	add	a,e
   21F7 5F                 6639 	ld	e,a
   21F8 78                 6640 	ld	a,b
   21F9 8A                 6641 	adc	a,d
   21FA 57                 6642 	ld	d,a
   21FB DD 6E F7           6643 	ld	l,-9 (ix)
   21FE DD 66 F8           6644 	ld	h,-8 (ix)
   2201 73                 6645 	ld	(hl),e
   2202 23                 6646 	inc	hl
   2203 72                 6647 	ld	(hl),d
                           6648 ;demo.c:993: vdp_copier(&cmd);
   2204 21r6Cs41           6649 	ld	hl,#_cmd
   2207 E5                 6650 	push	hl
   2208 CDr00s00           6651 	call	_vdp_copier
   220B F1                 6652 	pop	af
                           6653 ;demo.c:977: for (x = 0; x < 6; x+=1) {
   220C DD 34 FF           6654 	inc	-1 (ix)
   220F C3rB8s20           6655 	jp	00132$
   2212                    6656 00138$:
                           6657 ;demo.c:976: for (y = 0; y < 6; y+=1) {
   2212 DD 34 FE           6658 	inc	-2 (ix)
   2215 C3rA5s20           6659 	jp	00136$
   2218                    6660 00139$:
                           6661 ;demo.c:998: if (buf == -1) vdp_register(2, 0x1F);
   2218 3Ar03s42           6662 	ld	a,(#_buf+0)
   221B 3C                 6663 	inc	a
   221C 20 06              6664 	jr	NZ,00183$
   221E 3Ar04s42           6665 	ld	a,(#_buf+1)
   2221 3C                 6666 	inc	a
   2222 28 02              6667 	jr	Z,00184$
   2224                    6668 00183$:
   2224 18 0A              6669 	jr	00122$
   2226                    6670 00184$:
   2226 21 02 1F           6671 	ld	hl,#0x1F02
   2229 E5                 6672 	push	hl
   222A CDr00s00           6673 	call	_vdp_register
   222D F1                 6674 	pop	af
   222E 18 08              6675 	jr	00123$
   2230                    6676 00122$:
                           6677 ;demo.c:999: else vdp_register(2, 0x3F);
   2230 21 02 3F           6678 	ld	hl,#0x3F02
   2233 E5                 6679 	push	hl
   2234 CDr00s00           6680 	call	_vdp_register
   2237 F1                 6681 	pop	af
   2238                    6682 00123$:
                           6683 ;demo.c:1002: buf = -buf;
   2238 AF                 6684 	xor	a,a
   2239 FD 21r03s42        6685 	ld	iy,#_buf
   223D 3E 00              6686 	ld	a,#0x00
   223F FD 9E 00           6687 	sbc	a,0 (iy)
   2242 21r03s42           6688 	ld	hl,#_buf + 0
   2245 77                 6689 	ld	(hl), a
   2246 FD 21r03s42        6690 	ld	iy,#_buf
   224A 3E 00              6691 	ld	a,#0x00
   224C FD 9E 01           6692 	sbc	a,1 (iy)
   224F 21r04s42           6693 	ld	hl,#_buf + 1
   2252 77                 6694 	ld	(hl), a
                           6695 ;demo.c:1004: ffa+=8;
   2253 21r05s42           6696 	ld	hl,#_ffa
   2256 7E                 6697 	ld	a,(hl)
   2257 C6 08              6698 	add	a,#0x08
   2259 23                 6699 	inc	hl
   225A 2B                 6700 	dec	hl
   225B C5                 6701 	push	bc
   225C 4F                 6702 	ld	c, a
   225D 23                 6703 	inc	hl
   225E 7E                 6704 	ld	a, (hl)
   225F 47                 6705 	ld	b, a
   2260 79                 6706 	ld	a, c
   2261 2B                 6707 	dec	hl
   2262 77                 6708 	ld	(hl), a
   2263 78                 6709 	ld	a, b
   2264 C1                 6710 	pop	bc
   2265 CE 00              6711 	adc	a,#0x00
   2267 23                 6712 	inc	hl
   2268 77                 6713 	ld	(hl),a
   2269 DD F9              6714 	ld	sp,ix
   226B DD E1              6715 	pop	ix
   226D C9                 6716 	ret
   226E                    6717 _thewave_end::
                           6718 ;demo.c:1010: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           6719 ;	---------------------------------
                           6720 ; Function drawtritile
                           6721 ; ---------------------------------
   226E                    6722 _drawtritile_start::
   226E                    6723 _drawtritile:
   226E DD E5              6724 	push	ix
   2270 DD 21 00 00        6725 	ld	ix,#0
   2274 DD 39              6726 	add	ix,sp
                           6727 ;demo.c:1011: cmd.source_x = tx;
   2276 DD 4E 04           6728 	ld	c,4 (ix)
   2279 06 00              6729 	ld	b,#0x00
   227B 21r6Cs41           6730 	ld	hl,#_cmd
   227E 71                 6731 	ld	(hl),c
   227F 23                 6732 	inc	hl
   2280 70                 6733 	ld	(hl),b
                           6734 ;demo.c:1012: cmd.source_y = ty-1;
   2281 01r6Es41           6735 	ld	bc,#_cmd + 2
   2284 DD 5E 05           6736 	ld	e,5 (ix)
   2287 DD 56 06           6737 	ld	d,6 (ix)
   228A 1B                 6738 	dec	de
   228B 69                 6739 	ld	l,c
   228C 60                 6740 	ld	h,b
   228D 73                 6741 	ld	(hl),e
   228E 23                 6742 	inc	hl
   228F 72                 6743 	ld	(hl),d
                           6744 ;demo.c:1013: cmd.dest_x = x;
   2290 01r70s41           6745 	ld	bc,#_cmd + 4
   2293 DD 5E 07           6746 	ld	e,7 (ix)
   2296 16 00              6747 	ld	d,#0x00
   2298 69                 6748 	ld	l,c
   2299 60                 6749 	ld	h,b
   229A 73                 6750 	ld	(hl),e
   229B 23                 6751 	inc	hl
   229C 72                 6752 	ld	(hl),d
                           6753 ;demo.c:1014: cmd.dest_y = y;
   229D 01r72s41           6754 	ld	bc,#_cmd + 6
   22A0 DD 5E 08           6755 	ld	e,8 (ix)
   22A3 16 00              6756 	ld	d,#0x00
   22A5 69                 6757 	ld	l,c
   22A6 60                 6758 	ld	h,b
   22A7 73                 6759 	ld	(hl),e
   22A8 23                 6760 	inc	hl
   22A9 72                 6761 	ld	(hl),d
                           6762 ;demo.c:1015: cmd.size_x = 16;
   22AA 21r74s41           6763 	ld	hl, #_cmd + 8
   22AD 36 10              6764 	ld	(hl),#0x10
   22AF 23                 6765 	inc	hl
   22B0 36 00              6766 	ld	(hl),#0x00
                           6767 ;demo.c:1016: cmd.size_y = 16;
   22B2 21r76s41           6768 	ld	hl, #_cmd + 10
   22B5 36 10              6769 	ld	(hl),#0x10
   22B7 23                 6770 	inc	hl
   22B8 36 00              6771 	ld	(hl),#0x00
                           6772 ;demo.c:1017: cmd.data = 0;
                           6773 ;demo.c:1018: cmd.argument = 0x00;
   22BA 3E 00              6774 	ld	a,#0x00
   22BC 32r78s41           6775 	ld	(#_cmd + 12),a
   22BF 32r79s41           6776 	ld	(#_cmd + 13),a
                           6777 ;demo.c:1019: cmd.command = 0xd0; // HMMM
   22C2 3E D0              6778 	ld	a,#0xD0
   22C4 32r7As41           6779 	ld	(#_cmd + 14),a
                           6780 ;demo.c:1020: vdp_copier(&cmd);
   22C7 21r6Cs41           6781 	ld	hl,#_cmd
   22CA E5                 6782 	push	hl
   22CB CDr00s00           6783 	call	_vdp_copier
   22CE F1                 6784 	pop	af
   22CF DD E1              6785 	pop	ix
   22D1 C9                 6786 	ret
   22D2                    6787 _drawtritile_end::
                           6788 ;demo.c:1027: void drawtilescreen(char* tripic) {
                           6789 ;	---------------------------------
                           6790 ; Function drawtilescreen
                           6791 ; ---------------------------------
   22D2                    6792 _drawtilescreen_start::
   22D2                    6793 _drawtilescreen:
   22D2 DD E5              6794 	push	ix
   22D4 DD 21 00 00        6795 	ld	ix,#0
   22D8 DD 39              6796 	add	ix,sp
   22DA F5                 6797 	push	af
   22DB 3B                 6798 	dec	sp
                           6799 ;demo.c:1029: if(tilei >= 192) return;
   22DC 3Ar0Es42           6800 	ld	a,(#_tilei+0)
   22DF D6 C0              6801 	sub	a,#0xC0
   22E1 3Ar0Fs42           6802 	ld	a,(#_tilei+1)
   22E4 DE 00              6803 	sbc	a,#0x00
   22E6 FArECs22           6804 	jp	M,00102$
   22E9 C3rB7s23           6805 	jp	00112$
   22EC                    6806 00102$:
                           6807 ;demo.c:1031: tiletick++;
   22EC FD 21r14s42        6808 	ld	iy,#_tiletick
   22F0 FD 34 00           6809 	inc	0 (iy)
                           6810 ;demo.c:1032: if (tiletick > 6) { tiletick = 0;}
   22F3 3E 06              6811 	ld	a,#0x06
   22F5 FD 21r14s42        6812 	ld	iy,#_tiletick
   22F9 FD 96 00           6813 	sub	a,0 (iy)
   22FC 30 0A              6814 	jr	NC,00104$
   22FE FD 21r14s42        6815 	ld	iy,#_tiletick
   2302 FD 36 00 00        6816 	ld	0 (iy),#0x00
   2306 18 03              6817 	jr	00118$
   2308                    6818 00104$:
                           6819 ;demo.c:1033: else return;
   2308 C3rB7s23           6820 	jp	00112$
                           6821 ;demo.c:1034: for (i=0;i<20;i++) {
   230B                    6822 00118$:
   230B DD 36 FF 00        6823 	ld	-1 (ix),#0x00
   230F                    6824 00108$:
   230F DD 7E FF           6825 	ld	a,-1 (ix)
   2312 D6 14              6826 	sub	a,#0x14
   2314 D2rB7s23           6827 	jp	NC,00112$
                           6828 ;demo.c:1035: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2317 3Ar12s42           6829 	ld	a,(#_tiley+0)
   231A DD 77 FD           6830 	ld	-3 (ix),a
   231D 3Ar10s42           6831 	ld	a,(#_tilex+0)
   2320 DD 77 FE           6832 	ld	-2 (ix),a
   2323 21r0Es42           6833 	ld	hl,#_tilei
   2326 DD 7E 04           6834 	ld	a,4 (ix)
   2329 86                 6835 	add	a,(hl)
   232A 57                 6836 	ld	d,a
   232B DD 7E 05           6837 	ld	a,5 (ix)
   232E 23                 6838 	inc	hl
   232F 8E                 6839 	adc	a,(hl)
   2330 6A                 6840 	ld	l,d
   2331 67                 6841 	ld	h,a
   2332 56                 6842 	ld	d,(hl)
   2333 7A                 6843 	ld	a,d
   2334 87                 6844 	add	a,a
   2335 C6r88              6845 	add	a,#<_tri_lookup_y
   2337 6F                 6846 	ld	l,a
   2338 3Es01              6847 	ld	a,#>_tri_lookup_y
   233A CE 00              6848 	adc	a,#0x00
   233C 67                 6849 	ld	h,a
   233D 4E                 6850 	ld	c,(hl)
   233E 23                 6851 	inc	hl
   233F 5E                 6852 	ld	e,(hl)
   2340 3Er00              6853 	ld	a,#<_tri_lookup_x
   2342 82                 6854 	add	a,d
   2343 6F                 6855 	ld	l,a
   2344 3Es01              6856 	ld	a,#>_tri_lookup_x
   2346 CE 00              6857 	adc	a,#0x00
   2348 67                 6858 	ld	h,a
   2349 56                 6859 	ld	d,(hl)
   234A DD 66 FD           6860 	ld	h,-3 (ix)
   234D DD 6E FE           6861 	ld	l,-2 (ix)
   2350 E5                 6862 	push	hl
   2351 69                 6863 	ld	l,c
   2352 63                 6864 	ld	h,e
   2353 E5                 6865 	push	hl
   2354 D5                 6866 	push	de
   2355 33                 6867 	inc	sp
   2356 CDr6Es22           6868 	call	_drawtritile
   2359 F1                 6869 	pop	af
   235A F1                 6870 	pop	af
   235B 33                 6871 	inc	sp
                           6872 ;demo.c:1036: tilex+=16;
   235C 21r10s42           6873 	ld	hl,#_tilex
   235F 7E                 6874 	ld	a,(hl)
   2360 C6 10              6875 	add	a,#0x10
   2362 23                 6876 	inc	hl
   2363 2B                 6877 	dec	hl
   2364 C5                 6878 	push	bc
   2365 4F                 6879 	ld	c, a
   2366 23                 6880 	inc	hl
   2367 7E                 6881 	ld	a, (hl)
   2368 47                 6882 	ld	b, a
   2369 79                 6883 	ld	a, c
   236A 2B                 6884 	dec	hl
   236B 77                 6885 	ld	(hl), a
   236C 78                 6886 	ld	a, b
   236D C1                 6887 	pop	bc
   236E CE 00              6888 	adc	a,#0x00
   2370 23                 6889 	inc	hl
   2371 77                 6890 	ld	(hl),a
                           6891 ;demo.c:1037: tilei++;
   2372 FD 21r0Es42        6892 	ld	iy,#_tilei
   2376 FD 34 00           6893 	inc	0 (iy)
   2379 20 07              6894 	jr	NZ,00119$
   237B FD 21r0Es42        6895 	ld	iy,#_tilei
   237F FD 34 01           6896 	inc	1 (iy)
   2382                    6897 00119$:
                           6898 ;demo.c:1038: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   2382 3Ar10s42           6899 	ld	a,(#_tilex+0)
   2385 D6 00              6900 	sub	a,#0x00
   2387 3Ar11s42           6901 	ld	a,(#_tilex+1)
   238A DE 01              6902 	sbc	a,#0x01
   238C FArB1s23           6903 	jp	M,00110$
   238F 21r10s42           6904 	ld	hl,#_tilex + 0
   2392 36 00              6905 	ld	(hl), #0x00
   2394 21r11s42           6906 	ld	hl,#_tilex + 1
   2397 36 00              6907 	ld	(hl), #0x00
   2399 21r12s42           6908 	ld	hl,#_tiley
   239C 7E                 6909 	ld	a,(hl)
   239D C6 10              6910 	add	a,#0x10
   239F 23                 6911 	inc	hl
   23A0 2B                 6912 	dec	hl
   23A1 C5                 6913 	push	bc
   23A2 4F                 6914 	ld	c, a
   23A3 23                 6915 	inc	hl
   23A4 7E                 6916 	ld	a, (hl)
   23A5 47                 6917 	ld	b, a
   23A6 79                 6918 	ld	a, c
   23A7 2B                 6919 	dec	hl
   23A8 77                 6920 	ld	(hl), a
   23A9 78                 6921 	ld	a, b
   23AA C1                 6922 	pop	bc
   23AB CE 00              6923 	adc	a,#0x00
   23AD 23                 6924 	inc	hl
   23AE 77                 6925 	ld	(hl),a
   23AF 18 06              6926 	jr	00112$
   23B1                    6927 00110$:
                           6928 ;demo.c:1034: for (i=0;i<20;i++) {
   23B1 DD 34 FF           6929 	inc	-1 (ix)
   23B4 C3r0Fs23           6930 	jp	00108$
   23B7                    6931 00112$:
   23B7 DD F9              6932 	ld	sp,ix
   23B9 DD E1              6933 	pop	ix
   23BB C9                 6934 	ret
   23BC                    6935 _drawtilescreen_end::
                           6936 ;demo.c:1043: void drawtilescreen_full(char* tripic) {
                           6937 ;	---------------------------------
                           6938 ; Function drawtilescreen_full
                           6939 ; ---------------------------------
   23BC                    6940 _drawtilescreen_full_start::
   23BC                    6941 _drawtilescreen_full:
   23BC DD E5              6942 	push	ix
   23BE DD 21 00 00        6943 	ld	ix,#0
   23C2 DD 39              6944 	add	ix,sp
   23C4 21 F8 FF           6945 	ld	hl,#-8
   23C7 39                 6946 	add	hl,sp
   23C8 F9                 6947 	ld	sp,hl
                           6948 ;demo.c:1044: int x = 0;
   23C9 DD 36 FE 00        6949 	ld	-2 (ix),#0x00
   23CD DD 36 FF 00        6950 	ld	-1 (ix),#0x00
                           6951 ;demo.c:1047: while(i < 192) {
   23D1 DD 36 FC 00        6952 	ld	-4 (ix),#0x00
   23D5 DD 36 FD 00        6953 	ld	-3 (ix),#0x00
   23D9 DD 36 FA 00        6954 	ld	-6 (ix),#0x00
   23DD DD 36 FB 00        6955 	ld	-5 (ix),#0x00
   23E1                    6956 00103$:
   23E1 DD 7E FA           6957 	ld	a,-6 (ix)
   23E4 D6 C0              6958 	sub	a,#0xC0
   23E6 DD 7E FB           6959 	ld	a,-5 (ix)
   23E9 DE 00              6960 	sbc	a,#0x00
   23EB F2r72s24           6961 	jp	P,00106$
                           6962 ;demo.c:1048: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   23EE DD 7E FC           6963 	ld	a,-4 (ix)
   23F1 DD 77 F8           6964 	ld	-8 (ix),a
   23F4 DD 7E FE           6965 	ld	a,-2 (ix)
   23F7 DD 77 F9           6966 	ld	-7 (ix),a
   23FA DD 7E 04           6967 	ld	a,4 (ix)
   23FD DD 86 FA           6968 	add	a,-6 (ix)
   2400 4F                 6969 	ld	c,a
   2401 DD 7E 05           6970 	ld	a,5 (ix)
   2404 DD 8E FB           6971 	adc	a,-5 (ix)
   2407 47                 6972 	ld	b,a
   2408 0A                 6973 	ld	a,(bc)
   2409 4F                 6974 	ld	c,a
   240A 87                 6975 	add	a,a
   240B C6r88              6976 	add	a,#<_tri_lookup_y
   240D 6F                 6977 	ld	l,a
   240E 3Es01              6978 	ld	a,#>_tri_lookup_y
   2410 CE 00              6979 	adc	a,#0x00
   2412 67                 6980 	ld	h,a
   2413 46                 6981 	ld	b,(hl)
   2414 23                 6982 	inc	hl
   2415 56                 6983 	ld	d,(hl)
   2416 3Er00              6984 	ld	a,#<_tri_lookup_x
   2418 81                 6985 	add	a,c
   2419 6F                 6986 	ld	l,a
   241A 3Es01              6987 	ld	a,#>_tri_lookup_x
   241C CE 00              6988 	adc	a,#0x00
   241E 67                 6989 	ld	h,a
   241F 4E                 6990 	ld	c,(hl)
   2420 DD 66 F8           6991 	ld	h,-8 (ix)
   2423 DD 6E F9           6992 	ld	l,-7 (ix)
   2426 E5                 6993 	push	hl
   2427 58                 6994 	ld	e,b
   2428 D5                 6995 	push	de
   2429 79                 6996 	ld	a,c
   242A F5                 6997 	push	af
   242B 33                 6998 	inc	sp
   242C CDr6Es22           6999 	call	_drawtritile
   242F F1                 7000 	pop	af
   2430 F1                 7001 	pop	af
   2431 33                 7002 	inc	sp
                           7003 ;demo.c:1049: x+=16;
   2432 DD 7E FE           7004 	ld	a,-2 (ix)
   2435 C6 10              7005 	add	a,#0x10
   2437 DD 77 FE           7006 	ld	-2 (ix),a
   243A DD 7E FF           7007 	ld	a,-1 (ix)
   243D CE 00              7008 	adc	a,#0x00
   243F DD 77 FF           7009 	ld	-1 (ix),a
                           7010 ;demo.c:1050: if (x >= 256) {x = 0; y+=16;}
   2442 DD 7E FE           7011 	ld	a,-2 (ix)
   2445 D6 00              7012 	sub	a,#0x00
   2447 DD 7E FF           7013 	ld	a,-1 (ix)
   244A DE 01              7014 	sbc	a,#0x01
   244C FAr67s24           7015 	jp	M,00102$
   244F DD 36 FE 00        7016 	ld	-2 (ix),#0x00
   2453 DD 36 FF 00        7017 	ld	-1 (ix),#0x00
   2457 DD 7E FC           7018 	ld	a,-4 (ix)
   245A C6 10              7019 	add	a,#0x10
   245C DD 77 FC           7020 	ld	-4 (ix),a
   245F DD 7E FD           7021 	ld	a,-3 (ix)
   2462 CE 00              7022 	adc	a,#0x00
   2464 DD 77 FD           7023 	ld	-3 (ix),a
   2467                    7024 00102$:
                           7025 ;demo.c:1051: i++;
   2467 DD 34 FA           7026 	inc	-6 (ix)
   246A 20 03              7027 	jr	NZ,00112$
   246C DD 34 FB           7028 	inc	-5 (ix)
   246F                    7029 00112$:
   246F C3rE1s23           7030 	jp	00103$
   2472                    7031 00106$:
   2472 DD F9              7032 	ld	sp,ix
   2474 DD E1              7033 	pop	ix
   2476 C9                 7034 	ret
   2477                    7035 _drawtilescreen_full_end::
                           7036 ;demo.c:1067: void tritiles() {
                           7037 ;	---------------------------------
                           7038 ; Function tritiles
                           7039 ; ---------------------------------
   2477                    7040 _tritiles_start::
   2477                    7041 _tritiles:
   2477 DD E5              7042 	push	ix
   2479 DD 21 00 00        7043 	ld	ix,#0
   247D DD 39              7044 	add	ix,sp
   247F 21 FB FF           7045 	ld	hl,#-5
   2482 39                 7046 	add	hl,sp
   2483 F9                 7047 	ld	sp,hl
                           7048 ;demo.c:1074: if (tri_inited == 0) {
   2484 AF                 7049 	xor	a,a
   2485 21r0Ds42           7050 	ld	hl,#_tri_inited + 0
   2488 B6                 7051 	or	a,(hl)
   2489 C2r50s25           7052 	jp	NZ,00102$
                           7053 ;demo.c:1075: tri_inited = 1;
   248C FD 21r0Ds42        7054 	ld	iy,#_tri_inited
   2490 FD 36 00 01        7055 	ld	0 (iy),#0x01
                           7056 ;demo.c:1077: cmd.size_x = 256;
   2494 21r74s41           7057 	ld	hl, #_cmd + 8
   2497 36 00              7058 	ld	(hl),#0x00
   2499 23                 7059 	inc	hl
   249A 36 01              7060 	ld	(hl),#0x01
                           7061 ;demo.c:1078: cmd.size_y = 1;
   249C 21r76s41           7062 	ld	hl, #_cmd + 10
   249F 36 01              7063 	ld	(hl),#0x01
   24A1 23                 7064 	inc	hl
   24A2 36 00              7065 	ld	(hl),#0x00
                           7066 ;demo.c:1079: cmd.data = 0;
                           7067 ;demo.c:1080: cmd.argument = 0x00; // from 70xY to left
   24A4 3E 00              7068 	ld	a,#0x00
   24A6 32r78s41           7069 	ld	(#_cmd + 12),a
   24A9 32r79s41           7070 	ld	(#_cmd + 13),a
                           7071 ;demo.c:1081: cmd.command = 0xd0; // vram to vram, y only
   24AC 01r7As41           7072 	ld	bc,#_cmd + 14
   24AF 3E D0              7073 	ld	a,#0xD0
   24B1 02                 7074 	ld	(bc),a
                           7075 ;demo.c:1082: cmd.source_x = 0;
   24B2 21r6Cs41           7076 	ld	hl,#_cmd
   24B5 36 00              7077 	ld	(hl),#0x00
   24B7 23                 7078 	inc	hl
   24B8 36 00              7079 	ld	(hl),#0x00
                           7080 ;demo.c:1083: cmd.source_y = 212;
   24BA 21r6Es41           7081 	ld	hl, #_cmd + 2
   24BD 36 D4              7082 	ld	(hl),#0xD4
   24BF 23                 7083 	inc	hl
   24C0 36 00              7084 	ld	(hl),#0x00
                           7085 ;demo.c:1084: cmd.dest_y = 0;
   24C2 01r72s41           7086 	ld	bc,#_cmd + 6
   24C5 69                 7087 	ld	l,c
   24C6 60                 7088 	ld	h,b
   24C7 36 00              7089 	ld	(hl),#0x00
   24C9 23                 7090 	inc	hl
   24CA 36 00              7091 	ld	(hl),#0x00
                           7092 ;demo.c:1086: for (x = 0; x < 212; x++) {
   24CC DD 36 FE 00        7093 	ld	-2 (ix),#0x00
   24D0 DD 36 FF 00        7094 	ld	-1 (ix),#0x00
   24D4                    7095 00134$:
   24D4 DD 7E FE           7096 	ld	a,-2 (ix)
   24D7 D6 D4              7097 	sub	a,#0xD4
   24D9 DD 7E FF           7098 	ld	a,-1 (ix)
   24DC DE 00              7099 	sbc	a,#0x00
   24DE F2r24s25           7100 	jp	P,00137$
                           7101 ;demo.c:1087: waitVB();
   24E1 76                 7102 		halt 
                           7103 ;demo.c:1088: cmd.dest_x = 0;
   24E2 11r70s41           7104 	ld	de,#_cmd + 4
   24E5 EB                 7105 	ex	de,hl
   24E6 36 00              7106 	ld	(hl),#0x00
   24E8 23                 7107 	inc	hl
   24E9 36 00              7108 	ld	(hl),#0x00
                           7109 ;demo.c:1089: cmd.dest_y = 256+x;
   24EB 11r72s41           7110 	ld	de,#_cmd + 6
   24EE DD 7E FE           7111 	ld	a,-2 (ix)
   24F1 C6 00              7112 	add	a,#0x00
   24F3 4F                 7113 	ld	c,a
   24F4 DD 7E FF           7114 	ld	a,-1 (ix)
   24F7 CE 01              7115 	adc	a,#0x01
   24F9 47                 7116 	ld	b,a
   24FA EB                 7117 	ex	de,hl
   24FB 71                 7118 	ld	(hl),c
   24FC 23                 7119 	inc	hl
   24FD 70                 7120 	ld	(hl),b
                           7121 ;demo.c:1090: vdp_copier(&cmd);
   24FE 21r6Cs41           7122 	ld	hl,#_cmd
   2501 E5                 7123 	push	hl
   2502 CDr00s00           7124 	call	_vdp_copier
   2505 F1                 7125 	pop	af
                           7126 ;demo.c:1091: cmd.dest_y = 0+x;
   2506 21r72s41           7127 	ld	hl, #_cmd + 6
   2509 DD 7E FE           7128 	ld	a,-2 (ix)
   250C 77                 7129 	ld	(hl),a
   250D 23                 7130 	inc	hl
   250E DD 7E FF           7131 	ld	a,-1 (ix)
   2511 77                 7132 	ld	(hl),a
                           7133 ;demo.c:1092: vdp_copier(&cmd);
   2512 21r6Cs41           7134 	ld	hl,#_cmd
   2515 E5                 7135 	push	hl
   2516 CDr00s00           7136 	call	_vdp_copier
   2519 F1                 7137 	pop	af
                           7138 ;demo.c:1086: for (x = 0; x < 212; x++) {
   251A DD 34 FE           7139 	inc	-2 (ix)
   251D 20 03              7140 	jr	NZ,00169$
   251F DD 34 FF           7141 	inc	-1 (ix)
   2522                    7142 00169$:
   2522 18 B0              7143 	jr	00134$
   2524                    7144 00137$:
                           7145 ;demo.c:1095: vdp_register(9,2); // 50hz,192
   2524 21 09 02           7146 	ld	hl,#0x0209
   2527 E5                 7147 	push	hl
   2528 CDr00s00           7148 	call	_vdp_register
   252B F1                 7149 	pop	af
                           7150 ;demo.c:1097: vdp_load_palette(boxes_palette);
   252C 21r48s41           7151 	ld	hl,#_boxes_palette
   252F E5                 7152 	push	hl
   2530 CDr00s00           7153 	call	_vdp_load_palette
   2533 F1                 7154 	pop	af
                           7155 ;demo.c:1099: msx2_palette(15,0,0,0);
   2534 21 00 00           7156 	ld	hl,#0x0000
   2537 E5                 7157 	push	hl
   2538 2E 0F              7158 	ld	l, #0x0F
   253A E5                 7159 	push	hl
   253B CDr00s00           7160 	call	_msx2_palette
   253E F1                 7161 	pop	af
   253F F1                 7162 	pop	af
                           7163 ;demo.c:1101: drawtilescreen_full(tri_center);
   2540 21r2Cs02           7164 	ld	hl,#_tri_center
   2543 E5                 7165 	push	hl
   2544 CDrBCs23           7166 	call	_drawtilescreen_full
   2547 F1                 7167 	pop	af
                           7168 ;demo.c:1102: vdp_register(2, 0x1f);
   2548 21 02 1F           7169 	ld	hl,#0x1F02
   254B E5                 7170 	push	hl
   254C CDr00s00           7171 	call	_vdp_register
   254F F1                 7172 	pop	af
   2550                    7173 00102$:
                           7174 ;demo.c:1107: triframes++;
   2550 FD 21r20s42        7175 	ld	iy,#_triframes
   2554 FD 34 00           7176 	inc	0 (iy)
   2557 20 07              7177 	jr	NZ,00170$
   2559 FD 21r20s42        7178 	ld	iy,#_triframes
   255D FD 34 01           7179 	inc	1 (iy)
   2560                    7180 00170$:
                           7181 ;demo.c:1109: if (triframes == 200) { tilei = 0; tilex = 0; tiley = 0; }
   2560 3Ar20s42           7182 	ld	a,(#_triframes+0)
   2563 D6 C8              7183 	sub	a,#0xC8
   2565 20 06              7184 	jr	NZ,00171$
   2567 3Ar21s42           7185 	ld	a,(#_triframes+1)
   256A B7                 7186 	or	a,a
   256B 28 02              7187 	jr	Z,00172$
   256D                    7188 00171$:
   256D 18 1E              7189 	jr	00104$
   256F                    7190 00172$:
   256F 21r0Es42           7191 	ld	hl,#_tilei + 0
   2572 36 00              7192 	ld	(hl), #0x00
   2574 21r0Fs42           7193 	ld	hl,#_tilei + 1
   2577 36 00              7194 	ld	(hl), #0x00
   2579 21r10s42           7195 	ld	hl,#_tilex + 0
   257C 36 00              7196 	ld	(hl), #0x00
   257E 21r11s42           7197 	ld	hl,#_tilex + 1
   2581 36 00              7198 	ld	(hl), #0x00
   2583 21r12s42           7199 	ld	hl,#_tiley + 0
   2586 36 00              7200 	ld	(hl), #0x00
   2588 21r13s42           7201 	ld	hl,#_tiley + 1
   258B 36 00              7202 	ld	(hl), #0x00
   258D                    7203 00104$:
                           7204 ;demo.c:1110: if (triframes >= 200 && triframes < 400) {
   258D 3Ar20s42           7205 	ld	a,(#_triframes+0)
   2590 D6 C8              7206 	sub	a,#0xC8
   2592 3Ar21s42           7207 	ld	a,(#_triframes+1)
   2595 DE 00              7208 	sbc	a,#0x00
   2597 FArAFs25           7209 	jp	M,00106$
   259A 3Ar20s42           7210 	ld	a,(#_triframes+0)
   259D D6 90              7211 	sub	a,#0x90
   259F 3Ar21s42           7212 	ld	a,(#_triframes+1)
   25A2 DE 01              7213 	sbc	a,#0x01
   25A4 F2rAFs25           7214 	jp	P,00106$
                           7215 ;demo.c:1111: drawtilescreen(tri_up);
   25A7 21rECs02           7216 	ld	hl,#_tri_up
   25AA E5                 7217 	push	hl
   25AB CDrD2s22           7218 	call	_drawtilescreen
   25AE F1                 7219 	pop	af
   25AF                    7220 00106$:
                           7221 ;demo.c:1114: if (triframes == 400) { tilei = 0; tilex = 0; tiley = 0; }
   25AF 3Ar20s42           7222 	ld	a,(#_triframes+0)
   25B2 D6 90              7223 	sub	a,#0x90
   25B4 20 07              7224 	jr	NZ,00173$
   25B6 3Ar21s42           7225 	ld	a,(#_triframes+1)
   25B9 D6 01              7226 	sub	a,#0x01
   25BB 28 02              7227 	jr	Z,00174$
   25BD                    7228 00173$:
   25BD 18 1E              7229 	jr	00109$
   25BF                    7230 00174$:
   25BF 21r0Es42           7231 	ld	hl,#_tilei + 0
   25C2 36 00              7232 	ld	(hl), #0x00
   25C4 21r0Fs42           7233 	ld	hl,#_tilei + 1
   25C7 36 00              7234 	ld	(hl), #0x00
   25C9 21r10s42           7235 	ld	hl,#_tilex + 0
   25CC 36 00              7236 	ld	(hl), #0x00
   25CE 21r11s42           7237 	ld	hl,#_tilex + 1
   25D1 36 00              7238 	ld	(hl), #0x00
   25D3 21r12s42           7239 	ld	hl,#_tiley + 0
   25D6 36 00              7240 	ld	(hl), #0x00
   25D8 21r13s42           7241 	ld	hl,#_tiley + 1
   25DB 36 00              7242 	ld	(hl), #0x00
   25DD                    7243 00109$:
                           7244 ;demo.c:1115: if (triframes >= 400 && triframes < 600) {
   25DD 3Ar20s42           7245 	ld	a,(#_triframes+0)
   25E0 D6 90              7246 	sub	a,#0x90
   25E2 3Ar21s42           7247 	ld	a,(#_triframes+1)
   25E5 DE 01              7248 	sbc	a,#0x01
   25E7 FArFFs25           7249 	jp	M,00111$
   25EA 3Ar20s42           7250 	ld	a,(#_triframes+0)
   25ED D6 58              7251 	sub	a,#0x58
   25EF 3Ar21s42           7252 	ld	a,(#_triframes+1)
   25F2 DE 02              7253 	sbc	a,#0x02
   25F4 F2rFFs25           7254 	jp	P,00111$
                           7255 ;demo.c:1116: drawtilescreen(tri_dia);
   25F7 21rACs03           7256 	ld	hl,#_tri_dia
   25FA E5                 7257 	push	hl
   25FB CDrD2s22           7258 	call	_drawtilescreen
   25FE F1                 7259 	pop	af
   25FF                    7260 00111$:
                           7261 ;demo.c:1119: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   25FF 3Ar20s42           7262 	ld	a,(#_triframes+0)
   2602 D6 58              7263 	sub	a,#0x58
   2604 20 07              7264 	jr	NZ,00175$
   2606 3Ar21s42           7265 	ld	a,(#_triframes+1)
   2609 D6 02              7266 	sub	a,#0x02
   260B 28 02              7267 	jr	Z,00176$
   260D                    7268 00175$:
   260D 18 1E              7269 	jr	00114$
   260F                    7270 00176$:
   260F 21r0Es42           7271 	ld	hl,#_tilei + 0
   2612 36 00              7272 	ld	(hl), #0x00
   2614 21r0Fs42           7273 	ld	hl,#_tilei + 1
   2617 36 00              7274 	ld	(hl), #0x00
   2619 21r10s42           7275 	ld	hl,#_tilex + 0
   261C 36 00              7276 	ld	(hl), #0x00
   261E 21r11s42           7277 	ld	hl,#_tilex + 1
   2621 36 00              7278 	ld	(hl), #0x00
   2623 21r12s42           7279 	ld	hl,#_tiley + 0
   2626 36 00              7280 	ld	(hl), #0x00
   2628 21r13s42           7281 	ld	hl,#_tiley + 1
   262B 36 00              7282 	ld	(hl), #0x00
   262D                    7283 00114$:
                           7284 ;demo.c:1120: if (triframes >= 600 && triframes < 700) {
   262D 3Ar20s42           7285 	ld	a,(#_triframes+0)
   2630 D6 58              7286 	sub	a,#0x58
   2632 3Ar21s42           7287 	ld	a,(#_triframes+1)
   2635 DE 02              7288 	sbc	a,#0x02
   2637 FAr4Fs26           7289 	jp	M,00116$
   263A 3Ar20s42           7290 	ld	a,(#_triframes+0)
   263D D6 BC              7291 	sub	a,#0xBC
   263F 3Ar21s42           7292 	ld	a,(#_triframes+1)
   2642 DE 02              7293 	sbc	a,#0x02
   2644 F2r4Fs26           7294 	jp	P,00116$
                           7295 ;demo.c:1121: drawtilescreen(tri_side1);
   2647 21r6Cs04           7296 	ld	hl,#_tri_side1
   264A E5                 7297 	push	hl
   264B CDrD2s22           7298 	call	_drawtilescreen
   264E F1                 7299 	pop	af
   264F                    7300 00116$:
                           7301 ;demo.c:1124: if (triframes == 800) { tilei = 0; tilex = 0; tiley = 0; }
   264F 3Ar20s42           7302 	ld	a,(#_triframes+0)
   2652 D6 20              7303 	sub	a,#0x20
   2654 20 07              7304 	jr	NZ,00177$
   2656 3Ar21s42           7305 	ld	a,(#_triframes+1)
   2659 D6 03              7306 	sub	a,#0x03
   265B 28 02              7307 	jr	Z,00178$
   265D                    7308 00177$:
   265D 18 1E              7309 	jr	00119$
   265F                    7310 00178$:
   265F 21r0Es42           7311 	ld	hl,#_tilei + 0
   2662 36 00              7312 	ld	(hl), #0x00
   2664 21r0Fs42           7313 	ld	hl,#_tilei + 1
   2667 36 00              7314 	ld	(hl), #0x00
   2669 21r10s42           7315 	ld	hl,#_tilex + 0
   266C 36 00              7316 	ld	(hl), #0x00
   266E 21r11s42           7317 	ld	hl,#_tilex + 1
   2671 36 00              7318 	ld	(hl), #0x00
   2673 21r12s42           7319 	ld	hl,#_tiley + 0
   2676 36 00              7320 	ld	(hl), #0x00
   2678 21r13s42           7321 	ld	hl,#_tiley + 1
   267B 36 00              7322 	ld	(hl), #0x00
   267D                    7323 00119$:
                           7324 ;demo.c:1125: if (triframes >= 800 && triframes < 1000) {
   267D 3Ar20s42           7325 	ld	a,(#_triframes+0)
   2680 D6 20              7326 	sub	a,#0x20
   2682 3Ar21s42           7327 	ld	a,(#_triframes+1)
   2685 DE 03              7328 	sbc	a,#0x03
   2687 FAr9Fs26           7329 	jp	M,00121$
   268A 3Ar20s42           7330 	ld	a,(#_triframes+0)
   268D D6 E8              7331 	sub	a,#0xE8
   268F 3Ar21s42           7332 	ld	a,(#_triframes+1)
   2692 DE 03              7333 	sbc	a,#0x03
   2694 F2r9Fs26           7334 	jp	P,00121$
                           7335 ;demo.c:1126: drawtilescreen(tri_side2);
   2697 21r2Cs05           7336 	ld	hl,#_tri_side2
   269A E5                 7337 	push	hl
   269B CDrD2s22           7338 	call	_drawtilescreen
   269E F1                 7339 	pop	af
   269F                    7340 00121$:
                           7341 ;demo.c:1129: if (triframes == 1000) { tilei = 0; tilex = 0; tiley = 0; }
   269F 3Ar20s42           7342 	ld	a,(#_triframes+0)
   26A2 D6 E8              7343 	sub	a,#0xE8
   26A4 20 07              7344 	jr	NZ,00179$
   26A6 3Ar21s42           7345 	ld	a,(#_triframes+1)
   26A9 D6 03              7346 	sub	a,#0x03
   26AB 28 02              7347 	jr	Z,00180$
   26AD                    7348 00179$:
   26AD 18 1E              7349 	jr	00124$
   26AF                    7350 00180$:
   26AF 21r0Es42           7351 	ld	hl,#_tilei + 0
   26B2 36 00              7352 	ld	(hl), #0x00
   26B4 21r0Fs42           7353 	ld	hl,#_tilei + 1
   26B7 36 00              7354 	ld	(hl), #0x00
   26B9 21r10s42           7355 	ld	hl,#_tilex + 0
   26BC 36 00              7356 	ld	(hl), #0x00
   26BE 21r11s42           7357 	ld	hl,#_tilex + 1
   26C1 36 00              7358 	ld	(hl), #0x00
   26C3 21r12s42           7359 	ld	hl,#_tiley + 0
   26C6 36 00              7360 	ld	(hl), #0x00
   26C8 21r13s42           7361 	ld	hl,#_tiley + 1
   26CB 36 00              7362 	ld	(hl), #0x00
   26CD                    7363 00124$:
                           7364 ;demo.c:1130: if (triframes >= 1000 && triframes < 1200) {
   26CD 3Ar20s42           7365 	ld	a,(#_triframes+0)
   26D0 D6 E8              7366 	sub	a,#0xE8
   26D2 3Ar21s42           7367 	ld	a,(#_triframes+1)
   26D5 DE 03              7368 	sbc	a,#0x03
   26D7 FArEFs26           7369 	jp	M,00126$
   26DA 3Ar20s42           7370 	ld	a,(#_triframes+0)
   26DD D6 B0              7371 	sub	a,#0xB0
   26DF 3Ar21s42           7372 	ld	a,(#_triframes+1)
   26E2 DE 04              7373 	sbc	a,#0x04
   26E4 F2rEFs26           7374 	jp	P,00126$
                           7375 ;demo.c:1131: drawtilescreen(tri_center);
   26E7 21r2Cs02           7376 	ld	hl,#_tri_center
   26EA E5                 7377 	push	hl
   26EB CDrD2s22           7378 	call	_drawtilescreen
   26EE F1                 7379 	pop	af
   26EF                    7380 00126$:
                           7381 ;demo.c:1134: if (triframes > 1200) triframes = 199;
   26EF 3E B0              7382 	ld	a,#0xB0
   26F1 FD 21r20s42        7383 	ld	iy,#_triframes
   26F5 FD 96 00           7384 	sub	a,0 (iy)
   26F8 3E 04              7385 	ld	a,#0x04
   26FA FD 21r20s42        7386 	ld	iy,#_triframes
   26FE FD 9E 01           7387 	sbc	a,1 (iy)
   2701 F2r0Es27           7388 	jp	P,00129$
   2704 21r20s42           7389 	ld	hl,#_triframes + 0
   2707 36 C7              7390 	ld	(hl), #0xC7
   2709 21r21s42           7391 	ld	hl,#_triframes + 1
   270C 36 00              7392 	ld	(hl), #0x00
   270E                    7393 00129$:
                           7394 ;demo.c:1137: msx2_palette(2,0,0,0);
   270E 21 00 00           7395 	ld	hl,#0x0000
   2711 E5                 7396 	push	hl
   2712 2E 02              7397 	ld	l, #0x02
   2714 E5                 7398 	push	hl
   2715 CDr00s00           7399 	call	_msx2_palette
   2718 F1                 7400 	pop	af
   2719 F1                 7401 	pop	af
                           7402 ;demo.c:1138: msx2_palette(11,0,0,0);
   271A 21 00 00           7403 	ld	hl,#0x0000
   271D E5                 7404 	push	hl
   271E 2E 0B              7405 	ld	l, #0x0B
   2720 E5                 7406 	push	hl
   2721 CDr00s00           7407 	call	_msx2_palette
   2724 F1                 7408 	pop	af
   2725 F1                 7409 	pop	af
                           7410 ;demo.c:1141: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2726 21r17s42           7411 	ld	hl,#_tripal + 2
   2729 4E                 7412 	ld	c,(hl)
   272A 11r16s42           7413 	ld	de,#_tripal + 1
   272D 1A                 7414 	ld	a,(de)
   272E 47                 7415 	ld	b,a
   272F 21r15s42           7416 	ld	hl,#_tripal
   2732 5E                 7417 	ld	e,(hl)
   2733 79                 7418 	ld	a,c
   2734 F5                 7419 	push	af
   2735 33                 7420 	inc	sp
   2736 C5                 7421 	push	bc
   2737 33                 7422 	inc	sp
   2738 53                 7423 	ld	d,e
   2739 1E 03              7424 	ld	e,#0x03
   273B D5                 7425 	push	de
   273C CDr00s00           7426 	call	_msx2_palette
   273F F1                 7427 	pop	af
   2740 F1                 7428 	pop	af
                           7429 ;demo.c:1142: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2741 21r1As42           7430 	ld	hl,#_tripal + 5
   2744 4E                 7431 	ld	c,(hl)
   2745 11r19s42           7432 	ld	de,#_tripal + 4
   2748 1A                 7433 	ld	a,(de)
   2749 47                 7434 	ld	b,a
   274A 21r18s42           7435 	ld	hl,#_tripal + 3
   274D 5E                 7436 	ld	e,(hl)
   274E 79                 7437 	ld	a,c
   274F F5                 7438 	push	af
   2750 33                 7439 	inc	sp
   2751 C5                 7440 	push	bc
   2752 33                 7441 	inc	sp
   2753 53                 7442 	ld	d,e
   2754 1E 0E              7443 	ld	e,#0x0E
   2756 D5                 7444 	push	de
   2757 CDr00s00           7445 	call	_msx2_palette
   275A F1                 7446 	pop	af
   275B F1                 7447 	pop	af
                           7448 ;demo.c:1143: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   275C 21r1Ds42           7449 	ld	hl,#_tripal + 8
   275F 4E                 7450 	ld	c,(hl)
   2760 11r1Cs42           7451 	ld	de,#_tripal + 7
   2763 1A                 7452 	ld	a,(de)
   2764 47                 7453 	ld	b,a
   2765 21r1Bs42           7454 	ld	hl,#_tripal + 6
   2768 5E                 7455 	ld	e,(hl)
   2769 79                 7456 	ld	a,c
   276A F5                 7457 	push	af
   276B 33                 7458 	inc	sp
   276C C5                 7459 	push	bc
   276D 33                 7460 	inc	sp
   276E 53                 7461 	ld	d,e
   276F 1E 06              7462 	ld	e,#0x06
   2771 D5                 7463 	push	de
   2772 CDr00s00           7464 	call	_msx2_palette
   2775 F1                 7465 	pop	af
   2776 F1                 7466 	pop	af
                           7467 ;demo.c:1146: tripaltick++;
   2777 FD 21r1Es42        7468 	ld	iy,#_tripaltick
   277B FD 34 00           7469 	inc	0 (iy)
                           7470 ;demo.c:1147: if (tripaltick > 6) {
   277E 3E 06              7471 	ld	a,#0x06
   2780 FD 21r1Es42        7472 	ld	iy,#_tripaltick
   2784 FD 96 00           7473 	sub	a,0 (iy)
   2787 D2r0Cs28           7474 	jp	NC,00142$
                           7475 ;demo.c:1148: tripaltick2++;
   278A FD 21r1Fs42        7476 	ld	iy,#_tripaltick2
   278E FD 34 00           7477 	inc	0 (iy)
                           7478 ;demo.c:1149: if (tripaltick2 > 6) tripaltick2 = 0;
   2791 3E 06              7479 	ld	a,#0x06
   2793 FD 21r1Fs42        7480 	ld	iy,#_tripaltick2
   2797 FD 96 00           7481 	sub	a,0 (iy)
   279A 30 05              7482 	jr	NC,00131$
   279C 21r1Fs42           7483 	ld	hl,#_tripaltick2 + 0
   279F 36 00              7484 	ld	(hl), #0x00
   27A1                    7485 00131$:
                           7486 ;demo.c:1151: r = tripal[0];
   27A1 21r15s42           7487 	ld	hl,#_tripal
   27A4 4E                 7488 	ld	c,(hl)
   27A5 DD 71 FD           7489 	ld	-3 (ix),c
                           7490 ;demo.c:1152: g = tripal[1];
   27A8 11r16s42           7491 	ld	de,#_tripal + 1
   27AB 1A                 7492 	ld	a,(de)
   27AC DD 77 FC           7493 	ld	-4 (ix),a
                           7494 ;demo.c:1153: b = tripal[2];
   27AF 21r17s42           7495 	ld	hl,#_tripal + 2
   27B2 5E                 7496 	ld	e,(hl)
   27B3 DD 73 FB           7497 	ld	-5 (ix),e
                           7498 ;demo.c:1155: for (x = 0; x < 6; x++) {
   27B6 DD 36 FE 00        7499 	ld	-2 (ix),#0x00
   27BA DD 36 FF 00        7500 	ld	-1 (ix),#0x00
   27BE                    7501 00138$:
   27BE DD 7E FE           7502 	ld	a,-2 (ix)
   27C1 D6 06              7503 	sub	a,#0x06
   27C3 DD 7E FF           7504 	ld	a,-1 (ix)
   27C6 DE 00              7505 	sbc	a,#0x00
   27C8 F2rF2s27           7506 	jp	P,00141$
                           7507 ;demo.c:1156: tripal[x] = tripal[x+3];
   27CB 3Er15              7508 	ld	a,#<_tripal
   27CD DD 86 FE           7509 	add	a,-2 (ix)
   27D0 4F                 7510 	ld	c,a
   27D1 3Es42              7511 	ld	a,#>_tripal
   27D3 DD 8E FF           7512 	adc	a,-1 (ix)
   27D6 47                 7513 	ld	b,a
   27D7 DD 5E FE           7514 	ld	e,-2 (ix)
   27DA 1C                 7515 	inc	e
   27DB 1C                 7516 	inc	e
   27DC 1C                 7517 	inc	e
   27DD 3Er15              7518 	ld	a,#<_tripal
   27DF 83                 7519 	add	a,e
   27E0 5F                 7520 	ld	e,a
   27E1 3Es42              7521 	ld	a,#>_tripal
   27E3 CE 00              7522 	adc	a,#0x00
   27E5 57                 7523 	ld	d,a
   27E6 1A                 7524 	ld	a,(de)
   27E7 02                 7525 	ld	(bc),a
                           7526 ;demo.c:1155: for (x = 0; x < 6; x++) {
   27E8 DD 34 FE           7527 	inc	-2 (ix)
   27EB 20 03              7528 	jr	NZ,00181$
   27ED DD 34 FF           7529 	inc	-1 (ix)
   27F0                    7530 00181$:
   27F0 18 CC              7531 	jr	00138$
   27F2                    7532 00141$:
                           7533 ;demo.c:1159: tripal[6] = r;
   27F2 01r1Bs42           7534 	ld	bc,#_tripal + 6
   27F5 DD 7E FD           7535 	ld	a,-3 (ix)
   27F8 02                 7536 	ld	(bc),a
                           7537 ;demo.c:1160: tripal[7] = g;
   27F9 01r1Cs42           7538 	ld	bc,#_tripal + 7
   27FC DD 7E FC           7539 	ld	a,-4 (ix)
   27FF 02                 7540 	ld	(bc),a
                           7541 ;demo.c:1161: tripal[8] = b;
   2800 01r1Ds42           7542 	ld	bc,#_tripal + 8
   2803 DD 7E FB           7543 	ld	a,-5 (ix)
   2806 02                 7544 	ld	(bc),a
                           7545 ;demo.c:1162: tripaltick = 0;
   2807 21r1Es42           7546 	ld	hl,#_tripaltick + 0
   280A 36 00              7547 	ld	(hl), #0x00
   280C                    7548 00142$:
   280C DD F9              7549 	ld	sp,ix
   280E DD E1              7550 	pop	ix
   2810 C9                 7551 	ret
   2811                    7552 _tritiles_end::
                           7553 ;demo.c:1167: int abs (int n) {
                           7554 ;	---------------------------------
                           7555 ; Function abs
                           7556 ; ---------------------------------
   2811                    7557 _abs_start::
   2811                    7558 _abs:
   2811 DD E5              7559 	push	ix
   2813 DD 21 00 00        7560 	ld	ix,#0
   2817 DD 39              7561 	add	ix,sp
   2819 21 FA FF           7562 	ld	hl,#-6
   281C 39                 7563 	add	hl,sp
   281D F9                 7564 	ld	sp,hl
                           7565 ;demo.c:1168: const int ret[2] = { n, -n };
   281E 21 02 00           7566 	ld	hl,#0x0002
   2821 39                 7567 	add	hl,sp
   2822 4D                 7568 	ld	c,l
   2823 44                 7569 	ld	b,h
   2824 DD 7E 04           7570 	ld	a,4 (ix)
   2827 77                 7571 	ld	(hl),a
   2828 23                 7572 	inc	hl
   2829 DD 7E 05           7573 	ld	a,5 (ix)
   282C 77                 7574 	ld	(hl),a
   282D 21 02 00           7575 	ld	hl,#0x0002
   2830 09                 7576 	add	hl,bc
   2831 DD 75 FA           7577 	ld	-6 (ix),l
   2834 DD 74 FB           7578 	ld	-5 (ix),h
   2837 AF                 7579 	xor	a,a
   2838 DD 9E 04           7580 	sbc	a,4 (ix)
   283B 5F                 7581 	ld	e,a
   283C 3E 00              7582 	ld	a,#0x00
   283E DD 9E 05           7583 	sbc	a,5 (ix)
   2841 57                 7584 	ld	d,a
   2842 DD 6E FA           7585 	ld	l,-6 (ix)
   2845 DD 66 FB           7586 	ld	h,-5 (ix)
   2848 73                 7587 	ld	(hl),e
   2849 23                 7588 	inc	hl
   284A 72                 7589 	ld	(hl),d
                           7590 ;demo.c:1169: return ret [n<0];
   284B DD 7E 05           7591 	ld	a,5 (ix)
   284E 07                 7592 	rlca
   284F E6 01              7593 	and	a,#0x01
   2851 5F                 7594 	ld	e,a
   2852 CB 23              7595 	sla	e
   2854 79                 7596 	ld	a,c
   2855 83                 7597 	add	a,e
   2856 6F                 7598 	ld	l,a
   2857 78                 7599 	ld	a,b
   2858 CE 00              7600 	adc	a,#0x00
   285A 67                 7601 	ld	h,a
   285B 5E                 7602 	ld	e,(hl)
   285C 23                 7603 	inc	hl
   285D 4E                 7604 	ld	c,(hl)
   285E 6B                 7605 	ld	l,e
   285F 61                 7606 	ld	h,c
   2860 DD F9              7607 	ld	sp,ix
   2862 DD E1              7608 	pop	ix
   2864 C9                 7609 	ret
   2865                    7610 _abs_end::
                           7611 ;demo.c:1175: void logoeffu() {
                           7612 ;	---------------------------------
                           7613 ; Function logoeffu
                           7614 ; ---------------------------------
   2865                    7615 _logoeffu_start::
   2865                    7616 _logoeffu:
   2865 DD E5              7617 	push	ix
   2867 DD 21 00 00        7618 	ld	ix,#0
   286B DD 39              7619 	add	ix,sp
   286D F5                 7620 	push	af
   286E F5                 7621 	push	af
                           7622 ;demo.c:1179: fadein();
   286F CDr27s0A           7623 	call	_fadein
                           7624 ;demo.c:1181: v = abs(sintabx[(vbicount) & 255]>>4);
   2872 21r68s41           7625 	ld	hl,#_vbicount + 0
   2875 4E                 7626 	ld	c,(hl)
   2876 06 00              7627 	ld	b,#0x00
   2878 CB 21              7628 	sla	c
   287A CB 10              7629 	rl	b
   287C 21r2Cs00           7630 	ld	hl,#_sintabx
   287F 09                 7631 	add	hl,bc
   2880 4E                 7632 	ld	c,(hl)
   2881 23                 7633 	inc	hl
   2882 46                 7634 	ld	b,(hl)
   2883 CB 38              7635 	srl	b
   2885 CB 19              7636 	rr	c
   2887 CB 38              7637 	srl	b
   2889 CB 19              7638 	rr	c
   288B CB 38              7639 	srl	b
   288D CB 19              7640 	rr	c
   288F CB 38              7641 	srl	b
   2891 CB 19              7642 	rr	c
   2893 C5                 7643 	push	bc
   2894 CDr11s28           7644 	call	_abs
   2897 F1                 7645 	pop	af
   2898 44                 7646 	ld	b,h
   2899 4D                 7647 	ld	c,l
   289A DD 71 FC           7648 	ld	-4 (ix),c
   289D DD 70 FD           7649 	ld	-3 (ix),b
                           7650 ;demo.c:1183: for (y = 0; y < 116; y+=2) {
   28A0 DD 36 FE 00        7651 	ld	-2 (ix),#0x00
   28A4 DD 36 FF 00        7652 	ld	-1 (ix),#0x00
   28A8                    7653 00108$:
   28A8 DD 7E FE           7654 	ld	a,-2 (ix)
   28AB D6 74              7655 	sub	a,#0x74
   28AD DD 7E FF           7656 	ld	a,-1 (ix)
   28B0 DE 00              7657 	sbc	a,#0x00
   28B2 F2r7Ds29           7658 	jp	P,00111$
                           7659 ;demo.c:1184: cmd.size_x = 108;
   28B5 11r74s41           7660 	ld	de,#_cmd + 8
   28B8 EB                 7661 	ex	de,hl
   28B9 36 6C              7662 	ld	(hl),#0x6C
   28BB 23                 7663 	inc	hl
   28BC 36 00              7664 	ld	(hl),#0x00
                           7665 ;demo.c:1185: cmd.size_y = 2;
   28BE 11r76s41           7666 	ld	de,#_cmd + 10
   28C1 EB                 7667 	ex	de,hl
   28C2 36 02              7668 	ld	(hl),#0x02
   28C4 23                 7669 	inc	hl
   28C5 36 00              7670 	ld	(hl),#0x00
                           7671 ;demo.c:1186: cmd.data = 0;
   28C7 11r78s41           7672 	ld	de,#_cmd + 12
   28CA 3E 00              7673 	ld	a,#0x00
   28CC 12                 7674 	ld	(de),a
                           7675 ;demo.c:1187: cmd.argument = 0x00;
   28CD 11r79s41           7676 	ld	de,#_cmd + 13
   28D0 3E 00              7677 	ld	a,#0x00
   28D2 12                 7678 	ld	(de),a
                           7679 ;demo.c:1188: cmd.command = 0xd0; 
   28D3 11r7As41           7680 	ld	de,#_cmd + 14
   28D6 3E D0              7681 	ld	a,#0xD0
   28D8 12                 7682 	ld	(de),a
                           7683 ;demo.c:1189: cmd.source_x = 74;
   28D9 21r6Cs41           7684 	ld	hl,#_cmd
   28DC 36 4A              7685 	ld	(hl),#0x4A
   28DE 23                 7686 	inc	hl
   28DF 36 00              7687 	ld	(hl),#0x00
                           7688 ;demo.c:1190: cmd.source_y = 256+y;
   28E1 11r6Es41           7689 	ld	de,#_cmd + 2
   28E4 DD 7E FE           7690 	ld	a,-2 (ix)
   28E7 C6 00              7691 	add	a,#0x00
   28E9 4F                 7692 	ld	c,a
   28EA DD 7E FF           7693 	ld	a,-1 (ix)
   28ED CE 01              7694 	adc	a,#0x01
   28EF 47                 7695 	ld	b,a
   28F0 6B                 7696 	ld	l,e
   28F1 62                 7697 	ld	h,d
   28F2 71                 7698 	ld	(hl),c
   28F3 23                 7699 	inc	hl
   28F4 70                 7700 	ld	(hl),b
                           7701 ;demo.c:1191: v+=y;
   28F5 DD 7E FC           7702 	ld	a,-4 (ix)
   28F8 DD 86 FE           7703 	add	a,-2 (ix)
   28FB DD 77 FC           7704 	ld	-4 (ix),a
   28FE DD 7E FD           7705 	ld	a,-3 (ix)
   2901 DD 8E FF           7706 	adc	a,-1 (ix)
   2904 DD 77 FD           7707 	ld	-3 (ix),a
                           7708 ;demo.c:1192: v -= powa;
   2907 21r24s42           7709 	ld	hl,#_powa
   290A DD 7E FC           7710 	ld	a,-4 (ix)
   290D 96                 7711 	sub	a,(hl)
   290E DD 77 FC           7712 	ld	-4 (ix),a
   2911 DD 7E FD           7713 	ld	a,-3 (ix)
   2914 23                 7714 	inc	hl
   2915 9E                 7715 	sbc	a,(hl)
                           7716 ;demo.c:1193: if (v<0) v = 0;
   2916 DD 77 FD           7717 	ld	-3 (ix),a
   2919 CB 7F              7718 	bit	7,a
   291B 28 08              7719 	jr	Z,00102$
   291D DD 36 FC 00        7720 	ld	-4 (ix),#0x00
   2921 DD 36 FD 00        7721 	ld	-3 (ix),#0x00
   2925                    7722 00102$:
                           7723 ;demo.c:1194: if (v>150) v = 150;
   2925 3E 96              7724 	ld	a,#0x96
   2927 DD 96 FC           7725 	sub	a,-4 (ix)
   292A 3E 00              7726 	ld	a,#0x00
   292C DD 9E FD           7727 	sbc	a,-3 (ix)
   292F F2r3As29           7728 	jp	P,00104$
   2932 DD 36 FC 96        7729 	ld	-4 (ix),#0x96
   2936 DD 36 FD 00        7730 	ld	-3 (ix),#0x00
   293A                    7731 00104$:
                           7732 ;demo.c:1195: cmd.dest_x = 74+v;
   293A 01r70s41           7733 	ld	bc,#_cmd + 4
   293D DD 7E FC           7734 	ld	a,-4 (ix)
   2940 C6 4A              7735 	add	a,#0x4A
   2942 5F                 7736 	ld	e,a
   2943 DD 7E FD           7737 	ld	a,-3 (ix)
   2946 CE 00              7738 	adc	a,#0x00
   2948 57                 7739 	ld	d,a
   2949 69                 7740 	ld	l,c
   294A 60                 7741 	ld	h,b
   294B 73                 7742 	ld	(hl),e
   294C 23                 7743 	inc	hl
   294D 72                 7744 	ld	(hl),d
                           7745 ;demo.c:1196: cmd.dest_y = 50+y+1;
   294E 01r72s41           7746 	ld	bc,#_cmd + 6
   2951 DD 7E FE           7747 	ld	a,-2 (ix)
   2954 C6 33              7748 	add	a,#0x33
   2956 5F                 7749 	ld	e,a
   2957 DD 7E FF           7750 	ld	a,-1 (ix)
   295A CE 00              7751 	adc	a,#0x00
   295C 57                 7752 	ld	d,a
   295D 69                 7753 	ld	l,c
   295E 60                 7754 	ld	h,b
   295F 73                 7755 	ld	(hl),e
   2960 23                 7756 	inc	hl
   2961 72                 7757 	ld	(hl),d
                           7758 ;demo.c:1197: vdp_copier(&cmd);
   2962 21r6Cs41           7759 	ld	hl,#_cmd
   2965 E5                 7760 	push	hl
   2966 CDr00s00           7761 	call	_vdp_copier
   2969 F1                 7762 	pop	af
                           7763 ;demo.c:1183: for (y = 0; y < 116; y+=2) {
   296A DD 7E FE           7764 	ld	a,-2 (ix)
   296D C6 02              7765 	add	a,#0x02
   296F DD 77 FE           7766 	ld	-2 (ix),a
   2972 DD 7E FF           7767 	ld	a,-1 (ix)
   2975 CE 00              7768 	adc	a,#0x00
   2977 DD 77 FF           7769 	ld	-1 (ix),a
   297A C3rA8s28           7770 	jp	00108$
   297D                    7771 00111$:
                           7772 ;demo.c:1200: if (vbicount > 84 && onceclear > 182) {
   297D 3E 54              7773 	ld	a,#0x54
   297F FD 21r68s41        7774 	ld	iy,#_vbicount
   2983 FD 96 00           7775 	sub	a,0 (iy)
   2986 3E 00              7776 	ld	a,#0x00
   2988 FD 21r68s41        7777 	ld	iy,#_vbicount
   298C FD 9E 01           7778 	sbc	a,1 (iy)
   298F F2rF1s29           7779 	jp	P,00106$
   2992 3E B6              7780 	ld	a,#0xB6
   2994 FD 21r26s42        7781 	ld	iy,#_onceclear
   2998 FD 96 00           7782 	sub	a,0 (iy)
   299B D2rF1s29           7783 	jp	NC,00106$
                           7784 ;demo.c:1201: cmd.size_x = 4;
   299E 21r74s41           7785 	ld	hl, #_cmd + 8
   29A1 36 04              7786 	ld	(hl),#0x04
   29A3 23                 7787 	inc	hl
   29A4 36 00              7788 	ld	(hl),#0x00
                           7789 ;demo.c:1202: cmd.size_y = 116;
   29A6 21r76s41           7790 	ld	hl, #_cmd + 10
   29A9 36 74              7791 	ld	(hl),#0x74
   29AB 23                 7792 	inc	hl
   29AC 36 00              7793 	ld	(hl),#0x00
                           7794 ;demo.c:1203: cmd.data = 0;
                           7795 ;demo.c:1204: cmd.argument = 0x00;
   29AE 3E 00              7796 	ld	a,#0x00
   29B0 32r78s41           7797 	ld	(#_cmd + 12),a
   29B3 32r79s41           7798 	ld	(#_cmd + 13),a
                           7799 ;demo.c:1205: cmd.command = 0xd0; 
   29B6 01r7As41           7800 	ld	bc,#_cmd + 14
   29B9 3E D0              7801 	ld	a,#0xD0
   29BB 02                 7802 	ld	(bc),a
                           7803 ;demo.c:1206: cmd.source_x = 20;
   29BC 21r6Cs41           7804 	ld	hl,#_cmd
   29BF 36 14              7805 	ld	(hl),#0x14
   29C1 23                 7806 	inc	hl
   29C2 36 00              7807 	ld	(hl),#0x00
                           7808 ;demo.c:1207: cmd.source_y = 0;
   29C4 21r6Es41           7809 	ld	hl, #_cmd + 2
   29C7 36 00              7810 	ld	(hl),#0x00
   29C9 23                 7811 	inc	hl
   29CA 36 00              7812 	ld	(hl),#0x00
                           7813 ;demo.c:1208: cmd.dest_x = onceclear;
   29CC 01r70s41           7814 	ld	bc,#_cmd + 4
   29CF 21r26s42           7815 	ld	hl,#_onceclear + 0
   29D2 5E                 7816 	ld	e,(hl)
   29D3 16 00              7817 	ld	d,#0x00
   29D5 69                 7818 	ld	l,c
   29D6 60                 7819 	ld	h,b
   29D7 73                 7820 	ld	(hl),e
   29D8 23                 7821 	inc	hl
   29D9 72                 7822 	ld	(hl),d
                           7823 ;demo.c:1209: cmd.dest_y = 68;
   29DA 21r72s41           7824 	ld	hl, #_cmd + 6
   29DD 36 44              7825 	ld	(hl),#0x44
   29DF 23                 7826 	inc	hl
   29E0 36 00              7827 	ld	(hl),#0x00
                           7828 ;demo.c:1210: vdp_copier(&cmd);
   29E2 21r6Cs41           7829 	ld	hl,#_cmd
   29E5 E5                 7830 	push	hl
   29E6 CDr00s00           7831 	call	_vdp_copier
   29E9 F1                 7832 	pop	af
                           7833 ;demo.c:1211: onceclear-=4;
   29EA 21r26s42           7834 	ld	hl,#_onceclear
   29ED 7E                 7835 	ld	a,(hl)
   29EE C6 FC              7836 	add	a,#0xFC
   29F0 77                 7837 	ld	(hl),a
   29F1                    7838 00106$:
                           7839 ;demo.c:1215: powa+=2;
   29F1 21r24s42           7840 	ld	hl,#_powa
   29F4 7E                 7841 	ld	a,(hl)
   29F5 C6 02              7842 	add	a,#0x02
   29F7 23                 7843 	inc	hl
   29F8 2B                 7844 	dec	hl
   29F9 C5                 7845 	push	bc
   29FA 4F                 7846 	ld	c, a
   29FB 23                 7847 	inc	hl
   29FC 7E                 7848 	ld	a, (hl)
   29FD 47                 7849 	ld	b, a
   29FE 79                 7850 	ld	a, c
   29FF 2B                 7851 	dec	hl
   2A00 77                 7852 	ld	(hl), a
   2A01 78                 7853 	ld	a, b
   2A02 C1                 7854 	pop	bc
   2A03 CE 00              7855 	adc	a,#0x00
   2A05 23                 7856 	inc	hl
   2A06 77                 7857 	ld	(hl),a
                           7858 ;demo.c:1216: powatick = 0;
   2A07 21r22s42           7859 	ld	hl,#_powatick + 0
   2A0A 36 00              7860 	ld	(hl), #0x00
   2A0C 21r23s42           7861 	ld	hl,#_powatick + 1
   2A0F 36 00              7862 	ld	(hl), #0x00
   2A11 DD F9              7863 	ld	sp,ix
   2A13 DD E1              7864 	pop	ix
   2A15 C9                 7865 	ret
   2A16                    7866 _logoeffu_end::
                           7867 ;demo.c:1223: void do_quit() {
                           7868 ;	---------------------------------
                           7869 ; Function do_quit
                           7870 ; ---------------------------------
   2A16                    7871 _do_quit_start::
   2A16                    7872 _do_quit:
                           7873 ;demo.c:1224: waitVB();
   2A16 76                 7874 		halt 
                           7875 ;demo.c:1225: uninstall_isr();
   2A17 CDr00s00           7876 	call	_uninstall_isr
                           7877 ;demo.c:1226: PLY_Stop();
   2A1A CDr00s00           7878 	call	_PLY_Stop
                           7879 ;demo.c:1227: PLY_SendRegisters();
   2A1D CDr00s00           7880 	call	_PLY_SendRegisters
                           7881 ;demo.c:1229: screen(0);
   2A20 3E 00              7882 	ld	a,#0x00
   2A22 F5                 7883 	push	af
   2A23 33                 7884 	inc	sp
   2A24 CDr00s00           7885 	call	_screen
   2A27 33                 7886 	inc	sp
                           7887 ;demo.c:1231: puts("demo quit\r\n\r\n");
   2A28 21r39s2A           7888 	ld	hl,#__str_14
   2A2B E5                 7889 	push	hl
   2A2C CDr00s00           7890 	call	_puts
   2A2F F1                 7891 	pop	af
                           7892 ;demo.c:1233: exit(0);	
   2A30 3E 00              7893 	ld	a,#0x00
   2A32 F5                 7894 	push	af
   2A33 33                 7895 	inc	sp
   2A34 CDr00s00           7896 	call	_exit
   2A37 33                 7897 	inc	sp
   2A38 C9                 7898 	ret
   2A39                    7899 _do_quit_end::
   2A39                    7900 __str_14:
   2A39 64 65 6D 6F 20 71  7901 	.ascii "demo quit"
        75 69 74
   2A42 0D                 7902 	.db 0x0D
   2A43 0A                 7903 	.db 0x0A
   2A44 0D                 7904 	.db 0x0D
   2A45 0A                 7905 	.db 0x0A
   2A46 00                 7906 	.db 0x00
                           7907 ;demo.c:1259: void main() {
                           7908 ;	---------------------------------
                           7909 ; Function main
                           7910 ; ---------------------------------
   2A47                    7911 _main_start::
   2A47                    7912 _main:
   2A47 DD E5              7913 	push	ix
   2A49 DD 21 00 00        7914 	ld	ix,#0
   2A4D DD 39              7915 	add	ix,sp
   2A4F 21 F9 FF           7916 	ld	hl,#-7
   2A52 39                 7917 	add	hl,sp
   2A53 F9                 7918 	ld	sp,hl
                           7919 ;demo.c:1260: unsigned char quit=0;
   2A54 DD 36 FF 00        7920 	ld	-1 (ix),#0x00
                           7921 ;demo.c:1266: spindown();
   2A58 CDr00s00           7922 	call	_spindown
                           7923 ;demo.c:1268: puts("demo init\r\n\r\n");
   2A5B 21r11s2F           7924 	ld	hl,#__str_15
   2A5E E5                 7925 	push	hl
   2A5F CDr00s00           7926 	call	_puts
   2A62 F1                 7927 	pop	af
                           7928 ;demo.c:1270: for (y = 0; y < 2; y++) {
   2A63 DD 36 FB 00        7929 	ld	-5 (ix),#0x00
   2A67 DD 36 FC 00        7930 	ld	-4 (ix),#0x00
   2A6B                    7931 00118$:
   2A6B DD 7E FB           7932 	ld	a,-5 (ix)
   2A6E D6 02              7933 	sub	a,#0x02
   2A70 DD 7E FC           7934 	ld	a,-4 (ix)
   2A73 DE 00              7935 	sbc	a,#0x00
   2A75 F2rF7s2A           7936 	jp	P,00121$
                           7937 ;demo.c:1271: for (x = 0; x < 16; x++) {
   2A78 DD 4E FB           7938 	ld	c,-5 (ix)
   2A7B DD 46 FC           7939 	ld	b,-4 (ix)
   2A7E CB 21              7940 	sla	c
   2A80 CB 10              7941 	rl	b
   2A82 CB 21              7942 	sla	c
   2A84 CB 10              7943 	rl	b
   2A86 CB 21              7944 	sla	c
   2A88 CB 10              7945 	rl	b
   2A8A CB 21              7946 	sla	c
   2A8C CB 10              7947 	rl	b
   2A8E 21 81 03           7948 	ld	hl,#0x0381
   2A91 09                 7949 	add	hl,bc
   2A92 DD 75 F9           7950 	ld	-7 (ix),l
   2A95 DD 74 FA           7951 	ld	-6 (ix),h
   2A98 DD 36 FD 00        7952 	ld	-3 (ix),#0x00
   2A9C DD 36 FE 00        7953 	ld	-2 (ix),#0x00
   2AA0                    7954 00114$:
   2AA0 DD 7E FD           7955 	ld	a,-3 (ix)
   2AA3 D6 10              7956 	sub	a,#0x10
   2AA5 DD 7E FE           7957 	ld	a,-2 (ix)
   2AA8 DE 00              7958 	sbc	a,#0x00
   2AAA F2rECs2A           7959 	jp	P,00120$
                           7960 ;demo.c:1272: tri_lookup_x[(y*16)+x] = x * 16;
   2AAD DD 7E FB           7961 	ld	a,-5 (ix)
   2AB0 07                 7962 	rlca
   2AB1 07                 7963 	rlca
   2AB2 07                 7964 	rlca
   2AB3 07                 7965 	rlca
   2AB4 E6 F0              7966 	and	a,#0xF0
   2AB6 5F                 7967 	ld	e,a
   2AB7 DD 56 FD           7968 	ld	d,-3 (ix)
   2ABA 7B                 7969 	ld	a,e
   2ABB 82                 7970 	add	a,d
   2ABC 5F                 7971 	ld	e, a
   2ABD C6r00              7972 	add	a,#<_tri_lookup_x
   2ABF 4F                 7973 	ld	c,a
   2AC0 3Es01              7974 	ld	a,#>_tri_lookup_x
   2AC2 CE 00              7975 	adc	a,#0x00
   2AC4 47                 7976 	ld	b,a
   2AC5 7A                 7977 	ld	a,d
   2AC6 07                 7978 	rlca
   2AC7 07                 7979 	rlca
   2AC8 07                 7980 	rlca
   2AC9 07                 7981 	rlca
   2ACA E6 F0              7982 	and	a,#0xF0
   2ACC 02                 7983 	ld	(bc),a
                           7984 ;demo.c:1273: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   2ACD CB 23              7985 	sla	e
   2ACF 3Er88              7986 	ld	a,#<_tri_lookup_y
   2AD1 83                 7987 	add	a,e
   2AD2 6F                 7988 	ld	l,a
   2AD3 3Es01              7989 	ld	a,#>_tri_lookup_y
   2AD5 CE 00              7990 	adc	a,#0x00
   2AD7 67                 7991 	ld	h,a
   2AD8 DD 7E F9           7992 	ld	a,-7 (ix)
   2ADB 77                 7993 	ld	(hl),a
   2ADC 23                 7994 	inc	hl
   2ADD DD 7E FA           7995 	ld	a,-6 (ix)
   2AE0 77                 7996 	ld	(hl),a
                           7997 ;demo.c:1271: for (x = 0; x < 16; x++) {
   2AE1 DD 34 FD           7998 	inc	-3 (ix)
   2AE4 20 03              7999 	jr	NZ,00146$
   2AE6 DD 34 FE           8000 	inc	-2 (ix)
   2AE9                    8001 00146$:
   2AE9 C3rA0s2A           8002 	jp	00114$
   2AEC                    8003 00120$:
                           8004 ;demo.c:1270: for (y = 0; y < 2; y++) {
   2AEC DD 34 FB           8005 	inc	-5 (ix)
   2AEF 20 03              8006 	jr	NZ,00147$
   2AF1 DD 34 FC           8007 	inc	-4 (ix)
   2AF4                    8008 00147$:
   2AF4 C3r6Bs2A           8009 	jp	00118$
   2AF7                    8010 00121$:
                           8011 ;demo.c:1277: for (x = 0; x < 26; x++) {
   2AF7 DD 36 FD 00        8012 	ld	-3 (ix),#0x00
   2AFB DD 36 FE 00        8013 	ld	-2 (ix),#0x00
   2AFF DD 36 F9 00        8014 	ld	-7 (ix),#0x00
   2B03 DD 36 FA 00        8015 	ld	-6 (ix),#0x00
   2B07                    8016 00122$:
   2B07 DD 7E FD           8017 	ld	a,-3 (ix)
   2B0A D6 1A              8018 	sub	a,#0x1A
   2B0C DD 7E FE           8019 	ld	a,-2 (ix)
   2B0F DE 00              8020 	sbc	a,#0x00
   2B11 F2r63s2B           8021 	jp	P,00125$
                           8022 ;demo.c:1278: twelvetimes[x] = x * 12;
   2B14 DD 4E FD           8023 	ld	c,-3 (ix)
   2B17 DD 46 FE           8024 	ld	b,-2 (ix)
   2B1A CB 21              8025 	sla	c
   2B1C CB 10              8026 	rl	b
   2B1E 21r20s01           8027 	ld	hl,#_twelvetimes
   2B21 09                 8028 	add	hl,bc
   2B22 DD 7E F9           8029 	ld	a,-7 (ix)
   2B25 77                 8030 	ld	(hl),a
   2B26 23                 8031 	inc	hl
   2B27 DD 7E FA           8032 	ld	a,-6 (ix)
   2B2A 77                 8033 	ld	(hl),a
                           8034 ;demo.c:1279: eighttimes[x] = x * 8;
   2B2B 21r54s01           8035 	ld	hl,#_eighttimes
   2B2E 09                 8036 	add	hl,bc
   2B2F 4D                 8037 	ld	c,l
   2B30 44                 8038 	ld	b,h
   2B31 DD 5E FD           8039 	ld	e,-3 (ix)
   2B34 DD 56 FE           8040 	ld	d,-2 (ix)
   2B37 CB 23              8041 	sla	e
   2B39 CB 12              8042 	rl	d
   2B3B CB 23              8043 	sla	e
   2B3D CB 12              8044 	rl	d
   2B3F CB 23              8045 	sla	e
   2B41 CB 12              8046 	rl	d
   2B43 69                 8047 	ld	l,c
   2B44 60                 8048 	ld	h,b
   2B45 73                 8049 	ld	(hl),e
   2B46 23                 8050 	inc	hl
   2B47 72                 8051 	ld	(hl),d
                           8052 ;demo.c:1277: for (x = 0; x < 26; x++) {
   2B48 DD 7E F9           8053 	ld	a,-7 (ix)
   2B4B C6 0C              8054 	add	a,#0x0C
   2B4D DD 77 F9           8055 	ld	-7 (ix),a
   2B50 DD 7E FA           8056 	ld	a,-6 (ix)
   2B53 CE 00              8057 	adc	a,#0x00
   2B55 DD 77 FA           8058 	ld	-6 (ix),a
   2B58 DD 34 FD           8059 	inc	-3 (ix)
   2B5B 20 03              8060 	jr	NZ,00152$
   2B5D DD 34 FE           8061 	inc	-2 (ix)
   2B60                    8062 00152$:
   2B60 C3r07s2B           8063 	jp	00122$
   2B63                    8064 00125$:
                           8065 ;demo.c:1282: puts("music init...");
   2B63 21r1Fs2F           8066 	ld	hl,#__str_16
   2B66 E5                 8067 	push	hl
   2B67 CDr00s00           8068 	call	_puts
   2B6A F1                 8069 	pop	af
                           8070 ;demo.c:1284: PLY_SongPtr = (char *)0x0103;
   2B6B 21r00s00           8071 	ld	hl,#_PLY_SongPtr + 0
   2B6E 36 03              8072 	ld	(hl), #0x03
   2B70 21r01s00           8073 	ld	hl,#_PLY_SongPtr + 1
   2B73 36 01              8074 	ld	(hl), #0x01
                           8075 ;demo.c:1285: PLY_Init();
   2B75 CDr00s00           8076 	call	_PLY_Init
                           8077 ;demo.c:1286: puts("done.\r\n");
   2B78 21r2Ds2F           8078 	ld	hl,#__str_17
   2B7B E5                 8079 	push	hl
   2B7C CDr00s00           8080 	call	_puts
   2B7F F1                 8081 	pop	af
                           8082 ;demo.c:1288: puts("detecting vdp type...\r\n\r\n");
   2B80 21r35s2F           8083 	ld	hl,#__str_18
   2B83 E5                 8084 	push	hl
   2B84 CDr00s00           8085 	call	_puts
   2B87 F1                 8086 	pop	af
                           8087 ;demo.c:1289: if(isvdp2())
   2B88 CDr00s00           8088 	call	_isvdp2
   2B8B AF                 8089 	xor	a,a
   2B8C B5                 8090 	or	a,l
   2B8D 28 0A              8091 	jr	Z,00102$
                           8092 ;demo.c:1291: puts("vdp2 found! setting 50hz...\r\n\r\n");
   2B8F 21r4Fs2F           8093 	ld	hl,#__str_19
   2B92 E5                 8094 	push	hl
   2B93 CDr00s00           8095 	call	_puts
   2B96 F1                 8096 	pop	af
   2B97 18 0B              8097 	jr	00103$
   2B99                    8098 00102$:
                           8099 ;demo.c:1294: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   2B99 21r6Fs2F           8100 	ld	hl,#__str_20
   2B9C E5                 8101 	push	hl
   2B9D CDr00s00           8102 	call	_puts
   2BA0 F1                 8103 	pop	af
                           8104 ;demo.c:1295: do_quit();
   2BA1 CDr16s2A           8105 	call	_do_quit
   2BA4                    8106 00103$:
                           8107 ;demo.c:1298: pal_load("TWISTER PL5",32,1);
   2BA4 21 01 00           8108 	ld	hl,#0x0001
   2BA7 E5                 8109 	push	hl
   2BA8 3E 20              8110 	ld	a,#0x20
   2BAA F5                 8111 	push	af
   2BAB 33                 8112 	inc	sp
   2BAC 21rB6s2F           8113 	ld	hl,#__str_21
   2BAF E5                 8114 	push	hl
   2BB0 CDrA3s07           8115 	call	_pal_load
   2BB3 F1                 8116 	pop	af
   2BB4 F1                 8117 	pop	af
   2BB5 33                 8118 	inc	sp
                           8119 ;demo.c:1299: memcpy(twister_palette, cur_palette, 32);
   2BB6 21 20 00           8120 	ld	hl,#0x0020
   2BB9 E5                 8121 	push	hl
   2BBA 21rC8s40           8122 	ld	hl,#_cur_palette
   2BBD E5                 8123 	push	hl
   2BBE 21r08s41           8124 	ld	hl,#_twister_palette
   2BC1 E5                 8125 	push	hl
   2BC2 CDr00s00           8126 	call	_memcpy
   2BC5 F1                 8127 	pop	af
   2BC6 F1                 8128 	pop	af
   2BC7 F1                 8129 	pop	af
                           8130 ;demo.c:1300: pal_load("LF      PL5",32,1);
   2BC8 21 01 00           8131 	ld	hl,#0x0001
   2BCB E5                 8132 	push	hl
   2BCC 3E 20              8133 	ld	a,#0x20
   2BCE F5                 8134 	push	af
   2BCF 33                 8135 	inc	sp
   2BD0 21rC2s2F           8136 	ld	hl,#__str_22
   2BD3 E5                 8137 	push	hl
   2BD4 CDrA3s07           8138 	call	_pal_load
   2BD7 F1                 8139 	pop	af
   2BD8 F1                 8140 	pop	af
   2BD9 33                 8141 	inc	sp
                           8142 ;demo.c:1301: memcpy(tf_palette, cur_palette, 32);
   2BDA 21 20 00           8143 	ld	hl,#0x0020
   2BDD E5                 8144 	push	hl
   2BDE 21rC8s40           8145 	ld	hl,#_cur_palette
   2BE1 E5                 8146 	push	hl
   2BE2 21r28s41           8147 	ld	hl,#_tf_palette
   2BE5 E5                 8148 	push	hl
   2BE6 CDr00s00           8149 	call	_memcpy
   2BE9 F1                 8150 	pop	af
   2BEA F1                 8151 	pop	af
   2BEB F1                 8152 	pop	af
                           8153 ;demo.c:1302: pal_load("BOXES   PL5",32,1);
   2BEC 21 01 00           8154 	ld	hl,#0x0001
   2BEF E5                 8155 	push	hl
   2BF0 3E 20              8156 	ld	a,#0x20
   2BF2 F5                 8157 	push	af
   2BF3 33                 8158 	inc	sp
   2BF4 21rCEs2F           8159 	ld	hl,#__str_23
   2BF7 E5                 8160 	push	hl
   2BF8 CDrA3s07           8161 	call	_pal_load
   2BFB F1                 8162 	pop	af
   2BFC F1                 8163 	pop	af
   2BFD 33                 8164 	inc	sp
                           8165 ;demo.c:1303: memcpy(boxes_palette, cur_palette, 32);
   2BFE 21 20 00           8166 	ld	hl,#0x0020
   2C01 E5                 8167 	push	hl
   2C02 21rC8s40           8168 	ld	hl,#_cur_palette
   2C05 E5                 8169 	push	hl
   2C06 21r48s41           8170 	ld	hl,#_boxes_palette
   2C09 E5                 8171 	push	hl
   2C0A CDr00s00           8172 	call	_memcpy
   2C0D F1                 8173 	pop	af
   2C0E F1                 8174 	pop	af
   2C0F F1                 8175 	pop	af
                           8176 ;demo.c:1304: pal_load("BULBS   PL5",32,1);
   2C10 21 01 00           8177 	ld	hl,#0x0001
   2C13 E5                 8178 	push	hl
   2C14 3E 20              8179 	ld	a,#0x20
   2C16 F5                 8180 	push	af
   2C17 33                 8181 	inc	sp
   2C18 21rDAs2F           8182 	ld	hl,#__str_24
   2C1B E5                 8183 	push	hl
   2C1C CDrA3s07           8184 	call	_pal_load
   2C1F F1                 8185 	pop	af
   2C20 F1                 8186 	pop	af
   2C21 33                 8187 	inc	sp
                           8188 ;demo.c:1306: scratch_clear();
   2C22 CDr90s07           8189 	call	_scratch_clear
                           8190 ;demo.c:1307: vdp_load_palette(scratch);
   2C25 21r48s40           8191 	ld	hl,#_scratch
   2C28 E5                 8192 	push	hl
   2C29 CDr00s00           8193 	call	_vdp_load_palette
   2C2C F1                 8194 	pop	af
                           8195 ;demo.c:1309: vdp_set_screen5();
   2C2D CDr00s00           8196 	call	_vdp_set_screen5
                           8197 ;demo.c:1311: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   2C30 21 00 00           8198 	ld	hl,#0x0000
   2C33 E5                 8199 	push	hl
   2C34 2E 01              8200 	ld	l, #0x01
   2C36 E5                 8201 	push	hl
   2C37 2E 00              8202 	ld	l, #0x00
   2C39 E5                 8203 	push	hl
   2C3A 21 7F 09           8204 	ld	hl,#0x097F
   2C3D E5                 8205 	push	hl
   2C3E 21rE6s2F           8206 	ld	hl,#__str_25
   2C41 E5                 8207 	push	hl
   2C42 CDr99s09           8208 	call	_pck_load
   2C45 FD 21 0A 00        8209 	ld	iy,#0x000A
   2C49 FD 39              8210 	add	iy,sp
   2C4B FD F9              8211 	ld	sp,iy
                           8212 ;demo.c:1313: cmd.size_x = 256;
   2C4D 21r74s41           8213 	ld	hl, #_cmd + 8
   2C50 36 00              8214 	ld	(hl),#0x00
   2C52 23                 8215 	inc	hl
   2C53 36 01              8216 	ld	(hl),#0x01
                           8217 ;demo.c:1314: cmd.size_y = 212;
   2C55 21r76s41           8218 	ld	hl, #_cmd + 10
   2C58 36 D4              8219 	ld	(hl),#0xD4
   2C5A 23                 8220 	inc	hl
   2C5B 36 00              8221 	ld	(hl),#0x00
                           8222 ;demo.c:1315: cmd.data = 0;
                           8223 ;demo.c:1316: cmd.argument = 0x00;
   2C5D 3E 00              8224 	ld	a,#0x00
   2C5F 32r78s41           8225 	ld	(#_cmd + 12),a
   2C62 32r79s41           8226 	ld	(#_cmd + 13),a
                           8227 ;demo.c:1317: cmd.command = 0xd0; 
   2C65 01r7As41           8228 	ld	bc,#_cmd + 14
   2C68 3E D0              8229 	ld	a,#0xD0
   2C6A 02                 8230 	ld	(bc),a
                           8231 ;demo.c:1318: cmd.source_x = 0;
   2C6B 21r6Cs41           8232 	ld	hl,#_cmd
   2C6E 36 00              8233 	ld	(hl),#0x00
   2C70 23                 8234 	inc	hl
   2C71 36 00              8235 	ld	(hl),#0x00
                           8236 ;demo.c:1319: cmd.source_y = 0;
   2C73 21r6Es41           8237 	ld	hl, #_cmd + 2
   2C76 36 00              8238 	ld	(hl),#0x00
   2C78 23                 8239 	inc	hl
   2C79 36 00              8240 	ld	(hl),#0x00
                           8241 ;demo.c:1320: cmd.dest_x = 0;
   2C7B 21r70s41           8242 	ld	hl, #_cmd + 4
   2C7E 36 00              8243 	ld	(hl),#0x00
   2C80 23                 8244 	inc	hl
   2C81 36 00              8245 	ld	(hl),#0x00
                           8246 ;demo.c:1321: cmd.dest_y = 256;
   2C83 21r72s41           8247 	ld	hl, #_cmd + 6
   2C86 36 00              8248 	ld	(hl),#0x00
   2C88 23                 8249 	inc	hl
   2C89 36 01              8250 	ld	(hl),#0x01
                           8251 ;demo.c:1322: vdp_copier(&cmd);
   2C8B 21r6Cs41           8252 	ld	hl,#_cmd
   2C8E E5                 8253 	push	hl
   2C8F CDr00s00           8254 	call	_vdp_copier
   2C92 F1                 8255 	pop	af
                           8256 ;demo.c:1324: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   2C93 21 00 00           8257 	ld	hl,#0x0000
   2C96 E5                 8258 	push	hl
   2C97 2E 01              8259 	ld	l, #0x01
   2C99 E5                 8260 	push	hl
   2C9A 2E 00              8261 	ld	l, #0x00
   2C9C E5                 8262 	push	hl
   2C9D 21 C0 0F           8263 	ld	hl,#0x0FC0
   2CA0 E5                 8264 	push	hl
   2CA1 21rF2s2F           8265 	ld	hl,#__str_26
   2CA4 E5                 8266 	push	hl
   2CA5 CDr99s09           8267 	call	_pck_load
   2CA8 FD 21 0A 00        8268 	ld	iy,#0x000A
   2CAC FD 39              8269 	add	iy,sp
   2CAE FD F9              8270 	ld	sp,iy
                           8271 ;demo.c:1326: cmd.size_x = 256;
   2CB0 21r74s41           8272 	ld	hl, #_cmd + 8
   2CB3 36 00              8273 	ld	(hl),#0x00
   2CB5 23                 8274 	inc	hl
   2CB6 36 01              8275 	ld	(hl),#0x01
                           8276 ;demo.c:1327: cmd.size_y = 212;
   2CB8 21r76s41           8277 	ld	hl, #_cmd + 10
   2CBB 36 D4              8278 	ld	(hl),#0xD4
   2CBD 23                 8279 	inc	hl
   2CBE 36 00              8280 	ld	(hl),#0x00
                           8281 ;demo.c:1328: cmd.data = 0;
                           8282 ;demo.c:1329: cmd.argument = 0x00;
   2CC0 3E 00              8283 	ld	a,#0x00
   2CC2 32r78s41           8284 	ld	(#_cmd + 12),a
   2CC5 32r79s41           8285 	ld	(#_cmd + 13),a
                           8286 ;demo.c:1330: cmd.command = 0xd0; 
   2CC8 01r7As41           8287 	ld	bc,#_cmd + 14
   2CCB 3E D0              8288 	ld	a,#0xD0
   2CCD 02                 8289 	ld	(bc),a
                           8290 ;demo.c:1331: cmd.source_x = 0;
   2CCE 21r6Cs41           8291 	ld	hl,#_cmd
   2CD1 36 00              8292 	ld	(hl),#0x00
   2CD3 23                 8293 	inc	hl
   2CD4 36 00              8294 	ld	(hl),#0x00
                           8295 ;demo.c:1332: cmd.source_y = 0;
   2CD6 21r6Es41           8296 	ld	hl, #_cmd + 2
   2CD9 36 00              8297 	ld	(hl),#0x00
   2CDB 23                 8298 	inc	hl
   2CDC 36 00              8299 	ld	(hl),#0x00
                           8300 ;demo.c:1333: cmd.dest_x = 0;
   2CDE 21r70s41           8301 	ld	hl, #_cmd + 4
   2CE1 36 00              8302 	ld	(hl),#0x00
   2CE3 23                 8303 	inc	hl
   2CE4 36 00              8304 	ld	(hl),#0x00
                           8305 ;demo.c:1334: cmd.dest_y = 512;
   2CE6 21r72s41           8306 	ld	hl, #_cmd + 6
   2CE9 36 00              8307 	ld	(hl),#0x00
   2CEB 23                 8308 	inc	hl
   2CEC 36 02              8309 	ld	(hl),#0x02
                           8310 ;demo.c:1335: vdp_copier(&cmd);
   2CEE 21r6Cs41           8311 	ld	hl,#_cmd
   2CF1 E5                 8312 	push	hl
   2CF2 CDr00s00           8313 	call	_vdp_copier
   2CF5 F1                 8314 	pop	af
                           8315 ;demo.c:1338: pck_load("BOXES   PCK",2731,0x0000,VRAM_0,0);
   2CF6 21 00 00           8316 	ld	hl,#0x0000
   2CF9 E5                 8317 	push	hl
   2CFA 2E 01              8318 	ld	l, #0x01
   2CFC E5                 8319 	push	hl
   2CFD 2E 00              8320 	ld	l, #0x00
   2CFF E5                 8321 	push	hl
   2D00 21 AB 0A           8322 	ld	hl,#0x0AAB
   2D03 E5                 8323 	push	hl
   2D04 21rFEs2F           8324 	ld	hl,#__str_27
   2D07 E5                 8325 	push	hl
   2D08 CDr99s09           8326 	call	_pck_load
   2D0B FD 21 0A 00        8327 	ld	iy,#0x000A
   2D0F FD 39              8328 	add	iy,sp
   2D11 FD F9              8329 	ld	sp,iy
                           8330 ;demo.c:1339: cmd.size_x = 256;
   2D13 21r74s41           8331 	ld	hl, #_cmd + 8
   2D16 36 00              8332 	ld	(hl),#0x00
   2D18 23                 8333 	inc	hl
   2D19 36 01              8334 	ld	(hl),#0x01
                           8335 ;demo.c:1340: cmd.size_y = 212;
   2D1B 21r76s41           8336 	ld	hl, #_cmd + 10
   2D1E 36 D4              8337 	ld	(hl),#0xD4
   2D20 23                 8338 	inc	hl
   2D21 36 00              8339 	ld	(hl),#0x00
                           8340 ;demo.c:1341: cmd.data = 0;
                           8341 ;demo.c:1342: cmd.argument = 0x00;
   2D23 3E 00              8342 	ld	a,#0x00
   2D25 32r78s41           8343 	ld	(#_cmd + 12),a
   2D28 32r79s41           8344 	ld	(#_cmd + 13),a
                           8345 ;demo.c:1343: cmd.command = 0xd0; 
   2D2B 01r7As41           8346 	ld	bc,#_cmd + 14
   2D2E 3E D0              8347 	ld	a,#0xD0
   2D30 02                 8348 	ld	(bc),a
                           8349 ;demo.c:1344: cmd.source_x = 0;
   2D31 21r6Cs41           8350 	ld	hl,#_cmd
   2D34 36 00              8351 	ld	(hl),#0x00
   2D36 23                 8352 	inc	hl
   2D37 36 00              8353 	ld	(hl),#0x00
                           8354 ;demo.c:1345: cmd.source_y = 0;
   2D39 21r6Es41           8355 	ld	hl, #_cmd + 2
   2D3C 36 00              8356 	ld	(hl),#0x00
   2D3E 23                 8357 	inc	hl
   2D3F 36 00              8358 	ld	(hl),#0x00
                           8359 ;demo.c:1346: cmd.dest_x = 0;
   2D41 21r70s41           8360 	ld	hl, #_cmd + 4
   2D44 36 00              8361 	ld	(hl),#0x00
   2D46 23                 8362 	inc	hl
   2D47 36 00              8363 	ld	(hl),#0x00
                           8364 ;demo.c:1347: cmd.dest_y = 768;
   2D49 21r72s41           8365 	ld	hl, #_cmd + 6
   2D4C 36 00              8366 	ld	(hl),#0x00
   2D4E 23                 8367 	inc	hl
   2D4F 36 03              8368 	ld	(hl),#0x03
                           8369 ;demo.c:1348: vdp_copier(&cmd);
   2D51 21r6Cs41           8370 	ld	hl,#_cmd
   2D54 E5                 8371 	push	hl
   2D55 CDr00s00           8372 	call	_vdp_copier
   2D58 F1                 8373 	pop	af
                           8374 ;demo.c:1350: scratch_clear();
   2D59 CDr90s07           8375 	call	_scratch_clear
                           8376 ;demo.c:1351: vdp_load_palette(scratch);
   2D5C 21r48s40           8377 	ld	hl,#_scratch
   2D5F E5                 8378 	push	hl
   2D60 CDr00s00           8379 	call	_vdp_load_palette
   2D63 F1                 8380 	pop	af
                           8381 ;demo.c:1353: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   2D64 21 00 00           8382 	ld	hl,#0x0000
   2D67 E5                 8383 	push	hl
   2D68 2E 01              8384 	ld	l, #0x01
   2D6A E5                 8385 	push	hl
   2D6B 2E 00              8386 	ld	l, #0x00
   2D6D E5                 8387 	push	hl
   2D6E 21 6A 08           8388 	ld	hl,#0x086A
   2D71 E5                 8389 	push	hl
   2D72 21r0As30           8390 	ld	hl,#__str_28
   2D75 E5                 8391 	push	hl
   2D76 CDr99s09           8392 	call	_pck_load
   2D79 FD 21 0A 00        8393 	ld	iy,#0x000A
   2D7D FD 39              8394 	add	iy,sp
   2D7F FD F9              8395 	ld	sp,iy
                           8396 ;demo.c:1355: cmd.size_x = 108;
   2D81 21r74s41           8397 	ld	hl, #_cmd + 8
   2D84 36 6C              8398 	ld	(hl),#0x6C
   2D86 23                 8399 	inc	hl
   2D87 36 00              8400 	ld	(hl),#0x00
                           8401 ;demo.c:1356: cmd.size_y = 116;
   2D89 21r76s41           8402 	ld	hl, #_cmd + 10
   2D8C 36 74              8403 	ld	(hl),#0x74
   2D8E 23                 8404 	inc	hl
   2D8F 36 00              8405 	ld	(hl),#0x00
                           8406 ;demo.c:1357: cmd.data = 0;
                           8407 ;demo.c:1358: cmd.argument = 0x00;
   2D91 3E 00              8408 	ld	a,#0x00
   2D93 32r78s41           8409 	ld	(#_cmd + 12),a
   2D96 32r79s41           8410 	ld	(#_cmd + 13),a
                           8411 ;demo.c:1359: cmd.command = 0xd0; 
   2D99 01r7As41           8412 	ld	bc,#_cmd + 14
   2D9C 3E D0              8413 	ld	a,#0xD0
   2D9E 02                 8414 	ld	(bc),a
                           8415 ;demo.c:1360: cmd.source_x = 75;
   2D9F 21r6Cs41           8416 	ld	hl,#_cmd
   2DA2 36 4B              8417 	ld	(hl),#0x4B
   2DA4 23                 8418 	inc	hl
   2DA5 36 00              8419 	ld	(hl),#0x00
                           8420 ;demo.c:1361: cmd.source_y = 50;
   2DA7 21r6Es41           8421 	ld	hl, #_cmd + 2
   2DAA 36 32              8422 	ld	(hl),#0x32
   2DAC 23                 8423 	inc	hl
   2DAD 36 00              8424 	ld	(hl),#0x00
                           8425 ;demo.c:1362: cmd.dest_x = 75;
   2DAF 21r70s41           8426 	ld	hl, #_cmd + 4
   2DB2 36 4B              8427 	ld	(hl),#0x4B
   2DB4 23                 8428 	inc	hl
   2DB5 36 00              8429 	ld	(hl),#0x00
                           8430 ;demo.c:1363: cmd.dest_y = 256;
   2DB7 21r72s41           8431 	ld	hl, #_cmd + 6
   2DBA 36 00              8432 	ld	(hl),#0x00
   2DBC 23                 8433 	inc	hl
   2DBD 36 01              8434 	ld	(hl),#0x01
                           8435 ;demo.c:1364: vdp_copier(&cmd);
   2DBF 21r6Cs41           8436 	ld	hl,#_cmd
   2DC2 E5                 8437 	push	hl
   2DC3 CDr00s00           8438 	call	_vdp_copier
   2DC6 F1                 8439 	pop	af
                           8440 ;demo.c:1366: cmd.size_x = 108;
   2DC7 21r74s41           8441 	ld	hl, #_cmd + 8
   2DCA 36 6C              8442 	ld	(hl),#0x6C
   2DCC 23                 8443 	inc	hl
   2DCD 36 00              8444 	ld	(hl),#0x00
                           8445 ;demo.c:1367: cmd.size_y = 60;
   2DCF 21r76s41           8446 	ld	hl, #_cmd + 10
   2DD2 36 3C              8447 	ld	(hl),#0x3C
   2DD4 23                 8448 	inc	hl
   2DD5 36 00              8449 	ld	(hl),#0x00
                           8450 ;demo.c:1368: cmd.data = 0;
                           8451 ;demo.c:1369: cmd.argument = 0x00;
   2DD7 3E 00              8452 	ld	a,#0x00
   2DD9 32r78s41           8453 	ld	(#_cmd + 12),a
   2DDC 32r79s41           8454 	ld	(#_cmd + 13),a
                           8455 ;demo.c:1370: cmd.command = 0xd0; 
   2DDF 01r7As41           8456 	ld	bc,#_cmd + 14
   2DE2 3E D0              8457 	ld	a,#0xD0
   2DE4 02                 8458 	ld	(bc),a
                           8459 ;demo.c:1371: cmd.source_x = 75;
   2DE5 21r6Cs41           8460 	ld	hl,#_cmd
   2DE8 36 4B              8461 	ld	(hl),#0x4B
   2DEA 23                 8462 	inc	hl
   2DEB 36 00              8463 	ld	(hl),#0x00
                           8464 ;demo.c:1372: cmd.source_y = 256+110;
   2DED 21r6Es41           8465 	ld	hl, #_cmd + 2
   2DF0 36 6E              8466 	ld	(hl),#0x6E
   2DF2 23                 8467 	inc	hl
   2DF3 36 01              8468 	ld	(hl),#0x01
                           8469 ;demo.c:1373: cmd.dest_x = 75;
   2DF5 21r70s41           8470 	ld	hl, #_cmd + 4
   2DF8 36 4B              8471 	ld	(hl),#0x4B
   2DFA 23                 8472 	inc	hl
   2DFB 36 00              8473 	ld	(hl),#0x00
                           8474 ;demo.c:1374: cmd.dest_y = 40;
   2DFD 21r72s41           8475 	ld	hl, #_cmd + 6
   2E00 36 28              8476 	ld	(hl),#0x28
   2E02 23                 8477 	inc	hl
   2E03 36 00              8478 	ld	(hl),#0x00
                           8479 ;demo.c:1375: vdp_copier(&cmd);
   2E05 21r6Cs41           8480 	ld	hl,#_cmd
   2E08 E5                 8481 	push	hl
   2E09 CDr00s00           8482 	call	_vdp_copier
   2E0C F1                 8483 	pop	af
                           8484 ;demo.c:1376: cmd.dest_x = 75;
   2E0D 21r70s41           8485 	ld	hl, #_cmd + 4
   2E10 36 4B              8486 	ld	(hl),#0x4B
   2E12 23                 8487 	inc	hl
   2E13 36 00              8488 	ld	(hl),#0x00
                           8489 ;demo.c:1377: cmd.dest_y = 100;
   2E15 21r72s41           8490 	ld	hl, #_cmd + 6
   2E18 36 64              8491 	ld	(hl),#0x64
   2E1A 23                 8492 	inc	hl
   2E1B 36 00              8493 	ld	(hl),#0x00
                           8494 ;demo.c:1378: vdp_copier(&cmd);
   2E1D 21r6Cs41           8495 	ld	hl,#_cmd
   2E20 E5                 8496 	push	hl
   2E21 CDr00s00           8497 	call	_vdp_copier
   2E24 F1                 8498 	pop	af
                           8499 ;demo.c:1380: pal_load("DSSLOGO PL5",32,0);
   2E25 21 00 00           8500 	ld	hl,#0x0000
   2E28 E5                 8501 	push	hl
   2E29 3E 20              8502 	ld	a,#0x20
   2E2B F5                 8503 	push	af
   2E2C 33                 8504 	inc	sp
   2E2D 21r16s30           8505 	ld	hl,#__str_29
   2E30 E5                 8506 	push	hl
   2E31 CDrA3s07           8507 	call	_pal_load
   2E34 F1                 8508 	pop	af
   2E35 F1                 8509 	pop	af
   2E36 33                 8510 	inc	sp
                           8511 ;demo.c:1382: scratch_clear();
   2E37 CDr90s07           8512 	call	_scratch_clear
                           8513 ;demo.c:1384: vdp_register(9,130); // 50hz,212
   2E3A 21 09 82           8514 	ld	hl,#0x8209
   2E3D E5                 8515 	push	hl
   2E3E CDr00s00           8516 	call	_vdp_register
   2E41 F1                 8517 	pop	af
                           8518 ;demo.c:1386: install_isr(my_isr);
   2E42 21rECs05           8519 	ld	hl,#_my_isr
   2E45 E5                 8520 	push	hl
   2E46 CDr00s00           8521 	call	_install_isr
   2E49 F1                 8522 	pop	af
                           8523 ;demo.c:1388: while (!quit) {
   2E4A                    8524 00111$:
   2E4A AF                 8525 	xor	a,a
   2E4B DD B6 FF           8526 	or	a,-1 (ix)
   2E4E C2r09s2F           8527 	jp	NZ,00113$
                           8528 ;demo.c:1390: if (vbicount >= scenetimings[timeindex+1]) {
   2E51 21r29s42           8529 	ld	hl,#_timeindex + 0
   2E54 4E                 8530 	ld	c,(hl)
   2E55 0C                 8531 	inc	c
   2E56 CB 21              8532 	sla	c
   2E58 3Er39              8533 	ld	a,#<_scenetimings
   2E5A 81                 8534 	add	a,c
   2E5B 6F                 8535 	ld	l,a
   2E5C 3Es42              8536 	ld	a,#>_scenetimings
   2E5E CE 00              8537 	adc	a,#0x00
   2E60 67                 8538 	ld	h,a
   2E61 4E                 8539 	ld	c,(hl)
   2E62 23                 8540 	inc	hl
   2E63 46                 8541 	ld	b,(hl)
   2E64 3Ar68s41           8542 	ld	a,(#_vbicount+0)
   2E67 91                 8543 	sub	a,c
   2E68 3Ar69s41           8544 	ld	a,(#_vbicount+1)
   2E6B 98                 8545 	sbc	a,b
   2E6C FAr95s2E           8546 	jp	M,00105$
                           8547 ;demo.c:1391: sceneindex++;
   2E6F FD 21r27s42        8548 	ld	iy,#_sceneindex
   2E73 FD 34 00           8549 	inc	0 (iy)
   2E76 20 07              8550 	jr	NZ,00153$
   2E78 FD 21r27s42        8551 	ld	iy,#_sceneindex
   2E7C FD 34 01           8552 	inc	1 (iy)
   2E7F                    8553 00153$:
                           8554 ;demo.c:1392: timeindex+=2;
   2E7F 21r29s42           8555 	ld	hl,#_timeindex
   2E82 7E                 8556 	ld	a,(hl)
   2E83 C6 02              8557 	add	a,#0x02
   2E85 23                 8558 	inc	hl
   2E86 2B                 8559 	dec	hl
   2E87 C5                 8560 	push	bc
   2E88 4F                 8561 	ld	c, a
   2E89 23                 8562 	inc	hl
   2E8A 7E                 8563 	ld	a, (hl)
   2E8B 47                 8564 	ld	b, a
   2E8C 79                 8565 	ld	a, c
   2E8D 2B                 8566 	dec	hl
   2E8E 77                 8567 	ld	(hl), a
   2E8F 78                 8568 	ld	a, b
   2E90 C1                 8569 	pop	bc
   2E91 CE 00              8570 	adc	a,#0x00
   2E93 23                 8571 	inc	hl
   2E94 77                 8572 	ld	(hl),a
   2E95                    8573 00105$:
                           8574 ;demo.c:1395: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   2E95 21r29s42           8575 	ld	hl,#_timeindex + 0
   2E98 4E                 8576 	ld	c,(hl)
   2E99 21r2As42           8577 	ld	hl,#_timeindex + 1
   2E9C 46                 8578 	ld	b,(hl)
   2E9D CB 21              8579 	sla	c
   2E9F CB 10              8580 	rl	b
   2EA1 21r39s42           8581 	ld	hl,#_scenetimings
   2EA4 09                 8582 	add	hl,bc
   2EA5 4E                 8583 	ld	c,(hl)
   2EA6 23                 8584 	inc	hl
   2EA7 46                 8585 	ld	b,(hl)
   2EA8 3Ar68s41           8586 	ld	a,(#_vbicount+0)
   2EAB 91                 8587 	sub	a,c
   2EAC 3Ar69s41           8588 	ld	a,(#_vbicount+1)
   2EAF 98                 8589 	sbc	a,b
   2EB0 FArF5s2E           8590 	jp	M,00107$
   2EB3 21r29s42           8591 	ld	hl,#_timeindex + 0
   2EB6 4E                 8592 	ld	c,(hl)
   2EB7 0C                 8593 	inc	c
   2EB8 CB 21              8594 	sla	c
   2EBA 3Er39              8595 	ld	a,#<_scenetimings
   2EBC 81                 8596 	add	a,c
   2EBD 6F                 8597 	ld	l,a
   2EBE 3Es42              8598 	ld	a,#>_scenetimings
   2EC0 CE 00              8599 	adc	a,#0x00
   2EC2 67                 8600 	ld	h,a
   2EC3 4E                 8601 	ld	c,(hl)
   2EC4 23                 8602 	inc	hl
   2EC5 46                 8603 	ld	b,(hl)
   2EC6 3Ar68s41           8604 	ld	a,(#_vbicount+0)
   2EC9 91                 8605 	sub	a,c
   2ECA FD 21r68s41        8606 	ld	iy,#_vbicount
   2ECE FD 7E 01           8607 	ld	a,1 (iy)
   2ED1 98                 8608 	sbc	a,b
   2ED2 F2rF5s2E           8609 	jp	P,00107$
                           8610 ;demo.c:1396: waitVB();
   2ED5 76                 8611 		halt 
                           8612 ;demo.c:1397: scenepointers[sceneindex]();
   2ED6 21r27s42           8613 	ld	hl,#_sceneindex + 0
   2ED9 4E                 8614 	ld	c,(hl)
   2EDA FD 21r27s42        8615 	ld	iy,#_sceneindex
   2EDE FD 46 01           8616 	ld	b,1 (iy)
   2EE1 CB 21              8617 	sla	c
   2EE3 CB 10              8618 	rl	b
   2EE5 21r2Bs42           8619 	ld	hl,#_scenepointers
   2EE8 09                 8620 	add	hl,bc
   2EE9 4E                 8621 	ld	c,(hl)
   2EEA 23                 8622 	inc	hl
   2EEB 46                 8623 	ld	b,(hl)
   2EEC C5                 8624 	push	bc
   2EED 21rF4s2E           8625 	ld	hl,#00158$
   2EF0 E5                 8626 	push	hl
   2EF1 69                 8627 	ld	l,c
   2EF2 60                 8628 	ld	h,b
   2EF3 E9                 8629 	jp	(hl)
   2EF4                    8630 00158$:
   2EF4 C1                 8631 	pop	bc
   2EF5                    8632 00107$:
                           8633 ;demo.c:1399: if(space())
   2EF5 21 08 01           8634 	ld	hl,#0x0108
   2EF8 E5                 8635 	push	hl
   2EF9 CDr00s00           8636 	call	_ispressed
   2EFC F1                 8637 	pop	af
   2EFD AF                 8638 	xor	a,a
   2EFE B5                 8639 	or	a,l
   2EFF CAr4As2E           8640 	jp	Z,00111$
                           8641 ;demo.c:1400: quit=1;
   2F02 DD 36 FF 01        8642 	ld	-1 (ix),#0x01
   2F06 C3r4As2E           8643 	jp	00111$
   2F09                    8644 00113$:
                           8645 ;demo.c:1403: do_quit();
   2F09 CDr16s2A           8646 	call	_do_quit
   2F0C DD F9              8647 	ld	sp,ix
   2F0E DD E1              8648 	pop	ix
   2F10 C9                 8649 	ret
   2F11                    8650 _main_end::
   2F11                    8651 __str_15:
   2F11 64 65 6D 6F 20 69  8652 	.ascii "demo init"
        6E 69 74
   2F1A 0D                 8653 	.db 0x0D
   2F1B 0A                 8654 	.db 0x0A
   2F1C 0D                 8655 	.db 0x0D
   2F1D 0A                 8656 	.db 0x0A
   2F1E 00                 8657 	.db 0x00
   2F1F                    8658 __str_16:
   2F1F 6D 75 73 69 63 20  8659 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   2F2C 00                 8660 	.db 0x00
   2F2D                    8661 __str_17:
   2F2D 64 6F 6E 65 2E     8662 	.ascii "done."
   2F32 0D                 8663 	.db 0x0D
   2F33 0A                 8664 	.db 0x0A
   2F34 00                 8665 	.db 0x00
   2F35                    8666 __str_18:
   2F35 64 65 74 65 63 74  8667 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   2F4A 0D                 8668 	.db 0x0D
   2F4B 0A                 8669 	.db 0x0A
   2F4C 0D                 8670 	.db 0x0D
   2F4D 0A                 8671 	.db 0x0A
   2F4E 00                 8672 	.db 0x00
   2F4F                    8673 __str_19:
   2F4F 76 64 70 32 20 66  8674 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   2F6A 0D                 8675 	.db 0x0D
   2F6B 0A                 8676 	.db 0x0A
   2F6C 0D                 8677 	.db 0x0D
   2F6D 0A                 8678 	.db 0x0A
   2F6E 00                 8679 	.db 0x00
   2F6F                    8680 __str_20:
   2F6F 20 76 64 70 31 20  8681 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   2F7B 0D                 8682 	.db 0x0D
   2F7C 0A                 8683 	.db 0x0A
   2F7D 53 6F 72 72 79 2C  8684 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   2FAB 20 56 52 41 4D 2E  8685 	.ascii " VRAM."
   2FB1 0D                 8686 	.db 0x0D
   2FB2 0A                 8687 	.db 0x0A
   2FB3 0D                 8688 	.db 0x0D
   2FB4 0A                 8689 	.db 0x0A
   2FB5 00                 8690 	.db 0x00
   2FB6                    8691 __str_21:
   2FB6 54 57 49 53 54 45  8692 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   2FC1 00                 8693 	.db 0x00
   2FC2                    8694 __str_22:
   2FC2 4C 46 20 20 20 20  8695 	.ascii "LF      PL5"
        20 20 50 4C 35
   2FCD 00                 8696 	.db 0x00
   2FCE                    8697 __str_23:
   2FCE 42 4F 58 45 53 20  8698 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   2FD9 00                 8699 	.db 0x00
   2FDA                    8700 __str_24:
   2FDA 42 55 4C 42 53 20  8701 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   2FE5 00                 8702 	.db 0x00
   2FE6                    8703 __str_25:
   2FE6 42 55 4C 42 53 20  8704 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   2FF1 00                 8705 	.db 0x00
   2FF2                    8706 __str_26:
   2FF2 54 57 49 53 54 45  8707 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   2FFD 00                 8708 	.db 0x00
   2FFE                    8709 __str_27:
   2FFE 42 4F 58 45 53 20  8710 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   3009 00                 8711 	.db 0x00
   300A                    8712 __str_28:
   300A 44 53 53 4C 4F 47  8713 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   3015 00                 8714 	.db 0x00
   3016                    8715 __str_29:
   3016 44 53 53 4C 4F 47  8716 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   3021 00                 8717 	.db 0x00
                           8718 	.area _CODE
                           8719 	.area _CABS
