                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Wed Feb 28 00:08:59 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _tritiles
                             15 	.globl _drawtilescreen
                             16 	.globl _drawtritile
                             17 	.globl _boxes
                             18 	.globl _drawbox
                             19 	.globl _animplay
                             20 	.globl _bulbs
                             21 	.globl _twister
                             22 	.globl _font
                             23 	.globl _drawsine
                             24 	.globl _drawstr
                             25 	.globl _do_letter_tall
                             26 	.globl _do_letter
                             27 	.globl _raster_effu
                             28 	.globl _do_blocks
                             29 	.globl _do_ymmm
                             30 	.globl _fadein
                             31 	.globl _pck_load
                             32 	.globl _raw_load
                             33 	.globl _pause
                             34 	.globl _pal_load
                             35 	.globl _scratch_clear
                             36 	.globl _ge5_load
                             37 	.globl _color_isr
                             38 	.globl _my_isr
                             39 	.globl _isNthBitSet
                             40 	.globl _scenetimings
                             41 	.globl _scenepointers
                             42 	.globl _timeindex
                             43 	.globl _sceneindex
                             44 	.globl _triframes
                             45 	.globl _tripaltick
                             46 	.globl _tripal
                             47 	.globl _tri_inited
                             48 	.globl _pbt
                             49 	.globl _pbx
                             50 	.globl _bonc
                             51 	.globl _bo
                             52 	.globl _byy
                             53 	.globl _bxx
                             54 	.globl _bt
                             55 	.globl _by
                             56 	.globl _bx
                             57 	.globl _prevby
                             58 	.globl _prevbx
                             59 	.globl _prevy
                             60 	.globl _prevx
                             61 	.globl _dbly
                             62 	.globl _buffer
                             63 	.globl _boxes_init
                             64 	.globl _anim_init
                             65 	.globl _enderdir
                             66 	.globl _ender
                             67 	.globl _ff2
                             68 	.globl _ff1
                             69 	.globl _bulbflipper
                             70 	.globl _twinited
                             71 	.globl _ff
                             72 	.globl _ly
                             73 	.globl _lx
                             74 	.globl _linenum
                             75 	.globl _flof
                             76 	.globl _btab
                             77 	.globl _bty
                             78 	.globl _btx
                             79 	.globl _bsy
                             80 	.globl _bsx
                             81 	.globl _block_init
                             82 	.globl _cc
                             83 	.globl _yofff
                             84 	.globl _cmd
                             85 	.globl _tick
                             86 	.globl _vbicount
                             87 	.globl _boxes_palette
                             88 	.globl _tf_palette
                             89 	.globl _twister_palette
                             90 	.globl _block_palette
                             91 	.globl _cur_palette
                             92 	.globl _scratch
                             93 	.globl _packbuffer
                             94 	.globl _tri_lookup_y
                             95 	.globl _tri_lookup_x
                             96 	.globl _sintab
                             97 	.globl _font_w
                             98 	.globl _font_y
                             99 	.globl _font_x
                            100 	.globl _tri_side2
                            101 	.globl _tri_side1
                            102 	.globl _tri_dia
                            103 	.globl _tri_up
                            104 	.globl _tri_center
                            105 	.globl _sintabx
                            106 ;--------------------------------------------------------
                            107 ; special function registers
                            108 ;--------------------------------------------------------
                            109 ;--------------------------------------------------------
                            110 ;  ram data
                            111 ;--------------------------------------------------------
                            112 	.area _DATA
   0000                     113 _sintab::
   0000                     114 	.ds 256
   0100                     115 _tri_lookup_x::
   0100                     116 	.ds 32
   0120                     117 _tri_lookup_y::
   0120                     118 	.ds 64
   0160                     119 _packbuffer::
   0160                     120 	.ds 11000
   2C58                     121 _scratch::
   2C58                     122 	.ds 128
   2CD8                     123 _cur_palette::
   2CD8                     124 	.ds 32
   2CF8                     125 _block_palette::
   2CF8                     126 	.ds 32
   2D18                     127 _twister_palette::
   2D18                     128 	.ds 32
   2D38                     129 _tf_palette::
   2D38                     130 	.ds 32
   2D58                     131 _boxes_palette::
   2D58                     132 	.ds 32
   2D78                     133 _vbicount::
   2D78                     134 	.ds 2
   2D7A                     135 _tick::
   2D7A                     136 	.ds 2
   2D7C                     137 _cmd::
   2D7C                     138 	.ds 15
   2D8B                     139 _isNthBitSet_mask_1_1:
   2D8B                     140 	.ds 8
   2D93                     141 _yofff::
   2D93                     142 	.ds 1
   2D94                     143 _cc::
   2D94                     144 	.ds 1
   2D95                     145 _flipper:
   2D95                     146 	.ds 2
   2D97                     147 _ymmmf:
   2D97                     148 	.ds 2
   2D99                     149 _block_init::
   2D99                     150 	.ds 1
   2D9A                     151 _bsx::
   2D9A                     152 	.ds 2
   2D9C                     153 _bsy::
   2D9C                     154 	.ds 2
   2D9E                     155 _btx::
   2D9E                     156 	.ds 2
   2DA0                     157 _bty::
   2DA0                     158 	.ds 2
   2DA2                     159 _btab::
   2DA2                     160 	.ds 32
   2DC2                     161 _flof::
   2DC2                     162 	.ds 2
   2DC4                     163 _linenum::
   2DC4                     164 	.ds 2
   2DC6                     165 _lx::
   2DC6                     166 	.ds 1
   2DC7                     167 _ly::
   2DC7                     168 	.ds 1
   2DC8                     169 _ff::
   2DC8                     170 	.ds 2
   2DCA                     171 _twinited::
   2DCA                     172 	.ds 2
   2DCC                     173 _bulbflipper::
   2DCC                     174 	.ds 2
   2DCE                     175 _ff1::
   2DCE                     176 	.ds 2
   2DD0                     177 _ff2::
   2DD0                     178 	.ds 2
   2DD2                     179 _ender::
   2DD2                     180 	.ds 2
   2DD4                     181 _enderdir::
   2DD4                     182 	.ds 2
   2DD6                     183 _xo:
   2DD6                     184 	.ds 2
   2DD8                     185 _yo:
   2DD8                     186 	.ds 2
   2DDA                     187 _po:
   2DDA                     188 	.ds 2
   2DDC                     189 _fffaaa:
   2DDC                     190 	.ds 2
   2DDE                     191 _anim_init::
   2DDE                     192 	.ds 2
   2DE0                     193 _boxes_init::
   2DE0                     194 	.ds 1
   2DE1                     195 _buffer::
   2DE1                     196 	.ds 2
   2DE3                     197 _dbly::
   2DE3                     198 	.ds 2
   2DE5                     199 _prevx::
   2DE5                     200 	.ds 2
   2DE7                     201 _prevy::
   2DE7                     202 	.ds 2
   2DE9                     203 _prevbx::
   2DE9                     204 	.ds 2
   2DEB                     205 _prevby::
   2DEB                     206 	.ds 2
   2DED                     207 _bx::
   2DED                     208 	.ds 2
   2DEF                     209 _by::
   2DEF                     210 	.ds 2
   2DF1                     211 _bt::
   2DF1                     212 	.ds 2
   2DF3                     213 _bxx::
   2DF3                     214 	.ds 2
   2DF5                     215 _byy::
   2DF5                     216 	.ds 2
   2DF7                     217 _bo::
   2DF7                     218 	.ds 2
   2DF9                     219 _bonc::
   2DF9                     220 	.ds 2
   2DFB                     221 _pbx::
   2DFB                     222 	.ds 2
   2DFD                     223 _pbt::
   2DFD                     224 	.ds 2
   2DFF                     225 _tri_inited::
   2DFF                     226 	.ds 1
   2E00                     227 _tripal::
   2E00                     228 	.ds 9
   2E09                     229 _tripaltick::
   2E09                     230 	.ds 1
   2E0A                     231 _triframes::
   2E0A                     232 	.ds 2
   2E0C                     233 _sceneindex::
   2E0C                     234 	.ds 2
   2E0E                     235 _timeindex::
   2E0E                     236 	.ds 2
   2E10                     237 _scenepointers::
   2E10                     238 	.ds 10
   2E1A                     239 _scenetimings::
   2E1A                     240 	.ds 20
                            241 ;--------------------------------------------------------
                            242 ; overlayable items in  ram 
                            243 ;--------------------------------------------------------
                            244 	.area _OVERLAY
                            245 ;--------------------------------------------------------
                            246 ; external initialized ram data
                            247 ;--------------------------------------------------------
                            248 ;--------------------------------------------------------
                            249 ; global & static initialisations
                            250 ;--------------------------------------------------------
                            251 	.area _HOME
                            252 	.area _GSINIT
                            253 	.area _GSFINAL
                            254 	.area _GSINIT
                            255 ;demo.c:131: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r8Bs2D            256 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            257 	call	__initrleblock
   0006 08                  258 	.db	8
   0007 01 02 04 08 10 20   259 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  260 	.db	0
                            261 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            262 	ld	hl,#_sintab
   0013 CDr00s00            263 	call	__initrleblock
   0016 3B                  264 	.db	59
   0017 00 03 06 09 0C 0F   265 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   266 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   267 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   268 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   269 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   270 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   271 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            272 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               273 	.db	#-5,#0x7E
   0054 01                  274 	.db	1
   0055 7F                  275 	.db	0x7F
   0056 FB 7E               276 	.db	#-5,#0x7E
   0058 75                  277 	.db	117
   0059 7D 7D 7C 7B 7B 7A   278 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   279 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   280 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   281 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   282 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   283 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   284 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   285 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   286 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   287 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   288 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   289 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   290 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   291 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      292 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               293 	.db	#-5,#0x82
   00D0 01                  294 	.db	1
   00D1 81                  295 	.db	0x81
   00D2 FB 82               296 	.db	#-5,#0x82
   00D4 3A                  297 	.db	58
   00D5 83 83 84 85 85 86   298 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   299 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   300 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   301 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   302 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   303 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   304 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               305 	.db	0xFA, 0xFD
   010F 00                  306 	.db	0
                            307 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            308 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            309 	call	__initrleblock
   0116 E0 00               310 	.db	#-32,#0x00
   0118 00                  311 	.db	0
                            312 ;demo.c:114: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            313 	ld	hl,#_tri_lookup_y
   011C CDr00s00            314 	call	__initrleblock
   011F C0 00               315 	.db	#-64,#0x00
   0121 00                  316 	.db	0
                            317 ;demo.c:116: uint8_t packbuffer[11000] = {0};
   0122 21r60s01            318 	ld	hl,#_packbuffer
   0125 CDr00s00            319 	call	__initrleblock
   0128 81 00               320 	.db	#-127,#0x00
   012A 81 00               321 	.db	#-127,#0x00
   012C 81 00               322 	.db	#-127,#0x00
   012E 81 00               323 	.db	#-127,#0x00
   0130 81 00               324 	.db	#-127,#0x00
   0132 81 00               325 	.db	#-127,#0x00
   0134 81 00               326 	.db	#-127,#0x00
   0136 81 00               327 	.db	#-127,#0x00
   0138 81 00               328 	.db	#-127,#0x00
   013A 81 00               329 	.db	#-127,#0x00
   013C 81 00               330 	.db	#-127,#0x00
   013E 81 00               331 	.db	#-127,#0x00
   0140 81 00               332 	.db	#-127,#0x00
   0142 81 00               333 	.db	#-127,#0x00
   0144 81 00               334 	.db	#-127,#0x00
   0146 81 00               335 	.db	#-127,#0x00
   0148 81 00               336 	.db	#-127,#0x00
   014A 81 00               337 	.db	#-127,#0x00
   014C 81 00               338 	.db	#-127,#0x00
   014E 81 00               339 	.db	#-127,#0x00
   0150 81 00               340 	.db	#-127,#0x00
   0152 81 00               341 	.db	#-127,#0x00
   0154 81 00               342 	.db	#-127,#0x00
   0156 81 00               343 	.db	#-127,#0x00
   0158 81 00               344 	.db	#-127,#0x00
   015A 81 00               345 	.db	#-127,#0x00
   015C 81 00               346 	.db	#-127,#0x00
   015E 81 00               347 	.db	#-127,#0x00
   0160 81 00               348 	.db	#-127,#0x00
   0162 81 00               349 	.db	#-127,#0x00
   0164 81 00               350 	.db	#-127,#0x00
   0166 81 00               351 	.db	#-127,#0x00
   0168 81 00               352 	.db	#-127,#0x00
   016A 81 00               353 	.db	#-127,#0x00
   016C 81 00               354 	.db	#-127,#0x00
   016E 81 00               355 	.db	#-127,#0x00
   0170 81 00               356 	.db	#-127,#0x00
   0172 81 00               357 	.db	#-127,#0x00
   0174 81 00               358 	.db	#-127,#0x00
   0176 81 00               359 	.db	#-127,#0x00
   0178 81 00               360 	.db	#-127,#0x00
   017A 81 00               361 	.db	#-127,#0x00
   017C 81 00               362 	.db	#-127,#0x00
   017E 81 00               363 	.db	#-127,#0x00
   0180 81 00               364 	.db	#-127,#0x00
   0182 81 00               365 	.db	#-127,#0x00
   0184 81 00               366 	.db	#-127,#0x00
   0186 81 00               367 	.db	#-127,#0x00
   0188 81 00               368 	.db	#-127,#0x00
   018A 81 00               369 	.db	#-127,#0x00
   018C 81 00               370 	.db	#-127,#0x00
   018E 81 00               371 	.db	#-127,#0x00
   0190 81 00               372 	.db	#-127,#0x00
   0192 81 00               373 	.db	#-127,#0x00
   0194 81 00               374 	.db	#-127,#0x00
   0196 81 00               375 	.db	#-127,#0x00
   0198 81 00               376 	.db	#-127,#0x00
   019A 81 00               377 	.db	#-127,#0x00
   019C 81 00               378 	.db	#-127,#0x00
   019E 81 00               379 	.db	#-127,#0x00
   01A0 81 00               380 	.db	#-127,#0x00
   01A2 81 00               381 	.db	#-127,#0x00
   01A4 81 00               382 	.db	#-127,#0x00
   01A6 81 00               383 	.db	#-127,#0x00
   01A8 81 00               384 	.db	#-127,#0x00
   01AA 81 00               385 	.db	#-127,#0x00
   01AC 81 00               386 	.db	#-127,#0x00
   01AE 81 00               387 	.db	#-127,#0x00
   01B0 81 00               388 	.db	#-127,#0x00
   01B2 81 00               389 	.db	#-127,#0x00
   01B4 81 00               390 	.db	#-127,#0x00
   01B6 81 00               391 	.db	#-127,#0x00
   01B8 81 00               392 	.db	#-127,#0x00
   01BA 81 00               393 	.db	#-127,#0x00
   01BC 81 00               394 	.db	#-127,#0x00
   01BE 81 00               395 	.db	#-127,#0x00
   01C0 81 00               396 	.db	#-127,#0x00
   01C2 81 00               397 	.db	#-127,#0x00
   01C4 81 00               398 	.db	#-127,#0x00
   01C6 81 00               399 	.db	#-127,#0x00
   01C8 81 00               400 	.db	#-127,#0x00
   01CA 81 00               401 	.db	#-127,#0x00
   01CC 81 00               402 	.db	#-127,#0x00
   01CE 81 00               403 	.db	#-127,#0x00
   01D0 81 00               404 	.db	#-127,#0x00
   01D2 81 00               405 	.db	#-127,#0x00
   01D4 B2 00               406 	.db	#-78,#0x00
   01D6 00                  407 	.db	0
                            408 ;demo.c:125: volatile int vbicount=0;
   01D7 FD 21r78s2D         409 	ld	iy,#_vbicount
   01DB FD 36 00 00         410 	ld	0 (iy),#0x00
   01DF FD 21r78s2D         411 	ld	iy,#_vbicount
   01E3 FD 36 01 00         412 	ld	1 (iy),#0x00
                            413 ;demo.c:126: volatile int tick=0;
   01E7 FD 21r7As2D         414 	ld	iy,#_tick
   01EB FD 36 00 00         415 	ld	0 (iy),#0x00
   01EF FD 21r7As2D         416 	ld	iy,#_tick
   01F3 FD 36 01 00         417 	ld	1 (iy),#0x00
                            418 ;demo.c:326: uint8_t yofff = 0;
   01F7 FD 21r93s2D         419 	ld	iy,#_yofff
   01FB FD 36 00 00         420 	ld	0 (iy),#0x00
                            421 ;demo.c:327: uint8_t cc = 0;
   01FF FD 21r94s2D         422 	ld	iy,#_cc
   0203 FD 36 00 00         423 	ld	0 (iy),#0x00
                            424 ;demo.c:328: static int flipper = 0;
   0207 FD 21r95s2D         425 	ld	iy,#_flipper
   020B FD 36 00 00         426 	ld	0 (iy),#0x00
   020F FD 21r95s2D         427 	ld	iy,#_flipper
   0213 FD 36 01 00         428 	ld	1 (iy),#0x00
                            429 ;demo.c:329: static int ymmmf = 0;
   0217 FD 21r97s2D         430 	ld	iy,#_ymmmf
   021B FD 36 00 00         431 	ld	0 (iy),#0x00
   021F FD 21r97s2D         432 	ld	iy,#_ymmmf
   0223 FD 36 01 00         433 	ld	1 (iy),#0x00
                            434 ;demo.c:360: char block_init = 0;
   0227 FD 21r99s2D         435 	ld	iy,#_block_init
   022B FD 36 00 00         436 	ld	0 (iy),#0x00
                            437 ;demo.c:362: int bsx = 0;
   022F FD 21r9As2D         438 	ld	iy,#_bsx
   0233 FD 36 00 00         439 	ld	0 (iy),#0x00
   0237 FD 21r9As2D         440 	ld	iy,#_bsx
   023B FD 36 01 00         441 	ld	1 (iy),#0x00
                            442 ;demo.c:363: int bsy = 0;
   023F FD 21r9Cs2D         443 	ld	iy,#_bsy
   0243 FD 36 00 00         444 	ld	0 (iy),#0x00
   0247 FD 21r9Cs2D         445 	ld	iy,#_bsy
   024B FD 36 01 00         446 	ld	1 (iy),#0x00
                            447 ;demo.c:364: int btx = 0;
   024F FD 21r9Es2D         448 	ld	iy,#_btx
   0253 FD 36 00 00         449 	ld	0 (iy),#0x00
   0257 FD 21r9Es2D         450 	ld	iy,#_btx
   025B FD 36 01 00         451 	ld	1 (iy),#0x00
                            452 ;demo.c:365: int bty = 0;
   025F FD 21rA0s2D         453 	ld	iy,#_bty
   0263 FD 36 00 00         454 	ld	0 (iy),#0x00
   0267 FD 21rA0s2D         455 	ld	iy,#_bty
   026B FD 36 01 00         456 	ld	1 (iy),#0x00
                            457 ;demo.c:367: int btab[16] = {0};
   026F 21rA2s2D            458 	ld	hl,#_btab
   0272 CDr00s00            459 	call	__initrleblock
   0275 E0 00               460 	.db	#-32,#0x00
   0277 00                  461 	.db	0
                            462 ;demo.c:369: int flof = 0;
   0278 FD 21rC2s2D         463 	ld	iy,#_flof
   027C FD 36 00 00         464 	ld	0 (iy),#0x00
   0280 FD 21rC2s2D         465 	ld	iy,#_flof
   0284 FD 36 01 00         466 	ld	1 (iy),#0x00
                            467 ;demo.c:418: int linenum = 0;
   0288 FD 21rC4s2D         468 	ld	iy,#_linenum
   028C FD 36 00 00         469 	ld	0 (iy),#0x00
   0290 FD 21rC4s2D         470 	ld	iy,#_linenum
   0294 FD 36 01 00         471 	ld	1 (iy),#0x00
                            472 ;demo.c:476: uint8_t lx = 0;
   0298 FD 21rC6s2D         473 	ld	iy,#_lx
   029C FD 36 00 00         474 	ld	0 (iy),#0x00
                            475 ;demo.c:477: uint8_t ly = 0;
   02A0 FD 21rC7s2D         476 	ld	iy,#_ly
   02A4 FD 36 00 00         477 	ld	0 (iy),#0x00
                            478 ;demo.c:540: int ff = 0;
   02A8 FD 21rC8s2D         479 	ld	iy,#_ff
   02AC FD 36 00 00         480 	ld	0 (iy),#0x00
   02B0 FD 21rC8s2D         481 	ld	iy,#_ff
   02B4 FD 36 01 00         482 	ld	1 (iy),#0x00
                            483 ;demo.c:541: int twinited = 0;
   02B8 FD 21rCAs2D         484 	ld	iy,#_twinited
   02BC FD 36 00 00         485 	ld	0 (iy),#0x00
   02C0 FD 21rCAs2D         486 	ld	iy,#_twinited
   02C4 FD 36 01 00         487 	ld	1 (iy),#0x00
                            488 ;demo.c:590: int bulbflipper = 1;
   02C8 FD 21rCCs2D         489 	ld	iy,#_bulbflipper
   02CC FD 36 00 01         490 	ld	0 (iy),#0x01
   02D0 FD 21rCCs2D         491 	ld	iy,#_bulbflipper
   02D4 FD 36 01 00         492 	ld	1 (iy),#0x00
                            493 ;demo.c:592: int ff1,ff2 = 0;
   02D8 FD 21rD0s2D         494 	ld	iy,#_ff2
   02DC FD 36 00 00         495 	ld	0 (iy),#0x00
   02E0 FD 21rD0s2D         496 	ld	iy,#_ff2
   02E4 FD 36 01 00         497 	ld	1 (iy),#0x00
                            498 ;demo.c:593: int ender = 212;
   02E8 FD 21rD2s2D         499 	ld	iy,#_ender
   02EC FD 36 00 D4         500 	ld	0 (iy),#0xD4
   02F0 FD 21rD2s2D         501 	ld	iy,#_ender
   02F4 FD 36 01 00         502 	ld	1 (iy),#0x00
                            503 ;demo.c:594: int enderdir = -1;
   02F8 FD 21rD4s2D         504 	ld	iy,#_enderdir
   02FC FD 36 00 FF         505 	ld	0 (iy),#0xFF
   0300 FD 21rD4s2D         506 	ld	iy,#_enderdir
   0304 FD 36 01 FF         507 	ld	1 (iy),#0xFF
                            508 ;demo.c:651: static int xo = 0;
   0308 FD 21rD6s2D         509 	ld	iy,#_xo
   030C FD 36 00 00         510 	ld	0 (iy),#0x00
   0310 FD 21rD6s2D         511 	ld	iy,#_xo
   0314 FD 36 01 00         512 	ld	1 (iy),#0x00
                            513 ;demo.c:652: static int yo = 0;
   0318 FD 21rD8s2D         514 	ld	iy,#_yo
   031C FD 36 00 00         515 	ld	0 (iy),#0x00
   0320 FD 21rD8s2D         516 	ld	iy,#_yo
   0324 FD 36 01 00         517 	ld	1 (iy),#0x00
                            518 ;demo.c:653: static int po = 0;
   0328 FD 21rDAs2D         519 	ld	iy,#_po
   032C FD 36 00 00         520 	ld	0 (iy),#0x00
   0330 FD 21rDAs2D         521 	ld	iy,#_po
   0334 FD 36 01 00         522 	ld	1 (iy),#0x00
                            523 ;demo.c:654: static int fffaaa = 0;
   0338 FD 21rDCs2D         524 	ld	iy,#_fffaaa
   033C FD 36 00 00         525 	ld	0 (iy),#0x00
   0340 FD 21rDCs2D         526 	ld	iy,#_fffaaa
   0344 FD 36 01 00         527 	ld	1 (iy),#0x00
                            528 ;demo.c:656: int anim_init = 0;
   0348 FD 21rDEs2D         529 	ld	iy,#_anim_init
   034C FD 36 00 00         530 	ld	0 (iy),#0x00
   0350 FD 21rDEs2D         531 	ld	iy,#_anim_init
   0354 FD 36 01 00         532 	ld	1 (iy),#0x00
                            533 ;demo.c:710: uint8_t boxes_init = 0;
   0358 FD 21rE0s2D         534 	ld	iy,#_boxes_init
   035C FD 36 00 00         535 	ld	0 (iy),#0x00
                            536 ;demo.c:711: int buffer = 1;
   0360 FD 21rE1s2D         537 	ld	iy,#_buffer
   0364 FD 36 00 01         538 	ld	0 (iy),#0x01
   0368 FD 21rE1s2D         539 	ld	iy,#_buffer
   036C FD 36 01 00         540 	ld	1 (iy),#0x00
                            541 ;demo.c:712: int dbly = 0;
   0370 FD 21rE3s2D         542 	ld	iy,#_dbly
   0374 FD 36 00 00         543 	ld	0 (iy),#0x00
   0378 FD 21rE3s2D         544 	ld	iy,#_dbly
   037C FD 36 01 00         545 	ld	1 (iy),#0x00
                            546 ;demo.c:713: int prevx = -1;
   0380 FD 21rE5s2D         547 	ld	iy,#_prevx
   0384 FD 36 00 FF         548 	ld	0 (iy),#0xFF
   0388 FD 21rE5s2D         549 	ld	iy,#_prevx
   038C FD 36 01 FF         550 	ld	1 (iy),#0xFF
                            551 ;demo.c:738: int bx = 256-42;
   0390 FD 21rEDs2D         552 	ld	iy,#_bx
   0394 FD 36 00 D6         553 	ld	0 (iy),#0xD6
   0398 FD 21rEDs2D         554 	ld	iy,#_bx
   039C FD 36 01 00         555 	ld	1 (iy),#0x00
                            556 ;demo.c:739: int by = 84;
   03A0 FD 21rEFs2D         557 	ld	iy,#_by
   03A4 FD 36 00 54         558 	ld	0 (iy),#0x54
   03A8 FD 21rEFs2D         559 	ld	iy,#_by
   03AC FD 36 01 00         560 	ld	1 (iy),#0x00
                            561 ;demo.c:740: int bt = 0;
   03B0 FD 21rF1s2D         562 	ld	iy,#_bt
   03B4 FD 36 00 00         563 	ld	0 (iy),#0x00
   03B8 FD 21rF1s2D         564 	ld	iy,#_bt
   03BC FD 36 01 00         565 	ld	1 (iy),#0x00
                            566 ;demo.c:741: int bxx = 0;
   03C0 FD 21rF3s2D         567 	ld	iy,#_bxx
   03C4 FD 36 00 00         568 	ld	0 (iy),#0x00
   03C8 FD 21rF3s2D         569 	ld	iy,#_bxx
   03CC FD 36 01 00         570 	ld	1 (iy),#0x00
                            571 ;demo.c:742: int byy = 0;
   03D0 FD 21rF5s2D         572 	ld	iy,#_byy
   03D4 FD 36 00 00         573 	ld	0 (iy),#0x00
   03D8 FD 21rF5s2D         574 	ld	iy,#_byy
   03DC FD 36 01 00         575 	ld	1 (iy),#0x00
                            576 ;demo.c:743: int bo = 0;
   03E0 FD 21rF7s2D         577 	ld	iy,#_bo
   03E4 FD 36 00 00         578 	ld	0 (iy),#0x00
   03E8 FD 21rF7s2D         579 	ld	iy,#_bo
   03EC FD 36 01 00         580 	ld	1 (iy),#0x00
                            581 ;demo.c:745: int bonc = 0;
   03F0 FD 21rF9s2D         582 	ld	iy,#_bonc
   03F4 FD 36 00 00         583 	ld	0 (iy),#0x00
   03F8 FD 21rF9s2D         584 	ld	iy,#_bonc
   03FC FD 36 01 00         585 	ld	1 (iy),#0x00
                            586 ;demo.c:746: int pbx = 0;
   0400 FD 21rFBs2D         587 	ld	iy,#_pbx
   0404 FD 36 00 00         588 	ld	0 (iy),#0x00
   0408 FD 21rFBs2D         589 	ld	iy,#_pbx
   040C FD 36 01 00         590 	ld	1 (iy),#0x00
                            591 ;demo.c:747: int pbt = 0;
   0410 FD 21rFDs2D         592 	ld	iy,#_pbt
   0414 FD 36 00 00         593 	ld	0 (iy),#0x00
   0418 FD 21rFDs2D         594 	ld	iy,#_pbt
   041C FD 36 01 00         595 	ld	1 (iy),#0x00
                            596 ;demo.c:849: uint8_t tri_inited = 0;
   0420 FD 21rFFs2D         597 	ld	iy,#_tri_inited
   0424 FD 36 00 00         598 	ld	0 (iy),#0x00
                            599 ;demo.c:877: char tripal[9] = {
   0428 21r00s2E            600 	ld	hl,#_tripal
   042B CDr00s00            601 	call	__initrleblock
   042E 09                  602 	.db	9
   042F 02 02 01 01 02 03   603 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0437 02                  604 	.db	0x02
   0438 00                  605 	.db	0
                            606 ;demo.c:883: uint8_t tripaltick = 0;
   0439 FD 21r09s2E         607 	ld	iy,#_tripaltick
   043D FD 36 00 00         608 	ld	0 (iy),#0x00
                            609 ;demo.c:885: int triframes = 0;
   0441 FD 21r0As2E         610 	ld	iy,#_triframes
   0445 FD 36 00 00         611 	ld	0 (iy),#0x00
   0449 FD 21r0As2E         612 	ld	iy,#_triframes
   044D FD 36 01 00         613 	ld	1 (iy),#0x00
                            614 ;demo.c:988: int sceneindex = 0;
   0451 FD 21r0Cs2E         615 	ld	iy,#_sceneindex
   0455 FD 36 00 00         616 	ld	0 (iy),#0x00
   0459 FD 21r0Cs2E         617 	ld	iy,#_sceneindex
   045D FD 36 01 00         618 	ld	1 (iy),#0x00
                            619 ;demo.c:989: int timeindex = 0;
   0461 FD 21r0Es2E         620 	ld	iy,#_timeindex
   0465 FD 36 00 00         621 	ld	0 (iy),#0x00
   0469 FD 21r0Es2E         622 	ld	iy,#_timeindex
   046D FD 36 01 00         623 	ld	1 (iy),#0x00
                            624 ;demo.c:991: void (*scenepointers[5])() = {
   0471 21r10s2E            625 	ld	hl,#_scenepointers
   0474 36r27               626 	ld	(hl),#<_fadein
   0476 23                  627 	inc	hl
   0477 36s0A               628 	ld	(hl),#>_fadein
   0479 01r12s2E            629 	ld	bc,#_scenepointers + 2
   047C 69                  630 	ld	l,c
   047D 60                  631 	ld	h,b
   047E 36r8F               632 	ld	(hl),#<_bulbs
   0480 23                  633 	inc	hl
   0481 36s13               634 	ld	(hl),#>_bulbs
   0483 21r14s2E            635 	ld	hl, #_scenepointers + 4
   0486 36r23               636 	ld	(hl),#<_twister
   0488 23                  637 	inc	hl
   0489 36s12               638 	ld	(hl),#>_twister
   048B 01r16s2E            639 	ld	bc,#_scenepointers + 6
   048E 69                  640 	ld	l,c
   048F 60                  641 	ld	h,b
   0490 36r0C               642 	ld	(hl),#<_boxes
   0492 23                  643 	inc	hl
   0493 36s18               644 	ld	(hl),#>_boxes
   0495 01r18s2E            645 	ld	bc,#_scenepointers + 8
   0498 69                  646 	ld	l,c
   0499 60                  647 	ld	h,b
   049A 36rD2               648 	ld	(hl),#<_tritiles
   049C 23                  649 	inc	hl
   049D 36s1C               650 	ld	(hl),#>_tritiles
                            651 ;demo.c:999: int scenetimings[10] = {
   049F 21r1As2E            652 	ld	hl,#_scenetimings
   04A2 CDr00s00            653 	call	__initrleblock
   04A5 14                  654 	.db	20
   04A6 00 00 40 00 C0 00   655 	.db	0x00, 0x00, 0x40, 0x00, 0xC0, 0x00, 0x20, 0x03
        20 03
   04AE 20 03 DC 05 DC 05   656 	.db	0x20, 0x03, 0xDC, 0x05, 0xDC, 0x05, 0x98, 0x08
        98 08
   04B6 98 08 A8 16         657 	.db	0x98, 0x08, 0xA8, 0x16
   04BA 00                  658 	.db	0
                            659 ;--------------------------------------------------------
                            660 ; Home
                            661 ;--------------------------------------------------------
                            662 	.area _HOME
                            663 	.area _HOME
                            664 ;--------------------------------------------------------
                            665 ; code
                            666 ;--------------------------------------------------------
                            667 	.area _CODE
                            668 ;demo.c:130: int isNthBitSet (unsigned char c, int n) {
                            669 ;	---------------------------------
                            670 ; Function isNthBitSet
                            671 ; ---------------------------------
   0000                     672 _isNthBitSet_start::
   0000                     673 _isNthBitSet:
   0000 DD E5               674 	push	ix
   0002 DD 21 00 00         675 	ld	ix,#0
   0006 DD 39               676 	add	ix,sp
                            677 ;demo.c:132: return ((c & mask[n]) != 0);
   0008 3Er8B               678 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            679 	add	a,5 (ix)
   000D 4F                  680 	ld	c,a
   000E 3Es2D               681 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            682 	adc	a,6 (ix)
   0013 47                  683 	ld	b,a
   0014 0A                  684 	ld	a,(bc)
   0015 DD A6 04            685 	and	a,4 (ix)
   0018 20 04               686 	jr	NZ,00103$
   001A 3E 01               687 	ld	a,#0x01
   001C 18 01               688 	jr	00104$
   001E                     689 00103$:
   001E AF                  690 	xor	a,a
   001F                     691 00104$:
   001F B7                  692 	or	a,a
   0020 D6 01               693 	sub	a,#0x01
   0022 3E 00               694 	ld	a,#0x00
   0024 17                  695 	rla
   0025 4F                  696 	ld	c,a
   0026 69                  697 	ld	l,c
   0027 26 00               698 	ld	h,#0x00
   0029 DD E1               699 	pop	ix
   002B C9                  700 	ret
   002C                     701 _isNthBitSet_end::
   002C                     702 _sintabx:
   002C 78 00               703 	.dw #0x0078
   002E 7A 00               704 	.dw #0x007A
   0030 7D 00               705 	.dw #0x007D
   0032 80 00               706 	.dw #0x0080
   0034 83 00               707 	.dw #0x0083
   0036 86 00               708 	.dw #0x0086
   0038 89 00               709 	.dw #0x0089
   003A 8C 00               710 	.dw #0x008C
   003C 8F 00               711 	.dw #0x008F
   003E 92 00               712 	.dw #0x0092
   0040 95 00               713 	.dw #0x0095
   0042 98 00               714 	.dw #0x0098
   0044 9A 00               715 	.dw #0x009A
   0046 9D 00               716 	.dw #0x009D
   0048 A0 00               717 	.dw #0x00A0
   004A A3 00               718 	.dw #0x00A3
   004C A5 00               719 	.dw #0x00A5
   004E A8 00               720 	.dw #0x00A8
   0050 AB 00               721 	.dw #0x00AB
   0052 AD 00               722 	.dw #0x00AD
   0054 B0 00               723 	.dw #0x00B0
   0056 B3 00               724 	.dw #0x00B3
   0058 B5 00               725 	.dw #0x00B5
   005A B8 00               726 	.dw #0x00B8
   005C BA 00               727 	.dw #0x00BA
   005E BD 00               728 	.dw #0x00BD
   0060 BF 00               729 	.dw #0x00BF
   0062 C1 00               730 	.dw #0x00C1
   0064 C4 00               731 	.dw #0x00C4
   0066 C6 00               732 	.dw #0x00C6
   0068 C8 00               733 	.dw #0x00C8
   006A CA 00               734 	.dw #0x00CA
   006C CC 00               735 	.dw #0x00CC
   006E CE 00               736 	.dw #0x00CE
   0070 D0 00               737 	.dw #0x00D0
   0072 D2 00               738 	.dw #0x00D2
   0074 D4 00               739 	.dw #0x00D4
   0076 D6 00               740 	.dw #0x00D6
   0078 D8 00               741 	.dw #0x00D8
   007A DA 00               742 	.dw #0x00DA
   007C DB 00               743 	.dw #0x00DB
   007E DD 00               744 	.dw #0x00DD
   0080 DE 00               745 	.dw #0x00DE
   0082 E0 00               746 	.dw #0x00E0
   0084 E1 00               747 	.dw #0x00E1
   0086 E3 00               748 	.dw #0x00E3
   0088 E4 00               749 	.dw #0x00E4
   008A E5 00               750 	.dw #0x00E5
   008C E6 00               751 	.dw #0x00E6
   008E E7 00               752 	.dw #0x00E7
   0090 E8 00               753 	.dw #0x00E8
   0092 E9 00               754 	.dw #0x00E9
   0094 EA 00               755 	.dw #0x00EA
   0096 EB 00               756 	.dw #0x00EB
   0098 EC 00               757 	.dw #0x00EC
   009A ED 00               758 	.dw #0x00ED
   009C ED 00               759 	.dw #0x00ED
   009E EE 00               760 	.dw #0x00EE
   00A0 EE 00               761 	.dw #0x00EE
   00A2 EF 00               762 	.dw #0x00EF
   00A4 EF 00               763 	.dw #0x00EF
   00A6 EF 00               764 	.dw #0x00EF
   00A8 EF 00               765 	.dw #0x00EF
   00AA EF 00               766 	.dw #0x00EF
   00AC F0 00               767 	.dw #0x00F0
   00AE EF 00               768 	.dw #0x00EF
   00B0 EF 00               769 	.dw #0x00EF
   00B2 EF 00               770 	.dw #0x00EF
   00B4 EF 00               771 	.dw #0x00EF
   00B6 EF 00               772 	.dw #0x00EF
   00B8 EE 00               773 	.dw #0x00EE
   00BA EE 00               774 	.dw #0x00EE
   00BC ED 00               775 	.dw #0x00ED
   00BE ED 00               776 	.dw #0x00ED
   00C0 EC 00               777 	.dw #0x00EC
   00C2 EB 00               778 	.dw #0x00EB
   00C4 EA 00               779 	.dw #0x00EA
   00C6 E9 00               780 	.dw #0x00E9
   00C8 E8 00               781 	.dw #0x00E8
   00CA E7 00               782 	.dw #0x00E7
   00CC E6 00               783 	.dw #0x00E6
   00CE E5 00               784 	.dw #0x00E5
   00D0 E4 00               785 	.dw #0x00E4
   00D2 E3 00               786 	.dw #0x00E3
   00D4 E1 00               787 	.dw #0x00E1
   00D6 E0 00               788 	.dw #0x00E0
   00D8 DE 00               789 	.dw #0x00DE
   00DA DD 00               790 	.dw #0x00DD
   00DC DB 00               791 	.dw #0x00DB
   00DE DA 00               792 	.dw #0x00DA
   00E0 D8 00               793 	.dw #0x00D8
   00E2 D6 00               794 	.dw #0x00D6
   00E4 D4 00               795 	.dw #0x00D4
   00E6 D2 00               796 	.dw #0x00D2
   00E8 D0 00               797 	.dw #0x00D0
   00EA CE 00               798 	.dw #0x00CE
   00EC CC 00               799 	.dw #0x00CC
   00EE CA 00               800 	.dw #0x00CA
   00F0 C8 00               801 	.dw #0x00C8
   00F2 C6 00               802 	.dw #0x00C6
   00F4 C4 00               803 	.dw #0x00C4
   00F6 C1 00               804 	.dw #0x00C1
   00F8 BF 00               805 	.dw #0x00BF
   00FA BD 00               806 	.dw #0x00BD
   00FC BA 00               807 	.dw #0x00BA
   00FE B8 00               808 	.dw #0x00B8
   0100 B5 00               809 	.dw #0x00B5
   0102 B3 00               810 	.dw #0x00B3
   0104 B0 00               811 	.dw #0x00B0
   0106 AD 00               812 	.dw #0x00AD
   0108 AB 00               813 	.dw #0x00AB
   010A A8 00               814 	.dw #0x00A8
   010C A5 00               815 	.dw #0x00A5
   010E A3 00               816 	.dw #0x00A3
   0110 A0 00               817 	.dw #0x00A0
   0112 9D 00               818 	.dw #0x009D
   0114 9A 00               819 	.dw #0x009A
   0116 98 00               820 	.dw #0x0098
   0118 95 00               821 	.dw #0x0095
   011A 92 00               822 	.dw #0x0092
   011C 8F 00               823 	.dw #0x008F
   011E 8C 00               824 	.dw #0x008C
   0120 89 00               825 	.dw #0x0089
   0122 86 00               826 	.dw #0x0086
   0124 83 00               827 	.dw #0x0083
   0126 80 00               828 	.dw #0x0080
   0128 7D 00               829 	.dw #0x007D
   012A 7A 00               830 	.dw #0x007A
   012C 78 00               831 	.dw #0x0078
   012E 75 00               832 	.dw #0x0075
   0130 72 00               833 	.dw #0x0072
   0132 6F 00               834 	.dw #0x006F
   0134 6C 00               835 	.dw #0x006C
   0136 69 00               836 	.dw #0x0069
   0138 66 00               837 	.dw #0x0066
   013A 63 00               838 	.dw #0x0063
   013C 60 00               839 	.dw #0x0060
   013E 5D 00               840 	.dw #0x005D
   0140 5A 00               841 	.dw #0x005A
   0142 57 00               842 	.dw #0x0057
   0144 55 00               843 	.dw #0x0055
   0146 52 00               844 	.dw #0x0052
   0148 4F 00               845 	.dw #0x004F
   014A 4C 00               846 	.dw #0x004C
   014C 4A 00               847 	.dw #0x004A
   014E 47 00               848 	.dw #0x0047
   0150 44 00               849 	.dw #0x0044
   0152 42 00               850 	.dw #0x0042
   0154 3F 00               851 	.dw #0x003F
   0156 3C 00               852 	.dw #0x003C
   0158 3A 00               853 	.dw #0x003A
   015A 37 00               854 	.dw #0x0037
   015C 35 00               855 	.dw #0x0035
   015E 32 00               856 	.dw #0x0032
   0160 30 00               857 	.dw #0x0030
   0162 2E 00               858 	.dw #0x002E
   0164 2B 00               859 	.dw #0x002B
   0166 29 00               860 	.dw #0x0029
   0168 27 00               861 	.dw #0x0027
   016A 25 00               862 	.dw #0x0025
   016C 23 00               863 	.dw #0x0023
   016E 21 00               864 	.dw #0x0021
   0170 1F 00               865 	.dw #0x001F
   0172 1D 00               866 	.dw #0x001D
   0174 1B 00               867 	.dw #0x001B
   0176 19 00               868 	.dw #0x0019
   0178 17 00               869 	.dw #0x0017
   017A 15 00               870 	.dw #0x0015
   017C 14 00               871 	.dw #0x0014
   017E 12 00               872 	.dw #0x0012
   0180 11 00               873 	.dw #0x0011
   0182 0F 00               874 	.dw #0x000F
   0184 0E 00               875 	.dw #0x000E
   0186 0C 00               876 	.dw #0x000C
   0188 0B 00               877 	.dw #0x000B
   018A 0A 00               878 	.dw #0x000A
   018C 09 00               879 	.dw #0x0009
   018E 08 00               880 	.dw #0x0008
   0190 07 00               881 	.dw #0x0007
   0192 06 00               882 	.dw #0x0006
   0194 05 00               883 	.dw #0x0005
   0196 04 00               884 	.dw #0x0004
   0198 03 00               885 	.dw #0x0003
   019A 02 00               886 	.dw #0x0002
   019C 02 00               887 	.dw #0x0002
   019E 01 00               888 	.dw #0x0001
   01A0 01 00               889 	.dw #0x0001
   01A2 00 00               890 	.dw #0x0000
   01A4 00 00               891 	.dw #0x0000
   01A6 00 00               892 	.dw #0x0000
   01A8 00 00               893 	.dw #0x0000
   01AA 00 00               894 	.dw #0x0000
   01AC 00 00               895 	.dw #0x0000
   01AE 00 00               896 	.dw #0x0000
   01B0 00 00               897 	.dw #0x0000
   01B2 00 00               898 	.dw #0x0000
   01B4 00 00               899 	.dw #0x0000
   01B6 00 00               900 	.dw #0x0000
   01B8 01 00               901 	.dw #0x0001
   01BA 01 00               902 	.dw #0x0001
   01BC 02 00               903 	.dw #0x0002
   01BE 02 00               904 	.dw #0x0002
   01C0 03 00               905 	.dw #0x0003
   01C2 04 00               906 	.dw #0x0004
   01C4 05 00               907 	.dw #0x0005
   01C6 06 00               908 	.dw #0x0006
   01C8 07 00               909 	.dw #0x0007
   01CA 08 00               910 	.dw #0x0008
   01CC 09 00               911 	.dw #0x0009
   01CE 0A 00               912 	.dw #0x000A
   01D0 0B 00               913 	.dw #0x000B
   01D2 0C 00               914 	.dw #0x000C
   01D4 0E 00               915 	.dw #0x000E
   01D6 0F 00               916 	.dw #0x000F
   01D8 11 00               917 	.dw #0x0011
   01DA 12 00               918 	.dw #0x0012
   01DC 14 00               919 	.dw #0x0014
   01DE 15 00               920 	.dw #0x0015
   01E0 17 00               921 	.dw #0x0017
   01E2 19 00               922 	.dw #0x0019
   01E4 1B 00               923 	.dw #0x001B
   01E6 1D 00               924 	.dw #0x001D
   01E8 1F 00               925 	.dw #0x001F
   01EA 21 00               926 	.dw #0x0021
   01EC 23 00               927 	.dw #0x0023
   01EE 25 00               928 	.dw #0x0025
   01F0 27 00               929 	.dw #0x0027
   01F2 29 00               930 	.dw #0x0029
   01F4 2B 00               931 	.dw #0x002B
   01F6 2E 00               932 	.dw #0x002E
   01F8 30 00               933 	.dw #0x0030
   01FA 32 00               934 	.dw #0x0032
   01FC 35 00               935 	.dw #0x0035
   01FE 37 00               936 	.dw #0x0037
   0200 3A 00               937 	.dw #0x003A
   0202 3C 00               938 	.dw #0x003C
   0204 3F 00               939 	.dw #0x003F
   0206 42 00               940 	.dw #0x0042
   0208 44 00               941 	.dw #0x0044
   020A 47 00               942 	.dw #0x0047
   020C 4A 00               943 	.dw #0x004A
   020E 4C 00               944 	.dw #0x004C
   0210 4F 00               945 	.dw #0x004F
   0212 52 00               946 	.dw #0x0052
   0214 55 00               947 	.dw #0x0055
   0216 57 00               948 	.dw #0x0057
   0218 5A 00               949 	.dw #0x005A
   021A 5D 00               950 	.dw #0x005D
   021C 60 00               951 	.dw #0x0060
   021E 63 00               952 	.dw #0x0063
   0220 66 00               953 	.dw #0x0066
   0222 69 00               954 	.dw #0x0069
   0224 6C 00               955 	.dw #0x006C
   0226 6F 00               956 	.dw #0x006F
   0228 72 00               957 	.dw #0x0072
   022A 75 00               958 	.dw #0x0075
   022C                     959 _tri_center:
   022C 08                  960 	.db #0x08
   022D 0A                  961 	.db #0x0A
   022E 12                  962 	.db #0x12
   022F 10                  963 	.db #0x10
   0230 00                  964 	.db #0x00
   0231 02                  965 	.db #0x02
   0232 08                  966 	.db #0x08
   0233 0A                  967 	.db #0x0A
   0234 0B                  968 	.db #0x0B
   0235 09                  969 	.db #0x09
   0236 03                  970 	.db #0x03
   0237 01                  971 	.db #0x01
   0238 11                  972 	.db #0x11
   0239 13                  973 	.db #0x13
   023A 0B                  974 	.db #0x0B
   023B 09                  975 	.db #0x09
   023C 0A                  976 	.db #0x0A
   023D 12                  977 	.db #0x12
   023E 10                  978 	.db #0x10
   023F 00                  979 	.db #0x00
   0240 02                  980 	.db #0x02
   0241 08                  981 	.db #0x08
   0242 0A                  982 	.db #0x0A
   0243 12                  983 	.db #0x12
   0244 13                  984 	.db #0x13
   0245 0B                  985 	.db #0x0B
   0246 09                  986 	.db #0x09
   0247 03                  987 	.db #0x03
   0248 01                  988 	.db #0x01
   0249 11                  989 	.db #0x11
   024A 13                  990 	.db #0x13
   024B 0B                  991 	.db #0x0B
   024C 12                  992 	.db #0x12
   024D 10                  993 	.db #0x10
   024E 00                  994 	.db #0x00
   024F 02                  995 	.db #0x02
   0250 08                  996 	.db #0x08
   0251 0A                  997 	.db #0x0A
   0252 12                  998 	.db #0x12
   0253 10                  999 	.db #0x10
   0254 11                 1000 	.db #0x11
   0255 13                 1001 	.db #0x13
   0256 0B                 1002 	.db #0x0B
   0257 09                 1003 	.db #0x09
   0258 03                 1004 	.db #0x03
   0259 01                 1005 	.db #0x01
   025A 11                 1006 	.db #0x11
   025B 13                 1007 	.db #0x13
   025C 10                 1008 	.db #0x10
   025D 00                 1009 	.db #0x00
   025E 02                 1010 	.db #0x02
   025F 08                 1011 	.db #0x08
   0260 0A                 1012 	.db #0x0A
   0261 12                 1013 	.db #0x12
   0262 10                 1014 	.db #0x10
   0263 00                 1015 	.db #0x00
   0264 01                 1016 	.db #0x01
   0265 11                 1017 	.db #0x11
   0266 13                 1018 	.db #0x13
   0267 0B                 1019 	.db #0x0B
   0268 09                 1020 	.db #0x09
   0269 03                 1021 	.db #0x03
   026A 01                 1022 	.db #0x01
   026B 11                 1023 	.db #0x11
   026C 00                 1024 	.db #0x00
   026D 02                 1025 	.db #0x02
   026E 08                 1026 	.db #0x08
   026F 0A                 1027 	.db #0x0A
   0270 12                 1028 	.db #0x12
   0271 10                 1029 	.db #0x10
   0272 00                 1030 	.db #0x00
   0273 02                 1031 	.db #0x02
   0274 03                 1032 	.db #0x03
   0275 01                 1033 	.db #0x01
   0276 11                 1034 	.db #0x11
   0277 13                 1035 	.db #0x13
   0278 0B                 1036 	.db #0x0B
   0279 09                 1037 	.db #0x09
   027A 03                 1038 	.db #0x03
   027B 01                 1039 	.db #0x01
   027C 02                 1040 	.db #0x02
   027D 08                 1041 	.db #0x08
   027E 0A                 1042 	.db #0x0A
   027F 12                 1043 	.db #0x12
   0280 10                 1044 	.db #0x10
   0281 00                 1045 	.db #0x00
   0282 02                 1046 	.db #0x02
   0283 08                 1047 	.db #0x08
   0284 09                 1048 	.db #0x09
   0285 03                 1049 	.db #0x03
   0286 01                 1050 	.db #0x01
   0287 11                 1051 	.db #0x11
   0288 13                 1052 	.db #0x13
   0289 0B                 1053 	.db #0x0B
   028A 09                 1054 	.db #0x09
   028B 03                 1055 	.db #0x03
   028C 01                 1056 	.db #0x01
   028D 0B                 1057 	.db #0x0B
   028E 09                 1058 	.db #0x09
   028F 11                 1059 	.db #0x11
   0290 13                 1060 	.db #0x13
   0291 03                 1061 	.db #0x03
   0292 01                 1062 	.db #0x01
   0293 0B                 1063 	.db #0x0B
   0294 0A                 1064 	.db #0x0A
   0295 00                 1065 	.db #0x00
   0296 02                 1066 	.db #0x02
   0297 12                 1067 	.db #0x12
   0298 10                 1068 	.db #0x10
   0299 08                 1069 	.db #0x08
   029A 0A                 1070 	.db #0x0A
   029B 00                 1071 	.db #0x00
   029C 03                 1072 	.db #0x03
   029D 01                 1073 	.db #0x01
   029E 0B                 1074 	.db #0x0B
   029F 09                 1075 	.db #0x09
   02A0 11                 1076 	.db #0x11
   02A1 13                 1077 	.db #0x13
   02A2 03                 1078 	.db #0x03
   02A3 01                 1079 	.db #0x01
   02A4 00                 1080 	.db #0x00
   02A5 02                 1081 	.db #0x02
   02A6 12                 1082 	.db #0x12
   02A7 10                 1083 	.db #0x10
   02A8 08                 1084 	.db #0x08
   02A9 0A                 1085 	.db #0x0A
   02AA 00                 1086 	.db #0x00
   02AB 02                 1087 	.db #0x02
   02AC 13                 1088 	.db #0x13
   02AD 03                 1089 	.db #0x03
   02AE 01                 1090 	.db #0x01
   02AF 0B                 1091 	.db #0x0B
   02B0 09                 1092 	.db #0x09
   02B1 11                 1093 	.db #0x11
   02B2 13                 1094 	.db #0x13
   02B3 03                 1095 	.db #0x03
   02B4 02                 1096 	.db #0x02
   02B5 12                 1097 	.db #0x12
   02B6 10                 1098 	.db #0x10
   02B7 08                 1099 	.db #0x08
   02B8 0A                 1100 	.db #0x0A
   02B9 00                 1101 	.db #0x00
   02BA 02                 1102 	.db #0x02
   02BB 12                 1103 	.db #0x12
   02BC 11                 1104 	.db #0x11
   02BD 13                 1105 	.db #0x13
   02BE 03                 1106 	.db #0x03
   02BF 01                 1107 	.db #0x01
   02C0 0B                 1108 	.db #0x0B
   02C1 09                 1109 	.db #0x09
   02C2 11                 1110 	.db #0x11
   02C3 13                 1111 	.db #0x13
   02C4 12                 1112 	.db #0x12
   02C5 10                 1113 	.db #0x10
   02C6 08                 1114 	.db #0x08
   02C7 0A                 1115 	.db #0x0A
   02C8 00                 1116 	.db #0x00
   02C9 02                 1117 	.db #0x02
   02CA 12                 1118 	.db #0x12
   02CB 10                 1119 	.db #0x10
   02CC 09                 1120 	.db #0x09
   02CD 11                 1121 	.db #0x11
   02CE 13                 1122 	.db #0x13
   02CF 03                 1123 	.db #0x03
   02D0 01                 1124 	.db #0x01
   02D1 0B                 1125 	.db #0x0B
   02D2 09                 1126 	.db #0x09
   02D3 11                 1127 	.db #0x11
   02D4 10                 1128 	.db #0x10
   02D5 08                 1129 	.db #0x08
   02D6 0A                 1130 	.db #0x0A
   02D7 00                 1131 	.db #0x00
   02D8 02                 1132 	.db #0x02
   02D9 12                 1133 	.db #0x12
   02DA 10                 1134 	.db #0x10
   02DB 08                 1135 	.db #0x08
   02DC 0B                 1136 	.db #0x0B
   02DD 09                 1137 	.db #0x09
   02DE 11                 1138 	.db #0x11
   02DF 13                 1139 	.db #0x13
   02E0 03                 1140 	.db #0x03
   02E1 01                 1141 	.db #0x01
   02E2 0B                 1142 	.db #0x0B
   02E3 09                 1143 	.db #0x09
   02E4 08                 1144 	.db #0x08
   02E5 0A                 1145 	.db #0x0A
   02E6 00                 1146 	.db #0x00
   02E7 02                 1147 	.db #0x02
   02E8 12                 1148 	.db #0x12
   02E9 10                 1149 	.db #0x10
   02EA 08                 1150 	.db #0x08
   02EB 0A                 1151 	.db #0x0A
   02EC                    1152 _tri_up:
   02EC 0A                 1153 	.db #0x0A
   02ED 12                 1154 	.db #0x12
   02EE 10                 1155 	.db #0x10
   02EF 00                 1156 	.db #0x00
   02F0 02                 1157 	.db #0x02
   02F1 08                 1158 	.db #0x08
   02F2 0A                 1159 	.db #0x0A
   02F3 12                 1160 	.db #0x12
   02F4 13                 1161 	.db #0x13
   02F5 0B                 1162 	.db #0x0B
   02F6 09                 1163 	.db #0x09
   02F7 03                 1164 	.db #0x03
   02F8 01                 1165 	.db #0x01
   02F9 11                 1166 	.db #0x11
   02FA 13                 1167 	.db #0x13
   02FB 0B                 1168 	.db #0x0B
   02FC 12                 1169 	.db #0x12
   02FD 10                 1170 	.db #0x10
   02FE 00                 1171 	.db #0x00
   02FF 02                 1172 	.db #0x02
   0300 08                 1173 	.db #0x08
   0301 0A                 1174 	.db #0x0A
   0302 12                 1175 	.db #0x12
   0303 10                 1176 	.db #0x10
   0304 11                 1177 	.db #0x11
   0305 13                 1178 	.db #0x13
   0306 0B                 1179 	.db #0x0B
   0307 09                 1180 	.db #0x09
   0308 03                 1181 	.db #0x03
   0309 01                 1182 	.db #0x01
   030A 11                 1183 	.db #0x11
   030B 13                 1184 	.db #0x13
   030C 10                 1185 	.db #0x10
   030D 00                 1186 	.db #0x00
   030E 02                 1187 	.db #0x02
   030F 08                 1188 	.db #0x08
   0310 0A                 1189 	.db #0x0A
   0311 12                 1190 	.db #0x12
   0312 10                 1191 	.db #0x10
   0313 00                 1192 	.db #0x00
   0314 01                 1193 	.db #0x01
   0315 11                 1194 	.db #0x11
   0316 13                 1195 	.db #0x13
   0317 0B                 1196 	.db #0x0B
   0318 09                 1197 	.db #0x09
   0319 03                 1198 	.db #0x03
   031A 01                 1199 	.db #0x01
   031B 11                 1200 	.db #0x11
   031C 00                 1201 	.db #0x00
   031D 02                 1202 	.db #0x02
   031E 08                 1203 	.db #0x08
   031F 0A                 1204 	.db #0x0A
   0320 12                 1205 	.db #0x12
   0321 10                 1206 	.db #0x10
   0322 00                 1207 	.db #0x00
   0323 02                 1208 	.db #0x02
   0324 03                 1209 	.db #0x03
   0325 01                 1210 	.db #0x01
   0326 11                 1211 	.db #0x11
   0327 13                 1212 	.db #0x13
   0328 0B                 1213 	.db #0x0B
   0329 09                 1214 	.db #0x09
   032A 03                 1215 	.db #0x03
   032B 01                 1216 	.db #0x01
   032C 02                 1217 	.db #0x02
   032D 08                 1218 	.db #0x08
   032E 0A                 1219 	.db #0x0A
   032F 12                 1220 	.db #0x12
   0330 10                 1221 	.db #0x10
   0331 00                 1222 	.db #0x00
   0332 02                 1223 	.db #0x02
   0333 08                 1224 	.db #0x08
   0334 09                 1225 	.db #0x09
   0335 03                 1226 	.db #0x03
   0336 01                 1227 	.db #0x01
   0337 11                 1228 	.db #0x11
   0338 13                 1229 	.db #0x13
   0339 0B                 1230 	.db #0x0B
   033A 09                 1231 	.db #0x09
   033B 03                 1232 	.db #0x03
   033C 08                 1233 	.db #0x08
   033D 0A                 1234 	.db #0x0A
   033E 12                 1235 	.db #0x12
   033F 10                 1236 	.db #0x10
   0340 00                 1237 	.db #0x00
   0341 02                 1238 	.db #0x02
   0342 08                 1239 	.db #0x08
   0343 0A                 1240 	.db #0x0A
   0344 0B                 1241 	.db #0x0B
   0345 09                 1242 	.db #0x09
   0346 03                 1243 	.db #0x03
   0347 01                 1244 	.db #0x01
   0348 11                 1245 	.db #0x11
   0349 13                 1246 	.db #0x13
   034A 0B                 1247 	.db #0x0B
   034B 09                 1248 	.db #0x09
   034C 0A                 1249 	.db #0x0A
   034D 12                 1250 	.db #0x12
   034E 10                 1251 	.db #0x10
   034F 00                 1252 	.db #0x00
   0350 02                 1253 	.db #0x02
   0351 08                 1254 	.db #0x08
   0352 0A                 1255 	.db #0x0A
   0353 12                 1256 	.db #0x12
   0354 13                 1257 	.db #0x13
   0355 0B                 1258 	.db #0x0B
   0356 09                 1259 	.db #0x09
   0357 03                 1260 	.db #0x03
   0358 01                 1261 	.db #0x01
   0359 11                 1262 	.db #0x11
   035A 13                 1263 	.db #0x13
   035B 0B                 1264 	.db #0x0B
   035C 12                 1265 	.db #0x12
   035D 10                 1266 	.db #0x10
   035E 00                 1267 	.db #0x00
   035F 02                 1268 	.db #0x02
   0360 08                 1269 	.db #0x08
   0361 0A                 1270 	.db #0x0A
   0362 12                 1271 	.db #0x12
   0363 10                 1272 	.db #0x10
   0364 11                 1273 	.db #0x11
   0365 13                 1274 	.db #0x13
   0366 0B                 1275 	.db #0x0B
   0367 09                 1276 	.db #0x09
   0368 03                 1277 	.db #0x03
   0369 01                 1278 	.db #0x01
   036A 11                 1279 	.db #0x11
   036B 13                 1280 	.db #0x13
   036C 10                 1281 	.db #0x10
   036D 00                 1282 	.db #0x00
   036E 02                 1283 	.db #0x02
   036F 08                 1284 	.db #0x08
   0370 0A                 1285 	.db #0x0A
   0371 12                 1286 	.db #0x12
   0372 10                 1287 	.db #0x10
   0373 00                 1288 	.db #0x00
   0374 01                 1289 	.db #0x01
   0375 11                 1290 	.db #0x11
   0376 13                 1291 	.db #0x13
   0377 0B                 1292 	.db #0x0B
   0378 09                 1293 	.db #0x09
   0379 03                 1294 	.db #0x03
   037A 01                 1295 	.db #0x01
   037B 11                 1296 	.db #0x11
   037C 00                 1297 	.db #0x00
   037D 02                 1298 	.db #0x02
   037E 08                 1299 	.db #0x08
   037F 0A                 1300 	.db #0x0A
   0380 12                 1301 	.db #0x12
   0381 10                 1302 	.db #0x10
   0382 00                 1303 	.db #0x00
   0383 02                 1304 	.db #0x02
   0384 03                 1305 	.db #0x03
   0385 01                 1306 	.db #0x01
   0386 11                 1307 	.db #0x11
   0387 13                 1308 	.db #0x13
   0388 0B                 1309 	.db #0x0B
   0389 09                 1310 	.db #0x09
   038A 03                 1311 	.db #0x03
   038B 01                 1312 	.db #0x01
   038C 02                 1313 	.db #0x02
   038D 08                 1314 	.db #0x08
   038E 0A                 1315 	.db #0x0A
   038F 12                 1316 	.db #0x12
   0390 10                 1317 	.db #0x10
   0391 00                 1318 	.db #0x00
   0392 02                 1319 	.db #0x02
   0393 08                 1320 	.db #0x08
   0394 09                 1321 	.db #0x09
   0395 03                 1322 	.db #0x03
   0396 01                 1323 	.db #0x01
   0397 11                 1324 	.db #0x11
   0398 13                 1325 	.db #0x13
   0399 0B                 1326 	.db #0x0B
   039A 09                 1327 	.db #0x09
   039B 03                 1328 	.db #0x03
   039C 08                 1329 	.db #0x08
   039D 0A                 1330 	.db #0x0A
   039E 12                 1331 	.db #0x12
   039F 10                 1332 	.db #0x10
   03A0 00                 1333 	.db #0x00
   03A1 02                 1334 	.db #0x02
   03A2 08                 1335 	.db #0x08
   03A3 0A                 1336 	.db #0x0A
   03A4 0B                 1337 	.db #0x0B
   03A5 09                 1338 	.db #0x09
   03A6 03                 1339 	.db #0x03
   03A7 01                 1340 	.db #0x01
   03A8 11                 1341 	.db #0x11
   03A9 13                 1342 	.db #0x13
   03AA 0B                 1343 	.db #0x0B
   03AB 09                 1344 	.db #0x09
   03AC                    1345 _tri_dia:
   03AC 05                 1346 	.db #0x05
   03AD 1B                 1347 	.db #0x1B
   03AE 0F                 1348 	.db #0x0F
   03AF 1D                 1349 	.db #0x1D
   03B0 15                 1350 	.db #0x15
   03B1 19                 1351 	.db #0x19
   03B2 05                 1352 	.db #0x05
   03B3 1B                 1353 	.db #0x1B
   03B4 0F                 1354 	.db #0x0F
   03B5 1D                 1355 	.db #0x1D
   03B6 15                 1356 	.db #0x15
   03B7 19                 1357 	.db #0x19
   03B8 05                 1358 	.db #0x05
   03B9 1B                 1359 	.db #0x1B
   03BA 0F                 1360 	.db #0x0F
   03BB 1D                 1361 	.db #0x1D
   03BC 1D                 1362 	.db #0x1D
   03BD 05                 1363 	.db #0x05
   03BE 19                 1364 	.db #0x19
   03BF 0F                 1365 	.db #0x0F
   03C0 1B                 1366 	.db #0x1B
   03C1 15                 1367 	.db #0x15
   03C2 1D                 1368 	.db #0x1D
   03C3 05                 1369 	.db #0x05
   03C4 19                 1370 	.db #0x19
   03C5 0F                 1371 	.db #0x0F
   03C6 1B                 1372 	.db #0x1B
   03C7 15                 1373 	.db #0x15
   03C8 1D                 1374 	.db #0x1D
   03C9 05                 1375 	.db #0x05
   03CA 19                 1376 	.db #0x19
   03CB 0F                 1377 	.db #0x0F
   03CC 0F                 1378 	.db #0x0F
   03CD 1D                 1379 	.db #0x1D
   03CE 15                 1380 	.db #0x15
   03CF 19                 1381 	.db #0x19
   03D0 05                 1382 	.db #0x05
   03D1 1B                 1383 	.db #0x1B
   03D2 0F                 1384 	.db #0x0F
   03D3 1D                 1385 	.db #0x1D
   03D4 15                 1386 	.db #0x15
   03D5 19                 1387 	.db #0x19
   03D6 05                 1388 	.db #0x05
   03D7 1B                 1389 	.db #0x1B
   03D8 0F                 1390 	.db #0x0F
   03D9 1D                 1391 	.db #0x1D
   03DA 15                 1392 	.db #0x15
   03DB 19                 1393 	.db #0x19
   03DC 19                 1394 	.db #0x19
   03DD 0F                 1395 	.db #0x0F
   03DE 1B                 1396 	.db #0x1B
   03DF 15                 1397 	.db #0x15
   03E0 1D                 1398 	.db #0x1D
   03E1 05                 1399 	.db #0x05
   03E2 19                 1400 	.db #0x19
   03E3 0F                 1401 	.db #0x0F
   03E4 1B                 1402 	.db #0x1B
   03E5 15                 1403 	.db #0x15
   03E6 1D                 1404 	.db #0x1D
   03E7 05                 1405 	.db #0x05
   03E8 19                 1406 	.db #0x19
   03E9 0F                 1407 	.db #0x0F
   03EA 1B                 1408 	.db #0x1B
   03EB 15                 1409 	.db #0x15
   03EC 15                 1410 	.db #0x15
   03ED 19                 1411 	.db #0x19
   03EE 05                 1412 	.db #0x05
   03EF 1B                 1413 	.db #0x1B
   03F0 0F                 1414 	.db #0x0F
   03F1 1D                 1415 	.db #0x1D
   03F2 15                 1416 	.db #0x15
   03F3 19                 1417 	.db #0x19
   03F4 05                 1418 	.db #0x05
   03F5 1B                 1419 	.db #0x1B
   03F6 0F                 1420 	.db #0x0F
   03F7 1D                 1421 	.db #0x1D
   03F8 15                 1422 	.db #0x15
   03F9 19                 1423 	.db #0x19
   03FA 05                 1424 	.db #0x05
   03FB 1B                 1425 	.db #0x1B
   03FC 1B                 1426 	.db #0x1B
   03FD 15                 1427 	.db #0x15
   03FE 1D                 1428 	.db #0x1D
   03FF 05                 1429 	.db #0x05
   0400 19                 1430 	.db #0x19
   0401 0F                 1431 	.db #0x0F
   0402 1B                 1432 	.db #0x1B
   0403 15                 1433 	.db #0x15
   0404 1D                 1434 	.db #0x1D
   0405 05                 1435 	.db #0x05
   0406 19                 1436 	.db #0x19
   0407 0F                 1437 	.db #0x0F
   0408 1B                 1438 	.db #0x1B
   0409 15                 1439 	.db #0x15
   040A 1D                 1440 	.db #0x1D
   040B 05                 1441 	.db #0x05
   040C 05                 1442 	.db #0x05
   040D 1B                 1443 	.db #0x1B
   040E 0F                 1444 	.db #0x0F
   040F 1D                 1445 	.db #0x1D
   0410 15                 1446 	.db #0x15
   0411 19                 1447 	.db #0x19
   0412 05                 1448 	.db #0x05
   0413 1B                 1449 	.db #0x1B
   0414 0F                 1450 	.db #0x0F
   0415 1D                 1451 	.db #0x1D
   0416 15                 1452 	.db #0x15
   0417 19                 1453 	.db #0x19
   0418 05                 1454 	.db #0x05
   0419 1B                 1455 	.db #0x1B
   041A 0F                 1456 	.db #0x0F
   041B 1D                 1457 	.db #0x1D
   041C 1D                 1458 	.db #0x1D
   041D 05                 1459 	.db #0x05
   041E 19                 1460 	.db #0x19
   041F 0F                 1461 	.db #0x0F
   0420 1B                 1462 	.db #0x1B
   0421 15                 1463 	.db #0x15
   0422 1D                 1464 	.db #0x1D
   0423 05                 1465 	.db #0x05
   0424 19                 1466 	.db #0x19
   0425 0F                 1467 	.db #0x0F
   0426 1B                 1468 	.db #0x1B
   0427 15                 1469 	.db #0x15
   0428 1D                 1470 	.db #0x1D
   0429 05                 1471 	.db #0x05
   042A 19                 1472 	.db #0x19
   042B 0F                 1473 	.db #0x0F
   042C 0F                 1474 	.db #0x0F
   042D 1D                 1475 	.db #0x1D
   042E 15                 1476 	.db #0x15
   042F 19                 1477 	.db #0x19
   0430 05                 1478 	.db #0x05
   0431 1B                 1479 	.db #0x1B
   0432 0F                 1480 	.db #0x0F
   0433 1D                 1481 	.db #0x1D
   0434 15                 1482 	.db #0x15
   0435 19                 1483 	.db #0x19
   0436 05                 1484 	.db #0x05
   0437 1B                 1485 	.db #0x1B
   0438 0F                 1486 	.db #0x0F
   0439 1D                 1487 	.db #0x1D
   043A 15                 1488 	.db #0x15
   043B 19                 1489 	.db #0x19
   043C 19                 1490 	.db #0x19
   043D 0F                 1491 	.db #0x0F
   043E 1B                 1492 	.db #0x1B
   043F 15                 1493 	.db #0x15
   0440 1D                 1494 	.db #0x1D
   0441 05                 1495 	.db #0x05
   0442 19                 1496 	.db #0x19
   0443 0F                 1497 	.db #0x0F
   0444 1B                 1498 	.db #0x1B
   0445 15                 1499 	.db #0x15
   0446 1D                 1500 	.db #0x1D
   0447 05                 1501 	.db #0x05
   0448 19                 1502 	.db #0x19
   0449 0F                 1503 	.db #0x0F
   044A 1B                 1504 	.db #0x1B
   044B 15                 1505 	.db #0x15
   044C 15                 1506 	.db #0x15
   044D 19                 1507 	.db #0x19
   044E 05                 1508 	.db #0x05
   044F 1B                 1509 	.db #0x1B
   0450 0F                 1510 	.db #0x0F
   0451 1D                 1511 	.db #0x1D
   0452 15                 1512 	.db #0x15
   0453 19                 1513 	.db #0x19
   0454 05                 1514 	.db #0x05
   0455 1B                 1515 	.db #0x1B
   0456 0F                 1516 	.db #0x0F
   0457 1D                 1517 	.db #0x1D
   0458 15                 1518 	.db #0x15
   0459 19                 1519 	.db #0x19
   045A 05                 1520 	.db #0x05
   045B 1B                 1521 	.db #0x1B
   045C 1B                 1522 	.db #0x1B
   045D 15                 1523 	.db #0x15
   045E 1D                 1524 	.db #0x1D
   045F 05                 1525 	.db #0x05
   0460 19                 1526 	.db #0x19
   0461 0F                 1527 	.db #0x0F
   0462 1B                 1528 	.db #0x1B
   0463 15                 1529 	.db #0x15
   0464 1D                 1530 	.db #0x1D
   0465 05                 1531 	.db #0x05
   0466 19                 1532 	.db #0x19
   0467 0F                 1533 	.db #0x0F
   0468 1B                 1534 	.db #0x1B
   0469 15                 1535 	.db #0x15
   046A 1D                 1536 	.db #0x1D
   046B 05                 1537 	.db #0x05
   046C                    1538 _tri_side1:
   046C 0A                 1539 	.db #0x0A
   046D 12                 1540 	.db #0x12
   046E 10                 1541 	.db #0x10
   046F 00                 1542 	.db #0x00
   0470 02                 1543 	.db #0x02
   0471 08                 1544 	.db #0x08
   0472 0A                 1545 	.db #0x0A
   0473 12                 1546 	.db #0x12
   0474 10                 1547 	.db #0x10
   0475 00                 1548 	.db #0x00
   0476 02                 1549 	.db #0x02
   0477 08                 1550 	.db #0x08
   0478 0A                 1551 	.db #0x0A
   0479 12                 1552 	.db #0x12
   047A 10                 1553 	.db #0x10
   047B 00                 1554 	.db #0x00
   047C 12                 1555 	.db #0x12
   047D 10                 1556 	.db #0x10
   047E 00                 1557 	.db #0x00
   047F 02                 1558 	.db #0x02
   0480 08                 1559 	.db #0x08
   0481 0A                 1560 	.db #0x0A
   0482 12                 1561 	.db #0x12
   0483 10                 1562 	.db #0x10
   0484 00                 1563 	.db #0x00
   0485 02                 1564 	.db #0x02
   0486 08                 1565 	.db #0x08
   0487 0A                 1566 	.db #0x0A
   0488 12                 1567 	.db #0x12
   0489 10                 1568 	.db #0x10
   048A 00                 1569 	.db #0x00
   048B 02                 1570 	.db #0x02
   048C 10                 1571 	.db #0x10
   048D 00                 1572 	.db #0x00
   048E 02                 1573 	.db #0x02
   048F 08                 1574 	.db #0x08
   0490 0A                 1575 	.db #0x0A
   0491 12                 1576 	.db #0x12
   0492 10                 1577 	.db #0x10
   0493 00                 1578 	.db #0x00
   0494 02                 1579 	.db #0x02
   0495 08                 1580 	.db #0x08
   0496 0A                 1581 	.db #0x0A
   0497 12                 1582 	.db #0x12
   0498 10                 1583 	.db #0x10
   0499 00                 1584 	.db #0x00
   049A 02                 1585 	.db #0x02
   049B 08                 1586 	.db #0x08
   049C 00                 1587 	.db #0x00
   049D 02                 1588 	.db #0x02
   049E 08                 1589 	.db #0x08
   049F 0A                 1590 	.db #0x0A
   04A0 12                 1591 	.db #0x12
   04A1 10                 1592 	.db #0x10
   04A2 00                 1593 	.db #0x00
   04A3 02                 1594 	.db #0x02
   04A4 08                 1595 	.db #0x08
   04A5 0A                 1596 	.db #0x0A
   04A6 12                 1597 	.db #0x12
   04A7 10                 1598 	.db #0x10
   04A8 00                 1599 	.db #0x00
   04A9 02                 1600 	.db #0x02
   04AA 08                 1601 	.db #0x08
   04AB 0A                 1602 	.db #0x0A
   04AC 02                 1603 	.db #0x02
   04AD 08                 1604 	.db #0x08
   04AE 0A                 1605 	.db #0x0A
   04AF 12                 1606 	.db #0x12
   04B0 10                 1607 	.db #0x10
   04B1 00                 1608 	.db #0x00
   04B2 02                 1609 	.db #0x02
   04B3 08                 1610 	.db #0x08
   04B4 0A                 1611 	.db #0x0A
   04B5 12                 1612 	.db #0x12
   04B6 10                 1613 	.db #0x10
   04B7 00                 1614 	.db #0x00
   04B8 02                 1615 	.db #0x02
   04B9 08                 1616 	.db #0x08
   04BA 0A                 1617 	.db #0x0A
   04BB 12                 1618 	.db #0x12
   04BC 08                 1619 	.db #0x08
   04BD 0A                 1620 	.db #0x0A
   04BE 12                 1621 	.db #0x12
   04BF 10                 1622 	.db #0x10
   04C0 00                 1623 	.db #0x00
   04C1 02                 1624 	.db #0x02
   04C2 08                 1625 	.db #0x08
   04C3 0A                 1626 	.db #0x0A
   04C4 12                 1627 	.db #0x12
   04C5 10                 1628 	.db #0x10
   04C6 00                 1629 	.db #0x00
   04C7 02                 1630 	.db #0x02
   04C8 08                 1631 	.db #0x08
   04C9 0A                 1632 	.db #0x0A
   04CA 12                 1633 	.db #0x12
   04CB 10                 1634 	.db #0x10
   04CC 0A                 1635 	.db #0x0A
   04CD 12                 1636 	.db #0x12
   04CE 10                 1637 	.db #0x10
   04CF 00                 1638 	.db #0x00
   04D0 02                 1639 	.db #0x02
   04D1 08                 1640 	.db #0x08
   04D2 0A                 1641 	.db #0x0A
   04D3 12                 1642 	.db #0x12
   04D4 10                 1643 	.db #0x10
   04D5 00                 1644 	.db #0x00
   04D6 02                 1645 	.db #0x02
   04D7 08                 1646 	.db #0x08
   04D8 0A                 1647 	.db #0x0A
   04D9 12                 1648 	.db #0x12
   04DA 10                 1649 	.db #0x10
   04DB 00                 1650 	.db #0x00
   04DC 12                 1651 	.db #0x12
   04DD 10                 1652 	.db #0x10
   04DE 00                 1653 	.db #0x00
   04DF 02                 1654 	.db #0x02
   04E0 08                 1655 	.db #0x08
   04E1 0A                 1656 	.db #0x0A
   04E2 12                 1657 	.db #0x12
   04E3 10                 1658 	.db #0x10
   04E4 00                 1659 	.db #0x00
   04E5 02                 1660 	.db #0x02
   04E6 08                 1661 	.db #0x08
   04E7 0A                 1662 	.db #0x0A
   04E8 12                 1663 	.db #0x12
   04E9 10                 1664 	.db #0x10
   04EA 00                 1665 	.db #0x00
   04EB 02                 1666 	.db #0x02
   04EC 10                 1667 	.db #0x10
   04ED 00                 1668 	.db #0x00
   04EE 02                 1669 	.db #0x02
   04EF 08                 1670 	.db #0x08
   04F0 0A                 1671 	.db #0x0A
   04F1 12                 1672 	.db #0x12
   04F2 10                 1673 	.db #0x10
   04F3 00                 1674 	.db #0x00
   04F4 02                 1675 	.db #0x02
   04F5 08                 1676 	.db #0x08
   04F6 0A                 1677 	.db #0x0A
   04F7 12                 1678 	.db #0x12
   04F8 10                 1679 	.db #0x10
   04F9 00                 1680 	.db #0x00
   04FA 02                 1681 	.db #0x02
   04FB 08                 1682 	.db #0x08
   04FC 00                 1683 	.db #0x00
   04FD 02                 1684 	.db #0x02
   04FE 08                 1685 	.db #0x08
   04FF 0A                 1686 	.db #0x0A
   0500 12                 1687 	.db #0x12
   0501 10                 1688 	.db #0x10
   0502 00                 1689 	.db #0x00
   0503 02                 1690 	.db #0x02
   0504 08                 1691 	.db #0x08
   0505 0A                 1692 	.db #0x0A
   0506 12                 1693 	.db #0x12
   0507 10                 1694 	.db #0x10
   0508 00                 1695 	.db #0x00
   0509 02                 1696 	.db #0x02
   050A 08                 1697 	.db #0x08
   050B 0A                 1698 	.db #0x0A
   050C 02                 1699 	.db #0x02
   050D 08                 1700 	.db #0x08
   050E 0A                 1701 	.db #0x0A
   050F 12                 1702 	.db #0x12
   0510 10                 1703 	.db #0x10
   0511 00                 1704 	.db #0x00
   0512 02                 1705 	.db #0x02
   0513 08                 1706 	.db #0x08
   0514 0A                 1707 	.db #0x0A
   0515 12                 1708 	.db #0x12
   0516 10                 1709 	.db #0x10
   0517 00                 1710 	.db #0x00
   0518 02                 1711 	.db #0x02
   0519 08                 1712 	.db #0x08
   051A 0A                 1713 	.db #0x0A
   051B 12                 1714 	.db #0x12
   051C 08                 1715 	.db #0x08
   051D 0A                 1716 	.db #0x0A
   051E 12                 1717 	.db #0x12
   051F 10                 1718 	.db #0x10
   0520 00                 1719 	.db #0x00
   0521 02                 1720 	.db #0x02
   0522 08                 1721 	.db #0x08
   0523 0A                 1722 	.db #0x0A
   0524 12                 1723 	.db #0x12
   0525 10                 1724 	.db #0x10
   0526 00                 1725 	.db #0x00
   0527 02                 1726 	.db #0x02
   0528 08                 1727 	.db #0x08
   0529 0A                 1728 	.db #0x0A
   052A 12                 1729 	.db #0x12
   052B 10                 1730 	.db #0x10
   052C                    1731 _tri_side2:
   052C 00                 1732 	.db #0x00
   052D 10                 1733 	.db #0x10
   052E 12                 1734 	.db #0x12
   052F 0A                 1735 	.db #0x0A
   0530 08                 1736 	.db #0x08
   0531 02                 1737 	.db #0x02
   0532 00                 1738 	.db #0x00
   0533 10                 1739 	.db #0x10
   0534 12                 1740 	.db #0x12
   0535 0A                 1741 	.db #0x0A
   0536 08                 1742 	.db #0x08
   0537 02                 1743 	.db #0x02
   0538 00                 1744 	.db #0x00
   0539 10                 1745 	.db #0x10
   053A 12                 1746 	.db #0x12
   053B 0A                 1747 	.db #0x0A
   053C 02                 1748 	.db #0x02
   053D 00                 1749 	.db #0x00
   053E 10                 1750 	.db #0x10
   053F 12                 1751 	.db #0x12
   0540 0A                 1752 	.db #0x0A
   0541 08                 1753 	.db #0x08
   0542 02                 1754 	.db #0x02
   0543 00                 1755 	.db #0x00
   0544 10                 1756 	.db #0x10
   0545 12                 1757 	.db #0x12
   0546 0A                 1758 	.db #0x0A
   0547 08                 1759 	.db #0x08
   0548 02                 1760 	.db #0x02
   0549 00                 1761 	.db #0x00
   054A 10                 1762 	.db #0x10
   054B 12                 1763 	.db #0x12
   054C 08                 1764 	.db #0x08
   054D 02                 1765 	.db #0x02
   054E 00                 1766 	.db #0x00
   054F 10                 1767 	.db #0x10
   0550 12                 1768 	.db #0x12
   0551 0A                 1769 	.db #0x0A
   0552 08                 1770 	.db #0x08
   0553 02                 1771 	.db #0x02
   0554 00                 1772 	.db #0x00
   0555 10                 1773 	.db #0x10
   0556 12                 1774 	.db #0x12
   0557 0A                 1775 	.db #0x0A
   0558 08                 1776 	.db #0x08
   0559 02                 1777 	.db #0x02
   055A 00                 1778 	.db #0x00
   055B 10                 1779 	.db #0x10
   055C 0A                 1780 	.db #0x0A
   055D 08                 1781 	.db #0x08
   055E 02                 1782 	.db #0x02
   055F 00                 1783 	.db #0x00
   0560 10                 1784 	.db #0x10
   0561 12                 1785 	.db #0x12
   0562 0A                 1786 	.db #0x0A
   0563 08                 1787 	.db #0x08
   0564 02                 1788 	.db #0x02
   0565 00                 1789 	.db #0x00
   0566 10                 1790 	.db #0x10
   0567 12                 1791 	.db #0x12
   0568 0A                 1792 	.db #0x0A
   0569 08                 1793 	.db #0x08
   056A 02                 1794 	.db #0x02
   056B 00                 1795 	.db #0x00
   056C 12                 1796 	.db #0x12
   056D 0A                 1797 	.db #0x0A
   056E 08                 1798 	.db #0x08
   056F 02                 1799 	.db #0x02
   0570 00                 1800 	.db #0x00
   0571 10                 1801 	.db #0x10
   0572 12                 1802 	.db #0x12
   0573 0A                 1803 	.db #0x0A
   0574 08                 1804 	.db #0x08
   0575 02                 1805 	.db #0x02
   0576 00                 1806 	.db #0x00
   0577 10                 1807 	.db #0x10
   0578 12                 1808 	.db #0x12
   0579 0A                 1809 	.db #0x0A
   057A 08                 1810 	.db #0x08
   057B 02                 1811 	.db #0x02
   057C 10                 1812 	.db #0x10
   057D 12                 1813 	.db #0x12
   057E 0A                 1814 	.db #0x0A
   057F 08                 1815 	.db #0x08
   0580 02                 1816 	.db #0x02
   0581 00                 1817 	.db #0x00
   0582 10                 1818 	.db #0x10
   0583 12                 1819 	.db #0x12
   0584 0A                 1820 	.db #0x0A
   0585 08                 1821 	.db #0x08
   0586 02                 1822 	.db #0x02
   0587 00                 1823 	.db #0x00
   0588 10                 1824 	.db #0x10
   0589 12                 1825 	.db #0x12
   058A 0A                 1826 	.db #0x0A
   058B 08                 1827 	.db #0x08
   058C 00                 1828 	.db #0x00
   058D 10                 1829 	.db #0x10
   058E 12                 1830 	.db #0x12
   058F 0A                 1831 	.db #0x0A
   0590 08                 1832 	.db #0x08
   0591 02                 1833 	.db #0x02
   0592 00                 1834 	.db #0x00
   0593 10                 1835 	.db #0x10
   0594 12                 1836 	.db #0x12
   0595 0A                 1837 	.db #0x0A
   0596 08                 1838 	.db #0x08
   0597 02                 1839 	.db #0x02
   0598 00                 1840 	.db #0x00
   0599 10                 1841 	.db #0x10
   059A 12                 1842 	.db #0x12
   059B 0A                 1843 	.db #0x0A
   059C 02                 1844 	.db #0x02
   059D 00                 1845 	.db #0x00
   059E 10                 1846 	.db #0x10
   059F 12                 1847 	.db #0x12
   05A0 0A                 1848 	.db #0x0A
   05A1 08                 1849 	.db #0x08
   05A2 02                 1850 	.db #0x02
   05A3 00                 1851 	.db #0x00
   05A4 10                 1852 	.db #0x10
   05A5 12                 1853 	.db #0x12
   05A6 0A                 1854 	.db #0x0A
   05A7 08                 1855 	.db #0x08
   05A8 02                 1856 	.db #0x02
   05A9 00                 1857 	.db #0x00
   05AA 10                 1858 	.db #0x10
   05AB 12                 1859 	.db #0x12
   05AC 08                 1860 	.db #0x08
   05AD 02                 1861 	.db #0x02
   05AE 00                 1862 	.db #0x00
   05AF 10                 1863 	.db #0x10
   05B0 12                 1864 	.db #0x12
   05B1 0A                 1865 	.db #0x0A
   05B2 08                 1866 	.db #0x08
   05B3 02                 1867 	.db #0x02
   05B4 00                 1868 	.db #0x00
   05B5 10                 1869 	.db #0x10
   05B6 12                 1870 	.db #0x12
   05B7 0A                 1871 	.db #0x0A
   05B8 08                 1872 	.db #0x08
   05B9 02                 1873 	.db #0x02
   05BA 00                 1874 	.db #0x00
   05BB 10                 1875 	.db #0x10
   05BC 0A                 1876 	.db #0x0A
   05BD 08                 1877 	.db #0x08
   05BE 02                 1878 	.db #0x02
   05BF 00                 1879 	.db #0x00
   05C0 10                 1880 	.db #0x10
   05C1 12                 1881 	.db #0x12
   05C2 0A                 1882 	.db #0x0A
   05C3 08                 1883 	.db #0x08
   05C4 02                 1884 	.db #0x02
   05C5 00                 1885 	.db #0x00
   05C6 10                 1886 	.db #0x10
   05C7 12                 1887 	.db #0x12
   05C8 0A                 1888 	.db #0x0A
   05C9 08                 1889 	.db #0x08
   05CA 02                 1890 	.db #0x02
   05CB 00                 1891 	.db #0x00
   05CC 12                 1892 	.db #0x12
   05CD 0A                 1893 	.db #0x0A
   05CE 08                 1894 	.db #0x08
   05CF 02                 1895 	.db #0x02
   05D0 00                 1896 	.db #0x00
   05D1 10                 1897 	.db #0x10
   05D2 12                 1898 	.db #0x12
   05D3 0A                 1899 	.db #0x0A
   05D4 08                 1900 	.db #0x08
   05D5 02                 1901 	.db #0x02
   05D6 00                 1902 	.db #0x00
   05D7 10                 1903 	.db #0x10
   05D8 12                 1904 	.db #0x12
   05D9 0A                 1905 	.db #0x0A
   05DA 08                 1906 	.db #0x08
   05DB 02                 1907 	.db #0x02
   05DC 10                 1908 	.db #0x10
   05DD 12                 1909 	.db #0x12
   05DE 0A                 1910 	.db #0x0A
   05DF 08                 1911 	.db #0x08
   05E0 02                 1912 	.db #0x02
   05E1 00                 1913 	.db #0x00
   05E2 10                 1914 	.db #0x10
   05E3 12                 1915 	.db #0x12
   05E4 0A                 1916 	.db #0x0A
   05E5 08                 1917 	.db #0x08
   05E6 02                 1918 	.db #0x02
   05E7 00                 1919 	.db #0x00
   05E8 10                 1920 	.db #0x10
   05E9 12                 1921 	.db #0x12
   05EA 0A                 1922 	.db #0x0A
   05EB 08                 1923 	.db #0x08
                           1924 ;demo.c:139: void my_isr(void) interrupt
                           1925 ;	---------------------------------
                           1926 ; Function my_isr
                           1927 ; ---------------------------------
   05EC                    1928 _my_isr_start::
   05EC                    1929 _my_isr:
   05EC F5                 1930 	push	af
   05ED C5                 1931 	push	bc
   05EE D5                 1932 	push	de
   05EF E5                 1933 	push	hl
   05F0 FD E5              1934 	push	iy
                           1935 ;demo.c:141: DI;
   05F2 F3                 1936 		di 
                           1937 ;demo.c:143: READ_VDP_STATUS;
   05F3 DB 99              1938 		in a,(#0x99) 
                           1939 ;demo.c:145: PLY_Play();
   05F5 CDr00s00           1940 	call	_PLY_Play
                           1941 ;demo.c:146: PLY_SendRegisters();
   05F8 CDr00s00           1942 	call	_PLY_SendRegisters
                           1943 ;demo.c:148: vbicount+=1;
   05FB FD 21r78s2D        1944 	ld	iy,#_vbicount
   05FF FD 34 00           1945 	inc	0 (iy)
   0602 20 07              1946 	jr	NZ,00103$
   0604 FD 21r78s2D        1947 	ld	iy,#_vbicount
   0608 FD 34 01           1948 	inc	1 (iy)
   060B                    1949 00103$:
                           1950 ;demo.c:149: tick++;
   060B FD 21r7As2D        1951 	ld	iy,#_tick
   060F FD 34 00           1952 	inc	0 (iy)
   0612 20 07              1953 	jr	NZ,00104$
   0614 FD 21r7As2D        1954 	ld	iy,#_tick
   0618 FD 34 01           1955 	inc	1 (iy)
   061B                    1956 00104$:
                           1957 ;demo.c:151: EI;
   061B FB                 1958 		ei 
   061C FD E1              1959 	pop	iy
   061E E1                 1960 	pop	hl
   061F D1                 1961 	pop	de
   0620 C1                 1962 	pop	bc
   0621 F1                 1963 	pop	af
   0622 ED 4D              1964 	reti
   0624                    1965 _my_isr_end::
                           1966 ;demo.c:154: void color_isr(void) interrupt
                           1967 ;	---------------------------------
                           1968 ; Function color_isr
                           1969 ; ---------------------------------
   0624                    1970 _color_isr_start::
   0624                    1971 _color_isr:
   0624 F5                 1972 	push	af
   0625 C5                 1973 	push	bc
   0626 D5                 1974 	push	de
   0627 E5                 1975 	push	hl
   0628 FD E5              1976 	push	iy
                           1977 ;demo.c:156: DI;
   062A F3                 1978 		di 
                           1979 ;demo.c:158: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              1980 	ld	a,#0x01
   062D F5                 1981 	push	af
   062E 33                 1982 	inc	sp
   062F CDr00s00           1983 	call	_vdp2_status
   0632 33                 1984 	inc	sp
   0633 4D                 1985 	ld	c,l
   0634 21 00 00           1986 	ld	hl,#0x0000
   0637 E5                 1987 	push	hl
   0638 79                 1988 	ld	a,c
   0639 F5                 1989 	push	af
   063A 33                 1990 	inc	sp
   063B CDr00s00           1991 	call	_isNthBitSet
   063E F1                 1992 	pop	af
   063F 33                 1993 	inc	sp
   0640 44                 1994 	ld	b,h
   0641 4D                 1995 	ld	c,l
   0642 79                 1996 	ld	a,c
   0643 B0                 1997 	or	a,b
   0644 28 19              1998 	jr	Z,00102$
                           1999 ;demo.c:159: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r78s2D           2000 	ld	hl,#_vbicount + 0
   0649 4E                 2001 	ld	c,(hl)
   064A 06 00              2002 	ld	b,#0x00
   064C 21r00s00           2003 	ld	hl,#_sintab
   064F 09                 2004 	add	hl,bc
   0650 7E                 2005 	ld	a,(hl)
   0651 F5                 2006 	push	af
   0652 33                 2007 	inc	sp
   0653 3E 17              2008 	ld	a,#0x17
   0655 F5                 2009 	push	af
   0656 33                 2010 	inc	sp
   0657 CDr00s00           2011 	call	_vdp_register
   065A F1                 2012 	pop	af
                           2013 ;demo.c:160: READ_VDP_STATUS;
   065B DB 99              2014 		in a,(#0x99) 
   065D 18 18              2015 	jr	00103$
   065F                    2016 00102$:
                           2017 ;demo.c:163: READ_VDP_STATUS;
   065F DB 99              2018 		in a,(#0x99) 
                           2019 ;demo.c:164: vbicount++;
   0661 FD 21r78s2D        2020 	ld	iy,#_vbicount
   0665 FD 34 00           2021 	inc	0 (iy)
   0668 20 07              2022 	jr	NZ,00107$
   066A FD 21r78s2D        2023 	ld	iy,#_vbicount
   066E FD 34 01           2024 	inc	1 (iy)
   0671                    2025 00107$:
                           2026 ;demo.c:167: PLY_Play();
   0671 CDr00s00           2027 	call	_PLY_Play
                           2028 ;demo.c:168: PLY_SendRegisters();
   0674 CDr00s00           2029 	call	_PLY_SendRegisters
   0677                    2030 00103$:
                           2031 ;demo.c:171: EI;
   0677 FB                 2032 		ei 
   0678 FD E1              2033 	pop	iy
   067A E1                 2034 	pop	hl
   067B D1                 2035 	pop	de
   067C C1                 2036 	pop	bc
   067D F1                 2037 	pop	af
   067E ED 4D              2038 	reti
   0680                    2039 _color_isr_end::
                           2040 ;demo.c:178: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2041 ;	---------------------------------
                           2042 ; Function ge5_load
                           2043 ; ---------------------------------
   0680                    2044 _ge5_load_start::
   0680                    2045 _ge5_load:
   0680 DD E5              2046 	push	ix
   0682 DD 21 00 00        2047 	ld	ix,#0
   0686 DD 39              2048 	add	ix,sp
   0688 21 D2 FF           2049 	ld	hl,#-46
   068B 39                 2050 	add	hl,sp
   068C F9                 2051 	ld	sp,hl
                           2052 ;demo.c:182: if(debugprint == 1) {
   068D DD 7E 09           2053 	ld	a,9 (ix)
   0690 D6 01              2054 	sub	a,#0x01
   0692 20 06              2055 	jr	NZ,00125$
   0694 DD 7E 0A           2056 	ld	a,10 (ix)
   0697 B7                 2057 	or	a,a
   0698 28 02              2058 	jr	Z,00126$
   069A                    2059 00125$:
   069A 18 1B              2060 	jr	00102$
   069C                    2061 00126$:
                           2062 ;demo.c:183: puts("loading ge5file: ");
   069C 21r7Bs07           2063 	ld	hl,#__str_0
   069F E5                 2064 	push	hl
   06A0 CDr00s00           2065 	call	_puts
   06A3 F1                 2066 	pop	af
                           2067 ;demo.c:184: puts(file_name);
   06A4 DD 6E 04           2068 	ld	l,4 (ix)
   06A7 DD 66 05           2069 	ld	h,5 (ix)
   06AA E5                 2070 	push	hl
   06AB CDr00s00           2071 	call	_puts
   06AE F1                 2072 	pop	af
                           2073 ;demo.c:185: puts("\r\n");
   06AF 21r8Ds07           2074 	ld	hl,#__str_1
   06B2 E5                 2075 	push	hl
   06B3 CDr00s00           2076 	call	_puts
   06B6 F1                 2077 	pop	af
   06B7                    2078 00102$:
                           2079 ;demo.c:188: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2080 	ld	hl,#0x0000
   06BA 39                 2081 	add	hl,sp
   06BB 4D                 2082 	ld	c,l
   06BC 44                 2083 	ld	b,h
   06BD 21 2E 00           2084 	ld	hl,#0x002E
   06C0 E5                 2085 	push	hl
   06C1 3E 00              2086 	ld	a,#0x00
   06C3 F5                 2087 	push	af
   06C4 33                 2088 	inc	sp
   06C5 C5                 2089 	push	bc
   06C6 CDr00s00           2090 	call	_memset
   06C9 F1                 2091 	pop	af
   06CA F1                 2092 	pop	af
   06CB 33                 2093 	inc	sp
                           2094 ;demo.c:190: f.record_size = 128;
   06CC 21 00 00           2095 	ld	hl,#0x0000
   06CF 39                 2096 	add	hl,sp
   06D0 4D                 2097 	ld	c,l
   06D1 44                 2098 	ld	b,h
   06D2 21 0F 00           2099 	ld	hl,#0x000F
   06D5 09                 2100 	add	hl,bc
   06D6 EB                 2101 	ex	de,hl
   06D7 3E 80              2102 	ld	a,#0x80
   06D9 12                 2103 	ld	(de),a
                           2104 ;demo.c:191: f.drive = 0;
   06DA 3E 00              2105 	ld	a,#0x00
   06DC 02                 2106 	ld	(bc),a
                           2107 ;demo.c:193: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2108 	ld	e,4 (ix)
   06E0 DD 56 05           2109 	ld	d,5 (ix)
   06E3 03                 2110 	inc	bc
   06E4 21 0B 00           2111 	ld	hl,#0x000B
   06E7 E5                 2112 	push	hl
   06E8 D5                 2113 	push	de
   06E9 C5                 2114 	push	bc
   06EA CDr00s00           2115 	call	_memcpy
   06ED F1                 2116 	pop	af
   06EE F1                 2117 	pop	af
   06EF F1                 2118 	pop	af
                           2119 ;demo.c:195: if (open(&f) != 0) return 0;
   06F0 21 00 00           2120 	ld	hl,#0x0000
   06F3 39                 2121 	add	hl,sp
   06F4 E5                 2122 	push	hl
   06F5 CDr00s00           2123 	call	_open
   06F8 F1                 2124 	pop	af
   06F9 AF                 2125 	xor	a,a
   06FA B5                 2126 	or	a,l
   06FB 28 05              2127 	jr	Z,00104$
   06FD 2E 00              2128 	ld	l,#0x00
   06FF C3r76s07           2129 	jp	00116$
   0702                    2130 00104$:
                           2131 ;demo.c:196: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2132 	ld	l,7 (ix)
   0705 DD 66 08           2133 	ld	h,8 (ix)
   0708 E5                 2134 	push	hl
   0709 DD 7E 06           2135 	ld	a,6 (ix)
   070C F5                 2136 	push	af
   070D 33                 2137 	inc	sp
   070E CDr00s00           2138 	call	_vdp_set_write_address
   0711 F1                 2139 	pop	af
   0712 33                 2140 	inc	sp
                           2141 ;demo.c:198: for (i = 0; i < 213; i++) {
   0713 0E 00              2142 	ld	c,#0x00
   0715                    2143 00112$:
   0715 79                 2144 	ld	a,c
   0716 D6 D5              2145 	sub	a,#0xD5
   0718 D2r6Bs07           2146 	jp	NC,00115$
                           2147 ;demo.c:199: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2148 	push	bc
   071C 21r58s2C           2149 	ld	hl,#_scratch
   071F E5                 2150 	push	hl
   0720 CDr00s00           2151 	call	_block_set_data_ptr
   0723 F1                 2152 	pop	af
   0724 7D                 2153 	ld	a,l
   0725 C1                 2154 	pop	bc
   0726 47                 2155 	ld	b,a
   0727 B7                 2156 	or	a,a
   0728 28 05              2157 	jr	Z,00106$
   072A 2E 00              2158 	ld	l,#0x00
   072C C3r76s07           2159 	jp	00116$
   072F                    2160 00106$:
                           2161 ;demo.c:200: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2162 	ld	hl,#0x0000
   0732 39                 2163 	add	hl,sp
   0733 C5                 2164 	push	bc
   0734 E5                 2165 	push	hl
   0735 CDr00s00           2166 	call	_block_read
   0738 F1                 2167 	pop	af
   0739 7D                 2168 	ld	a,l
   073A C1                 2169 	pop	bc
   073B 47                 2170 	ld	b,a
   073C B7                 2171 	or	a,a
   073D 28 04              2172 	jr	Z,00108$
   073F 2E 00              2173 	ld	l,#0x00
   0741 18 33              2174 	jr	00116$
   0743                    2175 00108$:
                           2176 ;demo.c:202: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2177 	xor	a,a
   0744 B1                 2178 	or	a,c
   0745 20 11              2179 	jr	NZ,00110$
   0747 11r5Fs2C           2180 	ld	de,#_scratch + 7
   074A C5                 2181 	push	bc
   074B 3E 79              2182 	ld	a,#0x79
   074D F5                 2183 	push	af
   074E 33                 2184 	inc	sp
   074F D5                 2185 	push	de
   0750 CDr00s00           2186 	call	_vdp_load_screen
   0753 F1                 2187 	pop	af
   0754 33                 2188 	inc	sp
   0755 C1                 2189 	pop	bc
   0756 18 0F              2190 	jr	00114$
   0758                    2191 00110$:
                           2192 ;demo.c:203: else vdp_load_screen(scratch, 128);
   0758 C5                 2193 	push	bc
   0759 3E 80              2194 	ld	a,#0x80
   075B F5                 2195 	push	af
   075C 33                 2196 	inc	sp
   075D 21r58s2C           2197 	ld	hl,#_scratch
   0760 E5                 2198 	push	hl
   0761 CDr00s00           2199 	call	_vdp_load_screen
   0764 F1                 2200 	pop	af
   0765 33                 2201 	inc	sp
   0766 C1                 2202 	pop	bc
   0767                    2203 00114$:
                           2204 ;demo.c:198: for (i = 0; i < 213; i++) {
   0767 0C                 2205 	inc	c
   0768 C3r15s07           2206 	jp	00112$
   076B                    2207 00115$:
                           2208 ;demo.c:206: close(&f);
   076B 21 00 00           2209 	ld	hl,#0x0000
   076E 39                 2210 	add	hl,sp
   076F E5                 2211 	push	hl
   0770 CDr00s00           2212 	call	_close
   0773 F1                 2213 	pop	af
                           2214 ;demo.c:208: return 1;
   0774 2E 01              2215 	ld	l,#0x01
   0776                    2216 00116$:
   0776 DD F9              2217 	ld	sp,ix
   0778 DD E1              2218 	pop	ix
   077A C9                 2219 	ret
   077B                    2220 _ge5_load_end::
   077B                    2221 __str_0:
   077B 6C 6F 61 64 69 6E  2222 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2223 	.db 0x00
   078D                    2224 __str_1:
   078D 0D                 2225 	.db 0x0D
   078E 0A                 2226 	.db 0x0A
   078F 00                 2227 	.db 0x00
                           2228 ;demo.c:211: void scratch_clear() {
                           2229 ;	---------------------------------
                           2230 ; Function scratch_clear
                           2231 ; ---------------------------------
   0790                    2232 _scratch_clear_start::
   0790                    2233 _scratch_clear:
                           2234 ;demo.c:212: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2235 	ld	hl,#0x0080
   0793 E5                 2236 	push	hl
   0794 3E 00              2237 	ld	a,#0x00
   0796 F5                 2238 	push	af
   0797 33                 2239 	inc	sp
   0798 21r58s2C           2240 	ld	hl,#_scratch
   079B E5                 2241 	push	hl
   079C CDr00s00           2242 	call	_memset
   079F F1                 2243 	pop	af
   07A0 F1                 2244 	pop	af
   07A1 33                 2245 	inc	sp
   07A2 C9                 2246 	ret
   07A3                    2247 _scratch_clear_end::
                           2248 ;demo.c:215: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2249 ;	---------------------------------
                           2250 ; Function pal_load
                           2251 ; ---------------------------------
   07A3                    2252 _pal_load_start::
   07A3                    2253 _pal_load:
   07A3 DD E5              2254 	push	ix
   07A5 DD 21 00 00        2255 	ld	ix,#0
   07A9 DD 39              2256 	add	ix,sp
   07AB 21 D2 FF           2257 	ld	hl,#-46
   07AE 39                 2258 	add	hl,sp
   07AF F9                 2259 	ld	sp,hl
                           2260 ;demo.c:218: if(debugprint == 1) {
   07B0 DD 7E 07           2261 	ld	a,7 (ix)
   07B3 D6 01              2262 	sub	a,#0x01
   07B5 20 06              2263 	jr	NZ,00115$
   07B7 DD 7E 08           2264 	ld	a,8 (ix)
   07BA B7                 2265 	or	a,a
   07BB 28 02              2266 	jr	Z,00116$
   07BD                    2267 00115$:
   07BD 18 1B              2268 	jr	00102$
   07BF                    2269 00116$:
                           2270 ;demo.c:219: puts("loading palfile: ");
   07BF 21r6Ds08           2271 	ld	hl,#__str_2
   07C2 E5                 2272 	push	hl
   07C3 CDr00s00           2273 	call	_puts
   07C6 F1                 2274 	pop	af
                           2275 ;demo.c:220: puts(file_name);
   07C7 DD 6E 04           2276 	ld	l,4 (ix)
   07CA DD 66 05           2277 	ld	h,5 (ix)
   07CD E5                 2278 	push	hl
   07CE CDr00s00           2279 	call	_puts
   07D1 F1                 2280 	pop	af
                           2281 ;demo.c:221: puts("\r\n");
   07D2 21r7Fs08           2282 	ld	hl,#__str_3
   07D5 E5                 2283 	push	hl
   07D6 CDr00s00           2284 	call	_puts
   07D9 F1                 2285 	pop	af
   07DA                    2286 00102$:
                           2287 ;demo.c:224: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2288 	ld	hl,#0x0000
   07DD 39                 2289 	add	hl,sp
   07DE 4D                 2290 	ld	c,l
   07DF 44                 2291 	ld	b,h
   07E0 21 2E 00           2292 	ld	hl,#0x002E
   07E3 E5                 2293 	push	hl
   07E4 3E 00              2294 	ld	a,#0x00
   07E6 F5                 2295 	push	af
   07E7 33                 2296 	inc	sp
   07E8 C5                 2297 	push	bc
   07E9 CDr00s00           2298 	call	_memset
   07EC F1                 2299 	pop	af
   07ED F1                 2300 	pop	af
   07EE 33                 2301 	inc	sp
                           2302 ;demo.c:225: scratch_clear();
   07EF CDr90s07           2303 	call	_scratch_clear
                           2304 ;demo.c:227: f.record_size = ss;
   07F2 21 00 00           2305 	ld	hl,#0x0000
   07F5 39                 2306 	add	hl,sp
   07F6 4D                 2307 	ld	c,l
   07F7 44                 2308 	ld	b,h
   07F8 21 0F 00           2309 	ld	hl,#0x000F
   07FB 09                 2310 	add	hl,bc
   07FC EB                 2311 	ex	de,hl
   07FD DD 7E 06           2312 	ld	a,6 (ix)
   0800 12                 2313 	ld	(de),a
                           2314 ;demo.c:228: f.drive = 0;
   0801 3E 00              2315 	ld	a,#0x00
   0803 02                 2316 	ld	(bc),a
                           2317 ;demo.c:230: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2318 	ld	e,4 (ix)
   0807 DD 56 05           2319 	ld	d,5 (ix)
   080A 03                 2320 	inc	bc
   080B 21 0B 00           2321 	ld	hl,#0x000B
   080E E5                 2322 	push	hl
   080F D5                 2323 	push	de
   0810 C5                 2324 	push	bc
   0811 CDr00s00           2325 	call	_memcpy
   0814 F1                 2326 	pop	af
   0815 F1                 2327 	pop	af
   0816 F1                 2328 	pop	af
                           2329 ;demo.c:232: if (open(&f) != 0) return 0;
   0817 21 00 00           2330 	ld	hl,#0x0000
   081A 39                 2331 	add	hl,sp
   081B E5                 2332 	push	hl
   081C CDr00s00           2333 	call	_open
   081F F1                 2334 	pop	af
   0820 AF                 2335 	xor	a,a
   0821 B5                 2336 	or	a,l
   0822 28 04              2337 	jr	Z,00104$
   0824 2E 00              2338 	ld	l,#0x00
   0826 18 40              2339 	jr	00109$
   0828                    2340 00104$:
                           2341 ;demo.c:233: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21r58s2C           2342 	ld	hl,#_scratch
   082B E5                 2343 	push	hl
   082C CDr00s00           2344 	call	_block_set_data_ptr
   082F F1                 2345 	pop	af
   0830 AF                 2346 	xor	a,a
   0831 B5                 2347 	or	a,l
   0832 28 04              2348 	jr	Z,00106$
   0834 2E 00              2349 	ld	l,#0x00
   0836 18 30              2350 	jr	00109$
   0838                    2351 00106$:
                           2352 ;demo.c:234: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2353 	ld	hl,#0x0000
   083B 39                 2354 	add	hl,sp
   083C E5                 2355 	push	hl
   083D CDr00s00           2356 	call	_block_read
   0840 F1                 2357 	pop	af
   0841 AF                 2358 	xor	a,a
   0842 B5                 2359 	or	a,l
   0843 28 04              2360 	jr	Z,00108$
   0845 2E 00              2361 	ld	l,#0x00
   0847 18 1F              2362 	jr	00109$
   0849                    2363 00108$:
                           2364 ;demo.c:236: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2365 	ld	c,6 (ix)
   084C 06 00              2366 	ld	b,#0x00
   084E 11r5Fs2C           2367 	ld	de,#_scratch + 7
   0851 C5                 2368 	push	bc
   0852 D5                 2369 	push	de
   0853 21rD8s2C           2370 	ld	hl,#_cur_palette
   0856 E5                 2371 	push	hl
   0857 CDr00s00           2372 	call	_memcpy
   085A F1                 2373 	pop	af
   085B F1                 2374 	pop	af
   085C F1                 2375 	pop	af
                           2376 ;demo.c:238: close(&f);
   085D 21 00 00           2377 	ld	hl,#0x0000
   0860 39                 2378 	add	hl,sp
   0861 E5                 2379 	push	hl
   0862 CDr00s00           2380 	call	_close
   0865 F1                 2381 	pop	af
                           2382 ;demo.c:239: return 1;
   0866 2E 01              2383 	ld	l,#0x01
   0868                    2384 00109$:
   0868 DD F9              2385 	ld	sp,ix
   086A DD E1              2386 	pop	ix
   086C C9                 2387 	ret
   086D                    2388 _pal_load_end::
   086D                    2389 __str_2:
   086D 6C 6F 61 64 69 6E  2390 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2391 	.db 0x00
   087F                    2392 __str_3:
   087F 0D                 2393 	.db 0x0D
   0880 0A                 2394 	.db 0x0A
   0881 00                 2395 	.db 0x00
                           2396 ;demo.c:243: void pause() {
                           2397 ;	---------------------------------
                           2398 ; Function pause
                           2399 ; ---------------------------------
   0882                    2400 _pause_start::
   0882                    2401 _pause:
                           2402 ;demo.c:244: uint8_t i,j,k = 0;
                           2403 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2404 	ld	bc,#0x0000
   0885                    2405 00104$:
   0885 78                 2406 	ld	a,b
   0886 D6 FF              2407 	sub	a,#0xFF
   0888 D0                 2408 	ret	NC
                           2409 ;demo.c:246: for (j = 0; j < 255; j++) {
   0889 59                 2410 	ld	e,c
   088A 16 FF              2411 	ld	d,#0xFF
   088C                    2412 00103$:
                           2413 ;demo.c:247: k++;
   088C 1C                 2414 	inc	e
   088D 15                 2415 	dec	d
                           2416 ;demo.c:246: for (j = 0; j < 255; j++) {
   088E AF                 2417 	xor	a,a
   088F B2                 2418 	or	a,d
   0890 20 FA              2419 	jr	NZ,00103$
                           2420 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0892 4B                 2421 	ld	c,e
   0893 04                 2422 	inc	b
   0894 18 EF              2423 	jr	00104$
   0896                    2424 _pause_end::
                           2425 ;demo.c:253: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2426 ;	---------------------------------
                           2427 ; Function raw_load
                           2428 ; ---------------------------------
   0896                    2429 _raw_load_start::
   0896                    2430 _raw_load:
   0896 DD E5              2431 	push	ix
   0898 DD 21 00 00        2432 	ld	ix,#0
   089C DD 39              2433 	add	ix,sp
   089E 21 D2 FF           2434 	ld	hl,#-46
   08A1 39                 2435 	add	hl,sp
   08A2 F9                 2436 	ld	sp,hl
                           2437 ;demo.c:258: if(debugprint == 1) {
   08A3 DD 7E 0A           2438 	ld	a,10 (ix)
   08A6 D6 01              2439 	sub	a,#0x01
   08A8 20 06              2440 	jr	NZ,00120$
   08AA DD 7E 0B           2441 	ld	a,11 (ix)
   08AD B7                 2442 	or	a,a
   08AE 28 02              2443 	jr	Z,00121$
   08B0                    2444 00120$:
   08B0 18 1B              2445 	jr	00102$
   08B2                    2446 00121$:
                           2447 ;demo.c:259: puts("loading rawfile: ");
   08B2 21r84s09           2448 	ld	hl,#__str_4
   08B5 E5                 2449 	push	hl
   08B6 CDr00s00           2450 	call	_puts
   08B9 F1                 2451 	pop	af
                           2452 ;demo.c:260: puts(file_name);
   08BA DD 6E 04           2453 	ld	l,4 (ix)
   08BD DD 66 05           2454 	ld	h,5 (ix)
   08C0 E5                 2455 	push	hl
   08C1 CDr00s00           2456 	call	_puts
   08C4 F1                 2457 	pop	af
                           2458 ;demo.c:261: puts("\r\n");
   08C5 21r96s09           2459 	ld	hl,#__str_5
   08C8 E5                 2460 	push	hl
   08C9 CDr00s00           2461 	call	_puts
   08CC F1                 2462 	pop	af
   08CD                    2463 00102$:
                           2464 ;demo.c:264: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2465 	ld	hl,#0x0000
   08D0 39                 2466 	add	hl,sp
   08D1 4D                 2467 	ld	c,l
   08D2 44                 2468 	ld	b,h
   08D3 21 2E 00           2469 	ld	hl,#0x002E
   08D6 E5                 2470 	push	hl
   08D7 3E 00              2471 	ld	a,#0x00
   08D9 F5                 2472 	push	af
   08DA 33                 2473 	inc	sp
   08DB C5                 2474 	push	bc
   08DC CDr00s00           2475 	call	_memset
   08DF F1                 2476 	pop	af
   08E0 F1                 2477 	pop	af
   08E1 33                 2478 	inc	sp
                           2479 ;demo.c:265: scratch_clear();
   08E2 CDr90s07           2480 	call	_scratch_clear
                           2481 ;demo.c:267: f.record_size = 128;
   08E5 21 00 00           2482 	ld	hl,#0x0000
   08E8 39                 2483 	add	hl,sp
   08E9 4D                 2484 	ld	c,l
   08EA 44                 2485 	ld	b,h
   08EB 21 0F 00           2486 	ld	hl,#0x000F
   08EE 09                 2487 	add	hl,bc
   08EF EB                 2488 	ex	de,hl
   08F0 3E 80              2489 	ld	a,#0x80
   08F2 12                 2490 	ld	(de),a
                           2491 ;demo.c:268: f.drive = 0;
   08F3 3E 00              2492 	ld	a,#0x00
   08F5 02                 2493 	ld	(bc),a
                           2494 ;demo.c:270: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2495 	ld	e,4 (ix)
   08F9 DD 56 05           2496 	ld	d,5 (ix)
   08FC 03                 2497 	inc	bc
   08FD 21 0B 00           2498 	ld	hl,#0x000B
   0900 E5                 2499 	push	hl
   0901 D5                 2500 	push	de
   0902 C5                 2501 	push	bc
   0903 CDr00s00           2502 	call	_memcpy
   0906 F1                 2503 	pop	af
   0907 F1                 2504 	pop	af
   0908 F1                 2505 	pop	af
                           2506 ;demo.c:272: if (open(&f) != 0) return 0;
   0909 21 00 00           2507 	ld	hl,#0x0000
   090C 39                 2508 	add	hl,sp
   090D E5                 2509 	push	hl
   090E CDr00s00           2510 	call	_open
   0911 F1                 2511 	pop	af
   0912 AF                 2512 	xor	a,a
   0913 B5                 2513 	or	a,l
   0914 28 05              2514 	jr	Z,00119$
   0916 2E 00              2515 	ld	l,#0x00
   0918 C3r7Fs09           2516 	jp	00112$
                           2517 ;demo.c:274: while(total < size) {
   091B                    2518 00119$:
   091B 01 00 00           2519 	ld	bc,#0x0000
   091E                    2520 00109$:
   091E 79                 2521 	ld	a,c
   091F DD 96 06           2522 	sub	a,6 (ix)
   0922 78                 2523 	ld	a,b
   0923 DD 9E 07           2524 	sbc	a,7 (ix)
   0926 F2r74s09           2525 	jp	P,00111$
                           2526 ;demo.c:275: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2527 	push	bc
   092A 21r58s2C           2528 	ld	hl,#_scratch
   092D E5                 2529 	push	hl
   092E CDr00s00           2530 	call	_block_set_data_ptr
   0931 F1                 2531 	pop	af
   0932 5D                 2532 	ld	e,l
   0933 C1                 2533 	pop	bc
   0934 AF                 2534 	xor	a,a
   0935 B3                 2535 	or	a,e
   0936 28 04              2536 	jr	Z,00106$
   0938 2E 00              2537 	ld	l,#0x00
   093A 18 43              2538 	jr	00112$
   093C                    2539 00106$:
                           2540 ;demo.c:276: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2541 	ld	hl,#0x0000
   093F 39                 2542 	add	hl,sp
   0940 C5                 2543 	push	bc
   0941 E5                 2544 	push	hl
   0942 CDr00s00           2545 	call	_block_read
   0945 F1                 2546 	pop	af
   0946 5D                 2547 	ld	e,l
   0947 C1                 2548 	pop	bc
   0948 AF                 2549 	xor	a,a
   0949 B3                 2550 	or	a,e
   094A 28 04              2551 	jr	Z,00108$
   094C 2E 00              2552 	ld	l,#0x00
   094E 18 2F              2553 	jr	00112$
   0950                    2554 00108$:
                           2555 ;demo.c:278: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2556 	ld	a,8 (ix)
   0953 81                 2557 	add	a,c
   0954 5F                 2558 	ld	e,a
   0955 DD 7E 09           2559 	ld	a,9 (ix)
   0958 88                 2560 	adc	a,b
   0959 57                 2561 	ld	d,a
   095A C5                 2562 	push	bc
   095B 21 80 00           2563 	ld	hl,#0x0080
   095E E5                 2564 	push	hl
   095F 21r58s2C           2565 	ld	hl,#_scratch
   0962 E5                 2566 	push	hl
   0963 D5                 2567 	push	de
   0964 CDr00s00           2568 	call	_memcpy
   0967 F1                 2569 	pop	af
   0968 F1                 2570 	pop	af
   0969 F1                 2571 	pop	af
   096A C1                 2572 	pop	bc
                           2573 ;demo.c:280: total+=incr;
   096B 21 80 00           2574 	ld	hl,#0x0080
   096E 09                 2575 	add	hl,bc
   096F 4D                 2576 	ld	c,l
   0970 44                 2577 	ld	b,h
   0971 C3r1Es09           2578 	jp	00109$
   0974                    2579 00111$:
                           2580 ;demo.c:283: close(&f);
   0974 21 00 00           2581 	ld	hl,#0x0000
   0977 39                 2582 	add	hl,sp
   0978 E5                 2583 	push	hl
   0979 CDr00s00           2584 	call	_close
   097C F1                 2585 	pop	af
                           2586 ;demo.c:285: return 1;
   097D 2E 01              2587 	ld	l,#0x01
   097F                    2588 00112$:
   097F DD F9              2589 	ld	sp,ix
   0981 DD E1              2590 	pop	ix
   0983 C9                 2591 	ret
   0984                    2592 _raw_load_end::
   0984                    2593 __str_4:
   0984 6C 6F 61 64 69 6E  2594 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2595 	.db 0x00
   0996                    2596 __str_5:
   0996 0D                 2597 	.db 0x0D
   0997 0A                 2598 	.db 0x0A
   0998 00                 2599 	.db 0x00
                           2600 ;demo.c:288: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2601 ;	---------------------------------
                           2602 ; Function pck_load
                           2603 ; ---------------------------------
   0999                    2604 _pck_load_start::
   0999                    2605 _pck_load:
   0999 DD E5              2606 	push	ix
   099B DD 21 00 00        2607 	ld	ix,#0
   099F DD 39              2608 	add	ix,sp
                           2609 ;demo.c:289: if(debugprint == 1) {
   09A1 DD 7E 0C           2610 	ld	a,12 (ix)
   09A4 D6 01              2611 	sub	a,#0x01
   09A6 20 06              2612 	jr	NZ,00106$
   09A8 DD 7E 0D           2613 	ld	a,13 (ix)
   09AB B7                 2614 	or	a,a
   09AC 28 02              2615 	jr	Z,00107$
   09AE                    2616 00106$:
   09AE 18 1B              2617 	jr	00102$
   09B0                    2618 00107$:
                           2619 ;demo.c:290: puts("loading pckfile: ");
   09B0 21r12s0A           2620 	ld	hl,#__str_6
   09B3 E5                 2621 	push	hl
   09B4 CDr00s00           2622 	call	_puts
   09B7 F1                 2623 	pop	af
                           2624 ;demo.c:291: puts(file_name);
   09B8 DD 6E 04           2625 	ld	l,4 (ix)
   09BB DD 66 05           2626 	ld	h,5 (ix)
   09BE E5                 2627 	push	hl
   09BF CDr00s00           2628 	call	_puts
   09C2 F1                 2629 	pop	af
                           2630 ;demo.c:292: puts("\r\n");
   09C3 21r24s0A           2631 	ld	hl,#__str_7
   09C6 E5                 2632 	push	hl
   09C7 CDr00s00           2633 	call	_puts
   09CA F1                 2634 	pop	af
   09CB                    2635 00102$:
                           2636 ;demo.c:294: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2637 	ld	c,6 (ix)
   09CE DD 46 07           2638 	ld	b,7 (ix)
   09D1 C5                 2639 	push	bc
   09D2 C5                 2640 	push	bc
   09D3 3E 00              2641 	ld	a,#0x00
   09D5 F5                 2642 	push	af
   09D6 33                 2643 	inc	sp
   09D7 21r60s01           2644 	ld	hl,#_packbuffer
   09DA E5                 2645 	push	hl
   09DB CDr00s00           2646 	call	_memset
   09DE F1                 2647 	pop	af
   09DF F1                 2648 	pop	af
   09E0 33                 2649 	inc	sp
   09E1 C1                 2650 	pop	bc
                           2651 ;demo.c:295: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2652 	ld	hl,#0x0000
   09E5 E5                 2653 	push	hl
   09E6 21r60s01           2654 	ld	hl,#_packbuffer
   09E9 E5                 2655 	push	hl
   09EA C5                 2656 	push	bc
   09EB DD 6E 04           2657 	ld	l,4 (ix)
   09EE DD 66 05           2658 	ld	h,5 (ix)
   09F1 E5                 2659 	push	hl
   09F2 CDr96s08           2660 	call	_raw_load
   09F5 F1                 2661 	pop	af
   09F6 F1                 2662 	pop	af
   09F7 F1                 2663 	pop	af
   09F8 F1                 2664 	pop	af
                           2665 ;demo.c:296: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2666 	ld	a,10 (ix)
   09FC F5                 2667 	push	af
   09FD 33                 2668 	inc	sp
   09FE DD 6E 08           2669 	ld	l,8 (ix)
   0A01 DD 66 09           2670 	ld	h,9 (ix)
   0A04 E5                 2671 	push	hl
   0A05 21r60s01           2672 	ld	hl,#_packbuffer
   0A08 E5                 2673 	push	hl
   0A09 CDr00s00           2674 	call	_bitbuster
   0A0C F1                 2675 	pop	af
   0A0D F1                 2676 	pop	af
   0A0E 33                 2677 	inc	sp
   0A0F DD E1              2678 	pop	ix
   0A11 C9                 2679 	ret
   0A12                    2680 _pck_load_end::
   0A12                    2681 __str_6:
   0A12 6C 6F 61 64 69 6E  2682 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2683 	.db 0x00
   0A24                    2684 __str_7:
   0A24 0D                 2685 	.db 0x0D
   0A25 0A                 2686 	.db 0x0A
   0A26 00                 2687 	.db 0x00
                           2688 ;demo.c:299: void fadein() {
                           2689 ;	---------------------------------
                           2690 ; Function fadein
                           2691 ; ---------------------------------
   0A27                    2692 _fadein_start::
   0A27                    2693 _fadein:
   0A27 DD E5              2694 	push	ix
   0A29 DD 21 00 00        2695 	ld	ix,#0
   0A2D DD 39              2696 	add	ix,sp
   0A2F F5                 2697 	push	af
                           2698 ;demo.c:302: if (tick < 4) return;
   0A30 3Ar7As2D           2699 	ld	a,(#_tick+0)
   0A33 D6 04              2700 	sub	a,#0x04
   0A35 3Ar7Bs2D           2701 	ld	a,(#_tick+1)
   0A38 DE 00              2702 	sbc	a,#0x00
   0A3A F2r40s0A           2703 	jp	P,00102$
   0A3D C3rEEs0A           2704 	jp	00113$
   0A40                    2705 00102$:
                           2706 ;demo.c:304: tick = 0;
   0A40 21r7As2D           2707 	ld	hl,#_tick + 0
   0A43 36 00              2708 	ld	(hl), #0x00
   0A45 21r7Bs2D           2709 	ld	hl,#_tick + 1
   0A48 36 00              2710 	ld	(hl), #0x00
                           2711 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2712 	ld	c,#0x00
   0A4C                    2713 00109$:
   0A4C 79                 2714 	ld	a,c
   0A4D D6 20              2715 	sub	a,#0x20
   0A4F D2rE6s0A           2716 	jp	NC,00112$
                           2717 ;demo.c:307: uint8_t r = scratch[i] >> 4;
   0A52 3Er58              2718 	ld	a,#<_scratch
   0A54 81                 2719 	add	a,c
   0A55 5F                 2720 	ld	e,a
   0A56 3Es2C              2721 	ld	a,#>_scratch
   0A58 CE 00              2722 	adc	a,#0x00
   0A5A 57                 2723 	ld	d,a
   0A5B 1A                 2724 	ld	a,(de)
   0A5C 47                 2725 	ld	b,a
   0A5D 58                 2726 	ld	e,b
   0A5E CB 3B              2727 	srl	e
   0A60 CB 3B              2728 	srl	e
   0A62 CB 3B              2729 	srl	e
   0A64 CB 3B              2730 	srl	e
                           2731 ;demo.c:308: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2732 	ld	a,b
   0A67 E6 0F              2733 	and	a,#0x0F
   0A69 DD 77 FF           2734 	ld	-1 (ix),a
                           2735 ;demo.c:309: uint8_t g = scratch[i+1];
   0A6C 51                 2736 	ld	d,c
   0A6D 14                 2737 	inc	d
   0A6E 3Er58              2738 	ld	a,#<_scratch
   0A70 82                 2739 	add	a,d
   0A71 6F                 2740 	ld	l,a
   0A72 3Es2C              2741 	ld	a,#>_scratch
   0A74 CE 00              2742 	adc	a,#0x00
   0A76 67                 2743 	ld	h,a
   0A77 56                 2744 	ld	d,(hl)
   0A78 DD 72 FE           2745 	ld	-2 (ix),d
                           2746 ;demo.c:311: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3ErD8              2747 	ld	a,#<_cur_palette
   0A7D 81                 2748 	add	a,c
   0A7E 6F                 2749 	ld	l,a
   0A7F 3Es2C              2750 	ld	a,#>_cur_palette
   0A81 CE 00              2751 	adc	a,#0x00
   0A83 67                 2752 	ld	h,a
   0A84 56                 2753 	ld	d,(hl)
   0A85 CB 3A              2754 	srl	d
   0A87 CB 3A              2755 	srl	d
   0A89 CB 3A              2756 	srl	d
   0A8B CB 3A              2757 	srl	d
   0A8D 7B                 2758 	ld	a,e
   0A8E 92                 2759 	sub	a,d
   0A8F 30 01              2760 	jr	NC,00104$
   0A91 1C                 2761 	inc	e
   0A92                    2762 00104$:
                           2763 ;demo.c:312: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3ErD8              2764 	ld	a,#<_cur_palette
   0A94 81                 2765 	add	a,c
   0A95 6F                 2766 	ld	l,a
   0A96 3Es2C              2767 	ld	a,#>_cur_palette
   0A98 CE 00              2768 	adc	a,#0x00
   0A9A 67                 2769 	ld	h,a
   0A9B 7E                 2770 	ld	a,(hl)
   0A9C E6 0F              2771 	and	a,#0x0F
   0A9E 47                 2772 	ld	b,a
   0A9F DD 7E FF           2773 	ld	a,-1 (ix)
   0AA2 90                 2774 	sub	a,b
   0AA3 30 03              2775 	jr	NC,00106$
   0AA5 DD 34 FF           2776 	inc	-1 (ix)
   0AA8                    2777 00106$:
                           2778 ;demo.c:314: scratch[i] = (r << 4) | b;
   0AA8 3Er58              2779 	ld	a,#<_scratch
   0AAA 81                 2780 	add	a,c
   0AAB 47                 2781 	ld	b,a
   0AAC 3Es2C              2782 	ld	a,#>_scratch
   0AAE CE 00              2783 	adc	a,#0x00
   0AB0 57                 2784 	ld	d,a
   0AB1 7B                 2785 	ld	a,e
   0AB2 07                 2786 	rlca
   0AB3 07                 2787 	rlca
   0AB4 07                 2788 	rlca
   0AB5 07                 2789 	rlca
   0AB6 E6 F0              2790 	and	a,#0xF0
   0AB8 DD B6 FF           2791 	or	a,-1 (ix)
   0ABB 68                 2792 	ld	l,b
   0ABC 62                 2793 	ld	h,d
   0ABD 77                 2794 	ld	(hl),a
                           2795 ;demo.c:315: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2796 	ld	b,c
   0ABF 04                 2797 	inc	b
   0AC0 3ErD8              2798 	ld	a,#<_cur_palette
   0AC2 80                 2799 	add	a,b
   0AC3 5F                 2800 	ld	e,a
   0AC4 3Es2C              2801 	ld	a,#>_cur_palette
   0AC6 CE 00              2802 	adc	a,#0x00
   0AC8 57                 2803 	ld	d,a
   0AC9 1A                 2804 	ld	a,(de)
   0ACA 5F                 2805 	ld	e,a
   0ACB DD 7E FE           2806 	ld	a,-2 (ix)
   0ACE 93                 2807 	sub	a,e
   0ACF 30 10              2808 	jr	NC,00111$
   0AD1 3Er58              2809 	ld	a,#<_scratch
   0AD3 80                 2810 	add	a,b
   0AD4 47                 2811 	ld	b,a
   0AD5 3Es2C              2812 	ld	a,#>_scratch
   0AD7 CE 00              2813 	adc	a,#0x00
   0AD9 5F                 2814 	ld	e,a
   0ADA 68                 2815 	ld	l,b
   0ADB 67                 2816 	ld	h,a
   0ADC 7E                 2817 	ld	a,(hl)
   0ADD 3C                 2818 	inc	a
   0ADE 68                 2819 	ld	l,b
   0ADF 63                 2820 	ld	h,e
   0AE0 77                 2821 	ld	(hl),a
   0AE1                    2822 00111$:
                           2823 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2824 	inc	c
   0AE2 0C                 2825 	inc	c
   0AE3 C3r4Cs0A           2826 	jp	00109$
   0AE6                    2827 00112$:
                           2828 ;demo.c:319: vdp_load_palette(scratch);
   0AE6 21r58s2C           2829 	ld	hl,#_scratch
   0AE9 E5                 2830 	push	hl
   0AEA CDr00s00           2831 	call	_vdp_load_palette
   0AED F1                 2832 	pop	af
   0AEE                    2833 00113$:
   0AEE DD F9              2834 	ld	sp,ix
   0AF0 DD E1              2835 	pop	ix
   0AF2 C9                 2836 	ret
   0AF3                    2837 _fadein_end::
                           2838 ;demo.c:331: void do_ymmm() {
                           2839 ;	---------------------------------
                           2840 ; Function do_ymmm
                           2841 ; ---------------------------------
   0AF3                    2842 _do_ymmm_start::
   0AF3                    2843 _do_ymmm:
   0AF3 DD E5              2844 	push	ix
   0AF5 DD 21 00 00        2845 	ld	ix,#0
   0AF9 DD 39              2846 	add	ix,sp
   0AFB F5                 2847 	push	af
                           2848 ;demo.c:335: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              2849 	ld	a,#0x20
   0AFE FD 21r7As2D        2850 	ld	iy,#_tick
   0B02 FD 96 00           2851 	sub	a,0 (iy)
   0B05 3E 00              2852 	ld	a,#0x00
   0B07 FD 21r7As2D        2853 	ld	iy,#_tick
   0B0B FD 9E 01           2854 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           2855 	jp	P,00102$
   0B11 21r7As2D           2856 	ld	hl,#_tick + 0
   0B14 36 00              2857 	ld	(hl), #0x00
   0B16 21r7Bs2D           2858 	ld	hl,#_tick + 1
   0B19 36 00              2859 	ld	(hl), #0x00
   0B1B FD 21r95s2D        2860 	ld	iy,#_flipper
   0B1F FD 34 00           2861 	inc	0 (iy)
   0B22 20 07              2862 	jr	NZ,00115$
   0B24 FD 21r95s2D        2863 	ld	iy,#_flipper
   0B28 FD 34 01           2864 	inc	1 (iy)
   0B2B                    2865 00115$:
   0B2B                    2866 00102$:
                           2867 ;demo.c:336: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              2868 	ld	a,#0x0A
   0B2D FD 21r95s2D        2869 	ld	iy,#_flipper
   0B31 FD 96 00           2870 	sub	a,0 (iy)
   0B34 3E 00              2871 	ld	a,#0x00
   0B36 FD 21r95s2D        2872 	ld	iy,#_flipper
   0B3A FD 9E 01           2873 	sbc	a,1 (iy)
   0B3D F2r4As0B           2874 	jp	P,00104$
   0B40 21r95s2D           2875 	ld	hl,#_flipper + 0
   0B43 36 00              2876 	ld	(hl), #0x00
   0B45 21r96s2D           2877 	ld	hl,#_flipper + 1
   0B48 36 00              2878 	ld	(hl), #0x00
   0B4A                    2879 00104$:
                           2880 ;demo.c:338: ymmmf++;
   0B4A FD 21r97s2D        2881 	ld	iy,#_ymmmf
   0B4E FD 34 00           2882 	inc	0 (iy)
   0B51 20 07              2883 	jr	NZ,00116$
   0B53 FD 21r97s2D        2884 	ld	iy,#_ymmmf
   0B57 FD 34 01           2885 	inc	1 (iy)
   0B5A                    2886 00116$:
                           2887 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r93s2D           2888 	ld	hl,#_yofff + 0
   0B5D 36 00              2889 	ld	(hl), #0x00
   0B5F                    2890 00105$:
   0B5F 21r93s2D           2891 	ld	hl,#_yofff + 0
   0B62 4E                 2892 	ld	c,(hl)
   0B63 06 00              2893 	ld	b,#0x00
   0B65 79                 2894 	ld	a,c
   0B66 D6 D2              2895 	sub	a,#0xD2
   0B68 78                 2896 	ld	a,b
   0B69 DE 00              2897 	sbc	a,#0x00
   0B6B F2rE4s0B           2898 	jp	P,00109$
                           2899 ;demo.c:340: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r97s2D           2900 	ld	hl,#_ymmmf
   0B71 79                 2901 	ld	a,c
   0B72 86                 2902 	add	a,(hl)
   0B73 5F                 2903 	ld	e,a
   0B74 78                 2904 	ld	a,b
   0B75 23                 2905 	inc	hl
   0B76 8E                 2906 	adc	a,(hl)
   0B77 16 00              2907 	ld	d,#0x00
   0B79 CB 23              2908 	sla	e
   0B7B CB 12              2909 	rl	d
   0B7D 21r2Cs00           2910 	ld	hl,#_sintabx
   0B80 19                 2911 	add	hl,de
   0B81 5E                 2912 	ld	e,(hl)
   0B82 23                 2913 	inc	hl
   0B83 56                 2914 	ld	d,(hl)
   0B84 DD 73 FE           2915 	ld	-2 (ix),e
   0B87 DD 72 FF           2916 	ld	-1 (ix),d
                           2917 ;demo.c:343: cmd.source_x = 0;
   0B8A 21r7Cs2D           2918 	ld	hl,#_cmd
   0B8D 36 00              2919 	ld	(hl),#0x00
   0B8F 23                 2920 	inc	hl
   0B90 36 00              2921 	ld	(hl),#0x00
                           2922 ;demo.c:344: cmd.source_y = 0+yofff;
   0B92 11r7Es2D           2923 	ld	de,#_cmd + 2
   0B95 EB                 2924 	ex	de,hl
   0B96 71                 2925 	ld	(hl),c
   0B97 23                 2926 	inc	hl
   0B98 70                 2927 	ld	(hl),b
                           2928 ;demo.c:345: cmd.dest_x = xo;
   0B99 11r80s2D           2929 	ld	de,#_cmd + 4
   0B9C EB                 2930 	ex	de,hl
   0B9D DD 7E FE           2931 	ld	a,-2 (ix)
   0BA0 77                 2932 	ld	(hl),a
   0BA1 23                 2933 	inc	hl
   0BA2 DD 7E FF           2934 	ld	a,-1 (ix)
   0BA5 77                 2935 	ld	(hl),a
                           2936 ;demo.c:346: cmd.dest_y = 3+yofff;
   0BA6 11r82s2D           2937 	ld	de,#_cmd + 6
   0BA9 03                 2938 	inc	bc
   0BAA 03                 2939 	inc	bc
   0BAB 03                 2940 	inc	bc
   0BAC 6B                 2941 	ld	l,e
   0BAD 62                 2942 	ld	h,d
   0BAE 71                 2943 	ld	(hl),c
   0BAF 23                 2944 	inc	hl
   0BB0 70                 2945 	ld	(hl),b
                           2946 ;demo.c:347: cmd.size_x = 256;
   0BB1 21r84s2D           2947 	ld	hl, #_cmd + 8
   0BB4 36 00              2948 	ld	(hl),#0x00
   0BB6 23                 2949 	inc	hl
   0BB7 36 01              2950 	ld	(hl),#0x01
                           2951 ;demo.c:348: cmd.size_y = 1;
   0BB9 21r86s2D           2952 	ld	hl, #_cmd + 10
   0BBC 36 01              2953 	ld	(hl),#0x01
   0BBE 23                 2954 	inc	hl
   0BBF 36 00              2955 	ld	(hl),#0x00
                           2956 ;demo.c:349: cmd.data = 0;
                           2957 ;demo.c:350: cmd.argument = 0;
   0BC1 3E 00              2958 	ld	a,#0x00
   0BC3 32r88s2D           2959 	ld	(#_cmd + 12),a
   0BC6 32r89s2D           2960 	ld	(#_cmd + 13),a
                           2961 ;demo.c:351: cmd.command = 0xD0;
   0BC9 3E D0              2962 	ld	a,#0xD0
   0BCB 32r8As2D           2963 	ld	(#_cmd + 14),a
                           2964 ;demo.c:354: vdp_copier(&cmd);
   0BCE 21r7Cs2D           2965 	ld	hl,#_cmd
   0BD1 E5                 2966 	push	hl
   0BD2 CDr00s00           2967 	call	_vdp_copier
   0BD5 F1                 2968 	pop	af
                           2969 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r93s2D           2970 	ld	hl,#_yofff + 0
   0BD9 4E                 2971 	ld	c,(hl)
   0BDA 21r93s2D           2972 	ld	hl,#_yofff
   0BDD 79                 2973 	ld	a,c
   0BDE C6 02              2974 	add	a,#0x02
   0BE0 77                 2975 	ld	(hl),a
   0BE1 C3r5Fs0B           2976 	jp	00105$
   0BE4                    2977 00109$:
   0BE4 DD F9              2978 	ld	sp,ix
   0BE6 DD E1              2979 	pop	ix
   0BE8 C9                 2980 	ret
   0BE9                    2981 _do_ymmm_end::
                           2982 ;demo.c:371: void do_blocks() {
                           2983 ;	---------------------------------
                           2984 ; Function do_blocks
                           2985 ; ---------------------------------
   0BE9                    2986 _do_blocks_start::
   0BE9                    2987 _do_blocks:
   0BE9 DD E5              2988 	push	ix
   0BEB DD 21 00 00        2989 	ld	ix,#0
   0BEF DD 39              2990 	add	ix,sp
   0BF1 21 FA FF           2991 	ld	hl,#-6
   0BF4 39                 2992 	add	hl,sp
   0BF5 F9                 2993 	ld	sp,hl
                           2994 ;demo.c:373: int ys = 0;
   0BF6 DD 36 FC 00        2995 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        2996 	ld	-3 (ix),#0x00
                           2997 ;demo.c:374: int ye = 0;
   0BFE DD 36 FA 00        2998 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        2999 	ld	-5 (ix),#0x00
                           3000 ;demo.c:376: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3001 	ld	hl,#0x0017
   0C09 E5                 3002 	push	hl
   0C0A CDr00s00           3003 	call	_vdp_register
   0C0D F1                 3004 	pop	af
                           3005 ;demo.c:378: if (block_init == 0) {
   0C0E AF                 3006 	xor	a,a
   0C0F FD 21r99s2D        3007 	ld	iy,#_block_init
   0C13 FD B6 00           3008 	or	a,0 (iy)
   0C16 C2r7Es0C           3009 	jp	NZ,00108$
                           3010 ;demo.c:380: vdp_set_screen5();
   0C19 CDr00s00           3011 	call	_vdp_set_screen5
                           3012 ;demo.c:382: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3013 	ld	hl,#0x5F02
   0C1F E5                 3014 	push	hl
   0C20 CDr00s00           3015 	call	_vdp_register
   0C23 F1                 3016 	pop	af
                           3017 ;demo.c:384: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3018 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3019 	ld	-1 (ix),#0x00
   0C2C                    3020 00110$:
   0C2C DD 7E FE           3021 	ld	a,-2 (ix)
   0C2F D6 10              3022 	sub	a,#0x10
   0C31 DD 7E FF           3023 	ld	a,-1 (ix)
   0C34 DE 00              3024 	sbc	a,#0x00
   0C36 F2r6Es0C           3025 	jp	P,00113$
   0C39 DD 4E FE           3026 	ld	c,-2 (ix)
   0C3C DD 46 FF           3027 	ld	b,-1 (ix)
   0C3F CB 21              3028 	sla	c
   0C41 CB 10              3029 	rl	b
   0C43 21rA2s2D           3030 	ld	hl,#_btab
   0C46 09                 3031 	add	hl,bc
   0C47 4D                 3032 	ld	c,l
   0C48 44                 3033 	ld	b,h
   0C49 DD 5E FE           3034 	ld	e,-2 (ix)
   0C4C DD 56 FF           3035 	ld	d,-1 (ix)
   0C4F CB 23              3036 	sla	e
   0C51 CB 12              3037 	rl	d
   0C53 CB 23              3038 	sla	e
   0C55 CB 12              3039 	rl	d
   0C57 CB 23              3040 	sla	e
   0C59 CB 12              3041 	rl	d
   0C5B CB 23              3042 	sla	e
   0C5D CB 12              3043 	rl	d
   0C5F 69                 3044 	ld	l,c
   0C60 60                 3045 	ld	h,b
   0C61 73                 3046 	ld	(hl),e
   0C62 23                 3047 	inc	hl
   0C63 72                 3048 	ld	(hl),d
   0C64 DD 34 FE           3049 	inc	-2 (ix)
   0C67 20 03              3050 	jr	NZ,00139$
   0C69 DD 34 FF           3051 	inc	-1 (ix)
   0C6C                    3052 00139$:
   0C6C 18 BE              3053 	jr	00110$
   0C6E                    3054 00113$:
                           3055 ;demo.c:385: vdp_load_palette(block_palette);
   0C6E 21rF8s2C           3056 	ld	hl,#_block_palette
   0C71 E5                 3057 	push	hl
   0C72 CDr00s00           3058 	call	_vdp_load_palette
   0C75 F1                 3059 	pop	af
                           3060 ;demo.c:387: block_init = 1;
   0C76 21r99s2D           3061 	ld	hl,#_block_init + 0
   0C79 36 01              3062 	ld	(hl), #0x01
   0C7B C3r07s0E           3063 	jp	00122$
   0C7E                    3064 00108$:
                           3065 ;demo.c:391: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3ArC2s2D           3066 	ld	a,(#_flof+0)
   0C81 FD 21rC2s2D        3067 	ld	iy,#_flof
   0C85 FD B6 01           3068 	or	a,1 (iy)
   0C88 20 10              3069 	jr	NZ,00102$
   0C8A DD 36 FC 00        3070 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3071 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3072 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3073 	ld	-5 (ix),#0x00
   0C9A                    3074 00102$:
                           3075 ;demo.c:392: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3ArC2s2D           3076 	ld	a,(#_flof+0)
   0C9D D6 01              3077 	sub	a,#0x01
   0C9F 20 06              3078 	jr	NZ,00140$
   0CA1 3ArC3s2D           3079 	ld	a,(#_flof+1)
   0CA4 B7                 3080 	or	a,a
   0CA5 28 02              3081 	jr	Z,00141$
   0CA7                    3082 00140$:
   0CA7 18 10              3083 	jr	00104$
   0CA9                    3084 00141$:
   0CA9 DD 36 FC 08        3085 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3086 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3087 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3088 	ld	-5 (ix),#0x00
   0CB9                    3089 00104$:
                           3090 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0CB9 FD 21rA0s2D        3091 	ld	iy,#_bty
   0CBD FD 36 00 03        3092 	ld	0 (iy),#0x03
   0CC1 FD 21rA0s2D        3093 	ld	iy,#_bty
   0CC5 FD 36 01 00        3094 	ld	1 (iy),#0x00
   0CC9                    3095 00118$:
   0CC9 3ArA0s2D           3096 	ld	a,(#_bty+0)
   0CCC D6 0B              3097 	sub	a,#0x0B
   0CCE 3ArA1s2D           3098 	ld	a,(#_bty+1)
   0CD1 DE 00              3099 	sbc	a,#0x00
   0CD3 F2rDEs0D           3100 	jp	P,00121$
                           3101 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3102 	ld	a,-4 (ix)
   0CD9 FD 21r9Es2D        3103 	ld	iy,#_btx
   0CDD FD 77 00           3104 	ld	0 (iy),a
   0CE0 DD 7E FD           3105 	ld	a,-3 (ix)
   0CE3 FD 21r9Es2D        3106 	ld	iy,#_btx
   0CE7 FD 77 01           3107 	ld	1 (iy),a
   0CEA                    3108 00114$:
   0CEA 3Ar9Es2D           3109 	ld	a,(#_btx+0)
   0CED DD 96 FA           3110 	sub	a,-6 (ix)
   0CF0 3Ar9Fs2D           3111 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3112 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3113 	jp	P,00120$
                           3114 ;demo.c:396: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3115 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3116 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3117 	and	a,0 (iy)
   0D03 21r00s00           3118 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3119 	or	a,(hl)
   0D07 4F                 3120 	ld	c,a
   0D08 CB 39              3121 	srl	c
   0D0A 21r9As2D           3122 	ld	hl,#_bsx + 0
   0D0D 71                 3123 	ld	(hl), c
   0D0E 21r9Bs2D           3124 	ld	hl,#_bsx + 1
   0D11 36 00              3125 	ld	(hl), #0x00
                           3126 ;demo.c:397: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3127 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r9Cs2D           3128 	ld	hl,#_bsy + 0
   0D19 77                 3129 	ld	(hl), a
   0D1A 21r9Ds2D           3130 	ld	hl,#_bsy + 1
   0D1D 36 00              3131 	ld	(hl), #0x00
                           3132 ;demo.c:398: cmd.source_x = btab[bsx];
   0D1F 21r9As2D           3133 	ld	hl,#_bsx + 0
   0D22 4E                 3134 	ld	c,(hl)
   0D23 21r9Bs2D           3135 	ld	hl,#_bsx + 1
   0D26 46                 3136 	ld	b,(hl)
   0D27 CB 21              3137 	sla	c
   0D29 CB 10              3138 	rl	b
   0D2B 21rA2s2D           3139 	ld	hl,#_btab
   0D2E 09                 3140 	add	hl,bc
   0D2F 4E                 3141 	ld	c,(hl)
   0D30 23                 3142 	inc	hl
   0D31 46                 3143 	ld	b,(hl)
   0D32 21r7Cs2D           3144 	ld	hl,#_cmd
   0D35 71                 3145 	ld	(hl),c
   0D36 23                 3146 	inc	hl
   0D37 70                 3147 	ld	(hl),b
                           3148 ;demo.c:399: cmd.source_y = 768+btab[bsy];
   0D38 01r7Es2D           3149 	ld	bc,#_cmd + 2
   0D3B 21r9Cs2D           3150 	ld	hl,#_bsy + 0
   0D3E 5E                 3151 	ld	e,(hl)
   0D3F 21r9Ds2D           3152 	ld	hl,#_bsy + 1
   0D42 56                 3153 	ld	d,(hl)
   0D43 CB 23              3154 	sla	e
   0D45 CB 12              3155 	rl	d
   0D47 21rA2s2D           3156 	ld	hl,#_btab
   0D4A 19                 3157 	add	hl,de
   0D4B 5E                 3158 	ld	e,(hl)
   0D4C 23                 3159 	inc	hl
   0D4D 56                 3160 	ld	d,(hl)
   0D4E 21 00 03           3161 	ld	hl,#0x0300
   0D51 19                 3162 	add	hl,de
   0D52 EB                 3163 	ex	de,hl
   0D53 69                 3164 	ld	l,c
   0D54 60                 3165 	ld	h,b
   0D55 73                 3166 	ld	(hl),e
   0D56 23                 3167 	inc	hl
   0D57 72                 3168 	ld	(hl),d
                           3169 ;demo.c:400: cmd.dest_x = btab[btx];
   0D58 01r80s2D           3170 	ld	bc,#_cmd + 4
   0D5B 21r9Es2D           3171 	ld	hl,#_btx + 0
   0D5E 5E                 3172 	ld	e,(hl)
   0D5F 21r9Fs2D           3173 	ld	hl,#_btx + 1
   0D62 56                 3174 	ld	d,(hl)
   0D63 CB 23              3175 	sla	e
   0D65 CB 12              3176 	rl	d
   0D67 21rA2s2D           3177 	ld	hl,#_btab
   0D6A 19                 3178 	add	hl,de
   0D6B 5E                 3179 	ld	e,(hl)
   0D6C 23                 3180 	inc	hl
   0D6D 56                 3181 	ld	d,(hl)
   0D6E 69                 3182 	ld	l,c
   0D6F 60                 3183 	ld	h,b
   0D70 73                 3184 	ld	(hl),e
   0D71 23                 3185 	inc	hl
   0D72 72                 3186 	ld	(hl),d
                           3187 ;demo.c:401: cmd.dest_y = 512+btab[bty];
   0D73 01r82s2D           3188 	ld	bc,#_cmd + 6
   0D76 21rA0s2D           3189 	ld	hl,#_bty + 0
   0D79 5E                 3190 	ld	e,(hl)
   0D7A 21rA1s2D           3191 	ld	hl,#_bty + 1
   0D7D 56                 3192 	ld	d,(hl)
   0D7E CB 23              3193 	sla	e
   0D80 CB 12              3194 	rl	d
   0D82 21rA2s2D           3195 	ld	hl,#_btab
   0D85 19                 3196 	add	hl,de
   0D86 5E                 3197 	ld	e,(hl)
   0D87 23                 3198 	inc	hl
   0D88 56                 3199 	ld	d,(hl)
   0D89 21 00 02           3200 	ld	hl,#0x0200
   0D8C 19                 3201 	add	hl,de
   0D8D EB                 3202 	ex	de,hl
   0D8E 69                 3203 	ld	l,c
   0D8F 60                 3204 	ld	h,b
   0D90 73                 3205 	ld	(hl),e
   0D91 23                 3206 	inc	hl
   0D92 72                 3207 	ld	(hl),d
                           3208 ;demo.c:402: cmd.size_x = 16;
   0D93 21r84s2D           3209 	ld	hl, #_cmd + 8
   0D96 36 10              3210 	ld	(hl),#0x10
   0D98 23                 3211 	inc	hl
   0D99 36 00              3212 	ld	(hl),#0x00
                           3213 ;demo.c:403: cmd.size_y = 16;
   0D9B 21r86s2D           3214 	ld	hl, #_cmd + 10
   0D9E 36 10              3215 	ld	(hl),#0x10
   0DA0 23                 3216 	inc	hl
   0DA1 36 00              3217 	ld	(hl),#0x00
                           3218 ;demo.c:404: cmd.data = 0;
                           3219 ;demo.c:405: cmd.argument = 0x00;
   0DA3 3E 00              3220 	ld	a,#0x00
   0DA5 32r88s2D           3221 	ld	(#_cmd + 12),a
   0DA8 32r89s2D           3222 	ld	(#_cmd + 13),a
                           3223 ;demo.c:406: cmd.command = 0xD0;
   0DAB 3E D0              3224 	ld	a,#0xD0
   0DAD 32r8As2D           3225 	ld	(#_cmd + 14),a
                           3226 ;demo.c:407: vdp_copier(&cmd);
   0DB0 21r7Cs2D           3227 	ld	hl,#_cmd
   0DB3 E5                 3228 	push	hl
   0DB4 CDr00s00           3229 	call	_vdp_copier
   0DB7 F1                 3230 	pop	af
                           3231 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r9Es2D        3232 	ld	iy,#_btx
   0DBC FD 34 00           3233 	inc	0 (iy)
   0DBF 20 07              3234 	jr	NZ,00150$
   0DC1 FD 21r9Es2D        3235 	ld	iy,#_btx
   0DC5 FD 34 01           3236 	inc	1 (iy)
   0DC8                    3237 00150$:
   0DC8 C3rEAs0C           3238 	jp	00114$
   0DCB                    3239 00120$:
                           3240 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0DCB FD 21rA0s2D        3241 	ld	iy,#_bty
   0DCF FD 34 00           3242 	inc	0 (iy)
   0DD2 20 07              3243 	jr	NZ,00151$
   0DD4 FD 21rA0s2D        3244 	ld	iy,#_bty
   0DD8 FD 34 01           3245 	inc	1 (iy)
   0DDB                    3246 00151$:
   0DDB C3rC9s0C           3247 	jp	00118$
   0DDE                    3248 00121$:
                           3249 ;demo.c:411: flof++;
   0DDE FD 21rC2s2D        3250 	ld	iy,#_flof
   0DE2 FD 34 00           3251 	inc	0 (iy)
   0DE5 20 07              3252 	jr	NZ,00152$
   0DE7 FD 21rC2s2D        3253 	ld	iy,#_flof
   0DEB FD 34 01           3254 	inc	1 (iy)
   0DEE                    3255 00152$:
                           3256 ;demo.c:412: if (flof == 2) flof = 0;
   0DEE 3ArC2s2D           3257 	ld	a,(#_flof+0)
   0DF1 D6 02              3258 	sub	a,#0x02
   0DF3 20 06              3259 	jr	NZ,00153$
   0DF5 3ArC3s2D           3260 	ld	a,(#_flof+1)
   0DF8 B7                 3261 	or	a,a
   0DF9 28 02              3262 	jr	Z,00154$
   0DFB                    3263 00153$:
   0DFB 18 0A              3264 	jr	00122$
   0DFD                    3265 00154$:
   0DFD 21rC2s2D           3266 	ld	hl,#_flof + 0
   0E00 36 00              3267 	ld	(hl), #0x00
   0E02 21rC3s2D           3268 	ld	hl,#_flof + 1
   0E05 36 00              3269 	ld	(hl), #0x00
   0E07                    3270 00122$:
   0E07 DD F9              3271 	ld	sp,ix
   0E09 DD E1              3272 	pop	ix
   0E0B C9                 3273 	ret
   0E0C                    3274 _do_blocks_end::
                           3275 ;demo.c:420: void raster_effu() {
                           3276 ;	---------------------------------
                           3277 ; Function raster_effu
                           3278 ; ---------------------------------
   0E0C                    3279 _raster_effu_start::
   0E0C                    3280 _raster_effu:
                           3281 ;demo.c:421: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3282 	ld	hl,#0x0017
   0E0F E5                 3283 	push	hl
   0E10 CDr00s00           3284 	call	_vdp_register
   0E13 F1                 3285 	pop	af
                           3286 ;demo.c:422: waitVB();
   0E14 76                 3287 		halt 
                           3288 ;demo.c:424: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3289 	ld	hl,#0x4001
   0E18 E5                 3290 	push	hl
   0E19 CDr00s00           3291 	call	_vdp_register
                           3292 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3293 	ld	a,#0x28
   0E1E 32rC4s2D           3294 	ld	(#_linenum + 0),a
   0E21 F1                 3295 	pop	af
   0E22 FD 21rC4s2D        3296 	ld	iy,#_linenum
   0E26 FD 36 01 00        3297 	ld	1 (iy),#0x00
   0E2A                    3298 00101$:
   0E2A 3ArC4s2D           3299 	ld	a,(#_linenum+0)
   0E2D D6 D4              3300 	sub	a,#0xD4
   0E2F 3ArC5s2D           3301 	ld	a,(#_linenum+1)
   0E32 DE 00              3302 	sbc	a,#0x00
   0E34 F2r65s0E           3303 	jp	P,00104$
                           3304 ;demo.c:427: vdp_register(19,linenum); // interrupt on line
   0E37 3ArC4s2D           3305 	ld	a,(#_linenum+0)
   0E3A F5                 3306 	push	af
   0E3B 33                 3307 	inc	sp
   0E3C 3E 13              3308 	ld	a,#0x13
   0E3E F5                 3309 	push	af
   0E3F 33                 3310 	inc	sp
   0E40 CDr00s00           3311 	call	_vdp_register
   0E43 F1                 3312 	pop	af
                           3313 ;demo.c:428: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3314 	ld	hl,#0x1600
   0E47 E5                 3315 	push	hl
   0E48 CDr00s00           3316 	call	_vdp_register
   0E4B F1                 3317 	pop	af
                           3318 ;demo.c:430: waitVB();
   0E4C 76                 3319 		halt 
                           3320 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21rC4s2D           3321 	ld	hl,#_linenum
   0E50 7E                 3322 	ld	a,(hl)
   0E51 C6 04              3323 	add	a,#0x04
   0E53 23                 3324 	inc	hl
   0E54 2B                 3325 	dec	hl
   0E55 C5                 3326 	push	bc
   0E56 4F                 3327 	ld	c, a
   0E57 23                 3328 	inc	hl
   0E58 7E                 3329 	ld	a, (hl)
   0E59 47                 3330 	ld	b, a
   0E5A 79                 3331 	ld	a, c
   0E5B 2B                 3332 	dec	hl
   0E5C 77                 3333 	ld	(hl), a
   0E5D 78                 3334 	ld	a, b
   0E5E C1                 3335 	pop	bc
   0E5F CE 00              3336 	adc	a,#0x00
   0E61 23                 3337 	inc	hl
   0E62 77                 3338 	ld	(hl),a
   0E63 18 C5              3339 	jr	00101$
   0E65                    3340 00104$:
                           3341 ;demo.c:433: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3342 	ld	hl,#0x0017
   0E68 E5                 3343 	push	hl
   0E69 CDr00s00           3344 	call	_vdp_register
   0E6C F1                 3345 	pop	af
                           3346 ;demo.c:447: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3347 	ld	hl,#0x0600
   0E70 E5                 3348 	push	hl
   0E71 CDr00s00           3349 	call	_vdp_register
   0E74 F1                 3350 	pop	af
                           3351 ;demo.c:448: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3352 	ld	hl,#0x6001
   0E78 E5                 3353 	push	hl
   0E79 CDr00s00           3354 	call	_vdp_register
   0E7C F1                 3355 	pop	af
   0E7D C9                 3356 	ret
   0E7E                    3357 _raster_effu_end::
                           3358 ;demo.c:479: void do_letter(char cc) {
                           3359 ;	---------------------------------
                           3360 ; Function do_letter
                           3361 ; ---------------------------------
   0E7E                    3362 _do_letter_start::
   0E7E                    3363 _do_letter:
   0E7E DD E5              3364 	push	ix
   0E80 DD 21 00 00        3365 	ld	ix,#0
   0E84 DD 39              3366 	add	ix,sp
   0E86 F5                 3367 	push	af
                           3368 ;demo.c:480: int cidx = cc - 65;
   0E87 DD 4E 04           3369 	ld	c,4 (ix)
   0E8A DD 7E 04           3370 	ld	a,4 (ix)
   0E8D 17                 3371 	rla	
   0E8E 9F                 3372 	sbc	a,a
   0E8F 47                 3373 	ld	b,a
   0E90 79                 3374 	ld	a,c
   0E91 C6 BF              3375 	add	a,#0xBF
   0E93 DD 77 FE           3376 	ld	-2 (ix),a
   0E96 78                 3377 	ld	a,b
   0E97 CE FF              3378 	adc	a,#0xFF
   0E99 DD 77 FF           3379 	ld	-1 (ix),a
                           3380 ;demo.c:481: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3381 	ld	a,#<_font_x
   0E9E DD 86 FE           3382 	add	a,-2 (ix)
   0EA1 5F                 3383 	ld	e,a
   0EA2 3Es0F              3384 	ld	a,#>_font_x
   0EA4 DD 8E FF           3385 	adc	a,-1 (ix)
   0EA7 57                 3386 	ld	d,a
   0EA8 1A                 3387 	ld	a,(de)
   0EA9 5F                 3388 	ld	e,a
   0EAA 16 00              3389 	ld	d,#0x00
   0EAC 21 7F 00           3390 	ld	hl,#0x007F
   0EAF 19                 3391 	add	hl,de
   0EB0 EB                 3392 	ex	de,hl
   0EB1 21r7Cs2D           3393 	ld	hl,#_cmd
   0EB4 73                 3394 	ld	(hl),e
   0EB5 23                 3395 	inc	hl
   0EB6 72                 3396 	ld	(hl),d
                           3397 ;demo.c:482: cmd.source_y = 512+font_y[cidx];
   0EB7 11r7Es2D           3398 	ld	de,#_cmd + 2
   0EBA 3Er7C              3399 	ld	a,#<_font_y
   0EBC DD 86 FE           3400 	add	a,-2 (ix)
   0EBF 4F                 3401 	ld	c,a
   0EC0 3Es0F              3402 	ld	a,#>_font_y
   0EC2 DD 8E FF           3403 	adc	a,-1 (ix)
   0EC5 47                 3404 	ld	b,a
   0EC6 0A                 3405 	ld	a,(bc)
   0EC7 4F                 3406 	ld	c,a
   0EC8 06 00              3407 	ld	b,#0x00
   0ECA 21 00 02           3408 	ld	hl,#0x0200
   0ECD 09                 3409 	add	hl,bc
   0ECE 4D                 3410 	ld	c,l
   0ECF 44                 3411 	ld	b,h
   0ED0 EB                 3412 	ex	de,hl
   0ED1 71                 3413 	ld	(hl),c
   0ED2 23                 3414 	inc	hl
   0ED3 70                 3415 	ld	(hl),b
                           3416 ;demo.c:483: cmd.dest_x = lx;
   0ED4 01r80s2D           3417 	ld	bc,#_cmd + 4
   0ED7 21rC6s2D           3418 	ld	hl,#_lx + 0
   0EDA 5E                 3419 	ld	e,(hl)
   0EDB 16 00              3420 	ld	d,#0x00
   0EDD 69                 3421 	ld	l,c
   0EDE 60                 3422 	ld	h,b
   0EDF 73                 3423 	ld	(hl),e
   0EE0 23                 3424 	inc	hl
   0EE1 72                 3425 	ld	(hl),d
                           3426 ;demo.c:484: cmd.dest_y = ly;
   0EE2 01r82s2D           3427 	ld	bc,#_cmd + 6
   0EE5 21rC7s2D           3428 	ld	hl,#_ly + 0
   0EE8 5E                 3429 	ld	e,(hl)
   0EE9 16 00              3430 	ld	d,#0x00
   0EEB 69                 3431 	ld	l,c
   0EEC 60                 3432 	ld	h,b
   0EED 73                 3433 	ld	(hl),e
   0EEE 23                 3434 	inc	hl
   0EEF 72                 3435 	ld	(hl),d
                           3436 ;demo.c:485: cmd.size_x = font_w[cidx];
   0EF0 01r84s2D           3437 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3438 	ld	a,#<_font_w
   0EF5 DD 86 FE           3439 	add	a,-2 (ix)
   0EF8 5F                 3440 	ld	e,a
   0EF9 3Es0F              3441 	ld	a,#>_font_w
   0EFB DD 8E FF           3442 	adc	a,-1 (ix)
   0EFE 57                 3443 	ld	d,a
   0EFF 1A                 3444 	ld	a,(de)
   0F00 5F                 3445 	ld	e,a
   0F01 16 00              3446 	ld	d,#0x00
   0F03 69                 3447 	ld	l,c
   0F04 60                 3448 	ld	h,b
   0F05 73                 3449 	ld	(hl),e
   0F06 23                 3450 	inc	hl
   0F07 72                 3451 	ld	(hl),d
                           3452 ;demo.c:486: cmd.size_y = 8;
   0F08 21r86s2D           3453 	ld	hl, #_cmd + 10
   0F0B 36 08              3454 	ld	(hl),#0x08
   0F0D 23                 3455 	inc	hl
   0F0E 36 00              3456 	ld	(hl),#0x00
                           3457 ;demo.c:487: cmd.argument = 0x00;
   0F10 3E 00              3458 	ld	a,#0x00
   0F12 32r89s2D           3459 	ld	(#_cmd + 13),a
                           3460 ;demo.c:488: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3461 	ld	a,#0x90
   0F17 32r8As2D           3462 	ld	(#_cmd + 14),a
                           3463 ;demo.c:489: vdp_copier(&cmd);
   0F1A 21r7Cs2D           3464 	ld	hl,#_cmd
   0F1D E5                 3465 	push	hl
   0F1E CDr00s00           3466 	call	_vdp_copier
   0F21 F1                 3467 	pop	af
                           3468 ;demo.c:490: lx+=font_w[cidx]-1;
   0F22 3ErBC              3469 	ld	a,#<_font_w
   0F24 DD 86 FE           3470 	add	a,-2 (ix)
   0F27 4F                 3471 	ld	c,a
   0F28 3Es0F              3472 	ld	a,#>_font_w
   0F2A DD 8E FF           3473 	adc	a,-1 (ix)
   0F2D 47                 3474 	ld	b,a
   0F2E 0A                 3475 	ld	a,(bc)
   0F2F 4F                 3476 	ld	c,a
   0F30 0D                 3477 	dec	c
   0F31 21rC6s2D           3478 	ld	hl,#_lx
   0F34 7E                 3479 	ld	a,(hl)
   0F35 81                 3480 	add	a,c
   0F36 77                 3481 	ld	(hl),a
   0F37 DD F9              3482 	ld	sp,ix
   0F39 DD E1              3483 	pop	ix
   0F3B C9                 3484 	ret
   0F3C                    3485 _do_letter_end::
   0F3C                    3486 _font_x:
   0F3C 01                 3487 	.db #0x01
   0F3D 09                 3488 	.db #0x09
   0F3E 11                 3489 	.db #0x11
   0F3F 19                 3490 	.db #0x19
   0F40 21                 3491 	.db #0x21
   0F41 29                 3492 	.db #0x29
   0F42 31                 3493 	.db #0x31
   0F43 39                 3494 	.db #0x39
   0F44 41                 3495 	.db #0x41
   0F45 46                 3496 	.db #0x46
   0F46 4E                 3497 	.db #0x4E
   0F47 56                 3498 	.db #0x56
   0F48 5E                 3499 	.db #0x5E
   0F49 01                 3500 	.db #0x01
   0F4A 0A                 3501 	.db #0x0A
   0F4B 12                 3502 	.db #0x12
   0F4C 1A                 3503 	.db #0x1A
   0F4D 23                 3504 	.db #0x23
   0F4E 2B                 3505 	.db #0x2B
   0F4F 33                 3506 	.db #0x33
   0F50 3C                 3507 	.db #0x3C
   0F51 44                 3508 	.db #0x44
   0F52 4C                 3509 	.db #0x4C
   0F53 56                 3510 	.db #0x56
   0F54 5E                 3511 	.db #0x5E
   0F55 67                 3512 	.db #0x67
   0F56 00                 3513 	.db #0x00
   0F57 00                 3514 	.db #0x00
   0F58 00                 3515 	.db #0x00
   0F59 00                 3516 	.db #0x00
   0F5A 00                 3517 	.db #0x00
   0F5B 00                 3518 	.db #0x00
   0F5C 01                 3519 	.db #0x01
   0F5D 09                 3520 	.db #0x09
   0F5E 11                 3521 	.db #0x11
   0F5F 18                 3522 	.db #0x18
   0F60 20                 3523 	.db #0x20
   0F61 28                 3524 	.db #0x28
   0F62 2F                 3525 	.db #0x2F
   0F63 37                 3526 	.db #0x37
   0F64 3F                 3527 	.db #0x3F
   0F65 45                 3528 	.db #0x45
   0F66 4C                 3529 	.db #0x4C
   0F67 54                 3530 	.db #0x54
   0F68 5A                 3531 	.db #0x5A
   0F69 64                 3532 	.db #0x64
   0F6A 01                 3533 	.db #0x01
   0F6B 09                 3534 	.db #0x09
   0F6C 11                 3535 	.db #0x11
   0F6D 19                 3536 	.db #0x19
   0F6E 21                 3537 	.db #0x21
   0F6F 29                 3538 	.db #0x29
   0F70 30                 3539 	.db #0x30
   0F71 38                 3540 	.db #0x38
   0F72 40                 3541 	.db #0x40
   0F73 4A                 3542 	.db #0x4A
   0F74 52                 3543 	.db #0x52
   0F75 5A                 3544 	.db #0x5A
   0F76 00                 3545 	.db 0x00
   0F77 00                 3546 	.db 0x00
   0F78 00                 3547 	.db 0x00
   0F79 00                 3548 	.db 0x00
   0F7A 00                 3549 	.db 0x00
   0F7B 00                 3550 	.db 0x00
   0F7C                    3551 _font_y:
   0F7C 1C                 3552 	.db #0x1C
   0F7D 1C                 3553 	.db #0x1C
   0F7E 1C                 3554 	.db #0x1C
   0F7F 1C                 3555 	.db #0x1C
   0F80 1C                 3556 	.db #0x1C
   0F81 1C                 3557 	.db #0x1C
   0F82 1C                 3558 	.db #0x1C
   0F83 1C                 3559 	.db #0x1C
   0F84 1C                 3560 	.db #0x1C
   0F85 1C                 3561 	.db #0x1C
   0F86 1C                 3562 	.db #0x1C
   0F87 1C                 3563 	.db #0x1C
   0F88 1C                 3564 	.db #0x1C
   0F89 25                 3565 	.db #0x25
   0F8A 25                 3566 	.db #0x25
   0F8B 25                 3567 	.db #0x25
   0F8C 25                 3568 	.db #0x25
   0F8D 25                 3569 	.db #0x25
   0F8E 25                 3570 	.db #0x25
   0F8F 25                 3571 	.db #0x25
   0F90 25                 3572 	.db #0x25
   0F91 25                 3573 	.db #0x25
   0F92 25                 3574 	.db #0x25
   0F93 25                 3575 	.db #0x25
   0F94 25                 3576 	.db #0x25
   0F95 25                 3577 	.db #0x25
   0F96 00                 3578 	.db #0x00
   0F97 00                 3579 	.db #0x00
   0F98 00                 3580 	.db #0x00
   0F99 00                 3581 	.db #0x00
   0F9A 00                 3582 	.db #0x00
   0F9B 00                 3583 	.db #0x00
   0F9C 37                 3584 	.db #0x37
   0F9D 37                 3585 	.db #0x37
   0F9E 37                 3586 	.db #0x37
   0F9F 37                 3587 	.db #0x37
   0FA0 37                 3588 	.db #0x37
   0FA1 37                 3589 	.db #0x37
   0FA2 37                 3590 	.db #0x37
   0FA3 37                 3591 	.db #0x37
   0FA4 37                 3592 	.db #0x37
   0FA5 37                 3593 	.db #0x37
   0FA6 37                 3594 	.db #0x37
   0FA7 37                 3595 	.db #0x37
   0FA8 37                 3596 	.db #0x37
   0FA9 37                 3597 	.db #0x37
   0FAA 40                 3598 	.db #0x40
   0FAB 40                 3599 	.db #0x40
   0FAC 40                 3600 	.db #0x40
   0FAD 40                 3601 	.db #0x40
   0FAE 40                 3602 	.db #0x40
   0FAF 40                 3603 	.db #0x40
   0FB0 40                 3604 	.db #0x40
   0FB1 40                 3605 	.db #0x40
   0FB2 40                 3606 	.db #0x40
   0FB3 40                 3607 	.db #0x40
   0FB4 40                 3608 	.db #0x40
   0FB5 40                 3609 	.db #0x40
   0FB6 00                 3610 	.db 0x00
   0FB7 00                 3611 	.db 0x00
   0FB8 00                 3612 	.db 0x00
   0FB9 00                 3613 	.db 0x00
   0FBA 00                 3614 	.db 0x00
   0FBB 00                 3615 	.db 0x00
   0FBC                    3616 _font_w:
   0FBC 07                 3617 	.db #0x07
   0FBD 07                 3618 	.db #0x07
   0FBE 07                 3619 	.db #0x07
   0FBF 07                 3620 	.db #0x07
   0FC0 07                 3621 	.db #0x07
   0FC1 07                 3622 	.db #0x07
   0FC2 07                 3623 	.db #0x07
   0FC3 07                 3624 	.db #0x07
   0FC4 04                 3625 	.db #0x04
   0FC5 07                 3626 	.db #0x07
   0FC6 07                 3627 	.db #0x07
   0FC7 07                 3628 	.db #0x07
   0FC8 09                 3629 	.db #0x09
   0FC9 08                 3630 	.db #0x08
   0FCA 07                 3631 	.db #0x07
   0FCB 07                 3632 	.db #0x07
   0FCC 08                 3633 	.db #0x08
   0FCD 07                 3634 	.db #0x07
   0FCE 07                 3635 	.db #0x07
   0FCF 08                 3636 	.db #0x08
   0FD0 07                 3637 	.db #0x07
   0FD1 07                 3638 	.db #0x07
   0FD2 09                 3639 	.db #0x09
   0FD3 07                 3640 	.db #0x07
   0FD4 08                 3641 	.db #0x08
   0FD5 07                 3642 	.db #0x07
   0FD6 00                 3643 	.db #0x00
   0FD7 00                 3644 	.db #0x00
   0FD8 00                 3645 	.db #0x00
   0FD9 00                 3646 	.db #0x00
   0FDA 00                 3647 	.db #0x00
   0FDB 00                 3648 	.db #0x00
   0FDC 07                 3649 	.db #0x07
   0FDD 07                 3650 	.db #0x07
   0FDE 06                 3651 	.db #0x06
   0FDF 07                 3652 	.db #0x07
   0FE0 07                 3653 	.db #0x07
   0FE1 07                 3654 	.db #0x07
   0FE2 07                 3655 	.db #0x07
   0FE3 07                 3656 	.db #0x07
   0FE4 05                 3657 	.db #0x05
   0FE5 06                 3658 	.db #0x06
   0FE6 07                 3659 	.db #0x07
   0FE7 05                 3660 	.db #0x05
   0FE8 09                 3661 	.db #0x09
   0FE9 07                 3662 	.db #0x07
   0FEA 07                 3663 	.db #0x07
   0FEB 07                 3664 	.db #0x07
   0FEC 07                 3665 	.db #0x07
   0FED 07                 3666 	.db #0x07
   0FEE 07                 3667 	.db #0x07
   0FEF 06                 3668 	.db #0x06
   0FF0 07                 3669 	.db #0x07
   0FF1 07                 3670 	.db #0x07
   0FF2 09                 3671 	.db #0x09
   0FF3 07                 3672 	.db #0x07
   0FF4 07                 3673 	.db #0x07
   0FF5 07                 3674 	.db #0x07
   0FF6 00                 3675 	.db 0x00
   0FF7 00                 3676 	.db 0x00
   0FF8 00                 3677 	.db 0x00
   0FF9 00                 3678 	.db 0x00
   0FFA 00                 3679 	.db 0x00
   0FFB 00                 3680 	.db 0x00
                           3681 ;demo.c:494: void do_letter_tall(char cc) {
                           3682 ;	---------------------------------
                           3683 ; Function do_letter_tall
                           3684 ; ---------------------------------
   0FFC                    3685 _do_letter_tall_start::
   0FFC                    3686 _do_letter_tall:
   0FFC DD E5              3687 	push	ix
   0FFE DD 21 00 00        3688 	ld	ix,#0
   1002 DD 39              3689 	add	ix,sp
   1004 F5                 3690 	push	af
                           3691 ;demo.c:495: int cidx = cc - 65;
   1005 DD 4E 04           3692 	ld	c,4 (ix)
   1008 DD 7E 04           3693 	ld	a,4 (ix)
   100B 17                 3694 	rla	
   100C 9F                 3695 	sbc	a,a
   100D 47                 3696 	ld	b,a
   100E 79                 3697 	ld	a,c
   100F C6 BF              3698 	add	a,#0xBF
   1011 DD 77 FE           3699 	ld	-2 (ix),a
   1014 78                 3700 	ld	a,b
   1015 CE FF              3701 	adc	a,#0xFF
   1017 DD 77 FF           3702 	ld	-1 (ix),a
                           3703 ;demo.c:496: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3704 	ld	a,#<_font_x
   101C DD 86 FE           3705 	add	a,-2 (ix)
   101F 5F                 3706 	ld	e,a
   1020 3Es0F              3707 	ld	a,#>_font_x
   1022 DD 8E FF           3708 	adc	a,-1 (ix)
   1025 57                 3709 	ld	d,a
   1026 1A                 3710 	ld	a,(de)
   1027 5F                 3711 	ld	e,a
   1028 16 00              3712 	ld	d,#0x00
   102A 21 7F 00           3713 	ld	hl,#0x007F
   102D 19                 3714 	add	hl,de
   102E EB                 3715 	ex	de,hl
   102F 21r7Cs2D           3716 	ld	hl,#_cmd
   1032 73                 3717 	ld	(hl),e
   1033 23                 3718 	inc	hl
   1034 72                 3719 	ld	(hl),d
                           3720 ;demo.c:497: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r7Es2D           3721 	ld	de,#_cmd + 2
   1038 3Er7C              3722 	ld	a,#<_font_y
   103A DD 86 FE           3723 	add	a,-2 (ix)
   103D 4F                 3724 	ld	c,a
   103E 3Es0F              3725 	ld	a,#>_font_y
   1040 DD 8E FF           3726 	adc	a,-1 (ix)
   1043 47                 3727 	ld	b,a
   1044 0A                 3728 	ld	a,(bc)
   1045 4F                 3729 	ld	c,a
   1046 06 00              3730 	ld	b,#0x00
   1048 21 FF 01           3731 	ld	hl,#0x01FF
   104B 09                 3732 	add	hl,bc
   104C 4D                 3733 	ld	c,l
   104D 44                 3734 	ld	b,h
   104E EB                 3735 	ex	de,hl
   104F 71                 3736 	ld	(hl),c
   1050 23                 3737 	inc	hl
   1051 70                 3738 	ld	(hl),b
                           3739 ;demo.c:498: cmd.dest_x = lx;
   1052 01r80s2D           3740 	ld	bc,#_cmd + 4
   1055 21rC6s2D           3741 	ld	hl,#_lx + 0
   1058 5E                 3742 	ld	e,(hl)
   1059 16 00              3743 	ld	d,#0x00
   105B 69                 3744 	ld	l,c
   105C 60                 3745 	ld	h,b
   105D 73                 3746 	ld	(hl),e
   105E 23                 3747 	inc	hl
   105F 72                 3748 	ld	(hl),d
                           3749 ;demo.c:499: cmd.dest_y = ly;
   1060 01r82s2D           3750 	ld	bc,#_cmd + 6
   1063 21rC7s2D           3751 	ld	hl,#_ly + 0
   1066 5E                 3752 	ld	e,(hl)
   1067 16 00              3753 	ld	d,#0x00
   1069 69                 3754 	ld	l,c
   106A 60                 3755 	ld	h,b
   106B 73                 3756 	ld	(hl),e
   106C 23                 3757 	inc	hl
   106D 72                 3758 	ld	(hl),d
                           3759 ;demo.c:500: cmd.size_x = font_w[cidx];
   106E 01r84s2D           3760 	ld	bc,#_cmd + 8
   1071 3ErBC              3761 	ld	a,#<_font_w
   1073 DD 86 FE           3762 	add	a,-2 (ix)
   1076 5F                 3763 	ld	e,a
   1077 3Es0F              3764 	ld	a,#>_font_w
   1079 DD 8E FF           3765 	adc	a,-1 (ix)
   107C 57                 3766 	ld	d,a
   107D 1A                 3767 	ld	a,(de)
   107E 5F                 3768 	ld	e,a
   107F 16 00              3769 	ld	d,#0x00
   1081 69                 3770 	ld	l,c
   1082 60                 3771 	ld	h,b
   1083 73                 3772 	ld	(hl),e
   1084 23                 3773 	inc	hl
   1085 72                 3774 	ld	(hl),d
                           3775 ;demo.c:501: cmd.size_y = 10;
   1086 21r86s2D           3776 	ld	hl, #_cmd + 10
   1089 36 0A              3777 	ld	(hl),#0x0A
   108B 23                 3778 	inc	hl
   108C 36 00              3779 	ld	(hl),#0x00
                           3780 ;demo.c:502: cmd.argument = 0x00;
   108E 3E 00              3781 	ld	a,#0x00
   1090 32r89s2D           3782 	ld	(#_cmd + 13),a
                           3783 ;demo.c:503: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3784 	ld	a,#0x90
   1095 32r8As2D           3785 	ld	(#_cmd + 14),a
                           3786 ;demo.c:504: vdp_copier(&cmd);
   1098 21r7Cs2D           3787 	ld	hl,#_cmd
   109B E5                 3788 	push	hl
   109C CDr00s00           3789 	call	_vdp_copier
   109F F1                 3790 	pop	af
                           3791 ;demo.c:505: lx+=font_w[cidx]-1;
   10A0 3ErBC              3792 	ld	a,#<_font_w
   10A2 DD 86 FE           3793 	add	a,-2 (ix)
   10A5 4F                 3794 	ld	c,a
   10A6 3Es0F              3795 	ld	a,#>_font_w
   10A8 DD 8E FF           3796 	adc	a,-1 (ix)
   10AB 47                 3797 	ld	b,a
   10AC 0A                 3798 	ld	a,(bc)
   10AD 4F                 3799 	ld	c,a
   10AE 0D                 3800 	dec	c
   10AF 21rC6s2D           3801 	ld	hl,#_lx
   10B2 7E                 3802 	ld	a,(hl)
   10B3 81                 3803 	add	a,c
   10B4 77                 3804 	ld	(hl),a
   10B5 DD F9              3805 	ld	sp,ix
   10B7 DD E1              3806 	pop	ix
   10B9 C9                 3807 	ret
   10BA                    3808 _do_letter_tall_end::
                           3809 ;demo.c:508: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3810 ;	---------------------------------
                           3811 ; Function drawstr
                           3812 ; ---------------------------------
   10BA                    3813 _drawstr_start::
   10BA                    3814 _drawstr:
   10BA DD E5              3815 	push	ix
   10BC DD 21 00 00        3816 	ld	ix,#0
   10C0 DD 39              3817 	add	ix,sp
                           3818 ;demo.c:509: char* c = str;
   10C2 DD 4E 04           3819 	ld	c,4 (ix)
   10C5 DD 46 05           3820 	ld	b,5 (ix)
                           3821 ;demo.c:510: lx = x;
   10C8 DD 5E 06           3822 	ld	e,6 (ix)
   10CB 21rC6s2D           3823 	ld	hl,#_lx + 0
   10CE 73                 3824 	ld	(hl), e
                           3825 ;demo.c:511: ly = y;
   10CF DD 7E 07           3826 	ld	a,7 (ix)
   10D2 21rC7s2D           3827 	ld	hl,#_ly + 0
   10D5 77                 3828 	ld	(hl), a
                           3829 ;demo.c:512: while (*c) {
   10D6                    3830 00107$:
   10D6 0A                 3831 	ld	a,(bc)
   10D7 57                 3832 	ld	d,a
   10D8 B7                 3833 	or	a,a
   10D9 28 42              3834 	jr	Z,00110$
                           3835 ;demo.c:513: char ltr = *c++; 
   10DB 03                 3836 	inc	bc
                           3837 ;demo.c:514: if (ltr == ' ') lx+=4;
   10DC 7A                 3838 	ld	a,d
   10DD D6 20              3839 	sub	a,#0x20
   10DF 20 1E              3840 	jr	NZ,00105$
   10E1 FD 21rC6s2D        3841 	ld	iy,#_lx
   10E5 FD 34 00           3842 	inc	0 (iy)
   10E8 FD 21rC6s2D        3843 	ld	iy,#_lx
   10EC FD 34 00           3844 	inc	0 (iy)
   10EF FD 21rC6s2D        3845 	ld	iy,#_lx
   10F3 FD 34 00           3846 	inc	0 (iy)
   10F6 FD 21rC6s2D        3847 	ld	iy,#_lx
   10FA FD 34 00           3848 	inc	0 (iy)
   10FD 18 D7              3849 	jr	00107$
   10FF                    3850 00105$:
                           3851 ;demo.c:515: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 3852 	ld	a,d
   1100 D6 5F              3853 	sub	a,#0x5F
   1102 20 0D              3854 	jr	NZ,00102$
   1104 21rC7s2D           3855 	ld	hl,#_ly
   1107 7E                 3856 	ld	a,(hl)
   1108 C6 09              3857 	add	a,#0x09
   110A 77                 3858 	ld	(hl),a
   110B 21rC6s2D           3859 	ld	hl,#_lx + 0
   110E 73                 3860 	ld	(hl), e
   110F 18 C5              3861 	jr	00107$
   1111                    3862 00102$:
                           3863 ;demo.c:516: else do_letter(ltr);
   1111 C5                 3864 	push	bc
   1112 D5                 3865 	push	de
   1113 D5                 3866 	push	de
   1114 33                 3867 	inc	sp
   1115 CDr7Es0E           3868 	call	_do_letter
   1118 33                 3869 	inc	sp
   1119 D1                 3870 	pop	de
   111A C1                 3871 	pop	bc
   111B 18 B9              3872 	jr	00107$
   111D                    3873 00110$:
   111D DD E1              3874 	pop	ix
   111F C9                 3875 	ret
   1120                    3876 _drawstr_end::
                           3877 ;demo.c:520: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3878 ;	---------------------------------
                           3879 ; Function drawsine
                           3880 ; ---------------------------------
   1120                    3881 _drawsine_start::
   1120                    3882 _drawsine:
   1120 DD E5              3883 	push	ix
   1122 DD 21 00 00        3884 	ld	ix,#0
   1126 DD 39              3885 	add	ix,sp
   1128 3B                 3886 	dec	sp
                           3887 ;demo.c:521: char* c = str;
   1129 DD 4E 04           3888 	ld	c,4 (ix)
   112C DD 46 05           3889 	ld	b,5 (ix)
                           3890 ;demo.c:522: lx = x;
   112F DD 7E 06           3891 	ld	a,6 (ix)
   1132 21rC6s2D           3892 	ld	hl,#_lx + 0
   1135 77                 3893 	ld	(hl), a
                           3894 ;demo.c:524: while (*c) {
   1136                    3895 00104$:
   1136 0A                 3896 	ld	a,(bc)
   1137 5F                 3897 	ld	e,a
   1138 B7                 3898 	or	a,a
   1139 CArADs11           3899 	jp	Z,00107$
                           3900 ;demo.c:525: char ltr = *c++; 
   113C 03                 3901 	inc	bc
   113D DD 73 FF           3902 	ld	-1 (ix),e
                           3903 ;demo.c:526: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21rC6s2D           3904 	ld	hl,#_lx + 0
   1143 5E                 3905 	ld	e,(hl)
   1144 16 00              3906 	ld	d,#0x00
   1146 21r78s2D           3907 	ld	hl,#_vbicount
   1149 7B                 3908 	ld	a,e
   114A 86                 3909 	add	a,(hl)
   114B 5F                 3910 	ld	e,a
   114C 7A                 3911 	ld	a,d
   114D 23                 3912 	inc	hl
   114E 8E                 3913 	adc	a,(hl)
   114F 57                 3914 	ld	d,a
   1150 CB 2A              3915 	sra	d
   1152 CB 1B              3916 	rr	e
   1154 16 00              3917 	ld	d,#0x00
   1156 CB 23              3918 	sla	e
   1158 CB 12              3919 	rl	d
   115A 21r2Cs00           3920 	ld	hl,#_sintabx
   115D 19                 3921 	add	hl,de
   115E 5E                 3922 	ld	e,(hl)
   115F 23                 3923 	inc	hl
   1160 56                 3924 	ld	d,(hl)
   1161 CB 3A              3925 	srl	d
   1163 CB 1B              3926 	rr	e
   1165 CB 3A              3927 	srl	d
   1167 CB 1B              3928 	rr	e
   1169 CB 3A              3929 	srl	d
   116B CB 1B              3930 	rr	e
   116D CB 3A              3931 	srl	d
   116F CB 1B              3932 	rr	e
   1171 21rC7s2D           3933 	ld	hl,#_ly
   1174 DD 7E 07           3934 	ld	a,7 (ix)
   1177 83                 3935 	add	a,e
   1178 77                 3936 	ld	(hl),a
                           3937 ;demo.c:527: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           3938 	ld	a,-1 (ix)
   117C D6 20              3939 	sub	a,#0x20
   117E 20 1F              3940 	jr	NZ,00102$
   1180 FD 21rC6s2D        3941 	ld	iy,#_lx
   1184 FD 34 00           3942 	inc	0 (iy)
   1187 FD 21rC6s2D        3943 	ld	iy,#_lx
   118B FD 34 00           3944 	inc	0 (iy)
   118E FD 21rC6s2D        3945 	ld	iy,#_lx
   1192 FD 34 00           3946 	inc	0 (iy)
   1195 FD 21rC6s2D        3947 	ld	iy,#_lx
   1199 FD 34 00           3948 	inc	0 (iy)
   119C C3r36s11           3949 	jp	00104$
   119F                    3950 00102$:
                           3951 ;demo.c:528: else do_letter_tall(ltr);
   119F C5                 3952 	push	bc
   11A0 DD 7E FF           3953 	ld	a,-1 (ix)
   11A3 F5                 3954 	push	af
   11A4 33                 3955 	inc	sp
   11A5 CDrFCs0F           3956 	call	_do_letter_tall
   11A8 33                 3957 	inc	sp
   11A9 C1                 3958 	pop	bc
   11AA C3r36s11           3959 	jp	00104$
   11AD                    3960 00107$:
   11AD DD F9              3961 	ld	sp,ix
   11AF DD E1              3962 	pop	ix
   11B1 C9                 3963 	ret
   11B2                    3964 _drawsine_end::
                           3965 ;demo.c:532: void font() {
                           3966 ;	---------------------------------
                           3967 ; Function font
                           3968 ; ---------------------------------
   11B2                    3969 _font_start::
   11B2                    3970 _font:
                           3971 ;demo.c:534: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           3972 	ld	hl,#0x3C4A
   11B5 E5                 3973 	push	hl
   11B6 21rC0s11           3974 	ld	hl,#__str_8
   11B9 E5                 3975 	push	hl
   11BA CDrBAs10           3976 	call	_drawstr
   11BD F1                 3977 	pop	af
   11BE F1                 3978 	pop	af
   11BF C9                 3979 	ret
   11C0                    3980 _font_end::
   11C0                    3981 __str_8:
   11C0 44 49 47 49 54 41  3982 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  3983 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 3984 	.db 0x00
                           3985 ;demo.c:543: void twister() {
                           3986 ;	---------------------------------
                           3987 ; Function twister
                           3988 ; ---------------------------------
   1223                    3989 _twister_start::
   1223                    3990 _twister:
   1223 DD E5              3991 	push	ix
   1225 DD 21 00 00        3992 	ld	ix,#0
   1229 DD 39              3993 	add	ix,sp
   122B F5                 3994 	push	af
                           3995 ;demo.c:547: if (twinited == 0) {
   122C 3ArCAs2D           3996 	ld	a,(#_twinited+0)
   122F FD 21rCAs2D        3997 	ld	iy,#_twinited
   1233 FD B6 01           3998 	or	a,1 (iy)
   1236 C2rA6s12           3999 	jp	NZ,00102$
                           4000 ;demo.c:548: cmd.size_x = 256;
   1239 21r84s2D           4001 	ld	hl, #_cmd + 8
   123C 36 00              4002 	ld	(hl),#0x00
   123E 23                 4003 	inc	hl
   123F 36 01              4004 	ld	(hl),#0x01
                           4005 ;demo.c:549: cmd.size_y = 1;
   1241 21r86s2D           4006 	ld	hl, #_cmd + 10
   1244 36 01              4007 	ld	(hl),#0x01
   1246 23                 4008 	inc	hl
   1247 36 00              4009 	ld	(hl),#0x00
                           4010 ;demo.c:550: cmd.data = 0;
                           4011 ;demo.c:551: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4012 	ld	a,#0x00
   124B 32r88s2D           4013 	ld	(#_cmd + 12),a
   124E 32r89s2D           4014 	ld	(#_cmd + 13),a
                           4015 ;demo.c:552: cmd.command = 0xd0; // vram to vram, y only
   1251 01r8As2D           4016 	ld	bc,#_cmd + 14
   1254 3E D0              4017 	ld	a,#0xD0
   1256 02                 4018 	ld	(bc),a
                           4019 ;demo.c:553: cmd.source_x = 0;
   1257 21r7Cs2D           4020 	ld	hl,#_cmd
   125A 36 00              4021 	ld	(hl),#0x00
   125C 23                 4022 	inc	hl
   125D 36 00              4023 	ld	(hl),#0x00
                           4024 ;demo.c:554: cmd.dest_x = 0;
   125F 21r80s2D           4025 	ld	hl, #_cmd + 4
   1262 36 00              4026 	ld	(hl),#0x00
   1264 23                 4027 	inc	hl
   1265 36 00              4028 	ld	(hl),#0x00
                           4029 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4030 	ld	bc,#0x0000
   126A                    4031 00103$:
   126A 79                 4032 	ld	a,c
   126B D6 D4              4033 	sub	a,#0xD4
   126D 78                 4034 	ld	a,b
   126E DE 00              4035 	sbc	a,#0x00
   1270 F2r91s12           4036 	jp	P,00106$
                           4037 ;demo.c:557: waitVB();
   1273 76                 4038 		halt 
                           4039 ;demo.c:558: cmd.source_y = 0;
   1274 11r7Es2D           4040 	ld	de,#_cmd + 2
   1277 EB                 4041 	ex	de,hl
   1278 36 00              4042 	ld	(hl),#0x00
   127A 23                 4043 	inc	hl
   127B 36 00              4044 	ld	(hl),#0x00
                           4045 ;demo.c:559: cmd.dest_y = y;
   127D 11r82s2D           4046 	ld	de,#_cmd + 6
   1280 EB                 4047 	ex	de,hl
   1281 71                 4048 	ld	(hl),c
   1282 23                 4049 	inc	hl
   1283 70                 4050 	ld	(hl),b
                           4051 ;demo.c:560: vdp_copier(&cmd);
   1284 C5                 4052 	push	bc
   1285 21r7Cs2D           4053 	ld	hl,#_cmd
   1288 E5                 4054 	push	hl
   1289 CDr00s00           4055 	call	_vdp_copier
   128C F1                 4056 	pop	af
   128D C1                 4057 	pop	bc
                           4058 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   128E 03                 4059 	inc	bc
   128F 18 D9              4060 	jr	00103$
   1291                    4061 00106$:
                           4062 ;demo.c:564: twinited = 1;
   1291 21rCAs2D           4063 	ld	hl,#_twinited + 0
   1294 36 01              4064 	ld	(hl), #0x01
   1296 21rCBs2D           4065 	ld	hl,#_twinited + 1
   1299 36 00              4066 	ld	(hl), #0x00
                           4067 ;demo.c:565: vdp_load_palette(twister_palette);
   129B 21r18s2D           4068 	ld	hl,#_twister_palette
   129E E5                 4069 	push	hl
   129F CDr00s00           4070 	call	_vdp_load_palette
   12A2 F1                 4071 	pop	af
                           4072 ;demo.c:566: font();
   12A3 CDrB2s11           4073 	call	_font
   12A6                    4074 00102$:
                           4075 ;demo.c:569: cmd.size_x = 70;
   12A6 21r84s2D           4076 	ld	hl, #_cmd + 8
   12A9 36 46              4077 	ld	(hl),#0x46
   12AB 23                 4078 	inc	hl
   12AC 36 00              4079 	ld	(hl),#0x00
                           4080 ;demo.c:570: cmd.size_y = 2;
   12AE 21r86s2D           4081 	ld	hl, #_cmd + 10
   12B1 36 02              4082 	ld	(hl),#0x02
   12B3 23                 4083 	inc	hl
   12B4 36 00              4084 	ld	(hl),#0x00
                           4085 ;demo.c:571: cmd.data = 0;
   12B6 3E 00              4086 	ld	a,#0x00
   12B8 32r88s2D           4087 	ld	(#_cmd + 12),a
                           4088 ;demo.c:572: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4089 	ld	a,#0x04
   12BD 32r89s2D           4090 	ld	(#_cmd + 13),a
                           4091 ;demo.c:573: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r8As2D           4092 	ld	bc,#_cmd + 14
   12C3 3E E0              4093 	ld	a,#0xE0
   12C5 02                 4094 	ld	(bc),a
                           4095 ;demo.c:574: cmd.source_x = 70;
   12C6 21r7Cs2D           4096 	ld	hl,#_cmd
   12C9 36 46              4097 	ld	(hl),#0x46
   12CB 23                 4098 	inc	hl
   12CC 36 00              4099 	ld	(hl),#0x00
                           4100 ;demo.c:575: cmd.dest_x = 70;
   12CE 21r80s2D           4101 	ld	hl, #_cmd + 4
   12D1 36 46              4102 	ld	(hl),#0x46
   12D3 23                 4103 	inc	hl
   12D4 36 00              4104 	ld	(hl),#0x00
                           4105 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4106 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4107 	ld	-1 (ix),#0x00
   12DE                    4108 00107$:
   12DE DD 7E FE           4109 	ld	a,-2 (ix)
   12E1 D6 D4              4110 	sub	a,#0xD4
   12E3 DD 7E FF           4111 	ld	a,-1 (ix)
   12E6 DE 00              4112 	sbc	a,#0x00
   12E8 F2r41s13           4113 	jp	P,00110$
                           4114 ;demo.c:578: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r7Es2D           4115 	ld	de,#_cmd + 2
   12EE DD 4E FE           4116 	ld	c,-2 (ix)
   12F1 DD 46 FF           4117 	ld	b,-1 (ix)
   12F4 CB 28              4118 	sra	b
   12F6 CB 19              4119 	rr	c
   12F8 3ArC8s2D           4120 	ld	a,(#_ff+0)
   12FB 81                 4121 	add	a,c
   12FC 4F                 4122 	ld	c,a
   12FD 3ArC9s2D           4123 	ld	a,(#_ff+1)
   1300 88                 4124 	adc	a,b
   1301 06 00              4125 	ld	b,#0x00
   1303 21r00s00           4126 	ld	hl,#_sintab
   1306 09                 4127 	add	hl,bc
   1307 7E                 4128 	ld	a,(hl)
   1308 4F                 4129 	ld	c,a
   1309 CB 29              4130 	sra	c
   130B 79                 4131 	ld	a,c
   130C 17                 4132 	rla	
   130D 9F                 4133 	sbc	a,a
   130E 47                 4134 	ld	b,a
   130F 21 40 02           4135 	ld	hl,#0x0240
   1312 09                 4136 	add	hl,bc
   1313 4D                 4137 	ld	c,l
   1314 44                 4138 	ld	b,h
   1315 6B                 4139 	ld	l,e
   1316 62                 4140 	ld	h,d
   1317 71                 4141 	ld	(hl),c
   1318 23                 4142 	inc	hl
   1319 70                 4143 	ld	(hl),b
                           4144 ;demo.c:579: cmd.dest_y = y;
   131A 21r82s2D           4145 	ld	hl, #_cmd + 6
   131D DD 7E FE           4146 	ld	a,-2 (ix)
   1320 77                 4147 	ld	(hl),a
   1321 23                 4148 	inc	hl
   1322 DD 7E FF           4149 	ld	a,-1 (ix)
   1325 77                 4150 	ld	(hl),a
                           4151 ;demo.c:580: vdp_copier(&cmd);
   1326 21r7Cs2D           4152 	ld	hl,#_cmd
   1329 E5                 4153 	push	hl
   132A CDr00s00           4154 	call	_vdp_copier
   132D F1                 4155 	pop	af
                           4156 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4157 	ld	a,-2 (ix)
   1331 C6 02              4158 	add	a,#0x02
   1333 DD 77 FE           4159 	ld	-2 (ix),a
   1336 DD 7E FF           4160 	ld	a,-1 (ix)
   1339 CE 00              4161 	adc	a,#0x00
   133B DD 77 FF           4162 	ld	-1 (ix),a
   133E C3rDEs12           4163 	jp	00107$
   1341                    4164 00110$:
                           4165 ;demo.c:584: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21rC8s2D           4166 	ld	hl,#_ff + 0
   1344 4E                 4167 	ld	c,(hl)
   1345 21rC9s2D           4168 	ld	hl,#_ff + 1
   1348 46                 4169 	ld	b,(hl)
   1349 CB 28              4170 	sra	b
   134B CB 19              4171 	rr	c
   134D CB 28              4172 	sra	b
   134F CB 19              4173 	rr	c
   1351 21rC8s2D           4174 	ld	hl,#_ff + 0
   1354 5E                 4175 	ld	e,(hl)
   1355 21rC9s2D           4176 	ld	hl,#_ff + 1
   1358 56                 4177 	ld	d,(hl)
   1359 CB 2A              4178 	sra	d
   135B CB 1B              4179 	rr	e
   135D CB 2A              4180 	sra	d
   135F CB 1B              4181 	rr	e
   1361 CB 2A              4182 	sra	d
   1363 CB 1B              4183 	rr	e
   1365 43                 4184 	ld	b,e
   1366 79                 4185 	ld	a,c
   1367 F5                 4186 	push	af
   1368 33                 4187 	inc	sp
   1369 C5                 4188 	push	bc
   136A 33                 4189 	inc	sp
   136B 41                 4190 	ld	b,c
   136C 0E 04              4191 	ld	c,#0x04
   136E C5                 4192 	push	bc
   136F CDr00s00           4193 	call	_msx2_palette
   1372 F1                 4194 	pop	af
   1373 F1                 4195 	pop	af
                           4196 ;demo.c:586: ff+=4;
   1374 21rC8s2D           4197 	ld	hl,#_ff
   1377 7E                 4198 	ld	a,(hl)
   1378 C6 04              4199 	add	a,#0x04
   137A 23                 4200 	inc	hl
   137B 2B                 4201 	dec	hl
   137C C5                 4202 	push	bc
   137D 4F                 4203 	ld	c, a
   137E 23                 4204 	inc	hl
   137F 7E                 4205 	ld	a, (hl)
   1380 47                 4206 	ld	b, a
   1381 79                 4207 	ld	a, c
   1382 2B                 4208 	dec	hl
   1383 77                 4209 	ld	(hl), a
   1384 78                 4210 	ld	a, b
   1385 C1                 4211 	pop	bc
   1386 CE 00              4212 	adc	a,#0x00
   1388 23                 4213 	inc	hl
   1389 77                 4214 	ld	(hl),a
   138A DD F9              4215 	ld	sp,ix
   138C DD E1              4216 	pop	ix
   138E C9                 4217 	ret
   138F                    4218 _twister_end::
                           4219 ;demo.c:596: void bulbs() {
                           4220 ;	---------------------------------
                           4221 ; Function bulbs
                           4222 ; ---------------------------------
   138F                    4223 _bulbs_start::
   138F                    4224 _bulbs:
   138F DD E5              4225 	push	ix
   1391 DD 21 00 00        4226 	ld	ix,#0
   1395 DD 39              4227 	add	ix,sp
   1397 21 FA FF           4228 	ld	hl,#-6
   139A 39                 4229 	add	hl,sp
   139B F9                 4230 	ld	sp,hl
                           4231 ;demo.c:599: int sy = 16;
   139C 01 10 00           4232 	ld	bc,#0x0010
                           4233 ;demo.c:601: ender+=enderdir;
   139F 21rD4s2D           4234 	ld	hl,#_enderdir
   13A2 D5                 4235 	push	de
   13A3 FD 21rD2s2D        4236 	ld	iy,#_ender
   13A7 FD E5              4237 	push	iy
   13A9 D1                 4238 	pop	de
   13AA 1A                 4239 	ld	a,(de)
   13AB 86                 4240 	add	a,(hl)
   13AC 13                 4241 	inc	de
   13AD 1B                 4242 	dec	de
   13AE C5                 4243 	push	bc
   13AF 4F                 4244 	ld	c, a
   13B0 13                 4245 	inc	de
   13B1 1A                 4246 	ld	a, (de)
   13B2 47                 4247 	ld	b, a
   13B3 79                 4248 	ld	a, c
   13B4 1B                 4249 	dec	de
   13B5 12                 4250 	ld	(de), a
   13B6 78                 4251 	ld	a, b
   13B7 C1                 4252 	pop	bc
   13B8 23                 4253 	inc	hl
   13B9 8E                 4254 	adc	a,(hl)
   13BA 13                 4255 	inc	de
   13BB 12                 4256 	ld	(de),a
   13BC D1                 4257 	pop	de
                           4258 ;demo.c:602: if (ender < 2) enderdir = -enderdir;
   13BD 3ArD2s2D           4259 	ld	a,(#_ender+0)
   13C0 D6 02              4260 	sub	a,#0x02
   13C2 3ArD3s2D           4261 	ld	a,(#_ender+1)
   13C5 DE 00              4262 	sbc	a,#0x00
   13C7 F2rEBs13           4263 	jp	P,00102$
   13CA AF                 4264 	xor	a,a
   13CB FD 21rD4s2D        4265 	ld	iy,#_enderdir
   13CF 3E 00              4266 	ld	a,#0x00
   13D1 FD 9E 00           4267 	sbc	a,0 (iy)
   13D4 FD 21rD4s2D        4268 	ld	iy,#_enderdir
   13D8 FD 77 00           4269 	ld	0 (iy),a
   13DB FD 21rD4s2D        4270 	ld	iy,#_enderdir
   13DF 3E 00              4271 	ld	a,#0x00
   13E1 FD 9E 01           4272 	sbc	a,1 (iy)
   13E4 FD 21rD4s2D        4273 	ld	iy,#_enderdir
   13E8 FD 77 01           4274 	ld	1 (iy),a
   13EB                    4275 00102$:
                           4276 ;demo.c:603: if (ender >= 212) enderdir = -enderdir;
   13EB 3ArD2s2D           4277 	ld	a,(#_ender+0)
   13EE D6 D4              4278 	sub	a,#0xD4
   13F0 3ArD3s2D           4279 	ld	a,(#_ender+1)
   13F3 DE 00              4280 	sbc	a,#0x00
   13F5 FAr19s14           4281 	jp	M,00104$
   13F8 AF                 4282 	xor	a,a
   13F9 FD 21rD4s2D        4283 	ld	iy,#_enderdir
   13FD 3E 00              4284 	ld	a,#0x00
   13FF FD 9E 00           4285 	sbc	a,0 (iy)
   1402 FD 21rD4s2D        4286 	ld	iy,#_enderdir
   1406 FD 77 00           4287 	ld	0 (iy),a
   1409 FD 21rD4s2D        4288 	ld	iy,#_enderdir
   140D 3E 00              4289 	ld	a,#0x00
   140F FD 9E 01           4290 	sbc	a,1 (iy)
   1412 FD 21rD4s2D        4291 	ld	iy,#_enderdir
   1416 FD 77 01           4292 	ld	1 (iy),a
   1419                    4293 00104$:
                           4294 ;demo.c:605: enderend = ender + 92;
   1419 3ArD2s2D           4295 	ld	a,(#_ender+0)
   141C C6 5C              4296 	add	a,#0x5C
   141E DD 77 FE           4297 	ld	-2 (ix),a
   1421 3ArD3s2D           4298 	ld	a,(#_ender+1)
   1424 CE 00              4299 	adc	a,#0x00
   1426 DD 77 FF           4300 	ld	-1 (ix),a
                           4301 ;demo.c:607: if (enderend > 212) enderend = 212;
   1429 3E D4              4302 	ld	a,#0xD4
   142B DD 96 FE           4303 	sub	a,-2 (ix)
   142E 3E 00              4304 	ld	a,#0x00
   1430 DD 9E FF           4305 	sbc	a,-1 (ix)
   1433 F2r3Es14           4306 	jp	P,00106$
   1436 DD 36 FE D4        4307 	ld	-2 (ix),#0xD4
   143A DD 36 FF 00        4308 	ld	-1 (ix),#0x00
   143E                    4309 00106$:
                           4310 ;demo.c:608: if (enderend > 212-16) sy = 16-(212-enderend);
   143E 3E C4              4311 	ld	a,#0xC4
   1440 DD 96 FE           4312 	sub	a,-2 (ix)
   1443 3E 00              4313 	ld	a,#0x00
   1445 DD 9E FF           4314 	sbc	a,-1 (ix)
   1448 F2r5Fs14           4315 	jp	P,00108$
   144B 3E D4              4316 	ld	a,#0xD4
   144D DD 96 FE           4317 	sub	a,-2 (ix)
   1450 5F                 4318 	ld	e,a
   1451 3E 00              4319 	ld	a,#0x00
   1453 DD 9E FF           4320 	sbc	a,-1 (ix)
   1456 57                 4321 	ld	d,a
   1457 3E 10              4322 	ld	a,#0x10
   1459 93                 4323 	sub	a,e
   145A 4F                 4324 	ld	c,a
   145B 3E 00              4325 	ld	a,#0x00
   145D 9A                 4326 	sbc	a,d
   145E 47                 4327 	ld	b,a
   145F                    4328 00108$:
                           4329 ;demo.c:610: if(bulbflipper == 1) {
   145F 3ArCCs2D           4330 	ld	a,(#_bulbflipper+0)
   1462 D6 01              4331 	sub	a,#0x01
   1464 20 06              4332 	jr	NZ,00133$
   1466 3ArCDs2D           4333 	ld	a,(#_bulbflipper+1)
   1469 B7                 4334 	or	a,a
   146A 28 03              4335 	jr	Z,00134$
   146C                    4336 00133$:
   146C C3r21s15           4337 	jp	00110$
   146F                    4338 00134$:
                           4339 ;demo.c:611: cmd.size_x = 72;
   146F 11r84s2D           4340 	ld	de,#_cmd + 8
   1472 EB                 4341 	ex	de,hl
   1473 36 48              4342 	ld	(hl),#0x48
   1475 23                 4343 	inc	hl
   1476 36 00              4344 	ld	(hl),#0x00
                           4345 ;demo.c:612: cmd.size_y = sy;
   1478 11r86s2D           4346 	ld	de,#_cmd + 10
   147B 6B                 4347 	ld	l,e
   147C 62                 4348 	ld	h,d
   147D 71                 4349 	ld	(hl),c
   147E 23                 4350 	inc	hl
   147F 70                 4351 	ld	(hl),b
                           4352 ;demo.c:613: cmd.data = 0;
   1480 3E 00              4353 	ld	a,#0x00
   1482 32r88s2D           4354 	ld	(#_cmd + 12),a
                           4355 ;demo.c:614: cmd.argument = 0x04; // from 72xY to left
   1485 3E 04              4356 	ld	a,#0x04
   1487 32r89s2D           4357 	ld	(#_cmd + 13),a
                           4358 ;demo.c:615: cmd.command = 0xe0; // vram to vram, y only
   148A 01r8As2D           4359 	ld	bc,#_cmd + 14
   148D 3E E0              4360 	ld	a,#0xE0
   148F 02                 4361 	ld	(bc),a
                           4362 ;demo.c:616: cmd.source_x = 72;
   1490 21r7Cs2D           4363 	ld	hl,#_cmd
   1493 36 48              4364 	ld	(hl),#0x48
   1495 23                 4365 	inc	hl
   1496 36 00              4366 	ld	(hl),#0x00
                           4367 ;demo.c:617: cmd.dest_x = 72;
   1498 21r80s2D           4368 	ld	hl, #_cmd + 4
   149B 36 48              4369 	ld	(hl),#0x48
   149D 23                 4370 	inc	hl
   149E 36 00              4371 	ld	(hl),#0x00
                           4372 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14A0 ED 4BrD2s2D        4373 	ld	bc,(_ender)
   14A4 DD 71 FC           4374 	ld	-4 (ix),c
   14A7 DD 70 FD           4375 	ld	-3 (ix),b
   14AA                    4376 00112$:
   14AA DD 7E FC           4377 	ld	a,-4 (ix)
   14AD DD 96 FE           4378 	sub	a,-2 (ix)
   14B0 DD 7E FD           4379 	ld	a,-3 (ix)
   14B3 DD 9E FF           4380 	sbc	a,-1 (ix)
   14B6 F2r08s15           4381 	jp	P,00115$
                           4382 ;demo.c:620: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   14B9 01r7Es2D           4383 	ld	bc,#_cmd + 2
   14BC 3ArCEs2D           4384 	ld	a,(#_ff1+0)
   14BF DD 86 FC           4385 	add	a,-4 (ix)
   14C2 5F                 4386 	ld	e,a
   14C3 3ArCFs2D           4387 	ld	a,(#_ff1+1)
   14C6 DD 8E FD           4388 	adc	a,-3 (ix)
   14C9 16 00              4389 	ld	d,#0x00
   14CB 21r00s00           4390 	ld	hl,#_sintab
   14CE 19                 4391 	add	hl,de
   14CF 5E                 4392 	ld	e,(hl)
   14D0 CB 2B              4393 	sra	e
   14D2 7B                 4394 	ld	a,e
   14D3 17                 4395 	rla	
   14D4 9F                 4396 	sbc	a,a
   14D5 57                 4397 	ld	d,a
   14D6 21 40 01           4398 	ld	hl,#0x0140
   14D9 19                 4399 	add	hl,de
   14DA EB                 4400 	ex	de,hl
   14DB 69                 4401 	ld	l,c
   14DC 60                 4402 	ld	h,b
   14DD 73                 4403 	ld	(hl),e
   14DE 23                 4404 	inc	hl
   14DF 72                 4405 	ld	(hl),d
                           4406 ;demo.c:621: cmd.dest_y = y;
   14E0 11r82s2D           4407 	ld	de,#_cmd + 6
   14E3 EB                 4408 	ex	de,hl
   14E4 DD 7E FC           4409 	ld	a,-4 (ix)
   14E7 77                 4410 	ld	(hl),a
   14E8 23                 4411 	inc	hl
   14E9 DD 7E FD           4412 	ld	a,-3 (ix)
   14EC 77                 4413 	ld	(hl),a
                           4414 ;demo.c:622: vdp_copier(&cmd);
   14ED 21r7Cs2D           4415 	ld	hl,#_cmd
   14F0 E5                 4416 	push	hl
   14F1 CDr00s00           4417 	call	_vdp_copier
   14F4 F1                 4418 	pop	af
                           4419 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14F5 DD 7E FC           4420 	ld	a,-4 (ix)
   14F8 C6 10              4421 	add	a,#0x10
   14FA DD 77 FC           4422 	ld	-4 (ix),a
   14FD DD 7E FD           4423 	ld	a,-3 (ix)
   1500 CE 00              4424 	adc	a,#0x00
   1502 DD 77 FD           4425 	ld	-3 (ix),a
   1505 C3rAAs14           4426 	jp	00112$
   1508                    4427 00115$:
                           4428 ;demo.c:624: ff1+=4;
   1508 21rCEs2D           4429 	ld	hl,#_ff1
   150B 7E                 4430 	ld	a,(hl)
   150C C6 04              4431 	add	a,#0x04
   150E 23                 4432 	inc	hl
   150F 2B                 4433 	dec	hl
   1510 C5                 4434 	push	bc
   1511 4F                 4435 	ld	c, a
   1512 23                 4436 	inc	hl
   1513 7E                 4437 	ld	a, (hl)
   1514 47                 4438 	ld	b, a
   1515 79                 4439 	ld	a, c
   1516 2B                 4440 	dec	hl
   1517 77                 4441 	ld	(hl), a
   1518 78                 4442 	ld	a, b
   1519 C1                 4443 	pop	bc
   151A CE 00              4444 	adc	a,#0x00
   151C 23                 4445 	inc	hl
   151D 77                 4446 	ld	(hl),a
   151E C3rC3s15           4447 	jp	00111$
   1521                    4448 00110$:
                           4449 ;demo.c:628: cmd.size_x = 72;
   1521 11r84s2D           4450 	ld	de,#_cmd + 8
   1524 EB                 4451 	ex	de,hl
   1525 36 48              4452 	ld	(hl),#0x48
   1527 23                 4453 	inc	hl
   1528 36 00              4454 	ld	(hl),#0x00
                           4455 ;demo.c:629: cmd.size_y = 16;
   152A 11r86s2D           4456 	ld	de,#_cmd + 10
   152D EB                 4457 	ex	de,hl
   152E 36 10              4458 	ld	(hl),#0x10
   1530 23                 4459 	inc	hl
   1531 36 00              4460 	ld	(hl),#0x00
                           4461 ;demo.c:630: cmd.data = 0;
   1533 11r88s2D           4462 	ld	de,#_cmd + 12
   1536 3E 00              4463 	ld	a,#0x00
   1538 12                 4464 	ld	(de),a
                           4465 ;demo.c:631: cmd.argument = 0x00; // from 182xY to right
   1539 11r89s2D           4466 	ld	de,#_cmd + 13
   153C 3E 00              4467 	ld	a,#0x00
   153E 12                 4468 	ld	(de),a
                           4469 ;demo.c:632: cmd.command = 0xe0; // vram to vram, y only
   153F 11r8As2D           4470 	ld	de,#_cmd + 14
   1542 3E E0              4471 	ld	a,#0xE0
   1544 12                 4472 	ld	(de),a
                           4473 ;demo.c:633: cmd.source_x = 182;
   1545 21r7Cs2D           4474 	ld	hl,#_cmd
   1548 36 B6              4475 	ld	(hl),#0xB6
   154A 23                 4476 	inc	hl
   154B 36 00              4477 	ld	(hl),#0x00
                           4478 ;demo.c:634: cmd.dest_x = 182;
   154D 11r80s2D           4479 	ld	de,#_cmd + 4
   1550 6B                 4480 	ld	l,e
   1551 62                 4481 	ld	h,d
   1552 36 B6              4482 	ld	(hl),#0xB6
   1554 23                 4483 	inc	hl
   1555 36 00              4484 	ld	(hl),#0x00
                           4485 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   1557 ED 4BrD2s2D        4486 	ld	bc,(_ender)
   155B                    4487 00116$:
   155B 79                 4488 	ld	a,c
   155C DD 96 FE           4489 	sub	a,-2 (ix)
   155F 78                 4490 	ld	a,b
   1560 DD 9E FF           4491 	sbc	a,-1 (ix)
   1563 F2rADs15           4492 	jp	P,00119$
                           4493 ;demo.c:637: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1566 21r7Es2D           4494 	ld	hl,#_cmd + 2
   1569 DD 75 FA           4495 	ld	-6 (ix),l
   156C DD 74 FB           4496 	ld	-5 (ix),h
   156F 3ArD0s2D           4497 	ld	a,(#_ff2+0)
   1572 81                 4498 	add	a,c
   1573 5F                 4499 	ld	e,a
   1574 3ArD1s2D           4500 	ld	a,(#_ff2+1)
   1577 88                 4501 	adc	a,b
   1578 16 00              4502 	ld	d,#0x00
   157A 21r00s00           4503 	ld	hl,#_sintab
   157D 19                 4504 	add	hl,de
   157E 5E                 4505 	ld	e,(hl)
   157F CB 2B              4506 	sra	e
   1581 7B                 4507 	ld	a,e
   1582 17                 4508 	rla	
   1583 9F                 4509 	sbc	a,a
   1584 57                 4510 	ld	d,a
   1585 21 40 01           4511 	ld	hl,#0x0140
   1588 19                 4512 	add	hl,de
   1589 EB                 4513 	ex	de,hl
   158A DD 6E FA           4514 	ld	l,-6 (ix)
   158D DD 66 FB           4515 	ld	h,-5 (ix)
   1590 73                 4516 	ld	(hl),e
   1591 23                 4517 	inc	hl
   1592 72                 4518 	ld	(hl),d
                           4519 ;demo.c:638: cmd.dest_y = y;
   1593 11r82s2D           4520 	ld	de,#_cmd + 6
   1596 EB                 4521 	ex	de,hl
   1597 71                 4522 	ld	(hl),c
   1598 23                 4523 	inc	hl
   1599 70                 4524 	ld	(hl),b
                           4525 ;demo.c:639: vdp_copier(&cmd);
   159A C5                 4526 	push	bc
   159B 21r7Cs2D           4527 	ld	hl,#_cmd
   159E E5                 4528 	push	hl
   159F CDr00s00           4529 	call	_vdp_copier
   15A2 F1                 4530 	pop	af
   15A3 C1                 4531 	pop	bc
                           4532 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   15A4 21 10 00           4533 	ld	hl,#0x0010
   15A7 09                 4534 	add	hl,bc
   15A8 4D                 4535 	ld	c,l
   15A9 44                 4536 	ld	b,h
   15AA C3r5Bs15           4537 	jp	00116$
   15AD                    4538 00119$:
                           4539 ;demo.c:641: ff2+=4;
   15AD 21rD0s2D           4540 	ld	hl,#_ff2
   15B0 7E                 4541 	ld	a,(hl)
   15B1 C6 04              4542 	add	a,#0x04
   15B3 23                 4543 	inc	hl
   15B4 2B                 4544 	dec	hl
   15B5 C5                 4545 	push	bc
   15B6 4F                 4546 	ld	c, a
   15B7 23                 4547 	inc	hl
   15B8 7E                 4548 	ld	a, (hl)
   15B9 47                 4549 	ld	b, a
   15BA 79                 4550 	ld	a, c
   15BB 2B                 4551 	dec	hl
   15BC 77                 4552 	ld	(hl), a
   15BD 78                 4553 	ld	a, b
   15BE C1                 4554 	pop	bc
   15BF CE 00              4555 	adc	a,#0x00
   15C1 23                 4556 	inc	hl
   15C2 77                 4557 	ld	(hl),a
   15C3                    4558 00111$:
                           4559 ;demo.c:644: bulbflipper = -bulbflipper;
   15C3 AF                 4560 	xor	a,a
   15C4 FD 21rCCs2D        4561 	ld	iy,#_bulbflipper
   15C8 3E 00              4562 	ld	a,#0x00
   15CA FD 9E 00           4563 	sbc	a,0 (iy)
   15CD 21rCCs2D           4564 	ld	hl,#_bulbflipper + 0
   15D0 77                 4565 	ld	(hl), a
   15D1 FD 21rCCs2D        4566 	ld	iy,#_bulbflipper
   15D5 3E 00              4567 	ld	a,#0x00
   15D7 FD 9E 01           4568 	sbc	a,1 (iy)
   15DA 21rCDs2D           4569 	ld	hl,#_bulbflipper + 1
   15DD 77                 4570 	ld	(hl), a
   15DE DD F9              4571 	ld	sp,ix
   15E0 DD E1              4572 	pop	ix
   15E2 C9                 4573 	ret
   15E3                    4574 _bulbs_end::
                           4575 ;demo.c:658: void animplay() {
                           4576 ;	---------------------------------
                           4577 ; Function animplay
                           4578 ; ---------------------------------
   15E3                    4579 _animplay_start::
   15E3                    4580 _animplay:
   15E3 DD E5              4581 	push	ix
   15E5 DD 21 00 00        4582 	ld	ix,#0
   15E9 DD 39              4583 	add	ix,sp
   15EB F5                 4584 	push	af
   15EC 3B                 4585 	dec	sp
                           4586 ;demo.c:663: if (anim_init == 0) {
   15ED 3ArDEs2D           4587 	ld	a,(#_anim_init+0)
   15F0 21rDFs2D           4588 	ld	hl,#_anim_init + 1
   15F3 B6                 4589 	or	a,(hl)
   15F4 20 35              4590 	jr	NZ,00117$
                           4591 ;demo.c:665: vdp_register(0,0);
   15F6 21 00 00           4592 	ld	hl,#0x0000
   15F9 E5                 4593 	push	hl
   15FA CDr00s00           4594 	call	_vdp_register
   15FD F1                 4595 	pop	af
                           4596 ;demo.c:666: vdp_register(1,0);
   15FE 21 01 00           4597 	ld	hl,#0x0001
   1601 E5                 4598 	push	hl
   1602 CDr00s00           4599 	call	_vdp_register
   1605 F1                 4600 	pop	af
                           4601 ;demo.c:671: vdp_set_screen5();
   1606 CDr00s00           4602 	call	_vdp_set_screen5
                           4603 ;demo.c:672: vdp_register(1,0x60);
   1609 21 01 60           4604 	ld	hl,#0x6001
   160C E5                 4605 	push	hl
   160D CDr00s00           4606 	call	_vdp_register
   1610 F1                 4607 	pop	af
                           4608 ;demo.c:673: vdp_register(9,2); // 192 lines
   1611 21 09 02           4609 	ld	hl,#0x0209
   1614 E5                 4610 	push	hl
   1615 CDr00s00           4611 	call	_vdp_register
   1618 F1                 4612 	pop	af
                           4613 ;demo.c:676: anim_init = 1;
   1619 21rDEs2D           4614 	ld	hl,#_anim_init + 0
   161C 36 01              4615 	ld	(hl), #0x01
   161E 21rDFs2D           4616 	ld	hl,#_anim_init + 1
   1621 36 00              4617 	ld	(hl), #0x00
                           4618 ;demo.c:677: vdp_load_palette(tf_palette);
   1623 21r38s2D           4619 	ld	hl,#_tf_palette
   1626 E5                 4620 	push	hl
   1627 CDr00s00           4621 	call	_vdp_load_palette
   162A F1                 4622 	pop	af
                           4623 ;demo.c:680: for (y = 0; y < 96; y+=1) {
   162B                    4624 00117$:
   162B DD 36 FF 00        4625 	ld	-1 (ix),#0x00
   162F                    4626 00109$:
   162F DD 7E FF           4627 	ld	a,-1 (ix)
   1632 D6 60              4628 	sub	a,#0x60
   1634 D2rB6s16           4629 	jp	NC,00112$
                           4630 ;demo.c:681: cmd.source_x = xo;
   1637 ED 5BrD6s2D        4631 	ld	de,(_xo)
   163B 21r7Cs2D           4632 	ld	hl,#_cmd
   163E 73                 4633 	ld	(hl),e
   163F 23                 4634 	inc	hl
   1640 72                 4635 	ld	(hl),d
                           4636 ;demo.c:682: cmd.source_y = 256+po+yo+(y>>1);
   1641 11r7Es2D           4637 	ld	de,#_cmd + 2
   1644 3ArDAs2D           4638 	ld	a,(#_po+0)
   1647 4F                 4639 	ld	c,a
   1648 3ArDBs2D           4640 	ld	a,(#_po+1)
   164B C6 01              4641 	add	a,#0x01
   164D 47                 4642 	ld	b,a
   164E 21rD8s2D           4643 	ld	hl,#_yo
   1651 79                 4644 	ld	a,c
   1652 86                 4645 	add	a,(hl)
   1653 DD 77 FD           4646 	ld	-3 (ix),a
   1656 78                 4647 	ld	a,b
   1657 23                 4648 	inc	hl
   1658 8E                 4649 	adc	a,(hl)
   1659 DD 77 FE           4650 	ld	-2 (ix),a
   165C DD 4E FF           4651 	ld	c,-1 (ix)
   165F CB 39              4652 	srl	c
   1661 06 00              4653 	ld	b,#0x00
   1663 DD 7E FD           4654 	ld	a,-3 (ix)
   1666 81                 4655 	add	a,c
   1667 4F                 4656 	ld	c,a
   1668 DD 7E FE           4657 	ld	a,-2 (ix)
   166B 88                 4658 	adc	a,b
   166C 47                 4659 	ld	b,a
   166D 6B                 4660 	ld	l,e
   166E 62                 4661 	ld	h,d
   166F 71                 4662 	ld	(hl),c
   1670 23                 4663 	inc	hl
   1671 70                 4664 	ld	(hl),b
                           4665 ;demo.c:683: cmd.dest_x = 0;
   1672 21r80s2D           4666 	ld	hl, #_cmd + 4
   1675 36 00              4667 	ld	(hl),#0x00
   1677 23                 4668 	inc	hl
   1678 36 00              4669 	ld	(hl),#0x00
                           4670 ;demo.c:684: cmd.dest_y = (y<<1);
   167A 01r82s2D           4671 	ld	bc,#_cmd + 6
   167D DD 5E FF           4672 	ld	e,-1 (ix)
   1680 16 00              4673 	ld	d,#0x00
   1682 CB 23              4674 	sla	e
   1684 CB 12              4675 	rl	d
   1686 69                 4676 	ld	l,c
   1687 60                 4677 	ld	h,b
   1688 73                 4678 	ld	(hl),e
   1689 23                 4679 	inc	hl
   168A 72                 4680 	ld	(hl),d
                           4681 ;demo.c:685: cmd.size_x = 128;
   168B 21r84s2D           4682 	ld	hl, #_cmd + 8
   168E 36 80              4683 	ld	(hl),#0x80
   1690 23                 4684 	inc	hl
   1691 36 00              4685 	ld	(hl),#0x00
                           4686 ;demo.c:686: cmd.size_y = 1;
   1693 21r86s2D           4687 	ld	hl, #_cmd + 10
   1696 36 01              4688 	ld	(hl),#0x01
   1698 23                 4689 	inc	hl
   1699 36 00              4690 	ld	(hl),#0x00
                           4691 ;demo.c:687: cmd.data = 0;
                           4692 ;demo.c:688: cmd.argument = 0x00;
   169B 3E 00              4693 	ld	a,#0x00
   169D 32r88s2D           4694 	ld	(#_cmd + 12),a
   16A0 32r89s2D           4695 	ld	(#_cmd + 13),a
                           4696 ;demo.c:689: cmd.command = 0xD0;
   16A3 3E D0              4697 	ld	a,#0xD0
   16A5 32r8As2D           4698 	ld	(#_cmd + 14),a
                           4699 ;demo.c:690: vdp_copier(&cmd);
   16A8 21r7Cs2D           4700 	ld	hl,#_cmd
   16AB E5                 4701 	push	hl
   16AC CDr00s00           4702 	call	_vdp_copier
   16AF F1                 4703 	pop	af
                           4704 ;demo.c:680: for (y = 0; y < 96; y+=1) {
   16B0 DD 34 FF           4705 	inc	-1 (ix)
   16B3 C3r2Fs16           4706 	jp	00109$
   16B6                    4707 00112$:
                           4708 ;demo.c:693: xo+=128;
   16B6 21rD6s2D           4709 	ld	hl,#_xo
   16B9 7E                 4710 	ld	a,(hl)
   16BA C6 80              4711 	add	a,#0x80
   16BC 23                 4712 	inc	hl
   16BD 2B                 4713 	dec	hl
   16BE C5                 4714 	push	bc
   16BF 4F                 4715 	ld	c, a
   16C0 23                 4716 	inc	hl
   16C1 7E                 4717 	ld	a, (hl)
   16C2 47                 4718 	ld	b, a
   16C3 79                 4719 	ld	a, c
   16C4 2B                 4720 	dec	hl
   16C5 77                 4721 	ld	(hl), a
   16C6 78                 4722 	ld	a, b
   16C7 C1                 4723 	pop	bc
   16C8 CE 00              4724 	adc	a,#0x00
   16CA 23                 4725 	inc	hl
   16CB 77                 4726 	ld	(hl),a
                           4727 ;demo.c:694: if (xo >= 256) {
   16CC 3ArD6s2D           4728 	ld	a,(#_xo+0)
   16CF D6 00              4729 	sub	a,#0x00
   16D1 3ArD7s2D           4730 	ld	a,(#_xo+1)
   16D4 DE 01              4731 	sbc	a,#0x01
   16D6 FAr3Ds17           4732 	jp	M,00108$
                           4733 ;demo.c:695: xo = 0;
   16D9 21rD6s2D           4734 	ld	hl,#_xo + 0
   16DC 36 00              4735 	ld	(hl), #0x00
   16DE 21rD7s2D           4736 	ld	hl,#_xo + 1
   16E1 36 00              4737 	ld	(hl), #0x00
                           4738 ;demo.c:696: yo+=48;
   16E3 21rD8s2D           4739 	ld	hl,#_yo
   16E6 7E                 4740 	ld	a,(hl)
   16E7 C6 30              4741 	add	a,#0x30
   16E9 23                 4742 	inc	hl
   16EA 2B                 4743 	dec	hl
   16EB C5                 4744 	push	bc
   16EC 4F                 4745 	ld	c, a
   16ED 23                 4746 	inc	hl
   16EE 7E                 4747 	ld	a, (hl)
   16EF 47                 4748 	ld	b, a
   16F0 79                 4749 	ld	a, c
   16F1 2B                 4750 	dec	hl
   16F2 77                 4751 	ld	(hl), a
   16F3 78                 4752 	ld	a, b
   16F4 C1                 4753 	pop	bc
   16F5 CE 00              4754 	adc	a,#0x00
   16F7 23                 4755 	inc	hl
   16F8 77                 4756 	ld	(hl),a
                           4757 ;demo.c:697: if (yo >= 192) { yo = 0; po+=256; }
   16F9 3ArD8s2D           4758 	ld	a,(#_yo+0)
   16FC D6 C0              4759 	sub	a,#0xC0
   16FE 3ArD9s2D           4760 	ld	a,(#_yo+1)
   1701 DE 00              4761 	sbc	a,#0x00
   1703 FAr26s17           4762 	jp	M,00104$
   1706 21rD8s2D           4763 	ld	hl,#_yo + 0
   1709 36 00              4764 	ld	(hl), #0x00
   170B 21rD9s2D           4765 	ld	hl,#_yo + 1
   170E 36 00              4766 	ld	(hl), #0x00
   1710 21rDAs2D           4767 	ld	hl,#_po
   1713 7E                 4768 	ld	a,(hl)
   1714 C6 00              4769 	add	a,#0x00
   1716 23                 4770 	inc	hl
   1717 2B                 4771 	dec	hl
   1718 C5                 4772 	push	bc
   1719 4F                 4773 	ld	c, a
   171A 23                 4774 	inc	hl
   171B 7E                 4775 	ld	a, (hl)
   171C 47                 4776 	ld	b, a
   171D 79                 4777 	ld	a, c
   171E 2B                 4778 	dec	hl
   171F 77                 4779 	ld	(hl), a
   1720 78                 4780 	ld	a, b
   1721 C1                 4781 	pop	bc
   1722 CE 01              4782 	adc	a,#0x01
   1724 23                 4783 	inc	hl
   1725 77                 4784 	ld	(hl),a
   1726                    4785 00104$:
                           4786 ;demo.c:698: if (po >= 768) {
   1726 3ArDAs2D           4787 	ld	a,(#_po+0)
   1729 D6 00              4788 	sub	a,#0x00
   172B 3ArDBs2D           4789 	ld	a,(#_po+1)
   172E DE 03              4790 	sbc	a,#0x03
   1730 FAr3Ds17           4791 	jp	M,00108$
                           4792 ;demo.c:699: po = 0;
   1733 21rDAs2D           4793 	ld	hl,#_po + 0
   1736 36 00              4794 	ld	(hl), #0x00
   1738 21rDBs2D           4795 	ld	hl,#_po + 1
   173B 36 00              4796 	ld	(hl), #0x00
   173D                    4797 00108$:
                           4798 ;demo.c:706: fffaaa++;
   173D FD 21rDCs2D        4799 	ld	iy,#_fffaaa
   1741 FD 34 00           4800 	inc	0 (iy)
   1744 20 07              4801 	jr	NZ,00124$
   1746 FD 21rDCs2D        4802 	ld	iy,#_fffaaa
   174A FD 34 01           4803 	inc	1 (iy)
   174D                    4804 00124$:
   174D DD F9              4805 	ld	sp,ix
   174F DD E1              4806 	pop	ix
   1751 C9                 4807 	ret
   1752                    4808 _animplay_end::
                           4809 ;demo.c:718: void drawbox(int box_x, int box_y, uint8_t x, uint8_t y) {
                           4810 ;	---------------------------------
                           4811 ; Function drawbox
                           4812 ; ---------------------------------
   1752                    4813 _drawbox_start::
   1752                    4814 _drawbox:
   1752 DD E5              4815 	push	ix
   1754 DD 21 00 00        4816 	ld	ix,#0
   1758 DD 39              4817 	add	ix,sp
                           4818 ;demo.c:719: dbly = 0;
   175A 21rE3s2D           4819 	ld	hl,#_dbly + 0
   175D 36 00              4820 	ld	(hl), #0x00
   175F 21rE4s2D           4821 	ld	hl,#_dbly + 1
   1762 36 00              4822 	ld	(hl), #0x00
                           4823 ;demo.c:721: cmd.source_x = box_x * 42;
   1764 DD 5E 04           4824 	ld	e,4 (ix)
   1767 DD 56 05           4825 	ld	d,5 (ix)
   176A 6B                 4826 	ld	l,e
   176B 62                 4827 	ld	h,d
   176C 29                 4828 	add	hl,hl
   176D 29                 4829 	add	hl,hl
   176E 19                 4830 	add	hl,de
   176F 29                 4831 	add	hl,hl
   1770 29                 4832 	add	hl,hl
   1771 19                 4833 	add	hl,de
   1772 29                 4834 	add	hl,hl
   1773 4D                 4835 	ld	c,l
   1774 44                 4836 	ld	b,h
   1775 21r7Cs2D           4837 	ld	hl,#_cmd
   1778 71                 4838 	ld	(hl),c
   1779 23                 4839 	inc	hl
   177A 70                 4840 	ld	(hl),b
                           4841 ;demo.c:722: cmd.source_y = 768+box_y * 42;
   177B 01r7Es2D           4842 	ld	bc,#_cmd + 2
   177E DD 5E 06           4843 	ld	e,6 (ix)
   1781 DD 56 07           4844 	ld	d,7 (ix)
   1784 6B                 4845 	ld	l,e
   1785 62                 4846 	ld	h,d
   1786 29                 4847 	add	hl,hl
   1787 29                 4848 	add	hl,hl
   1788 19                 4849 	add	hl,de
   1789 29                 4850 	add	hl,hl
   178A 29                 4851 	add	hl,hl
   178B 19                 4852 	add	hl,de
   178C 29                 4853 	add	hl,hl
   178D EB                 4854 	ex	de,hl
   178E 21 00 03           4855 	ld	hl,#0x0300
   1791 19                 4856 	add	hl,de
   1792 EB                 4857 	ex	de,hl
   1793 69                 4858 	ld	l,c
   1794 60                 4859 	ld	h,b
   1795 73                 4860 	ld	(hl),e
   1796 23                 4861 	inc	hl
   1797 72                 4862 	ld	(hl),d
                           4863 ;demo.c:723: cmd.dest_x = x;
   1798 01r80s2D           4864 	ld	bc,#_cmd + 4
   179B DD 5E 08           4865 	ld	e,8 (ix)
   179E 16 00              4866 	ld	d,#0x00
   17A0 69                 4867 	ld	l,c
   17A1 60                 4868 	ld	h,b
   17A2 73                 4869 	ld	(hl),e
   17A3 23                 4870 	inc	hl
   17A4 72                 4871 	ld	(hl),d
                           4872 ;demo.c:724: cmd.dest_y = dbly+y;
   17A5 01r82s2D           4873 	ld	bc,#_cmd + 6
   17A8 DD 5E 09           4874 	ld	e,9 (ix)
   17AB 16 00              4875 	ld	d,#0x00
   17AD 69                 4876 	ld	l,c
   17AE 60                 4877 	ld	h,b
   17AF 73                 4878 	ld	(hl),e
   17B0 23                 4879 	inc	hl
   17B1 72                 4880 	ld	(hl),d
                           4881 ;demo.c:725: cmd.size_x = 42;
   17B2 21r84s2D           4882 	ld	hl, #_cmd + 8
   17B5 36 2A              4883 	ld	(hl),#0x2A
   17B7 23                 4884 	inc	hl
   17B8 36 00              4885 	ld	(hl),#0x00
                           4886 ;demo.c:726: cmd.size_y = 42;
   17BA 21r86s2D           4887 	ld	hl, #_cmd + 10
   17BD 36 2A              4888 	ld	(hl),#0x2A
   17BF 23                 4889 	inc	hl
   17C0 36 00              4890 	ld	(hl),#0x00
                           4891 ;demo.c:727: cmd.data = 0;
                           4892 ;demo.c:728: cmd.argument = 0x00;
   17C2 3E 00              4893 	ld	a,#0x00
   17C4 32r88s2D           4894 	ld	(#_cmd + 12),a
   17C7 32r89s2D           4895 	ld	(#_cmd + 13),a
                           4896 ;demo.c:729: cmd.command = 0x98; // TIMP sprite
   17CA 3E 98              4897 	ld	a,#0x98
   17CC 32r8As2D           4898 	ld	(#_cmd + 14),a
                           4899 ;demo.c:730: vdp_copier(&cmd);
   17CF D5                 4900 	push	de
   17D0 21r7Cs2D           4901 	ld	hl,#_cmd
   17D3 E5                 4902 	push	hl
   17D4 CDr00s00           4903 	call	_vdp_copier
   17D7 F1                 4904 	pop	af
   17D8 D1                 4905 	pop	de
                           4906 ;demo.c:732: prevx = x;
   17D9 DD 7E 08           4907 	ld	a,8 (ix)
   17DC 21rE5s2D           4908 	ld	hl,#_prevx + 0
   17DF 77                 4909 	ld	(hl), a
   17E0 21rE6s2D           4910 	ld	hl,#_prevx + 1
   17E3 36 00              4911 	ld	(hl), #0x00
                           4912 ;demo.c:733: prevy = y;
   17E5 21rE7s2D           4913 	ld	hl,#_prevy + 0
   17E8 73                 4914 	ld	(hl), e
   17E9 21rE8s2D           4915 	ld	hl,#_prevy + 1
   17EC 72                 4916 	ld	(hl), d
                           4917 ;demo.c:734: prevbx = box_x;
   17ED DD 7E 04           4918 	ld	a,4 (ix)
   17F0 21rE9s2D           4919 	ld	hl,#_prevbx + 0
   17F3 77                 4920 	ld	(hl), a
   17F4 DD 7E 05           4921 	ld	a,5 (ix)
   17F7 21rEAs2D           4922 	ld	hl,#_prevbx + 1
   17FA 77                 4923 	ld	(hl), a
                           4924 ;demo.c:735: prevby = box_y;
   17FB DD 7E 06           4925 	ld	a,6 (ix)
   17FE 21rEBs2D           4926 	ld	hl,#_prevby + 0
   1801 77                 4927 	ld	(hl), a
   1802 DD 7E 07           4928 	ld	a,7 (ix)
   1805 21rECs2D           4929 	ld	hl,#_prevby + 1
   1808 77                 4930 	ld	(hl), a
   1809 DD E1              4931 	pop	ix
   180B C9                 4932 	ret
   180C                    4933 _drawbox_end::
                           4934 ;demo.c:749: void boxes() {
                           4935 ;	---------------------------------
                           4936 ; Function boxes
                           4937 ; ---------------------------------
   180C                    4938 _boxes_start::
   180C                    4939 _boxes:
                           4940 ;demo.c:753: if (bonc == 1) {
   180C 3ArF9s2D           4941 	ld	a,(#_bonc+0)
   180F D6 01              4942 	sub	a,#0x01
   1811 20 06              4943 	jr	NZ,00156$
   1813 3ArFAs2D           4944 	ld	a,(#_bonc+1)
   1816 B7                 4945 	or	a,a
   1817 28 02              4946 	jr	Z,00157$
   1819                    4947 00156$:
   1819 18 4D              4948 	jr	00102$
   181B                    4949 00157$:
                           4950 ;demo.c:755: cmd.source_x = 0;
   181B 21r7Cs2D           4951 	ld	hl,#_cmd
   181E 36 00              4952 	ld	(hl),#0x00
   1820 23                 4953 	inc	hl
   1821 36 00              4954 	ld	(hl),#0x00
                           4955 ;demo.c:756: cmd.source_y = 256;
   1823 21r7Es2D           4956 	ld	hl, #_cmd + 2
   1826 36 00              4957 	ld	(hl),#0x00
   1828 23                 4958 	inc	hl
   1829 36 01              4959 	ld	(hl),#0x01
                           4960 ;demo.c:757: cmd.dest_x = pbx;
   182B 01r80s2D           4961 	ld	bc,#_cmd + 4
   182E ED 5BrFBs2D        4962 	ld	de,(_pbx)
   1832 69                 4963 	ld	l,c
   1833 60                 4964 	ld	h,b
   1834 73                 4965 	ld	(hl),e
   1835 23                 4966 	inc	hl
   1836 72                 4967 	ld	(hl),d
                           4968 ;demo.c:758: cmd.dest_y = pbt;
   1837 01r82s2D           4969 	ld	bc,#_cmd + 6
   183A ED 5BrFDs2D        4970 	ld	de,(_pbt)
   183E 69                 4971 	ld	l,c
   183F 60                 4972 	ld	h,b
   1840 73                 4973 	ld	(hl),e
   1841 23                 4974 	inc	hl
   1842 72                 4975 	ld	(hl),d
                           4976 ;demo.c:759: cmd.size_x = 42;
   1843 21r84s2D           4977 	ld	hl, #_cmd + 8
   1846 36 2A              4978 	ld	(hl),#0x2A
   1848 23                 4979 	inc	hl
   1849 36 00              4980 	ld	(hl),#0x00
                           4981 ;demo.c:760: cmd.size_y = 42;
   184B 21r86s2D           4982 	ld	hl, #_cmd + 10
   184E 36 2A              4983 	ld	(hl),#0x2A
   1850 23                 4984 	inc	hl
   1851 36 00              4985 	ld	(hl),#0x00
                           4986 ;demo.c:761: cmd.data = 0;
                           4987 ;demo.c:762: cmd.argument = 0x00;
   1853 3E 00              4988 	ld	a,#0x00
   1855 32r88s2D           4989 	ld	(#_cmd + 12),a
   1858 32r89s2D           4990 	ld	(#_cmd + 13),a
                           4991 ;demo.c:763: cmd.command = 0xD0; // HMMM
   185B 3E D0              4992 	ld	a,#0xD0
   185D 32r8As2D           4993 	ld	(#_cmd + 14),a
                           4994 ;demo.c:764: vdp_copier(&cmd);
   1860 21r7Cs2D           4995 	ld	hl,#_cmd
   1863 E5                 4996 	push	hl
   1864 CDr00s00           4997 	call	_vdp_copier
   1867 F1                 4998 	pop	af
   1868                    4999 00102$:
                           5000 ;demo.c:768: if (boxes_init == 0) {
   1868 AF                 5001 	xor	a,a
   1869 21rE0s2D           5002 	ld	hl,#_boxes_init + 0
   186C B6                 5003 	or	a,(hl)
   186D C2r03s19           5004 	jp	NZ,00104$
                           5005 ;demo.c:769: boxes_init = 1;
   1870 FD 21rE0s2D        5006 	ld	iy,#_boxes_init
   1874 FD 36 00 01        5007 	ld	0 (iy),#0x01
                           5008 ;demo.c:771: cmd.size_x = 8;
   1878 21r84s2D           5009 	ld	hl, #_cmd + 8
   187B 36 08              5010 	ld	(hl),#0x08
   187D 23                 5011 	inc	hl
   187E 36 00              5012 	ld	(hl),#0x00
                           5013 ;demo.c:772: cmd.size_y = 212;
   1880 21r86s2D           5014 	ld	hl, #_cmd + 10
   1883 36 D4              5015 	ld	(hl),#0xD4
   1885 23                 5016 	inc	hl
   1886 36 00              5017 	ld	(hl),#0x00
                           5018 ;demo.c:773: cmd.data = 0;
                           5019 ;demo.c:774: cmd.argument = 0x00; // from 70xY to left
   1888 3E 00              5020 	ld	a,#0x00
   188A 32r88s2D           5021 	ld	(#_cmd + 12),a
   188D 32r89s2D           5022 	ld	(#_cmd + 13),a
                           5023 ;demo.c:775: cmd.command = 0xd0; // vram to vram, y only
   1890 01r8As2D           5024 	ld	bc,#_cmd + 14
   1893 3E D0              5025 	ld	a,#0xD0
   1895 02                 5026 	ld	(bc),a
                           5027 ;demo.c:776: cmd.source_x = 248;
   1896 21r7Cs2D           5028 	ld	hl,#_cmd
   1899 36 F8              5029 	ld	(hl),#0xF8
   189B 23                 5030 	inc	hl
   189C 36 00              5031 	ld	(hl),#0x00
                           5032 ;demo.c:777: cmd.source_y = 0;
   189E 21r7Es2D           5033 	ld	hl, #_cmd + 2
   18A1 36 00              5034 	ld	(hl),#0x00
   18A3 23                 5035 	inc	hl
   18A4 36 00              5036 	ld	(hl),#0x00
                           5037 ;demo.c:778: cmd.dest_y = 0;
   18A6 21r82s2D           5038 	ld	hl, #_cmd + 6
   18A9 36 00              5039 	ld	(hl),#0x00
   18AB 23                 5040 	inc	hl
   18AC 36 00              5041 	ld	(hl),#0x00
                           5042 ;demo.c:780: for (x = 248; x >= 0; x-=8) {
   18AE 01 F8 00           5043 	ld	bc,#0x00F8
   18B1                    5044 00131$:
   18B1 78                 5045 	ld	a,b
   18B2 CB 7F              5046 	bit	7,a
   18B4 20 38              5047 	jr	NZ,00134$
                           5048 ;demo.c:781: waitVB();
   18B6 76                 5049 		halt 
                           5050 ;demo.c:782: cmd.dest_x = x;
   18B7 11r80s2D           5051 	ld	de,#_cmd + 4
   18BA EB                 5052 	ex	de,hl
   18BB 71                 5053 	ld	(hl),c
   18BC 23                 5054 	inc	hl
   18BD 70                 5055 	ld	(hl),b
                           5056 ;demo.c:783: cmd.dest_y = 0;
   18BE 11r82s2D           5057 	ld	de,#_cmd + 6
   18C1 EB                 5058 	ex	de,hl
   18C2 36 00              5059 	ld	(hl),#0x00
   18C4 23                 5060 	inc	hl
   18C5 36 00              5061 	ld	(hl),#0x00
                           5062 ;demo.c:784: vdp_copier(&cmd);
   18C7 C5                 5063 	push	bc
   18C8 21r7Cs2D           5064 	ld	hl,#_cmd
   18CB E5                 5065 	push	hl
   18CC CDr00s00           5066 	call	_vdp_copier
   18CF F1                 5067 	pop	af
   18D0 C1                 5068 	pop	bc
                           5069 ;demo.c:785: cmd.dest_y = 256;
   18D1 11r82s2D           5070 	ld	de,#_cmd + 6
   18D4 EB                 5071 	ex	de,hl
   18D5 36 00              5072 	ld	(hl),#0x00
   18D7 23                 5073 	inc	hl
   18D8 36 01              5074 	ld	(hl),#0x01
                           5075 ;demo.c:786: vdp_copier(&cmd);
   18DA C5                 5076 	push	bc
   18DB 21r7Cs2D           5077 	ld	hl,#_cmd
   18DE E5                 5078 	push	hl
   18DF CDr00s00           5079 	call	_vdp_copier
   18E2 F1                 5080 	pop	af
   18E3 C1                 5081 	pop	bc
                           5082 ;demo.c:780: for (x = 248; x >= 0; x-=8) {
   18E4 79                 5083 	ld	a,c
   18E5 C6 F8              5084 	add	a,#0xF8
   18E7 4F                 5085 	ld	c,a
   18E8 78                 5086 	ld	a,b
   18E9 CE FF              5087 	adc	a,#0xFF
   18EB 47                 5088 	ld	b,a
   18EC 18 C3              5089 	jr	00131$
   18EE                    5090 00134$:
                           5091 ;demo.c:789: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   18EE 21 08 B4           5092 	ld	hl,#0xB408
   18F1 E5                 5093 	push	hl
   18F2 21r87s1B           5094 	ld	hl,#__str_9
   18F5 E5                 5095 	push	hl
   18F6 CDr20s11           5096 	call	_drawsine
   18F9 F1                 5097 	pop	af
   18FA F1                 5098 	pop	af
                           5099 ;demo.c:791: vdp_load_palette(boxes_palette);
   18FB 21r58s2D           5100 	ld	hl,#_boxes_palette
   18FE E5                 5101 	push	hl
   18FF CDr00s00           5102 	call	_vdp_load_palette
   1902 F1                 5103 	pop	af
   1903                    5104 00104$:
                           5105 ;demo.c:794: if (bt >= 80) bt+=6;
   1903 3ArF1s2D           5106 	ld	a,(#_bt+0)
   1906 D6 50              5107 	sub	a,#0x50
   1908 3ArF2s2D           5108 	ld	a,(#_bt+1)
   190B DE 00              5109 	sbc	a,#0x00
   190D FAr26s19           5110 	jp	M,00106$
   1910 21rF1s2D           5111 	ld	hl,#_bt
   1913 7E                 5112 	ld	a,(hl)
   1914 C6 06              5113 	add	a,#0x06
   1916 23                 5114 	inc	hl
   1917 2B                 5115 	dec	hl
   1918 C5                 5116 	push	bc
   1919 4F                 5117 	ld	c, a
   191A 23                 5118 	inc	hl
   191B 7E                 5119 	ld	a, (hl)
   191C 47                 5120 	ld	b, a
   191D 79                 5121 	ld	a, c
   191E 2B                 5122 	dec	hl
   191F 77                 5123 	ld	(hl), a
   1920 78                 5124 	ld	a, b
   1921 C1                 5125 	pop	bc
   1922 CE 00              5126 	adc	a,#0x00
   1924 23                 5127 	inc	hl
   1925 77                 5128 	ld	(hl),a
   1926                    5129 00106$:
                           5130 ;demo.c:795: if (bt < 80 && bt >= 60) bt+=5;
   1926 3ArF1s2D           5131 	ld	a,(#_bt+0)
   1929 D6 50              5132 	sub	a,#0x50
   192B 3ArF2s2D           5133 	ld	a,(#_bt+1)
   192E DE 00              5134 	sbc	a,#0x00
   1930 F2r56s19           5135 	jp	P,00108$
   1933 3ArF1s2D           5136 	ld	a,(#_bt+0)
   1936 D6 3C              5137 	sub	a,#0x3C
   1938 3ArF2s2D           5138 	ld	a,(#_bt+1)
   193B DE 00              5139 	sbc	a,#0x00
   193D FAr56s19           5140 	jp	M,00108$
   1940 21rF1s2D           5141 	ld	hl,#_bt
   1943 7E                 5142 	ld	a,(hl)
   1944 C6 05              5143 	add	a,#0x05
   1946 23                 5144 	inc	hl
   1947 2B                 5145 	dec	hl
   1948 C5                 5146 	push	bc
   1949 4F                 5147 	ld	c, a
   194A 23                 5148 	inc	hl
   194B 7E                 5149 	ld	a, (hl)
   194C 47                 5150 	ld	b, a
   194D 79                 5151 	ld	a, c
   194E 2B                 5152 	dec	hl
   194F 77                 5153 	ld	(hl), a
   1950 78                 5154 	ld	a, b
   1951 C1                 5155 	pop	bc
   1952 CE 00              5156 	adc	a,#0x00
   1954 23                 5157 	inc	hl
   1955 77                 5158 	ld	(hl),a
   1956                    5159 00108$:
                           5160 ;demo.c:796: if (bt < 60 && bt >= 40) bt+=4;
   1956 3ArF1s2D           5161 	ld	a,(#_bt+0)
   1959 D6 3C              5162 	sub	a,#0x3C
   195B 3ArF2s2D           5163 	ld	a,(#_bt+1)
   195E DE 00              5164 	sbc	a,#0x00
   1960 F2r86s19           5165 	jp	P,00111$
   1963 3ArF1s2D           5166 	ld	a,(#_bt+0)
   1966 D6 28              5167 	sub	a,#0x28
   1968 3ArF2s2D           5168 	ld	a,(#_bt+1)
   196B DE 00              5169 	sbc	a,#0x00
   196D FAr86s19           5170 	jp	M,00111$
   1970 21rF1s2D           5171 	ld	hl,#_bt
   1973 7E                 5172 	ld	a,(hl)
   1974 C6 04              5173 	add	a,#0x04
   1976 23                 5174 	inc	hl
   1977 2B                 5175 	dec	hl
   1978 C5                 5176 	push	bc
   1979 4F                 5177 	ld	c, a
   197A 23                 5178 	inc	hl
   197B 7E                 5179 	ld	a, (hl)
   197C 47                 5180 	ld	b, a
   197D 79                 5181 	ld	a, c
   197E 2B                 5182 	dec	hl
   197F 77                 5183 	ld	(hl), a
   1980 78                 5184 	ld	a, b
   1981 C1                 5185 	pop	bc
   1982 CE 00              5186 	adc	a,#0x00
   1984 23                 5187 	inc	hl
   1985 77                 5188 	ld	(hl),a
   1986                    5189 00111$:
                           5190 ;demo.c:797: if (bt < 40 && bt >= 10) bt+=3;
   1986 3ArF1s2D           5191 	ld	a,(#_bt+0)
   1989 D6 28              5192 	sub	a,#0x28
   198B 3ArF2s2D           5193 	ld	a,(#_bt+1)
   198E DE 00              5194 	sbc	a,#0x00
   1990 F2rB6s19           5195 	jp	P,00114$
   1993 3ArF1s2D           5196 	ld	a,(#_bt+0)
   1996 D6 0A              5197 	sub	a,#0x0A
   1998 3ArF2s2D           5198 	ld	a,(#_bt+1)
   199B DE 00              5199 	sbc	a,#0x00
   199D FArB6s19           5200 	jp	M,00114$
   19A0 21rF1s2D           5201 	ld	hl,#_bt
   19A3 7E                 5202 	ld	a,(hl)
   19A4 C6 03              5203 	add	a,#0x03
   19A6 23                 5204 	inc	hl
   19A7 2B                 5205 	dec	hl
   19A8 C5                 5206 	push	bc
   19A9 4F                 5207 	ld	c, a
   19AA 23                 5208 	inc	hl
   19AB 7E                 5209 	ld	a, (hl)
   19AC 47                 5210 	ld	b, a
   19AD 79                 5211 	ld	a, c
   19AE 2B                 5212 	dec	hl
   19AF 77                 5213 	ld	(hl), a
   19B0 78                 5214 	ld	a, b
   19B1 C1                 5215 	pop	bc
   19B2 CE 00              5216 	adc	a,#0x00
   19B4 23                 5217 	inc	hl
   19B5 77                 5218 	ld	(hl),a
   19B6                    5219 00114$:
                           5220 ;demo.c:798: if (bt < 10 ) bt+=2;
   19B6 3ArF1s2D           5221 	ld	a,(#_bt+0)
   19B9 D6 0A              5222 	sub	a,#0x0A
   19BB 3ArF2s2D           5223 	ld	a,(#_bt+1)
   19BE DE 00              5224 	sbc	a,#0x00
   19C0 F2rD9s19           5225 	jp	P,00117$
   19C3 21rF1s2D           5226 	ld	hl,#_bt
   19C6 7E                 5227 	ld	a,(hl)
   19C7 C6 02              5228 	add	a,#0x02
   19C9 23                 5229 	inc	hl
   19CA 2B                 5230 	dec	hl
   19CB C5                 5231 	push	bc
   19CC 4F                 5232 	ld	c, a
   19CD 23                 5233 	inc	hl
   19CE 7E                 5234 	ld	a, (hl)
   19CF 47                 5235 	ld	b, a
   19D0 79                 5236 	ld	a, c
   19D1 2B                 5237 	dec	hl
   19D2 77                 5238 	ld	(hl), a
   19D3 78                 5239 	ld	a, b
   19D4 C1                 5240 	pop	bc
   19D5 CE 00              5241 	adc	a,#0x00
   19D7 23                 5242 	inc	hl
   19D8 77                 5243 	ld	(hl),a
   19D9                    5244 00117$:
                           5245 ;demo.c:802: cmd.source_x = bx;
   19D9 ED 4BrEDs2D        5246 	ld	bc,(_bx)
   19DD 21r7Cs2D           5247 	ld	hl,#_cmd
   19E0 71                 5248 	ld	(hl),c
   19E1 23                 5249 	inc	hl
   19E2 70                 5250 	ld	(hl),b
                           5251 ;demo.c:803: cmd.source_y = bt;
   19E3 01r7Es2D           5252 	ld	bc,#_cmd + 2
   19E6 ED 5BrF1s2D        5253 	ld	de,(_bt)
   19EA 69                 5254 	ld	l,c
   19EB 60                 5255 	ld	h,b
   19EC 73                 5256 	ld	(hl),e
   19ED 23                 5257 	inc	hl
   19EE 72                 5258 	ld	(hl),d
                           5259 ;demo.c:804: cmd.dest_x = 0;
   19EF 21r80s2D           5260 	ld	hl, #_cmd + 4
   19F2 36 00              5261 	ld	(hl),#0x00
   19F4 23                 5262 	inc	hl
   19F5 36 00              5263 	ld	(hl),#0x00
                           5264 ;demo.c:805: cmd.dest_y = 256;
   19F7 21r82s2D           5265 	ld	hl, #_cmd + 6
   19FA 36 00              5266 	ld	(hl),#0x00
   19FC 23                 5267 	inc	hl
   19FD 36 01              5268 	ld	(hl),#0x01
                           5269 ;demo.c:806: cmd.size_x = 42;
   19FF 21r84s2D           5270 	ld	hl, #_cmd + 8
   1A02 36 2A              5271 	ld	(hl),#0x2A
   1A04 23                 5272 	inc	hl
   1A05 36 00              5273 	ld	(hl),#0x00
                           5274 ;demo.c:807: cmd.size_y = 42;
   1A07 21r86s2D           5275 	ld	hl, #_cmd + 10
   1A0A 36 2A              5276 	ld	(hl),#0x2A
   1A0C 23                 5277 	inc	hl
   1A0D 36 00              5278 	ld	(hl),#0x00
                           5279 ;demo.c:808: cmd.data = 0;
                           5280 ;demo.c:809: cmd.argument = 0x00;
   1A0F 3E 00              5281 	ld	a,#0x00
   1A11 32r88s2D           5282 	ld	(#_cmd + 12),a
   1A14 32r89s2D           5283 	ld	(#_cmd + 13),a
                           5284 ;demo.c:810: cmd.command = 0xD0; // HMMM
   1A17 3E D0              5285 	ld	a,#0xD0
   1A19 32r8As2D           5286 	ld	(#_cmd + 14),a
                           5287 ;demo.c:811: vdp_copier(&cmd);
   1A1C 21r7Cs2D           5288 	ld	hl,#_cmd
   1A1F E5                 5289 	push	hl
   1A20 CDr00s00           5290 	call	_vdp_copier
   1A23 F1                 5291 	pop	af
                           5292 ;demo.c:813: pbx = bx;
   1A24 2ArEDs2D           5293 	ld	hl,(_bx)
   1A27 FD 21rFBs2D        5294 	ld	iy,#_pbx
   1A2B FD 75 00           5295 	ld	0 (iy),l
   1A2E FD 21rFBs2D        5296 	ld	iy,#_pbx
   1A32 FD 74 01           5297 	ld	1 (iy),h
                           5298 ;demo.c:814: pbt = bt;
   1A35 2ArF1s2D           5299 	ld	hl,(_bt)
   1A38 FD 21rFDs2D        5300 	ld	iy,#_pbt
   1A3C FD 75 00           5301 	ld	0 (iy),l
   1A3F FD 21rFDs2D        5302 	ld	iy,#_pbt
   1A43 FD 74 01           5303 	ld	1 (iy),h
                           5304 ;demo.c:816: waitVB();
   1A46 76                 5305 		halt 
                           5306 ;demo.c:818: drawbox(bxx,byy,bx,bt);
   1A47 21rF1s2D           5307 	ld	hl,#_bt + 0
   1A4A 4E                 5308 	ld	c,(hl)
   1A4B 21rEDs2D           5309 	ld	hl,#_bx + 0
   1A4E 46                 5310 	ld	b,(hl)
   1A4F 79                 5311 	ld	a,c
   1A50 F5                 5312 	push	af
   1A51 33                 5313 	inc	sp
   1A52 C5                 5314 	push	bc
   1A53 33                 5315 	inc	sp
   1A54 2ArF5s2D           5316 	ld	hl,(_byy)
   1A57 E5                 5317 	push	hl
   1A58 2ArF3s2D           5318 	ld	hl,(_bxx)
   1A5B E5                 5319 	push	hl
   1A5C CDr52s17           5320 	call	_drawbox
   1A5F F1                 5321 	pop	af
   1A60 F1                 5322 	pop	af
   1A61 F1                 5323 	pop	af
                           5324 ;demo.c:820: waitVB();
   1A62 76                 5325 		halt 
                           5326 ;demo.c:822: bonc = 1;
   1A63 21rF9s2D           5327 	ld	hl,#_bonc + 0
   1A66 36 01              5328 	ld	(hl), #0x01
   1A68 21rFAs2D           5329 	ld	hl,#_bonc + 1
   1A6B 36 00              5330 	ld	(hl), #0x00
                           5331 ;demo.c:823: if (bt > by) {
   1A6D 21rEFs2D           5332 	ld	hl,#_by
   1A70 7E                 5333 	ld	a,(hl)
   1A71 FD 21rF1s2D        5334 	ld	iy,#_bt
   1A75 FD 96 00           5335 	sub	a,0 (iy)
   1A78 23                 5336 	inc	hl
   1A79 7E                 5337 	ld	a,(hl)
   1A7A FD 21rF1s2D        5338 	ld	iy,#_bt
   1A7E FD 9E 01           5339 	sbc	a,1 (iy)
   1A81 F0                 5340 	ret	P
                           5341 ;demo.c:825: bt = 0;
   1A82 21rF1s2D           5342 	ld	hl,#_bt + 0
   1A85 36 00              5343 	ld	(hl), #0x00
   1A87 21rF2s2D           5344 	ld	hl,#_bt + 1
   1A8A 36 00              5345 	ld	(hl), #0x00
                           5346 ;demo.c:826: if (by > 0) {
   1A8C 3E 00              5347 	ld	a,#0x00
   1A8E FD 21rEFs2D        5348 	ld	iy,#_by
   1A92 FD 96 00           5349 	sub	a,0 (iy)
   1A95 3E 00              5350 	ld	a,#0x00
   1A97 FD 21rEFs2D        5351 	ld	iy,#_by
   1A9B FD 9E 01           5352 	sbc	a,1 (iy)
   1A9E F2r04s1B           5353 	jp	P,00127$
                           5354 ;demo.c:827: bonc = 0;
   1AA1 21rF9s2D           5355 	ld	hl,#_bonc + 0
   1AA4 36 00              5356 	ld	(hl), #0x00
   1AA6 21rFAs2D           5357 	ld	hl,#_bonc + 1
   1AA9 36 00              5358 	ld	(hl), #0x00
                           5359 ;demo.c:828: by-=16;
   1AAB 21rEFs2D           5360 	ld	hl,#_by
   1AAE 7E                 5361 	ld	a,(hl)
   1AAF C6 F0              5362 	add	a,#0xF0
   1AB1 77                 5363 	ld	(hl),a
   1AB2 23                 5364 	inc	hl
   1AB3 7E                 5365 	ld	a,(hl)
   1AB4 CE FF              5366 	adc	a,#0xFF
   1AB6 77                 5367 	ld	(hl),a
                           5368 ;demo.c:829: bxx++;
   1AB7 FD 21rF3s2D        5369 	ld	iy,#_bxx
   1ABB FD 34 00           5370 	inc	0 (iy)
   1ABE 20 07              5371 	jr	NZ,00158$
   1AC0 FD 21rF3s2D        5372 	ld	iy,#_bxx
   1AC4 FD 34 01           5373 	inc	1 (iy)
   1AC7                    5374 00158$:
                           5375 ;demo.c:830: if (bxx >= 4) { bxx = 0; byy++; }
   1AC7 3ArF3s2D           5376 	ld	a,(#_bxx+0)
   1ACA D6 04              5377 	sub	a,#0x04
   1ACC 3ArF4s2D           5378 	ld	a,(#_bxx+1)
   1ACF DE 00              5379 	sbc	a,#0x00
   1AD1 FArEEs1A           5380 	jp	M,00119$
   1AD4 21rF3s2D           5381 	ld	hl,#_bxx + 0
   1AD7 36 00              5382 	ld	(hl), #0x00
   1AD9 21rF4s2D           5383 	ld	hl,#_bxx + 1
   1ADC 36 00              5384 	ld	(hl), #0x00
   1ADE FD 21rF5s2D        5385 	ld	iy,#_byy
   1AE2 FD 34 00           5386 	inc	0 (iy)
   1AE5 20 07              5387 	jr	NZ,00159$
   1AE7 FD 21rF5s2D        5388 	ld	iy,#_byy
   1AEB FD 34 01           5389 	inc	1 (iy)
   1AEE                    5390 00159$:
   1AEE                    5391 00119$:
                           5392 ;demo.c:831: if (byy >= 2) { byy = 0; }
   1AEE 3ArF5s2D           5393 	ld	a,(#_byy+0)
   1AF1 D6 02              5394 	sub	a,#0x02
   1AF3 3ArF6s2D           5395 	ld	a,(#_byy+1)
   1AF6 DE 00              5396 	sbc	a,#0x00
   1AF8 F8                 5397 	ret	M
   1AF9 21rF5s2D           5398 	ld	hl,#_byy + 0
   1AFC 36 00              5399 	ld	(hl), #0x00
   1AFE 21rF6s2D           5400 	ld	hl,#_byy + 1
   1B01 36 00              5401 	ld	(hl), #0x00
   1B03 C9                 5402 	ret
   1B04                    5403 00127$:
                           5404 ;demo.c:833: bx-=21;
   1B04 21rEDs2D           5405 	ld	hl,#_bx
   1B07 7E                 5406 	ld	a,(hl)
   1B08 C6 EB              5407 	add	a,#0xEB
   1B0A 77                 5408 	ld	(hl),a
   1B0B 23                 5409 	inc	hl
   1B0C 7E                 5410 	ld	a,(hl)
   1B0D CE FF              5411 	adc	a,#0xFF
   1B0F 77                 5412 	ld	(hl),a
                           5413 ;demo.c:834: bo+=11;
   1B10 21rF7s2D           5414 	ld	hl,#_bo
   1B13 7E                 5415 	ld	a,(hl)
   1B14 C6 0B              5416 	add	a,#0x0B
   1B16 23                 5417 	inc	hl
   1B17 2B                 5418 	dec	hl
   1B18 C5                 5419 	push	bc
   1B19 4F                 5420 	ld	c, a
   1B1A 23                 5421 	inc	hl
   1B1B 7E                 5422 	ld	a, (hl)
   1B1C 47                 5423 	ld	b, a
   1B1D 79                 5424 	ld	a, c
   1B1E 2B                 5425 	dec	hl
   1B1F 77                 5426 	ld	(hl), a
   1B20 78                 5427 	ld	a, b
   1B21 C1                 5428 	pop	bc
   1B22 CE 00              5429 	adc	a,#0x00
   1B24 23                 5430 	inc	hl
   1B25 77                 5431 	ld	(hl),a
                           5432 ;demo.c:835: if (bo > 192) bo = 0;
   1B26 3E C0              5433 	ld	a,#0xC0
   1B28 FD 21rF7s2D        5434 	ld	iy,#_bo
   1B2C FD 96 00           5435 	sub	a,0 (iy)
   1B2F 3E 00              5436 	ld	a,#0x00
   1B31 FD 21rF7s2D        5437 	ld	iy,#_bo
   1B35 FD 9E 01           5438 	sbc	a,1 (iy)
   1B38 F2r45s1B           5439 	jp	P,00123$
   1B3B 21rF7s2D           5440 	ld	hl,#_bo + 0
   1B3E 36 00              5441 	ld	(hl), #0x00
   1B40 21rF8s2D           5442 	ld	hl,#_bo + 1
   1B43 36 00              5443 	ld	(hl), #0x00
   1B45                    5444 00123$:
                           5445 ;demo.c:836: by=84+bo;
   1B45 21rEFs2D           5446 	ld	hl,#_by
   1B48 3ArF7s2D           5447 	ld	a,(#_bo+0)
   1B4B C6 54              5448 	add	a,#0x54
   1B4D 77                 5449 	ld	(hl),a
   1B4E 3ArF8s2D           5450 	ld	a,(#_bo+1)
   1B51 CE 00              5451 	adc	a,#0x00
   1B53 23                 5452 	inc	hl
   1B54 77                 5453 	ld	(hl),a
                           5454 ;demo.c:837: if (bx <= 0) {
   1B55 3E 00              5455 	ld	a,#0x00
   1B57 FD 21rEDs2D        5456 	ld	iy,#_bx
   1B5B FD 96 00           5457 	sub	a,0 (iy)
   1B5E 3E 00              5458 	ld	a,#0x00
   1B60 FD 21rEDs2D        5459 	ld	iy,#_bx
   1B64 FD 9E 01           5460 	sbc	a,1 (iy)
   1B67 F8                 5461 	ret	M
                           5462 ;demo.c:838: bx = 256;
   1B68 21rEDs2D           5463 	ld	hl,#_bx + 0
   1B6B 36 00              5464 	ld	(hl), #0x00
   1B6D 21rEEs2D           5465 	ld	hl,#_bx + 1
   1B70 36 01              5466 	ld	(hl), #0x01
                           5467 ;demo.c:839: bo = 0;
   1B72 21rF7s2D           5468 	ld	hl,#_bo + 0
   1B75 36 00              5469 	ld	(hl), #0x00
   1B77 21rF8s2D           5470 	ld	hl,#_bo + 1
   1B7A 36 00              5471 	ld	(hl), #0x00
                           5472 ;demo.c:840: by = 84;
   1B7C 21rEFs2D           5473 	ld	hl,#_by + 0
   1B7F 36 54              5474 	ld	(hl), #0x54
   1B81 21rF0s2D           5475 	ld	hl,#_by + 1
   1B84 36 00              5476 	ld	(hl), #0x00
   1B86 C9                 5477 	ret
   1B87                    5478 _boxes_end::
   1B87                    5479 __str_9:
   1B87 4C 45 54 20 55 53  5480 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1BB2 00                 5481 	.db 0x00
                           5482 ;demo.c:851: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5483 ;	---------------------------------
                           5484 ; Function drawtritile
                           5485 ; ---------------------------------
   1BB3                    5486 _drawtritile_start::
   1BB3                    5487 _drawtritile:
   1BB3 DD E5              5488 	push	ix
   1BB5 DD 21 00 00        5489 	ld	ix,#0
   1BB9 DD 39              5490 	add	ix,sp
                           5491 ;demo.c:852: cmd.source_x = tx;
   1BBB DD 4E 04           5492 	ld	c,4 (ix)
   1BBE 06 00              5493 	ld	b,#0x00
   1BC0 21r7Cs2D           5494 	ld	hl,#_cmd
   1BC3 71                 5495 	ld	(hl),c
   1BC4 23                 5496 	inc	hl
   1BC5 70                 5497 	ld	(hl),b
                           5498 ;demo.c:853: cmd.source_y = ty-1;
   1BC6 01r7Es2D           5499 	ld	bc,#_cmd + 2
   1BC9 DD 5E 05           5500 	ld	e,5 (ix)
   1BCC DD 56 06           5501 	ld	d,6 (ix)
   1BCF 1B                 5502 	dec	de
   1BD0 69                 5503 	ld	l,c
   1BD1 60                 5504 	ld	h,b
   1BD2 73                 5505 	ld	(hl),e
   1BD3 23                 5506 	inc	hl
   1BD4 72                 5507 	ld	(hl),d
                           5508 ;demo.c:854: cmd.dest_x = x;
   1BD5 01r80s2D           5509 	ld	bc,#_cmd + 4
   1BD8 DD 5E 07           5510 	ld	e,7 (ix)
   1BDB 16 00              5511 	ld	d,#0x00
   1BDD 69                 5512 	ld	l,c
   1BDE 60                 5513 	ld	h,b
   1BDF 73                 5514 	ld	(hl),e
   1BE0 23                 5515 	inc	hl
   1BE1 72                 5516 	ld	(hl),d
                           5517 ;demo.c:855: cmd.dest_y = y;
   1BE2 01r82s2D           5518 	ld	bc,#_cmd + 6
   1BE5 DD 5E 08           5519 	ld	e,8 (ix)
   1BE8 16 00              5520 	ld	d,#0x00
   1BEA 69                 5521 	ld	l,c
   1BEB 60                 5522 	ld	h,b
   1BEC 73                 5523 	ld	(hl),e
   1BED 23                 5524 	inc	hl
   1BEE 72                 5525 	ld	(hl),d
                           5526 ;demo.c:856: cmd.size_x = 16;
   1BEF 21r84s2D           5527 	ld	hl, #_cmd + 8
   1BF2 36 10              5528 	ld	(hl),#0x10
   1BF4 23                 5529 	inc	hl
   1BF5 36 00              5530 	ld	(hl),#0x00
                           5531 ;demo.c:857: cmd.size_y = 16;
   1BF7 21r86s2D           5532 	ld	hl, #_cmd + 10
   1BFA 36 10              5533 	ld	(hl),#0x10
   1BFC 23                 5534 	inc	hl
   1BFD 36 00              5535 	ld	(hl),#0x00
                           5536 ;demo.c:858: cmd.data = 0;
                           5537 ;demo.c:859: cmd.argument = 0x00;
   1BFF 3E 00              5538 	ld	a,#0x00
   1C01 32r88s2D           5539 	ld	(#_cmd + 12),a
   1C04 32r89s2D           5540 	ld	(#_cmd + 13),a
                           5541 ;demo.c:860: cmd.command = 0xd0; // HMMM
   1C07 3E D0              5542 	ld	a,#0xD0
   1C09 32r8As2D           5543 	ld	(#_cmd + 14),a
                           5544 ;demo.c:861: vdp_copier(&cmd);
   1C0C 21r7Cs2D           5545 	ld	hl,#_cmd
   1C0F E5                 5546 	push	hl
   1C10 CDr00s00           5547 	call	_vdp_copier
   1C13 F1                 5548 	pop	af
   1C14 DD E1              5549 	pop	ix
   1C16 C9                 5550 	ret
   1C17                    5551 _drawtritile_end::
                           5552 ;demo.c:864: void drawtilescreen(char* tripic) {
                           5553 ;	---------------------------------
                           5554 ; Function drawtilescreen
                           5555 ; ---------------------------------
   1C17                    5556 _drawtilescreen_start::
   1C17                    5557 _drawtilescreen:
   1C17 DD E5              5558 	push	ix
   1C19 DD 21 00 00        5559 	ld	ix,#0
   1C1D DD 39              5560 	add	ix,sp
   1C1F 21 F8 FF           5561 	ld	hl,#-8
   1C22 39                 5562 	add	hl,sp
   1C23 F9                 5563 	ld	sp,hl
                           5564 ;demo.c:865: int x = 0;
   1C24 DD 36 FE 00        5565 	ld	-2 (ix),#0x00
   1C28 DD 36 FF 00        5566 	ld	-1 (ix),#0x00
                           5567 ;demo.c:868: while(i < 192) {
   1C2C DD 36 FC 00        5568 	ld	-4 (ix),#0x00
   1C30 DD 36 FD 00        5569 	ld	-3 (ix),#0x00
   1C34 DD 36 FA 00        5570 	ld	-6 (ix),#0x00
   1C38 DD 36 FB 00        5571 	ld	-5 (ix),#0x00
   1C3C                    5572 00103$:
   1C3C DD 7E FA           5573 	ld	a,-6 (ix)
   1C3F D6 C0              5574 	sub	a,#0xC0
   1C41 DD 7E FB           5575 	ld	a,-5 (ix)
   1C44 DE 00              5576 	sbc	a,#0x00
   1C46 F2rCDs1C           5577 	jp	P,00106$
                           5578 ;demo.c:869: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1C49 DD 7E FC           5579 	ld	a,-4 (ix)
   1C4C DD 77 F8           5580 	ld	-8 (ix),a
   1C4F DD 7E FE           5581 	ld	a,-2 (ix)
   1C52 DD 77 F9           5582 	ld	-7 (ix),a
   1C55 DD 7E 04           5583 	ld	a,4 (ix)
   1C58 DD 86 FA           5584 	add	a,-6 (ix)
   1C5B 4F                 5585 	ld	c,a
   1C5C DD 7E 05           5586 	ld	a,5 (ix)
   1C5F DD 8E FB           5587 	adc	a,-5 (ix)
   1C62 47                 5588 	ld	b,a
   1C63 0A                 5589 	ld	a,(bc)
   1C64 4F                 5590 	ld	c,a
   1C65 87                 5591 	add	a,a
   1C66 C6r20              5592 	add	a,#<_tri_lookup_y
   1C68 6F                 5593 	ld	l,a
   1C69 3Es01              5594 	ld	a,#>_tri_lookup_y
   1C6B CE 00              5595 	adc	a,#0x00
   1C6D 67                 5596 	ld	h,a
   1C6E 46                 5597 	ld	b,(hl)
   1C6F 23                 5598 	inc	hl
   1C70 56                 5599 	ld	d,(hl)
   1C71 3Er00              5600 	ld	a,#<_tri_lookup_x
   1C73 81                 5601 	add	a,c
   1C74 6F                 5602 	ld	l,a
   1C75 3Es01              5603 	ld	a,#>_tri_lookup_x
   1C77 CE 00              5604 	adc	a,#0x00
   1C79 67                 5605 	ld	h,a
   1C7A 4E                 5606 	ld	c,(hl)
   1C7B DD 66 F8           5607 	ld	h,-8 (ix)
   1C7E DD 6E F9           5608 	ld	l,-7 (ix)
   1C81 E5                 5609 	push	hl
   1C82 58                 5610 	ld	e,b
   1C83 D5                 5611 	push	de
   1C84 79                 5612 	ld	a,c
   1C85 F5                 5613 	push	af
   1C86 33                 5614 	inc	sp
   1C87 CDrB3s1B           5615 	call	_drawtritile
   1C8A F1                 5616 	pop	af
   1C8B F1                 5617 	pop	af
   1C8C 33                 5618 	inc	sp
                           5619 ;demo.c:870: x+=16;
   1C8D DD 7E FE           5620 	ld	a,-2 (ix)
   1C90 C6 10              5621 	add	a,#0x10
   1C92 DD 77 FE           5622 	ld	-2 (ix),a
   1C95 DD 7E FF           5623 	ld	a,-1 (ix)
   1C98 CE 00              5624 	adc	a,#0x00
   1C9A DD 77 FF           5625 	ld	-1 (ix),a
                           5626 ;demo.c:871: if (x >= 256) {x = 0; y+=16;}
   1C9D DD 7E FE           5627 	ld	a,-2 (ix)
   1CA0 D6 00              5628 	sub	a,#0x00
   1CA2 DD 7E FF           5629 	ld	a,-1 (ix)
   1CA5 DE 01              5630 	sbc	a,#0x01
   1CA7 FArC2s1C           5631 	jp	M,00102$
   1CAA DD 36 FE 00        5632 	ld	-2 (ix),#0x00
   1CAE DD 36 FF 00        5633 	ld	-1 (ix),#0x00
   1CB2 DD 7E FC           5634 	ld	a,-4 (ix)
   1CB5 C6 10              5635 	add	a,#0x10
   1CB7 DD 77 FC           5636 	ld	-4 (ix),a
   1CBA DD 7E FD           5637 	ld	a,-3 (ix)
   1CBD CE 00              5638 	adc	a,#0x00
   1CBF DD 77 FD           5639 	ld	-3 (ix),a
   1CC2                    5640 00102$:
                           5641 ;demo.c:872: i++;
   1CC2 DD 34 FA           5642 	inc	-6 (ix)
   1CC5 20 03              5643 	jr	NZ,00112$
   1CC7 DD 34 FB           5644 	inc	-5 (ix)
   1CCA                    5645 00112$:
   1CCA C3r3Cs1C           5646 	jp	00103$
   1CCD                    5647 00106$:
   1CCD DD F9              5648 	ld	sp,ix
   1CCF DD E1              5649 	pop	ix
   1CD1 C9                 5650 	ret
   1CD2                    5651 _drawtilescreen_end::
                           5652 ;demo.c:887: void tritiles() {
                           5653 ;	---------------------------------
                           5654 ; Function tritiles
                           5655 ; ---------------------------------
   1CD2                    5656 _tritiles_start::
   1CD2                    5657 _tritiles:
   1CD2 DD E5              5658 	push	ix
   1CD4 DD 21 00 00        5659 	ld	ix,#0
   1CD8 DD 39              5660 	add	ix,sp
   1CDA 21 FB FF           5661 	ld	hl,#-5
   1CDD 39                 5662 	add	hl,sp
   1CDE F9                 5663 	ld	sp,hl
                           5664 ;demo.c:894: if (tri_inited == 0) {
   1CDF AF                 5665 	xor	a,a
   1CE0 21rFFs2D           5666 	ld	hl,#_tri_inited + 0
   1CE3 B6                 5667 	or	a,(hl)
   1CE4 C2r83s1D           5668 	jp	NZ,00102$
                           5669 ;demo.c:895: tri_inited = 1;
   1CE7 FD 21rFFs2D        5670 	ld	iy,#_tri_inited
   1CEB FD 36 00 01        5671 	ld	0 (iy),#0x01
                           5672 ;demo.c:897: cmd.size_x = 256;
   1CEF 21r84s2D           5673 	ld	hl, #_cmd + 8
   1CF2 36 00              5674 	ld	(hl),#0x00
   1CF4 23                 5675 	inc	hl
   1CF5 36 01              5676 	ld	(hl),#0x01
                           5677 ;demo.c:898: cmd.size_y = 1;
   1CF7 21r86s2D           5678 	ld	hl, #_cmd + 10
   1CFA 36 01              5679 	ld	(hl),#0x01
   1CFC 23                 5680 	inc	hl
   1CFD 36 00              5681 	ld	(hl),#0x00
                           5682 ;demo.c:899: cmd.data = 0;
                           5683 ;demo.c:900: cmd.argument = 0x00; // from 70xY to left
   1CFF 3E 00              5684 	ld	a,#0x00
   1D01 32r88s2D           5685 	ld	(#_cmd + 12),a
   1D04 32r89s2D           5686 	ld	(#_cmd + 13),a
                           5687 ;demo.c:901: cmd.command = 0xd0; // vram to vram, y only
   1D07 01r8As2D           5688 	ld	bc,#_cmd + 14
   1D0A 3E D0              5689 	ld	a,#0xD0
   1D0C 02                 5690 	ld	(bc),a
                           5691 ;demo.c:902: cmd.source_x = 0;
   1D0D 21r7Cs2D           5692 	ld	hl,#_cmd
   1D10 36 00              5693 	ld	(hl),#0x00
   1D12 23                 5694 	inc	hl
   1D13 36 00              5695 	ld	(hl),#0x00
                           5696 ;demo.c:903: cmd.source_y = 255;
   1D15 21r7Es2D           5697 	ld	hl, #_cmd + 2
   1D18 36 FF              5698 	ld	(hl),#0xFF
   1D1A 23                 5699 	inc	hl
   1D1B 36 00              5700 	ld	(hl),#0x00
                           5701 ;demo.c:904: cmd.dest_y = 0;
   1D1D 01r82s2D           5702 	ld	bc,#_cmd + 6
   1D20 69                 5703 	ld	l,c
   1D21 60                 5704 	ld	h,b
   1D22 36 00              5705 	ld	(hl),#0x00
   1D24 23                 5706 	inc	hl
   1D25 36 00              5707 	ld	(hl),#0x00
                           5708 ;demo.c:906: for (x = 0; x < 212; x++) {
   1D27 DD 36 FE D4        5709 	ld	-2 (ix),#0xD4
   1D2B DD 36 FF 00        5710 	ld	-1 (ix),#0x00
   1D2F                    5711 00121$:
                           5712 ;demo.c:907: waitVB();
   1D2F 76                 5713 		halt 
                           5714 ;demo.c:908: cmd.dest_x = 0;
   1D30 11r80s2D           5715 	ld	de,#_cmd + 4
   1D33 EB                 5716 	ex	de,hl
   1D34 36 00              5717 	ld	(hl),#0x00
   1D36 23                 5718 	inc	hl
   1D37 36 00              5719 	ld	(hl),#0x00
                           5720 ;demo.c:909: cmd.dest_y = x;
   1D39 11r82s2D           5721 	ld	de,#_cmd + 6
   1D3C DD 4E FE           5722 	ld	c,-2 (ix)
   1D3F DD 46 FF           5723 	ld	b,-1 (ix)
   1D42 0B                 5724 	dec	bc
   1D43 EB                 5725 	ex	de,hl
   1D44 71                 5726 	ld	(hl),c
   1D45 23                 5727 	inc	hl
   1D46 70                 5728 	ld	(hl),b
                           5729 ;demo.c:910: vdp_copier(&cmd);
   1D47 C5                 5730 	push	bc
   1D48 21r7Cs2D           5731 	ld	hl,#_cmd
   1D4B E5                 5732 	push	hl
   1D4C CDr00s00           5733 	call	_vdp_copier
   1D4F F1                 5734 	pop	af
   1D50 C1                 5735 	pop	bc
   1D51 DD 71 FE           5736 	ld	-2 (ix),c
   1D54 DD 70 FF           5737 	ld	-1 (ix),b
                           5738 ;demo.c:906: for (x = 0; x < 212; x++) {
   1D57 DD 7E FE           5739 	ld	a,-2 (ix)
   1D5A DD B6 FF           5740 	or	a,-1 (ix)
   1D5D 20 D0              5741 	jr	NZ,00121$
                           5742 ;demo.c:912: vdp_register(9,2); // 192 lines
   1D5F 21 09 02           5743 	ld	hl,#0x0209
   1D62 E5                 5744 	push	hl
   1D63 CDr00s00           5745 	call	_vdp_register
   1D66 F1                 5746 	pop	af
                           5747 ;demo.c:914: vdp_load_palette(boxes_palette);
   1D67 21r58s2D           5748 	ld	hl,#_boxes_palette
   1D6A E5                 5749 	push	hl
   1D6B CDr00s00           5750 	call	_vdp_load_palette
   1D6E F1                 5751 	pop	af
                           5752 ;demo.c:915: msx2_palette(15,0,0,0);
   1D6F 21 00 00           5753 	ld	hl,#0x0000
   1D72 E5                 5754 	push	hl
   1D73 2E 0F              5755 	ld	l, #0x0F
   1D75 E5                 5756 	push	hl
   1D76 CDr00s00           5757 	call	_msx2_palette
   1D79 F1                 5758 	pop	af
   1D7A F1                 5759 	pop	af
                           5760 ;demo.c:917: drawtilescreen(tri_center);
   1D7B 21r2Cs02           5761 	ld	hl,#_tri_center
   1D7E E5                 5762 	push	hl
   1D7F CDr17s1C           5763 	call	_drawtilescreen
   1D82 F1                 5764 	pop	af
   1D83                    5765 00102$:
                           5766 ;demo.c:922: triframes++;
   1D83 FD 21r0As2E        5767 	ld	iy,#_triframes
   1D87 FD 34 00           5768 	inc	0 (iy)
   1D8A 20 07              5769 	jr	NZ,00142$
   1D8C FD 21r0As2E        5770 	ld	iy,#_triframes
   1D90 FD 34 01           5771 	inc	1 (iy)
   1D93                    5772 00142$:
                           5773 ;demo.c:923: if (triframes == 200) {
   1D93 3Ar0As2E           5774 	ld	a,(#_triframes+0)
   1D96 D6 C8              5775 	sub	a,#0xC8
   1D98 20 06              5776 	jr	NZ,00143$
   1D9A 3Ar0Bs2E           5777 	ld	a,(#_triframes+1)
   1D9D B7                 5778 	or	a,a
   1D9E 28 02              5779 	jr	Z,00144$
   1DA0                    5780 00143$:
   1DA0 18 08              5781 	jr	00104$
   1DA2                    5782 00144$:
                           5783 ;demo.c:924: drawtilescreen(tri_up);
   1DA2 21rECs02           5784 	ld	hl,#_tri_up
   1DA5 E5                 5785 	push	hl
   1DA6 CDr17s1C           5786 	call	_drawtilescreen
   1DA9 F1                 5787 	pop	af
   1DAA                    5788 00104$:
                           5789 ;demo.c:927: if (triframes == 400) {
   1DAA 3Ar0As2E           5790 	ld	a,(#_triframes+0)
   1DAD D6 90              5791 	sub	a,#0x90
   1DAF 20 07              5792 	jr	NZ,00145$
   1DB1 3Ar0Bs2E           5793 	ld	a,(#_triframes+1)
   1DB4 D6 01              5794 	sub	a,#0x01
   1DB6 28 02              5795 	jr	Z,00146$
   1DB8                    5796 00145$:
   1DB8 18 08              5797 	jr	00106$
   1DBA                    5798 00146$:
                           5799 ;demo.c:928: drawtilescreen(tri_dia);
   1DBA 21rACs03           5800 	ld	hl,#_tri_dia
   1DBD E5                 5801 	push	hl
   1DBE CDr17s1C           5802 	call	_drawtilescreen
   1DC1 F1                 5803 	pop	af
   1DC2                    5804 00106$:
                           5805 ;demo.c:930: if (triframes == 600) {
   1DC2 3Ar0As2E           5806 	ld	a,(#_triframes+0)
   1DC5 D6 58              5807 	sub	a,#0x58
   1DC7 20 07              5808 	jr	NZ,00147$
   1DC9 3Ar0Bs2E           5809 	ld	a,(#_triframes+1)
   1DCC D6 02              5810 	sub	a,#0x02
   1DCE 28 02              5811 	jr	Z,00148$
   1DD0                    5812 00147$:
   1DD0 18 08              5813 	jr	00108$
   1DD2                    5814 00148$:
                           5815 ;demo.c:931: drawtilescreen(tri_side1);
   1DD2 21r6Cs04           5816 	ld	hl,#_tri_side1
   1DD5 E5                 5817 	push	hl
   1DD6 CDr17s1C           5818 	call	_drawtilescreen
   1DD9 F1                 5819 	pop	af
   1DDA                    5820 00108$:
                           5821 ;demo.c:933: if (triframes == 700) {
   1DDA 3Ar0As2E           5822 	ld	a,(#_triframes+0)
   1DDD D6 BC              5823 	sub	a,#0xBC
   1DDF 20 07              5824 	jr	NZ,00149$
   1DE1 3Ar0Bs2E           5825 	ld	a,(#_triframes+1)
   1DE4 D6 02              5826 	sub	a,#0x02
   1DE6 28 02              5827 	jr	Z,00150$
   1DE8                    5828 00149$:
   1DE8 18 08              5829 	jr	00110$
   1DEA                    5830 00150$:
                           5831 ;demo.c:934: drawtilescreen(tri_side2);
   1DEA 21r2Cs05           5832 	ld	hl,#_tri_side2
   1DED E5                 5833 	push	hl
   1DEE CDr17s1C           5834 	call	_drawtilescreen
   1DF1 F1                 5835 	pop	af
   1DF2                    5836 00110$:
                           5837 ;demo.c:936: if (triframes == 800) {
   1DF2 3Ar0As2E           5838 	ld	a,(#_triframes+0)
   1DF5 D6 20              5839 	sub	a,#0x20
   1DF7 20 07              5840 	jr	NZ,00151$
   1DF9 3Ar0Bs2E           5841 	ld	a,(#_triframes+1)
   1DFC D6 03              5842 	sub	a,#0x03
   1DFE 28 02              5843 	jr	Z,00152$
   1E00                    5844 00151$:
   1E00 18 08              5845 	jr	00112$
   1E02                    5846 00152$:
                           5847 ;demo.c:937: drawtilescreen(tri_side1);
   1E02 21r6Cs04           5848 	ld	hl,#_tri_side1
   1E05 E5                 5849 	push	hl
   1E06 CDr17s1C           5850 	call	_drawtilescreen
   1E09 F1                 5851 	pop	af
   1E0A                    5852 00112$:
                           5853 ;demo.c:939: if (triframes == 900) {
   1E0A 3Ar0As2E           5854 	ld	a,(#_triframes+0)
   1E0D D6 84              5855 	sub	a,#0x84
   1E0F 20 07              5856 	jr	NZ,00153$
   1E11 3Ar0Bs2E           5857 	ld	a,(#_triframes+1)
   1E14 D6 03              5858 	sub	a,#0x03
   1E16 28 02              5859 	jr	Z,00154$
   1E18                    5860 00153$:
   1E18 18 08              5861 	jr	00114$
   1E1A                    5862 00154$:
                           5863 ;demo.c:940: drawtilescreen(tri_side2);
   1E1A 21r2Cs05           5864 	ld	hl,#_tri_side2
   1E1D E5                 5865 	push	hl
   1E1E CDr17s1C           5866 	call	_drawtilescreen
   1E21 F1                 5867 	pop	af
   1E22                    5868 00114$:
                           5869 ;demo.c:942: if (triframes == 1000) {
   1E22 3Ar0As2E           5870 	ld	a,(#_triframes+0)
   1E25 D6 E8              5871 	sub	a,#0xE8
   1E27 20 07              5872 	jr	NZ,00155$
   1E29 3Ar0Bs2E           5873 	ld	a,(#_triframes+1)
   1E2C D6 03              5874 	sub	a,#0x03
   1E2E 28 02              5875 	jr	Z,00156$
   1E30                    5876 00155$:
   1E30 18 12              5877 	jr	00116$
   1E32                    5878 00156$:
                           5879 ;demo.c:943: triframes = 0;
   1E32 21r0As2E           5880 	ld	hl,#_triframes + 0
   1E35 36 00              5881 	ld	(hl), #0x00
   1E37 21r0Bs2E           5882 	ld	hl,#_triframes + 1
   1E3A 36 00              5883 	ld	(hl), #0x00
                           5884 ;demo.c:944: drawtilescreen(tri_center);
   1E3C 21r2Cs02           5885 	ld	hl,#_tri_center
   1E3F E5                 5886 	push	hl
   1E40 CDr17s1C           5887 	call	_drawtilescreen
   1E43 F1                 5888 	pop	af
   1E44                    5889 00116$:
                           5890 ;demo.c:947: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   1E44 21r02s2E           5891 	ld	hl,#_tripal + 2
   1E47 4E                 5892 	ld	c,(hl)
   1E48 11r01s2E           5893 	ld	de,#_tripal + 1
   1E4B 1A                 5894 	ld	a,(de)
   1E4C 47                 5895 	ld	b,a
   1E4D 21r00s2E           5896 	ld	hl,#_tripal
   1E50 5E                 5897 	ld	e,(hl)
   1E51 79                 5898 	ld	a,c
   1E52 F5                 5899 	push	af
   1E53 33                 5900 	inc	sp
   1E54 C5                 5901 	push	bc
   1E55 33                 5902 	inc	sp
   1E56 53                 5903 	ld	d,e
   1E57 1E 03              5904 	ld	e,#0x03
   1E59 D5                 5905 	push	de
   1E5A CDr00s00           5906 	call	_msx2_palette
   1E5D F1                 5907 	pop	af
   1E5E F1                 5908 	pop	af
                           5909 ;demo.c:948: msx2_palette(13,tripal[3],tripal[4],tripal[5]);
   1E5F 21r05s2E           5910 	ld	hl,#_tripal + 5
   1E62 4E                 5911 	ld	c,(hl)
   1E63 11r04s2E           5912 	ld	de,#_tripal + 4
   1E66 1A                 5913 	ld	a,(de)
   1E67 47                 5914 	ld	b,a
   1E68 21r03s2E           5915 	ld	hl,#_tripal + 3
   1E6B 5E                 5916 	ld	e,(hl)
   1E6C 79                 5917 	ld	a,c
   1E6D F5                 5918 	push	af
   1E6E 33                 5919 	inc	sp
   1E6F C5                 5920 	push	bc
   1E70 33                 5921 	inc	sp
   1E71 53                 5922 	ld	d,e
   1E72 1E 0D              5923 	ld	e,#0x0D
   1E74 D5                 5924 	push	de
   1E75 CDr00s00           5925 	call	_msx2_palette
   1E78 F1                 5926 	pop	af
   1E79 F1                 5927 	pop	af
                           5928 ;demo.c:949: msx2_palette(5,tripal[6],tripal[7],tripal[8]);
   1E7A 21r08s2E           5929 	ld	hl,#_tripal + 8
   1E7D 4E                 5930 	ld	c,(hl)
   1E7E 11r07s2E           5931 	ld	de,#_tripal + 7
   1E81 1A                 5932 	ld	a,(de)
   1E82 47                 5933 	ld	b,a
   1E83 21r06s2E           5934 	ld	hl,#_tripal + 6
   1E86 5E                 5935 	ld	e,(hl)
   1E87 79                 5936 	ld	a,c
   1E88 F5                 5937 	push	af
   1E89 33                 5938 	inc	sp
   1E8A C5                 5939 	push	bc
   1E8B 33                 5940 	inc	sp
   1E8C 53                 5941 	ld	d,e
   1E8D 1E 05              5942 	ld	e,#0x05
   1E8F D5                 5943 	push	de
   1E90 CDr00s00           5944 	call	_msx2_palette
   1E93 F1                 5945 	pop	af
   1E94 F1                 5946 	pop	af
                           5947 ;demo.c:952: tripaltick++;
   1E95 FD 21r09s2E        5948 	ld	iy,#_tripaltick
   1E99 FD 34 00           5949 	inc	0 (iy)
                           5950 ;demo.c:953: if (tripaltick > 6) {
   1E9C 3E 06              5951 	ld	a,#0x06
   1E9E FD 21r09s2E        5952 	ld	iy,#_tripaltick
   1EA2 FD 96 00           5953 	sub	a,0 (iy)
   1EA5 D2r13s1F           5954 	jp	NC,00126$
                           5955 ;demo.c:955: r = tripal[0];
   1EA8 21r00s2E           5956 	ld	hl,#_tripal
   1EAB 4E                 5957 	ld	c,(hl)
   1EAC DD 71 FD           5958 	ld	-3 (ix),c
                           5959 ;demo.c:956: g = tripal[1];
   1EAF 11r01s2E           5960 	ld	de,#_tripal + 1
   1EB2 1A                 5961 	ld	a,(de)
   1EB3 DD 77 FC           5962 	ld	-4 (ix),a
                           5963 ;demo.c:957: b = tripal[2];
   1EB6 21r02s2E           5964 	ld	hl,#_tripal + 2
   1EB9 5E                 5965 	ld	e,(hl)
   1EBA DD 73 FB           5966 	ld	-5 (ix),e
                           5967 ;demo.c:959: for (x = 0; x < 6; x++) {
   1EBD DD 36 FE 00        5968 	ld	-2 (ix),#0x00
   1EC1 DD 36 FF 00        5969 	ld	-1 (ix),#0x00
   1EC5                    5970 00122$:
   1EC5 DD 7E FE           5971 	ld	a,-2 (ix)
   1EC8 D6 06              5972 	sub	a,#0x06
   1ECA DD 7E FF           5973 	ld	a,-1 (ix)
   1ECD DE 00              5974 	sbc	a,#0x00
   1ECF F2rF9s1E           5975 	jp	P,00125$
                           5976 ;demo.c:960: tripal[x] = tripal[x+3];
   1ED2 3Er00              5977 	ld	a,#<_tripal
   1ED4 DD 86 FE           5978 	add	a,-2 (ix)
   1ED7 4F                 5979 	ld	c,a
   1ED8 3Es2E              5980 	ld	a,#>_tripal
   1EDA DD 8E FF           5981 	adc	a,-1 (ix)
   1EDD 47                 5982 	ld	b,a
   1EDE DD 5E FE           5983 	ld	e,-2 (ix)
   1EE1 1C                 5984 	inc	e
   1EE2 1C                 5985 	inc	e
   1EE3 1C                 5986 	inc	e
   1EE4 3Er00              5987 	ld	a,#<_tripal
   1EE6 83                 5988 	add	a,e
   1EE7 5F                 5989 	ld	e,a
   1EE8 3Es2E              5990 	ld	a,#>_tripal
   1EEA CE 00              5991 	adc	a,#0x00
   1EEC 57                 5992 	ld	d,a
   1EED 1A                 5993 	ld	a,(de)
   1EEE 02                 5994 	ld	(bc),a
                           5995 ;demo.c:959: for (x = 0; x < 6; x++) {
   1EEF DD 34 FE           5996 	inc	-2 (ix)
   1EF2 20 03              5997 	jr	NZ,00157$
   1EF4 DD 34 FF           5998 	inc	-1 (ix)
   1EF7                    5999 00157$:
   1EF7 18 CC              6000 	jr	00122$
   1EF9                    6001 00125$:
                           6002 ;demo.c:963: tripal[6] = r;
   1EF9 01r06s2E           6003 	ld	bc,#_tripal + 6
   1EFC DD 7E FD           6004 	ld	a,-3 (ix)
   1EFF 02                 6005 	ld	(bc),a
                           6006 ;demo.c:964: tripal[7] = g;
   1F00 01r07s2E           6007 	ld	bc,#_tripal + 7
   1F03 DD 7E FC           6008 	ld	a,-4 (ix)
   1F06 02                 6009 	ld	(bc),a
                           6010 ;demo.c:965: tripal[8] = b;
   1F07 01r08s2E           6011 	ld	bc,#_tripal + 8
   1F0A DD 7E FB           6012 	ld	a,-5 (ix)
   1F0D 02                 6013 	ld	(bc),a
                           6014 ;demo.c:966: tripaltick = 0;
   1F0E 21r09s2E           6015 	ld	hl,#_tripaltick + 0
   1F11 36 00              6016 	ld	(hl), #0x00
   1F13                    6017 00126$:
   1F13 DD F9              6018 	ld	sp,ix
   1F15 DD E1              6019 	pop	ix
   1F17 C9                 6020 	ret
   1F18                    6021 _tritiles_end::
                           6022 ;demo.c:975: void do_quit() {
                           6023 ;	---------------------------------
                           6024 ; Function do_quit
                           6025 ; ---------------------------------
   1F18                    6026 _do_quit_start::
   1F18                    6027 _do_quit:
                           6028 ;demo.c:976: waitVB();
   1F18 76                 6029 		halt 
                           6030 ;demo.c:977: uninstall_isr();
   1F19 CDr00s00           6031 	call	_uninstall_isr
                           6032 ;demo.c:978: PLY_Stop();
   1F1C CDr00s00           6033 	call	_PLY_Stop
                           6034 ;demo.c:979: PLY_SendRegisters();
   1F1F CDr00s00           6035 	call	_PLY_SendRegisters
                           6036 ;demo.c:981: screen(0);
   1F22 3E 00              6037 	ld	a,#0x00
   1F24 F5                 6038 	push	af
   1F25 33                 6039 	inc	sp
   1F26 CDr00s00           6040 	call	_screen
   1F29 33                 6041 	inc	sp
                           6042 ;demo.c:983: puts("demo quit\r\n\r\n");
   1F2A 21r3Bs1F           6043 	ld	hl,#__str_10
   1F2D E5                 6044 	push	hl
   1F2E CDr00s00           6045 	call	_puts
   1F31 F1                 6046 	pop	af
                           6047 ;demo.c:985: exit(0);	
   1F32 3E 00              6048 	ld	a,#0x00
   1F34 F5                 6049 	push	af
   1F35 33                 6050 	inc	sp
   1F36 CDr00s00           6051 	call	_exit
   1F39 33                 6052 	inc	sp
   1F3A C9                 6053 	ret
   1F3B                    6054 _do_quit_end::
   1F3B                    6055 __str_10:
   1F3B 64 65 6D 6F 20 71  6056 	.ascii "demo quit"
        75 69 74
   1F44 0D                 6057 	.db 0x0D
   1F45 0A                 6058 	.db 0x0A
   1F46 0D                 6059 	.db 0x0D
   1F47 0A                 6060 	.db 0x0A
   1F48 00                 6061 	.db 0x00
                           6062 ;demo.c:1007: void main() {
                           6063 ;	---------------------------------
                           6064 ; Function main
                           6065 ; ---------------------------------
   1F49                    6066 _main_start::
   1F49                    6067 _main:
   1F49 DD E5              6068 	push	ix
   1F4B DD 21 00 00        6069 	ld	ix,#0
   1F4F DD 39              6070 	add	ix,sp
   1F51 21 F7 FF           6071 	ld	hl,#-9
   1F54 39                 6072 	add	hl,sp
   1F55 F9                 6073 	ld	sp,hl
                           6074 ;demo.c:1008: unsigned char quit=0;
   1F56 DD 36 FF 00        6075 	ld	-1 (ix),#0x00
                           6076 ;demo.c:1009: int modes = 128; // interlace bit on
   1F5A DD 36 FD 80        6077 	ld	-3 (ix),#0x80
   1F5E DD 36 FE 00        6078 	ld	-2 (ix),#0x00
                           6079 ;demo.c:1015: spindown();
   1F62 CDr00s00           6080 	call	_spindown
                           6081 ;demo.c:1017: puts("demo init\r\n\r\n");
   1F65 21r4Cs22           6082 	ld	hl,#__str_11
   1F68 E5                 6083 	push	hl
   1F69 CDr00s00           6084 	call	_puts
   1F6C F1                 6085 	pop	af
                           6086 ;demo.c:1019: for (y = 0; y < 2; y++) {
   1F6D DD 36 F9 00        6087 	ld	-7 (ix),#0x00
   1F71 DD 36 FA 00        6088 	ld	-6 (ix),#0x00
   1F75                    6089 00118$:
   1F75 DD 7E F9           6090 	ld	a,-7 (ix)
   1F78 D6 02              6091 	sub	a,#0x02
   1F7A DD 7E FA           6092 	ld	a,-6 (ix)
   1F7D DE 00              6093 	sbc	a,#0x00
   1F7F F2r06s20           6094 	jp	P,00121$
                           6095 ;demo.c:1020: for (x = 0; x < 16; x++) {
   1F82 DD 56 F9           6096 	ld	d,-7 (ix)
   1F85 DD 4E FA           6097 	ld	c,-6 (ix)
   1F88 CB 22              6098 	sla	d
   1F8A CB 11              6099 	rl	c
   1F8C CB 22              6100 	sla	d
   1F8E CB 11              6101 	rl	c
   1F90 CB 22              6102 	sla	d
   1F92 CB 11              6103 	rl	c
   1F94 CB 22              6104 	sla	d
   1F96 CB 11              6105 	rl	c
   1F98 7A                 6106 	ld	a,d
   1F99 C6 81              6107 	add	a,#0x81
   1F9B DD 77 F7           6108 	ld	-9 (ix),a
   1F9E 79                 6109 	ld	a,c
   1F9F CE 03              6110 	adc	a,#0x03
   1FA1 DD 77 F8           6111 	ld	-8 (ix),a
   1FA4 DD 36 FB 00        6112 	ld	-5 (ix),#0x00
   1FA8 DD 36 FC 00        6113 	ld	-4 (ix),#0x00
   1FAC                    6114 00114$:
   1FAC DD 7E FB           6115 	ld	a,-5 (ix)
   1FAF D6 10              6116 	sub	a,#0x10
   1FB1 DD 7E FC           6117 	ld	a,-4 (ix)
   1FB4 DE 00              6118 	sbc	a,#0x00
   1FB6 F2rFBs1F           6119 	jp	P,00120$
                           6120 ;demo.c:1021: tri_lookup_x[(y*16)+x] = x * 16;
   1FB9 DD 7E F9           6121 	ld	a,-7 (ix)
   1FBC 07                 6122 	rlca
   1FBD 07                 6123 	rlca
   1FBE 07                 6124 	rlca
   1FBF 07                 6125 	rlca
   1FC0 E6 F0              6126 	and	a,#0xF0
   1FC2 47                 6127 	ld	b,a
   1FC3 DD 5E FB           6128 	ld	e,-5 (ix)
   1FC6 78                 6129 	ld	a,b
   1FC7 83                 6130 	add	a,e
   1FC8 47                 6131 	ld	b, a
   1FC9 C6r00              6132 	add	a,#<_tri_lookup_x
   1FCB 4F                 6133 	ld	c,a
   1FCC 3Es01              6134 	ld	a,#>_tri_lookup_x
   1FCE CE 00              6135 	adc	a,#0x00
   1FD0 57                 6136 	ld	d,a
   1FD1 7B                 6137 	ld	a,e
   1FD2 07                 6138 	rlca
   1FD3 07                 6139 	rlca
   1FD4 07                 6140 	rlca
   1FD5 07                 6141 	rlca
   1FD6 E6 F0              6142 	and	a,#0xF0
   1FD8 5F                 6143 	ld	e,a
   1FD9 69                 6144 	ld	l,c
   1FDA 62                 6145 	ld	h,d
   1FDB 73                 6146 	ld	(hl),e
                           6147 ;demo.c:1022: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   1FDC CB 20              6148 	sla	b
   1FDE 3Er20              6149 	ld	a,#<_tri_lookup_y
   1FE0 80                 6150 	add	a,b
   1FE1 6F                 6151 	ld	l,a
   1FE2 3Es01              6152 	ld	a,#>_tri_lookup_y
   1FE4 CE 00              6153 	adc	a,#0x00
   1FE6 67                 6154 	ld	h,a
   1FE7 DD 7E F7           6155 	ld	a,-9 (ix)
   1FEA 77                 6156 	ld	(hl),a
   1FEB 23                 6157 	inc	hl
   1FEC DD 7E F8           6158 	ld	a,-8 (ix)
   1FEF 77                 6159 	ld	(hl),a
                           6160 ;demo.c:1020: for (x = 0; x < 16; x++) {
   1FF0 DD 34 FB           6161 	inc	-5 (ix)
   1FF3 20 03              6162 	jr	NZ,00139$
   1FF5 DD 34 FC           6163 	inc	-4 (ix)
   1FF8                    6164 00139$:
   1FF8 C3rACs1F           6165 	jp	00114$
   1FFB                    6166 00120$:
                           6167 ;demo.c:1019: for (y = 0; y < 2; y++) {
   1FFB DD 34 F9           6168 	inc	-7 (ix)
   1FFE 20 03              6169 	jr	NZ,00140$
   2000 DD 34 FA           6170 	inc	-6 (ix)
   2003                    6171 00140$:
   2003 C3r75s1F           6172 	jp	00118$
   2006                    6173 00121$:
                           6174 ;demo.c:1026: puts("music init...");
   2006 21r5As22           6175 	ld	hl,#__str_12
   2009 E5                 6176 	push	hl
   200A CDr00s00           6177 	call	_puts
   200D F1                 6178 	pop	af
                           6179 ;demo.c:1028: PLY_SongPtr = (char *)0x0103;
   200E 21r00s00           6180 	ld	hl,#_PLY_SongPtr + 0
   2011 36 03              6181 	ld	(hl), #0x03
   2013 21r01s00           6182 	ld	hl,#_PLY_SongPtr + 1
   2016 36 01              6183 	ld	(hl), #0x01
                           6184 ;demo.c:1029: PLY_Init();
   2018 CDr00s00           6185 	call	_PLY_Init
                           6186 ;demo.c:1030: puts("done.\r\n");
   201B 21r68s22           6187 	ld	hl,#__str_13
   201E E5                 6188 	push	hl
   201F CDr00s00           6189 	call	_puts
   2022 F1                 6190 	pop	af
                           6191 ;demo.c:1032: puts("detecting vdp type...");
   2023 21r70s22           6192 	ld	hl,#__str_14
   2026 E5                 6193 	push	hl
   2027 CDr00s00           6194 	call	_puts
   202A F1                 6195 	pop	af
                           6196 ;demo.c:1033: if(isvdp2())
   202B CDr00s00           6197 	call	_isvdp2
   202E AF                 6198 	xor	a,a
   202F B5                 6199 	or	a,l
   2030 28 12              6200 	jr	Z,00102$
                           6201 ;demo.c:1035: puts(" vdp2 found!\r\n\r\n");
   2032 21r86s22           6202 	ld	hl,#__str_15
   2035 E5                 6203 	push	hl
   2036 CDr00s00           6204 	call	_puts
   2039 F1                 6205 	pop	af
                           6206 ;demo.c:1036: modes+=2; // pal
   203A DD 36 FD 82        6207 	ld	-3 (ix),#0x82
   203E DD 36 FE 00        6208 	ld	-2 (ix),#0x00
   2042 18 0B              6209 	jr	00103$
   2044                    6210 00102$:
                           6211 ;demo.c:1039: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   2044 21r97s22           6212 	ld	hl,#__str_16
   2047 E5                 6213 	push	hl
   2048 CDr00s00           6214 	call	_puts
   204B F1                 6215 	pop	af
                           6216 ;demo.c:1040: do_quit();
   204C CDr18s1F           6217 	call	_do_quit
   204F                    6218 00103$:
                           6219 ;demo.c:1043: pal_load("TWISTER PL5",32,1);
   204F 21 01 00           6220 	ld	hl,#0x0001
   2052 E5                 6221 	push	hl
   2053 3E 20              6222 	ld	a,#0x20
   2055 F5                 6223 	push	af
   2056 33                 6224 	inc	sp
   2057 21rDEs22           6225 	ld	hl,#__str_17
   205A E5                 6226 	push	hl
   205B CDrA3s07           6227 	call	_pal_load
   205E F1                 6228 	pop	af
   205F F1                 6229 	pop	af
   2060 33                 6230 	inc	sp
                           6231 ;demo.c:1044: memcpy(twister_palette, cur_palette, 32);
   2061 21 20 00           6232 	ld	hl,#0x0020
   2064 E5                 6233 	push	hl
   2065 21rD8s2C           6234 	ld	hl,#_cur_palette
   2068 E5                 6235 	push	hl
   2069 21r18s2D           6236 	ld	hl,#_twister_palette
   206C E5                 6237 	push	hl
   206D CDr00s00           6238 	call	_memcpy
   2070 F1                 6239 	pop	af
   2071 F1                 6240 	pop	af
   2072 F1                 6241 	pop	af
                           6242 ;demo.c:1045: pal_load("TF1     PL5",32,1);
   2073 21 01 00           6243 	ld	hl,#0x0001
   2076 E5                 6244 	push	hl
   2077 3E 20              6245 	ld	a,#0x20
   2079 F5                 6246 	push	af
   207A 33                 6247 	inc	sp
   207B 21rEAs22           6248 	ld	hl,#__str_18
   207E E5                 6249 	push	hl
   207F CDrA3s07           6250 	call	_pal_load
   2082 F1                 6251 	pop	af
   2083 F1                 6252 	pop	af
   2084 33                 6253 	inc	sp
                           6254 ;demo.c:1046: memcpy(tf_palette, cur_palette, 32);
   2085 21 20 00           6255 	ld	hl,#0x0020
   2088 E5                 6256 	push	hl
   2089 21rD8s2C           6257 	ld	hl,#_cur_palette
   208C E5                 6258 	push	hl
   208D 21r38s2D           6259 	ld	hl,#_tf_palette
   2090 E5                 6260 	push	hl
   2091 CDr00s00           6261 	call	_memcpy
   2094 F1                 6262 	pop	af
   2095 F1                 6263 	pop	af
   2096 F1                 6264 	pop	af
                           6265 ;demo.c:1047: pal_load("BOXES   PL5",32,1);
   2097 21 01 00           6266 	ld	hl,#0x0001
   209A E5                 6267 	push	hl
   209B 3E 20              6268 	ld	a,#0x20
   209D F5                 6269 	push	af
   209E 33                 6270 	inc	sp
   209F 21rF6s22           6271 	ld	hl,#__str_19
   20A2 E5                 6272 	push	hl
   20A3 CDrA3s07           6273 	call	_pal_load
   20A6 F1                 6274 	pop	af
   20A7 F1                 6275 	pop	af
   20A8 33                 6276 	inc	sp
                           6277 ;demo.c:1048: memcpy(boxes_palette, cur_palette, 32);
   20A9 21 20 00           6278 	ld	hl,#0x0020
   20AC E5                 6279 	push	hl
   20AD 21rD8s2C           6280 	ld	hl,#_cur_palette
   20B0 E5                 6281 	push	hl
   20B1 21r58s2D           6282 	ld	hl,#_boxes_palette
   20B4 E5                 6283 	push	hl
   20B5 CDr00s00           6284 	call	_memcpy
   20B8 F1                 6285 	pop	af
   20B9 F1                 6286 	pop	af
   20BA F1                 6287 	pop	af
                           6288 ;demo.c:1051: pal_load("BULBS   PL5",32,1);
   20BB 21 01 00           6289 	ld	hl,#0x0001
   20BE E5                 6290 	push	hl
   20BF 3E 20              6291 	ld	a,#0x20
   20C1 F5                 6292 	push	af
   20C2 33                 6293 	inc	sp
   20C3 21r02s23           6294 	ld	hl,#__str_20
   20C6 E5                 6295 	push	hl
   20C7 CDrA3s07           6296 	call	_pal_load
   20CA F1                 6297 	pop	af
   20CB F1                 6298 	pop	af
   20CC 33                 6299 	inc	sp
                           6300 ;demo.c:1053: pck_load("BULBS   PCK",2431,0x8000,VRAM_0,1);
   20CD 21 01 00           6301 	ld	hl,#0x0001
   20D0 E5                 6302 	push	hl
   20D1 2E 01              6303 	ld	l, #0x01
   20D3 E5                 6304 	push	hl
   20D4 21 00 80           6305 	ld	hl,#0x8000
   20D7 E5                 6306 	push	hl
   20D8 21 7F 09           6307 	ld	hl,#0x097F
   20DB E5                 6308 	push	hl
   20DC 21r0Es23           6309 	ld	hl,#__str_21
   20DF E5                 6310 	push	hl
   20E0 CDr99s09           6311 	call	_pck_load
   20E3 FD 21 0A 00        6312 	ld	iy,#0x000A
   20E7 FD 39              6313 	add	iy,sp
   20E9 FD F9              6314 	ld	sp,iy
                           6315 ;demo.c:1055: pck_load("TWISTER PCK",4032,0x0000,VRAM_1,1);
   20EB 21 01 00           6316 	ld	hl,#0x0001
   20EE E5                 6317 	push	hl
   20EF 2E 00              6318 	ld	l, #0x00
   20F1 E5                 6319 	push	hl
   20F2 2E 00              6320 	ld	l, #0x00
   20F4 E5                 6321 	push	hl
   20F5 21 C0 0F           6322 	ld	hl,#0x0FC0
   20F8 E5                 6323 	push	hl
   20F9 21r1As23           6324 	ld	hl,#__str_22
   20FC E5                 6325 	push	hl
   20FD CDr99s09           6326 	call	_pck_load
   2100 FD 21 0A 00        6327 	ld	iy,#0x000A
   2104 FD 39              6328 	add	iy,sp
   2106 FD F9              6329 	ld	sp,iy
                           6330 ;demo.c:1056: pck_load("BOXES   PCK",4500,0x8000,VRAM_1,1);
   2108 21 01 00           6331 	ld	hl,#0x0001
   210B E5                 6332 	push	hl
   210C 2E 00              6333 	ld	l, #0x00
   210E E5                 6334 	push	hl
   210F 26 80              6335 	ld	h, #0x80
   2111 E5                 6336 	push	hl
   2112 21 94 11           6337 	ld	hl,#0x1194
   2115 E5                 6338 	push	hl
   2116 21r26s23           6339 	ld	hl,#__str_23
   2119 E5                 6340 	push	hl
   211A CDr99s09           6341 	call	_pck_load
   211D FD 21 0A 00        6342 	ld	iy,#0x000A
   2121 FD 39              6343 	add	iy,sp
   2123 FD F9              6344 	ld	sp,iy
                           6345 ;demo.c:1059: scratch_clear();
   2125 CDr90s07           6346 	call	_scratch_clear
                           6347 ;demo.c:1060: vdp_load_palette(scratch);
   2128 21r58s2C           6348 	ld	hl,#_scratch
   212B E5                 6349 	push	hl
   212C CDr00s00           6350 	call	_vdp_load_palette
   212F F1                 6351 	pop	af
                           6352 ;demo.c:1062: vdp_register(VDP_MODE3,modes); // interlace on, screen mode pal or ntsc
   2130 DD 7E FD           6353 	ld	a,-3 (ix)
   2133 F5                 6354 	push	af
   2134 33                 6355 	inc	sp
   2135 3E 09              6356 	ld	a,#0x09
   2137 F5                 6357 	push	af
   2138 33                 6358 	inc	sp
   2139 CDr00s00           6359 	call	_vdp_register
   213C F1                 6360 	pop	af
                           6361 ;demo.c:1063: vdp_set_screen5();
   213D CDr00s00           6362 	call	_vdp_set_screen5
                           6363 ;demo.c:1065: scratch_clear();
   2140 CDr90s07           6364 	call	_scratch_clear
                           6365 ;demo.c:1066: vdp_load_palette(scratch);
   2143 21r58s2C           6366 	ld	hl,#_scratch
   2146 E5                 6367 	push	hl
   2147 CDr00s00           6368 	call	_vdp_load_palette
   214A F1                 6369 	pop	af
                           6370 ;demo.c:1068: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   214B 21 00 00           6371 	ld	hl,#0x0000
   214E E5                 6372 	push	hl
   214F 2E 01              6373 	ld	l, #0x01
   2151 E5                 6374 	push	hl
   2152 2E 00              6375 	ld	l, #0x00
   2154 E5                 6376 	push	hl
   2155 21 6A 08           6377 	ld	hl,#0x086A
   2158 E5                 6378 	push	hl
   2159 21r32s23           6379 	ld	hl,#__str_24
   215C E5                 6380 	push	hl
   215D CDr99s09           6381 	call	_pck_load
   2160 FD 21 0A 00        6382 	ld	iy,#0x000A
   2164 FD 39              6383 	add	iy,sp
   2166 FD F9              6384 	ld	sp,iy
                           6385 ;demo.c:1069: pal_load("DSSLOGO PL5",32,0);
   2168 21 00 00           6386 	ld	hl,#0x0000
   216B E5                 6387 	push	hl
   216C 3E 20              6388 	ld	a,#0x20
   216E F5                 6389 	push	af
   216F 33                 6390 	inc	sp
   2170 21r3Es23           6391 	ld	hl,#__str_25
   2173 E5                 6392 	push	hl
   2174 CDrA3s07           6393 	call	_pal_load
   2177 F1                 6394 	pop	af
   2178 F1                 6395 	pop	af
   2179 33                 6396 	inc	sp
                           6397 ;demo.c:1071: scratch_clear();
   217A CDr90s07           6398 	call	_scratch_clear
                           6399 ;demo.c:1073: install_isr(my_isr);
   217D 21rECs05           6400 	ld	hl,#_my_isr
   2180 E5                 6401 	push	hl
   2181 CDr00s00           6402 	call	_install_isr
   2184 F1                 6403 	pop	af
                           6404 ;demo.c:1075: while (!quit) {
   2185                    6405 00111$:
   2185 AF                 6406 	xor	a,a
   2186 DD B6 FF           6407 	or	a,-1 (ix)
   2189 C2r44s22           6408 	jp	NZ,00113$
                           6409 ;demo.c:1077: if (vbicount >= scenetimings[timeindex+1]) {
   218C 21r0Es2E           6410 	ld	hl,#_timeindex + 0
   218F 4E                 6411 	ld	c,(hl)
   2190 0C                 6412 	inc	c
   2191 CB 21              6413 	sla	c
   2193 3Er1A              6414 	ld	a,#<_scenetimings
   2195 81                 6415 	add	a,c
   2196 6F                 6416 	ld	l,a
   2197 3Es2E              6417 	ld	a,#>_scenetimings
   2199 CE 00              6418 	adc	a,#0x00
   219B 67                 6419 	ld	h,a
   219C 4E                 6420 	ld	c,(hl)
   219D 23                 6421 	inc	hl
   219E 46                 6422 	ld	b,(hl)
   219F 3Ar78s2D           6423 	ld	a,(#_vbicount+0)
   21A2 91                 6424 	sub	a,c
   21A3 3Ar79s2D           6425 	ld	a,(#_vbicount+1)
   21A6 98                 6426 	sbc	a,b
   21A7 FArD0s21           6427 	jp	M,00105$
                           6428 ;demo.c:1078: sceneindex++;
   21AA FD 21r0Cs2E        6429 	ld	iy,#_sceneindex
   21AE FD 34 00           6430 	inc	0 (iy)
   21B1 20 07              6431 	jr	NZ,00141$
   21B3 FD 21r0Cs2E        6432 	ld	iy,#_sceneindex
   21B7 FD 34 01           6433 	inc	1 (iy)
   21BA                    6434 00141$:
                           6435 ;demo.c:1079: timeindex+=2;
   21BA 21r0Es2E           6436 	ld	hl,#_timeindex
   21BD 7E                 6437 	ld	a,(hl)
   21BE C6 02              6438 	add	a,#0x02
   21C0 23                 6439 	inc	hl
   21C1 2B                 6440 	dec	hl
   21C2 C5                 6441 	push	bc
   21C3 4F                 6442 	ld	c, a
   21C4 23                 6443 	inc	hl
   21C5 7E                 6444 	ld	a, (hl)
   21C6 47                 6445 	ld	b, a
   21C7 79                 6446 	ld	a, c
   21C8 2B                 6447 	dec	hl
   21C9 77                 6448 	ld	(hl), a
   21CA 78                 6449 	ld	a, b
   21CB C1                 6450 	pop	bc
   21CC CE 00              6451 	adc	a,#0x00
   21CE 23                 6452 	inc	hl
   21CF 77                 6453 	ld	(hl),a
   21D0                    6454 00105$:
                           6455 ;demo.c:1082: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   21D0 21r0Es2E           6456 	ld	hl,#_timeindex + 0
   21D3 4E                 6457 	ld	c,(hl)
   21D4 21r0Fs2E           6458 	ld	hl,#_timeindex + 1
   21D7 46                 6459 	ld	b,(hl)
   21D8 CB 21              6460 	sla	c
   21DA CB 10              6461 	rl	b
   21DC 21r1As2E           6462 	ld	hl,#_scenetimings
   21DF 09                 6463 	add	hl,bc
   21E0 4E                 6464 	ld	c,(hl)
   21E1 23                 6465 	inc	hl
   21E2 46                 6466 	ld	b,(hl)
   21E3 3Ar78s2D           6467 	ld	a,(#_vbicount+0)
   21E6 91                 6468 	sub	a,c
   21E7 3Ar79s2D           6469 	ld	a,(#_vbicount+1)
   21EA 98                 6470 	sbc	a,b
   21EB FAr30s22           6471 	jp	M,00107$
   21EE 21r0Es2E           6472 	ld	hl,#_timeindex + 0
   21F1 4E                 6473 	ld	c,(hl)
   21F2 0C                 6474 	inc	c
   21F3 CB 21              6475 	sla	c
   21F5 3Er1A              6476 	ld	a,#<_scenetimings
   21F7 81                 6477 	add	a,c
   21F8 6F                 6478 	ld	l,a
   21F9 3Es2E              6479 	ld	a,#>_scenetimings
   21FB CE 00              6480 	adc	a,#0x00
   21FD 67                 6481 	ld	h,a
   21FE 4E                 6482 	ld	c,(hl)
   21FF 23                 6483 	inc	hl
   2200 46                 6484 	ld	b,(hl)
   2201 3Ar78s2D           6485 	ld	a,(#_vbicount+0)
   2204 91                 6486 	sub	a,c
   2205 FD 21r78s2D        6487 	ld	iy,#_vbicount
   2209 FD 7E 01           6488 	ld	a,1 (iy)
   220C 98                 6489 	sbc	a,b
   220D F2r30s22           6490 	jp	P,00107$
                           6491 ;demo.c:1083: waitVB();
   2210 76                 6492 		halt 
                           6493 ;demo.c:1084: scenepointers[sceneindex]();
   2211 21r0Cs2E           6494 	ld	hl,#_sceneindex + 0
   2214 4E                 6495 	ld	c,(hl)
   2215 FD 21r0Cs2E        6496 	ld	iy,#_sceneindex
   2219 FD 46 01           6497 	ld	b,1 (iy)
   221C CB 21              6498 	sla	c
   221E CB 10              6499 	rl	b
   2220 21r10s2E           6500 	ld	hl,#_scenepointers
   2223 09                 6501 	add	hl,bc
   2224 4E                 6502 	ld	c,(hl)
   2225 23                 6503 	inc	hl
   2226 46                 6504 	ld	b,(hl)
   2227 C5                 6505 	push	bc
   2228 21r2Fs22           6506 	ld	hl,#00146$
   222B E5                 6507 	push	hl
   222C 69                 6508 	ld	l,c
   222D 60                 6509 	ld	h,b
   222E E9                 6510 	jp	(hl)
   222F                    6511 00146$:
   222F C1                 6512 	pop	bc
   2230                    6513 00107$:
                           6514 ;demo.c:1086: if(space())
   2230 21 08 01           6515 	ld	hl,#0x0108
   2233 E5                 6516 	push	hl
   2234 CDr00s00           6517 	call	_ispressed
   2237 F1                 6518 	pop	af
   2238 AF                 6519 	xor	a,a
   2239 B5                 6520 	or	a,l
   223A CAr85s21           6521 	jp	Z,00111$
                           6522 ;demo.c:1087: quit=1;
   223D DD 36 FF 01        6523 	ld	-1 (ix),#0x01
   2241 C3r85s21           6524 	jp	00111$
   2244                    6525 00113$:
                           6526 ;demo.c:1090: do_quit();
   2244 CDr18s1F           6527 	call	_do_quit
   2247 DD F9              6528 	ld	sp,ix
   2249 DD E1              6529 	pop	ix
   224B C9                 6530 	ret
   224C                    6531 _main_end::
   224C                    6532 __str_11:
   224C 64 65 6D 6F 20 69  6533 	.ascii "demo init"
        6E 69 74
   2255 0D                 6534 	.db 0x0D
   2256 0A                 6535 	.db 0x0A
   2257 0D                 6536 	.db 0x0D
   2258 0A                 6537 	.db 0x0A
   2259 00                 6538 	.db 0x00
   225A                    6539 __str_12:
   225A 6D 75 73 69 63 20  6540 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   2267 00                 6541 	.db 0x00
   2268                    6542 __str_13:
   2268 64 6F 6E 65 2E     6543 	.ascii "done."
   226D 0D                 6544 	.db 0x0D
   226E 0A                 6545 	.db 0x0A
   226F 00                 6546 	.db 0x00
   2270                    6547 __str_14:
   2270 64 65 74 65 63 74  6548 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   2285 00                 6549 	.db 0x00
   2286                    6550 __str_15:
   2286 20 76 64 70 32 20  6551 	.ascii " vdp2 found!"
        66 6F 75 6E 64 21
   2292 0D                 6552 	.db 0x0D
   2293 0A                 6553 	.db 0x0A
   2294 0D                 6554 	.db 0x0D
   2295 0A                 6555 	.db 0x0A
   2296 00                 6556 	.db 0x00
   2297                    6557 __str_16:
   2297 20 76 64 70 31 20  6558 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   22A3 0D                 6559 	.db 0x0D
   22A4 0A                 6560 	.db 0x0A
   22A5 53 6F 72 72 79 2C  6561 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   22D3 20 56 52 41 4D 2E  6562 	.ascii " VRAM."
   22D9 0D                 6563 	.db 0x0D
   22DA 0A                 6564 	.db 0x0A
   22DB 0D                 6565 	.db 0x0D
   22DC 0A                 6566 	.db 0x0A
   22DD 00                 6567 	.db 0x00
   22DE                    6568 __str_17:
   22DE 54 57 49 53 54 45  6569 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   22E9 00                 6570 	.db 0x00
   22EA                    6571 __str_18:
   22EA 54 46 31 20 20 20  6572 	.ascii "TF1     PL5"
        20 20 50 4C 35
   22F5 00                 6573 	.db 0x00
   22F6                    6574 __str_19:
   22F6 42 4F 58 45 53 20  6575 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   2301 00                 6576 	.db 0x00
   2302                    6577 __str_20:
   2302 42 55 4C 42 53 20  6578 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   230D 00                 6579 	.db 0x00
   230E                    6580 __str_21:
   230E 42 55 4C 42 53 20  6581 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   2319 00                 6582 	.db 0x00
   231A                    6583 __str_22:
   231A 54 57 49 53 54 45  6584 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   2325 00                 6585 	.db 0x00
   2326                    6586 __str_23:
   2326 42 4F 58 45 53 20  6587 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   2331 00                 6588 	.db 0x00
   2332                    6589 __str_24:
   2332 44 53 53 4C 4F 47  6590 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   233D 00                 6591 	.db 0x00
   233E                    6592 __str_25:
   233E 44 53 53 4C 4F 47  6593 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   2349 00                 6594 	.db 0x00
                           6595 	.area _CODE
                           6596 	.area _CABS
