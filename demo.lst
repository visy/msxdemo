                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Wed Feb 28 02:00:56 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _tritiles
                             15 	.globl _drawtilescreen
                             16 	.globl _drawtritile
                             17 	.globl _boxes
                             18 	.globl _drawbox
                             19 	.globl _animplay
                             20 	.globl _bulbs
                             21 	.globl _twister
                             22 	.globl _font
                             23 	.globl _drawsine
                             24 	.globl _drawstr
                             25 	.globl _do_letter_tall
                             26 	.globl _do_letter
                             27 	.globl _raster_effu
                             28 	.globl _do_blocks
                             29 	.globl _do_ymmm
                             30 	.globl _fadein
                             31 	.globl _pck_load
                             32 	.globl _raw_load
                             33 	.globl _pause
                             34 	.globl _pal_load
                             35 	.globl _scratch_clear
                             36 	.globl _ge5_load
                             37 	.globl _color_isr
                             38 	.globl _my_isr
                             39 	.globl _isNthBitSet
                             40 	.globl _scenetimings
                             41 	.globl _scenepointers
                             42 	.globl _timeindex
                             43 	.globl _sceneindex
                             44 	.globl _triframes
                             45 	.globl _tripaltick
                             46 	.globl _tripal
                             47 	.globl _tri_inited
                             48 	.globl _pbt
                             49 	.globl _pbx
                             50 	.globl _bonc
                             51 	.globl _bo
                             52 	.globl _byy
                             53 	.globl _bxx
                             54 	.globl _bt
                             55 	.globl _by
                             56 	.globl _bx
                             57 	.globl _prevby
                             58 	.globl _prevbx
                             59 	.globl _prevy
                             60 	.globl _prevx
                             61 	.globl _dbly
                             62 	.globl _buffer
                             63 	.globl _boxes_init
                             64 	.globl _anim_init
                             65 	.globl _enderdir
                             66 	.globl _ender
                             67 	.globl _ff2
                             68 	.globl _ff1
                             69 	.globl _bulbflipper
                             70 	.globl _twinited
                             71 	.globl _ff
                             72 	.globl _ly
                             73 	.globl _lx
                             74 	.globl _linenum
                             75 	.globl _flof
                             76 	.globl _btab
                             77 	.globl _bty
                             78 	.globl _btx
                             79 	.globl _bsy
                             80 	.globl _bsx
                             81 	.globl _block_init
                             82 	.globl _cc
                             83 	.globl _yofff
                             84 	.globl _cmd
                             85 	.globl _tick
                             86 	.globl _vbicount
                             87 	.globl _boxes_palette
                             88 	.globl _tf_palette
                             89 	.globl _twister_palette
                             90 	.globl _block_palette
                             91 	.globl _cur_palette
                             92 	.globl _scratch
                             93 	.globl _packbuffer
                             94 	.globl _tri_lookup_y
                             95 	.globl _tri_lookup_x
                             96 	.globl _sintab
                             97 	.globl _font_w
                             98 	.globl _font_y
                             99 	.globl _font_x
                            100 	.globl _tri_side2
                            101 	.globl _tri_side1
                            102 	.globl _tri_dia
                            103 	.globl _tri_up
                            104 	.globl _tri_center
                            105 	.globl _sintabx
                            106 ;--------------------------------------------------------
                            107 ; special function registers
                            108 ;--------------------------------------------------------
                            109 ;--------------------------------------------------------
                            110 ;  ram data
                            111 ;--------------------------------------------------------
                            112 	.area _DATA
   0000                     113 _sintab::
   0000                     114 	.ds 256
   0100                     115 _tri_lookup_x::
   0100                     116 	.ds 32
   0120                     117 _tri_lookup_y::
   0120                     118 	.ds 64
   0160                     119 _packbuffer::
   0160                     120 	.ds 16000
   3FE0                     121 _scratch::
   3FE0                     122 	.ds 128
   4060                     123 _cur_palette::
   4060                     124 	.ds 32
   4080                     125 _block_palette::
   4080                     126 	.ds 32
   40A0                     127 _twister_palette::
   40A0                     128 	.ds 32
   40C0                     129 _tf_palette::
   40C0                     130 	.ds 32
   40E0                     131 _boxes_palette::
   40E0                     132 	.ds 32
   4100                     133 _vbicount::
   4100                     134 	.ds 2
   4102                     135 _tick::
   4102                     136 	.ds 2
   4104                     137 _cmd::
   4104                     138 	.ds 15
   4113                     139 _isNthBitSet_mask_1_1:
   4113                     140 	.ds 8
   411B                     141 _yofff::
   411B                     142 	.ds 1
   411C                     143 _cc::
   411C                     144 	.ds 1
   411D                     145 _flipper:
   411D                     146 	.ds 2
   411F                     147 _ymmmf:
   411F                     148 	.ds 2
   4121                     149 _block_init::
   4121                     150 	.ds 1
   4122                     151 _bsx::
   4122                     152 	.ds 2
   4124                     153 _bsy::
   4124                     154 	.ds 2
   4126                     155 _btx::
   4126                     156 	.ds 2
   4128                     157 _bty::
   4128                     158 	.ds 2
   412A                     159 _btab::
   412A                     160 	.ds 32
   414A                     161 _flof::
   414A                     162 	.ds 2
   414C                     163 _linenum::
   414C                     164 	.ds 2
   414E                     165 _lx::
   414E                     166 	.ds 1
   414F                     167 _ly::
   414F                     168 	.ds 1
   4150                     169 _ff::
   4150                     170 	.ds 2
   4152                     171 _twinited::
   4152                     172 	.ds 2
   4154                     173 _bulbflipper::
   4154                     174 	.ds 2
   4156                     175 _ff1::
   4156                     176 	.ds 2
   4158                     177 _ff2::
   4158                     178 	.ds 2
   415A                     179 _ender::
   415A                     180 	.ds 2
   415C                     181 _enderdir::
   415C                     182 	.ds 2
   415E                     183 _xo:
   415E                     184 	.ds 2
   4160                     185 _yo:
   4160                     186 	.ds 2
   4162                     187 _po:
   4162                     188 	.ds 2
   4164                     189 _frames:
   4164                     190 	.ds 2
   4166                     191 _anim_init::
   4166                     192 	.ds 2
   4168                     193 _boxes_init::
   4168                     194 	.ds 1
   4169                     195 _buffer::
   4169                     196 	.ds 2
   416B                     197 _dbly::
   416B                     198 	.ds 2
   416D                     199 _prevx::
   416D                     200 	.ds 2
   416F                     201 _prevy::
   416F                     202 	.ds 2
   4171                     203 _prevbx::
   4171                     204 	.ds 2
   4173                     205 _prevby::
   4173                     206 	.ds 2
   4175                     207 _bx::
   4175                     208 	.ds 2
   4177                     209 _by::
   4177                     210 	.ds 2
   4179                     211 _bt::
   4179                     212 	.ds 2
   417B                     213 _bxx::
   417B                     214 	.ds 2
   417D                     215 _byy::
   417D                     216 	.ds 2
   417F                     217 _bo::
   417F                     218 	.ds 2
   4181                     219 _bonc::
   4181                     220 	.ds 2
   4183                     221 _pbx::
   4183                     222 	.ds 2
   4185                     223 _pbt::
   4185                     224 	.ds 2
   4187                     225 _tri_inited::
   4187                     226 	.ds 1
   4188                     227 _tripal::
   4188                     228 	.ds 9
   4191                     229 _tripaltick::
   4191                     230 	.ds 1
   4192                     231 _triframes::
   4192                     232 	.ds 2
   4194                     233 _sceneindex::
   4194                     234 	.ds 2
   4196                     235 _timeindex::
   4196                     236 	.ds 2
   4198                     237 _scenepointers::
   4198                     238 	.ds 12
   41A4                     239 _scenetimings::
   41A4                     240 	.ds 24
                            241 ;--------------------------------------------------------
                            242 ; overlayable items in  ram 
                            243 ;--------------------------------------------------------
                            244 	.area _OVERLAY
                            245 ;--------------------------------------------------------
                            246 ; external initialized ram data
                            247 ;--------------------------------------------------------
                            248 ;--------------------------------------------------------
                            249 ; global & static initialisations
                            250 ;--------------------------------------------------------
                            251 	.area _HOME
                            252 	.area _GSINIT
                            253 	.area _GSFINAL
                            254 	.area _GSINIT
                            255 ;demo.c:131: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r13s41            256 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            257 	call	__initrleblock
   0006 08                  258 	.db	8
   0007 01 02 04 08 10 20   259 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  260 	.db	0
                            261 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            262 	ld	hl,#_sintab
   0013 CDr00s00            263 	call	__initrleblock
   0016 3B                  264 	.db	59
   0017 00 03 06 09 0C 0F   265 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   266 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   267 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   268 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   269 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   270 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   271 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            272 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               273 	.db	#-5,#0x7E
   0054 01                  274 	.db	1
   0055 7F                  275 	.db	0x7F
   0056 FB 7E               276 	.db	#-5,#0x7E
   0058 75                  277 	.db	117
   0059 7D 7D 7C 7B 7B 7A   278 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   279 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   280 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   281 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   282 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   283 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   284 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   285 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   286 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   287 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   288 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   289 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   290 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   291 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      292 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               293 	.db	#-5,#0x82
   00D0 01                  294 	.db	1
   00D1 81                  295 	.db	0x81
   00D2 FB 82               296 	.db	#-5,#0x82
   00D4 3A                  297 	.db	58
   00D5 83 83 84 85 85 86   298 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   299 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   300 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   301 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   302 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   303 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   304 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               305 	.db	0xFA, 0xFD
   010F 00                  306 	.db	0
                            307 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            308 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            309 	call	__initrleblock
   0116 E0 00               310 	.db	#-32,#0x00
   0118 00                  311 	.db	0
                            312 ;demo.c:114: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            313 	ld	hl,#_tri_lookup_y
   011C CDr00s00            314 	call	__initrleblock
   011F C0 00               315 	.db	#-64,#0x00
   0121 00                  316 	.db	0
                            317 ;demo.c:116: uint8_t packbuffer[16000] = {0};
   0122 21r60s01            318 	ld	hl,#_packbuffer
   0125 CDr00s00            319 	call	__initrleblock
   0128 81 00               320 	.db	#-127,#0x00
   012A 81 00               321 	.db	#-127,#0x00
   012C 81 00               322 	.db	#-127,#0x00
   012E 81 00               323 	.db	#-127,#0x00
   0130 81 00               324 	.db	#-127,#0x00
   0132 81 00               325 	.db	#-127,#0x00
   0134 81 00               326 	.db	#-127,#0x00
   0136 81 00               327 	.db	#-127,#0x00
   0138 81 00               328 	.db	#-127,#0x00
   013A 81 00               329 	.db	#-127,#0x00
   013C 81 00               330 	.db	#-127,#0x00
   013E 81 00               331 	.db	#-127,#0x00
   0140 81 00               332 	.db	#-127,#0x00
   0142 81 00               333 	.db	#-127,#0x00
   0144 81 00               334 	.db	#-127,#0x00
   0146 81 00               335 	.db	#-127,#0x00
   0148 81 00               336 	.db	#-127,#0x00
   014A 81 00               337 	.db	#-127,#0x00
   014C 81 00               338 	.db	#-127,#0x00
   014E 81 00               339 	.db	#-127,#0x00
   0150 81 00               340 	.db	#-127,#0x00
   0152 81 00               341 	.db	#-127,#0x00
   0154 81 00               342 	.db	#-127,#0x00
   0156 81 00               343 	.db	#-127,#0x00
   0158 81 00               344 	.db	#-127,#0x00
   015A 81 00               345 	.db	#-127,#0x00
   015C 81 00               346 	.db	#-127,#0x00
   015E 81 00               347 	.db	#-127,#0x00
   0160 81 00               348 	.db	#-127,#0x00
   0162 81 00               349 	.db	#-127,#0x00
   0164 81 00               350 	.db	#-127,#0x00
   0166 81 00               351 	.db	#-127,#0x00
   0168 81 00               352 	.db	#-127,#0x00
   016A 81 00               353 	.db	#-127,#0x00
   016C 81 00               354 	.db	#-127,#0x00
   016E 81 00               355 	.db	#-127,#0x00
   0170 81 00               356 	.db	#-127,#0x00
   0172 81 00               357 	.db	#-127,#0x00
   0174 81 00               358 	.db	#-127,#0x00
   0176 81 00               359 	.db	#-127,#0x00
   0178 81 00               360 	.db	#-127,#0x00
   017A 81 00               361 	.db	#-127,#0x00
   017C 81 00               362 	.db	#-127,#0x00
   017E 81 00               363 	.db	#-127,#0x00
   0180 81 00               364 	.db	#-127,#0x00
   0182 81 00               365 	.db	#-127,#0x00
   0184 81 00               366 	.db	#-127,#0x00
   0186 81 00               367 	.db	#-127,#0x00
   0188 81 00               368 	.db	#-127,#0x00
   018A 81 00               369 	.db	#-127,#0x00
   018C 81 00               370 	.db	#-127,#0x00
   018E 81 00               371 	.db	#-127,#0x00
   0190 81 00               372 	.db	#-127,#0x00
   0192 81 00               373 	.db	#-127,#0x00
   0194 81 00               374 	.db	#-127,#0x00
   0196 81 00               375 	.db	#-127,#0x00
   0198 81 00               376 	.db	#-127,#0x00
   019A 81 00               377 	.db	#-127,#0x00
   019C 81 00               378 	.db	#-127,#0x00
   019E 81 00               379 	.db	#-127,#0x00
   01A0 81 00               380 	.db	#-127,#0x00
   01A2 81 00               381 	.db	#-127,#0x00
   01A4 81 00               382 	.db	#-127,#0x00
   01A6 81 00               383 	.db	#-127,#0x00
   01A8 81 00               384 	.db	#-127,#0x00
   01AA 81 00               385 	.db	#-127,#0x00
   01AC 81 00               386 	.db	#-127,#0x00
   01AE 81 00               387 	.db	#-127,#0x00
   01B0 81 00               388 	.db	#-127,#0x00
   01B2 81 00               389 	.db	#-127,#0x00
   01B4 81 00               390 	.db	#-127,#0x00
   01B6 81 00               391 	.db	#-127,#0x00
   01B8 81 00               392 	.db	#-127,#0x00
   01BA 81 00               393 	.db	#-127,#0x00
   01BC 81 00               394 	.db	#-127,#0x00
   01BE 81 00               395 	.db	#-127,#0x00
   01C0 81 00               396 	.db	#-127,#0x00
   01C2 81 00               397 	.db	#-127,#0x00
   01C4 81 00               398 	.db	#-127,#0x00
   01C6 81 00               399 	.db	#-127,#0x00
   01C8 81 00               400 	.db	#-127,#0x00
   01CA 81 00               401 	.db	#-127,#0x00
   01CC 81 00               402 	.db	#-127,#0x00
   01CE 81 00               403 	.db	#-127,#0x00
   01D0 81 00               404 	.db	#-127,#0x00
   01D2 81 00               405 	.db	#-127,#0x00
   01D4 81 00               406 	.db	#-127,#0x00
   01D6 81 00               407 	.db	#-127,#0x00
   01D8 81 00               408 	.db	#-127,#0x00
   01DA 81 00               409 	.db	#-127,#0x00
   01DC 81 00               410 	.db	#-127,#0x00
   01DE 81 00               411 	.db	#-127,#0x00
   01E0 81 00               412 	.db	#-127,#0x00
   01E2 81 00               413 	.db	#-127,#0x00
   01E4 81 00               414 	.db	#-127,#0x00
   01E6 81 00               415 	.db	#-127,#0x00
   01E8 81 00               416 	.db	#-127,#0x00
   01EA 81 00               417 	.db	#-127,#0x00
   01EC 81 00               418 	.db	#-127,#0x00
   01EE 81 00               419 	.db	#-127,#0x00
   01F0 81 00               420 	.db	#-127,#0x00
   01F2 81 00               421 	.db	#-127,#0x00
   01F4 81 00               422 	.db	#-127,#0x00
   01F6 81 00               423 	.db	#-127,#0x00
   01F8 81 00               424 	.db	#-127,#0x00
   01FA 81 00               425 	.db	#-127,#0x00
   01FC 81 00               426 	.db	#-127,#0x00
   01FE 81 00               427 	.db	#-127,#0x00
   0200 81 00               428 	.db	#-127,#0x00
   0202 81 00               429 	.db	#-127,#0x00
   0204 81 00               430 	.db	#-127,#0x00
   0206 81 00               431 	.db	#-127,#0x00
   0208 81 00               432 	.db	#-127,#0x00
   020A 81 00               433 	.db	#-127,#0x00
   020C 81 00               434 	.db	#-127,#0x00
   020E 81 00               435 	.db	#-127,#0x00
   0210 81 00               436 	.db	#-127,#0x00
   0212 81 00               437 	.db	#-127,#0x00
   0214 81 00               438 	.db	#-127,#0x00
   0216 81 00               439 	.db	#-127,#0x00
   0218 81 00               440 	.db	#-127,#0x00
   021A 81 00               441 	.db	#-127,#0x00
   021C 81 00               442 	.db	#-127,#0x00
   021E 81 00               443 	.db	#-127,#0x00
   0220 81 00               444 	.db	#-127,#0x00
   0222 83 00               445 	.db	#-125,#0x00
   0224 00                  446 	.db	0
                            447 ;demo.c:125: volatile int vbicount=0;
   0225 FD 21r00s41         448 	ld	iy,#_vbicount
   0229 FD 36 00 00         449 	ld	0 (iy),#0x00
   022D FD 21r00s41         450 	ld	iy,#_vbicount
   0231 FD 36 01 00         451 	ld	1 (iy),#0x00
                            452 ;demo.c:126: volatile int tick=0;
   0235 FD 21r02s41         453 	ld	iy,#_tick
   0239 FD 36 00 00         454 	ld	0 (iy),#0x00
   023D FD 21r02s41         455 	ld	iy,#_tick
   0241 FD 36 01 00         456 	ld	1 (iy),#0x00
                            457 ;demo.c:326: uint8_t yofff = 0;
   0245 FD 21r1Bs41         458 	ld	iy,#_yofff
   0249 FD 36 00 00         459 	ld	0 (iy),#0x00
                            460 ;demo.c:327: uint8_t cc = 0;
   024D FD 21r1Cs41         461 	ld	iy,#_cc
   0251 FD 36 00 00         462 	ld	0 (iy),#0x00
                            463 ;demo.c:328: static int flipper = 0;
   0255 FD 21r1Ds41         464 	ld	iy,#_flipper
   0259 FD 36 00 00         465 	ld	0 (iy),#0x00
   025D FD 21r1Ds41         466 	ld	iy,#_flipper
   0261 FD 36 01 00         467 	ld	1 (iy),#0x00
                            468 ;demo.c:329: static int ymmmf = 0;
   0265 FD 21r1Fs41         469 	ld	iy,#_ymmmf
   0269 FD 36 00 00         470 	ld	0 (iy),#0x00
   026D FD 21r1Fs41         471 	ld	iy,#_ymmmf
   0271 FD 36 01 00         472 	ld	1 (iy),#0x00
                            473 ;demo.c:360: char block_init = 0;
   0275 FD 21r21s41         474 	ld	iy,#_block_init
   0279 FD 36 00 00         475 	ld	0 (iy),#0x00
                            476 ;demo.c:362: int bsx = 0;
   027D FD 21r22s41         477 	ld	iy,#_bsx
   0281 FD 36 00 00         478 	ld	0 (iy),#0x00
   0285 FD 21r22s41         479 	ld	iy,#_bsx
   0289 FD 36 01 00         480 	ld	1 (iy),#0x00
                            481 ;demo.c:363: int bsy = 0;
   028D FD 21r24s41         482 	ld	iy,#_bsy
   0291 FD 36 00 00         483 	ld	0 (iy),#0x00
   0295 FD 21r24s41         484 	ld	iy,#_bsy
   0299 FD 36 01 00         485 	ld	1 (iy),#0x00
                            486 ;demo.c:364: int btx = 0;
   029D FD 21r26s41         487 	ld	iy,#_btx
   02A1 FD 36 00 00         488 	ld	0 (iy),#0x00
   02A5 FD 21r26s41         489 	ld	iy,#_btx
   02A9 FD 36 01 00         490 	ld	1 (iy),#0x00
                            491 ;demo.c:365: int bty = 0;
   02AD FD 21r28s41         492 	ld	iy,#_bty
   02B1 FD 36 00 00         493 	ld	0 (iy),#0x00
   02B5 FD 21r28s41         494 	ld	iy,#_bty
   02B9 FD 36 01 00         495 	ld	1 (iy),#0x00
                            496 ;demo.c:367: int btab[16] = {0};
   02BD 21r2As41            497 	ld	hl,#_btab
   02C0 CDr00s00            498 	call	__initrleblock
   02C3 E0 00               499 	.db	#-32,#0x00
   02C5 00                  500 	.db	0
                            501 ;demo.c:369: int flof = 0;
   02C6 FD 21r4As41         502 	ld	iy,#_flof
   02CA FD 36 00 00         503 	ld	0 (iy),#0x00
   02CE FD 21r4As41         504 	ld	iy,#_flof
   02D2 FD 36 01 00         505 	ld	1 (iy),#0x00
                            506 ;demo.c:418: int linenum = 0;
   02D6 FD 21r4Cs41         507 	ld	iy,#_linenum
   02DA FD 36 00 00         508 	ld	0 (iy),#0x00
   02DE FD 21r4Cs41         509 	ld	iy,#_linenum
   02E2 FD 36 01 00         510 	ld	1 (iy),#0x00
                            511 ;demo.c:476: uint8_t lx = 0;
   02E6 FD 21r4Es41         512 	ld	iy,#_lx
   02EA FD 36 00 00         513 	ld	0 (iy),#0x00
                            514 ;demo.c:477: uint8_t ly = 0;
   02EE FD 21r4Fs41         515 	ld	iy,#_ly
   02F2 FD 36 00 00         516 	ld	0 (iy),#0x00
                            517 ;demo.c:540: int ff = 0;
   02F6 FD 21r50s41         518 	ld	iy,#_ff
   02FA FD 36 00 00         519 	ld	0 (iy),#0x00
   02FE FD 21r50s41         520 	ld	iy,#_ff
   0302 FD 36 01 00         521 	ld	1 (iy),#0x00
                            522 ;demo.c:541: int twinited = 0;
   0306 FD 21r52s41         523 	ld	iy,#_twinited
   030A FD 36 00 00         524 	ld	0 (iy),#0x00
   030E FD 21r52s41         525 	ld	iy,#_twinited
   0312 FD 36 01 00         526 	ld	1 (iy),#0x00
                            527 ;demo.c:590: int bulbflipper = 1;
   0316 FD 21r54s41         528 	ld	iy,#_bulbflipper
   031A FD 36 00 01         529 	ld	0 (iy),#0x01
   031E FD 21r54s41         530 	ld	iy,#_bulbflipper
   0322 FD 36 01 00         531 	ld	1 (iy),#0x00
                            532 ;demo.c:592: int ff1,ff2 = 0;
   0326 FD 21r58s41         533 	ld	iy,#_ff2
   032A FD 36 00 00         534 	ld	0 (iy),#0x00
   032E FD 21r58s41         535 	ld	iy,#_ff2
   0332 FD 36 01 00         536 	ld	1 (iy),#0x00
                            537 ;demo.c:593: int ender = 212;
   0336 FD 21r5As41         538 	ld	iy,#_ender
   033A FD 36 00 D4         539 	ld	0 (iy),#0xD4
   033E FD 21r5As41         540 	ld	iy,#_ender
   0342 FD 36 01 00         541 	ld	1 (iy),#0x00
                            542 ;demo.c:594: int enderdir = -1;
   0346 FD 21r5Cs41         543 	ld	iy,#_enderdir
   034A FD 36 00 FF         544 	ld	0 (iy),#0xFF
   034E FD 21r5Cs41         545 	ld	iy,#_enderdir
   0352 FD 36 01 FF         546 	ld	1 (iy),#0xFF
                            547 ;demo.c:651: static int xo = 0;
   0356 FD 21r5Es41         548 	ld	iy,#_xo
   035A FD 36 00 00         549 	ld	0 (iy),#0x00
   035E FD 21r5Es41         550 	ld	iy,#_xo
   0362 FD 36 01 00         551 	ld	1 (iy),#0x00
                            552 ;demo.c:652: static int yo = 0;
   0366 FD 21r60s41         553 	ld	iy,#_yo
   036A FD 36 00 00         554 	ld	0 (iy),#0x00
   036E FD 21r60s41         555 	ld	iy,#_yo
   0372 FD 36 01 00         556 	ld	1 (iy),#0x00
                            557 ;demo.c:653: static int po = 0;
   0376 FD 21r62s41         558 	ld	iy,#_po
   037A FD 36 00 00         559 	ld	0 (iy),#0x00
   037E FD 21r62s41         560 	ld	iy,#_po
   0382 FD 36 01 00         561 	ld	1 (iy),#0x00
                            562 ;demo.c:654: static int frames = 0;
   0386 FD 21r64s41         563 	ld	iy,#_frames
   038A FD 36 00 00         564 	ld	0 (iy),#0x00
   038E FD 21r64s41         565 	ld	iy,#_frames
   0392 FD 36 01 00         566 	ld	1 (iy),#0x00
                            567 ;demo.c:656: int anim_init = 0;
   0396 FD 21r66s41         568 	ld	iy,#_anim_init
   039A FD 36 00 00         569 	ld	0 (iy),#0x00
   039E FD 21r66s41         570 	ld	iy,#_anim_init
   03A2 FD 36 01 00         571 	ld	1 (iy),#0x00
                            572 ;demo.c:749: uint8_t boxes_init = 0;
   03A6 FD 21r68s41         573 	ld	iy,#_boxes_init
   03AA FD 36 00 00         574 	ld	0 (iy),#0x00
                            575 ;demo.c:750: int buffer = 1;
   03AE FD 21r69s41         576 	ld	iy,#_buffer
   03B2 FD 36 00 01         577 	ld	0 (iy),#0x01
   03B6 FD 21r69s41         578 	ld	iy,#_buffer
   03BA FD 36 01 00         579 	ld	1 (iy),#0x00
                            580 ;demo.c:751: int dbly = 0;
   03BE FD 21r6Bs41         581 	ld	iy,#_dbly
   03C2 FD 36 00 00         582 	ld	0 (iy),#0x00
   03C6 FD 21r6Bs41         583 	ld	iy,#_dbly
   03CA FD 36 01 00         584 	ld	1 (iy),#0x00
                            585 ;demo.c:752: int prevx = -1;
   03CE FD 21r6Ds41         586 	ld	iy,#_prevx
   03D2 FD 36 00 FF         587 	ld	0 (iy),#0xFF
   03D6 FD 21r6Ds41         588 	ld	iy,#_prevx
   03DA FD 36 01 FF         589 	ld	1 (iy),#0xFF
                            590 ;demo.c:777: int bx = 256-42;
   03DE FD 21r75s41         591 	ld	iy,#_bx
   03E2 FD 36 00 D6         592 	ld	0 (iy),#0xD6
   03E6 FD 21r75s41         593 	ld	iy,#_bx
   03EA FD 36 01 00         594 	ld	1 (iy),#0x00
                            595 ;demo.c:778: int by = 84;
   03EE FD 21r77s41         596 	ld	iy,#_by
   03F2 FD 36 00 54         597 	ld	0 (iy),#0x54
   03F6 FD 21r77s41         598 	ld	iy,#_by
   03FA FD 36 01 00         599 	ld	1 (iy),#0x00
                            600 ;demo.c:779: int bt = 0;
   03FE FD 21r79s41         601 	ld	iy,#_bt
   0402 FD 36 00 00         602 	ld	0 (iy),#0x00
   0406 FD 21r79s41         603 	ld	iy,#_bt
   040A FD 36 01 00         604 	ld	1 (iy),#0x00
                            605 ;demo.c:780: int bxx = 0;
   040E FD 21r7Bs41         606 	ld	iy,#_bxx
   0412 FD 36 00 00         607 	ld	0 (iy),#0x00
   0416 FD 21r7Bs41         608 	ld	iy,#_bxx
   041A FD 36 01 00         609 	ld	1 (iy),#0x00
                            610 ;demo.c:781: int byy = 0;
   041E FD 21r7Ds41         611 	ld	iy,#_byy
   0422 FD 36 00 00         612 	ld	0 (iy),#0x00
   0426 FD 21r7Ds41         613 	ld	iy,#_byy
   042A FD 36 01 00         614 	ld	1 (iy),#0x00
                            615 ;demo.c:782: int bo = 0;
   042E FD 21r7Fs41         616 	ld	iy,#_bo
   0432 FD 36 00 00         617 	ld	0 (iy),#0x00
   0436 FD 21r7Fs41         618 	ld	iy,#_bo
   043A FD 36 01 00         619 	ld	1 (iy),#0x00
                            620 ;demo.c:784: int bonc = 0;
   043E FD 21r81s41         621 	ld	iy,#_bonc
   0442 FD 36 00 00         622 	ld	0 (iy),#0x00
   0446 FD 21r81s41         623 	ld	iy,#_bonc
   044A FD 36 01 00         624 	ld	1 (iy),#0x00
                            625 ;demo.c:785: int pbx = 0;
   044E FD 21r83s41         626 	ld	iy,#_pbx
   0452 FD 36 00 00         627 	ld	0 (iy),#0x00
   0456 FD 21r83s41         628 	ld	iy,#_pbx
   045A FD 36 01 00         629 	ld	1 (iy),#0x00
                            630 ;demo.c:786: int pbt = 0;
   045E FD 21r85s41         631 	ld	iy,#_pbt
   0462 FD 36 00 00         632 	ld	0 (iy),#0x00
   0466 FD 21r85s41         633 	ld	iy,#_pbt
   046A FD 36 01 00         634 	ld	1 (iy),#0x00
                            635 ;demo.c:888: uint8_t tri_inited = 0;
   046E FD 21r87s41         636 	ld	iy,#_tri_inited
   0472 FD 36 00 00         637 	ld	0 (iy),#0x00
                            638 ;demo.c:916: char tripal[9] = {
   0476 21r88s41            639 	ld	hl,#_tripal
   0479 CDr00s00            640 	call	__initrleblock
   047C 09                  641 	.db	9
   047D 02 02 01 01 02 03   642 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0485 02                  643 	.db	0x02
   0486 00                  644 	.db	0
                            645 ;demo.c:922: uint8_t tripaltick = 0;
   0487 FD 21r91s41         646 	ld	iy,#_tripaltick
   048B FD 36 00 00         647 	ld	0 (iy),#0x00
                            648 ;demo.c:924: int triframes = 0;
   048F FD 21r92s41         649 	ld	iy,#_triframes
   0493 FD 36 00 00         650 	ld	0 (iy),#0x00
   0497 FD 21r92s41         651 	ld	iy,#_triframes
   049B FD 36 01 00         652 	ld	1 (iy),#0x00
                            653 ;demo.c:1029: int sceneindex = 0;
   049F FD 21r94s41         654 	ld	iy,#_sceneindex
   04A3 FD 36 00 00         655 	ld	0 (iy),#0x00
   04A7 FD 21r94s41         656 	ld	iy,#_sceneindex
   04AB FD 36 01 00         657 	ld	1 (iy),#0x00
                            658 ;demo.c:1030: int timeindex = 0;
   04AF FD 21r96s41         659 	ld	iy,#_timeindex
   04B3 FD 36 00 00         660 	ld	0 (iy),#0x00
   04B7 FD 21r96s41         661 	ld	iy,#_timeindex
   04BB FD 36 01 00         662 	ld	1 (iy),#0x00
                            663 ;demo.c:1032: void (*scenepointers[6])() = {
   04BF 21r98s41            664 	ld	hl,#_scenepointers
   04C2 36r27               665 	ld	(hl),#<_fadein
   04C4 23                  666 	inc	hl
   04C5 36s0A               667 	ld	(hl),#>_fadein
   04C7 01r9As41            668 	ld	bc,#_scenepointers + 2
   04CA 69                  669 	ld	l,c
   04CB 60                  670 	ld	h,b
   04CC 36r8F               671 	ld	(hl),#<_bulbs
   04CE 23                  672 	inc	hl
   04CF 36s13               673 	ld	(hl),#>_bulbs
   04D1 21r9Cs41            674 	ld	hl, #_scenepointers + 4
   04D4 36r23               675 	ld	(hl),#<_twister
   04D6 23                  676 	inc	hl
   04D7 36s12               677 	ld	(hl),#>_twister
   04D9 01r9Es41            678 	ld	bc,#_scenepointers + 6
   04DC 69                  679 	ld	l,c
   04DD 60                  680 	ld	h,b
   04DE 36r3E               681 	ld	(hl),#<_boxes
   04E0 23                  682 	inc	hl
   04E1 36s19               683 	ld	(hl),#>_boxes
   04E3 21rA0s41            684 	ld	hl, #_scenepointers + 8
   04E6 36r04               685 	ld	(hl),#<_tritiles
   04E8 23                  686 	inc	hl
   04E9 36s1E               687 	ld	(hl),#>_tritiles
   04EB 01rA2s41            688 	ld	bc,#_scenepointers + 10
   04EE 69                  689 	ld	l,c
   04EF 60                  690 	ld	h,b
   04F0 36rDF               691 	ld	(hl),#<_animplay
   04F2 23                  692 	inc	hl
   04F3 36s15               693 	ld	(hl),#>_animplay
                            694 ;demo.c:1041: int scenetimings[12] = {
   04F5 21rA4s41            695 	ld	hl,#_scenetimings
   04F8 CDr00s00            696 	call	__initrleblock
   04FB 18                  697 	.db	24
   04FC 00 00 40 00 C0 00   698 	.db	0x00, 0x00, 0x40, 0x00, 0xC0, 0x00, 0x20, 0x03
        20 03
   0504 20 03 DC 05 DC 05   699 	.db	0x20, 0x03, 0xDC, 0x05, 0xDC, 0x05, 0x98, 0x08
        98 08
   050C 98 08 A0 0F A0 0F   700 	.db	0x98, 0x08, 0xA0, 0x0F, 0xA0, 0x0F, 0x98, 0x3A
        98 3A
   0514 00                  701 	.db	0
                            702 ;--------------------------------------------------------
                            703 ; Home
                            704 ;--------------------------------------------------------
                            705 	.area _HOME
                            706 	.area _HOME
                            707 ;--------------------------------------------------------
                            708 ; code
                            709 ;--------------------------------------------------------
                            710 	.area _CODE
                            711 ;demo.c:130: int isNthBitSet (unsigned char c, int n) {
                            712 ;	---------------------------------
                            713 ; Function isNthBitSet
                            714 ; ---------------------------------
   0000                     715 _isNthBitSet_start::
   0000                     716 _isNthBitSet:
   0000 DD E5               717 	push	ix
   0002 DD 21 00 00         718 	ld	ix,#0
   0006 DD 39               719 	add	ix,sp
                            720 ;demo.c:132: return ((c & mask[n]) != 0);
   0008 3Er13               721 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            722 	add	a,5 (ix)
   000D 4F                  723 	ld	c,a
   000E 3Es41               724 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            725 	adc	a,6 (ix)
   0013 47                  726 	ld	b,a
   0014 0A                  727 	ld	a,(bc)
   0015 DD A6 04            728 	and	a,4 (ix)
   0018 20 04               729 	jr	NZ,00103$
   001A 3E 01               730 	ld	a,#0x01
   001C 18 01               731 	jr	00104$
   001E                     732 00103$:
   001E AF                  733 	xor	a,a
   001F                     734 00104$:
   001F B7                  735 	or	a,a
   0020 D6 01               736 	sub	a,#0x01
   0022 3E 00               737 	ld	a,#0x00
   0024 17                  738 	rla
   0025 4F                  739 	ld	c,a
   0026 69                  740 	ld	l,c
   0027 26 00               741 	ld	h,#0x00
   0029 DD E1               742 	pop	ix
   002B C9                  743 	ret
   002C                     744 _isNthBitSet_end::
   002C                     745 _sintabx:
   002C 78 00               746 	.dw #0x0078
   002E 7A 00               747 	.dw #0x007A
   0030 7D 00               748 	.dw #0x007D
   0032 80 00               749 	.dw #0x0080
   0034 83 00               750 	.dw #0x0083
   0036 86 00               751 	.dw #0x0086
   0038 89 00               752 	.dw #0x0089
   003A 8C 00               753 	.dw #0x008C
   003C 8F 00               754 	.dw #0x008F
   003E 92 00               755 	.dw #0x0092
   0040 95 00               756 	.dw #0x0095
   0042 98 00               757 	.dw #0x0098
   0044 9A 00               758 	.dw #0x009A
   0046 9D 00               759 	.dw #0x009D
   0048 A0 00               760 	.dw #0x00A0
   004A A3 00               761 	.dw #0x00A3
   004C A5 00               762 	.dw #0x00A5
   004E A8 00               763 	.dw #0x00A8
   0050 AB 00               764 	.dw #0x00AB
   0052 AD 00               765 	.dw #0x00AD
   0054 B0 00               766 	.dw #0x00B0
   0056 B3 00               767 	.dw #0x00B3
   0058 B5 00               768 	.dw #0x00B5
   005A B8 00               769 	.dw #0x00B8
   005C BA 00               770 	.dw #0x00BA
   005E BD 00               771 	.dw #0x00BD
   0060 BF 00               772 	.dw #0x00BF
   0062 C1 00               773 	.dw #0x00C1
   0064 C4 00               774 	.dw #0x00C4
   0066 C6 00               775 	.dw #0x00C6
   0068 C8 00               776 	.dw #0x00C8
   006A CA 00               777 	.dw #0x00CA
   006C CC 00               778 	.dw #0x00CC
   006E CE 00               779 	.dw #0x00CE
   0070 D0 00               780 	.dw #0x00D0
   0072 D2 00               781 	.dw #0x00D2
   0074 D4 00               782 	.dw #0x00D4
   0076 D6 00               783 	.dw #0x00D6
   0078 D8 00               784 	.dw #0x00D8
   007A DA 00               785 	.dw #0x00DA
   007C DB 00               786 	.dw #0x00DB
   007E DD 00               787 	.dw #0x00DD
   0080 DE 00               788 	.dw #0x00DE
   0082 E0 00               789 	.dw #0x00E0
   0084 E1 00               790 	.dw #0x00E1
   0086 E3 00               791 	.dw #0x00E3
   0088 E4 00               792 	.dw #0x00E4
   008A E5 00               793 	.dw #0x00E5
   008C E6 00               794 	.dw #0x00E6
   008E E7 00               795 	.dw #0x00E7
   0090 E8 00               796 	.dw #0x00E8
   0092 E9 00               797 	.dw #0x00E9
   0094 EA 00               798 	.dw #0x00EA
   0096 EB 00               799 	.dw #0x00EB
   0098 EC 00               800 	.dw #0x00EC
   009A ED 00               801 	.dw #0x00ED
   009C ED 00               802 	.dw #0x00ED
   009E EE 00               803 	.dw #0x00EE
   00A0 EE 00               804 	.dw #0x00EE
   00A2 EF 00               805 	.dw #0x00EF
   00A4 EF 00               806 	.dw #0x00EF
   00A6 EF 00               807 	.dw #0x00EF
   00A8 EF 00               808 	.dw #0x00EF
   00AA EF 00               809 	.dw #0x00EF
   00AC F0 00               810 	.dw #0x00F0
   00AE EF 00               811 	.dw #0x00EF
   00B0 EF 00               812 	.dw #0x00EF
   00B2 EF 00               813 	.dw #0x00EF
   00B4 EF 00               814 	.dw #0x00EF
   00B6 EF 00               815 	.dw #0x00EF
   00B8 EE 00               816 	.dw #0x00EE
   00BA EE 00               817 	.dw #0x00EE
   00BC ED 00               818 	.dw #0x00ED
   00BE ED 00               819 	.dw #0x00ED
   00C0 EC 00               820 	.dw #0x00EC
   00C2 EB 00               821 	.dw #0x00EB
   00C4 EA 00               822 	.dw #0x00EA
   00C6 E9 00               823 	.dw #0x00E9
   00C8 E8 00               824 	.dw #0x00E8
   00CA E7 00               825 	.dw #0x00E7
   00CC E6 00               826 	.dw #0x00E6
   00CE E5 00               827 	.dw #0x00E5
   00D0 E4 00               828 	.dw #0x00E4
   00D2 E3 00               829 	.dw #0x00E3
   00D4 E1 00               830 	.dw #0x00E1
   00D6 E0 00               831 	.dw #0x00E0
   00D8 DE 00               832 	.dw #0x00DE
   00DA DD 00               833 	.dw #0x00DD
   00DC DB 00               834 	.dw #0x00DB
   00DE DA 00               835 	.dw #0x00DA
   00E0 D8 00               836 	.dw #0x00D8
   00E2 D6 00               837 	.dw #0x00D6
   00E4 D4 00               838 	.dw #0x00D4
   00E6 D2 00               839 	.dw #0x00D2
   00E8 D0 00               840 	.dw #0x00D0
   00EA CE 00               841 	.dw #0x00CE
   00EC CC 00               842 	.dw #0x00CC
   00EE CA 00               843 	.dw #0x00CA
   00F0 C8 00               844 	.dw #0x00C8
   00F2 C6 00               845 	.dw #0x00C6
   00F4 C4 00               846 	.dw #0x00C4
   00F6 C1 00               847 	.dw #0x00C1
   00F8 BF 00               848 	.dw #0x00BF
   00FA BD 00               849 	.dw #0x00BD
   00FC BA 00               850 	.dw #0x00BA
   00FE B8 00               851 	.dw #0x00B8
   0100 B5 00               852 	.dw #0x00B5
   0102 B3 00               853 	.dw #0x00B3
   0104 B0 00               854 	.dw #0x00B0
   0106 AD 00               855 	.dw #0x00AD
   0108 AB 00               856 	.dw #0x00AB
   010A A8 00               857 	.dw #0x00A8
   010C A5 00               858 	.dw #0x00A5
   010E A3 00               859 	.dw #0x00A3
   0110 A0 00               860 	.dw #0x00A0
   0112 9D 00               861 	.dw #0x009D
   0114 9A 00               862 	.dw #0x009A
   0116 98 00               863 	.dw #0x0098
   0118 95 00               864 	.dw #0x0095
   011A 92 00               865 	.dw #0x0092
   011C 8F 00               866 	.dw #0x008F
   011E 8C 00               867 	.dw #0x008C
   0120 89 00               868 	.dw #0x0089
   0122 86 00               869 	.dw #0x0086
   0124 83 00               870 	.dw #0x0083
   0126 80 00               871 	.dw #0x0080
   0128 7D 00               872 	.dw #0x007D
   012A 7A 00               873 	.dw #0x007A
   012C 78 00               874 	.dw #0x0078
   012E 75 00               875 	.dw #0x0075
   0130 72 00               876 	.dw #0x0072
   0132 6F 00               877 	.dw #0x006F
   0134 6C 00               878 	.dw #0x006C
   0136 69 00               879 	.dw #0x0069
   0138 66 00               880 	.dw #0x0066
   013A 63 00               881 	.dw #0x0063
   013C 60 00               882 	.dw #0x0060
   013E 5D 00               883 	.dw #0x005D
   0140 5A 00               884 	.dw #0x005A
   0142 57 00               885 	.dw #0x0057
   0144 55 00               886 	.dw #0x0055
   0146 52 00               887 	.dw #0x0052
   0148 4F 00               888 	.dw #0x004F
   014A 4C 00               889 	.dw #0x004C
   014C 4A 00               890 	.dw #0x004A
   014E 47 00               891 	.dw #0x0047
   0150 44 00               892 	.dw #0x0044
   0152 42 00               893 	.dw #0x0042
   0154 3F 00               894 	.dw #0x003F
   0156 3C 00               895 	.dw #0x003C
   0158 3A 00               896 	.dw #0x003A
   015A 37 00               897 	.dw #0x0037
   015C 35 00               898 	.dw #0x0035
   015E 32 00               899 	.dw #0x0032
   0160 30 00               900 	.dw #0x0030
   0162 2E 00               901 	.dw #0x002E
   0164 2B 00               902 	.dw #0x002B
   0166 29 00               903 	.dw #0x0029
   0168 27 00               904 	.dw #0x0027
   016A 25 00               905 	.dw #0x0025
   016C 23 00               906 	.dw #0x0023
   016E 21 00               907 	.dw #0x0021
   0170 1F 00               908 	.dw #0x001F
   0172 1D 00               909 	.dw #0x001D
   0174 1B 00               910 	.dw #0x001B
   0176 19 00               911 	.dw #0x0019
   0178 17 00               912 	.dw #0x0017
   017A 15 00               913 	.dw #0x0015
   017C 14 00               914 	.dw #0x0014
   017E 12 00               915 	.dw #0x0012
   0180 11 00               916 	.dw #0x0011
   0182 0F 00               917 	.dw #0x000F
   0184 0E 00               918 	.dw #0x000E
   0186 0C 00               919 	.dw #0x000C
   0188 0B 00               920 	.dw #0x000B
   018A 0A 00               921 	.dw #0x000A
   018C 09 00               922 	.dw #0x0009
   018E 08 00               923 	.dw #0x0008
   0190 07 00               924 	.dw #0x0007
   0192 06 00               925 	.dw #0x0006
   0194 05 00               926 	.dw #0x0005
   0196 04 00               927 	.dw #0x0004
   0198 03 00               928 	.dw #0x0003
   019A 02 00               929 	.dw #0x0002
   019C 02 00               930 	.dw #0x0002
   019E 01 00               931 	.dw #0x0001
   01A0 01 00               932 	.dw #0x0001
   01A2 00 00               933 	.dw #0x0000
   01A4 00 00               934 	.dw #0x0000
   01A6 00 00               935 	.dw #0x0000
   01A8 00 00               936 	.dw #0x0000
   01AA 00 00               937 	.dw #0x0000
   01AC 00 00               938 	.dw #0x0000
   01AE 00 00               939 	.dw #0x0000
   01B0 00 00               940 	.dw #0x0000
   01B2 00 00               941 	.dw #0x0000
   01B4 00 00               942 	.dw #0x0000
   01B6 00 00               943 	.dw #0x0000
   01B8 01 00               944 	.dw #0x0001
   01BA 01 00               945 	.dw #0x0001
   01BC 02 00               946 	.dw #0x0002
   01BE 02 00               947 	.dw #0x0002
   01C0 03 00               948 	.dw #0x0003
   01C2 04 00               949 	.dw #0x0004
   01C4 05 00               950 	.dw #0x0005
   01C6 06 00               951 	.dw #0x0006
   01C8 07 00               952 	.dw #0x0007
   01CA 08 00               953 	.dw #0x0008
   01CC 09 00               954 	.dw #0x0009
   01CE 0A 00               955 	.dw #0x000A
   01D0 0B 00               956 	.dw #0x000B
   01D2 0C 00               957 	.dw #0x000C
   01D4 0E 00               958 	.dw #0x000E
   01D6 0F 00               959 	.dw #0x000F
   01D8 11 00               960 	.dw #0x0011
   01DA 12 00               961 	.dw #0x0012
   01DC 14 00               962 	.dw #0x0014
   01DE 15 00               963 	.dw #0x0015
   01E0 17 00               964 	.dw #0x0017
   01E2 19 00               965 	.dw #0x0019
   01E4 1B 00               966 	.dw #0x001B
   01E6 1D 00               967 	.dw #0x001D
   01E8 1F 00               968 	.dw #0x001F
   01EA 21 00               969 	.dw #0x0021
   01EC 23 00               970 	.dw #0x0023
   01EE 25 00               971 	.dw #0x0025
   01F0 27 00               972 	.dw #0x0027
   01F2 29 00               973 	.dw #0x0029
   01F4 2B 00               974 	.dw #0x002B
   01F6 2E 00               975 	.dw #0x002E
   01F8 30 00               976 	.dw #0x0030
   01FA 32 00               977 	.dw #0x0032
   01FC 35 00               978 	.dw #0x0035
   01FE 37 00               979 	.dw #0x0037
   0200 3A 00               980 	.dw #0x003A
   0202 3C 00               981 	.dw #0x003C
   0204 3F 00               982 	.dw #0x003F
   0206 42 00               983 	.dw #0x0042
   0208 44 00               984 	.dw #0x0044
   020A 47 00               985 	.dw #0x0047
   020C 4A 00               986 	.dw #0x004A
   020E 4C 00               987 	.dw #0x004C
   0210 4F 00               988 	.dw #0x004F
   0212 52 00               989 	.dw #0x0052
   0214 55 00               990 	.dw #0x0055
   0216 57 00               991 	.dw #0x0057
   0218 5A 00               992 	.dw #0x005A
   021A 5D 00               993 	.dw #0x005D
   021C 60 00               994 	.dw #0x0060
   021E 63 00               995 	.dw #0x0063
   0220 66 00               996 	.dw #0x0066
   0222 69 00               997 	.dw #0x0069
   0224 6C 00               998 	.dw #0x006C
   0226 6F 00               999 	.dw #0x006F
   0228 72 00              1000 	.dw #0x0072
   022A 75 00              1001 	.dw #0x0075
   022C                    1002 _tri_center:
   022C 08                 1003 	.db #0x08
   022D 0A                 1004 	.db #0x0A
   022E 12                 1005 	.db #0x12
   022F 10                 1006 	.db #0x10
   0230 00                 1007 	.db #0x00
   0231 02                 1008 	.db #0x02
   0232 08                 1009 	.db #0x08
   0233 0A                 1010 	.db #0x0A
   0234 0B                 1011 	.db #0x0B
   0235 09                 1012 	.db #0x09
   0236 03                 1013 	.db #0x03
   0237 01                 1014 	.db #0x01
   0238 11                 1015 	.db #0x11
   0239 13                 1016 	.db #0x13
   023A 0B                 1017 	.db #0x0B
   023B 09                 1018 	.db #0x09
   023C 0A                 1019 	.db #0x0A
   023D 12                 1020 	.db #0x12
   023E 10                 1021 	.db #0x10
   023F 00                 1022 	.db #0x00
   0240 02                 1023 	.db #0x02
   0241 08                 1024 	.db #0x08
   0242 0A                 1025 	.db #0x0A
   0243 12                 1026 	.db #0x12
   0244 13                 1027 	.db #0x13
   0245 0B                 1028 	.db #0x0B
   0246 09                 1029 	.db #0x09
   0247 03                 1030 	.db #0x03
   0248 01                 1031 	.db #0x01
   0249 11                 1032 	.db #0x11
   024A 13                 1033 	.db #0x13
   024B 0B                 1034 	.db #0x0B
   024C 12                 1035 	.db #0x12
   024D 10                 1036 	.db #0x10
   024E 00                 1037 	.db #0x00
   024F 02                 1038 	.db #0x02
   0250 08                 1039 	.db #0x08
   0251 0A                 1040 	.db #0x0A
   0252 12                 1041 	.db #0x12
   0253 10                 1042 	.db #0x10
   0254 11                 1043 	.db #0x11
   0255 13                 1044 	.db #0x13
   0256 0B                 1045 	.db #0x0B
   0257 09                 1046 	.db #0x09
   0258 03                 1047 	.db #0x03
   0259 01                 1048 	.db #0x01
   025A 11                 1049 	.db #0x11
   025B 13                 1050 	.db #0x13
   025C 10                 1051 	.db #0x10
   025D 00                 1052 	.db #0x00
   025E 02                 1053 	.db #0x02
   025F 08                 1054 	.db #0x08
   0260 0A                 1055 	.db #0x0A
   0261 12                 1056 	.db #0x12
   0262 10                 1057 	.db #0x10
   0263 00                 1058 	.db #0x00
   0264 01                 1059 	.db #0x01
   0265 11                 1060 	.db #0x11
   0266 13                 1061 	.db #0x13
   0267 0B                 1062 	.db #0x0B
   0268 09                 1063 	.db #0x09
   0269 03                 1064 	.db #0x03
   026A 01                 1065 	.db #0x01
   026B 11                 1066 	.db #0x11
   026C 00                 1067 	.db #0x00
   026D 02                 1068 	.db #0x02
   026E 08                 1069 	.db #0x08
   026F 0A                 1070 	.db #0x0A
   0270 12                 1071 	.db #0x12
   0271 10                 1072 	.db #0x10
   0272 00                 1073 	.db #0x00
   0273 02                 1074 	.db #0x02
   0274 03                 1075 	.db #0x03
   0275 01                 1076 	.db #0x01
   0276 11                 1077 	.db #0x11
   0277 13                 1078 	.db #0x13
   0278 0B                 1079 	.db #0x0B
   0279 09                 1080 	.db #0x09
   027A 03                 1081 	.db #0x03
   027B 01                 1082 	.db #0x01
   027C 02                 1083 	.db #0x02
   027D 08                 1084 	.db #0x08
   027E 0A                 1085 	.db #0x0A
   027F 12                 1086 	.db #0x12
   0280 10                 1087 	.db #0x10
   0281 00                 1088 	.db #0x00
   0282 02                 1089 	.db #0x02
   0283 08                 1090 	.db #0x08
   0284 09                 1091 	.db #0x09
   0285 03                 1092 	.db #0x03
   0286 01                 1093 	.db #0x01
   0287 11                 1094 	.db #0x11
   0288 13                 1095 	.db #0x13
   0289 0B                 1096 	.db #0x0B
   028A 09                 1097 	.db #0x09
   028B 03                 1098 	.db #0x03
   028C 01                 1099 	.db #0x01
   028D 0B                 1100 	.db #0x0B
   028E 09                 1101 	.db #0x09
   028F 11                 1102 	.db #0x11
   0290 13                 1103 	.db #0x13
   0291 03                 1104 	.db #0x03
   0292 01                 1105 	.db #0x01
   0293 0B                 1106 	.db #0x0B
   0294 0A                 1107 	.db #0x0A
   0295 00                 1108 	.db #0x00
   0296 02                 1109 	.db #0x02
   0297 12                 1110 	.db #0x12
   0298 10                 1111 	.db #0x10
   0299 08                 1112 	.db #0x08
   029A 0A                 1113 	.db #0x0A
   029B 00                 1114 	.db #0x00
   029C 03                 1115 	.db #0x03
   029D 01                 1116 	.db #0x01
   029E 0B                 1117 	.db #0x0B
   029F 09                 1118 	.db #0x09
   02A0 11                 1119 	.db #0x11
   02A1 13                 1120 	.db #0x13
   02A2 03                 1121 	.db #0x03
   02A3 01                 1122 	.db #0x01
   02A4 00                 1123 	.db #0x00
   02A5 02                 1124 	.db #0x02
   02A6 12                 1125 	.db #0x12
   02A7 10                 1126 	.db #0x10
   02A8 08                 1127 	.db #0x08
   02A9 0A                 1128 	.db #0x0A
   02AA 00                 1129 	.db #0x00
   02AB 02                 1130 	.db #0x02
   02AC 13                 1131 	.db #0x13
   02AD 03                 1132 	.db #0x03
   02AE 01                 1133 	.db #0x01
   02AF 0B                 1134 	.db #0x0B
   02B0 09                 1135 	.db #0x09
   02B1 11                 1136 	.db #0x11
   02B2 13                 1137 	.db #0x13
   02B3 03                 1138 	.db #0x03
   02B4 02                 1139 	.db #0x02
   02B5 12                 1140 	.db #0x12
   02B6 10                 1141 	.db #0x10
   02B7 08                 1142 	.db #0x08
   02B8 0A                 1143 	.db #0x0A
   02B9 00                 1144 	.db #0x00
   02BA 02                 1145 	.db #0x02
   02BB 12                 1146 	.db #0x12
   02BC 11                 1147 	.db #0x11
   02BD 13                 1148 	.db #0x13
   02BE 03                 1149 	.db #0x03
   02BF 01                 1150 	.db #0x01
   02C0 0B                 1151 	.db #0x0B
   02C1 09                 1152 	.db #0x09
   02C2 11                 1153 	.db #0x11
   02C3 13                 1154 	.db #0x13
   02C4 12                 1155 	.db #0x12
   02C5 10                 1156 	.db #0x10
   02C6 08                 1157 	.db #0x08
   02C7 0A                 1158 	.db #0x0A
   02C8 00                 1159 	.db #0x00
   02C9 02                 1160 	.db #0x02
   02CA 12                 1161 	.db #0x12
   02CB 10                 1162 	.db #0x10
   02CC 09                 1163 	.db #0x09
   02CD 11                 1164 	.db #0x11
   02CE 13                 1165 	.db #0x13
   02CF 03                 1166 	.db #0x03
   02D0 01                 1167 	.db #0x01
   02D1 0B                 1168 	.db #0x0B
   02D2 09                 1169 	.db #0x09
   02D3 11                 1170 	.db #0x11
   02D4 10                 1171 	.db #0x10
   02D5 08                 1172 	.db #0x08
   02D6 0A                 1173 	.db #0x0A
   02D7 00                 1174 	.db #0x00
   02D8 02                 1175 	.db #0x02
   02D9 12                 1176 	.db #0x12
   02DA 10                 1177 	.db #0x10
   02DB 08                 1178 	.db #0x08
   02DC 0B                 1179 	.db #0x0B
   02DD 09                 1180 	.db #0x09
   02DE 11                 1181 	.db #0x11
   02DF 13                 1182 	.db #0x13
   02E0 03                 1183 	.db #0x03
   02E1 01                 1184 	.db #0x01
   02E2 0B                 1185 	.db #0x0B
   02E3 09                 1186 	.db #0x09
   02E4 08                 1187 	.db #0x08
   02E5 0A                 1188 	.db #0x0A
   02E6 00                 1189 	.db #0x00
   02E7 02                 1190 	.db #0x02
   02E8 12                 1191 	.db #0x12
   02E9 10                 1192 	.db #0x10
   02EA 08                 1193 	.db #0x08
   02EB 0A                 1194 	.db #0x0A
   02EC                    1195 _tri_up:
   02EC 0A                 1196 	.db #0x0A
   02ED 12                 1197 	.db #0x12
   02EE 10                 1198 	.db #0x10
   02EF 00                 1199 	.db #0x00
   02F0 02                 1200 	.db #0x02
   02F1 08                 1201 	.db #0x08
   02F2 0A                 1202 	.db #0x0A
   02F3 12                 1203 	.db #0x12
   02F4 13                 1204 	.db #0x13
   02F5 0B                 1205 	.db #0x0B
   02F6 09                 1206 	.db #0x09
   02F7 03                 1207 	.db #0x03
   02F8 01                 1208 	.db #0x01
   02F9 11                 1209 	.db #0x11
   02FA 13                 1210 	.db #0x13
   02FB 0B                 1211 	.db #0x0B
   02FC 12                 1212 	.db #0x12
   02FD 10                 1213 	.db #0x10
   02FE 00                 1214 	.db #0x00
   02FF 02                 1215 	.db #0x02
   0300 08                 1216 	.db #0x08
   0301 0A                 1217 	.db #0x0A
   0302 12                 1218 	.db #0x12
   0303 10                 1219 	.db #0x10
   0304 11                 1220 	.db #0x11
   0305 13                 1221 	.db #0x13
   0306 0B                 1222 	.db #0x0B
   0307 09                 1223 	.db #0x09
   0308 03                 1224 	.db #0x03
   0309 01                 1225 	.db #0x01
   030A 11                 1226 	.db #0x11
   030B 13                 1227 	.db #0x13
   030C 10                 1228 	.db #0x10
   030D 00                 1229 	.db #0x00
   030E 02                 1230 	.db #0x02
   030F 08                 1231 	.db #0x08
   0310 0A                 1232 	.db #0x0A
   0311 12                 1233 	.db #0x12
   0312 10                 1234 	.db #0x10
   0313 00                 1235 	.db #0x00
   0314 01                 1236 	.db #0x01
   0315 11                 1237 	.db #0x11
   0316 13                 1238 	.db #0x13
   0317 0B                 1239 	.db #0x0B
   0318 09                 1240 	.db #0x09
   0319 03                 1241 	.db #0x03
   031A 01                 1242 	.db #0x01
   031B 11                 1243 	.db #0x11
   031C 00                 1244 	.db #0x00
   031D 02                 1245 	.db #0x02
   031E 08                 1246 	.db #0x08
   031F 0A                 1247 	.db #0x0A
   0320 12                 1248 	.db #0x12
   0321 10                 1249 	.db #0x10
   0322 00                 1250 	.db #0x00
   0323 02                 1251 	.db #0x02
   0324 03                 1252 	.db #0x03
   0325 01                 1253 	.db #0x01
   0326 11                 1254 	.db #0x11
   0327 13                 1255 	.db #0x13
   0328 0B                 1256 	.db #0x0B
   0329 09                 1257 	.db #0x09
   032A 03                 1258 	.db #0x03
   032B 01                 1259 	.db #0x01
   032C 02                 1260 	.db #0x02
   032D 08                 1261 	.db #0x08
   032E 0A                 1262 	.db #0x0A
   032F 12                 1263 	.db #0x12
   0330 10                 1264 	.db #0x10
   0331 00                 1265 	.db #0x00
   0332 02                 1266 	.db #0x02
   0333 08                 1267 	.db #0x08
   0334 09                 1268 	.db #0x09
   0335 03                 1269 	.db #0x03
   0336 01                 1270 	.db #0x01
   0337 11                 1271 	.db #0x11
   0338 13                 1272 	.db #0x13
   0339 0B                 1273 	.db #0x0B
   033A 09                 1274 	.db #0x09
   033B 03                 1275 	.db #0x03
   033C 08                 1276 	.db #0x08
   033D 0A                 1277 	.db #0x0A
   033E 12                 1278 	.db #0x12
   033F 10                 1279 	.db #0x10
   0340 00                 1280 	.db #0x00
   0341 02                 1281 	.db #0x02
   0342 08                 1282 	.db #0x08
   0343 0A                 1283 	.db #0x0A
   0344 0B                 1284 	.db #0x0B
   0345 09                 1285 	.db #0x09
   0346 03                 1286 	.db #0x03
   0347 01                 1287 	.db #0x01
   0348 11                 1288 	.db #0x11
   0349 13                 1289 	.db #0x13
   034A 0B                 1290 	.db #0x0B
   034B 09                 1291 	.db #0x09
   034C 0A                 1292 	.db #0x0A
   034D 12                 1293 	.db #0x12
   034E 10                 1294 	.db #0x10
   034F 00                 1295 	.db #0x00
   0350 02                 1296 	.db #0x02
   0351 08                 1297 	.db #0x08
   0352 0A                 1298 	.db #0x0A
   0353 12                 1299 	.db #0x12
   0354 13                 1300 	.db #0x13
   0355 0B                 1301 	.db #0x0B
   0356 09                 1302 	.db #0x09
   0357 03                 1303 	.db #0x03
   0358 01                 1304 	.db #0x01
   0359 11                 1305 	.db #0x11
   035A 13                 1306 	.db #0x13
   035B 0B                 1307 	.db #0x0B
   035C 12                 1308 	.db #0x12
   035D 10                 1309 	.db #0x10
   035E 00                 1310 	.db #0x00
   035F 02                 1311 	.db #0x02
   0360 08                 1312 	.db #0x08
   0361 0A                 1313 	.db #0x0A
   0362 12                 1314 	.db #0x12
   0363 10                 1315 	.db #0x10
   0364 11                 1316 	.db #0x11
   0365 13                 1317 	.db #0x13
   0366 0B                 1318 	.db #0x0B
   0367 09                 1319 	.db #0x09
   0368 03                 1320 	.db #0x03
   0369 01                 1321 	.db #0x01
   036A 11                 1322 	.db #0x11
   036B 13                 1323 	.db #0x13
   036C 10                 1324 	.db #0x10
   036D 00                 1325 	.db #0x00
   036E 02                 1326 	.db #0x02
   036F 08                 1327 	.db #0x08
   0370 0A                 1328 	.db #0x0A
   0371 12                 1329 	.db #0x12
   0372 10                 1330 	.db #0x10
   0373 00                 1331 	.db #0x00
   0374 01                 1332 	.db #0x01
   0375 11                 1333 	.db #0x11
   0376 13                 1334 	.db #0x13
   0377 0B                 1335 	.db #0x0B
   0378 09                 1336 	.db #0x09
   0379 03                 1337 	.db #0x03
   037A 01                 1338 	.db #0x01
   037B 11                 1339 	.db #0x11
   037C 00                 1340 	.db #0x00
   037D 02                 1341 	.db #0x02
   037E 08                 1342 	.db #0x08
   037F 0A                 1343 	.db #0x0A
   0380 12                 1344 	.db #0x12
   0381 10                 1345 	.db #0x10
   0382 00                 1346 	.db #0x00
   0383 02                 1347 	.db #0x02
   0384 03                 1348 	.db #0x03
   0385 01                 1349 	.db #0x01
   0386 11                 1350 	.db #0x11
   0387 13                 1351 	.db #0x13
   0388 0B                 1352 	.db #0x0B
   0389 09                 1353 	.db #0x09
   038A 03                 1354 	.db #0x03
   038B 01                 1355 	.db #0x01
   038C 02                 1356 	.db #0x02
   038D 08                 1357 	.db #0x08
   038E 0A                 1358 	.db #0x0A
   038F 12                 1359 	.db #0x12
   0390 10                 1360 	.db #0x10
   0391 00                 1361 	.db #0x00
   0392 02                 1362 	.db #0x02
   0393 08                 1363 	.db #0x08
   0394 09                 1364 	.db #0x09
   0395 03                 1365 	.db #0x03
   0396 01                 1366 	.db #0x01
   0397 11                 1367 	.db #0x11
   0398 13                 1368 	.db #0x13
   0399 0B                 1369 	.db #0x0B
   039A 09                 1370 	.db #0x09
   039B 03                 1371 	.db #0x03
   039C 08                 1372 	.db #0x08
   039D 0A                 1373 	.db #0x0A
   039E 12                 1374 	.db #0x12
   039F 10                 1375 	.db #0x10
   03A0 00                 1376 	.db #0x00
   03A1 02                 1377 	.db #0x02
   03A2 08                 1378 	.db #0x08
   03A3 0A                 1379 	.db #0x0A
   03A4 0B                 1380 	.db #0x0B
   03A5 09                 1381 	.db #0x09
   03A6 03                 1382 	.db #0x03
   03A7 01                 1383 	.db #0x01
   03A8 11                 1384 	.db #0x11
   03A9 13                 1385 	.db #0x13
   03AA 0B                 1386 	.db #0x0B
   03AB 09                 1387 	.db #0x09
   03AC                    1388 _tri_dia:
   03AC 05                 1389 	.db #0x05
   03AD 1B                 1390 	.db #0x1B
   03AE 0F                 1391 	.db #0x0F
   03AF 1D                 1392 	.db #0x1D
   03B0 15                 1393 	.db #0x15
   03B1 19                 1394 	.db #0x19
   03B2 05                 1395 	.db #0x05
   03B3 1B                 1396 	.db #0x1B
   03B4 0F                 1397 	.db #0x0F
   03B5 1D                 1398 	.db #0x1D
   03B6 15                 1399 	.db #0x15
   03B7 19                 1400 	.db #0x19
   03B8 05                 1401 	.db #0x05
   03B9 1B                 1402 	.db #0x1B
   03BA 0F                 1403 	.db #0x0F
   03BB 1D                 1404 	.db #0x1D
   03BC 1D                 1405 	.db #0x1D
   03BD 05                 1406 	.db #0x05
   03BE 19                 1407 	.db #0x19
   03BF 0F                 1408 	.db #0x0F
   03C0 1B                 1409 	.db #0x1B
   03C1 15                 1410 	.db #0x15
   03C2 1D                 1411 	.db #0x1D
   03C3 05                 1412 	.db #0x05
   03C4 19                 1413 	.db #0x19
   03C5 0F                 1414 	.db #0x0F
   03C6 1B                 1415 	.db #0x1B
   03C7 15                 1416 	.db #0x15
   03C8 1D                 1417 	.db #0x1D
   03C9 05                 1418 	.db #0x05
   03CA 19                 1419 	.db #0x19
   03CB 0F                 1420 	.db #0x0F
   03CC 0F                 1421 	.db #0x0F
   03CD 1D                 1422 	.db #0x1D
   03CE 15                 1423 	.db #0x15
   03CF 19                 1424 	.db #0x19
   03D0 05                 1425 	.db #0x05
   03D1 1B                 1426 	.db #0x1B
   03D2 0F                 1427 	.db #0x0F
   03D3 1D                 1428 	.db #0x1D
   03D4 15                 1429 	.db #0x15
   03D5 19                 1430 	.db #0x19
   03D6 05                 1431 	.db #0x05
   03D7 1B                 1432 	.db #0x1B
   03D8 0F                 1433 	.db #0x0F
   03D9 1D                 1434 	.db #0x1D
   03DA 15                 1435 	.db #0x15
   03DB 19                 1436 	.db #0x19
   03DC 19                 1437 	.db #0x19
   03DD 0F                 1438 	.db #0x0F
   03DE 1B                 1439 	.db #0x1B
   03DF 15                 1440 	.db #0x15
   03E0 1D                 1441 	.db #0x1D
   03E1 05                 1442 	.db #0x05
   03E2 19                 1443 	.db #0x19
   03E3 0F                 1444 	.db #0x0F
   03E4 1B                 1445 	.db #0x1B
   03E5 15                 1446 	.db #0x15
   03E6 1D                 1447 	.db #0x1D
   03E7 05                 1448 	.db #0x05
   03E8 19                 1449 	.db #0x19
   03E9 0F                 1450 	.db #0x0F
   03EA 1B                 1451 	.db #0x1B
   03EB 15                 1452 	.db #0x15
   03EC 15                 1453 	.db #0x15
   03ED 19                 1454 	.db #0x19
   03EE 05                 1455 	.db #0x05
   03EF 1B                 1456 	.db #0x1B
   03F0 0F                 1457 	.db #0x0F
   03F1 1D                 1458 	.db #0x1D
   03F2 15                 1459 	.db #0x15
   03F3 19                 1460 	.db #0x19
   03F4 05                 1461 	.db #0x05
   03F5 1B                 1462 	.db #0x1B
   03F6 0F                 1463 	.db #0x0F
   03F7 1D                 1464 	.db #0x1D
   03F8 15                 1465 	.db #0x15
   03F9 19                 1466 	.db #0x19
   03FA 05                 1467 	.db #0x05
   03FB 1B                 1468 	.db #0x1B
   03FC 1B                 1469 	.db #0x1B
   03FD 15                 1470 	.db #0x15
   03FE 1D                 1471 	.db #0x1D
   03FF 05                 1472 	.db #0x05
   0400 19                 1473 	.db #0x19
   0401 0F                 1474 	.db #0x0F
   0402 1B                 1475 	.db #0x1B
   0403 15                 1476 	.db #0x15
   0404 1D                 1477 	.db #0x1D
   0405 05                 1478 	.db #0x05
   0406 19                 1479 	.db #0x19
   0407 0F                 1480 	.db #0x0F
   0408 1B                 1481 	.db #0x1B
   0409 15                 1482 	.db #0x15
   040A 1D                 1483 	.db #0x1D
   040B 05                 1484 	.db #0x05
   040C 05                 1485 	.db #0x05
   040D 1B                 1486 	.db #0x1B
   040E 0F                 1487 	.db #0x0F
   040F 1D                 1488 	.db #0x1D
   0410 15                 1489 	.db #0x15
   0411 19                 1490 	.db #0x19
   0412 05                 1491 	.db #0x05
   0413 1B                 1492 	.db #0x1B
   0414 0F                 1493 	.db #0x0F
   0415 1D                 1494 	.db #0x1D
   0416 15                 1495 	.db #0x15
   0417 19                 1496 	.db #0x19
   0418 05                 1497 	.db #0x05
   0419 1B                 1498 	.db #0x1B
   041A 0F                 1499 	.db #0x0F
   041B 1D                 1500 	.db #0x1D
   041C 1D                 1501 	.db #0x1D
   041D 05                 1502 	.db #0x05
   041E 19                 1503 	.db #0x19
   041F 0F                 1504 	.db #0x0F
   0420 1B                 1505 	.db #0x1B
   0421 15                 1506 	.db #0x15
   0422 1D                 1507 	.db #0x1D
   0423 05                 1508 	.db #0x05
   0424 19                 1509 	.db #0x19
   0425 0F                 1510 	.db #0x0F
   0426 1B                 1511 	.db #0x1B
   0427 15                 1512 	.db #0x15
   0428 1D                 1513 	.db #0x1D
   0429 05                 1514 	.db #0x05
   042A 19                 1515 	.db #0x19
   042B 0F                 1516 	.db #0x0F
   042C 0F                 1517 	.db #0x0F
   042D 1D                 1518 	.db #0x1D
   042E 15                 1519 	.db #0x15
   042F 19                 1520 	.db #0x19
   0430 05                 1521 	.db #0x05
   0431 1B                 1522 	.db #0x1B
   0432 0F                 1523 	.db #0x0F
   0433 1D                 1524 	.db #0x1D
   0434 15                 1525 	.db #0x15
   0435 19                 1526 	.db #0x19
   0436 05                 1527 	.db #0x05
   0437 1B                 1528 	.db #0x1B
   0438 0F                 1529 	.db #0x0F
   0439 1D                 1530 	.db #0x1D
   043A 15                 1531 	.db #0x15
   043B 19                 1532 	.db #0x19
   043C 19                 1533 	.db #0x19
   043D 0F                 1534 	.db #0x0F
   043E 1B                 1535 	.db #0x1B
   043F 15                 1536 	.db #0x15
   0440 1D                 1537 	.db #0x1D
   0441 05                 1538 	.db #0x05
   0442 19                 1539 	.db #0x19
   0443 0F                 1540 	.db #0x0F
   0444 1B                 1541 	.db #0x1B
   0445 15                 1542 	.db #0x15
   0446 1D                 1543 	.db #0x1D
   0447 05                 1544 	.db #0x05
   0448 19                 1545 	.db #0x19
   0449 0F                 1546 	.db #0x0F
   044A 1B                 1547 	.db #0x1B
   044B 15                 1548 	.db #0x15
   044C 15                 1549 	.db #0x15
   044D 19                 1550 	.db #0x19
   044E 05                 1551 	.db #0x05
   044F 1B                 1552 	.db #0x1B
   0450 0F                 1553 	.db #0x0F
   0451 1D                 1554 	.db #0x1D
   0452 15                 1555 	.db #0x15
   0453 19                 1556 	.db #0x19
   0454 05                 1557 	.db #0x05
   0455 1B                 1558 	.db #0x1B
   0456 0F                 1559 	.db #0x0F
   0457 1D                 1560 	.db #0x1D
   0458 15                 1561 	.db #0x15
   0459 19                 1562 	.db #0x19
   045A 05                 1563 	.db #0x05
   045B 1B                 1564 	.db #0x1B
   045C 1B                 1565 	.db #0x1B
   045D 15                 1566 	.db #0x15
   045E 1D                 1567 	.db #0x1D
   045F 05                 1568 	.db #0x05
   0460 19                 1569 	.db #0x19
   0461 0F                 1570 	.db #0x0F
   0462 1B                 1571 	.db #0x1B
   0463 15                 1572 	.db #0x15
   0464 1D                 1573 	.db #0x1D
   0465 05                 1574 	.db #0x05
   0466 19                 1575 	.db #0x19
   0467 0F                 1576 	.db #0x0F
   0468 1B                 1577 	.db #0x1B
   0469 15                 1578 	.db #0x15
   046A 1D                 1579 	.db #0x1D
   046B 05                 1580 	.db #0x05
   046C                    1581 _tri_side1:
   046C 0A                 1582 	.db #0x0A
   046D 12                 1583 	.db #0x12
   046E 10                 1584 	.db #0x10
   046F 00                 1585 	.db #0x00
   0470 02                 1586 	.db #0x02
   0471 08                 1587 	.db #0x08
   0472 0A                 1588 	.db #0x0A
   0473 12                 1589 	.db #0x12
   0474 10                 1590 	.db #0x10
   0475 00                 1591 	.db #0x00
   0476 02                 1592 	.db #0x02
   0477 08                 1593 	.db #0x08
   0478 0A                 1594 	.db #0x0A
   0479 12                 1595 	.db #0x12
   047A 10                 1596 	.db #0x10
   047B 00                 1597 	.db #0x00
   047C 12                 1598 	.db #0x12
   047D 10                 1599 	.db #0x10
   047E 00                 1600 	.db #0x00
   047F 02                 1601 	.db #0x02
   0480 08                 1602 	.db #0x08
   0481 0A                 1603 	.db #0x0A
   0482 12                 1604 	.db #0x12
   0483 10                 1605 	.db #0x10
   0484 00                 1606 	.db #0x00
   0485 02                 1607 	.db #0x02
   0486 08                 1608 	.db #0x08
   0487 0A                 1609 	.db #0x0A
   0488 12                 1610 	.db #0x12
   0489 10                 1611 	.db #0x10
   048A 00                 1612 	.db #0x00
   048B 02                 1613 	.db #0x02
   048C 10                 1614 	.db #0x10
   048D 00                 1615 	.db #0x00
   048E 02                 1616 	.db #0x02
   048F 08                 1617 	.db #0x08
   0490 0A                 1618 	.db #0x0A
   0491 12                 1619 	.db #0x12
   0492 10                 1620 	.db #0x10
   0493 00                 1621 	.db #0x00
   0494 02                 1622 	.db #0x02
   0495 08                 1623 	.db #0x08
   0496 0A                 1624 	.db #0x0A
   0497 12                 1625 	.db #0x12
   0498 10                 1626 	.db #0x10
   0499 00                 1627 	.db #0x00
   049A 02                 1628 	.db #0x02
   049B 08                 1629 	.db #0x08
   049C 00                 1630 	.db #0x00
   049D 02                 1631 	.db #0x02
   049E 08                 1632 	.db #0x08
   049F 0A                 1633 	.db #0x0A
   04A0 12                 1634 	.db #0x12
   04A1 10                 1635 	.db #0x10
   04A2 00                 1636 	.db #0x00
   04A3 02                 1637 	.db #0x02
   04A4 08                 1638 	.db #0x08
   04A5 0A                 1639 	.db #0x0A
   04A6 12                 1640 	.db #0x12
   04A7 10                 1641 	.db #0x10
   04A8 00                 1642 	.db #0x00
   04A9 02                 1643 	.db #0x02
   04AA 08                 1644 	.db #0x08
   04AB 0A                 1645 	.db #0x0A
   04AC 02                 1646 	.db #0x02
   04AD 08                 1647 	.db #0x08
   04AE 0A                 1648 	.db #0x0A
   04AF 12                 1649 	.db #0x12
   04B0 10                 1650 	.db #0x10
   04B1 00                 1651 	.db #0x00
   04B2 02                 1652 	.db #0x02
   04B3 08                 1653 	.db #0x08
   04B4 0A                 1654 	.db #0x0A
   04B5 12                 1655 	.db #0x12
   04B6 10                 1656 	.db #0x10
   04B7 00                 1657 	.db #0x00
   04B8 02                 1658 	.db #0x02
   04B9 08                 1659 	.db #0x08
   04BA 0A                 1660 	.db #0x0A
   04BB 12                 1661 	.db #0x12
   04BC 08                 1662 	.db #0x08
   04BD 0A                 1663 	.db #0x0A
   04BE 12                 1664 	.db #0x12
   04BF 10                 1665 	.db #0x10
   04C0 00                 1666 	.db #0x00
   04C1 02                 1667 	.db #0x02
   04C2 08                 1668 	.db #0x08
   04C3 0A                 1669 	.db #0x0A
   04C4 12                 1670 	.db #0x12
   04C5 10                 1671 	.db #0x10
   04C6 00                 1672 	.db #0x00
   04C7 02                 1673 	.db #0x02
   04C8 08                 1674 	.db #0x08
   04C9 0A                 1675 	.db #0x0A
   04CA 12                 1676 	.db #0x12
   04CB 10                 1677 	.db #0x10
   04CC 0A                 1678 	.db #0x0A
   04CD 12                 1679 	.db #0x12
   04CE 10                 1680 	.db #0x10
   04CF 00                 1681 	.db #0x00
   04D0 02                 1682 	.db #0x02
   04D1 08                 1683 	.db #0x08
   04D2 0A                 1684 	.db #0x0A
   04D3 12                 1685 	.db #0x12
   04D4 10                 1686 	.db #0x10
   04D5 00                 1687 	.db #0x00
   04D6 02                 1688 	.db #0x02
   04D7 08                 1689 	.db #0x08
   04D8 0A                 1690 	.db #0x0A
   04D9 12                 1691 	.db #0x12
   04DA 10                 1692 	.db #0x10
   04DB 00                 1693 	.db #0x00
   04DC 12                 1694 	.db #0x12
   04DD 10                 1695 	.db #0x10
   04DE 00                 1696 	.db #0x00
   04DF 02                 1697 	.db #0x02
   04E0 08                 1698 	.db #0x08
   04E1 0A                 1699 	.db #0x0A
   04E2 12                 1700 	.db #0x12
   04E3 10                 1701 	.db #0x10
   04E4 00                 1702 	.db #0x00
   04E5 02                 1703 	.db #0x02
   04E6 08                 1704 	.db #0x08
   04E7 0A                 1705 	.db #0x0A
   04E8 12                 1706 	.db #0x12
   04E9 10                 1707 	.db #0x10
   04EA 00                 1708 	.db #0x00
   04EB 02                 1709 	.db #0x02
   04EC 10                 1710 	.db #0x10
   04ED 00                 1711 	.db #0x00
   04EE 02                 1712 	.db #0x02
   04EF 08                 1713 	.db #0x08
   04F0 0A                 1714 	.db #0x0A
   04F1 12                 1715 	.db #0x12
   04F2 10                 1716 	.db #0x10
   04F3 00                 1717 	.db #0x00
   04F4 02                 1718 	.db #0x02
   04F5 08                 1719 	.db #0x08
   04F6 0A                 1720 	.db #0x0A
   04F7 12                 1721 	.db #0x12
   04F8 10                 1722 	.db #0x10
   04F9 00                 1723 	.db #0x00
   04FA 02                 1724 	.db #0x02
   04FB 08                 1725 	.db #0x08
   04FC 00                 1726 	.db #0x00
   04FD 02                 1727 	.db #0x02
   04FE 08                 1728 	.db #0x08
   04FF 0A                 1729 	.db #0x0A
   0500 12                 1730 	.db #0x12
   0501 10                 1731 	.db #0x10
   0502 00                 1732 	.db #0x00
   0503 02                 1733 	.db #0x02
   0504 08                 1734 	.db #0x08
   0505 0A                 1735 	.db #0x0A
   0506 12                 1736 	.db #0x12
   0507 10                 1737 	.db #0x10
   0508 00                 1738 	.db #0x00
   0509 02                 1739 	.db #0x02
   050A 08                 1740 	.db #0x08
   050B 0A                 1741 	.db #0x0A
   050C 02                 1742 	.db #0x02
   050D 08                 1743 	.db #0x08
   050E 0A                 1744 	.db #0x0A
   050F 12                 1745 	.db #0x12
   0510 10                 1746 	.db #0x10
   0511 00                 1747 	.db #0x00
   0512 02                 1748 	.db #0x02
   0513 08                 1749 	.db #0x08
   0514 0A                 1750 	.db #0x0A
   0515 12                 1751 	.db #0x12
   0516 10                 1752 	.db #0x10
   0517 00                 1753 	.db #0x00
   0518 02                 1754 	.db #0x02
   0519 08                 1755 	.db #0x08
   051A 0A                 1756 	.db #0x0A
   051B 12                 1757 	.db #0x12
   051C 08                 1758 	.db #0x08
   051D 0A                 1759 	.db #0x0A
   051E 12                 1760 	.db #0x12
   051F 10                 1761 	.db #0x10
   0520 00                 1762 	.db #0x00
   0521 02                 1763 	.db #0x02
   0522 08                 1764 	.db #0x08
   0523 0A                 1765 	.db #0x0A
   0524 12                 1766 	.db #0x12
   0525 10                 1767 	.db #0x10
   0526 00                 1768 	.db #0x00
   0527 02                 1769 	.db #0x02
   0528 08                 1770 	.db #0x08
   0529 0A                 1771 	.db #0x0A
   052A 12                 1772 	.db #0x12
   052B 10                 1773 	.db #0x10
   052C                    1774 _tri_side2:
   052C 00                 1775 	.db #0x00
   052D 10                 1776 	.db #0x10
   052E 12                 1777 	.db #0x12
   052F 0A                 1778 	.db #0x0A
   0530 08                 1779 	.db #0x08
   0531 02                 1780 	.db #0x02
   0532 00                 1781 	.db #0x00
   0533 10                 1782 	.db #0x10
   0534 12                 1783 	.db #0x12
   0535 0A                 1784 	.db #0x0A
   0536 08                 1785 	.db #0x08
   0537 02                 1786 	.db #0x02
   0538 00                 1787 	.db #0x00
   0539 10                 1788 	.db #0x10
   053A 12                 1789 	.db #0x12
   053B 0A                 1790 	.db #0x0A
   053C 02                 1791 	.db #0x02
   053D 00                 1792 	.db #0x00
   053E 10                 1793 	.db #0x10
   053F 12                 1794 	.db #0x12
   0540 0A                 1795 	.db #0x0A
   0541 08                 1796 	.db #0x08
   0542 02                 1797 	.db #0x02
   0543 00                 1798 	.db #0x00
   0544 10                 1799 	.db #0x10
   0545 12                 1800 	.db #0x12
   0546 0A                 1801 	.db #0x0A
   0547 08                 1802 	.db #0x08
   0548 02                 1803 	.db #0x02
   0549 00                 1804 	.db #0x00
   054A 10                 1805 	.db #0x10
   054B 12                 1806 	.db #0x12
   054C 08                 1807 	.db #0x08
   054D 02                 1808 	.db #0x02
   054E 00                 1809 	.db #0x00
   054F 10                 1810 	.db #0x10
   0550 12                 1811 	.db #0x12
   0551 0A                 1812 	.db #0x0A
   0552 08                 1813 	.db #0x08
   0553 02                 1814 	.db #0x02
   0554 00                 1815 	.db #0x00
   0555 10                 1816 	.db #0x10
   0556 12                 1817 	.db #0x12
   0557 0A                 1818 	.db #0x0A
   0558 08                 1819 	.db #0x08
   0559 02                 1820 	.db #0x02
   055A 00                 1821 	.db #0x00
   055B 10                 1822 	.db #0x10
   055C 0A                 1823 	.db #0x0A
   055D 08                 1824 	.db #0x08
   055E 02                 1825 	.db #0x02
   055F 00                 1826 	.db #0x00
   0560 10                 1827 	.db #0x10
   0561 12                 1828 	.db #0x12
   0562 0A                 1829 	.db #0x0A
   0563 08                 1830 	.db #0x08
   0564 02                 1831 	.db #0x02
   0565 00                 1832 	.db #0x00
   0566 10                 1833 	.db #0x10
   0567 12                 1834 	.db #0x12
   0568 0A                 1835 	.db #0x0A
   0569 08                 1836 	.db #0x08
   056A 02                 1837 	.db #0x02
   056B 00                 1838 	.db #0x00
   056C 12                 1839 	.db #0x12
   056D 0A                 1840 	.db #0x0A
   056E 08                 1841 	.db #0x08
   056F 02                 1842 	.db #0x02
   0570 00                 1843 	.db #0x00
   0571 10                 1844 	.db #0x10
   0572 12                 1845 	.db #0x12
   0573 0A                 1846 	.db #0x0A
   0574 08                 1847 	.db #0x08
   0575 02                 1848 	.db #0x02
   0576 00                 1849 	.db #0x00
   0577 10                 1850 	.db #0x10
   0578 12                 1851 	.db #0x12
   0579 0A                 1852 	.db #0x0A
   057A 08                 1853 	.db #0x08
   057B 02                 1854 	.db #0x02
   057C 10                 1855 	.db #0x10
   057D 12                 1856 	.db #0x12
   057E 0A                 1857 	.db #0x0A
   057F 08                 1858 	.db #0x08
   0580 02                 1859 	.db #0x02
   0581 00                 1860 	.db #0x00
   0582 10                 1861 	.db #0x10
   0583 12                 1862 	.db #0x12
   0584 0A                 1863 	.db #0x0A
   0585 08                 1864 	.db #0x08
   0586 02                 1865 	.db #0x02
   0587 00                 1866 	.db #0x00
   0588 10                 1867 	.db #0x10
   0589 12                 1868 	.db #0x12
   058A 0A                 1869 	.db #0x0A
   058B 08                 1870 	.db #0x08
   058C 00                 1871 	.db #0x00
   058D 10                 1872 	.db #0x10
   058E 12                 1873 	.db #0x12
   058F 0A                 1874 	.db #0x0A
   0590 08                 1875 	.db #0x08
   0591 02                 1876 	.db #0x02
   0592 00                 1877 	.db #0x00
   0593 10                 1878 	.db #0x10
   0594 12                 1879 	.db #0x12
   0595 0A                 1880 	.db #0x0A
   0596 08                 1881 	.db #0x08
   0597 02                 1882 	.db #0x02
   0598 00                 1883 	.db #0x00
   0599 10                 1884 	.db #0x10
   059A 12                 1885 	.db #0x12
   059B 0A                 1886 	.db #0x0A
   059C 02                 1887 	.db #0x02
   059D 00                 1888 	.db #0x00
   059E 10                 1889 	.db #0x10
   059F 12                 1890 	.db #0x12
   05A0 0A                 1891 	.db #0x0A
   05A1 08                 1892 	.db #0x08
   05A2 02                 1893 	.db #0x02
   05A3 00                 1894 	.db #0x00
   05A4 10                 1895 	.db #0x10
   05A5 12                 1896 	.db #0x12
   05A6 0A                 1897 	.db #0x0A
   05A7 08                 1898 	.db #0x08
   05A8 02                 1899 	.db #0x02
   05A9 00                 1900 	.db #0x00
   05AA 10                 1901 	.db #0x10
   05AB 12                 1902 	.db #0x12
   05AC 08                 1903 	.db #0x08
   05AD 02                 1904 	.db #0x02
   05AE 00                 1905 	.db #0x00
   05AF 10                 1906 	.db #0x10
   05B0 12                 1907 	.db #0x12
   05B1 0A                 1908 	.db #0x0A
   05B2 08                 1909 	.db #0x08
   05B3 02                 1910 	.db #0x02
   05B4 00                 1911 	.db #0x00
   05B5 10                 1912 	.db #0x10
   05B6 12                 1913 	.db #0x12
   05B7 0A                 1914 	.db #0x0A
   05B8 08                 1915 	.db #0x08
   05B9 02                 1916 	.db #0x02
   05BA 00                 1917 	.db #0x00
   05BB 10                 1918 	.db #0x10
   05BC 0A                 1919 	.db #0x0A
   05BD 08                 1920 	.db #0x08
   05BE 02                 1921 	.db #0x02
   05BF 00                 1922 	.db #0x00
   05C0 10                 1923 	.db #0x10
   05C1 12                 1924 	.db #0x12
   05C2 0A                 1925 	.db #0x0A
   05C3 08                 1926 	.db #0x08
   05C4 02                 1927 	.db #0x02
   05C5 00                 1928 	.db #0x00
   05C6 10                 1929 	.db #0x10
   05C7 12                 1930 	.db #0x12
   05C8 0A                 1931 	.db #0x0A
   05C9 08                 1932 	.db #0x08
   05CA 02                 1933 	.db #0x02
   05CB 00                 1934 	.db #0x00
   05CC 12                 1935 	.db #0x12
   05CD 0A                 1936 	.db #0x0A
   05CE 08                 1937 	.db #0x08
   05CF 02                 1938 	.db #0x02
   05D0 00                 1939 	.db #0x00
   05D1 10                 1940 	.db #0x10
   05D2 12                 1941 	.db #0x12
   05D3 0A                 1942 	.db #0x0A
   05D4 08                 1943 	.db #0x08
   05D5 02                 1944 	.db #0x02
   05D6 00                 1945 	.db #0x00
   05D7 10                 1946 	.db #0x10
   05D8 12                 1947 	.db #0x12
   05D9 0A                 1948 	.db #0x0A
   05DA 08                 1949 	.db #0x08
   05DB 02                 1950 	.db #0x02
   05DC 10                 1951 	.db #0x10
   05DD 12                 1952 	.db #0x12
   05DE 0A                 1953 	.db #0x0A
   05DF 08                 1954 	.db #0x08
   05E0 02                 1955 	.db #0x02
   05E1 00                 1956 	.db #0x00
   05E2 10                 1957 	.db #0x10
   05E3 12                 1958 	.db #0x12
   05E4 0A                 1959 	.db #0x0A
   05E5 08                 1960 	.db #0x08
   05E6 02                 1961 	.db #0x02
   05E7 00                 1962 	.db #0x00
   05E8 10                 1963 	.db #0x10
   05E9 12                 1964 	.db #0x12
   05EA 0A                 1965 	.db #0x0A
   05EB 08                 1966 	.db #0x08
                           1967 ;demo.c:139: void my_isr(void) interrupt
                           1968 ;	---------------------------------
                           1969 ; Function my_isr
                           1970 ; ---------------------------------
   05EC                    1971 _my_isr_start::
   05EC                    1972 _my_isr:
   05EC F5                 1973 	push	af
   05ED C5                 1974 	push	bc
   05EE D5                 1975 	push	de
   05EF E5                 1976 	push	hl
   05F0 FD E5              1977 	push	iy
                           1978 ;demo.c:141: DI;
   05F2 F3                 1979 		di 
                           1980 ;demo.c:143: READ_VDP_STATUS;
   05F3 DB 99              1981 		in a,(#0x99) 
                           1982 ;demo.c:145: PLY_Play();
   05F5 CDr00s00           1983 	call	_PLY_Play
                           1984 ;demo.c:146: PLY_SendRegisters();
   05F8 CDr00s00           1985 	call	_PLY_SendRegisters
                           1986 ;demo.c:148: vbicount+=1;
   05FB FD 21r00s41        1987 	ld	iy,#_vbicount
   05FF FD 34 00           1988 	inc	0 (iy)
   0602 20 07              1989 	jr	NZ,00103$
   0604 FD 21r00s41        1990 	ld	iy,#_vbicount
   0608 FD 34 01           1991 	inc	1 (iy)
   060B                    1992 00103$:
                           1993 ;demo.c:149: tick++;
   060B FD 21r02s41        1994 	ld	iy,#_tick
   060F FD 34 00           1995 	inc	0 (iy)
   0612 20 07              1996 	jr	NZ,00104$
   0614 FD 21r02s41        1997 	ld	iy,#_tick
   0618 FD 34 01           1998 	inc	1 (iy)
   061B                    1999 00104$:
                           2000 ;demo.c:151: EI;
   061B FB                 2001 		ei 
   061C FD E1              2002 	pop	iy
   061E E1                 2003 	pop	hl
   061F D1                 2004 	pop	de
   0620 C1                 2005 	pop	bc
   0621 F1                 2006 	pop	af
   0622 ED 4D              2007 	reti
   0624                    2008 _my_isr_end::
                           2009 ;demo.c:154: void color_isr(void) interrupt
                           2010 ;	---------------------------------
                           2011 ; Function color_isr
                           2012 ; ---------------------------------
   0624                    2013 _color_isr_start::
   0624                    2014 _color_isr:
   0624 F5                 2015 	push	af
   0625 C5                 2016 	push	bc
   0626 D5                 2017 	push	de
   0627 E5                 2018 	push	hl
   0628 FD E5              2019 	push	iy
                           2020 ;demo.c:156: DI;
   062A F3                 2021 		di 
                           2022 ;demo.c:158: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              2023 	ld	a,#0x01
   062D F5                 2024 	push	af
   062E 33                 2025 	inc	sp
   062F CDr00s00           2026 	call	_vdp2_status
   0632 33                 2027 	inc	sp
   0633 4D                 2028 	ld	c,l
   0634 21 00 00           2029 	ld	hl,#0x0000
   0637 E5                 2030 	push	hl
   0638 79                 2031 	ld	a,c
   0639 F5                 2032 	push	af
   063A 33                 2033 	inc	sp
   063B CDr00s00           2034 	call	_isNthBitSet
   063E F1                 2035 	pop	af
   063F 33                 2036 	inc	sp
   0640 44                 2037 	ld	b,h
   0641 4D                 2038 	ld	c,l
   0642 79                 2039 	ld	a,c
   0643 B0                 2040 	or	a,b
   0644 28 19              2041 	jr	Z,00102$
                           2042 ;demo.c:159: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r00s41           2043 	ld	hl,#_vbicount + 0
   0649 4E                 2044 	ld	c,(hl)
   064A 06 00              2045 	ld	b,#0x00
   064C 21r00s00           2046 	ld	hl,#_sintab
   064F 09                 2047 	add	hl,bc
   0650 7E                 2048 	ld	a,(hl)
   0651 F5                 2049 	push	af
   0652 33                 2050 	inc	sp
   0653 3E 17              2051 	ld	a,#0x17
   0655 F5                 2052 	push	af
   0656 33                 2053 	inc	sp
   0657 CDr00s00           2054 	call	_vdp_register
   065A F1                 2055 	pop	af
                           2056 ;demo.c:160: READ_VDP_STATUS;
   065B DB 99              2057 		in a,(#0x99) 
   065D 18 18              2058 	jr	00103$
   065F                    2059 00102$:
                           2060 ;demo.c:163: READ_VDP_STATUS;
   065F DB 99              2061 		in a,(#0x99) 
                           2062 ;demo.c:164: vbicount++;
   0661 FD 21r00s41        2063 	ld	iy,#_vbicount
   0665 FD 34 00           2064 	inc	0 (iy)
   0668 20 07              2065 	jr	NZ,00107$
   066A FD 21r00s41        2066 	ld	iy,#_vbicount
   066E FD 34 01           2067 	inc	1 (iy)
   0671                    2068 00107$:
                           2069 ;demo.c:167: PLY_Play();
   0671 CDr00s00           2070 	call	_PLY_Play
                           2071 ;demo.c:168: PLY_SendRegisters();
   0674 CDr00s00           2072 	call	_PLY_SendRegisters
   0677                    2073 00103$:
                           2074 ;demo.c:171: EI;
   0677 FB                 2075 		ei 
   0678 FD E1              2076 	pop	iy
   067A E1                 2077 	pop	hl
   067B D1                 2078 	pop	de
   067C C1                 2079 	pop	bc
   067D F1                 2080 	pop	af
   067E ED 4D              2081 	reti
   0680                    2082 _color_isr_end::
                           2083 ;demo.c:178: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2084 ;	---------------------------------
                           2085 ; Function ge5_load
                           2086 ; ---------------------------------
   0680                    2087 _ge5_load_start::
   0680                    2088 _ge5_load:
   0680 DD E5              2089 	push	ix
   0682 DD 21 00 00        2090 	ld	ix,#0
   0686 DD 39              2091 	add	ix,sp
   0688 21 D2 FF           2092 	ld	hl,#-46
   068B 39                 2093 	add	hl,sp
   068C F9                 2094 	ld	sp,hl
                           2095 ;demo.c:182: if(debugprint == 1) {
   068D DD 7E 09           2096 	ld	a,9 (ix)
   0690 D6 01              2097 	sub	a,#0x01
   0692 20 06              2098 	jr	NZ,00125$
   0694 DD 7E 0A           2099 	ld	a,10 (ix)
   0697 B7                 2100 	or	a,a
   0698 28 02              2101 	jr	Z,00126$
   069A                    2102 00125$:
   069A 18 1B              2103 	jr	00102$
   069C                    2104 00126$:
                           2105 ;demo.c:183: puts("loading ge5file: ");
   069C 21r7Bs07           2106 	ld	hl,#__str_0
   069F E5                 2107 	push	hl
   06A0 CDr00s00           2108 	call	_puts
   06A3 F1                 2109 	pop	af
                           2110 ;demo.c:184: puts(file_name);
   06A4 DD 6E 04           2111 	ld	l,4 (ix)
   06A7 DD 66 05           2112 	ld	h,5 (ix)
   06AA E5                 2113 	push	hl
   06AB CDr00s00           2114 	call	_puts
   06AE F1                 2115 	pop	af
                           2116 ;demo.c:185: puts("\r\n");
   06AF 21r8Ds07           2117 	ld	hl,#__str_1
   06B2 E5                 2118 	push	hl
   06B3 CDr00s00           2119 	call	_puts
   06B6 F1                 2120 	pop	af
   06B7                    2121 00102$:
                           2122 ;demo.c:188: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2123 	ld	hl,#0x0000
   06BA 39                 2124 	add	hl,sp
   06BB 4D                 2125 	ld	c,l
   06BC 44                 2126 	ld	b,h
   06BD 21 2E 00           2127 	ld	hl,#0x002E
   06C0 E5                 2128 	push	hl
   06C1 3E 00              2129 	ld	a,#0x00
   06C3 F5                 2130 	push	af
   06C4 33                 2131 	inc	sp
   06C5 C5                 2132 	push	bc
   06C6 CDr00s00           2133 	call	_memset
   06C9 F1                 2134 	pop	af
   06CA F1                 2135 	pop	af
   06CB 33                 2136 	inc	sp
                           2137 ;demo.c:190: f.record_size = 128;
   06CC 21 00 00           2138 	ld	hl,#0x0000
   06CF 39                 2139 	add	hl,sp
   06D0 4D                 2140 	ld	c,l
   06D1 44                 2141 	ld	b,h
   06D2 21 0F 00           2142 	ld	hl,#0x000F
   06D5 09                 2143 	add	hl,bc
   06D6 EB                 2144 	ex	de,hl
   06D7 3E 80              2145 	ld	a,#0x80
   06D9 12                 2146 	ld	(de),a
                           2147 ;demo.c:191: f.drive = 0;
   06DA 3E 00              2148 	ld	a,#0x00
   06DC 02                 2149 	ld	(bc),a
                           2150 ;demo.c:193: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2151 	ld	e,4 (ix)
   06E0 DD 56 05           2152 	ld	d,5 (ix)
   06E3 03                 2153 	inc	bc
   06E4 21 0B 00           2154 	ld	hl,#0x000B
   06E7 E5                 2155 	push	hl
   06E8 D5                 2156 	push	de
   06E9 C5                 2157 	push	bc
   06EA CDr00s00           2158 	call	_memcpy
   06ED F1                 2159 	pop	af
   06EE F1                 2160 	pop	af
   06EF F1                 2161 	pop	af
                           2162 ;demo.c:195: if (open(&f) != 0) return 0;
   06F0 21 00 00           2163 	ld	hl,#0x0000
   06F3 39                 2164 	add	hl,sp
   06F4 E5                 2165 	push	hl
   06F5 CDr00s00           2166 	call	_open
   06F8 F1                 2167 	pop	af
   06F9 AF                 2168 	xor	a,a
   06FA B5                 2169 	or	a,l
   06FB 28 05              2170 	jr	Z,00104$
   06FD 2E 00              2171 	ld	l,#0x00
   06FF C3r76s07           2172 	jp	00116$
   0702                    2173 00104$:
                           2174 ;demo.c:196: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2175 	ld	l,7 (ix)
   0705 DD 66 08           2176 	ld	h,8 (ix)
   0708 E5                 2177 	push	hl
   0709 DD 7E 06           2178 	ld	a,6 (ix)
   070C F5                 2179 	push	af
   070D 33                 2180 	inc	sp
   070E CDr00s00           2181 	call	_vdp_set_write_address
   0711 F1                 2182 	pop	af
   0712 33                 2183 	inc	sp
                           2184 ;demo.c:198: for (i = 0; i < 213; i++) {
   0713 0E 00              2185 	ld	c,#0x00
   0715                    2186 00112$:
   0715 79                 2187 	ld	a,c
   0716 D6 D5              2188 	sub	a,#0xD5
   0718 D2r6Bs07           2189 	jp	NC,00115$
                           2190 ;demo.c:199: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2191 	push	bc
   071C 21rE0s3F           2192 	ld	hl,#_scratch
   071F E5                 2193 	push	hl
   0720 CDr00s00           2194 	call	_block_set_data_ptr
   0723 F1                 2195 	pop	af
   0724 7D                 2196 	ld	a,l
   0725 C1                 2197 	pop	bc
   0726 47                 2198 	ld	b,a
   0727 B7                 2199 	or	a,a
   0728 28 05              2200 	jr	Z,00106$
   072A 2E 00              2201 	ld	l,#0x00
   072C C3r76s07           2202 	jp	00116$
   072F                    2203 00106$:
                           2204 ;demo.c:200: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2205 	ld	hl,#0x0000
   0732 39                 2206 	add	hl,sp
   0733 C5                 2207 	push	bc
   0734 E5                 2208 	push	hl
   0735 CDr00s00           2209 	call	_block_read
   0738 F1                 2210 	pop	af
   0739 7D                 2211 	ld	a,l
   073A C1                 2212 	pop	bc
   073B 47                 2213 	ld	b,a
   073C B7                 2214 	or	a,a
   073D 28 04              2215 	jr	Z,00108$
   073F 2E 00              2216 	ld	l,#0x00
   0741 18 33              2217 	jr	00116$
   0743                    2218 00108$:
                           2219 ;demo.c:202: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2220 	xor	a,a
   0744 B1                 2221 	or	a,c
   0745 20 11              2222 	jr	NZ,00110$
   0747 11rE7s3F           2223 	ld	de,#_scratch + 7
   074A C5                 2224 	push	bc
   074B 3E 79              2225 	ld	a,#0x79
   074D F5                 2226 	push	af
   074E 33                 2227 	inc	sp
   074F D5                 2228 	push	de
   0750 CDr00s00           2229 	call	_vdp_load_screen
   0753 F1                 2230 	pop	af
   0754 33                 2231 	inc	sp
   0755 C1                 2232 	pop	bc
   0756 18 0F              2233 	jr	00114$
   0758                    2234 00110$:
                           2235 ;demo.c:203: else vdp_load_screen(scratch, 128);
   0758 C5                 2236 	push	bc
   0759 3E 80              2237 	ld	a,#0x80
   075B F5                 2238 	push	af
   075C 33                 2239 	inc	sp
   075D 21rE0s3F           2240 	ld	hl,#_scratch
   0760 E5                 2241 	push	hl
   0761 CDr00s00           2242 	call	_vdp_load_screen
   0764 F1                 2243 	pop	af
   0765 33                 2244 	inc	sp
   0766 C1                 2245 	pop	bc
   0767                    2246 00114$:
                           2247 ;demo.c:198: for (i = 0; i < 213; i++) {
   0767 0C                 2248 	inc	c
   0768 C3r15s07           2249 	jp	00112$
   076B                    2250 00115$:
                           2251 ;demo.c:206: close(&f);
   076B 21 00 00           2252 	ld	hl,#0x0000
   076E 39                 2253 	add	hl,sp
   076F E5                 2254 	push	hl
   0770 CDr00s00           2255 	call	_close
   0773 F1                 2256 	pop	af
                           2257 ;demo.c:208: return 1;
   0774 2E 01              2258 	ld	l,#0x01
   0776                    2259 00116$:
   0776 DD F9              2260 	ld	sp,ix
   0778 DD E1              2261 	pop	ix
   077A C9                 2262 	ret
   077B                    2263 _ge5_load_end::
   077B                    2264 __str_0:
   077B 6C 6F 61 64 69 6E  2265 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2266 	.db 0x00
   078D                    2267 __str_1:
   078D 0D                 2268 	.db 0x0D
   078E 0A                 2269 	.db 0x0A
   078F 00                 2270 	.db 0x00
                           2271 ;demo.c:211: void scratch_clear() {
                           2272 ;	---------------------------------
                           2273 ; Function scratch_clear
                           2274 ; ---------------------------------
   0790                    2275 _scratch_clear_start::
   0790                    2276 _scratch_clear:
                           2277 ;demo.c:212: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2278 	ld	hl,#0x0080
   0793 E5                 2279 	push	hl
   0794 3E 00              2280 	ld	a,#0x00
   0796 F5                 2281 	push	af
   0797 33                 2282 	inc	sp
   0798 21rE0s3F           2283 	ld	hl,#_scratch
   079B E5                 2284 	push	hl
   079C CDr00s00           2285 	call	_memset
   079F F1                 2286 	pop	af
   07A0 F1                 2287 	pop	af
   07A1 33                 2288 	inc	sp
   07A2 C9                 2289 	ret
   07A3                    2290 _scratch_clear_end::
                           2291 ;demo.c:215: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2292 ;	---------------------------------
                           2293 ; Function pal_load
                           2294 ; ---------------------------------
   07A3                    2295 _pal_load_start::
   07A3                    2296 _pal_load:
   07A3 DD E5              2297 	push	ix
   07A5 DD 21 00 00        2298 	ld	ix,#0
   07A9 DD 39              2299 	add	ix,sp
   07AB 21 D2 FF           2300 	ld	hl,#-46
   07AE 39                 2301 	add	hl,sp
   07AF F9                 2302 	ld	sp,hl
                           2303 ;demo.c:218: if(debugprint == 1) {
   07B0 DD 7E 07           2304 	ld	a,7 (ix)
   07B3 D6 01              2305 	sub	a,#0x01
   07B5 20 06              2306 	jr	NZ,00115$
   07B7 DD 7E 08           2307 	ld	a,8 (ix)
   07BA B7                 2308 	or	a,a
   07BB 28 02              2309 	jr	Z,00116$
   07BD                    2310 00115$:
   07BD 18 1B              2311 	jr	00102$
   07BF                    2312 00116$:
                           2313 ;demo.c:219: puts("loading palfile: ");
   07BF 21r6Ds08           2314 	ld	hl,#__str_2
   07C2 E5                 2315 	push	hl
   07C3 CDr00s00           2316 	call	_puts
   07C6 F1                 2317 	pop	af
                           2318 ;demo.c:220: puts(file_name);
   07C7 DD 6E 04           2319 	ld	l,4 (ix)
   07CA DD 66 05           2320 	ld	h,5 (ix)
   07CD E5                 2321 	push	hl
   07CE CDr00s00           2322 	call	_puts
   07D1 F1                 2323 	pop	af
                           2324 ;demo.c:221: puts("\r\n");
   07D2 21r7Fs08           2325 	ld	hl,#__str_3
   07D5 E5                 2326 	push	hl
   07D6 CDr00s00           2327 	call	_puts
   07D9 F1                 2328 	pop	af
   07DA                    2329 00102$:
                           2330 ;demo.c:224: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2331 	ld	hl,#0x0000
   07DD 39                 2332 	add	hl,sp
   07DE 4D                 2333 	ld	c,l
   07DF 44                 2334 	ld	b,h
   07E0 21 2E 00           2335 	ld	hl,#0x002E
   07E3 E5                 2336 	push	hl
   07E4 3E 00              2337 	ld	a,#0x00
   07E6 F5                 2338 	push	af
   07E7 33                 2339 	inc	sp
   07E8 C5                 2340 	push	bc
   07E9 CDr00s00           2341 	call	_memset
   07EC F1                 2342 	pop	af
   07ED F1                 2343 	pop	af
   07EE 33                 2344 	inc	sp
                           2345 ;demo.c:225: scratch_clear();
   07EF CDr90s07           2346 	call	_scratch_clear
                           2347 ;demo.c:227: f.record_size = ss;
   07F2 21 00 00           2348 	ld	hl,#0x0000
   07F5 39                 2349 	add	hl,sp
   07F6 4D                 2350 	ld	c,l
   07F7 44                 2351 	ld	b,h
   07F8 21 0F 00           2352 	ld	hl,#0x000F
   07FB 09                 2353 	add	hl,bc
   07FC EB                 2354 	ex	de,hl
   07FD DD 7E 06           2355 	ld	a,6 (ix)
   0800 12                 2356 	ld	(de),a
                           2357 ;demo.c:228: f.drive = 0;
   0801 3E 00              2358 	ld	a,#0x00
   0803 02                 2359 	ld	(bc),a
                           2360 ;demo.c:230: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2361 	ld	e,4 (ix)
   0807 DD 56 05           2362 	ld	d,5 (ix)
   080A 03                 2363 	inc	bc
   080B 21 0B 00           2364 	ld	hl,#0x000B
   080E E5                 2365 	push	hl
   080F D5                 2366 	push	de
   0810 C5                 2367 	push	bc
   0811 CDr00s00           2368 	call	_memcpy
   0814 F1                 2369 	pop	af
   0815 F1                 2370 	pop	af
   0816 F1                 2371 	pop	af
                           2372 ;demo.c:232: if (open(&f) != 0) return 0;
   0817 21 00 00           2373 	ld	hl,#0x0000
   081A 39                 2374 	add	hl,sp
   081B E5                 2375 	push	hl
   081C CDr00s00           2376 	call	_open
   081F F1                 2377 	pop	af
   0820 AF                 2378 	xor	a,a
   0821 B5                 2379 	or	a,l
   0822 28 04              2380 	jr	Z,00104$
   0824 2E 00              2381 	ld	l,#0x00
   0826 18 40              2382 	jr	00109$
   0828                    2383 00104$:
                           2384 ;demo.c:233: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21rE0s3F           2385 	ld	hl,#_scratch
   082B E5                 2386 	push	hl
   082C CDr00s00           2387 	call	_block_set_data_ptr
   082F F1                 2388 	pop	af
   0830 AF                 2389 	xor	a,a
   0831 B5                 2390 	or	a,l
   0832 28 04              2391 	jr	Z,00106$
   0834 2E 00              2392 	ld	l,#0x00
   0836 18 30              2393 	jr	00109$
   0838                    2394 00106$:
                           2395 ;demo.c:234: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2396 	ld	hl,#0x0000
   083B 39                 2397 	add	hl,sp
   083C E5                 2398 	push	hl
   083D CDr00s00           2399 	call	_block_read
   0840 F1                 2400 	pop	af
   0841 AF                 2401 	xor	a,a
   0842 B5                 2402 	or	a,l
   0843 28 04              2403 	jr	Z,00108$
   0845 2E 00              2404 	ld	l,#0x00
   0847 18 1F              2405 	jr	00109$
   0849                    2406 00108$:
                           2407 ;demo.c:236: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2408 	ld	c,6 (ix)
   084C 06 00              2409 	ld	b,#0x00
   084E 11rE7s3F           2410 	ld	de,#_scratch + 7
   0851 C5                 2411 	push	bc
   0852 D5                 2412 	push	de
   0853 21r60s40           2413 	ld	hl,#_cur_palette
   0856 E5                 2414 	push	hl
   0857 CDr00s00           2415 	call	_memcpy
   085A F1                 2416 	pop	af
   085B F1                 2417 	pop	af
   085C F1                 2418 	pop	af
                           2419 ;demo.c:238: close(&f);
   085D 21 00 00           2420 	ld	hl,#0x0000
   0860 39                 2421 	add	hl,sp
   0861 E5                 2422 	push	hl
   0862 CDr00s00           2423 	call	_close
   0865 F1                 2424 	pop	af
                           2425 ;demo.c:239: return 1;
   0866 2E 01              2426 	ld	l,#0x01
   0868                    2427 00109$:
   0868 DD F9              2428 	ld	sp,ix
   086A DD E1              2429 	pop	ix
   086C C9                 2430 	ret
   086D                    2431 _pal_load_end::
   086D                    2432 __str_2:
   086D 6C 6F 61 64 69 6E  2433 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2434 	.db 0x00
   087F                    2435 __str_3:
   087F 0D                 2436 	.db 0x0D
   0880 0A                 2437 	.db 0x0A
   0881 00                 2438 	.db 0x00
                           2439 ;demo.c:243: void pause() {
                           2440 ;	---------------------------------
                           2441 ; Function pause
                           2442 ; ---------------------------------
   0882                    2443 _pause_start::
   0882                    2444 _pause:
                           2445 ;demo.c:244: uint8_t i,j,k = 0;
                           2446 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2447 	ld	bc,#0x0000
   0885                    2448 00104$:
   0885 78                 2449 	ld	a,b
   0886 D6 FF              2450 	sub	a,#0xFF
   0888 D0                 2451 	ret	NC
                           2452 ;demo.c:246: for (j = 0; j < 255; j++) {
   0889 59                 2453 	ld	e,c
   088A 16 FF              2454 	ld	d,#0xFF
   088C                    2455 00103$:
                           2456 ;demo.c:247: k++;
   088C 1C                 2457 	inc	e
   088D 15                 2458 	dec	d
                           2459 ;demo.c:246: for (j = 0; j < 255; j++) {
   088E AF                 2460 	xor	a,a
   088F B2                 2461 	or	a,d
   0890 20 FA              2462 	jr	NZ,00103$
                           2463 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0892 4B                 2464 	ld	c,e
   0893 04                 2465 	inc	b
   0894 18 EF              2466 	jr	00104$
   0896                    2467 _pause_end::
                           2468 ;demo.c:253: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2469 ;	---------------------------------
                           2470 ; Function raw_load
                           2471 ; ---------------------------------
   0896                    2472 _raw_load_start::
   0896                    2473 _raw_load:
   0896 DD E5              2474 	push	ix
   0898 DD 21 00 00        2475 	ld	ix,#0
   089C DD 39              2476 	add	ix,sp
   089E 21 D2 FF           2477 	ld	hl,#-46
   08A1 39                 2478 	add	hl,sp
   08A2 F9                 2479 	ld	sp,hl
                           2480 ;demo.c:258: if(debugprint == 1) {
   08A3 DD 7E 0A           2481 	ld	a,10 (ix)
   08A6 D6 01              2482 	sub	a,#0x01
   08A8 20 06              2483 	jr	NZ,00120$
   08AA DD 7E 0B           2484 	ld	a,11 (ix)
   08AD B7                 2485 	or	a,a
   08AE 28 02              2486 	jr	Z,00121$
   08B0                    2487 00120$:
   08B0 18 1B              2488 	jr	00102$
   08B2                    2489 00121$:
                           2490 ;demo.c:259: puts("loading rawfile: ");
   08B2 21r84s09           2491 	ld	hl,#__str_4
   08B5 E5                 2492 	push	hl
   08B6 CDr00s00           2493 	call	_puts
   08B9 F1                 2494 	pop	af
                           2495 ;demo.c:260: puts(file_name);
   08BA DD 6E 04           2496 	ld	l,4 (ix)
   08BD DD 66 05           2497 	ld	h,5 (ix)
   08C0 E5                 2498 	push	hl
   08C1 CDr00s00           2499 	call	_puts
   08C4 F1                 2500 	pop	af
                           2501 ;demo.c:261: puts("\r\n");
   08C5 21r96s09           2502 	ld	hl,#__str_5
   08C8 E5                 2503 	push	hl
   08C9 CDr00s00           2504 	call	_puts
   08CC F1                 2505 	pop	af
   08CD                    2506 00102$:
                           2507 ;demo.c:264: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2508 	ld	hl,#0x0000
   08D0 39                 2509 	add	hl,sp
   08D1 4D                 2510 	ld	c,l
   08D2 44                 2511 	ld	b,h
   08D3 21 2E 00           2512 	ld	hl,#0x002E
   08D6 E5                 2513 	push	hl
   08D7 3E 00              2514 	ld	a,#0x00
   08D9 F5                 2515 	push	af
   08DA 33                 2516 	inc	sp
   08DB C5                 2517 	push	bc
   08DC CDr00s00           2518 	call	_memset
   08DF F1                 2519 	pop	af
   08E0 F1                 2520 	pop	af
   08E1 33                 2521 	inc	sp
                           2522 ;demo.c:265: scratch_clear();
   08E2 CDr90s07           2523 	call	_scratch_clear
                           2524 ;demo.c:267: f.record_size = 128;
   08E5 21 00 00           2525 	ld	hl,#0x0000
   08E8 39                 2526 	add	hl,sp
   08E9 4D                 2527 	ld	c,l
   08EA 44                 2528 	ld	b,h
   08EB 21 0F 00           2529 	ld	hl,#0x000F
   08EE 09                 2530 	add	hl,bc
   08EF EB                 2531 	ex	de,hl
   08F0 3E 80              2532 	ld	a,#0x80
   08F2 12                 2533 	ld	(de),a
                           2534 ;demo.c:268: f.drive = 0;
   08F3 3E 00              2535 	ld	a,#0x00
   08F5 02                 2536 	ld	(bc),a
                           2537 ;demo.c:270: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2538 	ld	e,4 (ix)
   08F9 DD 56 05           2539 	ld	d,5 (ix)
   08FC 03                 2540 	inc	bc
   08FD 21 0B 00           2541 	ld	hl,#0x000B
   0900 E5                 2542 	push	hl
   0901 D5                 2543 	push	de
   0902 C5                 2544 	push	bc
   0903 CDr00s00           2545 	call	_memcpy
   0906 F1                 2546 	pop	af
   0907 F1                 2547 	pop	af
   0908 F1                 2548 	pop	af
                           2549 ;demo.c:272: if (open(&f) != 0) return 0;
   0909 21 00 00           2550 	ld	hl,#0x0000
   090C 39                 2551 	add	hl,sp
   090D E5                 2552 	push	hl
   090E CDr00s00           2553 	call	_open
   0911 F1                 2554 	pop	af
   0912 AF                 2555 	xor	a,a
   0913 B5                 2556 	or	a,l
   0914 28 05              2557 	jr	Z,00119$
   0916 2E 00              2558 	ld	l,#0x00
   0918 C3r7Fs09           2559 	jp	00112$
                           2560 ;demo.c:274: while(total < size) {
   091B                    2561 00119$:
   091B 01 00 00           2562 	ld	bc,#0x0000
   091E                    2563 00109$:
   091E 79                 2564 	ld	a,c
   091F DD 96 06           2565 	sub	a,6 (ix)
   0922 78                 2566 	ld	a,b
   0923 DD 9E 07           2567 	sbc	a,7 (ix)
   0926 F2r74s09           2568 	jp	P,00111$
                           2569 ;demo.c:275: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2570 	push	bc
   092A 21rE0s3F           2571 	ld	hl,#_scratch
   092D E5                 2572 	push	hl
   092E CDr00s00           2573 	call	_block_set_data_ptr
   0931 F1                 2574 	pop	af
   0932 5D                 2575 	ld	e,l
   0933 C1                 2576 	pop	bc
   0934 AF                 2577 	xor	a,a
   0935 B3                 2578 	or	a,e
   0936 28 04              2579 	jr	Z,00106$
   0938 2E 00              2580 	ld	l,#0x00
   093A 18 43              2581 	jr	00112$
   093C                    2582 00106$:
                           2583 ;demo.c:276: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2584 	ld	hl,#0x0000
   093F 39                 2585 	add	hl,sp
   0940 C5                 2586 	push	bc
   0941 E5                 2587 	push	hl
   0942 CDr00s00           2588 	call	_block_read
   0945 F1                 2589 	pop	af
   0946 5D                 2590 	ld	e,l
   0947 C1                 2591 	pop	bc
   0948 AF                 2592 	xor	a,a
   0949 B3                 2593 	or	a,e
   094A 28 04              2594 	jr	Z,00108$
   094C 2E 00              2595 	ld	l,#0x00
   094E 18 2F              2596 	jr	00112$
   0950                    2597 00108$:
                           2598 ;demo.c:278: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2599 	ld	a,8 (ix)
   0953 81                 2600 	add	a,c
   0954 5F                 2601 	ld	e,a
   0955 DD 7E 09           2602 	ld	a,9 (ix)
   0958 88                 2603 	adc	a,b
   0959 57                 2604 	ld	d,a
   095A C5                 2605 	push	bc
   095B 21 80 00           2606 	ld	hl,#0x0080
   095E E5                 2607 	push	hl
   095F 21rE0s3F           2608 	ld	hl,#_scratch
   0962 E5                 2609 	push	hl
   0963 D5                 2610 	push	de
   0964 CDr00s00           2611 	call	_memcpy
   0967 F1                 2612 	pop	af
   0968 F1                 2613 	pop	af
   0969 F1                 2614 	pop	af
   096A C1                 2615 	pop	bc
                           2616 ;demo.c:280: total+=incr;
   096B 21 80 00           2617 	ld	hl,#0x0080
   096E 09                 2618 	add	hl,bc
   096F 4D                 2619 	ld	c,l
   0970 44                 2620 	ld	b,h
   0971 C3r1Es09           2621 	jp	00109$
   0974                    2622 00111$:
                           2623 ;demo.c:283: close(&f);
   0974 21 00 00           2624 	ld	hl,#0x0000
   0977 39                 2625 	add	hl,sp
   0978 E5                 2626 	push	hl
   0979 CDr00s00           2627 	call	_close
   097C F1                 2628 	pop	af
                           2629 ;demo.c:285: return 1;
   097D 2E 01              2630 	ld	l,#0x01
   097F                    2631 00112$:
   097F DD F9              2632 	ld	sp,ix
   0981 DD E1              2633 	pop	ix
   0983 C9                 2634 	ret
   0984                    2635 _raw_load_end::
   0984                    2636 __str_4:
   0984 6C 6F 61 64 69 6E  2637 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2638 	.db 0x00
   0996                    2639 __str_5:
   0996 0D                 2640 	.db 0x0D
   0997 0A                 2641 	.db 0x0A
   0998 00                 2642 	.db 0x00
                           2643 ;demo.c:288: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2644 ;	---------------------------------
                           2645 ; Function pck_load
                           2646 ; ---------------------------------
   0999                    2647 _pck_load_start::
   0999                    2648 _pck_load:
   0999 DD E5              2649 	push	ix
   099B DD 21 00 00        2650 	ld	ix,#0
   099F DD 39              2651 	add	ix,sp
                           2652 ;demo.c:289: if(debugprint == 1) {
   09A1 DD 7E 0C           2653 	ld	a,12 (ix)
   09A4 D6 01              2654 	sub	a,#0x01
   09A6 20 06              2655 	jr	NZ,00106$
   09A8 DD 7E 0D           2656 	ld	a,13 (ix)
   09AB B7                 2657 	or	a,a
   09AC 28 02              2658 	jr	Z,00107$
   09AE                    2659 00106$:
   09AE 18 1B              2660 	jr	00102$
   09B0                    2661 00107$:
                           2662 ;demo.c:290: puts("loading pckfile: ");
   09B0 21r12s0A           2663 	ld	hl,#__str_6
   09B3 E5                 2664 	push	hl
   09B4 CDr00s00           2665 	call	_puts
   09B7 F1                 2666 	pop	af
                           2667 ;demo.c:291: puts(file_name);
   09B8 DD 6E 04           2668 	ld	l,4 (ix)
   09BB DD 66 05           2669 	ld	h,5 (ix)
   09BE E5                 2670 	push	hl
   09BF CDr00s00           2671 	call	_puts
   09C2 F1                 2672 	pop	af
                           2673 ;demo.c:292: puts("\r\n");
   09C3 21r24s0A           2674 	ld	hl,#__str_7
   09C6 E5                 2675 	push	hl
   09C7 CDr00s00           2676 	call	_puts
   09CA F1                 2677 	pop	af
   09CB                    2678 00102$:
                           2679 ;demo.c:294: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2680 	ld	c,6 (ix)
   09CE DD 46 07           2681 	ld	b,7 (ix)
   09D1 C5                 2682 	push	bc
   09D2 C5                 2683 	push	bc
   09D3 3E 00              2684 	ld	a,#0x00
   09D5 F5                 2685 	push	af
   09D6 33                 2686 	inc	sp
   09D7 21r60s01           2687 	ld	hl,#_packbuffer
   09DA E5                 2688 	push	hl
   09DB CDr00s00           2689 	call	_memset
   09DE F1                 2690 	pop	af
   09DF F1                 2691 	pop	af
   09E0 33                 2692 	inc	sp
   09E1 C1                 2693 	pop	bc
                           2694 ;demo.c:295: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2695 	ld	hl,#0x0000
   09E5 E5                 2696 	push	hl
   09E6 21r60s01           2697 	ld	hl,#_packbuffer
   09E9 E5                 2698 	push	hl
   09EA C5                 2699 	push	bc
   09EB DD 6E 04           2700 	ld	l,4 (ix)
   09EE DD 66 05           2701 	ld	h,5 (ix)
   09F1 E5                 2702 	push	hl
   09F2 CDr96s08           2703 	call	_raw_load
   09F5 F1                 2704 	pop	af
   09F6 F1                 2705 	pop	af
   09F7 F1                 2706 	pop	af
   09F8 F1                 2707 	pop	af
                           2708 ;demo.c:296: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2709 	ld	a,10 (ix)
   09FC F5                 2710 	push	af
   09FD 33                 2711 	inc	sp
   09FE DD 6E 08           2712 	ld	l,8 (ix)
   0A01 DD 66 09           2713 	ld	h,9 (ix)
   0A04 E5                 2714 	push	hl
   0A05 21r60s01           2715 	ld	hl,#_packbuffer
   0A08 E5                 2716 	push	hl
   0A09 CDr00s00           2717 	call	_bitbuster
   0A0C F1                 2718 	pop	af
   0A0D F1                 2719 	pop	af
   0A0E 33                 2720 	inc	sp
   0A0F DD E1              2721 	pop	ix
   0A11 C9                 2722 	ret
   0A12                    2723 _pck_load_end::
   0A12                    2724 __str_6:
   0A12 6C 6F 61 64 69 6E  2725 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2726 	.db 0x00
   0A24                    2727 __str_7:
   0A24 0D                 2728 	.db 0x0D
   0A25 0A                 2729 	.db 0x0A
   0A26 00                 2730 	.db 0x00
                           2731 ;demo.c:299: void fadein() {
                           2732 ;	---------------------------------
                           2733 ; Function fadein
                           2734 ; ---------------------------------
   0A27                    2735 _fadein_start::
   0A27                    2736 _fadein:
   0A27 DD E5              2737 	push	ix
   0A29 DD 21 00 00        2738 	ld	ix,#0
   0A2D DD 39              2739 	add	ix,sp
   0A2F F5                 2740 	push	af
                           2741 ;demo.c:302: if (tick < 4) return;
   0A30 3Ar02s41           2742 	ld	a,(#_tick+0)
   0A33 D6 04              2743 	sub	a,#0x04
   0A35 3Ar03s41           2744 	ld	a,(#_tick+1)
   0A38 DE 00              2745 	sbc	a,#0x00
   0A3A F2r40s0A           2746 	jp	P,00102$
   0A3D C3rEEs0A           2747 	jp	00113$
   0A40                    2748 00102$:
                           2749 ;demo.c:304: tick = 0;
   0A40 21r02s41           2750 	ld	hl,#_tick + 0
   0A43 36 00              2751 	ld	(hl), #0x00
   0A45 21r03s41           2752 	ld	hl,#_tick + 1
   0A48 36 00              2753 	ld	(hl), #0x00
                           2754 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2755 	ld	c,#0x00
   0A4C                    2756 00109$:
   0A4C 79                 2757 	ld	a,c
   0A4D D6 20              2758 	sub	a,#0x20
   0A4F D2rE6s0A           2759 	jp	NC,00112$
                           2760 ;demo.c:307: uint8_t r = scratch[i] >> 4;
   0A52 3ErE0              2761 	ld	a,#<_scratch
   0A54 81                 2762 	add	a,c
   0A55 5F                 2763 	ld	e,a
   0A56 3Es3F              2764 	ld	a,#>_scratch
   0A58 CE 00              2765 	adc	a,#0x00
   0A5A 57                 2766 	ld	d,a
   0A5B 1A                 2767 	ld	a,(de)
   0A5C 47                 2768 	ld	b,a
   0A5D 58                 2769 	ld	e,b
   0A5E CB 3B              2770 	srl	e
   0A60 CB 3B              2771 	srl	e
   0A62 CB 3B              2772 	srl	e
   0A64 CB 3B              2773 	srl	e
                           2774 ;demo.c:308: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2775 	ld	a,b
   0A67 E6 0F              2776 	and	a,#0x0F
   0A69 DD 77 FF           2777 	ld	-1 (ix),a
                           2778 ;demo.c:309: uint8_t g = scratch[i+1];
   0A6C 51                 2779 	ld	d,c
   0A6D 14                 2780 	inc	d
   0A6E 3ErE0              2781 	ld	a,#<_scratch
   0A70 82                 2782 	add	a,d
   0A71 6F                 2783 	ld	l,a
   0A72 3Es3F              2784 	ld	a,#>_scratch
   0A74 CE 00              2785 	adc	a,#0x00
   0A76 67                 2786 	ld	h,a
   0A77 56                 2787 	ld	d,(hl)
   0A78 DD 72 FE           2788 	ld	-2 (ix),d
                           2789 ;demo.c:311: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3Er60              2790 	ld	a,#<_cur_palette
   0A7D 81                 2791 	add	a,c
   0A7E 6F                 2792 	ld	l,a
   0A7F 3Es40              2793 	ld	a,#>_cur_palette
   0A81 CE 00              2794 	adc	a,#0x00
   0A83 67                 2795 	ld	h,a
   0A84 56                 2796 	ld	d,(hl)
   0A85 CB 3A              2797 	srl	d
   0A87 CB 3A              2798 	srl	d
   0A89 CB 3A              2799 	srl	d
   0A8B CB 3A              2800 	srl	d
   0A8D 7B                 2801 	ld	a,e
   0A8E 92                 2802 	sub	a,d
   0A8F 30 01              2803 	jr	NC,00104$
   0A91 1C                 2804 	inc	e
   0A92                    2805 00104$:
                           2806 ;demo.c:312: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3Er60              2807 	ld	a,#<_cur_palette
   0A94 81                 2808 	add	a,c
   0A95 6F                 2809 	ld	l,a
   0A96 3Es40              2810 	ld	a,#>_cur_palette
   0A98 CE 00              2811 	adc	a,#0x00
   0A9A 67                 2812 	ld	h,a
   0A9B 7E                 2813 	ld	a,(hl)
   0A9C E6 0F              2814 	and	a,#0x0F
   0A9E 47                 2815 	ld	b,a
   0A9F DD 7E FF           2816 	ld	a,-1 (ix)
   0AA2 90                 2817 	sub	a,b
   0AA3 30 03              2818 	jr	NC,00106$
   0AA5 DD 34 FF           2819 	inc	-1 (ix)
   0AA8                    2820 00106$:
                           2821 ;demo.c:314: scratch[i] = (r << 4) | b;
   0AA8 3ErE0              2822 	ld	a,#<_scratch
   0AAA 81                 2823 	add	a,c
   0AAB 47                 2824 	ld	b,a
   0AAC 3Es3F              2825 	ld	a,#>_scratch
   0AAE CE 00              2826 	adc	a,#0x00
   0AB0 57                 2827 	ld	d,a
   0AB1 7B                 2828 	ld	a,e
   0AB2 07                 2829 	rlca
   0AB3 07                 2830 	rlca
   0AB4 07                 2831 	rlca
   0AB5 07                 2832 	rlca
   0AB6 E6 F0              2833 	and	a,#0xF0
   0AB8 DD B6 FF           2834 	or	a,-1 (ix)
   0ABB 68                 2835 	ld	l,b
   0ABC 62                 2836 	ld	h,d
   0ABD 77                 2837 	ld	(hl),a
                           2838 ;demo.c:315: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2839 	ld	b,c
   0ABF 04                 2840 	inc	b
   0AC0 3Er60              2841 	ld	a,#<_cur_palette
   0AC2 80                 2842 	add	a,b
   0AC3 5F                 2843 	ld	e,a
   0AC4 3Es40              2844 	ld	a,#>_cur_palette
   0AC6 CE 00              2845 	adc	a,#0x00
   0AC8 57                 2846 	ld	d,a
   0AC9 1A                 2847 	ld	a,(de)
   0ACA 5F                 2848 	ld	e,a
   0ACB DD 7E FE           2849 	ld	a,-2 (ix)
   0ACE 93                 2850 	sub	a,e
   0ACF 30 10              2851 	jr	NC,00111$
   0AD1 3ErE0              2852 	ld	a,#<_scratch
   0AD3 80                 2853 	add	a,b
   0AD4 47                 2854 	ld	b,a
   0AD5 3Es3F              2855 	ld	a,#>_scratch
   0AD7 CE 00              2856 	adc	a,#0x00
   0AD9 5F                 2857 	ld	e,a
   0ADA 68                 2858 	ld	l,b
   0ADB 67                 2859 	ld	h,a
   0ADC 7E                 2860 	ld	a,(hl)
   0ADD 3C                 2861 	inc	a
   0ADE 68                 2862 	ld	l,b
   0ADF 63                 2863 	ld	h,e
   0AE0 77                 2864 	ld	(hl),a
   0AE1                    2865 00111$:
                           2866 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2867 	inc	c
   0AE2 0C                 2868 	inc	c
   0AE3 C3r4Cs0A           2869 	jp	00109$
   0AE6                    2870 00112$:
                           2871 ;demo.c:319: vdp_load_palette(scratch);
   0AE6 21rE0s3F           2872 	ld	hl,#_scratch
   0AE9 E5                 2873 	push	hl
   0AEA CDr00s00           2874 	call	_vdp_load_palette
   0AED F1                 2875 	pop	af
   0AEE                    2876 00113$:
   0AEE DD F9              2877 	ld	sp,ix
   0AF0 DD E1              2878 	pop	ix
   0AF2 C9                 2879 	ret
   0AF3                    2880 _fadein_end::
                           2881 ;demo.c:331: void do_ymmm() {
                           2882 ;	---------------------------------
                           2883 ; Function do_ymmm
                           2884 ; ---------------------------------
   0AF3                    2885 _do_ymmm_start::
   0AF3                    2886 _do_ymmm:
   0AF3 DD E5              2887 	push	ix
   0AF5 DD 21 00 00        2888 	ld	ix,#0
   0AF9 DD 39              2889 	add	ix,sp
   0AFB F5                 2890 	push	af
                           2891 ;demo.c:335: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              2892 	ld	a,#0x20
   0AFE FD 21r02s41        2893 	ld	iy,#_tick
   0B02 FD 96 00           2894 	sub	a,0 (iy)
   0B05 3E 00              2895 	ld	a,#0x00
   0B07 FD 21r02s41        2896 	ld	iy,#_tick
   0B0B FD 9E 01           2897 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           2898 	jp	P,00102$
   0B11 21r02s41           2899 	ld	hl,#_tick + 0
   0B14 36 00              2900 	ld	(hl), #0x00
   0B16 21r03s41           2901 	ld	hl,#_tick + 1
   0B19 36 00              2902 	ld	(hl), #0x00
   0B1B FD 21r1Ds41        2903 	ld	iy,#_flipper
   0B1F FD 34 00           2904 	inc	0 (iy)
   0B22 20 07              2905 	jr	NZ,00115$
   0B24 FD 21r1Ds41        2906 	ld	iy,#_flipper
   0B28 FD 34 01           2907 	inc	1 (iy)
   0B2B                    2908 00115$:
   0B2B                    2909 00102$:
                           2910 ;demo.c:336: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              2911 	ld	a,#0x0A
   0B2D FD 21r1Ds41        2912 	ld	iy,#_flipper
   0B31 FD 96 00           2913 	sub	a,0 (iy)
   0B34 3E 00              2914 	ld	a,#0x00
   0B36 FD 21r1Ds41        2915 	ld	iy,#_flipper
   0B3A FD 9E 01           2916 	sbc	a,1 (iy)
   0B3D F2r4As0B           2917 	jp	P,00104$
   0B40 21r1Ds41           2918 	ld	hl,#_flipper + 0
   0B43 36 00              2919 	ld	(hl), #0x00
   0B45 21r1Es41           2920 	ld	hl,#_flipper + 1
   0B48 36 00              2921 	ld	(hl), #0x00
   0B4A                    2922 00104$:
                           2923 ;demo.c:338: ymmmf++;
   0B4A FD 21r1Fs41        2924 	ld	iy,#_ymmmf
   0B4E FD 34 00           2925 	inc	0 (iy)
   0B51 20 07              2926 	jr	NZ,00116$
   0B53 FD 21r1Fs41        2927 	ld	iy,#_ymmmf
   0B57 FD 34 01           2928 	inc	1 (iy)
   0B5A                    2929 00116$:
                           2930 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r1Bs41           2931 	ld	hl,#_yofff + 0
   0B5D 36 00              2932 	ld	(hl), #0x00
   0B5F                    2933 00105$:
   0B5F 21r1Bs41           2934 	ld	hl,#_yofff + 0
   0B62 4E                 2935 	ld	c,(hl)
   0B63 06 00              2936 	ld	b,#0x00
   0B65 79                 2937 	ld	a,c
   0B66 D6 D2              2938 	sub	a,#0xD2
   0B68 78                 2939 	ld	a,b
   0B69 DE 00              2940 	sbc	a,#0x00
   0B6B F2rE4s0B           2941 	jp	P,00109$
                           2942 ;demo.c:340: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r1Fs41           2943 	ld	hl,#_ymmmf
   0B71 79                 2944 	ld	a,c
   0B72 86                 2945 	add	a,(hl)
   0B73 5F                 2946 	ld	e,a
   0B74 78                 2947 	ld	a,b
   0B75 23                 2948 	inc	hl
   0B76 8E                 2949 	adc	a,(hl)
   0B77 16 00              2950 	ld	d,#0x00
   0B79 CB 23              2951 	sla	e
   0B7B CB 12              2952 	rl	d
   0B7D 21r2Cs00           2953 	ld	hl,#_sintabx
   0B80 19                 2954 	add	hl,de
   0B81 5E                 2955 	ld	e,(hl)
   0B82 23                 2956 	inc	hl
   0B83 56                 2957 	ld	d,(hl)
   0B84 DD 73 FE           2958 	ld	-2 (ix),e
   0B87 DD 72 FF           2959 	ld	-1 (ix),d
                           2960 ;demo.c:343: cmd.source_x = 0;
   0B8A 21r04s41           2961 	ld	hl,#_cmd
   0B8D 36 00              2962 	ld	(hl),#0x00
   0B8F 23                 2963 	inc	hl
   0B90 36 00              2964 	ld	(hl),#0x00
                           2965 ;demo.c:344: cmd.source_y = 0+yofff;
   0B92 11r06s41           2966 	ld	de,#_cmd + 2
   0B95 EB                 2967 	ex	de,hl
   0B96 71                 2968 	ld	(hl),c
   0B97 23                 2969 	inc	hl
   0B98 70                 2970 	ld	(hl),b
                           2971 ;demo.c:345: cmd.dest_x = xo;
   0B99 11r08s41           2972 	ld	de,#_cmd + 4
   0B9C EB                 2973 	ex	de,hl
   0B9D DD 7E FE           2974 	ld	a,-2 (ix)
   0BA0 77                 2975 	ld	(hl),a
   0BA1 23                 2976 	inc	hl
   0BA2 DD 7E FF           2977 	ld	a,-1 (ix)
   0BA5 77                 2978 	ld	(hl),a
                           2979 ;demo.c:346: cmd.dest_y = 3+yofff;
   0BA6 11r0As41           2980 	ld	de,#_cmd + 6
   0BA9 03                 2981 	inc	bc
   0BAA 03                 2982 	inc	bc
   0BAB 03                 2983 	inc	bc
   0BAC 6B                 2984 	ld	l,e
   0BAD 62                 2985 	ld	h,d
   0BAE 71                 2986 	ld	(hl),c
   0BAF 23                 2987 	inc	hl
   0BB0 70                 2988 	ld	(hl),b
                           2989 ;demo.c:347: cmd.size_x = 256;
   0BB1 21r0Cs41           2990 	ld	hl, #_cmd + 8
   0BB4 36 00              2991 	ld	(hl),#0x00
   0BB6 23                 2992 	inc	hl
   0BB7 36 01              2993 	ld	(hl),#0x01
                           2994 ;demo.c:348: cmd.size_y = 1;
   0BB9 21r0Es41           2995 	ld	hl, #_cmd + 10
   0BBC 36 01              2996 	ld	(hl),#0x01
   0BBE 23                 2997 	inc	hl
   0BBF 36 00              2998 	ld	(hl),#0x00
                           2999 ;demo.c:349: cmd.data = 0;
                           3000 ;demo.c:350: cmd.argument = 0;
   0BC1 3E 00              3001 	ld	a,#0x00
   0BC3 32r10s41           3002 	ld	(#_cmd + 12),a
   0BC6 32r11s41           3003 	ld	(#_cmd + 13),a
                           3004 ;demo.c:351: cmd.command = 0xD0;
   0BC9 3E D0              3005 	ld	a,#0xD0
   0BCB 32r12s41           3006 	ld	(#_cmd + 14),a
                           3007 ;demo.c:354: vdp_copier(&cmd);
   0BCE 21r04s41           3008 	ld	hl,#_cmd
   0BD1 E5                 3009 	push	hl
   0BD2 CDr00s00           3010 	call	_vdp_copier
   0BD5 F1                 3011 	pop	af
                           3012 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r1Bs41           3013 	ld	hl,#_yofff + 0
   0BD9 4E                 3014 	ld	c,(hl)
   0BDA 21r1Bs41           3015 	ld	hl,#_yofff
   0BDD 79                 3016 	ld	a,c
   0BDE C6 02              3017 	add	a,#0x02
   0BE0 77                 3018 	ld	(hl),a
   0BE1 C3r5Fs0B           3019 	jp	00105$
   0BE4                    3020 00109$:
   0BE4 DD F9              3021 	ld	sp,ix
   0BE6 DD E1              3022 	pop	ix
   0BE8 C9                 3023 	ret
   0BE9                    3024 _do_ymmm_end::
                           3025 ;demo.c:371: void do_blocks() {
                           3026 ;	---------------------------------
                           3027 ; Function do_blocks
                           3028 ; ---------------------------------
   0BE9                    3029 _do_blocks_start::
   0BE9                    3030 _do_blocks:
   0BE9 DD E5              3031 	push	ix
   0BEB DD 21 00 00        3032 	ld	ix,#0
   0BEF DD 39              3033 	add	ix,sp
   0BF1 21 FA FF           3034 	ld	hl,#-6
   0BF4 39                 3035 	add	hl,sp
   0BF5 F9                 3036 	ld	sp,hl
                           3037 ;demo.c:373: int ys = 0;
   0BF6 DD 36 FC 00        3038 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3039 	ld	-3 (ix),#0x00
                           3040 ;demo.c:374: int ye = 0;
   0BFE DD 36 FA 00        3041 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3042 	ld	-5 (ix),#0x00
                           3043 ;demo.c:376: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3044 	ld	hl,#0x0017
   0C09 E5                 3045 	push	hl
   0C0A CDr00s00           3046 	call	_vdp_register
   0C0D F1                 3047 	pop	af
                           3048 ;demo.c:378: if (block_init == 0) {
   0C0E AF                 3049 	xor	a,a
   0C0F FD 21r21s41        3050 	ld	iy,#_block_init
   0C13 FD B6 00           3051 	or	a,0 (iy)
   0C16 C2r7Es0C           3052 	jp	NZ,00108$
                           3053 ;demo.c:380: vdp_set_screen5();
   0C19 CDr00s00           3054 	call	_vdp_set_screen5
                           3055 ;demo.c:382: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3056 	ld	hl,#0x5F02
   0C1F E5                 3057 	push	hl
   0C20 CDr00s00           3058 	call	_vdp_register
   0C23 F1                 3059 	pop	af
                           3060 ;demo.c:384: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3061 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3062 	ld	-1 (ix),#0x00
   0C2C                    3063 00110$:
   0C2C DD 7E FE           3064 	ld	a,-2 (ix)
   0C2F D6 10              3065 	sub	a,#0x10
   0C31 DD 7E FF           3066 	ld	a,-1 (ix)
   0C34 DE 00              3067 	sbc	a,#0x00
   0C36 F2r6Es0C           3068 	jp	P,00113$
   0C39 DD 4E FE           3069 	ld	c,-2 (ix)
   0C3C DD 46 FF           3070 	ld	b,-1 (ix)
   0C3F CB 21              3071 	sla	c
   0C41 CB 10              3072 	rl	b
   0C43 21r2As41           3073 	ld	hl,#_btab
   0C46 09                 3074 	add	hl,bc
   0C47 4D                 3075 	ld	c,l
   0C48 44                 3076 	ld	b,h
   0C49 DD 5E FE           3077 	ld	e,-2 (ix)
   0C4C DD 56 FF           3078 	ld	d,-1 (ix)
   0C4F CB 23              3079 	sla	e
   0C51 CB 12              3080 	rl	d
   0C53 CB 23              3081 	sla	e
   0C55 CB 12              3082 	rl	d
   0C57 CB 23              3083 	sla	e
   0C59 CB 12              3084 	rl	d
   0C5B CB 23              3085 	sla	e
   0C5D CB 12              3086 	rl	d
   0C5F 69                 3087 	ld	l,c
   0C60 60                 3088 	ld	h,b
   0C61 73                 3089 	ld	(hl),e
   0C62 23                 3090 	inc	hl
   0C63 72                 3091 	ld	(hl),d
   0C64 DD 34 FE           3092 	inc	-2 (ix)
   0C67 20 03              3093 	jr	NZ,00139$
   0C69 DD 34 FF           3094 	inc	-1 (ix)
   0C6C                    3095 00139$:
   0C6C 18 BE              3096 	jr	00110$
   0C6E                    3097 00113$:
                           3098 ;demo.c:385: vdp_load_palette(block_palette);
   0C6E 21r80s40           3099 	ld	hl,#_block_palette
   0C71 E5                 3100 	push	hl
   0C72 CDr00s00           3101 	call	_vdp_load_palette
   0C75 F1                 3102 	pop	af
                           3103 ;demo.c:387: block_init = 1;
   0C76 21r21s41           3104 	ld	hl,#_block_init + 0
   0C79 36 01              3105 	ld	(hl), #0x01
   0C7B C3r07s0E           3106 	jp	00122$
   0C7E                    3107 00108$:
                           3108 ;demo.c:391: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3Ar4As41           3109 	ld	a,(#_flof+0)
   0C81 FD 21r4As41        3110 	ld	iy,#_flof
   0C85 FD B6 01           3111 	or	a,1 (iy)
   0C88 20 10              3112 	jr	NZ,00102$
   0C8A DD 36 FC 00        3113 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3114 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3115 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3116 	ld	-5 (ix),#0x00
   0C9A                    3117 00102$:
                           3118 ;demo.c:392: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3Ar4As41           3119 	ld	a,(#_flof+0)
   0C9D D6 01              3120 	sub	a,#0x01
   0C9F 20 06              3121 	jr	NZ,00140$
   0CA1 3Ar4Bs41           3122 	ld	a,(#_flof+1)
   0CA4 B7                 3123 	or	a,a
   0CA5 28 02              3124 	jr	Z,00141$
   0CA7                    3125 00140$:
   0CA7 18 10              3126 	jr	00104$
   0CA9                    3127 00141$:
   0CA9 DD 36 FC 08        3128 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3129 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3130 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3131 	ld	-5 (ix),#0x00
   0CB9                    3132 00104$:
                           3133 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r28s41        3134 	ld	iy,#_bty
   0CBD FD 36 00 03        3135 	ld	0 (iy),#0x03
   0CC1 FD 21r28s41        3136 	ld	iy,#_bty
   0CC5 FD 36 01 00        3137 	ld	1 (iy),#0x00
   0CC9                    3138 00118$:
   0CC9 3Ar28s41           3139 	ld	a,(#_bty+0)
   0CCC D6 0B              3140 	sub	a,#0x0B
   0CCE 3Ar29s41           3141 	ld	a,(#_bty+1)
   0CD1 DE 00              3142 	sbc	a,#0x00
   0CD3 F2rDEs0D           3143 	jp	P,00121$
                           3144 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3145 	ld	a,-4 (ix)
   0CD9 FD 21r26s41        3146 	ld	iy,#_btx
   0CDD FD 77 00           3147 	ld	0 (iy),a
   0CE0 DD 7E FD           3148 	ld	a,-3 (ix)
   0CE3 FD 21r26s41        3149 	ld	iy,#_btx
   0CE7 FD 77 01           3150 	ld	1 (iy),a
   0CEA                    3151 00114$:
   0CEA 3Ar26s41           3152 	ld	a,(#_btx+0)
   0CED DD 96 FA           3153 	sub	a,-6 (ix)
   0CF0 3Ar27s41           3154 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3155 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3156 	jp	P,00120$
                           3157 ;demo.c:396: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3158 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3159 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3160 	and	a,0 (iy)
   0D03 21r00s00           3161 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3162 	or	a,(hl)
   0D07 4F                 3163 	ld	c,a
   0D08 CB 39              3164 	srl	c
   0D0A 21r22s41           3165 	ld	hl,#_bsx + 0
   0D0D 71                 3166 	ld	(hl), c
   0D0E 21r23s41           3167 	ld	hl,#_bsx + 1
   0D11 36 00              3168 	ld	(hl), #0x00
                           3169 ;demo.c:397: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3170 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r24s41           3171 	ld	hl,#_bsy + 0
   0D19 77                 3172 	ld	(hl), a
   0D1A 21r25s41           3173 	ld	hl,#_bsy + 1
   0D1D 36 00              3174 	ld	(hl), #0x00
                           3175 ;demo.c:398: cmd.source_x = btab[bsx];
   0D1F 21r22s41           3176 	ld	hl,#_bsx + 0
   0D22 4E                 3177 	ld	c,(hl)
   0D23 21r23s41           3178 	ld	hl,#_bsx + 1
   0D26 46                 3179 	ld	b,(hl)
   0D27 CB 21              3180 	sla	c
   0D29 CB 10              3181 	rl	b
   0D2B 21r2As41           3182 	ld	hl,#_btab
   0D2E 09                 3183 	add	hl,bc
   0D2F 4E                 3184 	ld	c,(hl)
   0D30 23                 3185 	inc	hl
   0D31 46                 3186 	ld	b,(hl)
   0D32 21r04s41           3187 	ld	hl,#_cmd
   0D35 71                 3188 	ld	(hl),c
   0D36 23                 3189 	inc	hl
   0D37 70                 3190 	ld	(hl),b
                           3191 ;demo.c:399: cmd.source_y = 768+btab[bsy];
   0D38 01r06s41           3192 	ld	bc,#_cmd + 2
   0D3B 21r24s41           3193 	ld	hl,#_bsy + 0
   0D3E 5E                 3194 	ld	e,(hl)
   0D3F 21r25s41           3195 	ld	hl,#_bsy + 1
   0D42 56                 3196 	ld	d,(hl)
   0D43 CB 23              3197 	sla	e
   0D45 CB 12              3198 	rl	d
   0D47 21r2As41           3199 	ld	hl,#_btab
   0D4A 19                 3200 	add	hl,de
   0D4B 5E                 3201 	ld	e,(hl)
   0D4C 23                 3202 	inc	hl
   0D4D 56                 3203 	ld	d,(hl)
   0D4E 21 00 03           3204 	ld	hl,#0x0300
   0D51 19                 3205 	add	hl,de
   0D52 EB                 3206 	ex	de,hl
   0D53 69                 3207 	ld	l,c
   0D54 60                 3208 	ld	h,b
   0D55 73                 3209 	ld	(hl),e
   0D56 23                 3210 	inc	hl
   0D57 72                 3211 	ld	(hl),d
                           3212 ;demo.c:400: cmd.dest_x = btab[btx];
   0D58 01r08s41           3213 	ld	bc,#_cmd + 4
   0D5B 21r26s41           3214 	ld	hl,#_btx + 0
   0D5E 5E                 3215 	ld	e,(hl)
   0D5F 21r27s41           3216 	ld	hl,#_btx + 1
   0D62 56                 3217 	ld	d,(hl)
   0D63 CB 23              3218 	sla	e
   0D65 CB 12              3219 	rl	d
   0D67 21r2As41           3220 	ld	hl,#_btab
   0D6A 19                 3221 	add	hl,de
   0D6B 5E                 3222 	ld	e,(hl)
   0D6C 23                 3223 	inc	hl
   0D6D 56                 3224 	ld	d,(hl)
   0D6E 69                 3225 	ld	l,c
   0D6F 60                 3226 	ld	h,b
   0D70 73                 3227 	ld	(hl),e
   0D71 23                 3228 	inc	hl
   0D72 72                 3229 	ld	(hl),d
                           3230 ;demo.c:401: cmd.dest_y = 512+btab[bty];
   0D73 01r0As41           3231 	ld	bc,#_cmd + 6
   0D76 21r28s41           3232 	ld	hl,#_bty + 0
   0D79 5E                 3233 	ld	e,(hl)
   0D7A 21r29s41           3234 	ld	hl,#_bty + 1
   0D7D 56                 3235 	ld	d,(hl)
   0D7E CB 23              3236 	sla	e
   0D80 CB 12              3237 	rl	d
   0D82 21r2As41           3238 	ld	hl,#_btab
   0D85 19                 3239 	add	hl,de
   0D86 5E                 3240 	ld	e,(hl)
   0D87 23                 3241 	inc	hl
   0D88 56                 3242 	ld	d,(hl)
   0D89 21 00 02           3243 	ld	hl,#0x0200
   0D8C 19                 3244 	add	hl,de
   0D8D EB                 3245 	ex	de,hl
   0D8E 69                 3246 	ld	l,c
   0D8F 60                 3247 	ld	h,b
   0D90 73                 3248 	ld	(hl),e
   0D91 23                 3249 	inc	hl
   0D92 72                 3250 	ld	(hl),d
                           3251 ;demo.c:402: cmd.size_x = 16;
   0D93 21r0Cs41           3252 	ld	hl, #_cmd + 8
   0D96 36 10              3253 	ld	(hl),#0x10
   0D98 23                 3254 	inc	hl
   0D99 36 00              3255 	ld	(hl),#0x00
                           3256 ;demo.c:403: cmd.size_y = 16;
   0D9B 21r0Es41           3257 	ld	hl, #_cmd + 10
   0D9E 36 10              3258 	ld	(hl),#0x10
   0DA0 23                 3259 	inc	hl
   0DA1 36 00              3260 	ld	(hl),#0x00
                           3261 ;demo.c:404: cmd.data = 0;
                           3262 ;demo.c:405: cmd.argument = 0x00;
   0DA3 3E 00              3263 	ld	a,#0x00
   0DA5 32r10s41           3264 	ld	(#_cmd + 12),a
   0DA8 32r11s41           3265 	ld	(#_cmd + 13),a
                           3266 ;demo.c:406: cmd.command = 0xD0;
   0DAB 3E D0              3267 	ld	a,#0xD0
   0DAD 32r12s41           3268 	ld	(#_cmd + 14),a
                           3269 ;demo.c:407: vdp_copier(&cmd);
   0DB0 21r04s41           3270 	ld	hl,#_cmd
   0DB3 E5                 3271 	push	hl
   0DB4 CDr00s00           3272 	call	_vdp_copier
   0DB7 F1                 3273 	pop	af
                           3274 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r26s41        3275 	ld	iy,#_btx
   0DBC FD 34 00           3276 	inc	0 (iy)
   0DBF 20 07              3277 	jr	NZ,00150$
   0DC1 FD 21r26s41        3278 	ld	iy,#_btx
   0DC5 FD 34 01           3279 	inc	1 (iy)
   0DC8                    3280 00150$:
   0DC8 C3rEAs0C           3281 	jp	00114$
   0DCB                    3282 00120$:
                           3283 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0DCB FD 21r28s41        3284 	ld	iy,#_bty
   0DCF FD 34 00           3285 	inc	0 (iy)
   0DD2 20 07              3286 	jr	NZ,00151$
   0DD4 FD 21r28s41        3287 	ld	iy,#_bty
   0DD8 FD 34 01           3288 	inc	1 (iy)
   0DDB                    3289 00151$:
   0DDB C3rC9s0C           3290 	jp	00118$
   0DDE                    3291 00121$:
                           3292 ;demo.c:411: flof++;
   0DDE FD 21r4As41        3293 	ld	iy,#_flof
   0DE2 FD 34 00           3294 	inc	0 (iy)
   0DE5 20 07              3295 	jr	NZ,00152$
   0DE7 FD 21r4As41        3296 	ld	iy,#_flof
   0DEB FD 34 01           3297 	inc	1 (iy)
   0DEE                    3298 00152$:
                           3299 ;demo.c:412: if (flof == 2) flof = 0;
   0DEE 3Ar4As41           3300 	ld	a,(#_flof+0)
   0DF1 D6 02              3301 	sub	a,#0x02
   0DF3 20 06              3302 	jr	NZ,00153$
   0DF5 3Ar4Bs41           3303 	ld	a,(#_flof+1)
   0DF8 B7                 3304 	or	a,a
   0DF9 28 02              3305 	jr	Z,00154$
   0DFB                    3306 00153$:
   0DFB 18 0A              3307 	jr	00122$
   0DFD                    3308 00154$:
   0DFD 21r4As41           3309 	ld	hl,#_flof + 0
   0E00 36 00              3310 	ld	(hl), #0x00
   0E02 21r4Bs41           3311 	ld	hl,#_flof + 1
   0E05 36 00              3312 	ld	(hl), #0x00
   0E07                    3313 00122$:
   0E07 DD F9              3314 	ld	sp,ix
   0E09 DD E1              3315 	pop	ix
   0E0B C9                 3316 	ret
   0E0C                    3317 _do_blocks_end::
                           3318 ;demo.c:420: void raster_effu() {
                           3319 ;	---------------------------------
                           3320 ; Function raster_effu
                           3321 ; ---------------------------------
   0E0C                    3322 _raster_effu_start::
   0E0C                    3323 _raster_effu:
                           3324 ;demo.c:421: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3325 	ld	hl,#0x0017
   0E0F E5                 3326 	push	hl
   0E10 CDr00s00           3327 	call	_vdp_register
   0E13 F1                 3328 	pop	af
                           3329 ;demo.c:422: waitVB();
   0E14 76                 3330 		halt 
                           3331 ;demo.c:424: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3332 	ld	hl,#0x4001
   0E18 E5                 3333 	push	hl
   0E19 CDr00s00           3334 	call	_vdp_register
                           3335 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3336 	ld	a,#0x28
   0E1E 32r4Cs41           3337 	ld	(#_linenum + 0),a
   0E21 F1                 3338 	pop	af
   0E22 FD 21r4Cs41        3339 	ld	iy,#_linenum
   0E26 FD 36 01 00        3340 	ld	1 (iy),#0x00
   0E2A                    3341 00101$:
   0E2A 3Ar4Cs41           3342 	ld	a,(#_linenum+0)
   0E2D D6 D4              3343 	sub	a,#0xD4
   0E2F 3Ar4Ds41           3344 	ld	a,(#_linenum+1)
   0E32 DE 00              3345 	sbc	a,#0x00
   0E34 F2r65s0E           3346 	jp	P,00104$
                           3347 ;demo.c:427: vdp_register(19,linenum); // interrupt on line
   0E37 3Ar4Cs41           3348 	ld	a,(#_linenum+0)
   0E3A F5                 3349 	push	af
   0E3B 33                 3350 	inc	sp
   0E3C 3E 13              3351 	ld	a,#0x13
   0E3E F5                 3352 	push	af
   0E3F 33                 3353 	inc	sp
   0E40 CDr00s00           3354 	call	_vdp_register
   0E43 F1                 3355 	pop	af
                           3356 ;demo.c:428: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3357 	ld	hl,#0x1600
   0E47 E5                 3358 	push	hl
   0E48 CDr00s00           3359 	call	_vdp_register
   0E4B F1                 3360 	pop	af
                           3361 ;demo.c:430: waitVB();
   0E4C 76                 3362 		halt 
                           3363 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21r4Cs41           3364 	ld	hl,#_linenum
   0E50 7E                 3365 	ld	a,(hl)
   0E51 C6 04              3366 	add	a,#0x04
   0E53 23                 3367 	inc	hl
   0E54 2B                 3368 	dec	hl
   0E55 C5                 3369 	push	bc
   0E56 4F                 3370 	ld	c, a
   0E57 23                 3371 	inc	hl
   0E58 7E                 3372 	ld	a, (hl)
   0E59 47                 3373 	ld	b, a
   0E5A 79                 3374 	ld	a, c
   0E5B 2B                 3375 	dec	hl
   0E5C 77                 3376 	ld	(hl), a
   0E5D 78                 3377 	ld	a, b
   0E5E C1                 3378 	pop	bc
   0E5F CE 00              3379 	adc	a,#0x00
   0E61 23                 3380 	inc	hl
   0E62 77                 3381 	ld	(hl),a
   0E63 18 C5              3382 	jr	00101$
   0E65                    3383 00104$:
                           3384 ;demo.c:433: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3385 	ld	hl,#0x0017
   0E68 E5                 3386 	push	hl
   0E69 CDr00s00           3387 	call	_vdp_register
   0E6C F1                 3388 	pop	af
                           3389 ;demo.c:447: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3390 	ld	hl,#0x0600
   0E70 E5                 3391 	push	hl
   0E71 CDr00s00           3392 	call	_vdp_register
   0E74 F1                 3393 	pop	af
                           3394 ;demo.c:448: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3395 	ld	hl,#0x6001
   0E78 E5                 3396 	push	hl
   0E79 CDr00s00           3397 	call	_vdp_register
   0E7C F1                 3398 	pop	af
   0E7D C9                 3399 	ret
   0E7E                    3400 _raster_effu_end::
                           3401 ;demo.c:479: void do_letter(char cc) {
                           3402 ;	---------------------------------
                           3403 ; Function do_letter
                           3404 ; ---------------------------------
   0E7E                    3405 _do_letter_start::
   0E7E                    3406 _do_letter:
   0E7E DD E5              3407 	push	ix
   0E80 DD 21 00 00        3408 	ld	ix,#0
   0E84 DD 39              3409 	add	ix,sp
   0E86 F5                 3410 	push	af
                           3411 ;demo.c:480: int cidx = cc - 65;
   0E87 DD 4E 04           3412 	ld	c,4 (ix)
   0E8A DD 7E 04           3413 	ld	a,4 (ix)
   0E8D 17                 3414 	rla	
   0E8E 9F                 3415 	sbc	a,a
   0E8F 47                 3416 	ld	b,a
   0E90 79                 3417 	ld	a,c
   0E91 C6 BF              3418 	add	a,#0xBF
   0E93 DD 77 FE           3419 	ld	-2 (ix),a
   0E96 78                 3420 	ld	a,b
   0E97 CE FF              3421 	adc	a,#0xFF
   0E99 DD 77 FF           3422 	ld	-1 (ix),a
                           3423 ;demo.c:481: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3424 	ld	a,#<_font_x
   0E9E DD 86 FE           3425 	add	a,-2 (ix)
   0EA1 5F                 3426 	ld	e,a
   0EA2 3Es0F              3427 	ld	a,#>_font_x
   0EA4 DD 8E FF           3428 	adc	a,-1 (ix)
   0EA7 57                 3429 	ld	d,a
   0EA8 1A                 3430 	ld	a,(de)
   0EA9 5F                 3431 	ld	e,a
   0EAA 16 00              3432 	ld	d,#0x00
   0EAC 21 7F 00           3433 	ld	hl,#0x007F
   0EAF 19                 3434 	add	hl,de
   0EB0 EB                 3435 	ex	de,hl
   0EB1 21r04s41           3436 	ld	hl,#_cmd
   0EB4 73                 3437 	ld	(hl),e
   0EB5 23                 3438 	inc	hl
   0EB6 72                 3439 	ld	(hl),d
                           3440 ;demo.c:482: cmd.source_y = 512+font_y[cidx];
   0EB7 11r06s41           3441 	ld	de,#_cmd + 2
   0EBA 3Er7C              3442 	ld	a,#<_font_y
   0EBC DD 86 FE           3443 	add	a,-2 (ix)
   0EBF 4F                 3444 	ld	c,a
   0EC0 3Es0F              3445 	ld	a,#>_font_y
   0EC2 DD 8E FF           3446 	adc	a,-1 (ix)
   0EC5 47                 3447 	ld	b,a
   0EC6 0A                 3448 	ld	a,(bc)
   0EC7 4F                 3449 	ld	c,a
   0EC8 06 00              3450 	ld	b,#0x00
   0ECA 21 00 02           3451 	ld	hl,#0x0200
   0ECD 09                 3452 	add	hl,bc
   0ECE 4D                 3453 	ld	c,l
   0ECF 44                 3454 	ld	b,h
   0ED0 EB                 3455 	ex	de,hl
   0ED1 71                 3456 	ld	(hl),c
   0ED2 23                 3457 	inc	hl
   0ED3 70                 3458 	ld	(hl),b
                           3459 ;demo.c:483: cmd.dest_x = lx;
   0ED4 01r08s41           3460 	ld	bc,#_cmd + 4
   0ED7 21r4Es41           3461 	ld	hl,#_lx + 0
   0EDA 5E                 3462 	ld	e,(hl)
   0EDB 16 00              3463 	ld	d,#0x00
   0EDD 69                 3464 	ld	l,c
   0EDE 60                 3465 	ld	h,b
   0EDF 73                 3466 	ld	(hl),e
   0EE0 23                 3467 	inc	hl
   0EE1 72                 3468 	ld	(hl),d
                           3469 ;demo.c:484: cmd.dest_y = ly;
   0EE2 01r0As41           3470 	ld	bc,#_cmd + 6
   0EE5 21r4Fs41           3471 	ld	hl,#_ly + 0
   0EE8 5E                 3472 	ld	e,(hl)
   0EE9 16 00              3473 	ld	d,#0x00
   0EEB 69                 3474 	ld	l,c
   0EEC 60                 3475 	ld	h,b
   0EED 73                 3476 	ld	(hl),e
   0EEE 23                 3477 	inc	hl
   0EEF 72                 3478 	ld	(hl),d
                           3479 ;demo.c:485: cmd.size_x = font_w[cidx];
   0EF0 01r0Cs41           3480 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3481 	ld	a,#<_font_w
   0EF5 DD 86 FE           3482 	add	a,-2 (ix)
   0EF8 5F                 3483 	ld	e,a
   0EF9 3Es0F              3484 	ld	a,#>_font_w
   0EFB DD 8E FF           3485 	adc	a,-1 (ix)
   0EFE 57                 3486 	ld	d,a
   0EFF 1A                 3487 	ld	a,(de)
   0F00 5F                 3488 	ld	e,a
   0F01 16 00              3489 	ld	d,#0x00
   0F03 69                 3490 	ld	l,c
   0F04 60                 3491 	ld	h,b
   0F05 73                 3492 	ld	(hl),e
   0F06 23                 3493 	inc	hl
   0F07 72                 3494 	ld	(hl),d
                           3495 ;demo.c:486: cmd.size_y = 8;
   0F08 21r0Es41           3496 	ld	hl, #_cmd + 10
   0F0B 36 08              3497 	ld	(hl),#0x08
   0F0D 23                 3498 	inc	hl
   0F0E 36 00              3499 	ld	(hl),#0x00
                           3500 ;demo.c:487: cmd.argument = 0x00;
   0F10 3E 00              3501 	ld	a,#0x00
   0F12 32r11s41           3502 	ld	(#_cmd + 13),a
                           3503 ;demo.c:488: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3504 	ld	a,#0x90
   0F17 32r12s41           3505 	ld	(#_cmd + 14),a
                           3506 ;demo.c:489: vdp_copier(&cmd);
   0F1A 21r04s41           3507 	ld	hl,#_cmd
   0F1D E5                 3508 	push	hl
   0F1E CDr00s00           3509 	call	_vdp_copier
   0F21 F1                 3510 	pop	af
                           3511 ;demo.c:490: lx+=font_w[cidx]-1;
   0F22 3ErBC              3512 	ld	a,#<_font_w
   0F24 DD 86 FE           3513 	add	a,-2 (ix)
   0F27 4F                 3514 	ld	c,a
   0F28 3Es0F              3515 	ld	a,#>_font_w
   0F2A DD 8E FF           3516 	adc	a,-1 (ix)
   0F2D 47                 3517 	ld	b,a
   0F2E 0A                 3518 	ld	a,(bc)
   0F2F 4F                 3519 	ld	c,a
   0F30 0D                 3520 	dec	c
   0F31 21r4Es41           3521 	ld	hl,#_lx
   0F34 7E                 3522 	ld	a,(hl)
   0F35 81                 3523 	add	a,c
   0F36 77                 3524 	ld	(hl),a
   0F37 DD F9              3525 	ld	sp,ix
   0F39 DD E1              3526 	pop	ix
   0F3B C9                 3527 	ret
   0F3C                    3528 _do_letter_end::
   0F3C                    3529 _font_x:
   0F3C 01                 3530 	.db #0x01
   0F3D 09                 3531 	.db #0x09
   0F3E 11                 3532 	.db #0x11
   0F3F 19                 3533 	.db #0x19
   0F40 21                 3534 	.db #0x21
   0F41 29                 3535 	.db #0x29
   0F42 31                 3536 	.db #0x31
   0F43 39                 3537 	.db #0x39
   0F44 41                 3538 	.db #0x41
   0F45 46                 3539 	.db #0x46
   0F46 4E                 3540 	.db #0x4E
   0F47 56                 3541 	.db #0x56
   0F48 5E                 3542 	.db #0x5E
   0F49 01                 3543 	.db #0x01
   0F4A 0A                 3544 	.db #0x0A
   0F4B 12                 3545 	.db #0x12
   0F4C 1A                 3546 	.db #0x1A
   0F4D 23                 3547 	.db #0x23
   0F4E 2B                 3548 	.db #0x2B
   0F4F 33                 3549 	.db #0x33
   0F50 3C                 3550 	.db #0x3C
   0F51 44                 3551 	.db #0x44
   0F52 4C                 3552 	.db #0x4C
   0F53 56                 3553 	.db #0x56
   0F54 5E                 3554 	.db #0x5E
   0F55 67                 3555 	.db #0x67
   0F56 00                 3556 	.db #0x00
   0F57 00                 3557 	.db #0x00
   0F58 00                 3558 	.db #0x00
   0F59 00                 3559 	.db #0x00
   0F5A 00                 3560 	.db #0x00
   0F5B 00                 3561 	.db #0x00
   0F5C 01                 3562 	.db #0x01
   0F5D 09                 3563 	.db #0x09
   0F5E 11                 3564 	.db #0x11
   0F5F 18                 3565 	.db #0x18
   0F60 20                 3566 	.db #0x20
   0F61 28                 3567 	.db #0x28
   0F62 2F                 3568 	.db #0x2F
   0F63 37                 3569 	.db #0x37
   0F64 3F                 3570 	.db #0x3F
   0F65 45                 3571 	.db #0x45
   0F66 4C                 3572 	.db #0x4C
   0F67 54                 3573 	.db #0x54
   0F68 5A                 3574 	.db #0x5A
   0F69 64                 3575 	.db #0x64
   0F6A 01                 3576 	.db #0x01
   0F6B 09                 3577 	.db #0x09
   0F6C 11                 3578 	.db #0x11
   0F6D 19                 3579 	.db #0x19
   0F6E 21                 3580 	.db #0x21
   0F6F 29                 3581 	.db #0x29
   0F70 30                 3582 	.db #0x30
   0F71 38                 3583 	.db #0x38
   0F72 40                 3584 	.db #0x40
   0F73 4A                 3585 	.db #0x4A
   0F74 52                 3586 	.db #0x52
   0F75 5A                 3587 	.db #0x5A
   0F76 00                 3588 	.db 0x00
   0F77 00                 3589 	.db 0x00
   0F78 00                 3590 	.db 0x00
   0F79 00                 3591 	.db 0x00
   0F7A 00                 3592 	.db 0x00
   0F7B 00                 3593 	.db 0x00
   0F7C                    3594 _font_y:
   0F7C 1C                 3595 	.db #0x1C
   0F7D 1C                 3596 	.db #0x1C
   0F7E 1C                 3597 	.db #0x1C
   0F7F 1C                 3598 	.db #0x1C
   0F80 1C                 3599 	.db #0x1C
   0F81 1C                 3600 	.db #0x1C
   0F82 1C                 3601 	.db #0x1C
   0F83 1C                 3602 	.db #0x1C
   0F84 1C                 3603 	.db #0x1C
   0F85 1C                 3604 	.db #0x1C
   0F86 1C                 3605 	.db #0x1C
   0F87 1C                 3606 	.db #0x1C
   0F88 1C                 3607 	.db #0x1C
   0F89 25                 3608 	.db #0x25
   0F8A 25                 3609 	.db #0x25
   0F8B 25                 3610 	.db #0x25
   0F8C 25                 3611 	.db #0x25
   0F8D 25                 3612 	.db #0x25
   0F8E 25                 3613 	.db #0x25
   0F8F 25                 3614 	.db #0x25
   0F90 25                 3615 	.db #0x25
   0F91 25                 3616 	.db #0x25
   0F92 25                 3617 	.db #0x25
   0F93 25                 3618 	.db #0x25
   0F94 25                 3619 	.db #0x25
   0F95 25                 3620 	.db #0x25
   0F96 00                 3621 	.db #0x00
   0F97 00                 3622 	.db #0x00
   0F98 00                 3623 	.db #0x00
   0F99 00                 3624 	.db #0x00
   0F9A 00                 3625 	.db #0x00
   0F9B 00                 3626 	.db #0x00
   0F9C 37                 3627 	.db #0x37
   0F9D 37                 3628 	.db #0x37
   0F9E 37                 3629 	.db #0x37
   0F9F 37                 3630 	.db #0x37
   0FA0 37                 3631 	.db #0x37
   0FA1 37                 3632 	.db #0x37
   0FA2 37                 3633 	.db #0x37
   0FA3 37                 3634 	.db #0x37
   0FA4 37                 3635 	.db #0x37
   0FA5 37                 3636 	.db #0x37
   0FA6 37                 3637 	.db #0x37
   0FA7 37                 3638 	.db #0x37
   0FA8 37                 3639 	.db #0x37
   0FA9 37                 3640 	.db #0x37
   0FAA 40                 3641 	.db #0x40
   0FAB 40                 3642 	.db #0x40
   0FAC 40                 3643 	.db #0x40
   0FAD 40                 3644 	.db #0x40
   0FAE 40                 3645 	.db #0x40
   0FAF 40                 3646 	.db #0x40
   0FB0 40                 3647 	.db #0x40
   0FB1 40                 3648 	.db #0x40
   0FB2 40                 3649 	.db #0x40
   0FB3 40                 3650 	.db #0x40
   0FB4 40                 3651 	.db #0x40
   0FB5 40                 3652 	.db #0x40
   0FB6 00                 3653 	.db 0x00
   0FB7 00                 3654 	.db 0x00
   0FB8 00                 3655 	.db 0x00
   0FB9 00                 3656 	.db 0x00
   0FBA 00                 3657 	.db 0x00
   0FBB 00                 3658 	.db 0x00
   0FBC                    3659 _font_w:
   0FBC 07                 3660 	.db #0x07
   0FBD 07                 3661 	.db #0x07
   0FBE 07                 3662 	.db #0x07
   0FBF 07                 3663 	.db #0x07
   0FC0 07                 3664 	.db #0x07
   0FC1 07                 3665 	.db #0x07
   0FC2 07                 3666 	.db #0x07
   0FC3 07                 3667 	.db #0x07
   0FC4 04                 3668 	.db #0x04
   0FC5 07                 3669 	.db #0x07
   0FC6 07                 3670 	.db #0x07
   0FC7 07                 3671 	.db #0x07
   0FC8 09                 3672 	.db #0x09
   0FC9 08                 3673 	.db #0x08
   0FCA 07                 3674 	.db #0x07
   0FCB 07                 3675 	.db #0x07
   0FCC 08                 3676 	.db #0x08
   0FCD 07                 3677 	.db #0x07
   0FCE 07                 3678 	.db #0x07
   0FCF 08                 3679 	.db #0x08
   0FD0 07                 3680 	.db #0x07
   0FD1 07                 3681 	.db #0x07
   0FD2 09                 3682 	.db #0x09
   0FD3 07                 3683 	.db #0x07
   0FD4 08                 3684 	.db #0x08
   0FD5 07                 3685 	.db #0x07
   0FD6 00                 3686 	.db #0x00
   0FD7 00                 3687 	.db #0x00
   0FD8 00                 3688 	.db #0x00
   0FD9 00                 3689 	.db #0x00
   0FDA 00                 3690 	.db #0x00
   0FDB 00                 3691 	.db #0x00
   0FDC 07                 3692 	.db #0x07
   0FDD 07                 3693 	.db #0x07
   0FDE 06                 3694 	.db #0x06
   0FDF 07                 3695 	.db #0x07
   0FE0 07                 3696 	.db #0x07
   0FE1 07                 3697 	.db #0x07
   0FE2 07                 3698 	.db #0x07
   0FE3 07                 3699 	.db #0x07
   0FE4 05                 3700 	.db #0x05
   0FE5 06                 3701 	.db #0x06
   0FE6 07                 3702 	.db #0x07
   0FE7 05                 3703 	.db #0x05
   0FE8 09                 3704 	.db #0x09
   0FE9 07                 3705 	.db #0x07
   0FEA 07                 3706 	.db #0x07
   0FEB 07                 3707 	.db #0x07
   0FEC 07                 3708 	.db #0x07
   0FED 07                 3709 	.db #0x07
   0FEE 07                 3710 	.db #0x07
   0FEF 06                 3711 	.db #0x06
   0FF0 07                 3712 	.db #0x07
   0FF1 07                 3713 	.db #0x07
   0FF2 09                 3714 	.db #0x09
   0FF3 07                 3715 	.db #0x07
   0FF4 07                 3716 	.db #0x07
   0FF5 07                 3717 	.db #0x07
   0FF6 00                 3718 	.db 0x00
   0FF7 00                 3719 	.db 0x00
   0FF8 00                 3720 	.db 0x00
   0FF9 00                 3721 	.db 0x00
   0FFA 00                 3722 	.db 0x00
   0FFB 00                 3723 	.db 0x00
                           3724 ;demo.c:494: void do_letter_tall(char cc) {
                           3725 ;	---------------------------------
                           3726 ; Function do_letter_tall
                           3727 ; ---------------------------------
   0FFC                    3728 _do_letter_tall_start::
   0FFC                    3729 _do_letter_tall:
   0FFC DD E5              3730 	push	ix
   0FFE DD 21 00 00        3731 	ld	ix,#0
   1002 DD 39              3732 	add	ix,sp
   1004 F5                 3733 	push	af
                           3734 ;demo.c:495: int cidx = cc - 65;
   1005 DD 4E 04           3735 	ld	c,4 (ix)
   1008 DD 7E 04           3736 	ld	a,4 (ix)
   100B 17                 3737 	rla	
   100C 9F                 3738 	sbc	a,a
   100D 47                 3739 	ld	b,a
   100E 79                 3740 	ld	a,c
   100F C6 BF              3741 	add	a,#0xBF
   1011 DD 77 FE           3742 	ld	-2 (ix),a
   1014 78                 3743 	ld	a,b
   1015 CE FF              3744 	adc	a,#0xFF
   1017 DD 77 FF           3745 	ld	-1 (ix),a
                           3746 ;demo.c:496: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3747 	ld	a,#<_font_x
   101C DD 86 FE           3748 	add	a,-2 (ix)
   101F 5F                 3749 	ld	e,a
   1020 3Es0F              3750 	ld	a,#>_font_x
   1022 DD 8E FF           3751 	adc	a,-1 (ix)
   1025 57                 3752 	ld	d,a
   1026 1A                 3753 	ld	a,(de)
   1027 5F                 3754 	ld	e,a
   1028 16 00              3755 	ld	d,#0x00
   102A 21 7F 00           3756 	ld	hl,#0x007F
   102D 19                 3757 	add	hl,de
   102E EB                 3758 	ex	de,hl
   102F 21r04s41           3759 	ld	hl,#_cmd
   1032 73                 3760 	ld	(hl),e
   1033 23                 3761 	inc	hl
   1034 72                 3762 	ld	(hl),d
                           3763 ;demo.c:497: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r06s41           3764 	ld	de,#_cmd + 2
   1038 3Er7C              3765 	ld	a,#<_font_y
   103A DD 86 FE           3766 	add	a,-2 (ix)
   103D 4F                 3767 	ld	c,a
   103E 3Es0F              3768 	ld	a,#>_font_y
   1040 DD 8E FF           3769 	adc	a,-1 (ix)
   1043 47                 3770 	ld	b,a
   1044 0A                 3771 	ld	a,(bc)
   1045 4F                 3772 	ld	c,a
   1046 06 00              3773 	ld	b,#0x00
   1048 21 FF 01           3774 	ld	hl,#0x01FF
   104B 09                 3775 	add	hl,bc
   104C 4D                 3776 	ld	c,l
   104D 44                 3777 	ld	b,h
   104E EB                 3778 	ex	de,hl
   104F 71                 3779 	ld	(hl),c
   1050 23                 3780 	inc	hl
   1051 70                 3781 	ld	(hl),b
                           3782 ;demo.c:498: cmd.dest_x = lx;
   1052 01r08s41           3783 	ld	bc,#_cmd + 4
   1055 21r4Es41           3784 	ld	hl,#_lx + 0
   1058 5E                 3785 	ld	e,(hl)
   1059 16 00              3786 	ld	d,#0x00
   105B 69                 3787 	ld	l,c
   105C 60                 3788 	ld	h,b
   105D 73                 3789 	ld	(hl),e
   105E 23                 3790 	inc	hl
   105F 72                 3791 	ld	(hl),d
                           3792 ;demo.c:499: cmd.dest_y = ly;
   1060 01r0As41           3793 	ld	bc,#_cmd + 6
   1063 21r4Fs41           3794 	ld	hl,#_ly + 0
   1066 5E                 3795 	ld	e,(hl)
   1067 16 00              3796 	ld	d,#0x00
   1069 69                 3797 	ld	l,c
   106A 60                 3798 	ld	h,b
   106B 73                 3799 	ld	(hl),e
   106C 23                 3800 	inc	hl
   106D 72                 3801 	ld	(hl),d
                           3802 ;demo.c:500: cmd.size_x = font_w[cidx];
   106E 01r0Cs41           3803 	ld	bc,#_cmd + 8
   1071 3ErBC              3804 	ld	a,#<_font_w
   1073 DD 86 FE           3805 	add	a,-2 (ix)
   1076 5F                 3806 	ld	e,a
   1077 3Es0F              3807 	ld	a,#>_font_w
   1079 DD 8E FF           3808 	adc	a,-1 (ix)
   107C 57                 3809 	ld	d,a
   107D 1A                 3810 	ld	a,(de)
   107E 5F                 3811 	ld	e,a
   107F 16 00              3812 	ld	d,#0x00
   1081 69                 3813 	ld	l,c
   1082 60                 3814 	ld	h,b
   1083 73                 3815 	ld	(hl),e
   1084 23                 3816 	inc	hl
   1085 72                 3817 	ld	(hl),d
                           3818 ;demo.c:501: cmd.size_y = 10;
   1086 21r0Es41           3819 	ld	hl, #_cmd + 10
   1089 36 0A              3820 	ld	(hl),#0x0A
   108B 23                 3821 	inc	hl
   108C 36 00              3822 	ld	(hl),#0x00
                           3823 ;demo.c:502: cmd.argument = 0x00;
   108E 3E 00              3824 	ld	a,#0x00
   1090 32r11s41           3825 	ld	(#_cmd + 13),a
                           3826 ;demo.c:503: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3827 	ld	a,#0x90
   1095 32r12s41           3828 	ld	(#_cmd + 14),a
                           3829 ;demo.c:504: vdp_copier(&cmd);
   1098 21r04s41           3830 	ld	hl,#_cmd
   109B E5                 3831 	push	hl
   109C CDr00s00           3832 	call	_vdp_copier
   109F F1                 3833 	pop	af
                           3834 ;demo.c:505: lx+=font_w[cidx]-1;
   10A0 3ErBC              3835 	ld	a,#<_font_w
   10A2 DD 86 FE           3836 	add	a,-2 (ix)
   10A5 4F                 3837 	ld	c,a
   10A6 3Es0F              3838 	ld	a,#>_font_w
   10A8 DD 8E FF           3839 	adc	a,-1 (ix)
   10AB 47                 3840 	ld	b,a
   10AC 0A                 3841 	ld	a,(bc)
   10AD 4F                 3842 	ld	c,a
   10AE 0D                 3843 	dec	c
   10AF 21r4Es41           3844 	ld	hl,#_lx
   10B2 7E                 3845 	ld	a,(hl)
   10B3 81                 3846 	add	a,c
   10B4 77                 3847 	ld	(hl),a
   10B5 DD F9              3848 	ld	sp,ix
   10B7 DD E1              3849 	pop	ix
   10B9 C9                 3850 	ret
   10BA                    3851 _do_letter_tall_end::
                           3852 ;demo.c:508: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3853 ;	---------------------------------
                           3854 ; Function drawstr
                           3855 ; ---------------------------------
   10BA                    3856 _drawstr_start::
   10BA                    3857 _drawstr:
   10BA DD E5              3858 	push	ix
   10BC DD 21 00 00        3859 	ld	ix,#0
   10C0 DD 39              3860 	add	ix,sp
                           3861 ;demo.c:509: char* c = str;
   10C2 DD 4E 04           3862 	ld	c,4 (ix)
   10C5 DD 46 05           3863 	ld	b,5 (ix)
                           3864 ;demo.c:510: lx = x;
   10C8 DD 5E 06           3865 	ld	e,6 (ix)
   10CB 21r4Es41           3866 	ld	hl,#_lx + 0
   10CE 73                 3867 	ld	(hl), e
                           3868 ;demo.c:511: ly = y;
   10CF DD 7E 07           3869 	ld	a,7 (ix)
   10D2 21r4Fs41           3870 	ld	hl,#_ly + 0
   10D5 77                 3871 	ld	(hl), a
                           3872 ;demo.c:512: while (*c) {
   10D6                    3873 00107$:
   10D6 0A                 3874 	ld	a,(bc)
   10D7 57                 3875 	ld	d,a
   10D8 B7                 3876 	or	a,a
   10D9 28 42              3877 	jr	Z,00110$
                           3878 ;demo.c:513: char ltr = *c++; 
   10DB 03                 3879 	inc	bc
                           3880 ;demo.c:514: if (ltr == ' ') lx+=4;
   10DC 7A                 3881 	ld	a,d
   10DD D6 20              3882 	sub	a,#0x20
   10DF 20 1E              3883 	jr	NZ,00105$
   10E1 FD 21r4Es41        3884 	ld	iy,#_lx
   10E5 FD 34 00           3885 	inc	0 (iy)
   10E8 FD 21r4Es41        3886 	ld	iy,#_lx
   10EC FD 34 00           3887 	inc	0 (iy)
   10EF FD 21r4Es41        3888 	ld	iy,#_lx
   10F3 FD 34 00           3889 	inc	0 (iy)
   10F6 FD 21r4Es41        3890 	ld	iy,#_lx
   10FA FD 34 00           3891 	inc	0 (iy)
   10FD 18 D7              3892 	jr	00107$
   10FF                    3893 00105$:
                           3894 ;demo.c:515: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 3895 	ld	a,d
   1100 D6 5F              3896 	sub	a,#0x5F
   1102 20 0D              3897 	jr	NZ,00102$
   1104 21r4Fs41           3898 	ld	hl,#_ly
   1107 7E                 3899 	ld	a,(hl)
   1108 C6 09              3900 	add	a,#0x09
   110A 77                 3901 	ld	(hl),a
   110B 21r4Es41           3902 	ld	hl,#_lx + 0
   110E 73                 3903 	ld	(hl), e
   110F 18 C5              3904 	jr	00107$
   1111                    3905 00102$:
                           3906 ;demo.c:516: else do_letter(ltr);
   1111 C5                 3907 	push	bc
   1112 D5                 3908 	push	de
   1113 D5                 3909 	push	de
   1114 33                 3910 	inc	sp
   1115 CDr7Es0E           3911 	call	_do_letter
   1118 33                 3912 	inc	sp
   1119 D1                 3913 	pop	de
   111A C1                 3914 	pop	bc
   111B 18 B9              3915 	jr	00107$
   111D                    3916 00110$:
   111D DD E1              3917 	pop	ix
   111F C9                 3918 	ret
   1120                    3919 _drawstr_end::
                           3920 ;demo.c:520: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3921 ;	---------------------------------
                           3922 ; Function drawsine
                           3923 ; ---------------------------------
   1120                    3924 _drawsine_start::
   1120                    3925 _drawsine:
   1120 DD E5              3926 	push	ix
   1122 DD 21 00 00        3927 	ld	ix,#0
   1126 DD 39              3928 	add	ix,sp
   1128 3B                 3929 	dec	sp
                           3930 ;demo.c:521: char* c = str;
   1129 DD 4E 04           3931 	ld	c,4 (ix)
   112C DD 46 05           3932 	ld	b,5 (ix)
                           3933 ;demo.c:522: lx = x;
   112F DD 7E 06           3934 	ld	a,6 (ix)
   1132 21r4Es41           3935 	ld	hl,#_lx + 0
   1135 77                 3936 	ld	(hl), a
                           3937 ;demo.c:524: while (*c) {
   1136                    3938 00104$:
   1136 0A                 3939 	ld	a,(bc)
   1137 5F                 3940 	ld	e,a
   1138 B7                 3941 	or	a,a
   1139 CArADs11           3942 	jp	Z,00107$
                           3943 ;demo.c:525: char ltr = *c++; 
   113C 03                 3944 	inc	bc
   113D DD 73 FF           3945 	ld	-1 (ix),e
                           3946 ;demo.c:526: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21r4Es41           3947 	ld	hl,#_lx + 0
   1143 5E                 3948 	ld	e,(hl)
   1144 16 00              3949 	ld	d,#0x00
   1146 21r00s41           3950 	ld	hl,#_vbicount
   1149 7B                 3951 	ld	a,e
   114A 86                 3952 	add	a,(hl)
   114B 5F                 3953 	ld	e,a
   114C 7A                 3954 	ld	a,d
   114D 23                 3955 	inc	hl
   114E 8E                 3956 	adc	a,(hl)
   114F 57                 3957 	ld	d,a
   1150 CB 2A              3958 	sra	d
   1152 CB 1B              3959 	rr	e
   1154 16 00              3960 	ld	d,#0x00
   1156 CB 23              3961 	sla	e
   1158 CB 12              3962 	rl	d
   115A 21r2Cs00           3963 	ld	hl,#_sintabx
   115D 19                 3964 	add	hl,de
   115E 5E                 3965 	ld	e,(hl)
   115F 23                 3966 	inc	hl
   1160 56                 3967 	ld	d,(hl)
   1161 CB 3A              3968 	srl	d
   1163 CB 1B              3969 	rr	e
   1165 CB 3A              3970 	srl	d
   1167 CB 1B              3971 	rr	e
   1169 CB 3A              3972 	srl	d
   116B CB 1B              3973 	rr	e
   116D CB 3A              3974 	srl	d
   116F CB 1B              3975 	rr	e
   1171 21r4Fs41           3976 	ld	hl,#_ly
   1174 DD 7E 07           3977 	ld	a,7 (ix)
   1177 83                 3978 	add	a,e
   1178 77                 3979 	ld	(hl),a
                           3980 ;demo.c:527: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           3981 	ld	a,-1 (ix)
   117C D6 20              3982 	sub	a,#0x20
   117E 20 1F              3983 	jr	NZ,00102$
   1180 FD 21r4Es41        3984 	ld	iy,#_lx
   1184 FD 34 00           3985 	inc	0 (iy)
   1187 FD 21r4Es41        3986 	ld	iy,#_lx
   118B FD 34 00           3987 	inc	0 (iy)
   118E FD 21r4Es41        3988 	ld	iy,#_lx
   1192 FD 34 00           3989 	inc	0 (iy)
   1195 FD 21r4Es41        3990 	ld	iy,#_lx
   1199 FD 34 00           3991 	inc	0 (iy)
   119C C3r36s11           3992 	jp	00104$
   119F                    3993 00102$:
                           3994 ;demo.c:528: else do_letter_tall(ltr);
   119F C5                 3995 	push	bc
   11A0 DD 7E FF           3996 	ld	a,-1 (ix)
   11A3 F5                 3997 	push	af
   11A4 33                 3998 	inc	sp
   11A5 CDrFCs0F           3999 	call	_do_letter_tall
   11A8 33                 4000 	inc	sp
   11A9 C1                 4001 	pop	bc
   11AA C3r36s11           4002 	jp	00104$
   11AD                    4003 00107$:
   11AD DD F9              4004 	ld	sp,ix
   11AF DD E1              4005 	pop	ix
   11B1 C9                 4006 	ret
   11B2                    4007 _drawsine_end::
                           4008 ;demo.c:532: void font() {
                           4009 ;	---------------------------------
                           4010 ; Function font
                           4011 ; ---------------------------------
   11B2                    4012 _font_start::
   11B2                    4013 _font:
                           4014 ;demo.c:534: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           4015 	ld	hl,#0x3C4A
   11B5 E5                 4016 	push	hl
   11B6 21rC0s11           4017 	ld	hl,#__str_8
   11B9 E5                 4018 	push	hl
   11BA CDrBAs10           4019 	call	_drawstr
   11BD F1                 4020 	pop	af
   11BE F1                 4021 	pop	af
   11BF C9                 4022 	ret
   11C0                    4023 _font_end::
   11C0                    4024 __str_8:
   11C0 44 49 47 49 54 41  4025 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  4026 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 4027 	.db 0x00
                           4028 ;demo.c:543: void twister() {
                           4029 ;	---------------------------------
                           4030 ; Function twister
                           4031 ; ---------------------------------
   1223                    4032 _twister_start::
   1223                    4033 _twister:
   1223 DD E5              4034 	push	ix
   1225 DD 21 00 00        4035 	ld	ix,#0
   1229 DD 39              4036 	add	ix,sp
   122B F5                 4037 	push	af
                           4038 ;demo.c:547: if (twinited == 0) {
   122C 3Ar52s41           4039 	ld	a,(#_twinited+0)
   122F FD 21r52s41        4040 	ld	iy,#_twinited
   1233 FD B6 01           4041 	or	a,1 (iy)
   1236 C2rA6s12           4042 	jp	NZ,00102$
                           4043 ;demo.c:548: cmd.size_x = 256;
   1239 21r0Cs41           4044 	ld	hl, #_cmd + 8
   123C 36 00              4045 	ld	(hl),#0x00
   123E 23                 4046 	inc	hl
   123F 36 01              4047 	ld	(hl),#0x01
                           4048 ;demo.c:549: cmd.size_y = 1;
   1241 21r0Es41           4049 	ld	hl, #_cmd + 10
   1244 36 01              4050 	ld	(hl),#0x01
   1246 23                 4051 	inc	hl
   1247 36 00              4052 	ld	(hl),#0x00
                           4053 ;demo.c:550: cmd.data = 0;
                           4054 ;demo.c:551: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4055 	ld	a,#0x00
   124B 32r10s41           4056 	ld	(#_cmd + 12),a
   124E 32r11s41           4057 	ld	(#_cmd + 13),a
                           4058 ;demo.c:552: cmd.command = 0xd0; // vram to vram, y only
   1251 01r12s41           4059 	ld	bc,#_cmd + 14
   1254 3E D0              4060 	ld	a,#0xD0
   1256 02                 4061 	ld	(bc),a
                           4062 ;demo.c:553: cmd.source_x = 0;
   1257 21r04s41           4063 	ld	hl,#_cmd
   125A 36 00              4064 	ld	(hl),#0x00
   125C 23                 4065 	inc	hl
   125D 36 00              4066 	ld	(hl),#0x00
                           4067 ;demo.c:554: cmd.dest_x = 0;
   125F 21r08s41           4068 	ld	hl, #_cmd + 4
   1262 36 00              4069 	ld	(hl),#0x00
   1264 23                 4070 	inc	hl
   1265 36 00              4071 	ld	(hl),#0x00
                           4072 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4073 	ld	bc,#0x0000
   126A                    4074 00103$:
   126A 79                 4075 	ld	a,c
   126B D6 D4              4076 	sub	a,#0xD4
   126D 78                 4077 	ld	a,b
   126E DE 00              4078 	sbc	a,#0x00
   1270 F2r91s12           4079 	jp	P,00106$
                           4080 ;demo.c:557: waitVB();
   1273 76                 4081 		halt 
                           4082 ;demo.c:558: cmd.source_y = 0;
   1274 11r06s41           4083 	ld	de,#_cmd + 2
   1277 EB                 4084 	ex	de,hl
   1278 36 00              4085 	ld	(hl),#0x00
   127A 23                 4086 	inc	hl
   127B 36 00              4087 	ld	(hl),#0x00
                           4088 ;demo.c:559: cmd.dest_y = y;
   127D 11r0As41           4089 	ld	de,#_cmd + 6
   1280 EB                 4090 	ex	de,hl
   1281 71                 4091 	ld	(hl),c
   1282 23                 4092 	inc	hl
   1283 70                 4093 	ld	(hl),b
                           4094 ;demo.c:560: vdp_copier(&cmd);
   1284 C5                 4095 	push	bc
   1285 21r04s41           4096 	ld	hl,#_cmd
   1288 E5                 4097 	push	hl
   1289 CDr00s00           4098 	call	_vdp_copier
   128C F1                 4099 	pop	af
   128D C1                 4100 	pop	bc
                           4101 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   128E 03                 4102 	inc	bc
   128F 18 D9              4103 	jr	00103$
   1291                    4104 00106$:
                           4105 ;demo.c:564: twinited = 1;
   1291 21r52s41           4106 	ld	hl,#_twinited + 0
   1294 36 01              4107 	ld	(hl), #0x01
   1296 21r53s41           4108 	ld	hl,#_twinited + 1
   1299 36 00              4109 	ld	(hl), #0x00
                           4110 ;demo.c:565: vdp_load_palette(twister_palette);
   129B 21rA0s40           4111 	ld	hl,#_twister_palette
   129E E5                 4112 	push	hl
   129F CDr00s00           4113 	call	_vdp_load_palette
   12A2 F1                 4114 	pop	af
                           4115 ;demo.c:566: font();
   12A3 CDrB2s11           4116 	call	_font
   12A6                    4117 00102$:
                           4118 ;demo.c:569: cmd.size_x = 70;
   12A6 21r0Cs41           4119 	ld	hl, #_cmd + 8
   12A9 36 46              4120 	ld	(hl),#0x46
   12AB 23                 4121 	inc	hl
   12AC 36 00              4122 	ld	(hl),#0x00
                           4123 ;demo.c:570: cmd.size_y = 2;
   12AE 21r0Es41           4124 	ld	hl, #_cmd + 10
   12B1 36 02              4125 	ld	(hl),#0x02
   12B3 23                 4126 	inc	hl
   12B4 36 00              4127 	ld	(hl),#0x00
                           4128 ;demo.c:571: cmd.data = 0;
   12B6 3E 00              4129 	ld	a,#0x00
   12B8 32r10s41           4130 	ld	(#_cmd + 12),a
                           4131 ;demo.c:572: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4132 	ld	a,#0x04
   12BD 32r11s41           4133 	ld	(#_cmd + 13),a
                           4134 ;demo.c:573: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r12s41           4135 	ld	bc,#_cmd + 14
   12C3 3E E0              4136 	ld	a,#0xE0
   12C5 02                 4137 	ld	(bc),a
                           4138 ;demo.c:574: cmd.source_x = 70;
   12C6 21r04s41           4139 	ld	hl,#_cmd
   12C9 36 46              4140 	ld	(hl),#0x46
   12CB 23                 4141 	inc	hl
   12CC 36 00              4142 	ld	(hl),#0x00
                           4143 ;demo.c:575: cmd.dest_x = 70;
   12CE 21r08s41           4144 	ld	hl, #_cmd + 4
   12D1 36 46              4145 	ld	(hl),#0x46
   12D3 23                 4146 	inc	hl
   12D4 36 00              4147 	ld	(hl),#0x00
                           4148 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4149 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4150 	ld	-1 (ix),#0x00
   12DE                    4151 00107$:
   12DE DD 7E FE           4152 	ld	a,-2 (ix)
   12E1 D6 D4              4153 	sub	a,#0xD4
   12E3 DD 7E FF           4154 	ld	a,-1 (ix)
   12E6 DE 00              4155 	sbc	a,#0x00
   12E8 F2r41s13           4156 	jp	P,00110$
                           4157 ;demo.c:578: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r06s41           4158 	ld	de,#_cmd + 2
   12EE DD 4E FE           4159 	ld	c,-2 (ix)
   12F1 DD 46 FF           4160 	ld	b,-1 (ix)
   12F4 CB 28              4161 	sra	b
   12F6 CB 19              4162 	rr	c
   12F8 3Ar50s41           4163 	ld	a,(#_ff+0)
   12FB 81                 4164 	add	a,c
   12FC 4F                 4165 	ld	c,a
   12FD 3Ar51s41           4166 	ld	a,(#_ff+1)
   1300 88                 4167 	adc	a,b
   1301 06 00              4168 	ld	b,#0x00
   1303 21r00s00           4169 	ld	hl,#_sintab
   1306 09                 4170 	add	hl,bc
   1307 7E                 4171 	ld	a,(hl)
   1308 4F                 4172 	ld	c,a
   1309 CB 29              4173 	sra	c
   130B 79                 4174 	ld	a,c
   130C 17                 4175 	rla	
   130D 9F                 4176 	sbc	a,a
   130E 47                 4177 	ld	b,a
   130F 21 40 02           4178 	ld	hl,#0x0240
   1312 09                 4179 	add	hl,bc
   1313 4D                 4180 	ld	c,l
   1314 44                 4181 	ld	b,h
   1315 6B                 4182 	ld	l,e
   1316 62                 4183 	ld	h,d
   1317 71                 4184 	ld	(hl),c
   1318 23                 4185 	inc	hl
   1319 70                 4186 	ld	(hl),b
                           4187 ;demo.c:579: cmd.dest_y = y;
   131A 21r0As41           4188 	ld	hl, #_cmd + 6
   131D DD 7E FE           4189 	ld	a,-2 (ix)
   1320 77                 4190 	ld	(hl),a
   1321 23                 4191 	inc	hl
   1322 DD 7E FF           4192 	ld	a,-1 (ix)
   1325 77                 4193 	ld	(hl),a
                           4194 ;demo.c:580: vdp_copier(&cmd);
   1326 21r04s41           4195 	ld	hl,#_cmd
   1329 E5                 4196 	push	hl
   132A CDr00s00           4197 	call	_vdp_copier
   132D F1                 4198 	pop	af
                           4199 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4200 	ld	a,-2 (ix)
   1331 C6 02              4201 	add	a,#0x02
   1333 DD 77 FE           4202 	ld	-2 (ix),a
   1336 DD 7E FF           4203 	ld	a,-1 (ix)
   1339 CE 00              4204 	adc	a,#0x00
   133B DD 77 FF           4205 	ld	-1 (ix),a
   133E C3rDEs12           4206 	jp	00107$
   1341                    4207 00110$:
                           4208 ;demo.c:584: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21r50s41           4209 	ld	hl,#_ff + 0
   1344 4E                 4210 	ld	c,(hl)
   1345 21r51s41           4211 	ld	hl,#_ff + 1
   1348 46                 4212 	ld	b,(hl)
   1349 CB 28              4213 	sra	b
   134B CB 19              4214 	rr	c
   134D CB 28              4215 	sra	b
   134F CB 19              4216 	rr	c
   1351 21r50s41           4217 	ld	hl,#_ff + 0
   1354 5E                 4218 	ld	e,(hl)
   1355 21r51s41           4219 	ld	hl,#_ff + 1
   1358 56                 4220 	ld	d,(hl)
   1359 CB 2A              4221 	sra	d
   135B CB 1B              4222 	rr	e
   135D CB 2A              4223 	sra	d
   135F CB 1B              4224 	rr	e
   1361 CB 2A              4225 	sra	d
   1363 CB 1B              4226 	rr	e
   1365 43                 4227 	ld	b,e
   1366 79                 4228 	ld	a,c
   1367 F5                 4229 	push	af
   1368 33                 4230 	inc	sp
   1369 C5                 4231 	push	bc
   136A 33                 4232 	inc	sp
   136B 41                 4233 	ld	b,c
   136C 0E 04              4234 	ld	c,#0x04
   136E C5                 4235 	push	bc
   136F CDr00s00           4236 	call	_msx2_palette
   1372 F1                 4237 	pop	af
   1373 F1                 4238 	pop	af
                           4239 ;demo.c:586: ff+=4;
   1374 21r50s41           4240 	ld	hl,#_ff
   1377 7E                 4241 	ld	a,(hl)
   1378 C6 04              4242 	add	a,#0x04
   137A 23                 4243 	inc	hl
   137B 2B                 4244 	dec	hl
   137C C5                 4245 	push	bc
   137D 4F                 4246 	ld	c, a
   137E 23                 4247 	inc	hl
   137F 7E                 4248 	ld	a, (hl)
   1380 47                 4249 	ld	b, a
   1381 79                 4250 	ld	a, c
   1382 2B                 4251 	dec	hl
   1383 77                 4252 	ld	(hl), a
   1384 78                 4253 	ld	a, b
   1385 C1                 4254 	pop	bc
   1386 CE 00              4255 	adc	a,#0x00
   1388 23                 4256 	inc	hl
   1389 77                 4257 	ld	(hl),a
   138A DD F9              4258 	ld	sp,ix
   138C DD E1              4259 	pop	ix
   138E C9                 4260 	ret
   138F                    4261 _twister_end::
                           4262 ;demo.c:596: void bulbs() {
                           4263 ;	---------------------------------
                           4264 ; Function bulbs
                           4265 ; ---------------------------------
   138F                    4266 _bulbs_start::
   138F                    4267 _bulbs:
   138F DD E5              4268 	push	ix
   1391 DD 21 00 00        4269 	ld	ix,#0
   1395 DD 39              4270 	add	ix,sp
   1397 21 FA FF           4271 	ld	hl,#-6
   139A 39                 4272 	add	hl,sp
   139B F9                 4273 	ld	sp,hl
                           4274 ;demo.c:599: int sy = 16;
   139C 01 10 00           4275 	ld	bc,#0x0010
                           4276 ;demo.c:601: ender+=enderdir;
   139F 21r5Cs41           4277 	ld	hl,#_enderdir
   13A2 D5                 4278 	push	de
   13A3 FD 21r5As41        4279 	ld	iy,#_ender
   13A7 FD E5              4280 	push	iy
   13A9 D1                 4281 	pop	de
   13AA 1A                 4282 	ld	a,(de)
   13AB 86                 4283 	add	a,(hl)
   13AC 13                 4284 	inc	de
   13AD 1B                 4285 	dec	de
   13AE C5                 4286 	push	bc
   13AF 4F                 4287 	ld	c, a
   13B0 13                 4288 	inc	de
   13B1 1A                 4289 	ld	a, (de)
   13B2 47                 4290 	ld	b, a
   13B3 79                 4291 	ld	a, c
   13B4 1B                 4292 	dec	de
   13B5 12                 4293 	ld	(de), a
   13B6 78                 4294 	ld	a, b
   13B7 C1                 4295 	pop	bc
   13B8 23                 4296 	inc	hl
   13B9 8E                 4297 	adc	a,(hl)
   13BA 13                 4298 	inc	de
   13BB 12                 4299 	ld	(de),a
   13BC D1                 4300 	pop	de
                           4301 ;demo.c:602: if (ender < 2) enderdir = -enderdir;
   13BD 3Ar5As41           4302 	ld	a,(#_ender+0)
   13C0 D6 02              4303 	sub	a,#0x02
   13C2 3Ar5Bs41           4304 	ld	a,(#_ender+1)
   13C5 DE 00              4305 	sbc	a,#0x00
   13C7 F2rEBs13           4306 	jp	P,00102$
   13CA AF                 4307 	xor	a,a
   13CB FD 21r5Cs41        4308 	ld	iy,#_enderdir
   13CF 3E 00              4309 	ld	a,#0x00
   13D1 FD 9E 00           4310 	sbc	a,0 (iy)
   13D4 FD 21r5Cs41        4311 	ld	iy,#_enderdir
   13D8 FD 77 00           4312 	ld	0 (iy),a
   13DB FD 21r5Cs41        4313 	ld	iy,#_enderdir
   13DF 3E 00              4314 	ld	a,#0x00
   13E1 FD 9E 01           4315 	sbc	a,1 (iy)
   13E4 FD 21r5Cs41        4316 	ld	iy,#_enderdir
   13E8 FD 77 01           4317 	ld	1 (iy),a
   13EB                    4318 00102$:
                           4319 ;demo.c:603: if (ender >= 212) enderdir = -enderdir;
   13EB 3Ar5As41           4320 	ld	a,(#_ender+0)
   13EE D6 D4              4321 	sub	a,#0xD4
   13F0 3Ar5Bs41           4322 	ld	a,(#_ender+1)
   13F3 DE 00              4323 	sbc	a,#0x00
   13F5 FAr19s14           4324 	jp	M,00104$
   13F8 AF                 4325 	xor	a,a
   13F9 FD 21r5Cs41        4326 	ld	iy,#_enderdir
   13FD 3E 00              4327 	ld	a,#0x00
   13FF FD 9E 00           4328 	sbc	a,0 (iy)
   1402 FD 21r5Cs41        4329 	ld	iy,#_enderdir
   1406 FD 77 00           4330 	ld	0 (iy),a
   1409 FD 21r5Cs41        4331 	ld	iy,#_enderdir
   140D 3E 00              4332 	ld	a,#0x00
   140F FD 9E 01           4333 	sbc	a,1 (iy)
   1412 FD 21r5Cs41        4334 	ld	iy,#_enderdir
   1416 FD 77 01           4335 	ld	1 (iy),a
   1419                    4336 00104$:
                           4337 ;demo.c:605: enderend = ender + 92;
   1419 3Ar5As41           4338 	ld	a,(#_ender+0)
   141C C6 5C              4339 	add	a,#0x5C
   141E DD 77 FE           4340 	ld	-2 (ix),a
   1421 3Ar5Bs41           4341 	ld	a,(#_ender+1)
   1424 CE 00              4342 	adc	a,#0x00
   1426 DD 77 FF           4343 	ld	-1 (ix),a
                           4344 ;demo.c:607: if (enderend > 212) enderend = 212;
   1429 3E D4              4345 	ld	a,#0xD4
   142B DD 96 FE           4346 	sub	a,-2 (ix)
   142E 3E 00              4347 	ld	a,#0x00
   1430 DD 9E FF           4348 	sbc	a,-1 (ix)
   1433 F2r3Es14           4349 	jp	P,00106$
   1436 DD 36 FE D4        4350 	ld	-2 (ix),#0xD4
   143A DD 36 FF 00        4351 	ld	-1 (ix),#0x00
   143E                    4352 00106$:
                           4353 ;demo.c:608: if (enderend > 212-16) sy = 16-(212-enderend);
   143E 3E C4              4354 	ld	a,#0xC4
   1440 DD 96 FE           4355 	sub	a,-2 (ix)
   1443 3E 00              4356 	ld	a,#0x00
   1445 DD 9E FF           4357 	sbc	a,-1 (ix)
   1448 F2r5Fs14           4358 	jp	P,00108$
   144B 3E D4              4359 	ld	a,#0xD4
   144D DD 96 FE           4360 	sub	a,-2 (ix)
   1450 5F                 4361 	ld	e,a
   1451 3E 00              4362 	ld	a,#0x00
   1453 DD 9E FF           4363 	sbc	a,-1 (ix)
   1456 57                 4364 	ld	d,a
   1457 3E 10              4365 	ld	a,#0x10
   1459 93                 4366 	sub	a,e
   145A 4F                 4367 	ld	c,a
   145B 3E 00              4368 	ld	a,#0x00
   145D 9A                 4369 	sbc	a,d
   145E 47                 4370 	ld	b,a
   145F                    4371 00108$:
                           4372 ;demo.c:610: if(bulbflipper == 1) {
   145F 3Ar54s41           4373 	ld	a,(#_bulbflipper+0)
   1462 D6 01              4374 	sub	a,#0x01
   1464 20 06              4375 	jr	NZ,00133$
   1466 3Ar55s41           4376 	ld	a,(#_bulbflipper+1)
   1469 B7                 4377 	or	a,a
   146A 28 03              4378 	jr	Z,00134$
   146C                    4379 00133$:
   146C C3r24s15           4380 	jp	00110$
   146F                    4381 00134$:
                           4382 ;demo.c:611: cmd.size_x = 72;
   146F 11r0Cs41           4383 	ld	de,#_cmd + 8
   1472 EB                 4384 	ex	de,hl
   1473 36 48              4385 	ld	(hl),#0x48
   1475 23                 4386 	inc	hl
   1476 36 00              4387 	ld	(hl),#0x00
                           4388 ;demo.c:612: cmd.size_y = sy;
   1478 11r0Es41           4389 	ld	de,#_cmd + 10
   147B EB                 4390 	ex	de,hl
   147C 71                 4391 	ld	(hl),c
   147D 23                 4392 	inc	hl
   147E 70                 4393 	ld	(hl),b
                           4394 ;demo.c:613: cmd.data = 0;
   147F 11r10s41           4395 	ld	de,#_cmd + 12
   1482 3E 00              4396 	ld	a,#0x00
   1484 12                 4397 	ld	(de),a
                           4398 ;demo.c:614: cmd.argument = 0x04; // from 72xY to left
   1485 11r11s41           4399 	ld	de,#_cmd + 13
   1488 3E 04              4400 	ld	a,#0x04
   148A 12                 4401 	ld	(de),a
                           4402 ;demo.c:615: cmd.command = 0xe0; // vram to vram, y only
   148B 11r12s41           4403 	ld	de,#_cmd + 14
   148E 3E E0              4404 	ld	a,#0xE0
   1490 12                 4405 	ld	(de),a
                           4406 ;demo.c:616: cmd.source_x = 72;
   1491 21r04s41           4407 	ld	hl,#_cmd
   1494 36 48              4408 	ld	(hl),#0x48
   1496 23                 4409 	inc	hl
   1497 36 00              4410 	ld	(hl),#0x00
                           4411 ;demo.c:617: cmd.dest_x = 72;
   1499 11r08s41           4412 	ld	de,#_cmd + 4
   149C 6B                 4413 	ld	l,e
   149D 62                 4414 	ld	h,d
   149E 36 48              4415 	ld	(hl),#0x48
   14A0 23                 4416 	inc	hl
   14A1 36 00              4417 	ld	(hl),#0x00
                           4418 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14A3 ED 4Br5As41        4419 	ld	bc,(_ender)
   14A7 DD 71 FC           4420 	ld	-4 (ix),c
   14AA DD 70 FD           4421 	ld	-3 (ix),b
   14AD                    4422 00112$:
   14AD DD 7E FC           4423 	ld	a,-4 (ix)
   14B0 DD 96 FE           4424 	sub	a,-2 (ix)
   14B3 DD 7E FD           4425 	ld	a,-3 (ix)
   14B6 DD 9E FF           4426 	sbc	a,-1 (ix)
   14B9 F2r0Bs15           4427 	jp	P,00115$
                           4428 ;demo.c:620: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   14BC 01r06s41           4429 	ld	bc,#_cmd + 2
   14BF 3Ar56s41           4430 	ld	a,(#_ff1+0)
   14C2 DD 86 FC           4431 	add	a,-4 (ix)
   14C5 5F                 4432 	ld	e,a
   14C6 3Ar57s41           4433 	ld	a,(#_ff1+1)
   14C9 DD 8E FD           4434 	adc	a,-3 (ix)
   14CC 16 00              4435 	ld	d,#0x00
   14CE 21r00s00           4436 	ld	hl,#_sintab
   14D1 19                 4437 	add	hl,de
   14D2 5E                 4438 	ld	e,(hl)
   14D3 CB 2B              4439 	sra	e
   14D5 7B                 4440 	ld	a,e
   14D6 17                 4441 	rla	
   14D7 9F                 4442 	sbc	a,a
   14D8 57                 4443 	ld	d,a
   14D9 21 40 01           4444 	ld	hl,#0x0140
   14DC 19                 4445 	add	hl,de
   14DD EB                 4446 	ex	de,hl
   14DE 69                 4447 	ld	l,c
   14DF 60                 4448 	ld	h,b
   14E0 73                 4449 	ld	(hl),e
   14E1 23                 4450 	inc	hl
   14E2 72                 4451 	ld	(hl),d
                           4452 ;demo.c:621: cmd.dest_y = y;
   14E3 11r0As41           4453 	ld	de,#_cmd + 6
   14E6 EB                 4454 	ex	de,hl
   14E7 DD 7E FC           4455 	ld	a,-4 (ix)
   14EA 77                 4456 	ld	(hl),a
   14EB 23                 4457 	inc	hl
   14EC DD 7E FD           4458 	ld	a,-3 (ix)
   14EF 77                 4459 	ld	(hl),a
                           4460 ;demo.c:622: vdp_copier(&cmd);
   14F0 21r04s41           4461 	ld	hl,#_cmd
   14F3 E5                 4462 	push	hl
   14F4 CDr00s00           4463 	call	_vdp_copier
   14F7 F1                 4464 	pop	af
                           4465 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14F8 DD 7E FC           4466 	ld	a,-4 (ix)
   14FB C6 10              4467 	add	a,#0x10
   14FD DD 77 FC           4468 	ld	-4 (ix),a
   1500 DD 7E FD           4469 	ld	a,-3 (ix)
   1503 CE 00              4470 	adc	a,#0x00
   1505 DD 77 FD           4471 	ld	-3 (ix),a
   1508 C3rADs14           4472 	jp	00112$
   150B                    4473 00115$:
                           4474 ;demo.c:624: ff1+=4;
   150B 21r56s41           4475 	ld	hl,#_ff1
   150E 7E                 4476 	ld	a,(hl)
   150F C6 04              4477 	add	a,#0x04
   1511 23                 4478 	inc	hl
   1512 2B                 4479 	dec	hl
   1513 C5                 4480 	push	bc
   1514 4F                 4481 	ld	c, a
   1515 23                 4482 	inc	hl
   1516 7E                 4483 	ld	a, (hl)
   1517 47                 4484 	ld	b, a
   1518 79                 4485 	ld	a, c
   1519 2B                 4486 	dec	hl
   151A 77                 4487 	ld	(hl), a
   151B 78                 4488 	ld	a, b
   151C C1                 4489 	pop	bc
   151D CE 00              4490 	adc	a,#0x00
   151F 23                 4491 	inc	hl
   1520 77                 4492 	ld	(hl),a
   1521 C3rBFs15           4493 	jp	00111$
   1524                    4494 00110$:
                           4495 ;demo.c:628: cmd.size_x = 72;
   1524 11r0Cs41           4496 	ld	de,#_cmd + 8
   1527 EB                 4497 	ex	de,hl
   1528 36 48              4498 	ld	(hl),#0x48
   152A 23                 4499 	inc	hl
   152B 36 00              4500 	ld	(hl),#0x00
                           4501 ;demo.c:629: cmd.size_y = sy;
   152D 11r0Es41           4502 	ld	de,#_cmd + 10
   1530 6B                 4503 	ld	l,e
   1531 62                 4504 	ld	h,d
   1532 71                 4505 	ld	(hl),c
   1533 23                 4506 	inc	hl
   1534 70                 4507 	ld	(hl),b
                           4508 ;demo.c:630: cmd.data = 0;
                           4509 ;demo.c:631: cmd.argument = 0x00; // from 182xY to right
   1535 3E 00              4510 	ld	a,#0x00
   1537 32r10s41           4511 	ld	(#_cmd + 12),a
   153A 32r11s41           4512 	ld	(#_cmd + 13),a
                           4513 ;demo.c:632: cmd.command = 0xe0; // vram to vram, y only
   153D 01r12s41           4514 	ld	bc,#_cmd + 14
   1540 3E E0              4515 	ld	a,#0xE0
   1542 02                 4516 	ld	(bc),a
                           4517 ;demo.c:633: cmd.source_x = 182;
   1543 21r04s41           4518 	ld	hl,#_cmd
   1546 36 B6              4519 	ld	(hl),#0xB6
   1548 23                 4520 	inc	hl
   1549 36 00              4521 	ld	(hl),#0x00
                           4522 ;demo.c:634: cmd.dest_x = 182;
   154B 21r08s41           4523 	ld	hl, #_cmd + 4
   154E 36 B6              4524 	ld	(hl),#0xB6
   1550 23                 4525 	inc	hl
   1551 36 00              4526 	ld	(hl),#0x00
                           4527 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   1553 ED 4Br5As41        4528 	ld	bc,(_ender)
   1557                    4529 00116$:
   1557 79                 4530 	ld	a,c
   1558 DD 96 FE           4531 	sub	a,-2 (ix)
   155B 78                 4532 	ld	a,b
   155C DD 9E FF           4533 	sbc	a,-1 (ix)
   155F F2rA9s15           4534 	jp	P,00119$
                           4535 ;demo.c:637: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1562 21r06s41           4536 	ld	hl,#_cmd + 2
   1565 DD 75 FA           4537 	ld	-6 (ix),l
   1568 DD 74 FB           4538 	ld	-5 (ix),h
   156B 3Ar58s41           4539 	ld	a,(#_ff2+0)
   156E 81                 4540 	add	a,c
   156F 5F                 4541 	ld	e,a
   1570 3Ar59s41           4542 	ld	a,(#_ff2+1)
   1573 88                 4543 	adc	a,b
   1574 16 00              4544 	ld	d,#0x00
   1576 21r00s00           4545 	ld	hl,#_sintab
   1579 19                 4546 	add	hl,de
   157A 5E                 4547 	ld	e,(hl)
   157B CB 2B              4548 	sra	e
   157D 7B                 4549 	ld	a,e
   157E 17                 4550 	rla	
   157F 9F                 4551 	sbc	a,a
   1580 57                 4552 	ld	d,a
   1581 21 40 01           4553 	ld	hl,#0x0140
   1584 19                 4554 	add	hl,de
   1585 EB                 4555 	ex	de,hl
   1586 DD 6E FA           4556 	ld	l,-6 (ix)
   1589 DD 66 FB           4557 	ld	h,-5 (ix)
   158C 73                 4558 	ld	(hl),e
   158D 23                 4559 	inc	hl
   158E 72                 4560 	ld	(hl),d
                           4561 ;demo.c:638: cmd.dest_y = y;
   158F 11r0As41           4562 	ld	de,#_cmd + 6
   1592 EB                 4563 	ex	de,hl
   1593 71                 4564 	ld	(hl),c
   1594 23                 4565 	inc	hl
   1595 70                 4566 	ld	(hl),b
                           4567 ;demo.c:639: vdp_copier(&cmd);
   1596 C5                 4568 	push	bc
   1597 21r04s41           4569 	ld	hl,#_cmd
   159A E5                 4570 	push	hl
   159B CDr00s00           4571 	call	_vdp_copier
   159E F1                 4572 	pop	af
   159F C1                 4573 	pop	bc
                           4574 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   15A0 21 10 00           4575 	ld	hl,#0x0010
   15A3 09                 4576 	add	hl,bc
   15A4 4D                 4577 	ld	c,l
   15A5 44                 4578 	ld	b,h
   15A6 C3r57s15           4579 	jp	00116$
   15A9                    4580 00119$:
                           4581 ;demo.c:641: ff2+=4;
   15A9 21r58s41           4582 	ld	hl,#_ff2
   15AC 7E                 4583 	ld	a,(hl)
   15AD C6 04              4584 	add	a,#0x04
   15AF 23                 4585 	inc	hl
   15B0 2B                 4586 	dec	hl
   15B1 C5                 4587 	push	bc
   15B2 4F                 4588 	ld	c, a
   15B3 23                 4589 	inc	hl
   15B4 7E                 4590 	ld	a, (hl)
   15B5 47                 4591 	ld	b, a
   15B6 79                 4592 	ld	a, c
   15B7 2B                 4593 	dec	hl
   15B8 77                 4594 	ld	(hl), a
   15B9 78                 4595 	ld	a, b
   15BA C1                 4596 	pop	bc
   15BB CE 00              4597 	adc	a,#0x00
   15BD 23                 4598 	inc	hl
   15BE 77                 4599 	ld	(hl),a
   15BF                    4600 00111$:
                           4601 ;demo.c:644: bulbflipper = -bulbflipper;
   15BF AF                 4602 	xor	a,a
   15C0 FD 21r54s41        4603 	ld	iy,#_bulbflipper
   15C4 3E 00              4604 	ld	a,#0x00
   15C6 FD 9E 00           4605 	sbc	a,0 (iy)
   15C9 21r54s41           4606 	ld	hl,#_bulbflipper + 0
   15CC 77                 4607 	ld	(hl), a
   15CD FD 21r54s41        4608 	ld	iy,#_bulbflipper
   15D1 3E 00              4609 	ld	a,#0x00
   15D3 FD 9E 01           4610 	sbc	a,1 (iy)
   15D6 21r55s41           4611 	ld	hl,#_bulbflipper + 1
   15D9 77                 4612 	ld	(hl), a
   15DA DD F9              4613 	ld	sp,ix
   15DC DD E1              4614 	pop	ix
   15DE C9                 4615 	ret
   15DF                    4616 _bulbs_end::
                           4617 ;demo.c:658: void animplay() {
                           4618 ;	---------------------------------
                           4619 ; Function animplay
                           4620 ; ---------------------------------
   15DF                    4621 _animplay_start::
   15DF                    4622 _animplay:
   15DF DD E5              4623 	push	ix
   15E1 DD 21 00 00        4624 	ld	ix,#0
   15E5 DD 39              4625 	add	ix,sp
   15E7 F5                 4626 	push	af
   15E8 3B                 4627 	dec	sp
                           4628 ;demo.c:663: if (anim_init == 0) {
   15E9 3Ar66s41           4629 	ld	a,(#_anim_init+0)
   15EC 21r67s41           4630 	ld	hl,#_anim_init + 1
   15EF B6                 4631 	or	a,(hl)
   15F0 C2r78s17           4632 	jp	NZ,00120$
                           4633 ;demo.c:665: scratch_clear();
   15F3 CDr90s07           4634 	call	_scratch_clear
                           4635 ;demo.c:666: vdp_load_palette(scratch);
   15F6 21rE0s3F           4636 	ld	hl,#_scratch
   15F9 E5                 4637 	push	hl
   15FA CDr00s00           4638 	call	_vdp_load_palette
   15FD F1                 4639 	pop	af
                           4640 ;demo.c:668: uninstall_isr();
   15FE CDr00s00           4641 	call	_uninstall_isr
                           4642 ;demo.c:669: PLY_Stop();
   1601 CDr00s00           4643 	call	_PLY_Stop
                           4644 ;demo.c:670: PLY_SendRegisters();
   1604 CDr00s00           4645 	call	_PLY_SendRegisters
                           4646 ;demo.c:672: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1607 21 00 00           4647 	ld	hl,#0x0000
   160A E5                 4648 	push	hl
   160B 2E 01              4649 	ld	l, #0x01
   160D E5                 4650 	push	hl
   160E 2E 00              4651 	ld	l, #0x00
   1610 E5                 4652 	push	hl
   1611 21 09 37           4653 	ld	hl,#0x3709
   1614 E5                 4654 	push	hl
   1615 21r60s18           4655 	ld	hl,#__str_9
   1618 E5                 4656 	push	hl
   1619 CDr99s09           4657 	call	_pck_load
   161C FD 21 0A 00        4658 	ld	iy,#0x000A
   1620 FD 39              4659 	add	iy,sp
   1622 FD F9              4660 	ld	sp,iy
                           4661 ;demo.c:674: cmd.size_x = 256;
   1624 21r0Cs41           4662 	ld	hl, #_cmd + 8
   1627 36 00              4663 	ld	(hl),#0x00
   1629 23                 4664 	inc	hl
   162A 36 01              4665 	ld	(hl),#0x01
                           4666 ;demo.c:675: cmd.size_y = 212;
   162C 21r0Es41           4667 	ld	hl, #_cmd + 10
   162F 36 D4              4668 	ld	(hl),#0xD4
   1631 23                 4669 	inc	hl
   1632 36 00              4670 	ld	(hl),#0x00
                           4671 ;demo.c:676: cmd.data = 0;
                           4672 ;demo.c:677: cmd.argument = 0x00;
   1634 3E 00              4673 	ld	a,#0x00
   1636 32r10s41           4674 	ld	(#_cmd + 12),a
   1639 32r11s41           4675 	ld	(#_cmd + 13),a
                           4676 ;demo.c:678: cmd.command = 0xd0; 
   163C 01r12s41           4677 	ld	bc,#_cmd + 14
   163F 3E D0              4678 	ld	a,#0xD0
   1641 02                 4679 	ld	(bc),a
                           4680 ;demo.c:679: cmd.source_x = 0;
   1642 21r04s41           4681 	ld	hl,#_cmd
   1645 36 00              4682 	ld	(hl),#0x00
   1647 23                 4683 	inc	hl
   1648 36 00              4684 	ld	(hl),#0x00
                           4685 ;demo.c:680: cmd.source_y = 0;
   164A 21r06s41           4686 	ld	hl, #_cmd + 2
   164D 36 00              4687 	ld	(hl),#0x00
   164F 23                 4688 	inc	hl
   1650 36 00              4689 	ld	(hl),#0x00
                           4690 ;demo.c:681: cmd.dest_x = 0;
   1652 21r08s41           4691 	ld	hl, #_cmd + 4
   1655 36 00              4692 	ld	(hl),#0x00
   1657 23                 4693 	inc	hl
   1658 36 00              4694 	ld	(hl),#0x00
                           4695 ;demo.c:682: cmd.dest_y = 256;
   165A 21r0As41           4696 	ld	hl, #_cmd + 6
   165D 36 00              4697 	ld	(hl),#0x00
   165F 23                 4698 	inc	hl
   1660 36 01              4699 	ld	(hl),#0x01
                           4700 ;demo.c:683: vdp_copier(&cmd);
   1662 21r04s41           4701 	ld	hl,#_cmd
   1665 E5                 4702 	push	hl
   1666 CDr00s00           4703 	call	_vdp_copier
   1669 F1                 4704 	pop	af
                           4705 ;demo.c:685: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   166A 21 00 00           4706 	ld	hl,#0x0000
   166D E5                 4707 	push	hl
   166E 2E 01              4708 	ld	l, #0x01
   1670 E5                 4709 	push	hl
   1671 2E 00              4710 	ld	l, #0x00
   1673 E5                 4711 	push	hl
   1674 21 76 3E           4712 	ld	hl,#0x3E76
   1677 E5                 4713 	push	hl
   1678 21r6Cs18           4714 	ld	hl,#__str_10
   167B E5                 4715 	push	hl
   167C CDr99s09           4716 	call	_pck_load
   167F FD 21 0A 00        4717 	ld	iy,#0x000A
   1683 FD 39              4718 	add	iy,sp
   1685 FD F9              4719 	ld	sp,iy
                           4720 ;demo.c:687: cmd.size_x = 256;
   1687 21r0Cs41           4721 	ld	hl, #_cmd + 8
   168A 36 00              4722 	ld	(hl),#0x00
   168C 23                 4723 	inc	hl
   168D 36 01              4724 	ld	(hl),#0x01
                           4725 ;demo.c:688: cmd.size_y = 212;
   168F 21r0Es41           4726 	ld	hl, #_cmd + 10
   1692 36 D4              4727 	ld	(hl),#0xD4
   1694 23                 4728 	inc	hl
   1695 36 00              4729 	ld	(hl),#0x00
                           4730 ;demo.c:689: cmd.data = 0;
                           4731 ;demo.c:690: cmd.argument = 0x00;
   1697 3E 00              4732 	ld	a,#0x00
   1699 32r10s41           4733 	ld	(#_cmd + 12),a
   169C 32r11s41           4734 	ld	(#_cmd + 13),a
                           4735 ;demo.c:691: cmd.command = 0xd0; 
   169F 01r12s41           4736 	ld	bc,#_cmd + 14
   16A2 3E D0              4737 	ld	a,#0xD0
   16A4 02                 4738 	ld	(bc),a
                           4739 ;demo.c:692: cmd.source_x = 0;
   16A5 21r04s41           4740 	ld	hl,#_cmd
   16A8 36 00              4741 	ld	(hl),#0x00
   16AA 23                 4742 	inc	hl
   16AB 36 00              4743 	ld	(hl),#0x00
                           4744 ;demo.c:693: cmd.source_y = 0;
   16AD 21r06s41           4745 	ld	hl, #_cmd + 2
   16B0 36 00              4746 	ld	(hl),#0x00
   16B2 23                 4747 	inc	hl
   16B3 36 00              4748 	ld	(hl),#0x00
                           4749 ;demo.c:694: cmd.dest_x = 0;
   16B5 21r08s41           4750 	ld	hl, #_cmd + 4
   16B8 36 00              4751 	ld	(hl),#0x00
   16BA 23                 4752 	inc	hl
   16BB 36 00              4753 	ld	(hl),#0x00
                           4754 ;demo.c:695: cmd.dest_y = 512;
   16BD 21r0As41           4755 	ld	hl, #_cmd + 6
   16C0 36 00              4756 	ld	(hl),#0x00
   16C2 23                 4757 	inc	hl
   16C3 36 02              4758 	ld	(hl),#0x02
                           4759 ;demo.c:696: vdp_copier(&cmd);
   16C5 21r04s41           4760 	ld	hl,#_cmd
   16C8 E5                 4761 	push	hl
   16C9 CDr00s00           4762 	call	_vdp_copier
   16CC F1                 4763 	pop	af
                           4764 ;demo.c:699: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   16CD 21 00 00           4765 	ld	hl,#0x0000
   16D0 E5                 4766 	push	hl
   16D1 2E 01              4767 	ld	l, #0x01
   16D3 E5                 4768 	push	hl
   16D4 2E 00              4769 	ld	l, #0x00
   16D6 E5                 4770 	push	hl
   16D7 21 9E 3A           4771 	ld	hl,#0x3A9E
   16DA E5                 4772 	push	hl
   16DB 21r78s18           4773 	ld	hl,#__str_11
   16DE E5                 4774 	push	hl
   16DF CDr99s09           4775 	call	_pck_load
   16E2 FD 21 0A 00        4776 	ld	iy,#0x000A
   16E6 FD 39              4777 	add	iy,sp
   16E8 FD F9              4778 	ld	sp,iy
                           4779 ;demo.c:701: cmd.size_x = 256;
   16EA 21r0Cs41           4780 	ld	hl, #_cmd + 8
   16ED 36 00              4781 	ld	(hl),#0x00
   16EF 23                 4782 	inc	hl
   16F0 36 01              4783 	ld	(hl),#0x01
                           4784 ;demo.c:702: cmd.size_y = 212;
   16F2 21r0Es41           4785 	ld	hl, #_cmd + 10
   16F5 36 D4              4786 	ld	(hl),#0xD4
   16F7 23                 4787 	inc	hl
   16F8 36 00              4788 	ld	(hl),#0x00
                           4789 ;demo.c:703: cmd.data = 0;
                           4790 ;demo.c:704: cmd.argument = 0x00;
   16FA 3E 00              4791 	ld	a,#0x00
   16FC 32r10s41           4792 	ld	(#_cmd + 12),a
   16FF 32r11s41           4793 	ld	(#_cmd + 13),a
                           4794 ;demo.c:705: cmd.command = 0xd0; 
   1702 01r12s41           4795 	ld	bc,#_cmd + 14
   1705 3E D0              4796 	ld	a,#0xD0
   1707 02                 4797 	ld	(bc),a
                           4798 ;demo.c:706: cmd.source_x = 0;
   1708 21r04s41           4799 	ld	hl,#_cmd
   170B 36 00              4800 	ld	(hl),#0x00
   170D 23                 4801 	inc	hl
   170E 36 00              4802 	ld	(hl),#0x00
                           4803 ;demo.c:707: cmd.source_y = 0;
   1710 21r06s41           4804 	ld	hl, #_cmd + 2
   1713 36 00              4805 	ld	(hl),#0x00
   1715 23                 4806 	inc	hl
   1716 36 00              4807 	ld	(hl),#0x00
                           4808 ;demo.c:708: cmd.dest_x = 0;
   1718 21r08s41           4809 	ld	hl, #_cmd + 4
   171B 36 00              4810 	ld	(hl),#0x00
   171D 23                 4811 	inc	hl
   171E 36 00              4812 	ld	(hl),#0x00
                           4813 ;demo.c:709: cmd.dest_y = 768;
   1720 21r0As41           4814 	ld	hl, #_cmd + 6
   1723 36 00              4815 	ld	(hl),#0x00
   1725 23                 4816 	inc	hl
   1726 36 03              4817 	ld	(hl),#0x03
                           4818 ;demo.c:710: vdp_copier(&cmd);
   1728 21r04s41           4819 	ld	hl,#_cmd
   172B E5                 4820 	push	hl
   172C CDr00s00           4821 	call	_vdp_copier
   172F F1                 4822 	pop	af
                           4823 ;demo.c:712: vdp_register(9,130); // 50hz,212
   1730 21 09 82           4824 	ld	hl,#0x8209
   1733 E5                 4825 	push	hl
   1734 CDr00s00           4826 	call	_vdp_register
   1737 F1                 4827 	pop	af
                           4828 ;demo.c:714: scratch_clear();
   1738 CDr90s07           4829 	call	_scratch_clear
                           4830 ;demo.c:716: vdp_set_write_address(0, 0);
   173B 21 00 00           4831 	ld	hl,#0x0000
   173E E5                 4832 	push	hl
   173F 3E 00              4833 	ld	a,#0x00
   1741 F5                 4834 	push	af
   1742 33                 4835 	inc	sp
   1743 CDr00s00           4836 	call	_vdp_set_write_address
   1746 F1                 4837 	pop	af
   1747 33                 4838 	inc	sp
                           4839 ;demo.c:718: for (y = 0; y < 212; y++) { 
   1748 0E D4              4840 	ld	c,#0xD4
   174A                    4841 00109$:
                           4842 ;demo.c:719: vdp_load_screen(scratch, 128);
   174A C5                 4843 	push	bc
   174B 3E 80              4844 	ld	a,#0x80
   174D F5                 4845 	push	af
   174E 33                 4846 	inc	sp
   174F 21rE0s3F           4847 	ld	hl,#_scratch
   1752 E5                 4848 	push	hl
   1753 CDr00s00           4849 	call	_vdp_load_screen
   1756 F1                 4850 	pop	af
   1757 33                 4851 	inc	sp
   1758 C1                 4852 	pop	bc
   1759 0D                 4853 	dec	c
                           4854 ;demo.c:718: for (y = 0; y < 212; y++) { 
   175A AF                 4855 	xor	a,a
   175B B1                 4856 	or	a,c
   175C 20 EC              4857 	jr	NZ,00109$
                           4858 ;demo.c:722: install_isr(my_isr);
   175E 21rECs05           4859 	ld	hl,#_my_isr
   1761 E5                 4860 	push	hl
   1762 CDr00s00           4861 	call	_install_isr
   1765 F1                 4862 	pop	af
                           4863 ;demo.c:723: anim_init = 1;
   1766 21r66s41           4864 	ld	hl,#_anim_init + 0
   1769 36 01              4865 	ld	(hl), #0x01
   176B 21r67s41           4866 	ld	hl,#_anim_init + 1
   176E 36 00              4867 	ld	(hl), #0x00
                           4868 ;demo.c:724: vdp_load_palette(tf_palette);
   1770 21rC0s40           4869 	ld	hl,#_tf_palette
   1773 E5                 4870 	push	hl
   1774 CDr00s00           4871 	call	_vdp_load_palette
   1777 F1                 4872 	pop	af
                           4873 ;demo.c:727: for (y = 0; y < 106; y+=1) {
   1778                    4874 00120$:
   1778 DD 36 FF 00        4875 	ld	-1 (ix),#0x00
   177C                    4876 00110$:
   177C DD 7E FF           4877 	ld	a,-1 (ix)
   177F D6 6A              4878 	sub	a,#0x6A
   1781 D2r01s18           4879 	jp	NC,00113$
                           4880 ;demo.c:728: cmd.source_x = 0;
   1784 21r04s41           4881 	ld	hl,#_cmd
   1787 36 00              4882 	ld	(hl),#0x00
   1789 23                 4883 	inc	hl
   178A 36 00              4884 	ld	(hl),#0x00
                           4885 ;demo.c:729: cmd.source_y = 256+po+frames+(y>>1);
   178C 11r06s41           4886 	ld	de,#_cmd + 2
   178F 3Ar62s41           4887 	ld	a,(#_po+0)
   1792 4F                 4888 	ld	c,a
   1793 3Ar63s41           4889 	ld	a,(#_po+1)
   1796 C6 01              4890 	add	a,#0x01
   1798 47                 4891 	ld	b,a
   1799 21r64s41           4892 	ld	hl,#_frames
   179C 79                 4893 	ld	a,c
   179D 86                 4894 	add	a,(hl)
   179E DD 77 FD           4895 	ld	-3 (ix),a
   17A1 78                 4896 	ld	a,b
   17A2 23                 4897 	inc	hl
   17A3 8E                 4898 	adc	a,(hl)
   17A4 DD 77 FE           4899 	ld	-2 (ix),a
   17A7 DD 4E FF           4900 	ld	c,-1 (ix)
   17AA CB 39              4901 	srl	c
   17AC 06 00              4902 	ld	b,#0x00
   17AE DD 7E FD           4903 	ld	a,-3 (ix)
   17B1 81                 4904 	add	a,c
   17B2 4F                 4905 	ld	c,a
   17B3 DD 7E FE           4906 	ld	a,-2 (ix)
   17B6 88                 4907 	adc	a,b
   17B7 47                 4908 	ld	b,a
   17B8 6B                 4909 	ld	l,e
   17B9 62                 4910 	ld	h,d
   17BA 71                 4911 	ld	(hl),c
   17BB 23                 4912 	inc	hl
   17BC 70                 4913 	ld	(hl),b
                           4914 ;demo.c:730: cmd.dest_x = 0;
   17BD 21r08s41           4915 	ld	hl, #_cmd + 4
   17C0 36 00              4916 	ld	(hl),#0x00
   17C2 23                 4917 	inc	hl
   17C3 36 00              4918 	ld	(hl),#0x00
                           4919 ;demo.c:731: cmd.dest_y = (y<<1);
   17C5 01r0As41           4920 	ld	bc,#_cmd + 6
   17C8 DD 5E FF           4921 	ld	e,-1 (ix)
   17CB 16 00              4922 	ld	d,#0x00
   17CD CB 23              4923 	sla	e
   17CF CB 12              4924 	rl	d
   17D1 69                 4925 	ld	l,c
   17D2 60                 4926 	ld	h,b
   17D3 73                 4927 	ld	(hl),e
   17D4 23                 4928 	inc	hl
   17D5 72                 4929 	ld	(hl),d
                           4930 ;demo.c:732: cmd.size_x = 256;
   17D6 21r0Cs41           4931 	ld	hl, #_cmd + 8
   17D9 36 00              4932 	ld	(hl),#0x00
   17DB 23                 4933 	inc	hl
   17DC 36 01              4934 	ld	(hl),#0x01
                           4935 ;demo.c:733: cmd.size_y = 1;
   17DE 21r0Es41           4936 	ld	hl, #_cmd + 10
   17E1 36 01              4937 	ld	(hl),#0x01
   17E3 23                 4938 	inc	hl
   17E4 36 00              4939 	ld	(hl),#0x00
                           4940 ;demo.c:734: cmd.data = 0;
                           4941 ;demo.c:735: cmd.argument = 0x00;
   17E6 3E 00              4942 	ld	a,#0x00
   17E8 32r10s41           4943 	ld	(#_cmd + 12),a
   17EB 32r11s41           4944 	ld	(#_cmd + 13),a
                           4945 ;demo.c:736: cmd.command = 0xD0;
   17EE 3E D0              4946 	ld	a,#0xD0
   17F0 32r12s41           4947 	ld	(#_cmd + 14),a
                           4948 ;demo.c:737: vdp_copier(&cmd);
   17F3 21r04s41           4949 	ld	hl,#_cmd
   17F6 E5                 4950 	push	hl
   17F7 CDr00s00           4951 	call	_vdp_copier
   17FA F1                 4952 	pop	af
                           4953 ;demo.c:727: for (y = 0; y < 106; y+=1) {
   17FB DD 34 FF           4954 	inc	-1 (ix)
   17FE C3r7Cs17           4955 	jp	00110$
   1801                    4956 00113$:
                           4957 ;demo.c:740: frames+=53;
   1801 21r64s41           4958 	ld	hl,#_frames
   1804 7E                 4959 	ld	a,(hl)
   1805 C6 35              4960 	add	a,#0x35
   1807 23                 4961 	inc	hl
   1808 2B                 4962 	dec	hl
   1809 C5                 4963 	push	bc
   180A 4F                 4964 	ld	c, a
   180B 23                 4965 	inc	hl
   180C 7E                 4966 	ld	a, (hl)
   180D 47                 4967 	ld	b, a
   180E 79                 4968 	ld	a, c
   180F 2B                 4969 	dec	hl
   1810 77                 4970 	ld	(hl), a
   1811 78                 4971 	ld	a, b
   1812 C1                 4972 	pop	bc
   1813 CE 00              4973 	adc	a,#0x00
   1815 23                 4974 	inc	hl
   1816 77                 4975 	ld	(hl),a
                           4976 ;demo.c:741: if (frames >= 212) { frames = 0; po+=256; }
   1817 3Ar64s41           4977 	ld	a,(#_frames+0)
   181A D6 D4              4978 	sub	a,#0xD4
   181C 3Ar65s41           4979 	ld	a,(#_frames+1)
   181F DE 00              4980 	sbc	a,#0x00
   1821 FAr44s18           4981 	jp	M,00104$
   1824 21r64s41           4982 	ld	hl,#_frames + 0
   1827 36 00              4983 	ld	(hl), #0x00
   1829 21r65s41           4984 	ld	hl,#_frames + 1
   182C 36 00              4985 	ld	(hl), #0x00
   182E 21r62s41           4986 	ld	hl,#_po
   1831 7E                 4987 	ld	a,(hl)
   1832 C6 00              4988 	add	a,#0x00
   1834 23                 4989 	inc	hl
   1835 2B                 4990 	dec	hl
   1836 C5                 4991 	push	bc
   1837 4F                 4992 	ld	c, a
   1838 23                 4993 	inc	hl
   1839 7E                 4994 	ld	a, (hl)
   183A 47                 4995 	ld	b, a
   183B 79                 4996 	ld	a, c
   183C 2B                 4997 	dec	hl
   183D 77                 4998 	ld	(hl), a
   183E 78                 4999 	ld	a, b
   183F C1                 5000 	pop	bc
   1840 CE 01              5001 	adc	a,#0x01
   1842 23                 5002 	inc	hl
   1843 77                 5003 	ld	(hl),a
   1844                    5004 00104$:
                           5005 ;demo.c:742: if (po >= 768) {
   1844 3Ar62s41           5006 	ld	a,(#_po+0)
   1847 D6 00              5007 	sub	a,#0x00
   1849 3Ar63s41           5008 	ld	a,(#_po+1)
   184C DE 03              5009 	sbc	a,#0x03
   184E FAr5Bs18           5010 	jp	M,00114$
                           5011 ;demo.c:743: po = 0;
   1851 21r62s41           5012 	ld	hl,#_po + 0
   1854 36 00              5013 	ld	(hl), #0x00
   1856 21r63s41           5014 	ld	hl,#_po + 1
   1859 36 00              5015 	ld	(hl), #0x00
   185B                    5016 00114$:
   185B DD F9              5017 	ld	sp,ix
   185D DD E1              5018 	pop	ix
   185F C9                 5019 	ret
   1860                    5020 _animplay_end::
   1860                    5021 __str_9:
   1860 4C 46 31 20 20 20  5022 	.ascii "LF1     PCK"
        20 20 50 43 4B
   186B 00                 5023 	.db 0x00
   186C                    5024 __str_10:
   186C 4C 46 32 20 20 20  5025 	.ascii "LF2     PCK"
        20 20 50 43 4B
   1877 00                 5026 	.db 0x00
   1878                    5027 __str_11:
   1878 4C 46 33 20 20 20  5028 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1883 00                 5029 	.db 0x00
                           5030 ;demo.c:757: void drawbox(int box_x, int box_y, uint8_t x, uint8_t y) {
                           5031 ;	---------------------------------
                           5032 ; Function drawbox
                           5033 ; ---------------------------------
   1884                    5034 _drawbox_start::
   1884                    5035 _drawbox:
   1884 DD E5              5036 	push	ix
   1886 DD 21 00 00        5037 	ld	ix,#0
   188A DD 39              5038 	add	ix,sp
                           5039 ;demo.c:758: dbly = 0;
   188C 21r6Bs41           5040 	ld	hl,#_dbly + 0
   188F 36 00              5041 	ld	(hl), #0x00
   1891 21r6Cs41           5042 	ld	hl,#_dbly + 1
   1894 36 00              5043 	ld	(hl), #0x00
                           5044 ;demo.c:760: cmd.source_x = box_x * 42;
   1896 DD 5E 04           5045 	ld	e,4 (ix)
   1899 DD 56 05           5046 	ld	d,5 (ix)
   189C 6B                 5047 	ld	l,e
   189D 62                 5048 	ld	h,d
   189E 29                 5049 	add	hl,hl
   189F 29                 5050 	add	hl,hl
   18A0 19                 5051 	add	hl,de
   18A1 29                 5052 	add	hl,hl
   18A2 29                 5053 	add	hl,hl
   18A3 19                 5054 	add	hl,de
   18A4 29                 5055 	add	hl,hl
   18A5 4D                 5056 	ld	c,l
   18A6 44                 5057 	ld	b,h
   18A7 21r04s41           5058 	ld	hl,#_cmd
   18AA 71                 5059 	ld	(hl),c
   18AB 23                 5060 	inc	hl
   18AC 70                 5061 	ld	(hl),b
                           5062 ;demo.c:761: cmd.source_y = 768+box_y * 42;
   18AD 01r06s41           5063 	ld	bc,#_cmd + 2
   18B0 DD 5E 06           5064 	ld	e,6 (ix)
   18B3 DD 56 07           5065 	ld	d,7 (ix)
   18B6 6B                 5066 	ld	l,e
   18B7 62                 5067 	ld	h,d
   18B8 29                 5068 	add	hl,hl
   18B9 29                 5069 	add	hl,hl
   18BA 19                 5070 	add	hl,de
   18BB 29                 5071 	add	hl,hl
   18BC 29                 5072 	add	hl,hl
   18BD 19                 5073 	add	hl,de
   18BE 29                 5074 	add	hl,hl
   18BF EB                 5075 	ex	de,hl
   18C0 21 00 03           5076 	ld	hl,#0x0300
   18C3 19                 5077 	add	hl,de
   18C4 EB                 5078 	ex	de,hl
   18C5 69                 5079 	ld	l,c
   18C6 60                 5080 	ld	h,b
   18C7 73                 5081 	ld	(hl),e
   18C8 23                 5082 	inc	hl
   18C9 72                 5083 	ld	(hl),d
                           5084 ;demo.c:762: cmd.dest_x = x;
   18CA 01r08s41           5085 	ld	bc,#_cmd + 4
   18CD DD 5E 08           5086 	ld	e,8 (ix)
   18D0 16 00              5087 	ld	d,#0x00
   18D2 69                 5088 	ld	l,c
   18D3 60                 5089 	ld	h,b
   18D4 73                 5090 	ld	(hl),e
   18D5 23                 5091 	inc	hl
   18D6 72                 5092 	ld	(hl),d
                           5093 ;demo.c:763: cmd.dest_y = dbly+y;
   18D7 01r0As41           5094 	ld	bc,#_cmd + 6
   18DA DD 5E 09           5095 	ld	e,9 (ix)
   18DD 16 00              5096 	ld	d,#0x00
   18DF 69                 5097 	ld	l,c
   18E0 60                 5098 	ld	h,b
   18E1 73                 5099 	ld	(hl),e
   18E2 23                 5100 	inc	hl
   18E3 72                 5101 	ld	(hl),d
                           5102 ;demo.c:764: cmd.size_x = 42;
   18E4 21r0Cs41           5103 	ld	hl, #_cmd + 8
   18E7 36 2A              5104 	ld	(hl),#0x2A
   18E9 23                 5105 	inc	hl
   18EA 36 00              5106 	ld	(hl),#0x00
                           5107 ;demo.c:765: cmd.size_y = 42;
   18EC 21r0Es41           5108 	ld	hl, #_cmd + 10
   18EF 36 2A              5109 	ld	(hl),#0x2A
   18F1 23                 5110 	inc	hl
   18F2 36 00              5111 	ld	(hl),#0x00
                           5112 ;demo.c:766: cmd.data = 0;
                           5113 ;demo.c:767: cmd.argument = 0x00;
   18F4 3E 00              5114 	ld	a,#0x00
   18F6 32r10s41           5115 	ld	(#_cmd + 12),a
   18F9 32r11s41           5116 	ld	(#_cmd + 13),a
                           5117 ;demo.c:768: cmd.command = 0x98; // TIMP sprite
   18FC 3E 98              5118 	ld	a,#0x98
   18FE 32r12s41           5119 	ld	(#_cmd + 14),a
                           5120 ;demo.c:769: vdp_copier(&cmd);
   1901 D5                 5121 	push	de
   1902 21r04s41           5122 	ld	hl,#_cmd
   1905 E5                 5123 	push	hl
   1906 CDr00s00           5124 	call	_vdp_copier
   1909 F1                 5125 	pop	af
   190A D1                 5126 	pop	de
                           5127 ;demo.c:771: prevx = x;
   190B DD 7E 08           5128 	ld	a,8 (ix)
   190E 21r6Ds41           5129 	ld	hl,#_prevx + 0
   1911 77                 5130 	ld	(hl), a
   1912 21r6Es41           5131 	ld	hl,#_prevx + 1
   1915 36 00              5132 	ld	(hl), #0x00
                           5133 ;demo.c:772: prevy = y;
   1917 21r6Fs41           5134 	ld	hl,#_prevy + 0
   191A 73                 5135 	ld	(hl), e
   191B 21r70s41           5136 	ld	hl,#_prevy + 1
   191E 72                 5137 	ld	(hl), d
                           5138 ;demo.c:773: prevbx = box_x;
   191F DD 7E 04           5139 	ld	a,4 (ix)
   1922 21r71s41           5140 	ld	hl,#_prevbx + 0
   1925 77                 5141 	ld	(hl), a
   1926 DD 7E 05           5142 	ld	a,5 (ix)
   1929 21r72s41           5143 	ld	hl,#_prevbx + 1
   192C 77                 5144 	ld	(hl), a
                           5145 ;demo.c:774: prevby = box_y;
   192D DD 7E 06           5146 	ld	a,6 (ix)
   1930 21r73s41           5147 	ld	hl,#_prevby + 0
   1933 77                 5148 	ld	(hl), a
   1934 DD 7E 07           5149 	ld	a,7 (ix)
   1937 21r74s41           5150 	ld	hl,#_prevby + 1
   193A 77                 5151 	ld	(hl), a
   193B DD E1              5152 	pop	ix
   193D C9                 5153 	ret
   193E                    5154 _drawbox_end::
                           5155 ;demo.c:788: void boxes() {
                           5156 ;	---------------------------------
                           5157 ; Function boxes
                           5158 ; ---------------------------------
   193E                    5159 _boxes_start::
   193E                    5160 _boxes:
                           5161 ;demo.c:792: if (bonc == 1) {
   193E 3Ar81s41           5162 	ld	a,(#_bonc+0)
   1941 D6 01              5163 	sub	a,#0x01
   1943 20 06              5164 	jr	NZ,00156$
   1945 3Ar82s41           5165 	ld	a,(#_bonc+1)
   1948 B7                 5166 	or	a,a
   1949 28 02              5167 	jr	Z,00157$
   194B                    5168 00156$:
   194B 18 4D              5169 	jr	00102$
   194D                    5170 00157$:
                           5171 ;demo.c:794: cmd.source_x = 0;
   194D 21r04s41           5172 	ld	hl,#_cmd
   1950 36 00              5173 	ld	(hl),#0x00
   1952 23                 5174 	inc	hl
   1953 36 00              5175 	ld	(hl),#0x00
                           5176 ;demo.c:795: cmd.source_y = 256;
   1955 21r06s41           5177 	ld	hl, #_cmd + 2
   1958 36 00              5178 	ld	(hl),#0x00
   195A 23                 5179 	inc	hl
   195B 36 01              5180 	ld	(hl),#0x01
                           5181 ;demo.c:796: cmd.dest_x = pbx;
   195D 01r08s41           5182 	ld	bc,#_cmd + 4
   1960 ED 5Br83s41        5183 	ld	de,(_pbx)
   1964 69                 5184 	ld	l,c
   1965 60                 5185 	ld	h,b
   1966 73                 5186 	ld	(hl),e
   1967 23                 5187 	inc	hl
   1968 72                 5188 	ld	(hl),d
                           5189 ;demo.c:797: cmd.dest_y = pbt;
   1969 01r0As41           5190 	ld	bc,#_cmd + 6
   196C ED 5Br85s41        5191 	ld	de,(_pbt)
   1970 69                 5192 	ld	l,c
   1971 60                 5193 	ld	h,b
   1972 73                 5194 	ld	(hl),e
   1973 23                 5195 	inc	hl
   1974 72                 5196 	ld	(hl),d
                           5197 ;demo.c:798: cmd.size_x = 42;
   1975 21r0Cs41           5198 	ld	hl, #_cmd + 8
   1978 36 2A              5199 	ld	(hl),#0x2A
   197A 23                 5200 	inc	hl
   197B 36 00              5201 	ld	(hl),#0x00
                           5202 ;demo.c:799: cmd.size_y = 42;
   197D 21r0Es41           5203 	ld	hl, #_cmd + 10
   1980 36 2A              5204 	ld	(hl),#0x2A
   1982 23                 5205 	inc	hl
   1983 36 00              5206 	ld	(hl),#0x00
                           5207 ;demo.c:800: cmd.data = 0;
                           5208 ;demo.c:801: cmd.argument = 0x00;
   1985 3E 00              5209 	ld	a,#0x00
   1987 32r10s41           5210 	ld	(#_cmd + 12),a
   198A 32r11s41           5211 	ld	(#_cmd + 13),a
                           5212 ;demo.c:802: cmd.command = 0xD0; // HMMM
   198D 3E D0              5213 	ld	a,#0xD0
   198F 32r12s41           5214 	ld	(#_cmd + 14),a
                           5215 ;demo.c:803: vdp_copier(&cmd);
   1992 21r04s41           5216 	ld	hl,#_cmd
   1995 E5                 5217 	push	hl
   1996 CDr00s00           5218 	call	_vdp_copier
   1999 F1                 5219 	pop	af
   199A                    5220 00102$:
                           5221 ;demo.c:807: if (boxes_init == 0) {
   199A AF                 5222 	xor	a,a
   199B 21r68s41           5223 	ld	hl,#_boxes_init + 0
   199E B6                 5224 	or	a,(hl)
   199F C2r35s1A           5225 	jp	NZ,00104$
                           5226 ;demo.c:808: boxes_init = 1;
   19A2 FD 21r68s41        5227 	ld	iy,#_boxes_init
   19A6 FD 36 00 01        5228 	ld	0 (iy),#0x01
                           5229 ;demo.c:810: cmd.size_x = 8;
   19AA 21r0Cs41           5230 	ld	hl, #_cmd + 8
   19AD 36 08              5231 	ld	(hl),#0x08
   19AF 23                 5232 	inc	hl
   19B0 36 00              5233 	ld	(hl),#0x00
                           5234 ;demo.c:811: cmd.size_y = 212;
   19B2 21r0Es41           5235 	ld	hl, #_cmd + 10
   19B5 36 D4              5236 	ld	(hl),#0xD4
   19B7 23                 5237 	inc	hl
   19B8 36 00              5238 	ld	(hl),#0x00
                           5239 ;demo.c:812: cmd.data = 0;
                           5240 ;demo.c:813: cmd.argument = 0x00; // from 70xY to left
   19BA 3E 00              5241 	ld	a,#0x00
   19BC 32r10s41           5242 	ld	(#_cmd + 12),a
   19BF 32r11s41           5243 	ld	(#_cmd + 13),a
                           5244 ;demo.c:814: cmd.command = 0xd0; // vram to vram, y only
   19C2 01r12s41           5245 	ld	bc,#_cmd + 14
   19C5 3E D0              5246 	ld	a,#0xD0
   19C7 02                 5247 	ld	(bc),a
                           5248 ;demo.c:815: cmd.source_x = 248;
   19C8 21r04s41           5249 	ld	hl,#_cmd
   19CB 36 F8              5250 	ld	(hl),#0xF8
   19CD 23                 5251 	inc	hl
   19CE 36 00              5252 	ld	(hl),#0x00
                           5253 ;demo.c:816: cmd.source_y = 0;
   19D0 21r06s41           5254 	ld	hl, #_cmd + 2
   19D3 36 00              5255 	ld	(hl),#0x00
   19D5 23                 5256 	inc	hl
   19D6 36 00              5257 	ld	(hl),#0x00
                           5258 ;demo.c:817: cmd.dest_y = 0;
   19D8 21r0As41           5259 	ld	hl, #_cmd + 6
   19DB 36 00              5260 	ld	(hl),#0x00
   19DD 23                 5261 	inc	hl
   19DE 36 00              5262 	ld	(hl),#0x00
                           5263 ;demo.c:819: for (x = 248; x >= 0; x-=8) {
   19E0 01 F8 00           5264 	ld	bc,#0x00F8
   19E3                    5265 00131$:
   19E3 78                 5266 	ld	a,b
   19E4 CB 7F              5267 	bit	7,a
   19E6 20 38              5268 	jr	NZ,00134$
                           5269 ;demo.c:820: waitVB();
   19E8 76                 5270 		halt 
                           5271 ;demo.c:821: cmd.dest_x = x;
   19E9 11r08s41           5272 	ld	de,#_cmd + 4
   19EC EB                 5273 	ex	de,hl
   19ED 71                 5274 	ld	(hl),c
   19EE 23                 5275 	inc	hl
   19EF 70                 5276 	ld	(hl),b
                           5277 ;demo.c:822: cmd.dest_y = 0;
   19F0 11r0As41           5278 	ld	de,#_cmd + 6
   19F3 EB                 5279 	ex	de,hl
   19F4 36 00              5280 	ld	(hl),#0x00
   19F6 23                 5281 	inc	hl
   19F7 36 00              5282 	ld	(hl),#0x00
                           5283 ;demo.c:823: vdp_copier(&cmd);
   19F9 C5                 5284 	push	bc
   19FA 21r04s41           5285 	ld	hl,#_cmd
   19FD E5                 5286 	push	hl
   19FE CDr00s00           5287 	call	_vdp_copier
   1A01 F1                 5288 	pop	af
   1A02 C1                 5289 	pop	bc
                           5290 ;demo.c:824: cmd.dest_y = 256;
   1A03 11r0As41           5291 	ld	de,#_cmd + 6
   1A06 EB                 5292 	ex	de,hl
   1A07 36 00              5293 	ld	(hl),#0x00
   1A09 23                 5294 	inc	hl
   1A0A 36 01              5295 	ld	(hl),#0x01
                           5296 ;demo.c:825: vdp_copier(&cmd);
   1A0C C5                 5297 	push	bc
   1A0D 21r04s41           5298 	ld	hl,#_cmd
   1A10 E5                 5299 	push	hl
   1A11 CDr00s00           5300 	call	_vdp_copier
   1A14 F1                 5301 	pop	af
   1A15 C1                 5302 	pop	bc
                           5303 ;demo.c:819: for (x = 248; x >= 0; x-=8) {
   1A16 79                 5304 	ld	a,c
   1A17 C6 F8              5305 	add	a,#0xF8
   1A19 4F                 5306 	ld	c,a
   1A1A 78                 5307 	ld	a,b
   1A1B CE FF              5308 	adc	a,#0xFF
   1A1D 47                 5309 	ld	b,a
   1A1E 18 C3              5310 	jr	00131$
   1A20                    5311 00134$:
                           5312 ;demo.c:828: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   1A20 21 08 B4           5313 	ld	hl,#0xB408
   1A23 E5                 5314 	push	hl
   1A24 21rB9s1C           5315 	ld	hl,#__str_12
   1A27 E5                 5316 	push	hl
   1A28 CDr20s11           5317 	call	_drawsine
   1A2B F1                 5318 	pop	af
   1A2C F1                 5319 	pop	af
                           5320 ;demo.c:830: vdp_load_palette(boxes_palette);
   1A2D 21rE0s40           5321 	ld	hl,#_boxes_palette
   1A30 E5                 5322 	push	hl
   1A31 CDr00s00           5323 	call	_vdp_load_palette
   1A34 F1                 5324 	pop	af
   1A35                    5325 00104$:
                           5326 ;demo.c:833: if (bt >= 80) bt+=6;
   1A35 3Ar79s41           5327 	ld	a,(#_bt+0)
   1A38 D6 50              5328 	sub	a,#0x50
   1A3A 3Ar7As41           5329 	ld	a,(#_bt+1)
   1A3D DE 00              5330 	sbc	a,#0x00
   1A3F FAr58s1A           5331 	jp	M,00106$
   1A42 21r79s41           5332 	ld	hl,#_bt
   1A45 7E                 5333 	ld	a,(hl)
   1A46 C6 06              5334 	add	a,#0x06
   1A48 23                 5335 	inc	hl
   1A49 2B                 5336 	dec	hl
   1A4A C5                 5337 	push	bc
   1A4B 4F                 5338 	ld	c, a
   1A4C 23                 5339 	inc	hl
   1A4D 7E                 5340 	ld	a, (hl)
   1A4E 47                 5341 	ld	b, a
   1A4F 79                 5342 	ld	a, c
   1A50 2B                 5343 	dec	hl
   1A51 77                 5344 	ld	(hl), a
   1A52 78                 5345 	ld	a, b
   1A53 C1                 5346 	pop	bc
   1A54 CE 00              5347 	adc	a,#0x00
   1A56 23                 5348 	inc	hl
   1A57 77                 5349 	ld	(hl),a
   1A58                    5350 00106$:
                           5351 ;demo.c:834: if (bt < 80 && bt >= 60) bt+=5;
   1A58 3Ar79s41           5352 	ld	a,(#_bt+0)
   1A5B D6 50              5353 	sub	a,#0x50
   1A5D 3Ar7As41           5354 	ld	a,(#_bt+1)
   1A60 DE 00              5355 	sbc	a,#0x00
   1A62 F2r88s1A           5356 	jp	P,00108$
   1A65 3Ar79s41           5357 	ld	a,(#_bt+0)
   1A68 D6 3C              5358 	sub	a,#0x3C
   1A6A 3Ar7As41           5359 	ld	a,(#_bt+1)
   1A6D DE 00              5360 	sbc	a,#0x00
   1A6F FAr88s1A           5361 	jp	M,00108$
   1A72 21r79s41           5362 	ld	hl,#_bt
   1A75 7E                 5363 	ld	a,(hl)
   1A76 C6 05              5364 	add	a,#0x05
   1A78 23                 5365 	inc	hl
   1A79 2B                 5366 	dec	hl
   1A7A C5                 5367 	push	bc
   1A7B 4F                 5368 	ld	c, a
   1A7C 23                 5369 	inc	hl
   1A7D 7E                 5370 	ld	a, (hl)
   1A7E 47                 5371 	ld	b, a
   1A7F 79                 5372 	ld	a, c
   1A80 2B                 5373 	dec	hl
   1A81 77                 5374 	ld	(hl), a
   1A82 78                 5375 	ld	a, b
   1A83 C1                 5376 	pop	bc
   1A84 CE 00              5377 	adc	a,#0x00
   1A86 23                 5378 	inc	hl
   1A87 77                 5379 	ld	(hl),a
   1A88                    5380 00108$:
                           5381 ;demo.c:835: if (bt < 60 && bt >= 40) bt+=4;
   1A88 3Ar79s41           5382 	ld	a,(#_bt+0)
   1A8B D6 3C              5383 	sub	a,#0x3C
   1A8D 3Ar7As41           5384 	ld	a,(#_bt+1)
   1A90 DE 00              5385 	sbc	a,#0x00
   1A92 F2rB8s1A           5386 	jp	P,00111$
   1A95 3Ar79s41           5387 	ld	a,(#_bt+0)
   1A98 D6 28              5388 	sub	a,#0x28
   1A9A 3Ar7As41           5389 	ld	a,(#_bt+1)
   1A9D DE 00              5390 	sbc	a,#0x00
   1A9F FArB8s1A           5391 	jp	M,00111$
   1AA2 21r79s41           5392 	ld	hl,#_bt
   1AA5 7E                 5393 	ld	a,(hl)
   1AA6 C6 04              5394 	add	a,#0x04
   1AA8 23                 5395 	inc	hl
   1AA9 2B                 5396 	dec	hl
   1AAA C5                 5397 	push	bc
   1AAB 4F                 5398 	ld	c, a
   1AAC 23                 5399 	inc	hl
   1AAD 7E                 5400 	ld	a, (hl)
   1AAE 47                 5401 	ld	b, a
   1AAF 79                 5402 	ld	a, c
   1AB0 2B                 5403 	dec	hl
   1AB1 77                 5404 	ld	(hl), a
   1AB2 78                 5405 	ld	a, b
   1AB3 C1                 5406 	pop	bc
   1AB4 CE 00              5407 	adc	a,#0x00
   1AB6 23                 5408 	inc	hl
   1AB7 77                 5409 	ld	(hl),a
   1AB8                    5410 00111$:
                           5411 ;demo.c:836: if (bt < 40 && bt >= 10) bt+=3;
   1AB8 3Ar79s41           5412 	ld	a,(#_bt+0)
   1ABB D6 28              5413 	sub	a,#0x28
   1ABD 3Ar7As41           5414 	ld	a,(#_bt+1)
   1AC0 DE 00              5415 	sbc	a,#0x00
   1AC2 F2rE8s1A           5416 	jp	P,00114$
   1AC5 3Ar79s41           5417 	ld	a,(#_bt+0)
   1AC8 D6 0A              5418 	sub	a,#0x0A
   1ACA 3Ar7As41           5419 	ld	a,(#_bt+1)
   1ACD DE 00              5420 	sbc	a,#0x00
   1ACF FArE8s1A           5421 	jp	M,00114$
   1AD2 21r79s41           5422 	ld	hl,#_bt
   1AD5 7E                 5423 	ld	a,(hl)
   1AD6 C6 03              5424 	add	a,#0x03
   1AD8 23                 5425 	inc	hl
   1AD9 2B                 5426 	dec	hl
   1ADA C5                 5427 	push	bc
   1ADB 4F                 5428 	ld	c, a
   1ADC 23                 5429 	inc	hl
   1ADD 7E                 5430 	ld	a, (hl)
   1ADE 47                 5431 	ld	b, a
   1ADF 79                 5432 	ld	a, c
   1AE0 2B                 5433 	dec	hl
   1AE1 77                 5434 	ld	(hl), a
   1AE2 78                 5435 	ld	a, b
   1AE3 C1                 5436 	pop	bc
   1AE4 CE 00              5437 	adc	a,#0x00
   1AE6 23                 5438 	inc	hl
   1AE7 77                 5439 	ld	(hl),a
   1AE8                    5440 00114$:
                           5441 ;demo.c:837: if (bt < 10 ) bt+=2;
   1AE8 3Ar79s41           5442 	ld	a,(#_bt+0)
   1AEB D6 0A              5443 	sub	a,#0x0A
   1AED 3Ar7As41           5444 	ld	a,(#_bt+1)
   1AF0 DE 00              5445 	sbc	a,#0x00
   1AF2 F2r0Bs1B           5446 	jp	P,00117$
   1AF5 21r79s41           5447 	ld	hl,#_bt
   1AF8 7E                 5448 	ld	a,(hl)
   1AF9 C6 02              5449 	add	a,#0x02
   1AFB 23                 5450 	inc	hl
   1AFC 2B                 5451 	dec	hl
   1AFD C5                 5452 	push	bc
   1AFE 4F                 5453 	ld	c, a
   1AFF 23                 5454 	inc	hl
   1B00 7E                 5455 	ld	a, (hl)
   1B01 47                 5456 	ld	b, a
   1B02 79                 5457 	ld	a, c
   1B03 2B                 5458 	dec	hl
   1B04 77                 5459 	ld	(hl), a
   1B05 78                 5460 	ld	a, b
   1B06 C1                 5461 	pop	bc
   1B07 CE 00              5462 	adc	a,#0x00
   1B09 23                 5463 	inc	hl
   1B0A 77                 5464 	ld	(hl),a
   1B0B                    5465 00117$:
                           5466 ;demo.c:841: cmd.source_x = bx;
   1B0B ED 4Br75s41        5467 	ld	bc,(_bx)
   1B0F 21r04s41           5468 	ld	hl,#_cmd
   1B12 71                 5469 	ld	(hl),c
   1B13 23                 5470 	inc	hl
   1B14 70                 5471 	ld	(hl),b
                           5472 ;demo.c:842: cmd.source_y = bt;
   1B15 01r06s41           5473 	ld	bc,#_cmd + 2
   1B18 ED 5Br79s41        5474 	ld	de,(_bt)
   1B1C 69                 5475 	ld	l,c
   1B1D 60                 5476 	ld	h,b
   1B1E 73                 5477 	ld	(hl),e
   1B1F 23                 5478 	inc	hl
   1B20 72                 5479 	ld	(hl),d
                           5480 ;demo.c:843: cmd.dest_x = 0;
   1B21 21r08s41           5481 	ld	hl, #_cmd + 4
   1B24 36 00              5482 	ld	(hl),#0x00
   1B26 23                 5483 	inc	hl
   1B27 36 00              5484 	ld	(hl),#0x00
                           5485 ;demo.c:844: cmd.dest_y = 256;
   1B29 21r0As41           5486 	ld	hl, #_cmd + 6
   1B2C 36 00              5487 	ld	(hl),#0x00
   1B2E 23                 5488 	inc	hl
   1B2F 36 01              5489 	ld	(hl),#0x01
                           5490 ;demo.c:845: cmd.size_x = 42;
   1B31 21r0Cs41           5491 	ld	hl, #_cmd + 8
   1B34 36 2A              5492 	ld	(hl),#0x2A
   1B36 23                 5493 	inc	hl
   1B37 36 00              5494 	ld	(hl),#0x00
                           5495 ;demo.c:846: cmd.size_y = 42;
   1B39 21r0Es41           5496 	ld	hl, #_cmd + 10
   1B3C 36 2A              5497 	ld	(hl),#0x2A
   1B3E 23                 5498 	inc	hl
   1B3F 36 00              5499 	ld	(hl),#0x00
                           5500 ;demo.c:847: cmd.data = 0;
                           5501 ;demo.c:848: cmd.argument = 0x00;
   1B41 3E 00              5502 	ld	a,#0x00
   1B43 32r10s41           5503 	ld	(#_cmd + 12),a
   1B46 32r11s41           5504 	ld	(#_cmd + 13),a
                           5505 ;demo.c:849: cmd.command = 0xD0; // HMMM
   1B49 3E D0              5506 	ld	a,#0xD0
   1B4B 32r12s41           5507 	ld	(#_cmd + 14),a
                           5508 ;demo.c:850: vdp_copier(&cmd);
   1B4E 21r04s41           5509 	ld	hl,#_cmd
   1B51 E5                 5510 	push	hl
   1B52 CDr00s00           5511 	call	_vdp_copier
   1B55 F1                 5512 	pop	af
                           5513 ;demo.c:852: pbx = bx;
   1B56 2Ar75s41           5514 	ld	hl,(_bx)
   1B59 FD 21r83s41        5515 	ld	iy,#_pbx
   1B5D FD 75 00           5516 	ld	0 (iy),l
   1B60 FD 21r83s41        5517 	ld	iy,#_pbx
   1B64 FD 74 01           5518 	ld	1 (iy),h
                           5519 ;demo.c:853: pbt = bt;
   1B67 2Ar79s41           5520 	ld	hl,(_bt)
   1B6A FD 21r85s41        5521 	ld	iy,#_pbt
   1B6E FD 75 00           5522 	ld	0 (iy),l
   1B71 FD 21r85s41        5523 	ld	iy,#_pbt
   1B75 FD 74 01           5524 	ld	1 (iy),h
                           5525 ;demo.c:855: waitVB();
   1B78 76                 5526 		halt 
                           5527 ;demo.c:857: drawbox(bxx,byy,bx,bt);
   1B79 21r79s41           5528 	ld	hl,#_bt + 0
   1B7C 4E                 5529 	ld	c,(hl)
   1B7D 21r75s41           5530 	ld	hl,#_bx + 0
   1B80 46                 5531 	ld	b,(hl)
   1B81 79                 5532 	ld	a,c
   1B82 F5                 5533 	push	af
   1B83 33                 5534 	inc	sp
   1B84 C5                 5535 	push	bc
   1B85 33                 5536 	inc	sp
   1B86 2Ar7Ds41           5537 	ld	hl,(_byy)
   1B89 E5                 5538 	push	hl
   1B8A 2Ar7Bs41           5539 	ld	hl,(_bxx)
   1B8D E5                 5540 	push	hl
   1B8E CDr84s18           5541 	call	_drawbox
   1B91 F1                 5542 	pop	af
   1B92 F1                 5543 	pop	af
   1B93 F1                 5544 	pop	af
                           5545 ;demo.c:859: waitVB();
   1B94 76                 5546 		halt 
                           5547 ;demo.c:861: bonc = 1;
   1B95 21r81s41           5548 	ld	hl,#_bonc + 0
   1B98 36 01              5549 	ld	(hl), #0x01
   1B9A 21r82s41           5550 	ld	hl,#_bonc + 1
   1B9D 36 00              5551 	ld	(hl), #0x00
                           5552 ;demo.c:862: if (bt > by) {
   1B9F 21r77s41           5553 	ld	hl,#_by
   1BA2 7E                 5554 	ld	a,(hl)
   1BA3 FD 21r79s41        5555 	ld	iy,#_bt
   1BA7 FD 96 00           5556 	sub	a,0 (iy)
   1BAA 23                 5557 	inc	hl
   1BAB 7E                 5558 	ld	a,(hl)
   1BAC FD 21r79s41        5559 	ld	iy,#_bt
   1BB0 FD 9E 01           5560 	sbc	a,1 (iy)
   1BB3 F0                 5561 	ret	P
                           5562 ;demo.c:864: bt = 0;
   1BB4 21r79s41           5563 	ld	hl,#_bt + 0
   1BB7 36 00              5564 	ld	(hl), #0x00
   1BB9 21r7As41           5565 	ld	hl,#_bt + 1
   1BBC 36 00              5566 	ld	(hl), #0x00
                           5567 ;demo.c:865: if (by > 0) {
   1BBE 3E 00              5568 	ld	a,#0x00
   1BC0 FD 21r77s41        5569 	ld	iy,#_by
   1BC4 FD 96 00           5570 	sub	a,0 (iy)
   1BC7 3E 00              5571 	ld	a,#0x00
   1BC9 FD 21r77s41        5572 	ld	iy,#_by
   1BCD FD 9E 01           5573 	sbc	a,1 (iy)
   1BD0 F2r36s1C           5574 	jp	P,00127$
                           5575 ;demo.c:866: bonc = 0;
   1BD3 21r81s41           5576 	ld	hl,#_bonc + 0
   1BD6 36 00              5577 	ld	(hl), #0x00
   1BD8 21r82s41           5578 	ld	hl,#_bonc + 1
   1BDB 36 00              5579 	ld	(hl), #0x00
                           5580 ;demo.c:867: by-=16;
   1BDD 21r77s41           5581 	ld	hl,#_by
   1BE0 7E                 5582 	ld	a,(hl)
   1BE1 C6 F0              5583 	add	a,#0xF0
   1BE3 77                 5584 	ld	(hl),a
   1BE4 23                 5585 	inc	hl
   1BE5 7E                 5586 	ld	a,(hl)
   1BE6 CE FF              5587 	adc	a,#0xFF
   1BE8 77                 5588 	ld	(hl),a
                           5589 ;demo.c:868: bxx++;
   1BE9 FD 21r7Bs41        5590 	ld	iy,#_bxx
   1BED FD 34 00           5591 	inc	0 (iy)
   1BF0 20 07              5592 	jr	NZ,00158$
   1BF2 FD 21r7Bs41        5593 	ld	iy,#_bxx
   1BF6 FD 34 01           5594 	inc	1 (iy)
   1BF9                    5595 00158$:
                           5596 ;demo.c:869: if (bxx >= 4) { bxx = 0; byy++; }
   1BF9 3Ar7Bs41           5597 	ld	a,(#_bxx+0)
   1BFC D6 04              5598 	sub	a,#0x04
   1BFE 3Ar7Cs41           5599 	ld	a,(#_bxx+1)
   1C01 DE 00              5600 	sbc	a,#0x00
   1C03 FAr20s1C           5601 	jp	M,00119$
   1C06 21r7Bs41           5602 	ld	hl,#_bxx + 0
   1C09 36 00              5603 	ld	(hl), #0x00
   1C0B 21r7Cs41           5604 	ld	hl,#_bxx + 1
   1C0E 36 00              5605 	ld	(hl), #0x00
   1C10 FD 21r7Ds41        5606 	ld	iy,#_byy
   1C14 FD 34 00           5607 	inc	0 (iy)
   1C17 20 07              5608 	jr	NZ,00159$
   1C19 FD 21r7Ds41        5609 	ld	iy,#_byy
   1C1D FD 34 01           5610 	inc	1 (iy)
   1C20                    5611 00159$:
   1C20                    5612 00119$:
                           5613 ;demo.c:870: if (byy >= 2) { byy = 0; }
   1C20 3Ar7Ds41           5614 	ld	a,(#_byy+0)
   1C23 D6 02              5615 	sub	a,#0x02
   1C25 3Ar7Es41           5616 	ld	a,(#_byy+1)
   1C28 DE 00              5617 	sbc	a,#0x00
   1C2A F8                 5618 	ret	M
   1C2B 21r7Ds41           5619 	ld	hl,#_byy + 0
   1C2E 36 00              5620 	ld	(hl), #0x00
   1C30 21r7Es41           5621 	ld	hl,#_byy + 1
   1C33 36 00              5622 	ld	(hl), #0x00
   1C35 C9                 5623 	ret
   1C36                    5624 00127$:
                           5625 ;demo.c:872: bx-=21;
   1C36 21r75s41           5626 	ld	hl,#_bx
   1C39 7E                 5627 	ld	a,(hl)
   1C3A C6 EB              5628 	add	a,#0xEB
   1C3C 77                 5629 	ld	(hl),a
   1C3D 23                 5630 	inc	hl
   1C3E 7E                 5631 	ld	a,(hl)
   1C3F CE FF              5632 	adc	a,#0xFF
   1C41 77                 5633 	ld	(hl),a
                           5634 ;demo.c:873: bo+=11;
   1C42 21r7Fs41           5635 	ld	hl,#_bo
   1C45 7E                 5636 	ld	a,(hl)
   1C46 C6 0B              5637 	add	a,#0x0B
   1C48 23                 5638 	inc	hl
   1C49 2B                 5639 	dec	hl
   1C4A C5                 5640 	push	bc
   1C4B 4F                 5641 	ld	c, a
   1C4C 23                 5642 	inc	hl
   1C4D 7E                 5643 	ld	a, (hl)
   1C4E 47                 5644 	ld	b, a
   1C4F 79                 5645 	ld	a, c
   1C50 2B                 5646 	dec	hl
   1C51 77                 5647 	ld	(hl), a
   1C52 78                 5648 	ld	a, b
   1C53 C1                 5649 	pop	bc
   1C54 CE 00              5650 	adc	a,#0x00
   1C56 23                 5651 	inc	hl
   1C57 77                 5652 	ld	(hl),a
                           5653 ;demo.c:874: if (bo > 192) bo = 0;
   1C58 3E C0              5654 	ld	a,#0xC0
   1C5A FD 21r7Fs41        5655 	ld	iy,#_bo
   1C5E FD 96 00           5656 	sub	a,0 (iy)
   1C61 3E 00              5657 	ld	a,#0x00
   1C63 FD 21r7Fs41        5658 	ld	iy,#_bo
   1C67 FD 9E 01           5659 	sbc	a,1 (iy)
   1C6A F2r77s1C           5660 	jp	P,00123$
   1C6D 21r7Fs41           5661 	ld	hl,#_bo + 0
   1C70 36 00              5662 	ld	(hl), #0x00
   1C72 21r80s41           5663 	ld	hl,#_bo + 1
   1C75 36 00              5664 	ld	(hl), #0x00
   1C77                    5665 00123$:
                           5666 ;demo.c:875: by=84+bo;
   1C77 21r77s41           5667 	ld	hl,#_by
   1C7A 3Ar7Fs41           5668 	ld	a,(#_bo+0)
   1C7D C6 54              5669 	add	a,#0x54
   1C7F 77                 5670 	ld	(hl),a
   1C80 3Ar80s41           5671 	ld	a,(#_bo+1)
   1C83 CE 00              5672 	adc	a,#0x00
   1C85 23                 5673 	inc	hl
   1C86 77                 5674 	ld	(hl),a
                           5675 ;demo.c:876: if (bx <= 0) {
   1C87 3E 00              5676 	ld	a,#0x00
   1C89 FD 21r75s41        5677 	ld	iy,#_bx
   1C8D FD 96 00           5678 	sub	a,0 (iy)
   1C90 3E 00              5679 	ld	a,#0x00
   1C92 FD 21r75s41        5680 	ld	iy,#_bx
   1C96 FD 9E 01           5681 	sbc	a,1 (iy)
   1C99 F8                 5682 	ret	M
                           5683 ;demo.c:877: bx = 256;
   1C9A 21r75s41           5684 	ld	hl,#_bx + 0
   1C9D 36 00              5685 	ld	(hl), #0x00
   1C9F 21r76s41           5686 	ld	hl,#_bx + 1
   1CA2 36 01              5687 	ld	(hl), #0x01
                           5688 ;demo.c:878: bo = 0;
   1CA4 21r7Fs41           5689 	ld	hl,#_bo + 0
   1CA7 36 00              5690 	ld	(hl), #0x00
   1CA9 21r80s41           5691 	ld	hl,#_bo + 1
   1CAC 36 00              5692 	ld	(hl), #0x00
                           5693 ;demo.c:879: by = 84;
   1CAE 21r77s41           5694 	ld	hl,#_by + 0
   1CB1 36 54              5695 	ld	(hl), #0x54
   1CB3 21r78s41           5696 	ld	hl,#_by + 1
   1CB6 36 00              5697 	ld	(hl), #0x00
   1CB8 C9                 5698 	ret
   1CB9                    5699 _boxes_end::
   1CB9                    5700 __str_12:
   1CB9 4C 45 54 20 55 53  5701 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1CE4 00                 5702 	.db 0x00
                           5703 ;demo.c:890: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5704 ;	---------------------------------
                           5705 ; Function drawtritile
                           5706 ; ---------------------------------
   1CE5                    5707 _drawtritile_start::
   1CE5                    5708 _drawtritile:
   1CE5 DD E5              5709 	push	ix
   1CE7 DD 21 00 00        5710 	ld	ix,#0
   1CEB DD 39              5711 	add	ix,sp
                           5712 ;demo.c:891: cmd.source_x = tx;
   1CED DD 4E 04           5713 	ld	c,4 (ix)
   1CF0 06 00              5714 	ld	b,#0x00
   1CF2 21r04s41           5715 	ld	hl,#_cmd
   1CF5 71                 5716 	ld	(hl),c
   1CF6 23                 5717 	inc	hl
   1CF7 70                 5718 	ld	(hl),b
                           5719 ;demo.c:892: cmd.source_y = ty-1;
   1CF8 01r06s41           5720 	ld	bc,#_cmd + 2
   1CFB DD 5E 05           5721 	ld	e,5 (ix)
   1CFE DD 56 06           5722 	ld	d,6 (ix)
   1D01 1B                 5723 	dec	de
   1D02 69                 5724 	ld	l,c
   1D03 60                 5725 	ld	h,b
   1D04 73                 5726 	ld	(hl),e
   1D05 23                 5727 	inc	hl
   1D06 72                 5728 	ld	(hl),d
                           5729 ;demo.c:893: cmd.dest_x = x;
   1D07 01r08s41           5730 	ld	bc,#_cmd + 4
   1D0A DD 5E 07           5731 	ld	e,7 (ix)
   1D0D 16 00              5732 	ld	d,#0x00
   1D0F 69                 5733 	ld	l,c
   1D10 60                 5734 	ld	h,b
   1D11 73                 5735 	ld	(hl),e
   1D12 23                 5736 	inc	hl
   1D13 72                 5737 	ld	(hl),d
                           5738 ;demo.c:894: cmd.dest_y = y;
   1D14 01r0As41           5739 	ld	bc,#_cmd + 6
   1D17 DD 5E 08           5740 	ld	e,8 (ix)
   1D1A 16 00              5741 	ld	d,#0x00
   1D1C 69                 5742 	ld	l,c
   1D1D 60                 5743 	ld	h,b
   1D1E 73                 5744 	ld	(hl),e
   1D1F 23                 5745 	inc	hl
   1D20 72                 5746 	ld	(hl),d
                           5747 ;demo.c:895: cmd.size_x = 16;
   1D21 21r0Cs41           5748 	ld	hl, #_cmd + 8
   1D24 36 10              5749 	ld	(hl),#0x10
   1D26 23                 5750 	inc	hl
   1D27 36 00              5751 	ld	(hl),#0x00
                           5752 ;demo.c:896: cmd.size_y = 16;
   1D29 21r0Es41           5753 	ld	hl, #_cmd + 10
   1D2C 36 10              5754 	ld	(hl),#0x10
   1D2E 23                 5755 	inc	hl
   1D2F 36 00              5756 	ld	(hl),#0x00
                           5757 ;demo.c:897: cmd.data = 0;
                           5758 ;demo.c:898: cmd.argument = 0x00;
   1D31 3E 00              5759 	ld	a,#0x00
   1D33 32r10s41           5760 	ld	(#_cmd + 12),a
   1D36 32r11s41           5761 	ld	(#_cmd + 13),a
                           5762 ;demo.c:899: cmd.command = 0xd0; // HMMM
   1D39 3E D0              5763 	ld	a,#0xD0
   1D3B 32r12s41           5764 	ld	(#_cmd + 14),a
                           5765 ;demo.c:900: vdp_copier(&cmd);
   1D3E 21r04s41           5766 	ld	hl,#_cmd
   1D41 E5                 5767 	push	hl
   1D42 CDr00s00           5768 	call	_vdp_copier
   1D45 F1                 5769 	pop	af
   1D46 DD E1              5770 	pop	ix
   1D48 C9                 5771 	ret
   1D49                    5772 _drawtritile_end::
                           5773 ;demo.c:903: void drawtilescreen(char* tripic) {
                           5774 ;	---------------------------------
                           5775 ; Function drawtilescreen
                           5776 ; ---------------------------------
   1D49                    5777 _drawtilescreen_start::
   1D49                    5778 _drawtilescreen:
   1D49 DD E5              5779 	push	ix
   1D4B DD 21 00 00        5780 	ld	ix,#0
   1D4F DD 39              5781 	add	ix,sp
   1D51 21 F8 FF           5782 	ld	hl,#-8
   1D54 39                 5783 	add	hl,sp
   1D55 F9                 5784 	ld	sp,hl
                           5785 ;demo.c:904: int x = 0;
   1D56 DD 36 FE 00        5786 	ld	-2 (ix),#0x00
   1D5A DD 36 FF 00        5787 	ld	-1 (ix),#0x00
                           5788 ;demo.c:907: while(i < 192) {
   1D5E DD 36 FC 00        5789 	ld	-4 (ix),#0x00
   1D62 DD 36 FD 00        5790 	ld	-3 (ix),#0x00
   1D66 DD 36 FA 00        5791 	ld	-6 (ix),#0x00
   1D6A DD 36 FB 00        5792 	ld	-5 (ix),#0x00
   1D6E                    5793 00103$:
   1D6E DD 7E FA           5794 	ld	a,-6 (ix)
   1D71 D6 C0              5795 	sub	a,#0xC0
   1D73 DD 7E FB           5796 	ld	a,-5 (ix)
   1D76 DE 00              5797 	sbc	a,#0x00
   1D78 F2rFFs1D           5798 	jp	P,00106$
                           5799 ;demo.c:908: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1D7B DD 7E FC           5800 	ld	a,-4 (ix)
   1D7E DD 77 F8           5801 	ld	-8 (ix),a
   1D81 DD 7E FE           5802 	ld	a,-2 (ix)
   1D84 DD 77 F9           5803 	ld	-7 (ix),a
   1D87 DD 7E 04           5804 	ld	a,4 (ix)
   1D8A DD 86 FA           5805 	add	a,-6 (ix)
   1D8D 4F                 5806 	ld	c,a
   1D8E DD 7E 05           5807 	ld	a,5 (ix)
   1D91 DD 8E FB           5808 	adc	a,-5 (ix)
   1D94 47                 5809 	ld	b,a
   1D95 0A                 5810 	ld	a,(bc)
   1D96 4F                 5811 	ld	c,a
   1D97 87                 5812 	add	a,a
   1D98 C6r20              5813 	add	a,#<_tri_lookup_y
   1D9A 6F                 5814 	ld	l,a
   1D9B 3Es01              5815 	ld	a,#>_tri_lookup_y
   1D9D CE 00              5816 	adc	a,#0x00
   1D9F 67                 5817 	ld	h,a
   1DA0 46                 5818 	ld	b,(hl)
   1DA1 23                 5819 	inc	hl
   1DA2 56                 5820 	ld	d,(hl)
   1DA3 3Er00              5821 	ld	a,#<_tri_lookup_x
   1DA5 81                 5822 	add	a,c
   1DA6 6F                 5823 	ld	l,a
   1DA7 3Es01              5824 	ld	a,#>_tri_lookup_x
   1DA9 CE 00              5825 	adc	a,#0x00
   1DAB 67                 5826 	ld	h,a
   1DAC 4E                 5827 	ld	c,(hl)
   1DAD DD 66 F8           5828 	ld	h,-8 (ix)
   1DB0 DD 6E F9           5829 	ld	l,-7 (ix)
   1DB3 E5                 5830 	push	hl
   1DB4 58                 5831 	ld	e,b
   1DB5 D5                 5832 	push	de
   1DB6 79                 5833 	ld	a,c
   1DB7 F5                 5834 	push	af
   1DB8 33                 5835 	inc	sp
   1DB9 CDrE5s1C           5836 	call	_drawtritile
   1DBC F1                 5837 	pop	af
   1DBD F1                 5838 	pop	af
   1DBE 33                 5839 	inc	sp
                           5840 ;demo.c:909: x+=16;
   1DBF DD 7E FE           5841 	ld	a,-2 (ix)
   1DC2 C6 10              5842 	add	a,#0x10
   1DC4 DD 77 FE           5843 	ld	-2 (ix),a
   1DC7 DD 7E FF           5844 	ld	a,-1 (ix)
   1DCA CE 00              5845 	adc	a,#0x00
   1DCC DD 77 FF           5846 	ld	-1 (ix),a
                           5847 ;demo.c:910: if (x >= 256) {x = 0; y+=16;}
   1DCF DD 7E FE           5848 	ld	a,-2 (ix)
   1DD2 D6 00              5849 	sub	a,#0x00
   1DD4 DD 7E FF           5850 	ld	a,-1 (ix)
   1DD7 DE 01              5851 	sbc	a,#0x01
   1DD9 FArF4s1D           5852 	jp	M,00102$
   1DDC DD 36 FE 00        5853 	ld	-2 (ix),#0x00
   1DE0 DD 36 FF 00        5854 	ld	-1 (ix),#0x00
   1DE4 DD 7E FC           5855 	ld	a,-4 (ix)
   1DE7 C6 10              5856 	add	a,#0x10
   1DE9 DD 77 FC           5857 	ld	-4 (ix),a
   1DEC DD 7E FD           5858 	ld	a,-3 (ix)
   1DEF CE 00              5859 	adc	a,#0x00
   1DF1 DD 77 FD           5860 	ld	-3 (ix),a
   1DF4                    5861 00102$:
                           5862 ;demo.c:911: i++;
   1DF4 DD 34 FA           5863 	inc	-6 (ix)
   1DF7 20 03              5864 	jr	NZ,00112$
   1DF9 DD 34 FB           5865 	inc	-5 (ix)
   1DFC                    5866 00112$:
   1DFC C3r6Es1D           5867 	jp	00103$
   1DFF                    5868 00106$:
   1DFF DD F9              5869 	ld	sp,ix
   1E01 DD E1              5870 	pop	ix
   1E03 C9                 5871 	ret
   1E04                    5872 _drawtilescreen_end::
                           5873 ;demo.c:926: void tritiles() {
                           5874 ;	---------------------------------
                           5875 ; Function tritiles
                           5876 ; ---------------------------------
   1E04                    5877 _tritiles_start::
   1E04                    5878 _tritiles:
   1E04 DD E5              5879 	push	ix
   1E06 DD 21 00 00        5880 	ld	ix,#0
   1E0A DD 39              5881 	add	ix,sp
   1E0C 21 FB FF           5882 	ld	hl,#-5
   1E0F 39                 5883 	add	hl,sp
   1E10 F9                 5884 	ld	sp,hl
                           5885 ;demo.c:933: if (tri_inited == 0) {
   1E11 AF                 5886 	xor	a,a
   1E12 21r87s41           5887 	ld	hl,#_tri_inited + 0
   1E15 B6                 5888 	or	a,(hl)
   1E16 C2rB5s1E           5889 	jp	NZ,00102$
                           5890 ;demo.c:934: tri_inited = 1;
   1E19 FD 21r87s41        5891 	ld	iy,#_tri_inited
   1E1D FD 36 00 01        5892 	ld	0 (iy),#0x01
                           5893 ;demo.c:936: cmd.size_x = 256;
   1E21 21r0Cs41           5894 	ld	hl, #_cmd + 8
   1E24 36 00              5895 	ld	(hl),#0x00
   1E26 23                 5896 	inc	hl
   1E27 36 01              5897 	ld	(hl),#0x01
                           5898 ;demo.c:937: cmd.size_y = 1;
   1E29 21r0Es41           5899 	ld	hl, #_cmd + 10
   1E2C 36 01              5900 	ld	(hl),#0x01
   1E2E 23                 5901 	inc	hl
   1E2F 36 00              5902 	ld	(hl),#0x00
                           5903 ;demo.c:938: cmd.data = 0;
                           5904 ;demo.c:939: cmd.argument = 0x00; // from 70xY to left
   1E31 3E 00              5905 	ld	a,#0x00
   1E33 32r10s41           5906 	ld	(#_cmd + 12),a
   1E36 32r11s41           5907 	ld	(#_cmd + 13),a
                           5908 ;demo.c:940: cmd.command = 0xd0; // vram to vram, y only
   1E39 01r12s41           5909 	ld	bc,#_cmd + 14
   1E3C 3E D0              5910 	ld	a,#0xD0
   1E3E 02                 5911 	ld	(bc),a
                           5912 ;demo.c:941: cmd.source_x = 0;
   1E3F 21r04s41           5913 	ld	hl,#_cmd
   1E42 36 00              5914 	ld	(hl),#0x00
   1E44 23                 5915 	inc	hl
   1E45 36 00              5916 	ld	(hl),#0x00
                           5917 ;demo.c:942: cmd.source_y = 255;
   1E47 21r06s41           5918 	ld	hl, #_cmd + 2
   1E4A 36 FF              5919 	ld	(hl),#0xFF
   1E4C 23                 5920 	inc	hl
   1E4D 36 00              5921 	ld	(hl),#0x00
                           5922 ;demo.c:943: cmd.dest_y = 0;
   1E4F 01r0As41           5923 	ld	bc,#_cmd + 6
   1E52 69                 5924 	ld	l,c
   1E53 60                 5925 	ld	h,b
   1E54 36 00              5926 	ld	(hl),#0x00
   1E56 23                 5927 	inc	hl
   1E57 36 00              5928 	ld	(hl),#0x00
                           5929 ;demo.c:945: for (x = 0; x < 212; x++) {
   1E59 DD 36 FE D4        5930 	ld	-2 (ix),#0xD4
   1E5D DD 36 FF 00        5931 	ld	-1 (ix),#0x00
   1E61                    5932 00121$:
                           5933 ;demo.c:946: waitVB();
   1E61 76                 5934 		halt 
                           5935 ;demo.c:947: cmd.dest_x = 0;
   1E62 11r08s41           5936 	ld	de,#_cmd + 4
   1E65 EB                 5937 	ex	de,hl
   1E66 36 00              5938 	ld	(hl),#0x00
   1E68 23                 5939 	inc	hl
   1E69 36 00              5940 	ld	(hl),#0x00
                           5941 ;demo.c:948: cmd.dest_y = x;
   1E6B 11r0As41           5942 	ld	de,#_cmd + 6
   1E6E DD 4E FE           5943 	ld	c,-2 (ix)
   1E71 DD 46 FF           5944 	ld	b,-1 (ix)
   1E74 0B                 5945 	dec	bc
   1E75 EB                 5946 	ex	de,hl
   1E76 71                 5947 	ld	(hl),c
   1E77 23                 5948 	inc	hl
   1E78 70                 5949 	ld	(hl),b
                           5950 ;demo.c:949: vdp_copier(&cmd);
   1E79 C5                 5951 	push	bc
   1E7A 21r04s41           5952 	ld	hl,#_cmd
   1E7D E5                 5953 	push	hl
   1E7E CDr00s00           5954 	call	_vdp_copier
   1E81 F1                 5955 	pop	af
   1E82 C1                 5956 	pop	bc
   1E83 DD 71 FE           5957 	ld	-2 (ix),c
   1E86 DD 70 FF           5958 	ld	-1 (ix),b
                           5959 ;demo.c:945: for (x = 0; x < 212; x++) {
   1E89 DD 7E FE           5960 	ld	a,-2 (ix)
   1E8C DD B6 FF           5961 	or	a,-1 (ix)
   1E8F 20 D0              5962 	jr	NZ,00121$
                           5963 ;demo.c:952: vdp_register(9,2); // 50hz,192
   1E91 21 09 02           5964 	ld	hl,#0x0209
   1E94 E5                 5965 	push	hl
   1E95 CDr00s00           5966 	call	_vdp_register
   1E98 F1                 5967 	pop	af
                           5968 ;demo.c:954: vdp_load_palette(boxes_palette);
   1E99 21rE0s40           5969 	ld	hl,#_boxes_palette
   1E9C E5                 5970 	push	hl
   1E9D CDr00s00           5971 	call	_vdp_load_palette
   1EA0 F1                 5972 	pop	af
                           5973 ;demo.c:956: msx2_palette(15,0,0,0);
   1EA1 21 00 00           5974 	ld	hl,#0x0000
   1EA4 E5                 5975 	push	hl
   1EA5 2E 0F              5976 	ld	l, #0x0F
   1EA7 E5                 5977 	push	hl
   1EA8 CDr00s00           5978 	call	_msx2_palette
   1EAB F1                 5979 	pop	af
   1EAC F1                 5980 	pop	af
                           5981 ;demo.c:958: drawtilescreen(tri_center);
   1EAD 21r2Cs02           5982 	ld	hl,#_tri_center
   1EB0 E5                 5983 	push	hl
   1EB1 CDr49s1D           5984 	call	_drawtilescreen
   1EB4 F1                 5985 	pop	af
   1EB5                    5986 00102$:
                           5987 ;demo.c:963: triframes++;
   1EB5 FD 21r92s41        5988 	ld	iy,#_triframes
   1EB9 FD 34 00           5989 	inc	0 (iy)
   1EBC 20 07              5990 	jr	NZ,00142$
   1EBE FD 21r92s41        5991 	ld	iy,#_triframes
   1EC2 FD 34 01           5992 	inc	1 (iy)
   1EC5                    5993 00142$:
                           5994 ;demo.c:964: if (triframes == 200) {
   1EC5 3Ar92s41           5995 	ld	a,(#_triframes+0)
   1EC8 D6 C8              5996 	sub	a,#0xC8
   1ECA 20 06              5997 	jr	NZ,00143$
   1ECC 3Ar93s41           5998 	ld	a,(#_triframes+1)
   1ECF B7                 5999 	or	a,a
   1ED0 28 02              6000 	jr	Z,00144$
   1ED2                    6001 00143$:
   1ED2 18 08              6002 	jr	00104$
   1ED4                    6003 00144$:
                           6004 ;demo.c:965: drawtilescreen(tri_up);
   1ED4 21rECs02           6005 	ld	hl,#_tri_up
   1ED7 E5                 6006 	push	hl
   1ED8 CDr49s1D           6007 	call	_drawtilescreen
   1EDB F1                 6008 	pop	af
   1EDC                    6009 00104$:
                           6010 ;demo.c:968: if (triframes == 400) {
   1EDC 3Ar92s41           6011 	ld	a,(#_triframes+0)
   1EDF D6 90              6012 	sub	a,#0x90
   1EE1 20 07              6013 	jr	NZ,00145$
   1EE3 3Ar93s41           6014 	ld	a,(#_triframes+1)
   1EE6 D6 01              6015 	sub	a,#0x01
   1EE8 28 02              6016 	jr	Z,00146$
   1EEA                    6017 00145$:
   1EEA 18 08              6018 	jr	00106$
   1EEC                    6019 00146$:
                           6020 ;demo.c:969: drawtilescreen(tri_dia);
   1EEC 21rACs03           6021 	ld	hl,#_tri_dia
   1EEF E5                 6022 	push	hl
   1EF0 CDr49s1D           6023 	call	_drawtilescreen
   1EF3 F1                 6024 	pop	af
   1EF4                    6025 00106$:
                           6026 ;demo.c:971: if (triframes == 600) {
   1EF4 3Ar92s41           6027 	ld	a,(#_triframes+0)
   1EF7 D6 58              6028 	sub	a,#0x58
   1EF9 20 07              6029 	jr	NZ,00147$
   1EFB 3Ar93s41           6030 	ld	a,(#_triframes+1)
   1EFE D6 02              6031 	sub	a,#0x02
   1F00 28 02              6032 	jr	Z,00148$
   1F02                    6033 00147$:
   1F02 18 08              6034 	jr	00108$
   1F04                    6035 00148$:
                           6036 ;demo.c:972: drawtilescreen(tri_side1);
   1F04 21r6Cs04           6037 	ld	hl,#_tri_side1
   1F07 E5                 6038 	push	hl
   1F08 CDr49s1D           6039 	call	_drawtilescreen
   1F0B F1                 6040 	pop	af
   1F0C                    6041 00108$:
                           6042 ;demo.c:974: if (triframes == 700) {
   1F0C 3Ar92s41           6043 	ld	a,(#_triframes+0)
   1F0F D6 BC              6044 	sub	a,#0xBC
   1F11 20 07              6045 	jr	NZ,00149$
   1F13 3Ar93s41           6046 	ld	a,(#_triframes+1)
   1F16 D6 02              6047 	sub	a,#0x02
   1F18 28 02              6048 	jr	Z,00150$
   1F1A                    6049 00149$:
   1F1A 18 08              6050 	jr	00110$
   1F1C                    6051 00150$:
                           6052 ;demo.c:975: drawtilescreen(tri_side2);
   1F1C 21r2Cs05           6053 	ld	hl,#_tri_side2
   1F1F E5                 6054 	push	hl
   1F20 CDr49s1D           6055 	call	_drawtilescreen
   1F23 F1                 6056 	pop	af
   1F24                    6057 00110$:
                           6058 ;demo.c:977: if (triframes == 800) {
   1F24 3Ar92s41           6059 	ld	a,(#_triframes+0)
   1F27 D6 20              6060 	sub	a,#0x20
   1F29 20 07              6061 	jr	NZ,00151$
   1F2B 3Ar93s41           6062 	ld	a,(#_triframes+1)
   1F2E D6 03              6063 	sub	a,#0x03
   1F30 28 02              6064 	jr	Z,00152$
   1F32                    6065 00151$:
   1F32 18 08              6066 	jr	00112$
   1F34                    6067 00152$:
                           6068 ;demo.c:978: drawtilescreen(tri_side1);
   1F34 21r6Cs04           6069 	ld	hl,#_tri_side1
   1F37 E5                 6070 	push	hl
   1F38 CDr49s1D           6071 	call	_drawtilescreen
   1F3B F1                 6072 	pop	af
   1F3C                    6073 00112$:
                           6074 ;demo.c:980: if (triframes == 900) {
   1F3C 3Ar92s41           6075 	ld	a,(#_triframes+0)
   1F3F D6 84              6076 	sub	a,#0x84
   1F41 20 07              6077 	jr	NZ,00153$
   1F43 3Ar93s41           6078 	ld	a,(#_triframes+1)
   1F46 D6 03              6079 	sub	a,#0x03
   1F48 28 02              6080 	jr	Z,00154$
   1F4A                    6081 00153$:
   1F4A 18 08              6082 	jr	00114$
   1F4C                    6083 00154$:
                           6084 ;demo.c:981: drawtilescreen(tri_side2);
   1F4C 21r2Cs05           6085 	ld	hl,#_tri_side2
   1F4F E5                 6086 	push	hl
   1F50 CDr49s1D           6087 	call	_drawtilescreen
   1F53 F1                 6088 	pop	af
   1F54                    6089 00114$:
                           6090 ;demo.c:983: if (triframes == 1000) {
   1F54 3Ar92s41           6091 	ld	a,(#_triframes+0)
   1F57 D6 E8              6092 	sub	a,#0xE8
   1F59 20 07              6093 	jr	NZ,00155$
   1F5B 3Ar93s41           6094 	ld	a,(#_triframes+1)
   1F5E D6 03              6095 	sub	a,#0x03
   1F60 28 02              6096 	jr	Z,00156$
   1F62                    6097 00155$:
   1F62 18 12              6098 	jr	00116$
   1F64                    6099 00156$:
                           6100 ;demo.c:984: triframes = 0;
   1F64 21r92s41           6101 	ld	hl,#_triframes + 0
   1F67 36 00              6102 	ld	(hl), #0x00
   1F69 21r93s41           6103 	ld	hl,#_triframes + 1
   1F6C 36 00              6104 	ld	(hl), #0x00
                           6105 ;demo.c:985: drawtilescreen(tri_center);
   1F6E 21r2Cs02           6106 	ld	hl,#_tri_center
   1F71 E5                 6107 	push	hl
   1F72 CDr49s1D           6108 	call	_drawtilescreen
   1F75 F1                 6109 	pop	af
   1F76                    6110 00116$:
                           6111 ;demo.c:988: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   1F76 21r8As41           6112 	ld	hl,#_tripal + 2
   1F79 4E                 6113 	ld	c,(hl)
   1F7A 11r89s41           6114 	ld	de,#_tripal + 1
   1F7D 1A                 6115 	ld	a,(de)
   1F7E 47                 6116 	ld	b,a
   1F7F 21r88s41           6117 	ld	hl,#_tripal
   1F82 5E                 6118 	ld	e,(hl)
   1F83 79                 6119 	ld	a,c
   1F84 F5                 6120 	push	af
   1F85 33                 6121 	inc	sp
   1F86 C5                 6122 	push	bc
   1F87 33                 6123 	inc	sp
   1F88 53                 6124 	ld	d,e
   1F89 1E 03              6125 	ld	e,#0x03
   1F8B D5                 6126 	push	de
   1F8C CDr00s00           6127 	call	_msx2_palette
   1F8F F1                 6128 	pop	af
   1F90 F1                 6129 	pop	af
                           6130 ;demo.c:989: msx2_palette(13,tripal[3],tripal[4],tripal[5]);
   1F91 21r8Ds41           6131 	ld	hl,#_tripal + 5
   1F94 4E                 6132 	ld	c,(hl)
   1F95 11r8Cs41           6133 	ld	de,#_tripal + 4
   1F98 1A                 6134 	ld	a,(de)
   1F99 47                 6135 	ld	b,a
   1F9A 21r8Bs41           6136 	ld	hl,#_tripal + 3
   1F9D 5E                 6137 	ld	e,(hl)
   1F9E 79                 6138 	ld	a,c
   1F9F F5                 6139 	push	af
   1FA0 33                 6140 	inc	sp
   1FA1 C5                 6141 	push	bc
   1FA2 33                 6142 	inc	sp
   1FA3 53                 6143 	ld	d,e
   1FA4 1E 0D              6144 	ld	e,#0x0D
   1FA6 D5                 6145 	push	de
   1FA7 CDr00s00           6146 	call	_msx2_palette
   1FAA F1                 6147 	pop	af
   1FAB F1                 6148 	pop	af
                           6149 ;demo.c:990: msx2_palette(5,tripal[6],tripal[7],tripal[8]);
   1FAC 21r90s41           6150 	ld	hl,#_tripal + 8
   1FAF 4E                 6151 	ld	c,(hl)
   1FB0 11r8Fs41           6152 	ld	de,#_tripal + 7
   1FB3 1A                 6153 	ld	a,(de)
   1FB4 47                 6154 	ld	b,a
   1FB5 21r8Es41           6155 	ld	hl,#_tripal + 6
   1FB8 5E                 6156 	ld	e,(hl)
   1FB9 79                 6157 	ld	a,c
   1FBA F5                 6158 	push	af
   1FBB 33                 6159 	inc	sp
   1FBC C5                 6160 	push	bc
   1FBD 33                 6161 	inc	sp
   1FBE 53                 6162 	ld	d,e
   1FBF 1E 05              6163 	ld	e,#0x05
   1FC1 D5                 6164 	push	de
   1FC2 CDr00s00           6165 	call	_msx2_palette
   1FC5 F1                 6166 	pop	af
   1FC6 F1                 6167 	pop	af
                           6168 ;demo.c:993: tripaltick++;
   1FC7 FD 21r91s41        6169 	ld	iy,#_tripaltick
   1FCB FD 34 00           6170 	inc	0 (iy)
                           6171 ;demo.c:994: if (tripaltick > 6) {
   1FCE 3E 06              6172 	ld	a,#0x06
   1FD0 FD 21r91s41        6173 	ld	iy,#_tripaltick
   1FD4 FD 96 00           6174 	sub	a,0 (iy)
   1FD7 D2r45s20           6175 	jp	NC,00126$
                           6176 ;demo.c:996: r = tripal[0];
   1FDA 21r88s41           6177 	ld	hl,#_tripal
   1FDD 4E                 6178 	ld	c,(hl)
   1FDE DD 71 FD           6179 	ld	-3 (ix),c
                           6180 ;demo.c:997: g = tripal[1];
   1FE1 11r89s41           6181 	ld	de,#_tripal + 1
   1FE4 1A                 6182 	ld	a,(de)
   1FE5 DD 77 FC           6183 	ld	-4 (ix),a
                           6184 ;demo.c:998: b = tripal[2];
   1FE8 21r8As41           6185 	ld	hl,#_tripal + 2
   1FEB 5E                 6186 	ld	e,(hl)
   1FEC DD 73 FB           6187 	ld	-5 (ix),e
                           6188 ;demo.c:1000: for (x = 0; x < 6; x++) {
   1FEF DD 36 FE 00        6189 	ld	-2 (ix),#0x00
   1FF3 DD 36 FF 00        6190 	ld	-1 (ix),#0x00
   1FF7                    6191 00122$:
   1FF7 DD 7E FE           6192 	ld	a,-2 (ix)
   1FFA D6 06              6193 	sub	a,#0x06
   1FFC DD 7E FF           6194 	ld	a,-1 (ix)
   1FFF DE 00              6195 	sbc	a,#0x00
   2001 F2r2Bs20           6196 	jp	P,00125$
                           6197 ;demo.c:1001: tripal[x] = tripal[x+3];
   2004 3Er88              6198 	ld	a,#<_tripal
   2006 DD 86 FE           6199 	add	a,-2 (ix)
   2009 4F                 6200 	ld	c,a
   200A 3Es41              6201 	ld	a,#>_tripal
   200C DD 8E FF           6202 	adc	a,-1 (ix)
   200F 47                 6203 	ld	b,a
   2010 DD 5E FE           6204 	ld	e,-2 (ix)
   2013 1C                 6205 	inc	e
   2014 1C                 6206 	inc	e
   2015 1C                 6207 	inc	e
   2016 3Er88              6208 	ld	a,#<_tripal
   2018 83                 6209 	add	a,e
   2019 5F                 6210 	ld	e,a
   201A 3Es41              6211 	ld	a,#>_tripal
   201C CE 00              6212 	adc	a,#0x00
   201E 57                 6213 	ld	d,a
   201F 1A                 6214 	ld	a,(de)
   2020 02                 6215 	ld	(bc),a
                           6216 ;demo.c:1000: for (x = 0; x < 6; x++) {
   2021 DD 34 FE           6217 	inc	-2 (ix)
   2024 20 03              6218 	jr	NZ,00157$
   2026 DD 34 FF           6219 	inc	-1 (ix)
   2029                    6220 00157$:
   2029 18 CC              6221 	jr	00122$
   202B                    6222 00125$:
                           6223 ;demo.c:1004: tripal[6] = r;
   202B 01r8Es41           6224 	ld	bc,#_tripal + 6
   202E DD 7E FD           6225 	ld	a,-3 (ix)
   2031 02                 6226 	ld	(bc),a
                           6227 ;demo.c:1005: tripal[7] = g;
   2032 01r8Fs41           6228 	ld	bc,#_tripal + 7
   2035 DD 7E FC           6229 	ld	a,-4 (ix)
   2038 02                 6230 	ld	(bc),a
                           6231 ;demo.c:1006: tripal[8] = b;
   2039 01r90s41           6232 	ld	bc,#_tripal + 8
   203C DD 7E FB           6233 	ld	a,-5 (ix)
   203F 02                 6234 	ld	(bc),a
                           6235 ;demo.c:1007: tripaltick = 0;
   2040 21r91s41           6236 	ld	hl,#_tripaltick + 0
   2043 36 00              6237 	ld	(hl), #0x00
   2045                    6238 00126$:
   2045 DD F9              6239 	ld	sp,ix
   2047 DD E1              6240 	pop	ix
   2049 C9                 6241 	ret
   204A                    6242 _tritiles_end::
                           6243 ;demo.c:1016: void do_quit() {
                           6244 ;	---------------------------------
                           6245 ; Function do_quit
                           6246 ; ---------------------------------
   204A                    6247 _do_quit_start::
   204A                    6248 _do_quit:
                           6249 ;demo.c:1017: waitVB();
   204A 76                 6250 		halt 
                           6251 ;demo.c:1018: uninstall_isr();
   204B CDr00s00           6252 	call	_uninstall_isr
                           6253 ;demo.c:1019: PLY_Stop();
   204E CDr00s00           6254 	call	_PLY_Stop
                           6255 ;demo.c:1020: PLY_SendRegisters();
   2051 CDr00s00           6256 	call	_PLY_SendRegisters
                           6257 ;demo.c:1022: screen(0);
   2054 3E 00              6258 	ld	a,#0x00
   2056 F5                 6259 	push	af
   2057 33                 6260 	inc	sp
   2058 CDr00s00           6261 	call	_screen
   205B 33                 6262 	inc	sp
                           6263 ;demo.c:1024: puts("demo quit\r\n\r\n");
   205C 21r6Ds20           6264 	ld	hl,#__str_13
   205F E5                 6265 	push	hl
   2060 CDr00s00           6266 	call	_puts
   2063 F1                 6267 	pop	af
                           6268 ;demo.c:1026: exit(0);	
   2064 3E 00              6269 	ld	a,#0x00
   2066 F5                 6270 	push	af
   2067 33                 6271 	inc	sp
   2068 CDr00s00           6272 	call	_exit
   206B 33                 6273 	inc	sp
   206C C9                 6274 	ret
   206D                    6275 _do_quit_end::
   206D                    6276 __str_13:
   206D 64 65 6D 6F 20 71  6277 	.ascii "demo quit"
        75 69 74
   2076 0D                 6278 	.db 0x0D
   2077 0A                 6279 	.db 0x0A
   2078 0D                 6280 	.db 0x0D
   2079 0A                 6281 	.db 0x0A
   207A 00                 6282 	.db 0x00
                           6283 ;demo.c:1050: void main() {
                           6284 ;	---------------------------------
                           6285 ; Function main
                           6286 ; ---------------------------------
   207B                    6287 _main_start::
   207B                    6288 _main:
   207B DD E5              6289 	push	ix
   207D DD 21 00 00        6290 	ld	ix,#0
   2081 DD 39              6291 	add	ix,sp
   2083 21 F9 FF           6292 	ld	hl,#-7
   2086 39                 6293 	add	hl,sp
   2087 F9                 6294 	ld	sp,hl
                           6295 ;demo.c:1051: unsigned char quit=0;
   2088 DD 36 FF 00        6296 	ld	-1 (ix),#0x00
                           6297 ;demo.c:1057: spindown();
   208C CDr00s00           6298 	call	_spindown
                           6299 ;demo.c:1059: puts("demo init\r\n\r\n");
   208F 21r35s24           6300 	ld	hl,#__str_14
   2092 E5                 6301 	push	hl
   2093 CDr00s00           6302 	call	_puts
   2096 F1                 6303 	pop	af
                           6304 ;demo.c:1061: for (y = 0; y < 2; y++) {
   2097 DD 36 FB 00        6305 	ld	-5 (ix),#0x00
   209B DD 36 FC 00        6306 	ld	-4 (ix),#0x00
   209F                    6307 00118$:
   209F DD 7E FB           6308 	ld	a,-5 (ix)
   20A2 D6 02              6309 	sub	a,#0x02
   20A4 DD 7E FC           6310 	ld	a,-4 (ix)
   20A7 DE 00              6311 	sbc	a,#0x00
   20A9 F2r2Bs21           6312 	jp	P,00121$
                           6313 ;demo.c:1062: for (x = 0; x < 16; x++) {
   20AC DD 4E FB           6314 	ld	c,-5 (ix)
   20AF DD 46 FC           6315 	ld	b,-4 (ix)
   20B2 CB 21              6316 	sla	c
   20B4 CB 10              6317 	rl	b
   20B6 CB 21              6318 	sla	c
   20B8 CB 10              6319 	rl	b
   20BA CB 21              6320 	sla	c
   20BC CB 10              6321 	rl	b
   20BE CB 21              6322 	sla	c
   20C0 CB 10              6323 	rl	b
   20C2 21 81 03           6324 	ld	hl,#0x0381
   20C5 09                 6325 	add	hl,bc
   20C6 DD 75 F9           6326 	ld	-7 (ix),l
   20C9 DD 74 FA           6327 	ld	-6 (ix),h
   20CC DD 36 FD 00        6328 	ld	-3 (ix),#0x00
   20D0 DD 36 FE 00        6329 	ld	-2 (ix),#0x00
   20D4                    6330 00114$:
   20D4 DD 7E FD           6331 	ld	a,-3 (ix)
   20D7 D6 10              6332 	sub	a,#0x10
   20D9 DD 7E FE           6333 	ld	a,-2 (ix)
   20DC DE 00              6334 	sbc	a,#0x00
   20DE F2r20s21           6335 	jp	P,00120$
                           6336 ;demo.c:1063: tri_lookup_x[(y*16)+x] = x * 16;
   20E1 DD 7E FB           6337 	ld	a,-5 (ix)
   20E4 07                 6338 	rlca
   20E5 07                 6339 	rlca
   20E6 07                 6340 	rlca
   20E7 07                 6341 	rlca
   20E8 E6 F0              6342 	and	a,#0xF0
   20EA 5F                 6343 	ld	e,a
   20EB DD 56 FD           6344 	ld	d,-3 (ix)
   20EE 7B                 6345 	ld	a,e
   20EF 82                 6346 	add	a,d
   20F0 5F                 6347 	ld	e, a
   20F1 C6r00              6348 	add	a,#<_tri_lookup_x
   20F3 4F                 6349 	ld	c,a
   20F4 3Es01              6350 	ld	a,#>_tri_lookup_x
   20F6 CE 00              6351 	adc	a,#0x00
   20F8 47                 6352 	ld	b,a
   20F9 7A                 6353 	ld	a,d
   20FA 07                 6354 	rlca
   20FB 07                 6355 	rlca
   20FC 07                 6356 	rlca
   20FD 07                 6357 	rlca
   20FE E6 F0              6358 	and	a,#0xF0
   2100 02                 6359 	ld	(bc),a
                           6360 ;demo.c:1064: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   2101 CB 23              6361 	sla	e
   2103 3Er20              6362 	ld	a,#<_tri_lookup_y
   2105 83                 6363 	add	a,e
   2106 6F                 6364 	ld	l,a
   2107 3Es01              6365 	ld	a,#>_tri_lookup_y
   2109 CE 00              6366 	adc	a,#0x00
   210B 67                 6367 	ld	h,a
   210C DD 7E F9           6368 	ld	a,-7 (ix)
   210F 77                 6369 	ld	(hl),a
   2110 23                 6370 	inc	hl
   2111 DD 7E FA           6371 	ld	a,-6 (ix)
   2114 77                 6372 	ld	(hl),a
                           6373 ;demo.c:1062: for (x = 0; x < 16; x++) {
   2115 DD 34 FD           6374 	inc	-3 (ix)
   2118 20 03              6375 	jr	NZ,00139$
   211A DD 34 FE           6376 	inc	-2 (ix)
   211D                    6377 00139$:
   211D C3rD4s20           6378 	jp	00114$
   2120                    6379 00120$:
                           6380 ;demo.c:1061: for (y = 0; y < 2; y++) {
   2120 DD 34 FB           6381 	inc	-5 (ix)
   2123 20 03              6382 	jr	NZ,00140$
   2125 DD 34 FC           6383 	inc	-4 (ix)
   2128                    6384 00140$:
   2128 C3r9Fs20           6385 	jp	00118$
   212B                    6386 00121$:
                           6387 ;demo.c:1068: puts("music init...");
   212B 21r43s24           6388 	ld	hl,#__str_15
   212E E5                 6389 	push	hl
   212F CDr00s00           6390 	call	_puts
   2132 F1                 6391 	pop	af
                           6392 ;demo.c:1070: PLY_SongPtr = (char *)0x0103;
   2133 21r00s00           6393 	ld	hl,#_PLY_SongPtr + 0
   2136 36 03              6394 	ld	(hl), #0x03
   2138 21r01s00           6395 	ld	hl,#_PLY_SongPtr + 1
   213B 36 01              6396 	ld	(hl), #0x01
                           6397 ;demo.c:1071: PLY_Init();
   213D CDr00s00           6398 	call	_PLY_Init
                           6399 ;demo.c:1072: puts("done.\r\n");
   2140 21r51s24           6400 	ld	hl,#__str_16
   2143 E5                 6401 	push	hl
   2144 CDr00s00           6402 	call	_puts
   2147 F1                 6403 	pop	af
                           6404 ;demo.c:1074: puts("detecting vdp type...\r\n\r\n");
   2148 21r59s24           6405 	ld	hl,#__str_17
   214B E5                 6406 	push	hl
   214C CDr00s00           6407 	call	_puts
   214F F1                 6408 	pop	af
                           6409 ;demo.c:1075: if(isvdp2())
   2150 CDr00s00           6410 	call	_isvdp2
   2153 AF                 6411 	xor	a,a
   2154 B5                 6412 	or	a,l
   2155 28 0A              6413 	jr	Z,00102$
                           6414 ;demo.c:1077: puts("vdp2 found! setting 50hz...\r\n\r\n");
   2157 21r73s24           6415 	ld	hl,#__str_18
   215A E5                 6416 	push	hl
   215B CDr00s00           6417 	call	_puts
   215E F1                 6418 	pop	af
   215F 18 0B              6419 	jr	00103$
   2161                    6420 00102$:
                           6421 ;demo.c:1080: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   2161 21r93s24           6422 	ld	hl,#__str_19
   2164 E5                 6423 	push	hl
   2165 CDr00s00           6424 	call	_puts
   2168 F1                 6425 	pop	af
                           6426 ;demo.c:1081: do_quit();
   2169 CDr4As20           6427 	call	_do_quit
   216C                    6428 00103$:
                           6429 ;demo.c:1084: pal_load("TWISTER PL5",32,1);
   216C 21 01 00           6430 	ld	hl,#0x0001
   216F E5                 6431 	push	hl
   2170 3E 20              6432 	ld	a,#0x20
   2172 F5                 6433 	push	af
   2173 33                 6434 	inc	sp
   2174 21rDAs24           6435 	ld	hl,#__str_20
   2177 E5                 6436 	push	hl
   2178 CDrA3s07           6437 	call	_pal_load
   217B F1                 6438 	pop	af
   217C F1                 6439 	pop	af
   217D 33                 6440 	inc	sp
                           6441 ;demo.c:1085: memcpy(twister_palette, cur_palette, 32);
   217E 21 20 00           6442 	ld	hl,#0x0020
   2181 E5                 6443 	push	hl
   2182 21r60s40           6444 	ld	hl,#_cur_palette
   2185 E5                 6445 	push	hl
   2186 21rA0s40           6446 	ld	hl,#_twister_palette
   2189 E5                 6447 	push	hl
   218A CDr00s00           6448 	call	_memcpy
   218D F1                 6449 	pop	af
   218E F1                 6450 	pop	af
   218F F1                 6451 	pop	af
                           6452 ;demo.c:1086: pal_load("LF      PL5",32,1);
   2190 21 01 00           6453 	ld	hl,#0x0001
   2193 E5                 6454 	push	hl
   2194 3E 20              6455 	ld	a,#0x20
   2196 F5                 6456 	push	af
   2197 33                 6457 	inc	sp
   2198 21rE6s24           6458 	ld	hl,#__str_21
   219B E5                 6459 	push	hl
   219C CDrA3s07           6460 	call	_pal_load
   219F F1                 6461 	pop	af
   21A0 F1                 6462 	pop	af
   21A1 33                 6463 	inc	sp
                           6464 ;demo.c:1087: memcpy(tf_palette, cur_palette, 32);
   21A2 21 20 00           6465 	ld	hl,#0x0020
   21A5 E5                 6466 	push	hl
   21A6 21r60s40           6467 	ld	hl,#_cur_palette
   21A9 E5                 6468 	push	hl
   21AA 21rC0s40           6469 	ld	hl,#_tf_palette
   21AD E5                 6470 	push	hl
   21AE CDr00s00           6471 	call	_memcpy
   21B1 F1                 6472 	pop	af
   21B2 F1                 6473 	pop	af
   21B3 F1                 6474 	pop	af
                           6475 ;demo.c:1088: pal_load("BOXES   PL5",32,1);
   21B4 21 01 00           6476 	ld	hl,#0x0001
   21B7 E5                 6477 	push	hl
   21B8 3E 20              6478 	ld	a,#0x20
   21BA F5                 6479 	push	af
   21BB 33                 6480 	inc	sp
   21BC 21rF2s24           6481 	ld	hl,#__str_22
   21BF E5                 6482 	push	hl
   21C0 CDrA3s07           6483 	call	_pal_load
   21C3 F1                 6484 	pop	af
   21C4 F1                 6485 	pop	af
   21C5 33                 6486 	inc	sp
                           6487 ;demo.c:1089: memcpy(boxes_palette, cur_palette, 32);
   21C6 21 20 00           6488 	ld	hl,#0x0020
   21C9 E5                 6489 	push	hl
   21CA 21r60s40           6490 	ld	hl,#_cur_palette
   21CD E5                 6491 	push	hl
   21CE 21rE0s40           6492 	ld	hl,#_boxes_palette
   21D1 E5                 6493 	push	hl
   21D2 CDr00s00           6494 	call	_memcpy
   21D5 F1                 6495 	pop	af
   21D6 F1                 6496 	pop	af
   21D7 F1                 6497 	pop	af
                           6498 ;demo.c:1090: pal_load("BULBS   PL5",32,1);
   21D8 21 01 00           6499 	ld	hl,#0x0001
   21DB E5                 6500 	push	hl
   21DC 3E 20              6501 	ld	a,#0x20
   21DE F5                 6502 	push	af
   21DF 33                 6503 	inc	sp
   21E0 21rFEs24           6504 	ld	hl,#__str_23
   21E3 E5                 6505 	push	hl
   21E4 CDrA3s07           6506 	call	_pal_load
   21E7 F1                 6507 	pop	af
   21E8 F1                 6508 	pop	af
   21E9 33                 6509 	inc	sp
                           6510 ;demo.c:1092: scratch_clear();
   21EA CDr90s07           6511 	call	_scratch_clear
                           6512 ;demo.c:1093: vdp_load_palette(scratch);
   21ED 21rE0s3F           6513 	ld	hl,#_scratch
   21F0 E5                 6514 	push	hl
   21F1 CDr00s00           6515 	call	_vdp_load_palette
   21F4 F1                 6516 	pop	af
                           6517 ;demo.c:1095: vdp_set_screen5();
   21F5 CDr00s00           6518 	call	_vdp_set_screen5
                           6519 ;demo.c:1097: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   21F8 21 00 00           6520 	ld	hl,#0x0000
   21FB E5                 6521 	push	hl
   21FC 2E 01              6522 	ld	l, #0x01
   21FE E5                 6523 	push	hl
   21FF 2E 00              6524 	ld	l, #0x00
   2201 E5                 6525 	push	hl
   2202 21 7F 09           6526 	ld	hl,#0x097F
   2205 E5                 6527 	push	hl
   2206 21r0As25           6528 	ld	hl,#__str_24
   2209 E5                 6529 	push	hl
   220A CDr99s09           6530 	call	_pck_load
   220D FD 21 0A 00        6531 	ld	iy,#0x000A
   2211 FD 39              6532 	add	iy,sp
   2213 FD F9              6533 	ld	sp,iy
                           6534 ;demo.c:1099: cmd.size_x = 256;
   2215 21r0Cs41           6535 	ld	hl, #_cmd + 8
   2218 36 00              6536 	ld	(hl),#0x00
   221A 23                 6537 	inc	hl
   221B 36 01              6538 	ld	(hl),#0x01
                           6539 ;demo.c:1100: cmd.size_y = 212;
   221D 21r0Es41           6540 	ld	hl, #_cmd + 10
   2220 36 D4              6541 	ld	(hl),#0xD4
   2222 23                 6542 	inc	hl
   2223 36 00              6543 	ld	(hl),#0x00
                           6544 ;demo.c:1101: cmd.data = 0;
                           6545 ;demo.c:1102: cmd.argument = 0x00;
   2225 3E 00              6546 	ld	a,#0x00
   2227 32r10s41           6547 	ld	(#_cmd + 12),a
   222A 32r11s41           6548 	ld	(#_cmd + 13),a
                           6549 ;demo.c:1103: cmd.command = 0xd0; 
   222D 01r12s41           6550 	ld	bc,#_cmd + 14
   2230 3E D0              6551 	ld	a,#0xD0
   2232 02                 6552 	ld	(bc),a
                           6553 ;demo.c:1104: cmd.source_x = 0;
   2233 21r04s41           6554 	ld	hl,#_cmd
   2236 36 00              6555 	ld	(hl),#0x00
   2238 23                 6556 	inc	hl
   2239 36 00              6557 	ld	(hl),#0x00
                           6558 ;demo.c:1105: cmd.source_y = 0;
   223B 21r06s41           6559 	ld	hl, #_cmd + 2
   223E 36 00              6560 	ld	(hl),#0x00
   2240 23                 6561 	inc	hl
   2241 36 00              6562 	ld	(hl),#0x00
                           6563 ;demo.c:1106: cmd.dest_x = 0;
   2243 21r08s41           6564 	ld	hl, #_cmd + 4
   2246 36 00              6565 	ld	(hl),#0x00
   2248 23                 6566 	inc	hl
   2249 36 00              6567 	ld	(hl),#0x00
                           6568 ;demo.c:1107: cmd.dest_y = 256;
   224B 21r0As41           6569 	ld	hl, #_cmd + 6
   224E 36 00              6570 	ld	(hl),#0x00
   2250 23                 6571 	inc	hl
   2251 36 01              6572 	ld	(hl),#0x01
                           6573 ;demo.c:1108: vdp_copier(&cmd);
   2253 21r04s41           6574 	ld	hl,#_cmd
   2256 E5                 6575 	push	hl
   2257 CDr00s00           6576 	call	_vdp_copier
   225A F1                 6577 	pop	af
                           6578 ;demo.c:1110: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   225B 21 00 00           6579 	ld	hl,#0x0000
   225E E5                 6580 	push	hl
   225F 2E 01              6581 	ld	l, #0x01
   2261 E5                 6582 	push	hl
   2262 2E 00              6583 	ld	l, #0x00
   2264 E5                 6584 	push	hl
   2265 21 C0 0F           6585 	ld	hl,#0x0FC0
   2268 E5                 6586 	push	hl
   2269 21r16s25           6587 	ld	hl,#__str_25
   226C E5                 6588 	push	hl
   226D CDr99s09           6589 	call	_pck_load
   2270 FD 21 0A 00        6590 	ld	iy,#0x000A
   2274 FD 39              6591 	add	iy,sp
   2276 FD F9              6592 	ld	sp,iy
                           6593 ;demo.c:1112: cmd.size_x = 256;
   2278 21r0Cs41           6594 	ld	hl, #_cmd + 8
   227B 36 00              6595 	ld	(hl),#0x00
   227D 23                 6596 	inc	hl
   227E 36 01              6597 	ld	(hl),#0x01
                           6598 ;demo.c:1113: cmd.size_y = 212;
   2280 21r0Es41           6599 	ld	hl, #_cmd + 10
   2283 36 D4              6600 	ld	(hl),#0xD4
   2285 23                 6601 	inc	hl
   2286 36 00              6602 	ld	(hl),#0x00
                           6603 ;demo.c:1114: cmd.data = 0;
                           6604 ;demo.c:1115: cmd.argument = 0x00;
   2288 3E 00              6605 	ld	a,#0x00
   228A 32r10s41           6606 	ld	(#_cmd + 12),a
   228D 32r11s41           6607 	ld	(#_cmd + 13),a
                           6608 ;demo.c:1116: cmd.command = 0xd0; 
   2290 01r12s41           6609 	ld	bc,#_cmd + 14
   2293 3E D0              6610 	ld	a,#0xD0
   2295 02                 6611 	ld	(bc),a
                           6612 ;demo.c:1117: cmd.source_x = 0;
   2296 21r04s41           6613 	ld	hl,#_cmd
   2299 36 00              6614 	ld	(hl),#0x00
   229B 23                 6615 	inc	hl
   229C 36 00              6616 	ld	(hl),#0x00
                           6617 ;demo.c:1118: cmd.source_y = 0;
   229E 21r06s41           6618 	ld	hl, #_cmd + 2
   22A1 36 00              6619 	ld	(hl),#0x00
   22A3 23                 6620 	inc	hl
   22A4 36 00              6621 	ld	(hl),#0x00
                           6622 ;demo.c:1119: cmd.dest_x = 0;
   22A6 21r08s41           6623 	ld	hl, #_cmd + 4
   22A9 36 00              6624 	ld	(hl),#0x00
   22AB 23                 6625 	inc	hl
   22AC 36 00              6626 	ld	(hl),#0x00
                           6627 ;demo.c:1120: cmd.dest_y = 512;
   22AE 21r0As41           6628 	ld	hl, #_cmd + 6
   22B1 36 00              6629 	ld	(hl),#0x00
   22B3 23                 6630 	inc	hl
   22B4 36 02              6631 	ld	(hl),#0x02
                           6632 ;demo.c:1121: vdp_copier(&cmd);
   22B6 21r04s41           6633 	ld	hl,#_cmd
   22B9 E5                 6634 	push	hl
   22BA CDr00s00           6635 	call	_vdp_copier
   22BD F1                 6636 	pop	af
                           6637 ;demo.c:1124: pck_load("BOXES   PCK",4500,0x0000,VRAM_0,0);
   22BE 21 00 00           6638 	ld	hl,#0x0000
   22C1 E5                 6639 	push	hl
   22C2 2E 01              6640 	ld	l, #0x01
   22C4 E5                 6641 	push	hl
   22C5 2E 00              6642 	ld	l, #0x00
   22C7 E5                 6643 	push	hl
   22C8 21 94 11           6644 	ld	hl,#0x1194
   22CB E5                 6645 	push	hl
   22CC 21r22s25           6646 	ld	hl,#__str_26
   22CF E5                 6647 	push	hl
   22D0 CDr99s09           6648 	call	_pck_load
   22D3 FD 21 0A 00        6649 	ld	iy,#0x000A
   22D7 FD 39              6650 	add	iy,sp
   22D9 FD F9              6651 	ld	sp,iy
                           6652 ;demo.c:1126: cmd.size_x = 256;
   22DB 21r0Cs41           6653 	ld	hl, #_cmd + 8
   22DE 36 00              6654 	ld	(hl),#0x00
   22E0 23                 6655 	inc	hl
   22E1 36 01              6656 	ld	(hl),#0x01
                           6657 ;demo.c:1127: cmd.size_y = 212;
   22E3 21r0Es41           6658 	ld	hl, #_cmd + 10
   22E6 36 D4              6659 	ld	(hl),#0xD4
   22E8 23                 6660 	inc	hl
   22E9 36 00              6661 	ld	(hl),#0x00
                           6662 ;demo.c:1128: cmd.data = 0;
                           6663 ;demo.c:1129: cmd.argument = 0x00;
   22EB 3E 00              6664 	ld	a,#0x00
   22ED 32r10s41           6665 	ld	(#_cmd + 12),a
   22F0 32r11s41           6666 	ld	(#_cmd + 13),a
                           6667 ;demo.c:1130: cmd.command = 0xd0; 
   22F3 01r12s41           6668 	ld	bc,#_cmd + 14
   22F6 3E D0              6669 	ld	a,#0xD0
   22F8 02                 6670 	ld	(bc),a
                           6671 ;demo.c:1131: cmd.source_x = 0;
   22F9 21r04s41           6672 	ld	hl,#_cmd
   22FC 36 00              6673 	ld	(hl),#0x00
   22FE 23                 6674 	inc	hl
   22FF 36 00              6675 	ld	(hl),#0x00
                           6676 ;demo.c:1132: cmd.source_y = 0;
   2301 21r06s41           6677 	ld	hl, #_cmd + 2
   2304 36 00              6678 	ld	(hl),#0x00
   2306 23                 6679 	inc	hl
   2307 36 00              6680 	ld	(hl),#0x00
                           6681 ;demo.c:1133: cmd.dest_x = 0;
   2309 21r08s41           6682 	ld	hl, #_cmd + 4
   230C 36 00              6683 	ld	(hl),#0x00
   230E 23                 6684 	inc	hl
   230F 36 00              6685 	ld	(hl),#0x00
                           6686 ;demo.c:1134: cmd.dest_y = 768;
   2311 21r0As41           6687 	ld	hl, #_cmd + 6
   2314 36 00              6688 	ld	(hl),#0x00
   2316 23                 6689 	inc	hl
   2317 36 03              6690 	ld	(hl),#0x03
                           6691 ;demo.c:1135: vdp_copier(&cmd);
   2319 21r04s41           6692 	ld	hl,#_cmd
   231C E5                 6693 	push	hl
   231D CDr00s00           6694 	call	_vdp_copier
   2320 F1                 6695 	pop	af
                           6696 ;demo.c:1137: scratch_clear();
   2321 CDr90s07           6697 	call	_scratch_clear
                           6698 ;demo.c:1138: vdp_load_palette(scratch);
   2324 21rE0s3F           6699 	ld	hl,#_scratch
   2327 E5                 6700 	push	hl
   2328 CDr00s00           6701 	call	_vdp_load_palette
   232B F1                 6702 	pop	af
                           6703 ;demo.c:1140: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   232C 21 00 00           6704 	ld	hl,#0x0000
   232F E5                 6705 	push	hl
   2330 2E 01              6706 	ld	l, #0x01
   2332 E5                 6707 	push	hl
   2333 2E 00              6708 	ld	l, #0x00
   2335 E5                 6709 	push	hl
   2336 21 6A 08           6710 	ld	hl,#0x086A
   2339 E5                 6711 	push	hl
   233A 21r2Es25           6712 	ld	hl,#__str_27
   233D E5                 6713 	push	hl
   233E CDr99s09           6714 	call	_pck_load
   2341 FD 21 0A 00        6715 	ld	iy,#0x000A
   2345 FD 39              6716 	add	iy,sp
   2347 FD F9              6717 	ld	sp,iy
                           6718 ;demo.c:1141: pal_load("DSSLOGO PL5",32,0);
   2349 21 00 00           6719 	ld	hl,#0x0000
   234C E5                 6720 	push	hl
   234D 3E 20              6721 	ld	a,#0x20
   234F F5                 6722 	push	af
   2350 33                 6723 	inc	sp
   2351 21r3As25           6724 	ld	hl,#__str_28
   2354 E5                 6725 	push	hl
   2355 CDrA3s07           6726 	call	_pal_load
   2358 F1                 6727 	pop	af
   2359 F1                 6728 	pop	af
   235A 33                 6729 	inc	sp
                           6730 ;demo.c:1143: scratch_clear();
   235B CDr90s07           6731 	call	_scratch_clear
                           6732 ;demo.c:1145: vdp_register(9,130); // 50hz,212
   235E 21 09 82           6733 	ld	hl,#0x8209
   2361 E5                 6734 	push	hl
   2362 CDr00s00           6735 	call	_vdp_register
   2365 F1                 6736 	pop	af
                           6737 ;demo.c:1147: install_isr(my_isr);
   2366 21rECs05           6738 	ld	hl,#_my_isr
   2369 E5                 6739 	push	hl
   236A CDr00s00           6740 	call	_install_isr
   236D F1                 6741 	pop	af
                           6742 ;demo.c:1149: while (!quit) {
   236E                    6743 00111$:
   236E AF                 6744 	xor	a,a
   236F DD B6 FF           6745 	or	a,-1 (ix)
   2372 C2r2Ds24           6746 	jp	NZ,00113$
                           6747 ;demo.c:1151: if (vbicount >= scenetimings[timeindex+1]) {
   2375 21r96s41           6748 	ld	hl,#_timeindex + 0
   2378 4E                 6749 	ld	c,(hl)
   2379 0C                 6750 	inc	c
   237A CB 21              6751 	sla	c
   237C 3ErA4              6752 	ld	a,#<_scenetimings
   237E 81                 6753 	add	a,c
   237F 6F                 6754 	ld	l,a
   2380 3Es41              6755 	ld	a,#>_scenetimings
   2382 CE 00              6756 	adc	a,#0x00
   2384 67                 6757 	ld	h,a
   2385 4E                 6758 	ld	c,(hl)
   2386 23                 6759 	inc	hl
   2387 46                 6760 	ld	b,(hl)
   2388 3Ar00s41           6761 	ld	a,(#_vbicount+0)
   238B 91                 6762 	sub	a,c
   238C 3Ar01s41           6763 	ld	a,(#_vbicount+1)
   238F 98                 6764 	sbc	a,b
   2390 FArB9s23           6765 	jp	M,00105$
                           6766 ;demo.c:1152: sceneindex++;
   2393 FD 21r94s41        6767 	ld	iy,#_sceneindex
   2397 FD 34 00           6768 	inc	0 (iy)
   239A 20 07              6769 	jr	NZ,00141$
   239C FD 21r94s41        6770 	ld	iy,#_sceneindex
   23A0 FD 34 01           6771 	inc	1 (iy)
   23A3                    6772 00141$:
                           6773 ;demo.c:1153: timeindex+=2;
   23A3 21r96s41           6774 	ld	hl,#_timeindex
   23A6 7E                 6775 	ld	a,(hl)
   23A7 C6 02              6776 	add	a,#0x02
   23A9 23                 6777 	inc	hl
   23AA 2B                 6778 	dec	hl
   23AB C5                 6779 	push	bc
   23AC 4F                 6780 	ld	c, a
   23AD 23                 6781 	inc	hl
   23AE 7E                 6782 	ld	a, (hl)
   23AF 47                 6783 	ld	b, a
   23B0 79                 6784 	ld	a, c
   23B1 2B                 6785 	dec	hl
   23B2 77                 6786 	ld	(hl), a
   23B3 78                 6787 	ld	a, b
   23B4 C1                 6788 	pop	bc
   23B5 CE 00              6789 	adc	a,#0x00
   23B7 23                 6790 	inc	hl
   23B8 77                 6791 	ld	(hl),a
   23B9                    6792 00105$:
                           6793 ;demo.c:1156: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   23B9 21r96s41           6794 	ld	hl,#_timeindex + 0
   23BC 4E                 6795 	ld	c,(hl)
   23BD 21r97s41           6796 	ld	hl,#_timeindex + 1
   23C0 46                 6797 	ld	b,(hl)
   23C1 CB 21              6798 	sla	c
   23C3 CB 10              6799 	rl	b
   23C5 21rA4s41           6800 	ld	hl,#_scenetimings
   23C8 09                 6801 	add	hl,bc
   23C9 4E                 6802 	ld	c,(hl)
   23CA 23                 6803 	inc	hl
   23CB 46                 6804 	ld	b,(hl)
   23CC 3Ar00s41           6805 	ld	a,(#_vbicount+0)
   23CF 91                 6806 	sub	a,c
   23D0 3Ar01s41           6807 	ld	a,(#_vbicount+1)
   23D3 98                 6808 	sbc	a,b
   23D4 FAr19s24           6809 	jp	M,00107$
   23D7 21r96s41           6810 	ld	hl,#_timeindex + 0
   23DA 4E                 6811 	ld	c,(hl)
   23DB 0C                 6812 	inc	c
   23DC CB 21              6813 	sla	c
   23DE 3ErA4              6814 	ld	a,#<_scenetimings
   23E0 81                 6815 	add	a,c
   23E1 6F                 6816 	ld	l,a
   23E2 3Es41              6817 	ld	a,#>_scenetimings
   23E4 CE 00              6818 	adc	a,#0x00
   23E6 67                 6819 	ld	h,a
   23E7 4E                 6820 	ld	c,(hl)
   23E8 23                 6821 	inc	hl
   23E9 46                 6822 	ld	b,(hl)
   23EA 3Ar00s41           6823 	ld	a,(#_vbicount+0)
   23ED 91                 6824 	sub	a,c
   23EE FD 21r00s41        6825 	ld	iy,#_vbicount
   23F2 FD 7E 01           6826 	ld	a,1 (iy)
   23F5 98                 6827 	sbc	a,b
   23F6 F2r19s24           6828 	jp	P,00107$
                           6829 ;demo.c:1157: waitVB();
   23F9 76                 6830 		halt 
                           6831 ;demo.c:1158: scenepointers[sceneindex]();
   23FA 21r94s41           6832 	ld	hl,#_sceneindex + 0
   23FD 4E                 6833 	ld	c,(hl)
   23FE FD 21r94s41        6834 	ld	iy,#_sceneindex
   2402 FD 46 01           6835 	ld	b,1 (iy)
   2405 CB 21              6836 	sla	c
   2407 CB 10              6837 	rl	b
   2409 21r98s41           6838 	ld	hl,#_scenepointers
   240C 09                 6839 	add	hl,bc
   240D 4E                 6840 	ld	c,(hl)
   240E 23                 6841 	inc	hl
   240F 46                 6842 	ld	b,(hl)
   2410 C5                 6843 	push	bc
   2411 21r18s24           6844 	ld	hl,#00146$
   2414 E5                 6845 	push	hl
   2415 69                 6846 	ld	l,c
   2416 60                 6847 	ld	h,b
   2417 E9                 6848 	jp	(hl)
   2418                    6849 00146$:
   2418 C1                 6850 	pop	bc
   2419                    6851 00107$:
                           6852 ;demo.c:1160: if(space())
   2419 21 08 01           6853 	ld	hl,#0x0108
   241C E5                 6854 	push	hl
   241D CDr00s00           6855 	call	_ispressed
   2420 F1                 6856 	pop	af
   2421 AF                 6857 	xor	a,a
   2422 B5                 6858 	or	a,l
   2423 CAr6Es23           6859 	jp	Z,00111$
                           6860 ;demo.c:1161: quit=1;
   2426 DD 36 FF 01        6861 	ld	-1 (ix),#0x01
   242A C3r6Es23           6862 	jp	00111$
   242D                    6863 00113$:
                           6864 ;demo.c:1164: do_quit();
   242D CDr4As20           6865 	call	_do_quit
   2430 DD F9              6866 	ld	sp,ix
   2432 DD E1              6867 	pop	ix
   2434 C9                 6868 	ret
   2435                    6869 _main_end::
   2435                    6870 __str_14:
   2435 64 65 6D 6F 20 69  6871 	.ascii "demo init"
        6E 69 74
   243E 0D                 6872 	.db 0x0D
   243F 0A                 6873 	.db 0x0A
   2440 0D                 6874 	.db 0x0D
   2441 0A                 6875 	.db 0x0A
   2442 00                 6876 	.db 0x00
   2443                    6877 __str_15:
   2443 6D 75 73 69 63 20  6878 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   2450 00                 6879 	.db 0x00
   2451                    6880 __str_16:
   2451 64 6F 6E 65 2E     6881 	.ascii "done."
   2456 0D                 6882 	.db 0x0D
   2457 0A                 6883 	.db 0x0A
   2458 00                 6884 	.db 0x00
   2459                    6885 __str_17:
   2459 64 65 74 65 63 74  6886 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   246E 0D                 6887 	.db 0x0D
   246F 0A                 6888 	.db 0x0A
   2470 0D                 6889 	.db 0x0D
   2471 0A                 6890 	.db 0x0A
   2472 00                 6891 	.db 0x00
   2473                    6892 __str_18:
   2473 76 64 70 32 20 66  6893 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   248E 0D                 6894 	.db 0x0D
   248F 0A                 6895 	.db 0x0A
   2490 0D                 6896 	.db 0x0D
   2491 0A                 6897 	.db 0x0A
   2492 00                 6898 	.db 0x00
   2493                    6899 __str_19:
   2493 20 76 64 70 31 20  6900 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   249F 0D                 6901 	.db 0x0D
   24A0 0A                 6902 	.db 0x0A
   24A1 53 6F 72 72 79 2C  6903 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   24CF 20 56 52 41 4D 2E  6904 	.ascii " VRAM."
   24D5 0D                 6905 	.db 0x0D
   24D6 0A                 6906 	.db 0x0A
   24D7 0D                 6907 	.db 0x0D
   24D8 0A                 6908 	.db 0x0A
   24D9 00                 6909 	.db 0x00
   24DA                    6910 __str_20:
   24DA 54 57 49 53 54 45  6911 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   24E5 00                 6912 	.db 0x00
   24E6                    6913 __str_21:
   24E6 4C 46 20 20 20 20  6914 	.ascii "LF      PL5"
        20 20 50 4C 35
   24F1 00                 6915 	.db 0x00
   24F2                    6916 __str_22:
   24F2 42 4F 58 45 53 20  6917 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   24FD 00                 6918 	.db 0x00
   24FE                    6919 __str_23:
   24FE 42 55 4C 42 53 20  6920 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   2509 00                 6921 	.db 0x00
   250A                    6922 __str_24:
   250A 42 55 4C 42 53 20  6923 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   2515 00                 6924 	.db 0x00
   2516                    6925 __str_25:
   2516 54 57 49 53 54 45  6926 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   2521 00                 6927 	.db 0x00
   2522                    6928 __str_26:
   2522 42 4F 58 45 53 20  6929 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   252D 00                 6930 	.db 0x00
   252E                    6931 __str_27:
   252E 44 53 53 4C 4F 47  6932 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   2539 00                 6933 	.db 0x00
   253A                    6934 __str_28:
   253A 44 53 53 4C 4F 47  6935 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   2545 00                 6936 	.db 0x00
                           6937 	.area _CODE
                           6938 	.area _CABS
