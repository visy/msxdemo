                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Tue Feb 27 00:21:33 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _tritiles
                             15 	.globl _drawtilescreen
                             16 	.globl _drawtritile
                             17 	.globl _boxes
                             18 	.globl _drawbox
                             19 	.globl _animplay
                             20 	.globl _bulbs
                             21 	.globl _twister
                             22 	.globl _font
                             23 	.globl _drawsine
                             24 	.globl _drawstr
                             25 	.globl _do_letter_tall
                             26 	.globl _do_letter
                             27 	.globl _raster_effu
                             28 	.globl _do_blocks
                             29 	.globl _do_ymmm
                             30 	.globl _fadein
                             31 	.globl _pck_load
                             32 	.globl _raw_load
                             33 	.globl _pause
                             34 	.globl _pal_load
                             35 	.globl _scratch_clear
                             36 	.globl _ge5_load
                             37 	.globl _color_isr
                             38 	.globl _my_isr
                             39 	.globl _isNthBitSet
                             40 	.globl _triframes
                             41 	.globl _tripaltick
                             42 	.globl _tripal
                             43 	.globl _tri_inited
                             44 	.globl _pbt
                             45 	.globl _pbx
                             46 	.globl _bonc
                             47 	.globl _bo
                             48 	.globl _byy
                             49 	.globl _bxx
                             50 	.globl _bt
                             51 	.globl _by
                             52 	.globl _bx
                             53 	.globl _prevby
                             54 	.globl _prevbx
                             55 	.globl _prevy
                             56 	.globl _prevx
                             57 	.globl _dbly
                             58 	.globl _buffer
                             59 	.globl _boxes_init
                             60 	.globl _anim_init
                             61 	.globl _enderdir
                             62 	.globl _ender
                             63 	.globl _ff2
                             64 	.globl _ff1
                             65 	.globl _bulbflipper
                             66 	.globl _twinited
                             67 	.globl _ff
                             68 	.globl _ly
                             69 	.globl _lx
                             70 	.globl _linenum
                             71 	.globl _flof
                             72 	.globl _btab
                             73 	.globl _bty
                             74 	.globl _btx
                             75 	.globl _bsy
                             76 	.globl _bsx
                             77 	.globl _block_init
                             78 	.globl _cc
                             79 	.globl _yofff
                             80 	.globl _cmd
                             81 	.globl _tick
                             82 	.globl _vbicount
                             83 	.globl _boxes_palette
                             84 	.globl _tf_palette
                             85 	.globl _twister_palette
                             86 	.globl _block_palette
                             87 	.globl _cur_palette
                             88 	.globl _scratch
                             89 	.globl _tf2
                             90 	.globl _tf1
                             91 	.globl _packbuffer
                             92 	.globl _tri_lookup_y
                             93 	.globl _tri_lookup_x
                             94 	.globl _sintab
                             95 	.globl _font_w
                             96 	.globl _font_y
                             97 	.globl _font_x
                             98 	.globl _tri_side2
                             99 	.globl _tri_side1
                            100 	.globl _tri_dia
                            101 	.globl _tri_up
                            102 	.globl _tri_center
                            103 	.globl _sintabx
                            104 ;--------------------------------------------------------
                            105 ; special function registers
                            106 ;--------------------------------------------------------
                            107 ;--------------------------------------------------------
                            108 ;  ram data
                            109 ;--------------------------------------------------------
                            110 	.area _DATA
   0000                     111 _sintab::
   0000                     112 	.ds 256
   0100                     113 _tri_lookup_x::
   0100                     114 	.ds 32
   0120                     115 _tri_lookup_y::
   0120                     116 	.ds 64
   0160                     117 _packbuffer::
   0160                     118 	.ds 12000
   3040                     119 _tf1::
   3040                     120 	.ds 12000
   5F20                     121 _tf2::
   5F20                     122 	.ds 12000
   8E00                     123 _scratch::
   8E00                     124 	.ds 128
   8E80                     125 _cur_palette::
   8E80                     126 	.ds 32
   8EA0                     127 _block_palette::
   8EA0                     128 	.ds 32
   8EC0                     129 _twister_palette::
   8EC0                     130 	.ds 32
   8EE0                     131 _tf_palette::
   8EE0                     132 	.ds 32
   8F00                     133 _boxes_palette::
   8F00                     134 	.ds 32
   8F20                     135 _vbicount::
   8F20                     136 	.ds 2
   8F22                     137 _tick::
   8F22                     138 	.ds 2
   8F24                     139 _cmd::
   8F24                     140 	.ds 15
   8F33                     141 _isNthBitSet_mask_1_1:
   8F33                     142 	.ds 8
   8F3B                     143 _yofff::
   8F3B                     144 	.ds 1
   8F3C                     145 _cc::
   8F3C                     146 	.ds 1
   8F3D                     147 _flipper:
   8F3D                     148 	.ds 2
   8F3F                     149 _ymmmf:
   8F3F                     150 	.ds 2
   8F41                     151 _block_init::
   8F41                     152 	.ds 1
   8F42                     153 _bsx::
   8F42                     154 	.ds 2
   8F44                     155 _bsy::
   8F44                     156 	.ds 2
   8F46                     157 _btx::
   8F46                     158 	.ds 2
   8F48                     159 _bty::
   8F48                     160 	.ds 2
   8F4A                     161 _btab::
   8F4A                     162 	.ds 32
   8F6A                     163 _flof::
   8F6A                     164 	.ds 2
   8F6C                     165 _linenum::
   8F6C                     166 	.ds 2
   8F6E                     167 _lx::
   8F6E                     168 	.ds 1
   8F6F                     169 _ly::
   8F6F                     170 	.ds 1
   8F70                     171 _ff::
   8F70                     172 	.ds 2
   8F72                     173 _twinited::
   8F72                     174 	.ds 2
   8F74                     175 _bulbflipper::
   8F74                     176 	.ds 2
   8F76                     177 _ff1::
   8F76                     178 	.ds 2
   8F78                     179 _ff2::
   8F78                     180 	.ds 2
   8F7A                     181 _ender::
   8F7A                     182 	.ds 2
   8F7C                     183 _enderdir::
   8F7C                     184 	.ds 2
   8F7E                     185 _xo:
   8F7E                     186 	.ds 2
   8F80                     187 _yo:
   8F80                     188 	.ds 2
   8F82                     189 _po:
   8F82                     190 	.ds 2
   8F84                     191 _fffaaa:
   8F84                     192 	.ds 2
   8F86                     193 _anim_init::
   8F86                     194 	.ds 2
   8F88                     195 _boxes_init::
   8F88                     196 	.ds 1
   8F89                     197 _buffer::
   8F89                     198 	.ds 2
   8F8B                     199 _dbly::
   8F8B                     200 	.ds 2
   8F8D                     201 _prevx::
   8F8D                     202 	.ds 2
   8F8F                     203 _prevy::
   8F8F                     204 	.ds 2
   8F91                     205 _prevbx::
   8F91                     206 	.ds 2
   8F93                     207 _prevby::
   8F93                     208 	.ds 2
   8F95                     209 _bx::
   8F95                     210 	.ds 2
   8F97                     211 _by::
   8F97                     212 	.ds 2
   8F99                     213 _bt::
   8F99                     214 	.ds 2
   8F9B                     215 _bxx::
   8F9B                     216 	.ds 2
   8F9D                     217 _byy::
   8F9D                     218 	.ds 2
   8F9F                     219 _bo::
   8F9F                     220 	.ds 2
   8FA1                     221 _bonc::
   8FA1                     222 	.ds 2
   8FA3                     223 _pbx::
   8FA3                     224 	.ds 2
   8FA5                     225 _pbt::
   8FA5                     226 	.ds 2
   8FA7                     227 _tri_inited::
   8FA7                     228 	.ds 1
   8FA8                     229 _tripal::
   8FA8                     230 	.ds 9
   8FB1                     231 _tripaltick::
   8FB1                     232 	.ds 1
   8FB2                     233 _triframes::
   8FB2                     234 	.ds 2
                            235 ;--------------------------------------------------------
                            236 ; overlayable items in  ram 
                            237 ;--------------------------------------------------------
                            238 	.area _OVERLAY
                            239 ;--------------------------------------------------------
                            240 ; external initialized ram data
                            241 ;--------------------------------------------------------
                            242 ;--------------------------------------------------------
                            243 ; global & static initialisations
                            244 ;--------------------------------------------------------
                            245 	.area _HOME
                            246 	.area _GSINIT
                            247 	.area _GSFINAL
                            248 	.area _GSINIT
                            249 ;demo.c:134: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r33s8F            250 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            251 	call	__initrleblock
   0006 08                  252 	.db	8
   0007 01 02 04 08 10 20   253 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  254 	.db	0
                            255 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            256 	ld	hl,#_sintab
   0013 CDr00s00            257 	call	__initrleblock
   0016 3B                  258 	.db	59
   0017 00 03 06 09 0C 0F   259 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   260 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   261 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   262 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   263 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   264 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   265 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            266 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               267 	.db	#-5,#0x7E
   0054 01                  268 	.db	1
   0055 7F                  269 	.db	0x7F
   0056 FB 7E               270 	.db	#-5,#0x7E
   0058 75                  271 	.db	117
   0059 7D 7D 7C 7B 7B 7A   272 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   273 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   274 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   275 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   276 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   277 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   278 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   279 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   280 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   281 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   282 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   283 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   284 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   285 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      286 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               287 	.db	#-5,#0x82
   00D0 01                  288 	.db	1
   00D1 81                  289 	.db	0x81
   00D2 FB 82               290 	.db	#-5,#0x82
   00D4 3A                  291 	.db	58
   00D5 83 83 84 85 85 86   292 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   293 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   294 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   295 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   296 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   297 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   298 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               299 	.db	0xFA, 0xFD
   010F 00                  300 	.db	0
                            301 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            302 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            303 	call	__initrleblock
   0116 E0 00               304 	.db	#-32,#0x00
   0118 00                  305 	.db	0
                            306 ;demo.c:114: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            307 	ld	hl,#_tri_lookup_y
   011C CDr00s00            308 	call	__initrleblock
   011F C0 00               309 	.db	#-64,#0x00
   0121 00                  310 	.db	0
                            311 ;demo.c:116: uint8_t packbuffer[12000] = {0};
   0122 21r60s01            312 	ld	hl,#_packbuffer
   0125 CDr00s00            313 	call	__initrleblock
   0128 81 00               314 	.db	#-127,#0x00
   012A 81 00               315 	.db	#-127,#0x00
   012C 81 00               316 	.db	#-127,#0x00
   012E 81 00               317 	.db	#-127,#0x00
   0130 81 00               318 	.db	#-127,#0x00
   0132 81 00               319 	.db	#-127,#0x00
   0134 81 00               320 	.db	#-127,#0x00
   0136 81 00               321 	.db	#-127,#0x00
   0138 81 00               322 	.db	#-127,#0x00
   013A 81 00               323 	.db	#-127,#0x00
   013C 81 00               324 	.db	#-127,#0x00
   013E 81 00               325 	.db	#-127,#0x00
   0140 81 00               326 	.db	#-127,#0x00
   0142 81 00               327 	.db	#-127,#0x00
   0144 81 00               328 	.db	#-127,#0x00
   0146 81 00               329 	.db	#-127,#0x00
   0148 81 00               330 	.db	#-127,#0x00
   014A 81 00               331 	.db	#-127,#0x00
   014C 81 00               332 	.db	#-127,#0x00
   014E 81 00               333 	.db	#-127,#0x00
   0150 81 00               334 	.db	#-127,#0x00
   0152 81 00               335 	.db	#-127,#0x00
   0154 81 00               336 	.db	#-127,#0x00
   0156 81 00               337 	.db	#-127,#0x00
   0158 81 00               338 	.db	#-127,#0x00
   015A 81 00               339 	.db	#-127,#0x00
   015C 81 00               340 	.db	#-127,#0x00
   015E 81 00               341 	.db	#-127,#0x00
   0160 81 00               342 	.db	#-127,#0x00
   0162 81 00               343 	.db	#-127,#0x00
   0164 81 00               344 	.db	#-127,#0x00
   0166 81 00               345 	.db	#-127,#0x00
   0168 81 00               346 	.db	#-127,#0x00
   016A 81 00               347 	.db	#-127,#0x00
   016C 81 00               348 	.db	#-127,#0x00
   016E 81 00               349 	.db	#-127,#0x00
   0170 81 00               350 	.db	#-127,#0x00
   0172 81 00               351 	.db	#-127,#0x00
   0174 81 00               352 	.db	#-127,#0x00
   0176 81 00               353 	.db	#-127,#0x00
   0178 81 00               354 	.db	#-127,#0x00
   017A 81 00               355 	.db	#-127,#0x00
   017C 81 00               356 	.db	#-127,#0x00
   017E 81 00               357 	.db	#-127,#0x00
   0180 81 00               358 	.db	#-127,#0x00
   0182 81 00               359 	.db	#-127,#0x00
   0184 81 00               360 	.db	#-127,#0x00
   0186 81 00               361 	.db	#-127,#0x00
   0188 81 00               362 	.db	#-127,#0x00
   018A 81 00               363 	.db	#-127,#0x00
   018C 81 00               364 	.db	#-127,#0x00
   018E 81 00               365 	.db	#-127,#0x00
   0190 81 00               366 	.db	#-127,#0x00
   0192 81 00               367 	.db	#-127,#0x00
   0194 81 00               368 	.db	#-127,#0x00
   0196 81 00               369 	.db	#-127,#0x00
   0198 81 00               370 	.db	#-127,#0x00
   019A 81 00               371 	.db	#-127,#0x00
   019C 81 00               372 	.db	#-127,#0x00
   019E 81 00               373 	.db	#-127,#0x00
   01A0 81 00               374 	.db	#-127,#0x00
   01A2 81 00               375 	.db	#-127,#0x00
   01A4 81 00               376 	.db	#-127,#0x00
   01A6 81 00               377 	.db	#-127,#0x00
   01A8 81 00               378 	.db	#-127,#0x00
   01AA 81 00               379 	.db	#-127,#0x00
   01AC 81 00               380 	.db	#-127,#0x00
   01AE 81 00               381 	.db	#-127,#0x00
   01B0 81 00               382 	.db	#-127,#0x00
   01B2 81 00               383 	.db	#-127,#0x00
   01B4 81 00               384 	.db	#-127,#0x00
   01B6 81 00               385 	.db	#-127,#0x00
   01B8 81 00               386 	.db	#-127,#0x00
   01BA 81 00               387 	.db	#-127,#0x00
   01BC 81 00               388 	.db	#-127,#0x00
   01BE 81 00               389 	.db	#-127,#0x00
   01C0 81 00               390 	.db	#-127,#0x00
   01C2 81 00               391 	.db	#-127,#0x00
   01C4 81 00               392 	.db	#-127,#0x00
   01C6 81 00               393 	.db	#-127,#0x00
   01C8 81 00               394 	.db	#-127,#0x00
   01CA 81 00               395 	.db	#-127,#0x00
   01CC 81 00               396 	.db	#-127,#0x00
   01CE 81 00               397 	.db	#-127,#0x00
   01D0 81 00               398 	.db	#-127,#0x00
   01D2 81 00               399 	.db	#-127,#0x00
   01D4 81 00               400 	.db	#-127,#0x00
   01D6 81 00               401 	.db	#-127,#0x00
   01D8 81 00               402 	.db	#-127,#0x00
   01DA 81 00               403 	.db	#-127,#0x00
   01DC 81 00               404 	.db	#-127,#0x00
   01DE 81 00               405 	.db	#-127,#0x00
   01E0 81 00               406 	.db	#-127,#0x00
   01E2 81 00               407 	.db	#-127,#0x00
   01E4 C2 00               408 	.db	#-62,#0x00
   01E6 00                  409 	.db	0
                            410 ;demo.c:118: uint8_t tf1[12000] = {0};
   01E7 21r40s30            411 	ld	hl,#_tf1
   01EA CDr00s00            412 	call	__initrleblock
   01ED 81 00               413 	.db	#-127,#0x00
   01EF 81 00               414 	.db	#-127,#0x00
   01F1 81 00               415 	.db	#-127,#0x00
   01F3 81 00               416 	.db	#-127,#0x00
   01F5 81 00               417 	.db	#-127,#0x00
   01F7 81 00               418 	.db	#-127,#0x00
   01F9 81 00               419 	.db	#-127,#0x00
   01FB 81 00               420 	.db	#-127,#0x00
   01FD 81 00               421 	.db	#-127,#0x00
   01FF 81 00               422 	.db	#-127,#0x00
   0201 81 00               423 	.db	#-127,#0x00
   0203 81 00               424 	.db	#-127,#0x00
   0205 81 00               425 	.db	#-127,#0x00
   0207 81 00               426 	.db	#-127,#0x00
   0209 81 00               427 	.db	#-127,#0x00
   020B 81 00               428 	.db	#-127,#0x00
   020D 81 00               429 	.db	#-127,#0x00
   020F 81 00               430 	.db	#-127,#0x00
   0211 81 00               431 	.db	#-127,#0x00
   0213 81 00               432 	.db	#-127,#0x00
   0215 81 00               433 	.db	#-127,#0x00
   0217 81 00               434 	.db	#-127,#0x00
   0219 81 00               435 	.db	#-127,#0x00
   021B 81 00               436 	.db	#-127,#0x00
   021D 81 00               437 	.db	#-127,#0x00
   021F 81 00               438 	.db	#-127,#0x00
   0221 81 00               439 	.db	#-127,#0x00
   0223 81 00               440 	.db	#-127,#0x00
   0225 81 00               441 	.db	#-127,#0x00
   0227 81 00               442 	.db	#-127,#0x00
   0229 81 00               443 	.db	#-127,#0x00
   022B 81 00               444 	.db	#-127,#0x00
   022D 81 00               445 	.db	#-127,#0x00
   022F 81 00               446 	.db	#-127,#0x00
   0231 81 00               447 	.db	#-127,#0x00
   0233 81 00               448 	.db	#-127,#0x00
   0235 81 00               449 	.db	#-127,#0x00
   0237 81 00               450 	.db	#-127,#0x00
   0239 81 00               451 	.db	#-127,#0x00
   023B 81 00               452 	.db	#-127,#0x00
   023D 81 00               453 	.db	#-127,#0x00
   023F 81 00               454 	.db	#-127,#0x00
   0241 81 00               455 	.db	#-127,#0x00
   0243 81 00               456 	.db	#-127,#0x00
   0245 81 00               457 	.db	#-127,#0x00
   0247 81 00               458 	.db	#-127,#0x00
   0249 81 00               459 	.db	#-127,#0x00
   024B 81 00               460 	.db	#-127,#0x00
   024D 81 00               461 	.db	#-127,#0x00
   024F 81 00               462 	.db	#-127,#0x00
   0251 81 00               463 	.db	#-127,#0x00
   0253 81 00               464 	.db	#-127,#0x00
   0255 81 00               465 	.db	#-127,#0x00
   0257 81 00               466 	.db	#-127,#0x00
   0259 81 00               467 	.db	#-127,#0x00
   025B 81 00               468 	.db	#-127,#0x00
   025D 81 00               469 	.db	#-127,#0x00
   025F 81 00               470 	.db	#-127,#0x00
   0261 81 00               471 	.db	#-127,#0x00
   0263 81 00               472 	.db	#-127,#0x00
   0265 81 00               473 	.db	#-127,#0x00
   0267 81 00               474 	.db	#-127,#0x00
   0269 81 00               475 	.db	#-127,#0x00
   026B 81 00               476 	.db	#-127,#0x00
   026D 81 00               477 	.db	#-127,#0x00
   026F 81 00               478 	.db	#-127,#0x00
   0271 81 00               479 	.db	#-127,#0x00
   0273 81 00               480 	.db	#-127,#0x00
   0275 81 00               481 	.db	#-127,#0x00
   0277 81 00               482 	.db	#-127,#0x00
   0279 81 00               483 	.db	#-127,#0x00
   027B 81 00               484 	.db	#-127,#0x00
   027D 81 00               485 	.db	#-127,#0x00
   027F 81 00               486 	.db	#-127,#0x00
   0281 81 00               487 	.db	#-127,#0x00
   0283 81 00               488 	.db	#-127,#0x00
   0285 81 00               489 	.db	#-127,#0x00
   0287 81 00               490 	.db	#-127,#0x00
   0289 81 00               491 	.db	#-127,#0x00
   028B 81 00               492 	.db	#-127,#0x00
   028D 81 00               493 	.db	#-127,#0x00
   028F 81 00               494 	.db	#-127,#0x00
   0291 81 00               495 	.db	#-127,#0x00
   0293 81 00               496 	.db	#-127,#0x00
   0295 81 00               497 	.db	#-127,#0x00
   0297 81 00               498 	.db	#-127,#0x00
   0299 81 00               499 	.db	#-127,#0x00
   029B 81 00               500 	.db	#-127,#0x00
   029D 81 00               501 	.db	#-127,#0x00
   029F 81 00               502 	.db	#-127,#0x00
   02A1 81 00               503 	.db	#-127,#0x00
   02A3 81 00               504 	.db	#-127,#0x00
   02A5 81 00               505 	.db	#-127,#0x00
   02A7 81 00               506 	.db	#-127,#0x00
   02A9 C2 00               507 	.db	#-62,#0x00
   02AB 00                  508 	.db	0
                            509 ;demo.c:119: uint8_t tf2[12000] = {0};
   02AC 21r20s5F            510 	ld	hl,#_tf2
   02AF CDr00s00            511 	call	__initrleblock
   02B2 81 00               512 	.db	#-127,#0x00
   02B4 81 00               513 	.db	#-127,#0x00
   02B6 81 00               514 	.db	#-127,#0x00
   02B8 81 00               515 	.db	#-127,#0x00
   02BA 81 00               516 	.db	#-127,#0x00
   02BC 81 00               517 	.db	#-127,#0x00
   02BE 81 00               518 	.db	#-127,#0x00
   02C0 81 00               519 	.db	#-127,#0x00
   02C2 81 00               520 	.db	#-127,#0x00
   02C4 81 00               521 	.db	#-127,#0x00
   02C6 81 00               522 	.db	#-127,#0x00
   02C8 81 00               523 	.db	#-127,#0x00
   02CA 81 00               524 	.db	#-127,#0x00
   02CC 81 00               525 	.db	#-127,#0x00
   02CE 81 00               526 	.db	#-127,#0x00
   02D0 81 00               527 	.db	#-127,#0x00
   02D2 81 00               528 	.db	#-127,#0x00
   02D4 81 00               529 	.db	#-127,#0x00
   02D6 81 00               530 	.db	#-127,#0x00
   02D8 81 00               531 	.db	#-127,#0x00
   02DA 81 00               532 	.db	#-127,#0x00
   02DC 81 00               533 	.db	#-127,#0x00
   02DE 81 00               534 	.db	#-127,#0x00
   02E0 81 00               535 	.db	#-127,#0x00
   02E2 81 00               536 	.db	#-127,#0x00
   02E4 81 00               537 	.db	#-127,#0x00
   02E6 81 00               538 	.db	#-127,#0x00
   02E8 81 00               539 	.db	#-127,#0x00
   02EA 81 00               540 	.db	#-127,#0x00
   02EC 81 00               541 	.db	#-127,#0x00
   02EE 81 00               542 	.db	#-127,#0x00
   02F0 81 00               543 	.db	#-127,#0x00
   02F2 81 00               544 	.db	#-127,#0x00
   02F4 81 00               545 	.db	#-127,#0x00
   02F6 81 00               546 	.db	#-127,#0x00
   02F8 81 00               547 	.db	#-127,#0x00
   02FA 81 00               548 	.db	#-127,#0x00
   02FC 81 00               549 	.db	#-127,#0x00
   02FE 81 00               550 	.db	#-127,#0x00
   0300 81 00               551 	.db	#-127,#0x00
   0302 81 00               552 	.db	#-127,#0x00
   0304 81 00               553 	.db	#-127,#0x00
   0306 81 00               554 	.db	#-127,#0x00
   0308 81 00               555 	.db	#-127,#0x00
   030A 81 00               556 	.db	#-127,#0x00
   030C 81 00               557 	.db	#-127,#0x00
   030E 81 00               558 	.db	#-127,#0x00
   0310 81 00               559 	.db	#-127,#0x00
   0312 81 00               560 	.db	#-127,#0x00
   0314 81 00               561 	.db	#-127,#0x00
   0316 81 00               562 	.db	#-127,#0x00
   0318 81 00               563 	.db	#-127,#0x00
   031A 81 00               564 	.db	#-127,#0x00
   031C 81 00               565 	.db	#-127,#0x00
   031E 81 00               566 	.db	#-127,#0x00
   0320 81 00               567 	.db	#-127,#0x00
   0322 81 00               568 	.db	#-127,#0x00
   0324 81 00               569 	.db	#-127,#0x00
   0326 81 00               570 	.db	#-127,#0x00
   0328 81 00               571 	.db	#-127,#0x00
   032A 81 00               572 	.db	#-127,#0x00
   032C 81 00               573 	.db	#-127,#0x00
   032E 81 00               574 	.db	#-127,#0x00
   0330 81 00               575 	.db	#-127,#0x00
   0332 81 00               576 	.db	#-127,#0x00
   0334 81 00               577 	.db	#-127,#0x00
   0336 81 00               578 	.db	#-127,#0x00
   0338 81 00               579 	.db	#-127,#0x00
   033A 81 00               580 	.db	#-127,#0x00
   033C 81 00               581 	.db	#-127,#0x00
   033E 81 00               582 	.db	#-127,#0x00
   0340 81 00               583 	.db	#-127,#0x00
   0342 81 00               584 	.db	#-127,#0x00
   0344 81 00               585 	.db	#-127,#0x00
   0346 81 00               586 	.db	#-127,#0x00
   0348 81 00               587 	.db	#-127,#0x00
   034A 81 00               588 	.db	#-127,#0x00
   034C 81 00               589 	.db	#-127,#0x00
   034E 81 00               590 	.db	#-127,#0x00
   0350 81 00               591 	.db	#-127,#0x00
   0352 81 00               592 	.db	#-127,#0x00
   0354 81 00               593 	.db	#-127,#0x00
   0356 81 00               594 	.db	#-127,#0x00
   0358 81 00               595 	.db	#-127,#0x00
   035A 81 00               596 	.db	#-127,#0x00
   035C 81 00               597 	.db	#-127,#0x00
   035E 81 00               598 	.db	#-127,#0x00
   0360 81 00               599 	.db	#-127,#0x00
   0362 81 00               600 	.db	#-127,#0x00
   0364 81 00               601 	.db	#-127,#0x00
   0366 81 00               602 	.db	#-127,#0x00
   0368 81 00               603 	.db	#-127,#0x00
   036A 81 00               604 	.db	#-127,#0x00
   036C 81 00               605 	.db	#-127,#0x00
   036E C2 00               606 	.db	#-62,#0x00
   0370 00                  607 	.db	0
                            608 ;demo.c:128: volatile int vbicount=0;
   0371 FD 21r20s8F         609 	ld	iy,#_vbicount
   0375 FD 36 00 00         610 	ld	0 (iy),#0x00
   0379 FD 21r20s8F         611 	ld	iy,#_vbicount
   037D FD 36 01 00         612 	ld	1 (iy),#0x00
                            613 ;demo.c:129: volatile int tick=0;
   0381 FD 21r22s8F         614 	ld	iy,#_tick
   0385 FD 36 00 00         615 	ld	0 (iy),#0x00
   0389 FD 21r22s8F         616 	ld	iy,#_tick
   038D FD 36 01 00         617 	ld	1 (iy),#0x00
                            618 ;demo.c:329: uint8_t yofff = 0;
   0391 FD 21r3Bs8F         619 	ld	iy,#_yofff
   0395 FD 36 00 00         620 	ld	0 (iy),#0x00
                            621 ;demo.c:330: uint8_t cc = 0;
   0399 FD 21r3Cs8F         622 	ld	iy,#_cc
   039D FD 36 00 00         623 	ld	0 (iy),#0x00
                            624 ;demo.c:331: static int flipper = 0;
   03A1 FD 21r3Ds8F         625 	ld	iy,#_flipper
   03A5 FD 36 00 00         626 	ld	0 (iy),#0x00
   03A9 FD 21r3Ds8F         627 	ld	iy,#_flipper
   03AD FD 36 01 00         628 	ld	1 (iy),#0x00
                            629 ;demo.c:332: static int ymmmf = 0;
   03B1 FD 21r3Fs8F         630 	ld	iy,#_ymmmf
   03B5 FD 36 00 00         631 	ld	0 (iy),#0x00
   03B9 FD 21r3Fs8F         632 	ld	iy,#_ymmmf
   03BD FD 36 01 00         633 	ld	1 (iy),#0x00
                            634 ;demo.c:363: char block_init = 0;
   03C1 FD 21r41s8F         635 	ld	iy,#_block_init
   03C5 FD 36 00 00         636 	ld	0 (iy),#0x00
                            637 ;demo.c:365: int bsx = 0;
   03C9 FD 21r42s8F         638 	ld	iy,#_bsx
   03CD FD 36 00 00         639 	ld	0 (iy),#0x00
   03D1 FD 21r42s8F         640 	ld	iy,#_bsx
   03D5 FD 36 01 00         641 	ld	1 (iy),#0x00
                            642 ;demo.c:366: int bsy = 0;
   03D9 FD 21r44s8F         643 	ld	iy,#_bsy
   03DD FD 36 00 00         644 	ld	0 (iy),#0x00
   03E1 FD 21r44s8F         645 	ld	iy,#_bsy
   03E5 FD 36 01 00         646 	ld	1 (iy),#0x00
                            647 ;demo.c:367: int btx = 0;
   03E9 FD 21r46s8F         648 	ld	iy,#_btx
   03ED FD 36 00 00         649 	ld	0 (iy),#0x00
   03F1 FD 21r46s8F         650 	ld	iy,#_btx
   03F5 FD 36 01 00         651 	ld	1 (iy),#0x00
                            652 ;demo.c:368: int bty = 0;
   03F9 FD 21r48s8F         653 	ld	iy,#_bty
   03FD FD 36 00 00         654 	ld	0 (iy),#0x00
   0401 FD 21r48s8F         655 	ld	iy,#_bty
   0405 FD 36 01 00         656 	ld	1 (iy),#0x00
                            657 ;demo.c:370: int btab[16] = {0};
   0409 21r4As8F            658 	ld	hl,#_btab
   040C CDr00s00            659 	call	__initrleblock
   040F E0 00               660 	.db	#-32,#0x00
   0411 00                  661 	.db	0
                            662 ;demo.c:372: int flof = 0;
   0412 FD 21r6As8F         663 	ld	iy,#_flof
   0416 FD 36 00 00         664 	ld	0 (iy),#0x00
   041A FD 21r6As8F         665 	ld	iy,#_flof
   041E FD 36 01 00         666 	ld	1 (iy),#0x00
                            667 ;demo.c:421: int linenum = 0;
   0422 FD 21r6Cs8F         668 	ld	iy,#_linenum
   0426 FD 36 00 00         669 	ld	0 (iy),#0x00
   042A FD 21r6Cs8F         670 	ld	iy,#_linenum
   042E FD 36 01 00         671 	ld	1 (iy),#0x00
                            672 ;demo.c:479: uint8_t lx = 0;
   0432 FD 21r6Es8F         673 	ld	iy,#_lx
   0436 FD 36 00 00         674 	ld	0 (iy),#0x00
                            675 ;demo.c:480: uint8_t ly = 0;
   043A FD 21r6Fs8F         676 	ld	iy,#_ly
   043E FD 36 00 00         677 	ld	0 (iy),#0x00
                            678 ;demo.c:543: int ff = 0;
   0442 FD 21r70s8F         679 	ld	iy,#_ff
   0446 FD 36 00 00         680 	ld	0 (iy),#0x00
   044A FD 21r70s8F         681 	ld	iy,#_ff
   044E FD 36 01 00         682 	ld	1 (iy),#0x00
                            683 ;demo.c:544: int twinited = 0;
   0452 FD 21r72s8F         684 	ld	iy,#_twinited
   0456 FD 36 00 00         685 	ld	0 (iy),#0x00
   045A FD 21r72s8F         686 	ld	iy,#_twinited
   045E FD 36 01 00         687 	ld	1 (iy),#0x00
                            688 ;demo.c:594: int bulbflipper = 1;
   0462 FD 21r74s8F         689 	ld	iy,#_bulbflipper
   0466 FD 36 00 01         690 	ld	0 (iy),#0x01
   046A FD 21r74s8F         691 	ld	iy,#_bulbflipper
   046E FD 36 01 00         692 	ld	1 (iy),#0x00
                            693 ;demo.c:596: int ff1,ff2 = 0;
   0472 FD 21r78s8F         694 	ld	iy,#_ff2
   0476 FD 36 00 00         695 	ld	0 (iy),#0x00
   047A FD 21r78s8F         696 	ld	iy,#_ff2
   047E FD 36 01 00         697 	ld	1 (iy),#0x00
                            698 ;demo.c:597: int ender = 212;
   0482 FD 21r7As8F         699 	ld	iy,#_ender
   0486 FD 36 00 D4         700 	ld	0 (iy),#0xD4
   048A FD 21r7As8F         701 	ld	iy,#_ender
   048E FD 36 01 00         702 	ld	1 (iy),#0x00
                            703 ;demo.c:598: int enderdir = -1;
   0492 FD 21r7Cs8F         704 	ld	iy,#_enderdir
   0496 FD 36 00 FF         705 	ld	0 (iy),#0xFF
   049A FD 21r7Cs8F         706 	ld	iy,#_enderdir
   049E FD 36 01 FF         707 	ld	1 (iy),#0xFF
                            708 ;demo.c:653: static int xo = 0;
   04A2 FD 21r7Es8F         709 	ld	iy,#_xo
   04A6 FD 36 00 00         710 	ld	0 (iy),#0x00
   04AA FD 21r7Es8F         711 	ld	iy,#_xo
   04AE FD 36 01 00         712 	ld	1 (iy),#0x00
                            713 ;demo.c:654: static int yo = 0;
   04B2 FD 21r80s8F         714 	ld	iy,#_yo
   04B6 FD 36 00 00         715 	ld	0 (iy),#0x00
   04BA FD 21r80s8F         716 	ld	iy,#_yo
   04BE FD 36 01 00         717 	ld	1 (iy),#0x00
                            718 ;demo.c:655: static int po = 0;
   04C2 FD 21r82s8F         719 	ld	iy,#_po
   04C6 FD 36 00 00         720 	ld	0 (iy),#0x00
   04CA FD 21r82s8F         721 	ld	iy,#_po
   04CE FD 36 01 00         722 	ld	1 (iy),#0x00
                            723 ;demo.c:656: static int fffaaa = 0;
   04D2 FD 21r84s8F         724 	ld	iy,#_fffaaa
   04D6 FD 36 00 00         725 	ld	0 (iy),#0x00
   04DA FD 21r84s8F         726 	ld	iy,#_fffaaa
   04DE FD 36 01 00         727 	ld	1 (iy),#0x00
                            728 ;demo.c:658: int anim_init = 0;
   04E2 FD 21r86s8F         729 	ld	iy,#_anim_init
   04E6 FD 36 00 00         730 	ld	0 (iy),#0x00
   04EA FD 21r86s8F         731 	ld	iy,#_anim_init
   04EE FD 36 01 00         732 	ld	1 (iy),#0x00
                            733 ;demo.c:712: uint8_t boxes_init = 0;
   04F2 FD 21r88s8F         734 	ld	iy,#_boxes_init
   04F6 FD 36 00 00         735 	ld	0 (iy),#0x00
                            736 ;demo.c:713: int buffer = 1;
   04FA FD 21r89s8F         737 	ld	iy,#_buffer
   04FE FD 36 00 01         738 	ld	0 (iy),#0x01
   0502 FD 21r89s8F         739 	ld	iy,#_buffer
   0506 FD 36 01 00         740 	ld	1 (iy),#0x00
                            741 ;demo.c:714: int dbly = 0;
   050A FD 21r8Bs8F         742 	ld	iy,#_dbly
   050E FD 36 00 00         743 	ld	0 (iy),#0x00
   0512 FD 21r8Bs8F         744 	ld	iy,#_dbly
   0516 FD 36 01 00         745 	ld	1 (iy),#0x00
                            746 ;demo.c:715: int prevx = -1;
   051A FD 21r8Ds8F         747 	ld	iy,#_prevx
   051E FD 36 00 FF         748 	ld	0 (iy),#0xFF
   0522 FD 21r8Ds8F         749 	ld	iy,#_prevx
   0526 FD 36 01 FF         750 	ld	1 (iy),#0xFF
                            751 ;demo.c:740: int bx = 256-42;
   052A FD 21r95s8F         752 	ld	iy,#_bx
   052E FD 36 00 D6         753 	ld	0 (iy),#0xD6
   0532 FD 21r95s8F         754 	ld	iy,#_bx
   0536 FD 36 01 00         755 	ld	1 (iy),#0x00
                            756 ;demo.c:741: int by = 84;
   053A FD 21r97s8F         757 	ld	iy,#_by
   053E FD 36 00 54         758 	ld	0 (iy),#0x54
   0542 FD 21r97s8F         759 	ld	iy,#_by
   0546 FD 36 01 00         760 	ld	1 (iy),#0x00
                            761 ;demo.c:742: int bt = 0;
   054A FD 21r99s8F         762 	ld	iy,#_bt
   054E FD 36 00 00         763 	ld	0 (iy),#0x00
   0552 FD 21r99s8F         764 	ld	iy,#_bt
   0556 FD 36 01 00         765 	ld	1 (iy),#0x00
                            766 ;demo.c:743: int bxx = 0;
   055A FD 21r9Bs8F         767 	ld	iy,#_bxx
   055E FD 36 00 00         768 	ld	0 (iy),#0x00
   0562 FD 21r9Bs8F         769 	ld	iy,#_bxx
   0566 FD 36 01 00         770 	ld	1 (iy),#0x00
                            771 ;demo.c:744: int byy = 0;
   056A FD 21r9Ds8F         772 	ld	iy,#_byy
   056E FD 36 00 00         773 	ld	0 (iy),#0x00
   0572 FD 21r9Ds8F         774 	ld	iy,#_byy
   0576 FD 36 01 00         775 	ld	1 (iy),#0x00
                            776 ;demo.c:745: int bo = 0;
   057A FD 21r9Fs8F         777 	ld	iy,#_bo
   057E FD 36 00 00         778 	ld	0 (iy),#0x00
   0582 FD 21r9Fs8F         779 	ld	iy,#_bo
   0586 FD 36 01 00         780 	ld	1 (iy),#0x00
                            781 ;demo.c:747: int bonc = 0;
   058A FD 21rA1s8F         782 	ld	iy,#_bonc
   058E FD 36 00 00         783 	ld	0 (iy),#0x00
   0592 FD 21rA1s8F         784 	ld	iy,#_bonc
   0596 FD 36 01 00         785 	ld	1 (iy),#0x00
                            786 ;demo.c:748: int pbx = 0;
   059A FD 21rA3s8F         787 	ld	iy,#_pbx
   059E FD 36 00 00         788 	ld	0 (iy),#0x00
   05A2 FD 21rA3s8F         789 	ld	iy,#_pbx
   05A6 FD 36 01 00         790 	ld	1 (iy),#0x00
                            791 ;demo.c:749: int pbt = 0;
   05AA FD 21rA5s8F         792 	ld	iy,#_pbt
   05AE FD 36 00 00         793 	ld	0 (iy),#0x00
   05B2 FD 21rA5s8F         794 	ld	iy,#_pbt
   05B6 FD 36 01 00         795 	ld	1 (iy),#0x00
                            796 ;demo.c:851: uint8_t tri_inited = 0;
   05BA FD 21rA7s8F         797 	ld	iy,#_tri_inited
   05BE FD 36 00 00         798 	ld	0 (iy),#0x00
                            799 ;demo.c:879: char tripal[9] = {
   05C2 21rA8s8F            800 	ld	hl,#_tripal
   05C5 CDr00s00            801 	call	__initrleblock
   05C8 09                  802 	.db	9
   05C9 02 02 01 01 02 03   803 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   05D1 02                  804 	.db	0x02
   05D2 00                  805 	.db	0
                            806 ;demo.c:885: uint8_t tripaltick = 0;
   05D3 FD 21rB1s8F         807 	ld	iy,#_tripaltick
   05D7 FD 36 00 00         808 	ld	0 (iy),#0x00
                            809 ;demo.c:887: int triframes = 0;
   05DB FD 21rB2s8F         810 	ld	iy,#_triframes
   05DF FD 36 00 00         811 	ld	0 (iy),#0x00
   05E3 FD 21rB2s8F         812 	ld	iy,#_triframes
   05E7 FD 36 01 00         813 	ld	1 (iy),#0x00
                            814 ;--------------------------------------------------------
                            815 ; Home
                            816 ;--------------------------------------------------------
                            817 	.area _HOME
                            818 	.area _HOME
                            819 ;--------------------------------------------------------
                            820 ; code
                            821 ;--------------------------------------------------------
                            822 	.area _CODE
                            823 ;demo.c:133: int isNthBitSet (unsigned char c, int n) {
                            824 ;	---------------------------------
                            825 ; Function isNthBitSet
                            826 ; ---------------------------------
   0000                     827 _isNthBitSet_start::
   0000                     828 _isNthBitSet:
   0000 DD E5               829 	push	ix
   0002 DD 21 00 00         830 	ld	ix,#0
   0006 DD 39               831 	add	ix,sp
                            832 ;demo.c:135: return ((c & mask[n]) != 0);
   0008 3Er33               833 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            834 	add	a,5 (ix)
   000D 4F                  835 	ld	c,a
   000E 3Es8F               836 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            837 	adc	a,6 (ix)
   0013 47                  838 	ld	b,a
   0014 0A                  839 	ld	a,(bc)
   0015 DD A6 04            840 	and	a,4 (ix)
   0018 20 04               841 	jr	NZ,00103$
   001A 3E 01               842 	ld	a,#0x01
   001C 18 01               843 	jr	00104$
   001E                     844 00103$:
   001E AF                  845 	xor	a,a
   001F                     846 00104$:
   001F B7                  847 	or	a,a
   0020 D6 01               848 	sub	a,#0x01
   0022 3E 00               849 	ld	a,#0x00
   0024 17                  850 	rla
   0025 4F                  851 	ld	c,a
   0026 69                  852 	ld	l,c
   0027 26 00               853 	ld	h,#0x00
   0029 DD E1               854 	pop	ix
   002B C9                  855 	ret
   002C                     856 _isNthBitSet_end::
   002C                     857 _sintabx:
   002C 78 00               858 	.dw #0x0078
   002E 7A 00               859 	.dw #0x007A
   0030 7D 00               860 	.dw #0x007D
   0032 80 00               861 	.dw #0x0080
   0034 83 00               862 	.dw #0x0083
   0036 86 00               863 	.dw #0x0086
   0038 89 00               864 	.dw #0x0089
   003A 8C 00               865 	.dw #0x008C
   003C 8F 00               866 	.dw #0x008F
   003E 92 00               867 	.dw #0x0092
   0040 95 00               868 	.dw #0x0095
   0042 98 00               869 	.dw #0x0098
   0044 9A 00               870 	.dw #0x009A
   0046 9D 00               871 	.dw #0x009D
   0048 A0 00               872 	.dw #0x00A0
   004A A3 00               873 	.dw #0x00A3
   004C A5 00               874 	.dw #0x00A5
   004E A8 00               875 	.dw #0x00A8
   0050 AB 00               876 	.dw #0x00AB
   0052 AD 00               877 	.dw #0x00AD
   0054 B0 00               878 	.dw #0x00B0
   0056 B3 00               879 	.dw #0x00B3
   0058 B5 00               880 	.dw #0x00B5
   005A B8 00               881 	.dw #0x00B8
   005C BA 00               882 	.dw #0x00BA
   005E BD 00               883 	.dw #0x00BD
   0060 BF 00               884 	.dw #0x00BF
   0062 C1 00               885 	.dw #0x00C1
   0064 C4 00               886 	.dw #0x00C4
   0066 C6 00               887 	.dw #0x00C6
   0068 C8 00               888 	.dw #0x00C8
   006A CA 00               889 	.dw #0x00CA
   006C CC 00               890 	.dw #0x00CC
   006E CE 00               891 	.dw #0x00CE
   0070 D0 00               892 	.dw #0x00D0
   0072 D2 00               893 	.dw #0x00D2
   0074 D4 00               894 	.dw #0x00D4
   0076 D6 00               895 	.dw #0x00D6
   0078 D8 00               896 	.dw #0x00D8
   007A DA 00               897 	.dw #0x00DA
   007C DB 00               898 	.dw #0x00DB
   007E DD 00               899 	.dw #0x00DD
   0080 DE 00               900 	.dw #0x00DE
   0082 E0 00               901 	.dw #0x00E0
   0084 E1 00               902 	.dw #0x00E1
   0086 E3 00               903 	.dw #0x00E3
   0088 E4 00               904 	.dw #0x00E4
   008A E5 00               905 	.dw #0x00E5
   008C E6 00               906 	.dw #0x00E6
   008E E7 00               907 	.dw #0x00E7
   0090 E8 00               908 	.dw #0x00E8
   0092 E9 00               909 	.dw #0x00E9
   0094 EA 00               910 	.dw #0x00EA
   0096 EB 00               911 	.dw #0x00EB
   0098 EC 00               912 	.dw #0x00EC
   009A ED 00               913 	.dw #0x00ED
   009C ED 00               914 	.dw #0x00ED
   009E EE 00               915 	.dw #0x00EE
   00A0 EE 00               916 	.dw #0x00EE
   00A2 EF 00               917 	.dw #0x00EF
   00A4 EF 00               918 	.dw #0x00EF
   00A6 EF 00               919 	.dw #0x00EF
   00A8 EF 00               920 	.dw #0x00EF
   00AA EF 00               921 	.dw #0x00EF
   00AC F0 00               922 	.dw #0x00F0
   00AE EF 00               923 	.dw #0x00EF
   00B0 EF 00               924 	.dw #0x00EF
   00B2 EF 00               925 	.dw #0x00EF
   00B4 EF 00               926 	.dw #0x00EF
   00B6 EF 00               927 	.dw #0x00EF
   00B8 EE 00               928 	.dw #0x00EE
   00BA EE 00               929 	.dw #0x00EE
   00BC ED 00               930 	.dw #0x00ED
   00BE ED 00               931 	.dw #0x00ED
   00C0 EC 00               932 	.dw #0x00EC
   00C2 EB 00               933 	.dw #0x00EB
   00C4 EA 00               934 	.dw #0x00EA
   00C6 E9 00               935 	.dw #0x00E9
   00C8 E8 00               936 	.dw #0x00E8
   00CA E7 00               937 	.dw #0x00E7
   00CC E6 00               938 	.dw #0x00E6
   00CE E5 00               939 	.dw #0x00E5
   00D0 E4 00               940 	.dw #0x00E4
   00D2 E3 00               941 	.dw #0x00E3
   00D4 E1 00               942 	.dw #0x00E1
   00D6 E0 00               943 	.dw #0x00E0
   00D8 DE 00               944 	.dw #0x00DE
   00DA DD 00               945 	.dw #0x00DD
   00DC DB 00               946 	.dw #0x00DB
   00DE DA 00               947 	.dw #0x00DA
   00E0 D8 00               948 	.dw #0x00D8
   00E2 D6 00               949 	.dw #0x00D6
   00E4 D4 00               950 	.dw #0x00D4
   00E6 D2 00               951 	.dw #0x00D2
   00E8 D0 00               952 	.dw #0x00D0
   00EA CE 00               953 	.dw #0x00CE
   00EC CC 00               954 	.dw #0x00CC
   00EE CA 00               955 	.dw #0x00CA
   00F0 C8 00               956 	.dw #0x00C8
   00F2 C6 00               957 	.dw #0x00C6
   00F4 C4 00               958 	.dw #0x00C4
   00F6 C1 00               959 	.dw #0x00C1
   00F8 BF 00               960 	.dw #0x00BF
   00FA BD 00               961 	.dw #0x00BD
   00FC BA 00               962 	.dw #0x00BA
   00FE B8 00               963 	.dw #0x00B8
   0100 B5 00               964 	.dw #0x00B5
   0102 B3 00               965 	.dw #0x00B3
   0104 B0 00               966 	.dw #0x00B0
   0106 AD 00               967 	.dw #0x00AD
   0108 AB 00               968 	.dw #0x00AB
   010A A8 00               969 	.dw #0x00A8
   010C A5 00               970 	.dw #0x00A5
   010E A3 00               971 	.dw #0x00A3
   0110 A0 00               972 	.dw #0x00A0
   0112 9D 00               973 	.dw #0x009D
   0114 9A 00               974 	.dw #0x009A
   0116 98 00               975 	.dw #0x0098
   0118 95 00               976 	.dw #0x0095
   011A 92 00               977 	.dw #0x0092
   011C 8F 00               978 	.dw #0x008F
   011E 8C 00               979 	.dw #0x008C
   0120 89 00               980 	.dw #0x0089
   0122 86 00               981 	.dw #0x0086
   0124 83 00               982 	.dw #0x0083
   0126 80 00               983 	.dw #0x0080
   0128 7D 00               984 	.dw #0x007D
   012A 7A 00               985 	.dw #0x007A
   012C 78 00               986 	.dw #0x0078
   012E 75 00               987 	.dw #0x0075
   0130 72 00               988 	.dw #0x0072
   0132 6F 00               989 	.dw #0x006F
   0134 6C 00               990 	.dw #0x006C
   0136 69 00               991 	.dw #0x0069
   0138 66 00               992 	.dw #0x0066
   013A 63 00               993 	.dw #0x0063
   013C 60 00               994 	.dw #0x0060
   013E 5D 00               995 	.dw #0x005D
   0140 5A 00               996 	.dw #0x005A
   0142 57 00               997 	.dw #0x0057
   0144 55 00               998 	.dw #0x0055
   0146 52 00               999 	.dw #0x0052
   0148 4F 00              1000 	.dw #0x004F
   014A 4C 00              1001 	.dw #0x004C
   014C 4A 00              1002 	.dw #0x004A
   014E 47 00              1003 	.dw #0x0047
   0150 44 00              1004 	.dw #0x0044
   0152 42 00              1005 	.dw #0x0042
   0154 3F 00              1006 	.dw #0x003F
   0156 3C 00              1007 	.dw #0x003C
   0158 3A 00              1008 	.dw #0x003A
   015A 37 00              1009 	.dw #0x0037
   015C 35 00              1010 	.dw #0x0035
   015E 32 00              1011 	.dw #0x0032
   0160 30 00              1012 	.dw #0x0030
   0162 2E 00              1013 	.dw #0x002E
   0164 2B 00              1014 	.dw #0x002B
   0166 29 00              1015 	.dw #0x0029
   0168 27 00              1016 	.dw #0x0027
   016A 25 00              1017 	.dw #0x0025
   016C 23 00              1018 	.dw #0x0023
   016E 21 00              1019 	.dw #0x0021
   0170 1F 00              1020 	.dw #0x001F
   0172 1D 00              1021 	.dw #0x001D
   0174 1B 00              1022 	.dw #0x001B
   0176 19 00              1023 	.dw #0x0019
   0178 17 00              1024 	.dw #0x0017
   017A 15 00              1025 	.dw #0x0015
   017C 14 00              1026 	.dw #0x0014
   017E 12 00              1027 	.dw #0x0012
   0180 11 00              1028 	.dw #0x0011
   0182 0F 00              1029 	.dw #0x000F
   0184 0E 00              1030 	.dw #0x000E
   0186 0C 00              1031 	.dw #0x000C
   0188 0B 00              1032 	.dw #0x000B
   018A 0A 00              1033 	.dw #0x000A
   018C 09 00              1034 	.dw #0x0009
   018E 08 00              1035 	.dw #0x0008
   0190 07 00              1036 	.dw #0x0007
   0192 06 00              1037 	.dw #0x0006
   0194 05 00              1038 	.dw #0x0005
   0196 04 00              1039 	.dw #0x0004
   0198 03 00              1040 	.dw #0x0003
   019A 02 00              1041 	.dw #0x0002
   019C 02 00              1042 	.dw #0x0002
   019E 01 00              1043 	.dw #0x0001
   01A0 01 00              1044 	.dw #0x0001
   01A2 00 00              1045 	.dw #0x0000
   01A4 00 00              1046 	.dw #0x0000
   01A6 00 00              1047 	.dw #0x0000
   01A8 00 00              1048 	.dw #0x0000
   01AA 00 00              1049 	.dw #0x0000
   01AC 00 00              1050 	.dw #0x0000
   01AE 00 00              1051 	.dw #0x0000
   01B0 00 00              1052 	.dw #0x0000
   01B2 00 00              1053 	.dw #0x0000
   01B4 00 00              1054 	.dw #0x0000
   01B6 00 00              1055 	.dw #0x0000
   01B8 01 00              1056 	.dw #0x0001
   01BA 01 00              1057 	.dw #0x0001
   01BC 02 00              1058 	.dw #0x0002
   01BE 02 00              1059 	.dw #0x0002
   01C0 03 00              1060 	.dw #0x0003
   01C2 04 00              1061 	.dw #0x0004
   01C4 05 00              1062 	.dw #0x0005
   01C6 06 00              1063 	.dw #0x0006
   01C8 07 00              1064 	.dw #0x0007
   01CA 08 00              1065 	.dw #0x0008
   01CC 09 00              1066 	.dw #0x0009
   01CE 0A 00              1067 	.dw #0x000A
   01D0 0B 00              1068 	.dw #0x000B
   01D2 0C 00              1069 	.dw #0x000C
   01D4 0E 00              1070 	.dw #0x000E
   01D6 0F 00              1071 	.dw #0x000F
   01D8 11 00              1072 	.dw #0x0011
   01DA 12 00              1073 	.dw #0x0012
   01DC 14 00              1074 	.dw #0x0014
   01DE 15 00              1075 	.dw #0x0015
   01E0 17 00              1076 	.dw #0x0017
   01E2 19 00              1077 	.dw #0x0019
   01E4 1B 00              1078 	.dw #0x001B
   01E6 1D 00              1079 	.dw #0x001D
   01E8 1F 00              1080 	.dw #0x001F
   01EA 21 00              1081 	.dw #0x0021
   01EC 23 00              1082 	.dw #0x0023
   01EE 25 00              1083 	.dw #0x0025
   01F0 27 00              1084 	.dw #0x0027
   01F2 29 00              1085 	.dw #0x0029
   01F4 2B 00              1086 	.dw #0x002B
   01F6 2E 00              1087 	.dw #0x002E
   01F8 30 00              1088 	.dw #0x0030
   01FA 32 00              1089 	.dw #0x0032
   01FC 35 00              1090 	.dw #0x0035
   01FE 37 00              1091 	.dw #0x0037
   0200 3A 00              1092 	.dw #0x003A
   0202 3C 00              1093 	.dw #0x003C
   0204 3F 00              1094 	.dw #0x003F
   0206 42 00              1095 	.dw #0x0042
   0208 44 00              1096 	.dw #0x0044
   020A 47 00              1097 	.dw #0x0047
   020C 4A 00              1098 	.dw #0x004A
   020E 4C 00              1099 	.dw #0x004C
   0210 4F 00              1100 	.dw #0x004F
   0212 52 00              1101 	.dw #0x0052
   0214 55 00              1102 	.dw #0x0055
   0216 57 00              1103 	.dw #0x0057
   0218 5A 00              1104 	.dw #0x005A
   021A 5D 00              1105 	.dw #0x005D
   021C 60 00              1106 	.dw #0x0060
   021E 63 00              1107 	.dw #0x0063
   0220 66 00              1108 	.dw #0x0066
   0222 69 00              1109 	.dw #0x0069
   0224 6C 00              1110 	.dw #0x006C
   0226 6F 00              1111 	.dw #0x006F
   0228 72 00              1112 	.dw #0x0072
   022A 75 00              1113 	.dw #0x0075
   022C                    1114 _tri_center:
   022C 08                 1115 	.db #0x08
   022D 0A                 1116 	.db #0x0A
   022E 12                 1117 	.db #0x12
   022F 10                 1118 	.db #0x10
   0230 00                 1119 	.db #0x00
   0231 02                 1120 	.db #0x02
   0232 08                 1121 	.db #0x08
   0233 0A                 1122 	.db #0x0A
   0234 0B                 1123 	.db #0x0B
   0235 09                 1124 	.db #0x09
   0236 03                 1125 	.db #0x03
   0237 01                 1126 	.db #0x01
   0238 11                 1127 	.db #0x11
   0239 13                 1128 	.db #0x13
   023A 0B                 1129 	.db #0x0B
   023B 09                 1130 	.db #0x09
   023C 0A                 1131 	.db #0x0A
   023D 12                 1132 	.db #0x12
   023E 10                 1133 	.db #0x10
   023F 00                 1134 	.db #0x00
   0240 02                 1135 	.db #0x02
   0241 08                 1136 	.db #0x08
   0242 0A                 1137 	.db #0x0A
   0243 12                 1138 	.db #0x12
   0244 13                 1139 	.db #0x13
   0245 0B                 1140 	.db #0x0B
   0246 09                 1141 	.db #0x09
   0247 03                 1142 	.db #0x03
   0248 01                 1143 	.db #0x01
   0249 11                 1144 	.db #0x11
   024A 13                 1145 	.db #0x13
   024B 0B                 1146 	.db #0x0B
   024C 12                 1147 	.db #0x12
   024D 10                 1148 	.db #0x10
   024E 00                 1149 	.db #0x00
   024F 02                 1150 	.db #0x02
   0250 08                 1151 	.db #0x08
   0251 0A                 1152 	.db #0x0A
   0252 12                 1153 	.db #0x12
   0253 10                 1154 	.db #0x10
   0254 11                 1155 	.db #0x11
   0255 13                 1156 	.db #0x13
   0256 0B                 1157 	.db #0x0B
   0257 09                 1158 	.db #0x09
   0258 03                 1159 	.db #0x03
   0259 01                 1160 	.db #0x01
   025A 11                 1161 	.db #0x11
   025B 13                 1162 	.db #0x13
   025C 10                 1163 	.db #0x10
   025D 00                 1164 	.db #0x00
   025E 02                 1165 	.db #0x02
   025F 08                 1166 	.db #0x08
   0260 0A                 1167 	.db #0x0A
   0261 12                 1168 	.db #0x12
   0262 10                 1169 	.db #0x10
   0263 00                 1170 	.db #0x00
   0264 01                 1171 	.db #0x01
   0265 11                 1172 	.db #0x11
   0266 13                 1173 	.db #0x13
   0267 0B                 1174 	.db #0x0B
   0268 09                 1175 	.db #0x09
   0269 03                 1176 	.db #0x03
   026A 01                 1177 	.db #0x01
   026B 11                 1178 	.db #0x11
   026C 00                 1179 	.db #0x00
   026D 02                 1180 	.db #0x02
   026E 08                 1181 	.db #0x08
   026F 0A                 1182 	.db #0x0A
   0270 12                 1183 	.db #0x12
   0271 10                 1184 	.db #0x10
   0272 00                 1185 	.db #0x00
   0273 02                 1186 	.db #0x02
   0274 03                 1187 	.db #0x03
   0275 01                 1188 	.db #0x01
   0276 11                 1189 	.db #0x11
   0277 13                 1190 	.db #0x13
   0278 0B                 1191 	.db #0x0B
   0279 09                 1192 	.db #0x09
   027A 03                 1193 	.db #0x03
   027B 01                 1194 	.db #0x01
   027C 02                 1195 	.db #0x02
   027D 08                 1196 	.db #0x08
   027E 0A                 1197 	.db #0x0A
   027F 12                 1198 	.db #0x12
   0280 10                 1199 	.db #0x10
   0281 00                 1200 	.db #0x00
   0282 02                 1201 	.db #0x02
   0283 08                 1202 	.db #0x08
   0284 09                 1203 	.db #0x09
   0285 03                 1204 	.db #0x03
   0286 01                 1205 	.db #0x01
   0287 11                 1206 	.db #0x11
   0288 13                 1207 	.db #0x13
   0289 0B                 1208 	.db #0x0B
   028A 09                 1209 	.db #0x09
   028B 03                 1210 	.db #0x03
   028C 01                 1211 	.db #0x01
   028D 0B                 1212 	.db #0x0B
   028E 09                 1213 	.db #0x09
   028F 11                 1214 	.db #0x11
   0290 13                 1215 	.db #0x13
   0291 03                 1216 	.db #0x03
   0292 01                 1217 	.db #0x01
   0293 0B                 1218 	.db #0x0B
   0294 0A                 1219 	.db #0x0A
   0295 00                 1220 	.db #0x00
   0296 02                 1221 	.db #0x02
   0297 12                 1222 	.db #0x12
   0298 10                 1223 	.db #0x10
   0299 08                 1224 	.db #0x08
   029A 0A                 1225 	.db #0x0A
   029B 00                 1226 	.db #0x00
   029C 03                 1227 	.db #0x03
   029D 01                 1228 	.db #0x01
   029E 0B                 1229 	.db #0x0B
   029F 09                 1230 	.db #0x09
   02A0 11                 1231 	.db #0x11
   02A1 13                 1232 	.db #0x13
   02A2 03                 1233 	.db #0x03
   02A3 01                 1234 	.db #0x01
   02A4 00                 1235 	.db #0x00
   02A5 02                 1236 	.db #0x02
   02A6 12                 1237 	.db #0x12
   02A7 10                 1238 	.db #0x10
   02A8 08                 1239 	.db #0x08
   02A9 0A                 1240 	.db #0x0A
   02AA 00                 1241 	.db #0x00
   02AB 02                 1242 	.db #0x02
   02AC 13                 1243 	.db #0x13
   02AD 03                 1244 	.db #0x03
   02AE 01                 1245 	.db #0x01
   02AF 0B                 1246 	.db #0x0B
   02B0 09                 1247 	.db #0x09
   02B1 11                 1248 	.db #0x11
   02B2 13                 1249 	.db #0x13
   02B3 03                 1250 	.db #0x03
   02B4 02                 1251 	.db #0x02
   02B5 12                 1252 	.db #0x12
   02B6 10                 1253 	.db #0x10
   02B7 08                 1254 	.db #0x08
   02B8 0A                 1255 	.db #0x0A
   02B9 00                 1256 	.db #0x00
   02BA 02                 1257 	.db #0x02
   02BB 12                 1258 	.db #0x12
   02BC 11                 1259 	.db #0x11
   02BD 13                 1260 	.db #0x13
   02BE 03                 1261 	.db #0x03
   02BF 01                 1262 	.db #0x01
   02C0 0B                 1263 	.db #0x0B
   02C1 09                 1264 	.db #0x09
   02C2 11                 1265 	.db #0x11
   02C3 13                 1266 	.db #0x13
   02C4 12                 1267 	.db #0x12
   02C5 10                 1268 	.db #0x10
   02C6 08                 1269 	.db #0x08
   02C7 0A                 1270 	.db #0x0A
   02C8 00                 1271 	.db #0x00
   02C9 02                 1272 	.db #0x02
   02CA 12                 1273 	.db #0x12
   02CB 10                 1274 	.db #0x10
   02CC 09                 1275 	.db #0x09
   02CD 11                 1276 	.db #0x11
   02CE 13                 1277 	.db #0x13
   02CF 03                 1278 	.db #0x03
   02D0 01                 1279 	.db #0x01
   02D1 0B                 1280 	.db #0x0B
   02D2 09                 1281 	.db #0x09
   02D3 11                 1282 	.db #0x11
   02D4 10                 1283 	.db #0x10
   02D5 08                 1284 	.db #0x08
   02D6 0A                 1285 	.db #0x0A
   02D7 00                 1286 	.db #0x00
   02D8 02                 1287 	.db #0x02
   02D9 12                 1288 	.db #0x12
   02DA 10                 1289 	.db #0x10
   02DB 08                 1290 	.db #0x08
   02DC 0B                 1291 	.db #0x0B
   02DD 09                 1292 	.db #0x09
   02DE 11                 1293 	.db #0x11
   02DF 13                 1294 	.db #0x13
   02E0 03                 1295 	.db #0x03
   02E1 01                 1296 	.db #0x01
   02E2 0B                 1297 	.db #0x0B
   02E3 09                 1298 	.db #0x09
   02E4 08                 1299 	.db #0x08
   02E5 0A                 1300 	.db #0x0A
   02E6 00                 1301 	.db #0x00
   02E7 02                 1302 	.db #0x02
   02E8 12                 1303 	.db #0x12
   02E9 10                 1304 	.db #0x10
   02EA 08                 1305 	.db #0x08
   02EB 0A                 1306 	.db #0x0A
   02EC                    1307 _tri_up:
   02EC 0A                 1308 	.db #0x0A
   02ED 12                 1309 	.db #0x12
   02EE 10                 1310 	.db #0x10
   02EF 00                 1311 	.db #0x00
   02F0 02                 1312 	.db #0x02
   02F1 08                 1313 	.db #0x08
   02F2 0A                 1314 	.db #0x0A
   02F3 12                 1315 	.db #0x12
   02F4 13                 1316 	.db #0x13
   02F5 0B                 1317 	.db #0x0B
   02F6 09                 1318 	.db #0x09
   02F7 03                 1319 	.db #0x03
   02F8 01                 1320 	.db #0x01
   02F9 11                 1321 	.db #0x11
   02FA 13                 1322 	.db #0x13
   02FB 0B                 1323 	.db #0x0B
   02FC 12                 1324 	.db #0x12
   02FD 10                 1325 	.db #0x10
   02FE 00                 1326 	.db #0x00
   02FF 02                 1327 	.db #0x02
   0300 08                 1328 	.db #0x08
   0301 0A                 1329 	.db #0x0A
   0302 12                 1330 	.db #0x12
   0303 10                 1331 	.db #0x10
   0304 11                 1332 	.db #0x11
   0305 13                 1333 	.db #0x13
   0306 0B                 1334 	.db #0x0B
   0307 09                 1335 	.db #0x09
   0308 03                 1336 	.db #0x03
   0309 01                 1337 	.db #0x01
   030A 11                 1338 	.db #0x11
   030B 13                 1339 	.db #0x13
   030C 10                 1340 	.db #0x10
   030D 00                 1341 	.db #0x00
   030E 02                 1342 	.db #0x02
   030F 08                 1343 	.db #0x08
   0310 0A                 1344 	.db #0x0A
   0311 12                 1345 	.db #0x12
   0312 10                 1346 	.db #0x10
   0313 00                 1347 	.db #0x00
   0314 01                 1348 	.db #0x01
   0315 11                 1349 	.db #0x11
   0316 13                 1350 	.db #0x13
   0317 0B                 1351 	.db #0x0B
   0318 09                 1352 	.db #0x09
   0319 03                 1353 	.db #0x03
   031A 01                 1354 	.db #0x01
   031B 11                 1355 	.db #0x11
   031C 00                 1356 	.db #0x00
   031D 02                 1357 	.db #0x02
   031E 08                 1358 	.db #0x08
   031F 0A                 1359 	.db #0x0A
   0320 12                 1360 	.db #0x12
   0321 10                 1361 	.db #0x10
   0322 00                 1362 	.db #0x00
   0323 02                 1363 	.db #0x02
   0324 03                 1364 	.db #0x03
   0325 01                 1365 	.db #0x01
   0326 11                 1366 	.db #0x11
   0327 13                 1367 	.db #0x13
   0328 0B                 1368 	.db #0x0B
   0329 09                 1369 	.db #0x09
   032A 03                 1370 	.db #0x03
   032B 01                 1371 	.db #0x01
   032C 02                 1372 	.db #0x02
   032D 08                 1373 	.db #0x08
   032E 0A                 1374 	.db #0x0A
   032F 12                 1375 	.db #0x12
   0330 10                 1376 	.db #0x10
   0331 00                 1377 	.db #0x00
   0332 02                 1378 	.db #0x02
   0333 08                 1379 	.db #0x08
   0334 09                 1380 	.db #0x09
   0335 03                 1381 	.db #0x03
   0336 01                 1382 	.db #0x01
   0337 11                 1383 	.db #0x11
   0338 13                 1384 	.db #0x13
   0339 0B                 1385 	.db #0x0B
   033A 09                 1386 	.db #0x09
   033B 03                 1387 	.db #0x03
   033C 08                 1388 	.db #0x08
   033D 0A                 1389 	.db #0x0A
   033E 12                 1390 	.db #0x12
   033F 10                 1391 	.db #0x10
   0340 00                 1392 	.db #0x00
   0341 02                 1393 	.db #0x02
   0342 08                 1394 	.db #0x08
   0343 0A                 1395 	.db #0x0A
   0344 0B                 1396 	.db #0x0B
   0345 09                 1397 	.db #0x09
   0346 03                 1398 	.db #0x03
   0347 01                 1399 	.db #0x01
   0348 11                 1400 	.db #0x11
   0349 13                 1401 	.db #0x13
   034A 0B                 1402 	.db #0x0B
   034B 09                 1403 	.db #0x09
   034C 0A                 1404 	.db #0x0A
   034D 12                 1405 	.db #0x12
   034E 10                 1406 	.db #0x10
   034F 00                 1407 	.db #0x00
   0350 02                 1408 	.db #0x02
   0351 08                 1409 	.db #0x08
   0352 0A                 1410 	.db #0x0A
   0353 12                 1411 	.db #0x12
   0354 13                 1412 	.db #0x13
   0355 0B                 1413 	.db #0x0B
   0356 09                 1414 	.db #0x09
   0357 03                 1415 	.db #0x03
   0358 01                 1416 	.db #0x01
   0359 11                 1417 	.db #0x11
   035A 13                 1418 	.db #0x13
   035B 0B                 1419 	.db #0x0B
   035C 12                 1420 	.db #0x12
   035D 10                 1421 	.db #0x10
   035E 00                 1422 	.db #0x00
   035F 02                 1423 	.db #0x02
   0360 08                 1424 	.db #0x08
   0361 0A                 1425 	.db #0x0A
   0362 12                 1426 	.db #0x12
   0363 10                 1427 	.db #0x10
   0364 11                 1428 	.db #0x11
   0365 13                 1429 	.db #0x13
   0366 0B                 1430 	.db #0x0B
   0367 09                 1431 	.db #0x09
   0368 03                 1432 	.db #0x03
   0369 01                 1433 	.db #0x01
   036A 11                 1434 	.db #0x11
   036B 13                 1435 	.db #0x13
   036C 10                 1436 	.db #0x10
   036D 00                 1437 	.db #0x00
   036E 02                 1438 	.db #0x02
   036F 08                 1439 	.db #0x08
   0370 0A                 1440 	.db #0x0A
   0371 12                 1441 	.db #0x12
   0372 10                 1442 	.db #0x10
   0373 00                 1443 	.db #0x00
   0374 01                 1444 	.db #0x01
   0375 11                 1445 	.db #0x11
   0376 13                 1446 	.db #0x13
   0377 0B                 1447 	.db #0x0B
   0378 09                 1448 	.db #0x09
   0379 03                 1449 	.db #0x03
   037A 01                 1450 	.db #0x01
   037B 11                 1451 	.db #0x11
   037C 00                 1452 	.db #0x00
   037D 02                 1453 	.db #0x02
   037E 08                 1454 	.db #0x08
   037F 0A                 1455 	.db #0x0A
   0380 12                 1456 	.db #0x12
   0381 10                 1457 	.db #0x10
   0382 00                 1458 	.db #0x00
   0383 02                 1459 	.db #0x02
   0384 03                 1460 	.db #0x03
   0385 01                 1461 	.db #0x01
   0386 11                 1462 	.db #0x11
   0387 13                 1463 	.db #0x13
   0388 0B                 1464 	.db #0x0B
   0389 09                 1465 	.db #0x09
   038A 03                 1466 	.db #0x03
   038B 01                 1467 	.db #0x01
   038C 02                 1468 	.db #0x02
   038D 08                 1469 	.db #0x08
   038E 0A                 1470 	.db #0x0A
   038F 12                 1471 	.db #0x12
   0390 10                 1472 	.db #0x10
   0391 00                 1473 	.db #0x00
   0392 02                 1474 	.db #0x02
   0393 08                 1475 	.db #0x08
   0394 09                 1476 	.db #0x09
   0395 03                 1477 	.db #0x03
   0396 01                 1478 	.db #0x01
   0397 11                 1479 	.db #0x11
   0398 13                 1480 	.db #0x13
   0399 0B                 1481 	.db #0x0B
   039A 09                 1482 	.db #0x09
   039B 03                 1483 	.db #0x03
   039C 08                 1484 	.db #0x08
   039D 0A                 1485 	.db #0x0A
   039E 12                 1486 	.db #0x12
   039F 10                 1487 	.db #0x10
   03A0 00                 1488 	.db #0x00
   03A1 02                 1489 	.db #0x02
   03A2 08                 1490 	.db #0x08
   03A3 0A                 1491 	.db #0x0A
   03A4 0B                 1492 	.db #0x0B
   03A5 09                 1493 	.db #0x09
   03A6 03                 1494 	.db #0x03
   03A7 01                 1495 	.db #0x01
   03A8 11                 1496 	.db #0x11
   03A9 13                 1497 	.db #0x13
   03AA 0B                 1498 	.db #0x0B
   03AB 09                 1499 	.db #0x09
   03AC                    1500 _tri_dia:
   03AC 05                 1501 	.db #0x05
   03AD 1B                 1502 	.db #0x1B
   03AE 0F                 1503 	.db #0x0F
   03AF 1D                 1504 	.db #0x1D
   03B0 15                 1505 	.db #0x15
   03B1 19                 1506 	.db #0x19
   03B2 05                 1507 	.db #0x05
   03B3 1B                 1508 	.db #0x1B
   03B4 0F                 1509 	.db #0x0F
   03B5 1D                 1510 	.db #0x1D
   03B6 15                 1511 	.db #0x15
   03B7 19                 1512 	.db #0x19
   03B8 05                 1513 	.db #0x05
   03B9 1B                 1514 	.db #0x1B
   03BA 0F                 1515 	.db #0x0F
   03BB 1D                 1516 	.db #0x1D
   03BC 1D                 1517 	.db #0x1D
   03BD 05                 1518 	.db #0x05
   03BE 19                 1519 	.db #0x19
   03BF 0F                 1520 	.db #0x0F
   03C0 1B                 1521 	.db #0x1B
   03C1 15                 1522 	.db #0x15
   03C2 1D                 1523 	.db #0x1D
   03C3 05                 1524 	.db #0x05
   03C4 19                 1525 	.db #0x19
   03C5 0F                 1526 	.db #0x0F
   03C6 1B                 1527 	.db #0x1B
   03C7 15                 1528 	.db #0x15
   03C8 1D                 1529 	.db #0x1D
   03C9 05                 1530 	.db #0x05
   03CA 19                 1531 	.db #0x19
   03CB 0F                 1532 	.db #0x0F
   03CC 0F                 1533 	.db #0x0F
   03CD 1D                 1534 	.db #0x1D
   03CE 15                 1535 	.db #0x15
   03CF 19                 1536 	.db #0x19
   03D0 05                 1537 	.db #0x05
   03D1 1B                 1538 	.db #0x1B
   03D2 0F                 1539 	.db #0x0F
   03D3 1D                 1540 	.db #0x1D
   03D4 15                 1541 	.db #0x15
   03D5 19                 1542 	.db #0x19
   03D6 05                 1543 	.db #0x05
   03D7 1B                 1544 	.db #0x1B
   03D8 0F                 1545 	.db #0x0F
   03D9 1D                 1546 	.db #0x1D
   03DA 15                 1547 	.db #0x15
   03DB 19                 1548 	.db #0x19
   03DC 19                 1549 	.db #0x19
   03DD 0F                 1550 	.db #0x0F
   03DE 1B                 1551 	.db #0x1B
   03DF 15                 1552 	.db #0x15
   03E0 1D                 1553 	.db #0x1D
   03E1 05                 1554 	.db #0x05
   03E2 19                 1555 	.db #0x19
   03E3 0F                 1556 	.db #0x0F
   03E4 1B                 1557 	.db #0x1B
   03E5 15                 1558 	.db #0x15
   03E6 1D                 1559 	.db #0x1D
   03E7 05                 1560 	.db #0x05
   03E8 19                 1561 	.db #0x19
   03E9 0F                 1562 	.db #0x0F
   03EA 1B                 1563 	.db #0x1B
   03EB 15                 1564 	.db #0x15
   03EC 15                 1565 	.db #0x15
   03ED 19                 1566 	.db #0x19
   03EE 05                 1567 	.db #0x05
   03EF 1B                 1568 	.db #0x1B
   03F0 0F                 1569 	.db #0x0F
   03F1 1D                 1570 	.db #0x1D
   03F2 15                 1571 	.db #0x15
   03F3 19                 1572 	.db #0x19
   03F4 05                 1573 	.db #0x05
   03F5 1B                 1574 	.db #0x1B
   03F6 0F                 1575 	.db #0x0F
   03F7 1D                 1576 	.db #0x1D
   03F8 15                 1577 	.db #0x15
   03F9 19                 1578 	.db #0x19
   03FA 05                 1579 	.db #0x05
   03FB 1B                 1580 	.db #0x1B
   03FC 1B                 1581 	.db #0x1B
   03FD 15                 1582 	.db #0x15
   03FE 1D                 1583 	.db #0x1D
   03FF 05                 1584 	.db #0x05
   0400 19                 1585 	.db #0x19
   0401 0F                 1586 	.db #0x0F
   0402 1B                 1587 	.db #0x1B
   0403 15                 1588 	.db #0x15
   0404 1D                 1589 	.db #0x1D
   0405 05                 1590 	.db #0x05
   0406 19                 1591 	.db #0x19
   0407 0F                 1592 	.db #0x0F
   0408 1B                 1593 	.db #0x1B
   0409 15                 1594 	.db #0x15
   040A 1D                 1595 	.db #0x1D
   040B 05                 1596 	.db #0x05
   040C 05                 1597 	.db #0x05
   040D 1B                 1598 	.db #0x1B
   040E 0F                 1599 	.db #0x0F
   040F 1D                 1600 	.db #0x1D
   0410 15                 1601 	.db #0x15
   0411 19                 1602 	.db #0x19
   0412 05                 1603 	.db #0x05
   0413 1B                 1604 	.db #0x1B
   0414 0F                 1605 	.db #0x0F
   0415 1D                 1606 	.db #0x1D
   0416 15                 1607 	.db #0x15
   0417 19                 1608 	.db #0x19
   0418 05                 1609 	.db #0x05
   0419 1B                 1610 	.db #0x1B
   041A 0F                 1611 	.db #0x0F
   041B 1D                 1612 	.db #0x1D
   041C 1D                 1613 	.db #0x1D
   041D 05                 1614 	.db #0x05
   041E 19                 1615 	.db #0x19
   041F 0F                 1616 	.db #0x0F
   0420 1B                 1617 	.db #0x1B
   0421 15                 1618 	.db #0x15
   0422 1D                 1619 	.db #0x1D
   0423 05                 1620 	.db #0x05
   0424 19                 1621 	.db #0x19
   0425 0F                 1622 	.db #0x0F
   0426 1B                 1623 	.db #0x1B
   0427 15                 1624 	.db #0x15
   0428 1D                 1625 	.db #0x1D
   0429 05                 1626 	.db #0x05
   042A 19                 1627 	.db #0x19
   042B 0F                 1628 	.db #0x0F
   042C 0F                 1629 	.db #0x0F
   042D 1D                 1630 	.db #0x1D
   042E 15                 1631 	.db #0x15
   042F 19                 1632 	.db #0x19
   0430 05                 1633 	.db #0x05
   0431 1B                 1634 	.db #0x1B
   0432 0F                 1635 	.db #0x0F
   0433 1D                 1636 	.db #0x1D
   0434 15                 1637 	.db #0x15
   0435 19                 1638 	.db #0x19
   0436 05                 1639 	.db #0x05
   0437 1B                 1640 	.db #0x1B
   0438 0F                 1641 	.db #0x0F
   0439 1D                 1642 	.db #0x1D
   043A 15                 1643 	.db #0x15
   043B 19                 1644 	.db #0x19
   043C 19                 1645 	.db #0x19
   043D 0F                 1646 	.db #0x0F
   043E 1B                 1647 	.db #0x1B
   043F 15                 1648 	.db #0x15
   0440 1D                 1649 	.db #0x1D
   0441 05                 1650 	.db #0x05
   0442 19                 1651 	.db #0x19
   0443 0F                 1652 	.db #0x0F
   0444 1B                 1653 	.db #0x1B
   0445 15                 1654 	.db #0x15
   0446 1D                 1655 	.db #0x1D
   0447 05                 1656 	.db #0x05
   0448 19                 1657 	.db #0x19
   0449 0F                 1658 	.db #0x0F
   044A 1B                 1659 	.db #0x1B
   044B 15                 1660 	.db #0x15
   044C 15                 1661 	.db #0x15
   044D 19                 1662 	.db #0x19
   044E 05                 1663 	.db #0x05
   044F 1B                 1664 	.db #0x1B
   0450 0F                 1665 	.db #0x0F
   0451 1D                 1666 	.db #0x1D
   0452 15                 1667 	.db #0x15
   0453 19                 1668 	.db #0x19
   0454 05                 1669 	.db #0x05
   0455 1B                 1670 	.db #0x1B
   0456 0F                 1671 	.db #0x0F
   0457 1D                 1672 	.db #0x1D
   0458 15                 1673 	.db #0x15
   0459 19                 1674 	.db #0x19
   045A 05                 1675 	.db #0x05
   045B 1B                 1676 	.db #0x1B
   045C 1B                 1677 	.db #0x1B
   045D 15                 1678 	.db #0x15
   045E 1D                 1679 	.db #0x1D
   045F 05                 1680 	.db #0x05
   0460 19                 1681 	.db #0x19
   0461 0F                 1682 	.db #0x0F
   0462 1B                 1683 	.db #0x1B
   0463 15                 1684 	.db #0x15
   0464 1D                 1685 	.db #0x1D
   0465 05                 1686 	.db #0x05
   0466 19                 1687 	.db #0x19
   0467 0F                 1688 	.db #0x0F
   0468 1B                 1689 	.db #0x1B
   0469 15                 1690 	.db #0x15
   046A 1D                 1691 	.db #0x1D
   046B 05                 1692 	.db #0x05
   046C                    1693 _tri_side1:
   046C 0A                 1694 	.db #0x0A
   046D 12                 1695 	.db #0x12
   046E 10                 1696 	.db #0x10
   046F 00                 1697 	.db #0x00
   0470 02                 1698 	.db #0x02
   0471 08                 1699 	.db #0x08
   0472 0A                 1700 	.db #0x0A
   0473 12                 1701 	.db #0x12
   0474 10                 1702 	.db #0x10
   0475 00                 1703 	.db #0x00
   0476 02                 1704 	.db #0x02
   0477 08                 1705 	.db #0x08
   0478 0A                 1706 	.db #0x0A
   0479 12                 1707 	.db #0x12
   047A 10                 1708 	.db #0x10
   047B 00                 1709 	.db #0x00
   047C 12                 1710 	.db #0x12
   047D 10                 1711 	.db #0x10
   047E 00                 1712 	.db #0x00
   047F 02                 1713 	.db #0x02
   0480 08                 1714 	.db #0x08
   0481 0A                 1715 	.db #0x0A
   0482 12                 1716 	.db #0x12
   0483 10                 1717 	.db #0x10
   0484 00                 1718 	.db #0x00
   0485 02                 1719 	.db #0x02
   0486 08                 1720 	.db #0x08
   0487 0A                 1721 	.db #0x0A
   0488 12                 1722 	.db #0x12
   0489 10                 1723 	.db #0x10
   048A 00                 1724 	.db #0x00
   048B 02                 1725 	.db #0x02
   048C 10                 1726 	.db #0x10
   048D 00                 1727 	.db #0x00
   048E 02                 1728 	.db #0x02
   048F 08                 1729 	.db #0x08
   0490 0A                 1730 	.db #0x0A
   0491 12                 1731 	.db #0x12
   0492 10                 1732 	.db #0x10
   0493 00                 1733 	.db #0x00
   0494 02                 1734 	.db #0x02
   0495 08                 1735 	.db #0x08
   0496 0A                 1736 	.db #0x0A
   0497 12                 1737 	.db #0x12
   0498 10                 1738 	.db #0x10
   0499 00                 1739 	.db #0x00
   049A 02                 1740 	.db #0x02
   049B 08                 1741 	.db #0x08
   049C 00                 1742 	.db #0x00
   049D 02                 1743 	.db #0x02
   049E 08                 1744 	.db #0x08
   049F 0A                 1745 	.db #0x0A
   04A0 12                 1746 	.db #0x12
   04A1 10                 1747 	.db #0x10
   04A2 00                 1748 	.db #0x00
   04A3 02                 1749 	.db #0x02
   04A4 08                 1750 	.db #0x08
   04A5 0A                 1751 	.db #0x0A
   04A6 12                 1752 	.db #0x12
   04A7 10                 1753 	.db #0x10
   04A8 00                 1754 	.db #0x00
   04A9 02                 1755 	.db #0x02
   04AA 08                 1756 	.db #0x08
   04AB 0A                 1757 	.db #0x0A
   04AC 02                 1758 	.db #0x02
   04AD 08                 1759 	.db #0x08
   04AE 0A                 1760 	.db #0x0A
   04AF 12                 1761 	.db #0x12
   04B0 10                 1762 	.db #0x10
   04B1 00                 1763 	.db #0x00
   04B2 02                 1764 	.db #0x02
   04B3 08                 1765 	.db #0x08
   04B4 0A                 1766 	.db #0x0A
   04B5 12                 1767 	.db #0x12
   04B6 10                 1768 	.db #0x10
   04B7 00                 1769 	.db #0x00
   04B8 02                 1770 	.db #0x02
   04B9 08                 1771 	.db #0x08
   04BA 0A                 1772 	.db #0x0A
   04BB 12                 1773 	.db #0x12
   04BC 08                 1774 	.db #0x08
   04BD 0A                 1775 	.db #0x0A
   04BE 12                 1776 	.db #0x12
   04BF 10                 1777 	.db #0x10
   04C0 00                 1778 	.db #0x00
   04C1 02                 1779 	.db #0x02
   04C2 08                 1780 	.db #0x08
   04C3 0A                 1781 	.db #0x0A
   04C4 12                 1782 	.db #0x12
   04C5 10                 1783 	.db #0x10
   04C6 00                 1784 	.db #0x00
   04C7 02                 1785 	.db #0x02
   04C8 08                 1786 	.db #0x08
   04C9 0A                 1787 	.db #0x0A
   04CA 12                 1788 	.db #0x12
   04CB 10                 1789 	.db #0x10
   04CC 0A                 1790 	.db #0x0A
   04CD 12                 1791 	.db #0x12
   04CE 10                 1792 	.db #0x10
   04CF 00                 1793 	.db #0x00
   04D0 02                 1794 	.db #0x02
   04D1 08                 1795 	.db #0x08
   04D2 0A                 1796 	.db #0x0A
   04D3 12                 1797 	.db #0x12
   04D4 10                 1798 	.db #0x10
   04D5 00                 1799 	.db #0x00
   04D6 02                 1800 	.db #0x02
   04D7 08                 1801 	.db #0x08
   04D8 0A                 1802 	.db #0x0A
   04D9 12                 1803 	.db #0x12
   04DA 10                 1804 	.db #0x10
   04DB 00                 1805 	.db #0x00
   04DC 12                 1806 	.db #0x12
   04DD 10                 1807 	.db #0x10
   04DE 00                 1808 	.db #0x00
   04DF 02                 1809 	.db #0x02
   04E0 08                 1810 	.db #0x08
   04E1 0A                 1811 	.db #0x0A
   04E2 12                 1812 	.db #0x12
   04E3 10                 1813 	.db #0x10
   04E4 00                 1814 	.db #0x00
   04E5 02                 1815 	.db #0x02
   04E6 08                 1816 	.db #0x08
   04E7 0A                 1817 	.db #0x0A
   04E8 12                 1818 	.db #0x12
   04E9 10                 1819 	.db #0x10
   04EA 00                 1820 	.db #0x00
   04EB 02                 1821 	.db #0x02
   04EC 10                 1822 	.db #0x10
   04ED 00                 1823 	.db #0x00
   04EE 02                 1824 	.db #0x02
   04EF 08                 1825 	.db #0x08
   04F0 0A                 1826 	.db #0x0A
   04F1 12                 1827 	.db #0x12
   04F2 10                 1828 	.db #0x10
   04F3 00                 1829 	.db #0x00
   04F4 02                 1830 	.db #0x02
   04F5 08                 1831 	.db #0x08
   04F6 0A                 1832 	.db #0x0A
   04F7 12                 1833 	.db #0x12
   04F8 10                 1834 	.db #0x10
   04F9 00                 1835 	.db #0x00
   04FA 02                 1836 	.db #0x02
   04FB 08                 1837 	.db #0x08
   04FC 00                 1838 	.db #0x00
   04FD 02                 1839 	.db #0x02
   04FE 08                 1840 	.db #0x08
   04FF 0A                 1841 	.db #0x0A
   0500 12                 1842 	.db #0x12
   0501 10                 1843 	.db #0x10
   0502 00                 1844 	.db #0x00
   0503 02                 1845 	.db #0x02
   0504 08                 1846 	.db #0x08
   0505 0A                 1847 	.db #0x0A
   0506 12                 1848 	.db #0x12
   0507 10                 1849 	.db #0x10
   0508 00                 1850 	.db #0x00
   0509 02                 1851 	.db #0x02
   050A 08                 1852 	.db #0x08
   050B 0A                 1853 	.db #0x0A
   050C 02                 1854 	.db #0x02
   050D 08                 1855 	.db #0x08
   050E 0A                 1856 	.db #0x0A
   050F 12                 1857 	.db #0x12
   0510 10                 1858 	.db #0x10
   0511 00                 1859 	.db #0x00
   0512 02                 1860 	.db #0x02
   0513 08                 1861 	.db #0x08
   0514 0A                 1862 	.db #0x0A
   0515 12                 1863 	.db #0x12
   0516 10                 1864 	.db #0x10
   0517 00                 1865 	.db #0x00
   0518 02                 1866 	.db #0x02
   0519 08                 1867 	.db #0x08
   051A 0A                 1868 	.db #0x0A
   051B 12                 1869 	.db #0x12
   051C 08                 1870 	.db #0x08
   051D 0A                 1871 	.db #0x0A
   051E 12                 1872 	.db #0x12
   051F 10                 1873 	.db #0x10
   0520 00                 1874 	.db #0x00
   0521 02                 1875 	.db #0x02
   0522 08                 1876 	.db #0x08
   0523 0A                 1877 	.db #0x0A
   0524 12                 1878 	.db #0x12
   0525 10                 1879 	.db #0x10
   0526 00                 1880 	.db #0x00
   0527 02                 1881 	.db #0x02
   0528 08                 1882 	.db #0x08
   0529 0A                 1883 	.db #0x0A
   052A 12                 1884 	.db #0x12
   052B 10                 1885 	.db #0x10
   052C                    1886 _tri_side2:
   052C 00                 1887 	.db #0x00
   052D 10                 1888 	.db #0x10
   052E 12                 1889 	.db #0x12
   052F 0A                 1890 	.db #0x0A
   0530 08                 1891 	.db #0x08
   0531 02                 1892 	.db #0x02
   0532 00                 1893 	.db #0x00
   0533 10                 1894 	.db #0x10
   0534 12                 1895 	.db #0x12
   0535 0A                 1896 	.db #0x0A
   0536 08                 1897 	.db #0x08
   0537 02                 1898 	.db #0x02
   0538 00                 1899 	.db #0x00
   0539 10                 1900 	.db #0x10
   053A 12                 1901 	.db #0x12
   053B 0A                 1902 	.db #0x0A
   053C 02                 1903 	.db #0x02
   053D 00                 1904 	.db #0x00
   053E 10                 1905 	.db #0x10
   053F 12                 1906 	.db #0x12
   0540 0A                 1907 	.db #0x0A
   0541 08                 1908 	.db #0x08
   0542 02                 1909 	.db #0x02
   0543 00                 1910 	.db #0x00
   0544 10                 1911 	.db #0x10
   0545 12                 1912 	.db #0x12
   0546 0A                 1913 	.db #0x0A
   0547 08                 1914 	.db #0x08
   0548 02                 1915 	.db #0x02
   0549 00                 1916 	.db #0x00
   054A 10                 1917 	.db #0x10
   054B 12                 1918 	.db #0x12
   054C 08                 1919 	.db #0x08
   054D 02                 1920 	.db #0x02
   054E 00                 1921 	.db #0x00
   054F 10                 1922 	.db #0x10
   0550 12                 1923 	.db #0x12
   0551 0A                 1924 	.db #0x0A
   0552 08                 1925 	.db #0x08
   0553 02                 1926 	.db #0x02
   0554 00                 1927 	.db #0x00
   0555 10                 1928 	.db #0x10
   0556 12                 1929 	.db #0x12
   0557 0A                 1930 	.db #0x0A
   0558 08                 1931 	.db #0x08
   0559 02                 1932 	.db #0x02
   055A 00                 1933 	.db #0x00
   055B 10                 1934 	.db #0x10
   055C 0A                 1935 	.db #0x0A
   055D 08                 1936 	.db #0x08
   055E 02                 1937 	.db #0x02
   055F 00                 1938 	.db #0x00
   0560 10                 1939 	.db #0x10
   0561 12                 1940 	.db #0x12
   0562 0A                 1941 	.db #0x0A
   0563 08                 1942 	.db #0x08
   0564 02                 1943 	.db #0x02
   0565 00                 1944 	.db #0x00
   0566 10                 1945 	.db #0x10
   0567 12                 1946 	.db #0x12
   0568 0A                 1947 	.db #0x0A
   0569 08                 1948 	.db #0x08
   056A 02                 1949 	.db #0x02
   056B 00                 1950 	.db #0x00
   056C 12                 1951 	.db #0x12
   056D 0A                 1952 	.db #0x0A
   056E 08                 1953 	.db #0x08
   056F 02                 1954 	.db #0x02
   0570 00                 1955 	.db #0x00
   0571 10                 1956 	.db #0x10
   0572 12                 1957 	.db #0x12
   0573 0A                 1958 	.db #0x0A
   0574 08                 1959 	.db #0x08
   0575 02                 1960 	.db #0x02
   0576 00                 1961 	.db #0x00
   0577 10                 1962 	.db #0x10
   0578 12                 1963 	.db #0x12
   0579 0A                 1964 	.db #0x0A
   057A 08                 1965 	.db #0x08
   057B 02                 1966 	.db #0x02
   057C 10                 1967 	.db #0x10
   057D 12                 1968 	.db #0x12
   057E 0A                 1969 	.db #0x0A
   057F 08                 1970 	.db #0x08
   0580 02                 1971 	.db #0x02
   0581 00                 1972 	.db #0x00
   0582 10                 1973 	.db #0x10
   0583 12                 1974 	.db #0x12
   0584 0A                 1975 	.db #0x0A
   0585 08                 1976 	.db #0x08
   0586 02                 1977 	.db #0x02
   0587 00                 1978 	.db #0x00
   0588 10                 1979 	.db #0x10
   0589 12                 1980 	.db #0x12
   058A 0A                 1981 	.db #0x0A
   058B 08                 1982 	.db #0x08
   058C 00                 1983 	.db #0x00
   058D 10                 1984 	.db #0x10
   058E 12                 1985 	.db #0x12
   058F 0A                 1986 	.db #0x0A
   0590 08                 1987 	.db #0x08
   0591 02                 1988 	.db #0x02
   0592 00                 1989 	.db #0x00
   0593 10                 1990 	.db #0x10
   0594 12                 1991 	.db #0x12
   0595 0A                 1992 	.db #0x0A
   0596 08                 1993 	.db #0x08
   0597 02                 1994 	.db #0x02
   0598 00                 1995 	.db #0x00
   0599 10                 1996 	.db #0x10
   059A 12                 1997 	.db #0x12
   059B 0A                 1998 	.db #0x0A
   059C 02                 1999 	.db #0x02
   059D 00                 2000 	.db #0x00
   059E 10                 2001 	.db #0x10
   059F 12                 2002 	.db #0x12
   05A0 0A                 2003 	.db #0x0A
   05A1 08                 2004 	.db #0x08
   05A2 02                 2005 	.db #0x02
   05A3 00                 2006 	.db #0x00
   05A4 10                 2007 	.db #0x10
   05A5 12                 2008 	.db #0x12
   05A6 0A                 2009 	.db #0x0A
   05A7 08                 2010 	.db #0x08
   05A8 02                 2011 	.db #0x02
   05A9 00                 2012 	.db #0x00
   05AA 10                 2013 	.db #0x10
   05AB 12                 2014 	.db #0x12
   05AC 08                 2015 	.db #0x08
   05AD 02                 2016 	.db #0x02
   05AE 00                 2017 	.db #0x00
   05AF 10                 2018 	.db #0x10
   05B0 12                 2019 	.db #0x12
   05B1 0A                 2020 	.db #0x0A
   05B2 08                 2021 	.db #0x08
   05B3 02                 2022 	.db #0x02
   05B4 00                 2023 	.db #0x00
   05B5 10                 2024 	.db #0x10
   05B6 12                 2025 	.db #0x12
   05B7 0A                 2026 	.db #0x0A
   05B8 08                 2027 	.db #0x08
   05B9 02                 2028 	.db #0x02
   05BA 00                 2029 	.db #0x00
   05BB 10                 2030 	.db #0x10
   05BC 0A                 2031 	.db #0x0A
   05BD 08                 2032 	.db #0x08
   05BE 02                 2033 	.db #0x02
   05BF 00                 2034 	.db #0x00
   05C0 10                 2035 	.db #0x10
   05C1 12                 2036 	.db #0x12
   05C2 0A                 2037 	.db #0x0A
   05C3 08                 2038 	.db #0x08
   05C4 02                 2039 	.db #0x02
   05C5 00                 2040 	.db #0x00
   05C6 10                 2041 	.db #0x10
   05C7 12                 2042 	.db #0x12
   05C8 0A                 2043 	.db #0x0A
   05C9 08                 2044 	.db #0x08
   05CA 02                 2045 	.db #0x02
   05CB 00                 2046 	.db #0x00
   05CC 12                 2047 	.db #0x12
   05CD 0A                 2048 	.db #0x0A
   05CE 08                 2049 	.db #0x08
   05CF 02                 2050 	.db #0x02
   05D0 00                 2051 	.db #0x00
   05D1 10                 2052 	.db #0x10
   05D2 12                 2053 	.db #0x12
   05D3 0A                 2054 	.db #0x0A
   05D4 08                 2055 	.db #0x08
   05D5 02                 2056 	.db #0x02
   05D6 00                 2057 	.db #0x00
   05D7 10                 2058 	.db #0x10
   05D8 12                 2059 	.db #0x12
   05D9 0A                 2060 	.db #0x0A
   05DA 08                 2061 	.db #0x08
   05DB 02                 2062 	.db #0x02
   05DC 10                 2063 	.db #0x10
   05DD 12                 2064 	.db #0x12
   05DE 0A                 2065 	.db #0x0A
   05DF 08                 2066 	.db #0x08
   05E0 02                 2067 	.db #0x02
   05E1 00                 2068 	.db #0x00
   05E2 10                 2069 	.db #0x10
   05E3 12                 2070 	.db #0x12
   05E4 0A                 2071 	.db #0x0A
   05E5 08                 2072 	.db #0x08
   05E6 02                 2073 	.db #0x02
   05E7 00                 2074 	.db #0x00
   05E8 10                 2075 	.db #0x10
   05E9 12                 2076 	.db #0x12
   05EA 0A                 2077 	.db #0x0A
   05EB 08                 2078 	.db #0x08
                           2079 ;demo.c:142: void my_isr(void) interrupt
                           2080 ;	---------------------------------
                           2081 ; Function my_isr
                           2082 ; ---------------------------------
   05EC                    2083 _my_isr_start::
   05EC                    2084 _my_isr:
   05EC F5                 2085 	push	af
   05ED C5                 2086 	push	bc
   05EE D5                 2087 	push	de
   05EF E5                 2088 	push	hl
   05F0 FD E5              2089 	push	iy
                           2090 ;demo.c:144: DI;
   05F2 F3                 2091 		di 
                           2092 ;demo.c:146: READ_VDP_STATUS;
   05F3 DB 99              2093 		in a,(#0x99) 
                           2094 ;demo.c:148: PLY_Play();
   05F5 CDr00s00           2095 	call	_PLY_Play
                           2096 ;demo.c:149: PLY_SendRegisters();
   05F8 CDr00s00           2097 	call	_PLY_SendRegisters
                           2098 ;demo.c:151: vbicount+=1;
   05FB FD 21r20s8F        2099 	ld	iy,#_vbicount
   05FF FD 34 00           2100 	inc	0 (iy)
   0602 20 07              2101 	jr	NZ,00103$
   0604 FD 21r20s8F        2102 	ld	iy,#_vbicount
   0608 FD 34 01           2103 	inc	1 (iy)
   060B                    2104 00103$:
                           2105 ;demo.c:152: tick++;
   060B FD 21r22s8F        2106 	ld	iy,#_tick
   060F FD 34 00           2107 	inc	0 (iy)
   0612 20 07              2108 	jr	NZ,00104$
   0614 FD 21r22s8F        2109 	ld	iy,#_tick
   0618 FD 34 01           2110 	inc	1 (iy)
   061B                    2111 00104$:
                           2112 ;demo.c:154: EI;
   061B FB                 2113 		ei 
   061C FD E1              2114 	pop	iy
   061E E1                 2115 	pop	hl
   061F D1                 2116 	pop	de
   0620 C1                 2117 	pop	bc
   0621 F1                 2118 	pop	af
   0622 ED 4D              2119 	reti
   0624                    2120 _my_isr_end::
                           2121 ;demo.c:157: void color_isr(void) interrupt
                           2122 ;	---------------------------------
                           2123 ; Function color_isr
                           2124 ; ---------------------------------
   0624                    2125 _color_isr_start::
   0624                    2126 _color_isr:
   0624 F5                 2127 	push	af
   0625 C5                 2128 	push	bc
   0626 D5                 2129 	push	de
   0627 E5                 2130 	push	hl
   0628 FD E5              2131 	push	iy
                           2132 ;demo.c:159: DI;
   062A F3                 2133 		di 
                           2134 ;demo.c:161: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              2135 	ld	a,#0x01
   062D F5                 2136 	push	af
   062E 33                 2137 	inc	sp
   062F CDr00s00           2138 	call	_vdp2_status
   0632 33                 2139 	inc	sp
   0633 4D                 2140 	ld	c,l
   0634 21 00 00           2141 	ld	hl,#0x0000
   0637 E5                 2142 	push	hl
   0638 79                 2143 	ld	a,c
   0639 F5                 2144 	push	af
   063A 33                 2145 	inc	sp
   063B CDr00s00           2146 	call	_isNthBitSet
   063E F1                 2147 	pop	af
   063F 33                 2148 	inc	sp
   0640 44                 2149 	ld	b,h
   0641 4D                 2150 	ld	c,l
   0642 79                 2151 	ld	a,c
   0643 B0                 2152 	or	a,b
   0644 28 19              2153 	jr	Z,00102$
                           2154 ;demo.c:162: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r20s8F           2155 	ld	hl,#_vbicount + 0
   0649 4E                 2156 	ld	c,(hl)
   064A 06 00              2157 	ld	b,#0x00
   064C 21r00s00           2158 	ld	hl,#_sintab
   064F 09                 2159 	add	hl,bc
   0650 7E                 2160 	ld	a,(hl)
   0651 F5                 2161 	push	af
   0652 33                 2162 	inc	sp
   0653 3E 17              2163 	ld	a,#0x17
   0655 F5                 2164 	push	af
   0656 33                 2165 	inc	sp
   0657 CDr00s00           2166 	call	_vdp_register
   065A F1                 2167 	pop	af
                           2168 ;demo.c:163: READ_VDP_STATUS;
   065B DB 99              2169 		in a,(#0x99) 
   065D 18 18              2170 	jr	00103$
   065F                    2171 00102$:
                           2172 ;demo.c:166: READ_VDP_STATUS;
   065F DB 99              2173 		in a,(#0x99) 
                           2174 ;demo.c:167: vbicount++;
   0661 FD 21r20s8F        2175 	ld	iy,#_vbicount
   0665 FD 34 00           2176 	inc	0 (iy)
   0668 20 07              2177 	jr	NZ,00107$
   066A FD 21r20s8F        2178 	ld	iy,#_vbicount
   066E FD 34 01           2179 	inc	1 (iy)
   0671                    2180 00107$:
                           2181 ;demo.c:170: PLY_Play();
   0671 CDr00s00           2182 	call	_PLY_Play
                           2183 ;demo.c:171: PLY_SendRegisters();
   0674 CDr00s00           2184 	call	_PLY_SendRegisters
   0677                    2185 00103$:
                           2186 ;demo.c:174: EI;
   0677 FB                 2187 		ei 
   0678 FD E1              2188 	pop	iy
   067A E1                 2189 	pop	hl
   067B D1                 2190 	pop	de
   067C C1                 2191 	pop	bc
   067D F1                 2192 	pop	af
   067E ED 4D              2193 	reti
   0680                    2194 _color_isr_end::
                           2195 ;demo.c:181: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2196 ;	---------------------------------
                           2197 ; Function ge5_load
                           2198 ; ---------------------------------
   0680                    2199 _ge5_load_start::
   0680                    2200 _ge5_load:
   0680 DD E5              2201 	push	ix
   0682 DD 21 00 00        2202 	ld	ix,#0
   0686 DD 39              2203 	add	ix,sp
   0688 21 D2 FF           2204 	ld	hl,#-46
   068B 39                 2205 	add	hl,sp
   068C F9                 2206 	ld	sp,hl
                           2207 ;demo.c:185: if(debugprint == 1) {
   068D DD 7E 09           2208 	ld	a,9 (ix)
   0690 D6 01              2209 	sub	a,#0x01
   0692 20 06              2210 	jr	NZ,00125$
   0694 DD 7E 0A           2211 	ld	a,10 (ix)
   0697 B7                 2212 	or	a,a
   0698 28 02              2213 	jr	Z,00126$
   069A                    2214 00125$:
   069A 18 1B              2215 	jr	00102$
   069C                    2216 00126$:
                           2217 ;demo.c:186: puts("loading ge5file: ");
   069C 21r7Bs07           2218 	ld	hl,#__str_0
   069F E5                 2219 	push	hl
   06A0 CDr00s00           2220 	call	_puts
   06A3 F1                 2221 	pop	af
                           2222 ;demo.c:187: puts(file_name);
   06A4 DD 6E 04           2223 	ld	l,4 (ix)
   06A7 DD 66 05           2224 	ld	h,5 (ix)
   06AA E5                 2225 	push	hl
   06AB CDr00s00           2226 	call	_puts
   06AE F1                 2227 	pop	af
                           2228 ;demo.c:188: puts("\r\n");
   06AF 21r8Ds07           2229 	ld	hl,#__str_1
   06B2 E5                 2230 	push	hl
   06B3 CDr00s00           2231 	call	_puts
   06B6 F1                 2232 	pop	af
   06B7                    2233 00102$:
                           2234 ;demo.c:191: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2235 	ld	hl,#0x0000
   06BA 39                 2236 	add	hl,sp
   06BB 4D                 2237 	ld	c,l
   06BC 44                 2238 	ld	b,h
   06BD 21 2E 00           2239 	ld	hl,#0x002E
   06C0 E5                 2240 	push	hl
   06C1 3E 00              2241 	ld	a,#0x00
   06C3 F5                 2242 	push	af
   06C4 33                 2243 	inc	sp
   06C5 C5                 2244 	push	bc
   06C6 CDr00s00           2245 	call	_memset
   06C9 F1                 2246 	pop	af
   06CA F1                 2247 	pop	af
   06CB 33                 2248 	inc	sp
                           2249 ;demo.c:193: f.record_size = 128;
   06CC 21 00 00           2250 	ld	hl,#0x0000
   06CF 39                 2251 	add	hl,sp
   06D0 4D                 2252 	ld	c,l
   06D1 44                 2253 	ld	b,h
   06D2 21 0F 00           2254 	ld	hl,#0x000F
   06D5 09                 2255 	add	hl,bc
   06D6 EB                 2256 	ex	de,hl
   06D7 3E 80              2257 	ld	a,#0x80
   06D9 12                 2258 	ld	(de),a
                           2259 ;demo.c:194: f.drive = 0;
   06DA 3E 00              2260 	ld	a,#0x00
   06DC 02                 2261 	ld	(bc),a
                           2262 ;demo.c:196: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2263 	ld	e,4 (ix)
   06E0 DD 56 05           2264 	ld	d,5 (ix)
   06E3 03                 2265 	inc	bc
   06E4 21 0B 00           2266 	ld	hl,#0x000B
   06E7 E5                 2267 	push	hl
   06E8 D5                 2268 	push	de
   06E9 C5                 2269 	push	bc
   06EA CDr00s00           2270 	call	_memcpy
   06ED F1                 2271 	pop	af
   06EE F1                 2272 	pop	af
   06EF F1                 2273 	pop	af
                           2274 ;demo.c:198: if (open(&f) != 0) return 0;
   06F0 21 00 00           2275 	ld	hl,#0x0000
   06F3 39                 2276 	add	hl,sp
   06F4 E5                 2277 	push	hl
   06F5 CDr00s00           2278 	call	_open
   06F8 F1                 2279 	pop	af
   06F9 AF                 2280 	xor	a,a
   06FA B5                 2281 	or	a,l
   06FB 28 05              2282 	jr	Z,00104$
   06FD 2E 00              2283 	ld	l,#0x00
   06FF C3r76s07           2284 	jp	00116$
   0702                    2285 00104$:
                           2286 ;demo.c:199: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2287 	ld	l,7 (ix)
   0705 DD 66 08           2288 	ld	h,8 (ix)
   0708 E5                 2289 	push	hl
   0709 DD 7E 06           2290 	ld	a,6 (ix)
   070C F5                 2291 	push	af
   070D 33                 2292 	inc	sp
   070E CDr00s00           2293 	call	_vdp_set_write_address
   0711 F1                 2294 	pop	af
   0712 33                 2295 	inc	sp
                           2296 ;demo.c:201: for (i = 0; i < 213; i++) {
   0713 0E 00              2297 	ld	c,#0x00
   0715                    2298 00112$:
   0715 79                 2299 	ld	a,c
   0716 D6 D5              2300 	sub	a,#0xD5
   0718 D2r6Bs07           2301 	jp	NC,00115$
                           2302 ;demo.c:202: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2303 	push	bc
   071C 21r00s8E           2304 	ld	hl,#_scratch
   071F E5                 2305 	push	hl
   0720 CDr00s00           2306 	call	_block_set_data_ptr
   0723 F1                 2307 	pop	af
   0724 7D                 2308 	ld	a,l
   0725 C1                 2309 	pop	bc
   0726 47                 2310 	ld	b,a
   0727 B7                 2311 	or	a,a
   0728 28 05              2312 	jr	Z,00106$
   072A 2E 00              2313 	ld	l,#0x00
   072C C3r76s07           2314 	jp	00116$
   072F                    2315 00106$:
                           2316 ;demo.c:203: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2317 	ld	hl,#0x0000
   0732 39                 2318 	add	hl,sp
   0733 C5                 2319 	push	bc
   0734 E5                 2320 	push	hl
   0735 CDr00s00           2321 	call	_block_read
   0738 F1                 2322 	pop	af
   0739 7D                 2323 	ld	a,l
   073A C1                 2324 	pop	bc
   073B 47                 2325 	ld	b,a
   073C B7                 2326 	or	a,a
   073D 28 04              2327 	jr	Z,00108$
   073F 2E 00              2328 	ld	l,#0x00
   0741 18 33              2329 	jr	00116$
   0743                    2330 00108$:
                           2331 ;demo.c:205: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2332 	xor	a,a
   0744 B1                 2333 	or	a,c
   0745 20 11              2334 	jr	NZ,00110$
   0747 11r07s8E           2335 	ld	de,#_scratch + 7
   074A C5                 2336 	push	bc
   074B 3E 79              2337 	ld	a,#0x79
   074D F5                 2338 	push	af
   074E 33                 2339 	inc	sp
   074F D5                 2340 	push	de
   0750 CDr00s00           2341 	call	_vdp_load_screen
   0753 F1                 2342 	pop	af
   0754 33                 2343 	inc	sp
   0755 C1                 2344 	pop	bc
   0756 18 0F              2345 	jr	00114$
   0758                    2346 00110$:
                           2347 ;demo.c:206: else vdp_load_screen(scratch, 128);
   0758 C5                 2348 	push	bc
   0759 3E 80              2349 	ld	a,#0x80
   075B F5                 2350 	push	af
   075C 33                 2351 	inc	sp
   075D 21r00s8E           2352 	ld	hl,#_scratch
   0760 E5                 2353 	push	hl
   0761 CDr00s00           2354 	call	_vdp_load_screen
   0764 F1                 2355 	pop	af
   0765 33                 2356 	inc	sp
   0766 C1                 2357 	pop	bc
   0767                    2358 00114$:
                           2359 ;demo.c:201: for (i = 0; i < 213; i++) {
   0767 0C                 2360 	inc	c
   0768 C3r15s07           2361 	jp	00112$
   076B                    2362 00115$:
                           2363 ;demo.c:209: close(&f);
   076B 21 00 00           2364 	ld	hl,#0x0000
   076E 39                 2365 	add	hl,sp
   076F E5                 2366 	push	hl
   0770 CDr00s00           2367 	call	_close
   0773 F1                 2368 	pop	af
                           2369 ;demo.c:211: return 1;
   0774 2E 01              2370 	ld	l,#0x01
   0776                    2371 00116$:
   0776 DD F9              2372 	ld	sp,ix
   0778 DD E1              2373 	pop	ix
   077A C9                 2374 	ret
   077B                    2375 _ge5_load_end::
   077B                    2376 __str_0:
   077B 6C 6F 61 64 69 6E  2377 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2378 	.db 0x00
   078D                    2379 __str_1:
   078D 0D                 2380 	.db 0x0D
   078E 0A                 2381 	.db 0x0A
   078F 00                 2382 	.db 0x00
                           2383 ;demo.c:214: void scratch_clear() {
                           2384 ;	---------------------------------
                           2385 ; Function scratch_clear
                           2386 ; ---------------------------------
   0790                    2387 _scratch_clear_start::
   0790                    2388 _scratch_clear:
                           2389 ;demo.c:215: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2390 	ld	hl,#0x0080
   0793 E5                 2391 	push	hl
   0794 3E 00              2392 	ld	a,#0x00
   0796 F5                 2393 	push	af
   0797 33                 2394 	inc	sp
   0798 21r00s8E           2395 	ld	hl,#_scratch
   079B E5                 2396 	push	hl
   079C CDr00s00           2397 	call	_memset
   079F F1                 2398 	pop	af
   07A0 F1                 2399 	pop	af
   07A1 33                 2400 	inc	sp
   07A2 C9                 2401 	ret
   07A3                    2402 _scratch_clear_end::
                           2403 ;demo.c:218: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2404 ;	---------------------------------
                           2405 ; Function pal_load
                           2406 ; ---------------------------------
   07A3                    2407 _pal_load_start::
   07A3                    2408 _pal_load:
   07A3 DD E5              2409 	push	ix
   07A5 DD 21 00 00        2410 	ld	ix,#0
   07A9 DD 39              2411 	add	ix,sp
   07AB 21 D2 FF           2412 	ld	hl,#-46
   07AE 39                 2413 	add	hl,sp
   07AF F9                 2414 	ld	sp,hl
                           2415 ;demo.c:221: if(debugprint == 1) {
   07B0 DD 7E 07           2416 	ld	a,7 (ix)
   07B3 D6 01              2417 	sub	a,#0x01
   07B5 20 06              2418 	jr	NZ,00115$
   07B7 DD 7E 08           2419 	ld	a,8 (ix)
   07BA B7                 2420 	or	a,a
   07BB 28 02              2421 	jr	Z,00116$
   07BD                    2422 00115$:
   07BD 18 1B              2423 	jr	00102$
   07BF                    2424 00116$:
                           2425 ;demo.c:222: puts("loading palfile: ");
   07BF 21r6Ds08           2426 	ld	hl,#__str_2
   07C2 E5                 2427 	push	hl
   07C3 CDr00s00           2428 	call	_puts
   07C6 F1                 2429 	pop	af
                           2430 ;demo.c:223: puts(file_name);
   07C7 DD 6E 04           2431 	ld	l,4 (ix)
   07CA DD 66 05           2432 	ld	h,5 (ix)
   07CD E5                 2433 	push	hl
   07CE CDr00s00           2434 	call	_puts
   07D1 F1                 2435 	pop	af
                           2436 ;demo.c:224: puts("\r\n");
   07D2 21r7Fs08           2437 	ld	hl,#__str_3
   07D5 E5                 2438 	push	hl
   07D6 CDr00s00           2439 	call	_puts
   07D9 F1                 2440 	pop	af
   07DA                    2441 00102$:
                           2442 ;demo.c:227: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2443 	ld	hl,#0x0000
   07DD 39                 2444 	add	hl,sp
   07DE 4D                 2445 	ld	c,l
   07DF 44                 2446 	ld	b,h
   07E0 21 2E 00           2447 	ld	hl,#0x002E
   07E3 E5                 2448 	push	hl
   07E4 3E 00              2449 	ld	a,#0x00
   07E6 F5                 2450 	push	af
   07E7 33                 2451 	inc	sp
   07E8 C5                 2452 	push	bc
   07E9 CDr00s00           2453 	call	_memset
   07EC F1                 2454 	pop	af
   07ED F1                 2455 	pop	af
   07EE 33                 2456 	inc	sp
                           2457 ;demo.c:228: scratch_clear();
   07EF CDr90s07           2458 	call	_scratch_clear
                           2459 ;demo.c:230: f.record_size = ss;
   07F2 21 00 00           2460 	ld	hl,#0x0000
   07F5 39                 2461 	add	hl,sp
   07F6 4D                 2462 	ld	c,l
   07F7 44                 2463 	ld	b,h
   07F8 21 0F 00           2464 	ld	hl,#0x000F
   07FB 09                 2465 	add	hl,bc
   07FC EB                 2466 	ex	de,hl
   07FD DD 7E 06           2467 	ld	a,6 (ix)
   0800 12                 2468 	ld	(de),a
                           2469 ;demo.c:231: f.drive = 0;
   0801 3E 00              2470 	ld	a,#0x00
   0803 02                 2471 	ld	(bc),a
                           2472 ;demo.c:233: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2473 	ld	e,4 (ix)
   0807 DD 56 05           2474 	ld	d,5 (ix)
   080A 03                 2475 	inc	bc
   080B 21 0B 00           2476 	ld	hl,#0x000B
   080E E5                 2477 	push	hl
   080F D5                 2478 	push	de
   0810 C5                 2479 	push	bc
   0811 CDr00s00           2480 	call	_memcpy
   0814 F1                 2481 	pop	af
   0815 F1                 2482 	pop	af
   0816 F1                 2483 	pop	af
                           2484 ;demo.c:235: if (open(&f) != 0) return 0;
   0817 21 00 00           2485 	ld	hl,#0x0000
   081A 39                 2486 	add	hl,sp
   081B E5                 2487 	push	hl
   081C CDr00s00           2488 	call	_open
   081F F1                 2489 	pop	af
   0820 AF                 2490 	xor	a,a
   0821 B5                 2491 	or	a,l
   0822 28 04              2492 	jr	Z,00104$
   0824 2E 00              2493 	ld	l,#0x00
   0826 18 40              2494 	jr	00109$
   0828                    2495 00104$:
                           2496 ;demo.c:236: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21r00s8E           2497 	ld	hl,#_scratch
   082B E5                 2498 	push	hl
   082C CDr00s00           2499 	call	_block_set_data_ptr
   082F F1                 2500 	pop	af
   0830 AF                 2501 	xor	a,a
   0831 B5                 2502 	or	a,l
   0832 28 04              2503 	jr	Z,00106$
   0834 2E 00              2504 	ld	l,#0x00
   0836 18 30              2505 	jr	00109$
   0838                    2506 00106$:
                           2507 ;demo.c:237: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2508 	ld	hl,#0x0000
   083B 39                 2509 	add	hl,sp
   083C E5                 2510 	push	hl
   083D CDr00s00           2511 	call	_block_read
   0840 F1                 2512 	pop	af
   0841 AF                 2513 	xor	a,a
   0842 B5                 2514 	or	a,l
   0843 28 04              2515 	jr	Z,00108$
   0845 2E 00              2516 	ld	l,#0x00
   0847 18 1F              2517 	jr	00109$
   0849                    2518 00108$:
                           2519 ;demo.c:239: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2520 	ld	c,6 (ix)
   084C 06 00              2521 	ld	b,#0x00
   084E 11r07s8E           2522 	ld	de,#_scratch + 7
   0851 C5                 2523 	push	bc
   0852 D5                 2524 	push	de
   0853 21r80s8E           2525 	ld	hl,#_cur_palette
   0856 E5                 2526 	push	hl
   0857 CDr00s00           2527 	call	_memcpy
   085A F1                 2528 	pop	af
   085B F1                 2529 	pop	af
   085C F1                 2530 	pop	af
                           2531 ;demo.c:241: close(&f);
   085D 21 00 00           2532 	ld	hl,#0x0000
   0860 39                 2533 	add	hl,sp
   0861 E5                 2534 	push	hl
   0862 CDr00s00           2535 	call	_close
   0865 F1                 2536 	pop	af
                           2537 ;demo.c:242: return 1;
   0866 2E 01              2538 	ld	l,#0x01
   0868                    2539 00109$:
   0868 DD F9              2540 	ld	sp,ix
   086A DD E1              2541 	pop	ix
   086C C9                 2542 	ret
   086D                    2543 _pal_load_end::
   086D                    2544 __str_2:
   086D 6C 6F 61 64 69 6E  2545 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2546 	.db 0x00
   087F                    2547 __str_3:
   087F 0D                 2548 	.db 0x0D
   0880 0A                 2549 	.db 0x0A
   0881 00                 2550 	.db 0x00
                           2551 ;demo.c:246: void pause() {
                           2552 ;	---------------------------------
                           2553 ; Function pause
                           2554 ; ---------------------------------
   0882                    2555 _pause_start::
   0882                    2556 _pause:
                           2557 ;demo.c:247: uint8_t i,j,k = 0;
                           2558 ;demo.c:248: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2559 	ld	bc,#0x0000
   0885                    2560 00104$:
   0885 78                 2561 	ld	a,b
   0886 D6 FF              2562 	sub	a,#0xFF
   0888 D0                 2563 	ret	NC
                           2564 ;demo.c:249: for (j = 0; j < 255; j++) {
   0889 59                 2565 	ld	e,c
   088A 16 FF              2566 	ld	d,#0xFF
   088C                    2567 00103$:
                           2568 ;demo.c:250: k++;
   088C 1C                 2569 	inc	e
   088D 15                 2570 	dec	d
                           2571 ;demo.c:249: for (j = 0; j < 255; j++) {
   088E AF                 2572 	xor	a,a
   088F B2                 2573 	or	a,d
   0890 20 FA              2574 	jr	NZ,00103$
                           2575 ;demo.c:248: for (i = 0; i < 255; i++) {	
   0892 4B                 2576 	ld	c,e
   0893 04                 2577 	inc	b
   0894 18 EF              2578 	jr	00104$
   0896                    2579 _pause_end::
                           2580 ;demo.c:256: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2581 ;	---------------------------------
                           2582 ; Function raw_load
                           2583 ; ---------------------------------
   0896                    2584 _raw_load_start::
   0896                    2585 _raw_load:
   0896 DD E5              2586 	push	ix
   0898 DD 21 00 00        2587 	ld	ix,#0
   089C DD 39              2588 	add	ix,sp
   089E 21 D2 FF           2589 	ld	hl,#-46
   08A1 39                 2590 	add	hl,sp
   08A2 F9                 2591 	ld	sp,hl
                           2592 ;demo.c:261: if(debugprint == 1) {
   08A3 DD 7E 0A           2593 	ld	a,10 (ix)
   08A6 D6 01              2594 	sub	a,#0x01
   08A8 20 06              2595 	jr	NZ,00120$
   08AA DD 7E 0B           2596 	ld	a,11 (ix)
   08AD B7                 2597 	or	a,a
   08AE 28 02              2598 	jr	Z,00121$
   08B0                    2599 00120$:
   08B0 18 1B              2600 	jr	00102$
   08B2                    2601 00121$:
                           2602 ;demo.c:262: puts("loading rawfile: ");
   08B2 21r84s09           2603 	ld	hl,#__str_4
   08B5 E5                 2604 	push	hl
   08B6 CDr00s00           2605 	call	_puts
   08B9 F1                 2606 	pop	af
                           2607 ;demo.c:263: puts(file_name);
   08BA DD 6E 04           2608 	ld	l,4 (ix)
   08BD DD 66 05           2609 	ld	h,5 (ix)
   08C0 E5                 2610 	push	hl
   08C1 CDr00s00           2611 	call	_puts
   08C4 F1                 2612 	pop	af
                           2613 ;demo.c:264: puts("\r\n");
   08C5 21r96s09           2614 	ld	hl,#__str_5
   08C8 E5                 2615 	push	hl
   08C9 CDr00s00           2616 	call	_puts
   08CC F1                 2617 	pop	af
   08CD                    2618 00102$:
                           2619 ;demo.c:267: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2620 	ld	hl,#0x0000
   08D0 39                 2621 	add	hl,sp
   08D1 4D                 2622 	ld	c,l
   08D2 44                 2623 	ld	b,h
   08D3 21 2E 00           2624 	ld	hl,#0x002E
   08D6 E5                 2625 	push	hl
   08D7 3E 00              2626 	ld	a,#0x00
   08D9 F5                 2627 	push	af
   08DA 33                 2628 	inc	sp
   08DB C5                 2629 	push	bc
   08DC CDr00s00           2630 	call	_memset
   08DF F1                 2631 	pop	af
   08E0 F1                 2632 	pop	af
   08E1 33                 2633 	inc	sp
                           2634 ;demo.c:268: scratch_clear();
   08E2 CDr90s07           2635 	call	_scratch_clear
                           2636 ;demo.c:270: f.record_size = 128;
   08E5 21 00 00           2637 	ld	hl,#0x0000
   08E8 39                 2638 	add	hl,sp
   08E9 4D                 2639 	ld	c,l
   08EA 44                 2640 	ld	b,h
   08EB 21 0F 00           2641 	ld	hl,#0x000F
   08EE 09                 2642 	add	hl,bc
   08EF EB                 2643 	ex	de,hl
   08F0 3E 80              2644 	ld	a,#0x80
   08F2 12                 2645 	ld	(de),a
                           2646 ;demo.c:271: f.drive = 0;
   08F3 3E 00              2647 	ld	a,#0x00
   08F5 02                 2648 	ld	(bc),a
                           2649 ;demo.c:273: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2650 	ld	e,4 (ix)
   08F9 DD 56 05           2651 	ld	d,5 (ix)
   08FC 03                 2652 	inc	bc
   08FD 21 0B 00           2653 	ld	hl,#0x000B
   0900 E5                 2654 	push	hl
   0901 D5                 2655 	push	de
   0902 C5                 2656 	push	bc
   0903 CDr00s00           2657 	call	_memcpy
   0906 F1                 2658 	pop	af
   0907 F1                 2659 	pop	af
   0908 F1                 2660 	pop	af
                           2661 ;demo.c:275: if (open(&f) != 0) return 0;
   0909 21 00 00           2662 	ld	hl,#0x0000
   090C 39                 2663 	add	hl,sp
   090D E5                 2664 	push	hl
   090E CDr00s00           2665 	call	_open
   0911 F1                 2666 	pop	af
   0912 AF                 2667 	xor	a,a
   0913 B5                 2668 	or	a,l
   0914 28 05              2669 	jr	Z,00119$
   0916 2E 00              2670 	ld	l,#0x00
   0918 C3r7Fs09           2671 	jp	00112$
                           2672 ;demo.c:277: while(total < size) {
   091B                    2673 00119$:
   091B 01 00 00           2674 	ld	bc,#0x0000
   091E                    2675 00109$:
   091E 79                 2676 	ld	a,c
   091F DD 96 06           2677 	sub	a,6 (ix)
   0922 78                 2678 	ld	a,b
   0923 DD 9E 07           2679 	sbc	a,7 (ix)
   0926 F2r74s09           2680 	jp	P,00111$
                           2681 ;demo.c:278: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2682 	push	bc
   092A 21r00s8E           2683 	ld	hl,#_scratch
   092D E5                 2684 	push	hl
   092E CDr00s00           2685 	call	_block_set_data_ptr
   0931 F1                 2686 	pop	af
   0932 5D                 2687 	ld	e,l
   0933 C1                 2688 	pop	bc
   0934 AF                 2689 	xor	a,a
   0935 B3                 2690 	or	a,e
   0936 28 04              2691 	jr	Z,00106$
   0938 2E 00              2692 	ld	l,#0x00
   093A 18 43              2693 	jr	00112$
   093C                    2694 00106$:
                           2695 ;demo.c:279: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2696 	ld	hl,#0x0000
   093F 39                 2697 	add	hl,sp
   0940 C5                 2698 	push	bc
   0941 E5                 2699 	push	hl
   0942 CDr00s00           2700 	call	_block_read
   0945 F1                 2701 	pop	af
   0946 5D                 2702 	ld	e,l
   0947 C1                 2703 	pop	bc
   0948 AF                 2704 	xor	a,a
   0949 B3                 2705 	or	a,e
   094A 28 04              2706 	jr	Z,00108$
   094C 2E 00              2707 	ld	l,#0x00
   094E 18 2F              2708 	jr	00112$
   0950                    2709 00108$:
                           2710 ;demo.c:281: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2711 	ld	a,8 (ix)
   0953 81                 2712 	add	a,c
   0954 5F                 2713 	ld	e,a
   0955 DD 7E 09           2714 	ld	a,9 (ix)
   0958 88                 2715 	adc	a,b
   0959 57                 2716 	ld	d,a
   095A C5                 2717 	push	bc
   095B 21 80 00           2718 	ld	hl,#0x0080
   095E E5                 2719 	push	hl
   095F 21r00s8E           2720 	ld	hl,#_scratch
   0962 E5                 2721 	push	hl
   0963 D5                 2722 	push	de
   0964 CDr00s00           2723 	call	_memcpy
   0967 F1                 2724 	pop	af
   0968 F1                 2725 	pop	af
   0969 F1                 2726 	pop	af
   096A C1                 2727 	pop	bc
                           2728 ;demo.c:283: total+=incr;
   096B 21 80 00           2729 	ld	hl,#0x0080
   096E 09                 2730 	add	hl,bc
   096F 4D                 2731 	ld	c,l
   0970 44                 2732 	ld	b,h
   0971 C3r1Es09           2733 	jp	00109$
   0974                    2734 00111$:
                           2735 ;demo.c:286: close(&f);
   0974 21 00 00           2736 	ld	hl,#0x0000
   0977 39                 2737 	add	hl,sp
   0978 E5                 2738 	push	hl
   0979 CDr00s00           2739 	call	_close
   097C F1                 2740 	pop	af
                           2741 ;demo.c:288: return 1;
   097D 2E 01              2742 	ld	l,#0x01
   097F                    2743 00112$:
   097F DD F9              2744 	ld	sp,ix
   0981 DD E1              2745 	pop	ix
   0983 C9                 2746 	ret
   0984                    2747 _raw_load_end::
   0984                    2748 __str_4:
   0984 6C 6F 61 64 69 6E  2749 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2750 	.db 0x00
   0996                    2751 __str_5:
   0996 0D                 2752 	.db 0x0D
   0997 0A                 2753 	.db 0x0A
   0998 00                 2754 	.db 0x00
                           2755 ;demo.c:291: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2756 ;	---------------------------------
                           2757 ; Function pck_load
                           2758 ; ---------------------------------
   0999                    2759 _pck_load_start::
   0999                    2760 _pck_load:
   0999 DD E5              2761 	push	ix
   099B DD 21 00 00        2762 	ld	ix,#0
   099F DD 39              2763 	add	ix,sp
                           2764 ;demo.c:292: if(debugprint == 1) {
   09A1 DD 7E 0C           2765 	ld	a,12 (ix)
   09A4 D6 01              2766 	sub	a,#0x01
   09A6 20 06              2767 	jr	NZ,00106$
   09A8 DD 7E 0D           2768 	ld	a,13 (ix)
   09AB B7                 2769 	or	a,a
   09AC 28 02              2770 	jr	Z,00107$
   09AE                    2771 00106$:
   09AE 18 1B              2772 	jr	00102$
   09B0                    2773 00107$:
                           2774 ;demo.c:293: puts("loading pckfile: ");
   09B0 21r12s0A           2775 	ld	hl,#__str_6
   09B3 E5                 2776 	push	hl
   09B4 CDr00s00           2777 	call	_puts
   09B7 F1                 2778 	pop	af
                           2779 ;demo.c:294: puts(file_name);
   09B8 DD 6E 04           2780 	ld	l,4 (ix)
   09BB DD 66 05           2781 	ld	h,5 (ix)
   09BE E5                 2782 	push	hl
   09BF CDr00s00           2783 	call	_puts
   09C2 F1                 2784 	pop	af
                           2785 ;demo.c:295: puts("\r\n");
   09C3 21r24s0A           2786 	ld	hl,#__str_7
   09C6 E5                 2787 	push	hl
   09C7 CDr00s00           2788 	call	_puts
   09CA F1                 2789 	pop	af
   09CB                    2790 00102$:
                           2791 ;demo.c:297: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2792 	ld	c,6 (ix)
   09CE DD 46 07           2793 	ld	b,7 (ix)
   09D1 C5                 2794 	push	bc
   09D2 C5                 2795 	push	bc
   09D3 3E 00              2796 	ld	a,#0x00
   09D5 F5                 2797 	push	af
   09D6 33                 2798 	inc	sp
   09D7 21r60s01           2799 	ld	hl,#_packbuffer
   09DA E5                 2800 	push	hl
   09DB CDr00s00           2801 	call	_memset
   09DE F1                 2802 	pop	af
   09DF F1                 2803 	pop	af
   09E0 33                 2804 	inc	sp
   09E1 C1                 2805 	pop	bc
                           2806 ;demo.c:298: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2807 	ld	hl,#0x0000
   09E5 E5                 2808 	push	hl
   09E6 21r60s01           2809 	ld	hl,#_packbuffer
   09E9 E5                 2810 	push	hl
   09EA C5                 2811 	push	bc
   09EB DD 6E 04           2812 	ld	l,4 (ix)
   09EE DD 66 05           2813 	ld	h,5 (ix)
   09F1 E5                 2814 	push	hl
   09F2 CDr96s08           2815 	call	_raw_load
   09F5 F1                 2816 	pop	af
   09F6 F1                 2817 	pop	af
   09F7 F1                 2818 	pop	af
   09F8 F1                 2819 	pop	af
                           2820 ;demo.c:299: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2821 	ld	a,10 (ix)
   09FC F5                 2822 	push	af
   09FD 33                 2823 	inc	sp
   09FE DD 6E 08           2824 	ld	l,8 (ix)
   0A01 DD 66 09           2825 	ld	h,9 (ix)
   0A04 E5                 2826 	push	hl
   0A05 21r60s01           2827 	ld	hl,#_packbuffer
   0A08 E5                 2828 	push	hl
   0A09 CDr00s00           2829 	call	_bitbuster
   0A0C F1                 2830 	pop	af
   0A0D F1                 2831 	pop	af
   0A0E 33                 2832 	inc	sp
   0A0F DD E1              2833 	pop	ix
   0A11 C9                 2834 	ret
   0A12                    2835 _pck_load_end::
   0A12                    2836 __str_6:
   0A12 6C 6F 61 64 69 6E  2837 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2838 	.db 0x00
   0A24                    2839 __str_7:
   0A24 0D                 2840 	.db 0x0D
   0A25 0A                 2841 	.db 0x0A
   0A26 00                 2842 	.db 0x00
                           2843 ;demo.c:302: void fadein() {
                           2844 ;	---------------------------------
                           2845 ; Function fadein
                           2846 ; ---------------------------------
   0A27                    2847 _fadein_start::
   0A27                    2848 _fadein:
   0A27 DD E5              2849 	push	ix
   0A29 DD 21 00 00        2850 	ld	ix,#0
   0A2D DD 39              2851 	add	ix,sp
   0A2F F5                 2852 	push	af
                           2853 ;demo.c:305: if (tick < 4) return;
   0A30 3Ar22s8F           2854 	ld	a,(#_tick+0)
   0A33 D6 04              2855 	sub	a,#0x04
   0A35 3Ar23s8F           2856 	ld	a,(#_tick+1)
   0A38 DE 00              2857 	sbc	a,#0x00
   0A3A F2r40s0A           2858 	jp	P,00102$
   0A3D C3rEEs0A           2859 	jp	00113$
   0A40                    2860 00102$:
                           2861 ;demo.c:307: tick = 0;
   0A40 21r22s8F           2862 	ld	hl,#_tick + 0
   0A43 36 00              2863 	ld	(hl), #0x00
   0A45 21r23s8F           2864 	ld	hl,#_tick + 1
   0A48 36 00              2865 	ld	(hl), #0x00
                           2866 ;demo.c:309: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2867 	ld	c,#0x00
   0A4C                    2868 00109$:
   0A4C 79                 2869 	ld	a,c
   0A4D D6 20              2870 	sub	a,#0x20
   0A4F D2rE6s0A           2871 	jp	NC,00112$
                           2872 ;demo.c:310: uint8_t r = scratch[i] >> 4;
   0A52 3Er00              2873 	ld	a,#<_scratch
   0A54 81                 2874 	add	a,c
   0A55 5F                 2875 	ld	e,a
   0A56 3Es8E              2876 	ld	a,#>_scratch
   0A58 CE 00              2877 	adc	a,#0x00
   0A5A 57                 2878 	ld	d,a
   0A5B 1A                 2879 	ld	a,(de)
   0A5C 47                 2880 	ld	b,a
   0A5D 58                 2881 	ld	e,b
   0A5E CB 3B              2882 	srl	e
   0A60 CB 3B              2883 	srl	e
   0A62 CB 3B              2884 	srl	e
   0A64 CB 3B              2885 	srl	e
                           2886 ;demo.c:311: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2887 	ld	a,b
   0A67 E6 0F              2888 	and	a,#0x0F
   0A69 DD 77 FF           2889 	ld	-1 (ix),a
                           2890 ;demo.c:312: uint8_t g = scratch[i+1];
   0A6C 51                 2891 	ld	d,c
   0A6D 14                 2892 	inc	d
   0A6E 3Er00              2893 	ld	a,#<_scratch
   0A70 82                 2894 	add	a,d
   0A71 6F                 2895 	ld	l,a
   0A72 3Es8E              2896 	ld	a,#>_scratch
   0A74 CE 00              2897 	adc	a,#0x00
   0A76 67                 2898 	ld	h,a
   0A77 56                 2899 	ld	d,(hl)
   0A78 DD 72 FE           2900 	ld	-2 (ix),d
                           2901 ;demo.c:314: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3Er80              2902 	ld	a,#<_cur_palette
   0A7D 81                 2903 	add	a,c
   0A7E 6F                 2904 	ld	l,a
   0A7F 3Es8E              2905 	ld	a,#>_cur_palette
   0A81 CE 00              2906 	adc	a,#0x00
   0A83 67                 2907 	ld	h,a
   0A84 56                 2908 	ld	d,(hl)
   0A85 CB 3A              2909 	srl	d
   0A87 CB 3A              2910 	srl	d
   0A89 CB 3A              2911 	srl	d
   0A8B CB 3A              2912 	srl	d
   0A8D 7B                 2913 	ld	a,e
   0A8E 92                 2914 	sub	a,d
   0A8F 30 01              2915 	jr	NC,00104$
   0A91 1C                 2916 	inc	e
   0A92                    2917 00104$:
                           2918 ;demo.c:315: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3Er80              2919 	ld	a,#<_cur_palette
   0A94 81                 2920 	add	a,c
   0A95 6F                 2921 	ld	l,a
   0A96 3Es8E              2922 	ld	a,#>_cur_palette
   0A98 CE 00              2923 	adc	a,#0x00
   0A9A 67                 2924 	ld	h,a
   0A9B 7E                 2925 	ld	a,(hl)
   0A9C E6 0F              2926 	and	a,#0x0F
   0A9E 47                 2927 	ld	b,a
   0A9F DD 7E FF           2928 	ld	a,-1 (ix)
   0AA2 90                 2929 	sub	a,b
   0AA3 30 03              2930 	jr	NC,00106$
   0AA5 DD 34 FF           2931 	inc	-1 (ix)
   0AA8                    2932 00106$:
                           2933 ;demo.c:317: scratch[i] = (r << 4) | b;
   0AA8 3Er00              2934 	ld	a,#<_scratch
   0AAA 81                 2935 	add	a,c
   0AAB 47                 2936 	ld	b,a
   0AAC 3Es8E              2937 	ld	a,#>_scratch
   0AAE CE 00              2938 	adc	a,#0x00
   0AB0 57                 2939 	ld	d,a
   0AB1 7B                 2940 	ld	a,e
   0AB2 07                 2941 	rlca
   0AB3 07                 2942 	rlca
   0AB4 07                 2943 	rlca
   0AB5 07                 2944 	rlca
   0AB6 E6 F0              2945 	and	a,#0xF0
   0AB8 DD B6 FF           2946 	or	a,-1 (ix)
   0ABB 68                 2947 	ld	l,b
   0ABC 62                 2948 	ld	h,d
   0ABD 77                 2949 	ld	(hl),a
                           2950 ;demo.c:318: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2951 	ld	b,c
   0ABF 04                 2952 	inc	b
   0AC0 3Er80              2953 	ld	a,#<_cur_palette
   0AC2 80                 2954 	add	a,b
   0AC3 5F                 2955 	ld	e,a
   0AC4 3Es8E              2956 	ld	a,#>_cur_palette
   0AC6 CE 00              2957 	adc	a,#0x00
   0AC8 57                 2958 	ld	d,a
   0AC9 1A                 2959 	ld	a,(de)
   0ACA 5F                 2960 	ld	e,a
   0ACB DD 7E FE           2961 	ld	a,-2 (ix)
   0ACE 93                 2962 	sub	a,e
   0ACF 30 10              2963 	jr	NC,00111$
   0AD1 3Er00              2964 	ld	a,#<_scratch
   0AD3 80                 2965 	add	a,b
   0AD4 47                 2966 	ld	b,a
   0AD5 3Es8E              2967 	ld	a,#>_scratch
   0AD7 CE 00              2968 	adc	a,#0x00
   0AD9 5F                 2969 	ld	e,a
   0ADA 68                 2970 	ld	l,b
   0ADB 67                 2971 	ld	h,a
   0ADC 7E                 2972 	ld	a,(hl)
   0ADD 3C                 2973 	inc	a
   0ADE 68                 2974 	ld	l,b
   0ADF 63                 2975 	ld	h,e
   0AE0 77                 2976 	ld	(hl),a
   0AE1                    2977 00111$:
                           2978 ;demo.c:309: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2979 	inc	c
   0AE2 0C                 2980 	inc	c
   0AE3 C3r4Cs0A           2981 	jp	00109$
   0AE6                    2982 00112$:
                           2983 ;demo.c:322: vdp_load_palette(scratch);
   0AE6 21r00s8E           2984 	ld	hl,#_scratch
   0AE9 E5                 2985 	push	hl
   0AEA CDr00s00           2986 	call	_vdp_load_palette
   0AED F1                 2987 	pop	af
   0AEE                    2988 00113$:
   0AEE DD F9              2989 	ld	sp,ix
   0AF0 DD E1              2990 	pop	ix
   0AF2 C9                 2991 	ret
   0AF3                    2992 _fadein_end::
                           2993 ;demo.c:334: void do_ymmm() {
                           2994 ;	---------------------------------
                           2995 ; Function do_ymmm
                           2996 ; ---------------------------------
   0AF3                    2997 _do_ymmm_start::
   0AF3                    2998 _do_ymmm:
   0AF3 DD E5              2999 	push	ix
   0AF5 DD 21 00 00        3000 	ld	ix,#0
   0AF9 DD 39              3001 	add	ix,sp
   0AFB F5                 3002 	push	af
                           3003 ;demo.c:338: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              3004 	ld	a,#0x20
   0AFE FD 21r22s8F        3005 	ld	iy,#_tick
   0B02 FD 96 00           3006 	sub	a,0 (iy)
   0B05 3E 00              3007 	ld	a,#0x00
   0B07 FD 21r22s8F        3008 	ld	iy,#_tick
   0B0B FD 9E 01           3009 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           3010 	jp	P,00102$
   0B11 21r22s8F           3011 	ld	hl,#_tick + 0
   0B14 36 00              3012 	ld	(hl), #0x00
   0B16 21r23s8F           3013 	ld	hl,#_tick + 1
   0B19 36 00              3014 	ld	(hl), #0x00
   0B1B FD 21r3Ds8F        3015 	ld	iy,#_flipper
   0B1F FD 34 00           3016 	inc	0 (iy)
   0B22 20 07              3017 	jr	NZ,00115$
   0B24 FD 21r3Ds8F        3018 	ld	iy,#_flipper
   0B28 FD 34 01           3019 	inc	1 (iy)
   0B2B                    3020 00115$:
   0B2B                    3021 00102$:
                           3022 ;demo.c:339: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              3023 	ld	a,#0x0A
   0B2D FD 21r3Ds8F        3024 	ld	iy,#_flipper
   0B31 FD 96 00           3025 	sub	a,0 (iy)
   0B34 3E 00              3026 	ld	a,#0x00
   0B36 FD 21r3Ds8F        3027 	ld	iy,#_flipper
   0B3A FD 9E 01           3028 	sbc	a,1 (iy)
   0B3D F2r4As0B           3029 	jp	P,00104$
   0B40 21r3Ds8F           3030 	ld	hl,#_flipper + 0
   0B43 36 00              3031 	ld	(hl), #0x00
   0B45 21r3Es8F           3032 	ld	hl,#_flipper + 1
   0B48 36 00              3033 	ld	(hl), #0x00
   0B4A                    3034 00104$:
                           3035 ;demo.c:341: ymmmf++;
   0B4A FD 21r3Fs8F        3036 	ld	iy,#_ymmmf
   0B4E FD 34 00           3037 	inc	0 (iy)
   0B51 20 07              3038 	jr	NZ,00116$
   0B53 FD 21r3Fs8F        3039 	ld	iy,#_ymmmf
   0B57 FD 34 01           3040 	inc	1 (iy)
   0B5A                    3041 00116$:
                           3042 ;demo.c:342: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r3Bs8F           3043 	ld	hl,#_yofff + 0
   0B5D 36 00              3044 	ld	(hl), #0x00
   0B5F                    3045 00105$:
   0B5F 21r3Bs8F           3046 	ld	hl,#_yofff + 0
   0B62 4E                 3047 	ld	c,(hl)
   0B63 06 00              3048 	ld	b,#0x00
   0B65 79                 3049 	ld	a,c
   0B66 D6 D2              3050 	sub	a,#0xD2
   0B68 78                 3051 	ld	a,b
   0B69 DE 00              3052 	sbc	a,#0x00
   0B6B F2rE4s0B           3053 	jp	P,00109$
                           3054 ;demo.c:343: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r3Fs8F           3055 	ld	hl,#_ymmmf
   0B71 79                 3056 	ld	a,c
   0B72 86                 3057 	add	a,(hl)
   0B73 5F                 3058 	ld	e,a
   0B74 78                 3059 	ld	a,b
   0B75 23                 3060 	inc	hl
   0B76 8E                 3061 	adc	a,(hl)
   0B77 16 00              3062 	ld	d,#0x00
   0B79 CB 23              3063 	sla	e
   0B7B CB 12              3064 	rl	d
   0B7D 21r2Cs00           3065 	ld	hl,#_sintabx
   0B80 19                 3066 	add	hl,de
   0B81 5E                 3067 	ld	e,(hl)
   0B82 23                 3068 	inc	hl
   0B83 56                 3069 	ld	d,(hl)
   0B84 DD 73 FE           3070 	ld	-2 (ix),e
   0B87 DD 72 FF           3071 	ld	-1 (ix),d
                           3072 ;demo.c:346: cmd.source_x = 0;
   0B8A 21r24s8F           3073 	ld	hl,#_cmd
   0B8D 36 00              3074 	ld	(hl),#0x00
   0B8F 23                 3075 	inc	hl
   0B90 36 00              3076 	ld	(hl),#0x00
                           3077 ;demo.c:347: cmd.source_y = 0+yofff;
   0B92 11r26s8F           3078 	ld	de,#_cmd + 2
   0B95 EB                 3079 	ex	de,hl
   0B96 71                 3080 	ld	(hl),c
   0B97 23                 3081 	inc	hl
   0B98 70                 3082 	ld	(hl),b
                           3083 ;demo.c:348: cmd.dest_x = xo;
   0B99 11r28s8F           3084 	ld	de,#_cmd + 4
   0B9C EB                 3085 	ex	de,hl
   0B9D DD 7E FE           3086 	ld	a,-2 (ix)
   0BA0 77                 3087 	ld	(hl),a
   0BA1 23                 3088 	inc	hl
   0BA2 DD 7E FF           3089 	ld	a,-1 (ix)
   0BA5 77                 3090 	ld	(hl),a
                           3091 ;demo.c:349: cmd.dest_y = 3+yofff;
   0BA6 11r2As8F           3092 	ld	de,#_cmd + 6
   0BA9 03                 3093 	inc	bc
   0BAA 03                 3094 	inc	bc
   0BAB 03                 3095 	inc	bc
   0BAC 6B                 3096 	ld	l,e
   0BAD 62                 3097 	ld	h,d
   0BAE 71                 3098 	ld	(hl),c
   0BAF 23                 3099 	inc	hl
   0BB0 70                 3100 	ld	(hl),b
                           3101 ;demo.c:350: cmd.size_x = 256;
   0BB1 21r2Cs8F           3102 	ld	hl, #_cmd + 8
   0BB4 36 00              3103 	ld	(hl),#0x00
   0BB6 23                 3104 	inc	hl
   0BB7 36 01              3105 	ld	(hl),#0x01
                           3106 ;demo.c:351: cmd.size_y = 1;
   0BB9 21r2Es8F           3107 	ld	hl, #_cmd + 10
   0BBC 36 01              3108 	ld	(hl),#0x01
   0BBE 23                 3109 	inc	hl
   0BBF 36 00              3110 	ld	(hl),#0x00
                           3111 ;demo.c:352: cmd.data = 0;
                           3112 ;demo.c:353: cmd.argument = 0;
   0BC1 3E 00              3113 	ld	a,#0x00
   0BC3 32r30s8F           3114 	ld	(#_cmd + 12),a
   0BC6 32r31s8F           3115 	ld	(#_cmd + 13),a
                           3116 ;demo.c:354: cmd.command = 0xD0;
   0BC9 3E D0              3117 	ld	a,#0xD0
   0BCB 32r32s8F           3118 	ld	(#_cmd + 14),a
                           3119 ;demo.c:357: vdp_copier(&cmd);
   0BCE 21r24s8F           3120 	ld	hl,#_cmd
   0BD1 E5                 3121 	push	hl
   0BD2 CDr00s00           3122 	call	_vdp_copier
   0BD5 F1                 3123 	pop	af
                           3124 ;demo.c:342: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r3Bs8F           3125 	ld	hl,#_yofff + 0
   0BD9 4E                 3126 	ld	c,(hl)
   0BDA 21r3Bs8F           3127 	ld	hl,#_yofff
   0BDD 79                 3128 	ld	a,c
   0BDE C6 02              3129 	add	a,#0x02
   0BE0 77                 3130 	ld	(hl),a
   0BE1 C3r5Fs0B           3131 	jp	00105$
   0BE4                    3132 00109$:
   0BE4 DD F9              3133 	ld	sp,ix
   0BE6 DD E1              3134 	pop	ix
   0BE8 C9                 3135 	ret
   0BE9                    3136 _do_ymmm_end::
                           3137 ;demo.c:374: void do_blocks() {
                           3138 ;	---------------------------------
                           3139 ; Function do_blocks
                           3140 ; ---------------------------------
   0BE9                    3141 _do_blocks_start::
   0BE9                    3142 _do_blocks:
   0BE9 DD E5              3143 	push	ix
   0BEB DD 21 00 00        3144 	ld	ix,#0
   0BEF DD 39              3145 	add	ix,sp
   0BF1 21 FA FF           3146 	ld	hl,#-6
   0BF4 39                 3147 	add	hl,sp
   0BF5 F9                 3148 	ld	sp,hl
                           3149 ;demo.c:376: int ys = 0;
   0BF6 DD 36 FC 00        3150 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3151 	ld	-3 (ix),#0x00
                           3152 ;demo.c:377: int ye = 0;
   0BFE DD 36 FA 00        3153 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3154 	ld	-5 (ix),#0x00
                           3155 ;demo.c:379: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3156 	ld	hl,#0x0017
   0C09 E5                 3157 	push	hl
   0C0A CDr00s00           3158 	call	_vdp_register
   0C0D F1                 3159 	pop	af
                           3160 ;demo.c:381: if (block_init == 0) {
   0C0E AF                 3161 	xor	a,a
   0C0F FD 21r41s8F        3162 	ld	iy,#_block_init
   0C13 FD B6 00           3163 	or	a,0 (iy)
   0C16 C2r7Es0C           3164 	jp	NZ,00108$
                           3165 ;demo.c:383: vdp_set_screen5();
   0C19 CDr00s00           3166 	call	_vdp_set_screen5
                           3167 ;demo.c:385: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3168 	ld	hl,#0x5F02
   0C1F E5                 3169 	push	hl
   0C20 CDr00s00           3170 	call	_vdp_register
   0C23 F1                 3171 	pop	af
                           3172 ;demo.c:387: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3173 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3174 	ld	-1 (ix),#0x00
   0C2C                    3175 00110$:
   0C2C DD 7E FE           3176 	ld	a,-2 (ix)
   0C2F D6 10              3177 	sub	a,#0x10
   0C31 DD 7E FF           3178 	ld	a,-1 (ix)
   0C34 DE 00              3179 	sbc	a,#0x00
   0C36 F2r6Es0C           3180 	jp	P,00113$
   0C39 DD 4E FE           3181 	ld	c,-2 (ix)
   0C3C DD 46 FF           3182 	ld	b,-1 (ix)
   0C3F CB 21              3183 	sla	c
   0C41 CB 10              3184 	rl	b
   0C43 21r4As8F           3185 	ld	hl,#_btab
   0C46 09                 3186 	add	hl,bc
   0C47 4D                 3187 	ld	c,l
   0C48 44                 3188 	ld	b,h
   0C49 DD 5E FE           3189 	ld	e,-2 (ix)
   0C4C DD 56 FF           3190 	ld	d,-1 (ix)
   0C4F CB 23              3191 	sla	e
   0C51 CB 12              3192 	rl	d
   0C53 CB 23              3193 	sla	e
   0C55 CB 12              3194 	rl	d
   0C57 CB 23              3195 	sla	e
   0C59 CB 12              3196 	rl	d
   0C5B CB 23              3197 	sla	e
   0C5D CB 12              3198 	rl	d
   0C5F 69                 3199 	ld	l,c
   0C60 60                 3200 	ld	h,b
   0C61 73                 3201 	ld	(hl),e
   0C62 23                 3202 	inc	hl
   0C63 72                 3203 	ld	(hl),d
   0C64 DD 34 FE           3204 	inc	-2 (ix)
   0C67 20 03              3205 	jr	NZ,00139$
   0C69 DD 34 FF           3206 	inc	-1 (ix)
   0C6C                    3207 00139$:
   0C6C 18 BE              3208 	jr	00110$
   0C6E                    3209 00113$:
                           3210 ;demo.c:388: vdp_load_palette(block_palette);
   0C6E 21rA0s8E           3211 	ld	hl,#_block_palette
   0C71 E5                 3212 	push	hl
   0C72 CDr00s00           3213 	call	_vdp_load_palette
   0C75 F1                 3214 	pop	af
                           3215 ;demo.c:390: block_init = 1;
   0C76 21r41s8F           3216 	ld	hl,#_block_init + 0
   0C79 36 01              3217 	ld	(hl), #0x01
   0C7B C3r07s0E           3218 	jp	00122$
   0C7E                    3219 00108$:
                           3220 ;demo.c:394: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3Ar6As8F           3221 	ld	a,(#_flof+0)
   0C81 FD 21r6As8F        3222 	ld	iy,#_flof
   0C85 FD B6 01           3223 	or	a,1 (iy)
   0C88 20 10              3224 	jr	NZ,00102$
   0C8A DD 36 FC 00        3225 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3226 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3227 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3228 	ld	-5 (ix),#0x00
   0C9A                    3229 00102$:
                           3230 ;demo.c:395: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3Ar6As8F           3231 	ld	a,(#_flof+0)
   0C9D D6 01              3232 	sub	a,#0x01
   0C9F 20 06              3233 	jr	NZ,00140$
   0CA1 3Ar6Bs8F           3234 	ld	a,(#_flof+1)
   0CA4 B7                 3235 	or	a,a
   0CA5 28 02              3236 	jr	Z,00141$
   0CA7                    3237 00140$:
   0CA7 18 10              3238 	jr	00104$
   0CA9                    3239 00141$:
   0CA9 DD 36 FC 08        3240 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3241 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3242 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3243 	ld	-5 (ix),#0x00
   0CB9                    3244 00104$:
                           3245 ;demo.c:397: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r48s8F        3246 	ld	iy,#_bty
   0CBD FD 36 00 03        3247 	ld	0 (iy),#0x03
   0CC1 FD 21r48s8F        3248 	ld	iy,#_bty
   0CC5 FD 36 01 00        3249 	ld	1 (iy),#0x00
   0CC9                    3250 00118$:
   0CC9 3Ar48s8F           3251 	ld	a,(#_bty+0)
   0CCC D6 0B              3252 	sub	a,#0x0B
   0CCE 3Ar49s8F           3253 	ld	a,(#_bty+1)
   0CD1 DE 00              3254 	sbc	a,#0x00
   0CD3 F2rDEs0D           3255 	jp	P,00121$
                           3256 ;demo.c:398: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3257 	ld	a,-4 (ix)
   0CD9 FD 21r46s8F        3258 	ld	iy,#_btx
   0CDD FD 77 00           3259 	ld	0 (iy),a
   0CE0 DD 7E FD           3260 	ld	a,-3 (ix)
   0CE3 FD 21r46s8F        3261 	ld	iy,#_btx
   0CE7 FD 77 01           3262 	ld	1 (iy),a
   0CEA                    3263 00114$:
   0CEA 3Ar46s8F           3264 	ld	a,(#_btx+0)
   0CED DD 96 FA           3265 	sub	a,-6 (ix)
   0CF0 3Ar47s8F           3266 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3267 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3268 	jp	P,00120$
                           3269 ;demo.c:399: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3270 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3271 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3272 	and	a,0 (iy)
   0D03 21r00s00           3273 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3274 	or	a,(hl)
   0D07 4F                 3275 	ld	c,a
   0D08 CB 39              3276 	srl	c
   0D0A 21r42s8F           3277 	ld	hl,#_bsx + 0
   0D0D 71                 3278 	ld	(hl), c
   0D0E 21r43s8F           3279 	ld	hl,#_bsx + 1
   0D11 36 00              3280 	ld	(hl), #0x00
                           3281 ;demo.c:400: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3282 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r44s8F           3283 	ld	hl,#_bsy + 0
   0D19 77                 3284 	ld	(hl), a
   0D1A 21r45s8F           3285 	ld	hl,#_bsy + 1
   0D1D 36 00              3286 	ld	(hl), #0x00
                           3287 ;demo.c:401: cmd.source_x = btab[bsx];
   0D1F 21r42s8F           3288 	ld	hl,#_bsx + 0
   0D22 4E                 3289 	ld	c,(hl)
   0D23 21r43s8F           3290 	ld	hl,#_bsx + 1
   0D26 46                 3291 	ld	b,(hl)
   0D27 CB 21              3292 	sla	c
   0D29 CB 10              3293 	rl	b
   0D2B 21r4As8F           3294 	ld	hl,#_btab
   0D2E 09                 3295 	add	hl,bc
   0D2F 4E                 3296 	ld	c,(hl)
   0D30 23                 3297 	inc	hl
   0D31 46                 3298 	ld	b,(hl)
   0D32 21r24s8F           3299 	ld	hl,#_cmd
   0D35 71                 3300 	ld	(hl),c
   0D36 23                 3301 	inc	hl
   0D37 70                 3302 	ld	(hl),b
                           3303 ;demo.c:402: cmd.source_y = 768+btab[bsy];
   0D38 01r26s8F           3304 	ld	bc,#_cmd + 2
   0D3B 21r44s8F           3305 	ld	hl,#_bsy + 0
   0D3E 5E                 3306 	ld	e,(hl)
   0D3F 21r45s8F           3307 	ld	hl,#_bsy + 1
   0D42 56                 3308 	ld	d,(hl)
   0D43 CB 23              3309 	sla	e
   0D45 CB 12              3310 	rl	d
   0D47 21r4As8F           3311 	ld	hl,#_btab
   0D4A 19                 3312 	add	hl,de
   0D4B 5E                 3313 	ld	e,(hl)
   0D4C 23                 3314 	inc	hl
   0D4D 56                 3315 	ld	d,(hl)
   0D4E 21 00 03           3316 	ld	hl,#0x0300
   0D51 19                 3317 	add	hl,de
   0D52 EB                 3318 	ex	de,hl
   0D53 69                 3319 	ld	l,c
   0D54 60                 3320 	ld	h,b
   0D55 73                 3321 	ld	(hl),e
   0D56 23                 3322 	inc	hl
   0D57 72                 3323 	ld	(hl),d
                           3324 ;demo.c:403: cmd.dest_x = btab[btx];
   0D58 01r28s8F           3325 	ld	bc,#_cmd + 4
   0D5B 21r46s8F           3326 	ld	hl,#_btx + 0
   0D5E 5E                 3327 	ld	e,(hl)
   0D5F 21r47s8F           3328 	ld	hl,#_btx + 1
   0D62 56                 3329 	ld	d,(hl)
   0D63 CB 23              3330 	sla	e
   0D65 CB 12              3331 	rl	d
   0D67 21r4As8F           3332 	ld	hl,#_btab
   0D6A 19                 3333 	add	hl,de
   0D6B 5E                 3334 	ld	e,(hl)
   0D6C 23                 3335 	inc	hl
   0D6D 56                 3336 	ld	d,(hl)
   0D6E 69                 3337 	ld	l,c
   0D6F 60                 3338 	ld	h,b
   0D70 73                 3339 	ld	(hl),e
   0D71 23                 3340 	inc	hl
   0D72 72                 3341 	ld	(hl),d
                           3342 ;demo.c:404: cmd.dest_y = 512+btab[bty];
   0D73 01r2As8F           3343 	ld	bc,#_cmd + 6
   0D76 21r48s8F           3344 	ld	hl,#_bty + 0
   0D79 5E                 3345 	ld	e,(hl)
   0D7A 21r49s8F           3346 	ld	hl,#_bty + 1
   0D7D 56                 3347 	ld	d,(hl)
   0D7E CB 23              3348 	sla	e
   0D80 CB 12              3349 	rl	d
   0D82 21r4As8F           3350 	ld	hl,#_btab
   0D85 19                 3351 	add	hl,de
   0D86 5E                 3352 	ld	e,(hl)
   0D87 23                 3353 	inc	hl
   0D88 56                 3354 	ld	d,(hl)
   0D89 21 00 02           3355 	ld	hl,#0x0200
   0D8C 19                 3356 	add	hl,de
   0D8D EB                 3357 	ex	de,hl
   0D8E 69                 3358 	ld	l,c
   0D8F 60                 3359 	ld	h,b
   0D90 73                 3360 	ld	(hl),e
   0D91 23                 3361 	inc	hl
   0D92 72                 3362 	ld	(hl),d
                           3363 ;demo.c:405: cmd.size_x = 16;
   0D93 21r2Cs8F           3364 	ld	hl, #_cmd + 8
   0D96 36 10              3365 	ld	(hl),#0x10
   0D98 23                 3366 	inc	hl
   0D99 36 00              3367 	ld	(hl),#0x00
                           3368 ;demo.c:406: cmd.size_y = 16;
   0D9B 21r2Es8F           3369 	ld	hl, #_cmd + 10
   0D9E 36 10              3370 	ld	(hl),#0x10
   0DA0 23                 3371 	inc	hl
   0DA1 36 00              3372 	ld	(hl),#0x00
                           3373 ;demo.c:407: cmd.data = 0;
                           3374 ;demo.c:408: cmd.argument = 0x00;
   0DA3 3E 00              3375 	ld	a,#0x00
   0DA5 32r30s8F           3376 	ld	(#_cmd + 12),a
   0DA8 32r31s8F           3377 	ld	(#_cmd + 13),a
                           3378 ;demo.c:409: cmd.command = 0xD0;
   0DAB 3E D0              3379 	ld	a,#0xD0
   0DAD 32r32s8F           3380 	ld	(#_cmd + 14),a
                           3381 ;demo.c:410: vdp_copier(&cmd);
   0DB0 21r24s8F           3382 	ld	hl,#_cmd
   0DB3 E5                 3383 	push	hl
   0DB4 CDr00s00           3384 	call	_vdp_copier
   0DB7 F1                 3385 	pop	af
                           3386 ;demo.c:398: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r46s8F        3387 	ld	iy,#_btx
   0DBC FD 34 00           3388 	inc	0 (iy)
   0DBF 20 07              3389 	jr	NZ,00150$
   0DC1 FD 21r46s8F        3390 	ld	iy,#_btx
   0DC5 FD 34 01           3391 	inc	1 (iy)
   0DC8                    3392 00150$:
   0DC8 C3rEAs0C           3393 	jp	00114$
   0DCB                    3394 00120$:
                           3395 ;demo.c:397: for(bty=3;bty<11;bty++) {
   0DCB FD 21r48s8F        3396 	ld	iy,#_bty
   0DCF FD 34 00           3397 	inc	0 (iy)
   0DD2 20 07              3398 	jr	NZ,00151$
   0DD4 FD 21r48s8F        3399 	ld	iy,#_bty
   0DD8 FD 34 01           3400 	inc	1 (iy)
   0DDB                    3401 00151$:
   0DDB C3rC9s0C           3402 	jp	00118$
   0DDE                    3403 00121$:
                           3404 ;demo.c:414: flof++;
   0DDE FD 21r6As8F        3405 	ld	iy,#_flof
   0DE2 FD 34 00           3406 	inc	0 (iy)
   0DE5 20 07              3407 	jr	NZ,00152$
   0DE7 FD 21r6As8F        3408 	ld	iy,#_flof
   0DEB FD 34 01           3409 	inc	1 (iy)
   0DEE                    3410 00152$:
                           3411 ;demo.c:415: if (flof == 2) flof = 0;
   0DEE 3Ar6As8F           3412 	ld	a,(#_flof+0)
   0DF1 D6 02              3413 	sub	a,#0x02
   0DF3 20 06              3414 	jr	NZ,00153$
   0DF5 3Ar6Bs8F           3415 	ld	a,(#_flof+1)
   0DF8 B7                 3416 	or	a,a
   0DF9 28 02              3417 	jr	Z,00154$
   0DFB                    3418 00153$:
   0DFB 18 0A              3419 	jr	00122$
   0DFD                    3420 00154$:
   0DFD 21r6As8F           3421 	ld	hl,#_flof + 0
   0E00 36 00              3422 	ld	(hl), #0x00
   0E02 21r6Bs8F           3423 	ld	hl,#_flof + 1
   0E05 36 00              3424 	ld	(hl), #0x00
   0E07                    3425 00122$:
   0E07 DD F9              3426 	ld	sp,ix
   0E09 DD E1              3427 	pop	ix
   0E0B C9                 3428 	ret
   0E0C                    3429 _do_blocks_end::
                           3430 ;demo.c:423: void raster_effu() {
                           3431 ;	---------------------------------
                           3432 ; Function raster_effu
                           3433 ; ---------------------------------
   0E0C                    3434 _raster_effu_start::
   0E0C                    3435 _raster_effu:
                           3436 ;demo.c:424: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3437 	ld	hl,#0x0017
   0E0F E5                 3438 	push	hl
   0E10 CDr00s00           3439 	call	_vdp_register
   0E13 F1                 3440 	pop	af
                           3441 ;demo.c:425: waitVB();
   0E14 76                 3442 		halt 
                           3443 ;demo.c:427: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3444 	ld	hl,#0x4001
   0E18 E5                 3445 	push	hl
   0E19 CDr00s00           3446 	call	_vdp_register
                           3447 ;demo.c:429: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3448 	ld	a,#0x28
   0E1E 32r6Cs8F           3449 	ld	(#_linenum + 0),a
   0E21 F1                 3450 	pop	af
   0E22 FD 21r6Cs8F        3451 	ld	iy,#_linenum
   0E26 FD 36 01 00        3452 	ld	1 (iy),#0x00
   0E2A                    3453 00101$:
   0E2A 3Ar6Cs8F           3454 	ld	a,(#_linenum+0)
   0E2D D6 D4              3455 	sub	a,#0xD4
   0E2F 3Ar6Ds8F           3456 	ld	a,(#_linenum+1)
   0E32 DE 00              3457 	sbc	a,#0x00
   0E34 F2r65s0E           3458 	jp	P,00104$
                           3459 ;demo.c:430: vdp_register(19,linenum); // interrupt on line
   0E37 3Ar6Cs8F           3460 	ld	a,(#_linenum+0)
   0E3A F5                 3461 	push	af
   0E3B 33                 3462 	inc	sp
   0E3C 3E 13              3463 	ld	a,#0x13
   0E3E F5                 3464 	push	af
   0E3F 33                 3465 	inc	sp
   0E40 CDr00s00           3466 	call	_vdp_register
   0E43 F1                 3467 	pop	af
                           3468 ;demo.c:431: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3469 	ld	hl,#0x1600
   0E47 E5                 3470 	push	hl
   0E48 CDr00s00           3471 	call	_vdp_register
   0E4B F1                 3472 	pop	af
                           3473 ;demo.c:433: waitVB();
   0E4C 76                 3474 		halt 
                           3475 ;demo.c:429: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21r6Cs8F           3476 	ld	hl,#_linenum
   0E50 7E                 3477 	ld	a,(hl)
   0E51 C6 04              3478 	add	a,#0x04
   0E53 23                 3479 	inc	hl
   0E54 2B                 3480 	dec	hl
   0E55 C5                 3481 	push	bc
   0E56 4F                 3482 	ld	c, a
   0E57 23                 3483 	inc	hl
   0E58 7E                 3484 	ld	a, (hl)
   0E59 47                 3485 	ld	b, a
   0E5A 79                 3486 	ld	a, c
   0E5B 2B                 3487 	dec	hl
   0E5C 77                 3488 	ld	(hl), a
   0E5D 78                 3489 	ld	a, b
   0E5E C1                 3490 	pop	bc
   0E5F CE 00              3491 	adc	a,#0x00
   0E61 23                 3492 	inc	hl
   0E62 77                 3493 	ld	(hl),a
   0E63 18 C5              3494 	jr	00101$
   0E65                    3495 00104$:
                           3496 ;demo.c:436: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3497 	ld	hl,#0x0017
   0E68 E5                 3498 	push	hl
   0E69 CDr00s00           3499 	call	_vdp_register
   0E6C F1                 3500 	pop	af
                           3501 ;demo.c:450: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3502 	ld	hl,#0x0600
   0E70 E5                 3503 	push	hl
   0E71 CDr00s00           3504 	call	_vdp_register
   0E74 F1                 3505 	pop	af
                           3506 ;demo.c:451: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3507 	ld	hl,#0x6001
   0E78 E5                 3508 	push	hl
   0E79 CDr00s00           3509 	call	_vdp_register
   0E7C F1                 3510 	pop	af
   0E7D C9                 3511 	ret
   0E7E                    3512 _raster_effu_end::
                           3513 ;demo.c:482: void do_letter(char cc) {
                           3514 ;	---------------------------------
                           3515 ; Function do_letter
                           3516 ; ---------------------------------
   0E7E                    3517 _do_letter_start::
   0E7E                    3518 _do_letter:
   0E7E DD E5              3519 	push	ix
   0E80 DD 21 00 00        3520 	ld	ix,#0
   0E84 DD 39              3521 	add	ix,sp
   0E86 F5                 3522 	push	af
                           3523 ;demo.c:483: int cidx = cc - 65;
   0E87 DD 4E 04           3524 	ld	c,4 (ix)
   0E8A DD 7E 04           3525 	ld	a,4 (ix)
   0E8D 17                 3526 	rla	
   0E8E 9F                 3527 	sbc	a,a
   0E8F 47                 3528 	ld	b,a
   0E90 79                 3529 	ld	a,c
   0E91 C6 BF              3530 	add	a,#0xBF
   0E93 DD 77 FE           3531 	ld	-2 (ix),a
   0E96 78                 3532 	ld	a,b
   0E97 CE FF              3533 	adc	a,#0xFF
   0E99 DD 77 FF           3534 	ld	-1 (ix),a
                           3535 ;demo.c:484: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3536 	ld	a,#<_font_x
   0E9E DD 86 FE           3537 	add	a,-2 (ix)
   0EA1 5F                 3538 	ld	e,a
   0EA2 3Es0F              3539 	ld	a,#>_font_x
   0EA4 DD 8E FF           3540 	adc	a,-1 (ix)
   0EA7 57                 3541 	ld	d,a
   0EA8 1A                 3542 	ld	a,(de)
   0EA9 5F                 3543 	ld	e,a
   0EAA 16 00              3544 	ld	d,#0x00
   0EAC 21 7F 00           3545 	ld	hl,#0x007F
   0EAF 19                 3546 	add	hl,de
   0EB0 EB                 3547 	ex	de,hl
   0EB1 21r24s8F           3548 	ld	hl,#_cmd
   0EB4 73                 3549 	ld	(hl),e
   0EB5 23                 3550 	inc	hl
   0EB6 72                 3551 	ld	(hl),d
                           3552 ;demo.c:485: cmd.source_y = 512+font_y[cidx];
   0EB7 11r26s8F           3553 	ld	de,#_cmd + 2
   0EBA 3Er7C              3554 	ld	a,#<_font_y
   0EBC DD 86 FE           3555 	add	a,-2 (ix)
   0EBF 4F                 3556 	ld	c,a
   0EC0 3Es0F              3557 	ld	a,#>_font_y
   0EC2 DD 8E FF           3558 	adc	a,-1 (ix)
   0EC5 47                 3559 	ld	b,a
   0EC6 0A                 3560 	ld	a,(bc)
   0EC7 4F                 3561 	ld	c,a
   0EC8 06 00              3562 	ld	b,#0x00
   0ECA 21 00 02           3563 	ld	hl,#0x0200
   0ECD 09                 3564 	add	hl,bc
   0ECE 4D                 3565 	ld	c,l
   0ECF 44                 3566 	ld	b,h
   0ED0 EB                 3567 	ex	de,hl
   0ED1 71                 3568 	ld	(hl),c
   0ED2 23                 3569 	inc	hl
   0ED3 70                 3570 	ld	(hl),b
                           3571 ;demo.c:486: cmd.dest_x = lx;
   0ED4 01r28s8F           3572 	ld	bc,#_cmd + 4
   0ED7 21r6Es8F           3573 	ld	hl,#_lx + 0
   0EDA 5E                 3574 	ld	e,(hl)
   0EDB 16 00              3575 	ld	d,#0x00
   0EDD 69                 3576 	ld	l,c
   0EDE 60                 3577 	ld	h,b
   0EDF 73                 3578 	ld	(hl),e
   0EE0 23                 3579 	inc	hl
   0EE1 72                 3580 	ld	(hl),d
                           3581 ;demo.c:487: cmd.dest_y = ly;
   0EE2 01r2As8F           3582 	ld	bc,#_cmd + 6
   0EE5 21r6Fs8F           3583 	ld	hl,#_ly + 0
   0EE8 5E                 3584 	ld	e,(hl)
   0EE9 16 00              3585 	ld	d,#0x00
   0EEB 69                 3586 	ld	l,c
   0EEC 60                 3587 	ld	h,b
   0EED 73                 3588 	ld	(hl),e
   0EEE 23                 3589 	inc	hl
   0EEF 72                 3590 	ld	(hl),d
                           3591 ;demo.c:488: cmd.size_x = font_w[cidx];
   0EF0 01r2Cs8F           3592 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3593 	ld	a,#<_font_w
   0EF5 DD 86 FE           3594 	add	a,-2 (ix)
   0EF8 5F                 3595 	ld	e,a
   0EF9 3Es0F              3596 	ld	a,#>_font_w
   0EFB DD 8E FF           3597 	adc	a,-1 (ix)
   0EFE 57                 3598 	ld	d,a
   0EFF 1A                 3599 	ld	a,(de)
   0F00 5F                 3600 	ld	e,a
   0F01 16 00              3601 	ld	d,#0x00
   0F03 69                 3602 	ld	l,c
   0F04 60                 3603 	ld	h,b
   0F05 73                 3604 	ld	(hl),e
   0F06 23                 3605 	inc	hl
   0F07 72                 3606 	ld	(hl),d
                           3607 ;demo.c:489: cmd.size_y = 8;
   0F08 21r2Es8F           3608 	ld	hl, #_cmd + 10
   0F0B 36 08              3609 	ld	(hl),#0x08
   0F0D 23                 3610 	inc	hl
   0F0E 36 00              3611 	ld	(hl),#0x00
                           3612 ;demo.c:490: cmd.argument = 0x00;
   0F10 3E 00              3613 	ld	a,#0x00
   0F12 32r31s8F           3614 	ld	(#_cmd + 13),a
                           3615 ;demo.c:491: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3616 	ld	a,#0x90
   0F17 32r32s8F           3617 	ld	(#_cmd + 14),a
                           3618 ;demo.c:492: vdp_copier(&cmd);
   0F1A 21r24s8F           3619 	ld	hl,#_cmd
   0F1D E5                 3620 	push	hl
   0F1E CDr00s00           3621 	call	_vdp_copier
   0F21 F1                 3622 	pop	af
                           3623 ;demo.c:493: lx+=font_w[cidx]-1;
   0F22 3ErBC              3624 	ld	a,#<_font_w
   0F24 DD 86 FE           3625 	add	a,-2 (ix)
   0F27 4F                 3626 	ld	c,a
   0F28 3Es0F              3627 	ld	a,#>_font_w
   0F2A DD 8E FF           3628 	adc	a,-1 (ix)
   0F2D 47                 3629 	ld	b,a
   0F2E 0A                 3630 	ld	a,(bc)
   0F2F 4F                 3631 	ld	c,a
   0F30 0D                 3632 	dec	c
   0F31 21r6Es8F           3633 	ld	hl,#_lx
   0F34 7E                 3634 	ld	a,(hl)
   0F35 81                 3635 	add	a,c
   0F36 77                 3636 	ld	(hl),a
   0F37 DD F9              3637 	ld	sp,ix
   0F39 DD E1              3638 	pop	ix
   0F3B C9                 3639 	ret
   0F3C                    3640 _do_letter_end::
   0F3C                    3641 _font_x:
   0F3C 01                 3642 	.db #0x01
   0F3D 09                 3643 	.db #0x09
   0F3E 11                 3644 	.db #0x11
   0F3F 19                 3645 	.db #0x19
   0F40 21                 3646 	.db #0x21
   0F41 29                 3647 	.db #0x29
   0F42 31                 3648 	.db #0x31
   0F43 39                 3649 	.db #0x39
   0F44 41                 3650 	.db #0x41
   0F45 46                 3651 	.db #0x46
   0F46 4E                 3652 	.db #0x4E
   0F47 56                 3653 	.db #0x56
   0F48 5E                 3654 	.db #0x5E
   0F49 01                 3655 	.db #0x01
   0F4A 0A                 3656 	.db #0x0A
   0F4B 12                 3657 	.db #0x12
   0F4C 1A                 3658 	.db #0x1A
   0F4D 23                 3659 	.db #0x23
   0F4E 2B                 3660 	.db #0x2B
   0F4F 33                 3661 	.db #0x33
   0F50 3C                 3662 	.db #0x3C
   0F51 44                 3663 	.db #0x44
   0F52 4C                 3664 	.db #0x4C
   0F53 56                 3665 	.db #0x56
   0F54 5E                 3666 	.db #0x5E
   0F55 67                 3667 	.db #0x67
   0F56 00                 3668 	.db #0x00
   0F57 00                 3669 	.db #0x00
   0F58 00                 3670 	.db #0x00
   0F59 00                 3671 	.db #0x00
   0F5A 00                 3672 	.db #0x00
   0F5B 00                 3673 	.db #0x00
   0F5C 01                 3674 	.db #0x01
   0F5D 09                 3675 	.db #0x09
   0F5E 11                 3676 	.db #0x11
   0F5F 18                 3677 	.db #0x18
   0F60 20                 3678 	.db #0x20
   0F61 28                 3679 	.db #0x28
   0F62 2F                 3680 	.db #0x2F
   0F63 37                 3681 	.db #0x37
   0F64 3F                 3682 	.db #0x3F
   0F65 45                 3683 	.db #0x45
   0F66 4C                 3684 	.db #0x4C
   0F67 54                 3685 	.db #0x54
   0F68 5A                 3686 	.db #0x5A
   0F69 64                 3687 	.db #0x64
   0F6A 01                 3688 	.db #0x01
   0F6B 09                 3689 	.db #0x09
   0F6C 11                 3690 	.db #0x11
   0F6D 19                 3691 	.db #0x19
   0F6E 21                 3692 	.db #0x21
   0F6F 29                 3693 	.db #0x29
   0F70 30                 3694 	.db #0x30
   0F71 38                 3695 	.db #0x38
   0F72 40                 3696 	.db #0x40
   0F73 4A                 3697 	.db #0x4A
   0F74 52                 3698 	.db #0x52
   0F75 5A                 3699 	.db #0x5A
   0F76 00                 3700 	.db 0x00
   0F77 00                 3701 	.db 0x00
   0F78 00                 3702 	.db 0x00
   0F79 00                 3703 	.db 0x00
   0F7A 00                 3704 	.db 0x00
   0F7B 00                 3705 	.db 0x00
   0F7C                    3706 _font_y:
   0F7C 1C                 3707 	.db #0x1C
   0F7D 1C                 3708 	.db #0x1C
   0F7E 1C                 3709 	.db #0x1C
   0F7F 1C                 3710 	.db #0x1C
   0F80 1C                 3711 	.db #0x1C
   0F81 1C                 3712 	.db #0x1C
   0F82 1C                 3713 	.db #0x1C
   0F83 1C                 3714 	.db #0x1C
   0F84 1C                 3715 	.db #0x1C
   0F85 1C                 3716 	.db #0x1C
   0F86 1C                 3717 	.db #0x1C
   0F87 1C                 3718 	.db #0x1C
   0F88 1C                 3719 	.db #0x1C
   0F89 25                 3720 	.db #0x25
   0F8A 25                 3721 	.db #0x25
   0F8B 25                 3722 	.db #0x25
   0F8C 25                 3723 	.db #0x25
   0F8D 25                 3724 	.db #0x25
   0F8E 25                 3725 	.db #0x25
   0F8F 25                 3726 	.db #0x25
   0F90 25                 3727 	.db #0x25
   0F91 25                 3728 	.db #0x25
   0F92 25                 3729 	.db #0x25
   0F93 25                 3730 	.db #0x25
   0F94 25                 3731 	.db #0x25
   0F95 25                 3732 	.db #0x25
   0F96 00                 3733 	.db #0x00
   0F97 00                 3734 	.db #0x00
   0F98 00                 3735 	.db #0x00
   0F99 00                 3736 	.db #0x00
   0F9A 00                 3737 	.db #0x00
   0F9B 00                 3738 	.db #0x00
   0F9C 37                 3739 	.db #0x37
   0F9D 37                 3740 	.db #0x37
   0F9E 37                 3741 	.db #0x37
   0F9F 37                 3742 	.db #0x37
   0FA0 37                 3743 	.db #0x37
   0FA1 37                 3744 	.db #0x37
   0FA2 37                 3745 	.db #0x37
   0FA3 37                 3746 	.db #0x37
   0FA4 37                 3747 	.db #0x37
   0FA5 37                 3748 	.db #0x37
   0FA6 37                 3749 	.db #0x37
   0FA7 37                 3750 	.db #0x37
   0FA8 37                 3751 	.db #0x37
   0FA9 37                 3752 	.db #0x37
   0FAA 40                 3753 	.db #0x40
   0FAB 40                 3754 	.db #0x40
   0FAC 40                 3755 	.db #0x40
   0FAD 40                 3756 	.db #0x40
   0FAE 40                 3757 	.db #0x40
   0FAF 40                 3758 	.db #0x40
   0FB0 40                 3759 	.db #0x40
   0FB1 40                 3760 	.db #0x40
   0FB2 40                 3761 	.db #0x40
   0FB3 40                 3762 	.db #0x40
   0FB4 40                 3763 	.db #0x40
   0FB5 40                 3764 	.db #0x40
   0FB6 00                 3765 	.db 0x00
   0FB7 00                 3766 	.db 0x00
   0FB8 00                 3767 	.db 0x00
   0FB9 00                 3768 	.db 0x00
   0FBA 00                 3769 	.db 0x00
   0FBB 00                 3770 	.db 0x00
   0FBC                    3771 _font_w:
   0FBC 07                 3772 	.db #0x07
   0FBD 07                 3773 	.db #0x07
   0FBE 07                 3774 	.db #0x07
   0FBF 07                 3775 	.db #0x07
   0FC0 07                 3776 	.db #0x07
   0FC1 07                 3777 	.db #0x07
   0FC2 07                 3778 	.db #0x07
   0FC3 07                 3779 	.db #0x07
   0FC4 04                 3780 	.db #0x04
   0FC5 07                 3781 	.db #0x07
   0FC6 07                 3782 	.db #0x07
   0FC7 07                 3783 	.db #0x07
   0FC8 09                 3784 	.db #0x09
   0FC9 08                 3785 	.db #0x08
   0FCA 07                 3786 	.db #0x07
   0FCB 07                 3787 	.db #0x07
   0FCC 08                 3788 	.db #0x08
   0FCD 07                 3789 	.db #0x07
   0FCE 07                 3790 	.db #0x07
   0FCF 08                 3791 	.db #0x08
   0FD0 07                 3792 	.db #0x07
   0FD1 07                 3793 	.db #0x07
   0FD2 09                 3794 	.db #0x09
   0FD3 07                 3795 	.db #0x07
   0FD4 08                 3796 	.db #0x08
   0FD5 07                 3797 	.db #0x07
   0FD6 00                 3798 	.db #0x00
   0FD7 00                 3799 	.db #0x00
   0FD8 00                 3800 	.db #0x00
   0FD9 00                 3801 	.db #0x00
   0FDA 00                 3802 	.db #0x00
   0FDB 00                 3803 	.db #0x00
   0FDC 07                 3804 	.db #0x07
   0FDD 07                 3805 	.db #0x07
   0FDE 06                 3806 	.db #0x06
   0FDF 07                 3807 	.db #0x07
   0FE0 07                 3808 	.db #0x07
   0FE1 07                 3809 	.db #0x07
   0FE2 07                 3810 	.db #0x07
   0FE3 07                 3811 	.db #0x07
   0FE4 05                 3812 	.db #0x05
   0FE5 06                 3813 	.db #0x06
   0FE6 07                 3814 	.db #0x07
   0FE7 05                 3815 	.db #0x05
   0FE8 09                 3816 	.db #0x09
   0FE9 07                 3817 	.db #0x07
   0FEA 07                 3818 	.db #0x07
   0FEB 07                 3819 	.db #0x07
   0FEC 07                 3820 	.db #0x07
   0FED 07                 3821 	.db #0x07
   0FEE 07                 3822 	.db #0x07
   0FEF 06                 3823 	.db #0x06
   0FF0 07                 3824 	.db #0x07
   0FF1 07                 3825 	.db #0x07
   0FF2 09                 3826 	.db #0x09
   0FF3 07                 3827 	.db #0x07
   0FF4 07                 3828 	.db #0x07
   0FF5 07                 3829 	.db #0x07
   0FF6 00                 3830 	.db 0x00
   0FF7 00                 3831 	.db 0x00
   0FF8 00                 3832 	.db 0x00
   0FF9 00                 3833 	.db 0x00
   0FFA 00                 3834 	.db 0x00
   0FFB 00                 3835 	.db 0x00
                           3836 ;demo.c:497: void do_letter_tall(char cc) {
                           3837 ;	---------------------------------
                           3838 ; Function do_letter_tall
                           3839 ; ---------------------------------
   0FFC                    3840 _do_letter_tall_start::
   0FFC                    3841 _do_letter_tall:
   0FFC DD E5              3842 	push	ix
   0FFE DD 21 00 00        3843 	ld	ix,#0
   1002 DD 39              3844 	add	ix,sp
   1004 F5                 3845 	push	af
                           3846 ;demo.c:498: int cidx = cc - 65;
   1005 DD 4E 04           3847 	ld	c,4 (ix)
   1008 DD 7E 04           3848 	ld	a,4 (ix)
   100B 17                 3849 	rla	
   100C 9F                 3850 	sbc	a,a
   100D 47                 3851 	ld	b,a
   100E 79                 3852 	ld	a,c
   100F C6 BF              3853 	add	a,#0xBF
   1011 DD 77 FE           3854 	ld	-2 (ix),a
   1014 78                 3855 	ld	a,b
   1015 CE FF              3856 	adc	a,#0xFF
   1017 DD 77 FF           3857 	ld	-1 (ix),a
                           3858 ;demo.c:499: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3859 	ld	a,#<_font_x
   101C DD 86 FE           3860 	add	a,-2 (ix)
   101F 5F                 3861 	ld	e,a
   1020 3Es0F              3862 	ld	a,#>_font_x
   1022 DD 8E FF           3863 	adc	a,-1 (ix)
   1025 57                 3864 	ld	d,a
   1026 1A                 3865 	ld	a,(de)
   1027 5F                 3866 	ld	e,a
   1028 16 00              3867 	ld	d,#0x00
   102A 21 7F 00           3868 	ld	hl,#0x007F
   102D 19                 3869 	add	hl,de
   102E EB                 3870 	ex	de,hl
   102F 21r24s8F           3871 	ld	hl,#_cmd
   1032 73                 3872 	ld	(hl),e
   1033 23                 3873 	inc	hl
   1034 72                 3874 	ld	(hl),d
                           3875 ;demo.c:500: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r26s8F           3876 	ld	de,#_cmd + 2
   1038 3Er7C              3877 	ld	a,#<_font_y
   103A DD 86 FE           3878 	add	a,-2 (ix)
   103D 4F                 3879 	ld	c,a
   103E 3Es0F              3880 	ld	a,#>_font_y
   1040 DD 8E FF           3881 	adc	a,-1 (ix)
   1043 47                 3882 	ld	b,a
   1044 0A                 3883 	ld	a,(bc)
   1045 4F                 3884 	ld	c,a
   1046 06 00              3885 	ld	b,#0x00
   1048 21 FF 01           3886 	ld	hl,#0x01FF
   104B 09                 3887 	add	hl,bc
   104C 4D                 3888 	ld	c,l
   104D 44                 3889 	ld	b,h
   104E EB                 3890 	ex	de,hl
   104F 71                 3891 	ld	(hl),c
   1050 23                 3892 	inc	hl
   1051 70                 3893 	ld	(hl),b
                           3894 ;demo.c:501: cmd.dest_x = lx;
   1052 01r28s8F           3895 	ld	bc,#_cmd + 4
   1055 21r6Es8F           3896 	ld	hl,#_lx + 0
   1058 5E                 3897 	ld	e,(hl)
   1059 16 00              3898 	ld	d,#0x00
   105B 69                 3899 	ld	l,c
   105C 60                 3900 	ld	h,b
   105D 73                 3901 	ld	(hl),e
   105E 23                 3902 	inc	hl
   105F 72                 3903 	ld	(hl),d
                           3904 ;demo.c:502: cmd.dest_y = ly;
   1060 01r2As8F           3905 	ld	bc,#_cmd + 6
   1063 21r6Fs8F           3906 	ld	hl,#_ly + 0
   1066 5E                 3907 	ld	e,(hl)
   1067 16 00              3908 	ld	d,#0x00
   1069 69                 3909 	ld	l,c
   106A 60                 3910 	ld	h,b
   106B 73                 3911 	ld	(hl),e
   106C 23                 3912 	inc	hl
   106D 72                 3913 	ld	(hl),d
                           3914 ;demo.c:503: cmd.size_x = font_w[cidx];
   106E 01r2Cs8F           3915 	ld	bc,#_cmd + 8
   1071 3ErBC              3916 	ld	a,#<_font_w
   1073 DD 86 FE           3917 	add	a,-2 (ix)
   1076 5F                 3918 	ld	e,a
   1077 3Es0F              3919 	ld	a,#>_font_w
   1079 DD 8E FF           3920 	adc	a,-1 (ix)
   107C 57                 3921 	ld	d,a
   107D 1A                 3922 	ld	a,(de)
   107E 5F                 3923 	ld	e,a
   107F 16 00              3924 	ld	d,#0x00
   1081 69                 3925 	ld	l,c
   1082 60                 3926 	ld	h,b
   1083 73                 3927 	ld	(hl),e
   1084 23                 3928 	inc	hl
   1085 72                 3929 	ld	(hl),d
                           3930 ;demo.c:504: cmd.size_y = 10;
   1086 21r2Es8F           3931 	ld	hl, #_cmd + 10
   1089 36 0A              3932 	ld	(hl),#0x0A
   108B 23                 3933 	inc	hl
   108C 36 00              3934 	ld	(hl),#0x00
                           3935 ;demo.c:505: cmd.argument = 0x00;
   108E 3E 00              3936 	ld	a,#0x00
   1090 32r31s8F           3937 	ld	(#_cmd + 13),a
                           3938 ;demo.c:506: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3939 	ld	a,#0x90
   1095 32r32s8F           3940 	ld	(#_cmd + 14),a
                           3941 ;demo.c:507: vdp_copier(&cmd);
   1098 21r24s8F           3942 	ld	hl,#_cmd
   109B E5                 3943 	push	hl
   109C CDr00s00           3944 	call	_vdp_copier
   109F F1                 3945 	pop	af
                           3946 ;demo.c:508: lx+=font_w[cidx]-1;
   10A0 3ErBC              3947 	ld	a,#<_font_w
   10A2 DD 86 FE           3948 	add	a,-2 (ix)
   10A5 4F                 3949 	ld	c,a
   10A6 3Es0F              3950 	ld	a,#>_font_w
   10A8 DD 8E FF           3951 	adc	a,-1 (ix)
   10AB 47                 3952 	ld	b,a
   10AC 0A                 3953 	ld	a,(bc)
   10AD 4F                 3954 	ld	c,a
   10AE 0D                 3955 	dec	c
   10AF 21r6Es8F           3956 	ld	hl,#_lx
   10B2 7E                 3957 	ld	a,(hl)
   10B3 81                 3958 	add	a,c
   10B4 77                 3959 	ld	(hl),a
   10B5 DD F9              3960 	ld	sp,ix
   10B7 DD E1              3961 	pop	ix
   10B9 C9                 3962 	ret
   10BA                    3963 _do_letter_tall_end::
                           3964 ;demo.c:511: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3965 ;	---------------------------------
                           3966 ; Function drawstr
                           3967 ; ---------------------------------
   10BA                    3968 _drawstr_start::
   10BA                    3969 _drawstr:
   10BA DD E5              3970 	push	ix
   10BC DD 21 00 00        3971 	ld	ix,#0
   10C0 DD 39              3972 	add	ix,sp
                           3973 ;demo.c:512: char* c = str;
   10C2 DD 4E 04           3974 	ld	c,4 (ix)
   10C5 DD 46 05           3975 	ld	b,5 (ix)
                           3976 ;demo.c:513: lx = x;
   10C8 DD 5E 06           3977 	ld	e,6 (ix)
   10CB 21r6Es8F           3978 	ld	hl,#_lx + 0
   10CE 73                 3979 	ld	(hl), e
                           3980 ;demo.c:514: ly = y;
   10CF DD 7E 07           3981 	ld	a,7 (ix)
   10D2 21r6Fs8F           3982 	ld	hl,#_ly + 0
   10D5 77                 3983 	ld	(hl), a
                           3984 ;demo.c:515: while (*c) {
   10D6                    3985 00107$:
   10D6 0A                 3986 	ld	a,(bc)
   10D7 57                 3987 	ld	d,a
   10D8 B7                 3988 	or	a,a
   10D9 28 42              3989 	jr	Z,00110$
                           3990 ;demo.c:516: char ltr = *c++; 
   10DB 03                 3991 	inc	bc
                           3992 ;demo.c:517: if (ltr == ' ') lx+=4;
   10DC 7A                 3993 	ld	a,d
   10DD D6 20              3994 	sub	a,#0x20
   10DF 20 1E              3995 	jr	NZ,00105$
   10E1 FD 21r6Es8F        3996 	ld	iy,#_lx
   10E5 FD 34 00           3997 	inc	0 (iy)
   10E8 FD 21r6Es8F        3998 	ld	iy,#_lx
   10EC FD 34 00           3999 	inc	0 (iy)
   10EF FD 21r6Es8F        4000 	ld	iy,#_lx
   10F3 FD 34 00           4001 	inc	0 (iy)
   10F6 FD 21r6Es8F        4002 	ld	iy,#_lx
   10FA FD 34 00           4003 	inc	0 (iy)
   10FD 18 D7              4004 	jr	00107$
   10FF                    4005 00105$:
                           4006 ;demo.c:518: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 4007 	ld	a,d
   1100 D6 5F              4008 	sub	a,#0x5F
   1102 20 0D              4009 	jr	NZ,00102$
   1104 21r6Fs8F           4010 	ld	hl,#_ly
   1107 7E                 4011 	ld	a,(hl)
   1108 C6 09              4012 	add	a,#0x09
   110A 77                 4013 	ld	(hl),a
   110B 21r6Es8F           4014 	ld	hl,#_lx + 0
   110E 73                 4015 	ld	(hl), e
   110F 18 C5              4016 	jr	00107$
   1111                    4017 00102$:
                           4018 ;demo.c:519: else do_letter(ltr);
   1111 C5                 4019 	push	bc
   1112 D5                 4020 	push	de
   1113 D5                 4021 	push	de
   1114 33                 4022 	inc	sp
   1115 CDr7Es0E           4023 	call	_do_letter
   1118 33                 4024 	inc	sp
   1119 D1                 4025 	pop	de
   111A C1                 4026 	pop	bc
   111B 18 B9              4027 	jr	00107$
   111D                    4028 00110$:
   111D DD E1              4029 	pop	ix
   111F C9                 4030 	ret
   1120                    4031 _drawstr_end::
                           4032 ;demo.c:523: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4033 ;	---------------------------------
                           4034 ; Function drawsine
                           4035 ; ---------------------------------
   1120                    4036 _drawsine_start::
   1120                    4037 _drawsine:
   1120 DD E5              4038 	push	ix
   1122 DD 21 00 00        4039 	ld	ix,#0
   1126 DD 39              4040 	add	ix,sp
   1128 3B                 4041 	dec	sp
                           4042 ;demo.c:524: char* c = str;
   1129 DD 4E 04           4043 	ld	c,4 (ix)
   112C DD 46 05           4044 	ld	b,5 (ix)
                           4045 ;demo.c:525: lx = x;
   112F DD 7E 06           4046 	ld	a,6 (ix)
   1132 21r6Es8F           4047 	ld	hl,#_lx + 0
   1135 77                 4048 	ld	(hl), a
                           4049 ;demo.c:527: while (*c) {
   1136                    4050 00104$:
   1136 0A                 4051 	ld	a,(bc)
   1137 5F                 4052 	ld	e,a
   1138 B7                 4053 	or	a,a
   1139 CArADs11           4054 	jp	Z,00107$
                           4055 ;demo.c:528: char ltr = *c++; 
   113C 03                 4056 	inc	bc
   113D DD 73 FF           4057 	ld	-1 (ix),e
                           4058 ;demo.c:529: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21r6Es8F           4059 	ld	hl,#_lx + 0
   1143 5E                 4060 	ld	e,(hl)
   1144 16 00              4061 	ld	d,#0x00
   1146 21r20s8F           4062 	ld	hl,#_vbicount
   1149 7B                 4063 	ld	a,e
   114A 86                 4064 	add	a,(hl)
   114B 5F                 4065 	ld	e,a
   114C 7A                 4066 	ld	a,d
   114D 23                 4067 	inc	hl
   114E 8E                 4068 	adc	a,(hl)
   114F 57                 4069 	ld	d,a
   1150 CB 2A              4070 	sra	d
   1152 CB 1B              4071 	rr	e
   1154 16 00              4072 	ld	d,#0x00
   1156 CB 23              4073 	sla	e
   1158 CB 12              4074 	rl	d
   115A 21r2Cs00           4075 	ld	hl,#_sintabx
   115D 19                 4076 	add	hl,de
   115E 5E                 4077 	ld	e,(hl)
   115F 23                 4078 	inc	hl
   1160 56                 4079 	ld	d,(hl)
   1161 CB 3A              4080 	srl	d
   1163 CB 1B              4081 	rr	e
   1165 CB 3A              4082 	srl	d
   1167 CB 1B              4083 	rr	e
   1169 CB 3A              4084 	srl	d
   116B CB 1B              4085 	rr	e
   116D CB 3A              4086 	srl	d
   116F CB 1B              4087 	rr	e
   1171 21r6Fs8F           4088 	ld	hl,#_ly
   1174 DD 7E 07           4089 	ld	a,7 (ix)
   1177 83                 4090 	add	a,e
   1178 77                 4091 	ld	(hl),a
                           4092 ;demo.c:530: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           4093 	ld	a,-1 (ix)
   117C D6 20              4094 	sub	a,#0x20
   117E 20 1F              4095 	jr	NZ,00102$
   1180 FD 21r6Es8F        4096 	ld	iy,#_lx
   1184 FD 34 00           4097 	inc	0 (iy)
   1187 FD 21r6Es8F        4098 	ld	iy,#_lx
   118B FD 34 00           4099 	inc	0 (iy)
   118E FD 21r6Es8F        4100 	ld	iy,#_lx
   1192 FD 34 00           4101 	inc	0 (iy)
   1195 FD 21r6Es8F        4102 	ld	iy,#_lx
   1199 FD 34 00           4103 	inc	0 (iy)
   119C C3r36s11           4104 	jp	00104$
   119F                    4105 00102$:
                           4106 ;demo.c:531: else do_letter_tall(ltr);
   119F C5                 4107 	push	bc
   11A0 DD 7E FF           4108 	ld	a,-1 (ix)
   11A3 F5                 4109 	push	af
   11A4 33                 4110 	inc	sp
   11A5 CDrFCs0F           4111 	call	_do_letter_tall
   11A8 33                 4112 	inc	sp
   11A9 C1                 4113 	pop	bc
   11AA C3r36s11           4114 	jp	00104$
   11AD                    4115 00107$:
   11AD DD F9              4116 	ld	sp,ix
   11AF DD E1              4117 	pop	ix
   11B1 C9                 4118 	ret
   11B2                    4119 _drawsine_end::
                           4120 ;demo.c:535: void font() {
                           4121 ;	---------------------------------
                           4122 ; Function font
                           4123 ; ---------------------------------
   11B2                    4124 _font_start::
   11B2                    4125 _font:
                           4126 ;demo.c:537: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           4127 	ld	hl,#0x3C4A
   11B5 E5                 4128 	push	hl
   11B6 21rC0s11           4129 	ld	hl,#__str_8
   11B9 E5                 4130 	push	hl
   11BA CDrBAs10           4131 	call	_drawstr
   11BD F1                 4132 	pop	af
   11BE F1                 4133 	pop	af
   11BF C9                 4134 	ret
   11C0                    4135 _font_end::
   11C0                    4136 __str_8:
   11C0 44 49 47 49 54 41  4137 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  4138 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 4139 	.db 0x00
                           4140 ;demo.c:546: void twister() {
                           4141 ;	---------------------------------
                           4142 ; Function twister
                           4143 ; ---------------------------------
   1223                    4144 _twister_start::
   1223                    4145 _twister:
   1223 DD E5              4146 	push	ix
   1225 DD 21 00 00        4147 	ld	ix,#0
   1229 DD 39              4148 	add	ix,sp
   122B F5                 4149 	push	af
                           4150 ;demo.c:550: if (twinited == 0) {
   122C 3Ar72s8F           4151 	ld	a,(#_twinited+0)
   122F FD 21r72s8F        4152 	ld	iy,#_twinited
   1233 FD B6 01           4153 	or	a,1 (iy)
   1236 C2rB0s12           4154 	jp	NZ,00102$
                           4155 ;demo.c:551: cmd.size_x = 256;
   1239 21r2Cs8F           4156 	ld	hl, #_cmd + 8
   123C 36 00              4157 	ld	(hl),#0x00
   123E 23                 4158 	inc	hl
   123F 36 01              4159 	ld	(hl),#0x01
                           4160 ;demo.c:552: cmd.size_y = 1;
   1241 21r2Es8F           4161 	ld	hl, #_cmd + 10
   1244 36 01              4162 	ld	(hl),#0x01
   1246 23                 4163 	inc	hl
   1247 36 00              4164 	ld	(hl),#0x00
                           4165 ;demo.c:553: cmd.data = 0;
   1249 3E 00              4166 	ld	a,#0x00
   124B 32r30s8F           4167 	ld	(#_cmd + 12),a
                           4168 ;demo.c:554: cmd.argument = 0x04; // from 70xY to left
   124E 3E 04              4169 	ld	a,#0x04
   1250 32r31s8F           4170 	ld	(#_cmd + 13),a
                           4171 ;demo.c:555: cmd.command = 0xe0; // vram to vram, y only
   1253 01r32s8F           4172 	ld	bc,#_cmd + 14
   1256 3E E0              4173 	ld	a,#0xE0
   1258 02                 4174 	ld	(bc),a
                           4175 ;demo.c:556: cmd.source_x = 256;
   1259 21r24s8F           4176 	ld	hl,#_cmd
   125C 36 00              4177 	ld	(hl),#0x00
   125E 23                 4178 	inc	hl
   125F 36 01              4179 	ld	(hl),#0x01
                           4180 ;demo.c:557: cmd.dest_x = 256;
   1261 21r28s8F           4181 	ld	hl, #_cmd + 4
   1264 36 00              4182 	ld	(hl),#0x00
   1266 23                 4183 	inc	hl
   1267 36 01              4184 	ld	(hl),#0x01
                           4185 ;demo.c:559: for (y = 0; y < 212; y+=1) {
   1269 01 00 00           4186 	ld	bc,#0x0000
   126C                    4187 00103$:
   126C 79                 4188 	ld	a,c
   126D D6 D4              4189 	sub	a,#0xD4
   126F 78                 4190 	ld	a,b
   1270 DE 00              4191 	sbc	a,#0x00
   1272 F2r93s12           4192 	jp	P,00106$
                           4193 ;demo.c:560: waitVB();
   1275 76                 4194 		halt 
                           4195 ;demo.c:561: cmd.source_y = 0;
   1276 11r26s8F           4196 	ld	de,#_cmd + 2
   1279 EB                 4197 	ex	de,hl
   127A 36 00              4198 	ld	(hl),#0x00
   127C 23                 4199 	inc	hl
   127D 36 00              4200 	ld	(hl),#0x00
                           4201 ;demo.c:562: cmd.dest_y = y;
   127F 11r2As8F           4202 	ld	de,#_cmd + 6
   1282 EB                 4203 	ex	de,hl
   1283 71                 4204 	ld	(hl),c
   1284 23                 4205 	inc	hl
   1285 70                 4206 	ld	(hl),b
                           4207 ;demo.c:563: vdp_copier(&cmd);
   1286 C5                 4208 	push	bc
   1287 21r24s8F           4209 	ld	hl,#_cmd
   128A E5                 4210 	push	hl
   128B CDr00s00           4211 	call	_vdp_copier
   128E F1                 4212 	pop	af
   128F C1                 4213 	pop	bc
                           4214 ;demo.c:559: for (y = 0; y < 212; y+=1) {
   1290 03                 4215 	inc	bc
   1291 18 D9              4216 	jr	00103$
   1293                    4217 00106$:
                           4218 ;demo.c:567: twinited = 1;
   1293 21r72s8F           4219 	ld	hl,#_twinited + 0
   1296 36 01              4220 	ld	(hl), #0x01
   1298 21r73s8F           4221 	ld	hl,#_twinited + 1
   129B 36 00              4222 	ld	(hl), #0x00
                           4223 ;demo.c:568: vdp_register(8,0x2); // no sprites
   129D 21 08 02           4224 	ld	hl,#0x0208
   12A0 E5                 4225 	push	hl
   12A1 CDr00s00           4226 	call	_vdp_register
   12A4 F1                 4227 	pop	af
                           4228 ;demo.c:569: vdp_load_palette(twister_palette);
   12A5 21rC0s8E           4229 	ld	hl,#_twister_palette
   12A8 E5                 4230 	push	hl
   12A9 CDr00s00           4231 	call	_vdp_load_palette
   12AC F1                 4232 	pop	af
                           4233 ;demo.c:570: font();
   12AD CDrB2s11           4234 	call	_font
   12B0                    4235 00102$:
                           4236 ;demo.c:573: cmd.size_x = 70;
   12B0 21r2Cs8F           4237 	ld	hl, #_cmd + 8
   12B3 36 46              4238 	ld	(hl),#0x46
   12B5 23                 4239 	inc	hl
   12B6 36 00              4240 	ld	(hl),#0x00
                           4241 ;demo.c:574: cmd.size_y = 2;
   12B8 21r2Es8F           4242 	ld	hl, #_cmd + 10
   12BB 36 02              4243 	ld	(hl),#0x02
   12BD 23                 4244 	inc	hl
   12BE 36 00              4245 	ld	(hl),#0x00
                           4246 ;demo.c:575: cmd.data = 0;
   12C0 3E 00              4247 	ld	a,#0x00
   12C2 32r30s8F           4248 	ld	(#_cmd + 12),a
                           4249 ;demo.c:576: cmd.argument = 0x04; // from 70xY to left
   12C5 3E 04              4250 	ld	a,#0x04
   12C7 32r31s8F           4251 	ld	(#_cmd + 13),a
                           4252 ;demo.c:577: cmd.command = 0xe0; // vram to vram, y only
   12CA 01r32s8F           4253 	ld	bc,#_cmd + 14
   12CD 3E E0              4254 	ld	a,#0xE0
   12CF 02                 4255 	ld	(bc),a
                           4256 ;demo.c:578: cmd.source_x = 70;
   12D0 21r24s8F           4257 	ld	hl,#_cmd
   12D3 36 46              4258 	ld	(hl),#0x46
   12D5 23                 4259 	inc	hl
   12D6 36 00              4260 	ld	(hl),#0x00
                           4261 ;demo.c:579: cmd.dest_x = 70;
   12D8 21r28s8F           4262 	ld	hl, #_cmd + 4
   12DB 36 46              4263 	ld	(hl),#0x46
   12DD 23                 4264 	inc	hl
   12DE 36 00              4265 	ld	(hl),#0x00
                           4266 ;demo.c:581: for (y = 0; y < 212; y+=2) {
   12E0 DD 36 FE 00        4267 	ld	-2 (ix),#0x00
   12E4 DD 36 FF 00        4268 	ld	-1 (ix),#0x00
   12E8                    4269 00107$:
   12E8 DD 7E FE           4270 	ld	a,-2 (ix)
   12EB D6 D4              4271 	sub	a,#0xD4
   12ED DD 7E FF           4272 	ld	a,-1 (ix)
   12F0 DE 00              4273 	sbc	a,#0x00
   12F2 F2r4Bs13           4274 	jp	P,00110$
                           4275 ;demo.c:582: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12F5 11r26s8F           4276 	ld	de,#_cmd + 2
   12F8 DD 4E FE           4277 	ld	c,-2 (ix)
   12FB DD 46 FF           4278 	ld	b,-1 (ix)
   12FE CB 28              4279 	sra	b
   1300 CB 19              4280 	rr	c
   1302 3Ar70s8F           4281 	ld	a,(#_ff+0)
   1305 81                 4282 	add	a,c
   1306 4F                 4283 	ld	c,a
   1307 3Ar71s8F           4284 	ld	a,(#_ff+1)
   130A 88                 4285 	adc	a,b
   130B 06 00              4286 	ld	b,#0x00
   130D 21r00s00           4287 	ld	hl,#_sintab
   1310 09                 4288 	add	hl,bc
   1311 7E                 4289 	ld	a,(hl)
   1312 4F                 4290 	ld	c,a
   1313 CB 29              4291 	sra	c
   1315 79                 4292 	ld	a,c
   1316 17                 4293 	rla	
   1317 9F                 4294 	sbc	a,a
   1318 47                 4295 	ld	b,a
   1319 21 40 02           4296 	ld	hl,#0x0240
   131C 09                 4297 	add	hl,bc
   131D 4D                 4298 	ld	c,l
   131E 44                 4299 	ld	b,h
   131F 6B                 4300 	ld	l,e
   1320 62                 4301 	ld	h,d
   1321 71                 4302 	ld	(hl),c
   1322 23                 4303 	inc	hl
   1323 70                 4304 	ld	(hl),b
                           4305 ;demo.c:583: cmd.dest_y = y;
   1324 21r2As8F           4306 	ld	hl, #_cmd + 6
   1327 DD 7E FE           4307 	ld	a,-2 (ix)
   132A 77                 4308 	ld	(hl),a
   132B 23                 4309 	inc	hl
   132C DD 7E FF           4310 	ld	a,-1 (ix)
   132F 77                 4311 	ld	(hl),a
                           4312 ;demo.c:584: vdp_copier(&cmd);
   1330 21r24s8F           4313 	ld	hl,#_cmd
   1333 E5                 4314 	push	hl
   1334 CDr00s00           4315 	call	_vdp_copier
   1337 F1                 4316 	pop	af
                           4317 ;demo.c:581: for (y = 0; y < 212; y+=2) {
   1338 DD 7E FE           4318 	ld	a,-2 (ix)
   133B C6 02              4319 	add	a,#0x02
   133D DD 77 FE           4320 	ld	-2 (ix),a
   1340 DD 7E FF           4321 	ld	a,-1 (ix)
   1343 CE 00              4322 	adc	a,#0x00
   1345 DD 77 FF           4323 	ld	-1 (ix),a
   1348 C3rE8s12           4324 	jp	00107$
   134B                    4325 00110$:
                           4326 ;demo.c:588: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   134B 21r70s8F           4327 	ld	hl,#_ff + 0
   134E 4E                 4328 	ld	c,(hl)
   134F 21r71s8F           4329 	ld	hl,#_ff + 1
   1352 46                 4330 	ld	b,(hl)
   1353 CB 28              4331 	sra	b
   1355 CB 19              4332 	rr	c
   1357 CB 28              4333 	sra	b
   1359 CB 19              4334 	rr	c
   135B 21r70s8F           4335 	ld	hl,#_ff + 0
   135E 5E                 4336 	ld	e,(hl)
   135F 21r71s8F           4337 	ld	hl,#_ff + 1
   1362 56                 4338 	ld	d,(hl)
   1363 CB 2A              4339 	sra	d
   1365 CB 1B              4340 	rr	e
   1367 CB 2A              4341 	sra	d
   1369 CB 1B              4342 	rr	e
   136B CB 2A              4343 	sra	d
   136D CB 1B              4344 	rr	e
   136F 43                 4345 	ld	b,e
   1370 79                 4346 	ld	a,c
   1371 F5                 4347 	push	af
   1372 33                 4348 	inc	sp
   1373 C5                 4349 	push	bc
   1374 33                 4350 	inc	sp
   1375 41                 4351 	ld	b,c
   1376 0E 04              4352 	ld	c,#0x04
   1378 C5                 4353 	push	bc
   1379 CDr00s00           4354 	call	_msx2_palette
   137C F1                 4355 	pop	af
   137D F1                 4356 	pop	af
                           4357 ;demo.c:590: ff+=4;
   137E 21r70s8F           4358 	ld	hl,#_ff
   1381 7E                 4359 	ld	a,(hl)
   1382 C6 04              4360 	add	a,#0x04
   1384 23                 4361 	inc	hl
   1385 2B                 4362 	dec	hl
   1386 C5                 4363 	push	bc
   1387 4F                 4364 	ld	c, a
   1388 23                 4365 	inc	hl
   1389 7E                 4366 	ld	a, (hl)
   138A 47                 4367 	ld	b, a
   138B 79                 4368 	ld	a, c
   138C 2B                 4369 	dec	hl
   138D 77                 4370 	ld	(hl), a
   138E 78                 4371 	ld	a, b
   138F C1                 4372 	pop	bc
   1390 CE 00              4373 	adc	a,#0x00
   1392 23                 4374 	inc	hl
   1393 77                 4375 	ld	(hl),a
   1394 DD F9              4376 	ld	sp,ix
   1396 DD E1              4377 	pop	ix
   1398 C9                 4378 	ret
   1399                    4379 _twister_end::
                           4380 ;demo.c:600: void bulbs() {
                           4381 ;	---------------------------------
                           4382 ; Function bulbs
                           4383 ; ---------------------------------
   1399                    4384 _bulbs_start::
   1399                    4385 _bulbs:
   1399 DD E5              4386 	push	ix
   139B DD 21 00 00        4387 	ld	ix,#0
   139F DD 39              4388 	add	ix,sp
   13A1 F5                 4389 	push	af
   13A2 F5                 4390 	push	af
                           4391 ;demo.c:604: ender+=enderdir;
   13A3 21r7Cs8F           4392 	ld	hl,#_enderdir
   13A6 D5                 4393 	push	de
   13A7 FD 21r7As8F        4394 	ld	iy,#_ender
   13AB FD E5              4395 	push	iy
   13AD D1                 4396 	pop	de
   13AE 1A                 4397 	ld	a,(de)
   13AF 86                 4398 	add	a,(hl)
   13B0 13                 4399 	inc	de
   13B1 1B                 4400 	dec	de
   13B2 C5                 4401 	push	bc
   13B3 4F                 4402 	ld	c, a
   13B4 13                 4403 	inc	de
   13B5 1A                 4404 	ld	a, (de)
   13B6 47                 4405 	ld	b, a
   13B7 79                 4406 	ld	a, c
   13B8 1B                 4407 	dec	de
   13B9 12                 4408 	ld	(de), a
   13BA 78                 4409 	ld	a, b
   13BB C1                 4410 	pop	bc
   13BC 23                 4411 	inc	hl
   13BD 8E                 4412 	adc	a,(hl)
   13BE 13                 4413 	inc	de
   13BF 12                 4414 	ld	(de),a
   13C0 D1                 4415 	pop	de
                           4416 ;demo.c:605: if (ender < 2) enderdir = -enderdir;
   13C1 3Ar7As8F           4417 	ld	a,(#_ender+0)
   13C4 D6 02              4418 	sub	a,#0x02
   13C6 3Ar7Bs8F           4419 	ld	a,(#_ender+1)
   13C9 DE 00              4420 	sbc	a,#0x00
   13CB F2rEFs13           4421 	jp	P,00102$
   13CE AF                 4422 	xor	a,a
   13CF FD 21r7Cs8F        4423 	ld	iy,#_enderdir
   13D3 3E 00              4424 	ld	a,#0x00
   13D5 FD 9E 00           4425 	sbc	a,0 (iy)
   13D8 FD 21r7Cs8F        4426 	ld	iy,#_enderdir
   13DC FD 77 00           4427 	ld	0 (iy),a
   13DF FD 21r7Cs8F        4428 	ld	iy,#_enderdir
   13E3 3E 00              4429 	ld	a,#0x00
   13E5 FD 9E 01           4430 	sbc	a,1 (iy)
   13E8 FD 21r7Cs8F        4431 	ld	iy,#_enderdir
   13EC FD 77 01           4432 	ld	1 (iy),a
   13EF                    4433 00102$:
                           4434 ;demo.c:606: if (ender >= 212) enderdir = -enderdir;
   13EF 3Ar7As8F           4435 	ld	a,(#_ender+0)
   13F2 D6 D4              4436 	sub	a,#0xD4
   13F4 3Ar7Bs8F           4437 	ld	a,(#_ender+1)
   13F7 DE 00              4438 	sbc	a,#0x00
   13F9 FAr1Ds14           4439 	jp	M,00104$
   13FC AF                 4440 	xor	a,a
   13FD FD 21r7Cs8F        4441 	ld	iy,#_enderdir
   1401 3E 00              4442 	ld	a,#0x00
   1403 FD 9E 00           4443 	sbc	a,0 (iy)
   1406 FD 21r7Cs8F        4444 	ld	iy,#_enderdir
   140A FD 77 00           4445 	ld	0 (iy),a
   140D FD 21r7Cs8F        4446 	ld	iy,#_enderdir
   1411 3E 00              4447 	ld	a,#0x00
   1413 FD 9E 01           4448 	sbc	a,1 (iy)
   1416 FD 21r7Cs8F        4449 	ld	iy,#_enderdir
   141A FD 77 01           4450 	ld	1 (iy),a
   141D                    4451 00104$:
                           4452 ;demo.c:608: enderend = ender + 92;
   141D 3Ar7As8F           4453 	ld	a,(#_ender+0)
   1420 C6 5C              4454 	add	a,#0x5C
   1422 DD 77 FE           4455 	ld	-2 (ix),a
   1425 3Ar7Bs8F           4456 	ld	a,(#_ender+1)
   1428 CE 00              4457 	adc	a,#0x00
   142A DD 77 FF           4458 	ld	-1 (ix),a
                           4459 ;demo.c:610: if (enderend > 212) enderend = 212;
   142D 3E D4              4460 	ld	a,#0xD4
   142F DD 96 FE           4461 	sub	a,-2 (ix)
   1432 3E 00              4462 	ld	a,#0x00
   1434 DD 9E FF           4463 	sbc	a,-1 (ix)
   1437 F2r42s14           4464 	jp	P,00106$
   143A DD 36 FE D4        4465 	ld	-2 (ix),#0xD4
   143E DD 36 FF 00        4466 	ld	-1 (ix),#0x00
   1442                    4467 00106$:
                           4468 ;demo.c:612: if(bulbflipper == 1) {
   1442 3Ar74s8F           4469 	ld	a,(#_bulbflipper+0)
   1445 D6 01              4470 	sub	a,#0x01
   1447 20 06              4471 	jr	NZ,00130$
   1449 3Ar75s8F           4472 	ld	a,(#_bulbflipper+1)
   144C B7                 4473 	or	a,a
   144D 28 03              4474 	jr	Z,00131$
   144F                    4475 00130$:
   144F C3rF9s14           4476 	jp	00108$
   1452                    4477 00131$:
                           4478 ;demo.c:613: cmd.size_x = 72;
   1452 11r2Cs8F           4479 	ld	de,#_cmd + 8
   1455 EB                 4480 	ex	de,hl
   1456 36 48              4481 	ld	(hl),#0x48
   1458 23                 4482 	inc	hl
   1459 36 00              4483 	ld	(hl),#0x00
                           4484 ;demo.c:614: cmd.size_y = 16;
   145B 11r2Es8F           4485 	ld	de,#_cmd + 10
   145E EB                 4486 	ex	de,hl
   145F 36 10              4487 	ld	(hl),#0x10
   1461 23                 4488 	inc	hl
   1462 36 00              4489 	ld	(hl),#0x00
                           4490 ;demo.c:615: cmd.data = 0;
   1464 11r30s8F           4491 	ld	de,#_cmd + 12
   1467 3E 00              4492 	ld	a,#0x00
   1469 12                 4493 	ld	(de),a
                           4494 ;demo.c:616: cmd.argument = 0x04; // from 72xY to left
   146A 11r31s8F           4495 	ld	de,#_cmd + 13
   146D 3E 04              4496 	ld	a,#0x04
   146F 12                 4497 	ld	(de),a
                           4498 ;demo.c:617: cmd.command = 0xe0; // vram to vram, y only
   1470 11r32s8F           4499 	ld	de,#_cmd + 14
   1473 3E E0              4500 	ld	a,#0xE0
   1475 12                 4501 	ld	(de),a
                           4502 ;demo.c:618: cmd.source_x = 72;
   1476 21r24s8F           4503 	ld	hl,#_cmd
   1479 36 48              4504 	ld	(hl),#0x48
   147B 23                 4505 	inc	hl
   147C 36 00              4506 	ld	(hl),#0x00
                           4507 ;demo.c:619: cmd.dest_x = 72;
   147E 11r28s8F           4508 	ld	de,#_cmd + 4
   1481 6B                 4509 	ld	l,e
   1482 62                 4510 	ld	h,d
   1483 36 48              4511 	ld	(hl),#0x48
   1485 23                 4512 	inc	hl
   1486 36 00              4513 	ld	(hl),#0x00
                           4514 ;demo.c:621: for (y = ender; y < enderend; y+=16) {
   1488 ED 4Br7As8F        4515 	ld	bc,(_ender)
   148C 59                 4516 	ld	e,c
   148D 50                 4517 	ld	d,b
   148E                    4518 00110$:
   148E 7B                 4519 	ld	a,e
   148F DD 96 FE           4520 	sub	a,-2 (ix)
   1492 7A                 4521 	ld	a,d
   1493 DD 9E FF           4522 	sbc	a,-1 (ix)
   1496 F2rE0s14           4523 	jp	P,00113$
                           4524 ;demo.c:622: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   1499 21r26s8F           4525 	ld	hl,#_cmd + 2
   149C DD 75 FC           4526 	ld	-4 (ix),l
   149F DD 74 FD           4527 	ld	-3 (ix),h
   14A2 3Ar76s8F           4528 	ld	a,(#_ff1+0)
   14A5 83                 4529 	add	a,e
   14A6 4F                 4530 	ld	c,a
   14A7 3Ar77s8F           4531 	ld	a,(#_ff1+1)
   14AA 8A                 4532 	adc	a,d
   14AB 06 00              4533 	ld	b,#0x00
   14AD 21r00s00           4534 	ld	hl,#_sintab
   14B0 09                 4535 	add	hl,bc
   14B1 7E                 4536 	ld	a,(hl)
   14B2 4F                 4537 	ld	c,a
   14B3 CB 29              4538 	sra	c
   14B5 79                 4539 	ld	a,c
   14B6 17                 4540 	rla	
   14B7 9F                 4541 	sbc	a,a
   14B8 47                 4542 	ld	b,a
   14B9 21 40 01           4543 	ld	hl,#0x0140
   14BC 09                 4544 	add	hl,bc
   14BD 4D                 4545 	ld	c,l
   14BE 44                 4546 	ld	b,h
   14BF DD 6E FC           4547 	ld	l,-4 (ix)
   14C2 DD 66 FD           4548 	ld	h,-3 (ix)
   14C5 71                 4549 	ld	(hl),c
   14C6 23                 4550 	inc	hl
   14C7 70                 4551 	ld	(hl),b
                           4552 ;demo.c:623: cmd.dest_y = y;
   14C8 21r2As8F           4553 	ld	hl, #_cmd + 6
   14CB 73                 4554 	ld	(hl),e
   14CC 23                 4555 	inc	hl
   14CD 72                 4556 	ld	(hl),d
                           4557 ;demo.c:624: vdp_copier(&cmd);
   14CE D5                 4558 	push	de
   14CF 21r24s8F           4559 	ld	hl,#_cmd
   14D2 E5                 4560 	push	hl
   14D3 CDr00s00           4561 	call	_vdp_copier
   14D6 F1                 4562 	pop	af
   14D7 D1                 4563 	pop	de
                           4564 ;demo.c:621: for (y = ender; y < enderend; y+=16) {
   14D8 21 10 00           4565 	ld	hl,#0x0010
   14DB 19                 4566 	add	hl,de
   14DC EB                 4567 	ex	de,hl
   14DD C3r8Es14           4568 	jp	00110$
   14E0                    4569 00113$:
                           4570 ;demo.c:626: ff1+=4;
   14E0 21r76s8F           4571 	ld	hl,#_ff1
   14E3 7E                 4572 	ld	a,(hl)
   14E4 C6 04              4573 	add	a,#0x04
   14E6 23                 4574 	inc	hl
   14E7 2B                 4575 	dec	hl
   14E8 C5                 4576 	push	bc
   14E9 4F                 4577 	ld	c, a
   14EA 23                 4578 	inc	hl
   14EB 7E                 4579 	ld	a, (hl)
   14EC 47                 4580 	ld	b, a
   14ED 79                 4581 	ld	a, c
   14EE 2B                 4582 	dec	hl
   14EF 77                 4583 	ld	(hl), a
   14F0 78                 4584 	ld	a, b
   14F1 C1                 4585 	pop	bc
   14F2 CE 00              4586 	adc	a,#0x00
   14F4 23                 4587 	inc	hl
   14F5 77                 4588 	ld	(hl),a
   14F6 C3r93s15           4589 	jp	00109$
   14F9                    4590 00108$:
                           4591 ;demo.c:630: cmd.size_x = 72;
   14F9 21r2Cs8F           4592 	ld	hl, #_cmd + 8
   14FC 36 48              4593 	ld	(hl),#0x48
   14FE 23                 4594 	inc	hl
   14FF 36 00              4595 	ld	(hl),#0x00
                           4596 ;demo.c:631: cmd.size_y = 16;
   1501 21r2Es8F           4597 	ld	hl, #_cmd + 10
   1504 36 10              4598 	ld	(hl),#0x10
   1506 23                 4599 	inc	hl
   1507 36 00              4600 	ld	(hl),#0x00
                           4601 ;demo.c:632: cmd.data = 0;
                           4602 ;demo.c:633: cmd.argument = 0x00; // from 182xY to right
   1509 3E 00              4603 	ld	a,#0x00
   150B 32r30s8F           4604 	ld	(#_cmd + 12),a
   150E 32r31s8F           4605 	ld	(#_cmd + 13),a
                           4606 ;demo.c:634: cmd.command = 0xe0; // vram to vram, y only
   1511 01r32s8F           4607 	ld	bc,#_cmd + 14
   1514 3E E0              4608 	ld	a,#0xE0
   1516 02                 4609 	ld	(bc),a
                           4610 ;demo.c:635: cmd.source_x = 182;
   1517 21r24s8F           4611 	ld	hl,#_cmd
   151A 36 B6              4612 	ld	(hl),#0xB6
   151C 23                 4613 	inc	hl
   151D 36 00              4614 	ld	(hl),#0x00
                           4615 ;demo.c:636: cmd.dest_x = 182;
   151F 21r28s8F           4616 	ld	hl, #_cmd + 4
   1522 36 B6              4617 	ld	(hl),#0xB6
   1524 23                 4618 	inc	hl
   1525 36 00              4619 	ld	(hl),#0x00
                           4620 ;demo.c:638: for (y = ender; y < enderend; y+=16) {
   1527 ED 4Br7As8F        4621 	ld	bc,(_ender)
   152B                    4622 00114$:
   152B 79                 4623 	ld	a,c
   152C DD 96 FE           4624 	sub	a,-2 (ix)
   152F 78                 4625 	ld	a,b
   1530 DD 9E FF           4626 	sbc	a,-1 (ix)
   1533 F2r7Ds15           4627 	jp	P,00117$
                           4628 ;demo.c:639: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1536 21r26s8F           4629 	ld	hl,#_cmd + 2
   1539 DD 75 FC           4630 	ld	-4 (ix),l
   153C DD 74 FD           4631 	ld	-3 (ix),h
   153F 3Ar78s8F           4632 	ld	a,(#_ff2+0)
   1542 81                 4633 	add	a,c
   1543 5F                 4634 	ld	e,a
   1544 3Ar79s8F           4635 	ld	a,(#_ff2+1)
   1547 88                 4636 	adc	a,b
   1548 16 00              4637 	ld	d,#0x00
   154A 21r00s00           4638 	ld	hl,#_sintab
   154D 19                 4639 	add	hl,de
   154E 5E                 4640 	ld	e,(hl)
   154F CB 2B              4641 	sra	e
   1551 7B                 4642 	ld	a,e
   1552 17                 4643 	rla	
   1553 9F                 4644 	sbc	a,a
   1554 57                 4645 	ld	d,a
   1555 21 40 01           4646 	ld	hl,#0x0140
   1558 19                 4647 	add	hl,de
   1559 EB                 4648 	ex	de,hl
   155A DD 6E FC           4649 	ld	l,-4 (ix)
   155D DD 66 FD           4650 	ld	h,-3 (ix)
   1560 73                 4651 	ld	(hl),e
   1561 23                 4652 	inc	hl
   1562 72                 4653 	ld	(hl),d
                           4654 ;demo.c:640: cmd.dest_y = y;
   1563 11r2As8F           4655 	ld	de,#_cmd + 6
   1566 EB                 4656 	ex	de,hl
   1567 71                 4657 	ld	(hl),c
   1568 23                 4658 	inc	hl
   1569 70                 4659 	ld	(hl),b
                           4660 ;demo.c:641: vdp_copier(&cmd);
   156A C5                 4661 	push	bc
   156B 21r24s8F           4662 	ld	hl,#_cmd
   156E E5                 4663 	push	hl
   156F CDr00s00           4664 	call	_vdp_copier
   1572 F1                 4665 	pop	af
   1573 C1                 4666 	pop	bc
                           4667 ;demo.c:638: for (y = ender; y < enderend; y+=16) {
   1574 21 10 00           4668 	ld	hl,#0x0010
   1577 09                 4669 	add	hl,bc
   1578 4D                 4670 	ld	c,l
   1579 44                 4671 	ld	b,h
   157A C3r2Bs15           4672 	jp	00114$
   157D                    4673 00117$:
                           4674 ;demo.c:643: ff2+=4;
   157D 21r78s8F           4675 	ld	hl,#_ff2
   1580 7E                 4676 	ld	a,(hl)
   1581 C6 04              4677 	add	a,#0x04
   1583 23                 4678 	inc	hl
   1584 2B                 4679 	dec	hl
   1585 C5                 4680 	push	bc
   1586 4F                 4681 	ld	c, a
   1587 23                 4682 	inc	hl
   1588 7E                 4683 	ld	a, (hl)
   1589 47                 4684 	ld	b, a
   158A 79                 4685 	ld	a, c
   158B 2B                 4686 	dec	hl
   158C 77                 4687 	ld	(hl), a
   158D 78                 4688 	ld	a, b
   158E C1                 4689 	pop	bc
   158F CE 00              4690 	adc	a,#0x00
   1591 23                 4691 	inc	hl
   1592 77                 4692 	ld	(hl),a
   1593                    4693 00109$:
                           4694 ;demo.c:646: bulbflipper = -bulbflipper;
   1593 AF                 4695 	xor	a,a
   1594 FD 21r74s8F        4696 	ld	iy,#_bulbflipper
   1598 3E 00              4697 	ld	a,#0x00
   159A FD 9E 00           4698 	sbc	a,0 (iy)
   159D 21r74s8F           4699 	ld	hl,#_bulbflipper + 0
   15A0 77                 4700 	ld	(hl), a
   15A1 FD 21r74s8F        4701 	ld	iy,#_bulbflipper
   15A5 3E 00              4702 	ld	a,#0x00
   15A7 FD 9E 01           4703 	sbc	a,1 (iy)
   15AA 21r75s8F           4704 	ld	hl,#_bulbflipper + 1
   15AD 77                 4705 	ld	(hl), a
   15AE DD F9              4706 	ld	sp,ix
   15B0 DD E1              4707 	pop	ix
   15B2 C9                 4708 	ret
   15B3                    4709 _bulbs_end::
                           4710 ;demo.c:660: void animplay() {
                           4711 ;	---------------------------------
                           4712 ; Function animplay
                           4713 ; ---------------------------------
   15B3                    4714 _animplay_start::
   15B3                    4715 _animplay:
   15B3 DD E5              4716 	push	ix
   15B5 DD 21 00 00        4717 	ld	ix,#0
   15B9 DD 39              4718 	add	ix,sp
   15BB F5                 4719 	push	af
   15BC 3B                 4720 	dec	sp
                           4721 ;demo.c:665: if (anim_init == 0) {
   15BD 3Ar86s8F           4722 	ld	a,(#_anim_init+0)
   15C0 21r87s8F           4723 	ld	hl,#_anim_init + 1
   15C3 B6                 4724 	or	a,(hl)
   15C4 C2r20s16           4725 	jp	NZ,00117$
                           4726 ;demo.c:667: vdp_register(0,0);
   15C7 21 00 00           4727 	ld	hl,#0x0000
   15CA E5                 4728 	push	hl
   15CB CDr00s00           4729 	call	_vdp_register
   15CE F1                 4730 	pop	af
                           4731 ;demo.c:668: vdp_register(1,0);
   15CF 21 01 00           4732 	ld	hl,#0x0001
   15D2 E5                 4733 	push	hl
   15D3 CDr00s00           4734 	call	_vdp_register
   15D6 F1                 4735 	pop	af
                           4736 ;demo.c:670: bitbuster(tf1,0x8000,VRAM_0);
   15D7 3E 01              4737 	ld	a,#0x01
   15D9 F5                 4738 	push	af
   15DA 33                 4739 	inc	sp
   15DB 21 00 80           4740 	ld	hl,#0x8000
   15DE E5                 4741 	push	hl
   15DF 21r40s30           4742 	ld	hl,#_tf1
   15E2 E5                 4743 	push	hl
   15E3 CDr00s00           4744 	call	_bitbuster
   15E6 F1                 4745 	pop	af
   15E7 F1                 4746 	pop	af
   15E8 33                 4747 	inc	sp
                           4748 ;demo.c:671: bitbuster(tf2,0x0000,VRAM_1);
   15E9 3E 00              4749 	ld	a,#0x00
   15EB F5                 4750 	push	af
   15EC 33                 4751 	inc	sp
   15ED 21 00 00           4752 	ld	hl,#0x0000
   15F0 E5                 4753 	push	hl
   15F1 21r20s5F           4754 	ld	hl,#_tf2
   15F4 E5                 4755 	push	hl
   15F5 CDr00s00           4756 	call	_bitbuster
   15F8 F1                 4757 	pop	af
   15F9 F1                 4758 	pop	af
   15FA 33                 4759 	inc	sp
                           4760 ;demo.c:673: vdp_set_screen5();
   15FB CDr00s00           4761 	call	_vdp_set_screen5
                           4762 ;demo.c:674: vdp_register(1,0x60);
   15FE 21 01 60           4763 	ld	hl,#0x6001
   1601 E5                 4764 	push	hl
   1602 CDr00s00           4765 	call	_vdp_register
   1605 F1                 4766 	pop	af
                           4767 ;demo.c:675: vdp_register(9,2); // 192 lines
   1606 21 09 02           4768 	ld	hl,#0x0209
   1609 E5                 4769 	push	hl
   160A CDr00s00           4770 	call	_vdp_register
   160D F1                 4771 	pop	af
                           4772 ;demo.c:678: anim_init = 1;
   160E 21r86s8F           4773 	ld	hl,#_anim_init + 0
   1611 36 01              4774 	ld	(hl), #0x01
   1613 21r87s8F           4775 	ld	hl,#_anim_init + 1
   1616 36 00              4776 	ld	(hl), #0x00
                           4777 ;demo.c:679: vdp_load_palette(tf_palette);
   1618 21rE0s8E           4778 	ld	hl,#_tf_palette
   161B E5                 4779 	push	hl
   161C CDr00s00           4780 	call	_vdp_load_palette
   161F F1                 4781 	pop	af
                           4782 ;demo.c:682: for (y = 0; y < 96; y+=1) {
   1620                    4783 00117$:
   1620 DD 36 FF 00        4784 	ld	-1 (ix),#0x00
   1624                    4785 00109$:
   1624 DD 7E FF           4786 	ld	a,-1 (ix)
   1627 D6 60              4787 	sub	a,#0x60
   1629 D2rABs16           4788 	jp	NC,00112$
                           4789 ;demo.c:683: cmd.source_x = xo;
   162C ED 5Br7Es8F        4790 	ld	de,(_xo)
   1630 21r24s8F           4791 	ld	hl,#_cmd
   1633 73                 4792 	ld	(hl),e
   1634 23                 4793 	inc	hl
   1635 72                 4794 	ld	(hl),d
                           4795 ;demo.c:684: cmd.source_y = 256+po+yo+(y>>1);
   1636 11r26s8F           4796 	ld	de,#_cmd + 2
   1639 3Ar82s8F           4797 	ld	a,(#_po+0)
   163C 4F                 4798 	ld	c,a
   163D 3Ar83s8F           4799 	ld	a,(#_po+1)
   1640 C6 01              4800 	add	a,#0x01
   1642 47                 4801 	ld	b,a
   1643 21r80s8F           4802 	ld	hl,#_yo
   1646 79                 4803 	ld	a,c
   1647 86                 4804 	add	a,(hl)
   1648 DD 77 FD           4805 	ld	-3 (ix),a
   164B 78                 4806 	ld	a,b
   164C 23                 4807 	inc	hl
   164D 8E                 4808 	adc	a,(hl)
   164E DD 77 FE           4809 	ld	-2 (ix),a
   1651 DD 4E FF           4810 	ld	c,-1 (ix)
   1654 CB 39              4811 	srl	c
   1656 06 00              4812 	ld	b,#0x00
   1658 DD 7E FD           4813 	ld	a,-3 (ix)
   165B 81                 4814 	add	a,c
   165C 4F                 4815 	ld	c,a
   165D DD 7E FE           4816 	ld	a,-2 (ix)
   1660 88                 4817 	adc	a,b
   1661 47                 4818 	ld	b,a
   1662 6B                 4819 	ld	l,e
   1663 62                 4820 	ld	h,d
   1664 71                 4821 	ld	(hl),c
   1665 23                 4822 	inc	hl
   1666 70                 4823 	ld	(hl),b
                           4824 ;demo.c:685: cmd.dest_x = 0;
   1667 21r28s8F           4825 	ld	hl, #_cmd + 4
   166A 36 00              4826 	ld	(hl),#0x00
   166C 23                 4827 	inc	hl
   166D 36 00              4828 	ld	(hl),#0x00
                           4829 ;demo.c:686: cmd.dest_y = (y<<1);
   166F 01r2As8F           4830 	ld	bc,#_cmd + 6
   1672 DD 5E FF           4831 	ld	e,-1 (ix)
   1675 16 00              4832 	ld	d,#0x00
   1677 CB 23              4833 	sla	e
   1679 CB 12              4834 	rl	d
   167B 69                 4835 	ld	l,c
   167C 60                 4836 	ld	h,b
   167D 73                 4837 	ld	(hl),e
   167E 23                 4838 	inc	hl
   167F 72                 4839 	ld	(hl),d
                           4840 ;demo.c:687: cmd.size_x = 128;
   1680 21r2Cs8F           4841 	ld	hl, #_cmd + 8
   1683 36 80              4842 	ld	(hl),#0x80
   1685 23                 4843 	inc	hl
   1686 36 00              4844 	ld	(hl),#0x00
                           4845 ;demo.c:688: cmd.size_y = 1;
   1688 21r2Es8F           4846 	ld	hl, #_cmd + 10
   168B 36 01              4847 	ld	(hl),#0x01
   168D 23                 4848 	inc	hl
   168E 36 00              4849 	ld	(hl),#0x00
                           4850 ;demo.c:689: cmd.data = 0;
                           4851 ;demo.c:690: cmd.argument = 0x00;
   1690 3E 00              4852 	ld	a,#0x00
   1692 32r30s8F           4853 	ld	(#_cmd + 12),a
   1695 32r31s8F           4854 	ld	(#_cmd + 13),a
                           4855 ;demo.c:691: cmd.command = 0xD0;
   1698 3E D0              4856 	ld	a,#0xD0
   169A 32r32s8F           4857 	ld	(#_cmd + 14),a
                           4858 ;demo.c:692: vdp_copier(&cmd);
   169D 21r24s8F           4859 	ld	hl,#_cmd
   16A0 E5                 4860 	push	hl
   16A1 CDr00s00           4861 	call	_vdp_copier
   16A4 F1                 4862 	pop	af
                           4863 ;demo.c:682: for (y = 0; y < 96; y+=1) {
   16A5 DD 34 FF           4864 	inc	-1 (ix)
   16A8 C3r24s16           4865 	jp	00109$
   16AB                    4866 00112$:
                           4867 ;demo.c:695: xo+=128;
   16AB 21r7Es8F           4868 	ld	hl,#_xo
   16AE 7E                 4869 	ld	a,(hl)
   16AF C6 80              4870 	add	a,#0x80
   16B1 23                 4871 	inc	hl
   16B2 2B                 4872 	dec	hl
   16B3 C5                 4873 	push	bc
   16B4 4F                 4874 	ld	c, a
   16B5 23                 4875 	inc	hl
   16B6 7E                 4876 	ld	a, (hl)
   16B7 47                 4877 	ld	b, a
   16B8 79                 4878 	ld	a, c
   16B9 2B                 4879 	dec	hl
   16BA 77                 4880 	ld	(hl), a
   16BB 78                 4881 	ld	a, b
   16BC C1                 4882 	pop	bc
   16BD CE 00              4883 	adc	a,#0x00
   16BF 23                 4884 	inc	hl
   16C0 77                 4885 	ld	(hl),a
                           4886 ;demo.c:696: if (xo >= 256) {
   16C1 3Ar7Es8F           4887 	ld	a,(#_xo+0)
   16C4 D6 00              4888 	sub	a,#0x00
   16C6 3Ar7Fs8F           4889 	ld	a,(#_xo+1)
   16C9 DE 01              4890 	sbc	a,#0x01
   16CB FAr32s17           4891 	jp	M,00108$
                           4892 ;demo.c:697: xo = 0;
   16CE 21r7Es8F           4893 	ld	hl,#_xo + 0
   16D1 36 00              4894 	ld	(hl), #0x00
   16D3 21r7Fs8F           4895 	ld	hl,#_xo + 1
   16D6 36 00              4896 	ld	(hl), #0x00
                           4897 ;demo.c:698: yo+=48;
   16D8 21r80s8F           4898 	ld	hl,#_yo
   16DB 7E                 4899 	ld	a,(hl)
   16DC C6 30              4900 	add	a,#0x30
   16DE 23                 4901 	inc	hl
   16DF 2B                 4902 	dec	hl
   16E0 C5                 4903 	push	bc
   16E1 4F                 4904 	ld	c, a
   16E2 23                 4905 	inc	hl
   16E3 7E                 4906 	ld	a, (hl)
   16E4 47                 4907 	ld	b, a
   16E5 79                 4908 	ld	a, c
   16E6 2B                 4909 	dec	hl
   16E7 77                 4910 	ld	(hl), a
   16E8 78                 4911 	ld	a, b
   16E9 C1                 4912 	pop	bc
   16EA CE 00              4913 	adc	a,#0x00
   16EC 23                 4914 	inc	hl
   16ED 77                 4915 	ld	(hl),a
                           4916 ;demo.c:699: if (yo >= 192) { yo = 0; po+=256; }
   16EE 3Ar80s8F           4917 	ld	a,(#_yo+0)
   16F1 D6 C0              4918 	sub	a,#0xC0
   16F3 3Ar81s8F           4919 	ld	a,(#_yo+1)
   16F6 DE 00              4920 	sbc	a,#0x00
   16F8 FAr1Bs17           4921 	jp	M,00104$
   16FB 21r80s8F           4922 	ld	hl,#_yo + 0
   16FE 36 00              4923 	ld	(hl), #0x00
   1700 21r81s8F           4924 	ld	hl,#_yo + 1
   1703 36 00              4925 	ld	(hl), #0x00
   1705 21r82s8F           4926 	ld	hl,#_po
   1708 7E                 4927 	ld	a,(hl)
   1709 C6 00              4928 	add	a,#0x00
   170B 23                 4929 	inc	hl
   170C 2B                 4930 	dec	hl
   170D C5                 4931 	push	bc
   170E 4F                 4932 	ld	c, a
   170F 23                 4933 	inc	hl
   1710 7E                 4934 	ld	a, (hl)
   1711 47                 4935 	ld	b, a
   1712 79                 4936 	ld	a, c
   1713 2B                 4937 	dec	hl
   1714 77                 4938 	ld	(hl), a
   1715 78                 4939 	ld	a, b
   1716 C1                 4940 	pop	bc
   1717 CE 01              4941 	adc	a,#0x01
   1719 23                 4942 	inc	hl
   171A 77                 4943 	ld	(hl),a
   171B                    4944 00104$:
                           4945 ;demo.c:700: if (po >= 768) {
   171B 3Ar82s8F           4946 	ld	a,(#_po+0)
   171E D6 00              4947 	sub	a,#0x00
   1720 3Ar83s8F           4948 	ld	a,(#_po+1)
   1723 DE 03              4949 	sbc	a,#0x03
   1725 FAr32s17           4950 	jp	M,00108$
                           4951 ;demo.c:701: po = 0;
   1728 21r82s8F           4952 	ld	hl,#_po + 0
   172B 36 00              4953 	ld	(hl), #0x00
   172D 21r83s8F           4954 	ld	hl,#_po + 1
   1730 36 00              4955 	ld	(hl), #0x00
   1732                    4956 00108$:
                           4957 ;demo.c:708: fffaaa++;
   1732 FD 21r84s8F        4958 	ld	iy,#_fffaaa
   1736 FD 34 00           4959 	inc	0 (iy)
   1739 20 07              4960 	jr	NZ,00124$
   173B FD 21r84s8F        4961 	ld	iy,#_fffaaa
   173F FD 34 01           4962 	inc	1 (iy)
   1742                    4963 00124$:
   1742 DD F9              4964 	ld	sp,ix
   1744 DD E1              4965 	pop	ix
   1746 C9                 4966 	ret
   1747                    4967 _animplay_end::
                           4968 ;demo.c:720: void drawbox(int box_x, int box_y, uint8_t x, uint8_t y) {
                           4969 ;	---------------------------------
                           4970 ; Function drawbox
                           4971 ; ---------------------------------
   1747                    4972 _drawbox_start::
   1747                    4973 _drawbox:
   1747 DD E5              4974 	push	ix
   1749 DD 21 00 00        4975 	ld	ix,#0
   174D DD 39              4976 	add	ix,sp
                           4977 ;demo.c:721: dbly = 0;
   174F 21r8Bs8F           4978 	ld	hl,#_dbly + 0
   1752 36 00              4979 	ld	(hl), #0x00
   1754 21r8Cs8F           4980 	ld	hl,#_dbly + 1
   1757 36 00              4981 	ld	(hl), #0x00
                           4982 ;demo.c:723: cmd.source_x = box_x * 42;
   1759 DD 5E 04           4983 	ld	e,4 (ix)
   175C DD 56 05           4984 	ld	d,5 (ix)
   175F 6B                 4985 	ld	l,e
   1760 62                 4986 	ld	h,d
   1761 29                 4987 	add	hl,hl
   1762 29                 4988 	add	hl,hl
   1763 19                 4989 	add	hl,de
   1764 29                 4990 	add	hl,hl
   1765 29                 4991 	add	hl,hl
   1766 19                 4992 	add	hl,de
   1767 29                 4993 	add	hl,hl
   1768 4D                 4994 	ld	c,l
   1769 44                 4995 	ld	b,h
   176A 21r24s8F           4996 	ld	hl,#_cmd
   176D 71                 4997 	ld	(hl),c
   176E 23                 4998 	inc	hl
   176F 70                 4999 	ld	(hl),b
                           5000 ;demo.c:724: cmd.source_y = 768+box_y * 42;
   1770 01r26s8F           5001 	ld	bc,#_cmd + 2
   1773 DD 5E 06           5002 	ld	e,6 (ix)
   1776 DD 56 07           5003 	ld	d,7 (ix)
   1779 6B                 5004 	ld	l,e
   177A 62                 5005 	ld	h,d
   177B 29                 5006 	add	hl,hl
   177C 29                 5007 	add	hl,hl
   177D 19                 5008 	add	hl,de
   177E 29                 5009 	add	hl,hl
   177F 29                 5010 	add	hl,hl
   1780 19                 5011 	add	hl,de
   1781 29                 5012 	add	hl,hl
   1782 EB                 5013 	ex	de,hl
   1783 21 00 03           5014 	ld	hl,#0x0300
   1786 19                 5015 	add	hl,de
   1787 EB                 5016 	ex	de,hl
   1788 69                 5017 	ld	l,c
   1789 60                 5018 	ld	h,b
   178A 73                 5019 	ld	(hl),e
   178B 23                 5020 	inc	hl
   178C 72                 5021 	ld	(hl),d
                           5022 ;demo.c:725: cmd.dest_x = x;
   178D 01r28s8F           5023 	ld	bc,#_cmd + 4
   1790 DD 5E 08           5024 	ld	e,8 (ix)
   1793 16 00              5025 	ld	d,#0x00
   1795 69                 5026 	ld	l,c
   1796 60                 5027 	ld	h,b
   1797 73                 5028 	ld	(hl),e
   1798 23                 5029 	inc	hl
   1799 72                 5030 	ld	(hl),d
                           5031 ;demo.c:726: cmd.dest_y = dbly+y;
   179A 01r2As8F           5032 	ld	bc,#_cmd + 6
   179D DD 5E 09           5033 	ld	e,9 (ix)
   17A0 16 00              5034 	ld	d,#0x00
   17A2 69                 5035 	ld	l,c
   17A3 60                 5036 	ld	h,b
   17A4 73                 5037 	ld	(hl),e
   17A5 23                 5038 	inc	hl
   17A6 72                 5039 	ld	(hl),d
                           5040 ;demo.c:727: cmd.size_x = 42;
   17A7 21r2Cs8F           5041 	ld	hl, #_cmd + 8
   17AA 36 2A              5042 	ld	(hl),#0x2A
   17AC 23                 5043 	inc	hl
   17AD 36 00              5044 	ld	(hl),#0x00
                           5045 ;demo.c:728: cmd.size_y = 42;
   17AF 21r2Es8F           5046 	ld	hl, #_cmd + 10
   17B2 36 2A              5047 	ld	(hl),#0x2A
   17B4 23                 5048 	inc	hl
   17B5 36 00              5049 	ld	(hl),#0x00
                           5050 ;demo.c:729: cmd.data = 0;
                           5051 ;demo.c:730: cmd.argument = 0x00;
   17B7 3E 00              5052 	ld	a,#0x00
   17B9 32r30s8F           5053 	ld	(#_cmd + 12),a
   17BC 32r31s8F           5054 	ld	(#_cmd + 13),a
                           5055 ;demo.c:731: cmd.command = 0x98; // TIMP sprite
   17BF 3E 98              5056 	ld	a,#0x98
   17C1 32r32s8F           5057 	ld	(#_cmd + 14),a
                           5058 ;demo.c:732: vdp_copier(&cmd);
   17C4 D5                 5059 	push	de
   17C5 21r24s8F           5060 	ld	hl,#_cmd
   17C8 E5                 5061 	push	hl
   17C9 CDr00s00           5062 	call	_vdp_copier
   17CC F1                 5063 	pop	af
   17CD D1                 5064 	pop	de
                           5065 ;demo.c:734: prevx = x;
   17CE DD 7E 08           5066 	ld	a,8 (ix)
   17D1 21r8Ds8F           5067 	ld	hl,#_prevx + 0
   17D4 77                 5068 	ld	(hl), a
   17D5 21r8Es8F           5069 	ld	hl,#_prevx + 1
   17D8 36 00              5070 	ld	(hl), #0x00
                           5071 ;demo.c:735: prevy = y;
   17DA 21r8Fs8F           5072 	ld	hl,#_prevy + 0
   17DD 73                 5073 	ld	(hl), e
   17DE 21r90s8F           5074 	ld	hl,#_prevy + 1
   17E1 72                 5075 	ld	(hl), d
                           5076 ;demo.c:736: prevbx = box_x;
   17E2 DD 7E 04           5077 	ld	a,4 (ix)
   17E5 21r91s8F           5078 	ld	hl,#_prevbx + 0
   17E8 77                 5079 	ld	(hl), a
   17E9 DD 7E 05           5080 	ld	a,5 (ix)
   17EC 21r92s8F           5081 	ld	hl,#_prevbx + 1
   17EF 77                 5082 	ld	(hl), a
                           5083 ;demo.c:737: prevby = box_y;
   17F0 DD 7E 06           5084 	ld	a,6 (ix)
   17F3 21r93s8F           5085 	ld	hl,#_prevby + 0
   17F6 77                 5086 	ld	(hl), a
   17F7 DD 7E 07           5087 	ld	a,7 (ix)
   17FA 21r94s8F           5088 	ld	hl,#_prevby + 1
   17FD 77                 5089 	ld	(hl), a
   17FE DD E1              5090 	pop	ix
   1800 C9                 5091 	ret
   1801                    5092 _drawbox_end::
                           5093 ;demo.c:751: void boxes() {
                           5094 ;	---------------------------------
                           5095 ; Function boxes
                           5096 ; ---------------------------------
   1801                    5097 _boxes_start::
   1801                    5098 _boxes:
                           5099 ;demo.c:755: if (bonc == 1) {
   1801 3ArA1s8F           5100 	ld	a,(#_bonc+0)
   1804 D6 01              5101 	sub	a,#0x01
   1806 20 06              5102 	jr	NZ,00156$
   1808 3ArA2s8F           5103 	ld	a,(#_bonc+1)
   180B B7                 5104 	or	a,a
   180C 28 02              5105 	jr	Z,00157$
   180E                    5106 00156$:
   180E 18 4D              5107 	jr	00102$
   1810                    5108 00157$:
                           5109 ;demo.c:757: cmd.source_x = 0;
   1810 21r24s8F           5110 	ld	hl,#_cmd
   1813 36 00              5111 	ld	(hl),#0x00
   1815 23                 5112 	inc	hl
   1816 36 00              5113 	ld	(hl),#0x00
                           5114 ;demo.c:758: cmd.source_y = 256;
   1818 21r26s8F           5115 	ld	hl, #_cmd + 2
   181B 36 00              5116 	ld	(hl),#0x00
   181D 23                 5117 	inc	hl
   181E 36 01              5118 	ld	(hl),#0x01
                           5119 ;demo.c:759: cmd.dest_x = pbx;
   1820 01r28s8F           5120 	ld	bc,#_cmd + 4
   1823 ED 5BrA3s8F        5121 	ld	de,(_pbx)
   1827 69                 5122 	ld	l,c
   1828 60                 5123 	ld	h,b
   1829 73                 5124 	ld	(hl),e
   182A 23                 5125 	inc	hl
   182B 72                 5126 	ld	(hl),d
                           5127 ;demo.c:760: cmd.dest_y = pbt;
   182C 01r2As8F           5128 	ld	bc,#_cmd + 6
   182F ED 5BrA5s8F        5129 	ld	de,(_pbt)
   1833 69                 5130 	ld	l,c
   1834 60                 5131 	ld	h,b
   1835 73                 5132 	ld	(hl),e
   1836 23                 5133 	inc	hl
   1837 72                 5134 	ld	(hl),d
                           5135 ;demo.c:761: cmd.size_x = 42;
   1838 21r2Cs8F           5136 	ld	hl, #_cmd + 8
   183B 36 2A              5137 	ld	(hl),#0x2A
   183D 23                 5138 	inc	hl
   183E 36 00              5139 	ld	(hl),#0x00
                           5140 ;demo.c:762: cmd.size_y = 42;
   1840 21r2Es8F           5141 	ld	hl, #_cmd + 10
   1843 36 2A              5142 	ld	(hl),#0x2A
   1845 23                 5143 	inc	hl
   1846 36 00              5144 	ld	(hl),#0x00
                           5145 ;demo.c:763: cmd.data = 0;
                           5146 ;demo.c:764: cmd.argument = 0x00;
   1848 3E 00              5147 	ld	a,#0x00
   184A 32r30s8F           5148 	ld	(#_cmd + 12),a
   184D 32r31s8F           5149 	ld	(#_cmd + 13),a
                           5150 ;demo.c:765: cmd.command = 0xD0; // HMMM
   1850 3E D0              5151 	ld	a,#0xD0
   1852 32r32s8F           5152 	ld	(#_cmd + 14),a
                           5153 ;demo.c:766: vdp_copier(&cmd);
   1855 21r24s8F           5154 	ld	hl,#_cmd
   1858 E5                 5155 	push	hl
   1859 CDr00s00           5156 	call	_vdp_copier
   185C F1                 5157 	pop	af
   185D                    5158 00102$:
                           5159 ;demo.c:770: if (boxes_init == 0) {
   185D AF                 5160 	xor	a,a
   185E 21r88s8F           5161 	ld	hl,#_boxes_init + 0
   1861 B6                 5162 	or	a,(hl)
   1862 C2rF8s18           5163 	jp	NZ,00104$
                           5164 ;demo.c:771: boxes_init = 1;
   1865 FD 21r88s8F        5165 	ld	iy,#_boxes_init
   1869 FD 36 00 01        5166 	ld	0 (iy),#0x01
                           5167 ;demo.c:773: cmd.size_x = 8;
   186D 21r2Cs8F           5168 	ld	hl, #_cmd + 8
   1870 36 08              5169 	ld	(hl),#0x08
   1872 23                 5170 	inc	hl
   1873 36 00              5171 	ld	(hl),#0x00
                           5172 ;demo.c:774: cmd.size_y = 212;
   1875 21r2Es8F           5173 	ld	hl, #_cmd + 10
   1878 36 D4              5174 	ld	(hl),#0xD4
   187A 23                 5175 	inc	hl
   187B 36 00              5176 	ld	(hl),#0x00
                           5177 ;demo.c:775: cmd.data = 0;
                           5178 ;demo.c:776: cmd.argument = 0x00; // from 70xY to left
   187D 3E 00              5179 	ld	a,#0x00
   187F 32r30s8F           5180 	ld	(#_cmd + 12),a
   1882 32r31s8F           5181 	ld	(#_cmd + 13),a
                           5182 ;demo.c:777: cmd.command = 0xd0; // vram to vram, y only
   1885 01r32s8F           5183 	ld	bc,#_cmd + 14
   1888 3E D0              5184 	ld	a,#0xD0
   188A 02                 5185 	ld	(bc),a
                           5186 ;demo.c:778: cmd.source_x = 248;
   188B 21r24s8F           5187 	ld	hl,#_cmd
   188E 36 F8              5188 	ld	(hl),#0xF8
   1890 23                 5189 	inc	hl
   1891 36 00              5190 	ld	(hl),#0x00
                           5191 ;demo.c:779: cmd.source_y = 0;
   1893 21r26s8F           5192 	ld	hl, #_cmd + 2
   1896 36 00              5193 	ld	(hl),#0x00
   1898 23                 5194 	inc	hl
   1899 36 00              5195 	ld	(hl),#0x00
                           5196 ;demo.c:780: cmd.dest_y = 0;
   189B 21r2As8F           5197 	ld	hl, #_cmd + 6
   189E 36 00              5198 	ld	(hl),#0x00
   18A0 23                 5199 	inc	hl
   18A1 36 00              5200 	ld	(hl),#0x00
                           5201 ;demo.c:782: for (x = 248; x >= 0; x-=8) {
   18A3 01 F8 00           5202 	ld	bc,#0x00F8
   18A6                    5203 00131$:
   18A6 78                 5204 	ld	a,b
   18A7 CB 7F              5205 	bit	7,a
   18A9 20 38              5206 	jr	NZ,00134$
                           5207 ;demo.c:783: waitVB();
   18AB 76                 5208 		halt 
                           5209 ;demo.c:784: cmd.dest_x = x;
   18AC 11r28s8F           5210 	ld	de,#_cmd + 4
   18AF EB                 5211 	ex	de,hl
   18B0 71                 5212 	ld	(hl),c
   18B1 23                 5213 	inc	hl
   18B2 70                 5214 	ld	(hl),b
                           5215 ;demo.c:785: cmd.dest_y = 0;
   18B3 11r2As8F           5216 	ld	de,#_cmd + 6
   18B6 EB                 5217 	ex	de,hl
   18B7 36 00              5218 	ld	(hl),#0x00
   18B9 23                 5219 	inc	hl
   18BA 36 00              5220 	ld	(hl),#0x00
                           5221 ;demo.c:786: vdp_copier(&cmd);
   18BC C5                 5222 	push	bc
   18BD 21r24s8F           5223 	ld	hl,#_cmd
   18C0 E5                 5224 	push	hl
   18C1 CDr00s00           5225 	call	_vdp_copier
   18C4 F1                 5226 	pop	af
   18C5 C1                 5227 	pop	bc
                           5228 ;demo.c:787: cmd.dest_y = 256;
   18C6 11r2As8F           5229 	ld	de,#_cmd + 6
   18C9 EB                 5230 	ex	de,hl
   18CA 36 00              5231 	ld	(hl),#0x00
   18CC 23                 5232 	inc	hl
   18CD 36 01              5233 	ld	(hl),#0x01
                           5234 ;demo.c:788: vdp_copier(&cmd);
   18CF C5                 5235 	push	bc
   18D0 21r24s8F           5236 	ld	hl,#_cmd
   18D3 E5                 5237 	push	hl
   18D4 CDr00s00           5238 	call	_vdp_copier
   18D7 F1                 5239 	pop	af
   18D8 C1                 5240 	pop	bc
                           5241 ;demo.c:782: for (x = 248; x >= 0; x-=8) {
   18D9 79                 5242 	ld	a,c
   18DA C6 F8              5243 	add	a,#0xF8
   18DC 4F                 5244 	ld	c,a
   18DD 78                 5245 	ld	a,b
   18DE CE FF              5246 	adc	a,#0xFF
   18E0 47                 5247 	ld	b,a
   18E1 18 C3              5248 	jr	00131$
   18E3                    5249 00134$:
                           5250 ;demo.c:791: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   18E3 21 08 B4           5251 	ld	hl,#0xB408
   18E6 E5                 5252 	push	hl
   18E7 21r7Cs1B           5253 	ld	hl,#__str_9
   18EA E5                 5254 	push	hl
   18EB CDr20s11           5255 	call	_drawsine
   18EE F1                 5256 	pop	af
   18EF F1                 5257 	pop	af
                           5258 ;demo.c:793: vdp_load_palette(boxes_palette);
   18F0 21r00s8F           5259 	ld	hl,#_boxes_palette
   18F3 E5                 5260 	push	hl
   18F4 CDr00s00           5261 	call	_vdp_load_palette
   18F7 F1                 5262 	pop	af
   18F8                    5263 00104$:
                           5264 ;demo.c:796: if (bt >= 80) bt+=6;
   18F8 3Ar99s8F           5265 	ld	a,(#_bt+0)
   18FB D6 50              5266 	sub	a,#0x50
   18FD 3Ar9As8F           5267 	ld	a,(#_bt+1)
   1900 DE 00              5268 	sbc	a,#0x00
   1902 FAr1Bs19           5269 	jp	M,00106$
   1905 21r99s8F           5270 	ld	hl,#_bt
   1908 7E                 5271 	ld	a,(hl)
   1909 C6 06              5272 	add	a,#0x06
   190B 23                 5273 	inc	hl
   190C 2B                 5274 	dec	hl
   190D C5                 5275 	push	bc
   190E 4F                 5276 	ld	c, a
   190F 23                 5277 	inc	hl
   1910 7E                 5278 	ld	a, (hl)
   1911 47                 5279 	ld	b, a
   1912 79                 5280 	ld	a, c
   1913 2B                 5281 	dec	hl
   1914 77                 5282 	ld	(hl), a
   1915 78                 5283 	ld	a, b
   1916 C1                 5284 	pop	bc
   1917 CE 00              5285 	adc	a,#0x00
   1919 23                 5286 	inc	hl
   191A 77                 5287 	ld	(hl),a
   191B                    5288 00106$:
                           5289 ;demo.c:797: if (bt < 80 && bt >= 60) bt+=5;
   191B 3Ar99s8F           5290 	ld	a,(#_bt+0)
   191E D6 50              5291 	sub	a,#0x50
   1920 3Ar9As8F           5292 	ld	a,(#_bt+1)
   1923 DE 00              5293 	sbc	a,#0x00
   1925 F2r4Bs19           5294 	jp	P,00108$
   1928 3Ar99s8F           5295 	ld	a,(#_bt+0)
   192B D6 3C              5296 	sub	a,#0x3C
   192D 3Ar9As8F           5297 	ld	a,(#_bt+1)
   1930 DE 00              5298 	sbc	a,#0x00
   1932 FAr4Bs19           5299 	jp	M,00108$
   1935 21r99s8F           5300 	ld	hl,#_bt
   1938 7E                 5301 	ld	a,(hl)
   1939 C6 05              5302 	add	a,#0x05
   193B 23                 5303 	inc	hl
   193C 2B                 5304 	dec	hl
   193D C5                 5305 	push	bc
   193E 4F                 5306 	ld	c, a
   193F 23                 5307 	inc	hl
   1940 7E                 5308 	ld	a, (hl)
   1941 47                 5309 	ld	b, a
   1942 79                 5310 	ld	a, c
   1943 2B                 5311 	dec	hl
   1944 77                 5312 	ld	(hl), a
   1945 78                 5313 	ld	a, b
   1946 C1                 5314 	pop	bc
   1947 CE 00              5315 	adc	a,#0x00
   1949 23                 5316 	inc	hl
   194A 77                 5317 	ld	(hl),a
   194B                    5318 00108$:
                           5319 ;demo.c:798: if (bt < 60 && bt >= 40) bt+=4;
   194B 3Ar99s8F           5320 	ld	a,(#_bt+0)
   194E D6 3C              5321 	sub	a,#0x3C
   1950 3Ar9As8F           5322 	ld	a,(#_bt+1)
   1953 DE 00              5323 	sbc	a,#0x00
   1955 F2r7Bs19           5324 	jp	P,00111$
   1958 3Ar99s8F           5325 	ld	a,(#_bt+0)
   195B D6 28              5326 	sub	a,#0x28
   195D 3Ar9As8F           5327 	ld	a,(#_bt+1)
   1960 DE 00              5328 	sbc	a,#0x00
   1962 FAr7Bs19           5329 	jp	M,00111$
   1965 21r99s8F           5330 	ld	hl,#_bt
   1968 7E                 5331 	ld	a,(hl)
   1969 C6 04              5332 	add	a,#0x04
   196B 23                 5333 	inc	hl
   196C 2B                 5334 	dec	hl
   196D C5                 5335 	push	bc
   196E 4F                 5336 	ld	c, a
   196F 23                 5337 	inc	hl
   1970 7E                 5338 	ld	a, (hl)
   1971 47                 5339 	ld	b, a
   1972 79                 5340 	ld	a, c
   1973 2B                 5341 	dec	hl
   1974 77                 5342 	ld	(hl), a
   1975 78                 5343 	ld	a, b
   1976 C1                 5344 	pop	bc
   1977 CE 00              5345 	adc	a,#0x00
   1979 23                 5346 	inc	hl
   197A 77                 5347 	ld	(hl),a
   197B                    5348 00111$:
                           5349 ;demo.c:799: if (bt < 40 && bt >= 10) bt+=3;
   197B 3Ar99s8F           5350 	ld	a,(#_bt+0)
   197E D6 28              5351 	sub	a,#0x28
   1980 3Ar9As8F           5352 	ld	a,(#_bt+1)
   1983 DE 00              5353 	sbc	a,#0x00
   1985 F2rABs19           5354 	jp	P,00114$
   1988 3Ar99s8F           5355 	ld	a,(#_bt+0)
   198B D6 0A              5356 	sub	a,#0x0A
   198D 3Ar9As8F           5357 	ld	a,(#_bt+1)
   1990 DE 00              5358 	sbc	a,#0x00
   1992 FArABs19           5359 	jp	M,00114$
   1995 21r99s8F           5360 	ld	hl,#_bt
   1998 7E                 5361 	ld	a,(hl)
   1999 C6 03              5362 	add	a,#0x03
   199B 23                 5363 	inc	hl
   199C 2B                 5364 	dec	hl
   199D C5                 5365 	push	bc
   199E 4F                 5366 	ld	c, a
   199F 23                 5367 	inc	hl
   19A0 7E                 5368 	ld	a, (hl)
   19A1 47                 5369 	ld	b, a
   19A2 79                 5370 	ld	a, c
   19A3 2B                 5371 	dec	hl
   19A4 77                 5372 	ld	(hl), a
   19A5 78                 5373 	ld	a, b
   19A6 C1                 5374 	pop	bc
   19A7 CE 00              5375 	adc	a,#0x00
   19A9 23                 5376 	inc	hl
   19AA 77                 5377 	ld	(hl),a
   19AB                    5378 00114$:
                           5379 ;demo.c:800: if (bt < 10 ) bt+=2;
   19AB 3Ar99s8F           5380 	ld	a,(#_bt+0)
   19AE D6 0A              5381 	sub	a,#0x0A
   19B0 3Ar9As8F           5382 	ld	a,(#_bt+1)
   19B3 DE 00              5383 	sbc	a,#0x00
   19B5 F2rCEs19           5384 	jp	P,00117$
   19B8 21r99s8F           5385 	ld	hl,#_bt
   19BB 7E                 5386 	ld	a,(hl)
   19BC C6 02              5387 	add	a,#0x02
   19BE 23                 5388 	inc	hl
   19BF 2B                 5389 	dec	hl
   19C0 C5                 5390 	push	bc
   19C1 4F                 5391 	ld	c, a
   19C2 23                 5392 	inc	hl
   19C3 7E                 5393 	ld	a, (hl)
   19C4 47                 5394 	ld	b, a
   19C5 79                 5395 	ld	a, c
   19C6 2B                 5396 	dec	hl
   19C7 77                 5397 	ld	(hl), a
   19C8 78                 5398 	ld	a, b
   19C9 C1                 5399 	pop	bc
   19CA CE 00              5400 	adc	a,#0x00
   19CC 23                 5401 	inc	hl
   19CD 77                 5402 	ld	(hl),a
   19CE                    5403 00117$:
                           5404 ;demo.c:804: cmd.source_x = bx;
   19CE ED 4Br95s8F        5405 	ld	bc,(_bx)
   19D2 21r24s8F           5406 	ld	hl,#_cmd
   19D5 71                 5407 	ld	(hl),c
   19D6 23                 5408 	inc	hl
   19D7 70                 5409 	ld	(hl),b
                           5410 ;demo.c:805: cmd.source_y = bt;
   19D8 01r26s8F           5411 	ld	bc,#_cmd + 2
   19DB ED 5Br99s8F        5412 	ld	de,(_bt)
   19DF 69                 5413 	ld	l,c
   19E0 60                 5414 	ld	h,b
   19E1 73                 5415 	ld	(hl),e
   19E2 23                 5416 	inc	hl
   19E3 72                 5417 	ld	(hl),d
                           5418 ;demo.c:806: cmd.dest_x = 0;
   19E4 21r28s8F           5419 	ld	hl, #_cmd + 4
   19E7 36 00              5420 	ld	(hl),#0x00
   19E9 23                 5421 	inc	hl
   19EA 36 00              5422 	ld	(hl),#0x00
                           5423 ;demo.c:807: cmd.dest_y = 256;
   19EC 21r2As8F           5424 	ld	hl, #_cmd + 6
   19EF 36 00              5425 	ld	(hl),#0x00
   19F1 23                 5426 	inc	hl
   19F2 36 01              5427 	ld	(hl),#0x01
                           5428 ;demo.c:808: cmd.size_x = 42;
   19F4 21r2Cs8F           5429 	ld	hl, #_cmd + 8
   19F7 36 2A              5430 	ld	(hl),#0x2A
   19F9 23                 5431 	inc	hl
   19FA 36 00              5432 	ld	(hl),#0x00
                           5433 ;demo.c:809: cmd.size_y = 42;
   19FC 21r2Es8F           5434 	ld	hl, #_cmd + 10
   19FF 36 2A              5435 	ld	(hl),#0x2A
   1A01 23                 5436 	inc	hl
   1A02 36 00              5437 	ld	(hl),#0x00
                           5438 ;demo.c:810: cmd.data = 0;
                           5439 ;demo.c:811: cmd.argument = 0x00;
   1A04 3E 00              5440 	ld	a,#0x00
   1A06 32r30s8F           5441 	ld	(#_cmd + 12),a
   1A09 32r31s8F           5442 	ld	(#_cmd + 13),a
                           5443 ;demo.c:812: cmd.command = 0xD0; // HMMM
   1A0C 3E D0              5444 	ld	a,#0xD0
   1A0E 32r32s8F           5445 	ld	(#_cmd + 14),a
                           5446 ;demo.c:813: vdp_copier(&cmd);
   1A11 21r24s8F           5447 	ld	hl,#_cmd
   1A14 E5                 5448 	push	hl
   1A15 CDr00s00           5449 	call	_vdp_copier
   1A18 F1                 5450 	pop	af
                           5451 ;demo.c:815: pbx = bx;
   1A19 2Ar95s8F           5452 	ld	hl,(_bx)
   1A1C FD 21rA3s8F        5453 	ld	iy,#_pbx
   1A20 FD 75 00           5454 	ld	0 (iy),l
   1A23 FD 21rA3s8F        5455 	ld	iy,#_pbx
   1A27 FD 74 01           5456 	ld	1 (iy),h
                           5457 ;demo.c:816: pbt = bt;
   1A2A 2Ar99s8F           5458 	ld	hl,(_bt)
   1A2D FD 21rA5s8F        5459 	ld	iy,#_pbt
   1A31 FD 75 00           5460 	ld	0 (iy),l
   1A34 FD 21rA5s8F        5461 	ld	iy,#_pbt
   1A38 FD 74 01           5462 	ld	1 (iy),h
                           5463 ;demo.c:818: waitVB();
   1A3B 76                 5464 		halt 
                           5465 ;demo.c:820: drawbox(bxx,byy,bx,bt);
   1A3C 21r99s8F           5466 	ld	hl,#_bt + 0
   1A3F 4E                 5467 	ld	c,(hl)
   1A40 21r95s8F           5468 	ld	hl,#_bx + 0
   1A43 46                 5469 	ld	b,(hl)
   1A44 79                 5470 	ld	a,c
   1A45 F5                 5471 	push	af
   1A46 33                 5472 	inc	sp
   1A47 C5                 5473 	push	bc
   1A48 33                 5474 	inc	sp
   1A49 2Ar9Ds8F           5475 	ld	hl,(_byy)
   1A4C E5                 5476 	push	hl
   1A4D 2Ar9Bs8F           5477 	ld	hl,(_bxx)
   1A50 E5                 5478 	push	hl
   1A51 CDr47s17           5479 	call	_drawbox
   1A54 F1                 5480 	pop	af
   1A55 F1                 5481 	pop	af
   1A56 F1                 5482 	pop	af
                           5483 ;demo.c:822: waitVB();
   1A57 76                 5484 		halt 
                           5485 ;demo.c:824: bonc = 1;
   1A58 21rA1s8F           5486 	ld	hl,#_bonc + 0
   1A5B 36 01              5487 	ld	(hl), #0x01
   1A5D 21rA2s8F           5488 	ld	hl,#_bonc + 1
   1A60 36 00              5489 	ld	(hl), #0x00
                           5490 ;demo.c:825: if (bt > by) {
   1A62 21r97s8F           5491 	ld	hl,#_by
   1A65 7E                 5492 	ld	a,(hl)
   1A66 FD 21r99s8F        5493 	ld	iy,#_bt
   1A6A FD 96 00           5494 	sub	a,0 (iy)
   1A6D 23                 5495 	inc	hl
   1A6E 7E                 5496 	ld	a,(hl)
   1A6F FD 21r99s8F        5497 	ld	iy,#_bt
   1A73 FD 9E 01           5498 	sbc	a,1 (iy)
   1A76 F0                 5499 	ret	P
                           5500 ;demo.c:827: bt = 0;
   1A77 21r99s8F           5501 	ld	hl,#_bt + 0
   1A7A 36 00              5502 	ld	(hl), #0x00
   1A7C 21r9As8F           5503 	ld	hl,#_bt + 1
   1A7F 36 00              5504 	ld	(hl), #0x00
                           5505 ;demo.c:828: if (by > 0) {
   1A81 3E 00              5506 	ld	a,#0x00
   1A83 FD 21r97s8F        5507 	ld	iy,#_by
   1A87 FD 96 00           5508 	sub	a,0 (iy)
   1A8A 3E 00              5509 	ld	a,#0x00
   1A8C FD 21r97s8F        5510 	ld	iy,#_by
   1A90 FD 9E 01           5511 	sbc	a,1 (iy)
   1A93 F2rF9s1A           5512 	jp	P,00127$
                           5513 ;demo.c:829: bonc = 0;
   1A96 21rA1s8F           5514 	ld	hl,#_bonc + 0
   1A99 36 00              5515 	ld	(hl), #0x00
   1A9B 21rA2s8F           5516 	ld	hl,#_bonc + 1
   1A9E 36 00              5517 	ld	(hl), #0x00
                           5518 ;demo.c:830: by-=16;
   1AA0 21r97s8F           5519 	ld	hl,#_by
   1AA3 7E                 5520 	ld	a,(hl)
   1AA4 C6 F0              5521 	add	a,#0xF0
   1AA6 77                 5522 	ld	(hl),a
   1AA7 23                 5523 	inc	hl
   1AA8 7E                 5524 	ld	a,(hl)
   1AA9 CE FF              5525 	adc	a,#0xFF
   1AAB 77                 5526 	ld	(hl),a
                           5527 ;demo.c:831: bxx++;
   1AAC FD 21r9Bs8F        5528 	ld	iy,#_bxx
   1AB0 FD 34 00           5529 	inc	0 (iy)
   1AB3 20 07              5530 	jr	NZ,00158$
   1AB5 FD 21r9Bs8F        5531 	ld	iy,#_bxx
   1AB9 FD 34 01           5532 	inc	1 (iy)
   1ABC                    5533 00158$:
                           5534 ;demo.c:832: if (bxx >= 4) { bxx = 0; byy++; }
   1ABC 3Ar9Bs8F           5535 	ld	a,(#_bxx+0)
   1ABF D6 04              5536 	sub	a,#0x04
   1AC1 3Ar9Cs8F           5537 	ld	a,(#_bxx+1)
   1AC4 DE 00              5538 	sbc	a,#0x00
   1AC6 FArE3s1A           5539 	jp	M,00119$
   1AC9 21r9Bs8F           5540 	ld	hl,#_bxx + 0
   1ACC 36 00              5541 	ld	(hl), #0x00
   1ACE 21r9Cs8F           5542 	ld	hl,#_bxx + 1
   1AD1 36 00              5543 	ld	(hl), #0x00
   1AD3 FD 21r9Ds8F        5544 	ld	iy,#_byy
   1AD7 FD 34 00           5545 	inc	0 (iy)
   1ADA 20 07              5546 	jr	NZ,00159$
   1ADC FD 21r9Ds8F        5547 	ld	iy,#_byy
   1AE0 FD 34 01           5548 	inc	1 (iy)
   1AE3                    5549 00159$:
   1AE3                    5550 00119$:
                           5551 ;demo.c:833: if (byy >= 2) { byy = 0; }
   1AE3 3Ar9Ds8F           5552 	ld	a,(#_byy+0)
   1AE6 D6 02              5553 	sub	a,#0x02
   1AE8 3Ar9Es8F           5554 	ld	a,(#_byy+1)
   1AEB DE 00              5555 	sbc	a,#0x00
   1AED F8                 5556 	ret	M
   1AEE 21r9Ds8F           5557 	ld	hl,#_byy + 0
   1AF1 36 00              5558 	ld	(hl), #0x00
   1AF3 21r9Es8F           5559 	ld	hl,#_byy + 1
   1AF6 36 00              5560 	ld	(hl), #0x00
   1AF8 C9                 5561 	ret
   1AF9                    5562 00127$:
                           5563 ;demo.c:835: bx-=21;
   1AF9 21r95s8F           5564 	ld	hl,#_bx
   1AFC 7E                 5565 	ld	a,(hl)
   1AFD C6 EB              5566 	add	a,#0xEB
   1AFF 77                 5567 	ld	(hl),a
   1B00 23                 5568 	inc	hl
   1B01 7E                 5569 	ld	a,(hl)
   1B02 CE FF              5570 	adc	a,#0xFF
   1B04 77                 5571 	ld	(hl),a
                           5572 ;demo.c:836: bo+=11;
   1B05 21r9Fs8F           5573 	ld	hl,#_bo
   1B08 7E                 5574 	ld	a,(hl)
   1B09 C6 0B              5575 	add	a,#0x0B
   1B0B 23                 5576 	inc	hl
   1B0C 2B                 5577 	dec	hl
   1B0D C5                 5578 	push	bc
   1B0E 4F                 5579 	ld	c, a
   1B0F 23                 5580 	inc	hl
   1B10 7E                 5581 	ld	a, (hl)
   1B11 47                 5582 	ld	b, a
   1B12 79                 5583 	ld	a, c
   1B13 2B                 5584 	dec	hl
   1B14 77                 5585 	ld	(hl), a
   1B15 78                 5586 	ld	a, b
   1B16 C1                 5587 	pop	bc
   1B17 CE 00              5588 	adc	a,#0x00
   1B19 23                 5589 	inc	hl
   1B1A 77                 5590 	ld	(hl),a
                           5591 ;demo.c:837: if (bo > 192) bo = 0;
   1B1B 3E C0              5592 	ld	a,#0xC0
   1B1D FD 21r9Fs8F        5593 	ld	iy,#_bo
   1B21 FD 96 00           5594 	sub	a,0 (iy)
   1B24 3E 00              5595 	ld	a,#0x00
   1B26 FD 21r9Fs8F        5596 	ld	iy,#_bo
   1B2A FD 9E 01           5597 	sbc	a,1 (iy)
   1B2D F2r3As1B           5598 	jp	P,00123$
   1B30 21r9Fs8F           5599 	ld	hl,#_bo + 0
   1B33 36 00              5600 	ld	(hl), #0x00
   1B35 21rA0s8F           5601 	ld	hl,#_bo + 1
   1B38 36 00              5602 	ld	(hl), #0x00
   1B3A                    5603 00123$:
                           5604 ;demo.c:838: by=84+bo;
   1B3A 21r97s8F           5605 	ld	hl,#_by
   1B3D 3Ar9Fs8F           5606 	ld	a,(#_bo+0)
   1B40 C6 54              5607 	add	a,#0x54
   1B42 77                 5608 	ld	(hl),a
   1B43 3ArA0s8F           5609 	ld	a,(#_bo+1)
   1B46 CE 00              5610 	adc	a,#0x00
   1B48 23                 5611 	inc	hl
   1B49 77                 5612 	ld	(hl),a
                           5613 ;demo.c:839: if (bx <= 0) {
   1B4A 3E 00              5614 	ld	a,#0x00
   1B4C FD 21r95s8F        5615 	ld	iy,#_bx
   1B50 FD 96 00           5616 	sub	a,0 (iy)
   1B53 3E 00              5617 	ld	a,#0x00
   1B55 FD 21r95s8F        5618 	ld	iy,#_bx
   1B59 FD 9E 01           5619 	sbc	a,1 (iy)
   1B5C F8                 5620 	ret	M
                           5621 ;demo.c:840: bx = 256;
   1B5D 21r95s8F           5622 	ld	hl,#_bx + 0
   1B60 36 00              5623 	ld	(hl), #0x00
   1B62 21r96s8F           5624 	ld	hl,#_bx + 1
   1B65 36 01              5625 	ld	(hl), #0x01
                           5626 ;demo.c:841: bo = 0;
   1B67 21r9Fs8F           5627 	ld	hl,#_bo + 0
   1B6A 36 00              5628 	ld	(hl), #0x00
   1B6C 21rA0s8F           5629 	ld	hl,#_bo + 1
   1B6F 36 00              5630 	ld	(hl), #0x00
                           5631 ;demo.c:842: by = 84;
   1B71 21r97s8F           5632 	ld	hl,#_by + 0
   1B74 36 54              5633 	ld	(hl), #0x54
   1B76 21r98s8F           5634 	ld	hl,#_by + 1
   1B79 36 00              5635 	ld	(hl), #0x00
   1B7B C9                 5636 	ret
   1B7C                    5637 _boxes_end::
   1B7C                    5638 __str_9:
   1B7C 4C 45 54 20 55 53  5639 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1BA7 00                 5640 	.db 0x00
                           5641 ;demo.c:853: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5642 ;	---------------------------------
                           5643 ; Function drawtritile
                           5644 ; ---------------------------------
   1BA8                    5645 _drawtritile_start::
   1BA8                    5646 _drawtritile:
   1BA8 DD E5              5647 	push	ix
   1BAA DD 21 00 00        5648 	ld	ix,#0
   1BAE DD 39              5649 	add	ix,sp
                           5650 ;demo.c:854: cmd.source_x = tx;
   1BB0 DD 4E 04           5651 	ld	c,4 (ix)
   1BB3 06 00              5652 	ld	b,#0x00
   1BB5 21r24s8F           5653 	ld	hl,#_cmd
   1BB8 71                 5654 	ld	(hl),c
   1BB9 23                 5655 	inc	hl
   1BBA 70                 5656 	ld	(hl),b
                           5657 ;demo.c:855: cmd.source_y = ty-1;
   1BBB 01r26s8F           5658 	ld	bc,#_cmd + 2
   1BBE DD 5E 05           5659 	ld	e,5 (ix)
   1BC1 DD 56 06           5660 	ld	d,6 (ix)
   1BC4 1B                 5661 	dec	de
   1BC5 69                 5662 	ld	l,c
   1BC6 60                 5663 	ld	h,b
   1BC7 73                 5664 	ld	(hl),e
   1BC8 23                 5665 	inc	hl
   1BC9 72                 5666 	ld	(hl),d
                           5667 ;demo.c:856: cmd.dest_x = x;
   1BCA 01r28s8F           5668 	ld	bc,#_cmd + 4
   1BCD DD 5E 07           5669 	ld	e,7 (ix)
   1BD0 16 00              5670 	ld	d,#0x00
   1BD2 69                 5671 	ld	l,c
   1BD3 60                 5672 	ld	h,b
   1BD4 73                 5673 	ld	(hl),e
   1BD5 23                 5674 	inc	hl
   1BD6 72                 5675 	ld	(hl),d
                           5676 ;demo.c:857: cmd.dest_y = y;
   1BD7 01r2As8F           5677 	ld	bc,#_cmd + 6
   1BDA DD 5E 08           5678 	ld	e,8 (ix)
   1BDD 16 00              5679 	ld	d,#0x00
   1BDF 69                 5680 	ld	l,c
   1BE0 60                 5681 	ld	h,b
   1BE1 73                 5682 	ld	(hl),e
   1BE2 23                 5683 	inc	hl
   1BE3 72                 5684 	ld	(hl),d
                           5685 ;demo.c:858: cmd.size_x = 16;
   1BE4 21r2Cs8F           5686 	ld	hl, #_cmd + 8
   1BE7 36 10              5687 	ld	(hl),#0x10
   1BE9 23                 5688 	inc	hl
   1BEA 36 00              5689 	ld	(hl),#0x00
                           5690 ;demo.c:859: cmd.size_y = 16;
   1BEC 21r2Es8F           5691 	ld	hl, #_cmd + 10
   1BEF 36 10              5692 	ld	(hl),#0x10
   1BF1 23                 5693 	inc	hl
   1BF2 36 00              5694 	ld	(hl),#0x00
                           5695 ;demo.c:860: cmd.data = 0;
                           5696 ;demo.c:861: cmd.argument = 0x00;
   1BF4 3E 00              5697 	ld	a,#0x00
   1BF6 32r30s8F           5698 	ld	(#_cmd + 12),a
   1BF9 32r31s8F           5699 	ld	(#_cmd + 13),a
                           5700 ;demo.c:862: cmd.command = 0xd0; // HMMM
   1BFC 3E D0              5701 	ld	a,#0xD0
   1BFE 32r32s8F           5702 	ld	(#_cmd + 14),a
                           5703 ;demo.c:863: vdp_copier(&cmd);
   1C01 21r24s8F           5704 	ld	hl,#_cmd
   1C04 E5                 5705 	push	hl
   1C05 CDr00s00           5706 	call	_vdp_copier
   1C08 F1                 5707 	pop	af
   1C09 DD E1              5708 	pop	ix
   1C0B C9                 5709 	ret
   1C0C                    5710 _drawtritile_end::
                           5711 ;demo.c:866: void drawtilescreen(char* tripic) {
                           5712 ;	---------------------------------
                           5713 ; Function drawtilescreen
                           5714 ; ---------------------------------
   1C0C                    5715 _drawtilescreen_start::
   1C0C                    5716 _drawtilescreen:
   1C0C DD E5              5717 	push	ix
   1C0E DD 21 00 00        5718 	ld	ix,#0
   1C12 DD 39              5719 	add	ix,sp
   1C14 21 F8 FF           5720 	ld	hl,#-8
   1C17 39                 5721 	add	hl,sp
   1C18 F9                 5722 	ld	sp,hl
                           5723 ;demo.c:867: int x = 0;
   1C19 DD 36 FE 00        5724 	ld	-2 (ix),#0x00
   1C1D DD 36 FF 00        5725 	ld	-1 (ix),#0x00
                           5726 ;demo.c:870: while(i < 256) {
   1C21 DD 36 FC 00        5727 	ld	-4 (ix),#0x00
   1C25 DD 36 FD 00        5728 	ld	-3 (ix),#0x00
   1C29 DD 36 FA 00        5729 	ld	-6 (ix),#0x00
   1C2D DD 36 FB 00        5730 	ld	-5 (ix),#0x00
   1C31                    5731 00103$:
   1C31 DD 7E FA           5732 	ld	a,-6 (ix)
   1C34 D6 00              5733 	sub	a,#0x00
   1C36 DD 7E FB           5734 	ld	a,-5 (ix)
   1C39 DE 01              5735 	sbc	a,#0x01
   1C3B F2rC2s1C           5736 	jp	P,00106$
                           5737 ;demo.c:871: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1C3E DD 7E FC           5738 	ld	a,-4 (ix)
   1C41 DD 77 F8           5739 	ld	-8 (ix),a
   1C44 DD 7E FE           5740 	ld	a,-2 (ix)
   1C47 DD 77 F9           5741 	ld	-7 (ix),a
   1C4A DD 7E 04           5742 	ld	a,4 (ix)
   1C4D DD 86 FA           5743 	add	a,-6 (ix)
   1C50 4F                 5744 	ld	c,a
   1C51 DD 7E 05           5745 	ld	a,5 (ix)
   1C54 DD 8E FB           5746 	adc	a,-5 (ix)
   1C57 47                 5747 	ld	b,a
   1C58 0A                 5748 	ld	a,(bc)
   1C59 4F                 5749 	ld	c,a
   1C5A 87                 5750 	add	a,a
   1C5B C6r20              5751 	add	a,#<_tri_lookup_y
   1C5D 6F                 5752 	ld	l,a
   1C5E 3Es01              5753 	ld	a,#>_tri_lookup_y
   1C60 CE 00              5754 	adc	a,#0x00
   1C62 67                 5755 	ld	h,a
   1C63 46                 5756 	ld	b,(hl)
   1C64 23                 5757 	inc	hl
   1C65 56                 5758 	ld	d,(hl)
   1C66 3Er00              5759 	ld	a,#<_tri_lookup_x
   1C68 81                 5760 	add	a,c
   1C69 6F                 5761 	ld	l,a
   1C6A 3Es01              5762 	ld	a,#>_tri_lookup_x
   1C6C CE 00              5763 	adc	a,#0x00
   1C6E 67                 5764 	ld	h,a
   1C6F 4E                 5765 	ld	c,(hl)
   1C70 DD 66 F8           5766 	ld	h,-8 (ix)
   1C73 DD 6E F9           5767 	ld	l,-7 (ix)
   1C76 E5                 5768 	push	hl
   1C77 58                 5769 	ld	e,b
   1C78 D5                 5770 	push	de
   1C79 79                 5771 	ld	a,c
   1C7A F5                 5772 	push	af
   1C7B 33                 5773 	inc	sp
   1C7C CDrA8s1B           5774 	call	_drawtritile
   1C7F F1                 5775 	pop	af
   1C80 F1                 5776 	pop	af
   1C81 33                 5777 	inc	sp
                           5778 ;demo.c:872: x+=16;
   1C82 DD 7E FE           5779 	ld	a,-2 (ix)
   1C85 C6 10              5780 	add	a,#0x10
   1C87 DD 77 FE           5781 	ld	-2 (ix),a
   1C8A DD 7E FF           5782 	ld	a,-1 (ix)
   1C8D CE 00              5783 	adc	a,#0x00
   1C8F DD 77 FF           5784 	ld	-1 (ix),a
                           5785 ;demo.c:873: if (x >= 256) {x = 0; y+=16;}
   1C92 DD 7E FE           5786 	ld	a,-2 (ix)
   1C95 D6 00              5787 	sub	a,#0x00
   1C97 DD 7E FF           5788 	ld	a,-1 (ix)
   1C9A DE 01              5789 	sbc	a,#0x01
   1C9C FArB7s1C           5790 	jp	M,00102$
   1C9F DD 36 FE 00        5791 	ld	-2 (ix),#0x00
   1CA3 DD 36 FF 00        5792 	ld	-1 (ix),#0x00
   1CA7 DD 7E FC           5793 	ld	a,-4 (ix)
   1CAA C6 10              5794 	add	a,#0x10
   1CAC DD 77 FC           5795 	ld	-4 (ix),a
   1CAF DD 7E FD           5796 	ld	a,-3 (ix)
   1CB2 CE 00              5797 	adc	a,#0x00
   1CB4 DD 77 FD           5798 	ld	-3 (ix),a
   1CB7                    5799 00102$:
                           5800 ;demo.c:874: i++;
   1CB7 DD 34 FA           5801 	inc	-6 (ix)
   1CBA 20 03              5802 	jr	NZ,00112$
   1CBC DD 34 FB           5803 	inc	-5 (ix)
   1CBF                    5804 00112$:
   1CBF C3r31s1C           5805 	jp	00103$
   1CC2                    5806 00106$:
   1CC2 DD F9              5807 	ld	sp,ix
   1CC4 DD E1              5808 	pop	ix
   1CC6 C9                 5809 	ret
   1CC7                    5810 _drawtilescreen_end::
                           5811 ;demo.c:889: void tritiles() {
                           5812 ;	---------------------------------
                           5813 ; Function tritiles
                           5814 ; ---------------------------------
   1CC7                    5815 _tritiles_start::
   1CC7                    5816 _tritiles:
   1CC7 DD E5              5817 	push	ix
   1CC9 DD 21 00 00        5818 	ld	ix,#0
   1CCD DD 39              5819 	add	ix,sp
   1CCF 21 FB FF           5820 	ld	hl,#-5
   1CD2 39                 5821 	add	hl,sp
   1CD3 F9                 5822 	ld	sp,hl
                           5823 ;demo.c:896: if (tri_inited == 0) {
   1CD4 AF                 5824 	xor	a,a
   1CD5 21rA7s8F           5825 	ld	hl,#_tri_inited + 0
   1CD8 B6                 5826 	or	a,(hl)
   1CD9 C2r78s1D           5827 	jp	NZ,00102$
                           5828 ;demo.c:897: tri_inited = 1;
   1CDC FD 21rA7s8F        5829 	ld	iy,#_tri_inited
   1CE0 FD 36 00 01        5830 	ld	0 (iy),#0x01
                           5831 ;demo.c:899: cmd.size_x = 256;
   1CE4 21r2Cs8F           5832 	ld	hl, #_cmd + 8
   1CE7 36 00              5833 	ld	(hl),#0x00
   1CE9 23                 5834 	inc	hl
   1CEA 36 01              5835 	ld	(hl),#0x01
                           5836 ;demo.c:900: cmd.size_y = 1;
   1CEC 21r2Es8F           5837 	ld	hl, #_cmd + 10
   1CEF 36 01              5838 	ld	(hl),#0x01
   1CF1 23                 5839 	inc	hl
   1CF2 36 00              5840 	ld	(hl),#0x00
                           5841 ;demo.c:901: cmd.data = 0;
                           5842 ;demo.c:902: cmd.argument = 0x00; // from 70xY to left
   1CF4 3E 00              5843 	ld	a,#0x00
   1CF6 32r30s8F           5844 	ld	(#_cmd + 12),a
   1CF9 32r31s8F           5845 	ld	(#_cmd + 13),a
                           5846 ;demo.c:903: cmd.command = 0xd0; // vram to vram, y only
   1CFC 01r32s8F           5847 	ld	bc,#_cmd + 14
   1CFF 3E D0              5848 	ld	a,#0xD0
   1D01 02                 5849 	ld	(bc),a
                           5850 ;demo.c:904: cmd.source_x = 0;
   1D02 21r24s8F           5851 	ld	hl,#_cmd
   1D05 36 00              5852 	ld	(hl),#0x00
   1D07 23                 5853 	inc	hl
   1D08 36 00              5854 	ld	(hl),#0x00
                           5855 ;demo.c:905: cmd.source_y = 255;
   1D0A 21r26s8F           5856 	ld	hl, #_cmd + 2
   1D0D 36 FF              5857 	ld	(hl),#0xFF
   1D0F 23                 5858 	inc	hl
   1D10 36 00              5859 	ld	(hl),#0x00
                           5860 ;demo.c:906: cmd.dest_y = 0;
   1D12 01r2As8F           5861 	ld	bc,#_cmd + 6
   1D15 69                 5862 	ld	l,c
   1D16 60                 5863 	ld	h,b
   1D17 36 00              5864 	ld	(hl),#0x00
   1D19 23                 5865 	inc	hl
   1D1A 36 00              5866 	ld	(hl),#0x00
                           5867 ;demo.c:908: for (x = 0; x < 212; x++) {
   1D1C DD 36 FE D4        5868 	ld	-2 (ix),#0xD4
   1D20 DD 36 FF 00        5869 	ld	-1 (ix),#0x00
   1D24                    5870 00121$:
                           5871 ;demo.c:909: waitVB();
   1D24 76                 5872 		halt 
                           5873 ;demo.c:910: cmd.dest_x = 0;
   1D25 11r28s8F           5874 	ld	de,#_cmd + 4
   1D28 EB                 5875 	ex	de,hl
   1D29 36 00              5876 	ld	(hl),#0x00
   1D2B 23                 5877 	inc	hl
   1D2C 36 00              5878 	ld	(hl),#0x00
                           5879 ;demo.c:911: cmd.dest_y = x;
   1D2E 11r2As8F           5880 	ld	de,#_cmd + 6
   1D31 DD 4E FE           5881 	ld	c,-2 (ix)
   1D34 DD 46 FF           5882 	ld	b,-1 (ix)
   1D37 0B                 5883 	dec	bc
   1D38 EB                 5884 	ex	de,hl
   1D39 71                 5885 	ld	(hl),c
   1D3A 23                 5886 	inc	hl
   1D3B 70                 5887 	ld	(hl),b
                           5888 ;demo.c:912: vdp_copier(&cmd);
   1D3C C5                 5889 	push	bc
   1D3D 21r24s8F           5890 	ld	hl,#_cmd
   1D40 E5                 5891 	push	hl
   1D41 CDr00s00           5892 	call	_vdp_copier
   1D44 F1                 5893 	pop	af
   1D45 C1                 5894 	pop	bc
   1D46 DD 71 FE           5895 	ld	-2 (ix),c
   1D49 DD 70 FF           5896 	ld	-1 (ix),b
                           5897 ;demo.c:908: for (x = 0; x < 212; x++) {
   1D4C DD 7E FE           5898 	ld	a,-2 (ix)
   1D4F DD B6 FF           5899 	or	a,-1 (ix)
   1D52 20 D0              5900 	jr	NZ,00121$
                           5901 ;demo.c:914: vdp_register(9,2); // 192 lines
   1D54 21 09 02           5902 	ld	hl,#0x0209
   1D57 E5                 5903 	push	hl
   1D58 CDr00s00           5904 	call	_vdp_register
   1D5B F1                 5905 	pop	af
                           5906 ;demo.c:916: vdp_load_palette(boxes_palette);
   1D5C 21r00s8F           5907 	ld	hl,#_boxes_palette
   1D5F E5                 5908 	push	hl
   1D60 CDr00s00           5909 	call	_vdp_load_palette
   1D63 F1                 5910 	pop	af
                           5911 ;demo.c:917: msx2_palette(15,0,0,0);
   1D64 21 00 00           5912 	ld	hl,#0x0000
   1D67 E5                 5913 	push	hl
   1D68 2E 0F              5914 	ld	l, #0x0F
   1D6A E5                 5915 	push	hl
   1D6B CDr00s00           5916 	call	_msx2_palette
   1D6E F1                 5917 	pop	af
   1D6F F1                 5918 	pop	af
                           5919 ;demo.c:919: drawtilescreen(tri_center);
   1D70 21r2Cs02           5920 	ld	hl,#_tri_center
   1D73 E5                 5921 	push	hl
   1D74 CDr0Cs1C           5922 	call	_drawtilescreen
   1D77 F1                 5923 	pop	af
   1D78                    5924 00102$:
                           5925 ;demo.c:924: triframes++;
   1D78 FD 21rB2s8F        5926 	ld	iy,#_triframes
   1D7C FD 34 00           5927 	inc	0 (iy)
   1D7F 20 07              5928 	jr	NZ,00142$
   1D81 FD 21rB2s8F        5929 	ld	iy,#_triframes
   1D85 FD 34 01           5930 	inc	1 (iy)
   1D88                    5931 00142$:
                           5932 ;demo.c:925: if (triframes == 200) {
   1D88 3ArB2s8F           5933 	ld	a,(#_triframes+0)
   1D8B D6 C8              5934 	sub	a,#0xC8
   1D8D 20 06              5935 	jr	NZ,00143$
   1D8F 3ArB3s8F           5936 	ld	a,(#_triframes+1)
   1D92 B7                 5937 	or	a,a
   1D93 28 02              5938 	jr	Z,00144$
   1D95                    5939 00143$:
   1D95 18 08              5940 	jr	00104$
   1D97                    5941 00144$:
                           5942 ;demo.c:926: drawtilescreen(tri_up);
   1D97 21rECs02           5943 	ld	hl,#_tri_up
   1D9A E5                 5944 	push	hl
   1D9B CDr0Cs1C           5945 	call	_drawtilescreen
   1D9E F1                 5946 	pop	af
   1D9F                    5947 00104$:
                           5948 ;demo.c:929: if (triframes == 400) {
   1D9F 3ArB2s8F           5949 	ld	a,(#_triframes+0)
   1DA2 D6 90              5950 	sub	a,#0x90
   1DA4 20 07              5951 	jr	NZ,00145$
   1DA6 3ArB3s8F           5952 	ld	a,(#_triframes+1)
   1DA9 D6 01              5953 	sub	a,#0x01
   1DAB 28 02              5954 	jr	Z,00146$
   1DAD                    5955 00145$:
   1DAD 18 08              5956 	jr	00106$
   1DAF                    5957 00146$:
                           5958 ;demo.c:930: drawtilescreen(tri_dia);
   1DAF 21rACs03           5959 	ld	hl,#_tri_dia
   1DB2 E5                 5960 	push	hl
   1DB3 CDr0Cs1C           5961 	call	_drawtilescreen
   1DB6 F1                 5962 	pop	af
   1DB7                    5963 00106$:
                           5964 ;demo.c:932: if (triframes == 600) {
   1DB7 3ArB2s8F           5965 	ld	a,(#_triframes+0)
   1DBA D6 58              5966 	sub	a,#0x58
   1DBC 20 07              5967 	jr	NZ,00147$
   1DBE 3ArB3s8F           5968 	ld	a,(#_triframes+1)
   1DC1 D6 02              5969 	sub	a,#0x02
   1DC3 28 02              5970 	jr	Z,00148$
   1DC5                    5971 00147$:
   1DC5 18 08              5972 	jr	00108$
   1DC7                    5973 00148$:
                           5974 ;demo.c:933: drawtilescreen(tri_side1);
   1DC7 21r6Cs04           5975 	ld	hl,#_tri_side1
   1DCA E5                 5976 	push	hl
   1DCB CDr0Cs1C           5977 	call	_drawtilescreen
   1DCE F1                 5978 	pop	af
   1DCF                    5979 00108$:
                           5980 ;demo.c:935: if (triframes == 700) {
   1DCF 3ArB2s8F           5981 	ld	a,(#_triframes+0)
   1DD2 D6 BC              5982 	sub	a,#0xBC
   1DD4 20 07              5983 	jr	NZ,00149$
   1DD6 3ArB3s8F           5984 	ld	a,(#_triframes+1)
   1DD9 D6 02              5985 	sub	a,#0x02
   1DDB 28 02              5986 	jr	Z,00150$
   1DDD                    5987 00149$:
   1DDD 18 08              5988 	jr	00110$
   1DDF                    5989 00150$:
                           5990 ;demo.c:936: drawtilescreen(tri_side2);
   1DDF 21r2Cs05           5991 	ld	hl,#_tri_side2
   1DE2 E5                 5992 	push	hl
   1DE3 CDr0Cs1C           5993 	call	_drawtilescreen
   1DE6 F1                 5994 	pop	af
   1DE7                    5995 00110$:
                           5996 ;demo.c:938: if (triframes == 800) {
   1DE7 3ArB2s8F           5997 	ld	a,(#_triframes+0)
   1DEA D6 20              5998 	sub	a,#0x20
   1DEC 20 07              5999 	jr	NZ,00151$
   1DEE 3ArB3s8F           6000 	ld	a,(#_triframes+1)
   1DF1 D6 03              6001 	sub	a,#0x03
   1DF3 28 02              6002 	jr	Z,00152$
   1DF5                    6003 00151$:
   1DF5 18 08              6004 	jr	00112$
   1DF7                    6005 00152$:
                           6006 ;demo.c:939: drawtilescreen(tri_side1);
   1DF7 21r6Cs04           6007 	ld	hl,#_tri_side1
   1DFA E5                 6008 	push	hl
   1DFB CDr0Cs1C           6009 	call	_drawtilescreen
   1DFE F1                 6010 	pop	af
   1DFF                    6011 00112$:
                           6012 ;demo.c:941: if (triframes == 900) {
   1DFF 3ArB2s8F           6013 	ld	a,(#_triframes+0)
   1E02 D6 84              6014 	sub	a,#0x84
   1E04 20 07              6015 	jr	NZ,00153$
   1E06 3ArB3s8F           6016 	ld	a,(#_triframes+1)
   1E09 D6 03              6017 	sub	a,#0x03
   1E0B 28 02              6018 	jr	Z,00154$
   1E0D                    6019 00153$:
   1E0D 18 08              6020 	jr	00114$
   1E0F                    6021 00154$:
                           6022 ;demo.c:942: drawtilescreen(tri_side2);
   1E0F 21r2Cs05           6023 	ld	hl,#_tri_side2
   1E12 E5                 6024 	push	hl
   1E13 CDr0Cs1C           6025 	call	_drawtilescreen
   1E16 F1                 6026 	pop	af
   1E17                    6027 00114$:
                           6028 ;demo.c:944: if (triframes == 1000) {
   1E17 3ArB2s8F           6029 	ld	a,(#_triframes+0)
   1E1A D6 E8              6030 	sub	a,#0xE8
   1E1C 20 07              6031 	jr	NZ,00155$
   1E1E 3ArB3s8F           6032 	ld	a,(#_triframes+1)
   1E21 D6 03              6033 	sub	a,#0x03
   1E23 28 02              6034 	jr	Z,00156$
   1E25                    6035 00155$:
   1E25 18 12              6036 	jr	00116$
   1E27                    6037 00156$:
                           6038 ;demo.c:945: triframes = 0;
   1E27 21rB2s8F           6039 	ld	hl,#_triframes + 0
   1E2A 36 00              6040 	ld	(hl), #0x00
   1E2C 21rB3s8F           6041 	ld	hl,#_triframes + 1
   1E2F 36 00              6042 	ld	(hl), #0x00
                           6043 ;demo.c:946: drawtilescreen(tri_center);
   1E31 21r2Cs02           6044 	ld	hl,#_tri_center
   1E34 E5                 6045 	push	hl
   1E35 CDr0Cs1C           6046 	call	_drawtilescreen
   1E38 F1                 6047 	pop	af
   1E39                    6048 00116$:
                           6049 ;demo.c:949: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   1E39 21rAAs8F           6050 	ld	hl,#_tripal + 2
   1E3C 4E                 6051 	ld	c,(hl)
   1E3D 11rA9s8F           6052 	ld	de,#_tripal + 1
   1E40 1A                 6053 	ld	a,(de)
   1E41 47                 6054 	ld	b,a
   1E42 21rA8s8F           6055 	ld	hl,#_tripal
   1E45 5E                 6056 	ld	e,(hl)
   1E46 79                 6057 	ld	a,c
   1E47 F5                 6058 	push	af
   1E48 33                 6059 	inc	sp
   1E49 C5                 6060 	push	bc
   1E4A 33                 6061 	inc	sp
   1E4B 53                 6062 	ld	d,e
   1E4C 1E 03              6063 	ld	e,#0x03
   1E4E D5                 6064 	push	de
   1E4F CDr00s00           6065 	call	_msx2_palette
   1E52 F1                 6066 	pop	af
   1E53 F1                 6067 	pop	af
                           6068 ;demo.c:950: msx2_palette(13,tripal[3],tripal[4],tripal[5]);
   1E54 21rADs8F           6069 	ld	hl,#_tripal + 5
   1E57 4E                 6070 	ld	c,(hl)
   1E58 11rACs8F           6071 	ld	de,#_tripal + 4
   1E5B 1A                 6072 	ld	a,(de)
   1E5C 47                 6073 	ld	b,a
   1E5D 21rABs8F           6074 	ld	hl,#_tripal + 3
   1E60 5E                 6075 	ld	e,(hl)
   1E61 79                 6076 	ld	a,c
   1E62 F5                 6077 	push	af
   1E63 33                 6078 	inc	sp
   1E64 C5                 6079 	push	bc
   1E65 33                 6080 	inc	sp
   1E66 53                 6081 	ld	d,e
   1E67 1E 0D              6082 	ld	e,#0x0D
   1E69 D5                 6083 	push	de
   1E6A CDr00s00           6084 	call	_msx2_palette
   1E6D F1                 6085 	pop	af
   1E6E F1                 6086 	pop	af
                           6087 ;demo.c:951: msx2_palette(5,tripal[6],tripal[7],tripal[8]);
   1E6F 21rB0s8F           6088 	ld	hl,#_tripal + 8
   1E72 4E                 6089 	ld	c,(hl)
   1E73 11rAFs8F           6090 	ld	de,#_tripal + 7
   1E76 1A                 6091 	ld	a,(de)
   1E77 47                 6092 	ld	b,a
   1E78 21rAEs8F           6093 	ld	hl,#_tripal + 6
   1E7B 5E                 6094 	ld	e,(hl)
   1E7C 79                 6095 	ld	a,c
   1E7D F5                 6096 	push	af
   1E7E 33                 6097 	inc	sp
   1E7F C5                 6098 	push	bc
   1E80 33                 6099 	inc	sp
   1E81 53                 6100 	ld	d,e
   1E82 1E 05              6101 	ld	e,#0x05
   1E84 D5                 6102 	push	de
   1E85 CDr00s00           6103 	call	_msx2_palette
   1E88 F1                 6104 	pop	af
   1E89 F1                 6105 	pop	af
                           6106 ;demo.c:954: tripaltick++;
   1E8A FD 21rB1s8F        6107 	ld	iy,#_tripaltick
   1E8E FD 34 00           6108 	inc	0 (iy)
                           6109 ;demo.c:955: if (tripaltick > 6) {
   1E91 3E 06              6110 	ld	a,#0x06
   1E93 FD 21rB1s8F        6111 	ld	iy,#_tripaltick
   1E97 FD 96 00           6112 	sub	a,0 (iy)
   1E9A D2r08s1F           6113 	jp	NC,00126$
                           6114 ;demo.c:957: r = tripal[0];
   1E9D 21rA8s8F           6115 	ld	hl,#_tripal
   1EA0 4E                 6116 	ld	c,(hl)
   1EA1 DD 71 FD           6117 	ld	-3 (ix),c
                           6118 ;demo.c:958: g = tripal[1];
   1EA4 11rA9s8F           6119 	ld	de,#_tripal + 1
   1EA7 1A                 6120 	ld	a,(de)
   1EA8 DD 77 FC           6121 	ld	-4 (ix),a
                           6122 ;demo.c:959: b = tripal[2];
   1EAB 21rAAs8F           6123 	ld	hl,#_tripal + 2
   1EAE 5E                 6124 	ld	e,(hl)
   1EAF DD 73 FB           6125 	ld	-5 (ix),e
                           6126 ;demo.c:961: for (x = 0; x < 6; x++) {
   1EB2 DD 36 FE 00        6127 	ld	-2 (ix),#0x00
   1EB6 DD 36 FF 00        6128 	ld	-1 (ix),#0x00
   1EBA                    6129 00122$:
   1EBA DD 7E FE           6130 	ld	a,-2 (ix)
   1EBD D6 06              6131 	sub	a,#0x06
   1EBF DD 7E FF           6132 	ld	a,-1 (ix)
   1EC2 DE 00              6133 	sbc	a,#0x00
   1EC4 F2rEEs1E           6134 	jp	P,00125$
                           6135 ;demo.c:962: tripal[x] = tripal[x+3];
   1EC7 3ErA8              6136 	ld	a,#<_tripal
   1EC9 DD 86 FE           6137 	add	a,-2 (ix)
   1ECC 4F                 6138 	ld	c,a
   1ECD 3Es8F              6139 	ld	a,#>_tripal
   1ECF DD 8E FF           6140 	adc	a,-1 (ix)
   1ED2 47                 6141 	ld	b,a
   1ED3 DD 5E FE           6142 	ld	e,-2 (ix)
   1ED6 1C                 6143 	inc	e
   1ED7 1C                 6144 	inc	e
   1ED8 1C                 6145 	inc	e
   1ED9 3ErA8              6146 	ld	a,#<_tripal
   1EDB 83                 6147 	add	a,e
   1EDC 5F                 6148 	ld	e,a
   1EDD 3Es8F              6149 	ld	a,#>_tripal
   1EDF CE 00              6150 	adc	a,#0x00
   1EE1 57                 6151 	ld	d,a
   1EE2 1A                 6152 	ld	a,(de)
   1EE3 02                 6153 	ld	(bc),a
                           6154 ;demo.c:961: for (x = 0; x < 6; x++) {
   1EE4 DD 34 FE           6155 	inc	-2 (ix)
   1EE7 20 03              6156 	jr	NZ,00157$
   1EE9 DD 34 FF           6157 	inc	-1 (ix)
   1EEC                    6158 00157$:
   1EEC 18 CC              6159 	jr	00122$
   1EEE                    6160 00125$:
                           6161 ;demo.c:965: tripal[6] = r;
   1EEE 01rAEs8F           6162 	ld	bc,#_tripal + 6
   1EF1 DD 7E FD           6163 	ld	a,-3 (ix)
   1EF4 02                 6164 	ld	(bc),a
                           6165 ;demo.c:966: tripal[7] = g;
   1EF5 01rAFs8F           6166 	ld	bc,#_tripal + 7
   1EF8 DD 7E FC           6167 	ld	a,-4 (ix)
   1EFB 02                 6168 	ld	(bc),a
                           6169 ;demo.c:967: tripal[8] = b;
   1EFC 01rB0s8F           6170 	ld	bc,#_tripal + 8
   1EFF DD 7E FB           6171 	ld	a,-5 (ix)
   1F02 02                 6172 	ld	(bc),a
                           6173 ;demo.c:968: tripaltick = 0;
   1F03 21rB1s8F           6174 	ld	hl,#_tripaltick + 0
   1F06 36 00              6175 	ld	(hl), #0x00
   1F08                    6176 00126$:
   1F08 DD F9              6177 	ld	sp,ix
   1F0A DD E1              6178 	pop	ix
   1F0C C9                 6179 	ret
   1F0D                    6180 _tritiles_end::
                           6181 ;demo.c:977: void do_quit() {
                           6182 ;	---------------------------------
                           6183 ; Function do_quit
                           6184 ; ---------------------------------
   1F0D                    6185 _do_quit_start::
   1F0D                    6186 _do_quit:
                           6187 ;demo.c:978: waitVB();
   1F0D 76                 6188 		halt 
                           6189 ;demo.c:979: uninstall_isr();
   1F0E CDr00s00           6190 	call	_uninstall_isr
                           6191 ;demo.c:980: PLY_Stop();
   1F11 CDr00s00           6192 	call	_PLY_Stop
                           6193 ;demo.c:981: PLY_SendRegisters();
   1F14 CDr00s00           6194 	call	_PLY_SendRegisters
                           6195 ;demo.c:983: screen(0);
   1F17 3E 00              6196 	ld	a,#0x00
   1F19 F5                 6197 	push	af
   1F1A 33                 6198 	inc	sp
   1F1B CDr00s00           6199 	call	_screen
   1F1E 33                 6200 	inc	sp
                           6201 ;demo.c:985: puts("demo quit\r\n\r\n");
   1F1F 21r30s1F           6202 	ld	hl,#__str_10
   1F22 E5                 6203 	push	hl
   1F23 CDr00s00           6204 	call	_puts
   1F26 F1                 6205 	pop	af
                           6206 ;demo.c:987: exit(0);	
   1F27 3E 00              6207 	ld	a,#0x00
   1F29 F5                 6208 	push	af
   1F2A 33                 6209 	inc	sp
   1F2B CDr00s00           6210 	call	_exit
   1F2E 33                 6211 	inc	sp
   1F2F C9                 6212 	ret
   1F30                    6213 _do_quit_end::
   1F30                    6214 __str_10:
   1F30 64 65 6D 6F 20 71  6215 	.ascii "demo quit"
        75 69 74
   1F39 0D                 6216 	.db 0x0D
   1F3A 0A                 6217 	.db 0x0A
   1F3B 0D                 6218 	.db 0x0D
   1F3C 0A                 6219 	.db 0x0A
   1F3D 00                 6220 	.db 0x00
                           6221 ;demo.c:990: void main() {
                           6222 ;	---------------------------------
                           6223 ; Function main
                           6224 ; ---------------------------------
   1F3E                    6225 _main_start::
   1F3E                    6226 _main:
   1F3E DD E5              6227 	push	ix
   1F40 DD 21 00 00        6228 	ld	ix,#0
   1F44 DD 39              6229 	add	ix,sp
   1F46 21 F7 FF           6230 	ld	hl,#-9
   1F49 39                 6231 	add	hl,sp
   1F4A F9                 6232 	ld	sp,hl
                           6233 ;demo.c:991: unsigned char quit=0;
   1F4B DD 36 FF 00        6234 	ld	-1 (ix),#0x00
                           6235 ;demo.c:992: int modes = 128; // interlace bit on
   1F4F DD 36 FD 80        6236 	ld	-3 (ix),#0x80
   1F53 DD 36 FE 00        6237 	ld	-2 (ix),#0x00
                           6238 ;demo.c:998: spindown();
   1F57 CDr00s00           6239 	call	_spindown
                           6240 ;demo.c:1000: puts("demo init\r\n\r\n");
   1F5A 21r40s22           6241 	ld	hl,#__str_11
   1F5D E5                 6242 	push	hl
   1F5E CDr00s00           6243 	call	_puts
   1F61 F1                 6244 	pop	af
                           6245 ;demo.c:1002: for (y = 0; y < 2; y++) {
   1F62 DD 36 F9 00        6246 	ld	-7 (ix),#0x00
   1F66 DD 36 FA 00        6247 	ld	-6 (ix),#0x00
   1F6A                    6248 00127$:
   1F6A DD 7E F9           6249 	ld	a,-7 (ix)
   1F6D D6 02              6250 	sub	a,#0x02
   1F6F DD 7E FA           6251 	ld	a,-6 (ix)
   1F72 DE 00              6252 	sbc	a,#0x00
   1F74 F2rFBs1F           6253 	jp	P,00130$
                           6254 ;demo.c:1003: for (x = 0; x < 16; x++) {
   1F77 DD 56 F9           6255 	ld	d,-7 (ix)
   1F7A DD 4E FA           6256 	ld	c,-6 (ix)
   1F7D CB 22              6257 	sla	d
   1F7F CB 11              6258 	rl	c
   1F81 CB 22              6259 	sla	d
   1F83 CB 11              6260 	rl	c
   1F85 CB 22              6261 	sla	d
   1F87 CB 11              6262 	rl	c
   1F89 CB 22              6263 	sla	d
   1F8B CB 11              6264 	rl	c
   1F8D 7A                 6265 	ld	a,d
   1F8E C6 81              6266 	add	a,#0x81
   1F90 DD 77 F7           6267 	ld	-9 (ix),a
   1F93 79                 6268 	ld	a,c
   1F94 CE 03              6269 	adc	a,#0x03
   1F96 DD 77 F8           6270 	ld	-8 (ix),a
   1F99 DD 36 FB 00        6271 	ld	-5 (ix),#0x00
   1F9D DD 36 FC 00        6272 	ld	-4 (ix),#0x00
   1FA1                    6273 00123$:
   1FA1 DD 7E FB           6274 	ld	a,-5 (ix)
   1FA4 D6 10              6275 	sub	a,#0x10
   1FA6 DD 7E FC           6276 	ld	a,-4 (ix)
   1FA9 DE 00              6277 	sbc	a,#0x00
   1FAB F2rF0s1F           6278 	jp	P,00129$
                           6279 ;demo.c:1004: tri_lookup_x[(y*16)+x] = x * 16;
   1FAE DD 7E F9           6280 	ld	a,-7 (ix)
   1FB1 07                 6281 	rlca
   1FB2 07                 6282 	rlca
   1FB3 07                 6283 	rlca
   1FB4 07                 6284 	rlca
   1FB5 E6 F0              6285 	and	a,#0xF0
   1FB7 47                 6286 	ld	b,a
   1FB8 DD 5E FB           6287 	ld	e,-5 (ix)
   1FBB 78                 6288 	ld	a,b
   1FBC 83                 6289 	add	a,e
   1FBD 47                 6290 	ld	b, a
   1FBE C6r00              6291 	add	a,#<_tri_lookup_x
   1FC0 4F                 6292 	ld	c,a
   1FC1 3Es01              6293 	ld	a,#>_tri_lookup_x
   1FC3 CE 00              6294 	adc	a,#0x00
   1FC5 57                 6295 	ld	d,a
   1FC6 7B                 6296 	ld	a,e
   1FC7 07                 6297 	rlca
   1FC8 07                 6298 	rlca
   1FC9 07                 6299 	rlca
   1FCA 07                 6300 	rlca
   1FCB E6 F0              6301 	and	a,#0xF0
   1FCD 5F                 6302 	ld	e,a
   1FCE 69                 6303 	ld	l,c
   1FCF 62                 6304 	ld	h,d
   1FD0 73                 6305 	ld	(hl),e
                           6306 ;demo.c:1005: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   1FD1 CB 20              6307 	sla	b
   1FD3 3Er20              6308 	ld	a,#<_tri_lookup_y
   1FD5 80                 6309 	add	a,b
   1FD6 6F                 6310 	ld	l,a
   1FD7 3Es01              6311 	ld	a,#>_tri_lookup_y
   1FD9 CE 00              6312 	adc	a,#0x00
   1FDB 67                 6313 	ld	h,a
   1FDC DD 7E F7           6314 	ld	a,-9 (ix)
   1FDF 77                 6315 	ld	(hl),a
   1FE0 23                 6316 	inc	hl
   1FE1 DD 7E F8           6317 	ld	a,-8 (ix)
   1FE4 77                 6318 	ld	(hl),a
                           6319 ;demo.c:1003: for (x = 0; x < 16; x++) {
   1FE5 DD 34 FB           6320 	inc	-5 (ix)
   1FE8 20 03              6321 	jr	NZ,00154$
   1FEA DD 34 FC           6322 	inc	-4 (ix)
   1FED                    6323 00154$:
   1FED C3rA1s1F           6324 	jp	00123$
   1FF0                    6325 00129$:
                           6326 ;demo.c:1002: for (y = 0; y < 2; y++) {
   1FF0 DD 34 F9           6327 	inc	-7 (ix)
   1FF3 20 03              6328 	jr	NZ,00155$
   1FF5 DD 34 FA           6329 	inc	-6 (ix)
   1FF8                    6330 00155$:
   1FF8 C3r6As1F           6331 	jp	00127$
   1FFB                    6332 00130$:
                           6333 ;demo.c:1020: puts("music init...");
   1FFB 21r4Es22           6334 	ld	hl,#__str_12
   1FFE E5                 6335 	push	hl
   1FFF CDr00s00           6336 	call	_puts
   2002 F1                 6337 	pop	af
                           6338 ;demo.c:1022: PLY_SongPtr = (char *)0x0103;
   2003 21r00s00           6339 	ld	hl,#_PLY_SongPtr + 0
   2006 36 03              6340 	ld	(hl), #0x03
   2008 21r01s00           6341 	ld	hl,#_PLY_SongPtr + 1
   200B 36 01              6342 	ld	(hl), #0x01
                           6343 ;demo.c:1023: PLY_Init();
   200D CDr00s00           6344 	call	_PLY_Init
                           6345 ;demo.c:1024: puts("done.\r\n");
   2010 21r5Cs22           6346 	ld	hl,#__str_13
   2013 E5                 6347 	push	hl
   2014 CDr00s00           6348 	call	_puts
   2017 F1                 6349 	pop	af
                           6350 ;demo.c:1026: puts("detecting vdp type...");
   2018 21r64s22           6351 	ld	hl,#__str_14
   201B E5                 6352 	push	hl
   201C CDr00s00           6353 	call	_puts
   201F F1                 6354 	pop	af
                           6355 ;demo.c:1027: if(isvdp2())
   2020 CDr00s00           6356 	call	_isvdp2
   2023 AF                 6357 	xor	a,a
   2024 B5                 6358 	or	a,l
   2025 28 12              6359 	jr	Z,00102$
                           6360 ;demo.c:1029: puts(" vdp2 found!\r\n\r\n");
   2027 21r7As22           6361 	ld	hl,#__str_15
   202A E5                 6362 	push	hl
   202B CDr00s00           6363 	call	_puts
   202E F1                 6364 	pop	af
                           6365 ;demo.c:1030: modes+=2; // pal
   202F DD 36 FD 82        6366 	ld	-3 (ix),#0x82
   2033 DD 36 FE 00        6367 	ld	-2 (ix),#0x00
   2037 18 0B              6368 	jr	00103$
   2039                    6369 00102$:
                           6370 ;demo.c:1033: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   2039 21r8Bs22           6371 	ld	hl,#__str_16
   203C E5                 6372 	push	hl
   203D CDr00s00           6373 	call	_puts
   2040 F1                 6374 	pop	af
                           6375 ;demo.c:1034: do_quit();
   2041 CDr0Ds1F           6376 	call	_do_quit
   2044                    6377 00103$:
                           6378 ;demo.c:1037: pal_load("TWISTER PL5",32,1);
   2044 21 01 00           6379 	ld	hl,#0x0001
   2047 E5                 6380 	push	hl
   2048 3E 20              6381 	ld	a,#0x20
   204A F5                 6382 	push	af
   204B 33                 6383 	inc	sp
   204C 21rD2s22           6384 	ld	hl,#__str_17
   204F E5                 6385 	push	hl
   2050 CDrA3s07           6386 	call	_pal_load
   2053 F1                 6387 	pop	af
   2054 F1                 6388 	pop	af
   2055 33                 6389 	inc	sp
                           6390 ;demo.c:1038: memcpy(twister_palette, cur_palette, 32);
   2056 21 20 00           6391 	ld	hl,#0x0020
   2059 E5                 6392 	push	hl
   205A 21r80s8E           6393 	ld	hl,#_cur_palette
   205D E5                 6394 	push	hl
   205E 21rC0s8E           6395 	ld	hl,#_twister_palette
   2061 E5                 6396 	push	hl
   2062 CDr00s00           6397 	call	_memcpy
   2065 F1                 6398 	pop	af
   2066 F1                 6399 	pop	af
   2067 F1                 6400 	pop	af
                           6401 ;demo.c:1039: pal_load("TF1     PL5",32,1);
   2068 21 01 00           6402 	ld	hl,#0x0001
   206B E5                 6403 	push	hl
   206C 3E 20              6404 	ld	a,#0x20
   206E F5                 6405 	push	af
   206F 33                 6406 	inc	sp
   2070 21rDEs22           6407 	ld	hl,#__str_18
   2073 E5                 6408 	push	hl
   2074 CDrA3s07           6409 	call	_pal_load
   2077 F1                 6410 	pop	af
   2078 F1                 6411 	pop	af
   2079 33                 6412 	inc	sp
                           6413 ;demo.c:1040: memcpy(tf_palette, cur_palette, 32);
   207A 21 20 00           6414 	ld	hl,#0x0020
   207D E5                 6415 	push	hl
   207E 21r80s8E           6416 	ld	hl,#_cur_palette
   2081 E5                 6417 	push	hl
   2082 21rE0s8E           6418 	ld	hl,#_tf_palette
   2085 E5                 6419 	push	hl
   2086 CDr00s00           6420 	call	_memcpy
   2089 F1                 6421 	pop	af
   208A F1                 6422 	pop	af
   208B F1                 6423 	pop	af
                           6424 ;demo.c:1041: pal_load("BOXES   PL5",32,1);
   208C 21 01 00           6425 	ld	hl,#0x0001
   208F E5                 6426 	push	hl
   2090 3E 20              6427 	ld	a,#0x20
   2092 F5                 6428 	push	af
   2093 33                 6429 	inc	sp
   2094 21rEAs22           6430 	ld	hl,#__str_19
   2097 E5                 6431 	push	hl
   2098 CDrA3s07           6432 	call	_pal_load
   209B F1                 6433 	pop	af
   209C F1                 6434 	pop	af
   209D 33                 6435 	inc	sp
                           6436 ;demo.c:1042: memcpy(boxes_palette, cur_palette, 32);
   209E 21 20 00           6437 	ld	hl,#0x0020
   20A1 E5                 6438 	push	hl
   20A2 21r80s8E           6439 	ld	hl,#_cur_palette
   20A5 E5                 6440 	push	hl
   20A6 21r00s8F           6441 	ld	hl,#_boxes_palette
   20A9 E5                 6442 	push	hl
   20AA CDr00s00           6443 	call	_memcpy
   20AD F1                 6444 	pop	af
   20AE F1                 6445 	pop	af
   20AF F1                 6446 	pop	af
                           6447 ;demo.c:1045: pal_load("BULBS   PL5",32,1);
   20B0 21 01 00           6448 	ld	hl,#0x0001
   20B3 E5                 6449 	push	hl
   20B4 3E 20              6450 	ld	a,#0x20
   20B6 F5                 6451 	push	af
   20B7 33                 6452 	inc	sp
   20B8 21rF6s22           6453 	ld	hl,#__str_20
   20BB E5                 6454 	push	hl
   20BC CDrA3s07           6455 	call	_pal_load
   20BF F1                 6456 	pop	af
   20C0 F1                 6457 	pop	af
   20C1 33                 6458 	inc	sp
                           6459 ;demo.c:1047: pck_load("BULBS   PCK",2431,0x8000,VRAM_0,1);
   20C2 21 01 00           6460 	ld	hl,#0x0001
   20C5 E5                 6461 	push	hl
   20C6 2E 01              6462 	ld	l, #0x01
   20C8 E5                 6463 	push	hl
   20C9 21 00 80           6464 	ld	hl,#0x8000
   20CC E5                 6465 	push	hl
   20CD 21 7F 09           6466 	ld	hl,#0x097F
   20D0 E5                 6467 	push	hl
   20D1 21r02s23           6468 	ld	hl,#__str_21
   20D4 E5                 6469 	push	hl
   20D5 CDr99s09           6470 	call	_pck_load
   20D8 FD 21 0A 00        6471 	ld	iy,#0x000A
   20DC FD 39              6472 	add	iy,sp
   20DE FD F9              6473 	ld	sp,iy
                           6474 ;demo.c:1049: pck_load("TWISTER PCK",4032,0x0000,VRAM_1,1);
   20E0 21 01 00           6475 	ld	hl,#0x0001
   20E3 E5                 6476 	push	hl
   20E4 2E 00              6477 	ld	l, #0x00
   20E6 E5                 6478 	push	hl
   20E7 2E 00              6479 	ld	l, #0x00
   20E9 E5                 6480 	push	hl
   20EA 21 C0 0F           6481 	ld	hl,#0x0FC0
   20ED E5                 6482 	push	hl
   20EE 21r0Es23           6483 	ld	hl,#__str_22
   20F1 E5                 6484 	push	hl
   20F2 CDr99s09           6485 	call	_pck_load
   20F5 FD 21 0A 00        6486 	ld	iy,#0x000A
   20F9 FD 39              6487 	add	iy,sp
   20FB FD F9              6488 	ld	sp,iy
                           6489 ;demo.c:1050: pck_load("BOXES   PCK",4500,0x8000,VRAM_1,1);
   20FD 21 01 00           6490 	ld	hl,#0x0001
   2100 E5                 6491 	push	hl
   2101 2E 00              6492 	ld	l, #0x00
   2103 E5                 6493 	push	hl
   2104 26 80              6494 	ld	h, #0x80
   2106 E5                 6495 	push	hl
   2107 21 94 11           6496 	ld	hl,#0x1194
   210A E5                 6497 	push	hl
   210B 21r1As23           6498 	ld	hl,#__str_23
   210E E5                 6499 	push	hl
   210F CDr99s09           6500 	call	_pck_load
   2112 FD 21 0A 00        6501 	ld	iy,#0x000A
   2116 FD 39              6502 	add	iy,sp
   2118 FD F9              6503 	ld	sp,iy
                           6504 ;demo.c:1054: vdp_set_screen5();
   211A CDr00s00           6505 	call	_vdp_set_screen5
                           6506 ;demo.c:1056: vdp_register(VDP_MODE3,modes); // interlace on, screen mode pal or ntsc
   211D DD 7E FD           6507 	ld	a,-3 (ix)
   2120 F5                 6508 	push	af
   2121 33                 6509 	inc	sp
   2122 3E 09              6510 	ld	a,#0x09
   2124 F5                 6511 	push	af
   2125 33                 6512 	inc	sp
   2126 CDr00s00           6513 	call	_vdp_register
   2129 F1                 6514 	pop	af
                           6515 ;demo.c:1059: puts("demo start\r\n");
   212A 21r26s23           6516 	ld	hl,#__str_24
   212D E5                 6517 	push	hl
   212E CDr00s00           6518 	call	_puts
   2131 F1                 6519 	pop	af
                           6520 ;demo.c:1061: scratch_clear();
   2132 CDr90s07           6521 	call	_scratch_clear
                           6522 ;demo.c:1062: vdp_load_palette(scratch);
   2135 21r00s8E           6523 	ld	hl,#_scratch
   2138 E5                 6524 	push	hl
   2139 CDr00s00           6525 	call	_vdp_load_palette
   213C F1                 6526 	pop	af
                           6527 ;demo.c:1064: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   213D 21 00 00           6528 	ld	hl,#0x0000
   2140 E5                 6529 	push	hl
   2141 2E 01              6530 	ld	l, #0x01
   2143 E5                 6531 	push	hl
   2144 2E 00              6532 	ld	l, #0x00
   2146 E5                 6533 	push	hl
   2147 21 6A 08           6534 	ld	hl,#0x086A
   214A E5                 6535 	push	hl
   214B 21r33s23           6536 	ld	hl,#__str_25
   214E E5                 6537 	push	hl
   214F CDr99s09           6538 	call	_pck_load
   2152 FD 21 0A 00        6539 	ld	iy,#0x000A
   2156 FD 39              6540 	add	iy,sp
   2158 FD F9              6541 	ld	sp,iy
                           6542 ;demo.c:1065: pal_load("DSSLOGO PL5",32,1);
   215A 21 01 00           6543 	ld	hl,#0x0001
   215D E5                 6544 	push	hl
   215E 3E 20              6545 	ld	a,#0x20
   2160 F5                 6546 	push	af
   2161 33                 6547 	inc	sp
   2162 21r3Fs23           6548 	ld	hl,#__str_26
   2165 E5                 6549 	push	hl
   2166 CDrA3s07           6550 	call	_pal_load
   2169 F1                 6551 	pop	af
   216A F1                 6552 	pop	af
   216B 33                 6553 	inc	sp
                           6554 ;demo.c:1066: vdp_load_palette(cur_palette);
   216C 21r80s8E           6555 	ld	hl,#_cur_palette
   216F E5                 6556 	push	hl
   2170 CDr00s00           6557 	call	_vdp_load_palette
   2173 F1                 6558 	pop	af
                           6559 ;demo.c:1068: vdp_register(VDP_VOFFSET,0);
   2174 21 17 00           6560 	ld	hl,#0x0017
   2177 E5                 6561 	push	hl
   2178 CDr00s00           6562 	call	_vdp_register
   217B F1                 6563 	pop	af
                           6564 ;demo.c:1080: install_isr(my_isr);
   217C 21rECs05           6565 	ld	hl,#_my_isr
   217F E5                 6566 	push	hl
   2180 CDr00s00           6567 	call	_install_isr
   2183 F1                 6568 	pop	af
                           6569 ;demo.c:1082: while (!quit) {
   2184                    6570 00120$:
   2184 AF                 6571 	xor	a,a
   2185 DD B6 FF           6572 	or	a,-1 (ix)
   2188 C2r38s22           6573 	jp	NZ,00122$
                           6574 ;demo.c:1085: if (vbicount < 64) { 
   218B 3Ar20s8F           6575 	ld	a,(#_vbicount+0)
   218E D6 40              6576 	sub	a,#0x40
   2190 FD 21r20s8F        6577 	ld	iy,#_vbicount
   2194 FD 7E 01           6578 	ld	a,1 (iy)
   2197 DE 00              6579 	sbc	a,#0x00
   2199 F2rA0s21           6580 	jp	P,00105$
                           6581 ;demo.c:1086: waitVB();
   219C 76                 6582 		halt 
                           6583 ;demo.c:1087: fadein(); 
   219D CDr27s0A           6584 	call	_fadein
   21A0                    6585 00105$:
                           6586 ;demo.c:1089: if (vbicount >= 192 && vbicount < 800) {
   21A0 3Ar20s8F           6587 	ld	a,(#_vbicount+0)
   21A3 D6 C0              6588 	sub	a,#0xC0
   21A5 3Ar21s8F           6589 	ld	a,(#_vbicount+1)
   21A8 DE 00              6590 	sbc	a,#0x00
   21AA FArC2s21           6591 	jp	M,00107$
   21AD 3Ar20s8F           6592 	ld	a,(#_vbicount+0)
   21B0 D6 20              6593 	sub	a,#0x20
   21B2 FD 21r20s8F        6594 	ld	iy,#_vbicount
   21B6 FD 7E 01           6595 	ld	a,1 (iy)
   21B9 DE 03              6596 	sbc	a,#0x03
   21BB F2rC2s21           6597 	jp	P,00107$
                           6598 ;demo.c:1090: waitVB();
   21BE 76                 6599 		halt 
                           6600 ;demo.c:1091: bulbs();
   21BF CDr99s13           6601 	call	_bulbs
   21C2                    6602 00107$:
                           6603 ;demo.c:1094: if (vbicount >= 800 && vbicount < 1500) {
   21C2 3Ar20s8F           6604 	ld	a,(#_vbicount+0)
   21C5 D6 20              6605 	sub	a,#0x20
   21C7 3Ar21s8F           6606 	ld	a,(#_vbicount+1)
   21CA DE 03              6607 	sbc	a,#0x03
   21CC FArE4s21           6608 	jp	M,00110$
   21CF 3Ar20s8F           6609 	ld	a,(#_vbicount+0)
   21D2 D6 DC              6610 	sub	a,#0xDC
   21D4 FD 21r20s8F        6611 	ld	iy,#_vbicount
   21D8 FD 7E 01           6612 	ld	a,1 (iy)
   21DB DE 05              6613 	sbc	a,#0x05
   21DD F2rE4s21           6614 	jp	P,00110$
                           6615 ;demo.c:1095: waitVB();
   21E0 76                 6616 		halt 
                           6617 ;demo.c:1096: twister();
   21E1 CDr23s12           6618 	call	_twister
   21E4                    6619 00110$:
                           6620 ;demo.c:1099: if (vbicount >= 1500 && vbicount < 2200) {
   21E4 3Ar20s8F           6621 	ld	a,(#_vbicount+0)
   21E7 D6 DC              6622 	sub	a,#0xDC
   21E9 3Ar21s8F           6623 	ld	a,(#_vbicount+1)
   21EC DE 05              6624 	sbc	a,#0x05
   21EE FAr01s22           6625 	jp	M,00113$
   21F1 3Ar20s8F           6626 	ld	a,(#_vbicount+0)
   21F4 D6 98              6627 	sub	a,#0x98
   21F6 3Ar21s8F           6628 	ld	a,(#_vbicount+1)
   21F9 DE 08              6629 	sbc	a,#0x08
   21FB F2r01s22           6630 	jp	P,00113$
                           6631 ;demo.c:1100: boxes();
   21FE CDr01s18           6632 	call	_boxes
   2201                    6633 00113$:
                           6634 ;demo.c:1104: if (vbicount >= 2200 && vbicount < 5800) {
   2201 3Ar20s8F           6635 	ld	a,(#_vbicount+0)
   2204 D6 98              6636 	sub	a,#0x98
   2206 3Ar21s8F           6637 	ld	a,(#_vbicount+1)
   2209 DE 08              6638 	sbc	a,#0x08
   220B FAr23s22           6639 	jp	M,00116$
   220E 3Ar20s8F           6640 	ld	a,(#_vbicount+0)
   2211 D6 A8              6641 	sub	a,#0xA8
   2213 FD 21r20s8F        6642 	ld	iy,#_vbicount
   2217 FD 7E 01           6643 	ld	a,1 (iy)
   221A DE 16              6644 	sbc	a,#0x16
   221C F2r23s22           6645 	jp	P,00116$
                           6646 ;demo.c:1105: waitVB();
   221F 76                 6647 		halt 
                           6648 ;demo.c:1106: tritiles();
   2220 CDrC7s1C           6649 	call	_tritiles
   2223                    6650 00116$:
                           6651 ;demo.c:1110: if(space())
   2223 21 08 01           6652 	ld	hl,#0x0108
   2226 E5                 6653 	push	hl
   2227 CDr00s00           6654 	call	_ispressed
   222A F1                 6655 	pop	af
   222B 4D                 6656 	ld	c,l
   222C AF                 6657 	xor	a,a
   222D B5                 6658 	or	a,l
   222E CAr84s21           6659 	jp	Z,00120$
                           6660 ;demo.c:1111: quit=1;
   2231 DD 36 FF 01        6661 	ld	-1 (ix),#0x01
   2235 C3r84s21           6662 	jp	00120$
   2238                    6663 00122$:
                           6664 ;demo.c:1114: do_quit();
   2238 CDr0Ds1F           6665 	call	_do_quit
   223B DD F9              6666 	ld	sp,ix
   223D DD E1              6667 	pop	ix
   223F C9                 6668 	ret
   2240                    6669 _main_end::
   2240                    6670 __str_11:
   2240 64 65 6D 6F 20 69  6671 	.ascii "demo init"
        6E 69 74
   2249 0D                 6672 	.db 0x0D
   224A 0A                 6673 	.db 0x0A
   224B 0D                 6674 	.db 0x0D
   224C 0A                 6675 	.db 0x0A
   224D 00                 6676 	.db 0x00
   224E                    6677 __str_12:
   224E 6D 75 73 69 63 20  6678 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   225B 00                 6679 	.db 0x00
   225C                    6680 __str_13:
   225C 64 6F 6E 65 2E     6681 	.ascii "done."
   2261 0D                 6682 	.db 0x0D
   2262 0A                 6683 	.db 0x0A
   2263 00                 6684 	.db 0x00
   2264                    6685 __str_14:
   2264 64 65 74 65 63 74  6686 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   2279 00                 6687 	.db 0x00
   227A                    6688 __str_15:
   227A 20 76 64 70 32 20  6689 	.ascii " vdp2 found!"
        66 6F 75 6E 64 21
   2286 0D                 6690 	.db 0x0D
   2287 0A                 6691 	.db 0x0A
   2288 0D                 6692 	.db 0x0D
   2289 0A                 6693 	.db 0x0A
   228A 00                 6694 	.db 0x00
   228B                    6695 __str_16:
   228B 20 76 64 70 31 20  6696 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   2297 0D                 6697 	.db 0x0D
   2298 0A                 6698 	.db 0x0A
   2299 53 6F 72 72 79 2C  6699 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   22C7 20 56 52 41 4D 2E  6700 	.ascii " VRAM."
   22CD 0D                 6701 	.db 0x0D
   22CE 0A                 6702 	.db 0x0A
   22CF 0D                 6703 	.db 0x0D
   22D0 0A                 6704 	.db 0x0A
   22D1 00                 6705 	.db 0x00
   22D2                    6706 __str_17:
   22D2 54 57 49 53 54 45  6707 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   22DD 00                 6708 	.db 0x00
   22DE                    6709 __str_18:
   22DE 54 46 31 20 20 20  6710 	.ascii "TF1     PL5"
        20 20 50 4C 35
   22E9 00                 6711 	.db 0x00
   22EA                    6712 __str_19:
   22EA 42 4F 58 45 53 20  6713 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   22F5 00                 6714 	.db 0x00
   22F6                    6715 __str_20:
   22F6 42 55 4C 42 53 20  6716 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   2301 00                 6717 	.db 0x00
   2302                    6718 __str_21:
   2302 42 55 4C 42 53 20  6719 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   230D 00                 6720 	.db 0x00
   230E                    6721 __str_22:
   230E 54 57 49 53 54 45  6722 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   2319 00                 6723 	.db 0x00
   231A                    6724 __str_23:
   231A 42 4F 58 45 53 20  6725 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   2325 00                 6726 	.db 0x00
   2326                    6727 __str_24:
   2326 64 65 6D 6F 20 73  6728 	.ascii "demo start"
        74 61 72 74
   2330 0D                 6729 	.db 0x0D
   2331 0A                 6730 	.db 0x0A
   2332 00                 6731 	.db 0x00
   2333                    6732 __str_25:
   2333 44 53 53 4C 4F 47  6733 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   233E 00                 6734 	.db 0x00
   233F                    6735 __str_26:
   233F 44 53 53 4C 4F 47  6736 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   234A 00                 6737 	.db 0x00
                           6738 	.area _CODE
                           6739 	.area _CABS
