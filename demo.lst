                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Thu Feb 22 01:53:57 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_animplay
                             14 	.globl _font
                             15 	.globl _do_letter
                             16 	.globl _twister
                             17 	.globl _raster_effu
                             18 	.globl _do_blocks
                             19 	.globl _do_ymmm
                             20 	.globl _fadein
                             21 	.globl _raw_load
                             22 	.globl _pause
                             23 	.globl _pal_load
                             24 	.globl _scratch_clear
                             25 	.globl _ge5_load
                             26 	.globl _color_isr
                             27 	.globl _my_isr
                             28 	.globl _isNthBitSet
                             29 	.globl _ly
                             30 	.globl _lx
                             31 	.globl _linenum
                             32 	.globl _flof
                             33 	.globl _btab
                             34 	.globl _bty
                             35 	.globl _btx
                             36 	.globl _bsy
                             37 	.globl _bsx
                             38 	.globl _block_init
                             39 	.globl _cc
                             40 	.globl _yofff
                             41 	.globl _tick
                             42 	.globl _vbicount
                             43 	.globl _block_palette
                             44 	.globl _cur_palette
                             45 	.globl _scratch
                             46 	.globl _packbuffer
                             47 	.globl _sintab
                             48 	.globl _font_xo
                             49 	.globl _font_h
                             50 	.globl _font_w
                             51 	.globl _font_y
                             52 	.globl _font_x
                             53 	.globl _sintabx
                             54 ;--------------------------------------------------------
                             55 ; special function registers
                             56 ;--------------------------------------------------------
                             57 ;--------------------------------------------------------
                             58 ;  ram data
                             59 ;--------------------------------------------------------
                             60 	.area _DATA
   0000                      61 _sintab::
   0000                      62 	.ds 256
   0100                      63 _packbuffer::
   0100                      64 	.ds 16000
   3F80                      65 _scratch::
   3F80                      66 	.ds 128
   4000                      67 _cur_palette::
   4000                      68 	.ds 32
   4020                      69 _block_palette::
   4020                      70 	.ds 32
   4040                      71 _vbicount::
   4040                      72 	.ds 2
   4042                      73 _tick::
   4042                      74 	.ds 2
   4044                      75 _isNthBitSet_mask_1_1:
   4044                      76 	.ds 8
   404C                      77 _yofff::
   404C                      78 	.ds 1
   404D                      79 _cc::
   404D                      80 	.ds 1
   404E                      81 _flipper:
   404E                      82 	.ds 2
   4050                      83 _ymmmf:
   4050                      84 	.ds 2
   4052                      85 _block_init::
   4052                      86 	.ds 1
   4053                      87 _bsx::
   4053                      88 	.ds 2
   4055                      89 _bsy::
   4055                      90 	.ds 2
   4057                      91 _btx::
   4057                      92 	.ds 2
   4059                      93 _bty::
   4059                      94 	.ds 2
   405B                      95 _btab::
   405B                      96 	.ds 32
   407B                      97 _flof::
   407B                      98 	.ds 2
   407D                      99 _linenum::
   407D                     100 	.ds 2
   407F                     101 _lx::
   407F                     102 	.ds 2
   4081                     103 _ly::
   4081                     104 	.ds 2
   4083                     105 _xo:
   4083                     106 	.ds 2
   4085                     107 _yo:
   4085                     108 	.ds 2
   4087                     109 _po:
   4087                     110 	.ds 2
   4089                     111 _fffaaa:
   4089                     112 	.ds 2
                            113 ;--------------------------------------------------------
                            114 ; overlayable items in  ram 
                            115 ;--------------------------------------------------------
                            116 	.area _OVERLAY
                            117 ;--------------------------------------------------------
                            118 ; external initialized ram data
                            119 ;--------------------------------------------------------
                            120 ;--------------------------------------------------------
                            121 ; global & static initialisations
                            122 ;--------------------------------------------------------
                            123 	.area _HOME
                            124 	.area _GSINIT
                            125 	.area _GSFINAL
                            126 	.area _GSINIT
                            127 ;demo.c:47: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r44s40            128 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            129 	call	__initrleblock
   0006 08                  130 	.db	8
   0007 01 02 04 08 10 20   131 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  132 	.db	0
                            133 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            134 	ld	hl,#_sintab
   0013 CDr00s00            135 	call	__initrleblock
   0016 3B                  136 	.db	59
   0017 00 03 06 09 0C 0F   137 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   138 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   139 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   140 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   141 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   142 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   143 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            144 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               145 	.db	#-5,#0x7E
   0054 01                  146 	.db	1
   0055 7F                  147 	.db	0x7F
   0056 FB 7E               148 	.db	#-5,#0x7E
   0058 75                  149 	.db	117
   0059 7D 7D 7C 7B 7B 7A   150 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   151 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   152 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   153 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   154 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   155 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   156 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   157 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   158 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   159 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   160 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   161 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   162 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   163 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      164 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               165 	.db	#-5,#0x82
   00D0 01                  166 	.db	1
   00D1 81                  167 	.db	0x81
   00D2 FB 82               168 	.db	#-5,#0x82
   00D4 3A                  169 	.db	58
   00D5 83 83 84 85 85 86   170 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   171 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   172 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   173 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   174 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   175 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   176 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               177 	.db	0xFA, 0xFD
   010F 00                  178 	.db	0
                            179 ;demo.c:36: uint8_t packbuffer[16000] = {0};
   0110 21r00s01            180 	ld	hl,#_packbuffer
   0113 CDr00s00            181 	call	__initrleblock
   0116 81 00               182 	.db	#-127,#0x00
   0118 81 00               183 	.db	#-127,#0x00
   011A 81 00               184 	.db	#-127,#0x00
   011C 81 00               185 	.db	#-127,#0x00
   011E 81 00               186 	.db	#-127,#0x00
   0120 81 00               187 	.db	#-127,#0x00
   0122 81 00               188 	.db	#-127,#0x00
   0124 81 00               189 	.db	#-127,#0x00
   0126 81 00               190 	.db	#-127,#0x00
   0128 81 00               191 	.db	#-127,#0x00
   012A 81 00               192 	.db	#-127,#0x00
   012C 81 00               193 	.db	#-127,#0x00
   012E 81 00               194 	.db	#-127,#0x00
   0130 81 00               195 	.db	#-127,#0x00
   0132 81 00               196 	.db	#-127,#0x00
   0134 81 00               197 	.db	#-127,#0x00
   0136 81 00               198 	.db	#-127,#0x00
   0138 81 00               199 	.db	#-127,#0x00
   013A 81 00               200 	.db	#-127,#0x00
   013C 81 00               201 	.db	#-127,#0x00
   013E 81 00               202 	.db	#-127,#0x00
   0140 81 00               203 	.db	#-127,#0x00
   0142 81 00               204 	.db	#-127,#0x00
   0144 81 00               205 	.db	#-127,#0x00
   0146 81 00               206 	.db	#-127,#0x00
   0148 81 00               207 	.db	#-127,#0x00
   014A 81 00               208 	.db	#-127,#0x00
   014C 81 00               209 	.db	#-127,#0x00
   014E 81 00               210 	.db	#-127,#0x00
   0150 81 00               211 	.db	#-127,#0x00
   0152 81 00               212 	.db	#-127,#0x00
   0154 81 00               213 	.db	#-127,#0x00
   0156 81 00               214 	.db	#-127,#0x00
   0158 81 00               215 	.db	#-127,#0x00
   015A 81 00               216 	.db	#-127,#0x00
   015C 81 00               217 	.db	#-127,#0x00
   015E 81 00               218 	.db	#-127,#0x00
   0160 81 00               219 	.db	#-127,#0x00
   0162 81 00               220 	.db	#-127,#0x00
   0164 81 00               221 	.db	#-127,#0x00
   0166 81 00               222 	.db	#-127,#0x00
   0168 81 00               223 	.db	#-127,#0x00
   016A 81 00               224 	.db	#-127,#0x00
   016C 81 00               225 	.db	#-127,#0x00
   016E 81 00               226 	.db	#-127,#0x00
   0170 81 00               227 	.db	#-127,#0x00
   0172 81 00               228 	.db	#-127,#0x00
   0174 81 00               229 	.db	#-127,#0x00
   0176 81 00               230 	.db	#-127,#0x00
   0178 81 00               231 	.db	#-127,#0x00
   017A 81 00               232 	.db	#-127,#0x00
   017C 81 00               233 	.db	#-127,#0x00
   017E 81 00               234 	.db	#-127,#0x00
   0180 81 00               235 	.db	#-127,#0x00
   0182 81 00               236 	.db	#-127,#0x00
   0184 81 00               237 	.db	#-127,#0x00
   0186 81 00               238 	.db	#-127,#0x00
   0188 81 00               239 	.db	#-127,#0x00
   018A 81 00               240 	.db	#-127,#0x00
   018C 81 00               241 	.db	#-127,#0x00
   018E 81 00               242 	.db	#-127,#0x00
   0190 81 00               243 	.db	#-127,#0x00
   0192 81 00               244 	.db	#-127,#0x00
   0194 81 00               245 	.db	#-127,#0x00
   0196 81 00               246 	.db	#-127,#0x00
   0198 81 00               247 	.db	#-127,#0x00
   019A 81 00               248 	.db	#-127,#0x00
   019C 81 00               249 	.db	#-127,#0x00
   019E 81 00               250 	.db	#-127,#0x00
   01A0 81 00               251 	.db	#-127,#0x00
   01A2 81 00               252 	.db	#-127,#0x00
   01A4 81 00               253 	.db	#-127,#0x00
   01A6 81 00               254 	.db	#-127,#0x00
   01A8 81 00               255 	.db	#-127,#0x00
   01AA 81 00               256 	.db	#-127,#0x00
   01AC 81 00               257 	.db	#-127,#0x00
   01AE 81 00               258 	.db	#-127,#0x00
   01B0 81 00               259 	.db	#-127,#0x00
   01B2 81 00               260 	.db	#-127,#0x00
   01B4 81 00               261 	.db	#-127,#0x00
   01B6 81 00               262 	.db	#-127,#0x00
   01B8 81 00               263 	.db	#-127,#0x00
   01BA 81 00               264 	.db	#-127,#0x00
   01BC 81 00               265 	.db	#-127,#0x00
   01BE 81 00               266 	.db	#-127,#0x00
   01C0 81 00               267 	.db	#-127,#0x00
   01C2 81 00               268 	.db	#-127,#0x00
   01C4 81 00               269 	.db	#-127,#0x00
   01C6 81 00               270 	.db	#-127,#0x00
   01C8 81 00               271 	.db	#-127,#0x00
   01CA 81 00               272 	.db	#-127,#0x00
   01CC 81 00               273 	.db	#-127,#0x00
   01CE 81 00               274 	.db	#-127,#0x00
   01D0 81 00               275 	.db	#-127,#0x00
   01D2 81 00               276 	.db	#-127,#0x00
   01D4 81 00               277 	.db	#-127,#0x00
   01D6 81 00               278 	.db	#-127,#0x00
   01D8 81 00               279 	.db	#-127,#0x00
   01DA 81 00               280 	.db	#-127,#0x00
   01DC 81 00               281 	.db	#-127,#0x00
   01DE 81 00               282 	.db	#-127,#0x00
   01E0 81 00               283 	.db	#-127,#0x00
   01E2 81 00               284 	.db	#-127,#0x00
   01E4 81 00               285 	.db	#-127,#0x00
   01E6 81 00               286 	.db	#-127,#0x00
   01E8 81 00               287 	.db	#-127,#0x00
   01EA 81 00               288 	.db	#-127,#0x00
   01EC 81 00               289 	.db	#-127,#0x00
   01EE 81 00               290 	.db	#-127,#0x00
   01F0 81 00               291 	.db	#-127,#0x00
   01F2 81 00               292 	.db	#-127,#0x00
   01F4 81 00               293 	.db	#-127,#0x00
   01F6 81 00               294 	.db	#-127,#0x00
   01F8 81 00               295 	.db	#-127,#0x00
   01FA 81 00               296 	.db	#-127,#0x00
   01FC 81 00               297 	.db	#-127,#0x00
   01FE 81 00               298 	.db	#-127,#0x00
   0200 81 00               299 	.db	#-127,#0x00
   0202 81 00               300 	.db	#-127,#0x00
   0204 81 00               301 	.db	#-127,#0x00
   0206 81 00               302 	.db	#-127,#0x00
   0208 81 00               303 	.db	#-127,#0x00
   020A 81 00               304 	.db	#-127,#0x00
   020C 81 00               305 	.db	#-127,#0x00
   020E 81 00               306 	.db	#-127,#0x00
   0210 83 00               307 	.db	#-125,#0x00
   0212 00                  308 	.db	0
                            309 ;demo.c:42: volatile int vbicount=0;
   0213 FD 21r40s40         310 	ld	iy,#_vbicount
   0217 FD 36 00 00         311 	ld	0 (iy),#0x00
   021B FD 21r40s40         312 	ld	iy,#_vbicount
   021F FD 36 01 00         313 	ld	1 (iy),#0x00
                            314 ;demo.c:43: volatile int tick=0;
   0223 FD 21r42s40         315 	ld	iy,#_tick
   0227 FD 36 00 00         316 	ld	0 (iy),#0x00
   022B FD 21r42s40         317 	ld	iy,#_tick
   022F FD 36 01 00         318 	ld	1 (iy),#0x00
                            319 ;demo.c:213: uint8_t yofff = 0;
   0233 FD 21r4Cs40         320 	ld	iy,#_yofff
   0237 FD 36 00 00         321 	ld	0 (iy),#0x00
                            322 ;demo.c:214: uint8_t cc = 0;
   023B FD 21r4Ds40         323 	ld	iy,#_cc
   023F FD 36 00 00         324 	ld	0 (iy),#0x00
                            325 ;demo.c:215: static int flipper = 0;
   0243 FD 21r4Es40         326 	ld	iy,#_flipper
   0247 FD 36 00 00         327 	ld	0 (iy),#0x00
   024B FD 21r4Es40         328 	ld	iy,#_flipper
   024F FD 36 01 00         329 	ld	1 (iy),#0x00
                            330 ;demo.c:216: static int ymmmf = 0;
   0253 FD 21r50s40         331 	ld	iy,#_ymmmf
   0257 FD 36 00 00         332 	ld	0 (iy),#0x00
   025B FD 21r50s40         333 	ld	iy,#_ymmmf
   025F FD 36 01 00         334 	ld	1 (iy),#0x00
                            335 ;demo.c:248: char block_init = 0;
   0263 FD 21r52s40         336 	ld	iy,#_block_init
   0267 FD 36 00 00         337 	ld	0 (iy),#0x00
                            338 ;demo.c:250: int bsx = 0;
   026B FD 21r53s40         339 	ld	iy,#_bsx
   026F FD 36 00 00         340 	ld	0 (iy),#0x00
   0273 FD 21r53s40         341 	ld	iy,#_bsx
   0277 FD 36 01 00         342 	ld	1 (iy),#0x00
                            343 ;demo.c:251: int bsy = 0;
   027B FD 21r55s40         344 	ld	iy,#_bsy
   027F FD 36 00 00         345 	ld	0 (iy),#0x00
   0283 FD 21r55s40         346 	ld	iy,#_bsy
   0287 FD 36 01 00         347 	ld	1 (iy),#0x00
                            348 ;demo.c:252: int btx = 0;
   028B FD 21r57s40         349 	ld	iy,#_btx
   028F FD 36 00 00         350 	ld	0 (iy),#0x00
   0293 FD 21r57s40         351 	ld	iy,#_btx
   0297 FD 36 01 00         352 	ld	1 (iy),#0x00
                            353 ;demo.c:253: int bty = 0;
   029B FD 21r59s40         354 	ld	iy,#_bty
   029F FD 36 00 00         355 	ld	0 (iy),#0x00
   02A3 FD 21r59s40         356 	ld	iy,#_bty
   02A7 FD 36 01 00         357 	ld	1 (iy),#0x00
                            358 ;demo.c:255: int btab[16] = {0};
   02AB 21r5Bs40            359 	ld	hl,#_btab
   02AE CDr00s00            360 	call	__initrleblock
   02B1 E0 00               361 	.db	#-32,#0x00
   02B3 00                  362 	.db	0
                            363 ;demo.c:257: int flof = 0;
   02B4 FD 21r7Bs40         364 	ld	iy,#_flof
   02B8 FD 36 00 00         365 	ld	0 (iy),#0x00
   02BC FD 21r7Bs40         366 	ld	iy,#_flof
   02C0 FD 36 01 00         367 	ld	1 (iy),#0x00
                            368 ;demo.c:307: int linenum = 0;
   02C4 FD 21r7Ds40         369 	ld	iy,#_linenum
   02C8 FD 36 00 00         370 	ld	0 (iy),#0x00
   02CC FD 21r7Ds40         371 	ld	iy,#_linenum
   02D0 FD 36 01 00         372 	ld	1 (iy),#0x00
                            373 ;demo.c:380: int lx = 0;
   02D4 FD 21r7Fs40         374 	ld	iy,#_lx
   02D8 FD 36 00 00         375 	ld	0 (iy),#0x00
   02DC FD 21r7Fs40         376 	ld	iy,#_lx
   02E0 FD 36 01 00         377 	ld	1 (iy),#0x00
                            378 ;demo.c:381: int ly = 0;
   02E4 FD 21r81s40         379 	ld	iy,#_ly
   02E8 FD 36 00 00         380 	ld	0 (iy),#0x00
   02EC FD 21r81s40         381 	ld	iy,#_ly
   02F0 FD 36 01 00         382 	ld	1 (iy),#0x00
                            383 ;demo.c:451: static int xo = 0;
   02F4 FD 21r83s40         384 	ld	iy,#_xo
   02F8 FD 36 00 00         385 	ld	0 (iy),#0x00
   02FC FD 21r83s40         386 	ld	iy,#_xo
   0300 FD 36 01 00         387 	ld	1 (iy),#0x00
                            388 ;demo.c:452: static int yo = 0;
   0304 FD 21r85s40         389 	ld	iy,#_yo
   0308 FD 36 00 00         390 	ld	0 (iy),#0x00
   030C FD 21r85s40         391 	ld	iy,#_yo
   0310 FD 36 01 00         392 	ld	1 (iy),#0x00
                            393 ;demo.c:453: static int po = 0;
   0314 FD 21r87s40         394 	ld	iy,#_po
   0318 FD 36 00 00         395 	ld	0 (iy),#0x00
   031C FD 21r87s40         396 	ld	iy,#_po
   0320 FD 36 01 00         397 	ld	1 (iy),#0x00
                            398 ;demo.c:454: static int fffaaa = 0;
   0324 FD 21r89s40         399 	ld	iy,#_fffaaa
   0328 FD 36 00 00         400 	ld	0 (iy),#0x00
   032C FD 21r89s40         401 	ld	iy,#_fffaaa
   0330 FD 36 01 00         402 	ld	1 (iy),#0x00
                            403 ;--------------------------------------------------------
                            404 ; Home
                            405 ;--------------------------------------------------------
                            406 	.area _HOME
                            407 	.area _HOME
                            408 ;--------------------------------------------------------
                            409 ; code
                            410 ;--------------------------------------------------------
                            411 	.area _CODE
                            412 ;demo.c:46: int isNthBitSet (unsigned char c, int n) {
                            413 ;	---------------------------------
                            414 ; Function isNthBitSet
                            415 ; ---------------------------------
   0000                     416 _isNthBitSet_start::
   0000                     417 _isNthBitSet:
   0000 DD E5               418 	push	ix
   0002 DD 21 00 00         419 	ld	ix,#0
   0006 DD 39               420 	add	ix,sp
                            421 ;demo.c:48: return ((c & mask[n]) != 0);
   0008 3Er44               422 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            423 	add	a,5 (ix)
   000D 4F                  424 	ld	c,a
   000E 3Es40               425 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            426 	adc	a,6 (ix)
   0013 47                  427 	ld	b,a
   0014 0A                  428 	ld	a,(bc)
   0015 DD A6 04            429 	and	a,4 (ix)
   0018 20 04               430 	jr	NZ,00103$
   001A 3E 01               431 	ld	a,#0x01
   001C 18 01               432 	jr	00104$
   001E                     433 00103$:
   001E AF                  434 	xor	a,a
   001F                     435 00104$:
   001F B7                  436 	or	a,a
   0020 D6 01               437 	sub	a,#0x01
   0022 3E 00               438 	ld	a,#0x00
   0024 17                  439 	rla
   0025 4F                  440 	ld	c,a
   0026 69                  441 	ld	l,c
   0027 26 00               442 	ld	h,#0x00
   0029 DD E1               443 	pop	ix
   002B C9                  444 	ret
   002C                     445 _isNthBitSet_end::
   002C                     446 _sintabx:
   002C 78 00               447 	.dw #0x0078
   002E 7A 00               448 	.dw #0x007A
   0030 7D 00               449 	.dw #0x007D
   0032 80 00               450 	.dw #0x0080
   0034 83 00               451 	.dw #0x0083
   0036 86 00               452 	.dw #0x0086
   0038 89 00               453 	.dw #0x0089
   003A 8C 00               454 	.dw #0x008C
   003C 8F 00               455 	.dw #0x008F
   003E 92 00               456 	.dw #0x0092
   0040 95 00               457 	.dw #0x0095
   0042 98 00               458 	.dw #0x0098
   0044 9A 00               459 	.dw #0x009A
   0046 9D 00               460 	.dw #0x009D
   0048 A0 00               461 	.dw #0x00A0
   004A A3 00               462 	.dw #0x00A3
   004C A5 00               463 	.dw #0x00A5
   004E A8 00               464 	.dw #0x00A8
   0050 AB 00               465 	.dw #0x00AB
   0052 AD 00               466 	.dw #0x00AD
   0054 B0 00               467 	.dw #0x00B0
   0056 B3 00               468 	.dw #0x00B3
   0058 B5 00               469 	.dw #0x00B5
   005A B8 00               470 	.dw #0x00B8
   005C BA 00               471 	.dw #0x00BA
   005E BD 00               472 	.dw #0x00BD
   0060 BF 00               473 	.dw #0x00BF
   0062 C1 00               474 	.dw #0x00C1
   0064 C4 00               475 	.dw #0x00C4
   0066 C6 00               476 	.dw #0x00C6
   0068 C8 00               477 	.dw #0x00C8
   006A CA 00               478 	.dw #0x00CA
   006C CC 00               479 	.dw #0x00CC
   006E CE 00               480 	.dw #0x00CE
   0070 D0 00               481 	.dw #0x00D0
   0072 D2 00               482 	.dw #0x00D2
   0074 D4 00               483 	.dw #0x00D4
   0076 D6 00               484 	.dw #0x00D6
   0078 D8 00               485 	.dw #0x00D8
   007A DA 00               486 	.dw #0x00DA
   007C DB 00               487 	.dw #0x00DB
   007E DD 00               488 	.dw #0x00DD
   0080 DE 00               489 	.dw #0x00DE
   0082 E0 00               490 	.dw #0x00E0
   0084 E1 00               491 	.dw #0x00E1
   0086 E3 00               492 	.dw #0x00E3
   0088 E4 00               493 	.dw #0x00E4
   008A E5 00               494 	.dw #0x00E5
   008C E6 00               495 	.dw #0x00E6
   008E E7 00               496 	.dw #0x00E7
   0090 E8 00               497 	.dw #0x00E8
   0092 E9 00               498 	.dw #0x00E9
   0094 EA 00               499 	.dw #0x00EA
   0096 EB 00               500 	.dw #0x00EB
   0098 EC 00               501 	.dw #0x00EC
   009A ED 00               502 	.dw #0x00ED
   009C ED 00               503 	.dw #0x00ED
   009E EE 00               504 	.dw #0x00EE
   00A0 EE 00               505 	.dw #0x00EE
   00A2 EF 00               506 	.dw #0x00EF
   00A4 EF 00               507 	.dw #0x00EF
   00A6 EF 00               508 	.dw #0x00EF
   00A8 EF 00               509 	.dw #0x00EF
   00AA EF 00               510 	.dw #0x00EF
   00AC F0 00               511 	.dw #0x00F0
   00AE EF 00               512 	.dw #0x00EF
   00B0 EF 00               513 	.dw #0x00EF
   00B2 EF 00               514 	.dw #0x00EF
   00B4 EF 00               515 	.dw #0x00EF
   00B6 EF 00               516 	.dw #0x00EF
   00B8 EE 00               517 	.dw #0x00EE
   00BA EE 00               518 	.dw #0x00EE
   00BC ED 00               519 	.dw #0x00ED
   00BE ED 00               520 	.dw #0x00ED
   00C0 EC 00               521 	.dw #0x00EC
   00C2 EB 00               522 	.dw #0x00EB
   00C4 EA 00               523 	.dw #0x00EA
   00C6 E9 00               524 	.dw #0x00E9
   00C8 E8 00               525 	.dw #0x00E8
   00CA E7 00               526 	.dw #0x00E7
   00CC E6 00               527 	.dw #0x00E6
   00CE E5 00               528 	.dw #0x00E5
   00D0 E4 00               529 	.dw #0x00E4
   00D2 E3 00               530 	.dw #0x00E3
   00D4 E1 00               531 	.dw #0x00E1
   00D6 E0 00               532 	.dw #0x00E0
   00D8 DE 00               533 	.dw #0x00DE
   00DA DD 00               534 	.dw #0x00DD
   00DC DB 00               535 	.dw #0x00DB
   00DE DA 00               536 	.dw #0x00DA
   00E0 D8 00               537 	.dw #0x00D8
   00E2 D6 00               538 	.dw #0x00D6
   00E4 D4 00               539 	.dw #0x00D4
   00E6 D2 00               540 	.dw #0x00D2
   00E8 D0 00               541 	.dw #0x00D0
   00EA CE 00               542 	.dw #0x00CE
   00EC CC 00               543 	.dw #0x00CC
   00EE CA 00               544 	.dw #0x00CA
   00F0 C8 00               545 	.dw #0x00C8
   00F2 C6 00               546 	.dw #0x00C6
   00F4 C4 00               547 	.dw #0x00C4
   00F6 C1 00               548 	.dw #0x00C1
   00F8 BF 00               549 	.dw #0x00BF
   00FA BD 00               550 	.dw #0x00BD
   00FC BA 00               551 	.dw #0x00BA
   00FE B8 00               552 	.dw #0x00B8
   0100 B5 00               553 	.dw #0x00B5
   0102 B3 00               554 	.dw #0x00B3
   0104 B0 00               555 	.dw #0x00B0
   0106 AD 00               556 	.dw #0x00AD
   0108 AB 00               557 	.dw #0x00AB
   010A A8 00               558 	.dw #0x00A8
   010C A5 00               559 	.dw #0x00A5
   010E A3 00               560 	.dw #0x00A3
   0110 A0 00               561 	.dw #0x00A0
   0112 9D 00               562 	.dw #0x009D
   0114 9A 00               563 	.dw #0x009A
   0116 98 00               564 	.dw #0x0098
   0118 95 00               565 	.dw #0x0095
   011A 92 00               566 	.dw #0x0092
   011C 8F 00               567 	.dw #0x008F
   011E 8C 00               568 	.dw #0x008C
   0120 89 00               569 	.dw #0x0089
   0122 86 00               570 	.dw #0x0086
   0124 83 00               571 	.dw #0x0083
   0126 80 00               572 	.dw #0x0080
   0128 7D 00               573 	.dw #0x007D
   012A 7A 00               574 	.dw #0x007A
   012C 78 00               575 	.dw #0x0078
   012E 75 00               576 	.dw #0x0075
   0130 72 00               577 	.dw #0x0072
   0132 6F 00               578 	.dw #0x006F
   0134 6C 00               579 	.dw #0x006C
   0136 69 00               580 	.dw #0x0069
   0138 66 00               581 	.dw #0x0066
   013A 63 00               582 	.dw #0x0063
   013C 60 00               583 	.dw #0x0060
   013E 5D 00               584 	.dw #0x005D
   0140 5A 00               585 	.dw #0x005A
   0142 57 00               586 	.dw #0x0057
   0144 55 00               587 	.dw #0x0055
   0146 52 00               588 	.dw #0x0052
   0148 4F 00               589 	.dw #0x004F
   014A 4C 00               590 	.dw #0x004C
   014C 4A 00               591 	.dw #0x004A
   014E 47 00               592 	.dw #0x0047
   0150 44 00               593 	.dw #0x0044
   0152 42 00               594 	.dw #0x0042
   0154 3F 00               595 	.dw #0x003F
   0156 3C 00               596 	.dw #0x003C
   0158 3A 00               597 	.dw #0x003A
   015A 37 00               598 	.dw #0x0037
   015C 35 00               599 	.dw #0x0035
   015E 32 00               600 	.dw #0x0032
   0160 30 00               601 	.dw #0x0030
   0162 2E 00               602 	.dw #0x002E
   0164 2B 00               603 	.dw #0x002B
   0166 29 00               604 	.dw #0x0029
   0168 27 00               605 	.dw #0x0027
   016A 25 00               606 	.dw #0x0025
   016C 23 00               607 	.dw #0x0023
   016E 21 00               608 	.dw #0x0021
   0170 1F 00               609 	.dw #0x001F
   0172 1D 00               610 	.dw #0x001D
   0174 1B 00               611 	.dw #0x001B
   0176 19 00               612 	.dw #0x0019
   0178 17 00               613 	.dw #0x0017
   017A 15 00               614 	.dw #0x0015
   017C 14 00               615 	.dw #0x0014
   017E 12 00               616 	.dw #0x0012
   0180 11 00               617 	.dw #0x0011
   0182 0F 00               618 	.dw #0x000F
   0184 0E 00               619 	.dw #0x000E
   0186 0C 00               620 	.dw #0x000C
   0188 0B 00               621 	.dw #0x000B
   018A 0A 00               622 	.dw #0x000A
   018C 09 00               623 	.dw #0x0009
   018E 08 00               624 	.dw #0x0008
   0190 07 00               625 	.dw #0x0007
   0192 06 00               626 	.dw #0x0006
   0194 05 00               627 	.dw #0x0005
   0196 04 00               628 	.dw #0x0004
   0198 03 00               629 	.dw #0x0003
   019A 02 00               630 	.dw #0x0002
   019C 02 00               631 	.dw #0x0002
   019E 01 00               632 	.dw #0x0001
   01A0 01 00               633 	.dw #0x0001
   01A2 00 00               634 	.dw #0x0000
   01A4 00 00               635 	.dw #0x0000
   01A6 00 00               636 	.dw #0x0000
   01A8 00 00               637 	.dw #0x0000
   01AA 00 00               638 	.dw #0x0000
   01AC 00 00               639 	.dw #0x0000
   01AE 00 00               640 	.dw #0x0000
   01B0 00 00               641 	.dw #0x0000
   01B2 00 00               642 	.dw #0x0000
   01B4 00 00               643 	.dw #0x0000
   01B6 00 00               644 	.dw #0x0000
   01B8 01 00               645 	.dw #0x0001
   01BA 01 00               646 	.dw #0x0001
   01BC 02 00               647 	.dw #0x0002
   01BE 02 00               648 	.dw #0x0002
   01C0 03 00               649 	.dw #0x0003
   01C2 04 00               650 	.dw #0x0004
   01C4 05 00               651 	.dw #0x0005
   01C6 06 00               652 	.dw #0x0006
   01C8 07 00               653 	.dw #0x0007
   01CA 08 00               654 	.dw #0x0008
   01CC 09 00               655 	.dw #0x0009
   01CE 0A 00               656 	.dw #0x000A
   01D0 0B 00               657 	.dw #0x000B
   01D2 0C 00               658 	.dw #0x000C
   01D4 0E 00               659 	.dw #0x000E
   01D6 0F 00               660 	.dw #0x000F
   01D8 11 00               661 	.dw #0x0011
   01DA 12 00               662 	.dw #0x0012
   01DC 14 00               663 	.dw #0x0014
   01DE 15 00               664 	.dw #0x0015
   01E0 17 00               665 	.dw #0x0017
   01E2 19 00               666 	.dw #0x0019
   01E4 1B 00               667 	.dw #0x001B
   01E6 1D 00               668 	.dw #0x001D
   01E8 1F 00               669 	.dw #0x001F
   01EA 21 00               670 	.dw #0x0021
   01EC 23 00               671 	.dw #0x0023
   01EE 25 00               672 	.dw #0x0025
   01F0 27 00               673 	.dw #0x0027
   01F2 29 00               674 	.dw #0x0029
   01F4 2B 00               675 	.dw #0x002B
   01F6 2E 00               676 	.dw #0x002E
   01F8 30 00               677 	.dw #0x0030
   01FA 32 00               678 	.dw #0x0032
   01FC 35 00               679 	.dw #0x0035
   01FE 37 00               680 	.dw #0x0037
   0200 3A 00               681 	.dw #0x003A
   0202 3C 00               682 	.dw #0x003C
   0204 3F 00               683 	.dw #0x003F
   0206 42 00               684 	.dw #0x0042
   0208 44 00               685 	.dw #0x0044
   020A 47 00               686 	.dw #0x0047
   020C 4A 00               687 	.dw #0x004A
   020E 4C 00               688 	.dw #0x004C
   0210 4F 00               689 	.dw #0x004F
   0212 52 00               690 	.dw #0x0052
   0214 55 00               691 	.dw #0x0055
   0216 57 00               692 	.dw #0x0057
   0218 5A 00               693 	.dw #0x005A
   021A 5D 00               694 	.dw #0x005D
   021C 60 00               695 	.dw #0x0060
   021E 63 00               696 	.dw #0x0063
   0220 66 00               697 	.dw #0x0066
   0222 69 00               698 	.dw #0x0069
   0224 6C 00               699 	.dw #0x006C
   0226 6F 00               700 	.dw #0x006F
   0228 72 00               701 	.dw #0x0072
   022A 75 00               702 	.dw #0x0075
                            703 ;demo.c:55: void my_isr(void) interrupt
                            704 ;	---------------------------------
                            705 ; Function my_isr
                            706 ; ---------------------------------
   022C                     707 _my_isr_start::
   022C                     708 _my_isr:
   022C F5                  709 	push	af
   022D C5                  710 	push	bc
   022E D5                  711 	push	de
   022F E5                  712 	push	hl
   0230 FD E5               713 	push	iy
                            714 ;demo.c:57: DI;
   0232 F3                  715 		di 
                            716 ;demo.c:59: READ_VDP_STATUS;
   0233 DB 99               717 		in a,(#0x99) 
                            718 ;demo.c:61: PLY_Play();
   0235 CDr00s00            719 	call	_PLY_Play
                            720 ;demo.c:62: PLY_SendRegisters();
   0238 CDr00s00            721 	call	_PLY_SendRegisters
                            722 ;demo.c:64: vbicount+=2;
   023B 21r40s40            723 	ld	hl,#_vbicount
   023E 7E                  724 	ld	a,(hl)
   023F C6 02               725 	add	a,#0x02
   0241 23                  726 	inc	hl
   0242 2B                  727 	dec	hl
   0243 C5                  728 	push	bc
   0244 4F                  729 	ld	c, a
   0245 23                  730 	inc	hl
   0246 7E                  731 	ld	a, (hl)
   0247 47                  732 	ld	b, a
   0248 79                  733 	ld	a, c
   0249 2B                  734 	dec	hl
   024A 77                  735 	ld	(hl), a
   024B 78                  736 	ld	a, b
   024C C1                  737 	pop	bc
   024D CE 00               738 	adc	a,#0x00
   024F 23                  739 	inc	hl
   0250 77                  740 	ld	(hl),a
                            741 ;demo.c:65: tick++;
   0251 FD 21r42s40         742 	ld	iy,#_tick
   0255 FD 34 00            743 	inc	0 (iy)
   0258 20 07               744 	jr	NZ,00103$
   025A FD 21r42s40         745 	ld	iy,#_tick
   025E FD 34 01            746 	inc	1 (iy)
   0261                     747 00103$:
                            748 ;demo.c:67: EI;
   0261 FB                  749 		ei 
   0262 FD E1               750 	pop	iy
   0264 E1                  751 	pop	hl
   0265 D1                  752 	pop	de
   0266 C1                  753 	pop	bc
   0267 F1                  754 	pop	af
   0268 ED 4D               755 	reti
   026A                     756 _my_isr_end::
                            757 ;demo.c:70: void color_isr(void) interrupt
                            758 ;	---------------------------------
                            759 ; Function color_isr
                            760 ; ---------------------------------
   026A                     761 _color_isr_start::
   026A                     762 _color_isr:
   026A F5                  763 	push	af
   026B C5                  764 	push	bc
   026C D5                  765 	push	de
   026D E5                  766 	push	hl
   026E FD E5               767 	push	iy
                            768 ;demo.c:72: DI;
   0270 F3                  769 		di 
                            770 ;demo.c:74: if(isNthBitSet(vdp2_status(1),0)) {
   0271 3E 01               771 	ld	a,#0x01
   0273 F5                  772 	push	af
   0274 33                  773 	inc	sp
   0275 CDr00s00            774 	call	_vdp2_status
   0278 33                  775 	inc	sp
   0279 4D                  776 	ld	c,l
   027A 21 00 00            777 	ld	hl,#0x0000
   027D E5                  778 	push	hl
   027E 79                  779 	ld	a,c
   027F F5                  780 	push	af
   0280 33                  781 	inc	sp
   0281 CDr00s00            782 	call	_isNthBitSet
   0284 F1                  783 	pop	af
   0285 33                  784 	inc	sp
   0286 44                  785 	ld	b,h
   0287 4D                  786 	ld	c,l
   0288 79                  787 	ld	a,c
   0289 B0                  788 	or	a,b
   028A 28 19               789 	jr	Z,00102$
                            790 ;demo.c:75: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   028C 21r40s40            791 	ld	hl,#_vbicount + 0
   028F 4E                  792 	ld	c,(hl)
   0290 06 00               793 	ld	b,#0x00
   0292 21r00s00            794 	ld	hl,#_sintab
   0295 09                  795 	add	hl,bc
   0296 7E                  796 	ld	a,(hl)
   0297 F5                  797 	push	af
   0298 33                  798 	inc	sp
   0299 3E 17               799 	ld	a,#0x17
   029B F5                  800 	push	af
   029C 33                  801 	inc	sp
   029D CDr00s00            802 	call	_vdp_register
   02A0 F1                  803 	pop	af
                            804 ;demo.c:76: READ_VDP_STATUS;
   02A1 DB 99               805 		in a,(#0x99) 
   02A3 18 18               806 	jr	00103$
   02A5                     807 00102$:
                            808 ;demo.c:79: READ_VDP_STATUS;
   02A5 DB 99               809 		in a,(#0x99) 
                            810 ;demo.c:80: vbicount++;
   02A7 FD 21r40s40         811 	ld	iy,#_vbicount
   02AB FD 34 00            812 	inc	0 (iy)
   02AE 20 07               813 	jr	NZ,00107$
   02B0 FD 21r40s40         814 	ld	iy,#_vbicount
   02B4 FD 34 01            815 	inc	1 (iy)
   02B7                     816 00107$:
                            817 ;demo.c:83: PLY_Play();
   02B7 CDr00s00            818 	call	_PLY_Play
                            819 ;demo.c:84: PLY_SendRegisters();
   02BA CDr00s00            820 	call	_PLY_SendRegisters
   02BD                     821 00103$:
                            822 ;demo.c:87: EI;
   02BD FB                  823 		ei 
   02BE FD E1               824 	pop	iy
   02C0 E1                  825 	pop	hl
   02C1 D1                  826 	pop	de
   02C2 C1                  827 	pop	bc
   02C3 F1                  828 	pop	af
   02C4 ED 4D               829 	reti
   02C6                     830 _color_isr_end::
                            831 ;demo.c:94: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml) {
                            832 ;	---------------------------------
                            833 ; Function ge5_load
                            834 ; ---------------------------------
   02C6                     835 _ge5_load_start::
   02C6                     836 _ge5_load:
   02C6 DD E5               837 	push	ix
   02C8 DD 21 00 00         838 	ld	ix,#0
   02CC DD 39               839 	add	ix,sp
   02CE 21 D2 FF            840 	ld	hl,#-46
   02D1 39                  841 	add	hl,sp
   02D2 F9                  842 	ld	sp,hl
                            843 ;demo.c:98: memset((uint8_t *) &f, 0, sizeof(fcb));
   02D3 21 00 00            844 	ld	hl,#0x0000
   02D6 39                  845 	add	hl,sp
   02D7 4D                  846 	ld	c,l
   02D8 44                  847 	ld	b,h
   02D9 21 2E 00            848 	ld	hl,#0x002E
   02DC E5                  849 	push	hl
   02DD 3E 00               850 	ld	a,#0x00
   02DF F5                  851 	push	af
   02E0 33                  852 	inc	sp
   02E1 C5                  853 	push	bc
   02E2 CDr00s00            854 	call	_memset
   02E5 F1                  855 	pop	af
   02E6 F1                  856 	pop	af
   02E7 33                  857 	inc	sp
                            858 ;demo.c:100: f.record_size = 128;
   02E8 21 00 00            859 	ld	hl,#0x0000
   02EB 39                  860 	add	hl,sp
   02EC 4D                  861 	ld	c,l
   02ED 44                  862 	ld	b,h
   02EE 21 0F 00            863 	ld	hl,#0x000F
   02F1 09                  864 	add	hl,bc
   02F2 EB                  865 	ex	de,hl
   02F3 3E 80               866 	ld	a,#0x80
   02F5 12                  867 	ld	(de),a
                            868 ;demo.c:101: f.drive = 0;
   02F6 3E 00               869 	ld	a,#0x00
   02F8 02                  870 	ld	(bc),a
                            871 ;demo.c:103: memcpy(f.name, file_name, 11);
   02F9 DD 5E 04            872 	ld	e,4 (ix)
   02FC DD 56 05            873 	ld	d,5 (ix)
   02FF 03                  874 	inc	bc
   0300 21 0B 00            875 	ld	hl,#0x000B
   0303 E5                  876 	push	hl
   0304 D5                  877 	push	de
   0305 C5                  878 	push	bc
   0306 CDr00s00            879 	call	_memcpy
   0309 F1                  880 	pop	af
   030A F1                  881 	pop	af
   030B F1                  882 	pop	af
                            883 ;demo.c:105: if (open(&f) != 0) return 0;
   030C 21 00 00            884 	ld	hl,#0x0000
   030F 39                  885 	add	hl,sp
   0310 E5                  886 	push	hl
   0311 CDr00s00            887 	call	_open
   0314 F1                  888 	pop	af
   0315 AF                  889 	xor	a,a
   0316 B5                  890 	or	a,l
   0317 28 05               891 	jr	Z,00102$
   0319 2E 00               892 	ld	l,#0x00
   031B C3r92s03            893 	jp	00114$
   031E                     894 00102$:
                            895 ;demo.c:106: vdp_set_write_address(vramh, vraml);
   031E DD 6E 07            896 	ld	l,7 (ix)
   0321 DD 66 08            897 	ld	h,8 (ix)
   0324 E5                  898 	push	hl
   0325 DD 7E 06            899 	ld	a,6 (ix)
   0328 F5                  900 	push	af
   0329 33                  901 	inc	sp
   032A CDr00s00            902 	call	_vdp_set_write_address
   032D F1                  903 	pop	af
   032E 33                  904 	inc	sp
                            905 ;demo.c:108: for (i = 0; i < 213; i++) {
   032F 0E 00               906 	ld	c,#0x00
   0331                     907 00110$:
   0331 79                  908 	ld	a,c
   0332 D6 D5               909 	sub	a,#0xD5
   0334 D2r87s03            910 	jp	NC,00113$
                            911 ;demo.c:109: if (block_set_data_ptr(scratch) != 0) return 0;
   0337 C5                  912 	push	bc
   0338 21r80s3F            913 	ld	hl,#_scratch
   033B E5                  914 	push	hl
   033C CDr00s00            915 	call	_block_set_data_ptr
   033F F1                  916 	pop	af
   0340 7D                  917 	ld	a,l
   0341 C1                  918 	pop	bc
   0342 47                  919 	ld	b,a
   0343 B7                  920 	or	a,a
   0344 28 05               921 	jr	Z,00104$
   0346 2E 00               922 	ld	l,#0x00
   0348 C3r92s03            923 	jp	00114$
   034B                     924 00104$:
                            925 ;demo.c:110: if (block_read(&f) != 0) return 0;
   034B 21 00 00            926 	ld	hl,#0x0000
   034E 39                  927 	add	hl,sp
   034F C5                  928 	push	bc
   0350 E5                  929 	push	hl
   0351 CDr00s00            930 	call	_block_read
   0354 F1                  931 	pop	af
   0355 7D                  932 	ld	a,l
   0356 C1                  933 	pop	bc
   0357 47                  934 	ld	b,a
   0358 B7                  935 	or	a,a
   0359 28 04               936 	jr	Z,00106$
   035B 2E 00               937 	ld	l,#0x00
   035D 18 33               938 	jr	00114$
   035F                     939 00106$:
                            940 ;demo.c:112: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   035F AF                  941 	xor	a,a
   0360 B1                  942 	or	a,c
   0361 20 11               943 	jr	NZ,00108$
   0363 11r87s3F            944 	ld	de,#_scratch + 7
   0366 C5                  945 	push	bc
   0367 3E 79               946 	ld	a,#0x79
   0369 F5                  947 	push	af
   036A 33                  948 	inc	sp
   036B D5                  949 	push	de
   036C CDr00s00            950 	call	_vdp_load_screen
   036F F1                  951 	pop	af
   0370 33                  952 	inc	sp
   0371 C1                  953 	pop	bc
   0372 18 0F               954 	jr	00112$
   0374                     955 00108$:
                            956 ;demo.c:113: else vdp_load_screen(scratch, 128);
   0374 C5                  957 	push	bc
   0375 3E 80               958 	ld	a,#0x80
   0377 F5                  959 	push	af
   0378 33                  960 	inc	sp
   0379 21r80s3F            961 	ld	hl,#_scratch
   037C E5                  962 	push	hl
   037D CDr00s00            963 	call	_vdp_load_screen
   0380 F1                  964 	pop	af
   0381 33                  965 	inc	sp
   0382 C1                  966 	pop	bc
   0383                     967 00112$:
                            968 ;demo.c:108: for (i = 0; i < 213; i++) {
   0383 0C                  969 	inc	c
   0384 C3r31s03            970 	jp	00110$
   0387                     971 00113$:
                            972 ;demo.c:116: close(&f);
   0387 21 00 00            973 	ld	hl,#0x0000
   038A 39                  974 	add	hl,sp
   038B E5                  975 	push	hl
   038C CDr00s00            976 	call	_close
   038F F1                  977 	pop	af
                            978 ;demo.c:118: return 1;
   0390 2E 01               979 	ld	l,#0x01
   0392                     980 00114$:
   0392 DD F9               981 	ld	sp,ix
   0394 DD E1               982 	pop	ix
   0396 C9                  983 	ret
   0397                     984 _ge5_load_end::
                            985 ;demo.c:121: void scratch_clear() {
                            986 ;	---------------------------------
                            987 ; Function scratch_clear
                            988 ; ---------------------------------
   0397                     989 _scratch_clear_start::
   0397                     990 _scratch_clear:
                            991 ;demo.c:122: memset((uint8_t *) &scratch, 0, 128);
   0397 21 80 00            992 	ld	hl,#0x0080
   039A E5                  993 	push	hl
   039B 3E 00               994 	ld	a,#0x00
   039D F5                  995 	push	af
   039E 33                  996 	inc	sp
   039F 21r80s3F            997 	ld	hl,#_scratch
   03A2 E5                  998 	push	hl
   03A3 CDr00s00            999 	call	_memset
   03A6 F1                 1000 	pop	af
   03A7 F1                 1001 	pop	af
   03A8 33                 1002 	inc	sp
   03A9 C9                 1003 	ret
   03AA                    1004 _scratch_clear_end::
                           1005 ;demo.c:125: uint8_t pal_load(char *file_name, uint8_t ss) {
                           1006 ;	---------------------------------
                           1007 ; Function pal_load
                           1008 ; ---------------------------------
   03AA                    1009 _pal_load_start::
   03AA                    1010 _pal_load:
   03AA DD E5              1011 	push	ix
   03AC DD 21 00 00        1012 	ld	ix,#0
   03B0 DD 39              1013 	add	ix,sp
   03B2 21 D2 FF           1014 	ld	hl,#-46
   03B5 39                 1015 	add	hl,sp
   03B6 F9                 1016 	ld	sp,hl
                           1017 ;demo.c:128: memset((uint8_t *) &f, 0, sizeof(fcb));
   03B7 21 00 00           1018 	ld	hl,#0x0000
   03BA 39                 1019 	add	hl,sp
   03BB 4D                 1020 	ld	c,l
   03BC 44                 1021 	ld	b,h
   03BD 21 2E 00           1022 	ld	hl,#0x002E
   03C0 E5                 1023 	push	hl
   03C1 3E 00              1024 	ld	a,#0x00
   03C3 F5                 1025 	push	af
   03C4 33                 1026 	inc	sp
   03C5 C5                 1027 	push	bc
   03C6 CDr00s00           1028 	call	_memset
   03C9 F1                 1029 	pop	af
   03CA F1                 1030 	pop	af
   03CB 33                 1031 	inc	sp
                           1032 ;demo.c:129: scratch_clear();
   03CC CDr97s03           1033 	call	_scratch_clear
                           1034 ;demo.c:131: f.record_size = ss;
   03CF 21 00 00           1035 	ld	hl,#0x0000
   03D2 39                 1036 	add	hl,sp
   03D3 4D                 1037 	ld	c,l
   03D4 44                 1038 	ld	b,h
   03D5 21 0F 00           1039 	ld	hl,#0x000F
   03D8 09                 1040 	add	hl,bc
   03D9 EB                 1041 	ex	de,hl
   03DA DD 7E 06           1042 	ld	a,6 (ix)
   03DD 12                 1043 	ld	(de),a
                           1044 ;demo.c:132: f.drive = 0;
   03DE 3E 00              1045 	ld	a,#0x00
   03E0 02                 1046 	ld	(bc),a
                           1047 ;demo.c:134: memcpy(f.name, file_name, 11);
   03E1 DD 5E 04           1048 	ld	e,4 (ix)
   03E4 DD 56 05           1049 	ld	d,5 (ix)
   03E7 03                 1050 	inc	bc
   03E8 21 0B 00           1051 	ld	hl,#0x000B
   03EB E5                 1052 	push	hl
   03EC D5                 1053 	push	de
   03ED C5                 1054 	push	bc
   03EE CDr00s00           1055 	call	_memcpy
   03F1 F1                 1056 	pop	af
   03F2 F1                 1057 	pop	af
   03F3 F1                 1058 	pop	af
                           1059 ;demo.c:136: if (open(&f) != 0) return 0;
   03F4 21 00 00           1060 	ld	hl,#0x0000
   03F7 39                 1061 	add	hl,sp
   03F8 E5                 1062 	push	hl
   03F9 CDr00s00           1063 	call	_open
   03FC F1                 1064 	pop	af
   03FD AF                 1065 	xor	a,a
   03FE B5                 1066 	or	a,l
   03FF 28 04              1067 	jr	Z,00102$
   0401 2E 00              1068 	ld	l,#0x00
   0403 18 40              1069 	jr	00107$
   0405                    1070 00102$:
                           1071 ;demo.c:137: if (block_set_data_ptr(scratch) != 0) return 0;
   0405 21r80s3F           1072 	ld	hl,#_scratch
   0408 E5                 1073 	push	hl
   0409 CDr00s00           1074 	call	_block_set_data_ptr
   040C F1                 1075 	pop	af
   040D AF                 1076 	xor	a,a
   040E B5                 1077 	or	a,l
   040F 28 04              1078 	jr	Z,00104$
   0411 2E 00              1079 	ld	l,#0x00
   0413 18 30              1080 	jr	00107$
   0415                    1081 00104$:
                           1082 ;demo.c:138: if (block_read(&f) != 0) return 0;
   0415 21 00 00           1083 	ld	hl,#0x0000
   0418 39                 1084 	add	hl,sp
   0419 E5                 1085 	push	hl
   041A CDr00s00           1086 	call	_block_read
   041D F1                 1087 	pop	af
   041E AF                 1088 	xor	a,a
   041F B5                 1089 	or	a,l
   0420 28 04              1090 	jr	Z,00106$
   0422 2E 00              1091 	ld	l,#0x00
   0424 18 1F              1092 	jr	00107$
   0426                    1093 00106$:
                           1094 ;demo.c:140: memcpy(cur_palette, scratch+7, ss);
   0426 DD 4E 06           1095 	ld	c,6 (ix)
   0429 06 00              1096 	ld	b,#0x00
   042B 11r87s3F           1097 	ld	de,#_scratch + 7
   042E C5                 1098 	push	bc
   042F D5                 1099 	push	de
   0430 21r00s40           1100 	ld	hl,#_cur_palette
   0433 E5                 1101 	push	hl
   0434 CDr00s00           1102 	call	_memcpy
   0437 F1                 1103 	pop	af
   0438 F1                 1104 	pop	af
   0439 F1                 1105 	pop	af
                           1106 ;demo.c:142: close(&f);
   043A 21 00 00           1107 	ld	hl,#0x0000
   043D 39                 1108 	add	hl,sp
   043E E5                 1109 	push	hl
   043F CDr00s00           1110 	call	_close
   0442 F1                 1111 	pop	af
                           1112 ;demo.c:143: return 1;
   0443 2E 01              1113 	ld	l,#0x01
   0445                    1114 00107$:
   0445 DD F9              1115 	ld	sp,ix
   0447 DD E1              1116 	pop	ix
   0449 C9                 1117 	ret
   044A                    1118 _pal_load_end::
                           1119 ;demo.c:147: void pause() {
                           1120 ;	---------------------------------
                           1121 ; Function pause
                           1122 ; ---------------------------------
   044A                    1123 _pause_start::
   044A                    1124 _pause:
                           1125 ;demo.c:148: uint8_t i,j,k = 0;
                           1126 ;demo.c:149: for (i = 0; i < 255; i++) {	
   044A 01 00 00           1127 	ld	bc,#0x0000
   044D                    1128 00104$:
   044D 78                 1129 	ld	a,b
   044E D6 FF              1130 	sub	a,#0xFF
   0450 D0                 1131 	ret	NC
                           1132 ;demo.c:150: for (j = 0; j < 255; j++) {
   0451 59                 1133 	ld	e,c
   0452 16 FF              1134 	ld	d,#0xFF
   0454                    1135 00103$:
                           1136 ;demo.c:151: k++;
   0454 1C                 1137 	inc	e
   0455 15                 1138 	dec	d
                           1139 ;demo.c:150: for (j = 0; j < 255; j++) {
   0456 AF                 1140 	xor	a,a
   0457 B2                 1141 	or	a,d
   0458 20 FA              1142 	jr	NZ,00103$
                           1143 ;demo.c:149: for (i = 0; i < 255; i++) {	
   045A 4B                 1144 	ld	c,e
   045B 04                 1145 	inc	b
   045C 18 EF              1146 	jr	00104$
   045E                    1147 _pause_end::
                           1148 ;demo.c:157: uint8_t raw_load(char *file_name, int size, char* buffer) {
                           1149 ;	---------------------------------
                           1150 ; Function raw_load
                           1151 ; ---------------------------------
   045E                    1152 _raw_load_start::
   045E                    1153 _raw_load:
   045E DD E5              1154 	push	ix
   0460 DD 21 00 00        1155 	ld	ix,#0
   0464 DD 39              1156 	add	ix,sp
   0466 21 D2 FF           1157 	ld	hl,#-46
   0469 39                 1158 	add	hl,sp
   046A F9                 1159 	ld	sp,hl
                           1160 ;demo.c:162: memset((uint8_t *) &f, 0, sizeof(fcb));
   046B 21 00 00           1161 	ld	hl,#0x0000
   046E 39                 1162 	add	hl,sp
   046F 4D                 1163 	ld	c,l
   0470 44                 1164 	ld	b,h
   0471 21 2E 00           1165 	ld	hl,#0x002E
   0474 E5                 1166 	push	hl
   0475 3E 00              1167 	ld	a,#0x00
   0477 F5                 1168 	push	af
   0478 33                 1169 	inc	sp
   0479 C5                 1170 	push	bc
   047A CDr00s00           1171 	call	_memset
   047D F1                 1172 	pop	af
   047E F1                 1173 	pop	af
   047F 33                 1174 	inc	sp
                           1175 ;demo.c:163: scratch_clear();
   0480 CDr97s03           1176 	call	_scratch_clear
                           1177 ;demo.c:165: f.record_size = 128;
   0483 21 00 00           1178 	ld	hl,#0x0000
   0486 39                 1179 	add	hl,sp
   0487 4D                 1180 	ld	c,l
   0488 44                 1181 	ld	b,h
   0489 21 0F 00           1182 	ld	hl,#0x000F
   048C 09                 1183 	add	hl,bc
   048D EB                 1184 	ex	de,hl
   048E 3E 80              1185 	ld	a,#0x80
   0490 12                 1186 	ld	(de),a
                           1187 ;demo.c:166: f.drive = 0;
   0491 3E 00              1188 	ld	a,#0x00
   0493 02                 1189 	ld	(bc),a
                           1190 ;demo.c:168: memcpy(f.name, file_name, 11);
   0494 DD 5E 04           1191 	ld	e,4 (ix)
   0497 DD 56 05           1192 	ld	d,5 (ix)
   049A 03                 1193 	inc	bc
   049B 21 0B 00           1194 	ld	hl,#0x000B
   049E E5                 1195 	push	hl
   049F D5                 1196 	push	de
   04A0 C5                 1197 	push	bc
   04A1 CDr00s00           1198 	call	_memcpy
   04A4 F1                 1199 	pop	af
   04A5 F1                 1200 	pop	af
   04A6 F1                 1201 	pop	af
                           1202 ;demo.c:170: if (open(&f) != 0) return 0;
   04A7 21 00 00           1203 	ld	hl,#0x0000
   04AA 39                 1204 	add	hl,sp
   04AB E5                 1205 	push	hl
   04AC CDr00s00           1206 	call	_open
   04AF F1                 1207 	pop	af
   04B0 AF                 1208 	xor	a,a
   04B1 B5                 1209 	or	a,l
   04B2 28 05              1210 	jr	Z,00116$
   04B4 2E 00              1211 	ld	l,#0x00
   04B6 C3r1Ds05           1212 	jp	00110$
                           1213 ;demo.c:172: while(total < size) {
   04B9                    1214 00116$:
   04B9 01 00 00           1215 	ld	bc,#0x0000
   04BC                    1216 00107$:
   04BC 79                 1217 	ld	a,c
   04BD DD 96 06           1218 	sub	a,6 (ix)
   04C0 78                 1219 	ld	a,b
   04C1 DD 9E 07           1220 	sbc	a,7 (ix)
   04C4 F2r12s05           1221 	jp	P,00109$
                           1222 ;demo.c:173: if (block_set_data_ptr(scratch) != 0) return 0;
   04C7 C5                 1223 	push	bc
   04C8 21r80s3F           1224 	ld	hl,#_scratch
   04CB E5                 1225 	push	hl
   04CC CDr00s00           1226 	call	_block_set_data_ptr
   04CF F1                 1227 	pop	af
   04D0 5D                 1228 	ld	e,l
   04D1 C1                 1229 	pop	bc
   04D2 AF                 1230 	xor	a,a
   04D3 B3                 1231 	or	a,e
   04D4 28 04              1232 	jr	Z,00104$
   04D6 2E 00              1233 	ld	l,#0x00
   04D8 18 43              1234 	jr	00110$
   04DA                    1235 00104$:
                           1236 ;demo.c:174: if (block_read(&f) != 0) return 0;
   04DA 21 00 00           1237 	ld	hl,#0x0000
   04DD 39                 1238 	add	hl,sp
   04DE C5                 1239 	push	bc
   04DF E5                 1240 	push	hl
   04E0 CDr00s00           1241 	call	_block_read
   04E3 F1                 1242 	pop	af
   04E4 5D                 1243 	ld	e,l
   04E5 C1                 1244 	pop	bc
   04E6 AF                 1245 	xor	a,a
   04E7 B3                 1246 	or	a,e
   04E8 28 04              1247 	jr	Z,00106$
   04EA 2E 00              1248 	ld	l,#0x00
   04EC 18 2F              1249 	jr	00110$
   04EE                    1250 00106$:
                           1251 ;demo.c:176: memcpy(buffer+total,scratch,incr);
   04EE DD 7E 08           1252 	ld	a,8 (ix)
   04F1 81                 1253 	add	a,c
   04F2 5F                 1254 	ld	e,a
   04F3 DD 7E 09           1255 	ld	a,9 (ix)
   04F6 88                 1256 	adc	a,b
   04F7 57                 1257 	ld	d,a
   04F8 C5                 1258 	push	bc
   04F9 21 80 00           1259 	ld	hl,#0x0080
   04FC E5                 1260 	push	hl
   04FD 21r80s3F           1261 	ld	hl,#_scratch
   0500 E5                 1262 	push	hl
   0501 D5                 1263 	push	de
   0502 CDr00s00           1264 	call	_memcpy
   0505 F1                 1265 	pop	af
   0506 F1                 1266 	pop	af
   0507 F1                 1267 	pop	af
   0508 C1                 1268 	pop	bc
                           1269 ;demo.c:178: total+=incr;
   0509 21 80 00           1270 	ld	hl,#0x0080
   050C 09                 1271 	add	hl,bc
   050D 4D                 1272 	ld	c,l
   050E 44                 1273 	ld	b,h
   050F C3rBCs04           1274 	jp	00107$
   0512                    1275 00109$:
                           1276 ;demo.c:181: close(&f);
   0512 21 00 00           1277 	ld	hl,#0x0000
   0515 39                 1278 	add	hl,sp
   0516 E5                 1279 	push	hl
   0517 CDr00s00           1280 	call	_close
   051A F1                 1281 	pop	af
                           1282 ;demo.c:183: return 1;
   051B 2E 01              1283 	ld	l,#0x01
   051D                    1284 00110$:
   051D DD F9              1285 	ld	sp,ix
   051F DD E1              1286 	pop	ix
   0521 C9                 1287 	ret
   0522                    1288 _raw_load_end::
                           1289 ;demo.c:186: void fadein() {
                           1290 ;	---------------------------------
                           1291 ; Function fadein
                           1292 ; ---------------------------------
   0522                    1293 _fadein_start::
   0522                    1294 _fadein:
   0522 DD E5              1295 	push	ix
   0524 DD 21 00 00        1296 	ld	ix,#0
   0528 DD 39              1297 	add	ix,sp
   052A F5                 1298 	push	af
                           1299 ;demo.c:189: if (tick < 4) return;
   052B 3Ar42s40           1300 	ld	a,(#_tick+0)
   052E D6 04              1301 	sub	a,#0x04
   0530 3Ar43s40           1302 	ld	a,(#_tick+1)
   0533 DE 00              1303 	sbc	a,#0x00
   0535 F2r3Bs05           1304 	jp	P,00102$
   0538 C3rE9s05           1305 	jp	00113$
   053B                    1306 00102$:
                           1307 ;demo.c:191: tick = 0;
   053B 21r42s40           1308 	ld	hl,#_tick + 0
   053E 36 00              1309 	ld	(hl), #0x00
   0540 21r43s40           1310 	ld	hl,#_tick + 1
   0543 36 00              1311 	ld	(hl), #0x00
                           1312 ;demo.c:193: for(i = 0; i < 32; i+=2) {
   0545 0E 00              1313 	ld	c,#0x00
   0547                    1314 00109$:
   0547 79                 1315 	ld	a,c
   0548 D6 20              1316 	sub	a,#0x20
   054A D2rE1s05           1317 	jp	NC,00112$
                           1318 ;demo.c:194: uint8_t r = scratch[i] >> 4;
   054D 3Er80              1319 	ld	a,#<_scratch
   054F 81                 1320 	add	a,c
   0550 5F                 1321 	ld	e,a
   0551 3Es3F              1322 	ld	a,#>_scratch
   0553 CE 00              1323 	adc	a,#0x00
   0555 57                 1324 	ld	d,a
   0556 1A                 1325 	ld	a,(de)
   0557 47                 1326 	ld	b,a
   0558 58                 1327 	ld	e,b
   0559 CB 3B              1328 	srl	e
   055B CB 3B              1329 	srl	e
   055D CB 3B              1330 	srl	e
   055F CB 3B              1331 	srl	e
                           1332 ;demo.c:195: uint8_t b = scratch[i] & 0xf;
   0561 78                 1333 	ld	a,b
   0562 E6 0F              1334 	and	a,#0x0F
   0564 DD 77 FF           1335 	ld	-1 (ix),a
                           1336 ;demo.c:196: uint8_t g = scratch[i+1];
   0567 51                 1337 	ld	d,c
   0568 14                 1338 	inc	d
   0569 3Er80              1339 	ld	a,#<_scratch
   056B 82                 1340 	add	a,d
   056C 6F                 1341 	ld	l,a
   056D 3Es3F              1342 	ld	a,#>_scratch
   056F CE 00              1343 	adc	a,#0x00
   0571 67                 1344 	ld	h,a
   0572 56                 1345 	ld	d,(hl)
   0573 DD 72 FE           1346 	ld	-2 (ix),d
                           1347 ;demo.c:198: if (r < (cur_palette[i] >> 4)) r++;
   0576 3Er00              1348 	ld	a,#<_cur_palette
   0578 81                 1349 	add	a,c
   0579 6F                 1350 	ld	l,a
   057A 3Es40              1351 	ld	a,#>_cur_palette
   057C CE 00              1352 	adc	a,#0x00
   057E 67                 1353 	ld	h,a
   057F 56                 1354 	ld	d,(hl)
   0580 CB 3A              1355 	srl	d
   0582 CB 3A              1356 	srl	d
   0584 CB 3A              1357 	srl	d
   0586 CB 3A              1358 	srl	d
   0588 7B                 1359 	ld	a,e
   0589 92                 1360 	sub	a,d
   058A 30 01              1361 	jr	NC,00104$
   058C 1C                 1362 	inc	e
   058D                    1363 00104$:
                           1364 ;demo.c:199: if (b < (cur_palette[i] & 0xf)) b++;
   058D 3Er00              1365 	ld	a,#<_cur_palette
   058F 81                 1366 	add	a,c
   0590 6F                 1367 	ld	l,a
   0591 3Es40              1368 	ld	a,#>_cur_palette
   0593 CE 00              1369 	adc	a,#0x00
   0595 67                 1370 	ld	h,a
   0596 7E                 1371 	ld	a,(hl)
   0597 E6 0F              1372 	and	a,#0x0F
   0599 47                 1373 	ld	b,a
   059A DD 7E FF           1374 	ld	a,-1 (ix)
   059D 90                 1375 	sub	a,b
   059E 30 03              1376 	jr	NC,00106$
   05A0 DD 34 FF           1377 	inc	-1 (ix)
   05A3                    1378 00106$:
                           1379 ;demo.c:201: scratch[i] = (r << 4) | b;
   05A3 3Er80              1380 	ld	a,#<_scratch
   05A5 81                 1381 	add	a,c
   05A6 47                 1382 	ld	b,a
   05A7 3Es3F              1383 	ld	a,#>_scratch
   05A9 CE 00              1384 	adc	a,#0x00
   05AB 57                 1385 	ld	d,a
   05AC 7B                 1386 	ld	a,e
   05AD 07                 1387 	rlca
   05AE 07                 1388 	rlca
   05AF 07                 1389 	rlca
   05B0 07                 1390 	rlca
   05B1 E6 F0              1391 	and	a,#0xF0
   05B3 DD B6 FF           1392 	or	a,-1 (ix)
   05B6 68                 1393 	ld	l,b
   05B7 62                 1394 	ld	h,d
   05B8 77                 1395 	ld	(hl),a
                           1396 ;demo.c:202: if (g < cur_palette[i+1]) scratch[i+1]++;
   05B9 41                 1397 	ld	b,c
   05BA 04                 1398 	inc	b
   05BB 3Er00              1399 	ld	a,#<_cur_palette
   05BD 80                 1400 	add	a,b
   05BE 5F                 1401 	ld	e,a
   05BF 3Es40              1402 	ld	a,#>_cur_palette
   05C1 CE 00              1403 	adc	a,#0x00
   05C3 57                 1404 	ld	d,a
   05C4 1A                 1405 	ld	a,(de)
   05C5 5F                 1406 	ld	e,a
   05C6 DD 7E FE           1407 	ld	a,-2 (ix)
   05C9 93                 1408 	sub	a,e
   05CA 30 10              1409 	jr	NC,00111$
   05CC 3Er80              1410 	ld	a,#<_scratch
   05CE 80                 1411 	add	a,b
   05CF 47                 1412 	ld	b,a
   05D0 3Es3F              1413 	ld	a,#>_scratch
   05D2 CE 00              1414 	adc	a,#0x00
   05D4 5F                 1415 	ld	e,a
   05D5 68                 1416 	ld	l,b
   05D6 67                 1417 	ld	h,a
   05D7 7E                 1418 	ld	a,(hl)
   05D8 3C                 1419 	inc	a
   05D9 68                 1420 	ld	l,b
   05DA 63                 1421 	ld	h,e
   05DB 77                 1422 	ld	(hl),a
   05DC                    1423 00111$:
                           1424 ;demo.c:193: for(i = 0; i < 32; i+=2) {
   05DC 0C                 1425 	inc	c
   05DD 0C                 1426 	inc	c
   05DE C3r47s05           1427 	jp	00109$
   05E1                    1428 00112$:
                           1429 ;demo.c:206: vdp_load_palette(scratch);
   05E1 21r80s3F           1430 	ld	hl,#_scratch
   05E4 E5                 1431 	push	hl
   05E5 CDr00s00           1432 	call	_vdp_load_palette
   05E8 F1                 1433 	pop	af
   05E9                    1434 00113$:
   05E9 DD F9              1435 	ld	sp,ix
   05EB DD E1              1436 	pop	ix
   05ED C9                 1437 	ret
   05EE                    1438 _fadein_end::
                           1439 ;demo.c:218: void do_ymmm() {
                           1440 ;	---------------------------------
                           1441 ; Function do_ymmm
                           1442 ; ---------------------------------
   05EE                    1443 _do_ymmm_start::
   05EE                    1444 _do_ymmm:
   05EE DD E5              1445 	push	ix
   05F0 DD 21 00 00        1446 	ld	ix,#0
   05F4 DD 39              1447 	add	ix,sp
   05F6 21 EB FF           1448 	ld	hl,#-21
   05F9 39                 1449 	add	hl,sp
   05FA F9                 1450 	ld	sp,hl
                           1451 ;demo.c:223: if (tick > 32) { tick = 0; flipper++;}
   05FB 3E 20              1452 	ld	a,#0x20
   05FD FD 21r42s40        1453 	ld	iy,#_tick
   0601 FD 96 00           1454 	sub	a,0 (iy)
   0604 3E 00              1455 	ld	a,#0x00
   0606 FD 21r42s40        1456 	ld	iy,#_tick
   060A FD 9E 01           1457 	sbc	a,1 (iy)
   060D F2r2As06           1458 	jp	P,00102$
   0610 21r42s40           1459 	ld	hl,#_tick + 0
   0613 36 00              1460 	ld	(hl), #0x00
   0615 21r43s40           1461 	ld	hl,#_tick + 1
   0618 36 00              1462 	ld	(hl), #0x00
   061A FD 21r4Es40        1463 	ld	iy,#_flipper
   061E FD 34 00           1464 	inc	0 (iy)
   0621 20 07              1465 	jr	NZ,00115$
   0623 FD 21r4Es40        1466 	ld	iy,#_flipper
   0627 FD 34 01           1467 	inc	1 (iy)
   062A                    1468 00115$:
   062A                    1469 00102$:
                           1470 ;demo.c:224: if (flipper > 10) { flipper = 0;}
   062A 3E 0A              1471 	ld	a,#0x0A
   062C FD 21r4Es40        1472 	ld	iy,#_flipper
   0630 FD 96 00           1473 	sub	a,0 (iy)
   0633 3E 00              1474 	ld	a,#0x00
   0635 FD 21r4Es40        1475 	ld	iy,#_flipper
   0639 FD 9E 01           1476 	sbc	a,1 (iy)
   063C F2r49s06           1477 	jp	P,00104$
   063F 21r4Es40           1478 	ld	hl,#_flipper + 0
   0642 36 00              1479 	ld	(hl), #0x00
   0644 21r4Fs40           1480 	ld	hl,#_flipper + 1
   0647 36 00              1481 	ld	(hl), #0x00
   0649                    1482 00104$:
                           1483 ;demo.c:226: ymmmf++;
   0649 FD 21r50s40        1484 	ld	iy,#_ymmmf
   064D FD 34 00           1485 	inc	0 (iy)
   0650 20 07              1486 	jr	NZ,00116$
   0652 FD 21r50s40        1487 	ld	iy,#_ymmmf
   0656 FD 34 01           1488 	inc	1 (iy)
   0659                    1489 00116$:
                           1490 ;demo.c:227: for (yofff = 0; yofff<212-step;yofff+=step) {
   0659 21r4Cs40           1491 	ld	hl,#_yofff + 0
   065C 36 00              1492 	ld	(hl), #0x00
   065E                    1493 00105$:
   065E 3Ar4Cs40           1494 	ld	a,(#_yofff+0)
   0661 DD 77 ED           1495 	ld	-19 (ix),a
   0664 DD 36 EE 00        1496 	ld	-18 (ix),#0x00
   0668 DD 7E ED           1497 	ld	a,-19 (ix)
   066B D6 D2              1498 	sub	a,#0xD2
   066D DD 7E EE           1499 	ld	a,-18 (ix)
   0670 DE 00              1500 	sbc	a,#0x00
   0672 F2r1Es07           1501 	jp	P,00109$
                           1502 ;demo.c:228: xo = (sintabx[(yofff+ymmmf) & 255]);
   0675 21r50s40           1503 	ld	hl,#_ymmmf
   0678 DD 7E ED           1504 	ld	a,-19 (ix)
   067B 86                 1505 	add	a,(hl)
   067C 5F                 1506 	ld	e,a
   067D DD 7E EE           1507 	ld	a,-18 (ix)
   0680 23                 1508 	inc	hl
   0681 8E                 1509 	adc	a,(hl)
   0682 16 00              1510 	ld	d,#0x00
   0684 CB 23              1511 	sla	e
   0686 CB 12              1512 	rl	d
   0688 21r2Cs00           1513 	ld	hl,#_sintabx
   068B 19                 1514 	add	hl,de
   068C 5E                 1515 	ld	e,(hl)
   068D 23                 1516 	inc	hl
   068E 56                 1517 	ld	d,(hl)
   068F DD 73 EF           1518 	ld	-17 (ix),e
   0692 DD 72 F0           1519 	ld	-16 (ix),d
                           1520 ;demo.c:231: cmd.source_x = 0;
   0695 21 06 00           1521 	ld	hl,#0x0006
   0698 39                 1522 	add	hl,sp
   0699 36 00              1523 	ld	(hl),#0x00
   069B 23                 1524 	inc	hl
   069C 36 00              1525 	ld	(hl),#0x00
                           1526 ;demo.c:232: cmd.source_y = 0+yofff;
   069E 21 06 00           1527 	ld	hl,#0x0006
   06A1 39                 1528 	add	hl,sp
   06A2 EB                 1529 	ex	de,hl
   06A3 4B                 1530 	ld	c,e
   06A4 42                 1531 	ld	b,d
   06A5 69                 1532 	ld	l,c
   06A6 60                 1533 	ld	h,b
   06A7 23                 1534 	inc	hl
   06A8 23                 1535 	inc	hl
   06A9 DD 7E ED           1536 	ld	a,-19 (ix)
   06AC 77                 1537 	ld	(hl),a
   06AD 23                 1538 	inc	hl
   06AE DD 7E EE           1539 	ld	a,-18 (ix)
   06B1 77                 1540 	ld	(hl),a
                           1541 ;demo.c:233: cmd.dest_x = xo;
   06B2 21 04 00           1542 	ld	hl,#0x0004
   06B5 19                 1543 	add	hl,de
   06B6 DD 7E EF           1544 	ld	a,-17 (ix)
   06B9 77                 1545 	ld	(hl),a
   06BA 23                 1546 	inc	hl
   06BB DD 7E F0           1547 	ld	a,-16 (ix)
   06BE 77                 1548 	ld	(hl),a
                           1549 ;demo.c:234: cmd.dest_y = 3+yofff;
   06BF 21 06 00           1550 	ld	hl,#0x0006
   06C2 19                 1551 	add	hl,de
   06C3 DD 75 EB           1552 	ld	-21 (ix),l
   06C6 DD 74 EC           1553 	ld	-20 (ix),h
   06C9 DD 7E ED           1554 	ld	a,-19 (ix)
   06CC C6 03              1555 	add	a,#0x03
   06CE 4F                 1556 	ld	c,a
   06CF DD 7E EE           1557 	ld	a,-18 (ix)
   06D2 CE 00              1558 	adc	a,#0x00
   06D4 47                 1559 	ld	b,a
   06D5 DD 6E EB           1560 	ld	l,-21 (ix)
   06D8 DD 66 EC           1561 	ld	h,-20 (ix)
   06DB 71                 1562 	ld	(hl),c
   06DC 23                 1563 	inc	hl
   06DD 70                 1564 	ld	(hl),b
                           1565 ;demo.c:235: cmd.size_x = 256;
   06DE 21 08 00           1566 	ld	hl,#0x0008
   06E1 19                 1567 	add	hl,de
   06E2 36 00              1568 	ld	(hl),#0x00
   06E4 23                 1569 	inc	hl
   06E5 36 01              1570 	ld	(hl),#0x01
                           1571 ;demo.c:236: cmd.size_y = 1;
   06E7 21 0A 00           1572 	ld	hl,#0x000A
   06EA 19                 1573 	add	hl,de
   06EB 36 01              1574 	ld	(hl),#0x01
   06ED 23                 1575 	inc	hl
   06EE 36 00              1576 	ld	(hl),#0x00
                           1577 ;demo.c:237: cmd.data = 0;
   06F0 21 0C 00           1578 	ld	hl,#0x000C
   06F3 19                 1579 	add	hl,de
   06F4 4D                 1580 	ld	c,l
   06F5 44                 1581 	ld	b,h
   06F6 3E 00              1582 	ld	a,#0x00
   06F8 02                 1583 	ld	(bc),a
                           1584 ;demo.c:238: cmd.argument = 0;
   06F9 21 0D 00           1585 	ld	hl,#0x000D
   06FC 19                 1586 	add	hl,de
   06FD 4D                 1587 	ld	c,l
   06FE 44                 1588 	ld	b,h
   06FF 3E 00              1589 	ld	a,#0x00
   0701 02                 1590 	ld	(bc),a
                           1591 ;demo.c:239: cmd.command = 0xD0;
   0702 21 0E 00           1592 	ld	hl,#0x000E
   0705 19                 1593 	add	hl,de
   0706 4D                 1594 	ld	c,l
   0707 44                 1595 	ld	b,h
   0708 3E D0              1596 	ld	a,#0xD0
   070A 02                 1597 	ld	(bc),a
                           1598 ;demo.c:242: vdp_copier(&cmd);
   070B D5                 1599 	push	de
   070C CDr00s00           1600 	call	_vdp_copier
   070F F1                 1601 	pop	af
                           1602 ;demo.c:227: for (yofff = 0; yofff<212-step;yofff+=step) {
   0710 21r4Cs40           1603 	ld	hl,#_yofff + 0
   0713 4E                 1604 	ld	c,(hl)
   0714 21r4Cs40           1605 	ld	hl,#_yofff
   0717 79                 1606 	ld	a,c
   0718 C6 02              1607 	add	a,#0x02
   071A 77                 1608 	ld	(hl),a
   071B C3r5Es06           1609 	jp	00105$
   071E                    1610 00109$:
   071E DD F9              1611 	ld	sp,ix
   0720 DD E1              1612 	pop	ix
   0722 C9                 1613 	ret
   0723                    1614 _do_ymmm_end::
                           1615 ;demo.c:259: void do_blocks() {
                           1616 ;	---------------------------------
                           1617 ; Function do_blocks
                           1618 ; ---------------------------------
   0723                    1619 _do_blocks_start::
   0723                    1620 _do_blocks:
   0723 DD E5              1621 	push	ix
   0725 DD 21 00 00        1622 	ld	ix,#0
   0729 DD 39              1623 	add	ix,sp
   072B 21 E9 FF           1624 	ld	hl,#-23
   072E 39                 1625 	add	hl,sp
   072F F9                 1626 	ld	sp,hl
                           1627 ;demo.c:262: int ys = 0;
   0730 DD 36 ED 00        1628 	ld	-19 (ix),#0x00
   0734 DD 36 EE 00        1629 	ld	-18 (ix),#0x00
                           1630 ;demo.c:263: int ye = 0;
   0738 DD 36 EB 00        1631 	ld	-21 (ix),#0x00
   073C DD 36 EC 00        1632 	ld	-20 (ix),#0x00
                           1633 ;demo.c:265: vdp_register(VDP_VOFFSET,0);
   0740 21 17 00           1634 	ld	hl,#0x0017
   0743 E5                 1635 	push	hl
   0744 CDr00s00           1636 	call	_vdp_register
   0747 F1                 1637 	pop	af
                           1638 ;demo.c:267: if (block_init == 0) {
   0748 AF                 1639 	xor	a,a
   0749 FD 21r52s40        1640 	ld	iy,#_block_init
   074D FD B6 00           1641 	or	a,0 (iy)
   0750 C2rB8s07           1642 	jp	NZ,00108$
                           1643 ;demo.c:269: vdp_set_screen5();
   0753 CDr00s00           1644 	call	_vdp_set_screen5
                           1645 ;demo.c:271: vdp_register(2, 0x5F);
   0756 21 02 5F           1646 	ld	hl,#0x5F02
   0759 E5                 1647 	push	hl
   075A CDr00s00           1648 	call	_vdp_register
   075D F1                 1649 	pop	af
                           1650 ;demo.c:273: for(i=0;i<16;i++) btab[i] = i*16;
   075E DD 36 EF 00        1651 	ld	-17 (ix),#0x00
   0762 DD 36 F0 00        1652 	ld	-16 (ix),#0x00
   0766                    1653 00110$:
   0766 DD 7E EF           1654 	ld	a,-17 (ix)
   0769 D6 10              1655 	sub	a,#0x10
   076B DD 7E F0           1656 	ld	a,-16 (ix)
   076E DE 00              1657 	sbc	a,#0x00
   0770 F2rA8s07           1658 	jp	P,00113$
   0773 DD 4E EF           1659 	ld	c,-17 (ix)
   0776 DD 46 F0           1660 	ld	b,-16 (ix)
   0779 CB 21              1661 	sla	c
   077B CB 10              1662 	rl	b
   077D 21r5Bs40           1663 	ld	hl,#_btab
   0780 09                 1664 	add	hl,bc
   0781 4D                 1665 	ld	c,l
   0782 44                 1666 	ld	b,h
   0783 DD 5E EF           1667 	ld	e,-17 (ix)
   0786 DD 56 F0           1668 	ld	d,-16 (ix)
   0789 CB 23              1669 	sla	e
   078B CB 12              1670 	rl	d
   078D CB 23              1671 	sla	e
   078F CB 12              1672 	rl	d
   0791 CB 23              1673 	sla	e
   0793 CB 12              1674 	rl	d
   0795 CB 23              1675 	sla	e
   0797 CB 12              1676 	rl	d
   0799 69                 1677 	ld	l,c
   079A 60                 1678 	ld	h,b
   079B 73                 1679 	ld	(hl),e
   079C 23                 1680 	inc	hl
   079D 72                 1681 	ld	(hl),d
   079E DD 34 EF           1682 	inc	-17 (ix)
   07A1 20 03              1683 	jr	NZ,00139$
   07A3 DD 34 F0           1684 	inc	-16 (ix)
   07A6                    1685 00139$:
   07A6 18 BE              1686 	jr	00110$
   07A8                    1687 00113$:
                           1688 ;demo.c:274: vdp_load_palette(block_palette);
   07A8 21r20s40           1689 	ld	hl,#_block_palette
   07AB E5                 1690 	push	hl
   07AC CDr00s00           1691 	call	_vdp_load_palette
   07AF F1                 1692 	pop	af
                           1693 ;demo.c:276: block_init = 1;
   07B0 21r52s40           1694 	ld	hl,#_block_init + 0
   07B3 36 01              1695 	ld	(hl), #0x01
   07B5 C3r77s09           1696 	jp	00122$
   07B8                    1697 00108$:
                           1698 ;demo.c:280: if (flof == 0) { ys = 0; ye = 8; }
   07B8 3Ar7Bs40           1699 	ld	a,(#_flof+0)
   07BB FD 21r7Bs40        1700 	ld	iy,#_flof
   07BF FD B6 01           1701 	or	a,1 (iy)
   07C2 20 10              1702 	jr	NZ,00102$
   07C4 DD 36 ED 00        1703 	ld	-19 (ix),#0x00
   07C8 DD 36 EE 00        1704 	ld	-18 (ix),#0x00
   07CC DD 36 EB 08        1705 	ld	-21 (ix),#0x08
   07D0 DD 36 EC 00        1706 	ld	-20 (ix),#0x00
   07D4                    1707 00102$:
                           1708 ;demo.c:281: if (flof == 1) { ys = 8; ye = 16; }
   07D4 3Ar7Bs40           1709 	ld	a,(#_flof+0)
   07D7 D6 01              1710 	sub	a,#0x01
   07D9 20 06              1711 	jr	NZ,00140$
   07DB 3Ar7Cs40           1712 	ld	a,(#_flof+1)
   07DE B7                 1713 	or	a,a
   07DF 28 02              1714 	jr	Z,00141$
   07E1                    1715 00140$:
   07E1 18 10              1716 	jr	00104$
   07E3                    1717 00141$:
   07E3 DD 36 ED 08        1718 	ld	-19 (ix),#0x08
   07E7 DD 36 EE 00        1719 	ld	-18 (ix),#0x00
   07EB DD 36 EB 10        1720 	ld	-21 (ix),#0x10
   07EF DD 36 EC 00        1721 	ld	-20 (ix),#0x00
   07F3                    1722 00104$:
                           1723 ;demo.c:283: for(bty=3;bty<11;bty++) {
   07F3 FD 21r59s40        1724 	ld	iy,#_bty
   07F7 FD 36 00 03        1725 	ld	0 (iy),#0x03
   07FB FD 21r59s40        1726 	ld	iy,#_bty
   07FF FD 36 01 00        1727 	ld	1 (iy),#0x00
   0803                    1728 00118$:
   0803 3Ar59s40           1729 	ld	a,(#_bty+0)
   0806 D6 0B              1730 	sub	a,#0x0B
   0808 3Ar5As40           1731 	ld	a,(#_bty+1)
   080B DE 00              1732 	sbc	a,#0x00
   080D F2r4Es09           1733 	jp	P,00121$
                           1734 ;demo.c:284: for(btx=ys;btx<ye;btx++) {
   0810 DD 7E ED           1735 	ld	a,-19 (ix)
   0813 FD 21r57s40        1736 	ld	iy,#_btx
   0817 FD 77 00           1737 	ld	0 (iy),a
   081A DD 7E EE           1738 	ld	a,-18 (ix)
   081D FD 21r57s40        1739 	ld	iy,#_btx
   0821 FD 77 01           1740 	ld	1 (iy),a
   0824                    1741 00114$:
   0824 3Ar57s40           1742 	ld	a,(#_btx+0)
   0827 DD 96 EB           1743 	sub	a,-21 (ix)
   082A 3Ar58s40           1744 	ld	a,(#_btx+1)
   082D DD 9E EC           1745 	sbc	a,-20 (ix)
   0830 F2r3Bs09           1746 	jp	P,00120$
                           1747 ;demo.c:285: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0833 3Ar00s00           1748 	ld	a,(#_PLY_PSGReg8+0)
   0836 FD 21r00s00        1749 	ld	iy,#_PLY_PSGReg9
   083A FD A6 00           1750 	and	a,0 (iy)
   083D 21r00s00           1751 	ld	hl,#_PLY_PSGReg10 + 0
   0840 B6                 1752 	or	a,(hl)
   0841 4F                 1753 	ld	c,a
   0842 CB 39              1754 	srl	c
   0844 21r53s40           1755 	ld	hl,#_bsx + 0
   0847 71                 1756 	ld	(hl), c
   0848 21r54s40           1757 	ld	hl,#_bsx + 1
   084B 36 00              1758 	ld	(hl), #0x00
                           1759 ;demo.c:286: bsy = PLY_PSGReg10;
   084D 3Ar00s00           1760 	ld	a,(#_PLY_PSGReg10+0)
   0850 21r55s40           1761 	ld	hl,#_bsy + 0
   0853 77                 1762 	ld	(hl), a
   0854 21r56s40           1763 	ld	hl,#_bsy + 1
   0857 36 00              1764 	ld	(hl), #0x00
                           1765 ;demo.c:287: cmd.source_x = btab[bsx];
   0859 21 08 00           1766 	ld	hl,#0x0008
   085C 39                 1767 	add	hl,sp
   085D 4D                 1768 	ld	c,l
   085E 44                 1769 	ld	b,h
   085F 21r53s40           1770 	ld	hl,#_bsx + 0
   0862 5E                 1771 	ld	e,(hl)
   0863 21r54s40           1772 	ld	hl,#_bsx + 1
   0866 56                 1773 	ld	d,(hl)
   0867 CB 23              1774 	sla	e
   0869 CB 12              1775 	rl	d
   086B 21r5Bs40           1776 	ld	hl,#_btab
   086E 19                 1777 	add	hl,de
   086F 5E                 1778 	ld	e,(hl)
   0870 23                 1779 	inc	hl
   0871 56                 1780 	ld	d,(hl)
   0872 69                 1781 	ld	l,c
   0873 60                 1782 	ld	h,b
   0874 73                 1783 	ld	(hl),e
   0875 23                 1784 	inc	hl
   0876 72                 1785 	ld	(hl),d
                           1786 ;demo.c:288: cmd.source_y = 768+btab[bsy];
   0877 21 08 00           1787 	ld	hl,#0x0008
   087A 39                 1788 	add	hl,sp
   087B 4D                 1789 	ld	c,l
   087C 44                 1790 	ld	b,h
   087D 21 02 00           1791 	ld	hl,#0x0002
   0880 09                 1792 	add	hl,bc
   0881 DD 75 E9           1793 	ld	-23 (ix),l
   0884 DD 74 EA           1794 	ld	-22 (ix),h
   0887 21r55s40           1795 	ld	hl,#_bsy + 0
   088A 5E                 1796 	ld	e,(hl)
   088B 21r56s40           1797 	ld	hl,#_bsy + 1
   088E 56                 1798 	ld	d,(hl)
   088F CB 23              1799 	sla	e
   0891 CB 12              1800 	rl	d
   0893 21r5Bs40           1801 	ld	hl,#_btab
   0896 19                 1802 	add	hl,de
   0897 5E                 1803 	ld	e,(hl)
   0898 23                 1804 	inc	hl
   0899 56                 1805 	ld	d,(hl)
   089A 21 00 03           1806 	ld	hl,#0x0300
   089D 19                 1807 	add	hl,de
   089E EB                 1808 	ex	de,hl
   089F DD 6E E9           1809 	ld	l,-23 (ix)
   08A2 DD 66 EA           1810 	ld	h,-22 (ix)
   08A5 73                 1811 	ld	(hl),e
   08A6 23                 1812 	inc	hl
   08A7 72                 1813 	ld	(hl),d
                           1814 ;demo.c:289: cmd.dest_x = btab[btx];
   08A8 21 04 00           1815 	ld	hl,#0x0004
   08AB 09                 1816 	add	hl,bc
   08AC DD 75 E9           1817 	ld	-23 (ix),l
   08AF DD 74 EA           1818 	ld	-22 (ix),h
   08B2 21r57s40           1819 	ld	hl,#_btx + 0
   08B5 5E                 1820 	ld	e,(hl)
   08B6 21r58s40           1821 	ld	hl,#_btx + 1
   08B9 56                 1822 	ld	d,(hl)
   08BA CB 23              1823 	sla	e
   08BC CB 12              1824 	rl	d
   08BE 21r5Bs40           1825 	ld	hl,#_btab
   08C1 19                 1826 	add	hl,de
   08C2 5E                 1827 	ld	e,(hl)
   08C3 23                 1828 	inc	hl
   08C4 56                 1829 	ld	d,(hl)
   08C5 DD 6E E9           1830 	ld	l,-23 (ix)
   08C8 DD 66 EA           1831 	ld	h,-22 (ix)
   08CB 73                 1832 	ld	(hl),e
   08CC 23                 1833 	inc	hl
   08CD 72                 1834 	ld	(hl),d
                           1835 ;demo.c:290: cmd.dest_y = 512+btab[bty];
   08CE 21 06 00           1836 	ld	hl,#0x0006
   08D1 09                 1837 	add	hl,bc
   08D2 DD 75 E9           1838 	ld	-23 (ix),l
   08D5 DD 74 EA           1839 	ld	-22 (ix),h
   08D8 21r59s40           1840 	ld	hl,#_bty + 0
   08DB 5E                 1841 	ld	e,(hl)
   08DC 21r5As40           1842 	ld	hl,#_bty + 1
   08DF 56                 1843 	ld	d,(hl)
   08E0 CB 23              1844 	sla	e
   08E2 CB 12              1845 	rl	d
   08E4 21r5Bs40           1846 	ld	hl,#_btab
   08E7 19                 1847 	add	hl,de
   08E8 5E                 1848 	ld	e,(hl)
   08E9 23                 1849 	inc	hl
   08EA 56                 1850 	ld	d,(hl)
   08EB 21 00 02           1851 	ld	hl,#0x0200
   08EE 19                 1852 	add	hl,de
   08EF EB                 1853 	ex	de,hl
   08F0 DD 6E E9           1854 	ld	l,-23 (ix)
   08F3 DD 66 EA           1855 	ld	h,-22 (ix)
   08F6 73                 1856 	ld	(hl),e
   08F7 23                 1857 	inc	hl
   08F8 72                 1858 	ld	(hl),d
                           1859 ;demo.c:291: cmd.size_x = 16;
   08F9 21 08 00           1860 	ld	hl,#0x0008
   08FC 09                 1861 	add	hl,bc
   08FD 36 10              1862 	ld	(hl),#0x10
   08FF 23                 1863 	inc	hl
   0900 36 00              1864 	ld	(hl),#0x00
                           1865 ;demo.c:292: cmd.size_y = 16;
   0902 21 0A 00           1866 	ld	hl,#0x000A
   0905 09                 1867 	add	hl,bc
   0906 36 10              1868 	ld	(hl),#0x10
   0908 23                 1869 	inc	hl
   0909 36 00              1870 	ld	(hl),#0x00
                           1871 ;demo.c:293: cmd.data = 0;
   090B 21 0C 00           1872 	ld	hl,#0x000C
   090E 09                 1873 	add	hl,bc
   090F EB                 1874 	ex	de,hl
   0910 3E 00              1875 	ld	a,#0x00
   0912 12                 1876 	ld	(de),a
                           1877 ;demo.c:294: cmd.argument = 0x00;
   0913 21 0D 00           1878 	ld	hl,#0x000D
   0916 09                 1879 	add	hl,bc
   0917 EB                 1880 	ex	de,hl
   0918 3E 00              1881 	ld	a,#0x00
   091A 12                 1882 	ld	(de),a
                           1883 ;demo.c:295: cmd.command = 0xD0;
   091B 21 0E 00           1884 	ld	hl,#0x000E
   091E 09                 1885 	add	hl,bc
   091F EB                 1886 	ex	de,hl
   0920 3E D0              1887 	ld	a,#0xD0
   0922 12                 1888 	ld	(de),a
                           1889 ;demo.c:296: vdp_copier(&cmd);
   0923 C5                 1890 	push	bc
   0924 CDr00s00           1891 	call	_vdp_copier
   0927 F1                 1892 	pop	af
                           1893 ;demo.c:284: for(btx=ys;btx<ye;btx++) {
   0928 FD 21r57s40        1894 	ld	iy,#_btx
   092C FD 34 00           1895 	inc	0 (iy)
   092F 20 07              1896 	jr	NZ,00150$
   0931 FD 21r57s40        1897 	ld	iy,#_btx
   0935 FD 34 01           1898 	inc	1 (iy)
   0938                    1899 00150$:
   0938 C3r24s08           1900 	jp	00114$
   093B                    1901 00120$:
                           1902 ;demo.c:283: for(bty=3;bty<11;bty++) {
   093B FD 21r59s40        1903 	ld	iy,#_bty
   093F FD 34 00           1904 	inc	0 (iy)
   0942 20 07              1905 	jr	NZ,00151$
   0944 FD 21r59s40        1906 	ld	iy,#_bty
   0948 FD 34 01           1907 	inc	1 (iy)
   094B                    1908 00151$:
   094B C3r03s08           1909 	jp	00118$
   094E                    1910 00121$:
                           1911 ;demo.c:300: flof++;
   094E FD 21r7Bs40        1912 	ld	iy,#_flof
   0952 FD 34 00           1913 	inc	0 (iy)
   0955 20 07              1914 	jr	NZ,00152$
   0957 FD 21r7Bs40        1915 	ld	iy,#_flof
   095B FD 34 01           1916 	inc	1 (iy)
   095E                    1917 00152$:
                           1918 ;demo.c:301: if (flof == 2) flof = 0;
   095E 3Ar7Bs40           1919 	ld	a,(#_flof+0)
   0961 D6 02              1920 	sub	a,#0x02
   0963 20 06              1921 	jr	NZ,00153$
   0965 3Ar7Cs40           1922 	ld	a,(#_flof+1)
   0968 B7                 1923 	or	a,a
   0969 28 02              1924 	jr	Z,00154$
   096B                    1925 00153$:
   096B 18 0A              1926 	jr	00122$
   096D                    1927 00154$:
   096D 21r7Bs40           1928 	ld	hl,#_flof + 0
   0970 36 00              1929 	ld	(hl), #0x00
   0972 21r7Cs40           1930 	ld	hl,#_flof + 1
   0975 36 00              1931 	ld	(hl), #0x00
   0977                    1932 00122$:
   0977 DD F9              1933 	ld	sp,ix
   0979 DD E1              1934 	pop	ix
   097B C9                 1935 	ret
   097C                    1936 _do_blocks_end::
                           1937 ;demo.c:309: void raster_effu() {
                           1938 ;	---------------------------------
                           1939 ; Function raster_effu
                           1940 ; ---------------------------------
   097C                    1941 _raster_effu_start::
   097C                    1942 _raster_effu:
                           1943 ;demo.c:310: vdp_register(VDP_VOFFSET,0);
   097C 21 17 00           1944 	ld	hl,#0x0017
   097F E5                 1945 	push	hl
   0980 CDr00s00           1946 	call	_vdp_register
   0983 F1                 1947 	pop	af
                           1948 ;demo.c:311: waitVB();
   0984 76                 1949 		halt 
                           1950 ;demo.c:313: vdp_register(1,0x40); // disable vblank
   0985 21 01 40           1951 	ld	hl,#0x4001
   0988 E5                 1952 	push	hl
   0989 CDr00s00           1953 	call	_vdp_register
                           1954 ;demo.c:315: for (linenum = 40; linenum < 212; linenum+=4) {
   098C 3E 28              1955 	ld	a,#0x28
   098E 32r7Ds40           1956 	ld	(#_linenum + 0),a
   0991 F1                 1957 	pop	af
   0992 FD 21r7Ds40        1958 	ld	iy,#_linenum
   0996 FD 36 01 00        1959 	ld	1 (iy),#0x00
   099A                    1960 00101$:
   099A 3Ar7Ds40           1961 	ld	a,(#_linenum+0)
   099D D6 D4              1962 	sub	a,#0xD4
   099F 3Ar7Es40           1963 	ld	a,(#_linenum+1)
   09A2 DE 00              1964 	sbc	a,#0x00
   09A4 F2rD5s09           1965 	jp	P,00104$
                           1966 ;demo.c:316: vdp_register(19,linenum); // interrupt on line
   09A7 3Ar7Ds40           1967 	ld	a,(#_linenum+0)
   09AA F5                 1968 	push	af
   09AB 33                 1969 	inc	sp
   09AC 3E 13              1970 	ld	a,#0x13
   09AE F5                 1971 	push	af
   09AF 33                 1972 	inc	sp
   09B0 CDr00s00           1973 	call	_vdp_register
   09B3 F1                 1974 	pop	af
                           1975 ;demo.c:317: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   09B4 21 00 16           1976 	ld	hl,#0x1600
   09B7 E5                 1977 	push	hl
   09B8 CDr00s00           1978 	call	_vdp_register
   09BB F1                 1979 	pop	af
                           1980 ;demo.c:319: waitVB();
   09BC 76                 1981 		halt 
                           1982 ;demo.c:315: for (linenum = 40; linenum < 212; linenum+=4) {
   09BD 21r7Ds40           1983 	ld	hl,#_linenum
   09C0 7E                 1984 	ld	a,(hl)
   09C1 C6 04              1985 	add	a,#0x04
   09C3 23                 1986 	inc	hl
   09C4 2B                 1987 	dec	hl
   09C5 C5                 1988 	push	bc
   09C6 4F                 1989 	ld	c, a
   09C7 23                 1990 	inc	hl
   09C8 7E                 1991 	ld	a, (hl)
   09C9 47                 1992 	ld	b, a
   09CA 79                 1993 	ld	a, c
   09CB 2B                 1994 	dec	hl
   09CC 77                 1995 	ld	(hl), a
   09CD 78                 1996 	ld	a, b
   09CE C1                 1997 	pop	bc
   09CF CE 00              1998 	adc	a,#0x00
   09D1 23                 1999 	inc	hl
   09D2 77                 2000 	ld	(hl),a
   09D3 18 C5              2001 	jr	00101$
   09D5                    2002 00104$:
                           2003 ;demo.c:322: vdp_register(VDP_VOFFSET,0);
   09D5 21 17 00           2004 	ld	hl,#0x0017
   09D8 E5                 2005 	push	hl
   09D9 CDr00s00           2006 	call	_vdp_register
   09DC F1                 2007 	pop	af
                           2008 ;demo.c:336: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   09DD 21 00 06           2009 	ld	hl,#0x0600
   09E0 E5                 2010 	push	hl
   09E1 CDr00s00           2011 	call	_vdp_register
   09E4 F1                 2012 	pop	af
                           2013 ;demo.c:337: vdp_register(1,0x60); // enable vblank
   09E5 21 01 60           2014 	ld	hl,#0x6001
   09E8 E5                 2015 	push	hl
   09E9 CDr00s00           2016 	call	_vdp_register
   09EC F1                 2017 	pop	af
   09ED C9                 2018 	ret
   09EE                    2019 _raster_effu_end::
                           2020 ;demo.c:340: void twister() {
                           2021 ;	---------------------------------
                           2022 ; Function twister
                           2023 ; ---------------------------------
   09EE                    2024 _twister_start::
   09EE                    2025 _twister:
   09EE DD E5              2026 	push	ix
   09F0 DD 21 00 00        2027 	ld	ix,#0
   09F4 DD 39              2028 	add	ix,sp
   09F6 21 ED FF           2029 	ld	hl,#-19
   09F9 39                 2030 	add	hl,sp
   09FA F9                 2031 	ld	sp,hl
                           2032 ;demo.c:343: waitVB();
   09FB 76                 2033 		halt 
                           2034 ;demo.c:344: for (y = 0; y < 212; y+=4) {
   09FC DD 36 EF 00        2035 	ld	-17 (ix),#0x00
   0A00 DD 36 F0 00        2036 	ld	-16 (ix),#0x00
   0A04                    2037 00101$:
   0A04 DD 7E EF           2038 	ld	a,-17 (ix)
   0A07 D6 D4              2039 	sub	a,#0xD4
   0A09 DD 7E F0           2040 	ld	a,-16 (ix)
   0A0C DE 00              2041 	sbc	a,#0x00
   0A0E F2rB3s0A           2042 	jp	P,00105$
                           2043 ;demo.c:345: cmd.source_x = 0;
   0A11 21 04 00           2044 	ld	hl,#0x0004
   0A14 39                 2045 	add	hl,sp
   0A15 36 00              2046 	ld	(hl),#0x00
   0A17 23                 2047 	inc	hl
   0A18 36 00              2048 	ld	(hl),#0x00
                           2049 ;demo.c:346: sy = ((sintab[(vbicount+(y>>1)) & 255])>>1)+(256+64);
   0A1A DD 5E EF           2050 	ld	e,-17 (ix)
   0A1D DD 56 F0           2051 	ld	d,-16 (ix)
   0A20 CB 2A              2052 	sra	d
   0A22 CB 1B              2053 	rr	e
   0A24 3Ar40s40           2054 	ld	a,(#_vbicount+0)
   0A27 83                 2055 	add	a,e
   0A28 5F                 2056 	ld	e,a
   0A29 3Ar41s40           2057 	ld	a,(#_vbicount+1)
   0A2C 8A                 2058 	adc	a,d
   0A2D 16 00              2059 	ld	d,#0x00
   0A2F 21r00s00           2060 	ld	hl,#_sintab
   0A32 19                 2061 	add	hl,de
   0A33 5E                 2062 	ld	e,(hl)
   0A34 CB 2B              2063 	sra	e
   0A36 7B                 2064 	ld	a,e
   0A37 17                 2065 	rla	
   0A38 9F                 2066 	sbc	a,a
   0A39 57                 2067 	ld	d,a
   0A3A 21 40 01           2068 	ld	hl,#0x0140
   0A3D 19                 2069 	add	hl,de
   0A3E DD 75 ED           2070 	ld	-19 (ix),l
   0A41 DD 74 EE           2071 	ld	-18 (ix),h
                           2072 ;demo.c:347: cmd.source_y = sy;
   0A44 21 04 00           2073 	ld	hl,#0x0004
   0A47 39                 2074 	add	hl,sp
   0A48 EB                 2075 	ex	de,hl
   0A49 4B                 2076 	ld	c,e
   0A4A 42                 2077 	ld	b,d
   0A4B 69                 2078 	ld	l,c
   0A4C 60                 2079 	ld	h,b
   0A4D 23                 2080 	inc	hl
   0A4E 23                 2081 	inc	hl
   0A4F DD 7E ED           2082 	ld	a,-19 (ix)
   0A52 77                 2083 	ld	(hl),a
   0A53 23                 2084 	inc	hl
   0A54 DD 7E EE           2085 	ld	a,-18 (ix)
   0A57 77                 2086 	ld	(hl),a
                           2087 ;demo.c:348: cmd.dest_x = 0;
   0A58 21 04 00           2088 	ld	hl,#0x0004
   0A5B 19                 2089 	add	hl,de
   0A5C 36 00              2090 	ld	(hl),#0x00
   0A5E 23                 2091 	inc	hl
   0A5F 36 00              2092 	ld	(hl),#0x00
                           2093 ;demo.c:349: cmd.dest_y = y;
   0A61 21 06 00           2094 	ld	hl,#0x0006
   0A64 19                 2095 	add	hl,de
   0A65 DD 7E EF           2096 	ld	a,-17 (ix)
   0A68 77                 2097 	ld	(hl),a
   0A69 23                 2098 	inc	hl
   0A6A DD 7E F0           2099 	ld	a,-16 (ix)
   0A6D 77                 2100 	ld	(hl),a
                           2101 ;demo.c:350: cmd.size_x = 70;
   0A6E 21 08 00           2102 	ld	hl,#0x0008
   0A71 19                 2103 	add	hl,de
   0A72 36 46              2104 	ld	(hl),#0x46
   0A74 23                 2105 	inc	hl
   0A75 36 00              2106 	ld	(hl),#0x00
                           2107 ;demo.c:351: cmd.size_y = 4;
   0A77 21 0A 00           2108 	ld	hl,#0x000A
   0A7A 19                 2109 	add	hl,de
   0A7B 36 04              2110 	ld	(hl),#0x04
   0A7D 23                 2111 	inc	hl
   0A7E 36 00              2112 	ld	(hl),#0x00
                           2113 ;demo.c:352: cmd.data = 0;
   0A80 21 0C 00           2114 	ld	hl,#0x000C
   0A83 19                 2115 	add	hl,de
   0A84 4D                 2116 	ld	c,l
   0A85 44                 2117 	ld	b,h
   0A86 3E 00              2118 	ld	a,#0x00
   0A88 02                 2119 	ld	(bc),a
                           2120 ;demo.c:353: cmd.argument = 0x00;
   0A89 21 0D 00           2121 	ld	hl,#0x000D
   0A8C 19                 2122 	add	hl,de
   0A8D 4D                 2123 	ld	c,l
   0A8E 44                 2124 	ld	b,h
   0A8F 3E 00              2125 	ld	a,#0x00
   0A91 02                 2126 	ld	(bc),a
                           2127 ;demo.c:354: cmd.command = 0xd0; // logical vram to vram
   0A92 21 0E 00           2128 	ld	hl,#0x000E
   0A95 19                 2129 	add	hl,de
   0A96 4D                 2130 	ld	c,l
   0A97 44                 2131 	ld	b,h
   0A98 3E D0              2132 	ld	a,#0xD0
   0A9A 02                 2133 	ld	(bc),a
                           2134 ;demo.c:355: vdp_copier(&cmd);
   0A9B D5                 2135 	push	de
   0A9C CDr00s00           2136 	call	_vdp_copier
   0A9F F1                 2137 	pop	af
                           2138 ;demo.c:344: for (y = 0; y < 212; y+=4) {
   0AA0 DD 7E EF           2139 	ld	a,-17 (ix)
   0AA3 C6 04              2140 	add	a,#0x04
   0AA5 DD 77 EF           2141 	ld	-17 (ix),a
   0AA8 DD 7E F0           2142 	ld	a,-16 (ix)
   0AAB CE 00              2143 	adc	a,#0x00
   0AAD DD 77 F0           2144 	ld	-16 (ix),a
   0AB0 C3r04s0A           2145 	jp	00101$
   0AB3                    2146 00105$:
   0AB3 DD F9              2147 	ld	sp,ix
   0AB5 DD E1              2148 	pop	ix
   0AB7 C9                 2149 	ret
   0AB8                    2150 _twister_end::
                           2151 ;demo.c:384: void do_letter(int cc) {
                           2152 ;	---------------------------------
                           2153 ; Function do_letter
                           2154 ; ---------------------------------
   0AB8                    2155 _do_letter_start::
   0AB8                    2156 _do_letter:
   0AB8 DD E5              2157 	push	ix
   0ABA DD 21 00 00        2158 	ld	ix,#0
   0ABE DD 39              2159 	add	ix,sp
   0AC0 21 ED FF           2160 	ld	hl,#-19
   0AC3 39                 2161 	add	hl,sp
   0AC4 F9                 2162 	ld	sp,hl
                           2163 ;demo.c:386: int cidx = cc - 65;
   0AC5 DD 7E 04           2164 	ld	a,4 (ix)
   0AC8 C6 BF              2165 	add	a,#0xBF
   0ACA 4F                 2166 	ld	c,a
   0ACB DD 7E 05           2167 	ld	a,5 (ix)
   0ACE CE FF              2168 	adc	a,#0xFF
   0AD0 47                 2169 	ld	b,a
                           2170 ;demo.c:387: cmd.source_x = 127+font_x[cidx];
   0AD1 21 04 00           2171 	ld	hl,#0x0004
   0AD4 39                 2172 	add	hl,sp
   0AD5 DD 75 EF           2173 	ld	-17 (ix),l
   0AD8 DD 74 F0           2174 	ld	-16 (ix),h
   0ADB DD 71 ED           2175 	ld	-19 (ix),c
   0ADE DD 70 EE           2176 	ld	-18 (ix),b
   0AE1 DD CB ED 26        2177 	sla	-19 (ix)
   0AE5 DD CB EE 16        2178 	rl	-18 (ix)
   0AE9 3Er01              2179 	ld	a,#<_font_x
   0AEB DD 86 ED           2180 	add	a,-19 (ix)
   0AEE 5F                 2181 	ld	e,a
   0AEF 3Es0C              2182 	ld	a,#>_font_x
   0AF1 DD 8E EE           2183 	adc	a,-18 (ix)
   0AF4 6B                 2184 	ld	l,e
   0AF5 67                 2185 	ld	h,a
   0AF6 5E                 2186 	ld	e,(hl)
   0AF7 23                 2187 	inc	hl
   0AF8 56                 2188 	ld	d,(hl)
   0AF9 21 7F 00           2189 	ld	hl,#0x007F
   0AFC 19                 2190 	add	hl,de
   0AFD EB                 2191 	ex	de,hl
   0AFE DD 6E EF           2192 	ld	l,-17 (ix)
   0B01 DD 66 F0           2193 	ld	h,-16 (ix)
   0B04 73                 2194 	ld	(hl),e
   0B05 23                 2195 	inc	hl
   0B06 72                 2196 	ld	(hl),d
                           2197 ;demo.c:388: cmd.source_y = 256+font_y[cidx];
   0B07 21 04 00           2198 	ld	hl,#0x0004
   0B0A 39                 2199 	add	hl,sp
   0B0B EB                 2200 	ex	de,hl
   0B0C 21 02 00           2201 	ld	hl,#0x0002
   0B0F 19                 2202 	add	hl,de
   0B10 DD 75 EF           2203 	ld	-17 (ix),l
   0B13 DD 74 F0           2204 	ld	-16 (ix),h
   0B16 3Er41              2205 	ld	a,#<_font_y
   0B18 DD 86 ED           2206 	add	a,-19 (ix)
   0B1B 4F                 2207 	ld	c,a
   0B1C 3Es0C              2208 	ld	a,#>_font_y
   0B1E DD 8E EE           2209 	adc	a,-18 (ix)
   0B21 69                 2210 	ld	l,c
   0B22 67                 2211 	ld	h,a
   0B23 4E                 2212 	ld	c,(hl)
   0B24 23                 2213 	inc	hl
   0B25 46                 2214 	ld	b,(hl)
   0B26 21 00 01           2215 	ld	hl,#0x0100
   0B29 09                 2216 	add	hl,bc
   0B2A 4D                 2217 	ld	c,l
   0B2B 44                 2218 	ld	b,h
   0B2C DD 6E EF           2219 	ld	l,-17 (ix)
   0B2F DD 66 F0           2220 	ld	h,-16 (ix)
   0B32 71                 2221 	ld	(hl),c
   0B33 23                 2222 	inc	hl
   0B34 70                 2223 	ld	(hl),b
                           2224 ;demo.c:389: cmd.dest_x = lx-font_xo[cidx];
   0B35 21 04 00           2225 	ld	hl,#0x0004
   0B38 19                 2226 	add	hl,de
   0B39 DD 75 EF           2227 	ld	-17 (ix),l
   0B3C DD 74 F0           2228 	ld	-16 (ix),h
   0B3F 3Er01              2229 	ld	a,#<_font_xo
   0B41 DD 86 ED           2230 	add	a,-19 (ix)
   0B44 4F                 2231 	ld	c,a
   0B45 3Es0D              2232 	ld	a,#>_font_xo
   0B47 DD 8E EE           2233 	adc	a,-18 (ix)
   0B4A 69                 2234 	ld	l,c
   0B4B 67                 2235 	ld	h,a
   0B4C 4E                 2236 	ld	c,(hl)
   0B4D 23                 2237 	inc	hl
   0B4E 46                 2238 	ld	b,(hl)
   0B4F 3Ar7Fs40           2239 	ld	a,(#_lx+0)
   0B52 91                 2240 	sub	a,c
   0B53 4F                 2241 	ld	c,a
   0B54 3Ar80s40           2242 	ld	a,(#_lx+1)
   0B57 98                 2243 	sbc	a,b
   0B58 47                 2244 	ld	b,a
   0B59 DD 6E EF           2245 	ld	l,-17 (ix)
   0B5C DD 66 F0           2246 	ld	h,-16 (ix)
   0B5F 71                 2247 	ld	(hl),c
   0B60 23                 2248 	inc	hl
   0B61 70                 2249 	ld	(hl),b
                           2250 ;demo.c:390: cmd.dest_y = ly;
   0B62 21 06 00           2251 	ld	hl,#0x0006
   0B65 19                 2252 	add	hl,de
   0B66 DD 75 EF           2253 	ld	-17 (ix),l
   0B69 DD 74 F0           2254 	ld	-16 (ix),h
   0B6C ED 4Br81s40        2255 	ld	bc,(_ly)
   0B70 DD 6E EF           2256 	ld	l,-17 (ix)
   0B73 DD 66 F0           2257 	ld	h,-16 (ix)
   0B76 71                 2258 	ld	(hl),c
   0B77 23                 2259 	inc	hl
   0B78 70                 2260 	ld	(hl),b
                           2261 ;demo.c:391: cmd.size_x = font_w[cidx]+1;
   0B79 21 08 00           2262 	ld	hl,#0x0008
   0B7C 19                 2263 	add	hl,de
   0B7D DD 75 EF           2264 	ld	-17 (ix),l
   0B80 DD 74 F0           2265 	ld	-16 (ix),h
   0B83 3Er81              2266 	ld	a,#<_font_w
   0B85 DD 86 ED           2267 	add	a,-19 (ix)
   0B88 4F                 2268 	ld	c,a
   0B89 3Es0C              2269 	ld	a,#>_font_w
   0B8B DD 8E EE           2270 	adc	a,-18 (ix)
   0B8E 69                 2271 	ld	l,c
   0B8F 67                 2272 	ld	h,a
   0B90 4E                 2273 	ld	c,(hl)
   0B91 23                 2274 	inc	hl
   0B92 46                 2275 	ld	b,(hl)
   0B93 03                 2276 	inc	bc
   0B94 DD 6E EF           2277 	ld	l,-17 (ix)
   0B97 DD 66 F0           2278 	ld	h,-16 (ix)
   0B9A 71                 2279 	ld	(hl),c
   0B9B 23                 2280 	inc	hl
   0B9C 70                 2281 	ld	(hl),b
                           2282 ;demo.c:392: cmd.size_y = font_h[cidx];
   0B9D 21 0A 00           2283 	ld	hl,#0x000A
   0BA0 19                 2284 	add	hl,de
   0BA1 DD 75 EF           2285 	ld	-17 (ix),l
   0BA4 DD 74 F0           2286 	ld	-16 (ix),h
   0BA7 3ErC1              2287 	ld	a,#<_font_h
   0BA9 DD 86 ED           2288 	add	a,-19 (ix)
   0BAC 4F                 2289 	ld	c,a
   0BAD 3Es0C              2290 	ld	a,#>_font_h
   0BAF DD 8E EE           2291 	adc	a,-18 (ix)
   0BB2 69                 2292 	ld	l,c
   0BB3 67                 2293 	ld	h,a
   0BB4 4E                 2294 	ld	c,(hl)
   0BB5 23                 2295 	inc	hl
   0BB6 46                 2296 	ld	b,(hl)
   0BB7 DD 6E EF           2297 	ld	l,-17 (ix)
   0BBA DD 66 F0           2298 	ld	h,-16 (ix)
   0BBD 71                 2299 	ld	(hl),c
   0BBE 23                 2300 	inc	hl
   0BBF 70                 2301 	ld	(hl),b
                           2302 ;demo.c:393: cmd.argument = 0x00;
   0BC0 21 0D 00           2303 	ld	hl,#0x000D
   0BC3 19                 2304 	add	hl,de
   0BC4 4D                 2305 	ld	c,l
   0BC5 44                 2306 	ld	b,h
   0BC6 3E 00              2307 	ld	a,#0x00
   0BC8 02                 2308 	ld	(bc),a
                           2309 ;demo.c:394: cmd.command = 0xd0; // logical vram to vram
   0BC9 21 0E 00           2310 	ld	hl,#0x000E
   0BCC 19                 2311 	add	hl,de
   0BCD 4D                 2312 	ld	c,l
   0BCE 44                 2313 	ld	b,h
   0BCF 3E D0              2314 	ld	a,#0xD0
   0BD1 02                 2315 	ld	(bc),a
                           2316 ;demo.c:395: vdp_copier(&cmd);
   0BD2 D5                 2317 	push	de
   0BD3 CDr00s00           2318 	call	_vdp_copier
   0BD6 F1                 2319 	pop	af
                           2320 ;demo.c:396: lx+=font_w[cidx]+1;
   0BD7 3Er81              2321 	ld	a,#<_font_w
   0BD9 DD 86 ED           2322 	add	a,-19 (ix)
   0BDC 4F                 2323 	ld	c,a
   0BDD 3Es0C              2324 	ld	a,#>_font_w
   0BDF DD 8E EE           2325 	adc	a,-18 (ix)
   0BE2 69                 2326 	ld	l,c
   0BE3 67                 2327 	ld	h,a
   0BE4 4E                 2328 	ld	c,(hl)
   0BE5 23                 2329 	inc	hl
   0BE6 46                 2330 	ld	b,(hl)
   0BE7 03                 2331 	inc	bc
   0BE8 21r7Fs40           2332 	ld	hl,#_lx
   0BEB 7E                 2333 	ld	a,(hl)
   0BEC 81                 2334 	add	a,c
   0BED 23                 2335 	inc	hl
   0BEE 2B                 2336 	dec	hl
   0BEF C5                 2337 	push	bc
   0BF0 4F                 2338 	ld	c, a
   0BF1 23                 2339 	inc	hl
   0BF2 7E                 2340 	ld	a, (hl)
   0BF3 47                 2341 	ld	b, a
   0BF4 79                 2342 	ld	a, c
   0BF5 2B                 2343 	dec	hl
   0BF6 77                 2344 	ld	(hl), a
   0BF7 78                 2345 	ld	a, b
   0BF8 C1                 2346 	pop	bc
   0BF9 88                 2347 	adc	a,b
   0BFA 23                 2348 	inc	hl
   0BFB 77                 2349 	ld	(hl),a
   0BFC DD F9              2350 	ld	sp,ix
   0BFE DD E1              2351 	pop	ix
   0C00 C9                 2352 	ret
   0C01                    2353 _do_letter_end::
   0C01                    2354 _font_x:
   0C01 01 00              2355 	.dw #0x0001
   0C03 09 00              2356 	.dw #0x0009
   0C05 11 00              2357 	.dw #0x0011
   0C07 19 00              2358 	.dw #0x0019
   0C09 22 00              2359 	.dw #0x0022
   0C0B 29 00              2360 	.dw #0x0029
   0C0D 31 00              2361 	.dw #0x0031
   0C0F 39 00              2362 	.dw #0x0039
   0C11 42 00              2363 	.dw #0x0042
   0C13 46 00              2364 	.dw #0x0046
   0C15 4E 00              2365 	.dw #0x004E
   0C17 56 00              2366 	.dw #0x0056
   0C19 5E 00              2367 	.dw #0x005E
   0C1B 01 00              2368 	.dw #0x0001
   0C1D 0A 00              2369 	.dw #0x000A
   0C1F 13 00              2370 	.dw #0x0013
   0C21 1B 00              2371 	.dw #0x001B
   0C23 23 00              2372 	.dw #0x0023
   0C25 2C 00              2373 	.dw #0x002C
   0C27 33 00              2374 	.dw #0x0033
   0C29 00                 2375 	.db 0x00
   0C2A 00                 2376 	.db 0x00
   0C2B 00                 2377 	.db 0x00
   0C2C 00                 2378 	.db 0x00
   0C2D 00                 2379 	.db 0x00
   0C2E 00                 2380 	.db 0x00
   0C2F 00                 2381 	.db 0x00
   0C30 00                 2382 	.db 0x00
   0C31 00                 2383 	.db 0x00
   0C32 00                 2384 	.db 0x00
   0C33 00                 2385 	.db 0x00
   0C34 00                 2386 	.db 0x00
   0C35 00                 2387 	.db 0x00
   0C36 00                 2388 	.db 0x00
   0C37 00                 2389 	.db 0x00
   0C38 00                 2390 	.db 0x00
   0C39 00                 2391 	.db 0x00
   0C3A 00                 2392 	.db 0x00
   0C3B 00                 2393 	.db 0x00
   0C3C 00                 2394 	.db 0x00
   0C3D 00                 2395 	.db 0x00
   0C3E 00                 2396 	.db 0x00
   0C3F 00                 2397 	.db 0x00
   0C40 00                 2398 	.db 0x00
   0C41                    2399 _font_y:
   0C41 1C 00              2400 	.dw #0x001C
   0C43 1C 00              2401 	.dw #0x001C
   0C45 1C 00              2402 	.dw #0x001C
   0C47 1C 00              2403 	.dw #0x001C
   0C49 1C 00              2404 	.dw #0x001C
   0C4B 1C 00              2405 	.dw #0x001C
   0C4D 1C 00              2406 	.dw #0x001C
   0C4F 1C 00              2407 	.dw #0x001C
   0C51 1C 00              2408 	.dw #0x001C
   0C53 1C 00              2409 	.dw #0x001C
   0C55 1C 00              2410 	.dw #0x001C
   0C57 1C 00              2411 	.dw #0x001C
   0C59 1C 00              2412 	.dw #0x001C
   0C5B 25 00              2413 	.dw #0x0025
   0C5D 25 00              2414 	.dw #0x0025
   0C5F 25 00              2415 	.dw #0x0025
   0C61 25 00              2416 	.dw #0x0025
   0C63 25 00              2417 	.dw #0x0025
   0C65 25 00              2418 	.dw #0x0025
   0C67 25 00              2419 	.dw #0x0025
   0C69 00                 2420 	.db 0x00
   0C6A 00                 2421 	.db 0x00
   0C6B 00                 2422 	.db 0x00
   0C6C 00                 2423 	.db 0x00
   0C6D 00                 2424 	.db 0x00
   0C6E 00                 2425 	.db 0x00
   0C6F 00                 2426 	.db 0x00
   0C70 00                 2427 	.db 0x00
   0C71 00                 2428 	.db 0x00
   0C72 00                 2429 	.db 0x00
   0C73 00                 2430 	.db 0x00
   0C74 00                 2431 	.db 0x00
   0C75 00                 2432 	.db 0x00
   0C76 00                 2433 	.db 0x00
   0C77 00                 2434 	.db 0x00
   0C78 00                 2435 	.db 0x00
   0C79 00                 2436 	.db 0x00
   0C7A 00                 2437 	.db 0x00
   0C7B 00                 2438 	.db 0x00
   0C7C 00                 2439 	.db 0x00
   0C7D 00                 2440 	.db 0x00
   0C7E 00                 2441 	.db 0x00
   0C7F 00                 2442 	.db 0x00
   0C80 00                 2443 	.db 0x00
   0C81                    2444 _font_w:
   0C81 07 00              2445 	.dw #0x0007
   0C83 07 00              2446 	.dw #0x0007
   0C85 07 00              2447 	.dw #0x0007
   0C87 07 00              2448 	.dw #0x0007
   0C89 07 00              2449 	.dw #0x0007
   0C8B 07 00              2450 	.dw #0x0007
   0C8D 07 00              2451 	.dw #0x0007
   0C8F 07 00              2452 	.dw #0x0007
   0C91 04 00              2453 	.dw #0x0004
   0C93 07 00              2454 	.dw #0x0007
   0C95 07 00              2455 	.dw #0x0007
   0C97 07 00              2456 	.dw #0x0007
   0C99 09 00              2457 	.dw #0x0009
   0C9B 08 00              2458 	.dw #0x0008
   0C9D 07 00              2459 	.dw #0x0007
   0C9F 08 00              2460 	.dw #0x0008
   0CA1 08 00              2461 	.dw #0x0008
   0CA3 08 00              2462 	.dw #0x0008
   0CA5 07 00              2463 	.dw #0x0007
   0CA7 08 00              2464 	.dw #0x0008
   0CA9 00                 2465 	.db 0x00
   0CAA 00                 2466 	.db 0x00
   0CAB 00                 2467 	.db 0x00
   0CAC 00                 2468 	.db 0x00
   0CAD 00                 2469 	.db 0x00
   0CAE 00                 2470 	.db 0x00
   0CAF 00                 2471 	.db 0x00
   0CB0 00                 2472 	.db 0x00
   0CB1 00                 2473 	.db 0x00
   0CB2 00                 2474 	.db 0x00
   0CB3 00                 2475 	.db 0x00
   0CB4 00                 2476 	.db 0x00
   0CB5 00                 2477 	.db 0x00
   0CB6 00                 2478 	.db 0x00
   0CB7 00                 2479 	.db 0x00
   0CB8 00                 2480 	.db 0x00
   0CB9 00                 2481 	.db 0x00
   0CBA 00                 2482 	.db 0x00
   0CBB 00                 2483 	.db 0x00
   0CBC 00                 2484 	.db 0x00
   0CBD 00                 2485 	.db 0x00
   0CBE 00                 2486 	.db 0x00
   0CBF 00                 2487 	.db 0x00
   0CC0 00                 2488 	.db 0x00
   0CC1                    2489 _font_h:
   0CC1 08 00              2490 	.dw #0x0008
   0CC3 08 00              2491 	.dw #0x0008
   0CC5 08 00              2492 	.dw #0x0008
   0CC7 08 00              2493 	.dw #0x0008
   0CC9 08 00              2494 	.dw #0x0008
   0CCB 08 00              2495 	.dw #0x0008
   0CCD 08 00              2496 	.dw #0x0008
   0CCF 08 00              2497 	.dw #0x0008
   0CD1 08 00              2498 	.dw #0x0008
   0CD3 08 00              2499 	.dw #0x0008
   0CD5 08 00              2500 	.dw #0x0008
   0CD7 08 00              2501 	.dw #0x0008
   0CD9 08 00              2502 	.dw #0x0008
   0CDB 08 00              2503 	.dw #0x0008
   0CDD 08 00              2504 	.dw #0x0008
   0CDF 08 00              2505 	.dw #0x0008
   0CE1 08 00              2506 	.dw #0x0008
   0CE3 08 00              2507 	.dw #0x0008
   0CE5 08 00              2508 	.dw #0x0008
   0CE7 08 00              2509 	.dw #0x0008
   0CE9 00                 2510 	.db 0x00
   0CEA 00                 2511 	.db 0x00
   0CEB 00                 2512 	.db 0x00
   0CEC 00                 2513 	.db 0x00
   0CED 00                 2514 	.db 0x00
   0CEE 00                 2515 	.db 0x00
   0CEF 00                 2516 	.db 0x00
   0CF0 00                 2517 	.db 0x00
   0CF1 00                 2518 	.db 0x00
   0CF2 00                 2519 	.db 0x00
   0CF3 00                 2520 	.db 0x00
   0CF4 00                 2521 	.db 0x00
   0CF5 00                 2522 	.db 0x00
   0CF6 00                 2523 	.db 0x00
   0CF7 00                 2524 	.db 0x00
   0CF8 00                 2525 	.db 0x00
   0CF9 00                 2526 	.db 0x00
   0CFA 00                 2527 	.db 0x00
   0CFB 00                 2528 	.db 0x00
   0CFC 00                 2529 	.db 0x00
   0CFD 00                 2530 	.db 0x00
   0CFE 00                 2531 	.db 0x00
   0CFF 00                 2532 	.db 0x00
   0D00 00                 2533 	.db 0x00
   0D01                    2534 _font_xo:
   0D01 00 00              2535 	.dw #0x0000
   0D03 00 00              2536 	.dw #0x0000
   0D05 00 00              2537 	.dw #0x0000
   0D07 00 00              2538 	.dw #0x0000
   0D09 00 00              2539 	.dw #0x0000
   0D0B 00 00              2540 	.dw #0x0000
   0D0D 00 00              2541 	.dw #0x0000
   0D0F 00 00              2542 	.dw #0x0000
   0D11 00 00              2543 	.dw #0x0000
   0D13 01 00              2544 	.dw #0x0001
   0D15 01 00              2545 	.dw #0x0001
   0D17 01 00              2546 	.dw #0x0001
   0D19 02 00              2547 	.dw #0x0002
   0D1B 01 00              2548 	.dw #0x0001
   0D1D 01 00              2549 	.dw #0x0001
   0D1F 02 00              2550 	.dw #0x0002
   0D21 02 00              2551 	.dw #0x0002
   0D23 02 00              2552 	.dw #0x0002
   0D25 02 00              2553 	.dw #0x0002
   0D27 02 00              2554 	.dw #0x0002
   0D29 00                 2555 	.db 0x00
   0D2A 00                 2556 	.db 0x00
   0D2B 00                 2557 	.db 0x00
   0D2C 00                 2558 	.db 0x00
   0D2D 00                 2559 	.db 0x00
   0D2E 00                 2560 	.db 0x00
   0D2F 00                 2561 	.db 0x00
   0D30 00                 2562 	.db 0x00
   0D31 00                 2563 	.db 0x00
   0D32 00                 2564 	.db 0x00
   0D33 00                 2565 	.db 0x00
   0D34 00                 2566 	.db 0x00
   0D35 00                 2567 	.db 0x00
   0D36 00                 2568 	.db 0x00
   0D37 00                 2569 	.db 0x00
   0D38 00                 2570 	.db 0x00
   0D39 00                 2571 	.db 0x00
   0D3A 00                 2572 	.db 0x00
   0D3B 00                 2573 	.db 0x00
   0D3C 00                 2574 	.db 0x00
   0D3D 00                 2575 	.db 0x00
   0D3E 00                 2576 	.db 0x00
   0D3F 00                 2577 	.db 0x00
   0D40 00                 2578 	.db 0x00
                           2579 ;demo.c:400: void font() {
                           2580 ;	---------------------------------
                           2581 ; Function font
                           2582 ; ---------------------------------
   0D41                    2583 _font_start::
   0D41                    2584 _font:
                           2585 ;demo.c:402: lx = 70;
   0D41 21r7Fs40           2586 	ld	hl,#_lx + 0
   0D44 36 46              2587 	ld	(hl), #0x46
   0D46 21r80s40           2588 	ld	hl,#_lx + 1
   0D49 36 00              2589 	ld	(hl), #0x00
                           2590 ;demo.c:403: ly = 128;
   0D4B 21r81s40           2591 	ld	hl,#_ly + 0
   0D4E 36 80              2592 	ld	(hl), #0x80
   0D50 21r82s40           2593 	ld	hl,#_ly + 1
   0D53 36 00              2594 	ld	(hl), #0x00
                           2595 ;demo.c:405: do_letter('D');
   0D55 21 44 00           2596 	ld	hl,#0x0044
   0D58 E5                 2597 	push	hl
   0D59 CDrB8s0A           2598 	call	_do_letter
   0D5C F1                 2599 	pop	af
                           2600 ;demo.c:406: do_letter('E');
   0D5D 21 45 00           2601 	ld	hl,#0x0045
   0D60 E5                 2602 	push	hl
   0D61 CDrB8s0A           2603 	call	_do_letter
   0D64 F1                 2604 	pop	af
                           2605 ;demo.c:407: do_letter('M');
   0D65 21 4D 00           2606 	ld	hl,#0x004D
   0D68 E5                 2607 	push	hl
   0D69 CDrB8s0A           2608 	call	_do_letter
   0D6C F1                 2609 	pop	af
                           2610 ;demo.c:408: do_letter('O');
   0D6D 21 4F 00           2611 	ld	hl,#0x004F
   0D70 E5                 2612 	push	hl
   0D71 CDrB8s0A           2613 	call	_do_letter
   0D74 F1                 2614 	pop	af
                           2615 ;demo.c:409: lx+=2;
   0D75 21r7Fs40           2616 	ld	hl,#_lx
   0D78 7E                 2617 	ld	a,(hl)
   0D79 C6 02              2618 	add	a,#0x02
   0D7B 23                 2619 	inc	hl
   0D7C 2B                 2620 	dec	hl
   0D7D C5                 2621 	push	bc
   0D7E 4F                 2622 	ld	c, a
   0D7F 23                 2623 	inc	hl
   0D80 7E                 2624 	ld	a, (hl)
   0D81 47                 2625 	ld	b, a
   0D82 79                 2626 	ld	a, c
   0D83 2B                 2627 	dec	hl
   0D84 77                 2628 	ld	(hl), a
   0D85 78                 2629 	ld	a, b
   0D86 C1                 2630 	pop	bc
   0D87 CE 00              2631 	adc	a,#0x00
   0D89 23                 2632 	inc	hl
   0D8A 77                 2633 	ld	(hl),a
                           2634 ;demo.c:410: do_letter('C');
   0D8B 21 43 00           2635 	ld	hl,#0x0043
   0D8E E5                 2636 	push	hl
   0D8F CDrB8s0A           2637 	call	_do_letter
   0D92 F1                 2638 	pop	af
                           2639 ;demo.c:411: do_letter('O');
   0D93 21 4F 00           2640 	ld	hl,#0x004F
   0D96 E5                 2641 	push	hl
   0D97 CDrB8s0A           2642 	call	_do_letter
   0D9A F1                 2643 	pop	af
                           2644 ;demo.c:412: do_letter('D');
   0D9B 21 44 00           2645 	ld	hl,#0x0044
   0D9E E5                 2646 	push	hl
   0D9F CDrB8s0A           2647 	call	_do_letter
   0DA2 F1                 2648 	pop	af
                           2649 ;demo.c:413: do_letter('E');
   0DA3 21 45 00           2650 	ld	hl,#0x0045
   0DA6 E5                 2651 	push	hl
   0DA7 CDrB8s0A           2652 	call	_do_letter
   0DAA F1                 2653 	pop	af
                           2654 ;demo.c:414: do_letter('D');
   0DAB 21 44 00           2655 	ld	hl,#0x0044
   0DAE E5                 2656 	push	hl
   0DAF CDrB8s0A           2657 	call	_do_letter
   0DB2 F1                 2658 	pop	af
                           2659 ;demo.c:415: lx+=2;
   0DB3 21r7Fs40           2660 	ld	hl,#_lx
   0DB6 7E                 2661 	ld	a,(hl)
   0DB7 C6 02              2662 	add	a,#0x02
   0DB9 23                 2663 	inc	hl
   0DBA 2B                 2664 	dec	hl
   0DBB C5                 2665 	push	bc
   0DBC 4F                 2666 	ld	c, a
   0DBD 23                 2667 	inc	hl
   0DBE 7E                 2668 	ld	a, (hl)
   0DBF 47                 2669 	ld	b, a
   0DC0 79                 2670 	ld	a, c
   0DC1 2B                 2671 	dec	hl
   0DC2 77                 2672 	ld	(hl), a
   0DC3 78                 2673 	ld	a, b
   0DC4 C1                 2674 	pop	bc
   0DC5 CE 00              2675 	adc	a,#0x00
   0DC7 23                 2676 	inc	hl
   0DC8 77                 2677 	ld	(hl),a
                           2678 ;demo.c:416: do_letter('C');
   0DC9 21 43 00           2679 	ld	hl,#0x0043
   0DCC E5                 2680 	push	hl
   0DCD CDrB8s0A           2681 	call	_do_letter
   0DD0 F1                 2682 	pop	af
                           2683 ;demo.c:417: do_letter('A');
   0DD1 21 41 00           2684 	ld	hl,#0x0041
   0DD4 E5                 2685 	push	hl
   0DD5 CDrB8s0A           2686 	call	_do_letter
   0DD8 F1                 2687 	pop	af
                           2688 ;demo.c:418: do_letter('F');
   0DD9 21 46 00           2689 	ld	hl,#0x0046
   0DDC E5                 2690 	push	hl
   0DDD CDrB8s0A           2691 	call	_do_letter
   0DE0 F1                 2692 	pop	af
                           2693 ;demo.c:419: do_letter('E');
   0DE1 21 45 00           2694 	ld	hl,#0x0045
   0DE4 E5                 2695 	push	hl
   0DE5 CDrB8s0A           2696 	call	_do_letter
   0DE8 F1                 2697 	pop	af
                           2698 ;demo.c:420: lx = 70;
   0DE9 21r7Fs40           2699 	ld	hl,#_lx + 0
   0DEC 36 46              2700 	ld	(hl), #0x46
   0DEE 21r80s40           2701 	ld	hl,#_lx + 1
   0DF1 36 00              2702 	ld	(hl), #0x00
                           2703 ;demo.c:421: ly+=20;
   0DF3 21r81s40           2704 	ld	hl,#_ly
   0DF6 7E                 2705 	ld	a,(hl)
   0DF7 C6 14              2706 	add	a,#0x14
   0DF9 23                 2707 	inc	hl
   0DFA 2B                 2708 	dec	hl
   0DFB C5                 2709 	push	bc
   0DFC 4F                 2710 	ld	c, a
   0DFD 23                 2711 	inc	hl
   0DFE 7E                 2712 	ld	a, (hl)
   0DFF 47                 2713 	ld	b, a
   0E00 79                 2714 	ld	a, c
   0E01 2B                 2715 	dec	hl
   0E02 77                 2716 	ld	(hl), a
   0E03 78                 2717 	ld	a, b
   0E04 C1                 2718 	pop	bc
   0E05 CE 00              2719 	adc	a,#0x00
   0E07 23                 2720 	inc	hl
   0E08 77                 2721 	ld	(hl),a
                           2722 ;demo.c:422: for (i = 0; i < 20; i++) 
   0E09 01 00 00           2723 	ld	bc,#0x0000
   0E0C                    2724 00101$:
   0E0C 79                 2725 	ld	a,c
   0E0D D6 14              2726 	sub	a,#0x14
   0E0F 78                 2727 	ld	a,b
   0E10 DE 00              2728 	sbc	a,#0x00
   0E12 F2r23s0E           2729 	jp	P,00104$
                           2730 ;demo.c:423: do_letter('A'+i);
   0E15 21 41 00           2731 	ld	hl,#0x0041
   0E18 09                 2732 	add	hl,bc
   0E19 C5                 2733 	push	bc
   0E1A E5                 2734 	push	hl
   0E1B CDrB8s0A           2735 	call	_do_letter
   0E1E F1                 2736 	pop	af
   0E1F C1                 2737 	pop	bc
                           2738 ;demo.c:422: for (i = 0; i < 20; i++) 
   0E20 03                 2739 	inc	bc
   0E21 18 E9              2740 	jr	00101$
   0E23                    2741 00104$:
                           2742 ;demo.c:425: lx = 70;
   0E23 21r7Fs40           2743 	ld	hl,#_lx + 0
   0E26 36 46              2744 	ld	(hl), #0x46
   0E28 21r80s40           2745 	ld	hl,#_lx + 1
   0E2B 36 00              2746 	ld	(hl), #0x00
                           2747 ;demo.c:426: ly = 158;
   0E2D 21r81s40           2748 	ld	hl,#_ly + 0
   0E30 36 9E              2749 	ld	(hl), #0x9E
   0E32 21r82s40           2750 	ld	hl,#_ly + 1
   0E35 36 00              2751 	ld	(hl), #0x00
                           2752 ;demo.c:428: do_letter('D');
   0E37 21 44 00           2753 	ld	hl,#0x0044
   0E3A E5                 2754 	push	hl
   0E3B CDrB8s0A           2755 	call	_do_letter
   0E3E F1                 2756 	pop	af
                           2757 ;demo.c:429: do_letter('A');
   0E3F 21 41 00           2758 	ld	hl,#0x0041
   0E42 E5                 2759 	push	hl
   0E43 CDrB8s0A           2760 	call	_do_letter
   0E46 F1                 2761 	pop	af
                           2762 ;demo.c:430: do_letter('N');
   0E47 21 4E 00           2763 	ld	hl,#0x004E
   0E4A E5                 2764 	push	hl
   0E4B CDrB8s0A           2765 	call	_do_letter
   0E4E F1                 2766 	pop	af
                           2767 ;demo.c:431: do_letter('C');
   0E4F 21 43 00           2768 	ld	hl,#0x0043
   0E52 E5                 2769 	push	hl
   0E53 CDrB8s0A           2770 	call	_do_letter
   0E56 F1                 2771 	pop	af
                           2772 ;demo.c:432: do_letter('I');
   0E57 21 49 00           2773 	ld	hl,#0x0049
   0E5A E5                 2774 	push	hl
   0E5B CDrB8s0A           2775 	call	_do_letter
   0E5E F1                 2776 	pop	af
                           2777 ;demo.c:433: do_letter('N');
   0E5F 21 4E 00           2778 	ld	hl,#0x004E
   0E62 E5                 2779 	push	hl
   0E63 CDrB8s0A           2780 	call	_do_letter
   0E66 F1                 2781 	pop	af
                           2782 ;demo.c:434: do_letter('G');
   0E67 21 47 00           2783 	ld	hl,#0x0047
   0E6A E5                 2784 	push	hl
   0E6B CDrB8s0A           2785 	call	_do_letter
   0E6E F1                 2786 	pop	af
                           2787 ;demo.c:435: lx+=2;
   0E6F 21r7Fs40           2788 	ld	hl,#_lx
   0E72 7E                 2789 	ld	a,(hl)
   0E73 C6 02              2790 	add	a,#0x02
   0E75 23                 2791 	inc	hl
   0E76 2B                 2792 	dec	hl
   0E77 C5                 2793 	push	bc
   0E78 4F                 2794 	ld	c, a
   0E79 23                 2795 	inc	hl
   0E7A 7E                 2796 	ld	a, (hl)
   0E7B 47                 2797 	ld	b, a
   0E7C 79                 2798 	ld	a, c
   0E7D 2B                 2799 	dec	hl
   0E7E 77                 2800 	ld	(hl), a
   0E7F 78                 2801 	ld	a, b
   0E80 C1                 2802 	pop	bc
   0E81 CE 00              2803 	adc	a,#0x00
   0E83 23                 2804 	inc	hl
   0E84 77                 2805 	ld	(hl),a
                           2806 ;demo.c:436: do_letter('I');
   0E85 21 49 00           2807 	ld	hl,#0x0049
   0E88 E5                 2808 	push	hl
   0E89 CDrB8s0A           2809 	call	_do_letter
   0E8C F1                 2810 	pop	af
                           2811 ;demo.c:437: do_letter('S');
   0E8D 21 53 00           2812 	ld	hl,#0x0053
   0E90 E5                 2813 	push	hl
   0E91 CDrB8s0A           2814 	call	_do_letter
   0E94 F1                 2815 	pop	af
                           2816 ;demo.c:438: lx+=2;
   0E95 21r7Fs40           2817 	ld	hl,#_lx
   0E98 7E                 2818 	ld	a,(hl)
   0E99 C6 02              2819 	add	a,#0x02
   0E9B 23                 2820 	inc	hl
   0E9C 2B                 2821 	dec	hl
   0E9D C5                 2822 	push	bc
   0E9E 4F                 2823 	ld	c, a
   0E9F 23                 2824 	inc	hl
   0EA0 7E                 2825 	ld	a, (hl)
   0EA1 47                 2826 	ld	b, a
   0EA2 79                 2827 	ld	a, c
   0EA3 2B                 2828 	dec	hl
   0EA4 77                 2829 	ld	(hl), a
   0EA5 78                 2830 	ld	a, b
   0EA6 C1                 2831 	pop	bc
   0EA7 CE 00              2832 	adc	a,#0x00
   0EA9 23                 2833 	inc	hl
   0EAA 77                 2834 	ld	(hl),a
                           2835 ;demo.c:439: do_letter('F');
   0EAB 21 46 00           2836 	ld	hl,#0x0046
   0EAE E5                 2837 	push	hl
   0EAF CDrB8s0A           2838 	call	_do_letter
   0EB2 F1                 2839 	pop	af
                           2840 ;demo.c:440: do_letter('O');
   0EB3 21 4F 00           2841 	ld	hl,#0x004F
   0EB6 E5                 2842 	push	hl
   0EB7 CDrB8s0A           2843 	call	_do_letter
   0EBA F1                 2844 	pop	af
                           2845 ;demo.c:441: do_letter('R');
   0EBB 21 52 00           2846 	ld	hl,#0x0052
   0EBE E5                 2847 	push	hl
   0EBF CDrB8s0A           2848 	call	_do_letter
   0EC2 F1                 2849 	pop	af
                           2850 ;demo.c:442: do_letter('B');
   0EC3 21 42 00           2851 	ld	hl,#0x0042
   0EC6 E5                 2852 	push	hl
   0EC7 CDrB8s0A           2853 	call	_do_letter
   0ECA F1                 2854 	pop	af
                           2855 ;demo.c:443: do_letter('I');
   0ECB 21 49 00           2856 	ld	hl,#0x0049
   0ECE E5                 2857 	push	hl
   0ECF CDrB8s0A           2858 	call	_do_letter
   0ED2 F1                 2859 	pop	af
                           2860 ;demo.c:444: do_letter('D');
   0ED3 21 44 00           2861 	ld	hl,#0x0044
   0ED6 E5                 2862 	push	hl
   0ED7 CDrB8s0A           2863 	call	_do_letter
   0EDA F1                 2864 	pop	af
                           2865 ;demo.c:445: do_letter('D');
   0EDB 21 44 00           2866 	ld	hl,#0x0044
   0EDE E5                 2867 	push	hl
   0EDF CDrB8s0A           2868 	call	_do_letter
   0EE2 F1                 2869 	pop	af
                           2870 ;demo.c:446: do_letter('E');
   0EE3 21 45 00           2871 	ld	hl,#0x0045
   0EE6 E5                 2872 	push	hl
   0EE7 CDrB8s0A           2873 	call	_do_letter
   0EEA F1                 2874 	pop	af
                           2875 ;demo.c:447: do_letter('N');
   0EEB 21 4E 00           2876 	ld	hl,#0x004E
   0EEE E5                 2877 	push	hl
   0EEF CDrB8s0A           2878 	call	_do_letter
   0EF2 F1                 2879 	pop	af
   0EF3 C9                 2880 	ret
   0EF4                    2881 _font_end::
                           2882 ;demo.c:455: void do_animplay() {
                           2883 ;	---------------------------------
                           2884 ; Function do_animplay
                           2885 ; ---------------------------------
   0EF4                    2886 _do_animplay_start::
   0EF4                    2887 _do_animplay:
   0EF4 DD E5              2888 	push	ix
   0EF6 DD 21 00 00        2889 	ld	ix,#0
   0EFA DD 39              2890 	add	ix,sp
   0EFC 21 EC FF           2891 	ld	hl,#-20
   0EFF 39                 2892 	add	hl,sp
   0F00 F9                 2893 	ld	sp,hl
                           2894 ;demo.c:461: for (y = 0; y < 106; y+=1) {
   0F01 DD 36 FF 00        2895 	ld	-1 (ix),#0x00
   0F05                    2896 00107$:
   0F05 DD 7E FF           2897 	ld	a,-1 (ix)
   0F08 D6 6A              2898 	sub	a,#0x6A
   0F0A D2rB6s0F           2899 	jp	NC,00110$
                           2900 ;demo.c:462: cmd.source_x = xo;
   0F0D 21 04 00           2901 	ld	hl,#0x0004
   0F10 39                 2902 	add	hl,sp
   0F11 EB                 2903 	ex	de,hl
   0F12 ED 4Br83s40        2904 	ld	bc,(_xo)
   0F16 EB                 2905 	ex	de,hl
   0F17 71                 2906 	ld	(hl),c
   0F18 23                 2907 	inc	hl
   0F19 70                 2908 	ld	(hl),b
                           2909 ;demo.c:463: cmd.source_y = 256+po+yo+(y>>1);
   0F1A 21 04 00           2910 	ld	hl,#0x0004
   0F1D 39                 2911 	add	hl,sp
   0F1E 4D                 2912 	ld	c,l
   0F1F 44                 2913 	ld	b,h
   0F20 21 02 00           2914 	ld	hl,#0x0002
   0F23 09                 2915 	add	hl,bc
   0F24 DD 75 EE           2916 	ld	-18 (ix),l
   0F27 DD 74 EF           2917 	ld	-17 (ix),h
   0F2A 3Ar87s40           2918 	ld	a,(#_po+0)
   0F2D 5F                 2919 	ld	e,a
   0F2E 3Ar88s40           2920 	ld	a,(#_po+1)
   0F31 C6 01              2921 	add	a,#0x01
   0F33 57                 2922 	ld	d,a
   0F34 21r85s40           2923 	ld	hl,#_yo
   0F37 7B                 2924 	ld	a,e
   0F38 86                 2925 	add	a,(hl)
   0F39 DD 77 EC           2926 	ld	-20 (ix),a
   0F3C 7A                 2927 	ld	a,d
   0F3D 23                 2928 	inc	hl
   0F3E 8E                 2929 	adc	a,(hl)
   0F3F DD 77 ED           2930 	ld	-19 (ix),a
   0F42 DD 5E FF           2931 	ld	e,-1 (ix)
   0F45 CB 3B              2932 	srl	e
   0F47 16 00              2933 	ld	d,#0x00
   0F49 DD 7E EC           2934 	ld	a,-20 (ix)
   0F4C 83                 2935 	add	a,e
   0F4D 5F                 2936 	ld	e,a
   0F4E DD 7E ED           2937 	ld	a,-19 (ix)
   0F51 8A                 2938 	adc	a,d
   0F52 57                 2939 	ld	d,a
   0F53 DD 6E EE           2940 	ld	l,-18 (ix)
   0F56 DD 66 EF           2941 	ld	h,-17 (ix)
   0F59 73                 2942 	ld	(hl),e
   0F5A 23                 2943 	inc	hl
   0F5B 72                 2944 	ld	(hl),d
                           2945 ;demo.c:464: cmd.dest_x = 0;
   0F5C 21 04 00           2946 	ld	hl,#0x0004
   0F5F 09                 2947 	add	hl,bc
   0F60 36 00              2948 	ld	(hl),#0x00
   0F62 23                 2949 	inc	hl
   0F63 36 00              2950 	ld	(hl),#0x00
                           2951 ;demo.c:465: cmd.dest_y = (y<<1);
   0F65 21 06 00           2952 	ld	hl,#0x0006
   0F68 09                 2953 	add	hl,bc
   0F69 DD 75 EC           2954 	ld	-20 (ix),l
   0F6C DD 74 ED           2955 	ld	-19 (ix),h
   0F6F DD 5E FF           2956 	ld	e,-1 (ix)
   0F72 16 00              2957 	ld	d,#0x00
   0F74 CB 23              2958 	sla	e
   0F76 CB 12              2959 	rl	d
   0F78 DD 6E EC           2960 	ld	l,-20 (ix)
   0F7B DD 66 ED           2961 	ld	h,-19 (ix)
   0F7E 73                 2962 	ld	(hl),e
   0F7F 23                 2963 	inc	hl
   0F80 72                 2964 	ld	(hl),d
                           2965 ;demo.c:466: cmd.size_x = 128;
   0F81 21 08 00           2966 	ld	hl,#0x0008
   0F84 09                 2967 	add	hl,bc
   0F85 36 80              2968 	ld	(hl),#0x80
   0F87 23                 2969 	inc	hl
   0F88 36 00              2970 	ld	(hl),#0x00
                           2971 ;demo.c:467: cmd.size_y = 1;
   0F8A 21 0A 00           2972 	ld	hl,#0x000A
   0F8D 09                 2973 	add	hl,bc
   0F8E 36 01              2974 	ld	(hl),#0x01
   0F90 23                 2975 	inc	hl
   0F91 36 00              2976 	ld	(hl),#0x00
                           2977 ;demo.c:468: cmd.data = 0;
   0F93 21 0C 00           2978 	ld	hl,#0x000C
   0F96 09                 2979 	add	hl,bc
   0F97 EB                 2980 	ex	de,hl
   0F98 3E 00              2981 	ld	a,#0x00
   0F9A 12                 2982 	ld	(de),a
                           2983 ;demo.c:469: cmd.argument = 0x00;
   0F9B 21 0D 00           2984 	ld	hl,#0x000D
   0F9E 09                 2985 	add	hl,bc
   0F9F EB                 2986 	ex	de,hl
   0FA0 3E 00              2987 	ld	a,#0x00
   0FA2 12                 2988 	ld	(de),a
                           2989 ;demo.c:470: cmd.command = 0xD0;
   0FA3 21 0E 00           2990 	ld	hl,#0x000E
   0FA6 09                 2991 	add	hl,bc
   0FA7 EB                 2992 	ex	de,hl
   0FA8 3E D0              2993 	ld	a,#0xD0
   0FAA 12                 2994 	ld	(de),a
                           2995 ;demo.c:471: vdp_copier(&cmd);
   0FAB C5                 2996 	push	bc
   0FAC CDr00s00           2997 	call	_vdp_copier
   0FAF F1                 2998 	pop	af
                           2999 ;demo.c:461: for (y = 0; y < 106; y+=1) {
   0FB0 DD 34 FF           3000 	inc	-1 (ix)
   0FB3 C3r05s0F           3001 	jp	00107$
   0FB6                    3002 00110$:
                           3003 ;demo.c:474: for (y = 0; y < 106; y+=1) {
   0FB6 DD 36 FF 00        3004 	ld	-1 (ix),#0x00
   0FBA                    3005 00111$:
   0FBA DD 7E FF           3006 	ld	a,-1 (ix)
   0FBD D6 6A              3007 	sub	a,#0x6A
   0FBF D2r6Bs10           3008 	jp	NC,00114$
                           3009 ;demo.c:475: cmd.source_x = xo;
   0FC2 21 04 00           3010 	ld	hl,#0x0004
   0FC5 39                 3011 	add	hl,sp
   0FC6 EB                 3012 	ex	de,hl
   0FC7 ED 4Br83s40        3013 	ld	bc,(_xo)
   0FCB EB                 3014 	ex	de,hl
   0FCC 71                 3015 	ld	(hl),c
   0FCD 23                 3016 	inc	hl
   0FCE 70                 3017 	ld	(hl),b
                           3018 ;demo.c:476: cmd.source_y = 256+po+yo+(y>>1);
   0FCF 21 04 00           3019 	ld	hl,#0x0004
   0FD2 39                 3020 	add	hl,sp
   0FD3 4D                 3021 	ld	c,l
   0FD4 44                 3022 	ld	b,h
   0FD5 21 02 00           3023 	ld	hl,#0x0002
   0FD8 09                 3024 	add	hl,bc
   0FD9 DD 75 EC           3025 	ld	-20 (ix),l
   0FDC DD 74 ED           3026 	ld	-19 (ix),h
   0FDF 3Ar87s40           3027 	ld	a,(#_po+0)
   0FE2 5F                 3028 	ld	e,a
   0FE3 3Ar88s40           3029 	ld	a,(#_po+1)
   0FE6 C6 01              3030 	add	a,#0x01
   0FE8 57                 3031 	ld	d,a
   0FE9 21r85s40           3032 	ld	hl,#_yo
   0FEC 7B                 3033 	ld	a,e
   0FED 86                 3034 	add	a,(hl)
   0FEE DD 77 EE           3035 	ld	-18 (ix),a
   0FF1 7A                 3036 	ld	a,d
   0FF2 23                 3037 	inc	hl
   0FF3 8E                 3038 	adc	a,(hl)
   0FF4 DD 77 EF           3039 	ld	-17 (ix),a
   0FF7 DD 5E FF           3040 	ld	e,-1 (ix)
   0FFA CB 3B              3041 	srl	e
   0FFC 16 00              3042 	ld	d,#0x00
   0FFE DD 7E EE           3043 	ld	a,-18 (ix)
   1001 83                 3044 	add	a,e
   1002 5F                 3045 	ld	e,a
   1003 DD 7E EF           3046 	ld	a,-17 (ix)
   1006 8A                 3047 	adc	a,d
   1007 57                 3048 	ld	d,a
   1008 DD 6E EC           3049 	ld	l,-20 (ix)
   100B DD 66 ED           3050 	ld	h,-19 (ix)
   100E 73                 3051 	ld	(hl),e
   100F 23                 3052 	inc	hl
   1010 72                 3053 	ld	(hl),d
                           3054 ;demo.c:477: cmd.dest_x = 128;
   1011 21 04 00           3055 	ld	hl,#0x0004
   1014 09                 3056 	add	hl,bc
   1015 36 80              3057 	ld	(hl),#0x80
   1017 23                 3058 	inc	hl
   1018 36 00              3059 	ld	(hl),#0x00
                           3060 ;demo.c:478: cmd.dest_y = (y<<1);
   101A 21 06 00           3061 	ld	hl,#0x0006
   101D 09                 3062 	add	hl,bc
   101E DD 75 EC           3063 	ld	-20 (ix),l
   1021 DD 74 ED           3064 	ld	-19 (ix),h
   1024 DD 5E FF           3065 	ld	e,-1 (ix)
   1027 16 00              3066 	ld	d,#0x00
   1029 CB 23              3067 	sla	e
   102B CB 12              3068 	rl	d
   102D DD 6E EC           3069 	ld	l,-20 (ix)
   1030 DD 66 ED           3070 	ld	h,-19 (ix)
   1033 73                 3071 	ld	(hl),e
   1034 23                 3072 	inc	hl
   1035 72                 3073 	ld	(hl),d
                           3074 ;demo.c:479: cmd.size_x = 128;
   1036 21 08 00           3075 	ld	hl,#0x0008
   1039 09                 3076 	add	hl,bc
   103A 36 80              3077 	ld	(hl),#0x80
   103C 23                 3078 	inc	hl
   103D 36 00              3079 	ld	(hl),#0x00
                           3080 ;demo.c:480: cmd.size_y = 1;
   103F 21 0A 00           3081 	ld	hl,#0x000A
   1042 09                 3082 	add	hl,bc
   1043 36 01              3083 	ld	(hl),#0x01
   1045 23                 3084 	inc	hl
   1046 36 00              3085 	ld	(hl),#0x00
                           3086 ;demo.c:481: cmd.data = 0;
   1048 21 0C 00           3087 	ld	hl,#0x000C
   104B 09                 3088 	add	hl,bc
   104C EB                 3089 	ex	de,hl
   104D 3E 00              3090 	ld	a,#0x00
   104F 12                 3091 	ld	(de),a
                           3092 ;demo.c:482: cmd.argument = 0x00;
   1050 21 0D 00           3093 	ld	hl,#0x000D
   1053 09                 3094 	add	hl,bc
   1054 EB                 3095 	ex	de,hl
   1055 3E 00              3096 	ld	a,#0x00
   1057 12                 3097 	ld	(de),a
                           3098 ;demo.c:483: cmd.command = 0xd2; // logical vram to vram, xor
   1058 21 0E 00           3099 	ld	hl,#0x000E
   105B 09                 3100 	add	hl,bc
   105C EB                 3101 	ex	de,hl
   105D 3E D2              3102 	ld	a,#0xD2
   105F 12                 3103 	ld	(de),a
                           3104 ;demo.c:484: vdp_copier(&cmd);
   1060 C5                 3105 	push	bc
   1061 CDr00s00           3106 	call	_vdp_copier
   1064 F1                 3107 	pop	af
                           3108 ;demo.c:474: for (y = 0; y < 106; y+=1) {
   1065 DD 34 FF           3109 	inc	-1 (ix)
   1068 C3rBAs0F           3110 	jp	00111$
   106B                    3111 00114$:
                           3112 ;demo.c:488: xo+=128;
   106B 21r83s40           3113 	ld	hl,#_xo
   106E 7E                 3114 	ld	a,(hl)
   106F C6 80              3115 	add	a,#0x80
   1071 23                 3116 	inc	hl
   1072 2B                 3117 	dec	hl
   1073 C5                 3118 	push	bc
   1074 4F                 3119 	ld	c, a
   1075 23                 3120 	inc	hl
   1076 7E                 3121 	ld	a, (hl)
   1077 47                 3122 	ld	b, a
   1078 79                 3123 	ld	a, c
   1079 2B                 3124 	dec	hl
   107A 77                 3125 	ld	(hl), a
   107B 78                 3126 	ld	a, b
   107C C1                 3127 	pop	bc
   107D CE 00              3128 	adc	a,#0x00
   107F 23                 3129 	inc	hl
   1080 77                 3130 	ld	(hl),a
                           3131 ;demo.c:489: if (xo >= 256) {
   1081 3Ar83s40           3132 	ld	a,(#_xo+0)
   1084 D6 00              3133 	sub	a,#0x00
   1086 3Ar84s40           3134 	ld	a,(#_xo+1)
   1089 DE 01              3135 	sbc	a,#0x01
   108B FArF2s10           3136 	jp	M,00106$
                           3137 ;demo.c:490: xo = 0;
   108E 21r83s40           3138 	ld	hl,#_xo + 0
   1091 36 00              3139 	ld	(hl), #0x00
   1093 21r84s40           3140 	ld	hl,#_xo + 1
   1096 36 00              3141 	ld	(hl), #0x00
                           3142 ;demo.c:491: yo+=53;
   1098 21r85s40           3143 	ld	hl,#_yo
   109B 7E                 3144 	ld	a,(hl)
   109C C6 35              3145 	add	a,#0x35
   109E 23                 3146 	inc	hl
   109F 2B                 3147 	dec	hl
   10A0 C5                 3148 	push	bc
   10A1 4F                 3149 	ld	c, a
   10A2 23                 3150 	inc	hl
   10A3 7E                 3151 	ld	a, (hl)
   10A4 47                 3152 	ld	b, a
   10A5 79                 3153 	ld	a, c
   10A6 2B                 3154 	dec	hl
   10A7 77                 3155 	ld	(hl), a
   10A8 78                 3156 	ld	a, b
   10A9 C1                 3157 	pop	bc
   10AA CE 00              3158 	adc	a,#0x00
   10AC 23                 3159 	inc	hl
   10AD 77                 3160 	ld	(hl),a
                           3161 ;demo.c:492: if (yo >= 212) { yo = 0; po+=256; }
   10AE 3Ar85s40           3162 	ld	a,(#_yo+0)
   10B1 D6 D4              3163 	sub	a,#0xD4
   10B3 3Ar86s40           3164 	ld	a,(#_yo+1)
   10B6 DE 00              3165 	sbc	a,#0x00
   10B8 FArDBs10           3166 	jp	M,00102$
   10BB 21r85s40           3167 	ld	hl,#_yo + 0
   10BE 36 00              3168 	ld	(hl), #0x00
   10C0 21r86s40           3169 	ld	hl,#_yo + 1
   10C3 36 00              3170 	ld	(hl), #0x00
   10C5 21r87s40           3171 	ld	hl,#_po
   10C8 7E                 3172 	ld	a,(hl)
   10C9 C6 00              3173 	add	a,#0x00
   10CB 23                 3174 	inc	hl
   10CC 2B                 3175 	dec	hl
   10CD C5                 3176 	push	bc
   10CE 4F                 3177 	ld	c, a
   10CF 23                 3178 	inc	hl
   10D0 7E                 3179 	ld	a, (hl)
   10D1 47                 3180 	ld	b, a
   10D2 79                 3181 	ld	a, c
   10D3 2B                 3182 	dec	hl
   10D4 77                 3183 	ld	(hl), a
   10D5 78                 3184 	ld	a, b
   10D6 C1                 3185 	pop	bc
   10D7 CE 01              3186 	adc	a,#0x01
   10D9 23                 3187 	inc	hl
   10DA 77                 3188 	ld	(hl),a
   10DB                    3189 00102$:
                           3190 ;demo.c:493: if (po >= 768) {
   10DB 3Ar87s40           3191 	ld	a,(#_po+0)
   10DE D6 00              3192 	sub	a,#0x00
   10E0 3Ar88s40           3193 	ld	a,(#_po+1)
   10E3 DE 03              3194 	sbc	a,#0x03
   10E5 FArF2s10           3195 	jp	M,00106$
                           3196 ;demo.c:494: po = 0;
   10E8 21r87s40           3197 	ld	hl,#_po + 0
   10EB 36 00              3198 	ld	(hl), #0x00
   10ED 21r88s40           3199 	ld	hl,#_po + 1
   10F0 36 00              3200 	ld	(hl), #0x00
   10F2                    3201 00106$:
                           3202 ;demo.c:499: msx2_palette(15,3+sintab[fffaaa & 255]>>5,3,4);
   10F2 21r89s40           3203 	ld	hl,#_fffaaa + 0
   10F5 4E                 3204 	ld	c,(hl)
   10F6 06 00              3205 	ld	b,#0x00
   10F8 21r00s00           3206 	ld	hl,#_sintab
   10FB 09                 3207 	add	hl,bc
   10FC 7E                 3208 	ld	a,(hl)
   10FD 4F                 3209 	ld	c,a
   10FE 17                 3210 	rla	
   10FF 9F                 3211 	sbc	a,a
   1100 47                 3212 	ld	b,a
   1101 03                 3213 	inc	bc
   1102 03                 3214 	inc	bc
   1103 03                 3215 	inc	bc
   1104 CB 28              3216 	sra	b
   1106 CB 19              3217 	rr	c
   1108 CB 28              3218 	sra	b
   110A CB 19              3219 	rr	c
   110C CB 28              3220 	sra	b
   110E CB 19              3221 	rr	c
   1110 CB 28              3222 	sra	b
   1112 CB 19              3223 	rr	c
   1114 CB 28              3224 	sra	b
   1116 CB 19              3225 	rr	c
   1118 21 03 04           3226 	ld	hl,#0x0403
   111B E5                 3227 	push	hl
   111C 41                 3228 	ld	b,c
   111D 0E 0F              3229 	ld	c,#0x0F
   111F C5                 3230 	push	bc
   1120 CDr00s00           3231 	call	_msx2_palette
   1123 F1                 3232 	pop	af
   1124 F1                 3233 	pop	af
                           3234 ;demo.c:500: msx2_palette(3,2+sintab[fffaaa & 255]>>5,0,0);
   1125 21r89s40           3235 	ld	hl,#_fffaaa + 0
   1128 4E                 3236 	ld	c,(hl)
   1129 06 00              3237 	ld	b,#0x00
   112B 21r00s00           3238 	ld	hl,#_sintab
   112E 09                 3239 	add	hl,bc
   112F 7E                 3240 	ld	a,(hl)
   1130 4F                 3241 	ld	c,a
   1131 17                 3242 	rla	
   1132 9F                 3243 	sbc	a,a
   1133 47                 3244 	ld	b,a
   1134 03                 3245 	inc	bc
   1135 03                 3246 	inc	bc
   1136 CB 28              3247 	sra	b
   1138 CB 19              3248 	rr	c
   113A CB 28              3249 	sra	b
   113C CB 19              3250 	rr	c
   113E CB 28              3251 	sra	b
   1140 CB 19              3252 	rr	c
   1142 CB 28              3253 	sra	b
   1144 CB 19              3254 	rr	c
   1146 CB 28              3255 	sra	b
   1148 CB 19              3256 	rr	c
   114A 21 00 00           3257 	ld	hl,#0x0000
   114D E5                 3258 	push	hl
   114E 41                 3259 	ld	b,c
   114F 0E 03              3260 	ld	c,#0x03
   1151 C5                 3261 	push	bc
   1152 CDr00s00           3262 	call	_msx2_palette
   1155 F1                 3263 	pop	af
   1156 F1                 3264 	pop	af
                           3265 ;demo.c:501: fffaaa++;
   1157 FD 21r89s40        3266 	ld	iy,#_fffaaa
   115B FD 34 00           3267 	inc	0 (iy)
   115E 20 07              3268 	jr	NZ,00132$
   1160 FD 21r89s40        3269 	ld	iy,#_fffaaa
   1164 FD 34 01           3270 	inc	1 (iy)
   1167                    3271 00132$:
   1167 DD F9              3272 	ld	sp,ix
   1169 DD E1              3273 	pop	ix
   116B C9                 3274 	ret
   116C                    3275 _do_animplay_end::
                           3276 ;demo.c:510: void main() {
                           3277 ;	---------------------------------
                           3278 ; Function main
                           3279 ; ---------------------------------
   116C                    3280 _main_start::
   116C                    3281 _main:
                           3282 ;demo.c:511: unsigned char quit=0;
   116C 0E 00              3283 	ld	c,#0x00
                           3284 ;demo.c:512: int modes = 128; // interlace bit on
   116E 11 80 00           3285 	ld	de,#0x0080
                           3286 ;demo.c:516: spindown();
   1171 C5                 3287 	push	bc
   1172 D5                 3288 	push	de
   1173 CDr00s00           3289 	call	_spindown
   1176 D1                 3290 	pop	de
   1177 C1                 3291 	pop	bc
                           3292 ;demo.c:518: puts("demo init\r\n\r\n");
   1178 C5                 3293 	push	bc
   1179 D5                 3294 	push	de
   117A 21rD8s12           3295 	ld	hl,#__str_0
   117D E5                 3296 	push	hl
   117E CDr00s00           3297 	call	_puts
   1181 F1                 3298 	pop	af
   1182 D1                 3299 	pop	de
   1183 C1                 3300 	pop	bc
                           3301 ;demo.c:531: puts("music init...");
   1184 C5                 3302 	push	bc
   1185 D5                 3303 	push	de
   1186 21rE6s12           3304 	ld	hl,#__str_1
   1189 E5                 3305 	push	hl
   118A CDr00s00           3306 	call	_puts
   118D F1                 3307 	pop	af
   118E D1                 3308 	pop	de
   118F C1                 3309 	pop	bc
                           3310 ;demo.c:533: PLY_SongPtr = (char *)0x0103;
   1190 21r00s00           3311 	ld	hl,#_PLY_SongPtr + 0
   1193 36 03              3312 	ld	(hl), #0x03
   1195 21r01s00           3313 	ld	hl,#_PLY_SongPtr + 1
   1198 36 01              3314 	ld	(hl), #0x01
                           3315 ;demo.c:534: PLY_Init();
   119A C5                 3316 	push	bc
   119B D5                 3317 	push	de
   119C CDr00s00           3318 	call	_PLY_Init
   119F D1                 3319 	pop	de
   11A0 C1                 3320 	pop	bc
                           3321 ;demo.c:535: puts("done.\n\n");
   11A1 C5                 3322 	push	bc
   11A2 D5                 3323 	push	de
   11A3 21rF4s12           3324 	ld	hl,#__str_2
   11A6 E5                 3325 	push	hl
   11A7 CDr00s00           3326 	call	_puts
   11AA F1                 3327 	pop	af
   11AB D1                 3328 	pop	de
   11AC C1                 3329 	pop	bc
                           3330 ;demo.c:537: if(isvdp2())
   11AD C5                 3331 	push	bc
   11AE D5                 3332 	push	de
   11AF CDr00s00           3333 	call	_isvdp2
   11B2 45                 3334 	ld	b,l
   11B3 D1                 3335 	pop	de
   11B4 78                 3336 	ld	a,b
   11B5 C1                 3337 	pop	bc
   11B6 47                 3338 	ld	b,a
   11B7 B7                 3339 	or	a,a
   11B8 28 03              3340 	jr	Z,00102$
                           3341 ;demo.c:539: modes+=2; // pal
   11BA 11 82 00           3342 	ld	de,#0x0082
   11BD                    3343 00102$:
                           3344 ;demo.c:543: vdp_set_screen5();
   11BD C5                 3345 	push	bc
   11BE D5                 3346 	push	de
   11BF CDr00s00           3347 	call	_vdp_set_screen5
   11C2 D1                 3348 	pop	de
   11C3 C1                 3349 	pop	bc
                           3350 ;demo.c:545: vdp_register(VDP_MODE3,modes); // interlace on, screen mode pal or ntsc
   11C4 43                 3351 	ld	b,e
   11C5 C5                 3352 	push	bc
   11C6 C5                 3353 	push	bc
   11C7 33                 3354 	inc	sp
   11C8 3E 09              3355 	ld	a,#0x09
   11CA F5                 3356 	push	af
   11CB 33                 3357 	inc	sp
   11CC CDr00s00           3358 	call	_vdp_register
   11CF F1                 3359 	pop	af
   11D0 C1                 3360 	pop	bc
                           3361 ;demo.c:547: puts("demo start\r\n");
   11D1 C5                 3362 	push	bc
   11D2 21rFCs12           3363 	ld	hl,#__str_3
   11D5 E5                 3364 	push	hl
   11D6 CDr00s00           3365 	call	_puts
   11D9 F1                 3366 	pop	af
   11DA C1                 3367 	pop	bc
                           3368 ;demo.c:549: scratch_clear();
   11DB C5                 3369 	push	bc
   11DC CDr97s03           3370 	call	_scratch_clear
   11DF C1                 3371 	pop	bc
                           3372 ;demo.c:550: vdp_load_palette(scratch);
   11E0 C5                 3373 	push	bc
   11E1 21r80s3F           3374 	ld	hl,#_scratch
   11E4 E5                 3375 	push	hl
   11E5 CDr00s00           3376 	call	_vdp_load_palette
   11E8 F1                 3377 	pop	af
   11E9 C1                 3378 	pop	bc
                           3379 ;demo.c:552: vdp_register(VDP_VOFFSET,0);
   11EA C5                 3380 	push	bc
   11EB 21 17 00           3381 	ld	hl,#0x0017
   11EE E5                 3382 	push	hl
   11EF CDr00s00           3383 	call	_vdp_register
   11F2 F1                 3384 	pop	af
   11F3 C1                 3385 	pop	bc
                           3386 ;demo.c:553: pal_load("TWISTER PL5",32);
   11F4 C5                 3387 	push	bc
   11F5 3E 20              3388 	ld	a,#0x20
   11F7 F5                 3389 	push	af
   11F8 33                 3390 	inc	sp
   11F9 21r09s13           3391 	ld	hl,#__str_4
   11FC E5                 3392 	push	hl
   11FD CDrAAs03           3393 	call	_pal_load
   1200 F1                 3394 	pop	af
   1201 33                 3395 	inc	sp
   1202 C1                 3396 	pop	bc
                           3397 ;demo.c:554: vdp_load_palette(cur_palette);
   1203 C5                 3398 	push	bc
   1204 21r00s40           3399 	ld	hl,#_cur_palette
   1207 E5                 3400 	push	hl
   1208 CDr00s00           3401 	call	_vdp_load_palette
   120B F1                 3402 	pop	af
   120C C1                 3403 	pop	bc
                           3404 ;demo.c:556: memset((uint8_t *) &packbuffer, 0, 3963);
   120D C5                 3405 	push	bc
   120E 21 7B 0F           3406 	ld	hl,#0x0F7B
   1211 E5                 3407 	push	hl
   1212 3E 00              3408 	ld	a,#0x00
   1214 F5                 3409 	push	af
   1215 33                 3410 	inc	sp
   1216 21r00s01           3411 	ld	hl,#_packbuffer
   1219 E5                 3412 	push	hl
   121A CDr00s00           3413 	call	_memset
   121D F1                 3414 	pop	af
   121E F1                 3415 	pop	af
   121F 33                 3416 	inc	sp
   1220 C1                 3417 	pop	bc
                           3418 ;demo.c:557: raw_load("TWISTER PCK", 3963, packbuffer);
   1221 C5                 3419 	push	bc
   1222 21r00s01           3420 	ld	hl,#_packbuffer
   1225 E5                 3421 	push	hl
   1226 21 7B 0F           3422 	ld	hl,#0x0F7B
   1229 E5                 3423 	push	hl
   122A 21r15s13           3424 	ld	hl,#__str_5
   122D E5                 3425 	push	hl
   122E CDr5Es04           3426 	call	_raw_load
   1231 F1                 3427 	pop	af
   1232 F1                 3428 	pop	af
   1233 F1                 3429 	pop	af
   1234 C1                 3430 	pop	bc
                           3431 ;demo.c:558: bitbuster(packbuffer,0x8000,VRAM_0); // to page 1
   1235 C5                 3432 	push	bc
   1236 3E 01              3433 	ld	a,#0x01
   1238 F5                 3434 	push	af
   1239 33                 3435 	inc	sp
   123A 21 00 80           3436 	ld	hl,#0x8000
   123D E5                 3437 	push	hl
   123E 21r00s01           3438 	ld	hl,#_packbuffer
   1241 E5                 3439 	push	hl
   1242 CDr00s00           3440 	call	_bitbuster
   1245 F1                 3441 	pop	af
   1246 F1                 3442 	pop	af
   1247 33                 3443 	inc	sp
   1248 C1                 3444 	pop	bc
                           3445 ;demo.c:561: vdp_set_write_address(0, 0);
   1249 C5                 3446 	push	bc
   124A 21 00 00           3447 	ld	hl,#0x0000
   124D E5                 3448 	push	hl
   124E 3E 00              3449 	ld	a,#0x00
   1250 F5                 3450 	push	af
   1251 33                 3451 	inc	sp
   1252 CDr00s00           3452 	call	_vdp_set_write_address
   1255 F1                 3453 	pop	af
   1256 33                 3454 	inc	sp
   1257 C1                 3455 	pop	bc
                           3456 ;demo.c:562: memset((uint8_t *) &scratch, 0, 256);
   1258 C5                 3457 	push	bc
   1259 21 00 01           3458 	ld	hl,#0x0100
   125C E5                 3459 	push	hl
   125D 3E 00              3460 	ld	a,#0x00
   125F F5                 3461 	push	af
   1260 33                 3462 	inc	sp
   1261 21r80s3F           3463 	ld	hl,#_scratch
   1264 E5                 3464 	push	hl
   1265 CDr00s00           3465 	call	_memset
   1268 F1                 3466 	pop	af
   1269 F1                 3467 	pop	af
   126A 33                 3468 	inc	sp
   126B C1                 3469 	pop	bc
                           3470 ;demo.c:564: for (i = 0; i < 213; i++) {		
   126C 11 D5 00           3471 	ld	de,#0x00D5
   126F                    3472 00110$:
                           3473 ;demo.c:565: vdp_load_screen(scratch, 128);
   126F C5                 3474 	push	bc
   1270 D5                 3475 	push	de
   1271 3E 80              3476 	ld	a,#0x80
   1273 F5                 3477 	push	af
   1274 33                 3478 	inc	sp
   1275 21r80s3F           3479 	ld	hl,#_scratch
   1278 E5                 3480 	push	hl
   1279 CDr00s00           3481 	call	_vdp_load_screen
   127C F1                 3482 	pop	af
   127D 33                 3483 	inc	sp
   127E D1                 3484 	pop	de
   127F C1                 3485 	pop	bc
   1280 1B                 3486 	dec	de
                           3487 ;demo.c:564: for (i = 0; i < 213; i++) {		
   1281 7B                 3488 	ld	a,e
   1282 B2                 3489 	or	a,d
   1283 20 EA              3490 	jr	NZ,00110$
                           3491 ;demo.c:596: install_isr(my_isr);
   1285 C5                 3492 	push	bc
   1286 21r2Cs02           3493 	ld	hl,#_my_isr
   1289 E5                 3494 	push	hl
   128A CDr00s00           3495 	call	_install_isr
   128D F1                 3496 	pop	af
   128E C1                 3497 	pop	bc
                           3498 ;demo.c:618: twister();
   128F C5                 3499 	push	bc
   1290 CDrEEs09           3500 	call	_twister
   1293 C1                 3501 	pop	bc
                           3502 ;demo.c:619: font();
   1294 C5                 3503 	push	bc
   1295 CDr41s0D           3504 	call	_font
   1298 C1                 3505 	pop	bc
                           3506 ;demo.c:621: while (!quit) {
   1299                    3507 00105$:
   1299 AF                 3508 	xor	a,a
   129A B1                 3509 	or	a,c
   129B 20 18              3510 	jr	NZ,00107$
                           3511 ;demo.c:625: twister();
   129D C5                 3512 	push	bc
   129E CDrEEs09           3513 	call	_twister
   12A1 C1                 3514 	pop	bc
                           3515 ;demo.c:636: if(space())
   12A2 C5                 3516 	push	bc
   12A3 21 08 01           3517 	ld	hl,#0x0108
   12A6 E5                 3518 	push	hl
   12A7 CDr00s00           3519 	call	_ispressed
   12AA F1                 3520 	pop	af
   12AB 7D                 3521 	ld	a,l
   12AC C1                 3522 	pop	bc
   12AD 47                 3523 	ld	b,a
   12AE B7                 3524 	or	a,a
   12AF 28 E8              3525 	jr	Z,00105$
                           3526 ;demo.c:637: quit=1;
   12B1 0E 01              3527 	ld	c,#0x01
   12B3 18 E4              3528 	jr	00105$
   12B5                    3529 00107$:
                           3530 ;demo.c:640: waitVB();
   12B5 76                 3531 		halt 
                           3532 ;demo.c:641: uninstall_isr();
   12B6 CDr00s00           3533 	call	_uninstall_isr
                           3534 ;demo.c:642: PLY_Stop();
   12B9 CDr00s00           3535 	call	_PLY_Stop
                           3536 ;demo.c:643: PLY_SendRegisters();
   12BC CDr00s00           3537 	call	_PLY_SendRegisters
                           3538 ;demo.c:645: screen(0);
   12BF 3E 00              3539 	ld	a,#0x00
   12C1 F5                 3540 	push	af
   12C2 33                 3541 	inc	sp
   12C3 CDr00s00           3542 	call	_screen
   12C6 33                 3543 	inc	sp
                           3544 ;demo.c:647: puts("demo exit\r\n\r\n");
   12C7 21r21s13           3545 	ld	hl,#__str_6
   12CA E5                 3546 	push	hl
   12CB CDr00s00           3547 	call	_puts
   12CE F1                 3548 	pop	af
                           3549 ;demo.c:649: exit(0);
   12CF 3E 00              3550 	ld	a,#0x00
   12D1 F5                 3551 	push	af
   12D2 33                 3552 	inc	sp
   12D3 CDr00s00           3553 	call	_exit
   12D6 33                 3554 	inc	sp
   12D7 C9                 3555 	ret
   12D8                    3556 _main_end::
   12D8                    3557 __str_0:
   12D8 64 65 6D 6F 20 69  3558 	.ascii "demo init"
        6E 69 74
   12E1 0D                 3559 	.db 0x0D
   12E2 0A                 3560 	.db 0x0A
   12E3 0D                 3561 	.db 0x0D
   12E4 0A                 3562 	.db 0x0A
   12E5 00                 3563 	.db 0x00
   12E6                    3564 __str_1:
   12E6 6D 75 73 69 63 20  3565 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   12F3 00                 3566 	.db 0x00
   12F4                    3567 __str_2:
   12F4 64 6F 6E 65 2E     3568 	.ascii "done."
   12F9 0A                 3569 	.db 0x0A
   12FA 0A                 3570 	.db 0x0A
   12FB 00                 3571 	.db 0x00
   12FC                    3572 __str_3:
   12FC 64 65 6D 6F 20 73  3573 	.ascii "demo start"
        74 61 72 74
   1306 0D                 3574 	.db 0x0D
   1307 0A                 3575 	.db 0x0A
   1308 00                 3576 	.db 0x00
   1309                    3577 __str_4:
   1309 54 57 49 53 54 45  3578 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   1314 00                 3579 	.db 0x00
   1315                    3580 __str_5:
   1315 54 57 49 53 54 45  3581 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   1320 00                 3582 	.db 0x00
   1321                    3583 __str_6:
   1321 64 65 6D 6F 20 65  3584 	.ascii "demo exit"
        78 69 74
   132A 0D                 3585 	.db 0x0D
   132B 0A                 3586 	.db 0x0A
   132C 0D                 3587 	.db 0x0D
   132D 0A                 3588 	.db 0x0A
   132E 00                 3589 	.db 0x00
                           3590 	.area _CODE
                           3591 	.area _CABS
