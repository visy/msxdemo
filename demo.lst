                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Mon Mar 26 19:59:47 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _credits
                             15 	.globl _waiter
                             16 	.globl _bigtext
                             17 	.globl _points
                             18 	.globl _logoeffu
                             19 	.globl _abs
                             20 	.globl _tritiles
                             21 	.globl _drawtilescreen_full
                             22 	.globl _drawtilescreen
                             23 	.globl _drawtritile
                             24 	.globl _thewave
                             25 	.globl _boxes
                             26 	.globl _drawbox
                             27 	.globl _animplay
                             28 	.globl _bulbs
                             29 	.globl _twister
                             30 	.globl _font
                             31 	.globl _drawsine
                             32 	.globl _drawstr2x
                             33 	.globl _drawstrslow
                             34 	.globl _drawstr
                             35 	.globl _do_letter_tall
                             36 	.globl _do_letter
                             37 	.globl _do_2xletter
                             38 	.globl _raster_effu
                             39 	.globl _do_blocks
                             40 	.globl _do_ymmm
                             41 	.globl _fadein
                             42 	.globl _pck_load
                             43 	.globl _raw_load
                             44 	.globl _pause
                             45 	.globl _pal_load
                             46 	.globl _scratch_clear
                             47 	.globl _my_isr
                             48 	.globl _isNthBitSet
                             49 	.globl _timeindex
                             50 	.globl _sceneindex
                             51 	.globl _musicstopped
                             52 	.globl _credittimer
                             53 	.globl _initcredits
                             54 	.globl _bigtextp
                             55 	.globl _greetindex
                             56 	.globl _pointframe
                             57 	.globl _initpoints
                             58 	.globl _onceclear
                             59 	.globl _powa
                             60 	.globl _powatick
                             61 	.globl _triframes
                             62 	.globl _tripaltick2
                             63 	.globl _tripaltick
                             64 	.globl _tripal
                             65 	.globl _tiletick
                             66 	.globl _tiley
                             67 	.globl _tilex
                             68 	.globl _tilei
                             69 	.globl _tri_inited
                             70 	.globl _ffa
                             71 	.globl _buf
                             72 	.globl _initwave
                             73 	.globl _boxticks
                             74 	.globl _prevbox_of
                             75 	.globl _boxes_of
                             76 	.globl _pbt
                             77 	.globl _pbx
                             78 	.globl _bonc
                             79 	.globl _bo
                             80 	.globl _bt
                             81 	.globl _by
                             82 	.globl _bx
                             83 	.globl _boxi
                             84 	.globl _boxes_y
                             85 	.globl _boxes_x
                             86 	.globl _prevy
                             87 	.globl _prevx
                             88 	.globl _buffer
                             89 	.globl _boxes_init
                             90 	.globl _anim_init
                             91 	.globl _sy
                             92 	.globl _enderdir
                             93 	.globl _ender
                             94 	.globl _ff2
                             95 	.globl _ff1
                             96 	.globl _bulbflipper
                             97 	.globl _twialku
                             98 	.globl _twinited
                             99 	.globl _ff
                            100 	.globl _slowend
                            101 	.globl _ltrpointer
                            102 	.globl _ly
                            103 	.globl _lx
                            104 	.globl _linenum
                            105 	.globl _flof
                            106 	.globl _btab
                            107 	.globl _bty
                            108 	.globl _btx
                            109 	.globl _bsy
                            110 	.globl _bsx
                            111 	.globl _block_init
                            112 	.globl _cc
                            113 	.globl _yofff
                            114 	.globl _scenetimings
                            115 	.globl _scenepointers
                            116 	.globl _cmd
                            117 	.globl _tick
                            118 	.globl _vbicount
                            119 	.globl _credits_palette
                            120 	.globl _boxes_palette
                            121 	.globl _tf_palette
                            122 	.globl _twister_palette
                            123 	.globl _block_palette
                            124 	.globl _bulbs_palette
                            125 	.globl _cur_palette
                            126 	.globl _scratch
                            127 	.globl _crebuffer3
                            128 	.globl _crebuffer2
                            129 	.globl _crebuffer1
                            130 	.globl _packbuffer
                            131 	.globl _tri_lookup_y
                            132 	.globl _eighttimes
                            133 	.globl _twelvetimes
                            134 	.globl _tri_lookup_x
                            135 	.globl _sintab
                            136 	.globl _font_w
                            137 	.globl _font_y
                            138 	.globl _font_x
                            139 	.globl _tri_inva4
                            140 	.globl _tri_inva3
                            141 	.globl _tri_inva2
                            142 	.globl _tri_inva1
                            143 	.globl _tri_side2
                            144 	.globl _tri_side1
                            145 	.globl _tri_dia
                            146 	.globl _tri_up
                            147 	.globl _tri_center
                            148 	.globl _sintabx
                            149 ;--------------------------------------------------------
                            150 ; special function registers
                            151 ;--------------------------------------------------------
                            152 ;--------------------------------------------------------
                            153 ;  ram data
                            154 ;--------------------------------------------------------
                            155 	.area _DATA
   0000                     156 _sintab::
   0000                     157 	.ds 256
   0100                     158 _tri_lookup_x::
   0100                     159 	.ds 32
   0120                     160 _twelvetimes::
   0120                     161 	.ds 52
   0154                     162 _eighttimes::
   0154                     163 	.ds 52
   0188                     164 _tri_lookup_y::
   0188                     165 	.ds 64
   01C8                     166 _packbuffer::
   01C8                     167 	.ds 4100
   11CC                     168 _crebuffer1::
   11CC                     169 	.ds 3323
   1EC7                     170 _crebuffer2::
   1EC7                     171 	.ds 4724
   313B                     172 _crebuffer3::
   313B                     173 	.ds 3723
   3FC6                     174 _scratch::
   3FC6                     175 	.ds 128
   4046                     176 _cur_palette::
   4046                     177 	.ds 32
   4066                     178 _bulbs_palette::
   4066                     179 	.ds 32
   4086                     180 _block_palette::
   4086                     181 	.ds 32
   40A6                     182 _twister_palette::
   40A6                     183 	.ds 32
   40C6                     184 _tf_palette::
   40C6                     185 	.ds 32
   40E6                     186 _boxes_palette::
   40E6                     187 	.ds 32
   4106                     188 _credits_palette::
   4106                     189 	.ds 32
   4126                     190 _vbicount::
   4126                     191 	.ds 2
   4128                     192 _tick::
   4128                     193 	.ds 2
   412A                     194 _cmd::
   412A                     195 	.ds 15
   4139                     196 _scenepointers::
   4139                     197 	.ds 24
   4151                     198 _scenetimings::
   4151                     199 	.ds 48
   4181                     200 _isNthBitSet_mask_1_1:
   4181                     201 	.ds 8
   4189                     202 _yofff::
   4189                     203 	.ds 1
   418A                     204 _cc::
   418A                     205 	.ds 1
   418B                     206 _flipper:
   418B                     207 	.ds 2
   418D                     208 _ymmmf:
   418D                     209 	.ds 2
   418F                     210 _block_init::
   418F                     211 	.ds 1
   4190                     212 _bsx::
   4190                     213 	.ds 2
   4192                     214 _bsy::
   4192                     215 	.ds 2
   4194                     216 _btx::
   4194                     217 	.ds 2
   4196                     218 _bty::
   4196                     219 	.ds 2
   4198                     220 _btab::
   4198                     221 	.ds 32
   41B8                     222 _flof::
   41B8                     223 	.ds 2
   41BA                     224 _linenum::
   41BA                     225 	.ds 2
   41BC                     226 _lx::
   41BC                     227 	.ds 1
   41BD                     228 _ly::
   41BD                     229 	.ds 1
   41BE                     230 _ltrpointer::
   41BE                     231 	.ds 2
   41C0                     232 _slowend::
   41C0                     233 	.ds 2
   41C2                     234 _ff::
   41C2                     235 	.ds 2
   41C4                     236 _twinited::
   41C4                     237 	.ds 2
   41C6                     238 _twialku::
   41C6                     239 	.ds 2
   41C8                     240 _bulbflipper::
   41C8                     241 	.ds 2
   41CA                     242 _ff1::
   41CA                     243 	.ds 2
   41CC                     244 _ff2::
   41CC                     245 	.ds 2
   41CE                     246 _ender::
   41CE                     247 	.ds 2
   41D0                     248 _enderdir::
   41D0                     249 	.ds 2
   41D2                     250 _sy::
   41D2                     251 	.ds 2
   41D4                     252 _xo:
   41D4                     253 	.ds 2
   41D6                     254 _yo:
   41D6                     255 	.ds 2
   41D8                     256 _po:
   41D8                     257 	.ds 2
   41DA                     258 _frames:
   41DA                     259 	.ds 2
   41DC                     260 _anim_init::
   41DC                     261 	.ds 2
   41DE                     262 _boxes_init::
   41DE                     263 	.ds 1
   41DF                     264 _buffer::
   41DF                     265 	.ds 2
   41E1                     266 _prevx::
   41E1                     267 	.ds 2
   41E3                     268 _prevy::
   41E3                     269 	.ds 2
   41E5                     270 _boxes_x::
   41E5                     271 	.ds 5
   41EA                     272 _boxes_y::
   41EA                     273 	.ds 10
   41F4                     274 _boxi::
   41F4                     275 	.ds 1
   41F5                     276 _bx::
   41F5                     277 	.ds 2
   41F7                     278 _by::
   41F7                     279 	.ds 2
   41F9                     280 _bt::
   41F9                     281 	.ds 2
   41FB                     282 _bo::
   41FB                     283 	.ds 2
   41FD                     284 _bonc::
   41FD                     285 	.ds 2
   41FF                     286 _pbx::
   41FF                     287 	.ds 2
   4201                     288 _pbt::
   4201                     289 	.ds 2
   4203                     290 _boxes_of::
   4203                     291 	.ds 10
   420D                     292 _prevbox_of::
   420D                     293 	.ds 1
   420E                     294 _boxticks::
   420E                     295 	.ds 2
   4210                     296 _initwave::
   4210                     297 	.ds 1
   4211                     298 _buf::
   4211                     299 	.ds 2
   4213                     300 _ffa::
   4213                     301 	.ds 2
   4215                     302 _tri_inited::
   4215                     303 	.ds 1
   4216                     304 _tilei::
   4216                     305 	.ds 2
   4218                     306 _tilex::
   4218                     307 	.ds 2
   421A                     308 _tiley::
   421A                     309 	.ds 2
   421C                     310 _tiletick::
   421C                     311 	.ds 1
   421D                     312 _tripal::
   421D                     313 	.ds 9
   4226                     314 _tripaltick::
   4226                     315 	.ds 1
   4227                     316 _tripaltick2::
   4227                     317 	.ds 1
   4228                     318 _triframes::
   4228                     319 	.ds 2
   422A                     320 _powatick::
   422A                     321 	.ds 2
   422C                     322 _powa::
   422C                     323 	.ds 2
   422E                     324 _onceclear::
   422E                     325 	.ds 1
   422F                     326 _initpoints::
   422F                     327 	.ds 1
   4230                     328 _pointframe::
   4230                     329 	.ds 2
   4232                     330 _greetindex::
   4232                     331 	.ds 2
   4234                     332 _bigtextp::
   4234                     333 	.ds 2
   4236                     334 _initcredits::
   4236                     335 	.ds 2
   4238                     336 _credittimer::
   4238                     337 	.ds 2
   423A                     338 _musicstopped::
   423A                     339 	.ds 2
   423C                     340 _sceneindex::
   423C                     341 	.ds 2
   423E                     342 _timeindex::
   423E                     343 	.ds 2
                            344 ;--------------------------------------------------------
                            345 ; overlayable items in  ram 
                            346 ;--------------------------------------------------------
                            347 	.area _OVERLAY
                            348 ;--------------------------------------------------------
                            349 ; external initialized ram data
                            350 ;--------------------------------------------------------
                            351 ;--------------------------------------------------------
                            352 ; global & static initialisations
                            353 ;--------------------------------------------------------
                            354 	.area _HOME
                            355 	.area _GSINIT
                            356 	.area _GSFINAL
                            357 	.area _GSINIT
                            358 ;demo.c:235: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r81s41            359 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            360 	call	__initrleblock
   0006 08                  361 	.db	8
   0007 01 02 04 08 10 20   362 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  363 	.db	0
                            364 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            365 	ld	hl,#_sintab
   0013 CDr00s00            366 	call	__initrleblock
   0016 3B                  367 	.db	59
   0017 00 03 06 09 0C 0F   368 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   369 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   370 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   371 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   372 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   373 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   374 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            375 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               376 	.db	#-5,#0x7E
   0054 01                  377 	.db	1
   0055 7F                  378 	.db	0x7F
   0056 FB 7E               379 	.db	#-5,#0x7E
   0058 75                  380 	.db	117
   0059 7D 7D 7C 7B 7B 7A   381 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   382 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   383 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   384 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   385 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   386 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   387 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   388 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   389 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   390 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   391 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   392 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   393 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   394 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      395 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               396 	.db	#-5,#0x82
   00D0 01                  397 	.db	1
   00D1 81                  398 	.db	0x81
   00D2 FB 82               399 	.db	#-5,#0x82
   00D4 3A                  400 	.db	58
   00D5 83 83 84 85 85 86   401 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   402 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   403 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   404 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   405 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   406 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   407 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               408 	.db	0xFA, 0xFD
   010F 00                  409 	.db	0
                            410 ;demo.c:176: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            411 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            412 	call	__initrleblock
   0116 E0 00               413 	.db	#-32,#0x00
   0118 00                  414 	.db	0
                            415 ;demo.c:177: int twelvetimes[26] = { 0 };
   0119 21r20s01            416 	ld	hl,#_twelvetimes
   011C CDr00s00            417 	call	__initrleblock
   011F CC 00               418 	.db	#-52,#0x00
   0121 00                  419 	.db	0
                            420 ;demo.c:178: int eighttimes[26] = { 0 };
   0122 21r54s01            421 	ld	hl,#_eighttimes
   0125 CDr00s00            422 	call	__initrleblock
   0128 CC 00               423 	.db	#-52,#0x00
   012A 00                  424 	.db	0
                            425 ;demo.c:180: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            426 	ld	hl,#_tri_lookup_y
   012E CDr00s00            427 	call	__initrleblock
   0131 C0 00               428 	.db	#-64,#0x00
   0133 00                  429 	.db	0
                            430 ;demo.c:182: uint8_t packbuffer[4100] = {0};
   0134 21rC8s01            431 	ld	hl,#_packbuffer
   0137 CDr00s00            432 	call	__initrleblock
   013A 81 00               433 	.db	#-127,#0x00
   013C 81 00               434 	.db	#-127,#0x00
   013E 81 00               435 	.db	#-127,#0x00
   0140 81 00               436 	.db	#-127,#0x00
   0142 81 00               437 	.db	#-127,#0x00
   0144 81 00               438 	.db	#-127,#0x00
   0146 81 00               439 	.db	#-127,#0x00
   0148 81 00               440 	.db	#-127,#0x00
   014A 81 00               441 	.db	#-127,#0x00
   014C 81 00               442 	.db	#-127,#0x00
   014E 81 00               443 	.db	#-127,#0x00
   0150 81 00               444 	.db	#-127,#0x00
   0152 81 00               445 	.db	#-127,#0x00
   0154 81 00               446 	.db	#-127,#0x00
   0156 81 00               447 	.db	#-127,#0x00
   0158 81 00               448 	.db	#-127,#0x00
   015A 81 00               449 	.db	#-127,#0x00
   015C 81 00               450 	.db	#-127,#0x00
   015E 81 00               451 	.db	#-127,#0x00
   0160 81 00               452 	.db	#-127,#0x00
   0162 81 00               453 	.db	#-127,#0x00
   0164 81 00               454 	.db	#-127,#0x00
   0166 81 00               455 	.db	#-127,#0x00
   0168 81 00               456 	.db	#-127,#0x00
   016A 81 00               457 	.db	#-127,#0x00
   016C 81 00               458 	.db	#-127,#0x00
   016E 81 00               459 	.db	#-127,#0x00
   0170 81 00               460 	.db	#-127,#0x00
   0172 81 00               461 	.db	#-127,#0x00
   0174 81 00               462 	.db	#-127,#0x00
   0176 81 00               463 	.db	#-127,#0x00
   0178 81 00               464 	.db	#-127,#0x00
   017A DC 00               465 	.db	#-36,#0x00
   017C 00                  466 	.db	0
                            467 ;demo.c:184: uint8_t crebuffer1[3323] = {0};
   017D 21rCCs11            468 	ld	hl,#_crebuffer1
   0180 CDr00s00            469 	call	__initrleblock
   0183 81 00               470 	.db	#-127,#0x00
   0185 81 00               471 	.db	#-127,#0x00
   0187 81 00               472 	.db	#-127,#0x00
   0189 81 00               473 	.db	#-127,#0x00
   018B 81 00               474 	.db	#-127,#0x00
   018D 81 00               475 	.db	#-127,#0x00
   018F 81 00               476 	.db	#-127,#0x00
   0191 81 00               477 	.db	#-127,#0x00
   0193 81 00               478 	.db	#-127,#0x00
   0195 81 00               479 	.db	#-127,#0x00
   0197 81 00               480 	.db	#-127,#0x00
   0199 81 00               481 	.db	#-127,#0x00
   019B 81 00               482 	.db	#-127,#0x00
   019D 81 00               483 	.db	#-127,#0x00
   019F 81 00               484 	.db	#-127,#0x00
   01A1 81 00               485 	.db	#-127,#0x00
   01A3 81 00               486 	.db	#-127,#0x00
   01A5 81 00               487 	.db	#-127,#0x00
   01A7 81 00               488 	.db	#-127,#0x00
   01A9 81 00               489 	.db	#-127,#0x00
   01AB 81 00               490 	.db	#-127,#0x00
   01AD 81 00               491 	.db	#-127,#0x00
   01AF 81 00               492 	.db	#-127,#0x00
   01B1 81 00               493 	.db	#-127,#0x00
   01B3 81 00               494 	.db	#-127,#0x00
   01B5 81 00               495 	.db	#-127,#0x00
   01B7 EB 00               496 	.db	#-21,#0x00
   01B9 00                  497 	.db	0
                            498 ;demo.c:185: uint8_t crebuffer2[4724] = {0};
   01BA 21rC7s1E            499 	ld	hl,#_crebuffer2
   01BD CDr00s00            500 	call	__initrleblock
   01C0 81 00               501 	.db	#-127,#0x00
   01C2 81 00               502 	.db	#-127,#0x00
   01C4 81 00               503 	.db	#-127,#0x00
   01C6 81 00               504 	.db	#-127,#0x00
   01C8 81 00               505 	.db	#-127,#0x00
   01CA 81 00               506 	.db	#-127,#0x00
   01CC 81 00               507 	.db	#-127,#0x00
   01CE 81 00               508 	.db	#-127,#0x00
   01D0 81 00               509 	.db	#-127,#0x00
   01D2 81 00               510 	.db	#-127,#0x00
   01D4 81 00               511 	.db	#-127,#0x00
   01D6 81 00               512 	.db	#-127,#0x00
   01D8 81 00               513 	.db	#-127,#0x00
   01DA 81 00               514 	.db	#-127,#0x00
   01DC 81 00               515 	.db	#-127,#0x00
   01DE 81 00               516 	.db	#-127,#0x00
   01E0 81 00               517 	.db	#-127,#0x00
   01E2 81 00               518 	.db	#-127,#0x00
   01E4 81 00               519 	.db	#-127,#0x00
   01E6 81 00               520 	.db	#-127,#0x00
   01E8 81 00               521 	.db	#-127,#0x00
   01EA 81 00               522 	.db	#-127,#0x00
   01EC 81 00               523 	.db	#-127,#0x00
   01EE 81 00               524 	.db	#-127,#0x00
   01F0 81 00               525 	.db	#-127,#0x00
   01F2 81 00               526 	.db	#-127,#0x00
   01F4 81 00               527 	.db	#-127,#0x00
   01F6 81 00               528 	.db	#-127,#0x00
   01F8 81 00               529 	.db	#-127,#0x00
   01FA 81 00               530 	.db	#-127,#0x00
   01FC 81 00               531 	.db	#-127,#0x00
   01FE 81 00               532 	.db	#-127,#0x00
   0200 81 00               533 	.db	#-127,#0x00
   0202 81 00               534 	.db	#-127,#0x00
   0204 81 00               535 	.db	#-127,#0x00
   0206 81 00               536 	.db	#-127,#0x00
   0208 81 00               537 	.db	#-127,#0x00
   020A E7 00               538 	.db	#-25,#0x00
   020C 00                  539 	.db	0
                            540 ;demo.c:186: uint8_t crebuffer3[3723] = {0};
   020D 21r3Bs31            541 	ld	hl,#_crebuffer3
   0210 CDr00s00            542 	call	__initrleblock
   0213 81 00               543 	.db	#-127,#0x00
   0215 81 00               544 	.db	#-127,#0x00
   0217 81 00               545 	.db	#-127,#0x00
   0219 81 00               546 	.db	#-127,#0x00
   021B 81 00               547 	.db	#-127,#0x00
   021D 81 00               548 	.db	#-127,#0x00
   021F 81 00               549 	.db	#-127,#0x00
   0221 81 00               550 	.db	#-127,#0x00
   0223 81 00               551 	.db	#-127,#0x00
   0225 81 00               552 	.db	#-127,#0x00
   0227 81 00               553 	.db	#-127,#0x00
   0229 81 00               554 	.db	#-127,#0x00
   022B 81 00               555 	.db	#-127,#0x00
   022D 81 00               556 	.db	#-127,#0x00
   022F 81 00               557 	.db	#-127,#0x00
   0231 81 00               558 	.db	#-127,#0x00
   0233 81 00               559 	.db	#-127,#0x00
   0235 81 00               560 	.db	#-127,#0x00
   0237 81 00               561 	.db	#-127,#0x00
   0239 81 00               562 	.db	#-127,#0x00
   023B 81 00               563 	.db	#-127,#0x00
   023D 81 00               564 	.db	#-127,#0x00
   023F 81 00               565 	.db	#-127,#0x00
   0241 81 00               566 	.db	#-127,#0x00
   0243 81 00               567 	.db	#-127,#0x00
   0245 81 00               568 	.db	#-127,#0x00
   0247 81 00               569 	.db	#-127,#0x00
   0249 81 00               570 	.db	#-127,#0x00
   024B 81 00               571 	.db	#-127,#0x00
   024D D8 00               572 	.db	#-40,#0x00
   024F 00                  573 	.db	0
                            574 ;demo.c:198: volatile int vbicount=0;
   0250 FD 21r26s41         575 	ld	iy,#_vbicount
   0254 FD 36 00 00         576 	ld	0 (iy),#0x00
   0258 FD 21r26s41         577 	ld	iy,#_vbicount
   025C FD 36 01 00         578 	ld	1 (iy),#0x00
                            579 ;demo.c:199: volatile int tick=0;
   0260 FD 21r28s41         580 	ld	iy,#_tick
   0264 FD 36 00 00         581 	ld	0 (iy),#0x00
   0268 FD 21r28s41         582 	ld	iy,#_tick
   026C FD 36 01 00         583 	ld	1 (iy),#0x00
                            584 ;demo.c:204: void (*scenepointers[12])() = {
   0270 21r39s41            585 	ld	hl,#_scenepointers
   0273 36r89               586 	ld	(hl),#<_waiter
   0275 23                  587 	inc	hl
   0276 36s39               588 	ld	(hl),#>_waiter
   0278 21r3Bs41            589 	ld	hl, #_scenepointers + 2
   027B 36r44               590 	ld	(hl),#<_logoeffu
   027D 23                  591 	inc	hl
   027E 36s2C               592 	ld	(hl),#>_logoeffu
   0280 01r3Ds41            593 	ld	bc,#_scenepointers + 4
   0283 69                  594 	ld	l,c
   0284 60                  595 	ld	h,b
   0285 36rA4               596 	ld	(hl),#<_bulbs
   0287 23                  597 	inc	hl
   0288 36s15               598 	ld	(hl),#>_bulbs
   028A 21r3Fs41            599 	ld	hl, #_scenepointers + 6
   028D 36r21               600 	ld	(hl),#<_twister
   028F 23                  601 	inc	hl
   0290 36s13               602 	ld	(hl),#>_twister
   0292 01r41s41            603 	ld	bc,#_scenepointers + 8
   0295 69                  604 	ld	l,c
   0296 60                  605 	ld	h,b
   0297 36r92               606 	ld	(hl),#<_boxes
   0299 23                  607 	inc	hl
   029A 36s18               608 	ld	(hl),#>_boxes
   029C 21r43s41            609 	ld	hl, #_scenepointers + 10
   029F 36r86               610 	ld	(hl),#<_thewave
   02A1 23                  611 	inc	hl
   02A2 36s1D               612 	ld	(hl),#>_thewave
   02A4 21r45s41            613 	ld	hl, #_scenepointers + 12
   02A7 36rA7               614 	ld	(hl),#<_tritiles
   02A9 23                  615 	inc	hl
   02AA 36s25               616 	ld	(hl),#>_tritiles
   02AC 21r47s41            617 	ld	hl, #_scenepointers + 14
   02AF 36rF3               618 	ld	(hl),#<_points
   02B1 23                  619 	inc	hl
   02B2 36s2D               620 	ld	(hl),#>_points
   02B4 01r49s41            621 	ld	bc,#_scenepointers + 16
   02B7 69                  622 	ld	l,c
   02B8 60                  623 	ld	h,b
   02B9 36rD3               624 	ld	(hl),#<_bigtext
   02BB 23                  625 	inc	hl
   02BC 36s31               626 	ld	(hl),#>_bigtext
   02BE 01r4Bs41            627 	ld	bc,#_scenepointers + 18
   02C1 69                  628 	ld	l,c
   02C2 60                  629 	ld	h,b
   02C3 36r8A               630 	ld	(hl),#<_credits
   02C5 23                  631 	inc	hl
   02C6 36s39               632 	ld	(hl),#>_credits
   02C8 01r4Ds41            633 	ld	bc,#_scenepointers + 20
   02CB 69                  634 	ld	l,c
   02CC 60                  635 	ld	h,b
   02CD 36r22               636 	ld	(hl),#<_do_quit
   02CF 23                  637 	inc	hl
   02D0 36s3B               638 	ld	(hl),#>_do_quit
                            639 ;demo.c:218: int scenetimings[24] = {
   02D2 21r51s41            640 	ld	hl,#_scenetimings
   02D5 CDr00s00            641 	call	__initrleblock
   02D8 30                  642 	.db	48
   02D9 00 00 AA 00 AA 00   643 	.db	0x00, 0x00, 0xAA, 0x00, 0xAA, 0x00, 0x5E, 0x01
        5E 01
   02E1 EE 02 14 05 14 05   644 	.db	0xEE, 0x02, 0x14, 0x05, 0x14, 0x05, 0xFC, 0x08
        FC 08
   02E9 FC 08 10 0E 10 0E   645 	.db	0xFC, 0x08, 0x10, 0x0E, 0x10, 0x0E, 0x04, 0x10
        04 10
   02F1 04 10 AE 15 AE 15   646 	.db	0x04, 0x10, 0xAE, 0x15, 0xAE, 0x15, 0xD4, 0x17
        D4 17
   02F9 D4 17 D5 20 D5 20   647 	.db	0xD4, 0x17, 0xD5, 0x20, 0xD5, 0x20, 0x74, 0x27
        74 27
   0301 74 27 A0 86 00 00   648 	.db	0x74, 0x27, 0xA0, 0x86, 0x00, 0x00, 0x00, 0x00
        00 00
   0309 00                  649 	.db	0
                            650 ;demo.c:378: uint8_t yofff = 0;
   030A FD 21r89s41         651 	ld	iy,#_yofff
   030E FD 36 00 00         652 	ld	0 (iy),#0x00
                            653 ;demo.c:379: uint8_t cc = 0;
   0312 FD 21r8As41         654 	ld	iy,#_cc
   0316 FD 36 00 00         655 	ld	0 (iy),#0x00
                            656 ;demo.c:380: static int flipper = 0;
   031A FD 21r8Bs41         657 	ld	iy,#_flipper
   031E FD 36 00 00         658 	ld	0 (iy),#0x00
   0322 FD 21r8Bs41         659 	ld	iy,#_flipper
   0326 FD 36 01 00         660 	ld	1 (iy),#0x00
                            661 ;demo.c:381: static int ymmmf = 0;
   032A FD 21r8Ds41         662 	ld	iy,#_ymmmf
   032E FD 36 00 00         663 	ld	0 (iy),#0x00
   0332 FD 21r8Ds41         664 	ld	iy,#_ymmmf
   0336 FD 36 01 00         665 	ld	1 (iy),#0x00
                            666 ;demo.c:386: char block_init = 0;
   033A FD 21r8Fs41         667 	ld	iy,#_block_init
   033E FD 36 00 00         668 	ld	0 (iy),#0x00
                            669 ;demo.c:388: int bsx = 0;
   0342 FD 21r90s41         670 	ld	iy,#_bsx
   0346 FD 36 00 00         671 	ld	0 (iy),#0x00
   034A FD 21r90s41         672 	ld	iy,#_bsx
   034E FD 36 01 00         673 	ld	1 (iy),#0x00
                            674 ;demo.c:389: int bsy = 0;
   0352 FD 21r92s41         675 	ld	iy,#_bsy
   0356 FD 36 00 00         676 	ld	0 (iy),#0x00
   035A FD 21r92s41         677 	ld	iy,#_bsy
   035E FD 36 01 00         678 	ld	1 (iy),#0x00
                            679 ;demo.c:390: int btx = 0;
   0362 FD 21r94s41         680 	ld	iy,#_btx
   0366 FD 36 00 00         681 	ld	0 (iy),#0x00
   036A FD 21r94s41         682 	ld	iy,#_btx
   036E FD 36 01 00         683 	ld	1 (iy),#0x00
                            684 ;demo.c:391: int bty = 0;
   0372 FD 21r96s41         685 	ld	iy,#_bty
   0376 FD 36 00 00         686 	ld	0 (iy),#0x00
   037A FD 21r96s41         687 	ld	iy,#_bty
   037E FD 36 01 00         688 	ld	1 (iy),#0x00
                            689 ;demo.c:393: int btab[16] = {0};
   0382 21r98s41            690 	ld	hl,#_btab
   0385 CDr00s00            691 	call	__initrleblock
   0388 E0 00               692 	.db	#-32,#0x00
   038A 00                  693 	.db	0
                            694 ;demo.c:395: int flof = 0;
   038B FD 21rB8s41         695 	ld	iy,#_flof
   038F FD 36 00 00         696 	ld	0 (iy),#0x00
   0393 FD 21rB8s41         697 	ld	iy,#_flof
   0397 FD 36 01 00         698 	ld	1 (iy),#0x00
                            699 ;demo.c:400: int linenum = 0;
   039B FD 21rBAs41         700 	ld	iy,#_linenum
   039F FD 36 00 00         701 	ld	0 (iy),#0x00
   03A3 FD 21rBAs41         702 	ld	iy,#_linenum
   03A7 FD 36 01 00         703 	ld	1 (iy),#0x00
                            704 ;demo.c:430: uint8_t lx = 0;
   03AB FD 21rBCs41         705 	ld	iy,#_lx
   03AF FD 36 00 00         706 	ld	0 (iy),#0x00
                            707 ;demo.c:431: uint8_t ly = 0;
   03B3 FD 21rBDs41         708 	ld	iy,#_ly
   03B7 FD 36 00 00         709 	ld	0 (iy),#0x00
                            710 ;demo.c:516: int ltrpointer = 0;
   03BB FD 21rBEs41         711 	ld	iy,#_ltrpointer
   03BF FD 36 00 00         712 	ld	0 (iy),#0x00
   03C3 FD 21rBEs41         713 	ld	iy,#_ltrpointer
   03C7 FD 36 01 00         714 	ld	1 (iy),#0x00
                            715 ;demo.c:517: int slowend = 128;
   03CB FD 21rC0s41         716 	ld	iy,#_slowend
   03CF FD 36 00 80         717 	ld	0 (iy),#0x80
   03D3 FD 21rC0s41         718 	ld	iy,#_slowend
   03D7 FD 36 01 00         719 	ld	1 (iy),#0x00
                            720 ;demo.c:576: int ff = 0;
   03DB FD 21rC2s41         721 	ld	iy,#_ff
   03DF FD 36 00 00         722 	ld	0 (iy),#0x00
   03E3 FD 21rC2s41         723 	ld	iy,#_ff
   03E7 FD 36 01 00         724 	ld	1 (iy),#0x00
                            725 ;demo.c:577: int twinited = 0;
   03EB FD 21rC4s41         726 	ld	iy,#_twinited
   03EF FD 36 00 00         727 	ld	0 (iy),#0x00
   03F3 FD 21rC4s41         728 	ld	iy,#_twinited
   03F7 FD 36 01 00         729 	ld	1 (iy),#0x00
                            730 ;demo.c:578: int twialku = 2;
   03FB FD 21rC6s41         731 	ld	iy,#_twialku
   03FF FD 36 00 02         732 	ld	0 (iy),#0x02
   0403 FD 21rC6s41         733 	ld	iy,#_twialku
   0407 FD 36 01 00         734 	ld	1 (iy),#0x00
                            735 ;demo.c:652: int bulbflipper = 1;
   040B FD 21rC8s41         736 	ld	iy,#_bulbflipper
   040F FD 36 00 01         737 	ld	0 (iy),#0x01
   0413 FD 21rC8s41         738 	ld	iy,#_bulbflipper
   0417 FD 36 01 00         739 	ld	1 (iy),#0x00
                            740 ;demo.c:654: int ff1,ff2 = 0;
   041B FD 21rCCs41         741 	ld	iy,#_ff2
   041F FD 36 00 00         742 	ld	0 (iy),#0x00
   0423 FD 21rCCs41         743 	ld	iy,#_ff2
   0427 FD 36 01 00         744 	ld	1 (iy),#0x00
                            745 ;demo.c:655: int ender = 212;
   042B FD 21rCEs41         746 	ld	iy,#_ender
   042F FD 36 00 D4         747 	ld	0 (iy),#0xD4
   0433 FD 21rCEs41         748 	ld	iy,#_ender
   0437 FD 36 01 00         749 	ld	1 (iy),#0x00
                            750 ;demo.c:656: int enderdir = -1;
   043B FD 21rD0s41         751 	ld	iy,#_enderdir
   043F FD 36 00 FF         752 	ld	0 (iy),#0xFF
   0443 FD 21rD0s41         753 	ld	iy,#_enderdir
   0447 FD 36 01 FF         754 	ld	1 (iy),#0xFF
                            755 ;demo.c:657: int sy = 16;
   044B FD 21rD2s41         756 	ld	iy,#_sy
   044F FD 36 00 10         757 	ld	0 (iy),#0x10
   0453 FD 21rD2s41         758 	ld	iy,#_sy
   0457 FD 36 01 00         759 	ld	1 (iy),#0x00
                            760 ;demo.c:713: static int xo = 0;
   045B FD 21rD4s41         761 	ld	iy,#_xo
   045F FD 36 00 00         762 	ld	0 (iy),#0x00
   0463 FD 21rD4s41         763 	ld	iy,#_xo
   0467 FD 36 01 00         764 	ld	1 (iy),#0x00
                            765 ;demo.c:714: static int yo = 0;
   046B FD 21rD6s41         766 	ld	iy,#_yo
   046F FD 36 00 00         767 	ld	0 (iy),#0x00
   0473 FD 21rD6s41         768 	ld	iy,#_yo
   0477 FD 36 01 00         769 	ld	1 (iy),#0x00
                            770 ;demo.c:715: static int po = 0;
   047B FD 21rD8s41         771 	ld	iy,#_po
   047F FD 36 00 00         772 	ld	0 (iy),#0x00
   0483 FD 21rD8s41         773 	ld	iy,#_po
   0487 FD 36 01 00         774 	ld	1 (iy),#0x00
                            775 ;demo.c:716: static int frames = 0;
   048B FD 21rDAs41         776 	ld	iy,#_frames
   048F FD 36 00 00         777 	ld	0 (iy),#0x00
   0493 FD 21rDAs41         778 	ld	iy,#_frames
   0497 FD 36 01 00         779 	ld	1 (iy),#0x00
                            780 ;demo.c:718: int anim_init = 0;
   049B FD 21rDCs41         781 	ld	iy,#_anim_init
   049F FD 36 00 00         782 	ld	0 (iy),#0x00
   04A3 FD 21rDCs41         783 	ld	iy,#_anim_init
   04A7 FD 36 01 00         784 	ld	1 (iy),#0x00
                            785 ;demo.c:724: uint8_t boxes_init = 0;
   04AB FD 21rDEs41         786 	ld	iy,#_boxes_init
   04AF FD 36 00 00         787 	ld	0 (iy),#0x00
                            788 ;demo.c:725: int buffer = 1;
   04B3 FD 21rDFs41         789 	ld	iy,#_buffer
   04B7 FD 36 00 01         790 	ld	0 (iy),#0x01
   04BB FD 21rDFs41         791 	ld	iy,#_buffer
   04BF FD 36 01 00         792 	ld	1 (iy),#0x00
                            793 ;demo.c:726: int prevx = -1;
   04C3 FD 21rE1s41         794 	ld	iy,#_prevx
   04C7 FD 36 00 FF         795 	ld	0 (iy),#0xFF
   04CB FD 21rE1s41         796 	ld	iy,#_prevx
   04CF FD 36 01 FF         797 	ld	1 (iy),#0xFF
                            798 ;demo.c:728: uint8_t boxes_x[5] = {0,36,0,36,0};
   04D3 21rE5s41            799 	ld	hl,#_boxes_x
   04D6 CDr00s00            800 	call	__initrleblock
   04D9 05                  801 	.db	5
   04DA 00 24 00 24 00      802 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   04DF 00                  803 	.db	0
                            804 ;demo.c:729: int boxes_y[5] = {768,768,768+36,768+36,0};
   04E0 21rEAs41            805 	ld	hl,#_boxes_y
   04E3 CDr00s00            806 	call	__initrleblock
   04E6 0A                  807 	.db	10
   04E7 00 03 00 03 24 03   808 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   04EF 00 00               809 	.db	0x00, 0x00
   04F1 00                  810 	.db	0
                            811 ;demo.c:730: uint8_t boxi = 0;
   04F2 FD 21rF4s41         812 	ld	iy,#_boxi
   04F6 FD 36 00 00         813 	ld	0 (iy),#0x00
                            814 ;demo.c:731: int bx = 220;
   04FA FD 21rF5s41         815 	ld	iy,#_bx
   04FE FD 36 00 DC         816 	ld	0 (iy),#0xDC
   0502 FD 21rF5s41         817 	ld	iy,#_bx
   0506 FD 36 01 00         818 	ld	1 (iy),#0x00
                            819 ;demo.c:732: int by = 84;
   050A FD 21rF7s41         820 	ld	iy,#_by
   050E FD 36 00 54         821 	ld	0 (iy),#0x54
   0512 FD 21rF7s41         822 	ld	iy,#_by
   0516 FD 36 01 00         823 	ld	1 (iy),#0x00
                            824 ;demo.c:750: int bt = 0;
   051A FD 21rF9s41         825 	ld	iy,#_bt
   051E FD 36 00 00         826 	ld	0 (iy),#0x00
   0522 FD 21rF9s41         827 	ld	iy,#_bt
   0526 FD 36 01 00         828 	ld	1 (iy),#0x00
                            829 ;demo.c:751: int bo = 0;
   052A FD 21rFBs41         830 	ld	iy,#_bo
   052E FD 36 00 00         831 	ld	0 (iy),#0x00
   0532 FD 21rFBs41         832 	ld	iy,#_bo
   0536 FD 36 01 00         833 	ld	1 (iy),#0x00
                            834 ;demo.c:753: int bonc = 0;
   053A FD 21rFDs41         835 	ld	iy,#_bonc
   053E FD 36 00 00         836 	ld	0 (iy),#0x00
   0542 FD 21rFDs41         837 	ld	iy,#_bonc
   0546 FD 36 01 00         838 	ld	1 (iy),#0x00
                            839 ;demo.c:754: int pbx = 0;
   054A FD 21rFFs41         840 	ld	iy,#_pbx
   054E FD 36 00 00         841 	ld	0 (iy),#0x00
   0552 FD 21rFFs41         842 	ld	iy,#_pbx
   0556 FD 36 01 00         843 	ld	1 (iy),#0x00
                            844 ;demo.c:755: int pbt = 0;
   055A FD 21r01s42         845 	ld	iy,#_pbt
   055E FD 36 00 00         846 	ld	0 (iy),#0x00
   0562 FD 21r01s42         847 	ld	iy,#_pbt
   0566 FD 36 01 00         848 	ld	1 (iy),#0x00
                            849 ;demo.c:757: int boxes_of[5] = {0,0,6,0,0};
   056A 21r03s42            850 	ld	hl,#_boxes_of
   056D CDr00s00            851 	call	__initrleblock
   0570 05                  852 	.db	5
   0571 00 00 00 00 06      853 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0576 FB 00               854 	.db	#-5,#0x00
   0578 00                  855 	.db	0
                            856 ;demo.c:758: uint8_t prevbox_of = 0;
   0579 FD 21r0Ds42         857 	ld	iy,#_prevbox_of
   057D FD 36 00 00         858 	ld	0 (iy),#0x00
                            859 ;demo.c:759: int boxticks = 0;
   0581 FD 21r0Es42         860 	ld	iy,#_boxticks
   0585 FD 36 00 00         861 	ld	0 (iy),#0x00
   0589 FD 21r0Es42         862 	ld	iy,#_boxticks
   058D FD 36 01 00         863 	ld	1 (iy),#0x00
                            864 ;demo.c:879: uint8_t initwave = 0;
   0591 FD 21r10s42         865 	ld	iy,#_initwave
   0595 FD 36 00 00         866 	ld	0 (iy),#0x00
                            867 ;demo.c:880: int buf = -1;
   0599 FD 21r11s42         868 	ld	iy,#_buf
   059D FD 36 00 FF         869 	ld	0 (iy),#0xFF
   05A1 FD 21r11s42         870 	ld	iy,#_buf
   05A5 FD 36 01 FF         871 	ld	1 (iy),#0xFF
                            872 ;demo.c:881: int ffa = 0;
   05A9 FD 21r13s42         873 	ld	iy,#_ffa
   05AD FD 36 00 00         874 	ld	0 (iy),#0x00
   05B1 FD 21r13s42         875 	ld	iy,#_ffa
   05B5 FD 36 01 00         876 	ld	1 (iy),#0x00
                            877 ;demo.c:1003: uint8_t tri_inited = 0;
   05B9 FD 21r15s42         878 	ld	iy,#_tri_inited
   05BD FD 36 00 00         879 	ld	0 (iy),#0x00
                            880 ;demo.c:1018: int tilei = 0;
   05C1 FD 21r16s42         881 	ld	iy,#_tilei
   05C5 FD 36 00 00         882 	ld	0 (iy),#0x00
   05C9 FD 21r16s42         883 	ld	iy,#_tilei
   05CD FD 36 01 00         884 	ld	1 (iy),#0x00
                            885 ;demo.c:1019: int tilex = 0;
   05D1 FD 21r18s42         886 	ld	iy,#_tilex
   05D5 FD 36 00 00         887 	ld	0 (iy),#0x00
   05D9 FD 21r18s42         888 	ld	iy,#_tilex
   05DD FD 36 01 00         889 	ld	1 (iy),#0x00
                            890 ;demo.c:1020: int tiley = 0;
   05E1 FD 21r1As42         891 	ld	iy,#_tiley
   05E5 FD 36 00 00         892 	ld	0 (iy),#0x00
   05E9 FD 21r1As42         893 	ld	iy,#_tiley
   05ED FD 36 01 00         894 	ld	1 (iy),#0x00
                            895 ;demo.c:1021: uint8_t tiletick = 0;
   05F1 FD 21r1Cs42         896 	ld	iy,#_tiletick
   05F5 FD 36 00 00         897 	ld	0 (iy),#0x00
                            898 ;demo.c:1051: char tripal[9] = {
   05F9 21r1Ds42            899 	ld	hl,#_tripal
   05FC CDr00s00            900 	call	__initrleblock
   05FF 09                  901 	.db	9
   0600 02 02 01 01 02 03   902 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0608 02                  903 	.db	0x02
   0609 00                  904 	.db	0
                            905 ;demo.c:1057: uint8_t tripaltick = 0;
   060A FD 21r26s42         906 	ld	iy,#_tripaltick
   060E FD 36 00 00         907 	ld	0 (iy),#0x00
                            908 ;demo.c:1058: uint8_t tripaltick2 = 0;
   0612 FD 21r27s42         909 	ld	iy,#_tripaltick2
   0616 FD 36 00 00         910 	ld	0 (iy),#0x00
                            911 ;demo.c:1060: int triframes = 0;
   061A FD 21r28s42         912 	ld	iy,#_triframes
   061E FD 36 00 00         913 	ld	0 (iy),#0x00
   0622 FD 21r28s42         914 	ld	iy,#_triframes
   0626 FD 36 01 00         915 	ld	1 (iy),#0x00
                            916 ;demo.c:1225: int powatick = 0;
   062A FD 21r2As42         917 	ld	iy,#_powatick
   062E FD 36 00 00         918 	ld	0 (iy),#0x00
   0632 FD 21r2As42         919 	ld	iy,#_powatick
   0636 FD 36 01 00         920 	ld	1 (iy),#0x00
                            921 ;demo.c:1226: int powa = 0;
   063A FD 21r2Cs42         922 	ld	iy,#_powa
   063E FD 36 00 00         923 	ld	0 (iy),#0x00
   0642 FD 21r2Cs42         924 	ld	iy,#_powa
   0646 FD 36 01 00         925 	ld	1 (iy),#0x00
                            926 ;demo.c:1227: uint8_t onceclear = 255;
   064A FD 21r2Es42         927 	ld	iy,#_onceclear
   064E FD 36 00 FF         928 	ld	0 (iy),#0xFF
                            929 ;demo.c:1272: uint8_t initpoints = 0;
   0652 FD 21r2Fs42         930 	ld	iy,#_initpoints
   0656 FD 36 00 00         931 	ld	0 (iy),#0x00
                            932 ;demo.c:1273: int pointframe = 0;
   065A FD 21r30s42         933 	ld	iy,#_pointframe
   065E FD 36 00 00         934 	ld	0 (iy),#0x00
   0662 FD 21r30s42         935 	ld	iy,#_pointframe
   0666 FD 36 01 00         936 	ld	1 (iy),#0x00
                            937 ;demo.c:1276: int greetindex = 0;
   066A FD 21r32s42         938 	ld	iy,#_greetindex
   066E FD 36 00 00         939 	ld	0 (iy),#0x00
   0672 FD 21r32s42         940 	ld	iy,#_greetindex
   0676 FD 36 01 00         941 	ld	1 (iy),#0x00
                            942 ;demo.c:1371: int bigtextp = 0;
   067A FD 21r34s42         943 	ld	iy,#_bigtextp
   067E FD 36 00 00         944 	ld	0 (iy),#0x00
   0682 FD 21r34s42         945 	ld	iy,#_bigtextp
   0686 FD 36 01 00         946 	ld	1 (iy),#0x00
                            947 ;demo.c:1554: int initcredits = 0;
   068A FD 21r36s42         948 	ld	iy,#_initcredits
   068E FD 36 00 00         949 	ld	0 (iy),#0x00
   0692 FD 21r36s42         950 	ld	iy,#_initcredits
   0696 FD 36 01 00         951 	ld	1 (iy),#0x00
                            952 ;demo.c:1555: int credittimer = 0;
   069A FD 21r38s42         953 	ld	iy,#_credittimer
   069E FD 36 00 00         954 	ld	0 (iy),#0x00
   06A2 FD 21r38s42         955 	ld	iy,#_credittimer
   06A6 FD 36 01 00         956 	ld	1 (iy),#0x00
                            957 ;demo.c:1556: int musicstopped = 0;
   06AA FD 21r3As42         958 	ld	iy,#_musicstopped
   06AE FD 36 00 00         959 	ld	0 (iy),#0x00
   06B2 FD 21r3As42         960 	ld	iy,#_musicstopped
   06B6 FD 36 01 00         961 	ld	1 (iy),#0x00
                            962 ;demo.c:1640: int sceneindex = 0;
   06BA FD 21r3Cs42         963 	ld	iy,#_sceneindex
   06BE FD 36 00 00         964 	ld	0 (iy),#0x00
   06C2 FD 21r3Cs42         965 	ld	iy,#_sceneindex
   06C6 FD 36 01 00         966 	ld	1 (iy),#0x00
                            967 ;demo.c:1641: int timeindex = 0;
   06CA FD 21r3Es42         968 	ld	iy,#_timeindex
   06CE FD 36 00 00         969 	ld	0 (iy),#0x00
   06D2 FD 21r3Es42         970 	ld	iy,#_timeindex
   06D6 FD 36 01 00         971 	ld	1 (iy),#0x00
                            972 ;--------------------------------------------------------
                            973 ; Home
                            974 ;--------------------------------------------------------
                            975 	.area _HOME
                            976 	.area _HOME
                            977 ;--------------------------------------------------------
                            978 ; code
                            979 ;--------------------------------------------------------
                            980 	.area _CODE
                            981 ;demo.c:234: int isNthBitSet (unsigned char c, int n) {
                            982 ;	---------------------------------
                            983 ; Function isNthBitSet
                            984 ; ---------------------------------
   0000                     985 _isNthBitSet_start::
   0000                     986 _isNthBitSet:
   0000 DD E5               987 	push	ix
   0002 DD 21 00 00         988 	ld	ix,#0
   0006 DD 39               989 	add	ix,sp
                            990 ;demo.c:236: return ((c & mask[n]) != 0);
   0008 3Er81               991 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            992 	add	a,5 (ix)
   000D 4F                  993 	ld	c,a
   000E 3Es41               994 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            995 	adc	a,6 (ix)
   0013 47                  996 	ld	b,a
   0014 0A                  997 	ld	a,(bc)
   0015 DD A6 04            998 	and	a,4 (ix)
   0018 20 04               999 	jr	NZ,00103$
   001A 3E 01              1000 	ld	a,#0x01
   001C 18 01              1001 	jr	00104$
   001E                    1002 00103$:
   001E AF                 1003 	xor	a,a
   001F                    1004 00104$:
   001F B7                 1005 	or	a,a
   0020 D6 01              1006 	sub	a,#0x01
   0022 3E 00              1007 	ld	a,#0x00
   0024 17                 1008 	rla
   0025 4F                 1009 	ld	c,a
   0026 69                 1010 	ld	l,c
   0027 26 00              1011 	ld	h,#0x00
   0029 DD E1              1012 	pop	ix
   002B C9                 1013 	ret
   002C                    1014 _isNthBitSet_end::
   002C                    1015 _sintabx:
   002C 78                 1016 	.db #0x78
   002D 7A                 1017 	.db #0x7A
   002E 7D                 1018 	.db #0x7D
   002F 80                 1019 	.db #0x80
   0030 83                 1020 	.db #0x83
   0031 86                 1021 	.db #0x86
   0032 89                 1022 	.db #0x89
   0033 8C                 1023 	.db #0x8C
   0034 8F                 1024 	.db #0x8F
   0035 92                 1025 	.db #0x92
   0036 95                 1026 	.db #0x95
   0037 98                 1027 	.db #0x98
   0038 9A                 1028 	.db #0x9A
   0039 9D                 1029 	.db #0x9D
   003A A0                 1030 	.db #0xA0
   003B A3                 1031 	.db #0xA3
   003C A5                 1032 	.db #0xA5
   003D A8                 1033 	.db #0xA8
   003E AB                 1034 	.db #0xAB
   003F AD                 1035 	.db #0xAD
   0040 B0                 1036 	.db #0xB0
   0041 B3                 1037 	.db #0xB3
   0042 B5                 1038 	.db #0xB5
   0043 B8                 1039 	.db #0xB8
   0044 BA                 1040 	.db #0xBA
   0045 BD                 1041 	.db #0xBD
   0046 BF                 1042 	.db #0xBF
   0047 C1                 1043 	.db #0xC1
   0048 C4                 1044 	.db #0xC4
   0049 C6                 1045 	.db #0xC6
   004A C8                 1046 	.db #0xC8
   004B CA                 1047 	.db #0xCA
   004C CC                 1048 	.db #0xCC
   004D CE                 1049 	.db #0xCE
   004E D0                 1050 	.db #0xD0
   004F D2                 1051 	.db #0xD2
   0050 D4                 1052 	.db #0xD4
   0051 D6                 1053 	.db #0xD6
   0052 D8                 1054 	.db #0xD8
   0053 DA                 1055 	.db #0xDA
   0054 DB                 1056 	.db #0xDB
   0055 DD                 1057 	.db #0xDD
   0056 DE                 1058 	.db #0xDE
   0057 E0                 1059 	.db #0xE0
   0058 E1                 1060 	.db #0xE1
   0059 E3                 1061 	.db #0xE3
   005A E4                 1062 	.db #0xE4
   005B E5                 1063 	.db #0xE5
   005C E6                 1064 	.db #0xE6
   005D E7                 1065 	.db #0xE7
   005E E8                 1066 	.db #0xE8
   005F E9                 1067 	.db #0xE9
   0060 EA                 1068 	.db #0xEA
   0061 EB                 1069 	.db #0xEB
   0062 EC                 1070 	.db #0xEC
   0063 ED                 1071 	.db #0xED
   0064 ED                 1072 	.db #0xED
   0065 EE                 1073 	.db #0xEE
   0066 EE                 1074 	.db #0xEE
   0067 EF                 1075 	.db #0xEF
   0068 EF                 1076 	.db #0xEF
   0069 EF                 1077 	.db #0xEF
   006A EF                 1078 	.db #0xEF
   006B EF                 1079 	.db #0xEF
   006C F0                 1080 	.db #0xF0
   006D EF                 1081 	.db #0xEF
   006E EF                 1082 	.db #0xEF
   006F EF                 1083 	.db #0xEF
   0070 EF                 1084 	.db #0xEF
   0071 EF                 1085 	.db #0xEF
   0072 EE                 1086 	.db #0xEE
   0073 EE                 1087 	.db #0xEE
   0074 ED                 1088 	.db #0xED
   0075 ED                 1089 	.db #0xED
   0076 EC                 1090 	.db #0xEC
   0077 EB                 1091 	.db #0xEB
   0078 EA                 1092 	.db #0xEA
   0079 E9                 1093 	.db #0xE9
   007A E8                 1094 	.db #0xE8
   007B E7                 1095 	.db #0xE7
   007C E6                 1096 	.db #0xE6
   007D E5                 1097 	.db #0xE5
   007E E4                 1098 	.db #0xE4
   007F E3                 1099 	.db #0xE3
   0080 E1                 1100 	.db #0xE1
   0081 E0                 1101 	.db #0xE0
   0082 DE                 1102 	.db #0xDE
   0083 DD                 1103 	.db #0xDD
   0084 DB                 1104 	.db #0xDB
   0085 DA                 1105 	.db #0xDA
   0086 D8                 1106 	.db #0xD8
   0087 D6                 1107 	.db #0xD6
   0088 D4                 1108 	.db #0xD4
   0089 D2                 1109 	.db #0xD2
   008A D0                 1110 	.db #0xD0
   008B CE                 1111 	.db #0xCE
   008C CC                 1112 	.db #0xCC
   008D CA                 1113 	.db #0xCA
   008E C8                 1114 	.db #0xC8
   008F C6                 1115 	.db #0xC6
   0090 C4                 1116 	.db #0xC4
   0091 C1                 1117 	.db #0xC1
   0092 BF                 1118 	.db #0xBF
   0093 BD                 1119 	.db #0xBD
   0094 BA                 1120 	.db #0xBA
   0095 B8                 1121 	.db #0xB8
   0096 B5                 1122 	.db #0xB5
   0097 B3                 1123 	.db #0xB3
   0098 B0                 1124 	.db #0xB0
   0099 AD                 1125 	.db #0xAD
   009A AB                 1126 	.db #0xAB
   009B A8                 1127 	.db #0xA8
   009C A5                 1128 	.db #0xA5
   009D A3                 1129 	.db #0xA3
   009E A0                 1130 	.db #0xA0
   009F 9D                 1131 	.db #0x9D
   00A0 9A                 1132 	.db #0x9A
   00A1 98                 1133 	.db #0x98
   00A2 95                 1134 	.db #0x95
   00A3 92                 1135 	.db #0x92
   00A4 8F                 1136 	.db #0x8F
   00A5 8C                 1137 	.db #0x8C
   00A6 89                 1138 	.db #0x89
   00A7 86                 1139 	.db #0x86
   00A8 83                 1140 	.db #0x83
   00A9 80                 1141 	.db #0x80
   00AA 7D                 1142 	.db #0x7D
   00AB 7A                 1143 	.db #0x7A
   00AC 78                 1144 	.db #0x78
   00AD 75                 1145 	.db #0x75
   00AE 72                 1146 	.db #0x72
   00AF 6F                 1147 	.db #0x6F
   00B0 6C                 1148 	.db #0x6C
   00B1 69                 1149 	.db #0x69
   00B2 66                 1150 	.db #0x66
   00B3 63                 1151 	.db #0x63
   00B4 60                 1152 	.db #0x60
   00B5 5D                 1153 	.db #0x5D
   00B6 5A                 1154 	.db #0x5A
   00B7 57                 1155 	.db #0x57
   00B8 55                 1156 	.db #0x55
   00B9 52                 1157 	.db #0x52
   00BA 4F                 1158 	.db #0x4F
   00BB 4C                 1159 	.db #0x4C
   00BC 4A                 1160 	.db #0x4A
   00BD 47                 1161 	.db #0x47
   00BE 44                 1162 	.db #0x44
   00BF 42                 1163 	.db #0x42
   00C0 3F                 1164 	.db #0x3F
   00C1 3C                 1165 	.db #0x3C
   00C2 3A                 1166 	.db #0x3A
   00C3 37                 1167 	.db #0x37
   00C4 35                 1168 	.db #0x35
   00C5 32                 1169 	.db #0x32
   00C6 30                 1170 	.db #0x30
   00C7 2E                 1171 	.db #0x2E
   00C8 2B                 1172 	.db #0x2B
   00C9 29                 1173 	.db #0x29
   00CA 27                 1174 	.db #0x27
   00CB 25                 1175 	.db #0x25
   00CC 23                 1176 	.db #0x23
   00CD 21                 1177 	.db #0x21
   00CE 1F                 1178 	.db #0x1F
   00CF 1D                 1179 	.db #0x1D
   00D0 1B                 1180 	.db #0x1B
   00D1 19                 1181 	.db #0x19
   00D2 17                 1182 	.db #0x17
   00D3 15                 1183 	.db #0x15
   00D4 14                 1184 	.db #0x14
   00D5 12                 1185 	.db #0x12
   00D6 11                 1186 	.db #0x11
   00D7 0F                 1187 	.db #0x0F
   00D8 0E                 1188 	.db #0x0E
   00D9 0C                 1189 	.db #0x0C
   00DA 0B                 1190 	.db #0x0B
   00DB 0A                 1191 	.db #0x0A
   00DC 09                 1192 	.db #0x09
   00DD 08                 1193 	.db #0x08
   00DE 07                 1194 	.db #0x07
   00DF 06                 1195 	.db #0x06
   00E0 05                 1196 	.db #0x05
   00E1 04                 1197 	.db #0x04
   00E2 03                 1198 	.db #0x03
   00E3 02                 1199 	.db #0x02
   00E4 02                 1200 	.db #0x02
   00E5 01                 1201 	.db #0x01
   00E6 01                 1202 	.db #0x01
   00E7 00                 1203 	.db #0x00
   00E8 00                 1204 	.db #0x00
   00E9 00                 1205 	.db #0x00
   00EA 00                 1206 	.db #0x00
   00EB 00                 1207 	.db #0x00
   00EC 00                 1208 	.db #0x00
   00ED 00                 1209 	.db #0x00
   00EE 00                 1210 	.db #0x00
   00EF 00                 1211 	.db #0x00
   00F0 00                 1212 	.db #0x00
   00F1 00                 1213 	.db #0x00
   00F2 01                 1214 	.db #0x01
   00F3 01                 1215 	.db #0x01
   00F4 02                 1216 	.db #0x02
   00F5 02                 1217 	.db #0x02
   00F6 03                 1218 	.db #0x03
   00F7 04                 1219 	.db #0x04
   00F8 05                 1220 	.db #0x05
   00F9 06                 1221 	.db #0x06
   00FA 07                 1222 	.db #0x07
   00FB 08                 1223 	.db #0x08
   00FC 09                 1224 	.db #0x09
   00FD 0A                 1225 	.db #0x0A
   00FE 0B                 1226 	.db #0x0B
   00FF 0C                 1227 	.db #0x0C
   0100 0E                 1228 	.db #0x0E
   0101 0F                 1229 	.db #0x0F
   0102 11                 1230 	.db #0x11
   0103 12                 1231 	.db #0x12
   0104 14                 1232 	.db #0x14
   0105 15                 1233 	.db #0x15
   0106 17                 1234 	.db #0x17
   0107 19                 1235 	.db #0x19
   0108 1B                 1236 	.db #0x1B
   0109 1D                 1237 	.db #0x1D
   010A 1F                 1238 	.db #0x1F
   010B 21                 1239 	.db #0x21
   010C 23                 1240 	.db #0x23
   010D 25                 1241 	.db #0x25
   010E 27                 1242 	.db #0x27
   010F 29                 1243 	.db #0x29
   0110 2B                 1244 	.db #0x2B
   0111 2E                 1245 	.db #0x2E
   0112 30                 1246 	.db #0x30
   0113 32                 1247 	.db #0x32
   0114 35                 1248 	.db #0x35
   0115 37                 1249 	.db #0x37
   0116 3A                 1250 	.db #0x3A
   0117 3C                 1251 	.db #0x3C
   0118 3F                 1252 	.db #0x3F
   0119 42                 1253 	.db #0x42
   011A 44                 1254 	.db #0x44
   011B 47                 1255 	.db #0x47
   011C 4A                 1256 	.db #0x4A
   011D 4C                 1257 	.db #0x4C
   011E 4F                 1258 	.db #0x4F
   011F 52                 1259 	.db #0x52
   0120 55                 1260 	.db #0x55
   0121 57                 1261 	.db #0x57
   0122 5A                 1262 	.db #0x5A
   0123 5D                 1263 	.db #0x5D
   0124 60                 1264 	.db #0x60
   0125 63                 1265 	.db #0x63
   0126 66                 1266 	.db #0x66
   0127 69                 1267 	.db #0x69
   0128 6C                 1268 	.db #0x6C
   0129 6F                 1269 	.db #0x6F
   012A 72                 1270 	.db #0x72
   012B 75                 1271 	.db #0x75
   012C                    1272 _tri_center:
   012C 08                 1273 	.db #0x08
   012D 0A                 1274 	.db #0x0A
   012E 12                 1275 	.db #0x12
   012F 10                 1276 	.db #0x10
   0130 00                 1277 	.db #0x00
   0131 02                 1278 	.db #0x02
   0132 08                 1279 	.db #0x08
   0133 0A                 1280 	.db #0x0A
   0134 0B                 1281 	.db #0x0B
   0135 09                 1282 	.db #0x09
   0136 03                 1283 	.db #0x03
   0137 01                 1284 	.db #0x01
   0138 11                 1285 	.db #0x11
   0139 13                 1286 	.db #0x13
   013A 0B                 1287 	.db #0x0B
   013B 09                 1288 	.db #0x09
   013C 0A                 1289 	.db #0x0A
   013D 12                 1290 	.db #0x12
   013E 10                 1291 	.db #0x10
   013F 00                 1292 	.db #0x00
   0140 02                 1293 	.db #0x02
   0141 08                 1294 	.db #0x08
   0142 0A                 1295 	.db #0x0A
   0143 12                 1296 	.db #0x12
   0144 13                 1297 	.db #0x13
   0145 0B                 1298 	.db #0x0B
   0146 09                 1299 	.db #0x09
   0147 03                 1300 	.db #0x03
   0148 01                 1301 	.db #0x01
   0149 11                 1302 	.db #0x11
   014A 13                 1303 	.db #0x13
   014B 0B                 1304 	.db #0x0B
   014C 12                 1305 	.db #0x12
   014D 10                 1306 	.db #0x10
   014E 00                 1307 	.db #0x00
   014F 02                 1308 	.db #0x02
   0150 08                 1309 	.db #0x08
   0151 0A                 1310 	.db #0x0A
   0152 12                 1311 	.db #0x12
   0153 10                 1312 	.db #0x10
   0154 11                 1313 	.db #0x11
   0155 13                 1314 	.db #0x13
   0156 0B                 1315 	.db #0x0B
   0157 09                 1316 	.db #0x09
   0158 03                 1317 	.db #0x03
   0159 01                 1318 	.db #0x01
   015A 11                 1319 	.db #0x11
   015B 13                 1320 	.db #0x13
   015C 10                 1321 	.db #0x10
   015D 00                 1322 	.db #0x00
   015E 02                 1323 	.db #0x02
   015F 08                 1324 	.db #0x08
   0160 0A                 1325 	.db #0x0A
   0161 12                 1326 	.db #0x12
   0162 10                 1327 	.db #0x10
   0163 00                 1328 	.db #0x00
   0164 01                 1329 	.db #0x01
   0165 11                 1330 	.db #0x11
   0166 13                 1331 	.db #0x13
   0167 0B                 1332 	.db #0x0B
   0168 09                 1333 	.db #0x09
   0169 03                 1334 	.db #0x03
   016A 01                 1335 	.db #0x01
   016B 11                 1336 	.db #0x11
   016C 00                 1337 	.db #0x00
   016D 02                 1338 	.db #0x02
   016E 08                 1339 	.db #0x08
   016F 0A                 1340 	.db #0x0A
   0170 12                 1341 	.db #0x12
   0171 10                 1342 	.db #0x10
   0172 00                 1343 	.db #0x00
   0173 02                 1344 	.db #0x02
   0174 03                 1345 	.db #0x03
   0175 01                 1346 	.db #0x01
   0176 11                 1347 	.db #0x11
   0177 13                 1348 	.db #0x13
   0178 0B                 1349 	.db #0x0B
   0179 09                 1350 	.db #0x09
   017A 03                 1351 	.db #0x03
   017B 01                 1352 	.db #0x01
   017C 02                 1353 	.db #0x02
   017D 08                 1354 	.db #0x08
   017E 0A                 1355 	.db #0x0A
   017F 12                 1356 	.db #0x12
   0180 10                 1357 	.db #0x10
   0181 00                 1358 	.db #0x00
   0182 02                 1359 	.db #0x02
   0183 08                 1360 	.db #0x08
   0184 09                 1361 	.db #0x09
   0185 03                 1362 	.db #0x03
   0186 01                 1363 	.db #0x01
   0187 11                 1364 	.db #0x11
   0188 13                 1365 	.db #0x13
   0189 0B                 1366 	.db #0x0B
   018A 09                 1367 	.db #0x09
   018B 03                 1368 	.db #0x03
   018C 01                 1369 	.db #0x01
   018D 0B                 1370 	.db #0x0B
   018E 09                 1371 	.db #0x09
   018F 11                 1372 	.db #0x11
   0190 13                 1373 	.db #0x13
   0191 03                 1374 	.db #0x03
   0192 01                 1375 	.db #0x01
   0193 0B                 1376 	.db #0x0B
   0194 0A                 1377 	.db #0x0A
   0195 00                 1378 	.db #0x00
   0196 02                 1379 	.db #0x02
   0197 12                 1380 	.db #0x12
   0198 10                 1381 	.db #0x10
   0199 08                 1382 	.db #0x08
   019A 0A                 1383 	.db #0x0A
   019B 00                 1384 	.db #0x00
   019C 03                 1385 	.db #0x03
   019D 01                 1386 	.db #0x01
   019E 0B                 1387 	.db #0x0B
   019F 09                 1388 	.db #0x09
   01A0 11                 1389 	.db #0x11
   01A1 13                 1390 	.db #0x13
   01A2 03                 1391 	.db #0x03
   01A3 01                 1392 	.db #0x01
   01A4 00                 1393 	.db #0x00
   01A5 02                 1394 	.db #0x02
   01A6 12                 1395 	.db #0x12
   01A7 10                 1396 	.db #0x10
   01A8 08                 1397 	.db #0x08
   01A9 0A                 1398 	.db #0x0A
   01AA 00                 1399 	.db #0x00
   01AB 02                 1400 	.db #0x02
   01AC 13                 1401 	.db #0x13
   01AD 03                 1402 	.db #0x03
   01AE 01                 1403 	.db #0x01
   01AF 0B                 1404 	.db #0x0B
   01B0 09                 1405 	.db #0x09
   01B1 11                 1406 	.db #0x11
   01B2 13                 1407 	.db #0x13
   01B3 03                 1408 	.db #0x03
   01B4 02                 1409 	.db #0x02
   01B5 12                 1410 	.db #0x12
   01B6 10                 1411 	.db #0x10
   01B7 08                 1412 	.db #0x08
   01B8 0A                 1413 	.db #0x0A
   01B9 00                 1414 	.db #0x00
   01BA 02                 1415 	.db #0x02
   01BB 12                 1416 	.db #0x12
   01BC 11                 1417 	.db #0x11
   01BD 13                 1418 	.db #0x13
   01BE 03                 1419 	.db #0x03
   01BF 01                 1420 	.db #0x01
   01C0 0B                 1421 	.db #0x0B
   01C1 09                 1422 	.db #0x09
   01C2 11                 1423 	.db #0x11
   01C3 13                 1424 	.db #0x13
   01C4 12                 1425 	.db #0x12
   01C5 10                 1426 	.db #0x10
   01C6 08                 1427 	.db #0x08
   01C7 0A                 1428 	.db #0x0A
   01C8 00                 1429 	.db #0x00
   01C9 02                 1430 	.db #0x02
   01CA 12                 1431 	.db #0x12
   01CB 10                 1432 	.db #0x10
   01CC 09                 1433 	.db #0x09
   01CD 11                 1434 	.db #0x11
   01CE 13                 1435 	.db #0x13
   01CF 03                 1436 	.db #0x03
   01D0 01                 1437 	.db #0x01
   01D1 0B                 1438 	.db #0x0B
   01D2 09                 1439 	.db #0x09
   01D3 11                 1440 	.db #0x11
   01D4 10                 1441 	.db #0x10
   01D5 08                 1442 	.db #0x08
   01D6 0A                 1443 	.db #0x0A
   01D7 00                 1444 	.db #0x00
   01D8 02                 1445 	.db #0x02
   01D9 12                 1446 	.db #0x12
   01DA 10                 1447 	.db #0x10
   01DB 08                 1448 	.db #0x08
   01DC 0B                 1449 	.db #0x0B
   01DD 09                 1450 	.db #0x09
   01DE 11                 1451 	.db #0x11
   01DF 13                 1452 	.db #0x13
   01E0 03                 1453 	.db #0x03
   01E1 01                 1454 	.db #0x01
   01E2 0B                 1455 	.db #0x0B
   01E3 09                 1456 	.db #0x09
   01E4 08                 1457 	.db #0x08
   01E5 0A                 1458 	.db #0x0A
   01E6 00                 1459 	.db #0x00
   01E7 02                 1460 	.db #0x02
   01E8 12                 1461 	.db #0x12
   01E9 10                 1462 	.db #0x10
   01EA 08                 1463 	.db #0x08
   01EB 0A                 1464 	.db #0x0A
   01EC                    1465 _tri_up:
   01EC 0A                 1466 	.db #0x0A
   01ED 12                 1467 	.db #0x12
   01EE 10                 1468 	.db #0x10
   01EF 00                 1469 	.db #0x00
   01F0 02                 1470 	.db #0x02
   01F1 08                 1471 	.db #0x08
   01F2 0A                 1472 	.db #0x0A
   01F3 12                 1473 	.db #0x12
   01F4 13                 1474 	.db #0x13
   01F5 0B                 1475 	.db #0x0B
   01F6 09                 1476 	.db #0x09
   01F7 03                 1477 	.db #0x03
   01F8 01                 1478 	.db #0x01
   01F9 11                 1479 	.db #0x11
   01FA 13                 1480 	.db #0x13
   01FB 0B                 1481 	.db #0x0B
   01FC 12                 1482 	.db #0x12
   01FD 10                 1483 	.db #0x10
   01FE 00                 1484 	.db #0x00
   01FF 02                 1485 	.db #0x02
   0200 08                 1486 	.db #0x08
   0201 0A                 1487 	.db #0x0A
   0202 12                 1488 	.db #0x12
   0203 10                 1489 	.db #0x10
   0204 11                 1490 	.db #0x11
   0205 13                 1491 	.db #0x13
   0206 0B                 1492 	.db #0x0B
   0207 09                 1493 	.db #0x09
   0208 03                 1494 	.db #0x03
   0209 01                 1495 	.db #0x01
   020A 11                 1496 	.db #0x11
   020B 13                 1497 	.db #0x13
   020C 10                 1498 	.db #0x10
   020D 00                 1499 	.db #0x00
   020E 02                 1500 	.db #0x02
   020F 08                 1501 	.db #0x08
   0210 0A                 1502 	.db #0x0A
   0211 12                 1503 	.db #0x12
   0212 10                 1504 	.db #0x10
   0213 00                 1505 	.db #0x00
   0214 01                 1506 	.db #0x01
   0215 11                 1507 	.db #0x11
   0216 13                 1508 	.db #0x13
   0217 0B                 1509 	.db #0x0B
   0218 09                 1510 	.db #0x09
   0219 03                 1511 	.db #0x03
   021A 01                 1512 	.db #0x01
   021B 11                 1513 	.db #0x11
   021C 00                 1514 	.db #0x00
   021D 02                 1515 	.db #0x02
   021E 08                 1516 	.db #0x08
   021F 0A                 1517 	.db #0x0A
   0220 12                 1518 	.db #0x12
   0221 10                 1519 	.db #0x10
   0222 00                 1520 	.db #0x00
   0223 02                 1521 	.db #0x02
   0224 03                 1522 	.db #0x03
   0225 01                 1523 	.db #0x01
   0226 11                 1524 	.db #0x11
   0227 13                 1525 	.db #0x13
   0228 0B                 1526 	.db #0x0B
   0229 09                 1527 	.db #0x09
   022A 03                 1528 	.db #0x03
   022B 01                 1529 	.db #0x01
   022C 02                 1530 	.db #0x02
   022D 08                 1531 	.db #0x08
   022E 0A                 1532 	.db #0x0A
   022F 12                 1533 	.db #0x12
   0230 10                 1534 	.db #0x10
   0231 00                 1535 	.db #0x00
   0232 02                 1536 	.db #0x02
   0233 08                 1537 	.db #0x08
   0234 09                 1538 	.db #0x09
   0235 03                 1539 	.db #0x03
   0236 01                 1540 	.db #0x01
   0237 11                 1541 	.db #0x11
   0238 13                 1542 	.db #0x13
   0239 0B                 1543 	.db #0x0B
   023A 09                 1544 	.db #0x09
   023B 03                 1545 	.db #0x03
   023C 08                 1546 	.db #0x08
   023D 0A                 1547 	.db #0x0A
   023E 12                 1548 	.db #0x12
   023F 10                 1549 	.db #0x10
   0240 00                 1550 	.db #0x00
   0241 02                 1551 	.db #0x02
   0242 08                 1552 	.db #0x08
   0243 0A                 1553 	.db #0x0A
   0244 0B                 1554 	.db #0x0B
   0245 09                 1555 	.db #0x09
   0246 03                 1556 	.db #0x03
   0247 01                 1557 	.db #0x01
   0248 11                 1558 	.db #0x11
   0249 13                 1559 	.db #0x13
   024A 0B                 1560 	.db #0x0B
   024B 09                 1561 	.db #0x09
   024C 0A                 1562 	.db #0x0A
   024D 12                 1563 	.db #0x12
   024E 10                 1564 	.db #0x10
   024F 00                 1565 	.db #0x00
   0250 02                 1566 	.db #0x02
   0251 08                 1567 	.db #0x08
   0252 0A                 1568 	.db #0x0A
   0253 12                 1569 	.db #0x12
   0254 13                 1570 	.db #0x13
   0255 0B                 1571 	.db #0x0B
   0256 09                 1572 	.db #0x09
   0257 03                 1573 	.db #0x03
   0258 01                 1574 	.db #0x01
   0259 11                 1575 	.db #0x11
   025A 13                 1576 	.db #0x13
   025B 0B                 1577 	.db #0x0B
   025C 12                 1578 	.db #0x12
   025D 10                 1579 	.db #0x10
   025E 00                 1580 	.db #0x00
   025F 02                 1581 	.db #0x02
   0260 08                 1582 	.db #0x08
   0261 0A                 1583 	.db #0x0A
   0262 12                 1584 	.db #0x12
   0263 10                 1585 	.db #0x10
   0264 11                 1586 	.db #0x11
   0265 13                 1587 	.db #0x13
   0266 0B                 1588 	.db #0x0B
   0267 09                 1589 	.db #0x09
   0268 03                 1590 	.db #0x03
   0269 01                 1591 	.db #0x01
   026A 11                 1592 	.db #0x11
   026B 13                 1593 	.db #0x13
   026C 10                 1594 	.db #0x10
   026D 00                 1595 	.db #0x00
   026E 02                 1596 	.db #0x02
   026F 08                 1597 	.db #0x08
   0270 0A                 1598 	.db #0x0A
   0271 12                 1599 	.db #0x12
   0272 10                 1600 	.db #0x10
   0273 00                 1601 	.db #0x00
   0274 01                 1602 	.db #0x01
   0275 11                 1603 	.db #0x11
   0276 13                 1604 	.db #0x13
   0277 0B                 1605 	.db #0x0B
   0278 09                 1606 	.db #0x09
   0279 03                 1607 	.db #0x03
   027A 01                 1608 	.db #0x01
   027B 11                 1609 	.db #0x11
   027C 00                 1610 	.db #0x00
   027D 02                 1611 	.db #0x02
   027E 08                 1612 	.db #0x08
   027F 0A                 1613 	.db #0x0A
   0280 12                 1614 	.db #0x12
   0281 10                 1615 	.db #0x10
   0282 00                 1616 	.db #0x00
   0283 02                 1617 	.db #0x02
   0284 03                 1618 	.db #0x03
   0285 01                 1619 	.db #0x01
   0286 11                 1620 	.db #0x11
   0287 13                 1621 	.db #0x13
   0288 0B                 1622 	.db #0x0B
   0289 09                 1623 	.db #0x09
   028A 03                 1624 	.db #0x03
   028B 01                 1625 	.db #0x01
   028C 02                 1626 	.db #0x02
   028D 08                 1627 	.db #0x08
   028E 0A                 1628 	.db #0x0A
   028F 12                 1629 	.db #0x12
   0290 10                 1630 	.db #0x10
   0291 00                 1631 	.db #0x00
   0292 02                 1632 	.db #0x02
   0293 08                 1633 	.db #0x08
   0294 09                 1634 	.db #0x09
   0295 03                 1635 	.db #0x03
   0296 01                 1636 	.db #0x01
   0297 11                 1637 	.db #0x11
   0298 13                 1638 	.db #0x13
   0299 0B                 1639 	.db #0x0B
   029A 09                 1640 	.db #0x09
   029B 03                 1641 	.db #0x03
   029C 08                 1642 	.db #0x08
   029D 0A                 1643 	.db #0x0A
   029E 12                 1644 	.db #0x12
   029F 10                 1645 	.db #0x10
   02A0 00                 1646 	.db #0x00
   02A1 02                 1647 	.db #0x02
   02A2 08                 1648 	.db #0x08
   02A3 0A                 1649 	.db #0x0A
   02A4 0B                 1650 	.db #0x0B
   02A5 09                 1651 	.db #0x09
   02A6 03                 1652 	.db #0x03
   02A7 01                 1653 	.db #0x01
   02A8 11                 1654 	.db #0x11
   02A9 13                 1655 	.db #0x13
   02AA 0B                 1656 	.db #0x0B
   02AB 09                 1657 	.db #0x09
   02AC                    1658 _tri_dia:
   02AC 05                 1659 	.db #0x05
   02AD 1B                 1660 	.db #0x1B
   02AE 0F                 1661 	.db #0x0F
   02AF 1D                 1662 	.db #0x1D
   02B0 15                 1663 	.db #0x15
   02B1 19                 1664 	.db #0x19
   02B2 05                 1665 	.db #0x05
   02B3 1B                 1666 	.db #0x1B
   02B4 0F                 1667 	.db #0x0F
   02B5 1D                 1668 	.db #0x1D
   02B6 15                 1669 	.db #0x15
   02B7 19                 1670 	.db #0x19
   02B8 05                 1671 	.db #0x05
   02B9 1B                 1672 	.db #0x1B
   02BA 0F                 1673 	.db #0x0F
   02BB 1D                 1674 	.db #0x1D
   02BC 1D                 1675 	.db #0x1D
   02BD 05                 1676 	.db #0x05
   02BE 19                 1677 	.db #0x19
   02BF 0F                 1678 	.db #0x0F
   02C0 1B                 1679 	.db #0x1B
   02C1 15                 1680 	.db #0x15
   02C2 1D                 1681 	.db #0x1D
   02C3 05                 1682 	.db #0x05
   02C4 19                 1683 	.db #0x19
   02C5 0F                 1684 	.db #0x0F
   02C6 1B                 1685 	.db #0x1B
   02C7 15                 1686 	.db #0x15
   02C8 1D                 1687 	.db #0x1D
   02C9 05                 1688 	.db #0x05
   02CA 19                 1689 	.db #0x19
   02CB 0F                 1690 	.db #0x0F
   02CC 0F                 1691 	.db #0x0F
   02CD 1D                 1692 	.db #0x1D
   02CE 15                 1693 	.db #0x15
   02CF 19                 1694 	.db #0x19
   02D0 05                 1695 	.db #0x05
   02D1 1B                 1696 	.db #0x1B
   02D2 0F                 1697 	.db #0x0F
   02D3 1D                 1698 	.db #0x1D
   02D4 15                 1699 	.db #0x15
   02D5 19                 1700 	.db #0x19
   02D6 05                 1701 	.db #0x05
   02D7 1B                 1702 	.db #0x1B
   02D8 0F                 1703 	.db #0x0F
   02D9 1D                 1704 	.db #0x1D
   02DA 15                 1705 	.db #0x15
   02DB 19                 1706 	.db #0x19
   02DC 19                 1707 	.db #0x19
   02DD 0F                 1708 	.db #0x0F
   02DE 1B                 1709 	.db #0x1B
   02DF 15                 1710 	.db #0x15
   02E0 1D                 1711 	.db #0x1D
   02E1 05                 1712 	.db #0x05
   02E2 19                 1713 	.db #0x19
   02E3 0F                 1714 	.db #0x0F
   02E4 1B                 1715 	.db #0x1B
   02E5 15                 1716 	.db #0x15
   02E6 1D                 1717 	.db #0x1D
   02E7 05                 1718 	.db #0x05
   02E8 19                 1719 	.db #0x19
   02E9 0F                 1720 	.db #0x0F
   02EA 1B                 1721 	.db #0x1B
   02EB 15                 1722 	.db #0x15
   02EC 15                 1723 	.db #0x15
   02ED 19                 1724 	.db #0x19
   02EE 05                 1725 	.db #0x05
   02EF 1B                 1726 	.db #0x1B
   02F0 0F                 1727 	.db #0x0F
   02F1 1D                 1728 	.db #0x1D
   02F2 15                 1729 	.db #0x15
   02F3 19                 1730 	.db #0x19
   02F4 05                 1731 	.db #0x05
   02F5 1B                 1732 	.db #0x1B
   02F6 0F                 1733 	.db #0x0F
   02F7 1D                 1734 	.db #0x1D
   02F8 15                 1735 	.db #0x15
   02F9 19                 1736 	.db #0x19
   02FA 05                 1737 	.db #0x05
   02FB 1B                 1738 	.db #0x1B
   02FC 1B                 1739 	.db #0x1B
   02FD 15                 1740 	.db #0x15
   02FE 1D                 1741 	.db #0x1D
   02FF 05                 1742 	.db #0x05
   0300 19                 1743 	.db #0x19
   0301 0F                 1744 	.db #0x0F
   0302 1B                 1745 	.db #0x1B
   0303 15                 1746 	.db #0x15
   0304 1D                 1747 	.db #0x1D
   0305 05                 1748 	.db #0x05
   0306 19                 1749 	.db #0x19
   0307 0F                 1750 	.db #0x0F
   0308 1B                 1751 	.db #0x1B
   0309 15                 1752 	.db #0x15
   030A 1D                 1753 	.db #0x1D
   030B 05                 1754 	.db #0x05
   030C 05                 1755 	.db #0x05
   030D 1B                 1756 	.db #0x1B
   030E 0F                 1757 	.db #0x0F
   030F 1D                 1758 	.db #0x1D
   0310 15                 1759 	.db #0x15
   0311 19                 1760 	.db #0x19
   0312 05                 1761 	.db #0x05
   0313 1B                 1762 	.db #0x1B
   0314 0F                 1763 	.db #0x0F
   0315 1D                 1764 	.db #0x1D
   0316 15                 1765 	.db #0x15
   0317 19                 1766 	.db #0x19
   0318 05                 1767 	.db #0x05
   0319 1B                 1768 	.db #0x1B
   031A 0F                 1769 	.db #0x0F
   031B 1D                 1770 	.db #0x1D
   031C 1D                 1771 	.db #0x1D
   031D 05                 1772 	.db #0x05
   031E 19                 1773 	.db #0x19
   031F 0F                 1774 	.db #0x0F
   0320 1B                 1775 	.db #0x1B
   0321 15                 1776 	.db #0x15
   0322 1D                 1777 	.db #0x1D
   0323 05                 1778 	.db #0x05
   0324 19                 1779 	.db #0x19
   0325 0F                 1780 	.db #0x0F
   0326 1B                 1781 	.db #0x1B
   0327 15                 1782 	.db #0x15
   0328 1D                 1783 	.db #0x1D
   0329 05                 1784 	.db #0x05
   032A 19                 1785 	.db #0x19
   032B 0F                 1786 	.db #0x0F
   032C 0F                 1787 	.db #0x0F
   032D 1D                 1788 	.db #0x1D
   032E 15                 1789 	.db #0x15
   032F 19                 1790 	.db #0x19
   0330 05                 1791 	.db #0x05
   0331 1B                 1792 	.db #0x1B
   0332 0F                 1793 	.db #0x0F
   0333 1D                 1794 	.db #0x1D
   0334 15                 1795 	.db #0x15
   0335 19                 1796 	.db #0x19
   0336 05                 1797 	.db #0x05
   0337 1B                 1798 	.db #0x1B
   0338 0F                 1799 	.db #0x0F
   0339 1D                 1800 	.db #0x1D
   033A 15                 1801 	.db #0x15
   033B 19                 1802 	.db #0x19
   033C 19                 1803 	.db #0x19
   033D 0F                 1804 	.db #0x0F
   033E 1B                 1805 	.db #0x1B
   033F 15                 1806 	.db #0x15
   0340 1D                 1807 	.db #0x1D
   0341 05                 1808 	.db #0x05
   0342 19                 1809 	.db #0x19
   0343 0F                 1810 	.db #0x0F
   0344 1B                 1811 	.db #0x1B
   0345 15                 1812 	.db #0x15
   0346 1D                 1813 	.db #0x1D
   0347 05                 1814 	.db #0x05
   0348 19                 1815 	.db #0x19
   0349 0F                 1816 	.db #0x0F
   034A 1B                 1817 	.db #0x1B
   034B 15                 1818 	.db #0x15
   034C 15                 1819 	.db #0x15
   034D 19                 1820 	.db #0x19
   034E 05                 1821 	.db #0x05
   034F 1B                 1822 	.db #0x1B
   0350 0F                 1823 	.db #0x0F
   0351 1D                 1824 	.db #0x1D
   0352 15                 1825 	.db #0x15
   0353 19                 1826 	.db #0x19
   0354 05                 1827 	.db #0x05
   0355 1B                 1828 	.db #0x1B
   0356 0F                 1829 	.db #0x0F
   0357 1D                 1830 	.db #0x1D
   0358 15                 1831 	.db #0x15
   0359 19                 1832 	.db #0x19
   035A 05                 1833 	.db #0x05
   035B 1B                 1834 	.db #0x1B
   035C 1B                 1835 	.db #0x1B
   035D 15                 1836 	.db #0x15
   035E 1D                 1837 	.db #0x1D
   035F 05                 1838 	.db #0x05
   0360 19                 1839 	.db #0x19
   0361 0F                 1840 	.db #0x0F
   0362 1B                 1841 	.db #0x1B
   0363 15                 1842 	.db #0x15
   0364 1D                 1843 	.db #0x1D
   0365 05                 1844 	.db #0x05
   0366 19                 1845 	.db #0x19
   0367 0F                 1846 	.db #0x0F
   0368 1B                 1847 	.db #0x1B
   0369 15                 1848 	.db #0x15
   036A 1D                 1849 	.db #0x1D
   036B 05                 1850 	.db #0x05
   036C                    1851 _tri_side1:
   036C 0A                 1852 	.db #0x0A
   036D 12                 1853 	.db #0x12
   036E 10                 1854 	.db #0x10
   036F 00                 1855 	.db #0x00
   0370 02                 1856 	.db #0x02
   0371 08                 1857 	.db #0x08
   0372 0A                 1858 	.db #0x0A
   0373 12                 1859 	.db #0x12
   0374 10                 1860 	.db #0x10
   0375 00                 1861 	.db #0x00
   0376 02                 1862 	.db #0x02
   0377 08                 1863 	.db #0x08
   0378 0A                 1864 	.db #0x0A
   0379 12                 1865 	.db #0x12
   037A 10                 1866 	.db #0x10
   037B 00                 1867 	.db #0x00
   037C 12                 1868 	.db #0x12
   037D 10                 1869 	.db #0x10
   037E 00                 1870 	.db #0x00
   037F 02                 1871 	.db #0x02
   0380 08                 1872 	.db #0x08
   0381 0A                 1873 	.db #0x0A
   0382 12                 1874 	.db #0x12
   0383 10                 1875 	.db #0x10
   0384 00                 1876 	.db #0x00
   0385 02                 1877 	.db #0x02
   0386 08                 1878 	.db #0x08
   0387 0A                 1879 	.db #0x0A
   0388 12                 1880 	.db #0x12
   0389 10                 1881 	.db #0x10
   038A 00                 1882 	.db #0x00
   038B 02                 1883 	.db #0x02
   038C 10                 1884 	.db #0x10
   038D 00                 1885 	.db #0x00
   038E 02                 1886 	.db #0x02
   038F 08                 1887 	.db #0x08
   0390 0A                 1888 	.db #0x0A
   0391 12                 1889 	.db #0x12
   0392 10                 1890 	.db #0x10
   0393 00                 1891 	.db #0x00
   0394 02                 1892 	.db #0x02
   0395 08                 1893 	.db #0x08
   0396 0A                 1894 	.db #0x0A
   0397 12                 1895 	.db #0x12
   0398 10                 1896 	.db #0x10
   0399 00                 1897 	.db #0x00
   039A 02                 1898 	.db #0x02
   039B 08                 1899 	.db #0x08
   039C 00                 1900 	.db #0x00
   039D 02                 1901 	.db #0x02
   039E 08                 1902 	.db #0x08
   039F 0A                 1903 	.db #0x0A
   03A0 12                 1904 	.db #0x12
   03A1 10                 1905 	.db #0x10
   03A2 00                 1906 	.db #0x00
   03A3 02                 1907 	.db #0x02
   03A4 08                 1908 	.db #0x08
   03A5 0A                 1909 	.db #0x0A
   03A6 12                 1910 	.db #0x12
   03A7 10                 1911 	.db #0x10
   03A8 00                 1912 	.db #0x00
   03A9 02                 1913 	.db #0x02
   03AA 08                 1914 	.db #0x08
   03AB 0A                 1915 	.db #0x0A
   03AC 02                 1916 	.db #0x02
   03AD 08                 1917 	.db #0x08
   03AE 0A                 1918 	.db #0x0A
   03AF 12                 1919 	.db #0x12
   03B0 10                 1920 	.db #0x10
   03B1 00                 1921 	.db #0x00
   03B2 02                 1922 	.db #0x02
   03B3 08                 1923 	.db #0x08
   03B4 0A                 1924 	.db #0x0A
   03B5 12                 1925 	.db #0x12
   03B6 10                 1926 	.db #0x10
   03B7 00                 1927 	.db #0x00
   03B8 02                 1928 	.db #0x02
   03B9 08                 1929 	.db #0x08
   03BA 0A                 1930 	.db #0x0A
   03BB 12                 1931 	.db #0x12
   03BC 08                 1932 	.db #0x08
   03BD 0A                 1933 	.db #0x0A
   03BE 12                 1934 	.db #0x12
   03BF 10                 1935 	.db #0x10
   03C0 00                 1936 	.db #0x00
   03C1 02                 1937 	.db #0x02
   03C2 08                 1938 	.db #0x08
   03C3 0A                 1939 	.db #0x0A
   03C4 12                 1940 	.db #0x12
   03C5 10                 1941 	.db #0x10
   03C6 00                 1942 	.db #0x00
   03C7 02                 1943 	.db #0x02
   03C8 08                 1944 	.db #0x08
   03C9 0A                 1945 	.db #0x0A
   03CA 12                 1946 	.db #0x12
   03CB 10                 1947 	.db #0x10
   03CC 0A                 1948 	.db #0x0A
   03CD 12                 1949 	.db #0x12
   03CE 10                 1950 	.db #0x10
   03CF 00                 1951 	.db #0x00
   03D0 02                 1952 	.db #0x02
   03D1 08                 1953 	.db #0x08
   03D2 0A                 1954 	.db #0x0A
   03D3 12                 1955 	.db #0x12
   03D4 10                 1956 	.db #0x10
   03D5 00                 1957 	.db #0x00
   03D6 02                 1958 	.db #0x02
   03D7 08                 1959 	.db #0x08
   03D8 0A                 1960 	.db #0x0A
   03D9 12                 1961 	.db #0x12
   03DA 10                 1962 	.db #0x10
   03DB 00                 1963 	.db #0x00
   03DC 12                 1964 	.db #0x12
   03DD 10                 1965 	.db #0x10
   03DE 00                 1966 	.db #0x00
   03DF 02                 1967 	.db #0x02
   03E0 08                 1968 	.db #0x08
   03E1 0A                 1969 	.db #0x0A
   03E2 12                 1970 	.db #0x12
   03E3 10                 1971 	.db #0x10
   03E4 00                 1972 	.db #0x00
   03E5 02                 1973 	.db #0x02
   03E6 08                 1974 	.db #0x08
   03E7 0A                 1975 	.db #0x0A
   03E8 12                 1976 	.db #0x12
   03E9 10                 1977 	.db #0x10
   03EA 00                 1978 	.db #0x00
   03EB 02                 1979 	.db #0x02
   03EC 10                 1980 	.db #0x10
   03ED 00                 1981 	.db #0x00
   03EE 02                 1982 	.db #0x02
   03EF 08                 1983 	.db #0x08
   03F0 0A                 1984 	.db #0x0A
   03F1 12                 1985 	.db #0x12
   03F2 10                 1986 	.db #0x10
   03F3 00                 1987 	.db #0x00
   03F4 02                 1988 	.db #0x02
   03F5 08                 1989 	.db #0x08
   03F6 0A                 1990 	.db #0x0A
   03F7 12                 1991 	.db #0x12
   03F8 10                 1992 	.db #0x10
   03F9 00                 1993 	.db #0x00
   03FA 02                 1994 	.db #0x02
   03FB 08                 1995 	.db #0x08
   03FC 00                 1996 	.db #0x00
   03FD 02                 1997 	.db #0x02
   03FE 08                 1998 	.db #0x08
   03FF 0A                 1999 	.db #0x0A
   0400 12                 2000 	.db #0x12
   0401 10                 2001 	.db #0x10
   0402 00                 2002 	.db #0x00
   0403 02                 2003 	.db #0x02
   0404 08                 2004 	.db #0x08
   0405 0A                 2005 	.db #0x0A
   0406 12                 2006 	.db #0x12
   0407 10                 2007 	.db #0x10
   0408 00                 2008 	.db #0x00
   0409 02                 2009 	.db #0x02
   040A 08                 2010 	.db #0x08
   040B 0A                 2011 	.db #0x0A
   040C 02                 2012 	.db #0x02
   040D 08                 2013 	.db #0x08
   040E 0A                 2014 	.db #0x0A
   040F 12                 2015 	.db #0x12
   0410 10                 2016 	.db #0x10
   0411 00                 2017 	.db #0x00
   0412 02                 2018 	.db #0x02
   0413 08                 2019 	.db #0x08
   0414 0A                 2020 	.db #0x0A
   0415 12                 2021 	.db #0x12
   0416 10                 2022 	.db #0x10
   0417 00                 2023 	.db #0x00
   0418 02                 2024 	.db #0x02
   0419 08                 2025 	.db #0x08
   041A 0A                 2026 	.db #0x0A
   041B 12                 2027 	.db #0x12
   041C 08                 2028 	.db #0x08
   041D 0A                 2029 	.db #0x0A
   041E 12                 2030 	.db #0x12
   041F 10                 2031 	.db #0x10
   0420 00                 2032 	.db #0x00
   0421 02                 2033 	.db #0x02
   0422 08                 2034 	.db #0x08
   0423 0A                 2035 	.db #0x0A
   0424 12                 2036 	.db #0x12
   0425 10                 2037 	.db #0x10
   0426 00                 2038 	.db #0x00
   0427 02                 2039 	.db #0x02
   0428 08                 2040 	.db #0x08
   0429 0A                 2041 	.db #0x0A
   042A 12                 2042 	.db #0x12
   042B 10                 2043 	.db #0x10
   042C                    2044 _tri_side2:
   042C 00                 2045 	.db #0x00
   042D 10                 2046 	.db #0x10
   042E 12                 2047 	.db #0x12
   042F 0A                 2048 	.db #0x0A
   0430 08                 2049 	.db #0x08
   0431 02                 2050 	.db #0x02
   0432 00                 2051 	.db #0x00
   0433 10                 2052 	.db #0x10
   0434 12                 2053 	.db #0x12
   0435 0A                 2054 	.db #0x0A
   0436 08                 2055 	.db #0x08
   0437 02                 2056 	.db #0x02
   0438 00                 2057 	.db #0x00
   0439 10                 2058 	.db #0x10
   043A 12                 2059 	.db #0x12
   043B 0A                 2060 	.db #0x0A
   043C 02                 2061 	.db #0x02
   043D 00                 2062 	.db #0x00
   043E 10                 2063 	.db #0x10
   043F 12                 2064 	.db #0x12
   0440 0A                 2065 	.db #0x0A
   0441 08                 2066 	.db #0x08
   0442 02                 2067 	.db #0x02
   0443 00                 2068 	.db #0x00
   0444 10                 2069 	.db #0x10
   0445 12                 2070 	.db #0x12
   0446 0A                 2071 	.db #0x0A
   0447 08                 2072 	.db #0x08
   0448 02                 2073 	.db #0x02
   0449 00                 2074 	.db #0x00
   044A 10                 2075 	.db #0x10
   044B 12                 2076 	.db #0x12
   044C 08                 2077 	.db #0x08
   044D 02                 2078 	.db #0x02
   044E 00                 2079 	.db #0x00
   044F 10                 2080 	.db #0x10
   0450 12                 2081 	.db #0x12
   0451 0A                 2082 	.db #0x0A
   0452 08                 2083 	.db #0x08
   0453 02                 2084 	.db #0x02
   0454 00                 2085 	.db #0x00
   0455 10                 2086 	.db #0x10
   0456 12                 2087 	.db #0x12
   0457 0A                 2088 	.db #0x0A
   0458 08                 2089 	.db #0x08
   0459 02                 2090 	.db #0x02
   045A 00                 2091 	.db #0x00
   045B 10                 2092 	.db #0x10
   045C 0A                 2093 	.db #0x0A
   045D 08                 2094 	.db #0x08
   045E 02                 2095 	.db #0x02
   045F 00                 2096 	.db #0x00
   0460 10                 2097 	.db #0x10
   0461 12                 2098 	.db #0x12
   0462 0A                 2099 	.db #0x0A
   0463 08                 2100 	.db #0x08
   0464 02                 2101 	.db #0x02
   0465 00                 2102 	.db #0x00
   0466 10                 2103 	.db #0x10
   0467 12                 2104 	.db #0x12
   0468 0A                 2105 	.db #0x0A
   0469 08                 2106 	.db #0x08
   046A 02                 2107 	.db #0x02
   046B 00                 2108 	.db #0x00
   046C 12                 2109 	.db #0x12
   046D 0A                 2110 	.db #0x0A
   046E 08                 2111 	.db #0x08
   046F 02                 2112 	.db #0x02
   0470 00                 2113 	.db #0x00
   0471 10                 2114 	.db #0x10
   0472 12                 2115 	.db #0x12
   0473 0A                 2116 	.db #0x0A
   0474 08                 2117 	.db #0x08
   0475 02                 2118 	.db #0x02
   0476 00                 2119 	.db #0x00
   0477 10                 2120 	.db #0x10
   0478 12                 2121 	.db #0x12
   0479 0A                 2122 	.db #0x0A
   047A 08                 2123 	.db #0x08
   047B 02                 2124 	.db #0x02
   047C 10                 2125 	.db #0x10
   047D 12                 2126 	.db #0x12
   047E 0A                 2127 	.db #0x0A
   047F 08                 2128 	.db #0x08
   0480 02                 2129 	.db #0x02
   0481 00                 2130 	.db #0x00
   0482 10                 2131 	.db #0x10
   0483 12                 2132 	.db #0x12
   0484 0A                 2133 	.db #0x0A
   0485 08                 2134 	.db #0x08
   0486 02                 2135 	.db #0x02
   0487 00                 2136 	.db #0x00
   0488 10                 2137 	.db #0x10
   0489 12                 2138 	.db #0x12
   048A 0A                 2139 	.db #0x0A
   048B 08                 2140 	.db #0x08
   048C 00                 2141 	.db #0x00
   048D 10                 2142 	.db #0x10
   048E 12                 2143 	.db #0x12
   048F 0A                 2144 	.db #0x0A
   0490 08                 2145 	.db #0x08
   0491 02                 2146 	.db #0x02
   0492 00                 2147 	.db #0x00
   0493 10                 2148 	.db #0x10
   0494 12                 2149 	.db #0x12
   0495 0A                 2150 	.db #0x0A
   0496 08                 2151 	.db #0x08
   0497 02                 2152 	.db #0x02
   0498 00                 2153 	.db #0x00
   0499 10                 2154 	.db #0x10
   049A 12                 2155 	.db #0x12
   049B 0A                 2156 	.db #0x0A
   049C 02                 2157 	.db #0x02
   049D 00                 2158 	.db #0x00
   049E 10                 2159 	.db #0x10
   049F 12                 2160 	.db #0x12
   04A0 0A                 2161 	.db #0x0A
   04A1 08                 2162 	.db #0x08
   04A2 02                 2163 	.db #0x02
   04A3 00                 2164 	.db #0x00
   04A4 10                 2165 	.db #0x10
   04A5 12                 2166 	.db #0x12
   04A6 0A                 2167 	.db #0x0A
   04A7 08                 2168 	.db #0x08
   04A8 02                 2169 	.db #0x02
   04A9 00                 2170 	.db #0x00
   04AA 10                 2171 	.db #0x10
   04AB 12                 2172 	.db #0x12
   04AC 08                 2173 	.db #0x08
   04AD 02                 2174 	.db #0x02
   04AE 00                 2175 	.db #0x00
   04AF 10                 2176 	.db #0x10
   04B0 12                 2177 	.db #0x12
   04B1 0A                 2178 	.db #0x0A
   04B2 08                 2179 	.db #0x08
   04B3 02                 2180 	.db #0x02
   04B4 00                 2181 	.db #0x00
   04B5 10                 2182 	.db #0x10
   04B6 12                 2183 	.db #0x12
   04B7 0A                 2184 	.db #0x0A
   04B8 08                 2185 	.db #0x08
   04B9 02                 2186 	.db #0x02
   04BA 00                 2187 	.db #0x00
   04BB 10                 2188 	.db #0x10
   04BC 0A                 2189 	.db #0x0A
   04BD 08                 2190 	.db #0x08
   04BE 02                 2191 	.db #0x02
   04BF 00                 2192 	.db #0x00
   04C0 10                 2193 	.db #0x10
   04C1 12                 2194 	.db #0x12
   04C2 0A                 2195 	.db #0x0A
   04C3 08                 2196 	.db #0x08
   04C4 02                 2197 	.db #0x02
   04C5 00                 2198 	.db #0x00
   04C6 10                 2199 	.db #0x10
   04C7 12                 2200 	.db #0x12
   04C8 0A                 2201 	.db #0x0A
   04C9 08                 2202 	.db #0x08
   04CA 02                 2203 	.db #0x02
   04CB 00                 2204 	.db #0x00
   04CC 12                 2205 	.db #0x12
   04CD 0A                 2206 	.db #0x0A
   04CE 08                 2207 	.db #0x08
   04CF 02                 2208 	.db #0x02
   04D0 00                 2209 	.db #0x00
   04D1 10                 2210 	.db #0x10
   04D2 12                 2211 	.db #0x12
   04D3 0A                 2212 	.db #0x0A
   04D4 08                 2213 	.db #0x08
   04D5 02                 2214 	.db #0x02
   04D6 00                 2215 	.db #0x00
   04D7 10                 2216 	.db #0x10
   04D8 12                 2217 	.db #0x12
   04D9 0A                 2218 	.db #0x0A
   04DA 08                 2219 	.db #0x08
   04DB 02                 2220 	.db #0x02
   04DC 10                 2221 	.db #0x10
   04DD 12                 2222 	.db #0x12
   04DE 0A                 2223 	.db #0x0A
   04DF 08                 2224 	.db #0x08
   04E0 02                 2225 	.db #0x02
   04E1 00                 2226 	.db #0x00
   04E2 10                 2227 	.db #0x10
   04E3 12                 2228 	.db #0x12
   04E4 0A                 2229 	.db #0x0A
   04E5 08                 2230 	.db #0x08
   04E6 02                 2231 	.db #0x02
   04E7 00                 2232 	.db #0x00
   04E8 10                 2233 	.db #0x10
   04E9 12                 2234 	.db #0x12
   04EA 0A                 2235 	.db #0x0A
   04EB 08                 2236 	.db #0x08
   04EC                    2237 _tri_inva1:
   04EC 1E                 2238 	.db #0x1E
   04ED 1F                 2239 	.db #0x1F
   04EE 1E                 2240 	.db #0x1E
   04EF 11                 2241 	.db #0x11
   04F0 13                 2242 	.db #0x13
   04F1 1E                 2243 	.db #0x1E
   04F2 08                 2244 	.db #0x08
   04F3 0A                 2245 	.db #0x0A
   04F4 00                 2246 	.db #0x00
   04F5 0E                 2247 	.db #0x0E
   04F6 10                 2248 	.db #0x10
   04F7 1E                 2249 	.db #0x1E
   04F8 1C                 2250 	.db #0x1C
   04F9 1E                 2251 	.db #0x1E
   04FA 08                 2252 	.db #0x08
   04FB 0A                 2253 	.db #0x0A
   04FC 1F                 2254 	.db #0x1F
   04FD 1F                 2255 	.db #0x1F
   04FE 1E                 2256 	.db #0x1E
   04FF 1E                 2257 	.db #0x1E
   0500 15                 2258 	.db #0x15
   0501 17                 2259 	.db #0x17
   0502 0A                 2260 	.db #0x0A
   0503 00                 2261 	.db #0x00
   0504 02                 2262 	.db #0x02
   0505 11                 2263 	.db #0x11
   0506 13                 2264 	.db #0x13
   0507 1F                 2265 	.db #0x1F
   0508 1C                 2266 	.db #0x1C
   0509 08                 2267 	.db #0x08
   050A 0A                 2268 	.db #0x0A
   050B 1F                 2269 	.db #0x1F
   050C 1E                 2270 	.db #0x1E
   050D 1F                 2271 	.db #0x1F
   050E 08                 2272 	.db #0x08
   050F 1B                 2273 	.db #0x1B
   0510 1A                 2274 	.db #0x1A
   0511 11                 2275 	.db #0x11
   0512 13                 2276 	.db #0x13
   0513 1C                 2277 	.db #0x1C
   0514 1E                 2278 	.db #0x1E
   0515 1F                 2279 	.db #0x1F
   0516 19                 2280 	.db #0x19
   0517 1E                 2281 	.db #0x1E
   0518 06                 2282 	.db #0x06
   0519 04                 2283 	.db #0x04
   051A 1C                 2284 	.db #0x1C
   051B 1C                 2285 	.db #0x1C
   051C 1E                 2286 	.db #0x1E
   051D 08                 2287 	.db #0x08
   051E 16                 2288 	.db #0x16
   051F 18                 2289 	.db #0x18
   0520 1B                 2290 	.db #0x1B
   0521 1E                 2291 	.db #0x1E
   0522 19                 2292 	.db #0x19
   0523 1D                 2293 	.db #0x1D
   0524 1F                 2294 	.db #0x1F
   0525 1E                 2295 	.db #0x1E
   0526 19                 2296 	.db #0x19
   0527 08                 2297 	.db #0x08
   0528 1B                 2298 	.db #0x1B
   0529 1E                 2299 	.db #0x1E
   052A 12                 2300 	.db #0x12
   052B 10                 2301 	.db #0x10
   052C 08                 2302 	.db #0x08
   052D 16                 2303 	.db #0x16
   052E 10                 2304 	.db #0x10
   052F 11                 2305 	.db #0x11
   0530 17                 2306 	.db #0x17
   0531 09                 2307 	.db #0x09
   0532 11                 2308 	.db #0x11
   0533 0F                 2309 	.db #0x0F
   0534 01                 2310 	.db #0x01
   0535 1E                 2311 	.db #0x1E
   0536 14                 2312 	.db #0x14
   0537 16                 2313 	.db #0x16
   0538 17                 2314 	.db #0x17
   0539 15                 2315 	.db #0x15
   053A 10                 2316 	.db #0x10
   053B 1E                 2317 	.db #0x1E
   053C 0A                 2318 	.db #0x0A
   053D 18                 2319 	.db #0x18
   053E 1F                 2320 	.db #0x1F
   053F 1E                 2321 	.db #0x1E
   0540 19                 2322 	.db #0x19
   0541 0B                 2323 	.db #0x0B
   0542 09                 2324 	.db #0x09
   0543 11                 2325 	.db #0x11
   0544 0F                 2326 	.db #0x0F
   0545 1C                 2327 	.db #0x1C
   0546 05                 2328 	.db #0x05
   0547 09                 2329 	.db #0x09
   0548 1E                 2330 	.db #0x1E
   0549 0B                 2331 	.db #0x0B
   054A 09                 2332 	.db #0x09
   054B 1F                 2333 	.db #0x1F
   054C 1E                 2334 	.db #0x1E
   054D 19                 2335 	.db #0x19
   054E 1E                 2336 	.db #0x1E
   054F 1F                 2337 	.db #0x1F
   0550 19                 2338 	.db #0x19
   0551 1E                 2339 	.db #0x1E
   0552 0B                 2340 	.db #0x0B
   0553 1B                 2341 	.db #0x1B
   0554 15                 2342 	.db #0x15
   0555 19                 2343 	.db #0x19
   0556 1D                 2344 	.db #0x1D
   0557 19                 2345 	.db #0x19
   0558 19                 2346 	.db #0x19
   0559 13                 2347 	.db #0x13
   055A 0B                 2348 	.db #0x0B
   055B 09                 2349 	.db #0x09
   055C 1E                 2350 	.db #0x1E
   055D 15                 2351 	.db #0x15
   055E 13                 2352 	.db #0x13
   055F 1E                 2353 	.db #0x1E
   0560 0C                 2354 	.db #0x0C
   0561 01                 2355 	.db #0x01
   0562 1E                 2356 	.db #0x1E
   0563 1F                 2357 	.db #0x1F
   0564 1E                 2358 	.db #0x1E
   0565 1E                 2359 	.db #0x1E
   0566 1C                 2360 	.db #0x1C
   0567 1D                 2361 	.db #0x1D
   0568 01                 2362 	.db #0x01
   0569 11                 2363 	.db #0x11
   056A 13                 2364 	.db #0x13
   056B 0B                 2365 	.db #0x0B
   056C 09                 2366 	.db #0x09
   056D 1A                 2367 	.db #0x1A
   056E 14                 2368 	.db #0x14
   056F 04                 2369 	.db #0x04
   0570 0E                 2370 	.db #0x0E
   0571 07                 2371 	.db #0x07
   0572 01                 2372 	.db #0x01
   0573 1E                 2373 	.db #0x1E
   0574 1F                 2374 	.db #0x1F
   0575 00                 2375 	.db #0x00
   0576 02                 2376 	.db #0x02
   0577 1E                 2377 	.db #0x1E
   0578 03                 2378 	.db #0x03
   0579 01                 2379 	.db #0x01
   057A 0C                 2380 	.db #0x0C
   057B 06                 2381 	.db #0x06
   057C 0B                 2382 	.db #0x0B
   057D 1B                 2383 	.db #0x1B
   057E 04                 2384 	.db #0x04
   057F 0E                 2385 	.db #0x0E
   0580 19                 2386 	.db #0x19
   0581 17                 2387 	.db #0x17
   0582 07                 2388 	.db #0x07
   0583 1D                 2389 	.db #0x1D
   0584 1C                 2390 	.db #0x1C
   0585 02                 2391 	.db #0x02
   0586 1F                 2392 	.db #0x1F
   0587 1E                 2393 	.db #0x1E
   0588 08                 2394 	.db #0x08
   0589 07                 2395 	.db #0x07
   058A 06                 2396 	.db #0x06
   058B 1E                 2397 	.db #0x1E
   058C 08                 2398 	.db #0x08
   058D 04                 2399 	.db #0x04
   058E 0E                 2400 	.db #0x0E
   058F 14                 2401 	.db #0x14
   0590 09                 2402 	.db #0x09
   0591 11                 2403 	.db #0x11
   0592 17                 2404 	.db #0x17
   0593 07                 2405 	.db #0x07
   0594 1D                 2406 	.db #0x1D
   0595 1F                 2407 	.db #0x1F
   0596 1E                 2408 	.db #0x1E
   0597 08                 2409 	.db #0x08
   0598 0A                 2410 	.db #0x0A
   0599 1E                 2411 	.db #0x1E
   059A 1F                 2412 	.db #0x1F
   059B 1F                 2413 	.db #0x1F
   059C 04                 2414 	.db #0x04
   059D 0E                 2415 	.db #0x0E
   059E 14                 2416 	.db #0x14
   059F 0A                 2417 	.db #0x0A
   05A0 0B                 2418 	.db #0x0B
   05A1 09                 2419 	.db #0x09
   05A2 11                 2420 	.db #0x11
   05A3 17                 2421 	.db #0x17
   05A4 07                 2422 	.db #0x07
   05A5 01                 2423 	.db #0x01
   05A6 08                 2424 	.db #0x08
   05A7 0A                 2425 	.db #0x0A
   05A8 1E                 2426 	.db #0x1E
   05A9 1F                 2427 	.db #0x1F
   05AA 1F                 2428 	.db #0x1F
   05AB 1E                 2429 	.db #0x1E
   05AC                    2430 _tri_inva2:
   05AC 14                 2431 	.db #0x14
   05AD 04                 2432 	.db #0x04
   05AE 0E                 2433 	.db #0x0E
   05AF 14                 2434 	.db #0x14
   05B0 04                 2435 	.db #0x04
   05B1 0E                 2436 	.db #0x0E
   05B2 14                 2437 	.db #0x14
   05B3 1A                 2438 	.db #0x1A
   05B4 1B                 2439 	.db #0x1B
   05B5 15                 2440 	.db #0x15
   05B6 0F                 2441 	.db #0x0F
   05B7 05                 2442 	.db #0x05
   05B8 15                 2443 	.db #0x15
   05B9 0F                 2444 	.db #0x0F
   05BA 05                 2445 	.db #0x05
   05BB 15                 2446 	.db #0x15
   05BC 04                 2447 	.db #0x04
   05BD 0E                 2448 	.db #0x0E
   05BE 14                 2449 	.db #0x14
   05BF 04                 2450 	.db #0x04
   05C0 0E                 2451 	.db #0x0E
   05C1 14                 2452 	.db #0x14
   05C2 04                 2453 	.db #0x04
   05C3 1C                 2454 	.db #0x1C
   05C4 1D                 2455 	.db #0x1D
   05C5 05                 2456 	.db #0x05
   05C6 15                 2457 	.db #0x15
   05C7 0F                 2458 	.db #0x0F
   05C8 05                 2459 	.db #0x05
   05C9 15                 2460 	.db #0x15
   05CA 0F                 2461 	.db #0x0F
   05CB 05                 2462 	.db #0x05
   05CC 0E                 2463 	.db #0x0E
   05CD 14                 2464 	.db #0x14
   05CE 04                 2465 	.db #0x04
   05CF 0E                 2466 	.db #0x0E
   05D0 14                 2467 	.db #0x14
   05D1 04                 2468 	.db #0x04
   05D2 0E                 2469 	.db #0x0E
   05D3 18                 2470 	.db #0x18
   05D4 19                 2471 	.db #0x19
   05D5 0F                 2472 	.db #0x0F
   05D6 05                 2473 	.db #0x05
   05D7 15                 2474 	.db #0x15
   05D8 0F                 2475 	.db #0x0F
   05D9 05                 2476 	.db #0x05
   05DA 15                 2477 	.db #0x15
   05DB 0F                 2478 	.db #0x0F
   05DC 18                 2479 	.db #0x18
   05DD 1A                 2480 	.db #0x1A
   05DE 1C                 2481 	.db #0x1C
   05DF 18                 2482 	.db #0x18
   05E0 1A                 2483 	.db #0x1A
   05E1 1C                 2484 	.db #0x1C
   05E2 18                 2485 	.db #0x18
   05E3 18                 2486 	.db #0x18
   05E4 19                 2487 	.db #0x19
   05E5 19                 2488 	.db #0x19
   05E6 1D                 2489 	.db #0x1D
   05E7 1B                 2490 	.db #0x1B
   05E8 19                 2491 	.db #0x19
   05E9 1D                 2492 	.db #0x1D
   05EA 1B                 2493 	.db #0x1B
   05EB 19                 2494 	.db #0x19
   05EC 18                 2495 	.db #0x18
   05ED 1A                 2496 	.db #0x1A
   05EE 1C                 2497 	.db #0x1C
   05EF 18                 2498 	.db #0x18
   05F0 1A                 2499 	.db #0x1A
   05F1 1C                 2500 	.db #0x1C
   05F2 18                 2501 	.db #0x18
   05F3 18                 2502 	.db #0x18
   05F4 0D                 2503 	.db #0x0D
   05F5 19                 2504 	.db #0x19
   05F6 1D                 2505 	.db #0x1D
   05F7 1B                 2506 	.db #0x1B
   05F8 19                 2507 	.db #0x19
   05F9 1D                 2508 	.db #0x1D
   05FA 1B                 2509 	.db #0x1B
   05FB 19                 2510 	.db #0x19
   05FC 19                 2511 	.db #0x19
   05FD 1B                 2512 	.db #0x1B
   05FE 1D                 2513 	.db #0x1D
   05FF 19                 2514 	.db #0x19
   0600 1B                 2515 	.db #0x1B
   0601 1D                 2516 	.db #0x1D
   0602 19                 2517 	.db #0x19
   0603 0C                 2518 	.db #0x0C
   0604 0E                 2519 	.db #0x0E
   0605 18                 2520 	.db #0x18
   0606 1C                 2521 	.db #0x1C
   0607 1A                 2522 	.db #0x1A
   0608 18                 2523 	.db #0x18
   0609 1C                 2524 	.db #0x1C
   060A 1A                 2525 	.db #0x1A
   060B 18                 2526 	.db #0x18
   060C 19                 2527 	.db #0x19
   060D 1B                 2528 	.db #0x1B
   060E 1D                 2529 	.db #0x1D
   060F 19                 2530 	.db #0x19
   0610 1B                 2531 	.db #0x1B
   0611 1D                 2532 	.db #0x1D
   0612 19                 2533 	.db #0x19
   0613 0F                 2534 	.db #0x0F
   0614 0D                 2535 	.db #0x0D
   0615 18                 2536 	.db #0x18
   0616 1C                 2537 	.db #0x1C
   0617 1A                 2538 	.db #0x1A
   0618 18                 2539 	.db #0x18
   0619 1C                 2540 	.db #0x1C
   061A 1A                 2541 	.db #0x1A
   061B 18                 2542 	.db #0x18
   061C 0D                 2543 	.db #0x0D
   061D 17                 2544 	.db #0x17
   061E 07                 2545 	.db #0x07
   061F 0D                 2546 	.db #0x0D
   0620 17                 2547 	.db #0x17
   0621 07                 2548 	.db #0x07
   0622 0D                 2549 	.db #0x0D
   0623 0C                 2550 	.db #0x0C
   0624 0E                 2551 	.db #0x0E
   0625 0C                 2552 	.db #0x0C
   0626 06                 2553 	.db #0x06
   0627 16                 2554 	.db #0x16
   0628 0C                 2555 	.db #0x0C
   0629 06                 2556 	.db #0x06
   062A 16                 2557 	.db #0x16
   062B 0C                 2558 	.db #0x0C
   062C 07                 2559 	.db #0x07
   062D 0D                 2560 	.db #0x0D
   062E 17                 2561 	.db #0x17
   062F 07                 2562 	.db #0x07
   0630 0D                 2563 	.db #0x0D
   0631 17                 2564 	.db #0x17
   0632 02                 2565 	.db #0x02
   0633 1A                 2566 	.db #0x1A
   0634 1A                 2567 	.db #0x1A
   0635 03                 2568 	.db #0x03
   0636 16                 2569 	.db #0x16
   0637 0C                 2570 	.db #0x0C
   0638 06                 2571 	.db #0x06
   0639 16                 2572 	.db #0x16
   063A 0C                 2573 	.db #0x0C
   063B 06                 2574 	.db #0x06
   063C 17                 2575 	.db #0x17
   063D 07                 2576 	.db #0x07
   063E 0D                 2577 	.db #0x0D
   063F 17                 2578 	.db #0x17
   0640 07                 2579 	.db #0x07
   0641 10                 2580 	.db #0x10
   0642 1F                 2581 	.db #0x1F
   0643 1A                 2582 	.db #0x1A
   0644 1A                 2583 	.db #0x1A
   0645 1F                 2584 	.db #0x1F
   0646 11                 2585 	.db #0x11
   0647 06                 2586 	.db #0x06
   0648 16                 2587 	.db #0x16
   0649 0C                 2588 	.db #0x0C
   064A 06                 2589 	.db #0x06
   064B 16                 2590 	.db #0x16
   064C 0D                 2591 	.db #0x0D
   064D 17                 2592 	.db #0x17
   064E 07                 2593 	.db #0x07
   064F 0D                 2594 	.db #0x0D
   0650 0A                 2595 	.db #0x0A
   0651 1F                 2596 	.db #0x1F
   0652 1F                 2597 	.db #0x1F
   0653 1A                 2598 	.db #0x1A
   0654 1A                 2599 	.db #0x1A
   0655 1F                 2600 	.db #0x1F
   0656 1F                 2601 	.db #0x1F
   0657 0B                 2602 	.db #0x0B
   0658 0C                 2603 	.db #0x0C
   0659 06                 2604 	.db #0x06
   065A 16                 2605 	.db #0x16
   065B 0C                 2606 	.db #0x0C
   065C 07                 2607 	.db #0x07
   065D 0D                 2608 	.db #0x0D
   065E 17                 2609 	.db #0x17
   065F 02                 2610 	.db #0x02
   0660 1F                 2611 	.db #0x1F
   0661 1F                 2612 	.db #0x1F
   0662 1F                 2613 	.db #0x1F
   0663 1F                 2614 	.db #0x1F
   0664 1F                 2615 	.db #0x1F
   0665 1F                 2616 	.db #0x1F
   0666 1F                 2617 	.db #0x1F
   0667 1F                 2618 	.db #0x1F
   0668 03                 2619 	.db #0x03
   0669 16                 2620 	.db #0x16
   066A 0C                 2621 	.db #0x0C
   066B 06                 2622 	.db #0x06
   066C                    2623 _tri_inva3:
   066C 1A                 2624 	.db #0x1A
   066D 1C                 2625 	.db #0x1C
   066E 18                 2626 	.db #0x18
   066F 1A                 2627 	.db #0x1A
   0670 1C                 2628 	.db #0x1C
   0671 18                 2629 	.db #0x18
   0672 1A                 2630 	.db #0x1A
   0673 1E                 2631 	.db #0x1E
   0674 00                 2632 	.db #0x00
   0675 1C                 2633 	.db #0x1C
   0676 1C                 2634 	.db #0x1C
   0677 1D                 2635 	.db #0x1D
   0678 1C                 2636 	.db #0x1C
   0679 1C                 2637 	.db #0x1C
   067A 1D                 2638 	.db #0x1D
   067B 1C                 2639 	.db #0x1C
   067C 1A                 2640 	.db #0x1A
   067D 1C                 2641 	.db #0x1C
   067E 18                 2642 	.db #0x18
   067F 1A                 2643 	.db #0x1A
   0680 1C                 2644 	.db #0x1C
   0681 18                 2645 	.db #0x18
   0682 1A                 2646 	.db #0x1A
   0683 1F                 2647 	.db #0x1F
   0684 1C                 2648 	.db #0x1C
   0685 18                 2649 	.db #0x18
   0686 1F                 2650 	.db #0x1F
   0687 1C                 2651 	.db #0x1C
   0688 1D                 2652 	.db #0x1D
   0689 1D                 2653 	.db #0x1D
   068A 1C                 2654 	.db #0x1C
   068B 1D                 2655 	.db #0x1D
   068C 04                 2656 	.db #0x04
   068D 0E                 2657 	.db #0x0E
   068E 14                 2658 	.db #0x14
   068F 04                 2659 	.db #0x04
   0690 0E                 2660 	.db #0x0E
   0691 14                 2661 	.db #0x14
   0692 0A                 2662 	.db #0x0A
   0693 1E                 2663 	.db #0x1E
   0694 1C                 2664 	.db #0x1C
   0695 0D                 2665 	.db #0x0D
   0696 18                 2666 	.db #0x18
   0697 1C                 2667 	.db #0x1C
   0698 1C                 2668 	.db #0x1C
   0699 1C                 2669 	.db #0x1C
   069A 1C                 2670 	.db #0x1C
   069B 1C                 2671 	.db #0x1C
   069C 1C                 2672 	.db #0x1C
   069D 18                 2673 	.db #0x18
   069E 1A                 2674 	.db #0x1A
   069F 1C                 2675 	.db #0x1C
   06A0 18                 2676 	.db #0x18
   06A1 1A                 2677 	.db #0x1A
   06A2 1E                 2678 	.db #0x1E
   06A3 00                 2679 	.db #0x00
   06A4 1C                 2680 	.db #0x1C
   06A5 1D                 2681 	.db #0x1D
   06A6 1C                 2682 	.db #0x1C
   06A7 1C                 2683 	.db #0x1C
   06A8 1D                 2684 	.db #0x1D
   06A9 18                 2685 	.db #0x18
   06AA 0F                 2686 	.db #0x0F
   06AB 1C                 2687 	.db #0x1C
   06AC 1C                 2688 	.db #0x1C
   06AD 18                 2689 	.db #0x18
   06AE 1A                 2690 	.db #0x1A
   06AF 1C                 2691 	.db #0x1C
   06B0 18                 2692 	.db #0x18
   06B1 1A                 2693 	.db #0x1A
   06B2 1F                 2694 	.db #0x1F
   06B3 1C                 2695 	.db #0x1C
   06B4 1D                 2696 	.db #0x1D
   06B5 02                 2697 	.db #0x02
   06B6 1C                 2698 	.db #0x1C
   06B7 02                 2699 	.db #0x02
   06B8 1D                 2700 	.db #0x1D
   06B9 1F                 2701 	.db #0x1F
   06BA 18                 2702 	.db #0x18
   06BB 1C                 2703 	.db #0x1C
   06BC 1C                 2704 	.db #0x1C
   06BD 18                 2705 	.db #0x18
   06BE 1A                 2706 	.db #0x1A
   06BF 1C                 2707 	.db #0x1C
   06C0 18                 2708 	.db #0x18
   06C1 1A                 2709 	.db #0x1A
   06C2 1F                 2710 	.db #0x1F
   06C3 03                 2711 	.db #0x03
   06C4 1C                 2712 	.db #0x1C
   06C5 1D                 2713 	.db #0x1D
   06C6 1C                 2714 	.db #0x1C
   06C7 1C                 2715 	.db #0x1C
   06C8 1C                 2716 	.db #0x1C
   06C9 1C                 2717 	.db #0x1C
   06CA 1D                 2718 	.db #0x1D
   06CB 1C                 2719 	.db #0x1C
   06CC 0E                 2720 	.db #0x0E
   06CD 14                 2721 	.db #0x14
   06CE 04                 2722 	.db #0x04
   06CF 0E                 2723 	.db #0x0E
   06D0 14                 2724 	.db #0x14
   06D1 0A                 2725 	.db #0x0A
   06D2 1E                 2726 	.db #0x1E
   06D3 00                 2727 	.db #0x00
   06D4 0B                 2728 	.db #0x0B
   06D5 0A                 2729 	.db #0x0A
   06D6 0B                 2730 	.db #0x0B
   06D7 0A                 2731 	.db #0x0A
   06D8 0B                 2732 	.db #0x0B
   06D9 0A                 2733 	.db #0x0A
   06DA 1D                 2734 	.db #0x1D
   06DB 1C                 2735 	.db #0x1C
   06DC 14                 2736 	.db #0x14
   06DD 04                 2737 	.db #0x04
   06DE 0E                 2738 	.db #0x0E
   06DF 14                 2739 	.db #0x14
   06E0 0A                 2740 	.db #0x0A
   06E1 1F                 2741 	.db #0x1F
   06E2 1E                 2742 	.db #0x1E
   06E3 1C                 2743 	.db #0x1C
   06E4 1F                 2744 	.db #0x1F
   06E5 1E                 2745 	.db #0x1E
   06E6 1F                 2746 	.db #0x1F
   06E7 1E                 2747 	.db #0x1E
   06E8 1F                 2748 	.db #0x1F
   06E9 1E                 2749 	.db #0x1E
   06EA 1D                 2750 	.db #0x1D
   06EB 1C                 2751 	.db #0x1C
   06EC 1A                 2752 	.db #0x1A
   06ED 1C                 2753 	.db #0x1C
   06EE 18                 2754 	.db #0x18
   06EF 1A                 2755 	.db #0x1A
   06F0 1F                 2756 	.db #0x1F
   06F1 12                 2757 	.db #0x12
   06F2 18                 2758 	.db #0x18
   06F3 18                 2759 	.db #0x18
   06F4 19                 2760 	.db #0x19
   06F5 19                 2761 	.db #0x19
   06F6 13                 2762 	.db #0x13
   06F7 1E                 2763 	.db #0x1E
   06F8 1F                 2764 	.db #0x1F
   06F9 1E                 2765 	.db #0x1E
   06FA 1D                 2766 	.db #0x1D
   06FB 1C                 2767 	.db #0x1C
   06FC 1B                 2768 	.db #0x1B
   06FD 1D                 2769 	.db #0x1D
   06FE 19                 2770 	.db #0x19
   06FF 1B                 2771 	.db #0x1B
   0700 1E                 2772 	.db #0x1E
   0701 18                 2773 	.db #0x18
   0702 18                 2774 	.db #0x18
   0703 18                 2775 	.db #0x18
   0704 19                 2776 	.db #0x19
   0705 19                 2777 	.db #0x19
   0706 19                 2778 	.db #0x19
   0707 13                 2779 	.db #0x13
   0708 1F                 2780 	.db #0x1F
   0709 00                 2781 	.db #0x00
   070A 1C                 2782 	.db #0x1C
   070B 1C                 2783 	.db #0x1C
   070C 1B                 2784 	.db #0x1B
   070D 1D                 2785 	.db #0x1D
   070E 19                 2786 	.db #0x19
   070F 1B                 2787 	.db #0x1B
   0710 1F                 2788 	.db #0x1F
   0711 18                 2789 	.db #0x18
   0712 18                 2790 	.db #0x18
   0713 0C                 2791 	.db #0x0C
   0714 1C                 2792 	.db #0x1C
   0715 1C                 2793 	.db #0x1C
   0716 1C                 2794 	.db #0x1C
   0717 1C                 2795 	.db #0x1C
   0718 1C                 2796 	.db #0x1C
   0719 1C                 2797 	.db #0x1C
   071A 1C                 2798 	.db #0x1C
   071B 1C                 2799 	.db #0x1C
   071C 17                 2800 	.db #0x17
   071D 07                 2801 	.db #0x07
   071E 0D                 2802 	.db #0x0D
   071F 17                 2803 	.db #0x17
   0720 09                 2804 	.db #0x09
   0721 1E                 2805 	.db #0x1E
   0722 1F                 2806 	.db #0x1F
   0723 1D                 2807 	.db #0x1D
   0724 1D                 2808 	.db #0x1D
   0725 1D                 2809 	.db #0x1D
   0726 1C                 2810 	.db #0x1C
   0727 1D                 2811 	.db #0x1D
   0728 1C                 2812 	.db #0x1C
   0729 1C                 2813 	.db #0x1C
   072A 1C                 2814 	.db #0x1C
   072B 1C                 2815 	.db #0x1C
   072C                    2816 _tri_inva4:
   072C 1E                 2817 	.db #0x1E
   072D 00                 2818 	.db #0x00
   072E 05                 2819 	.db #0x05
   072F 0A                 2820 	.db #0x0A
   0730 1E                 2821 	.db #0x1E
   0731 00                 2822 	.db #0x00
   0732 06                 2823 	.db #0x06
   0733 16                 2824 	.db #0x16
   0734 0F                 2825 	.db #0x0F
   0735 01                 2826 	.db #0x01
   0736 1F                 2827 	.db #0x1F
   0737 11                 2828 	.db #0x11
   0738 0C                 2829 	.db #0x0C
   0739 01                 2830 	.db #0x01
   073A 1F                 2831 	.db #0x1F
   073B 1F                 2832 	.db #0x1F
   073C 12                 2833 	.db #0x12
   073D 0F                 2834 	.db #0x0F
   073E 02                 2835 	.db #0x02
   073F 1E                 2836 	.db #0x1E
   0740 12                 2837 	.db #0x12
   0741 0F                 2838 	.db #0x0F
   0742 05                 2839 	.db #0x05
   0743 15                 2840 	.db #0x15
   0744 0C                 2841 	.db #0x0C
   0745 06                 2842 	.db #0x06
   0746 09                 2843 	.db #0x09
   0747 1F                 2844 	.db #0x1F
   0748 03                 2845 	.db #0x03
   0749 06                 2846 	.db #0x06
   074A 09                 2847 	.db #0x09
   074B 1F                 2848 	.db #0x1F
   074C 15                 2849 	.db #0x15
   074D 10                 2850 	.db #0x10
   074E 1E                 2851 	.db #0x1E
   074F 08                 2852 	.db #0x08
   0750 15                 2853 	.db #0x15
   0751 10                 2854 	.db #0x10
   0752 1E                 2855 	.db #0x1E
   0753 1F                 2856 	.db #0x1F
   0754 1F                 2857 	.db #0x1F
   0755 0B                 2858 	.db #0x0B
   0756 16                 2859 	.db #0x16
   0757 13                 2860 	.db #0x13
   0758 1F                 2861 	.db #0x1F
   0759 0B                 2862 	.db #0x0B
   075A 16                 2863 	.db #0x16
   075B 13                 2864 	.db #0x13
   075C 05                 2865 	.db #0x05
   075D 1E                 2866 	.db #0x1E
   075E 00                 2867 	.db #0x00
   075F 05                 2868 	.db #0x05
   0760 0A                 2869 	.db #0x0A
   0761 1E                 2870 	.db #0x1E
   0762 08                 2871 	.db #0x08
   0763 15                 2872 	.db #0x15
   0764 13                 2873 	.db #0x13
   0765 1F                 2874 	.db #0x1F
   0766 11                 2875 	.db #0x11
   0767 0D                 2876 	.db #0x0D
   0768 01                 2877 	.db #0x01
   0769 1F                 2878 	.db #0x1F
   076A 0C                 2879 	.db #0x0C
   076B 0D                 2880 	.db #0x0D
   076C 02                 2881 	.db #0x02
   076D 1E                 2882 	.db #0x1E
   076E 0E                 2883 	.db #0x0E
   076F 0F                 2884 	.db #0x0F
   0770 1E                 2885 	.db #0x1E
   0771 00                 2886 	.db #0x00
   0772 05                 2887 	.db #0x05
   0773 15                 2888 	.db #0x15
   0774 0C                 2889 	.db #0x0C
   0775 01                 2890 	.db #0x01
   0776 1F                 2891 	.db #0x1F
   0777 07                 2892 	.db #0x07
   0778 07                 2893 	.db #0x07
   0779 1F                 2894 	.db #0x1F
   077A 06                 2895 	.db #0x06
   077B 07                 2896 	.db #0x07
   077C 1E                 2897 	.db #0x1E
   077D 1E                 2898 	.db #0x1E
   077E 15                 2899 	.db #0x15
   077F 15                 2900 	.db #0x15
   0780 1E                 2901 	.db #0x1E
   0781 0F                 2902 	.db #0x0F
   0782 02                 2903 	.db #0x02
   0783 1E                 2904 	.db #0x1E
   0784 07                 2905 	.db #0x07
   0785 06                 2906 	.db #0x06
   0786 1F                 2907 	.db #0x1F
   0787 17                 2908 	.db #0x17
   0788 17                 2909 	.db #0x17
   0789 1E                 2910 	.db #0x1E
   078A 17                 2911 	.db #0x17
   078B 16                 2912 	.db #0x16
   078C 1F                 2913 	.db #0x1F
   078D 1F                 2914 	.db #0x1F
   078E 04                 2915 	.db #0x04
   078F 05                 2916 	.db #0x05
   0790 1F                 2917 	.db #0x1F
   0791 14                 2918 	.db #0x14
   0792 09                 2919 	.db #0x09
   0793 11                 2920 	.db #0x11
   0794 17                 2921 	.db #0x17
   0795 0A                 2922 	.db #0x0A
   0796 1E                 2923 	.db #0x1E
   0797 0D                 2924 	.db #0x0D
   0798 0D                 2925 	.db #0x0D
   0799 1E                 2926 	.db #0x1E
   079A 0D                 2927 	.db #0x0D
   079B 0C                 2928 	.db #0x0C
   079C 09                 2929 	.db #0x09
   079D 1F                 2930 	.db #0x1F
   079E 0E                 2931 	.db #0x0E
   079F 0F                 2932 	.db #0x0F
   07A0 1F                 2933 	.db #0x1F
   07A1 04                 2934 	.db #0x04
   07A2 04                 2935 	.db #0x04
   07A3 1F                 2936 	.db #0x1F
   07A4 1F                 2937 	.db #0x1F
   07A5 1E                 2938 	.db #0x1E
   07A6 08                 2939 	.db #0x08
   07A7 06                 2940 	.db #0x06
   07A8 07                 2941 	.db #0x07
   07A9 1E                 2942 	.db #0x1E
   07AA 07                 2943 	.db #0x07
   07AB 06                 2944 	.db #0x06
   07AC 04                 2945 	.db #0x04
   07AD 1F                 2946 	.db #0x1F
   07AE 11                 2947 	.db #0x11
   07AF 14                 2948 	.db #0x14
   07B0 1F                 2949 	.db #0x1F
   07B1 03                 2950 	.db #0x03
   07B2 0E                 2951 	.db #0x0E
   07B3 14                 2952 	.db #0x14
   07B4 07                 2953 	.db #0x07
   07B5 0D                 2954 	.db #0x0D
   07B6 17                 2955 	.db #0x17
   07B7 0A                 2956 	.db #0x0A
   07B8 1E                 2957 	.db #0x1E
   07B9 12                 2958 	.db #0x12
   07BA 17                 2959 	.db #0x17
   07BB 0A                 2960 	.db #0x0A
   07BC 0E                 2961 	.db #0x0E
   07BD 1F                 2962 	.db #0x1F
   07BE 1F                 2963 	.db #0x1F
   07BF 04                 2964 	.db #0x04
   07C0 01                 2965 	.db #0x01
   07C1 1F                 2966 	.db #0x1F
   07C2 11                 2967 	.db #0x11
   07C3 17                 2968 	.db #0x17
   07C4 07                 2969 	.db #0x07
   07C5 0D                 2970 	.db #0x0D
   07C6 10                 2971 	.db #0x10
   07C7 1E                 2972 	.db #0x1E
   07C8 00                 2973 	.db #0x00
   07C9 0D                 2974 	.db #0x0D
   07CA 10                 2975 	.db #0x10
   07CB 1E                 2976 	.db #0x1E
   07CC 14                 2977 	.db #0x14
   07CD 09                 2978 	.db #0x09
   07CE 1F                 2979 	.db #0x1F
   07CF 03                 2980 	.db #0x03
   07D0 0E                 2981 	.db #0x0E
   07D1 13                 2982 	.db #0x13
   07D2 1F                 2983 	.db #0x1F
   07D3 1F                 2984 	.db #0x1F
   07D4 1F                 2985 	.db #0x1F
   07D5 1E                 2986 	.db #0x1E
   07D6 1E                 2987 	.db #0x1E
   07D7 08                 2988 	.db #0x08
   07D8 07                 2989 	.db #0x07
   07D9 02                 2990 	.db #0x02
   07DA 1E                 2991 	.db #0x1E
   07DB 1E                 2992 	.db #0x1E
   07DC 0B                 2993 	.db #0x0B
   07DD 04                 2994 	.db #0x04
   07DE 01                 2995 	.db #0x01
   07DF 1F                 2996 	.db #0x1F
   07E0 11                 2997 	.db #0x11
   07E1 14                 2998 	.db #0x14
   07E2 04                 2999 	.db #0x04
   07E3 0E                 3000 	.db #0x0E
   07E4 17                 3001 	.db #0x17
   07E5 07                 3002 	.db #0x07
   07E6 0D                 3003 	.db #0x0D
   07E7 17                 3004 	.db #0x17
   07E8 0A                 3005 	.db #0x0A
   07E9 1E                 3006 	.db #0x1E
   07EA 1E                 3007 	.db #0x1E
   07EB 1E                 3008 	.db #0x1E
                           3009 ;demo.c:243: void my_isr(void) interrupt
                           3010 ;	---------------------------------
                           3011 ; Function my_isr
                           3012 ; ---------------------------------
   07EC                    3013 _my_isr_start::
   07EC                    3014 _my_isr:
   07EC F5                 3015 	push	af
   07ED C5                 3016 	push	bc
   07EE D5                 3017 	push	de
   07EF E5                 3018 	push	hl
   07F0 FD E5              3019 	push	iy
                           3020 ;demo.c:245: DI;
   07F2 F3                 3021 		di 
                           3022 ;demo.c:247: READ_VDP_STATUS;
   07F3 DB 99              3023 		in a,(#0x99) 
                           3024 ;demo.c:249: PLY_Play();
   07F5 CDr00s00           3025 	call	_PLY_Play
                           3026 ;demo.c:250: PLY_SendRegisters();
   07F8 CDr00s00           3027 	call	_PLY_SendRegisters
                           3028 ;demo.c:252: vbicount+=1;
   07FB FD 21r26s41        3029 	ld	iy,#_vbicount
   07FF FD 34 00           3030 	inc	0 (iy)
   0802 20 07              3031 	jr	NZ,00103$
   0804 FD 21r26s41        3032 	ld	iy,#_vbicount
   0808 FD 34 01           3033 	inc	1 (iy)
   080B                    3034 00103$:
                           3035 ;demo.c:253: tick++;
   080B FD 21r28s41        3036 	ld	iy,#_tick
   080F FD 34 00           3037 	inc	0 (iy)
   0812 20 07              3038 	jr	NZ,00104$
   0814 FD 21r28s41        3039 	ld	iy,#_tick
   0818 FD 34 01           3040 	inc	1 (iy)
   081B                    3041 00104$:
                           3042 ;demo.c:255: EI;
   081B FB                 3043 		ei 
   081C FD E1              3044 	pop	iy
   081E E1                 3045 	pop	hl
   081F D1                 3046 	pop	de
   0820 C1                 3047 	pop	bc
   0821 F1                 3048 	pop	af
   0822 ED 4D              3049 	reti
   0824                    3050 _my_isr_end::
                           3051 ;demo.c:263: void scratch_clear() {
                           3052 ;	---------------------------------
                           3053 ; Function scratch_clear
                           3054 ; ---------------------------------
   0824                    3055 _scratch_clear_start::
   0824                    3056 _scratch_clear:
                           3057 ;demo.c:264: memset((uint8_t *) &scratch, 0, 128);
   0824 21 80 00           3058 	ld	hl,#0x0080
   0827 E5                 3059 	push	hl
   0828 3E 00              3060 	ld	a,#0x00
   082A F5                 3061 	push	af
   082B 33                 3062 	inc	sp
   082C 21rC6s3F           3063 	ld	hl,#_scratch
   082F E5                 3064 	push	hl
   0830 CDr00s00           3065 	call	_memset
   0833 F1                 3066 	pop	af
   0834 F1                 3067 	pop	af
   0835 33                 3068 	inc	sp
   0836 C9                 3069 	ret
   0837                    3070 _scratch_clear_end::
                           3071 ;demo.c:267: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3072 ;	---------------------------------
                           3073 ; Function pal_load
                           3074 ; ---------------------------------
   0837                    3075 _pal_load_start::
   0837                    3076 _pal_load:
   0837 DD E5              3077 	push	ix
   0839 DD 21 00 00        3078 	ld	ix,#0
   083D DD 39              3079 	add	ix,sp
   083F 21 D2 FF           3080 	ld	hl,#-46
   0842 39                 3081 	add	hl,sp
   0843 F9                 3082 	ld	sp,hl
                           3083 ;demo.c:270: if(debugprint == 1) {
   0844 DD 7E 07           3084 	ld	a,7 (ix)
   0847 D6 01              3085 	sub	a,#0x01
   0849 20 06              3086 	jr	NZ,00115$
   084B DD 7E 08           3087 	ld	a,8 (ix)
   084E B7                 3088 	or	a,a
   084F 28 02              3089 	jr	Z,00116$
   0851                    3090 00115$:
   0851 18 1B              3091 	jr	00102$
   0853                    3092 00116$:
                           3093 ;demo.c:271: puts("loading palfile: ");
   0853 21r01s09           3094 	ld	hl,#__str_0
   0856 E5                 3095 	push	hl
   0857 CDr00s00           3096 	call	_puts
   085A F1                 3097 	pop	af
                           3098 ;demo.c:272: puts(file_name);
   085B DD 6E 04           3099 	ld	l,4 (ix)
   085E DD 66 05           3100 	ld	h,5 (ix)
   0861 E5                 3101 	push	hl
   0862 CDr00s00           3102 	call	_puts
   0865 F1                 3103 	pop	af
                           3104 ;demo.c:273: puts("\r\n");
   0866 21r13s09           3105 	ld	hl,#__str_1
   0869 E5                 3106 	push	hl
   086A CDr00s00           3107 	call	_puts
   086D F1                 3108 	pop	af
   086E                    3109 00102$:
                           3110 ;demo.c:276: memset((uint8_t *) &f, 0, sizeof(fcb));
   086E 21 00 00           3111 	ld	hl,#0x0000
   0871 39                 3112 	add	hl,sp
   0872 4D                 3113 	ld	c,l
   0873 44                 3114 	ld	b,h
   0874 21 2E 00           3115 	ld	hl,#0x002E
   0877 E5                 3116 	push	hl
   0878 3E 00              3117 	ld	a,#0x00
   087A F5                 3118 	push	af
   087B 33                 3119 	inc	sp
   087C C5                 3120 	push	bc
   087D CDr00s00           3121 	call	_memset
   0880 F1                 3122 	pop	af
   0881 F1                 3123 	pop	af
   0882 33                 3124 	inc	sp
                           3125 ;demo.c:277: scratch_clear();
   0883 CDr24s08           3126 	call	_scratch_clear
                           3127 ;demo.c:279: f.record_size = ss;
   0886 21 00 00           3128 	ld	hl,#0x0000
   0889 39                 3129 	add	hl,sp
   088A 4D                 3130 	ld	c,l
   088B 44                 3131 	ld	b,h
   088C 21 0F 00           3132 	ld	hl,#0x000F
   088F 09                 3133 	add	hl,bc
   0890 EB                 3134 	ex	de,hl
   0891 DD 7E 06           3135 	ld	a,6 (ix)
   0894 12                 3136 	ld	(de),a
                           3137 ;demo.c:280: f.drive = 0;
   0895 3E 00              3138 	ld	a,#0x00
   0897 02                 3139 	ld	(bc),a
                           3140 ;demo.c:282: memcpy(f.name, file_name, 11);
   0898 DD 5E 04           3141 	ld	e,4 (ix)
   089B DD 56 05           3142 	ld	d,5 (ix)
   089E 03                 3143 	inc	bc
   089F 21 0B 00           3144 	ld	hl,#0x000B
   08A2 E5                 3145 	push	hl
   08A3 D5                 3146 	push	de
   08A4 C5                 3147 	push	bc
   08A5 CDr00s00           3148 	call	_memcpy
   08A8 F1                 3149 	pop	af
   08A9 F1                 3150 	pop	af
   08AA F1                 3151 	pop	af
                           3152 ;demo.c:284: if (open(&f) != 0) return 0;
   08AB 21 00 00           3153 	ld	hl,#0x0000
   08AE 39                 3154 	add	hl,sp
   08AF E5                 3155 	push	hl
   08B0 CDr00s00           3156 	call	_open
   08B3 F1                 3157 	pop	af
   08B4 AF                 3158 	xor	a,a
   08B5 B5                 3159 	or	a,l
   08B6 28 04              3160 	jr	Z,00104$
   08B8 2E 00              3161 	ld	l,#0x00
   08BA 18 40              3162 	jr	00109$
   08BC                    3163 00104$:
                           3164 ;demo.c:285: if (block_set_data_ptr(scratch) != 0) return 0;
   08BC 21rC6s3F           3165 	ld	hl,#_scratch
   08BF E5                 3166 	push	hl
   08C0 CDr00s00           3167 	call	_block_set_data_ptr
   08C3 F1                 3168 	pop	af
   08C4 AF                 3169 	xor	a,a
   08C5 B5                 3170 	or	a,l
   08C6 28 04              3171 	jr	Z,00106$
   08C8 2E 00              3172 	ld	l,#0x00
   08CA 18 30              3173 	jr	00109$
   08CC                    3174 00106$:
                           3175 ;demo.c:286: if (block_read(&f) != 0) return 0;
   08CC 21 00 00           3176 	ld	hl,#0x0000
   08CF 39                 3177 	add	hl,sp
   08D0 E5                 3178 	push	hl
   08D1 CDr00s00           3179 	call	_block_read
   08D4 F1                 3180 	pop	af
   08D5 AF                 3181 	xor	a,a
   08D6 B5                 3182 	or	a,l
   08D7 28 04              3183 	jr	Z,00108$
   08D9 2E 00              3184 	ld	l,#0x00
   08DB 18 1F              3185 	jr	00109$
   08DD                    3186 00108$:
                           3187 ;demo.c:288: memcpy(cur_palette, scratch+7, ss);
   08DD DD 4E 06           3188 	ld	c,6 (ix)
   08E0 06 00              3189 	ld	b,#0x00
   08E2 11rCDs3F           3190 	ld	de,#_scratch + 7
   08E5 C5                 3191 	push	bc
   08E6 D5                 3192 	push	de
   08E7 21r46s40           3193 	ld	hl,#_cur_palette
   08EA E5                 3194 	push	hl
   08EB CDr00s00           3195 	call	_memcpy
   08EE F1                 3196 	pop	af
   08EF F1                 3197 	pop	af
   08F0 F1                 3198 	pop	af
                           3199 ;demo.c:290: close(&f);
   08F1 21 00 00           3200 	ld	hl,#0x0000
   08F4 39                 3201 	add	hl,sp
   08F5 E5                 3202 	push	hl
   08F6 CDr00s00           3203 	call	_close
   08F9 F1                 3204 	pop	af
                           3205 ;demo.c:291: return 1;
   08FA 2E 01              3206 	ld	l,#0x01
   08FC                    3207 00109$:
   08FC DD F9              3208 	ld	sp,ix
   08FE DD E1              3209 	pop	ix
   0900 C9                 3210 	ret
   0901                    3211 _pal_load_end::
   0901                    3212 __str_0:
   0901 6C 6F 61 64 69 6E  3213 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0912 00                 3214 	.db 0x00
   0913                    3215 __str_1:
   0913 0D                 3216 	.db 0x0D
   0914 0A                 3217 	.db 0x0A
   0915 00                 3218 	.db 0x00
                           3219 ;demo.c:295: void pause() {
                           3220 ;	---------------------------------
                           3221 ; Function pause
                           3222 ; ---------------------------------
   0916                    3223 _pause_start::
   0916                    3224 _pause:
                           3225 ;demo.c:296: uint8_t i,j,k = 0;
                           3226 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0916 01 00 00           3227 	ld	bc,#0x0000
   0919                    3228 00104$:
   0919 78                 3229 	ld	a,b
   091A D6 FF              3230 	sub	a,#0xFF
   091C D0                 3231 	ret	NC
                           3232 ;demo.c:298: for (j = 0; j < 255; j++) {
   091D 59                 3233 	ld	e,c
   091E 16 FF              3234 	ld	d,#0xFF
   0920                    3235 00103$:
                           3236 ;demo.c:299: k++;
   0920 1C                 3237 	inc	e
   0921 15                 3238 	dec	d
                           3239 ;demo.c:298: for (j = 0; j < 255; j++) {
   0922 AF                 3240 	xor	a,a
   0923 B2                 3241 	or	a,d
   0924 20 FA              3242 	jr	NZ,00103$
                           3243 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0926 4B                 3244 	ld	c,e
   0927 04                 3245 	inc	b
   0928 18 EF              3246 	jr	00104$
   092A                    3247 _pause_end::
                           3248 ;demo.c:305: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3249 ;	---------------------------------
                           3250 ; Function raw_load
                           3251 ; ---------------------------------
   092A                    3252 _raw_load_start::
   092A                    3253 _raw_load:
   092A DD E5              3254 	push	ix
   092C DD 21 00 00        3255 	ld	ix,#0
   0930 DD 39              3256 	add	ix,sp
   0932 21 D2 FF           3257 	ld	hl,#-46
   0935 39                 3258 	add	hl,sp
   0936 F9                 3259 	ld	sp,hl
                           3260 ;demo.c:310: if(debugprint == 1) {
   0937 DD 7E 0A           3261 	ld	a,10 (ix)
   093A D6 01              3262 	sub	a,#0x01
   093C 20 06              3263 	jr	NZ,00120$
   093E DD 7E 0B           3264 	ld	a,11 (ix)
   0941 B7                 3265 	or	a,a
   0942 28 02              3266 	jr	Z,00121$
   0944                    3267 00120$:
   0944 18 1B              3268 	jr	00102$
   0946                    3269 00121$:
                           3270 ;demo.c:311: puts("loading rawfile: ");
   0946 21r18s0A           3271 	ld	hl,#__str_2
   0949 E5                 3272 	push	hl
   094A CDr00s00           3273 	call	_puts
   094D F1                 3274 	pop	af
                           3275 ;demo.c:312: puts(file_name);
   094E DD 6E 04           3276 	ld	l,4 (ix)
   0951 DD 66 05           3277 	ld	h,5 (ix)
   0954 E5                 3278 	push	hl
   0955 CDr00s00           3279 	call	_puts
   0958 F1                 3280 	pop	af
                           3281 ;demo.c:313: puts("\r\n");
   0959 21r2As0A           3282 	ld	hl,#__str_3
   095C E5                 3283 	push	hl
   095D CDr00s00           3284 	call	_puts
   0960 F1                 3285 	pop	af
   0961                    3286 00102$:
                           3287 ;demo.c:316: memset((uint8_t *) &f, 0, sizeof(fcb));
   0961 21 00 00           3288 	ld	hl,#0x0000
   0964 39                 3289 	add	hl,sp
   0965 4D                 3290 	ld	c,l
   0966 44                 3291 	ld	b,h
   0967 21 2E 00           3292 	ld	hl,#0x002E
   096A E5                 3293 	push	hl
   096B 3E 00              3294 	ld	a,#0x00
   096D F5                 3295 	push	af
   096E 33                 3296 	inc	sp
   096F C5                 3297 	push	bc
   0970 CDr00s00           3298 	call	_memset
   0973 F1                 3299 	pop	af
   0974 F1                 3300 	pop	af
   0975 33                 3301 	inc	sp
                           3302 ;demo.c:317: scratch_clear();
   0976 CDr24s08           3303 	call	_scratch_clear
                           3304 ;demo.c:319: f.record_size = 128;
   0979 21 00 00           3305 	ld	hl,#0x0000
   097C 39                 3306 	add	hl,sp
   097D 4D                 3307 	ld	c,l
   097E 44                 3308 	ld	b,h
   097F 21 0F 00           3309 	ld	hl,#0x000F
   0982 09                 3310 	add	hl,bc
   0983 EB                 3311 	ex	de,hl
   0984 3E 80              3312 	ld	a,#0x80
   0986 12                 3313 	ld	(de),a
                           3314 ;demo.c:320: f.drive = 0;
   0987 3E 00              3315 	ld	a,#0x00
   0989 02                 3316 	ld	(bc),a
                           3317 ;demo.c:322: memcpy(f.name, file_name, 11);
   098A DD 5E 04           3318 	ld	e,4 (ix)
   098D DD 56 05           3319 	ld	d,5 (ix)
   0990 03                 3320 	inc	bc
   0991 21 0B 00           3321 	ld	hl,#0x000B
   0994 E5                 3322 	push	hl
   0995 D5                 3323 	push	de
   0996 C5                 3324 	push	bc
   0997 CDr00s00           3325 	call	_memcpy
   099A F1                 3326 	pop	af
   099B F1                 3327 	pop	af
   099C F1                 3328 	pop	af
                           3329 ;demo.c:324: if (open(&f) != 0) return 0;
   099D 21 00 00           3330 	ld	hl,#0x0000
   09A0 39                 3331 	add	hl,sp
   09A1 E5                 3332 	push	hl
   09A2 CDr00s00           3333 	call	_open
   09A5 F1                 3334 	pop	af
   09A6 AF                 3335 	xor	a,a
   09A7 B5                 3336 	or	a,l
   09A8 28 05              3337 	jr	Z,00119$
   09AA 2E 00              3338 	ld	l,#0x00
   09AC C3r13s0A           3339 	jp	00112$
                           3340 ;demo.c:326: while(total < size) {
   09AF                    3341 00119$:
   09AF 01 00 00           3342 	ld	bc,#0x0000
   09B2                    3343 00109$:
   09B2 79                 3344 	ld	a,c
   09B3 DD 96 06           3345 	sub	a,6 (ix)
   09B6 78                 3346 	ld	a,b
   09B7 DD 9E 07           3347 	sbc	a,7 (ix)
   09BA F2r08s0A           3348 	jp	P,00111$
                           3349 ;demo.c:327: if (block_set_data_ptr(scratch) != 0) return 0;
   09BD C5                 3350 	push	bc
   09BE 21rC6s3F           3351 	ld	hl,#_scratch
   09C1 E5                 3352 	push	hl
   09C2 CDr00s00           3353 	call	_block_set_data_ptr
   09C5 F1                 3354 	pop	af
   09C6 5D                 3355 	ld	e,l
   09C7 C1                 3356 	pop	bc
   09C8 AF                 3357 	xor	a,a
   09C9 B3                 3358 	or	a,e
   09CA 28 04              3359 	jr	Z,00106$
   09CC 2E 00              3360 	ld	l,#0x00
   09CE 18 43              3361 	jr	00112$
   09D0                    3362 00106$:
                           3363 ;demo.c:328: if (block_read(&f) != 0) return 0;
   09D0 21 00 00           3364 	ld	hl,#0x0000
   09D3 39                 3365 	add	hl,sp
   09D4 C5                 3366 	push	bc
   09D5 E5                 3367 	push	hl
   09D6 CDr00s00           3368 	call	_block_read
   09D9 F1                 3369 	pop	af
   09DA 5D                 3370 	ld	e,l
   09DB C1                 3371 	pop	bc
   09DC AF                 3372 	xor	a,a
   09DD B3                 3373 	or	a,e
   09DE 28 04              3374 	jr	Z,00108$
   09E0 2E 00              3375 	ld	l,#0x00
   09E2 18 2F              3376 	jr	00112$
   09E4                    3377 00108$:
                           3378 ;demo.c:330: memcpy(buffer+total,scratch,incr);
   09E4 DD 7E 08           3379 	ld	a,8 (ix)
   09E7 81                 3380 	add	a,c
   09E8 5F                 3381 	ld	e,a
   09E9 DD 7E 09           3382 	ld	a,9 (ix)
   09EC 88                 3383 	adc	a,b
   09ED 57                 3384 	ld	d,a
   09EE C5                 3385 	push	bc
   09EF 21 80 00           3386 	ld	hl,#0x0080
   09F2 E5                 3387 	push	hl
   09F3 21rC6s3F           3388 	ld	hl,#_scratch
   09F6 E5                 3389 	push	hl
   09F7 D5                 3390 	push	de
   09F8 CDr00s00           3391 	call	_memcpy
   09FB F1                 3392 	pop	af
   09FC F1                 3393 	pop	af
   09FD F1                 3394 	pop	af
   09FE C1                 3395 	pop	bc
                           3396 ;demo.c:332: total+=incr;
   09FF 21 80 00           3397 	ld	hl,#0x0080
   0A02 09                 3398 	add	hl,bc
   0A03 4D                 3399 	ld	c,l
   0A04 44                 3400 	ld	b,h
   0A05 C3rB2s09           3401 	jp	00109$
   0A08                    3402 00111$:
                           3403 ;demo.c:335: close(&f);
   0A08 21 00 00           3404 	ld	hl,#0x0000
   0A0B 39                 3405 	add	hl,sp
   0A0C E5                 3406 	push	hl
   0A0D CDr00s00           3407 	call	_close
   0A10 F1                 3408 	pop	af
                           3409 ;demo.c:337: return 1;
   0A11 2E 01              3410 	ld	l,#0x01
   0A13                    3411 00112$:
   0A13 DD F9              3412 	ld	sp,ix
   0A15 DD E1              3413 	pop	ix
   0A17 C9                 3414 	ret
   0A18                    3415 _raw_load_end::
   0A18                    3416 __str_2:
   0A18 6C 6F 61 64 69 6E  3417 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0A29 00                 3418 	.db 0x00
   0A2A                    3419 __str_3:
   0A2A 0D                 3420 	.db 0x0D
   0A2B 0A                 3421 	.db 0x0A
   0A2C 00                 3422 	.db 0x00
                           3423 ;demo.c:340: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3424 ;	---------------------------------
                           3425 ; Function pck_load
                           3426 ; ---------------------------------
   0A2D                    3427 _pck_load_start::
   0A2D                    3428 _pck_load:
   0A2D DD E5              3429 	push	ix
   0A2F DD 21 00 00        3430 	ld	ix,#0
   0A33 DD 39              3431 	add	ix,sp
                           3432 ;demo.c:341: if(debugprint == 1) {
   0A35 DD 7E 0C           3433 	ld	a,12 (ix)
   0A38 D6 01              3434 	sub	a,#0x01
   0A3A 20 06              3435 	jr	NZ,00106$
   0A3C DD 7E 0D           3436 	ld	a,13 (ix)
   0A3F B7                 3437 	or	a,a
   0A40 28 02              3438 	jr	Z,00107$
   0A42                    3439 00106$:
   0A42 18 1B              3440 	jr	00102$
   0A44                    3441 00107$:
                           3442 ;demo.c:342: puts("loading pckfile: ");
   0A44 21rA6s0A           3443 	ld	hl,#__str_4
   0A47 E5                 3444 	push	hl
   0A48 CDr00s00           3445 	call	_puts
   0A4B F1                 3446 	pop	af
                           3447 ;demo.c:343: puts(file_name);
   0A4C DD 6E 04           3448 	ld	l,4 (ix)
   0A4F DD 66 05           3449 	ld	h,5 (ix)
   0A52 E5                 3450 	push	hl
   0A53 CDr00s00           3451 	call	_puts
   0A56 F1                 3452 	pop	af
                           3453 ;demo.c:344: puts("\r\n");
   0A57 21rB8s0A           3454 	ld	hl,#__str_5
   0A5A E5                 3455 	push	hl
   0A5B CDr00s00           3456 	call	_puts
   0A5E F1                 3457 	pop	af
   0A5F                    3458 00102$:
                           3459 ;demo.c:346: memset((uint8_t *) &packbuffer, 0, size);
   0A5F DD 4E 06           3460 	ld	c,6 (ix)
   0A62 DD 46 07           3461 	ld	b,7 (ix)
   0A65 C5                 3462 	push	bc
   0A66 C5                 3463 	push	bc
   0A67 3E 00              3464 	ld	a,#0x00
   0A69 F5                 3465 	push	af
   0A6A 33                 3466 	inc	sp
   0A6B 21rC8s01           3467 	ld	hl,#_packbuffer
   0A6E E5                 3468 	push	hl
   0A6F CDr00s00           3469 	call	_memset
   0A72 F1                 3470 	pop	af
   0A73 F1                 3471 	pop	af
   0A74 33                 3472 	inc	sp
   0A75 C1                 3473 	pop	bc
                           3474 ;demo.c:347: raw_load(file_name, size, packbuffer,0);
   0A76 21 00 00           3475 	ld	hl,#0x0000
   0A79 E5                 3476 	push	hl
   0A7A 21rC8s01           3477 	ld	hl,#_packbuffer
   0A7D E5                 3478 	push	hl
   0A7E C5                 3479 	push	bc
   0A7F DD 6E 04           3480 	ld	l,4 (ix)
   0A82 DD 66 05           3481 	ld	h,5 (ix)
   0A85 E5                 3482 	push	hl
   0A86 CDr2As09           3483 	call	_raw_load
   0A89 F1                 3484 	pop	af
   0A8A F1                 3485 	pop	af
   0A8B F1                 3486 	pop	af
   0A8C F1                 3487 	pop	af
                           3488 ;demo.c:348: bitbuster(packbuffer,address,vram_offset);
   0A8D DD 7E 0A           3489 	ld	a,10 (ix)
   0A90 F5                 3490 	push	af
   0A91 33                 3491 	inc	sp
   0A92 DD 6E 08           3492 	ld	l,8 (ix)
   0A95 DD 66 09           3493 	ld	h,9 (ix)
   0A98 E5                 3494 	push	hl
   0A99 21rC8s01           3495 	ld	hl,#_packbuffer
   0A9C E5                 3496 	push	hl
   0A9D CDr00s00           3497 	call	_bitbuster
   0AA0 F1                 3498 	pop	af
   0AA1 F1                 3499 	pop	af
   0AA2 33                 3500 	inc	sp
   0AA3 DD E1              3501 	pop	ix
   0AA5 C9                 3502 	ret
   0AA6                    3503 _pck_load_end::
   0AA6                    3504 __str_4:
   0AA6 6C 6F 61 64 69 6E  3505 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0AB7 00                 3506 	.db 0x00
   0AB8                    3507 __str_5:
   0AB8 0D                 3508 	.db 0x0D
   0AB9 0A                 3509 	.db 0x0A
   0ABA 00                 3510 	.db 0x00
                           3511 ;demo.c:351: void fadein() {
                           3512 ;	---------------------------------
                           3513 ; Function fadein
                           3514 ; ---------------------------------
   0ABB                    3515 _fadein_start::
   0ABB                    3516 _fadein:
   0ABB DD E5              3517 	push	ix
   0ABD DD 21 00 00        3518 	ld	ix,#0
   0AC1 DD 39              3519 	add	ix,sp
   0AC3 F5                 3520 	push	af
                           3521 ;demo.c:354: if (tick < 8) return;
   0AC4 3Ar28s41           3522 	ld	a,(#_tick+0)
   0AC7 D6 08              3523 	sub	a,#0x08
   0AC9 3Ar29s41           3524 	ld	a,(#_tick+1)
   0ACC DE 00              3525 	sbc	a,#0x00
   0ACE F2rD4s0A           3526 	jp	P,00102$
   0AD1 C3r82s0B           3527 	jp	00113$
   0AD4                    3528 00102$:
                           3529 ;demo.c:356: tick = 0;
   0AD4 21r28s41           3530 	ld	hl,#_tick + 0
   0AD7 36 00              3531 	ld	(hl), #0x00
   0AD9 21r29s41           3532 	ld	hl,#_tick + 1
   0ADC 36 00              3533 	ld	(hl), #0x00
                           3534 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0ADE 0E 00              3535 	ld	c,#0x00
   0AE0                    3536 00109$:
   0AE0 79                 3537 	ld	a,c
   0AE1 D6 20              3538 	sub	a,#0x20
   0AE3 D2r7As0B           3539 	jp	NC,00112$
                           3540 ;demo.c:359: uint8_t r = scratch[i] >> 4;
   0AE6 3ErC6              3541 	ld	a,#<_scratch
   0AE8 81                 3542 	add	a,c
   0AE9 5F                 3543 	ld	e,a
   0AEA 3Es3F              3544 	ld	a,#>_scratch
   0AEC CE 00              3545 	adc	a,#0x00
   0AEE 57                 3546 	ld	d,a
   0AEF 1A                 3547 	ld	a,(de)
   0AF0 47                 3548 	ld	b,a
   0AF1 58                 3549 	ld	e,b
   0AF2 CB 3B              3550 	srl	e
   0AF4 CB 3B              3551 	srl	e
   0AF6 CB 3B              3552 	srl	e
   0AF8 CB 3B              3553 	srl	e
                           3554 ;demo.c:360: uint8_t b = scratch[i] & 0xf;
   0AFA 78                 3555 	ld	a,b
   0AFB E6 0F              3556 	and	a,#0x0F
   0AFD DD 77 FF           3557 	ld	-1 (ix),a
                           3558 ;demo.c:361: uint8_t g = scratch[i+1];
   0B00 51                 3559 	ld	d,c
   0B01 14                 3560 	inc	d
   0B02 3ErC6              3561 	ld	a,#<_scratch
   0B04 82                 3562 	add	a,d
   0B05 6F                 3563 	ld	l,a
   0B06 3Es3F              3564 	ld	a,#>_scratch
   0B08 CE 00              3565 	adc	a,#0x00
   0B0A 67                 3566 	ld	h,a
   0B0B 56                 3567 	ld	d,(hl)
   0B0C DD 72 FE           3568 	ld	-2 (ix),d
                           3569 ;demo.c:363: if (r < (cur_palette[i] >> 4)) r++;
   0B0F 3Er46              3570 	ld	a,#<_cur_palette
   0B11 81                 3571 	add	a,c
   0B12 6F                 3572 	ld	l,a
   0B13 3Es40              3573 	ld	a,#>_cur_palette
   0B15 CE 00              3574 	adc	a,#0x00
   0B17 67                 3575 	ld	h,a
   0B18 56                 3576 	ld	d,(hl)
   0B19 CB 3A              3577 	srl	d
   0B1B CB 3A              3578 	srl	d
   0B1D CB 3A              3579 	srl	d
   0B1F CB 3A              3580 	srl	d
   0B21 7B                 3581 	ld	a,e
   0B22 92                 3582 	sub	a,d
   0B23 30 01              3583 	jr	NC,00104$
   0B25 1C                 3584 	inc	e
   0B26                    3585 00104$:
                           3586 ;demo.c:364: if (b < (cur_palette[i] & 0xf)) b++;
   0B26 3Er46              3587 	ld	a,#<_cur_palette
   0B28 81                 3588 	add	a,c
   0B29 6F                 3589 	ld	l,a
   0B2A 3Es40              3590 	ld	a,#>_cur_palette
   0B2C CE 00              3591 	adc	a,#0x00
   0B2E 67                 3592 	ld	h,a
   0B2F 7E                 3593 	ld	a,(hl)
   0B30 E6 0F              3594 	and	a,#0x0F
   0B32 47                 3595 	ld	b,a
   0B33 DD 7E FF           3596 	ld	a,-1 (ix)
   0B36 90                 3597 	sub	a,b
   0B37 30 03              3598 	jr	NC,00106$
   0B39 DD 34 FF           3599 	inc	-1 (ix)
   0B3C                    3600 00106$:
                           3601 ;demo.c:366: scratch[i] = (r << 4) | b;
   0B3C 3ErC6              3602 	ld	a,#<_scratch
   0B3E 81                 3603 	add	a,c
   0B3F 47                 3604 	ld	b,a
   0B40 3Es3F              3605 	ld	a,#>_scratch
   0B42 CE 00              3606 	adc	a,#0x00
   0B44 57                 3607 	ld	d,a
   0B45 7B                 3608 	ld	a,e
   0B46 07                 3609 	rlca
   0B47 07                 3610 	rlca
   0B48 07                 3611 	rlca
   0B49 07                 3612 	rlca
   0B4A E6 F0              3613 	and	a,#0xF0
   0B4C DD B6 FF           3614 	or	a,-1 (ix)
   0B4F 68                 3615 	ld	l,b
   0B50 62                 3616 	ld	h,d
   0B51 77                 3617 	ld	(hl),a
                           3618 ;demo.c:367: if (g < cur_palette[i+1]) scratch[i+1]++;
   0B52 41                 3619 	ld	b,c
   0B53 04                 3620 	inc	b
   0B54 3Er46              3621 	ld	a,#<_cur_palette
   0B56 80                 3622 	add	a,b
   0B57 5F                 3623 	ld	e,a
   0B58 3Es40              3624 	ld	a,#>_cur_palette
   0B5A CE 00              3625 	adc	a,#0x00
   0B5C 57                 3626 	ld	d,a
   0B5D 1A                 3627 	ld	a,(de)
   0B5E 5F                 3628 	ld	e,a
   0B5F DD 7E FE           3629 	ld	a,-2 (ix)
   0B62 93                 3630 	sub	a,e
   0B63 30 10              3631 	jr	NC,00111$
   0B65 3ErC6              3632 	ld	a,#<_scratch
   0B67 80                 3633 	add	a,b
   0B68 47                 3634 	ld	b,a
   0B69 3Es3F              3635 	ld	a,#>_scratch
   0B6B CE 00              3636 	adc	a,#0x00
   0B6D 5F                 3637 	ld	e,a
   0B6E 68                 3638 	ld	l,b
   0B6F 67                 3639 	ld	h,a
   0B70 7E                 3640 	ld	a,(hl)
   0B71 3C                 3641 	inc	a
   0B72 68                 3642 	ld	l,b
   0B73 63                 3643 	ld	h,e
   0B74 77                 3644 	ld	(hl),a
   0B75                    3645 00111$:
                           3646 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0B75 0C                 3647 	inc	c
   0B76 0C                 3648 	inc	c
   0B77 C3rE0s0A           3649 	jp	00109$
   0B7A                    3650 00112$:
                           3651 ;demo.c:371: vdp_load_palette(scratch);
   0B7A 21rC6s3F           3652 	ld	hl,#_scratch
   0B7D E5                 3653 	push	hl
   0B7E CDr00s00           3654 	call	_vdp_load_palette
   0B81 F1                 3655 	pop	af
   0B82                    3656 00113$:
   0B82 DD F9              3657 	ld	sp,ix
   0B84 DD E1              3658 	pop	ix
   0B86 C9                 3659 	ret
   0B87                    3660 _fadein_end::
                           3661 ;demo.c:383: void do_ymmm() {
                           3662 ;	---------------------------------
                           3663 ; Function do_ymmm
                           3664 ; ---------------------------------
   0B87                    3665 _do_ymmm_start::
   0B87                    3666 _do_ymmm:
                           3667 ;demo.c:384: }
   0B87 C9                 3668 	ret
   0B88                    3669 _do_ymmm_end::
                           3670 ;demo.c:397: void do_blocks() {
                           3671 ;	---------------------------------
                           3672 ; Function do_blocks
                           3673 ; ---------------------------------
   0B88                    3674 _do_blocks_start::
   0B88                    3675 _do_blocks:
                           3676 ;demo.c:398: }
   0B88 C9                 3677 	ret
   0B89                    3678 _do_blocks_end::
                           3679 ;demo.c:402: void raster_effu() {
                           3680 ;	---------------------------------
                           3681 ; Function raster_effu
                           3682 ; ---------------------------------
   0B89                    3683 _raster_effu_start::
   0B89                    3684 _raster_effu:
                           3685 ;demo.c:403: }
   0B89 C9                 3686 	ret
   0B8A                    3687 _raster_effu_end::
                           3688 ;demo.c:434: void do_2xletter(char cc) {
                           3689 ;	---------------------------------
                           3690 ; Function do_2xletter
                           3691 ; ---------------------------------
   0B8A                    3692 _do_2xletter_start::
   0B8A                    3693 _do_2xletter:
   0B8A DD E5              3694 	push	ix
   0B8C DD 21 00 00        3695 	ld	ix,#0
   0B90 DD 39              3696 	add	ix,sp
   0B92 21 F2 FF           3697 	ld	hl,#-14
   0B95 39                 3698 	add	hl,sp
   0B96 F9                 3699 	ld	sp,hl
                           3700 ;demo.c:435: int cidx = cc - 65;
   0B97 DD 4E 04           3701 	ld	c,4 (ix)
   0B9A DD 7E 04           3702 	ld	a,4 (ix)
   0B9D 17                 3703 	rla	
   0B9E 9F                 3704 	sbc	a,a
   0B9F 47                 3705 	ld	b,a
   0BA0 79                 3706 	ld	a,c
   0BA1 C6 BF              3707 	add	a,#0xBF
   0BA3 DD 77 FE           3708 	ld	-2 (ix),a
   0BA6 78                 3709 	ld	a,b
   0BA7 CE FF              3710 	adc	a,#0xFF
   0BA9 DD 77 FF           3711 	ld	-1 (ix),a
                           3712 ;demo.c:438: for (y=0;y<8;y++) {
   0BAC 3ErB8              3713 	ld	a,#<_font_w
   0BAE DD 86 FE           3714 	add	a,-2 (ix)
   0BB1 5F                 3715 	ld	e,a
   0BB2 3Es0E              3716 	ld	a,#>_font_w
   0BB4 DD 8E FF           3717 	adc	a,-1 (ix)
   0BB7 57                 3718 	ld	d,a
   0BB8 DD 36 FA 00        3719 	ld	-6 (ix),#0x00
   0BBC DD 36 FB 00        3720 	ld	-5 (ix),#0x00
   0BC0 DD 36 F6 00        3721 	ld	-10 (ix),#0x00
   0BC4 DD 36 F7 00        3722 	ld	-9 (ix),#0x00
   0BC8                    3723 00105$:
   0BC8 DD 7E FA           3724 	ld	a,-6 (ix)
   0BCB D6 08              3725 	sub	a,#0x08
   0BCD DD 7E FB           3726 	ld	a,-5 (ix)
   0BD0 DE 00              3727 	sbc	a,#0x00
   0BD2 F2r10s0E           3728 	jp	P,00108$
                           3729 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0BD5 DD 36 FC 00        3730 	ld	-4 (ix),#0x00
   0BD9 DD 36 FD 00        3731 	ld	-3 (ix),#0x00
   0BDD DD 36 F4 00        3732 	ld	-12 (ix),#0x00
   0BE1 DD 36 F5 00        3733 	ld	-11 (ix),#0x00
   0BE5                    3734 00101$:
   0BE5 1A                 3735 	ld	a,(de)
   0BE6 4F                 3736 	ld	c,a
   0BE7 06 00              3737 	ld	b,#0x00
   0BE9 DD 7E FC           3738 	ld	a,-4 (ix)
   0BEC 91                 3739 	sub	a,c
   0BED DD 7E FD           3740 	ld	a,-3 (ix)
   0BF0 98                 3741 	sbc	a,b
   0BF1 F2rE8s0D           3742 	jp	P,00115$
                           3743 ;demo.c:440: cmd.source_x = 127+font_x[cidx]+x;
   0BF4 3Er38              3744 	ld	a,#<_font_x
   0BF6 DD 86 FE           3745 	add	a,-2 (ix)
   0BF9 4F                 3746 	ld	c,a
   0BFA 3Es0E              3747 	ld	a,#>_font_x
   0BFC DD 8E FF           3748 	adc	a,-1 (ix)
   0BFF 47                 3749 	ld	b,a
   0C00 0A                 3750 	ld	a,(bc)
   0C01 4F                 3751 	ld	c,a
   0C02 06 00              3752 	ld	b,#0x00
   0C04 21 7F 00           3753 	ld	hl,#0x007F
   0C07 09                 3754 	add	hl,bc
   0C08 4D                 3755 	ld	c,l
   0C09 44                 3756 	ld	b,h
   0C0A 79                 3757 	ld	a,c
   0C0B DD 86 FC           3758 	add	a,-4 (ix)
   0C0E 4F                 3759 	ld	c,a
   0C0F 78                 3760 	ld	a,b
   0C10 DD 8E FD           3761 	adc	a,-3 (ix)
   0C13 47                 3762 	ld	b,a
   0C14 21r2As41           3763 	ld	hl,#_cmd
   0C17 71                 3764 	ld	(hl),c
   0C18 23                 3765 	inc	hl
   0C19 70                 3766 	ld	(hl),b
                           3767 ;demo.c:441: cmd.source_y = 512+font_y[cidx]+y;
   0C1A 23                 3768 	inc	hl
   0C1B DD 75 F2           3769 	ld	-14 (ix),l
   0C1E DD 74 F3           3770 	ld	-13 (ix),h
   0C21 3Er78              3771 	ld	a,#<_font_y
   0C23 DD 86 FE           3772 	add	a,-2 (ix)
   0C26 4F                 3773 	ld	c,a
   0C27 3Es0E              3774 	ld	a,#>_font_y
   0C29 DD 8E FF           3775 	adc	a,-1 (ix)
   0C2C 47                 3776 	ld	b,a
   0C2D 0A                 3777 	ld	a,(bc)
   0C2E 4F                 3778 	ld	c,a
   0C2F 06 00              3779 	ld	b,#0x00
   0C31 21 00 02           3780 	ld	hl,#0x0200
   0C34 09                 3781 	add	hl,bc
   0C35 4D                 3782 	ld	c,l
   0C36 44                 3783 	ld	b,h
   0C37 79                 3784 	ld	a,c
   0C38 DD 86 FA           3785 	add	a,-6 (ix)
   0C3B 4F                 3786 	ld	c,a
   0C3C 78                 3787 	ld	a,b
   0C3D DD 8E FB           3788 	adc	a,-5 (ix)
   0C40 47                 3789 	ld	b,a
   0C41 DD 6E F2           3790 	ld	l,-14 (ix)
   0C44 DD 66 F3           3791 	ld	h,-13 (ix)
   0C47 71                 3792 	ld	(hl),c
   0C48 23                 3793 	inc	hl
   0C49 70                 3794 	ld	(hl),b
                           3795 ;demo.c:442: cmd.size_x = 1;
   0C4A 21r32s41           3796 	ld	hl, #_cmd + 8
   0C4D 36 01              3797 	ld	(hl),#0x01
   0C4F 23                 3798 	inc	hl
   0C50 36 00              3799 	ld	(hl),#0x00
                           3800 ;demo.c:443: cmd.size_y = 1;
   0C52 21r34s41           3801 	ld	hl, #_cmd + 10
   0C55 36 01              3802 	ld	(hl),#0x01
   0C57 23                 3803 	inc	hl
   0C58 36 00              3804 	ld	(hl),#0x00
                           3805 ;demo.c:444: cmd.argument = 0x00;
   0C5A 3E 00              3806 	ld	a,#0x00
   0C5C 32r37s41           3807 	ld	(#_cmd + 13),a
                           3808 ;demo.c:445: cmd.command = 0x40; // get pixel
   0C5F 3E 40              3809 	ld	a,#0x40
   0C61 32r38s41           3810 	ld	(#_cmd + 14),a
                           3811 ;demo.c:446: vdp_copier(&cmd);
   0C64 D5                 3812 	push	de
   0C65 21r2As41           3813 	ld	hl,#_cmd
   0C68 E5                 3814 	push	hl
   0C69 CDr00s00           3815 	call	_vdp_copier
   0C6C F1                 3816 	pop	af
   0C6D D1                 3817 	pop	de
                           3818 ;demo.c:448: col = vdp2_status(7);
   0C6E D5                 3819 	push	de
   0C6F 3E 07              3820 	ld	a,#0x07
   0C71 F5                 3821 	push	af
   0C72 33                 3822 	inc	sp
   0C73 CDr00s00           3823 	call	_vdp2_status
   0C76 33                 3824 	inc	sp
   0C77 4D                 3825 	ld	c,l
   0C78 D1                 3826 	pop	de
   0C79 DD 71 F8           3827 	ld	-8 (ix),c
   0C7C DD 36 F9 00        3828 	ld	-7 (ix),#0x00
                           3829 ;demo.c:450: cmd.data = col;
   0C80 01r36s41           3830 	ld	bc,#_cmd + 12
   0C83 DD 7E F8           3831 	ld	a,-8 (ix)
   0C86 02                 3832 	ld	(bc),a
                           3833 ;demo.c:451: cmd.dest_x = lx+x*3;
   0C87 21r2Es41           3834 	ld	hl,#_cmd + 4
   0C8A DD 75 F2           3835 	ld	-14 (ix),l
   0C8D DD 74 F3           3836 	ld	-13 (ix),h
   0C90 21rBCs41           3837 	ld	hl,#_lx + 0
   0C93 4E                 3838 	ld	c,(hl)
   0C94 06 00              3839 	ld	b,#0x00
   0C96 79                 3840 	ld	a,c
   0C97 DD 86 F4           3841 	add	a,-12 (ix)
   0C9A 4F                 3842 	ld	c,a
   0C9B 78                 3843 	ld	a,b
   0C9C DD 8E F5           3844 	adc	a,-11 (ix)
   0C9F 47                 3845 	ld	b,a
   0CA0 DD 6E F2           3846 	ld	l,-14 (ix)
   0CA3 DD 66 F3           3847 	ld	h,-13 (ix)
   0CA6 71                 3848 	ld	(hl),c
   0CA7 23                 3849 	inc	hl
   0CA8 70                 3850 	ld	(hl),b
                           3851 ;demo.c:452: cmd.dest_y = ly+y*3;
   0CA9 21r30s41           3852 	ld	hl,#_cmd + 6
   0CAC DD 75 F2           3853 	ld	-14 (ix),l
   0CAF DD 74 F3           3854 	ld	-13 (ix),h
   0CB2 21rBDs41           3855 	ld	hl,#_ly + 0
   0CB5 4E                 3856 	ld	c,(hl)
   0CB6 06 00              3857 	ld	b,#0x00
   0CB8 79                 3858 	ld	a,c
   0CB9 DD 86 F6           3859 	add	a,-10 (ix)
   0CBC 4F                 3860 	ld	c,a
   0CBD 78                 3861 	ld	a,b
   0CBE DD 8E F7           3862 	adc	a,-9 (ix)
   0CC1 47                 3863 	ld	b,a
   0CC2 DD 6E F2           3864 	ld	l,-14 (ix)
   0CC5 DD 66 F3           3865 	ld	h,-13 (ix)
   0CC8 71                 3866 	ld	(hl),c
   0CC9 23                 3867 	inc	hl
   0CCA 70                 3868 	ld	(hl),b
                           3869 ;demo.c:455: cmd.argument = 0x00;
   0CCB 3E 00              3870 	ld	a,#0x00
   0CCD 32r37s41           3871 	ld	(#_cmd + 13),a
                           3872 ;demo.c:456: cmd.command = 0x50; // rect
   0CD0 3E 50              3873 	ld	a,#0x50
   0CD2 32r38s41           3874 	ld	(#_cmd + 14),a
                           3875 ;demo.c:457: vdp_copier(&cmd);
   0CD5 D5                 3876 	push	de
   0CD6 21r2As41           3877 	ld	hl,#_cmd
   0CD9 E5                 3878 	push	hl
   0CDA CDr00s00           3879 	call	_vdp_copier
   0CDD F1                 3880 	pop	af
   0CDE D1                 3881 	pop	de
                           3882 ;demo.c:458: cmd.dest_x = 1+lx+x*3;
   0CDF 21r2Es41           3883 	ld	hl,#_cmd + 4
   0CE2 DD 75 F2           3884 	ld	-14 (ix),l
   0CE5 DD 74 F3           3885 	ld	-13 (ix),h
   0CE8 21rBCs41           3886 	ld	hl,#_lx + 0
   0CEB 4E                 3887 	ld	c,(hl)
   0CEC 06 00              3888 	ld	b,#0x00
   0CEE 03                 3889 	inc	bc
   0CEF 79                 3890 	ld	a,c
   0CF0 DD 86 F4           3891 	add	a,-12 (ix)
   0CF3 4F                 3892 	ld	c,a
   0CF4 78                 3893 	ld	a,b
   0CF5 DD 8E F5           3894 	adc	a,-11 (ix)
   0CF8 47                 3895 	ld	b,a
   0CF9 DD 6E F2           3896 	ld	l,-14 (ix)
   0CFC DD 66 F3           3897 	ld	h,-13 (ix)
   0CFF 71                 3898 	ld	(hl),c
   0D00 23                 3899 	inc	hl
   0D01 70                 3900 	ld	(hl),b
                           3901 ;demo.c:459: cmd.dest_y = ly+y*3;
   0D02 21r30s41           3902 	ld	hl,#_cmd + 6
   0D05 DD 75 F2           3903 	ld	-14 (ix),l
   0D08 DD 74 F3           3904 	ld	-13 (ix),h
   0D0B 21rBDs41           3905 	ld	hl,#_ly + 0
   0D0E 4E                 3906 	ld	c,(hl)
   0D0F 06 00              3907 	ld	b,#0x00
   0D11 79                 3908 	ld	a,c
   0D12 DD 86 F6           3909 	add	a,-10 (ix)
   0D15 4F                 3910 	ld	c,a
   0D16 78                 3911 	ld	a,b
   0D17 DD 8E F7           3912 	adc	a,-9 (ix)
   0D1A 47                 3913 	ld	b,a
   0D1B DD 6E F2           3914 	ld	l,-14 (ix)
   0D1E DD 66 F3           3915 	ld	h,-13 (ix)
   0D21 71                 3916 	ld	(hl),c
   0D22 23                 3917 	inc	hl
   0D23 70                 3918 	ld	(hl),b
                           3919 ;demo.c:460: vdp_copier(&cmd);
   0D24 D5                 3920 	push	de
   0D25 21r2As41           3921 	ld	hl,#_cmd
   0D28 E5                 3922 	push	hl
   0D29 CDr00s00           3923 	call	_vdp_copier
   0D2C F1                 3924 	pop	af
   0D2D D1                 3925 	pop	de
                           3926 ;demo.c:461: cmd.dest_x = 1+lx+x*3;
   0D2E 21r2Es41           3927 	ld	hl,#_cmd + 4
   0D31 DD 75 F2           3928 	ld	-14 (ix),l
   0D34 DD 74 F3           3929 	ld	-13 (ix),h
   0D37 21rBCs41           3930 	ld	hl,#_lx + 0
   0D3A 4E                 3931 	ld	c,(hl)
   0D3B 06 00              3932 	ld	b,#0x00
   0D3D 03                 3933 	inc	bc
   0D3E 79                 3934 	ld	a,c
   0D3F DD 86 F4           3935 	add	a,-12 (ix)
   0D42 4F                 3936 	ld	c,a
   0D43 78                 3937 	ld	a,b
   0D44 DD 8E F5           3938 	adc	a,-11 (ix)
   0D47 47                 3939 	ld	b,a
   0D48 DD 6E F2           3940 	ld	l,-14 (ix)
   0D4B DD 66 F3           3941 	ld	h,-13 (ix)
   0D4E 71                 3942 	ld	(hl),c
   0D4F 23                 3943 	inc	hl
   0D50 70                 3944 	ld	(hl),b
                           3945 ;demo.c:462: cmd.dest_y = 1+ly+y*3;
   0D51 21r30s41           3946 	ld	hl,#_cmd + 6
   0D54 DD 75 F2           3947 	ld	-14 (ix),l
   0D57 DD 74 F3           3948 	ld	-13 (ix),h
   0D5A 21rBDs41           3949 	ld	hl,#_ly + 0
   0D5D 4E                 3950 	ld	c,(hl)
   0D5E 06 00              3951 	ld	b,#0x00
   0D60 03                 3952 	inc	bc
   0D61 79                 3953 	ld	a,c
   0D62 DD 86 F6           3954 	add	a,-10 (ix)
   0D65 4F                 3955 	ld	c,a
   0D66 78                 3956 	ld	a,b
   0D67 DD 8E F7           3957 	adc	a,-9 (ix)
   0D6A 47                 3958 	ld	b,a
   0D6B DD 6E F2           3959 	ld	l,-14 (ix)
   0D6E DD 66 F3           3960 	ld	h,-13 (ix)
   0D71 71                 3961 	ld	(hl),c
   0D72 23                 3962 	inc	hl
   0D73 70                 3963 	ld	(hl),b
                           3964 ;demo.c:463: vdp_copier(&cmd);
   0D74 D5                 3965 	push	de
   0D75 21r2As41           3966 	ld	hl,#_cmd
   0D78 E5                 3967 	push	hl
   0D79 CDr00s00           3968 	call	_vdp_copier
   0D7C F1                 3969 	pop	af
   0D7D D1                 3970 	pop	de
                           3971 ;demo.c:464: cmd.dest_x = lx+x*3;
   0D7E 21r2Es41           3972 	ld	hl,#_cmd + 4
   0D81 DD 75 F2           3973 	ld	-14 (ix),l
   0D84 DD 74 F3           3974 	ld	-13 (ix),h
   0D87 21rBCs41           3975 	ld	hl,#_lx + 0
   0D8A 4E                 3976 	ld	c,(hl)
   0D8B 06 00              3977 	ld	b,#0x00
   0D8D 79                 3978 	ld	a,c
   0D8E DD 86 F4           3979 	add	a,-12 (ix)
   0D91 4F                 3980 	ld	c,a
   0D92 78                 3981 	ld	a,b
   0D93 DD 8E F5           3982 	adc	a,-11 (ix)
   0D96 47                 3983 	ld	b,a
   0D97 DD 6E F2           3984 	ld	l,-14 (ix)
   0D9A DD 66 F3           3985 	ld	h,-13 (ix)
   0D9D 71                 3986 	ld	(hl),c
   0D9E 23                 3987 	inc	hl
   0D9F 70                 3988 	ld	(hl),b
                           3989 ;demo.c:465: cmd.dest_y = 1+ly+y*3;
   0DA0 21r30s41           3990 	ld	hl,#_cmd + 6
   0DA3 DD 75 F2           3991 	ld	-14 (ix),l
   0DA6 DD 74 F3           3992 	ld	-13 (ix),h
   0DA9 21rBDs41           3993 	ld	hl,#_ly + 0
   0DAC 4E                 3994 	ld	c,(hl)
   0DAD 06 00              3995 	ld	b,#0x00
   0DAF 03                 3996 	inc	bc
   0DB0 79                 3997 	ld	a,c
   0DB1 DD 86 F6           3998 	add	a,-10 (ix)
   0DB4 4F                 3999 	ld	c,a
   0DB5 78                 4000 	ld	a,b
   0DB6 DD 8E F7           4001 	adc	a,-9 (ix)
   0DB9 47                 4002 	ld	b,a
   0DBA DD 6E F2           4003 	ld	l,-14 (ix)
   0DBD DD 66 F3           4004 	ld	h,-13 (ix)
   0DC0 71                 4005 	ld	(hl),c
   0DC1 23                 4006 	inc	hl
   0DC2 70                 4007 	ld	(hl),b
                           4008 ;demo.c:466: vdp_copier(&cmd);
   0DC3 D5                 4009 	push	de
   0DC4 21r2As41           4010 	ld	hl,#_cmd
   0DC7 E5                 4011 	push	hl
   0DC8 CDr00s00           4012 	call	_vdp_copier
   0DCB F1                 4013 	pop	af
   0DCC D1                 4014 	pop	de
                           4015 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0DCD DD 7E F4           4016 	ld	a,-12 (ix)
   0DD0 C6 03              4017 	add	a,#0x03
   0DD2 DD 77 F4           4018 	ld	-12 (ix),a
   0DD5 DD 7E F5           4019 	ld	a,-11 (ix)
   0DD8 CE 00              4020 	adc	a,#0x00
   0DDA DD 77 F5           4021 	ld	-11 (ix),a
   0DDD DD 34 FC           4022 	inc	-4 (ix)
   0DE0 20 03              4023 	jr	NZ,00117$
   0DE2 DD 34 FD           4024 	inc	-3 (ix)
   0DE5                    4025 00117$:
   0DE5 C3rE5s0B           4026 	jp	00101$
   0DE8                    4027 00115$:
   0DE8 DD 7E FC           4028 	ld	a,-4 (ix)
   0DEB DD 77 F2           4029 	ld	-14 (ix),a
   0DEE DD 7E FD           4030 	ld	a,-3 (ix)
   0DF1 DD 77 F3           4031 	ld	-13 (ix),a
                           4032 ;demo.c:468: waitVB();
   0DF4 76                 4033 		halt 
                           4034 ;demo.c:438: for (y=0;y<8;y++) {
   0DF5 DD 7E F6           4035 	ld	a,-10 (ix)
   0DF8 C6 03              4036 	add	a,#0x03
   0DFA DD 77 F6           4037 	ld	-10 (ix),a
   0DFD DD 7E F7           4038 	ld	a,-9 (ix)
   0E00 CE 00              4039 	adc	a,#0x00
   0E02 DD 77 F7           4040 	ld	-9 (ix),a
   0E05 DD 34 FA           4041 	inc	-6 (ix)
   0E08 20 03              4042 	jr	NZ,00118$
   0E0A DD 34 FB           4043 	inc	-5 (ix)
   0E0D                    4044 00118$:
   0E0D C3rC8s0B           4045 	jp	00105$
   0E10                    4046 00108$:
                           4047 ;demo.c:471: lx+=font_w[cidx]-1+(x*4);
   0E10 3ErB8              4048 	ld	a,#<_font_w
   0E12 DD 86 FE           4049 	add	a,-2 (ix)
   0E15 4F                 4050 	ld	c,a
   0E16 3Es0E              4051 	ld	a,#>_font_w
   0E18 DD 8E FF           4052 	adc	a,-1 (ix)
   0E1B 47                 4053 	ld	b,a
   0E1C 0A                 4054 	ld	a,(bc)
   0E1D 4F                 4055 	ld	c,a
   0E1E 0D                 4056 	dec	c
   0E1F DD 46 F2           4057 	ld	b,-14 (ix)
   0E22 CB 20              4058 	sla	b
   0E24 CB 20              4059 	sla	b
   0E26 79                 4060 	ld	a,c
   0E27 80                 4061 	add	a,b
   0E28 4F                 4062 	ld	c,a
   0E29 21rBCs41           4063 	ld	hl,#_lx + 0
   0E2C 46                 4064 	ld	b,(hl)
   0E2D 21rBCs41           4065 	ld	hl,#_lx
   0E30 78                 4066 	ld	a,b
   0E31 81                 4067 	add	a,c
   0E32 77                 4068 	ld	(hl),a
   0E33 DD F9              4069 	ld	sp,ix
   0E35 DD E1              4070 	pop	ix
   0E37 C9                 4071 	ret
   0E38                    4072 _do_2xletter_end::
   0E38                    4073 _font_x:
   0E38 01                 4074 	.db #0x01
   0E39 09                 4075 	.db #0x09
   0E3A 11                 4076 	.db #0x11
   0E3B 19                 4077 	.db #0x19
   0E3C 21                 4078 	.db #0x21
   0E3D 29                 4079 	.db #0x29
   0E3E 31                 4080 	.db #0x31
   0E3F 39                 4081 	.db #0x39
   0E40 41                 4082 	.db #0x41
   0E41 46                 4083 	.db #0x46
   0E42 4E                 4084 	.db #0x4E
   0E43 56                 4085 	.db #0x56
   0E44 5E                 4086 	.db #0x5E
   0E45 01                 4087 	.db #0x01
   0E46 0A                 4088 	.db #0x0A
   0E47 12                 4089 	.db #0x12
   0E48 1A                 4090 	.db #0x1A
   0E49 23                 4091 	.db #0x23
   0E4A 2B                 4092 	.db #0x2B
   0E4B 33                 4093 	.db #0x33
   0E4C 3C                 4094 	.db #0x3C
   0E4D 44                 4095 	.db #0x44
   0E4E 4C                 4096 	.db #0x4C
   0E4F 56                 4097 	.db #0x56
   0E50 5E                 4098 	.db #0x5E
   0E51 67                 4099 	.db #0x67
   0E52 00                 4100 	.db #0x00
   0E53 00                 4101 	.db #0x00
   0E54 00                 4102 	.db #0x00
   0E55 00                 4103 	.db #0x00
   0E56 00                 4104 	.db #0x00
   0E57 00                 4105 	.db #0x00
   0E58 01                 4106 	.db #0x01
   0E59 09                 4107 	.db #0x09
   0E5A 11                 4108 	.db #0x11
   0E5B 18                 4109 	.db #0x18
   0E5C 20                 4110 	.db #0x20
   0E5D 28                 4111 	.db #0x28
   0E5E 2F                 4112 	.db #0x2F
   0E5F 37                 4113 	.db #0x37
   0E60 3F                 4114 	.db #0x3F
   0E61 45                 4115 	.db #0x45
   0E62 4C                 4116 	.db #0x4C
   0E63 54                 4117 	.db #0x54
   0E64 5A                 4118 	.db #0x5A
   0E65 64                 4119 	.db #0x64
   0E66 01                 4120 	.db #0x01
   0E67 09                 4121 	.db #0x09
   0E68 11                 4122 	.db #0x11
   0E69 19                 4123 	.db #0x19
   0E6A 21                 4124 	.db #0x21
   0E6B 29                 4125 	.db #0x29
   0E6C 30                 4126 	.db #0x30
   0E6D 38                 4127 	.db #0x38
   0E6E 40                 4128 	.db #0x40
   0E6F 4A                 4129 	.db #0x4A
   0E70 52                 4130 	.db #0x52
   0E71 5A                 4131 	.db #0x5A
   0E72 00                 4132 	.db 0x00
   0E73 00                 4133 	.db 0x00
   0E74 00                 4134 	.db 0x00
   0E75 00                 4135 	.db 0x00
   0E76 00                 4136 	.db 0x00
   0E77 00                 4137 	.db 0x00
   0E78                    4138 _font_y:
   0E78 1C                 4139 	.db #0x1C
   0E79 1C                 4140 	.db #0x1C
   0E7A 1C                 4141 	.db #0x1C
   0E7B 1C                 4142 	.db #0x1C
   0E7C 1C                 4143 	.db #0x1C
   0E7D 1C                 4144 	.db #0x1C
   0E7E 1C                 4145 	.db #0x1C
   0E7F 1C                 4146 	.db #0x1C
   0E80 1C                 4147 	.db #0x1C
   0E81 1C                 4148 	.db #0x1C
   0E82 1C                 4149 	.db #0x1C
   0E83 1C                 4150 	.db #0x1C
   0E84 1C                 4151 	.db #0x1C
   0E85 25                 4152 	.db #0x25
   0E86 25                 4153 	.db #0x25
   0E87 25                 4154 	.db #0x25
   0E88 25                 4155 	.db #0x25
   0E89 25                 4156 	.db #0x25
   0E8A 25                 4157 	.db #0x25
   0E8B 25                 4158 	.db #0x25
   0E8C 25                 4159 	.db #0x25
   0E8D 25                 4160 	.db #0x25
   0E8E 25                 4161 	.db #0x25
   0E8F 25                 4162 	.db #0x25
   0E90 25                 4163 	.db #0x25
   0E91 25                 4164 	.db #0x25
   0E92 00                 4165 	.db #0x00
   0E93 00                 4166 	.db #0x00
   0E94 00                 4167 	.db #0x00
   0E95 00                 4168 	.db #0x00
   0E96 00                 4169 	.db #0x00
   0E97 00                 4170 	.db #0x00
   0E98 37                 4171 	.db #0x37
   0E99 37                 4172 	.db #0x37
   0E9A 37                 4173 	.db #0x37
   0E9B 37                 4174 	.db #0x37
   0E9C 37                 4175 	.db #0x37
   0E9D 37                 4176 	.db #0x37
   0E9E 37                 4177 	.db #0x37
   0E9F 37                 4178 	.db #0x37
   0EA0 37                 4179 	.db #0x37
   0EA1 37                 4180 	.db #0x37
   0EA2 37                 4181 	.db #0x37
   0EA3 37                 4182 	.db #0x37
   0EA4 37                 4183 	.db #0x37
   0EA5 37                 4184 	.db #0x37
   0EA6 40                 4185 	.db #0x40
   0EA7 40                 4186 	.db #0x40
   0EA8 40                 4187 	.db #0x40
   0EA9 40                 4188 	.db #0x40
   0EAA 40                 4189 	.db #0x40
   0EAB 40                 4190 	.db #0x40
   0EAC 40                 4191 	.db #0x40
   0EAD 40                 4192 	.db #0x40
   0EAE 40                 4193 	.db #0x40
   0EAF 40                 4194 	.db #0x40
   0EB0 40                 4195 	.db #0x40
   0EB1 40                 4196 	.db #0x40
   0EB2 00                 4197 	.db 0x00
   0EB3 00                 4198 	.db 0x00
   0EB4 00                 4199 	.db 0x00
   0EB5 00                 4200 	.db 0x00
   0EB6 00                 4201 	.db 0x00
   0EB7 00                 4202 	.db 0x00
   0EB8                    4203 _font_w:
   0EB8 07                 4204 	.db #0x07
   0EB9 07                 4205 	.db #0x07
   0EBA 07                 4206 	.db #0x07
   0EBB 07                 4207 	.db #0x07
   0EBC 07                 4208 	.db #0x07
   0EBD 07                 4209 	.db #0x07
   0EBE 07                 4210 	.db #0x07
   0EBF 07                 4211 	.db #0x07
   0EC0 04                 4212 	.db #0x04
   0EC1 07                 4213 	.db #0x07
   0EC2 07                 4214 	.db #0x07
   0EC3 07                 4215 	.db #0x07
   0EC4 09                 4216 	.db #0x09
   0EC5 08                 4217 	.db #0x08
   0EC6 07                 4218 	.db #0x07
   0EC7 07                 4219 	.db #0x07
   0EC8 08                 4220 	.db #0x08
   0EC9 07                 4221 	.db #0x07
   0ECA 07                 4222 	.db #0x07
   0ECB 08                 4223 	.db #0x08
   0ECC 07                 4224 	.db #0x07
   0ECD 07                 4225 	.db #0x07
   0ECE 09                 4226 	.db #0x09
   0ECF 07                 4227 	.db #0x07
   0ED0 08                 4228 	.db #0x08
   0ED1 07                 4229 	.db #0x07
   0ED2 00                 4230 	.db #0x00
   0ED3 00                 4231 	.db #0x00
   0ED4 00                 4232 	.db #0x00
   0ED5 00                 4233 	.db #0x00
   0ED6 00                 4234 	.db #0x00
   0ED7 00                 4235 	.db #0x00
   0ED8 07                 4236 	.db #0x07
   0ED9 07                 4237 	.db #0x07
   0EDA 06                 4238 	.db #0x06
   0EDB 07                 4239 	.db #0x07
   0EDC 07                 4240 	.db #0x07
   0EDD 07                 4241 	.db #0x07
   0EDE 07                 4242 	.db #0x07
   0EDF 07                 4243 	.db #0x07
   0EE0 05                 4244 	.db #0x05
   0EE1 06                 4245 	.db #0x06
   0EE2 07                 4246 	.db #0x07
   0EE3 05                 4247 	.db #0x05
   0EE4 09                 4248 	.db #0x09
   0EE5 07                 4249 	.db #0x07
   0EE6 07                 4250 	.db #0x07
   0EE7 07                 4251 	.db #0x07
   0EE8 07                 4252 	.db #0x07
   0EE9 07                 4253 	.db #0x07
   0EEA 07                 4254 	.db #0x07
   0EEB 06                 4255 	.db #0x06
   0EEC 07                 4256 	.db #0x07
   0EED 07                 4257 	.db #0x07
   0EEE 09                 4258 	.db #0x09
   0EEF 07                 4259 	.db #0x07
   0EF0 07                 4260 	.db #0x07
   0EF1 07                 4261 	.db #0x07
   0EF2 00                 4262 	.db 0x00
   0EF3 00                 4263 	.db 0x00
   0EF4 00                 4264 	.db 0x00
   0EF5 00                 4265 	.db 0x00
   0EF6 00                 4266 	.db 0x00
   0EF7 00                 4267 	.db 0x00
                           4268 ;demo.c:475: void do_letter(char cc) {
                           4269 ;	---------------------------------
                           4270 ; Function do_letter
                           4271 ; ---------------------------------
   0EF8                    4272 _do_letter_start::
   0EF8                    4273 _do_letter:
   0EF8 DD E5              4274 	push	ix
   0EFA DD 21 00 00        4275 	ld	ix,#0
   0EFE DD 39              4276 	add	ix,sp
   0F00 F5                 4277 	push	af
                           4278 ;demo.c:476: int cidx = cc - 65;
   0F01 DD 4E 04           4279 	ld	c,4 (ix)
   0F04 DD 7E 04           4280 	ld	a,4 (ix)
   0F07 17                 4281 	rla	
   0F08 9F                 4282 	sbc	a,a
   0F09 47                 4283 	ld	b,a
   0F0A 79                 4284 	ld	a,c
   0F0B C6 BF              4285 	add	a,#0xBF
   0F0D DD 77 FE           4286 	ld	-2 (ix),a
   0F10 78                 4287 	ld	a,b
   0F11 CE FF              4288 	adc	a,#0xFF
   0F13 DD 77 FF           4289 	ld	-1 (ix),a
                           4290 ;demo.c:477: cmd.source_x = 127+font_x[cidx];
   0F16 3Er38              4291 	ld	a,#<_font_x
   0F18 DD 86 FE           4292 	add	a,-2 (ix)
   0F1B 5F                 4293 	ld	e,a
   0F1C 3Es0E              4294 	ld	a,#>_font_x
   0F1E DD 8E FF           4295 	adc	a,-1 (ix)
   0F21 57                 4296 	ld	d,a
   0F22 1A                 4297 	ld	a,(de)
   0F23 5F                 4298 	ld	e,a
   0F24 16 00              4299 	ld	d,#0x00
   0F26 21 7F 00           4300 	ld	hl,#0x007F
   0F29 19                 4301 	add	hl,de
   0F2A EB                 4302 	ex	de,hl
   0F2B 21r2As41           4303 	ld	hl,#_cmd
   0F2E 73                 4304 	ld	(hl),e
   0F2F 23                 4305 	inc	hl
   0F30 72                 4306 	ld	(hl),d
                           4307 ;demo.c:478: cmd.source_y = 512+font_y[cidx];
   0F31 11r2Cs41           4308 	ld	de,#_cmd + 2
   0F34 3Er78              4309 	ld	a,#<_font_y
   0F36 DD 86 FE           4310 	add	a,-2 (ix)
   0F39 4F                 4311 	ld	c,a
   0F3A 3Es0E              4312 	ld	a,#>_font_y
   0F3C DD 8E FF           4313 	adc	a,-1 (ix)
   0F3F 47                 4314 	ld	b,a
   0F40 0A                 4315 	ld	a,(bc)
   0F41 4F                 4316 	ld	c,a
   0F42 06 00              4317 	ld	b,#0x00
   0F44 21 00 02           4318 	ld	hl,#0x0200
   0F47 09                 4319 	add	hl,bc
   0F48 4D                 4320 	ld	c,l
   0F49 44                 4321 	ld	b,h
   0F4A EB                 4322 	ex	de,hl
   0F4B 71                 4323 	ld	(hl),c
   0F4C 23                 4324 	inc	hl
   0F4D 70                 4325 	ld	(hl),b
                           4326 ;demo.c:479: cmd.dest_x = lx;
   0F4E 01r2Es41           4327 	ld	bc,#_cmd + 4
   0F51 21rBCs41           4328 	ld	hl,#_lx + 0
   0F54 5E                 4329 	ld	e,(hl)
   0F55 16 00              4330 	ld	d,#0x00
   0F57 69                 4331 	ld	l,c
   0F58 60                 4332 	ld	h,b
   0F59 73                 4333 	ld	(hl),e
   0F5A 23                 4334 	inc	hl
   0F5B 72                 4335 	ld	(hl),d
                           4336 ;demo.c:480: cmd.dest_y = ly;
   0F5C 01r30s41           4337 	ld	bc,#_cmd + 6
   0F5F 21rBDs41           4338 	ld	hl,#_ly + 0
   0F62 5E                 4339 	ld	e,(hl)
   0F63 16 00              4340 	ld	d,#0x00
   0F65 69                 4341 	ld	l,c
   0F66 60                 4342 	ld	h,b
   0F67 73                 4343 	ld	(hl),e
   0F68 23                 4344 	inc	hl
   0F69 72                 4345 	ld	(hl),d
                           4346 ;demo.c:481: cmd.size_x = font_w[cidx];
   0F6A 01r32s41           4347 	ld	bc,#_cmd + 8
   0F6D 3ErB8              4348 	ld	a,#<_font_w
   0F6F DD 86 FE           4349 	add	a,-2 (ix)
   0F72 5F                 4350 	ld	e,a
   0F73 3Es0E              4351 	ld	a,#>_font_w
   0F75 DD 8E FF           4352 	adc	a,-1 (ix)
   0F78 57                 4353 	ld	d,a
   0F79 1A                 4354 	ld	a,(de)
   0F7A 5F                 4355 	ld	e,a
   0F7B 16 00              4356 	ld	d,#0x00
   0F7D 69                 4357 	ld	l,c
   0F7E 60                 4358 	ld	h,b
   0F7F 73                 4359 	ld	(hl),e
   0F80 23                 4360 	inc	hl
   0F81 72                 4361 	ld	(hl),d
                           4362 ;demo.c:482: cmd.size_y = 8;
   0F82 21r34s41           4363 	ld	hl, #_cmd + 10
   0F85 36 08              4364 	ld	(hl),#0x08
   0F87 23                 4365 	inc	hl
   0F88 36 00              4366 	ld	(hl),#0x00
                           4367 ;demo.c:483: cmd.argument = 0x00;
   0F8A 3E 00              4368 	ld	a,#0x00
   0F8C 32r37s41           4369 	ld	(#_cmd + 13),a
                           4370 ;demo.c:484: cmd.command = 0x90; // logical vram to vram
   0F8F 3E 90              4371 	ld	a,#0x90
   0F91 32r38s41           4372 	ld	(#_cmd + 14),a
                           4373 ;demo.c:485: vdp_copier(&cmd);
   0F94 21r2As41           4374 	ld	hl,#_cmd
   0F97 E5                 4375 	push	hl
   0F98 CDr00s00           4376 	call	_vdp_copier
   0F9B F1                 4377 	pop	af
                           4378 ;demo.c:486: lx+=font_w[cidx]-1;
   0F9C 3ErB8              4379 	ld	a,#<_font_w
   0F9E DD 86 FE           4380 	add	a,-2 (ix)
   0FA1 4F                 4381 	ld	c,a
   0FA2 3Es0E              4382 	ld	a,#>_font_w
   0FA4 DD 8E FF           4383 	adc	a,-1 (ix)
   0FA7 47                 4384 	ld	b,a
   0FA8 0A                 4385 	ld	a,(bc)
   0FA9 4F                 4386 	ld	c,a
   0FAA 0D                 4387 	dec	c
   0FAB 21rBCs41           4388 	ld	hl,#_lx
   0FAE 7E                 4389 	ld	a,(hl)
   0FAF 81                 4390 	add	a,c
   0FB0 77                 4391 	ld	(hl),a
   0FB1 DD F9              4392 	ld	sp,ix
   0FB3 DD E1              4393 	pop	ix
   0FB5 C9                 4394 	ret
   0FB6                    4395 _do_letter_end::
                           4396 ;demo.c:490: void do_letter_tall(char cc) {
                           4397 ;	---------------------------------
                           4398 ; Function do_letter_tall
                           4399 ; ---------------------------------
   0FB6                    4400 _do_letter_tall_start::
   0FB6                    4401 _do_letter_tall:
   0FB6 DD E5              4402 	push	ix
   0FB8 DD 21 00 00        4403 	ld	ix,#0
   0FBC DD 39              4404 	add	ix,sp
   0FBE F5                 4405 	push	af
                           4406 ;demo.c:491: int cidx = cc - 65;
   0FBF DD 4E 04           4407 	ld	c,4 (ix)
   0FC2 DD 7E 04           4408 	ld	a,4 (ix)
   0FC5 17                 4409 	rla	
   0FC6 9F                 4410 	sbc	a,a
   0FC7 47                 4411 	ld	b,a
   0FC8 79                 4412 	ld	a,c
   0FC9 C6 BF              4413 	add	a,#0xBF
   0FCB DD 77 FE           4414 	ld	-2 (ix),a
   0FCE 78                 4415 	ld	a,b
   0FCF CE FF              4416 	adc	a,#0xFF
   0FD1 DD 77 FF           4417 	ld	-1 (ix),a
                           4418 ;demo.c:492: cmd.source_x = 127+font_x[cidx];
   0FD4 3Er38              4419 	ld	a,#<_font_x
   0FD6 DD 86 FE           4420 	add	a,-2 (ix)
   0FD9 5F                 4421 	ld	e,a
   0FDA 3Es0E              4422 	ld	a,#>_font_x
   0FDC DD 8E FF           4423 	adc	a,-1 (ix)
   0FDF 57                 4424 	ld	d,a
   0FE0 1A                 4425 	ld	a,(de)
   0FE1 5F                 4426 	ld	e,a
   0FE2 16 00              4427 	ld	d,#0x00
   0FE4 21 7F 00           4428 	ld	hl,#0x007F
   0FE7 19                 4429 	add	hl,de
   0FE8 EB                 4430 	ex	de,hl
   0FE9 21r2As41           4431 	ld	hl,#_cmd
   0FEC 73                 4432 	ld	(hl),e
   0FED 23                 4433 	inc	hl
   0FEE 72                 4434 	ld	(hl),d
                           4435 ;demo.c:493: cmd.source_y = 512+font_y[cidx];
   0FEF 11r2Cs41           4436 	ld	de,#_cmd + 2
   0FF2 3Er78              4437 	ld	a,#<_font_y
   0FF4 DD 86 FE           4438 	add	a,-2 (ix)
   0FF7 4F                 4439 	ld	c,a
   0FF8 3Es0E              4440 	ld	a,#>_font_y
   0FFA DD 8E FF           4441 	adc	a,-1 (ix)
   0FFD 47                 4442 	ld	b,a
   0FFE 0A                 4443 	ld	a,(bc)
   0FFF 4F                 4444 	ld	c,a
   1000 06 00              4445 	ld	b,#0x00
   1002 21 00 02           4446 	ld	hl,#0x0200
   1005 09                 4447 	add	hl,bc
   1006 4D                 4448 	ld	c,l
   1007 44                 4449 	ld	b,h
   1008 EB                 4450 	ex	de,hl
   1009 71                 4451 	ld	(hl),c
   100A 23                 4452 	inc	hl
   100B 70                 4453 	ld	(hl),b
                           4454 ;demo.c:494: cmd.dest_x = lx;
   100C 01r2Es41           4455 	ld	bc,#_cmd + 4
   100F 21rBCs41           4456 	ld	hl,#_lx + 0
   1012 5E                 4457 	ld	e,(hl)
   1013 16 00              4458 	ld	d,#0x00
   1015 69                 4459 	ld	l,c
   1016 60                 4460 	ld	h,b
   1017 73                 4461 	ld	(hl),e
   1018 23                 4462 	inc	hl
   1019 72                 4463 	ld	(hl),d
                           4464 ;demo.c:495: cmd.dest_y = ly;
   101A 01r30s41           4465 	ld	bc,#_cmd + 6
   101D 21rBDs41           4466 	ld	hl,#_ly + 0
   1020 5E                 4467 	ld	e,(hl)
   1021 16 00              4468 	ld	d,#0x00
   1023 69                 4469 	ld	l,c
   1024 60                 4470 	ld	h,b
   1025 73                 4471 	ld	(hl),e
   1026 23                 4472 	inc	hl
   1027 72                 4473 	ld	(hl),d
                           4474 ;demo.c:496: cmd.size_x = font_w[cidx];
   1028 01r32s41           4475 	ld	bc,#_cmd + 8
   102B 3ErB8              4476 	ld	a,#<_font_w
   102D DD 86 FE           4477 	add	a,-2 (ix)
   1030 5F                 4478 	ld	e,a
   1031 3Es0E              4479 	ld	a,#>_font_w
   1033 DD 8E FF           4480 	adc	a,-1 (ix)
   1036 57                 4481 	ld	d,a
   1037 1A                 4482 	ld	a,(de)
   1038 5F                 4483 	ld	e,a
   1039 16 00              4484 	ld	d,#0x00
   103B 69                 4485 	ld	l,c
   103C 60                 4486 	ld	h,b
   103D 73                 4487 	ld	(hl),e
   103E 23                 4488 	inc	hl
   103F 72                 4489 	ld	(hl),d
                           4490 ;demo.c:497: cmd.size_y = 8;
   1040 21r34s41           4491 	ld	hl, #_cmd + 10
   1043 36 08              4492 	ld	(hl),#0x08
   1045 23                 4493 	inc	hl
   1046 36 00              4494 	ld	(hl),#0x00
                           4495 ;demo.c:498: cmd.argument = 0x00;
   1048 3E 00              4496 	ld	a,#0x00
   104A 32r37s41           4497 	ld	(#_cmd + 13),a
                           4498 ;demo.c:499: cmd.command = 0x90; // logical vram to vram
   104D 3E 90              4499 	ld	a,#0x90
   104F 32r38s41           4500 	ld	(#_cmd + 14),a
                           4501 ;demo.c:500: vdp_copier(&cmd);
   1052 21r2As41           4502 	ld	hl,#_cmd
   1055 E5                 4503 	push	hl
   1056 CDr00s00           4504 	call	_vdp_copier
   1059 F1                 4505 	pop	af
                           4506 ;demo.c:501: lx+=font_w[cidx]-1;
   105A 3ErB8              4507 	ld	a,#<_font_w
   105C DD 86 FE           4508 	add	a,-2 (ix)
   105F 4F                 4509 	ld	c,a
   1060 3Es0E              4510 	ld	a,#>_font_w
   1062 DD 8E FF           4511 	adc	a,-1 (ix)
   1065 47                 4512 	ld	b,a
   1066 0A                 4513 	ld	a,(bc)
   1067 4F                 4514 	ld	c,a
   1068 0D                 4515 	dec	c
   1069 21rBCs41           4516 	ld	hl,#_lx
   106C 7E                 4517 	ld	a,(hl)
   106D 81                 4518 	add	a,c
   106E 77                 4519 	ld	(hl),a
   106F DD F9              4520 	ld	sp,ix
   1071 DD E1              4521 	pop	ix
   1073 C9                 4522 	ret
   1074                    4523 _do_letter_tall_end::
                           4524 ;demo.c:504: void drawstr(char* str, uint8_t x, uint8_t y) {
                           4525 ;	---------------------------------
                           4526 ; Function drawstr
                           4527 ; ---------------------------------
   1074                    4528 _drawstr_start::
   1074                    4529 _drawstr:
   1074 DD E5              4530 	push	ix
   1076 DD 21 00 00        4531 	ld	ix,#0
   107A DD 39              4532 	add	ix,sp
                           4533 ;demo.c:505: char* c = str;
   107C DD 4E 04           4534 	ld	c,4 (ix)
   107F DD 46 05           4535 	ld	b,5 (ix)
                           4536 ;demo.c:506: lx = x;
   1082 DD 5E 06           4537 	ld	e,6 (ix)
   1085 21rBCs41           4538 	ld	hl,#_lx + 0
   1088 73                 4539 	ld	(hl), e
                           4540 ;demo.c:507: ly = y;
   1089 DD 7E 07           4541 	ld	a,7 (ix)
   108C 21rBDs41           4542 	ld	hl,#_ly + 0
   108F 77                 4543 	ld	(hl), a
                           4544 ;demo.c:508: while (*c) {
   1090                    4545 00107$:
   1090 0A                 4546 	ld	a,(bc)
   1091 57                 4547 	ld	d,a
   1092 B7                 4548 	or	a,a
   1093 28 42              4549 	jr	Z,00110$
                           4550 ;demo.c:509: char ltr = *c++; 
   1095 03                 4551 	inc	bc
                           4552 ;demo.c:510: if (ltr == ' ') lx+=4;
   1096 7A                 4553 	ld	a,d
   1097 D6 20              4554 	sub	a,#0x20
   1099 20 1E              4555 	jr	NZ,00105$
   109B FD 21rBCs41        4556 	ld	iy,#_lx
   109F FD 34 00           4557 	inc	0 (iy)
   10A2 FD 21rBCs41        4558 	ld	iy,#_lx
   10A6 FD 34 00           4559 	inc	0 (iy)
   10A9 FD 21rBCs41        4560 	ld	iy,#_lx
   10AD FD 34 00           4561 	inc	0 (iy)
   10B0 FD 21rBCs41        4562 	ld	iy,#_lx
   10B4 FD 34 00           4563 	inc	0 (iy)
   10B7 18 D7              4564 	jr	00107$
   10B9                    4565 00105$:
                           4566 ;demo.c:511: else if (ltr == '_') { ly+=9; lx = x; }
   10B9 7A                 4567 	ld	a,d
   10BA D6 5F              4568 	sub	a,#0x5F
   10BC 20 0D              4569 	jr	NZ,00102$
   10BE 21rBDs41           4570 	ld	hl,#_ly
   10C1 7E                 4571 	ld	a,(hl)
   10C2 C6 09              4572 	add	a,#0x09
   10C4 77                 4573 	ld	(hl),a
   10C5 21rBCs41           4574 	ld	hl,#_lx + 0
   10C8 73                 4575 	ld	(hl), e
   10C9 18 C5              4576 	jr	00107$
   10CB                    4577 00102$:
                           4578 ;demo.c:512: else do_letter(ltr);
   10CB C5                 4579 	push	bc
   10CC D5                 4580 	push	de
   10CD D5                 4581 	push	de
   10CE 33                 4582 	inc	sp
   10CF CDrF8s0E           4583 	call	_do_letter
   10D2 33                 4584 	inc	sp
   10D3 D1                 4585 	pop	de
   10D4 C1                 4586 	pop	bc
   10D5 18 B9              4587 	jr	00107$
   10D7                    4588 00110$:
   10D7 DD E1              4589 	pop	ix
   10D9 C9                 4590 	ret
   10DA                    4591 _drawstr_end::
                           4592 ;demo.c:519: void drawstrslow(char* str, uint8_t x, uint8_t y) {
                           4593 ;	---------------------------------
                           4594 ; Function drawstrslow
                           4595 ; ---------------------------------
   10DA                    4596 _drawstrslow_start::
   10DA                    4597 _drawstrslow:
   10DA DD E5              4598 	push	ix
   10DC DD 21 00 00        4599 	ld	ix,#0
   10E0 DD 39              4600 	add	ix,sp
                           4601 ;demo.c:520: char* c = str+ltrpointer;
   10E2 21rBEs41           4602 	ld	hl,#_ltrpointer
   10E5 DD 7E 04           4603 	ld	a,4 (ix)
   10E8 86                 4604 	add	a,(hl)
   10E9 4F                 4605 	ld	c,a
   10EA DD 7E 05           4606 	ld	a,5 (ix)
   10ED 23                 4607 	inc	hl
   10EE 8E                 4608 	adc	a,(hl)
   10EF 47                 4609 	ld	b,a
                           4610 ;demo.c:521: if (ltrpointer > slowend) return;
   10F0 21rC0s41           4611 	ld	hl,#_slowend
   10F3 7E                 4612 	ld	a,(hl)
   10F4 FD 21rBEs41        4613 	ld	iy,#_ltrpointer
   10F8 FD 96 00           4614 	sub	a,0 (iy)
   10FB 23                 4615 	inc	hl
   10FC 7E                 4616 	ld	a,(hl)
   10FD FD 21rBEs41        4617 	ld	iy,#_ltrpointer
   1101 FD 9E 01           4618 	sbc	a,1 (iy)
   1104 F2r0As11           4619 	jp	P,00102$
   1107 C3r75s11           4620 	jp	00114$
   110A                    4621 00102$:
                           4622 ;demo.c:522: if (ltrpointer == 0) {
   110A 3ArBEs41           4623 	ld	a,(#_ltrpointer+0)
   110D 21rBFs41           4624 	ld	hl,#_ltrpointer + 1
   1110 B6                 4625 	or	a,(hl)
   1111 20 0E              4626 	jr	NZ,00111$
                           4627 ;demo.c:523: lx = x;
   1113 DD 7E 06           4628 	ld	a,6 (ix)
   1116 21rBCs41           4629 	ld	hl,#_lx + 0
   1119 77                 4630 	ld	(hl), a
                           4631 ;demo.c:524: ly = y;
   111A DD 7E 07           4632 	ld	a,7 (ix)
   111D 21rBDs41           4633 	ld	hl,#_ly + 0
   1120 77                 4634 	ld	(hl), a
                           4635 ;demo.c:526: while (*c) {
   1121                    4636 00111$:
   1121 0A                 4637 	ld	a,(bc)
   1122 4F                 4638 	ld	c,a
   1123 B7                 4639 	or	a,a
   1124 28 3F              4640 	jr	Z,00113$
                           4641 ;demo.c:527: char ltr = *c++; 
                           4642 ;demo.c:528: if (ltr == ' ') lx+=4;
   1126 79                 4643 	ld	a,c
   1127 D6 20              4644 	sub	a,#0x20
   1129 20 1E              4645 	jr	NZ,00109$
   112B FD 21rBCs41        4646 	ld	iy,#_lx
   112F FD 34 00           4647 	inc	0 (iy)
   1132 FD 21rBCs41        4648 	ld	iy,#_lx
   1136 FD 34 00           4649 	inc	0 (iy)
   1139 FD 21rBCs41        4650 	ld	iy,#_lx
   113D FD 34 00           4651 	inc	0 (iy)
   1140 FD 21rBCs41        4652 	ld	iy,#_lx
   1144 FD 34 00           4653 	inc	0 (iy)
   1147 18 1C              4654 	jr	00113$
   1149                    4655 00109$:
                           4656 ;demo.c:529: else if (ltr == '_') { ly+=9; lx = x; }
   1149 79                 4657 	ld	a,c
   114A D6 5F              4658 	sub	a,#0x5F
   114C 20 10              4659 	jr	NZ,00106$
   114E 21rBDs41           4660 	ld	hl,#_ly
   1151 7E                 4661 	ld	a,(hl)
   1152 C6 09              4662 	add	a,#0x09
   1154 77                 4663 	ld	(hl),a
   1155 DD 7E 06           4664 	ld	a,6 (ix)
   1158 21rBCs41           4665 	ld	hl,#_lx + 0
   115B 77                 4666 	ld	(hl), a
   115C 18 07              4667 	jr	00113$
   115E                    4668 00106$:
                           4669 ;demo.c:530: else do_letter(ltr);
   115E 79                 4670 	ld	a,c
   115F F5                 4671 	push	af
   1160 33                 4672 	inc	sp
   1161 CDrF8s0E           4673 	call	_do_letter
   1164 33                 4674 	inc	sp
                           4675 ;demo.c:531: break;
   1165                    4676 00113$:
                           4677 ;demo.c:534: ltrpointer++;
   1165 FD 21rBEs41        4678 	ld	iy,#_ltrpointer
   1169 FD 34 00           4679 	inc	0 (iy)
   116C 20 07              4680 	jr	NZ,00125$
   116E FD 21rBEs41        4681 	ld	iy,#_ltrpointer
   1172 FD 34 01           4682 	inc	1 (iy)
   1175                    4683 00125$:
   1175                    4684 00114$:
   1175 DD E1              4685 	pop	ix
   1177 C9                 4686 	ret
   1178                    4687 _drawstrslow_end::
                           4688 ;demo.c:537: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           4689 ;	---------------------------------
                           4690 ; Function drawstr2x
                           4691 ; ---------------------------------
   1178                    4692 _drawstr2x_start::
   1178                    4693 _drawstr2x:
   1178 DD E5              4694 	push	ix
   117A DD 21 00 00        4695 	ld	ix,#0
   117E DD 39              4696 	add	ix,sp
                           4697 ;demo.c:538: char* c = str;
   1180 DD 4E 04           4698 	ld	c,4 (ix)
   1183 DD 46 05           4699 	ld	b,5 (ix)
                           4700 ;demo.c:539: lx = x;
   1186 DD 5E 06           4701 	ld	e,6 (ix)
   1189 21rBCs41           4702 	ld	hl,#_lx + 0
   118C 73                 4703 	ld	(hl), e
                           4704 ;demo.c:540: ly = y;
   118D DD 7E 07           4705 	ld	a,7 (ix)
   1190 21rBDs41           4706 	ld	hl,#_ly + 0
   1193 77                 4707 	ld	(hl), a
                           4708 ;demo.c:541: while (*c) {
   1194                    4709 00107$:
   1194 0A                 4710 	ld	a,(bc)
   1195 57                 4711 	ld	d,a
   1196 B7                 4712 	or	a,a
   1197 28 2D              4713 	jr	Z,00110$
                           4714 ;demo.c:542: char ltr = *c++; 
   1199 03                 4715 	inc	bc
                           4716 ;demo.c:543: if (ltr == ' ') lx+=4*4;
   119A 7A                 4717 	ld	a,d
   119B D6 20              4718 	sub	a,#0x20
   119D 20 09              4719 	jr	NZ,00105$
   119F 21rBCs41           4720 	ld	hl,#_lx
   11A2 7E                 4721 	ld	a,(hl)
   11A3 C6 10              4722 	add	a,#0x10
   11A5 77                 4723 	ld	(hl),a
   11A6 18 EC              4724 	jr	00107$
   11A8                    4725 00105$:
                           4726 ;demo.c:544: else if (ltr == '_') { ly+=9*4; lx = x; }
   11A8 7A                 4727 	ld	a,d
   11A9 D6 5F              4728 	sub	a,#0x5F
   11AB 20 0D              4729 	jr	NZ,00102$
   11AD 21rBDs41           4730 	ld	hl,#_ly
   11B0 7E                 4731 	ld	a,(hl)
   11B1 C6 24              4732 	add	a,#0x24
   11B3 77                 4733 	ld	(hl),a
   11B4 21rBCs41           4734 	ld	hl,#_lx + 0
   11B7 73                 4735 	ld	(hl), e
   11B8 18 DA              4736 	jr	00107$
   11BA                    4737 00102$:
                           4738 ;demo.c:545: else do_2xletter(ltr);
   11BA C5                 4739 	push	bc
   11BB D5                 4740 	push	de
   11BC D5                 4741 	push	de
   11BD 33                 4742 	inc	sp
   11BE CDr8As0B           4743 	call	_do_2xletter
   11C1 33                 4744 	inc	sp
   11C2 D1                 4745 	pop	de
   11C3 C1                 4746 	pop	bc
   11C4 18 CE              4747 	jr	00107$
   11C6                    4748 00110$:
   11C6 DD E1              4749 	pop	ix
   11C8 C9                 4750 	ret
   11C9                    4751 _drawstr2x_end::
                           4752 ;demo.c:550: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4753 ;	---------------------------------
                           4754 ; Function drawsine
                           4755 ; ---------------------------------
   11C9                    4756 _drawsine_start::
   11C9                    4757 _drawsine:
   11C9 DD E5              4758 	push	ix
   11CB DD 21 00 00        4759 	ld	ix,#0
   11CF DD 39              4760 	add	ix,sp
                           4761 ;demo.c:551: char* c = str+ltrpointer;
   11D1 21rBEs41           4762 	ld	hl,#_ltrpointer
   11D4 DD 7E 04           4763 	ld	a,4 (ix)
   11D7 86                 4764 	add	a,(hl)
   11D8 4F                 4765 	ld	c,a
   11D9 DD 7E 05           4766 	ld	a,5 (ix)
   11DC 23                 4767 	inc	hl
   11DD 8E                 4768 	adc	a,(hl)
   11DE 47                 4769 	ld	b,a
                           4770 ;demo.c:552: if (ltrpointer > slowend) return;
   11DF 21rC0s41           4771 	ld	hl,#_slowend
   11E2 7E                 4772 	ld	a,(hl)
   11E3 FD 21rBEs41        4773 	ld	iy,#_ltrpointer
   11E7 FD 96 00           4774 	sub	a,0 (iy)
   11EA 23                 4775 	inc	hl
   11EB 7E                 4776 	ld	a,(hl)
   11EC FD 21rBEs41        4777 	ld	iy,#_ltrpointer
   11F0 FD 9E 01           4778 	sbc	a,1 (iy)
   11F3 F2rF9s11           4779 	jp	P,00102$
   11F6 C3r85s12           4780 	jp	00114$
   11F9                    4781 00102$:
                           4782 ;demo.c:553: if (ltrpointer == 0) {
   11F9 3ArBEs41           4783 	ld	a,(#_ltrpointer+0)
   11FC 21rBFs41           4784 	ld	hl,#_ltrpointer + 1
   11FF B6                 4785 	or	a,(hl)
   1200 20 07              4786 	jr	NZ,00111$
                           4787 ;demo.c:554: lx = x;
   1202 DD 7E 06           4788 	ld	a,6 (ix)
   1205 21rBCs41           4789 	ld	hl,#_lx + 0
   1208 77                 4790 	ld	(hl), a
                           4791 ;demo.c:556: while (*c) {
   1209                    4792 00111$:
   1209 0A                 4793 	ld	a,(bc)
   120A 4F                 4794 	ld	c,a
   120B B7                 4795 	or	a,a
   120C CAr75s12           4796 	jp	Z,00113$
                           4797 ;demo.c:557: char ltr = *c++; 
                           4798 ;demo.c:558: ly = y+(sintabx[(lx+10>>1) & 255]>>4);
   120F 21rBCs41           4799 	ld	hl,#_lx + 0
   1212 5E                 4800 	ld	e,(hl)
   1213 16 00              4801 	ld	d,#0x00
   1215 21 0A 00           4802 	ld	hl,#0x000A
   1218 19                 4803 	add	hl,de
   1219 EB                 4804 	ex	de,hl
   121A CB 2A              4805 	sra	d
   121C CB 1B              4806 	rr	e
   121E 16 00              4807 	ld	d,#0x00
   1220 21r2Cs00           4808 	ld	hl,#_sintabx
   1223 19                 4809 	add	hl,de
   1224 7E                 4810 	ld	a,(hl)
   1225 47                 4811 	ld	b,a
   1226 CB 38              4812 	srl	b
   1228 CB 38              4813 	srl	b
   122A CB 38              4814 	srl	b
   122C CB 38              4815 	srl	b
   122E 21rBDs41           4816 	ld	hl,#_ly
   1231 DD 7E 07           4817 	ld	a,7 (ix)
   1234 80                 4818 	add	a,b
   1235 77                 4819 	ld	(hl),a
                           4820 ;demo.c:560: if (ltr == ' ') lx+=4;
   1236 79                 4821 	ld	a,c
   1237 D6 20              4822 	sub	a,#0x20
   1239 20 1E              4823 	jr	NZ,00109$
   123B FD 21rBCs41        4824 	ld	iy,#_lx
   123F FD 34 00           4825 	inc	0 (iy)
   1242 FD 21rBCs41        4826 	ld	iy,#_lx
   1246 FD 34 00           4827 	inc	0 (iy)
   1249 FD 21rBCs41        4828 	ld	iy,#_lx
   124D FD 34 00           4829 	inc	0 (iy)
   1250 FD 21rBCs41        4830 	ld	iy,#_lx
   1254 FD 34 00           4831 	inc	0 (iy)
   1257 18 1C              4832 	jr	00113$
   1259                    4833 00109$:
                           4834 ;demo.c:561: else if (ltr == '_') { ly+=9; lx = x; }
   1259 79                 4835 	ld	a,c
   125A D6 5F              4836 	sub	a,#0x5F
   125C 20 10              4837 	jr	NZ,00106$
   125E 21rBDs41           4838 	ld	hl,#_ly
   1261 7E                 4839 	ld	a,(hl)
   1262 C6 09              4840 	add	a,#0x09
   1264 77                 4841 	ld	(hl),a
   1265 DD 7E 06           4842 	ld	a,6 (ix)
   1268 21rBCs41           4843 	ld	hl,#_lx + 0
   126B 77                 4844 	ld	(hl), a
   126C 18 07              4845 	jr	00113$
   126E                    4846 00106$:
                           4847 ;demo.c:562: else do_letter_tall(ltr);
   126E 79                 4848 	ld	a,c
   126F F5                 4849 	push	af
   1270 33                 4850 	inc	sp
   1271 CDrB6s0F           4851 	call	_do_letter_tall
   1274 33                 4852 	inc	sp
                           4853 ;demo.c:563: break;
   1275                    4854 00113$:
                           4855 ;demo.c:566: ltrpointer++;
   1275 FD 21rBEs41        4856 	ld	iy,#_ltrpointer
   1279 FD 34 00           4857 	inc	0 (iy)
   127C 20 07              4858 	jr	NZ,00126$
   127E FD 21rBEs41        4859 	ld	iy,#_ltrpointer
   1282 FD 34 01           4860 	inc	1 (iy)
   1285                    4861 00126$:
   1285                    4862 00114$:
   1285 DD E1              4863 	pop	ix
   1287 C9                 4864 	ret
   1288                    4865 _drawsine_end::
                           4866 ;demo.c:569: void font() {
                           4867 ;	---------------------------------
                           4868 ; Function font
                           4869 ; ---------------------------------
   1288                    4870 _font_start::
   1288                    4871 _font:
                           4872 ;demo.c:570: slowend = 128;
   1288 21rC0s41           4873 	ld	hl,#_slowend + 0
   128B 36 80              4874 	ld	(hl), #0x80
   128D 21rC1s41           4875 	ld	hl,#_slowend + 1
   1290 36 00              4876 	ld	(hl), #0x00
                           4877 ;demo.c:571: drawstrslow("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PARTY PEOPLE",74,60);
   1292 21 4A 3C           4878 	ld	hl,#0x3C4A
   1295 E5                 4879 	push	hl
   1296 21rA0s12           4880 	ld	hl,#__str_6
   1299 E5                 4881 	push	hl
   129A CDrDAs10           4882 	call	_drawstrslow
   129D F1                 4883 	pop	af
   129E F1                 4884 	pop	af
   129F C9                 4885 	ret
   12A0                    4886 _font_end::
   12A0                    4887 __str_6:
   12A0 44 49 47 49 54 41  4888 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   12DC 4F 4E 5F 5F 20 20  4889 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PART"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F 5F 5F 4D 41
        4B 45 20 53 4F 4D
        45 20 4E 4F 49 53
        45 20 50 41 52 54
   1318 59 20 50 45 4F 50  4890 	.ascii "Y PEOPLE"
        4C 45
   1320 00                 4891 	.db 0x00
                           4892 ;demo.c:579: void twister() {
                           4893 ;	---------------------------------
                           4894 ; Function twister
                           4895 ; ---------------------------------
   1321                    4896 _twister_start::
   1321                    4897 _twister:
   1321 DD E5              4898 	push	ix
   1323 DD 21 00 00        4899 	ld	ix,#0
   1327 DD 39              4900 	add	ix,sp
   1329 F5                 4901 	push	af
   132A F5                 4902 	push	af
                           4903 ;demo.c:583: if (twinited == 0) {
   132B 3ArC4s41           4904 	ld	a,(#_twinited+0)
   132E FD 21rC4s41        4905 	ld	iy,#_twinited
   1332 FD B6 01           4906 	or	a,1 (iy)
   1335 C2r57s14           4907 	jp	NZ,00102$
                           4908 ;demo.c:584: cmd.size_x = 74;
   1338 21r32s41           4909 	ld	hl, #_cmd + 8
   133B 36 4A              4910 	ld	(hl),#0x4A
   133D 23                 4911 	inc	hl
   133E 36 00              4912 	ld	(hl),#0x00
                           4913 ;demo.c:585: cmd.size_y = 1;
   1340 21r34s41           4914 	ld	hl, #_cmd + 10
   1343 36 01              4915 	ld	(hl),#0x01
   1345 23                 4916 	inc	hl
   1346 36 00              4917 	ld	(hl),#0x00
                           4918 ;demo.c:586: cmd.data = 0;
                           4919 ;demo.c:587: cmd.argument = 0x00; // from 70xY to left
   1348 3E 00              4920 	ld	a,#0x00
   134A 32r36s41           4921 	ld	(#_cmd + 12),a
   134D 32r37s41           4922 	ld	(#_cmd + 13),a
                           4923 ;demo.c:588: cmd.command = 0xd0; // vram to vram, y only
   1350 3E D0              4924 	ld	a,#0xD0
   1352 32r38s41           4925 	ld	(#_cmd + 14),a
                           4926 ;demo.c:589: cmd.source_x = 0;
   1355 21r2As41           4927 	ld	hl,#_cmd
   1358 36 00              4928 	ld	(hl),#0x00
   135A 23                 4929 	inc	hl
   135B 36 00              4930 	ld	(hl),#0x00
                           4931 ;demo.c:590: cmd.source_y = 0;
   135D 01r2Cs41           4932 	ld	bc,#_cmd + 2
   1360 69                 4933 	ld	l,c
   1361 60                 4934 	ld	h,b
   1362 36 00              4935 	ld	(hl),#0x00
   1364 23                 4936 	inc	hl
   1365 36 00              4937 	ld	(hl),#0x00
                           4938 ;demo.c:592: for (y = 0; y < 106; y+=1) {
   1367 DD 36 FE 00        4939 	ld	-2 (ix),#0x00
   136B DD 36 FF 00        4940 	ld	-1 (ix),#0x00
   136F                    4941 00105$:
   136F DD 7E FE           4942 	ld	a,-2 (ix)
   1372 D6 6A              4943 	sub	a,#0x6A
   1374 DD 7E FF           4944 	ld	a,-1 (ix)
   1377 DE 00              4945 	sbc	a,#0x00
   1379 F2r02s14           4946 	jp	P,00108$
                           4947 ;demo.c:593: waitVB();
   137C 76                 4948 		halt 
                           4949 ;demo.c:594: cmd.dest_x = 0;
   137D 11r2Es41           4950 	ld	de,#_cmd + 4
   1380 EB                 4951 	ex	de,hl
   1381 36 00              4952 	ld	(hl),#0x00
   1383 23                 4953 	inc	hl
   1384 36 00              4954 	ld	(hl),#0x00
                           4955 ;demo.c:595: cmd.dest_y = 106+y;
   1386 11r30s41           4956 	ld	de,#_cmd + 6
   1389 DD 7E FE           4957 	ld	a,-2 (ix)
   138C C6 6A              4958 	add	a,#0x6A
   138E 4F                 4959 	ld	c,a
   138F DD 7E FF           4960 	ld	a,-1 (ix)
   1392 CE 00              4961 	adc	a,#0x00
   1394 47                 4962 	ld	b,a
   1395 EB                 4963 	ex	de,hl
   1396 71                 4964 	ld	(hl),c
   1397 23                 4965 	inc	hl
   1398 70                 4966 	ld	(hl),b
                           4967 ;demo.c:596: vdp_copier(&cmd);
   1399 C5                 4968 	push	bc
   139A 21r2As41           4969 	ld	hl,#_cmd
   139D E5                 4970 	push	hl
   139E CDr00s00           4971 	call	_vdp_copier
   13A1 F1                 4972 	pop	af
   13A2 C1                 4973 	pop	bc
                           4974 ;demo.c:597: cmd.dest_x = 256-74;
   13A3 11r2Es41           4975 	ld	de,#_cmd + 4
   13A6 EB                 4976 	ex	de,hl
   13A7 36 B6              4977 	ld	(hl),#0xB6
   13A9 23                 4978 	inc	hl
   13AA 36 00              4979 	ld	(hl),#0x00
                           4980 ;demo.c:598: cmd.dest_y = 106+y;
   13AC 11r30s41           4981 	ld	de,#_cmd + 6
   13AF EB                 4982 	ex	de,hl
   13B0 71                 4983 	ld	(hl),c
   13B1 23                 4984 	inc	hl
   13B2 70                 4985 	ld	(hl),b
                           4986 ;demo.c:599: vdp_copier(&cmd);
   13B3 21r2As41           4987 	ld	hl,#_cmd
   13B6 E5                 4988 	push	hl
   13B7 CDr00s00           4989 	call	_vdp_copier
   13BA F1                 4990 	pop	af
                           4991 ;demo.c:601: cmd.dest_x = 0;
   13BB 21r2Es41           4992 	ld	hl, #_cmd + 4
   13BE 36 00              4993 	ld	(hl),#0x00
   13C0 23                 4994 	inc	hl
   13C1 36 00              4995 	ld	(hl),#0x00
                           4996 ;demo.c:602: cmd.dest_y = 106-y;
   13C3 01r30s41           4997 	ld	bc,#_cmd + 6
   13C6 3E 6A              4998 	ld	a,#0x6A
   13C8 DD 96 FE           4999 	sub	a,-2 (ix)
   13CB 5F                 5000 	ld	e,a
   13CC 3E 00              5001 	ld	a,#0x00
   13CE DD 9E FF           5002 	sbc	a,-1 (ix)
   13D1 57                 5003 	ld	d,a
   13D2 69                 5004 	ld	l,c
   13D3 60                 5005 	ld	h,b
   13D4 73                 5006 	ld	(hl),e
   13D5 23                 5007 	inc	hl
   13D6 72                 5008 	ld	(hl),d
                           5009 ;demo.c:603: vdp_copier(&cmd);
   13D7 D5                 5010 	push	de
   13D8 21r2As41           5011 	ld	hl,#_cmd
   13DB E5                 5012 	push	hl
   13DC CDr00s00           5013 	call	_vdp_copier
   13DF F1                 5014 	pop	af
   13E0 D1                 5015 	pop	de
                           5016 ;demo.c:604: cmd.dest_x = 256-74;
   13E1 21r2Es41           5017 	ld	hl, #_cmd + 4
   13E4 36 B6              5018 	ld	(hl),#0xB6
   13E6 23                 5019 	inc	hl
   13E7 36 00              5020 	ld	(hl),#0x00
                           5021 ;demo.c:605: cmd.dest_y = 106-y;
   13E9 21r30s41           5022 	ld	hl, #_cmd + 6
   13EC 73                 5023 	ld	(hl),e
   13ED 23                 5024 	inc	hl
   13EE 72                 5025 	ld	(hl),d
                           5026 ;demo.c:606: vdp_copier(&cmd);
   13EF 21r2As41           5027 	ld	hl,#_cmd
   13F2 E5                 5028 	push	hl
   13F3 CDr00s00           5029 	call	_vdp_copier
   13F6 F1                 5030 	pop	af
                           5031 ;demo.c:592: for (y = 0; y < 106; y+=1) {
   13F7 DD 34 FE           5032 	inc	-2 (ix)
   13FA 20 03              5033 	jr	NZ,00130$
   13FC DD 34 FF           5034 	inc	-1 (ix)
   13FF                    5035 00130$:
   13FF C3r6Fs13           5036 	jp	00105$
   1402                    5037 00108$:
                           5038 ;demo.c:610: cmd.dest_x = 72;
   1402 21r2Es41           5039 	ld	hl, #_cmd + 4
   1405 36 48              5040 	ld	(hl),#0x48
   1407 23                 5041 	inc	hl
   1408 36 00              5042 	ld	(hl),#0x00
                           5043 ;demo.c:611: cmd.size_x = 140;
   140A 21r32s41           5044 	ld	hl, #_cmd + 8
   140D 36 8C              5045 	ld	(hl),#0x8C
   140F 23                 5046 	inc	hl
   1410 36 00              5047 	ld	(hl),#0x00
                           5048 ;demo.c:612: cmd.size_y = 2;
   1412 21r34s41           5049 	ld	hl, #_cmd + 10
   1415 36 02              5050 	ld	(hl),#0x02
   1417 23                 5051 	inc	hl
   1418 36 00              5052 	ld	(hl),#0x00
                           5053 ;demo.c:613: for (y = 212-2; y >= 0; y-=2) {
   141A 01 D2 00           5054 	ld	bc,#0x00D2
   141D                    5055 00109$:
   141D 78                 5056 	ld	a,b
   141E CB 7F              5057 	bit	7,a
   1420 20 16              5058 	jr	NZ,00112$
                           5059 ;demo.c:614: waitVB();
   1422 76                 5060 		halt 
                           5061 ;demo.c:615: cmd.dest_y = y;
   1423 11r30s41           5062 	ld	de,#_cmd + 6
   1426 EB                 5063 	ex	de,hl
   1427 71                 5064 	ld	(hl),c
   1428 23                 5065 	inc	hl
   1429 70                 5066 	ld	(hl),b
                           5067 ;demo.c:616: vdp_copier(&cmd);
   142A C5                 5068 	push	bc
   142B 21r2As41           5069 	ld	hl,#_cmd
   142E E5                 5070 	push	hl
   142F CDr00s00           5071 	call	_vdp_copier
   1432 F1                 5072 	pop	af
   1433 C1                 5073 	pop	bc
                           5074 ;demo.c:613: for (y = 212-2; y >= 0; y-=2) {
   1434 0B                 5075 	dec	bc
   1435 0B                 5076 	dec	bc
   1436 18 E5              5077 	jr	00109$
   1438                    5078 00112$:
                           5079 ;demo.c:619: twinited = 1;
   1438 21rC4s41           5080 	ld	hl,#_twinited + 0
   143B 36 01              5081 	ld	(hl), #0x01
   143D 21rC5s41           5082 	ld	hl,#_twinited + 1
   1440 36 00              5083 	ld	(hl), #0x00
                           5084 ;demo.c:620: vdp_load_palette(twister_palette);
   1442 21rA6s40           5085 	ld	hl,#_twister_palette
   1445 E5                 5086 	push	hl
   1446 CDr00s00           5087 	call	_vdp_load_palette
   1449 F1                 5088 	pop	af
                           5089 ;demo.c:621: drawstr2x("DSS",80,15);
   144A 21 50 0F           5090 	ld	hl,#0x0F50
   144D E5                 5091 	push	hl
   144E 21rA0s15           5092 	ld	hl,#__str_7
   1451 E5                 5093 	push	hl
   1452 CDr78s11           5094 	call	_drawstr2x
   1455 F1                 5095 	pop	af
   1456 F1                 5096 	pop	af
   1457                    5097 00102$:
                           5098 ;demo.c:625: cmd.size_x = 70;
   1457 21r32s41           5099 	ld	hl, #_cmd + 8
   145A 36 46              5100 	ld	(hl),#0x46
   145C 23                 5101 	inc	hl
   145D 36 00              5102 	ld	(hl),#0x00
                           5103 ;demo.c:626: cmd.size_y = 2;
   145F 21r34s41           5104 	ld	hl, #_cmd + 10
   1462 36 02              5105 	ld	(hl),#0x02
   1464 23                 5106 	inc	hl
   1465 36 00              5107 	ld	(hl),#0x00
                           5108 ;demo.c:627: cmd.data = 0;
   1467 3E 00              5109 	ld	a,#0x00
   1469 32r36s41           5110 	ld	(#_cmd + 12),a
                           5111 ;demo.c:628: cmd.argument = 0x04; // from 70xY to left
   146C 3E 04              5112 	ld	a,#0x04
   146E 32r37s41           5113 	ld	(#_cmd + 13),a
                           5114 ;demo.c:629: cmd.command = 0xe0; // vram to vram, y only
   1471 01r38s41           5115 	ld	bc,#_cmd + 14
   1474 3E E0              5116 	ld	a,#0xE0
   1476 02                 5117 	ld	(bc),a
                           5118 ;demo.c:630: cmd.source_x = 70;
   1477 21r2As41           5119 	ld	hl,#_cmd
   147A 36 46              5120 	ld	(hl),#0x46
   147C 23                 5121 	inc	hl
   147D 36 00              5122 	ld	(hl),#0x00
                           5123 ;demo.c:631: cmd.dest_x = 70;
   147F 11r2Es41           5124 	ld	de,#_cmd + 4
   1482 EB                 5125 	ex	de,hl
   1483 36 46              5126 	ld	(hl),#0x46
   1485 23                 5127 	inc	hl
   1486 36 00              5128 	ld	(hl),#0x00
                           5129 ;demo.c:633: twialku++;
   1488 FD 21rC6s41        5130 	ld	iy,#_twialku
   148C FD 34 00           5131 	inc	0 (iy)
   148F 20 07              5132 	jr	NZ,00131$
   1491 FD 21rC6s41        5133 	ld	iy,#_twialku
   1495 FD 34 01           5134 	inc	1 (iy)
   1498                    5135 00131$:
                           5136 ;demo.c:635: if (twialku > 212) twialku = 212;
   1498 3E D4              5137 	ld	a,#0xD4
   149A FD 21rC6s41        5138 	ld	iy,#_twialku
   149E FD 96 00           5139 	sub	a,0 (iy)
   14A1 3E 00              5140 	ld	a,#0x00
   14A3 FD 21rC6s41        5141 	ld	iy,#_twialku
   14A7 FD 9E 01           5142 	sbc	a,1 (iy)
   14AA F2rB7s14           5143 	jp	P,00104$
   14AD 21rC6s41           5144 	ld	hl,#_twialku + 0
   14B0 36 D4              5145 	ld	(hl), #0xD4
   14B2 21rC7s41           5146 	ld	hl,#_twialku + 1
   14B5 36 00              5147 	ld	(hl), #0x00
   14B7                    5148 00104$:
                           5149 ;demo.c:637: cmd.command = 0xd0; // vram to vram, y only
   14B7 3E D0              5150 	ld	a,#0xD0
   14B9 02                 5151 	ld	(bc),a
                           5152 ;demo.c:638: for (y = 104-(twialku>>1); y < 106+(twialku>>1); y+=2) {
   14BA 21rC6s41           5153 	ld	hl,#_twialku + 0
   14BD 4E                 5154 	ld	c,(hl)
   14BE 21rC7s41           5155 	ld	hl,#_twialku + 1
   14C1 46                 5156 	ld	b,(hl)
   14C2 CB 28              5157 	sra	b
   14C4 CB 19              5158 	rr	c
   14C6 3E 68              5159 	ld	a,#0x68
   14C8 91                 5160 	sub	a,c
   14C9 4F                 5161 	ld	c,a
   14CA 3E 00              5162 	ld	a,#0x00
   14CC 98                 5163 	sbc	a,b
   14CD 47                 5164 	ld	b,a
   14CE                    5165 00113$:
   14CE 21rC6s41           5166 	ld	hl,#_twialku + 0
   14D1 5E                 5167 	ld	e,(hl)
   14D2 21rC7s41           5168 	ld	hl,#_twialku + 1
   14D5 56                 5169 	ld	d,(hl)
   14D6 CB 2A              5170 	sra	d
   14D8 CB 1B              5171 	rr	e
   14DA 21 6A 00           5172 	ld	hl,#0x006A
   14DD 19                 5173 	add	hl,de
   14DE EB                 5174 	ex	de,hl
   14DF 79                 5175 	ld	a,c
   14E0 93                 5176 	sub	a,e
   14E1 78                 5177 	ld	a,b
   14E2 9A                 5178 	sbc	a,d
   14E3 F2r2Fs15           5179 	jp	P,00116$
                           5180 ;demo.c:639: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+80;
   14E6 21r2Cs41           5181 	ld	hl,#_cmd + 2
   14E9 DD 75 FC           5182 	ld	-4 (ix),l
   14EC DD 74 FD           5183 	ld	-3 (ix),h
   14EF 59                 5184 	ld	e,c
   14F0 50                 5185 	ld	d,b
   14F1 CB 2A              5186 	sra	d
   14F3 CB 1B              5187 	rr	e
   14F5 3ArC2s41           5188 	ld	a,(#_ff+0)
   14F8 83                 5189 	add	a,e
   14F9 5F                 5190 	ld	e,a
   14FA 3ArC3s41           5191 	ld	a,(#_ff+1)
   14FD 8A                 5192 	adc	a,d
   14FE 16 00              5193 	ld	d,#0x00
   1500 21r00s00           5194 	ld	hl,#_sintab
   1503 19                 5195 	add	hl,de
   1504 5E                 5196 	ld	e,(hl)
   1505 CB 2B              5197 	sra	e
   1507 7B                 5198 	ld	a,e
   1508 17                 5199 	rla	
   1509 9F                 5200 	sbc	a,a
   150A 57                 5201 	ld	d,a
   150B 21 50 02           5202 	ld	hl,#0x0250
   150E 19                 5203 	add	hl,de
   150F EB                 5204 	ex	de,hl
   1510 DD 6E FC           5205 	ld	l,-4 (ix)
   1513 DD 66 FD           5206 	ld	h,-3 (ix)
   1516 73                 5207 	ld	(hl),e
   1517 23                 5208 	inc	hl
   1518 72                 5209 	ld	(hl),d
                           5210 ;demo.c:640: cmd.dest_y = y;
   1519 11r30s41           5211 	ld	de,#_cmd + 6
   151C EB                 5212 	ex	de,hl
   151D 71                 5213 	ld	(hl),c
   151E 23                 5214 	inc	hl
   151F 70                 5215 	ld	(hl),b
                           5216 ;demo.c:641: vdp_copier(&cmd);
   1520 C5                 5217 	push	bc
   1521 21r2As41           5218 	ld	hl,#_cmd
   1524 E5                 5219 	push	hl
   1525 CDr00s00           5220 	call	_vdp_copier
   1528 F1                 5221 	pop	af
   1529 C1                 5222 	pop	bc
                           5223 ;demo.c:638: for (y = 104-(twialku>>1); y < 106+(twialku>>1); y+=2) {
   152A 03                 5224 	inc	bc
   152B 03                 5225 	inc	bc
   152C C3rCEs14           5226 	jp	00113$
   152F                    5227 00116$:
                           5228 ;demo.c:644: msx2_palette(4,PLY_PSGReg8+ff>>2,PLY_PSGReg9+ff>>3,ff>>2);
   152F 21rC2s41           5229 	ld	hl,#_ff + 0
   1532 4E                 5230 	ld	c,(hl)
   1533 21rC3s41           5231 	ld	hl,#_ff + 1
   1536 46                 5232 	ld	b,(hl)
   1537 CB 28              5233 	sra	b
   1539 CB 19              5234 	rr	c
   153B CB 28              5235 	sra	b
   153D CB 19              5236 	rr	c
   153F 21r00s00           5237 	ld	hl,#_PLY_PSGReg9 + 0
   1542 5E                 5238 	ld	e,(hl)
   1543 16 00              5239 	ld	d,#0x00
   1545 21rC2s41           5240 	ld	hl,#_ff
   1548 7B                 5241 	ld	a,e
   1549 86                 5242 	add	a,(hl)
   154A 5F                 5243 	ld	e,a
   154B 7A                 5244 	ld	a,d
   154C 23                 5245 	inc	hl
   154D 8E                 5246 	adc	a,(hl)
   154E 57                 5247 	ld	d,a
   154F CB 2A              5248 	sra	d
   1551 CB 1B              5249 	rr	e
   1553 CB 2A              5250 	sra	d
   1555 CB 1B              5251 	rr	e
   1557 CB 2A              5252 	sra	d
   1559 CB 1B              5253 	rr	e
   155B 43                 5254 	ld	b,e
   155C 21r00s00           5255 	ld	hl,#_PLY_PSGReg8 + 0
   155F 5E                 5256 	ld	e,(hl)
   1560 16 00              5257 	ld	d,#0x00
   1562 21rC2s41           5258 	ld	hl,#_ff
   1565 7B                 5259 	ld	a,e
   1566 86                 5260 	add	a,(hl)
   1567 5F                 5261 	ld	e,a
   1568 7A                 5262 	ld	a,d
   1569 23                 5263 	inc	hl
   156A 8E                 5264 	adc	a,(hl)
   156B 57                 5265 	ld	d,a
   156C CB 2A              5266 	sra	d
   156E CB 1B              5267 	rr	e
   1570 CB 2A              5268 	sra	d
   1572 CB 1B              5269 	rr	e
   1574 79                 5270 	ld	a,c
   1575 F5                 5271 	push	af
   1576 33                 5272 	inc	sp
   1577 C5                 5273 	push	bc
   1578 33                 5274 	inc	sp
   1579 53                 5275 	ld	d,e
   157A 1E 04              5276 	ld	e,#0x04
   157C D5                 5277 	push	de
   157D CDr00s00           5278 	call	_msx2_palette
   1580 F1                 5279 	pop	af
   1581 F1                 5280 	pop	af
                           5281 ;demo.c:646: font();
   1582 CDr88s12           5282 	call	_font
                           5283 ;demo.c:648: ff+=4;
   1585 21rC2s41           5284 	ld	hl,#_ff
   1588 7E                 5285 	ld	a,(hl)
   1589 C6 04              5286 	add	a,#0x04
   158B 23                 5287 	inc	hl
   158C 2B                 5288 	dec	hl
   158D C5                 5289 	push	bc
   158E 4F                 5290 	ld	c, a
   158F 23                 5291 	inc	hl
   1590 7E                 5292 	ld	a, (hl)
   1591 47                 5293 	ld	b, a
   1592 79                 5294 	ld	a, c
   1593 2B                 5295 	dec	hl
   1594 77                 5296 	ld	(hl), a
   1595 78                 5297 	ld	a, b
   1596 C1                 5298 	pop	bc
   1597 CE 00              5299 	adc	a,#0x00
   1599 23                 5300 	inc	hl
   159A 77                 5301 	ld	(hl),a
   159B DD F9              5302 	ld	sp,ix
   159D DD E1              5303 	pop	ix
   159F C9                 5304 	ret
   15A0                    5305 _twister_end::
   15A0                    5306 __str_7:
   15A0 44 53 53           5307 	.ascii "DSS"
   15A3 00                 5308 	.db 0x00
                           5309 ;demo.c:659: void bulbs() {
                           5310 ;	---------------------------------
                           5311 ; Function bulbs
                           5312 ; ---------------------------------
   15A4                    5313 _bulbs_start::
   15A4                    5314 _bulbs:
   15A4 DD E5              5315 	push	ix
   15A6 DD 21 00 00        5316 	ld	ix,#0
   15AA DD 39              5317 	add	ix,sp
   15AC 21 FA FF           5318 	ld	hl,#-6
   15AF 39                 5319 	add	hl,sp
   15B0 F9                 5320 	ld	sp,hl
                           5321 ;demo.c:663: ender+=enderdir;
   15B1 21rD0s41           5322 	ld	hl,#_enderdir
   15B4 D5                 5323 	push	de
   15B5 FD 21rCEs41        5324 	ld	iy,#_ender
   15B9 FD E5              5325 	push	iy
   15BB D1                 5326 	pop	de
   15BC 1A                 5327 	ld	a,(de)
   15BD 86                 5328 	add	a,(hl)
   15BE 13                 5329 	inc	de
   15BF 1B                 5330 	dec	de
   15C0 C5                 5331 	push	bc
   15C1 4F                 5332 	ld	c, a
   15C2 13                 5333 	inc	de
   15C3 1A                 5334 	ld	a, (de)
   15C4 47                 5335 	ld	b, a
   15C5 79                 5336 	ld	a, c
   15C6 1B                 5337 	dec	de
   15C7 12                 5338 	ld	(de), a
   15C8 78                 5339 	ld	a, b
   15C9 C1                 5340 	pop	bc
   15CA 23                 5341 	inc	hl
   15CB 8E                 5342 	adc	a,(hl)
   15CC 13                 5343 	inc	de
   15CD 12                 5344 	ld	(de),a
   15CE D1                 5345 	pop	de
                           5346 ;demo.c:664: if (ender < 2) { enderdir = -enderdir; }
   15CF 3ArCEs41           5347 	ld	a,(#_ender+0)
   15D2 D6 02              5348 	sub	a,#0x02
   15D4 3ArCFs41           5349 	ld	a,(#_ender+1)
   15D7 DE 00              5350 	sbc	a,#0x00
   15D9 F2rFDs15           5351 	jp	P,00102$
   15DC AF                 5352 	xor	a,a
   15DD FD 21rD0s41        5353 	ld	iy,#_enderdir
   15E1 3E 00              5354 	ld	a,#0x00
   15E3 FD 9E 00           5355 	sbc	a,0 (iy)
   15E6 FD 21rD0s41        5356 	ld	iy,#_enderdir
   15EA FD 77 00           5357 	ld	0 (iy),a
   15ED FD 21rD0s41        5358 	ld	iy,#_enderdir
   15F1 3E 00              5359 	ld	a,#0x00
   15F3 FD 9E 01           5360 	sbc	a,1 (iy)
   15F6 FD 21rD0s41        5361 	ld	iy,#_enderdir
   15FA FD 77 01           5362 	ld	1 (iy),a
   15FD                    5363 00102$:
                           5364 ;demo.c:665: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   15FD 3ArCEs41           5365 	ld	a,(#_ender+0)
   1600 D6 D4              5366 	sub	a,#0xD4
   1602 3ArCFs41           5367 	ld	a,(#_ender+1)
   1605 DE 00              5368 	sbc	a,#0x00
   1607 FAr2Ds16           5369 	jp	M,00104$
   160A AF                 5370 	xor	a,a
   160B FD 21rD0s41        5371 	ld	iy,#_enderdir
   160F 3E 00              5372 	ld	a,#0x00
   1611 FD 9E 00           5373 	sbc	a,0 (iy)
   1614 21rD0s41           5374 	ld	hl,#_enderdir + 0
   1617 77                 5375 	ld	(hl), a
   1618 FD 21rD0s41        5376 	ld	iy,#_enderdir
   161C 3E 00              5377 	ld	a,#0x00
   161E FD 9E 01           5378 	sbc	a,1 (iy)
   1621 21rD1s41           5379 	ld	hl,#_enderdir + 1
   1624 77                 5380 	ld	(hl), a
   1625 2ArD2s41           5381 	ld	hl,(_sy)
   1628 2B                 5382 	dec	hl
   1629 2B                 5383 	dec	hl
   162A 22rD2s41           5384 	ld	(_sy),hl
   162D                    5385 00104$:
                           5386 ;demo.c:667: enderend = ender + 92;
   162D 3ArCEs41           5387 	ld	a,(#_ender+0)
   1630 C6 5C              5388 	add	a,#0x5C
   1632 DD 77 FE           5389 	ld	-2 (ix),a
   1635 3ArCFs41           5390 	ld	a,(#_ender+1)
   1638 CE 00              5391 	adc	a,#0x00
   163A DD 77 FF           5392 	ld	-1 (ix),a
                           5393 ;demo.c:669: if (enderend > 212) enderend = 212;
   163D 3E D4              5394 	ld	a,#0xD4
   163F DD 96 FE           5395 	sub	a,-2 (ix)
   1642 3E 00              5396 	ld	a,#0x00
   1644 DD 9E FF           5397 	sbc	a,-1 (ix)
   1647 F2r52s16           5398 	jp	P,00106$
   164A DD 36 FE D4        5399 	ld	-2 (ix),#0xD4
   164E DD 36 FF 00        5400 	ld	-1 (ix),#0x00
   1652                    5401 00106$:
                           5402 ;demo.c:670: if (enderend > 212-16) sy = 16-(212-enderend);
   1652 3E C4              5403 	ld	a,#0xC4
   1654 DD 96 FE           5404 	sub	a,-2 (ix)
   1657 3E 00              5405 	ld	a,#0x00
   1659 DD 9E FF           5406 	sbc	a,-1 (ix)
   165C F2r77s16           5407 	jp	P,00108$
   165F 3E D4              5408 	ld	a,#0xD4
   1661 DD 96 FE           5409 	sub	a,-2 (ix)
   1664 5F                 5410 	ld	e,a
   1665 3E 00              5411 	ld	a,#0x00
   1667 DD 9E FF           5412 	sbc	a,-1 (ix)
   166A 57                 5413 	ld	d,a
   166B 21rD2s41           5414 	ld	hl,#_sy
   166E 3E 10              5415 	ld	a,#0x10
   1670 93                 5416 	sub	a,e
   1671 77                 5417 	ld	(hl),a
   1672 3E 00              5418 	ld	a,#0x00
   1674 9A                 5419 	sbc	a,d
   1675 23                 5420 	inc	hl
   1676 77                 5421 	ld	(hl),a
   1677                    5422 00108$:
                           5423 ;demo.c:672: if(bulbflipper == 1) {
   1677 3ArC8s41           5424 	ld	a,(#_bulbflipper+0)
   167A D6 01              5425 	sub	a,#0x01
   167C 20 06              5426 	jr	NZ,00133$
   167E 3ArC9s41           5427 	ld	a,(#_bulbflipper+1)
   1681 B7                 5428 	or	a,a
   1682 28 03              5429 	jr	Z,00134$
   1684                    5430 00133$:
   1684 C3r3Ds17           5431 	jp	00110$
   1687                    5432 00134$:
                           5433 ;demo.c:673: cmd.size_x = 72;
   1687 11r32s41           5434 	ld	de,#_cmd + 8
   168A EB                 5435 	ex	de,hl
   168B 36 48              5436 	ld	(hl),#0x48
   168D 23                 5437 	inc	hl
   168E 36 00              5438 	ld	(hl),#0x00
                           5439 ;demo.c:674: cmd.size_y = sy;
   1690 11r34s41           5440 	ld	de,#_cmd + 10
   1693 ED 4BrD2s41        5441 	ld	bc,(_sy)
   1697 6B                 5442 	ld	l,e
   1698 62                 5443 	ld	h,d
   1699 71                 5444 	ld	(hl),c
   169A 23                 5445 	inc	hl
   169B 70                 5446 	ld	(hl),b
                           5447 ;demo.c:675: cmd.data = 0;
   169C 3E 00              5448 	ld	a,#0x00
   169E 32r36s41           5449 	ld	(#_cmd + 12),a
                           5450 ;demo.c:676: cmd.argument = 0x04; // from 72xY to left
   16A1 3E 04              5451 	ld	a,#0x04
   16A3 32r37s41           5452 	ld	(#_cmd + 13),a
                           5453 ;demo.c:677: cmd.command = 0xe0; // vram to vram, y only
   16A6 01r38s41           5454 	ld	bc,#_cmd + 14
   16A9 3E E0              5455 	ld	a,#0xE0
   16AB 02                 5456 	ld	(bc),a
                           5457 ;demo.c:678: cmd.source_x = 72;
   16AC 21r2As41           5458 	ld	hl,#_cmd
   16AF 36 48              5459 	ld	(hl),#0x48
   16B1 23                 5460 	inc	hl
   16B2 36 00              5461 	ld	(hl),#0x00
                           5462 ;demo.c:679: cmd.dest_x = 72;
   16B4 21r2Es41           5463 	ld	hl, #_cmd + 4
   16B7 36 48              5464 	ld	(hl),#0x48
   16B9 23                 5465 	inc	hl
   16BA 36 00              5466 	ld	(hl),#0x00
                           5467 ;demo.c:681: for (y = ender; y < enderend; y+=16) {
   16BC ED 4BrCEs41        5468 	ld	bc,(_ender)
   16C0 DD 71 FC           5469 	ld	-4 (ix),c
   16C3 DD 70 FD           5470 	ld	-3 (ix),b
   16C6                    5471 00112$:
   16C6 DD 7E FC           5472 	ld	a,-4 (ix)
   16C9 DD 96 FE           5473 	sub	a,-2 (ix)
   16CC DD 7E FD           5474 	ld	a,-3 (ix)
   16CF DD 9E FF           5475 	sbc	a,-1 (ix)
   16D2 F2r24s17           5476 	jp	P,00115$
                           5477 ;demo.c:682: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   16D5 01r2Cs41           5478 	ld	bc,#_cmd + 2
   16D8 3ArCAs41           5479 	ld	a,(#_ff1+0)
   16DB DD 86 FC           5480 	add	a,-4 (ix)
   16DE 5F                 5481 	ld	e,a
   16DF 3ArCBs41           5482 	ld	a,(#_ff1+1)
   16E2 DD 8E FD           5483 	adc	a,-3 (ix)
   16E5 16 00              5484 	ld	d,#0x00
   16E7 21r00s00           5485 	ld	hl,#_sintab
   16EA 19                 5486 	add	hl,de
   16EB 5E                 5487 	ld	e,(hl)
   16EC CB 2B              5488 	sra	e
   16EE 7B                 5489 	ld	a,e
   16EF 17                 5490 	rla	
   16F0 9F                 5491 	sbc	a,a
   16F1 57                 5492 	ld	d,a
   16F2 21 40 01           5493 	ld	hl,#0x0140
   16F5 19                 5494 	add	hl,de
   16F6 EB                 5495 	ex	de,hl
   16F7 69                 5496 	ld	l,c
   16F8 60                 5497 	ld	h,b
   16F9 73                 5498 	ld	(hl),e
   16FA 23                 5499 	inc	hl
   16FB 72                 5500 	ld	(hl),d
                           5501 ;demo.c:683: cmd.dest_y = y;
   16FC 11r30s41           5502 	ld	de,#_cmd + 6
   16FF EB                 5503 	ex	de,hl
   1700 DD 7E FC           5504 	ld	a,-4 (ix)
   1703 77                 5505 	ld	(hl),a
   1704 23                 5506 	inc	hl
   1705 DD 7E FD           5507 	ld	a,-3 (ix)
   1708 77                 5508 	ld	(hl),a
                           5509 ;demo.c:684: vdp_copier(&cmd);
   1709 21r2As41           5510 	ld	hl,#_cmd
   170C E5                 5511 	push	hl
   170D CDr00s00           5512 	call	_vdp_copier
   1710 F1                 5513 	pop	af
                           5514 ;demo.c:681: for (y = ender; y < enderend; y+=16) {
   1711 DD 7E FC           5515 	ld	a,-4 (ix)
   1714 C6 10              5516 	add	a,#0x10
   1716 DD 77 FC           5517 	ld	-4 (ix),a
   1719 DD 7E FD           5518 	ld	a,-3 (ix)
   171C CE 00              5519 	adc	a,#0x00
   171E DD 77 FD           5520 	ld	-3 (ix),a
   1721 C3rC6s16           5521 	jp	00112$
   1724                    5522 00115$:
                           5523 ;demo.c:686: ff1+=4;
   1724 21rCAs41           5524 	ld	hl,#_ff1
   1727 7E                 5525 	ld	a,(hl)
   1728 C6 04              5526 	add	a,#0x04
   172A 23                 5527 	inc	hl
   172B 2B                 5528 	dec	hl
   172C C5                 5529 	push	bc
   172D 4F                 5530 	ld	c, a
   172E 23                 5531 	inc	hl
   172F 7E                 5532 	ld	a, (hl)
   1730 47                 5533 	ld	b, a
   1731 79                 5534 	ld	a, c
   1732 2B                 5535 	dec	hl
   1733 77                 5536 	ld	(hl), a
   1734 78                 5537 	ld	a, b
   1735 C1                 5538 	pop	bc
   1736 CE 00              5539 	adc	a,#0x00
   1738 23                 5540 	inc	hl
   1739 77                 5541 	ld	(hl),a
   173A C3rE2s17           5542 	jp	00111$
   173D                    5543 00110$:
                           5544 ;demo.c:690: cmd.size_x = 72;
   173D 11r32s41           5545 	ld	de,#_cmd + 8
   1740 EB                 5546 	ex	de,hl
   1741 36 48              5547 	ld	(hl),#0x48
   1743 23                 5548 	inc	hl
   1744 36 00              5549 	ld	(hl),#0x00
                           5550 ;demo.c:691: cmd.size_y = sy;
   1746 01r34s41           5551 	ld	bc,#_cmd + 10
   1749 ED 5BrD2s41        5552 	ld	de,(_sy)
   174D 69                 5553 	ld	l,c
   174E 60                 5554 	ld	h,b
   174F 73                 5555 	ld	(hl),e
   1750 23                 5556 	inc	hl
   1751 72                 5557 	ld	(hl),d
                           5558 ;demo.c:692: cmd.data = 0;
   1752 11r36s41           5559 	ld	de,#_cmd + 12
   1755 3E 00              5560 	ld	a,#0x00
   1757 12                 5561 	ld	(de),a
                           5562 ;demo.c:693: cmd.argument = 0x00; // from 182xY to right
   1758 11r37s41           5563 	ld	de,#_cmd + 13
   175B 3E 00              5564 	ld	a,#0x00
   175D 12                 5565 	ld	(de),a
                           5566 ;demo.c:694: cmd.command = 0xe0; // vram to vram, y only
   175E 11r38s41           5567 	ld	de,#_cmd + 14
   1761 3E E0              5568 	ld	a,#0xE0
   1763 12                 5569 	ld	(de),a
                           5570 ;demo.c:695: cmd.source_x = 182;
   1764 21r2As41           5571 	ld	hl,#_cmd
   1767 36 B6              5572 	ld	(hl),#0xB6
   1769 23                 5573 	inc	hl
   176A 36 00              5574 	ld	(hl),#0x00
                           5575 ;demo.c:696: cmd.dest_x = 182;
   176C 11r2Es41           5576 	ld	de,#_cmd + 4
   176F 6B                 5577 	ld	l,e
   1770 62                 5578 	ld	h,d
   1771 36 B6              5579 	ld	(hl),#0xB6
   1773 23                 5580 	inc	hl
   1774 36 00              5581 	ld	(hl),#0x00
                           5582 ;demo.c:698: for (y = ender; y < enderend; y+=16) {
   1776 ED 4BrCEs41        5583 	ld	bc,(_ender)
   177A                    5584 00116$:
   177A 79                 5585 	ld	a,c
   177B DD 96 FE           5586 	sub	a,-2 (ix)
   177E 78                 5587 	ld	a,b
   177F DD 9E FF           5588 	sbc	a,-1 (ix)
   1782 F2rCCs17           5589 	jp	P,00119$
                           5590 ;demo.c:699: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1785 21r2Cs41           5591 	ld	hl,#_cmd + 2
   1788 DD 75 FA           5592 	ld	-6 (ix),l
   178B DD 74 FB           5593 	ld	-5 (ix),h
   178E 3ArCCs41           5594 	ld	a,(#_ff2+0)
   1791 81                 5595 	add	a,c
   1792 5F                 5596 	ld	e,a
   1793 3ArCDs41           5597 	ld	a,(#_ff2+1)
   1796 88                 5598 	adc	a,b
   1797 16 00              5599 	ld	d,#0x00
   1799 21r00s00           5600 	ld	hl,#_sintab
   179C 19                 5601 	add	hl,de
   179D 5E                 5602 	ld	e,(hl)
   179E CB 2B              5603 	sra	e
   17A0 7B                 5604 	ld	a,e
   17A1 17                 5605 	rla	
   17A2 9F                 5606 	sbc	a,a
   17A3 57                 5607 	ld	d,a
   17A4 21 40 01           5608 	ld	hl,#0x0140
   17A7 19                 5609 	add	hl,de
   17A8 EB                 5610 	ex	de,hl
   17A9 DD 6E FA           5611 	ld	l,-6 (ix)
   17AC DD 66 FB           5612 	ld	h,-5 (ix)
   17AF 73                 5613 	ld	(hl),e
   17B0 23                 5614 	inc	hl
   17B1 72                 5615 	ld	(hl),d
                           5616 ;demo.c:700: cmd.dest_y = y;
   17B2 11r30s41           5617 	ld	de,#_cmd + 6
   17B5 EB                 5618 	ex	de,hl
   17B6 71                 5619 	ld	(hl),c
   17B7 23                 5620 	inc	hl
   17B8 70                 5621 	ld	(hl),b
                           5622 ;demo.c:701: vdp_copier(&cmd);
   17B9 C5                 5623 	push	bc
   17BA 21r2As41           5624 	ld	hl,#_cmd
   17BD E5                 5625 	push	hl
   17BE CDr00s00           5626 	call	_vdp_copier
   17C1 F1                 5627 	pop	af
   17C2 C1                 5628 	pop	bc
                           5629 ;demo.c:698: for (y = ender; y < enderend; y+=16) {
   17C3 21 10 00           5630 	ld	hl,#0x0010
   17C6 09                 5631 	add	hl,bc
   17C7 4D                 5632 	ld	c,l
   17C8 44                 5633 	ld	b,h
   17C9 C3r7As17           5634 	jp	00116$
   17CC                    5635 00119$:
                           5636 ;demo.c:703: ff2+=4;
   17CC 21rCCs41           5637 	ld	hl,#_ff2
   17CF 7E                 5638 	ld	a,(hl)
   17D0 C6 04              5639 	add	a,#0x04
   17D2 23                 5640 	inc	hl
   17D3 2B                 5641 	dec	hl
   17D4 C5                 5642 	push	bc
   17D5 4F                 5643 	ld	c, a
   17D6 23                 5644 	inc	hl
   17D7 7E                 5645 	ld	a, (hl)
   17D8 47                 5646 	ld	b, a
   17D9 79                 5647 	ld	a, c
   17DA 2B                 5648 	dec	hl
   17DB 77                 5649 	ld	(hl), a
   17DC 78                 5650 	ld	a, b
   17DD C1                 5651 	pop	bc
   17DE CE 00              5652 	adc	a,#0x00
   17E0 23                 5653 	inc	hl
   17E1 77                 5654 	ld	(hl),a
   17E2                    5655 00111$:
                           5656 ;demo.c:706: bulbflipper = -bulbflipper;
   17E2 AF                 5657 	xor	a,a
   17E3 FD 21rC8s41        5658 	ld	iy,#_bulbflipper
   17E7 3E 00              5659 	ld	a,#0x00
   17E9 FD 9E 00           5660 	sbc	a,0 (iy)
   17EC 21rC8s41           5661 	ld	hl,#_bulbflipper + 0
   17EF 77                 5662 	ld	(hl), a
   17F0 FD 21rC8s41        5663 	ld	iy,#_bulbflipper
   17F4 3E 00              5664 	ld	a,#0x00
   17F6 FD 9E 01           5665 	sbc	a,1 (iy)
   17F9 21rC9s41           5666 	ld	hl,#_bulbflipper + 1
   17FC 77                 5667 	ld	(hl), a
   17FD DD F9              5668 	ld	sp,ix
   17FF DD E1              5669 	pop	ix
   1801 C9                 5670 	ret
   1802                    5671 _bulbs_end::
                           5672 ;demo.c:720: void animplay() {
                           5673 ;	---------------------------------
                           5674 ; Function animplay
                           5675 ; ---------------------------------
   1802                    5676 _animplay_start::
   1802                    5677 _animplay:
                           5678 ;demo.c:721: }
   1802 C9                 5679 	ret
   1803                    5680 _animplay_end::
                           5681 ;demo.c:734: void drawbox(uint8_t x, uint8_t y) {
                           5682 ;	---------------------------------
                           5683 ; Function drawbox
                           5684 ; ---------------------------------
   1803                    5685 _drawbox_start::
   1803                    5686 _drawbox:
   1803 DD E5              5687 	push	ix
   1805 DD 21 00 00        5688 	ld	ix,#0
   1809 DD 39              5689 	add	ix,sp
                           5690 ;demo.c:735: cmd.source_x = boxes_x[boxi];
   180B 21rF4s41           5691 	ld	hl,#_boxi
   180E 3ErE5              5692 	ld	a,#<_boxes_x
   1810 86                 5693 	add	a,(hl)
   1811 4F                 5694 	ld	c,a
   1812 3Es41              5695 	ld	a,#>_boxes_x
   1814 CE 00              5696 	adc	a,#0x00
   1816 47                 5697 	ld	b,a
   1817 0A                 5698 	ld	a,(bc)
   1818 4F                 5699 	ld	c,a
   1819 06 00              5700 	ld	b,#0x00
   181B 21r2As41           5701 	ld	hl,#_cmd
   181E 71                 5702 	ld	(hl),c
   181F 23                 5703 	inc	hl
   1820 70                 5704 	ld	(hl),b
                           5705 ;demo.c:736: cmd.source_y = boxes_y[boxi];
   1821 01r2Cs41           5706 	ld	bc,#_cmd + 2
   1824 3ArF4s41           5707 	ld	a,(#_boxi+0)
   1827 87                 5708 	add	a,a
   1828 C6rEA              5709 	add	a,#<_boxes_y
   182A 6F                 5710 	ld	l,a
   182B 3Es41              5711 	ld	a,#>_boxes_y
   182D CE 00              5712 	adc	a,#0x00
   182F 67                 5713 	ld	h,a
   1830 5E                 5714 	ld	e,(hl)
   1831 23                 5715 	inc	hl
   1832 56                 5716 	ld	d,(hl)
   1833 69                 5717 	ld	l,c
   1834 60                 5718 	ld	h,b
   1835 73                 5719 	ld	(hl),e
   1836 23                 5720 	inc	hl
   1837 72                 5721 	ld	(hl),d
                           5722 ;demo.c:737: cmd.dest_x = x;
   1838 01r2Es41           5723 	ld	bc,#_cmd + 4
   183B DD 5E 04           5724 	ld	e,4 (ix)
   183E 16 00              5725 	ld	d,#0x00
   1840 69                 5726 	ld	l,c
   1841 60                 5727 	ld	h,b
   1842 73                 5728 	ld	(hl),e
   1843 23                 5729 	inc	hl
   1844 72                 5730 	ld	(hl),d
                           5731 ;demo.c:738: cmd.dest_y = y;
   1845 01r30s41           5732 	ld	bc,#_cmd + 6
   1848 DD 5E 05           5733 	ld	e,5 (ix)
   184B 16 00              5734 	ld	d,#0x00
   184D 69                 5735 	ld	l,c
   184E 60                 5736 	ld	h,b
   184F 73                 5737 	ld	(hl),e
   1850 23                 5738 	inc	hl
   1851 72                 5739 	ld	(hl),d
                           5740 ;demo.c:739: cmd.size_x = 36;
   1852 21r32s41           5741 	ld	hl, #_cmd + 8
   1855 36 24              5742 	ld	(hl),#0x24
   1857 23                 5743 	inc	hl
   1858 36 00              5744 	ld	(hl),#0x00
                           5745 ;demo.c:740: cmd.size_y = 36;
   185A 21r34s41           5746 	ld	hl, #_cmd + 10
   185D 36 24              5747 	ld	(hl),#0x24
   185F 23                 5748 	inc	hl
   1860 36 00              5749 	ld	(hl),#0x00
                           5750 ;demo.c:741: cmd.data = 0;
                           5751 ;demo.c:742: cmd.argument = 0x00;
   1862 3E 00              5752 	ld	a,#0x00
   1864 32r36s41           5753 	ld	(#_cmd + 12),a
   1867 32r37s41           5754 	ld	(#_cmd + 13),a
                           5755 ;demo.c:743: cmd.command = 0x98; // TIMP sprite
   186A 3E 98              5756 	ld	a,#0x98
   186C 32r38s41           5757 	ld	(#_cmd + 14),a
                           5758 ;demo.c:744: vdp_copier(&cmd);
   186F 21r2As41           5759 	ld	hl,#_cmd
   1872 E5                 5760 	push	hl
   1873 CDr00s00           5761 	call	_vdp_copier
   1876 F1                 5762 	pop	af
                           5763 ;demo.c:746: prevx = x;
   1877 DD 7E 04           5764 	ld	a,4 (ix)
   187A 21rE1s41           5765 	ld	hl,#_prevx + 0
   187D 77                 5766 	ld	(hl), a
   187E 21rE2s41           5767 	ld	hl,#_prevx + 1
   1881 36 00              5768 	ld	(hl), #0x00
                           5769 ;demo.c:747: prevy = y;
   1883 DD 7E 05           5770 	ld	a,5 (ix)
   1886 21rE3s41           5771 	ld	hl,#_prevy + 0
   1889 77                 5772 	ld	(hl), a
   188A 21rE4s41           5773 	ld	hl,#_prevy + 1
   188D 36 00              5774 	ld	(hl), #0x00
   188F DD E1              5775 	pop	ix
   1891 C9                 5776 	ret
   1892                    5777 _drawbox_end::
                           5778 ;demo.c:761: void boxes() {
                           5779 ;	---------------------------------
                           5780 ; Function boxes
                           5781 ; ---------------------------------
   1892                    5782 _boxes_start::
   1892                    5783 _boxes:
   1892 DD E5              5784 	push	ix
   1894 DD 21 00 00        5785 	ld	ix,#0
   1898 DD 39              5786 	add	ix,sp
   189A F5                 5787 	push	af
                           5788 ;demo.c:765: if (bx < 0) return;
   189B FD 21rF5s41        5789 	ld	iy,#_bx
   189F FD CB 01 7E        5790 	bit	7,1 (iy)
   18A3 C2r55s1D           5791 	jp	NZ,00151$
                           5792 ;demo.c:767: if (bonc == 1) {
   18A6 3ArFDs41           5793 	ld	a,(#_bonc+0)
   18A9 D6 01              5794 	sub	a,#0x01
   18AB 20 06              5795 	jr	NZ,00181$
   18AD 3ArFEs41           5796 	ld	a,(#_bonc+1)
   18B0 B7                 5797 	or	a,a
   18B1 28 02              5798 	jr	Z,00182$
   18B3                    5799 00181$:
   18B3 18 4D              5800 	jr	00104$
   18B5                    5801 00182$:
                           5802 ;demo.c:769: cmd.source_x = 0;
   18B5 21r2As41           5803 	ld	hl,#_cmd
   18B8 36 00              5804 	ld	(hl),#0x00
   18BA 23                 5805 	inc	hl
   18BB 36 00              5806 	ld	(hl),#0x00
                           5807 ;demo.c:770: cmd.source_y = 256;
   18BD 21r2Cs41           5808 	ld	hl, #_cmd + 2
   18C0 36 00              5809 	ld	(hl),#0x00
   18C2 23                 5810 	inc	hl
   18C3 36 01              5811 	ld	(hl),#0x01
                           5812 ;demo.c:771: cmd.dest_x = pbx;
   18C5 01r2Es41           5813 	ld	bc,#_cmd + 4
   18C8 ED 5BrFFs41        5814 	ld	de,(_pbx)
   18CC 69                 5815 	ld	l,c
   18CD 60                 5816 	ld	h,b
   18CE 73                 5817 	ld	(hl),e
   18CF 23                 5818 	inc	hl
   18D0 72                 5819 	ld	(hl),d
                           5820 ;demo.c:772: cmd.dest_y = pbt;
   18D1 01r30s41           5821 	ld	bc,#_cmd + 6
   18D4 ED 5Br01s42        5822 	ld	de,(_pbt)
   18D8 69                 5823 	ld	l,c
   18D9 60                 5824 	ld	h,b
   18DA 73                 5825 	ld	(hl),e
   18DB 23                 5826 	inc	hl
   18DC 72                 5827 	ld	(hl),d
                           5828 ;demo.c:773: cmd.size_x = 36;
   18DD 21r32s41           5829 	ld	hl, #_cmd + 8
   18E0 36 24              5830 	ld	(hl),#0x24
   18E2 23                 5831 	inc	hl
   18E3 36 00              5832 	ld	(hl),#0x00
                           5833 ;demo.c:774: cmd.size_y = 36;
   18E5 21r34s41           5834 	ld	hl, #_cmd + 10
   18E8 36 24              5835 	ld	(hl),#0x24
   18EA 23                 5836 	inc	hl
   18EB 36 00              5837 	ld	(hl),#0x00
                           5838 ;demo.c:775: cmd.data = 0;
                           5839 ;demo.c:776: cmd.argument = 0x00;
   18ED 3E 00              5840 	ld	a,#0x00
   18EF 32r36s41           5841 	ld	(#_cmd + 12),a
   18F2 32r37s41           5842 	ld	(#_cmd + 13),a
                           5843 ;demo.c:777: cmd.command = 0xD0; // HMMM
   18F5 3E D0              5844 	ld	a,#0xD0
   18F7 32r38s41           5845 	ld	(#_cmd + 14),a
                           5846 ;demo.c:778: vdp_copier(&cmd);
   18FA 21r2As41           5847 	ld	hl,#_cmd
   18FD E5                 5848 	push	hl
   18FE CDr00s00           5849 	call	_vdp_copier
   1901 F1                 5850 	pop	af
   1902                    5851 00104$:
                           5852 ;demo.c:781: if (boxes_init == 0) {
   1902 AF                 5853 	xor	a,a
   1903 21rDEs41           5854 	ld	hl,#_boxes_init + 0
   1906 B6                 5855 	or	a,(hl)
   1907 C2r69s1A           5856 	jp	NZ,00106$
                           5857 ;demo.c:782: boxes_init = 1;
   190A FD 21rDEs41        5858 	ld	iy,#_boxes_init
   190E FD 36 00 01        5859 	ld	0 (iy),#0x01
                           5860 ;demo.c:784: cmd.size_x = 8;
   1912 21r32s41           5861 	ld	hl, #_cmd + 8
   1915 36 08              5862 	ld	(hl),#0x08
   1917 23                 5863 	inc	hl
   1918 36 00              5864 	ld	(hl),#0x00
                           5865 ;demo.c:785: cmd.size_y = 212;
   191A 21r34s41           5866 	ld	hl, #_cmd + 10
   191D 36 D4              5867 	ld	(hl),#0xD4
   191F 23                 5868 	inc	hl
   1920 36 00              5869 	ld	(hl),#0x00
                           5870 ;demo.c:786: cmd.data = 0;
                           5871 ;demo.c:787: cmd.argument = 0x00; // from 70xY to left
   1922 3E 00              5872 	ld	a,#0x00
   1924 32r36s41           5873 	ld	(#_cmd + 12),a
   1927 32r37s41           5874 	ld	(#_cmd + 13),a
                           5875 ;demo.c:788: cmd.command = 0xd0; // vram to vram, y only
   192A 01r38s41           5876 	ld	bc,#_cmd + 14
   192D 3E D0              5877 	ld	a,#0xD0
   192F 02                 5878 	ld	(bc),a
                           5879 ;demo.c:789: cmd.source_x = 248;
   1930 21r2As41           5880 	ld	hl,#_cmd
   1933 36 F8              5881 	ld	(hl),#0xF8
   1935 23                 5882 	inc	hl
   1936 36 00              5883 	ld	(hl),#0x00
                           5884 ;demo.c:790: cmd.source_y = 0;
   1938 21r2Cs41           5885 	ld	hl, #_cmd + 2
   193B 36 00              5886 	ld	(hl),#0x00
   193D 23                 5887 	inc	hl
   193E 36 00              5888 	ld	(hl),#0x00
                           5889 ;demo.c:791: cmd.dest_y = 0;
   1940 01r30s41           5890 	ld	bc,#_cmd + 6
   1943 69                 5891 	ld	l,c
   1944 60                 5892 	ld	h,b
   1945 36 00              5893 	ld	(hl),#0x00
   1947 23                 5894 	inc	hl
   1948 36 00              5895 	ld	(hl),#0x00
                           5896 ;demo.c:793: for (x = 248; x >= 0; x-=8) {
   194A DD 36 FE F8        5897 	ld	-2 (ix),#0xF8
   194E DD 36 FF 00        5898 	ld	-1 (ix),#0x00
   1952                    5899 00139$:
   1952 DD CB FF 7E        5900 	bit	7,-1 (ix)
   1956 C2rE1s19           5901 	jp	NZ,00142$
                           5902 ;demo.c:794: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1959 21rC2s41           5903 	ld	hl,#_ff + 0
   195C 5E                 5904 	ld	e,(hl)
   195D 21rC3s41           5905 	ld	hl,#_ff + 1
   1960 56                 5906 	ld	d,(hl)
   1961 CB 2A              5907 	sra	d
   1963 CB 1B              5908 	rr	e
   1965 CB 2A              5909 	sra	d
   1967 CB 1B              5910 	rr	e
   1969 21rC2s41           5911 	ld	hl,#_ff + 0
   196C 56                 5912 	ld	d,(hl)
   196D 21rC3s41           5913 	ld	hl,#_ff + 1
   1970 4E                 5914 	ld	c,(hl)
   1971 CB 29              5915 	sra	c
   1973 CB 1A              5916 	rr	d
   1975 CB 29              5917 	sra	c
   1977 CB 1A              5918 	rr	d
   1979 CB 29              5919 	sra	c
   197B CB 1A              5920 	rr	d
   197D 7B                 5921 	ld	a,e
   197E F5                 5922 	push	af
   197F 33                 5923 	inc	sp
   1980 D5                 5924 	push	de
   1981 33                 5925 	inc	sp
   1982 53                 5926 	ld	d,e
   1983 1E 04              5927 	ld	e,#0x04
   1985 D5                 5928 	push	de
   1986 CDr00s00           5929 	call	_msx2_palette
   1989 F1                 5930 	pop	af
   198A F1                 5931 	pop	af
                           5932 ;demo.c:795: ff+=2;
   198B 21rC2s41           5933 	ld	hl,#_ff
   198E 7E                 5934 	ld	a,(hl)
   198F C6 02              5935 	add	a,#0x02
   1991 23                 5936 	inc	hl
   1992 2B                 5937 	dec	hl
   1993 C5                 5938 	push	bc
   1994 4F                 5939 	ld	c, a
   1995 23                 5940 	inc	hl
   1996 7E                 5941 	ld	a, (hl)
   1997 47                 5942 	ld	b, a
   1998 79                 5943 	ld	a, c
   1999 2B                 5944 	dec	hl
   199A 77                 5945 	ld	(hl), a
   199B 78                 5946 	ld	a, b
   199C C1                 5947 	pop	bc
   199D CE 00              5948 	adc	a,#0x00
   199F 23                 5949 	inc	hl
   19A0 77                 5950 	ld	(hl),a
                           5951 ;demo.c:796: waitVB();
   19A1 76                 5952 		halt 
                           5953 ;demo.c:797: cmd.dest_x = x;
   19A2 21r2Es41           5954 	ld	hl, #_cmd + 4
   19A5 DD 7E FE           5955 	ld	a,-2 (ix)
   19A8 77                 5956 	ld	(hl),a
   19A9 23                 5957 	inc	hl
   19AA DD 7E FF           5958 	ld	a,-1 (ix)
   19AD 77                 5959 	ld	(hl),a
                           5960 ;demo.c:798: cmd.dest_y = 0;
   19AE 21r30s41           5961 	ld	hl, #_cmd + 6
   19B1 36 00              5962 	ld	(hl),#0x00
   19B3 23                 5963 	inc	hl
   19B4 36 00              5964 	ld	(hl),#0x00
                           5965 ;demo.c:799: vdp_copier(&cmd);
   19B6 21r2As41           5966 	ld	hl,#_cmd
   19B9 E5                 5967 	push	hl
   19BA CDr00s00           5968 	call	_vdp_copier
   19BD F1                 5969 	pop	af
                           5970 ;demo.c:800: cmd.dest_y = 256;
   19BE 21r30s41           5971 	ld	hl, #_cmd + 6
   19C1 36 00              5972 	ld	(hl),#0x00
   19C3 23                 5973 	inc	hl
   19C4 36 01              5974 	ld	(hl),#0x01
                           5975 ;demo.c:801: vdp_copier(&cmd);
   19C6 21r2As41           5976 	ld	hl,#_cmd
   19C9 E5                 5977 	push	hl
   19CA CDr00s00           5978 	call	_vdp_copier
   19CD F1                 5979 	pop	af
                           5980 ;demo.c:793: for (x = 248; x >= 0; x-=8) {
   19CE DD 7E FE           5981 	ld	a,-2 (ix)
   19D1 C6 F8              5982 	add	a,#0xF8
   19D3 DD 77 FE           5983 	ld	-2 (ix),a
   19D6 DD 7E FF           5984 	ld	a,-1 (ix)
   19D9 CE FF              5985 	adc	a,#0xFF
   19DB DD 77 FF           5986 	ld	-1 (ix),a
   19DE C3r52s19           5987 	jp	00139$
   19E1                    5988 00142$:
                           5989 ;demo.c:804: vdp_load_palette(boxes_palette);
   19E1 21rE6s40           5990 	ld	hl,#_boxes_palette
   19E4 E5                 5991 	push	hl
   19E5 CDr00s00           5992 	call	_vdp_load_palette
   19E8 F1                 5993 	pop	af
                           5994 ;demo.c:806: for (x=0;x < 8;x++) {
   19E9 DD 36 FE 00        5995 	ld	-2 (ix),#0x00
   19ED DD 36 FF 00        5996 	ld	-1 (ix),#0x00
   19F1                    5997 00147$:
   19F1 DD 7E FE           5998 	ld	a,-2 (ix)
   19F4 D6 08              5999 	sub	a,#0x08
   19F6 DD 7E FF           6000 	ld	a,-1 (ix)
   19F9 DE 00              6001 	sbc	a,#0x00
   19FB F2r55s1A           6002 	jp	P,00150$
                           6003 ;demo.c:808: for (y=0;y < 9;y++) {
   19FE 11 00 00           6004 	ld	de,#0x0000
   1A01                    6005 00143$:
   1A01 7B                 6006 	ld	a,e
   1A02 D6 09              6007 	sub	a,#0x09
   1A04 7A                 6008 	ld	a,d
   1A05 DE 00              6009 	sbc	a,#0x00
   1A07 F2r4As1A           6010 	jp	P,00149$
                           6011 ;demo.c:809: boxes_x[4] = 0;
   1A0A 01rE9s41           6012 	ld	bc,#_boxes_x + 4
   1A0D 3E 00              6013 	ld	a,#0x00
   1A0F 02                 6014 	ld	(bc),a
                           6015 ;demo.c:810: boxes_y[4] = 768+2*36;
   1A10 21rF2s41           6016 	ld	hl, #_boxes_y + 8
   1A13 36 48              6017 	ld	(hl),#0x48
   1A15 23                 6018 	inc	hl
   1A16 36 03              6019 	ld	(hl),#0x03
                           6020 ;demo.c:811: boxi = 4;
   1A18 21rF4s41           6021 	ld	hl,#_boxi + 0
   1A1B 36 04              6022 	ld	(hl), #0x04
                           6023 ;demo.c:812: drawbox((x*36),y*18);
   1A1D 4B                 6024 	ld	c,e
   1A1E D5                 6025 	push	de
   1A1F 79                 6026 	ld	a,c
   1A20 5F                 6027 	ld	e,a
   1A21 87                 6028 	add	a,a
   1A22 87                 6029 	add	a,a
   1A23 87                 6030 	add	a,a
   1A24 83                 6031 	add	a,e
   1A25 87                 6032 	add	a,a
   1A26 D1                 6033 	pop	de
   1A27 4F                 6034 	ld	c,a
   1A28 DD 46 FE           6035 	ld	b,-2 (ix)
   1A2B D5                 6036 	push	de
   1A2C 78                 6037 	ld	a,b
   1A2D 5F                 6038 	ld	e,a
   1A2E 87                 6039 	add	a,a
   1A2F 87                 6040 	add	a,a
   1A30 87                 6041 	add	a,a
   1A31 83                 6042 	add	a,e
   1A32 87                 6043 	add	a,a
   1A33 87                 6044 	add	a,a
   1A34 D1                 6045 	pop	de
   1A35 47                 6046 	ld	b,a
   1A36 D5                 6047 	push	de
   1A37 79                 6048 	ld	a,c
   1A38 F5                 6049 	push	af
   1A39 33                 6050 	inc	sp
   1A3A C5                 6051 	push	bc
   1A3B 33                 6052 	inc	sp
   1A3C CDr03s18           6053 	call	_drawbox
   1A3F F1                 6054 	pop	af
   1A40 D1                 6055 	pop	de
                           6056 ;demo.c:813: boxi = 0;
   1A41 21rF4s41           6057 	ld	hl,#_boxi + 0
   1A44 36 00              6058 	ld	(hl), #0x00
                           6059 ;demo.c:808: for (y=0;y < 9;y++) {
   1A46 13                 6060 	inc	de
   1A47 C3r01s1A           6061 	jp	00143$
   1A4A                    6062 00149$:
                           6063 ;demo.c:806: for (x=0;x < 8;x++) {
   1A4A DD 34 FE           6064 	inc	-2 (ix)
   1A4D 20 03              6065 	jr	NZ,00185$
   1A4F DD 34 FF           6066 	inc	-1 (ix)
   1A52                    6067 00185$:
   1A52 C3rF1s19           6068 	jp	00147$
   1A55                    6069 00150$:
                           6070 ;demo.c:817: slowend = 43;
   1A55 21rC0s41           6071 	ld	hl,#_slowend + 0
   1A58 36 2B              6072 	ld	(hl), #0x2B
   1A5A 21rC1s41           6073 	ld	hl,#_slowend + 1
   1A5D 36 00              6074 	ld	(hl), #0x00
                           6075 ;demo.c:818: ltrpointer = 0;
   1A5F 21rBEs41           6076 	ld	hl,#_ltrpointer + 0
   1A62 36 00              6077 	ld	(hl), #0x00
   1A64 21rBFs41           6078 	ld	hl,#_ltrpointer + 1
   1A67 36 00              6079 	ld	(hl), #0x00
   1A69                    6080 00106$:
                           6081 ;demo.c:821: if (bt >= 80) bt+=8;
   1A69 3ArF9s41           6082 	ld	a,(#_bt+0)
   1A6C D6 50              6083 	sub	a,#0x50
   1A6E 3ArFAs41           6084 	ld	a,(#_bt+1)
   1A71 DE 00              6085 	sbc	a,#0x00
   1A73 FAr8Cs1A           6086 	jp	M,00108$
   1A76 21rF9s41           6087 	ld	hl,#_bt
   1A79 7E                 6088 	ld	a,(hl)
   1A7A C6 08              6089 	add	a,#0x08
   1A7C 23                 6090 	inc	hl
   1A7D 2B                 6091 	dec	hl
   1A7E C5                 6092 	push	bc
   1A7F 4F                 6093 	ld	c, a
   1A80 23                 6094 	inc	hl
   1A81 7E                 6095 	ld	a, (hl)
   1A82 47                 6096 	ld	b, a
   1A83 79                 6097 	ld	a, c
   1A84 2B                 6098 	dec	hl
   1A85 77                 6099 	ld	(hl), a
   1A86 78                 6100 	ld	a, b
   1A87 C1                 6101 	pop	bc
   1A88 CE 00              6102 	adc	a,#0x00
   1A8A 23                 6103 	inc	hl
   1A8B 77                 6104 	ld	(hl),a
   1A8C                    6105 00108$:
                           6106 ;demo.c:822: if (bt < 80 && bt >= 60) bt+=7;
   1A8C 3ArF9s41           6107 	ld	a,(#_bt+0)
   1A8F D6 50              6108 	sub	a,#0x50
   1A91 3ArFAs41           6109 	ld	a,(#_bt+1)
   1A94 DE 00              6110 	sbc	a,#0x00
   1A96 F2rBCs1A           6111 	jp	P,00110$
   1A99 3ArF9s41           6112 	ld	a,(#_bt+0)
   1A9C D6 3C              6113 	sub	a,#0x3C
   1A9E 3ArFAs41           6114 	ld	a,(#_bt+1)
   1AA1 DE 00              6115 	sbc	a,#0x00
   1AA3 FArBCs1A           6116 	jp	M,00110$
   1AA6 21rF9s41           6117 	ld	hl,#_bt
   1AA9 7E                 6118 	ld	a,(hl)
   1AAA C6 07              6119 	add	a,#0x07
   1AAC 23                 6120 	inc	hl
   1AAD 2B                 6121 	dec	hl
   1AAE C5                 6122 	push	bc
   1AAF 4F                 6123 	ld	c, a
   1AB0 23                 6124 	inc	hl
   1AB1 7E                 6125 	ld	a, (hl)
   1AB2 47                 6126 	ld	b, a
   1AB3 79                 6127 	ld	a, c
   1AB4 2B                 6128 	dec	hl
   1AB5 77                 6129 	ld	(hl), a
   1AB6 78                 6130 	ld	a, b
   1AB7 C1                 6131 	pop	bc
   1AB8 CE 00              6132 	adc	a,#0x00
   1ABA 23                 6133 	inc	hl
   1ABB 77                 6134 	ld	(hl),a
   1ABC                    6135 00110$:
                           6136 ;demo.c:823: if (bt < 60 && bt >= 40) bt+=6;
   1ABC 3ArF9s41           6137 	ld	a,(#_bt+0)
   1ABF D6 3C              6138 	sub	a,#0x3C
   1AC1 3ArFAs41           6139 	ld	a,(#_bt+1)
   1AC4 DE 00              6140 	sbc	a,#0x00
   1AC6 F2rECs1A           6141 	jp	P,00113$
   1AC9 3ArF9s41           6142 	ld	a,(#_bt+0)
   1ACC D6 28              6143 	sub	a,#0x28
   1ACE 3ArFAs41           6144 	ld	a,(#_bt+1)
   1AD1 DE 00              6145 	sbc	a,#0x00
   1AD3 FArECs1A           6146 	jp	M,00113$
   1AD6 21rF9s41           6147 	ld	hl,#_bt
   1AD9 7E                 6148 	ld	a,(hl)
   1ADA C6 06              6149 	add	a,#0x06
   1ADC 23                 6150 	inc	hl
   1ADD 2B                 6151 	dec	hl
   1ADE C5                 6152 	push	bc
   1ADF 4F                 6153 	ld	c, a
   1AE0 23                 6154 	inc	hl
   1AE1 7E                 6155 	ld	a, (hl)
   1AE2 47                 6156 	ld	b, a
   1AE3 79                 6157 	ld	a, c
   1AE4 2B                 6158 	dec	hl
   1AE5 77                 6159 	ld	(hl), a
   1AE6 78                 6160 	ld	a, b
   1AE7 C1                 6161 	pop	bc
   1AE8 CE 00              6162 	adc	a,#0x00
   1AEA 23                 6163 	inc	hl
   1AEB 77                 6164 	ld	(hl),a
   1AEC                    6165 00113$:
                           6166 ;demo.c:824: if (bt < 40 && bt >= 10) bt+=5;
   1AEC 3ArF9s41           6167 	ld	a,(#_bt+0)
   1AEF D6 28              6168 	sub	a,#0x28
   1AF1 3ArFAs41           6169 	ld	a,(#_bt+1)
   1AF4 DE 00              6170 	sbc	a,#0x00
   1AF6 F2r1Cs1B           6171 	jp	P,00116$
   1AF9 3ArF9s41           6172 	ld	a,(#_bt+0)
   1AFC D6 0A              6173 	sub	a,#0x0A
   1AFE 3ArFAs41           6174 	ld	a,(#_bt+1)
   1B01 DE 00              6175 	sbc	a,#0x00
   1B03 FAr1Cs1B           6176 	jp	M,00116$
   1B06 21rF9s41           6177 	ld	hl,#_bt
   1B09 7E                 6178 	ld	a,(hl)
   1B0A C6 05              6179 	add	a,#0x05
   1B0C 23                 6180 	inc	hl
   1B0D 2B                 6181 	dec	hl
   1B0E C5                 6182 	push	bc
   1B0F 4F                 6183 	ld	c, a
   1B10 23                 6184 	inc	hl
   1B11 7E                 6185 	ld	a, (hl)
   1B12 47                 6186 	ld	b, a
   1B13 79                 6187 	ld	a, c
   1B14 2B                 6188 	dec	hl
   1B15 77                 6189 	ld	(hl), a
   1B16 78                 6190 	ld	a, b
   1B17 C1                 6191 	pop	bc
   1B18 CE 00              6192 	adc	a,#0x00
   1B1A 23                 6193 	inc	hl
   1B1B 77                 6194 	ld	(hl),a
   1B1C                    6195 00116$:
                           6196 ;demo.c:825: if (bt < 10 ) bt+=4;
   1B1C 3ArF9s41           6197 	ld	a,(#_bt+0)
   1B1F D6 0A              6198 	sub	a,#0x0A
   1B21 3ArFAs41           6199 	ld	a,(#_bt+1)
   1B24 DE 00              6200 	sbc	a,#0x00
   1B26 F2r3Fs1B           6201 	jp	P,00119$
   1B29 21rF9s41           6202 	ld	hl,#_bt
   1B2C 7E                 6203 	ld	a,(hl)
   1B2D C6 04              6204 	add	a,#0x04
   1B2F 23                 6205 	inc	hl
   1B30 2B                 6206 	dec	hl
   1B31 C5                 6207 	push	bc
   1B32 4F                 6208 	ld	c, a
   1B33 23                 6209 	inc	hl
   1B34 7E                 6210 	ld	a, (hl)
   1B35 47                 6211 	ld	b, a
   1B36 79                 6212 	ld	a, c
   1B37 2B                 6213 	dec	hl
   1B38 77                 6214 	ld	(hl), a
   1B39 78                 6215 	ld	a, b
   1B3A C1                 6216 	pop	bc
   1B3B CE 00              6217 	adc	a,#0x00
   1B3D 23                 6218 	inc	hl
   1B3E 77                 6219 	ld	(hl),a
   1B3F                    6220 00119$:
                           6221 ;demo.c:828: cmd.source_x = bx;
   1B3F ED 4BrF5s41        6222 	ld	bc,(_bx)
   1B43 21r2As41           6223 	ld	hl,#_cmd
   1B46 71                 6224 	ld	(hl),c
   1B47 23                 6225 	inc	hl
   1B48 70                 6226 	ld	(hl),b
                           6227 ;demo.c:829: cmd.source_y = bt;
   1B49 01r2Cs41           6228 	ld	bc,#_cmd + 2
   1B4C ED 5BrF9s41        6229 	ld	de,(_bt)
   1B50 69                 6230 	ld	l,c
   1B51 60                 6231 	ld	h,b
   1B52 73                 6232 	ld	(hl),e
   1B53 23                 6233 	inc	hl
   1B54 72                 6234 	ld	(hl),d
                           6235 ;demo.c:830: cmd.dest_x = 0;
   1B55 21r2Es41           6236 	ld	hl, #_cmd + 4
   1B58 36 00              6237 	ld	(hl),#0x00
   1B5A 23                 6238 	inc	hl
   1B5B 36 00              6239 	ld	(hl),#0x00
                           6240 ;demo.c:831: cmd.dest_y = 256;
   1B5D 21r30s41           6241 	ld	hl, #_cmd + 6
   1B60 36 00              6242 	ld	(hl),#0x00
   1B62 23                 6243 	inc	hl
   1B63 36 01              6244 	ld	(hl),#0x01
                           6245 ;demo.c:832: cmd.size_x = 36;
   1B65 21r32s41           6246 	ld	hl, #_cmd + 8
   1B68 36 24              6247 	ld	(hl),#0x24
   1B6A 23                 6248 	inc	hl
   1B6B 36 00              6249 	ld	(hl),#0x00
                           6250 ;demo.c:833: cmd.size_y = 36;
   1B6D 21r34s41           6251 	ld	hl, #_cmd + 10
   1B70 36 24              6252 	ld	(hl),#0x24
   1B72 23                 6253 	inc	hl
   1B73 36 00              6254 	ld	(hl),#0x00
                           6255 ;demo.c:834: cmd.data = 0;
                           6256 ;demo.c:835: cmd.argument = 0x00;
   1B75 3E 00              6257 	ld	a,#0x00
   1B77 32r36s41           6258 	ld	(#_cmd + 12),a
   1B7A 32r37s41           6259 	ld	(#_cmd + 13),a
                           6260 ;demo.c:836: cmd.command = 0xD0; // HMMM
   1B7D 3E D0              6261 	ld	a,#0xD0
   1B7F 32r38s41           6262 	ld	(#_cmd + 14),a
                           6263 ;demo.c:837: vdp_copier(&cmd);
   1B82 21r2As41           6264 	ld	hl,#_cmd
   1B85 E5                 6265 	push	hl
   1B86 CDr00s00           6266 	call	_vdp_copier
   1B89 F1                 6267 	pop	af
                           6268 ;demo.c:839: pbx = bx;
   1B8A 2ArF5s41           6269 	ld	hl,(_bx)
   1B8D FD 21rFFs41        6270 	ld	iy,#_pbx
   1B91 FD 75 00           6271 	ld	0 (iy),l
   1B94 FD 21rFFs41        6272 	ld	iy,#_pbx
   1B98 FD 74 01           6273 	ld	1 (iy),h
                           6274 ;demo.c:840: pbt = bt;
   1B9B 2ArF9s41           6275 	ld	hl,(_bt)
   1B9E FD 21r01s42        6276 	ld	iy,#_pbt
   1BA2 FD 75 00           6277 	ld	0 (iy),l
   1BA5 FD 21r01s42        6278 	ld	iy,#_pbt
   1BA9 FD 74 01           6279 	ld	1 (iy),h
                           6280 ;demo.c:842: boxticks++;
   1BAC FD 21r0Es42        6281 	ld	iy,#_boxticks
   1BB0 FD 34 00           6282 	inc	0 (iy)
   1BB3 20 07              6283 	jr	NZ,00186$
   1BB5 FD 21r0Es42        6284 	ld	iy,#_boxticks
   1BB9 FD 34 01           6285 	inc	1 (iy)
   1BBC                    6286 00186$:
                           6287 ;demo.c:843: if (boxticks > 8) {
   1BBC 3E 08              6288 	ld	a,#0x08
   1BBE FD 21r0Es42        6289 	ld	iy,#_boxticks
   1BC2 FD 96 00           6290 	sub	a,0 (iy)
   1BC5 3E 00              6291 	ld	a,#0x00
   1BC7 FD 21r0Es42        6292 	ld	iy,#_boxticks
   1BCB FD 9E 01           6293 	sbc	a,1 (iy)
   1BCE F2rE8s1B           6294 	jp	P,00121$
                           6295 ;demo.c:844: drawsine("Let us stop   We are building walls between",8,182);
   1BD1 21 08 B6           6296 	ld	hl,#0xB608
   1BD4 E5                 6297 	push	hl
   1BD5 21r5As1D           6298 	ld	hl,#__str_8
   1BD8 E5                 6299 	push	hl
   1BD9 CDrC9s11           6300 	call	_drawsine
   1BDC F1                 6301 	pop	af
   1BDD F1                 6302 	pop	af
                           6303 ;demo.c:845: boxticks  = 0;
   1BDE 21r0Es42           6304 	ld	hl,#_boxticks + 0
   1BE1 36 00              6305 	ld	(hl), #0x00
   1BE3 21r0Fs42           6306 	ld	hl,#_boxticks + 1
   1BE6 36 00              6307 	ld	(hl), #0x00
   1BE8                    6308 00121$:
                           6309 ;demo.c:848: bonc = 1;
   1BE8 21rFDs41           6310 	ld	hl,#_bonc + 0
   1BEB 36 01              6311 	ld	(hl), #0x01
   1BED 21rFEs41           6312 	ld	hl,#_bonc + 1
   1BF0 36 00              6313 	ld	(hl), #0x00
                           6314 ;demo.c:849: if (bt > by) {
   1BF2 21rF7s41           6315 	ld	hl,#_by
   1BF5 7E                 6316 	ld	a,(hl)
   1BF6 FD 21rF9s41        6317 	ld	iy,#_bt
   1BFA FD 96 00           6318 	sub	a,0 (iy)
   1BFD 23                 6319 	inc	hl
   1BFE 7E                 6320 	ld	a,(hl)
   1BFF FD 21rF9s41        6321 	ld	iy,#_bt
   1C03 FD 9E 01           6322 	sbc	a,1 (iy)
   1C06 F2r44s1D           6323 	jp	P,00137$
                           6324 ;demo.c:850: bt = by;
   1C09 2ArF7s41           6325 	ld	hl,(_by)
   1C0C FD 21rF9s41        6326 	ld	iy,#_bt
   1C10 FD 75 00           6327 	ld	0 (iy),l
   1C13 FD 21rF9s41        6328 	ld	iy,#_bt
   1C17 FD 74 01           6329 	ld	1 (iy),h
                           6330 ;demo.c:851: drawbox(bx,bt);
   1C1A 21rF9s41           6331 	ld	hl,#_bt + 0
   1C1D 4E                 6332 	ld	c,(hl)
   1C1E 21rF5s41           6333 	ld	hl,#_bx + 0
   1C21 46                 6334 	ld	b,(hl)
   1C22 79                 6335 	ld	a,c
   1C23 F5                 6336 	push	af
   1C24 33                 6337 	inc	sp
   1C25 C5                 6338 	push	bc
   1C26 33                 6339 	inc	sp
   1C27 CDr03s18           6340 	call	_drawbox
   1C2A F1                 6341 	pop	af
                           6342 ;demo.c:852: bt = 0;
   1C2B 21rF9s41           6343 	ld	hl,#_bt + 0
   1C2E 36 00              6344 	ld	(hl), #0x00
   1C30 21rFAs41           6345 	ld	hl,#_bt + 1
   1C33 36 00              6346 	ld	(hl), #0x00
                           6347 ;demo.c:853: if (by > 48) {
   1C35 3E 30              6348 	ld	a,#0x30
   1C37 FD 21rF7s41        6349 	ld	iy,#_by
   1C3B FD 96 00           6350 	sub	a,0 (iy)
   1C3E 3E 00              6351 	ld	a,#0x00
   1C40 FD 21rF7s41        6352 	ld	iy,#_by
   1C44 FD 9E 01           6353 	sbc	a,1 (iy)
   1C47 F2r9Fs1C           6354 	jp	P,00125$
                           6355 ;demo.c:854: bonc = 0;
   1C4A 21rFDs41           6356 	ld	hl,#_bonc + 0
   1C4D 36 00              6357 	ld	(hl), #0x00
   1C4F 21rFEs41           6358 	ld	hl,#_bonc + 1
   1C52 36 00              6359 	ld	(hl), #0x00
                           6360 ;demo.c:855: by-=16;
   1C54 21rF7s41           6361 	ld	hl,#_by
   1C57 7E                 6362 	ld	a,(hl)
   1C58 C6 F0              6363 	add	a,#0xF0
   1C5A 77                 6364 	ld	(hl),a
   1C5B 23                 6365 	inc	hl
   1C5C 7E                 6366 	ld	a,(hl)
   1C5D CE FF              6367 	adc	a,#0xFF
   1C5F 77                 6368 	ld	(hl),a
                           6369 ;demo.c:856: prevbox_of = boxes_of[boxi];
   1C60 3ArF4s41           6370 	ld	a,(#_boxi+0)
   1C63 87                 6371 	add	a,a
   1C64 C6r03              6372 	add	a,#<_boxes_of
   1C66 6F                 6373 	ld	l,a
   1C67 3Es42              6374 	ld	a,#>_boxes_of
   1C69 CE 00              6375 	adc	a,#0x00
   1C6B 67                 6376 	ld	h,a
   1C6C 4E                 6377 	ld	c,(hl)
   1C6D 23                 6378 	inc	hl
   1C6E 21r0Ds42           6379 	ld	hl,#_prevbox_of + 0
   1C71 71                 6380 	ld	(hl), c
                           6381 ;demo.c:857: by+=prevbox_of;
   1C72 21r0Ds42           6382 	ld	hl,#_prevbox_of + 0
   1C75 4E                 6383 	ld	c,(hl)
   1C76 06 00              6384 	ld	b,#0x00
   1C78 21rF7s41           6385 	ld	hl,#_by
   1C7B 7E                 6386 	ld	a,(hl)
   1C7C 81                 6387 	add	a,c
   1C7D 23                 6388 	inc	hl
   1C7E 2B                 6389 	dec	hl
   1C7F C5                 6390 	push	bc
   1C80 4F                 6391 	ld	c, a
   1C81 23                 6392 	inc	hl
   1C82 7E                 6393 	ld	a, (hl)
   1C83 47                 6394 	ld	b, a
   1C84 79                 6395 	ld	a, c
   1C85 2B                 6396 	dec	hl
   1C86 77                 6397 	ld	(hl), a
   1C87 78                 6398 	ld	a, b
   1C88 C1                 6399 	pop	bc
   1C89 88                 6400 	adc	a,b
   1C8A 23                 6401 	inc	hl
   1C8B 77                 6402 	ld	(hl),a
                           6403 ;demo.c:858: boxi++;
   1C8C FD 21rF4s41        6404 	ld	iy,#_boxi
   1C90 FD 34 00           6405 	inc	0 (iy)
                           6406 ;demo.c:859: if (boxi >= 4) boxi = 0;
   1C93 3ArF4s41           6407 	ld	a,(#_boxi+0)
   1C96 D6 04              6408 	sub	a,#0x04
   1C98 38 05              6409 	jr	C,00125$
   1C9A 21rF4s41           6410 	ld	hl,#_boxi + 0
   1C9D 36 00              6411 	ld	(hl), #0x00
   1C9F                    6412 00125$:
                           6413 ;demo.c:862: if (by <= 48) {
   1C9F 3E 30              6414 	ld	a,#0x30
   1CA1 FD 21rF7s41        6415 	ld	iy,#_by
   1CA5 FD 96 00           6416 	sub	a,0 (iy)
   1CA8 3E 00              6417 	ld	a,#0x00
   1CAA FD 21rF7s41        6418 	ld	iy,#_by
   1CAE FD 9E 01           6419 	sbc	a,1 (iy)
   1CB1 FAr55s1D           6420 	jp	M,00151$
                           6421 ;demo.c:863: bx-=16;
   1CB4 21rF5s41           6422 	ld	hl,#_bx
   1CB7 7E                 6423 	ld	a,(hl)
   1CB8 C6 F0              6424 	add	a,#0xF0
   1CBA 77                 6425 	ld	(hl),a
   1CBB 23                 6426 	inc	hl
   1CBC 7E                 6427 	ld	a,(hl)
   1CBD CE FF              6428 	adc	a,#0xFF
   1CBF 77                 6429 	ld	(hl),a
                           6430 ;demo.c:865: if (bx>128)bo+=8;
   1CC0 3E 80              6431 	ld	a,#0x80
   1CC2 FD 21rF5s41        6432 	ld	iy,#_bx
   1CC6 FD 96 00           6433 	sub	a,0 (iy)
   1CC9 3E 00              6434 	ld	a,#0x00
   1CCB FD 21rF5s41        6435 	ld	iy,#_bx
   1CCF FD 9E 01           6436 	sbc	a,1 (iy)
   1CD2 07                 6437 	rlca
   1CD3 E6 01              6438 	and	a,#0x01
   1CD5 4F                 6439 	ld	c,a
   1CD6 B7                 6440 	or	a,a
   1CD7 28 18              6441 	jr	Z,00127$
   1CD9 21rFBs41           6442 	ld	hl,#_bo
   1CDC 7E                 6443 	ld	a,(hl)
   1CDD C6 08              6444 	add	a,#0x08
   1CDF 23                 6445 	inc	hl
   1CE0 2B                 6446 	dec	hl
   1CE1 C5                 6447 	push	bc
   1CE2 4F                 6448 	ld	c, a
   1CE3 23                 6449 	inc	hl
   1CE4 7E                 6450 	ld	a, (hl)
   1CE5 47                 6451 	ld	b, a
   1CE6 79                 6452 	ld	a, c
   1CE7 2B                 6453 	dec	hl
   1CE8 77                 6454 	ld	(hl), a
   1CE9 78                 6455 	ld	a, b
   1CEA C1                 6456 	pop	bc
   1CEB CE 00              6457 	adc	a,#0x00
   1CED 23                 6458 	inc	hl
   1CEE 77                 6459 	ld	(hl),a
   1CEF 18 0C              6460 	jr	00128$
   1CF1                    6461 00127$:
                           6462 ;demo.c:866: else bo-=8;
   1CF1 21rFBs41           6463 	ld	hl,#_bo
   1CF4 7E                 6464 	ld	a,(hl)
   1CF5 C6 F8              6465 	add	a,#0xF8
   1CF7 77                 6466 	ld	(hl),a
   1CF8 23                 6467 	inc	hl
   1CF9 7E                 6468 	ld	a,(hl)
   1CFA CE FF              6469 	adc	a,#0xFF
   1CFC 77                 6470 	ld	(hl),a
   1CFD                    6471 00128$:
                           6472 ;demo.c:867: if (bo > 192) bo = 0;
   1CFD 3E C0              6473 	ld	a,#0xC0
   1CFF FD 21rFBs41        6474 	ld	iy,#_bo
   1D03 FD 96 00           6475 	sub	a,0 (iy)
   1D06 3E 00              6476 	ld	a,#0x00
   1D08 FD 21rFBs41        6477 	ld	iy,#_bo
   1D0C FD 9E 01           6478 	sbc	a,1 (iy)
   1D0F F2r1Cs1D           6479 	jp	P,00130$
   1D12 21rFBs41           6480 	ld	hl,#_bo + 0
   1D15 36 00              6481 	ld	(hl), #0x00
   1D17 21rFCs41           6482 	ld	hl,#_bo + 1
   1D1A 36 00              6483 	ld	(hl), #0x00
   1D1C                    6484 00130$:
                           6485 ;demo.c:868: if (bx>128)by=84+bo;
   1D1C AF                 6486 	xor	a,a
   1D1D B1                 6487 	or	a,c
   1D1E 28 12              6488 	jr	Z,00132$
   1D20 21rF7s41           6489 	ld	hl,#_by
   1D23 3ArFBs41           6490 	ld	a,(#_bo+0)
   1D26 C6 54              6491 	add	a,#0x54
   1D28 77                 6492 	ld	(hl),a
   1D29 3ArFCs41           6493 	ld	a,(#_bo+1)
   1D2C CE 00              6494 	adc	a,#0x00
   1D2E 23                 6495 	inc	hl
   1D2F 77                 6496 	ld	(hl),a
   1D30 18 23              6497 	jr	00151$
   1D32                    6498 00132$:
                           6499 ;demo.c:869: else by=36+36+84+bo;
   1D32 21rF7s41           6500 	ld	hl,#_by
   1D35 3ArFBs41           6501 	ld	a,(#_bo+0)
   1D38 C6 9C              6502 	add	a,#0x9C
   1D3A 77                 6503 	ld	(hl),a
   1D3B 3ArFCs41           6504 	ld	a,(#_bo+1)
   1D3E CE 00              6505 	adc	a,#0x00
   1D40 23                 6506 	inc	hl
   1D41 77                 6507 	ld	(hl),a
   1D42 18 11              6508 	jr	00151$
   1D44                    6509 00137$:
                           6510 ;demo.c:872: drawbox(bx,bt);
   1D44 21rF9s41           6511 	ld	hl,#_bt + 0
   1D47 4E                 6512 	ld	c,(hl)
   1D48 21rF5s41           6513 	ld	hl,#_bx + 0
   1D4B 46                 6514 	ld	b,(hl)
   1D4C 79                 6515 	ld	a,c
   1D4D F5                 6516 	push	af
   1D4E 33                 6517 	inc	sp
   1D4F C5                 6518 	push	bc
   1D50 33                 6519 	inc	sp
   1D51 CDr03s18           6520 	call	_drawbox
   1D54 F1                 6521 	pop	af
   1D55                    6522 00151$:
   1D55 DD F9              6523 	ld	sp,ix
   1D57 DD E1              6524 	pop	ix
   1D59 C9                 6525 	ret
   1D5A                    6526 _boxes_end::
   1D5A                    6527 __str_8:
   1D5A 4C 65 74 20 75 73  6528 	.ascii "Let us stop   We are building walls between"
        20 73 74 6F 70 20
        20 20 57 65 20 61
        72 65 20 62 75 69
        6C 64 69 6E 67 20
        77 61 6C 6C 73 20
        62 65 74 77 65 65
        6E
   1D85 00                 6529 	.db 0x00
                           6530 ;demo.c:883: void thewave() {
                           6531 ;	---------------------------------
                           6532 ; Function thewave
                           6533 ; ---------------------------------
   1D86                    6534 _thewave_start::
   1D86                    6535 _thewave:
   1D86 DD E5              6536 	push	ix
   1D88 DD 21 00 00        6537 	ld	ix,#0
   1D8C DD 39              6538 	add	ix,sp
   1D8E 21 F5 FF           6539 	ld	hl,#-11
   1D91 39                 6540 	add	hl,sp
   1D92 F9                 6541 	ld	sp,hl
                           6542 ;demo.c:892: if (initwave == 0) {
   1D93 AF                 6543 	xor	a,a
   1D94 21r10s42           6544 	ld	hl,#_initwave + 0
   1D97 B6                 6545 	or	a,(hl)
   1D98 C2r20s20           6546 	jp	NZ,00113$
                           6547 ;demo.c:893: initwave = 1;
   1D9B 21r10s42           6548 	ld	hl,#_initwave + 0
   1D9E 36 01              6549 	ld	(hl), #0x01
                           6550 ;demo.c:894: for (y = 0; y < 212; y++) {
   1DA0 DD 36 FE 00        6551 	ld	-2 (ix),#0x00
   1DA4                    6552 00128$:
   1DA4 DD 7E FE           6553 	ld	a,-2 (ix)
   1DA7 D6 D4              6554 	sub	a,#0xD4
   1DA9 D2r1Cs1E           6555 	jp	NC,00131$
                           6556 ;demo.c:895: cmd.size_x = 256;
   1DAC 11r32s41           6557 	ld	de,#_cmd + 8
   1DAF EB                 6558 	ex	de,hl
   1DB0 36 00              6559 	ld	(hl),#0x00
   1DB2 23                 6560 	inc	hl
   1DB3 36 01              6561 	ld	(hl),#0x01
                           6562 ;demo.c:896: cmd.size_y = 2;
   1DB5 11r34s41           6563 	ld	de,#_cmd + 10
   1DB8 EB                 6564 	ex	de,hl
   1DB9 36 02              6565 	ld	(hl),#0x02
   1DBB 23                 6566 	inc	hl
   1DBC 36 00              6567 	ld	(hl),#0x00
                           6568 ;demo.c:897: cmd.data = 0;
   1DBE 11r36s41           6569 	ld	de,#_cmd + 12
   1DC1 3E 00              6570 	ld	a,#0x00
   1DC3 12                 6571 	ld	(de),a
                           6572 ;demo.c:898: cmd.argument = 0x00; // from 70xY to left
   1DC4 11r37s41           6573 	ld	de,#_cmd + 13
   1DC7 3E 00              6574 	ld	a,#0x00
   1DC9 12                 6575 	ld	(de),a
                           6576 ;demo.c:899: cmd.command = 0xd0; // vram to vram, y only
   1DCA 11r38s41           6577 	ld	de,#_cmd + 14
   1DCD 3E D0              6578 	ld	a,#0xD0
   1DCF 12                 6579 	ld	(de),a
                           6580 ;demo.c:901: cmd.source_x = 0;
   1DD0 21r2As41           6581 	ld	hl,#_cmd
   1DD3 36 00              6582 	ld	(hl),#0x00
   1DD5 23                 6583 	inc	hl
   1DD6 36 00              6584 	ld	(hl),#0x00
                           6585 ;demo.c:902: cmd.source_y = 0;
   1DD8 11r2Cs41           6586 	ld	de,#_cmd + 2
   1DDB EB                 6587 	ex	de,hl
   1DDC 36 00              6588 	ld	(hl),#0x00
   1DDE 23                 6589 	inc	hl
   1DDF 36 00              6590 	ld	(hl),#0x00
                           6591 ;demo.c:903: cmd.dest_x = 0;
   1DE1 11r2Es41           6592 	ld	de,#_cmd + 4
   1DE4 EB                 6593 	ex	de,hl
   1DE5 36 00              6594 	ld	(hl),#0x00
   1DE7 23                 6595 	inc	hl
   1DE8 36 00              6596 	ld	(hl),#0x00
                           6597 ;demo.c:904: cmd.dest_y = 0+y;
   1DEA 11r30s41           6598 	ld	de,#_cmd + 6
   1DED DD 4E FE           6599 	ld	c,-2 (ix)
   1DF0 06 00              6600 	ld	b,#0x00
   1DF2 EB                 6601 	ex	de,hl
   1DF3 71                 6602 	ld	(hl),c
   1DF4 23                 6603 	inc	hl
   1DF5 70                 6604 	ld	(hl),b
                           6605 ;demo.c:905: vdp_copier(&cmd);
   1DF6 C5                 6606 	push	bc
   1DF7 21r2As41           6607 	ld	hl,#_cmd
   1DFA E5                 6608 	push	hl
   1DFB CDr00s00           6609 	call	_vdp_copier
   1DFE F1                 6610 	pop	af
   1DFF C1                 6611 	pop	bc
                           6612 ;demo.c:906: cmd.dest_y = 256+y;
   1E00 11r30s41           6613 	ld	de,#_cmd + 6
   1E03 21 00 01           6614 	ld	hl,#0x0100
   1E06 09                 6615 	add	hl,bc
   1E07 4D                 6616 	ld	c,l
   1E08 44                 6617 	ld	b,h
   1E09 EB                 6618 	ex	de,hl
   1E0A 71                 6619 	ld	(hl),c
   1E0B 23                 6620 	inc	hl
   1E0C 70                 6621 	ld	(hl),b
                           6622 ;demo.c:907: vdp_copier(&cmd);
   1E0D 21r2As41           6623 	ld	hl,#_cmd
   1E10 E5                 6624 	push	hl
   1E11 CDr00s00           6625 	call	_vdp_copier
   1E14 F1                 6626 	pop	af
                           6627 ;demo.c:908: waitVB();
   1E15 76                 6628 		halt 
                           6629 ;demo.c:894: for (y = 0; y < 212; y++) {
   1E16 DD 34 FE           6630 	inc	-2 (ix)
   1E19 C3rA4s1D           6631 	jp	00128$
   1E1C                    6632 00131$:
                           6633 ;demo.c:912: for (y = 9; y < 15; y+=1) {
   1E1C DD 36 FE 09        6634 	ld	-2 (ix),#0x09
   1E20                    6635 00132$:
   1E20 DD 7E FE           6636 	ld	a,-2 (ix)
   1E23 D6 0F              6637 	sub	a,#0x0F
   1E25 D2r20s20           6638 	jp	NC,00113$
                           6639 ;demo.c:913: for (x = 0; x < 21; x+=1) {
   1E28 DD 7E FE           6640 	ld	a,-2 (ix)
   1E2B 87                 6641 	add	a,a
   1E2C DD 77 F7           6642 	ld	-9 (ix),a
   1E2F DD 36 FF 00        6643 	ld	-1 (ix),#0x00
   1E33                    6644 00108$:
   1E33 DD 7E FF           6645 	ld	a,-1 (ix)
   1E36 D6 15              6646 	sub	a,#0x15
   1E38 D2r1As20           6647 	jp	NC,00134$
                           6648 ;demo.c:914: if (x > 6 && x < 13) continue; 
   1E3B 3E 06              6649 	ld	a,#0x06
   1E3D DD 96 FF           6650 	sub	a,-1 (ix)
   1E40 30 08              6651 	jr	NC,00102$
   1E42 DD 7E FF           6652 	ld	a,-1 (ix)
   1E45 D6 0D              6653 	sub	a,#0x0D
   1E47 DAr14s20           6654 	jp	C,00110$
   1E4A                    6655 00102$:
                           6656 ;demo.c:916: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   1E4A 3E 06              6657 	ld	a,#0x06
   1E4C DD 96 FF           6658 	sub	a,-1 (ix)
   1E4F DArA5s1E           6659 	jp	C,00105$
   1E52 DD 56 FF           6660 	ld	d,-1 (ix)
   1E55 0E 00              6661 	ld	c,#0x00
   1E57 CB 22              6662 	sla	d
   1E59 CB 11              6663 	rl	c
   1E5B CB 22              6664 	sla	d
   1E5D CB 11              6665 	rl	c
   1E5F CB 22              6666 	sla	d
   1E61 CB 11              6667 	rl	c
   1E63 7A                 6668 	ld	a,d
   1E64 C6 69              6669 	add	a,#0x69
   1E66 57                 6670 	ld	d,a
   1E67 79                 6671 	ld	a,c
   1E68 CE 00              6672 	adc	a,#0x00
   1E6A 47                 6673 	ld	b,a
   1E6B DD 5E FE           6674 	ld	e,-2 (ix)
   1E6E 0E 00              6675 	ld	c,#0x00
   1E70 CB 23              6676 	sla	e
   1E72 CB 11              6677 	rl	c
   1E74 CB 23              6678 	sla	e
   1E76 CB 11              6679 	rl	c
   1E78 CB 23              6680 	sla	e
   1E7A CB 11              6681 	rl	c
   1E7C 7A                 6682 	ld	a,d
   1E7D 83                 6683 	add	a,e
   1E7E 5F                 6684 	ld	e,a
   1E7F 78                 6685 	ld	a,b
   1E80 89                 6686 	adc	a,c
   1E81 0E 00              6687 	ld	c,#0x00
   1E83 3Er00              6688 	ld	a,#<_sintab
   1E85 83                 6689 	add	a,e
   1E86 5F                 6690 	ld	e,a
   1E87 3Es00              6691 	ld	a,#>_sintab
   1E89 89                 6692 	adc	a,c
   1E8A 6B                 6693 	ld	l,e
   1E8B 67                 6694 	ld	h,a
   1E8C 5E                 6695 	ld	e,(hl)
   1E8D CB 2B              6696 	sra	e
   1E8F CB 2B              6697 	sra	e
   1E91 CB 2B              6698 	sra	e
   1E93 CB 2B              6699 	sra	e
   1E95 7B                 6700 	ld	a,e
   1E96 17                 6701 	rla	
   1E97 9F                 6702 	sbc	a,a
   1E98 4F                 6703 	ld	c,a
   1E99 7B                 6704 	ld	a,e
   1E9A C6 07              6705 	add	a,#0x07
   1E9C DD 77 FC           6706 	ld	-4 (ix),a
   1E9F 79                 6707 	ld	a,c
   1EA0 CE 00              6708 	adc	a,#0x00
   1EA2 DD 77 FD           6709 	ld	-3 (ix),a
   1EA5                    6710 00105$:
                           6711 ;demo.c:917: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   1EA5 DD 7E FF           6712 	ld	a,-1 (ix)
   1EA8 D6 0D              6713 	sub	a,#0x0D
   1EAA DAr0Bs1F           6714 	jp	C,00107$
   1EAD DD 5E FF           6715 	ld	e,-1 (ix)
   1EB0 16 00              6716 	ld	d,#0x00
   1EB2 21 17 00           6717 	ld	hl,#0x0017
   1EB5 19                 6718 	add	hl,de
   1EB6 EB                 6719 	ex	de,hl
   1EB7 CB 23              6720 	sla	e
   1EB9 CB 12              6721 	rl	d
   1EBB CB 23              6722 	sla	e
   1EBD CB 12              6723 	rl	d
   1EBF CB 23              6724 	sla	e
   1EC1 CB 12              6725 	rl	d
   1EC3 21 69 00           6726 	ld	hl,#0x0069
   1EC6 19                 6727 	add	hl,de
   1EC7 45                 6728 	ld	b,l
   1EC8 54                 6729 	ld	d,h
   1EC9 DD 4E FE           6730 	ld	c,-2 (ix)
   1ECC 1E 00              6731 	ld	e,#0x00
   1ECE 79                 6732 	ld	a,c
   1ECF C6 13              6733 	add	a,#0x13
   1ED1 4F                 6734 	ld	c,a
   1ED2 7B                 6735 	ld	a,e
   1ED3 CE 00              6736 	adc	a,#0x00
   1ED5 5F                 6737 	ld	e,a
   1ED6 CB 21              6738 	sla	c
   1ED8 CB 13              6739 	rl	e
   1EDA CB 21              6740 	sla	c
   1EDC CB 13              6741 	rl	e
   1EDE CB 21              6742 	sla	c
   1EE0 CB 13              6743 	rl	e
   1EE2 78                 6744 	ld	a,b
   1EE3 81                 6745 	add	a,c
   1EE4 4F                 6746 	ld	c,a
   1EE5 7A                 6747 	ld	a,d
   1EE6 8B                 6748 	adc	a,e
   1EE7 1E 00              6749 	ld	e,#0x00
   1EE9 3Er00              6750 	ld	a,#<_sintab
   1EEB 81                 6751 	add	a,c
   1EEC 4F                 6752 	ld	c,a
   1EED 3Es00              6753 	ld	a,#>_sintab
   1EEF 8B                 6754 	adc	a,e
   1EF0 69                 6755 	ld	l,c
   1EF1 67                 6756 	ld	h,a
   1EF2 4E                 6757 	ld	c,(hl)
   1EF3 CB 29              6758 	sra	c
   1EF5 CB 29              6759 	sra	c
   1EF7 CB 29              6760 	sra	c
   1EF9 CB 29              6761 	sra	c
   1EFB 79                 6762 	ld	a,c
   1EFC 17                 6763 	rla	
   1EFD 9F                 6764 	sbc	a,a
   1EFE 5F                 6765 	ld	e,a
   1EFF 79                 6766 	ld	a,c
   1F00 C6 07              6767 	add	a,#0x07
   1F02 DD 77 FC           6768 	ld	-4 (ix),a
   1F05 7B                 6769 	ld	a,e
   1F06 CE 00              6770 	adc	a,#0x00
   1F08 DD 77 FD           6771 	ld	-3 (ix),a
   1F0B                    6772 00107$:
                           6773 ;demo.c:919: cmd.size_x = 11;
   1F0B 11r32s41           6774 	ld	de,#_cmd + 8
   1F0E EB                 6775 	ex	de,hl
   1F0F 36 0B              6776 	ld	(hl),#0x0B
   1F11 23                 6777 	inc	hl
   1F12 36 00              6778 	ld	(hl),#0x00
                           6779 ;demo.c:920: cmd.size_y = 28-(14-px);
   1F14 21r34s41           6780 	ld	hl,#_cmd + 10
   1F17 DD 75 F8           6781 	ld	-8 (ix),l
   1F1A DD 74 F9           6782 	ld	-7 (ix),h
   1F1D 3E 0E              6783 	ld	a,#0x0E
   1F1F DD 96 FC           6784 	sub	a,-4 (ix)
   1F22 4F                 6785 	ld	c,a
   1F23 3E 00              6786 	ld	a,#0x00
   1F25 DD 9E FD           6787 	sbc	a,-3 (ix)
   1F28 5F                 6788 	ld	e,a
   1F29 3E 1C              6789 	ld	a,#0x1C
   1F2B 91                 6790 	sub	a,c
   1F2C 57                 6791 	ld	d,a
   1F2D 3E 00              6792 	ld	a,#0x00
   1F2F 9B                 6793 	sbc	a,e
   1F30 47                 6794 	ld	b,a
   1F31 DD 6E F8           6795 	ld	l,-8 (ix)
   1F34 DD 66 F9           6796 	ld	h,-7 (ix)
   1F37 72                 6797 	ld	(hl),d
   1F38 23                 6798 	inc	hl
   1F39 70                 6799 	ld	(hl),b
                           6800 ;demo.c:921: cmd.data = 0;
   1F3A 21r36s41           6801 	ld	hl,#_cmd + 12
   1F3D 36 00              6802 	ld	(hl),#0x00
                           6803 ;demo.c:922: cmd.argument = 0x00; // from 70xY to left
   1F3F 21r37s41           6804 	ld	hl,#_cmd + 13
   1F42 36 00              6805 	ld	(hl),#0x00
                           6806 ;demo.c:923: cmd.command = 0x98; // vram to vram, y only
   1F44 21r38s41           6807 	ld	hl,#_cmd + 14
   1F47 36 98              6808 	ld	(hl),#0x98
                           6809 ;demo.c:925: cmd.source_x = twelvetimes[px];
   1F49 DD 46 FC           6810 	ld	b,-4 (ix)
   1F4C DD 56 FD           6811 	ld	d,-3 (ix)
   1F4F CB 20              6812 	sla	b
   1F51 CB 12              6813 	rl	d
   1F53 3Er20              6814 	ld	a,#<_twelvetimes
   1F55 80                 6815 	add	a,b
   1F56 47                 6816 	ld	b,a
   1F57 3Es01              6817 	ld	a,#>_twelvetimes
   1F59 8A                 6818 	adc	a,d
   1F5A 68                 6819 	ld	l,b
   1F5B 67                 6820 	ld	h,a
   1F5C 46                 6821 	ld	b,(hl)
   1F5D 23                 6822 	inc	hl
   1F5E 56                 6823 	ld	d,(hl)
   1F5F 21r2As41           6824 	ld	hl,#_cmd
   1F62 70                 6825 	ld	(hl),b
   1F63 23                 6826 	inc	hl
   1F64 72                 6827 	ld	(hl),d
                           6828 ;demo.c:926: cmd.source_y = 768+183+(15-px);
   1F65 23                 6829 	inc	hl
   1F66 DD 75 F8           6830 	ld	-8 (ix),l
   1F69 DD 74 F9           6831 	ld	-7 (ix),h
   1F6C 3E C6              6832 	ld	a,#0xC6
   1F6E DD 96 FC           6833 	sub	a,-4 (ix)
   1F71 47                 6834 	ld	b,a
   1F72 3E 03              6835 	ld	a,#0x03
   1F74 DD 9E FD           6836 	sbc	a,-3 (ix)
   1F77 57                 6837 	ld	d,a
   1F78 DD 6E F8           6838 	ld	l,-8 (ix)
   1F7B DD 66 F9           6839 	ld	h,-7 (ix)
   1F7E 70                 6840 	ld	(hl),b
   1F7F 23                 6841 	inc	hl
   1F80 72                 6842 	ld	(hl),d
                           6843 ;demo.c:927: cmd.dest_x = 0+twelvetimes[x];
   1F81 21r2Es41           6844 	ld	hl,#_cmd + 4
   1F84 DD 75 F8           6845 	ld	-8 (ix),l
   1F87 DD 74 F9           6846 	ld	-7 (ix),h
   1F8A DD 7E FF           6847 	ld	a,-1 (ix)
   1F8D 87                 6848 	add	a,a
   1F8E C6r20              6849 	add	a,#<_twelvetimes
   1F90 6F                 6850 	ld	l,a
   1F91 3Es01              6851 	ld	a,#>_twelvetimes
   1F93 CE 00              6852 	adc	a,#0x00
   1F95 67                 6853 	ld	h,a
   1F96 46                 6854 	ld	b,(hl)
   1F97 23                 6855 	inc	hl
   1F98 56                 6856 	ld	d,(hl)
   1F99 DD 6E F8           6857 	ld	l,-8 (ix)
   1F9C DD 66 F9           6858 	ld	h,-7 (ix)
   1F9F 70                 6859 	ld	(hl),b
   1FA0 23                 6860 	inc	hl
   1FA1 72                 6861 	ld	(hl),d
                           6862 ;demo.c:928: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   1FA2 21r30s41           6863 	ld	hl,#_cmd + 6
   1FA5 DD 75 F8           6864 	ld	-8 (ix),l
   1FA8 DD 74 F9           6865 	ld	-7 (ix),h
   1FAB 3Er54              6866 	ld	a,#<_eighttimes
   1FAD DD 86 F7           6867 	add	a,-9 (ix)
   1FB0 6F                 6868 	ld	l,a
   1FB1 3Es01              6869 	ld	a,#>_eighttimes
   1FB3 CE 00              6870 	adc	a,#0x00
   1FB5 67                 6871 	ld	h,a
   1FB6 46                 6872 	ld	b,(hl)
   1FB7 23                 6873 	inc	hl
   1FB8 56                 6874 	ld	d,(hl)
   1FB9 78                 6875 	ld	a,b
   1FBA C6 04              6876 	add	a,#0x04
   1FBC 47                 6877 	ld	b,a
   1FBD 7A                 6878 	ld	a,d
   1FBE CE 00              6879 	adc	a,#0x00
   1FC0 57                 6880 	ld	d,a
   1FC1 78                 6881 	ld	a,b
   1FC2 81                 6882 	add	a,c
   1FC3 47                 6883 	ld	b,a
   1FC4 7A                 6884 	ld	a,d
   1FC5 8B                 6885 	adc	a,e
   1FC6 57                 6886 	ld	d,a
   1FC7 DD 6E F8           6887 	ld	l,-8 (ix)
   1FCA DD 66 F9           6888 	ld	h,-7 (ix)
   1FCD 70                 6889 	ld	(hl),b
   1FCE 23                 6890 	inc	hl
   1FCF 72                 6891 	ld	(hl),d
                           6892 ;demo.c:929: vdp_copier(&cmd);
   1FD0 C5                 6893 	push	bc
   1FD1 D5                 6894 	push	de
   1FD2 21r2As41           6895 	ld	hl,#_cmd
   1FD5 E5                 6896 	push	hl
   1FD6 CDr00s00           6897 	call	_vdp_copier
   1FD9 F1                 6898 	pop	af
   1FDA D1                 6899 	pop	de
   1FDB C1                 6900 	pop	bc
                           6901 ;demo.c:930: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   1FDC 21r30s41           6902 	ld	hl,#_cmd + 6
   1FDF DD 75 F8           6903 	ld	-8 (ix),l
   1FE2 DD 74 F9           6904 	ld	-7 (ix),h
   1FE5 3Er54              6905 	ld	a,#<_eighttimes
   1FE7 DD 86 F7           6906 	add	a,-9 (ix)
   1FEA 6F                 6907 	ld	l,a
   1FEB 3Es01              6908 	ld	a,#>_eighttimes
   1FED CE 00              6909 	adc	a,#0x00
   1FEF 67                 6910 	ld	h,a
   1FF0 46                 6911 	ld	b,(hl)
   1FF1 23                 6912 	inc	hl
   1FF2 56                 6913 	ld	d,(hl)
   1FF3 78                 6914 	ld	a,b
   1FF4 C6 04              6915 	add	a,#0x04
   1FF6 47                 6916 	ld	b,a
   1FF7 7A                 6917 	ld	a,d
   1FF8 CE 00              6918 	adc	a,#0x00
   1FFA C6 01              6919 	add	a,#0x01
   1FFC 57                 6920 	ld	d,a
   1FFD 78                 6921 	ld	a,b
   1FFE 81                 6922 	add	a,c
   1FFF 4F                 6923 	ld	c,a
   2000 7A                 6924 	ld	a,d
   2001 8B                 6925 	adc	a,e
   2002 5F                 6926 	ld	e,a
   2003 DD 6E F8           6927 	ld	l,-8 (ix)
   2006 DD 66 F9           6928 	ld	h,-7 (ix)
   2009 71                 6929 	ld	(hl),c
   200A 23                 6930 	inc	hl
   200B 73                 6931 	ld	(hl),e
                           6932 ;demo.c:931: vdp_copier(&cmd);
   200C 21r2As41           6933 	ld	hl,#_cmd
   200F E5                 6934 	push	hl
   2010 CDr00s00           6935 	call	_vdp_copier
   2013 F1                 6936 	pop	af
   2014                    6937 00110$:
                           6938 ;demo.c:913: for (x = 0; x < 21; x+=1) {
   2014 DD 34 FF           6939 	inc	-1 (ix)
   2017 C3r33s1E           6940 	jp	00108$
   201A                    6941 00134$:
                           6942 ;demo.c:912: for (y = 9; y < 15; y+=1) {
   201A DD 34 FE           6943 	inc	-2 (ix)
   201D C3r20s1E           6944 	jp	00132$
   2020                    6945 00113$:
                           6946 ;demo.c:937: if (buf == -1) { bo = 0; ya = 0; }
   2020 3Ar11s42           6947 	ld	a,(#_buf+0)
   2023 3C                 6948 	inc	a
   2024 20 06              6949 	jr	NZ,00188$
   2026 3Ar12s42           6950 	ld	a,(#_buf+1)
   2029 3C                 6951 	inc	a
   202A 28 02              6952 	jr	Z,00189$
   202C                    6953 00188$:
   202C 18 05              6954 	jr	00115$
   202E                    6955 00189$:
   202E 01 00 00           6956 	ld	bc,#0x0000
   2031 18 03              6957 	jr	00116$
   2033                    6958 00115$:
                           6959 ;demo.c:938: else { bo = 256; ya = 6;}
   2033 01 00 01           6960 	ld	bc,#0x0100
   2036                    6961 00116$:
                           6962 ;demo.c:940: cmd.size_x = 72;
   2036 11r32s41           6963 	ld	de,#_cmd + 8
   2039 EB                 6964 	ex	de,hl
   203A 36 48              6965 	ld	(hl),#0x48
   203C 23                 6966 	inc	hl
   203D 36 00              6967 	ld	(hl),#0x00
                           6968 ;demo.c:941: cmd.size_y = 80;
   203F 11r34s41           6969 	ld	de,#_cmd + 10
   2042 EB                 6970 	ex	de,hl
   2043 36 50              6971 	ld	(hl),#0x50
   2045 23                 6972 	inc	hl
   2046 36 00              6973 	ld	(hl),#0x00
                           6974 ;demo.c:942: cmd.data = 0;
   2048 11r36s41           6975 	ld	de,#_cmd + 12
   204B 3E 00              6976 	ld	a,#0x00
   204D 12                 6977 	ld	(de),a
                           6978 ;demo.c:943: cmd.argument = 0x00; // from 70xY to left
   204E 11r37s41           6979 	ld	de,#_cmd + 13
   2051 3E 00              6980 	ld	a,#0x00
   2053 12                 6981 	ld	(de),a
                           6982 ;demo.c:944: cmd.command = 0xd0; // vram to vram, y only
   2054 11r38s41           6983 	ld	de,#_cmd + 14
   2057 3E D0              6984 	ld	a,#0xD0
   2059 12                 6985 	ld	(de),a
                           6986 ;demo.c:945: cmd.source_x = 178;
   205A 21r2As41           6987 	ld	hl,#_cmd
   205D 36 B2              6988 	ld	(hl),#0xB2
   205F 23                 6989 	inc	hl
   2060 36 00              6990 	ld	(hl),#0x00
                           6991 ;demo.c:946: cmd.source_y = 0;
   2062 11r2Cs41           6992 	ld	de,#_cmd + 2
   2065 EB                 6993 	ex	de,hl
   2066 36 00              6994 	ld	(hl),#0x00
   2068 23                 6995 	inc	hl
   2069 36 00              6996 	ld	(hl),#0x00
                           6997 ;demo.c:947: cmd.dest_x = 84;
   206B 11r2Es41           6998 	ld	de,#_cmd + 4
   206E EB                 6999 	ex	de,hl
   206F 36 54              7000 	ld	(hl),#0x54
   2071 23                 7001 	inc	hl
   2072 36 00              7002 	ld	(hl),#0x00
                           7003 ;demo.c:948: cmd.dest_y = 72+bo;
   2074 11r30s41           7004 	ld	de,#_cmd + 6
   2077 21 48 00           7005 	ld	hl,#0x0048
   207A 09                 7006 	add	hl,bc
   207B 4D                 7007 	ld	c,l
   207C 44                 7008 	ld	b,h
   207D EB                 7009 	ex	de,hl
   207E 71                 7010 	ld	(hl),c
   207F 23                 7011 	inc	hl
   2080 70                 7012 	ld	(hl),b
                           7013 ;demo.c:949: vdp_copier(&cmd);
   2081 C5                 7014 	push	bc
   2082 21r2As41           7015 	ld	hl,#_cmd
   2085 E5                 7016 	push	hl
   2086 CDr00s00           7017 	call	_vdp_copier
   2089 F1                 7018 	pop	af
   208A C1                 7019 	pop	bc
                           7020 ;demo.c:951: lukema = ffa;
   208B 2Ar13s42           7021 	ld	hl,(_ffa)
   208E DD 75 FA           7022 	ld	-6 (ix),l
   2091 DD 74 FB           7023 	ld	-5 (ix),h
                           7024 ;demo.c:952: for (y = 0; y < 5; y+=1) {
   2094 DD 36 FE 00        7025 	ld	-2 (ix),#0x00
   2098                    7026 00140$:
   2098 DD 7E FE           7027 	ld	a,-2 (ix)
   209B D6 05              7028 	sub	a,#0x05
   209D D2rFEs21           7029 	jp	NC,00143$
                           7030 ;demo.c:953: for (x = 0; x < 6; x+=1) {
   20A0 DD 7E FE           7031 	ld	a,-2 (ix)
   20A3 87                 7032 	add	a,a
   20A4 DD 77 F7           7033 	ld	-9 (ix),a
   20A7 DD 36 FF 00        7034 	ld	-1 (ix),#0x00
   20AB                    7035 00136$:
   20AB DD 7E FF           7036 	ld	a,-1 (ix)
   20AE D6 06              7037 	sub	a,#0x06
   20B0 D2rF8s21           7038 	jp	NC,00142$
                           7039 ;demo.c:955: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   20B3 DD 5E FF           7040 	ld	e,-1 (ix)
   20B6 16 00              7041 	ld	d,#0x00
   20B8 CB 23              7042 	sla	e
   20BA CB 12              7043 	rl	d
   20BC CB 23              7044 	sla	e
   20BE CB 12              7045 	rl	d
   20C0 CB 23              7046 	sla	e
   20C2 CB 12              7047 	rl	d
   20C4 DD 7E FA           7048 	ld	a,-6 (ix)
   20C7 83                 7049 	add	a,e
   20C8 DD 77 F8           7050 	ld	-8 (ix),a
   20CB DD 7E FB           7051 	ld	a,-5 (ix)
   20CE 8A                 7052 	adc	a,d
   20CF DD 77 F9           7053 	ld	-7 (ix),a
   20D2 DD 5E FE           7054 	ld	e,-2 (ix)
   20D5 16 00              7055 	ld	d,#0x00
   20D7 CB 23              7056 	sla	e
   20D9 CB 12              7057 	rl	d
   20DB CB 23              7058 	sla	e
   20DD CB 12              7059 	rl	d
   20DF DD 7E F8           7060 	ld	a,-8 (ix)
   20E2 83                 7061 	add	a,e
   20E3 5F                 7062 	ld	e,a
   20E4 DD 7E F9           7063 	ld	a,-7 (ix)
   20E7 8A                 7064 	adc	a,d
   20E8 16 00              7065 	ld	d,#0x00
   20EA 21r00s00           7066 	ld	hl,#_sintab
   20ED 19                 7067 	add	hl,de
   20EE 5E                 7068 	ld	e,(hl)
   20EF CB 2B              7069 	sra	e
   20F1 CB 2B              7070 	sra	e
   20F3 CB 2B              7071 	sra	e
   20F5 CB 2B              7072 	sra	e
   20F7 7B                 7073 	ld	a,e
   20F8 17                 7074 	rla	
   20F9 9F                 7075 	sbc	a,a
   20FA 57                 7076 	ld	d,a
   20FB 21 07 00           7077 	ld	hl,#0x0007
   20FE 19                 7078 	add	hl,de
   20FF DD 75 FC           7079 	ld	-4 (ix),l
                           7080 ;demo.c:956: if (px < 0) px = 0; 
   2102 DD 74 FD           7081 	ld	-3 (ix),h
   2105 7C                 7082 	ld	a, h
   2106 CB 7F              7083 	bit	7,a
   2108 28 08              7084 	jr	Z,00118$
   210A DD 36 FC 00        7085 	ld	-4 (ix),#0x00
   210E DD 36 FD 00        7086 	ld	-3 (ix),#0x00
   2112                    7087 00118$:
                           7088 ;demo.c:957: if (px > 14) px = 14; 
   2112 3E 0E              7089 	ld	a,#0x0E
   2114 DD 96 FC           7090 	sub	a,-4 (ix)
   2117 3E 00              7091 	ld	a,#0x00
   2119 DD 9E FD           7092 	sbc	a,-3 (ix)
   211C F2r27s21           7093 	jp	P,00120$
   211F DD 36 FC 0E        7094 	ld	-4 (ix),#0x0E
   2123 DD 36 FD 00        7095 	ld	-3 (ix),#0x00
   2127                    7096 00120$:
                           7097 ;demo.c:959: cmd.size_x = 12;
   2127 11r32s41           7098 	ld	de,#_cmd + 8
   212A EB                 7099 	ex	de,hl
   212B 36 0C              7100 	ld	(hl),#0x0C
   212D 23                 7101 	inc	hl
   212E 36 00              7102 	ld	(hl),#0x00
                           7103 ;demo.c:960: cmd.size_y = 11;
   2130 11r34s41           7104 	ld	de,#_cmd + 10
   2133 EB                 7105 	ex	de,hl
   2134 36 0B              7106 	ld	(hl),#0x0B
   2136 23                 7107 	inc	hl
   2137 36 00              7108 	ld	(hl),#0x00
                           7109 ;demo.c:961: cmd.data = 0;
   2139 11r36s41           7110 	ld	de,#_cmd + 12
   213C 3E 00              7111 	ld	a,#0x00
   213E 12                 7112 	ld	(de),a
                           7113 ;demo.c:962: cmd.argument = 0x00; // from 70xY to left
   213F 11r37s41           7114 	ld	de,#_cmd + 13
   2142 3E 00              7115 	ld	a,#0x00
   2144 12                 7116 	ld	(de),a
                           7117 ;demo.c:963: cmd.command = 0x98; // vram to vram, y only
   2145 11r38s41           7118 	ld	de,#_cmd + 14
   2148 3E 98              7119 	ld	a,#0x98
   214A 12                 7120 	ld	(de),a
                           7121 ;demo.c:965: cmd.source_x = twelvetimes[px];
   214B DD 5E FC           7122 	ld	e,-4 (ix)
   214E DD 56 FD           7123 	ld	d,-3 (ix)
   2151 CB 23              7124 	sla	e
   2153 CB 12              7125 	rl	d
   2155 21r20s01           7126 	ld	hl,#_twelvetimes
   2158 19                 7127 	add	hl,de
   2159 5E                 7128 	ld	e,(hl)
   215A 23                 7129 	inc	hl
   215B 56                 7130 	ld	d,(hl)
   215C 21r2As41           7131 	ld	hl,#_cmd
   215F 73                 7132 	ld	(hl),e
   2160 23                 7133 	inc	hl
   2161 72                 7134 	ld	(hl),d
                           7135 ;demo.c:966: cmd.source_y = 768+183+16-px;
   2162 23                 7136 	inc	hl
   2163 DD 75 F8           7137 	ld	-8 (ix),l
   2166 DD 74 F9           7138 	ld	-7 (ix),h
   2169 3E C7              7139 	ld	a,#0xC7
   216B DD 96 FC           7140 	sub	a,-4 (ix)
   216E 5F                 7141 	ld	e,a
   216F 3E 03              7142 	ld	a,#0x03
   2171 DD 9E FD           7143 	sbc	a,-3 (ix)
   2174 57                 7144 	ld	d,a
   2175 DD 6E F8           7145 	ld	l,-8 (ix)
   2178 DD 66 F9           7146 	ld	h,-7 (ix)
   217B 73                 7147 	ld	(hl),e
   217C 23                 7148 	inc	hl
   217D 72                 7149 	ld	(hl),d
                           7150 ;demo.c:967: cmd.dest_x = 84+twelvetimes[x];
   217E 21r2Es41           7151 	ld	hl,#_cmd + 4
   2181 DD 75 F8           7152 	ld	-8 (ix),l
   2184 DD 74 F9           7153 	ld	-7 (ix),h
   2187 DD 7E FF           7154 	ld	a,-1 (ix)
   218A 87                 7155 	add	a,a
   218B C6r20              7156 	add	a,#<_twelvetimes
   218D 6F                 7157 	ld	l,a
   218E 3Es01              7158 	ld	a,#>_twelvetimes
   2190 CE 00              7159 	adc	a,#0x00
   2192 67                 7160 	ld	h,a
   2193 5E                 7161 	ld	e,(hl)
   2194 23                 7162 	inc	hl
   2195 56                 7163 	ld	d,(hl)
   2196 21 54 00           7164 	ld	hl,#0x0054
   2199 19                 7165 	add	hl,de
   219A EB                 7166 	ex	de,hl
   219B DD 6E F8           7167 	ld	l,-8 (ix)
   219E DD 66 F9           7168 	ld	h,-7 (ix)
   21A1 73                 7169 	ld	(hl),e
   21A2 23                 7170 	inc	hl
   21A3 72                 7171 	ld	(hl),d
                           7172 ;demo.c:968: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   21A4 21r30s41           7173 	ld	hl,#_cmd + 6
   21A7 DD 75 F8           7174 	ld	-8 (ix),l
   21AA DD 74 F9           7175 	ld	-7 (ix),h
   21AD 3Er54              7176 	ld	a,#<_eighttimes
   21AF DD 86 F7           7177 	add	a,-9 (ix)
   21B2 6F                 7178 	ld	l,a
   21B3 3Es01              7179 	ld	a,#>_eighttimes
   21B5 CE 00              7180 	adc	a,#0x00
   21B7 67                 7181 	ld	h,a
   21B8 5E                 7182 	ld	e,(hl)
   21B9 23                 7183 	inc	hl
   21BA 56                 7184 	ld	d,(hl)
   21BB 13                 7185 	inc	de
   21BC 13                 7186 	inc	de
   21BD 13                 7187 	inc	de
   21BE 13                 7188 	inc	de
   21BF 79                 7189 	ld	a,c
   21C0 83                 7190 	add	a,e
   21C1 DD 77 F5           7191 	ld	-11 (ix),a
   21C4 78                 7192 	ld	a,b
   21C5 8A                 7193 	adc	a,d
   21C6 DD 77 F6           7194 	ld	-10 (ix),a
   21C9 3E 0E              7195 	ld	a,#0x0E
   21CB DD 96 FC           7196 	sub	a,-4 (ix)
   21CE 5F                 7197 	ld	e,a
   21CF 3E 00              7198 	ld	a,#0x00
   21D1 DD 9E FD           7199 	sbc	a,-3 (ix)
   21D4 57                 7200 	ld	d,a
   21D5 DD 7E F5           7201 	ld	a,-11 (ix)
   21D8 83                 7202 	add	a,e
   21D9 5F                 7203 	ld	e,a
   21DA DD 7E F6           7204 	ld	a,-10 (ix)
   21DD 8A                 7205 	adc	a,d
   21DE 57                 7206 	ld	d,a
   21DF DD 6E F8           7207 	ld	l,-8 (ix)
   21E2 DD 66 F9           7208 	ld	h,-7 (ix)
   21E5 73                 7209 	ld	(hl),e
   21E6 23                 7210 	inc	hl
   21E7 72                 7211 	ld	(hl),d
                           7212 ;demo.c:969: vdp_copier(&cmd);
   21E8 C5                 7213 	push	bc
   21E9 21r2As41           7214 	ld	hl,#_cmd
   21EC E5                 7215 	push	hl
   21ED CDr00s00           7216 	call	_vdp_copier
   21F0 F1                 7217 	pop	af
   21F1 C1                 7218 	pop	bc
                           7219 ;demo.c:953: for (x = 0; x < 6; x+=1) {
   21F2 DD 34 FF           7220 	inc	-1 (ix)
   21F5 C3rABs20           7221 	jp	00136$
   21F8                    7222 00142$:
                           7223 ;demo.c:952: for (y = 0; y < 5; y+=1) {
   21F8 DD 34 FE           7224 	inc	-2 (ix)
   21FB C3r98s20           7225 	jp	00140$
   21FE                    7226 00143$:
                           7227 ;demo.c:974: for (x = 0; x < 6; x+=1) {
   21FE DD 36 FF 00        7228 	ld	-1 (ix),#0x00
   2202                    7229 00144$:
   2202 DD 7E FF           7230 	ld	a,-1 (ix)
   2205 D6 06              7231 	sub	a,#0x06
   2207 D2r48s23           7232 	jp	NC,00147$
                           7233 ;demo.c:975: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   220A DD 5E FF           7234 	ld	e,-1 (ix)
   220D 16 00              7235 	ld	d,#0x00
   220F CB 23              7236 	sla	e
   2211 CB 12              7237 	rl	d
   2213 CB 23              7238 	sla	e
   2215 CB 12              7239 	rl	d
   2217 CB 23              7240 	sla	e
   2219 CB 12              7241 	rl	d
   221B DD 7E FA           7242 	ld	a,-6 (ix)
   221E 83                 7243 	add	a,e
   221F 5F                 7244 	ld	e,a
   2220 DD 7E FB           7245 	ld	a,-5 (ix)
   2223 8A                 7246 	adc	a,d
   2224 57                 7247 	ld	d,a
   2225 21 14 00           7248 	ld	hl,#0x0014
   2228 19                 7249 	add	hl,de
   2229 5D                 7250 	ld	e,l
   222A 16 00              7251 	ld	d,#0x00
   222C 21r00s00           7252 	ld	hl,#_sintab
   222F 19                 7253 	add	hl,de
   2230 5E                 7254 	ld	e,(hl)
   2231 CB 2B              7255 	sra	e
   2233 CB 2B              7256 	sra	e
   2235 CB 2B              7257 	sra	e
   2237 CB 2B              7258 	sra	e
   2239 7B                 7259 	ld	a,e
   223A 17                 7260 	rla	
   223B 9F                 7261 	sbc	a,a
   223C 57                 7262 	ld	d,a
   223D 21 07 00           7263 	ld	hl,#0x0007
   2240 19                 7264 	add	hl,de
   2241 DD 75 FC           7265 	ld	-4 (ix),l
                           7266 ;demo.c:976: if (px < 0) px = 0; 
   2244 DD 74 FD           7267 	ld	-3 (ix),h
   2247 7C                 7268 	ld	a, h
   2248 CB 7F              7269 	bit	7,a
   224A 28 08              7270 	jr	Z,00122$
   224C DD 36 FC 00        7271 	ld	-4 (ix),#0x00
   2250 DD 36 FD 00        7272 	ld	-3 (ix),#0x00
   2254                    7273 00122$:
                           7274 ;demo.c:977: if (px > 14) px = 14; 
   2254 3E 0E              7275 	ld	a,#0x0E
   2256 DD 96 FC           7276 	sub	a,-4 (ix)
   2259 3E 00              7277 	ld	a,#0x00
   225B DD 9E FD           7278 	sbc	a,-3 (ix)
   225E F2r69s22           7279 	jp	P,00124$
   2261 DD 36 FC 0E        7280 	ld	-4 (ix),#0x0E
   2265 DD 36 FD 00        7281 	ld	-3 (ix),#0x00
   2269                    7282 00124$:
                           7283 ;demo.c:979: cmd.size_x = 12;
   2269 11r32s41           7284 	ld	de,#_cmd + 8
   226C EB                 7285 	ex	de,hl
   226D 36 0C              7286 	ld	(hl),#0x0C
   226F 23                 7287 	inc	hl
   2270 36 00              7288 	ld	(hl),#0x00
                           7289 ;demo.c:980: cmd.size_y = 27-(14-px);
   2272 21r34s41           7290 	ld	hl,#_cmd + 10
   2275 DD 75 F5           7291 	ld	-11 (ix),l
   2278 DD 74 F6           7292 	ld	-10 (ix),h
   227B 3E 0E              7293 	ld	a,#0x0E
   227D DD 96 FC           7294 	sub	a,-4 (ix)
   2280 DD 77 F8           7295 	ld	-8 (ix),a
   2283 3E 00              7296 	ld	a,#0x00
   2285 DD 9E FD           7297 	sbc	a,-3 (ix)
   2288 DD 77 F9           7298 	ld	-7 (ix),a
   228B 3E 1B              7299 	ld	a,#0x1B
   228D DD 96 F8           7300 	sub	a,-8 (ix)
   2290 5F                 7301 	ld	e,a
   2291 3E 00              7302 	ld	a,#0x00
   2293 DD 9E F9           7303 	sbc	a,-7 (ix)
   2296 57                 7304 	ld	d,a
   2297 DD 6E F5           7305 	ld	l,-11 (ix)
   229A DD 66 F6           7306 	ld	h,-10 (ix)
   229D 73                 7307 	ld	(hl),e
   229E 23                 7308 	inc	hl
   229F 72                 7309 	ld	(hl),d
                           7310 ;demo.c:981: cmd.data = 0;
   22A0 11r36s41           7311 	ld	de,#_cmd + 12
   22A3 3E 00              7312 	ld	a,#0x00
   22A5 12                 7313 	ld	(de),a
                           7314 ;demo.c:982: cmd.argument = 0x00; // from 70xY to left
   22A6 11r37s41           7315 	ld	de,#_cmd + 13
   22A9 3E 00              7316 	ld	a,#0x00
   22AB 12                 7317 	ld	(de),a
                           7318 ;demo.c:983: cmd.command = 0x98; // vram to vram, y only
   22AC 11r38s41           7319 	ld	de,#_cmd + 14
   22AF 3E 98              7320 	ld	a,#0x98
   22B1 12                 7321 	ld	(de),a
                           7322 ;demo.c:985: cmd.source_x = twelvetimes[px];
   22B2 DD 5E FC           7323 	ld	e,-4 (ix)
   22B5 DD 56 FD           7324 	ld	d,-3 (ix)
   22B8 CB 23              7325 	sla	e
   22BA CB 12              7326 	rl	d
   22BC 21r20s01           7327 	ld	hl,#_twelvetimes
   22BF 19                 7328 	add	hl,de
   22C0 5E                 7329 	ld	e,(hl)
   22C1 23                 7330 	inc	hl
   22C2 56                 7331 	ld	d,(hl)
   22C3 21r2As41           7332 	ld	hl,#_cmd
   22C6 73                 7333 	ld	(hl),e
   22C7 23                 7334 	inc	hl
   22C8 72                 7335 	ld	(hl),d
                           7336 ;demo.c:986: cmd.source_y = 768+183+ 16-px;
   22C9 23                 7337 	inc	hl
   22CA DD 75 F5           7338 	ld	-11 (ix),l
   22CD DD 74 F6           7339 	ld	-10 (ix),h
   22D0 3E C7              7340 	ld	a,#0xC7
   22D2 DD 96 FC           7341 	sub	a,-4 (ix)
   22D5 5F                 7342 	ld	e,a
   22D6 3E 03              7343 	ld	a,#0x03
   22D8 DD 9E FD           7344 	sbc	a,-3 (ix)
   22DB 57                 7345 	ld	d,a
   22DC DD 6E F5           7346 	ld	l,-11 (ix)
   22DF DD 66 F6           7347 	ld	h,-10 (ix)
   22E2 73                 7348 	ld	(hl),e
   22E3 23                 7349 	inc	hl
   22E4 72                 7350 	ld	(hl),d
                           7351 ;demo.c:987: cmd.dest_x = 84+twelvetimes[x];
   22E5 21r2Es41           7352 	ld	hl,#_cmd + 4
   22E8 DD 75 F5           7353 	ld	-11 (ix),l
   22EB DD 74 F6           7354 	ld	-10 (ix),h
   22EE DD 7E FF           7355 	ld	a,-1 (ix)
   22F1 87                 7356 	add	a,a
   22F2 C6r20              7357 	add	a,#<_twelvetimes
   22F4 6F                 7358 	ld	l,a
   22F5 3Es01              7359 	ld	a,#>_twelvetimes
   22F7 CE 00              7360 	adc	a,#0x00
   22F9 67                 7361 	ld	h,a
   22FA 5E                 7362 	ld	e,(hl)
   22FB 23                 7363 	inc	hl
   22FC 56                 7364 	ld	d,(hl)
   22FD 21 54 00           7365 	ld	hl,#0x0054
   2300 19                 7366 	add	hl,de
   2301 EB                 7367 	ex	de,hl
   2302 DD 6E F5           7368 	ld	l,-11 (ix)
   2305 DD 66 F6           7369 	ld	h,-10 (ix)
   2308 73                 7370 	ld	(hl),e
   2309 23                 7371 	inc	hl
   230A 72                 7372 	ld	(hl),d
                           7373 ;demo.c:988: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   230B 21r30s41           7374 	ld	hl,#_cmd + 6
   230E DD 75 F5           7375 	ld	-11 (ix),l
   2311 DD 74 F6           7376 	ld	-10 (ix),h
   2314 11r5Es01           7377 	ld	de,#_eighttimes + 10
   2317 EB                 7378 	ex	de,hl
   2318 5E                 7379 	ld	e,(hl)
   2319 23                 7380 	inc	hl
   231A 56                 7381 	ld	d,(hl)
   231B 13                 7382 	inc	de
   231C 13                 7383 	inc	de
   231D 13                 7384 	inc	de
   231E 13                 7385 	inc	de
   231F 79                 7386 	ld	a,c
   2320 83                 7387 	add	a,e
   2321 5F                 7388 	ld	e,a
   2322 78                 7389 	ld	a,b
   2323 8A                 7390 	adc	a,d
   2324 57                 7391 	ld	d,a
   2325 7B                 7392 	ld	a,e
   2326 DD 86 F8           7393 	add	a,-8 (ix)
   2329 5F                 7394 	ld	e,a
   232A 7A                 7395 	ld	a,d
   232B DD 8E F9           7396 	adc	a,-7 (ix)
   232E 57                 7397 	ld	d,a
   232F DD 6E F5           7398 	ld	l,-11 (ix)
   2332 DD 66 F6           7399 	ld	h,-10 (ix)
   2335 73                 7400 	ld	(hl),e
   2336 23                 7401 	inc	hl
   2337 72                 7402 	ld	(hl),d
                           7403 ;demo.c:989: vdp_copier(&cmd);
   2338 C5                 7404 	push	bc
   2339 21r2As41           7405 	ld	hl,#_cmd
   233C E5                 7406 	push	hl
   233D CDr00s00           7407 	call	_vdp_copier
   2340 F1                 7408 	pop	af
   2341 C1                 7409 	pop	bc
                           7410 ;demo.c:974: for (x = 0; x < 6; x+=1) {
   2342 DD 34 FF           7411 	inc	-1 (ix)
   2345 C3r02s22           7412 	jp	00144$
   2348                    7413 00147$:
                           7414 ;demo.c:993: if (buf == -1) vdp_register(2, 0x1F);
   2348 3Ar11s42           7415 	ld	a,(#_buf+0)
   234B 3C                 7416 	inc	a
   234C 20 06              7417 	jr	NZ,00200$
   234E 3Ar12s42           7418 	ld	a,(#_buf+1)
   2351 3C                 7419 	inc	a
   2352 28 02              7420 	jr	Z,00201$
   2354                    7421 00200$:
   2354 18 0A              7422 	jr	00126$
   2356                    7423 00201$:
   2356 21 02 1F           7424 	ld	hl,#0x1F02
   2359 E5                 7425 	push	hl
   235A CDr00s00           7426 	call	_vdp_register
   235D F1                 7427 	pop	af
   235E 18 08              7428 	jr	00127$
   2360                    7429 00126$:
                           7430 ;demo.c:994: else vdp_register(2, 0x3F);
   2360 21 02 3F           7431 	ld	hl,#0x3F02
   2363 E5                 7432 	push	hl
   2364 CDr00s00           7433 	call	_vdp_register
   2367 F1                 7434 	pop	af
   2368                    7435 00127$:
                           7436 ;demo.c:997: buf = -buf;
   2368 AF                 7437 	xor	a,a
   2369 FD 21r11s42        7438 	ld	iy,#_buf
   236D 3E 00              7439 	ld	a,#0x00
   236F FD 9E 00           7440 	sbc	a,0 (iy)
   2372 21r11s42           7441 	ld	hl,#_buf + 0
   2375 77                 7442 	ld	(hl), a
   2376 FD 21r11s42        7443 	ld	iy,#_buf
   237A 3E 00              7444 	ld	a,#0x00
   237C FD 9E 01           7445 	sbc	a,1 (iy)
   237F 21r12s42           7446 	ld	hl,#_buf + 1
   2382 77                 7447 	ld	(hl), a
                           7448 ;demo.c:999: ffa+=8;
   2383 21r13s42           7449 	ld	hl,#_ffa
   2386 7E                 7450 	ld	a,(hl)
   2387 C6 08              7451 	add	a,#0x08
   2389 23                 7452 	inc	hl
   238A 2B                 7453 	dec	hl
   238B C5                 7454 	push	bc
   238C 4F                 7455 	ld	c, a
   238D 23                 7456 	inc	hl
   238E 7E                 7457 	ld	a, (hl)
   238F 47                 7458 	ld	b, a
   2390 79                 7459 	ld	a, c
   2391 2B                 7460 	dec	hl
   2392 77                 7461 	ld	(hl), a
   2393 78                 7462 	ld	a, b
   2394 C1                 7463 	pop	bc
   2395 CE 00              7464 	adc	a,#0x00
   2397 23                 7465 	inc	hl
   2398 77                 7466 	ld	(hl),a
   2399 DD F9              7467 	ld	sp,ix
   239B DD E1              7468 	pop	ix
   239D C9                 7469 	ret
   239E                    7470 _thewave_end::
                           7471 ;demo.c:1005: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           7472 ;	---------------------------------
                           7473 ; Function drawtritile
                           7474 ; ---------------------------------
   239E                    7475 _drawtritile_start::
   239E                    7476 _drawtritile:
   239E DD E5              7477 	push	ix
   23A0 DD 21 00 00        7478 	ld	ix,#0
   23A4 DD 39              7479 	add	ix,sp
                           7480 ;demo.c:1006: cmd.source_x = tx;
   23A6 DD 4E 04           7481 	ld	c,4 (ix)
   23A9 06 00              7482 	ld	b,#0x00
   23AB 21r2As41           7483 	ld	hl,#_cmd
   23AE 71                 7484 	ld	(hl),c
   23AF 23                 7485 	inc	hl
   23B0 70                 7486 	ld	(hl),b
                           7487 ;demo.c:1007: cmd.source_y = ty-1;
   23B1 01r2Cs41           7488 	ld	bc,#_cmd + 2
   23B4 DD 5E 05           7489 	ld	e,5 (ix)
   23B7 DD 56 06           7490 	ld	d,6 (ix)
   23BA 1B                 7491 	dec	de
   23BB 69                 7492 	ld	l,c
   23BC 60                 7493 	ld	h,b
   23BD 73                 7494 	ld	(hl),e
   23BE 23                 7495 	inc	hl
   23BF 72                 7496 	ld	(hl),d
                           7497 ;demo.c:1008: cmd.dest_x = x;
   23C0 01r2Es41           7498 	ld	bc,#_cmd + 4
   23C3 DD 5E 07           7499 	ld	e,7 (ix)
   23C6 16 00              7500 	ld	d,#0x00
   23C8 69                 7501 	ld	l,c
   23C9 60                 7502 	ld	h,b
   23CA 73                 7503 	ld	(hl),e
   23CB 23                 7504 	inc	hl
   23CC 72                 7505 	ld	(hl),d
                           7506 ;demo.c:1009: cmd.dest_y = y;
   23CD 01r30s41           7507 	ld	bc,#_cmd + 6
   23D0 DD 5E 08           7508 	ld	e,8 (ix)
   23D3 16 00              7509 	ld	d,#0x00
   23D5 69                 7510 	ld	l,c
   23D6 60                 7511 	ld	h,b
   23D7 73                 7512 	ld	(hl),e
   23D8 23                 7513 	inc	hl
   23D9 72                 7514 	ld	(hl),d
                           7515 ;demo.c:1010: cmd.size_x = 16;
   23DA 21r32s41           7516 	ld	hl, #_cmd + 8
   23DD 36 10              7517 	ld	(hl),#0x10
   23DF 23                 7518 	inc	hl
   23E0 36 00              7519 	ld	(hl),#0x00
                           7520 ;demo.c:1011: cmd.size_y = 16;
   23E2 21r34s41           7521 	ld	hl, #_cmd + 10
   23E5 36 10              7522 	ld	(hl),#0x10
   23E7 23                 7523 	inc	hl
   23E8 36 00              7524 	ld	(hl),#0x00
                           7525 ;demo.c:1012: cmd.data = 0;
                           7526 ;demo.c:1013: cmd.argument = 0x00;
   23EA 3E 00              7527 	ld	a,#0x00
   23EC 32r36s41           7528 	ld	(#_cmd + 12),a
   23EF 32r37s41           7529 	ld	(#_cmd + 13),a
                           7530 ;demo.c:1014: cmd.command = 0xd0; // HMMM
   23F2 3E D0              7531 	ld	a,#0xD0
   23F4 32r38s41           7532 	ld	(#_cmd + 14),a
                           7533 ;demo.c:1015: vdp_copier(&cmd);
   23F7 21r2As41           7534 	ld	hl,#_cmd
   23FA E5                 7535 	push	hl
   23FB CDr00s00           7536 	call	_vdp_copier
   23FE F1                 7537 	pop	af
   23FF DD E1              7538 	pop	ix
   2401 C9                 7539 	ret
   2402                    7540 _drawtritile_end::
                           7541 ;demo.c:1022: void drawtilescreen(char* tripic) {
                           7542 ;	---------------------------------
                           7543 ; Function drawtilescreen
                           7544 ; ---------------------------------
   2402                    7545 _drawtilescreen_start::
   2402                    7546 _drawtilescreen:
   2402 DD E5              7547 	push	ix
   2404 DD 21 00 00        7548 	ld	ix,#0
   2408 DD 39              7549 	add	ix,sp
   240A F5                 7550 	push	af
   240B 3B                 7551 	dec	sp
                           7552 ;demo.c:1024: if(tilei >= 192) return;
   240C 3Ar16s42           7553 	ld	a,(#_tilei+0)
   240F D6 C0              7554 	sub	a,#0xC0
   2411 3Ar17s42           7555 	ld	a,(#_tilei+1)
   2414 DE 00              7556 	sbc	a,#0x00
   2416 FAr1Cs24           7557 	jp	M,00102$
   2419 C3rE7s24           7558 	jp	00112$
   241C                    7559 00102$:
                           7560 ;demo.c:1026: tiletick++;
   241C FD 21r1Cs42        7561 	ld	iy,#_tiletick
   2420 FD 34 00           7562 	inc	0 (iy)
                           7563 ;demo.c:1027: if (tiletick > 6) { tiletick = 0;}
   2423 3E 06              7564 	ld	a,#0x06
   2425 FD 21r1Cs42        7565 	ld	iy,#_tiletick
   2429 FD 96 00           7566 	sub	a,0 (iy)
   242C 30 0A              7567 	jr	NC,00104$
   242E FD 21r1Cs42        7568 	ld	iy,#_tiletick
   2432 FD 36 00 00        7569 	ld	0 (iy),#0x00
   2436 18 03              7570 	jr	00118$
   2438                    7571 00104$:
                           7572 ;demo.c:1028: else return;
   2438 C3rE7s24           7573 	jp	00112$
                           7574 ;demo.c:1029: for (i=0;i<20;i++) {
   243B                    7575 00118$:
   243B DD 36 FF 00        7576 	ld	-1 (ix),#0x00
   243F                    7577 00108$:
   243F DD 7E FF           7578 	ld	a,-1 (ix)
   2442 D6 14              7579 	sub	a,#0x14
   2444 D2rE7s24           7580 	jp	NC,00112$
                           7581 ;demo.c:1030: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2447 3Ar1As42           7582 	ld	a,(#_tiley+0)
   244A DD 77 FD           7583 	ld	-3 (ix),a
   244D 3Ar18s42           7584 	ld	a,(#_tilex+0)
   2450 DD 77 FE           7585 	ld	-2 (ix),a
   2453 21r16s42           7586 	ld	hl,#_tilei
   2456 DD 7E 04           7587 	ld	a,4 (ix)
   2459 86                 7588 	add	a,(hl)
   245A 57                 7589 	ld	d,a
   245B DD 7E 05           7590 	ld	a,5 (ix)
   245E 23                 7591 	inc	hl
   245F 8E                 7592 	adc	a,(hl)
   2460 6A                 7593 	ld	l,d
   2461 67                 7594 	ld	h,a
   2462 56                 7595 	ld	d,(hl)
   2463 7A                 7596 	ld	a,d
   2464 87                 7597 	add	a,a
   2465 C6r88              7598 	add	a,#<_tri_lookup_y
   2467 6F                 7599 	ld	l,a
   2468 3Es01              7600 	ld	a,#>_tri_lookup_y
   246A CE 00              7601 	adc	a,#0x00
   246C 67                 7602 	ld	h,a
   246D 4E                 7603 	ld	c,(hl)
   246E 23                 7604 	inc	hl
   246F 5E                 7605 	ld	e,(hl)
   2470 3Er00              7606 	ld	a,#<_tri_lookup_x
   2472 82                 7607 	add	a,d
   2473 6F                 7608 	ld	l,a
   2474 3Es01              7609 	ld	a,#>_tri_lookup_x
   2476 CE 00              7610 	adc	a,#0x00
   2478 67                 7611 	ld	h,a
   2479 56                 7612 	ld	d,(hl)
   247A DD 66 FD           7613 	ld	h,-3 (ix)
   247D DD 6E FE           7614 	ld	l,-2 (ix)
   2480 E5                 7615 	push	hl
   2481 69                 7616 	ld	l,c
   2482 63                 7617 	ld	h,e
   2483 E5                 7618 	push	hl
   2484 D5                 7619 	push	de
   2485 33                 7620 	inc	sp
   2486 CDr9Es23           7621 	call	_drawtritile
   2489 F1                 7622 	pop	af
   248A F1                 7623 	pop	af
   248B 33                 7624 	inc	sp
                           7625 ;demo.c:1031: tilex+=16;
   248C 21r18s42           7626 	ld	hl,#_tilex
   248F 7E                 7627 	ld	a,(hl)
   2490 C6 10              7628 	add	a,#0x10
   2492 23                 7629 	inc	hl
   2493 2B                 7630 	dec	hl
   2494 C5                 7631 	push	bc
   2495 4F                 7632 	ld	c, a
   2496 23                 7633 	inc	hl
   2497 7E                 7634 	ld	a, (hl)
   2498 47                 7635 	ld	b, a
   2499 79                 7636 	ld	a, c
   249A 2B                 7637 	dec	hl
   249B 77                 7638 	ld	(hl), a
   249C 78                 7639 	ld	a, b
   249D C1                 7640 	pop	bc
   249E CE 00              7641 	adc	a,#0x00
   24A0 23                 7642 	inc	hl
   24A1 77                 7643 	ld	(hl),a
                           7644 ;demo.c:1032: tilei++;
   24A2 FD 21r16s42        7645 	ld	iy,#_tilei
   24A6 FD 34 00           7646 	inc	0 (iy)
   24A9 20 07              7647 	jr	NZ,00119$
   24AB FD 21r16s42        7648 	ld	iy,#_tilei
   24AF FD 34 01           7649 	inc	1 (iy)
   24B2                    7650 00119$:
                           7651 ;demo.c:1033: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   24B2 3Ar18s42           7652 	ld	a,(#_tilex+0)
   24B5 D6 00              7653 	sub	a,#0x00
   24B7 3Ar19s42           7654 	ld	a,(#_tilex+1)
   24BA DE 01              7655 	sbc	a,#0x01
   24BC FArE1s24           7656 	jp	M,00110$
   24BF 21r18s42           7657 	ld	hl,#_tilex + 0
   24C2 36 00              7658 	ld	(hl), #0x00
   24C4 21r19s42           7659 	ld	hl,#_tilex + 1
   24C7 36 00              7660 	ld	(hl), #0x00
   24C9 21r1As42           7661 	ld	hl,#_tiley
   24CC 7E                 7662 	ld	a,(hl)
   24CD C6 10              7663 	add	a,#0x10
   24CF 23                 7664 	inc	hl
   24D0 2B                 7665 	dec	hl
   24D1 C5                 7666 	push	bc
   24D2 4F                 7667 	ld	c, a
   24D3 23                 7668 	inc	hl
   24D4 7E                 7669 	ld	a, (hl)
   24D5 47                 7670 	ld	b, a
   24D6 79                 7671 	ld	a, c
   24D7 2B                 7672 	dec	hl
   24D8 77                 7673 	ld	(hl), a
   24D9 78                 7674 	ld	a, b
   24DA C1                 7675 	pop	bc
   24DB CE 00              7676 	adc	a,#0x00
   24DD 23                 7677 	inc	hl
   24DE 77                 7678 	ld	(hl),a
   24DF 18 06              7679 	jr	00112$
   24E1                    7680 00110$:
                           7681 ;demo.c:1029: for (i=0;i<20;i++) {
   24E1 DD 34 FF           7682 	inc	-1 (ix)
   24E4 C3r3Fs24           7683 	jp	00108$
   24E7                    7684 00112$:
   24E7 DD F9              7685 	ld	sp,ix
   24E9 DD E1              7686 	pop	ix
   24EB C9                 7687 	ret
   24EC                    7688 _drawtilescreen_end::
                           7689 ;demo.c:1038: void drawtilescreen_full(char* tripic) {
                           7690 ;	---------------------------------
                           7691 ; Function drawtilescreen_full
                           7692 ; ---------------------------------
   24EC                    7693 _drawtilescreen_full_start::
   24EC                    7694 _drawtilescreen_full:
   24EC DD E5              7695 	push	ix
   24EE DD 21 00 00        7696 	ld	ix,#0
   24F2 DD 39              7697 	add	ix,sp
   24F4 21 F8 FF           7698 	ld	hl,#-8
   24F7 39                 7699 	add	hl,sp
   24F8 F9                 7700 	ld	sp,hl
                           7701 ;demo.c:1039: int x = 0;
   24F9 DD 36 FE 00        7702 	ld	-2 (ix),#0x00
   24FD DD 36 FF 00        7703 	ld	-1 (ix),#0x00
                           7704 ;demo.c:1042: while(i < 192) {
   2501 DD 36 FC 00        7705 	ld	-4 (ix),#0x00
   2505 DD 36 FD 00        7706 	ld	-3 (ix),#0x00
   2509 DD 36 FA 00        7707 	ld	-6 (ix),#0x00
   250D DD 36 FB 00        7708 	ld	-5 (ix),#0x00
   2511                    7709 00103$:
   2511 DD 7E FA           7710 	ld	a,-6 (ix)
   2514 D6 C0              7711 	sub	a,#0xC0
   2516 DD 7E FB           7712 	ld	a,-5 (ix)
   2519 DE 00              7713 	sbc	a,#0x00
   251B F2rA2s25           7714 	jp	P,00106$
                           7715 ;demo.c:1043: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   251E DD 7E FC           7716 	ld	a,-4 (ix)
   2521 DD 77 F8           7717 	ld	-8 (ix),a
   2524 DD 7E FE           7718 	ld	a,-2 (ix)
   2527 DD 77 F9           7719 	ld	-7 (ix),a
   252A DD 7E 04           7720 	ld	a,4 (ix)
   252D DD 86 FA           7721 	add	a,-6 (ix)
   2530 4F                 7722 	ld	c,a
   2531 DD 7E 05           7723 	ld	a,5 (ix)
   2534 DD 8E FB           7724 	adc	a,-5 (ix)
   2537 47                 7725 	ld	b,a
   2538 0A                 7726 	ld	a,(bc)
   2539 4F                 7727 	ld	c,a
   253A 87                 7728 	add	a,a
   253B C6r88              7729 	add	a,#<_tri_lookup_y
   253D 6F                 7730 	ld	l,a
   253E 3Es01              7731 	ld	a,#>_tri_lookup_y
   2540 CE 00              7732 	adc	a,#0x00
   2542 67                 7733 	ld	h,a
   2543 46                 7734 	ld	b,(hl)
   2544 23                 7735 	inc	hl
   2545 56                 7736 	ld	d,(hl)
   2546 3Er00              7737 	ld	a,#<_tri_lookup_x
   2548 81                 7738 	add	a,c
   2549 6F                 7739 	ld	l,a
   254A 3Es01              7740 	ld	a,#>_tri_lookup_x
   254C CE 00              7741 	adc	a,#0x00
   254E 67                 7742 	ld	h,a
   254F 4E                 7743 	ld	c,(hl)
   2550 DD 66 F8           7744 	ld	h,-8 (ix)
   2553 DD 6E F9           7745 	ld	l,-7 (ix)
   2556 E5                 7746 	push	hl
   2557 58                 7747 	ld	e,b
   2558 D5                 7748 	push	de
   2559 79                 7749 	ld	a,c
   255A F5                 7750 	push	af
   255B 33                 7751 	inc	sp
   255C CDr9Es23           7752 	call	_drawtritile
   255F F1                 7753 	pop	af
   2560 F1                 7754 	pop	af
   2561 33                 7755 	inc	sp
                           7756 ;demo.c:1044: x+=16;
   2562 DD 7E FE           7757 	ld	a,-2 (ix)
   2565 C6 10              7758 	add	a,#0x10
   2567 DD 77 FE           7759 	ld	-2 (ix),a
   256A DD 7E FF           7760 	ld	a,-1 (ix)
   256D CE 00              7761 	adc	a,#0x00
   256F DD 77 FF           7762 	ld	-1 (ix),a
                           7763 ;demo.c:1045: if (x >= 256) {x = 0; y+=16;}
   2572 DD 7E FE           7764 	ld	a,-2 (ix)
   2575 D6 00              7765 	sub	a,#0x00
   2577 DD 7E FF           7766 	ld	a,-1 (ix)
   257A DE 01              7767 	sbc	a,#0x01
   257C FAr97s25           7768 	jp	M,00102$
   257F DD 36 FE 00        7769 	ld	-2 (ix),#0x00
   2583 DD 36 FF 00        7770 	ld	-1 (ix),#0x00
   2587 DD 7E FC           7771 	ld	a,-4 (ix)
   258A C6 10              7772 	add	a,#0x10
   258C DD 77 FC           7773 	ld	-4 (ix),a
   258F DD 7E FD           7774 	ld	a,-3 (ix)
   2592 CE 00              7775 	adc	a,#0x00
   2594 DD 77 FD           7776 	ld	-3 (ix),a
   2597                    7777 00102$:
                           7778 ;demo.c:1046: i++;
   2597 DD 34 FA           7779 	inc	-6 (ix)
   259A 20 03              7780 	jr	NZ,00112$
   259C DD 34 FB           7781 	inc	-5 (ix)
   259F                    7782 00112$:
   259F C3r11s25           7783 	jp	00103$
   25A2                    7784 00106$:
   25A2 DD F9              7785 	ld	sp,ix
   25A4 DD E1              7786 	pop	ix
   25A6 C9                 7787 	ret
   25A7                    7788 _drawtilescreen_full_end::
                           7789 ;demo.c:1062: void tritiles() {
                           7790 ;	---------------------------------
                           7791 ; Function tritiles
                           7792 ; ---------------------------------
   25A7                    7793 _tritiles_start::
   25A7                    7794 _tritiles:
   25A7 DD E5              7795 	push	ix
   25A9 DD 21 00 00        7796 	ld	ix,#0
   25AD DD 39              7797 	add	ix,sp
   25AF 21 FB FF           7798 	ld	hl,#-5
   25B2 39                 7799 	add	hl,sp
   25B3 F9                 7800 	ld	sp,hl
                           7801 ;demo.c:1069: if (tri_inited == 0 || tri_inited == 2) {
   25B4 AF                 7802 	xor	a,a
   25B5 FD 21r15s42        7803 	ld	iy,#_tri_inited
   25B9 FD B6 00           7804 	or	a,0 (iy)
   25BC 28 0C              7805 	jr	Z,00106$
   25BE FD 21r15s42        7806 	ld	iy,#_tri_inited
   25C2 FD 7E 00           7807 	ld	a,0 (iy)
   25C5 D6 02              7808 	sub	a,#0x02
   25C7 C2r23s27           7809 	jp	NZ,00107$
   25CA                    7810 00106$:
                           7811 ;demo.c:1071: cmd.size_x = 2;
   25CA 21r32s41           7812 	ld	hl, #_cmd + 8
   25CD 36 02              7813 	ld	(hl),#0x02
   25CF 23                 7814 	inc	hl
   25D0 36 00              7815 	ld	(hl),#0x00
                           7816 ;demo.c:1072: cmd.size_y = 212;
   25D2 21r34s41           7817 	ld	hl, #_cmd + 10
   25D5 36 D4              7818 	ld	(hl),#0xD4
   25D7 23                 7819 	inc	hl
   25D8 36 00              7820 	ld	(hl),#0x00
                           7821 ;demo.c:1073: cmd.data = 0;
                           7822 ;demo.c:1074: cmd.argument = 0x00; // from 70xY to left
   25DA 3E 00              7823 	ld	a,#0x00
   25DC 32r36s41           7824 	ld	(#_cmd + 12),a
   25DF 32r37s41           7825 	ld	(#_cmd + 13),a
                           7826 ;demo.c:1075: cmd.command = 0xd0; // vram to vram, y only
   25E2 3E D0              7827 	ld	a,#0xD0
   25E4 32r38s41           7828 	ld	(#_cmd + 14),a
                           7829 ;demo.c:1076: cmd.source_x = 255;
   25E7 21r2As41           7830 	ld	hl,#_cmd
   25EA 36 FF              7831 	ld	(hl),#0xFF
   25EC 23                 7832 	inc	hl
   25ED 36 00              7833 	ld	(hl),#0x00
                           7834 ;demo.c:1077: cmd.source_y = 0;
   25EF 01r2Cs41           7835 	ld	bc,#_cmd + 2
   25F2 69                 7836 	ld	l,c
   25F3 60                 7837 	ld	h,b
   25F4 36 00              7838 	ld	(hl),#0x00
   25F6 23                 7839 	inc	hl
   25F7 36 00              7840 	ld	(hl),#0x00
                           7841 ;demo.c:1079: for (x = 0; x < 128; x+=2) {
   25F9 DD 36 FE 00        7842 	ld	-2 (ix),#0x00
   25FD DD 36 FF 00        7843 	ld	-1 (ix),#0x00
   2601                    7844 00167$:
   2601 DD 7E FE           7845 	ld	a,-2 (ix)
   2604 D6 80              7846 	sub	a,#0x80
   2606 DD 7E FF           7847 	ld	a,-1 (ix)
   2609 DE 00              7848 	sbc	a,#0x00
   260B F2r8As26           7849 	jp	P,00170$
                           7850 ;demo.c:1080: waitVB();
   260E 76                 7851 		halt 
                           7852 ;demo.c:1081: cmd.dest_y = 256;
   260F 11r30s41           7853 	ld	de,#_cmd + 6
   2612 EB                 7854 	ex	de,hl
   2613 36 00              7855 	ld	(hl),#0x00
   2615 23                 7856 	inc	hl
   2616 36 01              7857 	ld	(hl),#0x01
                           7858 ;demo.c:1082: cmd.dest_x = 128-x;
   2618 11r2Es41           7859 	ld	de,#_cmd + 4
   261B 3E 80              7860 	ld	a,#0x80
   261D DD 96 FE           7861 	sub	a,-2 (ix)
   2620 4F                 7862 	ld	c,a
   2621 3E 00              7863 	ld	a,#0x00
   2623 DD 9E FF           7864 	sbc	a,-1 (ix)
   2626 47                 7865 	ld	b,a
   2627 EB                 7866 	ex	de,hl
   2628 71                 7867 	ld	(hl),c
   2629 23                 7868 	inc	hl
   262A 70                 7869 	ld	(hl),b
                           7870 ;demo.c:1083: vdp_copier(&cmd);
   262B 21r2As41           7871 	ld	hl,#_cmd
   262E E5                 7872 	push	hl
   262F CDr00s00           7873 	call	_vdp_copier
   2632 F1                 7874 	pop	af
                           7875 ;demo.c:1084: cmd.dest_y = 0;
   2633 21r30s41           7876 	ld	hl, #_cmd + 6
   2636 36 00              7877 	ld	(hl),#0x00
   2638 23                 7878 	inc	hl
   2639 36 00              7879 	ld	(hl),#0x00
                           7880 ;demo.c:1085: vdp_copier(&cmd);
   263B 21r2As41           7881 	ld	hl,#_cmd
   263E E5                 7882 	push	hl
   263F CDr00s00           7883 	call	_vdp_copier
   2642 F1                 7884 	pop	af
                           7885 ;demo.c:1086: cmd.dest_y = 256;
   2643 21r30s41           7886 	ld	hl, #_cmd + 6
   2646 36 00              7887 	ld	(hl),#0x00
   2648 23                 7888 	inc	hl
   2649 36 01              7889 	ld	(hl),#0x01
                           7890 ;demo.c:1087: cmd.dest_x = 128+x;
   264B 01r2Es41           7891 	ld	bc,#_cmd + 4
   264E DD 7E FE           7892 	ld	a,-2 (ix)
   2651 C6 80              7893 	add	a,#0x80
   2653 5F                 7894 	ld	e,a
   2654 DD 7E FF           7895 	ld	a,-1 (ix)
   2657 CE 00              7896 	adc	a,#0x00
   2659 57                 7897 	ld	d,a
   265A 69                 7898 	ld	l,c
   265B 60                 7899 	ld	h,b
   265C 73                 7900 	ld	(hl),e
   265D 23                 7901 	inc	hl
   265E 72                 7902 	ld	(hl),d
                           7903 ;demo.c:1088: vdp_copier(&cmd);
   265F 21r2As41           7904 	ld	hl,#_cmd
   2662 E5                 7905 	push	hl
   2663 CDr00s00           7906 	call	_vdp_copier
   2666 F1                 7907 	pop	af
                           7908 ;demo.c:1089: cmd.dest_y = 0;
   2667 21r30s41           7909 	ld	hl, #_cmd + 6
   266A 36 00              7910 	ld	(hl),#0x00
   266C 23                 7911 	inc	hl
   266D 36 00              7912 	ld	(hl),#0x00
                           7913 ;demo.c:1090: vdp_copier(&cmd);
   266F 21r2As41           7914 	ld	hl,#_cmd
   2672 E5                 7915 	push	hl
   2673 CDr00s00           7916 	call	_vdp_copier
   2676 F1                 7917 	pop	af
                           7918 ;demo.c:1079: for (x = 0; x < 128; x+=2) {
   2677 DD 7E FE           7919 	ld	a,-2 (ix)
   267A C6 02              7920 	add	a,#0x02
   267C DD 77 FE           7921 	ld	-2 (ix),a
   267F DD 7E FF           7922 	ld	a,-1 (ix)
   2682 CE 00              7923 	adc	a,#0x00
   2684 DD 77 FF           7924 	ld	-1 (ix),a
   2687 C3r01s26           7925 	jp	00167$
   268A                    7926 00170$:
                           7927 ;demo.c:1093: scratch_clear();
   268A CDr24s08           7928 	call	_scratch_clear
                           7929 ;demo.c:1094: vdp_load_palette(scratch);
   268D 21rC6s3F           7930 	ld	hl,#_scratch
   2690 E5                 7931 	push	hl
   2691 CDr00s00           7932 	call	_vdp_load_palette
   2694 F1                 7933 	pop	af
                           7934 ;demo.c:1096: tri_inited++;
   2695 FD 21r15s42        7935 	ld	iy,#_tri_inited
   2699 FD 34 00           7936 	inc	0 (iy)
                           7937 ;demo.c:1097: vdp_register(9,2); // 50hz,192
   269C 21 09 02           7938 	ld	hl,#0x0209
   269F E5                 7939 	push	hl
   26A0 CDr00s00           7940 	call	_vdp_register
   26A3 F1                 7941 	pop	af
                           7942 ;demo.c:1101: vdp_register(2, 0x1f);
   26A4 21 02 1F           7943 	ld	hl,#0x1F02
   26A7 E5                 7944 	push	hl
   26A8 CDr00s00           7945 	call	_vdp_register
   26AB F1                 7946 	pop	af
                           7947 ;demo.c:1102: tick = 0;
   26AC 21r28s41           7948 	ld	hl,#_tick + 0
   26AF 36 00              7949 	ld	(hl), #0x00
   26B1 21r29s41           7950 	ld	hl,#_tick + 1
   26B4 36 00              7951 	ld	(hl), #0x00
                           7952 ;demo.c:1105: if (tri_inited == 0) vdp_load_palette(boxes_palette);
   26B6 AF                 7953 	xor	a,a
   26B7 21r15s42           7954 	ld	hl,#_tri_inited + 0
   26BA B6                 7955 	or	a,(hl)
   26BB 20 0A              7956 	jr	NZ,00104$
   26BD 21rE6s40           7957 	ld	hl,#_boxes_palette
   26C0 E5                 7958 	push	hl
   26C1 CDr00s00           7959 	call	_vdp_load_palette
   26C4 F1                 7960 	pop	af
   26C5 18 46              7961 	jr	00105$
   26C7                    7962 00104$:
                           7963 ;demo.c:1106: else if (tri_inited == 2) { 
   26C7 3Ar15s42           7964 	ld	a,(#_tri_inited+0)
   26CA D6 02              7965 	sub	a,#0x02
   26CC 20 3F              7966 	jr	NZ,00105$
                           7967 ;demo.c:1107: vdp_load_palette(boxes_palette); 
   26CE 21rE6s40           7968 	ld	hl,#_boxes_palette
   26D1 E5                 7969 	push	hl
   26D2 CDr00s00           7970 	call	_vdp_load_palette
   26D5 F1                 7971 	pop	af
                           7972 ;demo.c:1108: triframes = 0; 
   26D6 21r28s42           7973 	ld	hl,#_triframes + 0
   26D9 36 00              7974 	ld	(hl), #0x00
   26DB 21r29s42           7975 	ld	hl,#_triframes + 1
   26DE 36 00              7976 	ld	(hl), #0x00
                           7977 ;demo.c:1110: tripal[0] = 4;
   26E0 21r1Ds42           7978 	ld	hl,#_tripal
   26E3 36 04              7979 	ld	(hl),#0x04
                           7980 ;demo.c:1111: tripal[1] = 4;
   26E5 3E 04              7981 	ld	a,#0x04
   26E7 32r1Es42           7982 	ld	(#_tripal + 1),a
                           7983 ;demo.c:1112: tripal[2] = 3;
   26EA 3E 03              7984 	ld	a,#0x03
   26EC 32r1Fs42           7985 	ld	(#_tripal + 2),a
                           7986 ;demo.c:1114: tripal[3] = 2;
   26EF 3E 02              7987 	ld	a,#0x02
   26F1 32r20s42           7988 	ld	(#_tripal + 3),a
                           7989 ;demo.c:1115: tripal[4] = 3;
   26F4 3E 03              7990 	ld	a,#0x03
   26F6 32r21s42           7991 	ld	(#_tripal + 4),a
                           7992 ;demo.c:1116: tripal[5] = 4;
   26F9 3E 04              7993 	ld	a,#0x04
   26FB 32r22s42           7994 	ld	(#_tripal + 5),a
                           7995 ;demo.c:1118: tripal[6] = 1;
   26FE 3E 01              7996 	ld	a,#0x01
   2700 32r23s42           7997 	ld	(#_tripal + 6),a
                           7998 ;demo.c:1119: tripal[7] = 3;
   2703 3E 03              7999 	ld	a,#0x03
   2705 32r24s42           8000 	ld	(#_tripal + 7),a
                           8001 ;demo.c:1120: tripal[8] = 1;
   2708 3E 01              8002 	ld	a,#0x01
   270A 32r25s42           8003 	ld	(#_tripal + 8),a
   270D                    8004 00105$:
                           8005 ;demo.c:1123: msx2_palette(15,0,0,0);
   270D 21 00 00           8006 	ld	hl,#0x0000
   2710 E5                 8007 	push	hl
   2711 2E 0F              8008 	ld	l, #0x0F
   2713 E5                 8009 	push	hl
   2714 CDr00s00           8010 	call	_msx2_palette
   2717 F1                 8011 	pop	af
   2718 F1                 8012 	pop	af
                           8013 ;demo.c:1124: triframes = 1350;
   2719 21r28s42           8014 	ld	hl,#_triframes + 0
   271C 36 46              8015 	ld	(hl), #0x46
   271E 21r29s42           8016 	ld	hl,#_triframes + 1
   2721 36 05              8017 	ld	(hl), #0x05
   2723                    8018 00107$:
                           8019 ;demo.c:1128: if (tri_inited == 1) triframes++;
   2723 3Ar15s42           8020 	ld	a,(#_tri_inited+0)
   2726 D6 01              8021 	sub	a,#0x01
   2728 20 10              8022 	jr	NZ,00110$
   272A FD 21r28s42        8023 	ld	iy,#_triframes
   272E FD 34 00           8024 	inc	0 (iy)
   2731 20 07              8025 	jr	NZ,00225$
   2733 FD 21r28s42        8026 	ld	iy,#_triframes
   2737 FD 34 01           8027 	inc	1 (iy)
   273A                    8028 00225$:
   273A                    8029 00110$:
                           8030 ;demo.c:1130: if (triframes == 150) { tilei = 0; tilex = 0; tiley = 0; }
   273A 3Ar28s42           8031 	ld	a,(#_triframes+0)
   273D D6 96              8032 	sub	a,#0x96
   273F 20 06              8033 	jr	NZ,00226$
   2741 3Ar29s42           8034 	ld	a,(#_triframes+1)
   2744 B7                 8035 	or	a,a
   2745 28 02              8036 	jr	Z,00227$
   2747                    8037 00226$:
   2747 18 1E              8038 	jr	00112$
   2749                    8039 00227$:
   2749 21r16s42           8040 	ld	hl,#_tilei + 0
   274C 36 00              8041 	ld	(hl), #0x00
   274E 21r17s42           8042 	ld	hl,#_tilei + 1
   2751 36 00              8043 	ld	(hl), #0x00
   2753 21r18s42           8044 	ld	hl,#_tilex + 0
   2756 36 00              8045 	ld	(hl), #0x00
   2758 21r19s42           8046 	ld	hl,#_tilex + 1
   275B 36 00              8047 	ld	(hl), #0x00
   275D 21r1As42           8048 	ld	hl,#_tiley + 0
   2760 36 00              8049 	ld	(hl), #0x00
   2762 21r1Bs42           8050 	ld	hl,#_tiley + 1
   2765 36 00              8051 	ld	(hl), #0x00
   2767                    8052 00112$:
                           8053 ;demo.c:1131: if (triframes >= 150 && triframes < 300) {
   2767 3Ar28s42           8054 	ld	a,(#_triframes+0)
   276A D6 96              8055 	sub	a,#0x96
   276C 3Ar29s42           8056 	ld	a,(#_triframes+1)
   276F DE 00              8057 	sbc	a,#0x00
   2771 FAr89s27           8058 	jp	M,00114$
   2774 3Ar28s42           8059 	ld	a,(#_triframes+0)
   2777 D6 2C              8060 	sub	a,#0x2C
   2779 3Ar29s42           8061 	ld	a,(#_triframes+1)
   277C DE 01              8062 	sbc	a,#0x01
   277E F2r89s27           8063 	jp	P,00114$
                           8064 ;demo.c:1132: drawtilescreen(tri_up);
   2781 21rECs01           8065 	ld	hl,#_tri_up
   2784 E5                 8066 	push	hl
   2785 CDr02s24           8067 	call	_drawtilescreen
   2788 F1                 8068 	pop	af
   2789                    8069 00114$:
                           8070 ;demo.c:1135: if (triframes == 300) { tilei = 0; tilex = 0; tiley = 0; }
   2789 3Ar28s42           8071 	ld	a,(#_triframes+0)
   278C D6 2C              8072 	sub	a,#0x2C
   278E 20 07              8073 	jr	NZ,00228$
   2790 3Ar29s42           8074 	ld	a,(#_triframes+1)
   2793 D6 01              8075 	sub	a,#0x01
   2795 28 02              8076 	jr	Z,00229$
   2797                    8077 00228$:
   2797 18 1E              8078 	jr	00117$
   2799                    8079 00229$:
   2799 21r16s42           8080 	ld	hl,#_tilei + 0
   279C 36 00              8081 	ld	(hl), #0x00
   279E 21r17s42           8082 	ld	hl,#_tilei + 1
   27A1 36 00              8083 	ld	(hl), #0x00
   27A3 21r18s42           8084 	ld	hl,#_tilex + 0
   27A6 36 00              8085 	ld	(hl), #0x00
   27A8 21r19s42           8086 	ld	hl,#_tilex + 1
   27AB 36 00              8087 	ld	(hl), #0x00
   27AD 21r1As42           8088 	ld	hl,#_tiley + 0
   27B0 36 00              8089 	ld	(hl), #0x00
   27B2 21r1Bs42           8090 	ld	hl,#_tiley + 1
   27B5 36 00              8091 	ld	(hl), #0x00
   27B7                    8092 00117$:
                           8093 ;demo.c:1136: if (triframes >= 300 && triframes < 450) {
   27B7 3Ar28s42           8094 	ld	a,(#_triframes+0)
   27BA D6 2C              8095 	sub	a,#0x2C
   27BC 3Ar29s42           8096 	ld	a,(#_triframes+1)
   27BF DE 01              8097 	sbc	a,#0x01
   27C1 FArD9s27           8098 	jp	M,00119$
   27C4 3Ar28s42           8099 	ld	a,(#_triframes+0)
   27C7 D6 C2              8100 	sub	a,#0xC2
   27C9 3Ar29s42           8101 	ld	a,(#_triframes+1)
   27CC DE 01              8102 	sbc	a,#0x01
   27CE F2rD9s27           8103 	jp	P,00119$
                           8104 ;demo.c:1137: drawtilescreen(tri_dia);
   27D1 21rACs02           8105 	ld	hl,#_tri_dia
   27D4 E5                 8106 	push	hl
   27D5 CDr02s24           8107 	call	_drawtilescreen
   27D8 F1                 8108 	pop	af
   27D9                    8109 00119$:
                           8110 ;demo.c:1140: if (triframes == 450) { tilei = 0; tilex = 0; tiley = 0; }
   27D9 3Ar28s42           8111 	ld	a,(#_triframes+0)
   27DC D6 C2              8112 	sub	a,#0xC2
   27DE 20 07              8113 	jr	NZ,00230$
   27E0 3Ar29s42           8114 	ld	a,(#_triframes+1)
   27E3 D6 01              8115 	sub	a,#0x01
   27E5 28 02              8116 	jr	Z,00231$
   27E7                    8117 00230$:
   27E7 18 1E              8118 	jr	00122$
   27E9                    8119 00231$:
   27E9 21r16s42           8120 	ld	hl,#_tilei + 0
   27EC 36 00              8121 	ld	(hl), #0x00
   27EE 21r17s42           8122 	ld	hl,#_tilei + 1
   27F1 36 00              8123 	ld	(hl), #0x00
   27F3 21r18s42           8124 	ld	hl,#_tilex + 0
   27F6 36 00              8125 	ld	(hl), #0x00
   27F8 21r19s42           8126 	ld	hl,#_tilex + 1
   27FB 36 00              8127 	ld	(hl), #0x00
   27FD 21r1As42           8128 	ld	hl,#_tiley + 0
   2800 36 00              8129 	ld	(hl), #0x00
   2802 21r1Bs42           8130 	ld	hl,#_tiley + 1
   2805 36 00              8131 	ld	(hl), #0x00
   2807                    8132 00122$:
                           8133 ;demo.c:1141: if (triframes >= 450 && triframes < 600) {
   2807 3Ar28s42           8134 	ld	a,(#_triframes+0)
   280A D6 C2              8135 	sub	a,#0xC2
   280C 3Ar29s42           8136 	ld	a,(#_triframes+1)
   280F DE 01              8137 	sbc	a,#0x01
   2811 FAr29s28           8138 	jp	M,00124$
   2814 3Ar28s42           8139 	ld	a,(#_triframes+0)
   2817 D6 58              8140 	sub	a,#0x58
   2819 3Ar29s42           8141 	ld	a,(#_triframes+1)
   281C DE 02              8142 	sbc	a,#0x02
   281E F2r29s28           8143 	jp	P,00124$
                           8144 ;demo.c:1142: drawtilescreen(tri_side1);
   2821 21r6Cs03           8145 	ld	hl,#_tri_side1
   2824 E5                 8146 	push	hl
   2825 CDr02s24           8147 	call	_drawtilescreen
   2828 F1                 8148 	pop	af
   2829                    8149 00124$:
                           8150 ;demo.c:1145: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2829 3Ar28s42           8151 	ld	a,(#_triframes+0)
   282C D6 58              8152 	sub	a,#0x58
   282E 20 07              8153 	jr	NZ,00232$
   2830 3Ar29s42           8154 	ld	a,(#_triframes+1)
   2833 D6 02              8155 	sub	a,#0x02
   2835 28 02              8156 	jr	Z,00233$
   2837                    8157 00232$:
   2837 18 1E              8158 	jr	00127$
   2839                    8159 00233$:
   2839 21r16s42           8160 	ld	hl,#_tilei + 0
   283C 36 00              8161 	ld	(hl), #0x00
   283E 21r17s42           8162 	ld	hl,#_tilei + 1
   2841 36 00              8163 	ld	(hl), #0x00
   2843 21r18s42           8164 	ld	hl,#_tilex + 0
   2846 36 00              8165 	ld	(hl), #0x00
   2848 21r19s42           8166 	ld	hl,#_tilex + 1
   284B 36 00              8167 	ld	(hl), #0x00
   284D 21r1As42           8168 	ld	hl,#_tiley + 0
   2850 36 00              8169 	ld	(hl), #0x00
   2852 21r1Bs42           8170 	ld	hl,#_tiley + 1
   2855 36 00              8171 	ld	(hl), #0x00
   2857                    8172 00127$:
                           8173 ;demo.c:1146: if (triframes >= 600 && triframes < 750) {
   2857 3Ar28s42           8174 	ld	a,(#_triframes+0)
   285A D6 58              8175 	sub	a,#0x58
   285C 3Ar29s42           8176 	ld	a,(#_triframes+1)
   285F DE 02              8177 	sbc	a,#0x02
   2861 FAr79s28           8178 	jp	M,00129$
   2864 3Ar28s42           8179 	ld	a,(#_triframes+0)
   2867 D6 EE              8180 	sub	a,#0xEE
   2869 3Ar29s42           8181 	ld	a,(#_triframes+1)
   286C DE 02              8182 	sbc	a,#0x02
   286E F2r79s28           8183 	jp	P,00129$
                           8184 ;demo.c:1147: drawtilescreen(tri_side2);
   2871 21r2Cs04           8185 	ld	hl,#_tri_side2
   2874 E5                 8186 	push	hl
   2875 CDr02s24           8187 	call	_drawtilescreen
   2878 F1                 8188 	pop	af
   2879                    8189 00129$:
                           8190 ;demo.c:1150: if (triframes == 750) { tilei = 0; tilex = 0; tiley = 0; }
   2879 3Ar28s42           8191 	ld	a,(#_triframes+0)
   287C D6 EE              8192 	sub	a,#0xEE
   287E 20 07              8193 	jr	NZ,00234$
   2880 3Ar29s42           8194 	ld	a,(#_triframes+1)
   2883 D6 02              8195 	sub	a,#0x02
   2885 28 02              8196 	jr	Z,00235$
   2887                    8197 00234$:
   2887 18 1E              8198 	jr	00132$
   2889                    8199 00235$:
   2889 21r16s42           8200 	ld	hl,#_tilei + 0
   288C 36 00              8201 	ld	(hl), #0x00
   288E 21r17s42           8202 	ld	hl,#_tilei + 1
   2891 36 00              8203 	ld	(hl), #0x00
   2893 21r18s42           8204 	ld	hl,#_tilex + 0
   2896 36 00              8205 	ld	(hl), #0x00
   2898 21r19s42           8206 	ld	hl,#_tilex + 1
   289B 36 00              8207 	ld	(hl), #0x00
   289D 21r1As42           8208 	ld	hl,#_tiley + 0
   28A0 36 00              8209 	ld	(hl), #0x00
   28A2 21r1Bs42           8210 	ld	hl,#_tiley + 1
   28A5 36 00              8211 	ld	(hl), #0x00
   28A7                    8212 00132$:
                           8213 ;demo.c:1151: if (triframes >= 750 && triframes < 900) {
   28A7 3Ar28s42           8214 	ld	a,(#_triframes+0)
   28AA D6 EE              8215 	sub	a,#0xEE
   28AC 3Ar29s42           8216 	ld	a,(#_triframes+1)
   28AF DE 02              8217 	sbc	a,#0x02
   28B1 FArC9s28           8218 	jp	M,00134$
   28B4 3Ar28s42           8219 	ld	a,(#_triframes+0)
   28B7 D6 84              8220 	sub	a,#0x84
   28B9 3Ar29s42           8221 	ld	a,(#_triframes+1)
   28BC DE 03              8222 	sbc	a,#0x03
   28BE F2rC9s28           8223 	jp	P,00134$
                           8224 ;demo.c:1152: drawtilescreen(tri_inva1);
   28C1 21rECs04           8225 	ld	hl,#_tri_inva1
   28C4 E5                 8226 	push	hl
   28C5 CDr02s24           8227 	call	_drawtilescreen
   28C8 F1                 8228 	pop	af
   28C9                    8229 00134$:
                           8230 ;demo.c:1155: if (triframes == 900) { tilei = 0; tilex = 0; tiley = 0; }
   28C9 3Ar28s42           8231 	ld	a,(#_triframes+0)
   28CC D6 84              8232 	sub	a,#0x84
   28CE 20 07              8233 	jr	NZ,00236$
   28D0 3Ar29s42           8234 	ld	a,(#_triframes+1)
   28D3 D6 03              8235 	sub	a,#0x03
   28D5 28 02              8236 	jr	Z,00237$
   28D7                    8237 00236$:
   28D7 18 1E              8238 	jr	00137$
   28D9                    8239 00237$:
   28D9 21r16s42           8240 	ld	hl,#_tilei + 0
   28DC 36 00              8241 	ld	(hl), #0x00
   28DE 21r17s42           8242 	ld	hl,#_tilei + 1
   28E1 36 00              8243 	ld	(hl), #0x00
   28E3 21r18s42           8244 	ld	hl,#_tilex + 0
   28E6 36 00              8245 	ld	(hl), #0x00
   28E8 21r19s42           8246 	ld	hl,#_tilex + 1
   28EB 36 00              8247 	ld	(hl), #0x00
   28ED 21r1As42           8248 	ld	hl,#_tiley + 0
   28F0 36 00              8249 	ld	(hl), #0x00
   28F2 21r1Bs42           8250 	ld	hl,#_tiley + 1
   28F5 36 00              8251 	ld	(hl), #0x00
   28F7                    8252 00137$:
                           8253 ;demo.c:1156: if (triframes >= 900 && triframes < 1050) {
   28F7 3Ar28s42           8254 	ld	a,(#_triframes+0)
   28FA D6 84              8255 	sub	a,#0x84
   28FC 3Ar29s42           8256 	ld	a,(#_triframes+1)
   28FF DE 03              8257 	sbc	a,#0x03
   2901 FAr19s29           8258 	jp	M,00139$
   2904 3Ar28s42           8259 	ld	a,(#_triframes+0)
   2907 D6 1A              8260 	sub	a,#0x1A
   2909 3Ar29s42           8261 	ld	a,(#_triframes+1)
   290C DE 04              8262 	sbc	a,#0x04
   290E F2r19s29           8263 	jp	P,00139$
                           8264 ;demo.c:1157: drawtilescreen(tri_inva2);
   2911 21rACs05           8265 	ld	hl,#_tri_inva2
   2914 E5                 8266 	push	hl
   2915 CDr02s24           8267 	call	_drawtilescreen
   2918 F1                 8268 	pop	af
   2919                    8269 00139$:
                           8270 ;demo.c:1160: if (triframes == 1050) { tilei = 0; tilex = 0; tiley = 0; }
   2919 3Ar28s42           8271 	ld	a,(#_triframes+0)
   291C D6 1A              8272 	sub	a,#0x1A
   291E 20 07              8273 	jr	NZ,00238$
   2920 3Ar29s42           8274 	ld	a,(#_triframes+1)
   2923 D6 04              8275 	sub	a,#0x04
   2925 28 02              8276 	jr	Z,00239$
   2927                    8277 00238$:
   2927 18 1E              8278 	jr	00142$
   2929                    8279 00239$:
   2929 21r16s42           8280 	ld	hl,#_tilei + 0
   292C 36 00              8281 	ld	(hl), #0x00
   292E 21r17s42           8282 	ld	hl,#_tilei + 1
   2931 36 00              8283 	ld	(hl), #0x00
   2933 21r18s42           8284 	ld	hl,#_tilex + 0
   2936 36 00              8285 	ld	(hl), #0x00
   2938 21r19s42           8286 	ld	hl,#_tilex + 1
   293B 36 00              8287 	ld	(hl), #0x00
   293D 21r1As42           8288 	ld	hl,#_tiley + 0
   2940 36 00              8289 	ld	(hl), #0x00
   2942 21r1Bs42           8290 	ld	hl,#_tiley + 1
   2945 36 00              8291 	ld	(hl), #0x00
   2947                    8292 00142$:
                           8293 ;demo.c:1161: if (triframes >= 1050 && triframes < 1200) {
   2947 3Ar28s42           8294 	ld	a,(#_triframes+0)
   294A D6 1A              8295 	sub	a,#0x1A
   294C 3Ar29s42           8296 	ld	a,(#_triframes+1)
   294F DE 04              8297 	sbc	a,#0x04
   2951 FAr69s29           8298 	jp	M,00144$
   2954 3Ar28s42           8299 	ld	a,(#_triframes+0)
   2957 D6 B0              8300 	sub	a,#0xB0
   2959 3Ar29s42           8301 	ld	a,(#_triframes+1)
   295C DE 04              8302 	sbc	a,#0x04
   295E F2r69s29           8303 	jp	P,00144$
                           8304 ;demo.c:1162: drawtilescreen(tri_inva3);
   2961 21r6Cs06           8305 	ld	hl,#_tri_inva3
   2964 E5                 8306 	push	hl
   2965 CDr02s24           8307 	call	_drawtilescreen
   2968 F1                 8308 	pop	af
   2969                    8309 00144$:
                           8310 ;demo.c:1165: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   2969 3Ar28s42           8311 	ld	a,(#_triframes+0)
   296C D6 B0              8312 	sub	a,#0xB0
   296E 20 07              8313 	jr	NZ,00240$
   2970 3Ar29s42           8314 	ld	a,(#_triframes+1)
   2973 D6 04              8315 	sub	a,#0x04
   2975 28 02              8316 	jr	Z,00241$
   2977                    8317 00240$:
   2977 18 1E              8318 	jr	00147$
   2979                    8319 00241$:
   2979 21r16s42           8320 	ld	hl,#_tilei + 0
   297C 36 00              8321 	ld	(hl), #0x00
   297E 21r17s42           8322 	ld	hl,#_tilei + 1
   2981 36 00              8323 	ld	(hl), #0x00
   2983 21r18s42           8324 	ld	hl,#_tilex + 0
   2986 36 00              8325 	ld	(hl), #0x00
   2988 21r19s42           8326 	ld	hl,#_tilex + 1
   298B 36 00              8327 	ld	(hl), #0x00
   298D 21r1As42           8328 	ld	hl,#_tiley + 0
   2990 36 00              8329 	ld	(hl), #0x00
   2992 21r1Bs42           8330 	ld	hl,#_tiley + 1
   2995 36 00              8331 	ld	(hl), #0x00
   2997                    8332 00147$:
                           8333 ;demo.c:1166: if (triframes >= 1200 && triframes < 1350) {
   2997 3Ar28s42           8334 	ld	a,(#_triframes+0)
   299A D6 B0              8335 	sub	a,#0xB0
   299C 3Ar29s42           8336 	ld	a,(#_triframes+1)
   299F DE 04              8337 	sbc	a,#0x04
   29A1 FArB9s29           8338 	jp	M,00149$
   29A4 3Ar28s42           8339 	ld	a,(#_triframes+0)
   29A7 D6 46              8340 	sub	a,#0x46
   29A9 3Ar29s42           8341 	ld	a,(#_triframes+1)
   29AC DE 05              8342 	sbc	a,#0x05
   29AE F2rB9s29           8343 	jp	P,00149$
                           8344 ;demo.c:1167: drawtilescreen(tri_inva4);
   29B1 21r2Cs07           8345 	ld	hl,#_tri_inva4
   29B4 E5                 8346 	push	hl
   29B5 CDr02s24           8347 	call	_drawtilescreen
   29B8 F1                 8348 	pop	af
   29B9                    8349 00149$:
                           8350 ;demo.c:1170: if (triframes == 1350) { tilei = 0; tilex = 0; tiley = 0; }
   29B9 3Ar28s42           8351 	ld	a,(#_triframes+0)
   29BC D6 46              8352 	sub	a,#0x46
   29BE 20 07              8353 	jr	NZ,00242$
   29C0 3Ar29s42           8354 	ld	a,(#_triframes+1)
   29C3 D6 05              8355 	sub	a,#0x05
   29C5 28 02              8356 	jr	Z,00243$
   29C7                    8357 00242$:
   29C7 18 1E              8358 	jr	00152$
   29C9                    8359 00243$:
   29C9 21r16s42           8360 	ld	hl,#_tilei + 0
   29CC 36 00              8361 	ld	(hl), #0x00
   29CE 21r17s42           8362 	ld	hl,#_tilei + 1
   29D1 36 00              8363 	ld	(hl), #0x00
   29D3 21r18s42           8364 	ld	hl,#_tilex + 0
   29D6 36 00              8365 	ld	(hl), #0x00
   29D8 21r19s42           8366 	ld	hl,#_tilex + 1
   29DB 36 00              8367 	ld	(hl), #0x00
   29DD 21r1As42           8368 	ld	hl,#_tiley + 0
   29E0 36 00              8369 	ld	(hl), #0x00
   29E2 21r1Bs42           8370 	ld	hl,#_tiley + 1
   29E5 36 00              8371 	ld	(hl), #0x00
   29E7                    8372 00152$:
                           8373 ;demo.c:1171: if (triframes >= 1350 && triframes < 1500) {
   29E7 3Ar28s42           8374 	ld	a,(#_triframes+0)
   29EA D6 46              8375 	sub	a,#0x46
   29EC 3Ar29s42           8376 	ld	a,(#_triframes+1)
   29EF DE 05              8377 	sbc	a,#0x05
   29F1 FAr09s2A           8378 	jp	M,00154$
   29F4 3Ar28s42           8379 	ld	a,(#_triframes+0)
   29F7 D6 DC              8380 	sub	a,#0xDC
   29F9 3Ar29s42           8381 	ld	a,(#_triframes+1)
   29FC DE 05              8382 	sbc	a,#0x05
   29FE F2r09s2A           8383 	jp	P,00154$
                           8384 ;demo.c:1172: drawtilescreen(tri_center);
   2A01 21r2Cs01           8385 	ld	hl,#_tri_center
   2A04 E5                 8386 	push	hl
   2A05 CDr02s24           8387 	call	_drawtilescreen
   2A08 F1                 8388 	pop	af
   2A09                    8389 00154$:
                           8390 ;demo.c:1175: if (triframes > 1500) triframes = 149;
   2A09 3E DC              8391 	ld	a,#0xDC
   2A0B FD 21r28s42        8392 	ld	iy,#_triframes
   2A0F FD 96 00           8393 	sub	a,0 (iy)
   2A12 3E 05              8394 	ld	a,#0x05
   2A14 FD 21r28s42        8395 	ld	iy,#_triframes
   2A18 FD 9E 01           8396 	sbc	a,1 (iy)
   2A1B F2r28s2A           8397 	jp	P,00157$
   2A1E 21r28s42           8398 	ld	hl,#_triframes + 0
   2A21 36 95              8399 	ld	(hl), #0x95
   2A23 21r29s42           8400 	ld	hl,#_triframes + 1
   2A26 36 00              8401 	ld	(hl), #0x00
   2A28                    8402 00157$:
                           8403 ;demo.c:1178: msx2_palette(2,0,0,0);
   2A28 21 00 00           8404 	ld	hl,#0x0000
   2A2B E5                 8405 	push	hl
   2A2C 2E 02              8406 	ld	l, #0x02
   2A2E E5                 8407 	push	hl
   2A2F CDr00s00           8408 	call	_msx2_palette
   2A32 F1                 8409 	pop	af
   2A33 F1                 8410 	pop	af
                           8411 ;demo.c:1179: msx2_palette(11,0,0,0);
   2A34 21 00 00           8412 	ld	hl,#0x0000
   2A37 E5                 8413 	push	hl
   2A38 2E 0B              8414 	ld	l, #0x0B
   2A3A E5                 8415 	push	hl
   2A3B CDr00s00           8416 	call	_msx2_palette
   2A3E F1                 8417 	pop	af
   2A3F F1                 8418 	pop	af
                           8419 ;demo.c:1181: if (PLY_PSGReg10 > 4) {
   2A40 3E 04              8420 	ld	a,#0x04
   2A42 FD 21r00s00        8421 	ld	iy,#_PLY_PSGReg10
   2A46 FD 96 00           8422 	sub	a,0 (iy)
   2A49 D2rDEs2A           8423 	jp	NC,00159$
                           8424 ;demo.c:1182: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2A4C 21r00s00           8425 	ld	hl,#_PLY_PSGReg10 + 0
   2A4F 4E                 8426 	ld	c,(hl)
   2A50 06 00              8427 	ld	b,#0x00
   2A52 21r26s42           8428 	ld	hl,#_tripaltick + 0
   2A55 5E                 8429 	ld	e,(hl)
   2A56 16 00              8430 	ld	d,#0x00
   2A58 79                 8431 	ld	a,c
   2A59 83                 8432 	add	a,e
   2A5A 4F                 8433 	ld	c,a
   2A5B 78                 8434 	ld	a,b
   2A5C 8A                 8435 	adc	a,d
   2A5D 06 00              8436 	ld	b,#0x00
   2A5F 21r2Cs00           8437 	ld	hl,#_sintabx
   2A62 09                 8438 	add	hl,bc
   2A63 7E                 8439 	ld	a,(hl)
   2A64 4F                 8440 	ld	c,a
   2A65 06 00              8441 	ld	b,#0x00
   2A67 3E C0              8442 	ld	a,#0xC0
   2A69 91                 8443 	sub	a,c
   2A6A 4F                 8444 	ld	c,a
   2A6B 3E 00              8445 	ld	a,#0x00
   2A6D 98                 8446 	sbc	a,b
   2A6E 47                 8447 	ld	b,a
   2A6F CB 28              8448 	sra	b
   2A71 CB 19              8449 	rr	c
   2A73 CB 28              8450 	sra	b
   2A75 CB 19              8451 	rr	c
   2A77 CB 28              8452 	sra	b
   2A79 CB 19              8453 	rr	c
   2A7B 41                 8454 	ld	b,c
   2A7C 0E 17              8455 	ld	c,#0x17
   2A7E C5                 8456 	push	bc
   2A7F CDr00s00           8457 	call	_vdp_register
   2A82 F1                 8458 	pop	af
                           8459 ;demo.c:1184: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   2A83 21r1Fs42           8460 	ld	hl,#_tripal + 2
   2A86 4E                 8461 	ld	c,(hl)
   2A87 11r1Es42           8462 	ld	de,#_tripal + 1
   2A8A 1A                 8463 	ld	a,(de)
   2A8B 47                 8464 	ld	b,a
   2A8C 21r1Ds42           8465 	ld	hl,#_tripal
   2A8F 5E                 8466 	ld	e,(hl)
   2A90 21r00s00           8467 	ld	hl,#_PLY_PSGReg10 + 0
   2A93 56                 8468 	ld	d,(hl)
   2A94 7B                 8469 	ld	a,e
   2A95 82                 8470 	add	a,d
   2A96 5F                 8471 	ld	e,a
   2A97 79                 8472 	ld	a,c
   2A98 F5                 8473 	push	af
   2A99 33                 8474 	inc	sp
   2A9A C5                 8475 	push	bc
   2A9B 33                 8476 	inc	sp
   2A9C 53                 8477 	ld	d,e
   2A9D 1E 03              8478 	ld	e,#0x03
   2A9F D5                 8479 	push	de
   2AA0 CDr00s00           8480 	call	_msx2_palette
   2AA3 F1                 8481 	pop	af
   2AA4 F1                 8482 	pop	af
                           8483 ;demo.c:1185: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2AA5 21r22s42           8484 	ld	hl,#_tripal + 5
   2AA8 4E                 8485 	ld	c,(hl)
   2AA9 11r21s42           8486 	ld	de,#_tripal + 4
   2AAC 1A                 8487 	ld	a,(de)
   2AAD 47                 8488 	ld	b,a
   2AAE 21r20s42           8489 	ld	hl,#_tripal + 3
   2AB1 5E                 8490 	ld	e,(hl)
   2AB2 79                 8491 	ld	a,c
   2AB3 F5                 8492 	push	af
   2AB4 33                 8493 	inc	sp
   2AB5 C5                 8494 	push	bc
   2AB6 33                 8495 	inc	sp
   2AB7 53                 8496 	ld	d,e
   2AB8 1E 0E              8497 	ld	e,#0x0E
   2ABA D5                 8498 	push	de
   2ABB CDr00s00           8499 	call	_msx2_palette
   2ABE F1                 8500 	pop	af
   2ABF F1                 8501 	pop	af
                           8502 ;demo.c:1186: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2AC0 21r25s42           8503 	ld	hl,#_tripal + 8
   2AC3 4E                 8504 	ld	c,(hl)
   2AC4 11r24s42           8505 	ld	de,#_tripal + 7
   2AC7 1A                 8506 	ld	a,(de)
   2AC8 47                 8507 	ld	b,a
   2AC9 21r23s42           8508 	ld	hl,#_tripal + 6
   2ACC 5E                 8509 	ld	e,(hl)
   2ACD 79                 8510 	ld	a,c
   2ACE F5                 8511 	push	af
   2ACF 33                 8512 	inc	sp
   2AD0 C5                 8513 	push	bc
   2AD1 33                 8514 	inc	sp
   2AD2 53                 8515 	ld	d,e
   2AD3 1E 06              8516 	ld	e,#0x06
   2AD5 D5                 8517 	push	de
   2AD6 CDr00s00           8518 	call	_msx2_palette
   2AD9 F1                 8519 	pop	af
   2ADA F1                 8520 	pop	af
   2ADB C3r37s2B           8521 	jp	00160$
   2ADE                    8522 00159$:
                           8523 ;demo.c:1189: vdp_register(VDP_VOFFSET,0);
   2ADE 21 17 00           8524 	ld	hl,#0x0017
   2AE1 E5                 8525 	push	hl
   2AE2 CDr00s00           8526 	call	_vdp_register
   2AE5 F1                 8527 	pop	af
                           8528 ;demo.c:1191: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2AE6 21r1Fs42           8529 	ld	hl,#_tripal + 2
   2AE9 4E                 8530 	ld	c,(hl)
   2AEA 11r1Es42           8531 	ld	de,#_tripal + 1
   2AED 1A                 8532 	ld	a,(de)
   2AEE 47                 8533 	ld	b,a
   2AEF 21r1Ds42           8534 	ld	hl,#_tripal
   2AF2 5E                 8535 	ld	e,(hl)
   2AF3 79                 8536 	ld	a,c
   2AF4 F5                 8537 	push	af
   2AF5 33                 8538 	inc	sp
   2AF6 C5                 8539 	push	bc
   2AF7 33                 8540 	inc	sp
   2AF8 53                 8541 	ld	d,e
   2AF9 1E 03              8542 	ld	e,#0x03
   2AFB D5                 8543 	push	de
   2AFC CDr00s00           8544 	call	_msx2_palette
   2AFF F1                 8545 	pop	af
   2B00 F1                 8546 	pop	af
                           8547 ;demo.c:1192: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2B01 21r22s42           8548 	ld	hl,#_tripal + 5
   2B04 4E                 8549 	ld	c,(hl)
   2B05 11r21s42           8550 	ld	de,#_tripal + 4
   2B08 1A                 8551 	ld	a,(de)
   2B09 47                 8552 	ld	b,a
   2B0A 21r20s42           8553 	ld	hl,#_tripal + 3
   2B0D 5E                 8554 	ld	e,(hl)
   2B0E 79                 8555 	ld	a,c
   2B0F F5                 8556 	push	af
   2B10 33                 8557 	inc	sp
   2B11 C5                 8558 	push	bc
   2B12 33                 8559 	inc	sp
   2B13 53                 8560 	ld	d,e
   2B14 1E 0E              8561 	ld	e,#0x0E
   2B16 D5                 8562 	push	de
   2B17 CDr00s00           8563 	call	_msx2_palette
   2B1A F1                 8564 	pop	af
   2B1B F1                 8565 	pop	af
                           8566 ;demo.c:1193: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2B1C 21r25s42           8567 	ld	hl,#_tripal + 8
   2B1F 4E                 8568 	ld	c,(hl)
   2B20 11r24s42           8569 	ld	de,#_tripal + 7
   2B23 1A                 8570 	ld	a,(de)
   2B24 47                 8571 	ld	b,a
   2B25 21r23s42           8572 	ld	hl,#_tripal + 6
   2B28 5E                 8573 	ld	e,(hl)
   2B29 79                 8574 	ld	a,c
   2B2A F5                 8575 	push	af
   2B2B 33                 8576 	inc	sp
   2B2C C5                 8577 	push	bc
   2B2D 33                 8578 	inc	sp
   2B2E 53                 8579 	ld	d,e
   2B2F 1E 06              8580 	ld	e,#0x06
   2B31 D5                 8581 	push	de
   2B32 CDr00s00           8582 	call	_msx2_palette
   2B35 F1                 8583 	pop	af
   2B36 F1                 8584 	pop	af
   2B37                    8585 00160$:
                           8586 ;demo.c:1197: if (tick > 28) tick = 0;
   2B37 3E 1C              8587 	ld	a,#0x1C
   2B39 FD 21r28s41        8588 	ld	iy,#_tick
   2B3D FD 96 00           8589 	sub	a,0 (iy)
   2B40 3E 00              8590 	ld	a,#0x00
   2B42 FD 21r28s41        8591 	ld	iy,#_tick
   2B46 FD 9E 01           8592 	sbc	a,1 (iy)
   2B49 F2r56s2B           8593 	jp	P,00162$
   2B4C 21r28s41           8594 	ld	hl,#_tick + 0
   2B4F 36 00              8595 	ld	(hl), #0x00
   2B51 21r29s41           8596 	ld	hl,#_tick + 1
   2B54 36 00              8597 	ld	(hl), #0x00
   2B56                    8598 00162$:
                           8599 ;demo.c:1199: tripaltick++;
   2B56 FD 21r26s42        8600 	ld	iy,#_tripaltick
   2B5A FD 34 00           8601 	inc	0 (iy)
                           8602 ;demo.c:1200: if (tripaltick > 6) {
   2B5D 3E 06              8603 	ld	a,#0x06
   2B5F FD 21r26s42        8604 	ld	iy,#_tripaltick
   2B63 FD 96 00           8605 	sub	a,0 (iy)
   2B66 D2rEBs2B           8606 	jp	NC,00175$
                           8607 ;demo.c:1201: tripaltick2++;
   2B69 FD 21r27s42        8608 	ld	iy,#_tripaltick2
   2B6D FD 34 00           8609 	inc	0 (iy)
                           8610 ;demo.c:1202: if (tripaltick2 > 6) tripaltick2 = 0;
   2B70 3E 06              8611 	ld	a,#0x06
   2B72 FD 21r27s42        8612 	ld	iy,#_tripaltick2
   2B76 FD 96 00           8613 	sub	a,0 (iy)
   2B79 30 05              8614 	jr	NC,00164$
   2B7B 21r27s42           8615 	ld	hl,#_tripaltick2 + 0
   2B7E 36 00              8616 	ld	(hl), #0x00
   2B80                    8617 00164$:
                           8618 ;demo.c:1204: r = tripal[0];
   2B80 21r1Ds42           8619 	ld	hl,#_tripal
   2B83 4E                 8620 	ld	c,(hl)
   2B84 DD 71 FD           8621 	ld	-3 (ix),c
                           8622 ;demo.c:1205: g = tripal[1];
   2B87 11r1Es42           8623 	ld	de,#_tripal + 1
   2B8A 1A                 8624 	ld	a,(de)
   2B8B DD 77 FC           8625 	ld	-4 (ix),a
                           8626 ;demo.c:1206: b = tripal[2];
   2B8E 21r1Fs42           8627 	ld	hl,#_tripal + 2
   2B91 5E                 8628 	ld	e,(hl)
   2B92 DD 73 FB           8629 	ld	-5 (ix),e
                           8630 ;demo.c:1208: for (x = 0; x < 6; x++) {
   2B95 DD 36 FE 00        8631 	ld	-2 (ix),#0x00
   2B99 DD 36 FF 00        8632 	ld	-1 (ix),#0x00
   2B9D                    8633 00171$:
   2B9D DD 7E FE           8634 	ld	a,-2 (ix)
   2BA0 D6 06              8635 	sub	a,#0x06
   2BA2 DD 7E FF           8636 	ld	a,-1 (ix)
   2BA5 DE 00              8637 	sbc	a,#0x00
   2BA7 F2rD1s2B           8638 	jp	P,00174$
                           8639 ;demo.c:1209: tripal[x] = tripal[x+3];
   2BAA 3Er1D              8640 	ld	a,#<_tripal
   2BAC DD 86 FE           8641 	add	a,-2 (ix)
   2BAF 4F                 8642 	ld	c,a
   2BB0 3Es42              8643 	ld	a,#>_tripal
   2BB2 DD 8E FF           8644 	adc	a,-1 (ix)
   2BB5 47                 8645 	ld	b,a
   2BB6 DD 5E FE           8646 	ld	e,-2 (ix)
   2BB9 1C                 8647 	inc	e
   2BBA 1C                 8648 	inc	e
   2BBB 1C                 8649 	inc	e
   2BBC 3Er1D              8650 	ld	a,#<_tripal
   2BBE 83                 8651 	add	a,e
   2BBF 5F                 8652 	ld	e,a
   2BC0 3Es42              8653 	ld	a,#>_tripal
   2BC2 CE 00              8654 	adc	a,#0x00
   2BC4 57                 8655 	ld	d,a
   2BC5 1A                 8656 	ld	a,(de)
   2BC6 02                 8657 	ld	(bc),a
                           8658 ;demo.c:1208: for (x = 0; x < 6; x++) {
   2BC7 DD 34 FE           8659 	inc	-2 (ix)
   2BCA 20 03              8660 	jr	NZ,00245$
   2BCC DD 34 FF           8661 	inc	-1 (ix)
   2BCF                    8662 00245$:
   2BCF 18 CC              8663 	jr	00171$
   2BD1                    8664 00174$:
                           8665 ;demo.c:1212: tripal[6] = r;
   2BD1 01r23s42           8666 	ld	bc,#_tripal + 6
   2BD4 DD 7E FD           8667 	ld	a,-3 (ix)
   2BD7 02                 8668 	ld	(bc),a
                           8669 ;demo.c:1213: tripal[7] = g;
   2BD8 01r24s42           8670 	ld	bc,#_tripal + 7
   2BDB DD 7E FC           8671 	ld	a,-4 (ix)
   2BDE 02                 8672 	ld	(bc),a
                           8673 ;demo.c:1214: tripal[8] = b;
   2BDF 01r25s42           8674 	ld	bc,#_tripal + 8
   2BE2 DD 7E FB           8675 	ld	a,-5 (ix)
   2BE5 02                 8676 	ld	(bc),a
                           8677 ;demo.c:1215: tripaltick = 0;
   2BE6 21r26s42           8678 	ld	hl,#_tripaltick + 0
   2BE9 36 00              8679 	ld	(hl), #0x00
   2BEB                    8680 00175$:
   2BEB DD F9              8681 	ld	sp,ix
   2BED DD E1              8682 	pop	ix
   2BEF C9                 8683 	ret
   2BF0                    8684 _tritiles_end::
                           8685 ;demo.c:1220: int abs (int n) {
                           8686 ;	---------------------------------
                           8687 ; Function abs
                           8688 ; ---------------------------------
   2BF0                    8689 _abs_start::
   2BF0                    8690 _abs:
   2BF0 DD E5              8691 	push	ix
   2BF2 DD 21 00 00        8692 	ld	ix,#0
   2BF6 DD 39              8693 	add	ix,sp
   2BF8 21 FA FF           8694 	ld	hl,#-6
   2BFB 39                 8695 	add	hl,sp
   2BFC F9                 8696 	ld	sp,hl
                           8697 ;demo.c:1221: const int ret[2] = { n, -n };
   2BFD 21 02 00           8698 	ld	hl,#0x0002
   2C00 39                 8699 	add	hl,sp
   2C01 4D                 8700 	ld	c,l
   2C02 44                 8701 	ld	b,h
   2C03 DD 7E 04           8702 	ld	a,4 (ix)
   2C06 77                 8703 	ld	(hl),a
   2C07 23                 8704 	inc	hl
   2C08 DD 7E 05           8705 	ld	a,5 (ix)
   2C0B 77                 8706 	ld	(hl),a
   2C0C 21 02 00           8707 	ld	hl,#0x0002
   2C0F 09                 8708 	add	hl,bc
   2C10 DD 75 FA           8709 	ld	-6 (ix),l
   2C13 DD 74 FB           8710 	ld	-5 (ix),h
   2C16 AF                 8711 	xor	a,a
   2C17 DD 9E 04           8712 	sbc	a,4 (ix)
   2C1A 5F                 8713 	ld	e,a
   2C1B 3E 00              8714 	ld	a,#0x00
   2C1D DD 9E 05           8715 	sbc	a,5 (ix)
   2C20 57                 8716 	ld	d,a
   2C21 DD 6E FA           8717 	ld	l,-6 (ix)
   2C24 DD 66 FB           8718 	ld	h,-5 (ix)
   2C27 73                 8719 	ld	(hl),e
   2C28 23                 8720 	inc	hl
   2C29 72                 8721 	ld	(hl),d
                           8722 ;demo.c:1222: return ret [n<0];
   2C2A DD 7E 05           8723 	ld	a,5 (ix)
   2C2D 07                 8724 	rlca
   2C2E E6 01              8725 	and	a,#0x01
   2C30 5F                 8726 	ld	e,a
   2C31 CB 23              8727 	sla	e
   2C33 79                 8728 	ld	a,c
   2C34 83                 8729 	add	a,e
   2C35 6F                 8730 	ld	l,a
   2C36 78                 8731 	ld	a,b
   2C37 CE 00              8732 	adc	a,#0x00
   2C39 67                 8733 	ld	h,a
   2C3A 5E                 8734 	ld	e,(hl)
   2C3B 23                 8735 	inc	hl
   2C3C 4E                 8736 	ld	c,(hl)
   2C3D 6B                 8737 	ld	l,e
   2C3E 61                 8738 	ld	h,c
   2C3F DD F9              8739 	ld	sp,ix
   2C41 DD E1              8740 	pop	ix
   2C43 C9                 8741 	ret
   2C44                    8742 _abs_end::
                           8743 ;demo.c:1228: void logoeffu() {
                           8744 ;	---------------------------------
                           8745 ; Function logoeffu
                           8746 ; ---------------------------------
   2C44                    8747 _logoeffu_start::
   2C44                    8748 _logoeffu:
   2C44 DD E5              8749 	push	ix
   2C46 DD 21 00 00        8750 	ld	ix,#0
   2C4A DD 39              8751 	add	ix,sp
   2C4C F5                 8752 	push	af
   2C4D F5                 8753 	push	af
                           8754 ;demo.c:1232: fadein();
   2C4E CDrBBs0A           8755 	call	_fadein
                           8756 ;demo.c:1234: v = abs(sintabx[(vbicount) & 255]>>4);
   2C51 21r26s41           8757 	ld	hl,#_vbicount + 0
   2C54 4E                 8758 	ld	c,(hl)
   2C55 06 00              8759 	ld	b,#0x00
   2C57 21r2Cs00           8760 	ld	hl,#_sintabx
   2C5A 09                 8761 	add	hl,bc
   2C5B 7E                 8762 	ld	a,(hl)
   2C5C 4F                 8763 	ld	c,a
   2C5D CB 39              8764 	srl	c
   2C5F CB 39              8765 	srl	c
   2C61 CB 39              8766 	srl	c
   2C63 CB 39              8767 	srl	c
   2C65 06 00              8768 	ld	b,#0x00
   2C67 C5                 8769 	push	bc
   2C68 CDrF0s2B           8770 	call	_abs
   2C6B F1                 8771 	pop	af
   2C6C 44                 8772 	ld	b,h
   2C6D DD 75 FC           8773 	ld	-4 (ix),l
   2C70 DD 70 FD           8774 	ld	-3 (ix),b
                           8775 ;demo.c:1236: for (y = 0; y < 116; y+=2) {
   2C73 DD 36 FE 00        8776 	ld	-2 (ix),#0x00
   2C77 DD 36 FF 00        8777 	ld	-1 (ix),#0x00
   2C7B                    8778 00108$:
   2C7B DD 7E FE           8779 	ld	a,-2 (ix)
   2C7E D6 74              8780 	sub	a,#0x74
   2C80 DD 7E FF           8781 	ld	a,-1 (ix)
   2C83 DE 00              8782 	sbc	a,#0x00
   2C85 F2r50s2D           8783 	jp	P,00111$
                           8784 ;demo.c:1237: cmd.size_x = 108;
   2C88 11r32s41           8785 	ld	de,#_cmd + 8
   2C8B EB                 8786 	ex	de,hl
   2C8C 36 6C              8787 	ld	(hl),#0x6C
   2C8E 23                 8788 	inc	hl
   2C8F 36 00              8789 	ld	(hl),#0x00
                           8790 ;demo.c:1238: cmd.size_y = 2;
   2C91 11r34s41           8791 	ld	de,#_cmd + 10
   2C94 EB                 8792 	ex	de,hl
   2C95 36 02              8793 	ld	(hl),#0x02
   2C97 23                 8794 	inc	hl
   2C98 36 00              8795 	ld	(hl),#0x00
                           8796 ;demo.c:1239: cmd.data = 0;
   2C9A 11r36s41           8797 	ld	de,#_cmd + 12
   2C9D 3E 00              8798 	ld	a,#0x00
   2C9F 12                 8799 	ld	(de),a
                           8800 ;demo.c:1240: cmd.argument = 0x00;
   2CA0 11r37s41           8801 	ld	de,#_cmd + 13
   2CA3 3E 00              8802 	ld	a,#0x00
   2CA5 12                 8803 	ld	(de),a
                           8804 ;demo.c:1241: cmd.command = 0xd0; 
   2CA6 11r38s41           8805 	ld	de,#_cmd + 14
   2CA9 3E D0              8806 	ld	a,#0xD0
   2CAB 12                 8807 	ld	(de),a
                           8808 ;demo.c:1242: cmd.source_x = 74;
   2CAC 21r2As41           8809 	ld	hl,#_cmd
   2CAF 36 4A              8810 	ld	(hl),#0x4A
   2CB1 23                 8811 	inc	hl
   2CB2 36 00              8812 	ld	(hl),#0x00
                           8813 ;demo.c:1243: cmd.source_y = 256+y;
   2CB4 11r2Cs41           8814 	ld	de,#_cmd + 2
   2CB7 DD 7E FE           8815 	ld	a,-2 (ix)
   2CBA C6 00              8816 	add	a,#0x00
   2CBC 4F                 8817 	ld	c,a
   2CBD DD 7E FF           8818 	ld	a,-1 (ix)
   2CC0 CE 01              8819 	adc	a,#0x01
   2CC2 47                 8820 	ld	b,a
   2CC3 6B                 8821 	ld	l,e
   2CC4 62                 8822 	ld	h,d
   2CC5 71                 8823 	ld	(hl),c
   2CC6 23                 8824 	inc	hl
   2CC7 70                 8825 	ld	(hl),b
                           8826 ;demo.c:1244: v+=y;
   2CC8 DD 7E FC           8827 	ld	a,-4 (ix)
   2CCB DD 86 FE           8828 	add	a,-2 (ix)
   2CCE DD 77 FC           8829 	ld	-4 (ix),a
   2CD1 DD 7E FD           8830 	ld	a,-3 (ix)
   2CD4 DD 8E FF           8831 	adc	a,-1 (ix)
   2CD7 DD 77 FD           8832 	ld	-3 (ix),a
                           8833 ;demo.c:1245: v -= powa;
   2CDA 21r2Cs42           8834 	ld	hl,#_powa
   2CDD DD 7E FC           8835 	ld	a,-4 (ix)
   2CE0 96                 8836 	sub	a,(hl)
   2CE1 DD 77 FC           8837 	ld	-4 (ix),a
   2CE4 DD 7E FD           8838 	ld	a,-3 (ix)
   2CE7 23                 8839 	inc	hl
   2CE8 9E                 8840 	sbc	a,(hl)
                           8841 ;demo.c:1246: if (v<0) v = 0;
   2CE9 DD 77 FD           8842 	ld	-3 (ix),a
   2CEC CB 7F              8843 	bit	7,a
   2CEE 28 08              8844 	jr	Z,00102$
   2CF0 DD 36 FC 00        8845 	ld	-4 (ix),#0x00
   2CF4 DD 36 FD 00        8846 	ld	-3 (ix),#0x00
   2CF8                    8847 00102$:
                           8848 ;demo.c:1247: if (v>150) v = 150;
   2CF8 3E 96              8849 	ld	a,#0x96
   2CFA DD 96 FC           8850 	sub	a,-4 (ix)
   2CFD 3E 00              8851 	ld	a,#0x00
   2CFF DD 9E FD           8852 	sbc	a,-3 (ix)
   2D02 F2r0Ds2D           8853 	jp	P,00104$
   2D05 DD 36 FC 96        8854 	ld	-4 (ix),#0x96
   2D09 DD 36 FD 00        8855 	ld	-3 (ix),#0x00
   2D0D                    8856 00104$:
                           8857 ;demo.c:1248: cmd.dest_x = 74+v;
   2D0D 01r2Es41           8858 	ld	bc,#_cmd + 4
   2D10 DD 7E FC           8859 	ld	a,-4 (ix)
   2D13 C6 4A              8860 	add	a,#0x4A
   2D15 5F                 8861 	ld	e,a
   2D16 DD 7E FD           8862 	ld	a,-3 (ix)
   2D19 CE 00              8863 	adc	a,#0x00
   2D1B 57                 8864 	ld	d,a
   2D1C 69                 8865 	ld	l,c
   2D1D 60                 8866 	ld	h,b
   2D1E 73                 8867 	ld	(hl),e
   2D1F 23                 8868 	inc	hl
   2D20 72                 8869 	ld	(hl),d
                           8870 ;demo.c:1249: cmd.dest_y = 50+y+1;
   2D21 01r30s41           8871 	ld	bc,#_cmd + 6
   2D24 DD 7E FE           8872 	ld	a,-2 (ix)
   2D27 C6 33              8873 	add	a,#0x33
   2D29 5F                 8874 	ld	e,a
   2D2A DD 7E FF           8875 	ld	a,-1 (ix)
   2D2D CE 00              8876 	adc	a,#0x00
   2D2F 57                 8877 	ld	d,a
   2D30 69                 8878 	ld	l,c
   2D31 60                 8879 	ld	h,b
   2D32 73                 8880 	ld	(hl),e
   2D33 23                 8881 	inc	hl
   2D34 72                 8882 	ld	(hl),d
                           8883 ;demo.c:1250: vdp_copier(&cmd);
   2D35 21r2As41           8884 	ld	hl,#_cmd
   2D38 E5                 8885 	push	hl
   2D39 CDr00s00           8886 	call	_vdp_copier
   2D3C F1                 8887 	pop	af
                           8888 ;demo.c:1236: for (y = 0; y < 116; y+=2) {
   2D3D DD 7E FE           8889 	ld	a,-2 (ix)
   2D40 C6 02              8890 	add	a,#0x02
   2D42 DD 77 FE           8891 	ld	-2 (ix),a
   2D45 DD 7E FF           8892 	ld	a,-1 (ix)
   2D48 CE 00              8893 	adc	a,#0x00
   2D4A DD 77 FF           8894 	ld	-1 (ix),a
   2D4D C3r7Bs2C           8895 	jp	00108$
   2D50                    8896 00111$:
                           8897 ;demo.c:1253: if (vbicount > scenetimings[2]+84 && onceclear > 182) {
   2D50 21r55s41           8898 	ld	hl, #_scenetimings + 4
   2D53 4E                 8899 	ld	c,(hl)
   2D54 23                 8900 	inc	hl
   2D55 46                 8901 	ld	b,(hl)
   2D56 21 54 00           8902 	ld	hl,#0x0054
   2D59 09                 8903 	add	hl,bc
   2D5A 4D                 8904 	ld	c,l
   2D5B 44                 8905 	ld	b,h
   2D5C 79                 8906 	ld	a,c
   2D5D FD 21r26s41        8907 	ld	iy,#_vbicount
   2D61 FD 96 00           8908 	sub	a,0 (iy)
   2D64 78                 8909 	ld	a,b
   2D65 FD 21r26s41        8910 	ld	iy,#_vbicount
   2D69 FD 9E 01           8911 	sbc	a,1 (iy)
   2D6C F2rCEs2D           8912 	jp	P,00106$
   2D6F 3E B6              8913 	ld	a,#0xB6
   2D71 FD 21r2Es42        8914 	ld	iy,#_onceclear
   2D75 FD 96 00           8915 	sub	a,0 (iy)
   2D78 D2rCEs2D           8916 	jp	NC,00106$
                           8917 ;demo.c:1254: cmd.size_x = 4;
   2D7B 21r32s41           8918 	ld	hl, #_cmd + 8
   2D7E 36 04              8919 	ld	(hl),#0x04
   2D80 23                 8920 	inc	hl
   2D81 36 00              8921 	ld	(hl),#0x00
                           8922 ;demo.c:1255: cmd.size_y = 116;
   2D83 21r34s41           8923 	ld	hl, #_cmd + 10
   2D86 36 74              8924 	ld	(hl),#0x74
   2D88 23                 8925 	inc	hl
   2D89 36 00              8926 	ld	(hl),#0x00
                           8927 ;demo.c:1256: cmd.data = 0;
                           8928 ;demo.c:1257: cmd.argument = 0x00;
   2D8B 3E 00              8929 	ld	a,#0x00
   2D8D 32r36s41           8930 	ld	(#_cmd + 12),a
   2D90 32r37s41           8931 	ld	(#_cmd + 13),a
                           8932 ;demo.c:1258: cmd.command = 0xd0; 
   2D93 01r38s41           8933 	ld	bc,#_cmd + 14
   2D96 3E D0              8934 	ld	a,#0xD0
   2D98 02                 8935 	ld	(bc),a
                           8936 ;demo.c:1259: cmd.source_x = 20;
   2D99 21r2As41           8937 	ld	hl,#_cmd
   2D9C 36 14              8938 	ld	(hl),#0x14
   2D9E 23                 8939 	inc	hl
   2D9F 36 00              8940 	ld	(hl),#0x00
                           8941 ;demo.c:1260: cmd.source_y = 0;
   2DA1 21r2Cs41           8942 	ld	hl, #_cmd + 2
   2DA4 36 00              8943 	ld	(hl),#0x00
   2DA6 23                 8944 	inc	hl
   2DA7 36 00              8945 	ld	(hl),#0x00
                           8946 ;demo.c:1261: cmd.dest_x = onceclear;
   2DA9 01r2Es41           8947 	ld	bc,#_cmd + 4
   2DAC 21r2Es42           8948 	ld	hl,#_onceclear + 0
   2DAF 5E                 8949 	ld	e,(hl)
   2DB0 16 00              8950 	ld	d,#0x00
   2DB2 69                 8951 	ld	l,c
   2DB3 60                 8952 	ld	h,b
   2DB4 73                 8953 	ld	(hl),e
   2DB5 23                 8954 	inc	hl
   2DB6 72                 8955 	ld	(hl),d
                           8956 ;demo.c:1262: cmd.dest_y = 68;
   2DB7 21r30s41           8957 	ld	hl, #_cmd + 6
   2DBA 36 44              8958 	ld	(hl),#0x44
   2DBC 23                 8959 	inc	hl
   2DBD 36 00              8960 	ld	(hl),#0x00
                           8961 ;demo.c:1263: vdp_copier(&cmd);
   2DBF 21r2As41           8962 	ld	hl,#_cmd
   2DC2 E5                 8963 	push	hl
   2DC3 CDr00s00           8964 	call	_vdp_copier
   2DC6 F1                 8965 	pop	af
                           8966 ;demo.c:1264: onceclear-=4;
   2DC7 21r2Es42           8967 	ld	hl,#_onceclear
   2DCA 7E                 8968 	ld	a,(hl)
   2DCB C6 FC              8969 	add	a,#0xFC
   2DCD 77                 8970 	ld	(hl),a
   2DCE                    8971 00106$:
                           8972 ;demo.c:1268: powa+=2;
   2DCE 21r2Cs42           8973 	ld	hl,#_powa
   2DD1 7E                 8974 	ld	a,(hl)
   2DD2 C6 02              8975 	add	a,#0x02
   2DD4 23                 8976 	inc	hl
   2DD5 2B                 8977 	dec	hl
   2DD6 C5                 8978 	push	bc
   2DD7 4F                 8979 	ld	c, a
   2DD8 23                 8980 	inc	hl
   2DD9 7E                 8981 	ld	a, (hl)
   2DDA 47                 8982 	ld	b, a
   2DDB 79                 8983 	ld	a, c
   2DDC 2B                 8984 	dec	hl
   2DDD 77                 8985 	ld	(hl), a
   2DDE 78                 8986 	ld	a, b
   2DDF C1                 8987 	pop	bc
   2DE0 CE 00              8988 	adc	a,#0x00
   2DE2 23                 8989 	inc	hl
   2DE3 77                 8990 	ld	(hl),a
                           8991 ;demo.c:1269: powatick = 0;
   2DE4 21r2As42           8992 	ld	hl,#_powatick + 0
   2DE7 36 00              8993 	ld	(hl), #0x00
   2DE9 21r2Bs42           8994 	ld	hl,#_powatick + 1
   2DEC 36 00              8995 	ld	(hl), #0x00
   2DEE DD F9              8996 	ld	sp,ix
   2DF0 DD E1              8997 	pop	ix
   2DF2 C9                 8998 	ret
   2DF3                    8999 _logoeffu_end::
                           9000 ;demo.c:1278: void points() {
                           9001 ;	---------------------------------
                           9002 ; Function points
                           9003 ; ---------------------------------
   2DF3                    9004 _points_start::
   2DF3                    9005 _points:
   2DF3 DD E5              9006 	push	ix
   2DF5 DD 21 00 00        9007 	ld	ix,#0
   2DF9 DD 39              9008 	add	ix,sp
   2DFB F5                 9009 	push	af
   2DFC 3B                 9010 	dec	sp
                           9011 ;demo.c:1282: if (initpoints == 0) {
   2DFD AF                 9012 	xor	a,a
   2DFE 21r2Fs42           9013 	ld	hl,#_initpoints + 0
   2E01 B6                 9014 	or	a,(hl)
   2E02 C2r0Bs30           9015 	jp	NZ,00105$
                           9016 ;demo.c:1283: cmd.size_x = 256;
   2E05 21r32s41           9017 	ld	hl, #_cmd + 8
   2E08 36 00              9018 	ld	(hl),#0x00
   2E0A 23                 9019 	inc	hl
   2E0B 36 01              9020 	ld	(hl),#0x01
                           9021 ;demo.c:1284: cmd.size_y = 4;
   2E0D 21r34s41           9022 	ld	hl, #_cmd + 10
   2E10 36 04              9023 	ld	(hl),#0x04
   2E12 23                 9024 	inc	hl
   2E13 36 00              9025 	ld	(hl),#0x00
                           9026 ;demo.c:1285: cmd.data = 0;
                           9027 ;demo.c:1286: cmd.argument = 0x00; // from 70xY to left
   2E15 3E 00              9028 	ld	a,#0x00
   2E17 32r36s41           9029 	ld	(#_cmd + 12),a
   2E1A 32r37s41           9030 	ld	(#_cmd + 13),a
                           9031 ;demo.c:1287: cmd.command = 0xd0; // vram to vram, y only
   2E1D 01r38s41           9032 	ld	bc,#_cmd + 14
   2E20 3E D0              9033 	ld	a,#0xD0
   2E22 02                 9034 	ld	(bc),a
                           9035 ;demo.c:1288: cmd.source_x = 0;
   2E23 21r2As41           9036 	ld	hl,#_cmd
   2E26 36 00              9037 	ld	(hl),#0x00
   2E28 23                 9038 	inc	hl
   2E29 36 00              9039 	ld	(hl),#0x00
                           9040 ;demo.c:1289: cmd.dest_x = 0;
   2E2B 21r2Es41           9041 	ld	hl, #_cmd + 4
   2E2E 36 00              9042 	ld	(hl),#0x00
   2E30 23                 9043 	inc	hl
   2E31 36 00              9044 	ld	(hl),#0x00
                           9045 ;demo.c:1291: for (y = 0; y < 212; y+=4) {
   2E33 DD 36 FF 00        9046 	ld	-1 (ix),#0x00
   2E37                    9047 00116$:
   2E37 DD 7E FF           9048 	ld	a,-1 (ix)
   2E3A D6 D4              9049 	sub	a,#0xD4
   2E3C D2r63s2F           9050 	jp	NC,00119$
                           9051 ;demo.c:1292: if (PLY_PSGReg10 > 4) {
   2E3F 3E 04              9052 	ld	a,#0x04
   2E41 FD 21r00s00        9053 	ld	iy,#_PLY_PSGReg10
   2E45 FD 96 00           9054 	sub	a,0 (iy)
   2E48 D2rDDs2E           9055 	jp	NC,00102$
                           9056 ;demo.c:1293: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2E4B 21r00s00           9057 	ld	hl,#_PLY_PSGReg10 + 0
   2E4E 5E                 9058 	ld	e,(hl)
   2E4F 16 00              9059 	ld	d,#0x00
   2E51 21r26s42           9060 	ld	hl,#_tripaltick + 0
   2E54 4E                 9061 	ld	c,(hl)
   2E55 06 00              9062 	ld	b,#0x00
   2E57 7B                 9063 	ld	a,e
   2E58 81                 9064 	add	a,c
   2E59 4F                 9065 	ld	c,a
   2E5A 7A                 9066 	ld	a,d
   2E5B 88                 9067 	adc	a,b
   2E5C 06 00              9068 	ld	b,#0x00
   2E5E 21r2Cs00           9069 	ld	hl,#_sintabx
   2E61 09                 9070 	add	hl,bc
   2E62 7E                 9071 	ld	a,(hl)
   2E63 4F                 9072 	ld	c,a
   2E64 06 00              9073 	ld	b,#0x00
   2E66 3E C0              9074 	ld	a,#0xC0
   2E68 91                 9075 	sub	a,c
   2E69 4F                 9076 	ld	c,a
   2E6A 3E 00              9077 	ld	a,#0x00
   2E6C 98                 9078 	sbc	a,b
   2E6D 47                 9079 	ld	b,a
   2E6E CB 28              9080 	sra	b
   2E70 CB 19              9081 	rr	c
   2E72 CB 28              9082 	sra	b
   2E74 CB 19              9083 	rr	c
   2E76 CB 28              9084 	sra	b
   2E78 CB 19              9085 	rr	c
   2E7A 41                 9086 	ld	b,c
   2E7B 0E 17              9087 	ld	c,#0x17
   2E7D C5                 9088 	push	bc
   2E7E CDr00s00           9089 	call	_vdp_register
   2E81 F1                 9090 	pop	af
                           9091 ;demo.c:1295: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   2E82 21r1Fs42           9092 	ld	hl,#_tripal + 2
   2E85 4E                 9093 	ld	c,(hl)
   2E86 11r1Es42           9094 	ld	de,#_tripal + 1
   2E89 1A                 9095 	ld	a,(de)
   2E8A 47                 9096 	ld	b,a
   2E8B 21r1Ds42           9097 	ld	hl,#_tripal
   2E8E 5E                 9098 	ld	e,(hl)
   2E8F 21r00s00           9099 	ld	hl,#_PLY_PSGReg10 + 0
   2E92 56                 9100 	ld	d,(hl)
   2E93 7B                 9101 	ld	a,e
   2E94 82                 9102 	add	a,d
   2E95 5F                 9103 	ld	e,a
   2E96 79                 9104 	ld	a,c
   2E97 F5                 9105 	push	af
   2E98 33                 9106 	inc	sp
   2E99 C5                 9107 	push	bc
   2E9A 33                 9108 	inc	sp
   2E9B 53                 9109 	ld	d,e
   2E9C 1E 03              9110 	ld	e,#0x03
   2E9E D5                 9111 	push	de
   2E9F CDr00s00           9112 	call	_msx2_palette
   2EA2 F1                 9113 	pop	af
   2EA3 F1                 9114 	pop	af
                           9115 ;demo.c:1296: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2EA4 21r22s42           9116 	ld	hl,#_tripal + 5
   2EA7 4E                 9117 	ld	c,(hl)
   2EA8 11r21s42           9118 	ld	de,#_tripal + 4
   2EAB 1A                 9119 	ld	a,(de)
   2EAC 47                 9120 	ld	b,a
   2EAD 21r20s42           9121 	ld	hl,#_tripal + 3
   2EB0 5E                 9122 	ld	e,(hl)
   2EB1 79                 9123 	ld	a,c
   2EB2 F5                 9124 	push	af
   2EB3 33                 9125 	inc	sp
   2EB4 C5                 9126 	push	bc
   2EB5 33                 9127 	inc	sp
   2EB6 53                 9128 	ld	d,e
   2EB7 1E 0E              9129 	ld	e,#0x0E
   2EB9 D5                 9130 	push	de
   2EBA CDr00s00           9131 	call	_msx2_palette
   2EBD F1                 9132 	pop	af
   2EBE F1                 9133 	pop	af
                           9134 ;demo.c:1297: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2EBF 21r25s42           9135 	ld	hl,#_tripal + 8
   2EC2 4E                 9136 	ld	c,(hl)
   2EC3 11r24s42           9137 	ld	de,#_tripal + 7
   2EC6 1A                 9138 	ld	a,(de)
   2EC7 47                 9139 	ld	b,a
   2EC8 21r23s42           9140 	ld	hl,#_tripal + 6
   2ECB 5E                 9141 	ld	e,(hl)
   2ECC 79                 9142 	ld	a,c
   2ECD F5                 9143 	push	af
   2ECE 33                 9144 	inc	sp
   2ECF C5                 9145 	push	bc
   2ED0 33                 9146 	inc	sp
   2ED1 53                 9147 	ld	d,e
   2ED2 1E 06              9148 	ld	e,#0x06
   2ED4 D5                 9149 	push	de
   2ED5 CDr00s00           9150 	call	_msx2_palette
   2ED8 F1                 9151 	pop	af
   2ED9 F1                 9152 	pop	af
   2EDA C3r36s2F           9153 	jp	00103$
   2EDD                    9154 00102$:
                           9155 ;demo.c:1300: vdp_register(VDP_VOFFSET,0);
   2EDD 21 17 00           9156 	ld	hl,#0x0017
   2EE0 E5                 9157 	push	hl
   2EE1 CDr00s00           9158 	call	_vdp_register
   2EE4 F1                 9159 	pop	af
                           9160 ;demo.c:1302: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2EE5 21r1Fs42           9161 	ld	hl,#_tripal + 2
   2EE8 4E                 9162 	ld	c,(hl)
   2EE9 11r1Es42           9163 	ld	de,#_tripal + 1
   2EEC 1A                 9164 	ld	a,(de)
   2EED 47                 9165 	ld	b,a
   2EEE 21r1Ds42           9166 	ld	hl,#_tripal
   2EF1 5E                 9167 	ld	e,(hl)
   2EF2 79                 9168 	ld	a,c
   2EF3 F5                 9169 	push	af
   2EF4 33                 9170 	inc	sp
   2EF5 C5                 9171 	push	bc
   2EF6 33                 9172 	inc	sp
   2EF7 53                 9173 	ld	d,e
   2EF8 1E 03              9174 	ld	e,#0x03
   2EFA D5                 9175 	push	de
   2EFB CDr00s00           9176 	call	_msx2_palette
   2EFE F1                 9177 	pop	af
   2EFF F1                 9178 	pop	af
                           9179 ;demo.c:1303: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2F00 21r22s42           9180 	ld	hl,#_tripal + 5
   2F03 4E                 9181 	ld	c,(hl)
   2F04 11r21s42           9182 	ld	de,#_tripal + 4
   2F07 1A                 9183 	ld	a,(de)
   2F08 47                 9184 	ld	b,a
   2F09 21r20s42           9185 	ld	hl,#_tripal + 3
   2F0C 5E                 9186 	ld	e,(hl)
   2F0D 79                 9187 	ld	a,c
   2F0E F5                 9188 	push	af
   2F0F 33                 9189 	inc	sp
   2F10 C5                 9190 	push	bc
   2F11 33                 9191 	inc	sp
   2F12 53                 9192 	ld	d,e
   2F13 1E 0E              9193 	ld	e,#0x0E
   2F15 D5                 9194 	push	de
   2F16 CDr00s00           9195 	call	_msx2_palette
   2F19 F1                 9196 	pop	af
   2F1A F1                 9197 	pop	af
                           9198 ;demo.c:1304: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2F1B 21r25s42           9199 	ld	hl,#_tripal + 8
   2F1E 4E                 9200 	ld	c,(hl)
   2F1F 11r24s42           9201 	ld	de,#_tripal + 7
   2F22 1A                 9202 	ld	a,(de)
   2F23 47                 9203 	ld	b,a
   2F24 21r23s42           9204 	ld	hl,#_tripal + 6
   2F27 5E                 9205 	ld	e,(hl)
   2F28 79                 9206 	ld	a,c
   2F29 F5                 9207 	push	af
   2F2A 33                 9208 	inc	sp
   2F2B C5                 9209 	push	bc
   2F2C 33                 9210 	inc	sp
   2F2D 53                 9211 	ld	d,e
   2F2E 1E 06              9212 	ld	e,#0x06
   2F30 D5                 9213 	push	de
   2F31 CDr00s00           9214 	call	_msx2_palette
   2F34 F1                 9215 	pop	af
   2F35 F1                 9216 	pop	af
   2F36                    9217 00103$:
                           9218 ;demo.c:1307: waitVB();
   2F36 76                 9219 		halt 
                           9220 ;demo.c:1308: cmd.source_y = 193;
   2F37 21r2Cs41           9221 	ld	hl, #_cmd + 2
   2F3A 36 C1              9222 	ld	(hl),#0xC1
   2F3C 23                 9223 	inc	hl
   2F3D 36 00              9224 	ld	(hl),#0x00
                           9225 ;demo.c:1309: cmd.dest_y = y;
   2F3F 01r30s41           9226 	ld	bc,#_cmd + 6
   2F42 DD 5E FF           9227 	ld	e,-1 (ix)
   2F45 16 00              9228 	ld	d,#0x00
   2F47 69                 9229 	ld	l,c
   2F48 60                 9230 	ld	h,b
   2F49 73                 9231 	ld	(hl),e
   2F4A 23                 9232 	inc	hl
   2F4B 72                 9233 	ld	(hl),d
                           9234 ;demo.c:1310: vdp_copier(&cmd);
   2F4C 21r2As41           9235 	ld	hl,#_cmd
   2F4F E5                 9236 	push	hl
   2F50 CDr00s00           9237 	call	_vdp_copier
   2F53 F1                 9238 	pop	af
                           9239 ;demo.c:1291: for (y = 0; y < 212; y+=4) {
   2F54 DD 34 FF           9240 	inc	-1 (ix)
   2F57 DD 34 FF           9241 	inc	-1 (ix)
   2F5A DD 34 FF           9242 	inc	-1 (ix)
   2F5D DD 34 FF           9243 	inc	-1 (ix)
   2F60 C3r37s2E           9244 	jp	00116$
   2F63                    9245 00119$:
                           9246 ;demo.c:1314: vdp_load_palette(bulbs_palette);
   2F63 21r66s40           9247 	ld	hl,#_bulbs_palette
   2F66 E5                 9248 	push	hl
   2F67 CDr00s00           9249 	call	_vdp_load_palette
   2F6A F1                 9250 	pop	af
                           9251 ;demo.c:1316: for (x = 0; x < 256; x+=1) {
   2F6B DD 36 FD 00        9252 	ld	-3 (ix),#0x00
   2F6F DD 36 FE 00        9253 	ld	-2 (ix),#0x00
   2F73                    9254 00120$:
   2F73 DD 7E FD           9255 	ld	a,-3 (ix)
   2F76 D6 00              9256 	sub	a,#0x00
   2F78 DD 7E FE           9257 	ld	a,-2 (ix)
   2F7B DE 01              9258 	sbc	a,#0x01
   2F7D F2rFCs2F           9259 	jp	P,00123$
                           9260 ;demo.c:1318: cmd.data = 1+((pointframe>>2) & 0xe);
   2F80 11r36s41           9261 	ld	de,#_cmd + 12
   2F83 21r30s42           9262 	ld	hl,#_pointframe + 0
   2F86 4E                 9263 	ld	c,(hl)
   2F87 21r31s42           9264 	ld	hl,#_pointframe + 1
   2F8A 46                 9265 	ld	b,(hl)
   2F8B CB 28              9266 	sra	b
   2F8D CB 19              9267 	rr	c
   2F8F CB 28              9268 	sra	b
   2F91 CB 19              9269 	rr	c
   2F93 79                 9270 	ld	a,c
   2F94 E6 0E              9271 	and	a,#0x0E
   2F96 3C                 9272 	inc	a
   2F97 12                 9273 	ld	(de),a
                           9274 ;demo.c:1319: cmd.dest_x = x;
   2F98 21r2Es41           9275 	ld	hl, #_cmd + 4
   2F9B DD 7E FD           9276 	ld	a,-3 (ix)
   2F9E 77                 9277 	ld	(hl),a
   2F9F 23                 9278 	inc	hl
   2FA0 DD 7E FE           9279 	ld	a,-2 (ix)
   2FA3 77                 9280 	ld	(hl),a
                           9281 ;demo.c:1320: cmd.dest_y = y;
   2FA4 21r30s41           9282 	ld	hl, #_cmd + 6
   2FA7 36 1D              9283 	ld	(hl),#0x1D
   2FA9 23                 9284 	inc	hl
   2FAA 36 00              9285 	ld	(hl),#0x00
                           9286 ;demo.c:1321: cmd.command = 0x50;
   2FAC 3E 50              9287 	ld	a,#0x50
   2FAE 32r38s41           9288 	ld	(#_cmd + 14),a
                           9289 ;demo.c:1322: vdp_copier(&cmd);
   2FB1 21r2As41           9290 	ld	hl,#_cmd
   2FB4 E5                 9291 	push	hl
   2FB5 CDr00s00           9292 	call	_vdp_copier
   2FB8 F1                 9293 	pop	af
                           9294 ;demo.c:1325: cmd.data = 1+((pointframe>>2) & 0xe);
   2FB9 01r36s41           9295 	ld	bc,#_cmd + 12
   2FBC 21r30s42           9296 	ld	hl,#_pointframe + 0
   2FBF 5E                 9297 	ld	e,(hl)
   2FC0 21r31s42           9298 	ld	hl,#_pointframe + 1
   2FC3 56                 9299 	ld	d,(hl)
   2FC4 CB 2A              9300 	sra	d
   2FC6 CB 1B              9301 	rr	e
   2FC8 CB 2A              9302 	sra	d
   2FCA CB 1B              9303 	rr	e
   2FCC 7B                 9304 	ld	a,e
   2FCD E6 0E              9305 	and	a,#0x0E
   2FCF 3C                 9306 	inc	a
   2FD0 02                 9307 	ld	(bc),a
                           9308 ;demo.c:1326: cmd.dest_y = y;
   2FD1 21r30s41           9309 	ld	hl, #_cmd + 6
   2FD4 36 A2              9310 	ld	(hl),#0xA2
   2FD6 23                 9311 	inc	hl
   2FD7 36 00              9312 	ld	(hl),#0x00
                           9313 ;demo.c:1327: vdp_copier(&cmd);
   2FD9 21r2As41           9314 	ld	hl,#_cmd
   2FDC E5                 9315 	push	hl
   2FDD CDr00s00           9316 	call	_vdp_copier
   2FE0 F1                 9317 	pop	af
                           9318 ;demo.c:1329: pointframe+=1;
   2FE1 FD 21r30s42        9319 	ld	iy,#_pointframe
   2FE5 FD 34 00           9320 	inc	0 (iy)
   2FE8 20 07              9321 	jr	NZ,00149$
   2FEA FD 21r30s42        9322 	ld	iy,#_pointframe
   2FEE FD 34 01           9323 	inc	1 (iy)
   2FF1                    9324 00149$:
                           9325 ;demo.c:1316: for (x = 0; x < 256; x+=1) {
   2FF1 DD 34 FD           9326 	inc	-3 (ix)
   2FF4 20 03              9327 	jr	NZ,00150$
   2FF6 DD 34 FE           9328 	inc	-2 (ix)
   2FF9                    9329 00150$:
   2FF9 C3r73s2F           9330 	jp	00120$
   2FFC                    9331 00123$:
                           9332 ;demo.c:1332: initpoints = 1;
   2FFC 21r2Fs42           9333 	ld	hl,#_initpoints + 0
   2FFF 36 01              9334 	ld	(hl), #0x01
                           9335 ;demo.c:1333: ltrpointer = 0;
   3001 21rBEs41           9336 	ld	hl,#_ltrpointer + 0
   3004 36 00              9337 	ld	(hl), #0x00
   3006 21rBFs41           9338 	ld	hl,#_ltrpointer + 1
   3009 36 00              9339 	ld	(hl), #0x00
   300B                    9340 00105$:
                           9341 ;demo.c:1336: cmd.argument = 0x0;
   300B 3E 00              9342 	ld	a,#0x00
   300D 32r37s41           9343 	ld	(#_cmd + 13),a
                           9344 ;demo.c:1338: cmd.data = 1+((pointframe>>2) & 0xe);
   3010 01r36s41           9345 	ld	bc,#_cmd + 12
   3013 21r30s42           9346 	ld	hl,#_pointframe + 0
   3016 5E                 9347 	ld	e,(hl)
   3017 21r31s42           9348 	ld	hl,#_pointframe + 1
   301A 56                 9349 	ld	d,(hl)
   301B CB 2A              9350 	sra	d
   301D CB 1B              9351 	rr	e
   301F CB 2A              9352 	sra	d
   3021 CB 1B              9353 	rr	e
   3023 7B                 9354 	ld	a,e
   3024 E6 0E              9355 	and	a,#0x0E
   3026 3C                 9356 	inc	a
   3027 02                 9357 	ld	(bc),a
                           9358 ;demo.c:1340: for (x = 30; x < 162; x+=1) {
   3028 DD 36 FD 1E        9359 	ld	-3 (ix),#0x1E
   302C DD 36 FE 00        9360 	ld	-2 (ix),#0x00
   3030                    9361 00124$:
   3030 DD 7E FD           9362 	ld	a,-3 (ix)
   3033 D6 A2              9363 	sub	a,#0xA2
   3035 DD 7E FE           9364 	ld	a,-2 (ix)
   3038 DE 00              9365 	sbc	a,#0x00
   303A F2r83s30           9366 	jp	P,00127$
                           9367 ;demo.c:1341: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   303D 21r30s42           9368 	ld	hl,#_pointframe
   3040 DD 7E FD           9369 	ld	a,-3 (ix)
   3043 86                 9370 	add	a,(hl)
   3044 5F                 9371 	ld	e,a
   3045 DD 7E FE           9372 	ld	a,-2 (ix)
   3048 23                 9373 	inc	hl
   3049 8E                 9374 	adc	a,(hl)
   304A 16 00              9375 	ld	d,#0x00
   304C 21r2Cs00           9376 	ld	hl,#_sintabx
   304F 19                 9377 	add	hl,de
   3050 7E                 9378 	ld	a,(hl)
   3051 CB 3F              9379 	srl	a
   3053 C6 40              9380 	add	a,#0x40
   3055 4F                 9381 	ld	c,a
                           9382 ;demo.c:1342: cmd.dest_x = y;
   3056 11r2Es41           9383 	ld	de,#_cmd + 4
   3059 06 00              9384 	ld	b,#0x00
   305B 6B                 9385 	ld	l,e
   305C 62                 9386 	ld	h,d
   305D 71                 9387 	ld	(hl),c
   305E 23                 9388 	inc	hl
   305F 70                 9389 	ld	(hl),b
                           9390 ;demo.c:1343: cmd.dest_y = x;
   3060 21r30s41           9391 	ld	hl, #_cmd + 6
   3063 DD 7E FD           9392 	ld	a,-3 (ix)
   3066 77                 9393 	ld	(hl),a
   3067 23                 9394 	inc	hl
   3068 DD 7E FE           9395 	ld	a,-2 (ix)
   306B 77                 9396 	ld	(hl),a
                           9397 ;demo.c:1344: cmd.command = 0x53;
   306C 3E 53              9398 	ld	a,#0x53
   306E 32r38s41           9399 	ld	(#_cmd + 14),a
                           9400 ;demo.c:1345: vdp_copier(&cmd);
   3071 21r2As41           9401 	ld	hl,#_cmd
   3074 E5                 9402 	push	hl
   3075 CDr00s00           9403 	call	_vdp_copier
   3078 F1                 9404 	pop	af
                           9405 ;demo.c:1340: for (x = 30; x < 162; x+=1) {
   3079 DD 34 FD           9406 	inc	-3 (ix)
   307C 20 03              9407 	jr	NZ,00152$
   307E DD 34 FE           9408 	inc	-2 (ix)
   3081                    9409 00152$:
   3081 18 AD              9410 	jr	00124$
   3083                    9411 00127$:
                           9412 ;demo.c:1347: pointframe+=2;
   3083 21r30s42           9413 	ld	hl,#_pointframe
   3086 7E                 9414 	ld	a,(hl)
   3087 C6 02              9415 	add	a,#0x02
   3089 23                 9416 	inc	hl
   308A 2B                 9417 	dec	hl
   308B C5                 9418 	push	bc
   308C 4F                 9419 	ld	c, a
   308D 23                 9420 	inc	hl
   308E 7E                 9421 	ld	a, (hl)
   308F 47                 9422 	ld	b, a
   3090 79                 9423 	ld	a, c
   3091 2B                 9424 	dec	hl
   3092 77                 9425 	ld	(hl), a
   3093 78                 9426 	ld	a, b
   3094 C1                 9427 	pop	bc
   3095 CE 00              9428 	adc	a,#0x00
   3097 23                 9429 	inc	hl
   3098 77                 9430 	ld	(hl),a
                           9431 ;demo.c:1349: if (greetindex == 0) {
   3099 3Ar32s42           9432 	ld	a,(#_greetindex+0)
   309C 21r33s42           9433 	ld	hl,#_greetindex + 1
   309F B6                 9434 	or	a,(hl)
   30A0 20 17              9435 	jr	NZ,00107$
                           9436 ;demo.c:1350: slowend = 27;
   30A2 21rC0s41           9437 	ld	hl,#_slowend + 0
   30A5 36 1B              9438 	ld	(hl), #0x1B
   30A7 21rC1s41           9439 	ld	hl,#_slowend + 1
   30AA 36 00              9440 	ld	(hl), #0x00
                           9441 ;demo.c:1351: drawstrslow("GREETINGS TO VARIOUS GROUPS",10,20);
   30AC 21 0A 14           9442 	ld	hl,#0x140A
   30AF E5                 9443 	push	hl
   30B0 21r65s31           9444 	ld	hl,#__str_9
   30B3 E5                 9445 	push	hl
   30B4 CDrDAs10           9446 	call	_drawstrslow
   30B7 F1                 9447 	pop	af
   30B8 F1                 9448 	pop	af
   30B9                    9449 00107$:
                           9450 ;demo.c:1353: if (greetindex == 1) {
   30B9 3Ar32s42           9451 	ld	a,(#_greetindex+0)
   30BC D6 01              9452 	sub	a,#0x01
   30BE 20 06              9453 	jr	NZ,00153$
   30C0 3Ar33s42           9454 	ld	a,(#_greetindex+1)
   30C3 B7                 9455 	or	a,a
   30C4 28 02              9456 	jr	Z,00154$
   30C6                    9457 00153$:
   30C6 18 17              9458 	jr	00109$
   30C8                    9459 00154$:
                           9460 ;demo.c:1354: slowend = 33;
   30C8 21rC0s41           9461 	ld	hl,#_slowend + 0
   30CB 36 21              9462 	ld	(hl), #0x21
   30CD 21rC1s41           9463 	ld	hl,#_slowend + 1
   30D0 36 00              9464 	ld	(hl), #0x00
                           9465 ;demo.c:1355: drawstrslow("Trilobit  Prismbeings  Ivory Labs",10,164);
   30D2 21 0A A4           9466 	ld	hl,#0xA40A
   30D5 E5                 9467 	push	hl
   30D6 21r81s31           9468 	ld	hl,#__str_10
   30D9 E5                 9469 	push	hl
   30DA CDrDAs10           9470 	call	_drawstrslow
   30DD F1                 9471 	pop	af
   30DE F1                 9472 	pop	af
   30DF                    9473 00109$:
                           9474 ;demo.c:1357: if (greetindex == 2) {
   30DF 3Ar32s42           9475 	ld	a,(#_greetindex+0)
   30E2 D6 02              9476 	sub	a,#0x02
   30E4 20 06              9477 	jr	NZ,00155$
   30E6 3Ar33s42           9478 	ld	a,(#_greetindex+1)
   30E9 B7                 9479 	or	a,a
   30EA 28 02              9480 	jr	Z,00156$
   30EC                    9481 00155$:
   30EC 18 17              9482 	jr	00111$
   30EE                    9483 00156$:
                           9484 ;demo.c:1358: slowend = 29;
   30EE 21rC0s41           9485 	ld	hl,#_slowend + 0
   30F1 36 1D              9486 	ld	(hl), #0x1D
   30F3 21rC1s41           9487 	ld	hl,#_slowend + 1
   30F6 36 00              9488 	ld	(hl), #0x00
                           9489 ;demo.c:1359: drawstrslow("PWP  Dekadence  Paraguay  ISO",18,174);
   30F8 21 12 AE           9490 	ld	hl,#0xAE12
   30FB E5                 9491 	push	hl
   30FC 21rA3s31           9492 	ld	hl,#__str_11
   30FF E5                 9493 	push	hl
   3100 CDrDAs10           9494 	call	_drawstrslow
   3103 F1                 9495 	pop	af
   3104 F1                 9496 	pop	af
   3105                    9497 00111$:
                           9498 ;demo.c:1361: if (greetindex == 3) {
   3105 3Ar32s42           9499 	ld	a,(#_greetindex+0)
   3108 D6 03              9500 	sub	a,#0x03
   310A 20 06              9501 	jr	NZ,00157$
   310C 3Ar33s42           9502 	ld	a,(#_greetindex+1)
   310F B7                 9503 	or	a,a
   3110 28 02              9504 	jr	Z,00158$
   3112                    9505 00157$:
   3112 18 17              9506 	jr	00113$
   3114                    9507 00158$:
                           9508 ;demo.c:1362: slowend = 17;
   3114 21rC0s41           9509 	ld	hl,#_slowend + 0
   3117 36 11              9510 	ld	(hl), #0x11
   3119 21rC1s41           9511 	ld	hl,#_slowend + 1
   311C 36 00              9512 	ld	(hl), #0x00
                           9513 ;demo.c:1363: drawstrslow("Furry Trash Group",26,184);
   311E 21 1A B8           9514 	ld	hl,#0xB81A
   3121 E5                 9515 	push	hl
   3122 21rC1s31           9516 	ld	hl,#__str_12
   3125 E5                 9517 	push	hl
   3126 CDrDAs10           9518 	call	_drawstrslow
   3129 F1                 9519 	pop	af
   312A F1                 9520 	pop	af
   312B                    9521 00113$:
                           9522 ;demo.c:1365: if (ltrpointer >= slowend) { greetindex++; ltrpointer = 0; }
   312B 21rC0s41           9523 	ld	hl,#_slowend
   312E 3ArBEs41           9524 	ld	a,(#_ltrpointer+0)
   3131 96                 9525 	sub	a,(hl)
   3132 3ArBFs41           9526 	ld	a,(#_ltrpointer+1)
   3135 23                 9527 	inc	hl
   3136 9E                 9528 	sbc	a,(hl)
   3137 FAr54s31           9529 	jp	M,00115$
   313A FD 21r32s42        9530 	ld	iy,#_greetindex
   313E FD 34 00           9531 	inc	0 (iy)
   3141 20 07              9532 	jr	NZ,00159$
   3143 FD 21r32s42        9533 	ld	iy,#_greetindex
   3147 FD 34 01           9534 	inc	1 (iy)
   314A                    9535 00159$:
   314A 21rBEs41           9536 	ld	hl,#_ltrpointer + 0
   314D 36 00              9537 	ld	(hl), #0x00
   314F 21rBFs41           9538 	ld	hl,#_ltrpointer + 1
   3152 36 00              9539 	ld	(hl), #0x00
   3154                    9540 00115$:
                           9541 ;demo.c:1367: msx2_palette(4,0,0,0);
   3154 21 00 00           9542 	ld	hl,#0x0000
   3157 E5                 9543 	push	hl
   3158 2E 04              9544 	ld	l, #0x04
   315A E5                 9545 	push	hl
   315B CDr00s00           9546 	call	_msx2_palette
   315E F1                 9547 	pop	af
   315F F1                 9548 	pop	af
   3160 DD F9              9549 	ld	sp,ix
   3162 DD E1              9550 	pop	ix
   3164 C9                 9551 	ret
   3165                    9552 _points_end::
   3165                    9553 __str_9:
   3165 47 52 45 45 54 49  9554 	.ascii "GREETINGS TO VARIOUS GROUPS"
        4E 47 53 20 54 4F
        20 56 41 52 49 4F
        55 53 20 47 52 4F
        55 50 53
   3180 00                 9555 	.db 0x00
   3181                    9556 __str_10:
   3181 54 72 69 6C 6F 62  9557 	.ascii "Trilobit  Prismbeings  Ivory Labs"
        69 74 20 20 50 72
        69 73 6D 62 65 69
        6E 67 73 20 20 49
        76 6F 72 79 20 4C
        61 62 73
   31A2 00                 9558 	.db 0x00
   31A3                    9559 __str_11:
   31A3 50 57 50 20 20 44  9560 	.ascii "PWP  Dekadence  Paraguay  ISO"
        65 6B 61 64 65 6E
        63 65 20 20 50 61
        72 61 67 75 61 79
        20 20 49 53 4F
   31C0 00                 9561 	.db 0x00
   31C1                    9562 __str_12:
   31C1 46 75 72 72 79 20  9563 	.ascii "Furry Trash Group"
        54 72 61 73 68 20
        47 72 6F 75 70
   31D2 00                 9564 	.db 0x00
                           9565 ;demo.c:1372: void bigtext() {
                           9566 ;	---------------------------------
                           9567 ; Function bigtext
                           9568 ; ---------------------------------
   31D3                    9569 _bigtext_start::
   31D3                    9570 _bigtext:
   31D3 DD E5              9571 	push	ix
   31D5 DD 21 00 00        9572 	ld	ix,#0
   31D9 DD 39              9573 	add	ix,sp
   31DB F5                 9574 	push	af
                           9575 ;demo.c:1374: if (bigtextp == 0) {
   31DC 3Ar34s42           9576 	ld	a,(#_bigtextp+0)
   31DF FD 21r34s42        9577 	ld	iy,#_bigtextp
   31E3 FD B6 01           9578 	or	a,1 (iy)
   31E6 C2rF3s32           9579 	jp	NZ,00102$
                           9580 ;demo.c:1375: cmd.size_x = 2;
   31E9 21r32s41           9581 	ld	hl, #_cmd + 8
   31EC 36 02              9582 	ld	(hl),#0x02
   31EE 23                 9583 	inc	hl
   31EF 36 00              9584 	ld	(hl),#0x00
                           9585 ;demo.c:1376: cmd.size_y = 212;
   31F1 21r34s41           9586 	ld	hl, #_cmd + 10
   31F4 36 D4              9587 	ld	(hl),#0xD4
   31F6 23                 9588 	inc	hl
   31F7 36 00              9589 	ld	(hl),#0x00
                           9590 ;demo.c:1377: cmd.data = 0;
                           9591 ;demo.c:1378: cmd.argument = 0x00; // from 70xY to left
   31F9 3E 00              9592 	ld	a,#0x00
   31FB 32r36s41           9593 	ld	(#_cmd + 12),a
   31FE 32r37s41           9594 	ld	(#_cmd + 13),a
                           9595 ;demo.c:1379: cmd.command = 0xd0; // vram to vram, y only
   3201 01r38s41           9596 	ld	bc,#_cmd + 14
   3204 3E D0              9597 	ld	a,#0xD0
   3206 02                 9598 	ld	(bc),a
                           9599 ;demo.c:1380: cmd.source_x = 255;
   3207 21r2As41           9600 	ld	hl,#_cmd
   320A 36 FF              9601 	ld	(hl),#0xFF
   320C 23                 9602 	inc	hl
   320D 36 00              9603 	ld	(hl),#0x00
                           9604 ;demo.c:1381: cmd.source_y = 0;
   320F 21r2Cs41           9605 	ld	hl, #_cmd + 2
   3212 36 00              9606 	ld	(hl),#0x00
   3214 23                 9607 	inc	hl
   3215 36 00              9608 	ld	(hl),#0x00
                           9609 ;demo.c:1383: for (x = 0; x < 256; x+=4) {
   3217 01 00 00           9610 	ld	bc,#0x0000
   321A                    9611 00128$:
   321A 79                 9612 	ld	a,c
   321B D6 00              9613 	sub	a,#0x00
   321D 78                 9614 	ld	a,b
   321E DE 01              9615 	sbc	a,#0x01
   3220 F2r57s32           9616 	jp	P,00131$
                           9617 ;demo.c:1384: waitVB();
   3223 76                 9618 		halt 
                           9619 ;demo.c:1385: cmd.dest_y = 256;
   3224 11r30s41           9620 	ld	de,#_cmd + 6
   3227 EB                 9621 	ex	de,hl
   3228 36 00              9622 	ld	(hl),#0x00
   322A 23                 9623 	inc	hl
   322B 36 01              9624 	ld	(hl),#0x01
                           9625 ;demo.c:1386: cmd.dest_x = x;
   322D 11r2Es41           9626 	ld	de,#_cmd + 4
   3230 EB                 9627 	ex	de,hl
   3231 71                 9628 	ld	(hl),c
   3232 23                 9629 	inc	hl
   3233 70                 9630 	ld	(hl),b
                           9631 ;demo.c:1387: vdp_copier(&cmd);
   3234 C5                 9632 	push	bc
   3235 21r2As41           9633 	ld	hl,#_cmd
   3238 E5                 9634 	push	hl
   3239 CDr00s00           9635 	call	_vdp_copier
   323C F1                 9636 	pop	af
   323D C1                 9637 	pop	bc
                           9638 ;demo.c:1388: cmd.dest_y = 0;
   323E 11r30s41           9639 	ld	de,#_cmd + 6
   3241 EB                 9640 	ex	de,hl
   3242 36 00              9641 	ld	(hl),#0x00
   3244 23                 9642 	inc	hl
   3245 36 00              9643 	ld	(hl),#0x00
                           9644 ;demo.c:1389: vdp_copier(&cmd);
   3247 C5                 9645 	push	bc
   3248 21r2As41           9646 	ld	hl,#_cmd
   324B E5                 9647 	push	hl
   324C CDr00s00           9648 	call	_vdp_copier
   324F F1                 9649 	pop	af
   3250 C1                 9650 	pop	bc
                           9651 ;demo.c:1383: for (x = 0; x < 256; x+=4) {
   3251 03                 9652 	inc	bc
   3252 03                 9653 	inc	bc
   3253 03                 9654 	inc	bc
   3254 03                 9655 	inc	bc
   3255 18 C3              9656 	jr	00128$
   3257                    9657 00131$:
                           9658 ;demo.c:1392: for (x = 254; x > 0; x-=4) {
   3257 01 FE 00           9659 	ld	bc,#0x00FE
   325A                    9660 00132$:
   325A 3E 00              9661 	ld	a,#0x00
   325C 91                 9662 	sub	a,c
   325D 3E 00              9663 	ld	a,#0x00
   325F 98                 9664 	sbc	a,b
   3260 F2r9Bs32           9665 	jp	P,00135$
                           9666 ;demo.c:1393: waitVB();
   3263 76                 9667 		halt 
                           9668 ;demo.c:1394: cmd.dest_y = 256;
   3264 11r30s41           9669 	ld	de,#_cmd + 6
   3267 EB                 9670 	ex	de,hl
   3268 36 00              9671 	ld	(hl),#0x00
   326A 23                 9672 	inc	hl
   326B 36 01              9673 	ld	(hl),#0x01
                           9674 ;demo.c:1395: cmd.dest_x = x;
   326D 11r2Es41           9675 	ld	de,#_cmd + 4
   3270 EB                 9676 	ex	de,hl
   3271 71                 9677 	ld	(hl),c
   3272 23                 9678 	inc	hl
   3273 70                 9679 	ld	(hl),b
                           9680 ;demo.c:1396: vdp_copier(&cmd);
   3274 C5                 9681 	push	bc
   3275 21r2As41           9682 	ld	hl,#_cmd
   3278 E5                 9683 	push	hl
   3279 CDr00s00           9684 	call	_vdp_copier
   327C F1                 9685 	pop	af
   327D C1                 9686 	pop	bc
                           9687 ;demo.c:1397: cmd.dest_y = 0;
   327E 11r30s41           9688 	ld	de,#_cmd + 6
   3281 EB                 9689 	ex	de,hl
   3282 36 00              9690 	ld	(hl),#0x00
   3284 23                 9691 	inc	hl
   3285 36 00              9692 	ld	(hl),#0x00
                           9693 ;demo.c:1398: vdp_copier(&cmd);
   3287 C5                 9694 	push	bc
   3288 21r2As41           9695 	ld	hl,#_cmd
   328B E5                 9696 	push	hl
   328C CDr00s00           9697 	call	_vdp_copier
   328F F1                 9698 	pop	af
   3290 C1                 9699 	pop	bc
                           9700 ;demo.c:1392: for (x = 254; x > 0; x-=4) {
   3291 79                 9701 	ld	a,c
   3292 C6 FC              9702 	add	a,#0xFC
   3294 4F                 9703 	ld	c,a
   3295 78                 9704 	ld	a,b
   3296 CE FF              9705 	adc	a,#0xFF
   3298 47                 9706 	ld	b,a
   3299 18 BF              9707 	jr	00132$
   329B                    9708 00135$:
                           9709 ;demo.c:1401: vdp_load_palette(boxes_palette);
   329B 21rE6s40           9710 	ld	hl,#_boxes_palette
   329E E5                 9711 	push	hl
   329F CDr00s00           9712 	call	_vdp_load_palette
   32A2 F1                 9713 	pop	af
                           9714 ;demo.c:1402: drawstr2x("DIGITAL",26,44);
   32A3 21 1A 2C           9715 	ld	hl,#0x2C1A
   32A6 E5                 9716 	push	hl
   32A7 21rD9s38           9717 	ld	hl,#__str_13
   32AA E5                 9718 	push	hl
   32AB CDr78s11           9719 	call	_drawstr2x
   32AE F1                 9720 	pop	af
   32AF F1                 9721 	pop	af
                           9722 ;demo.c:1403: drawstr2x("SOUNDS",27,84);
   32B0 21 1B 54           9723 	ld	hl,#0x541B
   32B3 E5                 9724 	push	hl
   32B4 21rE1s38           9725 	ld	hl,#__str_14
   32B7 E5                 9726 	push	hl
   32B8 CDr78s11           9727 	call	_drawstr2x
   32BB F1                 9728 	pop	af
   32BC F1                 9729 	pop	af
                           9730 ;demo.c:1404: drawstr2x("SYSTEM",25,124);
   32BD 21 19 7C           9731 	ld	hl,#0x7C19
   32C0 E5                 9732 	push	hl
   32C1 21rE8s38           9733 	ld	hl,#__str_15
   32C4 E5                 9734 	push	hl
   32C5 CDr78s11           9735 	call	_drawstr2x
   32C8 F1                 9736 	pop	af
   32C9 F1                 9737 	pop	af
                           9738 ;demo.c:1405: bigtextp++;
   32CA FD 21r34s42        9739 	ld	iy,#_bigtextp
   32CE FD 34 00           9740 	inc	0 (iy)
   32D1 20 07              9741 	jr	NZ,00188$
   32D3 FD 21r34s42        9742 	ld	iy,#_bigtextp
   32D7 FD 34 01           9743 	inc	1 (iy)
   32DA                    9744 00188$:
                           9745 ;demo.c:1406: tri_inited = 2;
   32DA 21r15s42           9746 	ld	hl,#_tri_inited + 0
   32DD 36 02              9747 	ld	(hl), #0x02
                           9748 ;demo.c:1407: ff = 0;
   32DF 21rC2s41           9749 	ld	hl,#_ff + 0
   32E2 36 00              9750 	ld	(hl), #0x00
   32E4 21rC3s41           9751 	ld	hl,#_ff + 1
   32E7 36 00              9752 	ld	(hl), #0x00
                           9753 ;demo.c:1408: ltrpointer = 0;
   32E9 21rBEs41           9754 	ld	hl,#_ltrpointer + 0
   32EC 36 00              9755 	ld	(hl), #0x00
   32EE 21rBFs41           9756 	ld	hl,#_ltrpointer + 1
   32F1 36 00              9757 	ld	(hl), #0x00
   32F3                    9758 00102$:
                           9759 ;demo.c:1411: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   32F3 21rC2s41           9760 	ld	hl,#_ff + 0
   32F6 4E                 9761 	ld	c,(hl)
   32F7 21rC3s41           9762 	ld	hl,#_ff + 1
   32FA 46                 9763 	ld	b,(hl)
   32FB CB 28              9764 	sra	b
   32FD CB 19              9765 	rr	c
   32FF CB 28              9766 	sra	b
   3301 CB 19              9767 	rr	c
   3303 21rC2s41           9768 	ld	hl,#_ff + 0
   3306 5E                 9769 	ld	e,(hl)
   3307 21rC3s41           9770 	ld	hl,#_ff + 1
   330A 56                 9771 	ld	d,(hl)
   330B CB 2A              9772 	sra	d
   330D CB 1B              9773 	rr	e
   330F CB 2A              9774 	sra	d
   3311 CB 1B              9775 	rr	e
   3313 CB 2A              9776 	sra	d
   3315 CB 1B              9777 	rr	e
   3317 43                 9778 	ld	b,e
   3318 79                 9779 	ld	a,c
   3319 F5                 9780 	push	af
   331A 33                 9781 	inc	sp
   331B C5                 9782 	push	bc
   331C 33                 9783 	inc	sp
   331D 41                 9784 	ld	b,c
   331E 0E 04              9785 	ld	c,#0x04
   3320 C5                 9786 	push	bc
   3321 CDr00s00           9787 	call	_msx2_palette
   3324 F1                 9788 	pop	af
   3325 F1                 9789 	pop	af
                           9790 ;demo.c:1412: ff+=2;
   3326 21rC2s41           9791 	ld	hl,#_ff
   3329 7E                 9792 	ld	a,(hl)
   332A C6 02              9793 	add	a,#0x02
   332C 23                 9794 	inc	hl
   332D 2B                 9795 	dec	hl
   332E C5                 9796 	push	bc
   332F 4F                 9797 	ld	c, a
   3330 23                 9798 	inc	hl
   3331 7E                 9799 	ld	a, (hl)
   3332 47                 9800 	ld	b, a
   3333 79                 9801 	ld	a, c
   3334 2B                 9802 	dec	hl
   3335 77                 9803 	ld	(hl), a
   3336 78                 9804 	ld	a, b
   3337 C1                 9805 	pop	bc
   3338 CE 00              9806 	adc	a,#0x00
   333A 23                 9807 	inc	hl
   333B 77                 9808 	ld	(hl),a
                           9809 ;demo.c:1414: if (ff == 600) {
   333C 3ArC2s41           9810 	ld	a,(#_ff+0)
   333F D6 58              9811 	sub	a,#0x58
   3341 20 07              9812 	jr	NZ,00191$
   3343 3ArC3s41           9813 	ld	a,(#_ff+1)
   3346 D6 02              9814 	sub	a,#0x02
   3348 28 03              9815 	jr	Z,00192$
   334A                    9816 00191$:
   334A C3rDCs34           9817 	jp	00104$
   334D                    9818 00192$:
                           9819 ;demo.c:1415: cmd.size_x = 2;
   334D 21r32s41           9820 	ld	hl, #_cmd + 8
   3350 36 02              9821 	ld	(hl),#0x02
   3352 23                 9822 	inc	hl
   3353 36 00              9823 	ld	(hl),#0x00
                           9824 ;demo.c:1416: cmd.size_y = 212;
   3355 21r34s41           9825 	ld	hl, #_cmd + 10
   3358 36 D4              9826 	ld	(hl),#0xD4
   335A 23                 9827 	inc	hl
   335B 36 00              9828 	ld	(hl),#0x00
                           9829 ;demo.c:1417: cmd.data = 0;
                           9830 ;demo.c:1418: cmd.argument = 0x00; // from 70xY to left
   335D 3E 00              9831 	ld	a,#0x00
   335F 32r36s41           9832 	ld	(#_cmd + 12),a
   3362 32r37s41           9833 	ld	(#_cmd + 13),a
                           9834 ;demo.c:1419: cmd.command = 0xd0; // vram to vram, y only
   3365 01r38s41           9835 	ld	bc,#_cmd + 14
   3368 3E D0              9836 	ld	a,#0xD0
   336A 02                 9837 	ld	(bc),a
                           9838 ;demo.c:1420: cmd.source_x = 255;
   336B 21r2As41           9839 	ld	hl,#_cmd
   336E 36 FF              9840 	ld	(hl),#0xFF
   3370 23                 9841 	inc	hl
   3371 36 00              9842 	ld	(hl),#0x00
                           9843 ;demo.c:1421: cmd.source_y = 0;
   3373 21r2Cs41           9844 	ld	hl, #_cmd + 2
   3376 36 00              9845 	ld	(hl),#0x00
   3378 23                 9846 	inc	hl
   3379 36 00              9847 	ld	(hl),#0x00
                           9848 ;demo.c:1423: for (x = 254; x > 0; x-=4) {
   337B DD 36 FE FE        9849 	ld	-2 (ix),#0xFE
   337F DD 36 FF 00        9850 	ld	-1 (ix),#0x00
   3383                    9851 00136$:
   3383 3E 00              9852 	ld	a,#0x00
   3385 DD 96 FE           9853 	sub	a,-2 (ix)
   3388 3E 00              9854 	ld	a,#0x00
   338A DD 9E FF           9855 	sbc	a,-1 (ix)
   338D F2r18s34           9856 	jp	P,00139$
                           9857 ;demo.c:1424: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3390 21rC2s41           9858 	ld	hl,#_ff + 0
   3393 5E                 9859 	ld	e,(hl)
   3394 21rC3s41           9860 	ld	hl,#_ff + 1
   3397 56                 9861 	ld	d,(hl)
   3398 CB 2A              9862 	sra	d
   339A CB 1B              9863 	rr	e
   339C CB 2A              9864 	sra	d
   339E CB 1B              9865 	rr	e
   33A0 21rC2s41           9866 	ld	hl,#_ff + 0
   33A3 56                 9867 	ld	d,(hl)
   33A4 21rC3s41           9868 	ld	hl,#_ff + 1
   33A7 4E                 9869 	ld	c,(hl)
   33A8 CB 29              9870 	sra	c
   33AA CB 1A              9871 	rr	d
   33AC CB 29              9872 	sra	c
   33AE CB 1A              9873 	rr	d
   33B0 CB 29              9874 	sra	c
   33B2 CB 1A              9875 	rr	d
   33B4 7B                 9876 	ld	a,e
   33B5 F5                 9877 	push	af
   33B6 33                 9878 	inc	sp
   33B7 D5                 9879 	push	de
   33B8 33                 9880 	inc	sp
   33B9 53                 9881 	ld	d,e
   33BA 1E 04              9882 	ld	e,#0x04
   33BC D5                 9883 	push	de
   33BD CDr00s00           9884 	call	_msx2_palette
   33C0 F1                 9885 	pop	af
   33C1 F1                 9886 	pop	af
                           9887 ;demo.c:1425: ff+=2;
   33C2 21rC2s41           9888 	ld	hl,#_ff
   33C5 7E                 9889 	ld	a,(hl)
   33C6 C6 02              9890 	add	a,#0x02
   33C8 23                 9891 	inc	hl
   33C9 2B                 9892 	dec	hl
   33CA C5                 9893 	push	bc
   33CB 4F                 9894 	ld	c, a
   33CC 23                 9895 	inc	hl
   33CD 7E                 9896 	ld	a, (hl)
   33CE 47                 9897 	ld	b, a
   33CF 79                 9898 	ld	a, c
   33D0 2B                 9899 	dec	hl
   33D1 77                 9900 	ld	(hl), a
   33D2 78                 9901 	ld	a, b
   33D3 C1                 9902 	pop	bc
   33D4 CE 00              9903 	adc	a,#0x00
   33D6 23                 9904 	inc	hl
   33D7 77                 9905 	ld	(hl),a
                           9906 ;demo.c:1426: waitVB();
   33D8 76                 9907 		halt 
                           9908 ;demo.c:1427: cmd.dest_y = 256;
   33D9 21r30s41           9909 	ld	hl, #_cmd + 6
   33DC 36 00              9910 	ld	(hl),#0x00
   33DE 23                 9911 	inc	hl
   33DF 36 01              9912 	ld	(hl),#0x01
                           9913 ;demo.c:1428: cmd.dest_x = x;
   33E1 21r2Es41           9914 	ld	hl, #_cmd + 4
   33E4 DD 7E FE           9915 	ld	a,-2 (ix)
   33E7 77                 9916 	ld	(hl),a
   33E8 23                 9917 	inc	hl
   33E9 DD 7E FF           9918 	ld	a,-1 (ix)
   33EC 77                 9919 	ld	(hl),a
                           9920 ;demo.c:1429: vdp_copier(&cmd);
   33ED 21r2As41           9921 	ld	hl,#_cmd
   33F0 E5                 9922 	push	hl
   33F1 CDr00s00           9923 	call	_vdp_copier
   33F4 F1                 9924 	pop	af
                           9925 ;demo.c:1430: cmd.dest_y = 0;
   33F5 21r30s41           9926 	ld	hl, #_cmd + 6
   33F8 36 00              9927 	ld	(hl),#0x00
   33FA 23                 9928 	inc	hl
   33FB 36 00              9929 	ld	(hl),#0x00
                           9930 ;demo.c:1431: vdp_copier(&cmd);
   33FD 21r2As41           9931 	ld	hl,#_cmd
   3400 E5                 9932 	push	hl
   3401 CDr00s00           9933 	call	_vdp_copier
   3404 F1                 9934 	pop	af
                           9935 ;demo.c:1423: for (x = 254; x > 0; x-=4) {
   3405 DD 7E FE           9936 	ld	a,-2 (ix)
   3408 C6 FC              9937 	add	a,#0xFC
   340A DD 77 FE           9938 	ld	-2 (ix),a
   340D DD 7E FF           9939 	ld	a,-1 (ix)
   3410 CE FF              9940 	adc	a,#0xFF
   3412 DD 77 FF           9941 	ld	-1 (ix),a
   3415 C3r83s33           9942 	jp	00136$
   3418                    9943 00139$:
                           9944 ;demo.c:1435: for (x = 0; x < 256; x+=4) {
   3418 DD 36 FE 00        9945 	ld	-2 (ix),#0x00
   341C DD 36 FF 00        9946 	ld	-1 (ix),#0x00
   3420                    9947 00140$:
   3420 DD 7E FE           9948 	ld	a,-2 (ix)
   3423 D6 00              9949 	sub	a,#0x00
   3425 DD 7E FF           9950 	ld	a,-1 (ix)
   3428 DE 01              9951 	sbc	a,#0x01
   342A F2rB5s34           9952 	jp	P,00143$
                           9953 ;demo.c:1436: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   342D 21rC2s41           9954 	ld	hl,#_ff + 0
   3430 5E                 9955 	ld	e,(hl)
   3431 21rC3s41           9956 	ld	hl,#_ff + 1
   3434 56                 9957 	ld	d,(hl)
   3435 CB 2A              9958 	sra	d
   3437 CB 1B              9959 	rr	e
   3439 CB 2A              9960 	sra	d
   343B CB 1B              9961 	rr	e
   343D 21rC2s41           9962 	ld	hl,#_ff + 0
   3440 56                 9963 	ld	d,(hl)
   3441 21rC3s41           9964 	ld	hl,#_ff + 1
   3444 4E                 9965 	ld	c,(hl)
   3445 CB 29              9966 	sra	c
   3447 CB 1A              9967 	rr	d
   3449 CB 29              9968 	sra	c
   344B CB 1A              9969 	rr	d
   344D CB 29              9970 	sra	c
   344F CB 1A              9971 	rr	d
   3451 7B                 9972 	ld	a,e
   3452 F5                 9973 	push	af
   3453 33                 9974 	inc	sp
   3454 D5                 9975 	push	de
   3455 33                 9976 	inc	sp
   3456 53                 9977 	ld	d,e
   3457 1E 04              9978 	ld	e,#0x04
   3459 D5                 9979 	push	de
   345A CDr00s00           9980 	call	_msx2_palette
   345D F1                 9981 	pop	af
   345E F1                 9982 	pop	af
                           9983 ;demo.c:1437: ff+=2;
   345F 21rC2s41           9984 	ld	hl,#_ff
   3462 7E                 9985 	ld	a,(hl)
   3463 C6 02              9986 	add	a,#0x02
   3465 23                 9987 	inc	hl
   3466 2B                 9988 	dec	hl
   3467 C5                 9989 	push	bc
   3468 4F                 9990 	ld	c, a
   3469 23                 9991 	inc	hl
   346A 7E                 9992 	ld	a, (hl)
   346B 47                 9993 	ld	b, a
   346C 79                 9994 	ld	a, c
   346D 2B                 9995 	dec	hl
   346E 77                 9996 	ld	(hl), a
   346F 78                 9997 	ld	a, b
   3470 C1                 9998 	pop	bc
   3471 CE 00              9999 	adc	a,#0x00
   3473 23                10000 	inc	hl
   3474 77                10001 	ld	(hl),a
                          10002 ;demo.c:1438: waitVB();
   3475 76                10003 		halt 
                          10004 ;demo.c:1439: cmd.dest_y = 256;
   3476 21r30s41          10005 	ld	hl, #_cmd + 6
   3479 36 00             10006 	ld	(hl),#0x00
   347B 23                10007 	inc	hl
   347C 36 01             10008 	ld	(hl),#0x01
                          10009 ;demo.c:1440: cmd.dest_x = x;
   347E 21r2Es41          10010 	ld	hl, #_cmd + 4
   3481 DD 7E FE          10011 	ld	a,-2 (ix)
   3484 77                10012 	ld	(hl),a
   3485 23                10013 	inc	hl
   3486 DD 7E FF          10014 	ld	a,-1 (ix)
   3489 77                10015 	ld	(hl),a
                          10016 ;demo.c:1441: vdp_copier(&cmd);
   348A 21r2As41          10017 	ld	hl,#_cmd
   348D E5                10018 	push	hl
   348E CDr00s00          10019 	call	_vdp_copier
   3491 F1                10020 	pop	af
                          10021 ;demo.c:1442: cmd.dest_y = 0;
   3492 21r30s41          10022 	ld	hl, #_cmd + 6
   3495 36 00             10023 	ld	(hl),#0x00
   3497 23                10024 	inc	hl
   3498 36 00             10025 	ld	(hl),#0x00
                          10026 ;demo.c:1443: vdp_copier(&cmd);
   349A 21r2As41          10027 	ld	hl,#_cmd
   349D E5                10028 	push	hl
   349E CDr00s00          10029 	call	_vdp_copier
   34A1 F1                10030 	pop	af
                          10031 ;demo.c:1435: for (x = 0; x < 256; x+=4) {
   34A2 DD 7E FE          10032 	ld	a,-2 (ix)
   34A5 C6 04             10033 	add	a,#0x04
   34A7 DD 77 FE          10034 	ld	-2 (ix),a
   34AA DD 7E FF          10035 	ld	a,-1 (ix)
   34AD CE 00             10036 	adc	a,#0x00
   34AF DD 77 FF          10037 	ld	-1 (ix),a
   34B2 C3r20s34          10038 	jp	00140$
   34B5                   10039 00143$:
                          10040 ;demo.c:1446: drawstr2x("COMMAND",4,44);
   34B5 21 04 2C          10041 	ld	hl,#0x2C04
   34B8 E5                10042 	push	hl
   34B9 21rEFs38          10043 	ld	hl,#__str_16
   34BC E5                10044 	push	hl
   34BD CDr78s11          10045 	call	_drawstr2x
   34C0 F1                10046 	pop	af
   34C1 F1                10047 	pop	af
                          10048 ;demo.c:1447: drawstr2x("   THE  ",32,84);
   34C2 21 20 54          10049 	ld	hl,#0x5420
   34C5 E5                10050 	push	hl
   34C6 21rF7s38          10051 	ld	hl,#__str_17
   34C9 E5                10052 	push	hl
   34CA CDr78s11          10053 	call	_drawstr2x
   34CD F1                10054 	pop	af
   34CE F1                10055 	pop	af
                          10056 ;demo.c:1448: drawstr2x("  BASS ",35,124);
   34CF 21 23 7C          10057 	ld	hl,#0x7C23
   34D2 E5                10058 	push	hl
   34D3 21r00s39          10059 	ld	hl,#__str_18
   34D6 E5                10060 	push	hl
   34D7 CDr78s11          10061 	call	_drawstr2x
   34DA F1                10062 	pop	af
   34DB F1                10063 	pop	af
   34DC                   10064 00104$:
                          10065 ;demo.c:1451: if (ff == 1200) {
   34DC 3ArC2s41          10066 	ld	a,(#_ff+0)
   34DF D6 B0             10067 	sub	a,#0xB0
   34E1 20 07             10068 	jr	NZ,00197$
   34E3 3ArC3s41          10069 	ld	a,(#_ff+1)
   34E6 D6 04             10070 	sub	a,#0x04
   34E8 28 03             10071 	jr	Z,00198$
   34EA                   10072 00197$:
   34EA C3r7Cs36          10073 	jp	00106$
   34ED                   10074 00198$:
                          10075 ;demo.c:1452: cmd.size_x = 3;
   34ED 21r32s41          10076 	ld	hl, #_cmd + 8
   34F0 36 03             10077 	ld	(hl),#0x03
   34F2 23                10078 	inc	hl
   34F3 36 00             10079 	ld	(hl),#0x00
                          10080 ;demo.c:1453: cmd.size_y = 212;
   34F5 21r34s41          10081 	ld	hl, #_cmd + 10
   34F8 36 D4             10082 	ld	(hl),#0xD4
   34FA 23                10083 	inc	hl
   34FB 36 00             10084 	ld	(hl),#0x00
                          10085 ;demo.c:1454: cmd.data = 0;
                          10086 ;demo.c:1455: cmd.argument = 0x00; // from 70xY to left
   34FD 3E 00             10087 	ld	a,#0x00
   34FF 32r36s41          10088 	ld	(#_cmd + 12),a
   3502 32r37s41          10089 	ld	(#_cmd + 13),a
                          10090 ;demo.c:1456: cmd.command = 0xd0; // vram to vram, y only
   3505 01r38s41          10091 	ld	bc,#_cmd + 14
   3508 3E D0             10092 	ld	a,#0xD0
   350A 02                10093 	ld	(bc),a
                          10094 ;demo.c:1457: cmd.source_x = 255;
   350B 21r2As41          10095 	ld	hl,#_cmd
   350E 36 FF             10096 	ld	(hl),#0xFF
   3510 23                10097 	inc	hl
   3511 36 00             10098 	ld	(hl),#0x00
                          10099 ;demo.c:1458: cmd.source_y = 0;
   3513 21r2Cs41          10100 	ld	hl, #_cmd + 2
   3516 36 00             10101 	ld	(hl),#0x00
   3518 23                10102 	inc	hl
   3519 36 00             10103 	ld	(hl),#0x00
                          10104 ;demo.c:1460: for (x = 254; x > 0; x-=4) {
   351B DD 36 FE FE       10105 	ld	-2 (ix),#0xFE
   351F DD 36 FF 00       10106 	ld	-1 (ix),#0x00
   3523                   10107 00144$:
   3523 3E 00             10108 	ld	a,#0x00
   3525 DD 96 FE          10109 	sub	a,-2 (ix)
   3528 3E 00             10110 	ld	a,#0x00
   352A DD 9E FF          10111 	sbc	a,-1 (ix)
   352D F2rB8s35          10112 	jp	P,00147$
                          10113 ;demo.c:1461: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3530 21rC2s41          10114 	ld	hl,#_ff + 0
   3533 5E                10115 	ld	e,(hl)
   3534 21rC3s41          10116 	ld	hl,#_ff + 1
   3537 56                10117 	ld	d,(hl)
   3538 CB 2A             10118 	sra	d
   353A CB 1B             10119 	rr	e
   353C CB 2A             10120 	sra	d
   353E CB 1B             10121 	rr	e
   3540 21rC2s41          10122 	ld	hl,#_ff + 0
   3543 56                10123 	ld	d,(hl)
   3544 21rC3s41          10124 	ld	hl,#_ff + 1
   3547 4E                10125 	ld	c,(hl)
   3548 CB 29             10126 	sra	c
   354A CB 1A             10127 	rr	d
   354C CB 29             10128 	sra	c
   354E CB 1A             10129 	rr	d
   3550 CB 29             10130 	sra	c
   3552 CB 1A             10131 	rr	d
   3554 7B                10132 	ld	a,e
   3555 F5                10133 	push	af
   3556 33                10134 	inc	sp
   3557 D5                10135 	push	de
   3558 33                10136 	inc	sp
   3559 53                10137 	ld	d,e
   355A 1E 04             10138 	ld	e,#0x04
   355C D5                10139 	push	de
   355D CDr00s00          10140 	call	_msx2_palette
   3560 F1                10141 	pop	af
   3561 F1                10142 	pop	af
                          10143 ;demo.c:1462: ff+=2;
   3562 21rC2s41          10144 	ld	hl,#_ff
   3565 7E                10145 	ld	a,(hl)
   3566 C6 02             10146 	add	a,#0x02
   3568 23                10147 	inc	hl
   3569 2B                10148 	dec	hl
   356A C5                10149 	push	bc
   356B 4F                10150 	ld	c, a
   356C 23                10151 	inc	hl
   356D 7E                10152 	ld	a, (hl)
   356E 47                10153 	ld	b, a
   356F 79                10154 	ld	a, c
   3570 2B                10155 	dec	hl
   3571 77                10156 	ld	(hl), a
   3572 78                10157 	ld	a, b
   3573 C1                10158 	pop	bc
   3574 CE 00             10159 	adc	a,#0x00
   3576 23                10160 	inc	hl
   3577 77                10161 	ld	(hl),a
                          10162 ;demo.c:1463: waitVB();
   3578 76                10163 		halt 
                          10164 ;demo.c:1464: cmd.dest_y = 256;
   3579 21r30s41          10165 	ld	hl, #_cmd + 6
   357C 36 00             10166 	ld	(hl),#0x00
   357E 23                10167 	inc	hl
   357F 36 01             10168 	ld	(hl),#0x01
                          10169 ;demo.c:1465: cmd.dest_x = x;
   3581 21r2Es41          10170 	ld	hl, #_cmd + 4
   3584 DD 7E FE          10171 	ld	a,-2 (ix)
   3587 77                10172 	ld	(hl),a
   3588 23                10173 	inc	hl
   3589 DD 7E FF          10174 	ld	a,-1 (ix)
   358C 77                10175 	ld	(hl),a
                          10176 ;demo.c:1466: vdp_copier(&cmd);
   358D 21r2As41          10177 	ld	hl,#_cmd
   3590 E5                10178 	push	hl
   3591 CDr00s00          10179 	call	_vdp_copier
   3594 F1                10180 	pop	af
                          10181 ;demo.c:1467: cmd.dest_y = 0;
   3595 21r30s41          10182 	ld	hl, #_cmd + 6
   3598 36 00             10183 	ld	(hl),#0x00
   359A 23                10184 	inc	hl
   359B 36 00             10185 	ld	(hl),#0x00
                          10186 ;demo.c:1468: vdp_copier(&cmd);
   359D 21r2As41          10187 	ld	hl,#_cmd
   35A0 E5                10188 	push	hl
   35A1 CDr00s00          10189 	call	_vdp_copier
   35A4 F1                10190 	pop	af
                          10191 ;demo.c:1460: for (x = 254; x > 0; x-=4) {
   35A5 DD 7E FE          10192 	ld	a,-2 (ix)
   35A8 C6 FC             10193 	add	a,#0xFC
   35AA DD 77 FE          10194 	ld	-2 (ix),a
   35AD DD 7E FF          10195 	ld	a,-1 (ix)
   35B0 CE FF             10196 	adc	a,#0xFF
   35B2 DD 77 FF          10197 	ld	-1 (ix),a
   35B5 C3r23s35          10198 	jp	00144$
   35B8                   10199 00147$:
                          10200 ;demo.c:1472: for (x = 0; x < 256; x+=4) {
   35B8 DD 36 FE 00       10201 	ld	-2 (ix),#0x00
   35BC DD 36 FF 00       10202 	ld	-1 (ix),#0x00
   35C0                   10203 00148$:
   35C0 DD 7E FE          10204 	ld	a,-2 (ix)
   35C3 D6 00             10205 	sub	a,#0x00
   35C5 DD 7E FF          10206 	ld	a,-1 (ix)
   35C8 DE 01             10207 	sbc	a,#0x01
   35CA F2r55s36          10208 	jp	P,00151$
                          10209 ;demo.c:1473: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   35CD 21rC2s41          10210 	ld	hl,#_ff + 0
   35D0 5E                10211 	ld	e,(hl)
   35D1 21rC3s41          10212 	ld	hl,#_ff + 1
   35D4 56                10213 	ld	d,(hl)
   35D5 CB 2A             10214 	sra	d
   35D7 CB 1B             10215 	rr	e
   35D9 CB 2A             10216 	sra	d
   35DB CB 1B             10217 	rr	e
   35DD 21rC2s41          10218 	ld	hl,#_ff + 0
   35E0 56                10219 	ld	d,(hl)
   35E1 21rC3s41          10220 	ld	hl,#_ff + 1
   35E4 4E                10221 	ld	c,(hl)
   35E5 CB 29             10222 	sra	c
   35E7 CB 1A             10223 	rr	d
   35E9 CB 29             10224 	sra	c
   35EB CB 1A             10225 	rr	d
   35ED CB 29             10226 	sra	c
   35EF CB 1A             10227 	rr	d
   35F1 7B                10228 	ld	a,e
   35F2 F5                10229 	push	af
   35F3 33                10230 	inc	sp
   35F4 D5                10231 	push	de
   35F5 33                10232 	inc	sp
   35F6 53                10233 	ld	d,e
   35F7 1E 04             10234 	ld	e,#0x04
   35F9 D5                10235 	push	de
   35FA CDr00s00          10236 	call	_msx2_palette
   35FD F1                10237 	pop	af
   35FE F1                10238 	pop	af
                          10239 ;demo.c:1474: ff+=2;
   35FF 21rC2s41          10240 	ld	hl,#_ff
   3602 7E                10241 	ld	a,(hl)
   3603 C6 02             10242 	add	a,#0x02
   3605 23                10243 	inc	hl
   3606 2B                10244 	dec	hl
   3607 C5                10245 	push	bc
   3608 4F                10246 	ld	c, a
   3609 23                10247 	inc	hl
   360A 7E                10248 	ld	a, (hl)
   360B 47                10249 	ld	b, a
   360C 79                10250 	ld	a, c
   360D 2B                10251 	dec	hl
   360E 77                10252 	ld	(hl), a
   360F 78                10253 	ld	a, b
   3610 C1                10254 	pop	bc
   3611 CE 00             10255 	adc	a,#0x00
   3613 23                10256 	inc	hl
   3614 77                10257 	ld	(hl),a
                          10258 ;demo.c:1475: waitVB();
   3615 76                10259 		halt 
                          10260 ;demo.c:1476: cmd.dest_y = 256;
   3616 21r30s41          10261 	ld	hl, #_cmd + 6
   3619 36 00             10262 	ld	(hl),#0x00
   361B 23                10263 	inc	hl
   361C 36 01             10264 	ld	(hl),#0x01
                          10265 ;demo.c:1477: cmd.dest_x = x;
   361E 21r2Es41          10266 	ld	hl, #_cmd + 4
   3621 DD 7E FE          10267 	ld	a,-2 (ix)
   3624 77                10268 	ld	(hl),a
   3625 23                10269 	inc	hl
   3626 DD 7E FF          10270 	ld	a,-1 (ix)
   3629 77                10271 	ld	(hl),a
                          10272 ;demo.c:1478: vdp_copier(&cmd);
   362A 21r2As41          10273 	ld	hl,#_cmd
   362D E5                10274 	push	hl
   362E CDr00s00          10275 	call	_vdp_copier
   3631 F1                10276 	pop	af
                          10277 ;demo.c:1479: cmd.dest_y = 0;
   3632 21r30s41          10278 	ld	hl, #_cmd + 6
   3635 36 00             10279 	ld	(hl),#0x00
   3637 23                10280 	inc	hl
   3638 36 00             10281 	ld	(hl),#0x00
                          10282 ;demo.c:1480: vdp_copier(&cmd);
   363A 21r2As41          10283 	ld	hl,#_cmd
   363D E5                10284 	push	hl
   363E CDr00s00          10285 	call	_vdp_copier
   3641 F1                10286 	pop	af
                          10287 ;demo.c:1472: for (x = 0; x < 256; x+=4) {
   3642 DD 7E FE          10288 	ld	a,-2 (ix)
   3645 C6 04             10289 	add	a,#0x04
   3647 DD 77 FE          10290 	ld	-2 (ix),a
   364A DD 7E FF          10291 	ld	a,-1 (ix)
   364D CE 00             10292 	adc	a,#0x00
   364F DD 77 FF          10293 	ld	-1 (ix),a
   3652 C3rC0s35          10294 	jp	00148$
   3655                   10295 00151$:
                          10296 ;demo.c:1483: drawstr2x("REVISION",10,44);
   3655 21 0A 2C          10297 	ld	hl,#0x2C0A
   3658 E5                10298 	push	hl
   3659 21r08s39          10299 	ld	hl,#__str_19
   365C E5                10300 	push	hl
   365D CDr78s11          10301 	call	_drawstr2x
   3660 F1                10302 	pop	af
   3661 F1                10303 	pop	af
                          10304 ;demo.c:1484: drawstr2x("   IS OUR",0,84);
   3662 21 00 54          10305 	ld	hl,#0x5400
   3665 E5                10306 	push	hl
   3666 21r11s39          10307 	ld	hl,#__str_20
   3669 E5                10308 	push	hl
   366A CDr78s11          10309 	call	_drawstr2x
   366D F1                10310 	pop	af
   366E F1                10311 	pop	af
                          10312 ;demo.c:1485: drawstr2x("  PARTY",12,124);
   366F 21 0C 7C          10313 	ld	hl,#0x7C0C
   3672 E5                10314 	push	hl
   3673 21r1Bs39          10315 	ld	hl,#__str_21
   3676 E5                10316 	push	hl
   3677 CDr78s11          10317 	call	_drawstr2x
   367A F1                10318 	pop	af
   367B F1                10319 	pop	af
   367C                   10320 00106$:
                          10321 ;demo.c:1488: if (ff >= 1600 && ff < 1700) {
   367C 3ArC2s41          10322 	ld	a,(#_ff+0)
   367F D6 40             10323 	sub	a,#0x40
   3681 3ArC3s41          10324 	ld	a,(#_ff+1)
   3684 DE 06             10325 	sbc	a,#0x06
   3686 FArADs36          10326 	jp	M,00108$
   3689 3ArC2s41          10327 	ld	a,(#_ff+0)
   368C D6 A4             10328 	sub	a,#0xA4
   368E 3ArC3s41          10329 	ld	a,(#_ff+1)
   3691 DE 06             10330 	sbc	a,#0x06
   3693 F2rADs36          10331 	jp	P,00108$
                          10332 ;demo.c:1489: slowend = 37;
   3696 21rC0s41          10333 	ld	hl,#_slowend + 0
   3699 36 25             10334 	ld	(hl), #0x25
   369B 21rC1s41          10335 	ld	hl,#_slowend + 1
   369E 36 00             10336 	ld	(hl), #0x00
                          10337 ;demo.c:1490: drawstrslow("Give a big hand to all the organizers",28,164+6);
   36A0 21 1C AA          10338 	ld	hl,#0xAA1C
   36A3 E5                10339 	push	hl
   36A4 21r23s39          10340 	ld	hl,#__str_22
   36A7 E5                10341 	push	hl
   36A8 CDrDAs10          10342 	call	_drawstrslow
   36AB F1                10343 	pop	af
   36AC F1                10344 	pop	af
   36AD                   10345 00108$:
                          10346 ;demo.c:1493: if (ff == 1700) {
   36AD 3ArC2s41          10347 	ld	a,(#_ff+0)
   36B0 D6 A4             10348 	sub	a,#0xA4
   36B2 20 07             10349 	jr	NZ,00203$
   36B4 3ArC3s41          10350 	ld	a,(#_ff+1)
   36B7 D6 06             10351 	sub	a,#0x06
   36B9 28 02             10352 	jr	Z,00204$
   36BB                   10353 00203$:
   36BB 18 0A             10354 	jr	00111$
   36BD                   10355 00204$:
                          10356 ;demo.c:1494: ltrpointer = 0;
   36BD 21rBEs41          10357 	ld	hl,#_ltrpointer + 0
   36C0 36 00             10358 	ld	(hl), #0x00
   36C2 21rBFs41          10359 	ld	hl,#_ltrpointer + 1
   36C5 36 00             10360 	ld	(hl), #0x00
   36C7                   10361 00111$:
                          10362 ;demo.c:1497: if (ff > 1700 && ff < 1800) {
   36C7 3E A4             10363 	ld	a,#0xA4
   36C9 FD 21rC2s41       10364 	ld	iy,#_ff
   36CD FD 96 00          10365 	sub	a,0 (iy)
   36D0 3E 06             10366 	ld	a,#0x06
   36D2 FD 21rC2s41       10367 	ld	iy,#_ff
   36D6 FD 9E 01          10368 	sbc	a,1 (iy)
   36D9 F2r00s37          10369 	jp	P,00113$
   36DC 3ArC2s41          10370 	ld	a,(#_ff+0)
   36DF D6 08             10371 	sub	a,#0x08
   36E1 3ArC3s41          10372 	ld	a,(#_ff+1)
   36E4 DE 07             10373 	sbc	a,#0x07
   36E6 F2r00s37          10374 	jp	P,00113$
                          10375 ;demo.c:1498: slowend = 21;
   36E9 21rC0s41          10376 	ld	hl,#_slowend + 0
   36EC 36 15             10377 	ld	(hl), #0x15
   36EE 21rC1s41          10378 	ld	hl,#_slowend + 1
   36F1 36 00             10379 	ld	(hl), #0x00
                          10380 ;demo.c:1499: drawstrslow("of this amazing party",64,164+16);
   36F3 21 40 B4          10381 	ld	hl,#0xB440
   36F6 E5                10382 	push	hl
   36F7 21r49s39          10383 	ld	hl,#__str_23
   36FA E5                10384 	push	hl
   36FB CDrDAs10          10385 	call	_drawstrslow
   36FE F1                10386 	pop	af
   36FF F1                10387 	pop	af
   3700                   10388 00113$:
                          10389 ;demo.c:1502: if (ff >= 2000 && ff < 3890) {
   3700 3ArC2s41          10390 	ld	a,(#_ff+0)
   3703 D6 D0             10391 	sub	a,#0xD0
   3705 3ArC3s41          10392 	ld	a,(#_ff+1)
   3708 DE 07             10393 	sbc	a,#0x07
   370A FAr2Es38          10394 	jp	M,00116$
   370D 3ArC2s41          10395 	ld	a,(#_ff+0)
   3710 D6 32             10396 	sub	a,#0x32
   3712 3ArC3s41          10397 	ld	a,(#_ff+1)
   3715 DE 0F             10398 	sbc	a,#0x0F
   3717 F2r2Es38          10399 	jp	P,00116$
                          10400 ;demo.c:1503: cmd.size_x = 1;
   371A 21r32s41          10401 	ld	hl, #_cmd + 8
   371D 36 01             10402 	ld	(hl),#0x01
   371F 23                10403 	inc	hl
   3720 36 00             10404 	ld	(hl),#0x00
                          10405 ;demo.c:1504: cmd.size_y = 17;
   3722 21r34s41          10406 	ld	hl, #_cmd + 10
   3725 36 11             10407 	ld	(hl),#0x11
   3727 23                10408 	inc	hl
   3728 36 00             10409 	ld	(hl),#0x00
                          10410 ;demo.c:1505: cmd.data = 0;
                          10411 ;demo.c:1506: cmd.argument = 0x00; // from 70xY to left
   372A 3E 00             10412 	ld	a,#0x00
   372C 32r36s41          10413 	ld	(#_cmd + 12),a
   372F 32r37s41          10414 	ld	(#_cmd + 13),a
                          10415 ;demo.c:1507: cmd.command = 0xd0; // vram to vram, y only
   3732 3E D0             10416 	ld	a,#0xD0
   3734 32r38s41          10417 	ld	(#_cmd + 14),a
                          10418 ;demo.c:1508: cmd.source_x = 128+20*(((ff-2001)>>3) % 6);
   3737 3ArC2s41          10419 	ld	a,(#_ff+0)
   373A C6 2F             10420 	add	a,#0x2F
   373C 4F                10421 	ld	c,a
   373D 3ArC3s41          10422 	ld	a,(#_ff+1)
   3740 CE F8             10423 	adc	a,#0xF8
   3742 47                10424 	ld	b,a
   3743 CB 28             10425 	sra	b
   3745 CB 19             10426 	rr	c
   3747 CB 28             10427 	sra	b
   3749 CB 19             10428 	rr	c
   374B CB 28             10429 	sra	b
   374D CB 19             10430 	rr	c
   374F 21 06 00          10431 	ld	hl,#0x0006
   3752 E5                10432 	push	hl
   3753 C5                10433 	push	bc
   3754 CDr00s00          10434 	call	__modsint_rrx_s
   3757 F1                10435 	pop	af
   3758 F1                10436 	pop	af
   3759 44                10437 	ld	b,h
   375A 4D                10438 	ld	c,l
   375B 59                10439 	ld	e,c
   375C 50                10440 	ld	d,b
   375D 6B                10441 	ld	l,e
   375E 62                10442 	ld	h,d
   375F 29                10443 	add	hl,hl
   3760 29                10444 	add	hl,hl
   3761 19                10445 	add	hl,de
   3762 29                10446 	add	hl,hl
   3763 29                10447 	add	hl,hl
   3764 01 80 00          10448 	ld	bc,#0x0080
   3767 09                10449 	add	hl,bc
   3768 4D                10450 	ld	c,l
   3769 44                10451 	ld	b,h
   376A 21r2As41          10452 	ld	hl,#_cmd
   376D 71                10453 	ld	(hl),c
   376E 23                10454 	inc	hl
   376F 70                10455 	ld	(hl),b
                          10456 ;demo.c:1509: cmd.source_y = 768+30;
   3770 21r2Cs41          10457 	ld	hl, #_cmd + 2
   3773 36 1E             10458 	ld	(hl),#0x1E
   3775 23                10459 	inc	hl
   3776 36 03             10460 	ld	(hl),#0x03
                          10461 ;demo.c:1510: cmd.dest_x = (255)-((ff-2000)>>3);
   3778 01r2Es41          10462 	ld	bc,#_cmd + 4
   377B 3ArC2s41          10463 	ld	a,(#_ff+0)
   377E C6 30             10464 	add	a,#0x30
   3780 5F                10465 	ld	e,a
   3781 3ArC3s41          10466 	ld	a,(#_ff+1)
   3784 CE F8             10467 	adc	a,#0xF8
   3786 57                10468 	ld	d,a
   3787 CB 2A             10469 	sra	d
   3789 CB 1B             10470 	rr	e
   378B CB 2A             10471 	sra	d
   378D CB 1B             10472 	rr	e
   378F CB 2A             10473 	sra	d
   3791 CB 1B             10474 	rr	e
   3793 3E FF             10475 	ld	a,#0xFF
   3795 93                10476 	sub	a,e
   3796 5F                10477 	ld	e,a
   3797 3E 00             10478 	ld	a,#0x00
   3799 9A                10479 	sbc	a,d
   379A 57                10480 	ld	d,a
   379B 69                10481 	ld	l,c
   379C 60                10482 	ld	h,b
   379D 73                10483 	ld	(hl),e
   379E 23                10484 	inc	hl
   379F 72                10485 	ld	(hl),d
                          10486 ;demo.c:1511: cmd.dest_y = 12;
   37A0 21r30s41          10487 	ld	hl, #_cmd + 6
   37A3 36 0C             10488 	ld	(hl),#0x0C
   37A5 23                10489 	inc	hl
   37A6 36 00             10490 	ld	(hl),#0x00
                          10491 ;demo.c:1512: vdp_copier(&cmd);
   37A8 21r2As41          10492 	ld	hl,#_cmd
   37AB E5                10493 	push	hl
   37AC CDr00s00          10494 	call	_vdp_copier
   37AF F1                10495 	pop	af
                          10496 ;demo.c:1515: cmd.size_x = 20;
   37B0 21r32s41          10497 	ld	hl, #_cmd + 8
   37B3 36 14             10498 	ld	(hl),#0x14
   37B5 23                10499 	inc	hl
   37B6 36 00             10500 	ld	(hl),#0x00
                          10501 ;demo.c:1516: cmd.size_y = 17;
   37B8 21r34s41          10502 	ld	hl, #_cmd + 10
   37BB 36 11             10503 	ld	(hl),#0x11
   37BD 23                10504 	inc	hl
   37BE 36 00             10505 	ld	(hl),#0x00
                          10506 ;demo.c:1517: cmd.data = 0;
                          10507 ;demo.c:1518: cmd.argument = 0x00; // from 70xY to left
   37C0 3E 00             10508 	ld	a,#0x00
   37C2 32r36s41          10509 	ld	(#_cmd + 12),a
   37C5 32r37s41          10510 	ld	(#_cmd + 13),a
                          10511 ;demo.c:1519: cmd.command = 0xd0; // vram to vram, y only
   37C8 3E D0             10512 	ld	a,#0xD0
   37CA 32r38s41          10513 	ld	(#_cmd + 14),a
                          10514 ;demo.c:1520: cmd.source_x = 128+20*(((ff-2000)>>3) % 6);
   37CD 3ArC2s41          10515 	ld	a,(#_ff+0)
   37D0 C6 30             10516 	add	a,#0x30
   37D2 4F                10517 	ld	c,a
   37D3 3ArC3s41          10518 	ld	a,(#_ff+1)
   37D6 CE F8             10519 	adc	a,#0xF8
   37D8 47                10520 	ld	b,a
   37D9 CB 28             10521 	sra	b
   37DB CB 19             10522 	rr	c
   37DD CB 28             10523 	sra	b
   37DF CB 19             10524 	rr	c
   37E1 CB 28             10525 	sra	b
   37E3 CB 19             10526 	rr	c
   37E5 C5                10527 	push	bc
   37E6 21 06 00          10528 	ld	hl,#0x0006
   37E9 E5                10529 	push	hl
   37EA C5                10530 	push	bc
   37EB CDr00s00          10531 	call	__modsint_rrx_s
   37EE F1                10532 	pop	af
   37EF F1                10533 	pop	af
   37F0 EB                10534 	ex	de,hl
   37F1 C1                10535 	pop	bc
   37F2 6B                10536 	ld	l,e
   37F3 62                10537 	ld	h,d
   37F4 29                10538 	add	hl,hl
   37F5 29                10539 	add	hl,hl
   37F6 19                10540 	add	hl,de
   37F7 29                10541 	add	hl,hl
   37F8 29                10542 	add	hl,hl
   37F9 EB                10543 	ex	de,hl
   37FA 21 80 00          10544 	ld	hl,#0x0080
   37FD 19                10545 	add	hl,de
   37FE EB                10546 	ex	de,hl
   37FF 21r2As41          10547 	ld	hl,#_cmd
   3802 73                10548 	ld	(hl),e
   3803 23                10549 	inc	hl
   3804 72                10550 	ld	(hl),d
                          10551 ;demo.c:1521: cmd.source_y = 768;
   3805 11r2Cs41          10552 	ld	de,#_cmd + 2
   3808 EB                10553 	ex	de,hl
   3809 36 00             10554 	ld	(hl),#0x00
   380B 23                10555 	inc	hl
   380C 36 03             10556 	ld	(hl),#0x03
                          10557 ;demo.c:1522: cmd.dest_x = (256-20)-((ff-2000)>>3);
   380E 11r2Es41          10558 	ld	de,#_cmd + 4
   3811 3E EC             10559 	ld	a,#0xEC
   3813 91                10560 	sub	a,c
   3814 4F                10561 	ld	c,a
   3815 3E 00             10562 	ld	a,#0x00
   3817 98                10563 	sbc	a,b
   3818 47                10564 	ld	b,a
   3819 6B                10565 	ld	l,e
   381A 62                10566 	ld	h,d
   381B 71                10567 	ld	(hl),c
   381C 23                10568 	inc	hl
   381D 70                10569 	ld	(hl),b
                          10570 ;demo.c:1523: cmd.dest_y = 12;
   381E 21r30s41          10571 	ld	hl, #_cmd + 6
   3821 36 0C             10572 	ld	(hl),#0x0C
   3823 23                10573 	inc	hl
   3824 36 00             10574 	ld	(hl),#0x00
                          10575 ;demo.c:1524: vdp_copier(&cmd);
   3826 21r2As41          10576 	ld	hl,#_cmd
   3829 E5                10577 	push	hl
   382A CDr00s00          10578 	call	_vdp_copier
   382D F1                10579 	pop	af
   382E                   10580 00116$:
                          10581 ;demo.c:1529: if (ff == 2800) {
   382E 3ArC2s41          10582 	ld	a,(#_ff+0)
   3831 D6 F0             10583 	sub	a,#0xF0
   3833 20 07             10584 	jr	NZ,00208$
   3835 3ArC3s41          10585 	ld	a,(#_ff+1)
   3838 D6 0A             10586 	sub	a,#0x0A
   383A 28 02             10587 	jr	Z,00209$
   383C                   10588 00208$:
   383C 18 0A             10589 	jr	00119$
   383E                   10590 00209$:
                          10591 ;demo.c:1530: ltrpointer = 0;
   383E 21rBEs41          10592 	ld	hl,#_ltrpointer + 0
   3841 36 00             10593 	ld	(hl), #0x00
   3843 21rBFs41          10594 	ld	hl,#_ltrpointer + 1
   3846 36 00             10595 	ld	(hl), #0x00
   3848                   10596 00119$:
                          10597 ;demo.c:1533: if (ff > 2800 && ff < 2900) {
   3848 3E F0             10598 	ld	a,#0xF0
   384A FD 21rC2s41       10599 	ld	iy,#_ff
   384E FD 96 00          10600 	sub	a,0 (iy)
   3851 3E 0A             10601 	ld	a,#0x0A
   3853 FD 21rC2s41       10602 	ld	iy,#_ff
   3857 FD 9E 01          10603 	sbc	a,1 (iy)
   385A F2r81s38          10604 	jp	P,00121$
   385D 3ArC2s41          10605 	ld	a,(#_ff+0)
   3860 D6 54             10606 	sub	a,#0x54
   3862 3ArC3s41          10607 	ld	a,(#_ff+1)
   3865 DE 0B             10608 	sbc	a,#0x0B
   3867 F2r81s38          10609 	jp	P,00121$
                          10610 ;demo.c:1534: slowend = 21;
   386A 21rC0s41          10611 	ld	hl,#_slowend + 0
   386D 36 15             10612 	ld	(hl), #0x15
   386F 21rC1s41          10613 	ld	hl,#_slowend + 1
   3872 36 00             10614 	ld	(hl), #0x00
                          10615 ;demo.c:1535: drawstrslow("Digital Sounds System",0,0);
   3874 21 00 00          10616 	ld	hl,#0x0000
   3877 E5                10617 	push	hl
   3878 21r5Fs39          10618 	ld	hl,#__str_24
   387B E5                10619 	push	hl
   387C CDrDAs10          10620 	call	_drawstrslow
   387F F1                10621 	pop	af
   3880 F1                10622 	pop	af
   3881                   10623 00121$:
                          10624 ;demo.c:1538: if (ff == 3400) {
   3881 3ArC2s41          10625 	ld	a,(#_ff+0)
   3884 D6 48             10626 	sub	a,#0x48
   3886 20 07             10627 	jr	NZ,00210$
   3888 3ArC3s41          10628 	ld	a,(#_ff+1)
   388B D6 0D             10629 	sub	a,#0x0D
   388D 28 02             10630 	jr	Z,00211$
   388F                   10631 00210$:
   388F 18 0A             10632 	jr	00124$
   3891                   10633 00211$:
                          10634 ;demo.c:1539: ltrpointer = 0;
   3891 21rBEs41          10635 	ld	hl,#_ltrpointer + 0
   3894 36 00             10636 	ld	(hl), #0x00
   3896 21rBFs41          10637 	ld	hl,#_ltrpointer + 1
   3899 36 00             10638 	ld	(hl), #0x00
   389B                   10639 00124$:
                          10640 ;demo.c:1542: if (ff > 3400 && ff < 3500) {
   389B 3E 48             10641 	ld	a,#0x48
   389D FD 21rC2s41       10642 	ld	iy,#_ff
   38A1 FD 96 00          10643 	sub	a,0 (iy)
   38A4 3E 0D             10644 	ld	a,#0x0D
   38A6 FD 21rC2s41       10645 	ld	iy,#_ff
   38AA FD 9E 01          10646 	sbc	a,1 (iy)
   38AD F2rD4s38          10647 	jp	P,00152$
   38B0 3ArC2s41          10648 	ld	a,(#_ff+0)
   38B3 D6 AC             10649 	sub	a,#0xAC
   38B5 3ArC3s41          10650 	ld	a,(#_ff+1)
   38B8 DE 0D             10651 	sbc	a,#0x0D
   38BA F2rD4s38          10652 	jp	P,00152$
                          10653 ;demo.c:1543: slowend = 19;
   38BD 21rC0s41          10654 	ld	hl,#_slowend + 0
   38C0 36 13             10655 	ld	(hl), #0x13
   38C2 21rC1s41          10656 	ld	hl,#_slowend + 1
   38C5 36 00             10657 	ld	(hl), #0x00
                          10658 ;demo.c:1544: drawstrslow("mew mew mew miu mou",134,0);
   38C7 21 86 00          10659 	ld	hl,#0x0086
   38CA E5                10660 	push	hl
   38CB 21r75s39          10661 	ld	hl,#__str_25
   38CE E5                10662 	push	hl
   38CF CDrDAs10          10663 	call	_drawstrslow
   38D2 F1                10664 	pop	af
   38D3 F1                10665 	pop	af
   38D4                   10666 00152$:
   38D4 DD F9             10667 	ld	sp,ix
   38D6 DD E1             10668 	pop	ix
   38D8 C9                10669 	ret
   38D9                   10670 _bigtext_end::
   38D9                   10671 __str_13:
   38D9 44 49 47 49 54 41 10672 	.ascii "DIGITAL"
        4C
   38E0 00                10673 	.db 0x00
   38E1                   10674 __str_14:
   38E1 53 4F 55 4E 44 53 10675 	.ascii "SOUNDS"
   38E7 00                10676 	.db 0x00
   38E8                   10677 __str_15:
   38E8 53 59 53 54 45 4D 10678 	.ascii "SYSTEM"
   38EE 00                10679 	.db 0x00
   38EF                   10680 __str_16:
   38EF 43 4F 4D 4D 41 4E 10681 	.ascii "COMMAND"
        44
   38F6 00                10682 	.db 0x00
   38F7                   10683 __str_17:
   38F7 20 20 20 54 48 45 10684 	.ascii "   THE  "
        20 20
   38FF 00                10685 	.db 0x00
   3900                   10686 __str_18:
   3900 20 20 42 41 53 53 10687 	.ascii "  BASS "
        20
   3907 00                10688 	.db 0x00
   3908                   10689 __str_19:
   3908 52 45 56 49 53 49 10690 	.ascii "REVISION"
        4F 4E
   3910 00                10691 	.db 0x00
   3911                   10692 __str_20:
   3911 20 20 20 49 53 20 10693 	.ascii "   IS OUR"
        4F 55 52
   391A 00                10694 	.db 0x00
   391B                   10695 __str_21:
   391B 20 20 50 41 52 54 10696 	.ascii "  PARTY"
        59
   3922 00                10697 	.db 0x00
   3923                   10698 __str_22:
   3923 47 69 76 65 20 61 10699 	.ascii "Give a big hand to all the organizers"
        20 62 69 67 20 68
        61 6E 64 20 74 6F
        20 61 6C 6C 20 74
        68 65 20 6F 72 67
        61 6E 69 7A 65 72
        73
   3948 00                10700 	.db 0x00
   3949                   10701 __str_23:
   3949 6F 66 20 74 68 69 10702 	.ascii "of this amazing party"
        73 20 61 6D 61 7A
        69 6E 67 20 70 61
        72 74 79
   395E 00                10703 	.db 0x00
   395F                   10704 __str_24:
   395F 44 69 67 69 74 61 10705 	.ascii "Digital Sounds System"
        6C 20 53 6F 75 6E
        64 73 20 53 79 73
        74 65 6D
   3974 00                10706 	.db 0x00
   3975                   10707 __str_25:
   3975 6D 65 77 20 6D 65 10708 	.ascii "mew mew mew miu mou"
        77 20 6D 65 77 20
        6D 69 75 20 6D 6F
        75
   3988 00                10709 	.db 0x00
                          10710 ;demo.c:1549: void waiter() {
                          10711 ;	---------------------------------
                          10712 ; Function waiter
                          10713 ; ---------------------------------
   3989                   10714 _waiter_start::
   3989                   10715 _waiter:
                          10716 ;demo.c:1551: }
   3989 C9                10717 	ret
   398A                   10718 _waiter_end::
                          10719 ;demo.c:1557: void credits() {
                          10720 ;	---------------------------------
                          10721 ; Function credits
                          10722 ; ---------------------------------
   398A                   10723 _credits_start::
   398A                   10724 _credits:
                          10725 ;demo.c:1560: if (initcredits == 0) {
   398A 3Ar36s42          10726 	ld	a,(#_initcredits+0)
   398D 21r37s42          10727 	ld	hl,#_initcredits + 1
   3990 B6                10728 	or	a,(hl)
   3991 C2rA1s3A          10729 	jp	NZ,00102$
                          10730 ;demo.c:1561: scratch_clear();
   3994 CDr24s08          10731 	call	_scratch_clear
                          10732 ;demo.c:1562: vdp_load_palette(scratch);
   3997 21rC6s3F          10733 	ld	hl,#_scratch
   399A E5                10734 	push	hl
   399B CDr00s00          10735 	call	_vdp_load_palette
   399E F1                10736 	pop	af
                          10737 ;demo.c:1564: vdp_register(0,8); // mode 512x212
   399F 21 00 08          10738 	ld	hl,#0x0800
   39A2 E5                10739 	push	hl
   39A3 CDr00s00          10740 	call	_vdp_register
   39A6 F1                10741 	pop	af
                          10742 ;demo.c:1565: vdp_register(9,130); // 50hz,192
   39A7 21 09 82          10743 	ld	hl,#0x8209
   39AA E5                10744 	push	hl
   39AB CDr00s00          10745 	call	_vdp_register
   39AE F1                10746 	pop	af
                          10747 ;demo.c:1567: uninstall_isr();
   39AF CDr00s00          10748 	call	_uninstall_isr
                          10749 ;demo.c:1568: PLY_Stop();
   39B2 CDr00s00          10750 	call	_PLY_Stop
                          10751 ;demo.c:1569: PLY_SendRegisters();
   39B5 CDr00s00          10752 	call	_PLY_SendRegisters
                          10753 ;demo.c:1571: initcredits = 1;
   39B8 21r36s42          10754 	ld	hl,#_initcredits + 0
   39BB 36 01             10755 	ld	(hl), #0x01
   39BD 21r37s42          10756 	ld	hl,#_initcredits + 1
   39C0 36 00             10757 	ld	(hl), #0x00
                          10758 ;demo.c:1573: bitbuster(crebuffer2,0x0000,VRAM_0);
   39C2 3E 01             10759 	ld	a,#0x01
   39C4 F5                10760 	push	af
   39C5 33                10761 	inc	sp
   39C6 21 00 00          10762 	ld	hl,#0x0000
   39C9 E5                10763 	push	hl
   39CA 21rC7s1E          10764 	ld	hl,#_crebuffer2
   39CD E5                10765 	push	hl
   39CE CDr00s00          10766 	call	_bitbuster
   39D1 F1                10767 	pop	af
   39D2 F1                10768 	pop	af
   39D3 33                10769 	inc	sp
                          10770 ;demo.c:1575: cmd.size_x = 512;
   39D4 21r32s41          10771 	ld	hl, #_cmd + 8
   39D7 36 00             10772 	ld	(hl),#0x00
   39D9 23                10773 	inc	hl
   39DA 36 02             10774 	ld	(hl),#0x02
                          10775 ;demo.c:1576: cmd.size_y = 212;
   39DC 21r34s41          10776 	ld	hl, #_cmd + 10
   39DF 36 D4             10777 	ld	(hl),#0xD4
   39E1 23                10778 	inc	hl
   39E2 36 00             10779 	ld	(hl),#0x00
                          10780 ;demo.c:1577: cmd.data = 0;
                          10781 ;demo.c:1578: cmd.argument = 0x00;
   39E4 3E 00             10782 	ld	a,#0x00
   39E6 32r36s41          10783 	ld	(#_cmd + 12),a
   39E9 32r37s41          10784 	ld	(#_cmd + 13),a
                          10785 ;demo.c:1579: cmd.command = 0xd0; 
   39EC 01r38s41          10786 	ld	bc,#_cmd + 14
   39EF 3E D0             10787 	ld	a,#0xD0
   39F1 02                10788 	ld	(bc),a
                          10789 ;demo.c:1580: cmd.source_x = 0;
   39F2 21r2As41          10790 	ld	hl,#_cmd
   39F5 36 00             10791 	ld	(hl),#0x00
   39F7 23                10792 	inc	hl
   39F8 36 00             10793 	ld	(hl),#0x00
                          10794 ;demo.c:1581: cmd.source_y = 0;
   39FA 21r2Cs41          10795 	ld	hl, #_cmd + 2
   39FD 36 00             10796 	ld	(hl),#0x00
   39FF 23                10797 	inc	hl
   3A00 36 00             10798 	ld	(hl),#0x00
                          10799 ;demo.c:1582: cmd.dest_x = 0;
   3A02 21r2Es41          10800 	ld	hl, #_cmd + 4
   3A05 36 00             10801 	ld	(hl),#0x00
   3A07 23                10802 	inc	hl
   3A08 36 00             10803 	ld	(hl),#0x00
                          10804 ;demo.c:1583: cmd.dest_y = 256;
   3A0A 21r30s41          10805 	ld	hl, #_cmd + 6
   3A0D 36 00             10806 	ld	(hl),#0x00
   3A0F 23                10807 	inc	hl
   3A10 36 01             10808 	ld	(hl),#0x01
                          10809 ;demo.c:1584: vdp_copier(&cmd);
   3A12 21r2As41          10810 	ld	hl,#_cmd
   3A15 E5                10811 	push	hl
   3A16 CDr00s00          10812 	call	_vdp_copier
   3A19 F1                10813 	pop	af
                          10814 ;demo.c:1586: bitbuster(crebuffer3,0x0000,VRAM_0);
   3A1A 3E 01             10815 	ld	a,#0x01
   3A1C F5                10816 	push	af
   3A1D 33                10817 	inc	sp
   3A1E 21 00 00          10818 	ld	hl,#0x0000
   3A21 E5                10819 	push	hl
   3A22 21r3Bs31          10820 	ld	hl,#_crebuffer3
   3A25 E5                10821 	push	hl
   3A26 CDr00s00          10822 	call	_bitbuster
   3A29 F1                10823 	pop	af
   3A2A F1                10824 	pop	af
   3A2B 33                10825 	inc	sp
                          10826 ;demo.c:1588: cmd.size_x = 512;
   3A2C 21r32s41          10827 	ld	hl, #_cmd + 8
   3A2F 36 00             10828 	ld	(hl),#0x00
   3A31 23                10829 	inc	hl
   3A32 36 02             10830 	ld	(hl),#0x02
                          10831 ;demo.c:1589: cmd.size_y = 212;
   3A34 21r34s41          10832 	ld	hl, #_cmd + 10
   3A37 36 D4             10833 	ld	(hl),#0xD4
   3A39 23                10834 	inc	hl
   3A3A 36 00             10835 	ld	(hl),#0x00
                          10836 ;demo.c:1590: cmd.data = 0;
                          10837 ;demo.c:1591: cmd.argument = 0x00;
   3A3C 3E 00             10838 	ld	a,#0x00
   3A3E 32r36s41          10839 	ld	(#_cmd + 12),a
   3A41 32r37s41          10840 	ld	(#_cmd + 13),a
                          10841 ;demo.c:1592: cmd.command = 0xd0; 
   3A44 01r38s41          10842 	ld	bc,#_cmd + 14
   3A47 3E D0             10843 	ld	a,#0xD0
   3A49 02                10844 	ld	(bc),a
                          10845 ;demo.c:1593: cmd.source_x = 0;
   3A4A 21r2As41          10846 	ld	hl,#_cmd
   3A4D 36 00             10847 	ld	(hl),#0x00
   3A4F 23                10848 	inc	hl
   3A50 36 00             10849 	ld	(hl),#0x00
                          10850 ;demo.c:1594: cmd.source_y = 0;
   3A52 21r2Cs41          10851 	ld	hl, #_cmd + 2
   3A55 36 00             10852 	ld	(hl),#0x00
   3A57 23                10853 	inc	hl
   3A58 36 00             10854 	ld	(hl),#0x00
                          10855 ;demo.c:1595: cmd.dest_x = 0;
   3A5A 21r2Es41          10856 	ld	hl, #_cmd + 4
   3A5D 36 00             10857 	ld	(hl),#0x00
   3A5F 23                10858 	inc	hl
   3A60 36 00             10859 	ld	(hl),#0x00
                          10860 ;demo.c:1596: cmd.dest_y = 512;
   3A62 21r30s41          10861 	ld	hl, #_cmd + 6
   3A65 36 00             10862 	ld	(hl),#0x00
   3A67 23                10863 	inc	hl
   3A68 36 02             10864 	ld	(hl),#0x02
                          10865 ;demo.c:1597: vdp_copier(&cmd);
   3A6A 21r2As41          10866 	ld	hl,#_cmd
   3A6D E5                10867 	push	hl
   3A6E CDr00s00          10868 	call	_vdp_copier
   3A71 F1                10869 	pop	af
                          10870 ;demo.c:1599: bitbuster(crebuffer1,0x0000,VRAM_0);
   3A72 3E 01             10871 	ld	a,#0x01
   3A74 F5                10872 	push	af
   3A75 33                10873 	inc	sp
   3A76 21 00 00          10874 	ld	hl,#0x0000
   3A79 E5                10875 	push	hl
   3A7A 21rCCs11          10876 	ld	hl,#_crebuffer1
   3A7D E5                10877 	push	hl
   3A7E CDr00s00          10878 	call	_bitbuster
   3A81 F1                10879 	pop	af
   3A82 F1                10880 	pop	af
   3A83 33                10881 	inc	sp
                          10882 ;demo.c:1601: install_isr(my_isr);
   3A84 21rECs07          10883 	ld	hl,#_my_isr
   3A87 E5                10884 	push	hl
   3A88 CDr00s00          10885 	call	_install_isr
   3A8B F1                10886 	pop	af
                          10887 ;demo.c:1603: memcpy(cur_palette, credits_palette, 32);
   3A8C 21 20 00          10888 	ld	hl,#0x0020
   3A8F E5                10889 	push	hl
   3A90 21r06s41          10890 	ld	hl,#_credits_palette
   3A93 E5                10891 	push	hl
   3A94 21r46s40          10892 	ld	hl,#_cur_palette
   3A97 E5                10893 	push	hl
   3A98 CDr00s00          10894 	call	_memcpy
   3A9B F1                10895 	pop	af
   3A9C F1                10896 	pop	af
   3A9D F1                10897 	pop	af
                          10898 ;demo.c:1605: scratch_clear();
   3A9E CDr24s08          10899 	call	_scratch_clear
   3AA1                   10900 00102$:
                          10901 ;demo.c:1608: if (credittimer < 100) fadein();
   3AA1 3Ar38s42          10902 	ld	a,(#_credittimer+0)
   3AA4 D6 64             10903 	sub	a,#0x64
   3AA6 3Ar39s42          10904 	ld	a,(#_credittimer+1)
   3AA9 DE 00             10905 	sbc	a,#0x00
   3AAB F2rB1s3A          10906 	jp	P,00104$
   3AAE CDrBBs0A          10907 	call	_fadein
   3AB1                   10908 00104$:
                          10909 ;demo.c:1610: if(credittimer == 500) vdp_register(2, 0x3f);
   3AB1 3Ar38s42          10910 	ld	a,(#_credittimer+0)
   3AB4 D6 F4             10911 	sub	a,#0xF4
   3AB6 20 07             10912 	jr	NZ,00118$
   3AB8 3Ar39s42          10913 	ld	a,(#_credittimer+1)
   3ABB D6 01             10914 	sub	a,#0x01
   3ABD 28 02             10915 	jr	Z,00119$
   3ABF                   10916 00118$:
   3ABF 18 08             10917 	jr	00106$
   3AC1                   10918 00119$:
   3AC1 21 02 3F          10919 	ld	hl,#0x3F02
   3AC4 E5                10920 	push	hl
   3AC5 CDr00s00          10921 	call	_vdp_register
   3AC8 F1                10922 	pop	af
   3AC9                   10923 00106$:
                          10924 ;demo.c:1611: if(credittimer == 1000) vdp_register(2, 0x5f);
   3AC9 3Ar38s42          10925 	ld	a,(#_credittimer+0)
   3ACC D6 E8             10926 	sub	a,#0xE8
   3ACE 20 07             10927 	jr	NZ,00120$
   3AD0 3Ar39s42          10928 	ld	a,(#_credittimer+1)
   3AD3 D6 03             10929 	sub	a,#0x03
   3AD5 28 02             10930 	jr	Z,00121$
   3AD7                   10931 00120$:
   3AD7 18 08             10932 	jr	00108$
   3AD9                   10933 00121$:
   3AD9 21 02 5F          10934 	ld	hl,#0x5F02
   3ADC E5                10935 	push	hl
   3ADD CDr00s00          10936 	call	_vdp_register
   3AE0 F1                10937 	pop	af
   3AE1                   10938 00108$:
                          10939 ;demo.c:1613: msx2_palette(0,PLY_PSGReg10,PLY_PSGReg10,PLY_PSGReg10);
   3AE1 21r00s00          10940 	ld	hl,#_PLY_PSGReg10 + 0
   3AE4 4E                10941 	ld	c,(hl)
   3AE5 21r00s00          10942 	ld	hl,#_PLY_PSGReg10 + 0
   3AE8 46                10943 	ld	b,(hl)
   3AE9 21r00s00          10944 	ld	hl,#_PLY_PSGReg10 + 0
   3AEC 5E                10945 	ld	e,(hl)
   3AED 79                10946 	ld	a,c
   3AEE F5                10947 	push	af
   3AEF 33                10948 	inc	sp
   3AF0 C5                10949 	push	bc
   3AF1 33                10950 	inc	sp
   3AF2 53                10951 	ld	d,e
   3AF3 1E 00             10952 	ld	e,#0x00
   3AF5 D5                10953 	push	de
   3AF6 CDr00s00          10954 	call	_msx2_palette
   3AF9 F1                10955 	pop	af
   3AFA F1                10956 	pop	af
                          10957 ;demo.c:1614: credittimer++;
   3AFB FD 21r38s42       10958 	ld	iy,#_credittimer
   3AFF FD 34 00          10959 	inc	0 (iy)
   3B02 20 07             10960 	jr	NZ,00122$
   3B04 FD 21r38s42       10961 	ld	iy,#_credittimer
   3B08 FD 34 01          10962 	inc	1 (iy)
   3B0B                   10963 00122$:
                          10964 ;demo.c:1615: if (credittimer == 1500) {
   3B0B 3Ar38s42          10965 	ld	a,(#_credittimer+0)
   3B0E D6 DC             10966 	sub	a,#0xDC
   3B10 C0                10967 	ret	NZ
   3B11 3Ar39s42          10968 	ld	a,(#_credittimer+1)
   3B14 D6 05             10969 	sub	a,#0x05
   3B16 28 01             10970 	jr	Z,00124$
   3B18 C9                10971 	ret
   3B19                   10972 00124$:
                          10973 ;demo.c:1616: vdp_load_palette(scratch);
   3B19 21rC6s3F          10974 	ld	hl,#_scratch
   3B1C E5                10975 	push	hl
   3B1D CDr00s00          10976 	call	_vdp_load_palette
   3B20 F1                10977 	pop	af
   3B21 C9                10978 	ret
   3B22                   10979 _credits_end::
                          10980 ;demo.c:1626: void do_quit() {
                          10981 ;	---------------------------------
                          10982 ; Function do_quit
                          10983 ; ---------------------------------
   3B22                   10984 _do_quit_start::
   3B22                   10985 _do_quit:
                          10986 ;demo.c:1627: waitVB();
   3B22 76                10987 		halt 
                          10988 ;demo.c:1628: uninstall_isr();
   3B23 CDr00s00          10989 	call	_uninstall_isr
                          10990 ;demo.c:1629: PLY_Stop();
   3B26 CDr00s00          10991 	call	_PLY_Stop
                          10992 ;demo.c:1630: PLY_SendRegisters();
   3B29 CDr00s00          10993 	call	_PLY_SendRegisters
                          10994 ;demo.c:1632: screen(0);
   3B2C 3E 00             10995 	ld	a,#0x00
   3B2E F5                10996 	push	af
   3B2F 33                10997 	inc	sp
   3B30 CDr00s00          10998 	call	_screen
   3B33 33                10999 	inc	sp
                          11000 ;demo.c:1633: vdp_load_palette(twister_palette);
   3B34 21rA6s40          11001 	ld	hl,#_twister_palette
   3B37 E5                11002 	push	hl
   3B38 CDr00s00          11003 	call	_vdp_load_palette
   3B3B F1                11004 	pop	af
                          11005 ;demo.c:1635: puts("bye friends.\r\n\r\n");
   3B3C 21r4Ds3B          11006 	ld	hl,#__str_26
   3B3F E5                11007 	push	hl
   3B40 CDr00s00          11008 	call	_puts
   3B43 F1                11009 	pop	af
                          11010 ;demo.c:1637: exit(0);	
   3B44 3E 00             11011 	ld	a,#0x00
   3B46 F5                11012 	push	af
   3B47 33                11013 	inc	sp
   3B48 CDr00s00          11014 	call	_exit
   3B4B 33                11015 	inc	sp
   3B4C C9                11016 	ret
   3B4D                   11017 _do_quit_end::
   3B4D                   11018 __str_26:
   3B4D 62 79 65 20 66 72 11019 	.ascii "bye friends."
        69 65 6E 64 73 2E
   3B59 0D                11020 	.db 0x0D
   3B5A 0A                11021 	.db 0x0A
   3B5B 0D                11022 	.db 0x0D
   3B5C 0A                11023 	.db 0x0A
   3B5D 00                11024 	.db 0x00
                          11025 ;demo.c:1643: void main() {
                          11026 ;	---------------------------------
                          11027 ; Function main
                          11028 ; ---------------------------------
   3B5E                   11029 _main_start::
   3B5E                   11030 _main:
   3B5E DD E5             11031 	push	ix
   3B60 DD 21 00 00       11032 	ld	ix,#0
   3B64 DD 39             11033 	add	ix,sp
   3B66 21 F9 FF          11034 	ld	hl,#-7
   3B69 39                11035 	add	hl,sp
   3B6A F9                11036 	ld	sp,hl
                          11037 ;demo.c:1644: unsigned char quit=0;
   3B6B DD 36 FF 00       11038 	ld	-1 (ix),#0x00
                          11039 ;demo.c:1650: spindown();
   3B6F CDr00s00          11040 	call	_spindown
                          11041 ;demo.c:1652: puts("[starting DSS MSX demosystem]\r\n\r\n");
   3B72 21r6Es41          11042 	ld	hl,#__str_27
   3B75 E5                11043 	push	hl
   3B76 CDr00s00          11044 	call	_puts
   3B79 F1                11045 	pop	af
                          11046 ;demo.c:1654: for (y = 0; y < 2; y++) {
   3B7A DD 36 FB 00       11047 	ld	-5 (ix),#0x00
   3B7E DD 36 FC 00       11048 	ld	-4 (ix),#0x00
   3B82                   11049 00118$:
   3B82 DD 7E FB          11050 	ld	a,-5 (ix)
   3B85 D6 02             11051 	sub	a,#0x02
   3B87 DD 7E FC          11052 	ld	a,-4 (ix)
   3B8A DE 00             11053 	sbc	a,#0x00
   3B8C F2r0Es3C          11054 	jp	P,00121$
                          11055 ;demo.c:1655: for (x = 0; x < 16; x++) {
   3B8F DD 4E FB          11056 	ld	c,-5 (ix)
   3B92 DD 46 FC          11057 	ld	b,-4 (ix)
   3B95 CB 21             11058 	sla	c
   3B97 CB 10             11059 	rl	b
   3B99 CB 21             11060 	sla	c
   3B9B CB 10             11061 	rl	b
   3B9D CB 21             11062 	sla	c
   3B9F CB 10             11063 	rl	b
   3BA1 CB 21             11064 	sla	c
   3BA3 CB 10             11065 	rl	b
   3BA5 21 81 03          11066 	ld	hl,#0x0381
   3BA8 09                11067 	add	hl,bc
   3BA9 DD 75 F9          11068 	ld	-7 (ix),l
   3BAC DD 74 FA          11069 	ld	-6 (ix),h
   3BAF DD 36 FD 00       11070 	ld	-3 (ix),#0x00
   3BB3 DD 36 FE 00       11071 	ld	-2 (ix),#0x00
   3BB7                   11072 00114$:
   3BB7 DD 7E FD          11073 	ld	a,-3 (ix)
   3BBA D6 10             11074 	sub	a,#0x10
   3BBC DD 7E FE          11075 	ld	a,-2 (ix)
   3BBF DE 00             11076 	sbc	a,#0x00
   3BC1 F2r03s3C          11077 	jp	P,00120$
                          11078 ;demo.c:1656: tri_lookup_x[(y*16)+x] = x * 16;
   3BC4 DD 7E FB          11079 	ld	a,-5 (ix)
   3BC7 07                11080 	rlca
   3BC8 07                11081 	rlca
   3BC9 07                11082 	rlca
   3BCA 07                11083 	rlca
   3BCB E6 F0             11084 	and	a,#0xF0
   3BCD 5F                11085 	ld	e,a
   3BCE DD 56 FD          11086 	ld	d,-3 (ix)
   3BD1 7B                11087 	ld	a,e
   3BD2 82                11088 	add	a,d
   3BD3 5F                11089 	ld	e, a
   3BD4 C6r00             11090 	add	a,#<_tri_lookup_x
   3BD6 4F                11091 	ld	c,a
   3BD7 3Es01             11092 	ld	a,#>_tri_lookup_x
   3BD9 CE 00             11093 	adc	a,#0x00
   3BDB 47                11094 	ld	b,a
   3BDC 7A                11095 	ld	a,d
   3BDD 07                11096 	rlca
   3BDE 07                11097 	rlca
   3BDF 07                11098 	rlca
   3BE0 07                11099 	rlca
   3BE1 E6 F0             11100 	and	a,#0xF0
   3BE3 02                11101 	ld	(bc),a
                          11102 ;demo.c:1657: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   3BE4 CB 23             11103 	sla	e
   3BE6 3Er88             11104 	ld	a,#<_tri_lookup_y
   3BE8 83                11105 	add	a,e
   3BE9 6F                11106 	ld	l,a
   3BEA 3Es01             11107 	ld	a,#>_tri_lookup_y
   3BEC CE 00             11108 	adc	a,#0x00
   3BEE 67                11109 	ld	h,a
   3BEF DD 7E F9          11110 	ld	a,-7 (ix)
   3BF2 77                11111 	ld	(hl),a
   3BF3 23                11112 	inc	hl
   3BF4 DD 7E FA          11113 	ld	a,-6 (ix)
   3BF7 77                11114 	ld	(hl),a
                          11115 ;demo.c:1655: for (x = 0; x < 16; x++) {
   3BF8 DD 34 FD          11116 	inc	-3 (ix)
   3BFB 20 03             11117 	jr	NZ,00146$
   3BFD DD 34 FE          11118 	inc	-2 (ix)
   3C00                   11119 00146$:
   3C00 C3rB7s3B          11120 	jp	00114$
   3C03                   11121 00120$:
                          11122 ;demo.c:1654: for (y = 0; y < 2; y++) {
   3C03 DD 34 FB          11123 	inc	-5 (ix)
   3C06 20 03             11124 	jr	NZ,00147$
   3C08 DD 34 FC          11125 	inc	-4 (ix)
   3C0B                   11126 00147$:
   3C0B C3r82s3B          11127 	jp	00118$
   3C0E                   11128 00121$:
                          11129 ;demo.c:1661: for (x = 0; x < 26; x++) {
   3C0E DD 36 FD 00       11130 	ld	-3 (ix),#0x00
   3C12 DD 36 FE 00       11131 	ld	-2 (ix),#0x00
   3C16 DD 36 F9 00       11132 	ld	-7 (ix),#0x00
   3C1A DD 36 FA 00       11133 	ld	-6 (ix),#0x00
   3C1E                   11134 00122$:
   3C1E DD 7E FD          11135 	ld	a,-3 (ix)
   3C21 D6 1A             11136 	sub	a,#0x1A
   3C23 DD 7E FE          11137 	ld	a,-2 (ix)
   3C26 DE 00             11138 	sbc	a,#0x00
   3C28 F2r7As3C          11139 	jp	P,00125$
                          11140 ;demo.c:1662: twelvetimes[x] = x * 12;
   3C2B DD 4E FD          11141 	ld	c,-3 (ix)
   3C2E DD 46 FE          11142 	ld	b,-2 (ix)
   3C31 CB 21             11143 	sla	c
   3C33 CB 10             11144 	rl	b
   3C35 21r20s01          11145 	ld	hl,#_twelvetimes
   3C38 09                11146 	add	hl,bc
   3C39 DD 7E F9          11147 	ld	a,-7 (ix)
   3C3C 77                11148 	ld	(hl),a
   3C3D 23                11149 	inc	hl
   3C3E DD 7E FA          11150 	ld	a,-6 (ix)
   3C41 77                11151 	ld	(hl),a
                          11152 ;demo.c:1663: eighttimes[x] = x * 8;
   3C42 21r54s01          11153 	ld	hl,#_eighttimes
   3C45 09                11154 	add	hl,bc
   3C46 4D                11155 	ld	c,l
   3C47 44                11156 	ld	b,h
   3C48 DD 5E FD          11157 	ld	e,-3 (ix)
   3C4B DD 56 FE          11158 	ld	d,-2 (ix)
   3C4E CB 23             11159 	sla	e
   3C50 CB 12             11160 	rl	d
   3C52 CB 23             11161 	sla	e
   3C54 CB 12             11162 	rl	d
   3C56 CB 23             11163 	sla	e
   3C58 CB 12             11164 	rl	d
   3C5A 69                11165 	ld	l,c
   3C5B 60                11166 	ld	h,b
   3C5C 73                11167 	ld	(hl),e
   3C5D 23                11168 	inc	hl
   3C5E 72                11169 	ld	(hl),d
                          11170 ;demo.c:1661: for (x = 0; x < 26; x++) {
   3C5F DD 7E F9          11171 	ld	a,-7 (ix)
   3C62 C6 0C             11172 	add	a,#0x0C
   3C64 DD 77 F9          11173 	ld	-7 (ix),a
   3C67 DD 7E FA          11174 	ld	a,-6 (ix)
   3C6A CE 00             11175 	adc	a,#0x00
   3C6C DD 77 FA          11176 	ld	-6 (ix),a
   3C6F DD 34 FD          11177 	inc	-3 (ix)
   3C72 20 03             11178 	jr	NZ,00152$
   3C74 DD 34 FE          11179 	inc	-2 (ix)
   3C77                   11180 00152$:
   3C77 C3r1Es3C          11181 	jp	00122$
   3C7A                   11182 00125$:
                          11183 ;demo.c:1666: puts("init sweet PSG bleeps...");
   3C7A 21r90s41          11184 	ld	hl,#__str_28
   3C7D E5                11185 	push	hl
   3C7E CDr00s00          11186 	call	_puts
   3C81 F1                11187 	pop	af
                          11188 ;demo.c:1668: PLY_SongPtr = (char *)0x0103;
   3C82 21r00s00          11189 	ld	hl,#_PLY_SongPtr + 0
   3C85 36 03             11190 	ld	(hl), #0x03
   3C87 21r01s00          11191 	ld	hl,#_PLY_SongPtr + 1
   3C8A 36 01             11192 	ld	(hl), #0x01
                          11193 ;demo.c:1669: PLY_Init();
   3C8C CDr00s00          11194 	call	_PLY_Init
                          11195 ;demo.c:1670: puts("done.\r\n");
   3C8F 21rA9s41          11196 	ld	hl,#__str_29
   3C92 E5                11197 	push	hl
   3C93 CDr00s00          11198 	call	_puts
   3C96 F1                11199 	pop	af
                          11200 ;demo.c:1672: puts("detecting ya vdp type...\r\n");
   3C97 21rB1s41          11201 	ld	hl,#__str_30
   3C9A E5                11202 	push	hl
   3C9B CDr00s00          11203 	call	_puts
   3C9E F1                11204 	pop	af
                          11205 ;demo.c:1673: if(isvdp2())
   3C9F CDr00s00          11206 	call	_isvdp2
   3CA2 AF                11207 	xor	a,a
   3CA3 B5                11208 	or	a,l
   3CA4 28 0A             11209 	jr	Z,00102$
                          11210 ;demo.c:1675: puts("vdp2 found! setting 50hz...\r\n");
   3CA6 21rCCs41          11211 	ld	hl,#__str_31
   3CA9 E5                11212 	push	hl
   3CAA CDr00s00          11213 	call	_puts
   3CAD F1                11214 	pop	af
   3CAE 18 0B             11215 	jr	00103$
   3CB0                   11216 00102$:
                          11217 ;demo.c:1678: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n");
   3CB0 21rEAs41          11218 	ld	hl,#__str_32
   3CB3 E5                11219 	push	hl
   3CB4 CDr00s00          11220 	call	_puts
   3CB7 F1                11221 	pop	af
                          11222 ;demo.c:1679: do_quit();
   3CB8 CDr22s3B          11223 	call	_do_quit
   3CBB                   11224 00103$:
                          11225 ;demo.c:1682: pal_load("TWISTER PL5",32,0);
   3CBB 21 00 00          11226 	ld	hl,#0x0000
   3CBE E5                11227 	push	hl
   3CBF 3E 20             11228 	ld	a,#0x20
   3CC1 F5                11229 	push	af
   3CC2 33                11230 	inc	sp
   3CC3 21r2Fs42          11231 	ld	hl,#__str_33
   3CC6 E5                11232 	push	hl
   3CC7 CDr37s08          11233 	call	_pal_load
   3CCA F1                11234 	pop	af
   3CCB F1                11235 	pop	af
   3CCC 33                11236 	inc	sp
                          11237 ;demo.c:1683: memcpy(twister_palette, cur_palette, 32);
   3CCD 21 20 00          11238 	ld	hl,#0x0020
   3CD0 E5                11239 	push	hl
   3CD1 21r46s40          11240 	ld	hl,#_cur_palette
   3CD4 E5                11241 	push	hl
   3CD5 21rA6s40          11242 	ld	hl,#_twister_palette
   3CD8 E5                11243 	push	hl
   3CD9 CDr00s00          11244 	call	_memcpy
   3CDC F1                11245 	pop	af
   3CDD F1                11246 	pop	af
   3CDE F1                11247 	pop	af
                          11248 ;demo.c:1684: pal_load("LF      PL5",32,0);
   3CDF 21 00 00          11249 	ld	hl,#0x0000
   3CE2 E5                11250 	push	hl
   3CE3 3E 20             11251 	ld	a,#0x20
   3CE5 F5                11252 	push	af
   3CE6 33                11253 	inc	sp
   3CE7 21r3Bs42          11254 	ld	hl,#__str_34
   3CEA E5                11255 	push	hl
   3CEB CDr37s08          11256 	call	_pal_load
   3CEE F1                11257 	pop	af
   3CEF F1                11258 	pop	af
   3CF0 33                11259 	inc	sp
                          11260 ;demo.c:1685: memcpy(tf_palette, cur_palette, 32);
   3CF1 21 20 00          11261 	ld	hl,#0x0020
   3CF4 E5                11262 	push	hl
   3CF5 21r46s40          11263 	ld	hl,#_cur_palette
   3CF8 E5                11264 	push	hl
   3CF9 21rC6s40          11265 	ld	hl,#_tf_palette
   3CFC E5                11266 	push	hl
   3CFD CDr00s00          11267 	call	_memcpy
   3D00 F1                11268 	pop	af
   3D01 F1                11269 	pop	af
   3D02 F1                11270 	pop	af
                          11271 ;demo.c:1686: pal_load("BOXES   PL5",32,0);
   3D03 21 00 00          11272 	ld	hl,#0x0000
   3D06 E5                11273 	push	hl
   3D07 3E 20             11274 	ld	a,#0x20
   3D09 F5                11275 	push	af
   3D0A 33                11276 	inc	sp
   3D0B 21r47s42          11277 	ld	hl,#__str_35
   3D0E E5                11278 	push	hl
   3D0F CDr37s08          11279 	call	_pal_load
   3D12 F1                11280 	pop	af
   3D13 F1                11281 	pop	af
   3D14 33                11282 	inc	sp
                          11283 ;demo.c:1687: memcpy(boxes_palette, cur_palette, 32);
   3D15 21 20 00          11284 	ld	hl,#0x0020
   3D18 E5                11285 	push	hl
   3D19 21r46s40          11286 	ld	hl,#_cur_palette
   3D1C E5                11287 	push	hl
   3D1D 21rE6s40          11288 	ld	hl,#_boxes_palette
   3D20 E5                11289 	push	hl
   3D21 CDr00s00          11290 	call	_memcpy
   3D24 F1                11291 	pop	af
   3D25 F1                11292 	pop	af
   3D26 F1                11293 	pop	af
                          11294 ;demo.c:1688: pal_load("BULBS   PL5",32,0);
   3D27 21 00 00          11295 	ld	hl,#0x0000
   3D2A E5                11296 	push	hl
   3D2B 3E 20             11297 	ld	a,#0x20
   3D2D F5                11298 	push	af
   3D2E 33                11299 	inc	sp
   3D2F 21r53s42          11300 	ld	hl,#__str_36
   3D32 E5                11301 	push	hl
   3D33 CDr37s08          11302 	call	_pal_load
   3D36 F1                11303 	pop	af
   3D37 F1                11304 	pop	af
   3D38 33                11305 	inc	sp
                          11306 ;demo.c:1689: memcpy(bulbs_palette, cur_palette, 32);
   3D39 21 20 00          11307 	ld	hl,#0x0020
   3D3C E5                11308 	push	hl
   3D3D 21r46s40          11309 	ld	hl,#_cur_palette
   3D40 E5                11310 	push	hl
   3D41 21r66s40          11311 	ld	hl,#_bulbs_palette
   3D44 E5                11312 	push	hl
   3D45 CDr00s00          11313 	call	_memcpy
   3D48 F1                11314 	pop	af
   3D49 F1                11315 	pop	af
   3D4A F1                11316 	pop	af
                          11317 ;demo.c:1690: pal_load("CREDIT1 PL6",32,0);
   3D4B 21 00 00          11318 	ld	hl,#0x0000
   3D4E E5                11319 	push	hl
   3D4F 3E 20             11320 	ld	a,#0x20
   3D51 F5                11321 	push	af
   3D52 33                11322 	inc	sp
   3D53 21r5Fs42          11323 	ld	hl,#__str_37
   3D56 E5                11324 	push	hl
   3D57 CDr37s08          11325 	call	_pal_load
   3D5A F1                11326 	pop	af
   3D5B F1                11327 	pop	af
   3D5C 33                11328 	inc	sp
                          11329 ;demo.c:1691: memcpy(credits_palette, cur_palette, 32);
   3D5D 21 20 00          11330 	ld	hl,#0x0020
   3D60 E5                11331 	push	hl
   3D61 21r46s40          11332 	ld	hl,#_cur_palette
   3D64 E5                11333 	push	hl
   3D65 21r06s41          11334 	ld	hl,#_credits_palette
   3D68 E5                11335 	push	hl
   3D69 CDr00s00          11336 	call	_memcpy
   3D6C F1                11337 	pop	af
   3D6D F1                11338 	pop	af
   3D6E F1                11339 	pop	af
                          11340 ;demo.c:1693: puts("all good, starting the demo!\r\n");
   3D6F 21r6Bs42          11341 	ld	hl,#__str_38
   3D72 E5                11342 	push	hl
   3D73 CDr00s00          11343 	call	_puts
   3D76 F1                11344 	pop	af
                          11345 ;demo.c:1695: pause();
   3D77 CDr16s09          11346 	call	_pause
                          11347 ;demo.c:1696: pause();
   3D7A CDr16s09          11348 	call	_pause
                          11349 ;demo.c:1697: pause();
   3D7D CDr16s09          11350 	call	_pause
                          11351 ;demo.c:1698: pause();
   3D80 CDr16s09          11352 	call	_pause
                          11353 ;demo.c:1699: pause();
   3D83 CDr16s09          11354 	call	_pause
                          11355 ;demo.c:1700: pause();
   3D86 CDr16s09          11356 	call	_pause
                          11357 ;demo.c:1702: scratch_clear();
   3D89 CDr24s08          11358 	call	_scratch_clear
                          11359 ;demo.c:1703: vdp_load_palette(scratch);
   3D8C 21rC6s3F          11360 	ld	hl,#_scratch
   3D8F E5                11361 	push	hl
   3D90 CDr00s00          11362 	call	_vdp_load_palette
   3D93 F1                11363 	pop	af
                          11364 ;demo.c:1705: vdp_set_screen5();
   3D94 CDr00s00          11365 	call	_vdp_set_screen5
                          11366 ;demo.c:1707: pck_load("LOADING PCK",5489,0x0000,VRAM_0,0);
   3D97 21 00 00          11367 	ld	hl,#0x0000
   3D9A E5                11368 	push	hl
   3D9B 2E 01             11369 	ld	l, #0x01
   3D9D E5                11370 	push	hl
   3D9E 2E 00             11371 	ld	l, #0x00
   3DA0 E5                11372 	push	hl
   3DA1 21 71 15          11373 	ld	hl,#0x1571
   3DA4 E5                11374 	push	hl
   3DA5 21r8As42          11375 	ld	hl,#__str_39
   3DA8 E5                11376 	push	hl
   3DA9 CDr2Ds0A          11377 	call	_pck_load
   3DAC FD 21 0A 00       11378 	ld	iy,#0x000A
   3DB0 FD 39             11379 	add	iy,sp
   3DB2 FD F9             11380 	ld	sp,iy
                          11381 ;demo.c:1708: cmd.size_x = 256;
   3DB4 21r32s41          11382 	ld	hl, #_cmd + 8
   3DB7 36 00             11383 	ld	(hl),#0x00
   3DB9 23                11384 	inc	hl
   3DBA 36 01             11385 	ld	(hl),#0x01
                          11386 ;demo.c:1709: cmd.size_y = 212;
   3DBC 21r34s41          11387 	ld	hl, #_cmd + 10
   3DBF 36 D4             11388 	ld	(hl),#0xD4
   3DC1 23                11389 	inc	hl
   3DC2 36 00             11390 	ld	(hl),#0x00
                          11391 ;demo.c:1710: cmd.data = 0;
                          11392 ;demo.c:1711: cmd.argument = 0x00;
   3DC4 3E 00             11393 	ld	a,#0x00
   3DC6 32r36s41          11394 	ld	(#_cmd + 12),a
   3DC9 32r37s41          11395 	ld	(#_cmd + 13),a
                          11396 ;demo.c:1712: cmd.command = 0xd0; 
   3DCC 01r38s41          11397 	ld	bc,#_cmd + 14
   3DCF 3E D0             11398 	ld	a,#0xD0
   3DD1 02                11399 	ld	(bc),a
                          11400 ;demo.c:1713: cmd.source_x = 0;
   3DD2 21r2As41          11401 	ld	hl,#_cmd
   3DD5 36 00             11402 	ld	(hl),#0x00
   3DD7 23                11403 	inc	hl
   3DD8 36 00             11404 	ld	(hl),#0x00
                          11405 ;demo.c:1714: cmd.source_y = 0;
   3DDA 21r2Cs41          11406 	ld	hl, #_cmd + 2
   3DDD 36 00             11407 	ld	(hl),#0x00
   3DDF 23                11408 	inc	hl
   3DE0 36 00             11409 	ld	(hl),#0x00
                          11410 ;demo.c:1715: cmd.dest_x = 0;
   3DE2 21r2Es41          11411 	ld	hl, #_cmd + 4
   3DE5 36 00             11412 	ld	(hl),#0x00
   3DE7 23                11413 	inc	hl
   3DE8 36 00             11414 	ld	(hl),#0x00
                          11415 ;demo.c:1716: cmd.dest_y = 768;
   3DEA 21r30s41          11416 	ld	hl, #_cmd + 6
   3DED 36 00             11417 	ld	(hl),#0x00
   3DEF 23                11418 	inc	hl
   3DF0 36 03             11419 	ld	(hl),#0x03
                          11420 ;demo.c:1717: vdp_copier(&cmd);
   3DF2 21r2As41          11421 	ld	hl,#_cmd
   3DF5 E5                11422 	push	hl
   3DF6 CDr00s00          11423 	call	_vdp_copier
   3DF9 F1                11424 	pop	af
                          11425 ;demo.c:1719: vdp_register(2,0x7f);
   3DFA 21 02 7F          11426 	ld	hl,#0x7F02
   3DFD E5                11427 	push	hl
   3DFE CDr00s00          11428 	call	_vdp_register
   3E01 F1                11429 	pop	af
                          11430 ;demo.c:1720: vdp_load_palette(boxes_palette);
   3E02 21rE6s40          11431 	ld	hl,#_boxes_palette
   3E05 E5                11432 	push	hl
   3E06 CDr00s00          11433 	call	_vdp_load_palette
   3E09 F1                11434 	pop	af
                          11435 ;demo.c:1724: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   3E0A 21 00 00          11436 	ld	hl,#0x0000
   3E0D E5                11437 	push	hl
   3E0E 2E 01             11438 	ld	l, #0x01
   3E10 E5                11439 	push	hl
   3E11 2E 00             11440 	ld	l, #0x00
   3E13 E5                11441 	push	hl
   3E14 21 7F 09          11442 	ld	hl,#0x097F
   3E17 E5                11443 	push	hl
   3E18 21r96s42          11444 	ld	hl,#__str_40
   3E1B E5                11445 	push	hl
   3E1C CDr2Ds0A          11446 	call	_pck_load
   3E1F FD 21 0A 00       11447 	ld	iy,#0x000A
   3E23 FD 39             11448 	add	iy,sp
   3E25 FD F9             11449 	ld	sp,iy
                          11450 ;demo.c:1726: cmd.size_x = 256;
   3E27 21r32s41          11451 	ld	hl, #_cmd + 8
   3E2A 36 00             11452 	ld	(hl),#0x00
   3E2C 23                11453 	inc	hl
   3E2D 36 01             11454 	ld	(hl),#0x01
                          11455 ;demo.c:1727: cmd.size_y = 212;
   3E2F 21r34s41          11456 	ld	hl, #_cmd + 10
   3E32 36 D4             11457 	ld	(hl),#0xD4
   3E34 23                11458 	inc	hl
   3E35 36 00             11459 	ld	(hl),#0x00
                          11460 ;demo.c:1728: cmd.data = 0;
                          11461 ;demo.c:1729: cmd.argument = 0x00;
   3E37 3E 00             11462 	ld	a,#0x00
   3E39 32r36s41          11463 	ld	(#_cmd + 12),a
   3E3C 32r37s41          11464 	ld	(#_cmd + 13),a
                          11465 ;demo.c:1730: cmd.command = 0xd0; 
   3E3F 01r38s41          11466 	ld	bc,#_cmd + 14
   3E42 3E D0             11467 	ld	a,#0xD0
   3E44 02                11468 	ld	(bc),a
                          11469 ;demo.c:1731: cmd.source_x = 0;
   3E45 21r2As41          11470 	ld	hl,#_cmd
   3E48 36 00             11471 	ld	(hl),#0x00
   3E4A 23                11472 	inc	hl
   3E4B 36 00             11473 	ld	(hl),#0x00
                          11474 ;demo.c:1732: cmd.source_y = 0;
   3E4D 21r2Cs41          11475 	ld	hl, #_cmd + 2
   3E50 36 00             11476 	ld	(hl),#0x00
   3E52 23                11477 	inc	hl
   3E53 36 00             11478 	ld	(hl),#0x00
                          11479 ;demo.c:1733: cmd.dest_x = 0;
   3E55 21r2Es41          11480 	ld	hl, #_cmd + 4
   3E58 36 00             11481 	ld	(hl),#0x00
   3E5A 23                11482 	inc	hl
   3E5B 36 00             11483 	ld	(hl),#0x00
                          11484 ;demo.c:1734: cmd.dest_y = 256;
   3E5D 21r30s41          11485 	ld	hl, #_cmd + 6
   3E60 36 00             11486 	ld	(hl),#0x00
   3E62 23                11487 	inc	hl
   3E63 36 01             11488 	ld	(hl),#0x01
                          11489 ;demo.c:1735: vdp_copier(&cmd);
   3E65 21r2As41          11490 	ld	hl,#_cmd
   3E68 E5                11491 	push	hl
   3E69 CDr00s00          11492 	call	_vdp_copier
   3E6C F1                11493 	pop	af
                          11494 ;demo.c:1737: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   3E6D 21 00 00          11495 	ld	hl,#0x0000
   3E70 E5                11496 	push	hl
   3E71 2E 01             11497 	ld	l, #0x01
   3E73 E5                11498 	push	hl
   3E74 2E 00             11499 	ld	l, #0x00
   3E76 E5                11500 	push	hl
   3E77 21 C0 0F          11501 	ld	hl,#0x0FC0
   3E7A E5                11502 	push	hl
   3E7B 21rA2s42          11503 	ld	hl,#__str_41
   3E7E E5                11504 	push	hl
   3E7F CDr2Ds0A          11505 	call	_pck_load
   3E82 FD 21 0A 00       11506 	ld	iy,#0x000A
   3E86 FD 39             11507 	add	iy,sp
   3E88 FD F9             11508 	ld	sp,iy
                          11509 ;demo.c:1739: cmd.size_x = 256;
   3E8A 21r32s41          11510 	ld	hl, #_cmd + 8
   3E8D 36 00             11511 	ld	(hl),#0x00
   3E8F 23                11512 	inc	hl
   3E90 36 01             11513 	ld	(hl),#0x01
                          11514 ;demo.c:1740: cmd.size_y = 212;
   3E92 21r34s41          11515 	ld	hl, #_cmd + 10
   3E95 36 D4             11516 	ld	(hl),#0xD4
   3E97 23                11517 	inc	hl
   3E98 36 00             11518 	ld	(hl),#0x00
                          11519 ;demo.c:1741: cmd.data = 0;
                          11520 ;demo.c:1742: cmd.argument = 0x00;
   3E9A 3E 00             11521 	ld	a,#0x00
   3E9C 32r36s41          11522 	ld	(#_cmd + 12),a
   3E9F 32r37s41          11523 	ld	(#_cmd + 13),a
                          11524 ;demo.c:1743: cmd.command = 0xd0; 
   3EA2 01r38s41          11525 	ld	bc,#_cmd + 14
   3EA5 3E D0             11526 	ld	a,#0xD0
   3EA7 02                11527 	ld	(bc),a
                          11528 ;demo.c:1744: cmd.source_x = 0;
   3EA8 21r2As41          11529 	ld	hl,#_cmd
   3EAB 36 00             11530 	ld	(hl),#0x00
   3EAD 23                11531 	inc	hl
   3EAE 36 00             11532 	ld	(hl),#0x00
                          11533 ;demo.c:1745: cmd.source_y = 0;
   3EB0 21r2Cs41          11534 	ld	hl, #_cmd + 2
   3EB3 36 00             11535 	ld	(hl),#0x00
   3EB5 23                11536 	inc	hl
   3EB6 36 00             11537 	ld	(hl),#0x00
                          11538 ;demo.c:1746: cmd.dest_x = 0;
   3EB8 21r2Es41          11539 	ld	hl, #_cmd + 4
   3EBB 36 00             11540 	ld	(hl),#0x00
   3EBD 23                11541 	inc	hl
   3EBE 36 00             11542 	ld	(hl),#0x00
                          11543 ;demo.c:1747: cmd.dest_y = 512;
   3EC0 21r30s41          11544 	ld	hl, #_cmd + 6
   3EC3 36 00             11545 	ld	(hl),#0x00
   3EC5 23                11546 	inc	hl
   3EC6 36 02             11547 	ld	(hl),#0x02
                          11548 ;demo.c:1748: vdp_copier(&cmd);
   3EC8 21r2As41          11549 	ld	hl,#_cmd
   3ECB E5                11550 	push	hl
   3ECC CDr00s00          11551 	call	_vdp_copier
   3ECF F1                11552 	pop	af
                          11553 ;demo.c:1750: memset((uint8_t *) &crebuffer1, 0, 3323);
   3ED0 21 FB 0C          11554 	ld	hl,#0x0CFB
   3ED3 E5                11555 	push	hl
   3ED4 3E 00             11556 	ld	a,#0x00
   3ED6 F5                11557 	push	af
   3ED7 33                11558 	inc	sp
   3ED8 21rCCs11          11559 	ld	hl,#_crebuffer1
   3EDB E5                11560 	push	hl
   3EDC CDr00s00          11561 	call	_memset
   3EDF F1                11562 	pop	af
   3EE0 F1                11563 	pop	af
   3EE1 33                11564 	inc	sp
                          11565 ;demo.c:1751: raw_load("CREDIT1 PCK", 3323, crebuffer1,0);
   3EE2 21 00 00          11566 	ld	hl,#0x0000
   3EE5 E5                11567 	push	hl
   3EE6 21rCCs11          11568 	ld	hl,#_crebuffer1
   3EE9 E5                11569 	push	hl
   3EEA 21 FB 0C          11570 	ld	hl,#0x0CFB
   3EED E5                11571 	push	hl
   3EEE 21rAEs42          11572 	ld	hl,#__str_42
   3EF1 E5                11573 	push	hl
   3EF2 CDr2As09          11574 	call	_raw_load
   3EF5 F1                11575 	pop	af
   3EF6 F1                11576 	pop	af
   3EF7 F1                11577 	pop	af
   3EF8 F1                11578 	pop	af
                          11579 ;demo.c:1752: memset((uint8_t *) &crebuffer2, 0, 4724);
   3EF9 21 74 12          11580 	ld	hl,#0x1274
   3EFC E5                11581 	push	hl
   3EFD 3E 00             11582 	ld	a,#0x00
   3EFF F5                11583 	push	af
   3F00 33                11584 	inc	sp
   3F01 21rC7s1E          11585 	ld	hl,#_crebuffer2
   3F04 E5                11586 	push	hl
   3F05 CDr00s00          11587 	call	_memset
   3F08 F1                11588 	pop	af
   3F09 F1                11589 	pop	af
   3F0A 33                11590 	inc	sp
                          11591 ;demo.c:1753: raw_load("CREDIT2 PCK", 4724, crebuffer2,0);
   3F0B 21 00 00          11592 	ld	hl,#0x0000
   3F0E E5                11593 	push	hl
   3F0F 21rC7s1E          11594 	ld	hl,#_crebuffer2
   3F12 E5                11595 	push	hl
   3F13 21 74 12          11596 	ld	hl,#0x1274
   3F16 E5                11597 	push	hl
   3F17 21rBAs42          11598 	ld	hl,#__str_43
   3F1A E5                11599 	push	hl
   3F1B CDr2As09          11600 	call	_raw_load
   3F1E F1                11601 	pop	af
   3F1F F1                11602 	pop	af
   3F20 F1                11603 	pop	af
   3F21 F1                11604 	pop	af
                          11605 ;demo.c:1754: memset((uint8_t *) &crebuffer3, 0, 3723);
   3F22 21 8B 0E          11606 	ld	hl,#0x0E8B
   3F25 E5                11607 	push	hl
   3F26 3E 00             11608 	ld	a,#0x00
   3F28 F5                11609 	push	af
   3F29 33                11610 	inc	sp
   3F2A 21r3Bs31          11611 	ld	hl,#_crebuffer3
   3F2D E5                11612 	push	hl
   3F2E CDr00s00          11613 	call	_memset
   3F31 F1                11614 	pop	af
   3F32 F1                11615 	pop	af
   3F33 33                11616 	inc	sp
                          11617 ;demo.c:1755: raw_load("CREDIT3 PCK", 3723, crebuffer3,0);
   3F34 21 00 00          11618 	ld	hl,#0x0000
   3F37 E5                11619 	push	hl
   3F38 21r3Bs31          11620 	ld	hl,#_crebuffer3
   3F3B E5                11621 	push	hl
   3F3C 21 8B 0E          11622 	ld	hl,#0x0E8B
   3F3F E5                11623 	push	hl
   3F40 21rC6s42          11624 	ld	hl,#__str_44
   3F43 E5                11625 	push	hl
   3F44 CDr2As09          11626 	call	_raw_load
   3F47 F1                11627 	pop	af
   3F48 F1                11628 	pop	af
   3F49 F1                11629 	pop	af
   3F4A F1                11630 	pop	af
                          11631 ;demo.c:1757: scratch_clear();
   3F4B CDr24s08          11632 	call	_scratch_clear
                          11633 ;demo.c:1758: vdp_load_palette(scratch);
   3F4E 21rC6s3F          11634 	ld	hl,#_scratch
   3F51 E5                11635 	push	hl
   3F52 CDr00s00          11636 	call	_vdp_load_palette
   3F55 F1                11637 	pop	af
                          11638 ;demo.c:1760: vdp_register(2,0x1f);
   3F56 21 02 1F          11639 	ld	hl,#0x1F02
   3F59 E5                11640 	push	hl
   3F5A CDr00s00          11641 	call	_vdp_register
   3F5D F1                11642 	pop	af
                          11643 ;demo.c:1762: pck_load("BOXES   PCK",3002,0x0000,VRAM_0,0);
   3F5E 21 00 00          11644 	ld	hl,#0x0000
   3F61 E5                11645 	push	hl
   3F62 2E 01             11646 	ld	l, #0x01
   3F64 E5                11647 	push	hl
   3F65 2E 00             11648 	ld	l, #0x00
   3F67 E5                11649 	push	hl
   3F68 21 BA 0B          11650 	ld	hl,#0x0BBA
   3F6B E5                11651 	push	hl
   3F6C 21rD2s42          11652 	ld	hl,#__str_45
   3F6F E5                11653 	push	hl
   3F70 CDr2Ds0A          11654 	call	_pck_load
   3F73 FD 21 0A 00       11655 	ld	iy,#0x000A
   3F77 FD 39             11656 	add	iy,sp
   3F79 FD F9             11657 	ld	sp,iy
                          11658 ;demo.c:1763: cmd.size_x = 256;
   3F7B 21r32s41          11659 	ld	hl, #_cmd + 8
   3F7E 36 00             11660 	ld	(hl),#0x00
   3F80 23                11661 	inc	hl
   3F81 36 01             11662 	ld	(hl),#0x01
                          11663 ;demo.c:1764: cmd.size_y = 212;
   3F83 21r34s41          11664 	ld	hl, #_cmd + 10
   3F86 36 D4             11665 	ld	(hl),#0xD4
   3F88 23                11666 	inc	hl
   3F89 36 00             11667 	ld	(hl),#0x00
                          11668 ;demo.c:1765: cmd.data = 0;
                          11669 ;demo.c:1766: cmd.argument = 0x00;
   3F8B 3E 00             11670 	ld	a,#0x00
   3F8D 32r36s41          11671 	ld	(#_cmd + 12),a
   3F90 32r37s41          11672 	ld	(#_cmd + 13),a
                          11673 ;demo.c:1767: cmd.command = 0xd0; 
   3F93 01r38s41          11674 	ld	bc,#_cmd + 14
   3F96 3E D0             11675 	ld	a,#0xD0
   3F98 02                11676 	ld	(bc),a
                          11677 ;demo.c:1768: cmd.source_x = 0;
   3F99 21r2As41          11678 	ld	hl,#_cmd
   3F9C 36 00             11679 	ld	(hl),#0x00
   3F9E 23                11680 	inc	hl
   3F9F 36 00             11681 	ld	(hl),#0x00
                          11682 ;demo.c:1769: cmd.source_y = 0;
   3FA1 21r2Cs41          11683 	ld	hl, #_cmd + 2
   3FA4 36 00             11684 	ld	(hl),#0x00
   3FA6 23                11685 	inc	hl
   3FA7 36 00             11686 	ld	(hl),#0x00
                          11687 ;demo.c:1770: cmd.dest_x = 0;
   3FA9 21r2Es41          11688 	ld	hl, #_cmd + 4
   3FAC 36 00             11689 	ld	(hl),#0x00
   3FAE 23                11690 	inc	hl
   3FAF 36 00             11691 	ld	(hl),#0x00
                          11692 ;demo.c:1771: cmd.dest_y = 768;
   3FB1 21r30s41          11693 	ld	hl, #_cmd + 6
   3FB4 36 00             11694 	ld	(hl),#0x00
   3FB6 23                11695 	inc	hl
   3FB7 36 03             11696 	ld	(hl),#0x03
                          11697 ;demo.c:1772: vdp_copier(&cmd);
   3FB9 21r2As41          11698 	ld	hl,#_cmd
   3FBC E5                11699 	push	hl
   3FBD CDr00s00          11700 	call	_vdp_copier
   3FC0 F1                11701 	pop	af
                          11702 ;demo.c:1774: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   3FC1 21 00 00          11703 	ld	hl,#0x0000
   3FC4 E5                11704 	push	hl
   3FC5 2E 01             11705 	ld	l, #0x01
   3FC7 E5                11706 	push	hl
   3FC8 2E 00             11707 	ld	l, #0x00
   3FCA E5                11708 	push	hl
   3FCB 21 6A 08          11709 	ld	hl,#0x086A
   3FCE E5                11710 	push	hl
   3FCF 21rDEs42          11711 	ld	hl,#__str_46
   3FD2 E5                11712 	push	hl
   3FD3 CDr2Ds0A          11713 	call	_pck_load
   3FD6 FD 21 0A 00       11714 	ld	iy,#0x000A
   3FDA FD 39             11715 	add	iy,sp
   3FDC FD F9             11716 	ld	sp,iy
                          11717 ;demo.c:1776: cmd.size_x = 108;
   3FDE 21r32s41          11718 	ld	hl, #_cmd + 8
   3FE1 36 6C             11719 	ld	(hl),#0x6C
   3FE3 23                11720 	inc	hl
   3FE4 36 00             11721 	ld	(hl),#0x00
                          11722 ;demo.c:1777: cmd.size_y = 116;
   3FE6 21r34s41          11723 	ld	hl, #_cmd + 10
   3FE9 36 74             11724 	ld	(hl),#0x74
   3FEB 23                11725 	inc	hl
   3FEC 36 00             11726 	ld	(hl),#0x00
                          11727 ;demo.c:1778: cmd.data = 0;
                          11728 ;demo.c:1779: cmd.argument = 0x00;
   3FEE 3E 00             11729 	ld	a,#0x00
   3FF0 32r36s41          11730 	ld	(#_cmd + 12),a
   3FF3 32r37s41          11731 	ld	(#_cmd + 13),a
                          11732 ;demo.c:1780: cmd.command = 0xd0; 
   3FF6 01r38s41          11733 	ld	bc,#_cmd + 14
   3FF9 3E D0             11734 	ld	a,#0xD0
   3FFB 02                11735 	ld	(bc),a
                          11736 ;demo.c:1781: cmd.source_x = 75;
   3FFC 21r2As41          11737 	ld	hl,#_cmd
   3FFF 36 4B             11738 	ld	(hl),#0x4B
   4001 23                11739 	inc	hl
   4002 36 00             11740 	ld	(hl),#0x00
                          11741 ;demo.c:1782: cmd.source_y = 50;
   4004 21r2Cs41          11742 	ld	hl, #_cmd + 2
   4007 36 32             11743 	ld	(hl),#0x32
   4009 23                11744 	inc	hl
   400A 36 00             11745 	ld	(hl),#0x00
                          11746 ;demo.c:1783: cmd.dest_x = 75;
   400C 21r2Es41          11747 	ld	hl, #_cmd + 4
   400F 36 4B             11748 	ld	(hl),#0x4B
   4011 23                11749 	inc	hl
   4012 36 00             11750 	ld	(hl),#0x00
                          11751 ;demo.c:1784: cmd.dest_y = 256;
   4014 21r30s41          11752 	ld	hl, #_cmd + 6
   4017 36 00             11753 	ld	(hl),#0x00
   4019 23                11754 	inc	hl
   401A 36 01             11755 	ld	(hl),#0x01
                          11756 ;demo.c:1785: vdp_copier(&cmd);
   401C 21r2As41          11757 	ld	hl,#_cmd
   401F E5                11758 	push	hl
   4020 CDr00s00          11759 	call	_vdp_copier
   4023 F1                11760 	pop	af
                          11761 ;demo.c:1787: cmd.size_x = 108;
   4024 21r32s41          11762 	ld	hl, #_cmd + 8
   4027 36 6C             11763 	ld	(hl),#0x6C
   4029 23                11764 	inc	hl
   402A 36 00             11765 	ld	(hl),#0x00
                          11766 ;demo.c:1788: cmd.size_y = 60;
   402C 21r34s41          11767 	ld	hl, #_cmd + 10
   402F 36 3C             11768 	ld	(hl),#0x3C
   4031 23                11769 	inc	hl
   4032 36 00             11770 	ld	(hl),#0x00
                          11771 ;demo.c:1789: cmd.data = 0;
                          11772 ;demo.c:1790: cmd.argument = 0x00;
   4034 3E 00             11773 	ld	a,#0x00
   4036 32r36s41          11774 	ld	(#_cmd + 12),a
   4039 32r37s41          11775 	ld	(#_cmd + 13),a
                          11776 ;demo.c:1791: cmd.command = 0xd0; 
   403C 01r38s41          11777 	ld	bc,#_cmd + 14
   403F 3E D0             11778 	ld	a,#0xD0
   4041 02                11779 	ld	(bc),a
                          11780 ;demo.c:1792: cmd.source_x = 75;
   4042 21r2As41          11781 	ld	hl,#_cmd
   4045 36 4B             11782 	ld	(hl),#0x4B
   4047 23                11783 	inc	hl
   4048 36 00             11784 	ld	(hl),#0x00
                          11785 ;demo.c:1793: cmd.source_y = 256+110;
   404A 21r2Cs41          11786 	ld	hl, #_cmd + 2
   404D 36 6E             11787 	ld	(hl),#0x6E
   404F 23                11788 	inc	hl
   4050 36 01             11789 	ld	(hl),#0x01
                          11790 ;demo.c:1794: cmd.dest_x = 75;
   4052 21r2Es41          11791 	ld	hl, #_cmd + 4
   4055 36 4B             11792 	ld	(hl),#0x4B
   4057 23                11793 	inc	hl
   4058 36 00             11794 	ld	(hl),#0x00
                          11795 ;demo.c:1795: cmd.dest_y = 40;
   405A 21r30s41          11796 	ld	hl, #_cmd + 6
   405D 36 28             11797 	ld	(hl),#0x28
   405F 23                11798 	inc	hl
   4060 36 00             11799 	ld	(hl),#0x00
                          11800 ;demo.c:1796: vdp_copier(&cmd);
   4062 21r2As41          11801 	ld	hl,#_cmd
   4065 E5                11802 	push	hl
   4066 CDr00s00          11803 	call	_vdp_copier
   4069 F1                11804 	pop	af
                          11805 ;demo.c:1797: cmd.dest_x = 75;
   406A 21r2Es41          11806 	ld	hl, #_cmd + 4
   406D 36 4B             11807 	ld	(hl),#0x4B
   406F 23                11808 	inc	hl
   4070 36 00             11809 	ld	(hl),#0x00
                          11810 ;demo.c:1798: cmd.dest_y = 100;
   4072 21r30s41          11811 	ld	hl, #_cmd + 6
   4075 36 64             11812 	ld	(hl),#0x64
   4077 23                11813 	inc	hl
   4078 36 00             11814 	ld	(hl),#0x00
                          11815 ;demo.c:1799: vdp_copier(&cmd);
   407A 21r2As41          11816 	ld	hl,#_cmd
   407D E5                11817 	push	hl
   407E CDr00s00          11818 	call	_vdp_copier
   4081 F1                11819 	pop	af
                          11820 ;demo.c:1801: pal_load("DSSLOGO PL5",32,0);
   4082 21 00 00          11821 	ld	hl,#0x0000
   4085 E5                11822 	push	hl
   4086 3E 20             11823 	ld	a,#0x20
   4088 F5                11824 	push	af
   4089 33                11825 	inc	sp
   408A 21rEAs42          11826 	ld	hl,#__str_47
   408D E5                11827 	push	hl
   408E CDr37s08          11828 	call	_pal_load
   4091 F1                11829 	pop	af
   4092 F1                11830 	pop	af
   4093 33                11831 	inc	sp
                          11832 ;demo.c:1803: scratch_clear();
   4094 CDr24s08          11833 	call	_scratch_clear
                          11834 ;demo.c:1805: vdp_register(9,130); // 50hz,212
   4097 21 09 82          11835 	ld	hl,#0x8209
   409A E5                11836 	push	hl
   409B CDr00s00          11837 	call	_vdp_register
   409E F1                11838 	pop	af
                          11839 ;demo.c:1807: install_isr(my_isr);
   409F 21rECs07          11840 	ld	hl,#_my_isr
   40A2 E5                11841 	push	hl
   40A3 CDr00s00          11842 	call	_install_isr
   40A6 F1                11843 	pop	af
                          11844 ;demo.c:1811: while (!quit) {
   40A7                   11845 00111$:
   40A7 AF                11846 	xor	a,a
   40A8 DD B6 FF          11847 	or	a,-1 (ix)
   40AB C2r66s41          11848 	jp	NZ,00113$
                          11849 ;demo.c:1813: if (vbicount >= scenetimings[timeindex+1]) {
   40AE 21r3Es42          11850 	ld	hl,#_timeindex + 0
   40B1 4E                11851 	ld	c,(hl)
   40B2 0C                11852 	inc	c
   40B3 CB 21             11853 	sla	c
   40B5 3Er51             11854 	ld	a,#<_scenetimings
   40B7 81                11855 	add	a,c
   40B8 6F                11856 	ld	l,a
   40B9 3Es41             11857 	ld	a,#>_scenetimings
   40BB CE 00             11858 	adc	a,#0x00
   40BD 67                11859 	ld	h,a
   40BE 4E                11860 	ld	c,(hl)
   40BF 23                11861 	inc	hl
   40C0 46                11862 	ld	b,(hl)
   40C1 3Ar26s41          11863 	ld	a,(#_vbicount+0)
   40C4 91                11864 	sub	a,c
   40C5 3Ar27s41          11865 	ld	a,(#_vbicount+1)
   40C8 98                11866 	sbc	a,b
   40C9 FArF2s40          11867 	jp	M,00105$
                          11868 ;demo.c:1814: sceneindex++;
   40CC FD 21r3Cs42       11869 	ld	iy,#_sceneindex
   40D0 FD 34 00          11870 	inc	0 (iy)
   40D3 20 07             11871 	jr	NZ,00153$
   40D5 FD 21r3Cs42       11872 	ld	iy,#_sceneindex
   40D9 FD 34 01          11873 	inc	1 (iy)
   40DC                   11874 00153$:
                          11875 ;demo.c:1815: timeindex+=2;
   40DC 21r3Es42          11876 	ld	hl,#_timeindex
   40DF 7E                11877 	ld	a,(hl)
   40E0 C6 02             11878 	add	a,#0x02
   40E2 23                11879 	inc	hl
   40E3 2B                11880 	dec	hl
   40E4 C5                11881 	push	bc
   40E5 4F                11882 	ld	c, a
   40E6 23                11883 	inc	hl
   40E7 7E                11884 	ld	a, (hl)
   40E8 47                11885 	ld	b, a
   40E9 79                11886 	ld	a, c
   40EA 2B                11887 	dec	hl
   40EB 77                11888 	ld	(hl), a
   40EC 78                11889 	ld	a, b
   40ED C1                11890 	pop	bc
   40EE CE 00             11891 	adc	a,#0x00
   40F0 23                11892 	inc	hl
   40F1 77                11893 	ld	(hl),a
   40F2                   11894 00105$:
                          11895 ;demo.c:1818: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   40F2 21r3Es42          11896 	ld	hl,#_timeindex + 0
   40F5 4E                11897 	ld	c,(hl)
   40F6 21r3Fs42          11898 	ld	hl,#_timeindex + 1
   40F9 46                11899 	ld	b,(hl)
   40FA CB 21             11900 	sla	c
   40FC CB 10             11901 	rl	b
   40FE 21r51s41          11902 	ld	hl,#_scenetimings
   4101 09                11903 	add	hl,bc
   4102 4E                11904 	ld	c,(hl)
   4103 23                11905 	inc	hl
   4104 46                11906 	ld	b,(hl)
   4105 3Ar26s41          11907 	ld	a,(#_vbicount+0)
   4108 91                11908 	sub	a,c
   4109 3Ar27s41          11909 	ld	a,(#_vbicount+1)
   410C 98                11910 	sbc	a,b
   410D FAr52s41          11911 	jp	M,00107$
   4110 21r3Es42          11912 	ld	hl,#_timeindex + 0
   4113 4E                11913 	ld	c,(hl)
   4114 0C                11914 	inc	c
   4115 CB 21             11915 	sla	c
   4117 3Er51             11916 	ld	a,#<_scenetimings
   4119 81                11917 	add	a,c
   411A 6F                11918 	ld	l,a
   411B 3Es41             11919 	ld	a,#>_scenetimings
   411D CE 00             11920 	adc	a,#0x00
   411F 67                11921 	ld	h,a
   4120 4E                11922 	ld	c,(hl)
   4121 23                11923 	inc	hl
   4122 46                11924 	ld	b,(hl)
   4123 3Ar26s41          11925 	ld	a,(#_vbicount+0)
   4126 91                11926 	sub	a,c
   4127 FD 21r26s41       11927 	ld	iy,#_vbicount
   412B FD 7E 01          11928 	ld	a,1 (iy)
   412E 98                11929 	sbc	a,b
   412F F2r52s41          11930 	jp	P,00107$
                          11931 ;demo.c:1819: waitVB();
   4132 76                11932 		halt 
                          11933 ;demo.c:1820: scenepointers[sceneindex]();
   4133 21r3Cs42          11934 	ld	hl,#_sceneindex + 0
   4136 4E                11935 	ld	c,(hl)
   4137 FD 21r3Cs42       11936 	ld	iy,#_sceneindex
   413B FD 46 01          11937 	ld	b,1 (iy)
   413E CB 21             11938 	sla	c
   4140 CB 10             11939 	rl	b
   4142 21r39s41          11940 	ld	hl,#_scenepointers
   4145 09                11941 	add	hl,bc
   4146 4E                11942 	ld	c,(hl)
   4147 23                11943 	inc	hl
   4148 46                11944 	ld	b,(hl)
   4149 C5                11945 	push	bc
   414A 21r51s41          11946 	ld	hl,#00158$
   414D E5                11947 	push	hl
   414E 69                11948 	ld	l,c
   414F 60                11949 	ld	h,b
   4150 E9                11950 	jp	(hl)
   4151                   11951 00158$:
   4151 C1                11952 	pop	bc
   4152                   11953 00107$:
                          11954 ;demo.c:1824: if(space())
   4152 21 08 01          11955 	ld	hl,#0x0108
   4155 E5                11956 	push	hl
   4156 CDr00s00          11957 	call	_ispressed
   4159 F1                11958 	pop	af
   415A AF                11959 	xor	a,a
   415B B5                11960 	or	a,l
   415C CArA7s40          11961 	jp	Z,00111$
                          11962 ;demo.c:1825: quit=1;
   415F DD 36 FF 01       11963 	ld	-1 (ix),#0x01
   4163 C3rA7s40          11964 	jp	00111$
   4166                   11965 00113$:
                          11966 ;demo.c:1828: do_quit();
   4166 CDr22s3B          11967 	call	_do_quit
   4169 DD F9             11968 	ld	sp,ix
   416B DD E1             11969 	pop	ix
   416D C9                11970 	ret
   416E                   11971 _main_end::
   416E                   11972 __str_27:
   416E 5B 73 74 61 72 74 11973 	.ascii "[starting DSS MSX demosystem]"
        69 6E 67 20 44 53
        53 20 4D 53 58 20
        64 65 6D 6F 73 79
        73 74 65 6D 5D
   418B 0D                11974 	.db 0x0D
   418C 0A                11975 	.db 0x0A
   418D 0D                11976 	.db 0x0D
   418E 0A                11977 	.db 0x0A
   418F 00                11978 	.db 0x00
   4190                   11979 __str_28:
   4190 69 6E 69 74 20 73 11980 	.ascii "init sweet PSG bleeps..."
        77 65 65 74 20 50
        53 47 20 62 6C 65
        65 70 73 2E 2E 2E
   41A8 00                11981 	.db 0x00
   41A9                   11982 __str_29:
   41A9 64 6F 6E 65 2E    11983 	.ascii "done."
   41AE 0D                11984 	.db 0x0D
   41AF 0A                11985 	.db 0x0A
   41B0 00                11986 	.db 0x00
   41B1                   11987 __str_30:
   41B1 64 65 74 65 63 74 11988 	.ascii "detecting ya vdp type..."
        69 6E 67 20 79 61
        20 76 64 70 20 74
        79 70 65 2E 2E 2E
   41C9 0D                11989 	.db 0x0D
   41CA 0A                11990 	.db 0x0A
   41CB 00                11991 	.db 0x00
   41CC                   11992 __str_31:
   41CC 76 64 70 32 20 66 11993 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   41E7 0D                11994 	.db 0x0D
   41E8 0A                11995 	.db 0x0A
   41E9 00                11996 	.db 0x00
   41EA                   11997 __str_32:
   41EA 20 76 64 70 31 20 11998 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   41F6 0D                11999 	.db 0x0D
   41F7 0A                12000 	.db 0x0A
   41F8 53 6F 72 72 79 2C 12001 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   4226 20 56 52 41 4D 2E 12002 	.ascii " VRAM."
   422C 0D                12003 	.db 0x0D
   422D 0A                12004 	.db 0x0A
   422E 00                12005 	.db 0x00
   422F                   12006 __str_33:
   422F 54 57 49 53 54 45 12007 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   423A 00                12008 	.db 0x00
   423B                   12009 __str_34:
   423B 4C 46 20 20 20 20 12010 	.ascii "LF      PL5"
        20 20 50 4C 35
   4246 00                12011 	.db 0x00
   4247                   12012 __str_35:
   4247 42 4F 58 45 53 20 12013 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   4252 00                12014 	.db 0x00
   4253                   12015 __str_36:
   4253 42 55 4C 42 53 20 12016 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   425E 00                12017 	.db 0x00
   425F                   12018 __str_37:
   425F 43 52 45 44 49 54 12019 	.ascii "CREDIT1 PL6"
        31 20 50 4C 36
   426A 00                12020 	.db 0x00
   426B                   12021 __str_38:
   426B 61 6C 6C 20 67 6F 12022 	.ascii "all good, starting the demo!"
        6F 64 2C 20 73 74
        61 72 74 69 6E 67
        20 74 68 65 20 64
        65 6D 6F 21
   4287 0D                12023 	.db 0x0D
   4288 0A                12024 	.db 0x0A
   4289 00                12025 	.db 0x00
   428A                   12026 __str_39:
   428A 4C 4F 41 44 49 4E 12027 	.ascii "LOADING PCK"
        47 20 50 43 4B
   4295 00                12028 	.db 0x00
   4296                   12029 __str_40:
   4296 42 55 4C 42 53 20 12030 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   42A1 00                12031 	.db 0x00
   42A2                   12032 __str_41:
   42A2 54 57 49 53 54 45 12033 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   42AD 00                12034 	.db 0x00
   42AE                   12035 __str_42:
   42AE 43 52 45 44 49 54 12036 	.ascii "CREDIT1 PCK"
        31 20 50 43 4B
   42B9 00                12037 	.db 0x00
   42BA                   12038 __str_43:
   42BA 43 52 45 44 49 54 12039 	.ascii "CREDIT2 PCK"
        32 20 50 43 4B
   42C5 00                12040 	.db 0x00
   42C6                   12041 __str_44:
   42C6 43 52 45 44 49 54 12042 	.ascii "CREDIT3 PCK"
        33 20 50 43 4B
   42D1 00                12043 	.db 0x00
   42D2                   12044 __str_45:
   42D2 42 4F 58 45 53 20 12045 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   42DD 00                12046 	.db 0x00
   42DE                   12047 __str_46:
   42DE 44 53 53 4C 4F 47 12048 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   42E9 00                12049 	.db 0x00
   42EA                   12050 __str_47:
   42EA 44 53 53 4C 4F 47 12051 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   42F5 00                12052 	.db 0x00
                          12053 	.area _CODE
                          12054 	.area _CABS
