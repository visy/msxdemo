                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Tue Mar 27 23:49:44 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _credits
                             15 	.globl _waiter
                             16 	.globl _bigtext
                             17 	.globl _points
                             18 	.globl _logoeffu
                             19 	.globl _abs
                             20 	.globl _tritiles
                             21 	.globl _drawtilescreen_full
                             22 	.globl _drawtilescreen
                             23 	.globl _drawtritile
                             24 	.globl _thewave
                             25 	.globl _boxes
                             26 	.globl _drawbox
                             27 	.globl _animplay
                             28 	.globl _bulbs
                             29 	.globl _twister
                             30 	.globl _font
                             31 	.globl _drawsine
                             32 	.globl _drawstr2x
                             33 	.globl _drawstrslow
                             34 	.globl _drawstr
                             35 	.globl _do_letter_tall
                             36 	.globl _do_letter
                             37 	.globl _do_2xletter
                             38 	.globl _raster_effu
                             39 	.globl _do_blocks
                             40 	.globl _do_ymmm
                             41 	.globl _fadein
                             42 	.globl _pck_load
                             43 	.globl _raw_load
                             44 	.globl _pause
                             45 	.globl _pal_load
                             46 	.globl _scratch_clear
                             47 	.globl _my_isr
                             48 	.globl _isNthBitSet
                             49 	.globl _timeindex
                             50 	.globl _sceneindex
                             51 	.globl _myoffs
                             52 	.globl _curpage
                             53 	.globl _flipo
                             54 	.globl _musicstopped
                             55 	.globl _credittimer
                             56 	.globl _initcredits
                             57 	.globl _bigtextp
                             58 	.globl _greetindex
                             59 	.globl _pointframe
                             60 	.globl _initpoints
                             61 	.globl _onceclear
                             62 	.globl _powa
                             63 	.globl _powatick
                             64 	.globl _triframes
                             65 	.globl _tripaltick2
                             66 	.globl _tripaltick
                             67 	.globl _tripal
                             68 	.globl _tiletick
                             69 	.globl _tiley
                             70 	.globl _tilex
                             71 	.globl _tilei
                             72 	.globl _tri_inited
                             73 	.globl _ffa
                             74 	.globl _buf
                             75 	.globl _initwave
                             76 	.globl _boxticks
                             77 	.globl _prevbox_of
                             78 	.globl _boxes_of
                             79 	.globl _pbt
                             80 	.globl _pbx
                             81 	.globl _bonc
                             82 	.globl _bo
                             83 	.globl _bt
                             84 	.globl _by
                             85 	.globl _bx
                             86 	.globl _boxi
                             87 	.globl _boxes_y
                             88 	.globl _boxes_x
                             89 	.globl _prevy
                             90 	.globl _prevx
                             91 	.globl _buffer
                             92 	.globl _boxes_init
                             93 	.globl _anim_init
                             94 	.globl _sy
                             95 	.globl _enderdir
                             96 	.globl _ender
                             97 	.globl _ff2
                             98 	.globl _ff1
                             99 	.globl _bulbflipper
                            100 	.globl _twialku
                            101 	.globl _twinited
                            102 	.globl _ff
                            103 	.globl _slowend
                            104 	.globl _ltrpointer
                            105 	.globl _ly
                            106 	.globl _lx
                            107 	.globl _linenum
                            108 	.globl _flof
                            109 	.globl _btab
                            110 	.globl _bty
                            111 	.globl _btx
                            112 	.globl _bsy
                            113 	.globl _bsx
                            114 	.globl _block_init
                            115 	.globl _cc
                            116 	.globl _yofff
                            117 	.globl _scenetimings
                            118 	.globl _scenepointers
                            119 	.globl _cmd
                            120 	.globl _tick
                            121 	.globl _vbicount
                            122 	.globl _credits_palette
                            123 	.globl _boxes_palette
                            124 	.globl _tf_palette
                            125 	.globl _twister_palette
                            126 	.globl _block_palette
                            127 	.globl _bulbs_palette
                            128 	.globl _cur_palette
                            129 	.globl _scratch
                            130 	.globl _crebuffer3
                            131 	.globl _crebuffer2
                            132 	.globl _crebuffer1
                            133 	.globl _packbuffer
                            134 	.globl _tri_lookup_y
                            135 	.globl _eighttimes
                            136 	.globl _twelvetimes
                            137 	.globl _tri_lookup_x
                            138 	.globl _sintab
                            139 	.globl _font_w
                            140 	.globl _font_y
                            141 	.globl _font_x
                            142 	.globl _tri_inva4
                            143 	.globl _tri_inva3
                            144 	.globl _tri_inva2
                            145 	.globl _tri_inva1
                            146 	.globl _tri_side2
                            147 	.globl _tri_side1
                            148 	.globl _tri_dia
                            149 	.globl _tri_up
                            150 	.globl _tri_center
                            151 	.globl _sintabx
                            152 ;--------------------------------------------------------
                            153 ; special function registers
                            154 ;--------------------------------------------------------
                            155 ;--------------------------------------------------------
                            156 ;  ram data
                            157 ;--------------------------------------------------------
                            158 	.area _DATA
   0000                     159 _sintab::
   0000                     160 	.ds 256
   0100                     161 _tri_lookup_x::
   0100                     162 	.ds 32
   0120                     163 _twelvetimes::
   0120                     164 	.ds 52
   0154                     165 _eighttimes::
   0154                     166 	.ds 52
   0188                     167 _tri_lookup_y::
   0188                     168 	.ds 64
   01C8                     169 _packbuffer::
   01C8                     170 	.ds 4100
   11CC                     171 _crebuffer1::
   11CC                     172 	.ds 3323
   1EC7                     173 _crebuffer2::
   1EC7                     174 	.ds 4724
   313B                     175 _crebuffer3::
   313B                     176 	.ds 3723
   3FC6                     177 _scratch::
   3FC6                     178 	.ds 128
   4046                     179 _cur_palette::
   4046                     180 	.ds 32
   4066                     181 _bulbs_palette::
   4066                     182 	.ds 32
   4086                     183 _block_palette::
   4086                     184 	.ds 32
   40A6                     185 _twister_palette::
   40A6                     186 	.ds 32
   40C6                     187 _tf_palette::
   40C6                     188 	.ds 32
   40E6                     189 _boxes_palette::
   40E6                     190 	.ds 32
   4106                     191 _credits_palette::
   4106                     192 	.ds 32
   4126                     193 _vbicount::
   4126                     194 	.ds 2
   4128                     195 _tick::
   4128                     196 	.ds 2
   412A                     197 _cmd::
   412A                     198 	.ds 15
   4139                     199 _scenepointers::
   4139                     200 	.ds 24
   4151                     201 _scenetimings::
   4151                     202 	.ds 48
   4181                     203 _isNthBitSet_mask_1_1:
   4181                     204 	.ds 8
   4189                     205 _yofff::
   4189                     206 	.ds 1
   418A                     207 _cc::
   418A                     208 	.ds 1
   418B                     209 _flipper:
   418B                     210 	.ds 2
   418D                     211 _ymmmf:
   418D                     212 	.ds 2
   418F                     213 _block_init::
   418F                     214 	.ds 1
   4190                     215 _bsx::
   4190                     216 	.ds 2
   4192                     217 _bsy::
   4192                     218 	.ds 2
   4194                     219 _btx::
   4194                     220 	.ds 2
   4196                     221 _bty::
   4196                     222 	.ds 2
   4198                     223 _btab::
   4198                     224 	.ds 32
   41B8                     225 _flof::
   41B8                     226 	.ds 2
   41BA                     227 _linenum::
   41BA                     228 	.ds 2
   41BC                     229 _lx::
   41BC                     230 	.ds 1
   41BD                     231 _ly::
   41BD                     232 	.ds 1
   41BE                     233 _ltrpointer::
   41BE                     234 	.ds 2
   41C0                     235 _slowend::
   41C0                     236 	.ds 2
   41C2                     237 _ff::
   41C2                     238 	.ds 2
   41C4                     239 _twinited::
   41C4                     240 	.ds 2
   41C6                     241 _twialku::
   41C6                     242 	.ds 2
   41C8                     243 _bulbflipper::
   41C8                     244 	.ds 2
   41CA                     245 _ff1::
   41CA                     246 	.ds 2
   41CC                     247 _ff2::
   41CC                     248 	.ds 2
   41CE                     249 _ender::
   41CE                     250 	.ds 2
   41D0                     251 _enderdir::
   41D0                     252 	.ds 2
   41D2                     253 _sy::
   41D2                     254 	.ds 2
   41D4                     255 _xo:
   41D4                     256 	.ds 2
   41D6                     257 _yo:
   41D6                     258 	.ds 2
   41D8                     259 _po:
   41D8                     260 	.ds 2
   41DA                     261 _frames:
   41DA                     262 	.ds 2
   41DC                     263 _anim_init::
   41DC                     264 	.ds 2
   41DE                     265 _boxes_init::
   41DE                     266 	.ds 1
   41DF                     267 _buffer::
   41DF                     268 	.ds 2
   41E1                     269 _prevx::
   41E1                     270 	.ds 2
   41E3                     271 _prevy::
   41E3                     272 	.ds 2
   41E5                     273 _boxes_x::
   41E5                     274 	.ds 5
   41EA                     275 _boxes_y::
   41EA                     276 	.ds 10
   41F4                     277 _boxi::
   41F4                     278 	.ds 1
   41F5                     279 _bx::
   41F5                     280 	.ds 2
   41F7                     281 _by::
   41F7                     282 	.ds 2
   41F9                     283 _bt::
   41F9                     284 	.ds 2
   41FB                     285 _bo::
   41FB                     286 	.ds 2
   41FD                     287 _bonc::
   41FD                     288 	.ds 2
   41FF                     289 _pbx::
   41FF                     290 	.ds 2
   4201                     291 _pbt::
   4201                     292 	.ds 2
   4203                     293 _boxes_of::
   4203                     294 	.ds 10
   420D                     295 _prevbox_of::
   420D                     296 	.ds 1
   420E                     297 _boxticks::
   420E                     298 	.ds 2
   4210                     299 _initwave::
   4210                     300 	.ds 1
   4211                     301 _buf::
   4211                     302 	.ds 2
   4213                     303 _ffa::
   4213                     304 	.ds 2
   4215                     305 _tri_inited::
   4215                     306 	.ds 1
   4216                     307 _tilei::
   4216                     308 	.ds 2
   4218                     309 _tilex::
   4218                     310 	.ds 2
   421A                     311 _tiley::
   421A                     312 	.ds 2
   421C                     313 _tiletick::
   421C                     314 	.ds 1
   421D                     315 _tripal::
   421D                     316 	.ds 9
   4226                     317 _tripaltick::
   4226                     318 	.ds 1
   4227                     319 _tripaltick2::
   4227                     320 	.ds 1
   4228                     321 _triframes::
   4228                     322 	.ds 2
   422A                     323 _powatick::
   422A                     324 	.ds 2
   422C                     325 _powa::
   422C                     326 	.ds 2
   422E                     327 _onceclear::
   422E                     328 	.ds 1
   422F                     329 _initpoints::
   422F                     330 	.ds 1
   4230                     331 _pointframe::
   4230                     332 	.ds 2
   4232                     333 _greetindex::
   4232                     334 	.ds 2
   4234                     335 _bigtextp::
   4234                     336 	.ds 2
   4236                     337 _initcredits::
   4236                     338 	.ds 2
   4238                     339 _credittimer::
   4238                     340 	.ds 2
   423A                     341 _musicstopped::
   423A                     342 	.ds 2
   423C                     343 _flipo::
   423C                     344 	.ds 2
   423E                     345 _curpage::
   423E                     346 	.ds 2
   4240                     347 _myoffs::
   4240                     348 	.ds 2
   4242                     349 _sceneindex::
   4242                     350 	.ds 2
   4244                     351 _timeindex::
   4244                     352 	.ds 2
                            353 ;--------------------------------------------------------
                            354 ; overlayable items in  ram 
                            355 ;--------------------------------------------------------
                            356 	.area _OVERLAY
                            357 ;--------------------------------------------------------
                            358 ; external initialized ram data
                            359 ;--------------------------------------------------------
                            360 ;--------------------------------------------------------
                            361 ; global & static initialisations
                            362 ;--------------------------------------------------------
                            363 	.area _HOME
                            364 	.area _GSINIT
                            365 	.area _GSFINAL
                            366 	.area _GSINIT
                            367 ;demo.c:235: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r81s41            368 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            369 	call	__initrleblock
   0006 08                  370 	.db	8
   0007 01 02 04 08 10 20   371 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  372 	.db	0
                            373 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            374 	ld	hl,#_sintab
   0013 CDr00s00            375 	call	__initrleblock
   0016 3B                  376 	.db	59
   0017 00 03 06 09 0C 0F   377 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   378 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   379 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   380 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   381 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   382 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   383 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            384 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               385 	.db	#-5,#0x7E
   0054 01                  386 	.db	1
   0055 7F                  387 	.db	0x7F
   0056 FB 7E               388 	.db	#-5,#0x7E
   0058 75                  389 	.db	117
   0059 7D 7D 7C 7B 7B 7A   390 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   391 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   392 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   393 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   394 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   395 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   396 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   397 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   398 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   399 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   400 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   401 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   402 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   403 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      404 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               405 	.db	#-5,#0x82
   00D0 01                  406 	.db	1
   00D1 81                  407 	.db	0x81
   00D2 FB 82               408 	.db	#-5,#0x82
   00D4 3A                  409 	.db	58
   00D5 83 83 84 85 85 86   410 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   411 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   412 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   413 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   414 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   415 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   416 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               417 	.db	0xFA, 0xFD
   010F 00                  418 	.db	0
                            419 ;demo.c:176: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            420 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            421 	call	__initrleblock
   0116 E0 00               422 	.db	#-32,#0x00
   0118 00                  423 	.db	0
                            424 ;demo.c:177: int twelvetimes[26] = { 0 };
   0119 21r20s01            425 	ld	hl,#_twelvetimes
   011C CDr00s00            426 	call	__initrleblock
   011F CC 00               427 	.db	#-52,#0x00
   0121 00                  428 	.db	0
                            429 ;demo.c:178: int eighttimes[26] = { 0 };
   0122 21r54s01            430 	ld	hl,#_eighttimes
   0125 CDr00s00            431 	call	__initrleblock
   0128 CC 00               432 	.db	#-52,#0x00
   012A 00                  433 	.db	0
                            434 ;demo.c:180: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            435 	ld	hl,#_tri_lookup_y
   012E CDr00s00            436 	call	__initrleblock
   0131 C0 00               437 	.db	#-64,#0x00
   0133 00                  438 	.db	0
                            439 ;demo.c:182: uint8_t packbuffer[4100] = {0};
   0134 21rC8s01            440 	ld	hl,#_packbuffer
   0137 CDr00s00            441 	call	__initrleblock
   013A 81 00               442 	.db	#-127,#0x00
   013C 81 00               443 	.db	#-127,#0x00
   013E 81 00               444 	.db	#-127,#0x00
   0140 81 00               445 	.db	#-127,#0x00
   0142 81 00               446 	.db	#-127,#0x00
   0144 81 00               447 	.db	#-127,#0x00
   0146 81 00               448 	.db	#-127,#0x00
   0148 81 00               449 	.db	#-127,#0x00
   014A 81 00               450 	.db	#-127,#0x00
   014C 81 00               451 	.db	#-127,#0x00
   014E 81 00               452 	.db	#-127,#0x00
   0150 81 00               453 	.db	#-127,#0x00
   0152 81 00               454 	.db	#-127,#0x00
   0154 81 00               455 	.db	#-127,#0x00
   0156 81 00               456 	.db	#-127,#0x00
   0158 81 00               457 	.db	#-127,#0x00
   015A 81 00               458 	.db	#-127,#0x00
   015C 81 00               459 	.db	#-127,#0x00
   015E 81 00               460 	.db	#-127,#0x00
   0160 81 00               461 	.db	#-127,#0x00
   0162 81 00               462 	.db	#-127,#0x00
   0164 81 00               463 	.db	#-127,#0x00
   0166 81 00               464 	.db	#-127,#0x00
   0168 81 00               465 	.db	#-127,#0x00
   016A 81 00               466 	.db	#-127,#0x00
   016C 81 00               467 	.db	#-127,#0x00
   016E 81 00               468 	.db	#-127,#0x00
   0170 81 00               469 	.db	#-127,#0x00
   0172 81 00               470 	.db	#-127,#0x00
   0174 81 00               471 	.db	#-127,#0x00
   0176 81 00               472 	.db	#-127,#0x00
   0178 81 00               473 	.db	#-127,#0x00
   017A DC 00               474 	.db	#-36,#0x00
   017C 00                  475 	.db	0
                            476 ;demo.c:184: uint8_t crebuffer1[3323] = {0};
   017D 21rCCs11            477 	ld	hl,#_crebuffer1
   0180 CDr00s00            478 	call	__initrleblock
   0183 81 00               479 	.db	#-127,#0x00
   0185 81 00               480 	.db	#-127,#0x00
   0187 81 00               481 	.db	#-127,#0x00
   0189 81 00               482 	.db	#-127,#0x00
   018B 81 00               483 	.db	#-127,#0x00
   018D 81 00               484 	.db	#-127,#0x00
   018F 81 00               485 	.db	#-127,#0x00
   0191 81 00               486 	.db	#-127,#0x00
   0193 81 00               487 	.db	#-127,#0x00
   0195 81 00               488 	.db	#-127,#0x00
   0197 81 00               489 	.db	#-127,#0x00
   0199 81 00               490 	.db	#-127,#0x00
   019B 81 00               491 	.db	#-127,#0x00
   019D 81 00               492 	.db	#-127,#0x00
   019F 81 00               493 	.db	#-127,#0x00
   01A1 81 00               494 	.db	#-127,#0x00
   01A3 81 00               495 	.db	#-127,#0x00
   01A5 81 00               496 	.db	#-127,#0x00
   01A7 81 00               497 	.db	#-127,#0x00
   01A9 81 00               498 	.db	#-127,#0x00
   01AB 81 00               499 	.db	#-127,#0x00
   01AD 81 00               500 	.db	#-127,#0x00
   01AF 81 00               501 	.db	#-127,#0x00
   01B1 81 00               502 	.db	#-127,#0x00
   01B3 81 00               503 	.db	#-127,#0x00
   01B5 81 00               504 	.db	#-127,#0x00
   01B7 EB 00               505 	.db	#-21,#0x00
   01B9 00                  506 	.db	0
                            507 ;demo.c:185: uint8_t crebuffer2[4724] = {0};
   01BA 21rC7s1E            508 	ld	hl,#_crebuffer2
   01BD CDr00s00            509 	call	__initrleblock
   01C0 81 00               510 	.db	#-127,#0x00
   01C2 81 00               511 	.db	#-127,#0x00
   01C4 81 00               512 	.db	#-127,#0x00
   01C6 81 00               513 	.db	#-127,#0x00
   01C8 81 00               514 	.db	#-127,#0x00
   01CA 81 00               515 	.db	#-127,#0x00
   01CC 81 00               516 	.db	#-127,#0x00
   01CE 81 00               517 	.db	#-127,#0x00
   01D0 81 00               518 	.db	#-127,#0x00
   01D2 81 00               519 	.db	#-127,#0x00
   01D4 81 00               520 	.db	#-127,#0x00
   01D6 81 00               521 	.db	#-127,#0x00
   01D8 81 00               522 	.db	#-127,#0x00
   01DA 81 00               523 	.db	#-127,#0x00
   01DC 81 00               524 	.db	#-127,#0x00
   01DE 81 00               525 	.db	#-127,#0x00
   01E0 81 00               526 	.db	#-127,#0x00
   01E2 81 00               527 	.db	#-127,#0x00
   01E4 81 00               528 	.db	#-127,#0x00
   01E6 81 00               529 	.db	#-127,#0x00
   01E8 81 00               530 	.db	#-127,#0x00
   01EA 81 00               531 	.db	#-127,#0x00
   01EC 81 00               532 	.db	#-127,#0x00
   01EE 81 00               533 	.db	#-127,#0x00
   01F0 81 00               534 	.db	#-127,#0x00
   01F2 81 00               535 	.db	#-127,#0x00
   01F4 81 00               536 	.db	#-127,#0x00
   01F6 81 00               537 	.db	#-127,#0x00
   01F8 81 00               538 	.db	#-127,#0x00
   01FA 81 00               539 	.db	#-127,#0x00
   01FC 81 00               540 	.db	#-127,#0x00
   01FE 81 00               541 	.db	#-127,#0x00
   0200 81 00               542 	.db	#-127,#0x00
   0202 81 00               543 	.db	#-127,#0x00
   0204 81 00               544 	.db	#-127,#0x00
   0206 81 00               545 	.db	#-127,#0x00
   0208 81 00               546 	.db	#-127,#0x00
   020A E7 00               547 	.db	#-25,#0x00
   020C 00                  548 	.db	0
                            549 ;demo.c:186: uint8_t crebuffer3[3723] = {0};
   020D 21r3Bs31            550 	ld	hl,#_crebuffer3
   0210 CDr00s00            551 	call	__initrleblock
   0213 81 00               552 	.db	#-127,#0x00
   0215 81 00               553 	.db	#-127,#0x00
   0217 81 00               554 	.db	#-127,#0x00
   0219 81 00               555 	.db	#-127,#0x00
   021B 81 00               556 	.db	#-127,#0x00
   021D 81 00               557 	.db	#-127,#0x00
   021F 81 00               558 	.db	#-127,#0x00
   0221 81 00               559 	.db	#-127,#0x00
   0223 81 00               560 	.db	#-127,#0x00
   0225 81 00               561 	.db	#-127,#0x00
   0227 81 00               562 	.db	#-127,#0x00
   0229 81 00               563 	.db	#-127,#0x00
   022B 81 00               564 	.db	#-127,#0x00
   022D 81 00               565 	.db	#-127,#0x00
   022F 81 00               566 	.db	#-127,#0x00
   0231 81 00               567 	.db	#-127,#0x00
   0233 81 00               568 	.db	#-127,#0x00
   0235 81 00               569 	.db	#-127,#0x00
   0237 81 00               570 	.db	#-127,#0x00
   0239 81 00               571 	.db	#-127,#0x00
   023B 81 00               572 	.db	#-127,#0x00
   023D 81 00               573 	.db	#-127,#0x00
   023F 81 00               574 	.db	#-127,#0x00
   0241 81 00               575 	.db	#-127,#0x00
   0243 81 00               576 	.db	#-127,#0x00
   0245 81 00               577 	.db	#-127,#0x00
   0247 81 00               578 	.db	#-127,#0x00
   0249 81 00               579 	.db	#-127,#0x00
   024B 81 00               580 	.db	#-127,#0x00
   024D D8 00               581 	.db	#-40,#0x00
   024F 00                  582 	.db	0
                            583 ;demo.c:198: volatile int vbicount=0;
   0250 FD 21r26s41         584 	ld	iy,#_vbicount
   0254 FD 36 00 00         585 	ld	0 (iy),#0x00
   0258 FD 21r26s41         586 	ld	iy,#_vbicount
   025C FD 36 01 00         587 	ld	1 (iy),#0x00
                            588 ;demo.c:199: volatile int tick=0;
   0260 FD 21r28s41         589 	ld	iy,#_tick
   0264 FD 36 00 00         590 	ld	0 (iy),#0x00
   0268 FD 21r28s41         591 	ld	iy,#_tick
   026C FD 36 01 00         592 	ld	1 (iy),#0x00
                            593 ;demo.c:204: void (*scenepointers[12])() = {
   0270 21r39s41            594 	ld	hl,#_scenepointers
   0273 36r4B               595 	ld	(hl),#<_waiter
   0275 23                  596 	inc	hl
   0276 36s39               597 	ld	(hl),#>_waiter
   0278 21r3Bs41            598 	ld	hl, #_scenepointers + 2
   027B 36r44               599 	ld	(hl),#<_logoeffu
   027D 23                  600 	inc	hl
   027E 36s2C               601 	ld	(hl),#>_logoeffu
   0280 01r3Ds41            602 	ld	bc,#_scenepointers + 4
   0283 69                  603 	ld	l,c
   0284 60                  604 	ld	h,b
   0285 36rA4               605 	ld	(hl),#<_bulbs
   0287 23                  606 	inc	hl
   0288 36s15               607 	ld	(hl),#>_bulbs
   028A 21r3Fs41            608 	ld	hl, #_scenepointers + 6
   028D 36r21               609 	ld	(hl),#<_twister
   028F 23                  610 	inc	hl
   0290 36s13               611 	ld	(hl),#>_twister
   0292 01r41s41            612 	ld	bc,#_scenepointers + 8
   0295 69                  613 	ld	l,c
   0296 60                  614 	ld	h,b
   0297 36r92               615 	ld	(hl),#<_boxes
   0299 23                  616 	inc	hl
   029A 36s18               617 	ld	(hl),#>_boxes
   029C 21r43s41            618 	ld	hl, #_scenepointers + 10
   029F 36r86               619 	ld	(hl),#<_thewave
   02A1 23                  620 	inc	hl
   02A2 36s1D               621 	ld	(hl),#>_thewave
   02A4 21r45s41            622 	ld	hl, #_scenepointers + 12
   02A7 36rA7               623 	ld	(hl),#<_tritiles
   02A9 23                  624 	inc	hl
   02AA 36s25               625 	ld	(hl),#>_tritiles
   02AC 21r47s41            626 	ld	hl, #_scenepointers + 14
   02AF 36rF3               627 	ld	(hl),#<_points
   02B1 23                  628 	inc	hl
   02B2 36s2D               629 	ld	(hl),#>_points
   02B4 01r49s41            630 	ld	bc,#_scenepointers + 16
   02B7 69                  631 	ld	l,c
   02B8 60                  632 	ld	h,b
   02B9 36rD3               633 	ld	(hl),#<_bigtext
   02BB 23                  634 	inc	hl
   02BC 36s31               635 	ld	(hl),#>_bigtext
   02BE 01r4Bs41            636 	ld	bc,#_scenepointers + 18
   02C1 69                  637 	ld	l,c
   02C2 60                  638 	ld	h,b
   02C3 36r4C               639 	ld	(hl),#<_credits
   02C5 23                  640 	inc	hl
   02C6 36s39               641 	ld	(hl),#>_credits
   02C8 01r4Ds41            642 	ld	bc,#_scenepointers + 20
   02CB 69                  643 	ld	l,c
   02CC 60                  644 	ld	h,b
   02CD 36rF1               645 	ld	(hl),#<_do_quit
   02CF 23                  646 	inc	hl
   02D0 36s3C               647 	ld	(hl),#>_do_quit
                            648 ;demo.c:218: int scenetimings[24] = {
   02D2 21r51s41            649 	ld	hl,#_scenetimings
   02D5 CDr00s00            650 	call	__initrleblock
   02D8 30                  651 	.db	48
   02D9 00 00 AA 00 AA 00   652 	.db	0x00, 0x00, 0xAA, 0x00, 0xAA, 0x00, 0x5E, 0x01
        5E 01
   02E1 EE 02 14 05 14 05   653 	.db	0xEE, 0x02, 0x14, 0x05, 0x14, 0x05, 0xFC, 0x08
        FC 08
   02E9 FC 08 10 0E 10 0E   654 	.db	0xFC, 0x08, 0x10, 0x0E, 0x10, 0x0E, 0x04, 0x10
        04 10
   02F1 04 10 AE 15 AE 15   655 	.db	0x04, 0x10, 0xAE, 0x15, 0xAE, 0x15, 0xD4, 0x17
        D4 17
   02F9 D4 17 D5 20 D5 20   656 	.db	0xD4, 0x17, 0xD5, 0x20, 0xD5, 0x20, 0x74, 0x27
        74 27
   0301 74 27 A0 86 00 00   657 	.db	0x74, 0x27, 0xA0, 0x86, 0x00, 0x00, 0x00, 0x00
        00 00
   0309 00                  658 	.db	0
                            659 ;demo.c:378: uint8_t yofff = 0;
   030A FD 21r89s41         660 	ld	iy,#_yofff
   030E FD 36 00 00         661 	ld	0 (iy),#0x00
                            662 ;demo.c:379: uint8_t cc = 0;
   0312 FD 21r8As41         663 	ld	iy,#_cc
   0316 FD 36 00 00         664 	ld	0 (iy),#0x00
                            665 ;demo.c:380: static int flipper = 0;
   031A FD 21r8Bs41         666 	ld	iy,#_flipper
   031E FD 36 00 00         667 	ld	0 (iy),#0x00
   0322 FD 21r8Bs41         668 	ld	iy,#_flipper
   0326 FD 36 01 00         669 	ld	1 (iy),#0x00
                            670 ;demo.c:381: static int ymmmf = 0;
   032A FD 21r8Ds41         671 	ld	iy,#_ymmmf
   032E FD 36 00 00         672 	ld	0 (iy),#0x00
   0332 FD 21r8Ds41         673 	ld	iy,#_ymmmf
   0336 FD 36 01 00         674 	ld	1 (iy),#0x00
                            675 ;demo.c:386: char block_init = 0;
   033A FD 21r8Fs41         676 	ld	iy,#_block_init
   033E FD 36 00 00         677 	ld	0 (iy),#0x00
                            678 ;demo.c:388: int bsx = 0;
   0342 FD 21r90s41         679 	ld	iy,#_bsx
   0346 FD 36 00 00         680 	ld	0 (iy),#0x00
   034A FD 21r90s41         681 	ld	iy,#_bsx
   034E FD 36 01 00         682 	ld	1 (iy),#0x00
                            683 ;demo.c:389: int bsy = 0;
   0352 FD 21r92s41         684 	ld	iy,#_bsy
   0356 FD 36 00 00         685 	ld	0 (iy),#0x00
   035A FD 21r92s41         686 	ld	iy,#_bsy
   035E FD 36 01 00         687 	ld	1 (iy),#0x00
                            688 ;demo.c:390: int btx = 0;
   0362 FD 21r94s41         689 	ld	iy,#_btx
   0366 FD 36 00 00         690 	ld	0 (iy),#0x00
   036A FD 21r94s41         691 	ld	iy,#_btx
   036E FD 36 01 00         692 	ld	1 (iy),#0x00
                            693 ;demo.c:391: int bty = 0;
   0372 FD 21r96s41         694 	ld	iy,#_bty
   0376 FD 36 00 00         695 	ld	0 (iy),#0x00
   037A FD 21r96s41         696 	ld	iy,#_bty
   037E FD 36 01 00         697 	ld	1 (iy),#0x00
                            698 ;demo.c:393: int btab[16] = {0};
   0382 21r98s41            699 	ld	hl,#_btab
   0385 CDr00s00            700 	call	__initrleblock
   0388 E0 00               701 	.db	#-32,#0x00
   038A 00                  702 	.db	0
                            703 ;demo.c:395: int flof = 0;
   038B FD 21rB8s41         704 	ld	iy,#_flof
   038F FD 36 00 00         705 	ld	0 (iy),#0x00
   0393 FD 21rB8s41         706 	ld	iy,#_flof
   0397 FD 36 01 00         707 	ld	1 (iy),#0x00
                            708 ;demo.c:400: int linenum = 0;
   039B FD 21rBAs41         709 	ld	iy,#_linenum
   039F FD 36 00 00         710 	ld	0 (iy),#0x00
   03A3 FD 21rBAs41         711 	ld	iy,#_linenum
   03A7 FD 36 01 00         712 	ld	1 (iy),#0x00
                            713 ;demo.c:430: uint8_t lx = 0;
   03AB FD 21rBCs41         714 	ld	iy,#_lx
   03AF FD 36 00 00         715 	ld	0 (iy),#0x00
                            716 ;demo.c:431: uint8_t ly = 0;
   03B3 FD 21rBDs41         717 	ld	iy,#_ly
   03B7 FD 36 00 00         718 	ld	0 (iy),#0x00
                            719 ;demo.c:516: int ltrpointer = 0;
   03BB FD 21rBEs41         720 	ld	iy,#_ltrpointer
   03BF FD 36 00 00         721 	ld	0 (iy),#0x00
   03C3 FD 21rBEs41         722 	ld	iy,#_ltrpointer
   03C7 FD 36 01 00         723 	ld	1 (iy),#0x00
                            724 ;demo.c:517: int slowend = 128;
   03CB FD 21rC0s41         725 	ld	iy,#_slowend
   03CF FD 36 00 80         726 	ld	0 (iy),#0x80
   03D3 FD 21rC0s41         727 	ld	iy,#_slowend
   03D7 FD 36 01 00         728 	ld	1 (iy),#0x00
                            729 ;demo.c:576: int ff = 0;
   03DB FD 21rC2s41         730 	ld	iy,#_ff
   03DF FD 36 00 00         731 	ld	0 (iy),#0x00
   03E3 FD 21rC2s41         732 	ld	iy,#_ff
   03E7 FD 36 01 00         733 	ld	1 (iy),#0x00
                            734 ;demo.c:577: int twinited = 0;
   03EB FD 21rC4s41         735 	ld	iy,#_twinited
   03EF FD 36 00 00         736 	ld	0 (iy),#0x00
   03F3 FD 21rC4s41         737 	ld	iy,#_twinited
   03F7 FD 36 01 00         738 	ld	1 (iy),#0x00
                            739 ;demo.c:578: int twialku = 2;
   03FB FD 21rC6s41         740 	ld	iy,#_twialku
   03FF FD 36 00 02         741 	ld	0 (iy),#0x02
   0403 FD 21rC6s41         742 	ld	iy,#_twialku
   0407 FD 36 01 00         743 	ld	1 (iy),#0x00
                            744 ;demo.c:652: int bulbflipper = 1;
   040B FD 21rC8s41         745 	ld	iy,#_bulbflipper
   040F FD 36 00 01         746 	ld	0 (iy),#0x01
   0413 FD 21rC8s41         747 	ld	iy,#_bulbflipper
   0417 FD 36 01 00         748 	ld	1 (iy),#0x00
                            749 ;demo.c:654: int ff1,ff2 = 0;
   041B FD 21rCCs41         750 	ld	iy,#_ff2
   041F FD 36 00 00         751 	ld	0 (iy),#0x00
   0423 FD 21rCCs41         752 	ld	iy,#_ff2
   0427 FD 36 01 00         753 	ld	1 (iy),#0x00
                            754 ;demo.c:655: int ender = 212;
   042B FD 21rCEs41         755 	ld	iy,#_ender
   042F FD 36 00 D4         756 	ld	0 (iy),#0xD4
   0433 FD 21rCEs41         757 	ld	iy,#_ender
   0437 FD 36 01 00         758 	ld	1 (iy),#0x00
                            759 ;demo.c:656: int enderdir = -1;
   043B FD 21rD0s41         760 	ld	iy,#_enderdir
   043F FD 36 00 FF         761 	ld	0 (iy),#0xFF
   0443 FD 21rD0s41         762 	ld	iy,#_enderdir
   0447 FD 36 01 FF         763 	ld	1 (iy),#0xFF
                            764 ;demo.c:657: int sy = 16;
   044B FD 21rD2s41         765 	ld	iy,#_sy
   044F FD 36 00 10         766 	ld	0 (iy),#0x10
   0453 FD 21rD2s41         767 	ld	iy,#_sy
   0457 FD 36 01 00         768 	ld	1 (iy),#0x00
                            769 ;demo.c:713: static int xo = 0;
   045B FD 21rD4s41         770 	ld	iy,#_xo
   045F FD 36 00 00         771 	ld	0 (iy),#0x00
   0463 FD 21rD4s41         772 	ld	iy,#_xo
   0467 FD 36 01 00         773 	ld	1 (iy),#0x00
                            774 ;demo.c:714: static int yo = 0;
   046B FD 21rD6s41         775 	ld	iy,#_yo
   046F FD 36 00 00         776 	ld	0 (iy),#0x00
   0473 FD 21rD6s41         777 	ld	iy,#_yo
   0477 FD 36 01 00         778 	ld	1 (iy),#0x00
                            779 ;demo.c:715: static int po = 0;
   047B FD 21rD8s41         780 	ld	iy,#_po
   047F FD 36 00 00         781 	ld	0 (iy),#0x00
   0483 FD 21rD8s41         782 	ld	iy,#_po
   0487 FD 36 01 00         783 	ld	1 (iy),#0x00
                            784 ;demo.c:716: static int frames = 0;
   048B FD 21rDAs41         785 	ld	iy,#_frames
   048F FD 36 00 00         786 	ld	0 (iy),#0x00
   0493 FD 21rDAs41         787 	ld	iy,#_frames
   0497 FD 36 01 00         788 	ld	1 (iy),#0x00
                            789 ;demo.c:718: int anim_init = 0;
   049B FD 21rDCs41         790 	ld	iy,#_anim_init
   049F FD 36 00 00         791 	ld	0 (iy),#0x00
   04A3 FD 21rDCs41         792 	ld	iy,#_anim_init
   04A7 FD 36 01 00         793 	ld	1 (iy),#0x00
                            794 ;demo.c:724: uint8_t boxes_init = 0;
   04AB FD 21rDEs41         795 	ld	iy,#_boxes_init
   04AF FD 36 00 00         796 	ld	0 (iy),#0x00
                            797 ;demo.c:725: int buffer = 1;
   04B3 FD 21rDFs41         798 	ld	iy,#_buffer
   04B7 FD 36 00 01         799 	ld	0 (iy),#0x01
   04BB FD 21rDFs41         800 	ld	iy,#_buffer
   04BF FD 36 01 00         801 	ld	1 (iy),#0x00
                            802 ;demo.c:726: int prevx = -1;
   04C3 FD 21rE1s41         803 	ld	iy,#_prevx
   04C7 FD 36 00 FF         804 	ld	0 (iy),#0xFF
   04CB FD 21rE1s41         805 	ld	iy,#_prevx
   04CF FD 36 01 FF         806 	ld	1 (iy),#0xFF
                            807 ;demo.c:728: uint8_t boxes_x[5] = {0,36,0,36,0};
   04D3 21rE5s41            808 	ld	hl,#_boxes_x
   04D6 CDr00s00            809 	call	__initrleblock
   04D9 05                  810 	.db	5
   04DA 00 24 00 24 00      811 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   04DF 00                  812 	.db	0
                            813 ;demo.c:729: int boxes_y[5] = {768,768,768+36,768+36,0};
   04E0 21rEAs41            814 	ld	hl,#_boxes_y
   04E3 CDr00s00            815 	call	__initrleblock
   04E6 0A                  816 	.db	10
   04E7 00 03 00 03 24 03   817 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   04EF 00 00               818 	.db	0x00, 0x00
   04F1 00                  819 	.db	0
                            820 ;demo.c:730: uint8_t boxi = 0;
   04F2 FD 21rF4s41         821 	ld	iy,#_boxi
   04F6 FD 36 00 00         822 	ld	0 (iy),#0x00
                            823 ;demo.c:731: int bx = 220;
   04FA FD 21rF5s41         824 	ld	iy,#_bx
   04FE FD 36 00 DC         825 	ld	0 (iy),#0xDC
   0502 FD 21rF5s41         826 	ld	iy,#_bx
   0506 FD 36 01 00         827 	ld	1 (iy),#0x00
                            828 ;demo.c:732: int by = 84;
   050A FD 21rF7s41         829 	ld	iy,#_by
   050E FD 36 00 54         830 	ld	0 (iy),#0x54
   0512 FD 21rF7s41         831 	ld	iy,#_by
   0516 FD 36 01 00         832 	ld	1 (iy),#0x00
                            833 ;demo.c:750: int bt = 0;
   051A FD 21rF9s41         834 	ld	iy,#_bt
   051E FD 36 00 00         835 	ld	0 (iy),#0x00
   0522 FD 21rF9s41         836 	ld	iy,#_bt
   0526 FD 36 01 00         837 	ld	1 (iy),#0x00
                            838 ;demo.c:751: int bo = 0;
   052A FD 21rFBs41         839 	ld	iy,#_bo
   052E FD 36 00 00         840 	ld	0 (iy),#0x00
   0532 FD 21rFBs41         841 	ld	iy,#_bo
   0536 FD 36 01 00         842 	ld	1 (iy),#0x00
                            843 ;demo.c:753: int bonc = 0;
   053A FD 21rFDs41         844 	ld	iy,#_bonc
   053E FD 36 00 00         845 	ld	0 (iy),#0x00
   0542 FD 21rFDs41         846 	ld	iy,#_bonc
   0546 FD 36 01 00         847 	ld	1 (iy),#0x00
                            848 ;demo.c:754: int pbx = 0;
   054A FD 21rFFs41         849 	ld	iy,#_pbx
   054E FD 36 00 00         850 	ld	0 (iy),#0x00
   0552 FD 21rFFs41         851 	ld	iy,#_pbx
   0556 FD 36 01 00         852 	ld	1 (iy),#0x00
                            853 ;demo.c:755: int pbt = 0;
   055A FD 21r01s42         854 	ld	iy,#_pbt
   055E FD 36 00 00         855 	ld	0 (iy),#0x00
   0562 FD 21r01s42         856 	ld	iy,#_pbt
   0566 FD 36 01 00         857 	ld	1 (iy),#0x00
                            858 ;demo.c:757: int boxes_of[5] = {0,0,6,0,0};
   056A 21r03s42            859 	ld	hl,#_boxes_of
   056D CDr00s00            860 	call	__initrleblock
   0570 05                  861 	.db	5
   0571 00 00 00 00 06      862 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0576 FB 00               863 	.db	#-5,#0x00
   0578 00                  864 	.db	0
                            865 ;demo.c:758: uint8_t prevbox_of = 0;
   0579 FD 21r0Ds42         866 	ld	iy,#_prevbox_of
   057D FD 36 00 00         867 	ld	0 (iy),#0x00
                            868 ;demo.c:759: int boxticks = 0;
   0581 FD 21r0Es42         869 	ld	iy,#_boxticks
   0585 FD 36 00 00         870 	ld	0 (iy),#0x00
   0589 FD 21r0Es42         871 	ld	iy,#_boxticks
   058D FD 36 01 00         872 	ld	1 (iy),#0x00
                            873 ;demo.c:879: uint8_t initwave = 0;
   0591 FD 21r10s42         874 	ld	iy,#_initwave
   0595 FD 36 00 00         875 	ld	0 (iy),#0x00
                            876 ;demo.c:880: int buf = -1;
   0599 FD 21r11s42         877 	ld	iy,#_buf
   059D FD 36 00 FF         878 	ld	0 (iy),#0xFF
   05A1 FD 21r11s42         879 	ld	iy,#_buf
   05A5 FD 36 01 FF         880 	ld	1 (iy),#0xFF
                            881 ;demo.c:881: int ffa = 0;
   05A9 FD 21r13s42         882 	ld	iy,#_ffa
   05AD FD 36 00 00         883 	ld	0 (iy),#0x00
   05B1 FD 21r13s42         884 	ld	iy,#_ffa
   05B5 FD 36 01 00         885 	ld	1 (iy),#0x00
                            886 ;demo.c:1002: uint8_t tri_inited = 0;
   05B9 FD 21r15s42         887 	ld	iy,#_tri_inited
   05BD FD 36 00 00         888 	ld	0 (iy),#0x00
                            889 ;demo.c:1017: int tilei = 0;
   05C1 FD 21r16s42         890 	ld	iy,#_tilei
   05C5 FD 36 00 00         891 	ld	0 (iy),#0x00
   05C9 FD 21r16s42         892 	ld	iy,#_tilei
   05CD FD 36 01 00         893 	ld	1 (iy),#0x00
                            894 ;demo.c:1018: int tilex = 0;
   05D1 FD 21r18s42         895 	ld	iy,#_tilex
   05D5 FD 36 00 00         896 	ld	0 (iy),#0x00
   05D9 FD 21r18s42         897 	ld	iy,#_tilex
   05DD FD 36 01 00         898 	ld	1 (iy),#0x00
                            899 ;demo.c:1019: int tiley = 0;
   05E1 FD 21r1As42         900 	ld	iy,#_tiley
   05E5 FD 36 00 00         901 	ld	0 (iy),#0x00
   05E9 FD 21r1As42         902 	ld	iy,#_tiley
   05ED FD 36 01 00         903 	ld	1 (iy),#0x00
                            904 ;demo.c:1020: uint8_t tiletick = 0;
   05F1 FD 21r1Cs42         905 	ld	iy,#_tiletick
   05F5 FD 36 00 00         906 	ld	0 (iy),#0x00
                            907 ;demo.c:1050: char tripal[9] = {
   05F9 21r1Ds42            908 	ld	hl,#_tripal
   05FC CDr00s00            909 	call	__initrleblock
   05FF 09                  910 	.db	9
   0600 02 02 01 01 02 03   911 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0608 02                  912 	.db	0x02
   0609 00                  913 	.db	0
                            914 ;demo.c:1056: uint8_t tripaltick = 0;
   060A FD 21r26s42         915 	ld	iy,#_tripaltick
   060E FD 36 00 00         916 	ld	0 (iy),#0x00
                            917 ;demo.c:1057: uint8_t tripaltick2 = 0;
   0612 FD 21r27s42         918 	ld	iy,#_tripaltick2
   0616 FD 36 00 00         919 	ld	0 (iy),#0x00
                            920 ;demo.c:1059: int triframes = 0;
   061A FD 21r28s42         921 	ld	iy,#_triframes
   061E FD 36 00 00         922 	ld	0 (iy),#0x00
   0622 FD 21r28s42         923 	ld	iy,#_triframes
   0626 FD 36 01 00         924 	ld	1 (iy),#0x00
                            925 ;demo.c:1224: int powatick = 0;
   062A FD 21r2As42         926 	ld	iy,#_powatick
   062E FD 36 00 00         927 	ld	0 (iy),#0x00
   0632 FD 21r2As42         928 	ld	iy,#_powatick
   0636 FD 36 01 00         929 	ld	1 (iy),#0x00
                            930 ;demo.c:1225: int powa = 0;
   063A FD 21r2Cs42         931 	ld	iy,#_powa
   063E FD 36 00 00         932 	ld	0 (iy),#0x00
   0642 FD 21r2Cs42         933 	ld	iy,#_powa
   0646 FD 36 01 00         934 	ld	1 (iy),#0x00
                            935 ;demo.c:1226: uint8_t onceclear = 255;
   064A FD 21r2Es42         936 	ld	iy,#_onceclear
   064E FD 36 00 FF         937 	ld	0 (iy),#0xFF
                            938 ;demo.c:1271: uint8_t initpoints = 0;
   0652 FD 21r2Fs42         939 	ld	iy,#_initpoints
   0656 FD 36 00 00         940 	ld	0 (iy),#0x00
                            941 ;demo.c:1272: int pointframe = 0;
   065A FD 21r30s42         942 	ld	iy,#_pointframe
   065E FD 36 00 00         943 	ld	0 (iy),#0x00
   0662 FD 21r30s42         944 	ld	iy,#_pointframe
   0666 FD 36 01 00         945 	ld	1 (iy),#0x00
                            946 ;demo.c:1275: int greetindex = 0;
   066A FD 21r32s42         947 	ld	iy,#_greetindex
   066E FD 36 00 00         948 	ld	0 (iy),#0x00
   0672 FD 21r32s42         949 	ld	iy,#_greetindex
   0676 FD 36 01 00         950 	ld	1 (iy),#0x00
                            951 ;demo.c:1370: int bigtextp = 0;
   067A FD 21r34s42         952 	ld	iy,#_bigtextp
   067E FD 36 00 00         953 	ld	0 (iy),#0x00
   0682 FD 21r34s42         954 	ld	iy,#_bigtextp
   0686 FD 36 01 00         955 	ld	1 (iy),#0x00
                            956 ;demo.c:1558: int initcredits = 0;
   068A FD 21r36s42         957 	ld	iy,#_initcredits
   068E FD 36 00 00         958 	ld	0 (iy),#0x00
   0692 FD 21r36s42         959 	ld	iy,#_initcredits
   0696 FD 36 01 00         960 	ld	1 (iy),#0x00
                            961 ;demo.c:1559: int credittimer = 0;
   069A FD 21r38s42         962 	ld	iy,#_credittimer
   069E FD 36 00 00         963 	ld	0 (iy),#0x00
   06A2 FD 21r38s42         964 	ld	iy,#_credittimer
   06A6 FD 36 01 00         965 	ld	1 (iy),#0x00
                            966 ;demo.c:1560: int musicstopped = 0;
   06AA FD 21r3As42         967 	ld	iy,#_musicstopped
   06AE FD 36 00 00         968 	ld	0 (iy),#0x00
   06B2 FD 21r3As42         969 	ld	iy,#_musicstopped
   06B6 FD 36 01 00         970 	ld	1 (iy),#0x00
                            971 ;demo.c:1561: int flipo = 0;
   06BA FD 21r3Cs42         972 	ld	iy,#_flipo
   06BE FD 36 00 00         973 	ld	0 (iy),#0x00
   06C2 FD 21r3Cs42         974 	ld	iy,#_flipo
   06C6 FD 36 01 00         975 	ld	1 (iy),#0x00
                            976 ;demo.c:1562: int curpage = 0;
   06CA FD 21r3Es42         977 	ld	iy,#_curpage
   06CE FD 36 00 00         978 	ld	0 (iy),#0x00
   06D2 FD 21r3Es42         979 	ld	iy,#_curpage
   06D6 FD 36 01 00         980 	ld	1 (iy),#0x00
                            981 ;demo.c:1563: int myoffs = 0;
   06DA FD 21r40s42         982 	ld	iy,#_myoffs
   06DE FD 36 00 00         983 	ld	0 (iy),#0x00
   06E2 FD 21r40s42         984 	ld	iy,#_myoffs
   06E6 FD 36 01 00         985 	ld	1 (iy),#0x00
                            986 ;demo.c:1692: int sceneindex = 0;
   06EA FD 21r42s42         987 	ld	iy,#_sceneindex
   06EE FD 36 00 00         988 	ld	0 (iy),#0x00
   06F2 FD 21r42s42         989 	ld	iy,#_sceneindex
   06F6 FD 36 01 00         990 	ld	1 (iy),#0x00
                            991 ;demo.c:1693: int timeindex = 0;
   06FA FD 21r44s42         992 	ld	iy,#_timeindex
   06FE FD 36 00 00         993 	ld	0 (iy),#0x00
   0702 FD 21r44s42         994 	ld	iy,#_timeindex
   0706 FD 36 01 00         995 	ld	1 (iy),#0x00
                            996 ;--------------------------------------------------------
                            997 ; Home
                            998 ;--------------------------------------------------------
                            999 	.area _HOME
                           1000 	.area _HOME
                           1001 ;--------------------------------------------------------
                           1002 ; code
                           1003 ;--------------------------------------------------------
                           1004 	.area _CODE
                           1005 ;demo.c:234: int isNthBitSet (unsigned char c, int n) {
                           1006 ;	---------------------------------
                           1007 ; Function isNthBitSet
                           1008 ; ---------------------------------
   0000                    1009 _isNthBitSet_start::
   0000                    1010 _isNthBitSet:
   0000 DD E5              1011 	push	ix
   0002 DD 21 00 00        1012 	ld	ix,#0
   0006 DD 39              1013 	add	ix,sp
                           1014 ;demo.c:236: return ((c & mask[n]) != 0);
   0008 3Er81              1015 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05           1016 	add	a,5 (ix)
   000D 4F                 1017 	ld	c,a
   000E 3Es41              1018 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06           1019 	adc	a,6 (ix)
   0013 47                 1020 	ld	b,a
   0014 0A                 1021 	ld	a,(bc)
   0015 DD A6 04           1022 	and	a,4 (ix)
   0018 20 04              1023 	jr	NZ,00103$
   001A 3E 01              1024 	ld	a,#0x01
   001C 18 01              1025 	jr	00104$
   001E                    1026 00103$:
   001E AF                 1027 	xor	a,a
   001F                    1028 00104$:
   001F B7                 1029 	or	a,a
   0020 D6 01              1030 	sub	a,#0x01
   0022 3E 00              1031 	ld	a,#0x00
   0024 17                 1032 	rla
   0025 4F                 1033 	ld	c,a
   0026 69                 1034 	ld	l,c
   0027 26 00              1035 	ld	h,#0x00
   0029 DD E1              1036 	pop	ix
   002B C9                 1037 	ret
   002C                    1038 _isNthBitSet_end::
   002C                    1039 _sintabx:
   002C 78                 1040 	.db #0x78
   002D 7A                 1041 	.db #0x7A
   002E 7D                 1042 	.db #0x7D
   002F 80                 1043 	.db #0x80
   0030 83                 1044 	.db #0x83
   0031 86                 1045 	.db #0x86
   0032 89                 1046 	.db #0x89
   0033 8C                 1047 	.db #0x8C
   0034 8F                 1048 	.db #0x8F
   0035 92                 1049 	.db #0x92
   0036 95                 1050 	.db #0x95
   0037 98                 1051 	.db #0x98
   0038 9A                 1052 	.db #0x9A
   0039 9D                 1053 	.db #0x9D
   003A A0                 1054 	.db #0xA0
   003B A3                 1055 	.db #0xA3
   003C A5                 1056 	.db #0xA5
   003D A8                 1057 	.db #0xA8
   003E AB                 1058 	.db #0xAB
   003F AD                 1059 	.db #0xAD
   0040 B0                 1060 	.db #0xB0
   0041 B3                 1061 	.db #0xB3
   0042 B5                 1062 	.db #0xB5
   0043 B8                 1063 	.db #0xB8
   0044 BA                 1064 	.db #0xBA
   0045 BD                 1065 	.db #0xBD
   0046 BF                 1066 	.db #0xBF
   0047 C1                 1067 	.db #0xC1
   0048 C4                 1068 	.db #0xC4
   0049 C6                 1069 	.db #0xC6
   004A C8                 1070 	.db #0xC8
   004B CA                 1071 	.db #0xCA
   004C CC                 1072 	.db #0xCC
   004D CE                 1073 	.db #0xCE
   004E D0                 1074 	.db #0xD0
   004F D2                 1075 	.db #0xD2
   0050 D4                 1076 	.db #0xD4
   0051 D6                 1077 	.db #0xD6
   0052 D8                 1078 	.db #0xD8
   0053 DA                 1079 	.db #0xDA
   0054 DB                 1080 	.db #0xDB
   0055 DD                 1081 	.db #0xDD
   0056 DE                 1082 	.db #0xDE
   0057 E0                 1083 	.db #0xE0
   0058 E1                 1084 	.db #0xE1
   0059 E3                 1085 	.db #0xE3
   005A E4                 1086 	.db #0xE4
   005B E5                 1087 	.db #0xE5
   005C E6                 1088 	.db #0xE6
   005D E7                 1089 	.db #0xE7
   005E E8                 1090 	.db #0xE8
   005F E9                 1091 	.db #0xE9
   0060 EA                 1092 	.db #0xEA
   0061 EB                 1093 	.db #0xEB
   0062 EC                 1094 	.db #0xEC
   0063 ED                 1095 	.db #0xED
   0064 ED                 1096 	.db #0xED
   0065 EE                 1097 	.db #0xEE
   0066 EE                 1098 	.db #0xEE
   0067 EF                 1099 	.db #0xEF
   0068 EF                 1100 	.db #0xEF
   0069 EF                 1101 	.db #0xEF
   006A EF                 1102 	.db #0xEF
   006B EF                 1103 	.db #0xEF
   006C F0                 1104 	.db #0xF0
   006D EF                 1105 	.db #0xEF
   006E EF                 1106 	.db #0xEF
   006F EF                 1107 	.db #0xEF
   0070 EF                 1108 	.db #0xEF
   0071 EF                 1109 	.db #0xEF
   0072 EE                 1110 	.db #0xEE
   0073 EE                 1111 	.db #0xEE
   0074 ED                 1112 	.db #0xED
   0075 ED                 1113 	.db #0xED
   0076 EC                 1114 	.db #0xEC
   0077 EB                 1115 	.db #0xEB
   0078 EA                 1116 	.db #0xEA
   0079 E9                 1117 	.db #0xE9
   007A E8                 1118 	.db #0xE8
   007B E7                 1119 	.db #0xE7
   007C E6                 1120 	.db #0xE6
   007D E5                 1121 	.db #0xE5
   007E E4                 1122 	.db #0xE4
   007F E3                 1123 	.db #0xE3
   0080 E1                 1124 	.db #0xE1
   0081 E0                 1125 	.db #0xE0
   0082 DE                 1126 	.db #0xDE
   0083 DD                 1127 	.db #0xDD
   0084 DB                 1128 	.db #0xDB
   0085 DA                 1129 	.db #0xDA
   0086 D8                 1130 	.db #0xD8
   0087 D6                 1131 	.db #0xD6
   0088 D4                 1132 	.db #0xD4
   0089 D2                 1133 	.db #0xD2
   008A D0                 1134 	.db #0xD0
   008B CE                 1135 	.db #0xCE
   008C CC                 1136 	.db #0xCC
   008D CA                 1137 	.db #0xCA
   008E C8                 1138 	.db #0xC8
   008F C6                 1139 	.db #0xC6
   0090 C4                 1140 	.db #0xC4
   0091 C1                 1141 	.db #0xC1
   0092 BF                 1142 	.db #0xBF
   0093 BD                 1143 	.db #0xBD
   0094 BA                 1144 	.db #0xBA
   0095 B8                 1145 	.db #0xB8
   0096 B5                 1146 	.db #0xB5
   0097 B3                 1147 	.db #0xB3
   0098 B0                 1148 	.db #0xB0
   0099 AD                 1149 	.db #0xAD
   009A AB                 1150 	.db #0xAB
   009B A8                 1151 	.db #0xA8
   009C A5                 1152 	.db #0xA5
   009D A3                 1153 	.db #0xA3
   009E A0                 1154 	.db #0xA0
   009F 9D                 1155 	.db #0x9D
   00A0 9A                 1156 	.db #0x9A
   00A1 98                 1157 	.db #0x98
   00A2 95                 1158 	.db #0x95
   00A3 92                 1159 	.db #0x92
   00A4 8F                 1160 	.db #0x8F
   00A5 8C                 1161 	.db #0x8C
   00A6 89                 1162 	.db #0x89
   00A7 86                 1163 	.db #0x86
   00A8 83                 1164 	.db #0x83
   00A9 80                 1165 	.db #0x80
   00AA 7D                 1166 	.db #0x7D
   00AB 7A                 1167 	.db #0x7A
   00AC 78                 1168 	.db #0x78
   00AD 75                 1169 	.db #0x75
   00AE 72                 1170 	.db #0x72
   00AF 6F                 1171 	.db #0x6F
   00B0 6C                 1172 	.db #0x6C
   00B1 69                 1173 	.db #0x69
   00B2 66                 1174 	.db #0x66
   00B3 63                 1175 	.db #0x63
   00B4 60                 1176 	.db #0x60
   00B5 5D                 1177 	.db #0x5D
   00B6 5A                 1178 	.db #0x5A
   00B7 57                 1179 	.db #0x57
   00B8 55                 1180 	.db #0x55
   00B9 52                 1181 	.db #0x52
   00BA 4F                 1182 	.db #0x4F
   00BB 4C                 1183 	.db #0x4C
   00BC 4A                 1184 	.db #0x4A
   00BD 47                 1185 	.db #0x47
   00BE 44                 1186 	.db #0x44
   00BF 42                 1187 	.db #0x42
   00C0 3F                 1188 	.db #0x3F
   00C1 3C                 1189 	.db #0x3C
   00C2 3A                 1190 	.db #0x3A
   00C3 37                 1191 	.db #0x37
   00C4 35                 1192 	.db #0x35
   00C5 32                 1193 	.db #0x32
   00C6 30                 1194 	.db #0x30
   00C7 2E                 1195 	.db #0x2E
   00C8 2B                 1196 	.db #0x2B
   00C9 29                 1197 	.db #0x29
   00CA 27                 1198 	.db #0x27
   00CB 25                 1199 	.db #0x25
   00CC 23                 1200 	.db #0x23
   00CD 21                 1201 	.db #0x21
   00CE 1F                 1202 	.db #0x1F
   00CF 1D                 1203 	.db #0x1D
   00D0 1B                 1204 	.db #0x1B
   00D1 19                 1205 	.db #0x19
   00D2 17                 1206 	.db #0x17
   00D3 15                 1207 	.db #0x15
   00D4 14                 1208 	.db #0x14
   00D5 12                 1209 	.db #0x12
   00D6 11                 1210 	.db #0x11
   00D7 0F                 1211 	.db #0x0F
   00D8 0E                 1212 	.db #0x0E
   00D9 0C                 1213 	.db #0x0C
   00DA 0B                 1214 	.db #0x0B
   00DB 0A                 1215 	.db #0x0A
   00DC 09                 1216 	.db #0x09
   00DD 08                 1217 	.db #0x08
   00DE 07                 1218 	.db #0x07
   00DF 06                 1219 	.db #0x06
   00E0 05                 1220 	.db #0x05
   00E1 04                 1221 	.db #0x04
   00E2 03                 1222 	.db #0x03
   00E3 02                 1223 	.db #0x02
   00E4 02                 1224 	.db #0x02
   00E5 01                 1225 	.db #0x01
   00E6 01                 1226 	.db #0x01
   00E7 00                 1227 	.db #0x00
   00E8 00                 1228 	.db #0x00
   00E9 00                 1229 	.db #0x00
   00EA 00                 1230 	.db #0x00
   00EB 00                 1231 	.db #0x00
   00EC 00                 1232 	.db #0x00
   00ED 00                 1233 	.db #0x00
   00EE 00                 1234 	.db #0x00
   00EF 00                 1235 	.db #0x00
   00F0 00                 1236 	.db #0x00
   00F1 00                 1237 	.db #0x00
   00F2 01                 1238 	.db #0x01
   00F3 01                 1239 	.db #0x01
   00F4 02                 1240 	.db #0x02
   00F5 02                 1241 	.db #0x02
   00F6 03                 1242 	.db #0x03
   00F7 04                 1243 	.db #0x04
   00F8 05                 1244 	.db #0x05
   00F9 06                 1245 	.db #0x06
   00FA 07                 1246 	.db #0x07
   00FB 08                 1247 	.db #0x08
   00FC 09                 1248 	.db #0x09
   00FD 0A                 1249 	.db #0x0A
   00FE 0B                 1250 	.db #0x0B
   00FF 0C                 1251 	.db #0x0C
   0100 0E                 1252 	.db #0x0E
   0101 0F                 1253 	.db #0x0F
   0102 11                 1254 	.db #0x11
   0103 12                 1255 	.db #0x12
   0104 14                 1256 	.db #0x14
   0105 15                 1257 	.db #0x15
   0106 17                 1258 	.db #0x17
   0107 19                 1259 	.db #0x19
   0108 1B                 1260 	.db #0x1B
   0109 1D                 1261 	.db #0x1D
   010A 1F                 1262 	.db #0x1F
   010B 21                 1263 	.db #0x21
   010C 23                 1264 	.db #0x23
   010D 25                 1265 	.db #0x25
   010E 27                 1266 	.db #0x27
   010F 29                 1267 	.db #0x29
   0110 2B                 1268 	.db #0x2B
   0111 2E                 1269 	.db #0x2E
   0112 30                 1270 	.db #0x30
   0113 32                 1271 	.db #0x32
   0114 35                 1272 	.db #0x35
   0115 37                 1273 	.db #0x37
   0116 3A                 1274 	.db #0x3A
   0117 3C                 1275 	.db #0x3C
   0118 3F                 1276 	.db #0x3F
   0119 42                 1277 	.db #0x42
   011A 44                 1278 	.db #0x44
   011B 47                 1279 	.db #0x47
   011C 4A                 1280 	.db #0x4A
   011D 4C                 1281 	.db #0x4C
   011E 4F                 1282 	.db #0x4F
   011F 52                 1283 	.db #0x52
   0120 55                 1284 	.db #0x55
   0121 57                 1285 	.db #0x57
   0122 5A                 1286 	.db #0x5A
   0123 5D                 1287 	.db #0x5D
   0124 60                 1288 	.db #0x60
   0125 63                 1289 	.db #0x63
   0126 66                 1290 	.db #0x66
   0127 69                 1291 	.db #0x69
   0128 6C                 1292 	.db #0x6C
   0129 6F                 1293 	.db #0x6F
   012A 72                 1294 	.db #0x72
   012B 75                 1295 	.db #0x75
   012C                    1296 _tri_center:
   012C 08                 1297 	.db #0x08
   012D 0A                 1298 	.db #0x0A
   012E 12                 1299 	.db #0x12
   012F 10                 1300 	.db #0x10
   0130 00                 1301 	.db #0x00
   0131 02                 1302 	.db #0x02
   0132 08                 1303 	.db #0x08
   0133 0A                 1304 	.db #0x0A
   0134 0B                 1305 	.db #0x0B
   0135 09                 1306 	.db #0x09
   0136 03                 1307 	.db #0x03
   0137 01                 1308 	.db #0x01
   0138 11                 1309 	.db #0x11
   0139 13                 1310 	.db #0x13
   013A 0B                 1311 	.db #0x0B
   013B 09                 1312 	.db #0x09
   013C 0A                 1313 	.db #0x0A
   013D 12                 1314 	.db #0x12
   013E 10                 1315 	.db #0x10
   013F 00                 1316 	.db #0x00
   0140 02                 1317 	.db #0x02
   0141 08                 1318 	.db #0x08
   0142 0A                 1319 	.db #0x0A
   0143 12                 1320 	.db #0x12
   0144 13                 1321 	.db #0x13
   0145 0B                 1322 	.db #0x0B
   0146 09                 1323 	.db #0x09
   0147 03                 1324 	.db #0x03
   0148 01                 1325 	.db #0x01
   0149 11                 1326 	.db #0x11
   014A 13                 1327 	.db #0x13
   014B 0B                 1328 	.db #0x0B
   014C 12                 1329 	.db #0x12
   014D 10                 1330 	.db #0x10
   014E 00                 1331 	.db #0x00
   014F 02                 1332 	.db #0x02
   0150 08                 1333 	.db #0x08
   0151 0A                 1334 	.db #0x0A
   0152 12                 1335 	.db #0x12
   0153 10                 1336 	.db #0x10
   0154 11                 1337 	.db #0x11
   0155 13                 1338 	.db #0x13
   0156 0B                 1339 	.db #0x0B
   0157 09                 1340 	.db #0x09
   0158 03                 1341 	.db #0x03
   0159 01                 1342 	.db #0x01
   015A 11                 1343 	.db #0x11
   015B 13                 1344 	.db #0x13
   015C 10                 1345 	.db #0x10
   015D 00                 1346 	.db #0x00
   015E 02                 1347 	.db #0x02
   015F 08                 1348 	.db #0x08
   0160 0A                 1349 	.db #0x0A
   0161 12                 1350 	.db #0x12
   0162 10                 1351 	.db #0x10
   0163 00                 1352 	.db #0x00
   0164 01                 1353 	.db #0x01
   0165 11                 1354 	.db #0x11
   0166 13                 1355 	.db #0x13
   0167 0B                 1356 	.db #0x0B
   0168 09                 1357 	.db #0x09
   0169 03                 1358 	.db #0x03
   016A 01                 1359 	.db #0x01
   016B 11                 1360 	.db #0x11
   016C 00                 1361 	.db #0x00
   016D 02                 1362 	.db #0x02
   016E 08                 1363 	.db #0x08
   016F 0A                 1364 	.db #0x0A
   0170 12                 1365 	.db #0x12
   0171 10                 1366 	.db #0x10
   0172 00                 1367 	.db #0x00
   0173 02                 1368 	.db #0x02
   0174 03                 1369 	.db #0x03
   0175 01                 1370 	.db #0x01
   0176 11                 1371 	.db #0x11
   0177 13                 1372 	.db #0x13
   0178 0B                 1373 	.db #0x0B
   0179 09                 1374 	.db #0x09
   017A 03                 1375 	.db #0x03
   017B 01                 1376 	.db #0x01
   017C 02                 1377 	.db #0x02
   017D 08                 1378 	.db #0x08
   017E 0A                 1379 	.db #0x0A
   017F 12                 1380 	.db #0x12
   0180 10                 1381 	.db #0x10
   0181 00                 1382 	.db #0x00
   0182 02                 1383 	.db #0x02
   0183 08                 1384 	.db #0x08
   0184 09                 1385 	.db #0x09
   0185 03                 1386 	.db #0x03
   0186 01                 1387 	.db #0x01
   0187 11                 1388 	.db #0x11
   0188 13                 1389 	.db #0x13
   0189 0B                 1390 	.db #0x0B
   018A 09                 1391 	.db #0x09
   018B 03                 1392 	.db #0x03
   018C 01                 1393 	.db #0x01
   018D 0B                 1394 	.db #0x0B
   018E 09                 1395 	.db #0x09
   018F 11                 1396 	.db #0x11
   0190 13                 1397 	.db #0x13
   0191 03                 1398 	.db #0x03
   0192 01                 1399 	.db #0x01
   0193 0B                 1400 	.db #0x0B
   0194 0A                 1401 	.db #0x0A
   0195 00                 1402 	.db #0x00
   0196 02                 1403 	.db #0x02
   0197 12                 1404 	.db #0x12
   0198 10                 1405 	.db #0x10
   0199 08                 1406 	.db #0x08
   019A 0A                 1407 	.db #0x0A
   019B 00                 1408 	.db #0x00
   019C 03                 1409 	.db #0x03
   019D 01                 1410 	.db #0x01
   019E 0B                 1411 	.db #0x0B
   019F 09                 1412 	.db #0x09
   01A0 11                 1413 	.db #0x11
   01A1 13                 1414 	.db #0x13
   01A2 03                 1415 	.db #0x03
   01A3 01                 1416 	.db #0x01
   01A4 00                 1417 	.db #0x00
   01A5 02                 1418 	.db #0x02
   01A6 12                 1419 	.db #0x12
   01A7 10                 1420 	.db #0x10
   01A8 08                 1421 	.db #0x08
   01A9 0A                 1422 	.db #0x0A
   01AA 00                 1423 	.db #0x00
   01AB 02                 1424 	.db #0x02
   01AC 13                 1425 	.db #0x13
   01AD 03                 1426 	.db #0x03
   01AE 01                 1427 	.db #0x01
   01AF 0B                 1428 	.db #0x0B
   01B0 09                 1429 	.db #0x09
   01B1 11                 1430 	.db #0x11
   01B2 13                 1431 	.db #0x13
   01B3 03                 1432 	.db #0x03
   01B4 02                 1433 	.db #0x02
   01B5 12                 1434 	.db #0x12
   01B6 10                 1435 	.db #0x10
   01B7 08                 1436 	.db #0x08
   01B8 0A                 1437 	.db #0x0A
   01B9 00                 1438 	.db #0x00
   01BA 02                 1439 	.db #0x02
   01BB 12                 1440 	.db #0x12
   01BC 11                 1441 	.db #0x11
   01BD 13                 1442 	.db #0x13
   01BE 03                 1443 	.db #0x03
   01BF 01                 1444 	.db #0x01
   01C0 0B                 1445 	.db #0x0B
   01C1 09                 1446 	.db #0x09
   01C2 11                 1447 	.db #0x11
   01C3 13                 1448 	.db #0x13
   01C4 12                 1449 	.db #0x12
   01C5 10                 1450 	.db #0x10
   01C6 08                 1451 	.db #0x08
   01C7 0A                 1452 	.db #0x0A
   01C8 00                 1453 	.db #0x00
   01C9 02                 1454 	.db #0x02
   01CA 12                 1455 	.db #0x12
   01CB 10                 1456 	.db #0x10
   01CC 09                 1457 	.db #0x09
   01CD 11                 1458 	.db #0x11
   01CE 13                 1459 	.db #0x13
   01CF 03                 1460 	.db #0x03
   01D0 01                 1461 	.db #0x01
   01D1 0B                 1462 	.db #0x0B
   01D2 09                 1463 	.db #0x09
   01D3 11                 1464 	.db #0x11
   01D4 10                 1465 	.db #0x10
   01D5 08                 1466 	.db #0x08
   01D6 0A                 1467 	.db #0x0A
   01D7 00                 1468 	.db #0x00
   01D8 02                 1469 	.db #0x02
   01D9 12                 1470 	.db #0x12
   01DA 10                 1471 	.db #0x10
   01DB 08                 1472 	.db #0x08
   01DC 0B                 1473 	.db #0x0B
   01DD 09                 1474 	.db #0x09
   01DE 11                 1475 	.db #0x11
   01DF 13                 1476 	.db #0x13
   01E0 03                 1477 	.db #0x03
   01E1 01                 1478 	.db #0x01
   01E2 0B                 1479 	.db #0x0B
   01E3 09                 1480 	.db #0x09
   01E4 08                 1481 	.db #0x08
   01E5 0A                 1482 	.db #0x0A
   01E6 00                 1483 	.db #0x00
   01E7 02                 1484 	.db #0x02
   01E8 12                 1485 	.db #0x12
   01E9 10                 1486 	.db #0x10
   01EA 08                 1487 	.db #0x08
   01EB 0A                 1488 	.db #0x0A
   01EC                    1489 _tri_up:
   01EC 0A                 1490 	.db #0x0A
   01ED 12                 1491 	.db #0x12
   01EE 10                 1492 	.db #0x10
   01EF 00                 1493 	.db #0x00
   01F0 02                 1494 	.db #0x02
   01F1 08                 1495 	.db #0x08
   01F2 0A                 1496 	.db #0x0A
   01F3 12                 1497 	.db #0x12
   01F4 13                 1498 	.db #0x13
   01F5 0B                 1499 	.db #0x0B
   01F6 09                 1500 	.db #0x09
   01F7 03                 1501 	.db #0x03
   01F8 01                 1502 	.db #0x01
   01F9 11                 1503 	.db #0x11
   01FA 13                 1504 	.db #0x13
   01FB 0B                 1505 	.db #0x0B
   01FC 12                 1506 	.db #0x12
   01FD 10                 1507 	.db #0x10
   01FE 00                 1508 	.db #0x00
   01FF 02                 1509 	.db #0x02
   0200 08                 1510 	.db #0x08
   0201 0A                 1511 	.db #0x0A
   0202 12                 1512 	.db #0x12
   0203 10                 1513 	.db #0x10
   0204 11                 1514 	.db #0x11
   0205 13                 1515 	.db #0x13
   0206 0B                 1516 	.db #0x0B
   0207 09                 1517 	.db #0x09
   0208 03                 1518 	.db #0x03
   0209 01                 1519 	.db #0x01
   020A 11                 1520 	.db #0x11
   020B 13                 1521 	.db #0x13
   020C 10                 1522 	.db #0x10
   020D 00                 1523 	.db #0x00
   020E 02                 1524 	.db #0x02
   020F 08                 1525 	.db #0x08
   0210 0A                 1526 	.db #0x0A
   0211 12                 1527 	.db #0x12
   0212 10                 1528 	.db #0x10
   0213 00                 1529 	.db #0x00
   0214 01                 1530 	.db #0x01
   0215 11                 1531 	.db #0x11
   0216 13                 1532 	.db #0x13
   0217 0B                 1533 	.db #0x0B
   0218 09                 1534 	.db #0x09
   0219 03                 1535 	.db #0x03
   021A 01                 1536 	.db #0x01
   021B 11                 1537 	.db #0x11
   021C 00                 1538 	.db #0x00
   021D 02                 1539 	.db #0x02
   021E 08                 1540 	.db #0x08
   021F 0A                 1541 	.db #0x0A
   0220 12                 1542 	.db #0x12
   0221 10                 1543 	.db #0x10
   0222 00                 1544 	.db #0x00
   0223 02                 1545 	.db #0x02
   0224 03                 1546 	.db #0x03
   0225 01                 1547 	.db #0x01
   0226 11                 1548 	.db #0x11
   0227 13                 1549 	.db #0x13
   0228 0B                 1550 	.db #0x0B
   0229 09                 1551 	.db #0x09
   022A 03                 1552 	.db #0x03
   022B 01                 1553 	.db #0x01
   022C 02                 1554 	.db #0x02
   022D 08                 1555 	.db #0x08
   022E 0A                 1556 	.db #0x0A
   022F 12                 1557 	.db #0x12
   0230 10                 1558 	.db #0x10
   0231 00                 1559 	.db #0x00
   0232 02                 1560 	.db #0x02
   0233 08                 1561 	.db #0x08
   0234 09                 1562 	.db #0x09
   0235 03                 1563 	.db #0x03
   0236 01                 1564 	.db #0x01
   0237 11                 1565 	.db #0x11
   0238 13                 1566 	.db #0x13
   0239 0B                 1567 	.db #0x0B
   023A 09                 1568 	.db #0x09
   023B 03                 1569 	.db #0x03
   023C 08                 1570 	.db #0x08
   023D 0A                 1571 	.db #0x0A
   023E 12                 1572 	.db #0x12
   023F 10                 1573 	.db #0x10
   0240 00                 1574 	.db #0x00
   0241 02                 1575 	.db #0x02
   0242 08                 1576 	.db #0x08
   0243 0A                 1577 	.db #0x0A
   0244 0B                 1578 	.db #0x0B
   0245 09                 1579 	.db #0x09
   0246 03                 1580 	.db #0x03
   0247 01                 1581 	.db #0x01
   0248 11                 1582 	.db #0x11
   0249 13                 1583 	.db #0x13
   024A 0B                 1584 	.db #0x0B
   024B 09                 1585 	.db #0x09
   024C 0A                 1586 	.db #0x0A
   024D 12                 1587 	.db #0x12
   024E 10                 1588 	.db #0x10
   024F 00                 1589 	.db #0x00
   0250 02                 1590 	.db #0x02
   0251 08                 1591 	.db #0x08
   0252 0A                 1592 	.db #0x0A
   0253 12                 1593 	.db #0x12
   0254 13                 1594 	.db #0x13
   0255 0B                 1595 	.db #0x0B
   0256 09                 1596 	.db #0x09
   0257 03                 1597 	.db #0x03
   0258 01                 1598 	.db #0x01
   0259 11                 1599 	.db #0x11
   025A 13                 1600 	.db #0x13
   025B 0B                 1601 	.db #0x0B
   025C 12                 1602 	.db #0x12
   025D 10                 1603 	.db #0x10
   025E 00                 1604 	.db #0x00
   025F 02                 1605 	.db #0x02
   0260 08                 1606 	.db #0x08
   0261 0A                 1607 	.db #0x0A
   0262 12                 1608 	.db #0x12
   0263 10                 1609 	.db #0x10
   0264 11                 1610 	.db #0x11
   0265 13                 1611 	.db #0x13
   0266 0B                 1612 	.db #0x0B
   0267 09                 1613 	.db #0x09
   0268 03                 1614 	.db #0x03
   0269 01                 1615 	.db #0x01
   026A 11                 1616 	.db #0x11
   026B 13                 1617 	.db #0x13
   026C 10                 1618 	.db #0x10
   026D 00                 1619 	.db #0x00
   026E 02                 1620 	.db #0x02
   026F 08                 1621 	.db #0x08
   0270 0A                 1622 	.db #0x0A
   0271 12                 1623 	.db #0x12
   0272 10                 1624 	.db #0x10
   0273 00                 1625 	.db #0x00
   0274 01                 1626 	.db #0x01
   0275 11                 1627 	.db #0x11
   0276 13                 1628 	.db #0x13
   0277 0B                 1629 	.db #0x0B
   0278 09                 1630 	.db #0x09
   0279 03                 1631 	.db #0x03
   027A 01                 1632 	.db #0x01
   027B 11                 1633 	.db #0x11
   027C 00                 1634 	.db #0x00
   027D 02                 1635 	.db #0x02
   027E 08                 1636 	.db #0x08
   027F 0A                 1637 	.db #0x0A
   0280 12                 1638 	.db #0x12
   0281 10                 1639 	.db #0x10
   0282 00                 1640 	.db #0x00
   0283 02                 1641 	.db #0x02
   0284 03                 1642 	.db #0x03
   0285 01                 1643 	.db #0x01
   0286 11                 1644 	.db #0x11
   0287 13                 1645 	.db #0x13
   0288 0B                 1646 	.db #0x0B
   0289 09                 1647 	.db #0x09
   028A 03                 1648 	.db #0x03
   028B 01                 1649 	.db #0x01
   028C 02                 1650 	.db #0x02
   028D 08                 1651 	.db #0x08
   028E 0A                 1652 	.db #0x0A
   028F 12                 1653 	.db #0x12
   0290 10                 1654 	.db #0x10
   0291 00                 1655 	.db #0x00
   0292 02                 1656 	.db #0x02
   0293 08                 1657 	.db #0x08
   0294 09                 1658 	.db #0x09
   0295 03                 1659 	.db #0x03
   0296 01                 1660 	.db #0x01
   0297 11                 1661 	.db #0x11
   0298 13                 1662 	.db #0x13
   0299 0B                 1663 	.db #0x0B
   029A 09                 1664 	.db #0x09
   029B 03                 1665 	.db #0x03
   029C 08                 1666 	.db #0x08
   029D 0A                 1667 	.db #0x0A
   029E 12                 1668 	.db #0x12
   029F 10                 1669 	.db #0x10
   02A0 00                 1670 	.db #0x00
   02A1 02                 1671 	.db #0x02
   02A2 08                 1672 	.db #0x08
   02A3 0A                 1673 	.db #0x0A
   02A4 0B                 1674 	.db #0x0B
   02A5 09                 1675 	.db #0x09
   02A6 03                 1676 	.db #0x03
   02A7 01                 1677 	.db #0x01
   02A8 11                 1678 	.db #0x11
   02A9 13                 1679 	.db #0x13
   02AA 0B                 1680 	.db #0x0B
   02AB 09                 1681 	.db #0x09
   02AC                    1682 _tri_dia:
   02AC 05                 1683 	.db #0x05
   02AD 1B                 1684 	.db #0x1B
   02AE 0F                 1685 	.db #0x0F
   02AF 1D                 1686 	.db #0x1D
   02B0 15                 1687 	.db #0x15
   02B1 19                 1688 	.db #0x19
   02B2 05                 1689 	.db #0x05
   02B3 1B                 1690 	.db #0x1B
   02B4 0F                 1691 	.db #0x0F
   02B5 1D                 1692 	.db #0x1D
   02B6 15                 1693 	.db #0x15
   02B7 19                 1694 	.db #0x19
   02B8 05                 1695 	.db #0x05
   02B9 1B                 1696 	.db #0x1B
   02BA 0F                 1697 	.db #0x0F
   02BB 1D                 1698 	.db #0x1D
   02BC 1D                 1699 	.db #0x1D
   02BD 05                 1700 	.db #0x05
   02BE 19                 1701 	.db #0x19
   02BF 0F                 1702 	.db #0x0F
   02C0 1B                 1703 	.db #0x1B
   02C1 15                 1704 	.db #0x15
   02C2 1D                 1705 	.db #0x1D
   02C3 05                 1706 	.db #0x05
   02C4 19                 1707 	.db #0x19
   02C5 0F                 1708 	.db #0x0F
   02C6 1B                 1709 	.db #0x1B
   02C7 15                 1710 	.db #0x15
   02C8 1D                 1711 	.db #0x1D
   02C9 05                 1712 	.db #0x05
   02CA 19                 1713 	.db #0x19
   02CB 0F                 1714 	.db #0x0F
   02CC 0F                 1715 	.db #0x0F
   02CD 1D                 1716 	.db #0x1D
   02CE 15                 1717 	.db #0x15
   02CF 19                 1718 	.db #0x19
   02D0 05                 1719 	.db #0x05
   02D1 1B                 1720 	.db #0x1B
   02D2 0F                 1721 	.db #0x0F
   02D3 1D                 1722 	.db #0x1D
   02D4 15                 1723 	.db #0x15
   02D5 19                 1724 	.db #0x19
   02D6 05                 1725 	.db #0x05
   02D7 1B                 1726 	.db #0x1B
   02D8 0F                 1727 	.db #0x0F
   02D9 1D                 1728 	.db #0x1D
   02DA 15                 1729 	.db #0x15
   02DB 19                 1730 	.db #0x19
   02DC 19                 1731 	.db #0x19
   02DD 0F                 1732 	.db #0x0F
   02DE 1B                 1733 	.db #0x1B
   02DF 15                 1734 	.db #0x15
   02E0 1D                 1735 	.db #0x1D
   02E1 05                 1736 	.db #0x05
   02E2 19                 1737 	.db #0x19
   02E3 0F                 1738 	.db #0x0F
   02E4 1B                 1739 	.db #0x1B
   02E5 15                 1740 	.db #0x15
   02E6 1D                 1741 	.db #0x1D
   02E7 05                 1742 	.db #0x05
   02E8 19                 1743 	.db #0x19
   02E9 0F                 1744 	.db #0x0F
   02EA 1B                 1745 	.db #0x1B
   02EB 15                 1746 	.db #0x15
   02EC 15                 1747 	.db #0x15
   02ED 19                 1748 	.db #0x19
   02EE 05                 1749 	.db #0x05
   02EF 1B                 1750 	.db #0x1B
   02F0 0F                 1751 	.db #0x0F
   02F1 1D                 1752 	.db #0x1D
   02F2 15                 1753 	.db #0x15
   02F3 19                 1754 	.db #0x19
   02F4 05                 1755 	.db #0x05
   02F5 1B                 1756 	.db #0x1B
   02F6 0F                 1757 	.db #0x0F
   02F7 1D                 1758 	.db #0x1D
   02F8 15                 1759 	.db #0x15
   02F9 19                 1760 	.db #0x19
   02FA 05                 1761 	.db #0x05
   02FB 1B                 1762 	.db #0x1B
   02FC 1B                 1763 	.db #0x1B
   02FD 15                 1764 	.db #0x15
   02FE 1D                 1765 	.db #0x1D
   02FF 05                 1766 	.db #0x05
   0300 19                 1767 	.db #0x19
   0301 0F                 1768 	.db #0x0F
   0302 1B                 1769 	.db #0x1B
   0303 15                 1770 	.db #0x15
   0304 1D                 1771 	.db #0x1D
   0305 05                 1772 	.db #0x05
   0306 19                 1773 	.db #0x19
   0307 0F                 1774 	.db #0x0F
   0308 1B                 1775 	.db #0x1B
   0309 15                 1776 	.db #0x15
   030A 1D                 1777 	.db #0x1D
   030B 05                 1778 	.db #0x05
   030C 05                 1779 	.db #0x05
   030D 1B                 1780 	.db #0x1B
   030E 0F                 1781 	.db #0x0F
   030F 1D                 1782 	.db #0x1D
   0310 15                 1783 	.db #0x15
   0311 19                 1784 	.db #0x19
   0312 05                 1785 	.db #0x05
   0313 1B                 1786 	.db #0x1B
   0314 0F                 1787 	.db #0x0F
   0315 1D                 1788 	.db #0x1D
   0316 15                 1789 	.db #0x15
   0317 19                 1790 	.db #0x19
   0318 05                 1791 	.db #0x05
   0319 1B                 1792 	.db #0x1B
   031A 0F                 1793 	.db #0x0F
   031B 1D                 1794 	.db #0x1D
   031C 1D                 1795 	.db #0x1D
   031D 05                 1796 	.db #0x05
   031E 19                 1797 	.db #0x19
   031F 0F                 1798 	.db #0x0F
   0320 1B                 1799 	.db #0x1B
   0321 15                 1800 	.db #0x15
   0322 1D                 1801 	.db #0x1D
   0323 05                 1802 	.db #0x05
   0324 19                 1803 	.db #0x19
   0325 0F                 1804 	.db #0x0F
   0326 1B                 1805 	.db #0x1B
   0327 15                 1806 	.db #0x15
   0328 1D                 1807 	.db #0x1D
   0329 05                 1808 	.db #0x05
   032A 19                 1809 	.db #0x19
   032B 0F                 1810 	.db #0x0F
   032C 0F                 1811 	.db #0x0F
   032D 1D                 1812 	.db #0x1D
   032E 15                 1813 	.db #0x15
   032F 19                 1814 	.db #0x19
   0330 05                 1815 	.db #0x05
   0331 1B                 1816 	.db #0x1B
   0332 0F                 1817 	.db #0x0F
   0333 1D                 1818 	.db #0x1D
   0334 15                 1819 	.db #0x15
   0335 19                 1820 	.db #0x19
   0336 05                 1821 	.db #0x05
   0337 1B                 1822 	.db #0x1B
   0338 0F                 1823 	.db #0x0F
   0339 1D                 1824 	.db #0x1D
   033A 15                 1825 	.db #0x15
   033B 19                 1826 	.db #0x19
   033C 19                 1827 	.db #0x19
   033D 0F                 1828 	.db #0x0F
   033E 1B                 1829 	.db #0x1B
   033F 15                 1830 	.db #0x15
   0340 1D                 1831 	.db #0x1D
   0341 05                 1832 	.db #0x05
   0342 19                 1833 	.db #0x19
   0343 0F                 1834 	.db #0x0F
   0344 1B                 1835 	.db #0x1B
   0345 15                 1836 	.db #0x15
   0346 1D                 1837 	.db #0x1D
   0347 05                 1838 	.db #0x05
   0348 19                 1839 	.db #0x19
   0349 0F                 1840 	.db #0x0F
   034A 1B                 1841 	.db #0x1B
   034B 15                 1842 	.db #0x15
   034C 15                 1843 	.db #0x15
   034D 19                 1844 	.db #0x19
   034E 05                 1845 	.db #0x05
   034F 1B                 1846 	.db #0x1B
   0350 0F                 1847 	.db #0x0F
   0351 1D                 1848 	.db #0x1D
   0352 15                 1849 	.db #0x15
   0353 19                 1850 	.db #0x19
   0354 05                 1851 	.db #0x05
   0355 1B                 1852 	.db #0x1B
   0356 0F                 1853 	.db #0x0F
   0357 1D                 1854 	.db #0x1D
   0358 15                 1855 	.db #0x15
   0359 19                 1856 	.db #0x19
   035A 05                 1857 	.db #0x05
   035B 1B                 1858 	.db #0x1B
   035C 1B                 1859 	.db #0x1B
   035D 15                 1860 	.db #0x15
   035E 1D                 1861 	.db #0x1D
   035F 05                 1862 	.db #0x05
   0360 19                 1863 	.db #0x19
   0361 0F                 1864 	.db #0x0F
   0362 1B                 1865 	.db #0x1B
   0363 15                 1866 	.db #0x15
   0364 1D                 1867 	.db #0x1D
   0365 05                 1868 	.db #0x05
   0366 19                 1869 	.db #0x19
   0367 0F                 1870 	.db #0x0F
   0368 1B                 1871 	.db #0x1B
   0369 15                 1872 	.db #0x15
   036A 1D                 1873 	.db #0x1D
   036B 05                 1874 	.db #0x05
   036C                    1875 _tri_side1:
   036C 0A                 1876 	.db #0x0A
   036D 12                 1877 	.db #0x12
   036E 10                 1878 	.db #0x10
   036F 00                 1879 	.db #0x00
   0370 02                 1880 	.db #0x02
   0371 08                 1881 	.db #0x08
   0372 0A                 1882 	.db #0x0A
   0373 12                 1883 	.db #0x12
   0374 10                 1884 	.db #0x10
   0375 00                 1885 	.db #0x00
   0376 02                 1886 	.db #0x02
   0377 08                 1887 	.db #0x08
   0378 0A                 1888 	.db #0x0A
   0379 12                 1889 	.db #0x12
   037A 10                 1890 	.db #0x10
   037B 00                 1891 	.db #0x00
   037C 12                 1892 	.db #0x12
   037D 10                 1893 	.db #0x10
   037E 00                 1894 	.db #0x00
   037F 02                 1895 	.db #0x02
   0380 08                 1896 	.db #0x08
   0381 0A                 1897 	.db #0x0A
   0382 12                 1898 	.db #0x12
   0383 10                 1899 	.db #0x10
   0384 00                 1900 	.db #0x00
   0385 02                 1901 	.db #0x02
   0386 08                 1902 	.db #0x08
   0387 0A                 1903 	.db #0x0A
   0388 12                 1904 	.db #0x12
   0389 10                 1905 	.db #0x10
   038A 00                 1906 	.db #0x00
   038B 02                 1907 	.db #0x02
   038C 10                 1908 	.db #0x10
   038D 00                 1909 	.db #0x00
   038E 02                 1910 	.db #0x02
   038F 08                 1911 	.db #0x08
   0390 0A                 1912 	.db #0x0A
   0391 12                 1913 	.db #0x12
   0392 10                 1914 	.db #0x10
   0393 00                 1915 	.db #0x00
   0394 02                 1916 	.db #0x02
   0395 08                 1917 	.db #0x08
   0396 0A                 1918 	.db #0x0A
   0397 12                 1919 	.db #0x12
   0398 10                 1920 	.db #0x10
   0399 00                 1921 	.db #0x00
   039A 02                 1922 	.db #0x02
   039B 08                 1923 	.db #0x08
   039C 00                 1924 	.db #0x00
   039D 02                 1925 	.db #0x02
   039E 08                 1926 	.db #0x08
   039F 0A                 1927 	.db #0x0A
   03A0 12                 1928 	.db #0x12
   03A1 10                 1929 	.db #0x10
   03A2 00                 1930 	.db #0x00
   03A3 02                 1931 	.db #0x02
   03A4 08                 1932 	.db #0x08
   03A5 0A                 1933 	.db #0x0A
   03A6 12                 1934 	.db #0x12
   03A7 10                 1935 	.db #0x10
   03A8 00                 1936 	.db #0x00
   03A9 02                 1937 	.db #0x02
   03AA 08                 1938 	.db #0x08
   03AB 0A                 1939 	.db #0x0A
   03AC 02                 1940 	.db #0x02
   03AD 08                 1941 	.db #0x08
   03AE 0A                 1942 	.db #0x0A
   03AF 12                 1943 	.db #0x12
   03B0 10                 1944 	.db #0x10
   03B1 00                 1945 	.db #0x00
   03B2 02                 1946 	.db #0x02
   03B3 08                 1947 	.db #0x08
   03B4 0A                 1948 	.db #0x0A
   03B5 12                 1949 	.db #0x12
   03B6 10                 1950 	.db #0x10
   03B7 00                 1951 	.db #0x00
   03B8 02                 1952 	.db #0x02
   03B9 08                 1953 	.db #0x08
   03BA 0A                 1954 	.db #0x0A
   03BB 12                 1955 	.db #0x12
   03BC 08                 1956 	.db #0x08
   03BD 0A                 1957 	.db #0x0A
   03BE 12                 1958 	.db #0x12
   03BF 10                 1959 	.db #0x10
   03C0 00                 1960 	.db #0x00
   03C1 02                 1961 	.db #0x02
   03C2 08                 1962 	.db #0x08
   03C3 0A                 1963 	.db #0x0A
   03C4 12                 1964 	.db #0x12
   03C5 10                 1965 	.db #0x10
   03C6 00                 1966 	.db #0x00
   03C7 02                 1967 	.db #0x02
   03C8 08                 1968 	.db #0x08
   03C9 0A                 1969 	.db #0x0A
   03CA 12                 1970 	.db #0x12
   03CB 10                 1971 	.db #0x10
   03CC 0A                 1972 	.db #0x0A
   03CD 12                 1973 	.db #0x12
   03CE 10                 1974 	.db #0x10
   03CF 00                 1975 	.db #0x00
   03D0 02                 1976 	.db #0x02
   03D1 08                 1977 	.db #0x08
   03D2 0A                 1978 	.db #0x0A
   03D3 12                 1979 	.db #0x12
   03D4 10                 1980 	.db #0x10
   03D5 00                 1981 	.db #0x00
   03D6 02                 1982 	.db #0x02
   03D7 08                 1983 	.db #0x08
   03D8 0A                 1984 	.db #0x0A
   03D9 12                 1985 	.db #0x12
   03DA 10                 1986 	.db #0x10
   03DB 00                 1987 	.db #0x00
   03DC 12                 1988 	.db #0x12
   03DD 10                 1989 	.db #0x10
   03DE 00                 1990 	.db #0x00
   03DF 02                 1991 	.db #0x02
   03E0 08                 1992 	.db #0x08
   03E1 0A                 1993 	.db #0x0A
   03E2 12                 1994 	.db #0x12
   03E3 10                 1995 	.db #0x10
   03E4 00                 1996 	.db #0x00
   03E5 02                 1997 	.db #0x02
   03E6 08                 1998 	.db #0x08
   03E7 0A                 1999 	.db #0x0A
   03E8 12                 2000 	.db #0x12
   03E9 10                 2001 	.db #0x10
   03EA 00                 2002 	.db #0x00
   03EB 02                 2003 	.db #0x02
   03EC 10                 2004 	.db #0x10
   03ED 00                 2005 	.db #0x00
   03EE 02                 2006 	.db #0x02
   03EF 08                 2007 	.db #0x08
   03F0 0A                 2008 	.db #0x0A
   03F1 12                 2009 	.db #0x12
   03F2 10                 2010 	.db #0x10
   03F3 00                 2011 	.db #0x00
   03F4 02                 2012 	.db #0x02
   03F5 08                 2013 	.db #0x08
   03F6 0A                 2014 	.db #0x0A
   03F7 12                 2015 	.db #0x12
   03F8 10                 2016 	.db #0x10
   03F9 00                 2017 	.db #0x00
   03FA 02                 2018 	.db #0x02
   03FB 08                 2019 	.db #0x08
   03FC 00                 2020 	.db #0x00
   03FD 02                 2021 	.db #0x02
   03FE 08                 2022 	.db #0x08
   03FF 0A                 2023 	.db #0x0A
   0400 12                 2024 	.db #0x12
   0401 10                 2025 	.db #0x10
   0402 00                 2026 	.db #0x00
   0403 02                 2027 	.db #0x02
   0404 08                 2028 	.db #0x08
   0405 0A                 2029 	.db #0x0A
   0406 12                 2030 	.db #0x12
   0407 10                 2031 	.db #0x10
   0408 00                 2032 	.db #0x00
   0409 02                 2033 	.db #0x02
   040A 08                 2034 	.db #0x08
   040B 0A                 2035 	.db #0x0A
   040C 02                 2036 	.db #0x02
   040D 08                 2037 	.db #0x08
   040E 0A                 2038 	.db #0x0A
   040F 12                 2039 	.db #0x12
   0410 10                 2040 	.db #0x10
   0411 00                 2041 	.db #0x00
   0412 02                 2042 	.db #0x02
   0413 08                 2043 	.db #0x08
   0414 0A                 2044 	.db #0x0A
   0415 12                 2045 	.db #0x12
   0416 10                 2046 	.db #0x10
   0417 00                 2047 	.db #0x00
   0418 02                 2048 	.db #0x02
   0419 08                 2049 	.db #0x08
   041A 0A                 2050 	.db #0x0A
   041B 12                 2051 	.db #0x12
   041C 08                 2052 	.db #0x08
   041D 0A                 2053 	.db #0x0A
   041E 12                 2054 	.db #0x12
   041F 10                 2055 	.db #0x10
   0420 00                 2056 	.db #0x00
   0421 02                 2057 	.db #0x02
   0422 08                 2058 	.db #0x08
   0423 0A                 2059 	.db #0x0A
   0424 12                 2060 	.db #0x12
   0425 10                 2061 	.db #0x10
   0426 00                 2062 	.db #0x00
   0427 02                 2063 	.db #0x02
   0428 08                 2064 	.db #0x08
   0429 0A                 2065 	.db #0x0A
   042A 12                 2066 	.db #0x12
   042B 10                 2067 	.db #0x10
   042C                    2068 _tri_side2:
   042C 00                 2069 	.db #0x00
   042D 10                 2070 	.db #0x10
   042E 12                 2071 	.db #0x12
   042F 0A                 2072 	.db #0x0A
   0430 08                 2073 	.db #0x08
   0431 02                 2074 	.db #0x02
   0432 00                 2075 	.db #0x00
   0433 10                 2076 	.db #0x10
   0434 12                 2077 	.db #0x12
   0435 0A                 2078 	.db #0x0A
   0436 08                 2079 	.db #0x08
   0437 02                 2080 	.db #0x02
   0438 00                 2081 	.db #0x00
   0439 10                 2082 	.db #0x10
   043A 12                 2083 	.db #0x12
   043B 0A                 2084 	.db #0x0A
   043C 02                 2085 	.db #0x02
   043D 00                 2086 	.db #0x00
   043E 10                 2087 	.db #0x10
   043F 12                 2088 	.db #0x12
   0440 0A                 2089 	.db #0x0A
   0441 08                 2090 	.db #0x08
   0442 02                 2091 	.db #0x02
   0443 00                 2092 	.db #0x00
   0444 10                 2093 	.db #0x10
   0445 12                 2094 	.db #0x12
   0446 0A                 2095 	.db #0x0A
   0447 08                 2096 	.db #0x08
   0448 02                 2097 	.db #0x02
   0449 00                 2098 	.db #0x00
   044A 10                 2099 	.db #0x10
   044B 12                 2100 	.db #0x12
   044C 08                 2101 	.db #0x08
   044D 02                 2102 	.db #0x02
   044E 00                 2103 	.db #0x00
   044F 10                 2104 	.db #0x10
   0450 12                 2105 	.db #0x12
   0451 0A                 2106 	.db #0x0A
   0452 08                 2107 	.db #0x08
   0453 02                 2108 	.db #0x02
   0454 00                 2109 	.db #0x00
   0455 10                 2110 	.db #0x10
   0456 12                 2111 	.db #0x12
   0457 0A                 2112 	.db #0x0A
   0458 08                 2113 	.db #0x08
   0459 02                 2114 	.db #0x02
   045A 00                 2115 	.db #0x00
   045B 10                 2116 	.db #0x10
   045C 0A                 2117 	.db #0x0A
   045D 08                 2118 	.db #0x08
   045E 02                 2119 	.db #0x02
   045F 00                 2120 	.db #0x00
   0460 10                 2121 	.db #0x10
   0461 12                 2122 	.db #0x12
   0462 0A                 2123 	.db #0x0A
   0463 08                 2124 	.db #0x08
   0464 02                 2125 	.db #0x02
   0465 00                 2126 	.db #0x00
   0466 10                 2127 	.db #0x10
   0467 12                 2128 	.db #0x12
   0468 0A                 2129 	.db #0x0A
   0469 08                 2130 	.db #0x08
   046A 02                 2131 	.db #0x02
   046B 00                 2132 	.db #0x00
   046C 12                 2133 	.db #0x12
   046D 0A                 2134 	.db #0x0A
   046E 08                 2135 	.db #0x08
   046F 02                 2136 	.db #0x02
   0470 00                 2137 	.db #0x00
   0471 10                 2138 	.db #0x10
   0472 12                 2139 	.db #0x12
   0473 0A                 2140 	.db #0x0A
   0474 08                 2141 	.db #0x08
   0475 02                 2142 	.db #0x02
   0476 00                 2143 	.db #0x00
   0477 10                 2144 	.db #0x10
   0478 12                 2145 	.db #0x12
   0479 0A                 2146 	.db #0x0A
   047A 08                 2147 	.db #0x08
   047B 02                 2148 	.db #0x02
   047C 10                 2149 	.db #0x10
   047D 12                 2150 	.db #0x12
   047E 0A                 2151 	.db #0x0A
   047F 08                 2152 	.db #0x08
   0480 02                 2153 	.db #0x02
   0481 00                 2154 	.db #0x00
   0482 10                 2155 	.db #0x10
   0483 12                 2156 	.db #0x12
   0484 0A                 2157 	.db #0x0A
   0485 08                 2158 	.db #0x08
   0486 02                 2159 	.db #0x02
   0487 00                 2160 	.db #0x00
   0488 10                 2161 	.db #0x10
   0489 12                 2162 	.db #0x12
   048A 0A                 2163 	.db #0x0A
   048B 08                 2164 	.db #0x08
   048C 00                 2165 	.db #0x00
   048D 10                 2166 	.db #0x10
   048E 12                 2167 	.db #0x12
   048F 0A                 2168 	.db #0x0A
   0490 08                 2169 	.db #0x08
   0491 02                 2170 	.db #0x02
   0492 00                 2171 	.db #0x00
   0493 10                 2172 	.db #0x10
   0494 12                 2173 	.db #0x12
   0495 0A                 2174 	.db #0x0A
   0496 08                 2175 	.db #0x08
   0497 02                 2176 	.db #0x02
   0498 00                 2177 	.db #0x00
   0499 10                 2178 	.db #0x10
   049A 12                 2179 	.db #0x12
   049B 0A                 2180 	.db #0x0A
   049C 02                 2181 	.db #0x02
   049D 00                 2182 	.db #0x00
   049E 10                 2183 	.db #0x10
   049F 12                 2184 	.db #0x12
   04A0 0A                 2185 	.db #0x0A
   04A1 08                 2186 	.db #0x08
   04A2 02                 2187 	.db #0x02
   04A3 00                 2188 	.db #0x00
   04A4 10                 2189 	.db #0x10
   04A5 12                 2190 	.db #0x12
   04A6 0A                 2191 	.db #0x0A
   04A7 08                 2192 	.db #0x08
   04A8 02                 2193 	.db #0x02
   04A9 00                 2194 	.db #0x00
   04AA 10                 2195 	.db #0x10
   04AB 12                 2196 	.db #0x12
   04AC 08                 2197 	.db #0x08
   04AD 02                 2198 	.db #0x02
   04AE 00                 2199 	.db #0x00
   04AF 10                 2200 	.db #0x10
   04B0 12                 2201 	.db #0x12
   04B1 0A                 2202 	.db #0x0A
   04B2 08                 2203 	.db #0x08
   04B3 02                 2204 	.db #0x02
   04B4 00                 2205 	.db #0x00
   04B5 10                 2206 	.db #0x10
   04B6 12                 2207 	.db #0x12
   04B7 0A                 2208 	.db #0x0A
   04B8 08                 2209 	.db #0x08
   04B9 02                 2210 	.db #0x02
   04BA 00                 2211 	.db #0x00
   04BB 10                 2212 	.db #0x10
   04BC 0A                 2213 	.db #0x0A
   04BD 08                 2214 	.db #0x08
   04BE 02                 2215 	.db #0x02
   04BF 00                 2216 	.db #0x00
   04C0 10                 2217 	.db #0x10
   04C1 12                 2218 	.db #0x12
   04C2 0A                 2219 	.db #0x0A
   04C3 08                 2220 	.db #0x08
   04C4 02                 2221 	.db #0x02
   04C5 00                 2222 	.db #0x00
   04C6 10                 2223 	.db #0x10
   04C7 12                 2224 	.db #0x12
   04C8 0A                 2225 	.db #0x0A
   04C9 08                 2226 	.db #0x08
   04CA 02                 2227 	.db #0x02
   04CB 00                 2228 	.db #0x00
   04CC 12                 2229 	.db #0x12
   04CD 0A                 2230 	.db #0x0A
   04CE 08                 2231 	.db #0x08
   04CF 02                 2232 	.db #0x02
   04D0 00                 2233 	.db #0x00
   04D1 10                 2234 	.db #0x10
   04D2 12                 2235 	.db #0x12
   04D3 0A                 2236 	.db #0x0A
   04D4 08                 2237 	.db #0x08
   04D5 02                 2238 	.db #0x02
   04D6 00                 2239 	.db #0x00
   04D7 10                 2240 	.db #0x10
   04D8 12                 2241 	.db #0x12
   04D9 0A                 2242 	.db #0x0A
   04DA 08                 2243 	.db #0x08
   04DB 02                 2244 	.db #0x02
   04DC 10                 2245 	.db #0x10
   04DD 12                 2246 	.db #0x12
   04DE 0A                 2247 	.db #0x0A
   04DF 08                 2248 	.db #0x08
   04E0 02                 2249 	.db #0x02
   04E1 00                 2250 	.db #0x00
   04E2 10                 2251 	.db #0x10
   04E3 12                 2252 	.db #0x12
   04E4 0A                 2253 	.db #0x0A
   04E5 08                 2254 	.db #0x08
   04E6 02                 2255 	.db #0x02
   04E7 00                 2256 	.db #0x00
   04E8 10                 2257 	.db #0x10
   04E9 12                 2258 	.db #0x12
   04EA 0A                 2259 	.db #0x0A
   04EB 08                 2260 	.db #0x08
   04EC                    2261 _tri_inva1:
   04EC 1E                 2262 	.db #0x1E
   04ED 1F                 2263 	.db #0x1F
   04EE 1E                 2264 	.db #0x1E
   04EF 11                 2265 	.db #0x11
   04F0 13                 2266 	.db #0x13
   04F1 1E                 2267 	.db #0x1E
   04F2 08                 2268 	.db #0x08
   04F3 0A                 2269 	.db #0x0A
   04F4 00                 2270 	.db #0x00
   04F5 0E                 2271 	.db #0x0E
   04F6 10                 2272 	.db #0x10
   04F7 1E                 2273 	.db #0x1E
   04F8 1C                 2274 	.db #0x1C
   04F9 1E                 2275 	.db #0x1E
   04FA 08                 2276 	.db #0x08
   04FB 0A                 2277 	.db #0x0A
   04FC 1F                 2278 	.db #0x1F
   04FD 1F                 2279 	.db #0x1F
   04FE 1E                 2280 	.db #0x1E
   04FF 1E                 2281 	.db #0x1E
   0500 15                 2282 	.db #0x15
   0501 17                 2283 	.db #0x17
   0502 0A                 2284 	.db #0x0A
   0503 00                 2285 	.db #0x00
   0504 02                 2286 	.db #0x02
   0505 11                 2287 	.db #0x11
   0506 13                 2288 	.db #0x13
   0507 1F                 2289 	.db #0x1F
   0508 1C                 2290 	.db #0x1C
   0509 08                 2291 	.db #0x08
   050A 0A                 2292 	.db #0x0A
   050B 1F                 2293 	.db #0x1F
   050C 1E                 2294 	.db #0x1E
   050D 1F                 2295 	.db #0x1F
   050E 08                 2296 	.db #0x08
   050F 1B                 2297 	.db #0x1B
   0510 1A                 2298 	.db #0x1A
   0511 11                 2299 	.db #0x11
   0512 13                 2300 	.db #0x13
   0513 1C                 2301 	.db #0x1C
   0514 1E                 2302 	.db #0x1E
   0515 1F                 2303 	.db #0x1F
   0516 19                 2304 	.db #0x19
   0517 1E                 2305 	.db #0x1E
   0518 06                 2306 	.db #0x06
   0519 04                 2307 	.db #0x04
   051A 1C                 2308 	.db #0x1C
   051B 1C                 2309 	.db #0x1C
   051C 1E                 2310 	.db #0x1E
   051D 08                 2311 	.db #0x08
   051E 16                 2312 	.db #0x16
   051F 18                 2313 	.db #0x18
   0520 1B                 2314 	.db #0x1B
   0521 1E                 2315 	.db #0x1E
   0522 19                 2316 	.db #0x19
   0523 1D                 2317 	.db #0x1D
   0524 1F                 2318 	.db #0x1F
   0525 1E                 2319 	.db #0x1E
   0526 19                 2320 	.db #0x19
   0527 08                 2321 	.db #0x08
   0528 1B                 2322 	.db #0x1B
   0529 1E                 2323 	.db #0x1E
   052A 12                 2324 	.db #0x12
   052B 10                 2325 	.db #0x10
   052C 08                 2326 	.db #0x08
   052D 16                 2327 	.db #0x16
   052E 10                 2328 	.db #0x10
   052F 11                 2329 	.db #0x11
   0530 17                 2330 	.db #0x17
   0531 09                 2331 	.db #0x09
   0532 11                 2332 	.db #0x11
   0533 0F                 2333 	.db #0x0F
   0534 01                 2334 	.db #0x01
   0535 1E                 2335 	.db #0x1E
   0536 14                 2336 	.db #0x14
   0537 16                 2337 	.db #0x16
   0538 17                 2338 	.db #0x17
   0539 15                 2339 	.db #0x15
   053A 10                 2340 	.db #0x10
   053B 1E                 2341 	.db #0x1E
   053C 0A                 2342 	.db #0x0A
   053D 18                 2343 	.db #0x18
   053E 1F                 2344 	.db #0x1F
   053F 1E                 2345 	.db #0x1E
   0540 19                 2346 	.db #0x19
   0541 0B                 2347 	.db #0x0B
   0542 09                 2348 	.db #0x09
   0543 11                 2349 	.db #0x11
   0544 0F                 2350 	.db #0x0F
   0545 1C                 2351 	.db #0x1C
   0546 05                 2352 	.db #0x05
   0547 09                 2353 	.db #0x09
   0548 1E                 2354 	.db #0x1E
   0549 0B                 2355 	.db #0x0B
   054A 09                 2356 	.db #0x09
   054B 1F                 2357 	.db #0x1F
   054C 1E                 2358 	.db #0x1E
   054D 19                 2359 	.db #0x19
   054E 1E                 2360 	.db #0x1E
   054F 1F                 2361 	.db #0x1F
   0550 19                 2362 	.db #0x19
   0551 1E                 2363 	.db #0x1E
   0552 0B                 2364 	.db #0x0B
   0553 1B                 2365 	.db #0x1B
   0554 15                 2366 	.db #0x15
   0555 19                 2367 	.db #0x19
   0556 1D                 2368 	.db #0x1D
   0557 19                 2369 	.db #0x19
   0558 19                 2370 	.db #0x19
   0559 13                 2371 	.db #0x13
   055A 0B                 2372 	.db #0x0B
   055B 09                 2373 	.db #0x09
   055C 1E                 2374 	.db #0x1E
   055D 15                 2375 	.db #0x15
   055E 13                 2376 	.db #0x13
   055F 1E                 2377 	.db #0x1E
   0560 0C                 2378 	.db #0x0C
   0561 01                 2379 	.db #0x01
   0562 1E                 2380 	.db #0x1E
   0563 1F                 2381 	.db #0x1F
   0564 1E                 2382 	.db #0x1E
   0565 1E                 2383 	.db #0x1E
   0566 1C                 2384 	.db #0x1C
   0567 1D                 2385 	.db #0x1D
   0568 01                 2386 	.db #0x01
   0569 11                 2387 	.db #0x11
   056A 13                 2388 	.db #0x13
   056B 0B                 2389 	.db #0x0B
   056C 09                 2390 	.db #0x09
   056D 1A                 2391 	.db #0x1A
   056E 14                 2392 	.db #0x14
   056F 04                 2393 	.db #0x04
   0570 0E                 2394 	.db #0x0E
   0571 07                 2395 	.db #0x07
   0572 01                 2396 	.db #0x01
   0573 1E                 2397 	.db #0x1E
   0574 1F                 2398 	.db #0x1F
   0575 00                 2399 	.db #0x00
   0576 02                 2400 	.db #0x02
   0577 1E                 2401 	.db #0x1E
   0578 03                 2402 	.db #0x03
   0579 01                 2403 	.db #0x01
   057A 0C                 2404 	.db #0x0C
   057B 06                 2405 	.db #0x06
   057C 0B                 2406 	.db #0x0B
   057D 1B                 2407 	.db #0x1B
   057E 04                 2408 	.db #0x04
   057F 0E                 2409 	.db #0x0E
   0580 19                 2410 	.db #0x19
   0581 17                 2411 	.db #0x17
   0582 07                 2412 	.db #0x07
   0583 1D                 2413 	.db #0x1D
   0584 1C                 2414 	.db #0x1C
   0585 02                 2415 	.db #0x02
   0586 1F                 2416 	.db #0x1F
   0587 1E                 2417 	.db #0x1E
   0588 08                 2418 	.db #0x08
   0589 07                 2419 	.db #0x07
   058A 06                 2420 	.db #0x06
   058B 1E                 2421 	.db #0x1E
   058C 08                 2422 	.db #0x08
   058D 04                 2423 	.db #0x04
   058E 0E                 2424 	.db #0x0E
   058F 14                 2425 	.db #0x14
   0590 09                 2426 	.db #0x09
   0591 11                 2427 	.db #0x11
   0592 17                 2428 	.db #0x17
   0593 07                 2429 	.db #0x07
   0594 1D                 2430 	.db #0x1D
   0595 1F                 2431 	.db #0x1F
   0596 1E                 2432 	.db #0x1E
   0597 08                 2433 	.db #0x08
   0598 0A                 2434 	.db #0x0A
   0599 1E                 2435 	.db #0x1E
   059A 1F                 2436 	.db #0x1F
   059B 1F                 2437 	.db #0x1F
   059C 04                 2438 	.db #0x04
   059D 0E                 2439 	.db #0x0E
   059E 14                 2440 	.db #0x14
   059F 0A                 2441 	.db #0x0A
   05A0 0B                 2442 	.db #0x0B
   05A1 09                 2443 	.db #0x09
   05A2 11                 2444 	.db #0x11
   05A3 17                 2445 	.db #0x17
   05A4 07                 2446 	.db #0x07
   05A5 01                 2447 	.db #0x01
   05A6 08                 2448 	.db #0x08
   05A7 0A                 2449 	.db #0x0A
   05A8 1E                 2450 	.db #0x1E
   05A9 1F                 2451 	.db #0x1F
   05AA 1F                 2452 	.db #0x1F
   05AB 1E                 2453 	.db #0x1E
   05AC                    2454 _tri_inva2:
   05AC 14                 2455 	.db #0x14
   05AD 04                 2456 	.db #0x04
   05AE 0E                 2457 	.db #0x0E
   05AF 14                 2458 	.db #0x14
   05B0 04                 2459 	.db #0x04
   05B1 0E                 2460 	.db #0x0E
   05B2 14                 2461 	.db #0x14
   05B3 1A                 2462 	.db #0x1A
   05B4 1B                 2463 	.db #0x1B
   05B5 15                 2464 	.db #0x15
   05B6 0F                 2465 	.db #0x0F
   05B7 05                 2466 	.db #0x05
   05B8 15                 2467 	.db #0x15
   05B9 0F                 2468 	.db #0x0F
   05BA 05                 2469 	.db #0x05
   05BB 15                 2470 	.db #0x15
   05BC 04                 2471 	.db #0x04
   05BD 0E                 2472 	.db #0x0E
   05BE 14                 2473 	.db #0x14
   05BF 04                 2474 	.db #0x04
   05C0 0E                 2475 	.db #0x0E
   05C1 14                 2476 	.db #0x14
   05C2 04                 2477 	.db #0x04
   05C3 1C                 2478 	.db #0x1C
   05C4 1D                 2479 	.db #0x1D
   05C5 05                 2480 	.db #0x05
   05C6 15                 2481 	.db #0x15
   05C7 0F                 2482 	.db #0x0F
   05C8 05                 2483 	.db #0x05
   05C9 15                 2484 	.db #0x15
   05CA 0F                 2485 	.db #0x0F
   05CB 05                 2486 	.db #0x05
   05CC 0E                 2487 	.db #0x0E
   05CD 14                 2488 	.db #0x14
   05CE 04                 2489 	.db #0x04
   05CF 0E                 2490 	.db #0x0E
   05D0 14                 2491 	.db #0x14
   05D1 04                 2492 	.db #0x04
   05D2 0E                 2493 	.db #0x0E
   05D3 18                 2494 	.db #0x18
   05D4 19                 2495 	.db #0x19
   05D5 0F                 2496 	.db #0x0F
   05D6 05                 2497 	.db #0x05
   05D7 15                 2498 	.db #0x15
   05D8 0F                 2499 	.db #0x0F
   05D9 05                 2500 	.db #0x05
   05DA 15                 2501 	.db #0x15
   05DB 0F                 2502 	.db #0x0F
   05DC 18                 2503 	.db #0x18
   05DD 1A                 2504 	.db #0x1A
   05DE 1C                 2505 	.db #0x1C
   05DF 18                 2506 	.db #0x18
   05E0 1A                 2507 	.db #0x1A
   05E1 1C                 2508 	.db #0x1C
   05E2 18                 2509 	.db #0x18
   05E3 18                 2510 	.db #0x18
   05E4 19                 2511 	.db #0x19
   05E5 19                 2512 	.db #0x19
   05E6 1D                 2513 	.db #0x1D
   05E7 1B                 2514 	.db #0x1B
   05E8 19                 2515 	.db #0x19
   05E9 1D                 2516 	.db #0x1D
   05EA 1B                 2517 	.db #0x1B
   05EB 19                 2518 	.db #0x19
   05EC 18                 2519 	.db #0x18
   05ED 1A                 2520 	.db #0x1A
   05EE 1C                 2521 	.db #0x1C
   05EF 18                 2522 	.db #0x18
   05F0 1A                 2523 	.db #0x1A
   05F1 1C                 2524 	.db #0x1C
   05F2 18                 2525 	.db #0x18
   05F3 18                 2526 	.db #0x18
   05F4 0D                 2527 	.db #0x0D
   05F5 19                 2528 	.db #0x19
   05F6 1D                 2529 	.db #0x1D
   05F7 1B                 2530 	.db #0x1B
   05F8 19                 2531 	.db #0x19
   05F9 1D                 2532 	.db #0x1D
   05FA 1B                 2533 	.db #0x1B
   05FB 19                 2534 	.db #0x19
   05FC 19                 2535 	.db #0x19
   05FD 1B                 2536 	.db #0x1B
   05FE 1D                 2537 	.db #0x1D
   05FF 19                 2538 	.db #0x19
   0600 1B                 2539 	.db #0x1B
   0601 1D                 2540 	.db #0x1D
   0602 19                 2541 	.db #0x19
   0603 0C                 2542 	.db #0x0C
   0604 0E                 2543 	.db #0x0E
   0605 18                 2544 	.db #0x18
   0606 1C                 2545 	.db #0x1C
   0607 1A                 2546 	.db #0x1A
   0608 18                 2547 	.db #0x18
   0609 1C                 2548 	.db #0x1C
   060A 1A                 2549 	.db #0x1A
   060B 18                 2550 	.db #0x18
   060C 19                 2551 	.db #0x19
   060D 1B                 2552 	.db #0x1B
   060E 1D                 2553 	.db #0x1D
   060F 19                 2554 	.db #0x19
   0610 1B                 2555 	.db #0x1B
   0611 1D                 2556 	.db #0x1D
   0612 19                 2557 	.db #0x19
   0613 0F                 2558 	.db #0x0F
   0614 0D                 2559 	.db #0x0D
   0615 18                 2560 	.db #0x18
   0616 1C                 2561 	.db #0x1C
   0617 1A                 2562 	.db #0x1A
   0618 18                 2563 	.db #0x18
   0619 1C                 2564 	.db #0x1C
   061A 1A                 2565 	.db #0x1A
   061B 18                 2566 	.db #0x18
   061C 0D                 2567 	.db #0x0D
   061D 17                 2568 	.db #0x17
   061E 07                 2569 	.db #0x07
   061F 0D                 2570 	.db #0x0D
   0620 17                 2571 	.db #0x17
   0621 07                 2572 	.db #0x07
   0622 0D                 2573 	.db #0x0D
   0623 0C                 2574 	.db #0x0C
   0624 0E                 2575 	.db #0x0E
   0625 0C                 2576 	.db #0x0C
   0626 06                 2577 	.db #0x06
   0627 16                 2578 	.db #0x16
   0628 0C                 2579 	.db #0x0C
   0629 06                 2580 	.db #0x06
   062A 16                 2581 	.db #0x16
   062B 0C                 2582 	.db #0x0C
   062C 07                 2583 	.db #0x07
   062D 0D                 2584 	.db #0x0D
   062E 17                 2585 	.db #0x17
   062F 07                 2586 	.db #0x07
   0630 0D                 2587 	.db #0x0D
   0631 17                 2588 	.db #0x17
   0632 02                 2589 	.db #0x02
   0633 1A                 2590 	.db #0x1A
   0634 1A                 2591 	.db #0x1A
   0635 03                 2592 	.db #0x03
   0636 16                 2593 	.db #0x16
   0637 0C                 2594 	.db #0x0C
   0638 06                 2595 	.db #0x06
   0639 16                 2596 	.db #0x16
   063A 0C                 2597 	.db #0x0C
   063B 06                 2598 	.db #0x06
   063C 17                 2599 	.db #0x17
   063D 07                 2600 	.db #0x07
   063E 0D                 2601 	.db #0x0D
   063F 17                 2602 	.db #0x17
   0640 07                 2603 	.db #0x07
   0641 10                 2604 	.db #0x10
   0642 1F                 2605 	.db #0x1F
   0643 1A                 2606 	.db #0x1A
   0644 1A                 2607 	.db #0x1A
   0645 1F                 2608 	.db #0x1F
   0646 11                 2609 	.db #0x11
   0647 06                 2610 	.db #0x06
   0648 16                 2611 	.db #0x16
   0649 0C                 2612 	.db #0x0C
   064A 06                 2613 	.db #0x06
   064B 16                 2614 	.db #0x16
   064C 0D                 2615 	.db #0x0D
   064D 17                 2616 	.db #0x17
   064E 07                 2617 	.db #0x07
   064F 0D                 2618 	.db #0x0D
   0650 0A                 2619 	.db #0x0A
   0651 1F                 2620 	.db #0x1F
   0652 1F                 2621 	.db #0x1F
   0653 1A                 2622 	.db #0x1A
   0654 1A                 2623 	.db #0x1A
   0655 1F                 2624 	.db #0x1F
   0656 1F                 2625 	.db #0x1F
   0657 0B                 2626 	.db #0x0B
   0658 0C                 2627 	.db #0x0C
   0659 06                 2628 	.db #0x06
   065A 16                 2629 	.db #0x16
   065B 0C                 2630 	.db #0x0C
   065C 07                 2631 	.db #0x07
   065D 0D                 2632 	.db #0x0D
   065E 17                 2633 	.db #0x17
   065F 02                 2634 	.db #0x02
   0660 1F                 2635 	.db #0x1F
   0661 1F                 2636 	.db #0x1F
   0662 1F                 2637 	.db #0x1F
   0663 1F                 2638 	.db #0x1F
   0664 1F                 2639 	.db #0x1F
   0665 1F                 2640 	.db #0x1F
   0666 1F                 2641 	.db #0x1F
   0667 1F                 2642 	.db #0x1F
   0668 03                 2643 	.db #0x03
   0669 16                 2644 	.db #0x16
   066A 0C                 2645 	.db #0x0C
   066B 06                 2646 	.db #0x06
   066C                    2647 _tri_inva3:
   066C 1A                 2648 	.db #0x1A
   066D 1C                 2649 	.db #0x1C
   066E 18                 2650 	.db #0x18
   066F 1A                 2651 	.db #0x1A
   0670 1C                 2652 	.db #0x1C
   0671 18                 2653 	.db #0x18
   0672 1A                 2654 	.db #0x1A
   0673 1E                 2655 	.db #0x1E
   0674 00                 2656 	.db #0x00
   0675 1C                 2657 	.db #0x1C
   0676 1C                 2658 	.db #0x1C
   0677 1D                 2659 	.db #0x1D
   0678 1C                 2660 	.db #0x1C
   0679 1C                 2661 	.db #0x1C
   067A 1D                 2662 	.db #0x1D
   067B 1C                 2663 	.db #0x1C
   067C 1A                 2664 	.db #0x1A
   067D 1C                 2665 	.db #0x1C
   067E 18                 2666 	.db #0x18
   067F 1A                 2667 	.db #0x1A
   0680 1C                 2668 	.db #0x1C
   0681 18                 2669 	.db #0x18
   0682 1A                 2670 	.db #0x1A
   0683 1F                 2671 	.db #0x1F
   0684 1C                 2672 	.db #0x1C
   0685 18                 2673 	.db #0x18
   0686 1F                 2674 	.db #0x1F
   0687 1C                 2675 	.db #0x1C
   0688 1D                 2676 	.db #0x1D
   0689 1D                 2677 	.db #0x1D
   068A 1C                 2678 	.db #0x1C
   068B 1D                 2679 	.db #0x1D
   068C 04                 2680 	.db #0x04
   068D 0E                 2681 	.db #0x0E
   068E 14                 2682 	.db #0x14
   068F 04                 2683 	.db #0x04
   0690 0E                 2684 	.db #0x0E
   0691 14                 2685 	.db #0x14
   0692 0A                 2686 	.db #0x0A
   0693 1E                 2687 	.db #0x1E
   0694 1C                 2688 	.db #0x1C
   0695 0D                 2689 	.db #0x0D
   0696 18                 2690 	.db #0x18
   0697 1C                 2691 	.db #0x1C
   0698 1C                 2692 	.db #0x1C
   0699 1C                 2693 	.db #0x1C
   069A 1C                 2694 	.db #0x1C
   069B 1C                 2695 	.db #0x1C
   069C 1C                 2696 	.db #0x1C
   069D 18                 2697 	.db #0x18
   069E 1A                 2698 	.db #0x1A
   069F 1C                 2699 	.db #0x1C
   06A0 18                 2700 	.db #0x18
   06A1 1A                 2701 	.db #0x1A
   06A2 1E                 2702 	.db #0x1E
   06A3 00                 2703 	.db #0x00
   06A4 1C                 2704 	.db #0x1C
   06A5 1D                 2705 	.db #0x1D
   06A6 1C                 2706 	.db #0x1C
   06A7 1C                 2707 	.db #0x1C
   06A8 1D                 2708 	.db #0x1D
   06A9 18                 2709 	.db #0x18
   06AA 0F                 2710 	.db #0x0F
   06AB 1C                 2711 	.db #0x1C
   06AC 1C                 2712 	.db #0x1C
   06AD 18                 2713 	.db #0x18
   06AE 1A                 2714 	.db #0x1A
   06AF 1C                 2715 	.db #0x1C
   06B0 18                 2716 	.db #0x18
   06B1 1A                 2717 	.db #0x1A
   06B2 1F                 2718 	.db #0x1F
   06B3 1C                 2719 	.db #0x1C
   06B4 1D                 2720 	.db #0x1D
   06B5 02                 2721 	.db #0x02
   06B6 1C                 2722 	.db #0x1C
   06B7 02                 2723 	.db #0x02
   06B8 1D                 2724 	.db #0x1D
   06B9 1F                 2725 	.db #0x1F
   06BA 18                 2726 	.db #0x18
   06BB 1C                 2727 	.db #0x1C
   06BC 1C                 2728 	.db #0x1C
   06BD 18                 2729 	.db #0x18
   06BE 1A                 2730 	.db #0x1A
   06BF 1C                 2731 	.db #0x1C
   06C0 18                 2732 	.db #0x18
   06C1 1A                 2733 	.db #0x1A
   06C2 1F                 2734 	.db #0x1F
   06C3 03                 2735 	.db #0x03
   06C4 1C                 2736 	.db #0x1C
   06C5 1D                 2737 	.db #0x1D
   06C6 1C                 2738 	.db #0x1C
   06C7 1C                 2739 	.db #0x1C
   06C8 1C                 2740 	.db #0x1C
   06C9 1C                 2741 	.db #0x1C
   06CA 1D                 2742 	.db #0x1D
   06CB 1C                 2743 	.db #0x1C
   06CC 0E                 2744 	.db #0x0E
   06CD 14                 2745 	.db #0x14
   06CE 04                 2746 	.db #0x04
   06CF 0E                 2747 	.db #0x0E
   06D0 14                 2748 	.db #0x14
   06D1 0A                 2749 	.db #0x0A
   06D2 1E                 2750 	.db #0x1E
   06D3 00                 2751 	.db #0x00
   06D4 0B                 2752 	.db #0x0B
   06D5 0A                 2753 	.db #0x0A
   06D6 0B                 2754 	.db #0x0B
   06D7 0A                 2755 	.db #0x0A
   06D8 0B                 2756 	.db #0x0B
   06D9 0A                 2757 	.db #0x0A
   06DA 1D                 2758 	.db #0x1D
   06DB 1C                 2759 	.db #0x1C
   06DC 14                 2760 	.db #0x14
   06DD 04                 2761 	.db #0x04
   06DE 0E                 2762 	.db #0x0E
   06DF 14                 2763 	.db #0x14
   06E0 0A                 2764 	.db #0x0A
   06E1 1F                 2765 	.db #0x1F
   06E2 1E                 2766 	.db #0x1E
   06E3 1C                 2767 	.db #0x1C
   06E4 1F                 2768 	.db #0x1F
   06E5 1E                 2769 	.db #0x1E
   06E6 1F                 2770 	.db #0x1F
   06E7 1E                 2771 	.db #0x1E
   06E8 1F                 2772 	.db #0x1F
   06E9 1E                 2773 	.db #0x1E
   06EA 1D                 2774 	.db #0x1D
   06EB 1C                 2775 	.db #0x1C
   06EC 1A                 2776 	.db #0x1A
   06ED 1C                 2777 	.db #0x1C
   06EE 18                 2778 	.db #0x18
   06EF 1A                 2779 	.db #0x1A
   06F0 1F                 2780 	.db #0x1F
   06F1 12                 2781 	.db #0x12
   06F2 18                 2782 	.db #0x18
   06F3 18                 2783 	.db #0x18
   06F4 19                 2784 	.db #0x19
   06F5 19                 2785 	.db #0x19
   06F6 13                 2786 	.db #0x13
   06F7 1E                 2787 	.db #0x1E
   06F8 1F                 2788 	.db #0x1F
   06F9 1E                 2789 	.db #0x1E
   06FA 1D                 2790 	.db #0x1D
   06FB 1C                 2791 	.db #0x1C
   06FC 1B                 2792 	.db #0x1B
   06FD 1D                 2793 	.db #0x1D
   06FE 19                 2794 	.db #0x19
   06FF 1B                 2795 	.db #0x1B
   0700 1E                 2796 	.db #0x1E
   0701 18                 2797 	.db #0x18
   0702 18                 2798 	.db #0x18
   0703 18                 2799 	.db #0x18
   0704 19                 2800 	.db #0x19
   0705 19                 2801 	.db #0x19
   0706 19                 2802 	.db #0x19
   0707 13                 2803 	.db #0x13
   0708 1F                 2804 	.db #0x1F
   0709 00                 2805 	.db #0x00
   070A 1C                 2806 	.db #0x1C
   070B 1C                 2807 	.db #0x1C
   070C 1B                 2808 	.db #0x1B
   070D 1D                 2809 	.db #0x1D
   070E 19                 2810 	.db #0x19
   070F 1B                 2811 	.db #0x1B
   0710 1F                 2812 	.db #0x1F
   0711 18                 2813 	.db #0x18
   0712 18                 2814 	.db #0x18
   0713 0C                 2815 	.db #0x0C
   0714 1C                 2816 	.db #0x1C
   0715 1C                 2817 	.db #0x1C
   0716 1C                 2818 	.db #0x1C
   0717 1C                 2819 	.db #0x1C
   0718 1C                 2820 	.db #0x1C
   0719 1C                 2821 	.db #0x1C
   071A 1C                 2822 	.db #0x1C
   071B 1C                 2823 	.db #0x1C
   071C 17                 2824 	.db #0x17
   071D 07                 2825 	.db #0x07
   071E 0D                 2826 	.db #0x0D
   071F 17                 2827 	.db #0x17
   0720 09                 2828 	.db #0x09
   0721 1E                 2829 	.db #0x1E
   0722 1F                 2830 	.db #0x1F
   0723 1D                 2831 	.db #0x1D
   0724 1D                 2832 	.db #0x1D
   0725 1D                 2833 	.db #0x1D
   0726 1C                 2834 	.db #0x1C
   0727 1D                 2835 	.db #0x1D
   0728 1C                 2836 	.db #0x1C
   0729 1C                 2837 	.db #0x1C
   072A 1C                 2838 	.db #0x1C
   072B 1C                 2839 	.db #0x1C
   072C                    2840 _tri_inva4:
   072C 1E                 2841 	.db #0x1E
   072D 00                 2842 	.db #0x00
   072E 05                 2843 	.db #0x05
   072F 0A                 2844 	.db #0x0A
   0730 1E                 2845 	.db #0x1E
   0731 00                 2846 	.db #0x00
   0732 06                 2847 	.db #0x06
   0733 16                 2848 	.db #0x16
   0734 0F                 2849 	.db #0x0F
   0735 01                 2850 	.db #0x01
   0736 1F                 2851 	.db #0x1F
   0737 11                 2852 	.db #0x11
   0738 0C                 2853 	.db #0x0C
   0739 01                 2854 	.db #0x01
   073A 1F                 2855 	.db #0x1F
   073B 1F                 2856 	.db #0x1F
   073C 12                 2857 	.db #0x12
   073D 0F                 2858 	.db #0x0F
   073E 02                 2859 	.db #0x02
   073F 1E                 2860 	.db #0x1E
   0740 12                 2861 	.db #0x12
   0741 0F                 2862 	.db #0x0F
   0742 05                 2863 	.db #0x05
   0743 15                 2864 	.db #0x15
   0744 0C                 2865 	.db #0x0C
   0745 06                 2866 	.db #0x06
   0746 09                 2867 	.db #0x09
   0747 1F                 2868 	.db #0x1F
   0748 03                 2869 	.db #0x03
   0749 06                 2870 	.db #0x06
   074A 09                 2871 	.db #0x09
   074B 1F                 2872 	.db #0x1F
   074C 15                 2873 	.db #0x15
   074D 10                 2874 	.db #0x10
   074E 1E                 2875 	.db #0x1E
   074F 08                 2876 	.db #0x08
   0750 15                 2877 	.db #0x15
   0751 10                 2878 	.db #0x10
   0752 1E                 2879 	.db #0x1E
   0753 1F                 2880 	.db #0x1F
   0754 1F                 2881 	.db #0x1F
   0755 0B                 2882 	.db #0x0B
   0756 16                 2883 	.db #0x16
   0757 13                 2884 	.db #0x13
   0758 1F                 2885 	.db #0x1F
   0759 0B                 2886 	.db #0x0B
   075A 16                 2887 	.db #0x16
   075B 13                 2888 	.db #0x13
   075C 05                 2889 	.db #0x05
   075D 1E                 2890 	.db #0x1E
   075E 00                 2891 	.db #0x00
   075F 05                 2892 	.db #0x05
   0760 0A                 2893 	.db #0x0A
   0761 1E                 2894 	.db #0x1E
   0762 08                 2895 	.db #0x08
   0763 15                 2896 	.db #0x15
   0764 13                 2897 	.db #0x13
   0765 1F                 2898 	.db #0x1F
   0766 11                 2899 	.db #0x11
   0767 0D                 2900 	.db #0x0D
   0768 01                 2901 	.db #0x01
   0769 1F                 2902 	.db #0x1F
   076A 0C                 2903 	.db #0x0C
   076B 0D                 2904 	.db #0x0D
   076C 02                 2905 	.db #0x02
   076D 1E                 2906 	.db #0x1E
   076E 0E                 2907 	.db #0x0E
   076F 0F                 2908 	.db #0x0F
   0770 1E                 2909 	.db #0x1E
   0771 00                 2910 	.db #0x00
   0772 05                 2911 	.db #0x05
   0773 15                 2912 	.db #0x15
   0774 0C                 2913 	.db #0x0C
   0775 01                 2914 	.db #0x01
   0776 1F                 2915 	.db #0x1F
   0777 07                 2916 	.db #0x07
   0778 07                 2917 	.db #0x07
   0779 1F                 2918 	.db #0x1F
   077A 06                 2919 	.db #0x06
   077B 07                 2920 	.db #0x07
   077C 1E                 2921 	.db #0x1E
   077D 1E                 2922 	.db #0x1E
   077E 15                 2923 	.db #0x15
   077F 15                 2924 	.db #0x15
   0780 1E                 2925 	.db #0x1E
   0781 0F                 2926 	.db #0x0F
   0782 02                 2927 	.db #0x02
   0783 1E                 2928 	.db #0x1E
   0784 07                 2929 	.db #0x07
   0785 06                 2930 	.db #0x06
   0786 1F                 2931 	.db #0x1F
   0787 17                 2932 	.db #0x17
   0788 17                 2933 	.db #0x17
   0789 1E                 2934 	.db #0x1E
   078A 17                 2935 	.db #0x17
   078B 16                 2936 	.db #0x16
   078C 1F                 2937 	.db #0x1F
   078D 1F                 2938 	.db #0x1F
   078E 04                 2939 	.db #0x04
   078F 05                 2940 	.db #0x05
   0790 1F                 2941 	.db #0x1F
   0791 14                 2942 	.db #0x14
   0792 09                 2943 	.db #0x09
   0793 11                 2944 	.db #0x11
   0794 17                 2945 	.db #0x17
   0795 0A                 2946 	.db #0x0A
   0796 1E                 2947 	.db #0x1E
   0797 0D                 2948 	.db #0x0D
   0798 0D                 2949 	.db #0x0D
   0799 1E                 2950 	.db #0x1E
   079A 0D                 2951 	.db #0x0D
   079B 0C                 2952 	.db #0x0C
   079C 09                 2953 	.db #0x09
   079D 1F                 2954 	.db #0x1F
   079E 0E                 2955 	.db #0x0E
   079F 0F                 2956 	.db #0x0F
   07A0 1F                 2957 	.db #0x1F
   07A1 04                 2958 	.db #0x04
   07A2 04                 2959 	.db #0x04
   07A3 1F                 2960 	.db #0x1F
   07A4 1F                 2961 	.db #0x1F
   07A5 1E                 2962 	.db #0x1E
   07A6 08                 2963 	.db #0x08
   07A7 06                 2964 	.db #0x06
   07A8 07                 2965 	.db #0x07
   07A9 1E                 2966 	.db #0x1E
   07AA 07                 2967 	.db #0x07
   07AB 06                 2968 	.db #0x06
   07AC 04                 2969 	.db #0x04
   07AD 1F                 2970 	.db #0x1F
   07AE 11                 2971 	.db #0x11
   07AF 14                 2972 	.db #0x14
   07B0 1F                 2973 	.db #0x1F
   07B1 03                 2974 	.db #0x03
   07B2 0E                 2975 	.db #0x0E
   07B3 14                 2976 	.db #0x14
   07B4 07                 2977 	.db #0x07
   07B5 0D                 2978 	.db #0x0D
   07B6 17                 2979 	.db #0x17
   07B7 0A                 2980 	.db #0x0A
   07B8 1E                 2981 	.db #0x1E
   07B9 12                 2982 	.db #0x12
   07BA 17                 2983 	.db #0x17
   07BB 0A                 2984 	.db #0x0A
   07BC 0E                 2985 	.db #0x0E
   07BD 1F                 2986 	.db #0x1F
   07BE 1F                 2987 	.db #0x1F
   07BF 04                 2988 	.db #0x04
   07C0 01                 2989 	.db #0x01
   07C1 1F                 2990 	.db #0x1F
   07C2 11                 2991 	.db #0x11
   07C3 17                 2992 	.db #0x17
   07C4 07                 2993 	.db #0x07
   07C5 0D                 2994 	.db #0x0D
   07C6 10                 2995 	.db #0x10
   07C7 1E                 2996 	.db #0x1E
   07C8 00                 2997 	.db #0x00
   07C9 0D                 2998 	.db #0x0D
   07CA 10                 2999 	.db #0x10
   07CB 1E                 3000 	.db #0x1E
   07CC 14                 3001 	.db #0x14
   07CD 09                 3002 	.db #0x09
   07CE 1F                 3003 	.db #0x1F
   07CF 03                 3004 	.db #0x03
   07D0 0E                 3005 	.db #0x0E
   07D1 13                 3006 	.db #0x13
   07D2 1F                 3007 	.db #0x1F
   07D3 1F                 3008 	.db #0x1F
   07D4 1F                 3009 	.db #0x1F
   07D5 1E                 3010 	.db #0x1E
   07D6 1E                 3011 	.db #0x1E
   07D7 08                 3012 	.db #0x08
   07D8 07                 3013 	.db #0x07
   07D9 02                 3014 	.db #0x02
   07DA 1E                 3015 	.db #0x1E
   07DB 1E                 3016 	.db #0x1E
   07DC 0B                 3017 	.db #0x0B
   07DD 04                 3018 	.db #0x04
   07DE 01                 3019 	.db #0x01
   07DF 1F                 3020 	.db #0x1F
   07E0 11                 3021 	.db #0x11
   07E1 14                 3022 	.db #0x14
   07E2 04                 3023 	.db #0x04
   07E3 0E                 3024 	.db #0x0E
   07E4 17                 3025 	.db #0x17
   07E5 07                 3026 	.db #0x07
   07E6 0D                 3027 	.db #0x0D
   07E7 17                 3028 	.db #0x17
   07E8 0A                 3029 	.db #0x0A
   07E9 1E                 3030 	.db #0x1E
   07EA 1E                 3031 	.db #0x1E
   07EB 1E                 3032 	.db #0x1E
                           3033 ;demo.c:243: void my_isr(void) interrupt
                           3034 ;	---------------------------------
                           3035 ; Function my_isr
                           3036 ; ---------------------------------
   07EC                    3037 _my_isr_start::
   07EC                    3038 _my_isr:
   07EC F5                 3039 	push	af
   07ED C5                 3040 	push	bc
   07EE D5                 3041 	push	de
   07EF E5                 3042 	push	hl
   07F0 FD E5              3043 	push	iy
                           3044 ;demo.c:245: DI;
   07F2 F3                 3045 		di 
                           3046 ;demo.c:247: READ_VDP_STATUS;
   07F3 DB 99              3047 		in a,(#0x99) 
                           3048 ;demo.c:249: PLY_Play();
   07F5 CDr00s00           3049 	call	_PLY_Play
                           3050 ;demo.c:250: PLY_SendRegisters();
   07F8 CDr00s00           3051 	call	_PLY_SendRegisters
                           3052 ;demo.c:252: vbicount+=1;
   07FB FD 21r26s41        3053 	ld	iy,#_vbicount
   07FF FD 34 00           3054 	inc	0 (iy)
   0802 20 07              3055 	jr	NZ,00103$
   0804 FD 21r26s41        3056 	ld	iy,#_vbicount
   0808 FD 34 01           3057 	inc	1 (iy)
   080B                    3058 00103$:
                           3059 ;demo.c:253: tick++;
   080B FD 21r28s41        3060 	ld	iy,#_tick
   080F FD 34 00           3061 	inc	0 (iy)
   0812 20 07              3062 	jr	NZ,00104$
   0814 FD 21r28s41        3063 	ld	iy,#_tick
   0818 FD 34 01           3064 	inc	1 (iy)
   081B                    3065 00104$:
                           3066 ;demo.c:255: EI;
   081B FB                 3067 		ei 
   081C FD E1              3068 	pop	iy
   081E E1                 3069 	pop	hl
   081F D1                 3070 	pop	de
   0820 C1                 3071 	pop	bc
   0821 F1                 3072 	pop	af
   0822 ED 4D              3073 	reti
   0824                    3074 _my_isr_end::
                           3075 ;demo.c:263: void scratch_clear() {
                           3076 ;	---------------------------------
                           3077 ; Function scratch_clear
                           3078 ; ---------------------------------
   0824                    3079 _scratch_clear_start::
   0824                    3080 _scratch_clear:
                           3081 ;demo.c:264: memset((uint8_t *) &scratch, 0, 128);
   0824 21 80 00           3082 	ld	hl,#0x0080
   0827 E5                 3083 	push	hl
   0828 3E 00              3084 	ld	a,#0x00
   082A F5                 3085 	push	af
   082B 33                 3086 	inc	sp
   082C 21rC6s3F           3087 	ld	hl,#_scratch
   082F E5                 3088 	push	hl
   0830 CDr00s00           3089 	call	_memset
   0833 F1                 3090 	pop	af
   0834 F1                 3091 	pop	af
   0835 33                 3092 	inc	sp
   0836 C9                 3093 	ret
   0837                    3094 _scratch_clear_end::
                           3095 ;demo.c:267: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3096 ;	---------------------------------
                           3097 ; Function pal_load
                           3098 ; ---------------------------------
   0837                    3099 _pal_load_start::
   0837                    3100 _pal_load:
   0837 DD E5              3101 	push	ix
   0839 DD 21 00 00        3102 	ld	ix,#0
   083D DD 39              3103 	add	ix,sp
   083F 21 D2 FF           3104 	ld	hl,#-46
   0842 39                 3105 	add	hl,sp
   0843 F9                 3106 	ld	sp,hl
                           3107 ;demo.c:270: if(debugprint == 1) {
   0844 DD 7E 07           3108 	ld	a,7 (ix)
   0847 D6 01              3109 	sub	a,#0x01
   0849 20 06              3110 	jr	NZ,00115$
   084B DD 7E 08           3111 	ld	a,8 (ix)
   084E B7                 3112 	or	a,a
   084F 28 02              3113 	jr	Z,00116$
   0851                    3114 00115$:
   0851 18 1B              3115 	jr	00102$
   0853                    3116 00116$:
                           3117 ;demo.c:271: puts("loading palfile: ");
   0853 21r01s09           3118 	ld	hl,#__str_0
   0856 E5                 3119 	push	hl
   0857 CDr00s00           3120 	call	_puts
   085A F1                 3121 	pop	af
                           3122 ;demo.c:272: puts(file_name);
   085B DD 6E 04           3123 	ld	l,4 (ix)
   085E DD 66 05           3124 	ld	h,5 (ix)
   0861 E5                 3125 	push	hl
   0862 CDr00s00           3126 	call	_puts
   0865 F1                 3127 	pop	af
                           3128 ;demo.c:273: puts("\r\n");
   0866 21r13s09           3129 	ld	hl,#__str_1
   0869 E5                 3130 	push	hl
   086A CDr00s00           3131 	call	_puts
   086D F1                 3132 	pop	af
   086E                    3133 00102$:
                           3134 ;demo.c:276: memset((uint8_t *) &f, 0, sizeof(fcb));
   086E 21 00 00           3135 	ld	hl,#0x0000
   0871 39                 3136 	add	hl,sp
   0872 4D                 3137 	ld	c,l
   0873 44                 3138 	ld	b,h
   0874 21 2E 00           3139 	ld	hl,#0x002E
   0877 E5                 3140 	push	hl
   0878 3E 00              3141 	ld	a,#0x00
   087A F5                 3142 	push	af
   087B 33                 3143 	inc	sp
   087C C5                 3144 	push	bc
   087D CDr00s00           3145 	call	_memset
   0880 F1                 3146 	pop	af
   0881 F1                 3147 	pop	af
   0882 33                 3148 	inc	sp
                           3149 ;demo.c:277: scratch_clear();
   0883 CDr24s08           3150 	call	_scratch_clear
                           3151 ;demo.c:279: f.record_size = ss;
   0886 21 00 00           3152 	ld	hl,#0x0000
   0889 39                 3153 	add	hl,sp
   088A 4D                 3154 	ld	c,l
   088B 44                 3155 	ld	b,h
   088C 21 0F 00           3156 	ld	hl,#0x000F
   088F 09                 3157 	add	hl,bc
   0890 EB                 3158 	ex	de,hl
   0891 DD 7E 06           3159 	ld	a,6 (ix)
   0894 12                 3160 	ld	(de),a
                           3161 ;demo.c:280: f.drive = 0;
   0895 3E 00              3162 	ld	a,#0x00
   0897 02                 3163 	ld	(bc),a
                           3164 ;demo.c:282: memcpy(f.name, file_name, 11);
   0898 DD 5E 04           3165 	ld	e,4 (ix)
   089B DD 56 05           3166 	ld	d,5 (ix)
   089E 03                 3167 	inc	bc
   089F 21 0B 00           3168 	ld	hl,#0x000B
   08A2 E5                 3169 	push	hl
   08A3 D5                 3170 	push	de
   08A4 C5                 3171 	push	bc
   08A5 CDr00s00           3172 	call	_memcpy
   08A8 F1                 3173 	pop	af
   08A9 F1                 3174 	pop	af
   08AA F1                 3175 	pop	af
                           3176 ;demo.c:284: if (open(&f) != 0) return 0;
   08AB 21 00 00           3177 	ld	hl,#0x0000
   08AE 39                 3178 	add	hl,sp
   08AF E5                 3179 	push	hl
   08B0 CDr00s00           3180 	call	_open
   08B3 F1                 3181 	pop	af
   08B4 AF                 3182 	xor	a,a
   08B5 B5                 3183 	or	a,l
   08B6 28 04              3184 	jr	Z,00104$
   08B8 2E 00              3185 	ld	l,#0x00
   08BA 18 40              3186 	jr	00109$
   08BC                    3187 00104$:
                           3188 ;demo.c:285: if (block_set_data_ptr(scratch) != 0) return 0;
   08BC 21rC6s3F           3189 	ld	hl,#_scratch
   08BF E5                 3190 	push	hl
   08C0 CDr00s00           3191 	call	_block_set_data_ptr
   08C3 F1                 3192 	pop	af
   08C4 AF                 3193 	xor	a,a
   08C5 B5                 3194 	or	a,l
   08C6 28 04              3195 	jr	Z,00106$
   08C8 2E 00              3196 	ld	l,#0x00
   08CA 18 30              3197 	jr	00109$
   08CC                    3198 00106$:
                           3199 ;demo.c:286: if (block_read(&f) != 0) return 0;
   08CC 21 00 00           3200 	ld	hl,#0x0000
   08CF 39                 3201 	add	hl,sp
   08D0 E5                 3202 	push	hl
   08D1 CDr00s00           3203 	call	_block_read
   08D4 F1                 3204 	pop	af
   08D5 AF                 3205 	xor	a,a
   08D6 B5                 3206 	or	a,l
   08D7 28 04              3207 	jr	Z,00108$
   08D9 2E 00              3208 	ld	l,#0x00
   08DB 18 1F              3209 	jr	00109$
   08DD                    3210 00108$:
                           3211 ;demo.c:288: memcpy(cur_palette, scratch+7, ss);
   08DD DD 4E 06           3212 	ld	c,6 (ix)
   08E0 06 00              3213 	ld	b,#0x00
   08E2 11rCDs3F           3214 	ld	de,#_scratch + 7
   08E5 C5                 3215 	push	bc
   08E6 D5                 3216 	push	de
   08E7 21r46s40           3217 	ld	hl,#_cur_palette
   08EA E5                 3218 	push	hl
   08EB CDr00s00           3219 	call	_memcpy
   08EE F1                 3220 	pop	af
   08EF F1                 3221 	pop	af
   08F0 F1                 3222 	pop	af
                           3223 ;demo.c:290: close(&f);
   08F1 21 00 00           3224 	ld	hl,#0x0000
   08F4 39                 3225 	add	hl,sp
   08F5 E5                 3226 	push	hl
   08F6 CDr00s00           3227 	call	_close
   08F9 F1                 3228 	pop	af
                           3229 ;demo.c:291: return 1;
   08FA 2E 01              3230 	ld	l,#0x01
   08FC                    3231 00109$:
   08FC DD F9              3232 	ld	sp,ix
   08FE DD E1              3233 	pop	ix
   0900 C9                 3234 	ret
   0901                    3235 _pal_load_end::
   0901                    3236 __str_0:
   0901 6C 6F 61 64 69 6E  3237 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0912 00                 3238 	.db 0x00
   0913                    3239 __str_1:
   0913 0D                 3240 	.db 0x0D
   0914 0A                 3241 	.db 0x0A
   0915 00                 3242 	.db 0x00
                           3243 ;demo.c:295: void pause() {
                           3244 ;	---------------------------------
                           3245 ; Function pause
                           3246 ; ---------------------------------
   0916                    3247 _pause_start::
   0916                    3248 _pause:
                           3249 ;demo.c:296: uint8_t i,j,k = 0;
                           3250 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0916 01 00 00           3251 	ld	bc,#0x0000
   0919                    3252 00104$:
   0919 78                 3253 	ld	a,b
   091A D6 FF              3254 	sub	a,#0xFF
   091C D0                 3255 	ret	NC
                           3256 ;demo.c:298: for (j = 0; j < 255; j++) {
   091D 59                 3257 	ld	e,c
   091E 16 FF              3258 	ld	d,#0xFF
   0920                    3259 00103$:
                           3260 ;demo.c:299: k++;
   0920 1C                 3261 	inc	e
   0921 15                 3262 	dec	d
                           3263 ;demo.c:298: for (j = 0; j < 255; j++) {
   0922 AF                 3264 	xor	a,a
   0923 B2                 3265 	or	a,d
   0924 20 FA              3266 	jr	NZ,00103$
                           3267 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0926 4B                 3268 	ld	c,e
   0927 04                 3269 	inc	b
   0928 18 EF              3270 	jr	00104$
   092A                    3271 _pause_end::
                           3272 ;demo.c:305: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3273 ;	---------------------------------
                           3274 ; Function raw_load
                           3275 ; ---------------------------------
   092A                    3276 _raw_load_start::
   092A                    3277 _raw_load:
   092A DD E5              3278 	push	ix
   092C DD 21 00 00        3279 	ld	ix,#0
   0930 DD 39              3280 	add	ix,sp
   0932 21 D2 FF           3281 	ld	hl,#-46
   0935 39                 3282 	add	hl,sp
   0936 F9                 3283 	ld	sp,hl
                           3284 ;demo.c:310: if(debugprint == 1) {
   0937 DD 7E 0A           3285 	ld	a,10 (ix)
   093A D6 01              3286 	sub	a,#0x01
   093C 20 06              3287 	jr	NZ,00120$
   093E DD 7E 0B           3288 	ld	a,11 (ix)
   0941 B7                 3289 	or	a,a
   0942 28 02              3290 	jr	Z,00121$
   0944                    3291 00120$:
   0944 18 1B              3292 	jr	00102$
   0946                    3293 00121$:
                           3294 ;demo.c:311: puts("loading rawfile: ");
   0946 21r18s0A           3295 	ld	hl,#__str_2
   0949 E5                 3296 	push	hl
   094A CDr00s00           3297 	call	_puts
   094D F1                 3298 	pop	af
                           3299 ;demo.c:312: puts(file_name);
   094E DD 6E 04           3300 	ld	l,4 (ix)
   0951 DD 66 05           3301 	ld	h,5 (ix)
   0954 E5                 3302 	push	hl
   0955 CDr00s00           3303 	call	_puts
   0958 F1                 3304 	pop	af
                           3305 ;demo.c:313: puts("\r\n");
   0959 21r2As0A           3306 	ld	hl,#__str_3
   095C E5                 3307 	push	hl
   095D CDr00s00           3308 	call	_puts
   0960 F1                 3309 	pop	af
   0961                    3310 00102$:
                           3311 ;demo.c:316: memset((uint8_t *) &f, 0, sizeof(fcb));
   0961 21 00 00           3312 	ld	hl,#0x0000
   0964 39                 3313 	add	hl,sp
   0965 4D                 3314 	ld	c,l
   0966 44                 3315 	ld	b,h
   0967 21 2E 00           3316 	ld	hl,#0x002E
   096A E5                 3317 	push	hl
   096B 3E 00              3318 	ld	a,#0x00
   096D F5                 3319 	push	af
   096E 33                 3320 	inc	sp
   096F C5                 3321 	push	bc
   0970 CDr00s00           3322 	call	_memset
   0973 F1                 3323 	pop	af
   0974 F1                 3324 	pop	af
   0975 33                 3325 	inc	sp
                           3326 ;demo.c:317: scratch_clear();
   0976 CDr24s08           3327 	call	_scratch_clear
                           3328 ;demo.c:319: f.record_size = 128;
   0979 21 00 00           3329 	ld	hl,#0x0000
   097C 39                 3330 	add	hl,sp
   097D 4D                 3331 	ld	c,l
   097E 44                 3332 	ld	b,h
   097F 21 0F 00           3333 	ld	hl,#0x000F
   0982 09                 3334 	add	hl,bc
   0983 EB                 3335 	ex	de,hl
   0984 3E 80              3336 	ld	a,#0x80
   0986 12                 3337 	ld	(de),a
                           3338 ;demo.c:320: f.drive = 0;
   0987 3E 00              3339 	ld	a,#0x00
   0989 02                 3340 	ld	(bc),a
                           3341 ;demo.c:322: memcpy(f.name, file_name, 11);
   098A DD 5E 04           3342 	ld	e,4 (ix)
   098D DD 56 05           3343 	ld	d,5 (ix)
   0990 03                 3344 	inc	bc
   0991 21 0B 00           3345 	ld	hl,#0x000B
   0994 E5                 3346 	push	hl
   0995 D5                 3347 	push	de
   0996 C5                 3348 	push	bc
   0997 CDr00s00           3349 	call	_memcpy
   099A F1                 3350 	pop	af
   099B F1                 3351 	pop	af
   099C F1                 3352 	pop	af
                           3353 ;demo.c:324: if (open(&f) != 0) return 0;
   099D 21 00 00           3354 	ld	hl,#0x0000
   09A0 39                 3355 	add	hl,sp
   09A1 E5                 3356 	push	hl
   09A2 CDr00s00           3357 	call	_open
   09A5 F1                 3358 	pop	af
   09A6 AF                 3359 	xor	a,a
   09A7 B5                 3360 	or	a,l
   09A8 28 05              3361 	jr	Z,00119$
   09AA 2E 00              3362 	ld	l,#0x00
   09AC C3r13s0A           3363 	jp	00112$
                           3364 ;demo.c:326: while(total < size) {
   09AF                    3365 00119$:
   09AF 01 00 00           3366 	ld	bc,#0x0000
   09B2                    3367 00109$:
   09B2 79                 3368 	ld	a,c
   09B3 DD 96 06           3369 	sub	a,6 (ix)
   09B6 78                 3370 	ld	a,b
   09B7 DD 9E 07           3371 	sbc	a,7 (ix)
   09BA F2r08s0A           3372 	jp	P,00111$
                           3373 ;demo.c:327: if (block_set_data_ptr(scratch) != 0) return 0;
   09BD C5                 3374 	push	bc
   09BE 21rC6s3F           3375 	ld	hl,#_scratch
   09C1 E5                 3376 	push	hl
   09C2 CDr00s00           3377 	call	_block_set_data_ptr
   09C5 F1                 3378 	pop	af
   09C6 5D                 3379 	ld	e,l
   09C7 C1                 3380 	pop	bc
   09C8 AF                 3381 	xor	a,a
   09C9 B3                 3382 	or	a,e
   09CA 28 04              3383 	jr	Z,00106$
   09CC 2E 00              3384 	ld	l,#0x00
   09CE 18 43              3385 	jr	00112$
   09D0                    3386 00106$:
                           3387 ;demo.c:328: if (block_read(&f) != 0) return 0;
   09D0 21 00 00           3388 	ld	hl,#0x0000
   09D3 39                 3389 	add	hl,sp
   09D4 C5                 3390 	push	bc
   09D5 E5                 3391 	push	hl
   09D6 CDr00s00           3392 	call	_block_read
   09D9 F1                 3393 	pop	af
   09DA 5D                 3394 	ld	e,l
   09DB C1                 3395 	pop	bc
   09DC AF                 3396 	xor	a,a
   09DD B3                 3397 	or	a,e
   09DE 28 04              3398 	jr	Z,00108$
   09E0 2E 00              3399 	ld	l,#0x00
   09E2 18 2F              3400 	jr	00112$
   09E4                    3401 00108$:
                           3402 ;demo.c:330: memcpy(buffer+total,scratch,incr);
   09E4 DD 7E 08           3403 	ld	a,8 (ix)
   09E7 81                 3404 	add	a,c
   09E8 5F                 3405 	ld	e,a
   09E9 DD 7E 09           3406 	ld	a,9 (ix)
   09EC 88                 3407 	adc	a,b
   09ED 57                 3408 	ld	d,a
   09EE C5                 3409 	push	bc
   09EF 21 80 00           3410 	ld	hl,#0x0080
   09F2 E5                 3411 	push	hl
   09F3 21rC6s3F           3412 	ld	hl,#_scratch
   09F6 E5                 3413 	push	hl
   09F7 D5                 3414 	push	de
   09F8 CDr00s00           3415 	call	_memcpy
   09FB F1                 3416 	pop	af
   09FC F1                 3417 	pop	af
   09FD F1                 3418 	pop	af
   09FE C1                 3419 	pop	bc
                           3420 ;demo.c:332: total+=incr;
   09FF 21 80 00           3421 	ld	hl,#0x0080
   0A02 09                 3422 	add	hl,bc
   0A03 4D                 3423 	ld	c,l
   0A04 44                 3424 	ld	b,h
   0A05 C3rB2s09           3425 	jp	00109$
   0A08                    3426 00111$:
                           3427 ;demo.c:335: close(&f);
   0A08 21 00 00           3428 	ld	hl,#0x0000
   0A0B 39                 3429 	add	hl,sp
   0A0C E5                 3430 	push	hl
   0A0D CDr00s00           3431 	call	_close
   0A10 F1                 3432 	pop	af
                           3433 ;demo.c:337: return 1;
   0A11 2E 01              3434 	ld	l,#0x01
   0A13                    3435 00112$:
   0A13 DD F9              3436 	ld	sp,ix
   0A15 DD E1              3437 	pop	ix
   0A17 C9                 3438 	ret
   0A18                    3439 _raw_load_end::
   0A18                    3440 __str_2:
   0A18 6C 6F 61 64 69 6E  3441 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0A29 00                 3442 	.db 0x00
   0A2A                    3443 __str_3:
   0A2A 0D                 3444 	.db 0x0D
   0A2B 0A                 3445 	.db 0x0A
   0A2C 00                 3446 	.db 0x00
                           3447 ;demo.c:340: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3448 ;	---------------------------------
                           3449 ; Function pck_load
                           3450 ; ---------------------------------
   0A2D                    3451 _pck_load_start::
   0A2D                    3452 _pck_load:
   0A2D DD E5              3453 	push	ix
   0A2F DD 21 00 00        3454 	ld	ix,#0
   0A33 DD 39              3455 	add	ix,sp
                           3456 ;demo.c:341: if(debugprint == 1) {
   0A35 DD 7E 0C           3457 	ld	a,12 (ix)
   0A38 D6 01              3458 	sub	a,#0x01
   0A3A 20 06              3459 	jr	NZ,00106$
   0A3C DD 7E 0D           3460 	ld	a,13 (ix)
   0A3F B7                 3461 	or	a,a
   0A40 28 02              3462 	jr	Z,00107$
   0A42                    3463 00106$:
   0A42 18 1B              3464 	jr	00102$
   0A44                    3465 00107$:
                           3466 ;demo.c:342: puts("loading pckfile: ");
   0A44 21rA6s0A           3467 	ld	hl,#__str_4
   0A47 E5                 3468 	push	hl
   0A48 CDr00s00           3469 	call	_puts
   0A4B F1                 3470 	pop	af
                           3471 ;demo.c:343: puts(file_name);
   0A4C DD 6E 04           3472 	ld	l,4 (ix)
   0A4F DD 66 05           3473 	ld	h,5 (ix)
   0A52 E5                 3474 	push	hl
   0A53 CDr00s00           3475 	call	_puts
   0A56 F1                 3476 	pop	af
                           3477 ;demo.c:344: puts("\r\n");
   0A57 21rB8s0A           3478 	ld	hl,#__str_5
   0A5A E5                 3479 	push	hl
   0A5B CDr00s00           3480 	call	_puts
   0A5E F1                 3481 	pop	af
   0A5F                    3482 00102$:
                           3483 ;demo.c:346: memset((uint8_t *) &packbuffer, 0, size);
   0A5F DD 4E 06           3484 	ld	c,6 (ix)
   0A62 DD 46 07           3485 	ld	b,7 (ix)
   0A65 C5                 3486 	push	bc
   0A66 C5                 3487 	push	bc
   0A67 3E 00              3488 	ld	a,#0x00
   0A69 F5                 3489 	push	af
   0A6A 33                 3490 	inc	sp
   0A6B 21rC8s01           3491 	ld	hl,#_packbuffer
   0A6E E5                 3492 	push	hl
   0A6F CDr00s00           3493 	call	_memset
   0A72 F1                 3494 	pop	af
   0A73 F1                 3495 	pop	af
   0A74 33                 3496 	inc	sp
   0A75 C1                 3497 	pop	bc
                           3498 ;demo.c:347: raw_load(file_name, size, packbuffer,0);
   0A76 21 00 00           3499 	ld	hl,#0x0000
   0A79 E5                 3500 	push	hl
   0A7A 21rC8s01           3501 	ld	hl,#_packbuffer
   0A7D E5                 3502 	push	hl
   0A7E C5                 3503 	push	bc
   0A7F DD 6E 04           3504 	ld	l,4 (ix)
   0A82 DD 66 05           3505 	ld	h,5 (ix)
   0A85 E5                 3506 	push	hl
   0A86 CDr2As09           3507 	call	_raw_load
   0A89 F1                 3508 	pop	af
   0A8A F1                 3509 	pop	af
   0A8B F1                 3510 	pop	af
   0A8C F1                 3511 	pop	af
                           3512 ;demo.c:348: bitbuster(packbuffer,address,vram_offset);
   0A8D DD 7E 0A           3513 	ld	a,10 (ix)
   0A90 F5                 3514 	push	af
   0A91 33                 3515 	inc	sp
   0A92 DD 6E 08           3516 	ld	l,8 (ix)
   0A95 DD 66 09           3517 	ld	h,9 (ix)
   0A98 E5                 3518 	push	hl
   0A99 21rC8s01           3519 	ld	hl,#_packbuffer
   0A9C E5                 3520 	push	hl
   0A9D CDr00s00           3521 	call	_bitbuster
   0AA0 F1                 3522 	pop	af
   0AA1 F1                 3523 	pop	af
   0AA2 33                 3524 	inc	sp
   0AA3 DD E1              3525 	pop	ix
   0AA5 C9                 3526 	ret
   0AA6                    3527 _pck_load_end::
   0AA6                    3528 __str_4:
   0AA6 6C 6F 61 64 69 6E  3529 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0AB7 00                 3530 	.db 0x00
   0AB8                    3531 __str_5:
   0AB8 0D                 3532 	.db 0x0D
   0AB9 0A                 3533 	.db 0x0A
   0ABA 00                 3534 	.db 0x00
                           3535 ;demo.c:351: void fadein() {
                           3536 ;	---------------------------------
                           3537 ; Function fadein
                           3538 ; ---------------------------------
   0ABB                    3539 _fadein_start::
   0ABB                    3540 _fadein:
   0ABB DD E5              3541 	push	ix
   0ABD DD 21 00 00        3542 	ld	ix,#0
   0AC1 DD 39              3543 	add	ix,sp
   0AC3 F5                 3544 	push	af
                           3545 ;demo.c:354: if (tick < 8) return;
   0AC4 3Ar28s41           3546 	ld	a,(#_tick+0)
   0AC7 D6 08              3547 	sub	a,#0x08
   0AC9 3Ar29s41           3548 	ld	a,(#_tick+1)
   0ACC DE 00              3549 	sbc	a,#0x00
   0ACE F2rD4s0A           3550 	jp	P,00102$
   0AD1 C3r82s0B           3551 	jp	00113$
   0AD4                    3552 00102$:
                           3553 ;demo.c:356: tick = 0;
   0AD4 21r28s41           3554 	ld	hl,#_tick + 0
   0AD7 36 00              3555 	ld	(hl), #0x00
   0AD9 21r29s41           3556 	ld	hl,#_tick + 1
   0ADC 36 00              3557 	ld	(hl), #0x00
                           3558 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0ADE 0E 00              3559 	ld	c,#0x00
   0AE0                    3560 00109$:
   0AE0 79                 3561 	ld	a,c
   0AE1 D6 20              3562 	sub	a,#0x20
   0AE3 D2r7As0B           3563 	jp	NC,00112$
                           3564 ;demo.c:359: uint8_t r = scratch[i] >> 4;
   0AE6 3ErC6              3565 	ld	a,#<_scratch
   0AE8 81                 3566 	add	a,c
   0AE9 5F                 3567 	ld	e,a
   0AEA 3Es3F              3568 	ld	a,#>_scratch
   0AEC CE 00              3569 	adc	a,#0x00
   0AEE 57                 3570 	ld	d,a
   0AEF 1A                 3571 	ld	a,(de)
   0AF0 47                 3572 	ld	b,a
   0AF1 58                 3573 	ld	e,b
   0AF2 CB 3B              3574 	srl	e
   0AF4 CB 3B              3575 	srl	e
   0AF6 CB 3B              3576 	srl	e
   0AF8 CB 3B              3577 	srl	e
                           3578 ;demo.c:360: uint8_t b = scratch[i] & 0xf;
   0AFA 78                 3579 	ld	a,b
   0AFB E6 0F              3580 	and	a,#0x0F
   0AFD DD 77 FF           3581 	ld	-1 (ix),a
                           3582 ;demo.c:361: uint8_t g = scratch[i+1];
   0B00 51                 3583 	ld	d,c
   0B01 14                 3584 	inc	d
   0B02 3ErC6              3585 	ld	a,#<_scratch
   0B04 82                 3586 	add	a,d
   0B05 6F                 3587 	ld	l,a
   0B06 3Es3F              3588 	ld	a,#>_scratch
   0B08 CE 00              3589 	adc	a,#0x00
   0B0A 67                 3590 	ld	h,a
   0B0B 56                 3591 	ld	d,(hl)
   0B0C DD 72 FE           3592 	ld	-2 (ix),d
                           3593 ;demo.c:363: if (r < (cur_palette[i] >> 4)) r++;
   0B0F 3Er46              3594 	ld	a,#<_cur_palette
   0B11 81                 3595 	add	a,c
   0B12 6F                 3596 	ld	l,a
   0B13 3Es40              3597 	ld	a,#>_cur_palette
   0B15 CE 00              3598 	adc	a,#0x00
   0B17 67                 3599 	ld	h,a
   0B18 56                 3600 	ld	d,(hl)
   0B19 CB 3A              3601 	srl	d
   0B1B CB 3A              3602 	srl	d
   0B1D CB 3A              3603 	srl	d
   0B1F CB 3A              3604 	srl	d
   0B21 7B                 3605 	ld	a,e
   0B22 92                 3606 	sub	a,d
   0B23 30 01              3607 	jr	NC,00104$
   0B25 1C                 3608 	inc	e
   0B26                    3609 00104$:
                           3610 ;demo.c:364: if (b < (cur_palette[i] & 0xf)) b++;
   0B26 3Er46              3611 	ld	a,#<_cur_palette
   0B28 81                 3612 	add	a,c
   0B29 6F                 3613 	ld	l,a
   0B2A 3Es40              3614 	ld	a,#>_cur_palette
   0B2C CE 00              3615 	adc	a,#0x00
   0B2E 67                 3616 	ld	h,a
   0B2F 7E                 3617 	ld	a,(hl)
   0B30 E6 0F              3618 	and	a,#0x0F
   0B32 47                 3619 	ld	b,a
   0B33 DD 7E FF           3620 	ld	a,-1 (ix)
   0B36 90                 3621 	sub	a,b
   0B37 30 03              3622 	jr	NC,00106$
   0B39 DD 34 FF           3623 	inc	-1 (ix)
   0B3C                    3624 00106$:
                           3625 ;demo.c:366: scratch[i] = (r << 4) | b;
   0B3C 3ErC6              3626 	ld	a,#<_scratch
   0B3E 81                 3627 	add	a,c
   0B3F 47                 3628 	ld	b,a
   0B40 3Es3F              3629 	ld	a,#>_scratch
   0B42 CE 00              3630 	adc	a,#0x00
   0B44 57                 3631 	ld	d,a
   0B45 7B                 3632 	ld	a,e
   0B46 07                 3633 	rlca
   0B47 07                 3634 	rlca
   0B48 07                 3635 	rlca
   0B49 07                 3636 	rlca
   0B4A E6 F0              3637 	and	a,#0xF0
   0B4C DD B6 FF           3638 	or	a,-1 (ix)
   0B4F 68                 3639 	ld	l,b
   0B50 62                 3640 	ld	h,d
   0B51 77                 3641 	ld	(hl),a
                           3642 ;demo.c:367: if (g < cur_palette[i+1]) scratch[i+1]++;
   0B52 41                 3643 	ld	b,c
   0B53 04                 3644 	inc	b
   0B54 3Er46              3645 	ld	a,#<_cur_palette
   0B56 80                 3646 	add	a,b
   0B57 5F                 3647 	ld	e,a
   0B58 3Es40              3648 	ld	a,#>_cur_palette
   0B5A CE 00              3649 	adc	a,#0x00
   0B5C 57                 3650 	ld	d,a
   0B5D 1A                 3651 	ld	a,(de)
   0B5E 5F                 3652 	ld	e,a
   0B5F DD 7E FE           3653 	ld	a,-2 (ix)
   0B62 93                 3654 	sub	a,e
   0B63 30 10              3655 	jr	NC,00111$
   0B65 3ErC6              3656 	ld	a,#<_scratch
   0B67 80                 3657 	add	a,b
   0B68 47                 3658 	ld	b,a
   0B69 3Es3F              3659 	ld	a,#>_scratch
   0B6B CE 00              3660 	adc	a,#0x00
   0B6D 5F                 3661 	ld	e,a
   0B6E 68                 3662 	ld	l,b
   0B6F 67                 3663 	ld	h,a
   0B70 7E                 3664 	ld	a,(hl)
   0B71 3C                 3665 	inc	a
   0B72 68                 3666 	ld	l,b
   0B73 63                 3667 	ld	h,e
   0B74 77                 3668 	ld	(hl),a
   0B75                    3669 00111$:
                           3670 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0B75 0C                 3671 	inc	c
   0B76 0C                 3672 	inc	c
   0B77 C3rE0s0A           3673 	jp	00109$
   0B7A                    3674 00112$:
                           3675 ;demo.c:371: vdp_load_palette(scratch);
   0B7A 21rC6s3F           3676 	ld	hl,#_scratch
   0B7D E5                 3677 	push	hl
   0B7E CDr00s00           3678 	call	_vdp_load_palette
   0B81 F1                 3679 	pop	af
   0B82                    3680 00113$:
   0B82 DD F9              3681 	ld	sp,ix
   0B84 DD E1              3682 	pop	ix
   0B86 C9                 3683 	ret
   0B87                    3684 _fadein_end::
                           3685 ;demo.c:383: void do_ymmm() {
                           3686 ;	---------------------------------
                           3687 ; Function do_ymmm
                           3688 ; ---------------------------------
   0B87                    3689 _do_ymmm_start::
   0B87                    3690 _do_ymmm:
                           3691 ;demo.c:384: }
   0B87 C9                 3692 	ret
   0B88                    3693 _do_ymmm_end::
                           3694 ;demo.c:397: void do_blocks() {
                           3695 ;	---------------------------------
                           3696 ; Function do_blocks
                           3697 ; ---------------------------------
   0B88                    3698 _do_blocks_start::
   0B88                    3699 _do_blocks:
                           3700 ;demo.c:398: }
   0B88 C9                 3701 	ret
   0B89                    3702 _do_blocks_end::
                           3703 ;demo.c:402: void raster_effu() {
                           3704 ;	---------------------------------
                           3705 ; Function raster_effu
                           3706 ; ---------------------------------
   0B89                    3707 _raster_effu_start::
   0B89                    3708 _raster_effu:
                           3709 ;demo.c:403: }
   0B89 C9                 3710 	ret
   0B8A                    3711 _raster_effu_end::
                           3712 ;demo.c:434: void do_2xletter(char cc) {
                           3713 ;	---------------------------------
                           3714 ; Function do_2xletter
                           3715 ; ---------------------------------
   0B8A                    3716 _do_2xletter_start::
   0B8A                    3717 _do_2xletter:
   0B8A DD E5              3718 	push	ix
   0B8C DD 21 00 00        3719 	ld	ix,#0
   0B90 DD 39              3720 	add	ix,sp
   0B92 21 F2 FF           3721 	ld	hl,#-14
   0B95 39                 3722 	add	hl,sp
   0B96 F9                 3723 	ld	sp,hl
                           3724 ;demo.c:435: int cidx = cc - 65;
   0B97 DD 4E 04           3725 	ld	c,4 (ix)
   0B9A DD 7E 04           3726 	ld	a,4 (ix)
   0B9D 17                 3727 	rla	
   0B9E 9F                 3728 	sbc	a,a
   0B9F 47                 3729 	ld	b,a
   0BA0 79                 3730 	ld	a,c
   0BA1 C6 BF              3731 	add	a,#0xBF
   0BA3 DD 77 FE           3732 	ld	-2 (ix),a
   0BA6 78                 3733 	ld	a,b
   0BA7 CE FF              3734 	adc	a,#0xFF
   0BA9 DD 77 FF           3735 	ld	-1 (ix),a
                           3736 ;demo.c:438: for (y=0;y<8;y++) {
   0BAC 3ErB8              3737 	ld	a,#<_font_w
   0BAE DD 86 FE           3738 	add	a,-2 (ix)
   0BB1 5F                 3739 	ld	e,a
   0BB2 3Es0E              3740 	ld	a,#>_font_w
   0BB4 DD 8E FF           3741 	adc	a,-1 (ix)
   0BB7 57                 3742 	ld	d,a
   0BB8 DD 36 FA 00        3743 	ld	-6 (ix),#0x00
   0BBC DD 36 FB 00        3744 	ld	-5 (ix),#0x00
   0BC0 DD 36 F6 00        3745 	ld	-10 (ix),#0x00
   0BC4 DD 36 F7 00        3746 	ld	-9 (ix),#0x00
   0BC8                    3747 00105$:
   0BC8 DD 7E FA           3748 	ld	a,-6 (ix)
   0BCB D6 08              3749 	sub	a,#0x08
   0BCD DD 7E FB           3750 	ld	a,-5 (ix)
   0BD0 DE 00              3751 	sbc	a,#0x00
   0BD2 F2r10s0E           3752 	jp	P,00108$
                           3753 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0BD5 DD 36 FC 00        3754 	ld	-4 (ix),#0x00
   0BD9 DD 36 FD 00        3755 	ld	-3 (ix),#0x00
   0BDD DD 36 F4 00        3756 	ld	-12 (ix),#0x00
   0BE1 DD 36 F5 00        3757 	ld	-11 (ix),#0x00
   0BE5                    3758 00101$:
   0BE5 1A                 3759 	ld	a,(de)
   0BE6 4F                 3760 	ld	c,a
   0BE7 06 00              3761 	ld	b,#0x00
   0BE9 DD 7E FC           3762 	ld	a,-4 (ix)
   0BEC 91                 3763 	sub	a,c
   0BED DD 7E FD           3764 	ld	a,-3 (ix)
   0BF0 98                 3765 	sbc	a,b
   0BF1 F2rE8s0D           3766 	jp	P,00115$
                           3767 ;demo.c:440: cmd.source_x = 127+font_x[cidx]+x;
   0BF4 3Er38              3768 	ld	a,#<_font_x
   0BF6 DD 86 FE           3769 	add	a,-2 (ix)
   0BF9 4F                 3770 	ld	c,a
   0BFA 3Es0E              3771 	ld	a,#>_font_x
   0BFC DD 8E FF           3772 	adc	a,-1 (ix)
   0BFF 47                 3773 	ld	b,a
   0C00 0A                 3774 	ld	a,(bc)
   0C01 4F                 3775 	ld	c,a
   0C02 06 00              3776 	ld	b,#0x00
   0C04 21 7F 00           3777 	ld	hl,#0x007F
   0C07 09                 3778 	add	hl,bc
   0C08 4D                 3779 	ld	c,l
   0C09 44                 3780 	ld	b,h
   0C0A 79                 3781 	ld	a,c
   0C0B DD 86 FC           3782 	add	a,-4 (ix)
   0C0E 4F                 3783 	ld	c,a
   0C0F 78                 3784 	ld	a,b
   0C10 DD 8E FD           3785 	adc	a,-3 (ix)
   0C13 47                 3786 	ld	b,a
   0C14 21r2As41           3787 	ld	hl,#_cmd
   0C17 71                 3788 	ld	(hl),c
   0C18 23                 3789 	inc	hl
   0C19 70                 3790 	ld	(hl),b
                           3791 ;demo.c:441: cmd.source_y = 512+font_y[cidx]+y;
   0C1A 23                 3792 	inc	hl
   0C1B DD 75 F2           3793 	ld	-14 (ix),l
   0C1E DD 74 F3           3794 	ld	-13 (ix),h
   0C21 3Er78              3795 	ld	a,#<_font_y
   0C23 DD 86 FE           3796 	add	a,-2 (ix)
   0C26 4F                 3797 	ld	c,a
   0C27 3Es0E              3798 	ld	a,#>_font_y
   0C29 DD 8E FF           3799 	adc	a,-1 (ix)
   0C2C 47                 3800 	ld	b,a
   0C2D 0A                 3801 	ld	a,(bc)
   0C2E 4F                 3802 	ld	c,a
   0C2F 06 00              3803 	ld	b,#0x00
   0C31 21 00 02           3804 	ld	hl,#0x0200
   0C34 09                 3805 	add	hl,bc
   0C35 4D                 3806 	ld	c,l
   0C36 44                 3807 	ld	b,h
   0C37 79                 3808 	ld	a,c
   0C38 DD 86 FA           3809 	add	a,-6 (ix)
   0C3B 4F                 3810 	ld	c,a
   0C3C 78                 3811 	ld	a,b
   0C3D DD 8E FB           3812 	adc	a,-5 (ix)
   0C40 47                 3813 	ld	b,a
   0C41 DD 6E F2           3814 	ld	l,-14 (ix)
   0C44 DD 66 F3           3815 	ld	h,-13 (ix)
   0C47 71                 3816 	ld	(hl),c
   0C48 23                 3817 	inc	hl
   0C49 70                 3818 	ld	(hl),b
                           3819 ;demo.c:442: cmd.size_x = 1;
   0C4A 21r32s41           3820 	ld	hl, #_cmd + 8
   0C4D 36 01              3821 	ld	(hl),#0x01
   0C4F 23                 3822 	inc	hl
   0C50 36 00              3823 	ld	(hl),#0x00
                           3824 ;demo.c:443: cmd.size_y = 1;
   0C52 21r34s41           3825 	ld	hl, #_cmd + 10
   0C55 36 01              3826 	ld	(hl),#0x01
   0C57 23                 3827 	inc	hl
   0C58 36 00              3828 	ld	(hl),#0x00
                           3829 ;demo.c:444: cmd.argument = 0x00;
   0C5A 3E 00              3830 	ld	a,#0x00
   0C5C 32r37s41           3831 	ld	(#_cmd + 13),a
                           3832 ;demo.c:445: cmd.command = 0x40; // get pixel
   0C5F 3E 40              3833 	ld	a,#0x40
   0C61 32r38s41           3834 	ld	(#_cmd + 14),a
                           3835 ;demo.c:446: vdp_copier(&cmd);
   0C64 D5                 3836 	push	de
   0C65 21r2As41           3837 	ld	hl,#_cmd
   0C68 E5                 3838 	push	hl
   0C69 CDr00s00           3839 	call	_vdp_copier
   0C6C F1                 3840 	pop	af
   0C6D D1                 3841 	pop	de
                           3842 ;demo.c:448: col = vdp2_status(7);
   0C6E D5                 3843 	push	de
   0C6F 3E 07              3844 	ld	a,#0x07
   0C71 F5                 3845 	push	af
   0C72 33                 3846 	inc	sp
   0C73 CDr00s00           3847 	call	_vdp2_status
   0C76 33                 3848 	inc	sp
   0C77 4D                 3849 	ld	c,l
   0C78 D1                 3850 	pop	de
   0C79 DD 71 F8           3851 	ld	-8 (ix),c
   0C7C DD 36 F9 00        3852 	ld	-7 (ix),#0x00
                           3853 ;demo.c:450: cmd.data = col;
   0C80 01r36s41           3854 	ld	bc,#_cmd + 12
   0C83 DD 7E F8           3855 	ld	a,-8 (ix)
   0C86 02                 3856 	ld	(bc),a
                           3857 ;demo.c:451: cmd.dest_x = lx+x*3;
   0C87 21r2Es41           3858 	ld	hl,#_cmd + 4
   0C8A DD 75 F2           3859 	ld	-14 (ix),l
   0C8D DD 74 F3           3860 	ld	-13 (ix),h
   0C90 21rBCs41           3861 	ld	hl,#_lx + 0
   0C93 4E                 3862 	ld	c,(hl)
   0C94 06 00              3863 	ld	b,#0x00
   0C96 79                 3864 	ld	a,c
   0C97 DD 86 F4           3865 	add	a,-12 (ix)
   0C9A 4F                 3866 	ld	c,a
   0C9B 78                 3867 	ld	a,b
   0C9C DD 8E F5           3868 	adc	a,-11 (ix)
   0C9F 47                 3869 	ld	b,a
   0CA0 DD 6E F2           3870 	ld	l,-14 (ix)
   0CA3 DD 66 F3           3871 	ld	h,-13 (ix)
   0CA6 71                 3872 	ld	(hl),c
   0CA7 23                 3873 	inc	hl
   0CA8 70                 3874 	ld	(hl),b
                           3875 ;demo.c:452: cmd.dest_y = ly+y*3;
   0CA9 21r30s41           3876 	ld	hl,#_cmd + 6
   0CAC DD 75 F2           3877 	ld	-14 (ix),l
   0CAF DD 74 F3           3878 	ld	-13 (ix),h
   0CB2 21rBDs41           3879 	ld	hl,#_ly + 0
   0CB5 4E                 3880 	ld	c,(hl)
   0CB6 06 00              3881 	ld	b,#0x00
   0CB8 79                 3882 	ld	a,c
   0CB9 DD 86 F6           3883 	add	a,-10 (ix)
   0CBC 4F                 3884 	ld	c,a
   0CBD 78                 3885 	ld	a,b
   0CBE DD 8E F7           3886 	adc	a,-9 (ix)
   0CC1 47                 3887 	ld	b,a
   0CC2 DD 6E F2           3888 	ld	l,-14 (ix)
   0CC5 DD 66 F3           3889 	ld	h,-13 (ix)
   0CC8 71                 3890 	ld	(hl),c
   0CC9 23                 3891 	inc	hl
   0CCA 70                 3892 	ld	(hl),b
                           3893 ;demo.c:455: cmd.argument = 0x00;
   0CCB 3E 00              3894 	ld	a,#0x00
   0CCD 32r37s41           3895 	ld	(#_cmd + 13),a
                           3896 ;demo.c:456: cmd.command = 0x50; // rect
   0CD0 3E 50              3897 	ld	a,#0x50
   0CD2 32r38s41           3898 	ld	(#_cmd + 14),a
                           3899 ;demo.c:457: vdp_copier(&cmd);
   0CD5 D5                 3900 	push	de
   0CD6 21r2As41           3901 	ld	hl,#_cmd
   0CD9 E5                 3902 	push	hl
   0CDA CDr00s00           3903 	call	_vdp_copier
   0CDD F1                 3904 	pop	af
   0CDE D1                 3905 	pop	de
                           3906 ;demo.c:458: cmd.dest_x = 1+lx+x*3;
   0CDF 21r2Es41           3907 	ld	hl,#_cmd + 4
   0CE2 DD 75 F2           3908 	ld	-14 (ix),l
   0CE5 DD 74 F3           3909 	ld	-13 (ix),h
   0CE8 21rBCs41           3910 	ld	hl,#_lx + 0
   0CEB 4E                 3911 	ld	c,(hl)
   0CEC 06 00              3912 	ld	b,#0x00
   0CEE 03                 3913 	inc	bc
   0CEF 79                 3914 	ld	a,c
   0CF0 DD 86 F4           3915 	add	a,-12 (ix)
   0CF3 4F                 3916 	ld	c,a
   0CF4 78                 3917 	ld	a,b
   0CF5 DD 8E F5           3918 	adc	a,-11 (ix)
   0CF8 47                 3919 	ld	b,a
   0CF9 DD 6E F2           3920 	ld	l,-14 (ix)
   0CFC DD 66 F3           3921 	ld	h,-13 (ix)
   0CFF 71                 3922 	ld	(hl),c
   0D00 23                 3923 	inc	hl
   0D01 70                 3924 	ld	(hl),b
                           3925 ;demo.c:459: cmd.dest_y = ly+y*3;
   0D02 21r30s41           3926 	ld	hl,#_cmd + 6
   0D05 DD 75 F2           3927 	ld	-14 (ix),l
   0D08 DD 74 F3           3928 	ld	-13 (ix),h
   0D0B 21rBDs41           3929 	ld	hl,#_ly + 0
   0D0E 4E                 3930 	ld	c,(hl)
   0D0F 06 00              3931 	ld	b,#0x00
   0D11 79                 3932 	ld	a,c
   0D12 DD 86 F6           3933 	add	a,-10 (ix)
   0D15 4F                 3934 	ld	c,a
   0D16 78                 3935 	ld	a,b
   0D17 DD 8E F7           3936 	adc	a,-9 (ix)
   0D1A 47                 3937 	ld	b,a
   0D1B DD 6E F2           3938 	ld	l,-14 (ix)
   0D1E DD 66 F3           3939 	ld	h,-13 (ix)
   0D21 71                 3940 	ld	(hl),c
   0D22 23                 3941 	inc	hl
   0D23 70                 3942 	ld	(hl),b
                           3943 ;demo.c:460: vdp_copier(&cmd);
   0D24 D5                 3944 	push	de
   0D25 21r2As41           3945 	ld	hl,#_cmd
   0D28 E5                 3946 	push	hl
   0D29 CDr00s00           3947 	call	_vdp_copier
   0D2C F1                 3948 	pop	af
   0D2D D1                 3949 	pop	de
                           3950 ;demo.c:461: cmd.dest_x = 1+lx+x*3;
   0D2E 21r2Es41           3951 	ld	hl,#_cmd + 4
   0D31 DD 75 F2           3952 	ld	-14 (ix),l
   0D34 DD 74 F3           3953 	ld	-13 (ix),h
   0D37 21rBCs41           3954 	ld	hl,#_lx + 0
   0D3A 4E                 3955 	ld	c,(hl)
   0D3B 06 00              3956 	ld	b,#0x00
   0D3D 03                 3957 	inc	bc
   0D3E 79                 3958 	ld	a,c
   0D3F DD 86 F4           3959 	add	a,-12 (ix)
   0D42 4F                 3960 	ld	c,a
   0D43 78                 3961 	ld	a,b
   0D44 DD 8E F5           3962 	adc	a,-11 (ix)
   0D47 47                 3963 	ld	b,a
   0D48 DD 6E F2           3964 	ld	l,-14 (ix)
   0D4B DD 66 F3           3965 	ld	h,-13 (ix)
   0D4E 71                 3966 	ld	(hl),c
   0D4F 23                 3967 	inc	hl
   0D50 70                 3968 	ld	(hl),b
                           3969 ;demo.c:462: cmd.dest_y = 1+ly+y*3;
   0D51 21r30s41           3970 	ld	hl,#_cmd + 6
   0D54 DD 75 F2           3971 	ld	-14 (ix),l
   0D57 DD 74 F3           3972 	ld	-13 (ix),h
   0D5A 21rBDs41           3973 	ld	hl,#_ly + 0
   0D5D 4E                 3974 	ld	c,(hl)
   0D5E 06 00              3975 	ld	b,#0x00
   0D60 03                 3976 	inc	bc
   0D61 79                 3977 	ld	a,c
   0D62 DD 86 F6           3978 	add	a,-10 (ix)
   0D65 4F                 3979 	ld	c,a
   0D66 78                 3980 	ld	a,b
   0D67 DD 8E F7           3981 	adc	a,-9 (ix)
   0D6A 47                 3982 	ld	b,a
   0D6B DD 6E F2           3983 	ld	l,-14 (ix)
   0D6E DD 66 F3           3984 	ld	h,-13 (ix)
   0D71 71                 3985 	ld	(hl),c
   0D72 23                 3986 	inc	hl
   0D73 70                 3987 	ld	(hl),b
                           3988 ;demo.c:463: vdp_copier(&cmd);
   0D74 D5                 3989 	push	de
   0D75 21r2As41           3990 	ld	hl,#_cmd
   0D78 E5                 3991 	push	hl
   0D79 CDr00s00           3992 	call	_vdp_copier
   0D7C F1                 3993 	pop	af
   0D7D D1                 3994 	pop	de
                           3995 ;demo.c:464: cmd.dest_x = lx+x*3;
   0D7E 21r2Es41           3996 	ld	hl,#_cmd + 4
   0D81 DD 75 F2           3997 	ld	-14 (ix),l
   0D84 DD 74 F3           3998 	ld	-13 (ix),h
   0D87 21rBCs41           3999 	ld	hl,#_lx + 0
   0D8A 4E                 4000 	ld	c,(hl)
   0D8B 06 00              4001 	ld	b,#0x00
   0D8D 79                 4002 	ld	a,c
   0D8E DD 86 F4           4003 	add	a,-12 (ix)
   0D91 4F                 4004 	ld	c,a
   0D92 78                 4005 	ld	a,b
   0D93 DD 8E F5           4006 	adc	a,-11 (ix)
   0D96 47                 4007 	ld	b,a
   0D97 DD 6E F2           4008 	ld	l,-14 (ix)
   0D9A DD 66 F3           4009 	ld	h,-13 (ix)
   0D9D 71                 4010 	ld	(hl),c
   0D9E 23                 4011 	inc	hl
   0D9F 70                 4012 	ld	(hl),b
                           4013 ;demo.c:465: cmd.dest_y = 1+ly+y*3;
   0DA0 21r30s41           4014 	ld	hl,#_cmd + 6
   0DA3 DD 75 F2           4015 	ld	-14 (ix),l
   0DA6 DD 74 F3           4016 	ld	-13 (ix),h
   0DA9 21rBDs41           4017 	ld	hl,#_ly + 0
   0DAC 4E                 4018 	ld	c,(hl)
   0DAD 06 00              4019 	ld	b,#0x00
   0DAF 03                 4020 	inc	bc
   0DB0 79                 4021 	ld	a,c
   0DB1 DD 86 F6           4022 	add	a,-10 (ix)
   0DB4 4F                 4023 	ld	c,a
   0DB5 78                 4024 	ld	a,b
   0DB6 DD 8E F7           4025 	adc	a,-9 (ix)
   0DB9 47                 4026 	ld	b,a
   0DBA DD 6E F2           4027 	ld	l,-14 (ix)
   0DBD DD 66 F3           4028 	ld	h,-13 (ix)
   0DC0 71                 4029 	ld	(hl),c
   0DC1 23                 4030 	inc	hl
   0DC2 70                 4031 	ld	(hl),b
                           4032 ;demo.c:466: vdp_copier(&cmd);
   0DC3 D5                 4033 	push	de
   0DC4 21r2As41           4034 	ld	hl,#_cmd
   0DC7 E5                 4035 	push	hl
   0DC8 CDr00s00           4036 	call	_vdp_copier
   0DCB F1                 4037 	pop	af
   0DCC D1                 4038 	pop	de
                           4039 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0DCD DD 7E F4           4040 	ld	a,-12 (ix)
   0DD0 C6 03              4041 	add	a,#0x03
   0DD2 DD 77 F4           4042 	ld	-12 (ix),a
   0DD5 DD 7E F5           4043 	ld	a,-11 (ix)
   0DD8 CE 00              4044 	adc	a,#0x00
   0DDA DD 77 F5           4045 	ld	-11 (ix),a
   0DDD DD 34 FC           4046 	inc	-4 (ix)
   0DE0 20 03              4047 	jr	NZ,00117$
   0DE2 DD 34 FD           4048 	inc	-3 (ix)
   0DE5                    4049 00117$:
   0DE5 C3rE5s0B           4050 	jp	00101$
   0DE8                    4051 00115$:
   0DE8 DD 7E FC           4052 	ld	a,-4 (ix)
   0DEB DD 77 F2           4053 	ld	-14 (ix),a
   0DEE DD 7E FD           4054 	ld	a,-3 (ix)
   0DF1 DD 77 F3           4055 	ld	-13 (ix),a
                           4056 ;demo.c:468: waitVB();
   0DF4 76                 4057 		halt 
                           4058 ;demo.c:438: for (y=0;y<8;y++) {
   0DF5 DD 7E F6           4059 	ld	a,-10 (ix)
   0DF8 C6 03              4060 	add	a,#0x03
   0DFA DD 77 F6           4061 	ld	-10 (ix),a
   0DFD DD 7E F7           4062 	ld	a,-9 (ix)
   0E00 CE 00              4063 	adc	a,#0x00
   0E02 DD 77 F7           4064 	ld	-9 (ix),a
   0E05 DD 34 FA           4065 	inc	-6 (ix)
   0E08 20 03              4066 	jr	NZ,00118$
   0E0A DD 34 FB           4067 	inc	-5 (ix)
   0E0D                    4068 00118$:
   0E0D C3rC8s0B           4069 	jp	00105$
   0E10                    4070 00108$:
                           4071 ;demo.c:471: lx+=font_w[cidx]-1+(x*4);
   0E10 3ErB8              4072 	ld	a,#<_font_w
   0E12 DD 86 FE           4073 	add	a,-2 (ix)
   0E15 4F                 4074 	ld	c,a
   0E16 3Es0E              4075 	ld	a,#>_font_w
   0E18 DD 8E FF           4076 	adc	a,-1 (ix)
   0E1B 47                 4077 	ld	b,a
   0E1C 0A                 4078 	ld	a,(bc)
   0E1D 4F                 4079 	ld	c,a
   0E1E 0D                 4080 	dec	c
   0E1F DD 46 F2           4081 	ld	b,-14 (ix)
   0E22 CB 20              4082 	sla	b
   0E24 CB 20              4083 	sla	b
   0E26 79                 4084 	ld	a,c
   0E27 80                 4085 	add	a,b
   0E28 4F                 4086 	ld	c,a
   0E29 21rBCs41           4087 	ld	hl,#_lx + 0
   0E2C 46                 4088 	ld	b,(hl)
   0E2D 21rBCs41           4089 	ld	hl,#_lx
   0E30 78                 4090 	ld	a,b
   0E31 81                 4091 	add	a,c
   0E32 77                 4092 	ld	(hl),a
   0E33 DD F9              4093 	ld	sp,ix
   0E35 DD E1              4094 	pop	ix
   0E37 C9                 4095 	ret
   0E38                    4096 _do_2xletter_end::
   0E38                    4097 _font_x:
   0E38 01                 4098 	.db #0x01
   0E39 09                 4099 	.db #0x09
   0E3A 11                 4100 	.db #0x11
   0E3B 19                 4101 	.db #0x19
   0E3C 21                 4102 	.db #0x21
   0E3D 29                 4103 	.db #0x29
   0E3E 31                 4104 	.db #0x31
   0E3F 39                 4105 	.db #0x39
   0E40 41                 4106 	.db #0x41
   0E41 46                 4107 	.db #0x46
   0E42 4E                 4108 	.db #0x4E
   0E43 56                 4109 	.db #0x56
   0E44 5E                 4110 	.db #0x5E
   0E45 01                 4111 	.db #0x01
   0E46 0A                 4112 	.db #0x0A
   0E47 12                 4113 	.db #0x12
   0E48 1A                 4114 	.db #0x1A
   0E49 23                 4115 	.db #0x23
   0E4A 2B                 4116 	.db #0x2B
   0E4B 33                 4117 	.db #0x33
   0E4C 3C                 4118 	.db #0x3C
   0E4D 44                 4119 	.db #0x44
   0E4E 4C                 4120 	.db #0x4C
   0E4F 56                 4121 	.db #0x56
   0E50 5E                 4122 	.db #0x5E
   0E51 67                 4123 	.db #0x67
   0E52 00                 4124 	.db #0x00
   0E53 00                 4125 	.db #0x00
   0E54 00                 4126 	.db #0x00
   0E55 00                 4127 	.db #0x00
   0E56 00                 4128 	.db #0x00
   0E57 00                 4129 	.db #0x00
   0E58 01                 4130 	.db #0x01
   0E59 09                 4131 	.db #0x09
   0E5A 11                 4132 	.db #0x11
   0E5B 18                 4133 	.db #0x18
   0E5C 20                 4134 	.db #0x20
   0E5D 28                 4135 	.db #0x28
   0E5E 2F                 4136 	.db #0x2F
   0E5F 37                 4137 	.db #0x37
   0E60 3F                 4138 	.db #0x3F
   0E61 45                 4139 	.db #0x45
   0E62 4C                 4140 	.db #0x4C
   0E63 54                 4141 	.db #0x54
   0E64 5A                 4142 	.db #0x5A
   0E65 64                 4143 	.db #0x64
   0E66 01                 4144 	.db #0x01
   0E67 09                 4145 	.db #0x09
   0E68 11                 4146 	.db #0x11
   0E69 19                 4147 	.db #0x19
   0E6A 21                 4148 	.db #0x21
   0E6B 29                 4149 	.db #0x29
   0E6C 30                 4150 	.db #0x30
   0E6D 38                 4151 	.db #0x38
   0E6E 40                 4152 	.db #0x40
   0E6F 4A                 4153 	.db #0x4A
   0E70 52                 4154 	.db #0x52
   0E71 5A                 4155 	.db #0x5A
   0E72 00                 4156 	.db 0x00
   0E73 00                 4157 	.db 0x00
   0E74 00                 4158 	.db 0x00
   0E75 00                 4159 	.db 0x00
   0E76 00                 4160 	.db 0x00
   0E77 00                 4161 	.db 0x00
   0E78                    4162 _font_y:
   0E78 1C                 4163 	.db #0x1C
   0E79 1C                 4164 	.db #0x1C
   0E7A 1C                 4165 	.db #0x1C
   0E7B 1C                 4166 	.db #0x1C
   0E7C 1C                 4167 	.db #0x1C
   0E7D 1C                 4168 	.db #0x1C
   0E7E 1C                 4169 	.db #0x1C
   0E7F 1C                 4170 	.db #0x1C
   0E80 1C                 4171 	.db #0x1C
   0E81 1C                 4172 	.db #0x1C
   0E82 1C                 4173 	.db #0x1C
   0E83 1C                 4174 	.db #0x1C
   0E84 1C                 4175 	.db #0x1C
   0E85 25                 4176 	.db #0x25
   0E86 25                 4177 	.db #0x25
   0E87 25                 4178 	.db #0x25
   0E88 25                 4179 	.db #0x25
   0E89 25                 4180 	.db #0x25
   0E8A 25                 4181 	.db #0x25
   0E8B 25                 4182 	.db #0x25
   0E8C 25                 4183 	.db #0x25
   0E8D 25                 4184 	.db #0x25
   0E8E 25                 4185 	.db #0x25
   0E8F 25                 4186 	.db #0x25
   0E90 25                 4187 	.db #0x25
   0E91 25                 4188 	.db #0x25
   0E92 00                 4189 	.db #0x00
   0E93 00                 4190 	.db #0x00
   0E94 00                 4191 	.db #0x00
   0E95 00                 4192 	.db #0x00
   0E96 00                 4193 	.db #0x00
   0E97 00                 4194 	.db #0x00
   0E98 37                 4195 	.db #0x37
   0E99 37                 4196 	.db #0x37
   0E9A 37                 4197 	.db #0x37
   0E9B 37                 4198 	.db #0x37
   0E9C 37                 4199 	.db #0x37
   0E9D 37                 4200 	.db #0x37
   0E9E 37                 4201 	.db #0x37
   0E9F 37                 4202 	.db #0x37
   0EA0 37                 4203 	.db #0x37
   0EA1 37                 4204 	.db #0x37
   0EA2 37                 4205 	.db #0x37
   0EA3 37                 4206 	.db #0x37
   0EA4 37                 4207 	.db #0x37
   0EA5 37                 4208 	.db #0x37
   0EA6 40                 4209 	.db #0x40
   0EA7 40                 4210 	.db #0x40
   0EA8 40                 4211 	.db #0x40
   0EA9 40                 4212 	.db #0x40
   0EAA 40                 4213 	.db #0x40
   0EAB 40                 4214 	.db #0x40
   0EAC 40                 4215 	.db #0x40
   0EAD 40                 4216 	.db #0x40
   0EAE 40                 4217 	.db #0x40
   0EAF 40                 4218 	.db #0x40
   0EB0 40                 4219 	.db #0x40
   0EB1 40                 4220 	.db #0x40
   0EB2 00                 4221 	.db 0x00
   0EB3 00                 4222 	.db 0x00
   0EB4 00                 4223 	.db 0x00
   0EB5 00                 4224 	.db 0x00
   0EB6 00                 4225 	.db 0x00
   0EB7 00                 4226 	.db 0x00
   0EB8                    4227 _font_w:
   0EB8 07                 4228 	.db #0x07
   0EB9 07                 4229 	.db #0x07
   0EBA 07                 4230 	.db #0x07
   0EBB 07                 4231 	.db #0x07
   0EBC 07                 4232 	.db #0x07
   0EBD 07                 4233 	.db #0x07
   0EBE 07                 4234 	.db #0x07
   0EBF 07                 4235 	.db #0x07
   0EC0 04                 4236 	.db #0x04
   0EC1 07                 4237 	.db #0x07
   0EC2 07                 4238 	.db #0x07
   0EC3 07                 4239 	.db #0x07
   0EC4 09                 4240 	.db #0x09
   0EC5 08                 4241 	.db #0x08
   0EC6 07                 4242 	.db #0x07
   0EC7 07                 4243 	.db #0x07
   0EC8 08                 4244 	.db #0x08
   0EC9 07                 4245 	.db #0x07
   0ECA 07                 4246 	.db #0x07
   0ECB 08                 4247 	.db #0x08
   0ECC 07                 4248 	.db #0x07
   0ECD 07                 4249 	.db #0x07
   0ECE 09                 4250 	.db #0x09
   0ECF 07                 4251 	.db #0x07
   0ED0 08                 4252 	.db #0x08
   0ED1 07                 4253 	.db #0x07
   0ED2 00                 4254 	.db #0x00
   0ED3 00                 4255 	.db #0x00
   0ED4 00                 4256 	.db #0x00
   0ED5 00                 4257 	.db #0x00
   0ED6 00                 4258 	.db #0x00
   0ED7 00                 4259 	.db #0x00
   0ED8 07                 4260 	.db #0x07
   0ED9 07                 4261 	.db #0x07
   0EDA 06                 4262 	.db #0x06
   0EDB 07                 4263 	.db #0x07
   0EDC 07                 4264 	.db #0x07
   0EDD 07                 4265 	.db #0x07
   0EDE 07                 4266 	.db #0x07
   0EDF 07                 4267 	.db #0x07
   0EE0 05                 4268 	.db #0x05
   0EE1 06                 4269 	.db #0x06
   0EE2 07                 4270 	.db #0x07
   0EE3 05                 4271 	.db #0x05
   0EE4 09                 4272 	.db #0x09
   0EE5 07                 4273 	.db #0x07
   0EE6 07                 4274 	.db #0x07
   0EE7 07                 4275 	.db #0x07
   0EE8 07                 4276 	.db #0x07
   0EE9 07                 4277 	.db #0x07
   0EEA 07                 4278 	.db #0x07
   0EEB 06                 4279 	.db #0x06
   0EEC 07                 4280 	.db #0x07
   0EED 07                 4281 	.db #0x07
   0EEE 09                 4282 	.db #0x09
   0EEF 07                 4283 	.db #0x07
   0EF0 07                 4284 	.db #0x07
   0EF1 07                 4285 	.db #0x07
   0EF2 00                 4286 	.db 0x00
   0EF3 00                 4287 	.db 0x00
   0EF4 00                 4288 	.db 0x00
   0EF5 00                 4289 	.db 0x00
   0EF6 00                 4290 	.db 0x00
   0EF7 00                 4291 	.db 0x00
                           4292 ;demo.c:475: void do_letter(char cc) {
                           4293 ;	---------------------------------
                           4294 ; Function do_letter
                           4295 ; ---------------------------------
   0EF8                    4296 _do_letter_start::
   0EF8                    4297 _do_letter:
   0EF8 DD E5              4298 	push	ix
   0EFA DD 21 00 00        4299 	ld	ix,#0
   0EFE DD 39              4300 	add	ix,sp
   0F00 F5                 4301 	push	af
                           4302 ;demo.c:476: int cidx = cc - 65;
   0F01 DD 4E 04           4303 	ld	c,4 (ix)
   0F04 DD 7E 04           4304 	ld	a,4 (ix)
   0F07 17                 4305 	rla	
   0F08 9F                 4306 	sbc	a,a
   0F09 47                 4307 	ld	b,a
   0F0A 79                 4308 	ld	a,c
   0F0B C6 BF              4309 	add	a,#0xBF
   0F0D DD 77 FE           4310 	ld	-2 (ix),a
   0F10 78                 4311 	ld	a,b
   0F11 CE FF              4312 	adc	a,#0xFF
   0F13 DD 77 FF           4313 	ld	-1 (ix),a
                           4314 ;demo.c:477: cmd.source_x = 127+font_x[cidx];
   0F16 3Er38              4315 	ld	a,#<_font_x
   0F18 DD 86 FE           4316 	add	a,-2 (ix)
   0F1B 5F                 4317 	ld	e,a
   0F1C 3Es0E              4318 	ld	a,#>_font_x
   0F1E DD 8E FF           4319 	adc	a,-1 (ix)
   0F21 57                 4320 	ld	d,a
   0F22 1A                 4321 	ld	a,(de)
   0F23 5F                 4322 	ld	e,a
   0F24 16 00              4323 	ld	d,#0x00
   0F26 21 7F 00           4324 	ld	hl,#0x007F
   0F29 19                 4325 	add	hl,de
   0F2A EB                 4326 	ex	de,hl
   0F2B 21r2As41           4327 	ld	hl,#_cmd
   0F2E 73                 4328 	ld	(hl),e
   0F2F 23                 4329 	inc	hl
   0F30 72                 4330 	ld	(hl),d
                           4331 ;demo.c:478: cmd.source_y = 512+font_y[cidx];
   0F31 11r2Cs41           4332 	ld	de,#_cmd + 2
   0F34 3Er78              4333 	ld	a,#<_font_y
   0F36 DD 86 FE           4334 	add	a,-2 (ix)
   0F39 4F                 4335 	ld	c,a
   0F3A 3Es0E              4336 	ld	a,#>_font_y
   0F3C DD 8E FF           4337 	adc	a,-1 (ix)
   0F3F 47                 4338 	ld	b,a
   0F40 0A                 4339 	ld	a,(bc)
   0F41 4F                 4340 	ld	c,a
   0F42 06 00              4341 	ld	b,#0x00
   0F44 21 00 02           4342 	ld	hl,#0x0200
   0F47 09                 4343 	add	hl,bc
   0F48 4D                 4344 	ld	c,l
   0F49 44                 4345 	ld	b,h
   0F4A EB                 4346 	ex	de,hl
   0F4B 71                 4347 	ld	(hl),c
   0F4C 23                 4348 	inc	hl
   0F4D 70                 4349 	ld	(hl),b
                           4350 ;demo.c:479: cmd.dest_x = lx;
   0F4E 01r2Es41           4351 	ld	bc,#_cmd + 4
   0F51 21rBCs41           4352 	ld	hl,#_lx + 0
   0F54 5E                 4353 	ld	e,(hl)
   0F55 16 00              4354 	ld	d,#0x00
   0F57 69                 4355 	ld	l,c
   0F58 60                 4356 	ld	h,b
   0F59 73                 4357 	ld	(hl),e
   0F5A 23                 4358 	inc	hl
   0F5B 72                 4359 	ld	(hl),d
                           4360 ;demo.c:480: cmd.dest_y = ly;
   0F5C 01r30s41           4361 	ld	bc,#_cmd + 6
   0F5F 21rBDs41           4362 	ld	hl,#_ly + 0
   0F62 5E                 4363 	ld	e,(hl)
   0F63 16 00              4364 	ld	d,#0x00
   0F65 69                 4365 	ld	l,c
   0F66 60                 4366 	ld	h,b
   0F67 73                 4367 	ld	(hl),e
   0F68 23                 4368 	inc	hl
   0F69 72                 4369 	ld	(hl),d
                           4370 ;demo.c:481: cmd.size_x = font_w[cidx];
   0F6A 01r32s41           4371 	ld	bc,#_cmd + 8
   0F6D 3ErB8              4372 	ld	a,#<_font_w
   0F6F DD 86 FE           4373 	add	a,-2 (ix)
   0F72 5F                 4374 	ld	e,a
   0F73 3Es0E              4375 	ld	a,#>_font_w
   0F75 DD 8E FF           4376 	adc	a,-1 (ix)
   0F78 57                 4377 	ld	d,a
   0F79 1A                 4378 	ld	a,(de)
   0F7A 5F                 4379 	ld	e,a
   0F7B 16 00              4380 	ld	d,#0x00
   0F7D 69                 4381 	ld	l,c
   0F7E 60                 4382 	ld	h,b
   0F7F 73                 4383 	ld	(hl),e
   0F80 23                 4384 	inc	hl
   0F81 72                 4385 	ld	(hl),d
                           4386 ;demo.c:482: cmd.size_y = 8;
   0F82 21r34s41           4387 	ld	hl, #_cmd + 10
   0F85 36 08              4388 	ld	(hl),#0x08
   0F87 23                 4389 	inc	hl
   0F88 36 00              4390 	ld	(hl),#0x00
                           4391 ;demo.c:483: cmd.argument = 0x00;
   0F8A 3E 00              4392 	ld	a,#0x00
   0F8C 32r37s41           4393 	ld	(#_cmd + 13),a
                           4394 ;demo.c:484: cmd.command = 0x90; // logical vram to vram
   0F8F 3E 90              4395 	ld	a,#0x90
   0F91 32r38s41           4396 	ld	(#_cmd + 14),a
                           4397 ;demo.c:485: vdp_copier(&cmd);
   0F94 21r2As41           4398 	ld	hl,#_cmd
   0F97 E5                 4399 	push	hl
   0F98 CDr00s00           4400 	call	_vdp_copier
   0F9B F1                 4401 	pop	af
                           4402 ;demo.c:486: lx+=font_w[cidx]-1;
   0F9C 3ErB8              4403 	ld	a,#<_font_w
   0F9E DD 86 FE           4404 	add	a,-2 (ix)
   0FA1 4F                 4405 	ld	c,a
   0FA2 3Es0E              4406 	ld	a,#>_font_w
   0FA4 DD 8E FF           4407 	adc	a,-1 (ix)
   0FA7 47                 4408 	ld	b,a
   0FA8 0A                 4409 	ld	a,(bc)
   0FA9 4F                 4410 	ld	c,a
   0FAA 0D                 4411 	dec	c
   0FAB 21rBCs41           4412 	ld	hl,#_lx
   0FAE 7E                 4413 	ld	a,(hl)
   0FAF 81                 4414 	add	a,c
   0FB0 77                 4415 	ld	(hl),a
   0FB1 DD F9              4416 	ld	sp,ix
   0FB3 DD E1              4417 	pop	ix
   0FB5 C9                 4418 	ret
   0FB6                    4419 _do_letter_end::
                           4420 ;demo.c:490: void do_letter_tall(char cc) {
                           4421 ;	---------------------------------
                           4422 ; Function do_letter_tall
                           4423 ; ---------------------------------
   0FB6                    4424 _do_letter_tall_start::
   0FB6                    4425 _do_letter_tall:
   0FB6 DD E5              4426 	push	ix
   0FB8 DD 21 00 00        4427 	ld	ix,#0
   0FBC DD 39              4428 	add	ix,sp
   0FBE F5                 4429 	push	af
                           4430 ;demo.c:491: int cidx = cc - 65;
   0FBF DD 4E 04           4431 	ld	c,4 (ix)
   0FC2 DD 7E 04           4432 	ld	a,4 (ix)
   0FC5 17                 4433 	rla	
   0FC6 9F                 4434 	sbc	a,a
   0FC7 47                 4435 	ld	b,a
   0FC8 79                 4436 	ld	a,c
   0FC9 C6 BF              4437 	add	a,#0xBF
   0FCB DD 77 FE           4438 	ld	-2 (ix),a
   0FCE 78                 4439 	ld	a,b
   0FCF CE FF              4440 	adc	a,#0xFF
   0FD1 DD 77 FF           4441 	ld	-1 (ix),a
                           4442 ;demo.c:492: cmd.source_x = 127+font_x[cidx];
   0FD4 3Er38              4443 	ld	a,#<_font_x
   0FD6 DD 86 FE           4444 	add	a,-2 (ix)
   0FD9 5F                 4445 	ld	e,a
   0FDA 3Es0E              4446 	ld	a,#>_font_x
   0FDC DD 8E FF           4447 	adc	a,-1 (ix)
   0FDF 57                 4448 	ld	d,a
   0FE0 1A                 4449 	ld	a,(de)
   0FE1 5F                 4450 	ld	e,a
   0FE2 16 00              4451 	ld	d,#0x00
   0FE4 21 7F 00           4452 	ld	hl,#0x007F
   0FE7 19                 4453 	add	hl,de
   0FE8 EB                 4454 	ex	de,hl
   0FE9 21r2As41           4455 	ld	hl,#_cmd
   0FEC 73                 4456 	ld	(hl),e
   0FED 23                 4457 	inc	hl
   0FEE 72                 4458 	ld	(hl),d
                           4459 ;demo.c:493: cmd.source_y = 512+font_y[cidx];
   0FEF 11r2Cs41           4460 	ld	de,#_cmd + 2
   0FF2 3Er78              4461 	ld	a,#<_font_y
   0FF4 DD 86 FE           4462 	add	a,-2 (ix)
   0FF7 4F                 4463 	ld	c,a
   0FF8 3Es0E              4464 	ld	a,#>_font_y
   0FFA DD 8E FF           4465 	adc	a,-1 (ix)
   0FFD 47                 4466 	ld	b,a
   0FFE 0A                 4467 	ld	a,(bc)
   0FFF 4F                 4468 	ld	c,a
   1000 06 00              4469 	ld	b,#0x00
   1002 21 00 02           4470 	ld	hl,#0x0200
   1005 09                 4471 	add	hl,bc
   1006 4D                 4472 	ld	c,l
   1007 44                 4473 	ld	b,h
   1008 EB                 4474 	ex	de,hl
   1009 71                 4475 	ld	(hl),c
   100A 23                 4476 	inc	hl
   100B 70                 4477 	ld	(hl),b
                           4478 ;demo.c:494: cmd.dest_x = lx;
   100C 01r2Es41           4479 	ld	bc,#_cmd + 4
   100F 21rBCs41           4480 	ld	hl,#_lx + 0
   1012 5E                 4481 	ld	e,(hl)
   1013 16 00              4482 	ld	d,#0x00
   1015 69                 4483 	ld	l,c
   1016 60                 4484 	ld	h,b
   1017 73                 4485 	ld	(hl),e
   1018 23                 4486 	inc	hl
   1019 72                 4487 	ld	(hl),d
                           4488 ;demo.c:495: cmd.dest_y = ly;
   101A 01r30s41           4489 	ld	bc,#_cmd + 6
   101D 21rBDs41           4490 	ld	hl,#_ly + 0
   1020 5E                 4491 	ld	e,(hl)
   1021 16 00              4492 	ld	d,#0x00
   1023 69                 4493 	ld	l,c
   1024 60                 4494 	ld	h,b
   1025 73                 4495 	ld	(hl),e
   1026 23                 4496 	inc	hl
   1027 72                 4497 	ld	(hl),d
                           4498 ;demo.c:496: cmd.size_x = font_w[cidx];
   1028 01r32s41           4499 	ld	bc,#_cmd + 8
   102B 3ErB8              4500 	ld	a,#<_font_w
   102D DD 86 FE           4501 	add	a,-2 (ix)
   1030 5F                 4502 	ld	e,a
   1031 3Es0E              4503 	ld	a,#>_font_w
   1033 DD 8E FF           4504 	adc	a,-1 (ix)
   1036 57                 4505 	ld	d,a
   1037 1A                 4506 	ld	a,(de)
   1038 5F                 4507 	ld	e,a
   1039 16 00              4508 	ld	d,#0x00
   103B 69                 4509 	ld	l,c
   103C 60                 4510 	ld	h,b
   103D 73                 4511 	ld	(hl),e
   103E 23                 4512 	inc	hl
   103F 72                 4513 	ld	(hl),d
                           4514 ;demo.c:497: cmd.size_y = 8;
   1040 21r34s41           4515 	ld	hl, #_cmd + 10
   1043 36 08              4516 	ld	(hl),#0x08
   1045 23                 4517 	inc	hl
   1046 36 00              4518 	ld	(hl),#0x00
                           4519 ;demo.c:498: cmd.argument = 0x00;
   1048 3E 00              4520 	ld	a,#0x00
   104A 32r37s41           4521 	ld	(#_cmd + 13),a
                           4522 ;demo.c:499: cmd.command = 0x90; // logical vram to vram
   104D 3E 90              4523 	ld	a,#0x90
   104F 32r38s41           4524 	ld	(#_cmd + 14),a
                           4525 ;demo.c:500: vdp_copier(&cmd);
   1052 21r2As41           4526 	ld	hl,#_cmd
   1055 E5                 4527 	push	hl
   1056 CDr00s00           4528 	call	_vdp_copier
   1059 F1                 4529 	pop	af
                           4530 ;demo.c:501: lx+=font_w[cidx]-1;
   105A 3ErB8              4531 	ld	a,#<_font_w
   105C DD 86 FE           4532 	add	a,-2 (ix)
   105F 4F                 4533 	ld	c,a
   1060 3Es0E              4534 	ld	a,#>_font_w
   1062 DD 8E FF           4535 	adc	a,-1 (ix)
   1065 47                 4536 	ld	b,a
   1066 0A                 4537 	ld	a,(bc)
   1067 4F                 4538 	ld	c,a
   1068 0D                 4539 	dec	c
   1069 21rBCs41           4540 	ld	hl,#_lx
   106C 7E                 4541 	ld	a,(hl)
   106D 81                 4542 	add	a,c
   106E 77                 4543 	ld	(hl),a
   106F DD F9              4544 	ld	sp,ix
   1071 DD E1              4545 	pop	ix
   1073 C9                 4546 	ret
   1074                    4547 _do_letter_tall_end::
                           4548 ;demo.c:504: void drawstr(char* str, uint8_t x, uint8_t y) {
                           4549 ;	---------------------------------
                           4550 ; Function drawstr
                           4551 ; ---------------------------------
   1074                    4552 _drawstr_start::
   1074                    4553 _drawstr:
   1074 DD E5              4554 	push	ix
   1076 DD 21 00 00        4555 	ld	ix,#0
   107A DD 39              4556 	add	ix,sp
                           4557 ;demo.c:505: char* c = str;
   107C DD 4E 04           4558 	ld	c,4 (ix)
   107F DD 46 05           4559 	ld	b,5 (ix)
                           4560 ;demo.c:506: lx = x;
   1082 DD 5E 06           4561 	ld	e,6 (ix)
   1085 21rBCs41           4562 	ld	hl,#_lx + 0
   1088 73                 4563 	ld	(hl), e
                           4564 ;demo.c:507: ly = y;
   1089 DD 7E 07           4565 	ld	a,7 (ix)
   108C 21rBDs41           4566 	ld	hl,#_ly + 0
   108F 77                 4567 	ld	(hl), a
                           4568 ;demo.c:508: while (*c) {
   1090                    4569 00107$:
   1090 0A                 4570 	ld	a,(bc)
   1091 57                 4571 	ld	d,a
   1092 B7                 4572 	or	a,a
   1093 28 42              4573 	jr	Z,00110$
                           4574 ;demo.c:509: char ltr = *c++; 
   1095 03                 4575 	inc	bc
                           4576 ;demo.c:510: if (ltr == ' ') lx+=4;
   1096 7A                 4577 	ld	a,d
   1097 D6 20              4578 	sub	a,#0x20
   1099 20 1E              4579 	jr	NZ,00105$
   109B FD 21rBCs41        4580 	ld	iy,#_lx
   109F FD 34 00           4581 	inc	0 (iy)
   10A2 FD 21rBCs41        4582 	ld	iy,#_lx
   10A6 FD 34 00           4583 	inc	0 (iy)
   10A9 FD 21rBCs41        4584 	ld	iy,#_lx
   10AD FD 34 00           4585 	inc	0 (iy)
   10B0 FD 21rBCs41        4586 	ld	iy,#_lx
   10B4 FD 34 00           4587 	inc	0 (iy)
   10B7 18 D7              4588 	jr	00107$
   10B9                    4589 00105$:
                           4590 ;demo.c:511: else if (ltr == '_') { ly+=9; lx = x; }
   10B9 7A                 4591 	ld	a,d
   10BA D6 5F              4592 	sub	a,#0x5F
   10BC 20 0D              4593 	jr	NZ,00102$
   10BE 21rBDs41           4594 	ld	hl,#_ly
   10C1 7E                 4595 	ld	a,(hl)
   10C2 C6 09              4596 	add	a,#0x09
   10C4 77                 4597 	ld	(hl),a
   10C5 21rBCs41           4598 	ld	hl,#_lx + 0
   10C8 73                 4599 	ld	(hl), e
   10C9 18 C5              4600 	jr	00107$
   10CB                    4601 00102$:
                           4602 ;demo.c:512: else do_letter(ltr);
   10CB C5                 4603 	push	bc
   10CC D5                 4604 	push	de
   10CD D5                 4605 	push	de
   10CE 33                 4606 	inc	sp
   10CF CDrF8s0E           4607 	call	_do_letter
   10D2 33                 4608 	inc	sp
   10D3 D1                 4609 	pop	de
   10D4 C1                 4610 	pop	bc
   10D5 18 B9              4611 	jr	00107$
   10D7                    4612 00110$:
   10D7 DD E1              4613 	pop	ix
   10D9 C9                 4614 	ret
   10DA                    4615 _drawstr_end::
                           4616 ;demo.c:519: void drawstrslow(char* str, uint8_t x, uint8_t y) {
                           4617 ;	---------------------------------
                           4618 ; Function drawstrslow
                           4619 ; ---------------------------------
   10DA                    4620 _drawstrslow_start::
   10DA                    4621 _drawstrslow:
   10DA DD E5              4622 	push	ix
   10DC DD 21 00 00        4623 	ld	ix,#0
   10E0 DD 39              4624 	add	ix,sp
                           4625 ;demo.c:520: char* c = str+ltrpointer;
   10E2 21rBEs41           4626 	ld	hl,#_ltrpointer
   10E5 DD 7E 04           4627 	ld	a,4 (ix)
   10E8 86                 4628 	add	a,(hl)
   10E9 4F                 4629 	ld	c,a
   10EA DD 7E 05           4630 	ld	a,5 (ix)
   10ED 23                 4631 	inc	hl
   10EE 8E                 4632 	adc	a,(hl)
   10EF 47                 4633 	ld	b,a
                           4634 ;demo.c:521: if (ltrpointer > slowend) return;
   10F0 21rC0s41           4635 	ld	hl,#_slowend
   10F3 7E                 4636 	ld	a,(hl)
   10F4 FD 21rBEs41        4637 	ld	iy,#_ltrpointer
   10F8 FD 96 00           4638 	sub	a,0 (iy)
   10FB 23                 4639 	inc	hl
   10FC 7E                 4640 	ld	a,(hl)
   10FD FD 21rBEs41        4641 	ld	iy,#_ltrpointer
   1101 FD 9E 01           4642 	sbc	a,1 (iy)
   1104 F2r0As11           4643 	jp	P,00102$
   1107 C3r75s11           4644 	jp	00114$
   110A                    4645 00102$:
                           4646 ;demo.c:522: if (ltrpointer == 0) {
   110A 3ArBEs41           4647 	ld	a,(#_ltrpointer+0)
   110D 21rBFs41           4648 	ld	hl,#_ltrpointer + 1
   1110 B6                 4649 	or	a,(hl)
   1111 20 0E              4650 	jr	NZ,00111$
                           4651 ;demo.c:523: lx = x;
   1113 DD 7E 06           4652 	ld	a,6 (ix)
   1116 21rBCs41           4653 	ld	hl,#_lx + 0
   1119 77                 4654 	ld	(hl), a
                           4655 ;demo.c:524: ly = y;
   111A DD 7E 07           4656 	ld	a,7 (ix)
   111D 21rBDs41           4657 	ld	hl,#_ly + 0
   1120 77                 4658 	ld	(hl), a
                           4659 ;demo.c:526: while (*c) {
   1121                    4660 00111$:
   1121 0A                 4661 	ld	a,(bc)
   1122 4F                 4662 	ld	c,a
   1123 B7                 4663 	or	a,a
   1124 28 3F              4664 	jr	Z,00113$
                           4665 ;demo.c:527: char ltr = *c++; 
                           4666 ;demo.c:528: if (ltr == ' ') lx+=4;
   1126 79                 4667 	ld	a,c
   1127 D6 20              4668 	sub	a,#0x20
   1129 20 1E              4669 	jr	NZ,00109$
   112B FD 21rBCs41        4670 	ld	iy,#_lx
   112F FD 34 00           4671 	inc	0 (iy)
   1132 FD 21rBCs41        4672 	ld	iy,#_lx
   1136 FD 34 00           4673 	inc	0 (iy)
   1139 FD 21rBCs41        4674 	ld	iy,#_lx
   113D FD 34 00           4675 	inc	0 (iy)
   1140 FD 21rBCs41        4676 	ld	iy,#_lx
   1144 FD 34 00           4677 	inc	0 (iy)
   1147 18 1C              4678 	jr	00113$
   1149                    4679 00109$:
                           4680 ;demo.c:529: else if (ltr == '_') { ly+=9; lx = x; }
   1149 79                 4681 	ld	a,c
   114A D6 5F              4682 	sub	a,#0x5F
   114C 20 10              4683 	jr	NZ,00106$
   114E 21rBDs41           4684 	ld	hl,#_ly
   1151 7E                 4685 	ld	a,(hl)
   1152 C6 09              4686 	add	a,#0x09
   1154 77                 4687 	ld	(hl),a
   1155 DD 7E 06           4688 	ld	a,6 (ix)
   1158 21rBCs41           4689 	ld	hl,#_lx + 0
   115B 77                 4690 	ld	(hl), a
   115C 18 07              4691 	jr	00113$
   115E                    4692 00106$:
                           4693 ;demo.c:530: else do_letter(ltr);
   115E 79                 4694 	ld	a,c
   115F F5                 4695 	push	af
   1160 33                 4696 	inc	sp
   1161 CDrF8s0E           4697 	call	_do_letter
   1164 33                 4698 	inc	sp
                           4699 ;demo.c:531: break;
   1165                    4700 00113$:
                           4701 ;demo.c:534: ltrpointer++;
   1165 FD 21rBEs41        4702 	ld	iy,#_ltrpointer
   1169 FD 34 00           4703 	inc	0 (iy)
   116C 20 07              4704 	jr	NZ,00125$
   116E FD 21rBEs41        4705 	ld	iy,#_ltrpointer
   1172 FD 34 01           4706 	inc	1 (iy)
   1175                    4707 00125$:
   1175                    4708 00114$:
   1175 DD E1              4709 	pop	ix
   1177 C9                 4710 	ret
   1178                    4711 _drawstrslow_end::
                           4712 ;demo.c:537: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           4713 ;	---------------------------------
                           4714 ; Function drawstr2x
                           4715 ; ---------------------------------
   1178                    4716 _drawstr2x_start::
   1178                    4717 _drawstr2x:
   1178 DD E5              4718 	push	ix
   117A DD 21 00 00        4719 	ld	ix,#0
   117E DD 39              4720 	add	ix,sp
                           4721 ;demo.c:538: char* c = str;
   1180 DD 4E 04           4722 	ld	c,4 (ix)
   1183 DD 46 05           4723 	ld	b,5 (ix)
                           4724 ;demo.c:539: lx = x;
   1186 DD 5E 06           4725 	ld	e,6 (ix)
   1189 21rBCs41           4726 	ld	hl,#_lx + 0
   118C 73                 4727 	ld	(hl), e
                           4728 ;demo.c:540: ly = y;
   118D DD 7E 07           4729 	ld	a,7 (ix)
   1190 21rBDs41           4730 	ld	hl,#_ly + 0
   1193 77                 4731 	ld	(hl), a
                           4732 ;demo.c:541: while (*c) {
   1194                    4733 00107$:
   1194 0A                 4734 	ld	a,(bc)
   1195 57                 4735 	ld	d,a
   1196 B7                 4736 	or	a,a
   1197 28 2D              4737 	jr	Z,00110$
                           4738 ;demo.c:542: char ltr = *c++; 
   1199 03                 4739 	inc	bc
                           4740 ;demo.c:543: if (ltr == ' ') lx+=4*4;
   119A 7A                 4741 	ld	a,d
   119B D6 20              4742 	sub	a,#0x20
   119D 20 09              4743 	jr	NZ,00105$
   119F 21rBCs41           4744 	ld	hl,#_lx
   11A2 7E                 4745 	ld	a,(hl)
   11A3 C6 10              4746 	add	a,#0x10
   11A5 77                 4747 	ld	(hl),a
   11A6 18 EC              4748 	jr	00107$
   11A8                    4749 00105$:
                           4750 ;demo.c:544: else if (ltr == '_') { ly+=9*4; lx = x; }
   11A8 7A                 4751 	ld	a,d
   11A9 D6 5F              4752 	sub	a,#0x5F
   11AB 20 0D              4753 	jr	NZ,00102$
   11AD 21rBDs41           4754 	ld	hl,#_ly
   11B0 7E                 4755 	ld	a,(hl)
   11B1 C6 24              4756 	add	a,#0x24
   11B3 77                 4757 	ld	(hl),a
   11B4 21rBCs41           4758 	ld	hl,#_lx + 0
   11B7 73                 4759 	ld	(hl), e
   11B8 18 DA              4760 	jr	00107$
   11BA                    4761 00102$:
                           4762 ;demo.c:545: else do_2xletter(ltr);
   11BA C5                 4763 	push	bc
   11BB D5                 4764 	push	de
   11BC D5                 4765 	push	de
   11BD 33                 4766 	inc	sp
   11BE CDr8As0B           4767 	call	_do_2xletter
   11C1 33                 4768 	inc	sp
   11C2 D1                 4769 	pop	de
   11C3 C1                 4770 	pop	bc
   11C4 18 CE              4771 	jr	00107$
   11C6                    4772 00110$:
   11C6 DD E1              4773 	pop	ix
   11C8 C9                 4774 	ret
   11C9                    4775 _drawstr2x_end::
                           4776 ;demo.c:550: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4777 ;	---------------------------------
                           4778 ; Function drawsine
                           4779 ; ---------------------------------
   11C9                    4780 _drawsine_start::
   11C9                    4781 _drawsine:
   11C9 DD E5              4782 	push	ix
   11CB DD 21 00 00        4783 	ld	ix,#0
   11CF DD 39              4784 	add	ix,sp
                           4785 ;demo.c:551: char* c = str+ltrpointer;
   11D1 21rBEs41           4786 	ld	hl,#_ltrpointer
   11D4 DD 7E 04           4787 	ld	a,4 (ix)
   11D7 86                 4788 	add	a,(hl)
   11D8 4F                 4789 	ld	c,a
   11D9 DD 7E 05           4790 	ld	a,5 (ix)
   11DC 23                 4791 	inc	hl
   11DD 8E                 4792 	adc	a,(hl)
   11DE 47                 4793 	ld	b,a
                           4794 ;demo.c:552: if (ltrpointer > slowend) return;
   11DF 21rC0s41           4795 	ld	hl,#_slowend
   11E2 7E                 4796 	ld	a,(hl)
   11E3 FD 21rBEs41        4797 	ld	iy,#_ltrpointer
   11E7 FD 96 00           4798 	sub	a,0 (iy)
   11EA 23                 4799 	inc	hl
   11EB 7E                 4800 	ld	a,(hl)
   11EC FD 21rBEs41        4801 	ld	iy,#_ltrpointer
   11F0 FD 9E 01           4802 	sbc	a,1 (iy)
   11F3 F2rF9s11           4803 	jp	P,00102$
   11F6 C3r85s12           4804 	jp	00114$
   11F9                    4805 00102$:
                           4806 ;demo.c:553: if (ltrpointer == 0) {
   11F9 3ArBEs41           4807 	ld	a,(#_ltrpointer+0)
   11FC 21rBFs41           4808 	ld	hl,#_ltrpointer + 1
   11FF B6                 4809 	or	a,(hl)
   1200 20 07              4810 	jr	NZ,00111$
                           4811 ;demo.c:554: lx = x;
   1202 DD 7E 06           4812 	ld	a,6 (ix)
   1205 21rBCs41           4813 	ld	hl,#_lx + 0
   1208 77                 4814 	ld	(hl), a
                           4815 ;demo.c:556: while (*c) {
   1209                    4816 00111$:
   1209 0A                 4817 	ld	a,(bc)
   120A 4F                 4818 	ld	c,a
   120B B7                 4819 	or	a,a
   120C CAr75s12           4820 	jp	Z,00113$
                           4821 ;demo.c:557: char ltr = *c++; 
                           4822 ;demo.c:558: ly = y+(sintabx[(lx+10>>1) & 255]>>4);
   120F 21rBCs41           4823 	ld	hl,#_lx + 0
   1212 5E                 4824 	ld	e,(hl)
   1213 16 00              4825 	ld	d,#0x00
   1215 21 0A 00           4826 	ld	hl,#0x000A
   1218 19                 4827 	add	hl,de
   1219 EB                 4828 	ex	de,hl
   121A CB 2A              4829 	sra	d
   121C CB 1B              4830 	rr	e
   121E 16 00              4831 	ld	d,#0x00
   1220 21r2Cs00           4832 	ld	hl,#_sintabx
   1223 19                 4833 	add	hl,de
   1224 7E                 4834 	ld	a,(hl)
   1225 47                 4835 	ld	b,a
   1226 CB 38              4836 	srl	b
   1228 CB 38              4837 	srl	b
   122A CB 38              4838 	srl	b
   122C CB 38              4839 	srl	b
   122E 21rBDs41           4840 	ld	hl,#_ly
   1231 DD 7E 07           4841 	ld	a,7 (ix)
   1234 80                 4842 	add	a,b
   1235 77                 4843 	ld	(hl),a
                           4844 ;demo.c:560: if (ltr == ' ') lx+=4;
   1236 79                 4845 	ld	a,c
   1237 D6 20              4846 	sub	a,#0x20
   1239 20 1E              4847 	jr	NZ,00109$
   123B FD 21rBCs41        4848 	ld	iy,#_lx
   123F FD 34 00           4849 	inc	0 (iy)
   1242 FD 21rBCs41        4850 	ld	iy,#_lx
   1246 FD 34 00           4851 	inc	0 (iy)
   1249 FD 21rBCs41        4852 	ld	iy,#_lx
   124D FD 34 00           4853 	inc	0 (iy)
   1250 FD 21rBCs41        4854 	ld	iy,#_lx
   1254 FD 34 00           4855 	inc	0 (iy)
   1257 18 1C              4856 	jr	00113$
   1259                    4857 00109$:
                           4858 ;demo.c:561: else if (ltr == '_') { ly+=9; lx = x; }
   1259 79                 4859 	ld	a,c
   125A D6 5F              4860 	sub	a,#0x5F
   125C 20 10              4861 	jr	NZ,00106$
   125E 21rBDs41           4862 	ld	hl,#_ly
   1261 7E                 4863 	ld	a,(hl)
   1262 C6 09              4864 	add	a,#0x09
   1264 77                 4865 	ld	(hl),a
   1265 DD 7E 06           4866 	ld	a,6 (ix)
   1268 21rBCs41           4867 	ld	hl,#_lx + 0
   126B 77                 4868 	ld	(hl), a
   126C 18 07              4869 	jr	00113$
   126E                    4870 00106$:
                           4871 ;demo.c:562: else do_letter_tall(ltr);
   126E 79                 4872 	ld	a,c
   126F F5                 4873 	push	af
   1270 33                 4874 	inc	sp
   1271 CDrB6s0F           4875 	call	_do_letter_tall
   1274 33                 4876 	inc	sp
                           4877 ;demo.c:563: break;
   1275                    4878 00113$:
                           4879 ;demo.c:566: ltrpointer++;
   1275 FD 21rBEs41        4880 	ld	iy,#_ltrpointer
   1279 FD 34 00           4881 	inc	0 (iy)
   127C 20 07              4882 	jr	NZ,00126$
   127E FD 21rBEs41        4883 	ld	iy,#_ltrpointer
   1282 FD 34 01           4884 	inc	1 (iy)
   1285                    4885 00126$:
   1285                    4886 00114$:
   1285 DD E1              4887 	pop	ix
   1287 C9                 4888 	ret
   1288                    4889 _drawsine_end::
                           4890 ;demo.c:569: void font() {
                           4891 ;	---------------------------------
                           4892 ; Function font
                           4893 ; ---------------------------------
   1288                    4894 _font_start::
   1288                    4895 _font:
                           4896 ;demo.c:570: slowend = 128;
   1288 21rC0s41           4897 	ld	hl,#_slowend + 0
   128B 36 80              4898 	ld	(hl), #0x80
   128D 21rC1s41           4899 	ld	hl,#_slowend + 1
   1290 36 00              4900 	ld	(hl), #0x00
                           4901 ;demo.c:571: drawstrslow("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PARTY PEOPLE",74,60);
   1292 21 4A 3C           4902 	ld	hl,#0x3C4A
   1295 E5                 4903 	push	hl
   1296 21rA0s12           4904 	ld	hl,#__str_6
   1299 E5                 4905 	push	hl
   129A CDrDAs10           4906 	call	_drawstrslow
   129D F1                 4907 	pop	af
   129E F1                 4908 	pop	af
   129F C9                 4909 	ret
   12A0                    4910 _font_end::
   12A0                    4911 __str_6:
   12A0 44 49 47 49 54 41  4912 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   12DC 4F 4E 5F 5F 20 20  4913 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PART"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F 5F 5F 4D 41
        4B 45 20 53 4F 4D
        45 20 4E 4F 49 53
        45 20 50 41 52 54
   1318 59 20 50 45 4F 50  4914 	.ascii "Y PEOPLE"
        4C 45
   1320 00                 4915 	.db 0x00
                           4916 ;demo.c:579: void twister() {
                           4917 ;	---------------------------------
                           4918 ; Function twister
                           4919 ; ---------------------------------
   1321                    4920 _twister_start::
   1321                    4921 _twister:
   1321 DD E5              4922 	push	ix
   1323 DD 21 00 00        4923 	ld	ix,#0
   1327 DD 39              4924 	add	ix,sp
   1329 F5                 4925 	push	af
   132A F5                 4926 	push	af
                           4927 ;demo.c:583: if (twinited == 0) {
   132B 3ArC4s41           4928 	ld	a,(#_twinited+0)
   132E FD 21rC4s41        4929 	ld	iy,#_twinited
   1332 FD B6 01           4930 	or	a,1 (iy)
   1335 C2r57s14           4931 	jp	NZ,00102$
                           4932 ;demo.c:584: cmd.size_x = 74;
   1338 21r32s41           4933 	ld	hl, #_cmd + 8
   133B 36 4A              4934 	ld	(hl),#0x4A
   133D 23                 4935 	inc	hl
   133E 36 00              4936 	ld	(hl),#0x00
                           4937 ;demo.c:585: cmd.size_y = 1;
   1340 21r34s41           4938 	ld	hl, #_cmd + 10
   1343 36 01              4939 	ld	(hl),#0x01
   1345 23                 4940 	inc	hl
   1346 36 00              4941 	ld	(hl),#0x00
                           4942 ;demo.c:586: cmd.data = 0;
                           4943 ;demo.c:587: cmd.argument = 0x00; // from 70xY to left
   1348 3E 00              4944 	ld	a,#0x00
   134A 32r36s41           4945 	ld	(#_cmd + 12),a
   134D 32r37s41           4946 	ld	(#_cmd + 13),a
                           4947 ;demo.c:588: cmd.command = 0xd0; // vram to vram, y only
   1350 3E D0              4948 	ld	a,#0xD0
   1352 32r38s41           4949 	ld	(#_cmd + 14),a
                           4950 ;demo.c:589: cmd.source_x = 0;
   1355 21r2As41           4951 	ld	hl,#_cmd
   1358 36 00              4952 	ld	(hl),#0x00
   135A 23                 4953 	inc	hl
   135B 36 00              4954 	ld	(hl),#0x00
                           4955 ;demo.c:590: cmd.source_y = 0;
   135D 01r2Cs41           4956 	ld	bc,#_cmd + 2
   1360 69                 4957 	ld	l,c
   1361 60                 4958 	ld	h,b
   1362 36 00              4959 	ld	(hl),#0x00
   1364 23                 4960 	inc	hl
   1365 36 00              4961 	ld	(hl),#0x00
                           4962 ;demo.c:592: for (y = 0; y < 106; y+=1) {
   1367 DD 36 FE 00        4963 	ld	-2 (ix),#0x00
   136B DD 36 FF 00        4964 	ld	-1 (ix),#0x00
   136F                    4965 00105$:
   136F DD 7E FE           4966 	ld	a,-2 (ix)
   1372 D6 6A              4967 	sub	a,#0x6A
   1374 DD 7E FF           4968 	ld	a,-1 (ix)
   1377 DE 00              4969 	sbc	a,#0x00
   1379 F2r02s14           4970 	jp	P,00108$
                           4971 ;demo.c:593: waitVB();
   137C 76                 4972 		halt 
                           4973 ;demo.c:594: cmd.dest_x = 0;
   137D 11r2Es41           4974 	ld	de,#_cmd + 4
   1380 EB                 4975 	ex	de,hl
   1381 36 00              4976 	ld	(hl),#0x00
   1383 23                 4977 	inc	hl
   1384 36 00              4978 	ld	(hl),#0x00
                           4979 ;demo.c:595: cmd.dest_y = 106+y;
   1386 11r30s41           4980 	ld	de,#_cmd + 6
   1389 DD 7E FE           4981 	ld	a,-2 (ix)
   138C C6 6A              4982 	add	a,#0x6A
   138E 4F                 4983 	ld	c,a
   138F DD 7E FF           4984 	ld	a,-1 (ix)
   1392 CE 00              4985 	adc	a,#0x00
   1394 47                 4986 	ld	b,a
   1395 EB                 4987 	ex	de,hl
   1396 71                 4988 	ld	(hl),c
   1397 23                 4989 	inc	hl
   1398 70                 4990 	ld	(hl),b
                           4991 ;demo.c:596: vdp_copier(&cmd);
   1399 C5                 4992 	push	bc
   139A 21r2As41           4993 	ld	hl,#_cmd
   139D E5                 4994 	push	hl
   139E CDr00s00           4995 	call	_vdp_copier
   13A1 F1                 4996 	pop	af
   13A2 C1                 4997 	pop	bc
                           4998 ;demo.c:597: cmd.dest_x = 256-74;
   13A3 11r2Es41           4999 	ld	de,#_cmd + 4
   13A6 EB                 5000 	ex	de,hl
   13A7 36 B6              5001 	ld	(hl),#0xB6
   13A9 23                 5002 	inc	hl
   13AA 36 00              5003 	ld	(hl),#0x00
                           5004 ;demo.c:598: cmd.dest_y = 106+y;
   13AC 11r30s41           5005 	ld	de,#_cmd + 6
   13AF EB                 5006 	ex	de,hl
   13B0 71                 5007 	ld	(hl),c
   13B1 23                 5008 	inc	hl
   13B2 70                 5009 	ld	(hl),b
                           5010 ;demo.c:599: vdp_copier(&cmd);
   13B3 21r2As41           5011 	ld	hl,#_cmd
   13B6 E5                 5012 	push	hl
   13B7 CDr00s00           5013 	call	_vdp_copier
   13BA F1                 5014 	pop	af
                           5015 ;demo.c:601: cmd.dest_x = 0;
   13BB 21r2Es41           5016 	ld	hl, #_cmd + 4
   13BE 36 00              5017 	ld	(hl),#0x00
   13C0 23                 5018 	inc	hl
   13C1 36 00              5019 	ld	(hl),#0x00
                           5020 ;demo.c:602: cmd.dest_y = 106-y;
   13C3 01r30s41           5021 	ld	bc,#_cmd + 6
   13C6 3E 6A              5022 	ld	a,#0x6A
   13C8 DD 96 FE           5023 	sub	a,-2 (ix)
   13CB 5F                 5024 	ld	e,a
   13CC 3E 00              5025 	ld	a,#0x00
   13CE DD 9E FF           5026 	sbc	a,-1 (ix)
   13D1 57                 5027 	ld	d,a
   13D2 69                 5028 	ld	l,c
   13D3 60                 5029 	ld	h,b
   13D4 73                 5030 	ld	(hl),e
   13D5 23                 5031 	inc	hl
   13D6 72                 5032 	ld	(hl),d
                           5033 ;demo.c:603: vdp_copier(&cmd);
   13D7 D5                 5034 	push	de
   13D8 21r2As41           5035 	ld	hl,#_cmd
   13DB E5                 5036 	push	hl
   13DC CDr00s00           5037 	call	_vdp_copier
   13DF F1                 5038 	pop	af
   13E0 D1                 5039 	pop	de
                           5040 ;demo.c:604: cmd.dest_x = 256-74;
   13E1 21r2Es41           5041 	ld	hl, #_cmd + 4
   13E4 36 B6              5042 	ld	(hl),#0xB6
   13E6 23                 5043 	inc	hl
   13E7 36 00              5044 	ld	(hl),#0x00
                           5045 ;demo.c:605: cmd.dest_y = 106-y;
   13E9 21r30s41           5046 	ld	hl, #_cmd + 6
   13EC 73                 5047 	ld	(hl),e
   13ED 23                 5048 	inc	hl
   13EE 72                 5049 	ld	(hl),d
                           5050 ;demo.c:606: vdp_copier(&cmd);
   13EF 21r2As41           5051 	ld	hl,#_cmd
   13F2 E5                 5052 	push	hl
   13F3 CDr00s00           5053 	call	_vdp_copier
   13F6 F1                 5054 	pop	af
                           5055 ;demo.c:592: for (y = 0; y < 106; y+=1) {
   13F7 DD 34 FE           5056 	inc	-2 (ix)
   13FA 20 03              5057 	jr	NZ,00130$
   13FC DD 34 FF           5058 	inc	-1 (ix)
   13FF                    5059 00130$:
   13FF C3r6Fs13           5060 	jp	00105$
   1402                    5061 00108$:
                           5062 ;demo.c:610: cmd.dest_x = 72;
   1402 21r2Es41           5063 	ld	hl, #_cmd + 4
   1405 36 48              5064 	ld	(hl),#0x48
   1407 23                 5065 	inc	hl
   1408 36 00              5066 	ld	(hl),#0x00
                           5067 ;demo.c:611: cmd.size_x = 140;
   140A 21r32s41           5068 	ld	hl, #_cmd + 8
   140D 36 8C              5069 	ld	(hl),#0x8C
   140F 23                 5070 	inc	hl
   1410 36 00              5071 	ld	(hl),#0x00
                           5072 ;demo.c:612: cmd.size_y = 2;
   1412 21r34s41           5073 	ld	hl, #_cmd + 10
   1415 36 02              5074 	ld	(hl),#0x02
   1417 23                 5075 	inc	hl
   1418 36 00              5076 	ld	(hl),#0x00
                           5077 ;demo.c:613: for (y = 212-2; y >= 0; y-=2) {
   141A 01 D2 00           5078 	ld	bc,#0x00D2
   141D                    5079 00109$:
   141D 78                 5080 	ld	a,b
   141E CB 7F              5081 	bit	7,a
   1420 20 16              5082 	jr	NZ,00112$
                           5083 ;demo.c:614: waitVB();
   1422 76                 5084 		halt 
                           5085 ;demo.c:615: cmd.dest_y = y;
   1423 11r30s41           5086 	ld	de,#_cmd + 6
   1426 EB                 5087 	ex	de,hl
   1427 71                 5088 	ld	(hl),c
   1428 23                 5089 	inc	hl
   1429 70                 5090 	ld	(hl),b
                           5091 ;demo.c:616: vdp_copier(&cmd);
   142A C5                 5092 	push	bc
   142B 21r2As41           5093 	ld	hl,#_cmd
   142E E5                 5094 	push	hl
   142F CDr00s00           5095 	call	_vdp_copier
   1432 F1                 5096 	pop	af
   1433 C1                 5097 	pop	bc
                           5098 ;demo.c:613: for (y = 212-2; y >= 0; y-=2) {
   1434 0B                 5099 	dec	bc
   1435 0B                 5100 	dec	bc
   1436 18 E5              5101 	jr	00109$
   1438                    5102 00112$:
                           5103 ;demo.c:619: twinited = 1;
   1438 21rC4s41           5104 	ld	hl,#_twinited + 0
   143B 36 01              5105 	ld	(hl), #0x01
   143D 21rC5s41           5106 	ld	hl,#_twinited + 1
   1440 36 00              5107 	ld	(hl), #0x00
                           5108 ;demo.c:620: vdp_load_palette(twister_palette);
   1442 21rA6s40           5109 	ld	hl,#_twister_palette
   1445 E5                 5110 	push	hl
   1446 CDr00s00           5111 	call	_vdp_load_palette
   1449 F1                 5112 	pop	af
                           5113 ;demo.c:621: drawstr2x("DSS",80,15);
   144A 21 50 0F           5114 	ld	hl,#0x0F50
   144D E5                 5115 	push	hl
   144E 21rA0s15           5116 	ld	hl,#__str_7
   1451 E5                 5117 	push	hl
   1452 CDr78s11           5118 	call	_drawstr2x
   1455 F1                 5119 	pop	af
   1456 F1                 5120 	pop	af
   1457                    5121 00102$:
                           5122 ;demo.c:625: cmd.size_x = 70;
   1457 21r32s41           5123 	ld	hl, #_cmd + 8
   145A 36 46              5124 	ld	(hl),#0x46
   145C 23                 5125 	inc	hl
   145D 36 00              5126 	ld	(hl),#0x00
                           5127 ;demo.c:626: cmd.size_y = 2;
   145F 21r34s41           5128 	ld	hl, #_cmd + 10
   1462 36 02              5129 	ld	(hl),#0x02
   1464 23                 5130 	inc	hl
   1465 36 00              5131 	ld	(hl),#0x00
                           5132 ;demo.c:627: cmd.data = 0;
   1467 3E 00              5133 	ld	a,#0x00
   1469 32r36s41           5134 	ld	(#_cmd + 12),a
                           5135 ;demo.c:628: cmd.argument = 0x04; // from 70xY to left
   146C 3E 04              5136 	ld	a,#0x04
   146E 32r37s41           5137 	ld	(#_cmd + 13),a
                           5138 ;demo.c:629: cmd.command = 0xe0; // vram to vram, y only
   1471 01r38s41           5139 	ld	bc,#_cmd + 14
   1474 3E E0              5140 	ld	a,#0xE0
   1476 02                 5141 	ld	(bc),a
                           5142 ;demo.c:630: cmd.source_x = 70;
   1477 21r2As41           5143 	ld	hl,#_cmd
   147A 36 46              5144 	ld	(hl),#0x46
   147C 23                 5145 	inc	hl
   147D 36 00              5146 	ld	(hl),#0x00
                           5147 ;demo.c:631: cmd.dest_x = 70;
   147F 11r2Es41           5148 	ld	de,#_cmd + 4
   1482 EB                 5149 	ex	de,hl
   1483 36 46              5150 	ld	(hl),#0x46
   1485 23                 5151 	inc	hl
   1486 36 00              5152 	ld	(hl),#0x00
                           5153 ;demo.c:633: twialku++;
   1488 FD 21rC6s41        5154 	ld	iy,#_twialku
   148C FD 34 00           5155 	inc	0 (iy)
   148F 20 07              5156 	jr	NZ,00131$
   1491 FD 21rC6s41        5157 	ld	iy,#_twialku
   1495 FD 34 01           5158 	inc	1 (iy)
   1498                    5159 00131$:
                           5160 ;demo.c:635: if (twialku > 212) twialku = 212;
   1498 3E D4              5161 	ld	a,#0xD4
   149A FD 21rC6s41        5162 	ld	iy,#_twialku
   149E FD 96 00           5163 	sub	a,0 (iy)
   14A1 3E 00              5164 	ld	a,#0x00
   14A3 FD 21rC6s41        5165 	ld	iy,#_twialku
   14A7 FD 9E 01           5166 	sbc	a,1 (iy)
   14AA F2rB7s14           5167 	jp	P,00104$
   14AD 21rC6s41           5168 	ld	hl,#_twialku + 0
   14B0 36 D4              5169 	ld	(hl), #0xD4
   14B2 21rC7s41           5170 	ld	hl,#_twialku + 1
   14B5 36 00              5171 	ld	(hl), #0x00
   14B7                    5172 00104$:
                           5173 ;demo.c:637: cmd.command = 0xd0; // vram to vram, y only
   14B7 3E D0              5174 	ld	a,#0xD0
   14B9 02                 5175 	ld	(bc),a
                           5176 ;demo.c:638: for (y = 104-(twialku>>1); y < 106+(twialku>>1); y+=2) {
   14BA 21rC6s41           5177 	ld	hl,#_twialku + 0
   14BD 4E                 5178 	ld	c,(hl)
   14BE 21rC7s41           5179 	ld	hl,#_twialku + 1
   14C1 46                 5180 	ld	b,(hl)
   14C2 CB 28              5181 	sra	b
   14C4 CB 19              5182 	rr	c
   14C6 3E 68              5183 	ld	a,#0x68
   14C8 91                 5184 	sub	a,c
   14C9 4F                 5185 	ld	c,a
   14CA 3E 00              5186 	ld	a,#0x00
   14CC 98                 5187 	sbc	a,b
   14CD 47                 5188 	ld	b,a
   14CE                    5189 00113$:
   14CE 21rC6s41           5190 	ld	hl,#_twialku + 0
   14D1 5E                 5191 	ld	e,(hl)
   14D2 21rC7s41           5192 	ld	hl,#_twialku + 1
   14D5 56                 5193 	ld	d,(hl)
   14D6 CB 2A              5194 	sra	d
   14D8 CB 1B              5195 	rr	e
   14DA 21 6A 00           5196 	ld	hl,#0x006A
   14DD 19                 5197 	add	hl,de
   14DE EB                 5198 	ex	de,hl
   14DF 79                 5199 	ld	a,c
   14E0 93                 5200 	sub	a,e
   14E1 78                 5201 	ld	a,b
   14E2 9A                 5202 	sbc	a,d
   14E3 F2r2Fs15           5203 	jp	P,00116$
                           5204 ;demo.c:639: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+80;
   14E6 21r2Cs41           5205 	ld	hl,#_cmd + 2
   14E9 DD 75 FC           5206 	ld	-4 (ix),l
   14EC DD 74 FD           5207 	ld	-3 (ix),h
   14EF 59                 5208 	ld	e,c
   14F0 50                 5209 	ld	d,b
   14F1 CB 2A              5210 	sra	d
   14F3 CB 1B              5211 	rr	e
   14F5 3ArC2s41           5212 	ld	a,(#_ff+0)
   14F8 83                 5213 	add	a,e
   14F9 5F                 5214 	ld	e,a
   14FA 3ArC3s41           5215 	ld	a,(#_ff+1)
   14FD 8A                 5216 	adc	a,d
   14FE 16 00              5217 	ld	d,#0x00
   1500 21r00s00           5218 	ld	hl,#_sintab
   1503 19                 5219 	add	hl,de
   1504 5E                 5220 	ld	e,(hl)
   1505 CB 2B              5221 	sra	e
   1507 7B                 5222 	ld	a,e
   1508 17                 5223 	rla	
   1509 9F                 5224 	sbc	a,a
   150A 57                 5225 	ld	d,a
   150B 21 50 02           5226 	ld	hl,#0x0250
   150E 19                 5227 	add	hl,de
   150F EB                 5228 	ex	de,hl
   1510 DD 6E FC           5229 	ld	l,-4 (ix)
   1513 DD 66 FD           5230 	ld	h,-3 (ix)
   1516 73                 5231 	ld	(hl),e
   1517 23                 5232 	inc	hl
   1518 72                 5233 	ld	(hl),d
                           5234 ;demo.c:640: cmd.dest_y = y;
   1519 11r30s41           5235 	ld	de,#_cmd + 6
   151C EB                 5236 	ex	de,hl
   151D 71                 5237 	ld	(hl),c
   151E 23                 5238 	inc	hl
   151F 70                 5239 	ld	(hl),b
                           5240 ;demo.c:641: vdp_copier(&cmd);
   1520 C5                 5241 	push	bc
   1521 21r2As41           5242 	ld	hl,#_cmd
   1524 E5                 5243 	push	hl
   1525 CDr00s00           5244 	call	_vdp_copier
   1528 F1                 5245 	pop	af
   1529 C1                 5246 	pop	bc
                           5247 ;demo.c:638: for (y = 104-(twialku>>1); y < 106+(twialku>>1); y+=2) {
   152A 03                 5248 	inc	bc
   152B 03                 5249 	inc	bc
   152C C3rCEs14           5250 	jp	00113$
   152F                    5251 00116$:
                           5252 ;demo.c:644: msx2_palette(4,PLY_PSGReg8+ff>>2,PLY_PSGReg9+ff>>3,ff>>2);
   152F 21rC2s41           5253 	ld	hl,#_ff + 0
   1532 4E                 5254 	ld	c,(hl)
   1533 21rC3s41           5255 	ld	hl,#_ff + 1
   1536 46                 5256 	ld	b,(hl)
   1537 CB 28              5257 	sra	b
   1539 CB 19              5258 	rr	c
   153B CB 28              5259 	sra	b
   153D CB 19              5260 	rr	c
   153F 21r00s00           5261 	ld	hl,#_PLY_PSGReg9 + 0
   1542 5E                 5262 	ld	e,(hl)
   1543 16 00              5263 	ld	d,#0x00
   1545 21rC2s41           5264 	ld	hl,#_ff
   1548 7B                 5265 	ld	a,e
   1549 86                 5266 	add	a,(hl)
   154A 5F                 5267 	ld	e,a
   154B 7A                 5268 	ld	a,d
   154C 23                 5269 	inc	hl
   154D 8E                 5270 	adc	a,(hl)
   154E 57                 5271 	ld	d,a
   154F CB 2A              5272 	sra	d
   1551 CB 1B              5273 	rr	e
   1553 CB 2A              5274 	sra	d
   1555 CB 1B              5275 	rr	e
   1557 CB 2A              5276 	sra	d
   1559 CB 1B              5277 	rr	e
   155B 43                 5278 	ld	b,e
   155C 21r00s00           5279 	ld	hl,#_PLY_PSGReg8 + 0
   155F 5E                 5280 	ld	e,(hl)
   1560 16 00              5281 	ld	d,#0x00
   1562 21rC2s41           5282 	ld	hl,#_ff
   1565 7B                 5283 	ld	a,e
   1566 86                 5284 	add	a,(hl)
   1567 5F                 5285 	ld	e,a
   1568 7A                 5286 	ld	a,d
   1569 23                 5287 	inc	hl
   156A 8E                 5288 	adc	a,(hl)
   156B 57                 5289 	ld	d,a
   156C CB 2A              5290 	sra	d
   156E CB 1B              5291 	rr	e
   1570 CB 2A              5292 	sra	d
   1572 CB 1B              5293 	rr	e
   1574 79                 5294 	ld	a,c
   1575 F5                 5295 	push	af
   1576 33                 5296 	inc	sp
   1577 C5                 5297 	push	bc
   1578 33                 5298 	inc	sp
   1579 53                 5299 	ld	d,e
   157A 1E 04              5300 	ld	e,#0x04
   157C D5                 5301 	push	de
   157D CDr00s00           5302 	call	_msx2_palette
   1580 F1                 5303 	pop	af
   1581 F1                 5304 	pop	af
                           5305 ;demo.c:646: font();
   1582 CDr88s12           5306 	call	_font
                           5307 ;demo.c:648: ff+=4;
   1585 21rC2s41           5308 	ld	hl,#_ff
   1588 7E                 5309 	ld	a,(hl)
   1589 C6 04              5310 	add	a,#0x04
   158B 23                 5311 	inc	hl
   158C 2B                 5312 	dec	hl
   158D C5                 5313 	push	bc
   158E 4F                 5314 	ld	c, a
   158F 23                 5315 	inc	hl
   1590 7E                 5316 	ld	a, (hl)
   1591 47                 5317 	ld	b, a
   1592 79                 5318 	ld	a, c
   1593 2B                 5319 	dec	hl
   1594 77                 5320 	ld	(hl), a
   1595 78                 5321 	ld	a, b
   1596 C1                 5322 	pop	bc
   1597 CE 00              5323 	adc	a,#0x00
   1599 23                 5324 	inc	hl
   159A 77                 5325 	ld	(hl),a
   159B DD F9              5326 	ld	sp,ix
   159D DD E1              5327 	pop	ix
   159F C9                 5328 	ret
   15A0                    5329 _twister_end::
   15A0                    5330 __str_7:
   15A0 44 53 53           5331 	.ascii "DSS"
   15A3 00                 5332 	.db 0x00
                           5333 ;demo.c:659: void bulbs() {
                           5334 ;	---------------------------------
                           5335 ; Function bulbs
                           5336 ; ---------------------------------
   15A4                    5337 _bulbs_start::
   15A4                    5338 _bulbs:
   15A4 DD E5              5339 	push	ix
   15A6 DD 21 00 00        5340 	ld	ix,#0
   15AA DD 39              5341 	add	ix,sp
   15AC 21 FA FF           5342 	ld	hl,#-6
   15AF 39                 5343 	add	hl,sp
   15B0 F9                 5344 	ld	sp,hl
                           5345 ;demo.c:663: ender+=enderdir;
   15B1 21rD0s41           5346 	ld	hl,#_enderdir
   15B4 D5                 5347 	push	de
   15B5 FD 21rCEs41        5348 	ld	iy,#_ender
   15B9 FD E5              5349 	push	iy
   15BB D1                 5350 	pop	de
   15BC 1A                 5351 	ld	a,(de)
   15BD 86                 5352 	add	a,(hl)
   15BE 13                 5353 	inc	de
   15BF 1B                 5354 	dec	de
   15C0 C5                 5355 	push	bc
   15C1 4F                 5356 	ld	c, a
   15C2 13                 5357 	inc	de
   15C3 1A                 5358 	ld	a, (de)
   15C4 47                 5359 	ld	b, a
   15C5 79                 5360 	ld	a, c
   15C6 1B                 5361 	dec	de
   15C7 12                 5362 	ld	(de), a
   15C8 78                 5363 	ld	a, b
   15C9 C1                 5364 	pop	bc
   15CA 23                 5365 	inc	hl
   15CB 8E                 5366 	adc	a,(hl)
   15CC 13                 5367 	inc	de
   15CD 12                 5368 	ld	(de),a
   15CE D1                 5369 	pop	de
                           5370 ;demo.c:664: if (ender < 2) { enderdir = -enderdir; }
   15CF 3ArCEs41           5371 	ld	a,(#_ender+0)
   15D2 D6 02              5372 	sub	a,#0x02
   15D4 3ArCFs41           5373 	ld	a,(#_ender+1)
   15D7 DE 00              5374 	sbc	a,#0x00
   15D9 F2rFDs15           5375 	jp	P,00102$
   15DC AF                 5376 	xor	a,a
   15DD FD 21rD0s41        5377 	ld	iy,#_enderdir
   15E1 3E 00              5378 	ld	a,#0x00
   15E3 FD 9E 00           5379 	sbc	a,0 (iy)
   15E6 FD 21rD0s41        5380 	ld	iy,#_enderdir
   15EA FD 77 00           5381 	ld	0 (iy),a
   15ED FD 21rD0s41        5382 	ld	iy,#_enderdir
   15F1 3E 00              5383 	ld	a,#0x00
   15F3 FD 9E 01           5384 	sbc	a,1 (iy)
   15F6 FD 21rD0s41        5385 	ld	iy,#_enderdir
   15FA FD 77 01           5386 	ld	1 (iy),a
   15FD                    5387 00102$:
                           5388 ;demo.c:665: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   15FD 3ArCEs41           5389 	ld	a,(#_ender+0)
   1600 D6 D4              5390 	sub	a,#0xD4
   1602 3ArCFs41           5391 	ld	a,(#_ender+1)
   1605 DE 00              5392 	sbc	a,#0x00
   1607 FAr2Ds16           5393 	jp	M,00104$
   160A AF                 5394 	xor	a,a
   160B FD 21rD0s41        5395 	ld	iy,#_enderdir
   160F 3E 00              5396 	ld	a,#0x00
   1611 FD 9E 00           5397 	sbc	a,0 (iy)
   1614 21rD0s41           5398 	ld	hl,#_enderdir + 0
   1617 77                 5399 	ld	(hl), a
   1618 FD 21rD0s41        5400 	ld	iy,#_enderdir
   161C 3E 00              5401 	ld	a,#0x00
   161E FD 9E 01           5402 	sbc	a,1 (iy)
   1621 21rD1s41           5403 	ld	hl,#_enderdir + 1
   1624 77                 5404 	ld	(hl), a
   1625 2ArD2s41           5405 	ld	hl,(_sy)
   1628 2B                 5406 	dec	hl
   1629 2B                 5407 	dec	hl
   162A 22rD2s41           5408 	ld	(_sy),hl
   162D                    5409 00104$:
                           5410 ;demo.c:667: enderend = ender + 92;
   162D 3ArCEs41           5411 	ld	a,(#_ender+0)
   1630 C6 5C              5412 	add	a,#0x5C
   1632 DD 77 FE           5413 	ld	-2 (ix),a
   1635 3ArCFs41           5414 	ld	a,(#_ender+1)
   1638 CE 00              5415 	adc	a,#0x00
   163A DD 77 FF           5416 	ld	-1 (ix),a
                           5417 ;demo.c:669: if (enderend > 212) enderend = 212;
   163D 3E D4              5418 	ld	a,#0xD4
   163F DD 96 FE           5419 	sub	a,-2 (ix)
   1642 3E 00              5420 	ld	a,#0x00
   1644 DD 9E FF           5421 	sbc	a,-1 (ix)
   1647 F2r52s16           5422 	jp	P,00106$
   164A DD 36 FE D4        5423 	ld	-2 (ix),#0xD4
   164E DD 36 FF 00        5424 	ld	-1 (ix),#0x00
   1652                    5425 00106$:
                           5426 ;demo.c:670: if (enderend > 212-16) sy = 16-(212-enderend);
   1652 3E C4              5427 	ld	a,#0xC4
   1654 DD 96 FE           5428 	sub	a,-2 (ix)
   1657 3E 00              5429 	ld	a,#0x00
   1659 DD 9E FF           5430 	sbc	a,-1 (ix)
   165C F2r77s16           5431 	jp	P,00108$
   165F 3E D4              5432 	ld	a,#0xD4
   1661 DD 96 FE           5433 	sub	a,-2 (ix)
   1664 5F                 5434 	ld	e,a
   1665 3E 00              5435 	ld	a,#0x00
   1667 DD 9E FF           5436 	sbc	a,-1 (ix)
   166A 57                 5437 	ld	d,a
   166B 21rD2s41           5438 	ld	hl,#_sy
   166E 3E 10              5439 	ld	a,#0x10
   1670 93                 5440 	sub	a,e
   1671 77                 5441 	ld	(hl),a
   1672 3E 00              5442 	ld	a,#0x00
   1674 9A                 5443 	sbc	a,d
   1675 23                 5444 	inc	hl
   1676 77                 5445 	ld	(hl),a
   1677                    5446 00108$:
                           5447 ;demo.c:672: if(bulbflipper == 1) {
   1677 3ArC8s41           5448 	ld	a,(#_bulbflipper+0)
   167A D6 01              5449 	sub	a,#0x01
   167C 20 06              5450 	jr	NZ,00133$
   167E 3ArC9s41           5451 	ld	a,(#_bulbflipper+1)
   1681 B7                 5452 	or	a,a
   1682 28 03              5453 	jr	Z,00134$
   1684                    5454 00133$:
   1684 C3r3Ds17           5455 	jp	00110$
   1687                    5456 00134$:
                           5457 ;demo.c:673: cmd.size_x = 72;
   1687 11r32s41           5458 	ld	de,#_cmd + 8
   168A EB                 5459 	ex	de,hl
   168B 36 48              5460 	ld	(hl),#0x48
   168D 23                 5461 	inc	hl
   168E 36 00              5462 	ld	(hl),#0x00
                           5463 ;demo.c:674: cmd.size_y = sy;
   1690 11r34s41           5464 	ld	de,#_cmd + 10
   1693 ED 4BrD2s41        5465 	ld	bc,(_sy)
   1697 6B                 5466 	ld	l,e
   1698 62                 5467 	ld	h,d
   1699 71                 5468 	ld	(hl),c
   169A 23                 5469 	inc	hl
   169B 70                 5470 	ld	(hl),b
                           5471 ;demo.c:675: cmd.data = 0;
   169C 3E 00              5472 	ld	a,#0x00
   169E 32r36s41           5473 	ld	(#_cmd + 12),a
                           5474 ;demo.c:676: cmd.argument = 0x04; // from 72xY to left
   16A1 3E 04              5475 	ld	a,#0x04
   16A3 32r37s41           5476 	ld	(#_cmd + 13),a
                           5477 ;demo.c:677: cmd.command = 0xe0; // vram to vram, y only
   16A6 01r38s41           5478 	ld	bc,#_cmd + 14
   16A9 3E E0              5479 	ld	a,#0xE0
   16AB 02                 5480 	ld	(bc),a
                           5481 ;demo.c:678: cmd.source_x = 72;
   16AC 21r2As41           5482 	ld	hl,#_cmd
   16AF 36 48              5483 	ld	(hl),#0x48
   16B1 23                 5484 	inc	hl
   16B2 36 00              5485 	ld	(hl),#0x00
                           5486 ;demo.c:679: cmd.dest_x = 72;
   16B4 21r2Es41           5487 	ld	hl, #_cmd + 4
   16B7 36 48              5488 	ld	(hl),#0x48
   16B9 23                 5489 	inc	hl
   16BA 36 00              5490 	ld	(hl),#0x00
                           5491 ;demo.c:681: for (y = ender; y < enderend; y+=16) {
   16BC ED 4BrCEs41        5492 	ld	bc,(_ender)
   16C0 DD 71 FC           5493 	ld	-4 (ix),c
   16C3 DD 70 FD           5494 	ld	-3 (ix),b
   16C6                    5495 00112$:
   16C6 DD 7E FC           5496 	ld	a,-4 (ix)
   16C9 DD 96 FE           5497 	sub	a,-2 (ix)
   16CC DD 7E FD           5498 	ld	a,-3 (ix)
   16CF DD 9E FF           5499 	sbc	a,-1 (ix)
   16D2 F2r24s17           5500 	jp	P,00115$
                           5501 ;demo.c:682: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   16D5 01r2Cs41           5502 	ld	bc,#_cmd + 2
   16D8 3ArCAs41           5503 	ld	a,(#_ff1+0)
   16DB DD 86 FC           5504 	add	a,-4 (ix)
   16DE 5F                 5505 	ld	e,a
   16DF 3ArCBs41           5506 	ld	a,(#_ff1+1)
   16E2 DD 8E FD           5507 	adc	a,-3 (ix)
   16E5 16 00              5508 	ld	d,#0x00
   16E7 21r00s00           5509 	ld	hl,#_sintab
   16EA 19                 5510 	add	hl,de
   16EB 5E                 5511 	ld	e,(hl)
   16EC CB 2B              5512 	sra	e
   16EE 7B                 5513 	ld	a,e
   16EF 17                 5514 	rla	
   16F0 9F                 5515 	sbc	a,a
   16F1 57                 5516 	ld	d,a
   16F2 21 40 01           5517 	ld	hl,#0x0140
   16F5 19                 5518 	add	hl,de
   16F6 EB                 5519 	ex	de,hl
   16F7 69                 5520 	ld	l,c
   16F8 60                 5521 	ld	h,b
   16F9 73                 5522 	ld	(hl),e
   16FA 23                 5523 	inc	hl
   16FB 72                 5524 	ld	(hl),d
                           5525 ;demo.c:683: cmd.dest_y = y;
   16FC 11r30s41           5526 	ld	de,#_cmd + 6
   16FF EB                 5527 	ex	de,hl
   1700 DD 7E FC           5528 	ld	a,-4 (ix)
   1703 77                 5529 	ld	(hl),a
   1704 23                 5530 	inc	hl
   1705 DD 7E FD           5531 	ld	a,-3 (ix)
   1708 77                 5532 	ld	(hl),a
                           5533 ;demo.c:684: vdp_copier(&cmd);
   1709 21r2As41           5534 	ld	hl,#_cmd
   170C E5                 5535 	push	hl
   170D CDr00s00           5536 	call	_vdp_copier
   1710 F1                 5537 	pop	af
                           5538 ;demo.c:681: for (y = ender; y < enderend; y+=16) {
   1711 DD 7E FC           5539 	ld	a,-4 (ix)
   1714 C6 10              5540 	add	a,#0x10
   1716 DD 77 FC           5541 	ld	-4 (ix),a
   1719 DD 7E FD           5542 	ld	a,-3 (ix)
   171C CE 00              5543 	adc	a,#0x00
   171E DD 77 FD           5544 	ld	-3 (ix),a
   1721 C3rC6s16           5545 	jp	00112$
   1724                    5546 00115$:
                           5547 ;demo.c:686: ff1+=4;
   1724 21rCAs41           5548 	ld	hl,#_ff1
   1727 7E                 5549 	ld	a,(hl)
   1728 C6 04              5550 	add	a,#0x04
   172A 23                 5551 	inc	hl
   172B 2B                 5552 	dec	hl
   172C C5                 5553 	push	bc
   172D 4F                 5554 	ld	c, a
   172E 23                 5555 	inc	hl
   172F 7E                 5556 	ld	a, (hl)
   1730 47                 5557 	ld	b, a
   1731 79                 5558 	ld	a, c
   1732 2B                 5559 	dec	hl
   1733 77                 5560 	ld	(hl), a
   1734 78                 5561 	ld	a, b
   1735 C1                 5562 	pop	bc
   1736 CE 00              5563 	adc	a,#0x00
   1738 23                 5564 	inc	hl
   1739 77                 5565 	ld	(hl),a
   173A C3rE2s17           5566 	jp	00111$
   173D                    5567 00110$:
                           5568 ;demo.c:690: cmd.size_x = 72;
   173D 11r32s41           5569 	ld	de,#_cmd + 8
   1740 EB                 5570 	ex	de,hl
   1741 36 48              5571 	ld	(hl),#0x48
   1743 23                 5572 	inc	hl
   1744 36 00              5573 	ld	(hl),#0x00
                           5574 ;demo.c:691: cmd.size_y = sy;
   1746 01r34s41           5575 	ld	bc,#_cmd + 10
   1749 ED 5BrD2s41        5576 	ld	de,(_sy)
   174D 69                 5577 	ld	l,c
   174E 60                 5578 	ld	h,b
   174F 73                 5579 	ld	(hl),e
   1750 23                 5580 	inc	hl
   1751 72                 5581 	ld	(hl),d
                           5582 ;demo.c:692: cmd.data = 0;
   1752 11r36s41           5583 	ld	de,#_cmd + 12
   1755 3E 00              5584 	ld	a,#0x00
   1757 12                 5585 	ld	(de),a
                           5586 ;demo.c:693: cmd.argument = 0x00; // from 182xY to right
   1758 11r37s41           5587 	ld	de,#_cmd + 13
   175B 3E 00              5588 	ld	a,#0x00
   175D 12                 5589 	ld	(de),a
                           5590 ;demo.c:694: cmd.command = 0xe0; // vram to vram, y only
   175E 11r38s41           5591 	ld	de,#_cmd + 14
   1761 3E E0              5592 	ld	a,#0xE0
   1763 12                 5593 	ld	(de),a
                           5594 ;demo.c:695: cmd.source_x = 182;
   1764 21r2As41           5595 	ld	hl,#_cmd
   1767 36 B6              5596 	ld	(hl),#0xB6
   1769 23                 5597 	inc	hl
   176A 36 00              5598 	ld	(hl),#0x00
                           5599 ;demo.c:696: cmd.dest_x = 182;
   176C 11r2Es41           5600 	ld	de,#_cmd + 4
   176F 6B                 5601 	ld	l,e
   1770 62                 5602 	ld	h,d
   1771 36 B6              5603 	ld	(hl),#0xB6
   1773 23                 5604 	inc	hl
   1774 36 00              5605 	ld	(hl),#0x00
                           5606 ;demo.c:698: for (y = ender; y < enderend; y+=16) {
   1776 ED 4BrCEs41        5607 	ld	bc,(_ender)
   177A                    5608 00116$:
   177A 79                 5609 	ld	a,c
   177B DD 96 FE           5610 	sub	a,-2 (ix)
   177E 78                 5611 	ld	a,b
   177F DD 9E FF           5612 	sbc	a,-1 (ix)
   1782 F2rCCs17           5613 	jp	P,00119$
                           5614 ;demo.c:699: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1785 21r2Cs41           5615 	ld	hl,#_cmd + 2
   1788 DD 75 FA           5616 	ld	-6 (ix),l
   178B DD 74 FB           5617 	ld	-5 (ix),h
   178E 3ArCCs41           5618 	ld	a,(#_ff2+0)
   1791 81                 5619 	add	a,c
   1792 5F                 5620 	ld	e,a
   1793 3ArCDs41           5621 	ld	a,(#_ff2+1)
   1796 88                 5622 	adc	a,b
   1797 16 00              5623 	ld	d,#0x00
   1799 21r00s00           5624 	ld	hl,#_sintab
   179C 19                 5625 	add	hl,de
   179D 5E                 5626 	ld	e,(hl)
   179E CB 2B              5627 	sra	e
   17A0 7B                 5628 	ld	a,e
   17A1 17                 5629 	rla	
   17A2 9F                 5630 	sbc	a,a
   17A3 57                 5631 	ld	d,a
   17A4 21 40 01           5632 	ld	hl,#0x0140
   17A7 19                 5633 	add	hl,de
   17A8 EB                 5634 	ex	de,hl
   17A9 DD 6E FA           5635 	ld	l,-6 (ix)
   17AC DD 66 FB           5636 	ld	h,-5 (ix)
   17AF 73                 5637 	ld	(hl),e
   17B0 23                 5638 	inc	hl
   17B1 72                 5639 	ld	(hl),d
                           5640 ;demo.c:700: cmd.dest_y = y;
   17B2 11r30s41           5641 	ld	de,#_cmd + 6
   17B5 EB                 5642 	ex	de,hl
   17B6 71                 5643 	ld	(hl),c
   17B7 23                 5644 	inc	hl
   17B8 70                 5645 	ld	(hl),b
                           5646 ;demo.c:701: vdp_copier(&cmd);
   17B9 C5                 5647 	push	bc
   17BA 21r2As41           5648 	ld	hl,#_cmd
   17BD E5                 5649 	push	hl
   17BE CDr00s00           5650 	call	_vdp_copier
   17C1 F1                 5651 	pop	af
   17C2 C1                 5652 	pop	bc
                           5653 ;demo.c:698: for (y = ender; y < enderend; y+=16) {
   17C3 21 10 00           5654 	ld	hl,#0x0010
   17C6 09                 5655 	add	hl,bc
   17C7 4D                 5656 	ld	c,l
   17C8 44                 5657 	ld	b,h
   17C9 C3r7As17           5658 	jp	00116$
   17CC                    5659 00119$:
                           5660 ;demo.c:703: ff2+=4;
   17CC 21rCCs41           5661 	ld	hl,#_ff2
   17CF 7E                 5662 	ld	a,(hl)
   17D0 C6 04              5663 	add	a,#0x04
   17D2 23                 5664 	inc	hl
   17D3 2B                 5665 	dec	hl
   17D4 C5                 5666 	push	bc
   17D5 4F                 5667 	ld	c, a
   17D6 23                 5668 	inc	hl
   17D7 7E                 5669 	ld	a, (hl)
   17D8 47                 5670 	ld	b, a
   17D9 79                 5671 	ld	a, c
   17DA 2B                 5672 	dec	hl
   17DB 77                 5673 	ld	(hl), a
   17DC 78                 5674 	ld	a, b
   17DD C1                 5675 	pop	bc
   17DE CE 00              5676 	adc	a,#0x00
   17E0 23                 5677 	inc	hl
   17E1 77                 5678 	ld	(hl),a
   17E2                    5679 00111$:
                           5680 ;demo.c:706: bulbflipper = -bulbflipper;
   17E2 AF                 5681 	xor	a,a
   17E3 FD 21rC8s41        5682 	ld	iy,#_bulbflipper
   17E7 3E 00              5683 	ld	a,#0x00
   17E9 FD 9E 00           5684 	sbc	a,0 (iy)
   17EC 21rC8s41           5685 	ld	hl,#_bulbflipper + 0
   17EF 77                 5686 	ld	(hl), a
   17F0 FD 21rC8s41        5687 	ld	iy,#_bulbflipper
   17F4 3E 00              5688 	ld	a,#0x00
   17F6 FD 9E 01           5689 	sbc	a,1 (iy)
   17F9 21rC9s41           5690 	ld	hl,#_bulbflipper + 1
   17FC 77                 5691 	ld	(hl), a
   17FD DD F9              5692 	ld	sp,ix
   17FF DD E1              5693 	pop	ix
   1801 C9                 5694 	ret
   1802                    5695 _bulbs_end::
                           5696 ;demo.c:720: void animplay() {
                           5697 ;	---------------------------------
                           5698 ; Function animplay
                           5699 ; ---------------------------------
   1802                    5700 _animplay_start::
   1802                    5701 _animplay:
                           5702 ;demo.c:721: }
   1802 C9                 5703 	ret
   1803                    5704 _animplay_end::
                           5705 ;demo.c:734: void drawbox(uint8_t x, uint8_t y) {
                           5706 ;	---------------------------------
                           5707 ; Function drawbox
                           5708 ; ---------------------------------
   1803                    5709 _drawbox_start::
   1803                    5710 _drawbox:
   1803 DD E5              5711 	push	ix
   1805 DD 21 00 00        5712 	ld	ix,#0
   1809 DD 39              5713 	add	ix,sp
                           5714 ;demo.c:735: cmd.source_x = boxes_x[boxi];
   180B 21rF4s41           5715 	ld	hl,#_boxi
   180E 3ErE5              5716 	ld	a,#<_boxes_x
   1810 86                 5717 	add	a,(hl)
   1811 4F                 5718 	ld	c,a
   1812 3Es41              5719 	ld	a,#>_boxes_x
   1814 CE 00              5720 	adc	a,#0x00
   1816 47                 5721 	ld	b,a
   1817 0A                 5722 	ld	a,(bc)
   1818 4F                 5723 	ld	c,a
   1819 06 00              5724 	ld	b,#0x00
   181B 21r2As41           5725 	ld	hl,#_cmd
   181E 71                 5726 	ld	(hl),c
   181F 23                 5727 	inc	hl
   1820 70                 5728 	ld	(hl),b
                           5729 ;demo.c:736: cmd.source_y = boxes_y[boxi];
   1821 01r2Cs41           5730 	ld	bc,#_cmd + 2
   1824 3ArF4s41           5731 	ld	a,(#_boxi+0)
   1827 87                 5732 	add	a,a
   1828 C6rEA              5733 	add	a,#<_boxes_y
   182A 6F                 5734 	ld	l,a
   182B 3Es41              5735 	ld	a,#>_boxes_y
   182D CE 00              5736 	adc	a,#0x00
   182F 67                 5737 	ld	h,a
   1830 5E                 5738 	ld	e,(hl)
   1831 23                 5739 	inc	hl
   1832 56                 5740 	ld	d,(hl)
   1833 69                 5741 	ld	l,c
   1834 60                 5742 	ld	h,b
   1835 73                 5743 	ld	(hl),e
   1836 23                 5744 	inc	hl
   1837 72                 5745 	ld	(hl),d
                           5746 ;demo.c:737: cmd.dest_x = x;
   1838 01r2Es41           5747 	ld	bc,#_cmd + 4
   183B DD 5E 04           5748 	ld	e,4 (ix)
   183E 16 00              5749 	ld	d,#0x00
   1840 69                 5750 	ld	l,c
   1841 60                 5751 	ld	h,b
   1842 73                 5752 	ld	(hl),e
   1843 23                 5753 	inc	hl
   1844 72                 5754 	ld	(hl),d
                           5755 ;demo.c:738: cmd.dest_y = y;
   1845 01r30s41           5756 	ld	bc,#_cmd + 6
   1848 DD 5E 05           5757 	ld	e,5 (ix)
   184B 16 00              5758 	ld	d,#0x00
   184D 69                 5759 	ld	l,c
   184E 60                 5760 	ld	h,b
   184F 73                 5761 	ld	(hl),e
   1850 23                 5762 	inc	hl
   1851 72                 5763 	ld	(hl),d
                           5764 ;demo.c:739: cmd.size_x = 36;
   1852 21r32s41           5765 	ld	hl, #_cmd + 8
   1855 36 24              5766 	ld	(hl),#0x24
   1857 23                 5767 	inc	hl
   1858 36 00              5768 	ld	(hl),#0x00
                           5769 ;demo.c:740: cmd.size_y = 36;
   185A 21r34s41           5770 	ld	hl, #_cmd + 10
   185D 36 24              5771 	ld	(hl),#0x24
   185F 23                 5772 	inc	hl
   1860 36 00              5773 	ld	(hl),#0x00
                           5774 ;demo.c:741: cmd.data = 0;
                           5775 ;demo.c:742: cmd.argument = 0x00;
   1862 3E 00              5776 	ld	a,#0x00
   1864 32r36s41           5777 	ld	(#_cmd + 12),a
   1867 32r37s41           5778 	ld	(#_cmd + 13),a
                           5779 ;demo.c:743: cmd.command = 0x98; // TIMP sprite
   186A 3E 98              5780 	ld	a,#0x98
   186C 32r38s41           5781 	ld	(#_cmd + 14),a
                           5782 ;demo.c:744: vdp_copier(&cmd);
   186F 21r2As41           5783 	ld	hl,#_cmd
   1872 E5                 5784 	push	hl
   1873 CDr00s00           5785 	call	_vdp_copier
   1876 F1                 5786 	pop	af
                           5787 ;demo.c:746: prevx = x;
   1877 DD 7E 04           5788 	ld	a,4 (ix)
   187A 21rE1s41           5789 	ld	hl,#_prevx + 0
   187D 77                 5790 	ld	(hl), a
   187E 21rE2s41           5791 	ld	hl,#_prevx + 1
   1881 36 00              5792 	ld	(hl), #0x00
                           5793 ;demo.c:747: prevy = y;
   1883 DD 7E 05           5794 	ld	a,5 (ix)
   1886 21rE3s41           5795 	ld	hl,#_prevy + 0
   1889 77                 5796 	ld	(hl), a
   188A 21rE4s41           5797 	ld	hl,#_prevy + 1
   188D 36 00              5798 	ld	(hl), #0x00
   188F DD E1              5799 	pop	ix
   1891 C9                 5800 	ret
   1892                    5801 _drawbox_end::
                           5802 ;demo.c:761: void boxes() {
                           5803 ;	---------------------------------
                           5804 ; Function boxes
                           5805 ; ---------------------------------
   1892                    5806 _boxes_start::
   1892                    5807 _boxes:
   1892 DD E5              5808 	push	ix
   1894 DD 21 00 00        5809 	ld	ix,#0
   1898 DD 39              5810 	add	ix,sp
   189A F5                 5811 	push	af
                           5812 ;demo.c:765: if (bx < 0) return;
   189B FD 21rF5s41        5813 	ld	iy,#_bx
   189F FD CB 01 7E        5814 	bit	7,1 (iy)
   18A3 C2r55s1D           5815 	jp	NZ,00151$
                           5816 ;demo.c:767: if (bonc == 1) {
   18A6 3ArFDs41           5817 	ld	a,(#_bonc+0)
   18A9 D6 01              5818 	sub	a,#0x01
   18AB 20 06              5819 	jr	NZ,00181$
   18AD 3ArFEs41           5820 	ld	a,(#_bonc+1)
   18B0 B7                 5821 	or	a,a
   18B1 28 02              5822 	jr	Z,00182$
   18B3                    5823 00181$:
   18B3 18 4D              5824 	jr	00104$
   18B5                    5825 00182$:
                           5826 ;demo.c:769: cmd.source_x = 0;
   18B5 21r2As41           5827 	ld	hl,#_cmd
   18B8 36 00              5828 	ld	(hl),#0x00
   18BA 23                 5829 	inc	hl
   18BB 36 00              5830 	ld	(hl),#0x00
                           5831 ;demo.c:770: cmd.source_y = 256;
   18BD 21r2Cs41           5832 	ld	hl, #_cmd + 2
   18C0 36 00              5833 	ld	(hl),#0x00
   18C2 23                 5834 	inc	hl
   18C3 36 01              5835 	ld	(hl),#0x01
                           5836 ;demo.c:771: cmd.dest_x = pbx;
   18C5 01r2Es41           5837 	ld	bc,#_cmd + 4
   18C8 ED 5BrFFs41        5838 	ld	de,(_pbx)
   18CC 69                 5839 	ld	l,c
   18CD 60                 5840 	ld	h,b
   18CE 73                 5841 	ld	(hl),e
   18CF 23                 5842 	inc	hl
   18D0 72                 5843 	ld	(hl),d
                           5844 ;demo.c:772: cmd.dest_y = pbt;
   18D1 01r30s41           5845 	ld	bc,#_cmd + 6
   18D4 ED 5Br01s42        5846 	ld	de,(_pbt)
   18D8 69                 5847 	ld	l,c
   18D9 60                 5848 	ld	h,b
   18DA 73                 5849 	ld	(hl),e
   18DB 23                 5850 	inc	hl
   18DC 72                 5851 	ld	(hl),d
                           5852 ;demo.c:773: cmd.size_x = 36;
   18DD 21r32s41           5853 	ld	hl, #_cmd + 8
   18E0 36 24              5854 	ld	(hl),#0x24
   18E2 23                 5855 	inc	hl
   18E3 36 00              5856 	ld	(hl),#0x00
                           5857 ;demo.c:774: cmd.size_y = 36;
   18E5 21r34s41           5858 	ld	hl, #_cmd + 10
   18E8 36 24              5859 	ld	(hl),#0x24
   18EA 23                 5860 	inc	hl
   18EB 36 00              5861 	ld	(hl),#0x00
                           5862 ;demo.c:775: cmd.data = 0;
                           5863 ;demo.c:776: cmd.argument = 0x00;
   18ED 3E 00              5864 	ld	a,#0x00
   18EF 32r36s41           5865 	ld	(#_cmd + 12),a
   18F2 32r37s41           5866 	ld	(#_cmd + 13),a
                           5867 ;demo.c:777: cmd.command = 0xD0; // HMMM
   18F5 3E D0              5868 	ld	a,#0xD0
   18F7 32r38s41           5869 	ld	(#_cmd + 14),a
                           5870 ;demo.c:778: vdp_copier(&cmd);
   18FA 21r2As41           5871 	ld	hl,#_cmd
   18FD E5                 5872 	push	hl
   18FE CDr00s00           5873 	call	_vdp_copier
   1901 F1                 5874 	pop	af
   1902                    5875 00104$:
                           5876 ;demo.c:781: if (boxes_init == 0) {
   1902 AF                 5877 	xor	a,a
   1903 21rDEs41           5878 	ld	hl,#_boxes_init + 0
   1906 B6                 5879 	or	a,(hl)
   1907 C2r69s1A           5880 	jp	NZ,00106$
                           5881 ;demo.c:782: boxes_init = 1;
   190A FD 21rDEs41        5882 	ld	iy,#_boxes_init
   190E FD 36 00 01        5883 	ld	0 (iy),#0x01
                           5884 ;demo.c:784: cmd.size_x = 8;
   1912 21r32s41           5885 	ld	hl, #_cmd + 8
   1915 36 08              5886 	ld	(hl),#0x08
   1917 23                 5887 	inc	hl
   1918 36 00              5888 	ld	(hl),#0x00
                           5889 ;demo.c:785: cmd.size_y = 212;
   191A 21r34s41           5890 	ld	hl, #_cmd + 10
   191D 36 D4              5891 	ld	(hl),#0xD4
   191F 23                 5892 	inc	hl
   1920 36 00              5893 	ld	(hl),#0x00
                           5894 ;demo.c:786: cmd.data = 0;
                           5895 ;demo.c:787: cmd.argument = 0x00; // from 70xY to left
   1922 3E 00              5896 	ld	a,#0x00
   1924 32r36s41           5897 	ld	(#_cmd + 12),a
   1927 32r37s41           5898 	ld	(#_cmd + 13),a
                           5899 ;demo.c:788: cmd.command = 0xd0; // vram to vram, y only
   192A 01r38s41           5900 	ld	bc,#_cmd + 14
   192D 3E D0              5901 	ld	a,#0xD0
   192F 02                 5902 	ld	(bc),a
                           5903 ;demo.c:789: cmd.source_x = 248;
   1930 21r2As41           5904 	ld	hl,#_cmd
   1933 36 F8              5905 	ld	(hl),#0xF8
   1935 23                 5906 	inc	hl
   1936 36 00              5907 	ld	(hl),#0x00
                           5908 ;demo.c:790: cmd.source_y = 0;
   1938 21r2Cs41           5909 	ld	hl, #_cmd + 2
   193B 36 00              5910 	ld	(hl),#0x00
   193D 23                 5911 	inc	hl
   193E 36 00              5912 	ld	(hl),#0x00
                           5913 ;demo.c:791: cmd.dest_y = 0;
   1940 01r30s41           5914 	ld	bc,#_cmd + 6
   1943 69                 5915 	ld	l,c
   1944 60                 5916 	ld	h,b
   1945 36 00              5917 	ld	(hl),#0x00
   1947 23                 5918 	inc	hl
   1948 36 00              5919 	ld	(hl),#0x00
                           5920 ;demo.c:793: for (x = 248; x >= 0; x-=8) {
   194A DD 36 FE F8        5921 	ld	-2 (ix),#0xF8
   194E DD 36 FF 00        5922 	ld	-1 (ix),#0x00
   1952                    5923 00139$:
   1952 DD CB FF 7E        5924 	bit	7,-1 (ix)
   1956 C2rE1s19           5925 	jp	NZ,00142$
                           5926 ;demo.c:794: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1959 21rC2s41           5927 	ld	hl,#_ff + 0
   195C 5E                 5928 	ld	e,(hl)
   195D 21rC3s41           5929 	ld	hl,#_ff + 1
   1960 56                 5930 	ld	d,(hl)
   1961 CB 2A              5931 	sra	d
   1963 CB 1B              5932 	rr	e
   1965 CB 2A              5933 	sra	d
   1967 CB 1B              5934 	rr	e
   1969 21rC2s41           5935 	ld	hl,#_ff + 0
   196C 56                 5936 	ld	d,(hl)
   196D 21rC3s41           5937 	ld	hl,#_ff + 1
   1970 4E                 5938 	ld	c,(hl)
   1971 CB 29              5939 	sra	c
   1973 CB 1A              5940 	rr	d
   1975 CB 29              5941 	sra	c
   1977 CB 1A              5942 	rr	d
   1979 CB 29              5943 	sra	c
   197B CB 1A              5944 	rr	d
   197D 7B                 5945 	ld	a,e
   197E F5                 5946 	push	af
   197F 33                 5947 	inc	sp
   1980 D5                 5948 	push	de
   1981 33                 5949 	inc	sp
   1982 53                 5950 	ld	d,e
   1983 1E 04              5951 	ld	e,#0x04
   1985 D5                 5952 	push	de
   1986 CDr00s00           5953 	call	_msx2_palette
   1989 F1                 5954 	pop	af
   198A F1                 5955 	pop	af
                           5956 ;demo.c:795: ff+=2;
   198B 21rC2s41           5957 	ld	hl,#_ff
   198E 7E                 5958 	ld	a,(hl)
   198F C6 02              5959 	add	a,#0x02
   1991 23                 5960 	inc	hl
   1992 2B                 5961 	dec	hl
   1993 C5                 5962 	push	bc
   1994 4F                 5963 	ld	c, a
   1995 23                 5964 	inc	hl
   1996 7E                 5965 	ld	a, (hl)
   1997 47                 5966 	ld	b, a
   1998 79                 5967 	ld	a, c
   1999 2B                 5968 	dec	hl
   199A 77                 5969 	ld	(hl), a
   199B 78                 5970 	ld	a, b
   199C C1                 5971 	pop	bc
   199D CE 00              5972 	adc	a,#0x00
   199F 23                 5973 	inc	hl
   19A0 77                 5974 	ld	(hl),a
                           5975 ;demo.c:796: waitVB();
   19A1 76                 5976 		halt 
                           5977 ;demo.c:797: cmd.dest_x = x;
   19A2 21r2Es41           5978 	ld	hl, #_cmd + 4
   19A5 DD 7E FE           5979 	ld	a,-2 (ix)
   19A8 77                 5980 	ld	(hl),a
   19A9 23                 5981 	inc	hl
   19AA DD 7E FF           5982 	ld	a,-1 (ix)
   19AD 77                 5983 	ld	(hl),a
                           5984 ;demo.c:798: cmd.dest_y = 0;
   19AE 21r30s41           5985 	ld	hl, #_cmd + 6
   19B1 36 00              5986 	ld	(hl),#0x00
   19B3 23                 5987 	inc	hl
   19B4 36 00              5988 	ld	(hl),#0x00
                           5989 ;demo.c:799: vdp_copier(&cmd);
   19B6 21r2As41           5990 	ld	hl,#_cmd
   19B9 E5                 5991 	push	hl
   19BA CDr00s00           5992 	call	_vdp_copier
   19BD F1                 5993 	pop	af
                           5994 ;demo.c:800: cmd.dest_y = 256;
   19BE 21r30s41           5995 	ld	hl, #_cmd + 6
   19C1 36 00              5996 	ld	(hl),#0x00
   19C3 23                 5997 	inc	hl
   19C4 36 01              5998 	ld	(hl),#0x01
                           5999 ;demo.c:801: vdp_copier(&cmd);
   19C6 21r2As41           6000 	ld	hl,#_cmd
   19C9 E5                 6001 	push	hl
   19CA CDr00s00           6002 	call	_vdp_copier
   19CD F1                 6003 	pop	af
                           6004 ;demo.c:793: for (x = 248; x >= 0; x-=8) {
   19CE DD 7E FE           6005 	ld	a,-2 (ix)
   19D1 C6 F8              6006 	add	a,#0xF8
   19D3 DD 77 FE           6007 	ld	-2 (ix),a
   19D6 DD 7E FF           6008 	ld	a,-1 (ix)
   19D9 CE FF              6009 	adc	a,#0xFF
   19DB DD 77 FF           6010 	ld	-1 (ix),a
   19DE C3r52s19           6011 	jp	00139$
   19E1                    6012 00142$:
                           6013 ;demo.c:804: vdp_load_palette(boxes_palette);
   19E1 21rE6s40           6014 	ld	hl,#_boxes_palette
   19E4 E5                 6015 	push	hl
   19E5 CDr00s00           6016 	call	_vdp_load_palette
   19E8 F1                 6017 	pop	af
                           6018 ;demo.c:806: for (x=0;x < 8;x++) {
   19E9 DD 36 FE 00        6019 	ld	-2 (ix),#0x00
   19ED DD 36 FF 00        6020 	ld	-1 (ix),#0x00
   19F1                    6021 00147$:
   19F1 DD 7E FE           6022 	ld	a,-2 (ix)
   19F4 D6 08              6023 	sub	a,#0x08
   19F6 DD 7E FF           6024 	ld	a,-1 (ix)
   19F9 DE 00              6025 	sbc	a,#0x00
   19FB F2r55s1A           6026 	jp	P,00150$
                           6027 ;demo.c:808: for (y=0;y < 9;y++) {
   19FE 11 00 00           6028 	ld	de,#0x0000
   1A01                    6029 00143$:
   1A01 7B                 6030 	ld	a,e
   1A02 D6 09              6031 	sub	a,#0x09
   1A04 7A                 6032 	ld	a,d
   1A05 DE 00              6033 	sbc	a,#0x00
   1A07 F2r4As1A           6034 	jp	P,00149$
                           6035 ;demo.c:809: boxes_x[4] = 0;
   1A0A 01rE9s41           6036 	ld	bc,#_boxes_x + 4
   1A0D 3E 00              6037 	ld	a,#0x00
   1A0F 02                 6038 	ld	(bc),a
                           6039 ;demo.c:810: boxes_y[4] = 768+2*36;
   1A10 21rF2s41           6040 	ld	hl, #_boxes_y + 8
   1A13 36 48              6041 	ld	(hl),#0x48
   1A15 23                 6042 	inc	hl
   1A16 36 03              6043 	ld	(hl),#0x03
                           6044 ;demo.c:811: boxi = 4;
   1A18 21rF4s41           6045 	ld	hl,#_boxi + 0
   1A1B 36 04              6046 	ld	(hl), #0x04
                           6047 ;demo.c:812: drawbox((x*36),y*18);
   1A1D 4B                 6048 	ld	c,e
   1A1E D5                 6049 	push	de
   1A1F 79                 6050 	ld	a,c
   1A20 5F                 6051 	ld	e,a
   1A21 87                 6052 	add	a,a
   1A22 87                 6053 	add	a,a
   1A23 87                 6054 	add	a,a
   1A24 83                 6055 	add	a,e
   1A25 87                 6056 	add	a,a
   1A26 D1                 6057 	pop	de
   1A27 4F                 6058 	ld	c,a
   1A28 DD 46 FE           6059 	ld	b,-2 (ix)
   1A2B D5                 6060 	push	de
   1A2C 78                 6061 	ld	a,b
   1A2D 5F                 6062 	ld	e,a
   1A2E 87                 6063 	add	a,a
   1A2F 87                 6064 	add	a,a
   1A30 87                 6065 	add	a,a
   1A31 83                 6066 	add	a,e
   1A32 87                 6067 	add	a,a
   1A33 87                 6068 	add	a,a
   1A34 D1                 6069 	pop	de
   1A35 47                 6070 	ld	b,a
   1A36 D5                 6071 	push	de
   1A37 79                 6072 	ld	a,c
   1A38 F5                 6073 	push	af
   1A39 33                 6074 	inc	sp
   1A3A C5                 6075 	push	bc
   1A3B 33                 6076 	inc	sp
   1A3C CDr03s18           6077 	call	_drawbox
   1A3F F1                 6078 	pop	af
   1A40 D1                 6079 	pop	de
                           6080 ;demo.c:813: boxi = 0;
   1A41 21rF4s41           6081 	ld	hl,#_boxi + 0
   1A44 36 00              6082 	ld	(hl), #0x00
                           6083 ;demo.c:808: for (y=0;y < 9;y++) {
   1A46 13                 6084 	inc	de
   1A47 C3r01s1A           6085 	jp	00143$
   1A4A                    6086 00149$:
                           6087 ;demo.c:806: for (x=0;x < 8;x++) {
   1A4A DD 34 FE           6088 	inc	-2 (ix)
   1A4D 20 03              6089 	jr	NZ,00185$
   1A4F DD 34 FF           6090 	inc	-1 (ix)
   1A52                    6091 00185$:
   1A52 C3rF1s19           6092 	jp	00147$
   1A55                    6093 00150$:
                           6094 ;demo.c:817: slowend = 43;
   1A55 21rC0s41           6095 	ld	hl,#_slowend + 0
   1A58 36 2B              6096 	ld	(hl), #0x2B
   1A5A 21rC1s41           6097 	ld	hl,#_slowend + 1
   1A5D 36 00              6098 	ld	(hl), #0x00
                           6099 ;demo.c:818: ltrpointer = 0;
   1A5F 21rBEs41           6100 	ld	hl,#_ltrpointer + 0
   1A62 36 00              6101 	ld	(hl), #0x00
   1A64 21rBFs41           6102 	ld	hl,#_ltrpointer + 1
   1A67 36 00              6103 	ld	(hl), #0x00
   1A69                    6104 00106$:
                           6105 ;demo.c:821: if (bt >= 80) bt+=8;
   1A69 3ArF9s41           6106 	ld	a,(#_bt+0)
   1A6C D6 50              6107 	sub	a,#0x50
   1A6E 3ArFAs41           6108 	ld	a,(#_bt+1)
   1A71 DE 00              6109 	sbc	a,#0x00
   1A73 FAr8Cs1A           6110 	jp	M,00108$
   1A76 21rF9s41           6111 	ld	hl,#_bt
   1A79 7E                 6112 	ld	a,(hl)
   1A7A C6 08              6113 	add	a,#0x08
   1A7C 23                 6114 	inc	hl
   1A7D 2B                 6115 	dec	hl
   1A7E C5                 6116 	push	bc
   1A7F 4F                 6117 	ld	c, a
   1A80 23                 6118 	inc	hl
   1A81 7E                 6119 	ld	a, (hl)
   1A82 47                 6120 	ld	b, a
   1A83 79                 6121 	ld	a, c
   1A84 2B                 6122 	dec	hl
   1A85 77                 6123 	ld	(hl), a
   1A86 78                 6124 	ld	a, b
   1A87 C1                 6125 	pop	bc
   1A88 CE 00              6126 	adc	a,#0x00
   1A8A 23                 6127 	inc	hl
   1A8B 77                 6128 	ld	(hl),a
   1A8C                    6129 00108$:
                           6130 ;demo.c:822: if (bt < 80 && bt >= 60) bt+=7;
   1A8C 3ArF9s41           6131 	ld	a,(#_bt+0)
   1A8F D6 50              6132 	sub	a,#0x50
   1A91 3ArFAs41           6133 	ld	a,(#_bt+1)
   1A94 DE 00              6134 	sbc	a,#0x00
   1A96 F2rBCs1A           6135 	jp	P,00110$
   1A99 3ArF9s41           6136 	ld	a,(#_bt+0)
   1A9C D6 3C              6137 	sub	a,#0x3C
   1A9E 3ArFAs41           6138 	ld	a,(#_bt+1)
   1AA1 DE 00              6139 	sbc	a,#0x00
   1AA3 FArBCs1A           6140 	jp	M,00110$
   1AA6 21rF9s41           6141 	ld	hl,#_bt
   1AA9 7E                 6142 	ld	a,(hl)
   1AAA C6 07              6143 	add	a,#0x07
   1AAC 23                 6144 	inc	hl
   1AAD 2B                 6145 	dec	hl
   1AAE C5                 6146 	push	bc
   1AAF 4F                 6147 	ld	c, a
   1AB0 23                 6148 	inc	hl
   1AB1 7E                 6149 	ld	a, (hl)
   1AB2 47                 6150 	ld	b, a
   1AB3 79                 6151 	ld	a, c
   1AB4 2B                 6152 	dec	hl
   1AB5 77                 6153 	ld	(hl), a
   1AB6 78                 6154 	ld	a, b
   1AB7 C1                 6155 	pop	bc
   1AB8 CE 00              6156 	adc	a,#0x00
   1ABA 23                 6157 	inc	hl
   1ABB 77                 6158 	ld	(hl),a
   1ABC                    6159 00110$:
                           6160 ;demo.c:823: if (bt < 60 && bt >= 40) bt+=6;
   1ABC 3ArF9s41           6161 	ld	a,(#_bt+0)
   1ABF D6 3C              6162 	sub	a,#0x3C
   1AC1 3ArFAs41           6163 	ld	a,(#_bt+1)
   1AC4 DE 00              6164 	sbc	a,#0x00
   1AC6 F2rECs1A           6165 	jp	P,00113$
   1AC9 3ArF9s41           6166 	ld	a,(#_bt+0)
   1ACC D6 28              6167 	sub	a,#0x28
   1ACE 3ArFAs41           6168 	ld	a,(#_bt+1)
   1AD1 DE 00              6169 	sbc	a,#0x00
   1AD3 FArECs1A           6170 	jp	M,00113$
   1AD6 21rF9s41           6171 	ld	hl,#_bt
   1AD9 7E                 6172 	ld	a,(hl)
   1ADA C6 06              6173 	add	a,#0x06
   1ADC 23                 6174 	inc	hl
   1ADD 2B                 6175 	dec	hl
   1ADE C5                 6176 	push	bc
   1ADF 4F                 6177 	ld	c, a
   1AE0 23                 6178 	inc	hl
   1AE1 7E                 6179 	ld	a, (hl)
   1AE2 47                 6180 	ld	b, a
   1AE3 79                 6181 	ld	a, c
   1AE4 2B                 6182 	dec	hl
   1AE5 77                 6183 	ld	(hl), a
   1AE6 78                 6184 	ld	a, b
   1AE7 C1                 6185 	pop	bc
   1AE8 CE 00              6186 	adc	a,#0x00
   1AEA 23                 6187 	inc	hl
   1AEB 77                 6188 	ld	(hl),a
   1AEC                    6189 00113$:
                           6190 ;demo.c:824: if (bt < 40 && bt >= 10) bt+=5;
   1AEC 3ArF9s41           6191 	ld	a,(#_bt+0)
   1AEF D6 28              6192 	sub	a,#0x28
   1AF1 3ArFAs41           6193 	ld	a,(#_bt+1)
   1AF4 DE 00              6194 	sbc	a,#0x00
   1AF6 F2r1Cs1B           6195 	jp	P,00116$
   1AF9 3ArF9s41           6196 	ld	a,(#_bt+0)
   1AFC D6 0A              6197 	sub	a,#0x0A
   1AFE 3ArFAs41           6198 	ld	a,(#_bt+1)
   1B01 DE 00              6199 	sbc	a,#0x00
   1B03 FAr1Cs1B           6200 	jp	M,00116$
   1B06 21rF9s41           6201 	ld	hl,#_bt
   1B09 7E                 6202 	ld	a,(hl)
   1B0A C6 05              6203 	add	a,#0x05
   1B0C 23                 6204 	inc	hl
   1B0D 2B                 6205 	dec	hl
   1B0E C5                 6206 	push	bc
   1B0F 4F                 6207 	ld	c, a
   1B10 23                 6208 	inc	hl
   1B11 7E                 6209 	ld	a, (hl)
   1B12 47                 6210 	ld	b, a
   1B13 79                 6211 	ld	a, c
   1B14 2B                 6212 	dec	hl
   1B15 77                 6213 	ld	(hl), a
   1B16 78                 6214 	ld	a, b
   1B17 C1                 6215 	pop	bc
   1B18 CE 00              6216 	adc	a,#0x00
   1B1A 23                 6217 	inc	hl
   1B1B 77                 6218 	ld	(hl),a
   1B1C                    6219 00116$:
                           6220 ;demo.c:825: if (bt < 10 ) bt+=4;
   1B1C 3ArF9s41           6221 	ld	a,(#_bt+0)
   1B1F D6 0A              6222 	sub	a,#0x0A
   1B21 3ArFAs41           6223 	ld	a,(#_bt+1)
   1B24 DE 00              6224 	sbc	a,#0x00
   1B26 F2r3Fs1B           6225 	jp	P,00119$
   1B29 21rF9s41           6226 	ld	hl,#_bt
   1B2C 7E                 6227 	ld	a,(hl)
   1B2D C6 04              6228 	add	a,#0x04
   1B2F 23                 6229 	inc	hl
   1B30 2B                 6230 	dec	hl
   1B31 C5                 6231 	push	bc
   1B32 4F                 6232 	ld	c, a
   1B33 23                 6233 	inc	hl
   1B34 7E                 6234 	ld	a, (hl)
   1B35 47                 6235 	ld	b, a
   1B36 79                 6236 	ld	a, c
   1B37 2B                 6237 	dec	hl
   1B38 77                 6238 	ld	(hl), a
   1B39 78                 6239 	ld	a, b
   1B3A C1                 6240 	pop	bc
   1B3B CE 00              6241 	adc	a,#0x00
   1B3D 23                 6242 	inc	hl
   1B3E 77                 6243 	ld	(hl),a
   1B3F                    6244 00119$:
                           6245 ;demo.c:828: cmd.source_x = bx;
   1B3F ED 4BrF5s41        6246 	ld	bc,(_bx)
   1B43 21r2As41           6247 	ld	hl,#_cmd
   1B46 71                 6248 	ld	(hl),c
   1B47 23                 6249 	inc	hl
   1B48 70                 6250 	ld	(hl),b
                           6251 ;demo.c:829: cmd.source_y = bt;
   1B49 01r2Cs41           6252 	ld	bc,#_cmd + 2
   1B4C ED 5BrF9s41        6253 	ld	de,(_bt)
   1B50 69                 6254 	ld	l,c
   1B51 60                 6255 	ld	h,b
   1B52 73                 6256 	ld	(hl),e
   1B53 23                 6257 	inc	hl
   1B54 72                 6258 	ld	(hl),d
                           6259 ;demo.c:830: cmd.dest_x = 0;
   1B55 21r2Es41           6260 	ld	hl, #_cmd + 4
   1B58 36 00              6261 	ld	(hl),#0x00
   1B5A 23                 6262 	inc	hl
   1B5B 36 00              6263 	ld	(hl),#0x00
                           6264 ;demo.c:831: cmd.dest_y = 256;
   1B5D 21r30s41           6265 	ld	hl, #_cmd + 6
   1B60 36 00              6266 	ld	(hl),#0x00
   1B62 23                 6267 	inc	hl
   1B63 36 01              6268 	ld	(hl),#0x01
                           6269 ;demo.c:832: cmd.size_x = 36;
   1B65 21r32s41           6270 	ld	hl, #_cmd + 8
   1B68 36 24              6271 	ld	(hl),#0x24
   1B6A 23                 6272 	inc	hl
   1B6B 36 00              6273 	ld	(hl),#0x00
                           6274 ;demo.c:833: cmd.size_y = 36;
   1B6D 21r34s41           6275 	ld	hl, #_cmd + 10
   1B70 36 24              6276 	ld	(hl),#0x24
   1B72 23                 6277 	inc	hl
   1B73 36 00              6278 	ld	(hl),#0x00
                           6279 ;demo.c:834: cmd.data = 0;
                           6280 ;demo.c:835: cmd.argument = 0x00;
   1B75 3E 00              6281 	ld	a,#0x00
   1B77 32r36s41           6282 	ld	(#_cmd + 12),a
   1B7A 32r37s41           6283 	ld	(#_cmd + 13),a
                           6284 ;demo.c:836: cmd.command = 0xD0; // HMMM
   1B7D 3E D0              6285 	ld	a,#0xD0
   1B7F 32r38s41           6286 	ld	(#_cmd + 14),a
                           6287 ;demo.c:837: vdp_copier(&cmd);
   1B82 21r2As41           6288 	ld	hl,#_cmd
   1B85 E5                 6289 	push	hl
   1B86 CDr00s00           6290 	call	_vdp_copier
   1B89 F1                 6291 	pop	af
                           6292 ;demo.c:839: pbx = bx;
   1B8A 2ArF5s41           6293 	ld	hl,(_bx)
   1B8D FD 21rFFs41        6294 	ld	iy,#_pbx
   1B91 FD 75 00           6295 	ld	0 (iy),l
   1B94 FD 21rFFs41        6296 	ld	iy,#_pbx
   1B98 FD 74 01           6297 	ld	1 (iy),h
                           6298 ;demo.c:840: pbt = bt;
   1B9B 2ArF9s41           6299 	ld	hl,(_bt)
   1B9E FD 21r01s42        6300 	ld	iy,#_pbt
   1BA2 FD 75 00           6301 	ld	0 (iy),l
   1BA5 FD 21r01s42        6302 	ld	iy,#_pbt
   1BA9 FD 74 01           6303 	ld	1 (iy),h
                           6304 ;demo.c:842: boxticks++;
   1BAC FD 21r0Es42        6305 	ld	iy,#_boxticks
   1BB0 FD 34 00           6306 	inc	0 (iy)
   1BB3 20 07              6307 	jr	NZ,00186$
   1BB5 FD 21r0Es42        6308 	ld	iy,#_boxticks
   1BB9 FD 34 01           6309 	inc	1 (iy)
   1BBC                    6310 00186$:
                           6311 ;demo.c:843: if (boxticks > 8) {
   1BBC 3E 08              6312 	ld	a,#0x08
   1BBE FD 21r0Es42        6313 	ld	iy,#_boxticks
   1BC2 FD 96 00           6314 	sub	a,0 (iy)
   1BC5 3E 00              6315 	ld	a,#0x00
   1BC7 FD 21r0Es42        6316 	ld	iy,#_boxticks
   1BCB FD 9E 01           6317 	sbc	a,1 (iy)
   1BCE F2rE8s1B           6318 	jp	P,00121$
                           6319 ;demo.c:844: drawsine("Let us stop   We are building walls between",8,182);
   1BD1 21 08 B6           6320 	ld	hl,#0xB608
   1BD4 E5                 6321 	push	hl
   1BD5 21r5As1D           6322 	ld	hl,#__str_8
   1BD8 E5                 6323 	push	hl
   1BD9 CDrC9s11           6324 	call	_drawsine
   1BDC F1                 6325 	pop	af
   1BDD F1                 6326 	pop	af
                           6327 ;demo.c:845: boxticks  = 0;
   1BDE 21r0Es42           6328 	ld	hl,#_boxticks + 0
   1BE1 36 00              6329 	ld	(hl), #0x00
   1BE3 21r0Fs42           6330 	ld	hl,#_boxticks + 1
   1BE6 36 00              6331 	ld	(hl), #0x00
   1BE8                    6332 00121$:
                           6333 ;demo.c:848: bonc = 1;
   1BE8 21rFDs41           6334 	ld	hl,#_bonc + 0
   1BEB 36 01              6335 	ld	(hl), #0x01
   1BED 21rFEs41           6336 	ld	hl,#_bonc + 1
   1BF0 36 00              6337 	ld	(hl), #0x00
                           6338 ;demo.c:849: if (bt > by) {
   1BF2 21rF7s41           6339 	ld	hl,#_by
   1BF5 7E                 6340 	ld	a,(hl)
   1BF6 FD 21rF9s41        6341 	ld	iy,#_bt
   1BFA FD 96 00           6342 	sub	a,0 (iy)
   1BFD 23                 6343 	inc	hl
   1BFE 7E                 6344 	ld	a,(hl)
   1BFF FD 21rF9s41        6345 	ld	iy,#_bt
   1C03 FD 9E 01           6346 	sbc	a,1 (iy)
   1C06 F2r44s1D           6347 	jp	P,00137$
                           6348 ;demo.c:850: bt = by;
   1C09 2ArF7s41           6349 	ld	hl,(_by)
   1C0C FD 21rF9s41        6350 	ld	iy,#_bt
   1C10 FD 75 00           6351 	ld	0 (iy),l
   1C13 FD 21rF9s41        6352 	ld	iy,#_bt
   1C17 FD 74 01           6353 	ld	1 (iy),h
                           6354 ;demo.c:851: drawbox(bx,bt);
   1C1A 21rF9s41           6355 	ld	hl,#_bt + 0
   1C1D 4E                 6356 	ld	c,(hl)
   1C1E 21rF5s41           6357 	ld	hl,#_bx + 0
   1C21 46                 6358 	ld	b,(hl)
   1C22 79                 6359 	ld	a,c
   1C23 F5                 6360 	push	af
   1C24 33                 6361 	inc	sp
   1C25 C5                 6362 	push	bc
   1C26 33                 6363 	inc	sp
   1C27 CDr03s18           6364 	call	_drawbox
   1C2A F1                 6365 	pop	af
                           6366 ;demo.c:852: bt = 0;
   1C2B 21rF9s41           6367 	ld	hl,#_bt + 0
   1C2E 36 00              6368 	ld	(hl), #0x00
   1C30 21rFAs41           6369 	ld	hl,#_bt + 1
   1C33 36 00              6370 	ld	(hl), #0x00
                           6371 ;demo.c:853: if (by > 48) {
   1C35 3E 30              6372 	ld	a,#0x30
   1C37 FD 21rF7s41        6373 	ld	iy,#_by
   1C3B FD 96 00           6374 	sub	a,0 (iy)
   1C3E 3E 00              6375 	ld	a,#0x00
   1C40 FD 21rF7s41        6376 	ld	iy,#_by
   1C44 FD 9E 01           6377 	sbc	a,1 (iy)
   1C47 F2r9Fs1C           6378 	jp	P,00125$
                           6379 ;demo.c:854: bonc = 0;
   1C4A 21rFDs41           6380 	ld	hl,#_bonc + 0
   1C4D 36 00              6381 	ld	(hl), #0x00
   1C4F 21rFEs41           6382 	ld	hl,#_bonc + 1
   1C52 36 00              6383 	ld	(hl), #0x00
                           6384 ;demo.c:855: by-=16;
   1C54 21rF7s41           6385 	ld	hl,#_by
   1C57 7E                 6386 	ld	a,(hl)
   1C58 C6 F0              6387 	add	a,#0xF0
   1C5A 77                 6388 	ld	(hl),a
   1C5B 23                 6389 	inc	hl
   1C5C 7E                 6390 	ld	a,(hl)
   1C5D CE FF              6391 	adc	a,#0xFF
   1C5F 77                 6392 	ld	(hl),a
                           6393 ;demo.c:856: prevbox_of = boxes_of[boxi];
   1C60 3ArF4s41           6394 	ld	a,(#_boxi+0)
   1C63 87                 6395 	add	a,a
   1C64 C6r03              6396 	add	a,#<_boxes_of
   1C66 6F                 6397 	ld	l,a
   1C67 3Es42              6398 	ld	a,#>_boxes_of
   1C69 CE 00              6399 	adc	a,#0x00
   1C6B 67                 6400 	ld	h,a
   1C6C 4E                 6401 	ld	c,(hl)
   1C6D 23                 6402 	inc	hl
   1C6E 21r0Ds42           6403 	ld	hl,#_prevbox_of + 0
   1C71 71                 6404 	ld	(hl), c
                           6405 ;demo.c:857: by+=prevbox_of;
   1C72 21r0Ds42           6406 	ld	hl,#_prevbox_of + 0
   1C75 4E                 6407 	ld	c,(hl)
   1C76 06 00              6408 	ld	b,#0x00
   1C78 21rF7s41           6409 	ld	hl,#_by
   1C7B 7E                 6410 	ld	a,(hl)
   1C7C 81                 6411 	add	a,c
   1C7D 23                 6412 	inc	hl
   1C7E 2B                 6413 	dec	hl
   1C7F C5                 6414 	push	bc
   1C80 4F                 6415 	ld	c, a
   1C81 23                 6416 	inc	hl
   1C82 7E                 6417 	ld	a, (hl)
   1C83 47                 6418 	ld	b, a
   1C84 79                 6419 	ld	a, c
   1C85 2B                 6420 	dec	hl
   1C86 77                 6421 	ld	(hl), a
   1C87 78                 6422 	ld	a, b
   1C88 C1                 6423 	pop	bc
   1C89 88                 6424 	adc	a,b
   1C8A 23                 6425 	inc	hl
   1C8B 77                 6426 	ld	(hl),a
                           6427 ;demo.c:858: boxi++;
   1C8C FD 21rF4s41        6428 	ld	iy,#_boxi
   1C90 FD 34 00           6429 	inc	0 (iy)
                           6430 ;demo.c:859: if (boxi >= 4) boxi = 0;
   1C93 3ArF4s41           6431 	ld	a,(#_boxi+0)
   1C96 D6 04              6432 	sub	a,#0x04
   1C98 38 05              6433 	jr	C,00125$
   1C9A 21rF4s41           6434 	ld	hl,#_boxi + 0
   1C9D 36 00              6435 	ld	(hl), #0x00
   1C9F                    6436 00125$:
                           6437 ;demo.c:862: if (by <= 48) {
   1C9F 3E 30              6438 	ld	a,#0x30
   1CA1 FD 21rF7s41        6439 	ld	iy,#_by
   1CA5 FD 96 00           6440 	sub	a,0 (iy)
   1CA8 3E 00              6441 	ld	a,#0x00
   1CAA FD 21rF7s41        6442 	ld	iy,#_by
   1CAE FD 9E 01           6443 	sbc	a,1 (iy)
   1CB1 FAr55s1D           6444 	jp	M,00151$
                           6445 ;demo.c:863: bx-=16;
   1CB4 21rF5s41           6446 	ld	hl,#_bx
   1CB7 7E                 6447 	ld	a,(hl)
   1CB8 C6 F0              6448 	add	a,#0xF0
   1CBA 77                 6449 	ld	(hl),a
   1CBB 23                 6450 	inc	hl
   1CBC 7E                 6451 	ld	a,(hl)
   1CBD CE FF              6452 	adc	a,#0xFF
   1CBF 77                 6453 	ld	(hl),a
                           6454 ;demo.c:865: if (bx>128)bo+=8;
   1CC0 3E 80              6455 	ld	a,#0x80
   1CC2 FD 21rF5s41        6456 	ld	iy,#_bx
   1CC6 FD 96 00           6457 	sub	a,0 (iy)
   1CC9 3E 00              6458 	ld	a,#0x00
   1CCB FD 21rF5s41        6459 	ld	iy,#_bx
   1CCF FD 9E 01           6460 	sbc	a,1 (iy)
   1CD2 07                 6461 	rlca
   1CD3 E6 01              6462 	and	a,#0x01
   1CD5 4F                 6463 	ld	c,a
   1CD6 B7                 6464 	or	a,a
   1CD7 28 18              6465 	jr	Z,00127$
   1CD9 21rFBs41           6466 	ld	hl,#_bo
   1CDC 7E                 6467 	ld	a,(hl)
   1CDD C6 08              6468 	add	a,#0x08
   1CDF 23                 6469 	inc	hl
   1CE0 2B                 6470 	dec	hl
   1CE1 C5                 6471 	push	bc
   1CE2 4F                 6472 	ld	c, a
   1CE3 23                 6473 	inc	hl
   1CE4 7E                 6474 	ld	a, (hl)
   1CE5 47                 6475 	ld	b, a
   1CE6 79                 6476 	ld	a, c
   1CE7 2B                 6477 	dec	hl
   1CE8 77                 6478 	ld	(hl), a
   1CE9 78                 6479 	ld	a, b
   1CEA C1                 6480 	pop	bc
   1CEB CE 00              6481 	adc	a,#0x00
   1CED 23                 6482 	inc	hl
   1CEE 77                 6483 	ld	(hl),a
   1CEF 18 0C              6484 	jr	00128$
   1CF1                    6485 00127$:
                           6486 ;demo.c:866: else bo-=8;
   1CF1 21rFBs41           6487 	ld	hl,#_bo
   1CF4 7E                 6488 	ld	a,(hl)
   1CF5 C6 F8              6489 	add	a,#0xF8
   1CF7 77                 6490 	ld	(hl),a
   1CF8 23                 6491 	inc	hl
   1CF9 7E                 6492 	ld	a,(hl)
   1CFA CE FF              6493 	adc	a,#0xFF
   1CFC 77                 6494 	ld	(hl),a
   1CFD                    6495 00128$:
                           6496 ;demo.c:867: if (bo > 192) bo = 0;
   1CFD 3E C0              6497 	ld	a,#0xC0
   1CFF FD 21rFBs41        6498 	ld	iy,#_bo
   1D03 FD 96 00           6499 	sub	a,0 (iy)
   1D06 3E 00              6500 	ld	a,#0x00
   1D08 FD 21rFBs41        6501 	ld	iy,#_bo
   1D0C FD 9E 01           6502 	sbc	a,1 (iy)
   1D0F F2r1Cs1D           6503 	jp	P,00130$
   1D12 21rFBs41           6504 	ld	hl,#_bo + 0
   1D15 36 00              6505 	ld	(hl), #0x00
   1D17 21rFCs41           6506 	ld	hl,#_bo + 1
   1D1A 36 00              6507 	ld	(hl), #0x00
   1D1C                    6508 00130$:
                           6509 ;demo.c:868: if (bx>128)by=84+bo;
   1D1C AF                 6510 	xor	a,a
   1D1D B1                 6511 	or	a,c
   1D1E 28 12              6512 	jr	Z,00132$
   1D20 21rF7s41           6513 	ld	hl,#_by
   1D23 3ArFBs41           6514 	ld	a,(#_bo+0)
   1D26 C6 54              6515 	add	a,#0x54
   1D28 77                 6516 	ld	(hl),a
   1D29 3ArFCs41           6517 	ld	a,(#_bo+1)
   1D2C CE 00              6518 	adc	a,#0x00
   1D2E 23                 6519 	inc	hl
   1D2F 77                 6520 	ld	(hl),a
   1D30 18 23              6521 	jr	00151$
   1D32                    6522 00132$:
                           6523 ;demo.c:869: else by=36+36+84+bo;
   1D32 21rF7s41           6524 	ld	hl,#_by
   1D35 3ArFBs41           6525 	ld	a,(#_bo+0)
   1D38 C6 9C              6526 	add	a,#0x9C
   1D3A 77                 6527 	ld	(hl),a
   1D3B 3ArFCs41           6528 	ld	a,(#_bo+1)
   1D3E CE 00              6529 	adc	a,#0x00
   1D40 23                 6530 	inc	hl
   1D41 77                 6531 	ld	(hl),a
   1D42 18 11              6532 	jr	00151$
   1D44                    6533 00137$:
                           6534 ;demo.c:872: drawbox(bx,bt);
   1D44 21rF9s41           6535 	ld	hl,#_bt + 0
   1D47 4E                 6536 	ld	c,(hl)
   1D48 21rF5s41           6537 	ld	hl,#_bx + 0
   1D4B 46                 6538 	ld	b,(hl)
   1D4C 79                 6539 	ld	a,c
   1D4D F5                 6540 	push	af
   1D4E 33                 6541 	inc	sp
   1D4F C5                 6542 	push	bc
   1D50 33                 6543 	inc	sp
   1D51 CDr03s18           6544 	call	_drawbox
   1D54 F1                 6545 	pop	af
   1D55                    6546 00151$:
   1D55 DD F9              6547 	ld	sp,ix
   1D57 DD E1              6548 	pop	ix
   1D59 C9                 6549 	ret
   1D5A                    6550 _boxes_end::
   1D5A                    6551 __str_8:
   1D5A 4C 65 74 20 75 73  6552 	.ascii "Let us stop   We are building walls between"
        20 73 74 6F 70 20
        20 20 57 65 20 61
        72 65 20 62 75 69
        6C 64 69 6E 67 20
        77 61 6C 6C 73 20
        62 65 74 77 65 65
        6E
   1D85 00                 6553 	.db 0x00
                           6554 ;demo.c:883: void thewave() {
                           6555 ;	---------------------------------
                           6556 ; Function thewave
                           6557 ; ---------------------------------
   1D86                    6558 _thewave_start::
   1D86                    6559 _thewave:
   1D86 DD E5              6560 	push	ix
   1D88 DD 21 00 00        6561 	ld	ix,#0
   1D8C DD 39              6562 	add	ix,sp
   1D8E 21 F5 FF           6563 	ld	hl,#-11
   1D91 39                 6564 	add	hl,sp
   1D92 F9                 6565 	ld	sp,hl
                           6566 ;demo.c:892: if (initwave == 0) {
   1D93 AF                 6567 	xor	a,a
   1D94 21r10s42           6568 	ld	hl,#_initwave + 0
   1D97 B6                 6569 	or	a,(hl)
   1D98 C2r20s20           6570 	jp	NZ,00113$
                           6571 ;demo.c:893: initwave = 1;
   1D9B 21r10s42           6572 	ld	hl,#_initwave + 0
   1D9E 36 01              6573 	ld	(hl), #0x01
                           6574 ;demo.c:894: for (y = 0; y < 212; y++) {
   1DA0 DD 36 FE 00        6575 	ld	-2 (ix),#0x00
   1DA4                    6576 00128$:
   1DA4 DD 7E FE           6577 	ld	a,-2 (ix)
   1DA7 D6 D4              6578 	sub	a,#0xD4
   1DA9 D2r1Cs1E           6579 	jp	NC,00131$
                           6580 ;demo.c:895: cmd.size_x = 256;
   1DAC 11r32s41           6581 	ld	de,#_cmd + 8
   1DAF EB                 6582 	ex	de,hl
   1DB0 36 00              6583 	ld	(hl),#0x00
   1DB2 23                 6584 	inc	hl
   1DB3 36 01              6585 	ld	(hl),#0x01
                           6586 ;demo.c:896: cmd.size_y = 2;
   1DB5 11r34s41           6587 	ld	de,#_cmd + 10
   1DB8 EB                 6588 	ex	de,hl
   1DB9 36 02              6589 	ld	(hl),#0x02
   1DBB 23                 6590 	inc	hl
   1DBC 36 00              6591 	ld	(hl),#0x00
                           6592 ;demo.c:897: cmd.data = 0;
   1DBE 11r36s41           6593 	ld	de,#_cmd + 12
   1DC1 3E 00              6594 	ld	a,#0x00
   1DC3 12                 6595 	ld	(de),a
                           6596 ;demo.c:898: cmd.argument = 0x00; // from 70xY to left
   1DC4 11r37s41           6597 	ld	de,#_cmd + 13
   1DC7 3E 00              6598 	ld	a,#0x00
   1DC9 12                 6599 	ld	(de),a
                           6600 ;demo.c:899: cmd.command = 0xd0; // vram to vram, y only
   1DCA 11r38s41           6601 	ld	de,#_cmd + 14
   1DCD 3E D0              6602 	ld	a,#0xD0
   1DCF 12                 6603 	ld	(de),a
                           6604 ;demo.c:901: cmd.source_x = 0;
   1DD0 21r2As41           6605 	ld	hl,#_cmd
   1DD3 36 00              6606 	ld	(hl),#0x00
   1DD5 23                 6607 	inc	hl
   1DD6 36 00              6608 	ld	(hl),#0x00
                           6609 ;demo.c:902: cmd.source_y = 0;
   1DD8 11r2Cs41           6610 	ld	de,#_cmd + 2
   1DDB EB                 6611 	ex	de,hl
   1DDC 36 00              6612 	ld	(hl),#0x00
   1DDE 23                 6613 	inc	hl
   1DDF 36 00              6614 	ld	(hl),#0x00
                           6615 ;demo.c:903: cmd.dest_x = 0;
   1DE1 11r2Es41           6616 	ld	de,#_cmd + 4
   1DE4 EB                 6617 	ex	de,hl
   1DE5 36 00              6618 	ld	(hl),#0x00
   1DE7 23                 6619 	inc	hl
   1DE8 36 00              6620 	ld	(hl),#0x00
                           6621 ;demo.c:904: cmd.dest_y = 0+y;
   1DEA 11r30s41           6622 	ld	de,#_cmd + 6
   1DED DD 4E FE           6623 	ld	c,-2 (ix)
   1DF0 06 00              6624 	ld	b,#0x00
   1DF2 EB                 6625 	ex	de,hl
   1DF3 71                 6626 	ld	(hl),c
   1DF4 23                 6627 	inc	hl
   1DF5 70                 6628 	ld	(hl),b
                           6629 ;demo.c:905: vdp_copier(&cmd);
   1DF6 C5                 6630 	push	bc
   1DF7 21r2As41           6631 	ld	hl,#_cmd
   1DFA E5                 6632 	push	hl
   1DFB CDr00s00           6633 	call	_vdp_copier
   1DFE F1                 6634 	pop	af
   1DFF C1                 6635 	pop	bc
                           6636 ;demo.c:906: cmd.dest_y = 256+y;
   1E00 11r30s41           6637 	ld	de,#_cmd + 6
   1E03 21 00 01           6638 	ld	hl,#0x0100
   1E06 09                 6639 	add	hl,bc
   1E07 4D                 6640 	ld	c,l
   1E08 44                 6641 	ld	b,h
   1E09 EB                 6642 	ex	de,hl
   1E0A 71                 6643 	ld	(hl),c
   1E0B 23                 6644 	inc	hl
   1E0C 70                 6645 	ld	(hl),b
                           6646 ;demo.c:907: vdp_copier(&cmd);
   1E0D 21r2As41           6647 	ld	hl,#_cmd
   1E10 E5                 6648 	push	hl
   1E11 CDr00s00           6649 	call	_vdp_copier
   1E14 F1                 6650 	pop	af
                           6651 ;demo.c:908: waitVB();
   1E15 76                 6652 		halt 
                           6653 ;demo.c:894: for (y = 0; y < 212; y++) {
   1E16 DD 34 FE           6654 	inc	-2 (ix)
   1E19 C3rA4s1D           6655 	jp	00128$
   1E1C                    6656 00131$:
                           6657 ;demo.c:911: for (y = 9; y < 15; y+=1) {
   1E1C DD 36 FE 09        6658 	ld	-2 (ix),#0x09
   1E20                    6659 00132$:
   1E20 DD 7E FE           6660 	ld	a,-2 (ix)
   1E23 D6 0F              6661 	sub	a,#0x0F
   1E25 D2r20s20           6662 	jp	NC,00113$
                           6663 ;demo.c:912: for (x = 0; x < 21; x+=1) {
   1E28 DD 7E FE           6664 	ld	a,-2 (ix)
   1E2B 87                 6665 	add	a,a
   1E2C DD 77 F7           6666 	ld	-9 (ix),a
   1E2F DD 36 FF 00        6667 	ld	-1 (ix),#0x00
   1E33                    6668 00108$:
   1E33 DD 7E FF           6669 	ld	a,-1 (ix)
   1E36 D6 15              6670 	sub	a,#0x15
   1E38 D2r1As20           6671 	jp	NC,00134$
                           6672 ;demo.c:913: if (x > 6 && x < 13) continue; 
   1E3B 3E 06              6673 	ld	a,#0x06
   1E3D DD 96 FF           6674 	sub	a,-1 (ix)
   1E40 30 08              6675 	jr	NC,00102$
   1E42 DD 7E FF           6676 	ld	a,-1 (ix)
   1E45 D6 0D              6677 	sub	a,#0x0D
   1E47 DAr14s20           6678 	jp	C,00110$
   1E4A                    6679 00102$:
                           6680 ;demo.c:915: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   1E4A 3E 06              6681 	ld	a,#0x06
   1E4C DD 96 FF           6682 	sub	a,-1 (ix)
   1E4F DArA5s1E           6683 	jp	C,00105$
   1E52 DD 56 FF           6684 	ld	d,-1 (ix)
   1E55 0E 00              6685 	ld	c,#0x00
   1E57 CB 22              6686 	sla	d
   1E59 CB 11              6687 	rl	c
   1E5B CB 22              6688 	sla	d
   1E5D CB 11              6689 	rl	c
   1E5F CB 22              6690 	sla	d
   1E61 CB 11              6691 	rl	c
   1E63 7A                 6692 	ld	a,d
   1E64 C6 69              6693 	add	a,#0x69
   1E66 57                 6694 	ld	d,a
   1E67 79                 6695 	ld	a,c
   1E68 CE 00              6696 	adc	a,#0x00
   1E6A 47                 6697 	ld	b,a
   1E6B DD 5E FE           6698 	ld	e,-2 (ix)
   1E6E 0E 00              6699 	ld	c,#0x00
   1E70 CB 23              6700 	sla	e
   1E72 CB 11              6701 	rl	c
   1E74 CB 23              6702 	sla	e
   1E76 CB 11              6703 	rl	c
   1E78 CB 23              6704 	sla	e
   1E7A CB 11              6705 	rl	c
   1E7C 7A                 6706 	ld	a,d
   1E7D 83                 6707 	add	a,e
   1E7E 5F                 6708 	ld	e,a
   1E7F 78                 6709 	ld	a,b
   1E80 89                 6710 	adc	a,c
   1E81 0E 00              6711 	ld	c,#0x00
   1E83 3Er00              6712 	ld	a,#<_sintab
   1E85 83                 6713 	add	a,e
   1E86 5F                 6714 	ld	e,a
   1E87 3Es00              6715 	ld	a,#>_sintab
   1E89 89                 6716 	adc	a,c
   1E8A 6B                 6717 	ld	l,e
   1E8B 67                 6718 	ld	h,a
   1E8C 5E                 6719 	ld	e,(hl)
   1E8D CB 2B              6720 	sra	e
   1E8F CB 2B              6721 	sra	e
   1E91 CB 2B              6722 	sra	e
   1E93 CB 2B              6723 	sra	e
   1E95 7B                 6724 	ld	a,e
   1E96 17                 6725 	rla	
   1E97 9F                 6726 	sbc	a,a
   1E98 4F                 6727 	ld	c,a
   1E99 7B                 6728 	ld	a,e
   1E9A C6 07              6729 	add	a,#0x07
   1E9C DD 77 FC           6730 	ld	-4 (ix),a
   1E9F 79                 6731 	ld	a,c
   1EA0 CE 00              6732 	adc	a,#0x00
   1EA2 DD 77 FD           6733 	ld	-3 (ix),a
   1EA5                    6734 00105$:
                           6735 ;demo.c:916: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   1EA5 DD 7E FF           6736 	ld	a,-1 (ix)
   1EA8 D6 0D              6737 	sub	a,#0x0D
   1EAA DAr0Bs1F           6738 	jp	C,00107$
   1EAD DD 5E FF           6739 	ld	e,-1 (ix)
   1EB0 16 00              6740 	ld	d,#0x00
   1EB2 21 17 00           6741 	ld	hl,#0x0017
   1EB5 19                 6742 	add	hl,de
   1EB6 EB                 6743 	ex	de,hl
   1EB7 CB 23              6744 	sla	e
   1EB9 CB 12              6745 	rl	d
   1EBB CB 23              6746 	sla	e
   1EBD CB 12              6747 	rl	d
   1EBF CB 23              6748 	sla	e
   1EC1 CB 12              6749 	rl	d
   1EC3 21 69 00           6750 	ld	hl,#0x0069
   1EC6 19                 6751 	add	hl,de
   1EC7 45                 6752 	ld	b,l
   1EC8 54                 6753 	ld	d,h
   1EC9 DD 4E FE           6754 	ld	c,-2 (ix)
   1ECC 1E 00              6755 	ld	e,#0x00
   1ECE 79                 6756 	ld	a,c
   1ECF C6 13              6757 	add	a,#0x13
   1ED1 4F                 6758 	ld	c,a
   1ED2 7B                 6759 	ld	a,e
   1ED3 CE 00              6760 	adc	a,#0x00
   1ED5 5F                 6761 	ld	e,a
   1ED6 CB 21              6762 	sla	c
   1ED8 CB 13              6763 	rl	e
   1EDA CB 21              6764 	sla	c
   1EDC CB 13              6765 	rl	e
   1EDE CB 21              6766 	sla	c
   1EE0 CB 13              6767 	rl	e
   1EE2 78                 6768 	ld	a,b
   1EE3 81                 6769 	add	a,c
   1EE4 4F                 6770 	ld	c,a
   1EE5 7A                 6771 	ld	a,d
   1EE6 8B                 6772 	adc	a,e
   1EE7 1E 00              6773 	ld	e,#0x00
   1EE9 3Er00              6774 	ld	a,#<_sintab
   1EEB 81                 6775 	add	a,c
   1EEC 4F                 6776 	ld	c,a
   1EED 3Es00              6777 	ld	a,#>_sintab
   1EEF 8B                 6778 	adc	a,e
   1EF0 69                 6779 	ld	l,c
   1EF1 67                 6780 	ld	h,a
   1EF2 4E                 6781 	ld	c,(hl)
   1EF3 CB 29              6782 	sra	c
   1EF5 CB 29              6783 	sra	c
   1EF7 CB 29              6784 	sra	c
   1EF9 CB 29              6785 	sra	c
   1EFB 79                 6786 	ld	a,c
   1EFC 17                 6787 	rla	
   1EFD 9F                 6788 	sbc	a,a
   1EFE 5F                 6789 	ld	e,a
   1EFF 79                 6790 	ld	a,c
   1F00 C6 07              6791 	add	a,#0x07
   1F02 DD 77 FC           6792 	ld	-4 (ix),a
   1F05 7B                 6793 	ld	a,e
   1F06 CE 00              6794 	adc	a,#0x00
   1F08 DD 77 FD           6795 	ld	-3 (ix),a
   1F0B                    6796 00107$:
                           6797 ;demo.c:918: cmd.size_x = 11;
   1F0B 11r32s41           6798 	ld	de,#_cmd + 8
   1F0E EB                 6799 	ex	de,hl
   1F0F 36 0B              6800 	ld	(hl),#0x0B
   1F11 23                 6801 	inc	hl
   1F12 36 00              6802 	ld	(hl),#0x00
                           6803 ;demo.c:919: cmd.size_y = 28-(14-px);
   1F14 21r34s41           6804 	ld	hl,#_cmd + 10
   1F17 DD 75 F8           6805 	ld	-8 (ix),l
   1F1A DD 74 F9           6806 	ld	-7 (ix),h
   1F1D 3E 0E              6807 	ld	a,#0x0E
   1F1F DD 96 FC           6808 	sub	a,-4 (ix)
   1F22 4F                 6809 	ld	c,a
   1F23 3E 00              6810 	ld	a,#0x00
   1F25 DD 9E FD           6811 	sbc	a,-3 (ix)
   1F28 5F                 6812 	ld	e,a
   1F29 3E 1C              6813 	ld	a,#0x1C
   1F2B 91                 6814 	sub	a,c
   1F2C 57                 6815 	ld	d,a
   1F2D 3E 00              6816 	ld	a,#0x00
   1F2F 9B                 6817 	sbc	a,e
   1F30 47                 6818 	ld	b,a
   1F31 DD 6E F8           6819 	ld	l,-8 (ix)
   1F34 DD 66 F9           6820 	ld	h,-7 (ix)
   1F37 72                 6821 	ld	(hl),d
   1F38 23                 6822 	inc	hl
   1F39 70                 6823 	ld	(hl),b
                           6824 ;demo.c:920: cmd.data = 0;
   1F3A 21r36s41           6825 	ld	hl,#_cmd + 12
   1F3D 36 00              6826 	ld	(hl),#0x00
                           6827 ;demo.c:921: cmd.argument = 0x00; // from 70xY to left
   1F3F 21r37s41           6828 	ld	hl,#_cmd + 13
   1F42 36 00              6829 	ld	(hl),#0x00
                           6830 ;demo.c:922: cmd.command = 0x98; // vram to vram, y only
   1F44 21r38s41           6831 	ld	hl,#_cmd + 14
   1F47 36 98              6832 	ld	(hl),#0x98
                           6833 ;demo.c:924: cmd.source_x = twelvetimes[px];
   1F49 DD 46 FC           6834 	ld	b,-4 (ix)
   1F4C DD 56 FD           6835 	ld	d,-3 (ix)
   1F4F CB 20              6836 	sla	b
   1F51 CB 12              6837 	rl	d
   1F53 3Er20              6838 	ld	a,#<_twelvetimes
   1F55 80                 6839 	add	a,b
   1F56 47                 6840 	ld	b,a
   1F57 3Es01              6841 	ld	a,#>_twelvetimes
   1F59 8A                 6842 	adc	a,d
   1F5A 68                 6843 	ld	l,b
   1F5B 67                 6844 	ld	h,a
   1F5C 46                 6845 	ld	b,(hl)
   1F5D 23                 6846 	inc	hl
   1F5E 56                 6847 	ld	d,(hl)
   1F5F 21r2As41           6848 	ld	hl,#_cmd
   1F62 70                 6849 	ld	(hl),b
   1F63 23                 6850 	inc	hl
   1F64 72                 6851 	ld	(hl),d
                           6852 ;demo.c:925: cmd.source_y = 768+183+(15-px);
   1F65 23                 6853 	inc	hl
   1F66 DD 75 F8           6854 	ld	-8 (ix),l
   1F69 DD 74 F9           6855 	ld	-7 (ix),h
   1F6C 3E C6              6856 	ld	a,#0xC6
   1F6E DD 96 FC           6857 	sub	a,-4 (ix)
   1F71 47                 6858 	ld	b,a
   1F72 3E 03              6859 	ld	a,#0x03
   1F74 DD 9E FD           6860 	sbc	a,-3 (ix)
   1F77 57                 6861 	ld	d,a
   1F78 DD 6E F8           6862 	ld	l,-8 (ix)
   1F7B DD 66 F9           6863 	ld	h,-7 (ix)
   1F7E 70                 6864 	ld	(hl),b
   1F7F 23                 6865 	inc	hl
   1F80 72                 6866 	ld	(hl),d
                           6867 ;demo.c:926: cmd.dest_x = 0+twelvetimes[x];
   1F81 21r2Es41           6868 	ld	hl,#_cmd + 4
   1F84 DD 75 F8           6869 	ld	-8 (ix),l
   1F87 DD 74 F9           6870 	ld	-7 (ix),h
   1F8A DD 7E FF           6871 	ld	a,-1 (ix)
   1F8D 87                 6872 	add	a,a
   1F8E C6r20              6873 	add	a,#<_twelvetimes
   1F90 6F                 6874 	ld	l,a
   1F91 3Es01              6875 	ld	a,#>_twelvetimes
   1F93 CE 00              6876 	adc	a,#0x00
   1F95 67                 6877 	ld	h,a
   1F96 46                 6878 	ld	b,(hl)
   1F97 23                 6879 	inc	hl
   1F98 56                 6880 	ld	d,(hl)
   1F99 DD 6E F8           6881 	ld	l,-8 (ix)
   1F9C DD 66 F9           6882 	ld	h,-7 (ix)
   1F9F 70                 6883 	ld	(hl),b
   1FA0 23                 6884 	inc	hl
   1FA1 72                 6885 	ld	(hl),d
                           6886 ;demo.c:927: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   1FA2 21r30s41           6887 	ld	hl,#_cmd + 6
   1FA5 DD 75 F8           6888 	ld	-8 (ix),l
   1FA8 DD 74 F9           6889 	ld	-7 (ix),h
   1FAB 3Er54              6890 	ld	a,#<_eighttimes
   1FAD DD 86 F7           6891 	add	a,-9 (ix)
   1FB0 6F                 6892 	ld	l,a
   1FB1 3Es01              6893 	ld	a,#>_eighttimes
   1FB3 CE 00              6894 	adc	a,#0x00
   1FB5 67                 6895 	ld	h,a
   1FB6 46                 6896 	ld	b,(hl)
   1FB7 23                 6897 	inc	hl
   1FB8 56                 6898 	ld	d,(hl)
   1FB9 78                 6899 	ld	a,b
   1FBA C6 04              6900 	add	a,#0x04
   1FBC 47                 6901 	ld	b,a
   1FBD 7A                 6902 	ld	a,d
   1FBE CE 00              6903 	adc	a,#0x00
   1FC0 57                 6904 	ld	d,a
   1FC1 78                 6905 	ld	a,b
   1FC2 81                 6906 	add	a,c
   1FC3 47                 6907 	ld	b,a
   1FC4 7A                 6908 	ld	a,d
   1FC5 8B                 6909 	adc	a,e
   1FC6 57                 6910 	ld	d,a
   1FC7 DD 6E F8           6911 	ld	l,-8 (ix)
   1FCA DD 66 F9           6912 	ld	h,-7 (ix)
   1FCD 70                 6913 	ld	(hl),b
   1FCE 23                 6914 	inc	hl
   1FCF 72                 6915 	ld	(hl),d
                           6916 ;demo.c:928: vdp_copier(&cmd);
   1FD0 C5                 6917 	push	bc
   1FD1 D5                 6918 	push	de
   1FD2 21r2As41           6919 	ld	hl,#_cmd
   1FD5 E5                 6920 	push	hl
   1FD6 CDr00s00           6921 	call	_vdp_copier
   1FD9 F1                 6922 	pop	af
   1FDA D1                 6923 	pop	de
   1FDB C1                 6924 	pop	bc
                           6925 ;demo.c:929: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   1FDC 21r30s41           6926 	ld	hl,#_cmd + 6
   1FDF DD 75 F8           6927 	ld	-8 (ix),l
   1FE2 DD 74 F9           6928 	ld	-7 (ix),h
   1FE5 3Er54              6929 	ld	a,#<_eighttimes
   1FE7 DD 86 F7           6930 	add	a,-9 (ix)
   1FEA 6F                 6931 	ld	l,a
   1FEB 3Es01              6932 	ld	a,#>_eighttimes
   1FED CE 00              6933 	adc	a,#0x00
   1FEF 67                 6934 	ld	h,a
   1FF0 46                 6935 	ld	b,(hl)
   1FF1 23                 6936 	inc	hl
   1FF2 56                 6937 	ld	d,(hl)
   1FF3 78                 6938 	ld	a,b
   1FF4 C6 04              6939 	add	a,#0x04
   1FF6 47                 6940 	ld	b,a
   1FF7 7A                 6941 	ld	a,d
   1FF8 CE 00              6942 	adc	a,#0x00
   1FFA C6 01              6943 	add	a,#0x01
   1FFC 57                 6944 	ld	d,a
   1FFD 78                 6945 	ld	a,b
   1FFE 81                 6946 	add	a,c
   1FFF 4F                 6947 	ld	c,a
   2000 7A                 6948 	ld	a,d
   2001 8B                 6949 	adc	a,e
   2002 5F                 6950 	ld	e,a
   2003 DD 6E F8           6951 	ld	l,-8 (ix)
   2006 DD 66 F9           6952 	ld	h,-7 (ix)
   2009 71                 6953 	ld	(hl),c
   200A 23                 6954 	inc	hl
   200B 73                 6955 	ld	(hl),e
                           6956 ;demo.c:930: vdp_copier(&cmd);
   200C 21r2As41           6957 	ld	hl,#_cmd
   200F E5                 6958 	push	hl
   2010 CDr00s00           6959 	call	_vdp_copier
   2013 F1                 6960 	pop	af
   2014                    6961 00110$:
                           6962 ;demo.c:912: for (x = 0; x < 21; x+=1) {
   2014 DD 34 FF           6963 	inc	-1 (ix)
   2017 C3r33s1E           6964 	jp	00108$
   201A                    6965 00134$:
                           6966 ;demo.c:911: for (y = 9; y < 15; y+=1) {
   201A DD 34 FE           6967 	inc	-2 (ix)
   201D C3r20s1E           6968 	jp	00132$
   2020                    6969 00113$:
                           6970 ;demo.c:936: if (buf == -1) { bo = 0; ya = 0; }
   2020 3Ar11s42           6971 	ld	a,(#_buf+0)
   2023 3C                 6972 	inc	a
   2024 20 06              6973 	jr	NZ,00188$
   2026 3Ar12s42           6974 	ld	a,(#_buf+1)
   2029 3C                 6975 	inc	a
   202A 28 02              6976 	jr	Z,00189$
   202C                    6977 00188$:
   202C 18 05              6978 	jr	00115$
   202E                    6979 00189$:
   202E 01 00 00           6980 	ld	bc,#0x0000
   2031 18 03              6981 	jr	00116$
   2033                    6982 00115$:
                           6983 ;demo.c:937: else { bo = 256; ya = 6;}
   2033 01 00 01           6984 	ld	bc,#0x0100
   2036                    6985 00116$:
                           6986 ;demo.c:939: cmd.size_x = 72;
   2036 11r32s41           6987 	ld	de,#_cmd + 8
   2039 EB                 6988 	ex	de,hl
   203A 36 48              6989 	ld	(hl),#0x48
   203C 23                 6990 	inc	hl
   203D 36 00              6991 	ld	(hl),#0x00
                           6992 ;demo.c:940: cmd.size_y = 80;
   203F 11r34s41           6993 	ld	de,#_cmd + 10
   2042 EB                 6994 	ex	de,hl
   2043 36 50              6995 	ld	(hl),#0x50
   2045 23                 6996 	inc	hl
   2046 36 00              6997 	ld	(hl),#0x00
                           6998 ;demo.c:941: cmd.data = 0;
   2048 11r36s41           6999 	ld	de,#_cmd + 12
   204B 3E 00              7000 	ld	a,#0x00
   204D 12                 7001 	ld	(de),a
                           7002 ;demo.c:942: cmd.argument = 0x00; // from 70xY to left
   204E 11r37s41           7003 	ld	de,#_cmd + 13
   2051 3E 00              7004 	ld	a,#0x00
   2053 12                 7005 	ld	(de),a
                           7006 ;demo.c:943: cmd.command = 0xd0; // vram to vram, y only
   2054 11r38s41           7007 	ld	de,#_cmd + 14
   2057 3E D0              7008 	ld	a,#0xD0
   2059 12                 7009 	ld	(de),a
                           7010 ;demo.c:944: cmd.source_x = 178;
   205A 21r2As41           7011 	ld	hl,#_cmd
   205D 36 B2              7012 	ld	(hl),#0xB2
   205F 23                 7013 	inc	hl
   2060 36 00              7014 	ld	(hl),#0x00
                           7015 ;demo.c:945: cmd.source_y = 0;
   2062 11r2Cs41           7016 	ld	de,#_cmd + 2
   2065 EB                 7017 	ex	de,hl
   2066 36 00              7018 	ld	(hl),#0x00
   2068 23                 7019 	inc	hl
   2069 36 00              7020 	ld	(hl),#0x00
                           7021 ;demo.c:946: cmd.dest_x = 84;
   206B 11r2Es41           7022 	ld	de,#_cmd + 4
   206E EB                 7023 	ex	de,hl
   206F 36 54              7024 	ld	(hl),#0x54
   2071 23                 7025 	inc	hl
   2072 36 00              7026 	ld	(hl),#0x00
                           7027 ;demo.c:947: cmd.dest_y = 72+bo;
   2074 11r30s41           7028 	ld	de,#_cmd + 6
   2077 21 48 00           7029 	ld	hl,#0x0048
   207A 09                 7030 	add	hl,bc
   207B 4D                 7031 	ld	c,l
   207C 44                 7032 	ld	b,h
   207D EB                 7033 	ex	de,hl
   207E 71                 7034 	ld	(hl),c
   207F 23                 7035 	inc	hl
   2080 70                 7036 	ld	(hl),b
                           7037 ;demo.c:948: vdp_copier(&cmd);
   2081 C5                 7038 	push	bc
   2082 21r2As41           7039 	ld	hl,#_cmd
   2085 E5                 7040 	push	hl
   2086 CDr00s00           7041 	call	_vdp_copier
   2089 F1                 7042 	pop	af
   208A C1                 7043 	pop	bc
                           7044 ;demo.c:950: lukema = ffa;
   208B 2Ar13s42           7045 	ld	hl,(_ffa)
   208E DD 75 FA           7046 	ld	-6 (ix),l
   2091 DD 74 FB           7047 	ld	-5 (ix),h
                           7048 ;demo.c:951: for (y = 0; y < 5; y+=1) {
   2094 DD 36 FE 00        7049 	ld	-2 (ix),#0x00
   2098                    7050 00140$:
   2098 DD 7E FE           7051 	ld	a,-2 (ix)
   209B D6 05              7052 	sub	a,#0x05
   209D D2rFEs21           7053 	jp	NC,00143$
                           7054 ;demo.c:952: for (x = 0; x < 6; x+=1) {
   20A0 DD 7E FE           7055 	ld	a,-2 (ix)
   20A3 87                 7056 	add	a,a
   20A4 DD 77 F7           7057 	ld	-9 (ix),a
   20A7 DD 36 FF 00        7058 	ld	-1 (ix),#0x00
   20AB                    7059 00136$:
   20AB DD 7E FF           7060 	ld	a,-1 (ix)
   20AE D6 06              7061 	sub	a,#0x06
   20B0 D2rF8s21           7062 	jp	NC,00142$
                           7063 ;demo.c:954: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   20B3 DD 5E FF           7064 	ld	e,-1 (ix)
   20B6 16 00              7065 	ld	d,#0x00
   20B8 CB 23              7066 	sla	e
   20BA CB 12              7067 	rl	d
   20BC CB 23              7068 	sla	e
   20BE CB 12              7069 	rl	d
   20C0 CB 23              7070 	sla	e
   20C2 CB 12              7071 	rl	d
   20C4 DD 7E FA           7072 	ld	a,-6 (ix)
   20C7 83                 7073 	add	a,e
   20C8 DD 77 F8           7074 	ld	-8 (ix),a
   20CB DD 7E FB           7075 	ld	a,-5 (ix)
   20CE 8A                 7076 	adc	a,d
   20CF DD 77 F9           7077 	ld	-7 (ix),a
   20D2 DD 5E FE           7078 	ld	e,-2 (ix)
   20D5 16 00              7079 	ld	d,#0x00
   20D7 CB 23              7080 	sla	e
   20D9 CB 12              7081 	rl	d
   20DB CB 23              7082 	sla	e
   20DD CB 12              7083 	rl	d
   20DF DD 7E F8           7084 	ld	a,-8 (ix)
   20E2 83                 7085 	add	a,e
   20E3 5F                 7086 	ld	e,a
   20E4 DD 7E F9           7087 	ld	a,-7 (ix)
   20E7 8A                 7088 	adc	a,d
   20E8 16 00              7089 	ld	d,#0x00
   20EA 21r00s00           7090 	ld	hl,#_sintab
   20ED 19                 7091 	add	hl,de
   20EE 5E                 7092 	ld	e,(hl)
   20EF CB 2B              7093 	sra	e
   20F1 CB 2B              7094 	sra	e
   20F3 CB 2B              7095 	sra	e
   20F5 CB 2B              7096 	sra	e
   20F7 7B                 7097 	ld	a,e
   20F8 17                 7098 	rla	
   20F9 9F                 7099 	sbc	a,a
   20FA 57                 7100 	ld	d,a
   20FB 21 07 00           7101 	ld	hl,#0x0007
   20FE 19                 7102 	add	hl,de
   20FF DD 75 FC           7103 	ld	-4 (ix),l
                           7104 ;demo.c:955: if (px < 0) px = 0; 
   2102 DD 74 FD           7105 	ld	-3 (ix),h
   2105 7C                 7106 	ld	a, h
   2106 CB 7F              7107 	bit	7,a
   2108 28 08              7108 	jr	Z,00118$
   210A DD 36 FC 00        7109 	ld	-4 (ix),#0x00
   210E DD 36 FD 00        7110 	ld	-3 (ix),#0x00
   2112                    7111 00118$:
                           7112 ;demo.c:956: if (px > 14) px = 14; 
   2112 3E 0E              7113 	ld	a,#0x0E
   2114 DD 96 FC           7114 	sub	a,-4 (ix)
   2117 3E 00              7115 	ld	a,#0x00
   2119 DD 9E FD           7116 	sbc	a,-3 (ix)
   211C F2r27s21           7117 	jp	P,00120$
   211F DD 36 FC 0E        7118 	ld	-4 (ix),#0x0E
   2123 DD 36 FD 00        7119 	ld	-3 (ix),#0x00
   2127                    7120 00120$:
                           7121 ;demo.c:958: cmd.size_x = 12;
   2127 11r32s41           7122 	ld	de,#_cmd + 8
   212A EB                 7123 	ex	de,hl
   212B 36 0C              7124 	ld	(hl),#0x0C
   212D 23                 7125 	inc	hl
   212E 36 00              7126 	ld	(hl),#0x00
                           7127 ;demo.c:959: cmd.size_y = 11;
   2130 11r34s41           7128 	ld	de,#_cmd + 10
   2133 EB                 7129 	ex	de,hl
   2134 36 0B              7130 	ld	(hl),#0x0B
   2136 23                 7131 	inc	hl
   2137 36 00              7132 	ld	(hl),#0x00
                           7133 ;demo.c:960: cmd.data = 0;
   2139 11r36s41           7134 	ld	de,#_cmd + 12
   213C 3E 00              7135 	ld	a,#0x00
   213E 12                 7136 	ld	(de),a
                           7137 ;demo.c:961: cmd.argument = 0x00; // from 70xY to left
   213F 11r37s41           7138 	ld	de,#_cmd + 13
   2142 3E 00              7139 	ld	a,#0x00
   2144 12                 7140 	ld	(de),a
                           7141 ;demo.c:962: cmd.command = 0x98; // vram to vram, y only
   2145 11r38s41           7142 	ld	de,#_cmd + 14
   2148 3E 98              7143 	ld	a,#0x98
   214A 12                 7144 	ld	(de),a
                           7145 ;demo.c:964: cmd.source_x = twelvetimes[px];
   214B DD 5E FC           7146 	ld	e,-4 (ix)
   214E DD 56 FD           7147 	ld	d,-3 (ix)
   2151 CB 23              7148 	sla	e
   2153 CB 12              7149 	rl	d
   2155 21r20s01           7150 	ld	hl,#_twelvetimes
   2158 19                 7151 	add	hl,de
   2159 5E                 7152 	ld	e,(hl)
   215A 23                 7153 	inc	hl
   215B 56                 7154 	ld	d,(hl)
   215C 21r2As41           7155 	ld	hl,#_cmd
   215F 73                 7156 	ld	(hl),e
   2160 23                 7157 	inc	hl
   2161 72                 7158 	ld	(hl),d
                           7159 ;demo.c:965: cmd.source_y = 768+183+16-px;
   2162 23                 7160 	inc	hl
   2163 DD 75 F8           7161 	ld	-8 (ix),l
   2166 DD 74 F9           7162 	ld	-7 (ix),h
   2169 3E C7              7163 	ld	a,#0xC7
   216B DD 96 FC           7164 	sub	a,-4 (ix)
   216E 5F                 7165 	ld	e,a
   216F 3E 03              7166 	ld	a,#0x03
   2171 DD 9E FD           7167 	sbc	a,-3 (ix)
   2174 57                 7168 	ld	d,a
   2175 DD 6E F8           7169 	ld	l,-8 (ix)
   2178 DD 66 F9           7170 	ld	h,-7 (ix)
   217B 73                 7171 	ld	(hl),e
   217C 23                 7172 	inc	hl
   217D 72                 7173 	ld	(hl),d
                           7174 ;demo.c:966: cmd.dest_x = 84+twelvetimes[x];
   217E 21r2Es41           7175 	ld	hl,#_cmd + 4
   2181 DD 75 F8           7176 	ld	-8 (ix),l
   2184 DD 74 F9           7177 	ld	-7 (ix),h
   2187 DD 7E FF           7178 	ld	a,-1 (ix)
   218A 87                 7179 	add	a,a
   218B C6r20              7180 	add	a,#<_twelvetimes
   218D 6F                 7181 	ld	l,a
   218E 3Es01              7182 	ld	a,#>_twelvetimes
   2190 CE 00              7183 	adc	a,#0x00
   2192 67                 7184 	ld	h,a
   2193 5E                 7185 	ld	e,(hl)
   2194 23                 7186 	inc	hl
   2195 56                 7187 	ld	d,(hl)
   2196 21 54 00           7188 	ld	hl,#0x0054
   2199 19                 7189 	add	hl,de
   219A EB                 7190 	ex	de,hl
   219B DD 6E F8           7191 	ld	l,-8 (ix)
   219E DD 66 F9           7192 	ld	h,-7 (ix)
   21A1 73                 7193 	ld	(hl),e
   21A2 23                 7194 	inc	hl
   21A3 72                 7195 	ld	(hl),d
                           7196 ;demo.c:967: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   21A4 21r30s41           7197 	ld	hl,#_cmd + 6
   21A7 DD 75 F8           7198 	ld	-8 (ix),l
   21AA DD 74 F9           7199 	ld	-7 (ix),h
   21AD 3Er54              7200 	ld	a,#<_eighttimes
   21AF DD 86 F7           7201 	add	a,-9 (ix)
   21B2 6F                 7202 	ld	l,a
   21B3 3Es01              7203 	ld	a,#>_eighttimes
   21B5 CE 00              7204 	adc	a,#0x00
   21B7 67                 7205 	ld	h,a
   21B8 5E                 7206 	ld	e,(hl)
   21B9 23                 7207 	inc	hl
   21BA 56                 7208 	ld	d,(hl)
   21BB 13                 7209 	inc	de
   21BC 13                 7210 	inc	de
   21BD 13                 7211 	inc	de
   21BE 13                 7212 	inc	de
   21BF 79                 7213 	ld	a,c
   21C0 83                 7214 	add	a,e
   21C1 DD 77 F5           7215 	ld	-11 (ix),a
   21C4 78                 7216 	ld	a,b
   21C5 8A                 7217 	adc	a,d
   21C6 DD 77 F6           7218 	ld	-10 (ix),a
   21C9 3E 0E              7219 	ld	a,#0x0E
   21CB DD 96 FC           7220 	sub	a,-4 (ix)
   21CE 5F                 7221 	ld	e,a
   21CF 3E 00              7222 	ld	a,#0x00
   21D1 DD 9E FD           7223 	sbc	a,-3 (ix)
   21D4 57                 7224 	ld	d,a
   21D5 DD 7E F5           7225 	ld	a,-11 (ix)
   21D8 83                 7226 	add	a,e
   21D9 5F                 7227 	ld	e,a
   21DA DD 7E F6           7228 	ld	a,-10 (ix)
   21DD 8A                 7229 	adc	a,d
   21DE 57                 7230 	ld	d,a
   21DF DD 6E F8           7231 	ld	l,-8 (ix)
   21E2 DD 66 F9           7232 	ld	h,-7 (ix)
   21E5 73                 7233 	ld	(hl),e
   21E6 23                 7234 	inc	hl
   21E7 72                 7235 	ld	(hl),d
                           7236 ;demo.c:968: vdp_copier(&cmd);
   21E8 C5                 7237 	push	bc
   21E9 21r2As41           7238 	ld	hl,#_cmd
   21EC E5                 7239 	push	hl
   21ED CDr00s00           7240 	call	_vdp_copier
   21F0 F1                 7241 	pop	af
   21F1 C1                 7242 	pop	bc
                           7243 ;demo.c:952: for (x = 0; x < 6; x+=1) {
   21F2 DD 34 FF           7244 	inc	-1 (ix)
   21F5 C3rABs20           7245 	jp	00136$
   21F8                    7246 00142$:
                           7247 ;demo.c:951: for (y = 0; y < 5; y+=1) {
   21F8 DD 34 FE           7248 	inc	-2 (ix)
   21FB C3r98s20           7249 	jp	00140$
   21FE                    7250 00143$:
                           7251 ;demo.c:973: for (x = 0; x < 6; x+=1) {
   21FE DD 36 FF 00        7252 	ld	-1 (ix),#0x00
   2202                    7253 00144$:
   2202 DD 7E FF           7254 	ld	a,-1 (ix)
   2205 D6 06              7255 	sub	a,#0x06
   2207 D2r48s23           7256 	jp	NC,00147$
                           7257 ;demo.c:974: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   220A DD 5E FF           7258 	ld	e,-1 (ix)
   220D 16 00              7259 	ld	d,#0x00
   220F CB 23              7260 	sla	e
   2211 CB 12              7261 	rl	d
   2213 CB 23              7262 	sla	e
   2215 CB 12              7263 	rl	d
   2217 CB 23              7264 	sla	e
   2219 CB 12              7265 	rl	d
   221B DD 7E FA           7266 	ld	a,-6 (ix)
   221E 83                 7267 	add	a,e
   221F 5F                 7268 	ld	e,a
   2220 DD 7E FB           7269 	ld	a,-5 (ix)
   2223 8A                 7270 	adc	a,d
   2224 57                 7271 	ld	d,a
   2225 21 14 00           7272 	ld	hl,#0x0014
   2228 19                 7273 	add	hl,de
   2229 5D                 7274 	ld	e,l
   222A 16 00              7275 	ld	d,#0x00
   222C 21r00s00           7276 	ld	hl,#_sintab
   222F 19                 7277 	add	hl,de
   2230 5E                 7278 	ld	e,(hl)
   2231 CB 2B              7279 	sra	e
   2233 CB 2B              7280 	sra	e
   2235 CB 2B              7281 	sra	e
   2237 CB 2B              7282 	sra	e
   2239 7B                 7283 	ld	a,e
   223A 17                 7284 	rla	
   223B 9F                 7285 	sbc	a,a
   223C 57                 7286 	ld	d,a
   223D 21 07 00           7287 	ld	hl,#0x0007
   2240 19                 7288 	add	hl,de
   2241 DD 75 FC           7289 	ld	-4 (ix),l
                           7290 ;demo.c:975: if (px < 0) px = 0; 
   2244 DD 74 FD           7291 	ld	-3 (ix),h
   2247 7C                 7292 	ld	a, h
   2248 CB 7F              7293 	bit	7,a
   224A 28 08              7294 	jr	Z,00122$
   224C DD 36 FC 00        7295 	ld	-4 (ix),#0x00
   2250 DD 36 FD 00        7296 	ld	-3 (ix),#0x00
   2254                    7297 00122$:
                           7298 ;demo.c:976: if (px > 14) px = 14; 
   2254 3E 0E              7299 	ld	a,#0x0E
   2256 DD 96 FC           7300 	sub	a,-4 (ix)
   2259 3E 00              7301 	ld	a,#0x00
   225B DD 9E FD           7302 	sbc	a,-3 (ix)
   225E F2r69s22           7303 	jp	P,00124$
   2261 DD 36 FC 0E        7304 	ld	-4 (ix),#0x0E
   2265 DD 36 FD 00        7305 	ld	-3 (ix),#0x00
   2269                    7306 00124$:
                           7307 ;demo.c:978: cmd.size_x = 12;
   2269 11r32s41           7308 	ld	de,#_cmd + 8
   226C EB                 7309 	ex	de,hl
   226D 36 0C              7310 	ld	(hl),#0x0C
   226F 23                 7311 	inc	hl
   2270 36 00              7312 	ld	(hl),#0x00
                           7313 ;demo.c:979: cmd.size_y = 27-(14-px);
   2272 21r34s41           7314 	ld	hl,#_cmd + 10
   2275 DD 75 F5           7315 	ld	-11 (ix),l
   2278 DD 74 F6           7316 	ld	-10 (ix),h
   227B 3E 0E              7317 	ld	a,#0x0E
   227D DD 96 FC           7318 	sub	a,-4 (ix)
   2280 DD 77 F8           7319 	ld	-8 (ix),a
   2283 3E 00              7320 	ld	a,#0x00
   2285 DD 9E FD           7321 	sbc	a,-3 (ix)
   2288 DD 77 F9           7322 	ld	-7 (ix),a
   228B 3E 1B              7323 	ld	a,#0x1B
   228D DD 96 F8           7324 	sub	a,-8 (ix)
   2290 5F                 7325 	ld	e,a
   2291 3E 00              7326 	ld	a,#0x00
   2293 DD 9E F9           7327 	sbc	a,-7 (ix)
   2296 57                 7328 	ld	d,a
   2297 DD 6E F5           7329 	ld	l,-11 (ix)
   229A DD 66 F6           7330 	ld	h,-10 (ix)
   229D 73                 7331 	ld	(hl),e
   229E 23                 7332 	inc	hl
   229F 72                 7333 	ld	(hl),d
                           7334 ;demo.c:980: cmd.data = 0;
   22A0 11r36s41           7335 	ld	de,#_cmd + 12
   22A3 3E 00              7336 	ld	a,#0x00
   22A5 12                 7337 	ld	(de),a
                           7338 ;demo.c:981: cmd.argument = 0x00; // from 70xY to left
   22A6 11r37s41           7339 	ld	de,#_cmd + 13
   22A9 3E 00              7340 	ld	a,#0x00
   22AB 12                 7341 	ld	(de),a
                           7342 ;demo.c:982: cmd.command = 0x98; // vram to vram, y only
   22AC 11r38s41           7343 	ld	de,#_cmd + 14
   22AF 3E 98              7344 	ld	a,#0x98
   22B1 12                 7345 	ld	(de),a
                           7346 ;demo.c:984: cmd.source_x = twelvetimes[px];
   22B2 DD 5E FC           7347 	ld	e,-4 (ix)
   22B5 DD 56 FD           7348 	ld	d,-3 (ix)
   22B8 CB 23              7349 	sla	e
   22BA CB 12              7350 	rl	d
   22BC 21r20s01           7351 	ld	hl,#_twelvetimes
   22BF 19                 7352 	add	hl,de
   22C0 5E                 7353 	ld	e,(hl)
   22C1 23                 7354 	inc	hl
   22C2 56                 7355 	ld	d,(hl)
   22C3 21r2As41           7356 	ld	hl,#_cmd
   22C6 73                 7357 	ld	(hl),e
   22C7 23                 7358 	inc	hl
   22C8 72                 7359 	ld	(hl),d
                           7360 ;demo.c:985: cmd.source_y = 768+183+ 16-px;
   22C9 23                 7361 	inc	hl
   22CA DD 75 F5           7362 	ld	-11 (ix),l
   22CD DD 74 F6           7363 	ld	-10 (ix),h
   22D0 3E C7              7364 	ld	a,#0xC7
   22D2 DD 96 FC           7365 	sub	a,-4 (ix)
   22D5 5F                 7366 	ld	e,a
   22D6 3E 03              7367 	ld	a,#0x03
   22D8 DD 9E FD           7368 	sbc	a,-3 (ix)
   22DB 57                 7369 	ld	d,a
   22DC DD 6E F5           7370 	ld	l,-11 (ix)
   22DF DD 66 F6           7371 	ld	h,-10 (ix)
   22E2 73                 7372 	ld	(hl),e
   22E3 23                 7373 	inc	hl
   22E4 72                 7374 	ld	(hl),d
                           7375 ;demo.c:986: cmd.dest_x = 84+twelvetimes[x];
   22E5 21r2Es41           7376 	ld	hl,#_cmd + 4
   22E8 DD 75 F5           7377 	ld	-11 (ix),l
   22EB DD 74 F6           7378 	ld	-10 (ix),h
   22EE DD 7E FF           7379 	ld	a,-1 (ix)
   22F1 87                 7380 	add	a,a
   22F2 C6r20              7381 	add	a,#<_twelvetimes
   22F4 6F                 7382 	ld	l,a
   22F5 3Es01              7383 	ld	a,#>_twelvetimes
   22F7 CE 00              7384 	adc	a,#0x00
   22F9 67                 7385 	ld	h,a
   22FA 5E                 7386 	ld	e,(hl)
   22FB 23                 7387 	inc	hl
   22FC 56                 7388 	ld	d,(hl)
   22FD 21 54 00           7389 	ld	hl,#0x0054
   2300 19                 7390 	add	hl,de
   2301 EB                 7391 	ex	de,hl
   2302 DD 6E F5           7392 	ld	l,-11 (ix)
   2305 DD 66 F6           7393 	ld	h,-10 (ix)
   2308 73                 7394 	ld	(hl),e
   2309 23                 7395 	inc	hl
   230A 72                 7396 	ld	(hl),d
                           7397 ;demo.c:987: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   230B 21r30s41           7398 	ld	hl,#_cmd + 6
   230E DD 75 F5           7399 	ld	-11 (ix),l
   2311 DD 74 F6           7400 	ld	-10 (ix),h
   2314 11r5Es01           7401 	ld	de,#_eighttimes + 10
   2317 EB                 7402 	ex	de,hl
   2318 5E                 7403 	ld	e,(hl)
   2319 23                 7404 	inc	hl
   231A 56                 7405 	ld	d,(hl)
   231B 13                 7406 	inc	de
   231C 13                 7407 	inc	de
   231D 13                 7408 	inc	de
   231E 13                 7409 	inc	de
   231F 79                 7410 	ld	a,c
   2320 83                 7411 	add	a,e
   2321 5F                 7412 	ld	e,a
   2322 78                 7413 	ld	a,b
   2323 8A                 7414 	adc	a,d
   2324 57                 7415 	ld	d,a
   2325 7B                 7416 	ld	a,e
   2326 DD 86 F8           7417 	add	a,-8 (ix)
   2329 5F                 7418 	ld	e,a
   232A 7A                 7419 	ld	a,d
   232B DD 8E F9           7420 	adc	a,-7 (ix)
   232E 57                 7421 	ld	d,a
   232F DD 6E F5           7422 	ld	l,-11 (ix)
   2332 DD 66 F6           7423 	ld	h,-10 (ix)
   2335 73                 7424 	ld	(hl),e
   2336 23                 7425 	inc	hl
   2337 72                 7426 	ld	(hl),d
                           7427 ;demo.c:988: vdp_copier(&cmd);
   2338 C5                 7428 	push	bc
   2339 21r2As41           7429 	ld	hl,#_cmd
   233C E5                 7430 	push	hl
   233D CDr00s00           7431 	call	_vdp_copier
   2340 F1                 7432 	pop	af
   2341 C1                 7433 	pop	bc
                           7434 ;demo.c:973: for (x = 0; x < 6; x+=1) {
   2342 DD 34 FF           7435 	inc	-1 (ix)
   2345 C3r02s22           7436 	jp	00144$
   2348                    7437 00147$:
                           7438 ;demo.c:992: if (buf == -1) vdp_register(2, 0x1F);
   2348 3Ar11s42           7439 	ld	a,(#_buf+0)
   234B 3C                 7440 	inc	a
   234C 20 06              7441 	jr	NZ,00200$
   234E 3Ar12s42           7442 	ld	a,(#_buf+1)
   2351 3C                 7443 	inc	a
   2352 28 02              7444 	jr	Z,00201$
   2354                    7445 00200$:
   2354 18 0A              7446 	jr	00126$
   2356                    7447 00201$:
   2356 21 02 1F           7448 	ld	hl,#0x1F02
   2359 E5                 7449 	push	hl
   235A CDr00s00           7450 	call	_vdp_register
   235D F1                 7451 	pop	af
   235E 18 08              7452 	jr	00127$
   2360                    7453 00126$:
                           7454 ;demo.c:993: else vdp_register(2, 0x3F);
   2360 21 02 3F           7455 	ld	hl,#0x3F02
   2363 E5                 7456 	push	hl
   2364 CDr00s00           7457 	call	_vdp_register
   2367 F1                 7458 	pop	af
   2368                    7459 00127$:
                           7460 ;demo.c:996: buf = -buf;
   2368 AF                 7461 	xor	a,a
   2369 FD 21r11s42        7462 	ld	iy,#_buf
   236D 3E 00              7463 	ld	a,#0x00
   236F FD 9E 00           7464 	sbc	a,0 (iy)
   2372 21r11s42           7465 	ld	hl,#_buf + 0
   2375 77                 7466 	ld	(hl), a
   2376 FD 21r11s42        7467 	ld	iy,#_buf
   237A 3E 00              7468 	ld	a,#0x00
   237C FD 9E 01           7469 	sbc	a,1 (iy)
   237F 21r12s42           7470 	ld	hl,#_buf + 1
   2382 77                 7471 	ld	(hl), a
                           7472 ;demo.c:998: ffa+=8;
   2383 21r13s42           7473 	ld	hl,#_ffa
   2386 7E                 7474 	ld	a,(hl)
   2387 C6 08              7475 	add	a,#0x08
   2389 23                 7476 	inc	hl
   238A 2B                 7477 	dec	hl
   238B C5                 7478 	push	bc
   238C 4F                 7479 	ld	c, a
   238D 23                 7480 	inc	hl
   238E 7E                 7481 	ld	a, (hl)
   238F 47                 7482 	ld	b, a
   2390 79                 7483 	ld	a, c
   2391 2B                 7484 	dec	hl
   2392 77                 7485 	ld	(hl), a
   2393 78                 7486 	ld	a, b
   2394 C1                 7487 	pop	bc
   2395 CE 00              7488 	adc	a,#0x00
   2397 23                 7489 	inc	hl
   2398 77                 7490 	ld	(hl),a
   2399 DD F9              7491 	ld	sp,ix
   239B DD E1              7492 	pop	ix
   239D C9                 7493 	ret
   239E                    7494 _thewave_end::
                           7495 ;demo.c:1004: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           7496 ;	---------------------------------
                           7497 ; Function drawtritile
                           7498 ; ---------------------------------
   239E                    7499 _drawtritile_start::
   239E                    7500 _drawtritile:
   239E DD E5              7501 	push	ix
   23A0 DD 21 00 00        7502 	ld	ix,#0
   23A4 DD 39              7503 	add	ix,sp
                           7504 ;demo.c:1005: cmd.source_x = tx;
   23A6 DD 4E 04           7505 	ld	c,4 (ix)
   23A9 06 00              7506 	ld	b,#0x00
   23AB 21r2As41           7507 	ld	hl,#_cmd
   23AE 71                 7508 	ld	(hl),c
   23AF 23                 7509 	inc	hl
   23B0 70                 7510 	ld	(hl),b
                           7511 ;demo.c:1006: cmd.source_y = ty-1;
   23B1 01r2Cs41           7512 	ld	bc,#_cmd + 2
   23B4 DD 5E 05           7513 	ld	e,5 (ix)
   23B7 DD 56 06           7514 	ld	d,6 (ix)
   23BA 1B                 7515 	dec	de
   23BB 69                 7516 	ld	l,c
   23BC 60                 7517 	ld	h,b
   23BD 73                 7518 	ld	(hl),e
   23BE 23                 7519 	inc	hl
   23BF 72                 7520 	ld	(hl),d
                           7521 ;demo.c:1007: cmd.dest_x = x;
   23C0 01r2Es41           7522 	ld	bc,#_cmd + 4
   23C3 DD 5E 07           7523 	ld	e,7 (ix)
   23C6 16 00              7524 	ld	d,#0x00
   23C8 69                 7525 	ld	l,c
   23C9 60                 7526 	ld	h,b
   23CA 73                 7527 	ld	(hl),e
   23CB 23                 7528 	inc	hl
   23CC 72                 7529 	ld	(hl),d
                           7530 ;demo.c:1008: cmd.dest_y = y;
   23CD 01r30s41           7531 	ld	bc,#_cmd + 6
   23D0 DD 5E 08           7532 	ld	e,8 (ix)
   23D3 16 00              7533 	ld	d,#0x00
   23D5 69                 7534 	ld	l,c
   23D6 60                 7535 	ld	h,b
   23D7 73                 7536 	ld	(hl),e
   23D8 23                 7537 	inc	hl
   23D9 72                 7538 	ld	(hl),d
                           7539 ;demo.c:1009: cmd.size_x = 16;
   23DA 21r32s41           7540 	ld	hl, #_cmd + 8
   23DD 36 10              7541 	ld	(hl),#0x10
   23DF 23                 7542 	inc	hl
   23E0 36 00              7543 	ld	(hl),#0x00
                           7544 ;demo.c:1010: cmd.size_y = 16;
   23E2 21r34s41           7545 	ld	hl, #_cmd + 10
   23E5 36 10              7546 	ld	(hl),#0x10
   23E7 23                 7547 	inc	hl
   23E8 36 00              7548 	ld	(hl),#0x00
                           7549 ;demo.c:1011: cmd.data = 0;
                           7550 ;demo.c:1012: cmd.argument = 0x00;
   23EA 3E 00              7551 	ld	a,#0x00
   23EC 32r36s41           7552 	ld	(#_cmd + 12),a
   23EF 32r37s41           7553 	ld	(#_cmd + 13),a
                           7554 ;demo.c:1013: cmd.command = 0xd0; // HMMM
   23F2 3E D0              7555 	ld	a,#0xD0
   23F4 32r38s41           7556 	ld	(#_cmd + 14),a
                           7557 ;demo.c:1014: vdp_copier(&cmd);
   23F7 21r2As41           7558 	ld	hl,#_cmd
   23FA E5                 7559 	push	hl
   23FB CDr00s00           7560 	call	_vdp_copier
   23FE F1                 7561 	pop	af
   23FF DD E1              7562 	pop	ix
   2401 C9                 7563 	ret
   2402                    7564 _drawtritile_end::
                           7565 ;demo.c:1021: void drawtilescreen(char* tripic) {
                           7566 ;	---------------------------------
                           7567 ; Function drawtilescreen
                           7568 ; ---------------------------------
   2402                    7569 _drawtilescreen_start::
   2402                    7570 _drawtilescreen:
   2402 DD E5              7571 	push	ix
   2404 DD 21 00 00        7572 	ld	ix,#0
   2408 DD 39              7573 	add	ix,sp
   240A F5                 7574 	push	af
   240B 3B                 7575 	dec	sp
                           7576 ;demo.c:1023: if(tilei >= 192) return;
   240C 3Ar16s42           7577 	ld	a,(#_tilei+0)
   240F D6 C0              7578 	sub	a,#0xC0
   2411 3Ar17s42           7579 	ld	a,(#_tilei+1)
   2414 DE 00              7580 	sbc	a,#0x00
   2416 FAr1Cs24           7581 	jp	M,00102$
   2419 C3rE7s24           7582 	jp	00112$
   241C                    7583 00102$:
                           7584 ;demo.c:1025: tiletick++;
   241C FD 21r1Cs42        7585 	ld	iy,#_tiletick
   2420 FD 34 00           7586 	inc	0 (iy)
                           7587 ;demo.c:1026: if (tiletick > 6) { tiletick = 0;}
   2423 3E 06              7588 	ld	a,#0x06
   2425 FD 21r1Cs42        7589 	ld	iy,#_tiletick
   2429 FD 96 00           7590 	sub	a,0 (iy)
   242C 30 0A              7591 	jr	NC,00104$
   242E FD 21r1Cs42        7592 	ld	iy,#_tiletick
   2432 FD 36 00 00        7593 	ld	0 (iy),#0x00
   2436 18 03              7594 	jr	00118$
   2438                    7595 00104$:
                           7596 ;demo.c:1027: else return;
   2438 C3rE7s24           7597 	jp	00112$
                           7598 ;demo.c:1028: for (i=0;i<20;i++) {
   243B                    7599 00118$:
   243B DD 36 FF 00        7600 	ld	-1 (ix),#0x00
   243F                    7601 00108$:
   243F DD 7E FF           7602 	ld	a,-1 (ix)
   2442 D6 14              7603 	sub	a,#0x14
   2444 D2rE7s24           7604 	jp	NC,00112$
                           7605 ;demo.c:1029: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2447 3Ar1As42           7606 	ld	a,(#_tiley+0)
   244A DD 77 FD           7607 	ld	-3 (ix),a
   244D 3Ar18s42           7608 	ld	a,(#_tilex+0)
   2450 DD 77 FE           7609 	ld	-2 (ix),a
   2453 21r16s42           7610 	ld	hl,#_tilei
   2456 DD 7E 04           7611 	ld	a,4 (ix)
   2459 86                 7612 	add	a,(hl)
   245A 57                 7613 	ld	d,a
   245B DD 7E 05           7614 	ld	a,5 (ix)
   245E 23                 7615 	inc	hl
   245F 8E                 7616 	adc	a,(hl)
   2460 6A                 7617 	ld	l,d
   2461 67                 7618 	ld	h,a
   2462 56                 7619 	ld	d,(hl)
   2463 7A                 7620 	ld	a,d
   2464 87                 7621 	add	a,a
   2465 C6r88              7622 	add	a,#<_tri_lookup_y
   2467 6F                 7623 	ld	l,a
   2468 3Es01              7624 	ld	a,#>_tri_lookup_y
   246A CE 00              7625 	adc	a,#0x00
   246C 67                 7626 	ld	h,a
   246D 4E                 7627 	ld	c,(hl)
   246E 23                 7628 	inc	hl
   246F 5E                 7629 	ld	e,(hl)
   2470 3Er00              7630 	ld	a,#<_tri_lookup_x
   2472 82                 7631 	add	a,d
   2473 6F                 7632 	ld	l,a
   2474 3Es01              7633 	ld	a,#>_tri_lookup_x
   2476 CE 00              7634 	adc	a,#0x00
   2478 67                 7635 	ld	h,a
   2479 56                 7636 	ld	d,(hl)
   247A DD 66 FD           7637 	ld	h,-3 (ix)
   247D DD 6E FE           7638 	ld	l,-2 (ix)
   2480 E5                 7639 	push	hl
   2481 69                 7640 	ld	l,c
   2482 63                 7641 	ld	h,e
   2483 E5                 7642 	push	hl
   2484 D5                 7643 	push	de
   2485 33                 7644 	inc	sp
   2486 CDr9Es23           7645 	call	_drawtritile
   2489 F1                 7646 	pop	af
   248A F1                 7647 	pop	af
   248B 33                 7648 	inc	sp
                           7649 ;demo.c:1030: tilex+=16;
   248C 21r18s42           7650 	ld	hl,#_tilex
   248F 7E                 7651 	ld	a,(hl)
   2490 C6 10              7652 	add	a,#0x10
   2492 23                 7653 	inc	hl
   2493 2B                 7654 	dec	hl
   2494 C5                 7655 	push	bc
   2495 4F                 7656 	ld	c, a
   2496 23                 7657 	inc	hl
   2497 7E                 7658 	ld	a, (hl)
   2498 47                 7659 	ld	b, a
   2499 79                 7660 	ld	a, c
   249A 2B                 7661 	dec	hl
   249B 77                 7662 	ld	(hl), a
   249C 78                 7663 	ld	a, b
   249D C1                 7664 	pop	bc
   249E CE 00              7665 	adc	a,#0x00
   24A0 23                 7666 	inc	hl
   24A1 77                 7667 	ld	(hl),a
                           7668 ;demo.c:1031: tilei++;
   24A2 FD 21r16s42        7669 	ld	iy,#_tilei
   24A6 FD 34 00           7670 	inc	0 (iy)
   24A9 20 07              7671 	jr	NZ,00119$
   24AB FD 21r16s42        7672 	ld	iy,#_tilei
   24AF FD 34 01           7673 	inc	1 (iy)
   24B2                    7674 00119$:
                           7675 ;demo.c:1032: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   24B2 3Ar18s42           7676 	ld	a,(#_tilex+0)
   24B5 D6 00              7677 	sub	a,#0x00
   24B7 3Ar19s42           7678 	ld	a,(#_tilex+1)
   24BA DE 01              7679 	sbc	a,#0x01
   24BC FArE1s24           7680 	jp	M,00110$
   24BF 21r18s42           7681 	ld	hl,#_tilex + 0
   24C2 36 00              7682 	ld	(hl), #0x00
   24C4 21r19s42           7683 	ld	hl,#_tilex + 1
   24C7 36 00              7684 	ld	(hl), #0x00
   24C9 21r1As42           7685 	ld	hl,#_tiley
   24CC 7E                 7686 	ld	a,(hl)
   24CD C6 10              7687 	add	a,#0x10
   24CF 23                 7688 	inc	hl
   24D0 2B                 7689 	dec	hl
   24D1 C5                 7690 	push	bc
   24D2 4F                 7691 	ld	c, a
   24D3 23                 7692 	inc	hl
   24D4 7E                 7693 	ld	a, (hl)
   24D5 47                 7694 	ld	b, a
   24D6 79                 7695 	ld	a, c
   24D7 2B                 7696 	dec	hl
   24D8 77                 7697 	ld	(hl), a
   24D9 78                 7698 	ld	a, b
   24DA C1                 7699 	pop	bc
   24DB CE 00              7700 	adc	a,#0x00
   24DD 23                 7701 	inc	hl
   24DE 77                 7702 	ld	(hl),a
   24DF 18 06              7703 	jr	00112$
   24E1                    7704 00110$:
                           7705 ;demo.c:1028: for (i=0;i<20;i++) {
   24E1 DD 34 FF           7706 	inc	-1 (ix)
   24E4 C3r3Fs24           7707 	jp	00108$
   24E7                    7708 00112$:
   24E7 DD F9              7709 	ld	sp,ix
   24E9 DD E1              7710 	pop	ix
   24EB C9                 7711 	ret
   24EC                    7712 _drawtilescreen_end::
                           7713 ;demo.c:1037: void drawtilescreen_full(char* tripic) {
                           7714 ;	---------------------------------
                           7715 ; Function drawtilescreen_full
                           7716 ; ---------------------------------
   24EC                    7717 _drawtilescreen_full_start::
   24EC                    7718 _drawtilescreen_full:
   24EC DD E5              7719 	push	ix
   24EE DD 21 00 00        7720 	ld	ix,#0
   24F2 DD 39              7721 	add	ix,sp
   24F4 21 F8 FF           7722 	ld	hl,#-8
   24F7 39                 7723 	add	hl,sp
   24F8 F9                 7724 	ld	sp,hl
                           7725 ;demo.c:1038: int x = 0;
   24F9 DD 36 FE 00        7726 	ld	-2 (ix),#0x00
   24FD DD 36 FF 00        7727 	ld	-1 (ix),#0x00
                           7728 ;demo.c:1041: while(i < 192) {
   2501 DD 36 FC 00        7729 	ld	-4 (ix),#0x00
   2505 DD 36 FD 00        7730 	ld	-3 (ix),#0x00
   2509 DD 36 FA 00        7731 	ld	-6 (ix),#0x00
   250D DD 36 FB 00        7732 	ld	-5 (ix),#0x00
   2511                    7733 00103$:
   2511 DD 7E FA           7734 	ld	a,-6 (ix)
   2514 D6 C0              7735 	sub	a,#0xC0
   2516 DD 7E FB           7736 	ld	a,-5 (ix)
   2519 DE 00              7737 	sbc	a,#0x00
   251B F2rA2s25           7738 	jp	P,00106$
                           7739 ;demo.c:1042: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   251E DD 7E FC           7740 	ld	a,-4 (ix)
   2521 DD 77 F8           7741 	ld	-8 (ix),a
   2524 DD 7E FE           7742 	ld	a,-2 (ix)
   2527 DD 77 F9           7743 	ld	-7 (ix),a
   252A DD 7E 04           7744 	ld	a,4 (ix)
   252D DD 86 FA           7745 	add	a,-6 (ix)
   2530 4F                 7746 	ld	c,a
   2531 DD 7E 05           7747 	ld	a,5 (ix)
   2534 DD 8E FB           7748 	adc	a,-5 (ix)
   2537 47                 7749 	ld	b,a
   2538 0A                 7750 	ld	a,(bc)
   2539 4F                 7751 	ld	c,a
   253A 87                 7752 	add	a,a
   253B C6r88              7753 	add	a,#<_tri_lookup_y
   253D 6F                 7754 	ld	l,a
   253E 3Es01              7755 	ld	a,#>_tri_lookup_y
   2540 CE 00              7756 	adc	a,#0x00
   2542 67                 7757 	ld	h,a
   2543 46                 7758 	ld	b,(hl)
   2544 23                 7759 	inc	hl
   2545 56                 7760 	ld	d,(hl)
   2546 3Er00              7761 	ld	a,#<_tri_lookup_x
   2548 81                 7762 	add	a,c
   2549 6F                 7763 	ld	l,a
   254A 3Es01              7764 	ld	a,#>_tri_lookup_x
   254C CE 00              7765 	adc	a,#0x00
   254E 67                 7766 	ld	h,a
   254F 4E                 7767 	ld	c,(hl)
   2550 DD 66 F8           7768 	ld	h,-8 (ix)
   2553 DD 6E F9           7769 	ld	l,-7 (ix)
   2556 E5                 7770 	push	hl
   2557 58                 7771 	ld	e,b
   2558 D5                 7772 	push	de
   2559 79                 7773 	ld	a,c
   255A F5                 7774 	push	af
   255B 33                 7775 	inc	sp
   255C CDr9Es23           7776 	call	_drawtritile
   255F F1                 7777 	pop	af
   2560 F1                 7778 	pop	af
   2561 33                 7779 	inc	sp
                           7780 ;demo.c:1043: x+=16;
   2562 DD 7E FE           7781 	ld	a,-2 (ix)
   2565 C6 10              7782 	add	a,#0x10
   2567 DD 77 FE           7783 	ld	-2 (ix),a
   256A DD 7E FF           7784 	ld	a,-1 (ix)
   256D CE 00              7785 	adc	a,#0x00
   256F DD 77 FF           7786 	ld	-1 (ix),a
                           7787 ;demo.c:1044: if (x >= 256) {x = 0; y+=16;}
   2572 DD 7E FE           7788 	ld	a,-2 (ix)
   2575 D6 00              7789 	sub	a,#0x00
   2577 DD 7E FF           7790 	ld	a,-1 (ix)
   257A DE 01              7791 	sbc	a,#0x01
   257C FAr97s25           7792 	jp	M,00102$
   257F DD 36 FE 00        7793 	ld	-2 (ix),#0x00
   2583 DD 36 FF 00        7794 	ld	-1 (ix),#0x00
   2587 DD 7E FC           7795 	ld	a,-4 (ix)
   258A C6 10              7796 	add	a,#0x10
   258C DD 77 FC           7797 	ld	-4 (ix),a
   258F DD 7E FD           7798 	ld	a,-3 (ix)
   2592 CE 00              7799 	adc	a,#0x00
   2594 DD 77 FD           7800 	ld	-3 (ix),a
   2597                    7801 00102$:
                           7802 ;demo.c:1045: i++;
   2597 DD 34 FA           7803 	inc	-6 (ix)
   259A 20 03              7804 	jr	NZ,00112$
   259C DD 34 FB           7805 	inc	-5 (ix)
   259F                    7806 00112$:
   259F C3r11s25           7807 	jp	00103$
   25A2                    7808 00106$:
   25A2 DD F9              7809 	ld	sp,ix
   25A4 DD E1              7810 	pop	ix
   25A6 C9                 7811 	ret
   25A7                    7812 _drawtilescreen_full_end::
                           7813 ;demo.c:1061: void tritiles() {
                           7814 ;	---------------------------------
                           7815 ; Function tritiles
                           7816 ; ---------------------------------
   25A7                    7817 _tritiles_start::
   25A7                    7818 _tritiles:
   25A7 DD E5              7819 	push	ix
   25A9 DD 21 00 00        7820 	ld	ix,#0
   25AD DD 39              7821 	add	ix,sp
   25AF 21 FB FF           7822 	ld	hl,#-5
   25B2 39                 7823 	add	hl,sp
   25B3 F9                 7824 	ld	sp,hl
                           7825 ;demo.c:1068: if (tri_inited == 0 || tri_inited == 2) {
   25B4 AF                 7826 	xor	a,a
   25B5 FD 21r15s42        7827 	ld	iy,#_tri_inited
   25B9 FD B6 00           7828 	or	a,0 (iy)
   25BC 28 0C              7829 	jr	Z,00106$
   25BE FD 21r15s42        7830 	ld	iy,#_tri_inited
   25C2 FD 7E 00           7831 	ld	a,0 (iy)
   25C5 D6 02              7832 	sub	a,#0x02
   25C7 C2r23s27           7833 	jp	NZ,00107$
   25CA                    7834 00106$:
                           7835 ;demo.c:1070: cmd.size_x = 2;
   25CA 21r32s41           7836 	ld	hl, #_cmd + 8
   25CD 36 02              7837 	ld	(hl),#0x02
   25CF 23                 7838 	inc	hl
   25D0 36 00              7839 	ld	(hl),#0x00
                           7840 ;demo.c:1071: cmd.size_y = 212;
   25D2 21r34s41           7841 	ld	hl, #_cmd + 10
   25D5 36 D4              7842 	ld	(hl),#0xD4
   25D7 23                 7843 	inc	hl
   25D8 36 00              7844 	ld	(hl),#0x00
                           7845 ;demo.c:1072: cmd.data = 0;
                           7846 ;demo.c:1073: cmd.argument = 0x00; // from 70xY to left
   25DA 3E 00              7847 	ld	a,#0x00
   25DC 32r36s41           7848 	ld	(#_cmd + 12),a
   25DF 32r37s41           7849 	ld	(#_cmd + 13),a
                           7850 ;demo.c:1074: cmd.command = 0xd0; // vram to vram, y only
   25E2 3E D0              7851 	ld	a,#0xD0
   25E4 32r38s41           7852 	ld	(#_cmd + 14),a
                           7853 ;demo.c:1075: cmd.source_x = 255;
   25E7 21r2As41           7854 	ld	hl,#_cmd
   25EA 36 FF              7855 	ld	(hl),#0xFF
   25EC 23                 7856 	inc	hl
   25ED 36 00              7857 	ld	(hl),#0x00
                           7858 ;demo.c:1076: cmd.source_y = 0;
   25EF 01r2Cs41           7859 	ld	bc,#_cmd + 2
   25F2 69                 7860 	ld	l,c
   25F3 60                 7861 	ld	h,b
   25F4 36 00              7862 	ld	(hl),#0x00
   25F6 23                 7863 	inc	hl
   25F7 36 00              7864 	ld	(hl),#0x00
                           7865 ;demo.c:1078: for (x = 0; x < 128; x+=2) {
   25F9 DD 36 FE 00        7866 	ld	-2 (ix),#0x00
   25FD DD 36 FF 00        7867 	ld	-1 (ix),#0x00
   2601                    7868 00167$:
   2601 DD 7E FE           7869 	ld	a,-2 (ix)
   2604 D6 80              7870 	sub	a,#0x80
   2606 DD 7E FF           7871 	ld	a,-1 (ix)
   2609 DE 00              7872 	sbc	a,#0x00
   260B F2r8As26           7873 	jp	P,00170$
                           7874 ;demo.c:1079: waitVB();
   260E 76                 7875 		halt 
                           7876 ;demo.c:1080: cmd.dest_y = 256;
   260F 11r30s41           7877 	ld	de,#_cmd + 6
   2612 EB                 7878 	ex	de,hl
   2613 36 00              7879 	ld	(hl),#0x00
   2615 23                 7880 	inc	hl
   2616 36 01              7881 	ld	(hl),#0x01
                           7882 ;demo.c:1081: cmd.dest_x = 128-x;
   2618 11r2Es41           7883 	ld	de,#_cmd + 4
   261B 3E 80              7884 	ld	a,#0x80
   261D DD 96 FE           7885 	sub	a,-2 (ix)
   2620 4F                 7886 	ld	c,a
   2621 3E 00              7887 	ld	a,#0x00
   2623 DD 9E FF           7888 	sbc	a,-1 (ix)
   2626 47                 7889 	ld	b,a
   2627 EB                 7890 	ex	de,hl
   2628 71                 7891 	ld	(hl),c
   2629 23                 7892 	inc	hl
   262A 70                 7893 	ld	(hl),b
                           7894 ;demo.c:1082: vdp_copier(&cmd);
   262B 21r2As41           7895 	ld	hl,#_cmd
   262E E5                 7896 	push	hl
   262F CDr00s00           7897 	call	_vdp_copier
   2632 F1                 7898 	pop	af
                           7899 ;demo.c:1083: cmd.dest_y = 0;
   2633 21r30s41           7900 	ld	hl, #_cmd + 6
   2636 36 00              7901 	ld	(hl),#0x00
   2638 23                 7902 	inc	hl
   2639 36 00              7903 	ld	(hl),#0x00
                           7904 ;demo.c:1084: vdp_copier(&cmd);
   263B 21r2As41           7905 	ld	hl,#_cmd
   263E E5                 7906 	push	hl
   263F CDr00s00           7907 	call	_vdp_copier
   2642 F1                 7908 	pop	af
                           7909 ;demo.c:1085: cmd.dest_y = 256;
   2643 21r30s41           7910 	ld	hl, #_cmd + 6
   2646 36 00              7911 	ld	(hl),#0x00
   2648 23                 7912 	inc	hl
   2649 36 01              7913 	ld	(hl),#0x01
                           7914 ;demo.c:1086: cmd.dest_x = 128+x;
   264B 01r2Es41           7915 	ld	bc,#_cmd + 4
   264E DD 7E FE           7916 	ld	a,-2 (ix)
   2651 C6 80              7917 	add	a,#0x80
   2653 5F                 7918 	ld	e,a
   2654 DD 7E FF           7919 	ld	a,-1 (ix)
   2657 CE 00              7920 	adc	a,#0x00
   2659 57                 7921 	ld	d,a
   265A 69                 7922 	ld	l,c
   265B 60                 7923 	ld	h,b
   265C 73                 7924 	ld	(hl),e
   265D 23                 7925 	inc	hl
   265E 72                 7926 	ld	(hl),d
                           7927 ;demo.c:1087: vdp_copier(&cmd);
   265F 21r2As41           7928 	ld	hl,#_cmd
   2662 E5                 7929 	push	hl
   2663 CDr00s00           7930 	call	_vdp_copier
   2666 F1                 7931 	pop	af
                           7932 ;demo.c:1088: cmd.dest_y = 0;
   2667 21r30s41           7933 	ld	hl, #_cmd + 6
   266A 36 00              7934 	ld	(hl),#0x00
   266C 23                 7935 	inc	hl
   266D 36 00              7936 	ld	(hl),#0x00
                           7937 ;demo.c:1089: vdp_copier(&cmd);
   266F 21r2As41           7938 	ld	hl,#_cmd
   2672 E5                 7939 	push	hl
   2673 CDr00s00           7940 	call	_vdp_copier
   2676 F1                 7941 	pop	af
                           7942 ;demo.c:1078: for (x = 0; x < 128; x+=2) {
   2677 DD 7E FE           7943 	ld	a,-2 (ix)
   267A C6 02              7944 	add	a,#0x02
   267C DD 77 FE           7945 	ld	-2 (ix),a
   267F DD 7E FF           7946 	ld	a,-1 (ix)
   2682 CE 00              7947 	adc	a,#0x00
   2684 DD 77 FF           7948 	ld	-1 (ix),a
   2687 C3r01s26           7949 	jp	00167$
   268A                    7950 00170$:
                           7951 ;demo.c:1092: scratch_clear();
   268A CDr24s08           7952 	call	_scratch_clear
                           7953 ;demo.c:1093: vdp_load_palette(scratch);
   268D 21rC6s3F           7954 	ld	hl,#_scratch
   2690 E5                 7955 	push	hl
   2691 CDr00s00           7956 	call	_vdp_load_palette
   2694 F1                 7957 	pop	af
                           7958 ;demo.c:1095: tri_inited++;
   2695 FD 21r15s42        7959 	ld	iy,#_tri_inited
   2699 FD 34 00           7960 	inc	0 (iy)
                           7961 ;demo.c:1096: vdp_register(9,2); // 50hz,192
   269C 21 09 02           7962 	ld	hl,#0x0209
   269F E5                 7963 	push	hl
   26A0 CDr00s00           7964 	call	_vdp_register
   26A3 F1                 7965 	pop	af
                           7966 ;demo.c:1100: vdp_register(2, 0x1f);
   26A4 21 02 1F           7967 	ld	hl,#0x1F02
   26A7 E5                 7968 	push	hl
   26A8 CDr00s00           7969 	call	_vdp_register
   26AB F1                 7970 	pop	af
                           7971 ;demo.c:1101: tick = 0;
   26AC 21r28s41           7972 	ld	hl,#_tick + 0
   26AF 36 00              7973 	ld	(hl), #0x00
   26B1 21r29s41           7974 	ld	hl,#_tick + 1
   26B4 36 00              7975 	ld	(hl), #0x00
                           7976 ;demo.c:1104: if (tri_inited == 0) vdp_load_palette(boxes_palette);
   26B6 AF                 7977 	xor	a,a
   26B7 21r15s42           7978 	ld	hl,#_tri_inited + 0
   26BA B6                 7979 	or	a,(hl)
   26BB 20 0A              7980 	jr	NZ,00104$
   26BD 21rE6s40           7981 	ld	hl,#_boxes_palette
   26C0 E5                 7982 	push	hl
   26C1 CDr00s00           7983 	call	_vdp_load_palette
   26C4 F1                 7984 	pop	af
   26C5 18 46              7985 	jr	00105$
   26C7                    7986 00104$:
                           7987 ;demo.c:1105: else if (tri_inited == 2) { 
   26C7 3Ar15s42           7988 	ld	a,(#_tri_inited+0)
   26CA D6 02              7989 	sub	a,#0x02
   26CC 20 3F              7990 	jr	NZ,00105$
                           7991 ;demo.c:1106: vdp_load_palette(boxes_palette); 
   26CE 21rE6s40           7992 	ld	hl,#_boxes_palette
   26D1 E5                 7993 	push	hl
   26D2 CDr00s00           7994 	call	_vdp_load_palette
   26D5 F1                 7995 	pop	af
                           7996 ;demo.c:1107: triframes = 0; 
   26D6 21r28s42           7997 	ld	hl,#_triframes + 0
   26D9 36 00              7998 	ld	(hl), #0x00
   26DB 21r29s42           7999 	ld	hl,#_triframes + 1
   26DE 36 00              8000 	ld	(hl), #0x00
                           8001 ;demo.c:1109: tripal[0] = 4;
   26E0 21r1Ds42           8002 	ld	hl,#_tripal
   26E3 36 04              8003 	ld	(hl),#0x04
                           8004 ;demo.c:1110: tripal[1] = 4;
   26E5 3E 04              8005 	ld	a,#0x04
   26E7 32r1Es42           8006 	ld	(#_tripal + 1),a
                           8007 ;demo.c:1111: tripal[2] = 3;
   26EA 3E 03              8008 	ld	a,#0x03
   26EC 32r1Fs42           8009 	ld	(#_tripal + 2),a
                           8010 ;demo.c:1113: tripal[3] = 2;
   26EF 3E 02              8011 	ld	a,#0x02
   26F1 32r20s42           8012 	ld	(#_tripal + 3),a
                           8013 ;demo.c:1114: tripal[4] = 3;
   26F4 3E 03              8014 	ld	a,#0x03
   26F6 32r21s42           8015 	ld	(#_tripal + 4),a
                           8016 ;demo.c:1115: tripal[5] = 4;
   26F9 3E 04              8017 	ld	a,#0x04
   26FB 32r22s42           8018 	ld	(#_tripal + 5),a
                           8019 ;demo.c:1117: tripal[6] = 1;
   26FE 3E 01              8020 	ld	a,#0x01
   2700 32r23s42           8021 	ld	(#_tripal + 6),a
                           8022 ;demo.c:1118: tripal[7] = 3;
   2703 3E 03              8023 	ld	a,#0x03
   2705 32r24s42           8024 	ld	(#_tripal + 7),a
                           8025 ;demo.c:1119: tripal[8] = 1;
   2708 3E 01              8026 	ld	a,#0x01
   270A 32r25s42           8027 	ld	(#_tripal + 8),a
   270D                    8028 00105$:
                           8029 ;demo.c:1122: msx2_palette(15,0,0,0);
   270D 21 00 00           8030 	ld	hl,#0x0000
   2710 E5                 8031 	push	hl
   2711 2E 0F              8032 	ld	l, #0x0F
   2713 E5                 8033 	push	hl
   2714 CDr00s00           8034 	call	_msx2_palette
   2717 F1                 8035 	pop	af
   2718 F1                 8036 	pop	af
                           8037 ;demo.c:1123: triframes = 1350;
   2719 21r28s42           8038 	ld	hl,#_triframes + 0
   271C 36 46              8039 	ld	(hl), #0x46
   271E 21r29s42           8040 	ld	hl,#_triframes + 1
   2721 36 05              8041 	ld	(hl), #0x05
   2723                    8042 00107$:
                           8043 ;demo.c:1127: if (tri_inited == 1) triframes++;
   2723 3Ar15s42           8044 	ld	a,(#_tri_inited+0)
   2726 D6 01              8045 	sub	a,#0x01
   2728 20 10              8046 	jr	NZ,00110$
   272A FD 21r28s42        8047 	ld	iy,#_triframes
   272E FD 34 00           8048 	inc	0 (iy)
   2731 20 07              8049 	jr	NZ,00225$
   2733 FD 21r28s42        8050 	ld	iy,#_triframes
   2737 FD 34 01           8051 	inc	1 (iy)
   273A                    8052 00225$:
   273A                    8053 00110$:
                           8054 ;demo.c:1129: if (triframes == 150) { tilei = 0; tilex = 0; tiley = 0; }
   273A 3Ar28s42           8055 	ld	a,(#_triframes+0)
   273D D6 96              8056 	sub	a,#0x96
   273F 20 06              8057 	jr	NZ,00226$
   2741 3Ar29s42           8058 	ld	a,(#_triframes+1)
   2744 B7                 8059 	or	a,a
   2745 28 02              8060 	jr	Z,00227$
   2747                    8061 00226$:
   2747 18 1E              8062 	jr	00112$
   2749                    8063 00227$:
   2749 21r16s42           8064 	ld	hl,#_tilei + 0
   274C 36 00              8065 	ld	(hl), #0x00
   274E 21r17s42           8066 	ld	hl,#_tilei + 1
   2751 36 00              8067 	ld	(hl), #0x00
   2753 21r18s42           8068 	ld	hl,#_tilex + 0
   2756 36 00              8069 	ld	(hl), #0x00
   2758 21r19s42           8070 	ld	hl,#_tilex + 1
   275B 36 00              8071 	ld	(hl), #0x00
   275D 21r1As42           8072 	ld	hl,#_tiley + 0
   2760 36 00              8073 	ld	(hl), #0x00
   2762 21r1Bs42           8074 	ld	hl,#_tiley + 1
   2765 36 00              8075 	ld	(hl), #0x00
   2767                    8076 00112$:
                           8077 ;demo.c:1130: if (triframes >= 150 && triframes < 300) {
   2767 3Ar28s42           8078 	ld	a,(#_triframes+0)
   276A D6 96              8079 	sub	a,#0x96
   276C 3Ar29s42           8080 	ld	a,(#_triframes+1)
   276F DE 00              8081 	sbc	a,#0x00
   2771 FAr89s27           8082 	jp	M,00114$
   2774 3Ar28s42           8083 	ld	a,(#_triframes+0)
   2777 D6 2C              8084 	sub	a,#0x2C
   2779 3Ar29s42           8085 	ld	a,(#_triframes+1)
   277C DE 01              8086 	sbc	a,#0x01
   277E F2r89s27           8087 	jp	P,00114$
                           8088 ;demo.c:1131: drawtilescreen(tri_up);
   2781 21rECs01           8089 	ld	hl,#_tri_up
   2784 E5                 8090 	push	hl
   2785 CDr02s24           8091 	call	_drawtilescreen
   2788 F1                 8092 	pop	af
   2789                    8093 00114$:
                           8094 ;demo.c:1134: if (triframes == 300) { tilei = 0; tilex = 0; tiley = 0; }
   2789 3Ar28s42           8095 	ld	a,(#_triframes+0)
   278C D6 2C              8096 	sub	a,#0x2C
   278E 20 07              8097 	jr	NZ,00228$
   2790 3Ar29s42           8098 	ld	a,(#_triframes+1)
   2793 D6 01              8099 	sub	a,#0x01
   2795 28 02              8100 	jr	Z,00229$
   2797                    8101 00228$:
   2797 18 1E              8102 	jr	00117$
   2799                    8103 00229$:
   2799 21r16s42           8104 	ld	hl,#_tilei + 0
   279C 36 00              8105 	ld	(hl), #0x00
   279E 21r17s42           8106 	ld	hl,#_tilei + 1
   27A1 36 00              8107 	ld	(hl), #0x00
   27A3 21r18s42           8108 	ld	hl,#_tilex + 0
   27A6 36 00              8109 	ld	(hl), #0x00
   27A8 21r19s42           8110 	ld	hl,#_tilex + 1
   27AB 36 00              8111 	ld	(hl), #0x00
   27AD 21r1As42           8112 	ld	hl,#_tiley + 0
   27B0 36 00              8113 	ld	(hl), #0x00
   27B2 21r1Bs42           8114 	ld	hl,#_tiley + 1
   27B5 36 00              8115 	ld	(hl), #0x00
   27B7                    8116 00117$:
                           8117 ;demo.c:1135: if (triframes >= 300 && triframes < 450) {
   27B7 3Ar28s42           8118 	ld	a,(#_triframes+0)
   27BA D6 2C              8119 	sub	a,#0x2C
   27BC 3Ar29s42           8120 	ld	a,(#_triframes+1)
   27BF DE 01              8121 	sbc	a,#0x01
   27C1 FArD9s27           8122 	jp	M,00119$
   27C4 3Ar28s42           8123 	ld	a,(#_triframes+0)
   27C7 D6 C2              8124 	sub	a,#0xC2
   27C9 3Ar29s42           8125 	ld	a,(#_triframes+1)
   27CC DE 01              8126 	sbc	a,#0x01
   27CE F2rD9s27           8127 	jp	P,00119$
                           8128 ;demo.c:1136: drawtilescreen(tri_dia);
   27D1 21rACs02           8129 	ld	hl,#_tri_dia
   27D4 E5                 8130 	push	hl
   27D5 CDr02s24           8131 	call	_drawtilescreen
   27D8 F1                 8132 	pop	af
   27D9                    8133 00119$:
                           8134 ;demo.c:1139: if (triframes == 450) { tilei = 0; tilex = 0; tiley = 0; }
   27D9 3Ar28s42           8135 	ld	a,(#_triframes+0)
   27DC D6 C2              8136 	sub	a,#0xC2
   27DE 20 07              8137 	jr	NZ,00230$
   27E0 3Ar29s42           8138 	ld	a,(#_triframes+1)
   27E3 D6 01              8139 	sub	a,#0x01
   27E5 28 02              8140 	jr	Z,00231$
   27E7                    8141 00230$:
   27E7 18 1E              8142 	jr	00122$
   27E9                    8143 00231$:
   27E9 21r16s42           8144 	ld	hl,#_tilei + 0
   27EC 36 00              8145 	ld	(hl), #0x00
   27EE 21r17s42           8146 	ld	hl,#_tilei + 1
   27F1 36 00              8147 	ld	(hl), #0x00
   27F3 21r18s42           8148 	ld	hl,#_tilex + 0
   27F6 36 00              8149 	ld	(hl), #0x00
   27F8 21r19s42           8150 	ld	hl,#_tilex + 1
   27FB 36 00              8151 	ld	(hl), #0x00
   27FD 21r1As42           8152 	ld	hl,#_tiley + 0
   2800 36 00              8153 	ld	(hl), #0x00
   2802 21r1Bs42           8154 	ld	hl,#_tiley + 1
   2805 36 00              8155 	ld	(hl), #0x00
   2807                    8156 00122$:
                           8157 ;demo.c:1140: if (triframes >= 450 && triframes < 600) {
   2807 3Ar28s42           8158 	ld	a,(#_triframes+0)
   280A D6 C2              8159 	sub	a,#0xC2
   280C 3Ar29s42           8160 	ld	a,(#_triframes+1)
   280F DE 01              8161 	sbc	a,#0x01
   2811 FAr29s28           8162 	jp	M,00124$
   2814 3Ar28s42           8163 	ld	a,(#_triframes+0)
   2817 D6 58              8164 	sub	a,#0x58
   2819 3Ar29s42           8165 	ld	a,(#_triframes+1)
   281C DE 02              8166 	sbc	a,#0x02
   281E F2r29s28           8167 	jp	P,00124$
                           8168 ;demo.c:1141: drawtilescreen(tri_side1);
   2821 21r6Cs03           8169 	ld	hl,#_tri_side1
   2824 E5                 8170 	push	hl
   2825 CDr02s24           8171 	call	_drawtilescreen
   2828 F1                 8172 	pop	af
   2829                    8173 00124$:
                           8174 ;demo.c:1144: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2829 3Ar28s42           8175 	ld	a,(#_triframes+0)
   282C D6 58              8176 	sub	a,#0x58
   282E 20 07              8177 	jr	NZ,00232$
   2830 3Ar29s42           8178 	ld	a,(#_triframes+1)
   2833 D6 02              8179 	sub	a,#0x02
   2835 28 02              8180 	jr	Z,00233$
   2837                    8181 00232$:
   2837 18 1E              8182 	jr	00127$
   2839                    8183 00233$:
   2839 21r16s42           8184 	ld	hl,#_tilei + 0
   283C 36 00              8185 	ld	(hl), #0x00
   283E 21r17s42           8186 	ld	hl,#_tilei + 1
   2841 36 00              8187 	ld	(hl), #0x00
   2843 21r18s42           8188 	ld	hl,#_tilex + 0
   2846 36 00              8189 	ld	(hl), #0x00
   2848 21r19s42           8190 	ld	hl,#_tilex + 1
   284B 36 00              8191 	ld	(hl), #0x00
   284D 21r1As42           8192 	ld	hl,#_tiley + 0
   2850 36 00              8193 	ld	(hl), #0x00
   2852 21r1Bs42           8194 	ld	hl,#_tiley + 1
   2855 36 00              8195 	ld	(hl), #0x00
   2857                    8196 00127$:
                           8197 ;demo.c:1145: if (triframes >= 600 && triframes < 750) {
   2857 3Ar28s42           8198 	ld	a,(#_triframes+0)
   285A D6 58              8199 	sub	a,#0x58
   285C 3Ar29s42           8200 	ld	a,(#_triframes+1)
   285F DE 02              8201 	sbc	a,#0x02
   2861 FAr79s28           8202 	jp	M,00129$
   2864 3Ar28s42           8203 	ld	a,(#_triframes+0)
   2867 D6 EE              8204 	sub	a,#0xEE
   2869 3Ar29s42           8205 	ld	a,(#_triframes+1)
   286C DE 02              8206 	sbc	a,#0x02
   286E F2r79s28           8207 	jp	P,00129$
                           8208 ;demo.c:1146: drawtilescreen(tri_side2);
   2871 21r2Cs04           8209 	ld	hl,#_tri_side2
   2874 E5                 8210 	push	hl
   2875 CDr02s24           8211 	call	_drawtilescreen
   2878 F1                 8212 	pop	af
   2879                    8213 00129$:
                           8214 ;demo.c:1149: if (triframes == 750) { tilei = 0; tilex = 0; tiley = 0; }
   2879 3Ar28s42           8215 	ld	a,(#_triframes+0)
   287C D6 EE              8216 	sub	a,#0xEE
   287E 20 07              8217 	jr	NZ,00234$
   2880 3Ar29s42           8218 	ld	a,(#_triframes+1)
   2883 D6 02              8219 	sub	a,#0x02
   2885 28 02              8220 	jr	Z,00235$
   2887                    8221 00234$:
   2887 18 1E              8222 	jr	00132$
   2889                    8223 00235$:
   2889 21r16s42           8224 	ld	hl,#_tilei + 0
   288C 36 00              8225 	ld	(hl), #0x00
   288E 21r17s42           8226 	ld	hl,#_tilei + 1
   2891 36 00              8227 	ld	(hl), #0x00
   2893 21r18s42           8228 	ld	hl,#_tilex + 0
   2896 36 00              8229 	ld	(hl), #0x00
   2898 21r19s42           8230 	ld	hl,#_tilex + 1
   289B 36 00              8231 	ld	(hl), #0x00
   289D 21r1As42           8232 	ld	hl,#_tiley + 0
   28A0 36 00              8233 	ld	(hl), #0x00
   28A2 21r1Bs42           8234 	ld	hl,#_tiley + 1
   28A5 36 00              8235 	ld	(hl), #0x00
   28A7                    8236 00132$:
                           8237 ;demo.c:1150: if (triframes >= 750 && triframes < 900) {
   28A7 3Ar28s42           8238 	ld	a,(#_triframes+0)
   28AA D6 EE              8239 	sub	a,#0xEE
   28AC 3Ar29s42           8240 	ld	a,(#_triframes+1)
   28AF DE 02              8241 	sbc	a,#0x02
   28B1 FArC9s28           8242 	jp	M,00134$
   28B4 3Ar28s42           8243 	ld	a,(#_triframes+0)
   28B7 D6 84              8244 	sub	a,#0x84
   28B9 3Ar29s42           8245 	ld	a,(#_triframes+1)
   28BC DE 03              8246 	sbc	a,#0x03
   28BE F2rC9s28           8247 	jp	P,00134$
                           8248 ;demo.c:1151: drawtilescreen(tri_inva1);
   28C1 21rECs04           8249 	ld	hl,#_tri_inva1
   28C4 E5                 8250 	push	hl
   28C5 CDr02s24           8251 	call	_drawtilescreen
   28C8 F1                 8252 	pop	af
   28C9                    8253 00134$:
                           8254 ;demo.c:1154: if (triframes == 900) { tilei = 0; tilex = 0; tiley = 0; }
   28C9 3Ar28s42           8255 	ld	a,(#_triframes+0)
   28CC D6 84              8256 	sub	a,#0x84
   28CE 20 07              8257 	jr	NZ,00236$
   28D0 3Ar29s42           8258 	ld	a,(#_triframes+1)
   28D3 D6 03              8259 	sub	a,#0x03
   28D5 28 02              8260 	jr	Z,00237$
   28D7                    8261 00236$:
   28D7 18 1E              8262 	jr	00137$
   28D9                    8263 00237$:
   28D9 21r16s42           8264 	ld	hl,#_tilei + 0
   28DC 36 00              8265 	ld	(hl), #0x00
   28DE 21r17s42           8266 	ld	hl,#_tilei + 1
   28E1 36 00              8267 	ld	(hl), #0x00
   28E3 21r18s42           8268 	ld	hl,#_tilex + 0
   28E6 36 00              8269 	ld	(hl), #0x00
   28E8 21r19s42           8270 	ld	hl,#_tilex + 1
   28EB 36 00              8271 	ld	(hl), #0x00
   28ED 21r1As42           8272 	ld	hl,#_tiley + 0
   28F0 36 00              8273 	ld	(hl), #0x00
   28F2 21r1Bs42           8274 	ld	hl,#_tiley + 1
   28F5 36 00              8275 	ld	(hl), #0x00
   28F7                    8276 00137$:
                           8277 ;demo.c:1155: if (triframes >= 900 && triframes < 1050) {
   28F7 3Ar28s42           8278 	ld	a,(#_triframes+0)
   28FA D6 84              8279 	sub	a,#0x84
   28FC 3Ar29s42           8280 	ld	a,(#_triframes+1)
   28FF DE 03              8281 	sbc	a,#0x03
   2901 FAr19s29           8282 	jp	M,00139$
   2904 3Ar28s42           8283 	ld	a,(#_triframes+0)
   2907 D6 1A              8284 	sub	a,#0x1A
   2909 3Ar29s42           8285 	ld	a,(#_triframes+1)
   290C DE 04              8286 	sbc	a,#0x04
   290E F2r19s29           8287 	jp	P,00139$
                           8288 ;demo.c:1156: drawtilescreen(tri_inva2);
   2911 21rACs05           8289 	ld	hl,#_tri_inva2
   2914 E5                 8290 	push	hl
   2915 CDr02s24           8291 	call	_drawtilescreen
   2918 F1                 8292 	pop	af
   2919                    8293 00139$:
                           8294 ;demo.c:1159: if (triframes == 1050) { tilei = 0; tilex = 0; tiley = 0; }
   2919 3Ar28s42           8295 	ld	a,(#_triframes+0)
   291C D6 1A              8296 	sub	a,#0x1A
   291E 20 07              8297 	jr	NZ,00238$
   2920 3Ar29s42           8298 	ld	a,(#_triframes+1)
   2923 D6 04              8299 	sub	a,#0x04
   2925 28 02              8300 	jr	Z,00239$
   2927                    8301 00238$:
   2927 18 1E              8302 	jr	00142$
   2929                    8303 00239$:
   2929 21r16s42           8304 	ld	hl,#_tilei + 0
   292C 36 00              8305 	ld	(hl), #0x00
   292E 21r17s42           8306 	ld	hl,#_tilei + 1
   2931 36 00              8307 	ld	(hl), #0x00
   2933 21r18s42           8308 	ld	hl,#_tilex + 0
   2936 36 00              8309 	ld	(hl), #0x00
   2938 21r19s42           8310 	ld	hl,#_tilex + 1
   293B 36 00              8311 	ld	(hl), #0x00
   293D 21r1As42           8312 	ld	hl,#_tiley + 0
   2940 36 00              8313 	ld	(hl), #0x00
   2942 21r1Bs42           8314 	ld	hl,#_tiley + 1
   2945 36 00              8315 	ld	(hl), #0x00
   2947                    8316 00142$:
                           8317 ;demo.c:1160: if (triframes >= 1050 && triframes < 1200) {
   2947 3Ar28s42           8318 	ld	a,(#_triframes+0)
   294A D6 1A              8319 	sub	a,#0x1A
   294C 3Ar29s42           8320 	ld	a,(#_triframes+1)
   294F DE 04              8321 	sbc	a,#0x04
   2951 FAr69s29           8322 	jp	M,00144$
   2954 3Ar28s42           8323 	ld	a,(#_triframes+0)
   2957 D6 B0              8324 	sub	a,#0xB0
   2959 3Ar29s42           8325 	ld	a,(#_triframes+1)
   295C DE 04              8326 	sbc	a,#0x04
   295E F2r69s29           8327 	jp	P,00144$
                           8328 ;demo.c:1161: drawtilescreen(tri_inva3);
   2961 21r6Cs06           8329 	ld	hl,#_tri_inva3
   2964 E5                 8330 	push	hl
   2965 CDr02s24           8331 	call	_drawtilescreen
   2968 F1                 8332 	pop	af
   2969                    8333 00144$:
                           8334 ;demo.c:1164: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   2969 3Ar28s42           8335 	ld	a,(#_triframes+0)
   296C D6 B0              8336 	sub	a,#0xB0
   296E 20 07              8337 	jr	NZ,00240$
   2970 3Ar29s42           8338 	ld	a,(#_triframes+1)
   2973 D6 04              8339 	sub	a,#0x04
   2975 28 02              8340 	jr	Z,00241$
   2977                    8341 00240$:
   2977 18 1E              8342 	jr	00147$
   2979                    8343 00241$:
   2979 21r16s42           8344 	ld	hl,#_tilei + 0
   297C 36 00              8345 	ld	(hl), #0x00
   297E 21r17s42           8346 	ld	hl,#_tilei + 1
   2981 36 00              8347 	ld	(hl), #0x00
   2983 21r18s42           8348 	ld	hl,#_tilex + 0
   2986 36 00              8349 	ld	(hl), #0x00
   2988 21r19s42           8350 	ld	hl,#_tilex + 1
   298B 36 00              8351 	ld	(hl), #0x00
   298D 21r1As42           8352 	ld	hl,#_tiley + 0
   2990 36 00              8353 	ld	(hl), #0x00
   2992 21r1Bs42           8354 	ld	hl,#_tiley + 1
   2995 36 00              8355 	ld	(hl), #0x00
   2997                    8356 00147$:
                           8357 ;demo.c:1165: if (triframes >= 1200 && triframes < 1350) {
   2997 3Ar28s42           8358 	ld	a,(#_triframes+0)
   299A D6 B0              8359 	sub	a,#0xB0
   299C 3Ar29s42           8360 	ld	a,(#_triframes+1)
   299F DE 04              8361 	sbc	a,#0x04
   29A1 FArB9s29           8362 	jp	M,00149$
   29A4 3Ar28s42           8363 	ld	a,(#_triframes+0)
   29A7 D6 46              8364 	sub	a,#0x46
   29A9 3Ar29s42           8365 	ld	a,(#_triframes+1)
   29AC DE 05              8366 	sbc	a,#0x05
   29AE F2rB9s29           8367 	jp	P,00149$
                           8368 ;demo.c:1166: drawtilescreen(tri_inva4);
   29B1 21r2Cs07           8369 	ld	hl,#_tri_inva4
   29B4 E5                 8370 	push	hl
   29B5 CDr02s24           8371 	call	_drawtilescreen
   29B8 F1                 8372 	pop	af
   29B9                    8373 00149$:
                           8374 ;demo.c:1169: if (triframes == 1350) { tilei = 0; tilex = 0; tiley = 0; }
   29B9 3Ar28s42           8375 	ld	a,(#_triframes+0)
   29BC D6 46              8376 	sub	a,#0x46
   29BE 20 07              8377 	jr	NZ,00242$
   29C0 3Ar29s42           8378 	ld	a,(#_triframes+1)
   29C3 D6 05              8379 	sub	a,#0x05
   29C5 28 02              8380 	jr	Z,00243$
   29C7                    8381 00242$:
   29C7 18 1E              8382 	jr	00152$
   29C9                    8383 00243$:
   29C9 21r16s42           8384 	ld	hl,#_tilei + 0
   29CC 36 00              8385 	ld	(hl), #0x00
   29CE 21r17s42           8386 	ld	hl,#_tilei + 1
   29D1 36 00              8387 	ld	(hl), #0x00
   29D3 21r18s42           8388 	ld	hl,#_tilex + 0
   29D6 36 00              8389 	ld	(hl), #0x00
   29D8 21r19s42           8390 	ld	hl,#_tilex + 1
   29DB 36 00              8391 	ld	(hl), #0x00
   29DD 21r1As42           8392 	ld	hl,#_tiley + 0
   29E0 36 00              8393 	ld	(hl), #0x00
   29E2 21r1Bs42           8394 	ld	hl,#_tiley + 1
   29E5 36 00              8395 	ld	(hl), #0x00
   29E7                    8396 00152$:
                           8397 ;demo.c:1170: if (triframes >= 1350 && triframes < 1500) {
   29E7 3Ar28s42           8398 	ld	a,(#_triframes+0)
   29EA D6 46              8399 	sub	a,#0x46
   29EC 3Ar29s42           8400 	ld	a,(#_triframes+1)
   29EF DE 05              8401 	sbc	a,#0x05
   29F1 FAr09s2A           8402 	jp	M,00154$
   29F4 3Ar28s42           8403 	ld	a,(#_triframes+0)
   29F7 D6 DC              8404 	sub	a,#0xDC
   29F9 3Ar29s42           8405 	ld	a,(#_triframes+1)
   29FC DE 05              8406 	sbc	a,#0x05
   29FE F2r09s2A           8407 	jp	P,00154$
                           8408 ;demo.c:1171: drawtilescreen(tri_center);
   2A01 21r2Cs01           8409 	ld	hl,#_tri_center
   2A04 E5                 8410 	push	hl
   2A05 CDr02s24           8411 	call	_drawtilescreen
   2A08 F1                 8412 	pop	af
   2A09                    8413 00154$:
                           8414 ;demo.c:1174: if (triframes > 1500) triframes = 149;
   2A09 3E DC              8415 	ld	a,#0xDC
   2A0B FD 21r28s42        8416 	ld	iy,#_triframes
   2A0F FD 96 00           8417 	sub	a,0 (iy)
   2A12 3E 05              8418 	ld	a,#0x05
   2A14 FD 21r28s42        8419 	ld	iy,#_triframes
   2A18 FD 9E 01           8420 	sbc	a,1 (iy)
   2A1B F2r28s2A           8421 	jp	P,00157$
   2A1E 21r28s42           8422 	ld	hl,#_triframes + 0
   2A21 36 95              8423 	ld	(hl), #0x95
   2A23 21r29s42           8424 	ld	hl,#_triframes + 1
   2A26 36 00              8425 	ld	(hl), #0x00
   2A28                    8426 00157$:
                           8427 ;demo.c:1177: msx2_palette(2,0,0,0);
   2A28 21 00 00           8428 	ld	hl,#0x0000
   2A2B E5                 8429 	push	hl
   2A2C 2E 02              8430 	ld	l, #0x02
   2A2E E5                 8431 	push	hl
   2A2F CDr00s00           8432 	call	_msx2_palette
   2A32 F1                 8433 	pop	af
   2A33 F1                 8434 	pop	af
                           8435 ;demo.c:1178: msx2_palette(11,0,0,0);
   2A34 21 00 00           8436 	ld	hl,#0x0000
   2A37 E5                 8437 	push	hl
   2A38 2E 0B              8438 	ld	l, #0x0B
   2A3A E5                 8439 	push	hl
   2A3B CDr00s00           8440 	call	_msx2_palette
   2A3E F1                 8441 	pop	af
   2A3F F1                 8442 	pop	af
                           8443 ;demo.c:1180: if (PLY_PSGReg10 > 4) {
   2A40 3E 04              8444 	ld	a,#0x04
   2A42 FD 21r00s00        8445 	ld	iy,#_PLY_PSGReg10
   2A46 FD 96 00           8446 	sub	a,0 (iy)
   2A49 D2rDEs2A           8447 	jp	NC,00159$
                           8448 ;demo.c:1181: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2A4C 21r00s00           8449 	ld	hl,#_PLY_PSGReg10 + 0
   2A4F 4E                 8450 	ld	c,(hl)
   2A50 06 00              8451 	ld	b,#0x00
   2A52 21r26s42           8452 	ld	hl,#_tripaltick + 0
   2A55 5E                 8453 	ld	e,(hl)
   2A56 16 00              8454 	ld	d,#0x00
   2A58 79                 8455 	ld	a,c
   2A59 83                 8456 	add	a,e
   2A5A 4F                 8457 	ld	c,a
   2A5B 78                 8458 	ld	a,b
   2A5C 8A                 8459 	adc	a,d
   2A5D 06 00              8460 	ld	b,#0x00
   2A5F 21r2Cs00           8461 	ld	hl,#_sintabx
   2A62 09                 8462 	add	hl,bc
   2A63 7E                 8463 	ld	a,(hl)
   2A64 4F                 8464 	ld	c,a
   2A65 06 00              8465 	ld	b,#0x00
   2A67 3E C0              8466 	ld	a,#0xC0
   2A69 91                 8467 	sub	a,c
   2A6A 4F                 8468 	ld	c,a
   2A6B 3E 00              8469 	ld	a,#0x00
   2A6D 98                 8470 	sbc	a,b
   2A6E 47                 8471 	ld	b,a
   2A6F CB 28              8472 	sra	b
   2A71 CB 19              8473 	rr	c
   2A73 CB 28              8474 	sra	b
   2A75 CB 19              8475 	rr	c
   2A77 CB 28              8476 	sra	b
   2A79 CB 19              8477 	rr	c
   2A7B 41                 8478 	ld	b,c
   2A7C 0E 17              8479 	ld	c,#0x17
   2A7E C5                 8480 	push	bc
   2A7F CDr00s00           8481 	call	_vdp_register
   2A82 F1                 8482 	pop	af
                           8483 ;demo.c:1183: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   2A83 21r1Fs42           8484 	ld	hl,#_tripal + 2
   2A86 4E                 8485 	ld	c,(hl)
   2A87 11r1Es42           8486 	ld	de,#_tripal + 1
   2A8A 1A                 8487 	ld	a,(de)
   2A8B 47                 8488 	ld	b,a
   2A8C 21r1Ds42           8489 	ld	hl,#_tripal
   2A8F 5E                 8490 	ld	e,(hl)
   2A90 21r00s00           8491 	ld	hl,#_PLY_PSGReg10 + 0
   2A93 56                 8492 	ld	d,(hl)
   2A94 7B                 8493 	ld	a,e
   2A95 82                 8494 	add	a,d
   2A96 5F                 8495 	ld	e,a
   2A97 79                 8496 	ld	a,c
   2A98 F5                 8497 	push	af
   2A99 33                 8498 	inc	sp
   2A9A C5                 8499 	push	bc
   2A9B 33                 8500 	inc	sp
   2A9C 53                 8501 	ld	d,e
   2A9D 1E 03              8502 	ld	e,#0x03
   2A9F D5                 8503 	push	de
   2AA0 CDr00s00           8504 	call	_msx2_palette
   2AA3 F1                 8505 	pop	af
   2AA4 F1                 8506 	pop	af
                           8507 ;demo.c:1184: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2AA5 21r22s42           8508 	ld	hl,#_tripal + 5
   2AA8 4E                 8509 	ld	c,(hl)
   2AA9 11r21s42           8510 	ld	de,#_tripal + 4
   2AAC 1A                 8511 	ld	a,(de)
   2AAD 47                 8512 	ld	b,a
   2AAE 21r20s42           8513 	ld	hl,#_tripal + 3
   2AB1 5E                 8514 	ld	e,(hl)
   2AB2 79                 8515 	ld	a,c
   2AB3 F5                 8516 	push	af
   2AB4 33                 8517 	inc	sp
   2AB5 C5                 8518 	push	bc
   2AB6 33                 8519 	inc	sp
   2AB7 53                 8520 	ld	d,e
   2AB8 1E 0E              8521 	ld	e,#0x0E
   2ABA D5                 8522 	push	de
   2ABB CDr00s00           8523 	call	_msx2_palette
   2ABE F1                 8524 	pop	af
   2ABF F1                 8525 	pop	af
                           8526 ;demo.c:1185: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2AC0 21r25s42           8527 	ld	hl,#_tripal + 8
   2AC3 4E                 8528 	ld	c,(hl)
   2AC4 11r24s42           8529 	ld	de,#_tripal + 7
   2AC7 1A                 8530 	ld	a,(de)
   2AC8 47                 8531 	ld	b,a
   2AC9 21r23s42           8532 	ld	hl,#_tripal + 6
   2ACC 5E                 8533 	ld	e,(hl)
   2ACD 79                 8534 	ld	a,c
   2ACE F5                 8535 	push	af
   2ACF 33                 8536 	inc	sp
   2AD0 C5                 8537 	push	bc
   2AD1 33                 8538 	inc	sp
   2AD2 53                 8539 	ld	d,e
   2AD3 1E 06              8540 	ld	e,#0x06
   2AD5 D5                 8541 	push	de
   2AD6 CDr00s00           8542 	call	_msx2_palette
   2AD9 F1                 8543 	pop	af
   2ADA F1                 8544 	pop	af
   2ADB C3r37s2B           8545 	jp	00160$
   2ADE                    8546 00159$:
                           8547 ;demo.c:1188: vdp_register(VDP_VOFFSET,0);
   2ADE 21 17 00           8548 	ld	hl,#0x0017
   2AE1 E5                 8549 	push	hl
   2AE2 CDr00s00           8550 	call	_vdp_register
   2AE5 F1                 8551 	pop	af
                           8552 ;demo.c:1190: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2AE6 21r1Fs42           8553 	ld	hl,#_tripal + 2
   2AE9 4E                 8554 	ld	c,(hl)
   2AEA 11r1Es42           8555 	ld	de,#_tripal + 1
   2AED 1A                 8556 	ld	a,(de)
   2AEE 47                 8557 	ld	b,a
   2AEF 21r1Ds42           8558 	ld	hl,#_tripal
   2AF2 5E                 8559 	ld	e,(hl)
   2AF3 79                 8560 	ld	a,c
   2AF4 F5                 8561 	push	af
   2AF5 33                 8562 	inc	sp
   2AF6 C5                 8563 	push	bc
   2AF7 33                 8564 	inc	sp
   2AF8 53                 8565 	ld	d,e
   2AF9 1E 03              8566 	ld	e,#0x03
   2AFB D5                 8567 	push	de
   2AFC CDr00s00           8568 	call	_msx2_palette
   2AFF F1                 8569 	pop	af
   2B00 F1                 8570 	pop	af
                           8571 ;demo.c:1191: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2B01 21r22s42           8572 	ld	hl,#_tripal + 5
   2B04 4E                 8573 	ld	c,(hl)
   2B05 11r21s42           8574 	ld	de,#_tripal + 4
   2B08 1A                 8575 	ld	a,(de)
   2B09 47                 8576 	ld	b,a
   2B0A 21r20s42           8577 	ld	hl,#_tripal + 3
   2B0D 5E                 8578 	ld	e,(hl)
   2B0E 79                 8579 	ld	a,c
   2B0F F5                 8580 	push	af
   2B10 33                 8581 	inc	sp
   2B11 C5                 8582 	push	bc
   2B12 33                 8583 	inc	sp
   2B13 53                 8584 	ld	d,e
   2B14 1E 0E              8585 	ld	e,#0x0E
   2B16 D5                 8586 	push	de
   2B17 CDr00s00           8587 	call	_msx2_palette
   2B1A F1                 8588 	pop	af
   2B1B F1                 8589 	pop	af
                           8590 ;demo.c:1192: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2B1C 21r25s42           8591 	ld	hl,#_tripal + 8
   2B1F 4E                 8592 	ld	c,(hl)
   2B20 11r24s42           8593 	ld	de,#_tripal + 7
   2B23 1A                 8594 	ld	a,(de)
   2B24 47                 8595 	ld	b,a
   2B25 21r23s42           8596 	ld	hl,#_tripal + 6
   2B28 5E                 8597 	ld	e,(hl)
   2B29 79                 8598 	ld	a,c
   2B2A F5                 8599 	push	af
   2B2B 33                 8600 	inc	sp
   2B2C C5                 8601 	push	bc
   2B2D 33                 8602 	inc	sp
   2B2E 53                 8603 	ld	d,e
   2B2F 1E 06              8604 	ld	e,#0x06
   2B31 D5                 8605 	push	de
   2B32 CDr00s00           8606 	call	_msx2_palette
   2B35 F1                 8607 	pop	af
   2B36 F1                 8608 	pop	af
   2B37                    8609 00160$:
                           8610 ;demo.c:1196: if (tick > 28) tick = 0;
   2B37 3E 1C              8611 	ld	a,#0x1C
   2B39 FD 21r28s41        8612 	ld	iy,#_tick
   2B3D FD 96 00           8613 	sub	a,0 (iy)
   2B40 3E 00              8614 	ld	a,#0x00
   2B42 FD 21r28s41        8615 	ld	iy,#_tick
   2B46 FD 9E 01           8616 	sbc	a,1 (iy)
   2B49 F2r56s2B           8617 	jp	P,00162$
   2B4C 21r28s41           8618 	ld	hl,#_tick + 0
   2B4F 36 00              8619 	ld	(hl), #0x00
   2B51 21r29s41           8620 	ld	hl,#_tick + 1
   2B54 36 00              8621 	ld	(hl), #0x00
   2B56                    8622 00162$:
                           8623 ;demo.c:1198: tripaltick++;
   2B56 FD 21r26s42        8624 	ld	iy,#_tripaltick
   2B5A FD 34 00           8625 	inc	0 (iy)
                           8626 ;demo.c:1199: if (tripaltick > 6) {
   2B5D 3E 06              8627 	ld	a,#0x06
   2B5F FD 21r26s42        8628 	ld	iy,#_tripaltick
   2B63 FD 96 00           8629 	sub	a,0 (iy)
   2B66 D2rEBs2B           8630 	jp	NC,00175$
                           8631 ;demo.c:1200: tripaltick2++;
   2B69 FD 21r27s42        8632 	ld	iy,#_tripaltick2
   2B6D FD 34 00           8633 	inc	0 (iy)
                           8634 ;demo.c:1201: if (tripaltick2 > 6) tripaltick2 = 0;
   2B70 3E 06              8635 	ld	a,#0x06
   2B72 FD 21r27s42        8636 	ld	iy,#_tripaltick2
   2B76 FD 96 00           8637 	sub	a,0 (iy)
   2B79 30 05              8638 	jr	NC,00164$
   2B7B 21r27s42           8639 	ld	hl,#_tripaltick2 + 0
   2B7E 36 00              8640 	ld	(hl), #0x00
   2B80                    8641 00164$:
                           8642 ;demo.c:1203: r = tripal[0];
   2B80 21r1Ds42           8643 	ld	hl,#_tripal
   2B83 4E                 8644 	ld	c,(hl)
   2B84 DD 71 FD           8645 	ld	-3 (ix),c
                           8646 ;demo.c:1204: g = tripal[1];
   2B87 11r1Es42           8647 	ld	de,#_tripal + 1
   2B8A 1A                 8648 	ld	a,(de)
   2B8B DD 77 FC           8649 	ld	-4 (ix),a
                           8650 ;demo.c:1205: b = tripal[2];
   2B8E 21r1Fs42           8651 	ld	hl,#_tripal + 2
   2B91 5E                 8652 	ld	e,(hl)
   2B92 DD 73 FB           8653 	ld	-5 (ix),e
                           8654 ;demo.c:1207: for (x = 0; x < 6; x++) {
   2B95 DD 36 FE 00        8655 	ld	-2 (ix),#0x00
   2B99 DD 36 FF 00        8656 	ld	-1 (ix),#0x00
   2B9D                    8657 00171$:
   2B9D DD 7E FE           8658 	ld	a,-2 (ix)
   2BA0 D6 06              8659 	sub	a,#0x06
   2BA2 DD 7E FF           8660 	ld	a,-1 (ix)
   2BA5 DE 00              8661 	sbc	a,#0x00
   2BA7 F2rD1s2B           8662 	jp	P,00174$
                           8663 ;demo.c:1208: tripal[x] = tripal[x+3];
   2BAA 3Er1D              8664 	ld	a,#<_tripal
   2BAC DD 86 FE           8665 	add	a,-2 (ix)
   2BAF 4F                 8666 	ld	c,a
   2BB0 3Es42              8667 	ld	a,#>_tripal
   2BB2 DD 8E FF           8668 	adc	a,-1 (ix)
   2BB5 47                 8669 	ld	b,a
   2BB6 DD 5E FE           8670 	ld	e,-2 (ix)
   2BB9 1C                 8671 	inc	e
   2BBA 1C                 8672 	inc	e
   2BBB 1C                 8673 	inc	e
   2BBC 3Er1D              8674 	ld	a,#<_tripal
   2BBE 83                 8675 	add	a,e
   2BBF 5F                 8676 	ld	e,a
   2BC0 3Es42              8677 	ld	a,#>_tripal
   2BC2 CE 00              8678 	adc	a,#0x00
   2BC4 57                 8679 	ld	d,a
   2BC5 1A                 8680 	ld	a,(de)
   2BC6 02                 8681 	ld	(bc),a
                           8682 ;demo.c:1207: for (x = 0; x < 6; x++) {
   2BC7 DD 34 FE           8683 	inc	-2 (ix)
   2BCA 20 03              8684 	jr	NZ,00245$
   2BCC DD 34 FF           8685 	inc	-1 (ix)
   2BCF                    8686 00245$:
   2BCF 18 CC              8687 	jr	00171$
   2BD1                    8688 00174$:
                           8689 ;demo.c:1211: tripal[6] = r;
   2BD1 01r23s42           8690 	ld	bc,#_tripal + 6
   2BD4 DD 7E FD           8691 	ld	a,-3 (ix)
   2BD7 02                 8692 	ld	(bc),a
                           8693 ;demo.c:1212: tripal[7] = g;
   2BD8 01r24s42           8694 	ld	bc,#_tripal + 7
   2BDB DD 7E FC           8695 	ld	a,-4 (ix)
   2BDE 02                 8696 	ld	(bc),a
                           8697 ;demo.c:1213: tripal[8] = b;
   2BDF 01r25s42           8698 	ld	bc,#_tripal + 8
   2BE2 DD 7E FB           8699 	ld	a,-5 (ix)
   2BE5 02                 8700 	ld	(bc),a
                           8701 ;demo.c:1214: tripaltick = 0;
   2BE6 21r26s42           8702 	ld	hl,#_tripaltick + 0
   2BE9 36 00              8703 	ld	(hl), #0x00
   2BEB                    8704 00175$:
   2BEB DD F9              8705 	ld	sp,ix
   2BED DD E1              8706 	pop	ix
   2BEF C9                 8707 	ret
   2BF0                    8708 _tritiles_end::
                           8709 ;demo.c:1219: int abs (int n) {
                           8710 ;	---------------------------------
                           8711 ; Function abs
                           8712 ; ---------------------------------
   2BF0                    8713 _abs_start::
   2BF0                    8714 _abs:
   2BF0 DD E5              8715 	push	ix
   2BF2 DD 21 00 00        8716 	ld	ix,#0
   2BF6 DD 39              8717 	add	ix,sp
   2BF8 21 FA FF           8718 	ld	hl,#-6
   2BFB 39                 8719 	add	hl,sp
   2BFC F9                 8720 	ld	sp,hl
                           8721 ;demo.c:1220: const int ret[2] = { n, -n };
   2BFD 21 02 00           8722 	ld	hl,#0x0002
   2C00 39                 8723 	add	hl,sp
   2C01 4D                 8724 	ld	c,l
   2C02 44                 8725 	ld	b,h
   2C03 DD 7E 04           8726 	ld	a,4 (ix)
   2C06 77                 8727 	ld	(hl),a
   2C07 23                 8728 	inc	hl
   2C08 DD 7E 05           8729 	ld	a,5 (ix)
   2C0B 77                 8730 	ld	(hl),a
   2C0C 21 02 00           8731 	ld	hl,#0x0002
   2C0F 09                 8732 	add	hl,bc
   2C10 DD 75 FA           8733 	ld	-6 (ix),l
   2C13 DD 74 FB           8734 	ld	-5 (ix),h
   2C16 AF                 8735 	xor	a,a
   2C17 DD 9E 04           8736 	sbc	a,4 (ix)
   2C1A 5F                 8737 	ld	e,a
   2C1B 3E 00              8738 	ld	a,#0x00
   2C1D DD 9E 05           8739 	sbc	a,5 (ix)
   2C20 57                 8740 	ld	d,a
   2C21 DD 6E FA           8741 	ld	l,-6 (ix)
   2C24 DD 66 FB           8742 	ld	h,-5 (ix)
   2C27 73                 8743 	ld	(hl),e
   2C28 23                 8744 	inc	hl
   2C29 72                 8745 	ld	(hl),d
                           8746 ;demo.c:1221: return ret [n<0];
   2C2A DD 7E 05           8747 	ld	a,5 (ix)
   2C2D 07                 8748 	rlca
   2C2E E6 01              8749 	and	a,#0x01
   2C30 5F                 8750 	ld	e,a
   2C31 CB 23              8751 	sla	e
   2C33 79                 8752 	ld	a,c
   2C34 83                 8753 	add	a,e
   2C35 6F                 8754 	ld	l,a
   2C36 78                 8755 	ld	a,b
   2C37 CE 00              8756 	adc	a,#0x00
   2C39 67                 8757 	ld	h,a
   2C3A 5E                 8758 	ld	e,(hl)
   2C3B 23                 8759 	inc	hl
   2C3C 4E                 8760 	ld	c,(hl)
   2C3D 6B                 8761 	ld	l,e
   2C3E 61                 8762 	ld	h,c
   2C3F DD F9              8763 	ld	sp,ix
   2C41 DD E1              8764 	pop	ix
   2C43 C9                 8765 	ret
   2C44                    8766 _abs_end::
                           8767 ;demo.c:1227: void logoeffu() {
                           8768 ;	---------------------------------
                           8769 ; Function logoeffu
                           8770 ; ---------------------------------
   2C44                    8771 _logoeffu_start::
   2C44                    8772 _logoeffu:
   2C44 DD E5              8773 	push	ix
   2C46 DD 21 00 00        8774 	ld	ix,#0
   2C4A DD 39              8775 	add	ix,sp
   2C4C F5                 8776 	push	af
   2C4D F5                 8777 	push	af
                           8778 ;demo.c:1231: fadein();
   2C4E CDrBBs0A           8779 	call	_fadein
                           8780 ;demo.c:1233: v = abs(sintabx[(vbicount) & 255]>>4);
   2C51 21r26s41           8781 	ld	hl,#_vbicount + 0
   2C54 4E                 8782 	ld	c,(hl)
   2C55 06 00              8783 	ld	b,#0x00
   2C57 21r2Cs00           8784 	ld	hl,#_sintabx
   2C5A 09                 8785 	add	hl,bc
   2C5B 7E                 8786 	ld	a,(hl)
   2C5C 4F                 8787 	ld	c,a
   2C5D CB 39              8788 	srl	c
   2C5F CB 39              8789 	srl	c
   2C61 CB 39              8790 	srl	c
   2C63 CB 39              8791 	srl	c
   2C65 06 00              8792 	ld	b,#0x00
   2C67 C5                 8793 	push	bc
   2C68 CDrF0s2B           8794 	call	_abs
   2C6B F1                 8795 	pop	af
   2C6C 44                 8796 	ld	b,h
   2C6D DD 75 FC           8797 	ld	-4 (ix),l
   2C70 DD 70 FD           8798 	ld	-3 (ix),b
                           8799 ;demo.c:1235: for (y = 0; y < 116; y+=2) {
   2C73 DD 36 FE 00        8800 	ld	-2 (ix),#0x00
   2C77 DD 36 FF 00        8801 	ld	-1 (ix),#0x00
   2C7B                    8802 00108$:
   2C7B DD 7E FE           8803 	ld	a,-2 (ix)
   2C7E D6 74              8804 	sub	a,#0x74
   2C80 DD 7E FF           8805 	ld	a,-1 (ix)
   2C83 DE 00              8806 	sbc	a,#0x00
   2C85 F2r50s2D           8807 	jp	P,00111$
                           8808 ;demo.c:1236: cmd.size_x = 108;
   2C88 11r32s41           8809 	ld	de,#_cmd + 8
   2C8B EB                 8810 	ex	de,hl
   2C8C 36 6C              8811 	ld	(hl),#0x6C
   2C8E 23                 8812 	inc	hl
   2C8F 36 00              8813 	ld	(hl),#0x00
                           8814 ;demo.c:1237: cmd.size_y = 2;
   2C91 11r34s41           8815 	ld	de,#_cmd + 10
   2C94 EB                 8816 	ex	de,hl
   2C95 36 02              8817 	ld	(hl),#0x02
   2C97 23                 8818 	inc	hl
   2C98 36 00              8819 	ld	(hl),#0x00
                           8820 ;demo.c:1238: cmd.data = 0;
   2C9A 11r36s41           8821 	ld	de,#_cmd + 12
   2C9D 3E 00              8822 	ld	a,#0x00
   2C9F 12                 8823 	ld	(de),a
                           8824 ;demo.c:1239: cmd.argument = 0x00;
   2CA0 11r37s41           8825 	ld	de,#_cmd + 13
   2CA3 3E 00              8826 	ld	a,#0x00
   2CA5 12                 8827 	ld	(de),a
                           8828 ;demo.c:1240: cmd.command = 0xd0; 
   2CA6 11r38s41           8829 	ld	de,#_cmd + 14
   2CA9 3E D0              8830 	ld	a,#0xD0
   2CAB 12                 8831 	ld	(de),a
                           8832 ;demo.c:1241: cmd.source_x = 74;
   2CAC 21r2As41           8833 	ld	hl,#_cmd
   2CAF 36 4A              8834 	ld	(hl),#0x4A
   2CB1 23                 8835 	inc	hl
   2CB2 36 00              8836 	ld	(hl),#0x00
                           8837 ;demo.c:1242: cmd.source_y = 256+y;
   2CB4 11r2Cs41           8838 	ld	de,#_cmd + 2
   2CB7 DD 7E FE           8839 	ld	a,-2 (ix)
   2CBA C6 00              8840 	add	a,#0x00
   2CBC 4F                 8841 	ld	c,a
   2CBD DD 7E FF           8842 	ld	a,-1 (ix)
   2CC0 CE 01              8843 	adc	a,#0x01
   2CC2 47                 8844 	ld	b,a
   2CC3 6B                 8845 	ld	l,e
   2CC4 62                 8846 	ld	h,d
   2CC5 71                 8847 	ld	(hl),c
   2CC6 23                 8848 	inc	hl
   2CC7 70                 8849 	ld	(hl),b
                           8850 ;demo.c:1243: v+=y;
   2CC8 DD 7E FC           8851 	ld	a,-4 (ix)
   2CCB DD 86 FE           8852 	add	a,-2 (ix)
   2CCE DD 77 FC           8853 	ld	-4 (ix),a
   2CD1 DD 7E FD           8854 	ld	a,-3 (ix)
   2CD4 DD 8E FF           8855 	adc	a,-1 (ix)
   2CD7 DD 77 FD           8856 	ld	-3 (ix),a
                           8857 ;demo.c:1244: v -= powa;
   2CDA 21r2Cs42           8858 	ld	hl,#_powa
   2CDD DD 7E FC           8859 	ld	a,-4 (ix)
   2CE0 96                 8860 	sub	a,(hl)
   2CE1 DD 77 FC           8861 	ld	-4 (ix),a
   2CE4 DD 7E FD           8862 	ld	a,-3 (ix)
   2CE7 23                 8863 	inc	hl
   2CE8 9E                 8864 	sbc	a,(hl)
                           8865 ;demo.c:1245: if (v<0) v = 0;
   2CE9 DD 77 FD           8866 	ld	-3 (ix),a
   2CEC CB 7F              8867 	bit	7,a
   2CEE 28 08              8868 	jr	Z,00102$
   2CF0 DD 36 FC 00        8869 	ld	-4 (ix),#0x00
   2CF4 DD 36 FD 00        8870 	ld	-3 (ix),#0x00
   2CF8                    8871 00102$:
                           8872 ;demo.c:1246: if (v>150) v = 150;
   2CF8 3E 96              8873 	ld	a,#0x96
   2CFA DD 96 FC           8874 	sub	a,-4 (ix)
   2CFD 3E 00              8875 	ld	a,#0x00
   2CFF DD 9E FD           8876 	sbc	a,-3 (ix)
   2D02 F2r0Ds2D           8877 	jp	P,00104$
   2D05 DD 36 FC 96        8878 	ld	-4 (ix),#0x96
   2D09 DD 36 FD 00        8879 	ld	-3 (ix),#0x00
   2D0D                    8880 00104$:
                           8881 ;demo.c:1247: cmd.dest_x = 74+v;
   2D0D 01r2Es41           8882 	ld	bc,#_cmd + 4
   2D10 DD 7E FC           8883 	ld	a,-4 (ix)
   2D13 C6 4A              8884 	add	a,#0x4A
   2D15 5F                 8885 	ld	e,a
   2D16 DD 7E FD           8886 	ld	a,-3 (ix)
   2D19 CE 00              8887 	adc	a,#0x00
   2D1B 57                 8888 	ld	d,a
   2D1C 69                 8889 	ld	l,c
   2D1D 60                 8890 	ld	h,b
   2D1E 73                 8891 	ld	(hl),e
   2D1F 23                 8892 	inc	hl
   2D20 72                 8893 	ld	(hl),d
                           8894 ;demo.c:1248: cmd.dest_y = 50+y+1;
   2D21 01r30s41           8895 	ld	bc,#_cmd + 6
   2D24 DD 7E FE           8896 	ld	a,-2 (ix)
   2D27 C6 33              8897 	add	a,#0x33
   2D29 5F                 8898 	ld	e,a
   2D2A DD 7E FF           8899 	ld	a,-1 (ix)
   2D2D CE 00              8900 	adc	a,#0x00
   2D2F 57                 8901 	ld	d,a
   2D30 69                 8902 	ld	l,c
   2D31 60                 8903 	ld	h,b
   2D32 73                 8904 	ld	(hl),e
   2D33 23                 8905 	inc	hl
   2D34 72                 8906 	ld	(hl),d
                           8907 ;demo.c:1249: vdp_copier(&cmd);
   2D35 21r2As41           8908 	ld	hl,#_cmd
   2D38 E5                 8909 	push	hl
   2D39 CDr00s00           8910 	call	_vdp_copier
   2D3C F1                 8911 	pop	af
                           8912 ;demo.c:1235: for (y = 0; y < 116; y+=2) {
   2D3D DD 7E FE           8913 	ld	a,-2 (ix)
   2D40 C6 02              8914 	add	a,#0x02
   2D42 DD 77 FE           8915 	ld	-2 (ix),a
   2D45 DD 7E FF           8916 	ld	a,-1 (ix)
   2D48 CE 00              8917 	adc	a,#0x00
   2D4A DD 77 FF           8918 	ld	-1 (ix),a
   2D4D C3r7Bs2C           8919 	jp	00108$
   2D50                    8920 00111$:
                           8921 ;demo.c:1252: if (vbicount > scenetimings[2]+84 && onceclear > 182) {
   2D50 21r55s41           8922 	ld	hl, #_scenetimings + 4
   2D53 4E                 8923 	ld	c,(hl)
   2D54 23                 8924 	inc	hl
   2D55 46                 8925 	ld	b,(hl)
   2D56 21 54 00           8926 	ld	hl,#0x0054
   2D59 09                 8927 	add	hl,bc
   2D5A 4D                 8928 	ld	c,l
   2D5B 44                 8929 	ld	b,h
   2D5C 79                 8930 	ld	a,c
   2D5D FD 21r26s41        8931 	ld	iy,#_vbicount
   2D61 FD 96 00           8932 	sub	a,0 (iy)
   2D64 78                 8933 	ld	a,b
   2D65 FD 21r26s41        8934 	ld	iy,#_vbicount
   2D69 FD 9E 01           8935 	sbc	a,1 (iy)
   2D6C F2rCEs2D           8936 	jp	P,00106$
   2D6F 3E B6              8937 	ld	a,#0xB6
   2D71 FD 21r2Es42        8938 	ld	iy,#_onceclear
   2D75 FD 96 00           8939 	sub	a,0 (iy)
   2D78 D2rCEs2D           8940 	jp	NC,00106$
                           8941 ;demo.c:1253: cmd.size_x = 4;
   2D7B 21r32s41           8942 	ld	hl, #_cmd + 8
   2D7E 36 04              8943 	ld	(hl),#0x04
   2D80 23                 8944 	inc	hl
   2D81 36 00              8945 	ld	(hl),#0x00
                           8946 ;demo.c:1254: cmd.size_y = 116;
   2D83 21r34s41           8947 	ld	hl, #_cmd + 10
   2D86 36 74              8948 	ld	(hl),#0x74
   2D88 23                 8949 	inc	hl
   2D89 36 00              8950 	ld	(hl),#0x00
                           8951 ;demo.c:1255: cmd.data = 0;
                           8952 ;demo.c:1256: cmd.argument = 0x00;
   2D8B 3E 00              8953 	ld	a,#0x00
   2D8D 32r36s41           8954 	ld	(#_cmd + 12),a
   2D90 32r37s41           8955 	ld	(#_cmd + 13),a
                           8956 ;demo.c:1257: cmd.command = 0xd0; 
   2D93 01r38s41           8957 	ld	bc,#_cmd + 14
   2D96 3E D0              8958 	ld	a,#0xD0
   2D98 02                 8959 	ld	(bc),a
                           8960 ;demo.c:1258: cmd.source_x = 20;
   2D99 21r2As41           8961 	ld	hl,#_cmd
   2D9C 36 14              8962 	ld	(hl),#0x14
   2D9E 23                 8963 	inc	hl
   2D9F 36 00              8964 	ld	(hl),#0x00
                           8965 ;demo.c:1259: cmd.source_y = 0;
   2DA1 21r2Cs41           8966 	ld	hl, #_cmd + 2
   2DA4 36 00              8967 	ld	(hl),#0x00
   2DA6 23                 8968 	inc	hl
   2DA7 36 00              8969 	ld	(hl),#0x00
                           8970 ;demo.c:1260: cmd.dest_x = onceclear;
   2DA9 01r2Es41           8971 	ld	bc,#_cmd + 4
   2DAC 21r2Es42           8972 	ld	hl,#_onceclear + 0
   2DAF 5E                 8973 	ld	e,(hl)
   2DB0 16 00              8974 	ld	d,#0x00
   2DB2 69                 8975 	ld	l,c
   2DB3 60                 8976 	ld	h,b
   2DB4 73                 8977 	ld	(hl),e
   2DB5 23                 8978 	inc	hl
   2DB6 72                 8979 	ld	(hl),d
                           8980 ;demo.c:1261: cmd.dest_y = 68;
   2DB7 21r30s41           8981 	ld	hl, #_cmd + 6
   2DBA 36 44              8982 	ld	(hl),#0x44
   2DBC 23                 8983 	inc	hl
   2DBD 36 00              8984 	ld	(hl),#0x00
                           8985 ;demo.c:1262: vdp_copier(&cmd);
   2DBF 21r2As41           8986 	ld	hl,#_cmd
   2DC2 E5                 8987 	push	hl
   2DC3 CDr00s00           8988 	call	_vdp_copier
   2DC6 F1                 8989 	pop	af
                           8990 ;demo.c:1263: onceclear-=4;
   2DC7 21r2Es42           8991 	ld	hl,#_onceclear
   2DCA 7E                 8992 	ld	a,(hl)
   2DCB C6 FC              8993 	add	a,#0xFC
   2DCD 77                 8994 	ld	(hl),a
   2DCE                    8995 00106$:
                           8996 ;demo.c:1267: powa+=2;
   2DCE 21r2Cs42           8997 	ld	hl,#_powa
   2DD1 7E                 8998 	ld	a,(hl)
   2DD2 C6 02              8999 	add	a,#0x02
   2DD4 23                 9000 	inc	hl
   2DD5 2B                 9001 	dec	hl
   2DD6 C5                 9002 	push	bc
   2DD7 4F                 9003 	ld	c, a
   2DD8 23                 9004 	inc	hl
   2DD9 7E                 9005 	ld	a, (hl)
   2DDA 47                 9006 	ld	b, a
   2DDB 79                 9007 	ld	a, c
   2DDC 2B                 9008 	dec	hl
   2DDD 77                 9009 	ld	(hl), a
   2DDE 78                 9010 	ld	a, b
   2DDF C1                 9011 	pop	bc
   2DE0 CE 00              9012 	adc	a,#0x00
   2DE2 23                 9013 	inc	hl
   2DE3 77                 9014 	ld	(hl),a
                           9015 ;demo.c:1268: powatick = 0;
   2DE4 21r2As42           9016 	ld	hl,#_powatick + 0
   2DE7 36 00              9017 	ld	(hl), #0x00
   2DE9 21r2Bs42           9018 	ld	hl,#_powatick + 1
   2DEC 36 00              9019 	ld	(hl), #0x00
   2DEE DD F9              9020 	ld	sp,ix
   2DF0 DD E1              9021 	pop	ix
   2DF2 C9                 9022 	ret
   2DF3                    9023 _logoeffu_end::
                           9024 ;demo.c:1277: void points() {
                           9025 ;	---------------------------------
                           9026 ; Function points
                           9027 ; ---------------------------------
   2DF3                    9028 _points_start::
   2DF3                    9029 _points:
   2DF3 DD E5              9030 	push	ix
   2DF5 DD 21 00 00        9031 	ld	ix,#0
   2DF9 DD 39              9032 	add	ix,sp
   2DFB F5                 9033 	push	af
   2DFC 3B                 9034 	dec	sp
                           9035 ;demo.c:1281: if (initpoints == 0) {
   2DFD AF                 9036 	xor	a,a
   2DFE 21r2Fs42           9037 	ld	hl,#_initpoints + 0
   2E01 B6                 9038 	or	a,(hl)
   2E02 C2r0Bs30           9039 	jp	NZ,00105$
                           9040 ;demo.c:1282: cmd.size_x = 256;
   2E05 21r32s41           9041 	ld	hl, #_cmd + 8
   2E08 36 00              9042 	ld	(hl),#0x00
   2E0A 23                 9043 	inc	hl
   2E0B 36 01              9044 	ld	(hl),#0x01
                           9045 ;demo.c:1283: cmd.size_y = 4;
   2E0D 21r34s41           9046 	ld	hl, #_cmd + 10
   2E10 36 04              9047 	ld	(hl),#0x04
   2E12 23                 9048 	inc	hl
   2E13 36 00              9049 	ld	(hl),#0x00
                           9050 ;demo.c:1284: cmd.data = 0;
                           9051 ;demo.c:1285: cmd.argument = 0x00; // from 70xY to left
   2E15 3E 00              9052 	ld	a,#0x00
   2E17 32r36s41           9053 	ld	(#_cmd + 12),a
   2E1A 32r37s41           9054 	ld	(#_cmd + 13),a
                           9055 ;demo.c:1286: cmd.command = 0xd0; // vram to vram, y only
   2E1D 01r38s41           9056 	ld	bc,#_cmd + 14
   2E20 3E D0              9057 	ld	a,#0xD0
   2E22 02                 9058 	ld	(bc),a
                           9059 ;demo.c:1287: cmd.source_x = 0;
   2E23 21r2As41           9060 	ld	hl,#_cmd
   2E26 36 00              9061 	ld	(hl),#0x00
   2E28 23                 9062 	inc	hl
   2E29 36 00              9063 	ld	(hl),#0x00
                           9064 ;demo.c:1288: cmd.dest_x = 0;
   2E2B 21r2Es41           9065 	ld	hl, #_cmd + 4
   2E2E 36 00              9066 	ld	(hl),#0x00
   2E30 23                 9067 	inc	hl
   2E31 36 00              9068 	ld	(hl),#0x00
                           9069 ;demo.c:1290: for (y = 0; y < 212; y+=4) {
   2E33 DD 36 FF 00        9070 	ld	-1 (ix),#0x00
   2E37                    9071 00116$:
   2E37 DD 7E FF           9072 	ld	a,-1 (ix)
   2E3A D6 D4              9073 	sub	a,#0xD4
   2E3C D2r63s2F           9074 	jp	NC,00119$
                           9075 ;demo.c:1291: if (PLY_PSGReg10 > 4) {
   2E3F 3E 04              9076 	ld	a,#0x04
   2E41 FD 21r00s00        9077 	ld	iy,#_PLY_PSGReg10
   2E45 FD 96 00           9078 	sub	a,0 (iy)
   2E48 D2rDDs2E           9079 	jp	NC,00102$
                           9080 ;demo.c:1292: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2E4B 21r00s00           9081 	ld	hl,#_PLY_PSGReg10 + 0
   2E4E 5E                 9082 	ld	e,(hl)
   2E4F 16 00              9083 	ld	d,#0x00
   2E51 21r26s42           9084 	ld	hl,#_tripaltick + 0
   2E54 4E                 9085 	ld	c,(hl)
   2E55 06 00              9086 	ld	b,#0x00
   2E57 7B                 9087 	ld	a,e
   2E58 81                 9088 	add	a,c
   2E59 4F                 9089 	ld	c,a
   2E5A 7A                 9090 	ld	a,d
   2E5B 88                 9091 	adc	a,b
   2E5C 06 00              9092 	ld	b,#0x00
   2E5E 21r2Cs00           9093 	ld	hl,#_sintabx
   2E61 09                 9094 	add	hl,bc
   2E62 7E                 9095 	ld	a,(hl)
   2E63 4F                 9096 	ld	c,a
   2E64 06 00              9097 	ld	b,#0x00
   2E66 3E C0              9098 	ld	a,#0xC0
   2E68 91                 9099 	sub	a,c
   2E69 4F                 9100 	ld	c,a
   2E6A 3E 00              9101 	ld	a,#0x00
   2E6C 98                 9102 	sbc	a,b
   2E6D 47                 9103 	ld	b,a
   2E6E CB 28              9104 	sra	b
   2E70 CB 19              9105 	rr	c
   2E72 CB 28              9106 	sra	b
   2E74 CB 19              9107 	rr	c
   2E76 CB 28              9108 	sra	b
   2E78 CB 19              9109 	rr	c
   2E7A 41                 9110 	ld	b,c
   2E7B 0E 17              9111 	ld	c,#0x17
   2E7D C5                 9112 	push	bc
   2E7E CDr00s00           9113 	call	_vdp_register
   2E81 F1                 9114 	pop	af
                           9115 ;demo.c:1294: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   2E82 21r1Fs42           9116 	ld	hl,#_tripal + 2
   2E85 4E                 9117 	ld	c,(hl)
   2E86 11r1Es42           9118 	ld	de,#_tripal + 1
   2E89 1A                 9119 	ld	a,(de)
   2E8A 47                 9120 	ld	b,a
   2E8B 21r1Ds42           9121 	ld	hl,#_tripal
   2E8E 5E                 9122 	ld	e,(hl)
   2E8F 21r00s00           9123 	ld	hl,#_PLY_PSGReg10 + 0
   2E92 56                 9124 	ld	d,(hl)
   2E93 7B                 9125 	ld	a,e
   2E94 82                 9126 	add	a,d
   2E95 5F                 9127 	ld	e,a
   2E96 79                 9128 	ld	a,c
   2E97 F5                 9129 	push	af
   2E98 33                 9130 	inc	sp
   2E99 C5                 9131 	push	bc
   2E9A 33                 9132 	inc	sp
   2E9B 53                 9133 	ld	d,e
   2E9C 1E 03              9134 	ld	e,#0x03
   2E9E D5                 9135 	push	de
   2E9F CDr00s00           9136 	call	_msx2_palette
   2EA2 F1                 9137 	pop	af
   2EA3 F1                 9138 	pop	af
                           9139 ;demo.c:1295: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2EA4 21r22s42           9140 	ld	hl,#_tripal + 5
   2EA7 4E                 9141 	ld	c,(hl)
   2EA8 11r21s42           9142 	ld	de,#_tripal + 4
   2EAB 1A                 9143 	ld	a,(de)
   2EAC 47                 9144 	ld	b,a
   2EAD 21r20s42           9145 	ld	hl,#_tripal + 3
   2EB0 5E                 9146 	ld	e,(hl)
   2EB1 79                 9147 	ld	a,c
   2EB2 F5                 9148 	push	af
   2EB3 33                 9149 	inc	sp
   2EB4 C5                 9150 	push	bc
   2EB5 33                 9151 	inc	sp
   2EB6 53                 9152 	ld	d,e
   2EB7 1E 0E              9153 	ld	e,#0x0E
   2EB9 D5                 9154 	push	de
   2EBA CDr00s00           9155 	call	_msx2_palette
   2EBD F1                 9156 	pop	af
   2EBE F1                 9157 	pop	af
                           9158 ;demo.c:1296: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2EBF 21r25s42           9159 	ld	hl,#_tripal + 8
   2EC2 4E                 9160 	ld	c,(hl)
   2EC3 11r24s42           9161 	ld	de,#_tripal + 7
   2EC6 1A                 9162 	ld	a,(de)
   2EC7 47                 9163 	ld	b,a
   2EC8 21r23s42           9164 	ld	hl,#_tripal + 6
   2ECB 5E                 9165 	ld	e,(hl)
   2ECC 79                 9166 	ld	a,c
   2ECD F5                 9167 	push	af
   2ECE 33                 9168 	inc	sp
   2ECF C5                 9169 	push	bc
   2ED0 33                 9170 	inc	sp
   2ED1 53                 9171 	ld	d,e
   2ED2 1E 06              9172 	ld	e,#0x06
   2ED4 D5                 9173 	push	de
   2ED5 CDr00s00           9174 	call	_msx2_palette
   2ED8 F1                 9175 	pop	af
   2ED9 F1                 9176 	pop	af
   2EDA C3r36s2F           9177 	jp	00103$
   2EDD                    9178 00102$:
                           9179 ;demo.c:1299: vdp_register(VDP_VOFFSET,0);
   2EDD 21 17 00           9180 	ld	hl,#0x0017
   2EE0 E5                 9181 	push	hl
   2EE1 CDr00s00           9182 	call	_vdp_register
   2EE4 F1                 9183 	pop	af
                           9184 ;demo.c:1301: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2EE5 21r1Fs42           9185 	ld	hl,#_tripal + 2
   2EE8 4E                 9186 	ld	c,(hl)
   2EE9 11r1Es42           9187 	ld	de,#_tripal + 1
   2EEC 1A                 9188 	ld	a,(de)
   2EED 47                 9189 	ld	b,a
   2EEE 21r1Ds42           9190 	ld	hl,#_tripal
   2EF1 5E                 9191 	ld	e,(hl)
   2EF2 79                 9192 	ld	a,c
   2EF3 F5                 9193 	push	af
   2EF4 33                 9194 	inc	sp
   2EF5 C5                 9195 	push	bc
   2EF6 33                 9196 	inc	sp
   2EF7 53                 9197 	ld	d,e
   2EF8 1E 03              9198 	ld	e,#0x03
   2EFA D5                 9199 	push	de
   2EFB CDr00s00           9200 	call	_msx2_palette
   2EFE F1                 9201 	pop	af
   2EFF F1                 9202 	pop	af
                           9203 ;demo.c:1302: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2F00 21r22s42           9204 	ld	hl,#_tripal + 5
   2F03 4E                 9205 	ld	c,(hl)
   2F04 11r21s42           9206 	ld	de,#_tripal + 4
   2F07 1A                 9207 	ld	a,(de)
   2F08 47                 9208 	ld	b,a
   2F09 21r20s42           9209 	ld	hl,#_tripal + 3
   2F0C 5E                 9210 	ld	e,(hl)
   2F0D 79                 9211 	ld	a,c
   2F0E F5                 9212 	push	af
   2F0F 33                 9213 	inc	sp
   2F10 C5                 9214 	push	bc
   2F11 33                 9215 	inc	sp
   2F12 53                 9216 	ld	d,e
   2F13 1E 0E              9217 	ld	e,#0x0E
   2F15 D5                 9218 	push	de
   2F16 CDr00s00           9219 	call	_msx2_palette
   2F19 F1                 9220 	pop	af
   2F1A F1                 9221 	pop	af
                           9222 ;demo.c:1303: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2F1B 21r25s42           9223 	ld	hl,#_tripal + 8
   2F1E 4E                 9224 	ld	c,(hl)
   2F1F 11r24s42           9225 	ld	de,#_tripal + 7
   2F22 1A                 9226 	ld	a,(de)
   2F23 47                 9227 	ld	b,a
   2F24 21r23s42           9228 	ld	hl,#_tripal + 6
   2F27 5E                 9229 	ld	e,(hl)
   2F28 79                 9230 	ld	a,c
   2F29 F5                 9231 	push	af
   2F2A 33                 9232 	inc	sp
   2F2B C5                 9233 	push	bc
   2F2C 33                 9234 	inc	sp
   2F2D 53                 9235 	ld	d,e
   2F2E 1E 06              9236 	ld	e,#0x06
   2F30 D5                 9237 	push	de
   2F31 CDr00s00           9238 	call	_msx2_palette
   2F34 F1                 9239 	pop	af
   2F35 F1                 9240 	pop	af
   2F36                    9241 00103$:
                           9242 ;demo.c:1306: waitVB();
   2F36 76                 9243 		halt 
                           9244 ;demo.c:1307: cmd.source_y = 193;
   2F37 21r2Cs41           9245 	ld	hl, #_cmd + 2
   2F3A 36 C1              9246 	ld	(hl),#0xC1
   2F3C 23                 9247 	inc	hl
   2F3D 36 00              9248 	ld	(hl),#0x00
                           9249 ;demo.c:1308: cmd.dest_y = y;
   2F3F 01r30s41           9250 	ld	bc,#_cmd + 6
   2F42 DD 5E FF           9251 	ld	e,-1 (ix)
   2F45 16 00              9252 	ld	d,#0x00
   2F47 69                 9253 	ld	l,c
   2F48 60                 9254 	ld	h,b
   2F49 73                 9255 	ld	(hl),e
   2F4A 23                 9256 	inc	hl
   2F4B 72                 9257 	ld	(hl),d
                           9258 ;demo.c:1309: vdp_copier(&cmd);
   2F4C 21r2As41           9259 	ld	hl,#_cmd
   2F4F E5                 9260 	push	hl
   2F50 CDr00s00           9261 	call	_vdp_copier
   2F53 F1                 9262 	pop	af
                           9263 ;demo.c:1290: for (y = 0; y < 212; y+=4) {
   2F54 DD 34 FF           9264 	inc	-1 (ix)
   2F57 DD 34 FF           9265 	inc	-1 (ix)
   2F5A DD 34 FF           9266 	inc	-1 (ix)
   2F5D DD 34 FF           9267 	inc	-1 (ix)
   2F60 C3r37s2E           9268 	jp	00116$
   2F63                    9269 00119$:
                           9270 ;demo.c:1313: vdp_load_palette(bulbs_palette);
   2F63 21r66s40           9271 	ld	hl,#_bulbs_palette
   2F66 E5                 9272 	push	hl
   2F67 CDr00s00           9273 	call	_vdp_load_palette
   2F6A F1                 9274 	pop	af
                           9275 ;demo.c:1315: for (x = 0; x < 256; x+=1) {
   2F6B DD 36 FD 00        9276 	ld	-3 (ix),#0x00
   2F6F DD 36 FE 00        9277 	ld	-2 (ix),#0x00
   2F73                    9278 00120$:
   2F73 DD 7E FD           9279 	ld	a,-3 (ix)
   2F76 D6 00              9280 	sub	a,#0x00
   2F78 DD 7E FE           9281 	ld	a,-2 (ix)
   2F7B DE 01              9282 	sbc	a,#0x01
   2F7D F2rFCs2F           9283 	jp	P,00123$
                           9284 ;demo.c:1317: cmd.data = 1+((pointframe>>2) & 0xe);
   2F80 11r36s41           9285 	ld	de,#_cmd + 12
   2F83 21r30s42           9286 	ld	hl,#_pointframe + 0
   2F86 4E                 9287 	ld	c,(hl)
   2F87 21r31s42           9288 	ld	hl,#_pointframe + 1
   2F8A 46                 9289 	ld	b,(hl)
   2F8B CB 28              9290 	sra	b
   2F8D CB 19              9291 	rr	c
   2F8F CB 28              9292 	sra	b
   2F91 CB 19              9293 	rr	c
   2F93 79                 9294 	ld	a,c
   2F94 E6 0E              9295 	and	a,#0x0E
   2F96 3C                 9296 	inc	a
   2F97 12                 9297 	ld	(de),a
                           9298 ;demo.c:1318: cmd.dest_x = x;
   2F98 21r2Es41           9299 	ld	hl, #_cmd + 4
   2F9B DD 7E FD           9300 	ld	a,-3 (ix)
   2F9E 77                 9301 	ld	(hl),a
   2F9F 23                 9302 	inc	hl
   2FA0 DD 7E FE           9303 	ld	a,-2 (ix)
   2FA3 77                 9304 	ld	(hl),a
                           9305 ;demo.c:1319: cmd.dest_y = y;
   2FA4 21r30s41           9306 	ld	hl, #_cmd + 6
   2FA7 36 1D              9307 	ld	(hl),#0x1D
   2FA9 23                 9308 	inc	hl
   2FAA 36 00              9309 	ld	(hl),#0x00
                           9310 ;demo.c:1320: cmd.command = 0x50;
   2FAC 3E 50              9311 	ld	a,#0x50
   2FAE 32r38s41           9312 	ld	(#_cmd + 14),a
                           9313 ;demo.c:1321: vdp_copier(&cmd);
   2FB1 21r2As41           9314 	ld	hl,#_cmd
   2FB4 E5                 9315 	push	hl
   2FB5 CDr00s00           9316 	call	_vdp_copier
   2FB8 F1                 9317 	pop	af
                           9318 ;demo.c:1324: cmd.data = 1+((pointframe>>2) & 0xe);
   2FB9 01r36s41           9319 	ld	bc,#_cmd + 12
   2FBC 21r30s42           9320 	ld	hl,#_pointframe + 0
   2FBF 5E                 9321 	ld	e,(hl)
   2FC0 21r31s42           9322 	ld	hl,#_pointframe + 1
   2FC3 56                 9323 	ld	d,(hl)
   2FC4 CB 2A              9324 	sra	d
   2FC6 CB 1B              9325 	rr	e
   2FC8 CB 2A              9326 	sra	d
   2FCA CB 1B              9327 	rr	e
   2FCC 7B                 9328 	ld	a,e
   2FCD E6 0E              9329 	and	a,#0x0E
   2FCF 3C                 9330 	inc	a
   2FD0 02                 9331 	ld	(bc),a
                           9332 ;demo.c:1325: cmd.dest_y = y;
   2FD1 21r30s41           9333 	ld	hl, #_cmd + 6
   2FD4 36 A2              9334 	ld	(hl),#0xA2
   2FD6 23                 9335 	inc	hl
   2FD7 36 00              9336 	ld	(hl),#0x00
                           9337 ;demo.c:1326: vdp_copier(&cmd);
   2FD9 21r2As41           9338 	ld	hl,#_cmd
   2FDC E5                 9339 	push	hl
   2FDD CDr00s00           9340 	call	_vdp_copier
   2FE0 F1                 9341 	pop	af
                           9342 ;demo.c:1328: pointframe+=1;
   2FE1 FD 21r30s42        9343 	ld	iy,#_pointframe
   2FE5 FD 34 00           9344 	inc	0 (iy)
   2FE8 20 07              9345 	jr	NZ,00149$
   2FEA FD 21r30s42        9346 	ld	iy,#_pointframe
   2FEE FD 34 01           9347 	inc	1 (iy)
   2FF1                    9348 00149$:
                           9349 ;demo.c:1315: for (x = 0; x < 256; x+=1) {
   2FF1 DD 34 FD           9350 	inc	-3 (ix)
   2FF4 20 03              9351 	jr	NZ,00150$
   2FF6 DD 34 FE           9352 	inc	-2 (ix)
   2FF9                    9353 00150$:
   2FF9 C3r73s2F           9354 	jp	00120$
   2FFC                    9355 00123$:
                           9356 ;demo.c:1331: initpoints = 1;
   2FFC 21r2Fs42           9357 	ld	hl,#_initpoints + 0
   2FFF 36 01              9358 	ld	(hl), #0x01
                           9359 ;demo.c:1332: ltrpointer = 0;
   3001 21rBEs41           9360 	ld	hl,#_ltrpointer + 0
   3004 36 00              9361 	ld	(hl), #0x00
   3006 21rBFs41           9362 	ld	hl,#_ltrpointer + 1
   3009 36 00              9363 	ld	(hl), #0x00
   300B                    9364 00105$:
                           9365 ;demo.c:1335: cmd.argument = 0x0;
   300B 3E 00              9366 	ld	a,#0x00
   300D 32r37s41           9367 	ld	(#_cmd + 13),a
                           9368 ;demo.c:1337: cmd.data = 1+((pointframe>>2) & 0xe);
   3010 01r36s41           9369 	ld	bc,#_cmd + 12
   3013 21r30s42           9370 	ld	hl,#_pointframe + 0
   3016 5E                 9371 	ld	e,(hl)
   3017 21r31s42           9372 	ld	hl,#_pointframe + 1
   301A 56                 9373 	ld	d,(hl)
   301B CB 2A              9374 	sra	d
   301D CB 1B              9375 	rr	e
   301F CB 2A              9376 	sra	d
   3021 CB 1B              9377 	rr	e
   3023 7B                 9378 	ld	a,e
   3024 E6 0E              9379 	and	a,#0x0E
   3026 3C                 9380 	inc	a
   3027 02                 9381 	ld	(bc),a
                           9382 ;demo.c:1339: for (x = 30; x < 162; x+=1) {
   3028 DD 36 FD 1E        9383 	ld	-3 (ix),#0x1E
   302C DD 36 FE 00        9384 	ld	-2 (ix),#0x00
   3030                    9385 00124$:
   3030 DD 7E FD           9386 	ld	a,-3 (ix)
   3033 D6 A2              9387 	sub	a,#0xA2
   3035 DD 7E FE           9388 	ld	a,-2 (ix)
   3038 DE 00              9389 	sbc	a,#0x00
   303A F2r83s30           9390 	jp	P,00127$
                           9391 ;demo.c:1340: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   303D 21r30s42           9392 	ld	hl,#_pointframe
   3040 DD 7E FD           9393 	ld	a,-3 (ix)
   3043 86                 9394 	add	a,(hl)
   3044 5F                 9395 	ld	e,a
   3045 DD 7E FE           9396 	ld	a,-2 (ix)
   3048 23                 9397 	inc	hl
   3049 8E                 9398 	adc	a,(hl)
   304A 16 00              9399 	ld	d,#0x00
   304C 21r2Cs00           9400 	ld	hl,#_sintabx
   304F 19                 9401 	add	hl,de
   3050 7E                 9402 	ld	a,(hl)
   3051 CB 3F              9403 	srl	a
   3053 C6 40              9404 	add	a,#0x40
   3055 4F                 9405 	ld	c,a
                           9406 ;demo.c:1341: cmd.dest_x = y;
   3056 11r2Es41           9407 	ld	de,#_cmd + 4
   3059 06 00              9408 	ld	b,#0x00
   305B 6B                 9409 	ld	l,e
   305C 62                 9410 	ld	h,d
   305D 71                 9411 	ld	(hl),c
   305E 23                 9412 	inc	hl
   305F 70                 9413 	ld	(hl),b
                           9414 ;demo.c:1342: cmd.dest_y = x;
   3060 21r30s41           9415 	ld	hl, #_cmd + 6
   3063 DD 7E FD           9416 	ld	a,-3 (ix)
   3066 77                 9417 	ld	(hl),a
   3067 23                 9418 	inc	hl
   3068 DD 7E FE           9419 	ld	a,-2 (ix)
   306B 77                 9420 	ld	(hl),a
                           9421 ;demo.c:1343: cmd.command = 0x53;
   306C 3E 53              9422 	ld	a,#0x53
   306E 32r38s41           9423 	ld	(#_cmd + 14),a
                           9424 ;demo.c:1344: vdp_copier(&cmd);
   3071 21r2As41           9425 	ld	hl,#_cmd
   3074 E5                 9426 	push	hl
   3075 CDr00s00           9427 	call	_vdp_copier
   3078 F1                 9428 	pop	af
                           9429 ;demo.c:1339: for (x = 30; x < 162; x+=1) {
   3079 DD 34 FD           9430 	inc	-3 (ix)
   307C 20 03              9431 	jr	NZ,00152$
   307E DD 34 FE           9432 	inc	-2 (ix)
   3081                    9433 00152$:
   3081 18 AD              9434 	jr	00124$
   3083                    9435 00127$:
                           9436 ;demo.c:1346: pointframe+=2;
   3083 21r30s42           9437 	ld	hl,#_pointframe
   3086 7E                 9438 	ld	a,(hl)
   3087 C6 02              9439 	add	a,#0x02
   3089 23                 9440 	inc	hl
   308A 2B                 9441 	dec	hl
   308B C5                 9442 	push	bc
   308C 4F                 9443 	ld	c, a
   308D 23                 9444 	inc	hl
   308E 7E                 9445 	ld	a, (hl)
   308F 47                 9446 	ld	b, a
   3090 79                 9447 	ld	a, c
   3091 2B                 9448 	dec	hl
   3092 77                 9449 	ld	(hl), a
   3093 78                 9450 	ld	a, b
   3094 C1                 9451 	pop	bc
   3095 CE 00              9452 	adc	a,#0x00
   3097 23                 9453 	inc	hl
   3098 77                 9454 	ld	(hl),a
                           9455 ;demo.c:1348: if (greetindex == 0) {
   3099 3Ar32s42           9456 	ld	a,(#_greetindex+0)
   309C 21r33s42           9457 	ld	hl,#_greetindex + 1
   309F B6                 9458 	or	a,(hl)
   30A0 20 17              9459 	jr	NZ,00107$
                           9460 ;demo.c:1349: slowend = 27;
   30A2 21rC0s41           9461 	ld	hl,#_slowend + 0
   30A5 36 1B              9462 	ld	(hl), #0x1B
   30A7 21rC1s41           9463 	ld	hl,#_slowend + 1
   30AA 36 00              9464 	ld	(hl), #0x00
                           9465 ;demo.c:1350: drawstrslow("GREETINGS TO VARIOUS GROUPS",10,20);
   30AC 21 0A 14           9466 	ld	hl,#0x140A
   30AF E5                 9467 	push	hl
   30B0 21r65s31           9468 	ld	hl,#__str_9
   30B3 E5                 9469 	push	hl
   30B4 CDrDAs10           9470 	call	_drawstrslow
   30B7 F1                 9471 	pop	af
   30B8 F1                 9472 	pop	af
   30B9                    9473 00107$:
                           9474 ;demo.c:1352: if (greetindex == 1) {
   30B9 3Ar32s42           9475 	ld	a,(#_greetindex+0)
   30BC D6 01              9476 	sub	a,#0x01
   30BE 20 06              9477 	jr	NZ,00153$
   30C0 3Ar33s42           9478 	ld	a,(#_greetindex+1)
   30C3 B7                 9479 	or	a,a
   30C4 28 02              9480 	jr	Z,00154$
   30C6                    9481 00153$:
   30C6 18 17              9482 	jr	00109$
   30C8                    9483 00154$:
                           9484 ;demo.c:1353: slowend = 33;
   30C8 21rC0s41           9485 	ld	hl,#_slowend + 0
   30CB 36 21              9486 	ld	(hl), #0x21
   30CD 21rC1s41           9487 	ld	hl,#_slowend + 1
   30D0 36 00              9488 	ld	(hl), #0x00
                           9489 ;demo.c:1354: drawstrslow("Trilobit  Prismbeings  Ivory Labs",10,164);
   30D2 21 0A A4           9490 	ld	hl,#0xA40A
   30D5 E5                 9491 	push	hl
   30D6 21r81s31           9492 	ld	hl,#__str_10
   30D9 E5                 9493 	push	hl
   30DA CDrDAs10           9494 	call	_drawstrslow
   30DD F1                 9495 	pop	af
   30DE F1                 9496 	pop	af
   30DF                    9497 00109$:
                           9498 ;demo.c:1356: if (greetindex == 2) {
   30DF 3Ar32s42           9499 	ld	a,(#_greetindex+0)
   30E2 D6 02              9500 	sub	a,#0x02
   30E4 20 06              9501 	jr	NZ,00155$
   30E6 3Ar33s42           9502 	ld	a,(#_greetindex+1)
   30E9 B7                 9503 	or	a,a
   30EA 28 02              9504 	jr	Z,00156$
   30EC                    9505 00155$:
   30EC 18 17              9506 	jr	00111$
   30EE                    9507 00156$:
                           9508 ;demo.c:1357: slowend = 29;
   30EE 21rC0s41           9509 	ld	hl,#_slowend + 0
   30F1 36 1D              9510 	ld	(hl), #0x1D
   30F3 21rC1s41           9511 	ld	hl,#_slowend + 1
   30F6 36 00              9512 	ld	(hl), #0x00
                           9513 ;demo.c:1358: drawstrslow("PWP  Dekadence  Paraguay  ISO",18,174);
   30F8 21 12 AE           9514 	ld	hl,#0xAE12
   30FB E5                 9515 	push	hl
   30FC 21rA3s31           9516 	ld	hl,#__str_11
   30FF E5                 9517 	push	hl
   3100 CDrDAs10           9518 	call	_drawstrslow
   3103 F1                 9519 	pop	af
   3104 F1                 9520 	pop	af
   3105                    9521 00111$:
                           9522 ;demo.c:1360: if (greetindex == 3) {
   3105 3Ar32s42           9523 	ld	a,(#_greetindex+0)
   3108 D6 03              9524 	sub	a,#0x03
   310A 20 06              9525 	jr	NZ,00157$
   310C 3Ar33s42           9526 	ld	a,(#_greetindex+1)
   310F B7                 9527 	or	a,a
   3110 28 02              9528 	jr	Z,00158$
   3112                    9529 00157$:
   3112 18 17              9530 	jr	00113$
   3114                    9531 00158$:
                           9532 ;demo.c:1361: slowend = 17;
   3114 21rC0s41           9533 	ld	hl,#_slowend + 0
   3117 36 11              9534 	ld	(hl), #0x11
   3119 21rC1s41           9535 	ld	hl,#_slowend + 1
   311C 36 00              9536 	ld	(hl), #0x00
                           9537 ;demo.c:1362: drawstrslow("Furry Trash Group",26,184);
   311E 21 1A B8           9538 	ld	hl,#0xB81A
   3121 E5                 9539 	push	hl
   3122 21rC1s31           9540 	ld	hl,#__str_12
   3125 E5                 9541 	push	hl
   3126 CDrDAs10           9542 	call	_drawstrslow
   3129 F1                 9543 	pop	af
   312A F1                 9544 	pop	af
   312B                    9545 00113$:
                           9546 ;demo.c:1364: if (ltrpointer >= slowend) { greetindex++; ltrpointer = 0; }
   312B 21rC0s41           9547 	ld	hl,#_slowend
   312E 3ArBEs41           9548 	ld	a,(#_ltrpointer+0)
   3131 96                 9549 	sub	a,(hl)
   3132 3ArBFs41           9550 	ld	a,(#_ltrpointer+1)
   3135 23                 9551 	inc	hl
   3136 9E                 9552 	sbc	a,(hl)
   3137 FAr54s31           9553 	jp	M,00115$
   313A FD 21r32s42        9554 	ld	iy,#_greetindex
   313E FD 34 00           9555 	inc	0 (iy)
   3141 20 07              9556 	jr	NZ,00159$
   3143 FD 21r32s42        9557 	ld	iy,#_greetindex
   3147 FD 34 01           9558 	inc	1 (iy)
   314A                    9559 00159$:
   314A 21rBEs41           9560 	ld	hl,#_ltrpointer + 0
   314D 36 00              9561 	ld	(hl), #0x00
   314F 21rBFs41           9562 	ld	hl,#_ltrpointer + 1
   3152 36 00              9563 	ld	(hl), #0x00
   3154                    9564 00115$:
                           9565 ;demo.c:1366: msx2_palette(4,0,0,0);
   3154 21 00 00           9566 	ld	hl,#0x0000
   3157 E5                 9567 	push	hl
   3158 2E 04              9568 	ld	l, #0x04
   315A E5                 9569 	push	hl
   315B CDr00s00           9570 	call	_msx2_palette
   315E F1                 9571 	pop	af
   315F F1                 9572 	pop	af
   3160 DD F9              9573 	ld	sp,ix
   3162 DD E1              9574 	pop	ix
   3164 C9                 9575 	ret
   3165                    9576 _points_end::
   3165                    9577 __str_9:
   3165 47 52 45 45 54 49  9578 	.ascii "GREETINGS TO VARIOUS GROUPS"
        4E 47 53 20 54 4F
        20 56 41 52 49 4F
        55 53 20 47 52 4F
        55 50 53
   3180 00                 9579 	.db 0x00
   3181                    9580 __str_10:
   3181 54 72 69 6C 6F 62  9581 	.ascii "Trilobit  Prismbeings  Ivory Labs"
        69 74 20 20 50 72
        69 73 6D 62 65 69
        6E 67 73 20 20 49
        76 6F 72 79 20 4C
        61 62 73
   31A2 00                 9582 	.db 0x00
   31A3                    9583 __str_11:
   31A3 50 57 50 20 20 44  9584 	.ascii "PWP  Dekadence  Paraguay  ISO"
        65 6B 61 64 65 6E
        63 65 20 20 50 61
        72 61 67 75 61 79
        20 20 49 53 4F
   31C0 00                 9585 	.db 0x00
   31C1                    9586 __str_12:
   31C1 46 75 72 72 79 20  9587 	.ascii "Furry Trash Group"
        54 72 61 73 68 20
        47 72 6F 75 70
   31D2 00                 9588 	.db 0x00
                           9589 ;demo.c:1371: void bigtext() {
                           9590 ;	---------------------------------
                           9591 ; Function bigtext
                           9592 ; ---------------------------------
   31D3                    9593 _bigtext_start::
   31D3                    9594 _bigtext:
   31D3 DD E5              9595 	push	ix
   31D5 DD 21 00 00        9596 	ld	ix,#0
   31D9 DD 39              9597 	add	ix,sp
   31DB F5                 9598 	push	af
                           9599 ;demo.c:1373: if (bigtextp == 0) {
   31DC 3Ar34s42           9600 	ld	a,(#_bigtextp+0)
   31DF FD 21r34s42        9601 	ld	iy,#_bigtextp
   31E3 FD B6 01           9602 	or	a,1 (iy)
   31E6 C2rF3s32           9603 	jp	NZ,00102$
                           9604 ;demo.c:1374: cmd.size_x = 2;
   31E9 21r32s41           9605 	ld	hl, #_cmd + 8
   31EC 36 02              9606 	ld	(hl),#0x02
   31EE 23                 9607 	inc	hl
   31EF 36 00              9608 	ld	(hl),#0x00
                           9609 ;demo.c:1375: cmd.size_y = 212;
   31F1 21r34s41           9610 	ld	hl, #_cmd + 10
   31F4 36 D4              9611 	ld	(hl),#0xD4
   31F6 23                 9612 	inc	hl
   31F7 36 00              9613 	ld	(hl),#0x00
                           9614 ;demo.c:1376: cmd.data = 0;
                           9615 ;demo.c:1377: cmd.argument = 0x00; // from 70xY to left
   31F9 3E 00              9616 	ld	a,#0x00
   31FB 32r36s41           9617 	ld	(#_cmd + 12),a
   31FE 32r37s41           9618 	ld	(#_cmd + 13),a
                           9619 ;demo.c:1378: cmd.command = 0xd0; // vram to vram, y only
   3201 01r38s41           9620 	ld	bc,#_cmd + 14
   3204 3E D0              9621 	ld	a,#0xD0
   3206 02                 9622 	ld	(bc),a
                           9623 ;demo.c:1379: cmd.source_x = 255;
   3207 21r2As41           9624 	ld	hl,#_cmd
   320A 36 FF              9625 	ld	(hl),#0xFF
   320C 23                 9626 	inc	hl
   320D 36 00              9627 	ld	(hl),#0x00
                           9628 ;demo.c:1380: cmd.source_y = 0;
   320F 21r2Cs41           9629 	ld	hl, #_cmd + 2
   3212 36 00              9630 	ld	(hl),#0x00
   3214 23                 9631 	inc	hl
   3215 36 00              9632 	ld	(hl),#0x00
                           9633 ;demo.c:1382: for (x = 0; x < 256; x+=4) {
   3217 01 00 00           9634 	ld	bc,#0x0000
   321A                    9635 00128$:
   321A 79                 9636 	ld	a,c
   321B D6 00              9637 	sub	a,#0x00
   321D 78                 9638 	ld	a,b
   321E DE 01              9639 	sbc	a,#0x01
   3220 F2r57s32           9640 	jp	P,00131$
                           9641 ;demo.c:1383: waitVB();
   3223 76                 9642 		halt 
                           9643 ;demo.c:1384: cmd.dest_y = 256;
   3224 11r30s41           9644 	ld	de,#_cmd + 6
   3227 EB                 9645 	ex	de,hl
   3228 36 00              9646 	ld	(hl),#0x00
   322A 23                 9647 	inc	hl
   322B 36 01              9648 	ld	(hl),#0x01
                           9649 ;demo.c:1385: cmd.dest_x = x;
   322D 11r2Es41           9650 	ld	de,#_cmd + 4
   3230 EB                 9651 	ex	de,hl
   3231 71                 9652 	ld	(hl),c
   3232 23                 9653 	inc	hl
   3233 70                 9654 	ld	(hl),b
                           9655 ;demo.c:1386: vdp_copier(&cmd);
   3234 C5                 9656 	push	bc
   3235 21r2As41           9657 	ld	hl,#_cmd
   3238 E5                 9658 	push	hl
   3239 CDr00s00           9659 	call	_vdp_copier
   323C F1                 9660 	pop	af
   323D C1                 9661 	pop	bc
                           9662 ;demo.c:1387: cmd.dest_y = 0;
   323E 11r30s41           9663 	ld	de,#_cmd + 6
   3241 EB                 9664 	ex	de,hl
   3242 36 00              9665 	ld	(hl),#0x00
   3244 23                 9666 	inc	hl
   3245 36 00              9667 	ld	(hl),#0x00
                           9668 ;demo.c:1388: vdp_copier(&cmd);
   3247 C5                 9669 	push	bc
   3248 21r2As41           9670 	ld	hl,#_cmd
   324B E5                 9671 	push	hl
   324C CDr00s00           9672 	call	_vdp_copier
   324F F1                 9673 	pop	af
   3250 C1                 9674 	pop	bc
                           9675 ;demo.c:1382: for (x = 0; x < 256; x+=4) {
   3251 03                 9676 	inc	bc
   3252 03                 9677 	inc	bc
   3253 03                 9678 	inc	bc
   3254 03                 9679 	inc	bc
   3255 18 C3              9680 	jr	00128$
   3257                    9681 00131$:
                           9682 ;demo.c:1391: for (x = 254; x > 0; x-=4) {
   3257 01 FE 00           9683 	ld	bc,#0x00FE
   325A                    9684 00132$:
   325A 3E 00              9685 	ld	a,#0x00
   325C 91                 9686 	sub	a,c
   325D 3E 00              9687 	ld	a,#0x00
   325F 98                 9688 	sbc	a,b
   3260 F2r9Bs32           9689 	jp	P,00135$
                           9690 ;demo.c:1392: waitVB();
   3263 76                 9691 		halt 
                           9692 ;demo.c:1393: cmd.dest_y = 256;
   3264 11r30s41           9693 	ld	de,#_cmd + 6
   3267 EB                 9694 	ex	de,hl
   3268 36 00              9695 	ld	(hl),#0x00
   326A 23                 9696 	inc	hl
   326B 36 01              9697 	ld	(hl),#0x01
                           9698 ;demo.c:1394: cmd.dest_x = x;
   326D 11r2Es41           9699 	ld	de,#_cmd + 4
   3270 EB                 9700 	ex	de,hl
   3271 71                 9701 	ld	(hl),c
   3272 23                 9702 	inc	hl
   3273 70                 9703 	ld	(hl),b
                           9704 ;demo.c:1395: vdp_copier(&cmd);
   3274 C5                 9705 	push	bc
   3275 21r2As41           9706 	ld	hl,#_cmd
   3278 E5                 9707 	push	hl
   3279 CDr00s00           9708 	call	_vdp_copier
   327C F1                 9709 	pop	af
   327D C1                 9710 	pop	bc
                           9711 ;demo.c:1396: cmd.dest_y = 0;
   327E 11r30s41           9712 	ld	de,#_cmd + 6
   3281 EB                 9713 	ex	de,hl
   3282 36 00              9714 	ld	(hl),#0x00
   3284 23                 9715 	inc	hl
   3285 36 00              9716 	ld	(hl),#0x00
                           9717 ;demo.c:1397: vdp_copier(&cmd);
   3287 C5                 9718 	push	bc
   3288 21r2As41           9719 	ld	hl,#_cmd
   328B E5                 9720 	push	hl
   328C CDr00s00           9721 	call	_vdp_copier
   328F F1                 9722 	pop	af
   3290 C1                 9723 	pop	bc
                           9724 ;demo.c:1391: for (x = 254; x > 0; x-=4) {
   3291 79                 9725 	ld	a,c
   3292 C6 FC              9726 	add	a,#0xFC
   3294 4F                 9727 	ld	c,a
   3295 78                 9728 	ld	a,b
   3296 CE FF              9729 	adc	a,#0xFF
   3298 47                 9730 	ld	b,a
   3299 18 BF              9731 	jr	00132$
   329B                    9732 00135$:
                           9733 ;demo.c:1400: vdp_load_palette(boxes_palette);
   329B 21rE6s40           9734 	ld	hl,#_boxes_palette
   329E E5                 9735 	push	hl
   329F CDr00s00           9736 	call	_vdp_load_palette
   32A2 F1                 9737 	pop	af
                           9738 ;demo.c:1401: drawstr2x("DIGITAL",26,44);
   32A3 21 1A 2C           9739 	ld	hl,#0x2C1A
   32A6 E5                 9740 	push	hl
   32A7 21r9Bs38           9741 	ld	hl,#__str_13
   32AA E5                 9742 	push	hl
   32AB CDr78s11           9743 	call	_drawstr2x
   32AE F1                 9744 	pop	af
   32AF F1                 9745 	pop	af
                           9746 ;demo.c:1402: drawstr2x("SOUNDS",27,84);
   32B0 21 1B 54           9747 	ld	hl,#0x541B
   32B3 E5                 9748 	push	hl
   32B4 21rA3s38           9749 	ld	hl,#__str_14
   32B7 E5                 9750 	push	hl
   32B8 CDr78s11           9751 	call	_drawstr2x
   32BB F1                 9752 	pop	af
   32BC F1                 9753 	pop	af
                           9754 ;demo.c:1403: drawstr2x("SYSTEM",25,124);
   32BD 21 19 7C           9755 	ld	hl,#0x7C19
   32C0 E5                 9756 	push	hl
   32C1 21rAAs38           9757 	ld	hl,#__str_15
   32C4 E5                 9758 	push	hl
   32C5 CDr78s11           9759 	call	_drawstr2x
   32C8 F1                 9760 	pop	af
   32C9 F1                 9761 	pop	af
                           9762 ;demo.c:1404: bigtextp++;
   32CA FD 21r34s42        9763 	ld	iy,#_bigtextp
   32CE FD 34 00           9764 	inc	0 (iy)
   32D1 20 07              9765 	jr	NZ,00188$
   32D3 FD 21r34s42        9766 	ld	iy,#_bigtextp
   32D7 FD 34 01           9767 	inc	1 (iy)
   32DA                    9768 00188$:
                           9769 ;demo.c:1405: tri_inited = 2;
   32DA 21r15s42           9770 	ld	hl,#_tri_inited + 0
   32DD 36 02              9771 	ld	(hl), #0x02
                           9772 ;demo.c:1406: ff = 0;
   32DF 21rC2s41           9773 	ld	hl,#_ff + 0
   32E2 36 00              9774 	ld	(hl), #0x00
   32E4 21rC3s41           9775 	ld	hl,#_ff + 1
   32E7 36 00              9776 	ld	(hl), #0x00
                           9777 ;demo.c:1407: ltrpointer = 0;
   32E9 21rBEs41           9778 	ld	hl,#_ltrpointer + 0
   32EC 36 00              9779 	ld	(hl), #0x00
   32EE 21rBFs41           9780 	ld	hl,#_ltrpointer + 1
   32F1 36 00              9781 	ld	(hl), #0x00
   32F3                    9782 00102$:
                           9783 ;demo.c:1410: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   32F3 21rC2s41           9784 	ld	hl,#_ff + 0
   32F6 4E                 9785 	ld	c,(hl)
   32F7 21rC3s41           9786 	ld	hl,#_ff + 1
   32FA 46                 9787 	ld	b,(hl)
   32FB CB 28              9788 	sra	b
   32FD CB 19              9789 	rr	c
   32FF CB 28              9790 	sra	b
   3301 CB 19              9791 	rr	c
   3303 21rC2s41           9792 	ld	hl,#_ff + 0
   3306 5E                 9793 	ld	e,(hl)
   3307 21rC3s41           9794 	ld	hl,#_ff + 1
   330A 56                 9795 	ld	d,(hl)
   330B CB 2A              9796 	sra	d
   330D CB 1B              9797 	rr	e
   330F CB 2A              9798 	sra	d
   3311 CB 1B              9799 	rr	e
   3313 CB 2A              9800 	sra	d
   3315 CB 1B              9801 	rr	e
   3317 43                 9802 	ld	b,e
   3318 79                 9803 	ld	a,c
   3319 F5                 9804 	push	af
   331A 33                 9805 	inc	sp
   331B C5                 9806 	push	bc
   331C 33                 9807 	inc	sp
   331D 41                 9808 	ld	b,c
   331E 0E 04              9809 	ld	c,#0x04
   3320 C5                 9810 	push	bc
   3321 CDr00s00           9811 	call	_msx2_palette
   3324 F1                 9812 	pop	af
   3325 F1                 9813 	pop	af
                           9814 ;demo.c:1411: ff+=2;
   3326 21rC2s41           9815 	ld	hl,#_ff
   3329 7E                 9816 	ld	a,(hl)
   332A C6 02              9817 	add	a,#0x02
   332C 23                 9818 	inc	hl
   332D 2B                 9819 	dec	hl
   332E C5                 9820 	push	bc
   332F 4F                 9821 	ld	c, a
   3330 23                 9822 	inc	hl
   3331 7E                 9823 	ld	a, (hl)
   3332 47                 9824 	ld	b, a
   3333 79                 9825 	ld	a, c
   3334 2B                 9826 	dec	hl
   3335 77                 9827 	ld	(hl), a
   3336 78                 9828 	ld	a, b
   3337 C1                 9829 	pop	bc
   3338 CE 00              9830 	adc	a,#0x00
   333A 23                 9831 	inc	hl
   333B 77                 9832 	ld	(hl),a
                           9833 ;demo.c:1413: if (ff == 600) {
   333C 3ArC2s41           9834 	ld	a,(#_ff+0)
   333F D6 58              9835 	sub	a,#0x58
   3341 20 07              9836 	jr	NZ,00191$
   3343 3ArC3s41           9837 	ld	a,(#_ff+1)
   3346 D6 02              9838 	sub	a,#0x02
   3348 28 03              9839 	jr	Z,00192$
   334A                    9840 00191$:
   334A C3r9Es34           9841 	jp	00104$
   334D                    9842 00192$:
                           9843 ;demo.c:1414: cmd.size_x = 256;
   334D 21r32s41           9844 	ld	hl, #_cmd + 8
   3350 36 00              9845 	ld	(hl),#0x00
   3352 23                 9846 	inc	hl
   3353 36 01              9847 	ld	(hl),#0x01
                           9848 ;demo.c:1415: cmd.size_y = 3;
   3355 21r34s41           9849 	ld	hl, #_cmd + 10
   3358 36 03              9850 	ld	(hl),#0x03
   335A 23                 9851 	inc	hl
   335B 36 00              9852 	ld	(hl),#0x00
                           9853 ;demo.c:1416: cmd.data = 0;
                           9854 ;demo.c:1417: cmd.argument = 0x00; // from 70xY to left
   335D 3E 00              9855 	ld	a,#0x00
   335F 32r36s41           9856 	ld	(#_cmd + 12),a
   3362 32r37s41           9857 	ld	(#_cmd + 13),a
                           9858 ;demo.c:1418: cmd.command = 0xd0; // vram to vram, y only
   3365 01r38s41           9859 	ld	bc,#_cmd + 14
   3368 3E D0              9860 	ld	a,#0xD0
   336A 02                 9861 	ld	(bc),a
                           9862 ;demo.c:1419: cmd.source_x = 0;
   336B 21r2As41           9863 	ld	hl,#_cmd
   336E 36 00              9864 	ld	(hl),#0x00
   3370 23                 9865 	inc	hl
   3371 36 00              9866 	ld	(hl),#0x00
                           9867 ;demo.c:1420: cmd.source_y = 28;
   3373 21r2Cs41           9868 	ld	hl, #_cmd + 2
   3376 36 1C              9869 	ld	(hl),#0x1C
   3378 23                 9870 	inc	hl
   3379 36 00              9871 	ld	(hl),#0x00
                           9872 ;demo.c:1422: cmd.dest_y = 512;
   337B 21r30s41           9873 	ld	hl, #_cmd + 6
   337E 36 00              9874 	ld	(hl),#0x00
   3380 23                 9875 	inc	hl
   3381 36 02              9876 	ld	(hl),#0x02
                           9877 ;demo.c:1423: cmd.dest_x = 0;
   3383 21r2Es41           9878 	ld	hl, #_cmd + 4
   3386 36 00              9879 	ld	(hl),#0x00
   3388 23                 9880 	inc	hl
   3389 36 00              9881 	ld	(hl),#0x00
                           9882 ;demo.c:1424: vdp_copier(&cmd);
   338B 21r2As41           9883 	ld	hl,#_cmd
   338E E5                 9884 	push	hl
   338F CDr00s00           9885 	call	_vdp_copier
   3392 F1                 9886 	pop	af
                           9887 ;demo.c:1426: cmd.source_x = 0;
   3393 21r2As41           9888 	ld	hl,#_cmd
   3396 36 00              9889 	ld	(hl),#0x00
   3398 23                 9890 	inc	hl
   3399 36 00              9891 	ld	(hl),#0x00
                           9892 ;demo.c:1427: cmd.source_y = 512;
   339B 01r2Cs41           9893 	ld	bc,#_cmd + 2
   339E 69                 9894 	ld	l,c
   339F 60                 9895 	ld	h,b
   33A0 36 00              9896 	ld	(hl),#0x00
   33A2 23                 9897 	inc	hl
   33A3 36 02              9898 	ld	(hl),#0x02
                           9899 ;demo.c:1429: for (x = 0; x < 66; x+=1) {
   33A5 DD 36 FE 00        9900 	ld	-2 (ix),#0x00
   33A9 DD 36 FF 00        9901 	ld	-1 (ix),#0x00
   33AD                    9902 00136$:
   33AD DD 7E FE           9903 	ld	a,-2 (ix)
   33B0 D6 42              9904 	sub	a,#0x42
   33B2 DD 7E FF           9905 	ld	a,-1 (ix)
   33B5 DE 00              9906 	sbc	a,#0x00
   33B7 F2r0Es34           9907 	jp	P,00139$
                           9908 ;demo.c:1430: waitVB();
   33BA 76                 9909 		halt 
                           9910 ;demo.c:1431: cmd.dest_y = 28+x;
   33BB 11r30s41           9911 	ld	de,#_cmd + 6
   33BE DD 7E FE           9912 	ld	a,-2 (ix)
   33C1 C6 1C              9913 	add	a,#0x1C
   33C3 4F                 9914 	ld	c,a
   33C4 DD 7E FF           9915 	ld	a,-1 (ix)
   33C7 CE 00              9916 	adc	a,#0x00
   33C9 47                 9917 	ld	b,a
   33CA 6B                 9918 	ld	l,e
   33CB 62                 9919 	ld	h,d
   33CC 71                 9920 	ld	(hl),c
   33CD 23                 9921 	inc	hl
   33CE 70                 9922 	ld	(hl),b
                           9923 ;demo.c:1432: cmd.dest_x = 0;
   33CF 21r2Es41           9924 	ld	hl, #_cmd + 4
   33D2 36 00              9925 	ld	(hl),#0x00
   33D4 23                 9926 	inc	hl
   33D5 36 00              9927 	ld	(hl),#0x00
                           9928 ;demo.c:1433: vdp_copier(&cmd);
   33D7 21r2As41           9929 	ld	hl,#_cmd
   33DA E5                 9930 	push	hl
   33DB CDr00s00           9931 	call	_vdp_copier
   33DE F1                 9932 	pop	af
                           9933 ;demo.c:1434: cmd.dest_y = 161-x;
   33DF 01r30s41           9934 	ld	bc,#_cmd + 6
   33E2 3E A1              9935 	ld	a,#0xA1
   33E4 DD 96 FE           9936 	sub	a,-2 (ix)
   33E7 5F                 9937 	ld	e,a
   33E8 3E 00              9938 	ld	a,#0x00
   33EA DD 9E FF           9939 	sbc	a,-1 (ix)
   33ED 57                 9940 	ld	d,a
   33EE 69                 9941 	ld	l,c
   33EF 60                 9942 	ld	h,b
   33F0 73                 9943 	ld	(hl),e
   33F1 23                 9944 	inc	hl
   33F2 72                 9945 	ld	(hl),d
                           9946 ;demo.c:1435: cmd.dest_x = 0;
   33F3 21r2Es41           9947 	ld	hl, #_cmd + 4
   33F6 36 00              9948 	ld	(hl),#0x00
   33F8 23                 9949 	inc	hl
   33F9 36 00              9950 	ld	(hl),#0x00
                           9951 ;demo.c:1436: vdp_copier(&cmd);
   33FB 21r2As41           9952 	ld	hl,#_cmd
   33FE E5                 9953 	push	hl
   33FF CDr00s00           9954 	call	_vdp_copier
   3402 F1                 9955 	pop	af
                           9956 ;demo.c:1429: for (x = 0; x < 66; x+=1) {
   3403 DD 34 FE           9957 	inc	-2 (ix)
   3406 20 03              9958 	jr	NZ,00193$
   3408 DD 34 FF           9959 	inc	-1 (ix)
   340B                    9960 00193$:
   340B C3rADs33           9961 	jp	00136$
   340E                    9962 00139$:
                           9963 ;demo.c:1439: for (x = 0; x < 66; x+=1) {
   340E DD 36 FE 00        9964 	ld	-2 (ix),#0x00
   3412 DD 36 FF 00        9965 	ld	-1 (ix),#0x00
   3416                    9966 00140$:
   3416 DD 7E FE           9967 	ld	a,-2 (ix)
   3419 D6 42              9968 	sub	a,#0x42
   341B DD 7E FF           9969 	ld	a,-1 (ix)
   341E DE 00              9970 	sbc	a,#0x00
   3420 F2r77s34           9971 	jp	P,00143$
                           9972 ;demo.c:1440: waitVB();
   3423 76                 9973 		halt 
                           9974 ;demo.c:1441: cmd.dest_y = 28+66-x;
   3424 11r30s41           9975 	ld	de,#_cmd + 6
   3427 3E 5E              9976 	ld	a,#0x5E
   3429 DD 96 FE           9977 	sub	a,-2 (ix)
   342C 4F                 9978 	ld	c,a
   342D 3E 00              9979 	ld	a,#0x00
   342F DD 9E FF           9980 	sbc	a,-1 (ix)
   3432 47                 9981 	ld	b,a
   3433 6B                 9982 	ld	l,e
   3434 62                 9983 	ld	h,d
   3435 71                 9984 	ld	(hl),c
   3436 23                 9985 	inc	hl
   3437 70                 9986 	ld	(hl),b
                           9987 ;demo.c:1442: cmd.dest_x = 0;
   3438 21r2Es41           9988 	ld	hl, #_cmd + 4
   343B 36 00              9989 	ld	(hl),#0x00
   343D 23                 9990 	inc	hl
   343E 36 00              9991 	ld	(hl),#0x00
                           9992 ;demo.c:1443: vdp_copier(&cmd);
   3440 21r2As41           9993 	ld	hl,#_cmd
   3443 E5                 9994 	push	hl
   3444 CDr00s00           9995 	call	_vdp_copier
   3447 F1                 9996 	pop	af
                           9997 ;demo.c:1444: cmd.dest_y = 161-66+x;
   3448 01r30s41           9998 	ld	bc,#_cmd + 6
   344B DD 7E FE           9999 	ld	a,-2 (ix)
   344E C6 5F             10000 	add	a,#0x5F
   3450 5F                10001 	ld	e,a
   3451 DD 7E FF          10002 	ld	a,-1 (ix)
   3454 CE 00             10003 	adc	a,#0x00
   3456 57                10004 	ld	d,a
   3457 69                10005 	ld	l,c
   3458 60                10006 	ld	h,b
   3459 73                10007 	ld	(hl),e
   345A 23                10008 	inc	hl
   345B 72                10009 	ld	(hl),d
                          10010 ;demo.c:1445: cmd.dest_x = 0;
   345C 21r2Es41          10011 	ld	hl, #_cmd + 4
   345F 36 00             10012 	ld	(hl),#0x00
   3461 23                10013 	inc	hl
   3462 36 00             10014 	ld	(hl),#0x00
                          10015 ;demo.c:1446: vdp_copier(&cmd);
   3464 21r2As41          10016 	ld	hl,#_cmd
   3467 E5                10017 	push	hl
   3468 CDr00s00          10018 	call	_vdp_copier
   346B F1                10019 	pop	af
                          10020 ;demo.c:1439: for (x = 0; x < 66; x+=1) {
   346C DD 34 FE          10021 	inc	-2 (ix)
   346F 20 03             10022 	jr	NZ,00194$
   3471 DD 34 FF          10023 	inc	-1 (ix)
   3474                   10024 00194$:
   3474 C3r16s34          10025 	jp	00140$
   3477                   10026 00143$:
                          10027 ;demo.c:1450: drawstr2x("COMMAND",4,44);
   3477 21 04 2C          10028 	ld	hl,#0x2C04
   347A E5                10029 	push	hl
   347B 21rB1s38          10030 	ld	hl,#__str_16
   347E E5                10031 	push	hl
   347F CDr78s11          10032 	call	_drawstr2x
   3482 F1                10033 	pop	af
   3483 F1                10034 	pop	af
                          10035 ;demo.c:1451: drawstr2x("   THE  ",32,84);
   3484 21 20 54          10036 	ld	hl,#0x5420
   3487 E5                10037 	push	hl
   3488 21rB9s38          10038 	ld	hl,#__str_17
   348B E5                10039 	push	hl
   348C CDr78s11          10040 	call	_drawstr2x
   348F F1                10041 	pop	af
   3490 F1                10042 	pop	af
                          10043 ;demo.c:1452: drawstr2x("  BASS ",35,124);
   3491 21 23 7C          10044 	ld	hl,#0x7C23
   3494 E5                10045 	push	hl
   3495 21rC2s38          10046 	ld	hl,#__str_18
   3498 E5                10047 	push	hl
   3499 CDr78s11          10048 	call	_drawstr2x
   349C F1                10049 	pop	af
   349D F1                10050 	pop	af
   349E                   10051 00104$:
                          10052 ;demo.c:1455: if (ff == 1200) {
   349E 3ArC2s41          10053 	ld	a,(#_ff+0)
   34A1 D6 B0             10054 	sub	a,#0xB0
   34A3 20 07             10055 	jr	NZ,00195$
   34A5 3ArC3s41          10056 	ld	a,(#_ff+1)
   34A8 D6 04             10057 	sub	a,#0x04
   34AA 28 03             10058 	jr	Z,00196$
   34AC                   10059 00195$:
   34AC C3r3Es36          10060 	jp	00106$
   34AF                   10061 00196$:
                          10062 ;demo.c:1456: cmd.size_x = 3;
   34AF 21r32s41          10063 	ld	hl, #_cmd + 8
   34B2 36 03             10064 	ld	(hl),#0x03
   34B4 23                10065 	inc	hl
   34B5 36 00             10066 	ld	(hl),#0x00
                          10067 ;demo.c:1457: cmd.size_y = 212;
   34B7 21r34s41          10068 	ld	hl, #_cmd + 10
   34BA 36 D4             10069 	ld	(hl),#0xD4
   34BC 23                10070 	inc	hl
   34BD 36 00             10071 	ld	(hl),#0x00
                          10072 ;demo.c:1458: cmd.data = 0;
                          10073 ;demo.c:1459: cmd.argument = 0x00; // from 70xY to left
   34BF 3E 00             10074 	ld	a,#0x00
   34C1 32r36s41          10075 	ld	(#_cmd + 12),a
   34C4 32r37s41          10076 	ld	(#_cmd + 13),a
                          10077 ;demo.c:1460: cmd.command = 0xd0; // vram to vram, y only
   34C7 01r38s41          10078 	ld	bc,#_cmd + 14
   34CA 3E D0             10079 	ld	a,#0xD0
   34CC 02                10080 	ld	(bc),a
                          10081 ;demo.c:1461: cmd.source_x = 255;
   34CD 21r2As41          10082 	ld	hl,#_cmd
   34D0 36 FF             10083 	ld	(hl),#0xFF
   34D2 23                10084 	inc	hl
   34D3 36 00             10085 	ld	(hl),#0x00
                          10086 ;demo.c:1462: cmd.source_y = 0;
   34D5 21r2Cs41          10087 	ld	hl, #_cmd + 2
   34D8 36 00             10088 	ld	(hl),#0x00
   34DA 23                10089 	inc	hl
   34DB 36 00             10090 	ld	(hl),#0x00
                          10091 ;demo.c:1464: for (x = 254; x > 0; x-=4) {
   34DD DD 36 FE FE       10092 	ld	-2 (ix),#0xFE
   34E1 DD 36 FF 00       10093 	ld	-1 (ix),#0x00
   34E5                   10094 00144$:
   34E5 3E 00             10095 	ld	a,#0x00
   34E7 DD 96 FE          10096 	sub	a,-2 (ix)
   34EA 3E 00             10097 	ld	a,#0x00
   34EC DD 9E FF          10098 	sbc	a,-1 (ix)
   34EF F2r7As35          10099 	jp	P,00147$
                          10100 ;demo.c:1465: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   34F2 21rC2s41          10101 	ld	hl,#_ff + 0
   34F5 5E                10102 	ld	e,(hl)
   34F6 21rC3s41          10103 	ld	hl,#_ff + 1
   34F9 56                10104 	ld	d,(hl)
   34FA CB 2A             10105 	sra	d
   34FC CB 1B             10106 	rr	e
   34FE CB 2A             10107 	sra	d
   3500 CB 1B             10108 	rr	e
   3502 21rC2s41          10109 	ld	hl,#_ff + 0
   3505 56                10110 	ld	d,(hl)
   3506 21rC3s41          10111 	ld	hl,#_ff + 1
   3509 4E                10112 	ld	c,(hl)
   350A CB 29             10113 	sra	c
   350C CB 1A             10114 	rr	d
   350E CB 29             10115 	sra	c
   3510 CB 1A             10116 	rr	d
   3512 CB 29             10117 	sra	c
   3514 CB 1A             10118 	rr	d
   3516 7B                10119 	ld	a,e
   3517 F5                10120 	push	af
   3518 33                10121 	inc	sp
   3519 D5                10122 	push	de
   351A 33                10123 	inc	sp
   351B 53                10124 	ld	d,e
   351C 1E 04             10125 	ld	e,#0x04
   351E D5                10126 	push	de
   351F CDr00s00          10127 	call	_msx2_palette
   3522 F1                10128 	pop	af
   3523 F1                10129 	pop	af
                          10130 ;demo.c:1466: ff+=2;
   3524 21rC2s41          10131 	ld	hl,#_ff
   3527 7E                10132 	ld	a,(hl)
   3528 C6 02             10133 	add	a,#0x02
   352A 23                10134 	inc	hl
   352B 2B                10135 	dec	hl
   352C C5                10136 	push	bc
   352D 4F                10137 	ld	c, a
   352E 23                10138 	inc	hl
   352F 7E                10139 	ld	a, (hl)
   3530 47                10140 	ld	b, a
   3531 79                10141 	ld	a, c
   3532 2B                10142 	dec	hl
   3533 77                10143 	ld	(hl), a
   3534 78                10144 	ld	a, b
   3535 C1                10145 	pop	bc
   3536 CE 00             10146 	adc	a,#0x00
   3538 23                10147 	inc	hl
   3539 77                10148 	ld	(hl),a
                          10149 ;demo.c:1467: waitVB();
   353A 76                10150 		halt 
                          10151 ;demo.c:1468: cmd.dest_y = 256;
   353B 21r30s41          10152 	ld	hl, #_cmd + 6
   353E 36 00             10153 	ld	(hl),#0x00
   3540 23                10154 	inc	hl
   3541 36 01             10155 	ld	(hl),#0x01
                          10156 ;demo.c:1469: cmd.dest_x = x;
   3543 21r2Es41          10157 	ld	hl, #_cmd + 4
   3546 DD 7E FE          10158 	ld	a,-2 (ix)
   3549 77                10159 	ld	(hl),a
   354A 23                10160 	inc	hl
   354B DD 7E FF          10161 	ld	a,-1 (ix)
   354E 77                10162 	ld	(hl),a
                          10163 ;demo.c:1470: vdp_copier(&cmd);
   354F 21r2As41          10164 	ld	hl,#_cmd
   3552 E5                10165 	push	hl
   3553 CDr00s00          10166 	call	_vdp_copier
   3556 F1                10167 	pop	af
                          10168 ;demo.c:1471: cmd.dest_y = 0;
   3557 21r30s41          10169 	ld	hl, #_cmd + 6
   355A 36 00             10170 	ld	(hl),#0x00
   355C 23                10171 	inc	hl
   355D 36 00             10172 	ld	(hl),#0x00
                          10173 ;demo.c:1472: vdp_copier(&cmd);
   355F 21r2As41          10174 	ld	hl,#_cmd
   3562 E5                10175 	push	hl
   3563 CDr00s00          10176 	call	_vdp_copier
   3566 F1                10177 	pop	af
                          10178 ;demo.c:1464: for (x = 254; x > 0; x-=4) {
   3567 DD 7E FE          10179 	ld	a,-2 (ix)
   356A C6 FC             10180 	add	a,#0xFC
   356C DD 77 FE          10181 	ld	-2 (ix),a
   356F DD 7E FF          10182 	ld	a,-1 (ix)
   3572 CE FF             10183 	adc	a,#0xFF
   3574 DD 77 FF          10184 	ld	-1 (ix),a
   3577 C3rE5s34          10185 	jp	00144$
   357A                   10186 00147$:
                          10187 ;demo.c:1476: for (x = 0; x < 256; x+=4) {
   357A DD 36 FE 00       10188 	ld	-2 (ix),#0x00
   357E DD 36 FF 00       10189 	ld	-1 (ix),#0x00
   3582                   10190 00148$:
   3582 DD 7E FE          10191 	ld	a,-2 (ix)
   3585 D6 00             10192 	sub	a,#0x00
   3587 DD 7E FF          10193 	ld	a,-1 (ix)
   358A DE 01             10194 	sbc	a,#0x01
   358C F2r17s36          10195 	jp	P,00151$
                          10196 ;demo.c:1477: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   358F 21rC2s41          10197 	ld	hl,#_ff + 0
   3592 5E                10198 	ld	e,(hl)
   3593 21rC3s41          10199 	ld	hl,#_ff + 1
   3596 56                10200 	ld	d,(hl)
   3597 CB 2A             10201 	sra	d
   3599 CB 1B             10202 	rr	e
   359B CB 2A             10203 	sra	d
   359D CB 1B             10204 	rr	e
   359F 21rC2s41          10205 	ld	hl,#_ff + 0
   35A2 56                10206 	ld	d,(hl)
   35A3 21rC3s41          10207 	ld	hl,#_ff + 1
   35A6 4E                10208 	ld	c,(hl)
   35A7 CB 29             10209 	sra	c
   35A9 CB 1A             10210 	rr	d
   35AB CB 29             10211 	sra	c
   35AD CB 1A             10212 	rr	d
   35AF CB 29             10213 	sra	c
   35B1 CB 1A             10214 	rr	d
   35B3 7B                10215 	ld	a,e
   35B4 F5                10216 	push	af
   35B5 33                10217 	inc	sp
   35B6 D5                10218 	push	de
   35B7 33                10219 	inc	sp
   35B8 53                10220 	ld	d,e
   35B9 1E 04             10221 	ld	e,#0x04
   35BB D5                10222 	push	de
   35BC CDr00s00          10223 	call	_msx2_palette
   35BF F1                10224 	pop	af
   35C0 F1                10225 	pop	af
                          10226 ;demo.c:1478: ff+=2;
   35C1 21rC2s41          10227 	ld	hl,#_ff
   35C4 7E                10228 	ld	a,(hl)
   35C5 C6 02             10229 	add	a,#0x02
   35C7 23                10230 	inc	hl
   35C8 2B                10231 	dec	hl
   35C9 C5                10232 	push	bc
   35CA 4F                10233 	ld	c, a
   35CB 23                10234 	inc	hl
   35CC 7E                10235 	ld	a, (hl)
   35CD 47                10236 	ld	b, a
   35CE 79                10237 	ld	a, c
   35CF 2B                10238 	dec	hl
   35D0 77                10239 	ld	(hl), a
   35D1 78                10240 	ld	a, b
   35D2 C1                10241 	pop	bc
   35D3 CE 00             10242 	adc	a,#0x00
   35D5 23                10243 	inc	hl
   35D6 77                10244 	ld	(hl),a
                          10245 ;demo.c:1479: waitVB();
   35D7 76                10246 		halt 
                          10247 ;demo.c:1480: cmd.dest_y = 256;
   35D8 21r30s41          10248 	ld	hl, #_cmd + 6
   35DB 36 00             10249 	ld	(hl),#0x00
   35DD 23                10250 	inc	hl
   35DE 36 01             10251 	ld	(hl),#0x01
                          10252 ;demo.c:1481: cmd.dest_x = x;
   35E0 21r2Es41          10253 	ld	hl, #_cmd + 4
   35E3 DD 7E FE          10254 	ld	a,-2 (ix)
   35E6 77                10255 	ld	(hl),a
   35E7 23                10256 	inc	hl
   35E8 DD 7E FF          10257 	ld	a,-1 (ix)
   35EB 77                10258 	ld	(hl),a
                          10259 ;demo.c:1482: vdp_copier(&cmd);
   35EC 21r2As41          10260 	ld	hl,#_cmd
   35EF E5                10261 	push	hl
   35F0 CDr00s00          10262 	call	_vdp_copier
   35F3 F1                10263 	pop	af
                          10264 ;demo.c:1483: cmd.dest_y = 0;
   35F4 21r30s41          10265 	ld	hl, #_cmd + 6
   35F7 36 00             10266 	ld	(hl),#0x00
   35F9 23                10267 	inc	hl
   35FA 36 00             10268 	ld	(hl),#0x00
                          10269 ;demo.c:1484: vdp_copier(&cmd);
   35FC 21r2As41          10270 	ld	hl,#_cmd
   35FF E5                10271 	push	hl
   3600 CDr00s00          10272 	call	_vdp_copier
   3603 F1                10273 	pop	af
                          10274 ;demo.c:1476: for (x = 0; x < 256; x+=4) {
   3604 DD 7E FE          10275 	ld	a,-2 (ix)
   3607 C6 04             10276 	add	a,#0x04
   3609 DD 77 FE          10277 	ld	-2 (ix),a
   360C DD 7E FF          10278 	ld	a,-1 (ix)
   360F CE 00             10279 	adc	a,#0x00
   3611 DD 77 FF          10280 	ld	-1 (ix),a
   3614 C3r82s35          10281 	jp	00148$
   3617                   10282 00151$:
                          10283 ;demo.c:1487: drawstr2x("REVISION",10,44);
   3617 21 0A 2C          10284 	ld	hl,#0x2C0A
   361A E5                10285 	push	hl
   361B 21rCAs38          10286 	ld	hl,#__str_19
   361E E5                10287 	push	hl
   361F CDr78s11          10288 	call	_drawstr2x
   3622 F1                10289 	pop	af
   3623 F1                10290 	pop	af
                          10291 ;demo.c:1488: drawstr2x("   IS OUR",0,84);
   3624 21 00 54          10292 	ld	hl,#0x5400
   3627 E5                10293 	push	hl
   3628 21rD3s38          10294 	ld	hl,#__str_20
   362B E5                10295 	push	hl
   362C CDr78s11          10296 	call	_drawstr2x
   362F F1                10297 	pop	af
   3630 F1                10298 	pop	af
                          10299 ;demo.c:1489: drawstr2x("  PARTY",12,124);
   3631 21 0C 7C          10300 	ld	hl,#0x7C0C
   3634 E5                10301 	push	hl
   3635 21rDDs38          10302 	ld	hl,#__str_21
   3638 E5                10303 	push	hl
   3639 CDr78s11          10304 	call	_drawstr2x
   363C F1                10305 	pop	af
   363D F1                10306 	pop	af
   363E                   10307 00106$:
                          10308 ;demo.c:1492: if (ff >= 1600 && ff < 1700) {
   363E 3ArC2s41          10309 	ld	a,(#_ff+0)
   3641 D6 40             10310 	sub	a,#0x40
   3643 3ArC3s41          10311 	ld	a,(#_ff+1)
   3646 DE 06             10312 	sbc	a,#0x06
   3648 FAr6Fs36          10313 	jp	M,00108$
   364B 3ArC2s41          10314 	ld	a,(#_ff+0)
   364E D6 A4             10315 	sub	a,#0xA4
   3650 3ArC3s41          10316 	ld	a,(#_ff+1)
   3653 DE 06             10317 	sbc	a,#0x06
   3655 F2r6Fs36          10318 	jp	P,00108$
                          10319 ;demo.c:1493: slowend = 37;
   3658 21rC0s41          10320 	ld	hl,#_slowend + 0
   365B 36 25             10321 	ld	(hl), #0x25
   365D 21rC1s41          10322 	ld	hl,#_slowend + 1
   3660 36 00             10323 	ld	(hl), #0x00
                          10324 ;demo.c:1494: drawstrslow("Give a big hand to all the organizers",28,164+6);
   3662 21 1C AA          10325 	ld	hl,#0xAA1C
   3665 E5                10326 	push	hl
   3666 21rE5s38          10327 	ld	hl,#__str_22
   3669 E5                10328 	push	hl
   366A CDrDAs10          10329 	call	_drawstrslow
   366D F1                10330 	pop	af
   366E F1                10331 	pop	af
   366F                   10332 00108$:
                          10333 ;demo.c:1497: if (ff == 1700) {
   366F 3ArC2s41          10334 	ld	a,(#_ff+0)
   3672 D6 A4             10335 	sub	a,#0xA4
   3674 20 07             10336 	jr	NZ,00201$
   3676 3ArC3s41          10337 	ld	a,(#_ff+1)
   3679 D6 06             10338 	sub	a,#0x06
   367B 28 02             10339 	jr	Z,00202$
   367D                   10340 00201$:
   367D 18 0A             10341 	jr	00111$
   367F                   10342 00202$:
                          10343 ;demo.c:1498: ltrpointer = 0;
   367F 21rBEs41          10344 	ld	hl,#_ltrpointer + 0
   3682 36 00             10345 	ld	(hl), #0x00
   3684 21rBFs41          10346 	ld	hl,#_ltrpointer + 1
   3687 36 00             10347 	ld	(hl), #0x00
   3689                   10348 00111$:
                          10349 ;demo.c:1501: if (ff > 1700 && ff < 1800) {
   3689 3E A4             10350 	ld	a,#0xA4
   368B FD 21rC2s41       10351 	ld	iy,#_ff
   368F FD 96 00          10352 	sub	a,0 (iy)
   3692 3E 06             10353 	ld	a,#0x06
   3694 FD 21rC2s41       10354 	ld	iy,#_ff
   3698 FD 9E 01          10355 	sbc	a,1 (iy)
   369B F2rC2s36          10356 	jp	P,00113$
   369E 3ArC2s41          10357 	ld	a,(#_ff+0)
   36A1 D6 08             10358 	sub	a,#0x08
   36A3 3ArC3s41          10359 	ld	a,(#_ff+1)
   36A6 DE 07             10360 	sbc	a,#0x07
   36A8 F2rC2s36          10361 	jp	P,00113$
                          10362 ;demo.c:1502: slowend = 21;
   36AB 21rC0s41          10363 	ld	hl,#_slowend + 0
   36AE 36 15             10364 	ld	(hl), #0x15
   36B0 21rC1s41          10365 	ld	hl,#_slowend + 1
   36B3 36 00             10366 	ld	(hl), #0x00
                          10367 ;demo.c:1503: drawstrslow("of this amazing party",64,164+16);
   36B5 21 40 B4          10368 	ld	hl,#0xB440
   36B8 E5                10369 	push	hl
   36B9 21r0Bs39          10370 	ld	hl,#__str_23
   36BC E5                10371 	push	hl
   36BD CDrDAs10          10372 	call	_drawstrslow
   36C0 F1                10373 	pop	af
   36C1 F1                10374 	pop	af
   36C2                   10375 00113$:
                          10376 ;demo.c:1506: if (ff >= 1900 && ff < 3890) {
   36C2 3ArC2s41          10377 	ld	a,(#_ff+0)
   36C5 D6 6C             10378 	sub	a,#0x6C
   36C7 3ArC3s41          10379 	ld	a,(#_ff+1)
   36CA DE 07             10380 	sbc	a,#0x07
   36CC FArF0s37          10381 	jp	M,00116$
   36CF 3ArC2s41          10382 	ld	a,(#_ff+0)
   36D2 D6 32             10383 	sub	a,#0x32
   36D4 3ArC3s41          10384 	ld	a,(#_ff+1)
   36D7 DE 0F             10385 	sbc	a,#0x0F
   36D9 F2rF0s37          10386 	jp	P,00116$
                          10387 ;demo.c:1507: cmd.size_x = 1;
   36DC 21r32s41          10388 	ld	hl, #_cmd + 8
   36DF 36 01             10389 	ld	(hl),#0x01
   36E1 23                10390 	inc	hl
   36E2 36 00             10391 	ld	(hl),#0x00
                          10392 ;demo.c:1508: cmd.size_y = 17;
   36E4 21r34s41          10393 	ld	hl, #_cmd + 10
   36E7 36 11             10394 	ld	(hl),#0x11
   36E9 23                10395 	inc	hl
   36EA 36 00             10396 	ld	(hl),#0x00
                          10397 ;demo.c:1509: cmd.data = 0;
                          10398 ;demo.c:1510: cmd.argument = 0x00; // from 70xY to left
   36EC 3E 00             10399 	ld	a,#0x00
   36EE 32r36s41          10400 	ld	(#_cmd + 12),a
   36F1 32r37s41          10401 	ld	(#_cmd + 13),a
                          10402 ;demo.c:1511: cmd.command = 0xd0; // vram to vram, y only
   36F4 3E D0             10403 	ld	a,#0xD0
   36F6 32r38s41          10404 	ld	(#_cmd + 14),a
                          10405 ;demo.c:1512: cmd.source_x = 128+20*(((ff-1901)>>3) % 6);
   36F9 3ArC2s41          10406 	ld	a,(#_ff+0)
   36FC C6 93             10407 	add	a,#0x93
   36FE 4F                10408 	ld	c,a
   36FF 3ArC3s41          10409 	ld	a,(#_ff+1)
   3702 CE F8             10410 	adc	a,#0xF8
   3704 47                10411 	ld	b,a
   3705 CB 28             10412 	sra	b
   3707 CB 19             10413 	rr	c
   3709 CB 28             10414 	sra	b
   370B CB 19             10415 	rr	c
   370D CB 28             10416 	sra	b
   370F CB 19             10417 	rr	c
   3711 21 06 00          10418 	ld	hl,#0x0006
   3714 E5                10419 	push	hl
   3715 C5                10420 	push	bc
   3716 CDr00s00          10421 	call	__modsint_rrx_s
   3719 F1                10422 	pop	af
   371A F1                10423 	pop	af
   371B 44                10424 	ld	b,h
   371C 4D                10425 	ld	c,l
   371D 59                10426 	ld	e,c
   371E 50                10427 	ld	d,b
   371F 6B                10428 	ld	l,e
   3720 62                10429 	ld	h,d
   3721 29                10430 	add	hl,hl
   3722 29                10431 	add	hl,hl
   3723 19                10432 	add	hl,de
   3724 29                10433 	add	hl,hl
   3725 29                10434 	add	hl,hl
   3726 01 80 00          10435 	ld	bc,#0x0080
   3729 09                10436 	add	hl,bc
   372A 4D                10437 	ld	c,l
   372B 44                10438 	ld	b,h
   372C 21r2As41          10439 	ld	hl,#_cmd
   372F 71                10440 	ld	(hl),c
   3730 23                10441 	inc	hl
   3731 70                10442 	ld	(hl),b
                          10443 ;demo.c:1513: cmd.source_y = 768+30;
   3732 21r2Cs41          10444 	ld	hl, #_cmd + 2
   3735 36 1E             10445 	ld	(hl),#0x1E
   3737 23                10446 	inc	hl
   3738 36 03             10447 	ld	(hl),#0x03
                          10448 ;demo.c:1514: cmd.dest_x = (255)-((ff-1900)>>3);
   373A 01r2Es41          10449 	ld	bc,#_cmd + 4
   373D 3ArC2s41          10450 	ld	a,(#_ff+0)
   3740 C6 94             10451 	add	a,#0x94
   3742 5F                10452 	ld	e,a
   3743 3ArC3s41          10453 	ld	a,(#_ff+1)
   3746 CE F8             10454 	adc	a,#0xF8
   3748 57                10455 	ld	d,a
   3749 CB 2A             10456 	sra	d
   374B CB 1B             10457 	rr	e
   374D CB 2A             10458 	sra	d
   374F CB 1B             10459 	rr	e
   3751 CB 2A             10460 	sra	d
   3753 CB 1B             10461 	rr	e
   3755 3E FF             10462 	ld	a,#0xFF
   3757 93                10463 	sub	a,e
   3758 5F                10464 	ld	e,a
   3759 3E 00             10465 	ld	a,#0x00
   375B 9A                10466 	sbc	a,d
   375C 57                10467 	ld	d,a
   375D 69                10468 	ld	l,c
   375E 60                10469 	ld	h,b
   375F 73                10470 	ld	(hl),e
   3760 23                10471 	inc	hl
   3761 72                10472 	ld	(hl),d
                          10473 ;demo.c:1515: cmd.dest_y = 12;
   3762 21r30s41          10474 	ld	hl, #_cmd + 6
   3765 36 0C             10475 	ld	(hl),#0x0C
   3767 23                10476 	inc	hl
   3768 36 00             10477 	ld	(hl),#0x00
                          10478 ;demo.c:1516: vdp_copier(&cmd);
   376A 21r2As41          10479 	ld	hl,#_cmd
   376D E5                10480 	push	hl
   376E CDr00s00          10481 	call	_vdp_copier
   3771 F1                10482 	pop	af
                          10483 ;demo.c:1519: cmd.size_x = 20;
   3772 21r32s41          10484 	ld	hl, #_cmd + 8
   3775 36 14             10485 	ld	(hl),#0x14
   3777 23                10486 	inc	hl
   3778 36 00             10487 	ld	(hl),#0x00
                          10488 ;demo.c:1520: cmd.size_y = 17;
   377A 21r34s41          10489 	ld	hl, #_cmd + 10
   377D 36 11             10490 	ld	(hl),#0x11
   377F 23                10491 	inc	hl
   3780 36 00             10492 	ld	(hl),#0x00
                          10493 ;demo.c:1521: cmd.data = 0;
                          10494 ;demo.c:1522: cmd.argument = 0x00; // from 70xY to left
   3782 3E 00             10495 	ld	a,#0x00
   3784 32r36s41          10496 	ld	(#_cmd + 12),a
   3787 32r37s41          10497 	ld	(#_cmd + 13),a
                          10498 ;demo.c:1523: cmd.command = 0xd0; // vram to vram, y only
   378A 3E D0             10499 	ld	a,#0xD0
   378C 32r38s41          10500 	ld	(#_cmd + 14),a
                          10501 ;demo.c:1524: cmd.source_x = 128+20*(((ff-1900)>>3) % 6);
   378F 3ArC2s41          10502 	ld	a,(#_ff+0)
   3792 C6 94             10503 	add	a,#0x94
   3794 4F                10504 	ld	c,a
   3795 3ArC3s41          10505 	ld	a,(#_ff+1)
   3798 CE F8             10506 	adc	a,#0xF8
   379A 47                10507 	ld	b,a
   379B CB 28             10508 	sra	b
   379D CB 19             10509 	rr	c
   379F CB 28             10510 	sra	b
   37A1 CB 19             10511 	rr	c
   37A3 CB 28             10512 	sra	b
   37A5 CB 19             10513 	rr	c
   37A7 C5                10514 	push	bc
   37A8 21 06 00          10515 	ld	hl,#0x0006
   37AB E5                10516 	push	hl
   37AC C5                10517 	push	bc
   37AD CDr00s00          10518 	call	__modsint_rrx_s
   37B0 F1                10519 	pop	af
   37B1 F1                10520 	pop	af
   37B2 EB                10521 	ex	de,hl
   37B3 C1                10522 	pop	bc
   37B4 6B                10523 	ld	l,e
   37B5 62                10524 	ld	h,d
   37B6 29                10525 	add	hl,hl
   37B7 29                10526 	add	hl,hl
   37B8 19                10527 	add	hl,de
   37B9 29                10528 	add	hl,hl
   37BA 29                10529 	add	hl,hl
   37BB EB                10530 	ex	de,hl
   37BC 21 80 00          10531 	ld	hl,#0x0080
   37BF 19                10532 	add	hl,de
   37C0 EB                10533 	ex	de,hl
   37C1 21r2As41          10534 	ld	hl,#_cmd
   37C4 73                10535 	ld	(hl),e
   37C5 23                10536 	inc	hl
   37C6 72                10537 	ld	(hl),d
                          10538 ;demo.c:1525: cmd.source_y = 768;
   37C7 11r2Cs41          10539 	ld	de,#_cmd + 2
   37CA EB                10540 	ex	de,hl
   37CB 36 00             10541 	ld	(hl),#0x00
   37CD 23                10542 	inc	hl
   37CE 36 03             10543 	ld	(hl),#0x03
                          10544 ;demo.c:1526: cmd.dest_x = (256-20)-((ff-1900)>>3);
   37D0 11r2Es41          10545 	ld	de,#_cmd + 4
   37D3 3E EC             10546 	ld	a,#0xEC
   37D5 91                10547 	sub	a,c
   37D6 4F                10548 	ld	c,a
   37D7 3E 00             10549 	ld	a,#0x00
   37D9 98                10550 	sbc	a,b
   37DA 47                10551 	ld	b,a
   37DB 6B                10552 	ld	l,e
   37DC 62                10553 	ld	h,d
   37DD 71                10554 	ld	(hl),c
   37DE 23                10555 	inc	hl
   37DF 70                10556 	ld	(hl),b
                          10557 ;demo.c:1527: cmd.dest_y = 12;
   37E0 21r30s41          10558 	ld	hl, #_cmd + 6
   37E3 36 0C             10559 	ld	(hl),#0x0C
   37E5 23                10560 	inc	hl
   37E6 36 00             10561 	ld	(hl),#0x00
                          10562 ;demo.c:1528: vdp_copier(&cmd);
   37E8 21r2As41          10563 	ld	hl,#_cmd
   37EB E5                10564 	push	hl
   37EC CDr00s00          10565 	call	_vdp_copier
   37EF F1                10566 	pop	af
   37F0                   10567 00116$:
                          10568 ;demo.c:1533: if (ff == 2700) {
   37F0 3ArC2s41          10569 	ld	a,(#_ff+0)
   37F3 D6 8C             10570 	sub	a,#0x8C
   37F5 20 07             10571 	jr	NZ,00206$
   37F7 3ArC3s41          10572 	ld	a,(#_ff+1)
   37FA D6 0A             10573 	sub	a,#0x0A
   37FC 28 02             10574 	jr	Z,00207$
   37FE                   10575 00206$:
   37FE 18 0A             10576 	jr	00119$
   3800                   10577 00207$:
                          10578 ;demo.c:1534: ltrpointer = 0;
   3800 21rBEs41          10579 	ld	hl,#_ltrpointer + 0
   3803 36 00             10580 	ld	(hl), #0x00
   3805 21rBFs41          10581 	ld	hl,#_ltrpointer + 1
   3808 36 00             10582 	ld	(hl), #0x00
   380A                   10583 00119$:
                          10584 ;demo.c:1537: if (ff > 2700 && ff < 2800) {
   380A 3E 8C             10585 	ld	a,#0x8C
   380C FD 21rC2s41       10586 	ld	iy,#_ff
   3810 FD 96 00          10587 	sub	a,0 (iy)
   3813 3E 0A             10588 	ld	a,#0x0A
   3815 FD 21rC2s41       10589 	ld	iy,#_ff
   3819 FD 9E 01          10590 	sbc	a,1 (iy)
   381C F2r43s38          10591 	jp	P,00121$
   381F 3ArC2s41          10592 	ld	a,(#_ff+0)
   3822 D6 F0             10593 	sub	a,#0xF0
   3824 3ArC3s41          10594 	ld	a,(#_ff+1)
   3827 DE 0A             10595 	sbc	a,#0x0A
   3829 F2r43s38          10596 	jp	P,00121$
                          10597 ;demo.c:1538: slowend = 21;
   382C 21rC0s41          10598 	ld	hl,#_slowend + 0
   382F 36 15             10599 	ld	(hl), #0x15
   3831 21rC1s41          10600 	ld	hl,#_slowend + 1
   3834 36 00             10601 	ld	(hl), #0x00
                          10602 ;demo.c:1539: drawstrslow("Digital Sounds System",0,0);
   3836 21 00 00          10603 	ld	hl,#0x0000
   3839 E5                10604 	push	hl
   383A 21r21s39          10605 	ld	hl,#__str_24
   383D E5                10606 	push	hl
   383E CDrDAs10          10607 	call	_drawstrslow
   3841 F1                10608 	pop	af
   3842 F1                10609 	pop	af
   3843                   10610 00121$:
                          10611 ;demo.c:1542: if (ff == 3200) {
   3843 3ArC2s41          10612 	ld	a,(#_ff+0)
   3846 D6 80             10613 	sub	a,#0x80
   3848 20 07             10614 	jr	NZ,00208$
   384A 3ArC3s41          10615 	ld	a,(#_ff+1)
   384D D6 0C             10616 	sub	a,#0x0C
   384F 28 02             10617 	jr	Z,00209$
   3851                   10618 00208$:
   3851 18 0A             10619 	jr	00124$
   3853                   10620 00209$:
                          10621 ;demo.c:1543: ltrpointer = 0;
   3853 21rBEs41          10622 	ld	hl,#_ltrpointer + 0
   3856 36 00             10623 	ld	(hl), #0x00
   3858 21rBFs41          10624 	ld	hl,#_ltrpointer + 1
   385B 36 00             10625 	ld	(hl), #0x00
   385D                   10626 00124$:
                          10627 ;demo.c:1546: if (ff > 3200 && ff < 3400) {
   385D 3E 80             10628 	ld	a,#0x80
   385F FD 21rC2s41       10629 	ld	iy,#_ff
   3863 FD 96 00          10630 	sub	a,0 (iy)
   3866 3E 0C             10631 	ld	a,#0x0C
   3868 FD 21rC2s41       10632 	ld	iy,#_ff
   386C FD 9E 01          10633 	sbc	a,1 (iy)
   386F F2r96s38          10634 	jp	P,00152$
   3872 3ArC2s41          10635 	ld	a,(#_ff+0)
   3875 D6 48             10636 	sub	a,#0x48
   3877 3ArC3s41          10637 	ld	a,(#_ff+1)
   387A DE 0D             10638 	sbc	a,#0x0D
   387C F2r96s38          10639 	jp	P,00152$
                          10640 ;demo.c:1547: slowend = 19;
   387F 21rC0s41          10641 	ld	hl,#_slowend + 0
   3882 36 13             10642 	ld	(hl), #0x13
   3884 21rC1s41          10643 	ld	hl,#_slowend + 1
   3887 36 00             10644 	ld	(hl), #0x00
                          10645 ;demo.c:1548: drawstrslow("mew mew mew miu mou",134,0);
   3889 21 86 00          10646 	ld	hl,#0x0086
   388C E5                10647 	push	hl
   388D 21r37s39          10648 	ld	hl,#__str_25
   3890 E5                10649 	push	hl
   3891 CDrDAs10          10650 	call	_drawstrslow
   3894 F1                10651 	pop	af
   3895 F1                10652 	pop	af
   3896                   10653 00152$:
   3896 DD F9             10654 	ld	sp,ix
   3898 DD E1             10655 	pop	ix
   389A C9                10656 	ret
   389B                   10657 _bigtext_end::
   389B                   10658 __str_13:
   389B 44 49 47 49 54 41 10659 	.ascii "DIGITAL"
        4C
   38A2 00                10660 	.db 0x00
   38A3                   10661 __str_14:
   38A3 53 4F 55 4E 44 53 10662 	.ascii "SOUNDS"
   38A9 00                10663 	.db 0x00
   38AA                   10664 __str_15:
   38AA 53 59 53 54 45 4D 10665 	.ascii "SYSTEM"
   38B0 00                10666 	.db 0x00
   38B1                   10667 __str_16:
   38B1 43 4F 4D 4D 41 4E 10668 	.ascii "COMMAND"
        44
   38B8 00                10669 	.db 0x00
   38B9                   10670 __str_17:
   38B9 20 20 20 54 48 45 10671 	.ascii "   THE  "
        20 20
   38C1 00                10672 	.db 0x00
   38C2                   10673 __str_18:
   38C2 20 20 42 41 53 53 10674 	.ascii "  BASS "
        20
   38C9 00                10675 	.db 0x00
   38CA                   10676 __str_19:
   38CA 52 45 56 49 53 49 10677 	.ascii "REVISION"
        4F 4E
   38D2 00                10678 	.db 0x00
   38D3                   10679 __str_20:
   38D3 20 20 20 49 53 20 10680 	.ascii "   IS OUR"
        4F 55 52
   38DC 00                10681 	.db 0x00
   38DD                   10682 __str_21:
   38DD 20 20 50 41 52 54 10683 	.ascii "  PARTY"
        59
   38E4 00                10684 	.db 0x00
   38E5                   10685 __str_22:
   38E5 47 69 76 65 20 61 10686 	.ascii "Give a big hand to all the organizers"
        20 62 69 67 20 68
        61 6E 64 20 74 6F
        20 61 6C 6C 20 74
        68 65 20 6F 72 67
        61 6E 69 7A 65 72
        73
   390A 00                10687 	.db 0x00
   390B                   10688 __str_23:
   390B 6F 66 20 74 68 69 10689 	.ascii "of this amazing party"
        73 20 61 6D 61 7A
        69 6E 67 20 70 61
        72 74 79
   3920 00                10690 	.db 0x00
   3921                   10691 __str_24:
   3921 44 69 67 69 74 61 10692 	.ascii "Digital Sounds System"
        6C 20 53 6F 75 6E
        64 73 20 53 79 73
        74 65 6D
   3936 00                10693 	.db 0x00
   3937                   10694 __str_25:
   3937 6D 65 77 20 6D 65 10695 	.ascii "mew mew mew miu mou"
        77 20 6D 65 77 20
        6D 69 75 20 6D 6F
        75
   394A 00                10696 	.db 0x00
                          10697 ;demo.c:1553: void waiter() {
                          10698 ;	---------------------------------
                          10699 ; Function waiter
                          10700 ; ---------------------------------
   394B                   10701 _waiter_start::
   394B                   10702 _waiter:
                          10703 ;demo.c:1555: }
   394B C9                10704 	ret
   394C                   10705 _waiter_end::
                          10706 ;demo.c:1564: void credits() {
                          10707 ;	---------------------------------
                          10708 ; Function credits
                          10709 ; ---------------------------------
   394C                   10710 _credits_start::
   394C                   10711 _credits:
   394C DD E5             10712 	push	ix
   394E DD 21 00 00       10713 	ld	ix,#0
   3952 DD 39             10714 	add	ix,sp
   3954 21 FA FF          10715 	ld	hl,#-6
   3957 39                10716 	add	hl,sp
   3958 F9                10717 	ld	sp,hl
                          10718 ;demo.c:1570: if (initcredits == 0) {
   3959 3Ar36s42          10719 	ld	a,(#_initcredits+0)
   395C 21r37s42          10720 	ld	hl,#_initcredits + 1
   395F B6                10721 	or	a,(hl)
   3960 C2r8Es3A          10722 	jp	NZ,00102$
                          10723 ;demo.c:1571: scratch_clear();
   3963 CDr24s08          10724 	call	_scratch_clear
                          10725 ;demo.c:1572: vdp_load_palette(scratch);
   3966 21rC6s3F          10726 	ld	hl,#_scratch
   3969 E5                10727 	push	hl
   396A CDr00s00          10728 	call	_vdp_load_palette
   396D F1                10729 	pop	af
                          10730 ;demo.c:1574: vdp_register(0,8); // mode 512x212
   396E 21 00 08          10731 	ld	hl,#0x0800
   3971 E5                10732 	push	hl
   3972 CDr00s00          10733 	call	_vdp_register
   3975 F1                10734 	pop	af
                          10735 ;demo.c:1575: vdp_register(9,130); // 50hz,192
   3976 21 09 82          10736 	ld	hl,#0x8209
   3979 E5                10737 	push	hl
   397A CDr00s00          10738 	call	_vdp_register
   397D F1                10739 	pop	af
                          10740 ;demo.c:1577: uninstall_isr();
   397E CDr00s00          10741 	call	_uninstall_isr
                          10742 ;demo.c:1578: PLY_Stop();
   3981 CDr00s00          10743 	call	_PLY_Stop
                          10744 ;demo.c:1579: PLY_SendRegisters();
   3984 CDr00s00          10745 	call	_PLY_SendRegisters
                          10746 ;demo.c:1581: initcredits = 1;
   3987 21r36s42          10747 	ld	hl,#_initcredits + 0
   398A 36 01             10748 	ld	(hl), #0x01
   398C 21r37s42          10749 	ld	hl,#_initcredits + 1
   398F 36 00             10750 	ld	(hl), #0x00
                          10751 ;demo.c:1583: bitbuster(crebuffer2,0x0000,VRAM_0);
   3991 3E 01             10752 	ld	a,#0x01
   3993 F5                10753 	push	af
   3994 33                10754 	inc	sp
   3995 21 00 00          10755 	ld	hl,#0x0000
   3998 E5                10756 	push	hl
   3999 21rC7s1E          10757 	ld	hl,#_crebuffer2
   399C E5                10758 	push	hl
   399D CDr00s00          10759 	call	_bitbuster
   39A0 F1                10760 	pop	af
   39A1 F1                10761 	pop	af
   39A2 33                10762 	inc	sp
                          10763 ;demo.c:1585: cmd.size_x = 512;
   39A3 21r32s41          10764 	ld	hl, #_cmd + 8
   39A6 36 00             10765 	ld	(hl),#0x00
   39A8 23                10766 	inc	hl
   39A9 36 02             10767 	ld	(hl),#0x02
                          10768 ;demo.c:1586: cmd.size_y = 212;
   39AB 21r34s41          10769 	ld	hl, #_cmd + 10
   39AE 36 D4             10770 	ld	(hl),#0xD4
   39B0 23                10771 	inc	hl
   39B1 36 00             10772 	ld	(hl),#0x00
                          10773 ;demo.c:1587: cmd.data = 0;
                          10774 ;demo.c:1588: cmd.argument = 0x00;
   39B3 3E 00             10775 	ld	a,#0x00
   39B5 32r36s41          10776 	ld	(#_cmd + 12),a
   39B8 32r37s41          10777 	ld	(#_cmd + 13),a
                          10778 ;demo.c:1589: cmd.command = 0xd0; 
   39BB 01r38s41          10779 	ld	bc,#_cmd + 14
   39BE 3E D0             10780 	ld	a,#0xD0
   39C0 02                10781 	ld	(bc),a
                          10782 ;demo.c:1590: cmd.source_x = 0;
   39C1 21r2As41          10783 	ld	hl,#_cmd
   39C4 36 00             10784 	ld	(hl),#0x00
   39C6 23                10785 	inc	hl
   39C7 36 00             10786 	ld	(hl),#0x00
                          10787 ;demo.c:1591: cmd.source_y = 0;
   39C9 21r2Cs41          10788 	ld	hl, #_cmd + 2
   39CC 36 00             10789 	ld	(hl),#0x00
   39CE 23                10790 	inc	hl
   39CF 36 00             10791 	ld	(hl),#0x00
                          10792 ;demo.c:1592: cmd.dest_x = 0;
   39D1 21r2Es41          10793 	ld	hl, #_cmd + 4
   39D4 36 00             10794 	ld	(hl),#0x00
   39D6 23                10795 	inc	hl
   39D7 36 00             10796 	ld	(hl),#0x00
                          10797 ;demo.c:1593: cmd.dest_y = 256;
   39D9 21r30s41          10798 	ld	hl, #_cmd + 6
   39DC 36 00             10799 	ld	(hl),#0x00
   39DE 23                10800 	inc	hl
   39DF 36 01             10801 	ld	(hl),#0x01
                          10802 ;demo.c:1594: vdp_copier(&cmd);
   39E1 21r2As41          10803 	ld	hl,#_cmd
   39E4 E5                10804 	push	hl
   39E5 CDr00s00          10805 	call	_vdp_copier
   39E8 F1                10806 	pop	af
                          10807 ;demo.c:1596: bitbuster(crebuffer3,0x0000,VRAM_0);
   39E9 3E 01             10808 	ld	a,#0x01
   39EB F5                10809 	push	af
   39EC 33                10810 	inc	sp
   39ED 21 00 00          10811 	ld	hl,#0x0000
   39F0 E5                10812 	push	hl
   39F1 21r3Bs31          10813 	ld	hl,#_crebuffer3
   39F4 E5                10814 	push	hl
   39F5 CDr00s00          10815 	call	_bitbuster
   39F8 F1                10816 	pop	af
   39F9 F1                10817 	pop	af
   39FA 33                10818 	inc	sp
                          10819 ;demo.c:1598: cmd.size_x = 512;
   39FB 21r32s41          10820 	ld	hl, #_cmd + 8
   39FE 36 00             10821 	ld	(hl),#0x00
   3A00 23                10822 	inc	hl
   3A01 36 02             10823 	ld	(hl),#0x02
                          10824 ;demo.c:1599: cmd.size_y = 212;
   3A03 21r34s41          10825 	ld	hl, #_cmd + 10
   3A06 36 D4             10826 	ld	(hl),#0xD4
   3A08 23                10827 	inc	hl
   3A09 36 00             10828 	ld	(hl),#0x00
                          10829 ;demo.c:1600: cmd.data = 0;
                          10830 ;demo.c:1601: cmd.argument = 0x00;
   3A0B 3E 00             10831 	ld	a,#0x00
   3A0D 32r36s41          10832 	ld	(#_cmd + 12),a
   3A10 32r37s41          10833 	ld	(#_cmd + 13),a
                          10834 ;demo.c:1602: cmd.command = 0xd0; 
   3A13 01r38s41          10835 	ld	bc,#_cmd + 14
   3A16 3E D0             10836 	ld	a,#0xD0
   3A18 02                10837 	ld	(bc),a
                          10838 ;demo.c:1603: cmd.source_x = 0;
   3A19 21r2As41          10839 	ld	hl,#_cmd
   3A1C 36 00             10840 	ld	(hl),#0x00
   3A1E 23                10841 	inc	hl
   3A1F 36 00             10842 	ld	(hl),#0x00
                          10843 ;demo.c:1604: cmd.source_y = 0;
   3A21 21r2Cs41          10844 	ld	hl, #_cmd + 2
   3A24 36 00             10845 	ld	(hl),#0x00
   3A26 23                10846 	inc	hl
   3A27 36 00             10847 	ld	(hl),#0x00
                          10848 ;demo.c:1605: cmd.dest_x = 0;
   3A29 21r2Es41          10849 	ld	hl, #_cmd + 4
   3A2C 36 00             10850 	ld	(hl),#0x00
   3A2E 23                10851 	inc	hl
   3A2F 36 00             10852 	ld	(hl),#0x00
                          10853 ;demo.c:1606: cmd.dest_y = 512;
   3A31 21r30s41          10854 	ld	hl, #_cmd + 6
   3A34 36 00             10855 	ld	(hl),#0x00
   3A36 23                10856 	inc	hl
   3A37 36 02             10857 	ld	(hl),#0x02
                          10858 ;demo.c:1607: vdp_copier(&cmd);
   3A39 21r2As41          10859 	ld	hl,#_cmd
   3A3C E5                10860 	push	hl
   3A3D CDr00s00          10861 	call	_vdp_copier
   3A40 F1                10862 	pop	af
                          10863 ;demo.c:1609: bitbuster(crebuffer1,0x0000,VRAM_0);
   3A41 3E 01             10864 	ld	a,#0x01
   3A43 F5                10865 	push	af
   3A44 33                10866 	inc	sp
   3A45 21 00 00          10867 	ld	hl,#0x0000
   3A48 E5                10868 	push	hl
   3A49 21rCCs11          10869 	ld	hl,#_crebuffer1
   3A4C E5                10870 	push	hl
   3A4D CDr00s00          10871 	call	_bitbuster
   3A50 F1                10872 	pop	af
   3A51 F1                10873 	pop	af
   3A52 33                10874 	inc	sp
                          10875 ;demo.c:1611: install_isr(my_isr);
   3A53 21rECs07          10876 	ld	hl,#_my_isr
   3A56 E5                10877 	push	hl
   3A57 CDr00s00          10878 	call	_install_isr
   3A5A F1                10879 	pop	af
                          10880 ;demo.c:1613: memcpy(cur_palette, credits_palette, 32);
   3A5B 21 20 00          10881 	ld	hl,#0x0020
   3A5E E5                10882 	push	hl
   3A5F 21r06s41          10883 	ld	hl,#_credits_palette
   3A62 E5                10884 	push	hl
   3A63 21r46s40          10885 	ld	hl,#_cur_palette
   3A66 E5                10886 	push	hl
   3A67 CDr00s00          10887 	call	_memcpy
   3A6A F1                10888 	pop	af
   3A6B F1                10889 	pop	af
   3A6C F1                10890 	pop	af
                          10891 ;demo.c:1615: scratch_clear();
   3A6D CDr24s08          10892 	call	_scratch_clear
                          10893 ;demo.c:1616: pointframe = 0;
   3A70 21r30s42          10894 	ld	hl,#_pointframe + 0
   3A73 36 00             10895 	ld	(hl), #0x00
   3A75 21r31s42          10896 	ld	hl,#_pointframe + 1
   3A78 36 00             10897 	ld	(hl), #0x00
                          10898 ;demo.c:1617: curpage = 0;
   3A7A 21r3Es42          10899 	ld	hl,#_curpage + 0
   3A7D 36 00             10900 	ld	(hl), #0x00
   3A7F 21r3Fs42          10901 	ld	hl,#_curpage + 1
   3A82 36 00             10902 	ld	(hl), #0x00
                          10903 ;demo.c:1618: myoffs = 180;
   3A84 21r40s42          10904 	ld	hl,#_myoffs + 0
   3A87 36 B4             10905 	ld	(hl), #0xB4
   3A89 21r41s42          10906 	ld	hl,#_myoffs + 1
   3A8C 36 00             10907 	ld	(hl), #0x00
   3A8E                   10908 00102$:
                          10909 ;demo.c:1621: if (credittimer < 400) fadein();
   3A8E 3Ar38s42          10910 	ld	a,(#_credittimer+0)
   3A91 D6 90             10911 	sub	a,#0x90
   3A93 3Ar39s42          10912 	ld	a,(#_credittimer+1)
   3A96 DE 01             10913 	sbc	a,#0x01
   3A98 F2r9Es3A          10914 	jp	P,00104$
   3A9B CDrBBs0A          10915 	call	_fadein
   3A9E                   10916 00104$:
                          10917 ;demo.c:1623: if(credittimer >= 1000 && curpage == 0) { vdp_register(2, 0x3f); curpage = 256; myoffs = 100; }
   3A9E 3Ar38s42          10918 	ld	a,(#_credittimer+0)
   3AA1 D6 E8             10919 	sub	a,#0xE8
   3AA3 3Ar39s42          10920 	ld	a,(#_credittimer+1)
   3AA6 DE 03             10921 	sbc	a,#0x03
   3AA8 FArD0s3A          10922 	jp	M,00106$
   3AAB 3Ar3Es42          10923 	ld	a,(#_curpage+0)
   3AAE 21r3Fs42          10924 	ld	hl,#_curpage + 1
   3AB1 B6                10925 	or	a,(hl)
   3AB2 20 1C             10926 	jr	NZ,00106$
   3AB4 21 02 3F          10927 	ld	hl,#0x3F02
   3AB7 E5                10928 	push	hl
   3AB8 CDr00s00          10929 	call	_vdp_register
   3ABB F1                10930 	pop	af
   3ABC 21r3Es42          10931 	ld	hl,#_curpage + 0
   3ABF 36 00             10932 	ld	(hl), #0x00
   3AC1 21r3Fs42          10933 	ld	hl,#_curpage + 1
   3AC4 36 01             10934 	ld	(hl), #0x01
   3AC6 21r40s42          10935 	ld	hl,#_myoffs + 0
   3AC9 36 64             10936 	ld	(hl), #0x64
   3ACB 21r41s42          10937 	ld	hl,#_myoffs + 1
   3ACE 36 00             10938 	ld	(hl), #0x00
   3AD0                   10939 00106$:
                          10940 ;demo.c:1624: if(credittimer >= 1500 && curpage == 256) { vdp_register(2, 0x5f); curpage = 512; myoffs = 200; }
   3AD0 3Ar38s42          10941 	ld	a,(#_credittimer+0)
   3AD3 D6 DC             10942 	sub	a,#0xDC
   3AD5 3Ar39s42          10943 	ld	a,(#_credittimer+1)
   3AD8 DE 05             10944 	sbc	a,#0x05
   3ADA FAr08s3B          10945 	jp	M,00109$
   3ADD 3Ar3Es42          10946 	ld	a,(#_curpage+0)
   3AE0 B7                10947 	or	a,a
   3AE1 20 07             10948 	jr	NZ,00140$
   3AE3 3Ar3Fs42          10949 	ld	a,(#_curpage+1)
   3AE6 D6 01             10950 	sub	a,#0x01
   3AE8 28 02             10951 	jr	Z,00141$
   3AEA                   10952 00140$:
   3AEA 18 1C             10953 	jr	00109$
   3AEC                   10954 00141$:
   3AEC 21 02 5F          10955 	ld	hl,#0x5F02
   3AEF E5                10956 	push	hl
   3AF0 CDr00s00          10957 	call	_vdp_register
   3AF3 F1                10958 	pop	af
   3AF4 21r3Es42          10959 	ld	hl,#_curpage + 0
   3AF7 36 00             10960 	ld	(hl), #0x00
   3AF9 21r3Fs42          10961 	ld	hl,#_curpage + 1
   3AFC 36 02             10962 	ld	(hl), #0x02
   3AFE 21r40s42          10963 	ld	hl,#_myoffs + 0
   3B01 36 C8             10964 	ld	(hl), #0xC8
   3B03 21r41s42          10965 	ld	hl,#_myoffs + 1
   3B06 36 00             10966 	ld	(hl), #0x00
   3B08                   10967 00109$:
                          10968 ;demo.c:1626: credittimer+=3;
   3B08 21r38s42          10969 	ld	hl,#_credittimer
   3B0B 7E                10970 	ld	a,(hl)
   3B0C C6 03             10971 	add	a,#0x03
   3B0E 23                10972 	inc	hl
   3B0F 2B                10973 	dec	hl
   3B10 C5                10974 	push	bc
   3B11 4F                10975 	ld	c, a
   3B12 23                10976 	inc	hl
   3B13 7E                10977 	ld	a, (hl)
   3B14 47                10978 	ld	b, a
   3B15 79                10979 	ld	a, c
   3B16 2B                10980 	dec	hl
   3B17 77                10981 	ld	(hl), a
   3B18 78                10982 	ld	a, b
   3B19 C1                10983 	pop	bc
   3B1A CE 00             10984 	adc	a,#0x00
   3B1C 23                10985 	inc	hl
   3B1D 77                10986 	ld	(hl),a
                          10987 ;demo.c:1627: if (credittimer == 1500) {
   3B1E 3Ar38s42          10988 	ld	a,(#_credittimer+0)
   3B21 D6 DC             10989 	sub	a,#0xDC
   3B23 20 07             10990 	jr	NZ,00142$
   3B25 3Ar39s42          10991 	ld	a,(#_credittimer+1)
   3B28 D6 05             10992 	sub	a,#0x05
   3B2A 28 02             10993 	jr	Z,00143$
   3B2C                   10994 00142$:
   3B2C 18 08             10995 	jr	00112$
   3B2E                   10996 00143$:
                          10997 ;demo.c:1628: vdp_load_palette(scratch);
   3B2E 21rC6s3F          10998 	ld	hl,#_scratch
   3B31 E5                10999 	push	hl
   3B32 CDr00s00          11000 	call	_vdp_load_palette
   3B35 F1                11001 	pop	af
   3B36                   11002 00112$:
                          11003 ;demo.c:1631: if (credittimer >= 300 && credittimer < 700 && flipo < 211) {
   3B36 3Ar38s42          11004 	ld	a,(#_credittimer+0)
   3B39 D6 2C             11005 	sub	a,#0x2C
   3B3B 3Ar39s42          11006 	ld	a,(#_credittimer+1)
   3B3E DE 01             11007 	sbc	a,#0x01
   3B40 FArCCs3B          11008 	jp	M,00114$
   3B43 3Ar38s42          11009 	ld	a,(#_credittimer+0)
   3B46 D6 BC             11010 	sub	a,#0xBC
   3B48 3Ar39s42          11011 	ld	a,(#_credittimer+1)
   3B4B DE 02             11012 	sbc	a,#0x02
   3B4D F2rCCs3B          11013 	jp	P,00114$
   3B50 3Ar3Cs42          11014 	ld	a,(#_flipo+0)
   3B53 D6 D3             11015 	sub	a,#0xD3
   3B55 3Ar3Ds42          11016 	ld	a,(#_flipo+1)
   3B58 DE 00             11017 	sbc	a,#0x00
   3B5A F2rCCs3B          11018 	jp	P,00114$
                          11019 ;demo.c:1632: cmd.size_x = 64;
   3B5D 21r32s41          11020 	ld	hl, #_cmd + 8
   3B60 36 40             11021 	ld	(hl),#0x40
   3B62 23                11022 	inc	hl
   3B63 36 00             11023 	ld	(hl),#0x00
                          11024 ;demo.c:1633: cmd.size_y = 1;
   3B65 21r34s41          11025 	ld	hl, #_cmd + 10
   3B68 36 01             11026 	ld	(hl),#0x01
   3B6A 23                11027 	inc	hl
   3B6B 36 00             11028 	ld	(hl),#0x00
                          11029 ;demo.c:1634: cmd.data = 0;
                          11030 ;demo.c:1635: cmd.argument = 0x00; // from 70xY to left
   3B6D 3E 00             11031 	ld	a,#0x00
   3B6F 32r36s41          11032 	ld	(#_cmd + 12),a
   3B72 32r37s41          11033 	ld	(#_cmd + 13),a
                          11034 ;demo.c:1636: cmd.command = 0x93; // vram to vram, y only
   3B75 3E 93             11035 	ld	a,#0x93
   3B77 32r38s41          11036 	ld	(#_cmd + 14),a
                          11037 ;demo.c:1637: cmd.source_x = 0;
   3B7A 21r2As41          11038 	ld	hl,#_cmd
   3B7D 36 00             11039 	ld	(hl),#0x00
   3B7F 23                11040 	inc	hl
   3B80 36 00             11041 	ld	(hl),#0x00
                          11042 ;demo.c:1638: cmd.source_y = 211-flipo;
   3B82 01r2Cs41          11043 	ld	bc,#_cmd + 2
   3B85 21r3Cs42          11044 	ld	hl,#_flipo
   3B88 3E D3             11045 	ld	a,#0xD3
   3B8A 96                11046 	sub	a,(hl)
   3B8B 5F                11047 	ld	e,a
   3B8C 3E 00             11048 	ld	a,#0x00
   3B8E 23                11049 	inc	hl
   3B8F 9E                11050 	sbc	a,(hl)
   3B90 57                11051 	ld	d,a
   3B91 69                11052 	ld	l,c
   3B92 60                11053 	ld	h,b
   3B93 73                11054 	ld	(hl),e
   3B94 23                11055 	inc	hl
   3B95 72                11056 	ld	(hl),d
                          11057 ;demo.c:1640: cmd.dest_x = flipo;
   3B96 01r2Es41          11058 	ld	bc,#_cmd + 4
   3B99 ED 5Br3Cs42       11059 	ld	de,(_flipo)
   3B9D 69                11060 	ld	l,c
   3B9E 60                11061 	ld	h,b
   3B9F 73                11062 	ld	(hl),e
   3BA0 23                11063 	inc	hl
   3BA1 72                11064 	ld	(hl),d
                          11065 ;demo.c:1641: cmd.dest_y = flipo;
   3BA2 01r30s41          11066 	ld	bc,#_cmd + 6
   3BA5 ED 5Br3Cs42       11067 	ld	de,(_flipo)
   3BA9 69                11068 	ld	l,c
   3BAA 60                11069 	ld	h,b
   3BAB 73                11070 	ld	(hl),e
   3BAC 23                11071 	inc	hl
   3BAD 72                11072 	ld	(hl),d
                          11073 ;demo.c:1642: vdp_copier(&cmd);
   3BAE 21r2As41          11074 	ld	hl,#_cmd
   3BB1 E5                11075 	push	hl
   3BB2 CDr00s00          11076 	call	_vdp_copier
   3BB5 F1                11077 	pop	af
                          11078 ;demo.c:1643: flipo+=2;
   3BB6 21r3Cs42          11079 	ld	hl,#_flipo
   3BB9 7E                11080 	ld	a,(hl)
   3BBA C6 02             11081 	add	a,#0x02
   3BBC 23                11082 	inc	hl
   3BBD 2B                11083 	dec	hl
   3BBE C5                11084 	push	bc
   3BBF 4F                11085 	ld	c, a
   3BC0 23                11086 	inc	hl
   3BC1 7E                11087 	ld	a, (hl)
   3BC2 47                11088 	ld	b, a
   3BC3 79                11089 	ld	a, c
   3BC4 2B                11090 	dec	hl
   3BC5 77                11091 	ld	(hl), a
   3BC6 78                11092 	ld	a, b
   3BC7 C1                11093 	pop	bc
   3BC8 CE 00             11094 	adc	a,#0x00
   3BCA 23                11095 	inc	hl
   3BCB 77                11096 	ld	(hl),a
   3BCC                   11097 00114$:
                          11098 ;demo.c:1646: if (credittimer > 700) {
   3BCC 3E BC             11099 	ld	a,#0xBC
   3BCE FD 21r38s42       11100 	ld	iy,#_credittimer
   3BD2 FD 96 00          11101 	sub	a,0 (iy)
   3BD5 3E 02             11102 	ld	a,#0x02
   3BD7 FD 21r38s42       11103 	ld	iy,#_credittimer
   3BDB FD 9E 01          11104 	sbc	a,1 (iy)
   3BDE F2rE0s3C          11105 	jp	P,00118$
                          11106 ;demo.c:1647: msx2_palette(0,PLY_PSGReg10,PLY_PSGReg10,PLY_PSGReg10);
   3BE1 21r00s00          11107 	ld	hl,#_PLY_PSGReg10 + 0
   3BE4 4E                11108 	ld	c,(hl)
   3BE5 21r00s00          11109 	ld	hl,#_PLY_PSGReg10 + 0
   3BE8 46                11110 	ld	b,(hl)
   3BE9 21r00s00          11111 	ld	hl,#_PLY_PSGReg10 + 0
   3BEC 5E                11112 	ld	e,(hl)
   3BED 79                11113 	ld	a,c
   3BEE F5                11114 	push	af
   3BEF 33                11115 	inc	sp
   3BF0 C5                11116 	push	bc
   3BF1 33                11117 	inc	sp
   3BF2 53                11118 	ld	d,e
   3BF3 1E 00             11119 	ld	e,#0x00
   3BF5 D5                11120 	push	de
   3BF6 CDr00s00          11121 	call	_msx2_palette
   3BF9 F1                11122 	pop	af
   3BFA F1                11123 	pop	af
                          11124 ;demo.c:1649: cmd.size_x = 256;
   3BFB 21r32s41          11125 	ld	hl, #_cmd + 8
   3BFE 36 00             11126 	ld	(hl),#0x00
   3C00 23                11127 	inc	hl
   3C01 36 01             11128 	ld	(hl),#0x01
                          11129 ;demo.c:1650: cmd.size_y = 1;
   3C03 21r34s41          11130 	ld	hl, #_cmd + 10
   3C06 36 01             11131 	ld	(hl),#0x01
   3C08 23                11132 	inc	hl
   3C09 36 00             11133 	ld	(hl),#0x00
                          11134 ;demo.c:1651: cmd.data = 0;
   3C0B 01r36s41          11135 	ld	bc,#_cmd + 12
   3C0E 3E 00             11136 	ld	a,#0x00
   3C10 02                11137 	ld	(bc),a
                          11138 ;demo.c:1652: cmd.argument = 0x00; // from 70xY to left
   3C11 21r37s41          11139 	ld	hl,#_cmd + 13
   3C14 DD 75 FC          11140 	ld	-4 (ix),l
   3C17 DD 74 FD          11141 	ld	-3 (ix),h
   3C1A 36 00             11142 	ld	(hl),#0x00
                          11143 ;demo.c:1653: cmd.command = 0xd0; // vram to vram, y only
   3C1C 21r38s41          11144 	ld	hl,#_cmd + 14
   3C1F DD 75 FA          11145 	ld	-6 (ix),l
   3C22 DD 74 FB          11146 	ld	-5 (ix),h
   3C25 36 D0             11147 	ld	(hl),#0xD0
                          11148 ;demo.c:1654: cmd.source_x = 0;
   3C27 21r2As41          11149 	ld	hl,#_cmd
   3C2A 36 00             11150 	ld	(hl),#0x00
   3C2C 23                11151 	inc	hl
   3C2D 36 00             11152 	ld	(hl),#0x00
                          11153 ;demo.c:1655: cmd.dest_x = 0;
   3C2F 11r2Es41          11154 	ld	de,#_cmd + 4
   3C32 EB                11155 	ex	de,hl
   3C33 36 00             11156 	ld	(hl),#0x00
   3C35 23                11157 	inc	hl
   3C36 36 00             11158 	ld	(hl),#0x00
                          11159 ;demo.c:1656: cmd.argument = 0x0;
   3C38 DD 6E FC          11160 	ld	l,-4 (ix)
   3C3B DD 66 FD          11161 	ld	h,-3 (ix)
   3C3E 36 00             11162 	ld	(hl),#0x00
                          11163 ;demo.c:1658: cmd.data = 1+((pointframe>>2) & 0xe);
   3C40 21r30s42          11164 	ld	hl,#_pointframe + 0
   3C43 5E                11165 	ld	e,(hl)
   3C44 21r31s42          11166 	ld	hl,#_pointframe + 1
   3C47 56                11167 	ld	d,(hl)
   3C48 CB 2A             11168 	sra	d
   3C4A CB 1B             11169 	rr	e
   3C4C CB 2A             11170 	sra	d
   3C4E CB 1B             11171 	rr	e
   3C50 7B                11172 	ld	a,e
   3C51 E6 0E             11173 	and	a,#0x0E
   3C53 3C                11174 	inc	a
   3C54 02                11175 	ld	(bc),a
                          11176 ;demo.c:1659: cmd.command = 0x53;
   3C55 DD 6E FA          11177 	ld	l,-6 (ix)
   3C58 DD 66 FB          11178 	ld	h,-5 (ix)
   3C5B 36 53             11179 	ld	(hl),#0x53
                          11180 ;demo.c:1660: for (x = 0; x < 212; x+=1) {
   3C5D DD 36 FE 00       11181 	ld	-2 (ix),#0x00
   3C61 DD 36 FF 00       11182 	ld	-1 (ix),#0x00
   3C65                   11183 00120$:
   3C65 DD 7E FE          11184 	ld	a,-2 (ix)
   3C68 D6 D4             11185 	sub	a,#0xD4
   3C6A DD 7E FF          11186 	ld	a,-1 (ix)
   3C6D DE 00             11187 	sbc	a,#0x00
   3C6F F2rC8s3C          11188 	jp	P,00123$
                          11189 ;demo.c:1661: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   3C72 21r30s42          11190 	ld	hl,#_pointframe
   3C75 DD 7E FE          11191 	ld	a,-2 (ix)
   3C78 86                11192 	add	a,(hl)
   3C79 5F                11193 	ld	e,a
   3C7A DD 7E FF          11194 	ld	a,-1 (ix)
   3C7D 23                11195 	inc	hl
   3C7E 8E                11196 	adc	a,(hl)
   3C7F 16 00             11197 	ld	d,#0x00
   3C81 21r2Cs00          11198 	ld	hl,#_sintabx
   3C84 19                11199 	add	hl,de
   3C85 7E                11200 	ld	a,(hl)
   3C86 CB 3F             11201 	srl	a
   3C88 C6 40             11202 	add	a,#0x40
   3C8A 4F                11203 	ld	c,a
                          11204 ;demo.c:1662: cmd.dest_x = myoffs+y;
   3C8B 11r2Es41          11205 	ld	de,#_cmd + 4
   3C8E 06 00             11206 	ld	b,#0x00
   3C90 3Ar40s42          11207 	ld	a,(#_myoffs+0)
   3C93 81                11208 	add	a,c
   3C94 4F                11209 	ld	c,a
   3C95 3Ar41s42          11210 	ld	a,(#_myoffs+1)
   3C98 88                11211 	adc	a,b
   3C99 47                11212 	ld	b,a
   3C9A 6B                11213 	ld	l,e
   3C9B 62                11214 	ld	h,d
   3C9C 71                11215 	ld	(hl),c
   3C9D 23                11216 	inc	hl
   3C9E 70                11217 	ld	(hl),b
                          11218 ;demo.c:1663: cmd.dest_y = curpage+x;
   3C9F 01r30s41          11219 	ld	bc,#_cmd + 6
   3CA2 3Ar3Es42          11220 	ld	a,(#_curpage+0)
   3CA5 DD 86 FE          11221 	add	a,-2 (ix)
   3CA8 5F                11222 	ld	e,a
   3CA9 3Ar3Fs42          11223 	ld	a,(#_curpage+1)
   3CAC DD 8E FF          11224 	adc	a,-1 (ix)
   3CAF 57                11225 	ld	d,a
   3CB0 69                11226 	ld	l,c
   3CB1 60                11227 	ld	h,b
   3CB2 73                11228 	ld	(hl),e
   3CB3 23                11229 	inc	hl
   3CB4 72                11230 	ld	(hl),d
                          11231 ;demo.c:1664: vdp_copier(&cmd);
   3CB5 21r2As41          11232 	ld	hl,#_cmd
   3CB8 E5                11233 	push	hl
   3CB9 CDr00s00          11234 	call	_vdp_copier
   3CBC F1                11235 	pop	af
                          11236 ;demo.c:1660: for (x = 0; x < 212; x+=1) {
   3CBD DD 34 FE          11237 	inc	-2 (ix)
   3CC0 20 03             11238 	jr	NZ,00145$
   3CC2 DD 34 FF          11239 	inc	-1 (ix)
   3CC5                   11240 00145$:
   3CC5 C3r65s3C          11241 	jp	00120$
   3CC8                   11242 00123$:
                          11243 ;demo.c:1666: pointframe+=2;
   3CC8 21r30s42          11244 	ld	hl,#_pointframe
   3CCB 7E                11245 	ld	a,(hl)
   3CCC C6 02             11246 	add	a,#0x02
   3CCE 23                11247 	inc	hl
   3CCF 2B                11248 	dec	hl
   3CD0 C5                11249 	push	bc
   3CD1 4F                11250 	ld	c, a
   3CD2 23                11251 	inc	hl
   3CD3 7E                11252 	ld	a, (hl)
   3CD4 47                11253 	ld	b, a
   3CD5 79                11254 	ld	a, c
   3CD6 2B                11255 	dec	hl
   3CD7 77                11256 	ld	(hl), a
   3CD8 78                11257 	ld	a, b
   3CD9 C1                11258 	pop	bc
   3CDA CE 00             11259 	adc	a,#0x00
   3CDC 23                11260 	inc	hl
   3CDD 77                11261 	ld	(hl),a
   3CDE 18 0C             11262 	jr	00124$
   3CE0                   11263 00118$:
                          11264 ;demo.c:1669: msx2_palette(0,0,0,0);
   3CE0 21 00 00          11265 	ld	hl,#0x0000
   3CE3 E5                11266 	push	hl
   3CE4 2E 00             11267 	ld	l, #0x00
   3CE6 E5                11268 	push	hl
   3CE7 CDr00s00          11269 	call	_msx2_palette
   3CEA F1                11270 	pop	af
   3CEB F1                11271 	pop	af
   3CEC                   11272 00124$:
   3CEC DD F9             11273 	ld	sp,ix
   3CEE DD E1             11274 	pop	ix
   3CF0 C9                11275 	ret
   3CF1                   11276 _credits_end::
                          11277 ;demo.c:1678: void do_quit() {
                          11278 ;	---------------------------------
                          11279 ; Function do_quit
                          11280 ; ---------------------------------
   3CF1                   11281 _do_quit_start::
   3CF1                   11282 _do_quit:
                          11283 ;demo.c:1679: waitVB();
   3CF1 76                11284 		halt 
                          11285 ;demo.c:1680: uninstall_isr();
   3CF2 CDr00s00          11286 	call	_uninstall_isr
                          11287 ;demo.c:1681: PLY_Stop();
   3CF5 CDr00s00          11288 	call	_PLY_Stop
                          11289 ;demo.c:1682: PLY_SendRegisters();
   3CF8 CDr00s00          11290 	call	_PLY_SendRegisters
                          11291 ;demo.c:1684: screen(0);
   3CFB 3E 00             11292 	ld	a,#0x00
   3CFD F5                11293 	push	af
   3CFE 33                11294 	inc	sp
   3CFF CDr00s00          11295 	call	_screen
   3D02 33                11296 	inc	sp
                          11297 ;demo.c:1685: vdp_load_palette(twister_palette);
   3D03 21rA6s40          11298 	ld	hl,#_twister_palette
   3D06 E5                11299 	push	hl
   3D07 CDr00s00          11300 	call	_vdp_load_palette
   3D0A F1                11301 	pop	af
                          11302 ;demo.c:1687: puts("bye friends.\r\n\r\n");
   3D0B 21r1Cs3D          11303 	ld	hl,#__str_26
   3D0E E5                11304 	push	hl
   3D0F CDr00s00          11305 	call	_puts
   3D12 F1                11306 	pop	af
                          11307 ;demo.c:1689: exit(0);	
   3D13 3E 00             11308 	ld	a,#0x00
   3D15 F5                11309 	push	af
   3D16 33                11310 	inc	sp
   3D17 CDr00s00          11311 	call	_exit
   3D1A 33                11312 	inc	sp
   3D1B C9                11313 	ret
   3D1C                   11314 _do_quit_end::
   3D1C                   11315 __str_26:
   3D1C 62 79 65 20 66 72 11316 	.ascii "bye friends."
        69 65 6E 64 73 2E
   3D28 0D                11317 	.db 0x0D
   3D29 0A                11318 	.db 0x0A
   3D2A 0D                11319 	.db 0x0D
   3D2B 0A                11320 	.db 0x0A
   3D2C 00                11321 	.db 0x00
                          11322 ;demo.c:1695: void main() {
                          11323 ;	---------------------------------
                          11324 ; Function main
                          11325 ; ---------------------------------
   3D2D                   11326 _main_start::
   3D2D                   11327 _main:
   3D2D DD E5             11328 	push	ix
   3D2F DD 21 00 00       11329 	ld	ix,#0
   3D33 DD 39             11330 	add	ix,sp
   3D35 21 F9 FF          11331 	ld	hl,#-7
   3D38 39                11332 	add	hl,sp
   3D39 F9                11333 	ld	sp,hl
                          11334 ;demo.c:1696: unsigned char quit=0;
   3D3A DD 36 FF 00       11335 	ld	-1 (ix),#0x00
                          11336 ;demo.c:1702: spindown();
   3D3E CDr00s00          11337 	call	_spindown
                          11338 ;demo.c:1704: puts("[starting DSS MSX demosystem]\r\n\r\n");
   3D41 21r3Ds43          11339 	ld	hl,#__str_27
   3D44 E5                11340 	push	hl
   3D45 CDr00s00          11341 	call	_puts
   3D48 F1                11342 	pop	af
                          11343 ;demo.c:1706: for (y = 0; y < 2; y++) {
   3D49 DD 36 FB 00       11344 	ld	-5 (ix),#0x00
   3D4D DD 36 FC 00       11345 	ld	-4 (ix),#0x00
   3D51                   11346 00118$:
   3D51 DD 7E FB          11347 	ld	a,-5 (ix)
   3D54 D6 02             11348 	sub	a,#0x02
   3D56 DD 7E FC          11349 	ld	a,-4 (ix)
   3D59 DE 00             11350 	sbc	a,#0x00
   3D5B F2rDDs3D          11351 	jp	P,00121$
                          11352 ;demo.c:1707: for (x = 0; x < 16; x++) {
   3D5E DD 4E FB          11353 	ld	c,-5 (ix)
   3D61 DD 46 FC          11354 	ld	b,-4 (ix)
   3D64 CB 21             11355 	sla	c
   3D66 CB 10             11356 	rl	b
   3D68 CB 21             11357 	sla	c
   3D6A CB 10             11358 	rl	b
   3D6C CB 21             11359 	sla	c
   3D6E CB 10             11360 	rl	b
   3D70 CB 21             11361 	sla	c
   3D72 CB 10             11362 	rl	b
   3D74 21 81 03          11363 	ld	hl,#0x0381
   3D77 09                11364 	add	hl,bc
   3D78 DD 75 F9          11365 	ld	-7 (ix),l
   3D7B DD 74 FA          11366 	ld	-6 (ix),h
   3D7E DD 36 FD 00       11367 	ld	-3 (ix),#0x00
   3D82 DD 36 FE 00       11368 	ld	-2 (ix),#0x00
   3D86                   11369 00114$:
   3D86 DD 7E FD          11370 	ld	a,-3 (ix)
   3D89 D6 10             11371 	sub	a,#0x10
   3D8B DD 7E FE          11372 	ld	a,-2 (ix)
   3D8E DE 00             11373 	sbc	a,#0x00
   3D90 F2rD2s3D          11374 	jp	P,00120$
                          11375 ;demo.c:1708: tri_lookup_x[(y*16)+x] = x * 16;
   3D93 DD 7E FB          11376 	ld	a,-5 (ix)
   3D96 07                11377 	rlca
   3D97 07                11378 	rlca
   3D98 07                11379 	rlca
   3D99 07                11380 	rlca
   3D9A E6 F0             11381 	and	a,#0xF0
   3D9C 5F                11382 	ld	e,a
   3D9D DD 56 FD          11383 	ld	d,-3 (ix)
   3DA0 7B                11384 	ld	a,e
   3DA1 82                11385 	add	a,d
   3DA2 5F                11386 	ld	e, a
   3DA3 C6r00             11387 	add	a,#<_tri_lookup_x
   3DA5 4F                11388 	ld	c,a
   3DA6 3Es01             11389 	ld	a,#>_tri_lookup_x
   3DA8 CE 00             11390 	adc	a,#0x00
   3DAA 47                11391 	ld	b,a
   3DAB 7A                11392 	ld	a,d
   3DAC 07                11393 	rlca
   3DAD 07                11394 	rlca
   3DAE 07                11395 	rlca
   3DAF 07                11396 	rlca
   3DB0 E6 F0             11397 	and	a,#0xF0
   3DB2 02                11398 	ld	(bc),a
                          11399 ;demo.c:1709: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   3DB3 CB 23             11400 	sla	e
   3DB5 3Er88             11401 	ld	a,#<_tri_lookup_y
   3DB7 83                11402 	add	a,e
   3DB8 6F                11403 	ld	l,a
   3DB9 3Es01             11404 	ld	a,#>_tri_lookup_y
   3DBB CE 00             11405 	adc	a,#0x00
   3DBD 67                11406 	ld	h,a
   3DBE DD 7E F9          11407 	ld	a,-7 (ix)
   3DC1 77                11408 	ld	(hl),a
   3DC2 23                11409 	inc	hl
   3DC3 DD 7E FA          11410 	ld	a,-6 (ix)
   3DC6 77                11411 	ld	(hl),a
                          11412 ;demo.c:1707: for (x = 0; x < 16; x++) {
   3DC7 DD 34 FD          11413 	inc	-3 (ix)
   3DCA 20 03             11414 	jr	NZ,00146$
   3DCC DD 34 FE          11415 	inc	-2 (ix)
   3DCF                   11416 00146$:
   3DCF C3r86s3D          11417 	jp	00114$
   3DD2                   11418 00120$:
                          11419 ;demo.c:1706: for (y = 0; y < 2; y++) {
   3DD2 DD 34 FB          11420 	inc	-5 (ix)
   3DD5 20 03             11421 	jr	NZ,00147$
   3DD7 DD 34 FC          11422 	inc	-4 (ix)
   3DDA                   11423 00147$:
   3DDA C3r51s3D          11424 	jp	00118$
   3DDD                   11425 00121$:
                          11426 ;demo.c:1713: for (x = 0; x < 26; x++) {
   3DDD DD 36 FD 00       11427 	ld	-3 (ix),#0x00
   3DE1 DD 36 FE 00       11428 	ld	-2 (ix),#0x00
   3DE5 DD 36 F9 00       11429 	ld	-7 (ix),#0x00
   3DE9 DD 36 FA 00       11430 	ld	-6 (ix),#0x00
   3DED                   11431 00122$:
   3DED DD 7E FD          11432 	ld	a,-3 (ix)
   3DF0 D6 1A             11433 	sub	a,#0x1A
   3DF2 DD 7E FE          11434 	ld	a,-2 (ix)
   3DF5 DE 00             11435 	sbc	a,#0x00
   3DF7 F2r49s3E          11436 	jp	P,00125$
                          11437 ;demo.c:1714: twelvetimes[x] = x * 12;
   3DFA DD 4E FD          11438 	ld	c,-3 (ix)
   3DFD DD 46 FE          11439 	ld	b,-2 (ix)
   3E00 CB 21             11440 	sla	c
   3E02 CB 10             11441 	rl	b
   3E04 21r20s01          11442 	ld	hl,#_twelvetimes
   3E07 09                11443 	add	hl,bc
   3E08 DD 7E F9          11444 	ld	a,-7 (ix)
   3E0B 77                11445 	ld	(hl),a
   3E0C 23                11446 	inc	hl
   3E0D DD 7E FA          11447 	ld	a,-6 (ix)
   3E10 77                11448 	ld	(hl),a
                          11449 ;demo.c:1715: eighttimes[x] = x * 8;
   3E11 21r54s01          11450 	ld	hl,#_eighttimes
   3E14 09                11451 	add	hl,bc
   3E15 4D                11452 	ld	c,l
   3E16 44                11453 	ld	b,h
   3E17 DD 5E FD          11454 	ld	e,-3 (ix)
   3E1A DD 56 FE          11455 	ld	d,-2 (ix)
   3E1D CB 23             11456 	sla	e
   3E1F CB 12             11457 	rl	d
   3E21 CB 23             11458 	sla	e
   3E23 CB 12             11459 	rl	d
   3E25 CB 23             11460 	sla	e
   3E27 CB 12             11461 	rl	d
   3E29 69                11462 	ld	l,c
   3E2A 60                11463 	ld	h,b
   3E2B 73                11464 	ld	(hl),e
   3E2C 23                11465 	inc	hl
   3E2D 72                11466 	ld	(hl),d
                          11467 ;demo.c:1713: for (x = 0; x < 26; x++) {
   3E2E DD 7E F9          11468 	ld	a,-7 (ix)
   3E31 C6 0C             11469 	add	a,#0x0C
   3E33 DD 77 F9          11470 	ld	-7 (ix),a
   3E36 DD 7E FA          11471 	ld	a,-6 (ix)
   3E39 CE 00             11472 	adc	a,#0x00
   3E3B DD 77 FA          11473 	ld	-6 (ix),a
   3E3E DD 34 FD          11474 	inc	-3 (ix)
   3E41 20 03             11475 	jr	NZ,00152$
   3E43 DD 34 FE          11476 	inc	-2 (ix)
   3E46                   11477 00152$:
   3E46 C3rEDs3D          11478 	jp	00122$
   3E49                   11479 00125$:
                          11480 ;demo.c:1718: puts("init sweet PSG bleeps...");
   3E49 21r5Fs43          11481 	ld	hl,#__str_28
   3E4C E5                11482 	push	hl
   3E4D CDr00s00          11483 	call	_puts
   3E50 F1                11484 	pop	af
                          11485 ;demo.c:1720: PLY_SongPtr = (char *)0x0103;
   3E51 21r00s00          11486 	ld	hl,#_PLY_SongPtr + 0
   3E54 36 03             11487 	ld	(hl), #0x03
   3E56 21r01s00          11488 	ld	hl,#_PLY_SongPtr + 1
   3E59 36 01             11489 	ld	(hl), #0x01
                          11490 ;demo.c:1721: PLY_Init();
   3E5B CDr00s00          11491 	call	_PLY_Init
                          11492 ;demo.c:1722: puts("done.\r\n");
   3E5E 21r78s43          11493 	ld	hl,#__str_29
   3E61 E5                11494 	push	hl
   3E62 CDr00s00          11495 	call	_puts
   3E65 F1                11496 	pop	af
                          11497 ;demo.c:1724: puts("detecting ya vdp type...\r\n");
   3E66 21r80s43          11498 	ld	hl,#__str_30
   3E69 E5                11499 	push	hl
   3E6A CDr00s00          11500 	call	_puts
   3E6D F1                11501 	pop	af
                          11502 ;demo.c:1725: if(isvdp2())
   3E6E CDr00s00          11503 	call	_isvdp2
   3E71 AF                11504 	xor	a,a
   3E72 B5                11505 	or	a,l
   3E73 28 0A             11506 	jr	Z,00102$
                          11507 ;demo.c:1727: puts("vdp2 found! setting 50hz...\r\n");
   3E75 21r9Bs43          11508 	ld	hl,#__str_31
   3E78 E5                11509 	push	hl
   3E79 CDr00s00          11510 	call	_puts
   3E7C F1                11511 	pop	af
   3E7D 18 0B             11512 	jr	00103$
   3E7F                   11513 00102$:
                          11514 ;demo.c:1730: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n");
   3E7F 21rB9s43          11515 	ld	hl,#__str_32
   3E82 E5                11516 	push	hl
   3E83 CDr00s00          11517 	call	_puts
   3E86 F1                11518 	pop	af
                          11519 ;demo.c:1731: do_quit();
   3E87 CDrF1s3C          11520 	call	_do_quit
   3E8A                   11521 00103$:
                          11522 ;demo.c:1734: pal_load("TWISTER PL5",32,0);
   3E8A 21 00 00          11523 	ld	hl,#0x0000
   3E8D E5                11524 	push	hl
   3E8E 3E 20             11525 	ld	a,#0x20
   3E90 F5                11526 	push	af
   3E91 33                11527 	inc	sp
   3E92 21rFEs43          11528 	ld	hl,#__str_33
   3E95 E5                11529 	push	hl
   3E96 CDr37s08          11530 	call	_pal_load
   3E99 F1                11531 	pop	af
   3E9A F1                11532 	pop	af
   3E9B 33                11533 	inc	sp
                          11534 ;demo.c:1735: memcpy(twister_palette, cur_palette, 32);
   3E9C 21 20 00          11535 	ld	hl,#0x0020
   3E9F E5                11536 	push	hl
   3EA0 21r46s40          11537 	ld	hl,#_cur_palette
   3EA3 E5                11538 	push	hl
   3EA4 21rA6s40          11539 	ld	hl,#_twister_palette
   3EA7 E5                11540 	push	hl
   3EA8 CDr00s00          11541 	call	_memcpy
   3EAB F1                11542 	pop	af
   3EAC F1                11543 	pop	af
   3EAD F1                11544 	pop	af
                          11545 ;demo.c:1736: pal_load("LF      PL5",32,0);
   3EAE 21 00 00          11546 	ld	hl,#0x0000
   3EB1 E5                11547 	push	hl
   3EB2 3E 20             11548 	ld	a,#0x20
   3EB4 F5                11549 	push	af
   3EB5 33                11550 	inc	sp
   3EB6 21r0As44          11551 	ld	hl,#__str_34
   3EB9 E5                11552 	push	hl
   3EBA CDr37s08          11553 	call	_pal_load
   3EBD F1                11554 	pop	af
   3EBE F1                11555 	pop	af
   3EBF 33                11556 	inc	sp
                          11557 ;demo.c:1737: memcpy(tf_palette, cur_palette, 32);
   3EC0 21 20 00          11558 	ld	hl,#0x0020
   3EC3 E5                11559 	push	hl
   3EC4 21r46s40          11560 	ld	hl,#_cur_palette
   3EC7 E5                11561 	push	hl
   3EC8 21rC6s40          11562 	ld	hl,#_tf_palette
   3ECB E5                11563 	push	hl
   3ECC CDr00s00          11564 	call	_memcpy
   3ECF F1                11565 	pop	af
   3ED0 F1                11566 	pop	af
   3ED1 F1                11567 	pop	af
                          11568 ;demo.c:1738: pal_load("BOXES   PL5",32,0);
   3ED2 21 00 00          11569 	ld	hl,#0x0000
   3ED5 E5                11570 	push	hl
   3ED6 3E 20             11571 	ld	a,#0x20
   3ED8 F5                11572 	push	af
   3ED9 33                11573 	inc	sp
   3EDA 21r16s44          11574 	ld	hl,#__str_35
   3EDD E5                11575 	push	hl
   3EDE CDr37s08          11576 	call	_pal_load
   3EE1 F1                11577 	pop	af
   3EE2 F1                11578 	pop	af
   3EE3 33                11579 	inc	sp
                          11580 ;demo.c:1739: memcpy(boxes_palette, cur_palette, 32);
   3EE4 21 20 00          11581 	ld	hl,#0x0020
   3EE7 E5                11582 	push	hl
   3EE8 21r46s40          11583 	ld	hl,#_cur_palette
   3EEB E5                11584 	push	hl
   3EEC 21rE6s40          11585 	ld	hl,#_boxes_palette
   3EEF E5                11586 	push	hl
   3EF0 CDr00s00          11587 	call	_memcpy
   3EF3 F1                11588 	pop	af
   3EF4 F1                11589 	pop	af
   3EF5 F1                11590 	pop	af
                          11591 ;demo.c:1740: pal_load("BULBS   PL5",32,0);
   3EF6 21 00 00          11592 	ld	hl,#0x0000
   3EF9 E5                11593 	push	hl
   3EFA 3E 20             11594 	ld	a,#0x20
   3EFC F5                11595 	push	af
   3EFD 33                11596 	inc	sp
   3EFE 21r22s44          11597 	ld	hl,#__str_36
   3F01 E5                11598 	push	hl
   3F02 CDr37s08          11599 	call	_pal_load
   3F05 F1                11600 	pop	af
   3F06 F1                11601 	pop	af
   3F07 33                11602 	inc	sp
                          11603 ;demo.c:1741: memcpy(bulbs_palette, cur_palette, 32);
   3F08 21 20 00          11604 	ld	hl,#0x0020
   3F0B E5                11605 	push	hl
   3F0C 21r46s40          11606 	ld	hl,#_cur_palette
   3F0F E5                11607 	push	hl
   3F10 21r66s40          11608 	ld	hl,#_bulbs_palette
   3F13 E5                11609 	push	hl
   3F14 CDr00s00          11610 	call	_memcpy
   3F17 F1                11611 	pop	af
   3F18 F1                11612 	pop	af
   3F19 F1                11613 	pop	af
                          11614 ;demo.c:1742: pal_load("CREDIT1 PL6",32,0);
   3F1A 21 00 00          11615 	ld	hl,#0x0000
   3F1D E5                11616 	push	hl
   3F1E 3E 20             11617 	ld	a,#0x20
   3F20 F5                11618 	push	af
   3F21 33                11619 	inc	sp
   3F22 21r2Es44          11620 	ld	hl,#__str_37
   3F25 E5                11621 	push	hl
   3F26 CDr37s08          11622 	call	_pal_load
   3F29 F1                11623 	pop	af
   3F2A F1                11624 	pop	af
   3F2B 33                11625 	inc	sp
                          11626 ;demo.c:1743: memcpy(credits_palette, cur_palette, 32);
   3F2C 21 20 00          11627 	ld	hl,#0x0020
   3F2F E5                11628 	push	hl
   3F30 21r46s40          11629 	ld	hl,#_cur_palette
   3F33 E5                11630 	push	hl
   3F34 21r06s41          11631 	ld	hl,#_credits_palette
   3F37 E5                11632 	push	hl
   3F38 CDr00s00          11633 	call	_memcpy
   3F3B F1                11634 	pop	af
   3F3C F1                11635 	pop	af
   3F3D F1                11636 	pop	af
                          11637 ;demo.c:1745: puts("all good, starting the demo!\r\n");
   3F3E 21r3As44          11638 	ld	hl,#__str_38
   3F41 E5                11639 	push	hl
   3F42 CDr00s00          11640 	call	_puts
   3F45 F1                11641 	pop	af
                          11642 ;demo.c:1747: pause();
   3F46 CDr16s09          11643 	call	_pause
                          11644 ;demo.c:1748: pause();
   3F49 CDr16s09          11645 	call	_pause
                          11646 ;demo.c:1749: pause();
   3F4C CDr16s09          11647 	call	_pause
                          11648 ;demo.c:1750: pause();
   3F4F CDr16s09          11649 	call	_pause
                          11650 ;demo.c:1751: pause();
   3F52 CDr16s09          11651 	call	_pause
                          11652 ;demo.c:1752: pause();
   3F55 CDr16s09          11653 	call	_pause
                          11654 ;demo.c:1754: scratch_clear();
   3F58 CDr24s08          11655 	call	_scratch_clear
                          11656 ;demo.c:1755: vdp_load_palette(scratch);
   3F5B 21rC6s3F          11657 	ld	hl,#_scratch
   3F5E E5                11658 	push	hl
   3F5F CDr00s00          11659 	call	_vdp_load_palette
   3F62 F1                11660 	pop	af
                          11661 ;demo.c:1757: vdp_set_screen5();
   3F63 CDr00s00          11662 	call	_vdp_set_screen5
                          11663 ;demo.c:1759: pck_load("LOADING PCK",5489,0x0000,VRAM_0,0);
   3F66 21 00 00          11664 	ld	hl,#0x0000
   3F69 E5                11665 	push	hl
   3F6A 2E 01             11666 	ld	l, #0x01
   3F6C E5                11667 	push	hl
   3F6D 2E 00             11668 	ld	l, #0x00
   3F6F E5                11669 	push	hl
   3F70 21 71 15          11670 	ld	hl,#0x1571
   3F73 E5                11671 	push	hl
   3F74 21r59s44          11672 	ld	hl,#__str_39
   3F77 E5                11673 	push	hl
   3F78 CDr2Ds0A          11674 	call	_pck_load
   3F7B FD 21 0A 00       11675 	ld	iy,#0x000A
   3F7F FD 39             11676 	add	iy,sp
   3F81 FD F9             11677 	ld	sp,iy
                          11678 ;demo.c:1760: cmd.size_x = 256;
   3F83 21r32s41          11679 	ld	hl, #_cmd + 8
   3F86 36 00             11680 	ld	(hl),#0x00
   3F88 23                11681 	inc	hl
   3F89 36 01             11682 	ld	(hl),#0x01
                          11683 ;demo.c:1761: cmd.size_y = 212;
   3F8B 21r34s41          11684 	ld	hl, #_cmd + 10
   3F8E 36 D4             11685 	ld	(hl),#0xD4
   3F90 23                11686 	inc	hl
   3F91 36 00             11687 	ld	(hl),#0x00
                          11688 ;demo.c:1762: cmd.data = 0;
                          11689 ;demo.c:1763: cmd.argument = 0x00;
   3F93 3E 00             11690 	ld	a,#0x00
   3F95 32r36s41          11691 	ld	(#_cmd + 12),a
   3F98 32r37s41          11692 	ld	(#_cmd + 13),a
                          11693 ;demo.c:1764: cmd.command = 0xd0; 
   3F9B 01r38s41          11694 	ld	bc,#_cmd + 14
   3F9E 3E D0             11695 	ld	a,#0xD0
   3FA0 02                11696 	ld	(bc),a
                          11697 ;demo.c:1765: cmd.source_x = 0;
   3FA1 21r2As41          11698 	ld	hl,#_cmd
   3FA4 36 00             11699 	ld	(hl),#0x00
   3FA6 23                11700 	inc	hl
   3FA7 36 00             11701 	ld	(hl),#0x00
                          11702 ;demo.c:1766: cmd.source_y = 0;
   3FA9 21r2Cs41          11703 	ld	hl, #_cmd + 2
   3FAC 36 00             11704 	ld	(hl),#0x00
   3FAE 23                11705 	inc	hl
   3FAF 36 00             11706 	ld	(hl),#0x00
                          11707 ;demo.c:1767: cmd.dest_x = 0;
   3FB1 21r2Es41          11708 	ld	hl, #_cmd + 4
   3FB4 36 00             11709 	ld	(hl),#0x00
   3FB6 23                11710 	inc	hl
   3FB7 36 00             11711 	ld	(hl),#0x00
                          11712 ;demo.c:1768: cmd.dest_y = 768;
   3FB9 21r30s41          11713 	ld	hl, #_cmd + 6
   3FBC 36 00             11714 	ld	(hl),#0x00
   3FBE 23                11715 	inc	hl
   3FBF 36 03             11716 	ld	(hl),#0x03
                          11717 ;demo.c:1769: vdp_copier(&cmd);
   3FC1 21r2As41          11718 	ld	hl,#_cmd
   3FC4 E5                11719 	push	hl
   3FC5 CDr00s00          11720 	call	_vdp_copier
   3FC8 F1                11721 	pop	af
                          11722 ;demo.c:1771: vdp_register(2,0x7f);
   3FC9 21 02 7F          11723 	ld	hl,#0x7F02
   3FCC E5                11724 	push	hl
   3FCD CDr00s00          11725 	call	_vdp_register
   3FD0 F1                11726 	pop	af
                          11727 ;demo.c:1772: vdp_load_palette(boxes_palette);
   3FD1 21rE6s40          11728 	ld	hl,#_boxes_palette
   3FD4 E5                11729 	push	hl
   3FD5 CDr00s00          11730 	call	_vdp_load_palette
   3FD8 F1                11731 	pop	af
                          11732 ;demo.c:1776: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   3FD9 21 00 00          11733 	ld	hl,#0x0000
   3FDC E5                11734 	push	hl
   3FDD 2E 01             11735 	ld	l, #0x01
   3FDF E5                11736 	push	hl
   3FE0 2E 00             11737 	ld	l, #0x00
   3FE2 E5                11738 	push	hl
   3FE3 21 7F 09          11739 	ld	hl,#0x097F
   3FE6 E5                11740 	push	hl
   3FE7 21r65s44          11741 	ld	hl,#__str_40
   3FEA E5                11742 	push	hl
   3FEB CDr2Ds0A          11743 	call	_pck_load
   3FEE FD 21 0A 00       11744 	ld	iy,#0x000A
   3FF2 FD 39             11745 	add	iy,sp
   3FF4 FD F9             11746 	ld	sp,iy
                          11747 ;demo.c:1778: cmd.size_x = 256;
   3FF6 21r32s41          11748 	ld	hl, #_cmd + 8
   3FF9 36 00             11749 	ld	(hl),#0x00
   3FFB 23                11750 	inc	hl
   3FFC 36 01             11751 	ld	(hl),#0x01
                          11752 ;demo.c:1779: cmd.size_y = 212;
   3FFE 21r34s41          11753 	ld	hl, #_cmd + 10
   4001 36 D4             11754 	ld	(hl),#0xD4
   4003 23                11755 	inc	hl
   4004 36 00             11756 	ld	(hl),#0x00
                          11757 ;demo.c:1780: cmd.data = 0;
                          11758 ;demo.c:1781: cmd.argument = 0x00;
   4006 3E 00             11759 	ld	a,#0x00
   4008 32r36s41          11760 	ld	(#_cmd + 12),a
   400B 32r37s41          11761 	ld	(#_cmd + 13),a
                          11762 ;demo.c:1782: cmd.command = 0xd0; 
   400E 01r38s41          11763 	ld	bc,#_cmd + 14
   4011 3E D0             11764 	ld	a,#0xD0
   4013 02                11765 	ld	(bc),a
                          11766 ;demo.c:1783: cmd.source_x = 0;
   4014 21r2As41          11767 	ld	hl,#_cmd
   4017 36 00             11768 	ld	(hl),#0x00
   4019 23                11769 	inc	hl
   401A 36 00             11770 	ld	(hl),#0x00
                          11771 ;demo.c:1784: cmd.source_y = 0;
   401C 21r2Cs41          11772 	ld	hl, #_cmd + 2
   401F 36 00             11773 	ld	(hl),#0x00
   4021 23                11774 	inc	hl
   4022 36 00             11775 	ld	(hl),#0x00
                          11776 ;demo.c:1785: cmd.dest_x = 0;
   4024 21r2Es41          11777 	ld	hl, #_cmd + 4
   4027 36 00             11778 	ld	(hl),#0x00
   4029 23                11779 	inc	hl
   402A 36 00             11780 	ld	(hl),#0x00
                          11781 ;demo.c:1786: cmd.dest_y = 256;
   402C 21r30s41          11782 	ld	hl, #_cmd + 6
   402F 36 00             11783 	ld	(hl),#0x00
   4031 23                11784 	inc	hl
   4032 36 01             11785 	ld	(hl),#0x01
                          11786 ;demo.c:1787: vdp_copier(&cmd);
   4034 21r2As41          11787 	ld	hl,#_cmd
   4037 E5                11788 	push	hl
   4038 CDr00s00          11789 	call	_vdp_copier
   403B F1                11790 	pop	af
                          11791 ;demo.c:1789: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   403C 21 00 00          11792 	ld	hl,#0x0000
   403F E5                11793 	push	hl
   4040 2E 01             11794 	ld	l, #0x01
   4042 E5                11795 	push	hl
   4043 2E 00             11796 	ld	l, #0x00
   4045 E5                11797 	push	hl
   4046 21 C0 0F          11798 	ld	hl,#0x0FC0
   4049 E5                11799 	push	hl
   404A 21r71s44          11800 	ld	hl,#__str_41
   404D E5                11801 	push	hl
   404E CDr2Ds0A          11802 	call	_pck_load
   4051 FD 21 0A 00       11803 	ld	iy,#0x000A
   4055 FD 39             11804 	add	iy,sp
   4057 FD F9             11805 	ld	sp,iy
                          11806 ;demo.c:1791: cmd.size_x = 256;
   4059 21r32s41          11807 	ld	hl, #_cmd + 8
   405C 36 00             11808 	ld	(hl),#0x00
   405E 23                11809 	inc	hl
   405F 36 01             11810 	ld	(hl),#0x01
                          11811 ;demo.c:1792: cmd.size_y = 212;
   4061 21r34s41          11812 	ld	hl, #_cmd + 10
   4064 36 D4             11813 	ld	(hl),#0xD4
   4066 23                11814 	inc	hl
   4067 36 00             11815 	ld	(hl),#0x00
                          11816 ;demo.c:1793: cmd.data = 0;
                          11817 ;demo.c:1794: cmd.argument = 0x00;
   4069 3E 00             11818 	ld	a,#0x00
   406B 32r36s41          11819 	ld	(#_cmd + 12),a
   406E 32r37s41          11820 	ld	(#_cmd + 13),a
                          11821 ;demo.c:1795: cmd.command = 0xd0; 
   4071 01r38s41          11822 	ld	bc,#_cmd + 14
   4074 3E D0             11823 	ld	a,#0xD0
   4076 02                11824 	ld	(bc),a
                          11825 ;demo.c:1796: cmd.source_x = 0;
   4077 21r2As41          11826 	ld	hl,#_cmd
   407A 36 00             11827 	ld	(hl),#0x00
   407C 23                11828 	inc	hl
   407D 36 00             11829 	ld	(hl),#0x00
                          11830 ;demo.c:1797: cmd.source_y = 0;
   407F 21r2Cs41          11831 	ld	hl, #_cmd + 2
   4082 36 00             11832 	ld	(hl),#0x00
   4084 23                11833 	inc	hl
   4085 36 00             11834 	ld	(hl),#0x00
                          11835 ;demo.c:1798: cmd.dest_x = 0;
   4087 21r2Es41          11836 	ld	hl, #_cmd + 4
   408A 36 00             11837 	ld	(hl),#0x00
   408C 23                11838 	inc	hl
   408D 36 00             11839 	ld	(hl),#0x00
                          11840 ;demo.c:1799: cmd.dest_y = 512;
   408F 21r30s41          11841 	ld	hl, #_cmd + 6
   4092 36 00             11842 	ld	(hl),#0x00
   4094 23                11843 	inc	hl
   4095 36 02             11844 	ld	(hl),#0x02
                          11845 ;demo.c:1800: vdp_copier(&cmd);
   4097 21r2As41          11846 	ld	hl,#_cmd
   409A E5                11847 	push	hl
   409B CDr00s00          11848 	call	_vdp_copier
   409E F1                11849 	pop	af
                          11850 ;demo.c:1802: memset((uint8_t *) &crebuffer1, 0, 3323);
   409F 21 FB 0C          11851 	ld	hl,#0x0CFB
   40A2 E5                11852 	push	hl
   40A3 3E 00             11853 	ld	a,#0x00
   40A5 F5                11854 	push	af
   40A6 33                11855 	inc	sp
   40A7 21rCCs11          11856 	ld	hl,#_crebuffer1
   40AA E5                11857 	push	hl
   40AB CDr00s00          11858 	call	_memset
   40AE F1                11859 	pop	af
   40AF F1                11860 	pop	af
   40B0 33                11861 	inc	sp
                          11862 ;demo.c:1803: raw_load("CREDIT1 PCK", 3323, crebuffer1,0);
   40B1 21 00 00          11863 	ld	hl,#0x0000
   40B4 E5                11864 	push	hl
   40B5 21rCCs11          11865 	ld	hl,#_crebuffer1
   40B8 E5                11866 	push	hl
   40B9 21 FB 0C          11867 	ld	hl,#0x0CFB
   40BC E5                11868 	push	hl
   40BD 21r7Ds44          11869 	ld	hl,#__str_42
   40C0 E5                11870 	push	hl
   40C1 CDr2As09          11871 	call	_raw_load
   40C4 F1                11872 	pop	af
   40C5 F1                11873 	pop	af
   40C6 F1                11874 	pop	af
   40C7 F1                11875 	pop	af
                          11876 ;demo.c:1804: memset((uint8_t *) &crebuffer2, 0, 4724);
   40C8 21 74 12          11877 	ld	hl,#0x1274
   40CB E5                11878 	push	hl
   40CC 3E 00             11879 	ld	a,#0x00
   40CE F5                11880 	push	af
   40CF 33                11881 	inc	sp
   40D0 21rC7s1E          11882 	ld	hl,#_crebuffer2
   40D3 E5                11883 	push	hl
   40D4 CDr00s00          11884 	call	_memset
   40D7 F1                11885 	pop	af
   40D8 F1                11886 	pop	af
   40D9 33                11887 	inc	sp
                          11888 ;demo.c:1805: raw_load("CREDIT2 PCK", 4724, crebuffer2,0);
   40DA 21 00 00          11889 	ld	hl,#0x0000
   40DD E5                11890 	push	hl
   40DE 21rC7s1E          11891 	ld	hl,#_crebuffer2
   40E1 E5                11892 	push	hl
   40E2 21 74 12          11893 	ld	hl,#0x1274
   40E5 E5                11894 	push	hl
   40E6 21r89s44          11895 	ld	hl,#__str_43
   40E9 E5                11896 	push	hl
   40EA CDr2As09          11897 	call	_raw_load
   40ED F1                11898 	pop	af
   40EE F1                11899 	pop	af
   40EF F1                11900 	pop	af
   40F0 F1                11901 	pop	af
                          11902 ;demo.c:1806: memset((uint8_t *) &crebuffer3, 0, 3723);
   40F1 21 8B 0E          11903 	ld	hl,#0x0E8B
   40F4 E5                11904 	push	hl
   40F5 3E 00             11905 	ld	a,#0x00
   40F7 F5                11906 	push	af
   40F8 33                11907 	inc	sp
   40F9 21r3Bs31          11908 	ld	hl,#_crebuffer3
   40FC E5                11909 	push	hl
   40FD CDr00s00          11910 	call	_memset
   4100 F1                11911 	pop	af
   4101 F1                11912 	pop	af
   4102 33                11913 	inc	sp
                          11914 ;demo.c:1807: raw_load("CREDIT3 PCK", 3723, crebuffer3,0);
   4103 21 00 00          11915 	ld	hl,#0x0000
   4106 E5                11916 	push	hl
   4107 21r3Bs31          11917 	ld	hl,#_crebuffer3
   410A E5                11918 	push	hl
   410B 21 8B 0E          11919 	ld	hl,#0x0E8B
   410E E5                11920 	push	hl
   410F 21r95s44          11921 	ld	hl,#__str_44
   4112 E5                11922 	push	hl
   4113 CDr2As09          11923 	call	_raw_load
   4116 F1                11924 	pop	af
   4117 F1                11925 	pop	af
   4118 F1                11926 	pop	af
   4119 F1                11927 	pop	af
                          11928 ;demo.c:1809: scratch_clear();
   411A CDr24s08          11929 	call	_scratch_clear
                          11930 ;demo.c:1810: vdp_load_palette(scratch);
   411D 21rC6s3F          11931 	ld	hl,#_scratch
   4120 E5                11932 	push	hl
   4121 CDr00s00          11933 	call	_vdp_load_palette
   4124 F1                11934 	pop	af
                          11935 ;demo.c:1812: vdp_register(2,0x1f);
   4125 21 02 1F          11936 	ld	hl,#0x1F02
   4128 E5                11937 	push	hl
   4129 CDr00s00          11938 	call	_vdp_register
   412C F1                11939 	pop	af
                          11940 ;demo.c:1814: pck_load("BOXES   PCK",3002,0x0000,VRAM_0,0);
   412D 21 00 00          11941 	ld	hl,#0x0000
   4130 E5                11942 	push	hl
   4131 2E 01             11943 	ld	l, #0x01
   4133 E5                11944 	push	hl
   4134 2E 00             11945 	ld	l, #0x00
   4136 E5                11946 	push	hl
   4137 21 BA 0B          11947 	ld	hl,#0x0BBA
   413A E5                11948 	push	hl
   413B 21rA1s44          11949 	ld	hl,#__str_45
   413E E5                11950 	push	hl
   413F CDr2Ds0A          11951 	call	_pck_load
   4142 FD 21 0A 00       11952 	ld	iy,#0x000A
   4146 FD 39             11953 	add	iy,sp
   4148 FD F9             11954 	ld	sp,iy
                          11955 ;demo.c:1815: cmd.size_x = 256;
   414A 21r32s41          11956 	ld	hl, #_cmd + 8
   414D 36 00             11957 	ld	(hl),#0x00
   414F 23                11958 	inc	hl
   4150 36 01             11959 	ld	(hl),#0x01
                          11960 ;demo.c:1816: cmd.size_y = 212;
   4152 21r34s41          11961 	ld	hl, #_cmd + 10
   4155 36 D4             11962 	ld	(hl),#0xD4
   4157 23                11963 	inc	hl
   4158 36 00             11964 	ld	(hl),#0x00
                          11965 ;demo.c:1817: cmd.data = 0;
                          11966 ;demo.c:1818: cmd.argument = 0x00;
   415A 3E 00             11967 	ld	a,#0x00
   415C 32r36s41          11968 	ld	(#_cmd + 12),a
   415F 32r37s41          11969 	ld	(#_cmd + 13),a
                          11970 ;demo.c:1819: cmd.command = 0xd0; 
   4162 01r38s41          11971 	ld	bc,#_cmd + 14
   4165 3E D0             11972 	ld	a,#0xD0
   4167 02                11973 	ld	(bc),a
                          11974 ;demo.c:1820: cmd.source_x = 0;
   4168 21r2As41          11975 	ld	hl,#_cmd
   416B 36 00             11976 	ld	(hl),#0x00
   416D 23                11977 	inc	hl
   416E 36 00             11978 	ld	(hl),#0x00
                          11979 ;demo.c:1821: cmd.source_y = 0;
   4170 21r2Cs41          11980 	ld	hl, #_cmd + 2
   4173 36 00             11981 	ld	(hl),#0x00
   4175 23                11982 	inc	hl
   4176 36 00             11983 	ld	(hl),#0x00
                          11984 ;demo.c:1822: cmd.dest_x = 0;
   4178 21r2Es41          11985 	ld	hl, #_cmd + 4
   417B 36 00             11986 	ld	(hl),#0x00
   417D 23                11987 	inc	hl
   417E 36 00             11988 	ld	(hl),#0x00
                          11989 ;demo.c:1823: cmd.dest_y = 768;
   4180 21r30s41          11990 	ld	hl, #_cmd + 6
   4183 36 00             11991 	ld	(hl),#0x00
   4185 23                11992 	inc	hl
   4186 36 03             11993 	ld	(hl),#0x03
                          11994 ;demo.c:1824: vdp_copier(&cmd);
   4188 21r2As41          11995 	ld	hl,#_cmd
   418B E5                11996 	push	hl
   418C CDr00s00          11997 	call	_vdp_copier
   418F F1                11998 	pop	af
                          11999 ;demo.c:1826: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   4190 21 00 00          12000 	ld	hl,#0x0000
   4193 E5                12001 	push	hl
   4194 2E 01             12002 	ld	l, #0x01
   4196 E5                12003 	push	hl
   4197 2E 00             12004 	ld	l, #0x00
   4199 E5                12005 	push	hl
   419A 21 6A 08          12006 	ld	hl,#0x086A
   419D E5                12007 	push	hl
   419E 21rADs44          12008 	ld	hl,#__str_46
   41A1 E5                12009 	push	hl
   41A2 CDr2Ds0A          12010 	call	_pck_load
   41A5 FD 21 0A 00       12011 	ld	iy,#0x000A
   41A9 FD 39             12012 	add	iy,sp
   41AB FD F9             12013 	ld	sp,iy
                          12014 ;demo.c:1828: cmd.size_x = 108;
   41AD 21r32s41          12015 	ld	hl, #_cmd + 8
   41B0 36 6C             12016 	ld	(hl),#0x6C
   41B2 23                12017 	inc	hl
   41B3 36 00             12018 	ld	(hl),#0x00
                          12019 ;demo.c:1829: cmd.size_y = 116;
   41B5 21r34s41          12020 	ld	hl, #_cmd + 10
   41B8 36 74             12021 	ld	(hl),#0x74
   41BA 23                12022 	inc	hl
   41BB 36 00             12023 	ld	(hl),#0x00
                          12024 ;demo.c:1830: cmd.data = 0;
                          12025 ;demo.c:1831: cmd.argument = 0x00;
   41BD 3E 00             12026 	ld	a,#0x00
   41BF 32r36s41          12027 	ld	(#_cmd + 12),a
   41C2 32r37s41          12028 	ld	(#_cmd + 13),a
                          12029 ;demo.c:1832: cmd.command = 0xd0; 
   41C5 01r38s41          12030 	ld	bc,#_cmd + 14
   41C8 3E D0             12031 	ld	a,#0xD0
   41CA 02                12032 	ld	(bc),a
                          12033 ;demo.c:1833: cmd.source_x = 75;
   41CB 21r2As41          12034 	ld	hl,#_cmd
   41CE 36 4B             12035 	ld	(hl),#0x4B
   41D0 23                12036 	inc	hl
   41D1 36 00             12037 	ld	(hl),#0x00
                          12038 ;demo.c:1834: cmd.source_y = 50;
   41D3 21r2Cs41          12039 	ld	hl, #_cmd + 2
   41D6 36 32             12040 	ld	(hl),#0x32
   41D8 23                12041 	inc	hl
   41D9 36 00             12042 	ld	(hl),#0x00
                          12043 ;demo.c:1835: cmd.dest_x = 75;
   41DB 21r2Es41          12044 	ld	hl, #_cmd + 4
   41DE 36 4B             12045 	ld	(hl),#0x4B
   41E0 23                12046 	inc	hl
   41E1 36 00             12047 	ld	(hl),#0x00
                          12048 ;demo.c:1836: cmd.dest_y = 256;
   41E3 21r30s41          12049 	ld	hl, #_cmd + 6
   41E6 36 00             12050 	ld	(hl),#0x00
   41E8 23                12051 	inc	hl
   41E9 36 01             12052 	ld	(hl),#0x01
                          12053 ;demo.c:1837: vdp_copier(&cmd);
   41EB 21r2As41          12054 	ld	hl,#_cmd
   41EE E5                12055 	push	hl
   41EF CDr00s00          12056 	call	_vdp_copier
   41F2 F1                12057 	pop	af
                          12058 ;demo.c:1839: cmd.size_x = 108;
   41F3 21r32s41          12059 	ld	hl, #_cmd + 8
   41F6 36 6C             12060 	ld	(hl),#0x6C
   41F8 23                12061 	inc	hl
   41F9 36 00             12062 	ld	(hl),#0x00
                          12063 ;demo.c:1840: cmd.size_y = 60;
   41FB 21r34s41          12064 	ld	hl, #_cmd + 10
   41FE 36 3C             12065 	ld	(hl),#0x3C
   4200 23                12066 	inc	hl
   4201 36 00             12067 	ld	(hl),#0x00
                          12068 ;demo.c:1841: cmd.data = 0;
                          12069 ;demo.c:1842: cmd.argument = 0x00;
   4203 3E 00             12070 	ld	a,#0x00
   4205 32r36s41          12071 	ld	(#_cmd + 12),a
   4208 32r37s41          12072 	ld	(#_cmd + 13),a
                          12073 ;demo.c:1843: cmd.command = 0xd0; 
   420B 01r38s41          12074 	ld	bc,#_cmd + 14
   420E 3E D0             12075 	ld	a,#0xD0
   4210 02                12076 	ld	(bc),a
                          12077 ;demo.c:1844: cmd.source_x = 75;
   4211 21r2As41          12078 	ld	hl,#_cmd
   4214 36 4B             12079 	ld	(hl),#0x4B
   4216 23                12080 	inc	hl
   4217 36 00             12081 	ld	(hl),#0x00
                          12082 ;demo.c:1845: cmd.source_y = 256+110;
   4219 21r2Cs41          12083 	ld	hl, #_cmd + 2
   421C 36 6E             12084 	ld	(hl),#0x6E
   421E 23                12085 	inc	hl
   421F 36 01             12086 	ld	(hl),#0x01
                          12087 ;demo.c:1846: cmd.dest_x = 75;
   4221 21r2Es41          12088 	ld	hl, #_cmd + 4
   4224 36 4B             12089 	ld	(hl),#0x4B
   4226 23                12090 	inc	hl
   4227 36 00             12091 	ld	(hl),#0x00
                          12092 ;demo.c:1847: cmd.dest_y = 40;
   4229 21r30s41          12093 	ld	hl, #_cmd + 6
   422C 36 28             12094 	ld	(hl),#0x28
   422E 23                12095 	inc	hl
   422F 36 00             12096 	ld	(hl),#0x00
                          12097 ;demo.c:1848: vdp_copier(&cmd);
   4231 21r2As41          12098 	ld	hl,#_cmd
   4234 E5                12099 	push	hl
   4235 CDr00s00          12100 	call	_vdp_copier
   4238 F1                12101 	pop	af
                          12102 ;demo.c:1849: cmd.dest_x = 75;
   4239 21r2Es41          12103 	ld	hl, #_cmd + 4
   423C 36 4B             12104 	ld	(hl),#0x4B
   423E 23                12105 	inc	hl
   423F 36 00             12106 	ld	(hl),#0x00
                          12107 ;demo.c:1850: cmd.dest_y = 100;
   4241 21r30s41          12108 	ld	hl, #_cmd + 6
   4244 36 64             12109 	ld	(hl),#0x64
   4246 23                12110 	inc	hl
   4247 36 00             12111 	ld	(hl),#0x00
                          12112 ;demo.c:1851: vdp_copier(&cmd);
   4249 21r2As41          12113 	ld	hl,#_cmd
   424C E5                12114 	push	hl
   424D CDr00s00          12115 	call	_vdp_copier
   4250 F1                12116 	pop	af
                          12117 ;demo.c:1853: pal_load("DSSLOGO PL5",32,0);
   4251 21 00 00          12118 	ld	hl,#0x0000
   4254 E5                12119 	push	hl
   4255 3E 20             12120 	ld	a,#0x20
   4257 F5                12121 	push	af
   4258 33                12122 	inc	sp
   4259 21rB9s44          12123 	ld	hl,#__str_47
   425C E5                12124 	push	hl
   425D CDr37s08          12125 	call	_pal_load
   4260 F1                12126 	pop	af
   4261 F1                12127 	pop	af
   4262 33                12128 	inc	sp
                          12129 ;demo.c:1855: scratch_clear();
   4263 CDr24s08          12130 	call	_scratch_clear
                          12131 ;demo.c:1857: vdp_register(9,130); // 50hz,212
   4266 21 09 82          12132 	ld	hl,#0x8209
   4269 E5                12133 	push	hl
   426A CDr00s00          12134 	call	_vdp_register
   426D F1                12135 	pop	af
                          12136 ;demo.c:1859: install_isr(my_isr);
   426E 21rECs07          12137 	ld	hl,#_my_isr
   4271 E5                12138 	push	hl
   4272 CDr00s00          12139 	call	_install_isr
   4275 F1                12140 	pop	af
                          12141 ;demo.c:1863: while (!quit) {
   4276                   12142 00111$:
   4276 AF                12143 	xor	a,a
   4277 DD B6 FF          12144 	or	a,-1 (ix)
   427A C2r35s43          12145 	jp	NZ,00113$
                          12146 ;demo.c:1865: if (vbicount >= scenetimings[timeindex+1]) {
   427D 21r44s42          12147 	ld	hl,#_timeindex + 0
   4280 4E                12148 	ld	c,(hl)
   4281 0C                12149 	inc	c
   4282 CB 21             12150 	sla	c
   4284 3Er51             12151 	ld	a,#<_scenetimings
   4286 81                12152 	add	a,c
   4287 6F                12153 	ld	l,a
   4288 3Es41             12154 	ld	a,#>_scenetimings
   428A CE 00             12155 	adc	a,#0x00
   428C 67                12156 	ld	h,a
   428D 4E                12157 	ld	c,(hl)
   428E 23                12158 	inc	hl
   428F 46                12159 	ld	b,(hl)
   4290 3Ar26s41          12160 	ld	a,(#_vbicount+0)
   4293 91                12161 	sub	a,c
   4294 3Ar27s41          12162 	ld	a,(#_vbicount+1)
   4297 98                12163 	sbc	a,b
   4298 FArC1s42          12164 	jp	M,00105$
                          12165 ;demo.c:1866: sceneindex++;
   429B FD 21r42s42       12166 	ld	iy,#_sceneindex
   429F FD 34 00          12167 	inc	0 (iy)
   42A2 20 07             12168 	jr	NZ,00153$
   42A4 FD 21r42s42       12169 	ld	iy,#_sceneindex
   42A8 FD 34 01          12170 	inc	1 (iy)
   42AB                   12171 00153$:
                          12172 ;demo.c:1867: timeindex+=2;
   42AB 21r44s42          12173 	ld	hl,#_timeindex
   42AE 7E                12174 	ld	a,(hl)
   42AF C6 02             12175 	add	a,#0x02
   42B1 23                12176 	inc	hl
   42B2 2B                12177 	dec	hl
   42B3 C5                12178 	push	bc
   42B4 4F                12179 	ld	c, a
   42B5 23                12180 	inc	hl
   42B6 7E                12181 	ld	a, (hl)
   42B7 47                12182 	ld	b, a
   42B8 79                12183 	ld	a, c
   42B9 2B                12184 	dec	hl
   42BA 77                12185 	ld	(hl), a
   42BB 78                12186 	ld	a, b
   42BC C1                12187 	pop	bc
   42BD CE 00             12188 	adc	a,#0x00
   42BF 23                12189 	inc	hl
   42C0 77                12190 	ld	(hl),a
   42C1                   12191 00105$:
                          12192 ;demo.c:1870: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   42C1 21r44s42          12193 	ld	hl,#_timeindex + 0
   42C4 4E                12194 	ld	c,(hl)
   42C5 21r45s42          12195 	ld	hl,#_timeindex + 1
   42C8 46                12196 	ld	b,(hl)
   42C9 CB 21             12197 	sla	c
   42CB CB 10             12198 	rl	b
   42CD 21r51s41          12199 	ld	hl,#_scenetimings
   42D0 09                12200 	add	hl,bc
   42D1 4E                12201 	ld	c,(hl)
   42D2 23                12202 	inc	hl
   42D3 46                12203 	ld	b,(hl)
   42D4 3Ar26s41          12204 	ld	a,(#_vbicount+0)
   42D7 91                12205 	sub	a,c
   42D8 3Ar27s41          12206 	ld	a,(#_vbicount+1)
   42DB 98                12207 	sbc	a,b
   42DC FAr21s43          12208 	jp	M,00107$
   42DF 21r44s42          12209 	ld	hl,#_timeindex + 0
   42E2 4E                12210 	ld	c,(hl)
   42E3 0C                12211 	inc	c
   42E4 CB 21             12212 	sla	c
   42E6 3Er51             12213 	ld	a,#<_scenetimings
   42E8 81                12214 	add	a,c
   42E9 6F                12215 	ld	l,a
   42EA 3Es41             12216 	ld	a,#>_scenetimings
   42EC CE 00             12217 	adc	a,#0x00
   42EE 67                12218 	ld	h,a
   42EF 4E                12219 	ld	c,(hl)
   42F0 23                12220 	inc	hl
   42F1 46                12221 	ld	b,(hl)
   42F2 3Ar26s41          12222 	ld	a,(#_vbicount+0)
   42F5 91                12223 	sub	a,c
   42F6 FD 21r26s41       12224 	ld	iy,#_vbicount
   42FA FD 7E 01          12225 	ld	a,1 (iy)
   42FD 98                12226 	sbc	a,b
   42FE F2r21s43          12227 	jp	P,00107$
                          12228 ;demo.c:1871: waitVB();
   4301 76                12229 		halt 
                          12230 ;demo.c:1872: scenepointers[sceneindex]();
   4302 21r42s42          12231 	ld	hl,#_sceneindex + 0
   4305 4E                12232 	ld	c,(hl)
   4306 FD 21r42s42       12233 	ld	iy,#_sceneindex
   430A FD 46 01          12234 	ld	b,1 (iy)
   430D CB 21             12235 	sla	c
   430F CB 10             12236 	rl	b
   4311 21r39s41          12237 	ld	hl,#_scenepointers
   4314 09                12238 	add	hl,bc
   4315 4E                12239 	ld	c,(hl)
   4316 23                12240 	inc	hl
   4317 46                12241 	ld	b,(hl)
   4318 C5                12242 	push	bc
   4319 21r20s43          12243 	ld	hl,#00158$
   431C E5                12244 	push	hl
   431D 69                12245 	ld	l,c
   431E 60                12246 	ld	h,b
   431F E9                12247 	jp	(hl)
   4320                   12248 00158$:
   4320 C1                12249 	pop	bc
   4321                   12250 00107$:
                          12251 ;demo.c:1876: if(space())
   4321 21 08 01          12252 	ld	hl,#0x0108
   4324 E5                12253 	push	hl
   4325 CDr00s00          12254 	call	_ispressed
   4328 F1                12255 	pop	af
   4329 AF                12256 	xor	a,a
   432A B5                12257 	or	a,l
   432B CAr76s42          12258 	jp	Z,00111$
                          12259 ;demo.c:1877: quit=1;
   432E DD 36 FF 01       12260 	ld	-1 (ix),#0x01
   4332 C3r76s42          12261 	jp	00111$
   4335                   12262 00113$:
                          12263 ;demo.c:1880: do_quit();
   4335 CDrF1s3C          12264 	call	_do_quit
   4338 DD F9             12265 	ld	sp,ix
   433A DD E1             12266 	pop	ix
   433C C9                12267 	ret
   433D                   12268 _main_end::
   433D                   12269 __str_27:
   433D 5B 73 74 61 72 74 12270 	.ascii "[starting DSS MSX demosystem]"
        69 6E 67 20 44 53
        53 20 4D 53 58 20
        64 65 6D 6F 73 79
        73 74 65 6D 5D
   435A 0D                12271 	.db 0x0D
   435B 0A                12272 	.db 0x0A
   435C 0D                12273 	.db 0x0D
   435D 0A                12274 	.db 0x0A
   435E 00                12275 	.db 0x00
   435F                   12276 __str_28:
   435F 69 6E 69 74 20 73 12277 	.ascii "init sweet PSG bleeps..."
        77 65 65 74 20 50
        53 47 20 62 6C 65
        65 70 73 2E 2E 2E
   4377 00                12278 	.db 0x00
   4378                   12279 __str_29:
   4378 64 6F 6E 65 2E    12280 	.ascii "done."
   437D 0D                12281 	.db 0x0D
   437E 0A                12282 	.db 0x0A
   437F 00                12283 	.db 0x00
   4380                   12284 __str_30:
   4380 64 65 74 65 63 74 12285 	.ascii "detecting ya vdp type..."
        69 6E 67 20 79 61
        20 76 64 70 20 74
        79 70 65 2E 2E 2E
   4398 0D                12286 	.db 0x0D
   4399 0A                12287 	.db 0x0A
   439A 00                12288 	.db 0x00
   439B                   12289 __str_31:
   439B 76 64 70 32 20 66 12290 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   43B6 0D                12291 	.db 0x0D
   43B7 0A                12292 	.db 0x0A
   43B8 00                12293 	.db 0x00
   43B9                   12294 __str_32:
   43B9 20 76 64 70 31 20 12295 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   43C5 0D                12296 	.db 0x0D
   43C6 0A                12297 	.db 0x0A
   43C7 53 6F 72 72 79 2C 12298 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   43F5 20 56 52 41 4D 2E 12299 	.ascii " VRAM."
   43FB 0D                12300 	.db 0x0D
   43FC 0A                12301 	.db 0x0A
   43FD 00                12302 	.db 0x00
   43FE                   12303 __str_33:
   43FE 54 57 49 53 54 45 12304 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   4409 00                12305 	.db 0x00
   440A                   12306 __str_34:
   440A 4C 46 20 20 20 20 12307 	.ascii "LF      PL5"
        20 20 50 4C 35
   4415 00                12308 	.db 0x00
   4416                   12309 __str_35:
   4416 42 4F 58 45 53 20 12310 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   4421 00                12311 	.db 0x00
   4422                   12312 __str_36:
   4422 42 55 4C 42 53 20 12313 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   442D 00                12314 	.db 0x00
   442E                   12315 __str_37:
   442E 43 52 45 44 49 54 12316 	.ascii "CREDIT1 PL6"
        31 20 50 4C 36
   4439 00                12317 	.db 0x00
   443A                   12318 __str_38:
   443A 61 6C 6C 20 67 6F 12319 	.ascii "all good, starting the demo!"
        6F 64 2C 20 73 74
        61 72 74 69 6E 67
        20 74 68 65 20 64
        65 6D 6F 21
   4456 0D                12320 	.db 0x0D
   4457 0A                12321 	.db 0x0A
   4458 00                12322 	.db 0x00
   4459                   12323 __str_39:
   4459 4C 4F 41 44 49 4E 12324 	.ascii "LOADING PCK"
        47 20 50 43 4B
   4464 00                12325 	.db 0x00
   4465                   12326 __str_40:
   4465 42 55 4C 42 53 20 12327 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   4470 00                12328 	.db 0x00
   4471                   12329 __str_41:
   4471 54 57 49 53 54 45 12330 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   447C 00                12331 	.db 0x00
   447D                   12332 __str_42:
   447D 43 52 45 44 49 54 12333 	.ascii "CREDIT1 PCK"
        31 20 50 43 4B
   4488 00                12334 	.db 0x00
   4489                   12335 __str_43:
   4489 43 52 45 44 49 54 12336 	.ascii "CREDIT2 PCK"
        32 20 50 43 4B
   4494 00                12337 	.db 0x00
   4495                   12338 __str_44:
   4495 43 52 45 44 49 54 12339 	.ascii "CREDIT3 PCK"
        33 20 50 43 4B
   44A0 00                12340 	.db 0x00
   44A1                   12341 __str_45:
   44A1 42 4F 58 45 53 20 12342 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   44AC 00                12343 	.db 0x00
   44AD                   12344 __str_46:
   44AD 44 53 53 4C 4F 47 12345 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   44B8 00                12346 	.db 0x00
   44B9                   12347 __str_47:
   44B9 44 53 53 4C 4F 47 12348 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   44C4 00                12349 	.db 0x00
                          12350 	.area _CODE
                          12351 	.area _CABS
