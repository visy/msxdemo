                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Thu Mar  1 19:00:27 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _tritiles
                             15 	.globl _drawtilescreen
                             16 	.globl _drawtritile
                             17 	.globl _boxes
                             18 	.globl _drawbox
                             19 	.globl _animplay
                             20 	.globl _bulbs
                             21 	.globl _twister
                             22 	.globl _font
                             23 	.globl _drawsine
                             24 	.globl _drawstr
                             25 	.globl _do_letter_tall
                             26 	.globl _do_letter
                             27 	.globl _raster_effu
                             28 	.globl _do_blocks
                             29 	.globl _do_ymmm
                             30 	.globl _fadein
                             31 	.globl _pck_load
                             32 	.globl _raw_load
                             33 	.globl _pause
                             34 	.globl _pal_load
                             35 	.globl _scratch_clear
                             36 	.globl _ge5_load
                             37 	.globl _color_isr
                             38 	.globl _my_isr
                             39 	.globl _isNthBitSet
                             40 	.globl _scenetimings
                             41 	.globl _scenepointers
                             42 	.globl _timeindex
                             43 	.globl _sceneindex
                             44 	.globl _triframes
                             45 	.globl _tripaltick
                             46 	.globl _tripal
                             47 	.globl _tri_inited
                             48 	.globl _prevbox_of
                             49 	.globl _boxes_of
                             50 	.globl _pbt
                             51 	.globl _pbx
                             52 	.globl _bonc
                             53 	.globl _bo
                             54 	.globl _bt
                             55 	.globl _by
                             56 	.globl _bx
                             57 	.globl _boxi
                             58 	.globl _boxes_y
                             59 	.globl _boxes_x
                             60 	.globl _prevy
                             61 	.globl _prevx
                             62 	.globl _buffer
                             63 	.globl _boxes_init
                             64 	.globl _anim_init
                             65 	.globl _enderdir
                             66 	.globl _ender
                             67 	.globl _ff2
                             68 	.globl _ff1
                             69 	.globl _bulbflipper
                             70 	.globl _twinited
                             71 	.globl _ff
                             72 	.globl _ly
                             73 	.globl _lx
                             74 	.globl _linenum
                             75 	.globl _flof
                             76 	.globl _btab
                             77 	.globl _bty
                             78 	.globl _btx
                             79 	.globl _bsy
                             80 	.globl _bsx
                             81 	.globl _block_init
                             82 	.globl _cc
                             83 	.globl _yofff
                             84 	.globl _cmd
                             85 	.globl _tick
                             86 	.globl _vbicount
                             87 	.globl _boxes_palette
                             88 	.globl _tf_palette
                             89 	.globl _twister_palette
                             90 	.globl _block_palette
                             91 	.globl _cur_palette
                             92 	.globl _scratch
                             93 	.globl _packbuffer
                             94 	.globl _tri_lookup_y
                             95 	.globl _tri_lookup_x
                             96 	.globl _sintab
                             97 	.globl _font_w
                             98 	.globl _font_y
                             99 	.globl _font_x
                            100 	.globl _tri_side2
                            101 	.globl _tri_side1
                            102 	.globl _tri_dia
                            103 	.globl _tri_up
                            104 	.globl _tri_center
                            105 	.globl _sintabx
                            106 ;--------------------------------------------------------
                            107 ; special function registers
                            108 ;--------------------------------------------------------
                            109 ;--------------------------------------------------------
                            110 ;  ram data
                            111 ;--------------------------------------------------------
                            112 	.area _DATA
   0000                     113 _sintab::
   0000                     114 	.ds 256
   0100                     115 _tri_lookup_x::
   0100                     116 	.ds 32
   0120                     117 _tri_lookup_y::
   0120                     118 	.ds 64
   0160                     119 _packbuffer::
   0160                     120 	.ds 16000
   3FE0                     121 _scratch::
   3FE0                     122 	.ds 128
   4060                     123 _cur_palette::
   4060                     124 	.ds 32
   4080                     125 _block_palette::
   4080                     126 	.ds 32
   40A0                     127 _twister_palette::
   40A0                     128 	.ds 32
   40C0                     129 _tf_palette::
   40C0                     130 	.ds 32
   40E0                     131 _boxes_palette::
   40E0                     132 	.ds 32
   4100                     133 _vbicount::
   4100                     134 	.ds 2
   4102                     135 _tick::
   4102                     136 	.ds 2
   4104                     137 _cmd::
   4104                     138 	.ds 15
   4113                     139 _isNthBitSet_mask_1_1:
   4113                     140 	.ds 8
   411B                     141 _yofff::
   411B                     142 	.ds 1
   411C                     143 _cc::
   411C                     144 	.ds 1
   411D                     145 _flipper:
   411D                     146 	.ds 2
   411F                     147 _ymmmf:
   411F                     148 	.ds 2
   4121                     149 _block_init::
   4121                     150 	.ds 1
   4122                     151 _bsx::
   4122                     152 	.ds 2
   4124                     153 _bsy::
   4124                     154 	.ds 2
   4126                     155 _btx::
   4126                     156 	.ds 2
   4128                     157 _bty::
   4128                     158 	.ds 2
   412A                     159 _btab::
   412A                     160 	.ds 32
   414A                     161 _flof::
   414A                     162 	.ds 2
   414C                     163 _linenum::
   414C                     164 	.ds 2
   414E                     165 _lx::
   414E                     166 	.ds 1
   414F                     167 _ly::
   414F                     168 	.ds 1
   4150                     169 _ff::
   4150                     170 	.ds 2
   4152                     171 _twinited::
   4152                     172 	.ds 2
   4154                     173 _bulbflipper::
   4154                     174 	.ds 2
   4156                     175 _ff1::
   4156                     176 	.ds 2
   4158                     177 _ff2::
   4158                     178 	.ds 2
   415A                     179 _ender::
   415A                     180 	.ds 2
   415C                     181 _enderdir::
   415C                     182 	.ds 2
   415E                     183 _xo:
   415E                     184 	.ds 2
   4160                     185 _yo:
   4160                     186 	.ds 2
   4162                     187 _po:
   4162                     188 	.ds 2
   4164                     189 _frames:
   4164                     190 	.ds 2
   4166                     191 _anim_init::
   4166                     192 	.ds 2
   4168                     193 _boxes_init::
   4168                     194 	.ds 1
   4169                     195 _buffer::
   4169                     196 	.ds 2
   416B                     197 _prevx::
   416B                     198 	.ds 2
   416D                     199 _prevy::
   416D                     200 	.ds 2
   416F                     201 _boxes_x::
   416F                     202 	.ds 4
   4173                     203 _boxes_y::
   4173                     204 	.ds 8
   417B                     205 _boxi::
   417B                     206 	.ds 1
   417C                     207 _bx::
   417C                     208 	.ds 2
   417E                     209 _by::
   417E                     210 	.ds 2
   4180                     211 _bt::
   4180                     212 	.ds 2
   4182                     213 _bo::
   4182                     214 	.ds 2
   4184                     215 _bonc::
   4184                     216 	.ds 2
   4186                     217 _pbx::
   4186                     218 	.ds 2
   4188                     219 _pbt::
   4188                     220 	.ds 2
   418A                     221 _boxes_of::
   418A                     222 	.ds 8
   4192                     223 _prevbox_of::
   4192                     224 	.ds 1
   4193                     225 _tri_inited::
   4193                     226 	.ds 1
   4194                     227 _tripal::
   4194                     228 	.ds 9
   419D                     229 _tripaltick::
   419D                     230 	.ds 1
   419E                     231 _triframes::
   419E                     232 	.ds 2
   41A0                     233 _sceneindex::
   41A0                     234 	.ds 2
   41A2                     235 _timeindex::
   41A2                     236 	.ds 2
   41A4                     237 _scenepointers::
   41A4                     238 	.ds 12
   41B0                     239 _scenetimings::
   41B0                     240 	.ds 24
                            241 ;--------------------------------------------------------
                            242 ; overlayable items in  ram 
                            243 ;--------------------------------------------------------
                            244 	.area _OVERLAY
                            245 ;--------------------------------------------------------
                            246 ; external initialized ram data
                            247 ;--------------------------------------------------------
                            248 ;--------------------------------------------------------
                            249 ; global & static initialisations
                            250 ;--------------------------------------------------------
                            251 	.area _HOME
                            252 	.area _GSINIT
                            253 	.area _GSFINAL
                            254 	.area _GSINIT
                            255 ;demo.c:131: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r13s41            256 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            257 	call	__initrleblock
   0006 08                  258 	.db	8
   0007 01 02 04 08 10 20   259 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  260 	.db	0
                            261 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            262 	ld	hl,#_sintab
   0013 CDr00s00            263 	call	__initrleblock
   0016 3B                  264 	.db	59
   0017 00 03 06 09 0C 0F   265 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   266 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   267 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   268 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   269 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   270 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   271 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            272 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               273 	.db	#-5,#0x7E
   0054 01                  274 	.db	1
   0055 7F                  275 	.db	0x7F
   0056 FB 7E               276 	.db	#-5,#0x7E
   0058 75                  277 	.db	117
   0059 7D 7D 7C 7B 7B 7A   278 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   279 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   280 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   281 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   282 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   283 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   284 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   285 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   286 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   287 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   288 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   289 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   290 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   291 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      292 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               293 	.db	#-5,#0x82
   00D0 01                  294 	.db	1
   00D1 81                  295 	.db	0x81
   00D2 FB 82               296 	.db	#-5,#0x82
   00D4 3A                  297 	.db	58
   00D5 83 83 84 85 85 86   298 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   299 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   300 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   301 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   302 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   303 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   304 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               305 	.db	0xFA, 0xFD
   010F 00                  306 	.db	0
                            307 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            308 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            309 	call	__initrleblock
   0116 E0 00               310 	.db	#-32,#0x00
   0118 00                  311 	.db	0
                            312 ;demo.c:114: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            313 	ld	hl,#_tri_lookup_y
   011C CDr00s00            314 	call	__initrleblock
   011F C0 00               315 	.db	#-64,#0x00
   0121 00                  316 	.db	0
                            317 ;demo.c:116: uint8_t packbuffer[16000] = {0};
   0122 21r60s01            318 	ld	hl,#_packbuffer
   0125 CDr00s00            319 	call	__initrleblock
   0128 81 00               320 	.db	#-127,#0x00
   012A 81 00               321 	.db	#-127,#0x00
   012C 81 00               322 	.db	#-127,#0x00
   012E 81 00               323 	.db	#-127,#0x00
   0130 81 00               324 	.db	#-127,#0x00
   0132 81 00               325 	.db	#-127,#0x00
   0134 81 00               326 	.db	#-127,#0x00
   0136 81 00               327 	.db	#-127,#0x00
   0138 81 00               328 	.db	#-127,#0x00
   013A 81 00               329 	.db	#-127,#0x00
   013C 81 00               330 	.db	#-127,#0x00
   013E 81 00               331 	.db	#-127,#0x00
   0140 81 00               332 	.db	#-127,#0x00
   0142 81 00               333 	.db	#-127,#0x00
   0144 81 00               334 	.db	#-127,#0x00
   0146 81 00               335 	.db	#-127,#0x00
   0148 81 00               336 	.db	#-127,#0x00
   014A 81 00               337 	.db	#-127,#0x00
   014C 81 00               338 	.db	#-127,#0x00
   014E 81 00               339 	.db	#-127,#0x00
   0150 81 00               340 	.db	#-127,#0x00
   0152 81 00               341 	.db	#-127,#0x00
   0154 81 00               342 	.db	#-127,#0x00
   0156 81 00               343 	.db	#-127,#0x00
   0158 81 00               344 	.db	#-127,#0x00
   015A 81 00               345 	.db	#-127,#0x00
   015C 81 00               346 	.db	#-127,#0x00
   015E 81 00               347 	.db	#-127,#0x00
   0160 81 00               348 	.db	#-127,#0x00
   0162 81 00               349 	.db	#-127,#0x00
   0164 81 00               350 	.db	#-127,#0x00
   0166 81 00               351 	.db	#-127,#0x00
   0168 81 00               352 	.db	#-127,#0x00
   016A 81 00               353 	.db	#-127,#0x00
   016C 81 00               354 	.db	#-127,#0x00
   016E 81 00               355 	.db	#-127,#0x00
   0170 81 00               356 	.db	#-127,#0x00
   0172 81 00               357 	.db	#-127,#0x00
   0174 81 00               358 	.db	#-127,#0x00
   0176 81 00               359 	.db	#-127,#0x00
   0178 81 00               360 	.db	#-127,#0x00
   017A 81 00               361 	.db	#-127,#0x00
   017C 81 00               362 	.db	#-127,#0x00
   017E 81 00               363 	.db	#-127,#0x00
   0180 81 00               364 	.db	#-127,#0x00
   0182 81 00               365 	.db	#-127,#0x00
   0184 81 00               366 	.db	#-127,#0x00
   0186 81 00               367 	.db	#-127,#0x00
   0188 81 00               368 	.db	#-127,#0x00
   018A 81 00               369 	.db	#-127,#0x00
   018C 81 00               370 	.db	#-127,#0x00
   018E 81 00               371 	.db	#-127,#0x00
   0190 81 00               372 	.db	#-127,#0x00
   0192 81 00               373 	.db	#-127,#0x00
   0194 81 00               374 	.db	#-127,#0x00
   0196 81 00               375 	.db	#-127,#0x00
   0198 81 00               376 	.db	#-127,#0x00
   019A 81 00               377 	.db	#-127,#0x00
   019C 81 00               378 	.db	#-127,#0x00
   019E 81 00               379 	.db	#-127,#0x00
   01A0 81 00               380 	.db	#-127,#0x00
   01A2 81 00               381 	.db	#-127,#0x00
   01A4 81 00               382 	.db	#-127,#0x00
   01A6 81 00               383 	.db	#-127,#0x00
   01A8 81 00               384 	.db	#-127,#0x00
   01AA 81 00               385 	.db	#-127,#0x00
   01AC 81 00               386 	.db	#-127,#0x00
   01AE 81 00               387 	.db	#-127,#0x00
   01B0 81 00               388 	.db	#-127,#0x00
   01B2 81 00               389 	.db	#-127,#0x00
   01B4 81 00               390 	.db	#-127,#0x00
   01B6 81 00               391 	.db	#-127,#0x00
   01B8 81 00               392 	.db	#-127,#0x00
   01BA 81 00               393 	.db	#-127,#0x00
   01BC 81 00               394 	.db	#-127,#0x00
   01BE 81 00               395 	.db	#-127,#0x00
   01C0 81 00               396 	.db	#-127,#0x00
   01C2 81 00               397 	.db	#-127,#0x00
   01C4 81 00               398 	.db	#-127,#0x00
   01C6 81 00               399 	.db	#-127,#0x00
   01C8 81 00               400 	.db	#-127,#0x00
   01CA 81 00               401 	.db	#-127,#0x00
   01CC 81 00               402 	.db	#-127,#0x00
   01CE 81 00               403 	.db	#-127,#0x00
   01D0 81 00               404 	.db	#-127,#0x00
   01D2 81 00               405 	.db	#-127,#0x00
   01D4 81 00               406 	.db	#-127,#0x00
   01D6 81 00               407 	.db	#-127,#0x00
   01D8 81 00               408 	.db	#-127,#0x00
   01DA 81 00               409 	.db	#-127,#0x00
   01DC 81 00               410 	.db	#-127,#0x00
   01DE 81 00               411 	.db	#-127,#0x00
   01E0 81 00               412 	.db	#-127,#0x00
   01E2 81 00               413 	.db	#-127,#0x00
   01E4 81 00               414 	.db	#-127,#0x00
   01E6 81 00               415 	.db	#-127,#0x00
   01E8 81 00               416 	.db	#-127,#0x00
   01EA 81 00               417 	.db	#-127,#0x00
   01EC 81 00               418 	.db	#-127,#0x00
   01EE 81 00               419 	.db	#-127,#0x00
   01F0 81 00               420 	.db	#-127,#0x00
   01F2 81 00               421 	.db	#-127,#0x00
   01F4 81 00               422 	.db	#-127,#0x00
   01F6 81 00               423 	.db	#-127,#0x00
   01F8 81 00               424 	.db	#-127,#0x00
   01FA 81 00               425 	.db	#-127,#0x00
   01FC 81 00               426 	.db	#-127,#0x00
   01FE 81 00               427 	.db	#-127,#0x00
   0200 81 00               428 	.db	#-127,#0x00
   0202 81 00               429 	.db	#-127,#0x00
   0204 81 00               430 	.db	#-127,#0x00
   0206 81 00               431 	.db	#-127,#0x00
   0208 81 00               432 	.db	#-127,#0x00
   020A 81 00               433 	.db	#-127,#0x00
   020C 81 00               434 	.db	#-127,#0x00
   020E 81 00               435 	.db	#-127,#0x00
   0210 81 00               436 	.db	#-127,#0x00
   0212 81 00               437 	.db	#-127,#0x00
   0214 81 00               438 	.db	#-127,#0x00
   0216 81 00               439 	.db	#-127,#0x00
   0218 81 00               440 	.db	#-127,#0x00
   021A 81 00               441 	.db	#-127,#0x00
   021C 81 00               442 	.db	#-127,#0x00
   021E 81 00               443 	.db	#-127,#0x00
   0220 81 00               444 	.db	#-127,#0x00
   0222 83 00               445 	.db	#-125,#0x00
   0224 00                  446 	.db	0
                            447 ;demo.c:125: volatile int vbicount=0;
   0225 FD 21r00s41         448 	ld	iy,#_vbicount
   0229 FD 36 00 00         449 	ld	0 (iy),#0x00
   022D FD 21r00s41         450 	ld	iy,#_vbicount
   0231 FD 36 01 00         451 	ld	1 (iy),#0x00
                            452 ;demo.c:126: volatile int tick=0;
   0235 FD 21r02s41         453 	ld	iy,#_tick
   0239 FD 36 00 00         454 	ld	0 (iy),#0x00
   023D FD 21r02s41         455 	ld	iy,#_tick
   0241 FD 36 01 00         456 	ld	1 (iy),#0x00
                            457 ;demo.c:326: uint8_t yofff = 0;
   0245 FD 21r1Bs41         458 	ld	iy,#_yofff
   0249 FD 36 00 00         459 	ld	0 (iy),#0x00
                            460 ;demo.c:327: uint8_t cc = 0;
   024D FD 21r1Cs41         461 	ld	iy,#_cc
   0251 FD 36 00 00         462 	ld	0 (iy),#0x00
                            463 ;demo.c:328: static int flipper = 0;
   0255 FD 21r1Ds41         464 	ld	iy,#_flipper
   0259 FD 36 00 00         465 	ld	0 (iy),#0x00
   025D FD 21r1Ds41         466 	ld	iy,#_flipper
   0261 FD 36 01 00         467 	ld	1 (iy),#0x00
                            468 ;demo.c:329: static int ymmmf = 0;
   0265 FD 21r1Fs41         469 	ld	iy,#_ymmmf
   0269 FD 36 00 00         470 	ld	0 (iy),#0x00
   026D FD 21r1Fs41         471 	ld	iy,#_ymmmf
   0271 FD 36 01 00         472 	ld	1 (iy),#0x00
                            473 ;demo.c:360: char block_init = 0;
   0275 FD 21r21s41         474 	ld	iy,#_block_init
   0279 FD 36 00 00         475 	ld	0 (iy),#0x00
                            476 ;demo.c:362: int bsx = 0;
   027D FD 21r22s41         477 	ld	iy,#_bsx
   0281 FD 36 00 00         478 	ld	0 (iy),#0x00
   0285 FD 21r22s41         479 	ld	iy,#_bsx
   0289 FD 36 01 00         480 	ld	1 (iy),#0x00
                            481 ;demo.c:363: int bsy = 0;
   028D FD 21r24s41         482 	ld	iy,#_bsy
   0291 FD 36 00 00         483 	ld	0 (iy),#0x00
   0295 FD 21r24s41         484 	ld	iy,#_bsy
   0299 FD 36 01 00         485 	ld	1 (iy),#0x00
                            486 ;demo.c:364: int btx = 0;
   029D FD 21r26s41         487 	ld	iy,#_btx
   02A1 FD 36 00 00         488 	ld	0 (iy),#0x00
   02A5 FD 21r26s41         489 	ld	iy,#_btx
   02A9 FD 36 01 00         490 	ld	1 (iy),#0x00
                            491 ;demo.c:365: int bty = 0;
   02AD FD 21r28s41         492 	ld	iy,#_bty
   02B1 FD 36 00 00         493 	ld	0 (iy),#0x00
   02B5 FD 21r28s41         494 	ld	iy,#_bty
   02B9 FD 36 01 00         495 	ld	1 (iy),#0x00
                            496 ;demo.c:367: int btab[16] = {0};
   02BD 21r2As41            497 	ld	hl,#_btab
   02C0 CDr00s00            498 	call	__initrleblock
   02C3 E0 00               499 	.db	#-32,#0x00
   02C5 00                  500 	.db	0
                            501 ;demo.c:369: int flof = 0;
   02C6 FD 21r4As41         502 	ld	iy,#_flof
   02CA FD 36 00 00         503 	ld	0 (iy),#0x00
   02CE FD 21r4As41         504 	ld	iy,#_flof
   02D2 FD 36 01 00         505 	ld	1 (iy),#0x00
                            506 ;demo.c:418: int linenum = 0;
   02D6 FD 21r4Cs41         507 	ld	iy,#_linenum
   02DA FD 36 00 00         508 	ld	0 (iy),#0x00
   02DE FD 21r4Cs41         509 	ld	iy,#_linenum
   02E2 FD 36 01 00         510 	ld	1 (iy),#0x00
                            511 ;demo.c:476: uint8_t lx = 0;
   02E6 FD 21r4Es41         512 	ld	iy,#_lx
   02EA FD 36 00 00         513 	ld	0 (iy),#0x00
                            514 ;demo.c:477: uint8_t ly = 0;
   02EE FD 21r4Fs41         515 	ld	iy,#_ly
   02F2 FD 36 00 00         516 	ld	0 (iy),#0x00
                            517 ;demo.c:540: int ff = 0;
   02F6 FD 21r50s41         518 	ld	iy,#_ff
   02FA FD 36 00 00         519 	ld	0 (iy),#0x00
   02FE FD 21r50s41         520 	ld	iy,#_ff
   0302 FD 36 01 00         521 	ld	1 (iy),#0x00
                            522 ;demo.c:541: int twinited = 0;
   0306 FD 21r52s41         523 	ld	iy,#_twinited
   030A FD 36 00 00         524 	ld	0 (iy),#0x00
   030E FD 21r52s41         525 	ld	iy,#_twinited
   0312 FD 36 01 00         526 	ld	1 (iy),#0x00
                            527 ;demo.c:590: int bulbflipper = 1;
   0316 FD 21r54s41         528 	ld	iy,#_bulbflipper
   031A FD 36 00 01         529 	ld	0 (iy),#0x01
   031E FD 21r54s41         530 	ld	iy,#_bulbflipper
   0322 FD 36 01 00         531 	ld	1 (iy),#0x00
                            532 ;demo.c:592: int ff1,ff2 = 0;
   0326 FD 21r58s41         533 	ld	iy,#_ff2
   032A FD 36 00 00         534 	ld	0 (iy),#0x00
   032E FD 21r58s41         535 	ld	iy,#_ff2
   0332 FD 36 01 00         536 	ld	1 (iy),#0x00
                            537 ;demo.c:593: int ender = 212;
   0336 FD 21r5As41         538 	ld	iy,#_ender
   033A FD 36 00 D4         539 	ld	0 (iy),#0xD4
   033E FD 21r5As41         540 	ld	iy,#_ender
   0342 FD 36 01 00         541 	ld	1 (iy),#0x00
                            542 ;demo.c:594: int enderdir = -1;
   0346 FD 21r5Cs41         543 	ld	iy,#_enderdir
   034A FD 36 00 FF         544 	ld	0 (iy),#0xFF
   034E FD 21r5Cs41         545 	ld	iy,#_enderdir
   0352 FD 36 01 FF         546 	ld	1 (iy),#0xFF
                            547 ;demo.c:651: static int xo = 0;
   0356 FD 21r5Es41         548 	ld	iy,#_xo
   035A FD 36 00 00         549 	ld	0 (iy),#0x00
   035E FD 21r5Es41         550 	ld	iy,#_xo
   0362 FD 36 01 00         551 	ld	1 (iy),#0x00
                            552 ;demo.c:652: static int yo = 0;
   0366 FD 21r60s41         553 	ld	iy,#_yo
   036A FD 36 00 00         554 	ld	0 (iy),#0x00
   036E FD 21r60s41         555 	ld	iy,#_yo
   0372 FD 36 01 00         556 	ld	1 (iy),#0x00
                            557 ;demo.c:653: static int po = 0;
   0376 FD 21r62s41         558 	ld	iy,#_po
   037A FD 36 00 00         559 	ld	0 (iy),#0x00
   037E FD 21r62s41         560 	ld	iy,#_po
   0382 FD 36 01 00         561 	ld	1 (iy),#0x00
                            562 ;demo.c:654: static int frames = 0;
   0386 FD 21r64s41         563 	ld	iy,#_frames
   038A FD 36 00 00         564 	ld	0 (iy),#0x00
   038E FD 21r64s41         565 	ld	iy,#_frames
   0392 FD 36 01 00         566 	ld	1 (iy),#0x00
                            567 ;demo.c:656: int anim_init = 0;
   0396 FD 21r66s41         568 	ld	iy,#_anim_init
   039A FD 36 00 00         569 	ld	0 (iy),#0x00
   039E FD 21r66s41         570 	ld	iy,#_anim_init
   03A2 FD 36 01 00         571 	ld	1 (iy),#0x00
                            572 ;demo.c:749: uint8_t boxes_init = 0;
   03A6 FD 21r68s41         573 	ld	iy,#_boxes_init
   03AA FD 36 00 00         574 	ld	0 (iy),#0x00
                            575 ;demo.c:750: int buffer = 1;
   03AE FD 21r69s41         576 	ld	iy,#_buffer
   03B2 FD 36 00 01         577 	ld	0 (iy),#0x01
   03B6 FD 21r69s41         578 	ld	iy,#_buffer
   03BA FD 36 01 00         579 	ld	1 (iy),#0x00
                            580 ;demo.c:751: int prevx = -1;
   03BE FD 21r6Bs41         581 	ld	iy,#_prevx
   03C2 FD 36 00 FF         582 	ld	0 (iy),#0xFF
   03C6 FD 21r6Bs41         583 	ld	iy,#_prevx
   03CA FD 36 01 FF         584 	ld	1 (iy),#0xFF
                            585 ;demo.c:753: uint8_t boxes_x[4] = {0,36,0,36};
   03CE 21r6Fs41            586 	ld	hl,#_boxes_x
   03D1 CDr00s00            587 	call	__initrleblock
   03D4 04                  588 	.db	4
   03D5 00 24 00 24         589 	.db	0x00, 0x24, 0x00, 0x24
   03D9 00                  590 	.db	0
                            591 ;demo.c:754: int boxes_y[4] = {768,768,768+36,768+36};
   03DA 21r73s41            592 	ld	hl,#_boxes_y
   03DD CDr00s00            593 	call	__initrleblock
   03E0 08                  594 	.db	8
   03E1 00 03 00 03 24 03   595 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   03E9 00                  596 	.db	0
                            597 ;demo.c:755: uint8_t boxi = 0;
   03EA FD 21r7Bs41         598 	ld	iy,#_boxi
   03EE FD 36 00 00         599 	ld	0 (iy),#0x00
                            600 ;demo.c:756: int bx = 220;
   03F2 FD 21r7Cs41         601 	ld	iy,#_bx
   03F6 FD 36 00 DC         602 	ld	0 (iy),#0xDC
   03FA FD 21r7Cs41         603 	ld	iy,#_bx
   03FE FD 36 01 00         604 	ld	1 (iy),#0x00
                            605 ;demo.c:757: int by = 84;
   0402 FD 21r7Es41         606 	ld	iy,#_by
   0406 FD 36 00 54         607 	ld	0 (iy),#0x54
   040A FD 21r7Es41         608 	ld	iy,#_by
   040E FD 36 01 00         609 	ld	1 (iy),#0x00
                            610 ;demo.c:775: int bt = 0;
   0412 FD 21r80s41         611 	ld	iy,#_bt
   0416 FD 36 00 00         612 	ld	0 (iy),#0x00
   041A FD 21r80s41         613 	ld	iy,#_bt
   041E FD 36 01 00         614 	ld	1 (iy),#0x00
                            615 ;demo.c:776: int bo = 0;
   0422 FD 21r82s41         616 	ld	iy,#_bo
   0426 FD 36 00 00         617 	ld	0 (iy),#0x00
   042A FD 21r82s41         618 	ld	iy,#_bo
   042E FD 36 01 00         619 	ld	1 (iy),#0x00
                            620 ;demo.c:778: int bonc = 0;
   0432 FD 21r84s41         621 	ld	iy,#_bonc
   0436 FD 36 00 00         622 	ld	0 (iy),#0x00
   043A FD 21r84s41         623 	ld	iy,#_bonc
   043E FD 36 01 00         624 	ld	1 (iy),#0x00
                            625 ;demo.c:779: int pbx = 0;
   0442 FD 21r86s41         626 	ld	iy,#_pbx
   0446 FD 36 00 00         627 	ld	0 (iy),#0x00
   044A FD 21r86s41         628 	ld	iy,#_pbx
   044E FD 36 01 00         629 	ld	1 (iy),#0x00
                            630 ;demo.c:780: int pbt = 0;
   0452 FD 21r88s41         631 	ld	iy,#_pbt
   0456 FD 36 00 00         632 	ld	0 (iy),#0x00
   045A FD 21r88s41         633 	ld	iy,#_pbt
   045E FD 36 01 00         634 	ld	1 (iy),#0x00
                            635 ;demo.c:782: int boxes_of[4] = {0,0,6,0};
   0462 21r8As41            636 	ld	hl,#_boxes_of
   0465 CDr00s00            637 	call	__initrleblock
   0468 08                  638 	.db	8
   0469 00 00 00 00 06 00   639 	.db	0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00
        00 00
   0471 00                  640 	.db	0
                            641 ;demo.c:783: uint8_t prevbox_of = 0;
   0472 FD 21r92s41         642 	ld	iy,#_prevbox_of
   0476 FD 36 00 00         643 	ld	0 (iy),#0x00
                            644 ;demo.c:879: uint8_t tri_inited = 0;
   047A FD 21r93s41         645 	ld	iy,#_tri_inited
   047E FD 36 00 00         646 	ld	0 (iy),#0x00
                            647 ;demo.c:907: char tripal[9] = {
   0482 21r94s41            648 	ld	hl,#_tripal
   0485 CDr00s00            649 	call	__initrleblock
   0488 09                  650 	.db	9
   0489 02 02 01 01 02 03   651 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0491 02                  652 	.db	0x02
   0492 00                  653 	.db	0
                            654 ;demo.c:913: uint8_t tripaltick = 0;
   0493 FD 21r9Ds41         655 	ld	iy,#_tripaltick
   0497 FD 36 00 00         656 	ld	0 (iy),#0x00
                            657 ;demo.c:915: int triframes = 0;
   049B FD 21r9Es41         658 	ld	iy,#_triframes
   049F FD 36 00 00         659 	ld	0 (iy),#0x00
   04A3 FD 21r9Es41         660 	ld	iy,#_triframes
   04A7 FD 36 01 00         661 	ld	1 (iy),#0x00
                            662 ;demo.c:1020: int sceneindex = 0;
   04AB FD 21rA0s41         663 	ld	iy,#_sceneindex
   04AF FD 36 00 00         664 	ld	0 (iy),#0x00
   04B3 FD 21rA0s41         665 	ld	iy,#_sceneindex
   04B7 FD 36 01 00         666 	ld	1 (iy),#0x00
                            667 ;demo.c:1021: int timeindex = 0;
   04BB FD 21rA2s41         668 	ld	iy,#_timeindex
   04BF FD 36 00 00         669 	ld	0 (iy),#0x00
   04C3 FD 21rA2s41         670 	ld	iy,#_timeindex
   04C7 FD 36 01 00         671 	ld	1 (iy),#0x00
                            672 ;demo.c:1023: void (*scenepointers[6])() = {
   04CB 21rA4s41            673 	ld	hl,#_scenepointers
   04CE 36r27               674 	ld	(hl),#<_fadein
   04D0 23                  675 	inc	hl
   04D1 36s0A               676 	ld	(hl),#>_fadein
   04D3 01rA6s41            677 	ld	bc,#_scenepointers + 2
   04D6 69                  678 	ld	l,c
   04D7 60                  679 	ld	h,b
   04D8 36r8F               680 	ld	(hl),#<_bulbs
   04DA 23                  681 	inc	hl
   04DB 36s13               682 	ld	(hl),#>_bulbs
   04DD 21rA8s41            683 	ld	hl, #_scenepointers + 4
   04E0 36r23               684 	ld	(hl),#<_twister
   04E2 23                  685 	inc	hl
   04E3 36s12               686 	ld	(hl),#>_twister
   04E5 01rAAs41            687 	ld	bc,#_scenepointers + 6
   04E8 69                  688 	ld	l,c
   04E9 60                  689 	ld	h,b
   04EA 36r13               690 	ld	(hl),#<_boxes
   04EC 23                  691 	inc	hl
   04ED 36s19               692 	ld	(hl),#>_boxes
   04EF 21rACs41            693 	ld	hl, #_scenepointers + 8
   04F2 36rA1               694 	ld	(hl),#<_tritiles
   04F4 23                  695 	inc	hl
   04F5 36s1D               696 	ld	(hl),#>_tritiles
   04F7 01rAEs41            697 	ld	bc,#_scenepointers + 10
   04FA 69                  698 	ld	l,c
   04FB 60                  699 	ld	h,b
   04FC 36rDF               700 	ld	(hl),#<_animplay
   04FE 23                  701 	inc	hl
   04FF 36s15               702 	ld	(hl),#>_animplay
                            703 ;demo.c:1032: int scenetimings[12] = {
   0501 21rB0s41            704 	ld	hl,#_scenetimings
   0504 CDr00s00            705 	call	__initrleblock
   0507 18                  706 	.db	24
   0508 00 00 40 00 C0 00   707 	.db	0x00, 0x00, 0x40, 0x00, 0xC0, 0x00, 0x20, 0x03
        20 03
   0510 20 03 DC 05 DC 05   708 	.db	0x20, 0x03, 0xDC, 0x05, 0xDC, 0x05, 0x50, 0x14
        50 14
   0518 98 08 A0 0F A0 0F   709 	.db	0x98, 0x08, 0xA0, 0x0F, 0xA0, 0x0F, 0x98, 0x3A
        98 3A
   0520 00                  710 	.db	0
                            711 ;--------------------------------------------------------
                            712 ; Home
                            713 ;--------------------------------------------------------
                            714 	.area _HOME
                            715 	.area _HOME
                            716 ;--------------------------------------------------------
                            717 ; code
                            718 ;--------------------------------------------------------
                            719 	.area _CODE
                            720 ;demo.c:130: int isNthBitSet (unsigned char c, int n) {
                            721 ;	---------------------------------
                            722 ; Function isNthBitSet
                            723 ; ---------------------------------
   0000                     724 _isNthBitSet_start::
   0000                     725 _isNthBitSet:
   0000 DD E5               726 	push	ix
   0002 DD 21 00 00         727 	ld	ix,#0
   0006 DD 39               728 	add	ix,sp
                            729 ;demo.c:132: return ((c & mask[n]) != 0);
   0008 3Er13               730 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            731 	add	a,5 (ix)
   000D 4F                  732 	ld	c,a
   000E 3Es41               733 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            734 	adc	a,6 (ix)
   0013 47                  735 	ld	b,a
   0014 0A                  736 	ld	a,(bc)
   0015 DD A6 04            737 	and	a,4 (ix)
   0018 20 04               738 	jr	NZ,00103$
   001A 3E 01               739 	ld	a,#0x01
   001C 18 01               740 	jr	00104$
   001E                     741 00103$:
   001E AF                  742 	xor	a,a
   001F                     743 00104$:
   001F B7                  744 	or	a,a
   0020 D6 01               745 	sub	a,#0x01
   0022 3E 00               746 	ld	a,#0x00
   0024 17                  747 	rla
   0025 4F                  748 	ld	c,a
   0026 69                  749 	ld	l,c
   0027 26 00               750 	ld	h,#0x00
   0029 DD E1               751 	pop	ix
   002B C9                  752 	ret
   002C                     753 _isNthBitSet_end::
   002C                     754 _sintabx:
   002C 78 00               755 	.dw #0x0078
   002E 7A 00               756 	.dw #0x007A
   0030 7D 00               757 	.dw #0x007D
   0032 80 00               758 	.dw #0x0080
   0034 83 00               759 	.dw #0x0083
   0036 86 00               760 	.dw #0x0086
   0038 89 00               761 	.dw #0x0089
   003A 8C 00               762 	.dw #0x008C
   003C 8F 00               763 	.dw #0x008F
   003E 92 00               764 	.dw #0x0092
   0040 95 00               765 	.dw #0x0095
   0042 98 00               766 	.dw #0x0098
   0044 9A 00               767 	.dw #0x009A
   0046 9D 00               768 	.dw #0x009D
   0048 A0 00               769 	.dw #0x00A0
   004A A3 00               770 	.dw #0x00A3
   004C A5 00               771 	.dw #0x00A5
   004E A8 00               772 	.dw #0x00A8
   0050 AB 00               773 	.dw #0x00AB
   0052 AD 00               774 	.dw #0x00AD
   0054 B0 00               775 	.dw #0x00B0
   0056 B3 00               776 	.dw #0x00B3
   0058 B5 00               777 	.dw #0x00B5
   005A B8 00               778 	.dw #0x00B8
   005C BA 00               779 	.dw #0x00BA
   005E BD 00               780 	.dw #0x00BD
   0060 BF 00               781 	.dw #0x00BF
   0062 C1 00               782 	.dw #0x00C1
   0064 C4 00               783 	.dw #0x00C4
   0066 C6 00               784 	.dw #0x00C6
   0068 C8 00               785 	.dw #0x00C8
   006A CA 00               786 	.dw #0x00CA
   006C CC 00               787 	.dw #0x00CC
   006E CE 00               788 	.dw #0x00CE
   0070 D0 00               789 	.dw #0x00D0
   0072 D2 00               790 	.dw #0x00D2
   0074 D4 00               791 	.dw #0x00D4
   0076 D6 00               792 	.dw #0x00D6
   0078 D8 00               793 	.dw #0x00D8
   007A DA 00               794 	.dw #0x00DA
   007C DB 00               795 	.dw #0x00DB
   007E DD 00               796 	.dw #0x00DD
   0080 DE 00               797 	.dw #0x00DE
   0082 E0 00               798 	.dw #0x00E0
   0084 E1 00               799 	.dw #0x00E1
   0086 E3 00               800 	.dw #0x00E3
   0088 E4 00               801 	.dw #0x00E4
   008A E5 00               802 	.dw #0x00E5
   008C E6 00               803 	.dw #0x00E6
   008E E7 00               804 	.dw #0x00E7
   0090 E8 00               805 	.dw #0x00E8
   0092 E9 00               806 	.dw #0x00E9
   0094 EA 00               807 	.dw #0x00EA
   0096 EB 00               808 	.dw #0x00EB
   0098 EC 00               809 	.dw #0x00EC
   009A ED 00               810 	.dw #0x00ED
   009C ED 00               811 	.dw #0x00ED
   009E EE 00               812 	.dw #0x00EE
   00A0 EE 00               813 	.dw #0x00EE
   00A2 EF 00               814 	.dw #0x00EF
   00A4 EF 00               815 	.dw #0x00EF
   00A6 EF 00               816 	.dw #0x00EF
   00A8 EF 00               817 	.dw #0x00EF
   00AA EF 00               818 	.dw #0x00EF
   00AC F0 00               819 	.dw #0x00F0
   00AE EF 00               820 	.dw #0x00EF
   00B0 EF 00               821 	.dw #0x00EF
   00B2 EF 00               822 	.dw #0x00EF
   00B4 EF 00               823 	.dw #0x00EF
   00B6 EF 00               824 	.dw #0x00EF
   00B8 EE 00               825 	.dw #0x00EE
   00BA EE 00               826 	.dw #0x00EE
   00BC ED 00               827 	.dw #0x00ED
   00BE ED 00               828 	.dw #0x00ED
   00C0 EC 00               829 	.dw #0x00EC
   00C2 EB 00               830 	.dw #0x00EB
   00C4 EA 00               831 	.dw #0x00EA
   00C6 E9 00               832 	.dw #0x00E9
   00C8 E8 00               833 	.dw #0x00E8
   00CA E7 00               834 	.dw #0x00E7
   00CC E6 00               835 	.dw #0x00E6
   00CE E5 00               836 	.dw #0x00E5
   00D0 E4 00               837 	.dw #0x00E4
   00D2 E3 00               838 	.dw #0x00E3
   00D4 E1 00               839 	.dw #0x00E1
   00D6 E0 00               840 	.dw #0x00E0
   00D8 DE 00               841 	.dw #0x00DE
   00DA DD 00               842 	.dw #0x00DD
   00DC DB 00               843 	.dw #0x00DB
   00DE DA 00               844 	.dw #0x00DA
   00E0 D8 00               845 	.dw #0x00D8
   00E2 D6 00               846 	.dw #0x00D6
   00E4 D4 00               847 	.dw #0x00D4
   00E6 D2 00               848 	.dw #0x00D2
   00E8 D0 00               849 	.dw #0x00D0
   00EA CE 00               850 	.dw #0x00CE
   00EC CC 00               851 	.dw #0x00CC
   00EE CA 00               852 	.dw #0x00CA
   00F0 C8 00               853 	.dw #0x00C8
   00F2 C6 00               854 	.dw #0x00C6
   00F4 C4 00               855 	.dw #0x00C4
   00F6 C1 00               856 	.dw #0x00C1
   00F8 BF 00               857 	.dw #0x00BF
   00FA BD 00               858 	.dw #0x00BD
   00FC BA 00               859 	.dw #0x00BA
   00FE B8 00               860 	.dw #0x00B8
   0100 B5 00               861 	.dw #0x00B5
   0102 B3 00               862 	.dw #0x00B3
   0104 B0 00               863 	.dw #0x00B0
   0106 AD 00               864 	.dw #0x00AD
   0108 AB 00               865 	.dw #0x00AB
   010A A8 00               866 	.dw #0x00A8
   010C A5 00               867 	.dw #0x00A5
   010E A3 00               868 	.dw #0x00A3
   0110 A0 00               869 	.dw #0x00A0
   0112 9D 00               870 	.dw #0x009D
   0114 9A 00               871 	.dw #0x009A
   0116 98 00               872 	.dw #0x0098
   0118 95 00               873 	.dw #0x0095
   011A 92 00               874 	.dw #0x0092
   011C 8F 00               875 	.dw #0x008F
   011E 8C 00               876 	.dw #0x008C
   0120 89 00               877 	.dw #0x0089
   0122 86 00               878 	.dw #0x0086
   0124 83 00               879 	.dw #0x0083
   0126 80 00               880 	.dw #0x0080
   0128 7D 00               881 	.dw #0x007D
   012A 7A 00               882 	.dw #0x007A
   012C 78 00               883 	.dw #0x0078
   012E 75 00               884 	.dw #0x0075
   0130 72 00               885 	.dw #0x0072
   0132 6F 00               886 	.dw #0x006F
   0134 6C 00               887 	.dw #0x006C
   0136 69 00               888 	.dw #0x0069
   0138 66 00               889 	.dw #0x0066
   013A 63 00               890 	.dw #0x0063
   013C 60 00               891 	.dw #0x0060
   013E 5D 00               892 	.dw #0x005D
   0140 5A 00               893 	.dw #0x005A
   0142 57 00               894 	.dw #0x0057
   0144 55 00               895 	.dw #0x0055
   0146 52 00               896 	.dw #0x0052
   0148 4F 00               897 	.dw #0x004F
   014A 4C 00               898 	.dw #0x004C
   014C 4A 00               899 	.dw #0x004A
   014E 47 00               900 	.dw #0x0047
   0150 44 00               901 	.dw #0x0044
   0152 42 00               902 	.dw #0x0042
   0154 3F 00               903 	.dw #0x003F
   0156 3C 00               904 	.dw #0x003C
   0158 3A 00               905 	.dw #0x003A
   015A 37 00               906 	.dw #0x0037
   015C 35 00               907 	.dw #0x0035
   015E 32 00               908 	.dw #0x0032
   0160 30 00               909 	.dw #0x0030
   0162 2E 00               910 	.dw #0x002E
   0164 2B 00               911 	.dw #0x002B
   0166 29 00               912 	.dw #0x0029
   0168 27 00               913 	.dw #0x0027
   016A 25 00               914 	.dw #0x0025
   016C 23 00               915 	.dw #0x0023
   016E 21 00               916 	.dw #0x0021
   0170 1F 00               917 	.dw #0x001F
   0172 1D 00               918 	.dw #0x001D
   0174 1B 00               919 	.dw #0x001B
   0176 19 00               920 	.dw #0x0019
   0178 17 00               921 	.dw #0x0017
   017A 15 00               922 	.dw #0x0015
   017C 14 00               923 	.dw #0x0014
   017E 12 00               924 	.dw #0x0012
   0180 11 00               925 	.dw #0x0011
   0182 0F 00               926 	.dw #0x000F
   0184 0E 00               927 	.dw #0x000E
   0186 0C 00               928 	.dw #0x000C
   0188 0B 00               929 	.dw #0x000B
   018A 0A 00               930 	.dw #0x000A
   018C 09 00               931 	.dw #0x0009
   018E 08 00               932 	.dw #0x0008
   0190 07 00               933 	.dw #0x0007
   0192 06 00               934 	.dw #0x0006
   0194 05 00               935 	.dw #0x0005
   0196 04 00               936 	.dw #0x0004
   0198 03 00               937 	.dw #0x0003
   019A 02 00               938 	.dw #0x0002
   019C 02 00               939 	.dw #0x0002
   019E 01 00               940 	.dw #0x0001
   01A0 01 00               941 	.dw #0x0001
   01A2 00 00               942 	.dw #0x0000
   01A4 00 00               943 	.dw #0x0000
   01A6 00 00               944 	.dw #0x0000
   01A8 00 00               945 	.dw #0x0000
   01AA 00 00               946 	.dw #0x0000
   01AC 00 00               947 	.dw #0x0000
   01AE 00 00               948 	.dw #0x0000
   01B0 00 00               949 	.dw #0x0000
   01B2 00 00               950 	.dw #0x0000
   01B4 00 00               951 	.dw #0x0000
   01B6 00 00               952 	.dw #0x0000
   01B8 01 00               953 	.dw #0x0001
   01BA 01 00               954 	.dw #0x0001
   01BC 02 00               955 	.dw #0x0002
   01BE 02 00               956 	.dw #0x0002
   01C0 03 00               957 	.dw #0x0003
   01C2 04 00               958 	.dw #0x0004
   01C4 05 00               959 	.dw #0x0005
   01C6 06 00               960 	.dw #0x0006
   01C8 07 00               961 	.dw #0x0007
   01CA 08 00               962 	.dw #0x0008
   01CC 09 00               963 	.dw #0x0009
   01CE 0A 00               964 	.dw #0x000A
   01D0 0B 00               965 	.dw #0x000B
   01D2 0C 00               966 	.dw #0x000C
   01D4 0E 00               967 	.dw #0x000E
   01D6 0F 00               968 	.dw #0x000F
   01D8 11 00               969 	.dw #0x0011
   01DA 12 00               970 	.dw #0x0012
   01DC 14 00               971 	.dw #0x0014
   01DE 15 00               972 	.dw #0x0015
   01E0 17 00               973 	.dw #0x0017
   01E2 19 00               974 	.dw #0x0019
   01E4 1B 00               975 	.dw #0x001B
   01E6 1D 00               976 	.dw #0x001D
   01E8 1F 00               977 	.dw #0x001F
   01EA 21 00               978 	.dw #0x0021
   01EC 23 00               979 	.dw #0x0023
   01EE 25 00               980 	.dw #0x0025
   01F0 27 00               981 	.dw #0x0027
   01F2 29 00               982 	.dw #0x0029
   01F4 2B 00               983 	.dw #0x002B
   01F6 2E 00               984 	.dw #0x002E
   01F8 30 00               985 	.dw #0x0030
   01FA 32 00               986 	.dw #0x0032
   01FC 35 00               987 	.dw #0x0035
   01FE 37 00               988 	.dw #0x0037
   0200 3A 00               989 	.dw #0x003A
   0202 3C 00               990 	.dw #0x003C
   0204 3F 00               991 	.dw #0x003F
   0206 42 00               992 	.dw #0x0042
   0208 44 00               993 	.dw #0x0044
   020A 47 00               994 	.dw #0x0047
   020C 4A 00               995 	.dw #0x004A
   020E 4C 00               996 	.dw #0x004C
   0210 4F 00               997 	.dw #0x004F
   0212 52 00               998 	.dw #0x0052
   0214 55 00               999 	.dw #0x0055
   0216 57 00              1000 	.dw #0x0057
   0218 5A 00              1001 	.dw #0x005A
   021A 5D 00              1002 	.dw #0x005D
   021C 60 00              1003 	.dw #0x0060
   021E 63 00              1004 	.dw #0x0063
   0220 66 00              1005 	.dw #0x0066
   0222 69 00              1006 	.dw #0x0069
   0224 6C 00              1007 	.dw #0x006C
   0226 6F 00              1008 	.dw #0x006F
   0228 72 00              1009 	.dw #0x0072
   022A 75 00              1010 	.dw #0x0075
   022C                    1011 _tri_center:
   022C 08                 1012 	.db #0x08
   022D 0A                 1013 	.db #0x0A
   022E 12                 1014 	.db #0x12
   022F 10                 1015 	.db #0x10
   0230 00                 1016 	.db #0x00
   0231 02                 1017 	.db #0x02
   0232 08                 1018 	.db #0x08
   0233 0A                 1019 	.db #0x0A
   0234 0B                 1020 	.db #0x0B
   0235 09                 1021 	.db #0x09
   0236 03                 1022 	.db #0x03
   0237 01                 1023 	.db #0x01
   0238 11                 1024 	.db #0x11
   0239 13                 1025 	.db #0x13
   023A 0B                 1026 	.db #0x0B
   023B 09                 1027 	.db #0x09
   023C 0A                 1028 	.db #0x0A
   023D 12                 1029 	.db #0x12
   023E 10                 1030 	.db #0x10
   023F 00                 1031 	.db #0x00
   0240 02                 1032 	.db #0x02
   0241 08                 1033 	.db #0x08
   0242 0A                 1034 	.db #0x0A
   0243 12                 1035 	.db #0x12
   0244 13                 1036 	.db #0x13
   0245 0B                 1037 	.db #0x0B
   0246 09                 1038 	.db #0x09
   0247 03                 1039 	.db #0x03
   0248 01                 1040 	.db #0x01
   0249 11                 1041 	.db #0x11
   024A 13                 1042 	.db #0x13
   024B 0B                 1043 	.db #0x0B
   024C 12                 1044 	.db #0x12
   024D 10                 1045 	.db #0x10
   024E 00                 1046 	.db #0x00
   024F 02                 1047 	.db #0x02
   0250 08                 1048 	.db #0x08
   0251 0A                 1049 	.db #0x0A
   0252 12                 1050 	.db #0x12
   0253 10                 1051 	.db #0x10
   0254 11                 1052 	.db #0x11
   0255 13                 1053 	.db #0x13
   0256 0B                 1054 	.db #0x0B
   0257 09                 1055 	.db #0x09
   0258 03                 1056 	.db #0x03
   0259 01                 1057 	.db #0x01
   025A 11                 1058 	.db #0x11
   025B 13                 1059 	.db #0x13
   025C 10                 1060 	.db #0x10
   025D 00                 1061 	.db #0x00
   025E 02                 1062 	.db #0x02
   025F 08                 1063 	.db #0x08
   0260 0A                 1064 	.db #0x0A
   0261 12                 1065 	.db #0x12
   0262 10                 1066 	.db #0x10
   0263 00                 1067 	.db #0x00
   0264 01                 1068 	.db #0x01
   0265 11                 1069 	.db #0x11
   0266 13                 1070 	.db #0x13
   0267 0B                 1071 	.db #0x0B
   0268 09                 1072 	.db #0x09
   0269 03                 1073 	.db #0x03
   026A 01                 1074 	.db #0x01
   026B 11                 1075 	.db #0x11
   026C 00                 1076 	.db #0x00
   026D 02                 1077 	.db #0x02
   026E 08                 1078 	.db #0x08
   026F 0A                 1079 	.db #0x0A
   0270 12                 1080 	.db #0x12
   0271 10                 1081 	.db #0x10
   0272 00                 1082 	.db #0x00
   0273 02                 1083 	.db #0x02
   0274 03                 1084 	.db #0x03
   0275 01                 1085 	.db #0x01
   0276 11                 1086 	.db #0x11
   0277 13                 1087 	.db #0x13
   0278 0B                 1088 	.db #0x0B
   0279 09                 1089 	.db #0x09
   027A 03                 1090 	.db #0x03
   027B 01                 1091 	.db #0x01
   027C 02                 1092 	.db #0x02
   027D 08                 1093 	.db #0x08
   027E 0A                 1094 	.db #0x0A
   027F 12                 1095 	.db #0x12
   0280 10                 1096 	.db #0x10
   0281 00                 1097 	.db #0x00
   0282 02                 1098 	.db #0x02
   0283 08                 1099 	.db #0x08
   0284 09                 1100 	.db #0x09
   0285 03                 1101 	.db #0x03
   0286 01                 1102 	.db #0x01
   0287 11                 1103 	.db #0x11
   0288 13                 1104 	.db #0x13
   0289 0B                 1105 	.db #0x0B
   028A 09                 1106 	.db #0x09
   028B 03                 1107 	.db #0x03
   028C 01                 1108 	.db #0x01
   028D 0B                 1109 	.db #0x0B
   028E 09                 1110 	.db #0x09
   028F 11                 1111 	.db #0x11
   0290 13                 1112 	.db #0x13
   0291 03                 1113 	.db #0x03
   0292 01                 1114 	.db #0x01
   0293 0B                 1115 	.db #0x0B
   0294 0A                 1116 	.db #0x0A
   0295 00                 1117 	.db #0x00
   0296 02                 1118 	.db #0x02
   0297 12                 1119 	.db #0x12
   0298 10                 1120 	.db #0x10
   0299 08                 1121 	.db #0x08
   029A 0A                 1122 	.db #0x0A
   029B 00                 1123 	.db #0x00
   029C 03                 1124 	.db #0x03
   029D 01                 1125 	.db #0x01
   029E 0B                 1126 	.db #0x0B
   029F 09                 1127 	.db #0x09
   02A0 11                 1128 	.db #0x11
   02A1 13                 1129 	.db #0x13
   02A2 03                 1130 	.db #0x03
   02A3 01                 1131 	.db #0x01
   02A4 00                 1132 	.db #0x00
   02A5 02                 1133 	.db #0x02
   02A6 12                 1134 	.db #0x12
   02A7 10                 1135 	.db #0x10
   02A8 08                 1136 	.db #0x08
   02A9 0A                 1137 	.db #0x0A
   02AA 00                 1138 	.db #0x00
   02AB 02                 1139 	.db #0x02
   02AC 13                 1140 	.db #0x13
   02AD 03                 1141 	.db #0x03
   02AE 01                 1142 	.db #0x01
   02AF 0B                 1143 	.db #0x0B
   02B0 09                 1144 	.db #0x09
   02B1 11                 1145 	.db #0x11
   02B2 13                 1146 	.db #0x13
   02B3 03                 1147 	.db #0x03
   02B4 02                 1148 	.db #0x02
   02B5 12                 1149 	.db #0x12
   02B6 10                 1150 	.db #0x10
   02B7 08                 1151 	.db #0x08
   02B8 0A                 1152 	.db #0x0A
   02B9 00                 1153 	.db #0x00
   02BA 02                 1154 	.db #0x02
   02BB 12                 1155 	.db #0x12
   02BC 11                 1156 	.db #0x11
   02BD 13                 1157 	.db #0x13
   02BE 03                 1158 	.db #0x03
   02BF 01                 1159 	.db #0x01
   02C0 0B                 1160 	.db #0x0B
   02C1 09                 1161 	.db #0x09
   02C2 11                 1162 	.db #0x11
   02C3 13                 1163 	.db #0x13
   02C4 12                 1164 	.db #0x12
   02C5 10                 1165 	.db #0x10
   02C6 08                 1166 	.db #0x08
   02C7 0A                 1167 	.db #0x0A
   02C8 00                 1168 	.db #0x00
   02C9 02                 1169 	.db #0x02
   02CA 12                 1170 	.db #0x12
   02CB 10                 1171 	.db #0x10
   02CC 09                 1172 	.db #0x09
   02CD 11                 1173 	.db #0x11
   02CE 13                 1174 	.db #0x13
   02CF 03                 1175 	.db #0x03
   02D0 01                 1176 	.db #0x01
   02D1 0B                 1177 	.db #0x0B
   02D2 09                 1178 	.db #0x09
   02D3 11                 1179 	.db #0x11
   02D4 10                 1180 	.db #0x10
   02D5 08                 1181 	.db #0x08
   02D6 0A                 1182 	.db #0x0A
   02D7 00                 1183 	.db #0x00
   02D8 02                 1184 	.db #0x02
   02D9 12                 1185 	.db #0x12
   02DA 10                 1186 	.db #0x10
   02DB 08                 1187 	.db #0x08
   02DC 0B                 1188 	.db #0x0B
   02DD 09                 1189 	.db #0x09
   02DE 11                 1190 	.db #0x11
   02DF 13                 1191 	.db #0x13
   02E0 03                 1192 	.db #0x03
   02E1 01                 1193 	.db #0x01
   02E2 0B                 1194 	.db #0x0B
   02E3 09                 1195 	.db #0x09
   02E4 08                 1196 	.db #0x08
   02E5 0A                 1197 	.db #0x0A
   02E6 00                 1198 	.db #0x00
   02E7 02                 1199 	.db #0x02
   02E8 12                 1200 	.db #0x12
   02E9 10                 1201 	.db #0x10
   02EA 08                 1202 	.db #0x08
   02EB 0A                 1203 	.db #0x0A
   02EC                    1204 _tri_up:
   02EC 0A                 1205 	.db #0x0A
   02ED 12                 1206 	.db #0x12
   02EE 10                 1207 	.db #0x10
   02EF 00                 1208 	.db #0x00
   02F0 02                 1209 	.db #0x02
   02F1 08                 1210 	.db #0x08
   02F2 0A                 1211 	.db #0x0A
   02F3 12                 1212 	.db #0x12
   02F4 13                 1213 	.db #0x13
   02F5 0B                 1214 	.db #0x0B
   02F6 09                 1215 	.db #0x09
   02F7 03                 1216 	.db #0x03
   02F8 01                 1217 	.db #0x01
   02F9 11                 1218 	.db #0x11
   02FA 13                 1219 	.db #0x13
   02FB 0B                 1220 	.db #0x0B
   02FC 12                 1221 	.db #0x12
   02FD 10                 1222 	.db #0x10
   02FE 00                 1223 	.db #0x00
   02FF 02                 1224 	.db #0x02
   0300 08                 1225 	.db #0x08
   0301 0A                 1226 	.db #0x0A
   0302 12                 1227 	.db #0x12
   0303 10                 1228 	.db #0x10
   0304 11                 1229 	.db #0x11
   0305 13                 1230 	.db #0x13
   0306 0B                 1231 	.db #0x0B
   0307 09                 1232 	.db #0x09
   0308 03                 1233 	.db #0x03
   0309 01                 1234 	.db #0x01
   030A 11                 1235 	.db #0x11
   030B 13                 1236 	.db #0x13
   030C 10                 1237 	.db #0x10
   030D 00                 1238 	.db #0x00
   030E 02                 1239 	.db #0x02
   030F 08                 1240 	.db #0x08
   0310 0A                 1241 	.db #0x0A
   0311 12                 1242 	.db #0x12
   0312 10                 1243 	.db #0x10
   0313 00                 1244 	.db #0x00
   0314 01                 1245 	.db #0x01
   0315 11                 1246 	.db #0x11
   0316 13                 1247 	.db #0x13
   0317 0B                 1248 	.db #0x0B
   0318 09                 1249 	.db #0x09
   0319 03                 1250 	.db #0x03
   031A 01                 1251 	.db #0x01
   031B 11                 1252 	.db #0x11
   031C 00                 1253 	.db #0x00
   031D 02                 1254 	.db #0x02
   031E 08                 1255 	.db #0x08
   031F 0A                 1256 	.db #0x0A
   0320 12                 1257 	.db #0x12
   0321 10                 1258 	.db #0x10
   0322 00                 1259 	.db #0x00
   0323 02                 1260 	.db #0x02
   0324 03                 1261 	.db #0x03
   0325 01                 1262 	.db #0x01
   0326 11                 1263 	.db #0x11
   0327 13                 1264 	.db #0x13
   0328 0B                 1265 	.db #0x0B
   0329 09                 1266 	.db #0x09
   032A 03                 1267 	.db #0x03
   032B 01                 1268 	.db #0x01
   032C 02                 1269 	.db #0x02
   032D 08                 1270 	.db #0x08
   032E 0A                 1271 	.db #0x0A
   032F 12                 1272 	.db #0x12
   0330 10                 1273 	.db #0x10
   0331 00                 1274 	.db #0x00
   0332 02                 1275 	.db #0x02
   0333 08                 1276 	.db #0x08
   0334 09                 1277 	.db #0x09
   0335 03                 1278 	.db #0x03
   0336 01                 1279 	.db #0x01
   0337 11                 1280 	.db #0x11
   0338 13                 1281 	.db #0x13
   0339 0B                 1282 	.db #0x0B
   033A 09                 1283 	.db #0x09
   033B 03                 1284 	.db #0x03
   033C 08                 1285 	.db #0x08
   033D 0A                 1286 	.db #0x0A
   033E 12                 1287 	.db #0x12
   033F 10                 1288 	.db #0x10
   0340 00                 1289 	.db #0x00
   0341 02                 1290 	.db #0x02
   0342 08                 1291 	.db #0x08
   0343 0A                 1292 	.db #0x0A
   0344 0B                 1293 	.db #0x0B
   0345 09                 1294 	.db #0x09
   0346 03                 1295 	.db #0x03
   0347 01                 1296 	.db #0x01
   0348 11                 1297 	.db #0x11
   0349 13                 1298 	.db #0x13
   034A 0B                 1299 	.db #0x0B
   034B 09                 1300 	.db #0x09
   034C 0A                 1301 	.db #0x0A
   034D 12                 1302 	.db #0x12
   034E 10                 1303 	.db #0x10
   034F 00                 1304 	.db #0x00
   0350 02                 1305 	.db #0x02
   0351 08                 1306 	.db #0x08
   0352 0A                 1307 	.db #0x0A
   0353 12                 1308 	.db #0x12
   0354 13                 1309 	.db #0x13
   0355 0B                 1310 	.db #0x0B
   0356 09                 1311 	.db #0x09
   0357 03                 1312 	.db #0x03
   0358 01                 1313 	.db #0x01
   0359 11                 1314 	.db #0x11
   035A 13                 1315 	.db #0x13
   035B 0B                 1316 	.db #0x0B
   035C 12                 1317 	.db #0x12
   035D 10                 1318 	.db #0x10
   035E 00                 1319 	.db #0x00
   035F 02                 1320 	.db #0x02
   0360 08                 1321 	.db #0x08
   0361 0A                 1322 	.db #0x0A
   0362 12                 1323 	.db #0x12
   0363 10                 1324 	.db #0x10
   0364 11                 1325 	.db #0x11
   0365 13                 1326 	.db #0x13
   0366 0B                 1327 	.db #0x0B
   0367 09                 1328 	.db #0x09
   0368 03                 1329 	.db #0x03
   0369 01                 1330 	.db #0x01
   036A 11                 1331 	.db #0x11
   036B 13                 1332 	.db #0x13
   036C 10                 1333 	.db #0x10
   036D 00                 1334 	.db #0x00
   036E 02                 1335 	.db #0x02
   036F 08                 1336 	.db #0x08
   0370 0A                 1337 	.db #0x0A
   0371 12                 1338 	.db #0x12
   0372 10                 1339 	.db #0x10
   0373 00                 1340 	.db #0x00
   0374 01                 1341 	.db #0x01
   0375 11                 1342 	.db #0x11
   0376 13                 1343 	.db #0x13
   0377 0B                 1344 	.db #0x0B
   0378 09                 1345 	.db #0x09
   0379 03                 1346 	.db #0x03
   037A 01                 1347 	.db #0x01
   037B 11                 1348 	.db #0x11
   037C 00                 1349 	.db #0x00
   037D 02                 1350 	.db #0x02
   037E 08                 1351 	.db #0x08
   037F 0A                 1352 	.db #0x0A
   0380 12                 1353 	.db #0x12
   0381 10                 1354 	.db #0x10
   0382 00                 1355 	.db #0x00
   0383 02                 1356 	.db #0x02
   0384 03                 1357 	.db #0x03
   0385 01                 1358 	.db #0x01
   0386 11                 1359 	.db #0x11
   0387 13                 1360 	.db #0x13
   0388 0B                 1361 	.db #0x0B
   0389 09                 1362 	.db #0x09
   038A 03                 1363 	.db #0x03
   038B 01                 1364 	.db #0x01
   038C 02                 1365 	.db #0x02
   038D 08                 1366 	.db #0x08
   038E 0A                 1367 	.db #0x0A
   038F 12                 1368 	.db #0x12
   0390 10                 1369 	.db #0x10
   0391 00                 1370 	.db #0x00
   0392 02                 1371 	.db #0x02
   0393 08                 1372 	.db #0x08
   0394 09                 1373 	.db #0x09
   0395 03                 1374 	.db #0x03
   0396 01                 1375 	.db #0x01
   0397 11                 1376 	.db #0x11
   0398 13                 1377 	.db #0x13
   0399 0B                 1378 	.db #0x0B
   039A 09                 1379 	.db #0x09
   039B 03                 1380 	.db #0x03
   039C 08                 1381 	.db #0x08
   039D 0A                 1382 	.db #0x0A
   039E 12                 1383 	.db #0x12
   039F 10                 1384 	.db #0x10
   03A0 00                 1385 	.db #0x00
   03A1 02                 1386 	.db #0x02
   03A2 08                 1387 	.db #0x08
   03A3 0A                 1388 	.db #0x0A
   03A4 0B                 1389 	.db #0x0B
   03A5 09                 1390 	.db #0x09
   03A6 03                 1391 	.db #0x03
   03A7 01                 1392 	.db #0x01
   03A8 11                 1393 	.db #0x11
   03A9 13                 1394 	.db #0x13
   03AA 0B                 1395 	.db #0x0B
   03AB 09                 1396 	.db #0x09
   03AC                    1397 _tri_dia:
   03AC 05                 1398 	.db #0x05
   03AD 1B                 1399 	.db #0x1B
   03AE 0F                 1400 	.db #0x0F
   03AF 1D                 1401 	.db #0x1D
   03B0 15                 1402 	.db #0x15
   03B1 19                 1403 	.db #0x19
   03B2 05                 1404 	.db #0x05
   03B3 1B                 1405 	.db #0x1B
   03B4 0F                 1406 	.db #0x0F
   03B5 1D                 1407 	.db #0x1D
   03B6 15                 1408 	.db #0x15
   03B7 19                 1409 	.db #0x19
   03B8 05                 1410 	.db #0x05
   03B9 1B                 1411 	.db #0x1B
   03BA 0F                 1412 	.db #0x0F
   03BB 1D                 1413 	.db #0x1D
   03BC 1D                 1414 	.db #0x1D
   03BD 05                 1415 	.db #0x05
   03BE 19                 1416 	.db #0x19
   03BF 0F                 1417 	.db #0x0F
   03C0 1B                 1418 	.db #0x1B
   03C1 15                 1419 	.db #0x15
   03C2 1D                 1420 	.db #0x1D
   03C3 05                 1421 	.db #0x05
   03C4 19                 1422 	.db #0x19
   03C5 0F                 1423 	.db #0x0F
   03C6 1B                 1424 	.db #0x1B
   03C7 15                 1425 	.db #0x15
   03C8 1D                 1426 	.db #0x1D
   03C9 05                 1427 	.db #0x05
   03CA 19                 1428 	.db #0x19
   03CB 0F                 1429 	.db #0x0F
   03CC 0F                 1430 	.db #0x0F
   03CD 1D                 1431 	.db #0x1D
   03CE 15                 1432 	.db #0x15
   03CF 19                 1433 	.db #0x19
   03D0 05                 1434 	.db #0x05
   03D1 1B                 1435 	.db #0x1B
   03D2 0F                 1436 	.db #0x0F
   03D3 1D                 1437 	.db #0x1D
   03D4 15                 1438 	.db #0x15
   03D5 19                 1439 	.db #0x19
   03D6 05                 1440 	.db #0x05
   03D7 1B                 1441 	.db #0x1B
   03D8 0F                 1442 	.db #0x0F
   03D9 1D                 1443 	.db #0x1D
   03DA 15                 1444 	.db #0x15
   03DB 19                 1445 	.db #0x19
   03DC 19                 1446 	.db #0x19
   03DD 0F                 1447 	.db #0x0F
   03DE 1B                 1448 	.db #0x1B
   03DF 15                 1449 	.db #0x15
   03E0 1D                 1450 	.db #0x1D
   03E1 05                 1451 	.db #0x05
   03E2 19                 1452 	.db #0x19
   03E3 0F                 1453 	.db #0x0F
   03E4 1B                 1454 	.db #0x1B
   03E5 15                 1455 	.db #0x15
   03E6 1D                 1456 	.db #0x1D
   03E7 05                 1457 	.db #0x05
   03E8 19                 1458 	.db #0x19
   03E9 0F                 1459 	.db #0x0F
   03EA 1B                 1460 	.db #0x1B
   03EB 15                 1461 	.db #0x15
   03EC 15                 1462 	.db #0x15
   03ED 19                 1463 	.db #0x19
   03EE 05                 1464 	.db #0x05
   03EF 1B                 1465 	.db #0x1B
   03F0 0F                 1466 	.db #0x0F
   03F1 1D                 1467 	.db #0x1D
   03F2 15                 1468 	.db #0x15
   03F3 19                 1469 	.db #0x19
   03F4 05                 1470 	.db #0x05
   03F5 1B                 1471 	.db #0x1B
   03F6 0F                 1472 	.db #0x0F
   03F7 1D                 1473 	.db #0x1D
   03F8 15                 1474 	.db #0x15
   03F9 19                 1475 	.db #0x19
   03FA 05                 1476 	.db #0x05
   03FB 1B                 1477 	.db #0x1B
   03FC 1B                 1478 	.db #0x1B
   03FD 15                 1479 	.db #0x15
   03FE 1D                 1480 	.db #0x1D
   03FF 05                 1481 	.db #0x05
   0400 19                 1482 	.db #0x19
   0401 0F                 1483 	.db #0x0F
   0402 1B                 1484 	.db #0x1B
   0403 15                 1485 	.db #0x15
   0404 1D                 1486 	.db #0x1D
   0405 05                 1487 	.db #0x05
   0406 19                 1488 	.db #0x19
   0407 0F                 1489 	.db #0x0F
   0408 1B                 1490 	.db #0x1B
   0409 15                 1491 	.db #0x15
   040A 1D                 1492 	.db #0x1D
   040B 05                 1493 	.db #0x05
   040C 05                 1494 	.db #0x05
   040D 1B                 1495 	.db #0x1B
   040E 0F                 1496 	.db #0x0F
   040F 1D                 1497 	.db #0x1D
   0410 15                 1498 	.db #0x15
   0411 19                 1499 	.db #0x19
   0412 05                 1500 	.db #0x05
   0413 1B                 1501 	.db #0x1B
   0414 0F                 1502 	.db #0x0F
   0415 1D                 1503 	.db #0x1D
   0416 15                 1504 	.db #0x15
   0417 19                 1505 	.db #0x19
   0418 05                 1506 	.db #0x05
   0419 1B                 1507 	.db #0x1B
   041A 0F                 1508 	.db #0x0F
   041B 1D                 1509 	.db #0x1D
   041C 1D                 1510 	.db #0x1D
   041D 05                 1511 	.db #0x05
   041E 19                 1512 	.db #0x19
   041F 0F                 1513 	.db #0x0F
   0420 1B                 1514 	.db #0x1B
   0421 15                 1515 	.db #0x15
   0422 1D                 1516 	.db #0x1D
   0423 05                 1517 	.db #0x05
   0424 19                 1518 	.db #0x19
   0425 0F                 1519 	.db #0x0F
   0426 1B                 1520 	.db #0x1B
   0427 15                 1521 	.db #0x15
   0428 1D                 1522 	.db #0x1D
   0429 05                 1523 	.db #0x05
   042A 19                 1524 	.db #0x19
   042B 0F                 1525 	.db #0x0F
   042C 0F                 1526 	.db #0x0F
   042D 1D                 1527 	.db #0x1D
   042E 15                 1528 	.db #0x15
   042F 19                 1529 	.db #0x19
   0430 05                 1530 	.db #0x05
   0431 1B                 1531 	.db #0x1B
   0432 0F                 1532 	.db #0x0F
   0433 1D                 1533 	.db #0x1D
   0434 15                 1534 	.db #0x15
   0435 19                 1535 	.db #0x19
   0436 05                 1536 	.db #0x05
   0437 1B                 1537 	.db #0x1B
   0438 0F                 1538 	.db #0x0F
   0439 1D                 1539 	.db #0x1D
   043A 15                 1540 	.db #0x15
   043B 19                 1541 	.db #0x19
   043C 19                 1542 	.db #0x19
   043D 0F                 1543 	.db #0x0F
   043E 1B                 1544 	.db #0x1B
   043F 15                 1545 	.db #0x15
   0440 1D                 1546 	.db #0x1D
   0441 05                 1547 	.db #0x05
   0442 19                 1548 	.db #0x19
   0443 0F                 1549 	.db #0x0F
   0444 1B                 1550 	.db #0x1B
   0445 15                 1551 	.db #0x15
   0446 1D                 1552 	.db #0x1D
   0447 05                 1553 	.db #0x05
   0448 19                 1554 	.db #0x19
   0449 0F                 1555 	.db #0x0F
   044A 1B                 1556 	.db #0x1B
   044B 15                 1557 	.db #0x15
   044C 15                 1558 	.db #0x15
   044D 19                 1559 	.db #0x19
   044E 05                 1560 	.db #0x05
   044F 1B                 1561 	.db #0x1B
   0450 0F                 1562 	.db #0x0F
   0451 1D                 1563 	.db #0x1D
   0452 15                 1564 	.db #0x15
   0453 19                 1565 	.db #0x19
   0454 05                 1566 	.db #0x05
   0455 1B                 1567 	.db #0x1B
   0456 0F                 1568 	.db #0x0F
   0457 1D                 1569 	.db #0x1D
   0458 15                 1570 	.db #0x15
   0459 19                 1571 	.db #0x19
   045A 05                 1572 	.db #0x05
   045B 1B                 1573 	.db #0x1B
   045C 1B                 1574 	.db #0x1B
   045D 15                 1575 	.db #0x15
   045E 1D                 1576 	.db #0x1D
   045F 05                 1577 	.db #0x05
   0460 19                 1578 	.db #0x19
   0461 0F                 1579 	.db #0x0F
   0462 1B                 1580 	.db #0x1B
   0463 15                 1581 	.db #0x15
   0464 1D                 1582 	.db #0x1D
   0465 05                 1583 	.db #0x05
   0466 19                 1584 	.db #0x19
   0467 0F                 1585 	.db #0x0F
   0468 1B                 1586 	.db #0x1B
   0469 15                 1587 	.db #0x15
   046A 1D                 1588 	.db #0x1D
   046B 05                 1589 	.db #0x05
   046C                    1590 _tri_side1:
   046C 0A                 1591 	.db #0x0A
   046D 12                 1592 	.db #0x12
   046E 10                 1593 	.db #0x10
   046F 00                 1594 	.db #0x00
   0470 02                 1595 	.db #0x02
   0471 08                 1596 	.db #0x08
   0472 0A                 1597 	.db #0x0A
   0473 12                 1598 	.db #0x12
   0474 10                 1599 	.db #0x10
   0475 00                 1600 	.db #0x00
   0476 02                 1601 	.db #0x02
   0477 08                 1602 	.db #0x08
   0478 0A                 1603 	.db #0x0A
   0479 12                 1604 	.db #0x12
   047A 10                 1605 	.db #0x10
   047B 00                 1606 	.db #0x00
   047C 12                 1607 	.db #0x12
   047D 10                 1608 	.db #0x10
   047E 00                 1609 	.db #0x00
   047F 02                 1610 	.db #0x02
   0480 08                 1611 	.db #0x08
   0481 0A                 1612 	.db #0x0A
   0482 12                 1613 	.db #0x12
   0483 10                 1614 	.db #0x10
   0484 00                 1615 	.db #0x00
   0485 02                 1616 	.db #0x02
   0486 08                 1617 	.db #0x08
   0487 0A                 1618 	.db #0x0A
   0488 12                 1619 	.db #0x12
   0489 10                 1620 	.db #0x10
   048A 00                 1621 	.db #0x00
   048B 02                 1622 	.db #0x02
   048C 10                 1623 	.db #0x10
   048D 00                 1624 	.db #0x00
   048E 02                 1625 	.db #0x02
   048F 08                 1626 	.db #0x08
   0490 0A                 1627 	.db #0x0A
   0491 12                 1628 	.db #0x12
   0492 10                 1629 	.db #0x10
   0493 00                 1630 	.db #0x00
   0494 02                 1631 	.db #0x02
   0495 08                 1632 	.db #0x08
   0496 0A                 1633 	.db #0x0A
   0497 12                 1634 	.db #0x12
   0498 10                 1635 	.db #0x10
   0499 00                 1636 	.db #0x00
   049A 02                 1637 	.db #0x02
   049B 08                 1638 	.db #0x08
   049C 00                 1639 	.db #0x00
   049D 02                 1640 	.db #0x02
   049E 08                 1641 	.db #0x08
   049F 0A                 1642 	.db #0x0A
   04A0 12                 1643 	.db #0x12
   04A1 10                 1644 	.db #0x10
   04A2 00                 1645 	.db #0x00
   04A3 02                 1646 	.db #0x02
   04A4 08                 1647 	.db #0x08
   04A5 0A                 1648 	.db #0x0A
   04A6 12                 1649 	.db #0x12
   04A7 10                 1650 	.db #0x10
   04A8 00                 1651 	.db #0x00
   04A9 02                 1652 	.db #0x02
   04AA 08                 1653 	.db #0x08
   04AB 0A                 1654 	.db #0x0A
   04AC 02                 1655 	.db #0x02
   04AD 08                 1656 	.db #0x08
   04AE 0A                 1657 	.db #0x0A
   04AF 12                 1658 	.db #0x12
   04B0 10                 1659 	.db #0x10
   04B1 00                 1660 	.db #0x00
   04B2 02                 1661 	.db #0x02
   04B3 08                 1662 	.db #0x08
   04B4 0A                 1663 	.db #0x0A
   04B5 12                 1664 	.db #0x12
   04B6 10                 1665 	.db #0x10
   04B7 00                 1666 	.db #0x00
   04B8 02                 1667 	.db #0x02
   04B9 08                 1668 	.db #0x08
   04BA 0A                 1669 	.db #0x0A
   04BB 12                 1670 	.db #0x12
   04BC 08                 1671 	.db #0x08
   04BD 0A                 1672 	.db #0x0A
   04BE 12                 1673 	.db #0x12
   04BF 10                 1674 	.db #0x10
   04C0 00                 1675 	.db #0x00
   04C1 02                 1676 	.db #0x02
   04C2 08                 1677 	.db #0x08
   04C3 0A                 1678 	.db #0x0A
   04C4 12                 1679 	.db #0x12
   04C5 10                 1680 	.db #0x10
   04C6 00                 1681 	.db #0x00
   04C7 02                 1682 	.db #0x02
   04C8 08                 1683 	.db #0x08
   04C9 0A                 1684 	.db #0x0A
   04CA 12                 1685 	.db #0x12
   04CB 10                 1686 	.db #0x10
   04CC 0A                 1687 	.db #0x0A
   04CD 12                 1688 	.db #0x12
   04CE 10                 1689 	.db #0x10
   04CF 00                 1690 	.db #0x00
   04D0 02                 1691 	.db #0x02
   04D1 08                 1692 	.db #0x08
   04D2 0A                 1693 	.db #0x0A
   04D3 12                 1694 	.db #0x12
   04D4 10                 1695 	.db #0x10
   04D5 00                 1696 	.db #0x00
   04D6 02                 1697 	.db #0x02
   04D7 08                 1698 	.db #0x08
   04D8 0A                 1699 	.db #0x0A
   04D9 12                 1700 	.db #0x12
   04DA 10                 1701 	.db #0x10
   04DB 00                 1702 	.db #0x00
   04DC 12                 1703 	.db #0x12
   04DD 10                 1704 	.db #0x10
   04DE 00                 1705 	.db #0x00
   04DF 02                 1706 	.db #0x02
   04E0 08                 1707 	.db #0x08
   04E1 0A                 1708 	.db #0x0A
   04E2 12                 1709 	.db #0x12
   04E3 10                 1710 	.db #0x10
   04E4 00                 1711 	.db #0x00
   04E5 02                 1712 	.db #0x02
   04E6 08                 1713 	.db #0x08
   04E7 0A                 1714 	.db #0x0A
   04E8 12                 1715 	.db #0x12
   04E9 10                 1716 	.db #0x10
   04EA 00                 1717 	.db #0x00
   04EB 02                 1718 	.db #0x02
   04EC 10                 1719 	.db #0x10
   04ED 00                 1720 	.db #0x00
   04EE 02                 1721 	.db #0x02
   04EF 08                 1722 	.db #0x08
   04F0 0A                 1723 	.db #0x0A
   04F1 12                 1724 	.db #0x12
   04F2 10                 1725 	.db #0x10
   04F3 00                 1726 	.db #0x00
   04F4 02                 1727 	.db #0x02
   04F5 08                 1728 	.db #0x08
   04F6 0A                 1729 	.db #0x0A
   04F7 12                 1730 	.db #0x12
   04F8 10                 1731 	.db #0x10
   04F9 00                 1732 	.db #0x00
   04FA 02                 1733 	.db #0x02
   04FB 08                 1734 	.db #0x08
   04FC 00                 1735 	.db #0x00
   04FD 02                 1736 	.db #0x02
   04FE 08                 1737 	.db #0x08
   04FF 0A                 1738 	.db #0x0A
   0500 12                 1739 	.db #0x12
   0501 10                 1740 	.db #0x10
   0502 00                 1741 	.db #0x00
   0503 02                 1742 	.db #0x02
   0504 08                 1743 	.db #0x08
   0505 0A                 1744 	.db #0x0A
   0506 12                 1745 	.db #0x12
   0507 10                 1746 	.db #0x10
   0508 00                 1747 	.db #0x00
   0509 02                 1748 	.db #0x02
   050A 08                 1749 	.db #0x08
   050B 0A                 1750 	.db #0x0A
   050C 02                 1751 	.db #0x02
   050D 08                 1752 	.db #0x08
   050E 0A                 1753 	.db #0x0A
   050F 12                 1754 	.db #0x12
   0510 10                 1755 	.db #0x10
   0511 00                 1756 	.db #0x00
   0512 02                 1757 	.db #0x02
   0513 08                 1758 	.db #0x08
   0514 0A                 1759 	.db #0x0A
   0515 12                 1760 	.db #0x12
   0516 10                 1761 	.db #0x10
   0517 00                 1762 	.db #0x00
   0518 02                 1763 	.db #0x02
   0519 08                 1764 	.db #0x08
   051A 0A                 1765 	.db #0x0A
   051B 12                 1766 	.db #0x12
   051C 08                 1767 	.db #0x08
   051D 0A                 1768 	.db #0x0A
   051E 12                 1769 	.db #0x12
   051F 10                 1770 	.db #0x10
   0520 00                 1771 	.db #0x00
   0521 02                 1772 	.db #0x02
   0522 08                 1773 	.db #0x08
   0523 0A                 1774 	.db #0x0A
   0524 12                 1775 	.db #0x12
   0525 10                 1776 	.db #0x10
   0526 00                 1777 	.db #0x00
   0527 02                 1778 	.db #0x02
   0528 08                 1779 	.db #0x08
   0529 0A                 1780 	.db #0x0A
   052A 12                 1781 	.db #0x12
   052B 10                 1782 	.db #0x10
   052C                    1783 _tri_side2:
   052C 00                 1784 	.db #0x00
   052D 10                 1785 	.db #0x10
   052E 12                 1786 	.db #0x12
   052F 0A                 1787 	.db #0x0A
   0530 08                 1788 	.db #0x08
   0531 02                 1789 	.db #0x02
   0532 00                 1790 	.db #0x00
   0533 10                 1791 	.db #0x10
   0534 12                 1792 	.db #0x12
   0535 0A                 1793 	.db #0x0A
   0536 08                 1794 	.db #0x08
   0537 02                 1795 	.db #0x02
   0538 00                 1796 	.db #0x00
   0539 10                 1797 	.db #0x10
   053A 12                 1798 	.db #0x12
   053B 0A                 1799 	.db #0x0A
   053C 02                 1800 	.db #0x02
   053D 00                 1801 	.db #0x00
   053E 10                 1802 	.db #0x10
   053F 12                 1803 	.db #0x12
   0540 0A                 1804 	.db #0x0A
   0541 08                 1805 	.db #0x08
   0542 02                 1806 	.db #0x02
   0543 00                 1807 	.db #0x00
   0544 10                 1808 	.db #0x10
   0545 12                 1809 	.db #0x12
   0546 0A                 1810 	.db #0x0A
   0547 08                 1811 	.db #0x08
   0548 02                 1812 	.db #0x02
   0549 00                 1813 	.db #0x00
   054A 10                 1814 	.db #0x10
   054B 12                 1815 	.db #0x12
   054C 08                 1816 	.db #0x08
   054D 02                 1817 	.db #0x02
   054E 00                 1818 	.db #0x00
   054F 10                 1819 	.db #0x10
   0550 12                 1820 	.db #0x12
   0551 0A                 1821 	.db #0x0A
   0552 08                 1822 	.db #0x08
   0553 02                 1823 	.db #0x02
   0554 00                 1824 	.db #0x00
   0555 10                 1825 	.db #0x10
   0556 12                 1826 	.db #0x12
   0557 0A                 1827 	.db #0x0A
   0558 08                 1828 	.db #0x08
   0559 02                 1829 	.db #0x02
   055A 00                 1830 	.db #0x00
   055B 10                 1831 	.db #0x10
   055C 0A                 1832 	.db #0x0A
   055D 08                 1833 	.db #0x08
   055E 02                 1834 	.db #0x02
   055F 00                 1835 	.db #0x00
   0560 10                 1836 	.db #0x10
   0561 12                 1837 	.db #0x12
   0562 0A                 1838 	.db #0x0A
   0563 08                 1839 	.db #0x08
   0564 02                 1840 	.db #0x02
   0565 00                 1841 	.db #0x00
   0566 10                 1842 	.db #0x10
   0567 12                 1843 	.db #0x12
   0568 0A                 1844 	.db #0x0A
   0569 08                 1845 	.db #0x08
   056A 02                 1846 	.db #0x02
   056B 00                 1847 	.db #0x00
   056C 12                 1848 	.db #0x12
   056D 0A                 1849 	.db #0x0A
   056E 08                 1850 	.db #0x08
   056F 02                 1851 	.db #0x02
   0570 00                 1852 	.db #0x00
   0571 10                 1853 	.db #0x10
   0572 12                 1854 	.db #0x12
   0573 0A                 1855 	.db #0x0A
   0574 08                 1856 	.db #0x08
   0575 02                 1857 	.db #0x02
   0576 00                 1858 	.db #0x00
   0577 10                 1859 	.db #0x10
   0578 12                 1860 	.db #0x12
   0579 0A                 1861 	.db #0x0A
   057A 08                 1862 	.db #0x08
   057B 02                 1863 	.db #0x02
   057C 10                 1864 	.db #0x10
   057D 12                 1865 	.db #0x12
   057E 0A                 1866 	.db #0x0A
   057F 08                 1867 	.db #0x08
   0580 02                 1868 	.db #0x02
   0581 00                 1869 	.db #0x00
   0582 10                 1870 	.db #0x10
   0583 12                 1871 	.db #0x12
   0584 0A                 1872 	.db #0x0A
   0585 08                 1873 	.db #0x08
   0586 02                 1874 	.db #0x02
   0587 00                 1875 	.db #0x00
   0588 10                 1876 	.db #0x10
   0589 12                 1877 	.db #0x12
   058A 0A                 1878 	.db #0x0A
   058B 08                 1879 	.db #0x08
   058C 00                 1880 	.db #0x00
   058D 10                 1881 	.db #0x10
   058E 12                 1882 	.db #0x12
   058F 0A                 1883 	.db #0x0A
   0590 08                 1884 	.db #0x08
   0591 02                 1885 	.db #0x02
   0592 00                 1886 	.db #0x00
   0593 10                 1887 	.db #0x10
   0594 12                 1888 	.db #0x12
   0595 0A                 1889 	.db #0x0A
   0596 08                 1890 	.db #0x08
   0597 02                 1891 	.db #0x02
   0598 00                 1892 	.db #0x00
   0599 10                 1893 	.db #0x10
   059A 12                 1894 	.db #0x12
   059B 0A                 1895 	.db #0x0A
   059C 02                 1896 	.db #0x02
   059D 00                 1897 	.db #0x00
   059E 10                 1898 	.db #0x10
   059F 12                 1899 	.db #0x12
   05A0 0A                 1900 	.db #0x0A
   05A1 08                 1901 	.db #0x08
   05A2 02                 1902 	.db #0x02
   05A3 00                 1903 	.db #0x00
   05A4 10                 1904 	.db #0x10
   05A5 12                 1905 	.db #0x12
   05A6 0A                 1906 	.db #0x0A
   05A7 08                 1907 	.db #0x08
   05A8 02                 1908 	.db #0x02
   05A9 00                 1909 	.db #0x00
   05AA 10                 1910 	.db #0x10
   05AB 12                 1911 	.db #0x12
   05AC 08                 1912 	.db #0x08
   05AD 02                 1913 	.db #0x02
   05AE 00                 1914 	.db #0x00
   05AF 10                 1915 	.db #0x10
   05B0 12                 1916 	.db #0x12
   05B1 0A                 1917 	.db #0x0A
   05B2 08                 1918 	.db #0x08
   05B3 02                 1919 	.db #0x02
   05B4 00                 1920 	.db #0x00
   05B5 10                 1921 	.db #0x10
   05B6 12                 1922 	.db #0x12
   05B7 0A                 1923 	.db #0x0A
   05B8 08                 1924 	.db #0x08
   05B9 02                 1925 	.db #0x02
   05BA 00                 1926 	.db #0x00
   05BB 10                 1927 	.db #0x10
   05BC 0A                 1928 	.db #0x0A
   05BD 08                 1929 	.db #0x08
   05BE 02                 1930 	.db #0x02
   05BF 00                 1931 	.db #0x00
   05C0 10                 1932 	.db #0x10
   05C1 12                 1933 	.db #0x12
   05C2 0A                 1934 	.db #0x0A
   05C3 08                 1935 	.db #0x08
   05C4 02                 1936 	.db #0x02
   05C5 00                 1937 	.db #0x00
   05C6 10                 1938 	.db #0x10
   05C7 12                 1939 	.db #0x12
   05C8 0A                 1940 	.db #0x0A
   05C9 08                 1941 	.db #0x08
   05CA 02                 1942 	.db #0x02
   05CB 00                 1943 	.db #0x00
   05CC 12                 1944 	.db #0x12
   05CD 0A                 1945 	.db #0x0A
   05CE 08                 1946 	.db #0x08
   05CF 02                 1947 	.db #0x02
   05D0 00                 1948 	.db #0x00
   05D1 10                 1949 	.db #0x10
   05D2 12                 1950 	.db #0x12
   05D3 0A                 1951 	.db #0x0A
   05D4 08                 1952 	.db #0x08
   05D5 02                 1953 	.db #0x02
   05D6 00                 1954 	.db #0x00
   05D7 10                 1955 	.db #0x10
   05D8 12                 1956 	.db #0x12
   05D9 0A                 1957 	.db #0x0A
   05DA 08                 1958 	.db #0x08
   05DB 02                 1959 	.db #0x02
   05DC 10                 1960 	.db #0x10
   05DD 12                 1961 	.db #0x12
   05DE 0A                 1962 	.db #0x0A
   05DF 08                 1963 	.db #0x08
   05E0 02                 1964 	.db #0x02
   05E1 00                 1965 	.db #0x00
   05E2 10                 1966 	.db #0x10
   05E3 12                 1967 	.db #0x12
   05E4 0A                 1968 	.db #0x0A
   05E5 08                 1969 	.db #0x08
   05E6 02                 1970 	.db #0x02
   05E7 00                 1971 	.db #0x00
   05E8 10                 1972 	.db #0x10
   05E9 12                 1973 	.db #0x12
   05EA 0A                 1974 	.db #0x0A
   05EB 08                 1975 	.db #0x08
                           1976 ;demo.c:139: void my_isr(void) interrupt
                           1977 ;	---------------------------------
                           1978 ; Function my_isr
                           1979 ; ---------------------------------
   05EC                    1980 _my_isr_start::
   05EC                    1981 _my_isr:
   05EC F5                 1982 	push	af
   05ED C5                 1983 	push	bc
   05EE D5                 1984 	push	de
   05EF E5                 1985 	push	hl
   05F0 FD E5              1986 	push	iy
                           1987 ;demo.c:141: DI;
   05F2 F3                 1988 		di 
                           1989 ;demo.c:143: READ_VDP_STATUS;
   05F3 DB 99              1990 		in a,(#0x99) 
                           1991 ;demo.c:145: PLY_Play();
   05F5 CDr00s00           1992 	call	_PLY_Play
                           1993 ;demo.c:146: PLY_SendRegisters();
   05F8 CDr00s00           1994 	call	_PLY_SendRegisters
                           1995 ;demo.c:148: vbicount+=1;
   05FB FD 21r00s41        1996 	ld	iy,#_vbicount
   05FF FD 34 00           1997 	inc	0 (iy)
   0602 20 07              1998 	jr	NZ,00103$
   0604 FD 21r00s41        1999 	ld	iy,#_vbicount
   0608 FD 34 01           2000 	inc	1 (iy)
   060B                    2001 00103$:
                           2002 ;demo.c:149: tick++;
   060B FD 21r02s41        2003 	ld	iy,#_tick
   060F FD 34 00           2004 	inc	0 (iy)
   0612 20 07              2005 	jr	NZ,00104$
   0614 FD 21r02s41        2006 	ld	iy,#_tick
   0618 FD 34 01           2007 	inc	1 (iy)
   061B                    2008 00104$:
                           2009 ;demo.c:151: EI;
   061B FB                 2010 		ei 
   061C FD E1              2011 	pop	iy
   061E E1                 2012 	pop	hl
   061F D1                 2013 	pop	de
   0620 C1                 2014 	pop	bc
   0621 F1                 2015 	pop	af
   0622 ED 4D              2016 	reti
   0624                    2017 _my_isr_end::
                           2018 ;demo.c:154: void color_isr(void) interrupt
                           2019 ;	---------------------------------
                           2020 ; Function color_isr
                           2021 ; ---------------------------------
   0624                    2022 _color_isr_start::
   0624                    2023 _color_isr:
   0624 F5                 2024 	push	af
   0625 C5                 2025 	push	bc
   0626 D5                 2026 	push	de
   0627 E5                 2027 	push	hl
   0628 FD E5              2028 	push	iy
                           2029 ;demo.c:156: DI;
   062A F3                 2030 		di 
                           2031 ;demo.c:158: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              2032 	ld	a,#0x01
   062D F5                 2033 	push	af
   062E 33                 2034 	inc	sp
   062F CDr00s00           2035 	call	_vdp2_status
   0632 33                 2036 	inc	sp
   0633 4D                 2037 	ld	c,l
   0634 21 00 00           2038 	ld	hl,#0x0000
   0637 E5                 2039 	push	hl
   0638 79                 2040 	ld	a,c
   0639 F5                 2041 	push	af
   063A 33                 2042 	inc	sp
   063B CDr00s00           2043 	call	_isNthBitSet
   063E F1                 2044 	pop	af
   063F 33                 2045 	inc	sp
   0640 44                 2046 	ld	b,h
   0641 4D                 2047 	ld	c,l
   0642 79                 2048 	ld	a,c
   0643 B0                 2049 	or	a,b
   0644 28 19              2050 	jr	Z,00102$
                           2051 ;demo.c:159: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r00s41           2052 	ld	hl,#_vbicount + 0
   0649 4E                 2053 	ld	c,(hl)
   064A 06 00              2054 	ld	b,#0x00
   064C 21r00s00           2055 	ld	hl,#_sintab
   064F 09                 2056 	add	hl,bc
   0650 7E                 2057 	ld	a,(hl)
   0651 F5                 2058 	push	af
   0652 33                 2059 	inc	sp
   0653 3E 17              2060 	ld	a,#0x17
   0655 F5                 2061 	push	af
   0656 33                 2062 	inc	sp
   0657 CDr00s00           2063 	call	_vdp_register
   065A F1                 2064 	pop	af
                           2065 ;demo.c:160: READ_VDP_STATUS;
   065B DB 99              2066 		in a,(#0x99) 
   065D 18 18              2067 	jr	00103$
   065F                    2068 00102$:
                           2069 ;demo.c:163: READ_VDP_STATUS;
   065F DB 99              2070 		in a,(#0x99) 
                           2071 ;demo.c:164: vbicount++;
   0661 FD 21r00s41        2072 	ld	iy,#_vbicount
   0665 FD 34 00           2073 	inc	0 (iy)
   0668 20 07              2074 	jr	NZ,00107$
   066A FD 21r00s41        2075 	ld	iy,#_vbicount
   066E FD 34 01           2076 	inc	1 (iy)
   0671                    2077 00107$:
                           2078 ;demo.c:167: PLY_Play();
   0671 CDr00s00           2079 	call	_PLY_Play
                           2080 ;demo.c:168: PLY_SendRegisters();
   0674 CDr00s00           2081 	call	_PLY_SendRegisters
   0677                    2082 00103$:
                           2083 ;demo.c:171: EI;
   0677 FB                 2084 		ei 
   0678 FD E1              2085 	pop	iy
   067A E1                 2086 	pop	hl
   067B D1                 2087 	pop	de
   067C C1                 2088 	pop	bc
   067D F1                 2089 	pop	af
   067E ED 4D              2090 	reti
   0680                    2091 _color_isr_end::
                           2092 ;demo.c:178: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2093 ;	---------------------------------
                           2094 ; Function ge5_load
                           2095 ; ---------------------------------
   0680                    2096 _ge5_load_start::
   0680                    2097 _ge5_load:
   0680 DD E5              2098 	push	ix
   0682 DD 21 00 00        2099 	ld	ix,#0
   0686 DD 39              2100 	add	ix,sp
   0688 21 D2 FF           2101 	ld	hl,#-46
   068B 39                 2102 	add	hl,sp
   068C F9                 2103 	ld	sp,hl
                           2104 ;demo.c:182: if(debugprint == 1) {
   068D DD 7E 09           2105 	ld	a,9 (ix)
   0690 D6 01              2106 	sub	a,#0x01
   0692 20 06              2107 	jr	NZ,00125$
   0694 DD 7E 0A           2108 	ld	a,10 (ix)
   0697 B7                 2109 	or	a,a
   0698 28 02              2110 	jr	Z,00126$
   069A                    2111 00125$:
   069A 18 1B              2112 	jr	00102$
   069C                    2113 00126$:
                           2114 ;demo.c:183: puts("loading ge5file: ");
   069C 21r7Bs07           2115 	ld	hl,#__str_0
   069F E5                 2116 	push	hl
   06A0 CDr00s00           2117 	call	_puts
   06A3 F1                 2118 	pop	af
                           2119 ;demo.c:184: puts(file_name);
   06A4 DD 6E 04           2120 	ld	l,4 (ix)
   06A7 DD 66 05           2121 	ld	h,5 (ix)
   06AA E5                 2122 	push	hl
   06AB CDr00s00           2123 	call	_puts
   06AE F1                 2124 	pop	af
                           2125 ;demo.c:185: puts("\r\n");
   06AF 21r8Ds07           2126 	ld	hl,#__str_1
   06B2 E5                 2127 	push	hl
   06B3 CDr00s00           2128 	call	_puts
   06B6 F1                 2129 	pop	af
   06B7                    2130 00102$:
                           2131 ;demo.c:188: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2132 	ld	hl,#0x0000
   06BA 39                 2133 	add	hl,sp
   06BB 4D                 2134 	ld	c,l
   06BC 44                 2135 	ld	b,h
   06BD 21 2E 00           2136 	ld	hl,#0x002E
   06C0 E5                 2137 	push	hl
   06C1 3E 00              2138 	ld	a,#0x00
   06C3 F5                 2139 	push	af
   06C4 33                 2140 	inc	sp
   06C5 C5                 2141 	push	bc
   06C6 CDr00s00           2142 	call	_memset
   06C9 F1                 2143 	pop	af
   06CA F1                 2144 	pop	af
   06CB 33                 2145 	inc	sp
                           2146 ;demo.c:190: f.record_size = 128;
   06CC 21 00 00           2147 	ld	hl,#0x0000
   06CF 39                 2148 	add	hl,sp
   06D0 4D                 2149 	ld	c,l
   06D1 44                 2150 	ld	b,h
   06D2 21 0F 00           2151 	ld	hl,#0x000F
   06D5 09                 2152 	add	hl,bc
   06D6 EB                 2153 	ex	de,hl
   06D7 3E 80              2154 	ld	a,#0x80
   06D9 12                 2155 	ld	(de),a
                           2156 ;demo.c:191: f.drive = 0;
   06DA 3E 00              2157 	ld	a,#0x00
   06DC 02                 2158 	ld	(bc),a
                           2159 ;demo.c:193: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2160 	ld	e,4 (ix)
   06E0 DD 56 05           2161 	ld	d,5 (ix)
   06E3 03                 2162 	inc	bc
   06E4 21 0B 00           2163 	ld	hl,#0x000B
   06E7 E5                 2164 	push	hl
   06E8 D5                 2165 	push	de
   06E9 C5                 2166 	push	bc
   06EA CDr00s00           2167 	call	_memcpy
   06ED F1                 2168 	pop	af
   06EE F1                 2169 	pop	af
   06EF F1                 2170 	pop	af
                           2171 ;demo.c:195: if (open(&f) != 0) return 0;
   06F0 21 00 00           2172 	ld	hl,#0x0000
   06F3 39                 2173 	add	hl,sp
   06F4 E5                 2174 	push	hl
   06F5 CDr00s00           2175 	call	_open
   06F8 F1                 2176 	pop	af
   06F9 AF                 2177 	xor	a,a
   06FA B5                 2178 	or	a,l
   06FB 28 05              2179 	jr	Z,00104$
   06FD 2E 00              2180 	ld	l,#0x00
   06FF C3r76s07           2181 	jp	00116$
   0702                    2182 00104$:
                           2183 ;demo.c:196: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2184 	ld	l,7 (ix)
   0705 DD 66 08           2185 	ld	h,8 (ix)
   0708 E5                 2186 	push	hl
   0709 DD 7E 06           2187 	ld	a,6 (ix)
   070C F5                 2188 	push	af
   070D 33                 2189 	inc	sp
   070E CDr00s00           2190 	call	_vdp_set_write_address
   0711 F1                 2191 	pop	af
   0712 33                 2192 	inc	sp
                           2193 ;demo.c:198: for (i = 0; i < 213; i++) {
   0713 0E 00              2194 	ld	c,#0x00
   0715                    2195 00112$:
   0715 79                 2196 	ld	a,c
   0716 D6 D5              2197 	sub	a,#0xD5
   0718 D2r6Bs07           2198 	jp	NC,00115$
                           2199 ;demo.c:199: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2200 	push	bc
   071C 21rE0s3F           2201 	ld	hl,#_scratch
   071F E5                 2202 	push	hl
   0720 CDr00s00           2203 	call	_block_set_data_ptr
   0723 F1                 2204 	pop	af
   0724 7D                 2205 	ld	a,l
   0725 C1                 2206 	pop	bc
   0726 47                 2207 	ld	b,a
   0727 B7                 2208 	or	a,a
   0728 28 05              2209 	jr	Z,00106$
   072A 2E 00              2210 	ld	l,#0x00
   072C C3r76s07           2211 	jp	00116$
   072F                    2212 00106$:
                           2213 ;demo.c:200: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2214 	ld	hl,#0x0000
   0732 39                 2215 	add	hl,sp
   0733 C5                 2216 	push	bc
   0734 E5                 2217 	push	hl
   0735 CDr00s00           2218 	call	_block_read
   0738 F1                 2219 	pop	af
   0739 7D                 2220 	ld	a,l
   073A C1                 2221 	pop	bc
   073B 47                 2222 	ld	b,a
   073C B7                 2223 	or	a,a
   073D 28 04              2224 	jr	Z,00108$
   073F 2E 00              2225 	ld	l,#0x00
   0741 18 33              2226 	jr	00116$
   0743                    2227 00108$:
                           2228 ;demo.c:202: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2229 	xor	a,a
   0744 B1                 2230 	or	a,c
   0745 20 11              2231 	jr	NZ,00110$
   0747 11rE7s3F           2232 	ld	de,#_scratch + 7
   074A C5                 2233 	push	bc
   074B 3E 79              2234 	ld	a,#0x79
   074D F5                 2235 	push	af
   074E 33                 2236 	inc	sp
   074F D5                 2237 	push	de
   0750 CDr00s00           2238 	call	_vdp_load_screen
   0753 F1                 2239 	pop	af
   0754 33                 2240 	inc	sp
   0755 C1                 2241 	pop	bc
   0756 18 0F              2242 	jr	00114$
   0758                    2243 00110$:
                           2244 ;demo.c:203: else vdp_load_screen(scratch, 128);
   0758 C5                 2245 	push	bc
   0759 3E 80              2246 	ld	a,#0x80
   075B F5                 2247 	push	af
   075C 33                 2248 	inc	sp
   075D 21rE0s3F           2249 	ld	hl,#_scratch
   0760 E5                 2250 	push	hl
   0761 CDr00s00           2251 	call	_vdp_load_screen
   0764 F1                 2252 	pop	af
   0765 33                 2253 	inc	sp
   0766 C1                 2254 	pop	bc
   0767                    2255 00114$:
                           2256 ;demo.c:198: for (i = 0; i < 213; i++) {
   0767 0C                 2257 	inc	c
   0768 C3r15s07           2258 	jp	00112$
   076B                    2259 00115$:
                           2260 ;demo.c:206: close(&f);
   076B 21 00 00           2261 	ld	hl,#0x0000
   076E 39                 2262 	add	hl,sp
   076F E5                 2263 	push	hl
   0770 CDr00s00           2264 	call	_close
   0773 F1                 2265 	pop	af
                           2266 ;demo.c:208: return 1;
   0774 2E 01              2267 	ld	l,#0x01
   0776                    2268 00116$:
   0776 DD F9              2269 	ld	sp,ix
   0778 DD E1              2270 	pop	ix
   077A C9                 2271 	ret
   077B                    2272 _ge5_load_end::
   077B                    2273 __str_0:
   077B 6C 6F 61 64 69 6E  2274 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2275 	.db 0x00
   078D                    2276 __str_1:
   078D 0D                 2277 	.db 0x0D
   078E 0A                 2278 	.db 0x0A
   078F 00                 2279 	.db 0x00
                           2280 ;demo.c:211: void scratch_clear() {
                           2281 ;	---------------------------------
                           2282 ; Function scratch_clear
                           2283 ; ---------------------------------
   0790                    2284 _scratch_clear_start::
   0790                    2285 _scratch_clear:
                           2286 ;demo.c:212: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2287 	ld	hl,#0x0080
   0793 E5                 2288 	push	hl
   0794 3E 00              2289 	ld	a,#0x00
   0796 F5                 2290 	push	af
   0797 33                 2291 	inc	sp
   0798 21rE0s3F           2292 	ld	hl,#_scratch
   079B E5                 2293 	push	hl
   079C CDr00s00           2294 	call	_memset
   079F F1                 2295 	pop	af
   07A0 F1                 2296 	pop	af
   07A1 33                 2297 	inc	sp
   07A2 C9                 2298 	ret
   07A3                    2299 _scratch_clear_end::
                           2300 ;demo.c:215: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2301 ;	---------------------------------
                           2302 ; Function pal_load
                           2303 ; ---------------------------------
   07A3                    2304 _pal_load_start::
   07A3                    2305 _pal_load:
   07A3 DD E5              2306 	push	ix
   07A5 DD 21 00 00        2307 	ld	ix,#0
   07A9 DD 39              2308 	add	ix,sp
   07AB 21 D2 FF           2309 	ld	hl,#-46
   07AE 39                 2310 	add	hl,sp
   07AF F9                 2311 	ld	sp,hl
                           2312 ;demo.c:218: if(debugprint == 1) {
   07B0 DD 7E 07           2313 	ld	a,7 (ix)
   07B3 D6 01              2314 	sub	a,#0x01
   07B5 20 06              2315 	jr	NZ,00115$
   07B7 DD 7E 08           2316 	ld	a,8 (ix)
   07BA B7                 2317 	or	a,a
   07BB 28 02              2318 	jr	Z,00116$
   07BD                    2319 00115$:
   07BD 18 1B              2320 	jr	00102$
   07BF                    2321 00116$:
                           2322 ;demo.c:219: puts("loading palfile: ");
   07BF 21r6Ds08           2323 	ld	hl,#__str_2
   07C2 E5                 2324 	push	hl
   07C3 CDr00s00           2325 	call	_puts
   07C6 F1                 2326 	pop	af
                           2327 ;demo.c:220: puts(file_name);
   07C7 DD 6E 04           2328 	ld	l,4 (ix)
   07CA DD 66 05           2329 	ld	h,5 (ix)
   07CD E5                 2330 	push	hl
   07CE CDr00s00           2331 	call	_puts
   07D1 F1                 2332 	pop	af
                           2333 ;demo.c:221: puts("\r\n");
   07D2 21r7Fs08           2334 	ld	hl,#__str_3
   07D5 E5                 2335 	push	hl
   07D6 CDr00s00           2336 	call	_puts
   07D9 F1                 2337 	pop	af
   07DA                    2338 00102$:
                           2339 ;demo.c:224: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2340 	ld	hl,#0x0000
   07DD 39                 2341 	add	hl,sp
   07DE 4D                 2342 	ld	c,l
   07DF 44                 2343 	ld	b,h
   07E0 21 2E 00           2344 	ld	hl,#0x002E
   07E3 E5                 2345 	push	hl
   07E4 3E 00              2346 	ld	a,#0x00
   07E6 F5                 2347 	push	af
   07E7 33                 2348 	inc	sp
   07E8 C5                 2349 	push	bc
   07E9 CDr00s00           2350 	call	_memset
   07EC F1                 2351 	pop	af
   07ED F1                 2352 	pop	af
   07EE 33                 2353 	inc	sp
                           2354 ;demo.c:225: scratch_clear();
   07EF CDr90s07           2355 	call	_scratch_clear
                           2356 ;demo.c:227: f.record_size = ss;
   07F2 21 00 00           2357 	ld	hl,#0x0000
   07F5 39                 2358 	add	hl,sp
   07F6 4D                 2359 	ld	c,l
   07F7 44                 2360 	ld	b,h
   07F8 21 0F 00           2361 	ld	hl,#0x000F
   07FB 09                 2362 	add	hl,bc
   07FC EB                 2363 	ex	de,hl
   07FD DD 7E 06           2364 	ld	a,6 (ix)
   0800 12                 2365 	ld	(de),a
                           2366 ;demo.c:228: f.drive = 0;
   0801 3E 00              2367 	ld	a,#0x00
   0803 02                 2368 	ld	(bc),a
                           2369 ;demo.c:230: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2370 	ld	e,4 (ix)
   0807 DD 56 05           2371 	ld	d,5 (ix)
   080A 03                 2372 	inc	bc
   080B 21 0B 00           2373 	ld	hl,#0x000B
   080E E5                 2374 	push	hl
   080F D5                 2375 	push	de
   0810 C5                 2376 	push	bc
   0811 CDr00s00           2377 	call	_memcpy
   0814 F1                 2378 	pop	af
   0815 F1                 2379 	pop	af
   0816 F1                 2380 	pop	af
                           2381 ;demo.c:232: if (open(&f) != 0) return 0;
   0817 21 00 00           2382 	ld	hl,#0x0000
   081A 39                 2383 	add	hl,sp
   081B E5                 2384 	push	hl
   081C CDr00s00           2385 	call	_open
   081F F1                 2386 	pop	af
   0820 AF                 2387 	xor	a,a
   0821 B5                 2388 	or	a,l
   0822 28 04              2389 	jr	Z,00104$
   0824 2E 00              2390 	ld	l,#0x00
   0826 18 40              2391 	jr	00109$
   0828                    2392 00104$:
                           2393 ;demo.c:233: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21rE0s3F           2394 	ld	hl,#_scratch
   082B E5                 2395 	push	hl
   082C CDr00s00           2396 	call	_block_set_data_ptr
   082F F1                 2397 	pop	af
   0830 AF                 2398 	xor	a,a
   0831 B5                 2399 	or	a,l
   0832 28 04              2400 	jr	Z,00106$
   0834 2E 00              2401 	ld	l,#0x00
   0836 18 30              2402 	jr	00109$
   0838                    2403 00106$:
                           2404 ;demo.c:234: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2405 	ld	hl,#0x0000
   083B 39                 2406 	add	hl,sp
   083C E5                 2407 	push	hl
   083D CDr00s00           2408 	call	_block_read
   0840 F1                 2409 	pop	af
   0841 AF                 2410 	xor	a,a
   0842 B5                 2411 	or	a,l
   0843 28 04              2412 	jr	Z,00108$
   0845 2E 00              2413 	ld	l,#0x00
   0847 18 1F              2414 	jr	00109$
   0849                    2415 00108$:
                           2416 ;demo.c:236: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2417 	ld	c,6 (ix)
   084C 06 00              2418 	ld	b,#0x00
   084E 11rE7s3F           2419 	ld	de,#_scratch + 7
   0851 C5                 2420 	push	bc
   0852 D5                 2421 	push	de
   0853 21r60s40           2422 	ld	hl,#_cur_palette
   0856 E5                 2423 	push	hl
   0857 CDr00s00           2424 	call	_memcpy
   085A F1                 2425 	pop	af
   085B F1                 2426 	pop	af
   085C F1                 2427 	pop	af
                           2428 ;demo.c:238: close(&f);
   085D 21 00 00           2429 	ld	hl,#0x0000
   0860 39                 2430 	add	hl,sp
   0861 E5                 2431 	push	hl
   0862 CDr00s00           2432 	call	_close
   0865 F1                 2433 	pop	af
                           2434 ;demo.c:239: return 1;
   0866 2E 01              2435 	ld	l,#0x01
   0868                    2436 00109$:
   0868 DD F9              2437 	ld	sp,ix
   086A DD E1              2438 	pop	ix
   086C C9                 2439 	ret
   086D                    2440 _pal_load_end::
   086D                    2441 __str_2:
   086D 6C 6F 61 64 69 6E  2442 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2443 	.db 0x00
   087F                    2444 __str_3:
   087F 0D                 2445 	.db 0x0D
   0880 0A                 2446 	.db 0x0A
   0881 00                 2447 	.db 0x00
                           2448 ;demo.c:243: void pause() {
                           2449 ;	---------------------------------
                           2450 ; Function pause
                           2451 ; ---------------------------------
   0882                    2452 _pause_start::
   0882                    2453 _pause:
                           2454 ;demo.c:244: uint8_t i,j,k = 0;
                           2455 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2456 	ld	bc,#0x0000
   0885                    2457 00104$:
   0885 78                 2458 	ld	a,b
   0886 D6 FF              2459 	sub	a,#0xFF
   0888 D0                 2460 	ret	NC
                           2461 ;demo.c:246: for (j = 0; j < 255; j++) {
   0889 59                 2462 	ld	e,c
   088A 16 FF              2463 	ld	d,#0xFF
   088C                    2464 00103$:
                           2465 ;demo.c:247: k++;
   088C 1C                 2466 	inc	e
   088D 15                 2467 	dec	d
                           2468 ;demo.c:246: for (j = 0; j < 255; j++) {
   088E AF                 2469 	xor	a,a
   088F B2                 2470 	or	a,d
   0890 20 FA              2471 	jr	NZ,00103$
                           2472 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0892 4B                 2473 	ld	c,e
   0893 04                 2474 	inc	b
   0894 18 EF              2475 	jr	00104$
   0896                    2476 _pause_end::
                           2477 ;demo.c:253: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2478 ;	---------------------------------
                           2479 ; Function raw_load
                           2480 ; ---------------------------------
   0896                    2481 _raw_load_start::
   0896                    2482 _raw_load:
   0896 DD E5              2483 	push	ix
   0898 DD 21 00 00        2484 	ld	ix,#0
   089C DD 39              2485 	add	ix,sp
   089E 21 D2 FF           2486 	ld	hl,#-46
   08A1 39                 2487 	add	hl,sp
   08A2 F9                 2488 	ld	sp,hl
                           2489 ;demo.c:258: if(debugprint == 1) {
   08A3 DD 7E 0A           2490 	ld	a,10 (ix)
   08A6 D6 01              2491 	sub	a,#0x01
   08A8 20 06              2492 	jr	NZ,00120$
   08AA DD 7E 0B           2493 	ld	a,11 (ix)
   08AD B7                 2494 	or	a,a
   08AE 28 02              2495 	jr	Z,00121$
   08B0                    2496 00120$:
   08B0 18 1B              2497 	jr	00102$
   08B2                    2498 00121$:
                           2499 ;demo.c:259: puts("loading rawfile: ");
   08B2 21r84s09           2500 	ld	hl,#__str_4
   08B5 E5                 2501 	push	hl
   08B6 CDr00s00           2502 	call	_puts
   08B9 F1                 2503 	pop	af
                           2504 ;demo.c:260: puts(file_name);
   08BA DD 6E 04           2505 	ld	l,4 (ix)
   08BD DD 66 05           2506 	ld	h,5 (ix)
   08C0 E5                 2507 	push	hl
   08C1 CDr00s00           2508 	call	_puts
   08C4 F1                 2509 	pop	af
                           2510 ;demo.c:261: puts("\r\n");
   08C5 21r96s09           2511 	ld	hl,#__str_5
   08C8 E5                 2512 	push	hl
   08C9 CDr00s00           2513 	call	_puts
   08CC F1                 2514 	pop	af
   08CD                    2515 00102$:
                           2516 ;demo.c:264: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2517 	ld	hl,#0x0000
   08D0 39                 2518 	add	hl,sp
   08D1 4D                 2519 	ld	c,l
   08D2 44                 2520 	ld	b,h
   08D3 21 2E 00           2521 	ld	hl,#0x002E
   08D6 E5                 2522 	push	hl
   08D7 3E 00              2523 	ld	a,#0x00
   08D9 F5                 2524 	push	af
   08DA 33                 2525 	inc	sp
   08DB C5                 2526 	push	bc
   08DC CDr00s00           2527 	call	_memset
   08DF F1                 2528 	pop	af
   08E0 F1                 2529 	pop	af
   08E1 33                 2530 	inc	sp
                           2531 ;demo.c:265: scratch_clear();
   08E2 CDr90s07           2532 	call	_scratch_clear
                           2533 ;demo.c:267: f.record_size = 128;
   08E5 21 00 00           2534 	ld	hl,#0x0000
   08E8 39                 2535 	add	hl,sp
   08E9 4D                 2536 	ld	c,l
   08EA 44                 2537 	ld	b,h
   08EB 21 0F 00           2538 	ld	hl,#0x000F
   08EE 09                 2539 	add	hl,bc
   08EF EB                 2540 	ex	de,hl
   08F0 3E 80              2541 	ld	a,#0x80
   08F2 12                 2542 	ld	(de),a
                           2543 ;demo.c:268: f.drive = 0;
   08F3 3E 00              2544 	ld	a,#0x00
   08F5 02                 2545 	ld	(bc),a
                           2546 ;demo.c:270: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2547 	ld	e,4 (ix)
   08F9 DD 56 05           2548 	ld	d,5 (ix)
   08FC 03                 2549 	inc	bc
   08FD 21 0B 00           2550 	ld	hl,#0x000B
   0900 E5                 2551 	push	hl
   0901 D5                 2552 	push	de
   0902 C5                 2553 	push	bc
   0903 CDr00s00           2554 	call	_memcpy
   0906 F1                 2555 	pop	af
   0907 F1                 2556 	pop	af
   0908 F1                 2557 	pop	af
                           2558 ;demo.c:272: if (open(&f) != 0) return 0;
   0909 21 00 00           2559 	ld	hl,#0x0000
   090C 39                 2560 	add	hl,sp
   090D E5                 2561 	push	hl
   090E CDr00s00           2562 	call	_open
   0911 F1                 2563 	pop	af
   0912 AF                 2564 	xor	a,a
   0913 B5                 2565 	or	a,l
   0914 28 05              2566 	jr	Z,00119$
   0916 2E 00              2567 	ld	l,#0x00
   0918 C3r7Fs09           2568 	jp	00112$
                           2569 ;demo.c:274: while(total < size) {
   091B                    2570 00119$:
   091B 01 00 00           2571 	ld	bc,#0x0000
   091E                    2572 00109$:
   091E 79                 2573 	ld	a,c
   091F DD 96 06           2574 	sub	a,6 (ix)
   0922 78                 2575 	ld	a,b
   0923 DD 9E 07           2576 	sbc	a,7 (ix)
   0926 F2r74s09           2577 	jp	P,00111$
                           2578 ;demo.c:275: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2579 	push	bc
   092A 21rE0s3F           2580 	ld	hl,#_scratch
   092D E5                 2581 	push	hl
   092E CDr00s00           2582 	call	_block_set_data_ptr
   0931 F1                 2583 	pop	af
   0932 5D                 2584 	ld	e,l
   0933 C1                 2585 	pop	bc
   0934 AF                 2586 	xor	a,a
   0935 B3                 2587 	or	a,e
   0936 28 04              2588 	jr	Z,00106$
   0938 2E 00              2589 	ld	l,#0x00
   093A 18 43              2590 	jr	00112$
   093C                    2591 00106$:
                           2592 ;demo.c:276: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2593 	ld	hl,#0x0000
   093F 39                 2594 	add	hl,sp
   0940 C5                 2595 	push	bc
   0941 E5                 2596 	push	hl
   0942 CDr00s00           2597 	call	_block_read
   0945 F1                 2598 	pop	af
   0946 5D                 2599 	ld	e,l
   0947 C1                 2600 	pop	bc
   0948 AF                 2601 	xor	a,a
   0949 B3                 2602 	or	a,e
   094A 28 04              2603 	jr	Z,00108$
   094C 2E 00              2604 	ld	l,#0x00
   094E 18 2F              2605 	jr	00112$
   0950                    2606 00108$:
                           2607 ;demo.c:278: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2608 	ld	a,8 (ix)
   0953 81                 2609 	add	a,c
   0954 5F                 2610 	ld	e,a
   0955 DD 7E 09           2611 	ld	a,9 (ix)
   0958 88                 2612 	adc	a,b
   0959 57                 2613 	ld	d,a
   095A C5                 2614 	push	bc
   095B 21 80 00           2615 	ld	hl,#0x0080
   095E E5                 2616 	push	hl
   095F 21rE0s3F           2617 	ld	hl,#_scratch
   0962 E5                 2618 	push	hl
   0963 D5                 2619 	push	de
   0964 CDr00s00           2620 	call	_memcpy
   0967 F1                 2621 	pop	af
   0968 F1                 2622 	pop	af
   0969 F1                 2623 	pop	af
   096A C1                 2624 	pop	bc
                           2625 ;demo.c:280: total+=incr;
   096B 21 80 00           2626 	ld	hl,#0x0080
   096E 09                 2627 	add	hl,bc
   096F 4D                 2628 	ld	c,l
   0970 44                 2629 	ld	b,h
   0971 C3r1Es09           2630 	jp	00109$
   0974                    2631 00111$:
                           2632 ;demo.c:283: close(&f);
   0974 21 00 00           2633 	ld	hl,#0x0000
   0977 39                 2634 	add	hl,sp
   0978 E5                 2635 	push	hl
   0979 CDr00s00           2636 	call	_close
   097C F1                 2637 	pop	af
                           2638 ;demo.c:285: return 1;
   097D 2E 01              2639 	ld	l,#0x01
   097F                    2640 00112$:
   097F DD F9              2641 	ld	sp,ix
   0981 DD E1              2642 	pop	ix
   0983 C9                 2643 	ret
   0984                    2644 _raw_load_end::
   0984                    2645 __str_4:
   0984 6C 6F 61 64 69 6E  2646 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2647 	.db 0x00
   0996                    2648 __str_5:
   0996 0D                 2649 	.db 0x0D
   0997 0A                 2650 	.db 0x0A
   0998 00                 2651 	.db 0x00
                           2652 ;demo.c:288: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2653 ;	---------------------------------
                           2654 ; Function pck_load
                           2655 ; ---------------------------------
   0999                    2656 _pck_load_start::
   0999                    2657 _pck_load:
   0999 DD E5              2658 	push	ix
   099B DD 21 00 00        2659 	ld	ix,#0
   099F DD 39              2660 	add	ix,sp
                           2661 ;demo.c:289: if(debugprint == 1) {
   09A1 DD 7E 0C           2662 	ld	a,12 (ix)
   09A4 D6 01              2663 	sub	a,#0x01
   09A6 20 06              2664 	jr	NZ,00106$
   09A8 DD 7E 0D           2665 	ld	a,13 (ix)
   09AB B7                 2666 	or	a,a
   09AC 28 02              2667 	jr	Z,00107$
   09AE                    2668 00106$:
   09AE 18 1B              2669 	jr	00102$
   09B0                    2670 00107$:
                           2671 ;demo.c:290: puts("loading pckfile: ");
   09B0 21r12s0A           2672 	ld	hl,#__str_6
   09B3 E5                 2673 	push	hl
   09B4 CDr00s00           2674 	call	_puts
   09B7 F1                 2675 	pop	af
                           2676 ;demo.c:291: puts(file_name);
   09B8 DD 6E 04           2677 	ld	l,4 (ix)
   09BB DD 66 05           2678 	ld	h,5 (ix)
   09BE E5                 2679 	push	hl
   09BF CDr00s00           2680 	call	_puts
   09C2 F1                 2681 	pop	af
                           2682 ;demo.c:292: puts("\r\n");
   09C3 21r24s0A           2683 	ld	hl,#__str_7
   09C6 E5                 2684 	push	hl
   09C7 CDr00s00           2685 	call	_puts
   09CA F1                 2686 	pop	af
   09CB                    2687 00102$:
                           2688 ;demo.c:294: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2689 	ld	c,6 (ix)
   09CE DD 46 07           2690 	ld	b,7 (ix)
   09D1 C5                 2691 	push	bc
   09D2 C5                 2692 	push	bc
   09D3 3E 00              2693 	ld	a,#0x00
   09D5 F5                 2694 	push	af
   09D6 33                 2695 	inc	sp
   09D7 21r60s01           2696 	ld	hl,#_packbuffer
   09DA E5                 2697 	push	hl
   09DB CDr00s00           2698 	call	_memset
   09DE F1                 2699 	pop	af
   09DF F1                 2700 	pop	af
   09E0 33                 2701 	inc	sp
   09E1 C1                 2702 	pop	bc
                           2703 ;demo.c:295: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2704 	ld	hl,#0x0000
   09E5 E5                 2705 	push	hl
   09E6 21r60s01           2706 	ld	hl,#_packbuffer
   09E9 E5                 2707 	push	hl
   09EA C5                 2708 	push	bc
   09EB DD 6E 04           2709 	ld	l,4 (ix)
   09EE DD 66 05           2710 	ld	h,5 (ix)
   09F1 E5                 2711 	push	hl
   09F2 CDr96s08           2712 	call	_raw_load
   09F5 F1                 2713 	pop	af
   09F6 F1                 2714 	pop	af
   09F7 F1                 2715 	pop	af
   09F8 F1                 2716 	pop	af
                           2717 ;demo.c:296: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2718 	ld	a,10 (ix)
   09FC F5                 2719 	push	af
   09FD 33                 2720 	inc	sp
   09FE DD 6E 08           2721 	ld	l,8 (ix)
   0A01 DD 66 09           2722 	ld	h,9 (ix)
   0A04 E5                 2723 	push	hl
   0A05 21r60s01           2724 	ld	hl,#_packbuffer
   0A08 E5                 2725 	push	hl
   0A09 CDr00s00           2726 	call	_bitbuster
   0A0C F1                 2727 	pop	af
   0A0D F1                 2728 	pop	af
   0A0E 33                 2729 	inc	sp
   0A0F DD E1              2730 	pop	ix
   0A11 C9                 2731 	ret
   0A12                    2732 _pck_load_end::
   0A12                    2733 __str_6:
   0A12 6C 6F 61 64 69 6E  2734 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2735 	.db 0x00
   0A24                    2736 __str_7:
   0A24 0D                 2737 	.db 0x0D
   0A25 0A                 2738 	.db 0x0A
   0A26 00                 2739 	.db 0x00
                           2740 ;demo.c:299: void fadein() {
                           2741 ;	---------------------------------
                           2742 ; Function fadein
                           2743 ; ---------------------------------
   0A27                    2744 _fadein_start::
   0A27                    2745 _fadein:
   0A27 DD E5              2746 	push	ix
   0A29 DD 21 00 00        2747 	ld	ix,#0
   0A2D DD 39              2748 	add	ix,sp
   0A2F F5                 2749 	push	af
                           2750 ;demo.c:302: if (tick < 4) return;
   0A30 3Ar02s41           2751 	ld	a,(#_tick+0)
   0A33 D6 04              2752 	sub	a,#0x04
   0A35 3Ar03s41           2753 	ld	a,(#_tick+1)
   0A38 DE 00              2754 	sbc	a,#0x00
   0A3A F2r40s0A           2755 	jp	P,00102$
   0A3D C3rEEs0A           2756 	jp	00113$
   0A40                    2757 00102$:
                           2758 ;demo.c:304: tick = 0;
   0A40 21r02s41           2759 	ld	hl,#_tick + 0
   0A43 36 00              2760 	ld	(hl), #0x00
   0A45 21r03s41           2761 	ld	hl,#_tick + 1
   0A48 36 00              2762 	ld	(hl), #0x00
                           2763 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2764 	ld	c,#0x00
   0A4C                    2765 00109$:
   0A4C 79                 2766 	ld	a,c
   0A4D D6 20              2767 	sub	a,#0x20
   0A4F D2rE6s0A           2768 	jp	NC,00112$
                           2769 ;demo.c:307: uint8_t r = scratch[i] >> 4;
   0A52 3ErE0              2770 	ld	a,#<_scratch
   0A54 81                 2771 	add	a,c
   0A55 5F                 2772 	ld	e,a
   0A56 3Es3F              2773 	ld	a,#>_scratch
   0A58 CE 00              2774 	adc	a,#0x00
   0A5A 57                 2775 	ld	d,a
   0A5B 1A                 2776 	ld	a,(de)
   0A5C 47                 2777 	ld	b,a
   0A5D 58                 2778 	ld	e,b
   0A5E CB 3B              2779 	srl	e
   0A60 CB 3B              2780 	srl	e
   0A62 CB 3B              2781 	srl	e
   0A64 CB 3B              2782 	srl	e
                           2783 ;demo.c:308: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2784 	ld	a,b
   0A67 E6 0F              2785 	and	a,#0x0F
   0A69 DD 77 FF           2786 	ld	-1 (ix),a
                           2787 ;demo.c:309: uint8_t g = scratch[i+1];
   0A6C 51                 2788 	ld	d,c
   0A6D 14                 2789 	inc	d
   0A6E 3ErE0              2790 	ld	a,#<_scratch
   0A70 82                 2791 	add	a,d
   0A71 6F                 2792 	ld	l,a
   0A72 3Es3F              2793 	ld	a,#>_scratch
   0A74 CE 00              2794 	adc	a,#0x00
   0A76 67                 2795 	ld	h,a
   0A77 56                 2796 	ld	d,(hl)
   0A78 DD 72 FE           2797 	ld	-2 (ix),d
                           2798 ;demo.c:311: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3Er60              2799 	ld	a,#<_cur_palette
   0A7D 81                 2800 	add	a,c
   0A7E 6F                 2801 	ld	l,a
   0A7F 3Es40              2802 	ld	a,#>_cur_palette
   0A81 CE 00              2803 	adc	a,#0x00
   0A83 67                 2804 	ld	h,a
   0A84 56                 2805 	ld	d,(hl)
   0A85 CB 3A              2806 	srl	d
   0A87 CB 3A              2807 	srl	d
   0A89 CB 3A              2808 	srl	d
   0A8B CB 3A              2809 	srl	d
   0A8D 7B                 2810 	ld	a,e
   0A8E 92                 2811 	sub	a,d
   0A8F 30 01              2812 	jr	NC,00104$
   0A91 1C                 2813 	inc	e
   0A92                    2814 00104$:
                           2815 ;demo.c:312: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3Er60              2816 	ld	a,#<_cur_palette
   0A94 81                 2817 	add	a,c
   0A95 6F                 2818 	ld	l,a
   0A96 3Es40              2819 	ld	a,#>_cur_palette
   0A98 CE 00              2820 	adc	a,#0x00
   0A9A 67                 2821 	ld	h,a
   0A9B 7E                 2822 	ld	a,(hl)
   0A9C E6 0F              2823 	and	a,#0x0F
   0A9E 47                 2824 	ld	b,a
   0A9F DD 7E FF           2825 	ld	a,-1 (ix)
   0AA2 90                 2826 	sub	a,b
   0AA3 30 03              2827 	jr	NC,00106$
   0AA5 DD 34 FF           2828 	inc	-1 (ix)
   0AA8                    2829 00106$:
                           2830 ;demo.c:314: scratch[i] = (r << 4) | b;
   0AA8 3ErE0              2831 	ld	a,#<_scratch
   0AAA 81                 2832 	add	a,c
   0AAB 47                 2833 	ld	b,a
   0AAC 3Es3F              2834 	ld	a,#>_scratch
   0AAE CE 00              2835 	adc	a,#0x00
   0AB0 57                 2836 	ld	d,a
   0AB1 7B                 2837 	ld	a,e
   0AB2 07                 2838 	rlca
   0AB3 07                 2839 	rlca
   0AB4 07                 2840 	rlca
   0AB5 07                 2841 	rlca
   0AB6 E6 F0              2842 	and	a,#0xF0
   0AB8 DD B6 FF           2843 	or	a,-1 (ix)
   0ABB 68                 2844 	ld	l,b
   0ABC 62                 2845 	ld	h,d
   0ABD 77                 2846 	ld	(hl),a
                           2847 ;demo.c:315: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2848 	ld	b,c
   0ABF 04                 2849 	inc	b
   0AC0 3Er60              2850 	ld	a,#<_cur_palette
   0AC2 80                 2851 	add	a,b
   0AC3 5F                 2852 	ld	e,a
   0AC4 3Es40              2853 	ld	a,#>_cur_palette
   0AC6 CE 00              2854 	adc	a,#0x00
   0AC8 57                 2855 	ld	d,a
   0AC9 1A                 2856 	ld	a,(de)
   0ACA 5F                 2857 	ld	e,a
   0ACB DD 7E FE           2858 	ld	a,-2 (ix)
   0ACE 93                 2859 	sub	a,e
   0ACF 30 10              2860 	jr	NC,00111$
   0AD1 3ErE0              2861 	ld	a,#<_scratch
   0AD3 80                 2862 	add	a,b
   0AD4 47                 2863 	ld	b,a
   0AD5 3Es3F              2864 	ld	a,#>_scratch
   0AD7 CE 00              2865 	adc	a,#0x00
   0AD9 5F                 2866 	ld	e,a
   0ADA 68                 2867 	ld	l,b
   0ADB 67                 2868 	ld	h,a
   0ADC 7E                 2869 	ld	a,(hl)
   0ADD 3C                 2870 	inc	a
   0ADE 68                 2871 	ld	l,b
   0ADF 63                 2872 	ld	h,e
   0AE0 77                 2873 	ld	(hl),a
   0AE1                    2874 00111$:
                           2875 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2876 	inc	c
   0AE2 0C                 2877 	inc	c
   0AE3 C3r4Cs0A           2878 	jp	00109$
   0AE6                    2879 00112$:
                           2880 ;demo.c:319: vdp_load_palette(scratch);
   0AE6 21rE0s3F           2881 	ld	hl,#_scratch
   0AE9 E5                 2882 	push	hl
   0AEA CDr00s00           2883 	call	_vdp_load_palette
   0AED F1                 2884 	pop	af
   0AEE                    2885 00113$:
   0AEE DD F9              2886 	ld	sp,ix
   0AF0 DD E1              2887 	pop	ix
   0AF2 C9                 2888 	ret
   0AF3                    2889 _fadein_end::
                           2890 ;demo.c:331: void do_ymmm() {
                           2891 ;	---------------------------------
                           2892 ; Function do_ymmm
                           2893 ; ---------------------------------
   0AF3                    2894 _do_ymmm_start::
   0AF3                    2895 _do_ymmm:
   0AF3 DD E5              2896 	push	ix
   0AF5 DD 21 00 00        2897 	ld	ix,#0
   0AF9 DD 39              2898 	add	ix,sp
   0AFB F5                 2899 	push	af
                           2900 ;demo.c:335: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              2901 	ld	a,#0x20
   0AFE FD 21r02s41        2902 	ld	iy,#_tick
   0B02 FD 96 00           2903 	sub	a,0 (iy)
   0B05 3E 00              2904 	ld	a,#0x00
   0B07 FD 21r02s41        2905 	ld	iy,#_tick
   0B0B FD 9E 01           2906 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           2907 	jp	P,00102$
   0B11 21r02s41           2908 	ld	hl,#_tick + 0
   0B14 36 00              2909 	ld	(hl), #0x00
   0B16 21r03s41           2910 	ld	hl,#_tick + 1
   0B19 36 00              2911 	ld	(hl), #0x00
   0B1B FD 21r1Ds41        2912 	ld	iy,#_flipper
   0B1F FD 34 00           2913 	inc	0 (iy)
   0B22 20 07              2914 	jr	NZ,00115$
   0B24 FD 21r1Ds41        2915 	ld	iy,#_flipper
   0B28 FD 34 01           2916 	inc	1 (iy)
   0B2B                    2917 00115$:
   0B2B                    2918 00102$:
                           2919 ;demo.c:336: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              2920 	ld	a,#0x0A
   0B2D FD 21r1Ds41        2921 	ld	iy,#_flipper
   0B31 FD 96 00           2922 	sub	a,0 (iy)
   0B34 3E 00              2923 	ld	a,#0x00
   0B36 FD 21r1Ds41        2924 	ld	iy,#_flipper
   0B3A FD 9E 01           2925 	sbc	a,1 (iy)
   0B3D F2r4As0B           2926 	jp	P,00104$
   0B40 21r1Ds41           2927 	ld	hl,#_flipper + 0
   0B43 36 00              2928 	ld	(hl), #0x00
   0B45 21r1Es41           2929 	ld	hl,#_flipper + 1
   0B48 36 00              2930 	ld	(hl), #0x00
   0B4A                    2931 00104$:
                           2932 ;demo.c:338: ymmmf++;
   0B4A FD 21r1Fs41        2933 	ld	iy,#_ymmmf
   0B4E FD 34 00           2934 	inc	0 (iy)
   0B51 20 07              2935 	jr	NZ,00116$
   0B53 FD 21r1Fs41        2936 	ld	iy,#_ymmmf
   0B57 FD 34 01           2937 	inc	1 (iy)
   0B5A                    2938 00116$:
                           2939 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r1Bs41           2940 	ld	hl,#_yofff + 0
   0B5D 36 00              2941 	ld	(hl), #0x00
   0B5F                    2942 00105$:
   0B5F 21r1Bs41           2943 	ld	hl,#_yofff + 0
   0B62 4E                 2944 	ld	c,(hl)
   0B63 06 00              2945 	ld	b,#0x00
   0B65 79                 2946 	ld	a,c
   0B66 D6 D2              2947 	sub	a,#0xD2
   0B68 78                 2948 	ld	a,b
   0B69 DE 00              2949 	sbc	a,#0x00
   0B6B F2rE4s0B           2950 	jp	P,00109$
                           2951 ;demo.c:340: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r1Fs41           2952 	ld	hl,#_ymmmf
   0B71 79                 2953 	ld	a,c
   0B72 86                 2954 	add	a,(hl)
   0B73 5F                 2955 	ld	e,a
   0B74 78                 2956 	ld	a,b
   0B75 23                 2957 	inc	hl
   0B76 8E                 2958 	adc	a,(hl)
   0B77 16 00              2959 	ld	d,#0x00
   0B79 CB 23              2960 	sla	e
   0B7B CB 12              2961 	rl	d
   0B7D 21r2Cs00           2962 	ld	hl,#_sintabx
   0B80 19                 2963 	add	hl,de
   0B81 5E                 2964 	ld	e,(hl)
   0B82 23                 2965 	inc	hl
   0B83 56                 2966 	ld	d,(hl)
   0B84 DD 73 FE           2967 	ld	-2 (ix),e
   0B87 DD 72 FF           2968 	ld	-1 (ix),d
                           2969 ;demo.c:343: cmd.source_x = 0;
   0B8A 21r04s41           2970 	ld	hl,#_cmd
   0B8D 36 00              2971 	ld	(hl),#0x00
   0B8F 23                 2972 	inc	hl
   0B90 36 00              2973 	ld	(hl),#0x00
                           2974 ;demo.c:344: cmd.source_y = 0+yofff;
   0B92 11r06s41           2975 	ld	de,#_cmd + 2
   0B95 EB                 2976 	ex	de,hl
   0B96 71                 2977 	ld	(hl),c
   0B97 23                 2978 	inc	hl
   0B98 70                 2979 	ld	(hl),b
                           2980 ;demo.c:345: cmd.dest_x = xo;
   0B99 11r08s41           2981 	ld	de,#_cmd + 4
   0B9C EB                 2982 	ex	de,hl
   0B9D DD 7E FE           2983 	ld	a,-2 (ix)
   0BA0 77                 2984 	ld	(hl),a
   0BA1 23                 2985 	inc	hl
   0BA2 DD 7E FF           2986 	ld	a,-1 (ix)
   0BA5 77                 2987 	ld	(hl),a
                           2988 ;demo.c:346: cmd.dest_y = 3+yofff;
   0BA6 11r0As41           2989 	ld	de,#_cmd + 6
   0BA9 03                 2990 	inc	bc
   0BAA 03                 2991 	inc	bc
   0BAB 03                 2992 	inc	bc
   0BAC 6B                 2993 	ld	l,e
   0BAD 62                 2994 	ld	h,d
   0BAE 71                 2995 	ld	(hl),c
   0BAF 23                 2996 	inc	hl
   0BB0 70                 2997 	ld	(hl),b
                           2998 ;demo.c:347: cmd.size_x = 256;
   0BB1 21r0Cs41           2999 	ld	hl, #_cmd + 8
   0BB4 36 00              3000 	ld	(hl),#0x00
   0BB6 23                 3001 	inc	hl
   0BB7 36 01              3002 	ld	(hl),#0x01
                           3003 ;demo.c:348: cmd.size_y = 1;
   0BB9 21r0Es41           3004 	ld	hl, #_cmd + 10
   0BBC 36 01              3005 	ld	(hl),#0x01
   0BBE 23                 3006 	inc	hl
   0BBF 36 00              3007 	ld	(hl),#0x00
                           3008 ;demo.c:349: cmd.data = 0;
                           3009 ;demo.c:350: cmd.argument = 0;
   0BC1 3E 00              3010 	ld	a,#0x00
   0BC3 32r10s41           3011 	ld	(#_cmd + 12),a
   0BC6 32r11s41           3012 	ld	(#_cmd + 13),a
                           3013 ;demo.c:351: cmd.command = 0xD0;
   0BC9 3E D0              3014 	ld	a,#0xD0
   0BCB 32r12s41           3015 	ld	(#_cmd + 14),a
                           3016 ;demo.c:354: vdp_copier(&cmd);
   0BCE 21r04s41           3017 	ld	hl,#_cmd
   0BD1 E5                 3018 	push	hl
   0BD2 CDr00s00           3019 	call	_vdp_copier
   0BD5 F1                 3020 	pop	af
                           3021 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r1Bs41           3022 	ld	hl,#_yofff + 0
   0BD9 4E                 3023 	ld	c,(hl)
   0BDA 21r1Bs41           3024 	ld	hl,#_yofff
   0BDD 79                 3025 	ld	a,c
   0BDE C6 02              3026 	add	a,#0x02
   0BE0 77                 3027 	ld	(hl),a
   0BE1 C3r5Fs0B           3028 	jp	00105$
   0BE4                    3029 00109$:
   0BE4 DD F9              3030 	ld	sp,ix
   0BE6 DD E1              3031 	pop	ix
   0BE8 C9                 3032 	ret
   0BE9                    3033 _do_ymmm_end::
                           3034 ;demo.c:371: void do_blocks() {
                           3035 ;	---------------------------------
                           3036 ; Function do_blocks
                           3037 ; ---------------------------------
   0BE9                    3038 _do_blocks_start::
   0BE9                    3039 _do_blocks:
   0BE9 DD E5              3040 	push	ix
   0BEB DD 21 00 00        3041 	ld	ix,#0
   0BEF DD 39              3042 	add	ix,sp
   0BF1 21 FA FF           3043 	ld	hl,#-6
   0BF4 39                 3044 	add	hl,sp
   0BF5 F9                 3045 	ld	sp,hl
                           3046 ;demo.c:373: int ys = 0;
   0BF6 DD 36 FC 00        3047 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3048 	ld	-3 (ix),#0x00
                           3049 ;demo.c:374: int ye = 0;
   0BFE DD 36 FA 00        3050 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3051 	ld	-5 (ix),#0x00
                           3052 ;demo.c:376: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3053 	ld	hl,#0x0017
   0C09 E5                 3054 	push	hl
   0C0A CDr00s00           3055 	call	_vdp_register
   0C0D F1                 3056 	pop	af
                           3057 ;demo.c:378: if (block_init == 0) {
   0C0E AF                 3058 	xor	a,a
   0C0F FD 21r21s41        3059 	ld	iy,#_block_init
   0C13 FD B6 00           3060 	or	a,0 (iy)
   0C16 C2r7Es0C           3061 	jp	NZ,00108$
                           3062 ;demo.c:380: vdp_set_screen5();
   0C19 CDr00s00           3063 	call	_vdp_set_screen5
                           3064 ;demo.c:382: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3065 	ld	hl,#0x5F02
   0C1F E5                 3066 	push	hl
   0C20 CDr00s00           3067 	call	_vdp_register
   0C23 F1                 3068 	pop	af
                           3069 ;demo.c:384: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3070 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3071 	ld	-1 (ix),#0x00
   0C2C                    3072 00110$:
   0C2C DD 7E FE           3073 	ld	a,-2 (ix)
   0C2F D6 10              3074 	sub	a,#0x10
   0C31 DD 7E FF           3075 	ld	a,-1 (ix)
   0C34 DE 00              3076 	sbc	a,#0x00
   0C36 F2r6Es0C           3077 	jp	P,00113$
   0C39 DD 4E FE           3078 	ld	c,-2 (ix)
   0C3C DD 46 FF           3079 	ld	b,-1 (ix)
   0C3F CB 21              3080 	sla	c
   0C41 CB 10              3081 	rl	b
   0C43 21r2As41           3082 	ld	hl,#_btab
   0C46 09                 3083 	add	hl,bc
   0C47 4D                 3084 	ld	c,l
   0C48 44                 3085 	ld	b,h
   0C49 DD 5E FE           3086 	ld	e,-2 (ix)
   0C4C DD 56 FF           3087 	ld	d,-1 (ix)
   0C4F CB 23              3088 	sla	e
   0C51 CB 12              3089 	rl	d
   0C53 CB 23              3090 	sla	e
   0C55 CB 12              3091 	rl	d
   0C57 CB 23              3092 	sla	e
   0C59 CB 12              3093 	rl	d
   0C5B CB 23              3094 	sla	e
   0C5D CB 12              3095 	rl	d
   0C5F 69                 3096 	ld	l,c
   0C60 60                 3097 	ld	h,b
   0C61 73                 3098 	ld	(hl),e
   0C62 23                 3099 	inc	hl
   0C63 72                 3100 	ld	(hl),d
   0C64 DD 34 FE           3101 	inc	-2 (ix)
   0C67 20 03              3102 	jr	NZ,00139$
   0C69 DD 34 FF           3103 	inc	-1 (ix)
   0C6C                    3104 00139$:
   0C6C 18 BE              3105 	jr	00110$
   0C6E                    3106 00113$:
                           3107 ;demo.c:385: vdp_load_palette(block_palette);
   0C6E 21r80s40           3108 	ld	hl,#_block_palette
   0C71 E5                 3109 	push	hl
   0C72 CDr00s00           3110 	call	_vdp_load_palette
   0C75 F1                 3111 	pop	af
                           3112 ;demo.c:387: block_init = 1;
   0C76 21r21s41           3113 	ld	hl,#_block_init + 0
   0C79 36 01              3114 	ld	(hl), #0x01
   0C7B C3r07s0E           3115 	jp	00122$
   0C7E                    3116 00108$:
                           3117 ;demo.c:391: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3Ar4As41           3118 	ld	a,(#_flof+0)
   0C81 FD 21r4As41        3119 	ld	iy,#_flof
   0C85 FD B6 01           3120 	or	a,1 (iy)
   0C88 20 10              3121 	jr	NZ,00102$
   0C8A DD 36 FC 00        3122 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3123 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3124 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3125 	ld	-5 (ix),#0x00
   0C9A                    3126 00102$:
                           3127 ;demo.c:392: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3Ar4As41           3128 	ld	a,(#_flof+0)
   0C9D D6 01              3129 	sub	a,#0x01
   0C9F 20 06              3130 	jr	NZ,00140$
   0CA1 3Ar4Bs41           3131 	ld	a,(#_flof+1)
   0CA4 B7                 3132 	or	a,a
   0CA5 28 02              3133 	jr	Z,00141$
   0CA7                    3134 00140$:
   0CA7 18 10              3135 	jr	00104$
   0CA9                    3136 00141$:
   0CA9 DD 36 FC 08        3137 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3138 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3139 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3140 	ld	-5 (ix),#0x00
   0CB9                    3141 00104$:
                           3142 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r28s41        3143 	ld	iy,#_bty
   0CBD FD 36 00 03        3144 	ld	0 (iy),#0x03
   0CC1 FD 21r28s41        3145 	ld	iy,#_bty
   0CC5 FD 36 01 00        3146 	ld	1 (iy),#0x00
   0CC9                    3147 00118$:
   0CC9 3Ar28s41           3148 	ld	a,(#_bty+0)
   0CCC D6 0B              3149 	sub	a,#0x0B
   0CCE 3Ar29s41           3150 	ld	a,(#_bty+1)
   0CD1 DE 00              3151 	sbc	a,#0x00
   0CD3 F2rDEs0D           3152 	jp	P,00121$
                           3153 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3154 	ld	a,-4 (ix)
   0CD9 FD 21r26s41        3155 	ld	iy,#_btx
   0CDD FD 77 00           3156 	ld	0 (iy),a
   0CE0 DD 7E FD           3157 	ld	a,-3 (ix)
   0CE3 FD 21r26s41        3158 	ld	iy,#_btx
   0CE7 FD 77 01           3159 	ld	1 (iy),a
   0CEA                    3160 00114$:
   0CEA 3Ar26s41           3161 	ld	a,(#_btx+0)
   0CED DD 96 FA           3162 	sub	a,-6 (ix)
   0CF0 3Ar27s41           3163 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3164 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3165 	jp	P,00120$
                           3166 ;demo.c:396: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3167 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3168 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3169 	and	a,0 (iy)
   0D03 21r00s00           3170 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3171 	or	a,(hl)
   0D07 4F                 3172 	ld	c,a
   0D08 CB 39              3173 	srl	c
   0D0A 21r22s41           3174 	ld	hl,#_bsx + 0
   0D0D 71                 3175 	ld	(hl), c
   0D0E 21r23s41           3176 	ld	hl,#_bsx + 1
   0D11 36 00              3177 	ld	(hl), #0x00
                           3178 ;demo.c:397: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3179 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r24s41           3180 	ld	hl,#_bsy + 0
   0D19 77                 3181 	ld	(hl), a
   0D1A 21r25s41           3182 	ld	hl,#_bsy + 1
   0D1D 36 00              3183 	ld	(hl), #0x00
                           3184 ;demo.c:398: cmd.source_x = btab[bsx];
   0D1F 21r22s41           3185 	ld	hl,#_bsx + 0
   0D22 4E                 3186 	ld	c,(hl)
   0D23 21r23s41           3187 	ld	hl,#_bsx + 1
   0D26 46                 3188 	ld	b,(hl)
   0D27 CB 21              3189 	sla	c
   0D29 CB 10              3190 	rl	b
   0D2B 21r2As41           3191 	ld	hl,#_btab
   0D2E 09                 3192 	add	hl,bc
   0D2F 4E                 3193 	ld	c,(hl)
   0D30 23                 3194 	inc	hl
   0D31 46                 3195 	ld	b,(hl)
   0D32 21r04s41           3196 	ld	hl,#_cmd
   0D35 71                 3197 	ld	(hl),c
   0D36 23                 3198 	inc	hl
   0D37 70                 3199 	ld	(hl),b
                           3200 ;demo.c:399: cmd.source_y = 768+btab[bsy];
   0D38 01r06s41           3201 	ld	bc,#_cmd + 2
   0D3B 21r24s41           3202 	ld	hl,#_bsy + 0
   0D3E 5E                 3203 	ld	e,(hl)
   0D3F 21r25s41           3204 	ld	hl,#_bsy + 1
   0D42 56                 3205 	ld	d,(hl)
   0D43 CB 23              3206 	sla	e
   0D45 CB 12              3207 	rl	d
   0D47 21r2As41           3208 	ld	hl,#_btab
   0D4A 19                 3209 	add	hl,de
   0D4B 5E                 3210 	ld	e,(hl)
   0D4C 23                 3211 	inc	hl
   0D4D 56                 3212 	ld	d,(hl)
   0D4E 21 00 03           3213 	ld	hl,#0x0300
   0D51 19                 3214 	add	hl,de
   0D52 EB                 3215 	ex	de,hl
   0D53 69                 3216 	ld	l,c
   0D54 60                 3217 	ld	h,b
   0D55 73                 3218 	ld	(hl),e
   0D56 23                 3219 	inc	hl
   0D57 72                 3220 	ld	(hl),d
                           3221 ;demo.c:400: cmd.dest_x = btab[btx];
   0D58 01r08s41           3222 	ld	bc,#_cmd + 4
   0D5B 21r26s41           3223 	ld	hl,#_btx + 0
   0D5E 5E                 3224 	ld	e,(hl)
   0D5F 21r27s41           3225 	ld	hl,#_btx + 1
   0D62 56                 3226 	ld	d,(hl)
   0D63 CB 23              3227 	sla	e
   0D65 CB 12              3228 	rl	d
   0D67 21r2As41           3229 	ld	hl,#_btab
   0D6A 19                 3230 	add	hl,de
   0D6B 5E                 3231 	ld	e,(hl)
   0D6C 23                 3232 	inc	hl
   0D6D 56                 3233 	ld	d,(hl)
   0D6E 69                 3234 	ld	l,c
   0D6F 60                 3235 	ld	h,b
   0D70 73                 3236 	ld	(hl),e
   0D71 23                 3237 	inc	hl
   0D72 72                 3238 	ld	(hl),d
                           3239 ;demo.c:401: cmd.dest_y = 512+btab[bty];
   0D73 01r0As41           3240 	ld	bc,#_cmd + 6
   0D76 21r28s41           3241 	ld	hl,#_bty + 0
   0D79 5E                 3242 	ld	e,(hl)
   0D7A 21r29s41           3243 	ld	hl,#_bty + 1
   0D7D 56                 3244 	ld	d,(hl)
   0D7E CB 23              3245 	sla	e
   0D80 CB 12              3246 	rl	d
   0D82 21r2As41           3247 	ld	hl,#_btab
   0D85 19                 3248 	add	hl,de
   0D86 5E                 3249 	ld	e,(hl)
   0D87 23                 3250 	inc	hl
   0D88 56                 3251 	ld	d,(hl)
   0D89 21 00 02           3252 	ld	hl,#0x0200
   0D8C 19                 3253 	add	hl,de
   0D8D EB                 3254 	ex	de,hl
   0D8E 69                 3255 	ld	l,c
   0D8F 60                 3256 	ld	h,b
   0D90 73                 3257 	ld	(hl),e
   0D91 23                 3258 	inc	hl
   0D92 72                 3259 	ld	(hl),d
                           3260 ;demo.c:402: cmd.size_x = 16;
   0D93 21r0Cs41           3261 	ld	hl, #_cmd + 8
   0D96 36 10              3262 	ld	(hl),#0x10
   0D98 23                 3263 	inc	hl
   0D99 36 00              3264 	ld	(hl),#0x00
                           3265 ;demo.c:403: cmd.size_y = 16;
   0D9B 21r0Es41           3266 	ld	hl, #_cmd + 10
   0D9E 36 10              3267 	ld	(hl),#0x10
   0DA0 23                 3268 	inc	hl
   0DA1 36 00              3269 	ld	(hl),#0x00
                           3270 ;demo.c:404: cmd.data = 0;
                           3271 ;demo.c:405: cmd.argument = 0x00;
   0DA3 3E 00              3272 	ld	a,#0x00
   0DA5 32r10s41           3273 	ld	(#_cmd + 12),a
   0DA8 32r11s41           3274 	ld	(#_cmd + 13),a
                           3275 ;demo.c:406: cmd.command = 0xD0;
   0DAB 3E D0              3276 	ld	a,#0xD0
   0DAD 32r12s41           3277 	ld	(#_cmd + 14),a
                           3278 ;demo.c:407: vdp_copier(&cmd);
   0DB0 21r04s41           3279 	ld	hl,#_cmd
   0DB3 E5                 3280 	push	hl
   0DB4 CDr00s00           3281 	call	_vdp_copier
   0DB7 F1                 3282 	pop	af
                           3283 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r26s41        3284 	ld	iy,#_btx
   0DBC FD 34 00           3285 	inc	0 (iy)
   0DBF 20 07              3286 	jr	NZ,00150$
   0DC1 FD 21r26s41        3287 	ld	iy,#_btx
   0DC5 FD 34 01           3288 	inc	1 (iy)
   0DC8                    3289 00150$:
   0DC8 C3rEAs0C           3290 	jp	00114$
   0DCB                    3291 00120$:
                           3292 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0DCB FD 21r28s41        3293 	ld	iy,#_bty
   0DCF FD 34 00           3294 	inc	0 (iy)
   0DD2 20 07              3295 	jr	NZ,00151$
   0DD4 FD 21r28s41        3296 	ld	iy,#_bty
   0DD8 FD 34 01           3297 	inc	1 (iy)
   0DDB                    3298 00151$:
   0DDB C3rC9s0C           3299 	jp	00118$
   0DDE                    3300 00121$:
                           3301 ;demo.c:411: flof++;
   0DDE FD 21r4As41        3302 	ld	iy,#_flof
   0DE2 FD 34 00           3303 	inc	0 (iy)
   0DE5 20 07              3304 	jr	NZ,00152$
   0DE7 FD 21r4As41        3305 	ld	iy,#_flof
   0DEB FD 34 01           3306 	inc	1 (iy)
   0DEE                    3307 00152$:
                           3308 ;demo.c:412: if (flof == 2) flof = 0;
   0DEE 3Ar4As41           3309 	ld	a,(#_flof+0)
   0DF1 D6 02              3310 	sub	a,#0x02
   0DF3 20 06              3311 	jr	NZ,00153$
   0DF5 3Ar4Bs41           3312 	ld	a,(#_flof+1)
   0DF8 B7                 3313 	or	a,a
   0DF9 28 02              3314 	jr	Z,00154$
   0DFB                    3315 00153$:
   0DFB 18 0A              3316 	jr	00122$
   0DFD                    3317 00154$:
   0DFD 21r4As41           3318 	ld	hl,#_flof + 0
   0E00 36 00              3319 	ld	(hl), #0x00
   0E02 21r4Bs41           3320 	ld	hl,#_flof + 1
   0E05 36 00              3321 	ld	(hl), #0x00
   0E07                    3322 00122$:
   0E07 DD F9              3323 	ld	sp,ix
   0E09 DD E1              3324 	pop	ix
   0E0B C9                 3325 	ret
   0E0C                    3326 _do_blocks_end::
                           3327 ;demo.c:420: void raster_effu() {
                           3328 ;	---------------------------------
                           3329 ; Function raster_effu
                           3330 ; ---------------------------------
   0E0C                    3331 _raster_effu_start::
   0E0C                    3332 _raster_effu:
                           3333 ;demo.c:421: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3334 	ld	hl,#0x0017
   0E0F E5                 3335 	push	hl
   0E10 CDr00s00           3336 	call	_vdp_register
   0E13 F1                 3337 	pop	af
                           3338 ;demo.c:422: waitVB();
   0E14 76                 3339 		halt 
                           3340 ;demo.c:424: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3341 	ld	hl,#0x4001
   0E18 E5                 3342 	push	hl
   0E19 CDr00s00           3343 	call	_vdp_register
                           3344 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3345 	ld	a,#0x28
   0E1E 32r4Cs41           3346 	ld	(#_linenum + 0),a
   0E21 F1                 3347 	pop	af
   0E22 FD 21r4Cs41        3348 	ld	iy,#_linenum
   0E26 FD 36 01 00        3349 	ld	1 (iy),#0x00
   0E2A                    3350 00101$:
   0E2A 3Ar4Cs41           3351 	ld	a,(#_linenum+0)
   0E2D D6 D4              3352 	sub	a,#0xD4
   0E2F 3Ar4Ds41           3353 	ld	a,(#_linenum+1)
   0E32 DE 00              3354 	sbc	a,#0x00
   0E34 F2r65s0E           3355 	jp	P,00104$
                           3356 ;demo.c:427: vdp_register(19,linenum); // interrupt on line
   0E37 3Ar4Cs41           3357 	ld	a,(#_linenum+0)
   0E3A F5                 3358 	push	af
   0E3B 33                 3359 	inc	sp
   0E3C 3E 13              3360 	ld	a,#0x13
   0E3E F5                 3361 	push	af
   0E3F 33                 3362 	inc	sp
   0E40 CDr00s00           3363 	call	_vdp_register
   0E43 F1                 3364 	pop	af
                           3365 ;demo.c:428: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3366 	ld	hl,#0x1600
   0E47 E5                 3367 	push	hl
   0E48 CDr00s00           3368 	call	_vdp_register
   0E4B F1                 3369 	pop	af
                           3370 ;demo.c:430: waitVB();
   0E4C 76                 3371 		halt 
                           3372 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21r4Cs41           3373 	ld	hl,#_linenum
   0E50 7E                 3374 	ld	a,(hl)
   0E51 C6 04              3375 	add	a,#0x04
   0E53 23                 3376 	inc	hl
   0E54 2B                 3377 	dec	hl
   0E55 C5                 3378 	push	bc
   0E56 4F                 3379 	ld	c, a
   0E57 23                 3380 	inc	hl
   0E58 7E                 3381 	ld	a, (hl)
   0E59 47                 3382 	ld	b, a
   0E5A 79                 3383 	ld	a, c
   0E5B 2B                 3384 	dec	hl
   0E5C 77                 3385 	ld	(hl), a
   0E5D 78                 3386 	ld	a, b
   0E5E C1                 3387 	pop	bc
   0E5F CE 00              3388 	adc	a,#0x00
   0E61 23                 3389 	inc	hl
   0E62 77                 3390 	ld	(hl),a
   0E63 18 C5              3391 	jr	00101$
   0E65                    3392 00104$:
                           3393 ;demo.c:433: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3394 	ld	hl,#0x0017
   0E68 E5                 3395 	push	hl
   0E69 CDr00s00           3396 	call	_vdp_register
   0E6C F1                 3397 	pop	af
                           3398 ;demo.c:447: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3399 	ld	hl,#0x0600
   0E70 E5                 3400 	push	hl
   0E71 CDr00s00           3401 	call	_vdp_register
   0E74 F1                 3402 	pop	af
                           3403 ;demo.c:448: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3404 	ld	hl,#0x6001
   0E78 E5                 3405 	push	hl
   0E79 CDr00s00           3406 	call	_vdp_register
   0E7C F1                 3407 	pop	af
   0E7D C9                 3408 	ret
   0E7E                    3409 _raster_effu_end::
                           3410 ;demo.c:479: void do_letter(char cc) {
                           3411 ;	---------------------------------
                           3412 ; Function do_letter
                           3413 ; ---------------------------------
   0E7E                    3414 _do_letter_start::
   0E7E                    3415 _do_letter:
   0E7E DD E5              3416 	push	ix
   0E80 DD 21 00 00        3417 	ld	ix,#0
   0E84 DD 39              3418 	add	ix,sp
   0E86 F5                 3419 	push	af
                           3420 ;demo.c:480: int cidx = cc - 65;
   0E87 DD 4E 04           3421 	ld	c,4 (ix)
   0E8A DD 7E 04           3422 	ld	a,4 (ix)
   0E8D 17                 3423 	rla	
   0E8E 9F                 3424 	sbc	a,a
   0E8F 47                 3425 	ld	b,a
   0E90 79                 3426 	ld	a,c
   0E91 C6 BF              3427 	add	a,#0xBF
   0E93 DD 77 FE           3428 	ld	-2 (ix),a
   0E96 78                 3429 	ld	a,b
   0E97 CE FF              3430 	adc	a,#0xFF
   0E99 DD 77 FF           3431 	ld	-1 (ix),a
                           3432 ;demo.c:481: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3433 	ld	a,#<_font_x
   0E9E DD 86 FE           3434 	add	a,-2 (ix)
   0EA1 5F                 3435 	ld	e,a
   0EA2 3Es0F              3436 	ld	a,#>_font_x
   0EA4 DD 8E FF           3437 	adc	a,-1 (ix)
   0EA7 57                 3438 	ld	d,a
   0EA8 1A                 3439 	ld	a,(de)
   0EA9 5F                 3440 	ld	e,a
   0EAA 16 00              3441 	ld	d,#0x00
   0EAC 21 7F 00           3442 	ld	hl,#0x007F
   0EAF 19                 3443 	add	hl,de
   0EB0 EB                 3444 	ex	de,hl
   0EB1 21r04s41           3445 	ld	hl,#_cmd
   0EB4 73                 3446 	ld	(hl),e
   0EB5 23                 3447 	inc	hl
   0EB6 72                 3448 	ld	(hl),d
                           3449 ;demo.c:482: cmd.source_y = 512+font_y[cidx];
   0EB7 11r06s41           3450 	ld	de,#_cmd + 2
   0EBA 3Er7C              3451 	ld	a,#<_font_y
   0EBC DD 86 FE           3452 	add	a,-2 (ix)
   0EBF 4F                 3453 	ld	c,a
   0EC0 3Es0F              3454 	ld	a,#>_font_y
   0EC2 DD 8E FF           3455 	adc	a,-1 (ix)
   0EC5 47                 3456 	ld	b,a
   0EC6 0A                 3457 	ld	a,(bc)
   0EC7 4F                 3458 	ld	c,a
   0EC8 06 00              3459 	ld	b,#0x00
   0ECA 21 00 02           3460 	ld	hl,#0x0200
   0ECD 09                 3461 	add	hl,bc
   0ECE 4D                 3462 	ld	c,l
   0ECF 44                 3463 	ld	b,h
   0ED0 EB                 3464 	ex	de,hl
   0ED1 71                 3465 	ld	(hl),c
   0ED2 23                 3466 	inc	hl
   0ED3 70                 3467 	ld	(hl),b
                           3468 ;demo.c:483: cmd.dest_x = lx;
   0ED4 01r08s41           3469 	ld	bc,#_cmd + 4
   0ED7 21r4Es41           3470 	ld	hl,#_lx + 0
   0EDA 5E                 3471 	ld	e,(hl)
   0EDB 16 00              3472 	ld	d,#0x00
   0EDD 69                 3473 	ld	l,c
   0EDE 60                 3474 	ld	h,b
   0EDF 73                 3475 	ld	(hl),e
   0EE0 23                 3476 	inc	hl
   0EE1 72                 3477 	ld	(hl),d
                           3478 ;demo.c:484: cmd.dest_y = ly;
   0EE2 01r0As41           3479 	ld	bc,#_cmd + 6
   0EE5 21r4Fs41           3480 	ld	hl,#_ly + 0
   0EE8 5E                 3481 	ld	e,(hl)
   0EE9 16 00              3482 	ld	d,#0x00
   0EEB 69                 3483 	ld	l,c
   0EEC 60                 3484 	ld	h,b
   0EED 73                 3485 	ld	(hl),e
   0EEE 23                 3486 	inc	hl
   0EEF 72                 3487 	ld	(hl),d
                           3488 ;demo.c:485: cmd.size_x = font_w[cidx];
   0EF0 01r0Cs41           3489 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3490 	ld	a,#<_font_w
   0EF5 DD 86 FE           3491 	add	a,-2 (ix)
   0EF8 5F                 3492 	ld	e,a
   0EF9 3Es0F              3493 	ld	a,#>_font_w
   0EFB DD 8E FF           3494 	adc	a,-1 (ix)
   0EFE 57                 3495 	ld	d,a
   0EFF 1A                 3496 	ld	a,(de)
   0F00 5F                 3497 	ld	e,a
   0F01 16 00              3498 	ld	d,#0x00
   0F03 69                 3499 	ld	l,c
   0F04 60                 3500 	ld	h,b
   0F05 73                 3501 	ld	(hl),e
   0F06 23                 3502 	inc	hl
   0F07 72                 3503 	ld	(hl),d
                           3504 ;demo.c:486: cmd.size_y = 8;
   0F08 21r0Es41           3505 	ld	hl, #_cmd + 10
   0F0B 36 08              3506 	ld	(hl),#0x08
   0F0D 23                 3507 	inc	hl
   0F0E 36 00              3508 	ld	(hl),#0x00
                           3509 ;demo.c:487: cmd.argument = 0x00;
   0F10 3E 00              3510 	ld	a,#0x00
   0F12 32r11s41           3511 	ld	(#_cmd + 13),a
                           3512 ;demo.c:488: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3513 	ld	a,#0x90
   0F17 32r12s41           3514 	ld	(#_cmd + 14),a
                           3515 ;demo.c:489: vdp_copier(&cmd);
   0F1A 21r04s41           3516 	ld	hl,#_cmd
   0F1D E5                 3517 	push	hl
   0F1E CDr00s00           3518 	call	_vdp_copier
   0F21 F1                 3519 	pop	af
                           3520 ;demo.c:490: lx+=font_w[cidx]-1;
   0F22 3ErBC              3521 	ld	a,#<_font_w
   0F24 DD 86 FE           3522 	add	a,-2 (ix)
   0F27 4F                 3523 	ld	c,a
   0F28 3Es0F              3524 	ld	a,#>_font_w
   0F2A DD 8E FF           3525 	adc	a,-1 (ix)
   0F2D 47                 3526 	ld	b,a
   0F2E 0A                 3527 	ld	a,(bc)
   0F2F 4F                 3528 	ld	c,a
   0F30 0D                 3529 	dec	c
   0F31 21r4Es41           3530 	ld	hl,#_lx
   0F34 7E                 3531 	ld	a,(hl)
   0F35 81                 3532 	add	a,c
   0F36 77                 3533 	ld	(hl),a
   0F37 DD F9              3534 	ld	sp,ix
   0F39 DD E1              3535 	pop	ix
   0F3B C9                 3536 	ret
   0F3C                    3537 _do_letter_end::
   0F3C                    3538 _font_x:
   0F3C 01                 3539 	.db #0x01
   0F3D 09                 3540 	.db #0x09
   0F3E 11                 3541 	.db #0x11
   0F3F 19                 3542 	.db #0x19
   0F40 21                 3543 	.db #0x21
   0F41 29                 3544 	.db #0x29
   0F42 31                 3545 	.db #0x31
   0F43 39                 3546 	.db #0x39
   0F44 41                 3547 	.db #0x41
   0F45 46                 3548 	.db #0x46
   0F46 4E                 3549 	.db #0x4E
   0F47 56                 3550 	.db #0x56
   0F48 5E                 3551 	.db #0x5E
   0F49 01                 3552 	.db #0x01
   0F4A 0A                 3553 	.db #0x0A
   0F4B 12                 3554 	.db #0x12
   0F4C 1A                 3555 	.db #0x1A
   0F4D 23                 3556 	.db #0x23
   0F4E 2B                 3557 	.db #0x2B
   0F4F 33                 3558 	.db #0x33
   0F50 3C                 3559 	.db #0x3C
   0F51 44                 3560 	.db #0x44
   0F52 4C                 3561 	.db #0x4C
   0F53 56                 3562 	.db #0x56
   0F54 5E                 3563 	.db #0x5E
   0F55 67                 3564 	.db #0x67
   0F56 00                 3565 	.db #0x00
   0F57 00                 3566 	.db #0x00
   0F58 00                 3567 	.db #0x00
   0F59 00                 3568 	.db #0x00
   0F5A 00                 3569 	.db #0x00
   0F5B 00                 3570 	.db #0x00
   0F5C 01                 3571 	.db #0x01
   0F5D 09                 3572 	.db #0x09
   0F5E 11                 3573 	.db #0x11
   0F5F 18                 3574 	.db #0x18
   0F60 20                 3575 	.db #0x20
   0F61 28                 3576 	.db #0x28
   0F62 2F                 3577 	.db #0x2F
   0F63 37                 3578 	.db #0x37
   0F64 3F                 3579 	.db #0x3F
   0F65 45                 3580 	.db #0x45
   0F66 4C                 3581 	.db #0x4C
   0F67 54                 3582 	.db #0x54
   0F68 5A                 3583 	.db #0x5A
   0F69 64                 3584 	.db #0x64
   0F6A 01                 3585 	.db #0x01
   0F6B 09                 3586 	.db #0x09
   0F6C 11                 3587 	.db #0x11
   0F6D 19                 3588 	.db #0x19
   0F6E 21                 3589 	.db #0x21
   0F6F 29                 3590 	.db #0x29
   0F70 30                 3591 	.db #0x30
   0F71 38                 3592 	.db #0x38
   0F72 40                 3593 	.db #0x40
   0F73 4A                 3594 	.db #0x4A
   0F74 52                 3595 	.db #0x52
   0F75 5A                 3596 	.db #0x5A
   0F76 00                 3597 	.db 0x00
   0F77 00                 3598 	.db 0x00
   0F78 00                 3599 	.db 0x00
   0F79 00                 3600 	.db 0x00
   0F7A 00                 3601 	.db 0x00
   0F7B 00                 3602 	.db 0x00
   0F7C                    3603 _font_y:
   0F7C 1C                 3604 	.db #0x1C
   0F7D 1C                 3605 	.db #0x1C
   0F7E 1C                 3606 	.db #0x1C
   0F7F 1C                 3607 	.db #0x1C
   0F80 1C                 3608 	.db #0x1C
   0F81 1C                 3609 	.db #0x1C
   0F82 1C                 3610 	.db #0x1C
   0F83 1C                 3611 	.db #0x1C
   0F84 1C                 3612 	.db #0x1C
   0F85 1C                 3613 	.db #0x1C
   0F86 1C                 3614 	.db #0x1C
   0F87 1C                 3615 	.db #0x1C
   0F88 1C                 3616 	.db #0x1C
   0F89 25                 3617 	.db #0x25
   0F8A 25                 3618 	.db #0x25
   0F8B 25                 3619 	.db #0x25
   0F8C 25                 3620 	.db #0x25
   0F8D 25                 3621 	.db #0x25
   0F8E 25                 3622 	.db #0x25
   0F8F 25                 3623 	.db #0x25
   0F90 25                 3624 	.db #0x25
   0F91 25                 3625 	.db #0x25
   0F92 25                 3626 	.db #0x25
   0F93 25                 3627 	.db #0x25
   0F94 25                 3628 	.db #0x25
   0F95 25                 3629 	.db #0x25
   0F96 00                 3630 	.db #0x00
   0F97 00                 3631 	.db #0x00
   0F98 00                 3632 	.db #0x00
   0F99 00                 3633 	.db #0x00
   0F9A 00                 3634 	.db #0x00
   0F9B 00                 3635 	.db #0x00
   0F9C 37                 3636 	.db #0x37
   0F9D 37                 3637 	.db #0x37
   0F9E 37                 3638 	.db #0x37
   0F9F 37                 3639 	.db #0x37
   0FA0 37                 3640 	.db #0x37
   0FA1 37                 3641 	.db #0x37
   0FA2 37                 3642 	.db #0x37
   0FA3 37                 3643 	.db #0x37
   0FA4 37                 3644 	.db #0x37
   0FA5 37                 3645 	.db #0x37
   0FA6 37                 3646 	.db #0x37
   0FA7 37                 3647 	.db #0x37
   0FA8 37                 3648 	.db #0x37
   0FA9 37                 3649 	.db #0x37
   0FAA 40                 3650 	.db #0x40
   0FAB 40                 3651 	.db #0x40
   0FAC 40                 3652 	.db #0x40
   0FAD 40                 3653 	.db #0x40
   0FAE 40                 3654 	.db #0x40
   0FAF 40                 3655 	.db #0x40
   0FB0 40                 3656 	.db #0x40
   0FB1 40                 3657 	.db #0x40
   0FB2 40                 3658 	.db #0x40
   0FB3 40                 3659 	.db #0x40
   0FB4 40                 3660 	.db #0x40
   0FB5 40                 3661 	.db #0x40
   0FB6 00                 3662 	.db 0x00
   0FB7 00                 3663 	.db 0x00
   0FB8 00                 3664 	.db 0x00
   0FB9 00                 3665 	.db 0x00
   0FBA 00                 3666 	.db 0x00
   0FBB 00                 3667 	.db 0x00
   0FBC                    3668 _font_w:
   0FBC 07                 3669 	.db #0x07
   0FBD 07                 3670 	.db #0x07
   0FBE 07                 3671 	.db #0x07
   0FBF 07                 3672 	.db #0x07
   0FC0 07                 3673 	.db #0x07
   0FC1 07                 3674 	.db #0x07
   0FC2 07                 3675 	.db #0x07
   0FC3 07                 3676 	.db #0x07
   0FC4 04                 3677 	.db #0x04
   0FC5 07                 3678 	.db #0x07
   0FC6 07                 3679 	.db #0x07
   0FC7 07                 3680 	.db #0x07
   0FC8 09                 3681 	.db #0x09
   0FC9 08                 3682 	.db #0x08
   0FCA 07                 3683 	.db #0x07
   0FCB 07                 3684 	.db #0x07
   0FCC 08                 3685 	.db #0x08
   0FCD 07                 3686 	.db #0x07
   0FCE 07                 3687 	.db #0x07
   0FCF 08                 3688 	.db #0x08
   0FD0 07                 3689 	.db #0x07
   0FD1 07                 3690 	.db #0x07
   0FD2 09                 3691 	.db #0x09
   0FD3 07                 3692 	.db #0x07
   0FD4 08                 3693 	.db #0x08
   0FD5 07                 3694 	.db #0x07
   0FD6 00                 3695 	.db #0x00
   0FD7 00                 3696 	.db #0x00
   0FD8 00                 3697 	.db #0x00
   0FD9 00                 3698 	.db #0x00
   0FDA 00                 3699 	.db #0x00
   0FDB 00                 3700 	.db #0x00
   0FDC 07                 3701 	.db #0x07
   0FDD 07                 3702 	.db #0x07
   0FDE 06                 3703 	.db #0x06
   0FDF 07                 3704 	.db #0x07
   0FE0 07                 3705 	.db #0x07
   0FE1 07                 3706 	.db #0x07
   0FE2 07                 3707 	.db #0x07
   0FE3 07                 3708 	.db #0x07
   0FE4 05                 3709 	.db #0x05
   0FE5 06                 3710 	.db #0x06
   0FE6 07                 3711 	.db #0x07
   0FE7 05                 3712 	.db #0x05
   0FE8 09                 3713 	.db #0x09
   0FE9 07                 3714 	.db #0x07
   0FEA 07                 3715 	.db #0x07
   0FEB 07                 3716 	.db #0x07
   0FEC 07                 3717 	.db #0x07
   0FED 07                 3718 	.db #0x07
   0FEE 07                 3719 	.db #0x07
   0FEF 06                 3720 	.db #0x06
   0FF0 07                 3721 	.db #0x07
   0FF1 07                 3722 	.db #0x07
   0FF2 09                 3723 	.db #0x09
   0FF3 07                 3724 	.db #0x07
   0FF4 07                 3725 	.db #0x07
   0FF5 07                 3726 	.db #0x07
   0FF6 00                 3727 	.db 0x00
   0FF7 00                 3728 	.db 0x00
   0FF8 00                 3729 	.db 0x00
   0FF9 00                 3730 	.db 0x00
   0FFA 00                 3731 	.db 0x00
   0FFB 00                 3732 	.db 0x00
                           3733 ;demo.c:494: void do_letter_tall(char cc) {
                           3734 ;	---------------------------------
                           3735 ; Function do_letter_tall
                           3736 ; ---------------------------------
   0FFC                    3737 _do_letter_tall_start::
   0FFC                    3738 _do_letter_tall:
   0FFC DD E5              3739 	push	ix
   0FFE DD 21 00 00        3740 	ld	ix,#0
   1002 DD 39              3741 	add	ix,sp
   1004 F5                 3742 	push	af
                           3743 ;demo.c:495: int cidx = cc - 65;
   1005 DD 4E 04           3744 	ld	c,4 (ix)
   1008 DD 7E 04           3745 	ld	a,4 (ix)
   100B 17                 3746 	rla	
   100C 9F                 3747 	sbc	a,a
   100D 47                 3748 	ld	b,a
   100E 79                 3749 	ld	a,c
   100F C6 BF              3750 	add	a,#0xBF
   1011 DD 77 FE           3751 	ld	-2 (ix),a
   1014 78                 3752 	ld	a,b
   1015 CE FF              3753 	adc	a,#0xFF
   1017 DD 77 FF           3754 	ld	-1 (ix),a
                           3755 ;demo.c:496: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3756 	ld	a,#<_font_x
   101C DD 86 FE           3757 	add	a,-2 (ix)
   101F 5F                 3758 	ld	e,a
   1020 3Es0F              3759 	ld	a,#>_font_x
   1022 DD 8E FF           3760 	adc	a,-1 (ix)
   1025 57                 3761 	ld	d,a
   1026 1A                 3762 	ld	a,(de)
   1027 5F                 3763 	ld	e,a
   1028 16 00              3764 	ld	d,#0x00
   102A 21 7F 00           3765 	ld	hl,#0x007F
   102D 19                 3766 	add	hl,de
   102E EB                 3767 	ex	de,hl
   102F 21r04s41           3768 	ld	hl,#_cmd
   1032 73                 3769 	ld	(hl),e
   1033 23                 3770 	inc	hl
   1034 72                 3771 	ld	(hl),d
                           3772 ;demo.c:497: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r06s41           3773 	ld	de,#_cmd + 2
   1038 3Er7C              3774 	ld	a,#<_font_y
   103A DD 86 FE           3775 	add	a,-2 (ix)
   103D 4F                 3776 	ld	c,a
   103E 3Es0F              3777 	ld	a,#>_font_y
   1040 DD 8E FF           3778 	adc	a,-1 (ix)
   1043 47                 3779 	ld	b,a
   1044 0A                 3780 	ld	a,(bc)
   1045 4F                 3781 	ld	c,a
   1046 06 00              3782 	ld	b,#0x00
   1048 21 FF 01           3783 	ld	hl,#0x01FF
   104B 09                 3784 	add	hl,bc
   104C 4D                 3785 	ld	c,l
   104D 44                 3786 	ld	b,h
   104E EB                 3787 	ex	de,hl
   104F 71                 3788 	ld	(hl),c
   1050 23                 3789 	inc	hl
   1051 70                 3790 	ld	(hl),b
                           3791 ;demo.c:498: cmd.dest_x = lx;
   1052 01r08s41           3792 	ld	bc,#_cmd + 4
   1055 21r4Es41           3793 	ld	hl,#_lx + 0
   1058 5E                 3794 	ld	e,(hl)
   1059 16 00              3795 	ld	d,#0x00
   105B 69                 3796 	ld	l,c
   105C 60                 3797 	ld	h,b
   105D 73                 3798 	ld	(hl),e
   105E 23                 3799 	inc	hl
   105F 72                 3800 	ld	(hl),d
                           3801 ;demo.c:499: cmd.dest_y = ly;
   1060 01r0As41           3802 	ld	bc,#_cmd + 6
   1063 21r4Fs41           3803 	ld	hl,#_ly + 0
   1066 5E                 3804 	ld	e,(hl)
   1067 16 00              3805 	ld	d,#0x00
   1069 69                 3806 	ld	l,c
   106A 60                 3807 	ld	h,b
   106B 73                 3808 	ld	(hl),e
   106C 23                 3809 	inc	hl
   106D 72                 3810 	ld	(hl),d
                           3811 ;demo.c:500: cmd.size_x = font_w[cidx];
   106E 01r0Cs41           3812 	ld	bc,#_cmd + 8
   1071 3ErBC              3813 	ld	a,#<_font_w
   1073 DD 86 FE           3814 	add	a,-2 (ix)
   1076 5F                 3815 	ld	e,a
   1077 3Es0F              3816 	ld	a,#>_font_w
   1079 DD 8E FF           3817 	adc	a,-1 (ix)
   107C 57                 3818 	ld	d,a
   107D 1A                 3819 	ld	a,(de)
   107E 5F                 3820 	ld	e,a
   107F 16 00              3821 	ld	d,#0x00
   1081 69                 3822 	ld	l,c
   1082 60                 3823 	ld	h,b
   1083 73                 3824 	ld	(hl),e
   1084 23                 3825 	inc	hl
   1085 72                 3826 	ld	(hl),d
                           3827 ;demo.c:501: cmd.size_y = 10;
   1086 21r0Es41           3828 	ld	hl, #_cmd + 10
   1089 36 0A              3829 	ld	(hl),#0x0A
   108B 23                 3830 	inc	hl
   108C 36 00              3831 	ld	(hl),#0x00
                           3832 ;demo.c:502: cmd.argument = 0x00;
   108E 3E 00              3833 	ld	a,#0x00
   1090 32r11s41           3834 	ld	(#_cmd + 13),a
                           3835 ;demo.c:503: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3836 	ld	a,#0x90
   1095 32r12s41           3837 	ld	(#_cmd + 14),a
                           3838 ;demo.c:504: vdp_copier(&cmd);
   1098 21r04s41           3839 	ld	hl,#_cmd
   109B E5                 3840 	push	hl
   109C CDr00s00           3841 	call	_vdp_copier
   109F F1                 3842 	pop	af
                           3843 ;demo.c:505: lx+=font_w[cidx]-1;
   10A0 3ErBC              3844 	ld	a,#<_font_w
   10A2 DD 86 FE           3845 	add	a,-2 (ix)
   10A5 4F                 3846 	ld	c,a
   10A6 3Es0F              3847 	ld	a,#>_font_w
   10A8 DD 8E FF           3848 	adc	a,-1 (ix)
   10AB 47                 3849 	ld	b,a
   10AC 0A                 3850 	ld	a,(bc)
   10AD 4F                 3851 	ld	c,a
   10AE 0D                 3852 	dec	c
   10AF 21r4Es41           3853 	ld	hl,#_lx
   10B2 7E                 3854 	ld	a,(hl)
   10B3 81                 3855 	add	a,c
   10B4 77                 3856 	ld	(hl),a
   10B5 DD F9              3857 	ld	sp,ix
   10B7 DD E1              3858 	pop	ix
   10B9 C9                 3859 	ret
   10BA                    3860 _do_letter_tall_end::
                           3861 ;demo.c:508: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3862 ;	---------------------------------
                           3863 ; Function drawstr
                           3864 ; ---------------------------------
   10BA                    3865 _drawstr_start::
   10BA                    3866 _drawstr:
   10BA DD E5              3867 	push	ix
   10BC DD 21 00 00        3868 	ld	ix,#0
   10C0 DD 39              3869 	add	ix,sp
                           3870 ;demo.c:509: char* c = str;
   10C2 DD 4E 04           3871 	ld	c,4 (ix)
   10C5 DD 46 05           3872 	ld	b,5 (ix)
                           3873 ;demo.c:510: lx = x;
   10C8 DD 5E 06           3874 	ld	e,6 (ix)
   10CB 21r4Es41           3875 	ld	hl,#_lx + 0
   10CE 73                 3876 	ld	(hl), e
                           3877 ;demo.c:511: ly = y;
   10CF DD 7E 07           3878 	ld	a,7 (ix)
   10D2 21r4Fs41           3879 	ld	hl,#_ly + 0
   10D5 77                 3880 	ld	(hl), a
                           3881 ;demo.c:512: while (*c) {
   10D6                    3882 00107$:
   10D6 0A                 3883 	ld	a,(bc)
   10D7 57                 3884 	ld	d,a
   10D8 B7                 3885 	or	a,a
   10D9 28 42              3886 	jr	Z,00110$
                           3887 ;demo.c:513: char ltr = *c++; 
   10DB 03                 3888 	inc	bc
                           3889 ;demo.c:514: if (ltr == ' ') lx+=4;
   10DC 7A                 3890 	ld	a,d
   10DD D6 20              3891 	sub	a,#0x20
   10DF 20 1E              3892 	jr	NZ,00105$
   10E1 FD 21r4Es41        3893 	ld	iy,#_lx
   10E5 FD 34 00           3894 	inc	0 (iy)
   10E8 FD 21r4Es41        3895 	ld	iy,#_lx
   10EC FD 34 00           3896 	inc	0 (iy)
   10EF FD 21r4Es41        3897 	ld	iy,#_lx
   10F3 FD 34 00           3898 	inc	0 (iy)
   10F6 FD 21r4Es41        3899 	ld	iy,#_lx
   10FA FD 34 00           3900 	inc	0 (iy)
   10FD 18 D7              3901 	jr	00107$
   10FF                    3902 00105$:
                           3903 ;demo.c:515: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 3904 	ld	a,d
   1100 D6 5F              3905 	sub	a,#0x5F
   1102 20 0D              3906 	jr	NZ,00102$
   1104 21r4Fs41           3907 	ld	hl,#_ly
   1107 7E                 3908 	ld	a,(hl)
   1108 C6 09              3909 	add	a,#0x09
   110A 77                 3910 	ld	(hl),a
   110B 21r4Es41           3911 	ld	hl,#_lx + 0
   110E 73                 3912 	ld	(hl), e
   110F 18 C5              3913 	jr	00107$
   1111                    3914 00102$:
                           3915 ;demo.c:516: else do_letter(ltr);
   1111 C5                 3916 	push	bc
   1112 D5                 3917 	push	de
   1113 D5                 3918 	push	de
   1114 33                 3919 	inc	sp
   1115 CDr7Es0E           3920 	call	_do_letter
   1118 33                 3921 	inc	sp
   1119 D1                 3922 	pop	de
   111A C1                 3923 	pop	bc
   111B 18 B9              3924 	jr	00107$
   111D                    3925 00110$:
   111D DD E1              3926 	pop	ix
   111F C9                 3927 	ret
   1120                    3928 _drawstr_end::
                           3929 ;demo.c:520: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3930 ;	---------------------------------
                           3931 ; Function drawsine
                           3932 ; ---------------------------------
   1120                    3933 _drawsine_start::
   1120                    3934 _drawsine:
   1120 DD E5              3935 	push	ix
   1122 DD 21 00 00        3936 	ld	ix,#0
   1126 DD 39              3937 	add	ix,sp
   1128 3B                 3938 	dec	sp
                           3939 ;demo.c:521: char* c = str;
   1129 DD 4E 04           3940 	ld	c,4 (ix)
   112C DD 46 05           3941 	ld	b,5 (ix)
                           3942 ;demo.c:522: lx = x;
   112F DD 7E 06           3943 	ld	a,6 (ix)
   1132 21r4Es41           3944 	ld	hl,#_lx + 0
   1135 77                 3945 	ld	(hl), a
                           3946 ;demo.c:524: while (*c) {
   1136                    3947 00104$:
   1136 0A                 3948 	ld	a,(bc)
   1137 5F                 3949 	ld	e,a
   1138 B7                 3950 	or	a,a
   1139 CArADs11           3951 	jp	Z,00107$
                           3952 ;demo.c:525: char ltr = *c++; 
   113C 03                 3953 	inc	bc
   113D DD 73 FF           3954 	ld	-1 (ix),e
                           3955 ;demo.c:526: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21r4Es41           3956 	ld	hl,#_lx + 0
   1143 5E                 3957 	ld	e,(hl)
   1144 16 00              3958 	ld	d,#0x00
   1146 21r00s41           3959 	ld	hl,#_vbicount
   1149 7B                 3960 	ld	a,e
   114A 86                 3961 	add	a,(hl)
   114B 5F                 3962 	ld	e,a
   114C 7A                 3963 	ld	a,d
   114D 23                 3964 	inc	hl
   114E 8E                 3965 	adc	a,(hl)
   114F 57                 3966 	ld	d,a
   1150 CB 2A              3967 	sra	d
   1152 CB 1B              3968 	rr	e
   1154 16 00              3969 	ld	d,#0x00
   1156 CB 23              3970 	sla	e
   1158 CB 12              3971 	rl	d
   115A 21r2Cs00           3972 	ld	hl,#_sintabx
   115D 19                 3973 	add	hl,de
   115E 5E                 3974 	ld	e,(hl)
   115F 23                 3975 	inc	hl
   1160 56                 3976 	ld	d,(hl)
   1161 CB 3A              3977 	srl	d
   1163 CB 1B              3978 	rr	e
   1165 CB 3A              3979 	srl	d
   1167 CB 1B              3980 	rr	e
   1169 CB 3A              3981 	srl	d
   116B CB 1B              3982 	rr	e
   116D CB 3A              3983 	srl	d
   116F CB 1B              3984 	rr	e
   1171 21r4Fs41           3985 	ld	hl,#_ly
   1174 DD 7E 07           3986 	ld	a,7 (ix)
   1177 83                 3987 	add	a,e
   1178 77                 3988 	ld	(hl),a
                           3989 ;demo.c:527: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           3990 	ld	a,-1 (ix)
   117C D6 20              3991 	sub	a,#0x20
   117E 20 1F              3992 	jr	NZ,00102$
   1180 FD 21r4Es41        3993 	ld	iy,#_lx
   1184 FD 34 00           3994 	inc	0 (iy)
   1187 FD 21r4Es41        3995 	ld	iy,#_lx
   118B FD 34 00           3996 	inc	0 (iy)
   118E FD 21r4Es41        3997 	ld	iy,#_lx
   1192 FD 34 00           3998 	inc	0 (iy)
   1195 FD 21r4Es41        3999 	ld	iy,#_lx
   1199 FD 34 00           4000 	inc	0 (iy)
   119C C3r36s11           4001 	jp	00104$
   119F                    4002 00102$:
                           4003 ;demo.c:528: else do_letter_tall(ltr);
   119F C5                 4004 	push	bc
   11A0 DD 7E FF           4005 	ld	a,-1 (ix)
   11A3 F5                 4006 	push	af
   11A4 33                 4007 	inc	sp
   11A5 CDrFCs0F           4008 	call	_do_letter_tall
   11A8 33                 4009 	inc	sp
   11A9 C1                 4010 	pop	bc
   11AA C3r36s11           4011 	jp	00104$
   11AD                    4012 00107$:
   11AD DD F9              4013 	ld	sp,ix
   11AF DD E1              4014 	pop	ix
   11B1 C9                 4015 	ret
   11B2                    4016 _drawsine_end::
                           4017 ;demo.c:532: void font() {
                           4018 ;	---------------------------------
                           4019 ; Function font
                           4020 ; ---------------------------------
   11B2                    4021 _font_start::
   11B2                    4022 _font:
                           4023 ;demo.c:534: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           4024 	ld	hl,#0x3C4A
   11B5 E5                 4025 	push	hl
   11B6 21rC0s11           4026 	ld	hl,#__str_8
   11B9 E5                 4027 	push	hl
   11BA CDrBAs10           4028 	call	_drawstr
   11BD F1                 4029 	pop	af
   11BE F1                 4030 	pop	af
   11BF C9                 4031 	ret
   11C0                    4032 _font_end::
   11C0                    4033 __str_8:
   11C0 44 49 47 49 54 41  4034 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  4035 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 4036 	.db 0x00
                           4037 ;demo.c:543: void twister() {
                           4038 ;	---------------------------------
                           4039 ; Function twister
                           4040 ; ---------------------------------
   1223                    4041 _twister_start::
   1223                    4042 _twister:
   1223 DD E5              4043 	push	ix
   1225 DD 21 00 00        4044 	ld	ix,#0
   1229 DD 39              4045 	add	ix,sp
   122B F5                 4046 	push	af
                           4047 ;demo.c:547: if (twinited == 0) {
   122C 3Ar52s41           4048 	ld	a,(#_twinited+0)
   122F FD 21r52s41        4049 	ld	iy,#_twinited
   1233 FD B6 01           4050 	or	a,1 (iy)
   1236 C2rA6s12           4051 	jp	NZ,00102$
                           4052 ;demo.c:548: cmd.size_x = 256;
   1239 21r0Cs41           4053 	ld	hl, #_cmd + 8
   123C 36 00              4054 	ld	(hl),#0x00
   123E 23                 4055 	inc	hl
   123F 36 01              4056 	ld	(hl),#0x01
                           4057 ;demo.c:549: cmd.size_y = 1;
   1241 21r0Es41           4058 	ld	hl, #_cmd + 10
   1244 36 01              4059 	ld	(hl),#0x01
   1246 23                 4060 	inc	hl
   1247 36 00              4061 	ld	(hl),#0x00
                           4062 ;demo.c:550: cmd.data = 0;
                           4063 ;demo.c:551: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4064 	ld	a,#0x00
   124B 32r10s41           4065 	ld	(#_cmd + 12),a
   124E 32r11s41           4066 	ld	(#_cmd + 13),a
                           4067 ;demo.c:552: cmd.command = 0xd0; // vram to vram, y only
   1251 01r12s41           4068 	ld	bc,#_cmd + 14
   1254 3E D0              4069 	ld	a,#0xD0
   1256 02                 4070 	ld	(bc),a
                           4071 ;demo.c:553: cmd.source_x = 0;
   1257 21r04s41           4072 	ld	hl,#_cmd
   125A 36 00              4073 	ld	(hl),#0x00
   125C 23                 4074 	inc	hl
   125D 36 00              4075 	ld	(hl),#0x00
                           4076 ;demo.c:554: cmd.dest_x = 0;
   125F 21r08s41           4077 	ld	hl, #_cmd + 4
   1262 36 00              4078 	ld	(hl),#0x00
   1264 23                 4079 	inc	hl
   1265 36 00              4080 	ld	(hl),#0x00
                           4081 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4082 	ld	bc,#0x0000
   126A                    4083 00103$:
   126A 79                 4084 	ld	a,c
   126B D6 D4              4085 	sub	a,#0xD4
   126D 78                 4086 	ld	a,b
   126E DE 00              4087 	sbc	a,#0x00
   1270 F2r91s12           4088 	jp	P,00106$
                           4089 ;demo.c:557: waitVB();
   1273 76                 4090 		halt 
                           4091 ;demo.c:558: cmd.source_y = 0;
   1274 11r06s41           4092 	ld	de,#_cmd + 2
   1277 EB                 4093 	ex	de,hl
   1278 36 00              4094 	ld	(hl),#0x00
   127A 23                 4095 	inc	hl
   127B 36 00              4096 	ld	(hl),#0x00
                           4097 ;demo.c:559: cmd.dest_y = y;
   127D 11r0As41           4098 	ld	de,#_cmd + 6
   1280 EB                 4099 	ex	de,hl
   1281 71                 4100 	ld	(hl),c
   1282 23                 4101 	inc	hl
   1283 70                 4102 	ld	(hl),b
                           4103 ;demo.c:560: vdp_copier(&cmd);
   1284 C5                 4104 	push	bc
   1285 21r04s41           4105 	ld	hl,#_cmd
   1288 E5                 4106 	push	hl
   1289 CDr00s00           4107 	call	_vdp_copier
   128C F1                 4108 	pop	af
   128D C1                 4109 	pop	bc
                           4110 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   128E 03                 4111 	inc	bc
   128F 18 D9              4112 	jr	00103$
   1291                    4113 00106$:
                           4114 ;demo.c:564: twinited = 1;
   1291 21r52s41           4115 	ld	hl,#_twinited + 0
   1294 36 01              4116 	ld	(hl), #0x01
   1296 21r53s41           4117 	ld	hl,#_twinited + 1
   1299 36 00              4118 	ld	(hl), #0x00
                           4119 ;demo.c:565: vdp_load_palette(twister_palette);
   129B 21rA0s40           4120 	ld	hl,#_twister_palette
   129E E5                 4121 	push	hl
   129F CDr00s00           4122 	call	_vdp_load_palette
   12A2 F1                 4123 	pop	af
                           4124 ;demo.c:566: font();
   12A3 CDrB2s11           4125 	call	_font
   12A6                    4126 00102$:
                           4127 ;demo.c:569: cmd.size_x = 70;
   12A6 21r0Cs41           4128 	ld	hl, #_cmd + 8
   12A9 36 46              4129 	ld	(hl),#0x46
   12AB 23                 4130 	inc	hl
   12AC 36 00              4131 	ld	(hl),#0x00
                           4132 ;demo.c:570: cmd.size_y = 2;
   12AE 21r0Es41           4133 	ld	hl, #_cmd + 10
   12B1 36 02              4134 	ld	(hl),#0x02
   12B3 23                 4135 	inc	hl
   12B4 36 00              4136 	ld	(hl),#0x00
                           4137 ;demo.c:571: cmd.data = 0;
   12B6 3E 00              4138 	ld	a,#0x00
   12B8 32r10s41           4139 	ld	(#_cmd + 12),a
                           4140 ;demo.c:572: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4141 	ld	a,#0x04
   12BD 32r11s41           4142 	ld	(#_cmd + 13),a
                           4143 ;demo.c:573: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r12s41           4144 	ld	bc,#_cmd + 14
   12C3 3E E0              4145 	ld	a,#0xE0
   12C5 02                 4146 	ld	(bc),a
                           4147 ;demo.c:574: cmd.source_x = 70;
   12C6 21r04s41           4148 	ld	hl,#_cmd
   12C9 36 46              4149 	ld	(hl),#0x46
   12CB 23                 4150 	inc	hl
   12CC 36 00              4151 	ld	(hl),#0x00
                           4152 ;demo.c:575: cmd.dest_x = 70;
   12CE 21r08s41           4153 	ld	hl, #_cmd + 4
   12D1 36 46              4154 	ld	(hl),#0x46
   12D3 23                 4155 	inc	hl
   12D4 36 00              4156 	ld	(hl),#0x00
                           4157 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4158 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4159 	ld	-1 (ix),#0x00
   12DE                    4160 00107$:
   12DE DD 7E FE           4161 	ld	a,-2 (ix)
   12E1 D6 D4              4162 	sub	a,#0xD4
   12E3 DD 7E FF           4163 	ld	a,-1 (ix)
   12E6 DE 00              4164 	sbc	a,#0x00
   12E8 F2r41s13           4165 	jp	P,00110$
                           4166 ;demo.c:578: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r06s41           4167 	ld	de,#_cmd + 2
   12EE DD 4E FE           4168 	ld	c,-2 (ix)
   12F1 DD 46 FF           4169 	ld	b,-1 (ix)
   12F4 CB 28              4170 	sra	b
   12F6 CB 19              4171 	rr	c
   12F8 3Ar50s41           4172 	ld	a,(#_ff+0)
   12FB 81                 4173 	add	a,c
   12FC 4F                 4174 	ld	c,a
   12FD 3Ar51s41           4175 	ld	a,(#_ff+1)
   1300 88                 4176 	adc	a,b
   1301 06 00              4177 	ld	b,#0x00
   1303 21r00s00           4178 	ld	hl,#_sintab
   1306 09                 4179 	add	hl,bc
   1307 7E                 4180 	ld	a,(hl)
   1308 4F                 4181 	ld	c,a
   1309 CB 29              4182 	sra	c
   130B 79                 4183 	ld	a,c
   130C 17                 4184 	rla	
   130D 9F                 4185 	sbc	a,a
   130E 47                 4186 	ld	b,a
   130F 21 40 02           4187 	ld	hl,#0x0240
   1312 09                 4188 	add	hl,bc
   1313 4D                 4189 	ld	c,l
   1314 44                 4190 	ld	b,h
   1315 6B                 4191 	ld	l,e
   1316 62                 4192 	ld	h,d
   1317 71                 4193 	ld	(hl),c
   1318 23                 4194 	inc	hl
   1319 70                 4195 	ld	(hl),b
                           4196 ;demo.c:579: cmd.dest_y = y;
   131A 21r0As41           4197 	ld	hl, #_cmd + 6
   131D DD 7E FE           4198 	ld	a,-2 (ix)
   1320 77                 4199 	ld	(hl),a
   1321 23                 4200 	inc	hl
   1322 DD 7E FF           4201 	ld	a,-1 (ix)
   1325 77                 4202 	ld	(hl),a
                           4203 ;demo.c:580: vdp_copier(&cmd);
   1326 21r04s41           4204 	ld	hl,#_cmd
   1329 E5                 4205 	push	hl
   132A CDr00s00           4206 	call	_vdp_copier
   132D F1                 4207 	pop	af
                           4208 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4209 	ld	a,-2 (ix)
   1331 C6 02              4210 	add	a,#0x02
   1333 DD 77 FE           4211 	ld	-2 (ix),a
   1336 DD 7E FF           4212 	ld	a,-1 (ix)
   1339 CE 00              4213 	adc	a,#0x00
   133B DD 77 FF           4214 	ld	-1 (ix),a
   133E C3rDEs12           4215 	jp	00107$
   1341                    4216 00110$:
                           4217 ;demo.c:584: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21r50s41           4218 	ld	hl,#_ff + 0
   1344 4E                 4219 	ld	c,(hl)
   1345 21r51s41           4220 	ld	hl,#_ff + 1
   1348 46                 4221 	ld	b,(hl)
   1349 CB 28              4222 	sra	b
   134B CB 19              4223 	rr	c
   134D CB 28              4224 	sra	b
   134F CB 19              4225 	rr	c
   1351 21r50s41           4226 	ld	hl,#_ff + 0
   1354 5E                 4227 	ld	e,(hl)
   1355 21r51s41           4228 	ld	hl,#_ff + 1
   1358 56                 4229 	ld	d,(hl)
   1359 CB 2A              4230 	sra	d
   135B CB 1B              4231 	rr	e
   135D CB 2A              4232 	sra	d
   135F CB 1B              4233 	rr	e
   1361 CB 2A              4234 	sra	d
   1363 CB 1B              4235 	rr	e
   1365 43                 4236 	ld	b,e
   1366 79                 4237 	ld	a,c
   1367 F5                 4238 	push	af
   1368 33                 4239 	inc	sp
   1369 C5                 4240 	push	bc
   136A 33                 4241 	inc	sp
   136B 41                 4242 	ld	b,c
   136C 0E 04              4243 	ld	c,#0x04
   136E C5                 4244 	push	bc
   136F CDr00s00           4245 	call	_msx2_palette
   1372 F1                 4246 	pop	af
   1373 F1                 4247 	pop	af
                           4248 ;demo.c:586: ff+=4;
   1374 21r50s41           4249 	ld	hl,#_ff
   1377 7E                 4250 	ld	a,(hl)
   1378 C6 04              4251 	add	a,#0x04
   137A 23                 4252 	inc	hl
   137B 2B                 4253 	dec	hl
   137C C5                 4254 	push	bc
   137D 4F                 4255 	ld	c, a
   137E 23                 4256 	inc	hl
   137F 7E                 4257 	ld	a, (hl)
   1380 47                 4258 	ld	b, a
   1381 79                 4259 	ld	a, c
   1382 2B                 4260 	dec	hl
   1383 77                 4261 	ld	(hl), a
   1384 78                 4262 	ld	a, b
   1385 C1                 4263 	pop	bc
   1386 CE 00              4264 	adc	a,#0x00
   1388 23                 4265 	inc	hl
   1389 77                 4266 	ld	(hl),a
   138A DD F9              4267 	ld	sp,ix
   138C DD E1              4268 	pop	ix
   138E C9                 4269 	ret
   138F                    4270 _twister_end::
                           4271 ;demo.c:596: void bulbs() {
                           4272 ;	---------------------------------
                           4273 ; Function bulbs
                           4274 ; ---------------------------------
   138F                    4275 _bulbs_start::
   138F                    4276 _bulbs:
   138F DD E5              4277 	push	ix
   1391 DD 21 00 00        4278 	ld	ix,#0
   1395 DD 39              4279 	add	ix,sp
   1397 21 FA FF           4280 	ld	hl,#-6
   139A 39                 4281 	add	hl,sp
   139B F9                 4282 	ld	sp,hl
                           4283 ;demo.c:599: int sy = 16;
   139C 01 10 00           4284 	ld	bc,#0x0010
                           4285 ;demo.c:601: ender+=enderdir;
   139F 21r5Cs41           4286 	ld	hl,#_enderdir
   13A2 D5                 4287 	push	de
   13A3 FD 21r5As41        4288 	ld	iy,#_ender
   13A7 FD E5              4289 	push	iy
   13A9 D1                 4290 	pop	de
   13AA 1A                 4291 	ld	a,(de)
   13AB 86                 4292 	add	a,(hl)
   13AC 13                 4293 	inc	de
   13AD 1B                 4294 	dec	de
   13AE C5                 4295 	push	bc
   13AF 4F                 4296 	ld	c, a
   13B0 13                 4297 	inc	de
   13B1 1A                 4298 	ld	a, (de)
   13B2 47                 4299 	ld	b, a
   13B3 79                 4300 	ld	a, c
   13B4 1B                 4301 	dec	de
   13B5 12                 4302 	ld	(de), a
   13B6 78                 4303 	ld	a, b
   13B7 C1                 4304 	pop	bc
   13B8 23                 4305 	inc	hl
   13B9 8E                 4306 	adc	a,(hl)
   13BA 13                 4307 	inc	de
   13BB 12                 4308 	ld	(de),a
   13BC D1                 4309 	pop	de
                           4310 ;demo.c:602: if (ender < 2) enderdir = -enderdir;
   13BD 3Ar5As41           4311 	ld	a,(#_ender+0)
   13C0 D6 02              4312 	sub	a,#0x02
   13C2 3Ar5Bs41           4313 	ld	a,(#_ender+1)
   13C5 DE 00              4314 	sbc	a,#0x00
   13C7 F2rEBs13           4315 	jp	P,00102$
   13CA AF                 4316 	xor	a,a
   13CB FD 21r5Cs41        4317 	ld	iy,#_enderdir
   13CF 3E 00              4318 	ld	a,#0x00
   13D1 FD 9E 00           4319 	sbc	a,0 (iy)
   13D4 FD 21r5Cs41        4320 	ld	iy,#_enderdir
   13D8 FD 77 00           4321 	ld	0 (iy),a
   13DB FD 21r5Cs41        4322 	ld	iy,#_enderdir
   13DF 3E 00              4323 	ld	a,#0x00
   13E1 FD 9E 01           4324 	sbc	a,1 (iy)
   13E4 FD 21r5Cs41        4325 	ld	iy,#_enderdir
   13E8 FD 77 01           4326 	ld	1 (iy),a
   13EB                    4327 00102$:
                           4328 ;demo.c:603: if (ender >= 212) enderdir = -enderdir;
   13EB 3Ar5As41           4329 	ld	a,(#_ender+0)
   13EE D6 D4              4330 	sub	a,#0xD4
   13F0 3Ar5Bs41           4331 	ld	a,(#_ender+1)
   13F3 DE 00              4332 	sbc	a,#0x00
   13F5 FAr19s14           4333 	jp	M,00104$
   13F8 AF                 4334 	xor	a,a
   13F9 FD 21r5Cs41        4335 	ld	iy,#_enderdir
   13FD 3E 00              4336 	ld	a,#0x00
   13FF FD 9E 00           4337 	sbc	a,0 (iy)
   1402 FD 21r5Cs41        4338 	ld	iy,#_enderdir
   1406 FD 77 00           4339 	ld	0 (iy),a
   1409 FD 21r5Cs41        4340 	ld	iy,#_enderdir
   140D 3E 00              4341 	ld	a,#0x00
   140F FD 9E 01           4342 	sbc	a,1 (iy)
   1412 FD 21r5Cs41        4343 	ld	iy,#_enderdir
   1416 FD 77 01           4344 	ld	1 (iy),a
   1419                    4345 00104$:
                           4346 ;demo.c:605: enderend = ender + 92;
   1419 3Ar5As41           4347 	ld	a,(#_ender+0)
   141C C6 5C              4348 	add	a,#0x5C
   141E DD 77 FE           4349 	ld	-2 (ix),a
   1421 3Ar5Bs41           4350 	ld	a,(#_ender+1)
   1424 CE 00              4351 	adc	a,#0x00
   1426 DD 77 FF           4352 	ld	-1 (ix),a
                           4353 ;demo.c:607: if (enderend > 212) enderend = 212;
   1429 3E D4              4354 	ld	a,#0xD4
   142B DD 96 FE           4355 	sub	a,-2 (ix)
   142E 3E 00              4356 	ld	a,#0x00
   1430 DD 9E FF           4357 	sbc	a,-1 (ix)
   1433 F2r3Es14           4358 	jp	P,00106$
   1436 DD 36 FE D4        4359 	ld	-2 (ix),#0xD4
   143A DD 36 FF 00        4360 	ld	-1 (ix),#0x00
   143E                    4361 00106$:
                           4362 ;demo.c:608: if (enderend > 212-16) sy = 16-(212-enderend);
   143E 3E C4              4363 	ld	a,#0xC4
   1440 DD 96 FE           4364 	sub	a,-2 (ix)
   1443 3E 00              4365 	ld	a,#0x00
   1445 DD 9E FF           4366 	sbc	a,-1 (ix)
   1448 F2r5Fs14           4367 	jp	P,00108$
   144B 3E D4              4368 	ld	a,#0xD4
   144D DD 96 FE           4369 	sub	a,-2 (ix)
   1450 5F                 4370 	ld	e,a
   1451 3E 00              4371 	ld	a,#0x00
   1453 DD 9E FF           4372 	sbc	a,-1 (ix)
   1456 57                 4373 	ld	d,a
   1457 3E 10              4374 	ld	a,#0x10
   1459 93                 4375 	sub	a,e
   145A 4F                 4376 	ld	c,a
   145B 3E 00              4377 	ld	a,#0x00
   145D 9A                 4378 	sbc	a,d
   145E 47                 4379 	ld	b,a
   145F                    4380 00108$:
                           4381 ;demo.c:610: if(bulbflipper == 1) {
   145F 3Ar54s41           4382 	ld	a,(#_bulbflipper+0)
   1462 D6 01              4383 	sub	a,#0x01
   1464 20 06              4384 	jr	NZ,00133$
   1466 3Ar55s41           4385 	ld	a,(#_bulbflipper+1)
   1469 B7                 4386 	or	a,a
   146A 28 03              4387 	jr	Z,00134$
   146C                    4388 00133$:
   146C C3r24s15           4389 	jp	00110$
   146F                    4390 00134$:
                           4391 ;demo.c:611: cmd.size_x = 72;
   146F 11r0Cs41           4392 	ld	de,#_cmd + 8
   1472 EB                 4393 	ex	de,hl
   1473 36 48              4394 	ld	(hl),#0x48
   1475 23                 4395 	inc	hl
   1476 36 00              4396 	ld	(hl),#0x00
                           4397 ;demo.c:612: cmd.size_y = sy;
   1478 11r0Es41           4398 	ld	de,#_cmd + 10
   147B EB                 4399 	ex	de,hl
   147C 71                 4400 	ld	(hl),c
   147D 23                 4401 	inc	hl
   147E 70                 4402 	ld	(hl),b
                           4403 ;demo.c:613: cmd.data = 0;
   147F 11r10s41           4404 	ld	de,#_cmd + 12
   1482 3E 00              4405 	ld	a,#0x00
   1484 12                 4406 	ld	(de),a
                           4407 ;demo.c:614: cmd.argument = 0x04; // from 72xY to left
   1485 11r11s41           4408 	ld	de,#_cmd + 13
   1488 3E 04              4409 	ld	a,#0x04
   148A 12                 4410 	ld	(de),a
                           4411 ;demo.c:615: cmd.command = 0xe0; // vram to vram, y only
   148B 11r12s41           4412 	ld	de,#_cmd + 14
   148E 3E E0              4413 	ld	a,#0xE0
   1490 12                 4414 	ld	(de),a
                           4415 ;demo.c:616: cmd.source_x = 72;
   1491 21r04s41           4416 	ld	hl,#_cmd
   1494 36 48              4417 	ld	(hl),#0x48
   1496 23                 4418 	inc	hl
   1497 36 00              4419 	ld	(hl),#0x00
                           4420 ;demo.c:617: cmd.dest_x = 72;
   1499 11r08s41           4421 	ld	de,#_cmd + 4
   149C 6B                 4422 	ld	l,e
   149D 62                 4423 	ld	h,d
   149E 36 48              4424 	ld	(hl),#0x48
   14A0 23                 4425 	inc	hl
   14A1 36 00              4426 	ld	(hl),#0x00
                           4427 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14A3 ED 4Br5As41        4428 	ld	bc,(_ender)
   14A7 DD 71 FC           4429 	ld	-4 (ix),c
   14AA DD 70 FD           4430 	ld	-3 (ix),b
   14AD                    4431 00112$:
   14AD DD 7E FC           4432 	ld	a,-4 (ix)
   14B0 DD 96 FE           4433 	sub	a,-2 (ix)
   14B3 DD 7E FD           4434 	ld	a,-3 (ix)
   14B6 DD 9E FF           4435 	sbc	a,-1 (ix)
   14B9 F2r0Bs15           4436 	jp	P,00115$
                           4437 ;demo.c:620: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   14BC 01r06s41           4438 	ld	bc,#_cmd + 2
   14BF 3Ar56s41           4439 	ld	a,(#_ff1+0)
   14C2 DD 86 FC           4440 	add	a,-4 (ix)
   14C5 5F                 4441 	ld	e,a
   14C6 3Ar57s41           4442 	ld	a,(#_ff1+1)
   14C9 DD 8E FD           4443 	adc	a,-3 (ix)
   14CC 16 00              4444 	ld	d,#0x00
   14CE 21r00s00           4445 	ld	hl,#_sintab
   14D1 19                 4446 	add	hl,de
   14D2 5E                 4447 	ld	e,(hl)
   14D3 CB 2B              4448 	sra	e
   14D5 7B                 4449 	ld	a,e
   14D6 17                 4450 	rla	
   14D7 9F                 4451 	sbc	a,a
   14D8 57                 4452 	ld	d,a
   14D9 21 40 01           4453 	ld	hl,#0x0140
   14DC 19                 4454 	add	hl,de
   14DD EB                 4455 	ex	de,hl
   14DE 69                 4456 	ld	l,c
   14DF 60                 4457 	ld	h,b
   14E0 73                 4458 	ld	(hl),e
   14E1 23                 4459 	inc	hl
   14E2 72                 4460 	ld	(hl),d
                           4461 ;demo.c:621: cmd.dest_y = y;
   14E3 11r0As41           4462 	ld	de,#_cmd + 6
   14E6 EB                 4463 	ex	de,hl
   14E7 DD 7E FC           4464 	ld	a,-4 (ix)
   14EA 77                 4465 	ld	(hl),a
   14EB 23                 4466 	inc	hl
   14EC DD 7E FD           4467 	ld	a,-3 (ix)
   14EF 77                 4468 	ld	(hl),a
                           4469 ;demo.c:622: vdp_copier(&cmd);
   14F0 21r04s41           4470 	ld	hl,#_cmd
   14F3 E5                 4471 	push	hl
   14F4 CDr00s00           4472 	call	_vdp_copier
   14F7 F1                 4473 	pop	af
                           4474 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14F8 DD 7E FC           4475 	ld	a,-4 (ix)
   14FB C6 10              4476 	add	a,#0x10
   14FD DD 77 FC           4477 	ld	-4 (ix),a
   1500 DD 7E FD           4478 	ld	a,-3 (ix)
   1503 CE 00              4479 	adc	a,#0x00
   1505 DD 77 FD           4480 	ld	-3 (ix),a
   1508 C3rADs14           4481 	jp	00112$
   150B                    4482 00115$:
                           4483 ;demo.c:624: ff1+=4;
   150B 21r56s41           4484 	ld	hl,#_ff1
   150E 7E                 4485 	ld	a,(hl)
   150F C6 04              4486 	add	a,#0x04
   1511 23                 4487 	inc	hl
   1512 2B                 4488 	dec	hl
   1513 C5                 4489 	push	bc
   1514 4F                 4490 	ld	c, a
   1515 23                 4491 	inc	hl
   1516 7E                 4492 	ld	a, (hl)
   1517 47                 4493 	ld	b, a
   1518 79                 4494 	ld	a, c
   1519 2B                 4495 	dec	hl
   151A 77                 4496 	ld	(hl), a
   151B 78                 4497 	ld	a, b
   151C C1                 4498 	pop	bc
   151D CE 00              4499 	adc	a,#0x00
   151F 23                 4500 	inc	hl
   1520 77                 4501 	ld	(hl),a
   1521 C3rBFs15           4502 	jp	00111$
   1524                    4503 00110$:
                           4504 ;demo.c:628: cmd.size_x = 72;
   1524 11r0Cs41           4505 	ld	de,#_cmd + 8
   1527 EB                 4506 	ex	de,hl
   1528 36 48              4507 	ld	(hl),#0x48
   152A 23                 4508 	inc	hl
   152B 36 00              4509 	ld	(hl),#0x00
                           4510 ;demo.c:629: cmd.size_y = sy;
   152D 11r0Es41           4511 	ld	de,#_cmd + 10
   1530 6B                 4512 	ld	l,e
   1531 62                 4513 	ld	h,d
   1532 71                 4514 	ld	(hl),c
   1533 23                 4515 	inc	hl
   1534 70                 4516 	ld	(hl),b
                           4517 ;demo.c:630: cmd.data = 0;
                           4518 ;demo.c:631: cmd.argument = 0x00; // from 182xY to right
   1535 3E 00              4519 	ld	a,#0x00
   1537 32r10s41           4520 	ld	(#_cmd + 12),a
   153A 32r11s41           4521 	ld	(#_cmd + 13),a
                           4522 ;demo.c:632: cmd.command = 0xe0; // vram to vram, y only
   153D 01r12s41           4523 	ld	bc,#_cmd + 14
   1540 3E E0              4524 	ld	a,#0xE0
   1542 02                 4525 	ld	(bc),a
                           4526 ;demo.c:633: cmd.source_x = 182;
   1543 21r04s41           4527 	ld	hl,#_cmd
   1546 36 B6              4528 	ld	(hl),#0xB6
   1548 23                 4529 	inc	hl
   1549 36 00              4530 	ld	(hl),#0x00
                           4531 ;demo.c:634: cmd.dest_x = 182;
   154B 21r08s41           4532 	ld	hl, #_cmd + 4
   154E 36 B6              4533 	ld	(hl),#0xB6
   1550 23                 4534 	inc	hl
   1551 36 00              4535 	ld	(hl),#0x00
                           4536 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   1553 ED 4Br5As41        4537 	ld	bc,(_ender)
   1557                    4538 00116$:
   1557 79                 4539 	ld	a,c
   1558 DD 96 FE           4540 	sub	a,-2 (ix)
   155B 78                 4541 	ld	a,b
   155C DD 9E FF           4542 	sbc	a,-1 (ix)
   155F F2rA9s15           4543 	jp	P,00119$
                           4544 ;demo.c:637: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1562 21r06s41           4545 	ld	hl,#_cmd + 2
   1565 DD 75 FA           4546 	ld	-6 (ix),l
   1568 DD 74 FB           4547 	ld	-5 (ix),h
   156B 3Ar58s41           4548 	ld	a,(#_ff2+0)
   156E 81                 4549 	add	a,c
   156F 5F                 4550 	ld	e,a
   1570 3Ar59s41           4551 	ld	a,(#_ff2+1)
   1573 88                 4552 	adc	a,b
   1574 16 00              4553 	ld	d,#0x00
   1576 21r00s00           4554 	ld	hl,#_sintab
   1579 19                 4555 	add	hl,de
   157A 5E                 4556 	ld	e,(hl)
   157B CB 2B              4557 	sra	e
   157D 7B                 4558 	ld	a,e
   157E 17                 4559 	rla	
   157F 9F                 4560 	sbc	a,a
   1580 57                 4561 	ld	d,a
   1581 21 40 01           4562 	ld	hl,#0x0140
   1584 19                 4563 	add	hl,de
   1585 EB                 4564 	ex	de,hl
   1586 DD 6E FA           4565 	ld	l,-6 (ix)
   1589 DD 66 FB           4566 	ld	h,-5 (ix)
   158C 73                 4567 	ld	(hl),e
   158D 23                 4568 	inc	hl
   158E 72                 4569 	ld	(hl),d
                           4570 ;demo.c:638: cmd.dest_y = y;
   158F 11r0As41           4571 	ld	de,#_cmd + 6
   1592 EB                 4572 	ex	de,hl
   1593 71                 4573 	ld	(hl),c
   1594 23                 4574 	inc	hl
   1595 70                 4575 	ld	(hl),b
                           4576 ;demo.c:639: vdp_copier(&cmd);
   1596 C5                 4577 	push	bc
   1597 21r04s41           4578 	ld	hl,#_cmd
   159A E5                 4579 	push	hl
   159B CDr00s00           4580 	call	_vdp_copier
   159E F1                 4581 	pop	af
   159F C1                 4582 	pop	bc
                           4583 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   15A0 21 10 00           4584 	ld	hl,#0x0010
   15A3 09                 4585 	add	hl,bc
   15A4 4D                 4586 	ld	c,l
   15A5 44                 4587 	ld	b,h
   15A6 C3r57s15           4588 	jp	00116$
   15A9                    4589 00119$:
                           4590 ;demo.c:641: ff2+=4;
   15A9 21r58s41           4591 	ld	hl,#_ff2
   15AC 7E                 4592 	ld	a,(hl)
   15AD C6 04              4593 	add	a,#0x04
   15AF 23                 4594 	inc	hl
   15B0 2B                 4595 	dec	hl
   15B1 C5                 4596 	push	bc
   15B2 4F                 4597 	ld	c, a
   15B3 23                 4598 	inc	hl
   15B4 7E                 4599 	ld	a, (hl)
   15B5 47                 4600 	ld	b, a
   15B6 79                 4601 	ld	a, c
   15B7 2B                 4602 	dec	hl
   15B8 77                 4603 	ld	(hl), a
   15B9 78                 4604 	ld	a, b
   15BA C1                 4605 	pop	bc
   15BB CE 00              4606 	adc	a,#0x00
   15BD 23                 4607 	inc	hl
   15BE 77                 4608 	ld	(hl),a
   15BF                    4609 00111$:
                           4610 ;demo.c:644: bulbflipper = -bulbflipper;
   15BF AF                 4611 	xor	a,a
   15C0 FD 21r54s41        4612 	ld	iy,#_bulbflipper
   15C4 3E 00              4613 	ld	a,#0x00
   15C6 FD 9E 00           4614 	sbc	a,0 (iy)
   15C9 21r54s41           4615 	ld	hl,#_bulbflipper + 0
   15CC 77                 4616 	ld	(hl), a
   15CD FD 21r54s41        4617 	ld	iy,#_bulbflipper
   15D1 3E 00              4618 	ld	a,#0x00
   15D3 FD 9E 01           4619 	sbc	a,1 (iy)
   15D6 21r55s41           4620 	ld	hl,#_bulbflipper + 1
   15D9 77                 4621 	ld	(hl), a
   15DA DD F9              4622 	ld	sp,ix
   15DC DD E1              4623 	pop	ix
   15DE C9                 4624 	ret
   15DF                    4625 _bulbs_end::
                           4626 ;demo.c:658: void animplay() {
                           4627 ;	---------------------------------
                           4628 ; Function animplay
                           4629 ; ---------------------------------
   15DF                    4630 _animplay_start::
   15DF                    4631 _animplay:
   15DF DD E5              4632 	push	ix
   15E1 DD 21 00 00        4633 	ld	ix,#0
   15E5 DD 39              4634 	add	ix,sp
   15E7 F5                 4635 	push	af
   15E8 3B                 4636 	dec	sp
                           4637 ;demo.c:663: if (anim_init == 0) {
   15E9 3Ar66s41           4638 	ld	a,(#_anim_init+0)
   15EC 21r67s41           4639 	ld	hl,#_anim_init + 1
   15EF B6                 4640 	or	a,(hl)
   15F0 C2r78s17           4641 	jp	NZ,00120$
                           4642 ;demo.c:665: scratch_clear();
   15F3 CDr90s07           4643 	call	_scratch_clear
                           4644 ;demo.c:666: vdp_load_palette(scratch);
   15F6 21rE0s3F           4645 	ld	hl,#_scratch
   15F9 E5                 4646 	push	hl
   15FA CDr00s00           4647 	call	_vdp_load_palette
   15FD F1                 4648 	pop	af
                           4649 ;demo.c:668: uninstall_isr();
   15FE CDr00s00           4650 	call	_uninstall_isr
                           4651 ;demo.c:669: PLY_Stop();
   1601 CDr00s00           4652 	call	_PLY_Stop
                           4653 ;demo.c:670: PLY_SendRegisters();
   1604 CDr00s00           4654 	call	_PLY_SendRegisters
                           4655 ;demo.c:672: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1607 21 00 00           4656 	ld	hl,#0x0000
   160A E5                 4657 	push	hl
   160B 2E 01              4658 	ld	l, #0x01
   160D E5                 4659 	push	hl
   160E 2E 00              4660 	ld	l, #0x00
   1610 E5                 4661 	push	hl
   1611 21 09 37           4662 	ld	hl,#0x3709
   1614 E5                 4663 	push	hl
   1615 21r60s18           4664 	ld	hl,#__str_9
   1618 E5                 4665 	push	hl
   1619 CDr99s09           4666 	call	_pck_load
   161C FD 21 0A 00        4667 	ld	iy,#0x000A
   1620 FD 39              4668 	add	iy,sp
   1622 FD F9              4669 	ld	sp,iy
                           4670 ;demo.c:674: cmd.size_x = 256;
   1624 21r0Cs41           4671 	ld	hl, #_cmd + 8
   1627 36 00              4672 	ld	(hl),#0x00
   1629 23                 4673 	inc	hl
   162A 36 01              4674 	ld	(hl),#0x01
                           4675 ;demo.c:675: cmd.size_y = 212;
   162C 21r0Es41           4676 	ld	hl, #_cmd + 10
   162F 36 D4              4677 	ld	(hl),#0xD4
   1631 23                 4678 	inc	hl
   1632 36 00              4679 	ld	(hl),#0x00
                           4680 ;demo.c:676: cmd.data = 0;
                           4681 ;demo.c:677: cmd.argument = 0x00;
   1634 3E 00              4682 	ld	a,#0x00
   1636 32r10s41           4683 	ld	(#_cmd + 12),a
   1639 32r11s41           4684 	ld	(#_cmd + 13),a
                           4685 ;demo.c:678: cmd.command = 0xd0; 
   163C 01r12s41           4686 	ld	bc,#_cmd + 14
   163F 3E D0              4687 	ld	a,#0xD0
   1641 02                 4688 	ld	(bc),a
                           4689 ;demo.c:679: cmd.source_x = 0;
   1642 21r04s41           4690 	ld	hl,#_cmd
   1645 36 00              4691 	ld	(hl),#0x00
   1647 23                 4692 	inc	hl
   1648 36 00              4693 	ld	(hl),#0x00
                           4694 ;demo.c:680: cmd.source_y = 0;
   164A 21r06s41           4695 	ld	hl, #_cmd + 2
   164D 36 00              4696 	ld	(hl),#0x00
   164F 23                 4697 	inc	hl
   1650 36 00              4698 	ld	(hl),#0x00
                           4699 ;demo.c:681: cmd.dest_x = 0;
   1652 21r08s41           4700 	ld	hl, #_cmd + 4
   1655 36 00              4701 	ld	(hl),#0x00
   1657 23                 4702 	inc	hl
   1658 36 00              4703 	ld	(hl),#0x00
                           4704 ;demo.c:682: cmd.dest_y = 256;
   165A 21r0As41           4705 	ld	hl, #_cmd + 6
   165D 36 00              4706 	ld	(hl),#0x00
   165F 23                 4707 	inc	hl
   1660 36 01              4708 	ld	(hl),#0x01
                           4709 ;demo.c:683: vdp_copier(&cmd);
   1662 21r04s41           4710 	ld	hl,#_cmd
   1665 E5                 4711 	push	hl
   1666 CDr00s00           4712 	call	_vdp_copier
   1669 F1                 4713 	pop	af
                           4714 ;demo.c:685: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   166A 21 00 00           4715 	ld	hl,#0x0000
   166D E5                 4716 	push	hl
   166E 2E 01              4717 	ld	l, #0x01
   1670 E5                 4718 	push	hl
   1671 2E 00              4719 	ld	l, #0x00
   1673 E5                 4720 	push	hl
   1674 21 76 3E           4721 	ld	hl,#0x3E76
   1677 E5                 4722 	push	hl
   1678 21r6Cs18           4723 	ld	hl,#__str_10
   167B E5                 4724 	push	hl
   167C CDr99s09           4725 	call	_pck_load
   167F FD 21 0A 00        4726 	ld	iy,#0x000A
   1683 FD 39              4727 	add	iy,sp
   1685 FD F9              4728 	ld	sp,iy
                           4729 ;demo.c:687: cmd.size_x = 256;
   1687 21r0Cs41           4730 	ld	hl, #_cmd + 8
   168A 36 00              4731 	ld	(hl),#0x00
   168C 23                 4732 	inc	hl
   168D 36 01              4733 	ld	(hl),#0x01
                           4734 ;demo.c:688: cmd.size_y = 212;
   168F 21r0Es41           4735 	ld	hl, #_cmd + 10
   1692 36 D4              4736 	ld	(hl),#0xD4
   1694 23                 4737 	inc	hl
   1695 36 00              4738 	ld	(hl),#0x00
                           4739 ;demo.c:689: cmd.data = 0;
                           4740 ;demo.c:690: cmd.argument = 0x00;
   1697 3E 00              4741 	ld	a,#0x00
   1699 32r10s41           4742 	ld	(#_cmd + 12),a
   169C 32r11s41           4743 	ld	(#_cmd + 13),a
                           4744 ;demo.c:691: cmd.command = 0xd0; 
   169F 01r12s41           4745 	ld	bc,#_cmd + 14
   16A2 3E D0              4746 	ld	a,#0xD0
   16A4 02                 4747 	ld	(bc),a
                           4748 ;demo.c:692: cmd.source_x = 0;
   16A5 21r04s41           4749 	ld	hl,#_cmd
   16A8 36 00              4750 	ld	(hl),#0x00
   16AA 23                 4751 	inc	hl
   16AB 36 00              4752 	ld	(hl),#0x00
                           4753 ;demo.c:693: cmd.source_y = 0;
   16AD 21r06s41           4754 	ld	hl, #_cmd + 2
   16B0 36 00              4755 	ld	(hl),#0x00
   16B2 23                 4756 	inc	hl
   16B3 36 00              4757 	ld	(hl),#0x00
                           4758 ;demo.c:694: cmd.dest_x = 0;
   16B5 21r08s41           4759 	ld	hl, #_cmd + 4
   16B8 36 00              4760 	ld	(hl),#0x00
   16BA 23                 4761 	inc	hl
   16BB 36 00              4762 	ld	(hl),#0x00
                           4763 ;demo.c:695: cmd.dest_y = 512;
   16BD 21r0As41           4764 	ld	hl, #_cmd + 6
   16C0 36 00              4765 	ld	(hl),#0x00
   16C2 23                 4766 	inc	hl
   16C3 36 02              4767 	ld	(hl),#0x02
                           4768 ;demo.c:696: vdp_copier(&cmd);
   16C5 21r04s41           4769 	ld	hl,#_cmd
   16C8 E5                 4770 	push	hl
   16C9 CDr00s00           4771 	call	_vdp_copier
   16CC F1                 4772 	pop	af
                           4773 ;demo.c:699: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   16CD 21 00 00           4774 	ld	hl,#0x0000
   16D0 E5                 4775 	push	hl
   16D1 2E 01              4776 	ld	l, #0x01
   16D3 E5                 4777 	push	hl
   16D4 2E 00              4778 	ld	l, #0x00
   16D6 E5                 4779 	push	hl
   16D7 21 9E 3A           4780 	ld	hl,#0x3A9E
   16DA E5                 4781 	push	hl
   16DB 21r78s18           4782 	ld	hl,#__str_11
   16DE E5                 4783 	push	hl
   16DF CDr99s09           4784 	call	_pck_load
   16E2 FD 21 0A 00        4785 	ld	iy,#0x000A
   16E6 FD 39              4786 	add	iy,sp
   16E8 FD F9              4787 	ld	sp,iy
                           4788 ;demo.c:701: cmd.size_x = 256;
   16EA 21r0Cs41           4789 	ld	hl, #_cmd + 8
   16ED 36 00              4790 	ld	(hl),#0x00
   16EF 23                 4791 	inc	hl
   16F0 36 01              4792 	ld	(hl),#0x01
                           4793 ;demo.c:702: cmd.size_y = 212;
   16F2 21r0Es41           4794 	ld	hl, #_cmd + 10
   16F5 36 D4              4795 	ld	(hl),#0xD4
   16F7 23                 4796 	inc	hl
   16F8 36 00              4797 	ld	(hl),#0x00
                           4798 ;demo.c:703: cmd.data = 0;
                           4799 ;demo.c:704: cmd.argument = 0x00;
   16FA 3E 00              4800 	ld	a,#0x00
   16FC 32r10s41           4801 	ld	(#_cmd + 12),a
   16FF 32r11s41           4802 	ld	(#_cmd + 13),a
                           4803 ;demo.c:705: cmd.command = 0xd0; 
   1702 01r12s41           4804 	ld	bc,#_cmd + 14
   1705 3E D0              4805 	ld	a,#0xD0
   1707 02                 4806 	ld	(bc),a
                           4807 ;demo.c:706: cmd.source_x = 0;
   1708 21r04s41           4808 	ld	hl,#_cmd
   170B 36 00              4809 	ld	(hl),#0x00
   170D 23                 4810 	inc	hl
   170E 36 00              4811 	ld	(hl),#0x00
                           4812 ;demo.c:707: cmd.source_y = 0;
   1710 21r06s41           4813 	ld	hl, #_cmd + 2
   1713 36 00              4814 	ld	(hl),#0x00
   1715 23                 4815 	inc	hl
   1716 36 00              4816 	ld	(hl),#0x00
                           4817 ;demo.c:708: cmd.dest_x = 0;
   1718 21r08s41           4818 	ld	hl, #_cmd + 4
   171B 36 00              4819 	ld	(hl),#0x00
   171D 23                 4820 	inc	hl
   171E 36 00              4821 	ld	(hl),#0x00
                           4822 ;demo.c:709: cmd.dest_y = 768;
   1720 21r0As41           4823 	ld	hl, #_cmd + 6
   1723 36 00              4824 	ld	(hl),#0x00
   1725 23                 4825 	inc	hl
   1726 36 03              4826 	ld	(hl),#0x03
                           4827 ;demo.c:710: vdp_copier(&cmd);
   1728 21r04s41           4828 	ld	hl,#_cmd
   172B E5                 4829 	push	hl
   172C CDr00s00           4830 	call	_vdp_copier
   172F F1                 4831 	pop	af
                           4832 ;demo.c:712: vdp_register(9,130); // 50hz,212
   1730 21 09 82           4833 	ld	hl,#0x8209
   1733 E5                 4834 	push	hl
   1734 CDr00s00           4835 	call	_vdp_register
   1737 F1                 4836 	pop	af
                           4837 ;demo.c:714: scratch_clear();
   1738 CDr90s07           4838 	call	_scratch_clear
                           4839 ;demo.c:716: vdp_set_write_address(0, 0);
   173B 21 00 00           4840 	ld	hl,#0x0000
   173E E5                 4841 	push	hl
   173F 3E 00              4842 	ld	a,#0x00
   1741 F5                 4843 	push	af
   1742 33                 4844 	inc	sp
   1743 CDr00s00           4845 	call	_vdp_set_write_address
   1746 F1                 4846 	pop	af
   1747 33                 4847 	inc	sp
                           4848 ;demo.c:718: for (y = 0; y < 212; y++) { 
   1748 0E D4              4849 	ld	c,#0xD4
   174A                    4850 00109$:
                           4851 ;demo.c:719: vdp_load_screen(scratch, 128);
   174A C5                 4852 	push	bc
   174B 3E 80              4853 	ld	a,#0x80
   174D F5                 4854 	push	af
   174E 33                 4855 	inc	sp
   174F 21rE0s3F           4856 	ld	hl,#_scratch
   1752 E5                 4857 	push	hl
   1753 CDr00s00           4858 	call	_vdp_load_screen
   1756 F1                 4859 	pop	af
   1757 33                 4860 	inc	sp
   1758 C1                 4861 	pop	bc
   1759 0D                 4862 	dec	c
                           4863 ;demo.c:718: for (y = 0; y < 212; y++) { 
   175A AF                 4864 	xor	a,a
   175B B1                 4865 	or	a,c
   175C 20 EC              4866 	jr	NZ,00109$
                           4867 ;demo.c:722: install_isr(my_isr);
   175E 21rECs05           4868 	ld	hl,#_my_isr
   1761 E5                 4869 	push	hl
   1762 CDr00s00           4870 	call	_install_isr
   1765 F1                 4871 	pop	af
                           4872 ;demo.c:723: anim_init = 1;
   1766 21r66s41           4873 	ld	hl,#_anim_init + 0
   1769 36 01              4874 	ld	(hl), #0x01
   176B 21r67s41           4875 	ld	hl,#_anim_init + 1
   176E 36 00              4876 	ld	(hl), #0x00
                           4877 ;demo.c:724: vdp_load_palette(tf_palette);
   1770 21rC0s40           4878 	ld	hl,#_tf_palette
   1773 E5                 4879 	push	hl
   1774 CDr00s00           4880 	call	_vdp_load_palette
   1777 F1                 4881 	pop	af
                           4882 ;demo.c:727: for (y = 0; y < 106; y+=1) {
   1778                    4883 00120$:
   1778 DD 36 FF 00        4884 	ld	-1 (ix),#0x00
   177C                    4885 00110$:
   177C DD 7E FF           4886 	ld	a,-1 (ix)
   177F D6 6A              4887 	sub	a,#0x6A
   1781 D2r01s18           4888 	jp	NC,00113$
                           4889 ;demo.c:728: cmd.source_x = 0;
   1784 21r04s41           4890 	ld	hl,#_cmd
   1787 36 00              4891 	ld	(hl),#0x00
   1789 23                 4892 	inc	hl
   178A 36 00              4893 	ld	(hl),#0x00
                           4894 ;demo.c:729: cmd.source_y = 256+po+frames+(y>>1);
   178C 11r06s41           4895 	ld	de,#_cmd + 2
   178F 3Ar62s41           4896 	ld	a,(#_po+0)
   1792 4F                 4897 	ld	c,a
   1793 3Ar63s41           4898 	ld	a,(#_po+1)
   1796 C6 01              4899 	add	a,#0x01
   1798 47                 4900 	ld	b,a
   1799 21r64s41           4901 	ld	hl,#_frames
   179C 79                 4902 	ld	a,c
   179D 86                 4903 	add	a,(hl)
   179E DD 77 FD           4904 	ld	-3 (ix),a
   17A1 78                 4905 	ld	a,b
   17A2 23                 4906 	inc	hl
   17A3 8E                 4907 	adc	a,(hl)
   17A4 DD 77 FE           4908 	ld	-2 (ix),a
   17A7 DD 4E FF           4909 	ld	c,-1 (ix)
   17AA CB 39              4910 	srl	c
   17AC 06 00              4911 	ld	b,#0x00
   17AE DD 7E FD           4912 	ld	a,-3 (ix)
   17B1 81                 4913 	add	a,c
   17B2 4F                 4914 	ld	c,a
   17B3 DD 7E FE           4915 	ld	a,-2 (ix)
   17B6 88                 4916 	adc	a,b
   17B7 47                 4917 	ld	b,a
   17B8 6B                 4918 	ld	l,e
   17B9 62                 4919 	ld	h,d
   17BA 71                 4920 	ld	(hl),c
   17BB 23                 4921 	inc	hl
   17BC 70                 4922 	ld	(hl),b
                           4923 ;demo.c:730: cmd.dest_x = 0;
   17BD 21r08s41           4924 	ld	hl, #_cmd + 4
   17C0 36 00              4925 	ld	(hl),#0x00
   17C2 23                 4926 	inc	hl
   17C3 36 00              4927 	ld	(hl),#0x00
                           4928 ;demo.c:731: cmd.dest_y = (y<<1);
   17C5 01r0As41           4929 	ld	bc,#_cmd + 6
   17C8 DD 5E FF           4930 	ld	e,-1 (ix)
   17CB 16 00              4931 	ld	d,#0x00
   17CD CB 23              4932 	sla	e
   17CF CB 12              4933 	rl	d
   17D1 69                 4934 	ld	l,c
   17D2 60                 4935 	ld	h,b
   17D3 73                 4936 	ld	(hl),e
   17D4 23                 4937 	inc	hl
   17D5 72                 4938 	ld	(hl),d
                           4939 ;demo.c:732: cmd.size_x = 256;
   17D6 21r0Cs41           4940 	ld	hl, #_cmd + 8
   17D9 36 00              4941 	ld	(hl),#0x00
   17DB 23                 4942 	inc	hl
   17DC 36 01              4943 	ld	(hl),#0x01
                           4944 ;demo.c:733: cmd.size_y = 1;
   17DE 21r0Es41           4945 	ld	hl, #_cmd + 10
   17E1 36 01              4946 	ld	(hl),#0x01
   17E3 23                 4947 	inc	hl
   17E4 36 00              4948 	ld	(hl),#0x00
                           4949 ;demo.c:734: cmd.data = 0;
                           4950 ;demo.c:735: cmd.argument = 0x00;
   17E6 3E 00              4951 	ld	a,#0x00
   17E8 32r10s41           4952 	ld	(#_cmd + 12),a
   17EB 32r11s41           4953 	ld	(#_cmd + 13),a
                           4954 ;demo.c:736: cmd.command = 0xD0;
   17EE 3E D0              4955 	ld	a,#0xD0
   17F0 32r12s41           4956 	ld	(#_cmd + 14),a
                           4957 ;demo.c:737: vdp_copier(&cmd);
   17F3 21r04s41           4958 	ld	hl,#_cmd
   17F6 E5                 4959 	push	hl
   17F7 CDr00s00           4960 	call	_vdp_copier
   17FA F1                 4961 	pop	af
                           4962 ;demo.c:727: for (y = 0; y < 106; y+=1) {
   17FB DD 34 FF           4963 	inc	-1 (ix)
   17FE C3r7Cs17           4964 	jp	00110$
   1801                    4965 00113$:
                           4966 ;demo.c:740: frames+=53;
   1801 21r64s41           4967 	ld	hl,#_frames
   1804 7E                 4968 	ld	a,(hl)
   1805 C6 35              4969 	add	a,#0x35
   1807 23                 4970 	inc	hl
   1808 2B                 4971 	dec	hl
   1809 C5                 4972 	push	bc
   180A 4F                 4973 	ld	c, a
   180B 23                 4974 	inc	hl
   180C 7E                 4975 	ld	a, (hl)
   180D 47                 4976 	ld	b, a
   180E 79                 4977 	ld	a, c
   180F 2B                 4978 	dec	hl
   1810 77                 4979 	ld	(hl), a
   1811 78                 4980 	ld	a, b
   1812 C1                 4981 	pop	bc
   1813 CE 00              4982 	adc	a,#0x00
   1815 23                 4983 	inc	hl
   1816 77                 4984 	ld	(hl),a
                           4985 ;demo.c:741: if (frames >= 212) { frames = 0; po+=256; }
   1817 3Ar64s41           4986 	ld	a,(#_frames+0)
   181A D6 D4              4987 	sub	a,#0xD4
   181C 3Ar65s41           4988 	ld	a,(#_frames+1)
   181F DE 00              4989 	sbc	a,#0x00
   1821 FAr44s18           4990 	jp	M,00104$
   1824 21r64s41           4991 	ld	hl,#_frames + 0
   1827 36 00              4992 	ld	(hl), #0x00
   1829 21r65s41           4993 	ld	hl,#_frames + 1
   182C 36 00              4994 	ld	(hl), #0x00
   182E 21r62s41           4995 	ld	hl,#_po
   1831 7E                 4996 	ld	a,(hl)
   1832 C6 00              4997 	add	a,#0x00
   1834 23                 4998 	inc	hl
   1835 2B                 4999 	dec	hl
   1836 C5                 5000 	push	bc
   1837 4F                 5001 	ld	c, a
   1838 23                 5002 	inc	hl
   1839 7E                 5003 	ld	a, (hl)
   183A 47                 5004 	ld	b, a
   183B 79                 5005 	ld	a, c
   183C 2B                 5006 	dec	hl
   183D 77                 5007 	ld	(hl), a
   183E 78                 5008 	ld	a, b
   183F C1                 5009 	pop	bc
   1840 CE 01              5010 	adc	a,#0x01
   1842 23                 5011 	inc	hl
   1843 77                 5012 	ld	(hl),a
   1844                    5013 00104$:
                           5014 ;demo.c:742: if (po >= 768) {
   1844 3Ar62s41           5015 	ld	a,(#_po+0)
   1847 D6 00              5016 	sub	a,#0x00
   1849 3Ar63s41           5017 	ld	a,(#_po+1)
   184C DE 03              5018 	sbc	a,#0x03
   184E FAr5Bs18           5019 	jp	M,00114$
                           5020 ;demo.c:743: po = 0;
   1851 21r62s41           5021 	ld	hl,#_po + 0
   1854 36 00              5022 	ld	(hl), #0x00
   1856 21r63s41           5023 	ld	hl,#_po + 1
   1859 36 00              5024 	ld	(hl), #0x00
   185B                    5025 00114$:
   185B DD F9              5026 	ld	sp,ix
   185D DD E1              5027 	pop	ix
   185F C9                 5028 	ret
   1860                    5029 _animplay_end::
   1860                    5030 __str_9:
   1860 4C 46 31 20 20 20  5031 	.ascii "LF1     PCK"
        20 20 50 43 4B
   186B 00                 5032 	.db 0x00
   186C                    5033 __str_10:
   186C 4C 46 32 20 20 20  5034 	.ascii "LF2     PCK"
        20 20 50 43 4B
   1877 00                 5035 	.db 0x00
   1878                    5036 __str_11:
   1878 4C 46 33 20 20 20  5037 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1883 00                 5038 	.db 0x00
                           5039 ;demo.c:759: void drawbox(uint8_t x, uint8_t y) {
                           5040 ;	---------------------------------
                           5041 ; Function drawbox
                           5042 ; ---------------------------------
   1884                    5043 _drawbox_start::
   1884                    5044 _drawbox:
   1884 DD E5              5045 	push	ix
   1886 DD 21 00 00        5046 	ld	ix,#0
   188A DD 39              5047 	add	ix,sp
                           5048 ;demo.c:760: cmd.source_x = boxes_x[boxi];
   188C 21r7Bs41           5049 	ld	hl,#_boxi
   188F 3Er6F              5050 	ld	a,#<_boxes_x
   1891 86                 5051 	add	a,(hl)
   1892 4F                 5052 	ld	c,a
   1893 3Es41              5053 	ld	a,#>_boxes_x
   1895 CE 00              5054 	adc	a,#0x00
   1897 47                 5055 	ld	b,a
   1898 0A                 5056 	ld	a,(bc)
   1899 4F                 5057 	ld	c,a
   189A 06 00              5058 	ld	b,#0x00
   189C 21r04s41           5059 	ld	hl,#_cmd
   189F 71                 5060 	ld	(hl),c
   18A0 23                 5061 	inc	hl
   18A1 70                 5062 	ld	(hl),b
                           5063 ;demo.c:761: cmd.source_y = boxes_y[boxi];
   18A2 01r06s41           5064 	ld	bc,#_cmd + 2
   18A5 3Ar7Bs41           5065 	ld	a,(#_boxi+0)
   18A8 87                 5066 	add	a,a
   18A9 C6r73              5067 	add	a,#<_boxes_y
   18AB 6F                 5068 	ld	l,a
   18AC 3Es41              5069 	ld	a,#>_boxes_y
   18AE CE 00              5070 	adc	a,#0x00
   18B0 67                 5071 	ld	h,a
   18B1 5E                 5072 	ld	e,(hl)
   18B2 23                 5073 	inc	hl
   18B3 56                 5074 	ld	d,(hl)
   18B4 69                 5075 	ld	l,c
   18B5 60                 5076 	ld	h,b
   18B6 73                 5077 	ld	(hl),e
   18B7 23                 5078 	inc	hl
   18B8 72                 5079 	ld	(hl),d
                           5080 ;demo.c:762: cmd.dest_x = x;
   18B9 01r08s41           5081 	ld	bc,#_cmd + 4
   18BC DD 5E 04           5082 	ld	e,4 (ix)
   18BF 16 00              5083 	ld	d,#0x00
   18C1 69                 5084 	ld	l,c
   18C2 60                 5085 	ld	h,b
   18C3 73                 5086 	ld	(hl),e
   18C4 23                 5087 	inc	hl
   18C5 72                 5088 	ld	(hl),d
                           5089 ;demo.c:763: cmd.dest_y = y;
   18C6 01r0As41           5090 	ld	bc,#_cmd + 6
   18C9 DD 5E 05           5091 	ld	e,5 (ix)
   18CC 16 00              5092 	ld	d,#0x00
   18CE 69                 5093 	ld	l,c
   18CF 60                 5094 	ld	h,b
   18D0 73                 5095 	ld	(hl),e
   18D1 23                 5096 	inc	hl
   18D2 72                 5097 	ld	(hl),d
                           5098 ;demo.c:764: cmd.size_x = 36;
   18D3 21r0Cs41           5099 	ld	hl, #_cmd + 8
   18D6 36 24              5100 	ld	(hl),#0x24
   18D8 23                 5101 	inc	hl
   18D9 36 00              5102 	ld	(hl),#0x00
                           5103 ;demo.c:765: cmd.size_y = 36;
   18DB 21r0Es41           5104 	ld	hl, #_cmd + 10
   18DE 36 24              5105 	ld	(hl),#0x24
   18E0 23                 5106 	inc	hl
   18E1 36 00              5107 	ld	(hl),#0x00
                           5108 ;demo.c:766: cmd.data = 0;
                           5109 ;demo.c:767: cmd.argument = 0x00;
   18E3 3E 00              5110 	ld	a,#0x00
   18E5 32r10s41           5111 	ld	(#_cmd + 12),a
   18E8 32r11s41           5112 	ld	(#_cmd + 13),a
                           5113 ;demo.c:768: cmd.command = 0x98; // TIMP sprite
   18EB 3E 98              5114 	ld	a,#0x98
   18ED 32r12s41           5115 	ld	(#_cmd + 14),a
                           5116 ;demo.c:769: vdp_copier(&cmd);
   18F0 21r04s41           5117 	ld	hl,#_cmd
   18F3 E5                 5118 	push	hl
   18F4 CDr00s00           5119 	call	_vdp_copier
   18F7 F1                 5120 	pop	af
                           5121 ;demo.c:771: prevx = x;
   18F8 DD 7E 04           5122 	ld	a,4 (ix)
   18FB 21r6Bs41           5123 	ld	hl,#_prevx + 0
   18FE 77                 5124 	ld	(hl), a
   18FF 21r6Cs41           5125 	ld	hl,#_prevx + 1
   1902 36 00              5126 	ld	(hl), #0x00
                           5127 ;demo.c:772: prevy = y;
   1904 DD 7E 05           5128 	ld	a,5 (ix)
   1907 21r6Ds41           5129 	ld	hl,#_prevy + 0
   190A 77                 5130 	ld	(hl), a
   190B 21r6Es41           5131 	ld	hl,#_prevy + 1
   190E 36 00              5132 	ld	(hl), #0x00
   1910 DD E1              5133 	pop	ix
   1912 C9                 5134 	ret
   1913                    5135 _drawbox_end::
                           5136 ;demo.c:786: void boxes() {
                           5137 ;	---------------------------------
                           5138 ; Function boxes
                           5139 ; ---------------------------------
   1913                    5140 _boxes_start::
   1913                    5141 _boxes:
                           5142 ;demo.c:789: if (bonc == 1) {
   1913 3Ar84s41           5143 	ld	a,(#_bonc+0)
   1916 D6 01              5144 	sub	a,#0x01
   1918 20 06              5145 	jr	NZ,00152$
   191A 3Ar85s41           5146 	ld	a,(#_bonc+1)
   191D B7                 5147 	or	a,a
   191E 28 02              5148 	jr	Z,00153$
   1920                    5149 00152$:
   1920 18 4D              5150 	jr	00102$
   1922                    5151 00153$:
                           5152 ;demo.c:791: cmd.source_x = 0;
   1922 21r04s41           5153 	ld	hl,#_cmd
   1925 36 00              5154 	ld	(hl),#0x00
   1927 23                 5155 	inc	hl
   1928 36 00              5156 	ld	(hl),#0x00
                           5157 ;demo.c:792: cmd.source_y = 256;
   192A 21r06s41           5158 	ld	hl, #_cmd + 2
   192D 36 00              5159 	ld	(hl),#0x00
   192F 23                 5160 	inc	hl
   1930 36 01              5161 	ld	(hl),#0x01
                           5162 ;demo.c:793: cmd.dest_x = pbx;
   1932 01r08s41           5163 	ld	bc,#_cmd + 4
   1935 ED 5Br86s41        5164 	ld	de,(_pbx)
   1939 69                 5165 	ld	l,c
   193A 60                 5166 	ld	h,b
   193B 73                 5167 	ld	(hl),e
   193C 23                 5168 	inc	hl
   193D 72                 5169 	ld	(hl),d
                           5170 ;demo.c:794: cmd.dest_y = pbt;
   193E 01r0As41           5171 	ld	bc,#_cmd + 6
   1941 ED 5Br88s41        5172 	ld	de,(_pbt)
   1945 69                 5173 	ld	l,c
   1946 60                 5174 	ld	h,b
   1947 73                 5175 	ld	(hl),e
   1948 23                 5176 	inc	hl
   1949 72                 5177 	ld	(hl),d
                           5178 ;demo.c:795: cmd.size_x = 36;
   194A 21r0Cs41           5179 	ld	hl, #_cmd + 8
   194D 36 24              5180 	ld	(hl),#0x24
   194F 23                 5181 	inc	hl
   1950 36 00              5182 	ld	(hl),#0x00
                           5183 ;demo.c:796: cmd.size_y = 36;
   1952 21r0Es41           5184 	ld	hl, #_cmd + 10
   1955 36 24              5185 	ld	(hl),#0x24
   1957 23                 5186 	inc	hl
   1958 36 00              5187 	ld	(hl),#0x00
                           5188 ;demo.c:797: cmd.data = 0;
                           5189 ;demo.c:798: cmd.argument = 0x00;
   195A 3E 00              5190 	ld	a,#0x00
   195C 32r10s41           5191 	ld	(#_cmd + 12),a
   195F 32r11s41           5192 	ld	(#_cmd + 13),a
                           5193 ;demo.c:799: cmd.command = 0xD0; // HMMM
   1962 3E D0              5194 	ld	a,#0xD0
   1964 32r12s41           5195 	ld	(#_cmd + 14),a
                           5196 ;demo.c:800: vdp_copier(&cmd);
   1967 21r04s41           5197 	ld	hl,#_cmd
   196A E5                 5198 	push	hl
   196B CDr00s00           5199 	call	_vdp_copier
   196E F1                 5200 	pop	af
   196F                    5201 00102$:
                           5202 ;demo.c:803: if (boxes_init == 0) {
   196F AF                 5203 	xor	a,a
   1970 21r68s41           5204 	ld	hl,#_boxes_init + 0
   1973 B6                 5205 	or	a,(hl)
   1974 C2r0As1A           5206 	jp	NZ,00104$
                           5207 ;demo.c:804: boxes_init = 1;
   1977 FD 21r68s41        5208 	ld	iy,#_boxes_init
   197B FD 36 00 01        5209 	ld	0 (iy),#0x01
                           5210 ;demo.c:806: cmd.size_x = 8;
   197F 21r0Cs41           5211 	ld	hl, #_cmd + 8
   1982 36 08              5212 	ld	(hl),#0x08
   1984 23                 5213 	inc	hl
   1985 36 00              5214 	ld	(hl),#0x00
                           5215 ;demo.c:807: cmd.size_y = 212;
   1987 21r0Es41           5216 	ld	hl, #_cmd + 10
   198A 36 D4              5217 	ld	(hl),#0xD4
   198C 23                 5218 	inc	hl
   198D 36 00              5219 	ld	(hl),#0x00
                           5220 ;demo.c:808: cmd.data = 0;
                           5221 ;demo.c:809: cmd.argument = 0x00; // from 70xY to left
   198F 3E 00              5222 	ld	a,#0x00
   1991 32r10s41           5223 	ld	(#_cmd + 12),a
   1994 32r11s41           5224 	ld	(#_cmd + 13),a
                           5225 ;demo.c:810: cmd.command = 0xd0; // vram to vram, y only
   1997 01r12s41           5226 	ld	bc,#_cmd + 14
   199A 3E D0              5227 	ld	a,#0xD0
   199C 02                 5228 	ld	(bc),a
                           5229 ;demo.c:811: cmd.source_x = 248;
   199D 21r04s41           5230 	ld	hl,#_cmd
   19A0 36 F8              5231 	ld	(hl),#0xF8
   19A2 23                 5232 	inc	hl
   19A3 36 00              5233 	ld	(hl),#0x00
                           5234 ;demo.c:812: cmd.source_y = 0;
   19A5 21r06s41           5235 	ld	hl, #_cmd + 2
   19A8 36 00              5236 	ld	(hl),#0x00
   19AA 23                 5237 	inc	hl
   19AB 36 00              5238 	ld	(hl),#0x00
                           5239 ;demo.c:813: cmd.dest_y = 0;
   19AD 21r0As41           5240 	ld	hl, #_cmd + 6
   19B0 36 00              5241 	ld	(hl),#0x00
   19B2 23                 5242 	inc	hl
   19B3 36 00              5243 	ld	(hl),#0x00
                           5244 ;demo.c:815: for (x = 248; x >= 0; x-=8) {
   19B5 01 F8 00           5245 	ld	bc,#0x00F8
   19B8                    5246 00128$:
   19B8 78                 5247 	ld	a,b
   19B9 CB 7F              5248 	bit	7,a
   19BB 20 38              5249 	jr	NZ,00131$
                           5250 ;demo.c:816: waitVB();
   19BD 76                 5251 		halt 
                           5252 ;demo.c:817: cmd.dest_x = x;
   19BE 11r08s41           5253 	ld	de,#_cmd + 4
   19C1 EB                 5254 	ex	de,hl
   19C2 71                 5255 	ld	(hl),c
   19C3 23                 5256 	inc	hl
   19C4 70                 5257 	ld	(hl),b
                           5258 ;demo.c:818: cmd.dest_y = 0;
   19C5 11r0As41           5259 	ld	de,#_cmd + 6
   19C8 EB                 5260 	ex	de,hl
   19C9 36 00              5261 	ld	(hl),#0x00
   19CB 23                 5262 	inc	hl
   19CC 36 00              5263 	ld	(hl),#0x00
                           5264 ;demo.c:819: vdp_copier(&cmd);
   19CE C5                 5265 	push	bc
   19CF 21r04s41           5266 	ld	hl,#_cmd
   19D2 E5                 5267 	push	hl
   19D3 CDr00s00           5268 	call	_vdp_copier
   19D6 F1                 5269 	pop	af
   19D7 C1                 5270 	pop	bc
                           5271 ;demo.c:820: cmd.dest_y = 256;
   19D8 11r0As41           5272 	ld	de,#_cmd + 6
   19DB EB                 5273 	ex	de,hl
   19DC 36 00              5274 	ld	(hl),#0x00
   19DE 23                 5275 	inc	hl
   19DF 36 01              5276 	ld	(hl),#0x01
                           5277 ;demo.c:821: vdp_copier(&cmd);
   19E1 C5                 5278 	push	bc
   19E2 21r04s41           5279 	ld	hl,#_cmd
   19E5 E5                 5280 	push	hl
   19E6 CDr00s00           5281 	call	_vdp_copier
   19E9 F1                 5282 	pop	af
   19EA C1                 5283 	pop	bc
                           5284 ;demo.c:815: for (x = 248; x >= 0; x-=8) {
   19EB 79                 5285 	ld	a,c
   19EC C6 F8              5286 	add	a,#0xF8
   19EE 4F                 5287 	ld	c,a
   19EF 78                 5288 	ld	a,b
   19F0 CE FF              5289 	adc	a,#0xFF
   19F2 47                 5290 	ld	b,a
   19F3 18 C3              5291 	jr	00128$
   19F5                    5292 00131$:
                           5293 ;demo.c:824: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   19F5 21 08 B4           5294 	ld	hl,#0xB408
   19F8 E5                 5295 	push	hl
   19F9 21r56s1C           5296 	ld	hl,#__str_12
   19FC E5                 5297 	push	hl
   19FD CDr20s11           5298 	call	_drawsine
   1A00 F1                 5299 	pop	af
   1A01 F1                 5300 	pop	af
                           5301 ;demo.c:826: vdp_load_palette(boxes_palette);
   1A02 21rE0s40           5302 	ld	hl,#_boxes_palette
   1A05 E5                 5303 	push	hl
   1A06 CDr00s00           5304 	call	_vdp_load_palette
   1A09 F1                 5305 	pop	af
   1A0A                    5306 00104$:
                           5307 ;demo.c:829: if (bt >= 80) bt+=6;
   1A0A 3Ar80s41           5308 	ld	a,(#_bt+0)
   1A0D D6 50              5309 	sub	a,#0x50
   1A0F 3Ar81s41           5310 	ld	a,(#_bt+1)
   1A12 DE 00              5311 	sbc	a,#0x00
   1A14 FAr2Ds1A           5312 	jp	M,00106$
   1A17 21r80s41           5313 	ld	hl,#_bt
   1A1A 7E                 5314 	ld	a,(hl)
   1A1B C6 06              5315 	add	a,#0x06
   1A1D 23                 5316 	inc	hl
   1A1E 2B                 5317 	dec	hl
   1A1F C5                 5318 	push	bc
   1A20 4F                 5319 	ld	c, a
   1A21 23                 5320 	inc	hl
   1A22 7E                 5321 	ld	a, (hl)
   1A23 47                 5322 	ld	b, a
   1A24 79                 5323 	ld	a, c
   1A25 2B                 5324 	dec	hl
   1A26 77                 5325 	ld	(hl), a
   1A27 78                 5326 	ld	a, b
   1A28 C1                 5327 	pop	bc
   1A29 CE 00              5328 	adc	a,#0x00
   1A2B 23                 5329 	inc	hl
   1A2C 77                 5330 	ld	(hl),a
   1A2D                    5331 00106$:
                           5332 ;demo.c:830: if (bt < 80 && bt >= 60) bt+=5;
   1A2D 3Ar80s41           5333 	ld	a,(#_bt+0)
   1A30 D6 50              5334 	sub	a,#0x50
   1A32 3Ar81s41           5335 	ld	a,(#_bt+1)
   1A35 DE 00              5336 	sbc	a,#0x00
   1A37 F2r5Ds1A           5337 	jp	P,00108$
   1A3A 3Ar80s41           5338 	ld	a,(#_bt+0)
   1A3D D6 3C              5339 	sub	a,#0x3C
   1A3F 3Ar81s41           5340 	ld	a,(#_bt+1)
   1A42 DE 00              5341 	sbc	a,#0x00
   1A44 FAr5Ds1A           5342 	jp	M,00108$
   1A47 21r80s41           5343 	ld	hl,#_bt
   1A4A 7E                 5344 	ld	a,(hl)
   1A4B C6 05              5345 	add	a,#0x05
   1A4D 23                 5346 	inc	hl
   1A4E 2B                 5347 	dec	hl
   1A4F C5                 5348 	push	bc
   1A50 4F                 5349 	ld	c, a
   1A51 23                 5350 	inc	hl
   1A52 7E                 5351 	ld	a, (hl)
   1A53 47                 5352 	ld	b, a
   1A54 79                 5353 	ld	a, c
   1A55 2B                 5354 	dec	hl
   1A56 77                 5355 	ld	(hl), a
   1A57 78                 5356 	ld	a, b
   1A58 C1                 5357 	pop	bc
   1A59 CE 00              5358 	adc	a,#0x00
   1A5B 23                 5359 	inc	hl
   1A5C 77                 5360 	ld	(hl),a
   1A5D                    5361 00108$:
                           5362 ;demo.c:831: if (bt < 60 && bt >= 40) bt+=4;
   1A5D 3Ar80s41           5363 	ld	a,(#_bt+0)
   1A60 D6 3C              5364 	sub	a,#0x3C
   1A62 3Ar81s41           5365 	ld	a,(#_bt+1)
   1A65 DE 00              5366 	sbc	a,#0x00
   1A67 F2r8Ds1A           5367 	jp	P,00111$
   1A6A 3Ar80s41           5368 	ld	a,(#_bt+0)
   1A6D D6 28              5369 	sub	a,#0x28
   1A6F 3Ar81s41           5370 	ld	a,(#_bt+1)
   1A72 DE 00              5371 	sbc	a,#0x00
   1A74 FAr8Ds1A           5372 	jp	M,00111$
   1A77 21r80s41           5373 	ld	hl,#_bt
   1A7A 7E                 5374 	ld	a,(hl)
   1A7B C6 04              5375 	add	a,#0x04
   1A7D 23                 5376 	inc	hl
   1A7E 2B                 5377 	dec	hl
   1A7F C5                 5378 	push	bc
   1A80 4F                 5379 	ld	c, a
   1A81 23                 5380 	inc	hl
   1A82 7E                 5381 	ld	a, (hl)
   1A83 47                 5382 	ld	b, a
   1A84 79                 5383 	ld	a, c
   1A85 2B                 5384 	dec	hl
   1A86 77                 5385 	ld	(hl), a
   1A87 78                 5386 	ld	a, b
   1A88 C1                 5387 	pop	bc
   1A89 CE 00              5388 	adc	a,#0x00
   1A8B 23                 5389 	inc	hl
   1A8C 77                 5390 	ld	(hl),a
   1A8D                    5391 00111$:
                           5392 ;demo.c:832: if (bt < 40 && bt >= 10) bt+=3;
   1A8D 3Ar80s41           5393 	ld	a,(#_bt+0)
   1A90 D6 28              5394 	sub	a,#0x28
   1A92 3Ar81s41           5395 	ld	a,(#_bt+1)
   1A95 DE 00              5396 	sbc	a,#0x00
   1A97 F2rBDs1A           5397 	jp	P,00114$
   1A9A 3Ar80s41           5398 	ld	a,(#_bt+0)
   1A9D D6 0A              5399 	sub	a,#0x0A
   1A9F 3Ar81s41           5400 	ld	a,(#_bt+1)
   1AA2 DE 00              5401 	sbc	a,#0x00
   1AA4 FArBDs1A           5402 	jp	M,00114$
   1AA7 21r80s41           5403 	ld	hl,#_bt
   1AAA 7E                 5404 	ld	a,(hl)
   1AAB C6 03              5405 	add	a,#0x03
   1AAD 23                 5406 	inc	hl
   1AAE 2B                 5407 	dec	hl
   1AAF C5                 5408 	push	bc
   1AB0 4F                 5409 	ld	c, a
   1AB1 23                 5410 	inc	hl
   1AB2 7E                 5411 	ld	a, (hl)
   1AB3 47                 5412 	ld	b, a
   1AB4 79                 5413 	ld	a, c
   1AB5 2B                 5414 	dec	hl
   1AB6 77                 5415 	ld	(hl), a
   1AB7 78                 5416 	ld	a, b
   1AB8 C1                 5417 	pop	bc
   1AB9 CE 00              5418 	adc	a,#0x00
   1ABB 23                 5419 	inc	hl
   1ABC 77                 5420 	ld	(hl),a
   1ABD                    5421 00114$:
                           5422 ;demo.c:833: if (bt < 10 ) bt+=2;
   1ABD 3Ar80s41           5423 	ld	a,(#_bt+0)
   1AC0 D6 0A              5424 	sub	a,#0x0A
   1AC2 3Ar81s41           5425 	ld	a,(#_bt+1)
   1AC5 DE 00              5426 	sbc	a,#0x00
   1AC7 F2rE0s1A           5427 	jp	P,00117$
   1ACA 21r80s41           5428 	ld	hl,#_bt
   1ACD 7E                 5429 	ld	a,(hl)
   1ACE C6 02              5430 	add	a,#0x02
   1AD0 23                 5431 	inc	hl
   1AD1 2B                 5432 	dec	hl
   1AD2 C5                 5433 	push	bc
   1AD3 4F                 5434 	ld	c, a
   1AD4 23                 5435 	inc	hl
   1AD5 7E                 5436 	ld	a, (hl)
   1AD6 47                 5437 	ld	b, a
   1AD7 79                 5438 	ld	a, c
   1AD8 2B                 5439 	dec	hl
   1AD9 77                 5440 	ld	(hl), a
   1ADA 78                 5441 	ld	a, b
   1ADB C1                 5442 	pop	bc
   1ADC CE 00              5443 	adc	a,#0x00
   1ADE 23                 5444 	inc	hl
   1ADF 77                 5445 	ld	(hl),a
   1AE0                    5446 00117$:
                           5447 ;demo.c:836: cmd.source_x = bx;
   1AE0 ED 4Br7Cs41        5448 	ld	bc,(_bx)
   1AE4 21r04s41           5449 	ld	hl,#_cmd
   1AE7 71                 5450 	ld	(hl),c
   1AE8 23                 5451 	inc	hl
   1AE9 70                 5452 	ld	(hl),b
                           5453 ;demo.c:837: cmd.source_y = bt;
   1AEA 01r06s41           5454 	ld	bc,#_cmd + 2
   1AED ED 5Br80s41        5455 	ld	de,(_bt)
   1AF1 69                 5456 	ld	l,c
   1AF2 60                 5457 	ld	h,b
   1AF3 73                 5458 	ld	(hl),e
   1AF4 23                 5459 	inc	hl
   1AF5 72                 5460 	ld	(hl),d
                           5461 ;demo.c:838: cmd.dest_x = 0;
   1AF6 21r08s41           5462 	ld	hl, #_cmd + 4
   1AF9 36 00              5463 	ld	(hl),#0x00
   1AFB 23                 5464 	inc	hl
   1AFC 36 00              5465 	ld	(hl),#0x00
                           5466 ;demo.c:839: cmd.dest_y = 256;
   1AFE 21r0As41           5467 	ld	hl, #_cmd + 6
   1B01 36 00              5468 	ld	(hl),#0x00
   1B03 23                 5469 	inc	hl
   1B04 36 01              5470 	ld	(hl),#0x01
                           5471 ;demo.c:840: cmd.size_x = 36;
   1B06 21r0Cs41           5472 	ld	hl, #_cmd + 8
   1B09 36 24              5473 	ld	(hl),#0x24
   1B0B 23                 5474 	inc	hl
   1B0C 36 00              5475 	ld	(hl),#0x00
                           5476 ;demo.c:841: cmd.size_y = 36;
   1B0E 21r0Es41           5477 	ld	hl, #_cmd + 10
   1B11 36 24              5478 	ld	(hl),#0x24
   1B13 23                 5479 	inc	hl
   1B14 36 00              5480 	ld	(hl),#0x00
                           5481 ;demo.c:842: cmd.data = 0;
                           5482 ;demo.c:843: cmd.argument = 0x00;
   1B16 3E 00              5483 	ld	a,#0x00
   1B18 32r10s41           5484 	ld	(#_cmd + 12),a
   1B1B 32r11s41           5485 	ld	(#_cmd + 13),a
                           5486 ;demo.c:844: cmd.command = 0xD0; // HMMM
   1B1E 3E D0              5487 	ld	a,#0xD0
   1B20 32r12s41           5488 	ld	(#_cmd + 14),a
                           5489 ;demo.c:845: vdp_copier(&cmd);
   1B23 21r04s41           5490 	ld	hl,#_cmd
   1B26 E5                 5491 	push	hl
   1B27 CDr00s00           5492 	call	_vdp_copier
   1B2A F1                 5493 	pop	af
                           5494 ;demo.c:847: pbx = bx;
   1B2B 2Ar7Cs41           5495 	ld	hl,(_bx)
   1B2E FD 21r86s41        5496 	ld	iy,#_pbx
   1B32 FD 75 00           5497 	ld	0 (iy),l
   1B35 FD 21r86s41        5498 	ld	iy,#_pbx
   1B39 FD 74 01           5499 	ld	1 (iy),h
                           5500 ;demo.c:848: pbt = bt;
   1B3C 2Ar80s41           5501 	ld	hl,(_bt)
   1B3F FD 21r88s41        5502 	ld	iy,#_pbt
   1B43 FD 75 00           5503 	ld	0 (iy),l
   1B46 FD 21r88s41        5504 	ld	iy,#_pbt
   1B4A FD 74 01           5505 	ld	1 (iy),h
                           5506 ;demo.c:851: drawbox(bx,bt);
   1B4D 21r80s41           5507 	ld	hl,#_bt + 0
   1B50 4E                 5508 	ld	c,(hl)
   1B51 21r7Cs41           5509 	ld	hl,#_bx + 0
   1B54 46                 5510 	ld	b,(hl)
   1B55 79                 5511 	ld	a,c
   1B56 F5                 5512 	push	af
   1B57 33                 5513 	inc	sp
   1B58 C5                 5514 	push	bc
   1B59 33                 5515 	inc	sp
   1B5A CDr84s18           5516 	call	_drawbox
   1B5D F1                 5517 	pop	af
                           5518 ;demo.c:854: bonc = 1;
   1B5E 21r84s41           5519 	ld	hl,#_bonc + 0
   1B61 36 01              5520 	ld	(hl), #0x01
   1B63 21r85s41           5521 	ld	hl,#_bonc + 1
   1B66 36 00              5522 	ld	(hl), #0x00
                           5523 ;demo.c:855: if (bt > by) {
   1B68 21r7Es41           5524 	ld	hl,#_by
   1B6B 7E                 5525 	ld	a,(hl)
   1B6C FD 21r80s41        5526 	ld	iy,#_bt
   1B70 FD 96 00           5527 	sub	a,0 (iy)
   1B73 23                 5528 	inc	hl
   1B74 7E                 5529 	ld	a,(hl)
   1B75 FD 21r80s41        5530 	ld	iy,#_bt
   1B79 FD 9E 01           5531 	sbc	a,1 (iy)
   1B7C F0                 5532 	ret	P
                           5533 ;demo.c:857: bt = 0;
   1B7D 21r80s41           5534 	ld	hl,#_bt + 0
   1B80 36 00              5535 	ld	(hl), #0x00
   1B82 21r81s41           5536 	ld	hl,#_bt + 1
   1B85 36 00              5537 	ld	(hl), #0x00
                           5538 ;demo.c:858: if (by > 0) {
   1B87 3E 00              5539 	ld	a,#0x00
   1B89 FD 21r7Es41        5540 	ld	iy,#_by
   1B8D FD 96 00           5541 	sub	a,0 (iy)
   1B90 3E 00              5542 	ld	a,#0x00
   1B92 FD 21r7Es41        5543 	ld	iy,#_by
   1B96 FD 9E 01           5544 	sbc	a,1 (iy)
   1B99 F2rF1s1B           5545 	jp	P,00121$
                           5546 ;demo.c:859: bonc = 0;
   1B9C 21r84s41           5547 	ld	hl,#_bonc + 0
   1B9F 36 00              5548 	ld	(hl), #0x00
   1BA1 21r85s41           5549 	ld	hl,#_bonc + 1
   1BA4 36 00              5550 	ld	(hl), #0x00
                           5551 ;demo.c:860: by-=16;
   1BA6 21r7Es41           5552 	ld	hl,#_by
   1BA9 7E                 5553 	ld	a,(hl)
   1BAA C6 F0              5554 	add	a,#0xF0
   1BAC 77                 5555 	ld	(hl),a
   1BAD 23                 5556 	inc	hl
   1BAE 7E                 5557 	ld	a,(hl)
   1BAF CE FF              5558 	adc	a,#0xFF
   1BB1 77                 5559 	ld	(hl),a
                           5560 ;demo.c:861: prevbox_of = boxes_of[boxi];
   1BB2 3Ar7Bs41           5561 	ld	a,(#_boxi+0)
   1BB5 87                 5562 	add	a,a
   1BB6 C6r8A              5563 	add	a,#<_boxes_of
   1BB8 6F                 5564 	ld	l,a
   1BB9 3Es41              5565 	ld	a,#>_boxes_of
   1BBB CE 00              5566 	adc	a,#0x00
   1BBD 67                 5567 	ld	h,a
   1BBE 4E                 5568 	ld	c,(hl)
   1BBF 23                 5569 	inc	hl
   1BC0 21r92s41           5570 	ld	hl,#_prevbox_of + 0
   1BC3 71                 5571 	ld	(hl), c
                           5572 ;demo.c:862: by+=prevbox_of;
   1BC4 21r92s41           5573 	ld	hl,#_prevbox_of + 0
   1BC7 4E                 5574 	ld	c,(hl)
   1BC8 06 00              5575 	ld	b,#0x00
   1BCA 21r7Es41           5576 	ld	hl,#_by
   1BCD 7E                 5577 	ld	a,(hl)
   1BCE 81                 5578 	add	a,c
   1BCF 23                 5579 	inc	hl
   1BD0 2B                 5580 	dec	hl
   1BD1 C5                 5581 	push	bc
   1BD2 4F                 5582 	ld	c, a
   1BD3 23                 5583 	inc	hl
   1BD4 7E                 5584 	ld	a, (hl)
   1BD5 47                 5585 	ld	b, a
   1BD6 79                 5586 	ld	a, c
   1BD7 2B                 5587 	dec	hl
   1BD8 77                 5588 	ld	(hl), a
   1BD9 78                 5589 	ld	a, b
   1BDA C1                 5590 	pop	bc
   1BDB 88                 5591 	adc	a,b
   1BDC 23                 5592 	inc	hl
   1BDD 77                 5593 	ld	(hl),a
                           5594 ;demo.c:863: boxi++;
   1BDE FD 21r7Bs41        5595 	ld	iy,#_boxi
   1BE2 FD 34 00           5596 	inc	0 (iy)
                           5597 ;demo.c:864: if (boxi >= 4) boxi = 0;
   1BE5 3Ar7Bs41           5598 	ld	a,(#_boxi+0)
   1BE8 D6 04              5599 	sub	a,#0x04
   1BEA 38 05              5600 	jr	C,00121$
   1BEC 21r7Bs41           5601 	ld	hl,#_boxi + 0
   1BEF 36 00              5602 	ld	(hl), #0x00
   1BF1                    5603 00121$:
                           5604 ;demo.c:867: if (by <= 0) {
   1BF1 3E 00              5605 	ld	a,#0x00
   1BF3 FD 21r7Es41        5606 	ld	iy,#_by
   1BF7 FD 96 00           5607 	sub	a,0 (iy)
   1BFA 3E 00              5608 	ld	a,#0x00
   1BFC FD 21r7Es41        5609 	ld	iy,#_by
   1C00 FD 9E 01           5610 	sbc	a,1 (iy)
   1C03 F8                 5611 	ret	M
                           5612 ;demo.c:868: bx-=16;
   1C04 21r7Cs41           5613 	ld	hl,#_bx
   1C07 7E                 5614 	ld	a,(hl)
   1C08 C6 F0              5615 	add	a,#0xF0
   1C0A 77                 5616 	ld	(hl),a
   1C0B 23                 5617 	inc	hl
   1C0C 7E                 5618 	ld	a,(hl)
   1C0D CE FF              5619 	adc	a,#0xFF
   1C0F 77                 5620 	ld	(hl),a
                           5621 ;demo.c:869: bo+=8;
   1C10 21r82s41           5622 	ld	hl,#_bo
   1C13 7E                 5623 	ld	a,(hl)
   1C14 C6 08              5624 	add	a,#0x08
   1C16 23                 5625 	inc	hl
   1C17 2B                 5626 	dec	hl
   1C18 C5                 5627 	push	bc
   1C19 4F                 5628 	ld	c, a
   1C1A 23                 5629 	inc	hl
   1C1B 7E                 5630 	ld	a, (hl)
   1C1C 47                 5631 	ld	b, a
   1C1D 79                 5632 	ld	a, c
   1C1E 2B                 5633 	dec	hl
   1C1F 77                 5634 	ld	(hl), a
   1C20 78                 5635 	ld	a, b
   1C21 C1                 5636 	pop	bc
   1C22 CE 00              5637 	adc	a,#0x00
   1C24 23                 5638 	inc	hl
   1C25 77                 5639 	ld	(hl),a
                           5640 ;demo.c:870: if (bo > 192) bo = 0;
   1C26 3E C0              5641 	ld	a,#0xC0
   1C28 FD 21r82s41        5642 	ld	iy,#_bo
   1C2C FD 96 00           5643 	sub	a,0 (iy)
   1C2F 3E 00              5644 	ld	a,#0x00
   1C31 FD 21r82s41        5645 	ld	iy,#_bo
   1C35 FD 9E 01           5646 	sbc	a,1 (iy)
   1C38 F2r45s1C           5647 	jp	P,00123$
   1C3B 21r82s41           5648 	ld	hl,#_bo + 0
   1C3E 36 00              5649 	ld	(hl), #0x00
   1C40 21r83s41           5650 	ld	hl,#_bo + 1
   1C43 36 00              5651 	ld	(hl), #0x00
   1C45                    5652 00123$:
                           5653 ;demo.c:871: by=84+bo;
   1C45 21r7Es41           5654 	ld	hl,#_by
   1C48 3Ar82s41           5655 	ld	a,(#_bo+0)
   1C4B C6 54              5656 	add	a,#0x54
   1C4D 77                 5657 	ld	(hl),a
   1C4E 3Ar83s41           5658 	ld	a,(#_bo+1)
   1C51 CE 00              5659 	adc	a,#0x00
   1C53 23                 5660 	inc	hl
   1C54 77                 5661 	ld	(hl),a
   1C55 C9                 5662 	ret
   1C56                    5663 _boxes_end::
   1C56                    5664 __str_12:
   1C56 4C 45 54 20 55 53  5665 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1C81 00                 5666 	.db 0x00
                           5667 ;demo.c:881: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5668 ;	---------------------------------
                           5669 ; Function drawtritile
                           5670 ; ---------------------------------
   1C82                    5671 _drawtritile_start::
   1C82                    5672 _drawtritile:
   1C82 DD E5              5673 	push	ix
   1C84 DD 21 00 00        5674 	ld	ix,#0
   1C88 DD 39              5675 	add	ix,sp
                           5676 ;demo.c:882: cmd.source_x = tx;
   1C8A DD 4E 04           5677 	ld	c,4 (ix)
   1C8D 06 00              5678 	ld	b,#0x00
   1C8F 21r04s41           5679 	ld	hl,#_cmd
   1C92 71                 5680 	ld	(hl),c
   1C93 23                 5681 	inc	hl
   1C94 70                 5682 	ld	(hl),b
                           5683 ;demo.c:883: cmd.source_y = ty-1;
   1C95 01r06s41           5684 	ld	bc,#_cmd + 2
   1C98 DD 5E 05           5685 	ld	e,5 (ix)
   1C9B DD 56 06           5686 	ld	d,6 (ix)
   1C9E 1B                 5687 	dec	de
   1C9F 69                 5688 	ld	l,c
   1CA0 60                 5689 	ld	h,b
   1CA1 73                 5690 	ld	(hl),e
   1CA2 23                 5691 	inc	hl
   1CA3 72                 5692 	ld	(hl),d
                           5693 ;demo.c:884: cmd.dest_x = x;
   1CA4 01r08s41           5694 	ld	bc,#_cmd + 4
   1CA7 DD 5E 07           5695 	ld	e,7 (ix)
   1CAA 16 00              5696 	ld	d,#0x00
   1CAC 69                 5697 	ld	l,c
   1CAD 60                 5698 	ld	h,b
   1CAE 73                 5699 	ld	(hl),e
   1CAF 23                 5700 	inc	hl
   1CB0 72                 5701 	ld	(hl),d
                           5702 ;demo.c:885: cmd.dest_y = y;
   1CB1 01r0As41           5703 	ld	bc,#_cmd + 6
   1CB4 DD 5E 08           5704 	ld	e,8 (ix)
   1CB7 16 00              5705 	ld	d,#0x00
   1CB9 69                 5706 	ld	l,c
   1CBA 60                 5707 	ld	h,b
   1CBB 73                 5708 	ld	(hl),e
   1CBC 23                 5709 	inc	hl
   1CBD 72                 5710 	ld	(hl),d
                           5711 ;demo.c:886: cmd.size_x = 16;
   1CBE 21r0Cs41           5712 	ld	hl, #_cmd + 8
   1CC1 36 10              5713 	ld	(hl),#0x10
   1CC3 23                 5714 	inc	hl
   1CC4 36 00              5715 	ld	(hl),#0x00
                           5716 ;demo.c:887: cmd.size_y = 16;
   1CC6 21r0Es41           5717 	ld	hl, #_cmd + 10
   1CC9 36 10              5718 	ld	(hl),#0x10
   1CCB 23                 5719 	inc	hl
   1CCC 36 00              5720 	ld	(hl),#0x00
                           5721 ;demo.c:888: cmd.data = 0;
                           5722 ;demo.c:889: cmd.argument = 0x00;
   1CCE 3E 00              5723 	ld	a,#0x00
   1CD0 32r10s41           5724 	ld	(#_cmd + 12),a
   1CD3 32r11s41           5725 	ld	(#_cmd + 13),a
                           5726 ;demo.c:890: cmd.command = 0xd0; // HMMM
   1CD6 3E D0              5727 	ld	a,#0xD0
   1CD8 32r12s41           5728 	ld	(#_cmd + 14),a
                           5729 ;demo.c:891: vdp_copier(&cmd);
   1CDB 21r04s41           5730 	ld	hl,#_cmd
   1CDE E5                 5731 	push	hl
   1CDF CDr00s00           5732 	call	_vdp_copier
   1CE2 F1                 5733 	pop	af
   1CE3 DD E1              5734 	pop	ix
   1CE5 C9                 5735 	ret
   1CE6                    5736 _drawtritile_end::
                           5737 ;demo.c:894: void drawtilescreen(char* tripic) {
                           5738 ;	---------------------------------
                           5739 ; Function drawtilescreen
                           5740 ; ---------------------------------
   1CE6                    5741 _drawtilescreen_start::
   1CE6                    5742 _drawtilescreen:
   1CE6 DD E5              5743 	push	ix
   1CE8 DD 21 00 00        5744 	ld	ix,#0
   1CEC DD 39              5745 	add	ix,sp
   1CEE 21 F8 FF           5746 	ld	hl,#-8
   1CF1 39                 5747 	add	hl,sp
   1CF2 F9                 5748 	ld	sp,hl
                           5749 ;demo.c:895: int x = 0;
   1CF3 DD 36 FE 00        5750 	ld	-2 (ix),#0x00
   1CF7 DD 36 FF 00        5751 	ld	-1 (ix),#0x00
                           5752 ;demo.c:898: while(i < 192) {
   1CFB DD 36 FC 00        5753 	ld	-4 (ix),#0x00
   1CFF DD 36 FD 00        5754 	ld	-3 (ix),#0x00
   1D03 DD 36 FA 00        5755 	ld	-6 (ix),#0x00
   1D07 DD 36 FB 00        5756 	ld	-5 (ix),#0x00
   1D0B                    5757 00103$:
   1D0B DD 7E FA           5758 	ld	a,-6 (ix)
   1D0E D6 C0              5759 	sub	a,#0xC0
   1D10 DD 7E FB           5760 	ld	a,-5 (ix)
   1D13 DE 00              5761 	sbc	a,#0x00
   1D15 F2r9Cs1D           5762 	jp	P,00106$
                           5763 ;demo.c:899: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1D18 DD 7E FC           5764 	ld	a,-4 (ix)
   1D1B DD 77 F8           5765 	ld	-8 (ix),a
   1D1E DD 7E FE           5766 	ld	a,-2 (ix)
   1D21 DD 77 F9           5767 	ld	-7 (ix),a
   1D24 DD 7E 04           5768 	ld	a,4 (ix)
   1D27 DD 86 FA           5769 	add	a,-6 (ix)
   1D2A 4F                 5770 	ld	c,a
   1D2B DD 7E 05           5771 	ld	a,5 (ix)
   1D2E DD 8E FB           5772 	adc	a,-5 (ix)
   1D31 47                 5773 	ld	b,a
   1D32 0A                 5774 	ld	a,(bc)
   1D33 4F                 5775 	ld	c,a
   1D34 87                 5776 	add	a,a
   1D35 C6r20              5777 	add	a,#<_tri_lookup_y
   1D37 6F                 5778 	ld	l,a
   1D38 3Es01              5779 	ld	a,#>_tri_lookup_y
   1D3A CE 00              5780 	adc	a,#0x00
   1D3C 67                 5781 	ld	h,a
   1D3D 46                 5782 	ld	b,(hl)
   1D3E 23                 5783 	inc	hl
   1D3F 56                 5784 	ld	d,(hl)
   1D40 3Er00              5785 	ld	a,#<_tri_lookup_x
   1D42 81                 5786 	add	a,c
   1D43 6F                 5787 	ld	l,a
   1D44 3Es01              5788 	ld	a,#>_tri_lookup_x
   1D46 CE 00              5789 	adc	a,#0x00
   1D48 67                 5790 	ld	h,a
   1D49 4E                 5791 	ld	c,(hl)
   1D4A DD 66 F8           5792 	ld	h,-8 (ix)
   1D4D DD 6E F9           5793 	ld	l,-7 (ix)
   1D50 E5                 5794 	push	hl
   1D51 58                 5795 	ld	e,b
   1D52 D5                 5796 	push	de
   1D53 79                 5797 	ld	a,c
   1D54 F5                 5798 	push	af
   1D55 33                 5799 	inc	sp
   1D56 CDr82s1C           5800 	call	_drawtritile
   1D59 F1                 5801 	pop	af
   1D5A F1                 5802 	pop	af
   1D5B 33                 5803 	inc	sp
                           5804 ;demo.c:900: x+=16;
   1D5C DD 7E FE           5805 	ld	a,-2 (ix)
   1D5F C6 10              5806 	add	a,#0x10
   1D61 DD 77 FE           5807 	ld	-2 (ix),a
   1D64 DD 7E FF           5808 	ld	a,-1 (ix)
   1D67 CE 00              5809 	adc	a,#0x00
   1D69 DD 77 FF           5810 	ld	-1 (ix),a
                           5811 ;demo.c:901: if (x >= 256) {x = 0; y+=16;}
   1D6C DD 7E FE           5812 	ld	a,-2 (ix)
   1D6F D6 00              5813 	sub	a,#0x00
   1D71 DD 7E FF           5814 	ld	a,-1 (ix)
   1D74 DE 01              5815 	sbc	a,#0x01
   1D76 FAr91s1D           5816 	jp	M,00102$
   1D79 DD 36 FE 00        5817 	ld	-2 (ix),#0x00
   1D7D DD 36 FF 00        5818 	ld	-1 (ix),#0x00
   1D81 DD 7E FC           5819 	ld	a,-4 (ix)
   1D84 C6 10              5820 	add	a,#0x10
   1D86 DD 77 FC           5821 	ld	-4 (ix),a
   1D89 DD 7E FD           5822 	ld	a,-3 (ix)
   1D8C CE 00              5823 	adc	a,#0x00
   1D8E DD 77 FD           5824 	ld	-3 (ix),a
   1D91                    5825 00102$:
                           5826 ;demo.c:902: i++;
   1D91 DD 34 FA           5827 	inc	-6 (ix)
   1D94 20 03              5828 	jr	NZ,00112$
   1D96 DD 34 FB           5829 	inc	-5 (ix)
   1D99                    5830 00112$:
   1D99 C3r0Bs1D           5831 	jp	00103$
   1D9C                    5832 00106$:
   1D9C DD F9              5833 	ld	sp,ix
   1D9E DD E1              5834 	pop	ix
   1DA0 C9                 5835 	ret
   1DA1                    5836 _drawtilescreen_end::
                           5837 ;demo.c:917: void tritiles() {
                           5838 ;	---------------------------------
                           5839 ; Function tritiles
                           5840 ; ---------------------------------
   1DA1                    5841 _tritiles_start::
   1DA1                    5842 _tritiles:
   1DA1 DD E5              5843 	push	ix
   1DA3 DD 21 00 00        5844 	ld	ix,#0
   1DA7 DD 39              5845 	add	ix,sp
   1DA9 21 FB FF           5846 	ld	hl,#-5
   1DAC 39                 5847 	add	hl,sp
   1DAD F9                 5848 	ld	sp,hl
                           5849 ;demo.c:924: if (tri_inited == 0) {
   1DAE AF                 5850 	xor	a,a
   1DAF 21r93s41           5851 	ld	hl,#_tri_inited + 0
   1DB2 B6                 5852 	or	a,(hl)
   1DB3 C2r52s1E           5853 	jp	NZ,00102$
                           5854 ;demo.c:925: tri_inited = 1;
   1DB6 FD 21r93s41        5855 	ld	iy,#_tri_inited
   1DBA FD 36 00 01        5856 	ld	0 (iy),#0x01
                           5857 ;demo.c:927: cmd.size_x = 256;
   1DBE 21r0Cs41           5858 	ld	hl, #_cmd + 8
   1DC1 36 00              5859 	ld	(hl),#0x00
   1DC3 23                 5860 	inc	hl
   1DC4 36 01              5861 	ld	(hl),#0x01
                           5862 ;demo.c:928: cmd.size_y = 1;
   1DC6 21r0Es41           5863 	ld	hl, #_cmd + 10
   1DC9 36 01              5864 	ld	(hl),#0x01
   1DCB 23                 5865 	inc	hl
   1DCC 36 00              5866 	ld	(hl),#0x00
                           5867 ;demo.c:929: cmd.data = 0;
                           5868 ;demo.c:930: cmd.argument = 0x00; // from 70xY to left
   1DCE 3E 00              5869 	ld	a,#0x00
   1DD0 32r10s41           5870 	ld	(#_cmd + 12),a
   1DD3 32r11s41           5871 	ld	(#_cmd + 13),a
                           5872 ;demo.c:931: cmd.command = 0xd0; // vram to vram, y only
   1DD6 01r12s41           5873 	ld	bc,#_cmd + 14
   1DD9 3E D0              5874 	ld	a,#0xD0
   1DDB 02                 5875 	ld	(bc),a
                           5876 ;demo.c:932: cmd.source_x = 0;
   1DDC 21r04s41           5877 	ld	hl,#_cmd
   1DDF 36 00              5878 	ld	(hl),#0x00
   1DE1 23                 5879 	inc	hl
   1DE2 36 00              5880 	ld	(hl),#0x00
                           5881 ;demo.c:933: cmd.source_y = 255;
   1DE4 21r06s41           5882 	ld	hl, #_cmd + 2
   1DE7 36 FF              5883 	ld	(hl),#0xFF
   1DE9 23                 5884 	inc	hl
   1DEA 36 00              5885 	ld	(hl),#0x00
                           5886 ;demo.c:934: cmd.dest_y = 0;
   1DEC 01r0As41           5887 	ld	bc,#_cmd + 6
   1DEF 69                 5888 	ld	l,c
   1DF0 60                 5889 	ld	h,b
   1DF1 36 00              5890 	ld	(hl),#0x00
   1DF3 23                 5891 	inc	hl
   1DF4 36 00              5892 	ld	(hl),#0x00
                           5893 ;demo.c:936: for (x = 0; x < 212; x++) {
   1DF6 DD 36 FE D4        5894 	ld	-2 (ix),#0xD4
   1DFA DD 36 FF 00        5895 	ld	-1 (ix),#0x00
   1DFE                    5896 00121$:
                           5897 ;demo.c:937: waitVB();
   1DFE 76                 5898 		halt 
                           5899 ;demo.c:938: cmd.dest_x = 0;
   1DFF 11r08s41           5900 	ld	de,#_cmd + 4
   1E02 EB                 5901 	ex	de,hl
   1E03 36 00              5902 	ld	(hl),#0x00
   1E05 23                 5903 	inc	hl
   1E06 36 00              5904 	ld	(hl),#0x00
                           5905 ;demo.c:939: cmd.dest_y = x;
   1E08 11r0As41           5906 	ld	de,#_cmd + 6
   1E0B DD 4E FE           5907 	ld	c,-2 (ix)
   1E0E DD 46 FF           5908 	ld	b,-1 (ix)
   1E11 0B                 5909 	dec	bc
   1E12 EB                 5910 	ex	de,hl
   1E13 71                 5911 	ld	(hl),c
   1E14 23                 5912 	inc	hl
   1E15 70                 5913 	ld	(hl),b
                           5914 ;demo.c:940: vdp_copier(&cmd);
   1E16 C5                 5915 	push	bc
   1E17 21r04s41           5916 	ld	hl,#_cmd
   1E1A E5                 5917 	push	hl
   1E1B CDr00s00           5918 	call	_vdp_copier
   1E1E F1                 5919 	pop	af
   1E1F C1                 5920 	pop	bc
   1E20 DD 71 FE           5921 	ld	-2 (ix),c
   1E23 DD 70 FF           5922 	ld	-1 (ix),b
                           5923 ;demo.c:936: for (x = 0; x < 212; x++) {
   1E26 DD 7E FE           5924 	ld	a,-2 (ix)
   1E29 DD B6 FF           5925 	or	a,-1 (ix)
   1E2C 20 D0              5926 	jr	NZ,00121$
                           5927 ;demo.c:943: vdp_register(9,2); // 50hz,192
   1E2E 21 09 02           5928 	ld	hl,#0x0209
   1E31 E5                 5929 	push	hl
   1E32 CDr00s00           5930 	call	_vdp_register
   1E35 F1                 5931 	pop	af
                           5932 ;demo.c:945: vdp_load_palette(boxes_palette);
   1E36 21rE0s40           5933 	ld	hl,#_boxes_palette
   1E39 E5                 5934 	push	hl
   1E3A CDr00s00           5935 	call	_vdp_load_palette
   1E3D F1                 5936 	pop	af
                           5937 ;demo.c:947: msx2_palette(15,0,0,0);
   1E3E 21 00 00           5938 	ld	hl,#0x0000
   1E41 E5                 5939 	push	hl
   1E42 2E 0F              5940 	ld	l, #0x0F
   1E44 E5                 5941 	push	hl
   1E45 CDr00s00           5942 	call	_msx2_palette
   1E48 F1                 5943 	pop	af
   1E49 F1                 5944 	pop	af
                           5945 ;demo.c:949: drawtilescreen(tri_center);
   1E4A 21r2Cs02           5946 	ld	hl,#_tri_center
   1E4D E5                 5947 	push	hl
   1E4E CDrE6s1C           5948 	call	_drawtilescreen
   1E51 F1                 5949 	pop	af
   1E52                    5950 00102$:
                           5951 ;demo.c:954: triframes++;
   1E52 FD 21r9Es41        5952 	ld	iy,#_triframes
   1E56 FD 34 00           5953 	inc	0 (iy)
   1E59 20 07              5954 	jr	NZ,00142$
   1E5B FD 21r9Es41        5955 	ld	iy,#_triframes
   1E5F FD 34 01           5956 	inc	1 (iy)
   1E62                    5957 00142$:
                           5958 ;demo.c:955: if (triframes == 200) {
   1E62 3Ar9Es41           5959 	ld	a,(#_triframes+0)
   1E65 D6 C8              5960 	sub	a,#0xC8
   1E67 20 06              5961 	jr	NZ,00143$
   1E69 3Ar9Fs41           5962 	ld	a,(#_triframes+1)
   1E6C B7                 5963 	or	a,a
   1E6D 28 02              5964 	jr	Z,00144$
   1E6F                    5965 00143$:
   1E6F 18 08              5966 	jr	00104$
   1E71                    5967 00144$:
                           5968 ;demo.c:956: drawtilescreen(tri_up);
   1E71 21rECs02           5969 	ld	hl,#_tri_up
   1E74 E5                 5970 	push	hl
   1E75 CDrE6s1C           5971 	call	_drawtilescreen
   1E78 F1                 5972 	pop	af
   1E79                    5973 00104$:
                           5974 ;demo.c:959: if (triframes == 400) {
   1E79 3Ar9Es41           5975 	ld	a,(#_triframes+0)
   1E7C D6 90              5976 	sub	a,#0x90
   1E7E 20 07              5977 	jr	NZ,00145$
   1E80 3Ar9Fs41           5978 	ld	a,(#_triframes+1)
   1E83 D6 01              5979 	sub	a,#0x01
   1E85 28 02              5980 	jr	Z,00146$
   1E87                    5981 00145$:
   1E87 18 08              5982 	jr	00106$
   1E89                    5983 00146$:
                           5984 ;demo.c:960: drawtilescreen(tri_dia);
   1E89 21rACs03           5985 	ld	hl,#_tri_dia
   1E8C E5                 5986 	push	hl
   1E8D CDrE6s1C           5987 	call	_drawtilescreen
   1E90 F1                 5988 	pop	af
   1E91                    5989 00106$:
                           5990 ;demo.c:962: if (triframes == 600) {
   1E91 3Ar9Es41           5991 	ld	a,(#_triframes+0)
   1E94 D6 58              5992 	sub	a,#0x58
   1E96 20 07              5993 	jr	NZ,00147$
   1E98 3Ar9Fs41           5994 	ld	a,(#_triframes+1)
   1E9B D6 02              5995 	sub	a,#0x02
   1E9D 28 02              5996 	jr	Z,00148$
   1E9F                    5997 00147$:
   1E9F 18 08              5998 	jr	00108$
   1EA1                    5999 00148$:
                           6000 ;demo.c:963: drawtilescreen(tri_side1);
   1EA1 21r6Cs04           6001 	ld	hl,#_tri_side1
   1EA4 E5                 6002 	push	hl
   1EA5 CDrE6s1C           6003 	call	_drawtilescreen
   1EA8 F1                 6004 	pop	af
   1EA9                    6005 00108$:
                           6006 ;demo.c:965: if (triframes == 700) {
   1EA9 3Ar9Es41           6007 	ld	a,(#_triframes+0)
   1EAC D6 BC              6008 	sub	a,#0xBC
   1EAE 20 07              6009 	jr	NZ,00149$
   1EB0 3Ar9Fs41           6010 	ld	a,(#_triframes+1)
   1EB3 D6 02              6011 	sub	a,#0x02
   1EB5 28 02              6012 	jr	Z,00150$
   1EB7                    6013 00149$:
   1EB7 18 08              6014 	jr	00110$
   1EB9                    6015 00150$:
                           6016 ;demo.c:966: drawtilescreen(tri_side2);
   1EB9 21r2Cs05           6017 	ld	hl,#_tri_side2
   1EBC E5                 6018 	push	hl
   1EBD CDrE6s1C           6019 	call	_drawtilescreen
   1EC0 F1                 6020 	pop	af
   1EC1                    6021 00110$:
                           6022 ;demo.c:968: if (triframes == 800) {
   1EC1 3Ar9Es41           6023 	ld	a,(#_triframes+0)
   1EC4 D6 20              6024 	sub	a,#0x20
   1EC6 20 07              6025 	jr	NZ,00151$
   1EC8 3Ar9Fs41           6026 	ld	a,(#_triframes+1)
   1ECB D6 03              6027 	sub	a,#0x03
   1ECD 28 02              6028 	jr	Z,00152$
   1ECF                    6029 00151$:
   1ECF 18 08              6030 	jr	00112$
   1ED1                    6031 00152$:
                           6032 ;demo.c:969: drawtilescreen(tri_side1);
   1ED1 21r6Cs04           6033 	ld	hl,#_tri_side1
   1ED4 E5                 6034 	push	hl
   1ED5 CDrE6s1C           6035 	call	_drawtilescreen
   1ED8 F1                 6036 	pop	af
   1ED9                    6037 00112$:
                           6038 ;demo.c:971: if (triframes == 900) {
   1ED9 3Ar9Es41           6039 	ld	a,(#_triframes+0)
   1EDC D6 84              6040 	sub	a,#0x84
   1EDE 20 07              6041 	jr	NZ,00153$
   1EE0 3Ar9Fs41           6042 	ld	a,(#_triframes+1)
   1EE3 D6 03              6043 	sub	a,#0x03
   1EE5 28 02              6044 	jr	Z,00154$
   1EE7                    6045 00153$:
   1EE7 18 08              6046 	jr	00114$
   1EE9                    6047 00154$:
                           6048 ;demo.c:972: drawtilescreen(tri_side2);
   1EE9 21r2Cs05           6049 	ld	hl,#_tri_side2
   1EEC E5                 6050 	push	hl
   1EED CDrE6s1C           6051 	call	_drawtilescreen
   1EF0 F1                 6052 	pop	af
   1EF1                    6053 00114$:
                           6054 ;demo.c:974: if (triframes == 1000) {
   1EF1 3Ar9Es41           6055 	ld	a,(#_triframes+0)
   1EF4 D6 E8              6056 	sub	a,#0xE8
   1EF6 20 07              6057 	jr	NZ,00155$
   1EF8 3Ar9Fs41           6058 	ld	a,(#_triframes+1)
   1EFB D6 03              6059 	sub	a,#0x03
   1EFD 28 02              6060 	jr	Z,00156$
   1EFF                    6061 00155$:
   1EFF 18 12              6062 	jr	00116$
   1F01                    6063 00156$:
                           6064 ;demo.c:975: triframes = 0;
   1F01 21r9Es41           6065 	ld	hl,#_triframes + 0
   1F04 36 00              6066 	ld	(hl), #0x00
   1F06 21r9Fs41           6067 	ld	hl,#_triframes + 1
   1F09 36 00              6068 	ld	(hl), #0x00
                           6069 ;demo.c:976: drawtilescreen(tri_center);
   1F0B 21r2Cs02           6070 	ld	hl,#_tri_center
   1F0E E5                 6071 	push	hl
   1F0F CDrE6s1C           6072 	call	_drawtilescreen
   1F12 F1                 6073 	pop	af
   1F13                    6074 00116$:
                           6075 ;demo.c:979: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   1F13 21r96s41           6076 	ld	hl,#_tripal + 2
   1F16 4E                 6077 	ld	c,(hl)
   1F17 11r95s41           6078 	ld	de,#_tripal + 1
   1F1A 1A                 6079 	ld	a,(de)
   1F1B 47                 6080 	ld	b,a
   1F1C 21r94s41           6081 	ld	hl,#_tripal
   1F1F 5E                 6082 	ld	e,(hl)
   1F20 79                 6083 	ld	a,c
   1F21 F5                 6084 	push	af
   1F22 33                 6085 	inc	sp
   1F23 C5                 6086 	push	bc
   1F24 33                 6087 	inc	sp
   1F25 53                 6088 	ld	d,e
   1F26 1E 03              6089 	ld	e,#0x03
   1F28 D5                 6090 	push	de
   1F29 CDr00s00           6091 	call	_msx2_palette
   1F2C F1                 6092 	pop	af
   1F2D F1                 6093 	pop	af
                           6094 ;demo.c:980: msx2_palette(13,tripal[3],tripal[4],tripal[5]);
   1F2E 21r99s41           6095 	ld	hl,#_tripal + 5
   1F31 4E                 6096 	ld	c,(hl)
   1F32 11r98s41           6097 	ld	de,#_tripal + 4
   1F35 1A                 6098 	ld	a,(de)
   1F36 47                 6099 	ld	b,a
   1F37 21r97s41           6100 	ld	hl,#_tripal + 3
   1F3A 5E                 6101 	ld	e,(hl)
   1F3B 79                 6102 	ld	a,c
   1F3C F5                 6103 	push	af
   1F3D 33                 6104 	inc	sp
   1F3E C5                 6105 	push	bc
   1F3F 33                 6106 	inc	sp
   1F40 53                 6107 	ld	d,e
   1F41 1E 0D              6108 	ld	e,#0x0D
   1F43 D5                 6109 	push	de
   1F44 CDr00s00           6110 	call	_msx2_palette
   1F47 F1                 6111 	pop	af
   1F48 F1                 6112 	pop	af
                           6113 ;demo.c:981: msx2_palette(5,tripal[6],tripal[7],tripal[8]);
   1F49 21r9Cs41           6114 	ld	hl,#_tripal + 8
   1F4C 4E                 6115 	ld	c,(hl)
   1F4D 11r9Bs41           6116 	ld	de,#_tripal + 7
   1F50 1A                 6117 	ld	a,(de)
   1F51 47                 6118 	ld	b,a
   1F52 21r9As41           6119 	ld	hl,#_tripal + 6
   1F55 5E                 6120 	ld	e,(hl)
   1F56 79                 6121 	ld	a,c
   1F57 F5                 6122 	push	af
   1F58 33                 6123 	inc	sp
   1F59 C5                 6124 	push	bc
   1F5A 33                 6125 	inc	sp
   1F5B 53                 6126 	ld	d,e
   1F5C 1E 05              6127 	ld	e,#0x05
   1F5E D5                 6128 	push	de
   1F5F CDr00s00           6129 	call	_msx2_palette
   1F62 F1                 6130 	pop	af
   1F63 F1                 6131 	pop	af
                           6132 ;demo.c:984: tripaltick++;
   1F64 FD 21r9Ds41        6133 	ld	iy,#_tripaltick
   1F68 FD 34 00           6134 	inc	0 (iy)
                           6135 ;demo.c:985: if (tripaltick > 6) {
   1F6B 3E 06              6136 	ld	a,#0x06
   1F6D FD 21r9Ds41        6137 	ld	iy,#_tripaltick
   1F71 FD 96 00           6138 	sub	a,0 (iy)
   1F74 D2rE2s1F           6139 	jp	NC,00126$
                           6140 ;demo.c:987: r = tripal[0];
   1F77 21r94s41           6141 	ld	hl,#_tripal
   1F7A 4E                 6142 	ld	c,(hl)
   1F7B DD 71 FD           6143 	ld	-3 (ix),c
                           6144 ;demo.c:988: g = tripal[1];
   1F7E 11r95s41           6145 	ld	de,#_tripal + 1
   1F81 1A                 6146 	ld	a,(de)
   1F82 DD 77 FC           6147 	ld	-4 (ix),a
                           6148 ;demo.c:989: b = tripal[2];
   1F85 21r96s41           6149 	ld	hl,#_tripal + 2
   1F88 5E                 6150 	ld	e,(hl)
   1F89 DD 73 FB           6151 	ld	-5 (ix),e
                           6152 ;demo.c:991: for (x = 0; x < 6; x++) {
   1F8C DD 36 FE 00        6153 	ld	-2 (ix),#0x00
   1F90 DD 36 FF 00        6154 	ld	-1 (ix),#0x00
   1F94                    6155 00122$:
   1F94 DD 7E FE           6156 	ld	a,-2 (ix)
   1F97 D6 06              6157 	sub	a,#0x06
   1F99 DD 7E FF           6158 	ld	a,-1 (ix)
   1F9C DE 00              6159 	sbc	a,#0x00
   1F9E F2rC8s1F           6160 	jp	P,00125$
                           6161 ;demo.c:992: tripal[x] = tripal[x+3];
   1FA1 3Er94              6162 	ld	a,#<_tripal
   1FA3 DD 86 FE           6163 	add	a,-2 (ix)
   1FA6 4F                 6164 	ld	c,a
   1FA7 3Es41              6165 	ld	a,#>_tripal
   1FA9 DD 8E FF           6166 	adc	a,-1 (ix)
   1FAC 47                 6167 	ld	b,a
   1FAD DD 5E FE           6168 	ld	e,-2 (ix)
   1FB0 1C                 6169 	inc	e
   1FB1 1C                 6170 	inc	e
   1FB2 1C                 6171 	inc	e
   1FB3 3Er94              6172 	ld	a,#<_tripal
   1FB5 83                 6173 	add	a,e
   1FB6 5F                 6174 	ld	e,a
   1FB7 3Es41              6175 	ld	a,#>_tripal
   1FB9 CE 00              6176 	adc	a,#0x00
   1FBB 57                 6177 	ld	d,a
   1FBC 1A                 6178 	ld	a,(de)
   1FBD 02                 6179 	ld	(bc),a
                           6180 ;demo.c:991: for (x = 0; x < 6; x++) {
   1FBE DD 34 FE           6181 	inc	-2 (ix)
   1FC1 20 03              6182 	jr	NZ,00157$
   1FC3 DD 34 FF           6183 	inc	-1 (ix)
   1FC6                    6184 00157$:
   1FC6 18 CC              6185 	jr	00122$
   1FC8                    6186 00125$:
                           6187 ;demo.c:995: tripal[6] = r;
   1FC8 01r9As41           6188 	ld	bc,#_tripal + 6
   1FCB DD 7E FD           6189 	ld	a,-3 (ix)
   1FCE 02                 6190 	ld	(bc),a
                           6191 ;demo.c:996: tripal[7] = g;
   1FCF 01r9Bs41           6192 	ld	bc,#_tripal + 7
   1FD2 DD 7E FC           6193 	ld	a,-4 (ix)
   1FD5 02                 6194 	ld	(bc),a
                           6195 ;demo.c:997: tripal[8] = b;
   1FD6 01r9Cs41           6196 	ld	bc,#_tripal + 8
   1FD9 DD 7E FB           6197 	ld	a,-5 (ix)
   1FDC 02                 6198 	ld	(bc),a
                           6199 ;demo.c:998: tripaltick = 0;
   1FDD 21r9Ds41           6200 	ld	hl,#_tripaltick + 0
   1FE0 36 00              6201 	ld	(hl), #0x00
   1FE2                    6202 00126$:
   1FE2 DD F9              6203 	ld	sp,ix
   1FE4 DD E1              6204 	pop	ix
   1FE6 C9                 6205 	ret
   1FE7                    6206 _tritiles_end::
                           6207 ;demo.c:1007: void do_quit() {
                           6208 ;	---------------------------------
                           6209 ; Function do_quit
                           6210 ; ---------------------------------
   1FE7                    6211 _do_quit_start::
   1FE7                    6212 _do_quit:
                           6213 ;demo.c:1008: waitVB();
   1FE7 76                 6214 		halt 
                           6215 ;demo.c:1009: uninstall_isr();
   1FE8 CDr00s00           6216 	call	_uninstall_isr
                           6217 ;demo.c:1010: PLY_Stop();
   1FEB CDr00s00           6218 	call	_PLY_Stop
                           6219 ;demo.c:1011: PLY_SendRegisters();
   1FEE CDr00s00           6220 	call	_PLY_SendRegisters
                           6221 ;demo.c:1013: screen(0);
   1FF1 3E 00              6222 	ld	a,#0x00
   1FF3 F5                 6223 	push	af
   1FF4 33                 6224 	inc	sp
   1FF5 CDr00s00           6225 	call	_screen
   1FF8 33                 6226 	inc	sp
                           6227 ;demo.c:1015: puts("demo quit\r\n\r\n");
   1FF9 21r0As20           6228 	ld	hl,#__str_13
   1FFC E5                 6229 	push	hl
   1FFD CDr00s00           6230 	call	_puts
   2000 F1                 6231 	pop	af
                           6232 ;demo.c:1017: exit(0);	
   2001 3E 00              6233 	ld	a,#0x00
   2003 F5                 6234 	push	af
   2004 33                 6235 	inc	sp
   2005 CDr00s00           6236 	call	_exit
   2008 33                 6237 	inc	sp
   2009 C9                 6238 	ret
   200A                    6239 _do_quit_end::
   200A                    6240 __str_13:
   200A 64 65 6D 6F 20 71  6241 	.ascii "demo quit"
        75 69 74
   2013 0D                 6242 	.db 0x0D
   2014 0A                 6243 	.db 0x0A
   2015 0D                 6244 	.db 0x0D
   2016 0A                 6245 	.db 0x0A
   2017 00                 6246 	.db 0x00
                           6247 ;demo.c:1041: void main() {
                           6248 ;	---------------------------------
                           6249 ; Function main
                           6250 ; ---------------------------------
   2018                    6251 _main_start::
   2018                    6252 _main:
   2018 DD E5              6253 	push	ix
   201A DD 21 00 00        6254 	ld	ix,#0
   201E DD 39              6255 	add	ix,sp
   2020 21 F9 FF           6256 	ld	hl,#-7
   2023 39                 6257 	add	hl,sp
   2024 F9                 6258 	ld	sp,hl
                           6259 ;demo.c:1042: unsigned char quit=0;
   2025 DD 36 FF 00        6260 	ld	-1 (ix),#0x00
                           6261 ;demo.c:1048: spindown();
   2029 CDr00s00           6262 	call	_spindown
                           6263 ;demo.c:1050: puts("demo init\r\n\r\n");
   202C 21rD2s23           6264 	ld	hl,#__str_14
   202F E5                 6265 	push	hl
   2030 CDr00s00           6266 	call	_puts
   2033 F1                 6267 	pop	af
                           6268 ;demo.c:1052: for (y = 0; y < 2; y++) {
   2034 DD 36 FB 00        6269 	ld	-5 (ix),#0x00
   2038 DD 36 FC 00        6270 	ld	-4 (ix),#0x00
   203C                    6271 00118$:
   203C DD 7E FB           6272 	ld	a,-5 (ix)
   203F D6 02              6273 	sub	a,#0x02
   2041 DD 7E FC           6274 	ld	a,-4 (ix)
   2044 DE 00              6275 	sbc	a,#0x00
   2046 F2rC8s20           6276 	jp	P,00121$
                           6277 ;demo.c:1053: for (x = 0; x < 16; x++) {
   2049 DD 4E FB           6278 	ld	c,-5 (ix)
   204C DD 46 FC           6279 	ld	b,-4 (ix)
   204F CB 21              6280 	sla	c
   2051 CB 10              6281 	rl	b
   2053 CB 21              6282 	sla	c
   2055 CB 10              6283 	rl	b
   2057 CB 21              6284 	sla	c
   2059 CB 10              6285 	rl	b
   205B CB 21              6286 	sla	c
   205D CB 10              6287 	rl	b
   205F 21 81 03           6288 	ld	hl,#0x0381
   2062 09                 6289 	add	hl,bc
   2063 DD 75 F9           6290 	ld	-7 (ix),l
   2066 DD 74 FA           6291 	ld	-6 (ix),h
   2069 DD 36 FD 00        6292 	ld	-3 (ix),#0x00
   206D DD 36 FE 00        6293 	ld	-2 (ix),#0x00
   2071                    6294 00114$:
   2071 DD 7E FD           6295 	ld	a,-3 (ix)
   2074 D6 10              6296 	sub	a,#0x10
   2076 DD 7E FE           6297 	ld	a,-2 (ix)
   2079 DE 00              6298 	sbc	a,#0x00
   207B F2rBDs20           6299 	jp	P,00120$
                           6300 ;demo.c:1054: tri_lookup_x[(y*16)+x] = x * 16;
   207E DD 7E FB           6301 	ld	a,-5 (ix)
   2081 07                 6302 	rlca
   2082 07                 6303 	rlca
   2083 07                 6304 	rlca
   2084 07                 6305 	rlca
   2085 E6 F0              6306 	and	a,#0xF0
   2087 5F                 6307 	ld	e,a
   2088 DD 56 FD           6308 	ld	d,-3 (ix)
   208B 7B                 6309 	ld	a,e
   208C 82                 6310 	add	a,d
   208D 5F                 6311 	ld	e, a
   208E C6r00              6312 	add	a,#<_tri_lookup_x
   2090 4F                 6313 	ld	c,a
   2091 3Es01              6314 	ld	a,#>_tri_lookup_x
   2093 CE 00              6315 	adc	a,#0x00
   2095 47                 6316 	ld	b,a
   2096 7A                 6317 	ld	a,d
   2097 07                 6318 	rlca
   2098 07                 6319 	rlca
   2099 07                 6320 	rlca
   209A 07                 6321 	rlca
   209B E6 F0              6322 	and	a,#0xF0
   209D 02                 6323 	ld	(bc),a
                           6324 ;demo.c:1055: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   209E CB 23              6325 	sla	e
   20A0 3Er20              6326 	ld	a,#<_tri_lookup_y
   20A2 83                 6327 	add	a,e
   20A3 6F                 6328 	ld	l,a
   20A4 3Es01              6329 	ld	a,#>_tri_lookup_y
   20A6 CE 00              6330 	adc	a,#0x00
   20A8 67                 6331 	ld	h,a
   20A9 DD 7E F9           6332 	ld	a,-7 (ix)
   20AC 77                 6333 	ld	(hl),a
   20AD 23                 6334 	inc	hl
   20AE DD 7E FA           6335 	ld	a,-6 (ix)
   20B1 77                 6336 	ld	(hl),a
                           6337 ;demo.c:1053: for (x = 0; x < 16; x++) {
   20B2 DD 34 FD           6338 	inc	-3 (ix)
   20B5 20 03              6339 	jr	NZ,00139$
   20B7 DD 34 FE           6340 	inc	-2 (ix)
   20BA                    6341 00139$:
   20BA C3r71s20           6342 	jp	00114$
   20BD                    6343 00120$:
                           6344 ;demo.c:1052: for (y = 0; y < 2; y++) {
   20BD DD 34 FB           6345 	inc	-5 (ix)
   20C0 20 03              6346 	jr	NZ,00140$
   20C2 DD 34 FC           6347 	inc	-4 (ix)
   20C5                    6348 00140$:
   20C5 C3r3Cs20           6349 	jp	00118$
   20C8                    6350 00121$:
                           6351 ;demo.c:1059: puts("music init...");
   20C8 21rE0s23           6352 	ld	hl,#__str_15
   20CB E5                 6353 	push	hl
   20CC CDr00s00           6354 	call	_puts
   20CF F1                 6355 	pop	af
                           6356 ;demo.c:1061: PLY_SongPtr = (char *)0x0103;
   20D0 21r00s00           6357 	ld	hl,#_PLY_SongPtr + 0
   20D3 36 03              6358 	ld	(hl), #0x03
   20D5 21r01s00           6359 	ld	hl,#_PLY_SongPtr + 1
   20D8 36 01              6360 	ld	(hl), #0x01
                           6361 ;demo.c:1062: PLY_Init();
   20DA CDr00s00           6362 	call	_PLY_Init
                           6363 ;demo.c:1063: puts("done.\r\n");
   20DD 21rEEs23           6364 	ld	hl,#__str_16
   20E0 E5                 6365 	push	hl
   20E1 CDr00s00           6366 	call	_puts
   20E4 F1                 6367 	pop	af
                           6368 ;demo.c:1065: puts("detecting vdp type...\r\n\r\n");
   20E5 21rF6s23           6369 	ld	hl,#__str_17
   20E8 E5                 6370 	push	hl
   20E9 CDr00s00           6371 	call	_puts
   20EC F1                 6372 	pop	af
                           6373 ;demo.c:1066: if(isvdp2())
   20ED CDr00s00           6374 	call	_isvdp2
   20F0 AF                 6375 	xor	a,a
   20F1 B5                 6376 	or	a,l
   20F2 28 0A              6377 	jr	Z,00102$
                           6378 ;demo.c:1068: puts("vdp2 found! setting 50hz...\r\n\r\n");
   20F4 21r10s24           6379 	ld	hl,#__str_18
   20F7 E5                 6380 	push	hl
   20F8 CDr00s00           6381 	call	_puts
   20FB F1                 6382 	pop	af
   20FC 18 0B              6383 	jr	00103$
   20FE                    6384 00102$:
                           6385 ;demo.c:1071: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   20FE 21r30s24           6386 	ld	hl,#__str_19
   2101 E5                 6387 	push	hl
   2102 CDr00s00           6388 	call	_puts
   2105 F1                 6389 	pop	af
                           6390 ;demo.c:1072: do_quit();
   2106 CDrE7s1F           6391 	call	_do_quit
   2109                    6392 00103$:
                           6393 ;demo.c:1075: pal_load("TWISTER PL5",32,1);
   2109 21 01 00           6394 	ld	hl,#0x0001
   210C E5                 6395 	push	hl
   210D 3E 20              6396 	ld	a,#0x20
   210F F5                 6397 	push	af
   2110 33                 6398 	inc	sp
   2111 21r77s24           6399 	ld	hl,#__str_20
   2114 E5                 6400 	push	hl
   2115 CDrA3s07           6401 	call	_pal_load
   2118 F1                 6402 	pop	af
   2119 F1                 6403 	pop	af
   211A 33                 6404 	inc	sp
                           6405 ;demo.c:1076: memcpy(twister_palette, cur_palette, 32);
   211B 21 20 00           6406 	ld	hl,#0x0020
   211E E5                 6407 	push	hl
   211F 21r60s40           6408 	ld	hl,#_cur_palette
   2122 E5                 6409 	push	hl
   2123 21rA0s40           6410 	ld	hl,#_twister_palette
   2126 E5                 6411 	push	hl
   2127 CDr00s00           6412 	call	_memcpy
   212A F1                 6413 	pop	af
   212B F1                 6414 	pop	af
   212C F1                 6415 	pop	af
                           6416 ;demo.c:1077: pal_load("LF      PL5",32,1);
   212D 21 01 00           6417 	ld	hl,#0x0001
   2130 E5                 6418 	push	hl
   2131 3E 20              6419 	ld	a,#0x20
   2133 F5                 6420 	push	af
   2134 33                 6421 	inc	sp
   2135 21r83s24           6422 	ld	hl,#__str_21
   2138 E5                 6423 	push	hl
   2139 CDrA3s07           6424 	call	_pal_load
   213C F1                 6425 	pop	af
   213D F1                 6426 	pop	af
   213E 33                 6427 	inc	sp
                           6428 ;demo.c:1078: memcpy(tf_palette, cur_palette, 32);
   213F 21 20 00           6429 	ld	hl,#0x0020
   2142 E5                 6430 	push	hl
   2143 21r60s40           6431 	ld	hl,#_cur_palette
   2146 E5                 6432 	push	hl
   2147 21rC0s40           6433 	ld	hl,#_tf_palette
   214A E5                 6434 	push	hl
   214B CDr00s00           6435 	call	_memcpy
   214E F1                 6436 	pop	af
   214F F1                 6437 	pop	af
   2150 F1                 6438 	pop	af
                           6439 ;demo.c:1079: pal_load("BOXES   PL5",32,1);
   2151 21 01 00           6440 	ld	hl,#0x0001
   2154 E5                 6441 	push	hl
   2155 3E 20              6442 	ld	a,#0x20
   2157 F5                 6443 	push	af
   2158 33                 6444 	inc	sp
   2159 21r8Fs24           6445 	ld	hl,#__str_22
   215C E5                 6446 	push	hl
   215D CDrA3s07           6447 	call	_pal_load
   2160 F1                 6448 	pop	af
   2161 F1                 6449 	pop	af
   2162 33                 6450 	inc	sp
                           6451 ;demo.c:1080: memcpy(boxes_palette, cur_palette, 32);
   2163 21 20 00           6452 	ld	hl,#0x0020
   2166 E5                 6453 	push	hl
   2167 21r60s40           6454 	ld	hl,#_cur_palette
   216A E5                 6455 	push	hl
   216B 21rE0s40           6456 	ld	hl,#_boxes_palette
   216E E5                 6457 	push	hl
   216F CDr00s00           6458 	call	_memcpy
   2172 F1                 6459 	pop	af
   2173 F1                 6460 	pop	af
   2174 F1                 6461 	pop	af
                           6462 ;demo.c:1081: pal_load("BULBS   PL5",32,1);
   2175 21 01 00           6463 	ld	hl,#0x0001
   2178 E5                 6464 	push	hl
   2179 3E 20              6465 	ld	a,#0x20
   217B F5                 6466 	push	af
   217C 33                 6467 	inc	sp
   217D 21r9Bs24           6468 	ld	hl,#__str_23
   2180 E5                 6469 	push	hl
   2181 CDrA3s07           6470 	call	_pal_load
   2184 F1                 6471 	pop	af
   2185 F1                 6472 	pop	af
   2186 33                 6473 	inc	sp
                           6474 ;demo.c:1083: scratch_clear();
   2187 CDr90s07           6475 	call	_scratch_clear
                           6476 ;demo.c:1084: vdp_load_palette(scratch);
   218A 21rE0s3F           6477 	ld	hl,#_scratch
   218D E5                 6478 	push	hl
   218E CDr00s00           6479 	call	_vdp_load_palette
   2191 F1                 6480 	pop	af
                           6481 ;demo.c:1086: vdp_set_screen5();
   2192 CDr00s00           6482 	call	_vdp_set_screen5
                           6483 ;demo.c:1088: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   2195 21 00 00           6484 	ld	hl,#0x0000
   2198 E5                 6485 	push	hl
   2199 2E 01              6486 	ld	l, #0x01
   219B E5                 6487 	push	hl
   219C 2E 00              6488 	ld	l, #0x00
   219E E5                 6489 	push	hl
   219F 21 7F 09           6490 	ld	hl,#0x097F
   21A2 E5                 6491 	push	hl
   21A3 21rA7s24           6492 	ld	hl,#__str_24
   21A6 E5                 6493 	push	hl
   21A7 CDr99s09           6494 	call	_pck_load
   21AA FD 21 0A 00        6495 	ld	iy,#0x000A
   21AE FD 39              6496 	add	iy,sp
   21B0 FD F9              6497 	ld	sp,iy
                           6498 ;demo.c:1090: cmd.size_x = 256;
   21B2 21r0Cs41           6499 	ld	hl, #_cmd + 8
   21B5 36 00              6500 	ld	(hl),#0x00
   21B7 23                 6501 	inc	hl
   21B8 36 01              6502 	ld	(hl),#0x01
                           6503 ;demo.c:1091: cmd.size_y = 212;
   21BA 21r0Es41           6504 	ld	hl, #_cmd + 10
   21BD 36 D4              6505 	ld	(hl),#0xD4
   21BF 23                 6506 	inc	hl
   21C0 36 00              6507 	ld	(hl),#0x00
                           6508 ;demo.c:1092: cmd.data = 0;
                           6509 ;demo.c:1093: cmd.argument = 0x00;
   21C2 3E 00              6510 	ld	a,#0x00
   21C4 32r10s41           6511 	ld	(#_cmd + 12),a
   21C7 32r11s41           6512 	ld	(#_cmd + 13),a
                           6513 ;demo.c:1094: cmd.command = 0xd0; 
   21CA 01r12s41           6514 	ld	bc,#_cmd + 14
   21CD 3E D0              6515 	ld	a,#0xD0
   21CF 02                 6516 	ld	(bc),a
                           6517 ;demo.c:1095: cmd.source_x = 0;
   21D0 21r04s41           6518 	ld	hl,#_cmd
   21D3 36 00              6519 	ld	(hl),#0x00
   21D5 23                 6520 	inc	hl
   21D6 36 00              6521 	ld	(hl),#0x00
                           6522 ;demo.c:1096: cmd.source_y = 0;
   21D8 21r06s41           6523 	ld	hl, #_cmd + 2
   21DB 36 00              6524 	ld	(hl),#0x00
   21DD 23                 6525 	inc	hl
   21DE 36 00              6526 	ld	(hl),#0x00
                           6527 ;demo.c:1097: cmd.dest_x = 0;
   21E0 21r08s41           6528 	ld	hl, #_cmd + 4
   21E3 36 00              6529 	ld	(hl),#0x00
   21E5 23                 6530 	inc	hl
   21E6 36 00              6531 	ld	(hl),#0x00
                           6532 ;demo.c:1098: cmd.dest_y = 256;
   21E8 21r0As41           6533 	ld	hl, #_cmd + 6
   21EB 36 00              6534 	ld	(hl),#0x00
   21ED 23                 6535 	inc	hl
   21EE 36 01              6536 	ld	(hl),#0x01
                           6537 ;demo.c:1099: vdp_copier(&cmd);
   21F0 21r04s41           6538 	ld	hl,#_cmd
   21F3 E5                 6539 	push	hl
   21F4 CDr00s00           6540 	call	_vdp_copier
   21F7 F1                 6541 	pop	af
                           6542 ;demo.c:1101: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   21F8 21 00 00           6543 	ld	hl,#0x0000
   21FB E5                 6544 	push	hl
   21FC 2E 01              6545 	ld	l, #0x01
   21FE E5                 6546 	push	hl
   21FF 2E 00              6547 	ld	l, #0x00
   2201 E5                 6548 	push	hl
   2202 21 C0 0F           6549 	ld	hl,#0x0FC0
   2205 E5                 6550 	push	hl
   2206 21rB3s24           6551 	ld	hl,#__str_25
   2209 E5                 6552 	push	hl
   220A CDr99s09           6553 	call	_pck_load
   220D FD 21 0A 00        6554 	ld	iy,#0x000A
   2211 FD 39              6555 	add	iy,sp
   2213 FD F9              6556 	ld	sp,iy
                           6557 ;demo.c:1103: cmd.size_x = 256;
   2215 21r0Cs41           6558 	ld	hl, #_cmd + 8
   2218 36 00              6559 	ld	(hl),#0x00
   221A 23                 6560 	inc	hl
   221B 36 01              6561 	ld	(hl),#0x01
                           6562 ;demo.c:1104: cmd.size_y = 212;
   221D 21r0Es41           6563 	ld	hl, #_cmd + 10
   2220 36 D4              6564 	ld	(hl),#0xD4
   2222 23                 6565 	inc	hl
   2223 36 00              6566 	ld	(hl),#0x00
                           6567 ;demo.c:1105: cmd.data = 0;
                           6568 ;demo.c:1106: cmd.argument = 0x00;
   2225 3E 00              6569 	ld	a,#0x00
   2227 32r10s41           6570 	ld	(#_cmd + 12),a
   222A 32r11s41           6571 	ld	(#_cmd + 13),a
                           6572 ;demo.c:1107: cmd.command = 0xd0; 
   222D 01r12s41           6573 	ld	bc,#_cmd + 14
   2230 3E D0              6574 	ld	a,#0xD0
   2232 02                 6575 	ld	(bc),a
                           6576 ;demo.c:1108: cmd.source_x = 0;
   2233 21r04s41           6577 	ld	hl,#_cmd
   2236 36 00              6578 	ld	(hl),#0x00
   2238 23                 6579 	inc	hl
   2239 36 00              6580 	ld	(hl),#0x00
                           6581 ;demo.c:1109: cmd.source_y = 0;
   223B 21r06s41           6582 	ld	hl, #_cmd + 2
   223E 36 00              6583 	ld	(hl),#0x00
   2240 23                 6584 	inc	hl
   2241 36 00              6585 	ld	(hl),#0x00
                           6586 ;demo.c:1110: cmd.dest_x = 0;
   2243 21r08s41           6587 	ld	hl, #_cmd + 4
   2246 36 00              6588 	ld	(hl),#0x00
   2248 23                 6589 	inc	hl
   2249 36 00              6590 	ld	(hl),#0x00
                           6591 ;demo.c:1111: cmd.dest_y = 512;
   224B 21r0As41           6592 	ld	hl, #_cmd + 6
   224E 36 00              6593 	ld	(hl),#0x00
   2250 23                 6594 	inc	hl
   2251 36 02              6595 	ld	(hl),#0x02
                           6596 ;demo.c:1112: vdp_copier(&cmd);
   2253 21r04s41           6597 	ld	hl,#_cmd
   2256 E5                 6598 	push	hl
   2257 CDr00s00           6599 	call	_vdp_copier
   225A F1                 6600 	pop	af
                           6601 ;demo.c:1115: pck_load("BOXES   PCK",1997,0x0000,VRAM_0,0);
   225B 21 00 00           6602 	ld	hl,#0x0000
   225E E5                 6603 	push	hl
   225F 2E 01              6604 	ld	l, #0x01
   2261 E5                 6605 	push	hl
   2262 2E 00              6606 	ld	l, #0x00
   2264 E5                 6607 	push	hl
   2265 21 CD 07           6608 	ld	hl,#0x07CD
   2268 E5                 6609 	push	hl
   2269 21rBFs24           6610 	ld	hl,#__str_26
   226C E5                 6611 	push	hl
   226D CDr99s09           6612 	call	_pck_load
   2270 FD 21 0A 00        6613 	ld	iy,#0x000A
   2274 FD 39              6614 	add	iy,sp
   2276 FD F9              6615 	ld	sp,iy
                           6616 ;demo.c:1116: cmd.size_x = 256;
   2278 21r0Cs41           6617 	ld	hl, #_cmd + 8
   227B 36 00              6618 	ld	(hl),#0x00
   227D 23                 6619 	inc	hl
   227E 36 01              6620 	ld	(hl),#0x01
                           6621 ;demo.c:1117: cmd.size_y = 212;
   2280 21r0Es41           6622 	ld	hl, #_cmd + 10
   2283 36 D4              6623 	ld	(hl),#0xD4
   2285 23                 6624 	inc	hl
   2286 36 00              6625 	ld	(hl),#0x00
                           6626 ;demo.c:1118: cmd.data = 0;
                           6627 ;demo.c:1119: cmd.argument = 0x00;
   2288 3E 00              6628 	ld	a,#0x00
   228A 32r10s41           6629 	ld	(#_cmd + 12),a
   228D 32r11s41           6630 	ld	(#_cmd + 13),a
                           6631 ;demo.c:1120: cmd.command = 0xd0; 
   2290 01r12s41           6632 	ld	bc,#_cmd + 14
   2293 3E D0              6633 	ld	a,#0xD0
   2295 02                 6634 	ld	(bc),a
                           6635 ;demo.c:1121: cmd.source_x = 0;
   2296 21r04s41           6636 	ld	hl,#_cmd
   2299 36 00              6637 	ld	(hl),#0x00
   229B 23                 6638 	inc	hl
   229C 36 00              6639 	ld	(hl),#0x00
                           6640 ;demo.c:1122: cmd.source_y = 0;
   229E 21r06s41           6641 	ld	hl, #_cmd + 2
   22A1 36 00              6642 	ld	(hl),#0x00
   22A3 23                 6643 	inc	hl
   22A4 36 00              6644 	ld	(hl),#0x00
                           6645 ;demo.c:1123: cmd.dest_x = 0;
   22A6 21r08s41           6646 	ld	hl, #_cmd + 4
   22A9 36 00              6647 	ld	(hl),#0x00
   22AB 23                 6648 	inc	hl
   22AC 36 00              6649 	ld	(hl),#0x00
                           6650 ;demo.c:1124: cmd.dest_y = 768;
   22AE 21r0As41           6651 	ld	hl, #_cmd + 6
   22B1 36 00              6652 	ld	(hl),#0x00
   22B3 23                 6653 	inc	hl
   22B4 36 03              6654 	ld	(hl),#0x03
                           6655 ;demo.c:1125: vdp_copier(&cmd);
   22B6 21r04s41           6656 	ld	hl,#_cmd
   22B9 E5                 6657 	push	hl
   22BA CDr00s00           6658 	call	_vdp_copier
   22BD F1                 6659 	pop	af
                           6660 ;demo.c:1127: scratch_clear();
   22BE CDr90s07           6661 	call	_scratch_clear
                           6662 ;demo.c:1128: vdp_load_palette(scratch);
   22C1 21rE0s3F           6663 	ld	hl,#_scratch
   22C4 E5                 6664 	push	hl
   22C5 CDr00s00           6665 	call	_vdp_load_palette
   22C8 F1                 6666 	pop	af
                           6667 ;demo.c:1130: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   22C9 21 00 00           6668 	ld	hl,#0x0000
   22CC E5                 6669 	push	hl
   22CD 2E 01              6670 	ld	l, #0x01
   22CF E5                 6671 	push	hl
   22D0 2E 00              6672 	ld	l, #0x00
   22D2 E5                 6673 	push	hl
   22D3 21 6A 08           6674 	ld	hl,#0x086A
   22D6 E5                 6675 	push	hl
   22D7 21rCBs24           6676 	ld	hl,#__str_27
   22DA E5                 6677 	push	hl
   22DB CDr99s09           6678 	call	_pck_load
   22DE FD 21 0A 00        6679 	ld	iy,#0x000A
   22E2 FD 39              6680 	add	iy,sp
   22E4 FD F9              6681 	ld	sp,iy
                           6682 ;demo.c:1131: pal_load("DSSLOGO PL5",32,0);
   22E6 21 00 00           6683 	ld	hl,#0x0000
   22E9 E5                 6684 	push	hl
   22EA 3E 20              6685 	ld	a,#0x20
   22EC F5                 6686 	push	af
   22ED 33                 6687 	inc	sp
   22EE 21rD7s24           6688 	ld	hl,#__str_28
   22F1 E5                 6689 	push	hl
   22F2 CDrA3s07           6690 	call	_pal_load
   22F5 F1                 6691 	pop	af
   22F6 F1                 6692 	pop	af
   22F7 33                 6693 	inc	sp
                           6694 ;demo.c:1133: scratch_clear();
   22F8 CDr90s07           6695 	call	_scratch_clear
                           6696 ;demo.c:1135: vdp_register(9,130); // 50hz,212
   22FB 21 09 82           6697 	ld	hl,#0x8209
   22FE E5                 6698 	push	hl
   22FF CDr00s00           6699 	call	_vdp_register
   2302 F1                 6700 	pop	af
                           6701 ;demo.c:1137: install_isr(my_isr);
   2303 21rECs05           6702 	ld	hl,#_my_isr
   2306 E5                 6703 	push	hl
   2307 CDr00s00           6704 	call	_install_isr
   230A F1                 6705 	pop	af
                           6706 ;demo.c:1139: while (!quit) {
   230B                    6707 00111$:
   230B AF                 6708 	xor	a,a
   230C DD B6 FF           6709 	or	a,-1 (ix)
   230F C2rCAs23           6710 	jp	NZ,00113$
                           6711 ;demo.c:1141: if (vbicount >= scenetimings[timeindex+1]) {
   2312 21rA2s41           6712 	ld	hl,#_timeindex + 0
   2315 4E                 6713 	ld	c,(hl)
   2316 0C                 6714 	inc	c
   2317 CB 21              6715 	sla	c
   2319 3ErB0              6716 	ld	a,#<_scenetimings
   231B 81                 6717 	add	a,c
   231C 6F                 6718 	ld	l,a
   231D 3Es41              6719 	ld	a,#>_scenetimings
   231F CE 00              6720 	adc	a,#0x00
   2321 67                 6721 	ld	h,a
   2322 4E                 6722 	ld	c,(hl)
   2323 23                 6723 	inc	hl
   2324 46                 6724 	ld	b,(hl)
   2325 3Ar00s41           6725 	ld	a,(#_vbicount+0)
   2328 91                 6726 	sub	a,c
   2329 3Ar01s41           6727 	ld	a,(#_vbicount+1)
   232C 98                 6728 	sbc	a,b
   232D FAr56s23           6729 	jp	M,00105$
                           6730 ;demo.c:1142: sceneindex++;
   2330 FD 21rA0s41        6731 	ld	iy,#_sceneindex
   2334 FD 34 00           6732 	inc	0 (iy)
   2337 20 07              6733 	jr	NZ,00141$
   2339 FD 21rA0s41        6734 	ld	iy,#_sceneindex
   233D FD 34 01           6735 	inc	1 (iy)
   2340                    6736 00141$:
                           6737 ;demo.c:1143: timeindex+=2;
   2340 21rA2s41           6738 	ld	hl,#_timeindex
   2343 7E                 6739 	ld	a,(hl)
   2344 C6 02              6740 	add	a,#0x02
   2346 23                 6741 	inc	hl
   2347 2B                 6742 	dec	hl
   2348 C5                 6743 	push	bc
   2349 4F                 6744 	ld	c, a
   234A 23                 6745 	inc	hl
   234B 7E                 6746 	ld	a, (hl)
   234C 47                 6747 	ld	b, a
   234D 79                 6748 	ld	a, c
   234E 2B                 6749 	dec	hl
   234F 77                 6750 	ld	(hl), a
   2350 78                 6751 	ld	a, b
   2351 C1                 6752 	pop	bc
   2352 CE 00              6753 	adc	a,#0x00
   2354 23                 6754 	inc	hl
   2355 77                 6755 	ld	(hl),a
   2356                    6756 00105$:
                           6757 ;demo.c:1146: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   2356 21rA2s41           6758 	ld	hl,#_timeindex + 0
   2359 4E                 6759 	ld	c,(hl)
   235A 21rA3s41           6760 	ld	hl,#_timeindex + 1
   235D 46                 6761 	ld	b,(hl)
   235E CB 21              6762 	sla	c
   2360 CB 10              6763 	rl	b
   2362 21rB0s41           6764 	ld	hl,#_scenetimings
   2365 09                 6765 	add	hl,bc
   2366 4E                 6766 	ld	c,(hl)
   2367 23                 6767 	inc	hl
   2368 46                 6768 	ld	b,(hl)
   2369 3Ar00s41           6769 	ld	a,(#_vbicount+0)
   236C 91                 6770 	sub	a,c
   236D 3Ar01s41           6771 	ld	a,(#_vbicount+1)
   2370 98                 6772 	sbc	a,b
   2371 FArB6s23           6773 	jp	M,00107$
   2374 21rA2s41           6774 	ld	hl,#_timeindex + 0
   2377 4E                 6775 	ld	c,(hl)
   2378 0C                 6776 	inc	c
   2379 CB 21              6777 	sla	c
   237B 3ErB0              6778 	ld	a,#<_scenetimings
   237D 81                 6779 	add	a,c
   237E 6F                 6780 	ld	l,a
   237F 3Es41              6781 	ld	a,#>_scenetimings
   2381 CE 00              6782 	adc	a,#0x00
   2383 67                 6783 	ld	h,a
   2384 4E                 6784 	ld	c,(hl)
   2385 23                 6785 	inc	hl
   2386 46                 6786 	ld	b,(hl)
   2387 3Ar00s41           6787 	ld	a,(#_vbicount+0)
   238A 91                 6788 	sub	a,c
   238B FD 21r00s41        6789 	ld	iy,#_vbicount
   238F FD 7E 01           6790 	ld	a,1 (iy)
   2392 98                 6791 	sbc	a,b
   2393 F2rB6s23           6792 	jp	P,00107$
                           6793 ;demo.c:1147: waitVB();
   2396 76                 6794 		halt 
                           6795 ;demo.c:1148: scenepointers[sceneindex]();
   2397 21rA0s41           6796 	ld	hl,#_sceneindex + 0
   239A 4E                 6797 	ld	c,(hl)
   239B FD 21rA0s41        6798 	ld	iy,#_sceneindex
   239F FD 46 01           6799 	ld	b,1 (iy)
   23A2 CB 21              6800 	sla	c
   23A4 CB 10              6801 	rl	b
   23A6 21rA4s41           6802 	ld	hl,#_scenepointers
   23A9 09                 6803 	add	hl,bc
   23AA 4E                 6804 	ld	c,(hl)
   23AB 23                 6805 	inc	hl
   23AC 46                 6806 	ld	b,(hl)
   23AD C5                 6807 	push	bc
   23AE 21rB5s23           6808 	ld	hl,#00146$
   23B1 E5                 6809 	push	hl
   23B2 69                 6810 	ld	l,c
   23B3 60                 6811 	ld	h,b
   23B4 E9                 6812 	jp	(hl)
   23B5                    6813 00146$:
   23B5 C1                 6814 	pop	bc
   23B6                    6815 00107$:
                           6816 ;demo.c:1150: if(space())
   23B6 21 08 01           6817 	ld	hl,#0x0108
   23B9 E5                 6818 	push	hl
   23BA CDr00s00           6819 	call	_ispressed
   23BD F1                 6820 	pop	af
   23BE AF                 6821 	xor	a,a
   23BF B5                 6822 	or	a,l
   23C0 CAr0Bs23           6823 	jp	Z,00111$
                           6824 ;demo.c:1151: quit=1;
   23C3 DD 36 FF 01        6825 	ld	-1 (ix),#0x01
   23C7 C3r0Bs23           6826 	jp	00111$
   23CA                    6827 00113$:
                           6828 ;demo.c:1154: do_quit();
   23CA CDrE7s1F           6829 	call	_do_quit
   23CD DD F9              6830 	ld	sp,ix
   23CF DD E1              6831 	pop	ix
   23D1 C9                 6832 	ret
   23D2                    6833 _main_end::
   23D2                    6834 __str_14:
   23D2 64 65 6D 6F 20 69  6835 	.ascii "demo init"
        6E 69 74
   23DB 0D                 6836 	.db 0x0D
   23DC 0A                 6837 	.db 0x0A
   23DD 0D                 6838 	.db 0x0D
   23DE 0A                 6839 	.db 0x0A
   23DF 00                 6840 	.db 0x00
   23E0                    6841 __str_15:
   23E0 6D 75 73 69 63 20  6842 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   23ED 00                 6843 	.db 0x00
   23EE                    6844 __str_16:
   23EE 64 6F 6E 65 2E     6845 	.ascii "done."
   23F3 0D                 6846 	.db 0x0D
   23F4 0A                 6847 	.db 0x0A
   23F5 00                 6848 	.db 0x00
   23F6                    6849 __str_17:
   23F6 64 65 74 65 63 74  6850 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   240B 0D                 6851 	.db 0x0D
   240C 0A                 6852 	.db 0x0A
   240D 0D                 6853 	.db 0x0D
   240E 0A                 6854 	.db 0x0A
   240F 00                 6855 	.db 0x00
   2410                    6856 __str_18:
   2410 76 64 70 32 20 66  6857 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   242B 0D                 6858 	.db 0x0D
   242C 0A                 6859 	.db 0x0A
   242D 0D                 6860 	.db 0x0D
   242E 0A                 6861 	.db 0x0A
   242F 00                 6862 	.db 0x00
   2430                    6863 __str_19:
   2430 20 76 64 70 31 20  6864 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   243C 0D                 6865 	.db 0x0D
   243D 0A                 6866 	.db 0x0A
   243E 53 6F 72 72 79 2C  6867 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   246C 20 56 52 41 4D 2E  6868 	.ascii " VRAM."
   2472 0D                 6869 	.db 0x0D
   2473 0A                 6870 	.db 0x0A
   2474 0D                 6871 	.db 0x0D
   2475 0A                 6872 	.db 0x0A
   2476 00                 6873 	.db 0x00
   2477                    6874 __str_20:
   2477 54 57 49 53 54 45  6875 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   2482 00                 6876 	.db 0x00
   2483                    6877 __str_21:
   2483 4C 46 20 20 20 20  6878 	.ascii "LF      PL5"
        20 20 50 4C 35
   248E 00                 6879 	.db 0x00
   248F                    6880 __str_22:
   248F 42 4F 58 45 53 20  6881 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   249A 00                 6882 	.db 0x00
   249B                    6883 __str_23:
   249B 42 55 4C 42 53 20  6884 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   24A6 00                 6885 	.db 0x00
   24A7                    6886 __str_24:
   24A7 42 55 4C 42 53 20  6887 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   24B2 00                 6888 	.db 0x00
   24B3                    6889 __str_25:
   24B3 54 57 49 53 54 45  6890 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   24BE 00                 6891 	.db 0x00
   24BF                    6892 __str_26:
   24BF 42 4F 58 45 53 20  6893 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   24CA 00                 6894 	.db 0x00
   24CB                    6895 __str_27:
   24CB 44 53 53 4C 4F 47  6896 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   24D6 00                 6897 	.db 0x00
   24D7                    6898 __str_28:
   24D7 44 53 53 4C 4F 47  6899 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   24E2 00                 6900 	.db 0x00
                           6901 	.area _CODE
                           6902 	.area _CABS
