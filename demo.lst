                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Mon Feb 26 23:38:20 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _tritiles
                             15 	.globl _drawtilescreen
                             16 	.globl _drawtritile
                             17 	.globl _boxes
                             18 	.globl _drawbox
                             19 	.globl _animplay
                             20 	.globl _bulbs
                             21 	.globl _twister
                             22 	.globl _font
                             23 	.globl _drawsine
                             24 	.globl _drawstr
                             25 	.globl _do_letter_tall
                             26 	.globl _do_letter
                             27 	.globl _raster_effu
                             28 	.globl _do_blocks
                             29 	.globl _do_ymmm
                             30 	.globl _fadein
                             31 	.globl _pck_load
                             32 	.globl _raw_load
                             33 	.globl _pause
                             34 	.globl _pal_load
                             35 	.globl _scratch_clear
                             36 	.globl _ge5_load
                             37 	.globl _color_isr
                             38 	.globl _my_isr
                             39 	.globl _isNthBitSet
                             40 	.globl _triframes
                             41 	.globl _tripaltick
                             42 	.globl _tripal
                             43 	.globl _tri_inited
                             44 	.globl _pbt
                             45 	.globl _pbx
                             46 	.globl _bonc
                             47 	.globl _bo
                             48 	.globl _byy
                             49 	.globl _bxx
                             50 	.globl _bt
                             51 	.globl _by
                             52 	.globl _bx
                             53 	.globl _prevby
                             54 	.globl _prevbx
                             55 	.globl _prevy
                             56 	.globl _prevx
                             57 	.globl _dbly
                             58 	.globl _buffer
                             59 	.globl _boxes_init
                             60 	.globl _anim_init
                             61 	.globl _enderdir
                             62 	.globl _ender
                             63 	.globl _ff2
                             64 	.globl _ff1
                             65 	.globl _bulbflipper
                             66 	.globl _twinited
                             67 	.globl _ff
                             68 	.globl _ly
                             69 	.globl _lx
                             70 	.globl _linenum
                             71 	.globl _flof
                             72 	.globl _btab
                             73 	.globl _bty
                             74 	.globl _btx
                             75 	.globl _bsy
                             76 	.globl _bsx
                             77 	.globl _block_init
                             78 	.globl _cc
                             79 	.globl _yofff
                             80 	.globl _cmd
                             81 	.globl _tick
                             82 	.globl _vbicount
                             83 	.globl _boxes_palette
                             84 	.globl _tf_palette
                             85 	.globl _twister_palette
                             86 	.globl _block_palette
                             87 	.globl _cur_palette
                             88 	.globl _scratch
                             89 	.globl _tf2
                             90 	.globl _tf1
                             91 	.globl _packbuffer
                             92 	.globl _tri_lookup_y
                             93 	.globl _tri_lookup_x
                             94 	.globl _sintab
                             95 	.globl _font_w
                             96 	.globl _font_y
                             97 	.globl _font_x
                             98 	.globl _tri_up
                             99 	.globl _tri_center
                            100 	.globl _sintabx
                            101 ;--------------------------------------------------------
                            102 ; special function registers
                            103 ;--------------------------------------------------------
                            104 ;--------------------------------------------------------
                            105 ;  ram data
                            106 ;--------------------------------------------------------
                            107 	.area _DATA
   0000                     108 _sintab::
   0000                     109 	.ds 256
   0100                     110 _tri_lookup_x::
   0100                     111 	.ds 32
   0120                     112 _tri_lookup_y::
   0120                     113 	.ds 64
   0160                     114 _packbuffer::
   0160                     115 	.ds 12000
   3040                     116 _tf1::
   3040                     117 	.ds 12000
   5F20                     118 _tf2::
   5F20                     119 	.ds 12000
   8E00                     120 _scratch::
   8E00                     121 	.ds 128
   8E80                     122 _cur_palette::
   8E80                     123 	.ds 32
   8EA0                     124 _block_palette::
   8EA0                     125 	.ds 32
   8EC0                     126 _twister_palette::
   8EC0                     127 	.ds 32
   8EE0                     128 _tf_palette::
   8EE0                     129 	.ds 32
   8F00                     130 _boxes_palette::
   8F00                     131 	.ds 32
   8F20                     132 _vbicount::
   8F20                     133 	.ds 2
   8F22                     134 _tick::
   8F22                     135 	.ds 2
   8F24                     136 _cmd::
   8F24                     137 	.ds 15
   8F33                     138 _isNthBitSet_mask_1_1:
   8F33                     139 	.ds 8
   8F3B                     140 _yofff::
   8F3B                     141 	.ds 1
   8F3C                     142 _cc::
   8F3C                     143 	.ds 1
   8F3D                     144 _flipper:
   8F3D                     145 	.ds 2
   8F3F                     146 _ymmmf:
   8F3F                     147 	.ds 2
   8F41                     148 _block_init::
   8F41                     149 	.ds 1
   8F42                     150 _bsx::
   8F42                     151 	.ds 2
   8F44                     152 _bsy::
   8F44                     153 	.ds 2
   8F46                     154 _btx::
   8F46                     155 	.ds 2
   8F48                     156 _bty::
   8F48                     157 	.ds 2
   8F4A                     158 _btab::
   8F4A                     159 	.ds 32
   8F6A                     160 _flof::
   8F6A                     161 	.ds 2
   8F6C                     162 _linenum::
   8F6C                     163 	.ds 2
   8F6E                     164 _lx::
   8F6E                     165 	.ds 1
   8F6F                     166 _ly::
   8F6F                     167 	.ds 1
   8F70                     168 _ff::
   8F70                     169 	.ds 2
   8F72                     170 _twinited::
   8F72                     171 	.ds 2
   8F74                     172 _bulbflipper::
   8F74                     173 	.ds 2
   8F76                     174 _ff1::
   8F76                     175 	.ds 2
   8F78                     176 _ff2::
   8F78                     177 	.ds 2
   8F7A                     178 _ender::
   8F7A                     179 	.ds 2
   8F7C                     180 _enderdir::
   8F7C                     181 	.ds 2
   8F7E                     182 _xo:
   8F7E                     183 	.ds 2
   8F80                     184 _yo:
   8F80                     185 	.ds 2
   8F82                     186 _po:
   8F82                     187 	.ds 2
   8F84                     188 _fffaaa:
   8F84                     189 	.ds 2
   8F86                     190 _anim_init::
   8F86                     191 	.ds 2
   8F88                     192 _boxes_init::
   8F88                     193 	.ds 1
   8F89                     194 _buffer::
   8F89                     195 	.ds 2
   8F8B                     196 _dbly::
   8F8B                     197 	.ds 2
   8F8D                     198 _prevx::
   8F8D                     199 	.ds 2
   8F8F                     200 _prevy::
   8F8F                     201 	.ds 2
   8F91                     202 _prevbx::
   8F91                     203 	.ds 2
   8F93                     204 _prevby::
   8F93                     205 	.ds 2
   8F95                     206 _bx::
   8F95                     207 	.ds 2
   8F97                     208 _by::
   8F97                     209 	.ds 2
   8F99                     210 _bt::
   8F99                     211 	.ds 2
   8F9B                     212 _bxx::
   8F9B                     213 	.ds 2
   8F9D                     214 _byy::
   8F9D                     215 	.ds 2
   8F9F                     216 _bo::
   8F9F                     217 	.ds 2
   8FA1                     218 _bonc::
   8FA1                     219 	.ds 2
   8FA3                     220 _pbx::
   8FA3                     221 	.ds 2
   8FA5                     222 _pbt::
   8FA5                     223 	.ds 2
   8FA7                     224 _tri_inited::
   8FA7                     225 	.ds 1
   8FA8                     226 _tripal::
   8FA8                     227 	.ds 9
   8FB1                     228 _tripaltick::
   8FB1                     229 	.ds 1
   8FB2                     230 _triframes::
   8FB2                     231 	.ds 2
                            232 ;--------------------------------------------------------
                            233 ; overlayable items in  ram 
                            234 ;--------------------------------------------------------
                            235 	.area _OVERLAY
                            236 ;--------------------------------------------------------
                            237 ; external initialized ram data
                            238 ;--------------------------------------------------------
                            239 ;--------------------------------------------------------
                            240 ; global & static initialisations
                            241 ;--------------------------------------------------------
                            242 	.area _HOME
                            243 	.area _GSINIT
                            244 	.area _GSFINAL
                            245 	.area _GSINIT
                            246 ;demo.c:87: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r33s8F            247 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            248 	call	__initrleblock
   0006 08                  249 	.db	8
   0007 01 02 04 08 10 20   250 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  251 	.db	0
                            252 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            253 	ld	hl,#_sintab
   0013 CDr00s00            254 	call	__initrleblock
   0016 3B                  255 	.db	59
   0017 00 03 06 09 0C 0F   256 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   257 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   258 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   259 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   260 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   261 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   262 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            263 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               264 	.db	#-5,#0x7E
   0054 01                  265 	.db	1
   0055 7F                  266 	.db	0x7F
   0056 FB 7E               267 	.db	#-5,#0x7E
   0058 75                  268 	.db	117
   0059 7D 7D 7C 7B 7B 7A   269 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   270 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   271 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   272 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   273 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   274 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   275 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   276 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   277 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   278 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   279 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   280 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   281 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   282 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      283 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               284 	.db	#-5,#0x82
   00D0 01                  285 	.db	1
   00D1 81                  286 	.db	0x81
   00D2 FB 82               287 	.db	#-5,#0x82
   00D4 3A                  288 	.db	58
   00D5 83 83 84 85 85 86   289 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   290 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   291 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   292 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   293 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   294 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   295 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               296 	.db	0xFA, 0xFD
   010F 00                  297 	.db	0
                            298 ;demo.c:66: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            299 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            300 	call	__initrleblock
   0116 E0 00               301 	.db	#-32,#0x00
   0118 00                  302 	.db	0
                            303 ;demo.c:67: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            304 	ld	hl,#_tri_lookup_y
   011C CDr00s00            305 	call	__initrleblock
   011F C0 00               306 	.db	#-64,#0x00
   0121 00                  307 	.db	0
                            308 ;demo.c:69: uint8_t packbuffer[12000] = {0};
   0122 21r60s01            309 	ld	hl,#_packbuffer
   0125 CDr00s00            310 	call	__initrleblock
   0128 81 00               311 	.db	#-127,#0x00
   012A 81 00               312 	.db	#-127,#0x00
   012C 81 00               313 	.db	#-127,#0x00
   012E 81 00               314 	.db	#-127,#0x00
   0130 81 00               315 	.db	#-127,#0x00
   0132 81 00               316 	.db	#-127,#0x00
   0134 81 00               317 	.db	#-127,#0x00
   0136 81 00               318 	.db	#-127,#0x00
   0138 81 00               319 	.db	#-127,#0x00
   013A 81 00               320 	.db	#-127,#0x00
   013C 81 00               321 	.db	#-127,#0x00
   013E 81 00               322 	.db	#-127,#0x00
   0140 81 00               323 	.db	#-127,#0x00
   0142 81 00               324 	.db	#-127,#0x00
   0144 81 00               325 	.db	#-127,#0x00
   0146 81 00               326 	.db	#-127,#0x00
   0148 81 00               327 	.db	#-127,#0x00
   014A 81 00               328 	.db	#-127,#0x00
   014C 81 00               329 	.db	#-127,#0x00
   014E 81 00               330 	.db	#-127,#0x00
   0150 81 00               331 	.db	#-127,#0x00
   0152 81 00               332 	.db	#-127,#0x00
   0154 81 00               333 	.db	#-127,#0x00
   0156 81 00               334 	.db	#-127,#0x00
   0158 81 00               335 	.db	#-127,#0x00
   015A 81 00               336 	.db	#-127,#0x00
   015C 81 00               337 	.db	#-127,#0x00
   015E 81 00               338 	.db	#-127,#0x00
   0160 81 00               339 	.db	#-127,#0x00
   0162 81 00               340 	.db	#-127,#0x00
   0164 81 00               341 	.db	#-127,#0x00
   0166 81 00               342 	.db	#-127,#0x00
   0168 81 00               343 	.db	#-127,#0x00
   016A 81 00               344 	.db	#-127,#0x00
   016C 81 00               345 	.db	#-127,#0x00
   016E 81 00               346 	.db	#-127,#0x00
   0170 81 00               347 	.db	#-127,#0x00
   0172 81 00               348 	.db	#-127,#0x00
   0174 81 00               349 	.db	#-127,#0x00
   0176 81 00               350 	.db	#-127,#0x00
   0178 81 00               351 	.db	#-127,#0x00
   017A 81 00               352 	.db	#-127,#0x00
   017C 81 00               353 	.db	#-127,#0x00
   017E 81 00               354 	.db	#-127,#0x00
   0180 81 00               355 	.db	#-127,#0x00
   0182 81 00               356 	.db	#-127,#0x00
   0184 81 00               357 	.db	#-127,#0x00
   0186 81 00               358 	.db	#-127,#0x00
   0188 81 00               359 	.db	#-127,#0x00
   018A 81 00               360 	.db	#-127,#0x00
   018C 81 00               361 	.db	#-127,#0x00
   018E 81 00               362 	.db	#-127,#0x00
   0190 81 00               363 	.db	#-127,#0x00
   0192 81 00               364 	.db	#-127,#0x00
   0194 81 00               365 	.db	#-127,#0x00
   0196 81 00               366 	.db	#-127,#0x00
   0198 81 00               367 	.db	#-127,#0x00
   019A 81 00               368 	.db	#-127,#0x00
   019C 81 00               369 	.db	#-127,#0x00
   019E 81 00               370 	.db	#-127,#0x00
   01A0 81 00               371 	.db	#-127,#0x00
   01A2 81 00               372 	.db	#-127,#0x00
   01A4 81 00               373 	.db	#-127,#0x00
   01A6 81 00               374 	.db	#-127,#0x00
   01A8 81 00               375 	.db	#-127,#0x00
   01AA 81 00               376 	.db	#-127,#0x00
   01AC 81 00               377 	.db	#-127,#0x00
   01AE 81 00               378 	.db	#-127,#0x00
   01B0 81 00               379 	.db	#-127,#0x00
   01B2 81 00               380 	.db	#-127,#0x00
   01B4 81 00               381 	.db	#-127,#0x00
   01B6 81 00               382 	.db	#-127,#0x00
   01B8 81 00               383 	.db	#-127,#0x00
   01BA 81 00               384 	.db	#-127,#0x00
   01BC 81 00               385 	.db	#-127,#0x00
   01BE 81 00               386 	.db	#-127,#0x00
   01C0 81 00               387 	.db	#-127,#0x00
   01C2 81 00               388 	.db	#-127,#0x00
   01C4 81 00               389 	.db	#-127,#0x00
   01C6 81 00               390 	.db	#-127,#0x00
   01C8 81 00               391 	.db	#-127,#0x00
   01CA 81 00               392 	.db	#-127,#0x00
   01CC 81 00               393 	.db	#-127,#0x00
   01CE 81 00               394 	.db	#-127,#0x00
   01D0 81 00               395 	.db	#-127,#0x00
   01D2 81 00               396 	.db	#-127,#0x00
   01D4 81 00               397 	.db	#-127,#0x00
   01D6 81 00               398 	.db	#-127,#0x00
   01D8 81 00               399 	.db	#-127,#0x00
   01DA 81 00               400 	.db	#-127,#0x00
   01DC 81 00               401 	.db	#-127,#0x00
   01DE 81 00               402 	.db	#-127,#0x00
   01E0 81 00               403 	.db	#-127,#0x00
   01E2 81 00               404 	.db	#-127,#0x00
   01E4 C2 00               405 	.db	#-62,#0x00
   01E6 00                  406 	.db	0
                            407 ;demo.c:71: uint8_t tf1[12000] = {0};
   01E7 21r40s30            408 	ld	hl,#_tf1
   01EA CDr00s00            409 	call	__initrleblock
   01ED 81 00               410 	.db	#-127,#0x00
   01EF 81 00               411 	.db	#-127,#0x00
   01F1 81 00               412 	.db	#-127,#0x00
   01F3 81 00               413 	.db	#-127,#0x00
   01F5 81 00               414 	.db	#-127,#0x00
   01F7 81 00               415 	.db	#-127,#0x00
   01F9 81 00               416 	.db	#-127,#0x00
   01FB 81 00               417 	.db	#-127,#0x00
   01FD 81 00               418 	.db	#-127,#0x00
   01FF 81 00               419 	.db	#-127,#0x00
   0201 81 00               420 	.db	#-127,#0x00
   0203 81 00               421 	.db	#-127,#0x00
   0205 81 00               422 	.db	#-127,#0x00
   0207 81 00               423 	.db	#-127,#0x00
   0209 81 00               424 	.db	#-127,#0x00
   020B 81 00               425 	.db	#-127,#0x00
   020D 81 00               426 	.db	#-127,#0x00
   020F 81 00               427 	.db	#-127,#0x00
   0211 81 00               428 	.db	#-127,#0x00
   0213 81 00               429 	.db	#-127,#0x00
   0215 81 00               430 	.db	#-127,#0x00
   0217 81 00               431 	.db	#-127,#0x00
   0219 81 00               432 	.db	#-127,#0x00
   021B 81 00               433 	.db	#-127,#0x00
   021D 81 00               434 	.db	#-127,#0x00
   021F 81 00               435 	.db	#-127,#0x00
   0221 81 00               436 	.db	#-127,#0x00
   0223 81 00               437 	.db	#-127,#0x00
   0225 81 00               438 	.db	#-127,#0x00
   0227 81 00               439 	.db	#-127,#0x00
   0229 81 00               440 	.db	#-127,#0x00
   022B 81 00               441 	.db	#-127,#0x00
   022D 81 00               442 	.db	#-127,#0x00
   022F 81 00               443 	.db	#-127,#0x00
   0231 81 00               444 	.db	#-127,#0x00
   0233 81 00               445 	.db	#-127,#0x00
   0235 81 00               446 	.db	#-127,#0x00
   0237 81 00               447 	.db	#-127,#0x00
   0239 81 00               448 	.db	#-127,#0x00
   023B 81 00               449 	.db	#-127,#0x00
   023D 81 00               450 	.db	#-127,#0x00
   023F 81 00               451 	.db	#-127,#0x00
   0241 81 00               452 	.db	#-127,#0x00
   0243 81 00               453 	.db	#-127,#0x00
   0245 81 00               454 	.db	#-127,#0x00
   0247 81 00               455 	.db	#-127,#0x00
   0249 81 00               456 	.db	#-127,#0x00
   024B 81 00               457 	.db	#-127,#0x00
   024D 81 00               458 	.db	#-127,#0x00
   024F 81 00               459 	.db	#-127,#0x00
   0251 81 00               460 	.db	#-127,#0x00
   0253 81 00               461 	.db	#-127,#0x00
   0255 81 00               462 	.db	#-127,#0x00
   0257 81 00               463 	.db	#-127,#0x00
   0259 81 00               464 	.db	#-127,#0x00
   025B 81 00               465 	.db	#-127,#0x00
   025D 81 00               466 	.db	#-127,#0x00
   025F 81 00               467 	.db	#-127,#0x00
   0261 81 00               468 	.db	#-127,#0x00
   0263 81 00               469 	.db	#-127,#0x00
   0265 81 00               470 	.db	#-127,#0x00
   0267 81 00               471 	.db	#-127,#0x00
   0269 81 00               472 	.db	#-127,#0x00
   026B 81 00               473 	.db	#-127,#0x00
   026D 81 00               474 	.db	#-127,#0x00
   026F 81 00               475 	.db	#-127,#0x00
   0271 81 00               476 	.db	#-127,#0x00
   0273 81 00               477 	.db	#-127,#0x00
   0275 81 00               478 	.db	#-127,#0x00
   0277 81 00               479 	.db	#-127,#0x00
   0279 81 00               480 	.db	#-127,#0x00
   027B 81 00               481 	.db	#-127,#0x00
   027D 81 00               482 	.db	#-127,#0x00
   027F 81 00               483 	.db	#-127,#0x00
   0281 81 00               484 	.db	#-127,#0x00
   0283 81 00               485 	.db	#-127,#0x00
   0285 81 00               486 	.db	#-127,#0x00
   0287 81 00               487 	.db	#-127,#0x00
   0289 81 00               488 	.db	#-127,#0x00
   028B 81 00               489 	.db	#-127,#0x00
   028D 81 00               490 	.db	#-127,#0x00
   028F 81 00               491 	.db	#-127,#0x00
   0291 81 00               492 	.db	#-127,#0x00
   0293 81 00               493 	.db	#-127,#0x00
   0295 81 00               494 	.db	#-127,#0x00
   0297 81 00               495 	.db	#-127,#0x00
   0299 81 00               496 	.db	#-127,#0x00
   029B 81 00               497 	.db	#-127,#0x00
   029D 81 00               498 	.db	#-127,#0x00
   029F 81 00               499 	.db	#-127,#0x00
   02A1 81 00               500 	.db	#-127,#0x00
   02A3 81 00               501 	.db	#-127,#0x00
   02A5 81 00               502 	.db	#-127,#0x00
   02A7 81 00               503 	.db	#-127,#0x00
   02A9 C2 00               504 	.db	#-62,#0x00
   02AB 00                  505 	.db	0
                            506 ;demo.c:72: uint8_t tf2[12000] = {0};
   02AC 21r20s5F            507 	ld	hl,#_tf2
   02AF CDr00s00            508 	call	__initrleblock
   02B2 81 00               509 	.db	#-127,#0x00
   02B4 81 00               510 	.db	#-127,#0x00
   02B6 81 00               511 	.db	#-127,#0x00
   02B8 81 00               512 	.db	#-127,#0x00
   02BA 81 00               513 	.db	#-127,#0x00
   02BC 81 00               514 	.db	#-127,#0x00
   02BE 81 00               515 	.db	#-127,#0x00
   02C0 81 00               516 	.db	#-127,#0x00
   02C2 81 00               517 	.db	#-127,#0x00
   02C4 81 00               518 	.db	#-127,#0x00
   02C6 81 00               519 	.db	#-127,#0x00
   02C8 81 00               520 	.db	#-127,#0x00
   02CA 81 00               521 	.db	#-127,#0x00
   02CC 81 00               522 	.db	#-127,#0x00
   02CE 81 00               523 	.db	#-127,#0x00
   02D0 81 00               524 	.db	#-127,#0x00
   02D2 81 00               525 	.db	#-127,#0x00
   02D4 81 00               526 	.db	#-127,#0x00
   02D6 81 00               527 	.db	#-127,#0x00
   02D8 81 00               528 	.db	#-127,#0x00
   02DA 81 00               529 	.db	#-127,#0x00
   02DC 81 00               530 	.db	#-127,#0x00
   02DE 81 00               531 	.db	#-127,#0x00
   02E0 81 00               532 	.db	#-127,#0x00
   02E2 81 00               533 	.db	#-127,#0x00
   02E4 81 00               534 	.db	#-127,#0x00
   02E6 81 00               535 	.db	#-127,#0x00
   02E8 81 00               536 	.db	#-127,#0x00
   02EA 81 00               537 	.db	#-127,#0x00
   02EC 81 00               538 	.db	#-127,#0x00
   02EE 81 00               539 	.db	#-127,#0x00
   02F0 81 00               540 	.db	#-127,#0x00
   02F2 81 00               541 	.db	#-127,#0x00
   02F4 81 00               542 	.db	#-127,#0x00
   02F6 81 00               543 	.db	#-127,#0x00
   02F8 81 00               544 	.db	#-127,#0x00
   02FA 81 00               545 	.db	#-127,#0x00
   02FC 81 00               546 	.db	#-127,#0x00
   02FE 81 00               547 	.db	#-127,#0x00
   0300 81 00               548 	.db	#-127,#0x00
   0302 81 00               549 	.db	#-127,#0x00
   0304 81 00               550 	.db	#-127,#0x00
   0306 81 00               551 	.db	#-127,#0x00
   0308 81 00               552 	.db	#-127,#0x00
   030A 81 00               553 	.db	#-127,#0x00
   030C 81 00               554 	.db	#-127,#0x00
   030E 81 00               555 	.db	#-127,#0x00
   0310 81 00               556 	.db	#-127,#0x00
   0312 81 00               557 	.db	#-127,#0x00
   0314 81 00               558 	.db	#-127,#0x00
   0316 81 00               559 	.db	#-127,#0x00
   0318 81 00               560 	.db	#-127,#0x00
   031A 81 00               561 	.db	#-127,#0x00
   031C 81 00               562 	.db	#-127,#0x00
   031E 81 00               563 	.db	#-127,#0x00
   0320 81 00               564 	.db	#-127,#0x00
   0322 81 00               565 	.db	#-127,#0x00
   0324 81 00               566 	.db	#-127,#0x00
   0326 81 00               567 	.db	#-127,#0x00
   0328 81 00               568 	.db	#-127,#0x00
   032A 81 00               569 	.db	#-127,#0x00
   032C 81 00               570 	.db	#-127,#0x00
   032E 81 00               571 	.db	#-127,#0x00
   0330 81 00               572 	.db	#-127,#0x00
   0332 81 00               573 	.db	#-127,#0x00
   0334 81 00               574 	.db	#-127,#0x00
   0336 81 00               575 	.db	#-127,#0x00
   0338 81 00               576 	.db	#-127,#0x00
   033A 81 00               577 	.db	#-127,#0x00
   033C 81 00               578 	.db	#-127,#0x00
   033E 81 00               579 	.db	#-127,#0x00
   0340 81 00               580 	.db	#-127,#0x00
   0342 81 00               581 	.db	#-127,#0x00
   0344 81 00               582 	.db	#-127,#0x00
   0346 81 00               583 	.db	#-127,#0x00
   0348 81 00               584 	.db	#-127,#0x00
   034A 81 00               585 	.db	#-127,#0x00
   034C 81 00               586 	.db	#-127,#0x00
   034E 81 00               587 	.db	#-127,#0x00
   0350 81 00               588 	.db	#-127,#0x00
   0352 81 00               589 	.db	#-127,#0x00
   0354 81 00               590 	.db	#-127,#0x00
   0356 81 00               591 	.db	#-127,#0x00
   0358 81 00               592 	.db	#-127,#0x00
   035A 81 00               593 	.db	#-127,#0x00
   035C 81 00               594 	.db	#-127,#0x00
   035E 81 00               595 	.db	#-127,#0x00
   0360 81 00               596 	.db	#-127,#0x00
   0362 81 00               597 	.db	#-127,#0x00
   0364 81 00               598 	.db	#-127,#0x00
   0366 81 00               599 	.db	#-127,#0x00
   0368 81 00               600 	.db	#-127,#0x00
   036A 81 00               601 	.db	#-127,#0x00
   036C 81 00               602 	.db	#-127,#0x00
   036E C2 00               603 	.db	#-62,#0x00
   0370 00                  604 	.db	0
                            605 ;demo.c:81: volatile int vbicount=0;
   0371 FD 21r20s8F         606 	ld	iy,#_vbicount
   0375 FD 36 00 00         607 	ld	0 (iy),#0x00
   0379 FD 21r20s8F         608 	ld	iy,#_vbicount
   037D FD 36 01 00         609 	ld	1 (iy),#0x00
                            610 ;demo.c:82: volatile int tick=0;
   0381 FD 21r22s8F         611 	ld	iy,#_tick
   0385 FD 36 00 00         612 	ld	0 (iy),#0x00
   0389 FD 21r22s8F         613 	ld	iy,#_tick
   038D FD 36 01 00         614 	ld	1 (iy),#0x00
                            615 ;demo.c:282: uint8_t yofff = 0;
   0391 FD 21r3Bs8F         616 	ld	iy,#_yofff
   0395 FD 36 00 00         617 	ld	0 (iy),#0x00
                            618 ;demo.c:283: uint8_t cc = 0;
   0399 FD 21r3Cs8F         619 	ld	iy,#_cc
   039D FD 36 00 00         620 	ld	0 (iy),#0x00
                            621 ;demo.c:284: static int flipper = 0;
   03A1 FD 21r3Ds8F         622 	ld	iy,#_flipper
   03A5 FD 36 00 00         623 	ld	0 (iy),#0x00
   03A9 FD 21r3Ds8F         624 	ld	iy,#_flipper
   03AD FD 36 01 00         625 	ld	1 (iy),#0x00
                            626 ;demo.c:285: static int ymmmf = 0;
   03B1 FD 21r3Fs8F         627 	ld	iy,#_ymmmf
   03B5 FD 36 00 00         628 	ld	0 (iy),#0x00
   03B9 FD 21r3Fs8F         629 	ld	iy,#_ymmmf
   03BD FD 36 01 00         630 	ld	1 (iy),#0x00
                            631 ;demo.c:316: char block_init = 0;
   03C1 FD 21r41s8F         632 	ld	iy,#_block_init
   03C5 FD 36 00 00         633 	ld	0 (iy),#0x00
                            634 ;demo.c:318: int bsx = 0;
   03C9 FD 21r42s8F         635 	ld	iy,#_bsx
   03CD FD 36 00 00         636 	ld	0 (iy),#0x00
   03D1 FD 21r42s8F         637 	ld	iy,#_bsx
   03D5 FD 36 01 00         638 	ld	1 (iy),#0x00
                            639 ;demo.c:319: int bsy = 0;
   03D9 FD 21r44s8F         640 	ld	iy,#_bsy
   03DD FD 36 00 00         641 	ld	0 (iy),#0x00
   03E1 FD 21r44s8F         642 	ld	iy,#_bsy
   03E5 FD 36 01 00         643 	ld	1 (iy),#0x00
                            644 ;demo.c:320: int btx = 0;
   03E9 FD 21r46s8F         645 	ld	iy,#_btx
   03ED FD 36 00 00         646 	ld	0 (iy),#0x00
   03F1 FD 21r46s8F         647 	ld	iy,#_btx
   03F5 FD 36 01 00         648 	ld	1 (iy),#0x00
                            649 ;demo.c:321: int bty = 0;
   03F9 FD 21r48s8F         650 	ld	iy,#_bty
   03FD FD 36 00 00         651 	ld	0 (iy),#0x00
   0401 FD 21r48s8F         652 	ld	iy,#_bty
   0405 FD 36 01 00         653 	ld	1 (iy),#0x00
                            654 ;demo.c:323: int btab[16] = {0};
   0409 21r4As8F            655 	ld	hl,#_btab
   040C CDr00s00            656 	call	__initrleblock
   040F E0 00               657 	.db	#-32,#0x00
   0411 00                  658 	.db	0
                            659 ;demo.c:325: int flof = 0;
   0412 FD 21r6As8F         660 	ld	iy,#_flof
   0416 FD 36 00 00         661 	ld	0 (iy),#0x00
   041A FD 21r6As8F         662 	ld	iy,#_flof
   041E FD 36 01 00         663 	ld	1 (iy),#0x00
                            664 ;demo.c:374: int linenum = 0;
   0422 FD 21r6Cs8F         665 	ld	iy,#_linenum
   0426 FD 36 00 00         666 	ld	0 (iy),#0x00
   042A FD 21r6Cs8F         667 	ld	iy,#_linenum
   042E FD 36 01 00         668 	ld	1 (iy),#0x00
                            669 ;demo.c:432: uint8_t lx = 0;
   0432 FD 21r6Es8F         670 	ld	iy,#_lx
   0436 FD 36 00 00         671 	ld	0 (iy),#0x00
                            672 ;demo.c:433: uint8_t ly = 0;
   043A FD 21r6Fs8F         673 	ld	iy,#_ly
   043E FD 36 00 00         674 	ld	0 (iy),#0x00
                            675 ;demo.c:496: int ff = 0;
   0442 FD 21r70s8F         676 	ld	iy,#_ff
   0446 FD 36 00 00         677 	ld	0 (iy),#0x00
   044A FD 21r70s8F         678 	ld	iy,#_ff
   044E FD 36 01 00         679 	ld	1 (iy),#0x00
                            680 ;demo.c:497: int twinited = 0;
   0452 FD 21r72s8F         681 	ld	iy,#_twinited
   0456 FD 36 00 00         682 	ld	0 (iy),#0x00
   045A FD 21r72s8F         683 	ld	iy,#_twinited
   045E FD 36 01 00         684 	ld	1 (iy),#0x00
                            685 ;demo.c:547: int bulbflipper = 1;
   0462 FD 21r74s8F         686 	ld	iy,#_bulbflipper
   0466 FD 36 00 01         687 	ld	0 (iy),#0x01
   046A FD 21r74s8F         688 	ld	iy,#_bulbflipper
   046E FD 36 01 00         689 	ld	1 (iy),#0x00
                            690 ;demo.c:549: int ff1,ff2 = 0;
   0472 FD 21r78s8F         691 	ld	iy,#_ff2
   0476 FD 36 00 00         692 	ld	0 (iy),#0x00
   047A FD 21r78s8F         693 	ld	iy,#_ff2
   047E FD 36 01 00         694 	ld	1 (iy),#0x00
                            695 ;demo.c:550: int ender = 212;
   0482 FD 21r7As8F         696 	ld	iy,#_ender
   0486 FD 36 00 D4         697 	ld	0 (iy),#0xD4
   048A FD 21r7As8F         698 	ld	iy,#_ender
   048E FD 36 01 00         699 	ld	1 (iy),#0x00
                            700 ;demo.c:551: int enderdir = -1;
   0492 FD 21r7Cs8F         701 	ld	iy,#_enderdir
   0496 FD 36 00 FF         702 	ld	0 (iy),#0xFF
   049A FD 21r7Cs8F         703 	ld	iy,#_enderdir
   049E FD 36 01 FF         704 	ld	1 (iy),#0xFF
                            705 ;demo.c:606: static int xo = 0;
   04A2 FD 21r7Es8F         706 	ld	iy,#_xo
   04A6 FD 36 00 00         707 	ld	0 (iy),#0x00
   04AA FD 21r7Es8F         708 	ld	iy,#_xo
   04AE FD 36 01 00         709 	ld	1 (iy),#0x00
                            710 ;demo.c:607: static int yo = 0;
   04B2 FD 21r80s8F         711 	ld	iy,#_yo
   04B6 FD 36 00 00         712 	ld	0 (iy),#0x00
   04BA FD 21r80s8F         713 	ld	iy,#_yo
   04BE FD 36 01 00         714 	ld	1 (iy),#0x00
                            715 ;demo.c:608: static int po = 0;
   04C2 FD 21r82s8F         716 	ld	iy,#_po
   04C6 FD 36 00 00         717 	ld	0 (iy),#0x00
   04CA FD 21r82s8F         718 	ld	iy,#_po
   04CE FD 36 01 00         719 	ld	1 (iy),#0x00
                            720 ;demo.c:609: static int fffaaa = 0;
   04D2 FD 21r84s8F         721 	ld	iy,#_fffaaa
   04D6 FD 36 00 00         722 	ld	0 (iy),#0x00
   04DA FD 21r84s8F         723 	ld	iy,#_fffaaa
   04DE FD 36 01 00         724 	ld	1 (iy),#0x00
                            725 ;demo.c:611: int anim_init = 0;
   04E2 FD 21r86s8F         726 	ld	iy,#_anim_init
   04E6 FD 36 00 00         727 	ld	0 (iy),#0x00
   04EA FD 21r86s8F         728 	ld	iy,#_anim_init
   04EE FD 36 01 00         729 	ld	1 (iy),#0x00
                            730 ;demo.c:665: uint8_t boxes_init = 0;
   04F2 FD 21r88s8F         731 	ld	iy,#_boxes_init
   04F6 FD 36 00 00         732 	ld	0 (iy),#0x00
                            733 ;demo.c:666: int buffer = 1;
   04FA FD 21r89s8F         734 	ld	iy,#_buffer
   04FE FD 36 00 01         735 	ld	0 (iy),#0x01
   0502 FD 21r89s8F         736 	ld	iy,#_buffer
   0506 FD 36 01 00         737 	ld	1 (iy),#0x00
                            738 ;demo.c:667: int dbly = 0;
   050A FD 21r8Bs8F         739 	ld	iy,#_dbly
   050E FD 36 00 00         740 	ld	0 (iy),#0x00
   0512 FD 21r8Bs8F         741 	ld	iy,#_dbly
   0516 FD 36 01 00         742 	ld	1 (iy),#0x00
                            743 ;demo.c:668: int prevx = -1;
   051A FD 21r8Ds8F         744 	ld	iy,#_prevx
   051E FD 36 00 FF         745 	ld	0 (iy),#0xFF
   0522 FD 21r8Ds8F         746 	ld	iy,#_prevx
   0526 FD 36 01 FF         747 	ld	1 (iy),#0xFF
                            748 ;demo.c:693: int bx = 256-42;
   052A FD 21r95s8F         749 	ld	iy,#_bx
   052E FD 36 00 D6         750 	ld	0 (iy),#0xD6
   0532 FD 21r95s8F         751 	ld	iy,#_bx
   0536 FD 36 01 00         752 	ld	1 (iy),#0x00
                            753 ;demo.c:694: int by = 84;
   053A FD 21r97s8F         754 	ld	iy,#_by
   053E FD 36 00 54         755 	ld	0 (iy),#0x54
   0542 FD 21r97s8F         756 	ld	iy,#_by
   0546 FD 36 01 00         757 	ld	1 (iy),#0x00
                            758 ;demo.c:695: int bt = 0;
   054A FD 21r99s8F         759 	ld	iy,#_bt
   054E FD 36 00 00         760 	ld	0 (iy),#0x00
   0552 FD 21r99s8F         761 	ld	iy,#_bt
   0556 FD 36 01 00         762 	ld	1 (iy),#0x00
                            763 ;demo.c:696: int bxx = 0;
   055A FD 21r9Bs8F         764 	ld	iy,#_bxx
   055E FD 36 00 00         765 	ld	0 (iy),#0x00
   0562 FD 21r9Bs8F         766 	ld	iy,#_bxx
   0566 FD 36 01 00         767 	ld	1 (iy),#0x00
                            768 ;demo.c:697: int byy = 0;
   056A FD 21r9Ds8F         769 	ld	iy,#_byy
   056E FD 36 00 00         770 	ld	0 (iy),#0x00
   0572 FD 21r9Ds8F         771 	ld	iy,#_byy
   0576 FD 36 01 00         772 	ld	1 (iy),#0x00
                            773 ;demo.c:698: int bo = 0;
   057A FD 21r9Fs8F         774 	ld	iy,#_bo
   057E FD 36 00 00         775 	ld	0 (iy),#0x00
   0582 FD 21r9Fs8F         776 	ld	iy,#_bo
   0586 FD 36 01 00         777 	ld	1 (iy),#0x00
                            778 ;demo.c:700: int bonc = 0;
   058A FD 21rA1s8F         779 	ld	iy,#_bonc
   058E FD 36 00 00         780 	ld	0 (iy),#0x00
   0592 FD 21rA1s8F         781 	ld	iy,#_bonc
   0596 FD 36 01 00         782 	ld	1 (iy),#0x00
                            783 ;demo.c:701: int pbx = 0;
   059A FD 21rA3s8F         784 	ld	iy,#_pbx
   059E FD 36 00 00         785 	ld	0 (iy),#0x00
   05A2 FD 21rA3s8F         786 	ld	iy,#_pbx
   05A6 FD 36 01 00         787 	ld	1 (iy),#0x00
                            788 ;demo.c:702: int pbt = 0;
   05AA FD 21rA5s8F         789 	ld	iy,#_pbt
   05AE FD 36 00 00         790 	ld	0 (iy),#0x00
   05B2 FD 21rA5s8F         791 	ld	iy,#_pbt
   05B6 FD 36 01 00         792 	ld	1 (iy),#0x00
                            793 ;demo.c:804: uint8_t tri_inited = 0;
   05BA FD 21rA7s8F         794 	ld	iy,#_tri_inited
   05BE FD 36 00 00         795 	ld	0 (iy),#0x00
                            796 ;demo.c:832: char tripal[9] = {
   05C2 21rA8s8F            797 	ld	hl,#_tripal
   05C5 CDr00s00            798 	call	__initrleblock
   05C8 09                  799 	.db	9
   05C9 02 02 01 01 02 03   800 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   05D1 02                  801 	.db	0x02
   05D2 00                  802 	.db	0
                            803 ;demo.c:838: uint8_t tripaltick = 0;
   05D3 FD 21rB1s8F         804 	ld	iy,#_tripaltick
   05D7 FD 36 00 00         805 	ld	0 (iy),#0x00
                            806 ;demo.c:840: int triframes = 0;
   05DB FD 21rB2s8F         807 	ld	iy,#_triframes
   05DF FD 36 00 00         808 	ld	0 (iy),#0x00
   05E3 FD 21rB2s8F         809 	ld	iy,#_triframes
   05E7 FD 36 01 00         810 	ld	1 (iy),#0x00
                            811 ;--------------------------------------------------------
                            812 ; Home
                            813 ;--------------------------------------------------------
                            814 	.area _HOME
                            815 	.area _HOME
                            816 ;--------------------------------------------------------
                            817 ; code
                            818 ;--------------------------------------------------------
                            819 	.area _CODE
                            820 ;demo.c:86: int isNthBitSet (unsigned char c, int n) {
                            821 ;	---------------------------------
                            822 ; Function isNthBitSet
                            823 ; ---------------------------------
   0000                     824 _isNthBitSet_start::
   0000                     825 _isNthBitSet:
   0000 DD E5               826 	push	ix
   0002 DD 21 00 00         827 	ld	ix,#0
   0006 DD 39               828 	add	ix,sp
                            829 ;demo.c:88: return ((c & mask[n]) != 0);
   0008 3Er33               830 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            831 	add	a,5 (ix)
   000D 4F                  832 	ld	c,a
   000E 3Es8F               833 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            834 	adc	a,6 (ix)
   0013 47                  835 	ld	b,a
   0014 0A                  836 	ld	a,(bc)
   0015 DD A6 04            837 	and	a,4 (ix)
   0018 20 04               838 	jr	NZ,00103$
   001A 3E 01               839 	ld	a,#0x01
   001C 18 01               840 	jr	00104$
   001E                     841 00103$:
   001E AF                  842 	xor	a,a
   001F                     843 00104$:
   001F B7                  844 	or	a,a
   0020 D6 01               845 	sub	a,#0x01
   0022 3E 00               846 	ld	a,#0x00
   0024 17                  847 	rla
   0025 4F                  848 	ld	c,a
   0026 69                  849 	ld	l,c
   0027 26 00               850 	ld	h,#0x00
   0029 DD E1               851 	pop	ix
   002B C9                  852 	ret
   002C                     853 _isNthBitSet_end::
   002C                     854 _sintabx:
   002C 78 00               855 	.dw #0x0078
   002E 7A 00               856 	.dw #0x007A
   0030 7D 00               857 	.dw #0x007D
   0032 80 00               858 	.dw #0x0080
   0034 83 00               859 	.dw #0x0083
   0036 86 00               860 	.dw #0x0086
   0038 89 00               861 	.dw #0x0089
   003A 8C 00               862 	.dw #0x008C
   003C 8F 00               863 	.dw #0x008F
   003E 92 00               864 	.dw #0x0092
   0040 95 00               865 	.dw #0x0095
   0042 98 00               866 	.dw #0x0098
   0044 9A 00               867 	.dw #0x009A
   0046 9D 00               868 	.dw #0x009D
   0048 A0 00               869 	.dw #0x00A0
   004A A3 00               870 	.dw #0x00A3
   004C A5 00               871 	.dw #0x00A5
   004E A8 00               872 	.dw #0x00A8
   0050 AB 00               873 	.dw #0x00AB
   0052 AD 00               874 	.dw #0x00AD
   0054 B0 00               875 	.dw #0x00B0
   0056 B3 00               876 	.dw #0x00B3
   0058 B5 00               877 	.dw #0x00B5
   005A B8 00               878 	.dw #0x00B8
   005C BA 00               879 	.dw #0x00BA
   005E BD 00               880 	.dw #0x00BD
   0060 BF 00               881 	.dw #0x00BF
   0062 C1 00               882 	.dw #0x00C1
   0064 C4 00               883 	.dw #0x00C4
   0066 C6 00               884 	.dw #0x00C6
   0068 C8 00               885 	.dw #0x00C8
   006A CA 00               886 	.dw #0x00CA
   006C CC 00               887 	.dw #0x00CC
   006E CE 00               888 	.dw #0x00CE
   0070 D0 00               889 	.dw #0x00D0
   0072 D2 00               890 	.dw #0x00D2
   0074 D4 00               891 	.dw #0x00D4
   0076 D6 00               892 	.dw #0x00D6
   0078 D8 00               893 	.dw #0x00D8
   007A DA 00               894 	.dw #0x00DA
   007C DB 00               895 	.dw #0x00DB
   007E DD 00               896 	.dw #0x00DD
   0080 DE 00               897 	.dw #0x00DE
   0082 E0 00               898 	.dw #0x00E0
   0084 E1 00               899 	.dw #0x00E1
   0086 E3 00               900 	.dw #0x00E3
   0088 E4 00               901 	.dw #0x00E4
   008A E5 00               902 	.dw #0x00E5
   008C E6 00               903 	.dw #0x00E6
   008E E7 00               904 	.dw #0x00E7
   0090 E8 00               905 	.dw #0x00E8
   0092 E9 00               906 	.dw #0x00E9
   0094 EA 00               907 	.dw #0x00EA
   0096 EB 00               908 	.dw #0x00EB
   0098 EC 00               909 	.dw #0x00EC
   009A ED 00               910 	.dw #0x00ED
   009C ED 00               911 	.dw #0x00ED
   009E EE 00               912 	.dw #0x00EE
   00A0 EE 00               913 	.dw #0x00EE
   00A2 EF 00               914 	.dw #0x00EF
   00A4 EF 00               915 	.dw #0x00EF
   00A6 EF 00               916 	.dw #0x00EF
   00A8 EF 00               917 	.dw #0x00EF
   00AA EF 00               918 	.dw #0x00EF
   00AC F0 00               919 	.dw #0x00F0
   00AE EF 00               920 	.dw #0x00EF
   00B0 EF 00               921 	.dw #0x00EF
   00B2 EF 00               922 	.dw #0x00EF
   00B4 EF 00               923 	.dw #0x00EF
   00B6 EF 00               924 	.dw #0x00EF
   00B8 EE 00               925 	.dw #0x00EE
   00BA EE 00               926 	.dw #0x00EE
   00BC ED 00               927 	.dw #0x00ED
   00BE ED 00               928 	.dw #0x00ED
   00C0 EC 00               929 	.dw #0x00EC
   00C2 EB 00               930 	.dw #0x00EB
   00C4 EA 00               931 	.dw #0x00EA
   00C6 E9 00               932 	.dw #0x00E9
   00C8 E8 00               933 	.dw #0x00E8
   00CA E7 00               934 	.dw #0x00E7
   00CC E6 00               935 	.dw #0x00E6
   00CE E5 00               936 	.dw #0x00E5
   00D0 E4 00               937 	.dw #0x00E4
   00D2 E3 00               938 	.dw #0x00E3
   00D4 E1 00               939 	.dw #0x00E1
   00D6 E0 00               940 	.dw #0x00E0
   00D8 DE 00               941 	.dw #0x00DE
   00DA DD 00               942 	.dw #0x00DD
   00DC DB 00               943 	.dw #0x00DB
   00DE DA 00               944 	.dw #0x00DA
   00E0 D8 00               945 	.dw #0x00D8
   00E2 D6 00               946 	.dw #0x00D6
   00E4 D4 00               947 	.dw #0x00D4
   00E6 D2 00               948 	.dw #0x00D2
   00E8 D0 00               949 	.dw #0x00D0
   00EA CE 00               950 	.dw #0x00CE
   00EC CC 00               951 	.dw #0x00CC
   00EE CA 00               952 	.dw #0x00CA
   00F0 C8 00               953 	.dw #0x00C8
   00F2 C6 00               954 	.dw #0x00C6
   00F4 C4 00               955 	.dw #0x00C4
   00F6 C1 00               956 	.dw #0x00C1
   00F8 BF 00               957 	.dw #0x00BF
   00FA BD 00               958 	.dw #0x00BD
   00FC BA 00               959 	.dw #0x00BA
   00FE B8 00               960 	.dw #0x00B8
   0100 B5 00               961 	.dw #0x00B5
   0102 B3 00               962 	.dw #0x00B3
   0104 B0 00               963 	.dw #0x00B0
   0106 AD 00               964 	.dw #0x00AD
   0108 AB 00               965 	.dw #0x00AB
   010A A8 00               966 	.dw #0x00A8
   010C A5 00               967 	.dw #0x00A5
   010E A3 00               968 	.dw #0x00A3
   0110 A0 00               969 	.dw #0x00A0
   0112 9D 00               970 	.dw #0x009D
   0114 9A 00               971 	.dw #0x009A
   0116 98 00               972 	.dw #0x0098
   0118 95 00               973 	.dw #0x0095
   011A 92 00               974 	.dw #0x0092
   011C 8F 00               975 	.dw #0x008F
   011E 8C 00               976 	.dw #0x008C
   0120 89 00               977 	.dw #0x0089
   0122 86 00               978 	.dw #0x0086
   0124 83 00               979 	.dw #0x0083
   0126 80 00               980 	.dw #0x0080
   0128 7D 00               981 	.dw #0x007D
   012A 7A 00               982 	.dw #0x007A
   012C 78 00               983 	.dw #0x0078
   012E 75 00               984 	.dw #0x0075
   0130 72 00               985 	.dw #0x0072
   0132 6F 00               986 	.dw #0x006F
   0134 6C 00               987 	.dw #0x006C
   0136 69 00               988 	.dw #0x0069
   0138 66 00               989 	.dw #0x0066
   013A 63 00               990 	.dw #0x0063
   013C 60 00               991 	.dw #0x0060
   013E 5D 00               992 	.dw #0x005D
   0140 5A 00               993 	.dw #0x005A
   0142 57 00               994 	.dw #0x0057
   0144 55 00               995 	.dw #0x0055
   0146 52 00               996 	.dw #0x0052
   0148 4F 00               997 	.dw #0x004F
   014A 4C 00               998 	.dw #0x004C
   014C 4A 00               999 	.dw #0x004A
   014E 47 00              1000 	.dw #0x0047
   0150 44 00              1001 	.dw #0x0044
   0152 42 00              1002 	.dw #0x0042
   0154 3F 00              1003 	.dw #0x003F
   0156 3C 00              1004 	.dw #0x003C
   0158 3A 00              1005 	.dw #0x003A
   015A 37 00              1006 	.dw #0x0037
   015C 35 00              1007 	.dw #0x0035
   015E 32 00              1008 	.dw #0x0032
   0160 30 00              1009 	.dw #0x0030
   0162 2E 00              1010 	.dw #0x002E
   0164 2B 00              1011 	.dw #0x002B
   0166 29 00              1012 	.dw #0x0029
   0168 27 00              1013 	.dw #0x0027
   016A 25 00              1014 	.dw #0x0025
   016C 23 00              1015 	.dw #0x0023
   016E 21 00              1016 	.dw #0x0021
   0170 1F 00              1017 	.dw #0x001F
   0172 1D 00              1018 	.dw #0x001D
   0174 1B 00              1019 	.dw #0x001B
   0176 19 00              1020 	.dw #0x0019
   0178 17 00              1021 	.dw #0x0017
   017A 15 00              1022 	.dw #0x0015
   017C 14 00              1023 	.dw #0x0014
   017E 12 00              1024 	.dw #0x0012
   0180 11 00              1025 	.dw #0x0011
   0182 0F 00              1026 	.dw #0x000F
   0184 0E 00              1027 	.dw #0x000E
   0186 0C 00              1028 	.dw #0x000C
   0188 0B 00              1029 	.dw #0x000B
   018A 0A 00              1030 	.dw #0x000A
   018C 09 00              1031 	.dw #0x0009
   018E 08 00              1032 	.dw #0x0008
   0190 07 00              1033 	.dw #0x0007
   0192 06 00              1034 	.dw #0x0006
   0194 05 00              1035 	.dw #0x0005
   0196 04 00              1036 	.dw #0x0004
   0198 03 00              1037 	.dw #0x0003
   019A 02 00              1038 	.dw #0x0002
   019C 02 00              1039 	.dw #0x0002
   019E 01 00              1040 	.dw #0x0001
   01A0 01 00              1041 	.dw #0x0001
   01A2 00 00              1042 	.dw #0x0000
   01A4 00 00              1043 	.dw #0x0000
   01A6 00 00              1044 	.dw #0x0000
   01A8 00 00              1045 	.dw #0x0000
   01AA 00 00              1046 	.dw #0x0000
   01AC 00 00              1047 	.dw #0x0000
   01AE 00 00              1048 	.dw #0x0000
   01B0 00 00              1049 	.dw #0x0000
   01B2 00 00              1050 	.dw #0x0000
   01B4 00 00              1051 	.dw #0x0000
   01B6 00 00              1052 	.dw #0x0000
   01B8 01 00              1053 	.dw #0x0001
   01BA 01 00              1054 	.dw #0x0001
   01BC 02 00              1055 	.dw #0x0002
   01BE 02 00              1056 	.dw #0x0002
   01C0 03 00              1057 	.dw #0x0003
   01C2 04 00              1058 	.dw #0x0004
   01C4 05 00              1059 	.dw #0x0005
   01C6 06 00              1060 	.dw #0x0006
   01C8 07 00              1061 	.dw #0x0007
   01CA 08 00              1062 	.dw #0x0008
   01CC 09 00              1063 	.dw #0x0009
   01CE 0A 00              1064 	.dw #0x000A
   01D0 0B 00              1065 	.dw #0x000B
   01D2 0C 00              1066 	.dw #0x000C
   01D4 0E 00              1067 	.dw #0x000E
   01D6 0F 00              1068 	.dw #0x000F
   01D8 11 00              1069 	.dw #0x0011
   01DA 12 00              1070 	.dw #0x0012
   01DC 14 00              1071 	.dw #0x0014
   01DE 15 00              1072 	.dw #0x0015
   01E0 17 00              1073 	.dw #0x0017
   01E2 19 00              1074 	.dw #0x0019
   01E4 1B 00              1075 	.dw #0x001B
   01E6 1D 00              1076 	.dw #0x001D
   01E8 1F 00              1077 	.dw #0x001F
   01EA 21 00              1078 	.dw #0x0021
   01EC 23 00              1079 	.dw #0x0023
   01EE 25 00              1080 	.dw #0x0025
   01F0 27 00              1081 	.dw #0x0027
   01F2 29 00              1082 	.dw #0x0029
   01F4 2B 00              1083 	.dw #0x002B
   01F6 2E 00              1084 	.dw #0x002E
   01F8 30 00              1085 	.dw #0x0030
   01FA 32 00              1086 	.dw #0x0032
   01FC 35 00              1087 	.dw #0x0035
   01FE 37 00              1088 	.dw #0x0037
   0200 3A 00              1089 	.dw #0x003A
   0202 3C 00              1090 	.dw #0x003C
   0204 3F 00              1091 	.dw #0x003F
   0206 42 00              1092 	.dw #0x0042
   0208 44 00              1093 	.dw #0x0044
   020A 47 00              1094 	.dw #0x0047
   020C 4A 00              1095 	.dw #0x004A
   020E 4C 00              1096 	.dw #0x004C
   0210 4F 00              1097 	.dw #0x004F
   0212 52 00              1098 	.dw #0x0052
   0214 55 00              1099 	.dw #0x0055
   0216 57 00              1100 	.dw #0x0057
   0218 5A 00              1101 	.dw #0x005A
   021A 5D 00              1102 	.dw #0x005D
   021C 60 00              1103 	.dw #0x0060
   021E 63 00              1104 	.dw #0x0063
   0220 66 00              1105 	.dw #0x0066
   0222 69 00              1106 	.dw #0x0069
   0224 6C 00              1107 	.dw #0x006C
   0226 6F 00              1108 	.dw #0x006F
   0228 72 00              1109 	.dw #0x0072
   022A 75 00              1110 	.dw #0x0075
   022C                    1111 _tri_center:
   022C 08                 1112 	.db #0x08
   022D 0A                 1113 	.db #0x0A
   022E 12                 1114 	.db #0x12
   022F 10                 1115 	.db #0x10
   0230 00                 1116 	.db #0x00
   0231 02                 1117 	.db #0x02
   0232 08                 1118 	.db #0x08
   0233 0A                 1119 	.db #0x0A
   0234 0B                 1120 	.db #0x0B
   0235 09                 1121 	.db #0x09
   0236 03                 1122 	.db #0x03
   0237 01                 1123 	.db #0x01
   0238 11                 1124 	.db #0x11
   0239 13                 1125 	.db #0x13
   023A 0B                 1126 	.db #0x0B
   023B 09                 1127 	.db #0x09
   023C 0A                 1128 	.db #0x0A
   023D 12                 1129 	.db #0x12
   023E 10                 1130 	.db #0x10
   023F 00                 1131 	.db #0x00
   0240 02                 1132 	.db #0x02
   0241 08                 1133 	.db #0x08
   0242 0A                 1134 	.db #0x0A
   0243 12                 1135 	.db #0x12
   0244 13                 1136 	.db #0x13
   0245 0B                 1137 	.db #0x0B
   0246 09                 1138 	.db #0x09
   0247 03                 1139 	.db #0x03
   0248 01                 1140 	.db #0x01
   0249 11                 1141 	.db #0x11
   024A 13                 1142 	.db #0x13
   024B 0B                 1143 	.db #0x0B
   024C 12                 1144 	.db #0x12
   024D 10                 1145 	.db #0x10
   024E 00                 1146 	.db #0x00
   024F 02                 1147 	.db #0x02
   0250 08                 1148 	.db #0x08
   0251 0A                 1149 	.db #0x0A
   0252 12                 1150 	.db #0x12
   0253 10                 1151 	.db #0x10
   0254 11                 1152 	.db #0x11
   0255 13                 1153 	.db #0x13
   0256 0B                 1154 	.db #0x0B
   0257 09                 1155 	.db #0x09
   0258 03                 1156 	.db #0x03
   0259 01                 1157 	.db #0x01
   025A 11                 1158 	.db #0x11
   025B 13                 1159 	.db #0x13
   025C 10                 1160 	.db #0x10
   025D 00                 1161 	.db #0x00
   025E 02                 1162 	.db #0x02
   025F 08                 1163 	.db #0x08
   0260 0A                 1164 	.db #0x0A
   0261 12                 1165 	.db #0x12
   0262 10                 1166 	.db #0x10
   0263 00                 1167 	.db #0x00
   0264 01                 1168 	.db #0x01
   0265 11                 1169 	.db #0x11
   0266 13                 1170 	.db #0x13
   0267 0B                 1171 	.db #0x0B
   0268 09                 1172 	.db #0x09
   0269 03                 1173 	.db #0x03
   026A 01                 1174 	.db #0x01
   026B 11                 1175 	.db #0x11
   026C 00                 1176 	.db #0x00
   026D 02                 1177 	.db #0x02
   026E 08                 1178 	.db #0x08
   026F 0A                 1179 	.db #0x0A
   0270 12                 1180 	.db #0x12
   0271 10                 1181 	.db #0x10
   0272 00                 1182 	.db #0x00
   0273 02                 1183 	.db #0x02
   0274 03                 1184 	.db #0x03
   0275 01                 1185 	.db #0x01
   0276 11                 1186 	.db #0x11
   0277 13                 1187 	.db #0x13
   0278 0B                 1188 	.db #0x0B
   0279 09                 1189 	.db #0x09
   027A 03                 1190 	.db #0x03
   027B 01                 1191 	.db #0x01
   027C 02                 1192 	.db #0x02
   027D 08                 1193 	.db #0x08
   027E 0A                 1194 	.db #0x0A
   027F 12                 1195 	.db #0x12
   0280 10                 1196 	.db #0x10
   0281 00                 1197 	.db #0x00
   0282 02                 1198 	.db #0x02
   0283 08                 1199 	.db #0x08
   0284 09                 1200 	.db #0x09
   0285 03                 1201 	.db #0x03
   0286 01                 1202 	.db #0x01
   0287 11                 1203 	.db #0x11
   0288 13                 1204 	.db #0x13
   0289 0B                 1205 	.db #0x0B
   028A 09                 1206 	.db #0x09
   028B 03                 1207 	.db #0x03
   028C 01                 1208 	.db #0x01
   028D 0B                 1209 	.db #0x0B
   028E 09                 1210 	.db #0x09
   028F 11                 1211 	.db #0x11
   0290 13                 1212 	.db #0x13
   0291 03                 1213 	.db #0x03
   0292 01                 1214 	.db #0x01
   0293 0B                 1215 	.db #0x0B
   0294 0A                 1216 	.db #0x0A
   0295 00                 1217 	.db #0x00
   0296 02                 1218 	.db #0x02
   0297 12                 1219 	.db #0x12
   0298 10                 1220 	.db #0x10
   0299 08                 1221 	.db #0x08
   029A 0A                 1222 	.db #0x0A
   029B 00                 1223 	.db #0x00
   029C 03                 1224 	.db #0x03
   029D 01                 1225 	.db #0x01
   029E 0B                 1226 	.db #0x0B
   029F 09                 1227 	.db #0x09
   02A0 11                 1228 	.db #0x11
   02A1 13                 1229 	.db #0x13
   02A2 03                 1230 	.db #0x03
   02A3 01                 1231 	.db #0x01
   02A4 00                 1232 	.db #0x00
   02A5 02                 1233 	.db #0x02
   02A6 12                 1234 	.db #0x12
   02A7 10                 1235 	.db #0x10
   02A8 08                 1236 	.db #0x08
   02A9 0A                 1237 	.db #0x0A
   02AA 00                 1238 	.db #0x00
   02AB 02                 1239 	.db #0x02
   02AC 13                 1240 	.db #0x13
   02AD 03                 1241 	.db #0x03
   02AE 01                 1242 	.db #0x01
   02AF 0B                 1243 	.db #0x0B
   02B0 09                 1244 	.db #0x09
   02B1 11                 1245 	.db #0x11
   02B2 13                 1246 	.db #0x13
   02B3 03                 1247 	.db #0x03
   02B4 02                 1248 	.db #0x02
   02B5 12                 1249 	.db #0x12
   02B6 10                 1250 	.db #0x10
   02B7 08                 1251 	.db #0x08
   02B8 0A                 1252 	.db #0x0A
   02B9 00                 1253 	.db #0x00
   02BA 02                 1254 	.db #0x02
   02BB 12                 1255 	.db #0x12
   02BC 11                 1256 	.db #0x11
   02BD 13                 1257 	.db #0x13
   02BE 03                 1258 	.db #0x03
   02BF 01                 1259 	.db #0x01
   02C0 0B                 1260 	.db #0x0B
   02C1 09                 1261 	.db #0x09
   02C2 11                 1262 	.db #0x11
   02C3 13                 1263 	.db #0x13
   02C4 12                 1264 	.db #0x12
   02C5 10                 1265 	.db #0x10
   02C6 08                 1266 	.db #0x08
   02C7 0A                 1267 	.db #0x0A
   02C8 00                 1268 	.db #0x00
   02C9 02                 1269 	.db #0x02
   02CA 12                 1270 	.db #0x12
   02CB 10                 1271 	.db #0x10
   02CC 09                 1272 	.db #0x09
   02CD 11                 1273 	.db #0x11
   02CE 13                 1274 	.db #0x13
   02CF 03                 1275 	.db #0x03
   02D0 01                 1276 	.db #0x01
   02D1 0B                 1277 	.db #0x0B
   02D2 09                 1278 	.db #0x09
   02D3 11                 1279 	.db #0x11
   02D4 10                 1280 	.db #0x10
   02D5 08                 1281 	.db #0x08
   02D6 0A                 1282 	.db #0x0A
   02D7 00                 1283 	.db #0x00
   02D8 02                 1284 	.db #0x02
   02D9 12                 1285 	.db #0x12
   02DA 10                 1286 	.db #0x10
   02DB 08                 1287 	.db #0x08
   02DC 0B                 1288 	.db #0x0B
   02DD 09                 1289 	.db #0x09
   02DE 11                 1290 	.db #0x11
   02DF 13                 1291 	.db #0x13
   02E0 03                 1292 	.db #0x03
   02E1 01                 1293 	.db #0x01
   02E2 0B                 1294 	.db #0x0B
   02E3 09                 1295 	.db #0x09
   02E4 08                 1296 	.db #0x08
   02E5 0A                 1297 	.db #0x0A
   02E6 00                 1298 	.db #0x00
   02E7 02                 1299 	.db #0x02
   02E8 12                 1300 	.db #0x12
   02E9 10                 1301 	.db #0x10
   02EA 08                 1302 	.db #0x08
   02EB 0A                 1303 	.db #0x0A
   02EC                    1304 _tri_up:
   02EC 0A                 1305 	.db #0x0A
   02ED 12                 1306 	.db #0x12
   02EE 10                 1307 	.db #0x10
   02EF 00                 1308 	.db #0x00
   02F0 02                 1309 	.db #0x02
   02F1 08                 1310 	.db #0x08
   02F2 0A                 1311 	.db #0x0A
   02F3 12                 1312 	.db #0x12
   02F4 13                 1313 	.db #0x13
   02F5 0B                 1314 	.db #0x0B
   02F6 09                 1315 	.db #0x09
   02F7 03                 1316 	.db #0x03
   02F8 01                 1317 	.db #0x01
   02F9 11                 1318 	.db #0x11
   02FA 13                 1319 	.db #0x13
   02FB 0B                 1320 	.db #0x0B
   02FC 12                 1321 	.db #0x12
   02FD 10                 1322 	.db #0x10
   02FE 00                 1323 	.db #0x00
   02FF 02                 1324 	.db #0x02
   0300 08                 1325 	.db #0x08
   0301 0A                 1326 	.db #0x0A
   0302 12                 1327 	.db #0x12
   0303 10                 1328 	.db #0x10
   0304 11                 1329 	.db #0x11
   0305 13                 1330 	.db #0x13
   0306 0B                 1331 	.db #0x0B
   0307 09                 1332 	.db #0x09
   0308 03                 1333 	.db #0x03
   0309 01                 1334 	.db #0x01
   030A 11                 1335 	.db #0x11
   030B 13                 1336 	.db #0x13
   030C 10                 1337 	.db #0x10
   030D 00                 1338 	.db #0x00
   030E 02                 1339 	.db #0x02
   030F 08                 1340 	.db #0x08
   0310 0A                 1341 	.db #0x0A
   0311 12                 1342 	.db #0x12
   0312 10                 1343 	.db #0x10
   0313 00                 1344 	.db #0x00
   0314 01                 1345 	.db #0x01
   0315 11                 1346 	.db #0x11
   0316 13                 1347 	.db #0x13
   0317 0B                 1348 	.db #0x0B
   0318 09                 1349 	.db #0x09
   0319 03                 1350 	.db #0x03
   031A 01                 1351 	.db #0x01
   031B 11                 1352 	.db #0x11
   031C 00                 1353 	.db #0x00
   031D 02                 1354 	.db #0x02
   031E 08                 1355 	.db #0x08
   031F 0A                 1356 	.db #0x0A
   0320 12                 1357 	.db #0x12
   0321 10                 1358 	.db #0x10
   0322 00                 1359 	.db #0x00
   0323 02                 1360 	.db #0x02
   0324 03                 1361 	.db #0x03
   0325 01                 1362 	.db #0x01
   0326 11                 1363 	.db #0x11
   0327 13                 1364 	.db #0x13
   0328 0B                 1365 	.db #0x0B
   0329 09                 1366 	.db #0x09
   032A 03                 1367 	.db #0x03
   032B 01                 1368 	.db #0x01
   032C 02                 1369 	.db #0x02
   032D 08                 1370 	.db #0x08
   032E 0A                 1371 	.db #0x0A
   032F 12                 1372 	.db #0x12
   0330 10                 1373 	.db #0x10
   0331 00                 1374 	.db #0x00
   0332 02                 1375 	.db #0x02
   0333 08                 1376 	.db #0x08
   0334 09                 1377 	.db #0x09
   0335 03                 1378 	.db #0x03
   0336 01                 1379 	.db #0x01
   0337 11                 1380 	.db #0x11
   0338 13                 1381 	.db #0x13
   0339 0B                 1382 	.db #0x0B
   033A 09                 1383 	.db #0x09
   033B 03                 1384 	.db #0x03
   033C 08                 1385 	.db #0x08
   033D 0A                 1386 	.db #0x0A
   033E 12                 1387 	.db #0x12
   033F 10                 1388 	.db #0x10
   0340 00                 1389 	.db #0x00
   0341 02                 1390 	.db #0x02
   0342 08                 1391 	.db #0x08
   0343 0A                 1392 	.db #0x0A
   0344 0B                 1393 	.db #0x0B
   0345 09                 1394 	.db #0x09
   0346 03                 1395 	.db #0x03
   0347 01                 1396 	.db #0x01
   0348 11                 1397 	.db #0x11
   0349 13                 1398 	.db #0x13
   034A 0B                 1399 	.db #0x0B
   034B 09                 1400 	.db #0x09
   034C 0A                 1401 	.db #0x0A
   034D 12                 1402 	.db #0x12
   034E 10                 1403 	.db #0x10
   034F 00                 1404 	.db #0x00
   0350 02                 1405 	.db #0x02
   0351 08                 1406 	.db #0x08
   0352 0A                 1407 	.db #0x0A
   0353 12                 1408 	.db #0x12
   0354 13                 1409 	.db #0x13
   0355 0B                 1410 	.db #0x0B
   0356 09                 1411 	.db #0x09
   0357 03                 1412 	.db #0x03
   0358 01                 1413 	.db #0x01
   0359 11                 1414 	.db #0x11
   035A 13                 1415 	.db #0x13
   035B 0B                 1416 	.db #0x0B
   035C 12                 1417 	.db #0x12
   035D 10                 1418 	.db #0x10
   035E 00                 1419 	.db #0x00
   035F 02                 1420 	.db #0x02
   0360 08                 1421 	.db #0x08
   0361 0A                 1422 	.db #0x0A
   0362 12                 1423 	.db #0x12
   0363 10                 1424 	.db #0x10
   0364 11                 1425 	.db #0x11
   0365 13                 1426 	.db #0x13
   0366 0B                 1427 	.db #0x0B
   0367 09                 1428 	.db #0x09
   0368 03                 1429 	.db #0x03
   0369 01                 1430 	.db #0x01
   036A 11                 1431 	.db #0x11
   036B 13                 1432 	.db #0x13
   036C 10                 1433 	.db #0x10
   036D 00                 1434 	.db #0x00
   036E 02                 1435 	.db #0x02
   036F 08                 1436 	.db #0x08
   0370 0A                 1437 	.db #0x0A
   0371 12                 1438 	.db #0x12
   0372 10                 1439 	.db #0x10
   0373 00                 1440 	.db #0x00
   0374 01                 1441 	.db #0x01
   0375 11                 1442 	.db #0x11
   0376 13                 1443 	.db #0x13
   0377 0B                 1444 	.db #0x0B
   0378 09                 1445 	.db #0x09
   0379 03                 1446 	.db #0x03
   037A 01                 1447 	.db #0x01
   037B 11                 1448 	.db #0x11
   037C 00                 1449 	.db #0x00
   037D 02                 1450 	.db #0x02
   037E 08                 1451 	.db #0x08
   037F 0A                 1452 	.db #0x0A
   0380 12                 1453 	.db #0x12
   0381 10                 1454 	.db #0x10
   0382 00                 1455 	.db #0x00
   0383 02                 1456 	.db #0x02
   0384 03                 1457 	.db #0x03
   0385 01                 1458 	.db #0x01
   0386 11                 1459 	.db #0x11
   0387 13                 1460 	.db #0x13
   0388 0B                 1461 	.db #0x0B
   0389 09                 1462 	.db #0x09
   038A 03                 1463 	.db #0x03
   038B 01                 1464 	.db #0x01
   038C 02                 1465 	.db #0x02
   038D 08                 1466 	.db #0x08
   038E 0A                 1467 	.db #0x0A
   038F 12                 1468 	.db #0x12
   0390 10                 1469 	.db #0x10
   0391 00                 1470 	.db #0x00
   0392 02                 1471 	.db #0x02
   0393 08                 1472 	.db #0x08
   0394 09                 1473 	.db #0x09
   0395 03                 1474 	.db #0x03
   0396 01                 1475 	.db #0x01
   0397 11                 1476 	.db #0x11
   0398 13                 1477 	.db #0x13
   0399 0B                 1478 	.db #0x0B
   039A 09                 1479 	.db #0x09
   039B 03                 1480 	.db #0x03
   039C 08                 1481 	.db #0x08
   039D 0A                 1482 	.db #0x0A
   039E 12                 1483 	.db #0x12
   039F 10                 1484 	.db #0x10
   03A0 00                 1485 	.db #0x00
   03A1 02                 1486 	.db #0x02
   03A2 08                 1487 	.db #0x08
   03A3 0A                 1488 	.db #0x0A
   03A4 0B                 1489 	.db #0x0B
   03A5 09                 1490 	.db #0x09
   03A6 03                 1491 	.db #0x03
   03A7 01                 1492 	.db #0x01
   03A8 11                 1493 	.db #0x11
   03A9 13                 1494 	.db #0x13
   03AA 0B                 1495 	.db #0x0B
   03AB 09                 1496 	.db #0x09
                           1497 ;demo.c:95: void my_isr(void) interrupt
                           1498 ;	---------------------------------
                           1499 ; Function my_isr
                           1500 ; ---------------------------------
   03AC                    1501 _my_isr_start::
   03AC                    1502 _my_isr:
   03AC F5                 1503 	push	af
   03AD C5                 1504 	push	bc
   03AE D5                 1505 	push	de
   03AF E5                 1506 	push	hl
   03B0 FD E5              1507 	push	iy
                           1508 ;demo.c:97: DI;
   03B2 F3                 1509 		di 
                           1510 ;demo.c:99: READ_VDP_STATUS;
   03B3 DB 99              1511 		in a,(#0x99) 
                           1512 ;demo.c:101: PLY_Play();
   03B5 CDr00s00           1513 	call	_PLY_Play
                           1514 ;demo.c:102: PLY_SendRegisters();
   03B8 CDr00s00           1515 	call	_PLY_SendRegisters
                           1516 ;demo.c:104: vbicount+=1;
   03BB FD 21r20s8F        1517 	ld	iy,#_vbicount
   03BF FD 34 00           1518 	inc	0 (iy)
   03C2 20 07              1519 	jr	NZ,00103$
   03C4 FD 21r20s8F        1520 	ld	iy,#_vbicount
   03C8 FD 34 01           1521 	inc	1 (iy)
   03CB                    1522 00103$:
                           1523 ;demo.c:105: tick++;
   03CB FD 21r22s8F        1524 	ld	iy,#_tick
   03CF FD 34 00           1525 	inc	0 (iy)
   03D2 20 07              1526 	jr	NZ,00104$
   03D4 FD 21r22s8F        1527 	ld	iy,#_tick
   03D8 FD 34 01           1528 	inc	1 (iy)
   03DB                    1529 00104$:
                           1530 ;demo.c:107: EI;
   03DB FB                 1531 		ei 
   03DC FD E1              1532 	pop	iy
   03DE E1                 1533 	pop	hl
   03DF D1                 1534 	pop	de
   03E0 C1                 1535 	pop	bc
   03E1 F1                 1536 	pop	af
   03E2 ED 4D              1537 	reti
   03E4                    1538 _my_isr_end::
                           1539 ;demo.c:110: void color_isr(void) interrupt
                           1540 ;	---------------------------------
                           1541 ; Function color_isr
                           1542 ; ---------------------------------
   03E4                    1543 _color_isr_start::
   03E4                    1544 _color_isr:
   03E4 F5                 1545 	push	af
   03E5 C5                 1546 	push	bc
   03E6 D5                 1547 	push	de
   03E7 E5                 1548 	push	hl
   03E8 FD E5              1549 	push	iy
                           1550 ;demo.c:112: DI;
   03EA F3                 1551 		di 
                           1552 ;demo.c:114: if(isNthBitSet(vdp2_status(1),0)) {
   03EB 3E 01              1553 	ld	a,#0x01
   03ED F5                 1554 	push	af
   03EE 33                 1555 	inc	sp
   03EF CDr00s00           1556 	call	_vdp2_status
   03F2 33                 1557 	inc	sp
   03F3 4D                 1558 	ld	c,l
   03F4 21 00 00           1559 	ld	hl,#0x0000
   03F7 E5                 1560 	push	hl
   03F8 79                 1561 	ld	a,c
   03F9 F5                 1562 	push	af
   03FA 33                 1563 	inc	sp
   03FB CDr00s00           1564 	call	_isNthBitSet
   03FE F1                 1565 	pop	af
   03FF 33                 1566 	inc	sp
   0400 44                 1567 	ld	b,h
   0401 4D                 1568 	ld	c,l
   0402 79                 1569 	ld	a,c
   0403 B0                 1570 	or	a,b
   0404 28 19              1571 	jr	Z,00102$
                           1572 ;demo.c:115: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0406 21r20s8F           1573 	ld	hl,#_vbicount + 0
   0409 4E                 1574 	ld	c,(hl)
   040A 06 00              1575 	ld	b,#0x00
   040C 21r00s00           1576 	ld	hl,#_sintab
   040F 09                 1577 	add	hl,bc
   0410 7E                 1578 	ld	a,(hl)
   0411 F5                 1579 	push	af
   0412 33                 1580 	inc	sp
   0413 3E 17              1581 	ld	a,#0x17
   0415 F5                 1582 	push	af
   0416 33                 1583 	inc	sp
   0417 CDr00s00           1584 	call	_vdp_register
   041A F1                 1585 	pop	af
                           1586 ;demo.c:116: READ_VDP_STATUS;
   041B DB 99              1587 		in a,(#0x99) 
   041D 18 18              1588 	jr	00103$
   041F                    1589 00102$:
                           1590 ;demo.c:119: READ_VDP_STATUS;
   041F DB 99              1591 		in a,(#0x99) 
                           1592 ;demo.c:120: vbicount++;
   0421 FD 21r20s8F        1593 	ld	iy,#_vbicount
   0425 FD 34 00           1594 	inc	0 (iy)
   0428 20 07              1595 	jr	NZ,00107$
   042A FD 21r20s8F        1596 	ld	iy,#_vbicount
   042E FD 34 01           1597 	inc	1 (iy)
   0431                    1598 00107$:
                           1599 ;demo.c:123: PLY_Play();
   0431 CDr00s00           1600 	call	_PLY_Play
                           1601 ;demo.c:124: PLY_SendRegisters();
   0434 CDr00s00           1602 	call	_PLY_SendRegisters
   0437                    1603 00103$:
                           1604 ;demo.c:127: EI;
   0437 FB                 1605 		ei 
   0438 FD E1              1606 	pop	iy
   043A E1                 1607 	pop	hl
   043B D1                 1608 	pop	de
   043C C1                 1609 	pop	bc
   043D F1                 1610 	pop	af
   043E ED 4D              1611 	reti
   0440                    1612 _color_isr_end::
                           1613 ;demo.c:134: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           1614 ;	---------------------------------
                           1615 ; Function ge5_load
                           1616 ; ---------------------------------
   0440                    1617 _ge5_load_start::
   0440                    1618 _ge5_load:
   0440 DD E5              1619 	push	ix
   0442 DD 21 00 00        1620 	ld	ix,#0
   0446 DD 39              1621 	add	ix,sp
   0448 21 D2 FF           1622 	ld	hl,#-46
   044B 39                 1623 	add	hl,sp
   044C F9                 1624 	ld	sp,hl
                           1625 ;demo.c:138: if(debugprint == 1) {
   044D DD 7E 09           1626 	ld	a,9 (ix)
   0450 D6 01              1627 	sub	a,#0x01
   0452 20 06              1628 	jr	NZ,00125$
   0454 DD 7E 0A           1629 	ld	a,10 (ix)
   0457 B7                 1630 	or	a,a
   0458 28 02              1631 	jr	Z,00126$
   045A                    1632 00125$:
   045A 18 1B              1633 	jr	00102$
   045C                    1634 00126$:
                           1635 ;demo.c:139: puts("loading ge5file: ");
   045C 21r3Bs05           1636 	ld	hl,#__str_0
   045F E5                 1637 	push	hl
   0460 CDr00s00           1638 	call	_puts
   0463 F1                 1639 	pop	af
                           1640 ;demo.c:140: puts(file_name);
   0464 DD 6E 04           1641 	ld	l,4 (ix)
   0467 DD 66 05           1642 	ld	h,5 (ix)
   046A E5                 1643 	push	hl
   046B CDr00s00           1644 	call	_puts
   046E F1                 1645 	pop	af
                           1646 ;demo.c:141: puts("\r\n");
   046F 21r4Ds05           1647 	ld	hl,#__str_1
   0472 E5                 1648 	push	hl
   0473 CDr00s00           1649 	call	_puts
   0476 F1                 1650 	pop	af
   0477                    1651 00102$:
                           1652 ;demo.c:144: memset((uint8_t *) &f, 0, sizeof(fcb));
   0477 21 00 00           1653 	ld	hl,#0x0000
   047A 39                 1654 	add	hl,sp
   047B 4D                 1655 	ld	c,l
   047C 44                 1656 	ld	b,h
   047D 21 2E 00           1657 	ld	hl,#0x002E
   0480 E5                 1658 	push	hl
   0481 3E 00              1659 	ld	a,#0x00
   0483 F5                 1660 	push	af
   0484 33                 1661 	inc	sp
   0485 C5                 1662 	push	bc
   0486 CDr00s00           1663 	call	_memset
   0489 F1                 1664 	pop	af
   048A F1                 1665 	pop	af
   048B 33                 1666 	inc	sp
                           1667 ;demo.c:146: f.record_size = 128;
   048C 21 00 00           1668 	ld	hl,#0x0000
   048F 39                 1669 	add	hl,sp
   0490 4D                 1670 	ld	c,l
   0491 44                 1671 	ld	b,h
   0492 21 0F 00           1672 	ld	hl,#0x000F
   0495 09                 1673 	add	hl,bc
   0496 EB                 1674 	ex	de,hl
   0497 3E 80              1675 	ld	a,#0x80
   0499 12                 1676 	ld	(de),a
                           1677 ;demo.c:147: f.drive = 0;
   049A 3E 00              1678 	ld	a,#0x00
   049C 02                 1679 	ld	(bc),a
                           1680 ;demo.c:149: memcpy(f.name, file_name, 11);
   049D DD 5E 04           1681 	ld	e,4 (ix)
   04A0 DD 56 05           1682 	ld	d,5 (ix)
   04A3 03                 1683 	inc	bc
   04A4 21 0B 00           1684 	ld	hl,#0x000B
   04A7 E5                 1685 	push	hl
   04A8 D5                 1686 	push	de
   04A9 C5                 1687 	push	bc
   04AA CDr00s00           1688 	call	_memcpy
   04AD F1                 1689 	pop	af
   04AE F1                 1690 	pop	af
   04AF F1                 1691 	pop	af
                           1692 ;demo.c:151: if (open(&f) != 0) return 0;
   04B0 21 00 00           1693 	ld	hl,#0x0000
   04B3 39                 1694 	add	hl,sp
   04B4 E5                 1695 	push	hl
   04B5 CDr00s00           1696 	call	_open
   04B8 F1                 1697 	pop	af
   04B9 AF                 1698 	xor	a,a
   04BA B5                 1699 	or	a,l
   04BB 28 05              1700 	jr	Z,00104$
   04BD 2E 00              1701 	ld	l,#0x00
   04BF C3r36s05           1702 	jp	00116$
   04C2                    1703 00104$:
                           1704 ;demo.c:152: vdp_set_write_address(vramh, vraml);
   04C2 DD 6E 07           1705 	ld	l,7 (ix)
   04C5 DD 66 08           1706 	ld	h,8 (ix)
   04C8 E5                 1707 	push	hl
   04C9 DD 7E 06           1708 	ld	a,6 (ix)
   04CC F5                 1709 	push	af
   04CD 33                 1710 	inc	sp
   04CE CDr00s00           1711 	call	_vdp_set_write_address
   04D1 F1                 1712 	pop	af
   04D2 33                 1713 	inc	sp
                           1714 ;demo.c:154: for (i = 0; i < 213; i++) {
   04D3 0E 00              1715 	ld	c,#0x00
   04D5                    1716 00112$:
   04D5 79                 1717 	ld	a,c
   04D6 D6 D5              1718 	sub	a,#0xD5
   04D8 D2r2Bs05           1719 	jp	NC,00115$
                           1720 ;demo.c:155: if (block_set_data_ptr(scratch) != 0) return 0;
   04DB C5                 1721 	push	bc
   04DC 21r00s8E           1722 	ld	hl,#_scratch
   04DF E5                 1723 	push	hl
   04E0 CDr00s00           1724 	call	_block_set_data_ptr
   04E3 F1                 1725 	pop	af
   04E4 7D                 1726 	ld	a,l
   04E5 C1                 1727 	pop	bc
   04E6 47                 1728 	ld	b,a
   04E7 B7                 1729 	or	a,a
   04E8 28 05              1730 	jr	Z,00106$
   04EA 2E 00              1731 	ld	l,#0x00
   04EC C3r36s05           1732 	jp	00116$
   04EF                    1733 00106$:
                           1734 ;demo.c:156: if (block_read(&f) != 0) return 0;
   04EF 21 00 00           1735 	ld	hl,#0x0000
   04F2 39                 1736 	add	hl,sp
   04F3 C5                 1737 	push	bc
   04F4 E5                 1738 	push	hl
   04F5 CDr00s00           1739 	call	_block_read
   04F8 F1                 1740 	pop	af
   04F9 7D                 1741 	ld	a,l
   04FA C1                 1742 	pop	bc
   04FB 47                 1743 	ld	b,a
   04FC B7                 1744 	or	a,a
   04FD 28 04              1745 	jr	Z,00108$
   04FF 2E 00              1746 	ld	l,#0x00
   0501 18 33              1747 	jr	00116$
   0503                    1748 00108$:
                           1749 ;demo.c:158: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0503 AF                 1750 	xor	a,a
   0504 B1                 1751 	or	a,c
   0505 20 11              1752 	jr	NZ,00110$
   0507 11r07s8E           1753 	ld	de,#_scratch + 7
   050A C5                 1754 	push	bc
   050B 3E 79              1755 	ld	a,#0x79
   050D F5                 1756 	push	af
   050E 33                 1757 	inc	sp
   050F D5                 1758 	push	de
   0510 CDr00s00           1759 	call	_vdp_load_screen
   0513 F1                 1760 	pop	af
   0514 33                 1761 	inc	sp
   0515 C1                 1762 	pop	bc
   0516 18 0F              1763 	jr	00114$
   0518                    1764 00110$:
                           1765 ;demo.c:159: else vdp_load_screen(scratch, 128);
   0518 C5                 1766 	push	bc
   0519 3E 80              1767 	ld	a,#0x80
   051B F5                 1768 	push	af
   051C 33                 1769 	inc	sp
   051D 21r00s8E           1770 	ld	hl,#_scratch
   0520 E5                 1771 	push	hl
   0521 CDr00s00           1772 	call	_vdp_load_screen
   0524 F1                 1773 	pop	af
   0525 33                 1774 	inc	sp
   0526 C1                 1775 	pop	bc
   0527                    1776 00114$:
                           1777 ;demo.c:154: for (i = 0; i < 213; i++) {
   0527 0C                 1778 	inc	c
   0528 C3rD5s04           1779 	jp	00112$
   052B                    1780 00115$:
                           1781 ;demo.c:162: close(&f);
   052B 21 00 00           1782 	ld	hl,#0x0000
   052E 39                 1783 	add	hl,sp
   052F E5                 1784 	push	hl
   0530 CDr00s00           1785 	call	_close
   0533 F1                 1786 	pop	af
                           1787 ;demo.c:164: return 1;
   0534 2E 01              1788 	ld	l,#0x01
   0536                    1789 00116$:
   0536 DD F9              1790 	ld	sp,ix
   0538 DD E1              1791 	pop	ix
   053A C9                 1792 	ret
   053B                    1793 _ge5_load_end::
   053B                    1794 __str_0:
   053B 6C 6F 61 64 69 6E  1795 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   054C 00                 1796 	.db 0x00
   054D                    1797 __str_1:
   054D 0D                 1798 	.db 0x0D
   054E 0A                 1799 	.db 0x0A
   054F 00                 1800 	.db 0x00
                           1801 ;demo.c:167: void scratch_clear() {
                           1802 ;	---------------------------------
                           1803 ; Function scratch_clear
                           1804 ; ---------------------------------
   0550                    1805 _scratch_clear_start::
   0550                    1806 _scratch_clear:
                           1807 ;demo.c:168: memset((uint8_t *) &scratch, 0, 128);
   0550 21 80 00           1808 	ld	hl,#0x0080
   0553 E5                 1809 	push	hl
   0554 3E 00              1810 	ld	a,#0x00
   0556 F5                 1811 	push	af
   0557 33                 1812 	inc	sp
   0558 21r00s8E           1813 	ld	hl,#_scratch
   055B E5                 1814 	push	hl
   055C CDr00s00           1815 	call	_memset
   055F F1                 1816 	pop	af
   0560 F1                 1817 	pop	af
   0561 33                 1818 	inc	sp
   0562 C9                 1819 	ret
   0563                    1820 _scratch_clear_end::
                           1821 ;demo.c:171: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           1822 ;	---------------------------------
                           1823 ; Function pal_load
                           1824 ; ---------------------------------
   0563                    1825 _pal_load_start::
   0563                    1826 _pal_load:
   0563 DD E5              1827 	push	ix
   0565 DD 21 00 00        1828 	ld	ix,#0
   0569 DD 39              1829 	add	ix,sp
   056B 21 D2 FF           1830 	ld	hl,#-46
   056E 39                 1831 	add	hl,sp
   056F F9                 1832 	ld	sp,hl
                           1833 ;demo.c:174: if(debugprint == 1) {
   0570 DD 7E 07           1834 	ld	a,7 (ix)
   0573 D6 01              1835 	sub	a,#0x01
   0575 20 06              1836 	jr	NZ,00115$
   0577 DD 7E 08           1837 	ld	a,8 (ix)
   057A B7                 1838 	or	a,a
   057B 28 02              1839 	jr	Z,00116$
   057D                    1840 00115$:
   057D 18 1B              1841 	jr	00102$
   057F                    1842 00116$:
                           1843 ;demo.c:175: puts("loading palfile: ");
   057F 21r2Ds06           1844 	ld	hl,#__str_2
   0582 E5                 1845 	push	hl
   0583 CDr00s00           1846 	call	_puts
   0586 F1                 1847 	pop	af
                           1848 ;demo.c:176: puts(file_name);
   0587 DD 6E 04           1849 	ld	l,4 (ix)
   058A DD 66 05           1850 	ld	h,5 (ix)
   058D E5                 1851 	push	hl
   058E CDr00s00           1852 	call	_puts
   0591 F1                 1853 	pop	af
                           1854 ;demo.c:177: puts("\r\n");
   0592 21r3Fs06           1855 	ld	hl,#__str_3
   0595 E5                 1856 	push	hl
   0596 CDr00s00           1857 	call	_puts
   0599 F1                 1858 	pop	af
   059A                    1859 00102$:
                           1860 ;demo.c:180: memset((uint8_t *) &f, 0, sizeof(fcb));
   059A 21 00 00           1861 	ld	hl,#0x0000
   059D 39                 1862 	add	hl,sp
   059E 4D                 1863 	ld	c,l
   059F 44                 1864 	ld	b,h
   05A0 21 2E 00           1865 	ld	hl,#0x002E
   05A3 E5                 1866 	push	hl
   05A4 3E 00              1867 	ld	a,#0x00
   05A6 F5                 1868 	push	af
   05A7 33                 1869 	inc	sp
   05A8 C5                 1870 	push	bc
   05A9 CDr00s00           1871 	call	_memset
   05AC F1                 1872 	pop	af
   05AD F1                 1873 	pop	af
   05AE 33                 1874 	inc	sp
                           1875 ;demo.c:181: scratch_clear();
   05AF CDr50s05           1876 	call	_scratch_clear
                           1877 ;demo.c:183: f.record_size = ss;
   05B2 21 00 00           1878 	ld	hl,#0x0000
   05B5 39                 1879 	add	hl,sp
   05B6 4D                 1880 	ld	c,l
   05B7 44                 1881 	ld	b,h
   05B8 21 0F 00           1882 	ld	hl,#0x000F
   05BB 09                 1883 	add	hl,bc
   05BC EB                 1884 	ex	de,hl
   05BD DD 7E 06           1885 	ld	a,6 (ix)
   05C0 12                 1886 	ld	(de),a
                           1887 ;demo.c:184: f.drive = 0;
   05C1 3E 00              1888 	ld	a,#0x00
   05C3 02                 1889 	ld	(bc),a
                           1890 ;demo.c:186: memcpy(f.name, file_name, 11);
   05C4 DD 5E 04           1891 	ld	e,4 (ix)
   05C7 DD 56 05           1892 	ld	d,5 (ix)
   05CA 03                 1893 	inc	bc
   05CB 21 0B 00           1894 	ld	hl,#0x000B
   05CE E5                 1895 	push	hl
   05CF D5                 1896 	push	de
   05D0 C5                 1897 	push	bc
   05D1 CDr00s00           1898 	call	_memcpy
   05D4 F1                 1899 	pop	af
   05D5 F1                 1900 	pop	af
   05D6 F1                 1901 	pop	af
                           1902 ;demo.c:188: if (open(&f) != 0) return 0;
   05D7 21 00 00           1903 	ld	hl,#0x0000
   05DA 39                 1904 	add	hl,sp
   05DB E5                 1905 	push	hl
   05DC CDr00s00           1906 	call	_open
   05DF F1                 1907 	pop	af
   05E0 AF                 1908 	xor	a,a
   05E1 B5                 1909 	or	a,l
   05E2 28 04              1910 	jr	Z,00104$
   05E4 2E 00              1911 	ld	l,#0x00
   05E6 18 40              1912 	jr	00109$
   05E8                    1913 00104$:
                           1914 ;demo.c:189: if (block_set_data_ptr(scratch) != 0) return 0;
   05E8 21r00s8E           1915 	ld	hl,#_scratch
   05EB E5                 1916 	push	hl
   05EC CDr00s00           1917 	call	_block_set_data_ptr
   05EF F1                 1918 	pop	af
   05F0 AF                 1919 	xor	a,a
   05F1 B5                 1920 	or	a,l
   05F2 28 04              1921 	jr	Z,00106$
   05F4 2E 00              1922 	ld	l,#0x00
   05F6 18 30              1923 	jr	00109$
   05F8                    1924 00106$:
                           1925 ;demo.c:190: if (block_read(&f) != 0) return 0;
   05F8 21 00 00           1926 	ld	hl,#0x0000
   05FB 39                 1927 	add	hl,sp
   05FC E5                 1928 	push	hl
   05FD CDr00s00           1929 	call	_block_read
   0600 F1                 1930 	pop	af
   0601 AF                 1931 	xor	a,a
   0602 B5                 1932 	or	a,l
   0603 28 04              1933 	jr	Z,00108$
   0605 2E 00              1934 	ld	l,#0x00
   0607 18 1F              1935 	jr	00109$
   0609                    1936 00108$:
                           1937 ;demo.c:192: memcpy(cur_palette, scratch+7, ss);
   0609 DD 4E 06           1938 	ld	c,6 (ix)
   060C 06 00              1939 	ld	b,#0x00
   060E 11r07s8E           1940 	ld	de,#_scratch + 7
   0611 C5                 1941 	push	bc
   0612 D5                 1942 	push	de
   0613 21r80s8E           1943 	ld	hl,#_cur_palette
   0616 E5                 1944 	push	hl
   0617 CDr00s00           1945 	call	_memcpy
   061A F1                 1946 	pop	af
   061B F1                 1947 	pop	af
   061C F1                 1948 	pop	af
                           1949 ;demo.c:194: close(&f);
   061D 21 00 00           1950 	ld	hl,#0x0000
   0620 39                 1951 	add	hl,sp
   0621 E5                 1952 	push	hl
   0622 CDr00s00           1953 	call	_close
   0625 F1                 1954 	pop	af
                           1955 ;demo.c:195: return 1;
   0626 2E 01              1956 	ld	l,#0x01
   0628                    1957 00109$:
   0628 DD F9              1958 	ld	sp,ix
   062A DD E1              1959 	pop	ix
   062C C9                 1960 	ret
   062D                    1961 _pal_load_end::
   062D                    1962 __str_2:
   062D 6C 6F 61 64 69 6E  1963 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   063E 00                 1964 	.db 0x00
   063F                    1965 __str_3:
   063F 0D                 1966 	.db 0x0D
   0640 0A                 1967 	.db 0x0A
   0641 00                 1968 	.db 0x00
                           1969 ;demo.c:199: void pause() {
                           1970 ;	---------------------------------
                           1971 ; Function pause
                           1972 ; ---------------------------------
   0642                    1973 _pause_start::
   0642                    1974 _pause:
                           1975 ;demo.c:200: uint8_t i,j,k = 0;
                           1976 ;demo.c:201: for (i = 0; i < 255; i++) {	
   0642 01 00 00           1977 	ld	bc,#0x0000
   0645                    1978 00104$:
   0645 78                 1979 	ld	a,b
   0646 D6 FF              1980 	sub	a,#0xFF
   0648 D0                 1981 	ret	NC
                           1982 ;demo.c:202: for (j = 0; j < 255; j++) {
   0649 59                 1983 	ld	e,c
   064A 16 FF              1984 	ld	d,#0xFF
   064C                    1985 00103$:
                           1986 ;demo.c:203: k++;
   064C 1C                 1987 	inc	e
   064D 15                 1988 	dec	d
                           1989 ;demo.c:202: for (j = 0; j < 255; j++) {
   064E AF                 1990 	xor	a,a
   064F B2                 1991 	or	a,d
   0650 20 FA              1992 	jr	NZ,00103$
                           1993 ;demo.c:201: for (i = 0; i < 255; i++) {	
   0652 4B                 1994 	ld	c,e
   0653 04                 1995 	inc	b
   0654 18 EF              1996 	jr	00104$
   0656                    1997 _pause_end::
                           1998 ;demo.c:209: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           1999 ;	---------------------------------
                           2000 ; Function raw_load
                           2001 ; ---------------------------------
   0656                    2002 _raw_load_start::
   0656                    2003 _raw_load:
   0656 DD E5              2004 	push	ix
   0658 DD 21 00 00        2005 	ld	ix,#0
   065C DD 39              2006 	add	ix,sp
   065E 21 D2 FF           2007 	ld	hl,#-46
   0661 39                 2008 	add	hl,sp
   0662 F9                 2009 	ld	sp,hl
                           2010 ;demo.c:214: if(debugprint == 1) {
   0663 DD 7E 0A           2011 	ld	a,10 (ix)
   0666 D6 01              2012 	sub	a,#0x01
   0668 20 06              2013 	jr	NZ,00120$
   066A DD 7E 0B           2014 	ld	a,11 (ix)
   066D B7                 2015 	or	a,a
   066E 28 02              2016 	jr	Z,00121$
   0670                    2017 00120$:
   0670 18 1B              2018 	jr	00102$
   0672                    2019 00121$:
                           2020 ;demo.c:215: puts("loading rawfile: ");
   0672 21r44s07           2021 	ld	hl,#__str_4
   0675 E5                 2022 	push	hl
   0676 CDr00s00           2023 	call	_puts
   0679 F1                 2024 	pop	af
                           2025 ;demo.c:216: puts(file_name);
   067A DD 6E 04           2026 	ld	l,4 (ix)
   067D DD 66 05           2027 	ld	h,5 (ix)
   0680 E5                 2028 	push	hl
   0681 CDr00s00           2029 	call	_puts
   0684 F1                 2030 	pop	af
                           2031 ;demo.c:217: puts("\r\n");
   0685 21r56s07           2032 	ld	hl,#__str_5
   0688 E5                 2033 	push	hl
   0689 CDr00s00           2034 	call	_puts
   068C F1                 2035 	pop	af
   068D                    2036 00102$:
                           2037 ;demo.c:220: memset((uint8_t *) &f, 0, sizeof(fcb));
   068D 21 00 00           2038 	ld	hl,#0x0000
   0690 39                 2039 	add	hl,sp
   0691 4D                 2040 	ld	c,l
   0692 44                 2041 	ld	b,h
   0693 21 2E 00           2042 	ld	hl,#0x002E
   0696 E5                 2043 	push	hl
   0697 3E 00              2044 	ld	a,#0x00
   0699 F5                 2045 	push	af
   069A 33                 2046 	inc	sp
   069B C5                 2047 	push	bc
   069C CDr00s00           2048 	call	_memset
   069F F1                 2049 	pop	af
   06A0 F1                 2050 	pop	af
   06A1 33                 2051 	inc	sp
                           2052 ;demo.c:221: scratch_clear();
   06A2 CDr50s05           2053 	call	_scratch_clear
                           2054 ;demo.c:223: f.record_size = 128;
   06A5 21 00 00           2055 	ld	hl,#0x0000
   06A8 39                 2056 	add	hl,sp
   06A9 4D                 2057 	ld	c,l
   06AA 44                 2058 	ld	b,h
   06AB 21 0F 00           2059 	ld	hl,#0x000F
   06AE 09                 2060 	add	hl,bc
   06AF EB                 2061 	ex	de,hl
   06B0 3E 80              2062 	ld	a,#0x80
   06B2 12                 2063 	ld	(de),a
                           2064 ;demo.c:224: f.drive = 0;
   06B3 3E 00              2065 	ld	a,#0x00
   06B5 02                 2066 	ld	(bc),a
                           2067 ;demo.c:226: memcpy(f.name, file_name, 11);
   06B6 DD 5E 04           2068 	ld	e,4 (ix)
   06B9 DD 56 05           2069 	ld	d,5 (ix)
   06BC 03                 2070 	inc	bc
   06BD 21 0B 00           2071 	ld	hl,#0x000B
   06C0 E5                 2072 	push	hl
   06C1 D5                 2073 	push	de
   06C2 C5                 2074 	push	bc
   06C3 CDr00s00           2075 	call	_memcpy
   06C6 F1                 2076 	pop	af
   06C7 F1                 2077 	pop	af
   06C8 F1                 2078 	pop	af
                           2079 ;demo.c:228: if (open(&f) != 0) return 0;
   06C9 21 00 00           2080 	ld	hl,#0x0000
   06CC 39                 2081 	add	hl,sp
   06CD E5                 2082 	push	hl
   06CE CDr00s00           2083 	call	_open
   06D1 F1                 2084 	pop	af
   06D2 AF                 2085 	xor	a,a
   06D3 B5                 2086 	or	a,l
   06D4 28 05              2087 	jr	Z,00119$
   06D6 2E 00              2088 	ld	l,#0x00
   06D8 C3r3Fs07           2089 	jp	00112$
                           2090 ;demo.c:230: while(total < size) {
   06DB                    2091 00119$:
   06DB 01 00 00           2092 	ld	bc,#0x0000
   06DE                    2093 00109$:
   06DE 79                 2094 	ld	a,c
   06DF DD 96 06           2095 	sub	a,6 (ix)
   06E2 78                 2096 	ld	a,b
   06E3 DD 9E 07           2097 	sbc	a,7 (ix)
   06E6 F2r34s07           2098 	jp	P,00111$
                           2099 ;demo.c:231: if (block_set_data_ptr(scratch) != 0) return 0;
   06E9 C5                 2100 	push	bc
   06EA 21r00s8E           2101 	ld	hl,#_scratch
   06ED E5                 2102 	push	hl
   06EE CDr00s00           2103 	call	_block_set_data_ptr
   06F1 F1                 2104 	pop	af
   06F2 5D                 2105 	ld	e,l
   06F3 C1                 2106 	pop	bc
   06F4 AF                 2107 	xor	a,a
   06F5 B3                 2108 	or	a,e
   06F6 28 04              2109 	jr	Z,00106$
   06F8 2E 00              2110 	ld	l,#0x00
   06FA 18 43              2111 	jr	00112$
   06FC                    2112 00106$:
                           2113 ;demo.c:232: if (block_read(&f) != 0) return 0;
   06FC 21 00 00           2114 	ld	hl,#0x0000
   06FF 39                 2115 	add	hl,sp
   0700 C5                 2116 	push	bc
   0701 E5                 2117 	push	hl
   0702 CDr00s00           2118 	call	_block_read
   0705 F1                 2119 	pop	af
   0706 5D                 2120 	ld	e,l
   0707 C1                 2121 	pop	bc
   0708 AF                 2122 	xor	a,a
   0709 B3                 2123 	or	a,e
   070A 28 04              2124 	jr	Z,00108$
   070C 2E 00              2125 	ld	l,#0x00
   070E 18 2F              2126 	jr	00112$
   0710                    2127 00108$:
                           2128 ;demo.c:234: memcpy(buffer+total,scratch,incr);
   0710 DD 7E 08           2129 	ld	a,8 (ix)
   0713 81                 2130 	add	a,c
   0714 5F                 2131 	ld	e,a
   0715 DD 7E 09           2132 	ld	a,9 (ix)
   0718 88                 2133 	adc	a,b
   0719 57                 2134 	ld	d,a
   071A C5                 2135 	push	bc
   071B 21 80 00           2136 	ld	hl,#0x0080
   071E E5                 2137 	push	hl
   071F 21r00s8E           2138 	ld	hl,#_scratch
   0722 E5                 2139 	push	hl
   0723 D5                 2140 	push	de
   0724 CDr00s00           2141 	call	_memcpy
   0727 F1                 2142 	pop	af
   0728 F1                 2143 	pop	af
   0729 F1                 2144 	pop	af
   072A C1                 2145 	pop	bc
                           2146 ;demo.c:236: total+=incr;
   072B 21 80 00           2147 	ld	hl,#0x0080
   072E 09                 2148 	add	hl,bc
   072F 4D                 2149 	ld	c,l
   0730 44                 2150 	ld	b,h
   0731 C3rDEs06           2151 	jp	00109$
   0734                    2152 00111$:
                           2153 ;demo.c:239: close(&f);
   0734 21 00 00           2154 	ld	hl,#0x0000
   0737 39                 2155 	add	hl,sp
   0738 E5                 2156 	push	hl
   0739 CDr00s00           2157 	call	_close
   073C F1                 2158 	pop	af
                           2159 ;demo.c:241: return 1;
   073D 2E 01              2160 	ld	l,#0x01
   073F                    2161 00112$:
   073F DD F9              2162 	ld	sp,ix
   0741 DD E1              2163 	pop	ix
   0743 C9                 2164 	ret
   0744                    2165 _raw_load_end::
   0744                    2166 __str_4:
   0744 6C 6F 61 64 69 6E  2167 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0755 00                 2168 	.db 0x00
   0756                    2169 __str_5:
   0756 0D                 2170 	.db 0x0D
   0757 0A                 2171 	.db 0x0A
   0758 00                 2172 	.db 0x00
                           2173 ;demo.c:244: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2174 ;	---------------------------------
                           2175 ; Function pck_load
                           2176 ; ---------------------------------
   0759                    2177 _pck_load_start::
   0759                    2178 _pck_load:
   0759 DD E5              2179 	push	ix
   075B DD 21 00 00        2180 	ld	ix,#0
   075F DD 39              2181 	add	ix,sp
                           2182 ;demo.c:245: if(debugprint == 1) {
   0761 DD 7E 0C           2183 	ld	a,12 (ix)
   0764 D6 01              2184 	sub	a,#0x01
   0766 20 06              2185 	jr	NZ,00106$
   0768 DD 7E 0D           2186 	ld	a,13 (ix)
   076B B7                 2187 	or	a,a
   076C 28 02              2188 	jr	Z,00107$
   076E                    2189 00106$:
   076E 18 1B              2190 	jr	00102$
   0770                    2191 00107$:
                           2192 ;demo.c:246: puts("loading pckfile: ");
   0770 21rD2s07           2193 	ld	hl,#__str_6
   0773 E5                 2194 	push	hl
   0774 CDr00s00           2195 	call	_puts
   0777 F1                 2196 	pop	af
                           2197 ;demo.c:247: puts(file_name);
   0778 DD 6E 04           2198 	ld	l,4 (ix)
   077B DD 66 05           2199 	ld	h,5 (ix)
   077E E5                 2200 	push	hl
   077F CDr00s00           2201 	call	_puts
   0782 F1                 2202 	pop	af
                           2203 ;demo.c:248: puts("\r\n");
   0783 21rE4s07           2204 	ld	hl,#__str_7
   0786 E5                 2205 	push	hl
   0787 CDr00s00           2206 	call	_puts
   078A F1                 2207 	pop	af
   078B                    2208 00102$:
                           2209 ;demo.c:250: memset((uint8_t *) &packbuffer, 0, size);
   078B DD 4E 06           2210 	ld	c,6 (ix)
   078E DD 46 07           2211 	ld	b,7 (ix)
   0791 C5                 2212 	push	bc
   0792 C5                 2213 	push	bc
   0793 3E 00              2214 	ld	a,#0x00
   0795 F5                 2215 	push	af
   0796 33                 2216 	inc	sp
   0797 21r60s01           2217 	ld	hl,#_packbuffer
   079A E5                 2218 	push	hl
   079B CDr00s00           2219 	call	_memset
   079E F1                 2220 	pop	af
   079F F1                 2221 	pop	af
   07A0 33                 2222 	inc	sp
   07A1 C1                 2223 	pop	bc
                           2224 ;demo.c:251: raw_load(file_name, size, packbuffer,0);
   07A2 21 00 00           2225 	ld	hl,#0x0000
   07A5 E5                 2226 	push	hl
   07A6 21r60s01           2227 	ld	hl,#_packbuffer
   07A9 E5                 2228 	push	hl
   07AA C5                 2229 	push	bc
   07AB DD 6E 04           2230 	ld	l,4 (ix)
   07AE DD 66 05           2231 	ld	h,5 (ix)
   07B1 E5                 2232 	push	hl
   07B2 CDr56s06           2233 	call	_raw_load
   07B5 F1                 2234 	pop	af
   07B6 F1                 2235 	pop	af
   07B7 F1                 2236 	pop	af
   07B8 F1                 2237 	pop	af
                           2238 ;demo.c:252: bitbuster(packbuffer,address,vram_offset);
   07B9 DD 7E 0A           2239 	ld	a,10 (ix)
   07BC F5                 2240 	push	af
   07BD 33                 2241 	inc	sp
   07BE DD 6E 08           2242 	ld	l,8 (ix)
   07C1 DD 66 09           2243 	ld	h,9 (ix)
   07C4 E5                 2244 	push	hl
   07C5 21r60s01           2245 	ld	hl,#_packbuffer
   07C8 E5                 2246 	push	hl
   07C9 CDr00s00           2247 	call	_bitbuster
   07CC F1                 2248 	pop	af
   07CD F1                 2249 	pop	af
   07CE 33                 2250 	inc	sp
   07CF DD E1              2251 	pop	ix
   07D1 C9                 2252 	ret
   07D2                    2253 _pck_load_end::
   07D2                    2254 __str_6:
   07D2 6C 6F 61 64 69 6E  2255 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   07E3 00                 2256 	.db 0x00
   07E4                    2257 __str_7:
   07E4 0D                 2258 	.db 0x0D
   07E5 0A                 2259 	.db 0x0A
   07E6 00                 2260 	.db 0x00
                           2261 ;demo.c:255: void fadein() {
                           2262 ;	---------------------------------
                           2263 ; Function fadein
                           2264 ; ---------------------------------
   07E7                    2265 _fadein_start::
   07E7                    2266 _fadein:
   07E7 DD E5              2267 	push	ix
   07E9 DD 21 00 00        2268 	ld	ix,#0
   07ED DD 39              2269 	add	ix,sp
   07EF F5                 2270 	push	af
                           2271 ;demo.c:258: if (tick < 4) return;
   07F0 3Ar22s8F           2272 	ld	a,(#_tick+0)
   07F3 D6 04              2273 	sub	a,#0x04
   07F5 3Ar23s8F           2274 	ld	a,(#_tick+1)
   07F8 DE 00              2275 	sbc	a,#0x00
   07FA F2r00s08           2276 	jp	P,00102$
   07FD C3rAEs08           2277 	jp	00113$
   0800                    2278 00102$:
                           2279 ;demo.c:260: tick = 0;
   0800 21r22s8F           2280 	ld	hl,#_tick + 0
   0803 36 00              2281 	ld	(hl), #0x00
   0805 21r23s8F           2282 	ld	hl,#_tick + 1
   0808 36 00              2283 	ld	(hl), #0x00
                           2284 ;demo.c:262: for(i = 0; i < 32; i+=2) {
   080A 0E 00              2285 	ld	c,#0x00
   080C                    2286 00109$:
   080C 79                 2287 	ld	a,c
   080D D6 20              2288 	sub	a,#0x20
   080F D2rA6s08           2289 	jp	NC,00112$
                           2290 ;demo.c:263: uint8_t r = scratch[i] >> 4;
   0812 3Er00              2291 	ld	a,#<_scratch
   0814 81                 2292 	add	a,c
   0815 5F                 2293 	ld	e,a
   0816 3Es8E              2294 	ld	a,#>_scratch
   0818 CE 00              2295 	adc	a,#0x00
   081A 57                 2296 	ld	d,a
   081B 1A                 2297 	ld	a,(de)
   081C 47                 2298 	ld	b,a
   081D 58                 2299 	ld	e,b
   081E CB 3B              2300 	srl	e
   0820 CB 3B              2301 	srl	e
   0822 CB 3B              2302 	srl	e
   0824 CB 3B              2303 	srl	e
                           2304 ;demo.c:264: uint8_t b = scratch[i] & 0xf;
   0826 78                 2305 	ld	a,b
   0827 E6 0F              2306 	and	a,#0x0F
   0829 DD 77 FF           2307 	ld	-1 (ix),a
                           2308 ;demo.c:265: uint8_t g = scratch[i+1];
   082C 51                 2309 	ld	d,c
   082D 14                 2310 	inc	d
   082E 3Er00              2311 	ld	a,#<_scratch
   0830 82                 2312 	add	a,d
   0831 6F                 2313 	ld	l,a
   0832 3Es8E              2314 	ld	a,#>_scratch
   0834 CE 00              2315 	adc	a,#0x00
   0836 67                 2316 	ld	h,a
   0837 56                 2317 	ld	d,(hl)
   0838 DD 72 FE           2318 	ld	-2 (ix),d
                           2319 ;demo.c:267: if (r < (cur_palette[i] >> 4)) r++;
   083B 3Er80              2320 	ld	a,#<_cur_palette
   083D 81                 2321 	add	a,c
   083E 6F                 2322 	ld	l,a
   083F 3Es8E              2323 	ld	a,#>_cur_palette
   0841 CE 00              2324 	adc	a,#0x00
   0843 67                 2325 	ld	h,a
   0844 56                 2326 	ld	d,(hl)
   0845 CB 3A              2327 	srl	d
   0847 CB 3A              2328 	srl	d
   0849 CB 3A              2329 	srl	d
   084B CB 3A              2330 	srl	d
   084D 7B                 2331 	ld	a,e
   084E 92                 2332 	sub	a,d
   084F 30 01              2333 	jr	NC,00104$
   0851 1C                 2334 	inc	e
   0852                    2335 00104$:
                           2336 ;demo.c:268: if (b < (cur_palette[i] & 0xf)) b++;
   0852 3Er80              2337 	ld	a,#<_cur_palette
   0854 81                 2338 	add	a,c
   0855 6F                 2339 	ld	l,a
   0856 3Es8E              2340 	ld	a,#>_cur_palette
   0858 CE 00              2341 	adc	a,#0x00
   085A 67                 2342 	ld	h,a
   085B 7E                 2343 	ld	a,(hl)
   085C E6 0F              2344 	and	a,#0x0F
   085E 47                 2345 	ld	b,a
   085F DD 7E FF           2346 	ld	a,-1 (ix)
   0862 90                 2347 	sub	a,b
   0863 30 03              2348 	jr	NC,00106$
   0865 DD 34 FF           2349 	inc	-1 (ix)
   0868                    2350 00106$:
                           2351 ;demo.c:270: scratch[i] = (r << 4) | b;
   0868 3Er00              2352 	ld	a,#<_scratch
   086A 81                 2353 	add	a,c
   086B 47                 2354 	ld	b,a
   086C 3Es8E              2355 	ld	a,#>_scratch
   086E CE 00              2356 	adc	a,#0x00
   0870 57                 2357 	ld	d,a
   0871 7B                 2358 	ld	a,e
   0872 07                 2359 	rlca
   0873 07                 2360 	rlca
   0874 07                 2361 	rlca
   0875 07                 2362 	rlca
   0876 E6 F0              2363 	and	a,#0xF0
   0878 DD B6 FF           2364 	or	a,-1 (ix)
   087B 68                 2365 	ld	l,b
   087C 62                 2366 	ld	h,d
   087D 77                 2367 	ld	(hl),a
                           2368 ;demo.c:271: if (g < cur_palette[i+1]) scratch[i+1]++;
   087E 41                 2369 	ld	b,c
   087F 04                 2370 	inc	b
   0880 3Er80              2371 	ld	a,#<_cur_palette
   0882 80                 2372 	add	a,b
   0883 5F                 2373 	ld	e,a
   0884 3Es8E              2374 	ld	a,#>_cur_palette
   0886 CE 00              2375 	adc	a,#0x00
   0888 57                 2376 	ld	d,a
   0889 1A                 2377 	ld	a,(de)
   088A 5F                 2378 	ld	e,a
   088B DD 7E FE           2379 	ld	a,-2 (ix)
   088E 93                 2380 	sub	a,e
   088F 30 10              2381 	jr	NC,00111$
   0891 3Er00              2382 	ld	a,#<_scratch
   0893 80                 2383 	add	a,b
   0894 47                 2384 	ld	b,a
   0895 3Es8E              2385 	ld	a,#>_scratch
   0897 CE 00              2386 	adc	a,#0x00
   0899 5F                 2387 	ld	e,a
   089A 68                 2388 	ld	l,b
   089B 67                 2389 	ld	h,a
   089C 7E                 2390 	ld	a,(hl)
   089D 3C                 2391 	inc	a
   089E 68                 2392 	ld	l,b
   089F 63                 2393 	ld	h,e
   08A0 77                 2394 	ld	(hl),a
   08A1                    2395 00111$:
                           2396 ;demo.c:262: for(i = 0; i < 32; i+=2) {
   08A1 0C                 2397 	inc	c
   08A2 0C                 2398 	inc	c
   08A3 C3r0Cs08           2399 	jp	00109$
   08A6                    2400 00112$:
                           2401 ;demo.c:275: vdp_load_palette(scratch);
   08A6 21r00s8E           2402 	ld	hl,#_scratch
   08A9 E5                 2403 	push	hl
   08AA CDr00s00           2404 	call	_vdp_load_palette
   08AD F1                 2405 	pop	af
   08AE                    2406 00113$:
   08AE DD F9              2407 	ld	sp,ix
   08B0 DD E1              2408 	pop	ix
   08B2 C9                 2409 	ret
   08B3                    2410 _fadein_end::
                           2411 ;demo.c:287: void do_ymmm() {
                           2412 ;	---------------------------------
                           2413 ; Function do_ymmm
                           2414 ; ---------------------------------
   08B3                    2415 _do_ymmm_start::
   08B3                    2416 _do_ymmm:
   08B3 DD E5              2417 	push	ix
   08B5 DD 21 00 00        2418 	ld	ix,#0
   08B9 DD 39              2419 	add	ix,sp
   08BB F5                 2420 	push	af
                           2421 ;demo.c:291: if (tick > 32) { tick = 0; flipper++;}
   08BC 3E 20              2422 	ld	a,#0x20
   08BE FD 21r22s8F        2423 	ld	iy,#_tick
   08C2 FD 96 00           2424 	sub	a,0 (iy)
   08C5 3E 00              2425 	ld	a,#0x00
   08C7 FD 21r22s8F        2426 	ld	iy,#_tick
   08CB FD 9E 01           2427 	sbc	a,1 (iy)
   08CE F2rEBs08           2428 	jp	P,00102$
   08D1 21r22s8F           2429 	ld	hl,#_tick + 0
   08D4 36 00              2430 	ld	(hl), #0x00
   08D6 21r23s8F           2431 	ld	hl,#_tick + 1
   08D9 36 00              2432 	ld	(hl), #0x00
   08DB FD 21r3Ds8F        2433 	ld	iy,#_flipper
   08DF FD 34 00           2434 	inc	0 (iy)
   08E2 20 07              2435 	jr	NZ,00115$
   08E4 FD 21r3Ds8F        2436 	ld	iy,#_flipper
   08E8 FD 34 01           2437 	inc	1 (iy)
   08EB                    2438 00115$:
   08EB                    2439 00102$:
                           2440 ;demo.c:292: if (flipper > 10) { flipper = 0;}
   08EB 3E 0A              2441 	ld	a,#0x0A
   08ED FD 21r3Ds8F        2442 	ld	iy,#_flipper
   08F1 FD 96 00           2443 	sub	a,0 (iy)
   08F4 3E 00              2444 	ld	a,#0x00
   08F6 FD 21r3Ds8F        2445 	ld	iy,#_flipper
   08FA FD 9E 01           2446 	sbc	a,1 (iy)
   08FD F2r0As09           2447 	jp	P,00104$
   0900 21r3Ds8F           2448 	ld	hl,#_flipper + 0
   0903 36 00              2449 	ld	(hl), #0x00
   0905 21r3Es8F           2450 	ld	hl,#_flipper + 1
   0908 36 00              2451 	ld	(hl), #0x00
   090A                    2452 00104$:
                           2453 ;demo.c:294: ymmmf++;
   090A FD 21r3Fs8F        2454 	ld	iy,#_ymmmf
   090E FD 34 00           2455 	inc	0 (iy)
   0911 20 07              2456 	jr	NZ,00116$
   0913 FD 21r3Fs8F        2457 	ld	iy,#_ymmmf
   0917 FD 34 01           2458 	inc	1 (iy)
   091A                    2459 00116$:
                           2460 ;demo.c:295: for (yofff = 0; yofff<212-step;yofff+=step) {
   091A 21r3Bs8F           2461 	ld	hl,#_yofff + 0
   091D 36 00              2462 	ld	(hl), #0x00
   091F                    2463 00105$:
   091F 21r3Bs8F           2464 	ld	hl,#_yofff + 0
   0922 4E                 2465 	ld	c,(hl)
   0923 06 00              2466 	ld	b,#0x00
   0925 79                 2467 	ld	a,c
   0926 D6 D2              2468 	sub	a,#0xD2
   0928 78                 2469 	ld	a,b
   0929 DE 00              2470 	sbc	a,#0x00
   092B F2rA4s09           2471 	jp	P,00109$
                           2472 ;demo.c:296: xo = (sintabx[(yofff+ymmmf) & 255]);
   092E 21r3Fs8F           2473 	ld	hl,#_ymmmf
   0931 79                 2474 	ld	a,c
   0932 86                 2475 	add	a,(hl)
   0933 5F                 2476 	ld	e,a
   0934 78                 2477 	ld	a,b
   0935 23                 2478 	inc	hl
   0936 8E                 2479 	adc	a,(hl)
   0937 16 00              2480 	ld	d,#0x00
   0939 CB 23              2481 	sla	e
   093B CB 12              2482 	rl	d
   093D 21r2Cs00           2483 	ld	hl,#_sintabx
   0940 19                 2484 	add	hl,de
   0941 5E                 2485 	ld	e,(hl)
   0942 23                 2486 	inc	hl
   0943 56                 2487 	ld	d,(hl)
   0944 DD 73 FE           2488 	ld	-2 (ix),e
   0947 DD 72 FF           2489 	ld	-1 (ix),d
                           2490 ;demo.c:299: cmd.source_x = 0;
   094A 21r24s8F           2491 	ld	hl,#_cmd
   094D 36 00              2492 	ld	(hl),#0x00
   094F 23                 2493 	inc	hl
   0950 36 00              2494 	ld	(hl),#0x00
                           2495 ;demo.c:300: cmd.source_y = 0+yofff;
   0952 11r26s8F           2496 	ld	de,#_cmd + 2
   0955 EB                 2497 	ex	de,hl
   0956 71                 2498 	ld	(hl),c
   0957 23                 2499 	inc	hl
   0958 70                 2500 	ld	(hl),b
                           2501 ;demo.c:301: cmd.dest_x = xo;
   0959 11r28s8F           2502 	ld	de,#_cmd + 4
   095C EB                 2503 	ex	de,hl
   095D DD 7E FE           2504 	ld	a,-2 (ix)
   0960 77                 2505 	ld	(hl),a
   0961 23                 2506 	inc	hl
   0962 DD 7E FF           2507 	ld	a,-1 (ix)
   0965 77                 2508 	ld	(hl),a
                           2509 ;demo.c:302: cmd.dest_y = 3+yofff;
   0966 11r2As8F           2510 	ld	de,#_cmd + 6
   0969 03                 2511 	inc	bc
   096A 03                 2512 	inc	bc
   096B 03                 2513 	inc	bc
   096C 6B                 2514 	ld	l,e
   096D 62                 2515 	ld	h,d
   096E 71                 2516 	ld	(hl),c
   096F 23                 2517 	inc	hl
   0970 70                 2518 	ld	(hl),b
                           2519 ;demo.c:303: cmd.size_x = 256;
   0971 21r2Cs8F           2520 	ld	hl, #_cmd + 8
   0974 36 00              2521 	ld	(hl),#0x00
   0976 23                 2522 	inc	hl
   0977 36 01              2523 	ld	(hl),#0x01
                           2524 ;demo.c:304: cmd.size_y = 1;
   0979 21r2Es8F           2525 	ld	hl, #_cmd + 10
   097C 36 01              2526 	ld	(hl),#0x01
   097E 23                 2527 	inc	hl
   097F 36 00              2528 	ld	(hl),#0x00
                           2529 ;demo.c:305: cmd.data = 0;
                           2530 ;demo.c:306: cmd.argument = 0;
   0981 3E 00              2531 	ld	a,#0x00
   0983 32r30s8F           2532 	ld	(#_cmd + 12),a
   0986 32r31s8F           2533 	ld	(#_cmd + 13),a
                           2534 ;demo.c:307: cmd.command = 0xD0;
   0989 3E D0              2535 	ld	a,#0xD0
   098B 32r32s8F           2536 	ld	(#_cmd + 14),a
                           2537 ;demo.c:310: vdp_copier(&cmd);
   098E 21r24s8F           2538 	ld	hl,#_cmd
   0991 E5                 2539 	push	hl
   0992 CDr00s00           2540 	call	_vdp_copier
   0995 F1                 2541 	pop	af
                           2542 ;demo.c:295: for (yofff = 0; yofff<212-step;yofff+=step) {
   0996 21r3Bs8F           2543 	ld	hl,#_yofff + 0
   0999 4E                 2544 	ld	c,(hl)
   099A 21r3Bs8F           2545 	ld	hl,#_yofff
   099D 79                 2546 	ld	a,c
   099E C6 02              2547 	add	a,#0x02
   09A0 77                 2548 	ld	(hl),a
   09A1 C3r1Fs09           2549 	jp	00105$
   09A4                    2550 00109$:
   09A4 DD F9              2551 	ld	sp,ix
   09A6 DD E1              2552 	pop	ix
   09A8 C9                 2553 	ret
   09A9                    2554 _do_ymmm_end::
                           2555 ;demo.c:327: void do_blocks() {
                           2556 ;	---------------------------------
                           2557 ; Function do_blocks
                           2558 ; ---------------------------------
   09A9                    2559 _do_blocks_start::
   09A9                    2560 _do_blocks:
   09A9 DD E5              2561 	push	ix
   09AB DD 21 00 00        2562 	ld	ix,#0
   09AF DD 39              2563 	add	ix,sp
   09B1 21 FA FF           2564 	ld	hl,#-6
   09B4 39                 2565 	add	hl,sp
   09B5 F9                 2566 	ld	sp,hl
                           2567 ;demo.c:329: int ys = 0;
   09B6 DD 36 FC 00        2568 	ld	-4 (ix),#0x00
   09BA DD 36 FD 00        2569 	ld	-3 (ix),#0x00
                           2570 ;demo.c:330: int ye = 0;
   09BE DD 36 FA 00        2571 	ld	-6 (ix),#0x00
   09C2 DD 36 FB 00        2572 	ld	-5 (ix),#0x00
                           2573 ;demo.c:332: vdp_register(VDP_VOFFSET,0);
   09C6 21 17 00           2574 	ld	hl,#0x0017
   09C9 E5                 2575 	push	hl
   09CA CDr00s00           2576 	call	_vdp_register
   09CD F1                 2577 	pop	af
                           2578 ;demo.c:334: if (block_init == 0) {
   09CE AF                 2579 	xor	a,a
   09CF FD 21r41s8F        2580 	ld	iy,#_block_init
   09D3 FD B6 00           2581 	or	a,0 (iy)
   09D6 C2r3Es0A           2582 	jp	NZ,00108$
                           2583 ;demo.c:336: vdp_set_screen5();
   09D9 CDr00s00           2584 	call	_vdp_set_screen5
                           2585 ;demo.c:338: vdp_register(2, 0x5F);
   09DC 21 02 5F           2586 	ld	hl,#0x5F02
   09DF E5                 2587 	push	hl
   09E0 CDr00s00           2588 	call	_vdp_register
   09E3 F1                 2589 	pop	af
                           2590 ;demo.c:340: for(i=0;i<16;i++) btab[i] = i*16;
   09E4 DD 36 FE 00        2591 	ld	-2 (ix),#0x00
   09E8 DD 36 FF 00        2592 	ld	-1 (ix),#0x00
   09EC                    2593 00110$:
   09EC DD 7E FE           2594 	ld	a,-2 (ix)
   09EF D6 10              2595 	sub	a,#0x10
   09F1 DD 7E FF           2596 	ld	a,-1 (ix)
   09F4 DE 00              2597 	sbc	a,#0x00
   09F6 F2r2Es0A           2598 	jp	P,00113$
   09F9 DD 4E FE           2599 	ld	c,-2 (ix)
   09FC DD 46 FF           2600 	ld	b,-1 (ix)
   09FF CB 21              2601 	sla	c
   0A01 CB 10              2602 	rl	b
   0A03 21r4As8F           2603 	ld	hl,#_btab
   0A06 09                 2604 	add	hl,bc
   0A07 4D                 2605 	ld	c,l
   0A08 44                 2606 	ld	b,h
   0A09 DD 5E FE           2607 	ld	e,-2 (ix)
   0A0C DD 56 FF           2608 	ld	d,-1 (ix)
   0A0F CB 23              2609 	sla	e
   0A11 CB 12              2610 	rl	d
   0A13 CB 23              2611 	sla	e
   0A15 CB 12              2612 	rl	d
   0A17 CB 23              2613 	sla	e
   0A19 CB 12              2614 	rl	d
   0A1B CB 23              2615 	sla	e
   0A1D CB 12              2616 	rl	d
   0A1F 69                 2617 	ld	l,c
   0A20 60                 2618 	ld	h,b
   0A21 73                 2619 	ld	(hl),e
   0A22 23                 2620 	inc	hl
   0A23 72                 2621 	ld	(hl),d
   0A24 DD 34 FE           2622 	inc	-2 (ix)
   0A27 20 03              2623 	jr	NZ,00139$
   0A29 DD 34 FF           2624 	inc	-1 (ix)
   0A2C                    2625 00139$:
   0A2C 18 BE              2626 	jr	00110$
   0A2E                    2627 00113$:
                           2628 ;demo.c:341: vdp_load_palette(block_palette);
   0A2E 21rA0s8E           2629 	ld	hl,#_block_palette
   0A31 E5                 2630 	push	hl
   0A32 CDr00s00           2631 	call	_vdp_load_palette
   0A35 F1                 2632 	pop	af
                           2633 ;demo.c:343: block_init = 1;
   0A36 21r41s8F           2634 	ld	hl,#_block_init + 0
   0A39 36 01              2635 	ld	(hl), #0x01
   0A3B C3rC7s0B           2636 	jp	00122$
   0A3E                    2637 00108$:
                           2638 ;demo.c:347: if (flof == 0) { ys = 0; ye = 8; }
   0A3E 3Ar6As8F           2639 	ld	a,(#_flof+0)
   0A41 FD 21r6As8F        2640 	ld	iy,#_flof
   0A45 FD B6 01           2641 	or	a,1 (iy)
   0A48 20 10              2642 	jr	NZ,00102$
   0A4A DD 36 FC 00        2643 	ld	-4 (ix),#0x00
   0A4E DD 36 FD 00        2644 	ld	-3 (ix),#0x00
   0A52 DD 36 FA 08        2645 	ld	-6 (ix),#0x08
   0A56 DD 36 FB 00        2646 	ld	-5 (ix),#0x00
   0A5A                    2647 00102$:
                           2648 ;demo.c:348: if (flof == 1) { ys = 8; ye = 16; }
   0A5A 3Ar6As8F           2649 	ld	a,(#_flof+0)
   0A5D D6 01              2650 	sub	a,#0x01
   0A5F 20 06              2651 	jr	NZ,00140$
   0A61 3Ar6Bs8F           2652 	ld	a,(#_flof+1)
   0A64 B7                 2653 	or	a,a
   0A65 28 02              2654 	jr	Z,00141$
   0A67                    2655 00140$:
   0A67 18 10              2656 	jr	00104$
   0A69                    2657 00141$:
   0A69 DD 36 FC 08        2658 	ld	-4 (ix),#0x08
   0A6D DD 36 FD 00        2659 	ld	-3 (ix),#0x00
   0A71 DD 36 FA 10        2660 	ld	-6 (ix),#0x10
   0A75 DD 36 FB 00        2661 	ld	-5 (ix),#0x00
   0A79                    2662 00104$:
                           2663 ;demo.c:350: for(bty=3;bty<11;bty++) {
   0A79 FD 21r48s8F        2664 	ld	iy,#_bty
   0A7D FD 36 00 03        2665 	ld	0 (iy),#0x03
   0A81 FD 21r48s8F        2666 	ld	iy,#_bty
   0A85 FD 36 01 00        2667 	ld	1 (iy),#0x00
   0A89                    2668 00118$:
   0A89 3Ar48s8F           2669 	ld	a,(#_bty+0)
   0A8C D6 0B              2670 	sub	a,#0x0B
   0A8E 3Ar49s8F           2671 	ld	a,(#_bty+1)
   0A91 DE 00              2672 	sbc	a,#0x00
   0A93 F2r9Es0B           2673 	jp	P,00121$
                           2674 ;demo.c:351: for(btx=ys;btx<ye;btx++) {
   0A96 DD 7E FC           2675 	ld	a,-4 (ix)
   0A99 FD 21r46s8F        2676 	ld	iy,#_btx
   0A9D FD 77 00           2677 	ld	0 (iy),a
   0AA0 DD 7E FD           2678 	ld	a,-3 (ix)
   0AA3 FD 21r46s8F        2679 	ld	iy,#_btx
   0AA7 FD 77 01           2680 	ld	1 (iy),a
   0AAA                    2681 00114$:
   0AAA 3Ar46s8F           2682 	ld	a,(#_btx+0)
   0AAD DD 96 FA           2683 	sub	a,-6 (ix)
   0AB0 3Ar47s8F           2684 	ld	a,(#_btx+1)
   0AB3 DD 9E FB           2685 	sbc	a,-5 (ix)
   0AB6 F2r8Bs0B           2686 	jp	P,00120$
                           2687 ;demo.c:352: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0AB9 3Ar00s00           2688 	ld	a,(#_PLY_PSGReg8+0)
   0ABC FD 21r00s00        2689 	ld	iy,#_PLY_PSGReg9
   0AC0 FD A6 00           2690 	and	a,0 (iy)
   0AC3 21r00s00           2691 	ld	hl,#_PLY_PSGReg10 + 0
   0AC6 B6                 2692 	or	a,(hl)
   0AC7 4F                 2693 	ld	c,a
   0AC8 CB 39              2694 	srl	c
   0ACA 21r42s8F           2695 	ld	hl,#_bsx + 0
   0ACD 71                 2696 	ld	(hl), c
   0ACE 21r43s8F           2697 	ld	hl,#_bsx + 1
   0AD1 36 00              2698 	ld	(hl), #0x00
                           2699 ;demo.c:353: bsy = PLY_PSGReg10;
   0AD3 3Ar00s00           2700 	ld	a,(#_PLY_PSGReg10+0)
   0AD6 21r44s8F           2701 	ld	hl,#_bsy + 0
   0AD9 77                 2702 	ld	(hl), a
   0ADA 21r45s8F           2703 	ld	hl,#_bsy + 1
   0ADD 36 00              2704 	ld	(hl), #0x00
                           2705 ;demo.c:354: cmd.source_x = btab[bsx];
   0ADF 21r42s8F           2706 	ld	hl,#_bsx + 0
   0AE2 4E                 2707 	ld	c,(hl)
   0AE3 21r43s8F           2708 	ld	hl,#_bsx + 1
   0AE6 46                 2709 	ld	b,(hl)
   0AE7 CB 21              2710 	sla	c
   0AE9 CB 10              2711 	rl	b
   0AEB 21r4As8F           2712 	ld	hl,#_btab
   0AEE 09                 2713 	add	hl,bc
   0AEF 4E                 2714 	ld	c,(hl)
   0AF0 23                 2715 	inc	hl
   0AF1 46                 2716 	ld	b,(hl)
   0AF2 21r24s8F           2717 	ld	hl,#_cmd
   0AF5 71                 2718 	ld	(hl),c
   0AF6 23                 2719 	inc	hl
   0AF7 70                 2720 	ld	(hl),b
                           2721 ;demo.c:355: cmd.source_y = 768+btab[bsy];
   0AF8 01r26s8F           2722 	ld	bc,#_cmd + 2
   0AFB 21r44s8F           2723 	ld	hl,#_bsy + 0
   0AFE 5E                 2724 	ld	e,(hl)
   0AFF 21r45s8F           2725 	ld	hl,#_bsy + 1
   0B02 56                 2726 	ld	d,(hl)
   0B03 CB 23              2727 	sla	e
   0B05 CB 12              2728 	rl	d
   0B07 21r4As8F           2729 	ld	hl,#_btab
   0B0A 19                 2730 	add	hl,de
   0B0B 5E                 2731 	ld	e,(hl)
   0B0C 23                 2732 	inc	hl
   0B0D 56                 2733 	ld	d,(hl)
   0B0E 21 00 03           2734 	ld	hl,#0x0300
   0B11 19                 2735 	add	hl,de
   0B12 EB                 2736 	ex	de,hl
   0B13 69                 2737 	ld	l,c
   0B14 60                 2738 	ld	h,b
   0B15 73                 2739 	ld	(hl),e
   0B16 23                 2740 	inc	hl
   0B17 72                 2741 	ld	(hl),d
                           2742 ;demo.c:356: cmd.dest_x = btab[btx];
   0B18 01r28s8F           2743 	ld	bc,#_cmd + 4
   0B1B 21r46s8F           2744 	ld	hl,#_btx + 0
   0B1E 5E                 2745 	ld	e,(hl)
   0B1F 21r47s8F           2746 	ld	hl,#_btx + 1
   0B22 56                 2747 	ld	d,(hl)
   0B23 CB 23              2748 	sla	e
   0B25 CB 12              2749 	rl	d
   0B27 21r4As8F           2750 	ld	hl,#_btab
   0B2A 19                 2751 	add	hl,de
   0B2B 5E                 2752 	ld	e,(hl)
   0B2C 23                 2753 	inc	hl
   0B2D 56                 2754 	ld	d,(hl)
   0B2E 69                 2755 	ld	l,c
   0B2F 60                 2756 	ld	h,b
   0B30 73                 2757 	ld	(hl),e
   0B31 23                 2758 	inc	hl
   0B32 72                 2759 	ld	(hl),d
                           2760 ;demo.c:357: cmd.dest_y = 512+btab[bty];
   0B33 01r2As8F           2761 	ld	bc,#_cmd + 6
   0B36 21r48s8F           2762 	ld	hl,#_bty + 0
   0B39 5E                 2763 	ld	e,(hl)
   0B3A 21r49s8F           2764 	ld	hl,#_bty + 1
   0B3D 56                 2765 	ld	d,(hl)
   0B3E CB 23              2766 	sla	e
   0B40 CB 12              2767 	rl	d
   0B42 21r4As8F           2768 	ld	hl,#_btab
   0B45 19                 2769 	add	hl,de
   0B46 5E                 2770 	ld	e,(hl)
   0B47 23                 2771 	inc	hl
   0B48 56                 2772 	ld	d,(hl)
   0B49 21 00 02           2773 	ld	hl,#0x0200
   0B4C 19                 2774 	add	hl,de
   0B4D EB                 2775 	ex	de,hl
   0B4E 69                 2776 	ld	l,c
   0B4F 60                 2777 	ld	h,b
   0B50 73                 2778 	ld	(hl),e
   0B51 23                 2779 	inc	hl
   0B52 72                 2780 	ld	(hl),d
                           2781 ;demo.c:358: cmd.size_x = 16;
   0B53 21r2Cs8F           2782 	ld	hl, #_cmd + 8
   0B56 36 10              2783 	ld	(hl),#0x10
   0B58 23                 2784 	inc	hl
   0B59 36 00              2785 	ld	(hl),#0x00
                           2786 ;demo.c:359: cmd.size_y = 16;
   0B5B 21r2Es8F           2787 	ld	hl, #_cmd + 10
   0B5E 36 10              2788 	ld	(hl),#0x10
   0B60 23                 2789 	inc	hl
   0B61 36 00              2790 	ld	(hl),#0x00
                           2791 ;demo.c:360: cmd.data = 0;
                           2792 ;demo.c:361: cmd.argument = 0x00;
   0B63 3E 00              2793 	ld	a,#0x00
   0B65 32r30s8F           2794 	ld	(#_cmd + 12),a
   0B68 32r31s8F           2795 	ld	(#_cmd + 13),a
                           2796 ;demo.c:362: cmd.command = 0xD0;
   0B6B 3E D0              2797 	ld	a,#0xD0
   0B6D 32r32s8F           2798 	ld	(#_cmd + 14),a
                           2799 ;demo.c:363: vdp_copier(&cmd);
   0B70 21r24s8F           2800 	ld	hl,#_cmd
   0B73 E5                 2801 	push	hl
   0B74 CDr00s00           2802 	call	_vdp_copier
   0B77 F1                 2803 	pop	af
                           2804 ;demo.c:351: for(btx=ys;btx<ye;btx++) {
   0B78 FD 21r46s8F        2805 	ld	iy,#_btx
   0B7C FD 34 00           2806 	inc	0 (iy)
   0B7F 20 07              2807 	jr	NZ,00150$
   0B81 FD 21r46s8F        2808 	ld	iy,#_btx
   0B85 FD 34 01           2809 	inc	1 (iy)
   0B88                    2810 00150$:
   0B88 C3rAAs0A           2811 	jp	00114$
   0B8B                    2812 00120$:
                           2813 ;demo.c:350: for(bty=3;bty<11;bty++) {
   0B8B FD 21r48s8F        2814 	ld	iy,#_bty
   0B8F FD 34 00           2815 	inc	0 (iy)
   0B92 20 07              2816 	jr	NZ,00151$
   0B94 FD 21r48s8F        2817 	ld	iy,#_bty
   0B98 FD 34 01           2818 	inc	1 (iy)
   0B9B                    2819 00151$:
   0B9B C3r89s0A           2820 	jp	00118$
   0B9E                    2821 00121$:
                           2822 ;demo.c:367: flof++;
   0B9E FD 21r6As8F        2823 	ld	iy,#_flof
   0BA2 FD 34 00           2824 	inc	0 (iy)
   0BA5 20 07              2825 	jr	NZ,00152$
   0BA7 FD 21r6As8F        2826 	ld	iy,#_flof
   0BAB FD 34 01           2827 	inc	1 (iy)
   0BAE                    2828 00152$:
                           2829 ;demo.c:368: if (flof == 2) flof = 0;
   0BAE 3Ar6As8F           2830 	ld	a,(#_flof+0)
   0BB1 D6 02              2831 	sub	a,#0x02
   0BB3 20 06              2832 	jr	NZ,00153$
   0BB5 3Ar6Bs8F           2833 	ld	a,(#_flof+1)
   0BB8 B7                 2834 	or	a,a
   0BB9 28 02              2835 	jr	Z,00154$
   0BBB                    2836 00153$:
   0BBB 18 0A              2837 	jr	00122$
   0BBD                    2838 00154$:
   0BBD 21r6As8F           2839 	ld	hl,#_flof + 0
   0BC0 36 00              2840 	ld	(hl), #0x00
   0BC2 21r6Bs8F           2841 	ld	hl,#_flof + 1
   0BC5 36 00              2842 	ld	(hl), #0x00
   0BC7                    2843 00122$:
   0BC7 DD F9              2844 	ld	sp,ix
   0BC9 DD E1              2845 	pop	ix
   0BCB C9                 2846 	ret
   0BCC                    2847 _do_blocks_end::
                           2848 ;demo.c:376: void raster_effu() {
                           2849 ;	---------------------------------
                           2850 ; Function raster_effu
                           2851 ; ---------------------------------
   0BCC                    2852 _raster_effu_start::
   0BCC                    2853 _raster_effu:
                           2854 ;demo.c:377: vdp_register(VDP_VOFFSET,0);
   0BCC 21 17 00           2855 	ld	hl,#0x0017
   0BCF E5                 2856 	push	hl
   0BD0 CDr00s00           2857 	call	_vdp_register
   0BD3 F1                 2858 	pop	af
                           2859 ;demo.c:378: waitVB();
   0BD4 76                 2860 		halt 
                           2861 ;demo.c:380: vdp_register(1,0x40); // disable vblank
   0BD5 21 01 40           2862 	ld	hl,#0x4001
   0BD8 E5                 2863 	push	hl
   0BD9 CDr00s00           2864 	call	_vdp_register
                           2865 ;demo.c:382: for (linenum = 40; linenum < 212; linenum+=4) {
   0BDC 3E 28              2866 	ld	a,#0x28
   0BDE 32r6Cs8F           2867 	ld	(#_linenum + 0),a
   0BE1 F1                 2868 	pop	af
   0BE2 FD 21r6Cs8F        2869 	ld	iy,#_linenum
   0BE6 FD 36 01 00        2870 	ld	1 (iy),#0x00
   0BEA                    2871 00101$:
   0BEA 3Ar6Cs8F           2872 	ld	a,(#_linenum+0)
   0BED D6 D4              2873 	sub	a,#0xD4
   0BEF 3Ar6Ds8F           2874 	ld	a,(#_linenum+1)
   0BF2 DE 00              2875 	sbc	a,#0x00
   0BF4 F2r25s0C           2876 	jp	P,00104$
                           2877 ;demo.c:383: vdp_register(19,linenum); // interrupt on line
   0BF7 3Ar6Cs8F           2878 	ld	a,(#_linenum+0)
   0BFA F5                 2879 	push	af
   0BFB 33                 2880 	inc	sp
   0BFC 3E 13              2881 	ld	a,#0x13
   0BFE F5                 2882 	push	af
   0BFF 33                 2883 	inc	sp
   0C00 CDr00s00           2884 	call	_vdp_register
   0C03 F1                 2885 	pop	af
                           2886 ;demo.c:384: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0C04 21 00 16           2887 	ld	hl,#0x1600
   0C07 E5                 2888 	push	hl
   0C08 CDr00s00           2889 	call	_vdp_register
   0C0B F1                 2890 	pop	af
                           2891 ;demo.c:386: waitVB();
   0C0C 76                 2892 		halt 
                           2893 ;demo.c:382: for (linenum = 40; linenum < 212; linenum+=4) {
   0C0D 21r6Cs8F           2894 	ld	hl,#_linenum
   0C10 7E                 2895 	ld	a,(hl)
   0C11 C6 04              2896 	add	a,#0x04
   0C13 23                 2897 	inc	hl
   0C14 2B                 2898 	dec	hl
   0C15 C5                 2899 	push	bc
   0C16 4F                 2900 	ld	c, a
   0C17 23                 2901 	inc	hl
   0C18 7E                 2902 	ld	a, (hl)
   0C19 47                 2903 	ld	b, a
   0C1A 79                 2904 	ld	a, c
   0C1B 2B                 2905 	dec	hl
   0C1C 77                 2906 	ld	(hl), a
   0C1D 78                 2907 	ld	a, b
   0C1E C1                 2908 	pop	bc
   0C1F CE 00              2909 	adc	a,#0x00
   0C21 23                 2910 	inc	hl
   0C22 77                 2911 	ld	(hl),a
   0C23 18 C5              2912 	jr	00101$
   0C25                    2913 00104$:
                           2914 ;demo.c:389: vdp_register(VDP_VOFFSET,0);
   0C25 21 17 00           2915 	ld	hl,#0x0017
   0C28 E5                 2916 	push	hl
   0C29 CDr00s00           2917 	call	_vdp_register
   0C2C F1                 2918 	pop	af
                           2919 ;demo.c:403: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0C2D 21 00 06           2920 	ld	hl,#0x0600
   0C30 E5                 2921 	push	hl
   0C31 CDr00s00           2922 	call	_vdp_register
   0C34 F1                 2923 	pop	af
                           2924 ;demo.c:404: vdp_register(1,0x60); // enable vblank
   0C35 21 01 60           2925 	ld	hl,#0x6001
   0C38 E5                 2926 	push	hl
   0C39 CDr00s00           2927 	call	_vdp_register
   0C3C F1                 2928 	pop	af
   0C3D C9                 2929 	ret
   0C3E                    2930 _raster_effu_end::
                           2931 ;demo.c:435: void do_letter(char cc) {
                           2932 ;	---------------------------------
                           2933 ; Function do_letter
                           2934 ; ---------------------------------
   0C3E                    2935 _do_letter_start::
   0C3E                    2936 _do_letter:
   0C3E DD E5              2937 	push	ix
   0C40 DD 21 00 00        2938 	ld	ix,#0
   0C44 DD 39              2939 	add	ix,sp
   0C46 F5                 2940 	push	af
                           2941 ;demo.c:436: int cidx = cc - 65;
   0C47 DD 4E 04           2942 	ld	c,4 (ix)
   0C4A DD 7E 04           2943 	ld	a,4 (ix)
   0C4D 17                 2944 	rla	
   0C4E 9F                 2945 	sbc	a,a
   0C4F 47                 2946 	ld	b,a
   0C50 79                 2947 	ld	a,c
   0C51 C6 BF              2948 	add	a,#0xBF
   0C53 DD 77 FE           2949 	ld	-2 (ix),a
   0C56 78                 2950 	ld	a,b
   0C57 CE FF              2951 	adc	a,#0xFF
   0C59 DD 77 FF           2952 	ld	-1 (ix),a
                           2953 ;demo.c:437: cmd.source_x = 127+font_x[cidx];
   0C5C 3ErFC              2954 	ld	a,#<_font_x
   0C5E DD 86 FE           2955 	add	a,-2 (ix)
   0C61 5F                 2956 	ld	e,a
   0C62 3Es0C              2957 	ld	a,#>_font_x
   0C64 DD 8E FF           2958 	adc	a,-1 (ix)
   0C67 57                 2959 	ld	d,a
   0C68 1A                 2960 	ld	a,(de)
   0C69 5F                 2961 	ld	e,a
   0C6A 16 00              2962 	ld	d,#0x00
   0C6C 21 7F 00           2963 	ld	hl,#0x007F
   0C6F 19                 2964 	add	hl,de
   0C70 EB                 2965 	ex	de,hl
   0C71 21r24s8F           2966 	ld	hl,#_cmd
   0C74 73                 2967 	ld	(hl),e
   0C75 23                 2968 	inc	hl
   0C76 72                 2969 	ld	(hl),d
                           2970 ;demo.c:438: cmd.source_y = 512+font_y[cidx];
   0C77 11r26s8F           2971 	ld	de,#_cmd + 2
   0C7A 3Er3C              2972 	ld	a,#<_font_y
   0C7C DD 86 FE           2973 	add	a,-2 (ix)
   0C7F 4F                 2974 	ld	c,a
   0C80 3Es0D              2975 	ld	a,#>_font_y
   0C82 DD 8E FF           2976 	adc	a,-1 (ix)
   0C85 47                 2977 	ld	b,a
   0C86 0A                 2978 	ld	a,(bc)
   0C87 4F                 2979 	ld	c,a
   0C88 06 00              2980 	ld	b,#0x00
   0C8A 21 00 02           2981 	ld	hl,#0x0200
   0C8D 09                 2982 	add	hl,bc
   0C8E 4D                 2983 	ld	c,l
   0C8F 44                 2984 	ld	b,h
   0C90 EB                 2985 	ex	de,hl
   0C91 71                 2986 	ld	(hl),c
   0C92 23                 2987 	inc	hl
   0C93 70                 2988 	ld	(hl),b
                           2989 ;demo.c:439: cmd.dest_x = lx;
   0C94 01r28s8F           2990 	ld	bc,#_cmd + 4
   0C97 21r6Es8F           2991 	ld	hl,#_lx + 0
   0C9A 5E                 2992 	ld	e,(hl)
   0C9B 16 00              2993 	ld	d,#0x00
   0C9D 69                 2994 	ld	l,c
   0C9E 60                 2995 	ld	h,b
   0C9F 73                 2996 	ld	(hl),e
   0CA0 23                 2997 	inc	hl
   0CA1 72                 2998 	ld	(hl),d
                           2999 ;demo.c:440: cmd.dest_y = ly;
   0CA2 01r2As8F           3000 	ld	bc,#_cmd + 6
   0CA5 21r6Fs8F           3001 	ld	hl,#_ly + 0
   0CA8 5E                 3002 	ld	e,(hl)
   0CA9 16 00              3003 	ld	d,#0x00
   0CAB 69                 3004 	ld	l,c
   0CAC 60                 3005 	ld	h,b
   0CAD 73                 3006 	ld	(hl),e
   0CAE 23                 3007 	inc	hl
   0CAF 72                 3008 	ld	(hl),d
                           3009 ;demo.c:441: cmd.size_x = font_w[cidx];
   0CB0 01r2Cs8F           3010 	ld	bc,#_cmd + 8
   0CB3 3Er7C              3011 	ld	a,#<_font_w
   0CB5 DD 86 FE           3012 	add	a,-2 (ix)
   0CB8 5F                 3013 	ld	e,a
   0CB9 3Es0D              3014 	ld	a,#>_font_w
   0CBB DD 8E FF           3015 	adc	a,-1 (ix)
   0CBE 57                 3016 	ld	d,a
   0CBF 1A                 3017 	ld	a,(de)
   0CC0 5F                 3018 	ld	e,a
   0CC1 16 00              3019 	ld	d,#0x00
   0CC3 69                 3020 	ld	l,c
   0CC4 60                 3021 	ld	h,b
   0CC5 73                 3022 	ld	(hl),e
   0CC6 23                 3023 	inc	hl
   0CC7 72                 3024 	ld	(hl),d
                           3025 ;demo.c:442: cmd.size_y = 8;
   0CC8 21r2Es8F           3026 	ld	hl, #_cmd + 10
   0CCB 36 08              3027 	ld	(hl),#0x08
   0CCD 23                 3028 	inc	hl
   0CCE 36 00              3029 	ld	(hl),#0x00
                           3030 ;demo.c:443: cmd.argument = 0x00;
   0CD0 3E 00              3031 	ld	a,#0x00
   0CD2 32r31s8F           3032 	ld	(#_cmd + 13),a
                           3033 ;demo.c:444: cmd.command = 0x90; // logical vram to vram
   0CD5 3E 90              3034 	ld	a,#0x90
   0CD7 32r32s8F           3035 	ld	(#_cmd + 14),a
                           3036 ;demo.c:445: vdp_copier(&cmd);
   0CDA 21r24s8F           3037 	ld	hl,#_cmd
   0CDD E5                 3038 	push	hl
   0CDE CDr00s00           3039 	call	_vdp_copier
   0CE1 F1                 3040 	pop	af
                           3041 ;demo.c:446: lx+=font_w[cidx]-1;
   0CE2 3Er7C              3042 	ld	a,#<_font_w
   0CE4 DD 86 FE           3043 	add	a,-2 (ix)
   0CE7 4F                 3044 	ld	c,a
   0CE8 3Es0D              3045 	ld	a,#>_font_w
   0CEA DD 8E FF           3046 	adc	a,-1 (ix)
   0CED 47                 3047 	ld	b,a
   0CEE 0A                 3048 	ld	a,(bc)
   0CEF 4F                 3049 	ld	c,a
   0CF0 0D                 3050 	dec	c
   0CF1 21r6Es8F           3051 	ld	hl,#_lx
   0CF4 7E                 3052 	ld	a,(hl)
   0CF5 81                 3053 	add	a,c
   0CF6 77                 3054 	ld	(hl),a
   0CF7 DD F9              3055 	ld	sp,ix
   0CF9 DD E1              3056 	pop	ix
   0CFB C9                 3057 	ret
   0CFC                    3058 _do_letter_end::
   0CFC                    3059 _font_x:
   0CFC 01                 3060 	.db #0x01
   0CFD 09                 3061 	.db #0x09
   0CFE 11                 3062 	.db #0x11
   0CFF 19                 3063 	.db #0x19
   0D00 21                 3064 	.db #0x21
   0D01 29                 3065 	.db #0x29
   0D02 31                 3066 	.db #0x31
   0D03 39                 3067 	.db #0x39
   0D04 41                 3068 	.db #0x41
   0D05 46                 3069 	.db #0x46
   0D06 4E                 3070 	.db #0x4E
   0D07 56                 3071 	.db #0x56
   0D08 5E                 3072 	.db #0x5E
   0D09 01                 3073 	.db #0x01
   0D0A 0A                 3074 	.db #0x0A
   0D0B 12                 3075 	.db #0x12
   0D0C 1A                 3076 	.db #0x1A
   0D0D 23                 3077 	.db #0x23
   0D0E 2B                 3078 	.db #0x2B
   0D0F 33                 3079 	.db #0x33
   0D10 3C                 3080 	.db #0x3C
   0D11 44                 3081 	.db #0x44
   0D12 4C                 3082 	.db #0x4C
   0D13 56                 3083 	.db #0x56
   0D14 5E                 3084 	.db #0x5E
   0D15 67                 3085 	.db #0x67
   0D16 00                 3086 	.db #0x00
   0D17 00                 3087 	.db #0x00
   0D18 00                 3088 	.db #0x00
   0D19 00                 3089 	.db #0x00
   0D1A 00                 3090 	.db #0x00
   0D1B 00                 3091 	.db #0x00
   0D1C 01                 3092 	.db #0x01
   0D1D 09                 3093 	.db #0x09
   0D1E 11                 3094 	.db #0x11
   0D1F 18                 3095 	.db #0x18
   0D20 20                 3096 	.db #0x20
   0D21 28                 3097 	.db #0x28
   0D22 2F                 3098 	.db #0x2F
   0D23 37                 3099 	.db #0x37
   0D24 3F                 3100 	.db #0x3F
   0D25 45                 3101 	.db #0x45
   0D26 4C                 3102 	.db #0x4C
   0D27 54                 3103 	.db #0x54
   0D28 5A                 3104 	.db #0x5A
   0D29 64                 3105 	.db #0x64
   0D2A 01                 3106 	.db #0x01
   0D2B 09                 3107 	.db #0x09
   0D2C 11                 3108 	.db #0x11
   0D2D 19                 3109 	.db #0x19
   0D2E 21                 3110 	.db #0x21
   0D2F 29                 3111 	.db #0x29
   0D30 30                 3112 	.db #0x30
   0D31 38                 3113 	.db #0x38
   0D32 40                 3114 	.db #0x40
   0D33 4A                 3115 	.db #0x4A
   0D34 52                 3116 	.db #0x52
   0D35 5A                 3117 	.db #0x5A
   0D36 00                 3118 	.db 0x00
   0D37 00                 3119 	.db 0x00
   0D38 00                 3120 	.db 0x00
   0D39 00                 3121 	.db 0x00
   0D3A 00                 3122 	.db 0x00
   0D3B 00                 3123 	.db 0x00
   0D3C                    3124 _font_y:
   0D3C 1C                 3125 	.db #0x1C
   0D3D 1C                 3126 	.db #0x1C
   0D3E 1C                 3127 	.db #0x1C
   0D3F 1C                 3128 	.db #0x1C
   0D40 1C                 3129 	.db #0x1C
   0D41 1C                 3130 	.db #0x1C
   0D42 1C                 3131 	.db #0x1C
   0D43 1C                 3132 	.db #0x1C
   0D44 1C                 3133 	.db #0x1C
   0D45 1C                 3134 	.db #0x1C
   0D46 1C                 3135 	.db #0x1C
   0D47 1C                 3136 	.db #0x1C
   0D48 1C                 3137 	.db #0x1C
   0D49 25                 3138 	.db #0x25
   0D4A 25                 3139 	.db #0x25
   0D4B 25                 3140 	.db #0x25
   0D4C 25                 3141 	.db #0x25
   0D4D 25                 3142 	.db #0x25
   0D4E 25                 3143 	.db #0x25
   0D4F 25                 3144 	.db #0x25
   0D50 25                 3145 	.db #0x25
   0D51 25                 3146 	.db #0x25
   0D52 25                 3147 	.db #0x25
   0D53 25                 3148 	.db #0x25
   0D54 25                 3149 	.db #0x25
   0D55 25                 3150 	.db #0x25
   0D56 00                 3151 	.db #0x00
   0D57 00                 3152 	.db #0x00
   0D58 00                 3153 	.db #0x00
   0D59 00                 3154 	.db #0x00
   0D5A 00                 3155 	.db #0x00
   0D5B 00                 3156 	.db #0x00
   0D5C 37                 3157 	.db #0x37
   0D5D 37                 3158 	.db #0x37
   0D5E 37                 3159 	.db #0x37
   0D5F 37                 3160 	.db #0x37
   0D60 37                 3161 	.db #0x37
   0D61 37                 3162 	.db #0x37
   0D62 37                 3163 	.db #0x37
   0D63 37                 3164 	.db #0x37
   0D64 37                 3165 	.db #0x37
   0D65 37                 3166 	.db #0x37
   0D66 37                 3167 	.db #0x37
   0D67 37                 3168 	.db #0x37
   0D68 37                 3169 	.db #0x37
   0D69 37                 3170 	.db #0x37
   0D6A 40                 3171 	.db #0x40
   0D6B 40                 3172 	.db #0x40
   0D6C 40                 3173 	.db #0x40
   0D6D 40                 3174 	.db #0x40
   0D6E 40                 3175 	.db #0x40
   0D6F 40                 3176 	.db #0x40
   0D70 40                 3177 	.db #0x40
   0D71 40                 3178 	.db #0x40
   0D72 40                 3179 	.db #0x40
   0D73 40                 3180 	.db #0x40
   0D74 40                 3181 	.db #0x40
   0D75 40                 3182 	.db #0x40
   0D76 00                 3183 	.db 0x00
   0D77 00                 3184 	.db 0x00
   0D78 00                 3185 	.db 0x00
   0D79 00                 3186 	.db 0x00
   0D7A 00                 3187 	.db 0x00
   0D7B 00                 3188 	.db 0x00
   0D7C                    3189 _font_w:
   0D7C 07                 3190 	.db #0x07
   0D7D 07                 3191 	.db #0x07
   0D7E 07                 3192 	.db #0x07
   0D7F 07                 3193 	.db #0x07
   0D80 07                 3194 	.db #0x07
   0D81 07                 3195 	.db #0x07
   0D82 07                 3196 	.db #0x07
   0D83 07                 3197 	.db #0x07
   0D84 04                 3198 	.db #0x04
   0D85 07                 3199 	.db #0x07
   0D86 07                 3200 	.db #0x07
   0D87 07                 3201 	.db #0x07
   0D88 09                 3202 	.db #0x09
   0D89 08                 3203 	.db #0x08
   0D8A 07                 3204 	.db #0x07
   0D8B 07                 3205 	.db #0x07
   0D8C 08                 3206 	.db #0x08
   0D8D 07                 3207 	.db #0x07
   0D8E 07                 3208 	.db #0x07
   0D8F 08                 3209 	.db #0x08
   0D90 07                 3210 	.db #0x07
   0D91 07                 3211 	.db #0x07
   0D92 09                 3212 	.db #0x09
   0D93 07                 3213 	.db #0x07
   0D94 08                 3214 	.db #0x08
   0D95 07                 3215 	.db #0x07
   0D96 00                 3216 	.db #0x00
   0D97 00                 3217 	.db #0x00
   0D98 00                 3218 	.db #0x00
   0D99 00                 3219 	.db #0x00
   0D9A 00                 3220 	.db #0x00
   0D9B 00                 3221 	.db #0x00
   0D9C 07                 3222 	.db #0x07
   0D9D 07                 3223 	.db #0x07
   0D9E 06                 3224 	.db #0x06
   0D9F 07                 3225 	.db #0x07
   0DA0 07                 3226 	.db #0x07
   0DA1 07                 3227 	.db #0x07
   0DA2 07                 3228 	.db #0x07
   0DA3 07                 3229 	.db #0x07
   0DA4 05                 3230 	.db #0x05
   0DA5 06                 3231 	.db #0x06
   0DA6 07                 3232 	.db #0x07
   0DA7 05                 3233 	.db #0x05
   0DA8 09                 3234 	.db #0x09
   0DA9 07                 3235 	.db #0x07
   0DAA 07                 3236 	.db #0x07
   0DAB 07                 3237 	.db #0x07
   0DAC 07                 3238 	.db #0x07
   0DAD 07                 3239 	.db #0x07
   0DAE 07                 3240 	.db #0x07
   0DAF 06                 3241 	.db #0x06
   0DB0 07                 3242 	.db #0x07
   0DB1 07                 3243 	.db #0x07
   0DB2 09                 3244 	.db #0x09
   0DB3 07                 3245 	.db #0x07
   0DB4 07                 3246 	.db #0x07
   0DB5 07                 3247 	.db #0x07
   0DB6 00                 3248 	.db 0x00
   0DB7 00                 3249 	.db 0x00
   0DB8 00                 3250 	.db 0x00
   0DB9 00                 3251 	.db 0x00
   0DBA 00                 3252 	.db 0x00
   0DBB 00                 3253 	.db 0x00
                           3254 ;demo.c:450: void do_letter_tall(char cc) {
                           3255 ;	---------------------------------
                           3256 ; Function do_letter_tall
                           3257 ; ---------------------------------
   0DBC                    3258 _do_letter_tall_start::
   0DBC                    3259 _do_letter_tall:
   0DBC DD E5              3260 	push	ix
   0DBE DD 21 00 00        3261 	ld	ix,#0
   0DC2 DD 39              3262 	add	ix,sp
   0DC4 F5                 3263 	push	af
                           3264 ;demo.c:451: int cidx = cc - 65;
   0DC5 DD 4E 04           3265 	ld	c,4 (ix)
   0DC8 DD 7E 04           3266 	ld	a,4 (ix)
   0DCB 17                 3267 	rla	
   0DCC 9F                 3268 	sbc	a,a
   0DCD 47                 3269 	ld	b,a
   0DCE 79                 3270 	ld	a,c
   0DCF C6 BF              3271 	add	a,#0xBF
   0DD1 DD 77 FE           3272 	ld	-2 (ix),a
   0DD4 78                 3273 	ld	a,b
   0DD5 CE FF              3274 	adc	a,#0xFF
   0DD7 DD 77 FF           3275 	ld	-1 (ix),a
                           3276 ;demo.c:452: cmd.source_x = 127+font_x[cidx];
   0DDA 3ErFC              3277 	ld	a,#<_font_x
   0DDC DD 86 FE           3278 	add	a,-2 (ix)
   0DDF 5F                 3279 	ld	e,a
   0DE0 3Es0C              3280 	ld	a,#>_font_x
   0DE2 DD 8E FF           3281 	adc	a,-1 (ix)
   0DE5 57                 3282 	ld	d,a
   0DE6 1A                 3283 	ld	a,(de)
   0DE7 5F                 3284 	ld	e,a
   0DE8 16 00              3285 	ld	d,#0x00
   0DEA 21 7F 00           3286 	ld	hl,#0x007F
   0DED 19                 3287 	add	hl,de
   0DEE EB                 3288 	ex	de,hl
   0DEF 21r24s8F           3289 	ld	hl,#_cmd
   0DF2 73                 3290 	ld	(hl),e
   0DF3 23                 3291 	inc	hl
   0DF4 72                 3292 	ld	(hl),d
                           3293 ;demo.c:453: cmd.source_y = 512+font_y[cidx]-1;
   0DF5 11r26s8F           3294 	ld	de,#_cmd + 2
   0DF8 3Er3C              3295 	ld	a,#<_font_y
   0DFA DD 86 FE           3296 	add	a,-2 (ix)
   0DFD 4F                 3297 	ld	c,a
   0DFE 3Es0D              3298 	ld	a,#>_font_y
   0E00 DD 8E FF           3299 	adc	a,-1 (ix)
   0E03 47                 3300 	ld	b,a
   0E04 0A                 3301 	ld	a,(bc)
   0E05 4F                 3302 	ld	c,a
   0E06 06 00              3303 	ld	b,#0x00
   0E08 21 FF 01           3304 	ld	hl,#0x01FF
   0E0B 09                 3305 	add	hl,bc
   0E0C 4D                 3306 	ld	c,l
   0E0D 44                 3307 	ld	b,h
   0E0E EB                 3308 	ex	de,hl
   0E0F 71                 3309 	ld	(hl),c
   0E10 23                 3310 	inc	hl
   0E11 70                 3311 	ld	(hl),b
                           3312 ;demo.c:454: cmd.dest_x = lx;
   0E12 01r28s8F           3313 	ld	bc,#_cmd + 4
   0E15 21r6Es8F           3314 	ld	hl,#_lx + 0
   0E18 5E                 3315 	ld	e,(hl)
   0E19 16 00              3316 	ld	d,#0x00
   0E1B 69                 3317 	ld	l,c
   0E1C 60                 3318 	ld	h,b
   0E1D 73                 3319 	ld	(hl),e
   0E1E 23                 3320 	inc	hl
   0E1F 72                 3321 	ld	(hl),d
                           3322 ;demo.c:455: cmd.dest_y = ly;
   0E20 01r2As8F           3323 	ld	bc,#_cmd + 6
   0E23 21r6Fs8F           3324 	ld	hl,#_ly + 0
   0E26 5E                 3325 	ld	e,(hl)
   0E27 16 00              3326 	ld	d,#0x00
   0E29 69                 3327 	ld	l,c
   0E2A 60                 3328 	ld	h,b
   0E2B 73                 3329 	ld	(hl),e
   0E2C 23                 3330 	inc	hl
   0E2D 72                 3331 	ld	(hl),d
                           3332 ;demo.c:456: cmd.size_x = font_w[cidx];
   0E2E 01r2Cs8F           3333 	ld	bc,#_cmd + 8
   0E31 3Er7C              3334 	ld	a,#<_font_w
   0E33 DD 86 FE           3335 	add	a,-2 (ix)
   0E36 5F                 3336 	ld	e,a
   0E37 3Es0D              3337 	ld	a,#>_font_w
   0E39 DD 8E FF           3338 	adc	a,-1 (ix)
   0E3C 57                 3339 	ld	d,a
   0E3D 1A                 3340 	ld	a,(de)
   0E3E 5F                 3341 	ld	e,a
   0E3F 16 00              3342 	ld	d,#0x00
   0E41 69                 3343 	ld	l,c
   0E42 60                 3344 	ld	h,b
   0E43 73                 3345 	ld	(hl),e
   0E44 23                 3346 	inc	hl
   0E45 72                 3347 	ld	(hl),d
                           3348 ;demo.c:457: cmd.size_y = 10;
   0E46 21r2Es8F           3349 	ld	hl, #_cmd + 10
   0E49 36 0A              3350 	ld	(hl),#0x0A
   0E4B 23                 3351 	inc	hl
   0E4C 36 00              3352 	ld	(hl),#0x00
                           3353 ;demo.c:458: cmd.argument = 0x00;
   0E4E 3E 00              3354 	ld	a,#0x00
   0E50 32r31s8F           3355 	ld	(#_cmd + 13),a
                           3356 ;demo.c:459: cmd.command = 0x90; // logical vram to vram
   0E53 3E 90              3357 	ld	a,#0x90
   0E55 32r32s8F           3358 	ld	(#_cmd + 14),a
                           3359 ;demo.c:460: vdp_copier(&cmd);
   0E58 21r24s8F           3360 	ld	hl,#_cmd
   0E5B E5                 3361 	push	hl
   0E5C CDr00s00           3362 	call	_vdp_copier
   0E5F F1                 3363 	pop	af
                           3364 ;demo.c:461: lx+=font_w[cidx]-1;
   0E60 3Er7C              3365 	ld	a,#<_font_w
   0E62 DD 86 FE           3366 	add	a,-2 (ix)
   0E65 4F                 3367 	ld	c,a
   0E66 3Es0D              3368 	ld	a,#>_font_w
   0E68 DD 8E FF           3369 	adc	a,-1 (ix)
   0E6B 47                 3370 	ld	b,a
   0E6C 0A                 3371 	ld	a,(bc)
   0E6D 4F                 3372 	ld	c,a
   0E6E 0D                 3373 	dec	c
   0E6F 21r6Es8F           3374 	ld	hl,#_lx
   0E72 7E                 3375 	ld	a,(hl)
   0E73 81                 3376 	add	a,c
   0E74 77                 3377 	ld	(hl),a
   0E75 DD F9              3378 	ld	sp,ix
   0E77 DD E1              3379 	pop	ix
   0E79 C9                 3380 	ret
   0E7A                    3381 _do_letter_tall_end::
                           3382 ;demo.c:464: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3383 ;	---------------------------------
                           3384 ; Function drawstr
                           3385 ; ---------------------------------
   0E7A                    3386 _drawstr_start::
   0E7A                    3387 _drawstr:
   0E7A DD E5              3388 	push	ix
   0E7C DD 21 00 00        3389 	ld	ix,#0
   0E80 DD 39              3390 	add	ix,sp
                           3391 ;demo.c:465: char* c = str;
   0E82 DD 4E 04           3392 	ld	c,4 (ix)
   0E85 DD 46 05           3393 	ld	b,5 (ix)
                           3394 ;demo.c:466: lx = x;
   0E88 DD 5E 06           3395 	ld	e,6 (ix)
   0E8B 21r6Es8F           3396 	ld	hl,#_lx + 0
   0E8E 73                 3397 	ld	(hl), e
                           3398 ;demo.c:467: ly = y;
   0E8F DD 7E 07           3399 	ld	a,7 (ix)
   0E92 21r6Fs8F           3400 	ld	hl,#_ly + 0
   0E95 77                 3401 	ld	(hl), a
                           3402 ;demo.c:468: while (*c) {
   0E96                    3403 00107$:
   0E96 0A                 3404 	ld	a,(bc)
   0E97 57                 3405 	ld	d,a
   0E98 B7                 3406 	or	a,a
   0E99 28 42              3407 	jr	Z,00110$
                           3408 ;demo.c:469: char ltr = *c++; 
   0E9B 03                 3409 	inc	bc
                           3410 ;demo.c:470: if (ltr == ' ') lx+=4;
   0E9C 7A                 3411 	ld	a,d
   0E9D D6 20              3412 	sub	a,#0x20
   0E9F 20 1E              3413 	jr	NZ,00105$
   0EA1 FD 21r6Es8F        3414 	ld	iy,#_lx
   0EA5 FD 34 00           3415 	inc	0 (iy)
   0EA8 FD 21r6Es8F        3416 	ld	iy,#_lx
   0EAC FD 34 00           3417 	inc	0 (iy)
   0EAF FD 21r6Es8F        3418 	ld	iy,#_lx
   0EB3 FD 34 00           3419 	inc	0 (iy)
   0EB6 FD 21r6Es8F        3420 	ld	iy,#_lx
   0EBA FD 34 00           3421 	inc	0 (iy)
   0EBD 18 D7              3422 	jr	00107$
   0EBF                    3423 00105$:
                           3424 ;demo.c:471: else if (ltr == '_') { ly+=9; lx = x; }
   0EBF 7A                 3425 	ld	a,d
   0EC0 D6 5F              3426 	sub	a,#0x5F
   0EC2 20 0D              3427 	jr	NZ,00102$
   0EC4 21r6Fs8F           3428 	ld	hl,#_ly
   0EC7 7E                 3429 	ld	a,(hl)
   0EC8 C6 09              3430 	add	a,#0x09
   0ECA 77                 3431 	ld	(hl),a
   0ECB 21r6Es8F           3432 	ld	hl,#_lx + 0
   0ECE 73                 3433 	ld	(hl), e
   0ECF 18 C5              3434 	jr	00107$
   0ED1                    3435 00102$:
                           3436 ;demo.c:472: else do_letter(ltr);
   0ED1 C5                 3437 	push	bc
   0ED2 D5                 3438 	push	de
   0ED3 D5                 3439 	push	de
   0ED4 33                 3440 	inc	sp
   0ED5 CDr3Es0C           3441 	call	_do_letter
   0ED8 33                 3442 	inc	sp
   0ED9 D1                 3443 	pop	de
   0EDA C1                 3444 	pop	bc
   0EDB 18 B9              3445 	jr	00107$
   0EDD                    3446 00110$:
   0EDD DD E1              3447 	pop	ix
   0EDF C9                 3448 	ret
   0EE0                    3449 _drawstr_end::
                           3450 ;demo.c:476: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3451 ;	---------------------------------
                           3452 ; Function drawsine
                           3453 ; ---------------------------------
   0EE0                    3454 _drawsine_start::
   0EE0                    3455 _drawsine:
   0EE0 DD E5              3456 	push	ix
   0EE2 DD 21 00 00        3457 	ld	ix,#0
   0EE6 DD 39              3458 	add	ix,sp
   0EE8 3B                 3459 	dec	sp
                           3460 ;demo.c:477: char* c = str;
   0EE9 DD 4E 04           3461 	ld	c,4 (ix)
   0EEC DD 46 05           3462 	ld	b,5 (ix)
                           3463 ;demo.c:478: lx = x;
   0EEF DD 7E 06           3464 	ld	a,6 (ix)
   0EF2 21r6Es8F           3465 	ld	hl,#_lx + 0
   0EF5 77                 3466 	ld	(hl), a
                           3467 ;demo.c:480: while (*c) {
   0EF6                    3468 00104$:
   0EF6 0A                 3469 	ld	a,(bc)
   0EF7 5F                 3470 	ld	e,a
   0EF8 B7                 3471 	or	a,a
   0EF9 CAr6Ds0F           3472 	jp	Z,00107$
                           3473 ;demo.c:481: char ltr = *c++; 
   0EFC 03                 3474 	inc	bc
   0EFD DD 73 FF           3475 	ld	-1 (ix),e
                           3476 ;demo.c:482: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   0F00 21r6Es8F           3477 	ld	hl,#_lx + 0
   0F03 5E                 3478 	ld	e,(hl)
   0F04 16 00              3479 	ld	d,#0x00
   0F06 21r20s8F           3480 	ld	hl,#_vbicount
   0F09 7B                 3481 	ld	a,e
   0F0A 86                 3482 	add	a,(hl)
   0F0B 5F                 3483 	ld	e,a
   0F0C 7A                 3484 	ld	a,d
   0F0D 23                 3485 	inc	hl
   0F0E 8E                 3486 	adc	a,(hl)
   0F0F 57                 3487 	ld	d,a
   0F10 CB 2A              3488 	sra	d
   0F12 CB 1B              3489 	rr	e
   0F14 16 00              3490 	ld	d,#0x00
   0F16 CB 23              3491 	sla	e
   0F18 CB 12              3492 	rl	d
   0F1A 21r2Cs00           3493 	ld	hl,#_sintabx
   0F1D 19                 3494 	add	hl,de
   0F1E 5E                 3495 	ld	e,(hl)
   0F1F 23                 3496 	inc	hl
   0F20 56                 3497 	ld	d,(hl)
   0F21 CB 3A              3498 	srl	d
   0F23 CB 1B              3499 	rr	e
   0F25 CB 3A              3500 	srl	d
   0F27 CB 1B              3501 	rr	e
   0F29 CB 3A              3502 	srl	d
   0F2B CB 1B              3503 	rr	e
   0F2D CB 3A              3504 	srl	d
   0F2F CB 1B              3505 	rr	e
   0F31 21r6Fs8F           3506 	ld	hl,#_ly
   0F34 DD 7E 07           3507 	ld	a,7 (ix)
   0F37 83                 3508 	add	a,e
   0F38 77                 3509 	ld	(hl),a
                           3510 ;demo.c:483: if (ltr == ' ') lx+=4;
   0F39 DD 7E FF           3511 	ld	a,-1 (ix)
   0F3C D6 20              3512 	sub	a,#0x20
   0F3E 20 1F              3513 	jr	NZ,00102$
   0F40 FD 21r6Es8F        3514 	ld	iy,#_lx
   0F44 FD 34 00           3515 	inc	0 (iy)
   0F47 FD 21r6Es8F        3516 	ld	iy,#_lx
   0F4B FD 34 00           3517 	inc	0 (iy)
   0F4E FD 21r6Es8F        3518 	ld	iy,#_lx
   0F52 FD 34 00           3519 	inc	0 (iy)
   0F55 FD 21r6Es8F        3520 	ld	iy,#_lx
   0F59 FD 34 00           3521 	inc	0 (iy)
   0F5C C3rF6s0E           3522 	jp	00104$
   0F5F                    3523 00102$:
                           3524 ;demo.c:484: else do_letter_tall(ltr);
   0F5F C5                 3525 	push	bc
   0F60 DD 7E FF           3526 	ld	a,-1 (ix)
   0F63 F5                 3527 	push	af
   0F64 33                 3528 	inc	sp
   0F65 CDrBCs0D           3529 	call	_do_letter_tall
   0F68 33                 3530 	inc	sp
   0F69 C1                 3531 	pop	bc
   0F6A C3rF6s0E           3532 	jp	00104$
   0F6D                    3533 00107$:
   0F6D DD F9              3534 	ld	sp,ix
   0F6F DD E1              3535 	pop	ix
   0F71 C9                 3536 	ret
   0F72                    3537 _drawsine_end::
                           3538 ;demo.c:488: void font() {
                           3539 ;	---------------------------------
                           3540 ; Function font
                           3541 ; ---------------------------------
   0F72                    3542 _font_start::
   0F72                    3543 _font:
                           3544 ;demo.c:490: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   0F72 21 4A 3C           3545 	ld	hl,#0x3C4A
   0F75 E5                 3546 	push	hl
   0F76 21r80s0F           3547 	ld	hl,#__str_8
   0F79 E5                 3548 	push	hl
   0F7A CDr7As0E           3549 	call	_drawstr
   0F7D F1                 3550 	pop	af
   0F7E F1                 3551 	pop	af
   0F7F C9                 3552 	ret
   0F80                    3553 _font_end::
   0F80                    3554 __str_8:
   0F80 44 49 47 49 54 41  3555 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   0FBC 4F 4E 5F 5F 20 20  3556 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   0FE2 00                 3557 	.db 0x00
                           3558 ;demo.c:499: void twister() {
                           3559 ;	---------------------------------
                           3560 ; Function twister
                           3561 ; ---------------------------------
   0FE3                    3562 _twister_start::
   0FE3                    3563 _twister:
   0FE3 DD E5              3564 	push	ix
   0FE5 DD 21 00 00        3565 	ld	ix,#0
   0FE9 DD 39              3566 	add	ix,sp
   0FEB F5                 3567 	push	af
                           3568 ;demo.c:503: if (twinited == 0) {
   0FEC 3Ar72s8F           3569 	ld	a,(#_twinited+0)
   0FEF FD 21r72s8F        3570 	ld	iy,#_twinited
   0FF3 FD B6 01           3571 	or	a,1 (iy)
   0FF6 C2r70s10           3572 	jp	NZ,00102$
                           3573 ;demo.c:504: cmd.size_x = 256;
   0FF9 21r2Cs8F           3574 	ld	hl, #_cmd + 8
   0FFC 36 00              3575 	ld	(hl),#0x00
   0FFE 23                 3576 	inc	hl
   0FFF 36 01              3577 	ld	(hl),#0x01
                           3578 ;demo.c:505: cmd.size_y = 1;
   1001 21r2Es8F           3579 	ld	hl, #_cmd + 10
   1004 36 01              3580 	ld	(hl),#0x01
   1006 23                 3581 	inc	hl
   1007 36 00              3582 	ld	(hl),#0x00
                           3583 ;demo.c:506: cmd.data = 0;
   1009 3E 00              3584 	ld	a,#0x00
   100B 32r30s8F           3585 	ld	(#_cmd + 12),a
                           3586 ;demo.c:507: cmd.argument = 0x04; // from 70xY to left
   100E 3E 04              3587 	ld	a,#0x04
   1010 32r31s8F           3588 	ld	(#_cmd + 13),a
                           3589 ;demo.c:508: cmd.command = 0xe0; // vram to vram, y only
   1013 01r32s8F           3590 	ld	bc,#_cmd + 14
   1016 3E E0              3591 	ld	a,#0xE0
   1018 02                 3592 	ld	(bc),a
                           3593 ;demo.c:509: cmd.source_x = 256;
   1019 21r24s8F           3594 	ld	hl,#_cmd
   101C 36 00              3595 	ld	(hl),#0x00
   101E 23                 3596 	inc	hl
   101F 36 01              3597 	ld	(hl),#0x01
                           3598 ;demo.c:510: cmd.dest_x = 256;
   1021 21r28s8F           3599 	ld	hl, #_cmd + 4
   1024 36 00              3600 	ld	(hl),#0x00
   1026 23                 3601 	inc	hl
   1027 36 01              3602 	ld	(hl),#0x01
                           3603 ;demo.c:512: for (y = 0; y < 212; y+=1) {
   1029 01 00 00           3604 	ld	bc,#0x0000
   102C                    3605 00103$:
   102C 79                 3606 	ld	a,c
   102D D6 D4              3607 	sub	a,#0xD4
   102F 78                 3608 	ld	a,b
   1030 DE 00              3609 	sbc	a,#0x00
   1032 F2r53s10           3610 	jp	P,00106$
                           3611 ;demo.c:513: waitVB();
   1035 76                 3612 		halt 
                           3613 ;demo.c:514: cmd.source_y = 0;
   1036 11r26s8F           3614 	ld	de,#_cmd + 2
   1039 EB                 3615 	ex	de,hl
   103A 36 00              3616 	ld	(hl),#0x00
   103C 23                 3617 	inc	hl
   103D 36 00              3618 	ld	(hl),#0x00
                           3619 ;demo.c:515: cmd.dest_y = y;
   103F 11r2As8F           3620 	ld	de,#_cmd + 6
   1042 EB                 3621 	ex	de,hl
   1043 71                 3622 	ld	(hl),c
   1044 23                 3623 	inc	hl
   1045 70                 3624 	ld	(hl),b
                           3625 ;demo.c:516: vdp_copier(&cmd);
   1046 C5                 3626 	push	bc
   1047 21r24s8F           3627 	ld	hl,#_cmd
   104A E5                 3628 	push	hl
   104B CDr00s00           3629 	call	_vdp_copier
   104E F1                 3630 	pop	af
   104F C1                 3631 	pop	bc
                           3632 ;demo.c:512: for (y = 0; y < 212; y+=1) {
   1050 03                 3633 	inc	bc
   1051 18 D9              3634 	jr	00103$
   1053                    3635 00106$:
                           3636 ;demo.c:520: twinited = 1;
   1053 21r72s8F           3637 	ld	hl,#_twinited + 0
   1056 36 01              3638 	ld	(hl), #0x01
   1058 21r73s8F           3639 	ld	hl,#_twinited + 1
   105B 36 00              3640 	ld	(hl), #0x00
                           3641 ;demo.c:521: vdp_register(8,0x2); // no sprites
   105D 21 08 02           3642 	ld	hl,#0x0208
   1060 E5                 3643 	push	hl
   1061 CDr00s00           3644 	call	_vdp_register
   1064 F1                 3645 	pop	af
                           3646 ;demo.c:522: vdp_load_palette(twister_palette);
   1065 21rC0s8E           3647 	ld	hl,#_twister_palette
   1068 E5                 3648 	push	hl
   1069 CDr00s00           3649 	call	_vdp_load_palette
   106C F1                 3650 	pop	af
                           3651 ;demo.c:523: font();
   106D CDr72s0F           3652 	call	_font
   1070                    3653 00102$:
                           3654 ;demo.c:526: cmd.size_x = 70;
   1070 21r2Cs8F           3655 	ld	hl, #_cmd + 8
   1073 36 46              3656 	ld	(hl),#0x46
   1075 23                 3657 	inc	hl
   1076 36 00              3658 	ld	(hl),#0x00
                           3659 ;demo.c:527: cmd.size_y = 2;
   1078 21r2Es8F           3660 	ld	hl, #_cmd + 10
   107B 36 02              3661 	ld	(hl),#0x02
   107D 23                 3662 	inc	hl
   107E 36 00              3663 	ld	(hl),#0x00
                           3664 ;demo.c:528: cmd.data = 0;
   1080 3E 00              3665 	ld	a,#0x00
   1082 32r30s8F           3666 	ld	(#_cmd + 12),a
                           3667 ;demo.c:529: cmd.argument = 0x04; // from 70xY to left
   1085 3E 04              3668 	ld	a,#0x04
   1087 32r31s8F           3669 	ld	(#_cmd + 13),a
                           3670 ;demo.c:530: cmd.command = 0xe0; // vram to vram, y only
   108A 01r32s8F           3671 	ld	bc,#_cmd + 14
   108D 3E E0              3672 	ld	a,#0xE0
   108F 02                 3673 	ld	(bc),a
                           3674 ;demo.c:531: cmd.source_x = 70;
   1090 21r24s8F           3675 	ld	hl,#_cmd
   1093 36 46              3676 	ld	(hl),#0x46
   1095 23                 3677 	inc	hl
   1096 36 00              3678 	ld	(hl),#0x00
                           3679 ;demo.c:532: cmd.dest_x = 70;
   1098 21r28s8F           3680 	ld	hl, #_cmd + 4
   109B 36 46              3681 	ld	(hl),#0x46
   109D 23                 3682 	inc	hl
   109E 36 00              3683 	ld	(hl),#0x00
                           3684 ;demo.c:534: for (y = 0; y < 212; y+=2) {
   10A0 DD 36 FE 00        3685 	ld	-2 (ix),#0x00
   10A4 DD 36 FF 00        3686 	ld	-1 (ix),#0x00
   10A8                    3687 00107$:
   10A8 DD 7E FE           3688 	ld	a,-2 (ix)
   10AB D6 D4              3689 	sub	a,#0xD4
   10AD DD 7E FF           3690 	ld	a,-1 (ix)
   10B0 DE 00              3691 	sbc	a,#0x00
   10B2 F2r0Bs11           3692 	jp	P,00110$
                           3693 ;demo.c:535: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   10B5 11r26s8F           3694 	ld	de,#_cmd + 2
   10B8 DD 4E FE           3695 	ld	c,-2 (ix)
   10BB DD 46 FF           3696 	ld	b,-1 (ix)
   10BE CB 28              3697 	sra	b
   10C0 CB 19              3698 	rr	c
   10C2 3Ar70s8F           3699 	ld	a,(#_ff+0)
   10C5 81                 3700 	add	a,c
   10C6 4F                 3701 	ld	c,a
   10C7 3Ar71s8F           3702 	ld	a,(#_ff+1)
   10CA 88                 3703 	adc	a,b
   10CB 06 00              3704 	ld	b,#0x00
   10CD 21r00s00           3705 	ld	hl,#_sintab
   10D0 09                 3706 	add	hl,bc
   10D1 7E                 3707 	ld	a,(hl)
   10D2 4F                 3708 	ld	c,a
   10D3 CB 29              3709 	sra	c
   10D5 79                 3710 	ld	a,c
   10D6 17                 3711 	rla	
   10D7 9F                 3712 	sbc	a,a
   10D8 47                 3713 	ld	b,a
   10D9 21 40 02           3714 	ld	hl,#0x0240
   10DC 09                 3715 	add	hl,bc
   10DD 4D                 3716 	ld	c,l
   10DE 44                 3717 	ld	b,h
   10DF 6B                 3718 	ld	l,e
   10E0 62                 3719 	ld	h,d
   10E1 71                 3720 	ld	(hl),c
   10E2 23                 3721 	inc	hl
   10E3 70                 3722 	ld	(hl),b
                           3723 ;demo.c:536: cmd.dest_y = y;
   10E4 21r2As8F           3724 	ld	hl, #_cmd + 6
   10E7 DD 7E FE           3725 	ld	a,-2 (ix)
   10EA 77                 3726 	ld	(hl),a
   10EB 23                 3727 	inc	hl
   10EC DD 7E FF           3728 	ld	a,-1 (ix)
   10EF 77                 3729 	ld	(hl),a
                           3730 ;demo.c:537: vdp_copier(&cmd);
   10F0 21r24s8F           3731 	ld	hl,#_cmd
   10F3 E5                 3732 	push	hl
   10F4 CDr00s00           3733 	call	_vdp_copier
   10F7 F1                 3734 	pop	af
                           3735 ;demo.c:534: for (y = 0; y < 212; y+=2) {
   10F8 DD 7E FE           3736 	ld	a,-2 (ix)
   10FB C6 02              3737 	add	a,#0x02
   10FD DD 77 FE           3738 	ld	-2 (ix),a
   1100 DD 7E FF           3739 	ld	a,-1 (ix)
   1103 CE 00              3740 	adc	a,#0x00
   1105 DD 77 FF           3741 	ld	-1 (ix),a
   1108 C3rA8s10           3742 	jp	00107$
   110B                    3743 00110$:
                           3744 ;demo.c:541: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   110B 21r70s8F           3745 	ld	hl,#_ff + 0
   110E 4E                 3746 	ld	c,(hl)
   110F 21r71s8F           3747 	ld	hl,#_ff + 1
   1112 46                 3748 	ld	b,(hl)
   1113 CB 28              3749 	sra	b
   1115 CB 19              3750 	rr	c
   1117 CB 28              3751 	sra	b
   1119 CB 19              3752 	rr	c
   111B 21r70s8F           3753 	ld	hl,#_ff + 0
   111E 5E                 3754 	ld	e,(hl)
   111F 21r71s8F           3755 	ld	hl,#_ff + 1
   1122 56                 3756 	ld	d,(hl)
   1123 CB 2A              3757 	sra	d
   1125 CB 1B              3758 	rr	e
   1127 CB 2A              3759 	sra	d
   1129 CB 1B              3760 	rr	e
   112B CB 2A              3761 	sra	d
   112D CB 1B              3762 	rr	e
   112F 43                 3763 	ld	b,e
   1130 79                 3764 	ld	a,c
   1131 F5                 3765 	push	af
   1132 33                 3766 	inc	sp
   1133 C5                 3767 	push	bc
   1134 33                 3768 	inc	sp
   1135 41                 3769 	ld	b,c
   1136 0E 04              3770 	ld	c,#0x04
   1138 C5                 3771 	push	bc
   1139 CDr00s00           3772 	call	_msx2_palette
   113C F1                 3773 	pop	af
   113D F1                 3774 	pop	af
                           3775 ;demo.c:543: ff+=4;
   113E 21r70s8F           3776 	ld	hl,#_ff
   1141 7E                 3777 	ld	a,(hl)
   1142 C6 04              3778 	add	a,#0x04
   1144 23                 3779 	inc	hl
   1145 2B                 3780 	dec	hl
   1146 C5                 3781 	push	bc
   1147 4F                 3782 	ld	c, a
   1148 23                 3783 	inc	hl
   1149 7E                 3784 	ld	a, (hl)
   114A 47                 3785 	ld	b, a
   114B 79                 3786 	ld	a, c
   114C 2B                 3787 	dec	hl
   114D 77                 3788 	ld	(hl), a
   114E 78                 3789 	ld	a, b
   114F C1                 3790 	pop	bc
   1150 CE 00              3791 	adc	a,#0x00
   1152 23                 3792 	inc	hl
   1153 77                 3793 	ld	(hl),a
   1154 DD F9              3794 	ld	sp,ix
   1156 DD E1              3795 	pop	ix
   1158 C9                 3796 	ret
   1159                    3797 _twister_end::
                           3798 ;demo.c:553: void bulbs() {
                           3799 ;	---------------------------------
                           3800 ; Function bulbs
                           3801 ; ---------------------------------
   1159                    3802 _bulbs_start::
   1159                    3803 _bulbs:
   1159 DD E5              3804 	push	ix
   115B DD 21 00 00        3805 	ld	ix,#0
   115F DD 39              3806 	add	ix,sp
   1161 F5                 3807 	push	af
   1162 F5                 3808 	push	af
                           3809 ;demo.c:557: ender+=enderdir;
   1163 21r7Cs8F           3810 	ld	hl,#_enderdir
   1166 D5                 3811 	push	de
   1167 FD 21r7As8F        3812 	ld	iy,#_ender
   116B FD E5              3813 	push	iy
   116D D1                 3814 	pop	de
   116E 1A                 3815 	ld	a,(de)
   116F 86                 3816 	add	a,(hl)
   1170 13                 3817 	inc	de
   1171 1B                 3818 	dec	de
   1172 C5                 3819 	push	bc
   1173 4F                 3820 	ld	c, a
   1174 13                 3821 	inc	de
   1175 1A                 3822 	ld	a, (de)
   1176 47                 3823 	ld	b, a
   1177 79                 3824 	ld	a, c
   1178 1B                 3825 	dec	de
   1179 12                 3826 	ld	(de), a
   117A 78                 3827 	ld	a, b
   117B C1                 3828 	pop	bc
   117C 23                 3829 	inc	hl
   117D 8E                 3830 	adc	a,(hl)
   117E 13                 3831 	inc	de
   117F 12                 3832 	ld	(de),a
   1180 D1                 3833 	pop	de
                           3834 ;demo.c:558: if (ender < 2) enderdir = -enderdir;
   1181 3Ar7As8F           3835 	ld	a,(#_ender+0)
   1184 D6 02              3836 	sub	a,#0x02
   1186 3Ar7Bs8F           3837 	ld	a,(#_ender+1)
   1189 DE 00              3838 	sbc	a,#0x00
   118B F2rAFs11           3839 	jp	P,00102$
   118E AF                 3840 	xor	a,a
   118F FD 21r7Cs8F        3841 	ld	iy,#_enderdir
   1193 3E 00              3842 	ld	a,#0x00
   1195 FD 9E 00           3843 	sbc	a,0 (iy)
   1198 FD 21r7Cs8F        3844 	ld	iy,#_enderdir
   119C FD 77 00           3845 	ld	0 (iy),a
   119F FD 21r7Cs8F        3846 	ld	iy,#_enderdir
   11A3 3E 00              3847 	ld	a,#0x00
   11A5 FD 9E 01           3848 	sbc	a,1 (iy)
   11A8 FD 21r7Cs8F        3849 	ld	iy,#_enderdir
   11AC FD 77 01           3850 	ld	1 (iy),a
   11AF                    3851 00102$:
                           3852 ;demo.c:559: if (ender >= 212) enderdir = -enderdir;
   11AF 3Ar7As8F           3853 	ld	a,(#_ender+0)
   11B2 D6 D4              3854 	sub	a,#0xD4
   11B4 3Ar7Bs8F           3855 	ld	a,(#_ender+1)
   11B7 DE 00              3856 	sbc	a,#0x00
   11B9 FArDDs11           3857 	jp	M,00104$
   11BC AF                 3858 	xor	a,a
   11BD FD 21r7Cs8F        3859 	ld	iy,#_enderdir
   11C1 3E 00              3860 	ld	a,#0x00
   11C3 FD 9E 00           3861 	sbc	a,0 (iy)
   11C6 FD 21r7Cs8F        3862 	ld	iy,#_enderdir
   11CA FD 77 00           3863 	ld	0 (iy),a
   11CD FD 21r7Cs8F        3864 	ld	iy,#_enderdir
   11D1 3E 00              3865 	ld	a,#0x00
   11D3 FD 9E 01           3866 	sbc	a,1 (iy)
   11D6 FD 21r7Cs8F        3867 	ld	iy,#_enderdir
   11DA FD 77 01           3868 	ld	1 (iy),a
   11DD                    3869 00104$:
                           3870 ;demo.c:561: enderend = ender + 92;
   11DD 3Ar7As8F           3871 	ld	a,(#_ender+0)
   11E0 C6 5C              3872 	add	a,#0x5C
   11E2 DD 77 FE           3873 	ld	-2 (ix),a
   11E5 3Ar7Bs8F           3874 	ld	a,(#_ender+1)
   11E8 CE 00              3875 	adc	a,#0x00
   11EA DD 77 FF           3876 	ld	-1 (ix),a
                           3877 ;demo.c:563: if (enderend > 212) enderend = 212;
   11ED 3E D4              3878 	ld	a,#0xD4
   11EF DD 96 FE           3879 	sub	a,-2 (ix)
   11F2 3E 00              3880 	ld	a,#0x00
   11F4 DD 9E FF           3881 	sbc	a,-1 (ix)
   11F7 F2r02s12           3882 	jp	P,00106$
   11FA DD 36 FE D4        3883 	ld	-2 (ix),#0xD4
   11FE DD 36 FF 00        3884 	ld	-1 (ix),#0x00
   1202                    3885 00106$:
                           3886 ;demo.c:565: if(bulbflipper == 1) {
   1202 3Ar74s8F           3887 	ld	a,(#_bulbflipper+0)
   1205 D6 01              3888 	sub	a,#0x01
   1207 20 06              3889 	jr	NZ,00130$
   1209 3Ar75s8F           3890 	ld	a,(#_bulbflipper+1)
   120C B7                 3891 	or	a,a
   120D 28 03              3892 	jr	Z,00131$
   120F                    3893 00130$:
   120F C3rB9s12           3894 	jp	00108$
   1212                    3895 00131$:
                           3896 ;demo.c:566: cmd.size_x = 72;
   1212 11r2Cs8F           3897 	ld	de,#_cmd + 8
   1215 EB                 3898 	ex	de,hl
   1216 36 48              3899 	ld	(hl),#0x48
   1218 23                 3900 	inc	hl
   1219 36 00              3901 	ld	(hl),#0x00
                           3902 ;demo.c:567: cmd.size_y = 16;
   121B 11r2Es8F           3903 	ld	de,#_cmd + 10
   121E EB                 3904 	ex	de,hl
   121F 36 10              3905 	ld	(hl),#0x10
   1221 23                 3906 	inc	hl
   1222 36 00              3907 	ld	(hl),#0x00
                           3908 ;demo.c:568: cmd.data = 0;
   1224 11r30s8F           3909 	ld	de,#_cmd + 12
   1227 3E 00              3910 	ld	a,#0x00
   1229 12                 3911 	ld	(de),a
                           3912 ;demo.c:569: cmd.argument = 0x04; // from 72xY to left
   122A 11r31s8F           3913 	ld	de,#_cmd + 13
   122D 3E 04              3914 	ld	a,#0x04
   122F 12                 3915 	ld	(de),a
                           3916 ;demo.c:570: cmd.command = 0xe0; // vram to vram, y only
   1230 11r32s8F           3917 	ld	de,#_cmd + 14
   1233 3E E0              3918 	ld	a,#0xE0
   1235 12                 3919 	ld	(de),a
                           3920 ;demo.c:571: cmd.source_x = 72;
   1236 21r24s8F           3921 	ld	hl,#_cmd
   1239 36 48              3922 	ld	(hl),#0x48
   123B 23                 3923 	inc	hl
   123C 36 00              3924 	ld	(hl),#0x00
                           3925 ;demo.c:572: cmd.dest_x = 72;
   123E 11r28s8F           3926 	ld	de,#_cmd + 4
   1241 6B                 3927 	ld	l,e
   1242 62                 3928 	ld	h,d
   1243 36 48              3929 	ld	(hl),#0x48
   1245 23                 3930 	inc	hl
   1246 36 00              3931 	ld	(hl),#0x00
                           3932 ;demo.c:574: for (y = ender; y < enderend; y+=16) {
   1248 ED 4Br7As8F        3933 	ld	bc,(_ender)
   124C 59                 3934 	ld	e,c
   124D 50                 3935 	ld	d,b
   124E                    3936 00110$:
   124E 7B                 3937 	ld	a,e
   124F DD 96 FE           3938 	sub	a,-2 (ix)
   1252 7A                 3939 	ld	a,d
   1253 DD 9E FF           3940 	sbc	a,-1 (ix)
   1256 F2rA0s12           3941 	jp	P,00113$
                           3942 ;demo.c:575: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   1259 21r26s8F           3943 	ld	hl,#_cmd + 2
   125C DD 75 FC           3944 	ld	-4 (ix),l
   125F DD 74 FD           3945 	ld	-3 (ix),h
   1262 3Ar76s8F           3946 	ld	a,(#_ff1+0)
   1265 83                 3947 	add	a,e
   1266 4F                 3948 	ld	c,a
   1267 3Ar77s8F           3949 	ld	a,(#_ff1+1)
   126A 8A                 3950 	adc	a,d
   126B 06 00              3951 	ld	b,#0x00
   126D 21r00s00           3952 	ld	hl,#_sintab
   1270 09                 3953 	add	hl,bc
   1271 7E                 3954 	ld	a,(hl)
   1272 4F                 3955 	ld	c,a
   1273 CB 29              3956 	sra	c
   1275 79                 3957 	ld	a,c
   1276 17                 3958 	rla	
   1277 9F                 3959 	sbc	a,a
   1278 47                 3960 	ld	b,a
   1279 21 40 01           3961 	ld	hl,#0x0140
   127C 09                 3962 	add	hl,bc
   127D 4D                 3963 	ld	c,l
   127E 44                 3964 	ld	b,h
   127F DD 6E FC           3965 	ld	l,-4 (ix)
   1282 DD 66 FD           3966 	ld	h,-3 (ix)
   1285 71                 3967 	ld	(hl),c
   1286 23                 3968 	inc	hl
   1287 70                 3969 	ld	(hl),b
                           3970 ;demo.c:576: cmd.dest_y = y;
   1288 21r2As8F           3971 	ld	hl, #_cmd + 6
   128B 73                 3972 	ld	(hl),e
   128C 23                 3973 	inc	hl
   128D 72                 3974 	ld	(hl),d
                           3975 ;demo.c:577: vdp_copier(&cmd);
   128E D5                 3976 	push	de
   128F 21r24s8F           3977 	ld	hl,#_cmd
   1292 E5                 3978 	push	hl
   1293 CDr00s00           3979 	call	_vdp_copier
   1296 F1                 3980 	pop	af
   1297 D1                 3981 	pop	de
                           3982 ;demo.c:574: for (y = ender; y < enderend; y+=16) {
   1298 21 10 00           3983 	ld	hl,#0x0010
   129B 19                 3984 	add	hl,de
   129C EB                 3985 	ex	de,hl
   129D C3r4Es12           3986 	jp	00110$
   12A0                    3987 00113$:
                           3988 ;demo.c:579: ff1+=4;
   12A0 21r76s8F           3989 	ld	hl,#_ff1
   12A3 7E                 3990 	ld	a,(hl)
   12A4 C6 04              3991 	add	a,#0x04
   12A6 23                 3992 	inc	hl
   12A7 2B                 3993 	dec	hl
   12A8 C5                 3994 	push	bc
   12A9 4F                 3995 	ld	c, a
   12AA 23                 3996 	inc	hl
   12AB 7E                 3997 	ld	a, (hl)
   12AC 47                 3998 	ld	b, a
   12AD 79                 3999 	ld	a, c
   12AE 2B                 4000 	dec	hl
   12AF 77                 4001 	ld	(hl), a
   12B0 78                 4002 	ld	a, b
   12B1 C1                 4003 	pop	bc
   12B2 CE 00              4004 	adc	a,#0x00
   12B4 23                 4005 	inc	hl
   12B5 77                 4006 	ld	(hl),a
   12B6 C3r53s13           4007 	jp	00109$
   12B9                    4008 00108$:
                           4009 ;demo.c:583: cmd.size_x = 72;
   12B9 21r2Cs8F           4010 	ld	hl, #_cmd + 8
   12BC 36 48              4011 	ld	(hl),#0x48
   12BE 23                 4012 	inc	hl
   12BF 36 00              4013 	ld	(hl),#0x00
                           4014 ;demo.c:584: cmd.size_y = 16;
   12C1 21r2Es8F           4015 	ld	hl, #_cmd + 10
   12C4 36 10              4016 	ld	(hl),#0x10
   12C6 23                 4017 	inc	hl
   12C7 36 00              4018 	ld	(hl),#0x00
                           4019 ;demo.c:585: cmd.data = 0;
                           4020 ;demo.c:586: cmd.argument = 0x00; // from 182xY to right
   12C9 3E 00              4021 	ld	a,#0x00
   12CB 32r30s8F           4022 	ld	(#_cmd + 12),a
   12CE 32r31s8F           4023 	ld	(#_cmd + 13),a
                           4024 ;demo.c:587: cmd.command = 0xe0; // vram to vram, y only
   12D1 01r32s8F           4025 	ld	bc,#_cmd + 14
   12D4 3E E0              4026 	ld	a,#0xE0
   12D6 02                 4027 	ld	(bc),a
                           4028 ;demo.c:588: cmd.source_x = 182;
   12D7 21r24s8F           4029 	ld	hl,#_cmd
   12DA 36 B6              4030 	ld	(hl),#0xB6
   12DC 23                 4031 	inc	hl
   12DD 36 00              4032 	ld	(hl),#0x00
                           4033 ;demo.c:589: cmd.dest_x = 182;
   12DF 21r28s8F           4034 	ld	hl, #_cmd + 4
   12E2 36 B6              4035 	ld	(hl),#0xB6
   12E4 23                 4036 	inc	hl
   12E5 36 00              4037 	ld	(hl),#0x00
                           4038 ;demo.c:591: for (y = ender; y < enderend; y+=16) {
   12E7 ED 4Br7As8F        4039 	ld	bc,(_ender)
   12EB                    4040 00114$:
   12EB 79                 4041 	ld	a,c
   12EC DD 96 FE           4042 	sub	a,-2 (ix)
   12EF 78                 4043 	ld	a,b
   12F0 DD 9E FF           4044 	sbc	a,-1 (ix)
   12F3 F2r3Ds13           4045 	jp	P,00117$
                           4046 ;demo.c:592: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   12F6 21r26s8F           4047 	ld	hl,#_cmd + 2
   12F9 DD 75 FC           4048 	ld	-4 (ix),l
   12FC DD 74 FD           4049 	ld	-3 (ix),h
   12FF 3Ar78s8F           4050 	ld	a,(#_ff2+0)
   1302 81                 4051 	add	a,c
   1303 5F                 4052 	ld	e,a
   1304 3Ar79s8F           4053 	ld	a,(#_ff2+1)
   1307 88                 4054 	adc	a,b
   1308 16 00              4055 	ld	d,#0x00
   130A 21r00s00           4056 	ld	hl,#_sintab
   130D 19                 4057 	add	hl,de
   130E 5E                 4058 	ld	e,(hl)
   130F CB 2B              4059 	sra	e
   1311 7B                 4060 	ld	a,e
   1312 17                 4061 	rla	
   1313 9F                 4062 	sbc	a,a
   1314 57                 4063 	ld	d,a
   1315 21 40 01           4064 	ld	hl,#0x0140
   1318 19                 4065 	add	hl,de
   1319 EB                 4066 	ex	de,hl
   131A DD 6E FC           4067 	ld	l,-4 (ix)
   131D DD 66 FD           4068 	ld	h,-3 (ix)
   1320 73                 4069 	ld	(hl),e
   1321 23                 4070 	inc	hl
   1322 72                 4071 	ld	(hl),d
                           4072 ;demo.c:593: cmd.dest_y = y;
   1323 11r2As8F           4073 	ld	de,#_cmd + 6
   1326 EB                 4074 	ex	de,hl
   1327 71                 4075 	ld	(hl),c
   1328 23                 4076 	inc	hl
   1329 70                 4077 	ld	(hl),b
                           4078 ;demo.c:594: vdp_copier(&cmd);
   132A C5                 4079 	push	bc
   132B 21r24s8F           4080 	ld	hl,#_cmd
   132E E5                 4081 	push	hl
   132F CDr00s00           4082 	call	_vdp_copier
   1332 F1                 4083 	pop	af
   1333 C1                 4084 	pop	bc
                           4085 ;demo.c:591: for (y = ender; y < enderend; y+=16) {
   1334 21 10 00           4086 	ld	hl,#0x0010
   1337 09                 4087 	add	hl,bc
   1338 4D                 4088 	ld	c,l
   1339 44                 4089 	ld	b,h
   133A C3rEBs12           4090 	jp	00114$
   133D                    4091 00117$:
                           4092 ;demo.c:596: ff2+=4;
   133D 21r78s8F           4093 	ld	hl,#_ff2
   1340 7E                 4094 	ld	a,(hl)
   1341 C6 04              4095 	add	a,#0x04
   1343 23                 4096 	inc	hl
   1344 2B                 4097 	dec	hl
   1345 C5                 4098 	push	bc
   1346 4F                 4099 	ld	c, a
   1347 23                 4100 	inc	hl
   1348 7E                 4101 	ld	a, (hl)
   1349 47                 4102 	ld	b, a
   134A 79                 4103 	ld	a, c
   134B 2B                 4104 	dec	hl
   134C 77                 4105 	ld	(hl), a
   134D 78                 4106 	ld	a, b
   134E C1                 4107 	pop	bc
   134F CE 00              4108 	adc	a,#0x00
   1351 23                 4109 	inc	hl
   1352 77                 4110 	ld	(hl),a
   1353                    4111 00109$:
                           4112 ;demo.c:599: bulbflipper = -bulbflipper;
   1353 AF                 4113 	xor	a,a
   1354 FD 21r74s8F        4114 	ld	iy,#_bulbflipper
   1358 3E 00              4115 	ld	a,#0x00
   135A FD 9E 00           4116 	sbc	a,0 (iy)
   135D 21r74s8F           4117 	ld	hl,#_bulbflipper + 0
   1360 77                 4118 	ld	(hl), a
   1361 FD 21r74s8F        4119 	ld	iy,#_bulbflipper
   1365 3E 00              4120 	ld	a,#0x00
   1367 FD 9E 01           4121 	sbc	a,1 (iy)
   136A 21r75s8F           4122 	ld	hl,#_bulbflipper + 1
   136D 77                 4123 	ld	(hl), a
   136E DD F9              4124 	ld	sp,ix
   1370 DD E1              4125 	pop	ix
   1372 C9                 4126 	ret
   1373                    4127 _bulbs_end::
                           4128 ;demo.c:613: void animplay() {
                           4129 ;	---------------------------------
                           4130 ; Function animplay
                           4131 ; ---------------------------------
   1373                    4132 _animplay_start::
   1373                    4133 _animplay:
   1373 DD E5              4134 	push	ix
   1375 DD 21 00 00        4135 	ld	ix,#0
   1379 DD 39              4136 	add	ix,sp
   137B F5                 4137 	push	af
   137C 3B                 4138 	dec	sp
                           4139 ;demo.c:618: if (anim_init == 0) {
   137D 3Ar86s8F           4140 	ld	a,(#_anim_init+0)
   1380 21r87s8F           4141 	ld	hl,#_anim_init + 1
   1383 B6                 4142 	or	a,(hl)
   1384 C2rE0s13           4143 	jp	NZ,00117$
                           4144 ;demo.c:620: vdp_register(0,0);
   1387 21 00 00           4145 	ld	hl,#0x0000
   138A E5                 4146 	push	hl
   138B CDr00s00           4147 	call	_vdp_register
   138E F1                 4148 	pop	af
                           4149 ;demo.c:621: vdp_register(1,0);
   138F 21 01 00           4150 	ld	hl,#0x0001
   1392 E5                 4151 	push	hl
   1393 CDr00s00           4152 	call	_vdp_register
   1396 F1                 4153 	pop	af
                           4154 ;demo.c:623: bitbuster(tf1,0x8000,VRAM_0);
   1397 3E 01              4155 	ld	a,#0x01
   1399 F5                 4156 	push	af
   139A 33                 4157 	inc	sp
   139B 21 00 80           4158 	ld	hl,#0x8000
   139E E5                 4159 	push	hl
   139F 21r40s30           4160 	ld	hl,#_tf1
   13A2 E5                 4161 	push	hl
   13A3 CDr00s00           4162 	call	_bitbuster
   13A6 F1                 4163 	pop	af
   13A7 F1                 4164 	pop	af
   13A8 33                 4165 	inc	sp
                           4166 ;demo.c:624: bitbuster(tf2,0x0000,VRAM_1);
   13A9 3E 00              4167 	ld	a,#0x00
   13AB F5                 4168 	push	af
   13AC 33                 4169 	inc	sp
   13AD 21 00 00           4170 	ld	hl,#0x0000
   13B0 E5                 4171 	push	hl
   13B1 21r20s5F           4172 	ld	hl,#_tf2
   13B4 E5                 4173 	push	hl
   13B5 CDr00s00           4174 	call	_bitbuster
   13B8 F1                 4175 	pop	af
   13B9 F1                 4176 	pop	af
   13BA 33                 4177 	inc	sp
                           4178 ;demo.c:626: vdp_set_screen5();
   13BB CDr00s00           4179 	call	_vdp_set_screen5
                           4180 ;demo.c:627: vdp_register(1,0x60);
   13BE 21 01 60           4181 	ld	hl,#0x6001
   13C1 E5                 4182 	push	hl
   13C2 CDr00s00           4183 	call	_vdp_register
   13C5 F1                 4184 	pop	af
                           4185 ;demo.c:628: vdp_register(9,2); // 192 lines
   13C6 21 09 02           4186 	ld	hl,#0x0209
   13C9 E5                 4187 	push	hl
   13CA CDr00s00           4188 	call	_vdp_register
   13CD F1                 4189 	pop	af
                           4190 ;demo.c:631: anim_init = 1;
   13CE 21r86s8F           4191 	ld	hl,#_anim_init + 0
   13D1 36 01              4192 	ld	(hl), #0x01
   13D3 21r87s8F           4193 	ld	hl,#_anim_init + 1
   13D6 36 00              4194 	ld	(hl), #0x00
                           4195 ;demo.c:632: vdp_load_palette(tf_palette);
   13D8 21rE0s8E           4196 	ld	hl,#_tf_palette
   13DB E5                 4197 	push	hl
   13DC CDr00s00           4198 	call	_vdp_load_palette
   13DF F1                 4199 	pop	af
                           4200 ;demo.c:635: for (y = 0; y < 96; y+=1) {
   13E0                    4201 00117$:
   13E0 DD 36 FF 00        4202 	ld	-1 (ix),#0x00
   13E4                    4203 00109$:
   13E4 DD 7E FF           4204 	ld	a,-1 (ix)
   13E7 D6 60              4205 	sub	a,#0x60
   13E9 D2r6Bs14           4206 	jp	NC,00112$
                           4207 ;demo.c:636: cmd.source_x = xo;
   13EC ED 5Br7Es8F        4208 	ld	de,(_xo)
   13F0 21r24s8F           4209 	ld	hl,#_cmd
   13F3 73                 4210 	ld	(hl),e
   13F4 23                 4211 	inc	hl
   13F5 72                 4212 	ld	(hl),d
                           4213 ;demo.c:637: cmd.source_y = 256+po+yo+(y>>1);
   13F6 11r26s8F           4214 	ld	de,#_cmd + 2
   13F9 3Ar82s8F           4215 	ld	a,(#_po+0)
   13FC 4F                 4216 	ld	c,a
   13FD 3Ar83s8F           4217 	ld	a,(#_po+1)
   1400 C6 01              4218 	add	a,#0x01
   1402 47                 4219 	ld	b,a
   1403 21r80s8F           4220 	ld	hl,#_yo
   1406 79                 4221 	ld	a,c
   1407 86                 4222 	add	a,(hl)
   1408 DD 77 FD           4223 	ld	-3 (ix),a
   140B 78                 4224 	ld	a,b
   140C 23                 4225 	inc	hl
   140D 8E                 4226 	adc	a,(hl)
   140E DD 77 FE           4227 	ld	-2 (ix),a
   1411 DD 4E FF           4228 	ld	c,-1 (ix)
   1414 CB 39              4229 	srl	c
   1416 06 00              4230 	ld	b,#0x00
   1418 DD 7E FD           4231 	ld	a,-3 (ix)
   141B 81                 4232 	add	a,c
   141C 4F                 4233 	ld	c,a
   141D DD 7E FE           4234 	ld	a,-2 (ix)
   1420 88                 4235 	adc	a,b
   1421 47                 4236 	ld	b,a
   1422 6B                 4237 	ld	l,e
   1423 62                 4238 	ld	h,d
   1424 71                 4239 	ld	(hl),c
   1425 23                 4240 	inc	hl
   1426 70                 4241 	ld	(hl),b
                           4242 ;demo.c:638: cmd.dest_x = 0;
   1427 21r28s8F           4243 	ld	hl, #_cmd + 4
   142A 36 00              4244 	ld	(hl),#0x00
   142C 23                 4245 	inc	hl
   142D 36 00              4246 	ld	(hl),#0x00
                           4247 ;demo.c:639: cmd.dest_y = (y<<1);
   142F 01r2As8F           4248 	ld	bc,#_cmd + 6
   1432 DD 5E FF           4249 	ld	e,-1 (ix)
   1435 16 00              4250 	ld	d,#0x00
   1437 CB 23              4251 	sla	e
   1439 CB 12              4252 	rl	d
   143B 69                 4253 	ld	l,c
   143C 60                 4254 	ld	h,b
   143D 73                 4255 	ld	(hl),e
   143E 23                 4256 	inc	hl
   143F 72                 4257 	ld	(hl),d
                           4258 ;demo.c:640: cmd.size_x = 128;
   1440 21r2Cs8F           4259 	ld	hl, #_cmd + 8
   1443 36 80              4260 	ld	(hl),#0x80
   1445 23                 4261 	inc	hl
   1446 36 00              4262 	ld	(hl),#0x00
                           4263 ;demo.c:641: cmd.size_y = 1;
   1448 21r2Es8F           4264 	ld	hl, #_cmd + 10
   144B 36 01              4265 	ld	(hl),#0x01
   144D 23                 4266 	inc	hl
   144E 36 00              4267 	ld	(hl),#0x00
                           4268 ;demo.c:642: cmd.data = 0;
                           4269 ;demo.c:643: cmd.argument = 0x00;
   1450 3E 00              4270 	ld	a,#0x00
   1452 32r30s8F           4271 	ld	(#_cmd + 12),a
   1455 32r31s8F           4272 	ld	(#_cmd + 13),a
                           4273 ;demo.c:644: cmd.command = 0xD0;
   1458 3E D0              4274 	ld	a,#0xD0
   145A 32r32s8F           4275 	ld	(#_cmd + 14),a
                           4276 ;demo.c:645: vdp_copier(&cmd);
   145D 21r24s8F           4277 	ld	hl,#_cmd
   1460 E5                 4278 	push	hl
   1461 CDr00s00           4279 	call	_vdp_copier
   1464 F1                 4280 	pop	af
                           4281 ;demo.c:635: for (y = 0; y < 96; y+=1) {
   1465 DD 34 FF           4282 	inc	-1 (ix)
   1468 C3rE4s13           4283 	jp	00109$
   146B                    4284 00112$:
                           4285 ;demo.c:648: xo+=128;
   146B 21r7Es8F           4286 	ld	hl,#_xo
   146E 7E                 4287 	ld	a,(hl)
   146F C6 80              4288 	add	a,#0x80
   1471 23                 4289 	inc	hl
   1472 2B                 4290 	dec	hl
   1473 C5                 4291 	push	bc
   1474 4F                 4292 	ld	c, a
   1475 23                 4293 	inc	hl
   1476 7E                 4294 	ld	a, (hl)
   1477 47                 4295 	ld	b, a
   1478 79                 4296 	ld	a, c
   1479 2B                 4297 	dec	hl
   147A 77                 4298 	ld	(hl), a
   147B 78                 4299 	ld	a, b
   147C C1                 4300 	pop	bc
   147D CE 00              4301 	adc	a,#0x00
   147F 23                 4302 	inc	hl
   1480 77                 4303 	ld	(hl),a
                           4304 ;demo.c:649: if (xo >= 256) {
   1481 3Ar7Es8F           4305 	ld	a,(#_xo+0)
   1484 D6 00              4306 	sub	a,#0x00
   1486 3Ar7Fs8F           4307 	ld	a,(#_xo+1)
   1489 DE 01              4308 	sbc	a,#0x01
   148B FArF2s14           4309 	jp	M,00108$
                           4310 ;demo.c:650: xo = 0;
   148E 21r7Es8F           4311 	ld	hl,#_xo + 0
   1491 36 00              4312 	ld	(hl), #0x00
   1493 21r7Fs8F           4313 	ld	hl,#_xo + 1
   1496 36 00              4314 	ld	(hl), #0x00
                           4315 ;demo.c:651: yo+=48;
   1498 21r80s8F           4316 	ld	hl,#_yo
   149B 7E                 4317 	ld	a,(hl)
   149C C6 30              4318 	add	a,#0x30
   149E 23                 4319 	inc	hl
   149F 2B                 4320 	dec	hl
   14A0 C5                 4321 	push	bc
   14A1 4F                 4322 	ld	c, a
   14A2 23                 4323 	inc	hl
   14A3 7E                 4324 	ld	a, (hl)
   14A4 47                 4325 	ld	b, a
   14A5 79                 4326 	ld	a, c
   14A6 2B                 4327 	dec	hl
   14A7 77                 4328 	ld	(hl), a
   14A8 78                 4329 	ld	a, b
   14A9 C1                 4330 	pop	bc
   14AA CE 00              4331 	adc	a,#0x00
   14AC 23                 4332 	inc	hl
   14AD 77                 4333 	ld	(hl),a
                           4334 ;demo.c:652: if (yo >= 192) { yo = 0; po+=256; }
   14AE 3Ar80s8F           4335 	ld	a,(#_yo+0)
   14B1 D6 C0              4336 	sub	a,#0xC0
   14B3 3Ar81s8F           4337 	ld	a,(#_yo+1)
   14B6 DE 00              4338 	sbc	a,#0x00
   14B8 FArDBs14           4339 	jp	M,00104$
   14BB 21r80s8F           4340 	ld	hl,#_yo + 0
   14BE 36 00              4341 	ld	(hl), #0x00
   14C0 21r81s8F           4342 	ld	hl,#_yo + 1
   14C3 36 00              4343 	ld	(hl), #0x00
   14C5 21r82s8F           4344 	ld	hl,#_po
   14C8 7E                 4345 	ld	a,(hl)
   14C9 C6 00              4346 	add	a,#0x00
   14CB 23                 4347 	inc	hl
   14CC 2B                 4348 	dec	hl
   14CD C5                 4349 	push	bc
   14CE 4F                 4350 	ld	c, a
   14CF 23                 4351 	inc	hl
   14D0 7E                 4352 	ld	a, (hl)
   14D1 47                 4353 	ld	b, a
   14D2 79                 4354 	ld	a, c
   14D3 2B                 4355 	dec	hl
   14D4 77                 4356 	ld	(hl), a
   14D5 78                 4357 	ld	a, b
   14D6 C1                 4358 	pop	bc
   14D7 CE 01              4359 	adc	a,#0x01
   14D9 23                 4360 	inc	hl
   14DA 77                 4361 	ld	(hl),a
   14DB                    4362 00104$:
                           4363 ;demo.c:653: if (po >= 768) {
   14DB 3Ar82s8F           4364 	ld	a,(#_po+0)
   14DE D6 00              4365 	sub	a,#0x00
   14E0 3Ar83s8F           4366 	ld	a,(#_po+1)
   14E3 DE 03              4367 	sbc	a,#0x03
   14E5 FArF2s14           4368 	jp	M,00108$
                           4369 ;demo.c:654: po = 0;
   14E8 21r82s8F           4370 	ld	hl,#_po + 0
   14EB 36 00              4371 	ld	(hl), #0x00
   14ED 21r83s8F           4372 	ld	hl,#_po + 1
   14F0 36 00              4373 	ld	(hl), #0x00
   14F2                    4374 00108$:
                           4375 ;demo.c:661: fffaaa++;
   14F2 FD 21r84s8F        4376 	ld	iy,#_fffaaa
   14F6 FD 34 00           4377 	inc	0 (iy)
   14F9 20 07              4378 	jr	NZ,00124$
   14FB FD 21r84s8F        4379 	ld	iy,#_fffaaa
   14FF FD 34 01           4380 	inc	1 (iy)
   1502                    4381 00124$:
   1502 DD F9              4382 	ld	sp,ix
   1504 DD E1              4383 	pop	ix
   1506 C9                 4384 	ret
   1507                    4385 _animplay_end::
                           4386 ;demo.c:673: void drawbox(int box_x, int box_y, uint8_t x, uint8_t y) {
                           4387 ;	---------------------------------
                           4388 ; Function drawbox
                           4389 ; ---------------------------------
   1507                    4390 _drawbox_start::
   1507                    4391 _drawbox:
   1507 DD E5              4392 	push	ix
   1509 DD 21 00 00        4393 	ld	ix,#0
   150D DD 39              4394 	add	ix,sp
                           4395 ;demo.c:674: dbly = 0;
   150F 21r8Bs8F           4396 	ld	hl,#_dbly + 0
   1512 36 00              4397 	ld	(hl), #0x00
   1514 21r8Cs8F           4398 	ld	hl,#_dbly + 1
   1517 36 00              4399 	ld	(hl), #0x00
                           4400 ;demo.c:676: cmd.source_x = box_x * 42;
   1519 DD 5E 04           4401 	ld	e,4 (ix)
   151C DD 56 05           4402 	ld	d,5 (ix)
   151F 6B                 4403 	ld	l,e
   1520 62                 4404 	ld	h,d
   1521 29                 4405 	add	hl,hl
   1522 29                 4406 	add	hl,hl
   1523 19                 4407 	add	hl,de
   1524 29                 4408 	add	hl,hl
   1525 29                 4409 	add	hl,hl
   1526 19                 4410 	add	hl,de
   1527 29                 4411 	add	hl,hl
   1528 4D                 4412 	ld	c,l
   1529 44                 4413 	ld	b,h
   152A 21r24s8F           4414 	ld	hl,#_cmd
   152D 71                 4415 	ld	(hl),c
   152E 23                 4416 	inc	hl
   152F 70                 4417 	ld	(hl),b
                           4418 ;demo.c:677: cmd.source_y = 768+box_y * 42;
   1530 01r26s8F           4419 	ld	bc,#_cmd + 2
   1533 DD 5E 06           4420 	ld	e,6 (ix)
   1536 DD 56 07           4421 	ld	d,7 (ix)
   1539 6B                 4422 	ld	l,e
   153A 62                 4423 	ld	h,d
   153B 29                 4424 	add	hl,hl
   153C 29                 4425 	add	hl,hl
   153D 19                 4426 	add	hl,de
   153E 29                 4427 	add	hl,hl
   153F 29                 4428 	add	hl,hl
   1540 19                 4429 	add	hl,de
   1541 29                 4430 	add	hl,hl
   1542 EB                 4431 	ex	de,hl
   1543 21 00 03           4432 	ld	hl,#0x0300
   1546 19                 4433 	add	hl,de
   1547 EB                 4434 	ex	de,hl
   1548 69                 4435 	ld	l,c
   1549 60                 4436 	ld	h,b
   154A 73                 4437 	ld	(hl),e
   154B 23                 4438 	inc	hl
   154C 72                 4439 	ld	(hl),d
                           4440 ;demo.c:678: cmd.dest_x = x;
   154D 01r28s8F           4441 	ld	bc,#_cmd + 4
   1550 DD 5E 08           4442 	ld	e,8 (ix)
   1553 16 00              4443 	ld	d,#0x00
   1555 69                 4444 	ld	l,c
   1556 60                 4445 	ld	h,b
   1557 73                 4446 	ld	(hl),e
   1558 23                 4447 	inc	hl
   1559 72                 4448 	ld	(hl),d
                           4449 ;demo.c:679: cmd.dest_y = dbly+y;
   155A 01r2As8F           4450 	ld	bc,#_cmd + 6
   155D DD 5E 09           4451 	ld	e,9 (ix)
   1560 16 00              4452 	ld	d,#0x00
   1562 69                 4453 	ld	l,c
   1563 60                 4454 	ld	h,b
   1564 73                 4455 	ld	(hl),e
   1565 23                 4456 	inc	hl
   1566 72                 4457 	ld	(hl),d
                           4458 ;demo.c:680: cmd.size_x = 42;
   1567 21r2Cs8F           4459 	ld	hl, #_cmd + 8
   156A 36 2A              4460 	ld	(hl),#0x2A
   156C 23                 4461 	inc	hl
   156D 36 00              4462 	ld	(hl),#0x00
                           4463 ;demo.c:681: cmd.size_y = 42;
   156F 21r2Es8F           4464 	ld	hl, #_cmd + 10
   1572 36 2A              4465 	ld	(hl),#0x2A
   1574 23                 4466 	inc	hl
   1575 36 00              4467 	ld	(hl),#0x00
                           4468 ;demo.c:682: cmd.data = 0;
                           4469 ;demo.c:683: cmd.argument = 0x00;
   1577 3E 00              4470 	ld	a,#0x00
   1579 32r30s8F           4471 	ld	(#_cmd + 12),a
   157C 32r31s8F           4472 	ld	(#_cmd + 13),a
                           4473 ;demo.c:684: cmd.command = 0x98; // TIMP sprite
   157F 3E 98              4474 	ld	a,#0x98
   1581 32r32s8F           4475 	ld	(#_cmd + 14),a
                           4476 ;demo.c:685: vdp_copier(&cmd);
   1584 D5                 4477 	push	de
   1585 21r24s8F           4478 	ld	hl,#_cmd
   1588 E5                 4479 	push	hl
   1589 CDr00s00           4480 	call	_vdp_copier
   158C F1                 4481 	pop	af
   158D D1                 4482 	pop	de
                           4483 ;demo.c:687: prevx = x;
   158E DD 7E 08           4484 	ld	a,8 (ix)
   1591 21r8Ds8F           4485 	ld	hl,#_prevx + 0
   1594 77                 4486 	ld	(hl), a
   1595 21r8Es8F           4487 	ld	hl,#_prevx + 1
   1598 36 00              4488 	ld	(hl), #0x00
                           4489 ;demo.c:688: prevy = y;
   159A 21r8Fs8F           4490 	ld	hl,#_prevy + 0
   159D 73                 4491 	ld	(hl), e
   159E 21r90s8F           4492 	ld	hl,#_prevy + 1
   15A1 72                 4493 	ld	(hl), d
                           4494 ;demo.c:689: prevbx = box_x;
   15A2 DD 7E 04           4495 	ld	a,4 (ix)
   15A5 21r91s8F           4496 	ld	hl,#_prevbx + 0
   15A8 77                 4497 	ld	(hl), a
   15A9 DD 7E 05           4498 	ld	a,5 (ix)
   15AC 21r92s8F           4499 	ld	hl,#_prevbx + 1
   15AF 77                 4500 	ld	(hl), a
                           4501 ;demo.c:690: prevby = box_y;
   15B0 DD 7E 06           4502 	ld	a,6 (ix)
   15B3 21r93s8F           4503 	ld	hl,#_prevby + 0
   15B6 77                 4504 	ld	(hl), a
   15B7 DD 7E 07           4505 	ld	a,7 (ix)
   15BA 21r94s8F           4506 	ld	hl,#_prevby + 1
   15BD 77                 4507 	ld	(hl), a
   15BE DD E1              4508 	pop	ix
   15C0 C9                 4509 	ret
   15C1                    4510 _drawbox_end::
                           4511 ;demo.c:704: void boxes() {
                           4512 ;	---------------------------------
                           4513 ; Function boxes
                           4514 ; ---------------------------------
   15C1                    4515 _boxes_start::
   15C1                    4516 _boxes:
                           4517 ;demo.c:708: if (bonc == 1) {
   15C1 3ArA1s8F           4518 	ld	a,(#_bonc+0)
   15C4 D6 01              4519 	sub	a,#0x01
   15C6 20 06              4520 	jr	NZ,00156$
   15C8 3ArA2s8F           4521 	ld	a,(#_bonc+1)
   15CB B7                 4522 	or	a,a
   15CC 28 02              4523 	jr	Z,00157$
   15CE                    4524 00156$:
   15CE 18 4D              4525 	jr	00102$
   15D0                    4526 00157$:
                           4527 ;demo.c:710: cmd.source_x = 0;
   15D0 21r24s8F           4528 	ld	hl,#_cmd
   15D3 36 00              4529 	ld	(hl),#0x00
   15D5 23                 4530 	inc	hl
   15D6 36 00              4531 	ld	(hl),#0x00
                           4532 ;demo.c:711: cmd.source_y = 256;
   15D8 21r26s8F           4533 	ld	hl, #_cmd + 2
   15DB 36 00              4534 	ld	(hl),#0x00
   15DD 23                 4535 	inc	hl
   15DE 36 01              4536 	ld	(hl),#0x01
                           4537 ;demo.c:712: cmd.dest_x = pbx;
   15E0 01r28s8F           4538 	ld	bc,#_cmd + 4
   15E3 ED 5BrA3s8F        4539 	ld	de,(_pbx)
   15E7 69                 4540 	ld	l,c
   15E8 60                 4541 	ld	h,b
   15E9 73                 4542 	ld	(hl),e
   15EA 23                 4543 	inc	hl
   15EB 72                 4544 	ld	(hl),d
                           4545 ;demo.c:713: cmd.dest_y = pbt;
   15EC 01r2As8F           4546 	ld	bc,#_cmd + 6
   15EF ED 5BrA5s8F        4547 	ld	de,(_pbt)
   15F3 69                 4548 	ld	l,c
   15F4 60                 4549 	ld	h,b
   15F5 73                 4550 	ld	(hl),e
   15F6 23                 4551 	inc	hl
   15F7 72                 4552 	ld	(hl),d
                           4553 ;demo.c:714: cmd.size_x = 42;
   15F8 21r2Cs8F           4554 	ld	hl, #_cmd + 8
   15FB 36 2A              4555 	ld	(hl),#0x2A
   15FD 23                 4556 	inc	hl
   15FE 36 00              4557 	ld	(hl),#0x00
                           4558 ;demo.c:715: cmd.size_y = 42;
   1600 21r2Es8F           4559 	ld	hl, #_cmd + 10
   1603 36 2A              4560 	ld	(hl),#0x2A
   1605 23                 4561 	inc	hl
   1606 36 00              4562 	ld	(hl),#0x00
                           4563 ;demo.c:716: cmd.data = 0;
                           4564 ;demo.c:717: cmd.argument = 0x00;
   1608 3E 00              4565 	ld	a,#0x00
   160A 32r30s8F           4566 	ld	(#_cmd + 12),a
   160D 32r31s8F           4567 	ld	(#_cmd + 13),a
                           4568 ;demo.c:718: cmd.command = 0xD0; // HMMM
   1610 3E D0              4569 	ld	a,#0xD0
   1612 32r32s8F           4570 	ld	(#_cmd + 14),a
                           4571 ;demo.c:719: vdp_copier(&cmd);
   1615 21r24s8F           4572 	ld	hl,#_cmd
   1618 E5                 4573 	push	hl
   1619 CDr00s00           4574 	call	_vdp_copier
   161C F1                 4575 	pop	af
   161D                    4576 00102$:
                           4577 ;demo.c:723: if (boxes_init == 0) {
   161D AF                 4578 	xor	a,a
   161E 21r88s8F           4579 	ld	hl,#_boxes_init + 0
   1621 B6                 4580 	or	a,(hl)
   1622 C2rB8s16           4581 	jp	NZ,00104$
                           4582 ;demo.c:724: boxes_init = 1;
   1625 FD 21r88s8F        4583 	ld	iy,#_boxes_init
   1629 FD 36 00 01        4584 	ld	0 (iy),#0x01
                           4585 ;demo.c:726: cmd.size_x = 8;
   162D 21r2Cs8F           4586 	ld	hl, #_cmd + 8
   1630 36 08              4587 	ld	(hl),#0x08
   1632 23                 4588 	inc	hl
   1633 36 00              4589 	ld	(hl),#0x00
                           4590 ;demo.c:727: cmd.size_y = 212;
   1635 21r2Es8F           4591 	ld	hl, #_cmd + 10
   1638 36 D4              4592 	ld	(hl),#0xD4
   163A 23                 4593 	inc	hl
   163B 36 00              4594 	ld	(hl),#0x00
                           4595 ;demo.c:728: cmd.data = 0;
                           4596 ;demo.c:729: cmd.argument = 0x00; // from 70xY to left
   163D 3E 00              4597 	ld	a,#0x00
   163F 32r30s8F           4598 	ld	(#_cmd + 12),a
   1642 32r31s8F           4599 	ld	(#_cmd + 13),a
                           4600 ;demo.c:730: cmd.command = 0xd0; // vram to vram, y only
   1645 01r32s8F           4601 	ld	bc,#_cmd + 14
   1648 3E D0              4602 	ld	a,#0xD0
   164A 02                 4603 	ld	(bc),a
                           4604 ;demo.c:731: cmd.source_x = 248;
   164B 21r24s8F           4605 	ld	hl,#_cmd
   164E 36 F8              4606 	ld	(hl),#0xF8
   1650 23                 4607 	inc	hl
   1651 36 00              4608 	ld	(hl),#0x00
                           4609 ;demo.c:732: cmd.source_y = 0;
   1653 21r26s8F           4610 	ld	hl, #_cmd + 2
   1656 36 00              4611 	ld	(hl),#0x00
   1658 23                 4612 	inc	hl
   1659 36 00              4613 	ld	(hl),#0x00
                           4614 ;demo.c:733: cmd.dest_y = 0;
   165B 21r2As8F           4615 	ld	hl, #_cmd + 6
   165E 36 00              4616 	ld	(hl),#0x00
   1660 23                 4617 	inc	hl
   1661 36 00              4618 	ld	(hl),#0x00
                           4619 ;demo.c:735: for (x = 248; x >= 0; x-=8) {
   1663 01 F8 00           4620 	ld	bc,#0x00F8
   1666                    4621 00131$:
   1666 78                 4622 	ld	a,b
   1667 CB 7F              4623 	bit	7,a
   1669 20 38              4624 	jr	NZ,00134$
                           4625 ;demo.c:736: waitVB();
   166B 76                 4626 		halt 
                           4627 ;demo.c:737: cmd.dest_x = x;
   166C 11r28s8F           4628 	ld	de,#_cmd + 4
   166F EB                 4629 	ex	de,hl
   1670 71                 4630 	ld	(hl),c
   1671 23                 4631 	inc	hl
   1672 70                 4632 	ld	(hl),b
                           4633 ;demo.c:738: cmd.dest_y = 0;
   1673 11r2As8F           4634 	ld	de,#_cmd + 6
   1676 EB                 4635 	ex	de,hl
   1677 36 00              4636 	ld	(hl),#0x00
   1679 23                 4637 	inc	hl
   167A 36 00              4638 	ld	(hl),#0x00
                           4639 ;demo.c:739: vdp_copier(&cmd);
   167C C5                 4640 	push	bc
   167D 21r24s8F           4641 	ld	hl,#_cmd
   1680 E5                 4642 	push	hl
   1681 CDr00s00           4643 	call	_vdp_copier
   1684 F1                 4644 	pop	af
   1685 C1                 4645 	pop	bc
                           4646 ;demo.c:740: cmd.dest_y = 256;
   1686 11r2As8F           4647 	ld	de,#_cmd + 6
   1689 EB                 4648 	ex	de,hl
   168A 36 00              4649 	ld	(hl),#0x00
   168C 23                 4650 	inc	hl
   168D 36 01              4651 	ld	(hl),#0x01
                           4652 ;demo.c:741: vdp_copier(&cmd);
   168F C5                 4653 	push	bc
   1690 21r24s8F           4654 	ld	hl,#_cmd
   1693 E5                 4655 	push	hl
   1694 CDr00s00           4656 	call	_vdp_copier
   1697 F1                 4657 	pop	af
   1698 C1                 4658 	pop	bc
                           4659 ;demo.c:735: for (x = 248; x >= 0; x-=8) {
   1699 79                 4660 	ld	a,c
   169A C6 F8              4661 	add	a,#0xF8
   169C 4F                 4662 	ld	c,a
   169D 78                 4663 	ld	a,b
   169E CE FF              4664 	adc	a,#0xFF
   16A0 47                 4665 	ld	b,a
   16A1 18 C3              4666 	jr	00131$
   16A3                    4667 00134$:
                           4668 ;demo.c:744: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   16A3 21 08 B4           4669 	ld	hl,#0xB408
   16A6 E5                 4670 	push	hl
   16A7 21r3Cs19           4671 	ld	hl,#__str_9
   16AA E5                 4672 	push	hl
   16AB CDrE0s0E           4673 	call	_drawsine
   16AE F1                 4674 	pop	af
   16AF F1                 4675 	pop	af
                           4676 ;demo.c:746: vdp_load_palette(boxes_palette);
   16B0 21r00s8F           4677 	ld	hl,#_boxes_palette
   16B3 E5                 4678 	push	hl
   16B4 CDr00s00           4679 	call	_vdp_load_palette
   16B7 F1                 4680 	pop	af
   16B8                    4681 00104$:
                           4682 ;demo.c:749: if (bt >= 80) bt+=6;
   16B8 3Ar99s8F           4683 	ld	a,(#_bt+0)
   16BB D6 50              4684 	sub	a,#0x50
   16BD 3Ar9As8F           4685 	ld	a,(#_bt+1)
   16C0 DE 00              4686 	sbc	a,#0x00
   16C2 FArDBs16           4687 	jp	M,00106$
   16C5 21r99s8F           4688 	ld	hl,#_bt
   16C8 7E                 4689 	ld	a,(hl)
   16C9 C6 06              4690 	add	a,#0x06
   16CB 23                 4691 	inc	hl
   16CC 2B                 4692 	dec	hl
   16CD C5                 4693 	push	bc
   16CE 4F                 4694 	ld	c, a
   16CF 23                 4695 	inc	hl
   16D0 7E                 4696 	ld	a, (hl)
   16D1 47                 4697 	ld	b, a
   16D2 79                 4698 	ld	a, c
   16D3 2B                 4699 	dec	hl
   16D4 77                 4700 	ld	(hl), a
   16D5 78                 4701 	ld	a, b
   16D6 C1                 4702 	pop	bc
   16D7 CE 00              4703 	adc	a,#0x00
   16D9 23                 4704 	inc	hl
   16DA 77                 4705 	ld	(hl),a
   16DB                    4706 00106$:
                           4707 ;demo.c:750: if (bt < 80 && bt >= 60) bt+=5;
   16DB 3Ar99s8F           4708 	ld	a,(#_bt+0)
   16DE D6 50              4709 	sub	a,#0x50
   16E0 3Ar9As8F           4710 	ld	a,(#_bt+1)
   16E3 DE 00              4711 	sbc	a,#0x00
   16E5 F2r0Bs17           4712 	jp	P,00108$
   16E8 3Ar99s8F           4713 	ld	a,(#_bt+0)
   16EB D6 3C              4714 	sub	a,#0x3C
   16ED 3Ar9As8F           4715 	ld	a,(#_bt+1)
   16F0 DE 00              4716 	sbc	a,#0x00
   16F2 FAr0Bs17           4717 	jp	M,00108$
   16F5 21r99s8F           4718 	ld	hl,#_bt
   16F8 7E                 4719 	ld	a,(hl)
   16F9 C6 05              4720 	add	a,#0x05
   16FB 23                 4721 	inc	hl
   16FC 2B                 4722 	dec	hl
   16FD C5                 4723 	push	bc
   16FE 4F                 4724 	ld	c, a
   16FF 23                 4725 	inc	hl
   1700 7E                 4726 	ld	a, (hl)
   1701 47                 4727 	ld	b, a
   1702 79                 4728 	ld	a, c
   1703 2B                 4729 	dec	hl
   1704 77                 4730 	ld	(hl), a
   1705 78                 4731 	ld	a, b
   1706 C1                 4732 	pop	bc
   1707 CE 00              4733 	adc	a,#0x00
   1709 23                 4734 	inc	hl
   170A 77                 4735 	ld	(hl),a
   170B                    4736 00108$:
                           4737 ;demo.c:751: if (bt < 60 && bt >= 40) bt+=4;
   170B 3Ar99s8F           4738 	ld	a,(#_bt+0)
   170E D6 3C              4739 	sub	a,#0x3C
   1710 3Ar9As8F           4740 	ld	a,(#_bt+1)
   1713 DE 00              4741 	sbc	a,#0x00
   1715 F2r3Bs17           4742 	jp	P,00111$
   1718 3Ar99s8F           4743 	ld	a,(#_bt+0)
   171B D6 28              4744 	sub	a,#0x28
   171D 3Ar9As8F           4745 	ld	a,(#_bt+1)
   1720 DE 00              4746 	sbc	a,#0x00
   1722 FAr3Bs17           4747 	jp	M,00111$
   1725 21r99s8F           4748 	ld	hl,#_bt
   1728 7E                 4749 	ld	a,(hl)
   1729 C6 04              4750 	add	a,#0x04
   172B 23                 4751 	inc	hl
   172C 2B                 4752 	dec	hl
   172D C5                 4753 	push	bc
   172E 4F                 4754 	ld	c, a
   172F 23                 4755 	inc	hl
   1730 7E                 4756 	ld	a, (hl)
   1731 47                 4757 	ld	b, a
   1732 79                 4758 	ld	a, c
   1733 2B                 4759 	dec	hl
   1734 77                 4760 	ld	(hl), a
   1735 78                 4761 	ld	a, b
   1736 C1                 4762 	pop	bc
   1737 CE 00              4763 	adc	a,#0x00
   1739 23                 4764 	inc	hl
   173A 77                 4765 	ld	(hl),a
   173B                    4766 00111$:
                           4767 ;demo.c:752: if (bt < 40 && bt >= 10) bt+=3;
   173B 3Ar99s8F           4768 	ld	a,(#_bt+0)
   173E D6 28              4769 	sub	a,#0x28
   1740 3Ar9As8F           4770 	ld	a,(#_bt+1)
   1743 DE 00              4771 	sbc	a,#0x00
   1745 F2r6Bs17           4772 	jp	P,00114$
   1748 3Ar99s8F           4773 	ld	a,(#_bt+0)
   174B D6 0A              4774 	sub	a,#0x0A
   174D 3Ar9As8F           4775 	ld	a,(#_bt+1)
   1750 DE 00              4776 	sbc	a,#0x00
   1752 FAr6Bs17           4777 	jp	M,00114$
   1755 21r99s8F           4778 	ld	hl,#_bt
   1758 7E                 4779 	ld	a,(hl)
   1759 C6 03              4780 	add	a,#0x03
   175B 23                 4781 	inc	hl
   175C 2B                 4782 	dec	hl
   175D C5                 4783 	push	bc
   175E 4F                 4784 	ld	c, a
   175F 23                 4785 	inc	hl
   1760 7E                 4786 	ld	a, (hl)
   1761 47                 4787 	ld	b, a
   1762 79                 4788 	ld	a, c
   1763 2B                 4789 	dec	hl
   1764 77                 4790 	ld	(hl), a
   1765 78                 4791 	ld	a, b
   1766 C1                 4792 	pop	bc
   1767 CE 00              4793 	adc	a,#0x00
   1769 23                 4794 	inc	hl
   176A 77                 4795 	ld	(hl),a
   176B                    4796 00114$:
                           4797 ;demo.c:753: if (bt < 10 ) bt+=2;
   176B 3Ar99s8F           4798 	ld	a,(#_bt+0)
   176E D6 0A              4799 	sub	a,#0x0A
   1770 3Ar9As8F           4800 	ld	a,(#_bt+1)
   1773 DE 00              4801 	sbc	a,#0x00
   1775 F2r8Es17           4802 	jp	P,00117$
   1778 21r99s8F           4803 	ld	hl,#_bt
   177B 7E                 4804 	ld	a,(hl)
   177C C6 02              4805 	add	a,#0x02
   177E 23                 4806 	inc	hl
   177F 2B                 4807 	dec	hl
   1780 C5                 4808 	push	bc
   1781 4F                 4809 	ld	c, a
   1782 23                 4810 	inc	hl
   1783 7E                 4811 	ld	a, (hl)
   1784 47                 4812 	ld	b, a
   1785 79                 4813 	ld	a, c
   1786 2B                 4814 	dec	hl
   1787 77                 4815 	ld	(hl), a
   1788 78                 4816 	ld	a, b
   1789 C1                 4817 	pop	bc
   178A CE 00              4818 	adc	a,#0x00
   178C 23                 4819 	inc	hl
   178D 77                 4820 	ld	(hl),a
   178E                    4821 00117$:
                           4822 ;demo.c:757: cmd.source_x = bx;
   178E ED 4Br95s8F        4823 	ld	bc,(_bx)
   1792 21r24s8F           4824 	ld	hl,#_cmd
   1795 71                 4825 	ld	(hl),c
   1796 23                 4826 	inc	hl
   1797 70                 4827 	ld	(hl),b
                           4828 ;demo.c:758: cmd.source_y = bt;
   1798 01r26s8F           4829 	ld	bc,#_cmd + 2
   179B ED 5Br99s8F        4830 	ld	de,(_bt)
   179F 69                 4831 	ld	l,c
   17A0 60                 4832 	ld	h,b
   17A1 73                 4833 	ld	(hl),e
   17A2 23                 4834 	inc	hl
   17A3 72                 4835 	ld	(hl),d
                           4836 ;demo.c:759: cmd.dest_x = 0;
   17A4 21r28s8F           4837 	ld	hl, #_cmd + 4
   17A7 36 00              4838 	ld	(hl),#0x00
   17A9 23                 4839 	inc	hl
   17AA 36 00              4840 	ld	(hl),#0x00
                           4841 ;demo.c:760: cmd.dest_y = 256;
   17AC 21r2As8F           4842 	ld	hl, #_cmd + 6
   17AF 36 00              4843 	ld	(hl),#0x00
   17B1 23                 4844 	inc	hl
   17B2 36 01              4845 	ld	(hl),#0x01
                           4846 ;demo.c:761: cmd.size_x = 42;
   17B4 21r2Cs8F           4847 	ld	hl, #_cmd + 8
   17B7 36 2A              4848 	ld	(hl),#0x2A
   17B9 23                 4849 	inc	hl
   17BA 36 00              4850 	ld	(hl),#0x00
                           4851 ;demo.c:762: cmd.size_y = 42;
   17BC 21r2Es8F           4852 	ld	hl, #_cmd + 10
   17BF 36 2A              4853 	ld	(hl),#0x2A
   17C1 23                 4854 	inc	hl
   17C2 36 00              4855 	ld	(hl),#0x00
                           4856 ;demo.c:763: cmd.data = 0;
                           4857 ;demo.c:764: cmd.argument = 0x00;
   17C4 3E 00              4858 	ld	a,#0x00
   17C6 32r30s8F           4859 	ld	(#_cmd + 12),a
   17C9 32r31s8F           4860 	ld	(#_cmd + 13),a
                           4861 ;demo.c:765: cmd.command = 0xD0; // HMMM
   17CC 3E D0              4862 	ld	a,#0xD0
   17CE 32r32s8F           4863 	ld	(#_cmd + 14),a
                           4864 ;demo.c:766: vdp_copier(&cmd);
   17D1 21r24s8F           4865 	ld	hl,#_cmd
   17D4 E5                 4866 	push	hl
   17D5 CDr00s00           4867 	call	_vdp_copier
   17D8 F1                 4868 	pop	af
                           4869 ;demo.c:768: pbx = bx;
   17D9 2Ar95s8F           4870 	ld	hl,(_bx)
   17DC FD 21rA3s8F        4871 	ld	iy,#_pbx
   17E0 FD 75 00           4872 	ld	0 (iy),l
   17E3 FD 21rA3s8F        4873 	ld	iy,#_pbx
   17E7 FD 74 01           4874 	ld	1 (iy),h
                           4875 ;demo.c:769: pbt = bt;
   17EA 2Ar99s8F           4876 	ld	hl,(_bt)
   17ED FD 21rA5s8F        4877 	ld	iy,#_pbt
   17F1 FD 75 00           4878 	ld	0 (iy),l
   17F4 FD 21rA5s8F        4879 	ld	iy,#_pbt
   17F8 FD 74 01           4880 	ld	1 (iy),h
                           4881 ;demo.c:771: waitVB();
   17FB 76                 4882 		halt 
                           4883 ;demo.c:773: drawbox(bxx,byy,bx,bt);
   17FC 21r99s8F           4884 	ld	hl,#_bt + 0
   17FF 4E                 4885 	ld	c,(hl)
   1800 21r95s8F           4886 	ld	hl,#_bx + 0
   1803 46                 4887 	ld	b,(hl)
   1804 79                 4888 	ld	a,c
   1805 F5                 4889 	push	af
   1806 33                 4890 	inc	sp
   1807 C5                 4891 	push	bc
   1808 33                 4892 	inc	sp
   1809 2Ar9Ds8F           4893 	ld	hl,(_byy)
   180C E5                 4894 	push	hl
   180D 2Ar9Bs8F           4895 	ld	hl,(_bxx)
   1810 E5                 4896 	push	hl
   1811 CDr07s15           4897 	call	_drawbox
   1814 F1                 4898 	pop	af
   1815 F1                 4899 	pop	af
   1816 F1                 4900 	pop	af
                           4901 ;demo.c:775: waitVB();
   1817 76                 4902 		halt 
                           4903 ;demo.c:777: bonc = 1;
   1818 21rA1s8F           4904 	ld	hl,#_bonc + 0
   181B 36 01              4905 	ld	(hl), #0x01
   181D 21rA2s8F           4906 	ld	hl,#_bonc + 1
   1820 36 00              4907 	ld	(hl), #0x00
                           4908 ;demo.c:778: if (bt > by) {
   1822 21r97s8F           4909 	ld	hl,#_by
   1825 7E                 4910 	ld	a,(hl)
   1826 FD 21r99s8F        4911 	ld	iy,#_bt
   182A FD 96 00           4912 	sub	a,0 (iy)
   182D 23                 4913 	inc	hl
   182E 7E                 4914 	ld	a,(hl)
   182F FD 21r99s8F        4915 	ld	iy,#_bt
   1833 FD 9E 01           4916 	sbc	a,1 (iy)
   1836 F0                 4917 	ret	P
                           4918 ;demo.c:780: bt = 0;
   1837 21r99s8F           4919 	ld	hl,#_bt + 0
   183A 36 00              4920 	ld	(hl), #0x00
   183C 21r9As8F           4921 	ld	hl,#_bt + 1
   183F 36 00              4922 	ld	(hl), #0x00
                           4923 ;demo.c:781: if (by > 0) {
   1841 3E 00              4924 	ld	a,#0x00
   1843 FD 21r97s8F        4925 	ld	iy,#_by
   1847 FD 96 00           4926 	sub	a,0 (iy)
   184A 3E 00              4927 	ld	a,#0x00
   184C FD 21r97s8F        4928 	ld	iy,#_by
   1850 FD 9E 01           4929 	sbc	a,1 (iy)
   1853 F2rB9s18           4930 	jp	P,00127$
                           4931 ;demo.c:782: bonc = 0;
   1856 21rA1s8F           4932 	ld	hl,#_bonc + 0
   1859 36 00              4933 	ld	(hl), #0x00
   185B 21rA2s8F           4934 	ld	hl,#_bonc + 1
   185E 36 00              4935 	ld	(hl), #0x00
                           4936 ;demo.c:783: by-=16;
   1860 21r97s8F           4937 	ld	hl,#_by
   1863 7E                 4938 	ld	a,(hl)
   1864 C6 F0              4939 	add	a,#0xF0
   1866 77                 4940 	ld	(hl),a
   1867 23                 4941 	inc	hl
   1868 7E                 4942 	ld	a,(hl)
   1869 CE FF              4943 	adc	a,#0xFF
   186B 77                 4944 	ld	(hl),a
                           4945 ;demo.c:784: bxx++;
   186C FD 21r9Bs8F        4946 	ld	iy,#_bxx
   1870 FD 34 00           4947 	inc	0 (iy)
   1873 20 07              4948 	jr	NZ,00158$
   1875 FD 21r9Bs8F        4949 	ld	iy,#_bxx
   1879 FD 34 01           4950 	inc	1 (iy)
   187C                    4951 00158$:
                           4952 ;demo.c:785: if (bxx >= 4) { bxx = 0; byy++; }
   187C 3Ar9Bs8F           4953 	ld	a,(#_bxx+0)
   187F D6 04              4954 	sub	a,#0x04
   1881 3Ar9Cs8F           4955 	ld	a,(#_bxx+1)
   1884 DE 00              4956 	sbc	a,#0x00
   1886 FArA3s18           4957 	jp	M,00119$
   1889 21r9Bs8F           4958 	ld	hl,#_bxx + 0
   188C 36 00              4959 	ld	(hl), #0x00
   188E 21r9Cs8F           4960 	ld	hl,#_bxx + 1
   1891 36 00              4961 	ld	(hl), #0x00
   1893 FD 21r9Ds8F        4962 	ld	iy,#_byy
   1897 FD 34 00           4963 	inc	0 (iy)
   189A 20 07              4964 	jr	NZ,00159$
   189C FD 21r9Ds8F        4965 	ld	iy,#_byy
   18A0 FD 34 01           4966 	inc	1 (iy)
   18A3                    4967 00159$:
   18A3                    4968 00119$:
                           4969 ;demo.c:786: if (byy >= 2) { byy = 0; }
   18A3 3Ar9Ds8F           4970 	ld	a,(#_byy+0)
   18A6 D6 02              4971 	sub	a,#0x02
   18A8 3Ar9Es8F           4972 	ld	a,(#_byy+1)
   18AB DE 00              4973 	sbc	a,#0x00
   18AD F8                 4974 	ret	M
   18AE 21r9Ds8F           4975 	ld	hl,#_byy + 0
   18B1 36 00              4976 	ld	(hl), #0x00
   18B3 21r9Es8F           4977 	ld	hl,#_byy + 1
   18B6 36 00              4978 	ld	(hl), #0x00
   18B8 C9                 4979 	ret
   18B9                    4980 00127$:
                           4981 ;demo.c:788: bx-=21;
   18B9 21r95s8F           4982 	ld	hl,#_bx
   18BC 7E                 4983 	ld	a,(hl)
   18BD C6 EB              4984 	add	a,#0xEB
   18BF 77                 4985 	ld	(hl),a
   18C0 23                 4986 	inc	hl
   18C1 7E                 4987 	ld	a,(hl)
   18C2 CE FF              4988 	adc	a,#0xFF
   18C4 77                 4989 	ld	(hl),a
                           4990 ;demo.c:789: bo+=11;
   18C5 21r9Fs8F           4991 	ld	hl,#_bo
   18C8 7E                 4992 	ld	a,(hl)
   18C9 C6 0B              4993 	add	a,#0x0B
   18CB 23                 4994 	inc	hl
   18CC 2B                 4995 	dec	hl
   18CD C5                 4996 	push	bc
   18CE 4F                 4997 	ld	c, a
   18CF 23                 4998 	inc	hl
   18D0 7E                 4999 	ld	a, (hl)
   18D1 47                 5000 	ld	b, a
   18D2 79                 5001 	ld	a, c
   18D3 2B                 5002 	dec	hl
   18D4 77                 5003 	ld	(hl), a
   18D5 78                 5004 	ld	a, b
   18D6 C1                 5005 	pop	bc
   18D7 CE 00              5006 	adc	a,#0x00
   18D9 23                 5007 	inc	hl
   18DA 77                 5008 	ld	(hl),a
                           5009 ;demo.c:790: if (bo > 192) bo = 0;
   18DB 3E C0              5010 	ld	a,#0xC0
   18DD FD 21r9Fs8F        5011 	ld	iy,#_bo
   18E1 FD 96 00           5012 	sub	a,0 (iy)
   18E4 3E 00              5013 	ld	a,#0x00
   18E6 FD 21r9Fs8F        5014 	ld	iy,#_bo
   18EA FD 9E 01           5015 	sbc	a,1 (iy)
   18ED F2rFAs18           5016 	jp	P,00123$
   18F0 21r9Fs8F           5017 	ld	hl,#_bo + 0
   18F3 36 00              5018 	ld	(hl), #0x00
   18F5 21rA0s8F           5019 	ld	hl,#_bo + 1
   18F8 36 00              5020 	ld	(hl), #0x00
   18FA                    5021 00123$:
                           5022 ;demo.c:791: by=84+bo;
   18FA 21r97s8F           5023 	ld	hl,#_by
   18FD 3Ar9Fs8F           5024 	ld	a,(#_bo+0)
   1900 C6 54              5025 	add	a,#0x54
   1902 77                 5026 	ld	(hl),a
   1903 3ArA0s8F           5027 	ld	a,(#_bo+1)
   1906 CE 00              5028 	adc	a,#0x00
   1908 23                 5029 	inc	hl
   1909 77                 5030 	ld	(hl),a
                           5031 ;demo.c:792: if (bx <= 0) {
   190A 3E 00              5032 	ld	a,#0x00
   190C FD 21r95s8F        5033 	ld	iy,#_bx
   1910 FD 96 00           5034 	sub	a,0 (iy)
   1913 3E 00              5035 	ld	a,#0x00
   1915 FD 21r95s8F        5036 	ld	iy,#_bx
   1919 FD 9E 01           5037 	sbc	a,1 (iy)
   191C F8                 5038 	ret	M
                           5039 ;demo.c:793: bx = 256;
   191D 21r95s8F           5040 	ld	hl,#_bx + 0
   1920 36 00              5041 	ld	(hl), #0x00
   1922 21r96s8F           5042 	ld	hl,#_bx + 1
   1925 36 01              5043 	ld	(hl), #0x01
                           5044 ;demo.c:794: bo = 0;
   1927 21r9Fs8F           5045 	ld	hl,#_bo + 0
   192A 36 00              5046 	ld	(hl), #0x00
   192C 21rA0s8F           5047 	ld	hl,#_bo + 1
   192F 36 00              5048 	ld	(hl), #0x00
                           5049 ;demo.c:795: by = 84;
   1931 21r97s8F           5050 	ld	hl,#_by + 0
   1934 36 54              5051 	ld	(hl), #0x54
   1936 21r98s8F           5052 	ld	hl,#_by + 1
   1939 36 00              5053 	ld	(hl), #0x00
   193B C9                 5054 	ret
   193C                    5055 _boxes_end::
   193C                    5056 __str_9:
   193C 4C 45 54 20 55 53  5057 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1967 00                 5058 	.db 0x00
                           5059 ;demo.c:806: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5060 ;	---------------------------------
                           5061 ; Function drawtritile
                           5062 ; ---------------------------------
   1968                    5063 _drawtritile_start::
   1968                    5064 _drawtritile:
   1968 DD E5              5065 	push	ix
   196A DD 21 00 00        5066 	ld	ix,#0
   196E DD 39              5067 	add	ix,sp
                           5068 ;demo.c:807: cmd.source_x = tx;
   1970 DD 4E 04           5069 	ld	c,4 (ix)
   1973 06 00              5070 	ld	b,#0x00
   1975 21r24s8F           5071 	ld	hl,#_cmd
   1978 71                 5072 	ld	(hl),c
   1979 23                 5073 	inc	hl
   197A 70                 5074 	ld	(hl),b
                           5075 ;demo.c:808: cmd.source_y = ty-1;
   197B 01r26s8F           5076 	ld	bc,#_cmd + 2
   197E DD 5E 05           5077 	ld	e,5 (ix)
   1981 DD 56 06           5078 	ld	d,6 (ix)
   1984 1B                 5079 	dec	de
   1985 69                 5080 	ld	l,c
   1986 60                 5081 	ld	h,b
   1987 73                 5082 	ld	(hl),e
   1988 23                 5083 	inc	hl
   1989 72                 5084 	ld	(hl),d
                           5085 ;demo.c:809: cmd.dest_x = x;
   198A 01r28s8F           5086 	ld	bc,#_cmd + 4
   198D DD 5E 07           5087 	ld	e,7 (ix)
   1990 16 00              5088 	ld	d,#0x00
   1992 69                 5089 	ld	l,c
   1993 60                 5090 	ld	h,b
   1994 73                 5091 	ld	(hl),e
   1995 23                 5092 	inc	hl
   1996 72                 5093 	ld	(hl),d
                           5094 ;demo.c:810: cmd.dest_y = y;
   1997 01r2As8F           5095 	ld	bc,#_cmd + 6
   199A DD 5E 08           5096 	ld	e,8 (ix)
   199D 16 00              5097 	ld	d,#0x00
   199F 69                 5098 	ld	l,c
   19A0 60                 5099 	ld	h,b
   19A1 73                 5100 	ld	(hl),e
   19A2 23                 5101 	inc	hl
   19A3 72                 5102 	ld	(hl),d
                           5103 ;demo.c:811: cmd.size_x = 16;
   19A4 21r2Cs8F           5104 	ld	hl, #_cmd + 8
   19A7 36 10              5105 	ld	(hl),#0x10
   19A9 23                 5106 	inc	hl
   19AA 36 00              5107 	ld	(hl),#0x00
                           5108 ;demo.c:812: cmd.size_y = 16;
   19AC 21r2Es8F           5109 	ld	hl, #_cmd + 10
   19AF 36 10              5110 	ld	(hl),#0x10
   19B1 23                 5111 	inc	hl
   19B2 36 00              5112 	ld	(hl),#0x00
                           5113 ;demo.c:813: cmd.data = 0;
                           5114 ;demo.c:814: cmd.argument = 0x00;
   19B4 3E 00              5115 	ld	a,#0x00
   19B6 32r30s8F           5116 	ld	(#_cmd + 12),a
   19B9 32r31s8F           5117 	ld	(#_cmd + 13),a
                           5118 ;demo.c:815: cmd.command = 0xd0; // HMMM
   19BC 3E D0              5119 	ld	a,#0xD0
   19BE 32r32s8F           5120 	ld	(#_cmd + 14),a
                           5121 ;demo.c:816: vdp_copier(&cmd);
   19C1 21r24s8F           5122 	ld	hl,#_cmd
   19C4 E5                 5123 	push	hl
   19C5 CDr00s00           5124 	call	_vdp_copier
   19C8 F1                 5125 	pop	af
   19C9 DD E1              5126 	pop	ix
   19CB C9                 5127 	ret
   19CC                    5128 _drawtritile_end::
                           5129 ;demo.c:819: void drawtilescreen(char* tripic) {
                           5130 ;	---------------------------------
                           5131 ; Function drawtilescreen
                           5132 ; ---------------------------------
   19CC                    5133 _drawtilescreen_start::
   19CC                    5134 _drawtilescreen:
   19CC DD E5              5135 	push	ix
   19CE DD 21 00 00        5136 	ld	ix,#0
   19D2 DD 39              5137 	add	ix,sp
   19D4 21 F8 FF           5138 	ld	hl,#-8
   19D7 39                 5139 	add	hl,sp
   19D8 F9                 5140 	ld	sp,hl
                           5141 ;demo.c:820: int x = 0;
   19D9 DD 36 FE 00        5142 	ld	-2 (ix),#0x00
   19DD DD 36 FF 00        5143 	ld	-1 (ix),#0x00
                           5144 ;demo.c:823: while(i < 256) {
   19E1 DD 36 FC 00        5145 	ld	-4 (ix),#0x00
   19E5 DD 36 FD 00        5146 	ld	-3 (ix),#0x00
   19E9 DD 36 FA 00        5147 	ld	-6 (ix),#0x00
   19ED DD 36 FB 00        5148 	ld	-5 (ix),#0x00
   19F1                    5149 00103$:
   19F1 DD 7E FA           5150 	ld	a,-6 (ix)
   19F4 D6 00              5151 	sub	a,#0x00
   19F6 DD 7E FB           5152 	ld	a,-5 (ix)
   19F9 DE 01              5153 	sbc	a,#0x01
   19FB F2r82s1A           5154 	jp	P,00106$
                           5155 ;demo.c:824: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   19FE DD 7E FC           5156 	ld	a,-4 (ix)
   1A01 DD 77 F8           5157 	ld	-8 (ix),a
   1A04 DD 7E FE           5158 	ld	a,-2 (ix)
   1A07 DD 77 F9           5159 	ld	-7 (ix),a
   1A0A DD 7E 04           5160 	ld	a,4 (ix)
   1A0D DD 86 FA           5161 	add	a,-6 (ix)
   1A10 4F                 5162 	ld	c,a
   1A11 DD 7E 05           5163 	ld	a,5 (ix)
   1A14 DD 8E FB           5164 	adc	a,-5 (ix)
   1A17 47                 5165 	ld	b,a
   1A18 0A                 5166 	ld	a,(bc)
   1A19 4F                 5167 	ld	c,a
   1A1A 87                 5168 	add	a,a
   1A1B C6r20              5169 	add	a,#<_tri_lookup_y
   1A1D 6F                 5170 	ld	l,a
   1A1E 3Es01              5171 	ld	a,#>_tri_lookup_y
   1A20 CE 00              5172 	adc	a,#0x00
   1A22 67                 5173 	ld	h,a
   1A23 46                 5174 	ld	b,(hl)
   1A24 23                 5175 	inc	hl
   1A25 56                 5176 	ld	d,(hl)
   1A26 3Er00              5177 	ld	a,#<_tri_lookup_x
   1A28 81                 5178 	add	a,c
   1A29 6F                 5179 	ld	l,a
   1A2A 3Es01              5180 	ld	a,#>_tri_lookup_x
   1A2C CE 00              5181 	adc	a,#0x00
   1A2E 67                 5182 	ld	h,a
   1A2F 4E                 5183 	ld	c,(hl)
   1A30 DD 66 F8           5184 	ld	h,-8 (ix)
   1A33 DD 6E F9           5185 	ld	l,-7 (ix)
   1A36 E5                 5186 	push	hl
   1A37 58                 5187 	ld	e,b
   1A38 D5                 5188 	push	de
   1A39 79                 5189 	ld	a,c
   1A3A F5                 5190 	push	af
   1A3B 33                 5191 	inc	sp
   1A3C CDr68s19           5192 	call	_drawtritile
   1A3F F1                 5193 	pop	af
   1A40 F1                 5194 	pop	af
   1A41 33                 5195 	inc	sp
                           5196 ;demo.c:825: x+=16;
   1A42 DD 7E FE           5197 	ld	a,-2 (ix)
   1A45 C6 10              5198 	add	a,#0x10
   1A47 DD 77 FE           5199 	ld	-2 (ix),a
   1A4A DD 7E FF           5200 	ld	a,-1 (ix)
   1A4D CE 00              5201 	adc	a,#0x00
   1A4F DD 77 FF           5202 	ld	-1 (ix),a
                           5203 ;demo.c:826: if (x >= 256) {x = 0; y+=16;}
   1A52 DD 7E FE           5204 	ld	a,-2 (ix)
   1A55 D6 00              5205 	sub	a,#0x00
   1A57 DD 7E FF           5206 	ld	a,-1 (ix)
   1A5A DE 01              5207 	sbc	a,#0x01
   1A5C FAr77s1A           5208 	jp	M,00102$
   1A5F DD 36 FE 00        5209 	ld	-2 (ix),#0x00
   1A63 DD 36 FF 00        5210 	ld	-1 (ix),#0x00
   1A67 DD 7E FC           5211 	ld	a,-4 (ix)
   1A6A C6 10              5212 	add	a,#0x10
   1A6C DD 77 FC           5213 	ld	-4 (ix),a
   1A6F DD 7E FD           5214 	ld	a,-3 (ix)
   1A72 CE 00              5215 	adc	a,#0x00
   1A74 DD 77 FD           5216 	ld	-3 (ix),a
   1A77                    5217 00102$:
                           5218 ;demo.c:827: i++;
   1A77 DD 34 FA           5219 	inc	-6 (ix)
   1A7A 20 03              5220 	jr	NZ,00112$
   1A7C DD 34 FB           5221 	inc	-5 (ix)
   1A7F                    5222 00112$:
   1A7F C3rF1s19           5223 	jp	00103$
   1A82                    5224 00106$:
   1A82 DD F9              5225 	ld	sp,ix
   1A84 DD E1              5226 	pop	ix
   1A86 C9                 5227 	ret
   1A87                    5228 _drawtilescreen_end::
                           5229 ;demo.c:842: void tritiles() {
                           5230 ;	---------------------------------
                           5231 ; Function tritiles
                           5232 ; ---------------------------------
   1A87                    5233 _tritiles_start::
   1A87                    5234 _tritiles:
   1A87 DD E5              5235 	push	ix
   1A89 DD 21 00 00        5236 	ld	ix,#0
   1A8D DD 39              5237 	add	ix,sp
   1A8F 21 FB FF           5238 	ld	hl,#-5
   1A92 39                 5239 	add	hl,sp
   1A93 F9                 5240 	ld	sp,hl
                           5241 ;demo.c:849: if (tri_inited == 0) {
   1A94 AF                 5242 	xor	a,a
   1A95 21rA7s8F           5243 	ld	hl,#_tri_inited + 0
   1A98 B6                 5244 	or	a,(hl)
   1A99 C2r38s1B           5245 	jp	NZ,00102$
                           5246 ;demo.c:850: tri_inited = 1;
   1A9C FD 21rA7s8F        5247 	ld	iy,#_tri_inited
   1AA0 FD 36 00 01        5248 	ld	0 (iy),#0x01
                           5249 ;demo.c:852: cmd.size_x = 256;
   1AA4 21r2Cs8F           5250 	ld	hl, #_cmd + 8
   1AA7 36 00              5251 	ld	(hl),#0x00
   1AA9 23                 5252 	inc	hl
   1AAA 36 01              5253 	ld	(hl),#0x01
                           5254 ;demo.c:853: cmd.size_y = 1;
   1AAC 21r2Es8F           5255 	ld	hl, #_cmd + 10
   1AAF 36 01              5256 	ld	(hl),#0x01
   1AB1 23                 5257 	inc	hl
   1AB2 36 00              5258 	ld	(hl),#0x00
                           5259 ;demo.c:854: cmd.data = 0;
                           5260 ;demo.c:855: cmd.argument = 0x00; // from 70xY to left
   1AB4 3E 00              5261 	ld	a,#0x00
   1AB6 32r30s8F           5262 	ld	(#_cmd + 12),a
   1AB9 32r31s8F           5263 	ld	(#_cmd + 13),a
                           5264 ;demo.c:856: cmd.command = 0xd0; // vram to vram, y only
   1ABC 01r32s8F           5265 	ld	bc,#_cmd + 14
   1ABF 3E D0              5266 	ld	a,#0xD0
   1AC1 02                 5267 	ld	(bc),a
                           5268 ;demo.c:857: cmd.source_x = 0;
   1AC2 21r24s8F           5269 	ld	hl,#_cmd
   1AC5 36 00              5270 	ld	(hl),#0x00
   1AC7 23                 5271 	inc	hl
   1AC8 36 00              5272 	ld	(hl),#0x00
                           5273 ;demo.c:858: cmd.source_y = 255;
   1ACA 21r26s8F           5274 	ld	hl, #_cmd + 2
   1ACD 36 FF              5275 	ld	(hl),#0xFF
   1ACF 23                 5276 	inc	hl
   1AD0 36 00              5277 	ld	(hl),#0x00
                           5278 ;demo.c:859: cmd.dest_y = 0;
   1AD2 01r2As8F           5279 	ld	bc,#_cmd + 6
   1AD5 69                 5280 	ld	l,c
   1AD6 60                 5281 	ld	h,b
   1AD7 36 00              5282 	ld	(hl),#0x00
   1AD9 23                 5283 	inc	hl
   1ADA 36 00              5284 	ld	(hl),#0x00
                           5285 ;demo.c:861: for (x = 0; x < 212; x++) {
   1ADC DD 36 FE D4        5286 	ld	-2 (ix),#0xD4
   1AE0 DD 36 FF 00        5287 	ld	-1 (ix),#0x00
   1AE4                    5288 00109$:
                           5289 ;demo.c:862: waitVB();
   1AE4 76                 5290 		halt 
                           5291 ;demo.c:863: cmd.dest_x = 0;
   1AE5 11r28s8F           5292 	ld	de,#_cmd + 4
   1AE8 EB                 5293 	ex	de,hl
   1AE9 36 00              5294 	ld	(hl),#0x00
   1AEB 23                 5295 	inc	hl
   1AEC 36 00              5296 	ld	(hl),#0x00
                           5297 ;demo.c:864: cmd.dest_y = x;
   1AEE 11r2As8F           5298 	ld	de,#_cmd + 6
   1AF1 DD 4E FE           5299 	ld	c,-2 (ix)
   1AF4 DD 46 FF           5300 	ld	b,-1 (ix)
   1AF7 0B                 5301 	dec	bc
   1AF8 EB                 5302 	ex	de,hl
   1AF9 71                 5303 	ld	(hl),c
   1AFA 23                 5304 	inc	hl
   1AFB 70                 5305 	ld	(hl),b
                           5306 ;demo.c:865: vdp_copier(&cmd);
   1AFC C5                 5307 	push	bc
   1AFD 21r24s8F           5308 	ld	hl,#_cmd
   1B00 E5                 5309 	push	hl
   1B01 CDr00s00           5310 	call	_vdp_copier
   1B04 F1                 5311 	pop	af
   1B05 C1                 5312 	pop	bc
   1B06 DD 71 FE           5313 	ld	-2 (ix),c
   1B09 DD 70 FF           5314 	ld	-1 (ix),b
                           5315 ;demo.c:861: for (x = 0; x < 212; x++) {
   1B0C DD 7E FE           5316 	ld	a,-2 (ix)
   1B0F DD B6 FF           5317 	or	a,-1 (ix)
   1B12 20 D0              5318 	jr	NZ,00109$
                           5319 ;demo.c:867: vdp_register(9,2); // 192 lines
   1B14 21 09 02           5320 	ld	hl,#0x0209
   1B17 E5                 5321 	push	hl
   1B18 CDr00s00           5322 	call	_vdp_register
   1B1B F1                 5323 	pop	af
                           5324 ;demo.c:869: vdp_load_palette(boxes_palette);
   1B1C 21r00s8F           5325 	ld	hl,#_boxes_palette
   1B1F E5                 5326 	push	hl
   1B20 CDr00s00           5327 	call	_vdp_load_palette
   1B23 F1                 5328 	pop	af
                           5329 ;demo.c:870: msx2_palette(15,0,0,0);
   1B24 21 00 00           5330 	ld	hl,#0x0000
   1B27 E5                 5331 	push	hl
   1B28 2E 0F              5332 	ld	l, #0x0F
   1B2A E5                 5333 	push	hl
   1B2B CDr00s00           5334 	call	_msx2_palette
   1B2E F1                 5335 	pop	af
   1B2F F1                 5336 	pop	af
                           5337 ;demo.c:872: drawtilescreen(tri_center);
   1B30 21r2Cs02           5338 	ld	hl,#_tri_center
   1B33 E5                 5339 	push	hl
   1B34 CDrCCs19           5340 	call	_drawtilescreen
   1B37 F1                 5341 	pop	af
   1B38                    5342 00102$:
                           5343 ;demo.c:877: triframes++;
   1B38 FD 21rB2s8F        5344 	ld	iy,#_triframes
   1B3C FD 34 00           5345 	inc	0 (iy)
   1B3F 20 07              5346 	jr	NZ,00124$
   1B41 FD 21rB2s8F        5347 	ld	iy,#_triframes
   1B45 FD 34 01           5348 	inc	1 (iy)
   1B48                    5349 00124$:
                           5350 ;demo.c:878: if (triframes == 300) {
   1B48 3ArB2s8F           5351 	ld	a,(#_triframes+0)
   1B4B D6 2C              5352 	sub	a,#0x2C
   1B4D 20 07              5353 	jr	NZ,00125$
   1B4F 3ArB3s8F           5354 	ld	a,(#_triframes+1)
   1B52 D6 01              5355 	sub	a,#0x01
   1B54 28 02              5356 	jr	Z,00126$
   1B56                    5357 00125$:
   1B56 18 08              5358 	jr	00104$
   1B58                    5359 00126$:
                           5360 ;demo.c:879: drawtilescreen(tri_up);
   1B58 21rECs02           5361 	ld	hl,#_tri_up
   1B5B E5                 5362 	push	hl
   1B5C CDrCCs19           5363 	call	_drawtilescreen
   1B5F F1                 5364 	pop	af
   1B60                    5365 00104$:
                           5366 ;demo.c:882: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   1B60 21rAAs8F           5367 	ld	hl,#_tripal + 2
   1B63 4E                 5368 	ld	c,(hl)
   1B64 11rA9s8F           5369 	ld	de,#_tripal + 1
   1B67 1A                 5370 	ld	a,(de)
   1B68 47                 5371 	ld	b,a
   1B69 21rA8s8F           5372 	ld	hl,#_tripal
   1B6C 5E                 5373 	ld	e,(hl)
   1B6D 79                 5374 	ld	a,c
   1B6E F5                 5375 	push	af
   1B6F 33                 5376 	inc	sp
   1B70 C5                 5377 	push	bc
   1B71 33                 5378 	inc	sp
   1B72 53                 5379 	ld	d,e
   1B73 1E 03              5380 	ld	e,#0x03
   1B75 D5                 5381 	push	de
   1B76 CDr00s00           5382 	call	_msx2_palette
   1B79 F1                 5383 	pop	af
   1B7A F1                 5384 	pop	af
                           5385 ;demo.c:883: msx2_palette(13,tripal[3],tripal[4],tripal[5]);
   1B7B 21rADs8F           5386 	ld	hl,#_tripal + 5
   1B7E 4E                 5387 	ld	c,(hl)
   1B7F 11rACs8F           5388 	ld	de,#_tripal + 4
   1B82 1A                 5389 	ld	a,(de)
   1B83 47                 5390 	ld	b,a
   1B84 21rABs8F           5391 	ld	hl,#_tripal + 3
   1B87 5E                 5392 	ld	e,(hl)
   1B88 79                 5393 	ld	a,c
   1B89 F5                 5394 	push	af
   1B8A 33                 5395 	inc	sp
   1B8B C5                 5396 	push	bc
   1B8C 33                 5397 	inc	sp
   1B8D 53                 5398 	ld	d,e
   1B8E 1E 0D              5399 	ld	e,#0x0D
   1B90 D5                 5400 	push	de
   1B91 CDr00s00           5401 	call	_msx2_palette
   1B94 F1                 5402 	pop	af
   1B95 F1                 5403 	pop	af
                           5404 ;demo.c:884: msx2_palette(5,tripal[6],tripal[7],tripal[8]);
   1B96 21rB0s8F           5405 	ld	hl,#_tripal + 8
   1B99 4E                 5406 	ld	c,(hl)
   1B9A 11rAFs8F           5407 	ld	de,#_tripal + 7
   1B9D 1A                 5408 	ld	a,(de)
   1B9E 47                 5409 	ld	b,a
   1B9F 21rAEs8F           5410 	ld	hl,#_tripal + 6
   1BA2 5E                 5411 	ld	e,(hl)
   1BA3 79                 5412 	ld	a,c
   1BA4 F5                 5413 	push	af
   1BA5 33                 5414 	inc	sp
   1BA6 C5                 5415 	push	bc
   1BA7 33                 5416 	inc	sp
   1BA8 53                 5417 	ld	d,e
   1BA9 1E 05              5418 	ld	e,#0x05
   1BAB D5                 5419 	push	de
   1BAC CDr00s00           5420 	call	_msx2_palette
   1BAF F1                 5421 	pop	af
   1BB0 F1                 5422 	pop	af
                           5423 ;demo.c:887: tripaltick++;
   1BB1 FD 21rB1s8F        5424 	ld	iy,#_tripaltick
   1BB5 FD 34 00           5425 	inc	0 (iy)
                           5426 ;demo.c:888: if (tripaltick > 6) {
   1BB8 3E 06              5427 	ld	a,#0x06
   1BBA FD 21rB1s8F        5428 	ld	iy,#_tripaltick
   1BBE FD 96 00           5429 	sub	a,0 (iy)
   1BC1 D2r2Fs1C           5430 	jp	NC,00114$
                           5431 ;demo.c:890: r = tripal[0];
   1BC4 21rA8s8F           5432 	ld	hl,#_tripal
   1BC7 4E                 5433 	ld	c,(hl)
   1BC8 DD 71 FD           5434 	ld	-3 (ix),c
                           5435 ;demo.c:891: g = tripal[1];
   1BCB 11rA9s8F           5436 	ld	de,#_tripal + 1
   1BCE 1A                 5437 	ld	a,(de)
   1BCF DD 77 FC           5438 	ld	-4 (ix),a
                           5439 ;demo.c:892: b = tripal[2];
   1BD2 21rAAs8F           5440 	ld	hl,#_tripal + 2
   1BD5 5E                 5441 	ld	e,(hl)
   1BD6 DD 73 FB           5442 	ld	-5 (ix),e
                           5443 ;demo.c:894: for (x = 0; x < 6; x++) {
   1BD9 DD 36 FE 00        5444 	ld	-2 (ix),#0x00
   1BDD DD 36 FF 00        5445 	ld	-1 (ix),#0x00
   1BE1                    5446 00110$:
   1BE1 DD 7E FE           5447 	ld	a,-2 (ix)
   1BE4 D6 06              5448 	sub	a,#0x06
   1BE6 DD 7E FF           5449 	ld	a,-1 (ix)
   1BE9 DE 00              5450 	sbc	a,#0x00
   1BEB F2r15s1C           5451 	jp	P,00113$
                           5452 ;demo.c:895: tripal[x] = tripal[x+3];
   1BEE 3ErA8              5453 	ld	a,#<_tripal
   1BF0 DD 86 FE           5454 	add	a,-2 (ix)
   1BF3 4F                 5455 	ld	c,a
   1BF4 3Es8F              5456 	ld	a,#>_tripal
   1BF6 DD 8E FF           5457 	adc	a,-1 (ix)
   1BF9 47                 5458 	ld	b,a
   1BFA DD 5E FE           5459 	ld	e,-2 (ix)
   1BFD 1C                 5460 	inc	e
   1BFE 1C                 5461 	inc	e
   1BFF 1C                 5462 	inc	e
   1C00 3ErA8              5463 	ld	a,#<_tripal
   1C02 83                 5464 	add	a,e
   1C03 5F                 5465 	ld	e,a
   1C04 3Es8F              5466 	ld	a,#>_tripal
   1C06 CE 00              5467 	adc	a,#0x00
   1C08 57                 5468 	ld	d,a
   1C09 1A                 5469 	ld	a,(de)
   1C0A 02                 5470 	ld	(bc),a
                           5471 ;demo.c:894: for (x = 0; x < 6; x++) {
   1C0B DD 34 FE           5472 	inc	-2 (ix)
   1C0E 20 03              5473 	jr	NZ,00127$
   1C10 DD 34 FF           5474 	inc	-1 (ix)
   1C13                    5475 00127$:
   1C13 18 CC              5476 	jr	00110$
   1C15                    5477 00113$:
                           5478 ;demo.c:898: tripal[6] = r;
   1C15 01rAEs8F           5479 	ld	bc,#_tripal + 6
   1C18 DD 7E FD           5480 	ld	a,-3 (ix)
   1C1B 02                 5481 	ld	(bc),a
                           5482 ;demo.c:899: tripal[7] = g;
   1C1C 01rAFs8F           5483 	ld	bc,#_tripal + 7
   1C1F DD 7E FC           5484 	ld	a,-4 (ix)
   1C22 02                 5485 	ld	(bc),a
                           5486 ;demo.c:900: tripal[8] = b;
   1C23 01rB0s8F           5487 	ld	bc,#_tripal + 8
   1C26 DD 7E FB           5488 	ld	a,-5 (ix)
   1C29 02                 5489 	ld	(bc),a
                           5490 ;demo.c:901: tripaltick = 0;
   1C2A 21rB1s8F           5491 	ld	hl,#_tripaltick + 0
   1C2D 36 00              5492 	ld	(hl), #0x00
   1C2F                    5493 00114$:
   1C2F DD F9              5494 	ld	sp,ix
   1C31 DD E1              5495 	pop	ix
   1C33 C9                 5496 	ret
   1C34                    5497 _tritiles_end::
                           5498 ;demo.c:910: void do_quit() {
                           5499 ;	---------------------------------
                           5500 ; Function do_quit
                           5501 ; ---------------------------------
   1C34                    5502 _do_quit_start::
   1C34                    5503 _do_quit:
                           5504 ;demo.c:911: waitVB();
   1C34 76                 5505 		halt 
                           5506 ;demo.c:912: uninstall_isr();
   1C35 CDr00s00           5507 	call	_uninstall_isr
                           5508 ;demo.c:913: PLY_Stop();
   1C38 CDr00s00           5509 	call	_PLY_Stop
                           5510 ;demo.c:914: PLY_SendRegisters();
   1C3B CDr00s00           5511 	call	_PLY_SendRegisters
                           5512 ;demo.c:916: screen(0);
   1C3E 3E 00              5513 	ld	a,#0x00
   1C40 F5                 5514 	push	af
   1C41 33                 5515 	inc	sp
   1C42 CDr00s00           5516 	call	_screen
   1C45 33                 5517 	inc	sp
                           5518 ;demo.c:918: puts("demo quit\r\n\r\n");
   1C46 21r57s1C           5519 	ld	hl,#__str_10
   1C49 E5                 5520 	push	hl
   1C4A CDr00s00           5521 	call	_puts
   1C4D F1                 5522 	pop	af
                           5523 ;demo.c:920: exit(0);	
   1C4E 3E 00              5524 	ld	a,#0x00
   1C50 F5                 5525 	push	af
   1C51 33                 5526 	inc	sp
   1C52 CDr00s00           5527 	call	_exit
   1C55 33                 5528 	inc	sp
   1C56 C9                 5529 	ret
   1C57                    5530 _do_quit_end::
   1C57                    5531 __str_10:
   1C57 64 65 6D 6F 20 71  5532 	.ascii "demo quit"
        75 69 74
   1C60 0D                 5533 	.db 0x0D
   1C61 0A                 5534 	.db 0x0A
   1C62 0D                 5535 	.db 0x0D
   1C63 0A                 5536 	.db 0x0A
   1C64 00                 5537 	.db 0x00
                           5538 ;demo.c:923: void main() {
                           5539 ;	---------------------------------
                           5540 ; Function main
                           5541 ; ---------------------------------
   1C65                    5542 _main_start::
   1C65                    5543 _main:
   1C65 DD E5              5544 	push	ix
   1C67 DD 21 00 00        5545 	ld	ix,#0
   1C6B DD 39              5546 	add	ix,sp
   1C6D 21 F7 FF           5547 	ld	hl,#-9
   1C70 39                 5548 	add	hl,sp
   1C71 F9                 5549 	ld	sp,hl
                           5550 ;demo.c:924: unsigned char quit=0;
   1C72 DD 36 FF 00        5551 	ld	-1 (ix),#0x00
                           5552 ;demo.c:925: int modes = 128; // interlace bit on
   1C76 DD 36 FD 80        5553 	ld	-3 (ix),#0x80
   1C7A DD 36 FE 00        5554 	ld	-2 (ix),#0x00
                           5555 ;demo.c:931: spindown();
   1C7E CDr00s00           5556 	call	_spindown
                           5557 ;demo.c:933: puts("demo init\r\n\r\n");
   1C81 21r67s1F           5558 	ld	hl,#__str_11
   1C84 E5                 5559 	push	hl
   1C85 CDr00s00           5560 	call	_puts
   1C88 F1                 5561 	pop	af
                           5562 ;demo.c:935: for (y = 0; y < 2; y++) {
   1C89 DD 36 F9 00        5563 	ld	-7 (ix),#0x00
   1C8D DD 36 FA 00        5564 	ld	-6 (ix),#0x00
   1C91                    5565 00127$:
   1C91 DD 7E F9           5566 	ld	a,-7 (ix)
   1C94 D6 02              5567 	sub	a,#0x02
   1C96 DD 7E FA           5568 	ld	a,-6 (ix)
   1C99 DE 00              5569 	sbc	a,#0x00
   1C9B F2r22s1D           5570 	jp	P,00130$
                           5571 ;demo.c:936: for (x = 0; x < 16; x++) {
   1C9E DD 56 F9           5572 	ld	d,-7 (ix)
   1CA1 DD 4E FA           5573 	ld	c,-6 (ix)
   1CA4 CB 22              5574 	sla	d
   1CA6 CB 11              5575 	rl	c
   1CA8 CB 22              5576 	sla	d
   1CAA CB 11              5577 	rl	c
   1CAC CB 22              5578 	sla	d
   1CAE CB 11              5579 	rl	c
   1CB0 CB 22              5580 	sla	d
   1CB2 CB 11              5581 	rl	c
   1CB4 7A                 5582 	ld	a,d
   1CB5 C6 81              5583 	add	a,#0x81
   1CB7 DD 77 F7           5584 	ld	-9 (ix),a
   1CBA 79                 5585 	ld	a,c
   1CBB CE 03              5586 	adc	a,#0x03
   1CBD DD 77 F8           5587 	ld	-8 (ix),a
   1CC0 DD 36 FB 00        5588 	ld	-5 (ix),#0x00
   1CC4 DD 36 FC 00        5589 	ld	-4 (ix),#0x00
   1CC8                    5590 00123$:
   1CC8 DD 7E FB           5591 	ld	a,-5 (ix)
   1CCB D6 10              5592 	sub	a,#0x10
   1CCD DD 7E FC           5593 	ld	a,-4 (ix)
   1CD0 DE 00              5594 	sbc	a,#0x00
   1CD2 F2r17s1D           5595 	jp	P,00129$
                           5596 ;demo.c:937: tri_lookup_x[(y*16)+x] = x * 16;
   1CD5 DD 7E F9           5597 	ld	a,-7 (ix)
   1CD8 07                 5598 	rlca
   1CD9 07                 5599 	rlca
   1CDA 07                 5600 	rlca
   1CDB 07                 5601 	rlca
   1CDC E6 F0              5602 	and	a,#0xF0
   1CDE 47                 5603 	ld	b,a
   1CDF DD 5E FB           5604 	ld	e,-5 (ix)
   1CE2 78                 5605 	ld	a,b
   1CE3 83                 5606 	add	a,e
   1CE4 47                 5607 	ld	b, a
   1CE5 C6r00              5608 	add	a,#<_tri_lookup_x
   1CE7 4F                 5609 	ld	c,a
   1CE8 3Es01              5610 	ld	a,#>_tri_lookup_x
   1CEA CE 00              5611 	adc	a,#0x00
   1CEC 57                 5612 	ld	d,a
   1CED 7B                 5613 	ld	a,e
   1CEE 07                 5614 	rlca
   1CEF 07                 5615 	rlca
   1CF0 07                 5616 	rlca
   1CF1 07                 5617 	rlca
   1CF2 E6 F0              5618 	and	a,#0xF0
   1CF4 5F                 5619 	ld	e,a
   1CF5 69                 5620 	ld	l,c
   1CF6 62                 5621 	ld	h,d
   1CF7 73                 5622 	ld	(hl),e
                           5623 ;demo.c:938: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   1CF8 CB 20              5624 	sla	b
   1CFA 3Er20              5625 	ld	a,#<_tri_lookup_y
   1CFC 80                 5626 	add	a,b
   1CFD 6F                 5627 	ld	l,a
   1CFE 3Es01              5628 	ld	a,#>_tri_lookup_y
   1D00 CE 00              5629 	adc	a,#0x00
   1D02 67                 5630 	ld	h,a
   1D03 DD 7E F7           5631 	ld	a,-9 (ix)
   1D06 77                 5632 	ld	(hl),a
   1D07 23                 5633 	inc	hl
   1D08 DD 7E F8           5634 	ld	a,-8 (ix)
   1D0B 77                 5635 	ld	(hl),a
                           5636 ;demo.c:936: for (x = 0; x < 16; x++) {
   1D0C DD 34 FB           5637 	inc	-5 (ix)
   1D0F 20 03              5638 	jr	NZ,00154$
   1D11 DD 34 FC           5639 	inc	-4 (ix)
   1D14                    5640 00154$:
   1D14 C3rC8s1C           5641 	jp	00123$
   1D17                    5642 00129$:
                           5643 ;demo.c:935: for (y = 0; y < 2; y++) {
   1D17 DD 34 F9           5644 	inc	-7 (ix)
   1D1A 20 03              5645 	jr	NZ,00155$
   1D1C DD 34 FA           5646 	inc	-6 (ix)
   1D1F                    5647 00155$:
   1D1F C3r91s1C           5648 	jp	00127$
   1D22                    5649 00130$:
                           5650 ;demo.c:953: puts("music init...");
   1D22 21r75s1F           5651 	ld	hl,#__str_12
   1D25 E5                 5652 	push	hl
   1D26 CDr00s00           5653 	call	_puts
   1D29 F1                 5654 	pop	af
                           5655 ;demo.c:955: PLY_SongPtr = (char *)0x0103;
   1D2A 21r00s00           5656 	ld	hl,#_PLY_SongPtr + 0
   1D2D 36 03              5657 	ld	(hl), #0x03
   1D2F 21r01s00           5658 	ld	hl,#_PLY_SongPtr + 1
   1D32 36 01              5659 	ld	(hl), #0x01
                           5660 ;demo.c:956: PLY_Init();
   1D34 CDr00s00           5661 	call	_PLY_Init
                           5662 ;demo.c:957: puts("done.\r\n");
   1D37 21r83s1F           5663 	ld	hl,#__str_13
   1D3A E5                 5664 	push	hl
   1D3B CDr00s00           5665 	call	_puts
   1D3E F1                 5666 	pop	af
                           5667 ;demo.c:959: puts("detecting vdp type...");
   1D3F 21r8Bs1F           5668 	ld	hl,#__str_14
   1D42 E5                 5669 	push	hl
   1D43 CDr00s00           5670 	call	_puts
   1D46 F1                 5671 	pop	af
                           5672 ;demo.c:960: if(isvdp2())
   1D47 CDr00s00           5673 	call	_isvdp2
   1D4A AF                 5674 	xor	a,a
   1D4B B5                 5675 	or	a,l
   1D4C 28 12              5676 	jr	Z,00102$
                           5677 ;demo.c:962: puts(" vdp2 found!\r\n\r\n");
   1D4E 21rA1s1F           5678 	ld	hl,#__str_15
   1D51 E5                 5679 	push	hl
   1D52 CDr00s00           5680 	call	_puts
   1D55 F1                 5681 	pop	af
                           5682 ;demo.c:963: modes+=2; // pal
   1D56 DD 36 FD 82        5683 	ld	-3 (ix),#0x82
   1D5A DD 36 FE 00        5684 	ld	-2 (ix),#0x00
   1D5E 18 0B              5685 	jr	00103$
   1D60                    5686 00102$:
                           5687 ;demo.c:966: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   1D60 21rB2s1F           5688 	ld	hl,#__str_16
   1D63 E5                 5689 	push	hl
   1D64 CDr00s00           5690 	call	_puts
   1D67 F1                 5691 	pop	af
                           5692 ;demo.c:967: do_quit();
   1D68 CDr34s1C           5693 	call	_do_quit
   1D6B                    5694 00103$:
                           5695 ;demo.c:970: pal_load("TWISTER PL5",32,1);
   1D6B 21 01 00           5696 	ld	hl,#0x0001
   1D6E E5                 5697 	push	hl
   1D6F 3E 20              5698 	ld	a,#0x20
   1D71 F5                 5699 	push	af
   1D72 33                 5700 	inc	sp
   1D73 21rF9s1F           5701 	ld	hl,#__str_17
   1D76 E5                 5702 	push	hl
   1D77 CDr63s05           5703 	call	_pal_load
   1D7A F1                 5704 	pop	af
   1D7B F1                 5705 	pop	af
   1D7C 33                 5706 	inc	sp
                           5707 ;demo.c:971: memcpy(twister_palette, cur_palette, 32);
   1D7D 21 20 00           5708 	ld	hl,#0x0020
   1D80 E5                 5709 	push	hl
   1D81 21r80s8E           5710 	ld	hl,#_cur_palette
   1D84 E5                 5711 	push	hl
   1D85 21rC0s8E           5712 	ld	hl,#_twister_palette
   1D88 E5                 5713 	push	hl
   1D89 CDr00s00           5714 	call	_memcpy
   1D8C F1                 5715 	pop	af
   1D8D F1                 5716 	pop	af
   1D8E F1                 5717 	pop	af
                           5718 ;demo.c:972: pal_load("TF1     PL5",32,1);
   1D8F 21 01 00           5719 	ld	hl,#0x0001
   1D92 E5                 5720 	push	hl
   1D93 3E 20              5721 	ld	a,#0x20
   1D95 F5                 5722 	push	af
   1D96 33                 5723 	inc	sp
   1D97 21r05s20           5724 	ld	hl,#__str_18
   1D9A E5                 5725 	push	hl
   1D9B CDr63s05           5726 	call	_pal_load
   1D9E F1                 5727 	pop	af
   1D9F F1                 5728 	pop	af
   1DA0 33                 5729 	inc	sp
                           5730 ;demo.c:973: memcpy(tf_palette, cur_palette, 32);
   1DA1 21 20 00           5731 	ld	hl,#0x0020
   1DA4 E5                 5732 	push	hl
   1DA5 21r80s8E           5733 	ld	hl,#_cur_palette
   1DA8 E5                 5734 	push	hl
   1DA9 21rE0s8E           5735 	ld	hl,#_tf_palette
   1DAC E5                 5736 	push	hl
   1DAD CDr00s00           5737 	call	_memcpy
   1DB0 F1                 5738 	pop	af
   1DB1 F1                 5739 	pop	af
   1DB2 F1                 5740 	pop	af
                           5741 ;demo.c:974: pal_load("BOXES   PL5",32,1);
   1DB3 21 01 00           5742 	ld	hl,#0x0001
   1DB6 E5                 5743 	push	hl
   1DB7 3E 20              5744 	ld	a,#0x20
   1DB9 F5                 5745 	push	af
   1DBA 33                 5746 	inc	sp
   1DBB 21r11s20           5747 	ld	hl,#__str_19
   1DBE E5                 5748 	push	hl
   1DBF CDr63s05           5749 	call	_pal_load
   1DC2 F1                 5750 	pop	af
   1DC3 F1                 5751 	pop	af
   1DC4 33                 5752 	inc	sp
                           5753 ;demo.c:975: memcpy(boxes_palette, cur_palette, 32);
   1DC5 21 20 00           5754 	ld	hl,#0x0020
   1DC8 E5                 5755 	push	hl
   1DC9 21r80s8E           5756 	ld	hl,#_cur_palette
   1DCC E5                 5757 	push	hl
   1DCD 21r00s8F           5758 	ld	hl,#_boxes_palette
   1DD0 E5                 5759 	push	hl
   1DD1 CDr00s00           5760 	call	_memcpy
   1DD4 F1                 5761 	pop	af
   1DD5 F1                 5762 	pop	af
   1DD6 F1                 5763 	pop	af
                           5764 ;demo.c:978: pal_load("BULBS   PL5",32,1);
   1DD7 21 01 00           5765 	ld	hl,#0x0001
   1DDA E5                 5766 	push	hl
   1DDB 3E 20              5767 	ld	a,#0x20
   1DDD F5                 5768 	push	af
   1DDE 33                 5769 	inc	sp
   1DDF 21r1Ds20           5770 	ld	hl,#__str_20
   1DE2 E5                 5771 	push	hl
   1DE3 CDr63s05           5772 	call	_pal_load
   1DE6 F1                 5773 	pop	af
   1DE7 F1                 5774 	pop	af
   1DE8 33                 5775 	inc	sp
                           5776 ;demo.c:980: pck_load("BULBS   PCK",2431,0x8000,VRAM_0,1);
   1DE9 21 01 00           5777 	ld	hl,#0x0001
   1DEC E5                 5778 	push	hl
   1DED 2E 01              5779 	ld	l, #0x01
   1DEF E5                 5780 	push	hl
   1DF0 21 00 80           5781 	ld	hl,#0x8000
   1DF3 E5                 5782 	push	hl
   1DF4 21 7F 09           5783 	ld	hl,#0x097F
   1DF7 E5                 5784 	push	hl
   1DF8 21r29s20           5785 	ld	hl,#__str_21
   1DFB E5                 5786 	push	hl
   1DFC CDr59s07           5787 	call	_pck_load
   1DFF FD 21 0A 00        5788 	ld	iy,#0x000A
   1E03 FD 39              5789 	add	iy,sp
   1E05 FD F9              5790 	ld	sp,iy
                           5791 ;demo.c:982: pck_load("TWISTER PCK",4032,0x0000,VRAM_1,1);
   1E07 21 01 00           5792 	ld	hl,#0x0001
   1E0A E5                 5793 	push	hl
   1E0B 2E 00              5794 	ld	l, #0x00
   1E0D E5                 5795 	push	hl
   1E0E 2E 00              5796 	ld	l, #0x00
   1E10 E5                 5797 	push	hl
   1E11 21 C0 0F           5798 	ld	hl,#0x0FC0
   1E14 E5                 5799 	push	hl
   1E15 21r35s20           5800 	ld	hl,#__str_22
   1E18 E5                 5801 	push	hl
   1E19 CDr59s07           5802 	call	_pck_load
   1E1C FD 21 0A 00        5803 	ld	iy,#0x000A
   1E20 FD 39              5804 	add	iy,sp
   1E22 FD F9              5805 	ld	sp,iy
                           5806 ;demo.c:983: pck_load("BOXES   PCK",4500,0x8000,VRAM_1,1);
   1E24 21 01 00           5807 	ld	hl,#0x0001
   1E27 E5                 5808 	push	hl
   1E28 2E 00              5809 	ld	l, #0x00
   1E2A E5                 5810 	push	hl
   1E2B 26 80              5811 	ld	h, #0x80
   1E2D E5                 5812 	push	hl
   1E2E 21 94 11           5813 	ld	hl,#0x1194
   1E31 E5                 5814 	push	hl
   1E32 21r41s20           5815 	ld	hl,#__str_23
   1E35 E5                 5816 	push	hl
   1E36 CDr59s07           5817 	call	_pck_load
   1E39 FD 21 0A 00        5818 	ld	iy,#0x000A
   1E3D FD 39              5819 	add	iy,sp
   1E3F FD F9              5820 	ld	sp,iy
                           5821 ;demo.c:987: vdp_set_screen5();
   1E41 CDr00s00           5822 	call	_vdp_set_screen5
                           5823 ;demo.c:989: vdp_register(VDP_MODE3,modes); // interlace on, screen mode pal or ntsc
   1E44 DD 7E FD           5824 	ld	a,-3 (ix)
   1E47 F5                 5825 	push	af
   1E48 33                 5826 	inc	sp
   1E49 3E 09              5827 	ld	a,#0x09
   1E4B F5                 5828 	push	af
   1E4C 33                 5829 	inc	sp
   1E4D CDr00s00           5830 	call	_vdp_register
   1E50 F1                 5831 	pop	af
                           5832 ;demo.c:992: puts("demo start\r\n");
   1E51 21r4Ds20           5833 	ld	hl,#__str_24
   1E54 E5                 5834 	push	hl
   1E55 CDr00s00           5835 	call	_puts
   1E58 F1                 5836 	pop	af
                           5837 ;demo.c:994: scratch_clear();
   1E59 CDr50s05           5838 	call	_scratch_clear
                           5839 ;demo.c:995: vdp_load_palette(scratch);
   1E5C 21r00s8E           5840 	ld	hl,#_scratch
   1E5F E5                 5841 	push	hl
   1E60 CDr00s00           5842 	call	_vdp_load_palette
   1E63 F1                 5843 	pop	af
                           5844 ;demo.c:997: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   1E64 21 00 00           5845 	ld	hl,#0x0000
   1E67 E5                 5846 	push	hl
   1E68 2E 01              5847 	ld	l, #0x01
   1E6A E5                 5848 	push	hl
   1E6B 2E 00              5849 	ld	l, #0x00
   1E6D E5                 5850 	push	hl
   1E6E 21 6A 08           5851 	ld	hl,#0x086A
   1E71 E5                 5852 	push	hl
   1E72 21r5As20           5853 	ld	hl,#__str_25
   1E75 E5                 5854 	push	hl
   1E76 CDr59s07           5855 	call	_pck_load
   1E79 FD 21 0A 00        5856 	ld	iy,#0x000A
   1E7D FD 39              5857 	add	iy,sp
   1E7F FD F9              5858 	ld	sp,iy
                           5859 ;demo.c:998: pal_load("DSSLOGO PL5",32,1);
   1E81 21 01 00           5860 	ld	hl,#0x0001
   1E84 E5                 5861 	push	hl
   1E85 3E 20              5862 	ld	a,#0x20
   1E87 F5                 5863 	push	af
   1E88 33                 5864 	inc	sp
   1E89 21r66s20           5865 	ld	hl,#__str_26
   1E8C E5                 5866 	push	hl
   1E8D CDr63s05           5867 	call	_pal_load
   1E90 F1                 5868 	pop	af
   1E91 F1                 5869 	pop	af
   1E92 33                 5870 	inc	sp
                           5871 ;demo.c:999: vdp_load_palette(cur_palette);
   1E93 21r80s8E           5872 	ld	hl,#_cur_palette
   1E96 E5                 5873 	push	hl
   1E97 CDr00s00           5874 	call	_vdp_load_palette
   1E9A F1                 5875 	pop	af
                           5876 ;demo.c:1001: vdp_register(VDP_VOFFSET,0);
   1E9B 21 17 00           5877 	ld	hl,#0x0017
   1E9E E5                 5878 	push	hl
   1E9F CDr00s00           5879 	call	_vdp_register
   1EA2 F1                 5880 	pop	af
                           5881 ;demo.c:1013: install_isr(my_isr);
   1EA3 21rACs03           5882 	ld	hl,#_my_isr
   1EA6 E5                 5883 	push	hl
   1EA7 CDr00s00           5884 	call	_install_isr
   1EAA F1                 5885 	pop	af
                           5886 ;demo.c:1015: while (!quit) {
   1EAB                    5887 00120$:
   1EAB AF                 5888 	xor	a,a
   1EAC DD B6 FF           5889 	or	a,-1 (ix)
   1EAF C2r5Fs1F           5890 	jp	NZ,00122$
                           5891 ;demo.c:1018: if (vbicount < 64) { 
   1EB2 3Ar20s8F           5892 	ld	a,(#_vbicount+0)
   1EB5 D6 40              5893 	sub	a,#0x40
   1EB7 FD 21r20s8F        5894 	ld	iy,#_vbicount
   1EBB FD 7E 01           5895 	ld	a,1 (iy)
   1EBE DE 00              5896 	sbc	a,#0x00
   1EC0 F2rC7s1E           5897 	jp	P,00105$
                           5898 ;demo.c:1019: waitVB();
   1EC3 76                 5899 		halt 
                           5900 ;demo.c:1020: fadein(); 
   1EC4 CDrE7s07           5901 	call	_fadein
   1EC7                    5902 00105$:
                           5903 ;demo.c:1022: if (vbicount >= 192 && vbicount < 800) {
   1EC7 3Ar20s8F           5904 	ld	a,(#_vbicount+0)
   1ECA D6 C0              5905 	sub	a,#0xC0
   1ECC 3Ar21s8F           5906 	ld	a,(#_vbicount+1)
   1ECF DE 00              5907 	sbc	a,#0x00
   1ED1 FArE9s1E           5908 	jp	M,00107$
   1ED4 3Ar20s8F           5909 	ld	a,(#_vbicount+0)
   1ED7 D6 20              5910 	sub	a,#0x20
   1ED9 FD 21r20s8F        5911 	ld	iy,#_vbicount
   1EDD FD 7E 01           5912 	ld	a,1 (iy)
   1EE0 DE 03              5913 	sbc	a,#0x03
   1EE2 F2rE9s1E           5914 	jp	P,00107$
                           5915 ;demo.c:1023: waitVB();
   1EE5 76                 5916 		halt 
                           5917 ;demo.c:1024: bulbs();
   1EE6 CDr59s11           5918 	call	_bulbs
   1EE9                    5919 00107$:
                           5920 ;demo.c:1027: if (vbicount >= 800 && vbicount < 1500) {
   1EE9 3Ar20s8F           5921 	ld	a,(#_vbicount+0)
   1EEC D6 20              5922 	sub	a,#0x20
   1EEE 3Ar21s8F           5923 	ld	a,(#_vbicount+1)
   1EF1 DE 03              5924 	sbc	a,#0x03
   1EF3 FAr0Bs1F           5925 	jp	M,00110$
   1EF6 3Ar20s8F           5926 	ld	a,(#_vbicount+0)
   1EF9 D6 DC              5927 	sub	a,#0xDC
   1EFB FD 21r20s8F        5928 	ld	iy,#_vbicount
   1EFF FD 7E 01           5929 	ld	a,1 (iy)
   1F02 DE 05              5930 	sbc	a,#0x05
   1F04 F2r0Bs1F           5931 	jp	P,00110$
                           5932 ;demo.c:1028: waitVB();
   1F07 76                 5933 		halt 
                           5934 ;demo.c:1029: twister();
   1F08 CDrE3s0F           5935 	call	_twister
   1F0B                    5936 00110$:
                           5937 ;demo.c:1032: if (vbicount >= 1500 && vbicount < 2200) {
   1F0B 3Ar20s8F           5938 	ld	a,(#_vbicount+0)
   1F0E D6 DC              5939 	sub	a,#0xDC
   1F10 3Ar21s8F           5940 	ld	a,(#_vbicount+1)
   1F13 DE 05              5941 	sbc	a,#0x05
   1F15 FAr28s1F           5942 	jp	M,00113$
   1F18 3Ar20s8F           5943 	ld	a,(#_vbicount+0)
   1F1B D6 98              5944 	sub	a,#0x98
   1F1D 3Ar21s8F           5945 	ld	a,(#_vbicount+1)
   1F20 DE 08              5946 	sbc	a,#0x08
   1F22 F2r28s1F           5947 	jp	P,00113$
                           5948 ;demo.c:1033: boxes();
   1F25 CDrC1s15           5949 	call	_boxes
   1F28                    5950 00113$:
                           5951 ;demo.c:1037: if (vbicount >= 2200 && vbicount < 5800) {
   1F28 3Ar20s8F           5952 	ld	a,(#_vbicount+0)
   1F2B D6 98              5953 	sub	a,#0x98
   1F2D 3Ar21s8F           5954 	ld	a,(#_vbicount+1)
   1F30 DE 08              5955 	sbc	a,#0x08
   1F32 FAr4As1F           5956 	jp	M,00116$
   1F35 3Ar20s8F           5957 	ld	a,(#_vbicount+0)
   1F38 D6 A8              5958 	sub	a,#0xA8
   1F3A FD 21r20s8F        5959 	ld	iy,#_vbicount
   1F3E FD 7E 01           5960 	ld	a,1 (iy)
   1F41 DE 16              5961 	sbc	a,#0x16
   1F43 F2r4As1F           5962 	jp	P,00116$
                           5963 ;demo.c:1038: waitVB();
   1F46 76                 5964 		halt 
                           5965 ;demo.c:1039: tritiles();
   1F47 CDr87s1A           5966 	call	_tritiles
   1F4A                    5967 00116$:
                           5968 ;demo.c:1043: if(space())
   1F4A 21 08 01           5969 	ld	hl,#0x0108
   1F4D E5                 5970 	push	hl
   1F4E CDr00s00           5971 	call	_ispressed
   1F51 F1                 5972 	pop	af
   1F52 4D                 5973 	ld	c,l
   1F53 AF                 5974 	xor	a,a
   1F54 B5                 5975 	or	a,l
   1F55 CArABs1E           5976 	jp	Z,00120$
                           5977 ;demo.c:1044: quit=1;
   1F58 DD 36 FF 01        5978 	ld	-1 (ix),#0x01
   1F5C C3rABs1E           5979 	jp	00120$
   1F5F                    5980 00122$:
                           5981 ;demo.c:1047: do_quit();
   1F5F CDr34s1C           5982 	call	_do_quit
   1F62 DD F9              5983 	ld	sp,ix
   1F64 DD E1              5984 	pop	ix
   1F66 C9                 5985 	ret
   1F67                    5986 _main_end::
   1F67                    5987 __str_11:
   1F67 64 65 6D 6F 20 69  5988 	.ascii "demo init"
        6E 69 74
   1F70 0D                 5989 	.db 0x0D
   1F71 0A                 5990 	.db 0x0A
   1F72 0D                 5991 	.db 0x0D
   1F73 0A                 5992 	.db 0x0A
   1F74 00                 5993 	.db 0x00
   1F75                    5994 __str_12:
   1F75 6D 75 73 69 63 20  5995 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   1F82 00                 5996 	.db 0x00
   1F83                    5997 __str_13:
   1F83 64 6F 6E 65 2E     5998 	.ascii "done."
   1F88 0D                 5999 	.db 0x0D
   1F89 0A                 6000 	.db 0x0A
   1F8A 00                 6001 	.db 0x00
   1F8B                    6002 __str_14:
   1F8B 64 65 74 65 63 74  6003 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   1FA0 00                 6004 	.db 0x00
   1FA1                    6005 __str_15:
   1FA1 20 76 64 70 32 20  6006 	.ascii " vdp2 found!"
        66 6F 75 6E 64 21
   1FAD 0D                 6007 	.db 0x0D
   1FAE 0A                 6008 	.db 0x0A
   1FAF 0D                 6009 	.db 0x0D
   1FB0 0A                 6010 	.db 0x0A
   1FB1 00                 6011 	.db 0x00
   1FB2                    6012 __str_16:
   1FB2 20 76 64 70 31 20  6013 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   1FBE 0D                 6014 	.db 0x0D
   1FBF 0A                 6015 	.db 0x0A
   1FC0 53 6F 72 72 79 2C  6016 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   1FEE 20 56 52 41 4D 2E  6017 	.ascii " VRAM."
   1FF4 0D                 6018 	.db 0x0D
   1FF5 0A                 6019 	.db 0x0A
   1FF6 0D                 6020 	.db 0x0D
   1FF7 0A                 6021 	.db 0x0A
   1FF8 00                 6022 	.db 0x00
   1FF9                    6023 __str_17:
   1FF9 54 57 49 53 54 45  6024 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   2004 00                 6025 	.db 0x00
   2005                    6026 __str_18:
   2005 54 46 31 20 20 20  6027 	.ascii "TF1     PL5"
        20 20 50 4C 35
   2010 00                 6028 	.db 0x00
   2011                    6029 __str_19:
   2011 42 4F 58 45 53 20  6030 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   201C 00                 6031 	.db 0x00
   201D                    6032 __str_20:
   201D 42 55 4C 42 53 20  6033 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   2028 00                 6034 	.db 0x00
   2029                    6035 __str_21:
   2029 42 55 4C 42 53 20  6036 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   2034 00                 6037 	.db 0x00
   2035                    6038 __str_22:
   2035 54 57 49 53 54 45  6039 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   2040 00                 6040 	.db 0x00
   2041                    6041 __str_23:
   2041 42 4F 58 45 53 20  6042 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   204C 00                 6043 	.db 0x00
   204D                    6044 __str_24:
   204D 64 65 6D 6F 20 73  6045 	.ascii "demo start"
        74 61 72 74
   2057 0D                 6046 	.db 0x0D
   2058 0A                 6047 	.db 0x0A
   2059 00                 6048 	.db 0x00
   205A                    6049 __str_25:
   205A 44 53 53 4C 4F 47  6050 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   2065 00                 6051 	.db 0x00
   2066                    6052 __str_26:
   2066 44 53 53 4C 4F 47  6053 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   2071 00                 6054 	.db 0x00
                           6055 	.area _CODE
                           6056 	.area _CABS
