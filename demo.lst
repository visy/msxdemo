                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Tue Mar  6 14:34:51 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _points
                             15 	.globl _logoeffu
                             16 	.globl _abs
                             17 	.globl _tritiles
                             18 	.globl _drawtilescreen_full
                             19 	.globl _drawtilescreen
                             20 	.globl _drawtritile
                             21 	.globl _thewave
                             22 	.globl _boxes
                             23 	.globl _drawbox
                             24 	.globl _animplay
                             25 	.globl _bulbs
                             26 	.globl _twister
                             27 	.globl _font
                             28 	.globl _drawsine
                             29 	.globl _drawstr
                             30 	.globl _do_letter_tall
                             31 	.globl _do_letter
                             32 	.globl _raster_effu
                             33 	.globl _do_blocks
                             34 	.globl _do_ymmm
                             35 	.globl _fadein
                             36 	.globl _pck_load
                             37 	.globl _raw_load
                             38 	.globl _pause
                             39 	.globl _pal_load
                             40 	.globl _scratch_clear
                             41 	.globl _ge5_load
                             42 	.globl _color_isr
                             43 	.globl _my_isr
                             44 	.globl _isNthBitSet
                             45 	.globl _scenetimings
                             46 	.globl _scenepointers
                             47 	.globl _timeindex
                             48 	.globl _sceneindex
                             49 	.globl _pointframe
                             50 	.globl _initpoints
                             51 	.globl _onceclear
                             52 	.globl _powa
                             53 	.globl _powatick
                             54 	.globl _triframes
                             55 	.globl _tripaltick2
                             56 	.globl _tripaltick
                             57 	.globl _tripal
                             58 	.globl _tiletick
                             59 	.globl _tiley
                             60 	.globl _tilex
                             61 	.globl _tilei
                             62 	.globl _tri_inited
                             63 	.globl _ffa
                             64 	.globl _buf
                             65 	.globl _initwave
                             66 	.globl _prevbox_of
                             67 	.globl _boxes_of
                             68 	.globl _pbt
                             69 	.globl _pbx
                             70 	.globl _bonc
                             71 	.globl _bo
                             72 	.globl _bt
                             73 	.globl _by
                             74 	.globl _bx
                             75 	.globl _boxi
                             76 	.globl _boxes_y
                             77 	.globl _boxes_x
                             78 	.globl _prevy
                             79 	.globl _prevx
                             80 	.globl _buffer
                             81 	.globl _boxes_init
                             82 	.globl _anim_init
                             83 	.globl _sy
                             84 	.globl _enderdir
                             85 	.globl _ender
                             86 	.globl _ff2
                             87 	.globl _ff1
                             88 	.globl _bulbflipper
                             89 	.globl _twinited
                             90 	.globl _ff
                             91 	.globl _ly
                             92 	.globl _lx
                             93 	.globl _linenum
                             94 	.globl _flof
                             95 	.globl _btab
                             96 	.globl _bty
                             97 	.globl _btx
                             98 	.globl _bsy
                             99 	.globl _bsx
                            100 	.globl _block_init
                            101 	.globl _cc
                            102 	.globl _yofff
                            103 	.globl _cmd
                            104 	.globl _tick
                            105 	.globl _vbicount
                            106 	.globl _boxes_palette
                            107 	.globl _tf_palette
                            108 	.globl _twister_palette
                            109 	.globl _block_palette
                            110 	.globl _bulbs_palette
                            111 	.globl _cur_palette
                            112 	.globl _scratch
                            113 	.globl _packbuffer
                            114 	.globl _tri_lookup_y
                            115 	.globl _eighttimes
                            116 	.globl _twelvetimes
                            117 	.globl _tri_lookup_x
                            118 	.globl _sintab
                            119 	.globl _font_w
                            120 	.globl _font_y
                            121 	.globl _font_x
                            122 	.globl _tri_side2
                            123 	.globl _tri_side1
                            124 	.globl _tri_dia
                            125 	.globl _tri_up
                            126 	.globl _tri_center
                            127 	.globl _sintabx
                            128 ;--------------------------------------------------------
                            129 ; special function registers
                            130 ;--------------------------------------------------------
                            131 ;--------------------------------------------------------
                            132 ;  ram data
                            133 ;--------------------------------------------------------
                            134 	.area _DATA
   0000                     135 _sintab::
   0000                     136 	.ds 256
   0100                     137 _tri_lookup_x::
   0100                     138 	.ds 32
   0120                     139 _twelvetimes::
   0120                     140 	.ds 52
   0154                     141 _eighttimes::
   0154                     142 	.ds 52
   0188                     143 _tri_lookup_y::
   0188                     144 	.ds 64
   01C8                     145 _packbuffer::
   01C8                     146 	.ds 16000
   4048                     147 _scratch::
   4048                     148 	.ds 128
   40C8                     149 _cur_palette::
   40C8                     150 	.ds 32
   40E8                     151 _bulbs_palette::
   40E8                     152 	.ds 32
   4108                     153 _block_palette::
   4108                     154 	.ds 32
   4128                     155 _twister_palette::
   4128                     156 	.ds 32
   4148                     157 _tf_palette::
   4148                     158 	.ds 32
   4168                     159 _boxes_palette::
   4168                     160 	.ds 32
   4188                     161 _vbicount::
   4188                     162 	.ds 2
   418A                     163 _tick::
   418A                     164 	.ds 2
   418C                     165 _cmd::
   418C                     166 	.ds 15
   419B                     167 _isNthBitSet_mask_1_1:
   419B                     168 	.ds 8
   41A3                     169 _yofff::
   41A3                     170 	.ds 1
   41A4                     171 _cc::
   41A4                     172 	.ds 1
   41A5                     173 _flipper:
   41A5                     174 	.ds 2
   41A7                     175 _ymmmf:
   41A7                     176 	.ds 2
   41A9                     177 _block_init::
   41A9                     178 	.ds 1
   41AA                     179 _bsx::
   41AA                     180 	.ds 2
   41AC                     181 _bsy::
   41AC                     182 	.ds 2
   41AE                     183 _btx::
   41AE                     184 	.ds 2
   41B0                     185 _bty::
   41B0                     186 	.ds 2
   41B2                     187 _btab::
   41B2                     188 	.ds 32
   41D2                     189 _flof::
   41D2                     190 	.ds 2
   41D4                     191 _linenum::
   41D4                     192 	.ds 2
   41D6                     193 _lx::
   41D6                     194 	.ds 1
   41D7                     195 _ly::
   41D7                     196 	.ds 1
   41D8                     197 _ff::
   41D8                     198 	.ds 2
   41DA                     199 _twinited::
   41DA                     200 	.ds 2
   41DC                     201 _bulbflipper::
   41DC                     202 	.ds 2
   41DE                     203 _ff1::
   41DE                     204 	.ds 2
   41E0                     205 _ff2::
   41E0                     206 	.ds 2
   41E2                     207 _ender::
   41E2                     208 	.ds 2
   41E4                     209 _enderdir::
   41E4                     210 	.ds 2
   41E6                     211 _sy::
   41E6                     212 	.ds 2
   41E8                     213 _xo:
   41E8                     214 	.ds 2
   41EA                     215 _yo:
   41EA                     216 	.ds 2
   41EC                     217 _po:
   41EC                     218 	.ds 2
   41EE                     219 _frames:
   41EE                     220 	.ds 2
   41F0                     221 _anim_init::
   41F0                     222 	.ds 2
   41F2                     223 _boxes_init::
   41F2                     224 	.ds 1
   41F3                     225 _buffer::
   41F3                     226 	.ds 2
   41F5                     227 _prevx::
   41F5                     228 	.ds 2
   41F7                     229 _prevy::
   41F7                     230 	.ds 2
   41F9                     231 _boxes_x::
   41F9                     232 	.ds 5
   41FE                     233 _boxes_y::
   41FE                     234 	.ds 10
   4208                     235 _boxi::
   4208                     236 	.ds 1
   4209                     237 _bx::
   4209                     238 	.ds 2
   420B                     239 _by::
   420B                     240 	.ds 2
   420D                     241 _bt::
   420D                     242 	.ds 2
   420F                     243 _bo::
   420F                     244 	.ds 2
   4211                     245 _bonc::
   4211                     246 	.ds 2
   4213                     247 _pbx::
   4213                     248 	.ds 2
   4215                     249 _pbt::
   4215                     250 	.ds 2
   4217                     251 _boxes_of::
   4217                     252 	.ds 10
   4221                     253 _prevbox_of::
   4221                     254 	.ds 1
   4222                     255 _initwave::
   4222                     256 	.ds 1
   4223                     257 _buf::
   4223                     258 	.ds 2
   4225                     259 _ffa::
   4225                     260 	.ds 2
   4227                     261 _tri_inited::
   4227                     262 	.ds 1
   4228                     263 _tilei::
   4228                     264 	.ds 2
   422A                     265 _tilex::
   422A                     266 	.ds 2
   422C                     267 _tiley::
   422C                     268 	.ds 2
   422E                     269 _tiletick::
   422E                     270 	.ds 1
   422F                     271 _tripal::
   422F                     272 	.ds 9
   4238                     273 _tripaltick::
   4238                     274 	.ds 1
   4239                     275 _tripaltick2::
   4239                     276 	.ds 1
   423A                     277 _triframes::
   423A                     278 	.ds 2
   423C                     279 _powatick::
   423C                     280 	.ds 2
   423E                     281 _powa::
   423E                     282 	.ds 2
   4240                     283 _onceclear::
   4240                     284 	.ds 1
   4241                     285 _initpoints::
   4241                     286 	.ds 1
   4242                     287 _pointframe::
   4242                     288 	.ds 2
   4244                     289 _sceneindex::
   4244                     290 	.ds 2
   4246                     291 _timeindex::
   4246                     292 	.ds 2
   4248                     293 _scenepointers::
   4248                     294 	.ds 16
   4258                     295 _scenetimings::
   4258                     296 	.ds 32
                            297 ;--------------------------------------------------------
                            298 ; overlayable items in  ram 
                            299 ;--------------------------------------------------------
                            300 	.area _OVERLAY
                            301 ;--------------------------------------------------------
                            302 ; external initialized ram data
                            303 ;--------------------------------------------------------
                            304 ;--------------------------------------------------------
                            305 ; global & static initialisations
                            306 ;--------------------------------------------------------
                            307 	.area _HOME
                            308 	.area _GSINIT
                            309 	.area _GSFINAL
                            310 	.area _GSINIT
                            311 ;demo.c:135: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r9Bs41            312 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            313 	call	__initrleblock
   0006 08                  314 	.db	8
   0007 01 02 04 08 10 20   315 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  316 	.db	0
                            317 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            318 	ld	hl,#_sintab
   0013 CDr00s00            319 	call	__initrleblock
   0016 3B                  320 	.db	59
   0017 00 03 06 09 0C 0F   321 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   322 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   323 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   324 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   325 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   326 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   327 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            328 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               329 	.db	#-5,#0x7E
   0054 01                  330 	.db	1
   0055 7F                  331 	.db	0x7F
   0056 FB 7E               332 	.db	#-5,#0x7E
   0058 75                  333 	.db	117
   0059 7D 7D 7C 7B 7B 7A   334 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   335 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   336 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   337 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   338 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   339 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   340 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   341 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   342 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   343 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   344 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   345 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   346 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   347 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      348 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               349 	.db	#-5,#0x82
   00D0 01                  350 	.db	1
   00D1 81                  351 	.db	0x81
   00D2 FB 82               352 	.db	#-5,#0x82
   00D4 3A                  353 	.db	58
   00D5 83 83 84 85 85 86   354 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   355 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   356 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   357 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   358 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   359 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   360 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               361 	.db	0xFA, 0xFD
   010F 00                  362 	.db	0
                            363 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            364 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            365 	call	__initrleblock
   0116 E0 00               366 	.db	#-32,#0x00
   0118 00                  367 	.db	0
                            368 ;demo.c:114: int twelvetimes[26] = { 0 };
   0119 21r20s01            369 	ld	hl,#_twelvetimes
   011C CDr00s00            370 	call	__initrleblock
   011F CC 00               371 	.db	#-52,#0x00
   0121 00                  372 	.db	0
                            373 ;demo.c:115: int eighttimes[26] = { 0 };
   0122 21r54s01            374 	ld	hl,#_eighttimes
   0125 CDr00s00            375 	call	__initrleblock
   0128 CC 00               376 	.db	#-52,#0x00
   012A 00                  377 	.db	0
                            378 ;demo.c:117: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            379 	ld	hl,#_tri_lookup_y
   012E CDr00s00            380 	call	__initrleblock
   0131 C0 00               381 	.db	#-64,#0x00
   0133 00                  382 	.db	0
                            383 ;demo.c:119: uint8_t packbuffer[16000] = {0};
   0134 21rC8s01            384 	ld	hl,#_packbuffer
   0137 CDr00s00            385 	call	__initrleblock
   013A 81 00               386 	.db	#-127,#0x00
   013C 81 00               387 	.db	#-127,#0x00
   013E 81 00               388 	.db	#-127,#0x00
   0140 81 00               389 	.db	#-127,#0x00
   0142 81 00               390 	.db	#-127,#0x00
   0144 81 00               391 	.db	#-127,#0x00
   0146 81 00               392 	.db	#-127,#0x00
   0148 81 00               393 	.db	#-127,#0x00
   014A 81 00               394 	.db	#-127,#0x00
   014C 81 00               395 	.db	#-127,#0x00
   014E 81 00               396 	.db	#-127,#0x00
   0150 81 00               397 	.db	#-127,#0x00
   0152 81 00               398 	.db	#-127,#0x00
   0154 81 00               399 	.db	#-127,#0x00
   0156 81 00               400 	.db	#-127,#0x00
   0158 81 00               401 	.db	#-127,#0x00
   015A 81 00               402 	.db	#-127,#0x00
   015C 81 00               403 	.db	#-127,#0x00
   015E 81 00               404 	.db	#-127,#0x00
   0160 81 00               405 	.db	#-127,#0x00
   0162 81 00               406 	.db	#-127,#0x00
   0164 81 00               407 	.db	#-127,#0x00
   0166 81 00               408 	.db	#-127,#0x00
   0168 81 00               409 	.db	#-127,#0x00
   016A 81 00               410 	.db	#-127,#0x00
   016C 81 00               411 	.db	#-127,#0x00
   016E 81 00               412 	.db	#-127,#0x00
   0170 81 00               413 	.db	#-127,#0x00
   0172 81 00               414 	.db	#-127,#0x00
   0174 81 00               415 	.db	#-127,#0x00
   0176 81 00               416 	.db	#-127,#0x00
   0178 81 00               417 	.db	#-127,#0x00
   017A 81 00               418 	.db	#-127,#0x00
   017C 81 00               419 	.db	#-127,#0x00
   017E 81 00               420 	.db	#-127,#0x00
   0180 81 00               421 	.db	#-127,#0x00
   0182 81 00               422 	.db	#-127,#0x00
   0184 81 00               423 	.db	#-127,#0x00
   0186 81 00               424 	.db	#-127,#0x00
   0188 81 00               425 	.db	#-127,#0x00
   018A 81 00               426 	.db	#-127,#0x00
   018C 81 00               427 	.db	#-127,#0x00
   018E 81 00               428 	.db	#-127,#0x00
   0190 81 00               429 	.db	#-127,#0x00
   0192 81 00               430 	.db	#-127,#0x00
   0194 81 00               431 	.db	#-127,#0x00
   0196 81 00               432 	.db	#-127,#0x00
   0198 81 00               433 	.db	#-127,#0x00
   019A 81 00               434 	.db	#-127,#0x00
   019C 81 00               435 	.db	#-127,#0x00
   019E 81 00               436 	.db	#-127,#0x00
   01A0 81 00               437 	.db	#-127,#0x00
   01A2 81 00               438 	.db	#-127,#0x00
   01A4 81 00               439 	.db	#-127,#0x00
   01A6 81 00               440 	.db	#-127,#0x00
   01A8 81 00               441 	.db	#-127,#0x00
   01AA 81 00               442 	.db	#-127,#0x00
   01AC 81 00               443 	.db	#-127,#0x00
   01AE 81 00               444 	.db	#-127,#0x00
   01B0 81 00               445 	.db	#-127,#0x00
   01B2 81 00               446 	.db	#-127,#0x00
   01B4 81 00               447 	.db	#-127,#0x00
   01B6 81 00               448 	.db	#-127,#0x00
   01B8 81 00               449 	.db	#-127,#0x00
   01BA 81 00               450 	.db	#-127,#0x00
   01BC 81 00               451 	.db	#-127,#0x00
   01BE 81 00               452 	.db	#-127,#0x00
   01C0 81 00               453 	.db	#-127,#0x00
   01C2 81 00               454 	.db	#-127,#0x00
   01C4 81 00               455 	.db	#-127,#0x00
   01C6 81 00               456 	.db	#-127,#0x00
   01C8 81 00               457 	.db	#-127,#0x00
   01CA 81 00               458 	.db	#-127,#0x00
   01CC 81 00               459 	.db	#-127,#0x00
   01CE 81 00               460 	.db	#-127,#0x00
   01D0 81 00               461 	.db	#-127,#0x00
   01D2 81 00               462 	.db	#-127,#0x00
   01D4 81 00               463 	.db	#-127,#0x00
   01D6 81 00               464 	.db	#-127,#0x00
   01D8 81 00               465 	.db	#-127,#0x00
   01DA 81 00               466 	.db	#-127,#0x00
   01DC 81 00               467 	.db	#-127,#0x00
   01DE 81 00               468 	.db	#-127,#0x00
   01E0 81 00               469 	.db	#-127,#0x00
   01E2 81 00               470 	.db	#-127,#0x00
   01E4 81 00               471 	.db	#-127,#0x00
   01E6 81 00               472 	.db	#-127,#0x00
   01E8 81 00               473 	.db	#-127,#0x00
   01EA 81 00               474 	.db	#-127,#0x00
   01EC 81 00               475 	.db	#-127,#0x00
   01EE 81 00               476 	.db	#-127,#0x00
   01F0 81 00               477 	.db	#-127,#0x00
   01F2 81 00               478 	.db	#-127,#0x00
   01F4 81 00               479 	.db	#-127,#0x00
   01F6 81 00               480 	.db	#-127,#0x00
   01F8 81 00               481 	.db	#-127,#0x00
   01FA 81 00               482 	.db	#-127,#0x00
   01FC 81 00               483 	.db	#-127,#0x00
   01FE 81 00               484 	.db	#-127,#0x00
   0200 81 00               485 	.db	#-127,#0x00
   0202 81 00               486 	.db	#-127,#0x00
   0204 81 00               487 	.db	#-127,#0x00
   0206 81 00               488 	.db	#-127,#0x00
   0208 81 00               489 	.db	#-127,#0x00
   020A 81 00               490 	.db	#-127,#0x00
   020C 81 00               491 	.db	#-127,#0x00
   020E 81 00               492 	.db	#-127,#0x00
   0210 81 00               493 	.db	#-127,#0x00
   0212 81 00               494 	.db	#-127,#0x00
   0214 81 00               495 	.db	#-127,#0x00
   0216 81 00               496 	.db	#-127,#0x00
   0218 81 00               497 	.db	#-127,#0x00
   021A 81 00               498 	.db	#-127,#0x00
   021C 81 00               499 	.db	#-127,#0x00
   021E 81 00               500 	.db	#-127,#0x00
   0220 81 00               501 	.db	#-127,#0x00
   0222 81 00               502 	.db	#-127,#0x00
   0224 81 00               503 	.db	#-127,#0x00
   0226 81 00               504 	.db	#-127,#0x00
   0228 81 00               505 	.db	#-127,#0x00
   022A 81 00               506 	.db	#-127,#0x00
   022C 81 00               507 	.db	#-127,#0x00
   022E 81 00               508 	.db	#-127,#0x00
   0230 81 00               509 	.db	#-127,#0x00
   0232 81 00               510 	.db	#-127,#0x00
   0234 83 00               511 	.db	#-125,#0x00
   0236 00                  512 	.db	0
                            513 ;demo.c:129: volatile int vbicount=0;
   0237 FD 21r88s41         514 	ld	iy,#_vbicount
   023B FD 36 00 00         515 	ld	0 (iy),#0x00
   023F FD 21r88s41         516 	ld	iy,#_vbicount
   0243 FD 36 01 00         517 	ld	1 (iy),#0x00
                            518 ;demo.c:130: volatile int tick=0;
   0247 FD 21r8As41         519 	ld	iy,#_tick
   024B FD 36 00 00         520 	ld	0 (iy),#0x00
   024F FD 21r8As41         521 	ld	iy,#_tick
   0253 FD 36 01 00         522 	ld	1 (iy),#0x00
                            523 ;demo.c:330: uint8_t yofff = 0;
   0257 FD 21rA3s41         524 	ld	iy,#_yofff
   025B FD 36 00 00         525 	ld	0 (iy),#0x00
                            526 ;demo.c:331: uint8_t cc = 0;
   025F FD 21rA4s41         527 	ld	iy,#_cc
   0263 FD 36 00 00         528 	ld	0 (iy),#0x00
                            529 ;demo.c:332: static int flipper = 0;
   0267 FD 21rA5s41         530 	ld	iy,#_flipper
   026B FD 36 00 00         531 	ld	0 (iy),#0x00
   026F FD 21rA5s41         532 	ld	iy,#_flipper
   0273 FD 36 01 00         533 	ld	1 (iy),#0x00
                            534 ;demo.c:333: static int ymmmf = 0;
   0277 FD 21rA7s41         535 	ld	iy,#_ymmmf
   027B FD 36 00 00         536 	ld	0 (iy),#0x00
   027F FD 21rA7s41         537 	ld	iy,#_ymmmf
   0283 FD 36 01 00         538 	ld	1 (iy),#0x00
                            539 ;demo.c:364: char block_init = 0;
   0287 FD 21rA9s41         540 	ld	iy,#_block_init
   028B FD 36 00 00         541 	ld	0 (iy),#0x00
                            542 ;demo.c:366: int bsx = 0;
   028F FD 21rAAs41         543 	ld	iy,#_bsx
   0293 FD 36 00 00         544 	ld	0 (iy),#0x00
   0297 FD 21rAAs41         545 	ld	iy,#_bsx
   029B FD 36 01 00         546 	ld	1 (iy),#0x00
                            547 ;demo.c:367: int bsy = 0;
   029F FD 21rACs41         548 	ld	iy,#_bsy
   02A3 FD 36 00 00         549 	ld	0 (iy),#0x00
   02A7 FD 21rACs41         550 	ld	iy,#_bsy
   02AB FD 36 01 00         551 	ld	1 (iy),#0x00
                            552 ;demo.c:368: int btx = 0;
   02AF FD 21rAEs41         553 	ld	iy,#_btx
   02B3 FD 36 00 00         554 	ld	0 (iy),#0x00
   02B7 FD 21rAEs41         555 	ld	iy,#_btx
   02BB FD 36 01 00         556 	ld	1 (iy),#0x00
                            557 ;demo.c:369: int bty = 0;
   02BF FD 21rB0s41         558 	ld	iy,#_bty
   02C3 FD 36 00 00         559 	ld	0 (iy),#0x00
   02C7 FD 21rB0s41         560 	ld	iy,#_bty
   02CB FD 36 01 00         561 	ld	1 (iy),#0x00
                            562 ;demo.c:371: int btab[16] = {0};
   02CF 21rB2s41            563 	ld	hl,#_btab
   02D2 CDr00s00            564 	call	__initrleblock
   02D5 E0 00               565 	.db	#-32,#0x00
   02D7 00                  566 	.db	0
                            567 ;demo.c:373: int flof = 0;
   02D8 FD 21rD2s41         568 	ld	iy,#_flof
   02DC FD 36 00 00         569 	ld	0 (iy),#0x00
   02E0 FD 21rD2s41         570 	ld	iy,#_flof
   02E4 FD 36 01 00         571 	ld	1 (iy),#0x00
                            572 ;demo.c:422: int linenum = 0;
   02E8 FD 21rD4s41         573 	ld	iy,#_linenum
   02EC FD 36 00 00         574 	ld	0 (iy),#0x00
   02F0 FD 21rD4s41         575 	ld	iy,#_linenum
   02F4 FD 36 01 00         576 	ld	1 (iy),#0x00
                            577 ;demo.c:480: uint8_t lx = 0;
   02F8 FD 21rD6s41         578 	ld	iy,#_lx
   02FC FD 36 00 00         579 	ld	0 (iy),#0x00
                            580 ;demo.c:481: uint8_t ly = 0;
   0300 FD 21rD7s41         581 	ld	iy,#_ly
   0304 FD 36 00 00         582 	ld	0 (iy),#0x00
                            583 ;demo.c:544: int ff = 0;
   0308 FD 21rD8s41         584 	ld	iy,#_ff
   030C FD 36 00 00         585 	ld	0 (iy),#0x00
   0310 FD 21rD8s41         586 	ld	iy,#_ff
   0314 FD 36 01 00         587 	ld	1 (iy),#0x00
                            588 ;demo.c:545: int twinited = 0;
   0318 FD 21rDAs41         589 	ld	iy,#_twinited
   031C FD 36 00 00         590 	ld	0 (iy),#0x00
   0320 FD 21rDAs41         591 	ld	iy,#_twinited
   0324 FD 36 01 00         592 	ld	1 (iy),#0x00
                            593 ;demo.c:594: int bulbflipper = 1;
   0328 FD 21rDCs41         594 	ld	iy,#_bulbflipper
   032C FD 36 00 01         595 	ld	0 (iy),#0x01
   0330 FD 21rDCs41         596 	ld	iy,#_bulbflipper
   0334 FD 36 01 00         597 	ld	1 (iy),#0x00
                            598 ;demo.c:596: int ff1,ff2 = 0;
   0338 FD 21rE0s41         599 	ld	iy,#_ff2
   033C FD 36 00 00         600 	ld	0 (iy),#0x00
   0340 FD 21rE0s41         601 	ld	iy,#_ff2
   0344 FD 36 01 00         602 	ld	1 (iy),#0x00
                            603 ;demo.c:597: int ender = 212;
   0348 FD 21rE2s41         604 	ld	iy,#_ender
   034C FD 36 00 D4         605 	ld	0 (iy),#0xD4
   0350 FD 21rE2s41         606 	ld	iy,#_ender
   0354 FD 36 01 00         607 	ld	1 (iy),#0x00
                            608 ;demo.c:598: int enderdir = -1;
   0358 FD 21rE4s41         609 	ld	iy,#_enderdir
   035C FD 36 00 FF         610 	ld	0 (iy),#0xFF
   0360 FD 21rE4s41         611 	ld	iy,#_enderdir
   0364 FD 36 01 FF         612 	ld	1 (iy),#0xFF
                            613 ;demo.c:599: int sy = 16;
   0368 FD 21rE6s41         614 	ld	iy,#_sy
   036C FD 36 00 10         615 	ld	0 (iy),#0x10
   0370 FD 21rE6s41         616 	ld	iy,#_sy
   0374 FD 36 01 00         617 	ld	1 (iy),#0x00
                            618 ;demo.c:655: static int xo = 0;
   0378 FD 21rE8s41         619 	ld	iy,#_xo
   037C FD 36 00 00         620 	ld	0 (iy),#0x00
   0380 FD 21rE8s41         621 	ld	iy,#_xo
   0384 FD 36 01 00         622 	ld	1 (iy),#0x00
                            623 ;demo.c:656: static int yo = 0;
   0388 FD 21rEAs41         624 	ld	iy,#_yo
   038C FD 36 00 00         625 	ld	0 (iy),#0x00
   0390 FD 21rEAs41         626 	ld	iy,#_yo
   0394 FD 36 01 00         627 	ld	1 (iy),#0x00
                            628 ;demo.c:657: static int po = 0;
   0398 FD 21rECs41         629 	ld	iy,#_po
   039C FD 36 00 00         630 	ld	0 (iy),#0x00
   03A0 FD 21rECs41         631 	ld	iy,#_po
   03A4 FD 36 01 00         632 	ld	1 (iy),#0x00
                            633 ;demo.c:658: static int frames = 0;
   03A8 FD 21rEEs41         634 	ld	iy,#_frames
   03AC FD 36 00 00         635 	ld	0 (iy),#0x00
   03B0 FD 21rEEs41         636 	ld	iy,#_frames
   03B4 FD 36 01 00         637 	ld	1 (iy),#0x00
                            638 ;demo.c:660: int anim_init = 0;
   03B8 FD 21rF0s41         639 	ld	iy,#_anim_init
   03BC FD 36 00 00         640 	ld	0 (iy),#0x00
   03C0 FD 21rF0s41         641 	ld	iy,#_anim_init
   03C4 FD 36 01 00         642 	ld	1 (iy),#0x00
                            643 ;demo.c:756: uint8_t boxes_init = 0;
   03C8 FD 21rF2s41         644 	ld	iy,#_boxes_init
   03CC FD 36 00 00         645 	ld	0 (iy),#0x00
                            646 ;demo.c:757: int buffer = 1;
   03D0 FD 21rF3s41         647 	ld	iy,#_buffer
   03D4 FD 36 00 01         648 	ld	0 (iy),#0x01
   03D8 FD 21rF3s41         649 	ld	iy,#_buffer
   03DC FD 36 01 00         650 	ld	1 (iy),#0x00
                            651 ;demo.c:758: int prevx = -1;
   03E0 FD 21rF5s41         652 	ld	iy,#_prevx
   03E4 FD 36 00 FF         653 	ld	0 (iy),#0xFF
   03E8 FD 21rF5s41         654 	ld	iy,#_prevx
   03EC FD 36 01 FF         655 	ld	1 (iy),#0xFF
                            656 ;demo.c:760: uint8_t boxes_x[5] = {0,36,0,36,0};
   03F0 21rF9s41            657 	ld	hl,#_boxes_x
   03F3 CDr00s00            658 	call	__initrleblock
   03F6 05                  659 	.db	5
   03F7 00 24 00 24 00      660 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   03FC 00                  661 	.db	0
                            662 ;demo.c:761: int boxes_y[5] = {768,768,768+36,768+36,0};
   03FD 21rFEs41            663 	ld	hl,#_boxes_y
   0400 CDr00s00            664 	call	__initrleblock
   0403 0A                  665 	.db	10
   0404 00 03 00 03 24 03   666 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   040C 00 00               667 	.db	0x00, 0x00
   040E 00                  668 	.db	0
                            669 ;demo.c:762: uint8_t boxi = 0;
   040F FD 21r08s42         670 	ld	iy,#_boxi
   0413 FD 36 00 00         671 	ld	0 (iy),#0x00
                            672 ;demo.c:763: int bx = 220;
   0417 FD 21r09s42         673 	ld	iy,#_bx
   041B FD 36 00 DC         674 	ld	0 (iy),#0xDC
   041F FD 21r09s42         675 	ld	iy,#_bx
   0423 FD 36 01 00         676 	ld	1 (iy),#0x00
                            677 ;demo.c:764: int by = 84;
   0427 FD 21r0Bs42         678 	ld	iy,#_by
   042B FD 36 00 54         679 	ld	0 (iy),#0x54
   042F FD 21r0Bs42         680 	ld	iy,#_by
   0433 FD 36 01 00         681 	ld	1 (iy),#0x00
                            682 ;demo.c:782: int bt = 0;
   0437 FD 21r0Ds42         683 	ld	iy,#_bt
   043B FD 36 00 00         684 	ld	0 (iy),#0x00
   043F FD 21r0Ds42         685 	ld	iy,#_bt
   0443 FD 36 01 00         686 	ld	1 (iy),#0x00
                            687 ;demo.c:783: int bo = 0;
   0447 FD 21r0Fs42         688 	ld	iy,#_bo
   044B FD 36 00 00         689 	ld	0 (iy),#0x00
   044F FD 21r0Fs42         690 	ld	iy,#_bo
   0453 FD 36 01 00         691 	ld	1 (iy),#0x00
                            692 ;demo.c:785: int bonc = 0;
   0457 FD 21r11s42         693 	ld	iy,#_bonc
   045B FD 36 00 00         694 	ld	0 (iy),#0x00
   045F FD 21r11s42         695 	ld	iy,#_bonc
   0463 FD 36 01 00         696 	ld	1 (iy),#0x00
                            697 ;demo.c:786: int pbx = 0;
   0467 FD 21r13s42         698 	ld	iy,#_pbx
   046B FD 36 00 00         699 	ld	0 (iy),#0x00
   046F FD 21r13s42         700 	ld	iy,#_pbx
   0473 FD 36 01 00         701 	ld	1 (iy),#0x00
                            702 ;demo.c:787: int pbt = 0;
   0477 FD 21r15s42         703 	ld	iy,#_pbt
   047B FD 36 00 00         704 	ld	0 (iy),#0x00
   047F FD 21r15s42         705 	ld	iy,#_pbt
   0483 FD 36 01 00         706 	ld	1 (iy),#0x00
                            707 ;demo.c:789: int boxes_of[5] = {0,0,6,0,0};
   0487 21r17s42            708 	ld	hl,#_boxes_of
   048A CDr00s00            709 	call	__initrleblock
   048D 05                  710 	.db	5
   048E 00 00 00 00 06      711 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0493 FB 00               712 	.db	#-5,#0x00
   0495 00                  713 	.db	0
                            714 ;demo.c:790: uint8_t prevbox_of = 0;
   0496 FD 21r21s42         715 	ld	iy,#_prevbox_of
   049A FD 36 00 00         716 	ld	0 (iy),#0x00
                            717 ;demo.c:905: uint8_t initwave = 0;
   049E FD 21r22s42         718 	ld	iy,#_initwave
   04A2 FD 36 00 00         719 	ld	0 (iy),#0x00
                            720 ;demo.c:906: int buf = -1;
   04A6 FD 21r23s42         721 	ld	iy,#_buf
   04AA FD 36 00 FF         722 	ld	0 (iy),#0xFF
   04AE FD 21r23s42         723 	ld	iy,#_buf
   04B2 FD 36 01 FF         724 	ld	1 (iy),#0xFF
                            725 ;demo.c:907: int ffa = 0;
   04B6 FD 21r25s42         726 	ld	iy,#_ffa
   04BA FD 36 00 00         727 	ld	0 (iy),#0x00
   04BE FD 21r25s42         728 	ld	iy,#_ffa
   04C2 FD 36 01 00         729 	ld	1 (iy),#0x00
                            730 ;demo.c:1027: uint8_t tri_inited = 0;
   04C6 FD 21r27s42         731 	ld	iy,#_tri_inited
   04CA FD 36 00 00         732 	ld	0 (iy),#0x00
                            733 ;demo.c:1042: int tilei = 0;
   04CE FD 21r28s42         734 	ld	iy,#_tilei
   04D2 FD 36 00 00         735 	ld	0 (iy),#0x00
   04D6 FD 21r28s42         736 	ld	iy,#_tilei
   04DA FD 36 01 00         737 	ld	1 (iy),#0x00
                            738 ;demo.c:1043: int tilex = 0;
   04DE FD 21r2As42         739 	ld	iy,#_tilex
   04E2 FD 36 00 00         740 	ld	0 (iy),#0x00
   04E6 FD 21r2As42         741 	ld	iy,#_tilex
   04EA FD 36 01 00         742 	ld	1 (iy),#0x00
                            743 ;demo.c:1044: int tiley = 0;
   04EE FD 21r2Cs42         744 	ld	iy,#_tiley
   04F2 FD 36 00 00         745 	ld	0 (iy),#0x00
   04F6 FD 21r2Cs42         746 	ld	iy,#_tiley
   04FA FD 36 01 00         747 	ld	1 (iy),#0x00
                            748 ;demo.c:1045: uint8_t tiletick = 0;
   04FE FD 21r2Es42         749 	ld	iy,#_tiletick
   0502 FD 36 00 00         750 	ld	0 (iy),#0x00
                            751 ;demo.c:1075: char tripal[9] = {
   0506 21r2Fs42            752 	ld	hl,#_tripal
   0509 CDr00s00            753 	call	__initrleblock
   050C 09                  754 	.db	9
   050D 02 02 01 01 02 03   755 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0515 02                  756 	.db	0x02
   0516 00                  757 	.db	0
                            758 ;demo.c:1081: uint8_t tripaltick = 0;
   0517 FD 21r38s42         759 	ld	iy,#_tripaltick
   051B FD 36 00 00         760 	ld	0 (iy),#0x00
                            761 ;demo.c:1082: uint8_t tripaltick2 = 0;
   051F FD 21r39s42         762 	ld	iy,#_tripaltick2
   0523 FD 36 00 00         763 	ld	0 (iy),#0x00
                            764 ;demo.c:1084: int triframes = 0;
   0527 FD 21r3As42         765 	ld	iy,#_triframes
   052B FD 36 00 00         766 	ld	0 (iy),#0x00
   052F FD 21r3As42         767 	ld	iy,#_triframes
   0533 FD 36 01 00         768 	ld	1 (iy),#0x00
                            769 ;demo.c:1191: int powatick = 0;
   0537 FD 21r3Cs42         770 	ld	iy,#_powatick
   053B FD 36 00 00         771 	ld	0 (iy),#0x00
   053F FD 21r3Cs42         772 	ld	iy,#_powatick
   0543 FD 36 01 00         773 	ld	1 (iy),#0x00
                            774 ;demo.c:1192: int powa = 0;
   0547 FD 21r3Es42         775 	ld	iy,#_powa
   054B FD 36 00 00         776 	ld	0 (iy),#0x00
   054F FD 21r3Es42         777 	ld	iy,#_powa
   0553 FD 36 01 00         778 	ld	1 (iy),#0x00
                            779 ;demo.c:1193: uint8_t onceclear = 255;
   0557 FD 21r40s42         780 	ld	iy,#_onceclear
   055B FD 36 00 FF         781 	ld	0 (iy),#0xFF
                            782 ;demo.c:1238: uint8_t initpoints = 0;
   055F FD 21r41s42         783 	ld	iy,#_initpoints
   0563 FD 36 00 00         784 	ld	0 (iy),#0x00
                            785 ;demo.c:1239: int pointframe = 0;
   0567 FD 21r42s42         786 	ld	iy,#_pointframe
   056B FD 36 00 00         787 	ld	0 (iy),#0x00
   056F FD 21r42s42         788 	ld	iy,#_pointframe
   0573 FD 36 01 00         789 	ld	1 (iy),#0x00
                            790 ;demo.c:1315: int sceneindex = 0;
   0577 FD 21r44s42         791 	ld	iy,#_sceneindex
   057B FD 36 00 00         792 	ld	0 (iy),#0x00
   057F FD 21r44s42         793 	ld	iy,#_sceneindex
   0583 FD 36 01 00         794 	ld	1 (iy),#0x00
                            795 ;demo.c:1316: int timeindex = 0;
   0587 FD 21r46s42         796 	ld	iy,#_timeindex
   058B FD 36 00 00         797 	ld	0 (iy),#0x00
   058F FD 21r46s42         798 	ld	iy,#_timeindex
   0593 FD 36 01 00         799 	ld	1 (iy),#0x00
                            800 ;demo.c:1318: void (*scenepointers[8])() = {
   0597 21r48s42            801 	ld	hl,#_scenepointers
   059A 36r87               802 	ld	(hl),#<_logoeffu
   059C 23                  803 	inc	hl
   059D 36s28               804 	ld	(hl),#>_logoeffu
   059F 01r4As42            805 	ld	bc,#_scenepointers + 2
   05A2 69                  806 	ld	l,c
   05A3 60                  807 	ld	h,b
   05A4 36r7C               808 	ld	(hl),#<_bulbs
   05A6 23                  809 	inc	hl
   05A7 36s12               810 	ld	(hl),#>_bulbs
   05A9 21r4Cs42            811 	ld	hl, #_scenepointers + 4
   05AC 36r10               812 	ld	(hl),#<_twister
   05AE 23                  813 	inc	hl
   05AF 36s11               814 	ld	(hl),#>_twister
   05B1 01r4Es42            815 	ld	bc,#_scenepointers + 6
   05B4 69                  816 	ld	l,c
   05B5 60                  817 	ld	h,b
   05B6 36r29               818 	ld	(hl),#<_boxes
   05B8 23                  819 	inc	hl
   05B9 36s18               820 	ld	(hl),#>_boxes
   05BB 21r50s42            821 	ld	hl, #_scenepointers + 8
   05BE 36r81               822 	ld	(hl),#<_thewave
   05C0 23                  823 	inc	hl
   05C1 36s1C               824 	ld	(hl),#>_thewave
   05C3 21r52s42            825 	ld	hl, #_scenepointers + 10
   05C6 36r99               826 	ld	(hl),#<_tritiles
   05C8 23                  827 	inc	hl
   05C9 36s24               828 	ld	(hl),#>_tritiles
   05CB 21r54s42            829 	ld	hl, #_scenepointers + 12
   05CE 36r2D               830 	ld	(hl),#<_points
   05D0 23                  831 	inc	hl
   05D1 36s2A               832 	ld	(hl),#>_points
   05D3 01r56s42            833 	ld	bc,#_scenepointers + 14
   05D6 69                  834 	ld	l,c
   05D7 60                  835 	ld	h,b
   05D8 36rDA               836 	ld	(hl),#<_animplay
   05DA 23                  837 	inc	hl
   05DB 36s14               838 	ld	(hl),#>_animplay
                            839 ;demo.c:1329: int scenetimings[16] = {
   05DD 21r58s42            840 	ld	hl,#_scenetimings
   05E0 CDr00s00            841 	call	__initrleblock
   05E3 20                  842 	.db	32
   05E4 00 00 FA 00 FA 00   843 	.db	0x00, 0x00, 0xFA, 0x00, 0xFA, 0x00, 0x4C, 0x04
        4C 04
   05EC 4C 04 98 08 98 08   844 	.db	0x4C, 0x04, 0x98, 0x08, 0x98, 0x08, 0x74, 0x0E
        74 0E
   05F4 74 0E 88 13 88 13   845 	.db	0x74, 0x0E, 0x88, 0x13, 0x88, 0x13, 0x58, 0x1B
        58 1B
   05FC 58 1B 40 1F 40 1F   846 	.db	0x58, 0x1B, 0x40, 0x1F, 0x40, 0x1F, 0x98, 0x3A
        98 3A
   0604 00                  847 	.db	0
                            848 ;--------------------------------------------------------
                            849 ; Home
                            850 ;--------------------------------------------------------
                            851 	.area _HOME
                            852 	.area _HOME
                            853 ;--------------------------------------------------------
                            854 ; code
                            855 ;--------------------------------------------------------
                            856 	.area _CODE
                            857 ;demo.c:134: int isNthBitSet (unsigned char c, int n) {
                            858 ;	---------------------------------
                            859 ; Function isNthBitSet
                            860 ; ---------------------------------
   0000                     861 _isNthBitSet_start::
   0000                     862 _isNthBitSet:
   0000 DD E5               863 	push	ix
   0002 DD 21 00 00         864 	ld	ix,#0
   0006 DD 39               865 	add	ix,sp
                            866 ;demo.c:136: return ((c & mask[n]) != 0);
   0008 3Er9B               867 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            868 	add	a,5 (ix)
   000D 4F                  869 	ld	c,a
   000E 3Es41               870 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            871 	adc	a,6 (ix)
   0013 47                  872 	ld	b,a
   0014 0A                  873 	ld	a,(bc)
   0015 DD A6 04            874 	and	a,4 (ix)
   0018 20 04               875 	jr	NZ,00103$
   001A 3E 01               876 	ld	a,#0x01
   001C 18 01               877 	jr	00104$
   001E                     878 00103$:
   001E AF                  879 	xor	a,a
   001F                     880 00104$:
   001F B7                  881 	or	a,a
   0020 D6 01               882 	sub	a,#0x01
   0022 3E 00               883 	ld	a,#0x00
   0024 17                  884 	rla
   0025 4F                  885 	ld	c,a
   0026 69                  886 	ld	l,c
   0027 26 00               887 	ld	h,#0x00
   0029 DD E1               888 	pop	ix
   002B C9                  889 	ret
   002C                     890 _isNthBitSet_end::
   002C                     891 _sintabx:
   002C 78                  892 	.db #0x78
   002D 7A                  893 	.db #0x7A
   002E 7D                  894 	.db #0x7D
   002F 80                  895 	.db #0x80
   0030 83                  896 	.db #0x83
   0031 86                  897 	.db #0x86
   0032 89                  898 	.db #0x89
   0033 8C                  899 	.db #0x8C
   0034 8F                  900 	.db #0x8F
   0035 92                  901 	.db #0x92
   0036 95                  902 	.db #0x95
   0037 98                  903 	.db #0x98
   0038 9A                  904 	.db #0x9A
   0039 9D                  905 	.db #0x9D
   003A A0                  906 	.db #0xA0
   003B A3                  907 	.db #0xA3
   003C A5                  908 	.db #0xA5
   003D A8                  909 	.db #0xA8
   003E AB                  910 	.db #0xAB
   003F AD                  911 	.db #0xAD
   0040 B0                  912 	.db #0xB0
   0041 B3                  913 	.db #0xB3
   0042 B5                  914 	.db #0xB5
   0043 B8                  915 	.db #0xB8
   0044 BA                  916 	.db #0xBA
   0045 BD                  917 	.db #0xBD
   0046 BF                  918 	.db #0xBF
   0047 C1                  919 	.db #0xC1
   0048 C4                  920 	.db #0xC4
   0049 C6                  921 	.db #0xC6
   004A C8                  922 	.db #0xC8
   004B CA                  923 	.db #0xCA
   004C CC                  924 	.db #0xCC
   004D CE                  925 	.db #0xCE
   004E D0                  926 	.db #0xD0
   004F D2                  927 	.db #0xD2
   0050 D4                  928 	.db #0xD4
   0051 D6                  929 	.db #0xD6
   0052 D8                  930 	.db #0xD8
   0053 DA                  931 	.db #0xDA
   0054 DB                  932 	.db #0xDB
   0055 DD                  933 	.db #0xDD
   0056 DE                  934 	.db #0xDE
   0057 E0                  935 	.db #0xE0
   0058 E1                  936 	.db #0xE1
   0059 E3                  937 	.db #0xE3
   005A E4                  938 	.db #0xE4
   005B E5                  939 	.db #0xE5
   005C E6                  940 	.db #0xE6
   005D E7                  941 	.db #0xE7
   005E E8                  942 	.db #0xE8
   005F E9                  943 	.db #0xE9
   0060 EA                  944 	.db #0xEA
   0061 EB                  945 	.db #0xEB
   0062 EC                  946 	.db #0xEC
   0063 ED                  947 	.db #0xED
   0064 ED                  948 	.db #0xED
   0065 EE                  949 	.db #0xEE
   0066 EE                  950 	.db #0xEE
   0067 EF                  951 	.db #0xEF
   0068 EF                  952 	.db #0xEF
   0069 EF                  953 	.db #0xEF
   006A EF                  954 	.db #0xEF
   006B EF                  955 	.db #0xEF
   006C F0                  956 	.db #0xF0
   006D EF                  957 	.db #0xEF
   006E EF                  958 	.db #0xEF
   006F EF                  959 	.db #0xEF
   0070 EF                  960 	.db #0xEF
   0071 EF                  961 	.db #0xEF
   0072 EE                  962 	.db #0xEE
   0073 EE                  963 	.db #0xEE
   0074 ED                  964 	.db #0xED
   0075 ED                  965 	.db #0xED
   0076 EC                  966 	.db #0xEC
   0077 EB                  967 	.db #0xEB
   0078 EA                  968 	.db #0xEA
   0079 E9                  969 	.db #0xE9
   007A E8                  970 	.db #0xE8
   007B E7                  971 	.db #0xE7
   007C E6                  972 	.db #0xE6
   007D E5                  973 	.db #0xE5
   007E E4                  974 	.db #0xE4
   007F E3                  975 	.db #0xE3
   0080 E1                  976 	.db #0xE1
   0081 E0                  977 	.db #0xE0
   0082 DE                  978 	.db #0xDE
   0083 DD                  979 	.db #0xDD
   0084 DB                  980 	.db #0xDB
   0085 DA                  981 	.db #0xDA
   0086 D8                  982 	.db #0xD8
   0087 D6                  983 	.db #0xD6
   0088 D4                  984 	.db #0xD4
   0089 D2                  985 	.db #0xD2
   008A D0                  986 	.db #0xD0
   008B CE                  987 	.db #0xCE
   008C CC                  988 	.db #0xCC
   008D CA                  989 	.db #0xCA
   008E C8                  990 	.db #0xC8
   008F C6                  991 	.db #0xC6
   0090 C4                  992 	.db #0xC4
   0091 C1                  993 	.db #0xC1
   0092 BF                  994 	.db #0xBF
   0093 BD                  995 	.db #0xBD
   0094 BA                  996 	.db #0xBA
   0095 B8                  997 	.db #0xB8
   0096 B5                  998 	.db #0xB5
   0097 B3                  999 	.db #0xB3
   0098 B0                 1000 	.db #0xB0
   0099 AD                 1001 	.db #0xAD
   009A AB                 1002 	.db #0xAB
   009B A8                 1003 	.db #0xA8
   009C A5                 1004 	.db #0xA5
   009D A3                 1005 	.db #0xA3
   009E A0                 1006 	.db #0xA0
   009F 9D                 1007 	.db #0x9D
   00A0 9A                 1008 	.db #0x9A
   00A1 98                 1009 	.db #0x98
   00A2 95                 1010 	.db #0x95
   00A3 92                 1011 	.db #0x92
   00A4 8F                 1012 	.db #0x8F
   00A5 8C                 1013 	.db #0x8C
   00A6 89                 1014 	.db #0x89
   00A7 86                 1015 	.db #0x86
   00A8 83                 1016 	.db #0x83
   00A9 80                 1017 	.db #0x80
   00AA 7D                 1018 	.db #0x7D
   00AB 7A                 1019 	.db #0x7A
   00AC 78                 1020 	.db #0x78
   00AD 75                 1021 	.db #0x75
   00AE 72                 1022 	.db #0x72
   00AF 6F                 1023 	.db #0x6F
   00B0 6C                 1024 	.db #0x6C
   00B1 69                 1025 	.db #0x69
   00B2 66                 1026 	.db #0x66
   00B3 63                 1027 	.db #0x63
   00B4 60                 1028 	.db #0x60
   00B5 5D                 1029 	.db #0x5D
   00B6 5A                 1030 	.db #0x5A
   00B7 57                 1031 	.db #0x57
   00B8 55                 1032 	.db #0x55
   00B9 52                 1033 	.db #0x52
   00BA 4F                 1034 	.db #0x4F
   00BB 4C                 1035 	.db #0x4C
   00BC 4A                 1036 	.db #0x4A
   00BD 47                 1037 	.db #0x47
   00BE 44                 1038 	.db #0x44
   00BF 42                 1039 	.db #0x42
   00C0 3F                 1040 	.db #0x3F
   00C1 3C                 1041 	.db #0x3C
   00C2 3A                 1042 	.db #0x3A
   00C3 37                 1043 	.db #0x37
   00C4 35                 1044 	.db #0x35
   00C5 32                 1045 	.db #0x32
   00C6 30                 1046 	.db #0x30
   00C7 2E                 1047 	.db #0x2E
   00C8 2B                 1048 	.db #0x2B
   00C9 29                 1049 	.db #0x29
   00CA 27                 1050 	.db #0x27
   00CB 25                 1051 	.db #0x25
   00CC 23                 1052 	.db #0x23
   00CD 21                 1053 	.db #0x21
   00CE 1F                 1054 	.db #0x1F
   00CF 1D                 1055 	.db #0x1D
   00D0 1B                 1056 	.db #0x1B
   00D1 19                 1057 	.db #0x19
   00D2 17                 1058 	.db #0x17
   00D3 15                 1059 	.db #0x15
   00D4 14                 1060 	.db #0x14
   00D5 12                 1061 	.db #0x12
   00D6 11                 1062 	.db #0x11
   00D7 0F                 1063 	.db #0x0F
   00D8 0E                 1064 	.db #0x0E
   00D9 0C                 1065 	.db #0x0C
   00DA 0B                 1066 	.db #0x0B
   00DB 0A                 1067 	.db #0x0A
   00DC 09                 1068 	.db #0x09
   00DD 08                 1069 	.db #0x08
   00DE 07                 1070 	.db #0x07
   00DF 06                 1071 	.db #0x06
   00E0 05                 1072 	.db #0x05
   00E1 04                 1073 	.db #0x04
   00E2 03                 1074 	.db #0x03
   00E3 02                 1075 	.db #0x02
   00E4 02                 1076 	.db #0x02
   00E5 01                 1077 	.db #0x01
   00E6 01                 1078 	.db #0x01
   00E7 00                 1079 	.db #0x00
   00E8 00                 1080 	.db #0x00
   00E9 00                 1081 	.db #0x00
   00EA 00                 1082 	.db #0x00
   00EB 00                 1083 	.db #0x00
   00EC 00                 1084 	.db #0x00
   00ED 00                 1085 	.db #0x00
   00EE 00                 1086 	.db #0x00
   00EF 00                 1087 	.db #0x00
   00F0 00                 1088 	.db #0x00
   00F1 00                 1089 	.db #0x00
   00F2 01                 1090 	.db #0x01
   00F3 01                 1091 	.db #0x01
   00F4 02                 1092 	.db #0x02
   00F5 02                 1093 	.db #0x02
   00F6 03                 1094 	.db #0x03
   00F7 04                 1095 	.db #0x04
   00F8 05                 1096 	.db #0x05
   00F9 06                 1097 	.db #0x06
   00FA 07                 1098 	.db #0x07
   00FB 08                 1099 	.db #0x08
   00FC 09                 1100 	.db #0x09
   00FD 0A                 1101 	.db #0x0A
   00FE 0B                 1102 	.db #0x0B
   00FF 0C                 1103 	.db #0x0C
   0100 0E                 1104 	.db #0x0E
   0101 0F                 1105 	.db #0x0F
   0102 11                 1106 	.db #0x11
   0103 12                 1107 	.db #0x12
   0104 14                 1108 	.db #0x14
   0105 15                 1109 	.db #0x15
   0106 17                 1110 	.db #0x17
   0107 19                 1111 	.db #0x19
   0108 1B                 1112 	.db #0x1B
   0109 1D                 1113 	.db #0x1D
   010A 1F                 1114 	.db #0x1F
   010B 21                 1115 	.db #0x21
   010C 23                 1116 	.db #0x23
   010D 25                 1117 	.db #0x25
   010E 27                 1118 	.db #0x27
   010F 29                 1119 	.db #0x29
   0110 2B                 1120 	.db #0x2B
   0111 2E                 1121 	.db #0x2E
   0112 30                 1122 	.db #0x30
   0113 32                 1123 	.db #0x32
   0114 35                 1124 	.db #0x35
   0115 37                 1125 	.db #0x37
   0116 3A                 1126 	.db #0x3A
   0117 3C                 1127 	.db #0x3C
   0118 3F                 1128 	.db #0x3F
   0119 42                 1129 	.db #0x42
   011A 44                 1130 	.db #0x44
   011B 47                 1131 	.db #0x47
   011C 4A                 1132 	.db #0x4A
   011D 4C                 1133 	.db #0x4C
   011E 4F                 1134 	.db #0x4F
   011F 52                 1135 	.db #0x52
   0120 55                 1136 	.db #0x55
   0121 57                 1137 	.db #0x57
   0122 5A                 1138 	.db #0x5A
   0123 5D                 1139 	.db #0x5D
   0124 60                 1140 	.db #0x60
   0125 63                 1141 	.db #0x63
   0126 66                 1142 	.db #0x66
   0127 69                 1143 	.db #0x69
   0128 6C                 1144 	.db #0x6C
   0129 6F                 1145 	.db #0x6F
   012A 72                 1146 	.db #0x72
   012B 75                 1147 	.db #0x75
   012C                    1148 _tri_center:
   012C 08                 1149 	.db #0x08
   012D 0A                 1150 	.db #0x0A
   012E 12                 1151 	.db #0x12
   012F 10                 1152 	.db #0x10
   0130 00                 1153 	.db #0x00
   0131 02                 1154 	.db #0x02
   0132 08                 1155 	.db #0x08
   0133 0A                 1156 	.db #0x0A
   0134 0B                 1157 	.db #0x0B
   0135 09                 1158 	.db #0x09
   0136 03                 1159 	.db #0x03
   0137 01                 1160 	.db #0x01
   0138 11                 1161 	.db #0x11
   0139 13                 1162 	.db #0x13
   013A 0B                 1163 	.db #0x0B
   013B 09                 1164 	.db #0x09
   013C 0A                 1165 	.db #0x0A
   013D 12                 1166 	.db #0x12
   013E 10                 1167 	.db #0x10
   013F 00                 1168 	.db #0x00
   0140 02                 1169 	.db #0x02
   0141 08                 1170 	.db #0x08
   0142 0A                 1171 	.db #0x0A
   0143 12                 1172 	.db #0x12
   0144 13                 1173 	.db #0x13
   0145 0B                 1174 	.db #0x0B
   0146 09                 1175 	.db #0x09
   0147 03                 1176 	.db #0x03
   0148 01                 1177 	.db #0x01
   0149 11                 1178 	.db #0x11
   014A 13                 1179 	.db #0x13
   014B 0B                 1180 	.db #0x0B
   014C 12                 1181 	.db #0x12
   014D 10                 1182 	.db #0x10
   014E 00                 1183 	.db #0x00
   014F 02                 1184 	.db #0x02
   0150 08                 1185 	.db #0x08
   0151 0A                 1186 	.db #0x0A
   0152 12                 1187 	.db #0x12
   0153 10                 1188 	.db #0x10
   0154 11                 1189 	.db #0x11
   0155 13                 1190 	.db #0x13
   0156 0B                 1191 	.db #0x0B
   0157 09                 1192 	.db #0x09
   0158 03                 1193 	.db #0x03
   0159 01                 1194 	.db #0x01
   015A 11                 1195 	.db #0x11
   015B 13                 1196 	.db #0x13
   015C 10                 1197 	.db #0x10
   015D 00                 1198 	.db #0x00
   015E 02                 1199 	.db #0x02
   015F 08                 1200 	.db #0x08
   0160 0A                 1201 	.db #0x0A
   0161 12                 1202 	.db #0x12
   0162 10                 1203 	.db #0x10
   0163 00                 1204 	.db #0x00
   0164 01                 1205 	.db #0x01
   0165 11                 1206 	.db #0x11
   0166 13                 1207 	.db #0x13
   0167 0B                 1208 	.db #0x0B
   0168 09                 1209 	.db #0x09
   0169 03                 1210 	.db #0x03
   016A 01                 1211 	.db #0x01
   016B 11                 1212 	.db #0x11
   016C 00                 1213 	.db #0x00
   016D 02                 1214 	.db #0x02
   016E 08                 1215 	.db #0x08
   016F 0A                 1216 	.db #0x0A
   0170 12                 1217 	.db #0x12
   0171 10                 1218 	.db #0x10
   0172 00                 1219 	.db #0x00
   0173 02                 1220 	.db #0x02
   0174 03                 1221 	.db #0x03
   0175 01                 1222 	.db #0x01
   0176 11                 1223 	.db #0x11
   0177 13                 1224 	.db #0x13
   0178 0B                 1225 	.db #0x0B
   0179 09                 1226 	.db #0x09
   017A 03                 1227 	.db #0x03
   017B 01                 1228 	.db #0x01
   017C 02                 1229 	.db #0x02
   017D 08                 1230 	.db #0x08
   017E 0A                 1231 	.db #0x0A
   017F 12                 1232 	.db #0x12
   0180 10                 1233 	.db #0x10
   0181 00                 1234 	.db #0x00
   0182 02                 1235 	.db #0x02
   0183 08                 1236 	.db #0x08
   0184 09                 1237 	.db #0x09
   0185 03                 1238 	.db #0x03
   0186 01                 1239 	.db #0x01
   0187 11                 1240 	.db #0x11
   0188 13                 1241 	.db #0x13
   0189 0B                 1242 	.db #0x0B
   018A 09                 1243 	.db #0x09
   018B 03                 1244 	.db #0x03
   018C 01                 1245 	.db #0x01
   018D 0B                 1246 	.db #0x0B
   018E 09                 1247 	.db #0x09
   018F 11                 1248 	.db #0x11
   0190 13                 1249 	.db #0x13
   0191 03                 1250 	.db #0x03
   0192 01                 1251 	.db #0x01
   0193 0B                 1252 	.db #0x0B
   0194 0A                 1253 	.db #0x0A
   0195 00                 1254 	.db #0x00
   0196 02                 1255 	.db #0x02
   0197 12                 1256 	.db #0x12
   0198 10                 1257 	.db #0x10
   0199 08                 1258 	.db #0x08
   019A 0A                 1259 	.db #0x0A
   019B 00                 1260 	.db #0x00
   019C 03                 1261 	.db #0x03
   019D 01                 1262 	.db #0x01
   019E 0B                 1263 	.db #0x0B
   019F 09                 1264 	.db #0x09
   01A0 11                 1265 	.db #0x11
   01A1 13                 1266 	.db #0x13
   01A2 03                 1267 	.db #0x03
   01A3 01                 1268 	.db #0x01
   01A4 00                 1269 	.db #0x00
   01A5 02                 1270 	.db #0x02
   01A6 12                 1271 	.db #0x12
   01A7 10                 1272 	.db #0x10
   01A8 08                 1273 	.db #0x08
   01A9 0A                 1274 	.db #0x0A
   01AA 00                 1275 	.db #0x00
   01AB 02                 1276 	.db #0x02
   01AC 13                 1277 	.db #0x13
   01AD 03                 1278 	.db #0x03
   01AE 01                 1279 	.db #0x01
   01AF 0B                 1280 	.db #0x0B
   01B0 09                 1281 	.db #0x09
   01B1 11                 1282 	.db #0x11
   01B2 13                 1283 	.db #0x13
   01B3 03                 1284 	.db #0x03
   01B4 02                 1285 	.db #0x02
   01B5 12                 1286 	.db #0x12
   01B6 10                 1287 	.db #0x10
   01B7 08                 1288 	.db #0x08
   01B8 0A                 1289 	.db #0x0A
   01B9 00                 1290 	.db #0x00
   01BA 02                 1291 	.db #0x02
   01BB 12                 1292 	.db #0x12
   01BC 11                 1293 	.db #0x11
   01BD 13                 1294 	.db #0x13
   01BE 03                 1295 	.db #0x03
   01BF 01                 1296 	.db #0x01
   01C0 0B                 1297 	.db #0x0B
   01C1 09                 1298 	.db #0x09
   01C2 11                 1299 	.db #0x11
   01C3 13                 1300 	.db #0x13
   01C4 12                 1301 	.db #0x12
   01C5 10                 1302 	.db #0x10
   01C6 08                 1303 	.db #0x08
   01C7 0A                 1304 	.db #0x0A
   01C8 00                 1305 	.db #0x00
   01C9 02                 1306 	.db #0x02
   01CA 12                 1307 	.db #0x12
   01CB 10                 1308 	.db #0x10
   01CC 09                 1309 	.db #0x09
   01CD 11                 1310 	.db #0x11
   01CE 13                 1311 	.db #0x13
   01CF 03                 1312 	.db #0x03
   01D0 01                 1313 	.db #0x01
   01D1 0B                 1314 	.db #0x0B
   01D2 09                 1315 	.db #0x09
   01D3 11                 1316 	.db #0x11
   01D4 10                 1317 	.db #0x10
   01D5 08                 1318 	.db #0x08
   01D6 0A                 1319 	.db #0x0A
   01D7 00                 1320 	.db #0x00
   01D8 02                 1321 	.db #0x02
   01D9 12                 1322 	.db #0x12
   01DA 10                 1323 	.db #0x10
   01DB 08                 1324 	.db #0x08
   01DC 0B                 1325 	.db #0x0B
   01DD 09                 1326 	.db #0x09
   01DE 11                 1327 	.db #0x11
   01DF 13                 1328 	.db #0x13
   01E0 03                 1329 	.db #0x03
   01E1 01                 1330 	.db #0x01
   01E2 0B                 1331 	.db #0x0B
   01E3 09                 1332 	.db #0x09
   01E4 08                 1333 	.db #0x08
   01E5 0A                 1334 	.db #0x0A
   01E6 00                 1335 	.db #0x00
   01E7 02                 1336 	.db #0x02
   01E8 12                 1337 	.db #0x12
   01E9 10                 1338 	.db #0x10
   01EA 08                 1339 	.db #0x08
   01EB 0A                 1340 	.db #0x0A
   01EC                    1341 _tri_up:
   01EC 0A                 1342 	.db #0x0A
   01ED 12                 1343 	.db #0x12
   01EE 10                 1344 	.db #0x10
   01EF 00                 1345 	.db #0x00
   01F0 02                 1346 	.db #0x02
   01F1 08                 1347 	.db #0x08
   01F2 0A                 1348 	.db #0x0A
   01F3 12                 1349 	.db #0x12
   01F4 13                 1350 	.db #0x13
   01F5 0B                 1351 	.db #0x0B
   01F6 09                 1352 	.db #0x09
   01F7 03                 1353 	.db #0x03
   01F8 01                 1354 	.db #0x01
   01F9 11                 1355 	.db #0x11
   01FA 13                 1356 	.db #0x13
   01FB 0B                 1357 	.db #0x0B
   01FC 12                 1358 	.db #0x12
   01FD 10                 1359 	.db #0x10
   01FE 00                 1360 	.db #0x00
   01FF 02                 1361 	.db #0x02
   0200 08                 1362 	.db #0x08
   0201 0A                 1363 	.db #0x0A
   0202 12                 1364 	.db #0x12
   0203 10                 1365 	.db #0x10
   0204 11                 1366 	.db #0x11
   0205 13                 1367 	.db #0x13
   0206 0B                 1368 	.db #0x0B
   0207 09                 1369 	.db #0x09
   0208 03                 1370 	.db #0x03
   0209 01                 1371 	.db #0x01
   020A 11                 1372 	.db #0x11
   020B 13                 1373 	.db #0x13
   020C 10                 1374 	.db #0x10
   020D 00                 1375 	.db #0x00
   020E 02                 1376 	.db #0x02
   020F 08                 1377 	.db #0x08
   0210 0A                 1378 	.db #0x0A
   0211 12                 1379 	.db #0x12
   0212 10                 1380 	.db #0x10
   0213 00                 1381 	.db #0x00
   0214 01                 1382 	.db #0x01
   0215 11                 1383 	.db #0x11
   0216 13                 1384 	.db #0x13
   0217 0B                 1385 	.db #0x0B
   0218 09                 1386 	.db #0x09
   0219 03                 1387 	.db #0x03
   021A 01                 1388 	.db #0x01
   021B 11                 1389 	.db #0x11
   021C 00                 1390 	.db #0x00
   021D 02                 1391 	.db #0x02
   021E 08                 1392 	.db #0x08
   021F 0A                 1393 	.db #0x0A
   0220 12                 1394 	.db #0x12
   0221 10                 1395 	.db #0x10
   0222 00                 1396 	.db #0x00
   0223 02                 1397 	.db #0x02
   0224 03                 1398 	.db #0x03
   0225 01                 1399 	.db #0x01
   0226 11                 1400 	.db #0x11
   0227 13                 1401 	.db #0x13
   0228 0B                 1402 	.db #0x0B
   0229 09                 1403 	.db #0x09
   022A 03                 1404 	.db #0x03
   022B 01                 1405 	.db #0x01
   022C 02                 1406 	.db #0x02
   022D 08                 1407 	.db #0x08
   022E 0A                 1408 	.db #0x0A
   022F 12                 1409 	.db #0x12
   0230 10                 1410 	.db #0x10
   0231 00                 1411 	.db #0x00
   0232 02                 1412 	.db #0x02
   0233 08                 1413 	.db #0x08
   0234 09                 1414 	.db #0x09
   0235 03                 1415 	.db #0x03
   0236 01                 1416 	.db #0x01
   0237 11                 1417 	.db #0x11
   0238 13                 1418 	.db #0x13
   0239 0B                 1419 	.db #0x0B
   023A 09                 1420 	.db #0x09
   023B 03                 1421 	.db #0x03
   023C 08                 1422 	.db #0x08
   023D 0A                 1423 	.db #0x0A
   023E 12                 1424 	.db #0x12
   023F 10                 1425 	.db #0x10
   0240 00                 1426 	.db #0x00
   0241 02                 1427 	.db #0x02
   0242 08                 1428 	.db #0x08
   0243 0A                 1429 	.db #0x0A
   0244 0B                 1430 	.db #0x0B
   0245 09                 1431 	.db #0x09
   0246 03                 1432 	.db #0x03
   0247 01                 1433 	.db #0x01
   0248 11                 1434 	.db #0x11
   0249 13                 1435 	.db #0x13
   024A 0B                 1436 	.db #0x0B
   024B 09                 1437 	.db #0x09
   024C 0A                 1438 	.db #0x0A
   024D 12                 1439 	.db #0x12
   024E 10                 1440 	.db #0x10
   024F 00                 1441 	.db #0x00
   0250 02                 1442 	.db #0x02
   0251 08                 1443 	.db #0x08
   0252 0A                 1444 	.db #0x0A
   0253 12                 1445 	.db #0x12
   0254 13                 1446 	.db #0x13
   0255 0B                 1447 	.db #0x0B
   0256 09                 1448 	.db #0x09
   0257 03                 1449 	.db #0x03
   0258 01                 1450 	.db #0x01
   0259 11                 1451 	.db #0x11
   025A 13                 1452 	.db #0x13
   025B 0B                 1453 	.db #0x0B
   025C 12                 1454 	.db #0x12
   025D 10                 1455 	.db #0x10
   025E 00                 1456 	.db #0x00
   025F 02                 1457 	.db #0x02
   0260 08                 1458 	.db #0x08
   0261 0A                 1459 	.db #0x0A
   0262 12                 1460 	.db #0x12
   0263 10                 1461 	.db #0x10
   0264 11                 1462 	.db #0x11
   0265 13                 1463 	.db #0x13
   0266 0B                 1464 	.db #0x0B
   0267 09                 1465 	.db #0x09
   0268 03                 1466 	.db #0x03
   0269 01                 1467 	.db #0x01
   026A 11                 1468 	.db #0x11
   026B 13                 1469 	.db #0x13
   026C 10                 1470 	.db #0x10
   026D 00                 1471 	.db #0x00
   026E 02                 1472 	.db #0x02
   026F 08                 1473 	.db #0x08
   0270 0A                 1474 	.db #0x0A
   0271 12                 1475 	.db #0x12
   0272 10                 1476 	.db #0x10
   0273 00                 1477 	.db #0x00
   0274 01                 1478 	.db #0x01
   0275 11                 1479 	.db #0x11
   0276 13                 1480 	.db #0x13
   0277 0B                 1481 	.db #0x0B
   0278 09                 1482 	.db #0x09
   0279 03                 1483 	.db #0x03
   027A 01                 1484 	.db #0x01
   027B 11                 1485 	.db #0x11
   027C 00                 1486 	.db #0x00
   027D 02                 1487 	.db #0x02
   027E 08                 1488 	.db #0x08
   027F 0A                 1489 	.db #0x0A
   0280 12                 1490 	.db #0x12
   0281 10                 1491 	.db #0x10
   0282 00                 1492 	.db #0x00
   0283 02                 1493 	.db #0x02
   0284 03                 1494 	.db #0x03
   0285 01                 1495 	.db #0x01
   0286 11                 1496 	.db #0x11
   0287 13                 1497 	.db #0x13
   0288 0B                 1498 	.db #0x0B
   0289 09                 1499 	.db #0x09
   028A 03                 1500 	.db #0x03
   028B 01                 1501 	.db #0x01
   028C 02                 1502 	.db #0x02
   028D 08                 1503 	.db #0x08
   028E 0A                 1504 	.db #0x0A
   028F 12                 1505 	.db #0x12
   0290 10                 1506 	.db #0x10
   0291 00                 1507 	.db #0x00
   0292 02                 1508 	.db #0x02
   0293 08                 1509 	.db #0x08
   0294 09                 1510 	.db #0x09
   0295 03                 1511 	.db #0x03
   0296 01                 1512 	.db #0x01
   0297 11                 1513 	.db #0x11
   0298 13                 1514 	.db #0x13
   0299 0B                 1515 	.db #0x0B
   029A 09                 1516 	.db #0x09
   029B 03                 1517 	.db #0x03
   029C 08                 1518 	.db #0x08
   029D 0A                 1519 	.db #0x0A
   029E 12                 1520 	.db #0x12
   029F 10                 1521 	.db #0x10
   02A0 00                 1522 	.db #0x00
   02A1 02                 1523 	.db #0x02
   02A2 08                 1524 	.db #0x08
   02A3 0A                 1525 	.db #0x0A
   02A4 0B                 1526 	.db #0x0B
   02A5 09                 1527 	.db #0x09
   02A6 03                 1528 	.db #0x03
   02A7 01                 1529 	.db #0x01
   02A8 11                 1530 	.db #0x11
   02A9 13                 1531 	.db #0x13
   02AA 0B                 1532 	.db #0x0B
   02AB 09                 1533 	.db #0x09
   02AC                    1534 _tri_dia:
   02AC 05                 1535 	.db #0x05
   02AD 1B                 1536 	.db #0x1B
   02AE 0F                 1537 	.db #0x0F
   02AF 1D                 1538 	.db #0x1D
   02B0 15                 1539 	.db #0x15
   02B1 19                 1540 	.db #0x19
   02B2 05                 1541 	.db #0x05
   02B3 1B                 1542 	.db #0x1B
   02B4 0F                 1543 	.db #0x0F
   02B5 1D                 1544 	.db #0x1D
   02B6 15                 1545 	.db #0x15
   02B7 19                 1546 	.db #0x19
   02B8 05                 1547 	.db #0x05
   02B9 1B                 1548 	.db #0x1B
   02BA 0F                 1549 	.db #0x0F
   02BB 1D                 1550 	.db #0x1D
   02BC 1D                 1551 	.db #0x1D
   02BD 05                 1552 	.db #0x05
   02BE 19                 1553 	.db #0x19
   02BF 0F                 1554 	.db #0x0F
   02C0 1B                 1555 	.db #0x1B
   02C1 15                 1556 	.db #0x15
   02C2 1D                 1557 	.db #0x1D
   02C3 05                 1558 	.db #0x05
   02C4 19                 1559 	.db #0x19
   02C5 0F                 1560 	.db #0x0F
   02C6 1B                 1561 	.db #0x1B
   02C7 15                 1562 	.db #0x15
   02C8 1D                 1563 	.db #0x1D
   02C9 05                 1564 	.db #0x05
   02CA 19                 1565 	.db #0x19
   02CB 0F                 1566 	.db #0x0F
   02CC 0F                 1567 	.db #0x0F
   02CD 1D                 1568 	.db #0x1D
   02CE 15                 1569 	.db #0x15
   02CF 19                 1570 	.db #0x19
   02D0 05                 1571 	.db #0x05
   02D1 1B                 1572 	.db #0x1B
   02D2 0F                 1573 	.db #0x0F
   02D3 1D                 1574 	.db #0x1D
   02D4 15                 1575 	.db #0x15
   02D5 19                 1576 	.db #0x19
   02D6 05                 1577 	.db #0x05
   02D7 1B                 1578 	.db #0x1B
   02D8 0F                 1579 	.db #0x0F
   02D9 1D                 1580 	.db #0x1D
   02DA 15                 1581 	.db #0x15
   02DB 19                 1582 	.db #0x19
   02DC 19                 1583 	.db #0x19
   02DD 0F                 1584 	.db #0x0F
   02DE 1B                 1585 	.db #0x1B
   02DF 15                 1586 	.db #0x15
   02E0 1D                 1587 	.db #0x1D
   02E1 05                 1588 	.db #0x05
   02E2 19                 1589 	.db #0x19
   02E3 0F                 1590 	.db #0x0F
   02E4 1B                 1591 	.db #0x1B
   02E5 15                 1592 	.db #0x15
   02E6 1D                 1593 	.db #0x1D
   02E7 05                 1594 	.db #0x05
   02E8 19                 1595 	.db #0x19
   02E9 0F                 1596 	.db #0x0F
   02EA 1B                 1597 	.db #0x1B
   02EB 15                 1598 	.db #0x15
   02EC 15                 1599 	.db #0x15
   02ED 19                 1600 	.db #0x19
   02EE 05                 1601 	.db #0x05
   02EF 1B                 1602 	.db #0x1B
   02F0 0F                 1603 	.db #0x0F
   02F1 1D                 1604 	.db #0x1D
   02F2 15                 1605 	.db #0x15
   02F3 19                 1606 	.db #0x19
   02F4 05                 1607 	.db #0x05
   02F5 1B                 1608 	.db #0x1B
   02F6 0F                 1609 	.db #0x0F
   02F7 1D                 1610 	.db #0x1D
   02F8 15                 1611 	.db #0x15
   02F9 19                 1612 	.db #0x19
   02FA 05                 1613 	.db #0x05
   02FB 1B                 1614 	.db #0x1B
   02FC 1B                 1615 	.db #0x1B
   02FD 15                 1616 	.db #0x15
   02FE 1D                 1617 	.db #0x1D
   02FF 05                 1618 	.db #0x05
   0300 19                 1619 	.db #0x19
   0301 0F                 1620 	.db #0x0F
   0302 1B                 1621 	.db #0x1B
   0303 15                 1622 	.db #0x15
   0304 1D                 1623 	.db #0x1D
   0305 05                 1624 	.db #0x05
   0306 19                 1625 	.db #0x19
   0307 0F                 1626 	.db #0x0F
   0308 1B                 1627 	.db #0x1B
   0309 15                 1628 	.db #0x15
   030A 1D                 1629 	.db #0x1D
   030B 05                 1630 	.db #0x05
   030C 05                 1631 	.db #0x05
   030D 1B                 1632 	.db #0x1B
   030E 0F                 1633 	.db #0x0F
   030F 1D                 1634 	.db #0x1D
   0310 15                 1635 	.db #0x15
   0311 19                 1636 	.db #0x19
   0312 05                 1637 	.db #0x05
   0313 1B                 1638 	.db #0x1B
   0314 0F                 1639 	.db #0x0F
   0315 1D                 1640 	.db #0x1D
   0316 15                 1641 	.db #0x15
   0317 19                 1642 	.db #0x19
   0318 05                 1643 	.db #0x05
   0319 1B                 1644 	.db #0x1B
   031A 0F                 1645 	.db #0x0F
   031B 1D                 1646 	.db #0x1D
   031C 1D                 1647 	.db #0x1D
   031D 05                 1648 	.db #0x05
   031E 19                 1649 	.db #0x19
   031F 0F                 1650 	.db #0x0F
   0320 1B                 1651 	.db #0x1B
   0321 15                 1652 	.db #0x15
   0322 1D                 1653 	.db #0x1D
   0323 05                 1654 	.db #0x05
   0324 19                 1655 	.db #0x19
   0325 0F                 1656 	.db #0x0F
   0326 1B                 1657 	.db #0x1B
   0327 15                 1658 	.db #0x15
   0328 1D                 1659 	.db #0x1D
   0329 05                 1660 	.db #0x05
   032A 19                 1661 	.db #0x19
   032B 0F                 1662 	.db #0x0F
   032C 0F                 1663 	.db #0x0F
   032D 1D                 1664 	.db #0x1D
   032E 15                 1665 	.db #0x15
   032F 19                 1666 	.db #0x19
   0330 05                 1667 	.db #0x05
   0331 1B                 1668 	.db #0x1B
   0332 0F                 1669 	.db #0x0F
   0333 1D                 1670 	.db #0x1D
   0334 15                 1671 	.db #0x15
   0335 19                 1672 	.db #0x19
   0336 05                 1673 	.db #0x05
   0337 1B                 1674 	.db #0x1B
   0338 0F                 1675 	.db #0x0F
   0339 1D                 1676 	.db #0x1D
   033A 15                 1677 	.db #0x15
   033B 19                 1678 	.db #0x19
   033C 19                 1679 	.db #0x19
   033D 0F                 1680 	.db #0x0F
   033E 1B                 1681 	.db #0x1B
   033F 15                 1682 	.db #0x15
   0340 1D                 1683 	.db #0x1D
   0341 05                 1684 	.db #0x05
   0342 19                 1685 	.db #0x19
   0343 0F                 1686 	.db #0x0F
   0344 1B                 1687 	.db #0x1B
   0345 15                 1688 	.db #0x15
   0346 1D                 1689 	.db #0x1D
   0347 05                 1690 	.db #0x05
   0348 19                 1691 	.db #0x19
   0349 0F                 1692 	.db #0x0F
   034A 1B                 1693 	.db #0x1B
   034B 15                 1694 	.db #0x15
   034C 15                 1695 	.db #0x15
   034D 19                 1696 	.db #0x19
   034E 05                 1697 	.db #0x05
   034F 1B                 1698 	.db #0x1B
   0350 0F                 1699 	.db #0x0F
   0351 1D                 1700 	.db #0x1D
   0352 15                 1701 	.db #0x15
   0353 19                 1702 	.db #0x19
   0354 05                 1703 	.db #0x05
   0355 1B                 1704 	.db #0x1B
   0356 0F                 1705 	.db #0x0F
   0357 1D                 1706 	.db #0x1D
   0358 15                 1707 	.db #0x15
   0359 19                 1708 	.db #0x19
   035A 05                 1709 	.db #0x05
   035B 1B                 1710 	.db #0x1B
   035C 1B                 1711 	.db #0x1B
   035D 15                 1712 	.db #0x15
   035E 1D                 1713 	.db #0x1D
   035F 05                 1714 	.db #0x05
   0360 19                 1715 	.db #0x19
   0361 0F                 1716 	.db #0x0F
   0362 1B                 1717 	.db #0x1B
   0363 15                 1718 	.db #0x15
   0364 1D                 1719 	.db #0x1D
   0365 05                 1720 	.db #0x05
   0366 19                 1721 	.db #0x19
   0367 0F                 1722 	.db #0x0F
   0368 1B                 1723 	.db #0x1B
   0369 15                 1724 	.db #0x15
   036A 1D                 1725 	.db #0x1D
   036B 05                 1726 	.db #0x05
   036C                    1727 _tri_side1:
   036C 0A                 1728 	.db #0x0A
   036D 12                 1729 	.db #0x12
   036E 10                 1730 	.db #0x10
   036F 00                 1731 	.db #0x00
   0370 02                 1732 	.db #0x02
   0371 08                 1733 	.db #0x08
   0372 0A                 1734 	.db #0x0A
   0373 12                 1735 	.db #0x12
   0374 10                 1736 	.db #0x10
   0375 00                 1737 	.db #0x00
   0376 02                 1738 	.db #0x02
   0377 08                 1739 	.db #0x08
   0378 0A                 1740 	.db #0x0A
   0379 12                 1741 	.db #0x12
   037A 10                 1742 	.db #0x10
   037B 00                 1743 	.db #0x00
   037C 12                 1744 	.db #0x12
   037D 10                 1745 	.db #0x10
   037E 00                 1746 	.db #0x00
   037F 02                 1747 	.db #0x02
   0380 08                 1748 	.db #0x08
   0381 0A                 1749 	.db #0x0A
   0382 12                 1750 	.db #0x12
   0383 10                 1751 	.db #0x10
   0384 00                 1752 	.db #0x00
   0385 02                 1753 	.db #0x02
   0386 08                 1754 	.db #0x08
   0387 0A                 1755 	.db #0x0A
   0388 12                 1756 	.db #0x12
   0389 10                 1757 	.db #0x10
   038A 00                 1758 	.db #0x00
   038B 02                 1759 	.db #0x02
   038C 10                 1760 	.db #0x10
   038D 00                 1761 	.db #0x00
   038E 02                 1762 	.db #0x02
   038F 08                 1763 	.db #0x08
   0390 0A                 1764 	.db #0x0A
   0391 12                 1765 	.db #0x12
   0392 10                 1766 	.db #0x10
   0393 00                 1767 	.db #0x00
   0394 02                 1768 	.db #0x02
   0395 08                 1769 	.db #0x08
   0396 0A                 1770 	.db #0x0A
   0397 12                 1771 	.db #0x12
   0398 10                 1772 	.db #0x10
   0399 00                 1773 	.db #0x00
   039A 02                 1774 	.db #0x02
   039B 08                 1775 	.db #0x08
   039C 00                 1776 	.db #0x00
   039D 02                 1777 	.db #0x02
   039E 08                 1778 	.db #0x08
   039F 0A                 1779 	.db #0x0A
   03A0 12                 1780 	.db #0x12
   03A1 10                 1781 	.db #0x10
   03A2 00                 1782 	.db #0x00
   03A3 02                 1783 	.db #0x02
   03A4 08                 1784 	.db #0x08
   03A5 0A                 1785 	.db #0x0A
   03A6 12                 1786 	.db #0x12
   03A7 10                 1787 	.db #0x10
   03A8 00                 1788 	.db #0x00
   03A9 02                 1789 	.db #0x02
   03AA 08                 1790 	.db #0x08
   03AB 0A                 1791 	.db #0x0A
   03AC 02                 1792 	.db #0x02
   03AD 08                 1793 	.db #0x08
   03AE 0A                 1794 	.db #0x0A
   03AF 12                 1795 	.db #0x12
   03B0 10                 1796 	.db #0x10
   03B1 00                 1797 	.db #0x00
   03B2 02                 1798 	.db #0x02
   03B3 08                 1799 	.db #0x08
   03B4 0A                 1800 	.db #0x0A
   03B5 12                 1801 	.db #0x12
   03B6 10                 1802 	.db #0x10
   03B7 00                 1803 	.db #0x00
   03B8 02                 1804 	.db #0x02
   03B9 08                 1805 	.db #0x08
   03BA 0A                 1806 	.db #0x0A
   03BB 12                 1807 	.db #0x12
   03BC 08                 1808 	.db #0x08
   03BD 0A                 1809 	.db #0x0A
   03BE 12                 1810 	.db #0x12
   03BF 10                 1811 	.db #0x10
   03C0 00                 1812 	.db #0x00
   03C1 02                 1813 	.db #0x02
   03C2 08                 1814 	.db #0x08
   03C3 0A                 1815 	.db #0x0A
   03C4 12                 1816 	.db #0x12
   03C5 10                 1817 	.db #0x10
   03C6 00                 1818 	.db #0x00
   03C7 02                 1819 	.db #0x02
   03C8 08                 1820 	.db #0x08
   03C9 0A                 1821 	.db #0x0A
   03CA 12                 1822 	.db #0x12
   03CB 10                 1823 	.db #0x10
   03CC 0A                 1824 	.db #0x0A
   03CD 12                 1825 	.db #0x12
   03CE 10                 1826 	.db #0x10
   03CF 00                 1827 	.db #0x00
   03D0 02                 1828 	.db #0x02
   03D1 08                 1829 	.db #0x08
   03D2 0A                 1830 	.db #0x0A
   03D3 12                 1831 	.db #0x12
   03D4 10                 1832 	.db #0x10
   03D5 00                 1833 	.db #0x00
   03D6 02                 1834 	.db #0x02
   03D7 08                 1835 	.db #0x08
   03D8 0A                 1836 	.db #0x0A
   03D9 12                 1837 	.db #0x12
   03DA 10                 1838 	.db #0x10
   03DB 00                 1839 	.db #0x00
   03DC 12                 1840 	.db #0x12
   03DD 10                 1841 	.db #0x10
   03DE 00                 1842 	.db #0x00
   03DF 02                 1843 	.db #0x02
   03E0 08                 1844 	.db #0x08
   03E1 0A                 1845 	.db #0x0A
   03E2 12                 1846 	.db #0x12
   03E3 10                 1847 	.db #0x10
   03E4 00                 1848 	.db #0x00
   03E5 02                 1849 	.db #0x02
   03E6 08                 1850 	.db #0x08
   03E7 0A                 1851 	.db #0x0A
   03E8 12                 1852 	.db #0x12
   03E9 10                 1853 	.db #0x10
   03EA 00                 1854 	.db #0x00
   03EB 02                 1855 	.db #0x02
   03EC 10                 1856 	.db #0x10
   03ED 00                 1857 	.db #0x00
   03EE 02                 1858 	.db #0x02
   03EF 08                 1859 	.db #0x08
   03F0 0A                 1860 	.db #0x0A
   03F1 12                 1861 	.db #0x12
   03F2 10                 1862 	.db #0x10
   03F3 00                 1863 	.db #0x00
   03F4 02                 1864 	.db #0x02
   03F5 08                 1865 	.db #0x08
   03F6 0A                 1866 	.db #0x0A
   03F7 12                 1867 	.db #0x12
   03F8 10                 1868 	.db #0x10
   03F9 00                 1869 	.db #0x00
   03FA 02                 1870 	.db #0x02
   03FB 08                 1871 	.db #0x08
   03FC 00                 1872 	.db #0x00
   03FD 02                 1873 	.db #0x02
   03FE 08                 1874 	.db #0x08
   03FF 0A                 1875 	.db #0x0A
   0400 12                 1876 	.db #0x12
   0401 10                 1877 	.db #0x10
   0402 00                 1878 	.db #0x00
   0403 02                 1879 	.db #0x02
   0404 08                 1880 	.db #0x08
   0405 0A                 1881 	.db #0x0A
   0406 12                 1882 	.db #0x12
   0407 10                 1883 	.db #0x10
   0408 00                 1884 	.db #0x00
   0409 02                 1885 	.db #0x02
   040A 08                 1886 	.db #0x08
   040B 0A                 1887 	.db #0x0A
   040C 02                 1888 	.db #0x02
   040D 08                 1889 	.db #0x08
   040E 0A                 1890 	.db #0x0A
   040F 12                 1891 	.db #0x12
   0410 10                 1892 	.db #0x10
   0411 00                 1893 	.db #0x00
   0412 02                 1894 	.db #0x02
   0413 08                 1895 	.db #0x08
   0414 0A                 1896 	.db #0x0A
   0415 12                 1897 	.db #0x12
   0416 10                 1898 	.db #0x10
   0417 00                 1899 	.db #0x00
   0418 02                 1900 	.db #0x02
   0419 08                 1901 	.db #0x08
   041A 0A                 1902 	.db #0x0A
   041B 12                 1903 	.db #0x12
   041C 08                 1904 	.db #0x08
   041D 0A                 1905 	.db #0x0A
   041E 12                 1906 	.db #0x12
   041F 10                 1907 	.db #0x10
   0420 00                 1908 	.db #0x00
   0421 02                 1909 	.db #0x02
   0422 08                 1910 	.db #0x08
   0423 0A                 1911 	.db #0x0A
   0424 12                 1912 	.db #0x12
   0425 10                 1913 	.db #0x10
   0426 00                 1914 	.db #0x00
   0427 02                 1915 	.db #0x02
   0428 08                 1916 	.db #0x08
   0429 0A                 1917 	.db #0x0A
   042A 12                 1918 	.db #0x12
   042B 10                 1919 	.db #0x10
   042C                    1920 _tri_side2:
   042C 00                 1921 	.db #0x00
   042D 10                 1922 	.db #0x10
   042E 12                 1923 	.db #0x12
   042F 0A                 1924 	.db #0x0A
   0430 08                 1925 	.db #0x08
   0431 02                 1926 	.db #0x02
   0432 00                 1927 	.db #0x00
   0433 10                 1928 	.db #0x10
   0434 12                 1929 	.db #0x12
   0435 0A                 1930 	.db #0x0A
   0436 08                 1931 	.db #0x08
   0437 02                 1932 	.db #0x02
   0438 00                 1933 	.db #0x00
   0439 10                 1934 	.db #0x10
   043A 12                 1935 	.db #0x12
   043B 0A                 1936 	.db #0x0A
   043C 02                 1937 	.db #0x02
   043D 00                 1938 	.db #0x00
   043E 10                 1939 	.db #0x10
   043F 12                 1940 	.db #0x12
   0440 0A                 1941 	.db #0x0A
   0441 08                 1942 	.db #0x08
   0442 02                 1943 	.db #0x02
   0443 00                 1944 	.db #0x00
   0444 10                 1945 	.db #0x10
   0445 12                 1946 	.db #0x12
   0446 0A                 1947 	.db #0x0A
   0447 08                 1948 	.db #0x08
   0448 02                 1949 	.db #0x02
   0449 00                 1950 	.db #0x00
   044A 10                 1951 	.db #0x10
   044B 12                 1952 	.db #0x12
   044C 08                 1953 	.db #0x08
   044D 02                 1954 	.db #0x02
   044E 00                 1955 	.db #0x00
   044F 10                 1956 	.db #0x10
   0450 12                 1957 	.db #0x12
   0451 0A                 1958 	.db #0x0A
   0452 08                 1959 	.db #0x08
   0453 02                 1960 	.db #0x02
   0454 00                 1961 	.db #0x00
   0455 10                 1962 	.db #0x10
   0456 12                 1963 	.db #0x12
   0457 0A                 1964 	.db #0x0A
   0458 08                 1965 	.db #0x08
   0459 02                 1966 	.db #0x02
   045A 00                 1967 	.db #0x00
   045B 10                 1968 	.db #0x10
   045C 0A                 1969 	.db #0x0A
   045D 08                 1970 	.db #0x08
   045E 02                 1971 	.db #0x02
   045F 00                 1972 	.db #0x00
   0460 10                 1973 	.db #0x10
   0461 12                 1974 	.db #0x12
   0462 0A                 1975 	.db #0x0A
   0463 08                 1976 	.db #0x08
   0464 02                 1977 	.db #0x02
   0465 00                 1978 	.db #0x00
   0466 10                 1979 	.db #0x10
   0467 12                 1980 	.db #0x12
   0468 0A                 1981 	.db #0x0A
   0469 08                 1982 	.db #0x08
   046A 02                 1983 	.db #0x02
   046B 00                 1984 	.db #0x00
   046C 12                 1985 	.db #0x12
   046D 0A                 1986 	.db #0x0A
   046E 08                 1987 	.db #0x08
   046F 02                 1988 	.db #0x02
   0470 00                 1989 	.db #0x00
   0471 10                 1990 	.db #0x10
   0472 12                 1991 	.db #0x12
   0473 0A                 1992 	.db #0x0A
   0474 08                 1993 	.db #0x08
   0475 02                 1994 	.db #0x02
   0476 00                 1995 	.db #0x00
   0477 10                 1996 	.db #0x10
   0478 12                 1997 	.db #0x12
   0479 0A                 1998 	.db #0x0A
   047A 08                 1999 	.db #0x08
   047B 02                 2000 	.db #0x02
   047C 10                 2001 	.db #0x10
   047D 12                 2002 	.db #0x12
   047E 0A                 2003 	.db #0x0A
   047F 08                 2004 	.db #0x08
   0480 02                 2005 	.db #0x02
   0481 00                 2006 	.db #0x00
   0482 10                 2007 	.db #0x10
   0483 12                 2008 	.db #0x12
   0484 0A                 2009 	.db #0x0A
   0485 08                 2010 	.db #0x08
   0486 02                 2011 	.db #0x02
   0487 00                 2012 	.db #0x00
   0488 10                 2013 	.db #0x10
   0489 12                 2014 	.db #0x12
   048A 0A                 2015 	.db #0x0A
   048B 08                 2016 	.db #0x08
   048C 00                 2017 	.db #0x00
   048D 10                 2018 	.db #0x10
   048E 12                 2019 	.db #0x12
   048F 0A                 2020 	.db #0x0A
   0490 08                 2021 	.db #0x08
   0491 02                 2022 	.db #0x02
   0492 00                 2023 	.db #0x00
   0493 10                 2024 	.db #0x10
   0494 12                 2025 	.db #0x12
   0495 0A                 2026 	.db #0x0A
   0496 08                 2027 	.db #0x08
   0497 02                 2028 	.db #0x02
   0498 00                 2029 	.db #0x00
   0499 10                 2030 	.db #0x10
   049A 12                 2031 	.db #0x12
   049B 0A                 2032 	.db #0x0A
   049C 02                 2033 	.db #0x02
   049D 00                 2034 	.db #0x00
   049E 10                 2035 	.db #0x10
   049F 12                 2036 	.db #0x12
   04A0 0A                 2037 	.db #0x0A
   04A1 08                 2038 	.db #0x08
   04A2 02                 2039 	.db #0x02
   04A3 00                 2040 	.db #0x00
   04A4 10                 2041 	.db #0x10
   04A5 12                 2042 	.db #0x12
   04A6 0A                 2043 	.db #0x0A
   04A7 08                 2044 	.db #0x08
   04A8 02                 2045 	.db #0x02
   04A9 00                 2046 	.db #0x00
   04AA 10                 2047 	.db #0x10
   04AB 12                 2048 	.db #0x12
   04AC 08                 2049 	.db #0x08
   04AD 02                 2050 	.db #0x02
   04AE 00                 2051 	.db #0x00
   04AF 10                 2052 	.db #0x10
   04B0 12                 2053 	.db #0x12
   04B1 0A                 2054 	.db #0x0A
   04B2 08                 2055 	.db #0x08
   04B3 02                 2056 	.db #0x02
   04B4 00                 2057 	.db #0x00
   04B5 10                 2058 	.db #0x10
   04B6 12                 2059 	.db #0x12
   04B7 0A                 2060 	.db #0x0A
   04B8 08                 2061 	.db #0x08
   04B9 02                 2062 	.db #0x02
   04BA 00                 2063 	.db #0x00
   04BB 10                 2064 	.db #0x10
   04BC 0A                 2065 	.db #0x0A
   04BD 08                 2066 	.db #0x08
   04BE 02                 2067 	.db #0x02
   04BF 00                 2068 	.db #0x00
   04C0 10                 2069 	.db #0x10
   04C1 12                 2070 	.db #0x12
   04C2 0A                 2071 	.db #0x0A
   04C3 08                 2072 	.db #0x08
   04C4 02                 2073 	.db #0x02
   04C5 00                 2074 	.db #0x00
   04C6 10                 2075 	.db #0x10
   04C7 12                 2076 	.db #0x12
   04C8 0A                 2077 	.db #0x0A
   04C9 08                 2078 	.db #0x08
   04CA 02                 2079 	.db #0x02
   04CB 00                 2080 	.db #0x00
   04CC 12                 2081 	.db #0x12
   04CD 0A                 2082 	.db #0x0A
   04CE 08                 2083 	.db #0x08
   04CF 02                 2084 	.db #0x02
   04D0 00                 2085 	.db #0x00
   04D1 10                 2086 	.db #0x10
   04D2 12                 2087 	.db #0x12
   04D3 0A                 2088 	.db #0x0A
   04D4 08                 2089 	.db #0x08
   04D5 02                 2090 	.db #0x02
   04D6 00                 2091 	.db #0x00
   04D7 10                 2092 	.db #0x10
   04D8 12                 2093 	.db #0x12
   04D9 0A                 2094 	.db #0x0A
   04DA 08                 2095 	.db #0x08
   04DB 02                 2096 	.db #0x02
   04DC 10                 2097 	.db #0x10
   04DD 12                 2098 	.db #0x12
   04DE 0A                 2099 	.db #0x0A
   04DF 08                 2100 	.db #0x08
   04E0 02                 2101 	.db #0x02
   04E1 00                 2102 	.db #0x00
   04E2 10                 2103 	.db #0x10
   04E3 12                 2104 	.db #0x12
   04E4 0A                 2105 	.db #0x0A
   04E5 08                 2106 	.db #0x08
   04E6 02                 2107 	.db #0x02
   04E7 00                 2108 	.db #0x00
   04E8 10                 2109 	.db #0x10
   04E9 12                 2110 	.db #0x12
   04EA 0A                 2111 	.db #0x0A
   04EB 08                 2112 	.db #0x08
                           2113 ;demo.c:143: void my_isr(void) interrupt
                           2114 ;	---------------------------------
                           2115 ; Function my_isr
                           2116 ; ---------------------------------
   04EC                    2117 _my_isr_start::
   04EC                    2118 _my_isr:
   04EC F5                 2119 	push	af
   04ED C5                 2120 	push	bc
   04EE D5                 2121 	push	de
   04EF E5                 2122 	push	hl
   04F0 FD E5              2123 	push	iy
                           2124 ;demo.c:145: DI;
   04F2 F3                 2125 		di 
                           2126 ;demo.c:147: READ_VDP_STATUS;
   04F3 DB 99              2127 		in a,(#0x99) 
                           2128 ;demo.c:149: PLY_Play();
   04F5 CDr00s00           2129 	call	_PLY_Play
                           2130 ;demo.c:150: PLY_SendRegisters();
   04F8 CDr00s00           2131 	call	_PLY_SendRegisters
                           2132 ;demo.c:152: vbicount+=1;
   04FB FD 21r88s41        2133 	ld	iy,#_vbicount
   04FF FD 34 00           2134 	inc	0 (iy)
   0502 20 07              2135 	jr	NZ,00103$
   0504 FD 21r88s41        2136 	ld	iy,#_vbicount
   0508 FD 34 01           2137 	inc	1 (iy)
   050B                    2138 00103$:
                           2139 ;demo.c:153: tick++;
   050B FD 21r8As41        2140 	ld	iy,#_tick
   050F FD 34 00           2141 	inc	0 (iy)
   0512 20 07              2142 	jr	NZ,00104$
   0514 FD 21r8As41        2143 	ld	iy,#_tick
   0518 FD 34 01           2144 	inc	1 (iy)
   051B                    2145 00104$:
                           2146 ;demo.c:155: EI;
   051B FB                 2147 		ei 
   051C FD E1              2148 	pop	iy
   051E E1                 2149 	pop	hl
   051F D1                 2150 	pop	de
   0520 C1                 2151 	pop	bc
   0521 F1                 2152 	pop	af
   0522 ED 4D              2153 	reti
   0524                    2154 _my_isr_end::
                           2155 ;demo.c:158: void color_isr(void) interrupt
                           2156 ;	---------------------------------
                           2157 ; Function color_isr
                           2158 ; ---------------------------------
   0524                    2159 _color_isr_start::
   0524                    2160 _color_isr:
   0524 F5                 2161 	push	af
   0525 C5                 2162 	push	bc
   0526 D5                 2163 	push	de
   0527 E5                 2164 	push	hl
   0528 FD E5              2165 	push	iy
                           2166 ;demo.c:160: DI;
   052A F3                 2167 		di 
                           2168 ;demo.c:162: if(isNthBitSet(vdp2_status(1),0)) {
   052B 3E 01              2169 	ld	a,#0x01
   052D F5                 2170 	push	af
   052E 33                 2171 	inc	sp
   052F CDr00s00           2172 	call	_vdp2_status
   0532 33                 2173 	inc	sp
   0533 4D                 2174 	ld	c,l
   0534 21 00 00           2175 	ld	hl,#0x0000
   0537 E5                 2176 	push	hl
   0538 79                 2177 	ld	a,c
   0539 F5                 2178 	push	af
   053A 33                 2179 	inc	sp
   053B CDr00s00           2180 	call	_isNthBitSet
   053E F1                 2181 	pop	af
   053F 33                 2182 	inc	sp
   0540 44                 2183 	ld	b,h
   0541 4D                 2184 	ld	c,l
   0542 79                 2185 	ld	a,c
   0543 B0                 2186 	or	a,b
   0544 28 19              2187 	jr	Z,00102$
                           2188 ;demo.c:163: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0546 21r88s41           2189 	ld	hl,#_vbicount + 0
   0549 4E                 2190 	ld	c,(hl)
   054A 06 00              2191 	ld	b,#0x00
   054C 21r00s00           2192 	ld	hl,#_sintab
   054F 09                 2193 	add	hl,bc
   0550 7E                 2194 	ld	a,(hl)
   0551 F5                 2195 	push	af
   0552 33                 2196 	inc	sp
   0553 3E 17              2197 	ld	a,#0x17
   0555 F5                 2198 	push	af
   0556 33                 2199 	inc	sp
   0557 CDr00s00           2200 	call	_vdp_register
   055A F1                 2201 	pop	af
                           2202 ;demo.c:164: READ_VDP_STATUS;
   055B DB 99              2203 		in a,(#0x99) 
   055D 18 18              2204 	jr	00103$
   055F                    2205 00102$:
                           2206 ;demo.c:167: READ_VDP_STATUS;
   055F DB 99              2207 		in a,(#0x99) 
                           2208 ;demo.c:168: vbicount++;
   0561 FD 21r88s41        2209 	ld	iy,#_vbicount
   0565 FD 34 00           2210 	inc	0 (iy)
   0568 20 07              2211 	jr	NZ,00107$
   056A FD 21r88s41        2212 	ld	iy,#_vbicount
   056E FD 34 01           2213 	inc	1 (iy)
   0571                    2214 00107$:
                           2215 ;demo.c:171: PLY_Play();
   0571 CDr00s00           2216 	call	_PLY_Play
                           2217 ;demo.c:172: PLY_SendRegisters();
   0574 CDr00s00           2218 	call	_PLY_SendRegisters
   0577                    2219 00103$:
                           2220 ;demo.c:175: EI;
   0577 FB                 2221 		ei 
   0578 FD E1              2222 	pop	iy
   057A E1                 2223 	pop	hl
   057B D1                 2224 	pop	de
   057C C1                 2225 	pop	bc
   057D F1                 2226 	pop	af
   057E ED 4D              2227 	reti
   0580                    2228 _color_isr_end::
                           2229 ;demo.c:182: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2230 ;	---------------------------------
                           2231 ; Function ge5_load
                           2232 ; ---------------------------------
   0580                    2233 _ge5_load_start::
   0580                    2234 _ge5_load:
   0580 DD E5              2235 	push	ix
   0582 DD 21 00 00        2236 	ld	ix,#0
   0586 DD 39              2237 	add	ix,sp
   0588 21 D2 FF           2238 	ld	hl,#-46
   058B 39                 2239 	add	hl,sp
   058C F9                 2240 	ld	sp,hl
                           2241 ;demo.c:186: if(debugprint == 1) {
   058D DD 7E 09           2242 	ld	a,9 (ix)
   0590 D6 01              2243 	sub	a,#0x01
   0592 20 06              2244 	jr	NZ,00125$
   0594 DD 7E 0A           2245 	ld	a,10 (ix)
   0597 B7                 2246 	or	a,a
   0598 28 02              2247 	jr	Z,00126$
   059A                    2248 00125$:
   059A 18 1B              2249 	jr	00102$
   059C                    2250 00126$:
                           2251 ;demo.c:187: puts("loading ge5file: ");
   059C 21r7Bs06           2252 	ld	hl,#__str_0
   059F E5                 2253 	push	hl
   05A0 CDr00s00           2254 	call	_puts
   05A3 F1                 2255 	pop	af
                           2256 ;demo.c:188: puts(file_name);
   05A4 DD 6E 04           2257 	ld	l,4 (ix)
   05A7 DD 66 05           2258 	ld	h,5 (ix)
   05AA E5                 2259 	push	hl
   05AB CDr00s00           2260 	call	_puts
   05AE F1                 2261 	pop	af
                           2262 ;demo.c:189: puts("\r\n");
   05AF 21r8Ds06           2263 	ld	hl,#__str_1
   05B2 E5                 2264 	push	hl
   05B3 CDr00s00           2265 	call	_puts
   05B6 F1                 2266 	pop	af
   05B7                    2267 00102$:
                           2268 ;demo.c:192: memset((uint8_t *) &f, 0, sizeof(fcb));
   05B7 21 00 00           2269 	ld	hl,#0x0000
   05BA 39                 2270 	add	hl,sp
   05BB 4D                 2271 	ld	c,l
   05BC 44                 2272 	ld	b,h
   05BD 21 2E 00           2273 	ld	hl,#0x002E
   05C0 E5                 2274 	push	hl
   05C1 3E 00              2275 	ld	a,#0x00
   05C3 F5                 2276 	push	af
   05C4 33                 2277 	inc	sp
   05C5 C5                 2278 	push	bc
   05C6 CDr00s00           2279 	call	_memset
   05C9 F1                 2280 	pop	af
   05CA F1                 2281 	pop	af
   05CB 33                 2282 	inc	sp
                           2283 ;demo.c:194: f.record_size = 128;
   05CC 21 00 00           2284 	ld	hl,#0x0000
   05CF 39                 2285 	add	hl,sp
   05D0 4D                 2286 	ld	c,l
   05D1 44                 2287 	ld	b,h
   05D2 21 0F 00           2288 	ld	hl,#0x000F
   05D5 09                 2289 	add	hl,bc
   05D6 EB                 2290 	ex	de,hl
   05D7 3E 80              2291 	ld	a,#0x80
   05D9 12                 2292 	ld	(de),a
                           2293 ;demo.c:195: f.drive = 0;
   05DA 3E 00              2294 	ld	a,#0x00
   05DC 02                 2295 	ld	(bc),a
                           2296 ;demo.c:197: memcpy(f.name, file_name, 11);
   05DD DD 5E 04           2297 	ld	e,4 (ix)
   05E0 DD 56 05           2298 	ld	d,5 (ix)
   05E3 03                 2299 	inc	bc
   05E4 21 0B 00           2300 	ld	hl,#0x000B
   05E7 E5                 2301 	push	hl
   05E8 D5                 2302 	push	de
   05E9 C5                 2303 	push	bc
   05EA CDr00s00           2304 	call	_memcpy
   05ED F1                 2305 	pop	af
   05EE F1                 2306 	pop	af
   05EF F1                 2307 	pop	af
                           2308 ;demo.c:199: if (open(&f) != 0) return 0;
   05F0 21 00 00           2309 	ld	hl,#0x0000
   05F3 39                 2310 	add	hl,sp
   05F4 E5                 2311 	push	hl
   05F5 CDr00s00           2312 	call	_open
   05F8 F1                 2313 	pop	af
   05F9 AF                 2314 	xor	a,a
   05FA B5                 2315 	or	a,l
   05FB 28 05              2316 	jr	Z,00104$
   05FD 2E 00              2317 	ld	l,#0x00
   05FF C3r76s06           2318 	jp	00116$
   0602                    2319 00104$:
                           2320 ;demo.c:200: vdp_set_write_address(vramh, vraml);
   0602 DD 6E 07           2321 	ld	l,7 (ix)
   0605 DD 66 08           2322 	ld	h,8 (ix)
   0608 E5                 2323 	push	hl
   0609 DD 7E 06           2324 	ld	a,6 (ix)
   060C F5                 2325 	push	af
   060D 33                 2326 	inc	sp
   060E CDr00s00           2327 	call	_vdp_set_write_address
   0611 F1                 2328 	pop	af
   0612 33                 2329 	inc	sp
                           2330 ;demo.c:202: for (i = 0; i < 213; i++) {
   0613 0E 00              2331 	ld	c,#0x00
   0615                    2332 00112$:
   0615 79                 2333 	ld	a,c
   0616 D6 D5              2334 	sub	a,#0xD5
   0618 D2r6Bs06           2335 	jp	NC,00115$
                           2336 ;demo.c:203: if (block_set_data_ptr(scratch) != 0) return 0;
   061B C5                 2337 	push	bc
   061C 21r48s40           2338 	ld	hl,#_scratch
   061F E5                 2339 	push	hl
   0620 CDr00s00           2340 	call	_block_set_data_ptr
   0623 F1                 2341 	pop	af
   0624 7D                 2342 	ld	a,l
   0625 C1                 2343 	pop	bc
   0626 47                 2344 	ld	b,a
   0627 B7                 2345 	or	a,a
   0628 28 05              2346 	jr	Z,00106$
   062A 2E 00              2347 	ld	l,#0x00
   062C C3r76s06           2348 	jp	00116$
   062F                    2349 00106$:
                           2350 ;demo.c:204: if (block_read(&f) != 0) return 0;
   062F 21 00 00           2351 	ld	hl,#0x0000
   0632 39                 2352 	add	hl,sp
   0633 C5                 2353 	push	bc
   0634 E5                 2354 	push	hl
   0635 CDr00s00           2355 	call	_block_read
   0638 F1                 2356 	pop	af
   0639 7D                 2357 	ld	a,l
   063A C1                 2358 	pop	bc
   063B 47                 2359 	ld	b,a
   063C B7                 2360 	or	a,a
   063D 28 04              2361 	jr	Z,00108$
   063F 2E 00              2362 	ld	l,#0x00
   0641 18 33              2363 	jr	00116$
   0643                    2364 00108$:
                           2365 ;demo.c:206: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0643 AF                 2366 	xor	a,a
   0644 B1                 2367 	or	a,c
   0645 20 11              2368 	jr	NZ,00110$
   0647 11r4Fs40           2369 	ld	de,#_scratch + 7
   064A C5                 2370 	push	bc
   064B 3E 79              2371 	ld	a,#0x79
   064D F5                 2372 	push	af
   064E 33                 2373 	inc	sp
   064F D5                 2374 	push	de
   0650 CDr00s00           2375 	call	_vdp_load_screen
   0653 F1                 2376 	pop	af
   0654 33                 2377 	inc	sp
   0655 C1                 2378 	pop	bc
   0656 18 0F              2379 	jr	00114$
   0658                    2380 00110$:
                           2381 ;demo.c:207: else vdp_load_screen(scratch, 128);
   0658 C5                 2382 	push	bc
   0659 3E 80              2383 	ld	a,#0x80
   065B F5                 2384 	push	af
   065C 33                 2385 	inc	sp
   065D 21r48s40           2386 	ld	hl,#_scratch
   0660 E5                 2387 	push	hl
   0661 CDr00s00           2388 	call	_vdp_load_screen
   0664 F1                 2389 	pop	af
   0665 33                 2390 	inc	sp
   0666 C1                 2391 	pop	bc
   0667                    2392 00114$:
                           2393 ;demo.c:202: for (i = 0; i < 213; i++) {
   0667 0C                 2394 	inc	c
   0668 C3r15s06           2395 	jp	00112$
   066B                    2396 00115$:
                           2397 ;demo.c:210: close(&f);
   066B 21 00 00           2398 	ld	hl,#0x0000
   066E 39                 2399 	add	hl,sp
   066F E5                 2400 	push	hl
   0670 CDr00s00           2401 	call	_close
   0673 F1                 2402 	pop	af
                           2403 ;demo.c:212: return 1;
   0674 2E 01              2404 	ld	l,#0x01
   0676                    2405 00116$:
   0676 DD F9              2406 	ld	sp,ix
   0678 DD E1              2407 	pop	ix
   067A C9                 2408 	ret
   067B                    2409 _ge5_load_end::
   067B                    2410 __str_0:
   067B 6C 6F 61 64 69 6E  2411 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   068C 00                 2412 	.db 0x00
   068D                    2413 __str_1:
   068D 0D                 2414 	.db 0x0D
   068E 0A                 2415 	.db 0x0A
   068F 00                 2416 	.db 0x00
                           2417 ;demo.c:215: void scratch_clear() {
                           2418 ;	---------------------------------
                           2419 ; Function scratch_clear
                           2420 ; ---------------------------------
   0690                    2421 _scratch_clear_start::
   0690                    2422 _scratch_clear:
                           2423 ;demo.c:216: memset((uint8_t *) &scratch, 0, 128);
   0690 21 80 00           2424 	ld	hl,#0x0080
   0693 E5                 2425 	push	hl
   0694 3E 00              2426 	ld	a,#0x00
   0696 F5                 2427 	push	af
   0697 33                 2428 	inc	sp
   0698 21r48s40           2429 	ld	hl,#_scratch
   069B E5                 2430 	push	hl
   069C CDr00s00           2431 	call	_memset
   069F F1                 2432 	pop	af
   06A0 F1                 2433 	pop	af
   06A1 33                 2434 	inc	sp
   06A2 C9                 2435 	ret
   06A3                    2436 _scratch_clear_end::
                           2437 ;demo.c:219: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2438 ;	---------------------------------
                           2439 ; Function pal_load
                           2440 ; ---------------------------------
   06A3                    2441 _pal_load_start::
   06A3                    2442 _pal_load:
   06A3 DD E5              2443 	push	ix
   06A5 DD 21 00 00        2444 	ld	ix,#0
   06A9 DD 39              2445 	add	ix,sp
   06AB 21 D2 FF           2446 	ld	hl,#-46
   06AE 39                 2447 	add	hl,sp
   06AF F9                 2448 	ld	sp,hl
                           2449 ;demo.c:222: if(debugprint == 1) {
   06B0 DD 7E 07           2450 	ld	a,7 (ix)
   06B3 D6 01              2451 	sub	a,#0x01
   06B5 20 06              2452 	jr	NZ,00115$
   06B7 DD 7E 08           2453 	ld	a,8 (ix)
   06BA B7                 2454 	or	a,a
   06BB 28 02              2455 	jr	Z,00116$
   06BD                    2456 00115$:
   06BD 18 1B              2457 	jr	00102$
   06BF                    2458 00116$:
                           2459 ;demo.c:223: puts("loading palfile: ");
   06BF 21r6Ds07           2460 	ld	hl,#__str_2
   06C2 E5                 2461 	push	hl
   06C3 CDr00s00           2462 	call	_puts
   06C6 F1                 2463 	pop	af
                           2464 ;demo.c:224: puts(file_name);
   06C7 DD 6E 04           2465 	ld	l,4 (ix)
   06CA DD 66 05           2466 	ld	h,5 (ix)
   06CD E5                 2467 	push	hl
   06CE CDr00s00           2468 	call	_puts
   06D1 F1                 2469 	pop	af
                           2470 ;demo.c:225: puts("\r\n");
   06D2 21r7Fs07           2471 	ld	hl,#__str_3
   06D5 E5                 2472 	push	hl
   06D6 CDr00s00           2473 	call	_puts
   06D9 F1                 2474 	pop	af
   06DA                    2475 00102$:
                           2476 ;demo.c:228: memset((uint8_t *) &f, 0, sizeof(fcb));
   06DA 21 00 00           2477 	ld	hl,#0x0000
   06DD 39                 2478 	add	hl,sp
   06DE 4D                 2479 	ld	c,l
   06DF 44                 2480 	ld	b,h
   06E0 21 2E 00           2481 	ld	hl,#0x002E
   06E3 E5                 2482 	push	hl
   06E4 3E 00              2483 	ld	a,#0x00
   06E6 F5                 2484 	push	af
   06E7 33                 2485 	inc	sp
   06E8 C5                 2486 	push	bc
   06E9 CDr00s00           2487 	call	_memset
   06EC F1                 2488 	pop	af
   06ED F1                 2489 	pop	af
   06EE 33                 2490 	inc	sp
                           2491 ;demo.c:229: scratch_clear();
   06EF CDr90s06           2492 	call	_scratch_clear
                           2493 ;demo.c:231: f.record_size = ss;
   06F2 21 00 00           2494 	ld	hl,#0x0000
   06F5 39                 2495 	add	hl,sp
   06F6 4D                 2496 	ld	c,l
   06F7 44                 2497 	ld	b,h
   06F8 21 0F 00           2498 	ld	hl,#0x000F
   06FB 09                 2499 	add	hl,bc
   06FC EB                 2500 	ex	de,hl
   06FD DD 7E 06           2501 	ld	a,6 (ix)
   0700 12                 2502 	ld	(de),a
                           2503 ;demo.c:232: f.drive = 0;
   0701 3E 00              2504 	ld	a,#0x00
   0703 02                 2505 	ld	(bc),a
                           2506 ;demo.c:234: memcpy(f.name, file_name, 11);
   0704 DD 5E 04           2507 	ld	e,4 (ix)
   0707 DD 56 05           2508 	ld	d,5 (ix)
   070A 03                 2509 	inc	bc
   070B 21 0B 00           2510 	ld	hl,#0x000B
   070E E5                 2511 	push	hl
   070F D5                 2512 	push	de
   0710 C5                 2513 	push	bc
   0711 CDr00s00           2514 	call	_memcpy
   0714 F1                 2515 	pop	af
   0715 F1                 2516 	pop	af
   0716 F1                 2517 	pop	af
                           2518 ;demo.c:236: if (open(&f) != 0) return 0;
   0717 21 00 00           2519 	ld	hl,#0x0000
   071A 39                 2520 	add	hl,sp
   071B E5                 2521 	push	hl
   071C CDr00s00           2522 	call	_open
   071F F1                 2523 	pop	af
   0720 AF                 2524 	xor	a,a
   0721 B5                 2525 	or	a,l
   0722 28 04              2526 	jr	Z,00104$
   0724 2E 00              2527 	ld	l,#0x00
   0726 18 40              2528 	jr	00109$
   0728                    2529 00104$:
                           2530 ;demo.c:237: if (block_set_data_ptr(scratch) != 0) return 0;
   0728 21r48s40           2531 	ld	hl,#_scratch
   072B E5                 2532 	push	hl
   072C CDr00s00           2533 	call	_block_set_data_ptr
   072F F1                 2534 	pop	af
   0730 AF                 2535 	xor	a,a
   0731 B5                 2536 	or	a,l
   0732 28 04              2537 	jr	Z,00106$
   0734 2E 00              2538 	ld	l,#0x00
   0736 18 30              2539 	jr	00109$
   0738                    2540 00106$:
                           2541 ;demo.c:238: if (block_read(&f) != 0) return 0;
   0738 21 00 00           2542 	ld	hl,#0x0000
   073B 39                 2543 	add	hl,sp
   073C E5                 2544 	push	hl
   073D CDr00s00           2545 	call	_block_read
   0740 F1                 2546 	pop	af
   0741 AF                 2547 	xor	a,a
   0742 B5                 2548 	or	a,l
   0743 28 04              2549 	jr	Z,00108$
   0745 2E 00              2550 	ld	l,#0x00
   0747 18 1F              2551 	jr	00109$
   0749                    2552 00108$:
                           2553 ;demo.c:240: memcpy(cur_palette, scratch+7, ss);
   0749 DD 4E 06           2554 	ld	c,6 (ix)
   074C 06 00              2555 	ld	b,#0x00
   074E 11r4Fs40           2556 	ld	de,#_scratch + 7
   0751 C5                 2557 	push	bc
   0752 D5                 2558 	push	de
   0753 21rC8s40           2559 	ld	hl,#_cur_palette
   0756 E5                 2560 	push	hl
   0757 CDr00s00           2561 	call	_memcpy
   075A F1                 2562 	pop	af
   075B F1                 2563 	pop	af
   075C F1                 2564 	pop	af
                           2565 ;demo.c:242: close(&f);
   075D 21 00 00           2566 	ld	hl,#0x0000
   0760 39                 2567 	add	hl,sp
   0761 E5                 2568 	push	hl
   0762 CDr00s00           2569 	call	_close
   0765 F1                 2570 	pop	af
                           2571 ;demo.c:243: return 1;
   0766 2E 01              2572 	ld	l,#0x01
   0768                    2573 00109$:
   0768 DD F9              2574 	ld	sp,ix
   076A DD E1              2575 	pop	ix
   076C C9                 2576 	ret
   076D                    2577 _pal_load_end::
   076D                    2578 __str_2:
   076D 6C 6F 61 64 69 6E  2579 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   077E 00                 2580 	.db 0x00
   077F                    2581 __str_3:
   077F 0D                 2582 	.db 0x0D
   0780 0A                 2583 	.db 0x0A
   0781 00                 2584 	.db 0x00
                           2585 ;demo.c:247: void pause() {
                           2586 ;	---------------------------------
                           2587 ; Function pause
                           2588 ; ---------------------------------
   0782                    2589 _pause_start::
   0782                    2590 _pause:
                           2591 ;demo.c:248: uint8_t i,j,k = 0;
                           2592 ;demo.c:249: for (i = 0; i < 255; i++) {	
   0782 01 00 00           2593 	ld	bc,#0x0000
   0785                    2594 00104$:
   0785 78                 2595 	ld	a,b
   0786 D6 FF              2596 	sub	a,#0xFF
   0788 D0                 2597 	ret	NC
                           2598 ;demo.c:250: for (j = 0; j < 255; j++) {
   0789 59                 2599 	ld	e,c
   078A 16 FF              2600 	ld	d,#0xFF
   078C                    2601 00103$:
                           2602 ;demo.c:251: k++;
   078C 1C                 2603 	inc	e
   078D 15                 2604 	dec	d
                           2605 ;demo.c:250: for (j = 0; j < 255; j++) {
   078E AF                 2606 	xor	a,a
   078F B2                 2607 	or	a,d
   0790 20 FA              2608 	jr	NZ,00103$
                           2609 ;demo.c:249: for (i = 0; i < 255; i++) {	
   0792 4B                 2610 	ld	c,e
   0793 04                 2611 	inc	b
   0794 18 EF              2612 	jr	00104$
   0796                    2613 _pause_end::
                           2614 ;demo.c:257: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2615 ;	---------------------------------
                           2616 ; Function raw_load
                           2617 ; ---------------------------------
   0796                    2618 _raw_load_start::
   0796                    2619 _raw_load:
   0796 DD E5              2620 	push	ix
   0798 DD 21 00 00        2621 	ld	ix,#0
   079C DD 39              2622 	add	ix,sp
   079E 21 D2 FF           2623 	ld	hl,#-46
   07A1 39                 2624 	add	hl,sp
   07A2 F9                 2625 	ld	sp,hl
                           2626 ;demo.c:262: if(debugprint == 1) {
   07A3 DD 7E 0A           2627 	ld	a,10 (ix)
   07A6 D6 01              2628 	sub	a,#0x01
   07A8 20 06              2629 	jr	NZ,00120$
   07AA DD 7E 0B           2630 	ld	a,11 (ix)
   07AD B7                 2631 	or	a,a
   07AE 28 02              2632 	jr	Z,00121$
   07B0                    2633 00120$:
   07B0 18 1B              2634 	jr	00102$
   07B2                    2635 00121$:
                           2636 ;demo.c:263: puts("loading rawfile: ");
   07B2 21r84s08           2637 	ld	hl,#__str_4
   07B5 E5                 2638 	push	hl
   07B6 CDr00s00           2639 	call	_puts
   07B9 F1                 2640 	pop	af
                           2641 ;demo.c:264: puts(file_name);
   07BA DD 6E 04           2642 	ld	l,4 (ix)
   07BD DD 66 05           2643 	ld	h,5 (ix)
   07C0 E5                 2644 	push	hl
   07C1 CDr00s00           2645 	call	_puts
   07C4 F1                 2646 	pop	af
                           2647 ;demo.c:265: puts("\r\n");
   07C5 21r96s08           2648 	ld	hl,#__str_5
   07C8 E5                 2649 	push	hl
   07C9 CDr00s00           2650 	call	_puts
   07CC F1                 2651 	pop	af
   07CD                    2652 00102$:
                           2653 ;demo.c:268: memset((uint8_t *) &f, 0, sizeof(fcb));
   07CD 21 00 00           2654 	ld	hl,#0x0000
   07D0 39                 2655 	add	hl,sp
   07D1 4D                 2656 	ld	c,l
   07D2 44                 2657 	ld	b,h
   07D3 21 2E 00           2658 	ld	hl,#0x002E
   07D6 E5                 2659 	push	hl
   07D7 3E 00              2660 	ld	a,#0x00
   07D9 F5                 2661 	push	af
   07DA 33                 2662 	inc	sp
   07DB C5                 2663 	push	bc
   07DC CDr00s00           2664 	call	_memset
   07DF F1                 2665 	pop	af
   07E0 F1                 2666 	pop	af
   07E1 33                 2667 	inc	sp
                           2668 ;demo.c:269: scratch_clear();
   07E2 CDr90s06           2669 	call	_scratch_clear
                           2670 ;demo.c:271: f.record_size = 128;
   07E5 21 00 00           2671 	ld	hl,#0x0000
   07E8 39                 2672 	add	hl,sp
   07E9 4D                 2673 	ld	c,l
   07EA 44                 2674 	ld	b,h
   07EB 21 0F 00           2675 	ld	hl,#0x000F
   07EE 09                 2676 	add	hl,bc
   07EF EB                 2677 	ex	de,hl
   07F0 3E 80              2678 	ld	a,#0x80
   07F2 12                 2679 	ld	(de),a
                           2680 ;demo.c:272: f.drive = 0;
   07F3 3E 00              2681 	ld	a,#0x00
   07F5 02                 2682 	ld	(bc),a
                           2683 ;demo.c:274: memcpy(f.name, file_name, 11);
   07F6 DD 5E 04           2684 	ld	e,4 (ix)
   07F9 DD 56 05           2685 	ld	d,5 (ix)
   07FC 03                 2686 	inc	bc
   07FD 21 0B 00           2687 	ld	hl,#0x000B
   0800 E5                 2688 	push	hl
   0801 D5                 2689 	push	de
   0802 C5                 2690 	push	bc
   0803 CDr00s00           2691 	call	_memcpy
   0806 F1                 2692 	pop	af
   0807 F1                 2693 	pop	af
   0808 F1                 2694 	pop	af
                           2695 ;demo.c:276: if (open(&f) != 0) return 0;
   0809 21 00 00           2696 	ld	hl,#0x0000
   080C 39                 2697 	add	hl,sp
   080D E5                 2698 	push	hl
   080E CDr00s00           2699 	call	_open
   0811 F1                 2700 	pop	af
   0812 AF                 2701 	xor	a,a
   0813 B5                 2702 	or	a,l
   0814 28 05              2703 	jr	Z,00119$
   0816 2E 00              2704 	ld	l,#0x00
   0818 C3r7Fs08           2705 	jp	00112$
                           2706 ;demo.c:278: while(total < size) {
   081B                    2707 00119$:
   081B 01 00 00           2708 	ld	bc,#0x0000
   081E                    2709 00109$:
   081E 79                 2710 	ld	a,c
   081F DD 96 06           2711 	sub	a,6 (ix)
   0822 78                 2712 	ld	a,b
   0823 DD 9E 07           2713 	sbc	a,7 (ix)
   0826 F2r74s08           2714 	jp	P,00111$
                           2715 ;demo.c:279: if (block_set_data_ptr(scratch) != 0) return 0;
   0829 C5                 2716 	push	bc
   082A 21r48s40           2717 	ld	hl,#_scratch
   082D E5                 2718 	push	hl
   082E CDr00s00           2719 	call	_block_set_data_ptr
   0831 F1                 2720 	pop	af
   0832 5D                 2721 	ld	e,l
   0833 C1                 2722 	pop	bc
   0834 AF                 2723 	xor	a,a
   0835 B3                 2724 	or	a,e
   0836 28 04              2725 	jr	Z,00106$
   0838 2E 00              2726 	ld	l,#0x00
   083A 18 43              2727 	jr	00112$
   083C                    2728 00106$:
                           2729 ;demo.c:280: if (block_read(&f) != 0) return 0;
   083C 21 00 00           2730 	ld	hl,#0x0000
   083F 39                 2731 	add	hl,sp
   0840 C5                 2732 	push	bc
   0841 E5                 2733 	push	hl
   0842 CDr00s00           2734 	call	_block_read
   0845 F1                 2735 	pop	af
   0846 5D                 2736 	ld	e,l
   0847 C1                 2737 	pop	bc
   0848 AF                 2738 	xor	a,a
   0849 B3                 2739 	or	a,e
   084A 28 04              2740 	jr	Z,00108$
   084C 2E 00              2741 	ld	l,#0x00
   084E 18 2F              2742 	jr	00112$
   0850                    2743 00108$:
                           2744 ;demo.c:282: memcpy(buffer+total,scratch,incr);
   0850 DD 7E 08           2745 	ld	a,8 (ix)
   0853 81                 2746 	add	a,c
   0854 5F                 2747 	ld	e,a
   0855 DD 7E 09           2748 	ld	a,9 (ix)
   0858 88                 2749 	adc	a,b
   0859 57                 2750 	ld	d,a
   085A C5                 2751 	push	bc
   085B 21 80 00           2752 	ld	hl,#0x0080
   085E E5                 2753 	push	hl
   085F 21r48s40           2754 	ld	hl,#_scratch
   0862 E5                 2755 	push	hl
   0863 D5                 2756 	push	de
   0864 CDr00s00           2757 	call	_memcpy
   0867 F1                 2758 	pop	af
   0868 F1                 2759 	pop	af
   0869 F1                 2760 	pop	af
   086A C1                 2761 	pop	bc
                           2762 ;demo.c:284: total+=incr;
   086B 21 80 00           2763 	ld	hl,#0x0080
   086E 09                 2764 	add	hl,bc
   086F 4D                 2765 	ld	c,l
   0870 44                 2766 	ld	b,h
   0871 C3r1Es08           2767 	jp	00109$
   0874                    2768 00111$:
                           2769 ;demo.c:287: close(&f);
   0874 21 00 00           2770 	ld	hl,#0x0000
   0877 39                 2771 	add	hl,sp
   0878 E5                 2772 	push	hl
   0879 CDr00s00           2773 	call	_close
   087C F1                 2774 	pop	af
                           2775 ;demo.c:289: return 1;
   087D 2E 01              2776 	ld	l,#0x01
   087F                    2777 00112$:
   087F DD F9              2778 	ld	sp,ix
   0881 DD E1              2779 	pop	ix
   0883 C9                 2780 	ret
   0884                    2781 _raw_load_end::
   0884                    2782 __str_4:
   0884 6C 6F 61 64 69 6E  2783 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0895 00                 2784 	.db 0x00
   0896                    2785 __str_5:
   0896 0D                 2786 	.db 0x0D
   0897 0A                 2787 	.db 0x0A
   0898 00                 2788 	.db 0x00
                           2789 ;demo.c:292: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2790 ;	---------------------------------
                           2791 ; Function pck_load
                           2792 ; ---------------------------------
   0899                    2793 _pck_load_start::
   0899                    2794 _pck_load:
   0899 DD E5              2795 	push	ix
   089B DD 21 00 00        2796 	ld	ix,#0
   089F DD 39              2797 	add	ix,sp
                           2798 ;demo.c:293: if(debugprint == 1) {
   08A1 DD 7E 0C           2799 	ld	a,12 (ix)
   08A4 D6 01              2800 	sub	a,#0x01
   08A6 20 06              2801 	jr	NZ,00106$
   08A8 DD 7E 0D           2802 	ld	a,13 (ix)
   08AB B7                 2803 	or	a,a
   08AC 28 02              2804 	jr	Z,00107$
   08AE                    2805 00106$:
   08AE 18 1B              2806 	jr	00102$
   08B0                    2807 00107$:
                           2808 ;demo.c:294: puts("loading pckfile: ");
   08B0 21r12s09           2809 	ld	hl,#__str_6
   08B3 E5                 2810 	push	hl
   08B4 CDr00s00           2811 	call	_puts
   08B7 F1                 2812 	pop	af
                           2813 ;demo.c:295: puts(file_name);
   08B8 DD 6E 04           2814 	ld	l,4 (ix)
   08BB DD 66 05           2815 	ld	h,5 (ix)
   08BE E5                 2816 	push	hl
   08BF CDr00s00           2817 	call	_puts
   08C2 F1                 2818 	pop	af
                           2819 ;demo.c:296: puts("\r\n");
   08C3 21r24s09           2820 	ld	hl,#__str_7
   08C6 E5                 2821 	push	hl
   08C7 CDr00s00           2822 	call	_puts
   08CA F1                 2823 	pop	af
   08CB                    2824 00102$:
                           2825 ;demo.c:298: memset((uint8_t *) &packbuffer, 0, size);
   08CB DD 4E 06           2826 	ld	c,6 (ix)
   08CE DD 46 07           2827 	ld	b,7 (ix)
   08D1 C5                 2828 	push	bc
   08D2 C5                 2829 	push	bc
   08D3 3E 00              2830 	ld	a,#0x00
   08D5 F5                 2831 	push	af
   08D6 33                 2832 	inc	sp
   08D7 21rC8s01           2833 	ld	hl,#_packbuffer
   08DA E5                 2834 	push	hl
   08DB CDr00s00           2835 	call	_memset
   08DE F1                 2836 	pop	af
   08DF F1                 2837 	pop	af
   08E0 33                 2838 	inc	sp
   08E1 C1                 2839 	pop	bc
                           2840 ;demo.c:299: raw_load(file_name, size, packbuffer,0);
   08E2 21 00 00           2841 	ld	hl,#0x0000
   08E5 E5                 2842 	push	hl
   08E6 21rC8s01           2843 	ld	hl,#_packbuffer
   08E9 E5                 2844 	push	hl
   08EA C5                 2845 	push	bc
   08EB DD 6E 04           2846 	ld	l,4 (ix)
   08EE DD 66 05           2847 	ld	h,5 (ix)
   08F1 E5                 2848 	push	hl
   08F2 CDr96s07           2849 	call	_raw_load
   08F5 F1                 2850 	pop	af
   08F6 F1                 2851 	pop	af
   08F7 F1                 2852 	pop	af
   08F8 F1                 2853 	pop	af
                           2854 ;demo.c:300: bitbuster(packbuffer,address,vram_offset);
   08F9 DD 7E 0A           2855 	ld	a,10 (ix)
   08FC F5                 2856 	push	af
   08FD 33                 2857 	inc	sp
   08FE DD 6E 08           2858 	ld	l,8 (ix)
   0901 DD 66 09           2859 	ld	h,9 (ix)
   0904 E5                 2860 	push	hl
   0905 21rC8s01           2861 	ld	hl,#_packbuffer
   0908 E5                 2862 	push	hl
   0909 CDr00s00           2863 	call	_bitbuster
   090C F1                 2864 	pop	af
   090D F1                 2865 	pop	af
   090E 33                 2866 	inc	sp
   090F DD E1              2867 	pop	ix
   0911 C9                 2868 	ret
   0912                    2869 _pck_load_end::
   0912                    2870 __str_6:
   0912 6C 6F 61 64 69 6E  2871 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0923 00                 2872 	.db 0x00
   0924                    2873 __str_7:
   0924 0D                 2874 	.db 0x0D
   0925 0A                 2875 	.db 0x0A
   0926 00                 2876 	.db 0x00
                           2877 ;demo.c:303: void fadein() {
                           2878 ;	---------------------------------
                           2879 ; Function fadein
                           2880 ; ---------------------------------
   0927                    2881 _fadein_start::
   0927                    2882 _fadein:
   0927 DD E5              2883 	push	ix
   0929 DD 21 00 00        2884 	ld	ix,#0
   092D DD 39              2885 	add	ix,sp
   092F F5                 2886 	push	af
                           2887 ;demo.c:306: if (tick < 8) return;
   0930 3Ar8As41           2888 	ld	a,(#_tick+0)
   0933 D6 08              2889 	sub	a,#0x08
   0935 3Ar8Bs41           2890 	ld	a,(#_tick+1)
   0938 DE 00              2891 	sbc	a,#0x00
   093A F2r40s09           2892 	jp	P,00102$
   093D C3rEEs09           2893 	jp	00113$
   0940                    2894 00102$:
                           2895 ;demo.c:308: tick = 0;
   0940 21r8As41           2896 	ld	hl,#_tick + 0
   0943 36 00              2897 	ld	(hl), #0x00
   0945 21r8Bs41           2898 	ld	hl,#_tick + 1
   0948 36 00              2899 	ld	(hl), #0x00
                           2900 ;demo.c:310: for(i = 0; i < 32; i+=2) {
   094A 0E 00              2901 	ld	c,#0x00
   094C                    2902 00109$:
   094C 79                 2903 	ld	a,c
   094D D6 20              2904 	sub	a,#0x20
   094F D2rE6s09           2905 	jp	NC,00112$
                           2906 ;demo.c:311: uint8_t r = scratch[i] >> 4;
   0952 3Er48              2907 	ld	a,#<_scratch
   0954 81                 2908 	add	a,c
   0955 5F                 2909 	ld	e,a
   0956 3Es40              2910 	ld	a,#>_scratch
   0958 CE 00              2911 	adc	a,#0x00
   095A 57                 2912 	ld	d,a
   095B 1A                 2913 	ld	a,(de)
   095C 47                 2914 	ld	b,a
   095D 58                 2915 	ld	e,b
   095E CB 3B              2916 	srl	e
   0960 CB 3B              2917 	srl	e
   0962 CB 3B              2918 	srl	e
   0964 CB 3B              2919 	srl	e
                           2920 ;demo.c:312: uint8_t b = scratch[i] & 0xf;
   0966 78                 2921 	ld	a,b
   0967 E6 0F              2922 	and	a,#0x0F
   0969 DD 77 FF           2923 	ld	-1 (ix),a
                           2924 ;demo.c:313: uint8_t g = scratch[i+1];
   096C 51                 2925 	ld	d,c
   096D 14                 2926 	inc	d
   096E 3Er48              2927 	ld	a,#<_scratch
   0970 82                 2928 	add	a,d
   0971 6F                 2929 	ld	l,a
   0972 3Es40              2930 	ld	a,#>_scratch
   0974 CE 00              2931 	adc	a,#0x00
   0976 67                 2932 	ld	h,a
   0977 56                 2933 	ld	d,(hl)
   0978 DD 72 FE           2934 	ld	-2 (ix),d
                           2935 ;demo.c:315: if (r < (cur_palette[i] >> 4)) r++;
   097B 3ErC8              2936 	ld	a,#<_cur_palette
   097D 81                 2937 	add	a,c
   097E 6F                 2938 	ld	l,a
   097F 3Es40              2939 	ld	a,#>_cur_palette
   0981 CE 00              2940 	adc	a,#0x00
   0983 67                 2941 	ld	h,a
   0984 56                 2942 	ld	d,(hl)
   0985 CB 3A              2943 	srl	d
   0987 CB 3A              2944 	srl	d
   0989 CB 3A              2945 	srl	d
   098B CB 3A              2946 	srl	d
   098D 7B                 2947 	ld	a,e
   098E 92                 2948 	sub	a,d
   098F 30 01              2949 	jr	NC,00104$
   0991 1C                 2950 	inc	e
   0992                    2951 00104$:
                           2952 ;demo.c:316: if (b < (cur_palette[i] & 0xf)) b++;
   0992 3ErC8              2953 	ld	a,#<_cur_palette
   0994 81                 2954 	add	a,c
   0995 6F                 2955 	ld	l,a
   0996 3Es40              2956 	ld	a,#>_cur_palette
   0998 CE 00              2957 	adc	a,#0x00
   099A 67                 2958 	ld	h,a
   099B 7E                 2959 	ld	a,(hl)
   099C E6 0F              2960 	and	a,#0x0F
   099E 47                 2961 	ld	b,a
   099F DD 7E FF           2962 	ld	a,-1 (ix)
   09A2 90                 2963 	sub	a,b
   09A3 30 03              2964 	jr	NC,00106$
   09A5 DD 34 FF           2965 	inc	-1 (ix)
   09A8                    2966 00106$:
                           2967 ;demo.c:318: scratch[i] = (r << 4) | b;
   09A8 3Er48              2968 	ld	a,#<_scratch
   09AA 81                 2969 	add	a,c
   09AB 47                 2970 	ld	b,a
   09AC 3Es40              2971 	ld	a,#>_scratch
   09AE CE 00              2972 	adc	a,#0x00
   09B0 57                 2973 	ld	d,a
   09B1 7B                 2974 	ld	a,e
   09B2 07                 2975 	rlca
   09B3 07                 2976 	rlca
   09B4 07                 2977 	rlca
   09B5 07                 2978 	rlca
   09B6 E6 F0              2979 	and	a,#0xF0
   09B8 DD B6 FF           2980 	or	a,-1 (ix)
   09BB 68                 2981 	ld	l,b
   09BC 62                 2982 	ld	h,d
   09BD 77                 2983 	ld	(hl),a
                           2984 ;demo.c:319: if (g < cur_palette[i+1]) scratch[i+1]++;
   09BE 41                 2985 	ld	b,c
   09BF 04                 2986 	inc	b
   09C0 3ErC8              2987 	ld	a,#<_cur_palette
   09C2 80                 2988 	add	a,b
   09C3 5F                 2989 	ld	e,a
   09C4 3Es40              2990 	ld	a,#>_cur_palette
   09C6 CE 00              2991 	adc	a,#0x00
   09C8 57                 2992 	ld	d,a
   09C9 1A                 2993 	ld	a,(de)
   09CA 5F                 2994 	ld	e,a
   09CB DD 7E FE           2995 	ld	a,-2 (ix)
   09CE 93                 2996 	sub	a,e
   09CF 30 10              2997 	jr	NC,00111$
   09D1 3Er48              2998 	ld	a,#<_scratch
   09D3 80                 2999 	add	a,b
   09D4 47                 3000 	ld	b,a
   09D5 3Es40              3001 	ld	a,#>_scratch
   09D7 CE 00              3002 	adc	a,#0x00
   09D9 5F                 3003 	ld	e,a
   09DA 68                 3004 	ld	l,b
   09DB 67                 3005 	ld	h,a
   09DC 7E                 3006 	ld	a,(hl)
   09DD 3C                 3007 	inc	a
   09DE 68                 3008 	ld	l,b
   09DF 63                 3009 	ld	h,e
   09E0 77                 3010 	ld	(hl),a
   09E1                    3011 00111$:
                           3012 ;demo.c:310: for(i = 0; i < 32; i+=2) {
   09E1 0C                 3013 	inc	c
   09E2 0C                 3014 	inc	c
   09E3 C3r4Cs09           3015 	jp	00109$
   09E6                    3016 00112$:
                           3017 ;demo.c:323: vdp_load_palette(scratch);
   09E6 21r48s40           3018 	ld	hl,#_scratch
   09E9 E5                 3019 	push	hl
   09EA CDr00s00           3020 	call	_vdp_load_palette
   09ED F1                 3021 	pop	af
   09EE                    3022 00113$:
   09EE DD F9              3023 	ld	sp,ix
   09F0 DD E1              3024 	pop	ix
   09F2 C9                 3025 	ret
   09F3                    3026 _fadein_end::
                           3027 ;demo.c:335: void do_ymmm() {
                           3028 ;	---------------------------------
                           3029 ; Function do_ymmm
                           3030 ; ---------------------------------
   09F3                    3031 _do_ymmm_start::
   09F3                    3032 _do_ymmm:
   09F3 DD E5              3033 	push	ix
   09F5 DD 21 00 00        3034 	ld	ix,#0
   09F9 DD 39              3035 	add	ix,sp
   09FB F5                 3036 	push	af
                           3037 ;demo.c:339: if (tick > 32) { tick = 0; flipper++;}
   09FC 3E 20              3038 	ld	a,#0x20
   09FE FD 21r8As41        3039 	ld	iy,#_tick
   0A02 FD 96 00           3040 	sub	a,0 (iy)
   0A05 3E 00              3041 	ld	a,#0x00
   0A07 FD 21r8As41        3042 	ld	iy,#_tick
   0A0B FD 9E 01           3043 	sbc	a,1 (iy)
   0A0E F2r2Bs0A           3044 	jp	P,00102$
   0A11 21r8As41           3045 	ld	hl,#_tick + 0
   0A14 36 00              3046 	ld	(hl), #0x00
   0A16 21r8Bs41           3047 	ld	hl,#_tick + 1
   0A19 36 00              3048 	ld	(hl), #0x00
   0A1B FD 21rA5s41        3049 	ld	iy,#_flipper
   0A1F FD 34 00           3050 	inc	0 (iy)
   0A22 20 07              3051 	jr	NZ,00115$
   0A24 FD 21rA5s41        3052 	ld	iy,#_flipper
   0A28 FD 34 01           3053 	inc	1 (iy)
   0A2B                    3054 00115$:
   0A2B                    3055 00102$:
                           3056 ;demo.c:340: if (flipper > 10) { flipper = 0;}
   0A2B 3E 0A              3057 	ld	a,#0x0A
   0A2D FD 21rA5s41        3058 	ld	iy,#_flipper
   0A31 FD 96 00           3059 	sub	a,0 (iy)
   0A34 3E 00              3060 	ld	a,#0x00
   0A36 FD 21rA5s41        3061 	ld	iy,#_flipper
   0A3A FD 9E 01           3062 	sbc	a,1 (iy)
   0A3D F2r4As0A           3063 	jp	P,00104$
   0A40 21rA5s41           3064 	ld	hl,#_flipper + 0
   0A43 36 00              3065 	ld	(hl), #0x00
   0A45 21rA6s41           3066 	ld	hl,#_flipper + 1
   0A48 36 00              3067 	ld	(hl), #0x00
   0A4A                    3068 00104$:
                           3069 ;demo.c:342: ymmmf++;
   0A4A FD 21rA7s41        3070 	ld	iy,#_ymmmf
   0A4E FD 34 00           3071 	inc	0 (iy)
   0A51 20 07              3072 	jr	NZ,00116$
   0A53 FD 21rA7s41        3073 	ld	iy,#_ymmmf
   0A57 FD 34 01           3074 	inc	1 (iy)
   0A5A                    3075 00116$:
                           3076 ;demo.c:343: for (yofff = 0; yofff<212-step;yofff+=step) {
   0A5A 21rA3s41           3077 	ld	hl,#_yofff + 0
   0A5D 36 00              3078 	ld	(hl), #0x00
   0A5F                    3079 00105$:
   0A5F 21rA3s41           3080 	ld	hl,#_yofff + 0
   0A62 4E                 3081 	ld	c,(hl)
   0A63 06 00              3082 	ld	b,#0x00
   0A65 79                 3083 	ld	a,c
   0A66 D6 D2              3084 	sub	a,#0xD2
   0A68 78                 3085 	ld	a,b
   0A69 DE 00              3086 	sbc	a,#0x00
   0A6B F2rDFs0A           3087 	jp	P,00109$
                           3088 ;demo.c:344: xo = (sintabx[(yofff+ymmmf) & 255]);
   0A6E 21rA7s41           3089 	ld	hl,#_ymmmf
   0A71 79                 3090 	ld	a,c
   0A72 86                 3091 	add	a,(hl)
   0A73 5F                 3092 	ld	e,a
   0A74 78                 3093 	ld	a,b
   0A75 23                 3094 	inc	hl
   0A76 8E                 3095 	adc	a,(hl)
   0A77 16 00              3096 	ld	d,#0x00
   0A79 21r2Cs00           3097 	ld	hl,#_sintabx
   0A7C 19                 3098 	add	hl,de
   0A7D 7E                 3099 	ld	a,(hl)
   0A7E DD 77 FE           3100 	ld	-2 (ix),a
   0A81 DD 36 FF 00        3101 	ld	-1 (ix),#0x00
                           3102 ;demo.c:347: cmd.source_x = 0;
   0A85 21r8Cs41           3103 	ld	hl,#_cmd
   0A88 36 00              3104 	ld	(hl),#0x00
   0A8A 23                 3105 	inc	hl
   0A8B 36 00              3106 	ld	(hl),#0x00
                           3107 ;demo.c:348: cmd.source_y = 0+yofff;
   0A8D 11r8Es41           3108 	ld	de,#_cmd + 2
   0A90 EB                 3109 	ex	de,hl
   0A91 71                 3110 	ld	(hl),c
   0A92 23                 3111 	inc	hl
   0A93 70                 3112 	ld	(hl),b
                           3113 ;demo.c:349: cmd.dest_x = xo;
   0A94 11r90s41           3114 	ld	de,#_cmd + 4
   0A97 EB                 3115 	ex	de,hl
   0A98 DD 7E FE           3116 	ld	a,-2 (ix)
   0A9B 77                 3117 	ld	(hl),a
   0A9C 23                 3118 	inc	hl
   0A9D DD 7E FF           3119 	ld	a,-1 (ix)
   0AA0 77                 3120 	ld	(hl),a
                           3121 ;demo.c:350: cmd.dest_y = 3+yofff;
   0AA1 11r92s41           3122 	ld	de,#_cmd + 6
   0AA4 03                 3123 	inc	bc
   0AA5 03                 3124 	inc	bc
   0AA6 03                 3125 	inc	bc
   0AA7 6B                 3126 	ld	l,e
   0AA8 62                 3127 	ld	h,d
   0AA9 71                 3128 	ld	(hl),c
   0AAA 23                 3129 	inc	hl
   0AAB 70                 3130 	ld	(hl),b
                           3131 ;demo.c:351: cmd.size_x = 256;
   0AAC 21r94s41           3132 	ld	hl, #_cmd + 8
   0AAF 36 00              3133 	ld	(hl),#0x00
   0AB1 23                 3134 	inc	hl
   0AB2 36 01              3135 	ld	(hl),#0x01
                           3136 ;demo.c:352: cmd.size_y = 1;
   0AB4 21r96s41           3137 	ld	hl, #_cmd + 10
   0AB7 36 01              3138 	ld	(hl),#0x01
   0AB9 23                 3139 	inc	hl
   0ABA 36 00              3140 	ld	(hl),#0x00
                           3141 ;demo.c:353: cmd.data = 0;
                           3142 ;demo.c:354: cmd.argument = 0;
   0ABC 3E 00              3143 	ld	a,#0x00
   0ABE 32r98s41           3144 	ld	(#_cmd + 12),a
   0AC1 32r99s41           3145 	ld	(#_cmd + 13),a
                           3146 ;demo.c:355: cmd.command = 0xD0;
   0AC4 3E D0              3147 	ld	a,#0xD0
   0AC6 32r9As41           3148 	ld	(#_cmd + 14),a
                           3149 ;demo.c:358: vdp_copier(&cmd);
   0AC9 21r8Cs41           3150 	ld	hl,#_cmd
   0ACC E5                 3151 	push	hl
   0ACD CDr00s00           3152 	call	_vdp_copier
   0AD0 F1                 3153 	pop	af
                           3154 ;demo.c:343: for (yofff = 0; yofff<212-step;yofff+=step) {
   0AD1 21rA3s41           3155 	ld	hl,#_yofff + 0
   0AD4 4E                 3156 	ld	c,(hl)
   0AD5 21rA3s41           3157 	ld	hl,#_yofff
   0AD8 79                 3158 	ld	a,c
   0AD9 C6 02              3159 	add	a,#0x02
   0ADB 77                 3160 	ld	(hl),a
   0ADC C3r5Fs0A           3161 	jp	00105$
   0ADF                    3162 00109$:
   0ADF DD F9              3163 	ld	sp,ix
   0AE1 DD E1              3164 	pop	ix
   0AE3 C9                 3165 	ret
   0AE4                    3166 _do_ymmm_end::
                           3167 ;demo.c:375: void do_blocks() {
                           3168 ;	---------------------------------
                           3169 ; Function do_blocks
                           3170 ; ---------------------------------
   0AE4                    3171 _do_blocks_start::
   0AE4                    3172 _do_blocks:
   0AE4 DD E5              3173 	push	ix
   0AE6 DD 21 00 00        3174 	ld	ix,#0
   0AEA DD 39              3175 	add	ix,sp
   0AEC 21 FA FF           3176 	ld	hl,#-6
   0AEF 39                 3177 	add	hl,sp
   0AF0 F9                 3178 	ld	sp,hl
                           3179 ;demo.c:377: int ys = 0;
   0AF1 DD 36 FC 00        3180 	ld	-4 (ix),#0x00
   0AF5 DD 36 FD 00        3181 	ld	-3 (ix),#0x00
                           3182 ;demo.c:378: int ye = 0;
   0AF9 DD 36 FA 00        3183 	ld	-6 (ix),#0x00
   0AFD DD 36 FB 00        3184 	ld	-5 (ix),#0x00
                           3185 ;demo.c:380: vdp_register(VDP_VOFFSET,0);
   0B01 21 17 00           3186 	ld	hl,#0x0017
   0B04 E5                 3187 	push	hl
   0B05 CDr00s00           3188 	call	_vdp_register
   0B08 F1                 3189 	pop	af
                           3190 ;demo.c:382: if (block_init == 0) {
   0B09 AF                 3191 	xor	a,a
   0B0A FD 21rA9s41        3192 	ld	iy,#_block_init
   0B0E FD B6 00           3193 	or	a,0 (iy)
   0B11 C2r79s0B           3194 	jp	NZ,00108$
                           3195 ;demo.c:384: vdp_set_screen5();
   0B14 CDr00s00           3196 	call	_vdp_set_screen5
                           3197 ;demo.c:386: vdp_register(2, 0x5F);
   0B17 21 02 5F           3198 	ld	hl,#0x5F02
   0B1A E5                 3199 	push	hl
   0B1B CDr00s00           3200 	call	_vdp_register
   0B1E F1                 3201 	pop	af
                           3202 ;demo.c:388: for(i=0;i<16;i++) btab[i] = i*16;
   0B1F DD 36 FE 00        3203 	ld	-2 (ix),#0x00
   0B23 DD 36 FF 00        3204 	ld	-1 (ix),#0x00
   0B27                    3205 00110$:
   0B27 DD 7E FE           3206 	ld	a,-2 (ix)
   0B2A D6 10              3207 	sub	a,#0x10
   0B2C DD 7E FF           3208 	ld	a,-1 (ix)
   0B2F DE 00              3209 	sbc	a,#0x00
   0B31 F2r69s0B           3210 	jp	P,00113$
   0B34 DD 4E FE           3211 	ld	c,-2 (ix)
   0B37 DD 46 FF           3212 	ld	b,-1 (ix)
   0B3A CB 21              3213 	sla	c
   0B3C CB 10              3214 	rl	b
   0B3E 21rB2s41           3215 	ld	hl,#_btab
   0B41 09                 3216 	add	hl,bc
   0B42 4D                 3217 	ld	c,l
   0B43 44                 3218 	ld	b,h
   0B44 DD 5E FE           3219 	ld	e,-2 (ix)
   0B47 DD 56 FF           3220 	ld	d,-1 (ix)
   0B4A CB 23              3221 	sla	e
   0B4C CB 12              3222 	rl	d
   0B4E CB 23              3223 	sla	e
   0B50 CB 12              3224 	rl	d
   0B52 CB 23              3225 	sla	e
   0B54 CB 12              3226 	rl	d
   0B56 CB 23              3227 	sla	e
   0B58 CB 12              3228 	rl	d
   0B5A 69                 3229 	ld	l,c
   0B5B 60                 3230 	ld	h,b
   0B5C 73                 3231 	ld	(hl),e
   0B5D 23                 3232 	inc	hl
   0B5E 72                 3233 	ld	(hl),d
   0B5F DD 34 FE           3234 	inc	-2 (ix)
   0B62 20 03              3235 	jr	NZ,00139$
   0B64 DD 34 FF           3236 	inc	-1 (ix)
   0B67                    3237 00139$:
   0B67 18 BE              3238 	jr	00110$
   0B69                    3239 00113$:
                           3240 ;demo.c:389: vdp_load_palette(block_palette);
   0B69 21r08s41           3241 	ld	hl,#_block_palette
   0B6C E5                 3242 	push	hl
   0B6D CDr00s00           3243 	call	_vdp_load_palette
   0B70 F1                 3244 	pop	af
                           3245 ;demo.c:391: block_init = 1;
   0B71 21rA9s41           3246 	ld	hl,#_block_init + 0
   0B74 36 01              3247 	ld	(hl), #0x01
   0B76 C3r02s0D           3248 	jp	00122$
   0B79                    3249 00108$:
                           3250 ;demo.c:395: if (flof == 0) { ys = 0; ye = 8; }
   0B79 3ArD2s41           3251 	ld	a,(#_flof+0)
   0B7C FD 21rD2s41        3252 	ld	iy,#_flof
   0B80 FD B6 01           3253 	or	a,1 (iy)
   0B83 20 10              3254 	jr	NZ,00102$
   0B85 DD 36 FC 00        3255 	ld	-4 (ix),#0x00
   0B89 DD 36 FD 00        3256 	ld	-3 (ix),#0x00
   0B8D DD 36 FA 08        3257 	ld	-6 (ix),#0x08
   0B91 DD 36 FB 00        3258 	ld	-5 (ix),#0x00
   0B95                    3259 00102$:
                           3260 ;demo.c:396: if (flof == 1) { ys = 8; ye = 16; }
   0B95 3ArD2s41           3261 	ld	a,(#_flof+0)
   0B98 D6 01              3262 	sub	a,#0x01
   0B9A 20 06              3263 	jr	NZ,00140$
   0B9C 3ArD3s41           3264 	ld	a,(#_flof+1)
   0B9F B7                 3265 	or	a,a
   0BA0 28 02              3266 	jr	Z,00141$
   0BA2                    3267 00140$:
   0BA2 18 10              3268 	jr	00104$
   0BA4                    3269 00141$:
   0BA4 DD 36 FC 08        3270 	ld	-4 (ix),#0x08
   0BA8 DD 36 FD 00        3271 	ld	-3 (ix),#0x00
   0BAC DD 36 FA 10        3272 	ld	-6 (ix),#0x10
   0BB0 DD 36 FB 00        3273 	ld	-5 (ix),#0x00
   0BB4                    3274 00104$:
                           3275 ;demo.c:398: for(bty=3;bty<11;bty++) {
   0BB4 FD 21rB0s41        3276 	ld	iy,#_bty
   0BB8 FD 36 00 03        3277 	ld	0 (iy),#0x03
   0BBC FD 21rB0s41        3278 	ld	iy,#_bty
   0BC0 FD 36 01 00        3279 	ld	1 (iy),#0x00
   0BC4                    3280 00118$:
   0BC4 3ArB0s41           3281 	ld	a,(#_bty+0)
   0BC7 D6 0B              3282 	sub	a,#0x0B
   0BC9 3ArB1s41           3283 	ld	a,(#_bty+1)
   0BCC DE 00              3284 	sbc	a,#0x00
   0BCE F2rD9s0C           3285 	jp	P,00121$
                           3286 ;demo.c:399: for(btx=ys;btx<ye;btx++) {
   0BD1 DD 7E FC           3287 	ld	a,-4 (ix)
   0BD4 FD 21rAEs41        3288 	ld	iy,#_btx
   0BD8 FD 77 00           3289 	ld	0 (iy),a
   0BDB DD 7E FD           3290 	ld	a,-3 (ix)
   0BDE FD 21rAEs41        3291 	ld	iy,#_btx
   0BE2 FD 77 01           3292 	ld	1 (iy),a
   0BE5                    3293 00114$:
   0BE5 3ArAEs41           3294 	ld	a,(#_btx+0)
   0BE8 DD 96 FA           3295 	sub	a,-6 (ix)
   0BEB 3ArAFs41           3296 	ld	a,(#_btx+1)
   0BEE DD 9E FB           3297 	sbc	a,-5 (ix)
   0BF1 F2rC6s0C           3298 	jp	P,00120$
                           3299 ;demo.c:400: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0BF4 3Ar00s00           3300 	ld	a,(#_PLY_PSGReg8+0)
   0BF7 FD 21r00s00        3301 	ld	iy,#_PLY_PSGReg9
   0BFB FD A6 00           3302 	and	a,0 (iy)
   0BFE 21r00s00           3303 	ld	hl,#_PLY_PSGReg10 + 0
   0C01 B6                 3304 	or	a,(hl)
   0C02 4F                 3305 	ld	c,a
   0C03 CB 39              3306 	srl	c
   0C05 21rAAs41           3307 	ld	hl,#_bsx + 0
   0C08 71                 3308 	ld	(hl), c
   0C09 21rABs41           3309 	ld	hl,#_bsx + 1
   0C0C 36 00              3310 	ld	(hl), #0x00
                           3311 ;demo.c:401: bsy = PLY_PSGReg10;
   0C0E 3Ar00s00           3312 	ld	a,(#_PLY_PSGReg10+0)
   0C11 21rACs41           3313 	ld	hl,#_bsy + 0
   0C14 77                 3314 	ld	(hl), a
   0C15 21rADs41           3315 	ld	hl,#_bsy + 1
   0C18 36 00              3316 	ld	(hl), #0x00
                           3317 ;demo.c:402: cmd.source_x = btab[bsx];
   0C1A 21rAAs41           3318 	ld	hl,#_bsx + 0
   0C1D 4E                 3319 	ld	c,(hl)
   0C1E 21rABs41           3320 	ld	hl,#_bsx + 1
   0C21 46                 3321 	ld	b,(hl)
   0C22 CB 21              3322 	sla	c
   0C24 CB 10              3323 	rl	b
   0C26 21rB2s41           3324 	ld	hl,#_btab
   0C29 09                 3325 	add	hl,bc
   0C2A 4E                 3326 	ld	c,(hl)
   0C2B 23                 3327 	inc	hl
   0C2C 46                 3328 	ld	b,(hl)
   0C2D 21r8Cs41           3329 	ld	hl,#_cmd
   0C30 71                 3330 	ld	(hl),c
   0C31 23                 3331 	inc	hl
   0C32 70                 3332 	ld	(hl),b
                           3333 ;demo.c:403: cmd.source_y = 768+btab[bsy];
   0C33 01r8Es41           3334 	ld	bc,#_cmd + 2
   0C36 21rACs41           3335 	ld	hl,#_bsy + 0
   0C39 5E                 3336 	ld	e,(hl)
   0C3A 21rADs41           3337 	ld	hl,#_bsy + 1
   0C3D 56                 3338 	ld	d,(hl)
   0C3E CB 23              3339 	sla	e
   0C40 CB 12              3340 	rl	d
   0C42 21rB2s41           3341 	ld	hl,#_btab
   0C45 19                 3342 	add	hl,de
   0C46 5E                 3343 	ld	e,(hl)
   0C47 23                 3344 	inc	hl
   0C48 56                 3345 	ld	d,(hl)
   0C49 21 00 03           3346 	ld	hl,#0x0300
   0C4C 19                 3347 	add	hl,de
   0C4D EB                 3348 	ex	de,hl
   0C4E 69                 3349 	ld	l,c
   0C4F 60                 3350 	ld	h,b
   0C50 73                 3351 	ld	(hl),e
   0C51 23                 3352 	inc	hl
   0C52 72                 3353 	ld	(hl),d
                           3354 ;demo.c:404: cmd.dest_x = btab[btx];
   0C53 01r90s41           3355 	ld	bc,#_cmd + 4
   0C56 21rAEs41           3356 	ld	hl,#_btx + 0
   0C59 5E                 3357 	ld	e,(hl)
   0C5A 21rAFs41           3358 	ld	hl,#_btx + 1
   0C5D 56                 3359 	ld	d,(hl)
   0C5E CB 23              3360 	sla	e
   0C60 CB 12              3361 	rl	d
   0C62 21rB2s41           3362 	ld	hl,#_btab
   0C65 19                 3363 	add	hl,de
   0C66 5E                 3364 	ld	e,(hl)
   0C67 23                 3365 	inc	hl
   0C68 56                 3366 	ld	d,(hl)
   0C69 69                 3367 	ld	l,c
   0C6A 60                 3368 	ld	h,b
   0C6B 73                 3369 	ld	(hl),e
   0C6C 23                 3370 	inc	hl
   0C6D 72                 3371 	ld	(hl),d
                           3372 ;demo.c:405: cmd.dest_y = 512+btab[bty];
   0C6E 01r92s41           3373 	ld	bc,#_cmd + 6
   0C71 21rB0s41           3374 	ld	hl,#_bty + 0
   0C74 5E                 3375 	ld	e,(hl)
   0C75 21rB1s41           3376 	ld	hl,#_bty + 1
   0C78 56                 3377 	ld	d,(hl)
   0C79 CB 23              3378 	sla	e
   0C7B CB 12              3379 	rl	d
   0C7D 21rB2s41           3380 	ld	hl,#_btab
   0C80 19                 3381 	add	hl,de
   0C81 5E                 3382 	ld	e,(hl)
   0C82 23                 3383 	inc	hl
   0C83 56                 3384 	ld	d,(hl)
   0C84 21 00 02           3385 	ld	hl,#0x0200
   0C87 19                 3386 	add	hl,de
   0C88 EB                 3387 	ex	de,hl
   0C89 69                 3388 	ld	l,c
   0C8A 60                 3389 	ld	h,b
   0C8B 73                 3390 	ld	(hl),e
   0C8C 23                 3391 	inc	hl
   0C8D 72                 3392 	ld	(hl),d
                           3393 ;demo.c:406: cmd.size_x = 16;
   0C8E 21r94s41           3394 	ld	hl, #_cmd + 8
   0C91 36 10              3395 	ld	(hl),#0x10
   0C93 23                 3396 	inc	hl
   0C94 36 00              3397 	ld	(hl),#0x00
                           3398 ;demo.c:407: cmd.size_y = 16;
   0C96 21r96s41           3399 	ld	hl, #_cmd + 10
   0C99 36 10              3400 	ld	(hl),#0x10
   0C9B 23                 3401 	inc	hl
   0C9C 36 00              3402 	ld	(hl),#0x00
                           3403 ;demo.c:408: cmd.data = 0;
                           3404 ;demo.c:409: cmd.argument = 0x00;
   0C9E 3E 00              3405 	ld	a,#0x00
   0CA0 32r98s41           3406 	ld	(#_cmd + 12),a
   0CA3 32r99s41           3407 	ld	(#_cmd + 13),a
                           3408 ;demo.c:410: cmd.command = 0xD0;
   0CA6 3E D0              3409 	ld	a,#0xD0
   0CA8 32r9As41           3410 	ld	(#_cmd + 14),a
                           3411 ;demo.c:411: vdp_copier(&cmd);
   0CAB 21r8Cs41           3412 	ld	hl,#_cmd
   0CAE E5                 3413 	push	hl
   0CAF CDr00s00           3414 	call	_vdp_copier
   0CB2 F1                 3415 	pop	af
                           3416 ;demo.c:399: for(btx=ys;btx<ye;btx++) {
   0CB3 FD 21rAEs41        3417 	ld	iy,#_btx
   0CB7 FD 34 00           3418 	inc	0 (iy)
   0CBA 20 07              3419 	jr	NZ,00150$
   0CBC FD 21rAEs41        3420 	ld	iy,#_btx
   0CC0 FD 34 01           3421 	inc	1 (iy)
   0CC3                    3422 00150$:
   0CC3 C3rE5s0B           3423 	jp	00114$
   0CC6                    3424 00120$:
                           3425 ;demo.c:398: for(bty=3;bty<11;bty++) {
   0CC6 FD 21rB0s41        3426 	ld	iy,#_bty
   0CCA FD 34 00           3427 	inc	0 (iy)
   0CCD 20 07              3428 	jr	NZ,00151$
   0CCF FD 21rB0s41        3429 	ld	iy,#_bty
   0CD3 FD 34 01           3430 	inc	1 (iy)
   0CD6                    3431 00151$:
   0CD6 C3rC4s0B           3432 	jp	00118$
   0CD9                    3433 00121$:
                           3434 ;demo.c:415: flof++;
   0CD9 FD 21rD2s41        3435 	ld	iy,#_flof
   0CDD FD 34 00           3436 	inc	0 (iy)
   0CE0 20 07              3437 	jr	NZ,00152$
   0CE2 FD 21rD2s41        3438 	ld	iy,#_flof
   0CE6 FD 34 01           3439 	inc	1 (iy)
   0CE9                    3440 00152$:
                           3441 ;demo.c:416: if (flof == 2) flof = 0;
   0CE9 3ArD2s41           3442 	ld	a,(#_flof+0)
   0CEC D6 02              3443 	sub	a,#0x02
   0CEE 20 06              3444 	jr	NZ,00153$
   0CF0 3ArD3s41           3445 	ld	a,(#_flof+1)
   0CF3 B7                 3446 	or	a,a
   0CF4 28 02              3447 	jr	Z,00154$
   0CF6                    3448 00153$:
   0CF6 18 0A              3449 	jr	00122$
   0CF8                    3450 00154$:
   0CF8 21rD2s41           3451 	ld	hl,#_flof + 0
   0CFB 36 00              3452 	ld	(hl), #0x00
   0CFD 21rD3s41           3453 	ld	hl,#_flof + 1
   0D00 36 00              3454 	ld	(hl), #0x00
   0D02                    3455 00122$:
   0D02 DD F9              3456 	ld	sp,ix
   0D04 DD E1              3457 	pop	ix
   0D06 C9                 3458 	ret
   0D07                    3459 _do_blocks_end::
                           3460 ;demo.c:424: void raster_effu() {
                           3461 ;	---------------------------------
                           3462 ; Function raster_effu
                           3463 ; ---------------------------------
   0D07                    3464 _raster_effu_start::
   0D07                    3465 _raster_effu:
                           3466 ;demo.c:425: vdp_register(VDP_VOFFSET,0);
   0D07 21 17 00           3467 	ld	hl,#0x0017
   0D0A E5                 3468 	push	hl
   0D0B CDr00s00           3469 	call	_vdp_register
   0D0E F1                 3470 	pop	af
                           3471 ;demo.c:426: waitVB();
   0D0F 76                 3472 		halt 
                           3473 ;demo.c:428: vdp_register(1,0x40); // disable vblank
   0D10 21 01 40           3474 	ld	hl,#0x4001
   0D13 E5                 3475 	push	hl
   0D14 CDr00s00           3476 	call	_vdp_register
                           3477 ;demo.c:430: for (linenum = 40; linenum < 212; linenum+=4) {
   0D17 3E 28              3478 	ld	a,#0x28
   0D19 32rD4s41           3479 	ld	(#_linenum + 0),a
   0D1C F1                 3480 	pop	af
   0D1D FD 21rD4s41        3481 	ld	iy,#_linenum
   0D21 FD 36 01 00        3482 	ld	1 (iy),#0x00
   0D25                    3483 00101$:
   0D25 3ArD4s41           3484 	ld	a,(#_linenum+0)
   0D28 D6 D4              3485 	sub	a,#0xD4
   0D2A 3ArD5s41           3486 	ld	a,(#_linenum+1)
   0D2D DE 00              3487 	sbc	a,#0x00
   0D2F F2r60s0D           3488 	jp	P,00104$
                           3489 ;demo.c:431: vdp_register(19,linenum); // interrupt on line
   0D32 3ArD4s41           3490 	ld	a,(#_linenum+0)
   0D35 F5                 3491 	push	af
   0D36 33                 3492 	inc	sp
   0D37 3E 13              3493 	ld	a,#0x13
   0D39 F5                 3494 	push	af
   0D3A 33                 3495 	inc	sp
   0D3B CDr00s00           3496 	call	_vdp_register
   0D3E F1                 3497 	pop	af
                           3498 ;demo.c:432: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0D3F 21 00 16           3499 	ld	hl,#0x1600
   0D42 E5                 3500 	push	hl
   0D43 CDr00s00           3501 	call	_vdp_register
   0D46 F1                 3502 	pop	af
                           3503 ;demo.c:434: waitVB();
   0D47 76                 3504 		halt 
                           3505 ;demo.c:430: for (linenum = 40; linenum < 212; linenum+=4) {
   0D48 21rD4s41           3506 	ld	hl,#_linenum
   0D4B 7E                 3507 	ld	a,(hl)
   0D4C C6 04              3508 	add	a,#0x04
   0D4E 23                 3509 	inc	hl
   0D4F 2B                 3510 	dec	hl
   0D50 C5                 3511 	push	bc
   0D51 4F                 3512 	ld	c, a
   0D52 23                 3513 	inc	hl
   0D53 7E                 3514 	ld	a, (hl)
   0D54 47                 3515 	ld	b, a
   0D55 79                 3516 	ld	a, c
   0D56 2B                 3517 	dec	hl
   0D57 77                 3518 	ld	(hl), a
   0D58 78                 3519 	ld	a, b
   0D59 C1                 3520 	pop	bc
   0D5A CE 00              3521 	adc	a,#0x00
   0D5C 23                 3522 	inc	hl
   0D5D 77                 3523 	ld	(hl),a
   0D5E 18 C5              3524 	jr	00101$
   0D60                    3525 00104$:
                           3526 ;demo.c:437: vdp_register(VDP_VOFFSET,0);
   0D60 21 17 00           3527 	ld	hl,#0x0017
   0D63 E5                 3528 	push	hl
   0D64 CDr00s00           3529 	call	_vdp_register
   0D67 F1                 3530 	pop	af
                           3531 ;demo.c:451: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0D68 21 00 06           3532 	ld	hl,#0x0600
   0D6B E5                 3533 	push	hl
   0D6C CDr00s00           3534 	call	_vdp_register
   0D6F F1                 3535 	pop	af
                           3536 ;demo.c:452: vdp_register(1,0x60); // enable vblank
   0D70 21 01 60           3537 	ld	hl,#0x6001
   0D73 E5                 3538 	push	hl
   0D74 CDr00s00           3539 	call	_vdp_register
   0D77 F1                 3540 	pop	af
   0D78 C9                 3541 	ret
   0D79                    3542 _raster_effu_end::
                           3543 ;demo.c:483: void do_letter(char cc) {
                           3544 ;	---------------------------------
                           3545 ; Function do_letter
                           3546 ; ---------------------------------
   0D79                    3547 _do_letter_start::
   0D79                    3548 _do_letter:
   0D79 DD E5              3549 	push	ix
   0D7B DD 21 00 00        3550 	ld	ix,#0
   0D7F DD 39              3551 	add	ix,sp
   0D81 F5                 3552 	push	af
                           3553 ;demo.c:484: int cidx = cc - 65;
   0D82 DD 4E 04           3554 	ld	c,4 (ix)
   0D85 DD 7E 04           3555 	ld	a,4 (ix)
   0D88 17                 3556 	rla	
   0D89 9F                 3557 	sbc	a,a
   0D8A 47                 3558 	ld	b,a
   0D8B 79                 3559 	ld	a,c
   0D8C C6 BF              3560 	add	a,#0xBF
   0D8E DD 77 FE           3561 	ld	-2 (ix),a
   0D91 78                 3562 	ld	a,b
   0D92 CE FF              3563 	adc	a,#0xFF
   0D94 DD 77 FF           3564 	ld	-1 (ix),a
                           3565 ;demo.c:485: cmd.source_x = 127+font_x[cidx];
   0D97 3Er37              3566 	ld	a,#<_font_x
   0D99 DD 86 FE           3567 	add	a,-2 (ix)
   0D9C 5F                 3568 	ld	e,a
   0D9D 3Es0E              3569 	ld	a,#>_font_x
   0D9F DD 8E FF           3570 	adc	a,-1 (ix)
   0DA2 57                 3571 	ld	d,a
   0DA3 1A                 3572 	ld	a,(de)
   0DA4 5F                 3573 	ld	e,a
   0DA5 16 00              3574 	ld	d,#0x00
   0DA7 21 7F 00           3575 	ld	hl,#0x007F
   0DAA 19                 3576 	add	hl,de
   0DAB EB                 3577 	ex	de,hl
   0DAC 21r8Cs41           3578 	ld	hl,#_cmd
   0DAF 73                 3579 	ld	(hl),e
   0DB0 23                 3580 	inc	hl
   0DB1 72                 3581 	ld	(hl),d
                           3582 ;demo.c:486: cmd.source_y = 512+font_y[cidx];
   0DB2 11r8Es41           3583 	ld	de,#_cmd + 2
   0DB5 3Er77              3584 	ld	a,#<_font_y
   0DB7 DD 86 FE           3585 	add	a,-2 (ix)
   0DBA 4F                 3586 	ld	c,a
   0DBB 3Es0E              3587 	ld	a,#>_font_y
   0DBD DD 8E FF           3588 	adc	a,-1 (ix)
   0DC0 47                 3589 	ld	b,a
   0DC1 0A                 3590 	ld	a,(bc)
   0DC2 4F                 3591 	ld	c,a
   0DC3 06 00              3592 	ld	b,#0x00
   0DC5 21 00 02           3593 	ld	hl,#0x0200
   0DC8 09                 3594 	add	hl,bc
   0DC9 4D                 3595 	ld	c,l
   0DCA 44                 3596 	ld	b,h
   0DCB EB                 3597 	ex	de,hl
   0DCC 71                 3598 	ld	(hl),c
   0DCD 23                 3599 	inc	hl
   0DCE 70                 3600 	ld	(hl),b
                           3601 ;demo.c:487: cmd.dest_x = lx;
   0DCF 01r90s41           3602 	ld	bc,#_cmd + 4
   0DD2 21rD6s41           3603 	ld	hl,#_lx + 0
   0DD5 5E                 3604 	ld	e,(hl)
   0DD6 16 00              3605 	ld	d,#0x00
   0DD8 69                 3606 	ld	l,c
   0DD9 60                 3607 	ld	h,b
   0DDA 73                 3608 	ld	(hl),e
   0DDB 23                 3609 	inc	hl
   0DDC 72                 3610 	ld	(hl),d
                           3611 ;demo.c:488: cmd.dest_y = ly;
   0DDD 01r92s41           3612 	ld	bc,#_cmd + 6
   0DE0 21rD7s41           3613 	ld	hl,#_ly + 0
   0DE3 5E                 3614 	ld	e,(hl)
   0DE4 16 00              3615 	ld	d,#0x00
   0DE6 69                 3616 	ld	l,c
   0DE7 60                 3617 	ld	h,b
   0DE8 73                 3618 	ld	(hl),e
   0DE9 23                 3619 	inc	hl
   0DEA 72                 3620 	ld	(hl),d
                           3621 ;demo.c:489: cmd.size_x = font_w[cidx];
   0DEB 01r94s41           3622 	ld	bc,#_cmd + 8
   0DEE 3ErB7              3623 	ld	a,#<_font_w
   0DF0 DD 86 FE           3624 	add	a,-2 (ix)
   0DF3 5F                 3625 	ld	e,a
   0DF4 3Es0E              3626 	ld	a,#>_font_w
   0DF6 DD 8E FF           3627 	adc	a,-1 (ix)
   0DF9 57                 3628 	ld	d,a
   0DFA 1A                 3629 	ld	a,(de)
   0DFB 5F                 3630 	ld	e,a
   0DFC 16 00              3631 	ld	d,#0x00
   0DFE 69                 3632 	ld	l,c
   0DFF 60                 3633 	ld	h,b
   0E00 73                 3634 	ld	(hl),e
   0E01 23                 3635 	inc	hl
   0E02 72                 3636 	ld	(hl),d
                           3637 ;demo.c:490: cmd.size_y = 8;
   0E03 21r96s41           3638 	ld	hl, #_cmd + 10
   0E06 36 08              3639 	ld	(hl),#0x08
   0E08 23                 3640 	inc	hl
   0E09 36 00              3641 	ld	(hl),#0x00
                           3642 ;demo.c:491: cmd.argument = 0x00;
   0E0B 3E 00              3643 	ld	a,#0x00
   0E0D 32r99s41           3644 	ld	(#_cmd + 13),a
                           3645 ;demo.c:492: cmd.command = 0x90; // logical vram to vram
   0E10 3E 90              3646 	ld	a,#0x90
   0E12 32r9As41           3647 	ld	(#_cmd + 14),a
                           3648 ;demo.c:493: vdp_copier(&cmd);
   0E15 21r8Cs41           3649 	ld	hl,#_cmd
   0E18 E5                 3650 	push	hl
   0E19 CDr00s00           3651 	call	_vdp_copier
   0E1C F1                 3652 	pop	af
                           3653 ;demo.c:494: lx+=font_w[cidx]-1;
   0E1D 3ErB7              3654 	ld	a,#<_font_w
   0E1F DD 86 FE           3655 	add	a,-2 (ix)
   0E22 4F                 3656 	ld	c,a
   0E23 3Es0E              3657 	ld	a,#>_font_w
   0E25 DD 8E FF           3658 	adc	a,-1 (ix)
   0E28 47                 3659 	ld	b,a
   0E29 0A                 3660 	ld	a,(bc)
   0E2A 4F                 3661 	ld	c,a
   0E2B 0D                 3662 	dec	c
   0E2C 21rD6s41           3663 	ld	hl,#_lx
   0E2F 7E                 3664 	ld	a,(hl)
   0E30 81                 3665 	add	a,c
   0E31 77                 3666 	ld	(hl),a
   0E32 DD F9              3667 	ld	sp,ix
   0E34 DD E1              3668 	pop	ix
   0E36 C9                 3669 	ret
   0E37                    3670 _do_letter_end::
   0E37                    3671 _font_x:
   0E37 01                 3672 	.db #0x01
   0E38 09                 3673 	.db #0x09
   0E39 11                 3674 	.db #0x11
   0E3A 19                 3675 	.db #0x19
   0E3B 21                 3676 	.db #0x21
   0E3C 29                 3677 	.db #0x29
   0E3D 31                 3678 	.db #0x31
   0E3E 39                 3679 	.db #0x39
   0E3F 41                 3680 	.db #0x41
   0E40 46                 3681 	.db #0x46
   0E41 4E                 3682 	.db #0x4E
   0E42 56                 3683 	.db #0x56
   0E43 5E                 3684 	.db #0x5E
   0E44 01                 3685 	.db #0x01
   0E45 0A                 3686 	.db #0x0A
   0E46 12                 3687 	.db #0x12
   0E47 1A                 3688 	.db #0x1A
   0E48 23                 3689 	.db #0x23
   0E49 2B                 3690 	.db #0x2B
   0E4A 33                 3691 	.db #0x33
   0E4B 3C                 3692 	.db #0x3C
   0E4C 44                 3693 	.db #0x44
   0E4D 4C                 3694 	.db #0x4C
   0E4E 56                 3695 	.db #0x56
   0E4F 5E                 3696 	.db #0x5E
   0E50 67                 3697 	.db #0x67
   0E51 00                 3698 	.db #0x00
   0E52 00                 3699 	.db #0x00
   0E53 00                 3700 	.db #0x00
   0E54 00                 3701 	.db #0x00
   0E55 00                 3702 	.db #0x00
   0E56 00                 3703 	.db #0x00
   0E57 01                 3704 	.db #0x01
   0E58 09                 3705 	.db #0x09
   0E59 11                 3706 	.db #0x11
   0E5A 18                 3707 	.db #0x18
   0E5B 20                 3708 	.db #0x20
   0E5C 28                 3709 	.db #0x28
   0E5D 2F                 3710 	.db #0x2F
   0E5E 37                 3711 	.db #0x37
   0E5F 3F                 3712 	.db #0x3F
   0E60 45                 3713 	.db #0x45
   0E61 4C                 3714 	.db #0x4C
   0E62 54                 3715 	.db #0x54
   0E63 5A                 3716 	.db #0x5A
   0E64 64                 3717 	.db #0x64
   0E65 01                 3718 	.db #0x01
   0E66 09                 3719 	.db #0x09
   0E67 11                 3720 	.db #0x11
   0E68 19                 3721 	.db #0x19
   0E69 21                 3722 	.db #0x21
   0E6A 29                 3723 	.db #0x29
   0E6B 30                 3724 	.db #0x30
   0E6C 38                 3725 	.db #0x38
   0E6D 40                 3726 	.db #0x40
   0E6E 4A                 3727 	.db #0x4A
   0E6F 52                 3728 	.db #0x52
   0E70 5A                 3729 	.db #0x5A
   0E71 00                 3730 	.db 0x00
   0E72 00                 3731 	.db 0x00
   0E73 00                 3732 	.db 0x00
   0E74 00                 3733 	.db 0x00
   0E75 00                 3734 	.db 0x00
   0E76 00                 3735 	.db 0x00
   0E77                    3736 _font_y:
   0E77 1C                 3737 	.db #0x1C
   0E78 1C                 3738 	.db #0x1C
   0E79 1C                 3739 	.db #0x1C
   0E7A 1C                 3740 	.db #0x1C
   0E7B 1C                 3741 	.db #0x1C
   0E7C 1C                 3742 	.db #0x1C
   0E7D 1C                 3743 	.db #0x1C
   0E7E 1C                 3744 	.db #0x1C
   0E7F 1C                 3745 	.db #0x1C
   0E80 1C                 3746 	.db #0x1C
   0E81 1C                 3747 	.db #0x1C
   0E82 1C                 3748 	.db #0x1C
   0E83 1C                 3749 	.db #0x1C
   0E84 25                 3750 	.db #0x25
   0E85 25                 3751 	.db #0x25
   0E86 25                 3752 	.db #0x25
   0E87 25                 3753 	.db #0x25
   0E88 25                 3754 	.db #0x25
   0E89 25                 3755 	.db #0x25
   0E8A 25                 3756 	.db #0x25
   0E8B 25                 3757 	.db #0x25
   0E8C 25                 3758 	.db #0x25
   0E8D 25                 3759 	.db #0x25
   0E8E 25                 3760 	.db #0x25
   0E8F 25                 3761 	.db #0x25
   0E90 25                 3762 	.db #0x25
   0E91 00                 3763 	.db #0x00
   0E92 00                 3764 	.db #0x00
   0E93 00                 3765 	.db #0x00
   0E94 00                 3766 	.db #0x00
   0E95 00                 3767 	.db #0x00
   0E96 00                 3768 	.db #0x00
   0E97 37                 3769 	.db #0x37
   0E98 37                 3770 	.db #0x37
   0E99 37                 3771 	.db #0x37
   0E9A 37                 3772 	.db #0x37
   0E9B 37                 3773 	.db #0x37
   0E9C 37                 3774 	.db #0x37
   0E9D 37                 3775 	.db #0x37
   0E9E 37                 3776 	.db #0x37
   0E9F 37                 3777 	.db #0x37
   0EA0 37                 3778 	.db #0x37
   0EA1 37                 3779 	.db #0x37
   0EA2 37                 3780 	.db #0x37
   0EA3 37                 3781 	.db #0x37
   0EA4 37                 3782 	.db #0x37
   0EA5 40                 3783 	.db #0x40
   0EA6 40                 3784 	.db #0x40
   0EA7 40                 3785 	.db #0x40
   0EA8 40                 3786 	.db #0x40
   0EA9 40                 3787 	.db #0x40
   0EAA 40                 3788 	.db #0x40
   0EAB 40                 3789 	.db #0x40
   0EAC 40                 3790 	.db #0x40
   0EAD 40                 3791 	.db #0x40
   0EAE 40                 3792 	.db #0x40
   0EAF 40                 3793 	.db #0x40
   0EB0 40                 3794 	.db #0x40
   0EB1 00                 3795 	.db 0x00
   0EB2 00                 3796 	.db 0x00
   0EB3 00                 3797 	.db 0x00
   0EB4 00                 3798 	.db 0x00
   0EB5 00                 3799 	.db 0x00
   0EB6 00                 3800 	.db 0x00
   0EB7                    3801 _font_w:
   0EB7 07                 3802 	.db #0x07
   0EB8 07                 3803 	.db #0x07
   0EB9 07                 3804 	.db #0x07
   0EBA 07                 3805 	.db #0x07
   0EBB 07                 3806 	.db #0x07
   0EBC 07                 3807 	.db #0x07
   0EBD 07                 3808 	.db #0x07
   0EBE 07                 3809 	.db #0x07
   0EBF 04                 3810 	.db #0x04
   0EC0 07                 3811 	.db #0x07
   0EC1 07                 3812 	.db #0x07
   0EC2 07                 3813 	.db #0x07
   0EC3 09                 3814 	.db #0x09
   0EC4 08                 3815 	.db #0x08
   0EC5 07                 3816 	.db #0x07
   0EC6 07                 3817 	.db #0x07
   0EC7 08                 3818 	.db #0x08
   0EC8 07                 3819 	.db #0x07
   0EC9 07                 3820 	.db #0x07
   0ECA 08                 3821 	.db #0x08
   0ECB 07                 3822 	.db #0x07
   0ECC 07                 3823 	.db #0x07
   0ECD 09                 3824 	.db #0x09
   0ECE 07                 3825 	.db #0x07
   0ECF 08                 3826 	.db #0x08
   0ED0 07                 3827 	.db #0x07
   0ED1 00                 3828 	.db #0x00
   0ED2 00                 3829 	.db #0x00
   0ED3 00                 3830 	.db #0x00
   0ED4 00                 3831 	.db #0x00
   0ED5 00                 3832 	.db #0x00
   0ED6 00                 3833 	.db #0x00
   0ED7 07                 3834 	.db #0x07
   0ED8 07                 3835 	.db #0x07
   0ED9 06                 3836 	.db #0x06
   0EDA 07                 3837 	.db #0x07
   0EDB 07                 3838 	.db #0x07
   0EDC 07                 3839 	.db #0x07
   0EDD 07                 3840 	.db #0x07
   0EDE 07                 3841 	.db #0x07
   0EDF 05                 3842 	.db #0x05
   0EE0 06                 3843 	.db #0x06
   0EE1 07                 3844 	.db #0x07
   0EE2 05                 3845 	.db #0x05
   0EE3 09                 3846 	.db #0x09
   0EE4 07                 3847 	.db #0x07
   0EE5 07                 3848 	.db #0x07
   0EE6 07                 3849 	.db #0x07
   0EE7 07                 3850 	.db #0x07
   0EE8 07                 3851 	.db #0x07
   0EE9 07                 3852 	.db #0x07
   0EEA 06                 3853 	.db #0x06
   0EEB 07                 3854 	.db #0x07
   0EEC 07                 3855 	.db #0x07
   0EED 09                 3856 	.db #0x09
   0EEE 07                 3857 	.db #0x07
   0EEF 07                 3858 	.db #0x07
   0EF0 07                 3859 	.db #0x07
   0EF1 00                 3860 	.db 0x00
   0EF2 00                 3861 	.db 0x00
   0EF3 00                 3862 	.db 0x00
   0EF4 00                 3863 	.db 0x00
   0EF5 00                 3864 	.db 0x00
   0EF6 00                 3865 	.db 0x00
                           3866 ;demo.c:498: void do_letter_tall(char cc) {
                           3867 ;	---------------------------------
                           3868 ; Function do_letter_tall
                           3869 ; ---------------------------------
   0EF7                    3870 _do_letter_tall_start::
   0EF7                    3871 _do_letter_tall:
   0EF7 DD E5              3872 	push	ix
   0EF9 DD 21 00 00        3873 	ld	ix,#0
   0EFD DD 39              3874 	add	ix,sp
   0EFF F5                 3875 	push	af
                           3876 ;demo.c:499: int cidx = cc - 65;
   0F00 DD 4E 04           3877 	ld	c,4 (ix)
   0F03 DD 7E 04           3878 	ld	a,4 (ix)
   0F06 17                 3879 	rla	
   0F07 9F                 3880 	sbc	a,a
   0F08 47                 3881 	ld	b,a
   0F09 79                 3882 	ld	a,c
   0F0A C6 BF              3883 	add	a,#0xBF
   0F0C DD 77 FE           3884 	ld	-2 (ix),a
   0F0F 78                 3885 	ld	a,b
   0F10 CE FF              3886 	adc	a,#0xFF
   0F12 DD 77 FF           3887 	ld	-1 (ix),a
                           3888 ;demo.c:500: cmd.source_x = 127+font_x[cidx];
   0F15 3Er37              3889 	ld	a,#<_font_x
   0F17 DD 86 FE           3890 	add	a,-2 (ix)
   0F1A 5F                 3891 	ld	e,a
   0F1B 3Es0E              3892 	ld	a,#>_font_x
   0F1D DD 8E FF           3893 	adc	a,-1 (ix)
   0F20 57                 3894 	ld	d,a
   0F21 1A                 3895 	ld	a,(de)
   0F22 5F                 3896 	ld	e,a
   0F23 16 00              3897 	ld	d,#0x00
   0F25 21 7F 00           3898 	ld	hl,#0x007F
   0F28 19                 3899 	add	hl,de
   0F29 EB                 3900 	ex	de,hl
   0F2A 21r8Cs41           3901 	ld	hl,#_cmd
   0F2D 73                 3902 	ld	(hl),e
   0F2E 23                 3903 	inc	hl
   0F2F 72                 3904 	ld	(hl),d
                           3905 ;demo.c:501: cmd.source_y = 512+font_y[cidx]-1;
   0F30 11r8Es41           3906 	ld	de,#_cmd + 2
   0F33 3Er77              3907 	ld	a,#<_font_y
   0F35 DD 86 FE           3908 	add	a,-2 (ix)
   0F38 4F                 3909 	ld	c,a
   0F39 3Es0E              3910 	ld	a,#>_font_y
   0F3B DD 8E FF           3911 	adc	a,-1 (ix)
   0F3E 47                 3912 	ld	b,a
   0F3F 0A                 3913 	ld	a,(bc)
   0F40 4F                 3914 	ld	c,a
   0F41 06 00              3915 	ld	b,#0x00
   0F43 21 FF 01           3916 	ld	hl,#0x01FF
   0F46 09                 3917 	add	hl,bc
   0F47 4D                 3918 	ld	c,l
   0F48 44                 3919 	ld	b,h
   0F49 EB                 3920 	ex	de,hl
   0F4A 71                 3921 	ld	(hl),c
   0F4B 23                 3922 	inc	hl
   0F4C 70                 3923 	ld	(hl),b
                           3924 ;demo.c:502: cmd.dest_x = lx;
   0F4D 01r90s41           3925 	ld	bc,#_cmd + 4
   0F50 21rD6s41           3926 	ld	hl,#_lx + 0
   0F53 5E                 3927 	ld	e,(hl)
   0F54 16 00              3928 	ld	d,#0x00
   0F56 69                 3929 	ld	l,c
   0F57 60                 3930 	ld	h,b
   0F58 73                 3931 	ld	(hl),e
   0F59 23                 3932 	inc	hl
   0F5A 72                 3933 	ld	(hl),d
                           3934 ;demo.c:503: cmd.dest_y = ly;
   0F5B 01r92s41           3935 	ld	bc,#_cmd + 6
   0F5E 21rD7s41           3936 	ld	hl,#_ly + 0
   0F61 5E                 3937 	ld	e,(hl)
   0F62 16 00              3938 	ld	d,#0x00
   0F64 69                 3939 	ld	l,c
   0F65 60                 3940 	ld	h,b
   0F66 73                 3941 	ld	(hl),e
   0F67 23                 3942 	inc	hl
   0F68 72                 3943 	ld	(hl),d
                           3944 ;demo.c:504: cmd.size_x = font_w[cidx];
   0F69 01r94s41           3945 	ld	bc,#_cmd + 8
   0F6C 3ErB7              3946 	ld	a,#<_font_w
   0F6E DD 86 FE           3947 	add	a,-2 (ix)
   0F71 5F                 3948 	ld	e,a
   0F72 3Es0E              3949 	ld	a,#>_font_w
   0F74 DD 8E FF           3950 	adc	a,-1 (ix)
   0F77 57                 3951 	ld	d,a
   0F78 1A                 3952 	ld	a,(de)
   0F79 5F                 3953 	ld	e,a
   0F7A 16 00              3954 	ld	d,#0x00
   0F7C 69                 3955 	ld	l,c
   0F7D 60                 3956 	ld	h,b
   0F7E 73                 3957 	ld	(hl),e
   0F7F 23                 3958 	inc	hl
   0F80 72                 3959 	ld	(hl),d
                           3960 ;demo.c:505: cmd.size_y = 10;
   0F81 21r96s41           3961 	ld	hl, #_cmd + 10
   0F84 36 0A              3962 	ld	(hl),#0x0A
   0F86 23                 3963 	inc	hl
   0F87 36 00              3964 	ld	(hl),#0x00
                           3965 ;demo.c:506: cmd.argument = 0x00;
   0F89 3E 00              3966 	ld	a,#0x00
   0F8B 32r99s41           3967 	ld	(#_cmd + 13),a
                           3968 ;demo.c:507: cmd.command = 0x90; // logical vram to vram
   0F8E 3E 90              3969 	ld	a,#0x90
   0F90 32r9As41           3970 	ld	(#_cmd + 14),a
                           3971 ;demo.c:508: vdp_copier(&cmd);
   0F93 21r8Cs41           3972 	ld	hl,#_cmd
   0F96 E5                 3973 	push	hl
   0F97 CDr00s00           3974 	call	_vdp_copier
   0F9A F1                 3975 	pop	af
                           3976 ;demo.c:509: lx+=font_w[cidx]-1;
   0F9B 3ErB7              3977 	ld	a,#<_font_w
   0F9D DD 86 FE           3978 	add	a,-2 (ix)
   0FA0 4F                 3979 	ld	c,a
   0FA1 3Es0E              3980 	ld	a,#>_font_w
   0FA3 DD 8E FF           3981 	adc	a,-1 (ix)
   0FA6 47                 3982 	ld	b,a
   0FA7 0A                 3983 	ld	a,(bc)
   0FA8 4F                 3984 	ld	c,a
   0FA9 0D                 3985 	dec	c
   0FAA 21rD6s41           3986 	ld	hl,#_lx
   0FAD 7E                 3987 	ld	a,(hl)
   0FAE 81                 3988 	add	a,c
   0FAF 77                 3989 	ld	(hl),a
   0FB0 DD F9              3990 	ld	sp,ix
   0FB2 DD E1              3991 	pop	ix
   0FB4 C9                 3992 	ret
   0FB5                    3993 _do_letter_tall_end::
                           3994 ;demo.c:512: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3995 ;	---------------------------------
                           3996 ; Function drawstr
                           3997 ; ---------------------------------
   0FB5                    3998 _drawstr_start::
   0FB5                    3999 _drawstr:
   0FB5 DD E5              4000 	push	ix
   0FB7 DD 21 00 00        4001 	ld	ix,#0
   0FBB DD 39              4002 	add	ix,sp
                           4003 ;demo.c:513: char* c = str;
   0FBD DD 4E 04           4004 	ld	c,4 (ix)
   0FC0 DD 46 05           4005 	ld	b,5 (ix)
                           4006 ;demo.c:514: lx = x;
   0FC3 DD 5E 06           4007 	ld	e,6 (ix)
   0FC6 21rD6s41           4008 	ld	hl,#_lx + 0
   0FC9 73                 4009 	ld	(hl), e
                           4010 ;demo.c:515: ly = y;
   0FCA DD 7E 07           4011 	ld	a,7 (ix)
   0FCD 21rD7s41           4012 	ld	hl,#_ly + 0
   0FD0 77                 4013 	ld	(hl), a
                           4014 ;demo.c:516: while (*c) {
   0FD1                    4015 00107$:
   0FD1 0A                 4016 	ld	a,(bc)
   0FD2 57                 4017 	ld	d,a
   0FD3 B7                 4018 	or	a,a
   0FD4 28 42              4019 	jr	Z,00110$
                           4020 ;demo.c:517: char ltr = *c++; 
   0FD6 03                 4021 	inc	bc
                           4022 ;demo.c:518: if (ltr == ' ') lx+=4;
   0FD7 7A                 4023 	ld	a,d
   0FD8 D6 20              4024 	sub	a,#0x20
   0FDA 20 1E              4025 	jr	NZ,00105$
   0FDC FD 21rD6s41        4026 	ld	iy,#_lx
   0FE0 FD 34 00           4027 	inc	0 (iy)
   0FE3 FD 21rD6s41        4028 	ld	iy,#_lx
   0FE7 FD 34 00           4029 	inc	0 (iy)
   0FEA FD 21rD6s41        4030 	ld	iy,#_lx
   0FEE FD 34 00           4031 	inc	0 (iy)
   0FF1 FD 21rD6s41        4032 	ld	iy,#_lx
   0FF5 FD 34 00           4033 	inc	0 (iy)
   0FF8 18 D7              4034 	jr	00107$
   0FFA                    4035 00105$:
                           4036 ;demo.c:519: else if (ltr == '_') { ly+=9; lx = x; }
   0FFA 7A                 4037 	ld	a,d
   0FFB D6 5F              4038 	sub	a,#0x5F
   0FFD 20 0D              4039 	jr	NZ,00102$
   0FFF 21rD7s41           4040 	ld	hl,#_ly
   1002 7E                 4041 	ld	a,(hl)
   1003 C6 09              4042 	add	a,#0x09
   1005 77                 4043 	ld	(hl),a
   1006 21rD6s41           4044 	ld	hl,#_lx + 0
   1009 73                 4045 	ld	(hl), e
   100A 18 C5              4046 	jr	00107$
   100C                    4047 00102$:
                           4048 ;demo.c:520: else do_letter(ltr);
   100C C5                 4049 	push	bc
   100D D5                 4050 	push	de
   100E D5                 4051 	push	de
   100F 33                 4052 	inc	sp
   1010 CDr79s0D           4053 	call	_do_letter
   1013 33                 4054 	inc	sp
   1014 D1                 4055 	pop	de
   1015 C1                 4056 	pop	bc
   1016 18 B9              4057 	jr	00107$
   1018                    4058 00110$:
   1018 DD E1              4059 	pop	ix
   101A C9                 4060 	ret
   101B                    4061 _drawstr_end::
                           4062 ;demo.c:524: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4063 ;	---------------------------------
                           4064 ; Function drawsine
                           4065 ; ---------------------------------
   101B                    4066 _drawsine_start::
   101B                    4067 _drawsine:
   101B DD E5              4068 	push	ix
   101D DD 21 00 00        4069 	ld	ix,#0
   1021 DD 39              4070 	add	ix,sp
   1023 3B                 4071 	dec	sp
                           4072 ;demo.c:525: char* c = str;
   1024 DD 4E 04           4073 	ld	c,4 (ix)
   1027 DD 46 05           4074 	ld	b,5 (ix)
                           4075 ;demo.c:526: lx = x;
   102A DD 7E 06           4076 	ld	a,6 (ix)
   102D 21rD6s41           4077 	ld	hl,#_lx + 0
   1030 77                 4078 	ld	(hl), a
                           4079 ;demo.c:528: while (*c) {
   1031                    4080 00104$:
   1031 0A                 4081 	ld	a,(bc)
   1032 5F                 4082 	ld	e,a
   1033 B7                 4083 	or	a,a
   1034 CAr9As10           4084 	jp	Z,00107$
                           4085 ;demo.c:529: char ltr = *c++; 
   1037 03                 4086 	inc	bc
   1038 DD 73 FF           4087 	ld	-1 (ix),e
                           4088 ;demo.c:530: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   103B 21rD6s41           4089 	ld	hl,#_lx + 0
   103E 5E                 4090 	ld	e,(hl)
   103F 16 00              4091 	ld	d,#0x00
   1041 21r88s41           4092 	ld	hl,#_vbicount
   1044 7B                 4093 	ld	a,e
   1045 86                 4094 	add	a,(hl)
   1046 5F                 4095 	ld	e,a
   1047 7A                 4096 	ld	a,d
   1048 23                 4097 	inc	hl
   1049 8E                 4098 	adc	a,(hl)
   104A 57                 4099 	ld	d,a
   104B CB 2A              4100 	sra	d
   104D CB 1B              4101 	rr	e
   104F 16 00              4102 	ld	d,#0x00
   1051 21r2Cs00           4103 	ld	hl,#_sintabx
   1054 19                 4104 	add	hl,de
   1055 5E                 4105 	ld	e,(hl)
   1056 CB 3B              4106 	srl	e
   1058 CB 3B              4107 	srl	e
   105A CB 3B              4108 	srl	e
   105C CB 3B              4109 	srl	e
   105E 21rD7s41           4110 	ld	hl,#_ly
   1061 DD 7E 07           4111 	ld	a,7 (ix)
   1064 83                 4112 	add	a,e
   1065 77                 4113 	ld	(hl),a
                           4114 ;demo.c:531: if (ltr == ' ') lx+=4;
   1066 DD 7E FF           4115 	ld	a,-1 (ix)
   1069 D6 20              4116 	sub	a,#0x20
   106B 20 1F              4117 	jr	NZ,00102$
   106D FD 21rD6s41        4118 	ld	iy,#_lx
   1071 FD 34 00           4119 	inc	0 (iy)
   1074 FD 21rD6s41        4120 	ld	iy,#_lx
   1078 FD 34 00           4121 	inc	0 (iy)
   107B FD 21rD6s41        4122 	ld	iy,#_lx
   107F FD 34 00           4123 	inc	0 (iy)
   1082 FD 21rD6s41        4124 	ld	iy,#_lx
   1086 FD 34 00           4125 	inc	0 (iy)
   1089 C3r31s10           4126 	jp	00104$
   108C                    4127 00102$:
                           4128 ;demo.c:532: else do_letter_tall(ltr);
   108C C5                 4129 	push	bc
   108D DD 7E FF           4130 	ld	a,-1 (ix)
   1090 F5                 4131 	push	af
   1091 33                 4132 	inc	sp
   1092 CDrF7s0E           4133 	call	_do_letter_tall
   1095 33                 4134 	inc	sp
   1096 C1                 4135 	pop	bc
   1097 C3r31s10           4136 	jp	00104$
   109A                    4137 00107$:
   109A DD F9              4138 	ld	sp,ix
   109C DD E1              4139 	pop	ix
   109E C9                 4140 	ret
   109F                    4141 _drawsine_end::
                           4142 ;demo.c:536: void font() {
                           4143 ;	---------------------------------
                           4144 ; Function font
                           4145 ; ---------------------------------
   109F                    4146 _font_start::
   109F                    4147 _font:
                           4148 ;demo.c:538: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   109F 21 4A 3C           4149 	ld	hl,#0x3C4A
   10A2 E5                 4150 	push	hl
   10A3 21rADs10           4151 	ld	hl,#__str_8
   10A6 E5                 4152 	push	hl
   10A7 CDrB5s0F           4153 	call	_drawstr
   10AA F1                 4154 	pop	af
   10AB F1                 4155 	pop	af
   10AC C9                 4156 	ret
   10AD                    4157 _font_end::
   10AD                    4158 __str_8:
   10AD 44 49 47 49 54 41  4159 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   10E9 4F 4E 5F 5F 20 20  4160 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   110F 00                 4161 	.db 0x00
                           4162 ;demo.c:547: void twister() {
                           4163 ;	---------------------------------
                           4164 ; Function twister
                           4165 ; ---------------------------------
   1110                    4166 _twister_start::
   1110                    4167 _twister:
   1110 DD E5              4168 	push	ix
   1112 DD 21 00 00        4169 	ld	ix,#0
   1116 DD 39              4170 	add	ix,sp
   1118 F5                 4171 	push	af
                           4172 ;demo.c:551: if (twinited == 0) {
   1119 3ArDAs41           4173 	ld	a,(#_twinited+0)
   111C FD 21rDAs41        4174 	ld	iy,#_twinited
   1120 FD B6 01           4175 	or	a,1 (iy)
   1123 C2r93s11           4176 	jp	NZ,00102$
                           4177 ;demo.c:552: cmd.size_x = 256;
   1126 21r94s41           4178 	ld	hl, #_cmd + 8
   1129 36 00              4179 	ld	(hl),#0x00
   112B 23                 4180 	inc	hl
   112C 36 01              4181 	ld	(hl),#0x01
                           4182 ;demo.c:553: cmd.size_y = 1;
   112E 21r96s41           4183 	ld	hl, #_cmd + 10
   1131 36 01              4184 	ld	(hl),#0x01
   1133 23                 4185 	inc	hl
   1134 36 00              4186 	ld	(hl),#0x00
                           4187 ;demo.c:554: cmd.data = 0;
                           4188 ;demo.c:555: cmd.argument = 0x00; // from 70xY to left
   1136 3E 00              4189 	ld	a,#0x00
   1138 32r98s41           4190 	ld	(#_cmd + 12),a
   113B 32r99s41           4191 	ld	(#_cmd + 13),a
                           4192 ;demo.c:556: cmd.command = 0xd0; // vram to vram, y only
   113E 01r9As41           4193 	ld	bc,#_cmd + 14
   1141 3E D0              4194 	ld	a,#0xD0
   1143 02                 4195 	ld	(bc),a
                           4196 ;demo.c:557: cmd.source_x = 0;
   1144 21r8Cs41           4197 	ld	hl,#_cmd
   1147 36 00              4198 	ld	(hl),#0x00
   1149 23                 4199 	inc	hl
   114A 36 00              4200 	ld	(hl),#0x00
                           4201 ;demo.c:558: cmd.dest_x = 0;
   114C 21r90s41           4202 	ld	hl, #_cmd + 4
   114F 36 00              4203 	ld	(hl),#0x00
   1151 23                 4204 	inc	hl
   1152 36 00              4205 	ld	(hl),#0x00
                           4206 ;demo.c:560: for (y = 0; y < 212; y+=1) {
   1154 01 00 00           4207 	ld	bc,#0x0000
   1157                    4208 00103$:
   1157 79                 4209 	ld	a,c
   1158 D6 D4              4210 	sub	a,#0xD4
   115A 78                 4211 	ld	a,b
   115B DE 00              4212 	sbc	a,#0x00
   115D F2r7Es11           4213 	jp	P,00106$
                           4214 ;demo.c:561: waitVB();
   1160 76                 4215 		halt 
                           4216 ;demo.c:562: cmd.source_y = 0;
   1161 11r8Es41           4217 	ld	de,#_cmd + 2
   1164 EB                 4218 	ex	de,hl
   1165 36 00              4219 	ld	(hl),#0x00
   1167 23                 4220 	inc	hl
   1168 36 00              4221 	ld	(hl),#0x00
                           4222 ;demo.c:563: cmd.dest_y = y;
   116A 11r92s41           4223 	ld	de,#_cmd + 6
   116D EB                 4224 	ex	de,hl
   116E 71                 4225 	ld	(hl),c
   116F 23                 4226 	inc	hl
   1170 70                 4227 	ld	(hl),b
                           4228 ;demo.c:564: vdp_copier(&cmd);
   1171 C5                 4229 	push	bc
   1172 21r8Cs41           4230 	ld	hl,#_cmd
   1175 E5                 4231 	push	hl
   1176 CDr00s00           4232 	call	_vdp_copier
   1179 F1                 4233 	pop	af
   117A C1                 4234 	pop	bc
                           4235 ;demo.c:560: for (y = 0; y < 212; y+=1) {
   117B 03                 4236 	inc	bc
   117C 18 D9              4237 	jr	00103$
   117E                    4238 00106$:
                           4239 ;demo.c:568: twinited = 1;
   117E 21rDAs41           4240 	ld	hl,#_twinited + 0
   1181 36 01              4241 	ld	(hl), #0x01
   1183 21rDBs41           4242 	ld	hl,#_twinited + 1
   1186 36 00              4243 	ld	(hl), #0x00
                           4244 ;demo.c:569: vdp_load_palette(twister_palette);
   1188 21r28s41           4245 	ld	hl,#_twister_palette
   118B E5                 4246 	push	hl
   118C CDr00s00           4247 	call	_vdp_load_palette
   118F F1                 4248 	pop	af
                           4249 ;demo.c:570: font();
   1190 CDr9Fs10           4250 	call	_font
   1193                    4251 00102$:
                           4252 ;demo.c:573: cmd.size_x = 70;
   1193 21r94s41           4253 	ld	hl, #_cmd + 8
   1196 36 46              4254 	ld	(hl),#0x46
   1198 23                 4255 	inc	hl
   1199 36 00              4256 	ld	(hl),#0x00
                           4257 ;demo.c:574: cmd.size_y = 2;
   119B 21r96s41           4258 	ld	hl, #_cmd + 10
   119E 36 02              4259 	ld	(hl),#0x02
   11A0 23                 4260 	inc	hl
   11A1 36 00              4261 	ld	(hl),#0x00
                           4262 ;demo.c:575: cmd.data = 0;
   11A3 3E 00              4263 	ld	a,#0x00
   11A5 32r98s41           4264 	ld	(#_cmd + 12),a
                           4265 ;demo.c:576: cmd.argument = 0x04; // from 70xY to left
   11A8 3E 04              4266 	ld	a,#0x04
   11AA 32r99s41           4267 	ld	(#_cmd + 13),a
                           4268 ;demo.c:577: cmd.command = 0xe0; // vram to vram, y only
   11AD 01r9As41           4269 	ld	bc,#_cmd + 14
   11B0 3E E0              4270 	ld	a,#0xE0
   11B2 02                 4271 	ld	(bc),a
                           4272 ;demo.c:578: cmd.source_x = 70;
   11B3 21r8Cs41           4273 	ld	hl,#_cmd
   11B6 36 46              4274 	ld	(hl),#0x46
   11B8 23                 4275 	inc	hl
   11B9 36 00              4276 	ld	(hl),#0x00
                           4277 ;demo.c:579: cmd.dest_x = 70;
   11BB 21r90s41           4278 	ld	hl, #_cmd + 4
   11BE 36 46              4279 	ld	(hl),#0x46
   11C0 23                 4280 	inc	hl
   11C1 36 00              4281 	ld	(hl),#0x00
                           4282 ;demo.c:581: for (y = 0; y < 212; y+=2) {
   11C3 DD 36 FE 00        4283 	ld	-2 (ix),#0x00
   11C7 DD 36 FF 00        4284 	ld	-1 (ix),#0x00
   11CB                    4285 00107$:
   11CB DD 7E FE           4286 	ld	a,-2 (ix)
   11CE D6 D4              4287 	sub	a,#0xD4
   11D0 DD 7E FF           4288 	ld	a,-1 (ix)
   11D3 DE 00              4289 	sbc	a,#0x00
   11D5 F2r2Es12           4290 	jp	P,00110$
                           4291 ;demo.c:582: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   11D8 11r8Es41           4292 	ld	de,#_cmd + 2
   11DB DD 4E FE           4293 	ld	c,-2 (ix)
   11DE DD 46 FF           4294 	ld	b,-1 (ix)
   11E1 CB 28              4295 	sra	b
   11E3 CB 19              4296 	rr	c
   11E5 3ArD8s41           4297 	ld	a,(#_ff+0)
   11E8 81                 4298 	add	a,c
   11E9 4F                 4299 	ld	c,a
   11EA 3ArD9s41           4300 	ld	a,(#_ff+1)
   11ED 88                 4301 	adc	a,b
   11EE 06 00              4302 	ld	b,#0x00
   11F0 21r00s00           4303 	ld	hl,#_sintab
   11F3 09                 4304 	add	hl,bc
   11F4 7E                 4305 	ld	a,(hl)
   11F5 4F                 4306 	ld	c,a
   11F6 CB 29              4307 	sra	c
   11F8 79                 4308 	ld	a,c
   11F9 17                 4309 	rla	
   11FA 9F                 4310 	sbc	a,a
   11FB 47                 4311 	ld	b,a
   11FC 21 40 02           4312 	ld	hl,#0x0240
   11FF 09                 4313 	add	hl,bc
   1200 4D                 4314 	ld	c,l
   1201 44                 4315 	ld	b,h
   1202 6B                 4316 	ld	l,e
   1203 62                 4317 	ld	h,d
   1204 71                 4318 	ld	(hl),c
   1205 23                 4319 	inc	hl
   1206 70                 4320 	ld	(hl),b
                           4321 ;demo.c:583: cmd.dest_y = y;
   1207 21r92s41           4322 	ld	hl, #_cmd + 6
   120A DD 7E FE           4323 	ld	a,-2 (ix)
   120D 77                 4324 	ld	(hl),a
   120E 23                 4325 	inc	hl
   120F DD 7E FF           4326 	ld	a,-1 (ix)
   1212 77                 4327 	ld	(hl),a
                           4328 ;demo.c:584: vdp_copier(&cmd);
   1213 21r8Cs41           4329 	ld	hl,#_cmd
   1216 E5                 4330 	push	hl
   1217 CDr00s00           4331 	call	_vdp_copier
   121A F1                 4332 	pop	af
                           4333 ;demo.c:581: for (y = 0; y < 212; y+=2) {
   121B DD 7E FE           4334 	ld	a,-2 (ix)
   121E C6 02              4335 	add	a,#0x02
   1220 DD 77 FE           4336 	ld	-2 (ix),a
   1223 DD 7E FF           4337 	ld	a,-1 (ix)
   1226 CE 00              4338 	adc	a,#0x00
   1228 DD 77 FF           4339 	ld	-1 (ix),a
   122B C3rCBs11           4340 	jp	00107$
   122E                    4341 00110$:
                           4342 ;demo.c:588: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   122E 21rD8s41           4343 	ld	hl,#_ff + 0
   1231 4E                 4344 	ld	c,(hl)
   1232 21rD9s41           4345 	ld	hl,#_ff + 1
   1235 46                 4346 	ld	b,(hl)
   1236 CB 28              4347 	sra	b
   1238 CB 19              4348 	rr	c
   123A CB 28              4349 	sra	b
   123C CB 19              4350 	rr	c
   123E 21rD8s41           4351 	ld	hl,#_ff + 0
   1241 5E                 4352 	ld	e,(hl)
   1242 21rD9s41           4353 	ld	hl,#_ff + 1
   1245 56                 4354 	ld	d,(hl)
   1246 CB 2A              4355 	sra	d
   1248 CB 1B              4356 	rr	e
   124A CB 2A              4357 	sra	d
   124C CB 1B              4358 	rr	e
   124E CB 2A              4359 	sra	d
   1250 CB 1B              4360 	rr	e
   1252 43                 4361 	ld	b,e
   1253 79                 4362 	ld	a,c
   1254 F5                 4363 	push	af
   1255 33                 4364 	inc	sp
   1256 C5                 4365 	push	bc
   1257 33                 4366 	inc	sp
   1258 41                 4367 	ld	b,c
   1259 0E 04              4368 	ld	c,#0x04
   125B C5                 4369 	push	bc
   125C CDr00s00           4370 	call	_msx2_palette
   125F F1                 4371 	pop	af
   1260 F1                 4372 	pop	af
                           4373 ;demo.c:590: ff+=4;
   1261 21rD8s41           4374 	ld	hl,#_ff
   1264 7E                 4375 	ld	a,(hl)
   1265 C6 04              4376 	add	a,#0x04
   1267 23                 4377 	inc	hl
   1268 2B                 4378 	dec	hl
   1269 C5                 4379 	push	bc
   126A 4F                 4380 	ld	c, a
   126B 23                 4381 	inc	hl
   126C 7E                 4382 	ld	a, (hl)
   126D 47                 4383 	ld	b, a
   126E 79                 4384 	ld	a, c
   126F 2B                 4385 	dec	hl
   1270 77                 4386 	ld	(hl), a
   1271 78                 4387 	ld	a, b
   1272 C1                 4388 	pop	bc
   1273 CE 00              4389 	adc	a,#0x00
   1275 23                 4390 	inc	hl
   1276 77                 4391 	ld	(hl),a
   1277 DD F9              4392 	ld	sp,ix
   1279 DD E1              4393 	pop	ix
   127B C9                 4394 	ret
   127C                    4395 _twister_end::
                           4396 ;demo.c:601: void bulbs() {
                           4397 ;	---------------------------------
                           4398 ; Function bulbs
                           4399 ; ---------------------------------
   127C                    4400 _bulbs_start::
   127C                    4401 _bulbs:
   127C DD E5              4402 	push	ix
   127E DD 21 00 00        4403 	ld	ix,#0
   1282 DD 39              4404 	add	ix,sp
   1284 21 FA FF           4405 	ld	hl,#-6
   1287 39                 4406 	add	hl,sp
   1288 F9                 4407 	ld	sp,hl
                           4408 ;demo.c:605: ender+=enderdir;
   1289 21rE4s41           4409 	ld	hl,#_enderdir
   128C D5                 4410 	push	de
   128D FD 21rE2s41        4411 	ld	iy,#_ender
   1291 FD E5              4412 	push	iy
   1293 D1                 4413 	pop	de
   1294 1A                 4414 	ld	a,(de)
   1295 86                 4415 	add	a,(hl)
   1296 13                 4416 	inc	de
   1297 1B                 4417 	dec	de
   1298 C5                 4418 	push	bc
   1299 4F                 4419 	ld	c, a
   129A 13                 4420 	inc	de
   129B 1A                 4421 	ld	a, (de)
   129C 47                 4422 	ld	b, a
   129D 79                 4423 	ld	a, c
   129E 1B                 4424 	dec	de
   129F 12                 4425 	ld	(de), a
   12A0 78                 4426 	ld	a, b
   12A1 C1                 4427 	pop	bc
   12A2 23                 4428 	inc	hl
   12A3 8E                 4429 	adc	a,(hl)
   12A4 13                 4430 	inc	de
   12A5 12                 4431 	ld	(de),a
   12A6 D1                 4432 	pop	de
                           4433 ;demo.c:606: if (ender < 2) { enderdir = -enderdir; }
   12A7 3ArE2s41           4434 	ld	a,(#_ender+0)
   12AA D6 02              4435 	sub	a,#0x02
   12AC 3ArE3s41           4436 	ld	a,(#_ender+1)
   12AF DE 00              4437 	sbc	a,#0x00
   12B1 F2rD5s12           4438 	jp	P,00102$
   12B4 AF                 4439 	xor	a,a
   12B5 FD 21rE4s41        4440 	ld	iy,#_enderdir
   12B9 3E 00              4441 	ld	a,#0x00
   12BB FD 9E 00           4442 	sbc	a,0 (iy)
   12BE FD 21rE4s41        4443 	ld	iy,#_enderdir
   12C2 FD 77 00           4444 	ld	0 (iy),a
   12C5 FD 21rE4s41        4445 	ld	iy,#_enderdir
   12C9 3E 00              4446 	ld	a,#0x00
   12CB FD 9E 01           4447 	sbc	a,1 (iy)
   12CE FD 21rE4s41        4448 	ld	iy,#_enderdir
   12D2 FD 77 01           4449 	ld	1 (iy),a
   12D5                    4450 00102$:
                           4451 ;demo.c:607: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   12D5 3ArE2s41           4452 	ld	a,(#_ender+0)
   12D8 D6 D4              4453 	sub	a,#0xD4
   12DA 3ArE3s41           4454 	ld	a,(#_ender+1)
   12DD DE 00              4455 	sbc	a,#0x00
   12DF FAr05s13           4456 	jp	M,00104$
   12E2 AF                 4457 	xor	a,a
   12E3 FD 21rE4s41        4458 	ld	iy,#_enderdir
   12E7 3E 00              4459 	ld	a,#0x00
   12E9 FD 9E 00           4460 	sbc	a,0 (iy)
   12EC 21rE4s41           4461 	ld	hl,#_enderdir + 0
   12EF 77                 4462 	ld	(hl), a
   12F0 FD 21rE4s41        4463 	ld	iy,#_enderdir
   12F4 3E 00              4464 	ld	a,#0x00
   12F6 FD 9E 01           4465 	sbc	a,1 (iy)
   12F9 21rE5s41           4466 	ld	hl,#_enderdir + 1
   12FC 77                 4467 	ld	(hl), a
   12FD 2ArE6s41           4468 	ld	hl,(_sy)
   1300 2B                 4469 	dec	hl
   1301 2B                 4470 	dec	hl
   1302 22rE6s41           4471 	ld	(_sy),hl
   1305                    4472 00104$:
                           4473 ;demo.c:609: enderend = ender + 92;
   1305 3ArE2s41           4474 	ld	a,(#_ender+0)
   1308 C6 5C              4475 	add	a,#0x5C
   130A DD 77 FE           4476 	ld	-2 (ix),a
   130D 3ArE3s41           4477 	ld	a,(#_ender+1)
   1310 CE 00              4478 	adc	a,#0x00
   1312 DD 77 FF           4479 	ld	-1 (ix),a
                           4480 ;demo.c:611: if (enderend > 212) enderend = 212;
   1315 3E D4              4481 	ld	a,#0xD4
   1317 DD 96 FE           4482 	sub	a,-2 (ix)
   131A 3E 00              4483 	ld	a,#0x00
   131C DD 9E FF           4484 	sbc	a,-1 (ix)
   131F F2r2As13           4485 	jp	P,00106$
   1322 DD 36 FE D4        4486 	ld	-2 (ix),#0xD4
   1326 DD 36 FF 00        4487 	ld	-1 (ix),#0x00
   132A                    4488 00106$:
                           4489 ;demo.c:612: if (enderend > 212-16) sy = 16-(212-enderend);
   132A 3E C4              4490 	ld	a,#0xC4
   132C DD 96 FE           4491 	sub	a,-2 (ix)
   132F 3E 00              4492 	ld	a,#0x00
   1331 DD 9E FF           4493 	sbc	a,-1 (ix)
   1334 F2r4Fs13           4494 	jp	P,00108$
   1337 3E D4              4495 	ld	a,#0xD4
   1339 DD 96 FE           4496 	sub	a,-2 (ix)
   133C 5F                 4497 	ld	e,a
   133D 3E 00              4498 	ld	a,#0x00
   133F DD 9E FF           4499 	sbc	a,-1 (ix)
   1342 57                 4500 	ld	d,a
   1343 21rE6s41           4501 	ld	hl,#_sy
   1346 3E 10              4502 	ld	a,#0x10
   1348 93                 4503 	sub	a,e
   1349 77                 4504 	ld	(hl),a
   134A 3E 00              4505 	ld	a,#0x00
   134C 9A                 4506 	sbc	a,d
   134D 23                 4507 	inc	hl
   134E 77                 4508 	ld	(hl),a
   134F                    4509 00108$:
                           4510 ;demo.c:614: if(bulbflipper == 1) {
   134F 3ArDCs41           4511 	ld	a,(#_bulbflipper+0)
   1352 D6 01              4512 	sub	a,#0x01
   1354 20 06              4513 	jr	NZ,00133$
   1356 3ArDDs41           4514 	ld	a,(#_bulbflipper+1)
   1359 B7                 4515 	or	a,a
   135A 28 03              4516 	jr	Z,00134$
   135C                    4517 00133$:
   135C C3r15s14           4518 	jp	00110$
   135F                    4519 00134$:
                           4520 ;demo.c:615: cmd.size_x = 72;
   135F 11r94s41           4521 	ld	de,#_cmd + 8
   1362 EB                 4522 	ex	de,hl
   1363 36 48              4523 	ld	(hl),#0x48
   1365 23                 4524 	inc	hl
   1366 36 00              4525 	ld	(hl),#0x00
                           4526 ;demo.c:616: cmd.size_y = sy;
   1368 11r96s41           4527 	ld	de,#_cmd + 10
   136B ED 4BrE6s41        4528 	ld	bc,(_sy)
   136F 6B                 4529 	ld	l,e
   1370 62                 4530 	ld	h,d
   1371 71                 4531 	ld	(hl),c
   1372 23                 4532 	inc	hl
   1373 70                 4533 	ld	(hl),b
                           4534 ;demo.c:617: cmd.data = 0;
   1374 3E 00              4535 	ld	a,#0x00
   1376 32r98s41           4536 	ld	(#_cmd + 12),a
                           4537 ;demo.c:618: cmd.argument = 0x04; // from 72xY to left
   1379 3E 04              4538 	ld	a,#0x04
   137B 32r99s41           4539 	ld	(#_cmd + 13),a
                           4540 ;demo.c:619: cmd.command = 0xe0; // vram to vram, y only
   137E 01r9As41           4541 	ld	bc,#_cmd + 14
   1381 3E E0              4542 	ld	a,#0xE0
   1383 02                 4543 	ld	(bc),a
                           4544 ;demo.c:620: cmd.source_x = 72;
   1384 21r8Cs41           4545 	ld	hl,#_cmd
   1387 36 48              4546 	ld	(hl),#0x48
   1389 23                 4547 	inc	hl
   138A 36 00              4548 	ld	(hl),#0x00
                           4549 ;demo.c:621: cmd.dest_x = 72;
   138C 21r90s41           4550 	ld	hl, #_cmd + 4
   138F 36 48              4551 	ld	(hl),#0x48
   1391 23                 4552 	inc	hl
   1392 36 00              4553 	ld	(hl),#0x00
                           4554 ;demo.c:623: for (y = ender; y < enderend; y+=16) {
   1394 ED 4BrE2s41        4555 	ld	bc,(_ender)
   1398 DD 71 FC           4556 	ld	-4 (ix),c
   139B DD 70 FD           4557 	ld	-3 (ix),b
   139E                    4558 00112$:
   139E DD 7E FC           4559 	ld	a,-4 (ix)
   13A1 DD 96 FE           4560 	sub	a,-2 (ix)
   13A4 DD 7E FD           4561 	ld	a,-3 (ix)
   13A7 DD 9E FF           4562 	sbc	a,-1 (ix)
   13AA F2rFCs13           4563 	jp	P,00115$
                           4564 ;demo.c:624: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   13AD 01r8Es41           4565 	ld	bc,#_cmd + 2
   13B0 3ArDEs41           4566 	ld	a,(#_ff1+0)
   13B3 DD 86 FC           4567 	add	a,-4 (ix)
   13B6 5F                 4568 	ld	e,a
   13B7 3ArDFs41           4569 	ld	a,(#_ff1+1)
   13BA DD 8E FD           4570 	adc	a,-3 (ix)
   13BD 16 00              4571 	ld	d,#0x00
   13BF 21r00s00           4572 	ld	hl,#_sintab
   13C2 19                 4573 	add	hl,de
   13C3 5E                 4574 	ld	e,(hl)
   13C4 CB 2B              4575 	sra	e
   13C6 7B                 4576 	ld	a,e
   13C7 17                 4577 	rla	
   13C8 9F                 4578 	sbc	a,a
   13C9 57                 4579 	ld	d,a
   13CA 21 40 01           4580 	ld	hl,#0x0140
   13CD 19                 4581 	add	hl,de
   13CE EB                 4582 	ex	de,hl
   13CF 69                 4583 	ld	l,c
   13D0 60                 4584 	ld	h,b
   13D1 73                 4585 	ld	(hl),e
   13D2 23                 4586 	inc	hl
   13D3 72                 4587 	ld	(hl),d
                           4588 ;demo.c:625: cmd.dest_y = y;
   13D4 11r92s41           4589 	ld	de,#_cmd + 6
   13D7 EB                 4590 	ex	de,hl
   13D8 DD 7E FC           4591 	ld	a,-4 (ix)
   13DB 77                 4592 	ld	(hl),a
   13DC 23                 4593 	inc	hl
   13DD DD 7E FD           4594 	ld	a,-3 (ix)
   13E0 77                 4595 	ld	(hl),a
                           4596 ;demo.c:626: vdp_copier(&cmd);
   13E1 21r8Cs41           4597 	ld	hl,#_cmd
   13E4 E5                 4598 	push	hl
   13E5 CDr00s00           4599 	call	_vdp_copier
   13E8 F1                 4600 	pop	af
                           4601 ;demo.c:623: for (y = ender; y < enderend; y+=16) {
   13E9 DD 7E FC           4602 	ld	a,-4 (ix)
   13EC C6 10              4603 	add	a,#0x10
   13EE DD 77 FC           4604 	ld	-4 (ix),a
   13F1 DD 7E FD           4605 	ld	a,-3 (ix)
   13F4 CE 00              4606 	adc	a,#0x00
   13F6 DD 77 FD           4607 	ld	-3 (ix),a
   13F9 C3r9Es13           4608 	jp	00112$
   13FC                    4609 00115$:
                           4610 ;demo.c:628: ff1+=4;
   13FC 21rDEs41           4611 	ld	hl,#_ff1
   13FF 7E                 4612 	ld	a,(hl)
   1400 C6 04              4613 	add	a,#0x04
   1402 23                 4614 	inc	hl
   1403 2B                 4615 	dec	hl
   1404 C5                 4616 	push	bc
   1405 4F                 4617 	ld	c, a
   1406 23                 4618 	inc	hl
   1407 7E                 4619 	ld	a, (hl)
   1408 47                 4620 	ld	b, a
   1409 79                 4621 	ld	a, c
   140A 2B                 4622 	dec	hl
   140B 77                 4623 	ld	(hl), a
   140C 78                 4624 	ld	a, b
   140D C1                 4625 	pop	bc
   140E CE 00              4626 	adc	a,#0x00
   1410 23                 4627 	inc	hl
   1411 77                 4628 	ld	(hl),a
   1412 C3rBAs14           4629 	jp	00111$
   1415                    4630 00110$:
                           4631 ;demo.c:632: cmd.size_x = 72;
   1415 11r94s41           4632 	ld	de,#_cmd + 8
   1418 EB                 4633 	ex	de,hl
   1419 36 48              4634 	ld	(hl),#0x48
   141B 23                 4635 	inc	hl
   141C 36 00              4636 	ld	(hl),#0x00
                           4637 ;demo.c:633: cmd.size_y = sy;
   141E 01r96s41           4638 	ld	bc,#_cmd + 10
   1421 ED 5BrE6s41        4639 	ld	de,(_sy)
   1425 69                 4640 	ld	l,c
   1426 60                 4641 	ld	h,b
   1427 73                 4642 	ld	(hl),e
   1428 23                 4643 	inc	hl
   1429 72                 4644 	ld	(hl),d
                           4645 ;demo.c:634: cmd.data = 0;
   142A 11r98s41           4646 	ld	de,#_cmd + 12
   142D 3E 00              4647 	ld	a,#0x00
   142F 12                 4648 	ld	(de),a
                           4649 ;demo.c:635: cmd.argument = 0x00; // from 182xY to right
   1430 11r99s41           4650 	ld	de,#_cmd + 13
   1433 3E 00              4651 	ld	a,#0x00
   1435 12                 4652 	ld	(de),a
                           4653 ;demo.c:636: cmd.command = 0xe0; // vram to vram, y only
   1436 11r9As41           4654 	ld	de,#_cmd + 14
   1439 3E E0              4655 	ld	a,#0xE0
   143B 12                 4656 	ld	(de),a
                           4657 ;demo.c:637: cmd.source_x = 182;
   143C 21r8Cs41           4658 	ld	hl,#_cmd
   143F 36 B6              4659 	ld	(hl),#0xB6
   1441 23                 4660 	inc	hl
   1442 36 00              4661 	ld	(hl),#0x00
                           4662 ;demo.c:638: cmd.dest_x = 182;
   1444 11r90s41           4663 	ld	de,#_cmd + 4
   1447 6B                 4664 	ld	l,e
   1448 62                 4665 	ld	h,d
   1449 36 B6              4666 	ld	(hl),#0xB6
   144B 23                 4667 	inc	hl
   144C 36 00              4668 	ld	(hl),#0x00
                           4669 ;demo.c:640: for (y = ender; y < enderend; y+=16) {
   144E ED 4BrE2s41        4670 	ld	bc,(_ender)
   1452                    4671 00116$:
   1452 79                 4672 	ld	a,c
   1453 DD 96 FE           4673 	sub	a,-2 (ix)
   1456 78                 4674 	ld	a,b
   1457 DD 9E FF           4675 	sbc	a,-1 (ix)
   145A F2rA4s14           4676 	jp	P,00119$
                           4677 ;demo.c:641: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   145D 21r8Es41           4678 	ld	hl,#_cmd + 2
   1460 DD 75 FA           4679 	ld	-6 (ix),l
   1463 DD 74 FB           4680 	ld	-5 (ix),h
   1466 3ArE0s41           4681 	ld	a,(#_ff2+0)
   1469 81                 4682 	add	a,c
   146A 5F                 4683 	ld	e,a
   146B 3ArE1s41           4684 	ld	a,(#_ff2+1)
   146E 88                 4685 	adc	a,b
   146F 16 00              4686 	ld	d,#0x00
   1471 21r00s00           4687 	ld	hl,#_sintab
   1474 19                 4688 	add	hl,de
   1475 5E                 4689 	ld	e,(hl)
   1476 CB 2B              4690 	sra	e
   1478 7B                 4691 	ld	a,e
   1479 17                 4692 	rla	
   147A 9F                 4693 	sbc	a,a
   147B 57                 4694 	ld	d,a
   147C 21 40 01           4695 	ld	hl,#0x0140
   147F 19                 4696 	add	hl,de
   1480 EB                 4697 	ex	de,hl
   1481 DD 6E FA           4698 	ld	l,-6 (ix)
   1484 DD 66 FB           4699 	ld	h,-5 (ix)
   1487 73                 4700 	ld	(hl),e
   1488 23                 4701 	inc	hl
   1489 72                 4702 	ld	(hl),d
                           4703 ;demo.c:642: cmd.dest_y = y;
   148A 11r92s41           4704 	ld	de,#_cmd + 6
   148D EB                 4705 	ex	de,hl
   148E 71                 4706 	ld	(hl),c
   148F 23                 4707 	inc	hl
   1490 70                 4708 	ld	(hl),b
                           4709 ;demo.c:643: vdp_copier(&cmd);
   1491 C5                 4710 	push	bc
   1492 21r8Cs41           4711 	ld	hl,#_cmd
   1495 E5                 4712 	push	hl
   1496 CDr00s00           4713 	call	_vdp_copier
   1499 F1                 4714 	pop	af
   149A C1                 4715 	pop	bc
                           4716 ;demo.c:640: for (y = ender; y < enderend; y+=16) {
   149B 21 10 00           4717 	ld	hl,#0x0010
   149E 09                 4718 	add	hl,bc
   149F 4D                 4719 	ld	c,l
   14A0 44                 4720 	ld	b,h
   14A1 C3r52s14           4721 	jp	00116$
   14A4                    4722 00119$:
                           4723 ;demo.c:645: ff2+=4;
   14A4 21rE0s41           4724 	ld	hl,#_ff2
   14A7 7E                 4725 	ld	a,(hl)
   14A8 C6 04              4726 	add	a,#0x04
   14AA 23                 4727 	inc	hl
   14AB 2B                 4728 	dec	hl
   14AC C5                 4729 	push	bc
   14AD 4F                 4730 	ld	c, a
   14AE 23                 4731 	inc	hl
   14AF 7E                 4732 	ld	a, (hl)
   14B0 47                 4733 	ld	b, a
   14B1 79                 4734 	ld	a, c
   14B2 2B                 4735 	dec	hl
   14B3 77                 4736 	ld	(hl), a
   14B4 78                 4737 	ld	a, b
   14B5 C1                 4738 	pop	bc
   14B6 CE 00              4739 	adc	a,#0x00
   14B8 23                 4740 	inc	hl
   14B9 77                 4741 	ld	(hl),a
   14BA                    4742 00111$:
                           4743 ;demo.c:648: bulbflipper = -bulbflipper;
   14BA AF                 4744 	xor	a,a
   14BB FD 21rDCs41        4745 	ld	iy,#_bulbflipper
   14BF 3E 00              4746 	ld	a,#0x00
   14C1 FD 9E 00           4747 	sbc	a,0 (iy)
   14C4 21rDCs41           4748 	ld	hl,#_bulbflipper + 0
   14C7 77                 4749 	ld	(hl), a
   14C8 FD 21rDCs41        4750 	ld	iy,#_bulbflipper
   14CC 3E 00              4751 	ld	a,#0x00
   14CE FD 9E 01           4752 	sbc	a,1 (iy)
   14D1 21rDDs41           4753 	ld	hl,#_bulbflipper + 1
   14D4 77                 4754 	ld	(hl), a
   14D5 DD F9              4755 	ld	sp,ix
   14D7 DD E1              4756 	pop	ix
   14D9 C9                 4757 	ret
   14DA                    4758 _bulbs_end::
                           4759 ;demo.c:662: void animplay() {
                           4760 ;	---------------------------------
                           4761 ; Function animplay
                           4762 ; ---------------------------------
   14DA                    4763 _animplay_start::
   14DA                    4764 _animplay:
   14DA DD E5              4765 	push	ix
   14DC DD 21 00 00        4766 	ld	ix,#0
   14E0 DD 39              4767 	add	ix,sp
   14E2 F5                 4768 	push	af
   14E3 3B                 4769 	dec	sp
                           4770 ;demo.c:667: if (anim_init == 0) {
   14E4 3ArF0s41           4771 	ld	a,(#_anim_init+0)
   14E7 21rF1s41           4772 	ld	hl,#_anim_init + 1
   14EA B6                 4773 	or	a,(hl)
   14EB C2r80s16           4774 	jp	NZ,00120$
                           4775 ;demo.c:668: drawsine("L O A D I N G",8,100);
   14EE 21 08 64           4776 	ld	hl,#0x6408
   14F1 E5                 4777 	push	hl
   14F2 21r68s17           4778 	ld	hl,#__str_9
   14F5 E5                 4779 	push	hl
   14F6 CDr1Bs10           4780 	call	_drawsine
   14F9 F1                 4781 	pop	af
   14FA F1                 4782 	pop	af
                           4783 ;demo.c:671: uninstall_isr();
   14FB CDr00s00           4784 	call	_uninstall_isr
                           4785 ;demo.c:672: PLY_Stop();
   14FE CDr00s00           4786 	call	_PLY_Stop
                           4787 ;demo.c:673: PLY_SendRegisters();
   1501 CDr00s00           4788 	call	_PLY_SendRegisters
                           4789 ;demo.c:675: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1504 21 00 00           4790 	ld	hl,#0x0000
   1507 E5                 4791 	push	hl
   1508 2E 01              4792 	ld	l, #0x01
   150A E5                 4793 	push	hl
   150B 2E 00              4794 	ld	l, #0x00
   150D E5                 4795 	push	hl
   150E 21 09 37           4796 	ld	hl,#0x3709
   1511 E5                 4797 	push	hl
   1512 21r76s17           4798 	ld	hl,#__str_10
   1515 E5                 4799 	push	hl
   1516 CDr99s08           4800 	call	_pck_load
   1519 FD 21 0A 00        4801 	ld	iy,#0x000A
   151D FD 39              4802 	add	iy,sp
   151F FD F9              4803 	ld	sp,iy
                           4804 ;demo.c:678: scratch_clear();
   1521 CDr90s06           4805 	call	_scratch_clear
                           4806 ;demo.c:679: vdp_load_palette(scratch);
   1524 21r48s40           4807 	ld	hl,#_scratch
   1527 E5                 4808 	push	hl
   1528 CDr00s00           4809 	call	_vdp_load_palette
   152B F1                 4810 	pop	af
                           4811 ;demo.c:681: cmd.size_x = 256;
   152C 21r94s41           4812 	ld	hl, #_cmd + 8
   152F 36 00              4813 	ld	(hl),#0x00
   1531 23                 4814 	inc	hl
   1532 36 01              4815 	ld	(hl),#0x01
                           4816 ;demo.c:682: cmd.size_y = 212;
   1534 21r96s41           4817 	ld	hl, #_cmd + 10
   1537 36 D4              4818 	ld	(hl),#0xD4
   1539 23                 4819 	inc	hl
   153A 36 00              4820 	ld	(hl),#0x00
                           4821 ;demo.c:683: cmd.data = 0;
                           4822 ;demo.c:684: cmd.argument = 0x00;
   153C 3E 00              4823 	ld	a,#0x00
   153E 32r98s41           4824 	ld	(#_cmd + 12),a
   1541 32r99s41           4825 	ld	(#_cmd + 13),a
                           4826 ;demo.c:685: cmd.command = 0xd0; 
   1544 01r9As41           4827 	ld	bc,#_cmd + 14
   1547 3E D0              4828 	ld	a,#0xD0
   1549 02                 4829 	ld	(bc),a
                           4830 ;demo.c:686: cmd.source_x = 0;
   154A 21r8Cs41           4831 	ld	hl,#_cmd
   154D 36 00              4832 	ld	(hl),#0x00
   154F 23                 4833 	inc	hl
   1550 36 00              4834 	ld	(hl),#0x00
                           4835 ;demo.c:687: cmd.source_y = 0;
   1552 21r8Es41           4836 	ld	hl, #_cmd + 2
   1555 36 00              4837 	ld	(hl),#0x00
   1557 23                 4838 	inc	hl
   1558 36 00              4839 	ld	(hl),#0x00
                           4840 ;demo.c:688: cmd.dest_x = 0;
   155A 21r90s41           4841 	ld	hl, #_cmd + 4
   155D 36 00              4842 	ld	(hl),#0x00
   155F 23                 4843 	inc	hl
   1560 36 00              4844 	ld	(hl),#0x00
                           4845 ;demo.c:689: cmd.dest_y = 256;
   1562 21r92s41           4846 	ld	hl, #_cmd + 6
   1565 36 00              4847 	ld	(hl),#0x00
   1567 23                 4848 	inc	hl
   1568 36 01              4849 	ld	(hl),#0x01
                           4850 ;demo.c:690: vdp_copier(&cmd);
   156A 21r8Cs41           4851 	ld	hl,#_cmd
   156D E5                 4852 	push	hl
   156E CDr00s00           4853 	call	_vdp_copier
   1571 F1                 4854 	pop	af
                           4855 ;demo.c:692: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1572 21 00 00           4856 	ld	hl,#0x0000
   1575 E5                 4857 	push	hl
   1576 2E 01              4858 	ld	l, #0x01
   1578 E5                 4859 	push	hl
   1579 2E 00              4860 	ld	l, #0x00
   157B E5                 4861 	push	hl
   157C 21 76 3E           4862 	ld	hl,#0x3E76
   157F E5                 4863 	push	hl
   1580 21r82s17           4864 	ld	hl,#__str_11
   1583 E5                 4865 	push	hl
   1584 CDr99s08           4866 	call	_pck_load
   1587 FD 21 0A 00        4867 	ld	iy,#0x000A
   158B FD 39              4868 	add	iy,sp
   158D FD F9              4869 	ld	sp,iy
                           4870 ;demo.c:694: cmd.size_x = 256;
   158F 21r94s41           4871 	ld	hl, #_cmd + 8
   1592 36 00              4872 	ld	(hl),#0x00
   1594 23                 4873 	inc	hl
   1595 36 01              4874 	ld	(hl),#0x01
                           4875 ;demo.c:695: cmd.size_y = 212;
   1597 21r96s41           4876 	ld	hl, #_cmd + 10
   159A 36 D4              4877 	ld	(hl),#0xD4
   159C 23                 4878 	inc	hl
   159D 36 00              4879 	ld	(hl),#0x00
                           4880 ;demo.c:696: cmd.data = 0;
                           4881 ;demo.c:697: cmd.argument = 0x00;
   159F 3E 00              4882 	ld	a,#0x00
   15A1 32r98s41           4883 	ld	(#_cmd + 12),a
   15A4 32r99s41           4884 	ld	(#_cmd + 13),a
                           4885 ;demo.c:698: cmd.command = 0xd0; 
   15A7 01r9As41           4886 	ld	bc,#_cmd + 14
   15AA 3E D0              4887 	ld	a,#0xD0
   15AC 02                 4888 	ld	(bc),a
                           4889 ;demo.c:699: cmd.source_x = 0;
   15AD 21r8Cs41           4890 	ld	hl,#_cmd
   15B0 36 00              4891 	ld	(hl),#0x00
   15B2 23                 4892 	inc	hl
   15B3 36 00              4893 	ld	(hl),#0x00
                           4894 ;demo.c:700: cmd.source_y = 0;
   15B5 21r8Es41           4895 	ld	hl, #_cmd + 2
   15B8 36 00              4896 	ld	(hl),#0x00
   15BA 23                 4897 	inc	hl
   15BB 36 00              4898 	ld	(hl),#0x00
                           4899 ;demo.c:701: cmd.dest_x = 0;
   15BD 21r90s41           4900 	ld	hl, #_cmd + 4
   15C0 36 00              4901 	ld	(hl),#0x00
   15C2 23                 4902 	inc	hl
   15C3 36 00              4903 	ld	(hl),#0x00
                           4904 ;demo.c:702: cmd.dest_y = 512;
   15C5 21r92s41           4905 	ld	hl, #_cmd + 6
   15C8 36 00              4906 	ld	(hl),#0x00
   15CA 23                 4907 	inc	hl
   15CB 36 02              4908 	ld	(hl),#0x02
                           4909 ;demo.c:703: vdp_copier(&cmd);
   15CD 21r8Cs41           4910 	ld	hl,#_cmd
   15D0 E5                 4911 	push	hl
   15D1 CDr00s00           4912 	call	_vdp_copier
   15D4 F1                 4913 	pop	af
                           4914 ;demo.c:706: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   15D5 21 00 00           4915 	ld	hl,#0x0000
   15D8 E5                 4916 	push	hl
   15D9 2E 01              4917 	ld	l, #0x01
   15DB E5                 4918 	push	hl
   15DC 2E 00              4919 	ld	l, #0x00
   15DE E5                 4920 	push	hl
   15DF 21 9E 3A           4921 	ld	hl,#0x3A9E
   15E2 E5                 4922 	push	hl
   15E3 21r8Es17           4923 	ld	hl,#__str_12
   15E6 E5                 4924 	push	hl
   15E7 CDr99s08           4925 	call	_pck_load
   15EA FD 21 0A 00        4926 	ld	iy,#0x000A
   15EE FD 39              4927 	add	iy,sp
   15F0 FD F9              4928 	ld	sp,iy
                           4929 ;demo.c:708: cmd.size_x = 256;
   15F2 21r94s41           4930 	ld	hl, #_cmd + 8
   15F5 36 00              4931 	ld	(hl),#0x00
   15F7 23                 4932 	inc	hl
   15F8 36 01              4933 	ld	(hl),#0x01
                           4934 ;demo.c:709: cmd.size_y = 212;
   15FA 21r96s41           4935 	ld	hl, #_cmd + 10
   15FD 36 D4              4936 	ld	(hl),#0xD4
   15FF 23                 4937 	inc	hl
   1600 36 00              4938 	ld	(hl),#0x00
                           4939 ;demo.c:710: cmd.data = 0;
                           4940 ;demo.c:711: cmd.argument = 0x00;
   1602 3E 00              4941 	ld	a,#0x00
   1604 32r98s41           4942 	ld	(#_cmd + 12),a
   1607 32r99s41           4943 	ld	(#_cmd + 13),a
                           4944 ;demo.c:712: cmd.command = 0xd0; 
   160A 01r9As41           4945 	ld	bc,#_cmd + 14
   160D 3E D0              4946 	ld	a,#0xD0
   160F 02                 4947 	ld	(bc),a
                           4948 ;demo.c:713: cmd.source_x = 0;
   1610 21r8Cs41           4949 	ld	hl,#_cmd
   1613 36 00              4950 	ld	(hl),#0x00
   1615 23                 4951 	inc	hl
   1616 36 00              4952 	ld	(hl),#0x00
                           4953 ;demo.c:714: cmd.source_y = 0;
   1618 21r8Es41           4954 	ld	hl, #_cmd + 2
   161B 36 00              4955 	ld	(hl),#0x00
   161D 23                 4956 	inc	hl
   161E 36 00              4957 	ld	(hl),#0x00
                           4958 ;demo.c:715: cmd.dest_x = 0;
   1620 21r90s41           4959 	ld	hl, #_cmd + 4
   1623 36 00              4960 	ld	(hl),#0x00
   1625 23                 4961 	inc	hl
   1626 36 00              4962 	ld	(hl),#0x00
                           4963 ;demo.c:716: cmd.dest_y = 768;
   1628 21r92s41           4964 	ld	hl, #_cmd + 6
   162B 36 00              4965 	ld	(hl),#0x00
   162D 23                 4966 	inc	hl
   162E 36 03              4967 	ld	(hl),#0x03
                           4968 ;demo.c:717: vdp_copier(&cmd);
   1630 21r8Cs41           4969 	ld	hl,#_cmd
   1633 E5                 4970 	push	hl
   1634 CDr00s00           4971 	call	_vdp_copier
   1637 F1                 4972 	pop	af
                           4973 ;demo.c:719: vdp_register(9,130); // 50hz,212
   1638 21 09 82           4974 	ld	hl,#0x8209
   163B E5                 4975 	push	hl
   163C CDr00s00           4976 	call	_vdp_register
   163F F1                 4977 	pop	af
                           4978 ;demo.c:721: scratch_clear();
   1640 CDr90s06           4979 	call	_scratch_clear
                           4980 ;demo.c:723: vdp_set_write_address(0, 0);
   1643 21 00 00           4981 	ld	hl,#0x0000
   1646 E5                 4982 	push	hl
   1647 3E 00              4983 	ld	a,#0x00
   1649 F5                 4984 	push	af
   164A 33                 4985 	inc	sp
   164B CDr00s00           4986 	call	_vdp_set_write_address
   164E F1                 4987 	pop	af
   164F 33                 4988 	inc	sp
                           4989 ;demo.c:725: for (y = 0; y < 212; y++) { 
   1650 0E D4              4990 	ld	c,#0xD4
   1652                    4991 00109$:
                           4992 ;demo.c:726: vdp_load_screen(scratch, 128);
   1652 C5                 4993 	push	bc
   1653 3E 80              4994 	ld	a,#0x80
   1655 F5                 4995 	push	af
   1656 33                 4996 	inc	sp
   1657 21r48s40           4997 	ld	hl,#_scratch
   165A E5                 4998 	push	hl
   165B CDr00s00           4999 	call	_vdp_load_screen
   165E F1                 5000 	pop	af
   165F 33                 5001 	inc	sp
   1660 C1                 5002 	pop	bc
   1661 0D                 5003 	dec	c
                           5004 ;demo.c:725: for (y = 0; y < 212; y++) { 
   1662 AF                 5005 	xor	a,a
   1663 B1                 5006 	or	a,c
   1664 20 EC              5007 	jr	NZ,00109$
                           5008 ;demo.c:729: install_isr(my_isr);
   1666 21rECs04           5009 	ld	hl,#_my_isr
   1669 E5                 5010 	push	hl
   166A CDr00s00           5011 	call	_install_isr
   166D F1                 5012 	pop	af
                           5013 ;demo.c:730: anim_init = 1;
   166E 21rF0s41           5014 	ld	hl,#_anim_init + 0
   1671 36 01              5015 	ld	(hl), #0x01
   1673 21rF1s41           5016 	ld	hl,#_anim_init + 1
   1676 36 00              5017 	ld	(hl), #0x00
                           5018 ;demo.c:731: vdp_load_palette(tf_palette);
   1678 21r48s41           5019 	ld	hl,#_tf_palette
   167B E5                 5020 	push	hl
   167C CDr00s00           5021 	call	_vdp_load_palette
   167F F1                 5022 	pop	af
                           5023 ;demo.c:734: for (y = 0; y < 106; y+=1) {
   1680                    5024 00120$:
   1680 DD 36 FF 00        5025 	ld	-1 (ix),#0x00
   1684                    5026 00110$:
   1684 DD 7E FF           5027 	ld	a,-1 (ix)
   1687 D6 6A              5028 	sub	a,#0x6A
   1689 D2r09s17           5029 	jp	NC,00113$
                           5030 ;demo.c:735: cmd.source_x = 0;
   168C 21r8Cs41           5031 	ld	hl,#_cmd
   168F 36 00              5032 	ld	(hl),#0x00
   1691 23                 5033 	inc	hl
   1692 36 00              5034 	ld	(hl),#0x00
                           5035 ;demo.c:736: cmd.source_y = 256+po+frames+(y>>1);
   1694 11r8Es41           5036 	ld	de,#_cmd + 2
   1697 3ArECs41           5037 	ld	a,(#_po+0)
   169A 4F                 5038 	ld	c,a
   169B 3ArEDs41           5039 	ld	a,(#_po+1)
   169E C6 01              5040 	add	a,#0x01
   16A0 47                 5041 	ld	b,a
   16A1 21rEEs41           5042 	ld	hl,#_frames
   16A4 79                 5043 	ld	a,c
   16A5 86                 5044 	add	a,(hl)
   16A6 DD 77 FD           5045 	ld	-3 (ix),a
   16A9 78                 5046 	ld	a,b
   16AA 23                 5047 	inc	hl
   16AB 8E                 5048 	adc	a,(hl)
   16AC DD 77 FE           5049 	ld	-2 (ix),a
   16AF DD 4E FF           5050 	ld	c,-1 (ix)
   16B2 CB 39              5051 	srl	c
   16B4 06 00              5052 	ld	b,#0x00
   16B6 DD 7E FD           5053 	ld	a,-3 (ix)
   16B9 81                 5054 	add	a,c
   16BA 4F                 5055 	ld	c,a
   16BB DD 7E FE           5056 	ld	a,-2 (ix)
   16BE 88                 5057 	adc	a,b
   16BF 47                 5058 	ld	b,a
   16C0 6B                 5059 	ld	l,e
   16C1 62                 5060 	ld	h,d
   16C2 71                 5061 	ld	(hl),c
   16C3 23                 5062 	inc	hl
   16C4 70                 5063 	ld	(hl),b
                           5064 ;demo.c:737: cmd.dest_x = 0;
   16C5 21r90s41           5065 	ld	hl, #_cmd + 4
   16C8 36 00              5066 	ld	(hl),#0x00
   16CA 23                 5067 	inc	hl
   16CB 36 00              5068 	ld	(hl),#0x00
                           5069 ;demo.c:738: cmd.dest_y = (y<<1);
   16CD 01r92s41           5070 	ld	bc,#_cmd + 6
   16D0 DD 5E FF           5071 	ld	e,-1 (ix)
   16D3 16 00              5072 	ld	d,#0x00
   16D5 CB 23              5073 	sla	e
   16D7 CB 12              5074 	rl	d
   16D9 69                 5075 	ld	l,c
   16DA 60                 5076 	ld	h,b
   16DB 73                 5077 	ld	(hl),e
   16DC 23                 5078 	inc	hl
   16DD 72                 5079 	ld	(hl),d
                           5080 ;demo.c:739: cmd.size_x = 256;
   16DE 21r94s41           5081 	ld	hl, #_cmd + 8
   16E1 36 00              5082 	ld	(hl),#0x00
   16E3 23                 5083 	inc	hl
   16E4 36 01              5084 	ld	(hl),#0x01
                           5085 ;demo.c:740: cmd.size_y = 1;
   16E6 21r96s41           5086 	ld	hl, #_cmd + 10
   16E9 36 01              5087 	ld	(hl),#0x01
   16EB 23                 5088 	inc	hl
   16EC 36 00              5089 	ld	(hl),#0x00
                           5090 ;demo.c:741: cmd.data = 0;
                           5091 ;demo.c:742: cmd.argument = 0x00;
   16EE 3E 00              5092 	ld	a,#0x00
   16F0 32r98s41           5093 	ld	(#_cmd + 12),a
   16F3 32r99s41           5094 	ld	(#_cmd + 13),a
                           5095 ;demo.c:743: cmd.command = 0xD0;
   16F6 3E D0              5096 	ld	a,#0xD0
   16F8 32r9As41           5097 	ld	(#_cmd + 14),a
                           5098 ;demo.c:744: vdp_copier(&cmd);
   16FB 21r8Cs41           5099 	ld	hl,#_cmd
   16FE E5                 5100 	push	hl
   16FF CDr00s00           5101 	call	_vdp_copier
   1702 F1                 5102 	pop	af
                           5103 ;demo.c:734: for (y = 0; y < 106; y+=1) {
   1703 DD 34 FF           5104 	inc	-1 (ix)
   1706 C3r84s16           5105 	jp	00110$
   1709                    5106 00113$:
                           5107 ;demo.c:747: frames+=53;
   1709 21rEEs41           5108 	ld	hl,#_frames
   170C 7E                 5109 	ld	a,(hl)
   170D C6 35              5110 	add	a,#0x35
   170F 23                 5111 	inc	hl
   1710 2B                 5112 	dec	hl
   1711 C5                 5113 	push	bc
   1712 4F                 5114 	ld	c, a
   1713 23                 5115 	inc	hl
   1714 7E                 5116 	ld	a, (hl)
   1715 47                 5117 	ld	b, a
   1716 79                 5118 	ld	a, c
   1717 2B                 5119 	dec	hl
   1718 77                 5120 	ld	(hl), a
   1719 78                 5121 	ld	a, b
   171A C1                 5122 	pop	bc
   171B CE 00              5123 	adc	a,#0x00
   171D 23                 5124 	inc	hl
   171E 77                 5125 	ld	(hl),a
                           5126 ;demo.c:748: if (frames >= 212) { frames = 0; po+=256; }
   171F 3ArEEs41           5127 	ld	a,(#_frames+0)
   1722 D6 D4              5128 	sub	a,#0xD4
   1724 3ArEFs41           5129 	ld	a,(#_frames+1)
   1727 DE 00              5130 	sbc	a,#0x00
   1729 FAr4Cs17           5131 	jp	M,00104$
   172C 21rEEs41           5132 	ld	hl,#_frames + 0
   172F 36 00              5133 	ld	(hl), #0x00
   1731 21rEFs41           5134 	ld	hl,#_frames + 1
   1734 36 00              5135 	ld	(hl), #0x00
   1736 21rECs41           5136 	ld	hl,#_po
   1739 7E                 5137 	ld	a,(hl)
   173A C6 00              5138 	add	a,#0x00
   173C 23                 5139 	inc	hl
   173D 2B                 5140 	dec	hl
   173E C5                 5141 	push	bc
   173F 4F                 5142 	ld	c, a
   1740 23                 5143 	inc	hl
   1741 7E                 5144 	ld	a, (hl)
   1742 47                 5145 	ld	b, a
   1743 79                 5146 	ld	a, c
   1744 2B                 5147 	dec	hl
   1745 77                 5148 	ld	(hl), a
   1746 78                 5149 	ld	a, b
   1747 C1                 5150 	pop	bc
   1748 CE 01              5151 	adc	a,#0x01
   174A 23                 5152 	inc	hl
   174B 77                 5153 	ld	(hl),a
   174C                    5154 00104$:
                           5155 ;demo.c:749: if (po >= 768) {
   174C 3ArECs41           5156 	ld	a,(#_po+0)
   174F D6 00              5157 	sub	a,#0x00
   1751 3ArEDs41           5158 	ld	a,(#_po+1)
   1754 DE 03              5159 	sbc	a,#0x03
   1756 FAr63s17           5160 	jp	M,00114$
                           5161 ;demo.c:750: po = 0;
   1759 21rECs41           5162 	ld	hl,#_po + 0
   175C 36 00              5163 	ld	(hl), #0x00
   175E 21rEDs41           5164 	ld	hl,#_po + 1
   1761 36 00              5165 	ld	(hl), #0x00
   1763                    5166 00114$:
   1763 DD F9              5167 	ld	sp,ix
   1765 DD E1              5168 	pop	ix
   1767 C9                 5169 	ret
   1768                    5170 _animplay_end::
   1768                    5171 __str_9:
   1768 4C 20 4F 20 41 20  5172 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1775 00                 5173 	.db 0x00
   1776                    5174 __str_10:
   1776 4C 46 31 20 20 20  5175 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1781 00                 5176 	.db 0x00
   1782                    5177 __str_11:
   1782 4C 46 32 20 20 20  5178 	.ascii "LF2     PCK"
        20 20 50 43 4B
   178D 00                 5179 	.db 0x00
   178E                    5180 __str_12:
   178E 4C 46 33 20 20 20  5181 	.ascii "LF3     PCK"
        20 20 50 43 4B
   1799 00                 5182 	.db 0x00
                           5183 ;demo.c:766: void drawbox(uint8_t x, uint8_t y) {
                           5184 ;	---------------------------------
                           5185 ; Function drawbox
                           5186 ; ---------------------------------
   179A                    5187 _drawbox_start::
   179A                    5188 _drawbox:
   179A DD E5              5189 	push	ix
   179C DD 21 00 00        5190 	ld	ix,#0
   17A0 DD 39              5191 	add	ix,sp
                           5192 ;demo.c:767: cmd.source_x = boxes_x[boxi];
   17A2 21r08s42           5193 	ld	hl,#_boxi
   17A5 3ErF9              5194 	ld	a,#<_boxes_x
   17A7 86                 5195 	add	a,(hl)
   17A8 4F                 5196 	ld	c,a
   17A9 3Es41              5197 	ld	a,#>_boxes_x
   17AB CE 00              5198 	adc	a,#0x00
   17AD 47                 5199 	ld	b,a
   17AE 0A                 5200 	ld	a,(bc)
   17AF 4F                 5201 	ld	c,a
   17B0 06 00              5202 	ld	b,#0x00
   17B2 21r8Cs41           5203 	ld	hl,#_cmd
   17B5 71                 5204 	ld	(hl),c
   17B6 23                 5205 	inc	hl
   17B7 70                 5206 	ld	(hl),b
                           5207 ;demo.c:768: cmd.source_y = boxes_y[boxi];
   17B8 01r8Es41           5208 	ld	bc,#_cmd + 2
   17BB 3Ar08s42           5209 	ld	a,(#_boxi+0)
   17BE 87                 5210 	add	a,a
   17BF C6rFE              5211 	add	a,#<_boxes_y
   17C1 6F                 5212 	ld	l,a
   17C2 3Es41              5213 	ld	a,#>_boxes_y
   17C4 CE 00              5214 	adc	a,#0x00
   17C6 67                 5215 	ld	h,a
   17C7 5E                 5216 	ld	e,(hl)
   17C8 23                 5217 	inc	hl
   17C9 56                 5218 	ld	d,(hl)
   17CA 69                 5219 	ld	l,c
   17CB 60                 5220 	ld	h,b
   17CC 73                 5221 	ld	(hl),e
   17CD 23                 5222 	inc	hl
   17CE 72                 5223 	ld	(hl),d
                           5224 ;demo.c:769: cmd.dest_x = x;
   17CF 01r90s41           5225 	ld	bc,#_cmd + 4
   17D2 DD 5E 04           5226 	ld	e,4 (ix)
   17D5 16 00              5227 	ld	d,#0x00
   17D7 69                 5228 	ld	l,c
   17D8 60                 5229 	ld	h,b
   17D9 73                 5230 	ld	(hl),e
   17DA 23                 5231 	inc	hl
   17DB 72                 5232 	ld	(hl),d
                           5233 ;demo.c:770: cmd.dest_y = y;
   17DC 01r92s41           5234 	ld	bc,#_cmd + 6
   17DF DD 5E 05           5235 	ld	e,5 (ix)
   17E2 16 00              5236 	ld	d,#0x00
   17E4 69                 5237 	ld	l,c
   17E5 60                 5238 	ld	h,b
   17E6 73                 5239 	ld	(hl),e
   17E7 23                 5240 	inc	hl
   17E8 72                 5241 	ld	(hl),d
                           5242 ;demo.c:771: cmd.size_x = 36;
   17E9 21r94s41           5243 	ld	hl, #_cmd + 8
   17EC 36 24              5244 	ld	(hl),#0x24
   17EE 23                 5245 	inc	hl
   17EF 36 00              5246 	ld	(hl),#0x00
                           5247 ;demo.c:772: cmd.size_y = 36;
   17F1 21r96s41           5248 	ld	hl, #_cmd + 10
   17F4 36 24              5249 	ld	(hl),#0x24
   17F6 23                 5250 	inc	hl
   17F7 36 00              5251 	ld	(hl),#0x00
                           5252 ;demo.c:773: cmd.data = 0;
                           5253 ;demo.c:774: cmd.argument = 0x00;
   17F9 3E 00              5254 	ld	a,#0x00
   17FB 32r98s41           5255 	ld	(#_cmd + 12),a
   17FE 32r99s41           5256 	ld	(#_cmd + 13),a
                           5257 ;demo.c:775: cmd.command = 0x98; // TIMP sprite
   1801 3E 98              5258 	ld	a,#0x98
   1803 32r9As41           5259 	ld	(#_cmd + 14),a
                           5260 ;demo.c:776: vdp_copier(&cmd);
   1806 21r8Cs41           5261 	ld	hl,#_cmd
   1809 E5                 5262 	push	hl
   180A CDr00s00           5263 	call	_vdp_copier
   180D F1                 5264 	pop	af
                           5265 ;demo.c:778: prevx = x;
   180E DD 7E 04           5266 	ld	a,4 (ix)
   1811 21rF5s41           5267 	ld	hl,#_prevx + 0
   1814 77                 5268 	ld	(hl), a
   1815 21rF6s41           5269 	ld	hl,#_prevx + 1
   1818 36 00              5270 	ld	(hl), #0x00
                           5271 ;demo.c:779: prevy = y;
   181A DD 7E 05           5272 	ld	a,5 (ix)
   181D 21rF7s41           5273 	ld	hl,#_prevy + 0
   1820 77                 5274 	ld	(hl), a
   1821 21rF8s41           5275 	ld	hl,#_prevy + 1
   1824 36 00              5276 	ld	(hl), #0x00
   1826 DD E1              5277 	pop	ix
   1828 C9                 5278 	ret
   1829                    5279 _drawbox_end::
                           5280 ;demo.c:793: void boxes() {
                           5281 ;	---------------------------------
                           5282 ; Function boxes
                           5283 ; ---------------------------------
   1829                    5284 _boxes_start::
   1829                    5285 _boxes:
   1829 DD E5              5286 	push	ix
   182B DD 21 00 00        5287 	ld	ix,#0
   182F DD 39              5288 	add	ix,sp
   1831 F5                 5289 	push	af
                           5290 ;demo.c:797: if (bx < 0) return;
   1832 FD 21r09s42        5291 	ld	iy,#_bx
   1836 FD CB 01 7E        5292 	bit	7,1 (iy)
   183A C2r50s1C           5293 	jp	NZ,00149$
                           5294 ;demo.c:799: if (bonc == 1) {
   183D 3Ar11s42           5295 	ld	a,(#_bonc+0)
   1840 D6 01              5296 	sub	a,#0x01
   1842 20 06              5297 	jr	NZ,00178$
   1844 3Ar12s42           5298 	ld	a,(#_bonc+1)
   1847 B7                 5299 	or	a,a
   1848 28 02              5300 	jr	Z,00179$
   184A                    5301 00178$:
   184A 18 4D              5302 	jr	00104$
   184C                    5303 00179$:
                           5304 ;demo.c:801: cmd.source_x = 0;
   184C 21r8Cs41           5305 	ld	hl,#_cmd
   184F 36 00              5306 	ld	(hl),#0x00
   1851 23                 5307 	inc	hl
   1852 36 00              5308 	ld	(hl),#0x00
                           5309 ;demo.c:802: cmd.source_y = 256;
   1854 21r8Es41           5310 	ld	hl, #_cmd + 2
   1857 36 00              5311 	ld	(hl),#0x00
   1859 23                 5312 	inc	hl
   185A 36 01              5313 	ld	(hl),#0x01
                           5314 ;demo.c:803: cmd.dest_x = pbx;
   185C 01r90s41           5315 	ld	bc,#_cmd + 4
   185F ED 5Br13s42        5316 	ld	de,(_pbx)
   1863 69                 5317 	ld	l,c
   1864 60                 5318 	ld	h,b
   1865 73                 5319 	ld	(hl),e
   1866 23                 5320 	inc	hl
   1867 72                 5321 	ld	(hl),d
                           5322 ;demo.c:804: cmd.dest_y = pbt;
   1868 01r92s41           5323 	ld	bc,#_cmd + 6
   186B ED 5Br15s42        5324 	ld	de,(_pbt)
   186F 69                 5325 	ld	l,c
   1870 60                 5326 	ld	h,b
   1871 73                 5327 	ld	(hl),e
   1872 23                 5328 	inc	hl
   1873 72                 5329 	ld	(hl),d
                           5330 ;demo.c:805: cmd.size_x = 36;
   1874 21r94s41           5331 	ld	hl, #_cmd + 8
   1877 36 24              5332 	ld	(hl),#0x24
   1879 23                 5333 	inc	hl
   187A 36 00              5334 	ld	(hl),#0x00
                           5335 ;demo.c:806: cmd.size_y = 36;
   187C 21r96s41           5336 	ld	hl, #_cmd + 10
   187F 36 24              5337 	ld	(hl),#0x24
   1881 23                 5338 	inc	hl
   1882 36 00              5339 	ld	(hl),#0x00
                           5340 ;demo.c:807: cmd.data = 0;
                           5341 ;demo.c:808: cmd.argument = 0x00;
   1884 3E 00              5342 	ld	a,#0x00
   1886 32r98s41           5343 	ld	(#_cmd + 12),a
   1889 32r99s41           5344 	ld	(#_cmd + 13),a
                           5345 ;demo.c:809: cmd.command = 0xD0; // HMMM
   188C 3E D0              5346 	ld	a,#0xD0
   188E 32r9As41           5347 	ld	(#_cmd + 14),a
                           5348 ;demo.c:810: vdp_copier(&cmd);
   1891 21r8Cs41           5349 	ld	hl,#_cmd
   1894 E5                 5350 	push	hl
   1895 CDr00s00           5351 	call	_vdp_copier
   1898 F1                 5352 	pop	af
   1899                    5353 00104$:
                           5354 ;demo.c:813: if (boxes_init == 0) {
   1899 AF                 5355 	xor	a,a
   189A 21rF2s41           5356 	ld	hl,#_boxes_init + 0
   189D B6                 5357 	or	a,(hl)
   189E C2rA0s19           5358 	jp	NZ,00106$
                           5359 ;demo.c:814: boxes_init = 1;
   18A1 FD 21rF2s41        5360 	ld	iy,#_boxes_init
   18A5 FD 36 00 01        5361 	ld	0 (iy),#0x01
                           5362 ;demo.c:816: cmd.size_x = 8;
   18A9 21r94s41           5363 	ld	hl, #_cmd + 8
   18AC 36 08              5364 	ld	(hl),#0x08
   18AE 23                 5365 	inc	hl
   18AF 36 00              5366 	ld	(hl),#0x00
                           5367 ;demo.c:817: cmd.size_y = 212;
   18B1 21r96s41           5368 	ld	hl, #_cmd + 10
   18B4 36 D4              5369 	ld	(hl),#0xD4
   18B6 23                 5370 	inc	hl
   18B7 36 00              5371 	ld	(hl),#0x00
                           5372 ;demo.c:818: cmd.data = 0;
                           5373 ;demo.c:819: cmd.argument = 0x00; // from 70xY to left
   18B9 3E 00              5374 	ld	a,#0x00
   18BB 32r98s41           5375 	ld	(#_cmd + 12),a
   18BE 32r99s41           5376 	ld	(#_cmd + 13),a
                           5377 ;demo.c:820: cmd.command = 0xd0; // vram to vram, y only
   18C1 01r9As41           5378 	ld	bc,#_cmd + 14
   18C4 3E D0              5379 	ld	a,#0xD0
   18C6 02                 5380 	ld	(bc),a
                           5381 ;demo.c:821: cmd.source_x = 248;
   18C7 21r8Cs41           5382 	ld	hl,#_cmd
   18CA 36 F8              5383 	ld	(hl),#0xF8
   18CC 23                 5384 	inc	hl
   18CD 36 00              5385 	ld	(hl),#0x00
                           5386 ;demo.c:822: cmd.source_y = 0;
   18CF 21r8Es41           5387 	ld	hl, #_cmd + 2
   18D2 36 00              5388 	ld	(hl),#0x00
   18D4 23                 5389 	inc	hl
   18D5 36 00              5390 	ld	(hl),#0x00
                           5391 ;demo.c:823: cmd.dest_y = 0;
   18D7 21r92s41           5392 	ld	hl, #_cmd + 6
   18DA 36 00              5393 	ld	(hl),#0x00
   18DC 23                 5394 	inc	hl
   18DD 36 00              5395 	ld	(hl),#0x00
                           5396 ;demo.c:825: for (x = 248; x >= 0; x-=8) {
   18DF 01 F8 00           5397 	ld	bc,#0x00F8
   18E2                    5398 00137$:
   18E2 78                 5399 	ld	a,b
   18E3 CB 7F              5400 	bit	7,a
   18E5 20 38              5401 	jr	NZ,00140$
                           5402 ;demo.c:826: waitVB();
   18E7 76                 5403 		halt 
                           5404 ;demo.c:827: cmd.dest_x = x;
   18E8 11r90s41           5405 	ld	de,#_cmd + 4
   18EB EB                 5406 	ex	de,hl
   18EC 71                 5407 	ld	(hl),c
   18ED 23                 5408 	inc	hl
   18EE 70                 5409 	ld	(hl),b
                           5410 ;demo.c:828: cmd.dest_y = 0;
   18EF 11r92s41           5411 	ld	de,#_cmd + 6
   18F2 EB                 5412 	ex	de,hl
   18F3 36 00              5413 	ld	(hl),#0x00
   18F5 23                 5414 	inc	hl
   18F6 36 00              5415 	ld	(hl),#0x00
                           5416 ;demo.c:829: vdp_copier(&cmd);
   18F8 C5                 5417 	push	bc
   18F9 21r8Cs41           5418 	ld	hl,#_cmd
   18FC E5                 5419 	push	hl
   18FD CDr00s00           5420 	call	_vdp_copier
   1900 F1                 5421 	pop	af
   1901 C1                 5422 	pop	bc
                           5423 ;demo.c:830: cmd.dest_y = 256;
   1902 11r92s41           5424 	ld	de,#_cmd + 6
   1905 EB                 5425 	ex	de,hl
   1906 36 00              5426 	ld	(hl),#0x00
   1908 23                 5427 	inc	hl
   1909 36 01              5428 	ld	(hl),#0x01
                           5429 ;demo.c:831: vdp_copier(&cmd);
   190B C5                 5430 	push	bc
   190C 21r8Cs41           5431 	ld	hl,#_cmd
   190F E5                 5432 	push	hl
   1910 CDr00s00           5433 	call	_vdp_copier
   1913 F1                 5434 	pop	af
   1914 C1                 5435 	pop	bc
                           5436 ;demo.c:825: for (x = 248; x >= 0; x-=8) {
   1915 79                 5437 	ld	a,c
   1916 C6 F8              5438 	add	a,#0xF8
   1918 4F                 5439 	ld	c,a
   1919 78                 5440 	ld	a,b
   191A CE FF              5441 	adc	a,#0xFF
   191C 47                 5442 	ld	b,a
   191D 18 C3              5443 	jr	00137$
   191F                    5444 00140$:
                           5445 ;demo.c:834: for (x=0;x < 8;x++) {
   191F DD 36 FE 00        5446 	ld	-2 (ix),#0x00
   1923 DD 36 FF 00        5447 	ld	-1 (ix),#0x00
   1927                    5448 00145$:
   1927 DD 7E FE           5449 	ld	a,-2 (ix)
   192A D6 08              5450 	sub	a,#0x08
   192C DD 7E FF           5451 	ld	a,-1 (ix)
   192F DE 00              5452 	sbc	a,#0x00
   1931 F2r8Bs19           5453 	jp	P,00148$
                           5454 ;demo.c:836: for (y=0;y < 9;y++) {
   1934 11 00 00           5455 	ld	de,#0x0000
   1937                    5456 00141$:
   1937 7B                 5457 	ld	a,e
   1938 D6 09              5458 	sub	a,#0x09
   193A 7A                 5459 	ld	a,d
   193B DE 00              5460 	sbc	a,#0x00
   193D F2r80s19           5461 	jp	P,00147$
                           5462 ;demo.c:837: boxes_x[4] = 0;
   1940 01rFDs41           5463 	ld	bc,#_boxes_x + 4
   1943 3E 00              5464 	ld	a,#0x00
   1945 02                 5465 	ld	(bc),a
                           5466 ;demo.c:838: boxes_y[4] = 768+2*36;
   1946 21r06s42           5467 	ld	hl, #_boxes_y + 8
   1949 36 48              5468 	ld	(hl),#0x48
   194B 23                 5469 	inc	hl
   194C 36 03              5470 	ld	(hl),#0x03
                           5471 ;demo.c:839: boxi = 4;
   194E 21r08s42           5472 	ld	hl,#_boxi + 0
   1951 36 04              5473 	ld	(hl), #0x04
                           5474 ;demo.c:840: drawbox((x*36),y*18);
   1953 4B                 5475 	ld	c,e
   1954 D5                 5476 	push	de
   1955 79                 5477 	ld	a,c
   1956 5F                 5478 	ld	e,a
   1957 87                 5479 	add	a,a
   1958 87                 5480 	add	a,a
   1959 87                 5481 	add	a,a
   195A 83                 5482 	add	a,e
   195B 87                 5483 	add	a,a
   195C D1                 5484 	pop	de
   195D 4F                 5485 	ld	c,a
   195E DD 46 FE           5486 	ld	b,-2 (ix)
   1961 D5                 5487 	push	de
   1962 78                 5488 	ld	a,b
   1963 5F                 5489 	ld	e,a
   1964 87                 5490 	add	a,a
   1965 87                 5491 	add	a,a
   1966 87                 5492 	add	a,a
   1967 83                 5493 	add	a,e
   1968 87                 5494 	add	a,a
   1969 87                 5495 	add	a,a
   196A D1                 5496 	pop	de
   196B 47                 5497 	ld	b,a
   196C D5                 5498 	push	de
   196D 79                 5499 	ld	a,c
   196E F5                 5500 	push	af
   196F 33                 5501 	inc	sp
   1970 C5                 5502 	push	bc
   1971 33                 5503 	inc	sp
   1972 CDr9As17           5504 	call	_drawbox
   1975 F1                 5505 	pop	af
   1976 D1                 5506 	pop	de
                           5507 ;demo.c:841: boxi = 0;
   1977 21r08s42           5508 	ld	hl,#_boxi + 0
   197A 36 00              5509 	ld	(hl), #0x00
                           5510 ;demo.c:836: for (y=0;y < 9;y++) {
   197C 13                 5511 	inc	de
   197D C3r37s19           5512 	jp	00141$
   1980                    5513 00147$:
                           5514 ;demo.c:834: for (x=0;x < 8;x++) {
   1980 DD 34 FE           5515 	inc	-2 (ix)
   1983 20 03              5516 	jr	NZ,00180$
   1985 DD 34 FF           5517 	inc	-1 (ix)
   1988                    5518 00180$:
   1988 C3r27s19           5519 	jp	00145$
   198B                    5520 00148$:
                           5521 ;demo.c:845: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   198B 21 08 B4           5522 	ld	hl,#0xB408
   198E E5                 5523 	push	hl
   198F 21r55s1C           5524 	ld	hl,#__str_13
   1992 E5                 5525 	push	hl
   1993 CDr1Bs10           5526 	call	_drawsine
   1996 F1                 5527 	pop	af
   1997 F1                 5528 	pop	af
                           5529 ;demo.c:847: vdp_load_palette(boxes_palette);
   1998 21r68s41           5530 	ld	hl,#_boxes_palette
   199B E5                 5531 	push	hl
   199C CDr00s00           5532 	call	_vdp_load_palette
   199F F1                 5533 	pop	af
   19A0                    5534 00106$:
                           5535 ;demo.c:850: if (bt >= 80) bt+=8;
   19A0 3Ar0Ds42           5536 	ld	a,(#_bt+0)
   19A3 D6 50              5537 	sub	a,#0x50
   19A5 3Ar0Es42           5538 	ld	a,(#_bt+1)
   19A8 DE 00              5539 	sbc	a,#0x00
   19AA FArC3s19           5540 	jp	M,00108$
   19AD 21r0Ds42           5541 	ld	hl,#_bt
   19B0 7E                 5542 	ld	a,(hl)
   19B1 C6 08              5543 	add	a,#0x08
   19B3 23                 5544 	inc	hl
   19B4 2B                 5545 	dec	hl
   19B5 C5                 5546 	push	bc
   19B6 4F                 5547 	ld	c, a
   19B7 23                 5548 	inc	hl
   19B8 7E                 5549 	ld	a, (hl)
   19B9 47                 5550 	ld	b, a
   19BA 79                 5551 	ld	a, c
   19BB 2B                 5552 	dec	hl
   19BC 77                 5553 	ld	(hl), a
   19BD 78                 5554 	ld	a, b
   19BE C1                 5555 	pop	bc
   19BF CE 00              5556 	adc	a,#0x00
   19C1 23                 5557 	inc	hl
   19C2 77                 5558 	ld	(hl),a
   19C3                    5559 00108$:
                           5560 ;demo.c:851: if (bt < 80 && bt >= 60) bt+=7;
   19C3 3Ar0Ds42           5561 	ld	a,(#_bt+0)
   19C6 D6 50              5562 	sub	a,#0x50
   19C8 3Ar0Es42           5563 	ld	a,(#_bt+1)
   19CB DE 00              5564 	sbc	a,#0x00
   19CD F2rF3s19           5565 	jp	P,00110$
   19D0 3Ar0Ds42           5566 	ld	a,(#_bt+0)
   19D3 D6 3C              5567 	sub	a,#0x3C
   19D5 3Ar0Es42           5568 	ld	a,(#_bt+1)
   19D8 DE 00              5569 	sbc	a,#0x00
   19DA FArF3s19           5570 	jp	M,00110$
   19DD 21r0Ds42           5571 	ld	hl,#_bt
   19E0 7E                 5572 	ld	a,(hl)
   19E1 C6 07              5573 	add	a,#0x07
   19E3 23                 5574 	inc	hl
   19E4 2B                 5575 	dec	hl
   19E5 C5                 5576 	push	bc
   19E6 4F                 5577 	ld	c, a
   19E7 23                 5578 	inc	hl
   19E8 7E                 5579 	ld	a, (hl)
   19E9 47                 5580 	ld	b, a
   19EA 79                 5581 	ld	a, c
   19EB 2B                 5582 	dec	hl
   19EC 77                 5583 	ld	(hl), a
   19ED 78                 5584 	ld	a, b
   19EE C1                 5585 	pop	bc
   19EF CE 00              5586 	adc	a,#0x00
   19F1 23                 5587 	inc	hl
   19F2 77                 5588 	ld	(hl),a
   19F3                    5589 00110$:
                           5590 ;demo.c:852: if (bt < 60 && bt >= 40) bt+=6;
   19F3 3Ar0Ds42           5591 	ld	a,(#_bt+0)
   19F6 D6 3C              5592 	sub	a,#0x3C
   19F8 3Ar0Es42           5593 	ld	a,(#_bt+1)
   19FB DE 00              5594 	sbc	a,#0x00
   19FD F2r23s1A           5595 	jp	P,00113$
   1A00 3Ar0Ds42           5596 	ld	a,(#_bt+0)
   1A03 D6 28              5597 	sub	a,#0x28
   1A05 3Ar0Es42           5598 	ld	a,(#_bt+1)
   1A08 DE 00              5599 	sbc	a,#0x00
   1A0A FAr23s1A           5600 	jp	M,00113$
   1A0D 21r0Ds42           5601 	ld	hl,#_bt
   1A10 7E                 5602 	ld	a,(hl)
   1A11 C6 06              5603 	add	a,#0x06
   1A13 23                 5604 	inc	hl
   1A14 2B                 5605 	dec	hl
   1A15 C5                 5606 	push	bc
   1A16 4F                 5607 	ld	c, a
   1A17 23                 5608 	inc	hl
   1A18 7E                 5609 	ld	a, (hl)
   1A19 47                 5610 	ld	b, a
   1A1A 79                 5611 	ld	a, c
   1A1B 2B                 5612 	dec	hl
   1A1C 77                 5613 	ld	(hl), a
   1A1D 78                 5614 	ld	a, b
   1A1E C1                 5615 	pop	bc
   1A1F CE 00              5616 	adc	a,#0x00
   1A21 23                 5617 	inc	hl
   1A22 77                 5618 	ld	(hl),a
   1A23                    5619 00113$:
                           5620 ;demo.c:853: if (bt < 40 && bt >= 10) bt+=5;
   1A23 3Ar0Ds42           5621 	ld	a,(#_bt+0)
   1A26 D6 28              5622 	sub	a,#0x28
   1A28 3Ar0Es42           5623 	ld	a,(#_bt+1)
   1A2B DE 00              5624 	sbc	a,#0x00
   1A2D F2r53s1A           5625 	jp	P,00116$
   1A30 3Ar0Ds42           5626 	ld	a,(#_bt+0)
   1A33 D6 0A              5627 	sub	a,#0x0A
   1A35 3Ar0Es42           5628 	ld	a,(#_bt+1)
   1A38 DE 00              5629 	sbc	a,#0x00
   1A3A FAr53s1A           5630 	jp	M,00116$
   1A3D 21r0Ds42           5631 	ld	hl,#_bt
   1A40 7E                 5632 	ld	a,(hl)
   1A41 C6 05              5633 	add	a,#0x05
   1A43 23                 5634 	inc	hl
   1A44 2B                 5635 	dec	hl
   1A45 C5                 5636 	push	bc
   1A46 4F                 5637 	ld	c, a
   1A47 23                 5638 	inc	hl
   1A48 7E                 5639 	ld	a, (hl)
   1A49 47                 5640 	ld	b, a
   1A4A 79                 5641 	ld	a, c
   1A4B 2B                 5642 	dec	hl
   1A4C 77                 5643 	ld	(hl), a
   1A4D 78                 5644 	ld	a, b
   1A4E C1                 5645 	pop	bc
   1A4F CE 00              5646 	adc	a,#0x00
   1A51 23                 5647 	inc	hl
   1A52 77                 5648 	ld	(hl),a
   1A53                    5649 00116$:
                           5650 ;demo.c:854: if (bt < 10 ) bt+=4;
   1A53 3Ar0Ds42           5651 	ld	a,(#_bt+0)
   1A56 D6 0A              5652 	sub	a,#0x0A
   1A58 3Ar0Es42           5653 	ld	a,(#_bt+1)
   1A5B DE 00              5654 	sbc	a,#0x00
   1A5D F2r76s1A           5655 	jp	P,00119$
   1A60 21r0Ds42           5656 	ld	hl,#_bt
   1A63 7E                 5657 	ld	a,(hl)
   1A64 C6 04              5658 	add	a,#0x04
   1A66 23                 5659 	inc	hl
   1A67 2B                 5660 	dec	hl
   1A68 C5                 5661 	push	bc
   1A69 4F                 5662 	ld	c, a
   1A6A 23                 5663 	inc	hl
   1A6B 7E                 5664 	ld	a, (hl)
   1A6C 47                 5665 	ld	b, a
   1A6D 79                 5666 	ld	a, c
   1A6E 2B                 5667 	dec	hl
   1A6F 77                 5668 	ld	(hl), a
   1A70 78                 5669 	ld	a, b
   1A71 C1                 5670 	pop	bc
   1A72 CE 00              5671 	adc	a,#0x00
   1A74 23                 5672 	inc	hl
   1A75 77                 5673 	ld	(hl),a
   1A76                    5674 00119$:
                           5675 ;demo.c:857: cmd.source_x = bx;
   1A76 ED 4Br09s42        5676 	ld	bc,(_bx)
   1A7A 21r8Cs41           5677 	ld	hl,#_cmd
   1A7D 71                 5678 	ld	(hl),c
   1A7E 23                 5679 	inc	hl
   1A7F 70                 5680 	ld	(hl),b
                           5681 ;demo.c:858: cmd.source_y = bt;
   1A80 01r8Es41           5682 	ld	bc,#_cmd + 2
   1A83 ED 5Br0Ds42        5683 	ld	de,(_bt)
   1A87 69                 5684 	ld	l,c
   1A88 60                 5685 	ld	h,b
   1A89 73                 5686 	ld	(hl),e
   1A8A 23                 5687 	inc	hl
   1A8B 72                 5688 	ld	(hl),d
                           5689 ;demo.c:859: cmd.dest_x = 0;
   1A8C 21r90s41           5690 	ld	hl, #_cmd + 4
   1A8F 36 00              5691 	ld	(hl),#0x00
   1A91 23                 5692 	inc	hl
   1A92 36 00              5693 	ld	(hl),#0x00
                           5694 ;demo.c:860: cmd.dest_y = 256;
   1A94 21r92s41           5695 	ld	hl, #_cmd + 6
   1A97 36 00              5696 	ld	(hl),#0x00
   1A99 23                 5697 	inc	hl
   1A9A 36 01              5698 	ld	(hl),#0x01
                           5699 ;demo.c:861: cmd.size_x = 36;
   1A9C 21r94s41           5700 	ld	hl, #_cmd + 8
   1A9F 36 24              5701 	ld	(hl),#0x24
   1AA1 23                 5702 	inc	hl
   1AA2 36 00              5703 	ld	(hl),#0x00
                           5704 ;demo.c:862: cmd.size_y = 36;
   1AA4 21r96s41           5705 	ld	hl, #_cmd + 10
   1AA7 36 24              5706 	ld	(hl),#0x24
   1AA9 23                 5707 	inc	hl
   1AAA 36 00              5708 	ld	(hl),#0x00
                           5709 ;demo.c:863: cmd.data = 0;
                           5710 ;demo.c:864: cmd.argument = 0x00;
   1AAC 3E 00              5711 	ld	a,#0x00
   1AAE 32r98s41           5712 	ld	(#_cmd + 12),a
   1AB1 32r99s41           5713 	ld	(#_cmd + 13),a
                           5714 ;demo.c:865: cmd.command = 0xD0; // HMMM
   1AB4 3E D0              5715 	ld	a,#0xD0
   1AB6 32r9As41           5716 	ld	(#_cmd + 14),a
                           5717 ;demo.c:866: vdp_copier(&cmd);
   1AB9 21r8Cs41           5718 	ld	hl,#_cmd
   1ABC E5                 5719 	push	hl
   1ABD CDr00s00           5720 	call	_vdp_copier
   1AC0 F1                 5721 	pop	af
                           5722 ;demo.c:868: pbx = bx;
   1AC1 2Ar09s42           5723 	ld	hl,(_bx)
   1AC4 FD 21r13s42        5724 	ld	iy,#_pbx
   1AC8 FD 75 00           5725 	ld	0 (iy),l
   1ACB FD 21r13s42        5726 	ld	iy,#_pbx
   1ACF FD 74 01           5727 	ld	1 (iy),h
                           5728 ;demo.c:869: pbt = bt;
   1AD2 2Ar0Ds42           5729 	ld	hl,(_bt)
   1AD5 FD 21r15s42        5730 	ld	iy,#_pbt
   1AD9 FD 75 00           5731 	ld	0 (iy),l
   1ADC FD 21r15s42        5732 	ld	iy,#_pbt
   1AE0 FD 74 01           5733 	ld	1 (iy),h
                           5734 ;demo.c:874: bonc = 1;
   1AE3 21r11s42           5735 	ld	hl,#_bonc + 0
   1AE6 36 01              5736 	ld	(hl), #0x01
   1AE8 21r12s42           5737 	ld	hl,#_bonc + 1
   1AEB 36 00              5738 	ld	(hl), #0x00
                           5739 ;demo.c:875: if (bt > by) {
   1AED 21r0Bs42           5740 	ld	hl,#_by
   1AF0 7E                 5741 	ld	a,(hl)
   1AF1 FD 21r0Ds42        5742 	ld	iy,#_bt
   1AF5 FD 96 00           5743 	sub	a,0 (iy)
   1AF8 23                 5744 	inc	hl
   1AF9 7E                 5745 	ld	a,(hl)
   1AFA FD 21r0Ds42        5746 	ld	iy,#_bt
   1AFE FD 9E 01           5747 	sbc	a,1 (iy)
   1B01 F2r3Fs1C           5748 	jp	P,00135$
                           5749 ;demo.c:876: bt = by;
   1B04 2Ar0Bs42           5750 	ld	hl,(_by)
   1B07 FD 21r0Ds42        5751 	ld	iy,#_bt
   1B0B FD 75 00           5752 	ld	0 (iy),l
   1B0E FD 21r0Ds42        5753 	ld	iy,#_bt
   1B12 FD 74 01           5754 	ld	1 (iy),h
                           5755 ;demo.c:877: drawbox(bx,bt);
   1B15 21r0Ds42           5756 	ld	hl,#_bt + 0
   1B18 4E                 5757 	ld	c,(hl)
   1B19 21r09s42           5758 	ld	hl,#_bx + 0
   1B1C 46                 5759 	ld	b,(hl)
   1B1D 79                 5760 	ld	a,c
   1B1E F5                 5761 	push	af
   1B1F 33                 5762 	inc	sp
   1B20 C5                 5763 	push	bc
   1B21 33                 5764 	inc	sp
   1B22 CDr9As17           5765 	call	_drawbox
   1B25 F1                 5766 	pop	af
                           5767 ;demo.c:878: bt = 0;
   1B26 21r0Ds42           5768 	ld	hl,#_bt + 0
   1B29 36 00              5769 	ld	(hl), #0x00
   1B2B 21r0Es42           5770 	ld	hl,#_bt + 1
   1B2E 36 00              5771 	ld	(hl), #0x00
                           5772 ;demo.c:879: if (by > 48) {
   1B30 3E 30              5773 	ld	a,#0x30
   1B32 FD 21r0Bs42        5774 	ld	iy,#_by
   1B36 FD 96 00           5775 	sub	a,0 (iy)
   1B39 3E 00              5776 	ld	a,#0x00
   1B3B FD 21r0Bs42        5777 	ld	iy,#_by
   1B3F FD 9E 01           5778 	sbc	a,1 (iy)
   1B42 F2r9As1B           5779 	jp	P,00123$
                           5780 ;demo.c:880: bonc = 0;
   1B45 21r11s42           5781 	ld	hl,#_bonc + 0
   1B48 36 00              5782 	ld	(hl), #0x00
   1B4A 21r12s42           5783 	ld	hl,#_bonc + 1
   1B4D 36 00              5784 	ld	(hl), #0x00
                           5785 ;demo.c:881: by-=16;
   1B4F 21r0Bs42           5786 	ld	hl,#_by
   1B52 7E                 5787 	ld	a,(hl)
   1B53 C6 F0              5788 	add	a,#0xF0
   1B55 77                 5789 	ld	(hl),a
   1B56 23                 5790 	inc	hl
   1B57 7E                 5791 	ld	a,(hl)
   1B58 CE FF              5792 	adc	a,#0xFF
   1B5A 77                 5793 	ld	(hl),a
                           5794 ;demo.c:882: prevbox_of = boxes_of[boxi];
   1B5B 3Ar08s42           5795 	ld	a,(#_boxi+0)
   1B5E 87                 5796 	add	a,a
   1B5F C6r17              5797 	add	a,#<_boxes_of
   1B61 6F                 5798 	ld	l,a
   1B62 3Es42              5799 	ld	a,#>_boxes_of
   1B64 CE 00              5800 	adc	a,#0x00
   1B66 67                 5801 	ld	h,a
   1B67 4E                 5802 	ld	c,(hl)
   1B68 23                 5803 	inc	hl
   1B69 21r21s42           5804 	ld	hl,#_prevbox_of + 0
   1B6C 71                 5805 	ld	(hl), c
                           5806 ;demo.c:883: by+=prevbox_of;
   1B6D 21r21s42           5807 	ld	hl,#_prevbox_of + 0
   1B70 4E                 5808 	ld	c,(hl)
   1B71 06 00              5809 	ld	b,#0x00
   1B73 21r0Bs42           5810 	ld	hl,#_by
   1B76 7E                 5811 	ld	a,(hl)
   1B77 81                 5812 	add	a,c
   1B78 23                 5813 	inc	hl
   1B79 2B                 5814 	dec	hl
   1B7A C5                 5815 	push	bc
   1B7B 4F                 5816 	ld	c, a
   1B7C 23                 5817 	inc	hl
   1B7D 7E                 5818 	ld	a, (hl)
   1B7E 47                 5819 	ld	b, a
   1B7F 79                 5820 	ld	a, c
   1B80 2B                 5821 	dec	hl
   1B81 77                 5822 	ld	(hl), a
   1B82 78                 5823 	ld	a, b
   1B83 C1                 5824 	pop	bc
   1B84 88                 5825 	adc	a,b
   1B85 23                 5826 	inc	hl
   1B86 77                 5827 	ld	(hl),a
                           5828 ;demo.c:884: boxi++;
   1B87 FD 21r08s42        5829 	ld	iy,#_boxi
   1B8B FD 34 00           5830 	inc	0 (iy)
                           5831 ;demo.c:885: if (boxi >= 4) boxi = 0;
   1B8E 3Ar08s42           5832 	ld	a,(#_boxi+0)
   1B91 D6 04              5833 	sub	a,#0x04
   1B93 38 05              5834 	jr	C,00123$
   1B95 21r08s42           5835 	ld	hl,#_boxi + 0
   1B98 36 00              5836 	ld	(hl), #0x00
   1B9A                    5837 00123$:
                           5838 ;demo.c:888: if (by <= 48) {
   1B9A 3E 30              5839 	ld	a,#0x30
   1B9C FD 21r0Bs42        5840 	ld	iy,#_by
   1BA0 FD 96 00           5841 	sub	a,0 (iy)
   1BA3 3E 00              5842 	ld	a,#0x00
   1BA5 FD 21r0Bs42        5843 	ld	iy,#_by
   1BA9 FD 9E 01           5844 	sbc	a,1 (iy)
   1BAC FAr50s1C           5845 	jp	M,00149$
                           5846 ;demo.c:889: bx-=16;
   1BAF 21r09s42           5847 	ld	hl,#_bx
   1BB2 7E                 5848 	ld	a,(hl)
   1BB3 C6 F0              5849 	add	a,#0xF0
   1BB5 77                 5850 	ld	(hl),a
   1BB6 23                 5851 	inc	hl
   1BB7 7E                 5852 	ld	a,(hl)
   1BB8 CE FF              5853 	adc	a,#0xFF
   1BBA 77                 5854 	ld	(hl),a
                           5855 ;demo.c:891: if (bx>128)bo+=8;
   1BBB 3E 80              5856 	ld	a,#0x80
   1BBD FD 21r09s42        5857 	ld	iy,#_bx
   1BC1 FD 96 00           5858 	sub	a,0 (iy)
   1BC4 3E 00              5859 	ld	a,#0x00
   1BC6 FD 21r09s42        5860 	ld	iy,#_bx
   1BCA FD 9E 01           5861 	sbc	a,1 (iy)
   1BCD 07                 5862 	rlca
   1BCE E6 01              5863 	and	a,#0x01
   1BD0 4F                 5864 	ld	c,a
   1BD1 B7                 5865 	or	a,a
   1BD2 28 18              5866 	jr	Z,00125$
   1BD4 21r0Fs42           5867 	ld	hl,#_bo
   1BD7 7E                 5868 	ld	a,(hl)
   1BD8 C6 08              5869 	add	a,#0x08
   1BDA 23                 5870 	inc	hl
   1BDB 2B                 5871 	dec	hl
   1BDC C5                 5872 	push	bc
   1BDD 4F                 5873 	ld	c, a
   1BDE 23                 5874 	inc	hl
   1BDF 7E                 5875 	ld	a, (hl)
   1BE0 47                 5876 	ld	b, a
   1BE1 79                 5877 	ld	a, c
   1BE2 2B                 5878 	dec	hl
   1BE3 77                 5879 	ld	(hl), a
   1BE4 78                 5880 	ld	a, b
   1BE5 C1                 5881 	pop	bc
   1BE6 CE 00              5882 	adc	a,#0x00
   1BE8 23                 5883 	inc	hl
   1BE9 77                 5884 	ld	(hl),a
   1BEA 18 0C              5885 	jr	00126$
   1BEC                    5886 00125$:
                           5887 ;demo.c:892: else bo-=8;
   1BEC 21r0Fs42           5888 	ld	hl,#_bo
   1BEF 7E                 5889 	ld	a,(hl)
   1BF0 C6 F8              5890 	add	a,#0xF8
   1BF2 77                 5891 	ld	(hl),a
   1BF3 23                 5892 	inc	hl
   1BF4 7E                 5893 	ld	a,(hl)
   1BF5 CE FF              5894 	adc	a,#0xFF
   1BF7 77                 5895 	ld	(hl),a
   1BF8                    5896 00126$:
                           5897 ;demo.c:893: if (bo > 192) bo = 0;
   1BF8 3E C0              5898 	ld	a,#0xC0
   1BFA FD 21r0Fs42        5899 	ld	iy,#_bo
   1BFE FD 96 00           5900 	sub	a,0 (iy)
   1C01 3E 00              5901 	ld	a,#0x00
   1C03 FD 21r0Fs42        5902 	ld	iy,#_bo
   1C07 FD 9E 01           5903 	sbc	a,1 (iy)
   1C0A F2r17s1C           5904 	jp	P,00128$
   1C0D 21r0Fs42           5905 	ld	hl,#_bo + 0
   1C10 36 00              5906 	ld	(hl), #0x00
   1C12 21r10s42           5907 	ld	hl,#_bo + 1
   1C15 36 00              5908 	ld	(hl), #0x00
   1C17                    5909 00128$:
                           5910 ;demo.c:894: if (bx>128)by=84+bo;
   1C17 AF                 5911 	xor	a,a
   1C18 B1                 5912 	or	a,c
   1C19 28 12              5913 	jr	Z,00130$
   1C1B 21r0Bs42           5914 	ld	hl,#_by
   1C1E 3Ar0Fs42           5915 	ld	a,(#_bo+0)
   1C21 C6 54              5916 	add	a,#0x54
   1C23 77                 5917 	ld	(hl),a
   1C24 3Ar10s42           5918 	ld	a,(#_bo+1)
   1C27 CE 00              5919 	adc	a,#0x00
   1C29 23                 5920 	inc	hl
   1C2A 77                 5921 	ld	(hl),a
   1C2B 18 23              5922 	jr	00149$
   1C2D                    5923 00130$:
                           5924 ;demo.c:895: else by=36+36+84+bo;
   1C2D 21r0Bs42           5925 	ld	hl,#_by
   1C30 3Ar0Fs42           5926 	ld	a,(#_bo+0)
   1C33 C6 9C              5927 	add	a,#0x9C
   1C35 77                 5928 	ld	(hl),a
   1C36 3Ar10s42           5929 	ld	a,(#_bo+1)
   1C39 CE 00              5930 	adc	a,#0x00
   1C3B 23                 5931 	inc	hl
   1C3C 77                 5932 	ld	(hl),a
   1C3D 18 11              5933 	jr	00149$
   1C3F                    5934 00135$:
                           5935 ;demo.c:898: drawbox(bx,bt);
   1C3F 21r0Ds42           5936 	ld	hl,#_bt + 0
   1C42 4E                 5937 	ld	c,(hl)
   1C43 21r09s42           5938 	ld	hl,#_bx + 0
   1C46 46                 5939 	ld	b,(hl)
   1C47 79                 5940 	ld	a,c
   1C48 F5                 5941 	push	af
   1C49 33                 5942 	inc	sp
   1C4A C5                 5943 	push	bc
   1C4B 33                 5944 	inc	sp
   1C4C CDr9As17           5945 	call	_drawbox
   1C4F F1                 5946 	pop	af
   1C50                    5947 00149$:
   1C50 DD F9              5948 	ld	sp,ix
   1C52 DD E1              5949 	pop	ix
   1C54 C9                 5950 	ret
   1C55                    5951 _boxes_end::
   1C55                    5952 __str_13:
   1C55 4C 45 54 20 55 53  5953 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1C80 00                 5954 	.db 0x00
                           5955 ;demo.c:909: void thewave() {
                           5956 ;	---------------------------------
                           5957 ; Function thewave
                           5958 ; ---------------------------------
   1C81                    5959 _thewave_start::
   1C81                    5960 _thewave:
   1C81 DD E5              5961 	push	ix
   1C83 DD 21 00 00        5962 	ld	ix,#0
   1C87 DD 39              5963 	add	ix,sp
   1C89 21 F7 FF           5964 	ld	hl,#-9
   1C8C 39                 5965 	add	hl,sp
   1C8D F9                 5966 	ld	sp,hl
                           5967 ;demo.c:917: if (initwave == 0) {
   1C8E AF                 5968 	xor	a,a
   1C8F 21r22s42           5969 	ld	hl,#_initwave + 0
   1C92 B6                 5970 	or	a,(hl)
   1C93 C2r1Bs1F           5971 	jp	NZ,00113$
                           5972 ;demo.c:918: initwave = 1;
   1C96 21r22s42           5973 	ld	hl,#_initwave + 0
   1C99 36 01              5974 	ld	(hl), #0x01
                           5975 ;demo.c:919: for (y = 0; y < 212; y++) {
   1C9B DD 36 FE 00        5976 	ld	-2 (ix),#0x00
   1C9F                    5977 00128$:
   1C9F DD 7E FE           5978 	ld	a,-2 (ix)
   1CA2 D6 D4              5979 	sub	a,#0xD4
   1CA4 D2r17s1D           5980 	jp	NC,00131$
                           5981 ;demo.c:920: cmd.size_x = 256;
   1CA7 11r94s41           5982 	ld	de,#_cmd + 8
   1CAA EB                 5983 	ex	de,hl
   1CAB 36 00              5984 	ld	(hl),#0x00
   1CAD 23                 5985 	inc	hl
   1CAE 36 01              5986 	ld	(hl),#0x01
                           5987 ;demo.c:921: cmd.size_y = 2;
   1CB0 11r96s41           5988 	ld	de,#_cmd + 10
   1CB3 EB                 5989 	ex	de,hl
   1CB4 36 02              5990 	ld	(hl),#0x02
   1CB6 23                 5991 	inc	hl
   1CB7 36 00              5992 	ld	(hl),#0x00
                           5993 ;demo.c:922: cmd.data = 0;
   1CB9 11r98s41           5994 	ld	de,#_cmd + 12
   1CBC 3E 00              5995 	ld	a,#0x00
   1CBE 12                 5996 	ld	(de),a
                           5997 ;demo.c:923: cmd.argument = 0x00; // from 70xY to left
   1CBF 11r99s41           5998 	ld	de,#_cmd + 13
   1CC2 3E 00              5999 	ld	a,#0x00
   1CC4 12                 6000 	ld	(de),a
                           6001 ;demo.c:924: cmd.command = 0xd0; // vram to vram, y only
   1CC5 11r9As41           6002 	ld	de,#_cmd + 14
   1CC8 3E D0              6003 	ld	a,#0xD0
   1CCA 12                 6004 	ld	(de),a
                           6005 ;demo.c:926: cmd.source_x = 0;
   1CCB 21r8Cs41           6006 	ld	hl,#_cmd
   1CCE 36 00              6007 	ld	(hl),#0x00
   1CD0 23                 6008 	inc	hl
   1CD1 36 00              6009 	ld	(hl),#0x00
                           6010 ;demo.c:927: cmd.source_y = 0;
   1CD3 11r8Es41           6011 	ld	de,#_cmd + 2
   1CD6 EB                 6012 	ex	de,hl
   1CD7 36 00              6013 	ld	(hl),#0x00
   1CD9 23                 6014 	inc	hl
   1CDA 36 00              6015 	ld	(hl),#0x00
                           6016 ;demo.c:928: cmd.dest_x = 0;
   1CDC 11r90s41           6017 	ld	de,#_cmd + 4
   1CDF EB                 6018 	ex	de,hl
   1CE0 36 00              6019 	ld	(hl),#0x00
   1CE2 23                 6020 	inc	hl
   1CE3 36 00              6021 	ld	(hl),#0x00
                           6022 ;demo.c:929: cmd.dest_y = 0+y;
   1CE5 11r92s41           6023 	ld	de,#_cmd + 6
   1CE8 DD 4E FE           6024 	ld	c,-2 (ix)
   1CEB 06 00              6025 	ld	b,#0x00
   1CED EB                 6026 	ex	de,hl
   1CEE 71                 6027 	ld	(hl),c
   1CEF 23                 6028 	inc	hl
   1CF0 70                 6029 	ld	(hl),b
                           6030 ;demo.c:930: vdp_copier(&cmd);
   1CF1 C5                 6031 	push	bc
   1CF2 21r8Cs41           6032 	ld	hl,#_cmd
   1CF5 E5                 6033 	push	hl
   1CF6 CDr00s00           6034 	call	_vdp_copier
   1CF9 F1                 6035 	pop	af
   1CFA C1                 6036 	pop	bc
                           6037 ;demo.c:931: cmd.dest_y = 256+y;
   1CFB 11r92s41           6038 	ld	de,#_cmd + 6
   1CFE 21 00 01           6039 	ld	hl,#0x0100
   1D01 09                 6040 	add	hl,bc
   1D02 4D                 6041 	ld	c,l
   1D03 44                 6042 	ld	b,h
   1D04 EB                 6043 	ex	de,hl
   1D05 71                 6044 	ld	(hl),c
   1D06 23                 6045 	inc	hl
   1D07 70                 6046 	ld	(hl),b
                           6047 ;demo.c:932: vdp_copier(&cmd);
   1D08 21r8Cs41           6048 	ld	hl,#_cmd
   1D0B E5                 6049 	push	hl
   1D0C CDr00s00           6050 	call	_vdp_copier
   1D0F F1                 6051 	pop	af
                           6052 ;demo.c:933: waitVB();
   1D10 76                 6053 		halt 
                           6054 ;demo.c:919: for (y = 0; y < 212; y++) {
   1D11 DD 34 FE           6055 	inc	-2 (ix)
   1D14 C3r9Fs1C           6056 	jp	00128$
   1D17                    6057 00131$:
                           6058 ;demo.c:937: for (y = 9; y < 15; y+=1) {
   1D17 DD 36 FE 09        6059 	ld	-2 (ix),#0x09
   1D1B                    6060 00132$:
   1D1B DD 7E FE           6061 	ld	a,-2 (ix)
   1D1E D6 0F              6062 	sub	a,#0x0F
   1D20 D2r1Bs1F           6063 	jp	NC,00113$
                           6064 ;demo.c:938: for (x = 0; x < 21; x+=1) {
   1D23 DD 7E FE           6065 	ld	a,-2 (ix)
   1D26 87                 6066 	add	a,a
   1D27 DD 77 F9           6067 	ld	-7 (ix),a
   1D2A DD 36 FF 00        6068 	ld	-1 (ix),#0x00
   1D2E                    6069 00108$:
   1D2E DD 7E FF           6070 	ld	a,-1 (ix)
   1D31 D6 15              6071 	sub	a,#0x15
   1D33 D2r15s1F           6072 	jp	NC,00134$
                           6073 ;demo.c:939: if (x > 6 && x < 13) continue; 
   1D36 3E 06              6074 	ld	a,#0x06
   1D38 DD 96 FF           6075 	sub	a,-1 (ix)
   1D3B 30 08              6076 	jr	NC,00102$
   1D3D DD 7E FF           6077 	ld	a,-1 (ix)
   1D40 D6 0D              6078 	sub	a,#0x0D
   1D42 DAr0Fs1F           6079 	jp	C,00110$
   1D45                    6080 00102$:
                           6081 ;demo.c:941: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   1D45 3E 06              6082 	ld	a,#0x06
   1D47 DD 96 FF           6083 	sub	a,-1 (ix)
   1D4A DArA0s1D           6084 	jp	C,00105$
   1D4D DD 56 FF           6085 	ld	d,-1 (ix)
   1D50 0E 00              6086 	ld	c,#0x00
   1D52 CB 22              6087 	sla	d
   1D54 CB 11              6088 	rl	c
   1D56 CB 22              6089 	sla	d
   1D58 CB 11              6090 	rl	c
   1D5A CB 22              6091 	sla	d
   1D5C CB 11              6092 	rl	c
   1D5E 7A                 6093 	ld	a,d
   1D5F C6 69              6094 	add	a,#0x69
   1D61 57                 6095 	ld	d,a
   1D62 79                 6096 	ld	a,c
   1D63 CE 00              6097 	adc	a,#0x00
   1D65 47                 6098 	ld	b,a
   1D66 DD 5E FE           6099 	ld	e,-2 (ix)
   1D69 0E 00              6100 	ld	c,#0x00
   1D6B CB 23              6101 	sla	e
   1D6D CB 11              6102 	rl	c
   1D6F CB 23              6103 	sla	e
   1D71 CB 11              6104 	rl	c
   1D73 CB 23              6105 	sla	e
   1D75 CB 11              6106 	rl	c
   1D77 7A                 6107 	ld	a,d
   1D78 83                 6108 	add	a,e
   1D79 5F                 6109 	ld	e,a
   1D7A 78                 6110 	ld	a,b
   1D7B 89                 6111 	adc	a,c
   1D7C 0E 00              6112 	ld	c,#0x00
   1D7E 3Er00              6113 	ld	a,#<_sintab
   1D80 83                 6114 	add	a,e
   1D81 5F                 6115 	ld	e,a
   1D82 3Es00              6116 	ld	a,#>_sintab
   1D84 89                 6117 	adc	a,c
   1D85 6B                 6118 	ld	l,e
   1D86 67                 6119 	ld	h,a
   1D87 5E                 6120 	ld	e,(hl)
   1D88 CB 2B              6121 	sra	e
   1D8A CB 2B              6122 	sra	e
   1D8C CB 2B              6123 	sra	e
   1D8E CB 2B              6124 	sra	e
   1D90 7B                 6125 	ld	a,e
   1D91 17                 6126 	rla	
   1D92 9F                 6127 	sbc	a,a
   1D93 4F                 6128 	ld	c,a
   1D94 7B                 6129 	ld	a,e
   1D95 C6 07              6130 	add	a,#0x07
   1D97 DD 77 FC           6131 	ld	-4 (ix),a
   1D9A 79                 6132 	ld	a,c
   1D9B CE 00              6133 	adc	a,#0x00
   1D9D DD 77 FD           6134 	ld	-3 (ix),a
   1DA0                    6135 00105$:
                           6136 ;demo.c:942: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   1DA0 DD 7E FF           6137 	ld	a,-1 (ix)
   1DA3 D6 0D              6138 	sub	a,#0x0D
   1DA5 DAr06s1E           6139 	jp	C,00107$
   1DA8 DD 5E FF           6140 	ld	e,-1 (ix)
   1DAB 16 00              6141 	ld	d,#0x00
   1DAD 21 17 00           6142 	ld	hl,#0x0017
   1DB0 19                 6143 	add	hl,de
   1DB1 EB                 6144 	ex	de,hl
   1DB2 CB 23              6145 	sla	e
   1DB4 CB 12              6146 	rl	d
   1DB6 CB 23              6147 	sla	e
   1DB8 CB 12              6148 	rl	d
   1DBA CB 23              6149 	sla	e
   1DBC CB 12              6150 	rl	d
   1DBE 21 69 00           6151 	ld	hl,#0x0069
   1DC1 19                 6152 	add	hl,de
   1DC2 45                 6153 	ld	b,l
   1DC3 54                 6154 	ld	d,h
   1DC4 DD 4E FE           6155 	ld	c,-2 (ix)
   1DC7 1E 00              6156 	ld	e,#0x00
   1DC9 79                 6157 	ld	a,c
   1DCA C6 13              6158 	add	a,#0x13
   1DCC 4F                 6159 	ld	c,a
   1DCD 7B                 6160 	ld	a,e
   1DCE CE 00              6161 	adc	a,#0x00
   1DD0 5F                 6162 	ld	e,a
   1DD1 CB 21              6163 	sla	c
   1DD3 CB 13              6164 	rl	e
   1DD5 CB 21              6165 	sla	c
   1DD7 CB 13              6166 	rl	e
   1DD9 CB 21              6167 	sla	c
   1DDB CB 13              6168 	rl	e
   1DDD 78                 6169 	ld	a,b
   1DDE 81                 6170 	add	a,c
   1DDF 4F                 6171 	ld	c,a
   1DE0 7A                 6172 	ld	a,d
   1DE1 8B                 6173 	adc	a,e
   1DE2 1E 00              6174 	ld	e,#0x00
   1DE4 3Er00              6175 	ld	a,#<_sintab
   1DE6 81                 6176 	add	a,c
   1DE7 4F                 6177 	ld	c,a
   1DE8 3Es00              6178 	ld	a,#>_sintab
   1DEA 8B                 6179 	adc	a,e
   1DEB 69                 6180 	ld	l,c
   1DEC 67                 6181 	ld	h,a
   1DED 4E                 6182 	ld	c,(hl)
   1DEE CB 29              6183 	sra	c
   1DF0 CB 29              6184 	sra	c
   1DF2 CB 29              6185 	sra	c
   1DF4 CB 29              6186 	sra	c
   1DF6 79                 6187 	ld	a,c
   1DF7 17                 6188 	rla	
   1DF8 9F                 6189 	sbc	a,a
   1DF9 5F                 6190 	ld	e,a
   1DFA 79                 6191 	ld	a,c
   1DFB C6 07              6192 	add	a,#0x07
   1DFD DD 77 FC           6193 	ld	-4 (ix),a
   1E00 7B                 6194 	ld	a,e
   1E01 CE 00              6195 	adc	a,#0x00
   1E03 DD 77 FD           6196 	ld	-3 (ix),a
   1E06                    6197 00107$:
                           6198 ;demo.c:944: cmd.size_x = 11;
   1E06 11r94s41           6199 	ld	de,#_cmd + 8
   1E09 EB                 6200 	ex	de,hl
   1E0A 36 0B              6201 	ld	(hl),#0x0B
   1E0C 23                 6202 	inc	hl
   1E0D 36 00              6203 	ld	(hl),#0x00
                           6204 ;demo.c:945: cmd.size_y = 28-(14-px);
   1E0F 21r96s41           6205 	ld	hl,#_cmd + 10
   1E12 DD 75 FA           6206 	ld	-6 (ix),l
   1E15 DD 74 FB           6207 	ld	-5 (ix),h
   1E18 3E 0E              6208 	ld	a,#0x0E
   1E1A DD 96 FC           6209 	sub	a,-4 (ix)
   1E1D 4F                 6210 	ld	c,a
   1E1E 3E 00              6211 	ld	a,#0x00
   1E20 DD 9E FD           6212 	sbc	a,-3 (ix)
   1E23 5F                 6213 	ld	e,a
   1E24 3E 1C              6214 	ld	a,#0x1C
   1E26 91                 6215 	sub	a,c
   1E27 57                 6216 	ld	d,a
   1E28 3E 00              6217 	ld	a,#0x00
   1E2A 9B                 6218 	sbc	a,e
   1E2B 47                 6219 	ld	b,a
   1E2C DD 6E FA           6220 	ld	l,-6 (ix)
   1E2F DD 66 FB           6221 	ld	h,-5 (ix)
   1E32 72                 6222 	ld	(hl),d
   1E33 23                 6223 	inc	hl
   1E34 70                 6224 	ld	(hl),b
                           6225 ;demo.c:946: cmd.data = 0;
   1E35 21r98s41           6226 	ld	hl,#_cmd + 12
   1E38 36 00              6227 	ld	(hl),#0x00
                           6228 ;demo.c:947: cmd.argument = 0x00; // from 70xY to left
   1E3A 21r99s41           6229 	ld	hl,#_cmd + 13
   1E3D 36 00              6230 	ld	(hl),#0x00
                           6231 ;demo.c:948: cmd.command = 0x98; // vram to vram, y only
   1E3F 21r9As41           6232 	ld	hl,#_cmd + 14
   1E42 36 98              6233 	ld	(hl),#0x98
                           6234 ;demo.c:950: cmd.source_x = twelvetimes[px];
   1E44 DD 46 FC           6235 	ld	b,-4 (ix)
   1E47 DD 56 FD           6236 	ld	d,-3 (ix)
   1E4A CB 20              6237 	sla	b
   1E4C CB 12              6238 	rl	d
   1E4E 3Er20              6239 	ld	a,#<_twelvetimes
   1E50 80                 6240 	add	a,b
   1E51 47                 6241 	ld	b,a
   1E52 3Es01              6242 	ld	a,#>_twelvetimes
   1E54 8A                 6243 	adc	a,d
   1E55 68                 6244 	ld	l,b
   1E56 67                 6245 	ld	h,a
   1E57 46                 6246 	ld	b,(hl)
   1E58 23                 6247 	inc	hl
   1E59 56                 6248 	ld	d,(hl)
   1E5A 21r8Cs41           6249 	ld	hl,#_cmd
   1E5D 70                 6250 	ld	(hl),b
   1E5E 23                 6251 	inc	hl
   1E5F 72                 6252 	ld	(hl),d
                           6253 ;demo.c:951: cmd.source_y = 768+183+(15-px);
   1E60 23                 6254 	inc	hl
   1E61 DD 75 FA           6255 	ld	-6 (ix),l
   1E64 DD 74 FB           6256 	ld	-5 (ix),h
   1E67 3E C6              6257 	ld	a,#0xC6
   1E69 DD 96 FC           6258 	sub	a,-4 (ix)
   1E6C 47                 6259 	ld	b,a
   1E6D 3E 03              6260 	ld	a,#0x03
   1E6F DD 9E FD           6261 	sbc	a,-3 (ix)
   1E72 57                 6262 	ld	d,a
   1E73 DD 6E FA           6263 	ld	l,-6 (ix)
   1E76 DD 66 FB           6264 	ld	h,-5 (ix)
   1E79 70                 6265 	ld	(hl),b
   1E7A 23                 6266 	inc	hl
   1E7B 72                 6267 	ld	(hl),d
                           6268 ;demo.c:952: cmd.dest_x = 0+twelvetimes[x];
   1E7C 21r90s41           6269 	ld	hl,#_cmd + 4
   1E7F DD 75 FA           6270 	ld	-6 (ix),l
   1E82 DD 74 FB           6271 	ld	-5 (ix),h
   1E85 DD 7E FF           6272 	ld	a,-1 (ix)
   1E88 87                 6273 	add	a,a
   1E89 C6r20              6274 	add	a,#<_twelvetimes
   1E8B 6F                 6275 	ld	l,a
   1E8C 3Es01              6276 	ld	a,#>_twelvetimes
   1E8E CE 00              6277 	adc	a,#0x00
   1E90 67                 6278 	ld	h,a
   1E91 46                 6279 	ld	b,(hl)
   1E92 23                 6280 	inc	hl
   1E93 56                 6281 	ld	d,(hl)
   1E94 DD 6E FA           6282 	ld	l,-6 (ix)
   1E97 DD 66 FB           6283 	ld	h,-5 (ix)
   1E9A 70                 6284 	ld	(hl),b
   1E9B 23                 6285 	inc	hl
   1E9C 72                 6286 	ld	(hl),d
                           6287 ;demo.c:953: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   1E9D 21r92s41           6288 	ld	hl,#_cmd + 6
   1EA0 DD 75 FA           6289 	ld	-6 (ix),l
   1EA3 DD 74 FB           6290 	ld	-5 (ix),h
   1EA6 3Er54              6291 	ld	a,#<_eighttimes
   1EA8 DD 86 F9           6292 	add	a,-7 (ix)
   1EAB 6F                 6293 	ld	l,a
   1EAC 3Es01              6294 	ld	a,#>_eighttimes
   1EAE CE 00              6295 	adc	a,#0x00
   1EB0 67                 6296 	ld	h,a
   1EB1 46                 6297 	ld	b,(hl)
   1EB2 23                 6298 	inc	hl
   1EB3 56                 6299 	ld	d,(hl)
   1EB4 78                 6300 	ld	a,b
   1EB5 C6 04              6301 	add	a,#0x04
   1EB7 47                 6302 	ld	b,a
   1EB8 7A                 6303 	ld	a,d
   1EB9 CE 00              6304 	adc	a,#0x00
   1EBB 57                 6305 	ld	d,a
   1EBC 78                 6306 	ld	a,b
   1EBD 81                 6307 	add	a,c
   1EBE 47                 6308 	ld	b,a
   1EBF 7A                 6309 	ld	a,d
   1EC0 8B                 6310 	adc	a,e
   1EC1 57                 6311 	ld	d,a
   1EC2 DD 6E FA           6312 	ld	l,-6 (ix)
   1EC5 DD 66 FB           6313 	ld	h,-5 (ix)
   1EC8 70                 6314 	ld	(hl),b
   1EC9 23                 6315 	inc	hl
   1ECA 72                 6316 	ld	(hl),d
                           6317 ;demo.c:954: vdp_copier(&cmd);
   1ECB C5                 6318 	push	bc
   1ECC D5                 6319 	push	de
   1ECD 21r8Cs41           6320 	ld	hl,#_cmd
   1ED0 E5                 6321 	push	hl
   1ED1 CDr00s00           6322 	call	_vdp_copier
   1ED4 F1                 6323 	pop	af
   1ED5 D1                 6324 	pop	de
   1ED6 C1                 6325 	pop	bc
                           6326 ;demo.c:955: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   1ED7 21r92s41           6327 	ld	hl,#_cmd + 6
   1EDA DD 75 FA           6328 	ld	-6 (ix),l
   1EDD DD 74 FB           6329 	ld	-5 (ix),h
   1EE0 3Er54              6330 	ld	a,#<_eighttimes
   1EE2 DD 86 F9           6331 	add	a,-7 (ix)
   1EE5 6F                 6332 	ld	l,a
   1EE6 3Es01              6333 	ld	a,#>_eighttimes
   1EE8 CE 00              6334 	adc	a,#0x00
   1EEA 67                 6335 	ld	h,a
   1EEB 46                 6336 	ld	b,(hl)
   1EEC 23                 6337 	inc	hl
   1EED 56                 6338 	ld	d,(hl)
   1EEE 78                 6339 	ld	a,b
   1EEF C6 04              6340 	add	a,#0x04
   1EF1 47                 6341 	ld	b,a
   1EF2 7A                 6342 	ld	a,d
   1EF3 CE 00              6343 	adc	a,#0x00
   1EF5 C6 01              6344 	add	a,#0x01
   1EF7 57                 6345 	ld	d,a
   1EF8 78                 6346 	ld	a,b
   1EF9 81                 6347 	add	a,c
   1EFA 4F                 6348 	ld	c,a
   1EFB 7A                 6349 	ld	a,d
   1EFC 8B                 6350 	adc	a,e
   1EFD 5F                 6351 	ld	e,a
   1EFE DD 6E FA           6352 	ld	l,-6 (ix)
   1F01 DD 66 FB           6353 	ld	h,-5 (ix)
   1F04 71                 6354 	ld	(hl),c
   1F05 23                 6355 	inc	hl
   1F06 73                 6356 	ld	(hl),e
                           6357 ;demo.c:956: vdp_copier(&cmd);
   1F07 21r8Cs41           6358 	ld	hl,#_cmd
   1F0A E5                 6359 	push	hl
   1F0B CDr00s00           6360 	call	_vdp_copier
   1F0E F1                 6361 	pop	af
   1F0F                    6362 00110$:
                           6363 ;demo.c:938: for (x = 0; x < 21; x+=1) {
   1F0F DD 34 FF           6364 	inc	-1 (ix)
   1F12 C3r2Es1D           6365 	jp	00108$
   1F15                    6366 00134$:
                           6367 ;demo.c:937: for (y = 9; y < 15; y+=1) {
   1F15 DD 34 FE           6368 	inc	-2 (ix)
   1F18 C3r1Bs1D           6369 	jp	00132$
   1F1B                    6370 00113$:
                           6371 ;demo.c:962: if (buf == -1) { bo = 0; ya = 0; }
   1F1B 3Ar23s42           6372 	ld	a,(#_buf+0)
   1F1E 3C                 6373 	inc	a
   1F1F 20 06              6374 	jr	NZ,00188$
   1F21 3Ar24s42           6375 	ld	a,(#_buf+1)
   1F24 3C                 6376 	inc	a
   1F25 28 02              6377 	jr	Z,00189$
   1F27                    6378 00188$:
   1F27 18 05              6379 	jr	00115$
   1F29                    6380 00189$:
   1F29 01 00 00           6381 	ld	bc,#0x0000
   1F2C 18 03              6382 	jr	00116$
   1F2E                    6383 00115$:
                           6384 ;demo.c:963: else { bo = 256; ya = 6;}
   1F2E 01 00 01           6385 	ld	bc,#0x0100
   1F31                    6386 00116$:
                           6387 ;demo.c:965: cmd.size_x = 72;
   1F31 11r94s41           6388 	ld	de,#_cmd + 8
   1F34 EB                 6389 	ex	de,hl
   1F35 36 48              6390 	ld	(hl),#0x48
   1F37 23                 6391 	inc	hl
   1F38 36 00              6392 	ld	(hl),#0x00
                           6393 ;demo.c:966: cmd.size_y = 80;
   1F3A 11r96s41           6394 	ld	de,#_cmd + 10
   1F3D EB                 6395 	ex	de,hl
   1F3E 36 50              6396 	ld	(hl),#0x50
   1F40 23                 6397 	inc	hl
   1F41 36 00              6398 	ld	(hl),#0x00
                           6399 ;demo.c:967: cmd.data = 0;
   1F43 11r98s41           6400 	ld	de,#_cmd + 12
   1F46 3E 00              6401 	ld	a,#0x00
   1F48 12                 6402 	ld	(de),a
                           6403 ;demo.c:968: cmd.argument = 0x00; // from 70xY to left
   1F49 11r99s41           6404 	ld	de,#_cmd + 13
   1F4C 3E 00              6405 	ld	a,#0x00
   1F4E 12                 6406 	ld	(de),a
                           6407 ;demo.c:969: cmd.command = 0xd0; // vram to vram, y only
   1F4F 11r9As41           6408 	ld	de,#_cmd + 14
   1F52 3E D0              6409 	ld	a,#0xD0
   1F54 12                 6410 	ld	(de),a
                           6411 ;demo.c:970: cmd.source_x = 178;
   1F55 21r8Cs41           6412 	ld	hl,#_cmd
   1F58 36 B2              6413 	ld	(hl),#0xB2
   1F5A 23                 6414 	inc	hl
   1F5B 36 00              6415 	ld	(hl),#0x00
                           6416 ;demo.c:971: cmd.source_y = 0;
   1F5D 11r8Es41           6417 	ld	de,#_cmd + 2
   1F60 EB                 6418 	ex	de,hl
   1F61 36 00              6419 	ld	(hl),#0x00
   1F63 23                 6420 	inc	hl
   1F64 36 00              6421 	ld	(hl),#0x00
                           6422 ;demo.c:972: cmd.dest_x = 84;
   1F66 11r90s41           6423 	ld	de,#_cmd + 4
   1F69 EB                 6424 	ex	de,hl
   1F6A 36 54              6425 	ld	(hl),#0x54
   1F6C 23                 6426 	inc	hl
   1F6D 36 00              6427 	ld	(hl),#0x00
                           6428 ;demo.c:973: cmd.dest_y = 72+bo;
   1F6F 11r92s41           6429 	ld	de,#_cmd + 6
   1F72 21 48 00           6430 	ld	hl,#0x0048
   1F75 09                 6431 	add	hl,bc
   1F76 4D                 6432 	ld	c,l
   1F77 44                 6433 	ld	b,h
   1F78 EB                 6434 	ex	de,hl
   1F79 71                 6435 	ld	(hl),c
   1F7A 23                 6436 	inc	hl
   1F7B 70                 6437 	ld	(hl),b
                           6438 ;demo.c:974: vdp_copier(&cmd);
   1F7C C5                 6439 	push	bc
   1F7D 21r8Cs41           6440 	ld	hl,#_cmd
   1F80 E5                 6441 	push	hl
   1F81 CDr00s00           6442 	call	_vdp_copier
   1F84 F1                 6443 	pop	af
   1F85 C1                 6444 	pop	bc
                           6445 ;demo.c:976: for (y = 0; y < 5; y+=1) {
   1F86 DD 36 FE 00        6446 	ld	-2 (ix),#0x00
   1F8A                    6447 00140$:
   1F8A DD 7E FE           6448 	ld	a,-2 (ix)
   1F8D D6 05              6449 	sub	a,#0x05
   1F8F D2rF0s20           6450 	jp	NC,00143$
                           6451 ;demo.c:977: for (x = 0; x < 6; x+=1) {
   1F92 DD 7E FE           6452 	ld	a,-2 (ix)
   1F95 87                 6453 	add	a,a
   1F96 DD 77 F9           6454 	ld	-7 (ix),a
   1F99 DD 36 FF 00        6455 	ld	-1 (ix),#0x00
   1F9D                    6456 00136$:
   1F9D DD 7E FF           6457 	ld	a,-1 (ix)
   1FA0 D6 06              6458 	sub	a,#0x06
   1FA2 D2rEAs20           6459 	jp	NC,00142$
                           6460 ;demo.c:979: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   1FA5 DD 5E FF           6461 	ld	e,-1 (ix)
   1FA8 16 00              6462 	ld	d,#0x00
   1FAA CB 23              6463 	sla	e
   1FAC CB 12              6464 	rl	d
   1FAE CB 23              6465 	sla	e
   1FB0 CB 12              6466 	rl	d
   1FB2 3Ar25s42           6467 	ld	a,(#_ffa+0)
   1FB5 83                 6468 	add	a,e
   1FB6 DD 77 FA           6469 	ld	-6 (ix),a
   1FB9 FD 21r25s42        6470 	ld	iy,#_ffa
   1FBD FD 7E 01           6471 	ld	a,1 (iy)
   1FC0 8A                 6472 	adc	a,d
   1FC1 DD 77 FB           6473 	ld	-5 (ix),a
   1FC4 DD 5E FE           6474 	ld	e,-2 (ix)
   1FC7 16 00              6475 	ld	d,#0x00
   1FC9 CB 23              6476 	sla	e
   1FCB CB 12              6477 	rl	d
   1FCD CB 23              6478 	sla	e
   1FCF CB 12              6479 	rl	d
   1FD1 DD 7E FA           6480 	ld	a,-6 (ix)
   1FD4 83                 6481 	add	a,e
   1FD5 5F                 6482 	ld	e,a
   1FD6 DD 7E FB           6483 	ld	a,-5 (ix)
   1FD9 8A                 6484 	adc	a,d
   1FDA 16 00              6485 	ld	d,#0x00
   1FDC 21r00s00           6486 	ld	hl,#_sintab
   1FDF 19                 6487 	add	hl,de
   1FE0 5E                 6488 	ld	e,(hl)
   1FE1 CB 2B              6489 	sra	e
   1FE3 CB 2B              6490 	sra	e
   1FE5 CB 2B              6491 	sra	e
   1FE7 CB 2B              6492 	sra	e
   1FE9 7B                 6493 	ld	a,e
   1FEA 17                 6494 	rla	
   1FEB 9F                 6495 	sbc	a,a
   1FEC 57                 6496 	ld	d,a
   1FED 21 07 00           6497 	ld	hl,#0x0007
   1FF0 19                 6498 	add	hl,de
   1FF1 DD 75 FC           6499 	ld	-4 (ix),l
                           6500 ;demo.c:980: if (px < 0) px = 0; 
   1FF4 DD 74 FD           6501 	ld	-3 (ix),h
   1FF7 7C                 6502 	ld	a, h
   1FF8 CB 7F              6503 	bit	7,a
   1FFA 28 08              6504 	jr	Z,00118$
   1FFC DD 36 FC 00        6505 	ld	-4 (ix),#0x00
   2000 DD 36 FD 00        6506 	ld	-3 (ix),#0x00
   2004                    6507 00118$:
                           6508 ;demo.c:981: if (px > 14) px = 14; 
   2004 3E 0E              6509 	ld	a,#0x0E
   2006 DD 96 FC           6510 	sub	a,-4 (ix)
   2009 3E 00              6511 	ld	a,#0x00
   200B DD 9E FD           6512 	sbc	a,-3 (ix)
   200E F2r19s20           6513 	jp	P,00120$
   2011 DD 36 FC 0E        6514 	ld	-4 (ix),#0x0E
   2015 DD 36 FD 00        6515 	ld	-3 (ix),#0x00
   2019                    6516 00120$:
                           6517 ;demo.c:983: cmd.size_x = 12;
   2019 11r94s41           6518 	ld	de,#_cmd + 8
   201C EB                 6519 	ex	de,hl
   201D 36 0C              6520 	ld	(hl),#0x0C
   201F 23                 6521 	inc	hl
   2020 36 00              6522 	ld	(hl),#0x00
                           6523 ;demo.c:984: cmd.size_y = 11;
   2022 11r96s41           6524 	ld	de,#_cmd + 10
   2025 EB                 6525 	ex	de,hl
   2026 36 0B              6526 	ld	(hl),#0x0B
   2028 23                 6527 	inc	hl
   2029 36 00              6528 	ld	(hl),#0x00
                           6529 ;demo.c:985: cmd.data = 0;
   202B 11r98s41           6530 	ld	de,#_cmd + 12
   202E 3E 00              6531 	ld	a,#0x00
   2030 12                 6532 	ld	(de),a
                           6533 ;demo.c:986: cmd.argument = 0x00; // from 70xY to left
   2031 11r99s41           6534 	ld	de,#_cmd + 13
   2034 3E 00              6535 	ld	a,#0x00
   2036 12                 6536 	ld	(de),a
                           6537 ;demo.c:987: cmd.command = 0x98; // vram to vram, y only
   2037 11r9As41           6538 	ld	de,#_cmd + 14
   203A 3E 98              6539 	ld	a,#0x98
   203C 12                 6540 	ld	(de),a
                           6541 ;demo.c:989: cmd.source_x = twelvetimes[px];
   203D DD 5E FC           6542 	ld	e,-4 (ix)
   2040 DD 56 FD           6543 	ld	d,-3 (ix)
   2043 CB 23              6544 	sla	e
   2045 CB 12              6545 	rl	d
   2047 21r20s01           6546 	ld	hl,#_twelvetimes
   204A 19                 6547 	add	hl,de
   204B 5E                 6548 	ld	e,(hl)
   204C 23                 6549 	inc	hl
   204D 56                 6550 	ld	d,(hl)
   204E 21r8Cs41           6551 	ld	hl,#_cmd
   2051 73                 6552 	ld	(hl),e
   2052 23                 6553 	inc	hl
   2053 72                 6554 	ld	(hl),d
                           6555 ;demo.c:990: cmd.source_y = 768+183+16-px;
   2054 23                 6556 	inc	hl
   2055 DD 75 FA           6557 	ld	-6 (ix),l
   2058 DD 74 FB           6558 	ld	-5 (ix),h
   205B 3E C7              6559 	ld	a,#0xC7
   205D DD 96 FC           6560 	sub	a,-4 (ix)
   2060 5F                 6561 	ld	e,a
   2061 3E 03              6562 	ld	a,#0x03
   2063 DD 9E FD           6563 	sbc	a,-3 (ix)
   2066 57                 6564 	ld	d,a
   2067 DD 6E FA           6565 	ld	l,-6 (ix)
   206A DD 66 FB           6566 	ld	h,-5 (ix)
   206D 73                 6567 	ld	(hl),e
   206E 23                 6568 	inc	hl
   206F 72                 6569 	ld	(hl),d
                           6570 ;demo.c:991: cmd.dest_x = 84+twelvetimes[x];
   2070 21r90s41           6571 	ld	hl,#_cmd + 4
   2073 DD 75 FA           6572 	ld	-6 (ix),l
   2076 DD 74 FB           6573 	ld	-5 (ix),h
   2079 DD 7E FF           6574 	ld	a,-1 (ix)
   207C 87                 6575 	add	a,a
   207D C6r20              6576 	add	a,#<_twelvetimes
   207F 6F                 6577 	ld	l,a
   2080 3Es01              6578 	ld	a,#>_twelvetimes
   2082 CE 00              6579 	adc	a,#0x00
   2084 67                 6580 	ld	h,a
   2085 5E                 6581 	ld	e,(hl)
   2086 23                 6582 	inc	hl
   2087 56                 6583 	ld	d,(hl)
   2088 21 54 00           6584 	ld	hl,#0x0054
   208B 19                 6585 	add	hl,de
   208C EB                 6586 	ex	de,hl
   208D DD 6E FA           6587 	ld	l,-6 (ix)
   2090 DD 66 FB           6588 	ld	h,-5 (ix)
   2093 73                 6589 	ld	(hl),e
   2094 23                 6590 	inc	hl
   2095 72                 6591 	ld	(hl),d
                           6592 ;demo.c:992: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   2096 21r92s41           6593 	ld	hl,#_cmd + 6
   2099 DD 75 FA           6594 	ld	-6 (ix),l
   209C DD 74 FB           6595 	ld	-5 (ix),h
   209F 3Er54              6596 	ld	a,#<_eighttimes
   20A1 DD 86 F9           6597 	add	a,-7 (ix)
   20A4 6F                 6598 	ld	l,a
   20A5 3Es01              6599 	ld	a,#>_eighttimes
   20A7 CE 00              6600 	adc	a,#0x00
   20A9 67                 6601 	ld	h,a
   20AA 5E                 6602 	ld	e,(hl)
   20AB 23                 6603 	inc	hl
   20AC 56                 6604 	ld	d,(hl)
   20AD 13                 6605 	inc	de
   20AE 13                 6606 	inc	de
   20AF 13                 6607 	inc	de
   20B0 13                 6608 	inc	de
   20B1 79                 6609 	ld	a,c
   20B2 83                 6610 	add	a,e
   20B3 DD 77 F7           6611 	ld	-9 (ix),a
   20B6 78                 6612 	ld	a,b
   20B7 8A                 6613 	adc	a,d
   20B8 DD 77 F8           6614 	ld	-8 (ix),a
   20BB 3E 0E              6615 	ld	a,#0x0E
   20BD DD 96 FC           6616 	sub	a,-4 (ix)
   20C0 5F                 6617 	ld	e,a
   20C1 3E 00              6618 	ld	a,#0x00
   20C3 DD 9E FD           6619 	sbc	a,-3 (ix)
   20C6 57                 6620 	ld	d,a
   20C7 DD 7E F7           6621 	ld	a,-9 (ix)
   20CA 83                 6622 	add	a,e
   20CB 5F                 6623 	ld	e,a
   20CC DD 7E F8           6624 	ld	a,-8 (ix)
   20CF 8A                 6625 	adc	a,d
   20D0 57                 6626 	ld	d,a
   20D1 DD 6E FA           6627 	ld	l,-6 (ix)
   20D4 DD 66 FB           6628 	ld	h,-5 (ix)
   20D7 73                 6629 	ld	(hl),e
   20D8 23                 6630 	inc	hl
   20D9 72                 6631 	ld	(hl),d
                           6632 ;demo.c:993: vdp_copier(&cmd);
   20DA C5                 6633 	push	bc
   20DB 21r8Cs41           6634 	ld	hl,#_cmd
   20DE E5                 6635 	push	hl
   20DF CDr00s00           6636 	call	_vdp_copier
   20E2 F1                 6637 	pop	af
   20E3 C1                 6638 	pop	bc
                           6639 ;demo.c:977: for (x = 0; x < 6; x+=1) {
   20E4 DD 34 FF           6640 	inc	-1 (ix)
   20E7 C3r9Ds1F           6641 	jp	00136$
   20EA                    6642 00142$:
                           6643 ;demo.c:976: for (y = 0; y < 5; y+=1) {
   20EA DD 34 FE           6644 	inc	-2 (ix)
   20ED C3r8As1F           6645 	jp	00140$
   20F0                    6646 00143$:
                           6647 ;demo.c:998: for (x = 0; x < 6; x+=1) {
   20F0 DD 36 FF 00        6648 	ld	-1 (ix),#0x00
   20F4                    6649 00144$:
   20F4 DD 7E FF           6650 	ld	a,-1 (ix)
   20F7 D6 06              6651 	sub	a,#0x06
   20F9 D2r3As22           6652 	jp	NC,00147$
                           6653 ;demo.c:999: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   20FC DD 5E FF           6654 	ld	e,-1 (ix)
   20FF 16 00              6655 	ld	d,#0x00
   2101 CB 23              6656 	sla	e
   2103 CB 12              6657 	rl	d
   2105 CB 23              6658 	sla	e
   2107 CB 12              6659 	rl	d
   2109 3Ar25s42           6660 	ld	a,(#_ffa+0)
   210C 83                 6661 	add	a,e
   210D 5F                 6662 	ld	e,a
   210E FD 21r25s42        6663 	ld	iy,#_ffa
   2112 FD 7E 01           6664 	ld	a,1 (iy)
   2115 8A                 6665 	adc	a,d
   2116 57                 6666 	ld	d,a
   2117 21 14 00           6667 	ld	hl,#0x0014
   211A 19                 6668 	add	hl,de
   211B 5D                 6669 	ld	e,l
   211C 16 00              6670 	ld	d,#0x00
   211E 21r00s00           6671 	ld	hl,#_sintab
   2121 19                 6672 	add	hl,de
   2122 5E                 6673 	ld	e,(hl)
   2123 CB 2B              6674 	sra	e
   2125 CB 2B              6675 	sra	e
   2127 CB 2B              6676 	sra	e
   2129 CB 2B              6677 	sra	e
   212B 7B                 6678 	ld	a,e
   212C 17                 6679 	rla	
   212D 9F                 6680 	sbc	a,a
   212E 57                 6681 	ld	d,a
   212F 21 07 00           6682 	ld	hl,#0x0007
   2132 19                 6683 	add	hl,de
   2133 DD 75 FC           6684 	ld	-4 (ix),l
                           6685 ;demo.c:1000: if (px < 0) px = 0; 
   2136 DD 74 FD           6686 	ld	-3 (ix),h
   2139 7C                 6687 	ld	a, h
   213A CB 7F              6688 	bit	7,a
   213C 28 08              6689 	jr	Z,00122$
   213E DD 36 FC 00        6690 	ld	-4 (ix),#0x00
   2142 DD 36 FD 00        6691 	ld	-3 (ix),#0x00
   2146                    6692 00122$:
                           6693 ;demo.c:1001: if (px > 14) px = 14; 
   2146 3E 0E              6694 	ld	a,#0x0E
   2148 DD 96 FC           6695 	sub	a,-4 (ix)
   214B 3E 00              6696 	ld	a,#0x00
   214D DD 9E FD           6697 	sbc	a,-3 (ix)
   2150 F2r5Bs21           6698 	jp	P,00124$
   2153 DD 36 FC 0E        6699 	ld	-4 (ix),#0x0E
   2157 DD 36 FD 00        6700 	ld	-3 (ix),#0x00
   215B                    6701 00124$:
                           6702 ;demo.c:1003: cmd.size_x = 12;
   215B 11r94s41           6703 	ld	de,#_cmd + 8
   215E EB                 6704 	ex	de,hl
   215F 36 0C              6705 	ld	(hl),#0x0C
   2161 23                 6706 	inc	hl
   2162 36 00              6707 	ld	(hl),#0x00
                           6708 ;demo.c:1004: cmd.size_y = 27-(14-px);
   2164 21r96s41           6709 	ld	hl,#_cmd + 10
   2167 DD 75 F7           6710 	ld	-9 (ix),l
   216A DD 74 F8           6711 	ld	-8 (ix),h
   216D 3E 0E              6712 	ld	a,#0x0E
   216F DD 96 FC           6713 	sub	a,-4 (ix)
   2172 DD 77 FA           6714 	ld	-6 (ix),a
   2175 3E 00              6715 	ld	a,#0x00
   2177 DD 9E FD           6716 	sbc	a,-3 (ix)
   217A DD 77 FB           6717 	ld	-5 (ix),a
   217D 3E 1B              6718 	ld	a,#0x1B
   217F DD 96 FA           6719 	sub	a,-6 (ix)
   2182 5F                 6720 	ld	e,a
   2183 3E 00              6721 	ld	a,#0x00
   2185 DD 9E FB           6722 	sbc	a,-5 (ix)
   2188 57                 6723 	ld	d,a
   2189 DD 6E F7           6724 	ld	l,-9 (ix)
   218C DD 66 F8           6725 	ld	h,-8 (ix)
   218F 73                 6726 	ld	(hl),e
   2190 23                 6727 	inc	hl
   2191 72                 6728 	ld	(hl),d
                           6729 ;demo.c:1005: cmd.data = 0;
   2192 11r98s41           6730 	ld	de,#_cmd + 12
   2195 3E 00              6731 	ld	a,#0x00
   2197 12                 6732 	ld	(de),a
                           6733 ;demo.c:1006: cmd.argument = 0x00; // from 70xY to left
   2198 11r99s41           6734 	ld	de,#_cmd + 13
   219B 3E 00              6735 	ld	a,#0x00
   219D 12                 6736 	ld	(de),a
                           6737 ;demo.c:1007: cmd.command = 0x98; // vram to vram, y only
   219E 11r9As41           6738 	ld	de,#_cmd + 14
   21A1 3E 98              6739 	ld	a,#0x98
   21A3 12                 6740 	ld	(de),a
                           6741 ;demo.c:1009: cmd.source_x = twelvetimes[px];
   21A4 DD 5E FC           6742 	ld	e,-4 (ix)
   21A7 DD 56 FD           6743 	ld	d,-3 (ix)
   21AA CB 23              6744 	sla	e
   21AC CB 12              6745 	rl	d
   21AE 21r20s01           6746 	ld	hl,#_twelvetimes
   21B1 19                 6747 	add	hl,de
   21B2 5E                 6748 	ld	e,(hl)
   21B3 23                 6749 	inc	hl
   21B4 56                 6750 	ld	d,(hl)
   21B5 21r8Cs41           6751 	ld	hl,#_cmd
   21B8 73                 6752 	ld	(hl),e
   21B9 23                 6753 	inc	hl
   21BA 72                 6754 	ld	(hl),d
                           6755 ;demo.c:1010: cmd.source_y = 768+183+ 16-px;
   21BB 23                 6756 	inc	hl
   21BC DD 75 F7           6757 	ld	-9 (ix),l
   21BF DD 74 F8           6758 	ld	-8 (ix),h
   21C2 3E C7              6759 	ld	a,#0xC7
   21C4 DD 96 FC           6760 	sub	a,-4 (ix)
   21C7 5F                 6761 	ld	e,a
   21C8 3E 03              6762 	ld	a,#0x03
   21CA DD 9E FD           6763 	sbc	a,-3 (ix)
   21CD 57                 6764 	ld	d,a
   21CE DD 6E F7           6765 	ld	l,-9 (ix)
   21D1 DD 66 F8           6766 	ld	h,-8 (ix)
   21D4 73                 6767 	ld	(hl),e
   21D5 23                 6768 	inc	hl
   21D6 72                 6769 	ld	(hl),d
                           6770 ;demo.c:1011: cmd.dest_x = 84+twelvetimes[x];
   21D7 21r90s41           6771 	ld	hl,#_cmd + 4
   21DA DD 75 F7           6772 	ld	-9 (ix),l
   21DD DD 74 F8           6773 	ld	-8 (ix),h
   21E0 DD 7E FF           6774 	ld	a,-1 (ix)
   21E3 87                 6775 	add	a,a
   21E4 C6r20              6776 	add	a,#<_twelvetimes
   21E6 6F                 6777 	ld	l,a
   21E7 3Es01              6778 	ld	a,#>_twelvetimes
   21E9 CE 00              6779 	adc	a,#0x00
   21EB 67                 6780 	ld	h,a
   21EC 5E                 6781 	ld	e,(hl)
   21ED 23                 6782 	inc	hl
   21EE 56                 6783 	ld	d,(hl)
   21EF 21 54 00           6784 	ld	hl,#0x0054
   21F2 19                 6785 	add	hl,de
   21F3 EB                 6786 	ex	de,hl
   21F4 DD 6E F7           6787 	ld	l,-9 (ix)
   21F7 DD 66 F8           6788 	ld	h,-8 (ix)
   21FA 73                 6789 	ld	(hl),e
   21FB 23                 6790 	inc	hl
   21FC 72                 6791 	ld	(hl),d
                           6792 ;demo.c:1012: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   21FD 21r92s41           6793 	ld	hl,#_cmd + 6
   2200 DD 75 F7           6794 	ld	-9 (ix),l
   2203 DD 74 F8           6795 	ld	-8 (ix),h
   2206 11r5Es01           6796 	ld	de,#_eighttimes + 10
   2209 EB                 6797 	ex	de,hl
   220A 5E                 6798 	ld	e,(hl)
   220B 23                 6799 	inc	hl
   220C 56                 6800 	ld	d,(hl)
   220D 13                 6801 	inc	de
   220E 13                 6802 	inc	de
   220F 13                 6803 	inc	de
   2210 13                 6804 	inc	de
   2211 79                 6805 	ld	a,c
   2212 83                 6806 	add	a,e
   2213 5F                 6807 	ld	e,a
   2214 78                 6808 	ld	a,b
   2215 8A                 6809 	adc	a,d
   2216 57                 6810 	ld	d,a
   2217 7B                 6811 	ld	a,e
   2218 DD 86 FA           6812 	add	a,-6 (ix)
   221B 5F                 6813 	ld	e,a
   221C 7A                 6814 	ld	a,d
   221D DD 8E FB           6815 	adc	a,-5 (ix)
   2220 57                 6816 	ld	d,a
   2221 DD 6E F7           6817 	ld	l,-9 (ix)
   2224 DD 66 F8           6818 	ld	h,-8 (ix)
   2227 73                 6819 	ld	(hl),e
   2228 23                 6820 	inc	hl
   2229 72                 6821 	ld	(hl),d
                           6822 ;demo.c:1013: vdp_copier(&cmd);
   222A C5                 6823 	push	bc
   222B 21r8Cs41           6824 	ld	hl,#_cmd
   222E E5                 6825 	push	hl
   222F CDr00s00           6826 	call	_vdp_copier
   2232 F1                 6827 	pop	af
   2233 C1                 6828 	pop	bc
                           6829 ;demo.c:998: for (x = 0; x < 6; x+=1) {
   2234 DD 34 FF           6830 	inc	-1 (ix)
   2237 C3rF4s20           6831 	jp	00144$
   223A                    6832 00147$:
                           6833 ;demo.c:1017: if (buf == -1) vdp_register(2, 0x1F);
   223A 3Ar23s42           6834 	ld	a,(#_buf+0)
   223D 3C                 6835 	inc	a
   223E 20 06              6836 	jr	NZ,00200$
   2240 3Ar24s42           6837 	ld	a,(#_buf+1)
   2243 3C                 6838 	inc	a
   2244 28 02              6839 	jr	Z,00201$
   2246                    6840 00200$:
   2246 18 0A              6841 	jr	00126$
   2248                    6842 00201$:
   2248 21 02 1F           6843 	ld	hl,#0x1F02
   224B E5                 6844 	push	hl
   224C CDr00s00           6845 	call	_vdp_register
   224F F1                 6846 	pop	af
   2250 18 08              6847 	jr	00127$
   2252                    6848 00126$:
                           6849 ;demo.c:1018: else vdp_register(2, 0x3F);
   2252 21 02 3F           6850 	ld	hl,#0x3F02
   2255 E5                 6851 	push	hl
   2256 CDr00s00           6852 	call	_vdp_register
   2259 F1                 6853 	pop	af
   225A                    6854 00127$:
                           6855 ;demo.c:1021: buf = -buf;
   225A AF                 6856 	xor	a,a
   225B FD 21r23s42        6857 	ld	iy,#_buf
   225F 3E 00              6858 	ld	a,#0x00
   2261 FD 9E 00           6859 	sbc	a,0 (iy)
   2264 21r23s42           6860 	ld	hl,#_buf + 0
   2267 77                 6861 	ld	(hl), a
   2268 FD 21r23s42        6862 	ld	iy,#_buf
   226C 3E 00              6863 	ld	a,#0x00
   226E FD 9E 01           6864 	sbc	a,1 (iy)
   2271 21r24s42           6865 	ld	hl,#_buf + 1
   2274 77                 6866 	ld	(hl), a
                           6867 ;demo.c:1023: ffa+=8;
   2275 21r25s42           6868 	ld	hl,#_ffa
   2278 7E                 6869 	ld	a,(hl)
   2279 C6 08              6870 	add	a,#0x08
   227B 23                 6871 	inc	hl
   227C 2B                 6872 	dec	hl
   227D C5                 6873 	push	bc
   227E 4F                 6874 	ld	c, a
   227F 23                 6875 	inc	hl
   2280 7E                 6876 	ld	a, (hl)
   2281 47                 6877 	ld	b, a
   2282 79                 6878 	ld	a, c
   2283 2B                 6879 	dec	hl
   2284 77                 6880 	ld	(hl), a
   2285 78                 6881 	ld	a, b
   2286 C1                 6882 	pop	bc
   2287 CE 00              6883 	adc	a,#0x00
   2289 23                 6884 	inc	hl
   228A 77                 6885 	ld	(hl),a
   228B DD F9              6886 	ld	sp,ix
   228D DD E1              6887 	pop	ix
   228F C9                 6888 	ret
   2290                    6889 _thewave_end::
                           6890 ;demo.c:1029: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           6891 ;	---------------------------------
                           6892 ; Function drawtritile
                           6893 ; ---------------------------------
   2290                    6894 _drawtritile_start::
   2290                    6895 _drawtritile:
   2290 DD E5              6896 	push	ix
   2292 DD 21 00 00        6897 	ld	ix,#0
   2296 DD 39              6898 	add	ix,sp
                           6899 ;demo.c:1030: cmd.source_x = tx;
   2298 DD 4E 04           6900 	ld	c,4 (ix)
   229B 06 00              6901 	ld	b,#0x00
   229D 21r8Cs41           6902 	ld	hl,#_cmd
   22A0 71                 6903 	ld	(hl),c
   22A1 23                 6904 	inc	hl
   22A2 70                 6905 	ld	(hl),b
                           6906 ;demo.c:1031: cmd.source_y = ty-1;
   22A3 01r8Es41           6907 	ld	bc,#_cmd + 2
   22A6 DD 5E 05           6908 	ld	e,5 (ix)
   22A9 DD 56 06           6909 	ld	d,6 (ix)
   22AC 1B                 6910 	dec	de
   22AD 69                 6911 	ld	l,c
   22AE 60                 6912 	ld	h,b
   22AF 73                 6913 	ld	(hl),e
   22B0 23                 6914 	inc	hl
   22B1 72                 6915 	ld	(hl),d
                           6916 ;demo.c:1032: cmd.dest_x = x;
   22B2 01r90s41           6917 	ld	bc,#_cmd + 4
   22B5 DD 5E 07           6918 	ld	e,7 (ix)
   22B8 16 00              6919 	ld	d,#0x00
   22BA 69                 6920 	ld	l,c
   22BB 60                 6921 	ld	h,b
   22BC 73                 6922 	ld	(hl),e
   22BD 23                 6923 	inc	hl
   22BE 72                 6924 	ld	(hl),d
                           6925 ;demo.c:1033: cmd.dest_y = y;
   22BF 01r92s41           6926 	ld	bc,#_cmd + 6
   22C2 DD 5E 08           6927 	ld	e,8 (ix)
   22C5 16 00              6928 	ld	d,#0x00
   22C7 69                 6929 	ld	l,c
   22C8 60                 6930 	ld	h,b
   22C9 73                 6931 	ld	(hl),e
   22CA 23                 6932 	inc	hl
   22CB 72                 6933 	ld	(hl),d
                           6934 ;demo.c:1034: cmd.size_x = 16;
   22CC 21r94s41           6935 	ld	hl, #_cmd + 8
   22CF 36 10              6936 	ld	(hl),#0x10
   22D1 23                 6937 	inc	hl
   22D2 36 00              6938 	ld	(hl),#0x00
                           6939 ;demo.c:1035: cmd.size_y = 16;
   22D4 21r96s41           6940 	ld	hl, #_cmd + 10
   22D7 36 10              6941 	ld	(hl),#0x10
   22D9 23                 6942 	inc	hl
   22DA 36 00              6943 	ld	(hl),#0x00
                           6944 ;demo.c:1036: cmd.data = 0;
                           6945 ;demo.c:1037: cmd.argument = 0x00;
   22DC 3E 00              6946 	ld	a,#0x00
   22DE 32r98s41           6947 	ld	(#_cmd + 12),a
   22E1 32r99s41           6948 	ld	(#_cmd + 13),a
                           6949 ;demo.c:1038: cmd.command = 0xd0; // HMMM
   22E4 3E D0              6950 	ld	a,#0xD0
   22E6 32r9As41           6951 	ld	(#_cmd + 14),a
                           6952 ;demo.c:1039: vdp_copier(&cmd);
   22E9 21r8Cs41           6953 	ld	hl,#_cmd
   22EC E5                 6954 	push	hl
   22ED CDr00s00           6955 	call	_vdp_copier
   22F0 F1                 6956 	pop	af
   22F1 DD E1              6957 	pop	ix
   22F3 C9                 6958 	ret
   22F4                    6959 _drawtritile_end::
                           6960 ;demo.c:1046: void drawtilescreen(char* tripic) {
                           6961 ;	---------------------------------
                           6962 ; Function drawtilescreen
                           6963 ; ---------------------------------
   22F4                    6964 _drawtilescreen_start::
   22F4                    6965 _drawtilescreen:
   22F4 DD E5              6966 	push	ix
   22F6 DD 21 00 00        6967 	ld	ix,#0
   22FA DD 39              6968 	add	ix,sp
   22FC F5                 6969 	push	af
   22FD 3B                 6970 	dec	sp
                           6971 ;demo.c:1048: if(tilei >= 192) return;
   22FE 3Ar28s42           6972 	ld	a,(#_tilei+0)
   2301 D6 C0              6973 	sub	a,#0xC0
   2303 3Ar29s42           6974 	ld	a,(#_tilei+1)
   2306 DE 00              6975 	sbc	a,#0x00
   2308 FAr0Es23           6976 	jp	M,00102$
   230B C3rD9s23           6977 	jp	00112$
   230E                    6978 00102$:
                           6979 ;demo.c:1050: tiletick++;
   230E FD 21r2Es42        6980 	ld	iy,#_tiletick
   2312 FD 34 00           6981 	inc	0 (iy)
                           6982 ;demo.c:1051: if (tiletick > 6) { tiletick = 0;}
   2315 3E 06              6983 	ld	a,#0x06
   2317 FD 21r2Es42        6984 	ld	iy,#_tiletick
   231B FD 96 00           6985 	sub	a,0 (iy)
   231E 30 0A              6986 	jr	NC,00104$
   2320 FD 21r2Es42        6987 	ld	iy,#_tiletick
   2324 FD 36 00 00        6988 	ld	0 (iy),#0x00
   2328 18 03              6989 	jr	00118$
   232A                    6990 00104$:
                           6991 ;demo.c:1052: else return;
   232A C3rD9s23           6992 	jp	00112$
                           6993 ;demo.c:1053: for (i=0;i<20;i++) {
   232D                    6994 00118$:
   232D DD 36 FF 00        6995 	ld	-1 (ix),#0x00
   2331                    6996 00108$:
   2331 DD 7E FF           6997 	ld	a,-1 (ix)
   2334 D6 14              6998 	sub	a,#0x14
   2336 D2rD9s23           6999 	jp	NC,00112$
                           7000 ;demo.c:1054: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2339 3Ar2Cs42           7001 	ld	a,(#_tiley+0)
   233C DD 77 FD           7002 	ld	-3 (ix),a
   233F 3Ar2As42           7003 	ld	a,(#_tilex+0)
   2342 DD 77 FE           7004 	ld	-2 (ix),a
   2345 21r28s42           7005 	ld	hl,#_tilei
   2348 DD 7E 04           7006 	ld	a,4 (ix)
   234B 86                 7007 	add	a,(hl)
   234C 57                 7008 	ld	d,a
   234D DD 7E 05           7009 	ld	a,5 (ix)
   2350 23                 7010 	inc	hl
   2351 8E                 7011 	adc	a,(hl)
   2352 6A                 7012 	ld	l,d
   2353 67                 7013 	ld	h,a
   2354 56                 7014 	ld	d,(hl)
   2355 7A                 7015 	ld	a,d
   2356 87                 7016 	add	a,a
   2357 C6r88              7017 	add	a,#<_tri_lookup_y
   2359 6F                 7018 	ld	l,a
   235A 3Es01              7019 	ld	a,#>_tri_lookup_y
   235C CE 00              7020 	adc	a,#0x00
   235E 67                 7021 	ld	h,a
   235F 4E                 7022 	ld	c,(hl)
   2360 23                 7023 	inc	hl
   2361 5E                 7024 	ld	e,(hl)
   2362 3Er00              7025 	ld	a,#<_tri_lookup_x
   2364 82                 7026 	add	a,d
   2365 6F                 7027 	ld	l,a
   2366 3Es01              7028 	ld	a,#>_tri_lookup_x
   2368 CE 00              7029 	adc	a,#0x00
   236A 67                 7030 	ld	h,a
   236B 56                 7031 	ld	d,(hl)
   236C DD 66 FD           7032 	ld	h,-3 (ix)
   236F DD 6E FE           7033 	ld	l,-2 (ix)
   2372 E5                 7034 	push	hl
   2373 69                 7035 	ld	l,c
   2374 63                 7036 	ld	h,e
   2375 E5                 7037 	push	hl
   2376 D5                 7038 	push	de
   2377 33                 7039 	inc	sp
   2378 CDr90s22           7040 	call	_drawtritile
   237B F1                 7041 	pop	af
   237C F1                 7042 	pop	af
   237D 33                 7043 	inc	sp
                           7044 ;demo.c:1055: tilex+=16;
   237E 21r2As42           7045 	ld	hl,#_tilex
   2381 7E                 7046 	ld	a,(hl)
   2382 C6 10              7047 	add	a,#0x10
   2384 23                 7048 	inc	hl
   2385 2B                 7049 	dec	hl
   2386 C5                 7050 	push	bc
   2387 4F                 7051 	ld	c, a
   2388 23                 7052 	inc	hl
   2389 7E                 7053 	ld	a, (hl)
   238A 47                 7054 	ld	b, a
   238B 79                 7055 	ld	a, c
   238C 2B                 7056 	dec	hl
   238D 77                 7057 	ld	(hl), a
   238E 78                 7058 	ld	a, b
   238F C1                 7059 	pop	bc
   2390 CE 00              7060 	adc	a,#0x00
   2392 23                 7061 	inc	hl
   2393 77                 7062 	ld	(hl),a
                           7063 ;demo.c:1056: tilei++;
   2394 FD 21r28s42        7064 	ld	iy,#_tilei
   2398 FD 34 00           7065 	inc	0 (iy)
   239B 20 07              7066 	jr	NZ,00119$
   239D FD 21r28s42        7067 	ld	iy,#_tilei
   23A1 FD 34 01           7068 	inc	1 (iy)
   23A4                    7069 00119$:
                           7070 ;demo.c:1057: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   23A4 3Ar2As42           7071 	ld	a,(#_tilex+0)
   23A7 D6 00              7072 	sub	a,#0x00
   23A9 3Ar2Bs42           7073 	ld	a,(#_tilex+1)
   23AC DE 01              7074 	sbc	a,#0x01
   23AE FArD3s23           7075 	jp	M,00110$
   23B1 21r2As42           7076 	ld	hl,#_tilex + 0
   23B4 36 00              7077 	ld	(hl), #0x00
   23B6 21r2Bs42           7078 	ld	hl,#_tilex + 1
   23B9 36 00              7079 	ld	(hl), #0x00
   23BB 21r2Cs42           7080 	ld	hl,#_tiley
   23BE 7E                 7081 	ld	a,(hl)
   23BF C6 10              7082 	add	a,#0x10
   23C1 23                 7083 	inc	hl
   23C2 2B                 7084 	dec	hl
   23C3 C5                 7085 	push	bc
   23C4 4F                 7086 	ld	c, a
   23C5 23                 7087 	inc	hl
   23C6 7E                 7088 	ld	a, (hl)
   23C7 47                 7089 	ld	b, a
   23C8 79                 7090 	ld	a, c
   23C9 2B                 7091 	dec	hl
   23CA 77                 7092 	ld	(hl), a
   23CB 78                 7093 	ld	a, b
   23CC C1                 7094 	pop	bc
   23CD CE 00              7095 	adc	a,#0x00
   23CF 23                 7096 	inc	hl
   23D0 77                 7097 	ld	(hl),a
   23D1 18 06              7098 	jr	00112$
   23D3                    7099 00110$:
                           7100 ;demo.c:1053: for (i=0;i<20;i++) {
   23D3 DD 34 FF           7101 	inc	-1 (ix)
   23D6 C3r31s23           7102 	jp	00108$
   23D9                    7103 00112$:
   23D9 DD F9              7104 	ld	sp,ix
   23DB DD E1              7105 	pop	ix
   23DD C9                 7106 	ret
   23DE                    7107 _drawtilescreen_end::
                           7108 ;demo.c:1062: void drawtilescreen_full(char* tripic) {
                           7109 ;	---------------------------------
                           7110 ; Function drawtilescreen_full
                           7111 ; ---------------------------------
   23DE                    7112 _drawtilescreen_full_start::
   23DE                    7113 _drawtilescreen_full:
   23DE DD E5              7114 	push	ix
   23E0 DD 21 00 00        7115 	ld	ix,#0
   23E4 DD 39              7116 	add	ix,sp
   23E6 21 F8 FF           7117 	ld	hl,#-8
   23E9 39                 7118 	add	hl,sp
   23EA F9                 7119 	ld	sp,hl
                           7120 ;demo.c:1063: int x = 0;
   23EB DD 36 FE 00        7121 	ld	-2 (ix),#0x00
   23EF DD 36 FF 00        7122 	ld	-1 (ix),#0x00
                           7123 ;demo.c:1066: while(i < 192) {
   23F3 DD 36 FC 00        7124 	ld	-4 (ix),#0x00
   23F7 DD 36 FD 00        7125 	ld	-3 (ix),#0x00
   23FB DD 36 FA 00        7126 	ld	-6 (ix),#0x00
   23FF DD 36 FB 00        7127 	ld	-5 (ix),#0x00
   2403                    7128 00103$:
   2403 DD 7E FA           7129 	ld	a,-6 (ix)
   2406 D6 C0              7130 	sub	a,#0xC0
   2408 DD 7E FB           7131 	ld	a,-5 (ix)
   240B DE 00              7132 	sbc	a,#0x00
   240D F2r94s24           7133 	jp	P,00106$
                           7134 ;demo.c:1067: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   2410 DD 7E FC           7135 	ld	a,-4 (ix)
   2413 DD 77 F8           7136 	ld	-8 (ix),a
   2416 DD 7E FE           7137 	ld	a,-2 (ix)
   2419 DD 77 F9           7138 	ld	-7 (ix),a
   241C DD 7E 04           7139 	ld	a,4 (ix)
   241F DD 86 FA           7140 	add	a,-6 (ix)
   2422 4F                 7141 	ld	c,a
   2423 DD 7E 05           7142 	ld	a,5 (ix)
   2426 DD 8E FB           7143 	adc	a,-5 (ix)
   2429 47                 7144 	ld	b,a
   242A 0A                 7145 	ld	a,(bc)
   242B 4F                 7146 	ld	c,a
   242C 87                 7147 	add	a,a
   242D C6r88              7148 	add	a,#<_tri_lookup_y
   242F 6F                 7149 	ld	l,a
   2430 3Es01              7150 	ld	a,#>_tri_lookup_y
   2432 CE 00              7151 	adc	a,#0x00
   2434 67                 7152 	ld	h,a
   2435 46                 7153 	ld	b,(hl)
   2436 23                 7154 	inc	hl
   2437 56                 7155 	ld	d,(hl)
   2438 3Er00              7156 	ld	a,#<_tri_lookup_x
   243A 81                 7157 	add	a,c
   243B 6F                 7158 	ld	l,a
   243C 3Es01              7159 	ld	a,#>_tri_lookup_x
   243E CE 00              7160 	adc	a,#0x00
   2440 67                 7161 	ld	h,a
   2441 4E                 7162 	ld	c,(hl)
   2442 DD 66 F8           7163 	ld	h,-8 (ix)
   2445 DD 6E F9           7164 	ld	l,-7 (ix)
   2448 E5                 7165 	push	hl
   2449 58                 7166 	ld	e,b
   244A D5                 7167 	push	de
   244B 79                 7168 	ld	a,c
   244C F5                 7169 	push	af
   244D 33                 7170 	inc	sp
   244E CDr90s22           7171 	call	_drawtritile
   2451 F1                 7172 	pop	af
   2452 F1                 7173 	pop	af
   2453 33                 7174 	inc	sp
                           7175 ;demo.c:1068: x+=16;
   2454 DD 7E FE           7176 	ld	a,-2 (ix)
   2457 C6 10              7177 	add	a,#0x10
   2459 DD 77 FE           7178 	ld	-2 (ix),a
   245C DD 7E FF           7179 	ld	a,-1 (ix)
   245F CE 00              7180 	adc	a,#0x00
   2461 DD 77 FF           7181 	ld	-1 (ix),a
                           7182 ;demo.c:1069: if (x >= 256) {x = 0; y+=16;}
   2464 DD 7E FE           7183 	ld	a,-2 (ix)
   2467 D6 00              7184 	sub	a,#0x00
   2469 DD 7E FF           7185 	ld	a,-1 (ix)
   246C DE 01              7186 	sbc	a,#0x01
   246E FAr89s24           7187 	jp	M,00102$
   2471 DD 36 FE 00        7188 	ld	-2 (ix),#0x00
   2475 DD 36 FF 00        7189 	ld	-1 (ix),#0x00
   2479 DD 7E FC           7190 	ld	a,-4 (ix)
   247C C6 10              7191 	add	a,#0x10
   247E DD 77 FC           7192 	ld	-4 (ix),a
   2481 DD 7E FD           7193 	ld	a,-3 (ix)
   2484 CE 00              7194 	adc	a,#0x00
   2486 DD 77 FD           7195 	ld	-3 (ix),a
   2489                    7196 00102$:
                           7197 ;demo.c:1070: i++;
   2489 DD 34 FA           7198 	inc	-6 (ix)
   248C 20 03              7199 	jr	NZ,00112$
   248E DD 34 FB           7200 	inc	-5 (ix)
   2491                    7201 00112$:
   2491 C3r03s24           7202 	jp	00103$
   2494                    7203 00106$:
   2494 DD F9              7204 	ld	sp,ix
   2496 DD E1              7205 	pop	ix
   2498 C9                 7206 	ret
   2499                    7207 _drawtilescreen_full_end::
                           7208 ;demo.c:1086: void tritiles() {
                           7209 ;	---------------------------------
                           7210 ; Function tritiles
                           7211 ; ---------------------------------
   2499                    7212 _tritiles_start::
   2499                    7213 _tritiles:
   2499 DD E5              7214 	push	ix
   249B DD 21 00 00        7215 	ld	ix,#0
   249F DD 39              7216 	add	ix,sp
   24A1 21 FB FF           7217 	ld	hl,#-5
   24A4 39                 7218 	add	hl,sp
   24A5 F9                 7219 	ld	sp,hl
                           7220 ;demo.c:1093: if (tri_inited == 0) {
   24A6 AF                 7221 	xor	a,a
   24A7 21r27s42           7222 	ld	hl,#_tri_inited + 0
   24AA B6                 7223 	or	a,(hl)
   24AB C2r72s25           7224 	jp	NZ,00102$
                           7225 ;demo.c:1094: tri_inited = 1;
   24AE FD 21r27s42        7226 	ld	iy,#_tri_inited
   24B2 FD 36 00 01        7227 	ld	0 (iy),#0x01
                           7228 ;demo.c:1096: cmd.size_x = 256;
   24B6 21r94s41           7229 	ld	hl, #_cmd + 8
   24B9 36 00              7230 	ld	(hl),#0x00
   24BB 23                 7231 	inc	hl
   24BC 36 01              7232 	ld	(hl),#0x01
                           7233 ;demo.c:1097: cmd.size_y = 1;
   24BE 21r96s41           7234 	ld	hl, #_cmd + 10
   24C1 36 01              7235 	ld	(hl),#0x01
   24C3 23                 7236 	inc	hl
   24C4 36 00              7237 	ld	(hl),#0x00
                           7238 ;demo.c:1098: cmd.data = 0;
                           7239 ;demo.c:1099: cmd.argument = 0x00; // from 70xY to left
   24C6 3E 00              7240 	ld	a,#0x00
   24C8 32r98s41           7241 	ld	(#_cmd + 12),a
   24CB 32r99s41           7242 	ld	(#_cmd + 13),a
                           7243 ;demo.c:1100: cmd.command = 0xd0; // vram to vram, y only
   24CE 01r9As41           7244 	ld	bc,#_cmd + 14
   24D1 3E D0              7245 	ld	a,#0xD0
   24D3 02                 7246 	ld	(bc),a
                           7247 ;demo.c:1101: cmd.source_x = 0;
   24D4 21r8Cs41           7248 	ld	hl,#_cmd
   24D7 36 00              7249 	ld	(hl),#0x00
   24D9 23                 7250 	inc	hl
   24DA 36 00              7251 	ld	(hl),#0x00
                           7252 ;demo.c:1102: cmd.source_y = 212;
   24DC 21r8Es41           7253 	ld	hl, #_cmd + 2
   24DF 36 D4              7254 	ld	(hl),#0xD4
   24E1 23                 7255 	inc	hl
   24E2 36 00              7256 	ld	(hl),#0x00
                           7257 ;demo.c:1103: cmd.dest_y = 0;
   24E4 01r92s41           7258 	ld	bc,#_cmd + 6
   24E7 69                 7259 	ld	l,c
   24E8 60                 7260 	ld	h,b
   24E9 36 00              7261 	ld	(hl),#0x00
   24EB 23                 7262 	inc	hl
   24EC 36 00              7263 	ld	(hl),#0x00
                           7264 ;demo.c:1105: for (x = 0; x < 212; x++) {
   24EE DD 36 FE 00        7265 	ld	-2 (ix),#0x00
   24F2 DD 36 FF 00        7266 	ld	-1 (ix),#0x00
   24F6                    7267 00134$:
   24F6 DD 7E FE           7268 	ld	a,-2 (ix)
   24F9 D6 D4              7269 	sub	a,#0xD4
   24FB DD 7E FF           7270 	ld	a,-1 (ix)
   24FE DE 00              7271 	sbc	a,#0x00
   2500 F2r46s25           7272 	jp	P,00137$
                           7273 ;demo.c:1106: waitVB();
   2503 76                 7274 		halt 
                           7275 ;demo.c:1107: cmd.dest_x = 0;
   2504 11r90s41           7276 	ld	de,#_cmd + 4
   2507 EB                 7277 	ex	de,hl
   2508 36 00              7278 	ld	(hl),#0x00
   250A 23                 7279 	inc	hl
   250B 36 00              7280 	ld	(hl),#0x00
                           7281 ;demo.c:1108: cmd.dest_y = 256+x;
   250D 11r92s41           7282 	ld	de,#_cmd + 6
   2510 DD 7E FE           7283 	ld	a,-2 (ix)
   2513 C6 00              7284 	add	a,#0x00
   2515 4F                 7285 	ld	c,a
   2516 DD 7E FF           7286 	ld	a,-1 (ix)
   2519 CE 01              7287 	adc	a,#0x01
   251B 47                 7288 	ld	b,a
   251C EB                 7289 	ex	de,hl
   251D 71                 7290 	ld	(hl),c
   251E 23                 7291 	inc	hl
   251F 70                 7292 	ld	(hl),b
                           7293 ;demo.c:1109: vdp_copier(&cmd);
   2520 21r8Cs41           7294 	ld	hl,#_cmd
   2523 E5                 7295 	push	hl
   2524 CDr00s00           7296 	call	_vdp_copier
   2527 F1                 7297 	pop	af
                           7298 ;demo.c:1110: cmd.dest_y = 0+x;
   2528 21r92s41           7299 	ld	hl, #_cmd + 6
   252B DD 7E FE           7300 	ld	a,-2 (ix)
   252E 77                 7301 	ld	(hl),a
   252F 23                 7302 	inc	hl
   2530 DD 7E FF           7303 	ld	a,-1 (ix)
   2533 77                 7304 	ld	(hl),a
                           7305 ;demo.c:1111: vdp_copier(&cmd);
   2534 21r8Cs41           7306 	ld	hl,#_cmd
   2537 E5                 7307 	push	hl
   2538 CDr00s00           7308 	call	_vdp_copier
   253B F1                 7309 	pop	af
                           7310 ;demo.c:1105: for (x = 0; x < 212; x++) {
   253C DD 34 FE           7311 	inc	-2 (ix)
   253F 20 03              7312 	jr	NZ,00169$
   2541 DD 34 FF           7313 	inc	-1 (ix)
   2544                    7314 00169$:
   2544 18 B0              7315 	jr	00134$
   2546                    7316 00137$:
                           7317 ;demo.c:1114: vdp_register(9,2); // 50hz,192
   2546 21 09 02           7318 	ld	hl,#0x0209
   2549 E5                 7319 	push	hl
   254A CDr00s00           7320 	call	_vdp_register
   254D F1                 7321 	pop	af
                           7322 ;demo.c:1116: vdp_load_palette(boxes_palette);
   254E 21r68s41           7323 	ld	hl,#_boxes_palette
   2551 E5                 7324 	push	hl
   2552 CDr00s00           7325 	call	_vdp_load_palette
   2555 F1                 7326 	pop	af
                           7327 ;demo.c:1118: msx2_palette(15,0,0,0);
   2556 21 00 00           7328 	ld	hl,#0x0000
   2559 E5                 7329 	push	hl
   255A 2E 0F              7330 	ld	l, #0x0F
   255C E5                 7331 	push	hl
   255D CDr00s00           7332 	call	_msx2_palette
   2560 F1                 7333 	pop	af
   2561 F1                 7334 	pop	af
                           7335 ;demo.c:1120: drawtilescreen_full(tri_center);
   2562 21r2Cs01           7336 	ld	hl,#_tri_center
   2565 E5                 7337 	push	hl
   2566 CDrDEs23           7338 	call	_drawtilescreen_full
   2569 F1                 7339 	pop	af
                           7340 ;demo.c:1121: vdp_register(2, 0x1f);
   256A 21 02 1F           7341 	ld	hl,#0x1F02
   256D E5                 7342 	push	hl
   256E CDr00s00           7343 	call	_vdp_register
   2571 F1                 7344 	pop	af
   2572                    7345 00102$:
                           7346 ;demo.c:1126: triframes++;
   2572 FD 21r3As42        7347 	ld	iy,#_triframes
   2576 FD 34 00           7348 	inc	0 (iy)
   2579 20 07              7349 	jr	NZ,00170$
   257B FD 21r3As42        7350 	ld	iy,#_triframes
   257F FD 34 01           7351 	inc	1 (iy)
   2582                    7352 00170$:
                           7353 ;demo.c:1128: if (triframes == 200) { tilei = 0; tilex = 0; tiley = 0; }
   2582 3Ar3As42           7354 	ld	a,(#_triframes+0)
   2585 D6 C8              7355 	sub	a,#0xC8
   2587 20 06              7356 	jr	NZ,00171$
   2589 3Ar3Bs42           7357 	ld	a,(#_triframes+1)
   258C B7                 7358 	or	a,a
   258D 28 02              7359 	jr	Z,00172$
   258F                    7360 00171$:
   258F 18 1E              7361 	jr	00104$
   2591                    7362 00172$:
   2591 21r28s42           7363 	ld	hl,#_tilei + 0
   2594 36 00              7364 	ld	(hl), #0x00
   2596 21r29s42           7365 	ld	hl,#_tilei + 1
   2599 36 00              7366 	ld	(hl), #0x00
   259B 21r2As42           7367 	ld	hl,#_tilex + 0
   259E 36 00              7368 	ld	(hl), #0x00
   25A0 21r2Bs42           7369 	ld	hl,#_tilex + 1
   25A3 36 00              7370 	ld	(hl), #0x00
   25A5 21r2Cs42           7371 	ld	hl,#_tiley + 0
   25A8 36 00              7372 	ld	(hl), #0x00
   25AA 21r2Ds42           7373 	ld	hl,#_tiley + 1
   25AD 36 00              7374 	ld	(hl), #0x00
   25AF                    7375 00104$:
                           7376 ;demo.c:1129: if (triframes >= 200 && triframes < 400) {
   25AF 3Ar3As42           7377 	ld	a,(#_triframes+0)
   25B2 D6 C8              7378 	sub	a,#0xC8
   25B4 3Ar3Bs42           7379 	ld	a,(#_triframes+1)
   25B7 DE 00              7380 	sbc	a,#0x00
   25B9 FArD1s25           7381 	jp	M,00106$
   25BC 3Ar3As42           7382 	ld	a,(#_triframes+0)
   25BF D6 90              7383 	sub	a,#0x90
   25C1 3Ar3Bs42           7384 	ld	a,(#_triframes+1)
   25C4 DE 01              7385 	sbc	a,#0x01
   25C6 F2rD1s25           7386 	jp	P,00106$
                           7387 ;demo.c:1130: drawtilescreen(tri_up);
   25C9 21rECs01           7388 	ld	hl,#_tri_up
   25CC E5                 7389 	push	hl
   25CD CDrF4s22           7390 	call	_drawtilescreen
   25D0 F1                 7391 	pop	af
   25D1                    7392 00106$:
                           7393 ;demo.c:1133: if (triframes == 400) { tilei = 0; tilex = 0; tiley = 0; }
   25D1 3Ar3As42           7394 	ld	a,(#_triframes+0)
   25D4 D6 90              7395 	sub	a,#0x90
   25D6 20 07              7396 	jr	NZ,00173$
   25D8 3Ar3Bs42           7397 	ld	a,(#_triframes+1)
   25DB D6 01              7398 	sub	a,#0x01
   25DD 28 02              7399 	jr	Z,00174$
   25DF                    7400 00173$:
   25DF 18 1E              7401 	jr	00109$
   25E1                    7402 00174$:
   25E1 21r28s42           7403 	ld	hl,#_tilei + 0
   25E4 36 00              7404 	ld	(hl), #0x00
   25E6 21r29s42           7405 	ld	hl,#_tilei + 1
   25E9 36 00              7406 	ld	(hl), #0x00
   25EB 21r2As42           7407 	ld	hl,#_tilex + 0
   25EE 36 00              7408 	ld	(hl), #0x00
   25F0 21r2Bs42           7409 	ld	hl,#_tilex + 1
   25F3 36 00              7410 	ld	(hl), #0x00
   25F5 21r2Cs42           7411 	ld	hl,#_tiley + 0
   25F8 36 00              7412 	ld	(hl), #0x00
   25FA 21r2Ds42           7413 	ld	hl,#_tiley + 1
   25FD 36 00              7414 	ld	(hl), #0x00
   25FF                    7415 00109$:
                           7416 ;demo.c:1134: if (triframes >= 400 && triframes < 600) {
   25FF 3Ar3As42           7417 	ld	a,(#_triframes+0)
   2602 D6 90              7418 	sub	a,#0x90
   2604 3Ar3Bs42           7419 	ld	a,(#_triframes+1)
   2607 DE 01              7420 	sbc	a,#0x01
   2609 FAr21s26           7421 	jp	M,00111$
   260C 3Ar3As42           7422 	ld	a,(#_triframes+0)
   260F D6 58              7423 	sub	a,#0x58
   2611 3Ar3Bs42           7424 	ld	a,(#_triframes+1)
   2614 DE 02              7425 	sbc	a,#0x02
   2616 F2r21s26           7426 	jp	P,00111$
                           7427 ;demo.c:1135: drawtilescreen(tri_dia);
   2619 21rACs02           7428 	ld	hl,#_tri_dia
   261C E5                 7429 	push	hl
   261D CDrF4s22           7430 	call	_drawtilescreen
   2620 F1                 7431 	pop	af
   2621                    7432 00111$:
                           7433 ;demo.c:1138: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2621 3Ar3As42           7434 	ld	a,(#_triframes+0)
   2624 D6 58              7435 	sub	a,#0x58
   2626 20 07              7436 	jr	NZ,00175$
   2628 3Ar3Bs42           7437 	ld	a,(#_triframes+1)
   262B D6 02              7438 	sub	a,#0x02
   262D 28 02              7439 	jr	Z,00176$
   262F                    7440 00175$:
   262F 18 1E              7441 	jr	00114$
   2631                    7442 00176$:
   2631 21r28s42           7443 	ld	hl,#_tilei + 0
   2634 36 00              7444 	ld	(hl), #0x00
   2636 21r29s42           7445 	ld	hl,#_tilei + 1
   2639 36 00              7446 	ld	(hl), #0x00
   263B 21r2As42           7447 	ld	hl,#_tilex + 0
   263E 36 00              7448 	ld	(hl), #0x00
   2640 21r2Bs42           7449 	ld	hl,#_tilex + 1
   2643 36 00              7450 	ld	(hl), #0x00
   2645 21r2Cs42           7451 	ld	hl,#_tiley + 0
   2648 36 00              7452 	ld	(hl), #0x00
   264A 21r2Ds42           7453 	ld	hl,#_tiley + 1
   264D 36 00              7454 	ld	(hl), #0x00
   264F                    7455 00114$:
                           7456 ;demo.c:1139: if (triframes >= 600 && triframes < 700) {
   264F 3Ar3As42           7457 	ld	a,(#_triframes+0)
   2652 D6 58              7458 	sub	a,#0x58
   2654 3Ar3Bs42           7459 	ld	a,(#_triframes+1)
   2657 DE 02              7460 	sbc	a,#0x02
   2659 FAr71s26           7461 	jp	M,00116$
   265C 3Ar3As42           7462 	ld	a,(#_triframes+0)
   265F D6 BC              7463 	sub	a,#0xBC
   2661 3Ar3Bs42           7464 	ld	a,(#_triframes+1)
   2664 DE 02              7465 	sbc	a,#0x02
   2666 F2r71s26           7466 	jp	P,00116$
                           7467 ;demo.c:1140: drawtilescreen(tri_side1);
   2669 21r6Cs03           7468 	ld	hl,#_tri_side1
   266C E5                 7469 	push	hl
   266D CDrF4s22           7470 	call	_drawtilescreen
   2670 F1                 7471 	pop	af
   2671                    7472 00116$:
                           7473 ;demo.c:1143: if (triframes == 800) { tilei = 0; tilex = 0; tiley = 0; }
   2671 3Ar3As42           7474 	ld	a,(#_triframes+0)
   2674 D6 20              7475 	sub	a,#0x20
   2676 20 07              7476 	jr	NZ,00177$
   2678 3Ar3Bs42           7477 	ld	a,(#_triframes+1)
   267B D6 03              7478 	sub	a,#0x03
   267D 28 02              7479 	jr	Z,00178$
   267F                    7480 00177$:
   267F 18 1E              7481 	jr	00119$
   2681                    7482 00178$:
   2681 21r28s42           7483 	ld	hl,#_tilei + 0
   2684 36 00              7484 	ld	(hl), #0x00
   2686 21r29s42           7485 	ld	hl,#_tilei + 1
   2689 36 00              7486 	ld	(hl), #0x00
   268B 21r2As42           7487 	ld	hl,#_tilex + 0
   268E 36 00              7488 	ld	(hl), #0x00
   2690 21r2Bs42           7489 	ld	hl,#_tilex + 1
   2693 36 00              7490 	ld	(hl), #0x00
   2695 21r2Cs42           7491 	ld	hl,#_tiley + 0
   2698 36 00              7492 	ld	(hl), #0x00
   269A 21r2Ds42           7493 	ld	hl,#_tiley + 1
   269D 36 00              7494 	ld	(hl), #0x00
   269F                    7495 00119$:
                           7496 ;demo.c:1144: if (triframes >= 800 && triframes < 1000) {
   269F 3Ar3As42           7497 	ld	a,(#_triframes+0)
   26A2 D6 20              7498 	sub	a,#0x20
   26A4 3Ar3Bs42           7499 	ld	a,(#_triframes+1)
   26A7 DE 03              7500 	sbc	a,#0x03
   26A9 FArC1s26           7501 	jp	M,00121$
   26AC 3Ar3As42           7502 	ld	a,(#_triframes+0)
   26AF D6 E8              7503 	sub	a,#0xE8
   26B1 3Ar3Bs42           7504 	ld	a,(#_triframes+1)
   26B4 DE 03              7505 	sbc	a,#0x03
   26B6 F2rC1s26           7506 	jp	P,00121$
                           7507 ;demo.c:1145: drawtilescreen(tri_side2);
   26B9 21r2Cs04           7508 	ld	hl,#_tri_side2
   26BC E5                 7509 	push	hl
   26BD CDrF4s22           7510 	call	_drawtilescreen
   26C0 F1                 7511 	pop	af
   26C1                    7512 00121$:
                           7513 ;demo.c:1148: if (triframes == 1000) { tilei = 0; tilex = 0; tiley = 0; }
   26C1 3Ar3As42           7514 	ld	a,(#_triframes+0)
   26C4 D6 E8              7515 	sub	a,#0xE8
   26C6 20 07              7516 	jr	NZ,00179$
   26C8 3Ar3Bs42           7517 	ld	a,(#_triframes+1)
   26CB D6 03              7518 	sub	a,#0x03
   26CD 28 02              7519 	jr	Z,00180$
   26CF                    7520 00179$:
   26CF 18 1E              7521 	jr	00124$
   26D1                    7522 00180$:
   26D1 21r28s42           7523 	ld	hl,#_tilei + 0
   26D4 36 00              7524 	ld	(hl), #0x00
   26D6 21r29s42           7525 	ld	hl,#_tilei + 1
   26D9 36 00              7526 	ld	(hl), #0x00
   26DB 21r2As42           7527 	ld	hl,#_tilex + 0
   26DE 36 00              7528 	ld	(hl), #0x00
   26E0 21r2Bs42           7529 	ld	hl,#_tilex + 1
   26E3 36 00              7530 	ld	(hl), #0x00
   26E5 21r2Cs42           7531 	ld	hl,#_tiley + 0
   26E8 36 00              7532 	ld	(hl), #0x00
   26EA 21r2Ds42           7533 	ld	hl,#_tiley + 1
   26ED 36 00              7534 	ld	(hl), #0x00
   26EF                    7535 00124$:
                           7536 ;demo.c:1149: if (triframes >= 1000 && triframes < 1200) {
   26EF 3Ar3As42           7537 	ld	a,(#_triframes+0)
   26F2 D6 E8              7538 	sub	a,#0xE8
   26F4 3Ar3Bs42           7539 	ld	a,(#_triframes+1)
   26F7 DE 03              7540 	sbc	a,#0x03
   26F9 FAr11s27           7541 	jp	M,00126$
   26FC 3Ar3As42           7542 	ld	a,(#_triframes+0)
   26FF D6 B0              7543 	sub	a,#0xB0
   2701 3Ar3Bs42           7544 	ld	a,(#_triframes+1)
   2704 DE 04              7545 	sbc	a,#0x04
   2706 F2r11s27           7546 	jp	P,00126$
                           7547 ;demo.c:1150: drawtilescreen(tri_center);
   2709 21r2Cs01           7548 	ld	hl,#_tri_center
   270C E5                 7549 	push	hl
   270D CDrF4s22           7550 	call	_drawtilescreen
   2710 F1                 7551 	pop	af
   2711                    7552 00126$:
                           7553 ;demo.c:1153: if (triframes > 1200) triframes = 199;
   2711 3E B0              7554 	ld	a,#0xB0
   2713 FD 21r3As42        7555 	ld	iy,#_triframes
   2717 FD 96 00           7556 	sub	a,0 (iy)
   271A 3E 04              7557 	ld	a,#0x04
   271C FD 21r3As42        7558 	ld	iy,#_triframes
   2720 FD 9E 01           7559 	sbc	a,1 (iy)
   2723 F2r30s27           7560 	jp	P,00129$
   2726 21r3As42           7561 	ld	hl,#_triframes + 0
   2729 36 C7              7562 	ld	(hl), #0xC7
   272B 21r3Bs42           7563 	ld	hl,#_triframes + 1
   272E 36 00              7564 	ld	(hl), #0x00
   2730                    7565 00129$:
                           7566 ;demo.c:1156: msx2_palette(2,0,0,0);
   2730 21 00 00           7567 	ld	hl,#0x0000
   2733 E5                 7568 	push	hl
   2734 2E 02              7569 	ld	l, #0x02
   2736 E5                 7570 	push	hl
   2737 CDr00s00           7571 	call	_msx2_palette
   273A F1                 7572 	pop	af
   273B F1                 7573 	pop	af
                           7574 ;demo.c:1157: msx2_palette(11,0,0,0);
   273C 21 00 00           7575 	ld	hl,#0x0000
   273F E5                 7576 	push	hl
   2740 2E 0B              7577 	ld	l, #0x0B
   2742 E5                 7578 	push	hl
   2743 CDr00s00           7579 	call	_msx2_palette
   2746 F1                 7580 	pop	af
   2747 F1                 7581 	pop	af
                           7582 ;demo.c:1160: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2748 21r31s42           7583 	ld	hl,#_tripal + 2
   274B 4E                 7584 	ld	c,(hl)
   274C 11r30s42           7585 	ld	de,#_tripal + 1
   274F 1A                 7586 	ld	a,(de)
   2750 47                 7587 	ld	b,a
   2751 21r2Fs42           7588 	ld	hl,#_tripal
   2754 5E                 7589 	ld	e,(hl)
   2755 79                 7590 	ld	a,c
   2756 F5                 7591 	push	af
   2757 33                 7592 	inc	sp
   2758 C5                 7593 	push	bc
   2759 33                 7594 	inc	sp
   275A 53                 7595 	ld	d,e
   275B 1E 03              7596 	ld	e,#0x03
   275D D5                 7597 	push	de
   275E CDr00s00           7598 	call	_msx2_palette
   2761 F1                 7599 	pop	af
   2762 F1                 7600 	pop	af
                           7601 ;demo.c:1161: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2763 21r34s42           7602 	ld	hl,#_tripal + 5
   2766 4E                 7603 	ld	c,(hl)
   2767 11r33s42           7604 	ld	de,#_tripal + 4
   276A 1A                 7605 	ld	a,(de)
   276B 47                 7606 	ld	b,a
   276C 21r32s42           7607 	ld	hl,#_tripal + 3
   276F 5E                 7608 	ld	e,(hl)
   2770 79                 7609 	ld	a,c
   2771 F5                 7610 	push	af
   2772 33                 7611 	inc	sp
   2773 C5                 7612 	push	bc
   2774 33                 7613 	inc	sp
   2775 53                 7614 	ld	d,e
   2776 1E 0E              7615 	ld	e,#0x0E
   2778 D5                 7616 	push	de
   2779 CDr00s00           7617 	call	_msx2_palette
   277C F1                 7618 	pop	af
   277D F1                 7619 	pop	af
                           7620 ;demo.c:1162: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   277E 21r37s42           7621 	ld	hl,#_tripal + 8
   2781 4E                 7622 	ld	c,(hl)
   2782 11r36s42           7623 	ld	de,#_tripal + 7
   2785 1A                 7624 	ld	a,(de)
   2786 47                 7625 	ld	b,a
   2787 21r35s42           7626 	ld	hl,#_tripal + 6
   278A 5E                 7627 	ld	e,(hl)
   278B 79                 7628 	ld	a,c
   278C F5                 7629 	push	af
   278D 33                 7630 	inc	sp
   278E C5                 7631 	push	bc
   278F 33                 7632 	inc	sp
   2790 53                 7633 	ld	d,e
   2791 1E 06              7634 	ld	e,#0x06
   2793 D5                 7635 	push	de
   2794 CDr00s00           7636 	call	_msx2_palette
   2797 F1                 7637 	pop	af
   2798 F1                 7638 	pop	af
                           7639 ;demo.c:1165: tripaltick++;
   2799 FD 21r38s42        7640 	ld	iy,#_tripaltick
   279D FD 34 00           7641 	inc	0 (iy)
                           7642 ;demo.c:1166: if (tripaltick > 6) {
   27A0 3E 06              7643 	ld	a,#0x06
   27A2 FD 21r38s42        7644 	ld	iy,#_tripaltick
   27A6 FD 96 00           7645 	sub	a,0 (iy)
   27A9 D2r2Es28           7646 	jp	NC,00142$
                           7647 ;demo.c:1167: tripaltick2++;
   27AC FD 21r39s42        7648 	ld	iy,#_tripaltick2
   27B0 FD 34 00           7649 	inc	0 (iy)
                           7650 ;demo.c:1168: if (tripaltick2 > 6) tripaltick2 = 0;
   27B3 3E 06              7651 	ld	a,#0x06
   27B5 FD 21r39s42        7652 	ld	iy,#_tripaltick2
   27B9 FD 96 00           7653 	sub	a,0 (iy)
   27BC 30 05              7654 	jr	NC,00131$
   27BE 21r39s42           7655 	ld	hl,#_tripaltick2 + 0
   27C1 36 00              7656 	ld	(hl), #0x00
   27C3                    7657 00131$:
                           7658 ;demo.c:1170: r = tripal[0];
   27C3 21r2Fs42           7659 	ld	hl,#_tripal
   27C6 4E                 7660 	ld	c,(hl)
   27C7 DD 71 FD           7661 	ld	-3 (ix),c
                           7662 ;demo.c:1171: g = tripal[1];
   27CA 11r30s42           7663 	ld	de,#_tripal + 1
   27CD 1A                 7664 	ld	a,(de)
   27CE DD 77 FC           7665 	ld	-4 (ix),a
                           7666 ;demo.c:1172: b = tripal[2];
   27D1 21r31s42           7667 	ld	hl,#_tripal + 2
   27D4 5E                 7668 	ld	e,(hl)
   27D5 DD 73 FB           7669 	ld	-5 (ix),e
                           7670 ;demo.c:1174: for (x = 0; x < 6; x++) {
   27D8 DD 36 FE 00        7671 	ld	-2 (ix),#0x00
   27DC DD 36 FF 00        7672 	ld	-1 (ix),#0x00
   27E0                    7673 00138$:
   27E0 DD 7E FE           7674 	ld	a,-2 (ix)
   27E3 D6 06              7675 	sub	a,#0x06
   27E5 DD 7E FF           7676 	ld	a,-1 (ix)
   27E8 DE 00              7677 	sbc	a,#0x00
   27EA F2r14s28           7678 	jp	P,00141$
                           7679 ;demo.c:1175: tripal[x] = tripal[x+3];
   27ED 3Er2F              7680 	ld	a,#<_tripal
   27EF DD 86 FE           7681 	add	a,-2 (ix)
   27F2 4F                 7682 	ld	c,a
   27F3 3Es42              7683 	ld	a,#>_tripal
   27F5 DD 8E FF           7684 	adc	a,-1 (ix)
   27F8 47                 7685 	ld	b,a
   27F9 DD 5E FE           7686 	ld	e,-2 (ix)
   27FC 1C                 7687 	inc	e
   27FD 1C                 7688 	inc	e
   27FE 1C                 7689 	inc	e
   27FF 3Er2F              7690 	ld	a,#<_tripal
   2801 83                 7691 	add	a,e
   2802 5F                 7692 	ld	e,a
   2803 3Es42              7693 	ld	a,#>_tripal
   2805 CE 00              7694 	adc	a,#0x00
   2807 57                 7695 	ld	d,a
   2808 1A                 7696 	ld	a,(de)
   2809 02                 7697 	ld	(bc),a
                           7698 ;demo.c:1174: for (x = 0; x < 6; x++) {
   280A DD 34 FE           7699 	inc	-2 (ix)
   280D 20 03              7700 	jr	NZ,00181$
   280F DD 34 FF           7701 	inc	-1 (ix)
   2812                    7702 00181$:
   2812 18 CC              7703 	jr	00138$
   2814                    7704 00141$:
                           7705 ;demo.c:1178: tripal[6] = r;
   2814 01r35s42           7706 	ld	bc,#_tripal + 6
   2817 DD 7E FD           7707 	ld	a,-3 (ix)
   281A 02                 7708 	ld	(bc),a
                           7709 ;demo.c:1179: tripal[7] = g;
   281B 01r36s42           7710 	ld	bc,#_tripal + 7
   281E DD 7E FC           7711 	ld	a,-4 (ix)
   2821 02                 7712 	ld	(bc),a
                           7713 ;demo.c:1180: tripal[8] = b;
   2822 01r37s42           7714 	ld	bc,#_tripal + 8
   2825 DD 7E FB           7715 	ld	a,-5 (ix)
   2828 02                 7716 	ld	(bc),a
                           7717 ;demo.c:1181: tripaltick = 0;
   2829 21r38s42           7718 	ld	hl,#_tripaltick + 0
   282C 36 00              7719 	ld	(hl), #0x00
   282E                    7720 00142$:
   282E DD F9              7721 	ld	sp,ix
   2830 DD E1              7722 	pop	ix
   2832 C9                 7723 	ret
   2833                    7724 _tritiles_end::
                           7725 ;demo.c:1186: int abs (int n) {
                           7726 ;	---------------------------------
                           7727 ; Function abs
                           7728 ; ---------------------------------
   2833                    7729 _abs_start::
   2833                    7730 _abs:
   2833 DD E5              7731 	push	ix
   2835 DD 21 00 00        7732 	ld	ix,#0
   2839 DD 39              7733 	add	ix,sp
   283B 21 FA FF           7734 	ld	hl,#-6
   283E 39                 7735 	add	hl,sp
   283F F9                 7736 	ld	sp,hl
                           7737 ;demo.c:1187: const int ret[2] = { n, -n };
   2840 21 02 00           7738 	ld	hl,#0x0002
   2843 39                 7739 	add	hl,sp
   2844 4D                 7740 	ld	c,l
   2845 44                 7741 	ld	b,h
   2846 DD 7E 04           7742 	ld	a,4 (ix)
   2849 77                 7743 	ld	(hl),a
   284A 23                 7744 	inc	hl
   284B DD 7E 05           7745 	ld	a,5 (ix)
   284E 77                 7746 	ld	(hl),a
   284F 21 02 00           7747 	ld	hl,#0x0002
   2852 09                 7748 	add	hl,bc
   2853 DD 75 FA           7749 	ld	-6 (ix),l
   2856 DD 74 FB           7750 	ld	-5 (ix),h
   2859 AF                 7751 	xor	a,a
   285A DD 9E 04           7752 	sbc	a,4 (ix)
   285D 5F                 7753 	ld	e,a
   285E 3E 00              7754 	ld	a,#0x00
   2860 DD 9E 05           7755 	sbc	a,5 (ix)
   2863 57                 7756 	ld	d,a
   2864 DD 6E FA           7757 	ld	l,-6 (ix)
   2867 DD 66 FB           7758 	ld	h,-5 (ix)
   286A 73                 7759 	ld	(hl),e
   286B 23                 7760 	inc	hl
   286C 72                 7761 	ld	(hl),d
                           7762 ;demo.c:1188: return ret [n<0];
   286D DD 7E 05           7763 	ld	a,5 (ix)
   2870 07                 7764 	rlca
   2871 E6 01              7765 	and	a,#0x01
   2873 5F                 7766 	ld	e,a
   2874 CB 23              7767 	sla	e
   2876 79                 7768 	ld	a,c
   2877 83                 7769 	add	a,e
   2878 6F                 7770 	ld	l,a
   2879 78                 7771 	ld	a,b
   287A CE 00              7772 	adc	a,#0x00
   287C 67                 7773 	ld	h,a
   287D 5E                 7774 	ld	e,(hl)
   287E 23                 7775 	inc	hl
   287F 4E                 7776 	ld	c,(hl)
   2880 6B                 7777 	ld	l,e
   2881 61                 7778 	ld	h,c
   2882 DD F9              7779 	ld	sp,ix
   2884 DD E1              7780 	pop	ix
   2886 C9                 7781 	ret
   2887                    7782 _abs_end::
                           7783 ;demo.c:1194: void logoeffu() {
                           7784 ;	---------------------------------
                           7785 ; Function logoeffu
                           7786 ; ---------------------------------
   2887                    7787 _logoeffu_start::
   2887                    7788 _logoeffu:
   2887 DD E5              7789 	push	ix
   2889 DD 21 00 00        7790 	ld	ix,#0
   288D DD 39              7791 	add	ix,sp
   288F F5                 7792 	push	af
   2890 F5                 7793 	push	af
                           7794 ;demo.c:1198: fadein();
   2891 CDr27s09           7795 	call	_fadein
                           7796 ;demo.c:1200: v = abs(sintabx[(vbicount) & 255]>>4);
   2894 21r88s41           7797 	ld	hl,#_vbicount + 0
   2897 4E                 7798 	ld	c,(hl)
   2898 06 00              7799 	ld	b,#0x00
   289A 21r2Cs00           7800 	ld	hl,#_sintabx
   289D 09                 7801 	add	hl,bc
   289E 7E                 7802 	ld	a,(hl)
   289F 4F                 7803 	ld	c,a
   28A0 CB 39              7804 	srl	c
   28A2 CB 39              7805 	srl	c
   28A4 CB 39              7806 	srl	c
   28A6 CB 39              7807 	srl	c
   28A8 06 00              7808 	ld	b,#0x00
   28AA C5                 7809 	push	bc
   28AB CDr33s28           7810 	call	_abs
   28AE F1                 7811 	pop	af
   28AF 44                 7812 	ld	b,h
   28B0 4D                 7813 	ld	c,l
   28B1 DD 71 FC           7814 	ld	-4 (ix),c
   28B4 DD 70 FD           7815 	ld	-3 (ix),b
                           7816 ;demo.c:1202: for (y = 0; y < 116; y+=2) {
   28B7 DD 36 FE 00        7817 	ld	-2 (ix),#0x00
   28BB DD 36 FF 00        7818 	ld	-1 (ix),#0x00
   28BF                    7819 00108$:
   28BF DD 7E FE           7820 	ld	a,-2 (ix)
   28C2 D6 74              7821 	sub	a,#0x74
   28C4 DD 7E FF           7822 	ld	a,-1 (ix)
   28C7 DE 00              7823 	sbc	a,#0x00
   28C9 F2r94s29           7824 	jp	P,00111$
                           7825 ;demo.c:1203: cmd.size_x = 108;
   28CC 11r94s41           7826 	ld	de,#_cmd + 8
   28CF EB                 7827 	ex	de,hl
   28D0 36 6C              7828 	ld	(hl),#0x6C
   28D2 23                 7829 	inc	hl
   28D3 36 00              7830 	ld	(hl),#0x00
                           7831 ;demo.c:1204: cmd.size_y = 2;
   28D5 11r96s41           7832 	ld	de,#_cmd + 10
   28D8 EB                 7833 	ex	de,hl
   28D9 36 02              7834 	ld	(hl),#0x02
   28DB 23                 7835 	inc	hl
   28DC 36 00              7836 	ld	(hl),#0x00
                           7837 ;demo.c:1205: cmd.data = 0;
   28DE 11r98s41           7838 	ld	de,#_cmd + 12
   28E1 3E 00              7839 	ld	a,#0x00
   28E3 12                 7840 	ld	(de),a
                           7841 ;demo.c:1206: cmd.argument = 0x00;
   28E4 11r99s41           7842 	ld	de,#_cmd + 13
   28E7 3E 00              7843 	ld	a,#0x00
   28E9 12                 7844 	ld	(de),a
                           7845 ;demo.c:1207: cmd.command = 0xd0; 
   28EA 11r9As41           7846 	ld	de,#_cmd + 14
   28ED 3E D0              7847 	ld	a,#0xD0
   28EF 12                 7848 	ld	(de),a
                           7849 ;demo.c:1208: cmd.source_x = 74;
   28F0 21r8Cs41           7850 	ld	hl,#_cmd
   28F3 36 4A              7851 	ld	(hl),#0x4A
   28F5 23                 7852 	inc	hl
   28F6 36 00              7853 	ld	(hl),#0x00
                           7854 ;demo.c:1209: cmd.source_y = 256+y;
   28F8 11r8Es41           7855 	ld	de,#_cmd + 2
   28FB DD 7E FE           7856 	ld	a,-2 (ix)
   28FE C6 00              7857 	add	a,#0x00
   2900 4F                 7858 	ld	c,a
   2901 DD 7E FF           7859 	ld	a,-1 (ix)
   2904 CE 01              7860 	adc	a,#0x01
   2906 47                 7861 	ld	b,a
   2907 6B                 7862 	ld	l,e
   2908 62                 7863 	ld	h,d
   2909 71                 7864 	ld	(hl),c
   290A 23                 7865 	inc	hl
   290B 70                 7866 	ld	(hl),b
                           7867 ;demo.c:1210: v+=y;
   290C DD 7E FC           7868 	ld	a,-4 (ix)
   290F DD 86 FE           7869 	add	a,-2 (ix)
   2912 DD 77 FC           7870 	ld	-4 (ix),a
   2915 DD 7E FD           7871 	ld	a,-3 (ix)
   2918 DD 8E FF           7872 	adc	a,-1 (ix)
   291B DD 77 FD           7873 	ld	-3 (ix),a
                           7874 ;demo.c:1211: v -= powa;
   291E 21r3Es42           7875 	ld	hl,#_powa
   2921 DD 7E FC           7876 	ld	a,-4 (ix)
   2924 96                 7877 	sub	a,(hl)
   2925 DD 77 FC           7878 	ld	-4 (ix),a
   2928 DD 7E FD           7879 	ld	a,-3 (ix)
   292B 23                 7880 	inc	hl
   292C 9E                 7881 	sbc	a,(hl)
                           7882 ;demo.c:1212: if (v<0) v = 0;
   292D DD 77 FD           7883 	ld	-3 (ix),a
   2930 CB 7F              7884 	bit	7,a
   2932 28 08              7885 	jr	Z,00102$
   2934 DD 36 FC 00        7886 	ld	-4 (ix),#0x00
   2938 DD 36 FD 00        7887 	ld	-3 (ix),#0x00
   293C                    7888 00102$:
                           7889 ;demo.c:1213: if (v>150) v = 150;
   293C 3E 96              7890 	ld	a,#0x96
   293E DD 96 FC           7891 	sub	a,-4 (ix)
   2941 3E 00              7892 	ld	a,#0x00
   2943 DD 9E FD           7893 	sbc	a,-3 (ix)
   2946 F2r51s29           7894 	jp	P,00104$
   2949 DD 36 FC 96        7895 	ld	-4 (ix),#0x96
   294D DD 36 FD 00        7896 	ld	-3 (ix),#0x00
   2951                    7897 00104$:
                           7898 ;demo.c:1214: cmd.dest_x = 74+v;
   2951 01r90s41           7899 	ld	bc,#_cmd + 4
   2954 DD 7E FC           7900 	ld	a,-4 (ix)
   2957 C6 4A              7901 	add	a,#0x4A
   2959 5F                 7902 	ld	e,a
   295A DD 7E FD           7903 	ld	a,-3 (ix)
   295D CE 00              7904 	adc	a,#0x00
   295F 57                 7905 	ld	d,a
   2960 69                 7906 	ld	l,c
   2961 60                 7907 	ld	h,b
   2962 73                 7908 	ld	(hl),e
   2963 23                 7909 	inc	hl
   2964 72                 7910 	ld	(hl),d
                           7911 ;demo.c:1215: cmd.dest_y = 50+y+1;
   2965 01r92s41           7912 	ld	bc,#_cmd + 6
   2968 DD 7E FE           7913 	ld	a,-2 (ix)
   296B C6 33              7914 	add	a,#0x33
   296D 5F                 7915 	ld	e,a
   296E DD 7E FF           7916 	ld	a,-1 (ix)
   2971 CE 00              7917 	adc	a,#0x00
   2973 57                 7918 	ld	d,a
   2974 69                 7919 	ld	l,c
   2975 60                 7920 	ld	h,b
   2976 73                 7921 	ld	(hl),e
   2977 23                 7922 	inc	hl
   2978 72                 7923 	ld	(hl),d
                           7924 ;demo.c:1216: vdp_copier(&cmd);
   2979 21r8Cs41           7925 	ld	hl,#_cmd
   297C E5                 7926 	push	hl
   297D CDr00s00           7927 	call	_vdp_copier
   2980 F1                 7928 	pop	af
                           7929 ;demo.c:1202: for (y = 0; y < 116; y+=2) {
   2981 DD 7E FE           7930 	ld	a,-2 (ix)
   2984 C6 02              7931 	add	a,#0x02
   2986 DD 77 FE           7932 	ld	-2 (ix),a
   2989 DD 7E FF           7933 	ld	a,-1 (ix)
   298C CE 00              7934 	adc	a,#0x00
   298E DD 77 FF           7935 	ld	-1 (ix),a
   2991 C3rBFs28           7936 	jp	00108$
   2994                    7937 00111$:
                           7938 ;demo.c:1219: if (vbicount > 84 && onceclear > 182) {
   2994 3E 54              7939 	ld	a,#0x54
   2996 FD 21r88s41        7940 	ld	iy,#_vbicount
   299A FD 96 00           7941 	sub	a,0 (iy)
   299D 3E 00              7942 	ld	a,#0x00
   299F FD 21r88s41        7943 	ld	iy,#_vbicount
   29A3 FD 9E 01           7944 	sbc	a,1 (iy)
   29A6 F2r08s2A           7945 	jp	P,00106$
   29A9 3E B6              7946 	ld	a,#0xB6
   29AB FD 21r40s42        7947 	ld	iy,#_onceclear
   29AF FD 96 00           7948 	sub	a,0 (iy)
   29B2 D2r08s2A           7949 	jp	NC,00106$
                           7950 ;demo.c:1220: cmd.size_x = 4;
   29B5 21r94s41           7951 	ld	hl, #_cmd + 8
   29B8 36 04              7952 	ld	(hl),#0x04
   29BA 23                 7953 	inc	hl
   29BB 36 00              7954 	ld	(hl),#0x00
                           7955 ;demo.c:1221: cmd.size_y = 116;
   29BD 21r96s41           7956 	ld	hl, #_cmd + 10
   29C0 36 74              7957 	ld	(hl),#0x74
   29C2 23                 7958 	inc	hl
   29C3 36 00              7959 	ld	(hl),#0x00
                           7960 ;demo.c:1222: cmd.data = 0;
                           7961 ;demo.c:1223: cmd.argument = 0x00;
   29C5 3E 00              7962 	ld	a,#0x00
   29C7 32r98s41           7963 	ld	(#_cmd + 12),a
   29CA 32r99s41           7964 	ld	(#_cmd + 13),a
                           7965 ;demo.c:1224: cmd.command = 0xd0; 
   29CD 01r9As41           7966 	ld	bc,#_cmd + 14
   29D0 3E D0              7967 	ld	a,#0xD0
   29D2 02                 7968 	ld	(bc),a
                           7969 ;demo.c:1225: cmd.source_x = 20;
   29D3 21r8Cs41           7970 	ld	hl,#_cmd
   29D6 36 14              7971 	ld	(hl),#0x14
   29D8 23                 7972 	inc	hl
   29D9 36 00              7973 	ld	(hl),#0x00
                           7974 ;demo.c:1226: cmd.source_y = 0;
   29DB 21r8Es41           7975 	ld	hl, #_cmd + 2
   29DE 36 00              7976 	ld	(hl),#0x00
   29E0 23                 7977 	inc	hl
   29E1 36 00              7978 	ld	(hl),#0x00
                           7979 ;demo.c:1227: cmd.dest_x = onceclear;
   29E3 01r90s41           7980 	ld	bc,#_cmd + 4
   29E6 21r40s42           7981 	ld	hl,#_onceclear + 0
   29E9 5E                 7982 	ld	e,(hl)
   29EA 16 00              7983 	ld	d,#0x00
   29EC 69                 7984 	ld	l,c
   29ED 60                 7985 	ld	h,b
   29EE 73                 7986 	ld	(hl),e
   29EF 23                 7987 	inc	hl
   29F0 72                 7988 	ld	(hl),d
                           7989 ;demo.c:1228: cmd.dest_y = 68;
   29F1 21r92s41           7990 	ld	hl, #_cmd + 6
   29F4 36 44              7991 	ld	(hl),#0x44
   29F6 23                 7992 	inc	hl
   29F7 36 00              7993 	ld	(hl),#0x00
                           7994 ;demo.c:1229: vdp_copier(&cmd);
   29F9 21r8Cs41           7995 	ld	hl,#_cmd
   29FC E5                 7996 	push	hl
   29FD CDr00s00           7997 	call	_vdp_copier
   2A00 F1                 7998 	pop	af
                           7999 ;demo.c:1230: onceclear-=4;
   2A01 21r40s42           8000 	ld	hl,#_onceclear
   2A04 7E                 8001 	ld	a,(hl)
   2A05 C6 FC              8002 	add	a,#0xFC
   2A07 77                 8003 	ld	(hl),a
   2A08                    8004 00106$:
                           8005 ;demo.c:1234: powa+=2;
   2A08 21r3Es42           8006 	ld	hl,#_powa
   2A0B 7E                 8007 	ld	a,(hl)
   2A0C C6 02              8008 	add	a,#0x02
   2A0E 23                 8009 	inc	hl
   2A0F 2B                 8010 	dec	hl
   2A10 C5                 8011 	push	bc
   2A11 4F                 8012 	ld	c, a
   2A12 23                 8013 	inc	hl
   2A13 7E                 8014 	ld	a, (hl)
   2A14 47                 8015 	ld	b, a
   2A15 79                 8016 	ld	a, c
   2A16 2B                 8017 	dec	hl
   2A17 77                 8018 	ld	(hl), a
   2A18 78                 8019 	ld	a, b
   2A19 C1                 8020 	pop	bc
   2A1A CE 00              8021 	adc	a,#0x00
   2A1C 23                 8022 	inc	hl
   2A1D 77                 8023 	ld	(hl),a
                           8024 ;demo.c:1235: powatick = 0;
   2A1E 21r3Cs42           8025 	ld	hl,#_powatick + 0
   2A21 36 00              8026 	ld	(hl), #0x00
   2A23 21r3Ds42           8027 	ld	hl,#_powatick + 1
   2A26 36 00              8028 	ld	(hl), #0x00
   2A28 DD F9              8029 	ld	sp,ix
   2A2A DD E1              8030 	pop	ix
   2A2C C9                 8031 	ret
   2A2D                    8032 _logoeffu_end::
                           8033 ;demo.c:1240: void points() {
                           8034 ;	---------------------------------
                           8035 ; Function points
                           8036 ; ---------------------------------
   2A2D                    8037 _points_start::
   2A2D                    8038 _points:
   2A2D DD E5              8039 	push	ix
   2A2F DD 21 00 00        8040 	ld	ix,#0
   2A33 DD 39              8041 	add	ix,sp
   2A35 F5                 8042 	push	af
   2A36 3B                 8043 	dec	sp
                           8044 ;demo.c:1244: if (initpoints == 0) {
   2A37 AF                 8045 	xor	a,a
   2A38 FD 21r41s42        8046 	ld	iy,#_initpoints
   2A3C FD B6 00           8047 	or	a,0 (iy)
   2A3F C2r46s2B           8048 	jp	NZ,00102$
                           8049 ;demo.c:1245: cmd.size_x = 256;
   2A42 21r94s41           8050 	ld	hl, #_cmd + 8
   2A45 36 00              8051 	ld	(hl),#0x00
   2A47 23                 8052 	inc	hl
   2A48 36 01              8053 	ld	(hl),#0x01
                           8054 ;demo.c:1246: cmd.size_y = 4;
   2A4A 21r96s41           8055 	ld	hl, #_cmd + 10
   2A4D 36 04              8056 	ld	(hl),#0x04
   2A4F 23                 8057 	inc	hl
   2A50 36 00              8058 	ld	(hl),#0x00
                           8059 ;demo.c:1247: cmd.data = 0;
                           8060 ;demo.c:1248: cmd.argument = 0x00; // from 70xY to left
   2A52 3E 00              8061 	ld	a,#0x00
   2A54 32r98s41           8062 	ld	(#_cmd + 12),a
   2A57 32r99s41           8063 	ld	(#_cmd + 13),a
                           8064 ;demo.c:1249: cmd.command = 0xd0; // vram to vram, y only
   2A5A 3E D0              8065 	ld	a,#0xD0
   2A5C 32r9As41           8066 	ld	(#_cmd + 14),a
                           8067 ;demo.c:1250: cmd.source_x = 0;
   2A5F 21r8Cs41           8068 	ld	hl,#_cmd
   2A62 36 00              8069 	ld	(hl),#0x00
   2A64 23                 8070 	inc	hl
   2A65 36 00              8071 	ld	(hl),#0x00
                           8072 ;demo.c:1251: cmd.dest_x = 0;
   2A67 01r90s41           8073 	ld	bc,#_cmd + 4
   2A6A 69                 8074 	ld	l,c
   2A6B 60                 8075 	ld	h,b
   2A6C 36 00              8076 	ld	(hl),#0x00
   2A6E 23                 8077 	inc	hl
   2A6F 36 00              8078 	ld	(hl),#0x00
                           8079 ;demo.c:1253: for (y = 0; y < 212; y+=4) {
   2A71 DD 36 FF 00        8080 	ld	-1 (ix),#0x00
   2A75                    8081 00103$:
   2A75 DD 7E FF           8082 	ld	a,-1 (ix)
   2A78 D6 D4              8083 	sub	a,#0xD4
   2A7A 30 2C              8084 	jr	NC,00106$
                           8085 ;demo.c:1254: waitVB();
   2A7C 76                 8086 		halt 
                           8087 ;demo.c:1255: cmd.source_y = 193;
   2A7D 11r8Es41           8088 	ld	de,#_cmd + 2
   2A80 EB                 8089 	ex	de,hl
   2A81 36 C1              8090 	ld	(hl),#0xC1
   2A83 23                 8091 	inc	hl
   2A84 36 00              8092 	ld	(hl),#0x00
                           8093 ;demo.c:1256: cmd.dest_y = y;
   2A86 11r92s41           8094 	ld	de,#_cmd + 6
   2A89 DD 4E FF           8095 	ld	c,-1 (ix)
   2A8C 06 00              8096 	ld	b,#0x00
   2A8E EB                 8097 	ex	de,hl
   2A8F 71                 8098 	ld	(hl),c
   2A90 23                 8099 	inc	hl
   2A91 70                 8100 	ld	(hl),b
                           8101 ;demo.c:1257: vdp_copier(&cmd);
   2A92 21r8Cs41           8102 	ld	hl,#_cmd
   2A95 E5                 8103 	push	hl
   2A96 CDr00s00           8104 	call	_vdp_copier
   2A99 F1                 8105 	pop	af
                           8106 ;demo.c:1253: for (y = 0; y < 212; y+=4) {
   2A9A DD 34 FF           8107 	inc	-1 (ix)
   2A9D DD 34 FF           8108 	inc	-1 (ix)
   2AA0 DD 34 FF           8109 	inc	-1 (ix)
   2AA3 DD 34 FF           8110 	inc	-1 (ix)
   2AA6 18 CD              8111 	jr	00103$
   2AA8                    8112 00106$:
                           8113 ;demo.c:1261: vdp_load_palette(bulbs_palette);
   2AA8 21rE8s40           8114 	ld	hl,#_bulbs_palette
   2AAB E5                 8115 	push	hl
   2AAC CDr00s00           8116 	call	_vdp_load_palette
   2AAF F1                 8117 	pop	af
                           8118 ;demo.c:1263: for (x = 0; x < 256; x+=1) {
   2AB0 DD 36 FD 00        8119 	ld	-3 (ix),#0x00
   2AB4 DD 36 FE 00        8120 	ld	-2 (ix),#0x00
   2AB8                    8121 00107$:
   2AB8 DD 7E FD           8122 	ld	a,-3 (ix)
   2ABB D6 00              8123 	sub	a,#0x00
   2ABD DD 7E FE           8124 	ld	a,-2 (ix)
   2AC0 DE 01              8125 	sbc	a,#0x01
   2AC2 F2r41s2B           8126 	jp	P,00110$
                           8127 ;demo.c:1265: cmd.data = 1+((pointframe>>2) & 0xe);
   2AC5 11r98s41           8128 	ld	de,#_cmd + 12
   2AC8 21r42s42           8129 	ld	hl,#_pointframe + 0
   2ACB 4E                 8130 	ld	c,(hl)
   2ACC 21r43s42           8131 	ld	hl,#_pointframe + 1
   2ACF 46                 8132 	ld	b,(hl)
   2AD0 CB 28              8133 	sra	b
   2AD2 CB 19              8134 	rr	c
   2AD4 CB 28              8135 	sra	b
   2AD6 CB 19              8136 	rr	c
   2AD8 79                 8137 	ld	a,c
   2AD9 E6 0E              8138 	and	a,#0x0E
   2ADB 3C                 8139 	inc	a
   2ADC 12                 8140 	ld	(de),a
                           8141 ;demo.c:1266: cmd.dest_x = x;
   2ADD 21r90s41           8142 	ld	hl, #_cmd + 4
   2AE0 DD 7E FD           8143 	ld	a,-3 (ix)
   2AE3 77                 8144 	ld	(hl),a
   2AE4 23                 8145 	inc	hl
   2AE5 DD 7E FE           8146 	ld	a,-2 (ix)
   2AE8 77                 8147 	ld	(hl),a
                           8148 ;demo.c:1267: cmd.dest_y = y;
   2AE9 21r92s41           8149 	ld	hl, #_cmd + 6
   2AEC 36 1D              8150 	ld	(hl),#0x1D
   2AEE 23                 8151 	inc	hl
   2AEF 36 00              8152 	ld	(hl),#0x00
                           8153 ;demo.c:1268: cmd.command = 0x50;
   2AF1 3E 50              8154 	ld	a,#0x50
   2AF3 32r9As41           8155 	ld	(#_cmd + 14),a
                           8156 ;demo.c:1269: vdp_copier(&cmd);
   2AF6 21r8Cs41           8157 	ld	hl,#_cmd
   2AF9 E5                 8158 	push	hl
   2AFA CDr00s00           8159 	call	_vdp_copier
   2AFD F1                 8160 	pop	af
                           8161 ;demo.c:1272: cmd.data = 1+((pointframe>>2) & 0xe);
   2AFE 01r98s41           8162 	ld	bc,#_cmd + 12
   2B01 21r42s42           8163 	ld	hl,#_pointframe + 0
   2B04 5E                 8164 	ld	e,(hl)
   2B05 21r43s42           8165 	ld	hl,#_pointframe + 1
   2B08 56                 8166 	ld	d,(hl)
   2B09 CB 2A              8167 	sra	d
   2B0B CB 1B              8168 	rr	e
   2B0D CB 2A              8169 	sra	d
   2B0F CB 1B              8170 	rr	e
   2B11 7B                 8171 	ld	a,e
   2B12 E6 0E              8172 	and	a,#0x0E
   2B14 3C                 8173 	inc	a
   2B15 02                 8174 	ld	(bc),a
                           8175 ;demo.c:1273: cmd.dest_y = y;
   2B16 21r92s41           8176 	ld	hl, #_cmd + 6
   2B19 36 A2              8177 	ld	(hl),#0xA2
   2B1B 23                 8178 	inc	hl
   2B1C 36 00              8179 	ld	(hl),#0x00
                           8180 ;demo.c:1274: vdp_copier(&cmd);
   2B1E 21r8Cs41           8181 	ld	hl,#_cmd
   2B21 E5                 8182 	push	hl
   2B22 CDr00s00           8183 	call	_vdp_copier
   2B25 F1                 8184 	pop	af
                           8185 ;demo.c:1276: pointframe+=1;
   2B26 FD 21r42s42        8186 	ld	iy,#_pointframe
   2B2A FD 34 00           8187 	inc	0 (iy)
   2B2D 20 07              8188 	jr	NZ,00129$
   2B2F FD 21r42s42        8189 	ld	iy,#_pointframe
   2B33 FD 34 01           8190 	inc	1 (iy)
   2B36                    8191 00129$:
                           8192 ;demo.c:1263: for (x = 0; x < 256; x+=1) {
   2B36 DD 34 FD           8193 	inc	-3 (ix)
   2B39 20 03              8194 	jr	NZ,00130$
   2B3B DD 34 FE           8195 	inc	-2 (ix)
   2B3E                    8196 00130$:
   2B3E C3rB8s2A           8197 	jp	00107$
   2B41                    8198 00110$:
                           8199 ;demo.c:1279: initpoints = 1;
   2B41 21r41s42           8200 	ld	hl,#_initpoints + 0
   2B44 36 01              8201 	ld	(hl), #0x01
   2B46                    8202 00102$:
                           8203 ;demo.c:1282: cmd.argument = 0x0;
   2B46 3E 00              8204 	ld	a,#0x00
   2B48 32r99s41           8205 	ld	(#_cmd + 13),a
                           8206 ;demo.c:1284: cmd.data = 1+((pointframe>>2) & 0xe);
   2B4B 01r98s41           8207 	ld	bc,#_cmd + 12
   2B4E 21r42s42           8208 	ld	hl,#_pointframe + 0
   2B51 5E                 8209 	ld	e,(hl)
   2B52 21r43s42           8210 	ld	hl,#_pointframe + 1
   2B55 56                 8211 	ld	d,(hl)
   2B56 CB 2A              8212 	sra	d
   2B58 CB 1B              8213 	rr	e
   2B5A CB 2A              8214 	sra	d
   2B5C CB 1B              8215 	rr	e
   2B5E 7B                 8216 	ld	a,e
   2B5F E6 0E              8217 	and	a,#0x0E
   2B61 3C                 8218 	inc	a
   2B62 02                 8219 	ld	(bc),a
                           8220 ;demo.c:1286: for (x = 30; x < 162; x+=1) {
   2B63 DD 36 FD 1E        8221 	ld	-3 (ix),#0x1E
   2B67 DD 36 FE 00        8222 	ld	-2 (ix),#0x00
   2B6B                    8223 00111$:
   2B6B DD 7E FD           8224 	ld	a,-3 (ix)
   2B6E D6 A2              8225 	sub	a,#0xA2
   2B70 DD 7E FE           8226 	ld	a,-2 (ix)
   2B73 DE 00              8227 	sbc	a,#0x00
   2B75 F2rBEs2B           8228 	jp	P,00114$
                           8229 ;demo.c:1287: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   2B78 21r42s42           8230 	ld	hl,#_pointframe
   2B7B DD 7E FD           8231 	ld	a,-3 (ix)
   2B7E 86                 8232 	add	a,(hl)
   2B7F 5F                 8233 	ld	e,a
   2B80 DD 7E FE           8234 	ld	a,-2 (ix)
   2B83 23                 8235 	inc	hl
   2B84 8E                 8236 	adc	a,(hl)
   2B85 16 00              8237 	ld	d,#0x00
   2B87 21r2Cs00           8238 	ld	hl,#_sintabx
   2B8A 19                 8239 	add	hl,de
   2B8B 7E                 8240 	ld	a,(hl)
   2B8C CB 3F              8241 	srl	a
   2B8E C6 40              8242 	add	a,#0x40
   2B90 4F                 8243 	ld	c,a
                           8244 ;demo.c:1288: cmd.dest_x = y;
   2B91 11r90s41           8245 	ld	de,#_cmd + 4
   2B94 06 00              8246 	ld	b,#0x00
   2B96 6B                 8247 	ld	l,e
   2B97 62                 8248 	ld	h,d
   2B98 71                 8249 	ld	(hl),c
   2B99 23                 8250 	inc	hl
   2B9A 70                 8251 	ld	(hl),b
                           8252 ;demo.c:1289: cmd.dest_y = x;
   2B9B 21r92s41           8253 	ld	hl, #_cmd + 6
   2B9E DD 7E FD           8254 	ld	a,-3 (ix)
   2BA1 77                 8255 	ld	(hl),a
   2BA2 23                 8256 	inc	hl
   2BA3 DD 7E FE           8257 	ld	a,-2 (ix)
   2BA6 77                 8258 	ld	(hl),a
                           8259 ;demo.c:1290: cmd.command = 0x53;
   2BA7 3E 53              8260 	ld	a,#0x53
   2BA9 32r9As41           8261 	ld	(#_cmd + 14),a
                           8262 ;demo.c:1291: vdp_copier(&cmd);
   2BAC 21r8Cs41           8263 	ld	hl,#_cmd
   2BAF E5                 8264 	push	hl
   2BB0 CDr00s00           8265 	call	_vdp_copier
   2BB3 F1                 8266 	pop	af
                           8267 ;demo.c:1286: for (x = 30; x < 162; x+=1) {
   2BB4 DD 34 FD           8268 	inc	-3 (ix)
   2BB7 20 03              8269 	jr	NZ,00132$
   2BB9 DD 34 FE           8270 	inc	-2 (ix)
   2BBC                    8271 00132$:
   2BBC 18 AD              8272 	jr	00111$
   2BBE                    8273 00114$:
                           8274 ;demo.c:1293: pointframe+=2;
   2BBE 21r42s42           8275 	ld	hl,#_pointframe
   2BC1 7E                 8276 	ld	a,(hl)
   2BC2 C6 02              8277 	add	a,#0x02
   2BC4 23                 8278 	inc	hl
   2BC5 2B                 8279 	dec	hl
   2BC6 C5                 8280 	push	bc
   2BC7 4F                 8281 	ld	c, a
   2BC8 23                 8282 	inc	hl
   2BC9 7E                 8283 	ld	a, (hl)
   2BCA 47                 8284 	ld	b, a
   2BCB 79                 8285 	ld	a, c
   2BCC 2B                 8286 	dec	hl
   2BCD 77                 8287 	ld	(hl), a
   2BCE 78                 8288 	ld	a, b
   2BCF C1                 8289 	pop	bc
   2BD0 CE 00              8290 	adc	a,#0x00
   2BD2 23                 8291 	inc	hl
   2BD3 77                 8292 	ld	(hl),a
   2BD4 DD F9              8293 	ld	sp,ix
   2BD6 DD E1              8294 	pop	ix
   2BD8 C9                 8295 	ret
   2BD9                    8296 _points_end::
                           8297 ;demo.c:1302: void do_quit() {
                           8298 ;	---------------------------------
                           8299 ; Function do_quit
                           8300 ; ---------------------------------
   2BD9                    8301 _do_quit_start::
   2BD9                    8302 _do_quit:
                           8303 ;demo.c:1303: waitVB();
   2BD9 76                 8304 		halt 
                           8305 ;demo.c:1304: uninstall_isr();
   2BDA CDr00s00           8306 	call	_uninstall_isr
                           8307 ;demo.c:1305: PLY_Stop();
   2BDD CDr00s00           8308 	call	_PLY_Stop
                           8309 ;demo.c:1306: PLY_SendRegisters();
   2BE0 CDr00s00           8310 	call	_PLY_SendRegisters
                           8311 ;demo.c:1308: screen(0);
   2BE3 3E 00              8312 	ld	a,#0x00
   2BE5 F5                 8313 	push	af
   2BE6 33                 8314 	inc	sp
   2BE7 CDr00s00           8315 	call	_screen
   2BEA 33                 8316 	inc	sp
                           8317 ;demo.c:1310: puts("demo quit\r\n\r\n");
   2BEB 21rFCs2B           8318 	ld	hl,#__str_14
   2BEE E5                 8319 	push	hl
   2BEF CDr00s00           8320 	call	_puts
   2BF2 F1                 8321 	pop	af
                           8322 ;demo.c:1312: exit(0);	
   2BF3 3E 00              8323 	ld	a,#0x00
   2BF5 F5                 8324 	push	af
   2BF6 33                 8325 	inc	sp
   2BF7 CDr00s00           8326 	call	_exit
   2BFA 33                 8327 	inc	sp
   2BFB C9                 8328 	ret
   2BFC                    8329 _do_quit_end::
   2BFC                    8330 __str_14:
   2BFC 64 65 6D 6F 20 71  8331 	.ascii "demo quit"
        75 69 74
   2C05 0D                 8332 	.db 0x0D
   2C06 0A                 8333 	.db 0x0A
   2C07 0D                 8334 	.db 0x0D
   2C08 0A                 8335 	.db 0x0A
   2C09 00                 8336 	.db 0x00
                           8337 ;demo.c:1340: void main() {
                           8338 ;	---------------------------------
                           8339 ; Function main
                           8340 ; ---------------------------------
   2C0A                    8341 _main_start::
   2C0A                    8342 _main:
   2C0A DD E5              8343 	push	ix
   2C0C DD 21 00 00        8344 	ld	ix,#0
   2C10 DD 39              8345 	add	ix,sp
   2C12 21 F9 FF           8346 	ld	hl,#-7
   2C15 39                 8347 	add	hl,sp
   2C16 F9                 8348 	ld	sp,hl
                           8349 ;demo.c:1341: unsigned char quit=0;
   2C17 DD 36 FF 00        8350 	ld	-1 (ix),#0x00
                           8351 ;demo.c:1347: spindown();
   2C1B CDr00s00           8352 	call	_spindown
                           8353 ;demo.c:1349: puts("demo init\r\n\r\n");
   2C1E 21rE6s30           8354 	ld	hl,#__str_15
   2C21 E5                 8355 	push	hl
   2C22 CDr00s00           8356 	call	_puts
   2C25 F1                 8357 	pop	af
                           8358 ;demo.c:1351: for (y = 0; y < 2; y++) {
   2C26 DD 36 FB 00        8359 	ld	-5 (ix),#0x00
   2C2A DD 36 FC 00        8360 	ld	-4 (ix),#0x00
   2C2E                    8361 00118$:
   2C2E DD 7E FB           8362 	ld	a,-5 (ix)
   2C31 D6 02              8363 	sub	a,#0x02
   2C33 DD 7E FC           8364 	ld	a,-4 (ix)
   2C36 DE 00              8365 	sbc	a,#0x00
   2C38 F2rBAs2C           8366 	jp	P,00121$
                           8367 ;demo.c:1352: for (x = 0; x < 16; x++) {
   2C3B DD 4E FB           8368 	ld	c,-5 (ix)
   2C3E DD 46 FC           8369 	ld	b,-4 (ix)
   2C41 CB 21              8370 	sla	c
   2C43 CB 10              8371 	rl	b
   2C45 CB 21              8372 	sla	c
   2C47 CB 10              8373 	rl	b
   2C49 CB 21              8374 	sla	c
   2C4B CB 10              8375 	rl	b
   2C4D CB 21              8376 	sla	c
   2C4F CB 10              8377 	rl	b
   2C51 21 81 03           8378 	ld	hl,#0x0381
   2C54 09                 8379 	add	hl,bc
   2C55 DD 75 F9           8380 	ld	-7 (ix),l
   2C58 DD 74 FA           8381 	ld	-6 (ix),h
   2C5B DD 36 FD 00        8382 	ld	-3 (ix),#0x00
   2C5F DD 36 FE 00        8383 	ld	-2 (ix),#0x00
   2C63                    8384 00114$:
   2C63 DD 7E FD           8385 	ld	a,-3 (ix)
   2C66 D6 10              8386 	sub	a,#0x10
   2C68 DD 7E FE           8387 	ld	a,-2 (ix)
   2C6B DE 00              8388 	sbc	a,#0x00
   2C6D F2rAFs2C           8389 	jp	P,00120$
                           8390 ;demo.c:1353: tri_lookup_x[(y*16)+x] = x * 16;
   2C70 DD 7E FB           8391 	ld	a,-5 (ix)
   2C73 07                 8392 	rlca
   2C74 07                 8393 	rlca
   2C75 07                 8394 	rlca
   2C76 07                 8395 	rlca
   2C77 E6 F0              8396 	and	a,#0xF0
   2C79 5F                 8397 	ld	e,a
   2C7A DD 56 FD           8398 	ld	d,-3 (ix)
   2C7D 7B                 8399 	ld	a,e
   2C7E 82                 8400 	add	a,d
   2C7F 5F                 8401 	ld	e, a
   2C80 C6r00              8402 	add	a,#<_tri_lookup_x
   2C82 4F                 8403 	ld	c,a
   2C83 3Es01              8404 	ld	a,#>_tri_lookup_x
   2C85 CE 00              8405 	adc	a,#0x00
   2C87 47                 8406 	ld	b,a
   2C88 7A                 8407 	ld	a,d
   2C89 07                 8408 	rlca
   2C8A 07                 8409 	rlca
   2C8B 07                 8410 	rlca
   2C8C 07                 8411 	rlca
   2C8D E6 F0              8412 	and	a,#0xF0
   2C8F 02                 8413 	ld	(bc),a
                           8414 ;demo.c:1354: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   2C90 CB 23              8415 	sla	e
   2C92 3Er88              8416 	ld	a,#<_tri_lookup_y
   2C94 83                 8417 	add	a,e
   2C95 6F                 8418 	ld	l,a
   2C96 3Es01              8419 	ld	a,#>_tri_lookup_y
   2C98 CE 00              8420 	adc	a,#0x00
   2C9A 67                 8421 	ld	h,a
   2C9B DD 7E F9           8422 	ld	a,-7 (ix)
   2C9E 77                 8423 	ld	(hl),a
   2C9F 23                 8424 	inc	hl
   2CA0 DD 7E FA           8425 	ld	a,-6 (ix)
   2CA3 77                 8426 	ld	(hl),a
                           8427 ;demo.c:1352: for (x = 0; x < 16; x++) {
   2CA4 DD 34 FD           8428 	inc	-3 (ix)
   2CA7 20 03              8429 	jr	NZ,00146$
   2CA9 DD 34 FE           8430 	inc	-2 (ix)
   2CAC                    8431 00146$:
   2CAC C3r63s2C           8432 	jp	00114$
   2CAF                    8433 00120$:
                           8434 ;demo.c:1351: for (y = 0; y < 2; y++) {
   2CAF DD 34 FB           8435 	inc	-5 (ix)
   2CB2 20 03              8436 	jr	NZ,00147$
   2CB4 DD 34 FC           8437 	inc	-4 (ix)
   2CB7                    8438 00147$:
   2CB7 C3r2Es2C           8439 	jp	00118$
   2CBA                    8440 00121$:
                           8441 ;demo.c:1358: for (x = 0; x < 26; x++) {
   2CBA DD 36 FD 00        8442 	ld	-3 (ix),#0x00
   2CBE DD 36 FE 00        8443 	ld	-2 (ix),#0x00
   2CC2 DD 36 F9 00        8444 	ld	-7 (ix),#0x00
   2CC6 DD 36 FA 00        8445 	ld	-6 (ix),#0x00
   2CCA                    8446 00122$:
   2CCA DD 7E FD           8447 	ld	a,-3 (ix)
   2CCD D6 1A              8448 	sub	a,#0x1A
   2CCF DD 7E FE           8449 	ld	a,-2 (ix)
   2CD2 DE 00              8450 	sbc	a,#0x00
   2CD4 F2r26s2D           8451 	jp	P,00125$
                           8452 ;demo.c:1359: twelvetimes[x] = x * 12;
   2CD7 DD 4E FD           8453 	ld	c,-3 (ix)
   2CDA DD 46 FE           8454 	ld	b,-2 (ix)
   2CDD CB 21              8455 	sla	c
   2CDF CB 10              8456 	rl	b
   2CE1 21r20s01           8457 	ld	hl,#_twelvetimes
   2CE4 09                 8458 	add	hl,bc
   2CE5 DD 7E F9           8459 	ld	a,-7 (ix)
   2CE8 77                 8460 	ld	(hl),a
   2CE9 23                 8461 	inc	hl
   2CEA DD 7E FA           8462 	ld	a,-6 (ix)
   2CED 77                 8463 	ld	(hl),a
                           8464 ;demo.c:1360: eighttimes[x] = x * 8;
   2CEE 21r54s01           8465 	ld	hl,#_eighttimes
   2CF1 09                 8466 	add	hl,bc
   2CF2 4D                 8467 	ld	c,l
   2CF3 44                 8468 	ld	b,h
   2CF4 DD 5E FD           8469 	ld	e,-3 (ix)
   2CF7 DD 56 FE           8470 	ld	d,-2 (ix)
   2CFA CB 23              8471 	sla	e
   2CFC CB 12              8472 	rl	d
   2CFE CB 23              8473 	sla	e
   2D00 CB 12              8474 	rl	d
   2D02 CB 23              8475 	sla	e
   2D04 CB 12              8476 	rl	d
   2D06 69                 8477 	ld	l,c
   2D07 60                 8478 	ld	h,b
   2D08 73                 8479 	ld	(hl),e
   2D09 23                 8480 	inc	hl
   2D0A 72                 8481 	ld	(hl),d
                           8482 ;demo.c:1358: for (x = 0; x < 26; x++) {
   2D0B DD 7E F9           8483 	ld	a,-7 (ix)
   2D0E C6 0C              8484 	add	a,#0x0C
   2D10 DD 77 F9           8485 	ld	-7 (ix),a
   2D13 DD 7E FA           8486 	ld	a,-6 (ix)
   2D16 CE 00              8487 	adc	a,#0x00
   2D18 DD 77 FA           8488 	ld	-6 (ix),a
   2D1B DD 34 FD           8489 	inc	-3 (ix)
   2D1E 20 03              8490 	jr	NZ,00152$
   2D20 DD 34 FE           8491 	inc	-2 (ix)
   2D23                    8492 00152$:
   2D23 C3rCAs2C           8493 	jp	00122$
   2D26                    8494 00125$:
                           8495 ;demo.c:1363: puts("music init...");
   2D26 21rF4s30           8496 	ld	hl,#__str_16
   2D29 E5                 8497 	push	hl
   2D2A CDr00s00           8498 	call	_puts
   2D2D F1                 8499 	pop	af
                           8500 ;demo.c:1365: PLY_SongPtr = (char *)0x0103;
   2D2E 21r00s00           8501 	ld	hl,#_PLY_SongPtr + 0
   2D31 36 03              8502 	ld	(hl), #0x03
   2D33 21r01s00           8503 	ld	hl,#_PLY_SongPtr + 1
   2D36 36 01              8504 	ld	(hl), #0x01
                           8505 ;demo.c:1366: PLY_Init();
   2D38 CDr00s00           8506 	call	_PLY_Init
                           8507 ;demo.c:1367: puts("done.\r\n");
   2D3B 21r02s31           8508 	ld	hl,#__str_17
   2D3E E5                 8509 	push	hl
   2D3F CDr00s00           8510 	call	_puts
   2D42 F1                 8511 	pop	af
                           8512 ;demo.c:1369: puts("detecting vdp type...\r\n\r\n");
   2D43 21r0As31           8513 	ld	hl,#__str_18
   2D46 E5                 8514 	push	hl
   2D47 CDr00s00           8515 	call	_puts
   2D4A F1                 8516 	pop	af
                           8517 ;demo.c:1370: if(isvdp2())
   2D4B CDr00s00           8518 	call	_isvdp2
   2D4E AF                 8519 	xor	a,a
   2D4F B5                 8520 	or	a,l
   2D50 28 0A              8521 	jr	Z,00102$
                           8522 ;demo.c:1372: puts("vdp2 found! setting 50hz...\r\n\r\n");
   2D52 21r24s31           8523 	ld	hl,#__str_19
   2D55 E5                 8524 	push	hl
   2D56 CDr00s00           8525 	call	_puts
   2D59 F1                 8526 	pop	af
   2D5A 18 0B              8527 	jr	00103$
   2D5C                    8528 00102$:
                           8529 ;demo.c:1375: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   2D5C 21r44s31           8530 	ld	hl,#__str_20
   2D5F E5                 8531 	push	hl
   2D60 CDr00s00           8532 	call	_puts
   2D63 F1                 8533 	pop	af
                           8534 ;demo.c:1376: do_quit();
   2D64 CDrD9s2B           8535 	call	_do_quit
   2D67                    8536 00103$:
                           8537 ;demo.c:1379: pal_load("TWISTER PL5",32,1);
   2D67 21 01 00           8538 	ld	hl,#0x0001
   2D6A E5                 8539 	push	hl
   2D6B 3E 20              8540 	ld	a,#0x20
   2D6D F5                 8541 	push	af
   2D6E 33                 8542 	inc	sp
   2D6F 21r8Bs31           8543 	ld	hl,#__str_21
   2D72 E5                 8544 	push	hl
   2D73 CDrA3s06           8545 	call	_pal_load
   2D76 F1                 8546 	pop	af
   2D77 F1                 8547 	pop	af
   2D78 33                 8548 	inc	sp
                           8549 ;demo.c:1380: memcpy(twister_palette, cur_palette, 32);
   2D79 21 20 00           8550 	ld	hl,#0x0020
   2D7C E5                 8551 	push	hl
   2D7D 21rC8s40           8552 	ld	hl,#_cur_palette
   2D80 E5                 8553 	push	hl
   2D81 21r28s41           8554 	ld	hl,#_twister_palette
   2D84 E5                 8555 	push	hl
   2D85 CDr00s00           8556 	call	_memcpy
   2D88 F1                 8557 	pop	af
   2D89 F1                 8558 	pop	af
   2D8A F1                 8559 	pop	af
                           8560 ;demo.c:1381: pal_load("LF      PL5",32,1);
   2D8B 21 01 00           8561 	ld	hl,#0x0001
   2D8E E5                 8562 	push	hl
   2D8F 3E 20              8563 	ld	a,#0x20
   2D91 F5                 8564 	push	af
   2D92 33                 8565 	inc	sp
   2D93 21r97s31           8566 	ld	hl,#__str_22
   2D96 E5                 8567 	push	hl
   2D97 CDrA3s06           8568 	call	_pal_load
   2D9A F1                 8569 	pop	af
   2D9B F1                 8570 	pop	af
   2D9C 33                 8571 	inc	sp
                           8572 ;demo.c:1382: memcpy(tf_palette, cur_palette, 32);
   2D9D 21 20 00           8573 	ld	hl,#0x0020
   2DA0 E5                 8574 	push	hl
   2DA1 21rC8s40           8575 	ld	hl,#_cur_palette
   2DA4 E5                 8576 	push	hl
   2DA5 21r48s41           8577 	ld	hl,#_tf_palette
   2DA8 E5                 8578 	push	hl
   2DA9 CDr00s00           8579 	call	_memcpy
   2DAC F1                 8580 	pop	af
   2DAD F1                 8581 	pop	af
   2DAE F1                 8582 	pop	af
                           8583 ;demo.c:1383: pal_load("BOXES   PL5",32,1);
   2DAF 21 01 00           8584 	ld	hl,#0x0001
   2DB2 E5                 8585 	push	hl
   2DB3 3E 20              8586 	ld	a,#0x20
   2DB5 F5                 8587 	push	af
   2DB6 33                 8588 	inc	sp
   2DB7 21rA3s31           8589 	ld	hl,#__str_23
   2DBA E5                 8590 	push	hl
   2DBB CDrA3s06           8591 	call	_pal_load
   2DBE F1                 8592 	pop	af
   2DBF F1                 8593 	pop	af
   2DC0 33                 8594 	inc	sp
                           8595 ;demo.c:1384: memcpy(boxes_palette, cur_palette, 32);
   2DC1 21 20 00           8596 	ld	hl,#0x0020
   2DC4 E5                 8597 	push	hl
   2DC5 21rC8s40           8598 	ld	hl,#_cur_palette
   2DC8 E5                 8599 	push	hl
   2DC9 21r68s41           8600 	ld	hl,#_boxes_palette
   2DCC E5                 8601 	push	hl
   2DCD CDr00s00           8602 	call	_memcpy
   2DD0 F1                 8603 	pop	af
   2DD1 F1                 8604 	pop	af
   2DD2 F1                 8605 	pop	af
                           8606 ;demo.c:1385: pal_load("BULBS   PL5",32,1);
   2DD3 21 01 00           8607 	ld	hl,#0x0001
   2DD6 E5                 8608 	push	hl
   2DD7 3E 20              8609 	ld	a,#0x20
   2DD9 F5                 8610 	push	af
   2DDA 33                 8611 	inc	sp
   2DDB 21rAFs31           8612 	ld	hl,#__str_24
   2DDE E5                 8613 	push	hl
   2DDF CDrA3s06           8614 	call	_pal_load
   2DE2 F1                 8615 	pop	af
   2DE3 F1                 8616 	pop	af
   2DE4 33                 8617 	inc	sp
                           8618 ;demo.c:1386: memcpy(bulbs_palette, cur_palette, 32);
   2DE5 21 20 00           8619 	ld	hl,#0x0020
   2DE8 E5                 8620 	push	hl
   2DE9 21rC8s40           8621 	ld	hl,#_cur_palette
   2DEC E5                 8622 	push	hl
   2DED 21rE8s40           8623 	ld	hl,#_bulbs_palette
   2DF0 E5                 8624 	push	hl
   2DF1 CDr00s00           8625 	call	_memcpy
   2DF4 F1                 8626 	pop	af
   2DF5 F1                 8627 	pop	af
   2DF6 F1                 8628 	pop	af
                           8629 ;demo.c:1388: scratch_clear();
   2DF7 CDr90s06           8630 	call	_scratch_clear
                           8631 ;demo.c:1389: vdp_load_palette(scratch);
   2DFA 21r48s40           8632 	ld	hl,#_scratch
   2DFD E5                 8633 	push	hl
   2DFE CDr00s00           8634 	call	_vdp_load_palette
   2E01 F1                 8635 	pop	af
                           8636 ;demo.c:1391: vdp_set_screen5();
   2E02 CDr00s00           8637 	call	_vdp_set_screen5
                           8638 ;demo.c:1393: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   2E05 21 00 00           8639 	ld	hl,#0x0000
   2E08 E5                 8640 	push	hl
   2E09 2E 01              8641 	ld	l, #0x01
   2E0B E5                 8642 	push	hl
   2E0C 2E 00              8643 	ld	l, #0x00
   2E0E E5                 8644 	push	hl
   2E0F 21 7F 09           8645 	ld	hl,#0x097F
   2E12 E5                 8646 	push	hl
   2E13 21rBBs31           8647 	ld	hl,#__str_25
   2E16 E5                 8648 	push	hl
   2E17 CDr99s08           8649 	call	_pck_load
   2E1A FD 21 0A 00        8650 	ld	iy,#0x000A
   2E1E FD 39              8651 	add	iy,sp
   2E20 FD F9              8652 	ld	sp,iy
                           8653 ;demo.c:1395: cmd.size_x = 256;
   2E22 21r94s41           8654 	ld	hl, #_cmd + 8
   2E25 36 00              8655 	ld	(hl),#0x00
   2E27 23                 8656 	inc	hl
   2E28 36 01              8657 	ld	(hl),#0x01
                           8658 ;demo.c:1396: cmd.size_y = 212;
   2E2A 21r96s41           8659 	ld	hl, #_cmd + 10
   2E2D 36 D4              8660 	ld	(hl),#0xD4
   2E2F 23                 8661 	inc	hl
   2E30 36 00              8662 	ld	(hl),#0x00
                           8663 ;demo.c:1397: cmd.data = 0;
                           8664 ;demo.c:1398: cmd.argument = 0x00;
   2E32 3E 00              8665 	ld	a,#0x00
   2E34 32r98s41           8666 	ld	(#_cmd + 12),a
   2E37 32r99s41           8667 	ld	(#_cmd + 13),a
                           8668 ;demo.c:1399: cmd.command = 0xd0; 
   2E3A 01r9As41           8669 	ld	bc,#_cmd + 14
   2E3D 3E D0              8670 	ld	a,#0xD0
   2E3F 02                 8671 	ld	(bc),a
                           8672 ;demo.c:1400: cmd.source_x = 0;
   2E40 21r8Cs41           8673 	ld	hl,#_cmd
   2E43 36 00              8674 	ld	(hl),#0x00
   2E45 23                 8675 	inc	hl
   2E46 36 00              8676 	ld	(hl),#0x00
                           8677 ;demo.c:1401: cmd.source_y = 0;
   2E48 21r8Es41           8678 	ld	hl, #_cmd + 2
   2E4B 36 00              8679 	ld	(hl),#0x00
   2E4D 23                 8680 	inc	hl
   2E4E 36 00              8681 	ld	(hl),#0x00
                           8682 ;demo.c:1402: cmd.dest_x = 0;
   2E50 21r90s41           8683 	ld	hl, #_cmd + 4
   2E53 36 00              8684 	ld	(hl),#0x00
   2E55 23                 8685 	inc	hl
   2E56 36 00              8686 	ld	(hl),#0x00
                           8687 ;demo.c:1403: cmd.dest_y = 256;
   2E58 21r92s41           8688 	ld	hl, #_cmd + 6
   2E5B 36 00              8689 	ld	(hl),#0x00
   2E5D 23                 8690 	inc	hl
   2E5E 36 01              8691 	ld	(hl),#0x01
                           8692 ;demo.c:1404: vdp_copier(&cmd);
   2E60 21r8Cs41           8693 	ld	hl,#_cmd
   2E63 E5                 8694 	push	hl
   2E64 CDr00s00           8695 	call	_vdp_copier
   2E67 F1                 8696 	pop	af
                           8697 ;demo.c:1406: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   2E68 21 00 00           8698 	ld	hl,#0x0000
   2E6B E5                 8699 	push	hl
   2E6C 2E 01              8700 	ld	l, #0x01
   2E6E E5                 8701 	push	hl
   2E6F 2E 00              8702 	ld	l, #0x00
   2E71 E5                 8703 	push	hl
   2E72 21 C0 0F           8704 	ld	hl,#0x0FC0
   2E75 E5                 8705 	push	hl
   2E76 21rC7s31           8706 	ld	hl,#__str_26
   2E79 E5                 8707 	push	hl
   2E7A CDr99s08           8708 	call	_pck_load
   2E7D FD 21 0A 00        8709 	ld	iy,#0x000A
   2E81 FD 39              8710 	add	iy,sp
   2E83 FD F9              8711 	ld	sp,iy
                           8712 ;demo.c:1408: cmd.size_x = 256;
   2E85 21r94s41           8713 	ld	hl, #_cmd + 8
   2E88 36 00              8714 	ld	(hl),#0x00
   2E8A 23                 8715 	inc	hl
   2E8B 36 01              8716 	ld	(hl),#0x01
                           8717 ;demo.c:1409: cmd.size_y = 212;
   2E8D 21r96s41           8718 	ld	hl, #_cmd + 10
   2E90 36 D4              8719 	ld	(hl),#0xD4
   2E92 23                 8720 	inc	hl
   2E93 36 00              8721 	ld	(hl),#0x00
                           8722 ;demo.c:1410: cmd.data = 0;
                           8723 ;demo.c:1411: cmd.argument = 0x00;
   2E95 3E 00              8724 	ld	a,#0x00
   2E97 32r98s41           8725 	ld	(#_cmd + 12),a
   2E9A 32r99s41           8726 	ld	(#_cmd + 13),a
                           8727 ;demo.c:1412: cmd.command = 0xd0; 
   2E9D 01r9As41           8728 	ld	bc,#_cmd + 14
   2EA0 3E D0              8729 	ld	a,#0xD0
   2EA2 02                 8730 	ld	(bc),a
                           8731 ;demo.c:1413: cmd.source_x = 0;
   2EA3 21r8Cs41           8732 	ld	hl,#_cmd
   2EA6 36 00              8733 	ld	(hl),#0x00
   2EA8 23                 8734 	inc	hl
   2EA9 36 00              8735 	ld	(hl),#0x00
                           8736 ;demo.c:1414: cmd.source_y = 0;
   2EAB 21r8Es41           8737 	ld	hl, #_cmd + 2
   2EAE 36 00              8738 	ld	(hl),#0x00
   2EB0 23                 8739 	inc	hl
   2EB1 36 00              8740 	ld	(hl),#0x00
                           8741 ;demo.c:1415: cmd.dest_x = 0;
   2EB3 21r90s41           8742 	ld	hl, #_cmd + 4
   2EB6 36 00              8743 	ld	(hl),#0x00
   2EB8 23                 8744 	inc	hl
   2EB9 36 00              8745 	ld	(hl),#0x00
                           8746 ;demo.c:1416: cmd.dest_y = 512;
   2EBB 21r92s41           8747 	ld	hl, #_cmd + 6
   2EBE 36 00              8748 	ld	(hl),#0x00
   2EC0 23                 8749 	inc	hl
   2EC1 36 02              8750 	ld	(hl),#0x02
                           8751 ;demo.c:1417: vdp_copier(&cmd);
   2EC3 21r8Cs41           8752 	ld	hl,#_cmd
   2EC6 E5                 8753 	push	hl
   2EC7 CDr00s00           8754 	call	_vdp_copier
   2ECA F1                 8755 	pop	af
                           8756 ;demo.c:1420: pck_load("BOXES   PCK",2731,0x0000,VRAM_0,0);
   2ECB 21 00 00           8757 	ld	hl,#0x0000
   2ECE E5                 8758 	push	hl
   2ECF 2E 01              8759 	ld	l, #0x01
   2ED1 E5                 8760 	push	hl
   2ED2 2E 00              8761 	ld	l, #0x00
   2ED4 E5                 8762 	push	hl
   2ED5 21 AB 0A           8763 	ld	hl,#0x0AAB
   2ED8 E5                 8764 	push	hl
   2ED9 21rD3s31           8765 	ld	hl,#__str_27
   2EDC E5                 8766 	push	hl
   2EDD CDr99s08           8767 	call	_pck_load
   2EE0 FD 21 0A 00        8768 	ld	iy,#0x000A
   2EE4 FD 39              8769 	add	iy,sp
   2EE6 FD F9              8770 	ld	sp,iy
                           8771 ;demo.c:1421: cmd.size_x = 256;
   2EE8 21r94s41           8772 	ld	hl, #_cmd + 8
   2EEB 36 00              8773 	ld	(hl),#0x00
   2EED 23                 8774 	inc	hl
   2EEE 36 01              8775 	ld	(hl),#0x01
                           8776 ;demo.c:1422: cmd.size_y = 212;
   2EF0 21r96s41           8777 	ld	hl, #_cmd + 10
   2EF3 36 D4              8778 	ld	(hl),#0xD4
   2EF5 23                 8779 	inc	hl
   2EF6 36 00              8780 	ld	(hl),#0x00
                           8781 ;demo.c:1423: cmd.data = 0;
                           8782 ;demo.c:1424: cmd.argument = 0x00;
   2EF8 3E 00              8783 	ld	a,#0x00
   2EFA 32r98s41           8784 	ld	(#_cmd + 12),a
   2EFD 32r99s41           8785 	ld	(#_cmd + 13),a
                           8786 ;demo.c:1425: cmd.command = 0xd0; 
   2F00 01r9As41           8787 	ld	bc,#_cmd + 14
   2F03 3E D0              8788 	ld	a,#0xD0
   2F05 02                 8789 	ld	(bc),a
                           8790 ;demo.c:1426: cmd.source_x = 0;
   2F06 21r8Cs41           8791 	ld	hl,#_cmd
   2F09 36 00              8792 	ld	(hl),#0x00
   2F0B 23                 8793 	inc	hl
   2F0C 36 00              8794 	ld	(hl),#0x00
                           8795 ;demo.c:1427: cmd.source_y = 0;
   2F0E 21r8Es41           8796 	ld	hl, #_cmd + 2
   2F11 36 00              8797 	ld	(hl),#0x00
   2F13 23                 8798 	inc	hl
   2F14 36 00              8799 	ld	(hl),#0x00
                           8800 ;demo.c:1428: cmd.dest_x = 0;
   2F16 21r90s41           8801 	ld	hl, #_cmd + 4
   2F19 36 00              8802 	ld	(hl),#0x00
   2F1B 23                 8803 	inc	hl
   2F1C 36 00              8804 	ld	(hl),#0x00
                           8805 ;demo.c:1429: cmd.dest_y = 768;
   2F1E 21r92s41           8806 	ld	hl, #_cmd + 6
   2F21 36 00              8807 	ld	(hl),#0x00
   2F23 23                 8808 	inc	hl
   2F24 36 03              8809 	ld	(hl),#0x03
                           8810 ;demo.c:1430: vdp_copier(&cmd);
   2F26 21r8Cs41           8811 	ld	hl,#_cmd
   2F29 E5                 8812 	push	hl
   2F2A CDr00s00           8813 	call	_vdp_copier
   2F2D F1                 8814 	pop	af
                           8815 ;demo.c:1432: scratch_clear();
   2F2E CDr90s06           8816 	call	_scratch_clear
                           8817 ;demo.c:1433: vdp_load_palette(scratch);
   2F31 21r48s40           8818 	ld	hl,#_scratch
   2F34 E5                 8819 	push	hl
   2F35 CDr00s00           8820 	call	_vdp_load_palette
   2F38 F1                 8821 	pop	af
                           8822 ;demo.c:1435: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   2F39 21 00 00           8823 	ld	hl,#0x0000
   2F3C E5                 8824 	push	hl
   2F3D 2E 01              8825 	ld	l, #0x01
   2F3F E5                 8826 	push	hl
   2F40 2E 00              8827 	ld	l, #0x00
   2F42 E5                 8828 	push	hl
   2F43 21 6A 08           8829 	ld	hl,#0x086A
   2F46 E5                 8830 	push	hl
   2F47 21rDFs31           8831 	ld	hl,#__str_28
   2F4A E5                 8832 	push	hl
   2F4B CDr99s08           8833 	call	_pck_load
   2F4E FD 21 0A 00        8834 	ld	iy,#0x000A
   2F52 FD 39              8835 	add	iy,sp
   2F54 FD F9              8836 	ld	sp,iy
                           8837 ;demo.c:1437: cmd.size_x = 108;
   2F56 21r94s41           8838 	ld	hl, #_cmd + 8
   2F59 36 6C              8839 	ld	(hl),#0x6C
   2F5B 23                 8840 	inc	hl
   2F5C 36 00              8841 	ld	(hl),#0x00
                           8842 ;demo.c:1438: cmd.size_y = 116;
   2F5E 21r96s41           8843 	ld	hl, #_cmd + 10
   2F61 36 74              8844 	ld	(hl),#0x74
   2F63 23                 8845 	inc	hl
   2F64 36 00              8846 	ld	(hl),#0x00
                           8847 ;demo.c:1439: cmd.data = 0;
                           8848 ;demo.c:1440: cmd.argument = 0x00;
   2F66 3E 00              8849 	ld	a,#0x00
   2F68 32r98s41           8850 	ld	(#_cmd + 12),a
   2F6B 32r99s41           8851 	ld	(#_cmd + 13),a
                           8852 ;demo.c:1441: cmd.command = 0xd0; 
   2F6E 01r9As41           8853 	ld	bc,#_cmd + 14
   2F71 3E D0              8854 	ld	a,#0xD0
   2F73 02                 8855 	ld	(bc),a
                           8856 ;demo.c:1442: cmd.source_x = 75;
   2F74 21r8Cs41           8857 	ld	hl,#_cmd
   2F77 36 4B              8858 	ld	(hl),#0x4B
   2F79 23                 8859 	inc	hl
   2F7A 36 00              8860 	ld	(hl),#0x00
                           8861 ;demo.c:1443: cmd.source_y = 50;
   2F7C 21r8Es41           8862 	ld	hl, #_cmd + 2
   2F7F 36 32              8863 	ld	(hl),#0x32
   2F81 23                 8864 	inc	hl
   2F82 36 00              8865 	ld	(hl),#0x00
                           8866 ;demo.c:1444: cmd.dest_x = 75;
   2F84 21r90s41           8867 	ld	hl, #_cmd + 4
   2F87 36 4B              8868 	ld	(hl),#0x4B
   2F89 23                 8869 	inc	hl
   2F8A 36 00              8870 	ld	(hl),#0x00
                           8871 ;demo.c:1445: cmd.dest_y = 256;
   2F8C 21r92s41           8872 	ld	hl, #_cmd + 6
   2F8F 36 00              8873 	ld	(hl),#0x00
   2F91 23                 8874 	inc	hl
   2F92 36 01              8875 	ld	(hl),#0x01
                           8876 ;demo.c:1446: vdp_copier(&cmd);
   2F94 21r8Cs41           8877 	ld	hl,#_cmd
   2F97 E5                 8878 	push	hl
   2F98 CDr00s00           8879 	call	_vdp_copier
   2F9B F1                 8880 	pop	af
                           8881 ;demo.c:1448: cmd.size_x = 108;
   2F9C 21r94s41           8882 	ld	hl, #_cmd + 8
   2F9F 36 6C              8883 	ld	(hl),#0x6C
   2FA1 23                 8884 	inc	hl
   2FA2 36 00              8885 	ld	(hl),#0x00
                           8886 ;demo.c:1449: cmd.size_y = 60;
   2FA4 21r96s41           8887 	ld	hl, #_cmd + 10
   2FA7 36 3C              8888 	ld	(hl),#0x3C
   2FA9 23                 8889 	inc	hl
   2FAA 36 00              8890 	ld	(hl),#0x00
                           8891 ;demo.c:1450: cmd.data = 0;
                           8892 ;demo.c:1451: cmd.argument = 0x00;
   2FAC 3E 00              8893 	ld	a,#0x00
   2FAE 32r98s41           8894 	ld	(#_cmd + 12),a
   2FB1 32r99s41           8895 	ld	(#_cmd + 13),a
                           8896 ;demo.c:1452: cmd.command = 0xd0; 
   2FB4 01r9As41           8897 	ld	bc,#_cmd + 14
   2FB7 3E D0              8898 	ld	a,#0xD0
   2FB9 02                 8899 	ld	(bc),a
                           8900 ;demo.c:1453: cmd.source_x = 75;
   2FBA 21r8Cs41           8901 	ld	hl,#_cmd
   2FBD 36 4B              8902 	ld	(hl),#0x4B
   2FBF 23                 8903 	inc	hl
   2FC0 36 00              8904 	ld	(hl),#0x00
                           8905 ;demo.c:1454: cmd.source_y = 256+110;
   2FC2 21r8Es41           8906 	ld	hl, #_cmd + 2
   2FC5 36 6E              8907 	ld	(hl),#0x6E
   2FC7 23                 8908 	inc	hl
   2FC8 36 01              8909 	ld	(hl),#0x01
                           8910 ;demo.c:1455: cmd.dest_x = 75;
   2FCA 21r90s41           8911 	ld	hl, #_cmd + 4
   2FCD 36 4B              8912 	ld	(hl),#0x4B
   2FCF 23                 8913 	inc	hl
   2FD0 36 00              8914 	ld	(hl),#0x00
                           8915 ;demo.c:1456: cmd.dest_y = 40;
   2FD2 21r92s41           8916 	ld	hl, #_cmd + 6
   2FD5 36 28              8917 	ld	(hl),#0x28
   2FD7 23                 8918 	inc	hl
   2FD8 36 00              8919 	ld	(hl),#0x00
                           8920 ;demo.c:1457: vdp_copier(&cmd);
   2FDA 21r8Cs41           8921 	ld	hl,#_cmd
   2FDD E5                 8922 	push	hl
   2FDE CDr00s00           8923 	call	_vdp_copier
   2FE1 F1                 8924 	pop	af
                           8925 ;demo.c:1458: cmd.dest_x = 75;
   2FE2 21r90s41           8926 	ld	hl, #_cmd + 4
   2FE5 36 4B              8927 	ld	(hl),#0x4B
   2FE7 23                 8928 	inc	hl
   2FE8 36 00              8929 	ld	(hl),#0x00
                           8930 ;demo.c:1459: cmd.dest_y = 100;
   2FEA 21r92s41           8931 	ld	hl, #_cmd + 6
   2FED 36 64              8932 	ld	(hl),#0x64
   2FEF 23                 8933 	inc	hl
   2FF0 36 00              8934 	ld	(hl),#0x00
                           8935 ;demo.c:1460: vdp_copier(&cmd);
   2FF2 21r8Cs41           8936 	ld	hl,#_cmd
   2FF5 E5                 8937 	push	hl
   2FF6 CDr00s00           8938 	call	_vdp_copier
   2FF9 F1                 8939 	pop	af
                           8940 ;demo.c:1462: pal_load("DSSLOGO PL5",32,0);
   2FFA 21 00 00           8941 	ld	hl,#0x0000
   2FFD E5                 8942 	push	hl
   2FFE 3E 20              8943 	ld	a,#0x20
   3000 F5                 8944 	push	af
   3001 33                 8945 	inc	sp
   3002 21rEBs31           8946 	ld	hl,#__str_29
   3005 E5                 8947 	push	hl
   3006 CDrA3s06           8948 	call	_pal_load
   3009 F1                 8949 	pop	af
   300A F1                 8950 	pop	af
   300B 33                 8951 	inc	sp
                           8952 ;demo.c:1464: scratch_clear();
   300C CDr90s06           8953 	call	_scratch_clear
                           8954 ;demo.c:1466: vdp_register(9,130); // 50hz,212
   300F 21 09 82           8955 	ld	hl,#0x8209
   3012 E5                 8956 	push	hl
   3013 CDr00s00           8957 	call	_vdp_register
   3016 F1                 8958 	pop	af
                           8959 ;demo.c:1468: install_isr(my_isr);
   3017 21rECs04           8960 	ld	hl,#_my_isr
   301A E5                 8961 	push	hl
   301B CDr00s00           8962 	call	_install_isr
   301E F1                 8963 	pop	af
                           8964 ;demo.c:1470: while (!quit) {
   301F                    8965 00111$:
   301F AF                 8966 	xor	a,a
   3020 DD B6 FF           8967 	or	a,-1 (ix)
   3023 C2rDEs30           8968 	jp	NZ,00113$
                           8969 ;demo.c:1472: if (vbicount >= scenetimings[timeindex+1]) {
   3026 21r46s42           8970 	ld	hl,#_timeindex + 0
   3029 4E                 8971 	ld	c,(hl)
   302A 0C                 8972 	inc	c
   302B CB 21              8973 	sla	c
   302D 3Er58              8974 	ld	a,#<_scenetimings
   302F 81                 8975 	add	a,c
   3030 6F                 8976 	ld	l,a
   3031 3Es42              8977 	ld	a,#>_scenetimings
   3033 CE 00              8978 	adc	a,#0x00
   3035 67                 8979 	ld	h,a
   3036 4E                 8980 	ld	c,(hl)
   3037 23                 8981 	inc	hl
   3038 46                 8982 	ld	b,(hl)
   3039 3Ar88s41           8983 	ld	a,(#_vbicount+0)
   303C 91                 8984 	sub	a,c
   303D 3Ar89s41           8985 	ld	a,(#_vbicount+1)
   3040 98                 8986 	sbc	a,b
   3041 FAr6As30           8987 	jp	M,00105$
                           8988 ;demo.c:1473: sceneindex++;
   3044 FD 21r44s42        8989 	ld	iy,#_sceneindex
   3048 FD 34 00           8990 	inc	0 (iy)
   304B 20 07              8991 	jr	NZ,00153$
   304D FD 21r44s42        8992 	ld	iy,#_sceneindex
   3051 FD 34 01           8993 	inc	1 (iy)
   3054                    8994 00153$:
                           8995 ;demo.c:1474: timeindex+=2;
   3054 21r46s42           8996 	ld	hl,#_timeindex
   3057 7E                 8997 	ld	a,(hl)
   3058 C6 02              8998 	add	a,#0x02
   305A 23                 8999 	inc	hl
   305B 2B                 9000 	dec	hl
   305C C5                 9001 	push	bc
   305D 4F                 9002 	ld	c, a
   305E 23                 9003 	inc	hl
   305F 7E                 9004 	ld	a, (hl)
   3060 47                 9005 	ld	b, a
   3061 79                 9006 	ld	a, c
   3062 2B                 9007 	dec	hl
   3063 77                 9008 	ld	(hl), a
   3064 78                 9009 	ld	a, b
   3065 C1                 9010 	pop	bc
   3066 CE 00              9011 	adc	a,#0x00
   3068 23                 9012 	inc	hl
   3069 77                 9013 	ld	(hl),a
   306A                    9014 00105$:
                           9015 ;demo.c:1477: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   306A 21r46s42           9016 	ld	hl,#_timeindex + 0
   306D 4E                 9017 	ld	c,(hl)
   306E 21r47s42           9018 	ld	hl,#_timeindex + 1
   3071 46                 9019 	ld	b,(hl)
   3072 CB 21              9020 	sla	c
   3074 CB 10              9021 	rl	b
   3076 21r58s42           9022 	ld	hl,#_scenetimings
   3079 09                 9023 	add	hl,bc
   307A 4E                 9024 	ld	c,(hl)
   307B 23                 9025 	inc	hl
   307C 46                 9026 	ld	b,(hl)
   307D 3Ar88s41           9027 	ld	a,(#_vbicount+0)
   3080 91                 9028 	sub	a,c
   3081 3Ar89s41           9029 	ld	a,(#_vbicount+1)
   3084 98                 9030 	sbc	a,b
   3085 FArCAs30           9031 	jp	M,00107$
   3088 21r46s42           9032 	ld	hl,#_timeindex + 0
   308B 4E                 9033 	ld	c,(hl)
   308C 0C                 9034 	inc	c
   308D CB 21              9035 	sla	c
   308F 3Er58              9036 	ld	a,#<_scenetimings
   3091 81                 9037 	add	a,c
   3092 6F                 9038 	ld	l,a
   3093 3Es42              9039 	ld	a,#>_scenetimings
   3095 CE 00              9040 	adc	a,#0x00
   3097 67                 9041 	ld	h,a
   3098 4E                 9042 	ld	c,(hl)
   3099 23                 9043 	inc	hl
   309A 46                 9044 	ld	b,(hl)
   309B 3Ar88s41           9045 	ld	a,(#_vbicount+0)
   309E 91                 9046 	sub	a,c
   309F FD 21r88s41        9047 	ld	iy,#_vbicount
   30A3 FD 7E 01           9048 	ld	a,1 (iy)
   30A6 98                 9049 	sbc	a,b
   30A7 F2rCAs30           9050 	jp	P,00107$
                           9051 ;demo.c:1478: waitVB();
   30AA 76                 9052 		halt 
                           9053 ;demo.c:1479: scenepointers[sceneindex]();
   30AB 21r44s42           9054 	ld	hl,#_sceneindex + 0
   30AE 4E                 9055 	ld	c,(hl)
   30AF FD 21r44s42        9056 	ld	iy,#_sceneindex
   30B3 FD 46 01           9057 	ld	b,1 (iy)
   30B6 CB 21              9058 	sla	c
   30B8 CB 10              9059 	rl	b
   30BA 21r48s42           9060 	ld	hl,#_scenepointers
   30BD 09                 9061 	add	hl,bc
   30BE 4E                 9062 	ld	c,(hl)
   30BF 23                 9063 	inc	hl
   30C0 46                 9064 	ld	b,(hl)
   30C1 C5                 9065 	push	bc
   30C2 21rC9s30           9066 	ld	hl,#00158$
   30C5 E5                 9067 	push	hl
   30C6 69                 9068 	ld	l,c
   30C7 60                 9069 	ld	h,b
   30C8 E9                 9070 	jp	(hl)
   30C9                    9071 00158$:
   30C9 C1                 9072 	pop	bc
   30CA                    9073 00107$:
                           9074 ;demo.c:1481: if(space())
   30CA 21 08 01           9075 	ld	hl,#0x0108
   30CD E5                 9076 	push	hl
   30CE CDr00s00           9077 	call	_ispressed
   30D1 F1                 9078 	pop	af
   30D2 AF                 9079 	xor	a,a
   30D3 B5                 9080 	or	a,l
   30D4 CAr1Fs30           9081 	jp	Z,00111$
                           9082 ;demo.c:1482: quit=1;
   30D7 DD 36 FF 01        9083 	ld	-1 (ix),#0x01
   30DB C3r1Fs30           9084 	jp	00111$
   30DE                    9085 00113$:
                           9086 ;demo.c:1485: do_quit();
   30DE CDrD9s2B           9087 	call	_do_quit
   30E1 DD F9              9088 	ld	sp,ix
   30E3 DD E1              9089 	pop	ix
   30E5 C9                 9090 	ret
   30E6                    9091 _main_end::
   30E6                    9092 __str_15:
   30E6 64 65 6D 6F 20 69  9093 	.ascii "demo init"
        6E 69 74
   30EF 0D                 9094 	.db 0x0D
   30F0 0A                 9095 	.db 0x0A
   30F1 0D                 9096 	.db 0x0D
   30F2 0A                 9097 	.db 0x0A
   30F3 00                 9098 	.db 0x00
   30F4                    9099 __str_16:
   30F4 6D 75 73 69 63 20  9100 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   3101 00                 9101 	.db 0x00
   3102                    9102 __str_17:
   3102 64 6F 6E 65 2E     9103 	.ascii "done."
   3107 0D                 9104 	.db 0x0D
   3108 0A                 9105 	.db 0x0A
   3109 00                 9106 	.db 0x00
   310A                    9107 __str_18:
   310A 64 65 74 65 63 74  9108 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   311F 0D                 9109 	.db 0x0D
   3120 0A                 9110 	.db 0x0A
   3121 0D                 9111 	.db 0x0D
   3122 0A                 9112 	.db 0x0A
   3123 00                 9113 	.db 0x00
   3124                    9114 __str_19:
   3124 76 64 70 32 20 66  9115 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   313F 0D                 9116 	.db 0x0D
   3140 0A                 9117 	.db 0x0A
   3141 0D                 9118 	.db 0x0D
   3142 0A                 9119 	.db 0x0A
   3143 00                 9120 	.db 0x00
   3144                    9121 __str_20:
   3144 20 76 64 70 31 20  9122 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   3150 0D                 9123 	.db 0x0D
   3151 0A                 9124 	.db 0x0A
   3152 53 6F 72 72 79 2C  9125 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   3180 20 56 52 41 4D 2E  9126 	.ascii " VRAM."
   3186 0D                 9127 	.db 0x0D
   3187 0A                 9128 	.db 0x0A
   3188 0D                 9129 	.db 0x0D
   3189 0A                 9130 	.db 0x0A
   318A 00                 9131 	.db 0x00
   318B                    9132 __str_21:
   318B 54 57 49 53 54 45  9133 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   3196 00                 9134 	.db 0x00
   3197                    9135 __str_22:
   3197 4C 46 20 20 20 20  9136 	.ascii "LF      PL5"
        20 20 50 4C 35
   31A2 00                 9137 	.db 0x00
   31A3                    9138 __str_23:
   31A3 42 4F 58 45 53 20  9139 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   31AE 00                 9140 	.db 0x00
   31AF                    9141 __str_24:
   31AF 42 55 4C 42 53 20  9142 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   31BA 00                 9143 	.db 0x00
   31BB                    9144 __str_25:
   31BB 42 55 4C 42 53 20  9145 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   31C6 00                 9146 	.db 0x00
   31C7                    9147 __str_26:
   31C7 54 57 49 53 54 45  9148 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   31D2 00                 9149 	.db 0x00
   31D3                    9150 __str_27:
   31D3 42 4F 58 45 53 20  9151 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   31DE 00                 9152 	.db 0x00
   31DF                    9153 __str_28:
   31DF 44 53 53 4C 4F 47  9154 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   31EA 00                 9155 	.db 0x00
   31EB                    9156 __str_29:
   31EB 44 53 53 4C 4F 47  9157 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   31F6 00                 9158 	.db 0x00
                           9159 	.area _CODE
                           9160 	.area _CABS
