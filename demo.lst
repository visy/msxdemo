                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Sun Mar  4 13:25:34 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _logoeffu
                             15 	.globl _abs
                             16 	.globl _tritiles
                             17 	.globl _drawtilescreen
                             18 	.globl _drawtritile
                             19 	.globl _boxes
                             20 	.globl _drawbox
                             21 	.globl _animplay
                             22 	.globl _bulbs
                             23 	.globl _twister
                             24 	.globl _font
                             25 	.globl _drawsine
                             26 	.globl _drawstr
                             27 	.globl _do_letter_tall
                             28 	.globl _do_letter
                             29 	.globl _raster_effu
                             30 	.globl _do_blocks
                             31 	.globl _do_ymmm
                             32 	.globl _fadein
                             33 	.globl _pck_load
                             34 	.globl _raw_load
                             35 	.globl _pause
                             36 	.globl _pal_load
                             37 	.globl _scratch_clear
                             38 	.globl _ge5_load
                             39 	.globl _color_isr
                             40 	.globl _my_isr
                             41 	.globl _isNthBitSet
                             42 	.globl _scenetimings
                             43 	.globl _scenepointers
                             44 	.globl _timeindex
                             45 	.globl _sceneindex
                             46 	.globl _onceclear
                             47 	.globl _powa
                             48 	.globl _powatick
                             49 	.globl _triframes
                             50 	.globl _tripaltick2
                             51 	.globl _tripaltick
                             52 	.globl _tripal
                             53 	.globl _tri_inited
                             54 	.globl _prevbox_of
                             55 	.globl _boxes_of
                             56 	.globl _pbt
                             57 	.globl _pbx
                             58 	.globl _bonc
                             59 	.globl _bo
                             60 	.globl _bt
                             61 	.globl _by
                             62 	.globl _bx
                             63 	.globl _boxi
                             64 	.globl _boxes_y
                             65 	.globl _boxes_x
                             66 	.globl _prevy
                             67 	.globl _prevx
                             68 	.globl _buffer
                             69 	.globl _boxes_init
                             70 	.globl _anim_init
                             71 	.globl _sy
                             72 	.globl _enderdir
                             73 	.globl _ender
                             74 	.globl _ff2
                             75 	.globl _ff1
                             76 	.globl _bulbflipper
                             77 	.globl _twinited
                             78 	.globl _ff
                             79 	.globl _ly
                             80 	.globl _lx
                             81 	.globl _linenum
                             82 	.globl _flof
                             83 	.globl _btab
                             84 	.globl _bty
                             85 	.globl _btx
                             86 	.globl _bsy
                             87 	.globl _bsx
                             88 	.globl _block_init
                             89 	.globl _cc
                             90 	.globl _yofff
                             91 	.globl _cmd
                             92 	.globl _tick
                             93 	.globl _vbicount
                             94 	.globl _boxes_palette
                             95 	.globl _tf_palette
                             96 	.globl _twister_palette
                             97 	.globl _block_palette
                             98 	.globl _cur_palette
                             99 	.globl _scratch
                            100 	.globl _packbuffer
                            101 	.globl _tri_lookup_y
                            102 	.globl _tri_lookup_x
                            103 	.globl _sintab
                            104 	.globl _font_w
                            105 	.globl _font_y
                            106 	.globl _font_x
                            107 	.globl _tri_side2
                            108 	.globl _tri_side1
                            109 	.globl _tri_dia
                            110 	.globl _tri_up
                            111 	.globl _tri_center
                            112 	.globl _sintabx
                            113 ;--------------------------------------------------------
                            114 ; special function registers
                            115 ;--------------------------------------------------------
                            116 ;--------------------------------------------------------
                            117 ;  ram data
                            118 ;--------------------------------------------------------
                            119 	.area _DATA
   0000                     120 _sintab::
   0000                     121 	.ds 256
   0100                     122 _tri_lookup_x::
   0100                     123 	.ds 32
   0120                     124 _tri_lookup_y::
   0120                     125 	.ds 64
   0160                     126 _packbuffer::
   0160                     127 	.ds 16000
   3FE0                     128 _scratch::
   3FE0                     129 	.ds 128
   4060                     130 _cur_palette::
   4060                     131 	.ds 32
   4080                     132 _block_palette::
   4080                     133 	.ds 32
   40A0                     134 _twister_palette::
   40A0                     135 	.ds 32
   40C0                     136 _tf_palette::
   40C0                     137 	.ds 32
   40E0                     138 _boxes_palette::
   40E0                     139 	.ds 32
   4100                     140 _vbicount::
   4100                     141 	.ds 2
   4102                     142 _tick::
   4102                     143 	.ds 2
   4104                     144 _cmd::
   4104                     145 	.ds 15
   4113                     146 _isNthBitSet_mask_1_1:
   4113                     147 	.ds 8
   411B                     148 _yofff::
   411B                     149 	.ds 1
   411C                     150 _cc::
   411C                     151 	.ds 1
   411D                     152 _flipper:
   411D                     153 	.ds 2
   411F                     154 _ymmmf:
   411F                     155 	.ds 2
   4121                     156 _block_init::
   4121                     157 	.ds 1
   4122                     158 _bsx::
   4122                     159 	.ds 2
   4124                     160 _bsy::
   4124                     161 	.ds 2
   4126                     162 _btx::
   4126                     163 	.ds 2
   4128                     164 _bty::
   4128                     165 	.ds 2
   412A                     166 _btab::
   412A                     167 	.ds 32
   414A                     168 _flof::
   414A                     169 	.ds 2
   414C                     170 _linenum::
   414C                     171 	.ds 2
   414E                     172 _lx::
   414E                     173 	.ds 1
   414F                     174 _ly::
   414F                     175 	.ds 1
   4150                     176 _ff::
   4150                     177 	.ds 2
   4152                     178 _twinited::
   4152                     179 	.ds 2
   4154                     180 _bulbflipper::
   4154                     181 	.ds 2
   4156                     182 _ff1::
   4156                     183 	.ds 2
   4158                     184 _ff2::
   4158                     185 	.ds 2
   415A                     186 _ender::
   415A                     187 	.ds 2
   415C                     188 _enderdir::
   415C                     189 	.ds 2
   415E                     190 _sy::
   415E                     191 	.ds 2
   4160                     192 _xo:
   4160                     193 	.ds 2
   4162                     194 _yo:
   4162                     195 	.ds 2
   4164                     196 _po:
   4164                     197 	.ds 2
   4166                     198 _frames:
   4166                     199 	.ds 2
   4168                     200 _anim_init::
   4168                     201 	.ds 2
   416A                     202 _boxes_init::
   416A                     203 	.ds 1
   416B                     204 _buffer::
   416B                     205 	.ds 2
   416D                     206 _prevx::
   416D                     207 	.ds 2
   416F                     208 _prevy::
   416F                     209 	.ds 2
   4171                     210 _boxes_x::
   4171                     211 	.ds 5
   4176                     212 _boxes_y::
   4176                     213 	.ds 10
   4180                     214 _boxi::
   4180                     215 	.ds 1
   4181                     216 _bx::
   4181                     217 	.ds 2
   4183                     218 _by::
   4183                     219 	.ds 2
   4185                     220 _bt::
   4185                     221 	.ds 2
   4187                     222 _bo::
   4187                     223 	.ds 2
   4189                     224 _bonc::
   4189                     225 	.ds 2
   418B                     226 _pbx::
   418B                     227 	.ds 2
   418D                     228 _pbt::
   418D                     229 	.ds 2
   418F                     230 _boxes_of::
   418F                     231 	.ds 10
   4199                     232 _prevbox_of::
   4199                     233 	.ds 1
   419A                     234 _tri_inited::
   419A                     235 	.ds 1
   419B                     236 _tripal::
   419B                     237 	.ds 9
   41A4                     238 _tripaltick::
   41A4                     239 	.ds 1
   41A5                     240 _tripaltick2::
   41A5                     241 	.ds 1
   41A6                     242 _triframes::
   41A6                     243 	.ds 2
   41A8                     244 _powatick::
   41A8                     245 	.ds 2
   41AA                     246 _powa::
   41AA                     247 	.ds 2
   41AC                     248 _onceclear::
   41AC                     249 	.ds 1
   41AD                     250 _sceneindex::
   41AD                     251 	.ds 2
   41AF                     252 _timeindex::
   41AF                     253 	.ds 2
   41B1                     254 _scenepointers::
   41B1                     255 	.ds 12
   41BD                     256 _scenetimings::
   41BD                     257 	.ds 24
                            258 ;--------------------------------------------------------
                            259 ; overlayable items in  ram 
                            260 ;--------------------------------------------------------
                            261 	.area _OVERLAY
                            262 ;--------------------------------------------------------
                            263 ; external initialized ram data
                            264 ;--------------------------------------------------------
                            265 ;--------------------------------------------------------
                            266 ; global & static initialisations
                            267 ;--------------------------------------------------------
                            268 	.area _HOME
                            269 	.area _GSINIT
                            270 	.area _GSFINAL
                            271 	.area _GSINIT
                            272 ;demo.c:131: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r13s41            273 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            274 	call	__initrleblock
   0006 08                  275 	.db	8
   0007 01 02 04 08 10 20   276 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  277 	.db	0
                            278 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            279 	ld	hl,#_sintab
   0013 CDr00s00            280 	call	__initrleblock
   0016 3B                  281 	.db	59
   0017 00 03 06 09 0C 0F   282 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   283 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   284 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   285 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   286 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   287 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   288 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            289 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               290 	.db	#-5,#0x7E
   0054 01                  291 	.db	1
   0055 7F                  292 	.db	0x7F
   0056 FB 7E               293 	.db	#-5,#0x7E
   0058 75                  294 	.db	117
   0059 7D 7D 7C 7B 7B 7A   295 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   296 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   297 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   298 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   299 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   300 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   301 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   302 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   303 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   304 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   305 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   306 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   307 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   308 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      309 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               310 	.db	#-5,#0x82
   00D0 01                  311 	.db	1
   00D1 81                  312 	.db	0x81
   00D2 FB 82               313 	.db	#-5,#0x82
   00D4 3A                  314 	.db	58
   00D5 83 83 84 85 85 86   315 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   316 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   317 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   318 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   319 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   320 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   321 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               322 	.db	0xFA, 0xFD
   010F 00                  323 	.db	0
                            324 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            325 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            326 	call	__initrleblock
   0116 E0 00               327 	.db	#-32,#0x00
   0118 00                  328 	.db	0
                            329 ;demo.c:114: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            330 	ld	hl,#_tri_lookup_y
   011C CDr00s00            331 	call	__initrleblock
   011F C0 00               332 	.db	#-64,#0x00
   0121 00                  333 	.db	0
                            334 ;demo.c:116: uint8_t packbuffer[16000] = {0};
   0122 21r60s01            335 	ld	hl,#_packbuffer
   0125 CDr00s00            336 	call	__initrleblock
   0128 81 00               337 	.db	#-127,#0x00
   012A 81 00               338 	.db	#-127,#0x00
   012C 81 00               339 	.db	#-127,#0x00
   012E 81 00               340 	.db	#-127,#0x00
   0130 81 00               341 	.db	#-127,#0x00
   0132 81 00               342 	.db	#-127,#0x00
   0134 81 00               343 	.db	#-127,#0x00
   0136 81 00               344 	.db	#-127,#0x00
   0138 81 00               345 	.db	#-127,#0x00
   013A 81 00               346 	.db	#-127,#0x00
   013C 81 00               347 	.db	#-127,#0x00
   013E 81 00               348 	.db	#-127,#0x00
   0140 81 00               349 	.db	#-127,#0x00
   0142 81 00               350 	.db	#-127,#0x00
   0144 81 00               351 	.db	#-127,#0x00
   0146 81 00               352 	.db	#-127,#0x00
   0148 81 00               353 	.db	#-127,#0x00
   014A 81 00               354 	.db	#-127,#0x00
   014C 81 00               355 	.db	#-127,#0x00
   014E 81 00               356 	.db	#-127,#0x00
   0150 81 00               357 	.db	#-127,#0x00
   0152 81 00               358 	.db	#-127,#0x00
   0154 81 00               359 	.db	#-127,#0x00
   0156 81 00               360 	.db	#-127,#0x00
   0158 81 00               361 	.db	#-127,#0x00
   015A 81 00               362 	.db	#-127,#0x00
   015C 81 00               363 	.db	#-127,#0x00
   015E 81 00               364 	.db	#-127,#0x00
   0160 81 00               365 	.db	#-127,#0x00
   0162 81 00               366 	.db	#-127,#0x00
   0164 81 00               367 	.db	#-127,#0x00
   0166 81 00               368 	.db	#-127,#0x00
   0168 81 00               369 	.db	#-127,#0x00
   016A 81 00               370 	.db	#-127,#0x00
   016C 81 00               371 	.db	#-127,#0x00
   016E 81 00               372 	.db	#-127,#0x00
   0170 81 00               373 	.db	#-127,#0x00
   0172 81 00               374 	.db	#-127,#0x00
   0174 81 00               375 	.db	#-127,#0x00
   0176 81 00               376 	.db	#-127,#0x00
   0178 81 00               377 	.db	#-127,#0x00
   017A 81 00               378 	.db	#-127,#0x00
   017C 81 00               379 	.db	#-127,#0x00
   017E 81 00               380 	.db	#-127,#0x00
   0180 81 00               381 	.db	#-127,#0x00
   0182 81 00               382 	.db	#-127,#0x00
   0184 81 00               383 	.db	#-127,#0x00
   0186 81 00               384 	.db	#-127,#0x00
   0188 81 00               385 	.db	#-127,#0x00
   018A 81 00               386 	.db	#-127,#0x00
   018C 81 00               387 	.db	#-127,#0x00
   018E 81 00               388 	.db	#-127,#0x00
   0190 81 00               389 	.db	#-127,#0x00
   0192 81 00               390 	.db	#-127,#0x00
   0194 81 00               391 	.db	#-127,#0x00
   0196 81 00               392 	.db	#-127,#0x00
   0198 81 00               393 	.db	#-127,#0x00
   019A 81 00               394 	.db	#-127,#0x00
   019C 81 00               395 	.db	#-127,#0x00
   019E 81 00               396 	.db	#-127,#0x00
   01A0 81 00               397 	.db	#-127,#0x00
   01A2 81 00               398 	.db	#-127,#0x00
   01A4 81 00               399 	.db	#-127,#0x00
   01A6 81 00               400 	.db	#-127,#0x00
   01A8 81 00               401 	.db	#-127,#0x00
   01AA 81 00               402 	.db	#-127,#0x00
   01AC 81 00               403 	.db	#-127,#0x00
   01AE 81 00               404 	.db	#-127,#0x00
   01B0 81 00               405 	.db	#-127,#0x00
   01B2 81 00               406 	.db	#-127,#0x00
   01B4 81 00               407 	.db	#-127,#0x00
   01B6 81 00               408 	.db	#-127,#0x00
   01B8 81 00               409 	.db	#-127,#0x00
   01BA 81 00               410 	.db	#-127,#0x00
   01BC 81 00               411 	.db	#-127,#0x00
   01BE 81 00               412 	.db	#-127,#0x00
   01C0 81 00               413 	.db	#-127,#0x00
   01C2 81 00               414 	.db	#-127,#0x00
   01C4 81 00               415 	.db	#-127,#0x00
   01C6 81 00               416 	.db	#-127,#0x00
   01C8 81 00               417 	.db	#-127,#0x00
   01CA 81 00               418 	.db	#-127,#0x00
   01CC 81 00               419 	.db	#-127,#0x00
   01CE 81 00               420 	.db	#-127,#0x00
   01D0 81 00               421 	.db	#-127,#0x00
   01D2 81 00               422 	.db	#-127,#0x00
   01D4 81 00               423 	.db	#-127,#0x00
   01D6 81 00               424 	.db	#-127,#0x00
   01D8 81 00               425 	.db	#-127,#0x00
   01DA 81 00               426 	.db	#-127,#0x00
   01DC 81 00               427 	.db	#-127,#0x00
   01DE 81 00               428 	.db	#-127,#0x00
   01E0 81 00               429 	.db	#-127,#0x00
   01E2 81 00               430 	.db	#-127,#0x00
   01E4 81 00               431 	.db	#-127,#0x00
   01E6 81 00               432 	.db	#-127,#0x00
   01E8 81 00               433 	.db	#-127,#0x00
   01EA 81 00               434 	.db	#-127,#0x00
   01EC 81 00               435 	.db	#-127,#0x00
   01EE 81 00               436 	.db	#-127,#0x00
   01F0 81 00               437 	.db	#-127,#0x00
   01F2 81 00               438 	.db	#-127,#0x00
   01F4 81 00               439 	.db	#-127,#0x00
   01F6 81 00               440 	.db	#-127,#0x00
   01F8 81 00               441 	.db	#-127,#0x00
   01FA 81 00               442 	.db	#-127,#0x00
   01FC 81 00               443 	.db	#-127,#0x00
   01FE 81 00               444 	.db	#-127,#0x00
   0200 81 00               445 	.db	#-127,#0x00
   0202 81 00               446 	.db	#-127,#0x00
   0204 81 00               447 	.db	#-127,#0x00
   0206 81 00               448 	.db	#-127,#0x00
   0208 81 00               449 	.db	#-127,#0x00
   020A 81 00               450 	.db	#-127,#0x00
   020C 81 00               451 	.db	#-127,#0x00
   020E 81 00               452 	.db	#-127,#0x00
   0210 81 00               453 	.db	#-127,#0x00
   0212 81 00               454 	.db	#-127,#0x00
   0214 81 00               455 	.db	#-127,#0x00
   0216 81 00               456 	.db	#-127,#0x00
   0218 81 00               457 	.db	#-127,#0x00
   021A 81 00               458 	.db	#-127,#0x00
   021C 81 00               459 	.db	#-127,#0x00
   021E 81 00               460 	.db	#-127,#0x00
   0220 81 00               461 	.db	#-127,#0x00
   0222 83 00               462 	.db	#-125,#0x00
   0224 00                  463 	.db	0
                            464 ;demo.c:125: volatile int vbicount=0;
   0225 FD 21r00s41         465 	ld	iy,#_vbicount
   0229 FD 36 00 00         466 	ld	0 (iy),#0x00
   022D FD 21r00s41         467 	ld	iy,#_vbicount
   0231 FD 36 01 00         468 	ld	1 (iy),#0x00
                            469 ;demo.c:126: volatile int tick=0;
   0235 FD 21r02s41         470 	ld	iy,#_tick
   0239 FD 36 00 00         471 	ld	0 (iy),#0x00
   023D FD 21r02s41         472 	ld	iy,#_tick
   0241 FD 36 01 00         473 	ld	1 (iy),#0x00
                            474 ;demo.c:326: uint8_t yofff = 0;
   0245 FD 21r1Bs41         475 	ld	iy,#_yofff
   0249 FD 36 00 00         476 	ld	0 (iy),#0x00
                            477 ;demo.c:327: uint8_t cc = 0;
   024D FD 21r1Cs41         478 	ld	iy,#_cc
   0251 FD 36 00 00         479 	ld	0 (iy),#0x00
                            480 ;demo.c:328: static int flipper = 0;
   0255 FD 21r1Ds41         481 	ld	iy,#_flipper
   0259 FD 36 00 00         482 	ld	0 (iy),#0x00
   025D FD 21r1Ds41         483 	ld	iy,#_flipper
   0261 FD 36 01 00         484 	ld	1 (iy),#0x00
                            485 ;demo.c:329: static int ymmmf = 0;
   0265 FD 21r1Fs41         486 	ld	iy,#_ymmmf
   0269 FD 36 00 00         487 	ld	0 (iy),#0x00
   026D FD 21r1Fs41         488 	ld	iy,#_ymmmf
   0271 FD 36 01 00         489 	ld	1 (iy),#0x00
                            490 ;demo.c:360: char block_init = 0;
   0275 FD 21r21s41         491 	ld	iy,#_block_init
   0279 FD 36 00 00         492 	ld	0 (iy),#0x00
                            493 ;demo.c:362: int bsx = 0;
   027D FD 21r22s41         494 	ld	iy,#_bsx
   0281 FD 36 00 00         495 	ld	0 (iy),#0x00
   0285 FD 21r22s41         496 	ld	iy,#_bsx
   0289 FD 36 01 00         497 	ld	1 (iy),#0x00
                            498 ;demo.c:363: int bsy = 0;
   028D FD 21r24s41         499 	ld	iy,#_bsy
   0291 FD 36 00 00         500 	ld	0 (iy),#0x00
   0295 FD 21r24s41         501 	ld	iy,#_bsy
   0299 FD 36 01 00         502 	ld	1 (iy),#0x00
                            503 ;demo.c:364: int btx = 0;
   029D FD 21r26s41         504 	ld	iy,#_btx
   02A1 FD 36 00 00         505 	ld	0 (iy),#0x00
   02A5 FD 21r26s41         506 	ld	iy,#_btx
   02A9 FD 36 01 00         507 	ld	1 (iy),#0x00
                            508 ;demo.c:365: int bty = 0;
   02AD FD 21r28s41         509 	ld	iy,#_bty
   02B1 FD 36 00 00         510 	ld	0 (iy),#0x00
   02B5 FD 21r28s41         511 	ld	iy,#_bty
   02B9 FD 36 01 00         512 	ld	1 (iy),#0x00
                            513 ;demo.c:367: int btab[16] = {0};
   02BD 21r2As41            514 	ld	hl,#_btab
   02C0 CDr00s00            515 	call	__initrleblock
   02C3 E0 00               516 	.db	#-32,#0x00
   02C5 00                  517 	.db	0
                            518 ;demo.c:369: int flof = 0;
   02C6 FD 21r4As41         519 	ld	iy,#_flof
   02CA FD 36 00 00         520 	ld	0 (iy),#0x00
   02CE FD 21r4As41         521 	ld	iy,#_flof
   02D2 FD 36 01 00         522 	ld	1 (iy),#0x00
                            523 ;demo.c:418: int linenum = 0;
   02D6 FD 21r4Cs41         524 	ld	iy,#_linenum
   02DA FD 36 00 00         525 	ld	0 (iy),#0x00
   02DE FD 21r4Cs41         526 	ld	iy,#_linenum
   02E2 FD 36 01 00         527 	ld	1 (iy),#0x00
                            528 ;demo.c:476: uint8_t lx = 0;
   02E6 FD 21r4Es41         529 	ld	iy,#_lx
   02EA FD 36 00 00         530 	ld	0 (iy),#0x00
                            531 ;demo.c:477: uint8_t ly = 0;
   02EE FD 21r4Fs41         532 	ld	iy,#_ly
   02F2 FD 36 00 00         533 	ld	0 (iy),#0x00
                            534 ;demo.c:540: int ff = 0;
   02F6 FD 21r50s41         535 	ld	iy,#_ff
   02FA FD 36 00 00         536 	ld	0 (iy),#0x00
   02FE FD 21r50s41         537 	ld	iy,#_ff
   0302 FD 36 01 00         538 	ld	1 (iy),#0x00
                            539 ;demo.c:541: int twinited = 0;
   0306 FD 21r52s41         540 	ld	iy,#_twinited
   030A FD 36 00 00         541 	ld	0 (iy),#0x00
   030E FD 21r52s41         542 	ld	iy,#_twinited
   0312 FD 36 01 00         543 	ld	1 (iy),#0x00
                            544 ;demo.c:590: int bulbflipper = 1;
   0316 FD 21r54s41         545 	ld	iy,#_bulbflipper
   031A FD 36 00 01         546 	ld	0 (iy),#0x01
   031E FD 21r54s41         547 	ld	iy,#_bulbflipper
   0322 FD 36 01 00         548 	ld	1 (iy),#0x00
                            549 ;demo.c:592: int ff1,ff2 = 0;
   0326 FD 21r58s41         550 	ld	iy,#_ff2
   032A FD 36 00 00         551 	ld	0 (iy),#0x00
   032E FD 21r58s41         552 	ld	iy,#_ff2
   0332 FD 36 01 00         553 	ld	1 (iy),#0x00
                            554 ;demo.c:593: int ender = 212;
   0336 FD 21r5As41         555 	ld	iy,#_ender
   033A FD 36 00 D4         556 	ld	0 (iy),#0xD4
   033E FD 21r5As41         557 	ld	iy,#_ender
   0342 FD 36 01 00         558 	ld	1 (iy),#0x00
                            559 ;demo.c:594: int enderdir = -1;
   0346 FD 21r5Cs41         560 	ld	iy,#_enderdir
   034A FD 36 00 FF         561 	ld	0 (iy),#0xFF
   034E FD 21r5Cs41         562 	ld	iy,#_enderdir
   0352 FD 36 01 FF         563 	ld	1 (iy),#0xFF
                            564 ;demo.c:595: int sy = 16;
   0356 FD 21r5Es41         565 	ld	iy,#_sy
   035A FD 36 00 10         566 	ld	0 (iy),#0x10
   035E FD 21r5Es41         567 	ld	iy,#_sy
   0362 FD 36 01 00         568 	ld	1 (iy),#0x00
                            569 ;demo.c:651: static int xo = 0;
   0366 FD 21r60s41         570 	ld	iy,#_xo
   036A FD 36 00 00         571 	ld	0 (iy),#0x00
   036E FD 21r60s41         572 	ld	iy,#_xo
   0372 FD 36 01 00         573 	ld	1 (iy),#0x00
                            574 ;demo.c:652: static int yo = 0;
   0376 FD 21r62s41         575 	ld	iy,#_yo
   037A FD 36 00 00         576 	ld	0 (iy),#0x00
   037E FD 21r62s41         577 	ld	iy,#_yo
   0382 FD 36 01 00         578 	ld	1 (iy),#0x00
                            579 ;demo.c:653: static int po = 0;
   0386 FD 21r64s41         580 	ld	iy,#_po
   038A FD 36 00 00         581 	ld	0 (iy),#0x00
   038E FD 21r64s41         582 	ld	iy,#_po
   0392 FD 36 01 00         583 	ld	1 (iy),#0x00
                            584 ;demo.c:654: static int frames = 0;
   0396 FD 21r66s41         585 	ld	iy,#_frames
   039A FD 36 00 00         586 	ld	0 (iy),#0x00
   039E FD 21r66s41         587 	ld	iy,#_frames
   03A2 FD 36 01 00         588 	ld	1 (iy),#0x00
                            589 ;demo.c:656: int anim_init = 0;
   03A6 FD 21r68s41         590 	ld	iy,#_anim_init
   03AA FD 36 00 00         591 	ld	0 (iy),#0x00
   03AE FD 21r68s41         592 	ld	iy,#_anim_init
   03B2 FD 36 01 00         593 	ld	1 (iy),#0x00
                            594 ;demo.c:752: uint8_t boxes_init = 0;
   03B6 FD 21r6As41         595 	ld	iy,#_boxes_init
   03BA FD 36 00 00         596 	ld	0 (iy),#0x00
                            597 ;demo.c:753: int buffer = 1;
   03BE FD 21r6Bs41         598 	ld	iy,#_buffer
   03C2 FD 36 00 01         599 	ld	0 (iy),#0x01
   03C6 FD 21r6Bs41         600 	ld	iy,#_buffer
   03CA FD 36 01 00         601 	ld	1 (iy),#0x00
                            602 ;demo.c:754: int prevx = -1;
   03CE FD 21r6Ds41         603 	ld	iy,#_prevx
   03D2 FD 36 00 FF         604 	ld	0 (iy),#0xFF
   03D6 FD 21r6Ds41         605 	ld	iy,#_prevx
   03DA FD 36 01 FF         606 	ld	1 (iy),#0xFF
                            607 ;demo.c:756: uint8_t boxes_x[5] = {0,36,0,36,0};
   03DE 21r71s41            608 	ld	hl,#_boxes_x
   03E1 CDr00s00            609 	call	__initrleblock
   03E4 05                  610 	.db	5
   03E5 00 24 00 24 00      611 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   03EA 00                  612 	.db	0
                            613 ;demo.c:757: int boxes_y[5] = {768,768,768+36,768+36,0};
   03EB 21r76s41            614 	ld	hl,#_boxes_y
   03EE CDr00s00            615 	call	__initrleblock
   03F1 0A                  616 	.db	10
   03F2 00 03 00 03 24 03   617 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   03FA 00 00               618 	.db	0x00, 0x00
   03FC 00                  619 	.db	0
                            620 ;demo.c:758: uint8_t boxi = 0;
   03FD FD 21r80s41         621 	ld	iy,#_boxi
   0401 FD 36 00 00         622 	ld	0 (iy),#0x00
                            623 ;demo.c:759: int bx = 220;
   0405 FD 21r81s41         624 	ld	iy,#_bx
   0409 FD 36 00 DC         625 	ld	0 (iy),#0xDC
   040D FD 21r81s41         626 	ld	iy,#_bx
   0411 FD 36 01 00         627 	ld	1 (iy),#0x00
                            628 ;demo.c:760: int by = 84;
   0415 FD 21r83s41         629 	ld	iy,#_by
   0419 FD 36 00 54         630 	ld	0 (iy),#0x54
   041D FD 21r83s41         631 	ld	iy,#_by
   0421 FD 36 01 00         632 	ld	1 (iy),#0x00
                            633 ;demo.c:778: int bt = 0;
   0425 FD 21r85s41         634 	ld	iy,#_bt
   0429 FD 36 00 00         635 	ld	0 (iy),#0x00
   042D FD 21r85s41         636 	ld	iy,#_bt
   0431 FD 36 01 00         637 	ld	1 (iy),#0x00
                            638 ;demo.c:779: int bo = 0;
   0435 FD 21r87s41         639 	ld	iy,#_bo
   0439 FD 36 00 00         640 	ld	0 (iy),#0x00
   043D FD 21r87s41         641 	ld	iy,#_bo
   0441 FD 36 01 00         642 	ld	1 (iy),#0x00
                            643 ;demo.c:781: int bonc = 0;
   0445 FD 21r89s41         644 	ld	iy,#_bonc
   0449 FD 36 00 00         645 	ld	0 (iy),#0x00
   044D FD 21r89s41         646 	ld	iy,#_bonc
   0451 FD 36 01 00         647 	ld	1 (iy),#0x00
                            648 ;demo.c:782: int pbx = 0;
   0455 FD 21r8Bs41         649 	ld	iy,#_pbx
   0459 FD 36 00 00         650 	ld	0 (iy),#0x00
   045D FD 21r8Bs41         651 	ld	iy,#_pbx
   0461 FD 36 01 00         652 	ld	1 (iy),#0x00
                            653 ;demo.c:783: int pbt = 0;
   0465 FD 21r8Ds41         654 	ld	iy,#_pbt
   0469 FD 36 00 00         655 	ld	0 (iy),#0x00
   046D FD 21r8Ds41         656 	ld	iy,#_pbt
   0471 FD 36 01 00         657 	ld	1 (iy),#0x00
                            658 ;demo.c:785: int boxes_of[5] = {0,0,6,0,0};
   0475 21r8Fs41            659 	ld	hl,#_boxes_of
   0478 CDr00s00            660 	call	__initrleblock
   047B 05                  661 	.db	5
   047C 00 00 00 00 06      662 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0481 FB 00               663 	.db	#-5,#0x00
   0483 00                  664 	.db	0
                            665 ;demo.c:786: uint8_t prevbox_of = 0;
   0484 FD 21r99s41         666 	ld	iy,#_prevbox_of
   0488 FD 36 00 00         667 	ld	0 (iy),#0x00
                            668 ;demo.c:901: uint8_t tri_inited = 0;
   048C FD 21r9As41         669 	ld	iy,#_tri_inited
   0490 FD 36 00 00         670 	ld	0 (iy),#0x00
                            671 ;demo.c:929: char tripal[9] = {
   0494 21r9Bs41            672 	ld	hl,#_tripal
   0497 CDr00s00            673 	call	__initrleblock
   049A 09                  674 	.db	9
   049B 02 02 01 01 02 03   675 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   04A3 02                  676 	.db	0x02
   04A4 00                  677 	.db	0
                            678 ;demo.c:935: uint8_t tripaltick = 0;
   04A5 FD 21rA4s41         679 	ld	iy,#_tripaltick
   04A9 FD 36 00 00         680 	ld	0 (iy),#0x00
                            681 ;demo.c:936: uint8_t tripaltick2 = 0;
   04AD FD 21rA5s41         682 	ld	iy,#_tripaltick2
   04B1 FD 36 00 00         683 	ld	0 (iy),#0x00
                            684 ;demo.c:938: int triframes = 0;
   04B5 FD 21rA6s41         685 	ld	iy,#_triframes
   04B9 FD 36 00 00         686 	ld	0 (iy),#0x00
   04BD FD 21rA6s41         687 	ld	iy,#_triframes
   04C1 FD 36 01 00         688 	ld	1 (iy),#0x00
                            689 ;demo.c:1038: int powatick = 0;
   04C5 FD 21rA8s41         690 	ld	iy,#_powatick
   04C9 FD 36 00 00         691 	ld	0 (iy),#0x00
   04CD FD 21rA8s41         692 	ld	iy,#_powatick
   04D1 FD 36 01 00         693 	ld	1 (iy),#0x00
                            694 ;demo.c:1039: int powa = 0;
   04D5 FD 21rAAs41         695 	ld	iy,#_powa
   04D9 FD 36 00 00         696 	ld	0 (iy),#0x00
   04DD FD 21rAAs41         697 	ld	iy,#_powa
   04E1 FD 36 01 00         698 	ld	1 (iy),#0x00
                            699 ;demo.c:1040: uint8_t onceclear = 255;
   04E5 FD 21rACs41         700 	ld	iy,#_onceclear
   04E9 FD 36 00 FF         701 	ld	0 (iy),#0xFF
                            702 ;demo.c:1102: int sceneindex = 0;
   04ED FD 21rADs41         703 	ld	iy,#_sceneindex
   04F1 FD 36 00 00         704 	ld	0 (iy),#0x00
   04F5 FD 21rADs41         705 	ld	iy,#_sceneindex
   04F9 FD 36 01 00         706 	ld	1 (iy),#0x00
                            707 ;demo.c:1103: int timeindex = 0;
   04FD FD 21rAFs41         708 	ld	iy,#_timeindex
   0501 FD 36 00 00         709 	ld	0 (iy),#0x00
   0505 FD 21rAFs41         710 	ld	iy,#_timeindex
   0509 FD 36 01 00         711 	ld	1 (iy),#0x00
                            712 ;demo.c:1105: void (*scenepointers[6])() = {
   050D 21rB1s41            713 	ld	hl,#_scenepointers
   0510 36r7C               714 	ld	(hl),#<_logoeffu
   0512 23                  715 	inc	hl
   0513 36s21               716 	ld	(hl),#>_logoeffu
   0515 01rB3s41            717 	ld	bc,#_scenepointers + 2
   0518 69                  718 	ld	l,c
   0519 60                  719 	ld	h,b
   051A 36r8F               720 	ld	(hl),#<_bulbs
   051C 23                  721 	inc	hl
   051D 36s13               722 	ld	(hl),#>_bulbs
   051F 21rB5s41            723 	ld	hl, #_scenepointers + 4
   0522 36r23               724 	ld	(hl),#<_twister
   0524 23                  725 	inc	hl
   0525 36s12               726 	ld	(hl),#>_twister
   0527 01rB7s41            727 	ld	bc,#_scenepointers + 6
   052A 69                  728 	ld	l,c
   052B 60                  729 	ld	h,b
   052C 36r3C               730 	ld	(hl),#<_boxes
   052E 23                  731 	inc	hl
   052F 36s19               732 	ld	(hl),#>_boxes
   0531 21rB9s41            733 	ld	hl, #_scenepointers + 8
   0534 36rB3               734 	ld	(hl),#<_tritiles
   0536 23                  735 	inc	hl
   0537 36s1E               736 	ld	(hl),#>_tritiles
   0539 01rBBs41            737 	ld	bc,#_scenepointers + 10
   053C 69                  738 	ld	l,c
   053D 60                  739 	ld	h,b
   053E 36rED               740 	ld	(hl),#<_animplay
   0540 23                  741 	inc	hl
   0541 36s15               742 	ld	(hl),#>_animplay
                            743 ;demo.c:1114: int scenetimings[12] = {
   0543 21rBDs41            744 	ld	hl,#_scenetimings
   0546 CDr00s00            745 	call	__initrleblock
   0549 18                  746 	.db	24
   054A 00 00 FA 00 FA 00   747 	.db	0x00, 0x00, 0xFA, 0x00, 0xFA, 0x00, 0x4C, 0x04
        4C 04
   0552 4C 04 98 08 98 08   748 	.db	0x4C, 0x04, 0x98, 0x08, 0x98, 0x08, 0x74, 0x0E
        74 0E
   055A 74 0E 88 13 88 13   749 	.db	0x74, 0x0E, 0x88, 0x13, 0x88, 0x13, 0x98, 0x3A
        98 3A
   0562 00                  750 	.db	0
                            751 ;--------------------------------------------------------
                            752 ; Home
                            753 ;--------------------------------------------------------
                            754 	.area _HOME
                            755 	.area _HOME
                            756 ;--------------------------------------------------------
                            757 ; code
                            758 ;--------------------------------------------------------
                            759 	.area _CODE
                            760 ;demo.c:130: int isNthBitSet (unsigned char c, int n) {
                            761 ;	---------------------------------
                            762 ; Function isNthBitSet
                            763 ; ---------------------------------
   0000                     764 _isNthBitSet_start::
   0000                     765 _isNthBitSet:
   0000 DD E5               766 	push	ix
   0002 DD 21 00 00         767 	ld	ix,#0
   0006 DD 39               768 	add	ix,sp
                            769 ;demo.c:132: return ((c & mask[n]) != 0);
   0008 3Er13               770 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            771 	add	a,5 (ix)
   000D 4F                  772 	ld	c,a
   000E 3Es41               773 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            774 	adc	a,6 (ix)
   0013 47                  775 	ld	b,a
   0014 0A                  776 	ld	a,(bc)
   0015 DD A6 04            777 	and	a,4 (ix)
   0018 20 04               778 	jr	NZ,00103$
   001A 3E 01               779 	ld	a,#0x01
   001C 18 01               780 	jr	00104$
   001E                     781 00103$:
   001E AF                  782 	xor	a,a
   001F                     783 00104$:
   001F B7                  784 	or	a,a
   0020 D6 01               785 	sub	a,#0x01
   0022 3E 00               786 	ld	a,#0x00
   0024 17                  787 	rla
   0025 4F                  788 	ld	c,a
   0026 69                  789 	ld	l,c
   0027 26 00               790 	ld	h,#0x00
   0029 DD E1               791 	pop	ix
   002B C9                  792 	ret
   002C                     793 _isNthBitSet_end::
   002C                     794 _sintabx:
   002C 78 00               795 	.dw #0x0078
   002E 7A 00               796 	.dw #0x007A
   0030 7D 00               797 	.dw #0x007D
   0032 80 00               798 	.dw #0x0080
   0034 83 00               799 	.dw #0x0083
   0036 86 00               800 	.dw #0x0086
   0038 89 00               801 	.dw #0x0089
   003A 8C 00               802 	.dw #0x008C
   003C 8F 00               803 	.dw #0x008F
   003E 92 00               804 	.dw #0x0092
   0040 95 00               805 	.dw #0x0095
   0042 98 00               806 	.dw #0x0098
   0044 9A 00               807 	.dw #0x009A
   0046 9D 00               808 	.dw #0x009D
   0048 A0 00               809 	.dw #0x00A0
   004A A3 00               810 	.dw #0x00A3
   004C A5 00               811 	.dw #0x00A5
   004E A8 00               812 	.dw #0x00A8
   0050 AB 00               813 	.dw #0x00AB
   0052 AD 00               814 	.dw #0x00AD
   0054 B0 00               815 	.dw #0x00B0
   0056 B3 00               816 	.dw #0x00B3
   0058 B5 00               817 	.dw #0x00B5
   005A B8 00               818 	.dw #0x00B8
   005C BA 00               819 	.dw #0x00BA
   005E BD 00               820 	.dw #0x00BD
   0060 BF 00               821 	.dw #0x00BF
   0062 C1 00               822 	.dw #0x00C1
   0064 C4 00               823 	.dw #0x00C4
   0066 C6 00               824 	.dw #0x00C6
   0068 C8 00               825 	.dw #0x00C8
   006A CA 00               826 	.dw #0x00CA
   006C CC 00               827 	.dw #0x00CC
   006E CE 00               828 	.dw #0x00CE
   0070 D0 00               829 	.dw #0x00D0
   0072 D2 00               830 	.dw #0x00D2
   0074 D4 00               831 	.dw #0x00D4
   0076 D6 00               832 	.dw #0x00D6
   0078 D8 00               833 	.dw #0x00D8
   007A DA 00               834 	.dw #0x00DA
   007C DB 00               835 	.dw #0x00DB
   007E DD 00               836 	.dw #0x00DD
   0080 DE 00               837 	.dw #0x00DE
   0082 E0 00               838 	.dw #0x00E0
   0084 E1 00               839 	.dw #0x00E1
   0086 E3 00               840 	.dw #0x00E3
   0088 E4 00               841 	.dw #0x00E4
   008A E5 00               842 	.dw #0x00E5
   008C E6 00               843 	.dw #0x00E6
   008E E7 00               844 	.dw #0x00E7
   0090 E8 00               845 	.dw #0x00E8
   0092 E9 00               846 	.dw #0x00E9
   0094 EA 00               847 	.dw #0x00EA
   0096 EB 00               848 	.dw #0x00EB
   0098 EC 00               849 	.dw #0x00EC
   009A ED 00               850 	.dw #0x00ED
   009C ED 00               851 	.dw #0x00ED
   009E EE 00               852 	.dw #0x00EE
   00A0 EE 00               853 	.dw #0x00EE
   00A2 EF 00               854 	.dw #0x00EF
   00A4 EF 00               855 	.dw #0x00EF
   00A6 EF 00               856 	.dw #0x00EF
   00A8 EF 00               857 	.dw #0x00EF
   00AA EF 00               858 	.dw #0x00EF
   00AC F0 00               859 	.dw #0x00F0
   00AE EF 00               860 	.dw #0x00EF
   00B0 EF 00               861 	.dw #0x00EF
   00B2 EF 00               862 	.dw #0x00EF
   00B4 EF 00               863 	.dw #0x00EF
   00B6 EF 00               864 	.dw #0x00EF
   00B8 EE 00               865 	.dw #0x00EE
   00BA EE 00               866 	.dw #0x00EE
   00BC ED 00               867 	.dw #0x00ED
   00BE ED 00               868 	.dw #0x00ED
   00C0 EC 00               869 	.dw #0x00EC
   00C2 EB 00               870 	.dw #0x00EB
   00C4 EA 00               871 	.dw #0x00EA
   00C6 E9 00               872 	.dw #0x00E9
   00C8 E8 00               873 	.dw #0x00E8
   00CA E7 00               874 	.dw #0x00E7
   00CC E6 00               875 	.dw #0x00E6
   00CE E5 00               876 	.dw #0x00E5
   00D0 E4 00               877 	.dw #0x00E4
   00D2 E3 00               878 	.dw #0x00E3
   00D4 E1 00               879 	.dw #0x00E1
   00D6 E0 00               880 	.dw #0x00E0
   00D8 DE 00               881 	.dw #0x00DE
   00DA DD 00               882 	.dw #0x00DD
   00DC DB 00               883 	.dw #0x00DB
   00DE DA 00               884 	.dw #0x00DA
   00E0 D8 00               885 	.dw #0x00D8
   00E2 D6 00               886 	.dw #0x00D6
   00E4 D4 00               887 	.dw #0x00D4
   00E6 D2 00               888 	.dw #0x00D2
   00E8 D0 00               889 	.dw #0x00D0
   00EA CE 00               890 	.dw #0x00CE
   00EC CC 00               891 	.dw #0x00CC
   00EE CA 00               892 	.dw #0x00CA
   00F0 C8 00               893 	.dw #0x00C8
   00F2 C6 00               894 	.dw #0x00C6
   00F4 C4 00               895 	.dw #0x00C4
   00F6 C1 00               896 	.dw #0x00C1
   00F8 BF 00               897 	.dw #0x00BF
   00FA BD 00               898 	.dw #0x00BD
   00FC BA 00               899 	.dw #0x00BA
   00FE B8 00               900 	.dw #0x00B8
   0100 B5 00               901 	.dw #0x00B5
   0102 B3 00               902 	.dw #0x00B3
   0104 B0 00               903 	.dw #0x00B0
   0106 AD 00               904 	.dw #0x00AD
   0108 AB 00               905 	.dw #0x00AB
   010A A8 00               906 	.dw #0x00A8
   010C A5 00               907 	.dw #0x00A5
   010E A3 00               908 	.dw #0x00A3
   0110 A0 00               909 	.dw #0x00A0
   0112 9D 00               910 	.dw #0x009D
   0114 9A 00               911 	.dw #0x009A
   0116 98 00               912 	.dw #0x0098
   0118 95 00               913 	.dw #0x0095
   011A 92 00               914 	.dw #0x0092
   011C 8F 00               915 	.dw #0x008F
   011E 8C 00               916 	.dw #0x008C
   0120 89 00               917 	.dw #0x0089
   0122 86 00               918 	.dw #0x0086
   0124 83 00               919 	.dw #0x0083
   0126 80 00               920 	.dw #0x0080
   0128 7D 00               921 	.dw #0x007D
   012A 7A 00               922 	.dw #0x007A
   012C 78 00               923 	.dw #0x0078
   012E 75 00               924 	.dw #0x0075
   0130 72 00               925 	.dw #0x0072
   0132 6F 00               926 	.dw #0x006F
   0134 6C 00               927 	.dw #0x006C
   0136 69 00               928 	.dw #0x0069
   0138 66 00               929 	.dw #0x0066
   013A 63 00               930 	.dw #0x0063
   013C 60 00               931 	.dw #0x0060
   013E 5D 00               932 	.dw #0x005D
   0140 5A 00               933 	.dw #0x005A
   0142 57 00               934 	.dw #0x0057
   0144 55 00               935 	.dw #0x0055
   0146 52 00               936 	.dw #0x0052
   0148 4F 00               937 	.dw #0x004F
   014A 4C 00               938 	.dw #0x004C
   014C 4A 00               939 	.dw #0x004A
   014E 47 00               940 	.dw #0x0047
   0150 44 00               941 	.dw #0x0044
   0152 42 00               942 	.dw #0x0042
   0154 3F 00               943 	.dw #0x003F
   0156 3C 00               944 	.dw #0x003C
   0158 3A 00               945 	.dw #0x003A
   015A 37 00               946 	.dw #0x0037
   015C 35 00               947 	.dw #0x0035
   015E 32 00               948 	.dw #0x0032
   0160 30 00               949 	.dw #0x0030
   0162 2E 00               950 	.dw #0x002E
   0164 2B 00               951 	.dw #0x002B
   0166 29 00               952 	.dw #0x0029
   0168 27 00               953 	.dw #0x0027
   016A 25 00               954 	.dw #0x0025
   016C 23 00               955 	.dw #0x0023
   016E 21 00               956 	.dw #0x0021
   0170 1F 00               957 	.dw #0x001F
   0172 1D 00               958 	.dw #0x001D
   0174 1B 00               959 	.dw #0x001B
   0176 19 00               960 	.dw #0x0019
   0178 17 00               961 	.dw #0x0017
   017A 15 00               962 	.dw #0x0015
   017C 14 00               963 	.dw #0x0014
   017E 12 00               964 	.dw #0x0012
   0180 11 00               965 	.dw #0x0011
   0182 0F 00               966 	.dw #0x000F
   0184 0E 00               967 	.dw #0x000E
   0186 0C 00               968 	.dw #0x000C
   0188 0B 00               969 	.dw #0x000B
   018A 0A 00               970 	.dw #0x000A
   018C 09 00               971 	.dw #0x0009
   018E 08 00               972 	.dw #0x0008
   0190 07 00               973 	.dw #0x0007
   0192 06 00               974 	.dw #0x0006
   0194 05 00               975 	.dw #0x0005
   0196 04 00               976 	.dw #0x0004
   0198 03 00               977 	.dw #0x0003
   019A 02 00               978 	.dw #0x0002
   019C 02 00               979 	.dw #0x0002
   019E 01 00               980 	.dw #0x0001
   01A0 01 00               981 	.dw #0x0001
   01A2 00 00               982 	.dw #0x0000
   01A4 00 00               983 	.dw #0x0000
   01A6 00 00               984 	.dw #0x0000
   01A8 00 00               985 	.dw #0x0000
   01AA 00 00               986 	.dw #0x0000
   01AC 00 00               987 	.dw #0x0000
   01AE 00 00               988 	.dw #0x0000
   01B0 00 00               989 	.dw #0x0000
   01B2 00 00               990 	.dw #0x0000
   01B4 00 00               991 	.dw #0x0000
   01B6 00 00               992 	.dw #0x0000
   01B8 01 00               993 	.dw #0x0001
   01BA 01 00               994 	.dw #0x0001
   01BC 02 00               995 	.dw #0x0002
   01BE 02 00               996 	.dw #0x0002
   01C0 03 00               997 	.dw #0x0003
   01C2 04 00               998 	.dw #0x0004
   01C4 05 00               999 	.dw #0x0005
   01C6 06 00              1000 	.dw #0x0006
   01C8 07 00              1001 	.dw #0x0007
   01CA 08 00              1002 	.dw #0x0008
   01CC 09 00              1003 	.dw #0x0009
   01CE 0A 00              1004 	.dw #0x000A
   01D0 0B 00              1005 	.dw #0x000B
   01D2 0C 00              1006 	.dw #0x000C
   01D4 0E 00              1007 	.dw #0x000E
   01D6 0F 00              1008 	.dw #0x000F
   01D8 11 00              1009 	.dw #0x0011
   01DA 12 00              1010 	.dw #0x0012
   01DC 14 00              1011 	.dw #0x0014
   01DE 15 00              1012 	.dw #0x0015
   01E0 17 00              1013 	.dw #0x0017
   01E2 19 00              1014 	.dw #0x0019
   01E4 1B 00              1015 	.dw #0x001B
   01E6 1D 00              1016 	.dw #0x001D
   01E8 1F 00              1017 	.dw #0x001F
   01EA 21 00              1018 	.dw #0x0021
   01EC 23 00              1019 	.dw #0x0023
   01EE 25 00              1020 	.dw #0x0025
   01F0 27 00              1021 	.dw #0x0027
   01F2 29 00              1022 	.dw #0x0029
   01F4 2B 00              1023 	.dw #0x002B
   01F6 2E 00              1024 	.dw #0x002E
   01F8 30 00              1025 	.dw #0x0030
   01FA 32 00              1026 	.dw #0x0032
   01FC 35 00              1027 	.dw #0x0035
   01FE 37 00              1028 	.dw #0x0037
   0200 3A 00              1029 	.dw #0x003A
   0202 3C 00              1030 	.dw #0x003C
   0204 3F 00              1031 	.dw #0x003F
   0206 42 00              1032 	.dw #0x0042
   0208 44 00              1033 	.dw #0x0044
   020A 47 00              1034 	.dw #0x0047
   020C 4A 00              1035 	.dw #0x004A
   020E 4C 00              1036 	.dw #0x004C
   0210 4F 00              1037 	.dw #0x004F
   0212 52 00              1038 	.dw #0x0052
   0214 55 00              1039 	.dw #0x0055
   0216 57 00              1040 	.dw #0x0057
   0218 5A 00              1041 	.dw #0x005A
   021A 5D 00              1042 	.dw #0x005D
   021C 60 00              1043 	.dw #0x0060
   021E 63 00              1044 	.dw #0x0063
   0220 66 00              1045 	.dw #0x0066
   0222 69 00              1046 	.dw #0x0069
   0224 6C 00              1047 	.dw #0x006C
   0226 6F 00              1048 	.dw #0x006F
   0228 72 00              1049 	.dw #0x0072
   022A 75 00              1050 	.dw #0x0075
   022C                    1051 _tri_center:
   022C 08                 1052 	.db #0x08
   022D 0A                 1053 	.db #0x0A
   022E 12                 1054 	.db #0x12
   022F 10                 1055 	.db #0x10
   0230 00                 1056 	.db #0x00
   0231 02                 1057 	.db #0x02
   0232 08                 1058 	.db #0x08
   0233 0A                 1059 	.db #0x0A
   0234 0B                 1060 	.db #0x0B
   0235 09                 1061 	.db #0x09
   0236 03                 1062 	.db #0x03
   0237 01                 1063 	.db #0x01
   0238 11                 1064 	.db #0x11
   0239 13                 1065 	.db #0x13
   023A 0B                 1066 	.db #0x0B
   023B 09                 1067 	.db #0x09
   023C 0A                 1068 	.db #0x0A
   023D 12                 1069 	.db #0x12
   023E 10                 1070 	.db #0x10
   023F 00                 1071 	.db #0x00
   0240 02                 1072 	.db #0x02
   0241 08                 1073 	.db #0x08
   0242 0A                 1074 	.db #0x0A
   0243 12                 1075 	.db #0x12
   0244 13                 1076 	.db #0x13
   0245 0B                 1077 	.db #0x0B
   0246 09                 1078 	.db #0x09
   0247 03                 1079 	.db #0x03
   0248 01                 1080 	.db #0x01
   0249 11                 1081 	.db #0x11
   024A 13                 1082 	.db #0x13
   024B 0B                 1083 	.db #0x0B
   024C 12                 1084 	.db #0x12
   024D 10                 1085 	.db #0x10
   024E 00                 1086 	.db #0x00
   024F 02                 1087 	.db #0x02
   0250 08                 1088 	.db #0x08
   0251 0A                 1089 	.db #0x0A
   0252 12                 1090 	.db #0x12
   0253 10                 1091 	.db #0x10
   0254 11                 1092 	.db #0x11
   0255 13                 1093 	.db #0x13
   0256 0B                 1094 	.db #0x0B
   0257 09                 1095 	.db #0x09
   0258 03                 1096 	.db #0x03
   0259 01                 1097 	.db #0x01
   025A 11                 1098 	.db #0x11
   025B 13                 1099 	.db #0x13
   025C 10                 1100 	.db #0x10
   025D 00                 1101 	.db #0x00
   025E 02                 1102 	.db #0x02
   025F 08                 1103 	.db #0x08
   0260 0A                 1104 	.db #0x0A
   0261 12                 1105 	.db #0x12
   0262 10                 1106 	.db #0x10
   0263 00                 1107 	.db #0x00
   0264 01                 1108 	.db #0x01
   0265 11                 1109 	.db #0x11
   0266 13                 1110 	.db #0x13
   0267 0B                 1111 	.db #0x0B
   0268 09                 1112 	.db #0x09
   0269 03                 1113 	.db #0x03
   026A 01                 1114 	.db #0x01
   026B 11                 1115 	.db #0x11
   026C 00                 1116 	.db #0x00
   026D 02                 1117 	.db #0x02
   026E 08                 1118 	.db #0x08
   026F 0A                 1119 	.db #0x0A
   0270 12                 1120 	.db #0x12
   0271 10                 1121 	.db #0x10
   0272 00                 1122 	.db #0x00
   0273 02                 1123 	.db #0x02
   0274 03                 1124 	.db #0x03
   0275 01                 1125 	.db #0x01
   0276 11                 1126 	.db #0x11
   0277 13                 1127 	.db #0x13
   0278 0B                 1128 	.db #0x0B
   0279 09                 1129 	.db #0x09
   027A 03                 1130 	.db #0x03
   027B 01                 1131 	.db #0x01
   027C 02                 1132 	.db #0x02
   027D 08                 1133 	.db #0x08
   027E 0A                 1134 	.db #0x0A
   027F 12                 1135 	.db #0x12
   0280 10                 1136 	.db #0x10
   0281 00                 1137 	.db #0x00
   0282 02                 1138 	.db #0x02
   0283 08                 1139 	.db #0x08
   0284 09                 1140 	.db #0x09
   0285 03                 1141 	.db #0x03
   0286 01                 1142 	.db #0x01
   0287 11                 1143 	.db #0x11
   0288 13                 1144 	.db #0x13
   0289 0B                 1145 	.db #0x0B
   028A 09                 1146 	.db #0x09
   028B 03                 1147 	.db #0x03
   028C 01                 1148 	.db #0x01
   028D 0B                 1149 	.db #0x0B
   028E 09                 1150 	.db #0x09
   028F 11                 1151 	.db #0x11
   0290 13                 1152 	.db #0x13
   0291 03                 1153 	.db #0x03
   0292 01                 1154 	.db #0x01
   0293 0B                 1155 	.db #0x0B
   0294 0A                 1156 	.db #0x0A
   0295 00                 1157 	.db #0x00
   0296 02                 1158 	.db #0x02
   0297 12                 1159 	.db #0x12
   0298 10                 1160 	.db #0x10
   0299 08                 1161 	.db #0x08
   029A 0A                 1162 	.db #0x0A
   029B 00                 1163 	.db #0x00
   029C 03                 1164 	.db #0x03
   029D 01                 1165 	.db #0x01
   029E 0B                 1166 	.db #0x0B
   029F 09                 1167 	.db #0x09
   02A0 11                 1168 	.db #0x11
   02A1 13                 1169 	.db #0x13
   02A2 03                 1170 	.db #0x03
   02A3 01                 1171 	.db #0x01
   02A4 00                 1172 	.db #0x00
   02A5 02                 1173 	.db #0x02
   02A6 12                 1174 	.db #0x12
   02A7 10                 1175 	.db #0x10
   02A8 08                 1176 	.db #0x08
   02A9 0A                 1177 	.db #0x0A
   02AA 00                 1178 	.db #0x00
   02AB 02                 1179 	.db #0x02
   02AC 13                 1180 	.db #0x13
   02AD 03                 1181 	.db #0x03
   02AE 01                 1182 	.db #0x01
   02AF 0B                 1183 	.db #0x0B
   02B0 09                 1184 	.db #0x09
   02B1 11                 1185 	.db #0x11
   02B2 13                 1186 	.db #0x13
   02B3 03                 1187 	.db #0x03
   02B4 02                 1188 	.db #0x02
   02B5 12                 1189 	.db #0x12
   02B6 10                 1190 	.db #0x10
   02B7 08                 1191 	.db #0x08
   02B8 0A                 1192 	.db #0x0A
   02B9 00                 1193 	.db #0x00
   02BA 02                 1194 	.db #0x02
   02BB 12                 1195 	.db #0x12
   02BC 11                 1196 	.db #0x11
   02BD 13                 1197 	.db #0x13
   02BE 03                 1198 	.db #0x03
   02BF 01                 1199 	.db #0x01
   02C0 0B                 1200 	.db #0x0B
   02C1 09                 1201 	.db #0x09
   02C2 11                 1202 	.db #0x11
   02C3 13                 1203 	.db #0x13
   02C4 12                 1204 	.db #0x12
   02C5 10                 1205 	.db #0x10
   02C6 08                 1206 	.db #0x08
   02C7 0A                 1207 	.db #0x0A
   02C8 00                 1208 	.db #0x00
   02C9 02                 1209 	.db #0x02
   02CA 12                 1210 	.db #0x12
   02CB 10                 1211 	.db #0x10
   02CC 09                 1212 	.db #0x09
   02CD 11                 1213 	.db #0x11
   02CE 13                 1214 	.db #0x13
   02CF 03                 1215 	.db #0x03
   02D0 01                 1216 	.db #0x01
   02D1 0B                 1217 	.db #0x0B
   02D2 09                 1218 	.db #0x09
   02D3 11                 1219 	.db #0x11
   02D4 10                 1220 	.db #0x10
   02D5 08                 1221 	.db #0x08
   02D6 0A                 1222 	.db #0x0A
   02D7 00                 1223 	.db #0x00
   02D8 02                 1224 	.db #0x02
   02D9 12                 1225 	.db #0x12
   02DA 10                 1226 	.db #0x10
   02DB 08                 1227 	.db #0x08
   02DC 0B                 1228 	.db #0x0B
   02DD 09                 1229 	.db #0x09
   02DE 11                 1230 	.db #0x11
   02DF 13                 1231 	.db #0x13
   02E0 03                 1232 	.db #0x03
   02E1 01                 1233 	.db #0x01
   02E2 0B                 1234 	.db #0x0B
   02E3 09                 1235 	.db #0x09
   02E4 08                 1236 	.db #0x08
   02E5 0A                 1237 	.db #0x0A
   02E6 00                 1238 	.db #0x00
   02E7 02                 1239 	.db #0x02
   02E8 12                 1240 	.db #0x12
   02E9 10                 1241 	.db #0x10
   02EA 08                 1242 	.db #0x08
   02EB 0A                 1243 	.db #0x0A
   02EC                    1244 _tri_up:
   02EC 0A                 1245 	.db #0x0A
   02ED 12                 1246 	.db #0x12
   02EE 10                 1247 	.db #0x10
   02EF 00                 1248 	.db #0x00
   02F0 02                 1249 	.db #0x02
   02F1 08                 1250 	.db #0x08
   02F2 0A                 1251 	.db #0x0A
   02F3 12                 1252 	.db #0x12
   02F4 13                 1253 	.db #0x13
   02F5 0B                 1254 	.db #0x0B
   02F6 09                 1255 	.db #0x09
   02F7 03                 1256 	.db #0x03
   02F8 01                 1257 	.db #0x01
   02F9 11                 1258 	.db #0x11
   02FA 13                 1259 	.db #0x13
   02FB 0B                 1260 	.db #0x0B
   02FC 12                 1261 	.db #0x12
   02FD 10                 1262 	.db #0x10
   02FE 00                 1263 	.db #0x00
   02FF 02                 1264 	.db #0x02
   0300 08                 1265 	.db #0x08
   0301 0A                 1266 	.db #0x0A
   0302 12                 1267 	.db #0x12
   0303 10                 1268 	.db #0x10
   0304 11                 1269 	.db #0x11
   0305 13                 1270 	.db #0x13
   0306 0B                 1271 	.db #0x0B
   0307 09                 1272 	.db #0x09
   0308 03                 1273 	.db #0x03
   0309 01                 1274 	.db #0x01
   030A 11                 1275 	.db #0x11
   030B 13                 1276 	.db #0x13
   030C 10                 1277 	.db #0x10
   030D 00                 1278 	.db #0x00
   030E 02                 1279 	.db #0x02
   030F 08                 1280 	.db #0x08
   0310 0A                 1281 	.db #0x0A
   0311 12                 1282 	.db #0x12
   0312 10                 1283 	.db #0x10
   0313 00                 1284 	.db #0x00
   0314 01                 1285 	.db #0x01
   0315 11                 1286 	.db #0x11
   0316 13                 1287 	.db #0x13
   0317 0B                 1288 	.db #0x0B
   0318 09                 1289 	.db #0x09
   0319 03                 1290 	.db #0x03
   031A 01                 1291 	.db #0x01
   031B 11                 1292 	.db #0x11
   031C 00                 1293 	.db #0x00
   031D 02                 1294 	.db #0x02
   031E 08                 1295 	.db #0x08
   031F 0A                 1296 	.db #0x0A
   0320 12                 1297 	.db #0x12
   0321 10                 1298 	.db #0x10
   0322 00                 1299 	.db #0x00
   0323 02                 1300 	.db #0x02
   0324 03                 1301 	.db #0x03
   0325 01                 1302 	.db #0x01
   0326 11                 1303 	.db #0x11
   0327 13                 1304 	.db #0x13
   0328 0B                 1305 	.db #0x0B
   0329 09                 1306 	.db #0x09
   032A 03                 1307 	.db #0x03
   032B 01                 1308 	.db #0x01
   032C 02                 1309 	.db #0x02
   032D 08                 1310 	.db #0x08
   032E 0A                 1311 	.db #0x0A
   032F 12                 1312 	.db #0x12
   0330 10                 1313 	.db #0x10
   0331 00                 1314 	.db #0x00
   0332 02                 1315 	.db #0x02
   0333 08                 1316 	.db #0x08
   0334 09                 1317 	.db #0x09
   0335 03                 1318 	.db #0x03
   0336 01                 1319 	.db #0x01
   0337 11                 1320 	.db #0x11
   0338 13                 1321 	.db #0x13
   0339 0B                 1322 	.db #0x0B
   033A 09                 1323 	.db #0x09
   033B 03                 1324 	.db #0x03
   033C 08                 1325 	.db #0x08
   033D 0A                 1326 	.db #0x0A
   033E 12                 1327 	.db #0x12
   033F 10                 1328 	.db #0x10
   0340 00                 1329 	.db #0x00
   0341 02                 1330 	.db #0x02
   0342 08                 1331 	.db #0x08
   0343 0A                 1332 	.db #0x0A
   0344 0B                 1333 	.db #0x0B
   0345 09                 1334 	.db #0x09
   0346 03                 1335 	.db #0x03
   0347 01                 1336 	.db #0x01
   0348 11                 1337 	.db #0x11
   0349 13                 1338 	.db #0x13
   034A 0B                 1339 	.db #0x0B
   034B 09                 1340 	.db #0x09
   034C 0A                 1341 	.db #0x0A
   034D 12                 1342 	.db #0x12
   034E 10                 1343 	.db #0x10
   034F 00                 1344 	.db #0x00
   0350 02                 1345 	.db #0x02
   0351 08                 1346 	.db #0x08
   0352 0A                 1347 	.db #0x0A
   0353 12                 1348 	.db #0x12
   0354 13                 1349 	.db #0x13
   0355 0B                 1350 	.db #0x0B
   0356 09                 1351 	.db #0x09
   0357 03                 1352 	.db #0x03
   0358 01                 1353 	.db #0x01
   0359 11                 1354 	.db #0x11
   035A 13                 1355 	.db #0x13
   035B 0B                 1356 	.db #0x0B
   035C 12                 1357 	.db #0x12
   035D 10                 1358 	.db #0x10
   035E 00                 1359 	.db #0x00
   035F 02                 1360 	.db #0x02
   0360 08                 1361 	.db #0x08
   0361 0A                 1362 	.db #0x0A
   0362 12                 1363 	.db #0x12
   0363 10                 1364 	.db #0x10
   0364 11                 1365 	.db #0x11
   0365 13                 1366 	.db #0x13
   0366 0B                 1367 	.db #0x0B
   0367 09                 1368 	.db #0x09
   0368 03                 1369 	.db #0x03
   0369 01                 1370 	.db #0x01
   036A 11                 1371 	.db #0x11
   036B 13                 1372 	.db #0x13
   036C 10                 1373 	.db #0x10
   036D 00                 1374 	.db #0x00
   036E 02                 1375 	.db #0x02
   036F 08                 1376 	.db #0x08
   0370 0A                 1377 	.db #0x0A
   0371 12                 1378 	.db #0x12
   0372 10                 1379 	.db #0x10
   0373 00                 1380 	.db #0x00
   0374 01                 1381 	.db #0x01
   0375 11                 1382 	.db #0x11
   0376 13                 1383 	.db #0x13
   0377 0B                 1384 	.db #0x0B
   0378 09                 1385 	.db #0x09
   0379 03                 1386 	.db #0x03
   037A 01                 1387 	.db #0x01
   037B 11                 1388 	.db #0x11
   037C 00                 1389 	.db #0x00
   037D 02                 1390 	.db #0x02
   037E 08                 1391 	.db #0x08
   037F 0A                 1392 	.db #0x0A
   0380 12                 1393 	.db #0x12
   0381 10                 1394 	.db #0x10
   0382 00                 1395 	.db #0x00
   0383 02                 1396 	.db #0x02
   0384 03                 1397 	.db #0x03
   0385 01                 1398 	.db #0x01
   0386 11                 1399 	.db #0x11
   0387 13                 1400 	.db #0x13
   0388 0B                 1401 	.db #0x0B
   0389 09                 1402 	.db #0x09
   038A 03                 1403 	.db #0x03
   038B 01                 1404 	.db #0x01
   038C 02                 1405 	.db #0x02
   038D 08                 1406 	.db #0x08
   038E 0A                 1407 	.db #0x0A
   038F 12                 1408 	.db #0x12
   0390 10                 1409 	.db #0x10
   0391 00                 1410 	.db #0x00
   0392 02                 1411 	.db #0x02
   0393 08                 1412 	.db #0x08
   0394 09                 1413 	.db #0x09
   0395 03                 1414 	.db #0x03
   0396 01                 1415 	.db #0x01
   0397 11                 1416 	.db #0x11
   0398 13                 1417 	.db #0x13
   0399 0B                 1418 	.db #0x0B
   039A 09                 1419 	.db #0x09
   039B 03                 1420 	.db #0x03
   039C 08                 1421 	.db #0x08
   039D 0A                 1422 	.db #0x0A
   039E 12                 1423 	.db #0x12
   039F 10                 1424 	.db #0x10
   03A0 00                 1425 	.db #0x00
   03A1 02                 1426 	.db #0x02
   03A2 08                 1427 	.db #0x08
   03A3 0A                 1428 	.db #0x0A
   03A4 0B                 1429 	.db #0x0B
   03A5 09                 1430 	.db #0x09
   03A6 03                 1431 	.db #0x03
   03A7 01                 1432 	.db #0x01
   03A8 11                 1433 	.db #0x11
   03A9 13                 1434 	.db #0x13
   03AA 0B                 1435 	.db #0x0B
   03AB 09                 1436 	.db #0x09
   03AC                    1437 _tri_dia:
   03AC 05                 1438 	.db #0x05
   03AD 1B                 1439 	.db #0x1B
   03AE 0F                 1440 	.db #0x0F
   03AF 1D                 1441 	.db #0x1D
   03B0 15                 1442 	.db #0x15
   03B1 19                 1443 	.db #0x19
   03B2 05                 1444 	.db #0x05
   03B3 1B                 1445 	.db #0x1B
   03B4 0F                 1446 	.db #0x0F
   03B5 1D                 1447 	.db #0x1D
   03B6 15                 1448 	.db #0x15
   03B7 19                 1449 	.db #0x19
   03B8 05                 1450 	.db #0x05
   03B9 1B                 1451 	.db #0x1B
   03BA 0F                 1452 	.db #0x0F
   03BB 1D                 1453 	.db #0x1D
   03BC 1D                 1454 	.db #0x1D
   03BD 05                 1455 	.db #0x05
   03BE 19                 1456 	.db #0x19
   03BF 0F                 1457 	.db #0x0F
   03C0 1B                 1458 	.db #0x1B
   03C1 15                 1459 	.db #0x15
   03C2 1D                 1460 	.db #0x1D
   03C3 05                 1461 	.db #0x05
   03C4 19                 1462 	.db #0x19
   03C5 0F                 1463 	.db #0x0F
   03C6 1B                 1464 	.db #0x1B
   03C7 15                 1465 	.db #0x15
   03C8 1D                 1466 	.db #0x1D
   03C9 05                 1467 	.db #0x05
   03CA 19                 1468 	.db #0x19
   03CB 0F                 1469 	.db #0x0F
   03CC 0F                 1470 	.db #0x0F
   03CD 1D                 1471 	.db #0x1D
   03CE 15                 1472 	.db #0x15
   03CF 19                 1473 	.db #0x19
   03D0 05                 1474 	.db #0x05
   03D1 1B                 1475 	.db #0x1B
   03D2 0F                 1476 	.db #0x0F
   03D3 1D                 1477 	.db #0x1D
   03D4 15                 1478 	.db #0x15
   03D5 19                 1479 	.db #0x19
   03D6 05                 1480 	.db #0x05
   03D7 1B                 1481 	.db #0x1B
   03D8 0F                 1482 	.db #0x0F
   03D9 1D                 1483 	.db #0x1D
   03DA 15                 1484 	.db #0x15
   03DB 19                 1485 	.db #0x19
   03DC 19                 1486 	.db #0x19
   03DD 0F                 1487 	.db #0x0F
   03DE 1B                 1488 	.db #0x1B
   03DF 15                 1489 	.db #0x15
   03E0 1D                 1490 	.db #0x1D
   03E1 05                 1491 	.db #0x05
   03E2 19                 1492 	.db #0x19
   03E3 0F                 1493 	.db #0x0F
   03E4 1B                 1494 	.db #0x1B
   03E5 15                 1495 	.db #0x15
   03E6 1D                 1496 	.db #0x1D
   03E7 05                 1497 	.db #0x05
   03E8 19                 1498 	.db #0x19
   03E9 0F                 1499 	.db #0x0F
   03EA 1B                 1500 	.db #0x1B
   03EB 15                 1501 	.db #0x15
   03EC 15                 1502 	.db #0x15
   03ED 19                 1503 	.db #0x19
   03EE 05                 1504 	.db #0x05
   03EF 1B                 1505 	.db #0x1B
   03F0 0F                 1506 	.db #0x0F
   03F1 1D                 1507 	.db #0x1D
   03F2 15                 1508 	.db #0x15
   03F3 19                 1509 	.db #0x19
   03F4 05                 1510 	.db #0x05
   03F5 1B                 1511 	.db #0x1B
   03F6 0F                 1512 	.db #0x0F
   03F7 1D                 1513 	.db #0x1D
   03F8 15                 1514 	.db #0x15
   03F9 19                 1515 	.db #0x19
   03FA 05                 1516 	.db #0x05
   03FB 1B                 1517 	.db #0x1B
   03FC 1B                 1518 	.db #0x1B
   03FD 15                 1519 	.db #0x15
   03FE 1D                 1520 	.db #0x1D
   03FF 05                 1521 	.db #0x05
   0400 19                 1522 	.db #0x19
   0401 0F                 1523 	.db #0x0F
   0402 1B                 1524 	.db #0x1B
   0403 15                 1525 	.db #0x15
   0404 1D                 1526 	.db #0x1D
   0405 05                 1527 	.db #0x05
   0406 19                 1528 	.db #0x19
   0407 0F                 1529 	.db #0x0F
   0408 1B                 1530 	.db #0x1B
   0409 15                 1531 	.db #0x15
   040A 1D                 1532 	.db #0x1D
   040B 05                 1533 	.db #0x05
   040C 05                 1534 	.db #0x05
   040D 1B                 1535 	.db #0x1B
   040E 0F                 1536 	.db #0x0F
   040F 1D                 1537 	.db #0x1D
   0410 15                 1538 	.db #0x15
   0411 19                 1539 	.db #0x19
   0412 05                 1540 	.db #0x05
   0413 1B                 1541 	.db #0x1B
   0414 0F                 1542 	.db #0x0F
   0415 1D                 1543 	.db #0x1D
   0416 15                 1544 	.db #0x15
   0417 19                 1545 	.db #0x19
   0418 05                 1546 	.db #0x05
   0419 1B                 1547 	.db #0x1B
   041A 0F                 1548 	.db #0x0F
   041B 1D                 1549 	.db #0x1D
   041C 1D                 1550 	.db #0x1D
   041D 05                 1551 	.db #0x05
   041E 19                 1552 	.db #0x19
   041F 0F                 1553 	.db #0x0F
   0420 1B                 1554 	.db #0x1B
   0421 15                 1555 	.db #0x15
   0422 1D                 1556 	.db #0x1D
   0423 05                 1557 	.db #0x05
   0424 19                 1558 	.db #0x19
   0425 0F                 1559 	.db #0x0F
   0426 1B                 1560 	.db #0x1B
   0427 15                 1561 	.db #0x15
   0428 1D                 1562 	.db #0x1D
   0429 05                 1563 	.db #0x05
   042A 19                 1564 	.db #0x19
   042B 0F                 1565 	.db #0x0F
   042C 0F                 1566 	.db #0x0F
   042D 1D                 1567 	.db #0x1D
   042E 15                 1568 	.db #0x15
   042F 19                 1569 	.db #0x19
   0430 05                 1570 	.db #0x05
   0431 1B                 1571 	.db #0x1B
   0432 0F                 1572 	.db #0x0F
   0433 1D                 1573 	.db #0x1D
   0434 15                 1574 	.db #0x15
   0435 19                 1575 	.db #0x19
   0436 05                 1576 	.db #0x05
   0437 1B                 1577 	.db #0x1B
   0438 0F                 1578 	.db #0x0F
   0439 1D                 1579 	.db #0x1D
   043A 15                 1580 	.db #0x15
   043B 19                 1581 	.db #0x19
   043C 19                 1582 	.db #0x19
   043D 0F                 1583 	.db #0x0F
   043E 1B                 1584 	.db #0x1B
   043F 15                 1585 	.db #0x15
   0440 1D                 1586 	.db #0x1D
   0441 05                 1587 	.db #0x05
   0442 19                 1588 	.db #0x19
   0443 0F                 1589 	.db #0x0F
   0444 1B                 1590 	.db #0x1B
   0445 15                 1591 	.db #0x15
   0446 1D                 1592 	.db #0x1D
   0447 05                 1593 	.db #0x05
   0448 19                 1594 	.db #0x19
   0449 0F                 1595 	.db #0x0F
   044A 1B                 1596 	.db #0x1B
   044B 15                 1597 	.db #0x15
   044C 15                 1598 	.db #0x15
   044D 19                 1599 	.db #0x19
   044E 05                 1600 	.db #0x05
   044F 1B                 1601 	.db #0x1B
   0450 0F                 1602 	.db #0x0F
   0451 1D                 1603 	.db #0x1D
   0452 15                 1604 	.db #0x15
   0453 19                 1605 	.db #0x19
   0454 05                 1606 	.db #0x05
   0455 1B                 1607 	.db #0x1B
   0456 0F                 1608 	.db #0x0F
   0457 1D                 1609 	.db #0x1D
   0458 15                 1610 	.db #0x15
   0459 19                 1611 	.db #0x19
   045A 05                 1612 	.db #0x05
   045B 1B                 1613 	.db #0x1B
   045C 1B                 1614 	.db #0x1B
   045D 15                 1615 	.db #0x15
   045E 1D                 1616 	.db #0x1D
   045F 05                 1617 	.db #0x05
   0460 19                 1618 	.db #0x19
   0461 0F                 1619 	.db #0x0F
   0462 1B                 1620 	.db #0x1B
   0463 15                 1621 	.db #0x15
   0464 1D                 1622 	.db #0x1D
   0465 05                 1623 	.db #0x05
   0466 19                 1624 	.db #0x19
   0467 0F                 1625 	.db #0x0F
   0468 1B                 1626 	.db #0x1B
   0469 15                 1627 	.db #0x15
   046A 1D                 1628 	.db #0x1D
   046B 05                 1629 	.db #0x05
   046C                    1630 _tri_side1:
   046C 0A                 1631 	.db #0x0A
   046D 12                 1632 	.db #0x12
   046E 10                 1633 	.db #0x10
   046F 00                 1634 	.db #0x00
   0470 02                 1635 	.db #0x02
   0471 08                 1636 	.db #0x08
   0472 0A                 1637 	.db #0x0A
   0473 12                 1638 	.db #0x12
   0474 10                 1639 	.db #0x10
   0475 00                 1640 	.db #0x00
   0476 02                 1641 	.db #0x02
   0477 08                 1642 	.db #0x08
   0478 0A                 1643 	.db #0x0A
   0479 12                 1644 	.db #0x12
   047A 10                 1645 	.db #0x10
   047B 00                 1646 	.db #0x00
   047C 12                 1647 	.db #0x12
   047D 10                 1648 	.db #0x10
   047E 00                 1649 	.db #0x00
   047F 02                 1650 	.db #0x02
   0480 08                 1651 	.db #0x08
   0481 0A                 1652 	.db #0x0A
   0482 12                 1653 	.db #0x12
   0483 10                 1654 	.db #0x10
   0484 00                 1655 	.db #0x00
   0485 02                 1656 	.db #0x02
   0486 08                 1657 	.db #0x08
   0487 0A                 1658 	.db #0x0A
   0488 12                 1659 	.db #0x12
   0489 10                 1660 	.db #0x10
   048A 00                 1661 	.db #0x00
   048B 02                 1662 	.db #0x02
   048C 10                 1663 	.db #0x10
   048D 00                 1664 	.db #0x00
   048E 02                 1665 	.db #0x02
   048F 08                 1666 	.db #0x08
   0490 0A                 1667 	.db #0x0A
   0491 12                 1668 	.db #0x12
   0492 10                 1669 	.db #0x10
   0493 00                 1670 	.db #0x00
   0494 02                 1671 	.db #0x02
   0495 08                 1672 	.db #0x08
   0496 0A                 1673 	.db #0x0A
   0497 12                 1674 	.db #0x12
   0498 10                 1675 	.db #0x10
   0499 00                 1676 	.db #0x00
   049A 02                 1677 	.db #0x02
   049B 08                 1678 	.db #0x08
   049C 00                 1679 	.db #0x00
   049D 02                 1680 	.db #0x02
   049E 08                 1681 	.db #0x08
   049F 0A                 1682 	.db #0x0A
   04A0 12                 1683 	.db #0x12
   04A1 10                 1684 	.db #0x10
   04A2 00                 1685 	.db #0x00
   04A3 02                 1686 	.db #0x02
   04A4 08                 1687 	.db #0x08
   04A5 0A                 1688 	.db #0x0A
   04A6 12                 1689 	.db #0x12
   04A7 10                 1690 	.db #0x10
   04A8 00                 1691 	.db #0x00
   04A9 02                 1692 	.db #0x02
   04AA 08                 1693 	.db #0x08
   04AB 0A                 1694 	.db #0x0A
   04AC 02                 1695 	.db #0x02
   04AD 08                 1696 	.db #0x08
   04AE 0A                 1697 	.db #0x0A
   04AF 12                 1698 	.db #0x12
   04B0 10                 1699 	.db #0x10
   04B1 00                 1700 	.db #0x00
   04B2 02                 1701 	.db #0x02
   04B3 08                 1702 	.db #0x08
   04B4 0A                 1703 	.db #0x0A
   04B5 12                 1704 	.db #0x12
   04B6 10                 1705 	.db #0x10
   04B7 00                 1706 	.db #0x00
   04B8 02                 1707 	.db #0x02
   04B9 08                 1708 	.db #0x08
   04BA 0A                 1709 	.db #0x0A
   04BB 12                 1710 	.db #0x12
   04BC 08                 1711 	.db #0x08
   04BD 0A                 1712 	.db #0x0A
   04BE 12                 1713 	.db #0x12
   04BF 10                 1714 	.db #0x10
   04C0 00                 1715 	.db #0x00
   04C1 02                 1716 	.db #0x02
   04C2 08                 1717 	.db #0x08
   04C3 0A                 1718 	.db #0x0A
   04C4 12                 1719 	.db #0x12
   04C5 10                 1720 	.db #0x10
   04C6 00                 1721 	.db #0x00
   04C7 02                 1722 	.db #0x02
   04C8 08                 1723 	.db #0x08
   04C9 0A                 1724 	.db #0x0A
   04CA 12                 1725 	.db #0x12
   04CB 10                 1726 	.db #0x10
   04CC 0A                 1727 	.db #0x0A
   04CD 12                 1728 	.db #0x12
   04CE 10                 1729 	.db #0x10
   04CF 00                 1730 	.db #0x00
   04D0 02                 1731 	.db #0x02
   04D1 08                 1732 	.db #0x08
   04D2 0A                 1733 	.db #0x0A
   04D3 12                 1734 	.db #0x12
   04D4 10                 1735 	.db #0x10
   04D5 00                 1736 	.db #0x00
   04D6 02                 1737 	.db #0x02
   04D7 08                 1738 	.db #0x08
   04D8 0A                 1739 	.db #0x0A
   04D9 12                 1740 	.db #0x12
   04DA 10                 1741 	.db #0x10
   04DB 00                 1742 	.db #0x00
   04DC 12                 1743 	.db #0x12
   04DD 10                 1744 	.db #0x10
   04DE 00                 1745 	.db #0x00
   04DF 02                 1746 	.db #0x02
   04E0 08                 1747 	.db #0x08
   04E1 0A                 1748 	.db #0x0A
   04E2 12                 1749 	.db #0x12
   04E3 10                 1750 	.db #0x10
   04E4 00                 1751 	.db #0x00
   04E5 02                 1752 	.db #0x02
   04E6 08                 1753 	.db #0x08
   04E7 0A                 1754 	.db #0x0A
   04E8 12                 1755 	.db #0x12
   04E9 10                 1756 	.db #0x10
   04EA 00                 1757 	.db #0x00
   04EB 02                 1758 	.db #0x02
   04EC 10                 1759 	.db #0x10
   04ED 00                 1760 	.db #0x00
   04EE 02                 1761 	.db #0x02
   04EF 08                 1762 	.db #0x08
   04F0 0A                 1763 	.db #0x0A
   04F1 12                 1764 	.db #0x12
   04F2 10                 1765 	.db #0x10
   04F3 00                 1766 	.db #0x00
   04F4 02                 1767 	.db #0x02
   04F5 08                 1768 	.db #0x08
   04F6 0A                 1769 	.db #0x0A
   04F7 12                 1770 	.db #0x12
   04F8 10                 1771 	.db #0x10
   04F9 00                 1772 	.db #0x00
   04FA 02                 1773 	.db #0x02
   04FB 08                 1774 	.db #0x08
   04FC 00                 1775 	.db #0x00
   04FD 02                 1776 	.db #0x02
   04FE 08                 1777 	.db #0x08
   04FF 0A                 1778 	.db #0x0A
   0500 12                 1779 	.db #0x12
   0501 10                 1780 	.db #0x10
   0502 00                 1781 	.db #0x00
   0503 02                 1782 	.db #0x02
   0504 08                 1783 	.db #0x08
   0505 0A                 1784 	.db #0x0A
   0506 12                 1785 	.db #0x12
   0507 10                 1786 	.db #0x10
   0508 00                 1787 	.db #0x00
   0509 02                 1788 	.db #0x02
   050A 08                 1789 	.db #0x08
   050B 0A                 1790 	.db #0x0A
   050C 02                 1791 	.db #0x02
   050D 08                 1792 	.db #0x08
   050E 0A                 1793 	.db #0x0A
   050F 12                 1794 	.db #0x12
   0510 10                 1795 	.db #0x10
   0511 00                 1796 	.db #0x00
   0512 02                 1797 	.db #0x02
   0513 08                 1798 	.db #0x08
   0514 0A                 1799 	.db #0x0A
   0515 12                 1800 	.db #0x12
   0516 10                 1801 	.db #0x10
   0517 00                 1802 	.db #0x00
   0518 02                 1803 	.db #0x02
   0519 08                 1804 	.db #0x08
   051A 0A                 1805 	.db #0x0A
   051B 12                 1806 	.db #0x12
   051C 08                 1807 	.db #0x08
   051D 0A                 1808 	.db #0x0A
   051E 12                 1809 	.db #0x12
   051F 10                 1810 	.db #0x10
   0520 00                 1811 	.db #0x00
   0521 02                 1812 	.db #0x02
   0522 08                 1813 	.db #0x08
   0523 0A                 1814 	.db #0x0A
   0524 12                 1815 	.db #0x12
   0525 10                 1816 	.db #0x10
   0526 00                 1817 	.db #0x00
   0527 02                 1818 	.db #0x02
   0528 08                 1819 	.db #0x08
   0529 0A                 1820 	.db #0x0A
   052A 12                 1821 	.db #0x12
   052B 10                 1822 	.db #0x10
   052C                    1823 _tri_side2:
   052C 00                 1824 	.db #0x00
   052D 10                 1825 	.db #0x10
   052E 12                 1826 	.db #0x12
   052F 0A                 1827 	.db #0x0A
   0530 08                 1828 	.db #0x08
   0531 02                 1829 	.db #0x02
   0532 00                 1830 	.db #0x00
   0533 10                 1831 	.db #0x10
   0534 12                 1832 	.db #0x12
   0535 0A                 1833 	.db #0x0A
   0536 08                 1834 	.db #0x08
   0537 02                 1835 	.db #0x02
   0538 00                 1836 	.db #0x00
   0539 10                 1837 	.db #0x10
   053A 12                 1838 	.db #0x12
   053B 0A                 1839 	.db #0x0A
   053C 02                 1840 	.db #0x02
   053D 00                 1841 	.db #0x00
   053E 10                 1842 	.db #0x10
   053F 12                 1843 	.db #0x12
   0540 0A                 1844 	.db #0x0A
   0541 08                 1845 	.db #0x08
   0542 02                 1846 	.db #0x02
   0543 00                 1847 	.db #0x00
   0544 10                 1848 	.db #0x10
   0545 12                 1849 	.db #0x12
   0546 0A                 1850 	.db #0x0A
   0547 08                 1851 	.db #0x08
   0548 02                 1852 	.db #0x02
   0549 00                 1853 	.db #0x00
   054A 10                 1854 	.db #0x10
   054B 12                 1855 	.db #0x12
   054C 08                 1856 	.db #0x08
   054D 02                 1857 	.db #0x02
   054E 00                 1858 	.db #0x00
   054F 10                 1859 	.db #0x10
   0550 12                 1860 	.db #0x12
   0551 0A                 1861 	.db #0x0A
   0552 08                 1862 	.db #0x08
   0553 02                 1863 	.db #0x02
   0554 00                 1864 	.db #0x00
   0555 10                 1865 	.db #0x10
   0556 12                 1866 	.db #0x12
   0557 0A                 1867 	.db #0x0A
   0558 08                 1868 	.db #0x08
   0559 02                 1869 	.db #0x02
   055A 00                 1870 	.db #0x00
   055B 10                 1871 	.db #0x10
   055C 0A                 1872 	.db #0x0A
   055D 08                 1873 	.db #0x08
   055E 02                 1874 	.db #0x02
   055F 00                 1875 	.db #0x00
   0560 10                 1876 	.db #0x10
   0561 12                 1877 	.db #0x12
   0562 0A                 1878 	.db #0x0A
   0563 08                 1879 	.db #0x08
   0564 02                 1880 	.db #0x02
   0565 00                 1881 	.db #0x00
   0566 10                 1882 	.db #0x10
   0567 12                 1883 	.db #0x12
   0568 0A                 1884 	.db #0x0A
   0569 08                 1885 	.db #0x08
   056A 02                 1886 	.db #0x02
   056B 00                 1887 	.db #0x00
   056C 12                 1888 	.db #0x12
   056D 0A                 1889 	.db #0x0A
   056E 08                 1890 	.db #0x08
   056F 02                 1891 	.db #0x02
   0570 00                 1892 	.db #0x00
   0571 10                 1893 	.db #0x10
   0572 12                 1894 	.db #0x12
   0573 0A                 1895 	.db #0x0A
   0574 08                 1896 	.db #0x08
   0575 02                 1897 	.db #0x02
   0576 00                 1898 	.db #0x00
   0577 10                 1899 	.db #0x10
   0578 12                 1900 	.db #0x12
   0579 0A                 1901 	.db #0x0A
   057A 08                 1902 	.db #0x08
   057B 02                 1903 	.db #0x02
   057C 10                 1904 	.db #0x10
   057D 12                 1905 	.db #0x12
   057E 0A                 1906 	.db #0x0A
   057F 08                 1907 	.db #0x08
   0580 02                 1908 	.db #0x02
   0581 00                 1909 	.db #0x00
   0582 10                 1910 	.db #0x10
   0583 12                 1911 	.db #0x12
   0584 0A                 1912 	.db #0x0A
   0585 08                 1913 	.db #0x08
   0586 02                 1914 	.db #0x02
   0587 00                 1915 	.db #0x00
   0588 10                 1916 	.db #0x10
   0589 12                 1917 	.db #0x12
   058A 0A                 1918 	.db #0x0A
   058B 08                 1919 	.db #0x08
   058C 00                 1920 	.db #0x00
   058D 10                 1921 	.db #0x10
   058E 12                 1922 	.db #0x12
   058F 0A                 1923 	.db #0x0A
   0590 08                 1924 	.db #0x08
   0591 02                 1925 	.db #0x02
   0592 00                 1926 	.db #0x00
   0593 10                 1927 	.db #0x10
   0594 12                 1928 	.db #0x12
   0595 0A                 1929 	.db #0x0A
   0596 08                 1930 	.db #0x08
   0597 02                 1931 	.db #0x02
   0598 00                 1932 	.db #0x00
   0599 10                 1933 	.db #0x10
   059A 12                 1934 	.db #0x12
   059B 0A                 1935 	.db #0x0A
   059C 02                 1936 	.db #0x02
   059D 00                 1937 	.db #0x00
   059E 10                 1938 	.db #0x10
   059F 12                 1939 	.db #0x12
   05A0 0A                 1940 	.db #0x0A
   05A1 08                 1941 	.db #0x08
   05A2 02                 1942 	.db #0x02
   05A3 00                 1943 	.db #0x00
   05A4 10                 1944 	.db #0x10
   05A5 12                 1945 	.db #0x12
   05A6 0A                 1946 	.db #0x0A
   05A7 08                 1947 	.db #0x08
   05A8 02                 1948 	.db #0x02
   05A9 00                 1949 	.db #0x00
   05AA 10                 1950 	.db #0x10
   05AB 12                 1951 	.db #0x12
   05AC 08                 1952 	.db #0x08
   05AD 02                 1953 	.db #0x02
   05AE 00                 1954 	.db #0x00
   05AF 10                 1955 	.db #0x10
   05B0 12                 1956 	.db #0x12
   05B1 0A                 1957 	.db #0x0A
   05B2 08                 1958 	.db #0x08
   05B3 02                 1959 	.db #0x02
   05B4 00                 1960 	.db #0x00
   05B5 10                 1961 	.db #0x10
   05B6 12                 1962 	.db #0x12
   05B7 0A                 1963 	.db #0x0A
   05B8 08                 1964 	.db #0x08
   05B9 02                 1965 	.db #0x02
   05BA 00                 1966 	.db #0x00
   05BB 10                 1967 	.db #0x10
   05BC 0A                 1968 	.db #0x0A
   05BD 08                 1969 	.db #0x08
   05BE 02                 1970 	.db #0x02
   05BF 00                 1971 	.db #0x00
   05C0 10                 1972 	.db #0x10
   05C1 12                 1973 	.db #0x12
   05C2 0A                 1974 	.db #0x0A
   05C3 08                 1975 	.db #0x08
   05C4 02                 1976 	.db #0x02
   05C5 00                 1977 	.db #0x00
   05C6 10                 1978 	.db #0x10
   05C7 12                 1979 	.db #0x12
   05C8 0A                 1980 	.db #0x0A
   05C9 08                 1981 	.db #0x08
   05CA 02                 1982 	.db #0x02
   05CB 00                 1983 	.db #0x00
   05CC 12                 1984 	.db #0x12
   05CD 0A                 1985 	.db #0x0A
   05CE 08                 1986 	.db #0x08
   05CF 02                 1987 	.db #0x02
   05D0 00                 1988 	.db #0x00
   05D1 10                 1989 	.db #0x10
   05D2 12                 1990 	.db #0x12
   05D3 0A                 1991 	.db #0x0A
   05D4 08                 1992 	.db #0x08
   05D5 02                 1993 	.db #0x02
   05D6 00                 1994 	.db #0x00
   05D7 10                 1995 	.db #0x10
   05D8 12                 1996 	.db #0x12
   05D9 0A                 1997 	.db #0x0A
   05DA 08                 1998 	.db #0x08
   05DB 02                 1999 	.db #0x02
   05DC 10                 2000 	.db #0x10
   05DD 12                 2001 	.db #0x12
   05DE 0A                 2002 	.db #0x0A
   05DF 08                 2003 	.db #0x08
   05E0 02                 2004 	.db #0x02
   05E1 00                 2005 	.db #0x00
   05E2 10                 2006 	.db #0x10
   05E3 12                 2007 	.db #0x12
   05E4 0A                 2008 	.db #0x0A
   05E5 08                 2009 	.db #0x08
   05E6 02                 2010 	.db #0x02
   05E7 00                 2011 	.db #0x00
   05E8 10                 2012 	.db #0x10
   05E9 12                 2013 	.db #0x12
   05EA 0A                 2014 	.db #0x0A
   05EB 08                 2015 	.db #0x08
                           2016 ;demo.c:139: void my_isr(void) interrupt
                           2017 ;	---------------------------------
                           2018 ; Function my_isr
                           2019 ; ---------------------------------
   05EC                    2020 _my_isr_start::
   05EC                    2021 _my_isr:
   05EC F5                 2022 	push	af
   05ED C5                 2023 	push	bc
   05EE D5                 2024 	push	de
   05EF E5                 2025 	push	hl
   05F0 FD E5              2026 	push	iy
                           2027 ;demo.c:141: DI;
   05F2 F3                 2028 		di 
                           2029 ;demo.c:143: READ_VDP_STATUS;
   05F3 DB 99              2030 		in a,(#0x99) 
                           2031 ;demo.c:145: PLY_Play();
   05F5 CDr00s00           2032 	call	_PLY_Play
                           2033 ;demo.c:146: PLY_SendRegisters();
   05F8 CDr00s00           2034 	call	_PLY_SendRegisters
                           2035 ;demo.c:148: vbicount+=1;
   05FB FD 21r00s41        2036 	ld	iy,#_vbicount
   05FF FD 34 00           2037 	inc	0 (iy)
   0602 20 07              2038 	jr	NZ,00103$
   0604 FD 21r00s41        2039 	ld	iy,#_vbicount
   0608 FD 34 01           2040 	inc	1 (iy)
   060B                    2041 00103$:
                           2042 ;demo.c:149: tick++;
   060B FD 21r02s41        2043 	ld	iy,#_tick
   060F FD 34 00           2044 	inc	0 (iy)
   0612 20 07              2045 	jr	NZ,00104$
   0614 FD 21r02s41        2046 	ld	iy,#_tick
   0618 FD 34 01           2047 	inc	1 (iy)
   061B                    2048 00104$:
                           2049 ;demo.c:151: EI;
   061B FB                 2050 		ei 
   061C FD E1              2051 	pop	iy
   061E E1                 2052 	pop	hl
   061F D1                 2053 	pop	de
   0620 C1                 2054 	pop	bc
   0621 F1                 2055 	pop	af
   0622 ED 4D              2056 	reti
   0624                    2057 _my_isr_end::
                           2058 ;demo.c:154: void color_isr(void) interrupt
                           2059 ;	---------------------------------
                           2060 ; Function color_isr
                           2061 ; ---------------------------------
   0624                    2062 _color_isr_start::
   0624                    2063 _color_isr:
   0624 F5                 2064 	push	af
   0625 C5                 2065 	push	bc
   0626 D5                 2066 	push	de
   0627 E5                 2067 	push	hl
   0628 FD E5              2068 	push	iy
                           2069 ;demo.c:156: DI;
   062A F3                 2070 		di 
                           2071 ;demo.c:158: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              2072 	ld	a,#0x01
   062D F5                 2073 	push	af
   062E 33                 2074 	inc	sp
   062F CDr00s00           2075 	call	_vdp2_status
   0632 33                 2076 	inc	sp
   0633 4D                 2077 	ld	c,l
   0634 21 00 00           2078 	ld	hl,#0x0000
   0637 E5                 2079 	push	hl
   0638 79                 2080 	ld	a,c
   0639 F5                 2081 	push	af
   063A 33                 2082 	inc	sp
   063B CDr00s00           2083 	call	_isNthBitSet
   063E F1                 2084 	pop	af
   063F 33                 2085 	inc	sp
   0640 44                 2086 	ld	b,h
   0641 4D                 2087 	ld	c,l
   0642 79                 2088 	ld	a,c
   0643 B0                 2089 	or	a,b
   0644 28 19              2090 	jr	Z,00102$
                           2091 ;demo.c:159: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r00s41           2092 	ld	hl,#_vbicount + 0
   0649 4E                 2093 	ld	c,(hl)
   064A 06 00              2094 	ld	b,#0x00
   064C 21r00s00           2095 	ld	hl,#_sintab
   064F 09                 2096 	add	hl,bc
   0650 7E                 2097 	ld	a,(hl)
   0651 F5                 2098 	push	af
   0652 33                 2099 	inc	sp
   0653 3E 17              2100 	ld	a,#0x17
   0655 F5                 2101 	push	af
   0656 33                 2102 	inc	sp
   0657 CDr00s00           2103 	call	_vdp_register
   065A F1                 2104 	pop	af
                           2105 ;demo.c:160: READ_VDP_STATUS;
   065B DB 99              2106 		in a,(#0x99) 
   065D 18 18              2107 	jr	00103$
   065F                    2108 00102$:
                           2109 ;demo.c:163: READ_VDP_STATUS;
   065F DB 99              2110 		in a,(#0x99) 
                           2111 ;demo.c:164: vbicount++;
   0661 FD 21r00s41        2112 	ld	iy,#_vbicount
   0665 FD 34 00           2113 	inc	0 (iy)
   0668 20 07              2114 	jr	NZ,00107$
   066A FD 21r00s41        2115 	ld	iy,#_vbicount
   066E FD 34 01           2116 	inc	1 (iy)
   0671                    2117 00107$:
                           2118 ;demo.c:167: PLY_Play();
   0671 CDr00s00           2119 	call	_PLY_Play
                           2120 ;demo.c:168: PLY_SendRegisters();
   0674 CDr00s00           2121 	call	_PLY_SendRegisters
   0677                    2122 00103$:
                           2123 ;demo.c:171: EI;
   0677 FB                 2124 		ei 
   0678 FD E1              2125 	pop	iy
   067A E1                 2126 	pop	hl
   067B D1                 2127 	pop	de
   067C C1                 2128 	pop	bc
   067D F1                 2129 	pop	af
   067E ED 4D              2130 	reti
   0680                    2131 _color_isr_end::
                           2132 ;demo.c:178: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2133 ;	---------------------------------
                           2134 ; Function ge5_load
                           2135 ; ---------------------------------
   0680                    2136 _ge5_load_start::
   0680                    2137 _ge5_load:
   0680 DD E5              2138 	push	ix
   0682 DD 21 00 00        2139 	ld	ix,#0
   0686 DD 39              2140 	add	ix,sp
   0688 21 D2 FF           2141 	ld	hl,#-46
   068B 39                 2142 	add	hl,sp
   068C F9                 2143 	ld	sp,hl
                           2144 ;demo.c:182: if(debugprint == 1) {
   068D DD 7E 09           2145 	ld	a,9 (ix)
   0690 D6 01              2146 	sub	a,#0x01
   0692 20 06              2147 	jr	NZ,00125$
   0694 DD 7E 0A           2148 	ld	a,10 (ix)
   0697 B7                 2149 	or	a,a
   0698 28 02              2150 	jr	Z,00126$
   069A                    2151 00125$:
   069A 18 1B              2152 	jr	00102$
   069C                    2153 00126$:
                           2154 ;demo.c:183: puts("loading ge5file: ");
   069C 21r7Bs07           2155 	ld	hl,#__str_0
   069F E5                 2156 	push	hl
   06A0 CDr00s00           2157 	call	_puts
   06A3 F1                 2158 	pop	af
                           2159 ;demo.c:184: puts(file_name);
   06A4 DD 6E 04           2160 	ld	l,4 (ix)
   06A7 DD 66 05           2161 	ld	h,5 (ix)
   06AA E5                 2162 	push	hl
   06AB CDr00s00           2163 	call	_puts
   06AE F1                 2164 	pop	af
                           2165 ;demo.c:185: puts("\r\n");
   06AF 21r8Ds07           2166 	ld	hl,#__str_1
   06B2 E5                 2167 	push	hl
   06B3 CDr00s00           2168 	call	_puts
   06B6 F1                 2169 	pop	af
   06B7                    2170 00102$:
                           2171 ;demo.c:188: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2172 	ld	hl,#0x0000
   06BA 39                 2173 	add	hl,sp
   06BB 4D                 2174 	ld	c,l
   06BC 44                 2175 	ld	b,h
   06BD 21 2E 00           2176 	ld	hl,#0x002E
   06C0 E5                 2177 	push	hl
   06C1 3E 00              2178 	ld	a,#0x00
   06C3 F5                 2179 	push	af
   06C4 33                 2180 	inc	sp
   06C5 C5                 2181 	push	bc
   06C6 CDr00s00           2182 	call	_memset
   06C9 F1                 2183 	pop	af
   06CA F1                 2184 	pop	af
   06CB 33                 2185 	inc	sp
                           2186 ;demo.c:190: f.record_size = 128;
   06CC 21 00 00           2187 	ld	hl,#0x0000
   06CF 39                 2188 	add	hl,sp
   06D0 4D                 2189 	ld	c,l
   06D1 44                 2190 	ld	b,h
   06D2 21 0F 00           2191 	ld	hl,#0x000F
   06D5 09                 2192 	add	hl,bc
   06D6 EB                 2193 	ex	de,hl
   06D7 3E 80              2194 	ld	a,#0x80
   06D9 12                 2195 	ld	(de),a
                           2196 ;demo.c:191: f.drive = 0;
   06DA 3E 00              2197 	ld	a,#0x00
   06DC 02                 2198 	ld	(bc),a
                           2199 ;demo.c:193: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2200 	ld	e,4 (ix)
   06E0 DD 56 05           2201 	ld	d,5 (ix)
   06E3 03                 2202 	inc	bc
   06E4 21 0B 00           2203 	ld	hl,#0x000B
   06E7 E5                 2204 	push	hl
   06E8 D5                 2205 	push	de
   06E9 C5                 2206 	push	bc
   06EA CDr00s00           2207 	call	_memcpy
   06ED F1                 2208 	pop	af
   06EE F1                 2209 	pop	af
   06EF F1                 2210 	pop	af
                           2211 ;demo.c:195: if (open(&f) != 0) return 0;
   06F0 21 00 00           2212 	ld	hl,#0x0000
   06F3 39                 2213 	add	hl,sp
   06F4 E5                 2214 	push	hl
   06F5 CDr00s00           2215 	call	_open
   06F8 F1                 2216 	pop	af
   06F9 AF                 2217 	xor	a,a
   06FA B5                 2218 	or	a,l
   06FB 28 05              2219 	jr	Z,00104$
   06FD 2E 00              2220 	ld	l,#0x00
   06FF C3r76s07           2221 	jp	00116$
   0702                    2222 00104$:
                           2223 ;demo.c:196: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2224 	ld	l,7 (ix)
   0705 DD 66 08           2225 	ld	h,8 (ix)
   0708 E5                 2226 	push	hl
   0709 DD 7E 06           2227 	ld	a,6 (ix)
   070C F5                 2228 	push	af
   070D 33                 2229 	inc	sp
   070E CDr00s00           2230 	call	_vdp_set_write_address
   0711 F1                 2231 	pop	af
   0712 33                 2232 	inc	sp
                           2233 ;demo.c:198: for (i = 0; i < 213; i++) {
   0713 0E 00              2234 	ld	c,#0x00
   0715                    2235 00112$:
   0715 79                 2236 	ld	a,c
   0716 D6 D5              2237 	sub	a,#0xD5
   0718 D2r6Bs07           2238 	jp	NC,00115$
                           2239 ;demo.c:199: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2240 	push	bc
   071C 21rE0s3F           2241 	ld	hl,#_scratch
   071F E5                 2242 	push	hl
   0720 CDr00s00           2243 	call	_block_set_data_ptr
   0723 F1                 2244 	pop	af
   0724 7D                 2245 	ld	a,l
   0725 C1                 2246 	pop	bc
   0726 47                 2247 	ld	b,a
   0727 B7                 2248 	or	a,a
   0728 28 05              2249 	jr	Z,00106$
   072A 2E 00              2250 	ld	l,#0x00
   072C C3r76s07           2251 	jp	00116$
   072F                    2252 00106$:
                           2253 ;demo.c:200: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2254 	ld	hl,#0x0000
   0732 39                 2255 	add	hl,sp
   0733 C5                 2256 	push	bc
   0734 E5                 2257 	push	hl
   0735 CDr00s00           2258 	call	_block_read
   0738 F1                 2259 	pop	af
   0739 7D                 2260 	ld	a,l
   073A C1                 2261 	pop	bc
   073B 47                 2262 	ld	b,a
   073C B7                 2263 	or	a,a
   073D 28 04              2264 	jr	Z,00108$
   073F 2E 00              2265 	ld	l,#0x00
   0741 18 33              2266 	jr	00116$
   0743                    2267 00108$:
                           2268 ;demo.c:202: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2269 	xor	a,a
   0744 B1                 2270 	or	a,c
   0745 20 11              2271 	jr	NZ,00110$
   0747 11rE7s3F           2272 	ld	de,#_scratch + 7
   074A C5                 2273 	push	bc
   074B 3E 79              2274 	ld	a,#0x79
   074D F5                 2275 	push	af
   074E 33                 2276 	inc	sp
   074F D5                 2277 	push	de
   0750 CDr00s00           2278 	call	_vdp_load_screen
   0753 F1                 2279 	pop	af
   0754 33                 2280 	inc	sp
   0755 C1                 2281 	pop	bc
   0756 18 0F              2282 	jr	00114$
   0758                    2283 00110$:
                           2284 ;demo.c:203: else vdp_load_screen(scratch, 128);
   0758 C5                 2285 	push	bc
   0759 3E 80              2286 	ld	a,#0x80
   075B F5                 2287 	push	af
   075C 33                 2288 	inc	sp
   075D 21rE0s3F           2289 	ld	hl,#_scratch
   0760 E5                 2290 	push	hl
   0761 CDr00s00           2291 	call	_vdp_load_screen
   0764 F1                 2292 	pop	af
   0765 33                 2293 	inc	sp
   0766 C1                 2294 	pop	bc
   0767                    2295 00114$:
                           2296 ;demo.c:198: for (i = 0; i < 213; i++) {
   0767 0C                 2297 	inc	c
   0768 C3r15s07           2298 	jp	00112$
   076B                    2299 00115$:
                           2300 ;demo.c:206: close(&f);
   076B 21 00 00           2301 	ld	hl,#0x0000
   076E 39                 2302 	add	hl,sp
   076F E5                 2303 	push	hl
   0770 CDr00s00           2304 	call	_close
   0773 F1                 2305 	pop	af
                           2306 ;demo.c:208: return 1;
   0774 2E 01              2307 	ld	l,#0x01
   0776                    2308 00116$:
   0776 DD F9              2309 	ld	sp,ix
   0778 DD E1              2310 	pop	ix
   077A C9                 2311 	ret
   077B                    2312 _ge5_load_end::
   077B                    2313 __str_0:
   077B 6C 6F 61 64 69 6E  2314 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2315 	.db 0x00
   078D                    2316 __str_1:
   078D 0D                 2317 	.db 0x0D
   078E 0A                 2318 	.db 0x0A
   078F 00                 2319 	.db 0x00
                           2320 ;demo.c:211: void scratch_clear() {
                           2321 ;	---------------------------------
                           2322 ; Function scratch_clear
                           2323 ; ---------------------------------
   0790                    2324 _scratch_clear_start::
   0790                    2325 _scratch_clear:
                           2326 ;demo.c:212: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2327 	ld	hl,#0x0080
   0793 E5                 2328 	push	hl
   0794 3E 00              2329 	ld	a,#0x00
   0796 F5                 2330 	push	af
   0797 33                 2331 	inc	sp
   0798 21rE0s3F           2332 	ld	hl,#_scratch
   079B E5                 2333 	push	hl
   079C CDr00s00           2334 	call	_memset
   079F F1                 2335 	pop	af
   07A0 F1                 2336 	pop	af
   07A1 33                 2337 	inc	sp
   07A2 C9                 2338 	ret
   07A3                    2339 _scratch_clear_end::
                           2340 ;demo.c:215: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2341 ;	---------------------------------
                           2342 ; Function pal_load
                           2343 ; ---------------------------------
   07A3                    2344 _pal_load_start::
   07A3                    2345 _pal_load:
   07A3 DD E5              2346 	push	ix
   07A5 DD 21 00 00        2347 	ld	ix,#0
   07A9 DD 39              2348 	add	ix,sp
   07AB 21 D2 FF           2349 	ld	hl,#-46
   07AE 39                 2350 	add	hl,sp
   07AF F9                 2351 	ld	sp,hl
                           2352 ;demo.c:218: if(debugprint == 1) {
   07B0 DD 7E 07           2353 	ld	a,7 (ix)
   07B3 D6 01              2354 	sub	a,#0x01
   07B5 20 06              2355 	jr	NZ,00115$
   07B7 DD 7E 08           2356 	ld	a,8 (ix)
   07BA B7                 2357 	or	a,a
   07BB 28 02              2358 	jr	Z,00116$
   07BD                    2359 00115$:
   07BD 18 1B              2360 	jr	00102$
   07BF                    2361 00116$:
                           2362 ;demo.c:219: puts("loading palfile: ");
   07BF 21r6Ds08           2363 	ld	hl,#__str_2
   07C2 E5                 2364 	push	hl
   07C3 CDr00s00           2365 	call	_puts
   07C6 F1                 2366 	pop	af
                           2367 ;demo.c:220: puts(file_name);
   07C7 DD 6E 04           2368 	ld	l,4 (ix)
   07CA DD 66 05           2369 	ld	h,5 (ix)
   07CD E5                 2370 	push	hl
   07CE CDr00s00           2371 	call	_puts
   07D1 F1                 2372 	pop	af
                           2373 ;demo.c:221: puts("\r\n");
   07D2 21r7Fs08           2374 	ld	hl,#__str_3
   07D5 E5                 2375 	push	hl
   07D6 CDr00s00           2376 	call	_puts
   07D9 F1                 2377 	pop	af
   07DA                    2378 00102$:
                           2379 ;demo.c:224: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2380 	ld	hl,#0x0000
   07DD 39                 2381 	add	hl,sp
   07DE 4D                 2382 	ld	c,l
   07DF 44                 2383 	ld	b,h
   07E0 21 2E 00           2384 	ld	hl,#0x002E
   07E3 E5                 2385 	push	hl
   07E4 3E 00              2386 	ld	a,#0x00
   07E6 F5                 2387 	push	af
   07E7 33                 2388 	inc	sp
   07E8 C5                 2389 	push	bc
   07E9 CDr00s00           2390 	call	_memset
   07EC F1                 2391 	pop	af
   07ED F1                 2392 	pop	af
   07EE 33                 2393 	inc	sp
                           2394 ;demo.c:225: scratch_clear();
   07EF CDr90s07           2395 	call	_scratch_clear
                           2396 ;demo.c:227: f.record_size = ss;
   07F2 21 00 00           2397 	ld	hl,#0x0000
   07F5 39                 2398 	add	hl,sp
   07F6 4D                 2399 	ld	c,l
   07F7 44                 2400 	ld	b,h
   07F8 21 0F 00           2401 	ld	hl,#0x000F
   07FB 09                 2402 	add	hl,bc
   07FC EB                 2403 	ex	de,hl
   07FD DD 7E 06           2404 	ld	a,6 (ix)
   0800 12                 2405 	ld	(de),a
                           2406 ;demo.c:228: f.drive = 0;
   0801 3E 00              2407 	ld	a,#0x00
   0803 02                 2408 	ld	(bc),a
                           2409 ;demo.c:230: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2410 	ld	e,4 (ix)
   0807 DD 56 05           2411 	ld	d,5 (ix)
   080A 03                 2412 	inc	bc
   080B 21 0B 00           2413 	ld	hl,#0x000B
   080E E5                 2414 	push	hl
   080F D5                 2415 	push	de
   0810 C5                 2416 	push	bc
   0811 CDr00s00           2417 	call	_memcpy
   0814 F1                 2418 	pop	af
   0815 F1                 2419 	pop	af
   0816 F1                 2420 	pop	af
                           2421 ;demo.c:232: if (open(&f) != 0) return 0;
   0817 21 00 00           2422 	ld	hl,#0x0000
   081A 39                 2423 	add	hl,sp
   081B E5                 2424 	push	hl
   081C CDr00s00           2425 	call	_open
   081F F1                 2426 	pop	af
   0820 AF                 2427 	xor	a,a
   0821 B5                 2428 	or	a,l
   0822 28 04              2429 	jr	Z,00104$
   0824 2E 00              2430 	ld	l,#0x00
   0826 18 40              2431 	jr	00109$
   0828                    2432 00104$:
                           2433 ;demo.c:233: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21rE0s3F           2434 	ld	hl,#_scratch
   082B E5                 2435 	push	hl
   082C CDr00s00           2436 	call	_block_set_data_ptr
   082F F1                 2437 	pop	af
   0830 AF                 2438 	xor	a,a
   0831 B5                 2439 	or	a,l
   0832 28 04              2440 	jr	Z,00106$
   0834 2E 00              2441 	ld	l,#0x00
   0836 18 30              2442 	jr	00109$
   0838                    2443 00106$:
                           2444 ;demo.c:234: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2445 	ld	hl,#0x0000
   083B 39                 2446 	add	hl,sp
   083C E5                 2447 	push	hl
   083D CDr00s00           2448 	call	_block_read
   0840 F1                 2449 	pop	af
   0841 AF                 2450 	xor	a,a
   0842 B5                 2451 	or	a,l
   0843 28 04              2452 	jr	Z,00108$
   0845 2E 00              2453 	ld	l,#0x00
   0847 18 1F              2454 	jr	00109$
   0849                    2455 00108$:
                           2456 ;demo.c:236: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2457 	ld	c,6 (ix)
   084C 06 00              2458 	ld	b,#0x00
   084E 11rE7s3F           2459 	ld	de,#_scratch + 7
   0851 C5                 2460 	push	bc
   0852 D5                 2461 	push	de
   0853 21r60s40           2462 	ld	hl,#_cur_palette
   0856 E5                 2463 	push	hl
   0857 CDr00s00           2464 	call	_memcpy
   085A F1                 2465 	pop	af
   085B F1                 2466 	pop	af
   085C F1                 2467 	pop	af
                           2468 ;demo.c:238: close(&f);
   085D 21 00 00           2469 	ld	hl,#0x0000
   0860 39                 2470 	add	hl,sp
   0861 E5                 2471 	push	hl
   0862 CDr00s00           2472 	call	_close
   0865 F1                 2473 	pop	af
                           2474 ;demo.c:239: return 1;
   0866 2E 01              2475 	ld	l,#0x01
   0868                    2476 00109$:
   0868 DD F9              2477 	ld	sp,ix
   086A DD E1              2478 	pop	ix
   086C C9                 2479 	ret
   086D                    2480 _pal_load_end::
   086D                    2481 __str_2:
   086D 6C 6F 61 64 69 6E  2482 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2483 	.db 0x00
   087F                    2484 __str_3:
   087F 0D                 2485 	.db 0x0D
   0880 0A                 2486 	.db 0x0A
   0881 00                 2487 	.db 0x00
                           2488 ;demo.c:243: void pause() {
                           2489 ;	---------------------------------
                           2490 ; Function pause
                           2491 ; ---------------------------------
   0882                    2492 _pause_start::
   0882                    2493 _pause:
                           2494 ;demo.c:244: uint8_t i,j,k = 0;
                           2495 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2496 	ld	bc,#0x0000
   0885                    2497 00104$:
   0885 78                 2498 	ld	a,b
   0886 D6 FF              2499 	sub	a,#0xFF
   0888 D0                 2500 	ret	NC
                           2501 ;demo.c:246: for (j = 0; j < 255; j++) {
   0889 59                 2502 	ld	e,c
   088A 16 FF              2503 	ld	d,#0xFF
   088C                    2504 00103$:
                           2505 ;demo.c:247: k++;
   088C 1C                 2506 	inc	e
   088D 15                 2507 	dec	d
                           2508 ;demo.c:246: for (j = 0; j < 255; j++) {
   088E AF                 2509 	xor	a,a
   088F B2                 2510 	or	a,d
   0890 20 FA              2511 	jr	NZ,00103$
                           2512 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0892 4B                 2513 	ld	c,e
   0893 04                 2514 	inc	b
   0894 18 EF              2515 	jr	00104$
   0896                    2516 _pause_end::
                           2517 ;demo.c:253: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2518 ;	---------------------------------
                           2519 ; Function raw_load
                           2520 ; ---------------------------------
   0896                    2521 _raw_load_start::
   0896                    2522 _raw_load:
   0896 DD E5              2523 	push	ix
   0898 DD 21 00 00        2524 	ld	ix,#0
   089C DD 39              2525 	add	ix,sp
   089E 21 D2 FF           2526 	ld	hl,#-46
   08A1 39                 2527 	add	hl,sp
   08A2 F9                 2528 	ld	sp,hl
                           2529 ;demo.c:258: if(debugprint == 1) {
   08A3 DD 7E 0A           2530 	ld	a,10 (ix)
   08A6 D6 01              2531 	sub	a,#0x01
   08A8 20 06              2532 	jr	NZ,00120$
   08AA DD 7E 0B           2533 	ld	a,11 (ix)
   08AD B7                 2534 	or	a,a
   08AE 28 02              2535 	jr	Z,00121$
   08B0                    2536 00120$:
   08B0 18 1B              2537 	jr	00102$
   08B2                    2538 00121$:
                           2539 ;demo.c:259: puts("loading rawfile: ");
   08B2 21r84s09           2540 	ld	hl,#__str_4
   08B5 E5                 2541 	push	hl
   08B6 CDr00s00           2542 	call	_puts
   08B9 F1                 2543 	pop	af
                           2544 ;demo.c:260: puts(file_name);
   08BA DD 6E 04           2545 	ld	l,4 (ix)
   08BD DD 66 05           2546 	ld	h,5 (ix)
   08C0 E5                 2547 	push	hl
   08C1 CDr00s00           2548 	call	_puts
   08C4 F1                 2549 	pop	af
                           2550 ;demo.c:261: puts("\r\n");
   08C5 21r96s09           2551 	ld	hl,#__str_5
   08C8 E5                 2552 	push	hl
   08C9 CDr00s00           2553 	call	_puts
   08CC F1                 2554 	pop	af
   08CD                    2555 00102$:
                           2556 ;demo.c:264: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2557 	ld	hl,#0x0000
   08D0 39                 2558 	add	hl,sp
   08D1 4D                 2559 	ld	c,l
   08D2 44                 2560 	ld	b,h
   08D3 21 2E 00           2561 	ld	hl,#0x002E
   08D6 E5                 2562 	push	hl
   08D7 3E 00              2563 	ld	a,#0x00
   08D9 F5                 2564 	push	af
   08DA 33                 2565 	inc	sp
   08DB C5                 2566 	push	bc
   08DC CDr00s00           2567 	call	_memset
   08DF F1                 2568 	pop	af
   08E0 F1                 2569 	pop	af
   08E1 33                 2570 	inc	sp
                           2571 ;demo.c:265: scratch_clear();
   08E2 CDr90s07           2572 	call	_scratch_clear
                           2573 ;demo.c:267: f.record_size = 128;
   08E5 21 00 00           2574 	ld	hl,#0x0000
   08E8 39                 2575 	add	hl,sp
   08E9 4D                 2576 	ld	c,l
   08EA 44                 2577 	ld	b,h
   08EB 21 0F 00           2578 	ld	hl,#0x000F
   08EE 09                 2579 	add	hl,bc
   08EF EB                 2580 	ex	de,hl
   08F0 3E 80              2581 	ld	a,#0x80
   08F2 12                 2582 	ld	(de),a
                           2583 ;demo.c:268: f.drive = 0;
   08F3 3E 00              2584 	ld	a,#0x00
   08F5 02                 2585 	ld	(bc),a
                           2586 ;demo.c:270: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2587 	ld	e,4 (ix)
   08F9 DD 56 05           2588 	ld	d,5 (ix)
   08FC 03                 2589 	inc	bc
   08FD 21 0B 00           2590 	ld	hl,#0x000B
   0900 E5                 2591 	push	hl
   0901 D5                 2592 	push	de
   0902 C5                 2593 	push	bc
   0903 CDr00s00           2594 	call	_memcpy
   0906 F1                 2595 	pop	af
   0907 F1                 2596 	pop	af
   0908 F1                 2597 	pop	af
                           2598 ;demo.c:272: if (open(&f) != 0) return 0;
   0909 21 00 00           2599 	ld	hl,#0x0000
   090C 39                 2600 	add	hl,sp
   090D E5                 2601 	push	hl
   090E CDr00s00           2602 	call	_open
   0911 F1                 2603 	pop	af
   0912 AF                 2604 	xor	a,a
   0913 B5                 2605 	or	a,l
   0914 28 05              2606 	jr	Z,00119$
   0916 2E 00              2607 	ld	l,#0x00
   0918 C3r7Fs09           2608 	jp	00112$
                           2609 ;demo.c:274: while(total < size) {
   091B                    2610 00119$:
   091B 01 00 00           2611 	ld	bc,#0x0000
   091E                    2612 00109$:
   091E 79                 2613 	ld	a,c
   091F DD 96 06           2614 	sub	a,6 (ix)
   0922 78                 2615 	ld	a,b
   0923 DD 9E 07           2616 	sbc	a,7 (ix)
   0926 F2r74s09           2617 	jp	P,00111$
                           2618 ;demo.c:275: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2619 	push	bc
   092A 21rE0s3F           2620 	ld	hl,#_scratch
   092D E5                 2621 	push	hl
   092E CDr00s00           2622 	call	_block_set_data_ptr
   0931 F1                 2623 	pop	af
   0932 5D                 2624 	ld	e,l
   0933 C1                 2625 	pop	bc
   0934 AF                 2626 	xor	a,a
   0935 B3                 2627 	or	a,e
   0936 28 04              2628 	jr	Z,00106$
   0938 2E 00              2629 	ld	l,#0x00
   093A 18 43              2630 	jr	00112$
   093C                    2631 00106$:
                           2632 ;demo.c:276: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2633 	ld	hl,#0x0000
   093F 39                 2634 	add	hl,sp
   0940 C5                 2635 	push	bc
   0941 E5                 2636 	push	hl
   0942 CDr00s00           2637 	call	_block_read
   0945 F1                 2638 	pop	af
   0946 5D                 2639 	ld	e,l
   0947 C1                 2640 	pop	bc
   0948 AF                 2641 	xor	a,a
   0949 B3                 2642 	or	a,e
   094A 28 04              2643 	jr	Z,00108$
   094C 2E 00              2644 	ld	l,#0x00
   094E 18 2F              2645 	jr	00112$
   0950                    2646 00108$:
                           2647 ;demo.c:278: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2648 	ld	a,8 (ix)
   0953 81                 2649 	add	a,c
   0954 5F                 2650 	ld	e,a
   0955 DD 7E 09           2651 	ld	a,9 (ix)
   0958 88                 2652 	adc	a,b
   0959 57                 2653 	ld	d,a
   095A C5                 2654 	push	bc
   095B 21 80 00           2655 	ld	hl,#0x0080
   095E E5                 2656 	push	hl
   095F 21rE0s3F           2657 	ld	hl,#_scratch
   0962 E5                 2658 	push	hl
   0963 D5                 2659 	push	de
   0964 CDr00s00           2660 	call	_memcpy
   0967 F1                 2661 	pop	af
   0968 F1                 2662 	pop	af
   0969 F1                 2663 	pop	af
   096A C1                 2664 	pop	bc
                           2665 ;demo.c:280: total+=incr;
   096B 21 80 00           2666 	ld	hl,#0x0080
   096E 09                 2667 	add	hl,bc
   096F 4D                 2668 	ld	c,l
   0970 44                 2669 	ld	b,h
   0971 C3r1Es09           2670 	jp	00109$
   0974                    2671 00111$:
                           2672 ;demo.c:283: close(&f);
   0974 21 00 00           2673 	ld	hl,#0x0000
   0977 39                 2674 	add	hl,sp
   0978 E5                 2675 	push	hl
   0979 CDr00s00           2676 	call	_close
   097C F1                 2677 	pop	af
                           2678 ;demo.c:285: return 1;
   097D 2E 01              2679 	ld	l,#0x01
   097F                    2680 00112$:
   097F DD F9              2681 	ld	sp,ix
   0981 DD E1              2682 	pop	ix
   0983 C9                 2683 	ret
   0984                    2684 _raw_load_end::
   0984                    2685 __str_4:
   0984 6C 6F 61 64 69 6E  2686 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2687 	.db 0x00
   0996                    2688 __str_5:
   0996 0D                 2689 	.db 0x0D
   0997 0A                 2690 	.db 0x0A
   0998 00                 2691 	.db 0x00
                           2692 ;demo.c:288: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2693 ;	---------------------------------
                           2694 ; Function pck_load
                           2695 ; ---------------------------------
   0999                    2696 _pck_load_start::
   0999                    2697 _pck_load:
   0999 DD E5              2698 	push	ix
   099B DD 21 00 00        2699 	ld	ix,#0
   099F DD 39              2700 	add	ix,sp
                           2701 ;demo.c:289: if(debugprint == 1) {
   09A1 DD 7E 0C           2702 	ld	a,12 (ix)
   09A4 D6 01              2703 	sub	a,#0x01
   09A6 20 06              2704 	jr	NZ,00106$
   09A8 DD 7E 0D           2705 	ld	a,13 (ix)
   09AB B7                 2706 	or	a,a
   09AC 28 02              2707 	jr	Z,00107$
   09AE                    2708 00106$:
   09AE 18 1B              2709 	jr	00102$
   09B0                    2710 00107$:
                           2711 ;demo.c:290: puts("loading pckfile: ");
   09B0 21r12s0A           2712 	ld	hl,#__str_6
   09B3 E5                 2713 	push	hl
   09B4 CDr00s00           2714 	call	_puts
   09B7 F1                 2715 	pop	af
                           2716 ;demo.c:291: puts(file_name);
   09B8 DD 6E 04           2717 	ld	l,4 (ix)
   09BB DD 66 05           2718 	ld	h,5 (ix)
   09BE E5                 2719 	push	hl
   09BF CDr00s00           2720 	call	_puts
   09C2 F1                 2721 	pop	af
                           2722 ;demo.c:292: puts("\r\n");
   09C3 21r24s0A           2723 	ld	hl,#__str_7
   09C6 E5                 2724 	push	hl
   09C7 CDr00s00           2725 	call	_puts
   09CA F1                 2726 	pop	af
   09CB                    2727 00102$:
                           2728 ;demo.c:294: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2729 	ld	c,6 (ix)
   09CE DD 46 07           2730 	ld	b,7 (ix)
   09D1 C5                 2731 	push	bc
   09D2 C5                 2732 	push	bc
   09D3 3E 00              2733 	ld	a,#0x00
   09D5 F5                 2734 	push	af
   09D6 33                 2735 	inc	sp
   09D7 21r60s01           2736 	ld	hl,#_packbuffer
   09DA E5                 2737 	push	hl
   09DB CDr00s00           2738 	call	_memset
   09DE F1                 2739 	pop	af
   09DF F1                 2740 	pop	af
   09E0 33                 2741 	inc	sp
   09E1 C1                 2742 	pop	bc
                           2743 ;demo.c:295: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2744 	ld	hl,#0x0000
   09E5 E5                 2745 	push	hl
   09E6 21r60s01           2746 	ld	hl,#_packbuffer
   09E9 E5                 2747 	push	hl
   09EA C5                 2748 	push	bc
   09EB DD 6E 04           2749 	ld	l,4 (ix)
   09EE DD 66 05           2750 	ld	h,5 (ix)
   09F1 E5                 2751 	push	hl
   09F2 CDr96s08           2752 	call	_raw_load
   09F5 F1                 2753 	pop	af
   09F6 F1                 2754 	pop	af
   09F7 F1                 2755 	pop	af
   09F8 F1                 2756 	pop	af
                           2757 ;demo.c:296: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2758 	ld	a,10 (ix)
   09FC F5                 2759 	push	af
   09FD 33                 2760 	inc	sp
   09FE DD 6E 08           2761 	ld	l,8 (ix)
   0A01 DD 66 09           2762 	ld	h,9 (ix)
   0A04 E5                 2763 	push	hl
   0A05 21r60s01           2764 	ld	hl,#_packbuffer
   0A08 E5                 2765 	push	hl
   0A09 CDr00s00           2766 	call	_bitbuster
   0A0C F1                 2767 	pop	af
   0A0D F1                 2768 	pop	af
   0A0E 33                 2769 	inc	sp
   0A0F DD E1              2770 	pop	ix
   0A11 C9                 2771 	ret
   0A12                    2772 _pck_load_end::
   0A12                    2773 __str_6:
   0A12 6C 6F 61 64 69 6E  2774 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2775 	.db 0x00
   0A24                    2776 __str_7:
   0A24 0D                 2777 	.db 0x0D
   0A25 0A                 2778 	.db 0x0A
   0A26 00                 2779 	.db 0x00
                           2780 ;demo.c:299: void fadein() {
                           2781 ;	---------------------------------
                           2782 ; Function fadein
                           2783 ; ---------------------------------
   0A27                    2784 _fadein_start::
   0A27                    2785 _fadein:
   0A27 DD E5              2786 	push	ix
   0A29 DD 21 00 00        2787 	ld	ix,#0
   0A2D DD 39              2788 	add	ix,sp
   0A2F F5                 2789 	push	af
                           2790 ;demo.c:302: if (tick < 8) return;
   0A30 3Ar02s41           2791 	ld	a,(#_tick+0)
   0A33 D6 08              2792 	sub	a,#0x08
   0A35 3Ar03s41           2793 	ld	a,(#_tick+1)
   0A38 DE 00              2794 	sbc	a,#0x00
   0A3A F2r40s0A           2795 	jp	P,00102$
   0A3D C3rEEs0A           2796 	jp	00113$
   0A40                    2797 00102$:
                           2798 ;demo.c:304: tick = 0;
   0A40 21r02s41           2799 	ld	hl,#_tick + 0
   0A43 36 00              2800 	ld	(hl), #0x00
   0A45 21r03s41           2801 	ld	hl,#_tick + 1
   0A48 36 00              2802 	ld	(hl), #0x00
                           2803 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2804 	ld	c,#0x00
   0A4C                    2805 00109$:
   0A4C 79                 2806 	ld	a,c
   0A4D D6 20              2807 	sub	a,#0x20
   0A4F D2rE6s0A           2808 	jp	NC,00112$
                           2809 ;demo.c:307: uint8_t r = scratch[i] >> 4;
   0A52 3ErE0              2810 	ld	a,#<_scratch
   0A54 81                 2811 	add	a,c
   0A55 5F                 2812 	ld	e,a
   0A56 3Es3F              2813 	ld	a,#>_scratch
   0A58 CE 00              2814 	adc	a,#0x00
   0A5A 57                 2815 	ld	d,a
   0A5B 1A                 2816 	ld	a,(de)
   0A5C 47                 2817 	ld	b,a
   0A5D 58                 2818 	ld	e,b
   0A5E CB 3B              2819 	srl	e
   0A60 CB 3B              2820 	srl	e
   0A62 CB 3B              2821 	srl	e
   0A64 CB 3B              2822 	srl	e
                           2823 ;demo.c:308: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2824 	ld	a,b
   0A67 E6 0F              2825 	and	a,#0x0F
   0A69 DD 77 FF           2826 	ld	-1 (ix),a
                           2827 ;demo.c:309: uint8_t g = scratch[i+1];
   0A6C 51                 2828 	ld	d,c
   0A6D 14                 2829 	inc	d
   0A6E 3ErE0              2830 	ld	a,#<_scratch
   0A70 82                 2831 	add	a,d
   0A71 6F                 2832 	ld	l,a
   0A72 3Es3F              2833 	ld	a,#>_scratch
   0A74 CE 00              2834 	adc	a,#0x00
   0A76 67                 2835 	ld	h,a
   0A77 56                 2836 	ld	d,(hl)
   0A78 DD 72 FE           2837 	ld	-2 (ix),d
                           2838 ;demo.c:311: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3Er60              2839 	ld	a,#<_cur_palette
   0A7D 81                 2840 	add	a,c
   0A7E 6F                 2841 	ld	l,a
   0A7F 3Es40              2842 	ld	a,#>_cur_palette
   0A81 CE 00              2843 	adc	a,#0x00
   0A83 67                 2844 	ld	h,a
   0A84 56                 2845 	ld	d,(hl)
   0A85 CB 3A              2846 	srl	d
   0A87 CB 3A              2847 	srl	d
   0A89 CB 3A              2848 	srl	d
   0A8B CB 3A              2849 	srl	d
   0A8D 7B                 2850 	ld	a,e
   0A8E 92                 2851 	sub	a,d
   0A8F 30 01              2852 	jr	NC,00104$
   0A91 1C                 2853 	inc	e
   0A92                    2854 00104$:
                           2855 ;demo.c:312: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3Er60              2856 	ld	a,#<_cur_palette
   0A94 81                 2857 	add	a,c
   0A95 6F                 2858 	ld	l,a
   0A96 3Es40              2859 	ld	a,#>_cur_palette
   0A98 CE 00              2860 	adc	a,#0x00
   0A9A 67                 2861 	ld	h,a
   0A9B 7E                 2862 	ld	a,(hl)
   0A9C E6 0F              2863 	and	a,#0x0F
   0A9E 47                 2864 	ld	b,a
   0A9F DD 7E FF           2865 	ld	a,-1 (ix)
   0AA2 90                 2866 	sub	a,b
   0AA3 30 03              2867 	jr	NC,00106$
   0AA5 DD 34 FF           2868 	inc	-1 (ix)
   0AA8                    2869 00106$:
                           2870 ;demo.c:314: scratch[i] = (r << 4) | b;
   0AA8 3ErE0              2871 	ld	a,#<_scratch
   0AAA 81                 2872 	add	a,c
   0AAB 47                 2873 	ld	b,a
   0AAC 3Es3F              2874 	ld	a,#>_scratch
   0AAE CE 00              2875 	adc	a,#0x00
   0AB0 57                 2876 	ld	d,a
   0AB1 7B                 2877 	ld	a,e
   0AB2 07                 2878 	rlca
   0AB3 07                 2879 	rlca
   0AB4 07                 2880 	rlca
   0AB5 07                 2881 	rlca
   0AB6 E6 F0              2882 	and	a,#0xF0
   0AB8 DD B6 FF           2883 	or	a,-1 (ix)
   0ABB 68                 2884 	ld	l,b
   0ABC 62                 2885 	ld	h,d
   0ABD 77                 2886 	ld	(hl),a
                           2887 ;demo.c:315: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2888 	ld	b,c
   0ABF 04                 2889 	inc	b
   0AC0 3Er60              2890 	ld	a,#<_cur_palette
   0AC2 80                 2891 	add	a,b
   0AC3 5F                 2892 	ld	e,a
   0AC4 3Es40              2893 	ld	a,#>_cur_palette
   0AC6 CE 00              2894 	adc	a,#0x00
   0AC8 57                 2895 	ld	d,a
   0AC9 1A                 2896 	ld	a,(de)
   0ACA 5F                 2897 	ld	e,a
   0ACB DD 7E FE           2898 	ld	a,-2 (ix)
   0ACE 93                 2899 	sub	a,e
   0ACF 30 10              2900 	jr	NC,00111$
   0AD1 3ErE0              2901 	ld	a,#<_scratch
   0AD3 80                 2902 	add	a,b
   0AD4 47                 2903 	ld	b,a
   0AD5 3Es3F              2904 	ld	a,#>_scratch
   0AD7 CE 00              2905 	adc	a,#0x00
   0AD9 5F                 2906 	ld	e,a
   0ADA 68                 2907 	ld	l,b
   0ADB 67                 2908 	ld	h,a
   0ADC 7E                 2909 	ld	a,(hl)
   0ADD 3C                 2910 	inc	a
   0ADE 68                 2911 	ld	l,b
   0ADF 63                 2912 	ld	h,e
   0AE0 77                 2913 	ld	(hl),a
   0AE1                    2914 00111$:
                           2915 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2916 	inc	c
   0AE2 0C                 2917 	inc	c
   0AE3 C3r4Cs0A           2918 	jp	00109$
   0AE6                    2919 00112$:
                           2920 ;demo.c:319: vdp_load_palette(scratch);
   0AE6 21rE0s3F           2921 	ld	hl,#_scratch
   0AE9 E5                 2922 	push	hl
   0AEA CDr00s00           2923 	call	_vdp_load_palette
   0AED F1                 2924 	pop	af
   0AEE                    2925 00113$:
   0AEE DD F9              2926 	ld	sp,ix
   0AF0 DD E1              2927 	pop	ix
   0AF2 C9                 2928 	ret
   0AF3                    2929 _fadein_end::
                           2930 ;demo.c:331: void do_ymmm() {
                           2931 ;	---------------------------------
                           2932 ; Function do_ymmm
                           2933 ; ---------------------------------
   0AF3                    2934 _do_ymmm_start::
   0AF3                    2935 _do_ymmm:
   0AF3 DD E5              2936 	push	ix
   0AF5 DD 21 00 00        2937 	ld	ix,#0
   0AF9 DD 39              2938 	add	ix,sp
   0AFB F5                 2939 	push	af
                           2940 ;demo.c:335: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              2941 	ld	a,#0x20
   0AFE FD 21r02s41        2942 	ld	iy,#_tick
   0B02 FD 96 00           2943 	sub	a,0 (iy)
   0B05 3E 00              2944 	ld	a,#0x00
   0B07 FD 21r02s41        2945 	ld	iy,#_tick
   0B0B FD 9E 01           2946 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           2947 	jp	P,00102$
   0B11 21r02s41           2948 	ld	hl,#_tick + 0
   0B14 36 00              2949 	ld	(hl), #0x00
   0B16 21r03s41           2950 	ld	hl,#_tick + 1
   0B19 36 00              2951 	ld	(hl), #0x00
   0B1B FD 21r1Ds41        2952 	ld	iy,#_flipper
   0B1F FD 34 00           2953 	inc	0 (iy)
   0B22 20 07              2954 	jr	NZ,00115$
   0B24 FD 21r1Ds41        2955 	ld	iy,#_flipper
   0B28 FD 34 01           2956 	inc	1 (iy)
   0B2B                    2957 00115$:
   0B2B                    2958 00102$:
                           2959 ;demo.c:336: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              2960 	ld	a,#0x0A
   0B2D FD 21r1Ds41        2961 	ld	iy,#_flipper
   0B31 FD 96 00           2962 	sub	a,0 (iy)
   0B34 3E 00              2963 	ld	a,#0x00
   0B36 FD 21r1Ds41        2964 	ld	iy,#_flipper
   0B3A FD 9E 01           2965 	sbc	a,1 (iy)
   0B3D F2r4As0B           2966 	jp	P,00104$
   0B40 21r1Ds41           2967 	ld	hl,#_flipper + 0
   0B43 36 00              2968 	ld	(hl), #0x00
   0B45 21r1Es41           2969 	ld	hl,#_flipper + 1
   0B48 36 00              2970 	ld	(hl), #0x00
   0B4A                    2971 00104$:
                           2972 ;demo.c:338: ymmmf++;
   0B4A FD 21r1Fs41        2973 	ld	iy,#_ymmmf
   0B4E FD 34 00           2974 	inc	0 (iy)
   0B51 20 07              2975 	jr	NZ,00116$
   0B53 FD 21r1Fs41        2976 	ld	iy,#_ymmmf
   0B57 FD 34 01           2977 	inc	1 (iy)
   0B5A                    2978 00116$:
                           2979 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r1Bs41           2980 	ld	hl,#_yofff + 0
   0B5D 36 00              2981 	ld	(hl), #0x00
   0B5F                    2982 00105$:
   0B5F 21r1Bs41           2983 	ld	hl,#_yofff + 0
   0B62 4E                 2984 	ld	c,(hl)
   0B63 06 00              2985 	ld	b,#0x00
   0B65 79                 2986 	ld	a,c
   0B66 D6 D2              2987 	sub	a,#0xD2
   0B68 78                 2988 	ld	a,b
   0B69 DE 00              2989 	sbc	a,#0x00
   0B6B F2rE4s0B           2990 	jp	P,00109$
                           2991 ;demo.c:340: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r1Fs41           2992 	ld	hl,#_ymmmf
   0B71 79                 2993 	ld	a,c
   0B72 86                 2994 	add	a,(hl)
   0B73 5F                 2995 	ld	e,a
   0B74 78                 2996 	ld	a,b
   0B75 23                 2997 	inc	hl
   0B76 8E                 2998 	adc	a,(hl)
   0B77 16 00              2999 	ld	d,#0x00
   0B79 CB 23              3000 	sla	e
   0B7B CB 12              3001 	rl	d
   0B7D 21r2Cs00           3002 	ld	hl,#_sintabx
   0B80 19                 3003 	add	hl,de
   0B81 5E                 3004 	ld	e,(hl)
   0B82 23                 3005 	inc	hl
   0B83 56                 3006 	ld	d,(hl)
   0B84 DD 73 FE           3007 	ld	-2 (ix),e
   0B87 DD 72 FF           3008 	ld	-1 (ix),d
                           3009 ;demo.c:343: cmd.source_x = 0;
   0B8A 21r04s41           3010 	ld	hl,#_cmd
   0B8D 36 00              3011 	ld	(hl),#0x00
   0B8F 23                 3012 	inc	hl
   0B90 36 00              3013 	ld	(hl),#0x00
                           3014 ;demo.c:344: cmd.source_y = 0+yofff;
   0B92 11r06s41           3015 	ld	de,#_cmd + 2
   0B95 EB                 3016 	ex	de,hl
   0B96 71                 3017 	ld	(hl),c
   0B97 23                 3018 	inc	hl
   0B98 70                 3019 	ld	(hl),b
                           3020 ;demo.c:345: cmd.dest_x = xo;
   0B99 11r08s41           3021 	ld	de,#_cmd + 4
   0B9C EB                 3022 	ex	de,hl
   0B9D DD 7E FE           3023 	ld	a,-2 (ix)
   0BA0 77                 3024 	ld	(hl),a
   0BA1 23                 3025 	inc	hl
   0BA2 DD 7E FF           3026 	ld	a,-1 (ix)
   0BA5 77                 3027 	ld	(hl),a
                           3028 ;demo.c:346: cmd.dest_y = 3+yofff;
   0BA6 11r0As41           3029 	ld	de,#_cmd + 6
   0BA9 03                 3030 	inc	bc
   0BAA 03                 3031 	inc	bc
   0BAB 03                 3032 	inc	bc
   0BAC 6B                 3033 	ld	l,e
   0BAD 62                 3034 	ld	h,d
   0BAE 71                 3035 	ld	(hl),c
   0BAF 23                 3036 	inc	hl
   0BB0 70                 3037 	ld	(hl),b
                           3038 ;demo.c:347: cmd.size_x = 256;
   0BB1 21r0Cs41           3039 	ld	hl, #_cmd + 8
   0BB4 36 00              3040 	ld	(hl),#0x00
   0BB6 23                 3041 	inc	hl
   0BB7 36 01              3042 	ld	(hl),#0x01
                           3043 ;demo.c:348: cmd.size_y = 1;
   0BB9 21r0Es41           3044 	ld	hl, #_cmd + 10
   0BBC 36 01              3045 	ld	(hl),#0x01
   0BBE 23                 3046 	inc	hl
   0BBF 36 00              3047 	ld	(hl),#0x00
                           3048 ;demo.c:349: cmd.data = 0;
                           3049 ;demo.c:350: cmd.argument = 0;
   0BC1 3E 00              3050 	ld	a,#0x00
   0BC3 32r10s41           3051 	ld	(#_cmd + 12),a
   0BC6 32r11s41           3052 	ld	(#_cmd + 13),a
                           3053 ;demo.c:351: cmd.command = 0xD0;
   0BC9 3E D0              3054 	ld	a,#0xD0
   0BCB 32r12s41           3055 	ld	(#_cmd + 14),a
                           3056 ;demo.c:354: vdp_copier(&cmd);
   0BCE 21r04s41           3057 	ld	hl,#_cmd
   0BD1 E5                 3058 	push	hl
   0BD2 CDr00s00           3059 	call	_vdp_copier
   0BD5 F1                 3060 	pop	af
                           3061 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r1Bs41           3062 	ld	hl,#_yofff + 0
   0BD9 4E                 3063 	ld	c,(hl)
   0BDA 21r1Bs41           3064 	ld	hl,#_yofff
   0BDD 79                 3065 	ld	a,c
   0BDE C6 02              3066 	add	a,#0x02
   0BE0 77                 3067 	ld	(hl),a
   0BE1 C3r5Fs0B           3068 	jp	00105$
   0BE4                    3069 00109$:
   0BE4 DD F9              3070 	ld	sp,ix
   0BE6 DD E1              3071 	pop	ix
   0BE8 C9                 3072 	ret
   0BE9                    3073 _do_ymmm_end::
                           3074 ;demo.c:371: void do_blocks() {
                           3075 ;	---------------------------------
                           3076 ; Function do_blocks
                           3077 ; ---------------------------------
   0BE9                    3078 _do_blocks_start::
   0BE9                    3079 _do_blocks:
   0BE9 DD E5              3080 	push	ix
   0BEB DD 21 00 00        3081 	ld	ix,#0
   0BEF DD 39              3082 	add	ix,sp
   0BF1 21 FA FF           3083 	ld	hl,#-6
   0BF4 39                 3084 	add	hl,sp
   0BF5 F9                 3085 	ld	sp,hl
                           3086 ;demo.c:373: int ys = 0;
   0BF6 DD 36 FC 00        3087 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3088 	ld	-3 (ix),#0x00
                           3089 ;demo.c:374: int ye = 0;
   0BFE DD 36 FA 00        3090 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3091 	ld	-5 (ix),#0x00
                           3092 ;demo.c:376: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3093 	ld	hl,#0x0017
   0C09 E5                 3094 	push	hl
   0C0A CDr00s00           3095 	call	_vdp_register
   0C0D F1                 3096 	pop	af
                           3097 ;demo.c:378: if (block_init == 0) {
   0C0E AF                 3098 	xor	a,a
   0C0F FD 21r21s41        3099 	ld	iy,#_block_init
   0C13 FD B6 00           3100 	or	a,0 (iy)
   0C16 C2r7Es0C           3101 	jp	NZ,00108$
                           3102 ;demo.c:380: vdp_set_screen5();
   0C19 CDr00s00           3103 	call	_vdp_set_screen5
                           3104 ;demo.c:382: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3105 	ld	hl,#0x5F02
   0C1F E5                 3106 	push	hl
   0C20 CDr00s00           3107 	call	_vdp_register
   0C23 F1                 3108 	pop	af
                           3109 ;demo.c:384: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3110 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3111 	ld	-1 (ix),#0x00
   0C2C                    3112 00110$:
   0C2C DD 7E FE           3113 	ld	a,-2 (ix)
   0C2F D6 10              3114 	sub	a,#0x10
   0C31 DD 7E FF           3115 	ld	a,-1 (ix)
   0C34 DE 00              3116 	sbc	a,#0x00
   0C36 F2r6Es0C           3117 	jp	P,00113$
   0C39 DD 4E FE           3118 	ld	c,-2 (ix)
   0C3C DD 46 FF           3119 	ld	b,-1 (ix)
   0C3F CB 21              3120 	sla	c
   0C41 CB 10              3121 	rl	b
   0C43 21r2As41           3122 	ld	hl,#_btab
   0C46 09                 3123 	add	hl,bc
   0C47 4D                 3124 	ld	c,l
   0C48 44                 3125 	ld	b,h
   0C49 DD 5E FE           3126 	ld	e,-2 (ix)
   0C4C DD 56 FF           3127 	ld	d,-1 (ix)
   0C4F CB 23              3128 	sla	e
   0C51 CB 12              3129 	rl	d
   0C53 CB 23              3130 	sla	e
   0C55 CB 12              3131 	rl	d
   0C57 CB 23              3132 	sla	e
   0C59 CB 12              3133 	rl	d
   0C5B CB 23              3134 	sla	e
   0C5D CB 12              3135 	rl	d
   0C5F 69                 3136 	ld	l,c
   0C60 60                 3137 	ld	h,b
   0C61 73                 3138 	ld	(hl),e
   0C62 23                 3139 	inc	hl
   0C63 72                 3140 	ld	(hl),d
   0C64 DD 34 FE           3141 	inc	-2 (ix)
   0C67 20 03              3142 	jr	NZ,00139$
   0C69 DD 34 FF           3143 	inc	-1 (ix)
   0C6C                    3144 00139$:
   0C6C 18 BE              3145 	jr	00110$
   0C6E                    3146 00113$:
                           3147 ;demo.c:385: vdp_load_palette(block_palette);
   0C6E 21r80s40           3148 	ld	hl,#_block_palette
   0C71 E5                 3149 	push	hl
   0C72 CDr00s00           3150 	call	_vdp_load_palette
   0C75 F1                 3151 	pop	af
                           3152 ;demo.c:387: block_init = 1;
   0C76 21r21s41           3153 	ld	hl,#_block_init + 0
   0C79 36 01              3154 	ld	(hl), #0x01
   0C7B C3r07s0E           3155 	jp	00122$
   0C7E                    3156 00108$:
                           3157 ;demo.c:391: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3Ar4As41           3158 	ld	a,(#_flof+0)
   0C81 FD 21r4As41        3159 	ld	iy,#_flof
   0C85 FD B6 01           3160 	or	a,1 (iy)
   0C88 20 10              3161 	jr	NZ,00102$
   0C8A DD 36 FC 00        3162 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3163 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3164 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3165 	ld	-5 (ix),#0x00
   0C9A                    3166 00102$:
                           3167 ;demo.c:392: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3Ar4As41           3168 	ld	a,(#_flof+0)
   0C9D D6 01              3169 	sub	a,#0x01
   0C9F 20 06              3170 	jr	NZ,00140$
   0CA1 3Ar4Bs41           3171 	ld	a,(#_flof+1)
   0CA4 B7                 3172 	or	a,a
   0CA5 28 02              3173 	jr	Z,00141$
   0CA7                    3174 00140$:
   0CA7 18 10              3175 	jr	00104$
   0CA9                    3176 00141$:
   0CA9 DD 36 FC 08        3177 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3178 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3179 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3180 	ld	-5 (ix),#0x00
   0CB9                    3181 00104$:
                           3182 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r28s41        3183 	ld	iy,#_bty
   0CBD FD 36 00 03        3184 	ld	0 (iy),#0x03
   0CC1 FD 21r28s41        3185 	ld	iy,#_bty
   0CC5 FD 36 01 00        3186 	ld	1 (iy),#0x00
   0CC9                    3187 00118$:
   0CC9 3Ar28s41           3188 	ld	a,(#_bty+0)
   0CCC D6 0B              3189 	sub	a,#0x0B
   0CCE 3Ar29s41           3190 	ld	a,(#_bty+1)
   0CD1 DE 00              3191 	sbc	a,#0x00
   0CD3 F2rDEs0D           3192 	jp	P,00121$
                           3193 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3194 	ld	a,-4 (ix)
   0CD9 FD 21r26s41        3195 	ld	iy,#_btx
   0CDD FD 77 00           3196 	ld	0 (iy),a
   0CE0 DD 7E FD           3197 	ld	a,-3 (ix)
   0CE3 FD 21r26s41        3198 	ld	iy,#_btx
   0CE7 FD 77 01           3199 	ld	1 (iy),a
   0CEA                    3200 00114$:
   0CEA 3Ar26s41           3201 	ld	a,(#_btx+0)
   0CED DD 96 FA           3202 	sub	a,-6 (ix)
   0CF0 3Ar27s41           3203 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3204 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3205 	jp	P,00120$
                           3206 ;demo.c:396: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3207 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3208 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3209 	and	a,0 (iy)
   0D03 21r00s00           3210 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3211 	or	a,(hl)
   0D07 4F                 3212 	ld	c,a
   0D08 CB 39              3213 	srl	c
   0D0A 21r22s41           3214 	ld	hl,#_bsx + 0
   0D0D 71                 3215 	ld	(hl), c
   0D0E 21r23s41           3216 	ld	hl,#_bsx + 1
   0D11 36 00              3217 	ld	(hl), #0x00
                           3218 ;demo.c:397: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3219 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r24s41           3220 	ld	hl,#_bsy + 0
   0D19 77                 3221 	ld	(hl), a
   0D1A 21r25s41           3222 	ld	hl,#_bsy + 1
   0D1D 36 00              3223 	ld	(hl), #0x00
                           3224 ;demo.c:398: cmd.source_x = btab[bsx];
   0D1F 21r22s41           3225 	ld	hl,#_bsx + 0
   0D22 4E                 3226 	ld	c,(hl)
   0D23 21r23s41           3227 	ld	hl,#_bsx + 1
   0D26 46                 3228 	ld	b,(hl)
   0D27 CB 21              3229 	sla	c
   0D29 CB 10              3230 	rl	b
   0D2B 21r2As41           3231 	ld	hl,#_btab
   0D2E 09                 3232 	add	hl,bc
   0D2F 4E                 3233 	ld	c,(hl)
   0D30 23                 3234 	inc	hl
   0D31 46                 3235 	ld	b,(hl)
   0D32 21r04s41           3236 	ld	hl,#_cmd
   0D35 71                 3237 	ld	(hl),c
   0D36 23                 3238 	inc	hl
   0D37 70                 3239 	ld	(hl),b
                           3240 ;demo.c:399: cmd.source_y = 768+btab[bsy];
   0D38 01r06s41           3241 	ld	bc,#_cmd + 2
   0D3B 21r24s41           3242 	ld	hl,#_bsy + 0
   0D3E 5E                 3243 	ld	e,(hl)
   0D3F 21r25s41           3244 	ld	hl,#_bsy + 1
   0D42 56                 3245 	ld	d,(hl)
   0D43 CB 23              3246 	sla	e
   0D45 CB 12              3247 	rl	d
   0D47 21r2As41           3248 	ld	hl,#_btab
   0D4A 19                 3249 	add	hl,de
   0D4B 5E                 3250 	ld	e,(hl)
   0D4C 23                 3251 	inc	hl
   0D4D 56                 3252 	ld	d,(hl)
   0D4E 21 00 03           3253 	ld	hl,#0x0300
   0D51 19                 3254 	add	hl,de
   0D52 EB                 3255 	ex	de,hl
   0D53 69                 3256 	ld	l,c
   0D54 60                 3257 	ld	h,b
   0D55 73                 3258 	ld	(hl),e
   0D56 23                 3259 	inc	hl
   0D57 72                 3260 	ld	(hl),d
                           3261 ;demo.c:400: cmd.dest_x = btab[btx];
   0D58 01r08s41           3262 	ld	bc,#_cmd + 4
   0D5B 21r26s41           3263 	ld	hl,#_btx + 0
   0D5E 5E                 3264 	ld	e,(hl)
   0D5F 21r27s41           3265 	ld	hl,#_btx + 1
   0D62 56                 3266 	ld	d,(hl)
   0D63 CB 23              3267 	sla	e
   0D65 CB 12              3268 	rl	d
   0D67 21r2As41           3269 	ld	hl,#_btab
   0D6A 19                 3270 	add	hl,de
   0D6B 5E                 3271 	ld	e,(hl)
   0D6C 23                 3272 	inc	hl
   0D6D 56                 3273 	ld	d,(hl)
   0D6E 69                 3274 	ld	l,c
   0D6F 60                 3275 	ld	h,b
   0D70 73                 3276 	ld	(hl),e
   0D71 23                 3277 	inc	hl
   0D72 72                 3278 	ld	(hl),d
                           3279 ;demo.c:401: cmd.dest_y = 512+btab[bty];
   0D73 01r0As41           3280 	ld	bc,#_cmd + 6
   0D76 21r28s41           3281 	ld	hl,#_bty + 0
   0D79 5E                 3282 	ld	e,(hl)
   0D7A 21r29s41           3283 	ld	hl,#_bty + 1
   0D7D 56                 3284 	ld	d,(hl)
   0D7E CB 23              3285 	sla	e
   0D80 CB 12              3286 	rl	d
   0D82 21r2As41           3287 	ld	hl,#_btab
   0D85 19                 3288 	add	hl,de
   0D86 5E                 3289 	ld	e,(hl)
   0D87 23                 3290 	inc	hl
   0D88 56                 3291 	ld	d,(hl)
   0D89 21 00 02           3292 	ld	hl,#0x0200
   0D8C 19                 3293 	add	hl,de
   0D8D EB                 3294 	ex	de,hl
   0D8E 69                 3295 	ld	l,c
   0D8F 60                 3296 	ld	h,b
   0D90 73                 3297 	ld	(hl),e
   0D91 23                 3298 	inc	hl
   0D92 72                 3299 	ld	(hl),d
                           3300 ;demo.c:402: cmd.size_x = 16;
   0D93 21r0Cs41           3301 	ld	hl, #_cmd + 8
   0D96 36 10              3302 	ld	(hl),#0x10
   0D98 23                 3303 	inc	hl
   0D99 36 00              3304 	ld	(hl),#0x00
                           3305 ;demo.c:403: cmd.size_y = 16;
   0D9B 21r0Es41           3306 	ld	hl, #_cmd + 10
   0D9E 36 10              3307 	ld	(hl),#0x10
   0DA0 23                 3308 	inc	hl
   0DA1 36 00              3309 	ld	(hl),#0x00
                           3310 ;demo.c:404: cmd.data = 0;
                           3311 ;demo.c:405: cmd.argument = 0x00;
   0DA3 3E 00              3312 	ld	a,#0x00
   0DA5 32r10s41           3313 	ld	(#_cmd + 12),a
   0DA8 32r11s41           3314 	ld	(#_cmd + 13),a
                           3315 ;demo.c:406: cmd.command = 0xD0;
   0DAB 3E D0              3316 	ld	a,#0xD0
   0DAD 32r12s41           3317 	ld	(#_cmd + 14),a
                           3318 ;demo.c:407: vdp_copier(&cmd);
   0DB0 21r04s41           3319 	ld	hl,#_cmd
   0DB3 E5                 3320 	push	hl
   0DB4 CDr00s00           3321 	call	_vdp_copier
   0DB7 F1                 3322 	pop	af
                           3323 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r26s41        3324 	ld	iy,#_btx
   0DBC FD 34 00           3325 	inc	0 (iy)
   0DBF 20 07              3326 	jr	NZ,00150$
   0DC1 FD 21r26s41        3327 	ld	iy,#_btx
   0DC5 FD 34 01           3328 	inc	1 (iy)
   0DC8                    3329 00150$:
   0DC8 C3rEAs0C           3330 	jp	00114$
   0DCB                    3331 00120$:
                           3332 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0DCB FD 21r28s41        3333 	ld	iy,#_bty
   0DCF FD 34 00           3334 	inc	0 (iy)
   0DD2 20 07              3335 	jr	NZ,00151$
   0DD4 FD 21r28s41        3336 	ld	iy,#_bty
   0DD8 FD 34 01           3337 	inc	1 (iy)
   0DDB                    3338 00151$:
   0DDB C3rC9s0C           3339 	jp	00118$
   0DDE                    3340 00121$:
                           3341 ;demo.c:411: flof++;
   0DDE FD 21r4As41        3342 	ld	iy,#_flof
   0DE2 FD 34 00           3343 	inc	0 (iy)
   0DE5 20 07              3344 	jr	NZ,00152$
   0DE7 FD 21r4As41        3345 	ld	iy,#_flof
   0DEB FD 34 01           3346 	inc	1 (iy)
   0DEE                    3347 00152$:
                           3348 ;demo.c:412: if (flof == 2) flof = 0;
   0DEE 3Ar4As41           3349 	ld	a,(#_flof+0)
   0DF1 D6 02              3350 	sub	a,#0x02
   0DF3 20 06              3351 	jr	NZ,00153$
   0DF5 3Ar4Bs41           3352 	ld	a,(#_flof+1)
   0DF8 B7                 3353 	or	a,a
   0DF9 28 02              3354 	jr	Z,00154$
   0DFB                    3355 00153$:
   0DFB 18 0A              3356 	jr	00122$
   0DFD                    3357 00154$:
   0DFD 21r4As41           3358 	ld	hl,#_flof + 0
   0E00 36 00              3359 	ld	(hl), #0x00
   0E02 21r4Bs41           3360 	ld	hl,#_flof + 1
   0E05 36 00              3361 	ld	(hl), #0x00
   0E07                    3362 00122$:
   0E07 DD F9              3363 	ld	sp,ix
   0E09 DD E1              3364 	pop	ix
   0E0B C9                 3365 	ret
   0E0C                    3366 _do_blocks_end::
                           3367 ;demo.c:420: void raster_effu() {
                           3368 ;	---------------------------------
                           3369 ; Function raster_effu
                           3370 ; ---------------------------------
   0E0C                    3371 _raster_effu_start::
   0E0C                    3372 _raster_effu:
                           3373 ;demo.c:421: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3374 	ld	hl,#0x0017
   0E0F E5                 3375 	push	hl
   0E10 CDr00s00           3376 	call	_vdp_register
   0E13 F1                 3377 	pop	af
                           3378 ;demo.c:422: waitVB();
   0E14 76                 3379 		halt 
                           3380 ;demo.c:424: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3381 	ld	hl,#0x4001
   0E18 E5                 3382 	push	hl
   0E19 CDr00s00           3383 	call	_vdp_register
                           3384 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3385 	ld	a,#0x28
   0E1E 32r4Cs41           3386 	ld	(#_linenum + 0),a
   0E21 F1                 3387 	pop	af
   0E22 FD 21r4Cs41        3388 	ld	iy,#_linenum
   0E26 FD 36 01 00        3389 	ld	1 (iy),#0x00
   0E2A                    3390 00101$:
   0E2A 3Ar4Cs41           3391 	ld	a,(#_linenum+0)
   0E2D D6 D4              3392 	sub	a,#0xD4
   0E2F 3Ar4Ds41           3393 	ld	a,(#_linenum+1)
   0E32 DE 00              3394 	sbc	a,#0x00
   0E34 F2r65s0E           3395 	jp	P,00104$
                           3396 ;demo.c:427: vdp_register(19,linenum); // interrupt on line
   0E37 3Ar4Cs41           3397 	ld	a,(#_linenum+0)
   0E3A F5                 3398 	push	af
   0E3B 33                 3399 	inc	sp
   0E3C 3E 13              3400 	ld	a,#0x13
   0E3E F5                 3401 	push	af
   0E3F 33                 3402 	inc	sp
   0E40 CDr00s00           3403 	call	_vdp_register
   0E43 F1                 3404 	pop	af
                           3405 ;demo.c:428: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3406 	ld	hl,#0x1600
   0E47 E5                 3407 	push	hl
   0E48 CDr00s00           3408 	call	_vdp_register
   0E4B F1                 3409 	pop	af
                           3410 ;demo.c:430: waitVB();
   0E4C 76                 3411 		halt 
                           3412 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21r4Cs41           3413 	ld	hl,#_linenum
   0E50 7E                 3414 	ld	a,(hl)
   0E51 C6 04              3415 	add	a,#0x04
   0E53 23                 3416 	inc	hl
   0E54 2B                 3417 	dec	hl
   0E55 C5                 3418 	push	bc
   0E56 4F                 3419 	ld	c, a
   0E57 23                 3420 	inc	hl
   0E58 7E                 3421 	ld	a, (hl)
   0E59 47                 3422 	ld	b, a
   0E5A 79                 3423 	ld	a, c
   0E5B 2B                 3424 	dec	hl
   0E5C 77                 3425 	ld	(hl), a
   0E5D 78                 3426 	ld	a, b
   0E5E C1                 3427 	pop	bc
   0E5F CE 00              3428 	adc	a,#0x00
   0E61 23                 3429 	inc	hl
   0E62 77                 3430 	ld	(hl),a
   0E63 18 C5              3431 	jr	00101$
   0E65                    3432 00104$:
                           3433 ;demo.c:433: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3434 	ld	hl,#0x0017
   0E68 E5                 3435 	push	hl
   0E69 CDr00s00           3436 	call	_vdp_register
   0E6C F1                 3437 	pop	af
                           3438 ;demo.c:447: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3439 	ld	hl,#0x0600
   0E70 E5                 3440 	push	hl
   0E71 CDr00s00           3441 	call	_vdp_register
   0E74 F1                 3442 	pop	af
                           3443 ;demo.c:448: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3444 	ld	hl,#0x6001
   0E78 E5                 3445 	push	hl
   0E79 CDr00s00           3446 	call	_vdp_register
   0E7C F1                 3447 	pop	af
   0E7D C9                 3448 	ret
   0E7E                    3449 _raster_effu_end::
                           3450 ;demo.c:479: void do_letter(char cc) {
                           3451 ;	---------------------------------
                           3452 ; Function do_letter
                           3453 ; ---------------------------------
   0E7E                    3454 _do_letter_start::
   0E7E                    3455 _do_letter:
   0E7E DD E5              3456 	push	ix
   0E80 DD 21 00 00        3457 	ld	ix,#0
   0E84 DD 39              3458 	add	ix,sp
   0E86 F5                 3459 	push	af
                           3460 ;demo.c:480: int cidx = cc - 65;
   0E87 DD 4E 04           3461 	ld	c,4 (ix)
   0E8A DD 7E 04           3462 	ld	a,4 (ix)
   0E8D 17                 3463 	rla	
   0E8E 9F                 3464 	sbc	a,a
   0E8F 47                 3465 	ld	b,a
   0E90 79                 3466 	ld	a,c
   0E91 C6 BF              3467 	add	a,#0xBF
   0E93 DD 77 FE           3468 	ld	-2 (ix),a
   0E96 78                 3469 	ld	a,b
   0E97 CE FF              3470 	adc	a,#0xFF
   0E99 DD 77 FF           3471 	ld	-1 (ix),a
                           3472 ;demo.c:481: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3473 	ld	a,#<_font_x
   0E9E DD 86 FE           3474 	add	a,-2 (ix)
   0EA1 5F                 3475 	ld	e,a
   0EA2 3Es0F              3476 	ld	a,#>_font_x
   0EA4 DD 8E FF           3477 	adc	a,-1 (ix)
   0EA7 57                 3478 	ld	d,a
   0EA8 1A                 3479 	ld	a,(de)
   0EA9 5F                 3480 	ld	e,a
   0EAA 16 00              3481 	ld	d,#0x00
   0EAC 21 7F 00           3482 	ld	hl,#0x007F
   0EAF 19                 3483 	add	hl,de
   0EB0 EB                 3484 	ex	de,hl
   0EB1 21r04s41           3485 	ld	hl,#_cmd
   0EB4 73                 3486 	ld	(hl),e
   0EB5 23                 3487 	inc	hl
   0EB6 72                 3488 	ld	(hl),d
                           3489 ;demo.c:482: cmd.source_y = 512+font_y[cidx];
   0EB7 11r06s41           3490 	ld	de,#_cmd + 2
   0EBA 3Er7C              3491 	ld	a,#<_font_y
   0EBC DD 86 FE           3492 	add	a,-2 (ix)
   0EBF 4F                 3493 	ld	c,a
   0EC0 3Es0F              3494 	ld	a,#>_font_y
   0EC2 DD 8E FF           3495 	adc	a,-1 (ix)
   0EC5 47                 3496 	ld	b,a
   0EC6 0A                 3497 	ld	a,(bc)
   0EC7 4F                 3498 	ld	c,a
   0EC8 06 00              3499 	ld	b,#0x00
   0ECA 21 00 02           3500 	ld	hl,#0x0200
   0ECD 09                 3501 	add	hl,bc
   0ECE 4D                 3502 	ld	c,l
   0ECF 44                 3503 	ld	b,h
   0ED0 EB                 3504 	ex	de,hl
   0ED1 71                 3505 	ld	(hl),c
   0ED2 23                 3506 	inc	hl
   0ED3 70                 3507 	ld	(hl),b
                           3508 ;demo.c:483: cmd.dest_x = lx;
   0ED4 01r08s41           3509 	ld	bc,#_cmd + 4
   0ED7 21r4Es41           3510 	ld	hl,#_lx + 0
   0EDA 5E                 3511 	ld	e,(hl)
   0EDB 16 00              3512 	ld	d,#0x00
   0EDD 69                 3513 	ld	l,c
   0EDE 60                 3514 	ld	h,b
   0EDF 73                 3515 	ld	(hl),e
   0EE0 23                 3516 	inc	hl
   0EE1 72                 3517 	ld	(hl),d
                           3518 ;demo.c:484: cmd.dest_y = ly;
   0EE2 01r0As41           3519 	ld	bc,#_cmd + 6
   0EE5 21r4Fs41           3520 	ld	hl,#_ly + 0
   0EE8 5E                 3521 	ld	e,(hl)
   0EE9 16 00              3522 	ld	d,#0x00
   0EEB 69                 3523 	ld	l,c
   0EEC 60                 3524 	ld	h,b
   0EED 73                 3525 	ld	(hl),e
   0EEE 23                 3526 	inc	hl
   0EEF 72                 3527 	ld	(hl),d
                           3528 ;demo.c:485: cmd.size_x = font_w[cidx];
   0EF0 01r0Cs41           3529 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3530 	ld	a,#<_font_w
   0EF5 DD 86 FE           3531 	add	a,-2 (ix)
   0EF8 5F                 3532 	ld	e,a
   0EF9 3Es0F              3533 	ld	a,#>_font_w
   0EFB DD 8E FF           3534 	adc	a,-1 (ix)
   0EFE 57                 3535 	ld	d,a
   0EFF 1A                 3536 	ld	a,(de)
   0F00 5F                 3537 	ld	e,a
   0F01 16 00              3538 	ld	d,#0x00
   0F03 69                 3539 	ld	l,c
   0F04 60                 3540 	ld	h,b
   0F05 73                 3541 	ld	(hl),e
   0F06 23                 3542 	inc	hl
   0F07 72                 3543 	ld	(hl),d
                           3544 ;demo.c:486: cmd.size_y = 8;
   0F08 21r0Es41           3545 	ld	hl, #_cmd + 10
   0F0B 36 08              3546 	ld	(hl),#0x08
   0F0D 23                 3547 	inc	hl
   0F0E 36 00              3548 	ld	(hl),#0x00
                           3549 ;demo.c:487: cmd.argument = 0x00;
   0F10 3E 00              3550 	ld	a,#0x00
   0F12 32r11s41           3551 	ld	(#_cmd + 13),a
                           3552 ;demo.c:488: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3553 	ld	a,#0x90
   0F17 32r12s41           3554 	ld	(#_cmd + 14),a
                           3555 ;demo.c:489: vdp_copier(&cmd);
   0F1A 21r04s41           3556 	ld	hl,#_cmd
   0F1D E5                 3557 	push	hl
   0F1E CDr00s00           3558 	call	_vdp_copier
   0F21 F1                 3559 	pop	af
                           3560 ;demo.c:490: lx+=font_w[cidx]-1;
   0F22 3ErBC              3561 	ld	a,#<_font_w
   0F24 DD 86 FE           3562 	add	a,-2 (ix)
   0F27 4F                 3563 	ld	c,a
   0F28 3Es0F              3564 	ld	a,#>_font_w
   0F2A DD 8E FF           3565 	adc	a,-1 (ix)
   0F2D 47                 3566 	ld	b,a
   0F2E 0A                 3567 	ld	a,(bc)
   0F2F 4F                 3568 	ld	c,a
   0F30 0D                 3569 	dec	c
   0F31 21r4Es41           3570 	ld	hl,#_lx
   0F34 7E                 3571 	ld	a,(hl)
   0F35 81                 3572 	add	a,c
   0F36 77                 3573 	ld	(hl),a
   0F37 DD F9              3574 	ld	sp,ix
   0F39 DD E1              3575 	pop	ix
   0F3B C9                 3576 	ret
   0F3C                    3577 _do_letter_end::
   0F3C                    3578 _font_x:
   0F3C 01                 3579 	.db #0x01
   0F3D 09                 3580 	.db #0x09
   0F3E 11                 3581 	.db #0x11
   0F3F 19                 3582 	.db #0x19
   0F40 21                 3583 	.db #0x21
   0F41 29                 3584 	.db #0x29
   0F42 31                 3585 	.db #0x31
   0F43 39                 3586 	.db #0x39
   0F44 41                 3587 	.db #0x41
   0F45 46                 3588 	.db #0x46
   0F46 4E                 3589 	.db #0x4E
   0F47 56                 3590 	.db #0x56
   0F48 5E                 3591 	.db #0x5E
   0F49 01                 3592 	.db #0x01
   0F4A 0A                 3593 	.db #0x0A
   0F4B 12                 3594 	.db #0x12
   0F4C 1A                 3595 	.db #0x1A
   0F4D 23                 3596 	.db #0x23
   0F4E 2B                 3597 	.db #0x2B
   0F4F 33                 3598 	.db #0x33
   0F50 3C                 3599 	.db #0x3C
   0F51 44                 3600 	.db #0x44
   0F52 4C                 3601 	.db #0x4C
   0F53 56                 3602 	.db #0x56
   0F54 5E                 3603 	.db #0x5E
   0F55 67                 3604 	.db #0x67
   0F56 00                 3605 	.db #0x00
   0F57 00                 3606 	.db #0x00
   0F58 00                 3607 	.db #0x00
   0F59 00                 3608 	.db #0x00
   0F5A 00                 3609 	.db #0x00
   0F5B 00                 3610 	.db #0x00
   0F5C 01                 3611 	.db #0x01
   0F5D 09                 3612 	.db #0x09
   0F5E 11                 3613 	.db #0x11
   0F5F 18                 3614 	.db #0x18
   0F60 20                 3615 	.db #0x20
   0F61 28                 3616 	.db #0x28
   0F62 2F                 3617 	.db #0x2F
   0F63 37                 3618 	.db #0x37
   0F64 3F                 3619 	.db #0x3F
   0F65 45                 3620 	.db #0x45
   0F66 4C                 3621 	.db #0x4C
   0F67 54                 3622 	.db #0x54
   0F68 5A                 3623 	.db #0x5A
   0F69 64                 3624 	.db #0x64
   0F6A 01                 3625 	.db #0x01
   0F6B 09                 3626 	.db #0x09
   0F6C 11                 3627 	.db #0x11
   0F6D 19                 3628 	.db #0x19
   0F6E 21                 3629 	.db #0x21
   0F6F 29                 3630 	.db #0x29
   0F70 30                 3631 	.db #0x30
   0F71 38                 3632 	.db #0x38
   0F72 40                 3633 	.db #0x40
   0F73 4A                 3634 	.db #0x4A
   0F74 52                 3635 	.db #0x52
   0F75 5A                 3636 	.db #0x5A
   0F76 00                 3637 	.db 0x00
   0F77 00                 3638 	.db 0x00
   0F78 00                 3639 	.db 0x00
   0F79 00                 3640 	.db 0x00
   0F7A 00                 3641 	.db 0x00
   0F7B 00                 3642 	.db 0x00
   0F7C                    3643 _font_y:
   0F7C 1C                 3644 	.db #0x1C
   0F7D 1C                 3645 	.db #0x1C
   0F7E 1C                 3646 	.db #0x1C
   0F7F 1C                 3647 	.db #0x1C
   0F80 1C                 3648 	.db #0x1C
   0F81 1C                 3649 	.db #0x1C
   0F82 1C                 3650 	.db #0x1C
   0F83 1C                 3651 	.db #0x1C
   0F84 1C                 3652 	.db #0x1C
   0F85 1C                 3653 	.db #0x1C
   0F86 1C                 3654 	.db #0x1C
   0F87 1C                 3655 	.db #0x1C
   0F88 1C                 3656 	.db #0x1C
   0F89 25                 3657 	.db #0x25
   0F8A 25                 3658 	.db #0x25
   0F8B 25                 3659 	.db #0x25
   0F8C 25                 3660 	.db #0x25
   0F8D 25                 3661 	.db #0x25
   0F8E 25                 3662 	.db #0x25
   0F8F 25                 3663 	.db #0x25
   0F90 25                 3664 	.db #0x25
   0F91 25                 3665 	.db #0x25
   0F92 25                 3666 	.db #0x25
   0F93 25                 3667 	.db #0x25
   0F94 25                 3668 	.db #0x25
   0F95 25                 3669 	.db #0x25
   0F96 00                 3670 	.db #0x00
   0F97 00                 3671 	.db #0x00
   0F98 00                 3672 	.db #0x00
   0F99 00                 3673 	.db #0x00
   0F9A 00                 3674 	.db #0x00
   0F9B 00                 3675 	.db #0x00
   0F9C 37                 3676 	.db #0x37
   0F9D 37                 3677 	.db #0x37
   0F9E 37                 3678 	.db #0x37
   0F9F 37                 3679 	.db #0x37
   0FA0 37                 3680 	.db #0x37
   0FA1 37                 3681 	.db #0x37
   0FA2 37                 3682 	.db #0x37
   0FA3 37                 3683 	.db #0x37
   0FA4 37                 3684 	.db #0x37
   0FA5 37                 3685 	.db #0x37
   0FA6 37                 3686 	.db #0x37
   0FA7 37                 3687 	.db #0x37
   0FA8 37                 3688 	.db #0x37
   0FA9 37                 3689 	.db #0x37
   0FAA 40                 3690 	.db #0x40
   0FAB 40                 3691 	.db #0x40
   0FAC 40                 3692 	.db #0x40
   0FAD 40                 3693 	.db #0x40
   0FAE 40                 3694 	.db #0x40
   0FAF 40                 3695 	.db #0x40
   0FB0 40                 3696 	.db #0x40
   0FB1 40                 3697 	.db #0x40
   0FB2 40                 3698 	.db #0x40
   0FB3 40                 3699 	.db #0x40
   0FB4 40                 3700 	.db #0x40
   0FB5 40                 3701 	.db #0x40
   0FB6 00                 3702 	.db 0x00
   0FB7 00                 3703 	.db 0x00
   0FB8 00                 3704 	.db 0x00
   0FB9 00                 3705 	.db 0x00
   0FBA 00                 3706 	.db 0x00
   0FBB 00                 3707 	.db 0x00
   0FBC                    3708 _font_w:
   0FBC 07                 3709 	.db #0x07
   0FBD 07                 3710 	.db #0x07
   0FBE 07                 3711 	.db #0x07
   0FBF 07                 3712 	.db #0x07
   0FC0 07                 3713 	.db #0x07
   0FC1 07                 3714 	.db #0x07
   0FC2 07                 3715 	.db #0x07
   0FC3 07                 3716 	.db #0x07
   0FC4 04                 3717 	.db #0x04
   0FC5 07                 3718 	.db #0x07
   0FC6 07                 3719 	.db #0x07
   0FC7 07                 3720 	.db #0x07
   0FC8 09                 3721 	.db #0x09
   0FC9 08                 3722 	.db #0x08
   0FCA 07                 3723 	.db #0x07
   0FCB 07                 3724 	.db #0x07
   0FCC 08                 3725 	.db #0x08
   0FCD 07                 3726 	.db #0x07
   0FCE 07                 3727 	.db #0x07
   0FCF 08                 3728 	.db #0x08
   0FD0 07                 3729 	.db #0x07
   0FD1 07                 3730 	.db #0x07
   0FD2 09                 3731 	.db #0x09
   0FD3 07                 3732 	.db #0x07
   0FD4 08                 3733 	.db #0x08
   0FD5 07                 3734 	.db #0x07
   0FD6 00                 3735 	.db #0x00
   0FD7 00                 3736 	.db #0x00
   0FD8 00                 3737 	.db #0x00
   0FD9 00                 3738 	.db #0x00
   0FDA 00                 3739 	.db #0x00
   0FDB 00                 3740 	.db #0x00
   0FDC 07                 3741 	.db #0x07
   0FDD 07                 3742 	.db #0x07
   0FDE 06                 3743 	.db #0x06
   0FDF 07                 3744 	.db #0x07
   0FE0 07                 3745 	.db #0x07
   0FE1 07                 3746 	.db #0x07
   0FE2 07                 3747 	.db #0x07
   0FE3 07                 3748 	.db #0x07
   0FE4 05                 3749 	.db #0x05
   0FE5 06                 3750 	.db #0x06
   0FE6 07                 3751 	.db #0x07
   0FE7 05                 3752 	.db #0x05
   0FE8 09                 3753 	.db #0x09
   0FE9 07                 3754 	.db #0x07
   0FEA 07                 3755 	.db #0x07
   0FEB 07                 3756 	.db #0x07
   0FEC 07                 3757 	.db #0x07
   0FED 07                 3758 	.db #0x07
   0FEE 07                 3759 	.db #0x07
   0FEF 06                 3760 	.db #0x06
   0FF0 07                 3761 	.db #0x07
   0FF1 07                 3762 	.db #0x07
   0FF2 09                 3763 	.db #0x09
   0FF3 07                 3764 	.db #0x07
   0FF4 07                 3765 	.db #0x07
   0FF5 07                 3766 	.db #0x07
   0FF6 00                 3767 	.db 0x00
   0FF7 00                 3768 	.db 0x00
   0FF8 00                 3769 	.db 0x00
   0FF9 00                 3770 	.db 0x00
   0FFA 00                 3771 	.db 0x00
   0FFB 00                 3772 	.db 0x00
                           3773 ;demo.c:494: void do_letter_tall(char cc) {
                           3774 ;	---------------------------------
                           3775 ; Function do_letter_tall
                           3776 ; ---------------------------------
   0FFC                    3777 _do_letter_tall_start::
   0FFC                    3778 _do_letter_tall:
   0FFC DD E5              3779 	push	ix
   0FFE DD 21 00 00        3780 	ld	ix,#0
   1002 DD 39              3781 	add	ix,sp
   1004 F5                 3782 	push	af
                           3783 ;demo.c:495: int cidx = cc - 65;
   1005 DD 4E 04           3784 	ld	c,4 (ix)
   1008 DD 7E 04           3785 	ld	a,4 (ix)
   100B 17                 3786 	rla	
   100C 9F                 3787 	sbc	a,a
   100D 47                 3788 	ld	b,a
   100E 79                 3789 	ld	a,c
   100F C6 BF              3790 	add	a,#0xBF
   1011 DD 77 FE           3791 	ld	-2 (ix),a
   1014 78                 3792 	ld	a,b
   1015 CE FF              3793 	adc	a,#0xFF
   1017 DD 77 FF           3794 	ld	-1 (ix),a
                           3795 ;demo.c:496: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3796 	ld	a,#<_font_x
   101C DD 86 FE           3797 	add	a,-2 (ix)
   101F 5F                 3798 	ld	e,a
   1020 3Es0F              3799 	ld	a,#>_font_x
   1022 DD 8E FF           3800 	adc	a,-1 (ix)
   1025 57                 3801 	ld	d,a
   1026 1A                 3802 	ld	a,(de)
   1027 5F                 3803 	ld	e,a
   1028 16 00              3804 	ld	d,#0x00
   102A 21 7F 00           3805 	ld	hl,#0x007F
   102D 19                 3806 	add	hl,de
   102E EB                 3807 	ex	de,hl
   102F 21r04s41           3808 	ld	hl,#_cmd
   1032 73                 3809 	ld	(hl),e
   1033 23                 3810 	inc	hl
   1034 72                 3811 	ld	(hl),d
                           3812 ;demo.c:497: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r06s41           3813 	ld	de,#_cmd + 2
   1038 3Er7C              3814 	ld	a,#<_font_y
   103A DD 86 FE           3815 	add	a,-2 (ix)
   103D 4F                 3816 	ld	c,a
   103E 3Es0F              3817 	ld	a,#>_font_y
   1040 DD 8E FF           3818 	adc	a,-1 (ix)
   1043 47                 3819 	ld	b,a
   1044 0A                 3820 	ld	a,(bc)
   1045 4F                 3821 	ld	c,a
   1046 06 00              3822 	ld	b,#0x00
   1048 21 FF 01           3823 	ld	hl,#0x01FF
   104B 09                 3824 	add	hl,bc
   104C 4D                 3825 	ld	c,l
   104D 44                 3826 	ld	b,h
   104E EB                 3827 	ex	de,hl
   104F 71                 3828 	ld	(hl),c
   1050 23                 3829 	inc	hl
   1051 70                 3830 	ld	(hl),b
                           3831 ;demo.c:498: cmd.dest_x = lx;
   1052 01r08s41           3832 	ld	bc,#_cmd + 4
   1055 21r4Es41           3833 	ld	hl,#_lx + 0
   1058 5E                 3834 	ld	e,(hl)
   1059 16 00              3835 	ld	d,#0x00
   105B 69                 3836 	ld	l,c
   105C 60                 3837 	ld	h,b
   105D 73                 3838 	ld	(hl),e
   105E 23                 3839 	inc	hl
   105F 72                 3840 	ld	(hl),d
                           3841 ;demo.c:499: cmd.dest_y = ly;
   1060 01r0As41           3842 	ld	bc,#_cmd + 6
   1063 21r4Fs41           3843 	ld	hl,#_ly + 0
   1066 5E                 3844 	ld	e,(hl)
   1067 16 00              3845 	ld	d,#0x00
   1069 69                 3846 	ld	l,c
   106A 60                 3847 	ld	h,b
   106B 73                 3848 	ld	(hl),e
   106C 23                 3849 	inc	hl
   106D 72                 3850 	ld	(hl),d
                           3851 ;demo.c:500: cmd.size_x = font_w[cidx];
   106E 01r0Cs41           3852 	ld	bc,#_cmd + 8
   1071 3ErBC              3853 	ld	a,#<_font_w
   1073 DD 86 FE           3854 	add	a,-2 (ix)
   1076 5F                 3855 	ld	e,a
   1077 3Es0F              3856 	ld	a,#>_font_w
   1079 DD 8E FF           3857 	adc	a,-1 (ix)
   107C 57                 3858 	ld	d,a
   107D 1A                 3859 	ld	a,(de)
   107E 5F                 3860 	ld	e,a
   107F 16 00              3861 	ld	d,#0x00
   1081 69                 3862 	ld	l,c
   1082 60                 3863 	ld	h,b
   1083 73                 3864 	ld	(hl),e
   1084 23                 3865 	inc	hl
   1085 72                 3866 	ld	(hl),d
                           3867 ;demo.c:501: cmd.size_y = 10;
   1086 21r0Es41           3868 	ld	hl, #_cmd + 10
   1089 36 0A              3869 	ld	(hl),#0x0A
   108B 23                 3870 	inc	hl
   108C 36 00              3871 	ld	(hl),#0x00
                           3872 ;demo.c:502: cmd.argument = 0x00;
   108E 3E 00              3873 	ld	a,#0x00
   1090 32r11s41           3874 	ld	(#_cmd + 13),a
                           3875 ;demo.c:503: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3876 	ld	a,#0x90
   1095 32r12s41           3877 	ld	(#_cmd + 14),a
                           3878 ;demo.c:504: vdp_copier(&cmd);
   1098 21r04s41           3879 	ld	hl,#_cmd
   109B E5                 3880 	push	hl
   109C CDr00s00           3881 	call	_vdp_copier
   109F F1                 3882 	pop	af
                           3883 ;demo.c:505: lx+=font_w[cidx]-1;
   10A0 3ErBC              3884 	ld	a,#<_font_w
   10A2 DD 86 FE           3885 	add	a,-2 (ix)
   10A5 4F                 3886 	ld	c,a
   10A6 3Es0F              3887 	ld	a,#>_font_w
   10A8 DD 8E FF           3888 	adc	a,-1 (ix)
   10AB 47                 3889 	ld	b,a
   10AC 0A                 3890 	ld	a,(bc)
   10AD 4F                 3891 	ld	c,a
   10AE 0D                 3892 	dec	c
   10AF 21r4Es41           3893 	ld	hl,#_lx
   10B2 7E                 3894 	ld	a,(hl)
   10B3 81                 3895 	add	a,c
   10B4 77                 3896 	ld	(hl),a
   10B5 DD F9              3897 	ld	sp,ix
   10B7 DD E1              3898 	pop	ix
   10B9 C9                 3899 	ret
   10BA                    3900 _do_letter_tall_end::
                           3901 ;demo.c:508: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3902 ;	---------------------------------
                           3903 ; Function drawstr
                           3904 ; ---------------------------------
   10BA                    3905 _drawstr_start::
   10BA                    3906 _drawstr:
   10BA DD E5              3907 	push	ix
   10BC DD 21 00 00        3908 	ld	ix,#0
   10C0 DD 39              3909 	add	ix,sp
                           3910 ;demo.c:509: char* c = str;
   10C2 DD 4E 04           3911 	ld	c,4 (ix)
   10C5 DD 46 05           3912 	ld	b,5 (ix)
                           3913 ;demo.c:510: lx = x;
   10C8 DD 5E 06           3914 	ld	e,6 (ix)
   10CB 21r4Es41           3915 	ld	hl,#_lx + 0
   10CE 73                 3916 	ld	(hl), e
                           3917 ;demo.c:511: ly = y;
   10CF DD 7E 07           3918 	ld	a,7 (ix)
   10D2 21r4Fs41           3919 	ld	hl,#_ly + 0
   10D5 77                 3920 	ld	(hl), a
                           3921 ;demo.c:512: while (*c) {
   10D6                    3922 00107$:
   10D6 0A                 3923 	ld	a,(bc)
   10D7 57                 3924 	ld	d,a
   10D8 B7                 3925 	or	a,a
   10D9 28 42              3926 	jr	Z,00110$
                           3927 ;demo.c:513: char ltr = *c++; 
   10DB 03                 3928 	inc	bc
                           3929 ;demo.c:514: if (ltr == ' ') lx+=4;
   10DC 7A                 3930 	ld	a,d
   10DD D6 20              3931 	sub	a,#0x20
   10DF 20 1E              3932 	jr	NZ,00105$
   10E1 FD 21r4Es41        3933 	ld	iy,#_lx
   10E5 FD 34 00           3934 	inc	0 (iy)
   10E8 FD 21r4Es41        3935 	ld	iy,#_lx
   10EC FD 34 00           3936 	inc	0 (iy)
   10EF FD 21r4Es41        3937 	ld	iy,#_lx
   10F3 FD 34 00           3938 	inc	0 (iy)
   10F6 FD 21r4Es41        3939 	ld	iy,#_lx
   10FA FD 34 00           3940 	inc	0 (iy)
   10FD 18 D7              3941 	jr	00107$
   10FF                    3942 00105$:
                           3943 ;demo.c:515: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 3944 	ld	a,d
   1100 D6 5F              3945 	sub	a,#0x5F
   1102 20 0D              3946 	jr	NZ,00102$
   1104 21r4Fs41           3947 	ld	hl,#_ly
   1107 7E                 3948 	ld	a,(hl)
   1108 C6 09              3949 	add	a,#0x09
   110A 77                 3950 	ld	(hl),a
   110B 21r4Es41           3951 	ld	hl,#_lx + 0
   110E 73                 3952 	ld	(hl), e
   110F 18 C5              3953 	jr	00107$
   1111                    3954 00102$:
                           3955 ;demo.c:516: else do_letter(ltr);
   1111 C5                 3956 	push	bc
   1112 D5                 3957 	push	de
   1113 D5                 3958 	push	de
   1114 33                 3959 	inc	sp
   1115 CDr7Es0E           3960 	call	_do_letter
   1118 33                 3961 	inc	sp
   1119 D1                 3962 	pop	de
   111A C1                 3963 	pop	bc
   111B 18 B9              3964 	jr	00107$
   111D                    3965 00110$:
   111D DD E1              3966 	pop	ix
   111F C9                 3967 	ret
   1120                    3968 _drawstr_end::
                           3969 ;demo.c:520: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3970 ;	---------------------------------
                           3971 ; Function drawsine
                           3972 ; ---------------------------------
   1120                    3973 _drawsine_start::
   1120                    3974 _drawsine:
   1120 DD E5              3975 	push	ix
   1122 DD 21 00 00        3976 	ld	ix,#0
   1126 DD 39              3977 	add	ix,sp
   1128 3B                 3978 	dec	sp
                           3979 ;demo.c:521: char* c = str;
   1129 DD 4E 04           3980 	ld	c,4 (ix)
   112C DD 46 05           3981 	ld	b,5 (ix)
                           3982 ;demo.c:522: lx = x;
   112F DD 7E 06           3983 	ld	a,6 (ix)
   1132 21r4Es41           3984 	ld	hl,#_lx + 0
   1135 77                 3985 	ld	(hl), a
                           3986 ;demo.c:524: while (*c) {
   1136                    3987 00104$:
   1136 0A                 3988 	ld	a,(bc)
   1137 5F                 3989 	ld	e,a
   1138 B7                 3990 	or	a,a
   1139 CArADs11           3991 	jp	Z,00107$
                           3992 ;demo.c:525: char ltr = *c++; 
   113C 03                 3993 	inc	bc
   113D DD 73 FF           3994 	ld	-1 (ix),e
                           3995 ;demo.c:526: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21r4Es41           3996 	ld	hl,#_lx + 0
   1143 5E                 3997 	ld	e,(hl)
   1144 16 00              3998 	ld	d,#0x00
   1146 21r00s41           3999 	ld	hl,#_vbicount
   1149 7B                 4000 	ld	a,e
   114A 86                 4001 	add	a,(hl)
   114B 5F                 4002 	ld	e,a
   114C 7A                 4003 	ld	a,d
   114D 23                 4004 	inc	hl
   114E 8E                 4005 	adc	a,(hl)
   114F 57                 4006 	ld	d,a
   1150 CB 2A              4007 	sra	d
   1152 CB 1B              4008 	rr	e
   1154 16 00              4009 	ld	d,#0x00
   1156 CB 23              4010 	sla	e
   1158 CB 12              4011 	rl	d
   115A 21r2Cs00           4012 	ld	hl,#_sintabx
   115D 19                 4013 	add	hl,de
   115E 5E                 4014 	ld	e,(hl)
   115F 23                 4015 	inc	hl
   1160 56                 4016 	ld	d,(hl)
   1161 CB 3A              4017 	srl	d
   1163 CB 1B              4018 	rr	e
   1165 CB 3A              4019 	srl	d
   1167 CB 1B              4020 	rr	e
   1169 CB 3A              4021 	srl	d
   116B CB 1B              4022 	rr	e
   116D CB 3A              4023 	srl	d
   116F CB 1B              4024 	rr	e
   1171 21r4Fs41           4025 	ld	hl,#_ly
   1174 DD 7E 07           4026 	ld	a,7 (ix)
   1177 83                 4027 	add	a,e
   1178 77                 4028 	ld	(hl),a
                           4029 ;demo.c:527: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           4030 	ld	a,-1 (ix)
   117C D6 20              4031 	sub	a,#0x20
   117E 20 1F              4032 	jr	NZ,00102$
   1180 FD 21r4Es41        4033 	ld	iy,#_lx
   1184 FD 34 00           4034 	inc	0 (iy)
   1187 FD 21r4Es41        4035 	ld	iy,#_lx
   118B FD 34 00           4036 	inc	0 (iy)
   118E FD 21r4Es41        4037 	ld	iy,#_lx
   1192 FD 34 00           4038 	inc	0 (iy)
   1195 FD 21r4Es41        4039 	ld	iy,#_lx
   1199 FD 34 00           4040 	inc	0 (iy)
   119C C3r36s11           4041 	jp	00104$
   119F                    4042 00102$:
                           4043 ;demo.c:528: else do_letter_tall(ltr);
   119F C5                 4044 	push	bc
   11A0 DD 7E FF           4045 	ld	a,-1 (ix)
   11A3 F5                 4046 	push	af
   11A4 33                 4047 	inc	sp
   11A5 CDrFCs0F           4048 	call	_do_letter_tall
   11A8 33                 4049 	inc	sp
   11A9 C1                 4050 	pop	bc
   11AA C3r36s11           4051 	jp	00104$
   11AD                    4052 00107$:
   11AD DD F9              4053 	ld	sp,ix
   11AF DD E1              4054 	pop	ix
   11B1 C9                 4055 	ret
   11B2                    4056 _drawsine_end::
                           4057 ;demo.c:532: void font() {
                           4058 ;	---------------------------------
                           4059 ; Function font
                           4060 ; ---------------------------------
   11B2                    4061 _font_start::
   11B2                    4062 _font:
                           4063 ;demo.c:534: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           4064 	ld	hl,#0x3C4A
   11B5 E5                 4065 	push	hl
   11B6 21rC0s11           4066 	ld	hl,#__str_8
   11B9 E5                 4067 	push	hl
   11BA CDrBAs10           4068 	call	_drawstr
   11BD F1                 4069 	pop	af
   11BE F1                 4070 	pop	af
   11BF C9                 4071 	ret
   11C0                    4072 _font_end::
   11C0                    4073 __str_8:
   11C0 44 49 47 49 54 41  4074 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  4075 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 4076 	.db 0x00
                           4077 ;demo.c:543: void twister() {
                           4078 ;	---------------------------------
                           4079 ; Function twister
                           4080 ; ---------------------------------
   1223                    4081 _twister_start::
   1223                    4082 _twister:
   1223 DD E5              4083 	push	ix
   1225 DD 21 00 00        4084 	ld	ix,#0
   1229 DD 39              4085 	add	ix,sp
   122B F5                 4086 	push	af
                           4087 ;demo.c:547: if (twinited == 0) {
   122C 3Ar52s41           4088 	ld	a,(#_twinited+0)
   122F FD 21r52s41        4089 	ld	iy,#_twinited
   1233 FD B6 01           4090 	or	a,1 (iy)
   1236 C2rA6s12           4091 	jp	NZ,00102$
                           4092 ;demo.c:548: cmd.size_x = 256;
   1239 21r0Cs41           4093 	ld	hl, #_cmd + 8
   123C 36 00              4094 	ld	(hl),#0x00
   123E 23                 4095 	inc	hl
   123F 36 01              4096 	ld	(hl),#0x01
                           4097 ;demo.c:549: cmd.size_y = 1;
   1241 21r0Es41           4098 	ld	hl, #_cmd + 10
   1244 36 01              4099 	ld	(hl),#0x01
   1246 23                 4100 	inc	hl
   1247 36 00              4101 	ld	(hl),#0x00
                           4102 ;demo.c:550: cmd.data = 0;
                           4103 ;demo.c:551: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4104 	ld	a,#0x00
   124B 32r10s41           4105 	ld	(#_cmd + 12),a
   124E 32r11s41           4106 	ld	(#_cmd + 13),a
                           4107 ;demo.c:552: cmd.command = 0xd0; // vram to vram, y only
   1251 01r12s41           4108 	ld	bc,#_cmd + 14
   1254 3E D0              4109 	ld	a,#0xD0
   1256 02                 4110 	ld	(bc),a
                           4111 ;demo.c:553: cmd.source_x = 0;
   1257 21r04s41           4112 	ld	hl,#_cmd
   125A 36 00              4113 	ld	(hl),#0x00
   125C 23                 4114 	inc	hl
   125D 36 00              4115 	ld	(hl),#0x00
                           4116 ;demo.c:554: cmd.dest_x = 0;
   125F 21r08s41           4117 	ld	hl, #_cmd + 4
   1262 36 00              4118 	ld	(hl),#0x00
   1264 23                 4119 	inc	hl
   1265 36 00              4120 	ld	(hl),#0x00
                           4121 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4122 	ld	bc,#0x0000
   126A                    4123 00103$:
   126A 79                 4124 	ld	a,c
   126B D6 D4              4125 	sub	a,#0xD4
   126D 78                 4126 	ld	a,b
   126E DE 00              4127 	sbc	a,#0x00
   1270 F2r91s12           4128 	jp	P,00106$
                           4129 ;demo.c:557: waitVB();
   1273 76                 4130 		halt 
                           4131 ;demo.c:558: cmd.source_y = 0;
   1274 11r06s41           4132 	ld	de,#_cmd + 2
   1277 EB                 4133 	ex	de,hl
   1278 36 00              4134 	ld	(hl),#0x00
   127A 23                 4135 	inc	hl
   127B 36 00              4136 	ld	(hl),#0x00
                           4137 ;demo.c:559: cmd.dest_y = y;
   127D 11r0As41           4138 	ld	de,#_cmd + 6
   1280 EB                 4139 	ex	de,hl
   1281 71                 4140 	ld	(hl),c
   1282 23                 4141 	inc	hl
   1283 70                 4142 	ld	(hl),b
                           4143 ;demo.c:560: vdp_copier(&cmd);
   1284 C5                 4144 	push	bc
   1285 21r04s41           4145 	ld	hl,#_cmd
   1288 E5                 4146 	push	hl
   1289 CDr00s00           4147 	call	_vdp_copier
   128C F1                 4148 	pop	af
   128D C1                 4149 	pop	bc
                           4150 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   128E 03                 4151 	inc	bc
   128F 18 D9              4152 	jr	00103$
   1291                    4153 00106$:
                           4154 ;demo.c:564: twinited = 1;
   1291 21r52s41           4155 	ld	hl,#_twinited + 0
   1294 36 01              4156 	ld	(hl), #0x01
   1296 21r53s41           4157 	ld	hl,#_twinited + 1
   1299 36 00              4158 	ld	(hl), #0x00
                           4159 ;demo.c:565: vdp_load_palette(twister_palette);
   129B 21rA0s40           4160 	ld	hl,#_twister_palette
   129E E5                 4161 	push	hl
   129F CDr00s00           4162 	call	_vdp_load_palette
   12A2 F1                 4163 	pop	af
                           4164 ;demo.c:566: font();
   12A3 CDrB2s11           4165 	call	_font
   12A6                    4166 00102$:
                           4167 ;demo.c:569: cmd.size_x = 70;
   12A6 21r0Cs41           4168 	ld	hl, #_cmd + 8
   12A9 36 46              4169 	ld	(hl),#0x46
   12AB 23                 4170 	inc	hl
   12AC 36 00              4171 	ld	(hl),#0x00
                           4172 ;demo.c:570: cmd.size_y = 2;
   12AE 21r0Es41           4173 	ld	hl, #_cmd + 10
   12B1 36 02              4174 	ld	(hl),#0x02
   12B3 23                 4175 	inc	hl
   12B4 36 00              4176 	ld	(hl),#0x00
                           4177 ;demo.c:571: cmd.data = 0;
   12B6 3E 00              4178 	ld	a,#0x00
   12B8 32r10s41           4179 	ld	(#_cmd + 12),a
                           4180 ;demo.c:572: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4181 	ld	a,#0x04
   12BD 32r11s41           4182 	ld	(#_cmd + 13),a
                           4183 ;demo.c:573: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r12s41           4184 	ld	bc,#_cmd + 14
   12C3 3E E0              4185 	ld	a,#0xE0
   12C5 02                 4186 	ld	(bc),a
                           4187 ;demo.c:574: cmd.source_x = 70;
   12C6 21r04s41           4188 	ld	hl,#_cmd
   12C9 36 46              4189 	ld	(hl),#0x46
   12CB 23                 4190 	inc	hl
   12CC 36 00              4191 	ld	(hl),#0x00
                           4192 ;demo.c:575: cmd.dest_x = 70;
   12CE 21r08s41           4193 	ld	hl, #_cmd + 4
   12D1 36 46              4194 	ld	(hl),#0x46
   12D3 23                 4195 	inc	hl
   12D4 36 00              4196 	ld	(hl),#0x00
                           4197 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4198 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4199 	ld	-1 (ix),#0x00
   12DE                    4200 00107$:
   12DE DD 7E FE           4201 	ld	a,-2 (ix)
   12E1 D6 D4              4202 	sub	a,#0xD4
   12E3 DD 7E FF           4203 	ld	a,-1 (ix)
   12E6 DE 00              4204 	sbc	a,#0x00
   12E8 F2r41s13           4205 	jp	P,00110$
                           4206 ;demo.c:578: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r06s41           4207 	ld	de,#_cmd + 2
   12EE DD 4E FE           4208 	ld	c,-2 (ix)
   12F1 DD 46 FF           4209 	ld	b,-1 (ix)
   12F4 CB 28              4210 	sra	b
   12F6 CB 19              4211 	rr	c
   12F8 3Ar50s41           4212 	ld	a,(#_ff+0)
   12FB 81                 4213 	add	a,c
   12FC 4F                 4214 	ld	c,a
   12FD 3Ar51s41           4215 	ld	a,(#_ff+1)
   1300 88                 4216 	adc	a,b
   1301 06 00              4217 	ld	b,#0x00
   1303 21r00s00           4218 	ld	hl,#_sintab
   1306 09                 4219 	add	hl,bc
   1307 7E                 4220 	ld	a,(hl)
   1308 4F                 4221 	ld	c,a
   1309 CB 29              4222 	sra	c
   130B 79                 4223 	ld	a,c
   130C 17                 4224 	rla	
   130D 9F                 4225 	sbc	a,a
   130E 47                 4226 	ld	b,a
   130F 21 40 02           4227 	ld	hl,#0x0240
   1312 09                 4228 	add	hl,bc
   1313 4D                 4229 	ld	c,l
   1314 44                 4230 	ld	b,h
   1315 6B                 4231 	ld	l,e
   1316 62                 4232 	ld	h,d
   1317 71                 4233 	ld	(hl),c
   1318 23                 4234 	inc	hl
   1319 70                 4235 	ld	(hl),b
                           4236 ;demo.c:579: cmd.dest_y = y;
   131A 21r0As41           4237 	ld	hl, #_cmd + 6
   131D DD 7E FE           4238 	ld	a,-2 (ix)
   1320 77                 4239 	ld	(hl),a
   1321 23                 4240 	inc	hl
   1322 DD 7E FF           4241 	ld	a,-1 (ix)
   1325 77                 4242 	ld	(hl),a
                           4243 ;demo.c:580: vdp_copier(&cmd);
   1326 21r04s41           4244 	ld	hl,#_cmd
   1329 E5                 4245 	push	hl
   132A CDr00s00           4246 	call	_vdp_copier
   132D F1                 4247 	pop	af
                           4248 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4249 	ld	a,-2 (ix)
   1331 C6 02              4250 	add	a,#0x02
   1333 DD 77 FE           4251 	ld	-2 (ix),a
   1336 DD 7E FF           4252 	ld	a,-1 (ix)
   1339 CE 00              4253 	adc	a,#0x00
   133B DD 77 FF           4254 	ld	-1 (ix),a
   133E C3rDEs12           4255 	jp	00107$
   1341                    4256 00110$:
                           4257 ;demo.c:584: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21r50s41           4258 	ld	hl,#_ff + 0
   1344 4E                 4259 	ld	c,(hl)
   1345 21r51s41           4260 	ld	hl,#_ff + 1
   1348 46                 4261 	ld	b,(hl)
   1349 CB 28              4262 	sra	b
   134B CB 19              4263 	rr	c
   134D CB 28              4264 	sra	b
   134F CB 19              4265 	rr	c
   1351 21r50s41           4266 	ld	hl,#_ff + 0
   1354 5E                 4267 	ld	e,(hl)
   1355 21r51s41           4268 	ld	hl,#_ff + 1
   1358 56                 4269 	ld	d,(hl)
   1359 CB 2A              4270 	sra	d
   135B CB 1B              4271 	rr	e
   135D CB 2A              4272 	sra	d
   135F CB 1B              4273 	rr	e
   1361 CB 2A              4274 	sra	d
   1363 CB 1B              4275 	rr	e
   1365 43                 4276 	ld	b,e
   1366 79                 4277 	ld	a,c
   1367 F5                 4278 	push	af
   1368 33                 4279 	inc	sp
   1369 C5                 4280 	push	bc
   136A 33                 4281 	inc	sp
   136B 41                 4282 	ld	b,c
   136C 0E 04              4283 	ld	c,#0x04
   136E C5                 4284 	push	bc
   136F CDr00s00           4285 	call	_msx2_palette
   1372 F1                 4286 	pop	af
   1373 F1                 4287 	pop	af
                           4288 ;demo.c:586: ff+=4;
   1374 21r50s41           4289 	ld	hl,#_ff
   1377 7E                 4290 	ld	a,(hl)
   1378 C6 04              4291 	add	a,#0x04
   137A 23                 4292 	inc	hl
   137B 2B                 4293 	dec	hl
   137C C5                 4294 	push	bc
   137D 4F                 4295 	ld	c, a
   137E 23                 4296 	inc	hl
   137F 7E                 4297 	ld	a, (hl)
   1380 47                 4298 	ld	b, a
   1381 79                 4299 	ld	a, c
   1382 2B                 4300 	dec	hl
   1383 77                 4301 	ld	(hl), a
   1384 78                 4302 	ld	a, b
   1385 C1                 4303 	pop	bc
   1386 CE 00              4304 	adc	a,#0x00
   1388 23                 4305 	inc	hl
   1389 77                 4306 	ld	(hl),a
   138A DD F9              4307 	ld	sp,ix
   138C DD E1              4308 	pop	ix
   138E C9                 4309 	ret
   138F                    4310 _twister_end::
                           4311 ;demo.c:597: void bulbs() {
                           4312 ;	---------------------------------
                           4313 ; Function bulbs
                           4314 ; ---------------------------------
   138F                    4315 _bulbs_start::
   138F                    4316 _bulbs:
   138F DD E5              4317 	push	ix
   1391 DD 21 00 00        4318 	ld	ix,#0
   1395 DD 39              4319 	add	ix,sp
   1397 21 FA FF           4320 	ld	hl,#-6
   139A 39                 4321 	add	hl,sp
   139B F9                 4322 	ld	sp,hl
                           4323 ;demo.c:601: ender+=enderdir;
   139C 21r5Cs41           4324 	ld	hl,#_enderdir
   139F D5                 4325 	push	de
   13A0 FD 21r5As41        4326 	ld	iy,#_ender
   13A4 FD E5              4327 	push	iy
   13A6 D1                 4328 	pop	de
   13A7 1A                 4329 	ld	a,(de)
   13A8 86                 4330 	add	a,(hl)
   13A9 13                 4331 	inc	de
   13AA 1B                 4332 	dec	de
   13AB C5                 4333 	push	bc
   13AC 4F                 4334 	ld	c, a
   13AD 13                 4335 	inc	de
   13AE 1A                 4336 	ld	a, (de)
   13AF 47                 4337 	ld	b, a
   13B0 79                 4338 	ld	a, c
   13B1 1B                 4339 	dec	de
   13B2 12                 4340 	ld	(de), a
   13B3 78                 4341 	ld	a, b
   13B4 C1                 4342 	pop	bc
   13B5 23                 4343 	inc	hl
   13B6 8E                 4344 	adc	a,(hl)
   13B7 13                 4345 	inc	de
   13B8 12                 4346 	ld	(de),a
   13B9 D1                 4347 	pop	de
                           4348 ;demo.c:602: if (ender < 2) { enderdir = -enderdir; }
   13BA 3Ar5As41           4349 	ld	a,(#_ender+0)
   13BD D6 02              4350 	sub	a,#0x02
   13BF 3Ar5Bs41           4351 	ld	a,(#_ender+1)
   13C2 DE 00              4352 	sbc	a,#0x00
   13C4 F2rE8s13           4353 	jp	P,00102$
   13C7 AF                 4354 	xor	a,a
   13C8 FD 21r5Cs41        4355 	ld	iy,#_enderdir
   13CC 3E 00              4356 	ld	a,#0x00
   13CE FD 9E 00           4357 	sbc	a,0 (iy)
   13D1 FD 21r5Cs41        4358 	ld	iy,#_enderdir
   13D5 FD 77 00           4359 	ld	0 (iy),a
   13D8 FD 21r5Cs41        4360 	ld	iy,#_enderdir
   13DC 3E 00              4361 	ld	a,#0x00
   13DE FD 9E 01           4362 	sbc	a,1 (iy)
   13E1 FD 21r5Cs41        4363 	ld	iy,#_enderdir
   13E5 FD 77 01           4364 	ld	1 (iy),a
   13E8                    4365 00102$:
                           4366 ;demo.c:603: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   13E8 3Ar5As41           4367 	ld	a,(#_ender+0)
   13EB D6 D4              4368 	sub	a,#0xD4
   13ED 3Ar5Bs41           4369 	ld	a,(#_ender+1)
   13F0 DE 00              4370 	sbc	a,#0x00
   13F2 FAr18s14           4371 	jp	M,00104$
   13F5 AF                 4372 	xor	a,a
   13F6 FD 21r5Cs41        4373 	ld	iy,#_enderdir
   13FA 3E 00              4374 	ld	a,#0x00
   13FC FD 9E 00           4375 	sbc	a,0 (iy)
   13FF 21r5Cs41           4376 	ld	hl,#_enderdir + 0
   1402 77                 4377 	ld	(hl), a
   1403 FD 21r5Cs41        4378 	ld	iy,#_enderdir
   1407 3E 00              4379 	ld	a,#0x00
   1409 FD 9E 01           4380 	sbc	a,1 (iy)
   140C 21r5Ds41           4381 	ld	hl,#_enderdir + 1
   140F 77                 4382 	ld	(hl), a
   1410 2Ar5Es41           4383 	ld	hl,(_sy)
   1413 2B                 4384 	dec	hl
   1414 2B                 4385 	dec	hl
   1415 22r5Es41           4386 	ld	(_sy),hl
   1418                    4387 00104$:
                           4388 ;demo.c:605: enderend = ender + 92;
   1418 3Ar5As41           4389 	ld	a,(#_ender+0)
   141B C6 5C              4390 	add	a,#0x5C
   141D DD 77 FE           4391 	ld	-2 (ix),a
   1420 3Ar5Bs41           4392 	ld	a,(#_ender+1)
   1423 CE 00              4393 	adc	a,#0x00
   1425 DD 77 FF           4394 	ld	-1 (ix),a
                           4395 ;demo.c:607: if (enderend > 212) enderend = 212;
   1428 3E D4              4396 	ld	a,#0xD4
   142A DD 96 FE           4397 	sub	a,-2 (ix)
   142D 3E 00              4398 	ld	a,#0x00
   142F DD 9E FF           4399 	sbc	a,-1 (ix)
   1432 F2r3Ds14           4400 	jp	P,00106$
   1435 DD 36 FE D4        4401 	ld	-2 (ix),#0xD4
   1439 DD 36 FF 00        4402 	ld	-1 (ix),#0x00
   143D                    4403 00106$:
                           4404 ;demo.c:608: if (enderend > 212-16) sy = 16-(212-enderend);
   143D 3E C4              4405 	ld	a,#0xC4
   143F DD 96 FE           4406 	sub	a,-2 (ix)
   1442 3E 00              4407 	ld	a,#0x00
   1444 DD 9E FF           4408 	sbc	a,-1 (ix)
   1447 F2r62s14           4409 	jp	P,00108$
   144A 3E D4              4410 	ld	a,#0xD4
   144C DD 96 FE           4411 	sub	a,-2 (ix)
   144F 5F                 4412 	ld	e,a
   1450 3E 00              4413 	ld	a,#0x00
   1452 DD 9E FF           4414 	sbc	a,-1 (ix)
   1455 57                 4415 	ld	d,a
   1456 21r5Es41           4416 	ld	hl,#_sy
   1459 3E 10              4417 	ld	a,#0x10
   145B 93                 4418 	sub	a,e
   145C 77                 4419 	ld	(hl),a
   145D 3E 00              4420 	ld	a,#0x00
   145F 9A                 4421 	sbc	a,d
   1460 23                 4422 	inc	hl
   1461 77                 4423 	ld	(hl),a
   1462                    4424 00108$:
                           4425 ;demo.c:610: if(bulbflipper == 1) {
   1462 3Ar54s41           4426 	ld	a,(#_bulbflipper+0)
   1465 D6 01              4427 	sub	a,#0x01
   1467 20 06              4428 	jr	NZ,00133$
   1469 3Ar55s41           4429 	ld	a,(#_bulbflipper+1)
   146C B7                 4430 	or	a,a
   146D 28 03              4431 	jr	Z,00134$
   146F                    4432 00133$:
   146F C3r28s15           4433 	jp	00110$
   1472                    4434 00134$:
                           4435 ;demo.c:611: cmd.size_x = 72;
   1472 11r0Cs41           4436 	ld	de,#_cmd + 8
   1475 EB                 4437 	ex	de,hl
   1476 36 48              4438 	ld	(hl),#0x48
   1478 23                 4439 	inc	hl
   1479 36 00              4440 	ld	(hl),#0x00
                           4441 ;demo.c:612: cmd.size_y = sy;
   147B 11r0Es41           4442 	ld	de,#_cmd + 10
   147E ED 4Br5Es41        4443 	ld	bc,(_sy)
   1482 6B                 4444 	ld	l,e
   1483 62                 4445 	ld	h,d
   1484 71                 4446 	ld	(hl),c
   1485 23                 4447 	inc	hl
   1486 70                 4448 	ld	(hl),b
                           4449 ;demo.c:613: cmd.data = 0;
   1487 3E 00              4450 	ld	a,#0x00
   1489 32r10s41           4451 	ld	(#_cmd + 12),a
                           4452 ;demo.c:614: cmd.argument = 0x04; // from 72xY to left
   148C 3E 04              4453 	ld	a,#0x04
   148E 32r11s41           4454 	ld	(#_cmd + 13),a
                           4455 ;demo.c:615: cmd.command = 0xe0; // vram to vram, y only
   1491 01r12s41           4456 	ld	bc,#_cmd + 14
   1494 3E E0              4457 	ld	a,#0xE0
   1496 02                 4458 	ld	(bc),a
                           4459 ;demo.c:616: cmd.source_x = 72;
   1497 21r04s41           4460 	ld	hl,#_cmd
   149A 36 48              4461 	ld	(hl),#0x48
   149C 23                 4462 	inc	hl
   149D 36 00              4463 	ld	(hl),#0x00
                           4464 ;demo.c:617: cmd.dest_x = 72;
   149F 21r08s41           4465 	ld	hl, #_cmd + 4
   14A2 36 48              4466 	ld	(hl),#0x48
   14A4 23                 4467 	inc	hl
   14A5 36 00              4468 	ld	(hl),#0x00
                           4469 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14A7 ED 4Br5As41        4470 	ld	bc,(_ender)
   14AB DD 71 FC           4471 	ld	-4 (ix),c
   14AE DD 70 FD           4472 	ld	-3 (ix),b
   14B1                    4473 00112$:
   14B1 DD 7E FC           4474 	ld	a,-4 (ix)
   14B4 DD 96 FE           4475 	sub	a,-2 (ix)
   14B7 DD 7E FD           4476 	ld	a,-3 (ix)
   14BA DD 9E FF           4477 	sbc	a,-1 (ix)
   14BD F2r0Fs15           4478 	jp	P,00115$
                           4479 ;demo.c:620: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   14C0 01r06s41           4480 	ld	bc,#_cmd + 2
   14C3 3Ar56s41           4481 	ld	a,(#_ff1+0)
   14C6 DD 86 FC           4482 	add	a,-4 (ix)
   14C9 5F                 4483 	ld	e,a
   14CA 3Ar57s41           4484 	ld	a,(#_ff1+1)
   14CD DD 8E FD           4485 	adc	a,-3 (ix)
   14D0 16 00              4486 	ld	d,#0x00
   14D2 21r00s00           4487 	ld	hl,#_sintab
   14D5 19                 4488 	add	hl,de
   14D6 5E                 4489 	ld	e,(hl)
   14D7 CB 2B              4490 	sra	e
   14D9 7B                 4491 	ld	a,e
   14DA 17                 4492 	rla	
   14DB 9F                 4493 	sbc	a,a
   14DC 57                 4494 	ld	d,a
   14DD 21 40 01           4495 	ld	hl,#0x0140
   14E0 19                 4496 	add	hl,de
   14E1 EB                 4497 	ex	de,hl
   14E2 69                 4498 	ld	l,c
   14E3 60                 4499 	ld	h,b
   14E4 73                 4500 	ld	(hl),e
   14E5 23                 4501 	inc	hl
   14E6 72                 4502 	ld	(hl),d
                           4503 ;demo.c:621: cmd.dest_y = y;
   14E7 11r0As41           4504 	ld	de,#_cmd + 6
   14EA EB                 4505 	ex	de,hl
   14EB DD 7E FC           4506 	ld	a,-4 (ix)
   14EE 77                 4507 	ld	(hl),a
   14EF 23                 4508 	inc	hl
   14F0 DD 7E FD           4509 	ld	a,-3 (ix)
   14F3 77                 4510 	ld	(hl),a
                           4511 ;demo.c:622: vdp_copier(&cmd);
   14F4 21r04s41           4512 	ld	hl,#_cmd
   14F7 E5                 4513 	push	hl
   14F8 CDr00s00           4514 	call	_vdp_copier
   14FB F1                 4515 	pop	af
                           4516 ;demo.c:619: for (y = ender; y < enderend; y+=16) {
   14FC DD 7E FC           4517 	ld	a,-4 (ix)
   14FF C6 10              4518 	add	a,#0x10
   1501 DD 77 FC           4519 	ld	-4 (ix),a
   1504 DD 7E FD           4520 	ld	a,-3 (ix)
   1507 CE 00              4521 	adc	a,#0x00
   1509 DD 77 FD           4522 	ld	-3 (ix),a
   150C C3rB1s14           4523 	jp	00112$
   150F                    4524 00115$:
                           4525 ;demo.c:624: ff1+=4;
   150F 21r56s41           4526 	ld	hl,#_ff1
   1512 7E                 4527 	ld	a,(hl)
   1513 C6 04              4528 	add	a,#0x04
   1515 23                 4529 	inc	hl
   1516 2B                 4530 	dec	hl
   1517 C5                 4531 	push	bc
   1518 4F                 4532 	ld	c, a
   1519 23                 4533 	inc	hl
   151A 7E                 4534 	ld	a, (hl)
   151B 47                 4535 	ld	b, a
   151C 79                 4536 	ld	a, c
   151D 2B                 4537 	dec	hl
   151E 77                 4538 	ld	(hl), a
   151F 78                 4539 	ld	a, b
   1520 C1                 4540 	pop	bc
   1521 CE 00              4541 	adc	a,#0x00
   1523 23                 4542 	inc	hl
   1524 77                 4543 	ld	(hl),a
   1525 C3rCDs15           4544 	jp	00111$
   1528                    4545 00110$:
                           4546 ;demo.c:628: cmd.size_x = 72;
   1528 11r0Cs41           4547 	ld	de,#_cmd + 8
   152B EB                 4548 	ex	de,hl
   152C 36 48              4549 	ld	(hl),#0x48
   152E 23                 4550 	inc	hl
   152F 36 00              4551 	ld	(hl),#0x00
                           4552 ;demo.c:629: cmd.size_y = sy;
   1531 01r0Es41           4553 	ld	bc,#_cmd + 10
   1534 ED 5Br5Es41        4554 	ld	de,(_sy)
   1538 69                 4555 	ld	l,c
   1539 60                 4556 	ld	h,b
   153A 73                 4557 	ld	(hl),e
   153B 23                 4558 	inc	hl
   153C 72                 4559 	ld	(hl),d
                           4560 ;demo.c:630: cmd.data = 0;
   153D 11r10s41           4561 	ld	de,#_cmd + 12
   1540 3E 00              4562 	ld	a,#0x00
   1542 12                 4563 	ld	(de),a
                           4564 ;demo.c:631: cmd.argument = 0x00; // from 182xY to right
   1543 11r11s41           4565 	ld	de,#_cmd + 13
   1546 3E 00              4566 	ld	a,#0x00
   1548 12                 4567 	ld	(de),a
                           4568 ;demo.c:632: cmd.command = 0xe0; // vram to vram, y only
   1549 11r12s41           4569 	ld	de,#_cmd + 14
   154C 3E E0              4570 	ld	a,#0xE0
   154E 12                 4571 	ld	(de),a
                           4572 ;demo.c:633: cmd.source_x = 182;
   154F 21r04s41           4573 	ld	hl,#_cmd
   1552 36 B6              4574 	ld	(hl),#0xB6
   1554 23                 4575 	inc	hl
   1555 36 00              4576 	ld	(hl),#0x00
                           4577 ;demo.c:634: cmd.dest_x = 182;
   1557 11r08s41           4578 	ld	de,#_cmd + 4
   155A 6B                 4579 	ld	l,e
   155B 62                 4580 	ld	h,d
   155C 36 B6              4581 	ld	(hl),#0xB6
   155E 23                 4582 	inc	hl
   155F 36 00              4583 	ld	(hl),#0x00
                           4584 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   1561 ED 4Br5As41        4585 	ld	bc,(_ender)
   1565                    4586 00116$:
   1565 79                 4587 	ld	a,c
   1566 DD 96 FE           4588 	sub	a,-2 (ix)
   1569 78                 4589 	ld	a,b
   156A DD 9E FF           4590 	sbc	a,-1 (ix)
   156D F2rB7s15           4591 	jp	P,00119$
                           4592 ;demo.c:637: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1570 21r06s41           4593 	ld	hl,#_cmd + 2
   1573 DD 75 FA           4594 	ld	-6 (ix),l
   1576 DD 74 FB           4595 	ld	-5 (ix),h
   1579 3Ar58s41           4596 	ld	a,(#_ff2+0)
   157C 81                 4597 	add	a,c
   157D 5F                 4598 	ld	e,a
   157E 3Ar59s41           4599 	ld	a,(#_ff2+1)
   1581 88                 4600 	adc	a,b
   1582 16 00              4601 	ld	d,#0x00
   1584 21r00s00           4602 	ld	hl,#_sintab
   1587 19                 4603 	add	hl,de
   1588 5E                 4604 	ld	e,(hl)
   1589 CB 2B              4605 	sra	e
   158B 7B                 4606 	ld	a,e
   158C 17                 4607 	rla	
   158D 9F                 4608 	sbc	a,a
   158E 57                 4609 	ld	d,a
   158F 21 40 01           4610 	ld	hl,#0x0140
   1592 19                 4611 	add	hl,de
   1593 EB                 4612 	ex	de,hl
   1594 DD 6E FA           4613 	ld	l,-6 (ix)
   1597 DD 66 FB           4614 	ld	h,-5 (ix)
   159A 73                 4615 	ld	(hl),e
   159B 23                 4616 	inc	hl
   159C 72                 4617 	ld	(hl),d
                           4618 ;demo.c:638: cmd.dest_y = y;
   159D 11r0As41           4619 	ld	de,#_cmd + 6
   15A0 EB                 4620 	ex	de,hl
   15A1 71                 4621 	ld	(hl),c
   15A2 23                 4622 	inc	hl
   15A3 70                 4623 	ld	(hl),b
                           4624 ;demo.c:639: vdp_copier(&cmd);
   15A4 C5                 4625 	push	bc
   15A5 21r04s41           4626 	ld	hl,#_cmd
   15A8 E5                 4627 	push	hl
   15A9 CDr00s00           4628 	call	_vdp_copier
   15AC F1                 4629 	pop	af
   15AD C1                 4630 	pop	bc
                           4631 ;demo.c:636: for (y = ender; y < enderend; y+=16) {
   15AE 21 10 00           4632 	ld	hl,#0x0010
   15B1 09                 4633 	add	hl,bc
   15B2 4D                 4634 	ld	c,l
   15B3 44                 4635 	ld	b,h
   15B4 C3r65s15           4636 	jp	00116$
   15B7                    4637 00119$:
                           4638 ;demo.c:641: ff2+=4;
   15B7 21r58s41           4639 	ld	hl,#_ff2
   15BA 7E                 4640 	ld	a,(hl)
   15BB C6 04              4641 	add	a,#0x04
   15BD 23                 4642 	inc	hl
   15BE 2B                 4643 	dec	hl
   15BF C5                 4644 	push	bc
   15C0 4F                 4645 	ld	c, a
   15C1 23                 4646 	inc	hl
   15C2 7E                 4647 	ld	a, (hl)
   15C3 47                 4648 	ld	b, a
   15C4 79                 4649 	ld	a, c
   15C5 2B                 4650 	dec	hl
   15C6 77                 4651 	ld	(hl), a
   15C7 78                 4652 	ld	a, b
   15C8 C1                 4653 	pop	bc
   15C9 CE 00              4654 	adc	a,#0x00
   15CB 23                 4655 	inc	hl
   15CC 77                 4656 	ld	(hl),a
   15CD                    4657 00111$:
                           4658 ;demo.c:644: bulbflipper = -bulbflipper;
   15CD AF                 4659 	xor	a,a
   15CE FD 21r54s41        4660 	ld	iy,#_bulbflipper
   15D2 3E 00              4661 	ld	a,#0x00
   15D4 FD 9E 00           4662 	sbc	a,0 (iy)
   15D7 21r54s41           4663 	ld	hl,#_bulbflipper + 0
   15DA 77                 4664 	ld	(hl), a
   15DB FD 21r54s41        4665 	ld	iy,#_bulbflipper
   15DF 3E 00              4666 	ld	a,#0x00
   15E1 FD 9E 01           4667 	sbc	a,1 (iy)
   15E4 21r55s41           4668 	ld	hl,#_bulbflipper + 1
   15E7 77                 4669 	ld	(hl), a
   15E8 DD F9              4670 	ld	sp,ix
   15EA DD E1              4671 	pop	ix
   15EC C9                 4672 	ret
   15ED                    4673 _bulbs_end::
                           4674 ;demo.c:658: void animplay() {
                           4675 ;	---------------------------------
                           4676 ; Function animplay
                           4677 ; ---------------------------------
   15ED                    4678 _animplay_start::
   15ED                    4679 _animplay:
   15ED DD E5              4680 	push	ix
   15EF DD 21 00 00        4681 	ld	ix,#0
   15F3 DD 39              4682 	add	ix,sp
   15F5 F5                 4683 	push	af
   15F6 3B                 4684 	dec	sp
                           4685 ;demo.c:663: if (anim_init == 0) {
   15F7 3Ar68s41           4686 	ld	a,(#_anim_init+0)
   15FA 21r69s41           4687 	ld	hl,#_anim_init + 1
   15FD B6                 4688 	or	a,(hl)
   15FE C2r93s17           4689 	jp	NZ,00120$
                           4690 ;demo.c:664: drawsine("L O A D I N G",8,100);
   1601 21 08 64           4691 	ld	hl,#0x6408
   1604 E5                 4692 	push	hl
   1605 21r7Bs18           4693 	ld	hl,#__str_9
   1608 E5                 4694 	push	hl
   1609 CDr20s11           4695 	call	_drawsine
   160C F1                 4696 	pop	af
   160D F1                 4697 	pop	af
                           4698 ;demo.c:667: uninstall_isr();
   160E CDr00s00           4699 	call	_uninstall_isr
                           4700 ;demo.c:668: PLY_Stop();
   1611 CDr00s00           4701 	call	_PLY_Stop
                           4702 ;demo.c:669: PLY_SendRegisters();
   1614 CDr00s00           4703 	call	_PLY_SendRegisters
                           4704 ;demo.c:671: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1617 21 00 00           4705 	ld	hl,#0x0000
   161A E5                 4706 	push	hl
   161B 2E 01              4707 	ld	l, #0x01
   161D E5                 4708 	push	hl
   161E 2E 00              4709 	ld	l, #0x00
   1620 E5                 4710 	push	hl
   1621 21 09 37           4711 	ld	hl,#0x3709
   1624 E5                 4712 	push	hl
   1625 21r89s18           4713 	ld	hl,#__str_10
   1628 E5                 4714 	push	hl
   1629 CDr99s09           4715 	call	_pck_load
   162C FD 21 0A 00        4716 	ld	iy,#0x000A
   1630 FD 39              4717 	add	iy,sp
   1632 FD F9              4718 	ld	sp,iy
                           4719 ;demo.c:674: scratch_clear();
   1634 CDr90s07           4720 	call	_scratch_clear
                           4721 ;demo.c:675: vdp_load_palette(scratch);
   1637 21rE0s3F           4722 	ld	hl,#_scratch
   163A E5                 4723 	push	hl
   163B CDr00s00           4724 	call	_vdp_load_palette
   163E F1                 4725 	pop	af
                           4726 ;demo.c:677: cmd.size_x = 256;
   163F 21r0Cs41           4727 	ld	hl, #_cmd + 8
   1642 36 00              4728 	ld	(hl),#0x00
   1644 23                 4729 	inc	hl
   1645 36 01              4730 	ld	(hl),#0x01
                           4731 ;demo.c:678: cmd.size_y = 212;
   1647 21r0Es41           4732 	ld	hl, #_cmd + 10
   164A 36 D4              4733 	ld	(hl),#0xD4
   164C 23                 4734 	inc	hl
   164D 36 00              4735 	ld	(hl),#0x00
                           4736 ;demo.c:679: cmd.data = 0;
                           4737 ;demo.c:680: cmd.argument = 0x00;
   164F 3E 00              4738 	ld	a,#0x00
   1651 32r10s41           4739 	ld	(#_cmd + 12),a
   1654 32r11s41           4740 	ld	(#_cmd + 13),a
                           4741 ;demo.c:681: cmd.command = 0xd0; 
   1657 01r12s41           4742 	ld	bc,#_cmd + 14
   165A 3E D0              4743 	ld	a,#0xD0
   165C 02                 4744 	ld	(bc),a
                           4745 ;demo.c:682: cmd.source_x = 0;
   165D 21r04s41           4746 	ld	hl,#_cmd
   1660 36 00              4747 	ld	(hl),#0x00
   1662 23                 4748 	inc	hl
   1663 36 00              4749 	ld	(hl),#0x00
                           4750 ;demo.c:683: cmd.source_y = 0;
   1665 21r06s41           4751 	ld	hl, #_cmd + 2
   1668 36 00              4752 	ld	(hl),#0x00
   166A 23                 4753 	inc	hl
   166B 36 00              4754 	ld	(hl),#0x00
                           4755 ;demo.c:684: cmd.dest_x = 0;
   166D 21r08s41           4756 	ld	hl, #_cmd + 4
   1670 36 00              4757 	ld	(hl),#0x00
   1672 23                 4758 	inc	hl
   1673 36 00              4759 	ld	(hl),#0x00
                           4760 ;demo.c:685: cmd.dest_y = 256;
   1675 21r0As41           4761 	ld	hl, #_cmd + 6
   1678 36 00              4762 	ld	(hl),#0x00
   167A 23                 4763 	inc	hl
   167B 36 01              4764 	ld	(hl),#0x01
                           4765 ;demo.c:686: vdp_copier(&cmd);
   167D 21r04s41           4766 	ld	hl,#_cmd
   1680 E5                 4767 	push	hl
   1681 CDr00s00           4768 	call	_vdp_copier
   1684 F1                 4769 	pop	af
                           4770 ;demo.c:688: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1685 21 00 00           4771 	ld	hl,#0x0000
   1688 E5                 4772 	push	hl
   1689 2E 01              4773 	ld	l, #0x01
   168B E5                 4774 	push	hl
   168C 2E 00              4775 	ld	l, #0x00
   168E E5                 4776 	push	hl
   168F 21 76 3E           4777 	ld	hl,#0x3E76
   1692 E5                 4778 	push	hl
   1693 21r95s18           4779 	ld	hl,#__str_11
   1696 E5                 4780 	push	hl
   1697 CDr99s09           4781 	call	_pck_load
   169A FD 21 0A 00        4782 	ld	iy,#0x000A
   169E FD 39              4783 	add	iy,sp
   16A0 FD F9              4784 	ld	sp,iy
                           4785 ;demo.c:690: cmd.size_x = 256;
   16A2 21r0Cs41           4786 	ld	hl, #_cmd + 8
   16A5 36 00              4787 	ld	(hl),#0x00
   16A7 23                 4788 	inc	hl
   16A8 36 01              4789 	ld	(hl),#0x01
                           4790 ;demo.c:691: cmd.size_y = 212;
   16AA 21r0Es41           4791 	ld	hl, #_cmd + 10
   16AD 36 D4              4792 	ld	(hl),#0xD4
   16AF 23                 4793 	inc	hl
   16B0 36 00              4794 	ld	(hl),#0x00
                           4795 ;demo.c:692: cmd.data = 0;
                           4796 ;demo.c:693: cmd.argument = 0x00;
   16B2 3E 00              4797 	ld	a,#0x00
   16B4 32r10s41           4798 	ld	(#_cmd + 12),a
   16B7 32r11s41           4799 	ld	(#_cmd + 13),a
                           4800 ;demo.c:694: cmd.command = 0xd0; 
   16BA 01r12s41           4801 	ld	bc,#_cmd + 14
   16BD 3E D0              4802 	ld	a,#0xD0
   16BF 02                 4803 	ld	(bc),a
                           4804 ;demo.c:695: cmd.source_x = 0;
   16C0 21r04s41           4805 	ld	hl,#_cmd
   16C3 36 00              4806 	ld	(hl),#0x00
   16C5 23                 4807 	inc	hl
   16C6 36 00              4808 	ld	(hl),#0x00
                           4809 ;demo.c:696: cmd.source_y = 0;
   16C8 21r06s41           4810 	ld	hl, #_cmd + 2
   16CB 36 00              4811 	ld	(hl),#0x00
   16CD 23                 4812 	inc	hl
   16CE 36 00              4813 	ld	(hl),#0x00
                           4814 ;demo.c:697: cmd.dest_x = 0;
   16D0 21r08s41           4815 	ld	hl, #_cmd + 4
   16D3 36 00              4816 	ld	(hl),#0x00
   16D5 23                 4817 	inc	hl
   16D6 36 00              4818 	ld	(hl),#0x00
                           4819 ;demo.c:698: cmd.dest_y = 512;
   16D8 21r0As41           4820 	ld	hl, #_cmd + 6
   16DB 36 00              4821 	ld	(hl),#0x00
   16DD 23                 4822 	inc	hl
   16DE 36 02              4823 	ld	(hl),#0x02
                           4824 ;demo.c:699: vdp_copier(&cmd);
   16E0 21r04s41           4825 	ld	hl,#_cmd
   16E3 E5                 4826 	push	hl
   16E4 CDr00s00           4827 	call	_vdp_copier
   16E7 F1                 4828 	pop	af
                           4829 ;demo.c:702: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   16E8 21 00 00           4830 	ld	hl,#0x0000
   16EB E5                 4831 	push	hl
   16EC 2E 01              4832 	ld	l, #0x01
   16EE E5                 4833 	push	hl
   16EF 2E 00              4834 	ld	l, #0x00
   16F1 E5                 4835 	push	hl
   16F2 21 9E 3A           4836 	ld	hl,#0x3A9E
   16F5 E5                 4837 	push	hl
   16F6 21rA1s18           4838 	ld	hl,#__str_12
   16F9 E5                 4839 	push	hl
   16FA CDr99s09           4840 	call	_pck_load
   16FD FD 21 0A 00        4841 	ld	iy,#0x000A
   1701 FD 39              4842 	add	iy,sp
   1703 FD F9              4843 	ld	sp,iy
                           4844 ;demo.c:704: cmd.size_x = 256;
   1705 21r0Cs41           4845 	ld	hl, #_cmd + 8
   1708 36 00              4846 	ld	(hl),#0x00
   170A 23                 4847 	inc	hl
   170B 36 01              4848 	ld	(hl),#0x01
                           4849 ;demo.c:705: cmd.size_y = 212;
   170D 21r0Es41           4850 	ld	hl, #_cmd + 10
   1710 36 D4              4851 	ld	(hl),#0xD4
   1712 23                 4852 	inc	hl
   1713 36 00              4853 	ld	(hl),#0x00
                           4854 ;demo.c:706: cmd.data = 0;
                           4855 ;demo.c:707: cmd.argument = 0x00;
   1715 3E 00              4856 	ld	a,#0x00
   1717 32r10s41           4857 	ld	(#_cmd + 12),a
   171A 32r11s41           4858 	ld	(#_cmd + 13),a
                           4859 ;demo.c:708: cmd.command = 0xd0; 
   171D 01r12s41           4860 	ld	bc,#_cmd + 14
   1720 3E D0              4861 	ld	a,#0xD0
   1722 02                 4862 	ld	(bc),a
                           4863 ;demo.c:709: cmd.source_x = 0;
   1723 21r04s41           4864 	ld	hl,#_cmd
   1726 36 00              4865 	ld	(hl),#0x00
   1728 23                 4866 	inc	hl
   1729 36 00              4867 	ld	(hl),#0x00
                           4868 ;demo.c:710: cmd.source_y = 0;
   172B 21r06s41           4869 	ld	hl, #_cmd + 2
   172E 36 00              4870 	ld	(hl),#0x00
   1730 23                 4871 	inc	hl
   1731 36 00              4872 	ld	(hl),#0x00
                           4873 ;demo.c:711: cmd.dest_x = 0;
   1733 21r08s41           4874 	ld	hl, #_cmd + 4
   1736 36 00              4875 	ld	(hl),#0x00
   1738 23                 4876 	inc	hl
   1739 36 00              4877 	ld	(hl),#0x00
                           4878 ;demo.c:712: cmd.dest_y = 768;
   173B 21r0As41           4879 	ld	hl, #_cmd + 6
   173E 36 00              4880 	ld	(hl),#0x00
   1740 23                 4881 	inc	hl
   1741 36 03              4882 	ld	(hl),#0x03
                           4883 ;demo.c:713: vdp_copier(&cmd);
   1743 21r04s41           4884 	ld	hl,#_cmd
   1746 E5                 4885 	push	hl
   1747 CDr00s00           4886 	call	_vdp_copier
   174A F1                 4887 	pop	af
                           4888 ;demo.c:715: vdp_register(9,130); // 50hz,212
   174B 21 09 82           4889 	ld	hl,#0x8209
   174E E5                 4890 	push	hl
   174F CDr00s00           4891 	call	_vdp_register
   1752 F1                 4892 	pop	af
                           4893 ;demo.c:717: scratch_clear();
   1753 CDr90s07           4894 	call	_scratch_clear
                           4895 ;demo.c:719: vdp_set_write_address(0, 0);
   1756 21 00 00           4896 	ld	hl,#0x0000
   1759 E5                 4897 	push	hl
   175A 3E 00              4898 	ld	a,#0x00
   175C F5                 4899 	push	af
   175D 33                 4900 	inc	sp
   175E CDr00s00           4901 	call	_vdp_set_write_address
   1761 F1                 4902 	pop	af
   1762 33                 4903 	inc	sp
                           4904 ;demo.c:721: for (y = 0; y < 212; y++) { 
   1763 0E D4              4905 	ld	c,#0xD4
   1765                    4906 00109$:
                           4907 ;demo.c:722: vdp_load_screen(scratch, 128);
   1765 C5                 4908 	push	bc
   1766 3E 80              4909 	ld	a,#0x80
   1768 F5                 4910 	push	af
   1769 33                 4911 	inc	sp
   176A 21rE0s3F           4912 	ld	hl,#_scratch
   176D E5                 4913 	push	hl
   176E CDr00s00           4914 	call	_vdp_load_screen
   1771 F1                 4915 	pop	af
   1772 33                 4916 	inc	sp
   1773 C1                 4917 	pop	bc
   1774 0D                 4918 	dec	c
                           4919 ;demo.c:721: for (y = 0; y < 212; y++) { 
   1775 AF                 4920 	xor	a,a
   1776 B1                 4921 	or	a,c
   1777 20 EC              4922 	jr	NZ,00109$
                           4923 ;demo.c:725: install_isr(my_isr);
   1779 21rECs05           4924 	ld	hl,#_my_isr
   177C E5                 4925 	push	hl
   177D CDr00s00           4926 	call	_install_isr
   1780 F1                 4927 	pop	af
                           4928 ;demo.c:726: anim_init = 1;
   1781 21r68s41           4929 	ld	hl,#_anim_init + 0
   1784 36 01              4930 	ld	(hl), #0x01
   1786 21r69s41           4931 	ld	hl,#_anim_init + 1
   1789 36 00              4932 	ld	(hl), #0x00
                           4933 ;demo.c:727: vdp_load_palette(tf_palette);
   178B 21rC0s40           4934 	ld	hl,#_tf_palette
   178E E5                 4935 	push	hl
   178F CDr00s00           4936 	call	_vdp_load_palette
   1792 F1                 4937 	pop	af
                           4938 ;demo.c:730: for (y = 0; y < 106; y+=1) {
   1793                    4939 00120$:
   1793 DD 36 FF 00        4940 	ld	-1 (ix),#0x00
   1797                    4941 00110$:
   1797 DD 7E FF           4942 	ld	a,-1 (ix)
   179A D6 6A              4943 	sub	a,#0x6A
   179C D2r1Cs18           4944 	jp	NC,00113$
                           4945 ;demo.c:731: cmd.source_x = 0;
   179F 21r04s41           4946 	ld	hl,#_cmd
   17A2 36 00              4947 	ld	(hl),#0x00
   17A4 23                 4948 	inc	hl
   17A5 36 00              4949 	ld	(hl),#0x00
                           4950 ;demo.c:732: cmd.source_y = 256+po+frames+(y>>1);
   17A7 11r06s41           4951 	ld	de,#_cmd + 2
   17AA 3Ar64s41           4952 	ld	a,(#_po+0)
   17AD 4F                 4953 	ld	c,a
   17AE 3Ar65s41           4954 	ld	a,(#_po+1)
   17B1 C6 01              4955 	add	a,#0x01
   17B3 47                 4956 	ld	b,a
   17B4 21r66s41           4957 	ld	hl,#_frames
   17B7 79                 4958 	ld	a,c
   17B8 86                 4959 	add	a,(hl)
   17B9 DD 77 FD           4960 	ld	-3 (ix),a
   17BC 78                 4961 	ld	a,b
   17BD 23                 4962 	inc	hl
   17BE 8E                 4963 	adc	a,(hl)
   17BF DD 77 FE           4964 	ld	-2 (ix),a
   17C2 DD 4E FF           4965 	ld	c,-1 (ix)
   17C5 CB 39              4966 	srl	c
   17C7 06 00              4967 	ld	b,#0x00
   17C9 DD 7E FD           4968 	ld	a,-3 (ix)
   17CC 81                 4969 	add	a,c
   17CD 4F                 4970 	ld	c,a
   17CE DD 7E FE           4971 	ld	a,-2 (ix)
   17D1 88                 4972 	adc	a,b
   17D2 47                 4973 	ld	b,a
   17D3 6B                 4974 	ld	l,e
   17D4 62                 4975 	ld	h,d
   17D5 71                 4976 	ld	(hl),c
   17D6 23                 4977 	inc	hl
   17D7 70                 4978 	ld	(hl),b
                           4979 ;demo.c:733: cmd.dest_x = 0;
   17D8 21r08s41           4980 	ld	hl, #_cmd + 4
   17DB 36 00              4981 	ld	(hl),#0x00
   17DD 23                 4982 	inc	hl
   17DE 36 00              4983 	ld	(hl),#0x00
                           4984 ;demo.c:734: cmd.dest_y = (y<<1);
   17E0 01r0As41           4985 	ld	bc,#_cmd + 6
   17E3 DD 5E FF           4986 	ld	e,-1 (ix)
   17E6 16 00              4987 	ld	d,#0x00
   17E8 CB 23              4988 	sla	e
   17EA CB 12              4989 	rl	d
   17EC 69                 4990 	ld	l,c
   17ED 60                 4991 	ld	h,b
   17EE 73                 4992 	ld	(hl),e
   17EF 23                 4993 	inc	hl
   17F0 72                 4994 	ld	(hl),d
                           4995 ;demo.c:735: cmd.size_x = 256;
   17F1 21r0Cs41           4996 	ld	hl, #_cmd + 8
   17F4 36 00              4997 	ld	(hl),#0x00
   17F6 23                 4998 	inc	hl
   17F7 36 01              4999 	ld	(hl),#0x01
                           5000 ;demo.c:736: cmd.size_y = 1;
   17F9 21r0Es41           5001 	ld	hl, #_cmd + 10
   17FC 36 01              5002 	ld	(hl),#0x01
   17FE 23                 5003 	inc	hl
   17FF 36 00              5004 	ld	(hl),#0x00
                           5005 ;demo.c:737: cmd.data = 0;
                           5006 ;demo.c:738: cmd.argument = 0x00;
   1801 3E 00              5007 	ld	a,#0x00
   1803 32r10s41           5008 	ld	(#_cmd + 12),a
   1806 32r11s41           5009 	ld	(#_cmd + 13),a
                           5010 ;demo.c:739: cmd.command = 0xD0;
   1809 3E D0              5011 	ld	a,#0xD0
   180B 32r12s41           5012 	ld	(#_cmd + 14),a
                           5013 ;demo.c:740: vdp_copier(&cmd);
   180E 21r04s41           5014 	ld	hl,#_cmd
   1811 E5                 5015 	push	hl
   1812 CDr00s00           5016 	call	_vdp_copier
   1815 F1                 5017 	pop	af
                           5018 ;demo.c:730: for (y = 0; y < 106; y+=1) {
   1816 DD 34 FF           5019 	inc	-1 (ix)
   1819 C3r97s17           5020 	jp	00110$
   181C                    5021 00113$:
                           5022 ;demo.c:743: frames+=53;
   181C 21r66s41           5023 	ld	hl,#_frames
   181F 7E                 5024 	ld	a,(hl)
   1820 C6 35              5025 	add	a,#0x35
   1822 23                 5026 	inc	hl
   1823 2B                 5027 	dec	hl
   1824 C5                 5028 	push	bc
   1825 4F                 5029 	ld	c, a
   1826 23                 5030 	inc	hl
   1827 7E                 5031 	ld	a, (hl)
   1828 47                 5032 	ld	b, a
   1829 79                 5033 	ld	a, c
   182A 2B                 5034 	dec	hl
   182B 77                 5035 	ld	(hl), a
   182C 78                 5036 	ld	a, b
   182D C1                 5037 	pop	bc
   182E CE 00              5038 	adc	a,#0x00
   1830 23                 5039 	inc	hl
   1831 77                 5040 	ld	(hl),a
                           5041 ;demo.c:744: if (frames >= 212) { frames = 0; po+=256; }
   1832 3Ar66s41           5042 	ld	a,(#_frames+0)
   1835 D6 D4              5043 	sub	a,#0xD4
   1837 3Ar67s41           5044 	ld	a,(#_frames+1)
   183A DE 00              5045 	sbc	a,#0x00
   183C FAr5Fs18           5046 	jp	M,00104$
   183F 21r66s41           5047 	ld	hl,#_frames + 0
   1842 36 00              5048 	ld	(hl), #0x00
   1844 21r67s41           5049 	ld	hl,#_frames + 1
   1847 36 00              5050 	ld	(hl), #0x00
   1849 21r64s41           5051 	ld	hl,#_po
   184C 7E                 5052 	ld	a,(hl)
   184D C6 00              5053 	add	a,#0x00
   184F 23                 5054 	inc	hl
   1850 2B                 5055 	dec	hl
   1851 C5                 5056 	push	bc
   1852 4F                 5057 	ld	c, a
   1853 23                 5058 	inc	hl
   1854 7E                 5059 	ld	a, (hl)
   1855 47                 5060 	ld	b, a
   1856 79                 5061 	ld	a, c
   1857 2B                 5062 	dec	hl
   1858 77                 5063 	ld	(hl), a
   1859 78                 5064 	ld	a, b
   185A C1                 5065 	pop	bc
   185B CE 01              5066 	adc	a,#0x01
   185D 23                 5067 	inc	hl
   185E 77                 5068 	ld	(hl),a
   185F                    5069 00104$:
                           5070 ;demo.c:745: if (po >= 768) {
   185F 3Ar64s41           5071 	ld	a,(#_po+0)
   1862 D6 00              5072 	sub	a,#0x00
   1864 3Ar65s41           5073 	ld	a,(#_po+1)
   1867 DE 03              5074 	sbc	a,#0x03
   1869 FAr76s18           5075 	jp	M,00114$
                           5076 ;demo.c:746: po = 0;
   186C 21r64s41           5077 	ld	hl,#_po + 0
   186F 36 00              5078 	ld	(hl), #0x00
   1871 21r65s41           5079 	ld	hl,#_po + 1
   1874 36 00              5080 	ld	(hl), #0x00
   1876                    5081 00114$:
   1876 DD F9              5082 	ld	sp,ix
   1878 DD E1              5083 	pop	ix
   187A C9                 5084 	ret
   187B                    5085 _animplay_end::
   187B                    5086 __str_9:
   187B 4C 20 4F 20 41 20  5087 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1888 00                 5088 	.db 0x00
   1889                    5089 __str_10:
   1889 4C 46 31 20 20 20  5090 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1894 00                 5091 	.db 0x00
   1895                    5092 __str_11:
   1895 4C 46 32 20 20 20  5093 	.ascii "LF2     PCK"
        20 20 50 43 4B
   18A0 00                 5094 	.db 0x00
   18A1                    5095 __str_12:
   18A1 4C 46 33 20 20 20  5096 	.ascii "LF3     PCK"
        20 20 50 43 4B
   18AC 00                 5097 	.db 0x00
                           5098 ;demo.c:762: void drawbox(uint8_t x, uint8_t y) {
                           5099 ;	---------------------------------
                           5100 ; Function drawbox
                           5101 ; ---------------------------------
   18AD                    5102 _drawbox_start::
   18AD                    5103 _drawbox:
   18AD DD E5              5104 	push	ix
   18AF DD 21 00 00        5105 	ld	ix,#0
   18B3 DD 39              5106 	add	ix,sp
                           5107 ;demo.c:763: cmd.source_x = boxes_x[boxi];
   18B5 21r80s41           5108 	ld	hl,#_boxi
   18B8 3Er71              5109 	ld	a,#<_boxes_x
   18BA 86                 5110 	add	a,(hl)
   18BB 4F                 5111 	ld	c,a
   18BC 3Es41              5112 	ld	a,#>_boxes_x
   18BE CE 00              5113 	adc	a,#0x00
   18C0 47                 5114 	ld	b,a
   18C1 0A                 5115 	ld	a,(bc)
   18C2 4F                 5116 	ld	c,a
   18C3 06 00              5117 	ld	b,#0x00
   18C5 21r04s41           5118 	ld	hl,#_cmd
   18C8 71                 5119 	ld	(hl),c
   18C9 23                 5120 	inc	hl
   18CA 70                 5121 	ld	(hl),b
                           5122 ;demo.c:764: cmd.source_y = boxes_y[boxi];
   18CB 01r06s41           5123 	ld	bc,#_cmd + 2
   18CE 3Ar80s41           5124 	ld	a,(#_boxi+0)
   18D1 87                 5125 	add	a,a
   18D2 C6r76              5126 	add	a,#<_boxes_y
   18D4 6F                 5127 	ld	l,a
   18D5 3Es41              5128 	ld	a,#>_boxes_y
   18D7 CE 00              5129 	adc	a,#0x00
   18D9 67                 5130 	ld	h,a
   18DA 5E                 5131 	ld	e,(hl)
   18DB 23                 5132 	inc	hl
   18DC 56                 5133 	ld	d,(hl)
   18DD 69                 5134 	ld	l,c
   18DE 60                 5135 	ld	h,b
   18DF 73                 5136 	ld	(hl),e
   18E0 23                 5137 	inc	hl
   18E1 72                 5138 	ld	(hl),d
                           5139 ;demo.c:765: cmd.dest_x = x;
   18E2 01r08s41           5140 	ld	bc,#_cmd + 4
   18E5 DD 5E 04           5141 	ld	e,4 (ix)
   18E8 16 00              5142 	ld	d,#0x00
   18EA 69                 5143 	ld	l,c
   18EB 60                 5144 	ld	h,b
   18EC 73                 5145 	ld	(hl),e
   18ED 23                 5146 	inc	hl
   18EE 72                 5147 	ld	(hl),d
                           5148 ;demo.c:766: cmd.dest_y = y;
   18EF 01r0As41           5149 	ld	bc,#_cmd + 6
   18F2 DD 5E 05           5150 	ld	e,5 (ix)
   18F5 16 00              5151 	ld	d,#0x00
   18F7 69                 5152 	ld	l,c
   18F8 60                 5153 	ld	h,b
   18F9 73                 5154 	ld	(hl),e
   18FA 23                 5155 	inc	hl
   18FB 72                 5156 	ld	(hl),d
                           5157 ;demo.c:767: cmd.size_x = 36;
   18FC 21r0Cs41           5158 	ld	hl, #_cmd + 8
   18FF 36 24              5159 	ld	(hl),#0x24
   1901 23                 5160 	inc	hl
   1902 36 00              5161 	ld	(hl),#0x00
                           5162 ;demo.c:768: cmd.size_y = 36;
   1904 21r0Es41           5163 	ld	hl, #_cmd + 10
   1907 36 24              5164 	ld	(hl),#0x24
   1909 23                 5165 	inc	hl
   190A 36 00              5166 	ld	(hl),#0x00
                           5167 ;demo.c:769: cmd.data = 0;
                           5168 ;demo.c:770: cmd.argument = 0x00;
   190C 3E 00              5169 	ld	a,#0x00
   190E 32r10s41           5170 	ld	(#_cmd + 12),a
   1911 32r11s41           5171 	ld	(#_cmd + 13),a
                           5172 ;demo.c:771: cmd.command = 0x98; // TIMP sprite
   1914 3E 98              5173 	ld	a,#0x98
   1916 32r12s41           5174 	ld	(#_cmd + 14),a
                           5175 ;demo.c:772: vdp_copier(&cmd);
   1919 21r04s41           5176 	ld	hl,#_cmd
   191C E5                 5177 	push	hl
   191D CDr00s00           5178 	call	_vdp_copier
   1920 F1                 5179 	pop	af
                           5180 ;demo.c:774: prevx = x;
   1921 DD 7E 04           5181 	ld	a,4 (ix)
   1924 21r6Ds41           5182 	ld	hl,#_prevx + 0
   1927 77                 5183 	ld	(hl), a
   1928 21r6Es41           5184 	ld	hl,#_prevx + 1
   192B 36 00              5185 	ld	(hl), #0x00
                           5186 ;demo.c:775: prevy = y;
   192D DD 7E 05           5187 	ld	a,5 (ix)
   1930 21r6Fs41           5188 	ld	hl,#_prevy + 0
   1933 77                 5189 	ld	(hl), a
   1934 21r70s41           5190 	ld	hl,#_prevy + 1
   1937 36 00              5191 	ld	(hl), #0x00
   1939 DD E1              5192 	pop	ix
   193B C9                 5193 	ret
   193C                    5194 _drawbox_end::
                           5195 ;demo.c:789: void boxes() {
                           5196 ;	---------------------------------
                           5197 ; Function boxes
                           5198 ; ---------------------------------
   193C                    5199 _boxes_start::
   193C                    5200 _boxes:
   193C DD E5              5201 	push	ix
   193E DD 21 00 00        5202 	ld	ix,#0
   1942 DD 39              5203 	add	ix,sp
   1944 F5                 5204 	push	af
                           5205 ;demo.c:793: if (bx < 0) return;
   1945 FD 21r81s41        5206 	ld	iy,#_bx
   1949 FD CB 01 7E        5207 	bit	7,1 (iy)
   194D C2r63s1D           5208 	jp	NZ,00149$
                           5209 ;demo.c:795: if (bonc == 1) {
   1950 3Ar89s41           5210 	ld	a,(#_bonc+0)
   1953 D6 01              5211 	sub	a,#0x01
   1955 20 06              5212 	jr	NZ,00178$
   1957 3Ar8As41           5213 	ld	a,(#_bonc+1)
   195A B7                 5214 	or	a,a
   195B 28 02              5215 	jr	Z,00179$
   195D                    5216 00178$:
   195D 18 4D              5217 	jr	00104$
   195F                    5218 00179$:
                           5219 ;demo.c:797: cmd.source_x = 0;
   195F 21r04s41           5220 	ld	hl,#_cmd
   1962 36 00              5221 	ld	(hl),#0x00
   1964 23                 5222 	inc	hl
   1965 36 00              5223 	ld	(hl),#0x00
                           5224 ;demo.c:798: cmd.source_y = 256;
   1967 21r06s41           5225 	ld	hl, #_cmd + 2
   196A 36 00              5226 	ld	(hl),#0x00
   196C 23                 5227 	inc	hl
   196D 36 01              5228 	ld	(hl),#0x01
                           5229 ;demo.c:799: cmd.dest_x = pbx;
   196F 01r08s41           5230 	ld	bc,#_cmd + 4
   1972 ED 5Br8Bs41        5231 	ld	de,(_pbx)
   1976 69                 5232 	ld	l,c
   1977 60                 5233 	ld	h,b
   1978 73                 5234 	ld	(hl),e
   1979 23                 5235 	inc	hl
   197A 72                 5236 	ld	(hl),d
                           5237 ;demo.c:800: cmd.dest_y = pbt;
   197B 01r0As41           5238 	ld	bc,#_cmd + 6
   197E ED 5Br8Ds41        5239 	ld	de,(_pbt)
   1982 69                 5240 	ld	l,c
   1983 60                 5241 	ld	h,b
   1984 73                 5242 	ld	(hl),e
   1985 23                 5243 	inc	hl
   1986 72                 5244 	ld	(hl),d
                           5245 ;demo.c:801: cmd.size_x = 36;
   1987 21r0Cs41           5246 	ld	hl, #_cmd + 8
   198A 36 24              5247 	ld	(hl),#0x24
   198C 23                 5248 	inc	hl
   198D 36 00              5249 	ld	(hl),#0x00
                           5250 ;demo.c:802: cmd.size_y = 36;
   198F 21r0Es41           5251 	ld	hl, #_cmd + 10
   1992 36 24              5252 	ld	(hl),#0x24
   1994 23                 5253 	inc	hl
   1995 36 00              5254 	ld	(hl),#0x00
                           5255 ;demo.c:803: cmd.data = 0;
                           5256 ;demo.c:804: cmd.argument = 0x00;
   1997 3E 00              5257 	ld	a,#0x00
   1999 32r10s41           5258 	ld	(#_cmd + 12),a
   199C 32r11s41           5259 	ld	(#_cmd + 13),a
                           5260 ;demo.c:805: cmd.command = 0xD0; // HMMM
   199F 3E D0              5261 	ld	a,#0xD0
   19A1 32r12s41           5262 	ld	(#_cmd + 14),a
                           5263 ;demo.c:806: vdp_copier(&cmd);
   19A4 21r04s41           5264 	ld	hl,#_cmd
   19A7 E5                 5265 	push	hl
   19A8 CDr00s00           5266 	call	_vdp_copier
   19AB F1                 5267 	pop	af
   19AC                    5268 00104$:
                           5269 ;demo.c:809: if (boxes_init == 0) {
   19AC AF                 5270 	xor	a,a
   19AD 21r6As41           5271 	ld	hl,#_boxes_init + 0
   19B0 B6                 5272 	or	a,(hl)
   19B1 C2rB3s1A           5273 	jp	NZ,00106$
                           5274 ;demo.c:810: boxes_init = 1;
   19B4 FD 21r6As41        5275 	ld	iy,#_boxes_init
   19B8 FD 36 00 01        5276 	ld	0 (iy),#0x01
                           5277 ;demo.c:812: cmd.size_x = 8;
   19BC 21r0Cs41           5278 	ld	hl, #_cmd + 8
   19BF 36 08              5279 	ld	(hl),#0x08
   19C1 23                 5280 	inc	hl
   19C2 36 00              5281 	ld	(hl),#0x00
                           5282 ;demo.c:813: cmd.size_y = 212;
   19C4 21r0Es41           5283 	ld	hl, #_cmd + 10
   19C7 36 D4              5284 	ld	(hl),#0xD4
   19C9 23                 5285 	inc	hl
   19CA 36 00              5286 	ld	(hl),#0x00
                           5287 ;demo.c:814: cmd.data = 0;
                           5288 ;demo.c:815: cmd.argument = 0x00; // from 70xY to left
   19CC 3E 00              5289 	ld	a,#0x00
   19CE 32r10s41           5290 	ld	(#_cmd + 12),a
   19D1 32r11s41           5291 	ld	(#_cmd + 13),a
                           5292 ;demo.c:816: cmd.command = 0xd0; // vram to vram, y only
   19D4 01r12s41           5293 	ld	bc,#_cmd + 14
   19D7 3E D0              5294 	ld	a,#0xD0
   19D9 02                 5295 	ld	(bc),a
                           5296 ;demo.c:817: cmd.source_x = 248;
   19DA 21r04s41           5297 	ld	hl,#_cmd
   19DD 36 F8              5298 	ld	(hl),#0xF8
   19DF 23                 5299 	inc	hl
   19E0 36 00              5300 	ld	(hl),#0x00
                           5301 ;demo.c:818: cmd.source_y = 0;
   19E2 21r06s41           5302 	ld	hl, #_cmd + 2
   19E5 36 00              5303 	ld	(hl),#0x00
   19E7 23                 5304 	inc	hl
   19E8 36 00              5305 	ld	(hl),#0x00
                           5306 ;demo.c:819: cmd.dest_y = 0;
   19EA 21r0As41           5307 	ld	hl, #_cmd + 6
   19ED 36 00              5308 	ld	(hl),#0x00
   19EF 23                 5309 	inc	hl
   19F0 36 00              5310 	ld	(hl),#0x00
                           5311 ;demo.c:821: for (x = 248; x >= 0; x-=8) {
   19F2 01 F8 00           5312 	ld	bc,#0x00F8
   19F5                    5313 00137$:
   19F5 78                 5314 	ld	a,b
   19F6 CB 7F              5315 	bit	7,a
   19F8 20 38              5316 	jr	NZ,00140$
                           5317 ;demo.c:822: waitVB();
   19FA 76                 5318 		halt 
                           5319 ;demo.c:823: cmd.dest_x = x;
   19FB 11r08s41           5320 	ld	de,#_cmd + 4
   19FE EB                 5321 	ex	de,hl
   19FF 71                 5322 	ld	(hl),c
   1A00 23                 5323 	inc	hl
   1A01 70                 5324 	ld	(hl),b
                           5325 ;demo.c:824: cmd.dest_y = 0;
   1A02 11r0As41           5326 	ld	de,#_cmd + 6
   1A05 EB                 5327 	ex	de,hl
   1A06 36 00              5328 	ld	(hl),#0x00
   1A08 23                 5329 	inc	hl
   1A09 36 00              5330 	ld	(hl),#0x00
                           5331 ;demo.c:825: vdp_copier(&cmd);
   1A0B C5                 5332 	push	bc
   1A0C 21r04s41           5333 	ld	hl,#_cmd
   1A0F E5                 5334 	push	hl
   1A10 CDr00s00           5335 	call	_vdp_copier
   1A13 F1                 5336 	pop	af
   1A14 C1                 5337 	pop	bc
                           5338 ;demo.c:826: cmd.dest_y = 256;
   1A15 11r0As41           5339 	ld	de,#_cmd + 6
   1A18 EB                 5340 	ex	de,hl
   1A19 36 00              5341 	ld	(hl),#0x00
   1A1B 23                 5342 	inc	hl
   1A1C 36 01              5343 	ld	(hl),#0x01
                           5344 ;demo.c:827: vdp_copier(&cmd);
   1A1E C5                 5345 	push	bc
   1A1F 21r04s41           5346 	ld	hl,#_cmd
   1A22 E5                 5347 	push	hl
   1A23 CDr00s00           5348 	call	_vdp_copier
   1A26 F1                 5349 	pop	af
   1A27 C1                 5350 	pop	bc
                           5351 ;demo.c:821: for (x = 248; x >= 0; x-=8) {
   1A28 79                 5352 	ld	a,c
   1A29 C6 F8              5353 	add	a,#0xF8
   1A2B 4F                 5354 	ld	c,a
   1A2C 78                 5355 	ld	a,b
   1A2D CE FF              5356 	adc	a,#0xFF
   1A2F 47                 5357 	ld	b,a
   1A30 18 C3              5358 	jr	00137$
   1A32                    5359 00140$:
                           5360 ;demo.c:830: for (x=0;x < 8;x++) {
   1A32 DD 36 FE 00        5361 	ld	-2 (ix),#0x00
   1A36 DD 36 FF 00        5362 	ld	-1 (ix),#0x00
   1A3A                    5363 00145$:
   1A3A DD 7E FE           5364 	ld	a,-2 (ix)
   1A3D D6 08              5365 	sub	a,#0x08
   1A3F DD 7E FF           5366 	ld	a,-1 (ix)
   1A42 DE 00              5367 	sbc	a,#0x00
   1A44 F2r9Es1A           5368 	jp	P,00148$
                           5369 ;demo.c:832: for (y=0;y < 9;y++) {
   1A47 11 00 00           5370 	ld	de,#0x0000
   1A4A                    5371 00141$:
   1A4A 7B                 5372 	ld	a,e
   1A4B D6 09              5373 	sub	a,#0x09
   1A4D 7A                 5374 	ld	a,d
   1A4E DE 00              5375 	sbc	a,#0x00
   1A50 F2r93s1A           5376 	jp	P,00147$
                           5377 ;demo.c:833: boxes_x[4] = 0;
   1A53 01r75s41           5378 	ld	bc,#_boxes_x + 4
   1A56 3E 00              5379 	ld	a,#0x00
   1A58 02                 5380 	ld	(bc),a
                           5381 ;demo.c:834: boxes_y[4] = 768+2*36;
   1A59 21r7Es41           5382 	ld	hl, #_boxes_y + 8
   1A5C 36 48              5383 	ld	(hl),#0x48
   1A5E 23                 5384 	inc	hl
   1A5F 36 03              5385 	ld	(hl),#0x03
                           5386 ;demo.c:835: boxi = 4;
   1A61 21r80s41           5387 	ld	hl,#_boxi + 0
   1A64 36 04              5388 	ld	(hl), #0x04
                           5389 ;demo.c:836: drawbox((x*36),y*18);
   1A66 4B                 5390 	ld	c,e
   1A67 D5                 5391 	push	de
   1A68 79                 5392 	ld	a,c
   1A69 5F                 5393 	ld	e,a
   1A6A 87                 5394 	add	a,a
   1A6B 87                 5395 	add	a,a
   1A6C 87                 5396 	add	a,a
   1A6D 83                 5397 	add	a,e
   1A6E 87                 5398 	add	a,a
   1A6F D1                 5399 	pop	de
   1A70 4F                 5400 	ld	c,a
   1A71 DD 46 FE           5401 	ld	b,-2 (ix)
   1A74 D5                 5402 	push	de
   1A75 78                 5403 	ld	a,b
   1A76 5F                 5404 	ld	e,a
   1A77 87                 5405 	add	a,a
   1A78 87                 5406 	add	a,a
   1A79 87                 5407 	add	a,a
   1A7A 83                 5408 	add	a,e
   1A7B 87                 5409 	add	a,a
   1A7C 87                 5410 	add	a,a
   1A7D D1                 5411 	pop	de
   1A7E 47                 5412 	ld	b,a
   1A7F D5                 5413 	push	de
   1A80 79                 5414 	ld	a,c
   1A81 F5                 5415 	push	af
   1A82 33                 5416 	inc	sp
   1A83 C5                 5417 	push	bc
   1A84 33                 5418 	inc	sp
   1A85 CDrADs18           5419 	call	_drawbox
   1A88 F1                 5420 	pop	af
   1A89 D1                 5421 	pop	de
                           5422 ;demo.c:837: boxi = 0;
   1A8A 21r80s41           5423 	ld	hl,#_boxi + 0
   1A8D 36 00              5424 	ld	(hl), #0x00
                           5425 ;demo.c:832: for (y=0;y < 9;y++) {
   1A8F 13                 5426 	inc	de
   1A90 C3r4As1A           5427 	jp	00141$
   1A93                    5428 00147$:
                           5429 ;demo.c:830: for (x=0;x < 8;x++) {
   1A93 DD 34 FE           5430 	inc	-2 (ix)
   1A96 20 03              5431 	jr	NZ,00180$
   1A98 DD 34 FF           5432 	inc	-1 (ix)
   1A9B                    5433 00180$:
   1A9B C3r3As1A           5434 	jp	00145$
   1A9E                    5435 00148$:
                           5436 ;demo.c:841: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   1A9E 21 08 B4           5437 	ld	hl,#0xB408
   1AA1 E5                 5438 	push	hl
   1AA2 21r68s1D           5439 	ld	hl,#__str_13
   1AA5 E5                 5440 	push	hl
   1AA6 CDr20s11           5441 	call	_drawsine
   1AA9 F1                 5442 	pop	af
   1AAA F1                 5443 	pop	af
                           5444 ;demo.c:843: vdp_load_palette(boxes_palette);
   1AAB 21rE0s40           5445 	ld	hl,#_boxes_palette
   1AAE E5                 5446 	push	hl
   1AAF CDr00s00           5447 	call	_vdp_load_palette
   1AB2 F1                 5448 	pop	af
   1AB3                    5449 00106$:
                           5450 ;demo.c:846: if (bt >= 80) bt+=8;
   1AB3 3Ar85s41           5451 	ld	a,(#_bt+0)
   1AB6 D6 50              5452 	sub	a,#0x50
   1AB8 3Ar86s41           5453 	ld	a,(#_bt+1)
   1ABB DE 00              5454 	sbc	a,#0x00
   1ABD FArD6s1A           5455 	jp	M,00108$
   1AC0 21r85s41           5456 	ld	hl,#_bt
   1AC3 7E                 5457 	ld	a,(hl)
   1AC4 C6 08              5458 	add	a,#0x08
   1AC6 23                 5459 	inc	hl
   1AC7 2B                 5460 	dec	hl
   1AC8 C5                 5461 	push	bc
   1AC9 4F                 5462 	ld	c, a
   1ACA 23                 5463 	inc	hl
   1ACB 7E                 5464 	ld	a, (hl)
   1ACC 47                 5465 	ld	b, a
   1ACD 79                 5466 	ld	a, c
   1ACE 2B                 5467 	dec	hl
   1ACF 77                 5468 	ld	(hl), a
   1AD0 78                 5469 	ld	a, b
   1AD1 C1                 5470 	pop	bc
   1AD2 CE 00              5471 	adc	a,#0x00
   1AD4 23                 5472 	inc	hl
   1AD5 77                 5473 	ld	(hl),a
   1AD6                    5474 00108$:
                           5475 ;demo.c:847: if (bt < 80 && bt >= 60) bt+=7;
   1AD6 3Ar85s41           5476 	ld	a,(#_bt+0)
   1AD9 D6 50              5477 	sub	a,#0x50
   1ADB 3Ar86s41           5478 	ld	a,(#_bt+1)
   1ADE DE 00              5479 	sbc	a,#0x00
   1AE0 F2r06s1B           5480 	jp	P,00110$
   1AE3 3Ar85s41           5481 	ld	a,(#_bt+0)
   1AE6 D6 3C              5482 	sub	a,#0x3C
   1AE8 3Ar86s41           5483 	ld	a,(#_bt+1)
   1AEB DE 00              5484 	sbc	a,#0x00
   1AED FAr06s1B           5485 	jp	M,00110$
   1AF0 21r85s41           5486 	ld	hl,#_bt
   1AF3 7E                 5487 	ld	a,(hl)
   1AF4 C6 07              5488 	add	a,#0x07
   1AF6 23                 5489 	inc	hl
   1AF7 2B                 5490 	dec	hl
   1AF8 C5                 5491 	push	bc
   1AF9 4F                 5492 	ld	c, a
   1AFA 23                 5493 	inc	hl
   1AFB 7E                 5494 	ld	a, (hl)
   1AFC 47                 5495 	ld	b, a
   1AFD 79                 5496 	ld	a, c
   1AFE 2B                 5497 	dec	hl
   1AFF 77                 5498 	ld	(hl), a
   1B00 78                 5499 	ld	a, b
   1B01 C1                 5500 	pop	bc
   1B02 CE 00              5501 	adc	a,#0x00
   1B04 23                 5502 	inc	hl
   1B05 77                 5503 	ld	(hl),a
   1B06                    5504 00110$:
                           5505 ;demo.c:848: if (bt < 60 && bt >= 40) bt+=6;
   1B06 3Ar85s41           5506 	ld	a,(#_bt+0)
   1B09 D6 3C              5507 	sub	a,#0x3C
   1B0B 3Ar86s41           5508 	ld	a,(#_bt+1)
   1B0E DE 00              5509 	sbc	a,#0x00
   1B10 F2r36s1B           5510 	jp	P,00113$
   1B13 3Ar85s41           5511 	ld	a,(#_bt+0)
   1B16 D6 28              5512 	sub	a,#0x28
   1B18 3Ar86s41           5513 	ld	a,(#_bt+1)
   1B1B DE 00              5514 	sbc	a,#0x00
   1B1D FAr36s1B           5515 	jp	M,00113$
   1B20 21r85s41           5516 	ld	hl,#_bt
   1B23 7E                 5517 	ld	a,(hl)
   1B24 C6 06              5518 	add	a,#0x06
   1B26 23                 5519 	inc	hl
   1B27 2B                 5520 	dec	hl
   1B28 C5                 5521 	push	bc
   1B29 4F                 5522 	ld	c, a
   1B2A 23                 5523 	inc	hl
   1B2B 7E                 5524 	ld	a, (hl)
   1B2C 47                 5525 	ld	b, a
   1B2D 79                 5526 	ld	a, c
   1B2E 2B                 5527 	dec	hl
   1B2F 77                 5528 	ld	(hl), a
   1B30 78                 5529 	ld	a, b
   1B31 C1                 5530 	pop	bc
   1B32 CE 00              5531 	adc	a,#0x00
   1B34 23                 5532 	inc	hl
   1B35 77                 5533 	ld	(hl),a
   1B36                    5534 00113$:
                           5535 ;demo.c:849: if (bt < 40 && bt >= 10) bt+=5;
   1B36 3Ar85s41           5536 	ld	a,(#_bt+0)
   1B39 D6 28              5537 	sub	a,#0x28
   1B3B 3Ar86s41           5538 	ld	a,(#_bt+1)
   1B3E DE 00              5539 	sbc	a,#0x00
   1B40 F2r66s1B           5540 	jp	P,00116$
   1B43 3Ar85s41           5541 	ld	a,(#_bt+0)
   1B46 D6 0A              5542 	sub	a,#0x0A
   1B48 3Ar86s41           5543 	ld	a,(#_bt+1)
   1B4B DE 00              5544 	sbc	a,#0x00
   1B4D FAr66s1B           5545 	jp	M,00116$
   1B50 21r85s41           5546 	ld	hl,#_bt
   1B53 7E                 5547 	ld	a,(hl)
   1B54 C6 05              5548 	add	a,#0x05
   1B56 23                 5549 	inc	hl
   1B57 2B                 5550 	dec	hl
   1B58 C5                 5551 	push	bc
   1B59 4F                 5552 	ld	c, a
   1B5A 23                 5553 	inc	hl
   1B5B 7E                 5554 	ld	a, (hl)
   1B5C 47                 5555 	ld	b, a
   1B5D 79                 5556 	ld	a, c
   1B5E 2B                 5557 	dec	hl
   1B5F 77                 5558 	ld	(hl), a
   1B60 78                 5559 	ld	a, b
   1B61 C1                 5560 	pop	bc
   1B62 CE 00              5561 	adc	a,#0x00
   1B64 23                 5562 	inc	hl
   1B65 77                 5563 	ld	(hl),a
   1B66                    5564 00116$:
                           5565 ;demo.c:850: if (bt < 10 ) bt+=4;
   1B66 3Ar85s41           5566 	ld	a,(#_bt+0)
   1B69 D6 0A              5567 	sub	a,#0x0A
   1B6B 3Ar86s41           5568 	ld	a,(#_bt+1)
   1B6E DE 00              5569 	sbc	a,#0x00
   1B70 F2r89s1B           5570 	jp	P,00119$
   1B73 21r85s41           5571 	ld	hl,#_bt
   1B76 7E                 5572 	ld	a,(hl)
   1B77 C6 04              5573 	add	a,#0x04
   1B79 23                 5574 	inc	hl
   1B7A 2B                 5575 	dec	hl
   1B7B C5                 5576 	push	bc
   1B7C 4F                 5577 	ld	c, a
   1B7D 23                 5578 	inc	hl
   1B7E 7E                 5579 	ld	a, (hl)
   1B7F 47                 5580 	ld	b, a
   1B80 79                 5581 	ld	a, c
   1B81 2B                 5582 	dec	hl
   1B82 77                 5583 	ld	(hl), a
   1B83 78                 5584 	ld	a, b
   1B84 C1                 5585 	pop	bc
   1B85 CE 00              5586 	adc	a,#0x00
   1B87 23                 5587 	inc	hl
   1B88 77                 5588 	ld	(hl),a
   1B89                    5589 00119$:
                           5590 ;demo.c:853: cmd.source_x = bx;
   1B89 ED 4Br81s41        5591 	ld	bc,(_bx)
   1B8D 21r04s41           5592 	ld	hl,#_cmd
   1B90 71                 5593 	ld	(hl),c
   1B91 23                 5594 	inc	hl
   1B92 70                 5595 	ld	(hl),b
                           5596 ;demo.c:854: cmd.source_y = bt;
   1B93 01r06s41           5597 	ld	bc,#_cmd + 2
   1B96 ED 5Br85s41        5598 	ld	de,(_bt)
   1B9A 69                 5599 	ld	l,c
   1B9B 60                 5600 	ld	h,b
   1B9C 73                 5601 	ld	(hl),e
   1B9D 23                 5602 	inc	hl
   1B9E 72                 5603 	ld	(hl),d
                           5604 ;demo.c:855: cmd.dest_x = 0;
   1B9F 21r08s41           5605 	ld	hl, #_cmd + 4
   1BA2 36 00              5606 	ld	(hl),#0x00
   1BA4 23                 5607 	inc	hl
   1BA5 36 00              5608 	ld	(hl),#0x00
                           5609 ;demo.c:856: cmd.dest_y = 256;
   1BA7 21r0As41           5610 	ld	hl, #_cmd + 6
   1BAA 36 00              5611 	ld	(hl),#0x00
   1BAC 23                 5612 	inc	hl
   1BAD 36 01              5613 	ld	(hl),#0x01
                           5614 ;demo.c:857: cmd.size_x = 36;
   1BAF 21r0Cs41           5615 	ld	hl, #_cmd + 8
   1BB2 36 24              5616 	ld	(hl),#0x24
   1BB4 23                 5617 	inc	hl
   1BB5 36 00              5618 	ld	(hl),#0x00
                           5619 ;demo.c:858: cmd.size_y = 36;
   1BB7 21r0Es41           5620 	ld	hl, #_cmd + 10
   1BBA 36 24              5621 	ld	(hl),#0x24
   1BBC 23                 5622 	inc	hl
   1BBD 36 00              5623 	ld	(hl),#0x00
                           5624 ;demo.c:859: cmd.data = 0;
                           5625 ;demo.c:860: cmd.argument = 0x00;
   1BBF 3E 00              5626 	ld	a,#0x00
   1BC1 32r10s41           5627 	ld	(#_cmd + 12),a
   1BC4 32r11s41           5628 	ld	(#_cmd + 13),a
                           5629 ;demo.c:861: cmd.command = 0xD0; // HMMM
   1BC7 3E D0              5630 	ld	a,#0xD0
   1BC9 32r12s41           5631 	ld	(#_cmd + 14),a
                           5632 ;demo.c:862: vdp_copier(&cmd);
   1BCC 21r04s41           5633 	ld	hl,#_cmd
   1BCF E5                 5634 	push	hl
   1BD0 CDr00s00           5635 	call	_vdp_copier
   1BD3 F1                 5636 	pop	af
                           5637 ;demo.c:864: pbx = bx;
   1BD4 2Ar81s41           5638 	ld	hl,(_bx)
   1BD7 FD 21r8Bs41        5639 	ld	iy,#_pbx
   1BDB FD 75 00           5640 	ld	0 (iy),l
   1BDE FD 21r8Bs41        5641 	ld	iy,#_pbx
   1BE2 FD 74 01           5642 	ld	1 (iy),h
                           5643 ;demo.c:865: pbt = bt;
   1BE5 2Ar85s41           5644 	ld	hl,(_bt)
   1BE8 FD 21r8Ds41        5645 	ld	iy,#_pbt
   1BEC FD 75 00           5646 	ld	0 (iy),l
   1BEF FD 21r8Ds41        5647 	ld	iy,#_pbt
   1BF3 FD 74 01           5648 	ld	1 (iy),h
                           5649 ;demo.c:870: bonc = 1;
   1BF6 21r89s41           5650 	ld	hl,#_bonc + 0
   1BF9 36 01              5651 	ld	(hl), #0x01
   1BFB 21r8As41           5652 	ld	hl,#_bonc + 1
   1BFE 36 00              5653 	ld	(hl), #0x00
                           5654 ;demo.c:871: if (bt > by) {
   1C00 21r83s41           5655 	ld	hl,#_by
   1C03 7E                 5656 	ld	a,(hl)
   1C04 FD 21r85s41        5657 	ld	iy,#_bt
   1C08 FD 96 00           5658 	sub	a,0 (iy)
   1C0B 23                 5659 	inc	hl
   1C0C 7E                 5660 	ld	a,(hl)
   1C0D FD 21r85s41        5661 	ld	iy,#_bt
   1C11 FD 9E 01           5662 	sbc	a,1 (iy)
   1C14 F2r52s1D           5663 	jp	P,00135$
                           5664 ;demo.c:872: bt = by;
   1C17 2Ar83s41           5665 	ld	hl,(_by)
   1C1A FD 21r85s41        5666 	ld	iy,#_bt
   1C1E FD 75 00           5667 	ld	0 (iy),l
   1C21 FD 21r85s41        5668 	ld	iy,#_bt
   1C25 FD 74 01           5669 	ld	1 (iy),h
                           5670 ;demo.c:873: drawbox(bx,bt);
   1C28 21r85s41           5671 	ld	hl,#_bt + 0
   1C2B 4E                 5672 	ld	c,(hl)
   1C2C 21r81s41           5673 	ld	hl,#_bx + 0
   1C2F 46                 5674 	ld	b,(hl)
   1C30 79                 5675 	ld	a,c
   1C31 F5                 5676 	push	af
   1C32 33                 5677 	inc	sp
   1C33 C5                 5678 	push	bc
   1C34 33                 5679 	inc	sp
   1C35 CDrADs18           5680 	call	_drawbox
   1C38 F1                 5681 	pop	af
                           5682 ;demo.c:874: bt = 0;
   1C39 21r85s41           5683 	ld	hl,#_bt + 0
   1C3C 36 00              5684 	ld	(hl), #0x00
   1C3E 21r86s41           5685 	ld	hl,#_bt + 1
   1C41 36 00              5686 	ld	(hl), #0x00
                           5687 ;demo.c:875: if (by > 48) {
   1C43 3E 30              5688 	ld	a,#0x30
   1C45 FD 21r83s41        5689 	ld	iy,#_by
   1C49 FD 96 00           5690 	sub	a,0 (iy)
   1C4C 3E 00              5691 	ld	a,#0x00
   1C4E FD 21r83s41        5692 	ld	iy,#_by
   1C52 FD 9E 01           5693 	sbc	a,1 (iy)
   1C55 F2rADs1C           5694 	jp	P,00123$
                           5695 ;demo.c:876: bonc = 0;
   1C58 21r89s41           5696 	ld	hl,#_bonc + 0
   1C5B 36 00              5697 	ld	(hl), #0x00
   1C5D 21r8As41           5698 	ld	hl,#_bonc + 1
   1C60 36 00              5699 	ld	(hl), #0x00
                           5700 ;demo.c:877: by-=16;
   1C62 21r83s41           5701 	ld	hl,#_by
   1C65 7E                 5702 	ld	a,(hl)
   1C66 C6 F0              5703 	add	a,#0xF0
   1C68 77                 5704 	ld	(hl),a
   1C69 23                 5705 	inc	hl
   1C6A 7E                 5706 	ld	a,(hl)
   1C6B CE FF              5707 	adc	a,#0xFF
   1C6D 77                 5708 	ld	(hl),a
                           5709 ;demo.c:878: prevbox_of = boxes_of[boxi];
   1C6E 3Ar80s41           5710 	ld	a,(#_boxi+0)
   1C71 87                 5711 	add	a,a
   1C72 C6r8F              5712 	add	a,#<_boxes_of
   1C74 6F                 5713 	ld	l,a
   1C75 3Es41              5714 	ld	a,#>_boxes_of
   1C77 CE 00              5715 	adc	a,#0x00
   1C79 67                 5716 	ld	h,a
   1C7A 4E                 5717 	ld	c,(hl)
   1C7B 23                 5718 	inc	hl
   1C7C 21r99s41           5719 	ld	hl,#_prevbox_of + 0
   1C7F 71                 5720 	ld	(hl), c
                           5721 ;demo.c:879: by+=prevbox_of;
   1C80 21r99s41           5722 	ld	hl,#_prevbox_of + 0
   1C83 4E                 5723 	ld	c,(hl)
   1C84 06 00              5724 	ld	b,#0x00
   1C86 21r83s41           5725 	ld	hl,#_by
   1C89 7E                 5726 	ld	a,(hl)
   1C8A 81                 5727 	add	a,c
   1C8B 23                 5728 	inc	hl
   1C8C 2B                 5729 	dec	hl
   1C8D C5                 5730 	push	bc
   1C8E 4F                 5731 	ld	c, a
   1C8F 23                 5732 	inc	hl
   1C90 7E                 5733 	ld	a, (hl)
   1C91 47                 5734 	ld	b, a
   1C92 79                 5735 	ld	a, c
   1C93 2B                 5736 	dec	hl
   1C94 77                 5737 	ld	(hl), a
   1C95 78                 5738 	ld	a, b
   1C96 C1                 5739 	pop	bc
   1C97 88                 5740 	adc	a,b
   1C98 23                 5741 	inc	hl
   1C99 77                 5742 	ld	(hl),a
                           5743 ;demo.c:880: boxi++;
   1C9A FD 21r80s41        5744 	ld	iy,#_boxi
   1C9E FD 34 00           5745 	inc	0 (iy)
                           5746 ;demo.c:881: if (boxi >= 4) boxi = 0;
   1CA1 3Ar80s41           5747 	ld	a,(#_boxi+0)
   1CA4 D6 04              5748 	sub	a,#0x04
   1CA6 38 05              5749 	jr	C,00123$
   1CA8 21r80s41           5750 	ld	hl,#_boxi + 0
   1CAB 36 00              5751 	ld	(hl), #0x00
   1CAD                    5752 00123$:
                           5753 ;demo.c:884: if (by <= 48) {
   1CAD 3E 30              5754 	ld	a,#0x30
   1CAF FD 21r83s41        5755 	ld	iy,#_by
   1CB3 FD 96 00           5756 	sub	a,0 (iy)
   1CB6 3E 00              5757 	ld	a,#0x00
   1CB8 FD 21r83s41        5758 	ld	iy,#_by
   1CBC FD 9E 01           5759 	sbc	a,1 (iy)
   1CBF FAr63s1D           5760 	jp	M,00149$
                           5761 ;demo.c:885: bx-=16;
   1CC2 21r81s41           5762 	ld	hl,#_bx
   1CC5 7E                 5763 	ld	a,(hl)
   1CC6 C6 F0              5764 	add	a,#0xF0
   1CC8 77                 5765 	ld	(hl),a
   1CC9 23                 5766 	inc	hl
   1CCA 7E                 5767 	ld	a,(hl)
   1CCB CE FF              5768 	adc	a,#0xFF
   1CCD 77                 5769 	ld	(hl),a
                           5770 ;demo.c:887: if (bx>128)bo+=8;
   1CCE 3E 80              5771 	ld	a,#0x80
   1CD0 FD 21r81s41        5772 	ld	iy,#_bx
   1CD4 FD 96 00           5773 	sub	a,0 (iy)
   1CD7 3E 00              5774 	ld	a,#0x00
   1CD9 FD 21r81s41        5775 	ld	iy,#_bx
   1CDD FD 9E 01           5776 	sbc	a,1 (iy)
   1CE0 07                 5777 	rlca
   1CE1 E6 01              5778 	and	a,#0x01
   1CE3 4F                 5779 	ld	c,a
   1CE4 B7                 5780 	or	a,a
   1CE5 28 18              5781 	jr	Z,00125$
   1CE7 21r87s41           5782 	ld	hl,#_bo
   1CEA 7E                 5783 	ld	a,(hl)
   1CEB C6 08              5784 	add	a,#0x08
   1CED 23                 5785 	inc	hl
   1CEE 2B                 5786 	dec	hl
   1CEF C5                 5787 	push	bc
   1CF0 4F                 5788 	ld	c, a
   1CF1 23                 5789 	inc	hl
   1CF2 7E                 5790 	ld	a, (hl)
   1CF3 47                 5791 	ld	b, a
   1CF4 79                 5792 	ld	a, c
   1CF5 2B                 5793 	dec	hl
   1CF6 77                 5794 	ld	(hl), a
   1CF7 78                 5795 	ld	a, b
   1CF8 C1                 5796 	pop	bc
   1CF9 CE 00              5797 	adc	a,#0x00
   1CFB 23                 5798 	inc	hl
   1CFC 77                 5799 	ld	(hl),a
   1CFD 18 0C              5800 	jr	00126$
   1CFF                    5801 00125$:
                           5802 ;demo.c:888: else bo-=8;
   1CFF 21r87s41           5803 	ld	hl,#_bo
   1D02 7E                 5804 	ld	a,(hl)
   1D03 C6 F8              5805 	add	a,#0xF8
   1D05 77                 5806 	ld	(hl),a
   1D06 23                 5807 	inc	hl
   1D07 7E                 5808 	ld	a,(hl)
   1D08 CE FF              5809 	adc	a,#0xFF
   1D0A 77                 5810 	ld	(hl),a
   1D0B                    5811 00126$:
                           5812 ;demo.c:889: if (bo > 192) bo = 0;
   1D0B 3E C0              5813 	ld	a,#0xC0
   1D0D FD 21r87s41        5814 	ld	iy,#_bo
   1D11 FD 96 00           5815 	sub	a,0 (iy)
   1D14 3E 00              5816 	ld	a,#0x00
   1D16 FD 21r87s41        5817 	ld	iy,#_bo
   1D1A FD 9E 01           5818 	sbc	a,1 (iy)
   1D1D F2r2As1D           5819 	jp	P,00128$
   1D20 21r87s41           5820 	ld	hl,#_bo + 0
   1D23 36 00              5821 	ld	(hl), #0x00
   1D25 21r88s41           5822 	ld	hl,#_bo + 1
   1D28 36 00              5823 	ld	(hl), #0x00
   1D2A                    5824 00128$:
                           5825 ;demo.c:890: if (bx>128)by=84+bo;
   1D2A AF                 5826 	xor	a,a
   1D2B B1                 5827 	or	a,c
   1D2C 28 12              5828 	jr	Z,00130$
   1D2E 21r83s41           5829 	ld	hl,#_by
   1D31 3Ar87s41           5830 	ld	a,(#_bo+0)
   1D34 C6 54              5831 	add	a,#0x54
   1D36 77                 5832 	ld	(hl),a
   1D37 3Ar88s41           5833 	ld	a,(#_bo+1)
   1D3A CE 00              5834 	adc	a,#0x00
   1D3C 23                 5835 	inc	hl
   1D3D 77                 5836 	ld	(hl),a
   1D3E 18 23              5837 	jr	00149$
   1D40                    5838 00130$:
                           5839 ;demo.c:891: else by=36+36+84+bo;
   1D40 21r83s41           5840 	ld	hl,#_by
   1D43 3Ar87s41           5841 	ld	a,(#_bo+0)
   1D46 C6 9C              5842 	add	a,#0x9C
   1D48 77                 5843 	ld	(hl),a
   1D49 3Ar88s41           5844 	ld	a,(#_bo+1)
   1D4C CE 00              5845 	adc	a,#0x00
   1D4E 23                 5846 	inc	hl
   1D4F 77                 5847 	ld	(hl),a
   1D50 18 11              5848 	jr	00149$
   1D52                    5849 00135$:
                           5850 ;demo.c:894: drawbox(bx,bt);
   1D52 21r85s41           5851 	ld	hl,#_bt + 0
   1D55 4E                 5852 	ld	c,(hl)
   1D56 21r81s41           5853 	ld	hl,#_bx + 0
   1D59 46                 5854 	ld	b,(hl)
   1D5A 79                 5855 	ld	a,c
   1D5B F5                 5856 	push	af
   1D5C 33                 5857 	inc	sp
   1D5D C5                 5858 	push	bc
   1D5E 33                 5859 	inc	sp
   1D5F CDrADs18           5860 	call	_drawbox
   1D62 F1                 5861 	pop	af
   1D63                    5862 00149$:
   1D63 DD F9              5863 	ld	sp,ix
   1D65 DD E1              5864 	pop	ix
   1D67 C9                 5865 	ret
   1D68                    5866 _boxes_end::
   1D68                    5867 __str_13:
   1D68 4C 45 54 20 55 53  5868 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1D93 00                 5869 	.db 0x00
                           5870 ;demo.c:903: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5871 ;	---------------------------------
                           5872 ; Function drawtritile
                           5873 ; ---------------------------------
   1D94                    5874 _drawtritile_start::
   1D94                    5875 _drawtritile:
   1D94 DD E5              5876 	push	ix
   1D96 DD 21 00 00        5877 	ld	ix,#0
   1D9A DD 39              5878 	add	ix,sp
                           5879 ;demo.c:904: cmd.source_x = tx;
   1D9C DD 4E 04           5880 	ld	c,4 (ix)
   1D9F 06 00              5881 	ld	b,#0x00
   1DA1 21r04s41           5882 	ld	hl,#_cmd
   1DA4 71                 5883 	ld	(hl),c
   1DA5 23                 5884 	inc	hl
   1DA6 70                 5885 	ld	(hl),b
                           5886 ;demo.c:905: cmd.source_y = ty-1;
   1DA7 01r06s41           5887 	ld	bc,#_cmd + 2
   1DAA DD 5E 05           5888 	ld	e,5 (ix)
   1DAD DD 56 06           5889 	ld	d,6 (ix)
   1DB0 1B                 5890 	dec	de
   1DB1 69                 5891 	ld	l,c
   1DB2 60                 5892 	ld	h,b
   1DB3 73                 5893 	ld	(hl),e
   1DB4 23                 5894 	inc	hl
   1DB5 72                 5895 	ld	(hl),d
                           5896 ;demo.c:906: cmd.dest_x = x;
   1DB6 01r08s41           5897 	ld	bc,#_cmd + 4
   1DB9 DD 5E 07           5898 	ld	e,7 (ix)
   1DBC 16 00              5899 	ld	d,#0x00
   1DBE 69                 5900 	ld	l,c
   1DBF 60                 5901 	ld	h,b
   1DC0 73                 5902 	ld	(hl),e
   1DC1 23                 5903 	inc	hl
   1DC2 72                 5904 	ld	(hl),d
                           5905 ;demo.c:907: cmd.dest_y = y;
   1DC3 01r0As41           5906 	ld	bc,#_cmd + 6
   1DC6 DD 5E 08           5907 	ld	e,8 (ix)
   1DC9 16 00              5908 	ld	d,#0x00
   1DCB 69                 5909 	ld	l,c
   1DCC 60                 5910 	ld	h,b
   1DCD 73                 5911 	ld	(hl),e
   1DCE 23                 5912 	inc	hl
   1DCF 72                 5913 	ld	(hl),d
                           5914 ;demo.c:908: cmd.size_x = 16;
   1DD0 21r0Cs41           5915 	ld	hl, #_cmd + 8
   1DD3 36 10              5916 	ld	(hl),#0x10
   1DD5 23                 5917 	inc	hl
   1DD6 36 00              5918 	ld	(hl),#0x00
                           5919 ;demo.c:909: cmd.size_y = 16;
   1DD8 21r0Es41           5920 	ld	hl, #_cmd + 10
   1DDB 36 10              5921 	ld	(hl),#0x10
   1DDD 23                 5922 	inc	hl
   1DDE 36 00              5923 	ld	(hl),#0x00
                           5924 ;demo.c:910: cmd.data = 0;
                           5925 ;demo.c:911: cmd.argument = 0x00;
   1DE0 3E 00              5926 	ld	a,#0x00
   1DE2 32r10s41           5927 	ld	(#_cmd + 12),a
   1DE5 32r11s41           5928 	ld	(#_cmd + 13),a
                           5929 ;demo.c:912: cmd.command = 0xd0; // HMMM
   1DE8 3E D0              5930 	ld	a,#0xD0
   1DEA 32r12s41           5931 	ld	(#_cmd + 14),a
                           5932 ;demo.c:913: vdp_copier(&cmd);
   1DED 21r04s41           5933 	ld	hl,#_cmd
   1DF0 E5                 5934 	push	hl
   1DF1 CDr00s00           5935 	call	_vdp_copier
   1DF4 F1                 5936 	pop	af
   1DF5 DD E1              5937 	pop	ix
   1DF7 C9                 5938 	ret
   1DF8                    5939 _drawtritile_end::
                           5940 ;demo.c:916: void drawtilescreen(char* tripic) {
                           5941 ;	---------------------------------
                           5942 ; Function drawtilescreen
                           5943 ; ---------------------------------
   1DF8                    5944 _drawtilescreen_start::
   1DF8                    5945 _drawtilescreen:
   1DF8 DD E5              5946 	push	ix
   1DFA DD 21 00 00        5947 	ld	ix,#0
   1DFE DD 39              5948 	add	ix,sp
   1E00 21 F8 FF           5949 	ld	hl,#-8
   1E03 39                 5950 	add	hl,sp
   1E04 F9                 5951 	ld	sp,hl
                           5952 ;demo.c:917: int x = 0;
   1E05 DD 36 FE 00        5953 	ld	-2 (ix),#0x00
   1E09 DD 36 FF 00        5954 	ld	-1 (ix),#0x00
                           5955 ;demo.c:920: while(i < 192) {
   1E0D DD 36 FC 00        5956 	ld	-4 (ix),#0x00
   1E11 DD 36 FD 00        5957 	ld	-3 (ix),#0x00
   1E15 DD 36 FA 00        5958 	ld	-6 (ix),#0x00
   1E19 DD 36 FB 00        5959 	ld	-5 (ix),#0x00
   1E1D                    5960 00103$:
   1E1D DD 7E FA           5961 	ld	a,-6 (ix)
   1E20 D6 C0              5962 	sub	a,#0xC0
   1E22 DD 7E FB           5963 	ld	a,-5 (ix)
   1E25 DE 00              5964 	sbc	a,#0x00
   1E27 F2rAEs1E           5965 	jp	P,00106$
                           5966 ;demo.c:921: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1E2A DD 7E FC           5967 	ld	a,-4 (ix)
   1E2D DD 77 F8           5968 	ld	-8 (ix),a
   1E30 DD 7E FE           5969 	ld	a,-2 (ix)
   1E33 DD 77 F9           5970 	ld	-7 (ix),a
   1E36 DD 7E 04           5971 	ld	a,4 (ix)
   1E39 DD 86 FA           5972 	add	a,-6 (ix)
   1E3C 4F                 5973 	ld	c,a
   1E3D DD 7E 05           5974 	ld	a,5 (ix)
   1E40 DD 8E FB           5975 	adc	a,-5 (ix)
   1E43 47                 5976 	ld	b,a
   1E44 0A                 5977 	ld	a,(bc)
   1E45 4F                 5978 	ld	c,a
   1E46 87                 5979 	add	a,a
   1E47 C6r20              5980 	add	a,#<_tri_lookup_y
   1E49 6F                 5981 	ld	l,a
   1E4A 3Es01              5982 	ld	a,#>_tri_lookup_y
   1E4C CE 00              5983 	adc	a,#0x00
   1E4E 67                 5984 	ld	h,a
   1E4F 46                 5985 	ld	b,(hl)
   1E50 23                 5986 	inc	hl
   1E51 56                 5987 	ld	d,(hl)
   1E52 3Er00              5988 	ld	a,#<_tri_lookup_x
   1E54 81                 5989 	add	a,c
   1E55 6F                 5990 	ld	l,a
   1E56 3Es01              5991 	ld	a,#>_tri_lookup_x
   1E58 CE 00              5992 	adc	a,#0x00
   1E5A 67                 5993 	ld	h,a
   1E5B 4E                 5994 	ld	c,(hl)
   1E5C DD 66 F8           5995 	ld	h,-8 (ix)
   1E5F DD 6E F9           5996 	ld	l,-7 (ix)
   1E62 E5                 5997 	push	hl
   1E63 58                 5998 	ld	e,b
   1E64 D5                 5999 	push	de
   1E65 79                 6000 	ld	a,c
   1E66 F5                 6001 	push	af
   1E67 33                 6002 	inc	sp
   1E68 CDr94s1D           6003 	call	_drawtritile
   1E6B F1                 6004 	pop	af
   1E6C F1                 6005 	pop	af
   1E6D 33                 6006 	inc	sp
                           6007 ;demo.c:922: x+=16;
   1E6E DD 7E FE           6008 	ld	a,-2 (ix)
   1E71 C6 10              6009 	add	a,#0x10
   1E73 DD 77 FE           6010 	ld	-2 (ix),a
   1E76 DD 7E FF           6011 	ld	a,-1 (ix)
   1E79 CE 00              6012 	adc	a,#0x00
   1E7B DD 77 FF           6013 	ld	-1 (ix),a
                           6014 ;demo.c:923: if (x >= 256) {x = 0; y+=16;}
   1E7E DD 7E FE           6015 	ld	a,-2 (ix)
   1E81 D6 00              6016 	sub	a,#0x00
   1E83 DD 7E FF           6017 	ld	a,-1 (ix)
   1E86 DE 01              6018 	sbc	a,#0x01
   1E88 FArA3s1E           6019 	jp	M,00102$
   1E8B DD 36 FE 00        6020 	ld	-2 (ix),#0x00
   1E8F DD 36 FF 00        6021 	ld	-1 (ix),#0x00
   1E93 DD 7E FC           6022 	ld	a,-4 (ix)
   1E96 C6 10              6023 	add	a,#0x10
   1E98 DD 77 FC           6024 	ld	-4 (ix),a
   1E9B DD 7E FD           6025 	ld	a,-3 (ix)
   1E9E CE 00              6026 	adc	a,#0x00
   1EA0 DD 77 FD           6027 	ld	-3 (ix),a
   1EA3                    6028 00102$:
                           6029 ;demo.c:924: i++;
   1EA3 DD 34 FA           6030 	inc	-6 (ix)
   1EA6 20 03              6031 	jr	NZ,00112$
   1EA8 DD 34 FB           6032 	inc	-5 (ix)
   1EAB                    6033 00112$:
   1EAB C3r1Ds1E           6034 	jp	00103$
   1EAE                    6035 00106$:
   1EAE DD F9              6036 	ld	sp,ix
   1EB0 DD E1              6037 	pop	ix
   1EB2 C9                 6038 	ret
   1EB3                    6039 _drawtilescreen_end::
                           6040 ;demo.c:940: void tritiles() {
                           6041 ;	---------------------------------
                           6042 ; Function tritiles
                           6043 ; ---------------------------------
   1EB3                    6044 _tritiles_start::
   1EB3                    6045 _tritiles:
   1EB3 DD E5              6046 	push	ix
   1EB5 DD 21 00 00        6047 	ld	ix,#0
   1EB9 DD 39              6048 	add	ix,sp
   1EBB 21 FB FF           6049 	ld	hl,#-5
   1EBE 39                 6050 	add	hl,sp
   1EBF F9                 6051 	ld	sp,hl
                           6052 ;demo.c:947: if (tri_inited == 0) {
   1EC0 AF                 6053 	xor	a,a
   1EC1 21r9As41           6054 	ld	hl,#_tri_inited + 0
   1EC4 B6                 6055 	or	a,(hl)
   1EC5 C2r64s1F           6056 	jp	NZ,00102$
                           6057 ;demo.c:948: tri_inited = 1;
   1EC8 FD 21r9As41        6058 	ld	iy,#_tri_inited
   1ECC FD 36 00 01        6059 	ld	0 (iy),#0x01
                           6060 ;demo.c:950: cmd.size_x = 256;
   1ED0 21r0Cs41           6061 	ld	hl, #_cmd + 8
   1ED3 36 00              6062 	ld	(hl),#0x00
   1ED5 23                 6063 	inc	hl
   1ED6 36 01              6064 	ld	(hl),#0x01
                           6065 ;demo.c:951: cmd.size_y = 1;
   1ED8 21r0Es41           6066 	ld	hl, #_cmd + 10
   1EDB 36 01              6067 	ld	(hl),#0x01
   1EDD 23                 6068 	inc	hl
   1EDE 36 00              6069 	ld	(hl),#0x00
                           6070 ;demo.c:952: cmd.data = 0;
                           6071 ;demo.c:953: cmd.argument = 0x00; // from 70xY to left
   1EE0 3E 00              6072 	ld	a,#0x00
   1EE2 32r10s41           6073 	ld	(#_cmd + 12),a
   1EE5 32r11s41           6074 	ld	(#_cmd + 13),a
                           6075 ;demo.c:954: cmd.command = 0xd0; // vram to vram, y only
   1EE8 01r12s41           6076 	ld	bc,#_cmd + 14
   1EEB 3E D0              6077 	ld	a,#0xD0
   1EED 02                 6078 	ld	(bc),a
                           6079 ;demo.c:955: cmd.source_x = 0;
   1EEE 21r04s41           6080 	ld	hl,#_cmd
   1EF1 36 00              6081 	ld	(hl),#0x00
   1EF3 23                 6082 	inc	hl
   1EF4 36 00              6083 	ld	(hl),#0x00
                           6084 ;demo.c:956: cmd.source_y = 255;
   1EF6 21r06s41           6085 	ld	hl, #_cmd + 2
   1EF9 36 FF              6086 	ld	(hl),#0xFF
   1EFB 23                 6087 	inc	hl
   1EFC 36 00              6088 	ld	(hl),#0x00
                           6089 ;demo.c:957: cmd.dest_y = 0;
   1EFE 01r0As41           6090 	ld	bc,#_cmd + 6
   1F01 69                 6091 	ld	l,c
   1F02 60                 6092 	ld	h,b
   1F03 36 00              6093 	ld	(hl),#0x00
   1F05 23                 6094 	inc	hl
   1F06 36 00              6095 	ld	(hl),#0x00
                           6096 ;demo.c:959: for (x = 0; x < 212; x++) {
   1F08 DD 36 FE D4        6097 	ld	-2 (ix),#0xD4
   1F0C DD 36 FF 00        6098 	ld	-1 (ix),#0x00
   1F10                    6099 00123$:
                           6100 ;demo.c:960: waitVB();
   1F10 76                 6101 		halt 
                           6102 ;demo.c:961: cmd.dest_x = 0;
   1F11 11r08s41           6103 	ld	de,#_cmd + 4
   1F14 EB                 6104 	ex	de,hl
   1F15 36 00              6105 	ld	(hl),#0x00
   1F17 23                 6106 	inc	hl
   1F18 36 00              6107 	ld	(hl),#0x00
                           6108 ;demo.c:962: cmd.dest_y = x;
   1F1A 11r0As41           6109 	ld	de,#_cmd + 6
   1F1D DD 4E FE           6110 	ld	c,-2 (ix)
   1F20 DD 46 FF           6111 	ld	b,-1 (ix)
   1F23 0B                 6112 	dec	bc
   1F24 EB                 6113 	ex	de,hl
   1F25 71                 6114 	ld	(hl),c
   1F26 23                 6115 	inc	hl
   1F27 70                 6116 	ld	(hl),b
                           6117 ;demo.c:963: vdp_copier(&cmd);
   1F28 C5                 6118 	push	bc
   1F29 21r04s41           6119 	ld	hl,#_cmd
   1F2C E5                 6120 	push	hl
   1F2D CDr00s00           6121 	call	_vdp_copier
   1F30 F1                 6122 	pop	af
   1F31 C1                 6123 	pop	bc
   1F32 DD 71 FE           6124 	ld	-2 (ix),c
   1F35 DD 70 FF           6125 	ld	-1 (ix),b
                           6126 ;demo.c:959: for (x = 0; x < 212; x++) {
   1F38 DD 7E FE           6127 	ld	a,-2 (ix)
   1F3B DD B6 FF           6128 	or	a,-1 (ix)
   1F3E 20 D0              6129 	jr	NZ,00123$
                           6130 ;demo.c:966: vdp_register(9,2); // 50hz,192
   1F40 21 09 02           6131 	ld	hl,#0x0209
   1F43 E5                 6132 	push	hl
   1F44 CDr00s00           6133 	call	_vdp_register
   1F47 F1                 6134 	pop	af
                           6135 ;demo.c:968: vdp_load_palette(boxes_palette);
   1F48 21rE0s40           6136 	ld	hl,#_boxes_palette
   1F4B E5                 6137 	push	hl
   1F4C CDr00s00           6138 	call	_vdp_load_palette
   1F4F F1                 6139 	pop	af
                           6140 ;demo.c:970: msx2_palette(15,0,0,0);
   1F50 21 00 00           6141 	ld	hl,#0x0000
   1F53 E5                 6142 	push	hl
   1F54 2E 0F              6143 	ld	l, #0x0F
   1F56 E5                 6144 	push	hl
   1F57 CDr00s00           6145 	call	_msx2_palette
   1F5A F1                 6146 	pop	af
   1F5B F1                 6147 	pop	af
                           6148 ;demo.c:972: drawtilescreen(tri_center);
   1F5C 21r2Cs02           6149 	ld	hl,#_tri_center
   1F5F E5                 6150 	push	hl
   1F60 CDrF8s1D           6151 	call	_drawtilescreen
   1F63 F1                 6152 	pop	af
   1F64                    6153 00102$:
                           6154 ;demo.c:977: triframes++;
   1F64 FD 21rA6s41        6155 	ld	iy,#_triframes
   1F68 FD 34 00           6156 	inc	0 (iy)
   1F6B 20 07              6157 	jr	NZ,00145$
   1F6D FD 21rA6s41        6158 	ld	iy,#_triframes
   1F71 FD 34 01           6159 	inc	1 (iy)
   1F74                    6160 00145$:
                           6161 ;demo.c:978: if (triframes == 200) {
   1F74 3ArA6s41           6162 	ld	a,(#_triframes+0)
   1F77 D6 C8              6163 	sub	a,#0xC8
   1F79 20 06              6164 	jr	NZ,00146$
   1F7B 3ArA7s41           6165 	ld	a,(#_triframes+1)
   1F7E B7                 6166 	or	a,a
   1F7F 28 02              6167 	jr	Z,00147$
   1F81                    6168 00146$:
   1F81 18 08              6169 	jr	00104$
   1F83                    6170 00147$:
                           6171 ;demo.c:979: drawtilescreen(tri_up);
   1F83 21rECs02           6172 	ld	hl,#_tri_up
   1F86 E5                 6173 	push	hl
   1F87 CDrF8s1D           6174 	call	_drawtilescreen
   1F8A F1                 6175 	pop	af
   1F8B                    6176 00104$:
                           6177 ;demo.c:982: if (triframes == 400) {
   1F8B 3ArA6s41           6178 	ld	a,(#_triframes+0)
   1F8E D6 90              6179 	sub	a,#0x90
   1F90 20 07              6180 	jr	NZ,00148$
   1F92 3ArA7s41           6181 	ld	a,(#_triframes+1)
   1F95 D6 01              6182 	sub	a,#0x01
   1F97 28 02              6183 	jr	Z,00149$
   1F99                    6184 00148$:
   1F99 18 08              6185 	jr	00106$
   1F9B                    6186 00149$:
                           6187 ;demo.c:983: drawtilescreen(tri_dia);
   1F9B 21rACs03           6188 	ld	hl,#_tri_dia
   1F9E E5                 6189 	push	hl
   1F9F CDrF8s1D           6190 	call	_drawtilescreen
   1FA2 F1                 6191 	pop	af
   1FA3                    6192 00106$:
                           6193 ;demo.c:985: if (triframes == 600) {
   1FA3 3ArA6s41           6194 	ld	a,(#_triframes+0)
   1FA6 D6 58              6195 	sub	a,#0x58
   1FA8 20 07              6196 	jr	NZ,00150$
   1FAA 3ArA7s41           6197 	ld	a,(#_triframes+1)
   1FAD D6 02              6198 	sub	a,#0x02
   1FAF 28 02              6199 	jr	Z,00151$
   1FB1                    6200 00150$:
   1FB1 18 08              6201 	jr	00108$
   1FB3                    6202 00151$:
                           6203 ;demo.c:986: drawtilescreen(tri_side1);
   1FB3 21r6Cs04           6204 	ld	hl,#_tri_side1
   1FB6 E5                 6205 	push	hl
   1FB7 CDrF8s1D           6206 	call	_drawtilescreen
   1FBA F1                 6207 	pop	af
   1FBB                    6208 00108$:
                           6209 ;demo.c:988: if (triframes == 700) {
   1FBB 3ArA6s41           6210 	ld	a,(#_triframes+0)
   1FBE D6 BC              6211 	sub	a,#0xBC
   1FC0 20 07              6212 	jr	NZ,00152$
   1FC2 3ArA7s41           6213 	ld	a,(#_triframes+1)
   1FC5 D6 02              6214 	sub	a,#0x02
   1FC7 28 02              6215 	jr	Z,00153$
   1FC9                    6216 00152$:
   1FC9 18 08              6217 	jr	00110$
   1FCB                    6218 00153$:
                           6219 ;demo.c:989: drawtilescreen(tri_side2);
   1FCB 21r2Cs05           6220 	ld	hl,#_tri_side2
   1FCE E5                 6221 	push	hl
   1FCF CDrF8s1D           6222 	call	_drawtilescreen
   1FD2 F1                 6223 	pop	af
   1FD3                    6224 00110$:
                           6225 ;demo.c:991: if (triframes == 800) {
   1FD3 3ArA6s41           6226 	ld	a,(#_triframes+0)
   1FD6 D6 20              6227 	sub	a,#0x20
   1FD8 20 07              6228 	jr	NZ,00154$
   1FDA 3ArA7s41           6229 	ld	a,(#_triframes+1)
   1FDD D6 03              6230 	sub	a,#0x03
   1FDF 28 02              6231 	jr	Z,00155$
   1FE1                    6232 00154$:
   1FE1 18 08              6233 	jr	00112$
   1FE3                    6234 00155$:
                           6235 ;demo.c:992: drawtilescreen(tri_side1);
   1FE3 21r6Cs04           6236 	ld	hl,#_tri_side1
   1FE6 E5                 6237 	push	hl
   1FE7 CDrF8s1D           6238 	call	_drawtilescreen
   1FEA F1                 6239 	pop	af
   1FEB                    6240 00112$:
                           6241 ;demo.c:994: if (triframes == 900) {
   1FEB 3ArA6s41           6242 	ld	a,(#_triframes+0)
   1FEE D6 84              6243 	sub	a,#0x84
   1FF0 20 07              6244 	jr	NZ,00156$
   1FF2 3ArA7s41           6245 	ld	a,(#_triframes+1)
   1FF5 D6 03              6246 	sub	a,#0x03
   1FF7 28 02              6247 	jr	Z,00157$
   1FF9                    6248 00156$:
   1FF9 18 08              6249 	jr	00114$
   1FFB                    6250 00157$:
                           6251 ;demo.c:995: drawtilescreen(tri_side2);
   1FFB 21r2Cs05           6252 	ld	hl,#_tri_side2
   1FFE E5                 6253 	push	hl
   1FFF CDrF8s1D           6254 	call	_drawtilescreen
   2002 F1                 6255 	pop	af
   2003                    6256 00114$:
                           6257 ;demo.c:997: if (triframes == 1000) {
   2003 3ArA6s41           6258 	ld	a,(#_triframes+0)
   2006 D6 E8              6259 	sub	a,#0xE8
   2008 20 07              6260 	jr	NZ,00158$
   200A 3ArA7s41           6261 	ld	a,(#_triframes+1)
   200D D6 03              6262 	sub	a,#0x03
   200F 28 02              6263 	jr	Z,00159$
   2011                    6264 00158$:
   2011 18 12              6265 	jr	00116$
   2013                    6266 00159$:
                           6267 ;demo.c:998: triframes = 0;
   2013 21rA6s41           6268 	ld	hl,#_triframes + 0
   2016 36 00              6269 	ld	(hl), #0x00
   2018 21rA7s41           6270 	ld	hl,#_triframes + 1
   201B 36 00              6271 	ld	(hl), #0x00
                           6272 ;demo.c:999: drawtilescreen(tri_center);
   201D 21r2Cs02           6273 	ld	hl,#_tri_center
   2020 E5                 6274 	push	hl
   2021 CDrF8s1D           6275 	call	_drawtilescreen
   2024 F1                 6276 	pop	af
   2025                    6277 00116$:
                           6278 ;demo.c:1003: msx2_palette(2,0,0,0);
   2025 21 00 00           6279 	ld	hl,#0x0000
   2028 E5                 6280 	push	hl
   2029 2E 02              6281 	ld	l, #0x02
   202B E5                 6282 	push	hl
   202C CDr00s00           6283 	call	_msx2_palette
   202F F1                 6284 	pop	af
   2030 F1                 6285 	pop	af
                           6286 ;demo.c:1004: msx2_palette(11,0,0,0);
   2031 21 00 00           6287 	ld	hl,#0x0000
   2034 E5                 6288 	push	hl
   2035 2E 0B              6289 	ld	l, #0x0B
   2037 E5                 6290 	push	hl
   2038 CDr00s00           6291 	call	_msx2_palette
   203B F1                 6292 	pop	af
   203C F1                 6293 	pop	af
                           6294 ;demo.c:1007: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   203D 21r9Ds41           6295 	ld	hl,#_tripal + 2
   2040 4E                 6296 	ld	c,(hl)
   2041 11r9Cs41           6297 	ld	de,#_tripal + 1
   2044 1A                 6298 	ld	a,(de)
   2045 47                 6299 	ld	b,a
   2046 21r9Bs41           6300 	ld	hl,#_tripal
   2049 5E                 6301 	ld	e,(hl)
   204A 79                 6302 	ld	a,c
   204B F5                 6303 	push	af
   204C 33                 6304 	inc	sp
   204D C5                 6305 	push	bc
   204E 33                 6306 	inc	sp
   204F 53                 6307 	ld	d,e
   2050 1E 03              6308 	ld	e,#0x03
   2052 D5                 6309 	push	de
   2053 CDr00s00           6310 	call	_msx2_palette
   2056 F1                 6311 	pop	af
   2057 F1                 6312 	pop	af
                           6313 ;demo.c:1008: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2058 21rA0s41           6314 	ld	hl,#_tripal + 5
   205B 4E                 6315 	ld	c,(hl)
   205C 11r9Fs41           6316 	ld	de,#_tripal + 4
   205F 1A                 6317 	ld	a,(de)
   2060 47                 6318 	ld	b,a
   2061 21r9Es41           6319 	ld	hl,#_tripal + 3
   2064 5E                 6320 	ld	e,(hl)
   2065 79                 6321 	ld	a,c
   2066 F5                 6322 	push	af
   2067 33                 6323 	inc	sp
   2068 C5                 6324 	push	bc
   2069 33                 6325 	inc	sp
   206A 53                 6326 	ld	d,e
   206B 1E 0E              6327 	ld	e,#0x0E
   206D D5                 6328 	push	de
   206E CDr00s00           6329 	call	_msx2_palette
   2071 F1                 6330 	pop	af
   2072 F1                 6331 	pop	af
                           6332 ;demo.c:1009: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2073 21rA3s41           6333 	ld	hl,#_tripal + 8
   2076 4E                 6334 	ld	c,(hl)
   2077 11rA2s41           6335 	ld	de,#_tripal + 7
   207A 1A                 6336 	ld	a,(de)
   207B 47                 6337 	ld	b,a
   207C 21rA1s41           6338 	ld	hl,#_tripal + 6
   207F 5E                 6339 	ld	e,(hl)
   2080 79                 6340 	ld	a,c
   2081 F5                 6341 	push	af
   2082 33                 6342 	inc	sp
   2083 C5                 6343 	push	bc
   2084 33                 6344 	inc	sp
   2085 53                 6345 	ld	d,e
   2086 1E 06              6346 	ld	e,#0x06
   2088 D5                 6347 	push	de
   2089 CDr00s00           6348 	call	_msx2_palette
   208C F1                 6349 	pop	af
   208D F1                 6350 	pop	af
                           6351 ;demo.c:1012: tripaltick++;
   208E FD 21rA4s41        6352 	ld	iy,#_tripaltick
   2092 FD 34 00           6353 	inc	0 (iy)
                           6354 ;demo.c:1013: if (tripaltick > 6) {
   2095 3E 06              6355 	ld	a,#0x06
   2097 FD 21rA4s41        6356 	ld	iy,#_tripaltick
   209B FD 96 00           6357 	sub	a,0 (iy)
   209E D2r23s21           6358 	jp	NC,00128$
                           6359 ;demo.c:1014: tripaltick2++;
   20A1 FD 21rA5s41        6360 	ld	iy,#_tripaltick2
   20A5 FD 34 00           6361 	inc	0 (iy)
                           6362 ;demo.c:1015: if (tripaltick2 > 6) tripaltick2 = 0;
   20A8 3E 06              6363 	ld	a,#0x06
   20AA FD 21rA5s41        6364 	ld	iy,#_tripaltick2
   20AE FD 96 00           6365 	sub	a,0 (iy)
   20B1 30 05              6366 	jr	NC,00118$
   20B3 21rA5s41           6367 	ld	hl,#_tripaltick2 + 0
   20B6 36 00              6368 	ld	(hl), #0x00
   20B8                    6369 00118$:
                           6370 ;demo.c:1017: r = tripal[0];
   20B8 21r9Bs41           6371 	ld	hl,#_tripal
   20BB 4E                 6372 	ld	c,(hl)
   20BC DD 71 FD           6373 	ld	-3 (ix),c
                           6374 ;demo.c:1018: g = tripal[1];
   20BF 11r9Cs41           6375 	ld	de,#_tripal + 1
   20C2 1A                 6376 	ld	a,(de)
   20C3 DD 77 FC           6377 	ld	-4 (ix),a
                           6378 ;demo.c:1019: b = tripal[2];
   20C6 21r9Ds41           6379 	ld	hl,#_tripal + 2
   20C9 5E                 6380 	ld	e,(hl)
   20CA DD 73 FB           6381 	ld	-5 (ix),e
                           6382 ;demo.c:1021: for (x = 0; x < 6; x++) {
   20CD DD 36 FE 00        6383 	ld	-2 (ix),#0x00
   20D1 DD 36 FF 00        6384 	ld	-1 (ix),#0x00
   20D5                    6385 00124$:
   20D5 DD 7E FE           6386 	ld	a,-2 (ix)
   20D8 D6 06              6387 	sub	a,#0x06
   20DA DD 7E FF           6388 	ld	a,-1 (ix)
   20DD DE 00              6389 	sbc	a,#0x00
   20DF F2r09s21           6390 	jp	P,00127$
                           6391 ;demo.c:1022: tripal[x] = tripal[x+3];
   20E2 3Er9B              6392 	ld	a,#<_tripal
   20E4 DD 86 FE           6393 	add	a,-2 (ix)
   20E7 4F                 6394 	ld	c,a
   20E8 3Es41              6395 	ld	a,#>_tripal
   20EA DD 8E FF           6396 	adc	a,-1 (ix)
   20ED 47                 6397 	ld	b,a
   20EE DD 5E FE           6398 	ld	e,-2 (ix)
   20F1 1C                 6399 	inc	e
   20F2 1C                 6400 	inc	e
   20F3 1C                 6401 	inc	e
   20F4 3Er9B              6402 	ld	a,#<_tripal
   20F6 83                 6403 	add	a,e
   20F7 5F                 6404 	ld	e,a
   20F8 3Es41              6405 	ld	a,#>_tripal
   20FA CE 00              6406 	adc	a,#0x00
   20FC 57                 6407 	ld	d,a
   20FD 1A                 6408 	ld	a,(de)
   20FE 02                 6409 	ld	(bc),a
                           6410 ;demo.c:1021: for (x = 0; x < 6; x++) {
   20FF DD 34 FE           6411 	inc	-2 (ix)
   2102 20 03              6412 	jr	NZ,00160$
   2104 DD 34 FF           6413 	inc	-1 (ix)
   2107                    6414 00160$:
   2107 18 CC              6415 	jr	00124$
   2109                    6416 00127$:
                           6417 ;demo.c:1025: tripal[6] = r;
   2109 01rA1s41           6418 	ld	bc,#_tripal + 6
   210C DD 7E FD           6419 	ld	a,-3 (ix)
   210F 02                 6420 	ld	(bc),a
                           6421 ;demo.c:1026: tripal[7] = g;
   2110 01rA2s41           6422 	ld	bc,#_tripal + 7
   2113 DD 7E FC           6423 	ld	a,-4 (ix)
   2116 02                 6424 	ld	(bc),a
                           6425 ;demo.c:1027: tripal[8] = b;
   2117 01rA3s41           6426 	ld	bc,#_tripal + 8
   211A DD 7E FB           6427 	ld	a,-5 (ix)
   211D 02                 6428 	ld	(bc),a
                           6429 ;demo.c:1028: tripaltick = 0;
   211E 21rA4s41           6430 	ld	hl,#_tripaltick + 0
   2121 36 00              6431 	ld	(hl), #0x00
   2123                    6432 00128$:
   2123 DD F9              6433 	ld	sp,ix
   2125 DD E1              6434 	pop	ix
   2127 C9                 6435 	ret
   2128                    6436 _tritiles_end::
                           6437 ;demo.c:1033: int abs (int n) {
                           6438 ;	---------------------------------
                           6439 ; Function abs
                           6440 ; ---------------------------------
   2128                    6441 _abs_start::
   2128                    6442 _abs:
   2128 DD E5              6443 	push	ix
   212A DD 21 00 00        6444 	ld	ix,#0
   212E DD 39              6445 	add	ix,sp
   2130 21 FA FF           6446 	ld	hl,#-6
   2133 39                 6447 	add	hl,sp
   2134 F9                 6448 	ld	sp,hl
                           6449 ;demo.c:1034: const int ret[2] = { n, -n };
   2135 21 02 00           6450 	ld	hl,#0x0002
   2138 39                 6451 	add	hl,sp
   2139 4D                 6452 	ld	c,l
   213A 44                 6453 	ld	b,h
   213B DD 7E 04           6454 	ld	a,4 (ix)
   213E 77                 6455 	ld	(hl),a
   213F 23                 6456 	inc	hl
   2140 DD 7E 05           6457 	ld	a,5 (ix)
   2143 77                 6458 	ld	(hl),a
   2144 21 02 00           6459 	ld	hl,#0x0002
   2147 09                 6460 	add	hl,bc
   2148 DD 75 FA           6461 	ld	-6 (ix),l
   214B DD 74 FB           6462 	ld	-5 (ix),h
   214E AF                 6463 	xor	a,a
   214F DD 9E 04           6464 	sbc	a,4 (ix)
   2152 5F                 6465 	ld	e,a
   2153 3E 00              6466 	ld	a,#0x00
   2155 DD 9E 05           6467 	sbc	a,5 (ix)
   2158 57                 6468 	ld	d,a
   2159 DD 6E FA           6469 	ld	l,-6 (ix)
   215C DD 66 FB           6470 	ld	h,-5 (ix)
   215F 73                 6471 	ld	(hl),e
   2160 23                 6472 	inc	hl
   2161 72                 6473 	ld	(hl),d
                           6474 ;demo.c:1035: return ret [n<0];
   2162 DD 7E 05           6475 	ld	a,5 (ix)
   2165 07                 6476 	rlca
   2166 E6 01              6477 	and	a,#0x01
   2168 5F                 6478 	ld	e,a
   2169 CB 23              6479 	sla	e
   216B 79                 6480 	ld	a,c
   216C 83                 6481 	add	a,e
   216D 6F                 6482 	ld	l,a
   216E 78                 6483 	ld	a,b
   216F CE 00              6484 	adc	a,#0x00
   2171 67                 6485 	ld	h,a
   2172 5E                 6486 	ld	e,(hl)
   2173 23                 6487 	inc	hl
   2174 4E                 6488 	ld	c,(hl)
   2175 6B                 6489 	ld	l,e
   2176 61                 6490 	ld	h,c
   2177 DD F9              6491 	ld	sp,ix
   2179 DD E1              6492 	pop	ix
   217B C9                 6493 	ret
   217C                    6494 _abs_end::
                           6495 ;demo.c:1041: void logoeffu() {
                           6496 ;	---------------------------------
                           6497 ; Function logoeffu
                           6498 ; ---------------------------------
   217C                    6499 _logoeffu_start::
   217C                    6500 _logoeffu:
   217C DD E5              6501 	push	ix
   217E DD 21 00 00        6502 	ld	ix,#0
   2182 DD 39              6503 	add	ix,sp
   2184 F5                 6504 	push	af
   2185 F5                 6505 	push	af
                           6506 ;demo.c:1045: fadein();
   2186 CDr27s0A           6507 	call	_fadein
                           6508 ;demo.c:1047: v = abs(sintabx[(vbicount) & 255]>>4);
   2189 21r00s41           6509 	ld	hl,#_vbicount + 0
   218C 4E                 6510 	ld	c,(hl)
   218D 06 00              6511 	ld	b,#0x00
   218F CB 21              6512 	sla	c
   2191 CB 10              6513 	rl	b
   2193 21r2Cs00           6514 	ld	hl,#_sintabx
   2196 09                 6515 	add	hl,bc
   2197 4E                 6516 	ld	c,(hl)
   2198 23                 6517 	inc	hl
   2199 46                 6518 	ld	b,(hl)
   219A CB 38              6519 	srl	b
   219C CB 19              6520 	rr	c
   219E CB 38              6521 	srl	b
   21A0 CB 19              6522 	rr	c
   21A2 CB 38              6523 	srl	b
   21A4 CB 19              6524 	rr	c
   21A6 CB 38              6525 	srl	b
   21A8 CB 19              6526 	rr	c
   21AA C5                 6527 	push	bc
   21AB CDr28s21           6528 	call	_abs
   21AE F1                 6529 	pop	af
   21AF 44                 6530 	ld	b,h
   21B0 4D                 6531 	ld	c,l
   21B1 DD 71 FC           6532 	ld	-4 (ix),c
   21B4 DD 70 FD           6533 	ld	-3 (ix),b
                           6534 ;demo.c:1049: for (y = 0; y < 116; y+=2) {
   21B7 DD 36 FE 00        6535 	ld	-2 (ix),#0x00
   21BB DD 36 FF 00        6536 	ld	-1 (ix),#0x00
   21BF                    6537 00108$:
   21BF DD 7E FE           6538 	ld	a,-2 (ix)
   21C2 D6 74              6539 	sub	a,#0x74
   21C4 DD 7E FF           6540 	ld	a,-1 (ix)
   21C7 DE 00              6541 	sbc	a,#0x00
   21C9 F2r94s22           6542 	jp	P,00111$
                           6543 ;demo.c:1050: cmd.size_x = 108;
   21CC 11r0Cs41           6544 	ld	de,#_cmd + 8
   21CF EB                 6545 	ex	de,hl
   21D0 36 6C              6546 	ld	(hl),#0x6C
   21D2 23                 6547 	inc	hl
   21D3 36 00              6548 	ld	(hl),#0x00
                           6549 ;demo.c:1051: cmd.size_y = 2;
   21D5 11r0Es41           6550 	ld	de,#_cmd + 10
   21D8 EB                 6551 	ex	de,hl
   21D9 36 02              6552 	ld	(hl),#0x02
   21DB 23                 6553 	inc	hl
   21DC 36 00              6554 	ld	(hl),#0x00
                           6555 ;demo.c:1052: cmd.data = 0;
   21DE 11r10s41           6556 	ld	de,#_cmd + 12
   21E1 3E 00              6557 	ld	a,#0x00
   21E3 12                 6558 	ld	(de),a
                           6559 ;demo.c:1053: cmd.argument = 0x00;
   21E4 11r11s41           6560 	ld	de,#_cmd + 13
   21E7 3E 00              6561 	ld	a,#0x00
   21E9 12                 6562 	ld	(de),a
                           6563 ;demo.c:1054: cmd.command = 0xd0; 
   21EA 11r12s41           6564 	ld	de,#_cmd + 14
   21ED 3E D0              6565 	ld	a,#0xD0
   21EF 12                 6566 	ld	(de),a
                           6567 ;demo.c:1055: cmd.source_x = 74;
   21F0 21r04s41           6568 	ld	hl,#_cmd
   21F3 36 4A              6569 	ld	(hl),#0x4A
   21F5 23                 6570 	inc	hl
   21F6 36 00              6571 	ld	(hl),#0x00
                           6572 ;demo.c:1056: cmd.source_y = 256+y;
   21F8 11r06s41           6573 	ld	de,#_cmd + 2
   21FB DD 7E FE           6574 	ld	a,-2 (ix)
   21FE C6 00              6575 	add	a,#0x00
   2200 4F                 6576 	ld	c,a
   2201 DD 7E FF           6577 	ld	a,-1 (ix)
   2204 CE 01              6578 	adc	a,#0x01
   2206 47                 6579 	ld	b,a
   2207 6B                 6580 	ld	l,e
   2208 62                 6581 	ld	h,d
   2209 71                 6582 	ld	(hl),c
   220A 23                 6583 	inc	hl
   220B 70                 6584 	ld	(hl),b
                           6585 ;demo.c:1057: v+=y;
   220C DD 7E FC           6586 	ld	a,-4 (ix)
   220F DD 86 FE           6587 	add	a,-2 (ix)
   2212 DD 77 FC           6588 	ld	-4 (ix),a
   2215 DD 7E FD           6589 	ld	a,-3 (ix)
   2218 DD 8E FF           6590 	adc	a,-1 (ix)
   221B DD 77 FD           6591 	ld	-3 (ix),a
                           6592 ;demo.c:1058: v -= powa;
   221E 21rAAs41           6593 	ld	hl,#_powa
   2221 DD 7E FC           6594 	ld	a,-4 (ix)
   2224 96                 6595 	sub	a,(hl)
   2225 DD 77 FC           6596 	ld	-4 (ix),a
   2228 DD 7E FD           6597 	ld	a,-3 (ix)
   222B 23                 6598 	inc	hl
   222C 9E                 6599 	sbc	a,(hl)
                           6600 ;demo.c:1059: if (v<0) v = 0;
   222D DD 77 FD           6601 	ld	-3 (ix),a
   2230 CB 7F              6602 	bit	7,a
   2232 28 08              6603 	jr	Z,00102$
   2234 DD 36 FC 00        6604 	ld	-4 (ix),#0x00
   2238 DD 36 FD 00        6605 	ld	-3 (ix),#0x00
   223C                    6606 00102$:
                           6607 ;demo.c:1060: if (v>150) v = 150;
   223C 3E 96              6608 	ld	a,#0x96
   223E DD 96 FC           6609 	sub	a,-4 (ix)
   2241 3E 00              6610 	ld	a,#0x00
   2243 DD 9E FD           6611 	sbc	a,-3 (ix)
   2246 F2r51s22           6612 	jp	P,00104$
   2249 DD 36 FC 96        6613 	ld	-4 (ix),#0x96
   224D DD 36 FD 00        6614 	ld	-3 (ix),#0x00
   2251                    6615 00104$:
                           6616 ;demo.c:1061: cmd.dest_x = 74+v;
   2251 01r08s41           6617 	ld	bc,#_cmd + 4
   2254 DD 7E FC           6618 	ld	a,-4 (ix)
   2257 C6 4A              6619 	add	a,#0x4A
   2259 5F                 6620 	ld	e,a
   225A DD 7E FD           6621 	ld	a,-3 (ix)
   225D CE 00              6622 	adc	a,#0x00
   225F 57                 6623 	ld	d,a
   2260 69                 6624 	ld	l,c
   2261 60                 6625 	ld	h,b
   2262 73                 6626 	ld	(hl),e
   2263 23                 6627 	inc	hl
   2264 72                 6628 	ld	(hl),d
                           6629 ;demo.c:1062: cmd.dest_y = 50+y+1;
   2265 01r0As41           6630 	ld	bc,#_cmd + 6
   2268 DD 7E FE           6631 	ld	a,-2 (ix)
   226B C6 33              6632 	add	a,#0x33
   226D 5F                 6633 	ld	e,a
   226E DD 7E FF           6634 	ld	a,-1 (ix)
   2271 CE 00              6635 	adc	a,#0x00
   2273 57                 6636 	ld	d,a
   2274 69                 6637 	ld	l,c
   2275 60                 6638 	ld	h,b
   2276 73                 6639 	ld	(hl),e
   2277 23                 6640 	inc	hl
   2278 72                 6641 	ld	(hl),d
                           6642 ;demo.c:1063: vdp_copier(&cmd);
   2279 21r04s41           6643 	ld	hl,#_cmd
   227C E5                 6644 	push	hl
   227D CDr00s00           6645 	call	_vdp_copier
   2280 F1                 6646 	pop	af
                           6647 ;demo.c:1049: for (y = 0; y < 116; y+=2) {
   2281 DD 7E FE           6648 	ld	a,-2 (ix)
   2284 C6 02              6649 	add	a,#0x02
   2286 DD 77 FE           6650 	ld	-2 (ix),a
   2289 DD 7E FF           6651 	ld	a,-1 (ix)
   228C CE 00              6652 	adc	a,#0x00
   228E DD 77 FF           6653 	ld	-1 (ix),a
   2291 C3rBFs21           6654 	jp	00108$
   2294                    6655 00111$:
                           6656 ;demo.c:1066: if (vbicount > 84 && onceclear > 182) {
   2294 3E 54              6657 	ld	a,#0x54
   2296 FD 21r00s41        6658 	ld	iy,#_vbicount
   229A FD 96 00           6659 	sub	a,0 (iy)
   229D 3E 00              6660 	ld	a,#0x00
   229F FD 21r00s41        6661 	ld	iy,#_vbicount
   22A3 FD 9E 01           6662 	sbc	a,1 (iy)
   22A6 F2r08s23           6663 	jp	P,00106$
   22A9 3E B6              6664 	ld	a,#0xB6
   22AB FD 21rACs41        6665 	ld	iy,#_onceclear
   22AF FD 96 00           6666 	sub	a,0 (iy)
   22B2 D2r08s23           6667 	jp	NC,00106$
                           6668 ;demo.c:1067: cmd.size_x = 4;
   22B5 21r0Cs41           6669 	ld	hl, #_cmd + 8
   22B8 36 04              6670 	ld	(hl),#0x04
   22BA 23                 6671 	inc	hl
   22BB 36 00              6672 	ld	(hl),#0x00
                           6673 ;demo.c:1068: cmd.size_y = 116;
   22BD 21r0Es41           6674 	ld	hl, #_cmd + 10
   22C0 36 74              6675 	ld	(hl),#0x74
   22C2 23                 6676 	inc	hl
   22C3 36 00              6677 	ld	(hl),#0x00
                           6678 ;demo.c:1069: cmd.data = 0;
                           6679 ;demo.c:1070: cmd.argument = 0x00;
   22C5 3E 00              6680 	ld	a,#0x00
   22C7 32r10s41           6681 	ld	(#_cmd + 12),a
   22CA 32r11s41           6682 	ld	(#_cmd + 13),a
                           6683 ;demo.c:1071: cmd.command = 0xd0; 
   22CD 01r12s41           6684 	ld	bc,#_cmd + 14
   22D0 3E D0              6685 	ld	a,#0xD0
   22D2 02                 6686 	ld	(bc),a
                           6687 ;demo.c:1072: cmd.source_x = 20;
   22D3 21r04s41           6688 	ld	hl,#_cmd
   22D6 36 14              6689 	ld	(hl),#0x14
   22D8 23                 6690 	inc	hl
   22D9 36 00              6691 	ld	(hl),#0x00
                           6692 ;demo.c:1073: cmd.source_y = 0;
   22DB 21r06s41           6693 	ld	hl, #_cmd + 2
   22DE 36 00              6694 	ld	(hl),#0x00
   22E0 23                 6695 	inc	hl
   22E1 36 00              6696 	ld	(hl),#0x00
                           6697 ;demo.c:1074: cmd.dest_x = onceclear;
   22E3 01r08s41           6698 	ld	bc,#_cmd + 4
   22E6 21rACs41           6699 	ld	hl,#_onceclear + 0
   22E9 5E                 6700 	ld	e,(hl)
   22EA 16 00              6701 	ld	d,#0x00
   22EC 69                 6702 	ld	l,c
   22ED 60                 6703 	ld	h,b
   22EE 73                 6704 	ld	(hl),e
   22EF 23                 6705 	inc	hl
   22F0 72                 6706 	ld	(hl),d
                           6707 ;demo.c:1075: cmd.dest_y = 68;
   22F1 21r0As41           6708 	ld	hl, #_cmd + 6
   22F4 36 44              6709 	ld	(hl),#0x44
   22F6 23                 6710 	inc	hl
   22F7 36 00              6711 	ld	(hl),#0x00
                           6712 ;demo.c:1076: vdp_copier(&cmd);
   22F9 21r04s41           6713 	ld	hl,#_cmd
   22FC E5                 6714 	push	hl
   22FD CDr00s00           6715 	call	_vdp_copier
   2300 F1                 6716 	pop	af
                           6717 ;demo.c:1077: onceclear-=4;
   2301 21rACs41           6718 	ld	hl,#_onceclear
   2304 7E                 6719 	ld	a,(hl)
   2305 C6 FC              6720 	add	a,#0xFC
   2307 77                 6721 	ld	(hl),a
   2308                    6722 00106$:
                           6723 ;demo.c:1081: powa+=2;
   2308 21rAAs41           6724 	ld	hl,#_powa
   230B 7E                 6725 	ld	a,(hl)
   230C C6 02              6726 	add	a,#0x02
   230E 23                 6727 	inc	hl
   230F 2B                 6728 	dec	hl
   2310 C5                 6729 	push	bc
   2311 4F                 6730 	ld	c, a
   2312 23                 6731 	inc	hl
   2313 7E                 6732 	ld	a, (hl)
   2314 47                 6733 	ld	b, a
   2315 79                 6734 	ld	a, c
   2316 2B                 6735 	dec	hl
   2317 77                 6736 	ld	(hl), a
   2318 78                 6737 	ld	a, b
   2319 C1                 6738 	pop	bc
   231A CE 00              6739 	adc	a,#0x00
   231C 23                 6740 	inc	hl
   231D 77                 6741 	ld	(hl),a
                           6742 ;demo.c:1082: powatick = 0;
   231E 21rA8s41           6743 	ld	hl,#_powatick + 0
   2321 36 00              6744 	ld	(hl), #0x00
   2323 21rA9s41           6745 	ld	hl,#_powatick + 1
   2326 36 00              6746 	ld	(hl), #0x00
   2328 DD F9              6747 	ld	sp,ix
   232A DD E1              6748 	pop	ix
   232C C9                 6749 	ret
   232D                    6750 _logoeffu_end::
                           6751 ;demo.c:1089: void do_quit() {
                           6752 ;	---------------------------------
                           6753 ; Function do_quit
                           6754 ; ---------------------------------
   232D                    6755 _do_quit_start::
   232D                    6756 _do_quit:
                           6757 ;demo.c:1090: waitVB();
   232D 76                 6758 		halt 
                           6759 ;demo.c:1091: uninstall_isr();
   232E CDr00s00           6760 	call	_uninstall_isr
                           6761 ;demo.c:1092: PLY_Stop();
   2331 CDr00s00           6762 	call	_PLY_Stop
                           6763 ;demo.c:1093: PLY_SendRegisters();
   2334 CDr00s00           6764 	call	_PLY_SendRegisters
                           6765 ;demo.c:1095: screen(0);
   2337 3E 00              6766 	ld	a,#0x00
   2339 F5                 6767 	push	af
   233A 33                 6768 	inc	sp
   233B CDr00s00           6769 	call	_screen
   233E 33                 6770 	inc	sp
                           6771 ;demo.c:1097: puts("demo quit\r\n\r\n");
   233F 21r50s23           6772 	ld	hl,#__str_14
   2342 E5                 6773 	push	hl
   2343 CDr00s00           6774 	call	_puts
   2346 F1                 6775 	pop	af
                           6776 ;demo.c:1099: exit(0);	
   2347 3E 00              6777 	ld	a,#0x00
   2349 F5                 6778 	push	af
   234A 33                 6779 	inc	sp
   234B CDr00s00           6780 	call	_exit
   234E 33                 6781 	inc	sp
   234F C9                 6782 	ret
   2350                    6783 _do_quit_end::
   2350                    6784 __str_14:
   2350 64 65 6D 6F 20 71  6785 	.ascii "demo quit"
        75 69 74
   2359 0D                 6786 	.db 0x0D
   235A 0A                 6787 	.db 0x0A
   235B 0D                 6788 	.db 0x0D
   235C 0A                 6789 	.db 0x0A
   235D 00                 6790 	.db 0x00
                           6791 ;demo.c:1123: void main() {
                           6792 ;	---------------------------------
                           6793 ; Function main
                           6794 ; ---------------------------------
   235E                    6795 _main_start::
   235E                    6796 _main:
   235E DD E5              6797 	push	ix
   2360 DD 21 00 00        6798 	ld	ix,#0
   2364 DD 39              6799 	add	ix,sp
   2366 21 F9 FF           6800 	ld	hl,#-7
   2369 39                 6801 	add	hl,sp
   236A F9                 6802 	ld	sp,hl
                           6803 ;demo.c:1124: unsigned char quit=0;
   236B DD 36 FF 00        6804 	ld	-1 (ix),#0x00
                           6805 ;demo.c:1130: spindown();
   236F CDr00s00           6806 	call	_spindown
                           6807 ;demo.c:1132: puts("demo init\r\n\r\n");
   2372 21rBCs27           6808 	ld	hl,#__str_15
   2375 E5                 6809 	push	hl
   2376 CDr00s00           6810 	call	_puts
   2379 F1                 6811 	pop	af
                           6812 ;demo.c:1134: for (y = 0; y < 2; y++) {
   237A DD 36 FB 00        6813 	ld	-5 (ix),#0x00
   237E DD 36 FC 00        6814 	ld	-4 (ix),#0x00
   2382                    6815 00118$:
   2382 DD 7E FB           6816 	ld	a,-5 (ix)
   2385 D6 02              6817 	sub	a,#0x02
   2387 DD 7E FC           6818 	ld	a,-4 (ix)
   238A DE 00              6819 	sbc	a,#0x00
   238C F2r0Es24           6820 	jp	P,00121$
                           6821 ;demo.c:1135: for (x = 0; x < 16; x++) {
   238F DD 4E FB           6822 	ld	c,-5 (ix)
   2392 DD 46 FC           6823 	ld	b,-4 (ix)
   2395 CB 21              6824 	sla	c
   2397 CB 10              6825 	rl	b
   2399 CB 21              6826 	sla	c
   239B CB 10              6827 	rl	b
   239D CB 21              6828 	sla	c
   239F CB 10              6829 	rl	b
   23A1 CB 21              6830 	sla	c
   23A3 CB 10              6831 	rl	b
   23A5 21 81 03           6832 	ld	hl,#0x0381
   23A8 09                 6833 	add	hl,bc
   23A9 DD 75 F9           6834 	ld	-7 (ix),l
   23AC DD 74 FA           6835 	ld	-6 (ix),h
   23AF DD 36 FD 00        6836 	ld	-3 (ix),#0x00
   23B3 DD 36 FE 00        6837 	ld	-2 (ix),#0x00
   23B7                    6838 00114$:
   23B7 DD 7E FD           6839 	ld	a,-3 (ix)
   23BA D6 10              6840 	sub	a,#0x10
   23BC DD 7E FE           6841 	ld	a,-2 (ix)
   23BF DE 00              6842 	sbc	a,#0x00
   23C1 F2r03s24           6843 	jp	P,00120$
                           6844 ;demo.c:1136: tri_lookup_x[(y*16)+x] = x * 16;
   23C4 DD 7E FB           6845 	ld	a,-5 (ix)
   23C7 07                 6846 	rlca
   23C8 07                 6847 	rlca
   23C9 07                 6848 	rlca
   23CA 07                 6849 	rlca
   23CB E6 F0              6850 	and	a,#0xF0
   23CD 5F                 6851 	ld	e,a
   23CE DD 56 FD           6852 	ld	d,-3 (ix)
   23D1 7B                 6853 	ld	a,e
   23D2 82                 6854 	add	a,d
   23D3 5F                 6855 	ld	e, a
   23D4 C6r00              6856 	add	a,#<_tri_lookup_x
   23D6 4F                 6857 	ld	c,a
   23D7 3Es01              6858 	ld	a,#>_tri_lookup_x
   23D9 CE 00              6859 	adc	a,#0x00
   23DB 47                 6860 	ld	b,a
   23DC 7A                 6861 	ld	a,d
   23DD 07                 6862 	rlca
   23DE 07                 6863 	rlca
   23DF 07                 6864 	rlca
   23E0 07                 6865 	rlca
   23E1 E6 F0              6866 	and	a,#0xF0
   23E3 02                 6867 	ld	(bc),a
                           6868 ;demo.c:1137: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   23E4 CB 23              6869 	sla	e
   23E6 3Er20              6870 	ld	a,#<_tri_lookup_y
   23E8 83                 6871 	add	a,e
   23E9 6F                 6872 	ld	l,a
   23EA 3Es01              6873 	ld	a,#>_tri_lookup_y
   23EC CE 00              6874 	adc	a,#0x00
   23EE 67                 6875 	ld	h,a
   23EF DD 7E F9           6876 	ld	a,-7 (ix)
   23F2 77                 6877 	ld	(hl),a
   23F3 23                 6878 	inc	hl
   23F4 DD 7E FA           6879 	ld	a,-6 (ix)
   23F7 77                 6880 	ld	(hl),a
                           6881 ;demo.c:1135: for (x = 0; x < 16; x++) {
   23F8 DD 34 FD           6882 	inc	-3 (ix)
   23FB 20 03              6883 	jr	NZ,00139$
   23FD DD 34 FE           6884 	inc	-2 (ix)
   2400                    6885 00139$:
   2400 C3rB7s23           6886 	jp	00114$
   2403                    6887 00120$:
                           6888 ;demo.c:1134: for (y = 0; y < 2; y++) {
   2403 DD 34 FB           6889 	inc	-5 (ix)
   2406 20 03              6890 	jr	NZ,00140$
   2408 DD 34 FC           6891 	inc	-4 (ix)
   240B                    6892 00140$:
   240B C3r82s23           6893 	jp	00118$
   240E                    6894 00121$:
                           6895 ;demo.c:1141: puts("music init...");
   240E 21rCAs27           6896 	ld	hl,#__str_16
   2411 E5                 6897 	push	hl
   2412 CDr00s00           6898 	call	_puts
   2415 F1                 6899 	pop	af
                           6900 ;demo.c:1143: PLY_SongPtr = (char *)0x0103;
   2416 21r00s00           6901 	ld	hl,#_PLY_SongPtr + 0
   2419 36 03              6902 	ld	(hl), #0x03
   241B 21r01s00           6903 	ld	hl,#_PLY_SongPtr + 1
   241E 36 01              6904 	ld	(hl), #0x01
                           6905 ;demo.c:1144: PLY_Init();
   2420 CDr00s00           6906 	call	_PLY_Init
                           6907 ;demo.c:1145: puts("done.\r\n");
   2423 21rD8s27           6908 	ld	hl,#__str_17
   2426 E5                 6909 	push	hl
   2427 CDr00s00           6910 	call	_puts
   242A F1                 6911 	pop	af
                           6912 ;demo.c:1147: puts("detecting vdp type...\r\n\r\n");
   242B 21rE0s27           6913 	ld	hl,#__str_18
   242E E5                 6914 	push	hl
   242F CDr00s00           6915 	call	_puts
   2432 F1                 6916 	pop	af
                           6917 ;demo.c:1148: if(isvdp2())
   2433 CDr00s00           6918 	call	_isvdp2
   2436 AF                 6919 	xor	a,a
   2437 B5                 6920 	or	a,l
   2438 28 0A              6921 	jr	Z,00102$
                           6922 ;demo.c:1150: puts("vdp2 found! setting 50hz...\r\n\r\n");
   243A 21rFAs27           6923 	ld	hl,#__str_19
   243D E5                 6924 	push	hl
   243E CDr00s00           6925 	call	_puts
   2441 F1                 6926 	pop	af
   2442 18 0B              6927 	jr	00103$
   2444                    6928 00102$:
                           6929 ;demo.c:1153: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   2444 21r1As28           6930 	ld	hl,#__str_20
   2447 E5                 6931 	push	hl
   2448 CDr00s00           6932 	call	_puts
   244B F1                 6933 	pop	af
                           6934 ;demo.c:1154: do_quit();
   244C CDr2Ds23           6935 	call	_do_quit
   244F                    6936 00103$:
                           6937 ;demo.c:1157: pal_load("TWISTER PL5",32,1);
   244F 21 01 00           6938 	ld	hl,#0x0001
   2452 E5                 6939 	push	hl
   2453 3E 20              6940 	ld	a,#0x20
   2455 F5                 6941 	push	af
   2456 33                 6942 	inc	sp
   2457 21r61s28           6943 	ld	hl,#__str_21
   245A E5                 6944 	push	hl
   245B CDrA3s07           6945 	call	_pal_load
   245E F1                 6946 	pop	af
   245F F1                 6947 	pop	af
   2460 33                 6948 	inc	sp
                           6949 ;demo.c:1158: memcpy(twister_palette, cur_palette, 32);
   2461 21 20 00           6950 	ld	hl,#0x0020
   2464 E5                 6951 	push	hl
   2465 21r60s40           6952 	ld	hl,#_cur_palette
   2468 E5                 6953 	push	hl
   2469 21rA0s40           6954 	ld	hl,#_twister_palette
   246C E5                 6955 	push	hl
   246D CDr00s00           6956 	call	_memcpy
   2470 F1                 6957 	pop	af
   2471 F1                 6958 	pop	af
   2472 F1                 6959 	pop	af
                           6960 ;demo.c:1159: pal_load("LF      PL5",32,1);
   2473 21 01 00           6961 	ld	hl,#0x0001
   2476 E5                 6962 	push	hl
   2477 3E 20              6963 	ld	a,#0x20
   2479 F5                 6964 	push	af
   247A 33                 6965 	inc	sp
   247B 21r6Ds28           6966 	ld	hl,#__str_22
   247E E5                 6967 	push	hl
   247F CDrA3s07           6968 	call	_pal_load
   2482 F1                 6969 	pop	af
   2483 F1                 6970 	pop	af
   2484 33                 6971 	inc	sp
                           6972 ;demo.c:1160: memcpy(tf_palette, cur_palette, 32);
   2485 21 20 00           6973 	ld	hl,#0x0020
   2488 E5                 6974 	push	hl
   2489 21r60s40           6975 	ld	hl,#_cur_palette
   248C E5                 6976 	push	hl
   248D 21rC0s40           6977 	ld	hl,#_tf_palette
   2490 E5                 6978 	push	hl
   2491 CDr00s00           6979 	call	_memcpy
   2494 F1                 6980 	pop	af
   2495 F1                 6981 	pop	af
   2496 F1                 6982 	pop	af
                           6983 ;demo.c:1161: pal_load("BOXES   PL5",32,1);
   2497 21 01 00           6984 	ld	hl,#0x0001
   249A E5                 6985 	push	hl
   249B 3E 20              6986 	ld	a,#0x20
   249D F5                 6987 	push	af
   249E 33                 6988 	inc	sp
   249F 21r79s28           6989 	ld	hl,#__str_23
   24A2 E5                 6990 	push	hl
   24A3 CDrA3s07           6991 	call	_pal_load
   24A6 F1                 6992 	pop	af
   24A7 F1                 6993 	pop	af
   24A8 33                 6994 	inc	sp
                           6995 ;demo.c:1162: memcpy(boxes_palette, cur_palette, 32);
   24A9 21 20 00           6996 	ld	hl,#0x0020
   24AC E5                 6997 	push	hl
   24AD 21r60s40           6998 	ld	hl,#_cur_palette
   24B0 E5                 6999 	push	hl
   24B1 21rE0s40           7000 	ld	hl,#_boxes_palette
   24B4 E5                 7001 	push	hl
   24B5 CDr00s00           7002 	call	_memcpy
   24B8 F1                 7003 	pop	af
   24B9 F1                 7004 	pop	af
   24BA F1                 7005 	pop	af
                           7006 ;demo.c:1163: pal_load("BULBS   PL5",32,1);
   24BB 21 01 00           7007 	ld	hl,#0x0001
   24BE E5                 7008 	push	hl
   24BF 3E 20              7009 	ld	a,#0x20
   24C1 F5                 7010 	push	af
   24C2 33                 7011 	inc	sp
   24C3 21r85s28           7012 	ld	hl,#__str_24
   24C6 E5                 7013 	push	hl
   24C7 CDrA3s07           7014 	call	_pal_load
   24CA F1                 7015 	pop	af
   24CB F1                 7016 	pop	af
   24CC 33                 7017 	inc	sp
                           7018 ;demo.c:1165: scratch_clear();
   24CD CDr90s07           7019 	call	_scratch_clear
                           7020 ;demo.c:1166: vdp_load_palette(scratch);
   24D0 21rE0s3F           7021 	ld	hl,#_scratch
   24D3 E5                 7022 	push	hl
   24D4 CDr00s00           7023 	call	_vdp_load_palette
   24D7 F1                 7024 	pop	af
                           7025 ;demo.c:1168: vdp_set_screen5();
   24D8 CDr00s00           7026 	call	_vdp_set_screen5
                           7027 ;demo.c:1170: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   24DB 21 00 00           7028 	ld	hl,#0x0000
   24DE E5                 7029 	push	hl
   24DF 2E 01              7030 	ld	l, #0x01
   24E1 E5                 7031 	push	hl
   24E2 2E 00              7032 	ld	l, #0x00
   24E4 E5                 7033 	push	hl
   24E5 21 7F 09           7034 	ld	hl,#0x097F
   24E8 E5                 7035 	push	hl
   24E9 21r91s28           7036 	ld	hl,#__str_25
   24EC E5                 7037 	push	hl
   24ED CDr99s09           7038 	call	_pck_load
   24F0 FD 21 0A 00        7039 	ld	iy,#0x000A
   24F4 FD 39              7040 	add	iy,sp
   24F6 FD F9              7041 	ld	sp,iy
                           7042 ;demo.c:1172: cmd.size_x = 256;
   24F8 21r0Cs41           7043 	ld	hl, #_cmd + 8
   24FB 36 00              7044 	ld	(hl),#0x00
   24FD 23                 7045 	inc	hl
   24FE 36 01              7046 	ld	(hl),#0x01
                           7047 ;demo.c:1173: cmd.size_y = 212;
   2500 21r0Es41           7048 	ld	hl, #_cmd + 10
   2503 36 D4              7049 	ld	(hl),#0xD4
   2505 23                 7050 	inc	hl
   2506 36 00              7051 	ld	(hl),#0x00
                           7052 ;demo.c:1174: cmd.data = 0;
                           7053 ;demo.c:1175: cmd.argument = 0x00;
   2508 3E 00              7054 	ld	a,#0x00
   250A 32r10s41           7055 	ld	(#_cmd + 12),a
   250D 32r11s41           7056 	ld	(#_cmd + 13),a
                           7057 ;demo.c:1176: cmd.command = 0xd0; 
   2510 01r12s41           7058 	ld	bc,#_cmd + 14
   2513 3E D0              7059 	ld	a,#0xD0
   2515 02                 7060 	ld	(bc),a
                           7061 ;demo.c:1177: cmd.source_x = 0;
   2516 21r04s41           7062 	ld	hl,#_cmd
   2519 36 00              7063 	ld	(hl),#0x00
   251B 23                 7064 	inc	hl
   251C 36 00              7065 	ld	(hl),#0x00
                           7066 ;demo.c:1178: cmd.source_y = 0;
   251E 21r06s41           7067 	ld	hl, #_cmd + 2
   2521 36 00              7068 	ld	(hl),#0x00
   2523 23                 7069 	inc	hl
   2524 36 00              7070 	ld	(hl),#0x00
                           7071 ;demo.c:1179: cmd.dest_x = 0;
   2526 21r08s41           7072 	ld	hl, #_cmd + 4
   2529 36 00              7073 	ld	(hl),#0x00
   252B 23                 7074 	inc	hl
   252C 36 00              7075 	ld	(hl),#0x00
                           7076 ;demo.c:1180: cmd.dest_y = 256;
   252E 21r0As41           7077 	ld	hl, #_cmd + 6
   2531 36 00              7078 	ld	(hl),#0x00
   2533 23                 7079 	inc	hl
   2534 36 01              7080 	ld	(hl),#0x01
                           7081 ;demo.c:1181: vdp_copier(&cmd);
   2536 21r04s41           7082 	ld	hl,#_cmd
   2539 E5                 7083 	push	hl
   253A CDr00s00           7084 	call	_vdp_copier
   253D F1                 7085 	pop	af
                           7086 ;demo.c:1183: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   253E 21 00 00           7087 	ld	hl,#0x0000
   2541 E5                 7088 	push	hl
   2542 2E 01              7089 	ld	l, #0x01
   2544 E5                 7090 	push	hl
   2545 2E 00              7091 	ld	l, #0x00
   2547 E5                 7092 	push	hl
   2548 21 C0 0F           7093 	ld	hl,#0x0FC0
   254B E5                 7094 	push	hl
   254C 21r9Ds28           7095 	ld	hl,#__str_26
   254F E5                 7096 	push	hl
   2550 CDr99s09           7097 	call	_pck_load
   2553 FD 21 0A 00        7098 	ld	iy,#0x000A
   2557 FD 39              7099 	add	iy,sp
   2559 FD F9              7100 	ld	sp,iy
                           7101 ;demo.c:1185: cmd.size_x = 256;
   255B 21r0Cs41           7102 	ld	hl, #_cmd + 8
   255E 36 00              7103 	ld	(hl),#0x00
   2560 23                 7104 	inc	hl
   2561 36 01              7105 	ld	(hl),#0x01
                           7106 ;demo.c:1186: cmd.size_y = 212;
   2563 21r0Es41           7107 	ld	hl, #_cmd + 10
   2566 36 D4              7108 	ld	(hl),#0xD4
   2568 23                 7109 	inc	hl
   2569 36 00              7110 	ld	(hl),#0x00
                           7111 ;demo.c:1187: cmd.data = 0;
                           7112 ;demo.c:1188: cmd.argument = 0x00;
   256B 3E 00              7113 	ld	a,#0x00
   256D 32r10s41           7114 	ld	(#_cmd + 12),a
   2570 32r11s41           7115 	ld	(#_cmd + 13),a
                           7116 ;demo.c:1189: cmd.command = 0xd0; 
   2573 01r12s41           7117 	ld	bc,#_cmd + 14
   2576 3E D0              7118 	ld	a,#0xD0
   2578 02                 7119 	ld	(bc),a
                           7120 ;demo.c:1190: cmd.source_x = 0;
   2579 21r04s41           7121 	ld	hl,#_cmd
   257C 36 00              7122 	ld	(hl),#0x00
   257E 23                 7123 	inc	hl
   257F 36 00              7124 	ld	(hl),#0x00
                           7125 ;demo.c:1191: cmd.source_y = 0;
   2581 21r06s41           7126 	ld	hl, #_cmd + 2
   2584 36 00              7127 	ld	(hl),#0x00
   2586 23                 7128 	inc	hl
   2587 36 00              7129 	ld	(hl),#0x00
                           7130 ;demo.c:1192: cmd.dest_x = 0;
   2589 21r08s41           7131 	ld	hl, #_cmd + 4
   258C 36 00              7132 	ld	(hl),#0x00
   258E 23                 7133 	inc	hl
   258F 36 00              7134 	ld	(hl),#0x00
                           7135 ;demo.c:1193: cmd.dest_y = 512;
   2591 21r0As41           7136 	ld	hl, #_cmd + 6
   2594 36 00              7137 	ld	(hl),#0x00
   2596 23                 7138 	inc	hl
   2597 36 02              7139 	ld	(hl),#0x02
                           7140 ;demo.c:1194: vdp_copier(&cmd);
   2599 21r04s41           7141 	ld	hl,#_cmd
   259C E5                 7142 	push	hl
   259D CDr00s00           7143 	call	_vdp_copier
   25A0 F1                 7144 	pop	af
                           7145 ;demo.c:1197: pck_load("BOXES   PCK",2258,0x0000,VRAM_0,0);
   25A1 21 00 00           7146 	ld	hl,#0x0000
   25A4 E5                 7147 	push	hl
   25A5 2E 01              7148 	ld	l, #0x01
   25A7 E5                 7149 	push	hl
   25A8 2E 00              7150 	ld	l, #0x00
   25AA E5                 7151 	push	hl
   25AB 21 D2 08           7152 	ld	hl,#0x08D2
   25AE E5                 7153 	push	hl
   25AF 21rA9s28           7154 	ld	hl,#__str_27
   25B2 E5                 7155 	push	hl
   25B3 CDr99s09           7156 	call	_pck_load
   25B6 FD 21 0A 00        7157 	ld	iy,#0x000A
   25BA FD 39              7158 	add	iy,sp
   25BC FD F9              7159 	ld	sp,iy
                           7160 ;demo.c:1198: cmd.size_x = 256;
   25BE 21r0Cs41           7161 	ld	hl, #_cmd + 8
   25C1 36 00              7162 	ld	(hl),#0x00
   25C3 23                 7163 	inc	hl
   25C4 36 01              7164 	ld	(hl),#0x01
                           7165 ;demo.c:1199: cmd.size_y = 212;
   25C6 21r0Es41           7166 	ld	hl, #_cmd + 10
   25C9 36 D4              7167 	ld	(hl),#0xD4
   25CB 23                 7168 	inc	hl
   25CC 36 00              7169 	ld	(hl),#0x00
                           7170 ;demo.c:1200: cmd.data = 0;
                           7171 ;demo.c:1201: cmd.argument = 0x00;
   25CE 3E 00              7172 	ld	a,#0x00
   25D0 32r10s41           7173 	ld	(#_cmd + 12),a
   25D3 32r11s41           7174 	ld	(#_cmd + 13),a
                           7175 ;demo.c:1202: cmd.command = 0xd0; 
   25D6 01r12s41           7176 	ld	bc,#_cmd + 14
   25D9 3E D0              7177 	ld	a,#0xD0
   25DB 02                 7178 	ld	(bc),a
                           7179 ;demo.c:1203: cmd.source_x = 0;
   25DC 21r04s41           7180 	ld	hl,#_cmd
   25DF 36 00              7181 	ld	(hl),#0x00
   25E1 23                 7182 	inc	hl
   25E2 36 00              7183 	ld	(hl),#0x00
                           7184 ;demo.c:1204: cmd.source_y = 0;
   25E4 21r06s41           7185 	ld	hl, #_cmd + 2
   25E7 36 00              7186 	ld	(hl),#0x00
   25E9 23                 7187 	inc	hl
   25EA 36 00              7188 	ld	(hl),#0x00
                           7189 ;demo.c:1205: cmd.dest_x = 0;
   25EC 21r08s41           7190 	ld	hl, #_cmd + 4
   25EF 36 00              7191 	ld	(hl),#0x00
   25F1 23                 7192 	inc	hl
   25F2 36 00              7193 	ld	(hl),#0x00
                           7194 ;demo.c:1206: cmd.dest_y = 768;
   25F4 21r0As41           7195 	ld	hl, #_cmd + 6
   25F7 36 00              7196 	ld	(hl),#0x00
   25F9 23                 7197 	inc	hl
   25FA 36 03              7198 	ld	(hl),#0x03
                           7199 ;demo.c:1207: vdp_copier(&cmd);
   25FC 21r04s41           7200 	ld	hl,#_cmd
   25FF E5                 7201 	push	hl
   2600 CDr00s00           7202 	call	_vdp_copier
   2603 F1                 7203 	pop	af
                           7204 ;demo.c:1209: scratch_clear();
   2604 CDr90s07           7205 	call	_scratch_clear
                           7206 ;demo.c:1210: vdp_load_palette(scratch);
   2607 21rE0s3F           7207 	ld	hl,#_scratch
   260A E5                 7208 	push	hl
   260B CDr00s00           7209 	call	_vdp_load_palette
   260E F1                 7210 	pop	af
                           7211 ;demo.c:1212: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   260F 21 00 00           7212 	ld	hl,#0x0000
   2612 E5                 7213 	push	hl
   2613 2E 01              7214 	ld	l, #0x01
   2615 E5                 7215 	push	hl
   2616 2E 00              7216 	ld	l, #0x00
   2618 E5                 7217 	push	hl
   2619 21 6A 08           7218 	ld	hl,#0x086A
   261C E5                 7219 	push	hl
   261D 21rB5s28           7220 	ld	hl,#__str_28
   2620 E5                 7221 	push	hl
   2621 CDr99s09           7222 	call	_pck_load
   2624 FD 21 0A 00        7223 	ld	iy,#0x000A
   2628 FD 39              7224 	add	iy,sp
   262A FD F9              7225 	ld	sp,iy
                           7226 ;demo.c:1214: cmd.size_x = 108;
   262C 21r0Cs41           7227 	ld	hl, #_cmd + 8
   262F 36 6C              7228 	ld	(hl),#0x6C
   2631 23                 7229 	inc	hl
   2632 36 00              7230 	ld	(hl),#0x00
                           7231 ;demo.c:1215: cmd.size_y = 116;
   2634 21r0Es41           7232 	ld	hl, #_cmd + 10
   2637 36 74              7233 	ld	(hl),#0x74
   2639 23                 7234 	inc	hl
   263A 36 00              7235 	ld	(hl),#0x00
                           7236 ;demo.c:1216: cmd.data = 0;
                           7237 ;demo.c:1217: cmd.argument = 0x00;
   263C 3E 00              7238 	ld	a,#0x00
   263E 32r10s41           7239 	ld	(#_cmd + 12),a
   2641 32r11s41           7240 	ld	(#_cmd + 13),a
                           7241 ;demo.c:1218: cmd.command = 0xd0; 
   2644 01r12s41           7242 	ld	bc,#_cmd + 14
   2647 3E D0              7243 	ld	a,#0xD0
   2649 02                 7244 	ld	(bc),a
                           7245 ;demo.c:1219: cmd.source_x = 75;
   264A 21r04s41           7246 	ld	hl,#_cmd
   264D 36 4B              7247 	ld	(hl),#0x4B
   264F 23                 7248 	inc	hl
   2650 36 00              7249 	ld	(hl),#0x00
                           7250 ;demo.c:1220: cmd.source_y = 50;
   2652 21r06s41           7251 	ld	hl, #_cmd + 2
   2655 36 32              7252 	ld	(hl),#0x32
   2657 23                 7253 	inc	hl
   2658 36 00              7254 	ld	(hl),#0x00
                           7255 ;demo.c:1221: cmd.dest_x = 75;
   265A 21r08s41           7256 	ld	hl, #_cmd + 4
   265D 36 4B              7257 	ld	(hl),#0x4B
   265F 23                 7258 	inc	hl
   2660 36 00              7259 	ld	(hl),#0x00
                           7260 ;demo.c:1222: cmd.dest_y = 256;
   2662 21r0As41           7261 	ld	hl, #_cmd + 6
   2665 36 00              7262 	ld	(hl),#0x00
   2667 23                 7263 	inc	hl
   2668 36 01              7264 	ld	(hl),#0x01
                           7265 ;demo.c:1223: vdp_copier(&cmd);
   266A 21r04s41           7266 	ld	hl,#_cmd
   266D E5                 7267 	push	hl
   266E CDr00s00           7268 	call	_vdp_copier
   2671 F1                 7269 	pop	af
                           7270 ;demo.c:1225: cmd.size_x = 108;
   2672 21r0Cs41           7271 	ld	hl, #_cmd + 8
   2675 36 6C              7272 	ld	(hl),#0x6C
   2677 23                 7273 	inc	hl
   2678 36 00              7274 	ld	(hl),#0x00
                           7275 ;demo.c:1226: cmd.size_y = 60;
   267A 21r0Es41           7276 	ld	hl, #_cmd + 10
   267D 36 3C              7277 	ld	(hl),#0x3C
   267F 23                 7278 	inc	hl
   2680 36 00              7279 	ld	(hl),#0x00
                           7280 ;demo.c:1227: cmd.data = 0;
                           7281 ;demo.c:1228: cmd.argument = 0x00;
   2682 3E 00              7282 	ld	a,#0x00
   2684 32r10s41           7283 	ld	(#_cmd + 12),a
   2687 32r11s41           7284 	ld	(#_cmd + 13),a
                           7285 ;demo.c:1229: cmd.command = 0xd0; 
   268A 01r12s41           7286 	ld	bc,#_cmd + 14
   268D 3E D0              7287 	ld	a,#0xD0
   268F 02                 7288 	ld	(bc),a
                           7289 ;demo.c:1230: cmd.source_x = 75;
   2690 21r04s41           7290 	ld	hl,#_cmd
   2693 36 4B              7291 	ld	(hl),#0x4B
   2695 23                 7292 	inc	hl
   2696 36 00              7293 	ld	(hl),#0x00
                           7294 ;demo.c:1231: cmd.source_y = 256+110;
   2698 21r06s41           7295 	ld	hl, #_cmd + 2
   269B 36 6E              7296 	ld	(hl),#0x6E
   269D 23                 7297 	inc	hl
   269E 36 01              7298 	ld	(hl),#0x01
                           7299 ;demo.c:1232: cmd.dest_x = 75;
   26A0 21r08s41           7300 	ld	hl, #_cmd + 4
   26A3 36 4B              7301 	ld	(hl),#0x4B
   26A5 23                 7302 	inc	hl
   26A6 36 00              7303 	ld	(hl),#0x00
                           7304 ;demo.c:1233: cmd.dest_y = 40;
   26A8 21r0As41           7305 	ld	hl, #_cmd + 6
   26AB 36 28              7306 	ld	(hl),#0x28
   26AD 23                 7307 	inc	hl
   26AE 36 00              7308 	ld	(hl),#0x00
                           7309 ;demo.c:1234: vdp_copier(&cmd);
   26B0 21r04s41           7310 	ld	hl,#_cmd
   26B3 E5                 7311 	push	hl
   26B4 CDr00s00           7312 	call	_vdp_copier
   26B7 F1                 7313 	pop	af
                           7314 ;demo.c:1235: cmd.dest_x = 75;
   26B8 21r08s41           7315 	ld	hl, #_cmd + 4
   26BB 36 4B              7316 	ld	(hl),#0x4B
   26BD 23                 7317 	inc	hl
   26BE 36 00              7318 	ld	(hl),#0x00
                           7319 ;demo.c:1236: cmd.dest_y = 100;
   26C0 21r0As41           7320 	ld	hl, #_cmd + 6
   26C3 36 64              7321 	ld	(hl),#0x64
   26C5 23                 7322 	inc	hl
   26C6 36 00              7323 	ld	(hl),#0x00
                           7324 ;demo.c:1237: vdp_copier(&cmd);
   26C8 21r04s41           7325 	ld	hl,#_cmd
   26CB E5                 7326 	push	hl
   26CC CDr00s00           7327 	call	_vdp_copier
   26CF F1                 7328 	pop	af
                           7329 ;demo.c:1239: pal_load("DSSLOGO PL5",32,0);
   26D0 21 00 00           7330 	ld	hl,#0x0000
   26D3 E5                 7331 	push	hl
   26D4 3E 20              7332 	ld	a,#0x20
   26D6 F5                 7333 	push	af
   26D7 33                 7334 	inc	sp
   26D8 21rC1s28           7335 	ld	hl,#__str_29
   26DB E5                 7336 	push	hl
   26DC CDrA3s07           7337 	call	_pal_load
   26DF F1                 7338 	pop	af
   26E0 F1                 7339 	pop	af
   26E1 33                 7340 	inc	sp
                           7341 ;demo.c:1241: scratch_clear();
   26E2 CDr90s07           7342 	call	_scratch_clear
                           7343 ;demo.c:1243: vdp_register(9,130); // 50hz,212
   26E5 21 09 82           7344 	ld	hl,#0x8209
   26E8 E5                 7345 	push	hl
   26E9 CDr00s00           7346 	call	_vdp_register
   26EC F1                 7347 	pop	af
                           7348 ;demo.c:1245: install_isr(my_isr);
   26ED 21rECs05           7349 	ld	hl,#_my_isr
   26F0 E5                 7350 	push	hl
   26F1 CDr00s00           7351 	call	_install_isr
   26F4 F1                 7352 	pop	af
                           7353 ;demo.c:1247: while (!quit) {
   26F5                    7354 00111$:
   26F5 AF                 7355 	xor	a,a
   26F6 DD B6 FF           7356 	or	a,-1 (ix)
   26F9 C2rB4s27           7357 	jp	NZ,00113$
                           7358 ;demo.c:1249: if (vbicount >= scenetimings[timeindex+1]) {
   26FC 21rAFs41           7359 	ld	hl,#_timeindex + 0
   26FF 4E                 7360 	ld	c,(hl)
   2700 0C                 7361 	inc	c
   2701 CB 21              7362 	sla	c
   2703 3ErBD              7363 	ld	a,#<_scenetimings
   2705 81                 7364 	add	a,c
   2706 6F                 7365 	ld	l,a
   2707 3Es41              7366 	ld	a,#>_scenetimings
   2709 CE 00              7367 	adc	a,#0x00
   270B 67                 7368 	ld	h,a
   270C 4E                 7369 	ld	c,(hl)
   270D 23                 7370 	inc	hl
   270E 46                 7371 	ld	b,(hl)
   270F 3Ar00s41           7372 	ld	a,(#_vbicount+0)
   2712 91                 7373 	sub	a,c
   2713 3Ar01s41           7374 	ld	a,(#_vbicount+1)
   2716 98                 7375 	sbc	a,b
   2717 FAr40s27           7376 	jp	M,00105$
                           7377 ;demo.c:1250: sceneindex++;
   271A FD 21rADs41        7378 	ld	iy,#_sceneindex
   271E FD 34 00           7379 	inc	0 (iy)
   2721 20 07              7380 	jr	NZ,00141$
   2723 FD 21rADs41        7381 	ld	iy,#_sceneindex
   2727 FD 34 01           7382 	inc	1 (iy)
   272A                    7383 00141$:
                           7384 ;demo.c:1251: timeindex+=2;
   272A 21rAFs41           7385 	ld	hl,#_timeindex
   272D 7E                 7386 	ld	a,(hl)
   272E C6 02              7387 	add	a,#0x02
   2730 23                 7388 	inc	hl
   2731 2B                 7389 	dec	hl
   2732 C5                 7390 	push	bc
   2733 4F                 7391 	ld	c, a
   2734 23                 7392 	inc	hl
   2735 7E                 7393 	ld	a, (hl)
   2736 47                 7394 	ld	b, a
   2737 79                 7395 	ld	a, c
   2738 2B                 7396 	dec	hl
   2739 77                 7397 	ld	(hl), a
   273A 78                 7398 	ld	a, b
   273B C1                 7399 	pop	bc
   273C CE 00              7400 	adc	a,#0x00
   273E 23                 7401 	inc	hl
   273F 77                 7402 	ld	(hl),a
   2740                    7403 00105$:
                           7404 ;demo.c:1254: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   2740 21rAFs41           7405 	ld	hl,#_timeindex + 0
   2743 4E                 7406 	ld	c,(hl)
   2744 21rB0s41           7407 	ld	hl,#_timeindex + 1
   2747 46                 7408 	ld	b,(hl)
   2748 CB 21              7409 	sla	c
   274A CB 10              7410 	rl	b
   274C 21rBDs41           7411 	ld	hl,#_scenetimings
   274F 09                 7412 	add	hl,bc
   2750 4E                 7413 	ld	c,(hl)
   2751 23                 7414 	inc	hl
   2752 46                 7415 	ld	b,(hl)
   2753 3Ar00s41           7416 	ld	a,(#_vbicount+0)
   2756 91                 7417 	sub	a,c
   2757 3Ar01s41           7418 	ld	a,(#_vbicount+1)
   275A 98                 7419 	sbc	a,b
   275B FArA0s27           7420 	jp	M,00107$
   275E 21rAFs41           7421 	ld	hl,#_timeindex + 0
   2761 4E                 7422 	ld	c,(hl)
   2762 0C                 7423 	inc	c
   2763 CB 21              7424 	sla	c
   2765 3ErBD              7425 	ld	a,#<_scenetimings
   2767 81                 7426 	add	a,c
   2768 6F                 7427 	ld	l,a
   2769 3Es41              7428 	ld	a,#>_scenetimings
   276B CE 00              7429 	adc	a,#0x00
   276D 67                 7430 	ld	h,a
   276E 4E                 7431 	ld	c,(hl)
   276F 23                 7432 	inc	hl
   2770 46                 7433 	ld	b,(hl)
   2771 3Ar00s41           7434 	ld	a,(#_vbicount+0)
   2774 91                 7435 	sub	a,c
   2775 FD 21r00s41        7436 	ld	iy,#_vbicount
   2779 FD 7E 01           7437 	ld	a,1 (iy)
   277C 98                 7438 	sbc	a,b
   277D F2rA0s27           7439 	jp	P,00107$
                           7440 ;demo.c:1255: waitVB();
   2780 76                 7441 		halt 
                           7442 ;demo.c:1256: scenepointers[sceneindex]();
   2781 21rADs41           7443 	ld	hl,#_sceneindex + 0
   2784 4E                 7444 	ld	c,(hl)
   2785 FD 21rADs41        7445 	ld	iy,#_sceneindex
   2789 FD 46 01           7446 	ld	b,1 (iy)
   278C CB 21              7447 	sla	c
   278E CB 10              7448 	rl	b
   2790 21rB1s41           7449 	ld	hl,#_scenepointers
   2793 09                 7450 	add	hl,bc
   2794 4E                 7451 	ld	c,(hl)
   2795 23                 7452 	inc	hl
   2796 46                 7453 	ld	b,(hl)
   2797 C5                 7454 	push	bc
   2798 21r9Fs27           7455 	ld	hl,#00146$
   279B E5                 7456 	push	hl
   279C 69                 7457 	ld	l,c
   279D 60                 7458 	ld	h,b
   279E E9                 7459 	jp	(hl)
   279F                    7460 00146$:
   279F C1                 7461 	pop	bc
   27A0                    7462 00107$:
                           7463 ;demo.c:1258: if(space())
   27A0 21 08 01           7464 	ld	hl,#0x0108
   27A3 E5                 7465 	push	hl
   27A4 CDr00s00           7466 	call	_ispressed
   27A7 F1                 7467 	pop	af
   27A8 AF                 7468 	xor	a,a
   27A9 B5                 7469 	or	a,l
   27AA CArF5s26           7470 	jp	Z,00111$
                           7471 ;demo.c:1259: quit=1;
   27AD DD 36 FF 01        7472 	ld	-1 (ix),#0x01
   27B1 C3rF5s26           7473 	jp	00111$
   27B4                    7474 00113$:
                           7475 ;demo.c:1262: do_quit();
   27B4 CDr2Ds23           7476 	call	_do_quit
   27B7 DD F9              7477 	ld	sp,ix
   27B9 DD E1              7478 	pop	ix
   27BB C9                 7479 	ret
   27BC                    7480 _main_end::
   27BC                    7481 __str_15:
   27BC 64 65 6D 6F 20 69  7482 	.ascii "demo init"
        6E 69 74
   27C5 0D                 7483 	.db 0x0D
   27C6 0A                 7484 	.db 0x0A
   27C7 0D                 7485 	.db 0x0D
   27C8 0A                 7486 	.db 0x0A
   27C9 00                 7487 	.db 0x00
   27CA                    7488 __str_16:
   27CA 6D 75 73 69 63 20  7489 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   27D7 00                 7490 	.db 0x00
   27D8                    7491 __str_17:
   27D8 64 6F 6E 65 2E     7492 	.ascii "done."
   27DD 0D                 7493 	.db 0x0D
   27DE 0A                 7494 	.db 0x0A
   27DF 00                 7495 	.db 0x00
   27E0                    7496 __str_18:
   27E0 64 65 74 65 63 74  7497 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   27F5 0D                 7498 	.db 0x0D
   27F6 0A                 7499 	.db 0x0A
   27F7 0D                 7500 	.db 0x0D
   27F8 0A                 7501 	.db 0x0A
   27F9 00                 7502 	.db 0x00
   27FA                    7503 __str_19:
   27FA 76 64 70 32 20 66  7504 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   2815 0D                 7505 	.db 0x0D
   2816 0A                 7506 	.db 0x0A
   2817 0D                 7507 	.db 0x0D
   2818 0A                 7508 	.db 0x0A
   2819 00                 7509 	.db 0x00
   281A                    7510 __str_20:
   281A 20 76 64 70 31 20  7511 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   2826 0D                 7512 	.db 0x0D
   2827 0A                 7513 	.db 0x0A
   2828 53 6F 72 72 79 2C  7514 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   2856 20 56 52 41 4D 2E  7515 	.ascii " VRAM."
   285C 0D                 7516 	.db 0x0D
   285D 0A                 7517 	.db 0x0A
   285E 0D                 7518 	.db 0x0D
   285F 0A                 7519 	.db 0x0A
   2860 00                 7520 	.db 0x00
   2861                    7521 __str_21:
   2861 54 57 49 53 54 45  7522 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   286C 00                 7523 	.db 0x00
   286D                    7524 __str_22:
   286D 4C 46 20 20 20 20  7525 	.ascii "LF      PL5"
        20 20 50 4C 35
   2878 00                 7526 	.db 0x00
   2879                    7527 __str_23:
   2879 42 4F 58 45 53 20  7528 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   2884 00                 7529 	.db 0x00
   2885                    7530 __str_24:
   2885 42 55 4C 42 53 20  7531 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   2890 00                 7532 	.db 0x00
   2891                    7533 __str_25:
   2891 42 55 4C 42 53 20  7534 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   289C 00                 7535 	.db 0x00
   289D                    7536 __str_26:
   289D 54 57 49 53 54 45  7537 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   28A8 00                 7538 	.db 0x00
   28A9                    7539 __str_27:
   28A9 42 4F 58 45 53 20  7540 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   28B4 00                 7541 	.db 0x00
   28B5                    7542 __str_28:
   28B5 44 53 53 4C 4F 47  7543 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   28C0 00                 7544 	.db 0x00
   28C1                    7545 __str_29:
   28C1 44 53 53 4C 4F 47  7546 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   28CC 00                 7547 	.db 0x00
                           7548 	.area _CODE
                           7549 	.area _CABS
