                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Sun Mar  4 21:20:29 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _logoeffu
                             15 	.globl _abs
                             16 	.globl _tritiles
                             17 	.globl _drawtilescreen_full
                             18 	.globl _drawtilescreen
                             19 	.globl _drawtritile
                             20 	.globl _thewave
                             21 	.globl _boxes
                             22 	.globl _drawbox
                             23 	.globl _animplay
                             24 	.globl _bulbs
                             25 	.globl _twister
                             26 	.globl _font
                             27 	.globl _drawsine
                             28 	.globl _drawstr
                             29 	.globl _do_letter_tall
                             30 	.globl _do_letter
                             31 	.globl _raster_effu
                             32 	.globl _do_blocks
                             33 	.globl _do_ymmm
                             34 	.globl _fadein
                             35 	.globl _pck_load
                             36 	.globl _raw_load
                             37 	.globl _pause
                             38 	.globl _pal_load
                             39 	.globl _scratch_clear
                             40 	.globl _ge5_load
                             41 	.globl _color_isr
                             42 	.globl _my_isr
                             43 	.globl _isNthBitSet
                             44 	.globl _scenetimings
                             45 	.globl _scenepointers
                             46 	.globl _timeindex
                             47 	.globl _sceneindex
                             48 	.globl _onceclear
                             49 	.globl _powa
                             50 	.globl _powatick
                             51 	.globl _triframes
                             52 	.globl _tripaltick2
                             53 	.globl _tripaltick
                             54 	.globl _tripal
                             55 	.globl _tiletick
                             56 	.globl _tiley
                             57 	.globl _tilex
                             58 	.globl _tilei
                             59 	.globl _tri_inited
                             60 	.globl _ffa
                             61 	.globl _buf
                             62 	.globl _initwave
                             63 	.globl _prevbox_of
                             64 	.globl _boxes_of
                             65 	.globl _pbt
                             66 	.globl _pbx
                             67 	.globl _bonc
                             68 	.globl _bo
                             69 	.globl _bt
                             70 	.globl _by
                             71 	.globl _bx
                             72 	.globl _boxi
                             73 	.globl _boxes_y
                             74 	.globl _boxes_x
                             75 	.globl _prevy
                             76 	.globl _prevx
                             77 	.globl _buffer
                             78 	.globl _boxes_init
                             79 	.globl _anim_init
                             80 	.globl _sy
                             81 	.globl _enderdir
                             82 	.globl _ender
                             83 	.globl _ff2
                             84 	.globl _ff1
                             85 	.globl _bulbflipper
                             86 	.globl _twinited
                             87 	.globl _ff
                             88 	.globl _ly
                             89 	.globl _lx
                             90 	.globl _linenum
                             91 	.globl _flof
                             92 	.globl _btab
                             93 	.globl _bty
                             94 	.globl _btx
                             95 	.globl _bsy
                             96 	.globl _bsx
                             97 	.globl _block_init
                             98 	.globl _cc
                             99 	.globl _yofff
                            100 	.globl _cmd
                            101 	.globl _tick
                            102 	.globl _vbicount
                            103 	.globl _boxes_palette
                            104 	.globl _tf_palette
                            105 	.globl _twister_palette
                            106 	.globl _block_palette
                            107 	.globl _cur_palette
                            108 	.globl _scratch
                            109 	.globl _packbuffer
                            110 	.globl _tri_lookup_y
                            111 	.globl _sixtimes
                            112 	.globl _tri_lookup_x
                            113 	.globl _sintab
                            114 	.globl _font_w
                            115 	.globl _font_y
                            116 	.globl _font_x
                            117 	.globl _tri_side2
                            118 	.globl _tri_side1
                            119 	.globl _tri_dia
                            120 	.globl _tri_up
                            121 	.globl _tri_center
                            122 	.globl _sintabx
                            123 ;--------------------------------------------------------
                            124 ; special function registers
                            125 ;--------------------------------------------------------
                            126 ;--------------------------------------------------------
                            127 ;  ram data
                            128 ;--------------------------------------------------------
                            129 	.area _DATA
   0000                     130 _sintab::
   0000                     131 	.ds 256
   0100                     132 _tri_lookup_x::
   0100                     133 	.ds 32
   0120                     134 _sixtimes::
   0120                     135 	.ds 20
   0134                     136 _tri_lookup_y::
   0134                     137 	.ds 64
   0174                     138 _packbuffer::
   0174                     139 	.ds 16000
   3FF4                     140 _scratch::
   3FF4                     141 	.ds 128
   4074                     142 _cur_palette::
   4074                     143 	.ds 32
   4094                     144 _block_palette::
   4094                     145 	.ds 32
   40B4                     146 _twister_palette::
   40B4                     147 	.ds 32
   40D4                     148 _tf_palette::
   40D4                     149 	.ds 32
   40F4                     150 _boxes_palette::
   40F4                     151 	.ds 32
   4114                     152 _vbicount::
   4114                     153 	.ds 2
   4116                     154 _tick::
   4116                     155 	.ds 2
   4118                     156 _cmd::
   4118                     157 	.ds 15
   4127                     158 _isNthBitSet_mask_1_1:
   4127                     159 	.ds 8
   412F                     160 _yofff::
   412F                     161 	.ds 1
   4130                     162 _cc::
   4130                     163 	.ds 1
   4131                     164 _flipper:
   4131                     165 	.ds 2
   4133                     166 _ymmmf:
   4133                     167 	.ds 2
   4135                     168 _block_init::
   4135                     169 	.ds 1
   4136                     170 _bsx::
   4136                     171 	.ds 2
   4138                     172 _bsy::
   4138                     173 	.ds 2
   413A                     174 _btx::
   413A                     175 	.ds 2
   413C                     176 _bty::
   413C                     177 	.ds 2
   413E                     178 _btab::
   413E                     179 	.ds 32
   415E                     180 _flof::
   415E                     181 	.ds 2
   4160                     182 _linenum::
   4160                     183 	.ds 2
   4162                     184 _lx::
   4162                     185 	.ds 1
   4163                     186 _ly::
   4163                     187 	.ds 1
   4164                     188 _ff::
   4164                     189 	.ds 2
   4166                     190 _twinited::
   4166                     191 	.ds 2
   4168                     192 _bulbflipper::
   4168                     193 	.ds 2
   416A                     194 _ff1::
   416A                     195 	.ds 2
   416C                     196 _ff2::
   416C                     197 	.ds 2
   416E                     198 _ender::
   416E                     199 	.ds 2
   4170                     200 _enderdir::
   4170                     201 	.ds 2
   4172                     202 _sy::
   4172                     203 	.ds 2
   4174                     204 _xo:
   4174                     205 	.ds 2
   4176                     206 _yo:
   4176                     207 	.ds 2
   4178                     208 _po:
   4178                     209 	.ds 2
   417A                     210 _frames:
   417A                     211 	.ds 2
   417C                     212 _anim_init::
   417C                     213 	.ds 2
   417E                     214 _boxes_init::
   417E                     215 	.ds 1
   417F                     216 _buffer::
   417F                     217 	.ds 2
   4181                     218 _prevx::
   4181                     219 	.ds 2
   4183                     220 _prevy::
   4183                     221 	.ds 2
   4185                     222 _boxes_x::
   4185                     223 	.ds 5
   418A                     224 _boxes_y::
   418A                     225 	.ds 10
   4194                     226 _boxi::
   4194                     227 	.ds 1
   4195                     228 _bx::
   4195                     229 	.ds 2
   4197                     230 _by::
   4197                     231 	.ds 2
   4199                     232 _bt::
   4199                     233 	.ds 2
   419B                     234 _bo::
   419B                     235 	.ds 2
   419D                     236 _bonc::
   419D                     237 	.ds 2
   419F                     238 _pbx::
   419F                     239 	.ds 2
   41A1                     240 _pbt::
   41A1                     241 	.ds 2
   41A3                     242 _boxes_of::
   41A3                     243 	.ds 10
   41AD                     244 _prevbox_of::
   41AD                     245 	.ds 1
   41AE                     246 _initwave::
   41AE                     247 	.ds 1
   41AF                     248 _buf::
   41AF                     249 	.ds 2
   41B1                     250 _ffa::
   41B1                     251 	.ds 2
   41B3                     252 _tri_inited::
   41B3                     253 	.ds 1
   41B4                     254 _tilei::
   41B4                     255 	.ds 2
   41B6                     256 _tilex::
   41B6                     257 	.ds 2
   41B8                     258 _tiley::
   41B8                     259 	.ds 2
   41BA                     260 _tiletick::
   41BA                     261 	.ds 1
   41BB                     262 _tripal::
   41BB                     263 	.ds 9
   41C4                     264 _tripaltick::
   41C4                     265 	.ds 1
   41C5                     266 _tripaltick2::
   41C5                     267 	.ds 1
   41C6                     268 _triframes::
   41C6                     269 	.ds 2
   41C8                     270 _powatick::
   41C8                     271 	.ds 2
   41CA                     272 _powa::
   41CA                     273 	.ds 2
   41CC                     274 _onceclear::
   41CC                     275 	.ds 1
   41CD                     276 _sceneindex::
   41CD                     277 	.ds 2
   41CF                     278 _timeindex::
   41CF                     279 	.ds 2
   41D1                     280 _scenepointers::
   41D1                     281 	.ds 14
   41DF                     282 _scenetimings::
   41DF                     283 	.ds 28
                            284 ;--------------------------------------------------------
                            285 ; overlayable items in  ram 
                            286 ;--------------------------------------------------------
                            287 	.area _OVERLAY
                            288 ;--------------------------------------------------------
                            289 ; external initialized ram data
                            290 ;--------------------------------------------------------
                            291 ;--------------------------------------------------------
                            292 ; global & static initialisations
                            293 ;--------------------------------------------------------
                            294 	.area _HOME
                            295 	.area _GSINIT
                            296 	.area _GSFINAL
                            297 	.area _GSINIT
                            298 ;demo.c:133: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r27s41            299 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            300 	call	__initrleblock
   0006 08                  301 	.db	8
   0007 01 02 04 08 10 20   302 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  303 	.db	0
                            304 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            305 	ld	hl,#_sintab
   0013 CDr00s00            306 	call	__initrleblock
   0016 3B                  307 	.db	59
   0017 00 03 06 09 0C 0F   308 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   309 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   310 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   311 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   312 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   313 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   314 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            315 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               316 	.db	#-5,#0x7E
   0054 01                  317 	.db	1
   0055 7F                  318 	.db	0x7F
   0056 FB 7E               319 	.db	#-5,#0x7E
   0058 75                  320 	.db	117
   0059 7D 7D 7C 7B 7B 7A   321 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   322 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   323 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   324 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   325 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   326 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   327 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   328 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   329 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   330 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   331 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   332 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   333 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   334 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      335 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               336 	.db	#-5,#0x82
   00D0 01                  337 	.db	1
   00D1 81                  338 	.db	0x81
   00D2 FB 82               339 	.db	#-5,#0x82
   00D4 3A                  340 	.db	58
   00D5 83 83 84 85 85 86   341 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   342 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   343 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   344 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   345 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   346 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   347 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               348 	.db	0xFA, 0xFD
   010F 00                  349 	.db	0
                            350 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            351 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            352 	call	__initrleblock
   0116 E0 00               353 	.db	#-32,#0x00
   0118 00                  354 	.db	0
                            355 ;demo.c:114: uint8_t sixtimes[20] = { 0 };
   0119 21r20s01            356 	ld	hl,#_sixtimes
   011C CDr00s00            357 	call	__initrleblock
   011F EC 00               358 	.db	#-20,#0x00
   0121 00                  359 	.db	0
                            360 ;demo.c:116: int tri_lookup_y[16*2] = { 0 };
   0122 21r34s01            361 	ld	hl,#_tri_lookup_y
   0125 CDr00s00            362 	call	__initrleblock
   0128 C0 00               363 	.db	#-64,#0x00
   012A 00                  364 	.db	0
                            365 ;demo.c:118: uint8_t packbuffer[16000] = {0};
   012B 21r74s01            366 	ld	hl,#_packbuffer
   012E CDr00s00            367 	call	__initrleblock
   0131 81 00               368 	.db	#-127,#0x00
   0133 81 00               369 	.db	#-127,#0x00
   0135 81 00               370 	.db	#-127,#0x00
   0137 81 00               371 	.db	#-127,#0x00
   0139 81 00               372 	.db	#-127,#0x00
   013B 81 00               373 	.db	#-127,#0x00
   013D 81 00               374 	.db	#-127,#0x00
   013F 81 00               375 	.db	#-127,#0x00
   0141 81 00               376 	.db	#-127,#0x00
   0143 81 00               377 	.db	#-127,#0x00
   0145 81 00               378 	.db	#-127,#0x00
   0147 81 00               379 	.db	#-127,#0x00
   0149 81 00               380 	.db	#-127,#0x00
   014B 81 00               381 	.db	#-127,#0x00
   014D 81 00               382 	.db	#-127,#0x00
   014F 81 00               383 	.db	#-127,#0x00
   0151 81 00               384 	.db	#-127,#0x00
   0153 81 00               385 	.db	#-127,#0x00
   0155 81 00               386 	.db	#-127,#0x00
   0157 81 00               387 	.db	#-127,#0x00
   0159 81 00               388 	.db	#-127,#0x00
   015B 81 00               389 	.db	#-127,#0x00
   015D 81 00               390 	.db	#-127,#0x00
   015F 81 00               391 	.db	#-127,#0x00
   0161 81 00               392 	.db	#-127,#0x00
   0163 81 00               393 	.db	#-127,#0x00
   0165 81 00               394 	.db	#-127,#0x00
   0167 81 00               395 	.db	#-127,#0x00
   0169 81 00               396 	.db	#-127,#0x00
   016B 81 00               397 	.db	#-127,#0x00
   016D 81 00               398 	.db	#-127,#0x00
   016F 81 00               399 	.db	#-127,#0x00
   0171 81 00               400 	.db	#-127,#0x00
   0173 81 00               401 	.db	#-127,#0x00
   0175 81 00               402 	.db	#-127,#0x00
   0177 81 00               403 	.db	#-127,#0x00
   0179 81 00               404 	.db	#-127,#0x00
   017B 81 00               405 	.db	#-127,#0x00
   017D 81 00               406 	.db	#-127,#0x00
   017F 81 00               407 	.db	#-127,#0x00
   0181 81 00               408 	.db	#-127,#0x00
   0183 81 00               409 	.db	#-127,#0x00
   0185 81 00               410 	.db	#-127,#0x00
   0187 81 00               411 	.db	#-127,#0x00
   0189 81 00               412 	.db	#-127,#0x00
   018B 81 00               413 	.db	#-127,#0x00
   018D 81 00               414 	.db	#-127,#0x00
   018F 81 00               415 	.db	#-127,#0x00
   0191 81 00               416 	.db	#-127,#0x00
   0193 81 00               417 	.db	#-127,#0x00
   0195 81 00               418 	.db	#-127,#0x00
   0197 81 00               419 	.db	#-127,#0x00
   0199 81 00               420 	.db	#-127,#0x00
   019B 81 00               421 	.db	#-127,#0x00
   019D 81 00               422 	.db	#-127,#0x00
   019F 81 00               423 	.db	#-127,#0x00
   01A1 81 00               424 	.db	#-127,#0x00
   01A3 81 00               425 	.db	#-127,#0x00
   01A5 81 00               426 	.db	#-127,#0x00
   01A7 81 00               427 	.db	#-127,#0x00
   01A9 81 00               428 	.db	#-127,#0x00
   01AB 81 00               429 	.db	#-127,#0x00
   01AD 81 00               430 	.db	#-127,#0x00
   01AF 81 00               431 	.db	#-127,#0x00
   01B1 81 00               432 	.db	#-127,#0x00
   01B3 81 00               433 	.db	#-127,#0x00
   01B5 81 00               434 	.db	#-127,#0x00
   01B7 81 00               435 	.db	#-127,#0x00
   01B9 81 00               436 	.db	#-127,#0x00
   01BB 81 00               437 	.db	#-127,#0x00
   01BD 81 00               438 	.db	#-127,#0x00
   01BF 81 00               439 	.db	#-127,#0x00
   01C1 81 00               440 	.db	#-127,#0x00
   01C3 81 00               441 	.db	#-127,#0x00
   01C5 81 00               442 	.db	#-127,#0x00
   01C7 81 00               443 	.db	#-127,#0x00
   01C9 81 00               444 	.db	#-127,#0x00
   01CB 81 00               445 	.db	#-127,#0x00
   01CD 81 00               446 	.db	#-127,#0x00
   01CF 81 00               447 	.db	#-127,#0x00
   01D1 81 00               448 	.db	#-127,#0x00
   01D3 81 00               449 	.db	#-127,#0x00
   01D5 81 00               450 	.db	#-127,#0x00
   01D7 81 00               451 	.db	#-127,#0x00
   01D9 81 00               452 	.db	#-127,#0x00
   01DB 81 00               453 	.db	#-127,#0x00
   01DD 81 00               454 	.db	#-127,#0x00
   01DF 81 00               455 	.db	#-127,#0x00
   01E1 81 00               456 	.db	#-127,#0x00
   01E3 81 00               457 	.db	#-127,#0x00
   01E5 81 00               458 	.db	#-127,#0x00
   01E7 81 00               459 	.db	#-127,#0x00
   01E9 81 00               460 	.db	#-127,#0x00
   01EB 81 00               461 	.db	#-127,#0x00
   01ED 81 00               462 	.db	#-127,#0x00
   01EF 81 00               463 	.db	#-127,#0x00
   01F1 81 00               464 	.db	#-127,#0x00
   01F3 81 00               465 	.db	#-127,#0x00
   01F5 81 00               466 	.db	#-127,#0x00
   01F7 81 00               467 	.db	#-127,#0x00
   01F9 81 00               468 	.db	#-127,#0x00
   01FB 81 00               469 	.db	#-127,#0x00
   01FD 81 00               470 	.db	#-127,#0x00
   01FF 81 00               471 	.db	#-127,#0x00
   0201 81 00               472 	.db	#-127,#0x00
   0203 81 00               473 	.db	#-127,#0x00
   0205 81 00               474 	.db	#-127,#0x00
   0207 81 00               475 	.db	#-127,#0x00
   0209 81 00               476 	.db	#-127,#0x00
   020B 81 00               477 	.db	#-127,#0x00
   020D 81 00               478 	.db	#-127,#0x00
   020F 81 00               479 	.db	#-127,#0x00
   0211 81 00               480 	.db	#-127,#0x00
   0213 81 00               481 	.db	#-127,#0x00
   0215 81 00               482 	.db	#-127,#0x00
   0217 81 00               483 	.db	#-127,#0x00
   0219 81 00               484 	.db	#-127,#0x00
   021B 81 00               485 	.db	#-127,#0x00
   021D 81 00               486 	.db	#-127,#0x00
   021F 81 00               487 	.db	#-127,#0x00
   0221 81 00               488 	.db	#-127,#0x00
   0223 81 00               489 	.db	#-127,#0x00
   0225 81 00               490 	.db	#-127,#0x00
   0227 81 00               491 	.db	#-127,#0x00
   0229 81 00               492 	.db	#-127,#0x00
   022B 83 00               493 	.db	#-125,#0x00
   022D 00                  494 	.db	0
                            495 ;demo.c:127: volatile int vbicount=0;
   022E FD 21r14s41         496 	ld	iy,#_vbicount
   0232 FD 36 00 00         497 	ld	0 (iy),#0x00
   0236 FD 21r14s41         498 	ld	iy,#_vbicount
   023A FD 36 01 00         499 	ld	1 (iy),#0x00
                            500 ;demo.c:128: volatile int tick=0;
   023E FD 21r16s41         501 	ld	iy,#_tick
   0242 FD 36 00 00         502 	ld	0 (iy),#0x00
   0246 FD 21r16s41         503 	ld	iy,#_tick
   024A FD 36 01 00         504 	ld	1 (iy),#0x00
                            505 ;demo.c:328: uint8_t yofff = 0;
   024E FD 21r2Fs41         506 	ld	iy,#_yofff
   0252 FD 36 00 00         507 	ld	0 (iy),#0x00
                            508 ;demo.c:329: uint8_t cc = 0;
   0256 FD 21r30s41         509 	ld	iy,#_cc
   025A FD 36 00 00         510 	ld	0 (iy),#0x00
                            511 ;demo.c:330: static int flipper = 0;
   025E FD 21r31s41         512 	ld	iy,#_flipper
   0262 FD 36 00 00         513 	ld	0 (iy),#0x00
   0266 FD 21r31s41         514 	ld	iy,#_flipper
   026A FD 36 01 00         515 	ld	1 (iy),#0x00
                            516 ;demo.c:331: static int ymmmf = 0;
   026E FD 21r33s41         517 	ld	iy,#_ymmmf
   0272 FD 36 00 00         518 	ld	0 (iy),#0x00
   0276 FD 21r33s41         519 	ld	iy,#_ymmmf
   027A FD 36 01 00         520 	ld	1 (iy),#0x00
                            521 ;demo.c:362: char block_init = 0;
   027E FD 21r35s41         522 	ld	iy,#_block_init
   0282 FD 36 00 00         523 	ld	0 (iy),#0x00
                            524 ;demo.c:364: int bsx = 0;
   0286 FD 21r36s41         525 	ld	iy,#_bsx
   028A FD 36 00 00         526 	ld	0 (iy),#0x00
   028E FD 21r36s41         527 	ld	iy,#_bsx
   0292 FD 36 01 00         528 	ld	1 (iy),#0x00
                            529 ;demo.c:365: int bsy = 0;
   0296 FD 21r38s41         530 	ld	iy,#_bsy
   029A FD 36 00 00         531 	ld	0 (iy),#0x00
   029E FD 21r38s41         532 	ld	iy,#_bsy
   02A2 FD 36 01 00         533 	ld	1 (iy),#0x00
                            534 ;demo.c:366: int btx = 0;
   02A6 FD 21r3As41         535 	ld	iy,#_btx
   02AA FD 36 00 00         536 	ld	0 (iy),#0x00
   02AE FD 21r3As41         537 	ld	iy,#_btx
   02B2 FD 36 01 00         538 	ld	1 (iy),#0x00
                            539 ;demo.c:367: int bty = 0;
   02B6 FD 21r3Cs41         540 	ld	iy,#_bty
   02BA FD 36 00 00         541 	ld	0 (iy),#0x00
   02BE FD 21r3Cs41         542 	ld	iy,#_bty
   02C2 FD 36 01 00         543 	ld	1 (iy),#0x00
                            544 ;demo.c:369: int btab[16] = {0};
   02C6 21r3Es41            545 	ld	hl,#_btab
   02C9 CDr00s00            546 	call	__initrleblock
   02CC E0 00               547 	.db	#-32,#0x00
   02CE 00                  548 	.db	0
                            549 ;demo.c:371: int flof = 0;
   02CF FD 21r5Es41         550 	ld	iy,#_flof
   02D3 FD 36 00 00         551 	ld	0 (iy),#0x00
   02D7 FD 21r5Es41         552 	ld	iy,#_flof
   02DB FD 36 01 00         553 	ld	1 (iy),#0x00
                            554 ;demo.c:420: int linenum = 0;
   02DF FD 21r60s41         555 	ld	iy,#_linenum
   02E3 FD 36 00 00         556 	ld	0 (iy),#0x00
   02E7 FD 21r60s41         557 	ld	iy,#_linenum
   02EB FD 36 01 00         558 	ld	1 (iy),#0x00
                            559 ;demo.c:478: uint8_t lx = 0;
   02EF FD 21r62s41         560 	ld	iy,#_lx
   02F3 FD 36 00 00         561 	ld	0 (iy),#0x00
                            562 ;demo.c:479: uint8_t ly = 0;
   02F7 FD 21r63s41         563 	ld	iy,#_ly
   02FB FD 36 00 00         564 	ld	0 (iy),#0x00
                            565 ;demo.c:542: int ff = 0;
   02FF FD 21r64s41         566 	ld	iy,#_ff
   0303 FD 36 00 00         567 	ld	0 (iy),#0x00
   0307 FD 21r64s41         568 	ld	iy,#_ff
   030B FD 36 01 00         569 	ld	1 (iy),#0x00
                            570 ;demo.c:543: int twinited = 0;
   030F FD 21r66s41         571 	ld	iy,#_twinited
   0313 FD 36 00 00         572 	ld	0 (iy),#0x00
   0317 FD 21r66s41         573 	ld	iy,#_twinited
   031B FD 36 01 00         574 	ld	1 (iy),#0x00
                            575 ;demo.c:592: int bulbflipper = 1;
   031F FD 21r68s41         576 	ld	iy,#_bulbflipper
   0323 FD 36 00 01         577 	ld	0 (iy),#0x01
   0327 FD 21r68s41         578 	ld	iy,#_bulbflipper
   032B FD 36 01 00         579 	ld	1 (iy),#0x00
                            580 ;demo.c:594: int ff1,ff2 = 0;
   032F FD 21r6Cs41         581 	ld	iy,#_ff2
   0333 FD 36 00 00         582 	ld	0 (iy),#0x00
   0337 FD 21r6Cs41         583 	ld	iy,#_ff2
   033B FD 36 01 00         584 	ld	1 (iy),#0x00
                            585 ;demo.c:595: int ender = 212;
   033F FD 21r6Es41         586 	ld	iy,#_ender
   0343 FD 36 00 D4         587 	ld	0 (iy),#0xD4
   0347 FD 21r6Es41         588 	ld	iy,#_ender
   034B FD 36 01 00         589 	ld	1 (iy),#0x00
                            590 ;demo.c:596: int enderdir = -1;
   034F FD 21r70s41         591 	ld	iy,#_enderdir
   0353 FD 36 00 FF         592 	ld	0 (iy),#0xFF
   0357 FD 21r70s41         593 	ld	iy,#_enderdir
   035B FD 36 01 FF         594 	ld	1 (iy),#0xFF
                            595 ;demo.c:597: int sy = 16;
   035F FD 21r72s41         596 	ld	iy,#_sy
   0363 FD 36 00 10         597 	ld	0 (iy),#0x10
   0367 FD 21r72s41         598 	ld	iy,#_sy
   036B FD 36 01 00         599 	ld	1 (iy),#0x00
                            600 ;demo.c:653: static int xo = 0;
   036F FD 21r74s41         601 	ld	iy,#_xo
   0373 FD 36 00 00         602 	ld	0 (iy),#0x00
   0377 FD 21r74s41         603 	ld	iy,#_xo
   037B FD 36 01 00         604 	ld	1 (iy),#0x00
                            605 ;demo.c:654: static int yo = 0;
   037F FD 21r76s41         606 	ld	iy,#_yo
   0383 FD 36 00 00         607 	ld	0 (iy),#0x00
   0387 FD 21r76s41         608 	ld	iy,#_yo
   038B FD 36 01 00         609 	ld	1 (iy),#0x00
                            610 ;demo.c:655: static int po = 0;
   038F FD 21r78s41         611 	ld	iy,#_po
   0393 FD 36 00 00         612 	ld	0 (iy),#0x00
   0397 FD 21r78s41         613 	ld	iy,#_po
   039B FD 36 01 00         614 	ld	1 (iy),#0x00
                            615 ;demo.c:656: static int frames = 0;
   039F FD 21r7As41         616 	ld	iy,#_frames
   03A3 FD 36 00 00         617 	ld	0 (iy),#0x00
   03A7 FD 21r7As41         618 	ld	iy,#_frames
   03AB FD 36 01 00         619 	ld	1 (iy),#0x00
                            620 ;demo.c:658: int anim_init = 0;
   03AF FD 21r7Cs41         621 	ld	iy,#_anim_init
   03B3 FD 36 00 00         622 	ld	0 (iy),#0x00
   03B7 FD 21r7Cs41         623 	ld	iy,#_anim_init
   03BB FD 36 01 00         624 	ld	1 (iy),#0x00
                            625 ;demo.c:754: uint8_t boxes_init = 0;
   03BF FD 21r7Es41         626 	ld	iy,#_boxes_init
   03C3 FD 36 00 00         627 	ld	0 (iy),#0x00
                            628 ;demo.c:755: int buffer = 1;
   03C7 FD 21r7Fs41         629 	ld	iy,#_buffer
   03CB FD 36 00 01         630 	ld	0 (iy),#0x01
   03CF FD 21r7Fs41         631 	ld	iy,#_buffer
   03D3 FD 36 01 00         632 	ld	1 (iy),#0x00
                            633 ;demo.c:756: int prevx = -1;
   03D7 FD 21r81s41         634 	ld	iy,#_prevx
   03DB FD 36 00 FF         635 	ld	0 (iy),#0xFF
   03DF FD 21r81s41         636 	ld	iy,#_prevx
   03E3 FD 36 01 FF         637 	ld	1 (iy),#0xFF
                            638 ;demo.c:758: uint8_t boxes_x[5] = {0,36,0,36,0};
   03E7 21r85s41            639 	ld	hl,#_boxes_x
   03EA CDr00s00            640 	call	__initrleblock
   03ED 05                  641 	.db	5
   03EE 00 24 00 24 00      642 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   03F3 00                  643 	.db	0
                            644 ;demo.c:759: int boxes_y[5] = {768,768,768+36,768+36,0};
   03F4 21r8As41            645 	ld	hl,#_boxes_y
   03F7 CDr00s00            646 	call	__initrleblock
   03FA 0A                  647 	.db	10
   03FB 00 03 00 03 24 03   648 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   0403 00 00               649 	.db	0x00, 0x00
   0405 00                  650 	.db	0
                            651 ;demo.c:760: uint8_t boxi = 0;
   0406 FD 21r94s41         652 	ld	iy,#_boxi
   040A FD 36 00 00         653 	ld	0 (iy),#0x00
                            654 ;demo.c:761: int bx = 220;
   040E FD 21r95s41         655 	ld	iy,#_bx
   0412 FD 36 00 DC         656 	ld	0 (iy),#0xDC
   0416 FD 21r95s41         657 	ld	iy,#_bx
   041A FD 36 01 00         658 	ld	1 (iy),#0x00
                            659 ;demo.c:762: int by = 84;
   041E FD 21r97s41         660 	ld	iy,#_by
   0422 FD 36 00 54         661 	ld	0 (iy),#0x54
   0426 FD 21r97s41         662 	ld	iy,#_by
   042A FD 36 01 00         663 	ld	1 (iy),#0x00
                            664 ;demo.c:780: int bt = 0;
   042E FD 21r99s41         665 	ld	iy,#_bt
   0432 FD 36 00 00         666 	ld	0 (iy),#0x00
   0436 FD 21r99s41         667 	ld	iy,#_bt
   043A FD 36 01 00         668 	ld	1 (iy),#0x00
                            669 ;demo.c:781: int bo = 0;
   043E FD 21r9Bs41         670 	ld	iy,#_bo
   0442 FD 36 00 00         671 	ld	0 (iy),#0x00
   0446 FD 21r9Bs41         672 	ld	iy,#_bo
   044A FD 36 01 00         673 	ld	1 (iy),#0x00
                            674 ;demo.c:783: int bonc = 0;
   044E FD 21r9Ds41         675 	ld	iy,#_bonc
   0452 FD 36 00 00         676 	ld	0 (iy),#0x00
   0456 FD 21r9Ds41         677 	ld	iy,#_bonc
   045A FD 36 01 00         678 	ld	1 (iy),#0x00
                            679 ;demo.c:784: int pbx = 0;
   045E FD 21r9Fs41         680 	ld	iy,#_pbx
   0462 FD 36 00 00         681 	ld	0 (iy),#0x00
   0466 FD 21r9Fs41         682 	ld	iy,#_pbx
   046A FD 36 01 00         683 	ld	1 (iy),#0x00
                            684 ;demo.c:785: int pbt = 0;
   046E FD 21rA1s41         685 	ld	iy,#_pbt
   0472 FD 36 00 00         686 	ld	0 (iy),#0x00
   0476 FD 21rA1s41         687 	ld	iy,#_pbt
   047A FD 36 01 00         688 	ld	1 (iy),#0x00
                            689 ;demo.c:787: int boxes_of[5] = {0,0,6,0,0};
   047E 21rA3s41            690 	ld	hl,#_boxes_of
   0481 CDr00s00            691 	call	__initrleblock
   0484 05                  692 	.db	5
   0485 00 00 00 00 06      693 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   048A FB 00               694 	.db	#-5,#0x00
   048C 00                  695 	.db	0
                            696 ;demo.c:788: uint8_t prevbox_of = 0;
   048D FD 21rADs41         697 	ld	iy,#_prevbox_of
   0491 FD 36 00 00         698 	ld	0 (iy),#0x00
                            699 ;demo.c:903: uint8_t initwave = 0;
   0495 FD 21rAEs41         700 	ld	iy,#_initwave
   0499 FD 36 00 00         701 	ld	0 (iy),#0x00
                            702 ;demo.c:904: int buf = -1;
   049D FD 21rAFs41         703 	ld	iy,#_buf
   04A1 FD 36 00 FF         704 	ld	0 (iy),#0xFF
   04A5 FD 21rAFs41         705 	ld	iy,#_buf
   04A9 FD 36 01 FF         706 	ld	1 (iy),#0xFF
                            707 ;demo.c:905: int ffa = 0;
   04AD FD 21rB1s41         708 	ld	iy,#_ffa
   04B1 FD 36 00 00         709 	ld	0 (iy),#0x00
   04B5 FD 21rB1s41         710 	ld	iy,#_ffa
   04B9 FD 36 01 00         711 	ld	1 (iy),#0x00
                            712 ;demo.c:982: uint8_t tri_inited = 0;
   04BD FD 21rB3s41         713 	ld	iy,#_tri_inited
   04C1 FD 36 00 00         714 	ld	0 (iy),#0x00
                            715 ;demo.c:997: int tilei = 0;
   04C5 FD 21rB4s41         716 	ld	iy,#_tilei
   04C9 FD 36 00 00         717 	ld	0 (iy),#0x00
   04CD FD 21rB4s41         718 	ld	iy,#_tilei
   04D1 FD 36 01 00         719 	ld	1 (iy),#0x00
                            720 ;demo.c:998: int tilex = 0;
   04D5 FD 21rB6s41         721 	ld	iy,#_tilex
   04D9 FD 36 00 00         722 	ld	0 (iy),#0x00
   04DD FD 21rB6s41         723 	ld	iy,#_tilex
   04E1 FD 36 01 00         724 	ld	1 (iy),#0x00
                            725 ;demo.c:999: int tiley = 0;
   04E5 FD 21rB8s41         726 	ld	iy,#_tiley
   04E9 FD 36 00 00         727 	ld	0 (iy),#0x00
   04ED FD 21rB8s41         728 	ld	iy,#_tiley
   04F1 FD 36 01 00         729 	ld	1 (iy),#0x00
                            730 ;demo.c:1000: uint8_t tiletick = 0;
   04F5 FD 21rBAs41         731 	ld	iy,#_tiletick
   04F9 FD 36 00 00         732 	ld	0 (iy),#0x00
                            733 ;demo.c:1030: char tripal[9] = {
   04FD 21rBBs41            734 	ld	hl,#_tripal
   0500 CDr00s00            735 	call	__initrleblock
   0503 09                  736 	.db	9
   0504 02 02 01 01 02 03   737 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   050C 02                  738 	.db	0x02
   050D 00                  739 	.db	0
                            740 ;demo.c:1036: uint8_t tripaltick = 0;
   050E FD 21rC4s41         741 	ld	iy,#_tripaltick
   0512 FD 36 00 00         742 	ld	0 (iy),#0x00
                            743 ;demo.c:1037: uint8_t tripaltick2 = 0;
   0516 FD 21rC5s41         744 	ld	iy,#_tripaltick2
   051A FD 36 00 00         745 	ld	0 (iy),#0x00
                            746 ;demo.c:1039: int triframes = 0;
   051E FD 21rC6s41         747 	ld	iy,#_triframes
   0522 FD 36 00 00         748 	ld	0 (iy),#0x00
   0526 FD 21rC6s41         749 	ld	iy,#_triframes
   052A FD 36 01 00         750 	ld	1 (iy),#0x00
                            751 ;demo.c:1146: int powatick = 0;
   052E FD 21rC8s41         752 	ld	iy,#_powatick
   0532 FD 36 00 00         753 	ld	0 (iy),#0x00
   0536 FD 21rC8s41         754 	ld	iy,#_powatick
   053A FD 36 01 00         755 	ld	1 (iy),#0x00
                            756 ;demo.c:1147: int powa = 0;
   053E FD 21rCAs41         757 	ld	iy,#_powa
   0542 FD 36 00 00         758 	ld	0 (iy),#0x00
   0546 FD 21rCAs41         759 	ld	iy,#_powa
   054A FD 36 01 00         760 	ld	1 (iy),#0x00
                            761 ;demo.c:1148: uint8_t onceclear = 255;
   054E FD 21rCCs41         762 	ld	iy,#_onceclear
   0552 FD 36 00 FF         763 	ld	0 (iy),#0xFF
                            764 ;demo.c:1210: int sceneindex = 0;
   0556 FD 21rCDs41         765 	ld	iy,#_sceneindex
   055A FD 36 00 00         766 	ld	0 (iy),#0x00
   055E FD 21rCDs41         767 	ld	iy,#_sceneindex
   0562 FD 36 01 00         768 	ld	1 (iy),#0x00
                            769 ;demo.c:1211: int timeindex = 0;
   0566 FD 21rCFs41         770 	ld	iy,#_timeindex
   056A FD 36 00 00         771 	ld	0 (iy),#0x00
   056E FD 21rCFs41         772 	ld	iy,#_timeindex
   0572 FD 36 01 00         773 	ld	1 (iy),#0x00
                            774 ;demo.c:1213: void (*scenepointers[7])() = {
   0576 21rD1s41            775 	ld	hl,#_scenepointers
   0579 36r50               776 	ld	(hl),#<_logoeffu
   057B 23                  777 	inc	hl
   057C 36s26               778 	ld	(hl),#>_logoeffu
   057E 01rD3s41            779 	ld	bc,#_scenepointers + 2
   0581 69                  780 	ld	l,c
   0582 60                  781 	ld	h,b
   0583 36r8F               782 	ld	(hl),#<_bulbs
   0585 23                  783 	inc	hl
   0586 36s13               784 	ld	(hl),#>_bulbs
   0588 21rD5s41            785 	ld	hl, #_scenepointers + 4
   058B 36r23               786 	ld	(hl),#<_twister
   058D 23                  787 	inc	hl
   058E 36s12               788 	ld	(hl),#>_twister
   0590 01rD7s41            789 	ld	bc,#_scenepointers + 6
   0593 69                  790 	ld	l,c
   0594 60                  791 	ld	h,b
   0595 36r3C               792 	ld	(hl),#<_boxes
   0597 23                  793 	inc	hl
   0598 36s19               794 	ld	(hl),#>_boxes
   059A 21rD9s41            795 	ld	hl, #_scenepointers + 8
   059D 36r94               796 	ld	(hl),#<_thewave
   059F 23                  797 	inc	hl
   05A0 36s1D               798 	ld	(hl),#>_thewave
   05A2 21rDBs41            799 	ld	hl, #_scenepointers + 10
   05A5 36r62               800 	ld	(hl),#<_tritiles
   05A7 23                  801 	inc	hl
   05A8 36s22               802 	ld	(hl),#>_tritiles
   05AA 01rDDs41            803 	ld	bc,#_scenepointers + 12
   05AD 69                  804 	ld	l,c
   05AE 60                  805 	ld	h,b
   05AF 36rED               806 	ld	(hl),#<_animplay
   05B1 23                  807 	inc	hl
   05B2 36s15               808 	ld	(hl),#>_animplay
                            809 ;demo.c:1223: int scenetimings[14] = {
   05B4 21rDFs41            810 	ld	hl,#_scenetimings
   05B7 CDr00s00            811 	call	__initrleblock
   05BA 1C                  812 	.db	28
   05BB 00 00 FA 00 FA 00   813 	.db	0x00, 0x00, 0xFA, 0x00, 0xFA, 0x00, 0x4C, 0x04
        4C 04
   05C3 4C 04 98 08 98 08   814 	.db	0x4C, 0x04, 0x98, 0x08, 0x98, 0x08, 0x74, 0x0E
        74 0E
   05CB 74 0E 88 13 88 13   815 	.db	0x74, 0x0E, 0x88, 0x13, 0x88, 0x13, 0x58, 0x1B
        58 1B
   05D3 58 1B 98 3A         816 	.db	0x58, 0x1B, 0x98, 0x3A
   05D7 00                  817 	.db	0
                            818 ;--------------------------------------------------------
                            819 ; Home
                            820 ;--------------------------------------------------------
                            821 	.area _HOME
                            822 	.area _HOME
                            823 ;--------------------------------------------------------
                            824 ; code
                            825 ;--------------------------------------------------------
                            826 	.area _CODE
                            827 ;demo.c:132: int isNthBitSet (unsigned char c, int n) {
                            828 ;	---------------------------------
                            829 ; Function isNthBitSet
                            830 ; ---------------------------------
   0000                     831 _isNthBitSet_start::
   0000                     832 _isNthBitSet:
   0000 DD E5               833 	push	ix
   0002 DD 21 00 00         834 	ld	ix,#0
   0006 DD 39               835 	add	ix,sp
                            836 ;demo.c:134: return ((c & mask[n]) != 0);
   0008 3Er27               837 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            838 	add	a,5 (ix)
   000D 4F                  839 	ld	c,a
   000E 3Es41               840 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            841 	adc	a,6 (ix)
   0013 47                  842 	ld	b,a
   0014 0A                  843 	ld	a,(bc)
   0015 DD A6 04            844 	and	a,4 (ix)
   0018 20 04               845 	jr	NZ,00103$
   001A 3E 01               846 	ld	a,#0x01
   001C 18 01               847 	jr	00104$
   001E                     848 00103$:
   001E AF                  849 	xor	a,a
   001F                     850 00104$:
   001F B7                  851 	or	a,a
   0020 D6 01               852 	sub	a,#0x01
   0022 3E 00               853 	ld	a,#0x00
   0024 17                  854 	rla
   0025 4F                  855 	ld	c,a
   0026 69                  856 	ld	l,c
   0027 26 00               857 	ld	h,#0x00
   0029 DD E1               858 	pop	ix
   002B C9                  859 	ret
   002C                     860 _isNthBitSet_end::
   002C                     861 _sintabx:
   002C 78 00               862 	.dw #0x0078
   002E 7A 00               863 	.dw #0x007A
   0030 7D 00               864 	.dw #0x007D
   0032 80 00               865 	.dw #0x0080
   0034 83 00               866 	.dw #0x0083
   0036 86 00               867 	.dw #0x0086
   0038 89 00               868 	.dw #0x0089
   003A 8C 00               869 	.dw #0x008C
   003C 8F 00               870 	.dw #0x008F
   003E 92 00               871 	.dw #0x0092
   0040 95 00               872 	.dw #0x0095
   0042 98 00               873 	.dw #0x0098
   0044 9A 00               874 	.dw #0x009A
   0046 9D 00               875 	.dw #0x009D
   0048 A0 00               876 	.dw #0x00A0
   004A A3 00               877 	.dw #0x00A3
   004C A5 00               878 	.dw #0x00A5
   004E A8 00               879 	.dw #0x00A8
   0050 AB 00               880 	.dw #0x00AB
   0052 AD 00               881 	.dw #0x00AD
   0054 B0 00               882 	.dw #0x00B0
   0056 B3 00               883 	.dw #0x00B3
   0058 B5 00               884 	.dw #0x00B5
   005A B8 00               885 	.dw #0x00B8
   005C BA 00               886 	.dw #0x00BA
   005E BD 00               887 	.dw #0x00BD
   0060 BF 00               888 	.dw #0x00BF
   0062 C1 00               889 	.dw #0x00C1
   0064 C4 00               890 	.dw #0x00C4
   0066 C6 00               891 	.dw #0x00C6
   0068 C8 00               892 	.dw #0x00C8
   006A CA 00               893 	.dw #0x00CA
   006C CC 00               894 	.dw #0x00CC
   006E CE 00               895 	.dw #0x00CE
   0070 D0 00               896 	.dw #0x00D0
   0072 D2 00               897 	.dw #0x00D2
   0074 D4 00               898 	.dw #0x00D4
   0076 D6 00               899 	.dw #0x00D6
   0078 D8 00               900 	.dw #0x00D8
   007A DA 00               901 	.dw #0x00DA
   007C DB 00               902 	.dw #0x00DB
   007E DD 00               903 	.dw #0x00DD
   0080 DE 00               904 	.dw #0x00DE
   0082 E0 00               905 	.dw #0x00E0
   0084 E1 00               906 	.dw #0x00E1
   0086 E3 00               907 	.dw #0x00E3
   0088 E4 00               908 	.dw #0x00E4
   008A E5 00               909 	.dw #0x00E5
   008C E6 00               910 	.dw #0x00E6
   008E E7 00               911 	.dw #0x00E7
   0090 E8 00               912 	.dw #0x00E8
   0092 E9 00               913 	.dw #0x00E9
   0094 EA 00               914 	.dw #0x00EA
   0096 EB 00               915 	.dw #0x00EB
   0098 EC 00               916 	.dw #0x00EC
   009A ED 00               917 	.dw #0x00ED
   009C ED 00               918 	.dw #0x00ED
   009E EE 00               919 	.dw #0x00EE
   00A0 EE 00               920 	.dw #0x00EE
   00A2 EF 00               921 	.dw #0x00EF
   00A4 EF 00               922 	.dw #0x00EF
   00A6 EF 00               923 	.dw #0x00EF
   00A8 EF 00               924 	.dw #0x00EF
   00AA EF 00               925 	.dw #0x00EF
   00AC F0 00               926 	.dw #0x00F0
   00AE EF 00               927 	.dw #0x00EF
   00B0 EF 00               928 	.dw #0x00EF
   00B2 EF 00               929 	.dw #0x00EF
   00B4 EF 00               930 	.dw #0x00EF
   00B6 EF 00               931 	.dw #0x00EF
   00B8 EE 00               932 	.dw #0x00EE
   00BA EE 00               933 	.dw #0x00EE
   00BC ED 00               934 	.dw #0x00ED
   00BE ED 00               935 	.dw #0x00ED
   00C0 EC 00               936 	.dw #0x00EC
   00C2 EB 00               937 	.dw #0x00EB
   00C4 EA 00               938 	.dw #0x00EA
   00C6 E9 00               939 	.dw #0x00E9
   00C8 E8 00               940 	.dw #0x00E8
   00CA E7 00               941 	.dw #0x00E7
   00CC E6 00               942 	.dw #0x00E6
   00CE E5 00               943 	.dw #0x00E5
   00D0 E4 00               944 	.dw #0x00E4
   00D2 E3 00               945 	.dw #0x00E3
   00D4 E1 00               946 	.dw #0x00E1
   00D6 E0 00               947 	.dw #0x00E0
   00D8 DE 00               948 	.dw #0x00DE
   00DA DD 00               949 	.dw #0x00DD
   00DC DB 00               950 	.dw #0x00DB
   00DE DA 00               951 	.dw #0x00DA
   00E0 D8 00               952 	.dw #0x00D8
   00E2 D6 00               953 	.dw #0x00D6
   00E4 D4 00               954 	.dw #0x00D4
   00E6 D2 00               955 	.dw #0x00D2
   00E8 D0 00               956 	.dw #0x00D0
   00EA CE 00               957 	.dw #0x00CE
   00EC CC 00               958 	.dw #0x00CC
   00EE CA 00               959 	.dw #0x00CA
   00F0 C8 00               960 	.dw #0x00C8
   00F2 C6 00               961 	.dw #0x00C6
   00F4 C4 00               962 	.dw #0x00C4
   00F6 C1 00               963 	.dw #0x00C1
   00F8 BF 00               964 	.dw #0x00BF
   00FA BD 00               965 	.dw #0x00BD
   00FC BA 00               966 	.dw #0x00BA
   00FE B8 00               967 	.dw #0x00B8
   0100 B5 00               968 	.dw #0x00B5
   0102 B3 00               969 	.dw #0x00B3
   0104 B0 00               970 	.dw #0x00B0
   0106 AD 00               971 	.dw #0x00AD
   0108 AB 00               972 	.dw #0x00AB
   010A A8 00               973 	.dw #0x00A8
   010C A5 00               974 	.dw #0x00A5
   010E A3 00               975 	.dw #0x00A3
   0110 A0 00               976 	.dw #0x00A0
   0112 9D 00               977 	.dw #0x009D
   0114 9A 00               978 	.dw #0x009A
   0116 98 00               979 	.dw #0x0098
   0118 95 00               980 	.dw #0x0095
   011A 92 00               981 	.dw #0x0092
   011C 8F 00               982 	.dw #0x008F
   011E 8C 00               983 	.dw #0x008C
   0120 89 00               984 	.dw #0x0089
   0122 86 00               985 	.dw #0x0086
   0124 83 00               986 	.dw #0x0083
   0126 80 00               987 	.dw #0x0080
   0128 7D 00               988 	.dw #0x007D
   012A 7A 00               989 	.dw #0x007A
   012C 78 00               990 	.dw #0x0078
   012E 75 00               991 	.dw #0x0075
   0130 72 00               992 	.dw #0x0072
   0132 6F 00               993 	.dw #0x006F
   0134 6C 00               994 	.dw #0x006C
   0136 69 00               995 	.dw #0x0069
   0138 66 00               996 	.dw #0x0066
   013A 63 00               997 	.dw #0x0063
   013C 60 00               998 	.dw #0x0060
   013E 5D 00               999 	.dw #0x005D
   0140 5A 00              1000 	.dw #0x005A
   0142 57 00              1001 	.dw #0x0057
   0144 55 00              1002 	.dw #0x0055
   0146 52 00              1003 	.dw #0x0052
   0148 4F 00              1004 	.dw #0x004F
   014A 4C 00              1005 	.dw #0x004C
   014C 4A 00              1006 	.dw #0x004A
   014E 47 00              1007 	.dw #0x0047
   0150 44 00              1008 	.dw #0x0044
   0152 42 00              1009 	.dw #0x0042
   0154 3F 00              1010 	.dw #0x003F
   0156 3C 00              1011 	.dw #0x003C
   0158 3A 00              1012 	.dw #0x003A
   015A 37 00              1013 	.dw #0x0037
   015C 35 00              1014 	.dw #0x0035
   015E 32 00              1015 	.dw #0x0032
   0160 30 00              1016 	.dw #0x0030
   0162 2E 00              1017 	.dw #0x002E
   0164 2B 00              1018 	.dw #0x002B
   0166 29 00              1019 	.dw #0x0029
   0168 27 00              1020 	.dw #0x0027
   016A 25 00              1021 	.dw #0x0025
   016C 23 00              1022 	.dw #0x0023
   016E 21 00              1023 	.dw #0x0021
   0170 1F 00              1024 	.dw #0x001F
   0172 1D 00              1025 	.dw #0x001D
   0174 1B 00              1026 	.dw #0x001B
   0176 19 00              1027 	.dw #0x0019
   0178 17 00              1028 	.dw #0x0017
   017A 15 00              1029 	.dw #0x0015
   017C 14 00              1030 	.dw #0x0014
   017E 12 00              1031 	.dw #0x0012
   0180 11 00              1032 	.dw #0x0011
   0182 0F 00              1033 	.dw #0x000F
   0184 0E 00              1034 	.dw #0x000E
   0186 0C 00              1035 	.dw #0x000C
   0188 0B 00              1036 	.dw #0x000B
   018A 0A 00              1037 	.dw #0x000A
   018C 09 00              1038 	.dw #0x0009
   018E 08 00              1039 	.dw #0x0008
   0190 07 00              1040 	.dw #0x0007
   0192 06 00              1041 	.dw #0x0006
   0194 05 00              1042 	.dw #0x0005
   0196 04 00              1043 	.dw #0x0004
   0198 03 00              1044 	.dw #0x0003
   019A 02 00              1045 	.dw #0x0002
   019C 02 00              1046 	.dw #0x0002
   019E 01 00              1047 	.dw #0x0001
   01A0 01 00              1048 	.dw #0x0001
   01A2 00 00              1049 	.dw #0x0000
   01A4 00 00              1050 	.dw #0x0000
   01A6 00 00              1051 	.dw #0x0000
   01A8 00 00              1052 	.dw #0x0000
   01AA 00 00              1053 	.dw #0x0000
   01AC 00 00              1054 	.dw #0x0000
   01AE 00 00              1055 	.dw #0x0000
   01B0 00 00              1056 	.dw #0x0000
   01B2 00 00              1057 	.dw #0x0000
   01B4 00 00              1058 	.dw #0x0000
   01B6 00 00              1059 	.dw #0x0000
   01B8 01 00              1060 	.dw #0x0001
   01BA 01 00              1061 	.dw #0x0001
   01BC 02 00              1062 	.dw #0x0002
   01BE 02 00              1063 	.dw #0x0002
   01C0 03 00              1064 	.dw #0x0003
   01C2 04 00              1065 	.dw #0x0004
   01C4 05 00              1066 	.dw #0x0005
   01C6 06 00              1067 	.dw #0x0006
   01C8 07 00              1068 	.dw #0x0007
   01CA 08 00              1069 	.dw #0x0008
   01CC 09 00              1070 	.dw #0x0009
   01CE 0A 00              1071 	.dw #0x000A
   01D0 0B 00              1072 	.dw #0x000B
   01D2 0C 00              1073 	.dw #0x000C
   01D4 0E 00              1074 	.dw #0x000E
   01D6 0F 00              1075 	.dw #0x000F
   01D8 11 00              1076 	.dw #0x0011
   01DA 12 00              1077 	.dw #0x0012
   01DC 14 00              1078 	.dw #0x0014
   01DE 15 00              1079 	.dw #0x0015
   01E0 17 00              1080 	.dw #0x0017
   01E2 19 00              1081 	.dw #0x0019
   01E4 1B 00              1082 	.dw #0x001B
   01E6 1D 00              1083 	.dw #0x001D
   01E8 1F 00              1084 	.dw #0x001F
   01EA 21 00              1085 	.dw #0x0021
   01EC 23 00              1086 	.dw #0x0023
   01EE 25 00              1087 	.dw #0x0025
   01F0 27 00              1088 	.dw #0x0027
   01F2 29 00              1089 	.dw #0x0029
   01F4 2B 00              1090 	.dw #0x002B
   01F6 2E 00              1091 	.dw #0x002E
   01F8 30 00              1092 	.dw #0x0030
   01FA 32 00              1093 	.dw #0x0032
   01FC 35 00              1094 	.dw #0x0035
   01FE 37 00              1095 	.dw #0x0037
   0200 3A 00              1096 	.dw #0x003A
   0202 3C 00              1097 	.dw #0x003C
   0204 3F 00              1098 	.dw #0x003F
   0206 42 00              1099 	.dw #0x0042
   0208 44 00              1100 	.dw #0x0044
   020A 47 00              1101 	.dw #0x0047
   020C 4A 00              1102 	.dw #0x004A
   020E 4C 00              1103 	.dw #0x004C
   0210 4F 00              1104 	.dw #0x004F
   0212 52 00              1105 	.dw #0x0052
   0214 55 00              1106 	.dw #0x0055
   0216 57 00              1107 	.dw #0x0057
   0218 5A 00              1108 	.dw #0x005A
   021A 5D 00              1109 	.dw #0x005D
   021C 60 00              1110 	.dw #0x0060
   021E 63 00              1111 	.dw #0x0063
   0220 66 00              1112 	.dw #0x0066
   0222 69 00              1113 	.dw #0x0069
   0224 6C 00              1114 	.dw #0x006C
   0226 6F 00              1115 	.dw #0x006F
   0228 72 00              1116 	.dw #0x0072
   022A 75 00              1117 	.dw #0x0075
   022C                    1118 _tri_center:
   022C 08                 1119 	.db #0x08
   022D 0A                 1120 	.db #0x0A
   022E 12                 1121 	.db #0x12
   022F 10                 1122 	.db #0x10
   0230 00                 1123 	.db #0x00
   0231 02                 1124 	.db #0x02
   0232 08                 1125 	.db #0x08
   0233 0A                 1126 	.db #0x0A
   0234 0B                 1127 	.db #0x0B
   0235 09                 1128 	.db #0x09
   0236 03                 1129 	.db #0x03
   0237 01                 1130 	.db #0x01
   0238 11                 1131 	.db #0x11
   0239 13                 1132 	.db #0x13
   023A 0B                 1133 	.db #0x0B
   023B 09                 1134 	.db #0x09
   023C 0A                 1135 	.db #0x0A
   023D 12                 1136 	.db #0x12
   023E 10                 1137 	.db #0x10
   023F 00                 1138 	.db #0x00
   0240 02                 1139 	.db #0x02
   0241 08                 1140 	.db #0x08
   0242 0A                 1141 	.db #0x0A
   0243 12                 1142 	.db #0x12
   0244 13                 1143 	.db #0x13
   0245 0B                 1144 	.db #0x0B
   0246 09                 1145 	.db #0x09
   0247 03                 1146 	.db #0x03
   0248 01                 1147 	.db #0x01
   0249 11                 1148 	.db #0x11
   024A 13                 1149 	.db #0x13
   024B 0B                 1150 	.db #0x0B
   024C 12                 1151 	.db #0x12
   024D 10                 1152 	.db #0x10
   024E 00                 1153 	.db #0x00
   024F 02                 1154 	.db #0x02
   0250 08                 1155 	.db #0x08
   0251 0A                 1156 	.db #0x0A
   0252 12                 1157 	.db #0x12
   0253 10                 1158 	.db #0x10
   0254 11                 1159 	.db #0x11
   0255 13                 1160 	.db #0x13
   0256 0B                 1161 	.db #0x0B
   0257 09                 1162 	.db #0x09
   0258 03                 1163 	.db #0x03
   0259 01                 1164 	.db #0x01
   025A 11                 1165 	.db #0x11
   025B 13                 1166 	.db #0x13
   025C 10                 1167 	.db #0x10
   025D 00                 1168 	.db #0x00
   025E 02                 1169 	.db #0x02
   025F 08                 1170 	.db #0x08
   0260 0A                 1171 	.db #0x0A
   0261 12                 1172 	.db #0x12
   0262 10                 1173 	.db #0x10
   0263 00                 1174 	.db #0x00
   0264 01                 1175 	.db #0x01
   0265 11                 1176 	.db #0x11
   0266 13                 1177 	.db #0x13
   0267 0B                 1178 	.db #0x0B
   0268 09                 1179 	.db #0x09
   0269 03                 1180 	.db #0x03
   026A 01                 1181 	.db #0x01
   026B 11                 1182 	.db #0x11
   026C 00                 1183 	.db #0x00
   026D 02                 1184 	.db #0x02
   026E 08                 1185 	.db #0x08
   026F 0A                 1186 	.db #0x0A
   0270 12                 1187 	.db #0x12
   0271 10                 1188 	.db #0x10
   0272 00                 1189 	.db #0x00
   0273 02                 1190 	.db #0x02
   0274 03                 1191 	.db #0x03
   0275 01                 1192 	.db #0x01
   0276 11                 1193 	.db #0x11
   0277 13                 1194 	.db #0x13
   0278 0B                 1195 	.db #0x0B
   0279 09                 1196 	.db #0x09
   027A 03                 1197 	.db #0x03
   027B 01                 1198 	.db #0x01
   027C 02                 1199 	.db #0x02
   027D 08                 1200 	.db #0x08
   027E 0A                 1201 	.db #0x0A
   027F 12                 1202 	.db #0x12
   0280 10                 1203 	.db #0x10
   0281 00                 1204 	.db #0x00
   0282 02                 1205 	.db #0x02
   0283 08                 1206 	.db #0x08
   0284 09                 1207 	.db #0x09
   0285 03                 1208 	.db #0x03
   0286 01                 1209 	.db #0x01
   0287 11                 1210 	.db #0x11
   0288 13                 1211 	.db #0x13
   0289 0B                 1212 	.db #0x0B
   028A 09                 1213 	.db #0x09
   028B 03                 1214 	.db #0x03
   028C 01                 1215 	.db #0x01
   028D 0B                 1216 	.db #0x0B
   028E 09                 1217 	.db #0x09
   028F 11                 1218 	.db #0x11
   0290 13                 1219 	.db #0x13
   0291 03                 1220 	.db #0x03
   0292 01                 1221 	.db #0x01
   0293 0B                 1222 	.db #0x0B
   0294 0A                 1223 	.db #0x0A
   0295 00                 1224 	.db #0x00
   0296 02                 1225 	.db #0x02
   0297 12                 1226 	.db #0x12
   0298 10                 1227 	.db #0x10
   0299 08                 1228 	.db #0x08
   029A 0A                 1229 	.db #0x0A
   029B 00                 1230 	.db #0x00
   029C 03                 1231 	.db #0x03
   029D 01                 1232 	.db #0x01
   029E 0B                 1233 	.db #0x0B
   029F 09                 1234 	.db #0x09
   02A0 11                 1235 	.db #0x11
   02A1 13                 1236 	.db #0x13
   02A2 03                 1237 	.db #0x03
   02A3 01                 1238 	.db #0x01
   02A4 00                 1239 	.db #0x00
   02A5 02                 1240 	.db #0x02
   02A6 12                 1241 	.db #0x12
   02A7 10                 1242 	.db #0x10
   02A8 08                 1243 	.db #0x08
   02A9 0A                 1244 	.db #0x0A
   02AA 00                 1245 	.db #0x00
   02AB 02                 1246 	.db #0x02
   02AC 13                 1247 	.db #0x13
   02AD 03                 1248 	.db #0x03
   02AE 01                 1249 	.db #0x01
   02AF 0B                 1250 	.db #0x0B
   02B0 09                 1251 	.db #0x09
   02B1 11                 1252 	.db #0x11
   02B2 13                 1253 	.db #0x13
   02B3 03                 1254 	.db #0x03
   02B4 02                 1255 	.db #0x02
   02B5 12                 1256 	.db #0x12
   02B6 10                 1257 	.db #0x10
   02B7 08                 1258 	.db #0x08
   02B8 0A                 1259 	.db #0x0A
   02B9 00                 1260 	.db #0x00
   02BA 02                 1261 	.db #0x02
   02BB 12                 1262 	.db #0x12
   02BC 11                 1263 	.db #0x11
   02BD 13                 1264 	.db #0x13
   02BE 03                 1265 	.db #0x03
   02BF 01                 1266 	.db #0x01
   02C0 0B                 1267 	.db #0x0B
   02C1 09                 1268 	.db #0x09
   02C2 11                 1269 	.db #0x11
   02C3 13                 1270 	.db #0x13
   02C4 12                 1271 	.db #0x12
   02C5 10                 1272 	.db #0x10
   02C6 08                 1273 	.db #0x08
   02C7 0A                 1274 	.db #0x0A
   02C8 00                 1275 	.db #0x00
   02C9 02                 1276 	.db #0x02
   02CA 12                 1277 	.db #0x12
   02CB 10                 1278 	.db #0x10
   02CC 09                 1279 	.db #0x09
   02CD 11                 1280 	.db #0x11
   02CE 13                 1281 	.db #0x13
   02CF 03                 1282 	.db #0x03
   02D0 01                 1283 	.db #0x01
   02D1 0B                 1284 	.db #0x0B
   02D2 09                 1285 	.db #0x09
   02D3 11                 1286 	.db #0x11
   02D4 10                 1287 	.db #0x10
   02D5 08                 1288 	.db #0x08
   02D6 0A                 1289 	.db #0x0A
   02D7 00                 1290 	.db #0x00
   02D8 02                 1291 	.db #0x02
   02D9 12                 1292 	.db #0x12
   02DA 10                 1293 	.db #0x10
   02DB 08                 1294 	.db #0x08
   02DC 0B                 1295 	.db #0x0B
   02DD 09                 1296 	.db #0x09
   02DE 11                 1297 	.db #0x11
   02DF 13                 1298 	.db #0x13
   02E0 03                 1299 	.db #0x03
   02E1 01                 1300 	.db #0x01
   02E2 0B                 1301 	.db #0x0B
   02E3 09                 1302 	.db #0x09
   02E4 08                 1303 	.db #0x08
   02E5 0A                 1304 	.db #0x0A
   02E6 00                 1305 	.db #0x00
   02E7 02                 1306 	.db #0x02
   02E8 12                 1307 	.db #0x12
   02E9 10                 1308 	.db #0x10
   02EA 08                 1309 	.db #0x08
   02EB 0A                 1310 	.db #0x0A
   02EC                    1311 _tri_up:
   02EC 0A                 1312 	.db #0x0A
   02ED 12                 1313 	.db #0x12
   02EE 10                 1314 	.db #0x10
   02EF 00                 1315 	.db #0x00
   02F0 02                 1316 	.db #0x02
   02F1 08                 1317 	.db #0x08
   02F2 0A                 1318 	.db #0x0A
   02F3 12                 1319 	.db #0x12
   02F4 13                 1320 	.db #0x13
   02F5 0B                 1321 	.db #0x0B
   02F6 09                 1322 	.db #0x09
   02F7 03                 1323 	.db #0x03
   02F8 01                 1324 	.db #0x01
   02F9 11                 1325 	.db #0x11
   02FA 13                 1326 	.db #0x13
   02FB 0B                 1327 	.db #0x0B
   02FC 12                 1328 	.db #0x12
   02FD 10                 1329 	.db #0x10
   02FE 00                 1330 	.db #0x00
   02FF 02                 1331 	.db #0x02
   0300 08                 1332 	.db #0x08
   0301 0A                 1333 	.db #0x0A
   0302 12                 1334 	.db #0x12
   0303 10                 1335 	.db #0x10
   0304 11                 1336 	.db #0x11
   0305 13                 1337 	.db #0x13
   0306 0B                 1338 	.db #0x0B
   0307 09                 1339 	.db #0x09
   0308 03                 1340 	.db #0x03
   0309 01                 1341 	.db #0x01
   030A 11                 1342 	.db #0x11
   030B 13                 1343 	.db #0x13
   030C 10                 1344 	.db #0x10
   030D 00                 1345 	.db #0x00
   030E 02                 1346 	.db #0x02
   030F 08                 1347 	.db #0x08
   0310 0A                 1348 	.db #0x0A
   0311 12                 1349 	.db #0x12
   0312 10                 1350 	.db #0x10
   0313 00                 1351 	.db #0x00
   0314 01                 1352 	.db #0x01
   0315 11                 1353 	.db #0x11
   0316 13                 1354 	.db #0x13
   0317 0B                 1355 	.db #0x0B
   0318 09                 1356 	.db #0x09
   0319 03                 1357 	.db #0x03
   031A 01                 1358 	.db #0x01
   031B 11                 1359 	.db #0x11
   031C 00                 1360 	.db #0x00
   031D 02                 1361 	.db #0x02
   031E 08                 1362 	.db #0x08
   031F 0A                 1363 	.db #0x0A
   0320 12                 1364 	.db #0x12
   0321 10                 1365 	.db #0x10
   0322 00                 1366 	.db #0x00
   0323 02                 1367 	.db #0x02
   0324 03                 1368 	.db #0x03
   0325 01                 1369 	.db #0x01
   0326 11                 1370 	.db #0x11
   0327 13                 1371 	.db #0x13
   0328 0B                 1372 	.db #0x0B
   0329 09                 1373 	.db #0x09
   032A 03                 1374 	.db #0x03
   032B 01                 1375 	.db #0x01
   032C 02                 1376 	.db #0x02
   032D 08                 1377 	.db #0x08
   032E 0A                 1378 	.db #0x0A
   032F 12                 1379 	.db #0x12
   0330 10                 1380 	.db #0x10
   0331 00                 1381 	.db #0x00
   0332 02                 1382 	.db #0x02
   0333 08                 1383 	.db #0x08
   0334 09                 1384 	.db #0x09
   0335 03                 1385 	.db #0x03
   0336 01                 1386 	.db #0x01
   0337 11                 1387 	.db #0x11
   0338 13                 1388 	.db #0x13
   0339 0B                 1389 	.db #0x0B
   033A 09                 1390 	.db #0x09
   033B 03                 1391 	.db #0x03
   033C 08                 1392 	.db #0x08
   033D 0A                 1393 	.db #0x0A
   033E 12                 1394 	.db #0x12
   033F 10                 1395 	.db #0x10
   0340 00                 1396 	.db #0x00
   0341 02                 1397 	.db #0x02
   0342 08                 1398 	.db #0x08
   0343 0A                 1399 	.db #0x0A
   0344 0B                 1400 	.db #0x0B
   0345 09                 1401 	.db #0x09
   0346 03                 1402 	.db #0x03
   0347 01                 1403 	.db #0x01
   0348 11                 1404 	.db #0x11
   0349 13                 1405 	.db #0x13
   034A 0B                 1406 	.db #0x0B
   034B 09                 1407 	.db #0x09
   034C 0A                 1408 	.db #0x0A
   034D 12                 1409 	.db #0x12
   034E 10                 1410 	.db #0x10
   034F 00                 1411 	.db #0x00
   0350 02                 1412 	.db #0x02
   0351 08                 1413 	.db #0x08
   0352 0A                 1414 	.db #0x0A
   0353 12                 1415 	.db #0x12
   0354 13                 1416 	.db #0x13
   0355 0B                 1417 	.db #0x0B
   0356 09                 1418 	.db #0x09
   0357 03                 1419 	.db #0x03
   0358 01                 1420 	.db #0x01
   0359 11                 1421 	.db #0x11
   035A 13                 1422 	.db #0x13
   035B 0B                 1423 	.db #0x0B
   035C 12                 1424 	.db #0x12
   035D 10                 1425 	.db #0x10
   035E 00                 1426 	.db #0x00
   035F 02                 1427 	.db #0x02
   0360 08                 1428 	.db #0x08
   0361 0A                 1429 	.db #0x0A
   0362 12                 1430 	.db #0x12
   0363 10                 1431 	.db #0x10
   0364 11                 1432 	.db #0x11
   0365 13                 1433 	.db #0x13
   0366 0B                 1434 	.db #0x0B
   0367 09                 1435 	.db #0x09
   0368 03                 1436 	.db #0x03
   0369 01                 1437 	.db #0x01
   036A 11                 1438 	.db #0x11
   036B 13                 1439 	.db #0x13
   036C 10                 1440 	.db #0x10
   036D 00                 1441 	.db #0x00
   036E 02                 1442 	.db #0x02
   036F 08                 1443 	.db #0x08
   0370 0A                 1444 	.db #0x0A
   0371 12                 1445 	.db #0x12
   0372 10                 1446 	.db #0x10
   0373 00                 1447 	.db #0x00
   0374 01                 1448 	.db #0x01
   0375 11                 1449 	.db #0x11
   0376 13                 1450 	.db #0x13
   0377 0B                 1451 	.db #0x0B
   0378 09                 1452 	.db #0x09
   0379 03                 1453 	.db #0x03
   037A 01                 1454 	.db #0x01
   037B 11                 1455 	.db #0x11
   037C 00                 1456 	.db #0x00
   037D 02                 1457 	.db #0x02
   037E 08                 1458 	.db #0x08
   037F 0A                 1459 	.db #0x0A
   0380 12                 1460 	.db #0x12
   0381 10                 1461 	.db #0x10
   0382 00                 1462 	.db #0x00
   0383 02                 1463 	.db #0x02
   0384 03                 1464 	.db #0x03
   0385 01                 1465 	.db #0x01
   0386 11                 1466 	.db #0x11
   0387 13                 1467 	.db #0x13
   0388 0B                 1468 	.db #0x0B
   0389 09                 1469 	.db #0x09
   038A 03                 1470 	.db #0x03
   038B 01                 1471 	.db #0x01
   038C 02                 1472 	.db #0x02
   038D 08                 1473 	.db #0x08
   038E 0A                 1474 	.db #0x0A
   038F 12                 1475 	.db #0x12
   0390 10                 1476 	.db #0x10
   0391 00                 1477 	.db #0x00
   0392 02                 1478 	.db #0x02
   0393 08                 1479 	.db #0x08
   0394 09                 1480 	.db #0x09
   0395 03                 1481 	.db #0x03
   0396 01                 1482 	.db #0x01
   0397 11                 1483 	.db #0x11
   0398 13                 1484 	.db #0x13
   0399 0B                 1485 	.db #0x0B
   039A 09                 1486 	.db #0x09
   039B 03                 1487 	.db #0x03
   039C 08                 1488 	.db #0x08
   039D 0A                 1489 	.db #0x0A
   039E 12                 1490 	.db #0x12
   039F 10                 1491 	.db #0x10
   03A0 00                 1492 	.db #0x00
   03A1 02                 1493 	.db #0x02
   03A2 08                 1494 	.db #0x08
   03A3 0A                 1495 	.db #0x0A
   03A4 0B                 1496 	.db #0x0B
   03A5 09                 1497 	.db #0x09
   03A6 03                 1498 	.db #0x03
   03A7 01                 1499 	.db #0x01
   03A8 11                 1500 	.db #0x11
   03A9 13                 1501 	.db #0x13
   03AA 0B                 1502 	.db #0x0B
   03AB 09                 1503 	.db #0x09
   03AC                    1504 _tri_dia:
   03AC 05                 1505 	.db #0x05
   03AD 1B                 1506 	.db #0x1B
   03AE 0F                 1507 	.db #0x0F
   03AF 1D                 1508 	.db #0x1D
   03B0 15                 1509 	.db #0x15
   03B1 19                 1510 	.db #0x19
   03B2 05                 1511 	.db #0x05
   03B3 1B                 1512 	.db #0x1B
   03B4 0F                 1513 	.db #0x0F
   03B5 1D                 1514 	.db #0x1D
   03B6 15                 1515 	.db #0x15
   03B7 19                 1516 	.db #0x19
   03B8 05                 1517 	.db #0x05
   03B9 1B                 1518 	.db #0x1B
   03BA 0F                 1519 	.db #0x0F
   03BB 1D                 1520 	.db #0x1D
   03BC 1D                 1521 	.db #0x1D
   03BD 05                 1522 	.db #0x05
   03BE 19                 1523 	.db #0x19
   03BF 0F                 1524 	.db #0x0F
   03C0 1B                 1525 	.db #0x1B
   03C1 15                 1526 	.db #0x15
   03C2 1D                 1527 	.db #0x1D
   03C3 05                 1528 	.db #0x05
   03C4 19                 1529 	.db #0x19
   03C5 0F                 1530 	.db #0x0F
   03C6 1B                 1531 	.db #0x1B
   03C7 15                 1532 	.db #0x15
   03C8 1D                 1533 	.db #0x1D
   03C9 05                 1534 	.db #0x05
   03CA 19                 1535 	.db #0x19
   03CB 0F                 1536 	.db #0x0F
   03CC 0F                 1537 	.db #0x0F
   03CD 1D                 1538 	.db #0x1D
   03CE 15                 1539 	.db #0x15
   03CF 19                 1540 	.db #0x19
   03D0 05                 1541 	.db #0x05
   03D1 1B                 1542 	.db #0x1B
   03D2 0F                 1543 	.db #0x0F
   03D3 1D                 1544 	.db #0x1D
   03D4 15                 1545 	.db #0x15
   03D5 19                 1546 	.db #0x19
   03D6 05                 1547 	.db #0x05
   03D7 1B                 1548 	.db #0x1B
   03D8 0F                 1549 	.db #0x0F
   03D9 1D                 1550 	.db #0x1D
   03DA 15                 1551 	.db #0x15
   03DB 19                 1552 	.db #0x19
   03DC 19                 1553 	.db #0x19
   03DD 0F                 1554 	.db #0x0F
   03DE 1B                 1555 	.db #0x1B
   03DF 15                 1556 	.db #0x15
   03E0 1D                 1557 	.db #0x1D
   03E1 05                 1558 	.db #0x05
   03E2 19                 1559 	.db #0x19
   03E3 0F                 1560 	.db #0x0F
   03E4 1B                 1561 	.db #0x1B
   03E5 15                 1562 	.db #0x15
   03E6 1D                 1563 	.db #0x1D
   03E7 05                 1564 	.db #0x05
   03E8 19                 1565 	.db #0x19
   03E9 0F                 1566 	.db #0x0F
   03EA 1B                 1567 	.db #0x1B
   03EB 15                 1568 	.db #0x15
   03EC 15                 1569 	.db #0x15
   03ED 19                 1570 	.db #0x19
   03EE 05                 1571 	.db #0x05
   03EF 1B                 1572 	.db #0x1B
   03F0 0F                 1573 	.db #0x0F
   03F1 1D                 1574 	.db #0x1D
   03F2 15                 1575 	.db #0x15
   03F3 19                 1576 	.db #0x19
   03F4 05                 1577 	.db #0x05
   03F5 1B                 1578 	.db #0x1B
   03F6 0F                 1579 	.db #0x0F
   03F7 1D                 1580 	.db #0x1D
   03F8 15                 1581 	.db #0x15
   03F9 19                 1582 	.db #0x19
   03FA 05                 1583 	.db #0x05
   03FB 1B                 1584 	.db #0x1B
   03FC 1B                 1585 	.db #0x1B
   03FD 15                 1586 	.db #0x15
   03FE 1D                 1587 	.db #0x1D
   03FF 05                 1588 	.db #0x05
   0400 19                 1589 	.db #0x19
   0401 0F                 1590 	.db #0x0F
   0402 1B                 1591 	.db #0x1B
   0403 15                 1592 	.db #0x15
   0404 1D                 1593 	.db #0x1D
   0405 05                 1594 	.db #0x05
   0406 19                 1595 	.db #0x19
   0407 0F                 1596 	.db #0x0F
   0408 1B                 1597 	.db #0x1B
   0409 15                 1598 	.db #0x15
   040A 1D                 1599 	.db #0x1D
   040B 05                 1600 	.db #0x05
   040C 05                 1601 	.db #0x05
   040D 1B                 1602 	.db #0x1B
   040E 0F                 1603 	.db #0x0F
   040F 1D                 1604 	.db #0x1D
   0410 15                 1605 	.db #0x15
   0411 19                 1606 	.db #0x19
   0412 05                 1607 	.db #0x05
   0413 1B                 1608 	.db #0x1B
   0414 0F                 1609 	.db #0x0F
   0415 1D                 1610 	.db #0x1D
   0416 15                 1611 	.db #0x15
   0417 19                 1612 	.db #0x19
   0418 05                 1613 	.db #0x05
   0419 1B                 1614 	.db #0x1B
   041A 0F                 1615 	.db #0x0F
   041B 1D                 1616 	.db #0x1D
   041C 1D                 1617 	.db #0x1D
   041D 05                 1618 	.db #0x05
   041E 19                 1619 	.db #0x19
   041F 0F                 1620 	.db #0x0F
   0420 1B                 1621 	.db #0x1B
   0421 15                 1622 	.db #0x15
   0422 1D                 1623 	.db #0x1D
   0423 05                 1624 	.db #0x05
   0424 19                 1625 	.db #0x19
   0425 0F                 1626 	.db #0x0F
   0426 1B                 1627 	.db #0x1B
   0427 15                 1628 	.db #0x15
   0428 1D                 1629 	.db #0x1D
   0429 05                 1630 	.db #0x05
   042A 19                 1631 	.db #0x19
   042B 0F                 1632 	.db #0x0F
   042C 0F                 1633 	.db #0x0F
   042D 1D                 1634 	.db #0x1D
   042E 15                 1635 	.db #0x15
   042F 19                 1636 	.db #0x19
   0430 05                 1637 	.db #0x05
   0431 1B                 1638 	.db #0x1B
   0432 0F                 1639 	.db #0x0F
   0433 1D                 1640 	.db #0x1D
   0434 15                 1641 	.db #0x15
   0435 19                 1642 	.db #0x19
   0436 05                 1643 	.db #0x05
   0437 1B                 1644 	.db #0x1B
   0438 0F                 1645 	.db #0x0F
   0439 1D                 1646 	.db #0x1D
   043A 15                 1647 	.db #0x15
   043B 19                 1648 	.db #0x19
   043C 19                 1649 	.db #0x19
   043D 0F                 1650 	.db #0x0F
   043E 1B                 1651 	.db #0x1B
   043F 15                 1652 	.db #0x15
   0440 1D                 1653 	.db #0x1D
   0441 05                 1654 	.db #0x05
   0442 19                 1655 	.db #0x19
   0443 0F                 1656 	.db #0x0F
   0444 1B                 1657 	.db #0x1B
   0445 15                 1658 	.db #0x15
   0446 1D                 1659 	.db #0x1D
   0447 05                 1660 	.db #0x05
   0448 19                 1661 	.db #0x19
   0449 0F                 1662 	.db #0x0F
   044A 1B                 1663 	.db #0x1B
   044B 15                 1664 	.db #0x15
   044C 15                 1665 	.db #0x15
   044D 19                 1666 	.db #0x19
   044E 05                 1667 	.db #0x05
   044F 1B                 1668 	.db #0x1B
   0450 0F                 1669 	.db #0x0F
   0451 1D                 1670 	.db #0x1D
   0452 15                 1671 	.db #0x15
   0453 19                 1672 	.db #0x19
   0454 05                 1673 	.db #0x05
   0455 1B                 1674 	.db #0x1B
   0456 0F                 1675 	.db #0x0F
   0457 1D                 1676 	.db #0x1D
   0458 15                 1677 	.db #0x15
   0459 19                 1678 	.db #0x19
   045A 05                 1679 	.db #0x05
   045B 1B                 1680 	.db #0x1B
   045C 1B                 1681 	.db #0x1B
   045D 15                 1682 	.db #0x15
   045E 1D                 1683 	.db #0x1D
   045F 05                 1684 	.db #0x05
   0460 19                 1685 	.db #0x19
   0461 0F                 1686 	.db #0x0F
   0462 1B                 1687 	.db #0x1B
   0463 15                 1688 	.db #0x15
   0464 1D                 1689 	.db #0x1D
   0465 05                 1690 	.db #0x05
   0466 19                 1691 	.db #0x19
   0467 0F                 1692 	.db #0x0F
   0468 1B                 1693 	.db #0x1B
   0469 15                 1694 	.db #0x15
   046A 1D                 1695 	.db #0x1D
   046B 05                 1696 	.db #0x05
   046C                    1697 _tri_side1:
   046C 0A                 1698 	.db #0x0A
   046D 12                 1699 	.db #0x12
   046E 10                 1700 	.db #0x10
   046F 00                 1701 	.db #0x00
   0470 02                 1702 	.db #0x02
   0471 08                 1703 	.db #0x08
   0472 0A                 1704 	.db #0x0A
   0473 12                 1705 	.db #0x12
   0474 10                 1706 	.db #0x10
   0475 00                 1707 	.db #0x00
   0476 02                 1708 	.db #0x02
   0477 08                 1709 	.db #0x08
   0478 0A                 1710 	.db #0x0A
   0479 12                 1711 	.db #0x12
   047A 10                 1712 	.db #0x10
   047B 00                 1713 	.db #0x00
   047C 12                 1714 	.db #0x12
   047D 10                 1715 	.db #0x10
   047E 00                 1716 	.db #0x00
   047F 02                 1717 	.db #0x02
   0480 08                 1718 	.db #0x08
   0481 0A                 1719 	.db #0x0A
   0482 12                 1720 	.db #0x12
   0483 10                 1721 	.db #0x10
   0484 00                 1722 	.db #0x00
   0485 02                 1723 	.db #0x02
   0486 08                 1724 	.db #0x08
   0487 0A                 1725 	.db #0x0A
   0488 12                 1726 	.db #0x12
   0489 10                 1727 	.db #0x10
   048A 00                 1728 	.db #0x00
   048B 02                 1729 	.db #0x02
   048C 10                 1730 	.db #0x10
   048D 00                 1731 	.db #0x00
   048E 02                 1732 	.db #0x02
   048F 08                 1733 	.db #0x08
   0490 0A                 1734 	.db #0x0A
   0491 12                 1735 	.db #0x12
   0492 10                 1736 	.db #0x10
   0493 00                 1737 	.db #0x00
   0494 02                 1738 	.db #0x02
   0495 08                 1739 	.db #0x08
   0496 0A                 1740 	.db #0x0A
   0497 12                 1741 	.db #0x12
   0498 10                 1742 	.db #0x10
   0499 00                 1743 	.db #0x00
   049A 02                 1744 	.db #0x02
   049B 08                 1745 	.db #0x08
   049C 00                 1746 	.db #0x00
   049D 02                 1747 	.db #0x02
   049E 08                 1748 	.db #0x08
   049F 0A                 1749 	.db #0x0A
   04A0 12                 1750 	.db #0x12
   04A1 10                 1751 	.db #0x10
   04A2 00                 1752 	.db #0x00
   04A3 02                 1753 	.db #0x02
   04A4 08                 1754 	.db #0x08
   04A5 0A                 1755 	.db #0x0A
   04A6 12                 1756 	.db #0x12
   04A7 10                 1757 	.db #0x10
   04A8 00                 1758 	.db #0x00
   04A9 02                 1759 	.db #0x02
   04AA 08                 1760 	.db #0x08
   04AB 0A                 1761 	.db #0x0A
   04AC 02                 1762 	.db #0x02
   04AD 08                 1763 	.db #0x08
   04AE 0A                 1764 	.db #0x0A
   04AF 12                 1765 	.db #0x12
   04B0 10                 1766 	.db #0x10
   04B1 00                 1767 	.db #0x00
   04B2 02                 1768 	.db #0x02
   04B3 08                 1769 	.db #0x08
   04B4 0A                 1770 	.db #0x0A
   04B5 12                 1771 	.db #0x12
   04B6 10                 1772 	.db #0x10
   04B7 00                 1773 	.db #0x00
   04B8 02                 1774 	.db #0x02
   04B9 08                 1775 	.db #0x08
   04BA 0A                 1776 	.db #0x0A
   04BB 12                 1777 	.db #0x12
   04BC 08                 1778 	.db #0x08
   04BD 0A                 1779 	.db #0x0A
   04BE 12                 1780 	.db #0x12
   04BF 10                 1781 	.db #0x10
   04C0 00                 1782 	.db #0x00
   04C1 02                 1783 	.db #0x02
   04C2 08                 1784 	.db #0x08
   04C3 0A                 1785 	.db #0x0A
   04C4 12                 1786 	.db #0x12
   04C5 10                 1787 	.db #0x10
   04C6 00                 1788 	.db #0x00
   04C7 02                 1789 	.db #0x02
   04C8 08                 1790 	.db #0x08
   04C9 0A                 1791 	.db #0x0A
   04CA 12                 1792 	.db #0x12
   04CB 10                 1793 	.db #0x10
   04CC 0A                 1794 	.db #0x0A
   04CD 12                 1795 	.db #0x12
   04CE 10                 1796 	.db #0x10
   04CF 00                 1797 	.db #0x00
   04D0 02                 1798 	.db #0x02
   04D1 08                 1799 	.db #0x08
   04D2 0A                 1800 	.db #0x0A
   04D3 12                 1801 	.db #0x12
   04D4 10                 1802 	.db #0x10
   04D5 00                 1803 	.db #0x00
   04D6 02                 1804 	.db #0x02
   04D7 08                 1805 	.db #0x08
   04D8 0A                 1806 	.db #0x0A
   04D9 12                 1807 	.db #0x12
   04DA 10                 1808 	.db #0x10
   04DB 00                 1809 	.db #0x00
   04DC 12                 1810 	.db #0x12
   04DD 10                 1811 	.db #0x10
   04DE 00                 1812 	.db #0x00
   04DF 02                 1813 	.db #0x02
   04E0 08                 1814 	.db #0x08
   04E1 0A                 1815 	.db #0x0A
   04E2 12                 1816 	.db #0x12
   04E3 10                 1817 	.db #0x10
   04E4 00                 1818 	.db #0x00
   04E5 02                 1819 	.db #0x02
   04E6 08                 1820 	.db #0x08
   04E7 0A                 1821 	.db #0x0A
   04E8 12                 1822 	.db #0x12
   04E9 10                 1823 	.db #0x10
   04EA 00                 1824 	.db #0x00
   04EB 02                 1825 	.db #0x02
   04EC 10                 1826 	.db #0x10
   04ED 00                 1827 	.db #0x00
   04EE 02                 1828 	.db #0x02
   04EF 08                 1829 	.db #0x08
   04F0 0A                 1830 	.db #0x0A
   04F1 12                 1831 	.db #0x12
   04F2 10                 1832 	.db #0x10
   04F3 00                 1833 	.db #0x00
   04F4 02                 1834 	.db #0x02
   04F5 08                 1835 	.db #0x08
   04F6 0A                 1836 	.db #0x0A
   04F7 12                 1837 	.db #0x12
   04F8 10                 1838 	.db #0x10
   04F9 00                 1839 	.db #0x00
   04FA 02                 1840 	.db #0x02
   04FB 08                 1841 	.db #0x08
   04FC 00                 1842 	.db #0x00
   04FD 02                 1843 	.db #0x02
   04FE 08                 1844 	.db #0x08
   04FF 0A                 1845 	.db #0x0A
   0500 12                 1846 	.db #0x12
   0501 10                 1847 	.db #0x10
   0502 00                 1848 	.db #0x00
   0503 02                 1849 	.db #0x02
   0504 08                 1850 	.db #0x08
   0505 0A                 1851 	.db #0x0A
   0506 12                 1852 	.db #0x12
   0507 10                 1853 	.db #0x10
   0508 00                 1854 	.db #0x00
   0509 02                 1855 	.db #0x02
   050A 08                 1856 	.db #0x08
   050B 0A                 1857 	.db #0x0A
   050C 02                 1858 	.db #0x02
   050D 08                 1859 	.db #0x08
   050E 0A                 1860 	.db #0x0A
   050F 12                 1861 	.db #0x12
   0510 10                 1862 	.db #0x10
   0511 00                 1863 	.db #0x00
   0512 02                 1864 	.db #0x02
   0513 08                 1865 	.db #0x08
   0514 0A                 1866 	.db #0x0A
   0515 12                 1867 	.db #0x12
   0516 10                 1868 	.db #0x10
   0517 00                 1869 	.db #0x00
   0518 02                 1870 	.db #0x02
   0519 08                 1871 	.db #0x08
   051A 0A                 1872 	.db #0x0A
   051B 12                 1873 	.db #0x12
   051C 08                 1874 	.db #0x08
   051D 0A                 1875 	.db #0x0A
   051E 12                 1876 	.db #0x12
   051F 10                 1877 	.db #0x10
   0520 00                 1878 	.db #0x00
   0521 02                 1879 	.db #0x02
   0522 08                 1880 	.db #0x08
   0523 0A                 1881 	.db #0x0A
   0524 12                 1882 	.db #0x12
   0525 10                 1883 	.db #0x10
   0526 00                 1884 	.db #0x00
   0527 02                 1885 	.db #0x02
   0528 08                 1886 	.db #0x08
   0529 0A                 1887 	.db #0x0A
   052A 12                 1888 	.db #0x12
   052B 10                 1889 	.db #0x10
   052C                    1890 _tri_side2:
   052C 00                 1891 	.db #0x00
   052D 10                 1892 	.db #0x10
   052E 12                 1893 	.db #0x12
   052F 0A                 1894 	.db #0x0A
   0530 08                 1895 	.db #0x08
   0531 02                 1896 	.db #0x02
   0532 00                 1897 	.db #0x00
   0533 10                 1898 	.db #0x10
   0534 12                 1899 	.db #0x12
   0535 0A                 1900 	.db #0x0A
   0536 08                 1901 	.db #0x08
   0537 02                 1902 	.db #0x02
   0538 00                 1903 	.db #0x00
   0539 10                 1904 	.db #0x10
   053A 12                 1905 	.db #0x12
   053B 0A                 1906 	.db #0x0A
   053C 02                 1907 	.db #0x02
   053D 00                 1908 	.db #0x00
   053E 10                 1909 	.db #0x10
   053F 12                 1910 	.db #0x12
   0540 0A                 1911 	.db #0x0A
   0541 08                 1912 	.db #0x08
   0542 02                 1913 	.db #0x02
   0543 00                 1914 	.db #0x00
   0544 10                 1915 	.db #0x10
   0545 12                 1916 	.db #0x12
   0546 0A                 1917 	.db #0x0A
   0547 08                 1918 	.db #0x08
   0548 02                 1919 	.db #0x02
   0549 00                 1920 	.db #0x00
   054A 10                 1921 	.db #0x10
   054B 12                 1922 	.db #0x12
   054C 08                 1923 	.db #0x08
   054D 02                 1924 	.db #0x02
   054E 00                 1925 	.db #0x00
   054F 10                 1926 	.db #0x10
   0550 12                 1927 	.db #0x12
   0551 0A                 1928 	.db #0x0A
   0552 08                 1929 	.db #0x08
   0553 02                 1930 	.db #0x02
   0554 00                 1931 	.db #0x00
   0555 10                 1932 	.db #0x10
   0556 12                 1933 	.db #0x12
   0557 0A                 1934 	.db #0x0A
   0558 08                 1935 	.db #0x08
   0559 02                 1936 	.db #0x02
   055A 00                 1937 	.db #0x00
   055B 10                 1938 	.db #0x10
   055C 0A                 1939 	.db #0x0A
   055D 08                 1940 	.db #0x08
   055E 02                 1941 	.db #0x02
   055F 00                 1942 	.db #0x00
   0560 10                 1943 	.db #0x10
   0561 12                 1944 	.db #0x12
   0562 0A                 1945 	.db #0x0A
   0563 08                 1946 	.db #0x08
   0564 02                 1947 	.db #0x02
   0565 00                 1948 	.db #0x00
   0566 10                 1949 	.db #0x10
   0567 12                 1950 	.db #0x12
   0568 0A                 1951 	.db #0x0A
   0569 08                 1952 	.db #0x08
   056A 02                 1953 	.db #0x02
   056B 00                 1954 	.db #0x00
   056C 12                 1955 	.db #0x12
   056D 0A                 1956 	.db #0x0A
   056E 08                 1957 	.db #0x08
   056F 02                 1958 	.db #0x02
   0570 00                 1959 	.db #0x00
   0571 10                 1960 	.db #0x10
   0572 12                 1961 	.db #0x12
   0573 0A                 1962 	.db #0x0A
   0574 08                 1963 	.db #0x08
   0575 02                 1964 	.db #0x02
   0576 00                 1965 	.db #0x00
   0577 10                 1966 	.db #0x10
   0578 12                 1967 	.db #0x12
   0579 0A                 1968 	.db #0x0A
   057A 08                 1969 	.db #0x08
   057B 02                 1970 	.db #0x02
   057C 10                 1971 	.db #0x10
   057D 12                 1972 	.db #0x12
   057E 0A                 1973 	.db #0x0A
   057F 08                 1974 	.db #0x08
   0580 02                 1975 	.db #0x02
   0581 00                 1976 	.db #0x00
   0582 10                 1977 	.db #0x10
   0583 12                 1978 	.db #0x12
   0584 0A                 1979 	.db #0x0A
   0585 08                 1980 	.db #0x08
   0586 02                 1981 	.db #0x02
   0587 00                 1982 	.db #0x00
   0588 10                 1983 	.db #0x10
   0589 12                 1984 	.db #0x12
   058A 0A                 1985 	.db #0x0A
   058B 08                 1986 	.db #0x08
   058C 00                 1987 	.db #0x00
   058D 10                 1988 	.db #0x10
   058E 12                 1989 	.db #0x12
   058F 0A                 1990 	.db #0x0A
   0590 08                 1991 	.db #0x08
   0591 02                 1992 	.db #0x02
   0592 00                 1993 	.db #0x00
   0593 10                 1994 	.db #0x10
   0594 12                 1995 	.db #0x12
   0595 0A                 1996 	.db #0x0A
   0596 08                 1997 	.db #0x08
   0597 02                 1998 	.db #0x02
   0598 00                 1999 	.db #0x00
   0599 10                 2000 	.db #0x10
   059A 12                 2001 	.db #0x12
   059B 0A                 2002 	.db #0x0A
   059C 02                 2003 	.db #0x02
   059D 00                 2004 	.db #0x00
   059E 10                 2005 	.db #0x10
   059F 12                 2006 	.db #0x12
   05A0 0A                 2007 	.db #0x0A
   05A1 08                 2008 	.db #0x08
   05A2 02                 2009 	.db #0x02
   05A3 00                 2010 	.db #0x00
   05A4 10                 2011 	.db #0x10
   05A5 12                 2012 	.db #0x12
   05A6 0A                 2013 	.db #0x0A
   05A7 08                 2014 	.db #0x08
   05A8 02                 2015 	.db #0x02
   05A9 00                 2016 	.db #0x00
   05AA 10                 2017 	.db #0x10
   05AB 12                 2018 	.db #0x12
   05AC 08                 2019 	.db #0x08
   05AD 02                 2020 	.db #0x02
   05AE 00                 2021 	.db #0x00
   05AF 10                 2022 	.db #0x10
   05B0 12                 2023 	.db #0x12
   05B1 0A                 2024 	.db #0x0A
   05B2 08                 2025 	.db #0x08
   05B3 02                 2026 	.db #0x02
   05B4 00                 2027 	.db #0x00
   05B5 10                 2028 	.db #0x10
   05B6 12                 2029 	.db #0x12
   05B7 0A                 2030 	.db #0x0A
   05B8 08                 2031 	.db #0x08
   05B9 02                 2032 	.db #0x02
   05BA 00                 2033 	.db #0x00
   05BB 10                 2034 	.db #0x10
   05BC 0A                 2035 	.db #0x0A
   05BD 08                 2036 	.db #0x08
   05BE 02                 2037 	.db #0x02
   05BF 00                 2038 	.db #0x00
   05C0 10                 2039 	.db #0x10
   05C1 12                 2040 	.db #0x12
   05C2 0A                 2041 	.db #0x0A
   05C3 08                 2042 	.db #0x08
   05C4 02                 2043 	.db #0x02
   05C5 00                 2044 	.db #0x00
   05C6 10                 2045 	.db #0x10
   05C7 12                 2046 	.db #0x12
   05C8 0A                 2047 	.db #0x0A
   05C9 08                 2048 	.db #0x08
   05CA 02                 2049 	.db #0x02
   05CB 00                 2050 	.db #0x00
   05CC 12                 2051 	.db #0x12
   05CD 0A                 2052 	.db #0x0A
   05CE 08                 2053 	.db #0x08
   05CF 02                 2054 	.db #0x02
   05D0 00                 2055 	.db #0x00
   05D1 10                 2056 	.db #0x10
   05D2 12                 2057 	.db #0x12
   05D3 0A                 2058 	.db #0x0A
   05D4 08                 2059 	.db #0x08
   05D5 02                 2060 	.db #0x02
   05D6 00                 2061 	.db #0x00
   05D7 10                 2062 	.db #0x10
   05D8 12                 2063 	.db #0x12
   05D9 0A                 2064 	.db #0x0A
   05DA 08                 2065 	.db #0x08
   05DB 02                 2066 	.db #0x02
   05DC 10                 2067 	.db #0x10
   05DD 12                 2068 	.db #0x12
   05DE 0A                 2069 	.db #0x0A
   05DF 08                 2070 	.db #0x08
   05E0 02                 2071 	.db #0x02
   05E1 00                 2072 	.db #0x00
   05E2 10                 2073 	.db #0x10
   05E3 12                 2074 	.db #0x12
   05E4 0A                 2075 	.db #0x0A
   05E5 08                 2076 	.db #0x08
   05E6 02                 2077 	.db #0x02
   05E7 00                 2078 	.db #0x00
   05E8 10                 2079 	.db #0x10
   05E9 12                 2080 	.db #0x12
   05EA 0A                 2081 	.db #0x0A
   05EB 08                 2082 	.db #0x08
                           2083 ;demo.c:141: void my_isr(void) interrupt
                           2084 ;	---------------------------------
                           2085 ; Function my_isr
                           2086 ; ---------------------------------
   05EC                    2087 _my_isr_start::
   05EC                    2088 _my_isr:
   05EC F5                 2089 	push	af
   05ED C5                 2090 	push	bc
   05EE D5                 2091 	push	de
   05EF E5                 2092 	push	hl
   05F0 FD E5              2093 	push	iy
                           2094 ;demo.c:143: DI;
   05F2 F3                 2095 		di 
                           2096 ;demo.c:145: READ_VDP_STATUS;
   05F3 DB 99              2097 		in a,(#0x99) 
                           2098 ;demo.c:147: PLY_Play();
   05F5 CDr00s00           2099 	call	_PLY_Play
                           2100 ;demo.c:148: PLY_SendRegisters();
   05F8 CDr00s00           2101 	call	_PLY_SendRegisters
                           2102 ;demo.c:150: vbicount+=1;
   05FB FD 21r14s41        2103 	ld	iy,#_vbicount
   05FF FD 34 00           2104 	inc	0 (iy)
   0602 20 07              2105 	jr	NZ,00103$
   0604 FD 21r14s41        2106 	ld	iy,#_vbicount
   0608 FD 34 01           2107 	inc	1 (iy)
   060B                    2108 00103$:
                           2109 ;demo.c:151: tick++;
   060B FD 21r16s41        2110 	ld	iy,#_tick
   060F FD 34 00           2111 	inc	0 (iy)
   0612 20 07              2112 	jr	NZ,00104$
   0614 FD 21r16s41        2113 	ld	iy,#_tick
   0618 FD 34 01           2114 	inc	1 (iy)
   061B                    2115 00104$:
                           2116 ;demo.c:153: EI;
   061B FB                 2117 		ei 
   061C FD E1              2118 	pop	iy
   061E E1                 2119 	pop	hl
   061F D1                 2120 	pop	de
   0620 C1                 2121 	pop	bc
   0621 F1                 2122 	pop	af
   0622 ED 4D              2123 	reti
   0624                    2124 _my_isr_end::
                           2125 ;demo.c:156: void color_isr(void) interrupt
                           2126 ;	---------------------------------
                           2127 ; Function color_isr
                           2128 ; ---------------------------------
   0624                    2129 _color_isr_start::
   0624                    2130 _color_isr:
   0624 F5                 2131 	push	af
   0625 C5                 2132 	push	bc
   0626 D5                 2133 	push	de
   0627 E5                 2134 	push	hl
   0628 FD E5              2135 	push	iy
                           2136 ;demo.c:158: DI;
   062A F3                 2137 		di 
                           2138 ;demo.c:160: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              2139 	ld	a,#0x01
   062D F5                 2140 	push	af
   062E 33                 2141 	inc	sp
   062F CDr00s00           2142 	call	_vdp2_status
   0632 33                 2143 	inc	sp
   0633 4D                 2144 	ld	c,l
   0634 21 00 00           2145 	ld	hl,#0x0000
   0637 E5                 2146 	push	hl
   0638 79                 2147 	ld	a,c
   0639 F5                 2148 	push	af
   063A 33                 2149 	inc	sp
   063B CDr00s00           2150 	call	_isNthBitSet
   063E F1                 2151 	pop	af
   063F 33                 2152 	inc	sp
   0640 44                 2153 	ld	b,h
   0641 4D                 2154 	ld	c,l
   0642 79                 2155 	ld	a,c
   0643 B0                 2156 	or	a,b
   0644 28 19              2157 	jr	Z,00102$
                           2158 ;demo.c:161: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r14s41           2159 	ld	hl,#_vbicount + 0
   0649 4E                 2160 	ld	c,(hl)
   064A 06 00              2161 	ld	b,#0x00
   064C 21r00s00           2162 	ld	hl,#_sintab
   064F 09                 2163 	add	hl,bc
   0650 7E                 2164 	ld	a,(hl)
   0651 F5                 2165 	push	af
   0652 33                 2166 	inc	sp
   0653 3E 17              2167 	ld	a,#0x17
   0655 F5                 2168 	push	af
   0656 33                 2169 	inc	sp
   0657 CDr00s00           2170 	call	_vdp_register
   065A F1                 2171 	pop	af
                           2172 ;demo.c:162: READ_VDP_STATUS;
   065B DB 99              2173 		in a,(#0x99) 
   065D 18 18              2174 	jr	00103$
   065F                    2175 00102$:
                           2176 ;demo.c:165: READ_VDP_STATUS;
   065F DB 99              2177 		in a,(#0x99) 
                           2178 ;demo.c:166: vbicount++;
   0661 FD 21r14s41        2179 	ld	iy,#_vbicount
   0665 FD 34 00           2180 	inc	0 (iy)
   0668 20 07              2181 	jr	NZ,00107$
   066A FD 21r14s41        2182 	ld	iy,#_vbicount
   066E FD 34 01           2183 	inc	1 (iy)
   0671                    2184 00107$:
                           2185 ;demo.c:169: PLY_Play();
   0671 CDr00s00           2186 	call	_PLY_Play
                           2187 ;demo.c:170: PLY_SendRegisters();
   0674 CDr00s00           2188 	call	_PLY_SendRegisters
   0677                    2189 00103$:
                           2190 ;demo.c:173: EI;
   0677 FB                 2191 		ei 
   0678 FD E1              2192 	pop	iy
   067A E1                 2193 	pop	hl
   067B D1                 2194 	pop	de
   067C C1                 2195 	pop	bc
   067D F1                 2196 	pop	af
   067E ED 4D              2197 	reti
   0680                    2198 _color_isr_end::
                           2199 ;demo.c:180: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2200 ;	---------------------------------
                           2201 ; Function ge5_load
                           2202 ; ---------------------------------
   0680                    2203 _ge5_load_start::
   0680                    2204 _ge5_load:
   0680 DD E5              2205 	push	ix
   0682 DD 21 00 00        2206 	ld	ix,#0
   0686 DD 39              2207 	add	ix,sp
   0688 21 D2 FF           2208 	ld	hl,#-46
   068B 39                 2209 	add	hl,sp
   068C F9                 2210 	ld	sp,hl
                           2211 ;demo.c:184: if(debugprint == 1) {
   068D DD 7E 09           2212 	ld	a,9 (ix)
   0690 D6 01              2213 	sub	a,#0x01
   0692 20 06              2214 	jr	NZ,00125$
   0694 DD 7E 0A           2215 	ld	a,10 (ix)
   0697 B7                 2216 	or	a,a
   0698 28 02              2217 	jr	Z,00126$
   069A                    2218 00125$:
   069A 18 1B              2219 	jr	00102$
   069C                    2220 00126$:
                           2221 ;demo.c:185: puts("loading ge5file: ");
   069C 21r7Bs07           2222 	ld	hl,#__str_0
   069F E5                 2223 	push	hl
   06A0 CDr00s00           2224 	call	_puts
   06A3 F1                 2225 	pop	af
                           2226 ;demo.c:186: puts(file_name);
   06A4 DD 6E 04           2227 	ld	l,4 (ix)
   06A7 DD 66 05           2228 	ld	h,5 (ix)
   06AA E5                 2229 	push	hl
   06AB CDr00s00           2230 	call	_puts
   06AE F1                 2231 	pop	af
                           2232 ;demo.c:187: puts("\r\n");
   06AF 21r8Ds07           2233 	ld	hl,#__str_1
   06B2 E5                 2234 	push	hl
   06B3 CDr00s00           2235 	call	_puts
   06B6 F1                 2236 	pop	af
   06B7                    2237 00102$:
                           2238 ;demo.c:190: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2239 	ld	hl,#0x0000
   06BA 39                 2240 	add	hl,sp
   06BB 4D                 2241 	ld	c,l
   06BC 44                 2242 	ld	b,h
   06BD 21 2E 00           2243 	ld	hl,#0x002E
   06C0 E5                 2244 	push	hl
   06C1 3E 00              2245 	ld	a,#0x00
   06C3 F5                 2246 	push	af
   06C4 33                 2247 	inc	sp
   06C5 C5                 2248 	push	bc
   06C6 CDr00s00           2249 	call	_memset
   06C9 F1                 2250 	pop	af
   06CA F1                 2251 	pop	af
   06CB 33                 2252 	inc	sp
                           2253 ;demo.c:192: f.record_size = 128;
   06CC 21 00 00           2254 	ld	hl,#0x0000
   06CF 39                 2255 	add	hl,sp
   06D0 4D                 2256 	ld	c,l
   06D1 44                 2257 	ld	b,h
   06D2 21 0F 00           2258 	ld	hl,#0x000F
   06D5 09                 2259 	add	hl,bc
   06D6 EB                 2260 	ex	de,hl
   06D7 3E 80              2261 	ld	a,#0x80
   06D9 12                 2262 	ld	(de),a
                           2263 ;demo.c:193: f.drive = 0;
   06DA 3E 00              2264 	ld	a,#0x00
   06DC 02                 2265 	ld	(bc),a
                           2266 ;demo.c:195: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2267 	ld	e,4 (ix)
   06E0 DD 56 05           2268 	ld	d,5 (ix)
   06E3 03                 2269 	inc	bc
   06E4 21 0B 00           2270 	ld	hl,#0x000B
   06E7 E5                 2271 	push	hl
   06E8 D5                 2272 	push	de
   06E9 C5                 2273 	push	bc
   06EA CDr00s00           2274 	call	_memcpy
   06ED F1                 2275 	pop	af
   06EE F1                 2276 	pop	af
   06EF F1                 2277 	pop	af
                           2278 ;demo.c:197: if (open(&f) != 0) return 0;
   06F0 21 00 00           2279 	ld	hl,#0x0000
   06F3 39                 2280 	add	hl,sp
   06F4 E5                 2281 	push	hl
   06F5 CDr00s00           2282 	call	_open
   06F8 F1                 2283 	pop	af
   06F9 AF                 2284 	xor	a,a
   06FA B5                 2285 	or	a,l
   06FB 28 05              2286 	jr	Z,00104$
   06FD 2E 00              2287 	ld	l,#0x00
   06FF C3r76s07           2288 	jp	00116$
   0702                    2289 00104$:
                           2290 ;demo.c:198: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2291 	ld	l,7 (ix)
   0705 DD 66 08           2292 	ld	h,8 (ix)
   0708 E5                 2293 	push	hl
   0709 DD 7E 06           2294 	ld	a,6 (ix)
   070C F5                 2295 	push	af
   070D 33                 2296 	inc	sp
   070E CDr00s00           2297 	call	_vdp_set_write_address
   0711 F1                 2298 	pop	af
   0712 33                 2299 	inc	sp
                           2300 ;demo.c:200: for (i = 0; i < 213; i++) {
   0713 0E 00              2301 	ld	c,#0x00
   0715                    2302 00112$:
   0715 79                 2303 	ld	a,c
   0716 D6 D5              2304 	sub	a,#0xD5
   0718 D2r6Bs07           2305 	jp	NC,00115$
                           2306 ;demo.c:201: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2307 	push	bc
   071C 21rF4s3F           2308 	ld	hl,#_scratch
   071F E5                 2309 	push	hl
   0720 CDr00s00           2310 	call	_block_set_data_ptr
   0723 F1                 2311 	pop	af
   0724 7D                 2312 	ld	a,l
   0725 C1                 2313 	pop	bc
   0726 47                 2314 	ld	b,a
   0727 B7                 2315 	or	a,a
   0728 28 05              2316 	jr	Z,00106$
   072A 2E 00              2317 	ld	l,#0x00
   072C C3r76s07           2318 	jp	00116$
   072F                    2319 00106$:
                           2320 ;demo.c:202: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2321 	ld	hl,#0x0000
   0732 39                 2322 	add	hl,sp
   0733 C5                 2323 	push	bc
   0734 E5                 2324 	push	hl
   0735 CDr00s00           2325 	call	_block_read
   0738 F1                 2326 	pop	af
   0739 7D                 2327 	ld	a,l
   073A C1                 2328 	pop	bc
   073B 47                 2329 	ld	b,a
   073C B7                 2330 	or	a,a
   073D 28 04              2331 	jr	Z,00108$
   073F 2E 00              2332 	ld	l,#0x00
   0741 18 33              2333 	jr	00116$
   0743                    2334 00108$:
                           2335 ;demo.c:204: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2336 	xor	a,a
   0744 B1                 2337 	or	a,c
   0745 20 11              2338 	jr	NZ,00110$
   0747 11rFBs3F           2339 	ld	de,#_scratch + 7
   074A C5                 2340 	push	bc
   074B 3E 79              2341 	ld	a,#0x79
   074D F5                 2342 	push	af
   074E 33                 2343 	inc	sp
   074F D5                 2344 	push	de
   0750 CDr00s00           2345 	call	_vdp_load_screen
   0753 F1                 2346 	pop	af
   0754 33                 2347 	inc	sp
   0755 C1                 2348 	pop	bc
   0756 18 0F              2349 	jr	00114$
   0758                    2350 00110$:
                           2351 ;demo.c:205: else vdp_load_screen(scratch, 128);
   0758 C5                 2352 	push	bc
   0759 3E 80              2353 	ld	a,#0x80
   075B F5                 2354 	push	af
   075C 33                 2355 	inc	sp
   075D 21rF4s3F           2356 	ld	hl,#_scratch
   0760 E5                 2357 	push	hl
   0761 CDr00s00           2358 	call	_vdp_load_screen
   0764 F1                 2359 	pop	af
   0765 33                 2360 	inc	sp
   0766 C1                 2361 	pop	bc
   0767                    2362 00114$:
                           2363 ;demo.c:200: for (i = 0; i < 213; i++) {
   0767 0C                 2364 	inc	c
   0768 C3r15s07           2365 	jp	00112$
   076B                    2366 00115$:
                           2367 ;demo.c:208: close(&f);
   076B 21 00 00           2368 	ld	hl,#0x0000
   076E 39                 2369 	add	hl,sp
   076F E5                 2370 	push	hl
   0770 CDr00s00           2371 	call	_close
   0773 F1                 2372 	pop	af
                           2373 ;demo.c:210: return 1;
   0774 2E 01              2374 	ld	l,#0x01
   0776                    2375 00116$:
   0776 DD F9              2376 	ld	sp,ix
   0778 DD E1              2377 	pop	ix
   077A C9                 2378 	ret
   077B                    2379 _ge5_load_end::
   077B                    2380 __str_0:
   077B 6C 6F 61 64 69 6E  2381 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2382 	.db 0x00
   078D                    2383 __str_1:
   078D 0D                 2384 	.db 0x0D
   078E 0A                 2385 	.db 0x0A
   078F 00                 2386 	.db 0x00
                           2387 ;demo.c:213: void scratch_clear() {
                           2388 ;	---------------------------------
                           2389 ; Function scratch_clear
                           2390 ; ---------------------------------
   0790                    2391 _scratch_clear_start::
   0790                    2392 _scratch_clear:
                           2393 ;demo.c:214: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2394 	ld	hl,#0x0080
   0793 E5                 2395 	push	hl
   0794 3E 00              2396 	ld	a,#0x00
   0796 F5                 2397 	push	af
   0797 33                 2398 	inc	sp
   0798 21rF4s3F           2399 	ld	hl,#_scratch
   079B E5                 2400 	push	hl
   079C CDr00s00           2401 	call	_memset
   079F F1                 2402 	pop	af
   07A0 F1                 2403 	pop	af
   07A1 33                 2404 	inc	sp
   07A2 C9                 2405 	ret
   07A3                    2406 _scratch_clear_end::
                           2407 ;demo.c:217: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2408 ;	---------------------------------
                           2409 ; Function pal_load
                           2410 ; ---------------------------------
   07A3                    2411 _pal_load_start::
   07A3                    2412 _pal_load:
   07A3 DD E5              2413 	push	ix
   07A5 DD 21 00 00        2414 	ld	ix,#0
   07A9 DD 39              2415 	add	ix,sp
   07AB 21 D2 FF           2416 	ld	hl,#-46
   07AE 39                 2417 	add	hl,sp
   07AF F9                 2418 	ld	sp,hl
                           2419 ;demo.c:220: if(debugprint == 1) {
   07B0 DD 7E 07           2420 	ld	a,7 (ix)
   07B3 D6 01              2421 	sub	a,#0x01
   07B5 20 06              2422 	jr	NZ,00115$
   07B7 DD 7E 08           2423 	ld	a,8 (ix)
   07BA B7                 2424 	or	a,a
   07BB 28 02              2425 	jr	Z,00116$
   07BD                    2426 00115$:
   07BD 18 1B              2427 	jr	00102$
   07BF                    2428 00116$:
                           2429 ;demo.c:221: puts("loading palfile: ");
   07BF 21r6Ds08           2430 	ld	hl,#__str_2
   07C2 E5                 2431 	push	hl
   07C3 CDr00s00           2432 	call	_puts
   07C6 F1                 2433 	pop	af
                           2434 ;demo.c:222: puts(file_name);
   07C7 DD 6E 04           2435 	ld	l,4 (ix)
   07CA DD 66 05           2436 	ld	h,5 (ix)
   07CD E5                 2437 	push	hl
   07CE CDr00s00           2438 	call	_puts
   07D1 F1                 2439 	pop	af
                           2440 ;demo.c:223: puts("\r\n");
   07D2 21r7Fs08           2441 	ld	hl,#__str_3
   07D5 E5                 2442 	push	hl
   07D6 CDr00s00           2443 	call	_puts
   07D9 F1                 2444 	pop	af
   07DA                    2445 00102$:
                           2446 ;demo.c:226: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2447 	ld	hl,#0x0000
   07DD 39                 2448 	add	hl,sp
   07DE 4D                 2449 	ld	c,l
   07DF 44                 2450 	ld	b,h
   07E0 21 2E 00           2451 	ld	hl,#0x002E
   07E3 E5                 2452 	push	hl
   07E4 3E 00              2453 	ld	a,#0x00
   07E6 F5                 2454 	push	af
   07E7 33                 2455 	inc	sp
   07E8 C5                 2456 	push	bc
   07E9 CDr00s00           2457 	call	_memset
   07EC F1                 2458 	pop	af
   07ED F1                 2459 	pop	af
   07EE 33                 2460 	inc	sp
                           2461 ;demo.c:227: scratch_clear();
   07EF CDr90s07           2462 	call	_scratch_clear
                           2463 ;demo.c:229: f.record_size = ss;
   07F2 21 00 00           2464 	ld	hl,#0x0000
   07F5 39                 2465 	add	hl,sp
   07F6 4D                 2466 	ld	c,l
   07F7 44                 2467 	ld	b,h
   07F8 21 0F 00           2468 	ld	hl,#0x000F
   07FB 09                 2469 	add	hl,bc
   07FC EB                 2470 	ex	de,hl
   07FD DD 7E 06           2471 	ld	a,6 (ix)
   0800 12                 2472 	ld	(de),a
                           2473 ;demo.c:230: f.drive = 0;
   0801 3E 00              2474 	ld	a,#0x00
   0803 02                 2475 	ld	(bc),a
                           2476 ;demo.c:232: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2477 	ld	e,4 (ix)
   0807 DD 56 05           2478 	ld	d,5 (ix)
   080A 03                 2479 	inc	bc
   080B 21 0B 00           2480 	ld	hl,#0x000B
   080E E5                 2481 	push	hl
   080F D5                 2482 	push	de
   0810 C5                 2483 	push	bc
   0811 CDr00s00           2484 	call	_memcpy
   0814 F1                 2485 	pop	af
   0815 F1                 2486 	pop	af
   0816 F1                 2487 	pop	af
                           2488 ;demo.c:234: if (open(&f) != 0) return 0;
   0817 21 00 00           2489 	ld	hl,#0x0000
   081A 39                 2490 	add	hl,sp
   081B E5                 2491 	push	hl
   081C CDr00s00           2492 	call	_open
   081F F1                 2493 	pop	af
   0820 AF                 2494 	xor	a,a
   0821 B5                 2495 	or	a,l
   0822 28 04              2496 	jr	Z,00104$
   0824 2E 00              2497 	ld	l,#0x00
   0826 18 40              2498 	jr	00109$
   0828                    2499 00104$:
                           2500 ;demo.c:235: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21rF4s3F           2501 	ld	hl,#_scratch
   082B E5                 2502 	push	hl
   082C CDr00s00           2503 	call	_block_set_data_ptr
   082F F1                 2504 	pop	af
   0830 AF                 2505 	xor	a,a
   0831 B5                 2506 	or	a,l
   0832 28 04              2507 	jr	Z,00106$
   0834 2E 00              2508 	ld	l,#0x00
   0836 18 30              2509 	jr	00109$
   0838                    2510 00106$:
                           2511 ;demo.c:236: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2512 	ld	hl,#0x0000
   083B 39                 2513 	add	hl,sp
   083C E5                 2514 	push	hl
   083D CDr00s00           2515 	call	_block_read
   0840 F1                 2516 	pop	af
   0841 AF                 2517 	xor	a,a
   0842 B5                 2518 	or	a,l
   0843 28 04              2519 	jr	Z,00108$
   0845 2E 00              2520 	ld	l,#0x00
   0847 18 1F              2521 	jr	00109$
   0849                    2522 00108$:
                           2523 ;demo.c:238: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2524 	ld	c,6 (ix)
   084C 06 00              2525 	ld	b,#0x00
   084E 11rFBs3F           2526 	ld	de,#_scratch + 7
   0851 C5                 2527 	push	bc
   0852 D5                 2528 	push	de
   0853 21r74s40           2529 	ld	hl,#_cur_palette
   0856 E5                 2530 	push	hl
   0857 CDr00s00           2531 	call	_memcpy
   085A F1                 2532 	pop	af
   085B F1                 2533 	pop	af
   085C F1                 2534 	pop	af
                           2535 ;demo.c:240: close(&f);
   085D 21 00 00           2536 	ld	hl,#0x0000
   0860 39                 2537 	add	hl,sp
   0861 E5                 2538 	push	hl
   0862 CDr00s00           2539 	call	_close
   0865 F1                 2540 	pop	af
                           2541 ;demo.c:241: return 1;
   0866 2E 01              2542 	ld	l,#0x01
   0868                    2543 00109$:
   0868 DD F9              2544 	ld	sp,ix
   086A DD E1              2545 	pop	ix
   086C C9                 2546 	ret
   086D                    2547 _pal_load_end::
   086D                    2548 __str_2:
   086D 6C 6F 61 64 69 6E  2549 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2550 	.db 0x00
   087F                    2551 __str_3:
   087F 0D                 2552 	.db 0x0D
   0880 0A                 2553 	.db 0x0A
   0881 00                 2554 	.db 0x00
                           2555 ;demo.c:245: void pause() {
                           2556 ;	---------------------------------
                           2557 ; Function pause
                           2558 ; ---------------------------------
   0882                    2559 _pause_start::
   0882                    2560 _pause:
                           2561 ;demo.c:246: uint8_t i,j,k = 0;
                           2562 ;demo.c:247: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2563 	ld	bc,#0x0000
   0885                    2564 00104$:
   0885 78                 2565 	ld	a,b
   0886 D6 FF              2566 	sub	a,#0xFF
   0888 D0                 2567 	ret	NC
                           2568 ;demo.c:248: for (j = 0; j < 255; j++) {
   0889 59                 2569 	ld	e,c
   088A 16 FF              2570 	ld	d,#0xFF
   088C                    2571 00103$:
                           2572 ;demo.c:249: k++;
   088C 1C                 2573 	inc	e
   088D 15                 2574 	dec	d
                           2575 ;demo.c:248: for (j = 0; j < 255; j++) {
   088E AF                 2576 	xor	a,a
   088F B2                 2577 	or	a,d
   0890 20 FA              2578 	jr	NZ,00103$
                           2579 ;demo.c:247: for (i = 0; i < 255; i++) {	
   0892 4B                 2580 	ld	c,e
   0893 04                 2581 	inc	b
   0894 18 EF              2582 	jr	00104$
   0896                    2583 _pause_end::
                           2584 ;demo.c:255: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2585 ;	---------------------------------
                           2586 ; Function raw_load
                           2587 ; ---------------------------------
   0896                    2588 _raw_load_start::
   0896                    2589 _raw_load:
   0896 DD E5              2590 	push	ix
   0898 DD 21 00 00        2591 	ld	ix,#0
   089C DD 39              2592 	add	ix,sp
   089E 21 D2 FF           2593 	ld	hl,#-46
   08A1 39                 2594 	add	hl,sp
   08A2 F9                 2595 	ld	sp,hl
                           2596 ;demo.c:260: if(debugprint == 1) {
   08A3 DD 7E 0A           2597 	ld	a,10 (ix)
   08A6 D6 01              2598 	sub	a,#0x01
   08A8 20 06              2599 	jr	NZ,00120$
   08AA DD 7E 0B           2600 	ld	a,11 (ix)
   08AD B7                 2601 	or	a,a
   08AE 28 02              2602 	jr	Z,00121$
   08B0                    2603 00120$:
   08B0 18 1B              2604 	jr	00102$
   08B2                    2605 00121$:
                           2606 ;demo.c:261: puts("loading rawfile: ");
   08B2 21r84s09           2607 	ld	hl,#__str_4
   08B5 E5                 2608 	push	hl
   08B6 CDr00s00           2609 	call	_puts
   08B9 F1                 2610 	pop	af
                           2611 ;demo.c:262: puts(file_name);
   08BA DD 6E 04           2612 	ld	l,4 (ix)
   08BD DD 66 05           2613 	ld	h,5 (ix)
   08C0 E5                 2614 	push	hl
   08C1 CDr00s00           2615 	call	_puts
   08C4 F1                 2616 	pop	af
                           2617 ;demo.c:263: puts("\r\n");
   08C5 21r96s09           2618 	ld	hl,#__str_5
   08C8 E5                 2619 	push	hl
   08C9 CDr00s00           2620 	call	_puts
   08CC F1                 2621 	pop	af
   08CD                    2622 00102$:
                           2623 ;demo.c:266: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2624 	ld	hl,#0x0000
   08D0 39                 2625 	add	hl,sp
   08D1 4D                 2626 	ld	c,l
   08D2 44                 2627 	ld	b,h
   08D3 21 2E 00           2628 	ld	hl,#0x002E
   08D6 E5                 2629 	push	hl
   08D7 3E 00              2630 	ld	a,#0x00
   08D9 F5                 2631 	push	af
   08DA 33                 2632 	inc	sp
   08DB C5                 2633 	push	bc
   08DC CDr00s00           2634 	call	_memset
   08DF F1                 2635 	pop	af
   08E0 F1                 2636 	pop	af
   08E1 33                 2637 	inc	sp
                           2638 ;demo.c:267: scratch_clear();
   08E2 CDr90s07           2639 	call	_scratch_clear
                           2640 ;demo.c:269: f.record_size = 128;
   08E5 21 00 00           2641 	ld	hl,#0x0000
   08E8 39                 2642 	add	hl,sp
   08E9 4D                 2643 	ld	c,l
   08EA 44                 2644 	ld	b,h
   08EB 21 0F 00           2645 	ld	hl,#0x000F
   08EE 09                 2646 	add	hl,bc
   08EF EB                 2647 	ex	de,hl
   08F0 3E 80              2648 	ld	a,#0x80
   08F2 12                 2649 	ld	(de),a
                           2650 ;demo.c:270: f.drive = 0;
   08F3 3E 00              2651 	ld	a,#0x00
   08F5 02                 2652 	ld	(bc),a
                           2653 ;demo.c:272: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2654 	ld	e,4 (ix)
   08F9 DD 56 05           2655 	ld	d,5 (ix)
   08FC 03                 2656 	inc	bc
   08FD 21 0B 00           2657 	ld	hl,#0x000B
   0900 E5                 2658 	push	hl
   0901 D5                 2659 	push	de
   0902 C5                 2660 	push	bc
   0903 CDr00s00           2661 	call	_memcpy
   0906 F1                 2662 	pop	af
   0907 F1                 2663 	pop	af
   0908 F1                 2664 	pop	af
                           2665 ;demo.c:274: if (open(&f) != 0) return 0;
   0909 21 00 00           2666 	ld	hl,#0x0000
   090C 39                 2667 	add	hl,sp
   090D E5                 2668 	push	hl
   090E CDr00s00           2669 	call	_open
   0911 F1                 2670 	pop	af
   0912 AF                 2671 	xor	a,a
   0913 B5                 2672 	or	a,l
   0914 28 05              2673 	jr	Z,00119$
   0916 2E 00              2674 	ld	l,#0x00
   0918 C3r7Fs09           2675 	jp	00112$
                           2676 ;demo.c:276: while(total < size) {
   091B                    2677 00119$:
   091B 01 00 00           2678 	ld	bc,#0x0000
   091E                    2679 00109$:
   091E 79                 2680 	ld	a,c
   091F DD 96 06           2681 	sub	a,6 (ix)
   0922 78                 2682 	ld	a,b
   0923 DD 9E 07           2683 	sbc	a,7 (ix)
   0926 F2r74s09           2684 	jp	P,00111$
                           2685 ;demo.c:277: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2686 	push	bc
   092A 21rF4s3F           2687 	ld	hl,#_scratch
   092D E5                 2688 	push	hl
   092E CDr00s00           2689 	call	_block_set_data_ptr
   0931 F1                 2690 	pop	af
   0932 5D                 2691 	ld	e,l
   0933 C1                 2692 	pop	bc
   0934 AF                 2693 	xor	a,a
   0935 B3                 2694 	or	a,e
   0936 28 04              2695 	jr	Z,00106$
   0938 2E 00              2696 	ld	l,#0x00
   093A 18 43              2697 	jr	00112$
   093C                    2698 00106$:
                           2699 ;demo.c:278: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2700 	ld	hl,#0x0000
   093F 39                 2701 	add	hl,sp
   0940 C5                 2702 	push	bc
   0941 E5                 2703 	push	hl
   0942 CDr00s00           2704 	call	_block_read
   0945 F1                 2705 	pop	af
   0946 5D                 2706 	ld	e,l
   0947 C1                 2707 	pop	bc
   0948 AF                 2708 	xor	a,a
   0949 B3                 2709 	or	a,e
   094A 28 04              2710 	jr	Z,00108$
   094C 2E 00              2711 	ld	l,#0x00
   094E 18 2F              2712 	jr	00112$
   0950                    2713 00108$:
                           2714 ;demo.c:280: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2715 	ld	a,8 (ix)
   0953 81                 2716 	add	a,c
   0954 5F                 2717 	ld	e,a
   0955 DD 7E 09           2718 	ld	a,9 (ix)
   0958 88                 2719 	adc	a,b
   0959 57                 2720 	ld	d,a
   095A C5                 2721 	push	bc
   095B 21 80 00           2722 	ld	hl,#0x0080
   095E E5                 2723 	push	hl
   095F 21rF4s3F           2724 	ld	hl,#_scratch
   0962 E5                 2725 	push	hl
   0963 D5                 2726 	push	de
   0964 CDr00s00           2727 	call	_memcpy
   0967 F1                 2728 	pop	af
   0968 F1                 2729 	pop	af
   0969 F1                 2730 	pop	af
   096A C1                 2731 	pop	bc
                           2732 ;demo.c:282: total+=incr;
   096B 21 80 00           2733 	ld	hl,#0x0080
   096E 09                 2734 	add	hl,bc
   096F 4D                 2735 	ld	c,l
   0970 44                 2736 	ld	b,h
   0971 C3r1Es09           2737 	jp	00109$
   0974                    2738 00111$:
                           2739 ;demo.c:285: close(&f);
   0974 21 00 00           2740 	ld	hl,#0x0000
   0977 39                 2741 	add	hl,sp
   0978 E5                 2742 	push	hl
   0979 CDr00s00           2743 	call	_close
   097C F1                 2744 	pop	af
                           2745 ;demo.c:287: return 1;
   097D 2E 01              2746 	ld	l,#0x01
   097F                    2747 00112$:
   097F DD F9              2748 	ld	sp,ix
   0981 DD E1              2749 	pop	ix
   0983 C9                 2750 	ret
   0984                    2751 _raw_load_end::
   0984                    2752 __str_4:
   0984 6C 6F 61 64 69 6E  2753 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2754 	.db 0x00
   0996                    2755 __str_5:
   0996 0D                 2756 	.db 0x0D
   0997 0A                 2757 	.db 0x0A
   0998 00                 2758 	.db 0x00
                           2759 ;demo.c:290: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2760 ;	---------------------------------
                           2761 ; Function pck_load
                           2762 ; ---------------------------------
   0999                    2763 _pck_load_start::
   0999                    2764 _pck_load:
   0999 DD E5              2765 	push	ix
   099B DD 21 00 00        2766 	ld	ix,#0
   099F DD 39              2767 	add	ix,sp
                           2768 ;demo.c:291: if(debugprint == 1) {
   09A1 DD 7E 0C           2769 	ld	a,12 (ix)
   09A4 D6 01              2770 	sub	a,#0x01
   09A6 20 06              2771 	jr	NZ,00106$
   09A8 DD 7E 0D           2772 	ld	a,13 (ix)
   09AB B7                 2773 	or	a,a
   09AC 28 02              2774 	jr	Z,00107$
   09AE                    2775 00106$:
   09AE 18 1B              2776 	jr	00102$
   09B0                    2777 00107$:
                           2778 ;demo.c:292: puts("loading pckfile: ");
   09B0 21r12s0A           2779 	ld	hl,#__str_6
   09B3 E5                 2780 	push	hl
   09B4 CDr00s00           2781 	call	_puts
   09B7 F1                 2782 	pop	af
                           2783 ;demo.c:293: puts(file_name);
   09B8 DD 6E 04           2784 	ld	l,4 (ix)
   09BB DD 66 05           2785 	ld	h,5 (ix)
   09BE E5                 2786 	push	hl
   09BF CDr00s00           2787 	call	_puts
   09C2 F1                 2788 	pop	af
                           2789 ;demo.c:294: puts("\r\n");
   09C3 21r24s0A           2790 	ld	hl,#__str_7
   09C6 E5                 2791 	push	hl
   09C7 CDr00s00           2792 	call	_puts
   09CA F1                 2793 	pop	af
   09CB                    2794 00102$:
                           2795 ;demo.c:296: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2796 	ld	c,6 (ix)
   09CE DD 46 07           2797 	ld	b,7 (ix)
   09D1 C5                 2798 	push	bc
   09D2 C5                 2799 	push	bc
   09D3 3E 00              2800 	ld	a,#0x00
   09D5 F5                 2801 	push	af
   09D6 33                 2802 	inc	sp
   09D7 21r74s01           2803 	ld	hl,#_packbuffer
   09DA E5                 2804 	push	hl
   09DB CDr00s00           2805 	call	_memset
   09DE F1                 2806 	pop	af
   09DF F1                 2807 	pop	af
   09E0 33                 2808 	inc	sp
   09E1 C1                 2809 	pop	bc
                           2810 ;demo.c:297: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2811 	ld	hl,#0x0000
   09E5 E5                 2812 	push	hl
   09E6 21r74s01           2813 	ld	hl,#_packbuffer
   09E9 E5                 2814 	push	hl
   09EA C5                 2815 	push	bc
   09EB DD 6E 04           2816 	ld	l,4 (ix)
   09EE DD 66 05           2817 	ld	h,5 (ix)
   09F1 E5                 2818 	push	hl
   09F2 CDr96s08           2819 	call	_raw_load
   09F5 F1                 2820 	pop	af
   09F6 F1                 2821 	pop	af
   09F7 F1                 2822 	pop	af
   09F8 F1                 2823 	pop	af
                           2824 ;demo.c:298: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2825 	ld	a,10 (ix)
   09FC F5                 2826 	push	af
   09FD 33                 2827 	inc	sp
   09FE DD 6E 08           2828 	ld	l,8 (ix)
   0A01 DD 66 09           2829 	ld	h,9 (ix)
   0A04 E5                 2830 	push	hl
   0A05 21r74s01           2831 	ld	hl,#_packbuffer
   0A08 E5                 2832 	push	hl
   0A09 CDr00s00           2833 	call	_bitbuster
   0A0C F1                 2834 	pop	af
   0A0D F1                 2835 	pop	af
   0A0E 33                 2836 	inc	sp
   0A0F DD E1              2837 	pop	ix
   0A11 C9                 2838 	ret
   0A12                    2839 _pck_load_end::
   0A12                    2840 __str_6:
   0A12 6C 6F 61 64 69 6E  2841 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2842 	.db 0x00
   0A24                    2843 __str_7:
   0A24 0D                 2844 	.db 0x0D
   0A25 0A                 2845 	.db 0x0A
   0A26 00                 2846 	.db 0x00
                           2847 ;demo.c:301: void fadein() {
                           2848 ;	---------------------------------
                           2849 ; Function fadein
                           2850 ; ---------------------------------
   0A27                    2851 _fadein_start::
   0A27                    2852 _fadein:
   0A27 DD E5              2853 	push	ix
   0A29 DD 21 00 00        2854 	ld	ix,#0
   0A2D DD 39              2855 	add	ix,sp
   0A2F F5                 2856 	push	af
                           2857 ;demo.c:304: if (tick < 8) return;
   0A30 3Ar16s41           2858 	ld	a,(#_tick+0)
   0A33 D6 08              2859 	sub	a,#0x08
   0A35 3Ar17s41           2860 	ld	a,(#_tick+1)
   0A38 DE 00              2861 	sbc	a,#0x00
   0A3A F2r40s0A           2862 	jp	P,00102$
   0A3D C3rEEs0A           2863 	jp	00113$
   0A40                    2864 00102$:
                           2865 ;demo.c:306: tick = 0;
   0A40 21r16s41           2866 	ld	hl,#_tick + 0
   0A43 36 00              2867 	ld	(hl), #0x00
   0A45 21r17s41           2868 	ld	hl,#_tick + 1
   0A48 36 00              2869 	ld	(hl), #0x00
                           2870 ;demo.c:308: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2871 	ld	c,#0x00
   0A4C                    2872 00109$:
   0A4C 79                 2873 	ld	a,c
   0A4D D6 20              2874 	sub	a,#0x20
   0A4F D2rE6s0A           2875 	jp	NC,00112$
                           2876 ;demo.c:309: uint8_t r = scratch[i] >> 4;
   0A52 3ErF4              2877 	ld	a,#<_scratch
   0A54 81                 2878 	add	a,c
   0A55 5F                 2879 	ld	e,a
   0A56 3Es3F              2880 	ld	a,#>_scratch
   0A58 CE 00              2881 	adc	a,#0x00
   0A5A 57                 2882 	ld	d,a
   0A5B 1A                 2883 	ld	a,(de)
   0A5C 47                 2884 	ld	b,a
   0A5D 58                 2885 	ld	e,b
   0A5E CB 3B              2886 	srl	e
   0A60 CB 3B              2887 	srl	e
   0A62 CB 3B              2888 	srl	e
   0A64 CB 3B              2889 	srl	e
                           2890 ;demo.c:310: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2891 	ld	a,b
   0A67 E6 0F              2892 	and	a,#0x0F
   0A69 DD 77 FF           2893 	ld	-1 (ix),a
                           2894 ;demo.c:311: uint8_t g = scratch[i+1];
   0A6C 51                 2895 	ld	d,c
   0A6D 14                 2896 	inc	d
   0A6E 3ErF4              2897 	ld	a,#<_scratch
   0A70 82                 2898 	add	a,d
   0A71 6F                 2899 	ld	l,a
   0A72 3Es3F              2900 	ld	a,#>_scratch
   0A74 CE 00              2901 	adc	a,#0x00
   0A76 67                 2902 	ld	h,a
   0A77 56                 2903 	ld	d,(hl)
   0A78 DD 72 FE           2904 	ld	-2 (ix),d
                           2905 ;demo.c:313: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3Er74              2906 	ld	a,#<_cur_palette
   0A7D 81                 2907 	add	a,c
   0A7E 6F                 2908 	ld	l,a
   0A7F 3Es40              2909 	ld	a,#>_cur_palette
   0A81 CE 00              2910 	adc	a,#0x00
   0A83 67                 2911 	ld	h,a
   0A84 56                 2912 	ld	d,(hl)
   0A85 CB 3A              2913 	srl	d
   0A87 CB 3A              2914 	srl	d
   0A89 CB 3A              2915 	srl	d
   0A8B CB 3A              2916 	srl	d
   0A8D 7B                 2917 	ld	a,e
   0A8E 92                 2918 	sub	a,d
   0A8F 30 01              2919 	jr	NC,00104$
   0A91 1C                 2920 	inc	e
   0A92                    2921 00104$:
                           2922 ;demo.c:314: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3Er74              2923 	ld	a,#<_cur_palette
   0A94 81                 2924 	add	a,c
   0A95 6F                 2925 	ld	l,a
   0A96 3Es40              2926 	ld	a,#>_cur_palette
   0A98 CE 00              2927 	adc	a,#0x00
   0A9A 67                 2928 	ld	h,a
   0A9B 7E                 2929 	ld	a,(hl)
   0A9C E6 0F              2930 	and	a,#0x0F
   0A9E 47                 2931 	ld	b,a
   0A9F DD 7E FF           2932 	ld	a,-1 (ix)
   0AA2 90                 2933 	sub	a,b
   0AA3 30 03              2934 	jr	NC,00106$
   0AA5 DD 34 FF           2935 	inc	-1 (ix)
   0AA8                    2936 00106$:
                           2937 ;demo.c:316: scratch[i] = (r << 4) | b;
   0AA8 3ErF4              2938 	ld	a,#<_scratch
   0AAA 81                 2939 	add	a,c
   0AAB 47                 2940 	ld	b,a
   0AAC 3Es3F              2941 	ld	a,#>_scratch
   0AAE CE 00              2942 	adc	a,#0x00
   0AB0 57                 2943 	ld	d,a
   0AB1 7B                 2944 	ld	a,e
   0AB2 07                 2945 	rlca
   0AB3 07                 2946 	rlca
   0AB4 07                 2947 	rlca
   0AB5 07                 2948 	rlca
   0AB6 E6 F0              2949 	and	a,#0xF0
   0AB8 DD B6 FF           2950 	or	a,-1 (ix)
   0ABB 68                 2951 	ld	l,b
   0ABC 62                 2952 	ld	h,d
   0ABD 77                 2953 	ld	(hl),a
                           2954 ;demo.c:317: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2955 	ld	b,c
   0ABF 04                 2956 	inc	b
   0AC0 3Er74              2957 	ld	a,#<_cur_palette
   0AC2 80                 2958 	add	a,b
   0AC3 5F                 2959 	ld	e,a
   0AC4 3Es40              2960 	ld	a,#>_cur_palette
   0AC6 CE 00              2961 	adc	a,#0x00
   0AC8 57                 2962 	ld	d,a
   0AC9 1A                 2963 	ld	a,(de)
   0ACA 5F                 2964 	ld	e,a
   0ACB DD 7E FE           2965 	ld	a,-2 (ix)
   0ACE 93                 2966 	sub	a,e
   0ACF 30 10              2967 	jr	NC,00111$
   0AD1 3ErF4              2968 	ld	a,#<_scratch
   0AD3 80                 2969 	add	a,b
   0AD4 47                 2970 	ld	b,a
   0AD5 3Es3F              2971 	ld	a,#>_scratch
   0AD7 CE 00              2972 	adc	a,#0x00
   0AD9 5F                 2973 	ld	e,a
   0ADA 68                 2974 	ld	l,b
   0ADB 67                 2975 	ld	h,a
   0ADC 7E                 2976 	ld	a,(hl)
   0ADD 3C                 2977 	inc	a
   0ADE 68                 2978 	ld	l,b
   0ADF 63                 2979 	ld	h,e
   0AE0 77                 2980 	ld	(hl),a
   0AE1                    2981 00111$:
                           2982 ;demo.c:308: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2983 	inc	c
   0AE2 0C                 2984 	inc	c
   0AE3 C3r4Cs0A           2985 	jp	00109$
   0AE6                    2986 00112$:
                           2987 ;demo.c:321: vdp_load_palette(scratch);
   0AE6 21rF4s3F           2988 	ld	hl,#_scratch
   0AE9 E5                 2989 	push	hl
   0AEA CDr00s00           2990 	call	_vdp_load_palette
   0AED F1                 2991 	pop	af
   0AEE                    2992 00113$:
   0AEE DD F9              2993 	ld	sp,ix
   0AF0 DD E1              2994 	pop	ix
   0AF2 C9                 2995 	ret
   0AF3                    2996 _fadein_end::
                           2997 ;demo.c:333: void do_ymmm() {
                           2998 ;	---------------------------------
                           2999 ; Function do_ymmm
                           3000 ; ---------------------------------
   0AF3                    3001 _do_ymmm_start::
   0AF3                    3002 _do_ymmm:
   0AF3 DD E5              3003 	push	ix
   0AF5 DD 21 00 00        3004 	ld	ix,#0
   0AF9 DD 39              3005 	add	ix,sp
   0AFB F5                 3006 	push	af
                           3007 ;demo.c:337: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              3008 	ld	a,#0x20
   0AFE FD 21r16s41        3009 	ld	iy,#_tick
   0B02 FD 96 00           3010 	sub	a,0 (iy)
   0B05 3E 00              3011 	ld	a,#0x00
   0B07 FD 21r16s41        3012 	ld	iy,#_tick
   0B0B FD 9E 01           3013 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           3014 	jp	P,00102$
   0B11 21r16s41           3015 	ld	hl,#_tick + 0
   0B14 36 00              3016 	ld	(hl), #0x00
   0B16 21r17s41           3017 	ld	hl,#_tick + 1
   0B19 36 00              3018 	ld	(hl), #0x00
   0B1B FD 21r31s41        3019 	ld	iy,#_flipper
   0B1F FD 34 00           3020 	inc	0 (iy)
   0B22 20 07              3021 	jr	NZ,00115$
   0B24 FD 21r31s41        3022 	ld	iy,#_flipper
   0B28 FD 34 01           3023 	inc	1 (iy)
   0B2B                    3024 00115$:
   0B2B                    3025 00102$:
                           3026 ;demo.c:338: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              3027 	ld	a,#0x0A
   0B2D FD 21r31s41        3028 	ld	iy,#_flipper
   0B31 FD 96 00           3029 	sub	a,0 (iy)
   0B34 3E 00              3030 	ld	a,#0x00
   0B36 FD 21r31s41        3031 	ld	iy,#_flipper
   0B3A FD 9E 01           3032 	sbc	a,1 (iy)
   0B3D F2r4As0B           3033 	jp	P,00104$
   0B40 21r31s41           3034 	ld	hl,#_flipper + 0
   0B43 36 00              3035 	ld	(hl), #0x00
   0B45 21r32s41           3036 	ld	hl,#_flipper + 1
   0B48 36 00              3037 	ld	(hl), #0x00
   0B4A                    3038 00104$:
                           3039 ;demo.c:340: ymmmf++;
   0B4A FD 21r33s41        3040 	ld	iy,#_ymmmf
   0B4E FD 34 00           3041 	inc	0 (iy)
   0B51 20 07              3042 	jr	NZ,00116$
   0B53 FD 21r33s41        3043 	ld	iy,#_ymmmf
   0B57 FD 34 01           3044 	inc	1 (iy)
   0B5A                    3045 00116$:
                           3046 ;demo.c:341: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r2Fs41           3047 	ld	hl,#_yofff + 0
   0B5D 36 00              3048 	ld	(hl), #0x00
   0B5F                    3049 00105$:
   0B5F 21r2Fs41           3050 	ld	hl,#_yofff + 0
   0B62 4E                 3051 	ld	c,(hl)
   0B63 06 00              3052 	ld	b,#0x00
   0B65 79                 3053 	ld	a,c
   0B66 D6 D2              3054 	sub	a,#0xD2
   0B68 78                 3055 	ld	a,b
   0B69 DE 00              3056 	sbc	a,#0x00
   0B6B F2rE4s0B           3057 	jp	P,00109$
                           3058 ;demo.c:342: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r33s41           3059 	ld	hl,#_ymmmf
   0B71 79                 3060 	ld	a,c
   0B72 86                 3061 	add	a,(hl)
   0B73 5F                 3062 	ld	e,a
   0B74 78                 3063 	ld	a,b
   0B75 23                 3064 	inc	hl
   0B76 8E                 3065 	adc	a,(hl)
   0B77 16 00              3066 	ld	d,#0x00
   0B79 CB 23              3067 	sla	e
   0B7B CB 12              3068 	rl	d
   0B7D 21r2Cs00           3069 	ld	hl,#_sintabx
   0B80 19                 3070 	add	hl,de
   0B81 5E                 3071 	ld	e,(hl)
   0B82 23                 3072 	inc	hl
   0B83 56                 3073 	ld	d,(hl)
   0B84 DD 73 FE           3074 	ld	-2 (ix),e
   0B87 DD 72 FF           3075 	ld	-1 (ix),d
                           3076 ;demo.c:345: cmd.source_x = 0;
   0B8A 21r18s41           3077 	ld	hl,#_cmd
   0B8D 36 00              3078 	ld	(hl),#0x00
   0B8F 23                 3079 	inc	hl
   0B90 36 00              3080 	ld	(hl),#0x00
                           3081 ;demo.c:346: cmd.source_y = 0+yofff;
   0B92 11r1As41           3082 	ld	de,#_cmd + 2
   0B95 EB                 3083 	ex	de,hl
   0B96 71                 3084 	ld	(hl),c
   0B97 23                 3085 	inc	hl
   0B98 70                 3086 	ld	(hl),b
                           3087 ;demo.c:347: cmd.dest_x = xo;
   0B99 11r1Cs41           3088 	ld	de,#_cmd + 4
   0B9C EB                 3089 	ex	de,hl
   0B9D DD 7E FE           3090 	ld	a,-2 (ix)
   0BA0 77                 3091 	ld	(hl),a
   0BA1 23                 3092 	inc	hl
   0BA2 DD 7E FF           3093 	ld	a,-1 (ix)
   0BA5 77                 3094 	ld	(hl),a
                           3095 ;demo.c:348: cmd.dest_y = 3+yofff;
   0BA6 11r1Es41           3096 	ld	de,#_cmd + 6
   0BA9 03                 3097 	inc	bc
   0BAA 03                 3098 	inc	bc
   0BAB 03                 3099 	inc	bc
   0BAC 6B                 3100 	ld	l,e
   0BAD 62                 3101 	ld	h,d
   0BAE 71                 3102 	ld	(hl),c
   0BAF 23                 3103 	inc	hl
   0BB0 70                 3104 	ld	(hl),b
                           3105 ;demo.c:349: cmd.size_x = 256;
   0BB1 21r20s41           3106 	ld	hl, #_cmd + 8
   0BB4 36 00              3107 	ld	(hl),#0x00
   0BB6 23                 3108 	inc	hl
   0BB7 36 01              3109 	ld	(hl),#0x01
                           3110 ;demo.c:350: cmd.size_y = 1;
   0BB9 21r22s41           3111 	ld	hl, #_cmd + 10
   0BBC 36 01              3112 	ld	(hl),#0x01
   0BBE 23                 3113 	inc	hl
   0BBF 36 00              3114 	ld	(hl),#0x00
                           3115 ;demo.c:351: cmd.data = 0;
                           3116 ;demo.c:352: cmd.argument = 0;
   0BC1 3E 00              3117 	ld	a,#0x00
   0BC3 32r24s41           3118 	ld	(#_cmd + 12),a
   0BC6 32r25s41           3119 	ld	(#_cmd + 13),a
                           3120 ;demo.c:353: cmd.command = 0xD0;
   0BC9 3E D0              3121 	ld	a,#0xD0
   0BCB 32r26s41           3122 	ld	(#_cmd + 14),a
                           3123 ;demo.c:356: vdp_copier(&cmd);
   0BCE 21r18s41           3124 	ld	hl,#_cmd
   0BD1 E5                 3125 	push	hl
   0BD2 CDr00s00           3126 	call	_vdp_copier
   0BD5 F1                 3127 	pop	af
                           3128 ;demo.c:341: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r2Fs41           3129 	ld	hl,#_yofff + 0
   0BD9 4E                 3130 	ld	c,(hl)
   0BDA 21r2Fs41           3131 	ld	hl,#_yofff
   0BDD 79                 3132 	ld	a,c
   0BDE C6 02              3133 	add	a,#0x02
   0BE0 77                 3134 	ld	(hl),a
   0BE1 C3r5Fs0B           3135 	jp	00105$
   0BE4                    3136 00109$:
   0BE4 DD F9              3137 	ld	sp,ix
   0BE6 DD E1              3138 	pop	ix
   0BE8 C9                 3139 	ret
   0BE9                    3140 _do_ymmm_end::
                           3141 ;demo.c:373: void do_blocks() {
                           3142 ;	---------------------------------
                           3143 ; Function do_blocks
                           3144 ; ---------------------------------
   0BE9                    3145 _do_blocks_start::
   0BE9                    3146 _do_blocks:
   0BE9 DD E5              3147 	push	ix
   0BEB DD 21 00 00        3148 	ld	ix,#0
   0BEF DD 39              3149 	add	ix,sp
   0BF1 21 FA FF           3150 	ld	hl,#-6
   0BF4 39                 3151 	add	hl,sp
   0BF5 F9                 3152 	ld	sp,hl
                           3153 ;demo.c:375: int ys = 0;
   0BF6 DD 36 FC 00        3154 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3155 	ld	-3 (ix),#0x00
                           3156 ;demo.c:376: int ye = 0;
   0BFE DD 36 FA 00        3157 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3158 	ld	-5 (ix),#0x00
                           3159 ;demo.c:378: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3160 	ld	hl,#0x0017
   0C09 E5                 3161 	push	hl
   0C0A CDr00s00           3162 	call	_vdp_register
   0C0D F1                 3163 	pop	af
                           3164 ;demo.c:380: if (block_init == 0) {
   0C0E AF                 3165 	xor	a,a
   0C0F FD 21r35s41        3166 	ld	iy,#_block_init
   0C13 FD B6 00           3167 	or	a,0 (iy)
   0C16 C2r7Es0C           3168 	jp	NZ,00108$
                           3169 ;demo.c:382: vdp_set_screen5();
   0C19 CDr00s00           3170 	call	_vdp_set_screen5
                           3171 ;demo.c:384: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3172 	ld	hl,#0x5F02
   0C1F E5                 3173 	push	hl
   0C20 CDr00s00           3174 	call	_vdp_register
   0C23 F1                 3175 	pop	af
                           3176 ;demo.c:386: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3177 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3178 	ld	-1 (ix),#0x00
   0C2C                    3179 00110$:
   0C2C DD 7E FE           3180 	ld	a,-2 (ix)
   0C2F D6 10              3181 	sub	a,#0x10
   0C31 DD 7E FF           3182 	ld	a,-1 (ix)
   0C34 DE 00              3183 	sbc	a,#0x00
   0C36 F2r6Es0C           3184 	jp	P,00113$
   0C39 DD 4E FE           3185 	ld	c,-2 (ix)
   0C3C DD 46 FF           3186 	ld	b,-1 (ix)
   0C3F CB 21              3187 	sla	c
   0C41 CB 10              3188 	rl	b
   0C43 21r3Es41           3189 	ld	hl,#_btab
   0C46 09                 3190 	add	hl,bc
   0C47 4D                 3191 	ld	c,l
   0C48 44                 3192 	ld	b,h
   0C49 DD 5E FE           3193 	ld	e,-2 (ix)
   0C4C DD 56 FF           3194 	ld	d,-1 (ix)
   0C4F CB 23              3195 	sla	e
   0C51 CB 12              3196 	rl	d
   0C53 CB 23              3197 	sla	e
   0C55 CB 12              3198 	rl	d
   0C57 CB 23              3199 	sla	e
   0C59 CB 12              3200 	rl	d
   0C5B CB 23              3201 	sla	e
   0C5D CB 12              3202 	rl	d
   0C5F 69                 3203 	ld	l,c
   0C60 60                 3204 	ld	h,b
   0C61 73                 3205 	ld	(hl),e
   0C62 23                 3206 	inc	hl
   0C63 72                 3207 	ld	(hl),d
   0C64 DD 34 FE           3208 	inc	-2 (ix)
   0C67 20 03              3209 	jr	NZ,00139$
   0C69 DD 34 FF           3210 	inc	-1 (ix)
   0C6C                    3211 00139$:
   0C6C 18 BE              3212 	jr	00110$
   0C6E                    3213 00113$:
                           3214 ;demo.c:387: vdp_load_palette(block_palette);
   0C6E 21r94s40           3215 	ld	hl,#_block_palette
   0C71 E5                 3216 	push	hl
   0C72 CDr00s00           3217 	call	_vdp_load_palette
   0C75 F1                 3218 	pop	af
                           3219 ;demo.c:389: block_init = 1;
   0C76 21r35s41           3220 	ld	hl,#_block_init + 0
   0C79 36 01              3221 	ld	(hl), #0x01
   0C7B C3r07s0E           3222 	jp	00122$
   0C7E                    3223 00108$:
                           3224 ;demo.c:393: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3Ar5Es41           3225 	ld	a,(#_flof+0)
   0C81 FD 21r5Es41        3226 	ld	iy,#_flof
   0C85 FD B6 01           3227 	or	a,1 (iy)
   0C88 20 10              3228 	jr	NZ,00102$
   0C8A DD 36 FC 00        3229 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3230 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3231 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3232 	ld	-5 (ix),#0x00
   0C9A                    3233 00102$:
                           3234 ;demo.c:394: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3Ar5Es41           3235 	ld	a,(#_flof+0)
   0C9D D6 01              3236 	sub	a,#0x01
   0C9F 20 06              3237 	jr	NZ,00140$
   0CA1 3Ar5Fs41           3238 	ld	a,(#_flof+1)
   0CA4 B7                 3239 	or	a,a
   0CA5 28 02              3240 	jr	Z,00141$
   0CA7                    3241 00140$:
   0CA7 18 10              3242 	jr	00104$
   0CA9                    3243 00141$:
   0CA9 DD 36 FC 08        3244 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3245 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3246 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3247 	ld	-5 (ix),#0x00
   0CB9                    3248 00104$:
                           3249 ;demo.c:396: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r3Cs41        3250 	ld	iy,#_bty
   0CBD FD 36 00 03        3251 	ld	0 (iy),#0x03
   0CC1 FD 21r3Cs41        3252 	ld	iy,#_bty
   0CC5 FD 36 01 00        3253 	ld	1 (iy),#0x00
   0CC9                    3254 00118$:
   0CC9 3Ar3Cs41           3255 	ld	a,(#_bty+0)
   0CCC D6 0B              3256 	sub	a,#0x0B
   0CCE 3Ar3Ds41           3257 	ld	a,(#_bty+1)
   0CD1 DE 00              3258 	sbc	a,#0x00
   0CD3 F2rDEs0D           3259 	jp	P,00121$
                           3260 ;demo.c:397: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3261 	ld	a,-4 (ix)
   0CD9 FD 21r3As41        3262 	ld	iy,#_btx
   0CDD FD 77 00           3263 	ld	0 (iy),a
   0CE0 DD 7E FD           3264 	ld	a,-3 (ix)
   0CE3 FD 21r3As41        3265 	ld	iy,#_btx
   0CE7 FD 77 01           3266 	ld	1 (iy),a
   0CEA                    3267 00114$:
   0CEA 3Ar3As41           3268 	ld	a,(#_btx+0)
   0CED DD 96 FA           3269 	sub	a,-6 (ix)
   0CF0 3Ar3Bs41           3270 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3271 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3272 	jp	P,00120$
                           3273 ;demo.c:398: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3274 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3275 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3276 	and	a,0 (iy)
   0D03 21r00s00           3277 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3278 	or	a,(hl)
   0D07 4F                 3279 	ld	c,a
   0D08 CB 39              3280 	srl	c
   0D0A 21r36s41           3281 	ld	hl,#_bsx + 0
   0D0D 71                 3282 	ld	(hl), c
   0D0E 21r37s41           3283 	ld	hl,#_bsx + 1
   0D11 36 00              3284 	ld	(hl), #0x00
                           3285 ;demo.c:399: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3286 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r38s41           3287 	ld	hl,#_bsy + 0
   0D19 77                 3288 	ld	(hl), a
   0D1A 21r39s41           3289 	ld	hl,#_bsy + 1
   0D1D 36 00              3290 	ld	(hl), #0x00
                           3291 ;demo.c:400: cmd.source_x = btab[bsx];
   0D1F 21r36s41           3292 	ld	hl,#_bsx + 0
   0D22 4E                 3293 	ld	c,(hl)
   0D23 21r37s41           3294 	ld	hl,#_bsx + 1
   0D26 46                 3295 	ld	b,(hl)
   0D27 CB 21              3296 	sla	c
   0D29 CB 10              3297 	rl	b
   0D2B 21r3Es41           3298 	ld	hl,#_btab
   0D2E 09                 3299 	add	hl,bc
   0D2F 4E                 3300 	ld	c,(hl)
   0D30 23                 3301 	inc	hl
   0D31 46                 3302 	ld	b,(hl)
   0D32 21r18s41           3303 	ld	hl,#_cmd
   0D35 71                 3304 	ld	(hl),c
   0D36 23                 3305 	inc	hl
   0D37 70                 3306 	ld	(hl),b
                           3307 ;demo.c:401: cmd.source_y = 768+btab[bsy];
   0D38 01r1As41           3308 	ld	bc,#_cmd + 2
   0D3B 21r38s41           3309 	ld	hl,#_bsy + 0
   0D3E 5E                 3310 	ld	e,(hl)
   0D3F 21r39s41           3311 	ld	hl,#_bsy + 1
   0D42 56                 3312 	ld	d,(hl)
   0D43 CB 23              3313 	sla	e
   0D45 CB 12              3314 	rl	d
   0D47 21r3Es41           3315 	ld	hl,#_btab
   0D4A 19                 3316 	add	hl,de
   0D4B 5E                 3317 	ld	e,(hl)
   0D4C 23                 3318 	inc	hl
   0D4D 56                 3319 	ld	d,(hl)
   0D4E 21 00 03           3320 	ld	hl,#0x0300
   0D51 19                 3321 	add	hl,de
   0D52 EB                 3322 	ex	de,hl
   0D53 69                 3323 	ld	l,c
   0D54 60                 3324 	ld	h,b
   0D55 73                 3325 	ld	(hl),e
   0D56 23                 3326 	inc	hl
   0D57 72                 3327 	ld	(hl),d
                           3328 ;demo.c:402: cmd.dest_x = btab[btx];
   0D58 01r1Cs41           3329 	ld	bc,#_cmd + 4
   0D5B 21r3As41           3330 	ld	hl,#_btx + 0
   0D5E 5E                 3331 	ld	e,(hl)
   0D5F 21r3Bs41           3332 	ld	hl,#_btx + 1
   0D62 56                 3333 	ld	d,(hl)
   0D63 CB 23              3334 	sla	e
   0D65 CB 12              3335 	rl	d
   0D67 21r3Es41           3336 	ld	hl,#_btab
   0D6A 19                 3337 	add	hl,de
   0D6B 5E                 3338 	ld	e,(hl)
   0D6C 23                 3339 	inc	hl
   0D6D 56                 3340 	ld	d,(hl)
   0D6E 69                 3341 	ld	l,c
   0D6F 60                 3342 	ld	h,b
   0D70 73                 3343 	ld	(hl),e
   0D71 23                 3344 	inc	hl
   0D72 72                 3345 	ld	(hl),d
                           3346 ;demo.c:403: cmd.dest_y = 512+btab[bty];
   0D73 01r1Es41           3347 	ld	bc,#_cmd + 6
   0D76 21r3Cs41           3348 	ld	hl,#_bty + 0
   0D79 5E                 3349 	ld	e,(hl)
   0D7A 21r3Ds41           3350 	ld	hl,#_bty + 1
   0D7D 56                 3351 	ld	d,(hl)
   0D7E CB 23              3352 	sla	e
   0D80 CB 12              3353 	rl	d
   0D82 21r3Es41           3354 	ld	hl,#_btab
   0D85 19                 3355 	add	hl,de
   0D86 5E                 3356 	ld	e,(hl)
   0D87 23                 3357 	inc	hl
   0D88 56                 3358 	ld	d,(hl)
   0D89 21 00 02           3359 	ld	hl,#0x0200
   0D8C 19                 3360 	add	hl,de
   0D8D EB                 3361 	ex	de,hl
   0D8E 69                 3362 	ld	l,c
   0D8F 60                 3363 	ld	h,b
   0D90 73                 3364 	ld	(hl),e
   0D91 23                 3365 	inc	hl
   0D92 72                 3366 	ld	(hl),d
                           3367 ;demo.c:404: cmd.size_x = 16;
   0D93 21r20s41           3368 	ld	hl, #_cmd + 8
   0D96 36 10              3369 	ld	(hl),#0x10
   0D98 23                 3370 	inc	hl
   0D99 36 00              3371 	ld	(hl),#0x00
                           3372 ;demo.c:405: cmd.size_y = 16;
   0D9B 21r22s41           3373 	ld	hl, #_cmd + 10
   0D9E 36 10              3374 	ld	(hl),#0x10
   0DA0 23                 3375 	inc	hl
   0DA1 36 00              3376 	ld	(hl),#0x00
                           3377 ;demo.c:406: cmd.data = 0;
                           3378 ;demo.c:407: cmd.argument = 0x00;
   0DA3 3E 00              3379 	ld	a,#0x00
   0DA5 32r24s41           3380 	ld	(#_cmd + 12),a
   0DA8 32r25s41           3381 	ld	(#_cmd + 13),a
                           3382 ;demo.c:408: cmd.command = 0xD0;
   0DAB 3E D0              3383 	ld	a,#0xD0
   0DAD 32r26s41           3384 	ld	(#_cmd + 14),a
                           3385 ;demo.c:409: vdp_copier(&cmd);
   0DB0 21r18s41           3386 	ld	hl,#_cmd
   0DB3 E5                 3387 	push	hl
   0DB4 CDr00s00           3388 	call	_vdp_copier
   0DB7 F1                 3389 	pop	af
                           3390 ;demo.c:397: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r3As41        3391 	ld	iy,#_btx
   0DBC FD 34 00           3392 	inc	0 (iy)
   0DBF 20 07              3393 	jr	NZ,00150$
   0DC1 FD 21r3As41        3394 	ld	iy,#_btx
   0DC5 FD 34 01           3395 	inc	1 (iy)
   0DC8                    3396 00150$:
   0DC8 C3rEAs0C           3397 	jp	00114$
   0DCB                    3398 00120$:
                           3399 ;demo.c:396: for(bty=3;bty<11;bty++) {
   0DCB FD 21r3Cs41        3400 	ld	iy,#_bty
   0DCF FD 34 00           3401 	inc	0 (iy)
   0DD2 20 07              3402 	jr	NZ,00151$
   0DD4 FD 21r3Cs41        3403 	ld	iy,#_bty
   0DD8 FD 34 01           3404 	inc	1 (iy)
   0DDB                    3405 00151$:
   0DDB C3rC9s0C           3406 	jp	00118$
   0DDE                    3407 00121$:
                           3408 ;demo.c:413: flof++;
   0DDE FD 21r5Es41        3409 	ld	iy,#_flof
   0DE2 FD 34 00           3410 	inc	0 (iy)
   0DE5 20 07              3411 	jr	NZ,00152$
   0DE7 FD 21r5Es41        3412 	ld	iy,#_flof
   0DEB FD 34 01           3413 	inc	1 (iy)
   0DEE                    3414 00152$:
                           3415 ;demo.c:414: if (flof == 2) flof = 0;
   0DEE 3Ar5Es41           3416 	ld	a,(#_flof+0)
   0DF1 D6 02              3417 	sub	a,#0x02
   0DF3 20 06              3418 	jr	NZ,00153$
   0DF5 3Ar5Fs41           3419 	ld	a,(#_flof+1)
   0DF8 B7                 3420 	or	a,a
   0DF9 28 02              3421 	jr	Z,00154$
   0DFB                    3422 00153$:
   0DFB 18 0A              3423 	jr	00122$
   0DFD                    3424 00154$:
   0DFD 21r5Es41           3425 	ld	hl,#_flof + 0
   0E00 36 00              3426 	ld	(hl), #0x00
   0E02 21r5Fs41           3427 	ld	hl,#_flof + 1
   0E05 36 00              3428 	ld	(hl), #0x00
   0E07                    3429 00122$:
   0E07 DD F9              3430 	ld	sp,ix
   0E09 DD E1              3431 	pop	ix
   0E0B C9                 3432 	ret
   0E0C                    3433 _do_blocks_end::
                           3434 ;demo.c:422: void raster_effu() {
                           3435 ;	---------------------------------
                           3436 ; Function raster_effu
                           3437 ; ---------------------------------
   0E0C                    3438 _raster_effu_start::
   0E0C                    3439 _raster_effu:
                           3440 ;demo.c:423: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3441 	ld	hl,#0x0017
   0E0F E5                 3442 	push	hl
   0E10 CDr00s00           3443 	call	_vdp_register
   0E13 F1                 3444 	pop	af
                           3445 ;demo.c:424: waitVB();
   0E14 76                 3446 		halt 
                           3447 ;demo.c:426: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3448 	ld	hl,#0x4001
   0E18 E5                 3449 	push	hl
   0E19 CDr00s00           3450 	call	_vdp_register
                           3451 ;demo.c:428: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3452 	ld	a,#0x28
   0E1E 32r60s41           3453 	ld	(#_linenum + 0),a
   0E21 F1                 3454 	pop	af
   0E22 FD 21r60s41        3455 	ld	iy,#_linenum
   0E26 FD 36 01 00        3456 	ld	1 (iy),#0x00
   0E2A                    3457 00101$:
   0E2A 3Ar60s41           3458 	ld	a,(#_linenum+0)
   0E2D D6 D4              3459 	sub	a,#0xD4
   0E2F 3Ar61s41           3460 	ld	a,(#_linenum+1)
   0E32 DE 00              3461 	sbc	a,#0x00
   0E34 F2r65s0E           3462 	jp	P,00104$
                           3463 ;demo.c:429: vdp_register(19,linenum); // interrupt on line
   0E37 3Ar60s41           3464 	ld	a,(#_linenum+0)
   0E3A F5                 3465 	push	af
   0E3B 33                 3466 	inc	sp
   0E3C 3E 13              3467 	ld	a,#0x13
   0E3E F5                 3468 	push	af
   0E3F 33                 3469 	inc	sp
   0E40 CDr00s00           3470 	call	_vdp_register
   0E43 F1                 3471 	pop	af
                           3472 ;demo.c:430: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3473 	ld	hl,#0x1600
   0E47 E5                 3474 	push	hl
   0E48 CDr00s00           3475 	call	_vdp_register
   0E4B F1                 3476 	pop	af
                           3477 ;demo.c:432: waitVB();
   0E4C 76                 3478 		halt 
                           3479 ;demo.c:428: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21r60s41           3480 	ld	hl,#_linenum
   0E50 7E                 3481 	ld	a,(hl)
   0E51 C6 04              3482 	add	a,#0x04
   0E53 23                 3483 	inc	hl
   0E54 2B                 3484 	dec	hl
   0E55 C5                 3485 	push	bc
   0E56 4F                 3486 	ld	c, a
   0E57 23                 3487 	inc	hl
   0E58 7E                 3488 	ld	a, (hl)
   0E59 47                 3489 	ld	b, a
   0E5A 79                 3490 	ld	a, c
   0E5B 2B                 3491 	dec	hl
   0E5C 77                 3492 	ld	(hl), a
   0E5D 78                 3493 	ld	a, b
   0E5E C1                 3494 	pop	bc
   0E5F CE 00              3495 	adc	a,#0x00
   0E61 23                 3496 	inc	hl
   0E62 77                 3497 	ld	(hl),a
   0E63 18 C5              3498 	jr	00101$
   0E65                    3499 00104$:
                           3500 ;demo.c:435: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3501 	ld	hl,#0x0017
   0E68 E5                 3502 	push	hl
   0E69 CDr00s00           3503 	call	_vdp_register
   0E6C F1                 3504 	pop	af
                           3505 ;demo.c:449: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3506 	ld	hl,#0x0600
   0E70 E5                 3507 	push	hl
   0E71 CDr00s00           3508 	call	_vdp_register
   0E74 F1                 3509 	pop	af
                           3510 ;demo.c:450: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3511 	ld	hl,#0x6001
   0E78 E5                 3512 	push	hl
   0E79 CDr00s00           3513 	call	_vdp_register
   0E7C F1                 3514 	pop	af
   0E7D C9                 3515 	ret
   0E7E                    3516 _raster_effu_end::
                           3517 ;demo.c:481: void do_letter(char cc) {
                           3518 ;	---------------------------------
                           3519 ; Function do_letter
                           3520 ; ---------------------------------
   0E7E                    3521 _do_letter_start::
   0E7E                    3522 _do_letter:
   0E7E DD E5              3523 	push	ix
   0E80 DD 21 00 00        3524 	ld	ix,#0
   0E84 DD 39              3525 	add	ix,sp
   0E86 F5                 3526 	push	af
                           3527 ;demo.c:482: int cidx = cc - 65;
   0E87 DD 4E 04           3528 	ld	c,4 (ix)
   0E8A DD 7E 04           3529 	ld	a,4 (ix)
   0E8D 17                 3530 	rla	
   0E8E 9F                 3531 	sbc	a,a
   0E8F 47                 3532 	ld	b,a
   0E90 79                 3533 	ld	a,c
   0E91 C6 BF              3534 	add	a,#0xBF
   0E93 DD 77 FE           3535 	ld	-2 (ix),a
   0E96 78                 3536 	ld	a,b
   0E97 CE FF              3537 	adc	a,#0xFF
   0E99 DD 77 FF           3538 	ld	-1 (ix),a
                           3539 ;demo.c:483: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3540 	ld	a,#<_font_x
   0E9E DD 86 FE           3541 	add	a,-2 (ix)
   0EA1 5F                 3542 	ld	e,a
   0EA2 3Es0F              3543 	ld	a,#>_font_x
   0EA4 DD 8E FF           3544 	adc	a,-1 (ix)
   0EA7 57                 3545 	ld	d,a
   0EA8 1A                 3546 	ld	a,(de)
   0EA9 5F                 3547 	ld	e,a
   0EAA 16 00              3548 	ld	d,#0x00
   0EAC 21 7F 00           3549 	ld	hl,#0x007F
   0EAF 19                 3550 	add	hl,de
   0EB0 EB                 3551 	ex	de,hl
   0EB1 21r18s41           3552 	ld	hl,#_cmd
   0EB4 73                 3553 	ld	(hl),e
   0EB5 23                 3554 	inc	hl
   0EB6 72                 3555 	ld	(hl),d
                           3556 ;demo.c:484: cmd.source_y = 512+font_y[cidx];
   0EB7 11r1As41           3557 	ld	de,#_cmd + 2
   0EBA 3Er7C              3558 	ld	a,#<_font_y
   0EBC DD 86 FE           3559 	add	a,-2 (ix)
   0EBF 4F                 3560 	ld	c,a
   0EC0 3Es0F              3561 	ld	a,#>_font_y
   0EC2 DD 8E FF           3562 	adc	a,-1 (ix)
   0EC5 47                 3563 	ld	b,a
   0EC6 0A                 3564 	ld	a,(bc)
   0EC7 4F                 3565 	ld	c,a
   0EC8 06 00              3566 	ld	b,#0x00
   0ECA 21 00 02           3567 	ld	hl,#0x0200
   0ECD 09                 3568 	add	hl,bc
   0ECE 4D                 3569 	ld	c,l
   0ECF 44                 3570 	ld	b,h
   0ED0 EB                 3571 	ex	de,hl
   0ED1 71                 3572 	ld	(hl),c
   0ED2 23                 3573 	inc	hl
   0ED3 70                 3574 	ld	(hl),b
                           3575 ;demo.c:485: cmd.dest_x = lx;
   0ED4 01r1Cs41           3576 	ld	bc,#_cmd + 4
   0ED7 21r62s41           3577 	ld	hl,#_lx + 0
   0EDA 5E                 3578 	ld	e,(hl)
   0EDB 16 00              3579 	ld	d,#0x00
   0EDD 69                 3580 	ld	l,c
   0EDE 60                 3581 	ld	h,b
   0EDF 73                 3582 	ld	(hl),e
   0EE0 23                 3583 	inc	hl
   0EE1 72                 3584 	ld	(hl),d
                           3585 ;demo.c:486: cmd.dest_y = ly;
   0EE2 01r1Es41           3586 	ld	bc,#_cmd + 6
   0EE5 21r63s41           3587 	ld	hl,#_ly + 0
   0EE8 5E                 3588 	ld	e,(hl)
   0EE9 16 00              3589 	ld	d,#0x00
   0EEB 69                 3590 	ld	l,c
   0EEC 60                 3591 	ld	h,b
   0EED 73                 3592 	ld	(hl),e
   0EEE 23                 3593 	inc	hl
   0EEF 72                 3594 	ld	(hl),d
                           3595 ;demo.c:487: cmd.size_x = font_w[cidx];
   0EF0 01r20s41           3596 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3597 	ld	a,#<_font_w
   0EF5 DD 86 FE           3598 	add	a,-2 (ix)
   0EF8 5F                 3599 	ld	e,a
   0EF9 3Es0F              3600 	ld	a,#>_font_w
   0EFB DD 8E FF           3601 	adc	a,-1 (ix)
   0EFE 57                 3602 	ld	d,a
   0EFF 1A                 3603 	ld	a,(de)
   0F00 5F                 3604 	ld	e,a
   0F01 16 00              3605 	ld	d,#0x00
   0F03 69                 3606 	ld	l,c
   0F04 60                 3607 	ld	h,b
   0F05 73                 3608 	ld	(hl),e
   0F06 23                 3609 	inc	hl
   0F07 72                 3610 	ld	(hl),d
                           3611 ;demo.c:488: cmd.size_y = 8;
   0F08 21r22s41           3612 	ld	hl, #_cmd + 10
   0F0B 36 08              3613 	ld	(hl),#0x08
   0F0D 23                 3614 	inc	hl
   0F0E 36 00              3615 	ld	(hl),#0x00
                           3616 ;demo.c:489: cmd.argument = 0x00;
   0F10 3E 00              3617 	ld	a,#0x00
   0F12 32r25s41           3618 	ld	(#_cmd + 13),a
                           3619 ;demo.c:490: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3620 	ld	a,#0x90
   0F17 32r26s41           3621 	ld	(#_cmd + 14),a
                           3622 ;demo.c:491: vdp_copier(&cmd);
   0F1A 21r18s41           3623 	ld	hl,#_cmd
   0F1D E5                 3624 	push	hl
   0F1E CDr00s00           3625 	call	_vdp_copier
   0F21 F1                 3626 	pop	af
                           3627 ;demo.c:492: lx+=font_w[cidx]-1;
   0F22 3ErBC              3628 	ld	a,#<_font_w
   0F24 DD 86 FE           3629 	add	a,-2 (ix)
   0F27 4F                 3630 	ld	c,a
   0F28 3Es0F              3631 	ld	a,#>_font_w
   0F2A DD 8E FF           3632 	adc	a,-1 (ix)
   0F2D 47                 3633 	ld	b,a
   0F2E 0A                 3634 	ld	a,(bc)
   0F2F 4F                 3635 	ld	c,a
   0F30 0D                 3636 	dec	c
   0F31 21r62s41           3637 	ld	hl,#_lx
   0F34 7E                 3638 	ld	a,(hl)
   0F35 81                 3639 	add	a,c
   0F36 77                 3640 	ld	(hl),a
   0F37 DD F9              3641 	ld	sp,ix
   0F39 DD E1              3642 	pop	ix
   0F3B C9                 3643 	ret
   0F3C                    3644 _do_letter_end::
   0F3C                    3645 _font_x:
   0F3C 01                 3646 	.db #0x01
   0F3D 09                 3647 	.db #0x09
   0F3E 11                 3648 	.db #0x11
   0F3F 19                 3649 	.db #0x19
   0F40 21                 3650 	.db #0x21
   0F41 29                 3651 	.db #0x29
   0F42 31                 3652 	.db #0x31
   0F43 39                 3653 	.db #0x39
   0F44 41                 3654 	.db #0x41
   0F45 46                 3655 	.db #0x46
   0F46 4E                 3656 	.db #0x4E
   0F47 56                 3657 	.db #0x56
   0F48 5E                 3658 	.db #0x5E
   0F49 01                 3659 	.db #0x01
   0F4A 0A                 3660 	.db #0x0A
   0F4B 12                 3661 	.db #0x12
   0F4C 1A                 3662 	.db #0x1A
   0F4D 23                 3663 	.db #0x23
   0F4E 2B                 3664 	.db #0x2B
   0F4F 33                 3665 	.db #0x33
   0F50 3C                 3666 	.db #0x3C
   0F51 44                 3667 	.db #0x44
   0F52 4C                 3668 	.db #0x4C
   0F53 56                 3669 	.db #0x56
   0F54 5E                 3670 	.db #0x5E
   0F55 67                 3671 	.db #0x67
   0F56 00                 3672 	.db #0x00
   0F57 00                 3673 	.db #0x00
   0F58 00                 3674 	.db #0x00
   0F59 00                 3675 	.db #0x00
   0F5A 00                 3676 	.db #0x00
   0F5B 00                 3677 	.db #0x00
   0F5C 01                 3678 	.db #0x01
   0F5D 09                 3679 	.db #0x09
   0F5E 11                 3680 	.db #0x11
   0F5F 18                 3681 	.db #0x18
   0F60 20                 3682 	.db #0x20
   0F61 28                 3683 	.db #0x28
   0F62 2F                 3684 	.db #0x2F
   0F63 37                 3685 	.db #0x37
   0F64 3F                 3686 	.db #0x3F
   0F65 45                 3687 	.db #0x45
   0F66 4C                 3688 	.db #0x4C
   0F67 54                 3689 	.db #0x54
   0F68 5A                 3690 	.db #0x5A
   0F69 64                 3691 	.db #0x64
   0F6A 01                 3692 	.db #0x01
   0F6B 09                 3693 	.db #0x09
   0F6C 11                 3694 	.db #0x11
   0F6D 19                 3695 	.db #0x19
   0F6E 21                 3696 	.db #0x21
   0F6F 29                 3697 	.db #0x29
   0F70 30                 3698 	.db #0x30
   0F71 38                 3699 	.db #0x38
   0F72 40                 3700 	.db #0x40
   0F73 4A                 3701 	.db #0x4A
   0F74 52                 3702 	.db #0x52
   0F75 5A                 3703 	.db #0x5A
   0F76 00                 3704 	.db 0x00
   0F77 00                 3705 	.db 0x00
   0F78 00                 3706 	.db 0x00
   0F79 00                 3707 	.db 0x00
   0F7A 00                 3708 	.db 0x00
   0F7B 00                 3709 	.db 0x00
   0F7C                    3710 _font_y:
   0F7C 1C                 3711 	.db #0x1C
   0F7D 1C                 3712 	.db #0x1C
   0F7E 1C                 3713 	.db #0x1C
   0F7F 1C                 3714 	.db #0x1C
   0F80 1C                 3715 	.db #0x1C
   0F81 1C                 3716 	.db #0x1C
   0F82 1C                 3717 	.db #0x1C
   0F83 1C                 3718 	.db #0x1C
   0F84 1C                 3719 	.db #0x1C
   0F85 1C                 3720 	.db #0x1C
   0F86 1C                 3721 	.db #0x1C
   0F87 1C                 3722 	.db #0x1C
   0F88 1C                 3723 	.db #0x1C
   0F89 25                 3724 	.db #0x25
   0F8A 25                 3725 	.db #0x25
   0F8B 25                 3726 	.db #0x25
   0F8C 25                 3727 	.db #0x25
   0F8D 25                 3728 	.db #0x25
   0F8E 25                 3729 	.db #0x25
   0F8F 25                 3730 	.db #0x25
   0F90 25                 3731 	.db #0x25
   0F91 25                 3732 	.db #0x25
   0F92 25                 3733 	.db #0x25
   0F93 25                 3734 	.db #0x25
   0F94 25                 3735 	.db #0x25
   0F95 25                 3736 	.db #0x25
   0F96 00                 3737 	.db #0x00
   0F97 00                 3738 	.db #0x00
   0F98 00                 3739 	.db #0x00
   0F99 00                 3740 	.db #0x00
   0F9A 00                 3741 	.db #0x00
   0F9B 00                 3742 	.db #0x00
   0F9C 37                 3743 	.db #0x37
   0F9D 37                 3744 	.db #0x37
   0F9E 37                 3745 	.db #0x37
   0F9F 37                 3746 	.db #0x37
   0FA0 37                 3747 	.db #0x37
   0FA1 37                 3748 	.db #0x37
   0FA2 37                 3749 	.db #0x37
   0FA3 37                 3750 	.db #0x37
   0FA4 37                 3751 	.db #0x37
   0FA5 37                 3752 	.db #0x37
   0FA6 37                 3753 	.db #0x37
   0FA7 37                 3754 	.db #0x37
   0FA8 37                 3755 	.db #0x37
   0FA9 37                 3756 	.db #0x37
   0FAA 40                 3757 	.db #0x40
   0FAB 40                 3758 	.db #0x40
   0FAC 40                 3759 	.db #0x40
   0FAD 40                 3760 	.db #0x40
   0FAE 40                 3761 	.db #0x40
   0FAF 40                 3762 	.db #0x40
   0FB0 40                 3763 	.db #0x40
   0FB1 40                 3764 	.db #0x40
   0FB2 40                 3765 	.db #0x40
   0FB3 40                 3766 	.db #0x40
   0FB4 40                 3767 	.db #0x40
   0FB5 40                 3768 	.db #0x40
   0FB6 00                 3769 	.db 0x00
   0FB7 00                 3770 	.db 0x00
   0FB8 00                 3771 	.db 0x00
   0FB9 00                 3772 	.db 0x00
   0FBA 00                 3773 	.db 0x00
   0FBB 00                 3774 	.db 0x00
   0FBC                    3775 _font_w:
   0FBC 07                 3776 	.db #0x07
   0FBD 07                 3777 	.db #0x07
   0FBE 07                 3778 	.db #0x07
   0FBF 07                 3779 	.db #0x07
   0FC0 07                 3780 	.db #0x07
   0FC1 07                 3781 	.db #0x07
   0FC2 07                 3782 	.db #0x07
   0FC3 07                 3783 	.db #0x07
   0FC4 04                 3784 	.db #0x04
   0FC5 07                 3785 	.db #0x07
   0FC6 07                 3786 	.db #0x07
   0FC7 07                 3787 	.db #0x07
   0FC8 09                 3788 	.db #0x09
   0FC9 08                 3789 	.db #0x08
   0FCA 07                 3790 	.db #0x07
   0FCB 07                 3791 	.db #0x07
   0FCC 08                 3792 	.db #0x08
   0FCD 07                 3793 	.db #0x07
   0FCE 07                 3794 	.db #0x07
   0FCF 08                 3795 	.db #0x08
   0FD0 07                 3796 	.db #0x07
   0FD1 07                 3797 	.db #0x07
   0FD2 09                 3798 	.db #0x09
   0FD3 07                 3799 	.db #0x07
   0FD4 08                 3800 	.db #0x08
   0FD5 07                 3801 	.db #0x07
   0FD6 00                 3802 	.db #0x00
   0FD7 00                 3803 	.db #0x00
   0FD8 00                 3804 	.db #0x00
   0FD9 00                 3805 	.db #0x00
   0FDA 00                 3806 	.db #0x00
   0FDB 00                 3807 	.db #0x00
   0FDC 07                 3808 	.db #0x07
   0FDD 07                 3809 	.db #0x07
   0FDE 06                 3810 	.db #0x06
   0FDF 07                 3811 	.db #0x07
   0FE0 07                 3812 	.db #0x07
   0FE1 07                 3813 	.db #0x07
   0FE2 07                 3814 	.db #0x07
   0FE3 07                 3815 	.db #0x07
   0FE4 05                 3816 	.db #0x05
   0FE5 06                 3817 	.db #0x06
   0FE6 07                 3818 	.db #0x07
   0FE7 05                 3819 	.db #0x05
   0FE8 09                 3820 	.db #0x09
   0FE9 07                 3821 	.db #0x07
   0FEA 07                 3822 	.db #0x07
   0FEB 07                 3823 	.db #0x07
   0FEC 07                 3824 	.db #0x07
   0FED 07                 3825 	.db #0x07
   0FEE 07                 3826 	.db #0x07
   0FEF 06                 3827 	.db #0x06
   0FF0 07                 3828 	.db #0x07
   0FF1 07                 3829 	.db #0x07
   0FF2 09                 3830 	.db #0x09
   0FF3 07                 3831 	.db #0x07
   0FF4 07                 3832 	.db #0x07
   0FF5 07                 3833 	.db #0x07
   0FF6 00                 3834 	.db 0x00
   0FF7 00                 3835 	.db 0x00
   0FF8 00                 3836 	.db 0x00
   0FF9 00                 3837 	.db 0x00
   0FFA 00                 3838 	.db 0x00
   0FFB 00                 3839 	.db 0x00
                           3840 ;demo.c:496: void do_letter_tall(char cc) {
                           3841 ;	---------------------------------
                           3842 ; Function do_letter_tall
                           3843 ; ---------------------------------
   0FFC                    3844 _do_letter_tall_start::
   0FFC                    3845 _do_letter_tall:
   0FFC DD E5              3846 	push	ix
   0FFE DD 21 00 00        3847 	ld	ix,#0
   1002 DD 39              3848 	add	ix,sp
   1004 F5                 3849 	push	af
                           3850 ;demo.c:497: int cidx = cc - 65;
   1005 DD 4E 04           3851 	ld	c,4 (ix)
   1008 DD 7E 04           3852 	ld	a,4 (ix)
   100B 17                 3853 	rla	
   100C 9F                 3854 	sbc	a,a
   100D 47                 3855 	ld	b,a
   100E 79                 3856 	ld	a,c
   100F C6 BF              3857 	add	a,#0xBF
   1011 DD 77 FE           3858 	ld	-2 (ix),a
   1014 78                 3859 	ld	a,b
   1015 CE FF              3860 	adc	a,#0xFF
   1017 DD 77 FF           3861 	ld	-1 (ix),a
                           3862 ;demo.c:498: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3863 	ld	a,#<_font_x
   101C DD 86 FE           3864 	add	a,-2 (ix)
   101F 5F                 3865 	ld	e,a
   1020 3Es0F              3866 	ld	a,#>_font_x
   1022 DD 8E FF           3867 	adc	a,-1 (ix)
   1025 57                 3868 	ld	d,a
   1026 1A                 3869 	ld	a,(de)
   1027 5F                 3870 	ld	e,a
   1028 16 00              3871 	ld	d,#0x00
   102A 21 7F 00           3872 	ld	hl,#0x007F
   102D 19                 3873 	add	hl,de
   102E EB                 3874 	ex	de,hl
   102F 21r18s41           3875 	ld	hl,#_cmd
   1032 73                 3876 	ld	(hl),e
   1033 23                 3877 	inc	hl
   1034 72                 3878 	ld	(hl),d
                           3879 ;demo.c:499: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r1As41           3880 	ld	de,#_cmd + 2
   1038 3Er7C              3881 	ld	a,#<_font_y
   103A DD 86 FE           3882 	add	a,-2 (ix)
   103D 4F                 3883 	ld	c,a
   103E 3Es0F              3884 	ld	a,#>_font_y
   1040 DD 8E FF           3885 	adc	a,-1 (ix)
   1043 47                 3886 	ld	b,a
   1044 0A                 3887 	ld	a,(bc)
   1045 4F                 3888 	ld	c,a
   1046 06 00              3889 	ld	b,#0x00
   1048 21 FF 01           3890 	ld	hl,#0x01FF
   104B 09                 3891 	add	hl,bc
   104C 4D                 3892 	ld	c,l
   104D 44                 3893 	ld	b,h
   104E EB                 3894 	ex	de,hl
   104F 71                 3895 	ld	(hl),c
   1050 23                 3896 	inc	hl
   1051 70                 3897 	ld	(hl),b
                           3898 ;demo.c:500: cmd.dest_x = lx;
   1052 01r1Cs41           3899 	ld	bc,#_cmd + 4
   1055 21r62s41           3900 	ld	hl,#_lx + 0
   1058 5E                 3901 	ld	e,(hl)
   1059 16 00              3902 	ld	d,#0x00
   105B 69                 3903 	ld	l,c
   105C 60                 3904 	ld	h,b
   105D 73                 3905 	ld	(hl),e
   105E 23                 3906 	inc	hl
   105F 72                 3907 	ld	(hl),d
                           3908 ;demo.c:501: cmd.dest_y = ly;
   1060 01r1Es41           3909 	ld	bc,#_cmd + 6
   1063 21r63s41           3910 	ld	hl,#_ly + 0
   1066 5E                 3911 	ld	e,(hl)
   1067 16 00              3912 	ld	d,#0x00
   1069 69                 3913 	ld	l,c
   106A 60                 3914 	ld	h,b
   106B 73                 3915 	ld	(hl),e
   106C 23                 3916 	inc	hl
   106D 72                 3917 	ld	(hl),d
                           3918 ;demo.c:502: cmd.size_x = font_w[cidx];
   106E 01r20s41           3919 	ld	bc,#_cmd + 8
   1071 3ErBC              3920 	ld	a,#<_font_w
   1073 DD 86 FE           3921 	add	a,-2 (ix)
   1076 5F                 3922 	ld	e,a
   1077 3Es0F              3923 	ld	a,#>_font_w
   1079 DD 8E FF           3924 	adc	a,-1 (ix)
   107C 57                 3925 	ld	d,a
   107D 1A                 3926 	ld	a,(de)
   107E 5F                 3927 	ld	e,a
   107F 16 00              3928 	ld	d,#0x00
   1081 69                 3929 	ld	l,c
   1082 60                 3930 	ld	h,b
   1083 73                 3931 	ld	(hl),e
   1084 23                 3932 	inc	hl
   1085 72                 3933 	ld	(hl),d
                           3934 ;demo.c:503: cmd.size_y = 10;
   1086 21r22s41           3935 	ld	hl, #_cmd + 10
   1089 36 0A              3936 	ld	(hl),#0x0A
   108B 23                 3937 	inc	hl
   108C 36 00              3938 	ld	(hl),#0x00
                           3939 ;demo.c:504: cmd.argument = 0x00;
   108E 3E 00              3940 	ld	a,#0x00
   1090 32r25s41           3941 	ld	(#_cmd + 13),a
                           3942 ;demo.c:505: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3943 	ld	a,#0x90
   1095 32r26s41           3944 	ld	(#_cmd + 14),a
                           3945 ;demo.c:506: vdp_copier(&cmd);
   1098 21r18s41           3946 	ld	hl,#_cmd
   109B E5                 3947 	push	hl
   109C CDr00s00           3948 	call	_vdp_copier
   109F F1                 3949 	pop	af
                           3950 ;demo.c:507: lx+=font_w[cidx]-1;
   10A0 3ErBC              3951 	ld	a,#<_font_w
   10A2 DD 86 FE           3952 	add	a,-2 (ix)
   10A5 4F                 3953 	ld	c,a
   10A6 3Es0F              3954 	ld	a,#>_font_w
   10A8 DD 8E FF           3955 	adc	a,-1 (ix)
   10AB 47                 3956 	ld	b,a
   10AC 0A                 3957 	ld	a,(bc)
   10AD 4F                 3958 	ld	c,a
   10AE 0D                 3959 	dec	c
   10AF 21r62s41           3960 	ld	hl,#_lx
   10B2 7E                 3961 	ld	a,(hl)
   10B3 81                 3962 	add	a,c
   10B4 77                 3963 	ld	(hl),a
   10B5 DD F9              3964 	ld	sp,ix
   10B7 DD E1              3965 	pop	ix
   10B9 C9                 3966 	ret
   10BA                    3967 _do_letter_tall_end::
                           3968 ;demo.c:510: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3969 ;	---------------------------------
                           3970 ; Function drawstr
                           3971 ; ---------------------------------
   10BA                    3972 _drawstr_start::
   10BA                    3973 _drawstr:
   10BA DD E5              3974 	push	ix
   10BC DD 21 00 00        3975 	ld	ix,#0
   10C0 DD 39              3976 	add	ix,sp
                           3977 ;demo.c:511: char* c = str;
   10C2 DD 4E 04           3978 	ld	c,4 (ix)
   10C5 DD 46 05           3979 	ld	b,5 (ix)
                           3980 ;demo.c:512: lx = x;
   10C8 DD 5E 06           3981 	ld	e,6 (ix)
   10CB 21r62s41           3982 	ld	hl,#_lx + 0
   10CE 73                 3983 	ld	(hl), e
                           3984 ;demo.c:513: ly = y;
   10CF DD 7E 07           3985 	ld	a,7 (ix)
   10D2 21r63s41           3986 	ld	hl,#_ly + 0
   10D5 77                 3987 	ld	(hl), a
                           3988 ;demo.c:514: while (*c) {
   10D6                    3989 00107$:
   10D6 0A                 3990 	ld	a,(bc)
   10D7 57                 3991 	ld	d,a
   10D8 B7                 3992 	or	a,a
   10D9 28 42              3993 	jr	Z,00110$
                           3994 ;demo.c:515: char ltr = *c++; 
   10DB 03                 3995 	inc	bc
                           3996 ;demo.c:516: if (ltr == ' ') lx+=4;
   10DC 7A                 3997 	ld	a,d
   10DD D6 20              3998 	sub	a,#0x20
   10DF 20 1E              3999 	jr	NZ,00105$
   10E1 FD 21r62s41        4000 	ld	iy,#_lx
   10E5 FD 34 00           4001 	inc	0 (iy)
   10E8 FD 21r62s41        4002 	ld	iy,#_lx
   10EC FD 34 00           4003 	inc	0 (iy)
   10EF FD 21r62s41        4004 	ld	iy,#_lx
   10F3 FD 34 00           4005 	inc	0 (iy)
   10F6 FD 21r62s41        4006 	ld	iy,#_lx
   10FA FD 34 00           4007 	inc	0 (iy)
   10FD 18 D7              4008 	jr	00107$
   10FF                    4009 00105$:
                           4010 ;demo.c:517: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 4011 	ld	a,d
   1100 D6 5F              4012 	sub	a,#0x5F
   1102 20 0D              4013 	jr	NZ,00102$
   1104 21r63s41           4014 	ld	hl,#_ly
   1107 7E                 4015 	ld	a,(hl)
   1108 C6 09              4016 	add	a,#0x09
   110A 77                 4017 	ld	(hl),a
   110B 21r62s41           4018 	ld	hl,#_lx + 0
   110E 73                 4019 	ld	(hl), e
   110F 18 C5              4020 	jr	00107$
   1111                    4021 00102$:
                           4022 ;demo.c:518: else do_letter(ltr);
   1111 C5                 4023 	push	bc
   1112 D5                 4024 	push	de
   1113 D5                 4025 	push	de
   1114 33                 4026 	inc	sp
   1115 CDr7Es0E           4027 	call	_do_letter
   1118 33                 4028 	inc	sp
   1119 D1                 4029 	pop	de
   111A C1                 4030 	pop	bc
   111B 18 B9              4031 	jr	00107$
   111D                    4032 00110$:
   111D DD E1              4033 	pop	ix
   111F C9                 4034 	ret
   1120                    4035 _drawstr_end::
                           4036 ;demo.c:522: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4037 ;	---------------------------------
                           4038 ; Function drawsine
                           4039 ; ---------------------------------
   1120                    4040 _drawsine_start::
   1120                    4041 _drawsine:
   1120 DD E5              4042 	push	ix
   1122 DD 21 00 00        4043 	ld	ix,#0
   1126 DD 39              4044 	add	ix,sp
   1128 3B                 4045 	dec	sp
                           4046 ;demo.c:523: char* c = str;
   1129 DD 4E 04           4047 	ld	c,4 (ix)
   112C DD 46 05           4048 	ld	b,5 (ix)
                           4049 ;demo.c:524: lx = x;
   112F DD 7E 06           4050 	ld	a,6 (ix)
   1132 21r62s41           4051 	ld	hl,#_lx + 0
   1135 77                 4052 	ld	(hl), a
                           4053 ;demo.c:526: while (*c) {
   1136                    4054 00104$:
   1136 0A                 4055 	ld	a,(bc)
   1137 5F                 4056 	ld	e,a
   1138 B7                 4057 	or	a,a
   1139 CArADs11           4058 	jp	Z,00107$
                           4059 ;demo.c:527: char ltr = *c++; 
   113C 03                 4060 	inc	bc
   113D DD 73 FF           4061 	ld	-1 (ix),e
                           4062 ;demo.c:528: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21r62s41           4063 	ld	hl,#_lx + 0
   1143 5E                 4064 	ld	e,(hl)
   1144 16 00              4065 	ld	d,#0x00
   1146 21r14s41           4066 	ld	hl,#_vbicount
   1149 7B                 4067 	ld	a,e
   114A 86                 4068 	add	a,(hl)
   114B 5F                 4069 	ld	e,a
   114C 7A                 4070 	ld	a,d
   114D 23                 4071 	inc	hl
   114E 8E                 4072 	adc	a,(hl)
   114F 57                 4073 	ld	d,a
   1150 CB 2A              4074 	sra	d
   1152 CB 1B              4075 	rr	e
   1154 16 00              4076 	ld	d,#0x00
   1156 CB 23              4077 	sla	e
   1158 CB 12              4078 	rl	d
   115A 21r2Cs00           4079 	ld	hl,#_sintabx
   115D 19                 4080 	add	hl,de
   115E 5E                 4081 	ld	e,(hl)
   115F 23                 4082 	inc	hl
   1160 56                 4083 	ld	d,(hl)
   1161 CB 3A              4084 	srl	d
   1163 CB 1B              4085 	rr	e
   1165 CB 3A              4086 	srl	d
   1167 CB 1B              4087 	rr	e
   1169 CB 3A              4088 	srl	d
   116B CB 1B              4089 	rr	e
   116D CB 3A              4090 	srl	d
   116F CB 1B              4091 	rr	e
   1171 21r63s41           4092 	ld	hl,#_ly
   1174 DD 7E 07           4093 	ld	a,7 (ix)
   1177 83                 4094 	add	a,e
   1178 77                 4095 	ld	(hl),a
                           4096 ;demo.c:529: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           4097 	ld	a,-1 (ix)
   117C D6 20              4098 	sub	a,#0x20
   117E 20 1F              4099 	jr	NZ,00102$
   1180 FD 21r62s41        4100 	ld	iy,#_lx
   1184 FD 34 00           4101 	inc	0 (iy)
   1187 FD 21r62s41        4102 	ld	iy,#_lx
   118B FD 34 00           4103 	inc	0 (iy)
   118E FD 21r62s41        4104 	ld	iy,#_lx
   1192 FD 34 00           4105 	inc	0 (iy)
   1195 FD 21r62s41        4106 	ld	iy,#_lx
   1199 FD 34 00           4107 	inc	0 (iy)
   119C C3r36s11           4108 	jp	00104$
   119F                    4109 00102$:
                           4110 ;demo.c:530: else do_letter_tall(ltr);
   119F C5                 4111 	push	bc
   11A0 DD 7E FF           4112 	ld	a,-1 (ix)
   11A3 F5                 4113 	push	af
   11A4 33                 4114 	inc	sp
   11A5 CDrFCs0F           4115 	call	_do_letter_tall
   11A8 33                 4116 	inc	sp
   11A9 C1                 4117 	pop	bc
   11AA C3r36s11           4118 	jp	00104$
   11AD                    4119 00107$:
   11AD DD F9              4120 	ld	sp,ix
   11AF DD E1              4121 	pop	ix
   11B1 C9                 4122 	ret
   11B2                    4123 _drawsine_end::
                           4124 ;demo.c:534: void font() {
                           4125 ;	---------------------------------
                           4126 ; Function font
                           4127 ; ---------------------------------
   11B2                    4128 _font_start::
   11B2                    4129 _font:
                           4130 ;demo.c:536: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           4131 	ld	hl,#0x3C4A
   11B5 E5                 4132 	push	hl
   11B6 21rC0s11           4133 	ld	hl,#__str_8
   11B9 E5                 4134 	push	hl
   11BA CDrBAs10           4135 	call	_drawstr
   11BD F1                 4136 	pop	af
   11BE F1                 4137 	pop	af
   11BF C9                 4138 	ret
   11C0                    4139 _font_end::
   11C0                    4140 __str_8:
   11C0 44 49 47 49 54 41  4141 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  4142 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 4143 	.db 0x00
                           4144 ;demo.c:545: void twister() {
                           4145 ;	---------------------------------
                           4146 ; Function twister
                           4147 ; ---------------------------------
   1223                    4148 _twister_start::
   1223                    4149 _twister:
   1223 DD E5              4150 	push	ix
   1225 DD 21 00 00        4151 	ld	ix,#0
   1229 DD 39              4152 	add	ix,sp
   122B F5                 4153 	push	af
                           4154 ;demo.c:549: if (twinited == 0) {
   122C 3Ar66s41           4155 	ld	a,(#_twinited+0)
   122F FD 21r66s41        4156 	ld	iy,#_twinited
   1233 FD B6 01           4157 	or	a,1 (iy)
   1236 C2rA6s12           4158 	jp	NZ,00102$
                           4159 ;demo.c:550: cmd.size_x = 256;
   1239 21r20s41           4160 	ld	hl, #_cmd + 8
   123C 36 00              4161 	ld	(hl),#0x00
   123E 23                 4162 	inc	hl
   123F 36 01              4163 	ld	(hl),#0x01
                           4164 ;demo.c:551: cmd.size_y = 1;
   1241 21r22s41           4165 	ld	hl, #_cmd + 10
   1244 36 01              4166 	ld	(hl),#0x01
   1246 23                 4167 	inc	hl
   1247 36 00              4168 	ld	(hl),#0x00
                           4169 ;demo.c:552: cmd.data = 0;
                           4170 ;demo.c:553: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4171 	ld	a,#0x00
   124B 32r24s41           4172 	ld	(#_cmd + 12),a
   124E 32r25s41           4173 	ld	(#_cmd + 13),a
                           4174 ;demo.c:554: cmd.command = 0xd0; // vram to vram, y only
   1251 01r26s41           4175 	ld	bc,#_cmd + 14
   1254 3E D0              4176 	ld	a,#0xD0
   1256 02                 4177 	ld	(bc),a
                           4178 ;demo.c:555: cmd.source_x = 0;
   1257 21r18s41           4179 	ld	hl,#_cmd
   125A 36 00              4180 	ld	(hl),#0x00
   125C 23                 4181 	inc	hl
   125D 36 00              4182 	ld	(hl),#0x00
                           4183 ;demo.c:556: cmd.dest_x = 0;
   125F 21r1Cs41           4184 	ld	hl, #_cmd + 4
   1262 36 00              4185 	ld	(hl),#0x00
   1264 23                 4186 	inc	hl
   1265 36 00              4187 	ld	(hl),#0x00
                           4188 ;demo.c:558: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4189 	ld	bc,#0x0000
   126A                    4190 00103$:
   126A 79                 4191 	ld	a,c
   126B D6 D4              4192 	sub	a,#0xD4
   126D 78                 4193 	ld	a,b
   126E DE 00              4194 	sbc	a,#0x00
   1270 F2r91s12           4195 	jp	P,00106$
                           4196 ;demo.c:559: waitVB();
   1273 76                 4197 		halt 
                           4198 ;demo.c:560: cmd.source_y = 0;
   1274 11r1As41           4199 	ld	de,#_cmd + 2
   1277 EB                 4200 	ex	de,hl
   1278 36 00              4201 	ld	(hl),#0x00
   127A 23                 4202 	inc	hl
   127B 36 00              4203 	ld	(hl),#0x00
                           4204 ;demo.c:561: cmd.dest_y = y;
   127D 11r1Es41           4205 	ld	de,#_cmd + 6
   1280 EB                 4206 	ex	de,hl
   1281 71                 4207 	ld	(hl),c
   1282 23                 4208 	inc	hl
   1283 70                 4209 	ld	(hl),b
                           4210 ;demo.c:562: vdp_copier(&cmd);
   1284 C5                 4211 	push	bc
   1285 21r18s41           4212 	ld	hl,#_cmd
   1288 E5                 4213 	push	hl
   1289 CDr00s00           4214 	call	_vdp_copier
   128C F1                 4215 	pop	af
   128D C1                 4216 	pop	bc
                           4217 ;demo.c:558: for (y = 0; y < 212; y+=1) {
   128E 03                 4218 	inc	bc
   128F 18 D9              4219 	jr	00103$
   1291                    4220 00106$:
                           4221 ;demo.c:566: twinited = 1;
   1291 21r66s41           4222 	ld	hl,#_twinited + 0
   1294 36 01              4223 	ld	(hl), #0x01
   1296 21r67s41           4224 	ld	hl,#_twinited + 1
   1299 36 00              4225 	ld	(hl), #0x00
                           4226 ;demo.c:567: vdp_load_palette(twister_palette);
   129B 21rB4s40           4227 	ld	hl,#_twister_palette
   129E E5                 4228 	push	hl
   129F CDr00s00           4229 	call	_vdp_load_palette
   12A2 F1                 4230 	pop	af
                           4231 ;demo.c:568: font();
   12A3 CDrB2s11           4232 	call	_font
   12A6                    4233 00102$:
                           4234 ;demo.c:571: cmd.size_x = 70;
   12A6 21r20s41           4235 	ld	hl, #_cmd + 8
   12A9 36 46              4236 	ld	(hl),#0x46
   12AB 23                 4237 	inc	hl
   12AC 36 00              4238 	ld	(hl),#0x00
                           4239 ;demo.c:572: cmd.size_y = 2;
   12AE 21r22s41           4240 	ld	hl, #_cmd + 10
   12B1 36 02              4241 	ld	(hl),#0x02
   12B3 23                 4242 	inc	hl
   12B4 36 00              4243 	ld	(hl),#0x00
                           4244 ;demo.c:573: cmd.data = 0;
   12B6 3E 00              4245 	ld	a,#0x00
   12B8 32r24s41           4246 	ld	(#_cmd + 12),a
                           4247 ;demo.c:574: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4248 	ld	a,#0x04
   12BD 32r25s41           4249 	ld	(#_cmd + 13),a
                           4250 ;demo.c:575: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r26s41           4251 	ld	bc,#_cmd + 14
   12C3 3E E0              4252 	ld	a,#0xE0
   12C5 02                 4253 	ld	(bc),a
                           4254 ;demo.c:576: cmd.source_x = 70;
   12C6 21r18s41           4255 	ld	hl,#_cmd
   12C9 36 46              4256 	ld	(hl),#0x46
   12CB 23                 4257 	inc	hl
   12CC 36 00              4258 	ld	(hl),#0x00
                           4259 ;demo.c:577: cmd.dest_x = 70;
   12CE 21r1Cs41           4260 	ld	hl, #_cmd + 4
   12D1 36 46              4261 	ld	(hl),#0x46
   12D3 23                 4262 	inc	hl
   12D4 36 00              4263 	ld	(hl),#0x00
                           4264 ;demo.c:579: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4265 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4266 	ld	-1 (ix),#0x00
   12DE                    4267 00107$:
   12DE DD 7E FE           4268 	ld	a,-2 (ix)
   12E1 D6 D4              4269 	sub	a,#0xD4
   12E3 DD 7E FF           4270 	ld	a,-1 (ix)
   12E6 DE 00              4271 	sbc	a,#0x00
   12E8 F2r41s13           4272 	jp	P,00110$
                           4273 ;demo.c:580: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r1As41           4274 	ld	de,#_cmd + 2
   12EE DD 4E FE           4275 	ld	c,-2 (ix)
   12F1 DD 46 FF           4276 	ld	b,-1 (ix)
   12F4 CB 28              4277 	sra	b
   12F6 CB 19              4278 	rr	c
   12F8 3Ar64s41           4279 	ld	a,(#_ff+0)
   12FB 81                 4280 	add	a,c
   12FC 4F                 4281 	ld	c,a
   12FD 3Ar65s41           4282 	ld	a,(#_ff+1)
   1300 88                 4283 	adc	a,b
   1301 06 00              4284 	ld	b,#0x00
   1303 21r00s00           4285 	ld	hl,#_sintab
   1306 09                 4286 	add	hl,bc
   1307 7E                 4287 	ld	a,(hl)
   1308 4F                 4288 	ld	c,a
   1309 CB 29              4289 	sra	c
   130B 79                 4290 	ld	a,c
   130C 17                 4291 	rla	
   130D 9F                 4292 	sbc	a,a
   130E 47                 4293 	ld	b,a
   130F 21 40 02           4294 	ld	hl,#0x0240
   1312 09                 4295 	add	hl,bc
   1313 4D                 4296 	ld	c,l
   1314 44                 4297 	ld	b,h
   1315 6B                 4298 	ld	l,e
   1316 62                 4299 	ld	h,d
   1317 71                 4300 	ld	(hl),c
   1318 23                 4301 	inc	hl
   1319 70                 4302 	ld	(hl),b
                           4303 ;demo.c:581: cmd.dest_y = y;
   131A 21r1Es41           4304 	ld	hl, #_cmd + 6
   131D DD 7E FE           4305 	ld	a,-2 (ix)
   1320 77                 4306 	ld	(hl),a
   1321 23                 4307 	inc	hl
   1322 DD 7E FF           4308 	ld	a,-1 (ix)
   1325 77                 4309 	ld	(hl),a
                           4310 ;demo.c:582: vdp_copier(&cmd);
   1326 21r18s41           4311 	ld	hl,#_cmd
   1329 E5                 4312 	push	hl
   132A CDr00s00           4313 	call	_vdp_copier
   132D F1                 4314 	pop	af
                           4315 ;demo.c:579: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4316 	ld	a,-2 (ix)
   1331 C6 02              4317 	add	a,#0x02
   1333 DD 77 FE           4318 	ld	-2 (ix),a
   1336 DD 7E FF           4319 	ld	a,-1 (ix)
   1339 CE 00              4320 	adc	a,#0x00
   133B DD 77 FF           4321 	ld	-1 (ix),a
   133E C3rDEs12           4322 	jp	00107$
   1341                    4323 00110$:
                           4324 ;demo.c:586: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21r64s41           4325 	ld	hl,#_ff + 0
   1344 4E                 4326 	ld	c,(hl)
   1345 21r65s41           4327 	ld	hl,#_ff + 1
   1348 46                 4328 	ld	b,(hl)
   1349 CB 28              4329 	sra	b
   134B CB 19              4330 	rr	c
   134D CB 28              4331 	sra	b
   134F CB 19              4332 	rr	c
   1351 21r64s41           4333 	ld	hl,#_ff + 0
   1354 5E                 4334 	ld	e,(hl)
   1355 21r65s41           4335 	ld	hl,#_ff + 1
   1358 56                 4336 	ld	d,(hl)
   1359 CB 2A              4337 	sra	d
   135B CB 1B              4338 	rr	e
   135D CB 2A              4339 	sra	d
   135F CB 1B              4340 	rr	e
   1361 CB 2A              4341 	sra	d
   1363 CB 1B              4342 	rr	e
   1365 43                 4343 	ld	b,e
   1366 79                 4344 	ld	a,c
   1367 F5                 4345 	push	af
   1368 33                 4346 	inc	sp
   1369 C5                 4347 	push	bc
   136A 33                 4348 	inc	sp
   136B 41                 4349 	ld	b,c
   136C 0E 04              4350 	ld	c,#0x04
   136E C5                 4351 	push	bc
   136F CDr00s00           4352 	call	_msx2_palette
   1372 F1                 4353 	pop	af
   1373 F1                 4354 	pop	af
                           4355 ;demo.c:588: ff+=4;
   1374 21r64s41           4356 	ld	hl,#_ff
   1377 7E                 4357 	ld	a,(hl)
   1378 C6 04              4358 	add	a,#0x04
   137A 23                 4359 	inc	hl
   137B 2B                 4360 	dec	hl
   137C C5                 4361 	push	bc
   137D 4F                 4362 	ld	c, a
   137E 23                 4363 	inc	hl
   137F 7E                 4364 	ld	a, (hl)
   1380 47                 4365 	ld	b, a
   1381 79                 4366 	ld	a, c
   1382 2B                 4367 	dec	hl
   1383 77                 4368 	ld	(hl), a
   1384 78                 4369 	ld	a, b
   1385 C1                 4370 	pop	bc
   1386 CE 00              4371 	adc	a,#0x00
   1388 23                 4372 	inc	hl
   1389 77                 4373 	ld	(hl),a
   138A DD F9              4374 	ld	sp,ix
   138C DD E1              4375 	pop	ix
   138E C9                 4376 	ret
   138F                    4377 _twister_end::
                           4378 ;demo.c:599: void bulbs() {
                           4379 ;	---------------------------------
                           4380 ; Function bulbs
                           4381 ; ---------------------------------
   138F                    4382 _bulbs_start::
   138F                    4383 _bulbs:
   138F DD E5              4384 	push	ix
   1391 DD 21 00 00        4385 	ld	ix,#0
   1395 DD 39              4386 	add	ix,sp
   1397 21 FA FF           4387 	ld	hl,#-6
   139A 39                 4388 	add	hl,sp
   139B F9                 4389 	ld	sp,hl
                           4390 ;demo.c:603: ender+=enderdir;
   139C 21r70s41           4391 	ld	hl,#_enderdir
   139F D5                 4392 	push	de
   13A0 FD 21r6Es41        4393 	ld	iy,#_ender
   13A4 FD E5              4394 	push	iy
   13A6 D1                 4395 	pop	de
   13A7 1A                 4396 	ld	a,(de)
   13A8 86                 4397 	add	a,(hl)
   13A9 13                 4398 	inc	de
   13AA 1B                 4399 	dec	de
   13AB C5                 4400 	push	bc
   13AC 4F                 4401 	ld	c, a
   13AD 13                 4402 	inc	de
   13AE 1A                 4403 	ld	a, (de)
   13AF 47                 4404 	ld	b, a
   13B0 79                 4405 	ld	a, c
   13B1 1B                 4406 	dec	de
   13B2 12                 4407 	ld	(de), a
   13B3 78                 4408 	ld	a, b
   13B4 C1                 4409 	pop	bc
   13B5 23                 4410 	inc	hl
   13B6 8E                 4411 	adc	a,(hl)
   13B7 13                 4412 	inc	de
   13B8 12                 4413 	ld	(de),a
   13B9 D1                 4414 	pop	de
                           4415 ;demo.c:604: if (ender < 2) { enderdir = -enderdir; }
   13BA 3Ar6Es41           4416 	ld	a,(#_ender+0)
   13BD D6 02              4417 	sub	a,#0x02
   13BF 3Ar6Fs41           4418 	ld	a,(#_ender+1)
   13C2 DE 00              4419 	sbc	a,#0x00
   13C4 F2rE8s13           4420 	jp	P,00102$
   13C7 AF                 4421 	xor	a,a
   13C8 FD 21r70s41        4422 	ld	iy,#_enderdir
   13CC 3E 00              4423 	ld	a,#0x00
   13CE FD 9E 00           4424 	sbc	a,0 (iy)
   13D1 FD 21r70s41        4425 	ld	iy,#_enderdir
   13D5 FD 77 00           4426 	ld	0 (iy),a
   13D8 FD 21r70s41        4427 	ld	iy,#_enderdir
   13DC 3E 00              4428 	ld	a,#0x00
   13DE FD 9E 01           4429 	sbc	a,1 (iy)
   13E1 FD 21r70s41        4430 	ld	iy,#_enderdir
   13E5 FD 77 01           4431 	ld	1 (iy),a
   13E8                    4432 00102$:
                           4433 ;demo.c:605: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   13E8 3Ar6Es41           4434 	ld	a,(#_ender+0)
   13EB D6 D4              4435 	sub	a,#0xD4
   13ED 3Ar6Fs41           4436 	ld	a,(#_ender+1)
   13F0 DE 00              4437 	sbc	a,#0x00
   13F2 FAr18s14           4438 	jp	M,00104$
   13F5 AF                 4439 	xor	a,a
   13F6 FD 21r70s41        4440 	ld	iy,#_enderdir
   13FA 3E 00              4441 	ld	a,#0x00
   13FC FD 9E 00           4442 	sbc	a,0 (iy)
   13FF 21r70s41           4443 	ld	hl,#_enderdir + 0
   1402 77                 4444 	ld	(hl), a
   1403 FD 21r70s41        4445 	ld	iy,#_enderdir
   1407 3E 00              4446 	ld	a,#0x00
   1409 FD 9E 01           4447 	sbc	a,1 (iy)
   140C 21r71s41           4448 	ld	hl,#_enderdir + 1
   140F 77                 4449 	ld	(hl), a
   1410 2Ar72s41           4450 	ld	hl,(_sy)
   1413 2B                 4451 	dec	hl
   1414 2B                 4452 	dec	hl
   1415 22r72s41           4453 	ld	(_sy),hl
   1418                    4454 00104$:
                           4455 ;demo.c:607: enderend = ender + 92;
   1418 3Ar6Es41           4456 	ld	a,(#_ender+0)
   141B C6 5C              4457 	add	a,#0x5C
   141D DD 77 FE           4458 	ld	-2 (ix),a
   1420 3Ar6Fs41           4459 	ld	a,(#_ender+1)
   1423 CE 00              4460 	adc	a,#0x00
   1425 DD 77 FF           4461 	ld	-1 (ix),a
                           4462 ;demo.c:609: if (enderend > 212) enderend = 212;
   1428 3E D4              4463 	ld	a,#0xD4
   142A DD 96 FE           4464 	sub	a,-2 (ix)
   142D 3E 00              4465 	ld	a,#0x00
   142F DD 9E FF           4466 	sbc	a,-1 (ix)
   1432 F2r3Ds14           4467 	jp	P,00106$
   1435 DD 36 FE D4        4468 	ld	-2 (ix),#0xD4
   1439 DD 36 FF 00        4469 	ld	-1 (ix),#0x00
   143D                    4470 00106$:
                           4471 ;demo.c:610: if (enderend > 212-16) sy = 16-(212-enderend);
   143D 3E C4              4472 	ld	a,#0xC4
   143F DD 96 FE           4473 	sub	a,-2 (ix)
   1442 3E 00              4474 	ld	a,#0x00
   1444 DD 9E FF           4475 	sbc	a,-1 (ix)
   1447 F2r62s14           4476 	jp	P,00108$
   144A 3E D4              4477 	ld	a,#0xD4
   144C DD 96 FE           4478 	sub	a,-2 (ix)
   144F 5F                 4479 	ld	e,a
   1450 3E 00              4480 	ld	a,#0x00
   1452 DD 9E FF           4481 	sbc	a,-1 (ix)
   1455 57                 4482 	ld	d,a
   1456 21r72s41           4483 	ld	hl,#_sy
   1459 3E 10              4484 	ld	a,#0x10
   145B 93                 4485 	sub	a,e
   145C 77                 4486 	ld	(hl),a
   145D 3E 00              4487 	ld	a,#0x00
   145F 9A                 4488 	sbc	a,d
   1460 23                 4489 	inc	hl
   1461 77                 4490 	ld	(hl),a
   1462                    4491 00108$:
                           4492 ;demo.c:612: if(bulbflipper == 1) {
   1462 3Ar68s41           4493 	ld	a,(#_bulbflipper+0)
   1465 D6 01              4494 	sub	a,#0x01
   1467 20 06              4495 	jr	NZ,00133$
   1469 3Ar69s41           4496 	ld	a,(#_bulbflipper+1)
   146C B7                 4497 	or	a,a
   146D 28 03              4498 	jr	Z,00134$
   146F                    4499 00133$:
   146F C3r28s15           4500 	jp	00110$
   1472                    4501 00134$:
                           4502 ;demo.c:613: cmd.size_x = 72;
   1472 11r20s41           4503 	ld	de,#_cmd + 8
   1475 EB                 4504 	ex	de,hl
   1476 36 48              4505 	ld	(hl),#0x48
   1478 23                 4506 	inc	hl
   1479 36 00              4507 	ld	(hl),#0x00
                           4508 ;demo.c:614: cmd.size_y = sy;
   147B 11r22s41           4509 	ld	de,#_cmd + 10
   147E ED 4Br72s41        4510 	ld	bc,(_sy)
   1482 6B                 4511 	ld	l,e
   1483 62                 4512 	ld	h,d
   1484 71                 4513 	ld	(hl),c
   1485 23                 4514 	inc	hl
   1486 70                 4515 	ld	(hl),b
                           4516 ;demo.c:615: cmd.data = 0;
   1487 3E 00              4517 	ld	a,#0x00
   1489 32r24s41           4518 	ld	(#_cmd + 12),a
                           4519 ;demo.c:616: cmd.argument = 0x04; // from 72xY to left
   148C 3E 04              4520 	ld	a,#0x04
   148E 32r25s41           4521 	ld	(#_cmd + 13),a
                           4522 ;demo.c:617: cmd.command = 0xe0; // vram to vram, y only
   1491 01r26s41           4523 	ld	bc,#_cmd + 14
   1494 3E E0              4524 	ld	a,#0xE0
   1496 02                 4525 	ld	(bc),a
                           4526 ;demo.c:618: cmd.source_x = 72;
   1497 21r18s41           4527 	ld	hl,#_cmd
   149A 36 48              4528 	ld	(hl),#0x48
   149C 23                 4529 	inc	hl
   149D 36 00              4530 	ld	(hl),#0x00
                           4531 ;demo.c:619: cmd.dest_x = 72;
   149F 21r1Cs41           4532 	ld	hl, #_cmd + 4
   14A2 36 48              4533 	ld	(hl),#0x48
   14A4 23                 4534 	inc	hl
   14A5 36 00              4535 	ld	(hl),#0x00
                           4536 ;demo.c:621: for (y = ender; y < enderend; y+=16) {
   14A7 ED 4Br6Es41        4537 	ld	bc,(_ender)
   14AB DD 71 FC           4538 	ld	-4 (ix),c
   14AE DD 70 FD           4539 	ld	-3 (ix),b
   14B1                    4540 00112$:
   14B1 DD 7E FC           4541 	ld	a,-4 (ix)
   14B4 DD 96 FE           4542 	sub	a,-2 (ix)
   14B7 DD 7E FD           4543 	ld	a,-3 (ix)
   14BA DD 9E FF           4544 	sbc	a,-1 (ix)
   14BD F2r0Fs15           4545 	jp	P,00115$
                           4546 ;demo.c:622: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   14C0 01r1As41           4547 	ld	bc,#_cmd + 2
   14C3 3Ar6As41           4548 	ld	a,(#_ff1+0)
   14C6 DD 86 FC           4549 	add	a,-4 (ix)
   14C9 5F                 4550 	ld	e,a
   14CA 3Ar6Bs41           4551 	ld	a,(#_ff1+1)
   14CD DD 8E FD           4552 	adc	a,-3 (ix)
   14D0 16 00              4553 	ld	d,#0x00
   14D2 21r00s00           4554 	ld	hl,#_sintab
   14D5 19                 4555 	add	hl,de
   14D6 5E                 4556 	ld	e,(hl)
   14D7 CB 2B              4557 	sra	e
   14D9 7B                 4558 	ld	a,e
   14DA 17                 4559 	rla	
   14DB 9F                 4560 	sbc	a,a
   14DC 57                 4561 	ld	d,a
   14DD 21 40 01           4562 	ld	hl,#0x0140
   14E0 19                 4563 	add	hl,de
   14E1 EB                 4564 	ex	de,hl
   14E2 69                 4565 	ld	l,c
   14E3 60                 4566 	ld	h,b
   14E4 73                 4567 	ld	(hl),e
   14E5 23                 4568 	inc	hl
   14E6 72                 4569 	ld	(hl),d
                           4570 ;demo.c:623: cmd.dest_y = y;
   14E7 11r1Es41           4571 	ld	de,#_cmd + 6
   14EA EB                 4572 	ex	de,hl
   14EB DD 7E FC           4573 	ld	a,-4 (ix)
   14EE 77                 4574 	ld	(hl),a
   14EF 23                 4575 	inc	hl
   14F0 DD 7E FD           4576 	ld	a,-3 (ix)
   14F3 77                 4577 	ld	(hl),a
                           4578 ;demo.c:624: vdp_copier(&cmd);
   14F4 21r18s41           4579 	ld	hl,#_cmd
   14F7 E5                 4580 	push	hl
   14F8 CDr00s00           4581 	call	_vdp_copier
   14FB F1                 4582 	pop	af
                           4583 ;demo.c:621: for (y = ender; y < enderend; y+=16) {
   14FC DD 7E FC           4584 	ld	a,-4 (ix)
   14FF C6 10              4585 	add	a,#0x10
   1501 DD 77 FC           4586 	ld	-4 (ix),a
   1504 DD 7E FD           4587 	ld	a,-3 (ix)
   1507 CE 00              4588 	adc	a,#0x00
   1509 DD 77 FD           4589 	ld	-3 (ix),a
   150C C3rB1s14           4590 	jp	00112$
   150F                    4591 00115$:
                           4592 ;demo.c:626: ff1+=4;
   150F 21r6As41           4593 	ld	hl,#_ff1
   1512 7E                 4594 	ld	a,(hl)
   1513 C6 04              4595 	add	a,#0x04
   1515 23                 4596 	inc	hl
   1516 2B                 4597 	dec	hl
   1517 C5                 4598 	push	bc
   1518 4F                 4599 	ld	c, a
   1519 23                 4600 	inc	hl
   151A 7E                 4601 	ld	a, (hl)
   151B 47                 4602 	ld	b, a
   151C 79                 4603 	ld	a, c
   151D 2B                 4604 	dec	hl
   151E 77                 4605 	ld	(hl), a
   151F 78                 4606 	ld	a, b
   1520 C1                 4607 	pop	bc
   1521 CE 00              4608 	adc	a,#0x00
   1523 23                 4609 	inc	hl
   1524 77                 4610 	ld	(hl),a
   1525 C3rCDs15           4611 	jp	00111$
   1528                    4612 00110$:
                           4613 ;demo.c:630: cmd.size_x = 72;
   1528 11r20s41           4614 	ld	de,#_cmd + 8
   152B EB                 4615 	ex	de,hl
   152C 36 48              4616 	ld	(hl),#0x48
   152E 23                 4617 	inc	hl
   152F 36 00              4618 	ld	(hl),#0x00
                           4619 ;demo.c:631: cmd.size_y = sy;
   1531 01r22s41           4620 	ld	bc,#_cmd + 10
   1534 ED 5Br72s41        4621 	ld	de,(_sy)
   1538 69                 4622 	ld	l,c
   1539 60                 4623 	ld	h,b
   153A 73                 4624 	ld	(hl),e
   153B 23                 4625 	inc	hl
   153C 72                 4626 	ld	(hl),d
                           4627 ;demo.c:632: cmd.data = 0;
   153D 11r24s41           4628 	ld	de,#_cmd + 12
   1540 3E 00              4629 	ld	a,#0x00
   1542 12                 4630 	ld	(de),a
                           4631 ;demo.c:633: cmd.argument = 0x00; // from 182xY to right
   1543 11r25s41           4632 	ld	de,#_cmd + 13
   1546 3E 00              4633 	ld	a,#0x00
   1548 12                 4634 	ld	(de),a
                           4635 ;demo.c:634: cmd.command = 0xe0; // vram to vram, y only
   1549 11r26s41           4636 	ld	de,#_cmd + 14
   154C 3E E0              4637 	ld	a,#0xE0
   154E 12                 4638 	ld	(de),a
                           4639 ;demo.c:635: cmd.source_x = 182;
   154F 21r18s41           4640 	ld	hl,#_cmd
   1552 36 B6              4641 	ld	(hl),#0xB6
   1554 23                 4642 	inc	hl
   1555 36 00              4643 	ld	(hl),#0x00
                           4644 ;demo.c:636: cmd.dest_x = 182;
   1557 11r1Cs41           4645 	ld	de,#_cmd + 4
   155A 6B                 4646 	ld	l,e
   155B 62                 4647 	ld	h,d
   155C 36 B6              4648 	ld	(hl),#0xB6
   155E 23                 4649 	inc	hl
   155F 36 00              4650 	ld	(hl),#0x00
                           4651 ;demo.c:638: for (y = ender; y < enderend; y+=16) {
   1561 ED 4Br6Es41        4652 	ld	bc,(_ender)
   1565                    4653 00116$:
   1565 79                 4654 	ld	a,c
   1566 DD 96 FE           4655 	sub	a,-2 (ix)
   1569 78                 4656 	ld	a,b
   156A DD 9E FF           4657 	sbc	a,-1 (ix)
   156D F2rB7s15           4658 	jp	P,00119$
                           4659 ;demo.c:639: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1570 21r1As41           4660 	ld	hl,#_cmd + 2
   1573 DD 75 FA           4661 	ld	-6 (ix),l
   1576 DD 74 FB           4662 	ld	-5 (ix),h
   1579 3Ar6Cs41           4663 	ld	a,(#_ff2+0)
   157C 81                 4664 	add	a,c
   157D 5F                 4665 	ld	e,a
   157E 3Ar6Ds41           4666 	ld	a,(#_ff2+1)
   1581 88                 4667 	adc	a,b
   1582 16 00              4668 	ld	d,#0x00
   1584 21r00s00           4669 	ld	hl,#_sintab
   1587 19                 4670 	add	hl,de
   1588 5E                 4671 	ld	e,(hl)
   1589 CB 2B              4672 	sra	e
   158B 7B                 4673 	ld	a,e
   158C 17                 4674 	rla	
   158D 9F                 4675 	sbc	a,a
   158E 57                 4676 	ld	d,a
   158F 21 40 01           4677 	ld	hl,#0x0140
   1592 19                 4678 	add	hl,de
   1593 EB                 4679 	ex	de,hl
   1594 DD 6E FA           4680 	ld	l,-6 (ix)
   1597 DD 66 FB           4681 	ld	h,-5 (ix)
   159A 73                 4682 	ld	(hl),e
   159B 23                 4683 	inc	hl
   159C 72                 4684 	ld	(hl),d
                           4685 ;demo.c:640: cmd.dest_y = y;
   159D 11r1Es41           4686 	ld	de,#_cmd + 6
   15A0 EB                 4687 	ex	de,hl
   15A1 71                 4688 	ld	(hl),c
   15A2 23                 4689 	inc	hl
   15A3 70                 4690 	ld	(hl),b
                           4691 ;demo.c:641: vdp_copier(&cmd);
   15A4 C5                 4692 	push	bc
   15A5 21r18s41           4693 	ld	hl,#_cmd
   15A8 E5                 4694 	push	hl
   15A9 CDr00s00           4695 	call	_vdp_copier
   15AC F1                 4696 	pop	af
   15AD C1                 4697 	pop	bc
                           4698 ;demo.c:638: for (y = ender; y < enderend; y+=16) {
   15AE 21 10 00           4699 	ld	hl,#0x0010
   15B1 09                 4700 	add	hl,bc
   15B2 4D                 4701 	ld	c,l
   15B3 44                 4702 	ld	b,h
   15B4 C3r65s15           4703 	jp	00116$
   15B7                    4704 00119$:
                           4705 ;demo.c:643: ff2+=4;
   15B7 21r6Cs41           4706 	ld	hl,#_ff2
   15BA 7E                 4707 	ld	a,(hl)
   15BB C6 04              4708 	add	a,#0x04
   15BD 23                 4709 	inc	hl
   15BE 2B                 4710 	dec	hl
   15BF C5                 4711 	push	bc
   15C0 4F                 4712 	ld	c, a
   15C1 23                 4713 	inc	hl
   15C2 7E                 4714 	ld	a, (hl)
   15C3 47                 4715 	ld	b, a
   15C4 79                 4716 	ld	a, c
   15C5 2B                 4717 	dec	hl
   15C6 77                 4718 	ld	(hl), a
   15C7 78                 4719 	ld	a, b
   15C8 C1                 4720 	pop	bc
   15C9 CE 00              4721 	adc	a,#0x00
   15CB 23                 4722 	inc	hl
   15CC 77                 4723 	ld	(hl),a
   15CD                    4724 00111$:
                           4725 ;demo.c:646: bulbflipper = -bulbflipper;
   15CD AF                 4726 	xor	a,a
   15CE FD 21r68s41        4727 	ld	iy,#_bulbflipper
   15D2 3E 00              4728 	ld	a,#0x00
   15D4 FD 9E 00           4729 	sbc	a,0 (iy)
   15D7 21r68s41           4730 	ld	hl,#_bulbflipper + 0
   15DA 77                 4731 	ld	(hl), a
   15DB FD 21r68s41        4732 	ld	iy,#_bulbflipper
   15DF 3E 00              4733 	ld	a,#0x00
   15E1 FD 9E 01           4734 	sbc	a,1 (iy)
   15E4 21r69s41           4735 	ld	hl,#_bulbflipper + 1
   15E7 77                 4736 	ld	(hl), a
   15E8 DD F9              4737 	ld	sp,ix
   15EA DD E1              4738 	pop	ix
   15EC C9                 4739 	ret
   15ED                    4740 _bulbs_end::
                           4741 ;demo.c:660: void animplay() {
                           4742 ;	---------------------------------
                           4743 ; Function animplay
                           4744 ; ---------------------------------
   15ED                    4745 _animplay_start::
   15ED                    4746 _animplay:
   15ED DD E5              4747 	push	ix
   15EF DD 21 00 00        4748 	ld	ix,#0
   15F3 DD 39              4749 	add	ix,sp
   15F5 F5                 4750 	push	af
   15F6 3B                 4751 	dec	sp
                           4752 ;demo.c:665: if (anim_init == 0) {
   15F7 3Ar7Cs41           4753 	ld	a,(#_anim_init+0)
   15FA 21r7Ds41           4754 	ld	hl,#_anim_init + 1
   15FD B6                 4755 	or	a,(hl)
   15FE C2r93s17           4756 	jp	NZ,00120$
                           4757 ;demo.c:666: drawsine("L O A D I N G",8,100);
   1601 21 08 64           4758 	ld	hl,#0x6408
   1604 E5                 4759 	push	hl
   1605 21r7Bs18           4760 	ld	hl,#__str_9
   1608 E5                 4761 	push	hl
   1609 CDr20s11           4762 	call	_drawsine
   160C F1                 4763 	pop	af
   160D F1                 4764 	pop	af
                           4765 ;demo.c:669: uninstall_isr();
   160E CDr00s00           4766 	call	_uninstall_isr
                           4767 ;demo.c:670: PLY_Stop();
   1611 CDr00s00           4768 	call	_PLY_Stop
                           4769 ;demo.c:671: PLY_SendRegisters();
   1614 CDr00s00           4770 	call	_PLY_SendRegisters
                           4771 ;demo.c:673: pck_load("LF1     PCK",14089,0x0000,VRAM_0,0);
   1617 21 00 00           4772 	ld	hl,#0x0000
   161A E5                 4773 	push	hl
   161B 2E 01              4774 	ld	l, #0x01
   161D E5                 4775 	push	hl
   161E 2E 00              4776 	ld	l, #0x00
   1620 E5                 4777 	push	hl
   1621 21 09 37           4778 	ld	hl,#0x3709
   1624 E5                 4779 	push	hl
   1625 21r89s18           4780 	ld	hl,#__str_10
   1628 E5                 4781 	push	hl
   1629 CDr99s09           4782 	call	_pck_load
   162C FD 21 0A 00        4783 	ld	iy,#0x000A
   1630 FD 39              4784 	add	iy,sp
   1632 FD F9              4785 	ld	sp,iy
                           4786 ;demo.c:676: scratch_clear();
   1634 CDr90s07           4787 	call	_scratch_clear
                           4788 ;demo.c:677: vdp_load_palette(scratch);
   1637 21rF4s3F           4789 	ld	hl,#_scratch
   163A E5                 4790 	push	hl
   163B CDr00s00           4791 	call	_vdp_load_palette
   163E F1                 4792 	pop	af
                           4793 ;demo.c:679: cmd.size_x = 256;
   163F 21r20s41           4794 	ld	hl, #_cmd + 8
   1642 36 00              4795 	ld	(hl),#0x00
   1644 23                 4796 	inc	hl
   1645 36 01              4797 	ld	(hl),#0x01
                           4798 ;demo.c:680: cmd.size_y = 212;
   1647 21r22s41           4799 	ld	hl, #_cmd + 10
   164A 36 D4              4800 	ld	(hl),#0xD4
   164C 23                 4801 	inc	hl
   164D 36 00              4802 	ld	(hl),#0x00
                           4803 ;demo.c:681: cmd.data = 0;
                           4804 ;demo.c:682: cmd.argument = 0x00;
   164F 3E 00              4805 	ld	a,#0x00
   1651 32r24s41           4806 	ld	(#_cmd + 12),a
   1654 32r25s41           4807 	ld	(#_cmd + 13),a
                           4808 ;demo.c:683: cmd.command = 0xd0; 
   1657 01r26s41           4809 	ld	bc,#_cmd + 14
   165A 3E D0              4810 	ld	a,#0xD0
   165C 02                 4811 	ld	(bc),a
                           4812 ;demo.c:684: cmd.source_x = 0;
   165D 21r18s41           4813 	ld	hl,#_cmd
   1660 36 00              4814 	ld	(hl),#0x00
   1662 23                 4815 	inc	hl
   1663 36 00              4816 	ld	(hl),#0x00
                           4817 ;demo.c:685: cmd.source_y = 0;
   1665 21r1As41           4818 	ld	hl, #_cmd + 2
   1668 36 00              4819 	ld	(hl),#0x00
   166A 23                 4820 	inc	hl
   166B 36 00              4821 	ld	(hl),#0x00
                           4822 ;demo.c:686: cmd.dest_x = 0;
   166D 21r1Cs41           4823 	ld	hl, #_cmd + 4
   1670 36 00              4824 	ld	(hl),#0x00
   1672 23                 4825 	inc	hl
   1673 36 00              4826 	ld	(hl),#0x00
                           4827 ;demo.c:687: cmd.dest_y = 256;
   1675 21r1Es41           4828 	ld	hl, #_cmd + 6
   1678 36 00              4829 	ld	(hl),#0x00
   167A 23                 4830 	inc	hl
   167B 36 01              4831 	ld	(hl),#0x01
                           4832 ;demo.c:688: vdp_copier(&cmd);
   167D 21r18s41           4833 	ld	hl,#_cmd
   1680 E5                 4834 	push	hl
   1681 CDr00s00           4835 	call	_vdp_copier
   1684 F1                 4836 	pop	af
                           4837 ;demo.c:690: pck_load("LF2     PCK",15990,0x0000,VRAM_0,0);
   1685 21 00 00           4838 	ld	hl,#0x0000
   1688 E5                 4839 	push	hl
   1689 2E 01              4840 	ld	l, #0x01
   168B E5                 4841 	push	hl
   168C 2E 00              4842 	ld	l, #0x00
   168E E5                 4843 	push	hl
   168F 21 76 3E           4844 	ld	hl,#0x3E76
   1692 E5                 4845 	push	hl
   1693 21r95s18           4846 	ld	hl,#__str_11
   1696 E5                 4847 	push	hl
   1697 CDr99s09           4848 	call	_pck_load
   169A FD 21 0A 00        4849 	ld	iy,#0x000A
   169E FD 39              4850 	add	iy,sp
   16A0 FD F9              4851 	ld	sp,iy
                           4852 ;demo.c:692: cmd.size_x = 256;
   16A2 21r20s41           4853 	ld	hl, #_cmd + 8
   16A5 36 00              4854 	ld	(hl),#0x00
   16A7 23                 4855 	inc	hl
   16A8 36 01              4856 	ld	(hl),#0x01
                           4857 ;demo.c:693: cmd.size_y = 212;
   16AA 21r22s41           4858 	ld	hl, #_cmd + 10
   16AD 36 D4              4859 	ld	(hl),#0xD4
   16AF 23                 4860 	inc	hl
   16B0 36 00              4861 	ld	(hl),#0x00
                           4862 ;demo.c:694: cmd.data = 0;
                           4863 ;demo.c:695: cmd.argument = 0x00;
   16B2 3E 00              4864 	ld	a,#0x00
   16B4 32r24s41           4865 	ld	(#_cmd + 12),a
   16B7 32r25s41           4866 	ld	(#_cmd + 13),a
                           4867 ;demo.c:696: cmd.command = 0xd0; 
   16BA 01r26s41           4868 	ld	bc,#_cmd + 14
   16BD 3E D0              4869 	ld	a,#0xD0
   16BF 02                 4870 	ld	(bc),a
                           4871 ;demo.c:697: cmd.source_x = 0;
   16C0 21r18s41           4872 	ld	hl,#_cmd
   16C3 36 00              4873 	ld	(hl),#0x00
   16C5 23                 4874 	inc	hl
   16C6 36 00              4875 	ld	(hl),#0x00
                           4876 ;demo.c:698: cmd.source_y = 0;
   16C8 21r1As41           4877 	ld	hl, #_cmd + 2
   16CB 36 00              4878 	ld	(hl),#0x00
   16CD 23                 4879 	inc	hl
   16CE 36 00              4880 	ld	(hl),#0x00
                           4881 ;demo.c:699: cmd.dest_x = 0;
   16D0 21r1Cs41           4882 	ld	hl, #_cmd + 4
   16D3 36 00              4883 	ld	(hl),#0x00
   16D5 23                 4884 	inc	hl
   16D6 36 00              4885 	ld	(hl),#0x00
                           4886 ;demo.c:700: cmd.dest_y = 512;
   16D8 21r1Es41           4887 	ld	hl, #_cmd + 6
   16DB 36 00              4888 	ld	(hl),#0x00
   16DD 23                 4889 	inc	hl
   16DE 36 02              4890 	ld	(hl),#0x02
                           4891 ;demo.c:701: vdp_copier(&cmd);
   16E0 21r18s41           4892 	ld	hl,#_cmd
   16E3 E5                 4893 	push	hl
   16E4 CDr00s00           4894 	call	_vdp_copier
   16E7 F1                 4895 	pop	af
                           4896 ;demo.c:704: pck_load("LF3     PCK",15006,0x0000,VRAM_0,0);
   16E8 21 00 00           4897 	ld	hl,#0x0000
   16EB E5                 4898 	push	hl
   16EC 2E 01              4899 	ld	l, #0x01
   16EE E5                 4900 	push	hl
   16EF 2E 00              4901 	ld	l, #0x00
   16F1 E5                 4902 	push	hl
   16F2 21 9E 3A           4903 	ld	hl,#0x3A9E
   16F5 E5                 4904 	push	hl
   16F6 21rA1s18           4905 	ld	hl,#__str_12
   16F9 E5                 4906 	push	hl
   16FA CDr99s09           4907 	call	_pck_load
   16FD FD 21 0A 00        4908 	ld	iy,#0x000A
   1701 FD 39              4909 	add	iy,sp
   1703 FD F9              4910 	ld	sp,iy
                           4911 ;demo.c:706: cmd.size_x = 256;
   1705 21r20s41           4912 	ld	hl, #_cmd + 8
   1708 36 00              4913 	ld	(hl),#0x00
   170A 23                 4914 	inc	hl
   170B 36 01              4915 	ld	(hl),#0x01
                           4916 ;demo.c:707: cmd.size_y = 212;
   170D 21r22s41           4917 	ld	hl, #_cmd + 10
   1710 36 D4              4918 	ld	(hl),#0xD4
   1712 23                 4919 	inc	hl
   1713 36 00              4920 	ld	(hl),#0x00
                           4921 ;demo.c:708: cmd.data = 0;
                           4922 ;demo.c:709: cmd.argument = 0x00;
   1715 3E 00              4923 	ld	a,#0x00
   1717 32r24s41           4924 	ld	(#_cmd + 12),a
   171A 32r25s41           4925 	ld	(#_cmd + 13),a
                           4926 ;demo.c:710: cmd.command = 0xd0; 
   171D 01r26s41           4927 	ld	bc,#_cmd + 14
   1720 3E D0              4928 	ld	a,#0xD0
   1722 02                 4929 	ld	(bc),a
                           4930 ;demo.c:711: cmd.source_x = 0;
   1723 21r18s41           4931 	ld	hl,#_cmd
   1726 36 00              4932 	ld	(hl),#0x00
   1728 23                 4933 	inc	hl
   1729 36 00              4934 	ld	(hl),#0x00
                           4935 ;demo.c:712: cmd.source_y = 0;
   172B 21r1As41           4936 	ld	hl, #_cmd + 2
   172E 36 00              4937 	ld	(hl),#0x00
   1730 23                 4938 	inc	hl
   1731 36 00              4939 	ld	(hl),#0x00
                           4940 ;demo.c:713: cmd.dest_x = 0;
   1733 21r1Cs41           4941 	ld	hl, #_cmd + 4
   1736 36 00              4942 	ld	(hl),#0x00
   1738 23                 4943 	inc	hl
   1739 36 00              4944 	ld	(hl),#0x00
                           4945 ;demo.c:714: cmd.dest_y = 768;
   173B 21r1Es41           4946 	ld	hl, #_cmd + 6
   173E 36 00              4947 	ld	(hl),#0x00
   1740 23                 4948 	inc	hl
   1741 36 03              4949 	ld	(hl),#0x03
                           4950 ;demo.c:715: vdp_copier(&cmd);
   1743 21r18s41           4951 	ld	hl,#_cmd
   1746 E5                 4952 	push	hl
   1747 CDr00s00           4953 	call	_vdp_copier
   174A F1                 4954 	pop	af
                           4955 ;demo.c:717: vdp_register(9,130); // 50hz,212
   174B 21 09 82           4956 	ld	hl,#0x8209
   174E E5                 4957 	push	hl
   174F CDr00s00           4958 	call	_vdp_register
   1752 F1                 4959 	pop	af
                           4960 ;demo.c:719: scratch_clear();
   1753 CDr90s07           4961 	call	_scratch_clear
                           4962 ;demo.c:721: vdp_set_write_address(0, 0);
   1756 21 00 00           4963 	ld	hl,#0x0000
   1759 E5                 4964 	push	hl
   175A 3E 00              4965 	ld	a,#0x00
   175C F5                 4966 	push	af
   175D 33                 4967 	inc	sp
   175E CDr00s00           4968 	call	_vdp_set_write_address
   1761 F1                 4969 	pop	af
   1762 33                 4970 	inc	sp
                           4971 ;demo.c:723: for (y = 0; y < 212; y++) { 
   1763 0E D4              4972 	ld	c,#0xD4
   1765                    4973 00109$:
                           4974 ;demo.c:724: vdp_load_screen(scratch, 128);
   1765 C5                 4975 	push	bc
   1766 3E 80              4976 	ld	a,#0x80
   1768 F5                 4977 	push	af
   1769 33                 4978 	inc	sp
   176A 21rF4s3F           4979 	ld	hl,#_scratch
   176D E5                 4980 	push	hl
   176E CDr00s00           4981 	call	_vdp_load_screen
   1771 F1                 4982 	pop	af
   1772 33                 4983 	inc	sp
   1773 C1                 4984 	pop	bc
   1774 0D                 4985 	dec	c
                           4986 ;demo.c:723: for (y = 0; y < 212; y++) { 
   1775 AF                 4987 	xor	a,a
   1776 B1                 4988 	or	a,c
   1777 20 EC              4989 	jr	NZ,00109$
                           4990 ;demo.c:727: install_isr(my_isr);
   1779 21rECs05           4991 	ld	hl,#_my_isr
   177C E5                 4992 	push	hl
   177D CDr00s00           4993 	call	_install_isr
   1780 F1                 4994 	pop	af
                           4995 ;demo.c:728: anim_init = 1;
   1781 21r7Cs41           4996 	ld	hl,#_anim_init + 0
   1784 36 01              4997 	ld	(hl), #0x01
   1786 21r7Ds41           4998 	ld	hl,#_anim_init + 1
   1789 36 00              4999 	ld	(hl), #0x00
                           5000 ;demo.c:729: vdp_load_palette(tf_palette);
   178B 21rD4s40           5001 	ld	hl,#_tf_palette
   178E E5                 5002 	push	hl
   178F CDr00s00           5003 	call	_vdp_load_palette
   1792 F1                 5004 	pop	af
                           5005 ;demo.c:732: for (y = 0; y < 106; y+=1) {
   1793                    5006 00120$:
   1793 DD 36 FF 00        5007 	ld	-1 (ix),#0x00
   1797                    5008 00110$:
   1797 DD 7E FF           5009 	ld	a,-1 (ix)
   179A D6 6A              5010 	sub	a,#0x6A
   179C D2r1Cs18           5011 	jp	NC,00113$
                           5012 ;demo.c:733: cmd.source_x = 0;
   179F 21r18s41           5013 	ld	hl,#_cmd
   17A2 36 00              5014 	ld	(hl),#0x00
   17A4 23                 5015 	inc	hl
   17A5 36 00              5016 	ld	(hl),#0x00
                           5017 ;demo.c:734: cmd.source_y = 256+po+frames+(y>>1);
   17A7 11r1As41           5018 	ld	de,#_cmd + 2
   17AA 3Ar78s41           5019 	ld	a,(#_po+0)
   17AD 4F                 5020 	ld	c,a
   17AE 3Ar79s41           5021 	ld	a,(#_po+1)
   17B1 C6 01              5022 	add	a,#0x01
   17B3 47                 5023 	ld	b,a
   17B4 21r7As41           5024 	ld	hl,#_frames
   17B7 79                 5025 	ld	a,c
   17B8 86                 5026 	add	a,(hl)
   17B9 DD 77 FD           5027 	ld	-3 (ix),a
   17BC 78                 5028 	ld	a,b
   17BD 23                 5029 	inc	hl
   17BE 8E                 5030 	adc	a,(hl)
   17BF DD 77 FE           5031 	ld	-2 (ix),a
   17C2 DD 4E FF           5032 	ld	c,-1 (ix)
   17C5 CB 39              5033 	srl	c
   17C7 06 00              5034 	ld	b,#0x00
   17C9 DD 7E FD           5035 	ld	a,-3 (ix)
   17CC 81                 5036 	add	a,c
   17CD 4F                 5037 	ld	c,a
   17CE DD 7E FE           5038 	ld	a,-2 (ix)
   17D1 88                 5039 	adc	a,b
   17D2 47                 5040 	ld	b,a
   17D3 6B                 5041 	ld	l,e
   17D4 62                 5042 	ld	h,d
   17D5 71                 5043 	ld	(hl),c
   17D6 23                 5044 	inc	hl
   17D7 70                 5045 	ld	(hl),b
                           5046 ;demo.c:735: cmd.dest_x = 0;
   17D8 21r1Cs41           5047 	ld	hl, #_cmd + 4
   17DB 36 00              5048 	ld	(hl),#0x00
   17DD 23                 5049 	inc	hl
   17DE 36 00              5050 	ld	(hl),#0x00
                           5051 ;demo.c:736: cmd.dest_y = (y<<1);
   17E0 01r1Es41           5052 	ld	bc,#_cmd + 6
   17E3 DD 5E FF           5053 	ld	e,-1 (ix)
   17E6 16 00              5054 	ld	d,#0x00
   17E8 CB 23              5055 	sla	e
   17EA CB 12              5056 	rl	d
   17EC 69                 5057 	ld	l,c
   17ED 60                 5058 	ld	h,b
   17EE 73                 5059 	ld	(hl),e
   17EF 23                 5060 	inc	hl
   17F0 72                 5061 	ld	(hl),d
                           5062 ;demo.c:737: cmd.size_x = 256;
   17F1 21r20s41           5063 	ld	hl, #_cmd + 8
   17F4 36 00              5064 	ld	(hl),#0x00
   17F6 23                 5065 	inc	hl
   17F7 36 01              5066 	ld	(hl),#0x01
                           5067 ;demo.c:738: cmd.size_y = 1;
   17F9 21r22s41           5068 	ld	hl, #_cmd + 10
   17FC 36 01              5069 	ld	(hl),#0x01
   17FE 23                 5070 	inc	hl
   17FF 36 00              5071 	ld	(hl),#0x00
                           5072 ;demo.c:739: cmd.data = 0;
                           5073 ;demo.c:740: cmd.argument = 0x00;
   1801 3E 00              5074 	ld	a,#0x00
   1803 32r24s41           5075 	ld	(#_cmd + 12),a
   1806 32r25s41           5076 	ld	(#_cmd + 13),a
                           5077 ;demo.c:741: cmd.command = 0xD0;
   1809 3E D0              5078 	ld	a,#0xD0
   180B 32r26s41           5079 	ld	(#_cmd + 14),a
                           5080 ;demo.c:742: vdp_copier(&cmd);
   180E 21r18s41           5081 	ld	hl,#_cmd
   1811 E5                 5082 	push	hl
   1812 CDr00s00           5083 	call	_vdp_copier
   1815 F1                 5084 	pop	af
                           5085 ;demo.c:732: for (y = 0; y < 106; y+=1) {
   1816 DD 34 FF           5086 	inc	-1 (ix)
   1819 C3r97s17           5087 	jp	00110$
   181C                    5088 00113$:
                           5089 ;demo.c:745: frames+=53;
   181C 21r7As41           5090 	ld	hl,#_frames
   181F 7E                 5091 	ld	a,(hl)
   1820 C6 35              5092 	add	a,#0x35
   1822 23                 5093 	inc	hl
   1823 2B                 5094 	dec	hl
   1824 C5                 5095 	push	bc
   1825 4F                 5096 	ld	c, a
   1826 23                 5097 	inc	hl
   1827 7E                 5098 	ld	a, (hl)
   1828 47                 5099 	ld	b, a
   1829 79                 5100 	ld	a, c
   182A 2B                 5101 	dec	hl
   182B 77                 5102 	ld	(hl), a
   182C 78                 5103 	ld	a, b
   182D C1                 5104 	pop	bc
   182E CE 00              5105 	adc	a,#0x00
   1830 23                 5106 	inc	hl
   1831 77                 5107 	ld	(hl),a
                           5108 ;demo.c:746: if (frames >= 212) { frames = 0; po+=256; }
   1832 3Ar7As41           5109 	ld	a,(#_frames+0)
   1835 D6 D4              5110 	sub	a,#0xD4
   1837 3Ar7Bs41           5111 	ld	a,(#_frames+1)
   183A DE 00              5112 	sbc	a,#0x00
   183C FAr5Fs18           5113 	jp	M,00104$
   183F 21r7As41           5114 	ld	hl,#_frames + 0
   1842 36 00              5115 	ld	(hl), #0x00
   1844 21r7Bs41           5116 	ld	hl,#_frames + 1
   1847 36 00              5117 	ld	(hl), #0x00
   1849 21r78s41           5118 	ld	hl,#_po
   184C 7E                 5119 	ld	a,(hl)
   184D C6 00              5120 	add	a,#0x00
   184F 23                 5121 	inc	hl
   1850 2B                 5122 	dec	hl
   1851 C5                 5123 	push	bc
   1852 4F                 5124 	ld	c, a
   1853 23                 5125 	inc	hl
   1854 7E                 5126 	ld	a, (hl)
   1855 47                 5127 	ld	b, a
   1856 79                 5128 	ld	a, c
   1857 2B                 5129 	dec	hl
   1858 77                 5130 	ld	(hl), a
   1859 78                 5131 	ld	a, b
   185A C1                 5132 	pop	bc
   185B CE 01              5133 	adc	a,#0x01
   185D 23                 5134 	inc	hl
   185E 77                 5135 	ld	(hl),a
   185F                    5136 00104$:
                           5137 ;demo.c:747: if (po >= 768) {
   185F 3Ar78s41           5138 	ld	a,(#_po+0)
   1862 D6 00              5139 	sub	a,#0x00
   1864 3Ar79s41           5140 	ld	a,(#_po+1)
   1867 DE 03              5141 	sbc	a,#0x03
   1869 FAr76s18           5142 	jp	M,00114$
                           5143 ;demo.c:748: po = 0;
   186C 21r78s41           5144 	ld	hl,#_po + 0
   186F 36 00              5145 	ld	(hl), #0x00
   1871 21r79s41           5146 	ld	hl,#_po + 1
   1874 36 00              5147 	ld	(hl), #0x00
   1876                    5148 00114$:
   1876 DD F9              5149 	ld	sp,ix
   1878 DD E1              5150 	pop	ix
   187A C9                 5151 	ret
   187B                    5152 _animplay_end::
   187B                    5153 __str_9:
   187B 4C 20 4F 20 41 20  5154 	.ascii "L O A D I N G"
        44 20 49 20 4E 20
        47
   1888 00                 5155 	.db 0x00
   1889                    5156 __str_10:
   1889 4C 46 31 20 20 20  5157 	.ascii "LF1     PCK"
        20 20 50 43 4B
   1894 00                 5158 	.db 0x00
   1895                    5159 __str_11:
   1895 4C 46 32 20 20 20  5160 	.ascii "LF2     PCK"
        20 20 50 43 4B
   18A0 00                 5161 	.db 0x00
   18A1                    5162 __str_12:
   18A1 4C 46 33 20 20 20  5163 	.ascii "LF3     PCK"
        20 20 50 43 4B
   18AC 00                 5164 	.db 0x00
                           5165 ;demo.c:764: void drawbox(uint8_t x, uint8_t y) {
                           5166 ;	---------------------------------
                           5167 ; Function drawbox
                           5168 ; ---------------------------------
   18AD                    5169 _drawbox_start::
   18AD                    5170 _drawbox:
   18AD DD E5              5171 	push	ix
   18AF DD 21 00 00        5172 	ld	ix,#0
   18B3 DD 39              5173 	add	ix,sp
                           5174 ;demo.c:765: cmd.source_x = boxes_x[boxi];
   18B5 21r94s41           5175 	ld	hl,#_boxi
   18B8 3Er85              5176 	ld	a,#<_boxes_x
   18BA 86                 5177 	add	a,(hl)
   18BB 4F                 5178 	ld	c,a
   18BC 3Es41              5179 	ld	a,#>_boxes_x
   18BE CE 00              5180 	adc	a,#0x00
   18C0 47                 5181 	ld	b,a
   18C1 0A                 5182 	ld	a,(bc)
   18C2 4F                 5183 	ld	c,a
   18C3 06 00              5184 	ld	b,#0x00
   18C5 21r18s41           5185 	ld	hl,#_cmd
   18C8 71                 5186 	ld	(hl),c
   18C9 23                 5187 	inc	hl
   18CA 70                 5188 	ld	(hl),b
                           5189 ;demo.c:766: cmd.source_y = boxes_y[boxi];
   18CB 01r1As41           5190 	ld	bc,#_cmd + 2
   18CE 3Ar94s41           5191 	ld	a,(#_boxi+0)
   18D1 87                 5192 	add	a,a
   18D2 C6r8A              5193 	add	a,#<_boxes_y
   18D4 6F                 5194 	ld	l,a
   18D5 3Es41              5195 	ld	a,#>_boxes_y
   18D7 CE 00              5196 	adc	a,#0x00
   18D9 67                 5197 	ld	h,a
   18DA 5E                 5198 	ld	e,(hl)
   18DB 23                 5199 	inc	hl
   18DC 56                 5200 	ld	d,(hl)
   18DD 69                 5201 	ld	l,c
   18DE 60                 5202 	ld	h,b
   18DF 73                 5203 	ld	(hl),e
   18E0 23                 5204 	inc	hl
   18E1 72                 5205 	ld	(hl),d
                           5206 ;demo.c:767: cmd.dest_x = x;
   18E2 01r1Cs41           5207 	ld	bc,#_cmd + 4
   18E5 DD 5E 04           5208 	ld	e,4 (ix)
   18E8 16 00              5209 	ld	d,#0x00
   18EA 69                 5210 	ld	l,c
   18EB 60                 5211 	ld	h,b
   18EC 73                 5212 	ld	(hl),e
   18ED 23                 5213 	inc	hl
   18EE 72                 5214 	ld	(hl),d
                           5215 ;demo.c:768: cmd.dest_y = y;
   18EF 01r1Es41           5216 	ld	bc,#_cmd + 6
   18F2 DD 5E 05           5217 	ld	e,5 (ix)
   18F5 16 00              5218 	ld	d,#0x00
   18F7 69                 5219 	ld	l,c
   18F8 60                 5220 	ld	h,b
   18F9 73                 5221 	ld	(hl),e
   18FA 23                 5222 	inc	hl
   18FB 72                 5223 	ld	(hl),d
                           5224 ;demo.c:769: cmd.size_x = 36;
   18FC 21r20s41           5225 	ld	hl, #_cmd + 8
   18FF 36 24              5226 	ld	(hl),#0x24
   1901 23                 5227 	inc	hl
   1902 36 00              5228 	ld	(hl),#0x00
                           5229 ;demo.c:770: cmd.size_y = 36;
   1904 21r22s41           5230 	ld	hl, #_cmd + 10
   1907 36 24              5231 	ld	(hl),#0x24
   1909 23                 5232 	inc	hl
   190A 36 00              5233 	ld	(hl),#0x00
                           5234 ;demo.c:771: cmd.data = 0;
                           5235 ;demo.c:772: cmd.argument = 0x00;
   190C 3E 00              5236 	ld	a,#0x00
   190E 32r24s41           5237 	ld	(#_cmd + 12),a
   1911 32r25s41           5238 	ld	(#_cmd + 13),a
                           5239 ;demo.c:773: cmd.command = 0x98; // TIMP sprite
   1914 3E 98              5240 	ld	a,#0x98
   1916 32r26s41           5241 	ld	(#_cmd + 14),a
                           5242 ;demo.c:774: vdp_copier(&cmd);
   1919 21r18s41           5243 	ld	hl,#_cmd
   191C E5                 5244 	push	hl
   191D CDr00s00           5245 	call	_vdp_copier
   1920 F1                 5246 	pop	af
                           5247 ;demo.c:776: prevx = x;
   1921 DD 7E 04           5248 	ld	a,4 (ix)
   1924 21r81s41           5249 	ld	hl,#_prevx + 0
   1927 77                 5250 	ld	(hl), a
   1928 21r82s41           5251 	ld	hl,#_prevx + 1
   192B 36 00              5252 	ld	(hl), #0x00
                           5253 ;demo.c:777: prevy = y;
   192D DD 7E 05           5254 	ld	a,5 (ix)
   1930 21r83s41           5255 	ld	hl,#_prevy + 0
   1933 77                 5256 	ld	(hl), a
   1934 21r84s41           5257 	ld	hl,#_prevy + 1
   1937 36 00              5258 	ld	(hl), #0x00
   1939 DD E1              5259 	pop	ix
   193B C9                 5260 	ret
   193C                    5261 _drawbox_end::
                           5262 ;demo.c:791: void boxes() {
                           5263 ;	---------------------------------
                           5264 ; Function boxes
                           5265 ; ---------------------------------
   193C                    5266 _boxes_start::
   193C                    5267 _boxes:
   193C DD E5              5268 	push	ix
   193E DD 21 00 00        5269 	ld	ix,#0
   1942 DD 39              5270 	add	ix,sp
   1944 F5                 5271 	push	af
                           5272 ;demo.c:795: if (bx < 0) return;
   1945 FD 21r95s41        5273 	ld	iy,#_bx
   1949 FD CB 01 7E        5274 	bit	7,1 (iy)
   194D C2r63s1D           5275 	jp	NZ,00149$
                           5276 ;demo.c:797: if (bonc == 1) {
   1950 3Ar9Ds41           5277 	ld	a,(#_bonc+0)
   1953 D6 01              5278 	sub	a,#0x01
   1955 20 06              5279 	jr	NZ,00178$
   1957 3Ar9Es41           5280 	ld	a,(#_bonc+1)
   195A B7                 5281 	or	a,a
   195B 28 02              5282 	jr	Z,00179$
   195D                    5283 00178$:
   195D 18 4D              5284 	jr	00104$
   195F                    5285 00179$:
                           5286 ;demo.c:799: cmd.source_x = 0;
   195F 21r18s41           5287 	ld	hl,#_cmd
   1962 36 00              5288 	ld	(hl),#0x00
   1964 23                 5289 	inc	hl
   1965 36 00              5290 	ld	(hl),#0x00
                           5291 ;demo.c:800: cmd.source_y = 256;
   1967 21r1As41           5292 	ld	hl, #_cmd + 2
   196A 36 00              5293 	ld	(hl),#0x00
   196C 23                 5294 	inc	hl
   196D 36 01              5295 	ld	(hl),#0x01
                           5296 ;demo.c:801: cmd.dest_x = pbx;
   196F 01r1Cs41           5297 	ld	bc,#_cmd + 4
   1972 ED 5Br9Fs41        5298 	ld	de,(_pbx)
   1976 69                 5299 	ld	l,c
   1977 60                 5300 	ld	h,b
   1978 73                 5301 	ld	(hl),e
   1979 23                 5302 	inc	hl
   197A 72                 5303 	ld	(hl),d
                           5304 ;demo.c:802: cmd.dest_y = pbt;
   197B 01r1Es41           5305 	ld	bc,#_cmd + 6
   197E ED 5BrA1s41        5306 	ld	de,(_pbt)
   1982 69                 5307 	ld	l,c
   1983 60                 5308 	ld	h,b
   1984 73                 5309 	ld	(hl),e
   1985 23                 5310 	inc	hl
   1986 72                 5311 	ld	(hl),d
                           5312 ;demo.c:803: cmd.size_x = 36;
   1987 21r20s41           5313 	ld	hl, #_cmd + 8
   198A 36 24              5314 	ld	(hl),#0x24
   198C 23                 5315 	inc	hl
   198D 36 00              5316 	ld	(hl),#0x00
                           5317 ;demo.c:804: cmd.size_y = 36;
   198F 21r22s41           5318 	ld	hl, #_cmd + 10
   1992 36 24              5319 	ld	(hl),#0x24
   1994 23                 5320 	inc	hl
   1995 36 00              5321 	ld	(hl),#0x00
                           5322 ;demo.c:805: cmd.data = 0;
                           5323 ;demo.c:806: cmd.argument = 0x00;
   1997 3E 00              5324 	ld	a,#0x00
   1999 32r24s41           5325 	ld	(#_cmd + 12),a
   199C 32r25s41           5326 	ld	(#_cmd + 13),a
                           5327 ;demo.c:807: cmd.command = 0xD0; // HMMM
   199F 3E D0              5328 	ld	a,#0xD0
   19A1 32r26s41           5329 	ld	(#_cmd + 14),a
                           5330 ;demo.c:808: vdp_copier(&cmd);
   19A4 21r18s41           5331 	ld	hl,#_cmd
   19A7 E5                 5332 	push	hl
   19A8 CDr00s00           5333 	call	_vdp_copier
   19AB F1                 5334 	pop	af
   19AC                    5335 00104$:
                           5336 ;demo.c:811: if (boxes_init == 0) {
   19AC AF                 5337 	xor	a,a
   19AD 21r7Es41           5338 	ld	hl,#_boxes_init + 0
   19B0 B6                 5339 	or	a,(hl)
   19B1 C2rB3s1A           5340 	jp	NZ,00106$
                           5341 ;demo.c:812: boxes_init = 1;
   19B4 FD 21r7Es41        5342 	ld	iy,#_boxes_init
   19B8 FD 36 00 01        5343 	ld	0 (iy),#0x01
                           5344 ;demo.c:814: cmd.size_x = 8;
   19BC 21r20s41           5345 	ld	hl, #_cmd + 8
   19BF 36 08              5346 	ld	(hl),#0x08
   19C1 23                 5347 	inc	hl
   19C2 36 00              5348 	ld	(hl),#0x00
                           5349 ;demo.c:815: cmd.size_y = 212;
   19C4 21r22s41           5350 	ld	hl, #_cmd + 10
   19C7 36 D4              5351 	ld	(hl),#0xD4
   19C9 23                 5352 	inc	hl
   19CA 36 00              5353 	ld	(hl),#0x00
                           5354 ;demo.c:816: cmd.data = 0;
                           5355 ;demo.c:817: cmd.argument = 0x00; // from 70xY to left
   19CC 3E 00              5356 	ld	a,#0x00
   19CE 32r24s41           5357 	ld	(#_cmd + 12),a
   19D1 32r25s41           5358 	ld	(#_cmd + 13),a
                           5359 ;demo.c:818: cmd.command = 0xd0; // vram to vram, y only
   19D4 01r26s41           5360 	ld	bc,#_cmd + 14
   19D7 3E D0              5361 	ld	a,#0xD0
   19D9 02                 5362 	ld	(bc),a
                           5363 ;demo.c:819: cmd.source_x = 248;
   19DA 21r18s41           5364 	ld	hl,#_cmd
   19DD 36 F8              5365 	ld	(hl),#0xF8
   19DF 23                 5366 	inc	hl
   19E0 36 00              5367 	ld	(hl),#0x00
                           5368 ;demo.c:820: cmd.source_y = 0;
   19E2 21r1As41           5369 	ld	hl, #_cmd + 2
   19E5 36 00              5370 	ld	(hl),#0x00
   19E7 23                 5371 	inc	hl
   19E8 36 00              5372 	ld	(hl),#0x00
                           5373 ;demo.c:821: cmd.dest_y = 0;
   19EA 21r1Es41           5374 	ld	hl, #_cmd + 6
   19ED 36 00              5375 	ld	(hl),#0x00
   19EF 23                 5376 	inc	hl
   19F0 36 00              5377 	ld	(hl),#0x00
                           5378 ;demo.c:823: for (x = 248; x >= 0; x-=8) {
   19F2 01 F8 00           5379 	ld	bc,#0x00F8
   19F5                    5380 00137$:
   19F5 78                 5381 	ld	a,b
   19F6 CB 7F              5382 	bit	7,a
   19F8 20 38              5383 	jr	NZ,00140$
                           5384 ;demo.c:824: waitVB();
   19FA 76                 5385 		halt 
                           5386 ;demo.c:825: cmd.dest_x = x;
   19FB 11r1Cs41           5387 	ld	de,#_cmd + 4
   19FE EB                 5388 	ex	de,hl
   19FF 71                 5389 	ld	(hl),c
   1A00 23                 5390 	inc	hl
   1A01 70                 5391 	ld	(hl),b
                           5392 ;demo.c:826: cmd.dest_y = 0;
   1A02 11r1Es41           5393 	ld	de,#_cmd + 6
   1A05 EB                 5394 	ex	de,hl
   1A06 36 00              5395 	ld	(hl),#0x00
   1A08 23                 5396 	inc	hl
   1A09 36 00              5397 	ld	(hl),#0x00
                           5398 ;demo.c:827: vdp_copier(&cmd);
   1A0B C5                 5399 	push	bc
   1A0C 21r18s41           5400 	ld	hl,#_cmd
   1A0F E5                 5401 	push	hl
   1A10 CDr00s00           5402 	call	_vdp_copier
   1A13 F1                 5403 	pop	af
   1A14 C1                 5404 	pop	bc
                           5405 ;demo.c:828: cmd.dest_y = 256;
   1A15 11r1Es41           5406 	ld	de,#_cmd + 6
   1A18 EB                 5407 	ex	de,hl
   1A19 36 00              5408 	ld	(hl),#0x00
   1A1B 23                 5409 	inc	hl
   1A1C 36 01              5410 	ld	(hl),#0x01
                           5411 ;demo.c:829: vdp_copier(&cmd);
   1A1E C5                 5412 	push	bc
   1A1F 21r18s41           5413 	ld	hl,#_cmd
   1A22 E5                 5414 	push	hl
   1A23 CDr00s00           5415 	call	_vdp_copier
   1A26 F1                 5416 	pop	af
   1A27 C1                 5417 	pop	bc
                           5418 ;demo.c:823: for (x = 248; x >= 0; x-=8) {
   1A28 79                 5419 	ld	a,c
   1A29 C6 F8              5420 	add	a,#0xF8
   1A2B 4F                 5421 	ld	c,a
   1A2C 78                 5422 	ld	a,b
   1A2D CE FF              5423 	adc	a,#0xFF
   1A2F 47                 5424 	ld	b,a
   1A30 18 C3              5425 	jr	00137$
   1A32                    5426 00140$:
                           5427 ;demo.c:832: for (x=0;x < 8;x++) {
   1A32 DD 36 FE 00        5428 	ld	-2 (ix),#0x00
   1A36 DD 36 FF 00        5429 	ld	-1 (ix),#0x00
   1A3A                    5430 00145$:
   1A3A DD 7E FE           5431 	ld	a,-2 (ix)
   1A3D D6 08              5432 	sub	a,#0x08
   1A3F DD 7E FF           5433 	ld	a,-1 (ix)
   1A42 DE 00              5434 	sbc	a,#0x00
   1A44 F2r9Es1A           5435 	jp	P,00148$
                           5436 ;demo.c:834: for (y=0;y < 9;y++) {
   1A47 11 00 00           5437 	ld	de,#0x0000
   1A4A                    5438 00141$:
   1A4A 7B                 5439 	ld	a,e
   1A4B D6 09              5440 	sub	a,#0x09
   1A4D 7A                 5441 	ld	a,d
   1A4E DE 00              5442 	sbc	a,#0x00
   1A50 F2r93s1A           5443 	jp	P,00147$
                           5444 ;demo.c:835: boxes_x[4] = 0;
   1A53 01r89s41           5445 	ld	bc,#_boxes_x + 4
   1A56 3E 00              5446 	ld	a,#0x00
   1A58 02                 5447 	ld	(bc),a
                           5448 ;demo.c:836: boxes_y[4] = 768+2*36;
   1A59 21r92s41           5449 	ld	hl, #_boxes_y + 8
   1A5C 36 48              5450 	ld	(hl),#0x48
   1A5E 23                 5451 	inc	hl
   1A5F 36 03              5452 	ld	(hl),#0x03
                           5453 ;demo.c:837: boxi = 4;
   1A61 21r94s41           5454 	ld	hl,#_boxi + 0
   1A64 36 04              5455 	ld	(hl), #0x04
                           5456 ;demo.c:838: drawbox((x*36),y*18);
   1A66 4B                 5457 	ld	c,e
   1A67 D5                 5458 	push	de
   1A68 79                 5459 	ld	a,c
   1A69 5F                 5460 	ld	e,a
   1A6A 87                 5461 	add	a,a
   1A6B 87                 5462 	add	a,a
   1A6C 87                 5463 	add	a,a
   1A6D 83                 5464 	add	a,e
   1A6E 87                 5465 	add	a,a
   1A6F D1                 5466 	pop	de
   1A70 4F                 5467 	ld	c,a
   1A71 DD 46 FE           5468 	ld	b,-2 (ix)
   1A74 D5                 5469 	push	de
   1A75 78                 5470 	ld	a,b
   1A76 5F                 5471 	ld	e,a
   1A77 87                 5472 	add	a,a
   1A78 87                 5473 	add	a,a
   1A79 87                 5474 	add	a,a
   1A7A 83                 5475 	add	a,e
   1A7B 87                 5476 	add	a,a
   1A7C 87                 5477 	add	a,a
   1A7D D1                 5478 	pop	de
   1A7E 47                 5479 	ld	b,a
   1A7F D5                 5480 	push	de
   1A80 79                 5481 	ld	a,c
   1A81 F5                 5482 	push	af
   1A82 33                 5483 	inc	sp
   1A83 C5                 5484 	push	bc
   1A84 33                 5485 	inc	sp
   1A85 CDrADs18           5486 	call	_drawbox
   1A88 F1                 5487 	pop	af
   1A89 D1                 5488 	pop	de
                           5489 ;demo.c:839: boxi = 0;
   1A8A 21r94s41           5490 	ld	hl,#_boxi + 0
   1A8D 36 00              5491 	ld	(hl), #0x00
                           5492 ;demo.c:834: for (y=0;y < 9;y++) {
   1A8F 13                 5493 	inc	de
   1A90 C3r4As1A           5494 	jp	00141$
   1A93                    5495 00147$:
                           5496 ;demo.c:832: for (x=0;x < 8;x++) {
   1A93 DD 34 FE           5497 	inc	-2 (ix)
   1A96 20 03              5498 	jr	NZ,00180$
   1A98 DD 34 FF           5499 	inc	-1 (ix)
   1A9B                    5500 00180$:
   1A9B C3r3As1A           5501 	jp	00145$
   1A9E                    5502 00148$:
                           5503 ;demo.c:843: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   1A9E 21 08 B4           5504 	ld	hl,#0xB408
   1AA1 E5                 5505 	push	hl
   1AA2 21r68s1D           5506 	ld	hl,#__str_13
   1AA5 E5                 5507 	push	hl
   1AA6 CDr20s11           5508 	call	_drawsine
   1AA9 F1                 5509 	pop	af
   1AAA F1                 5510 	pop	af
                           5511 ;demo.c:845: vdp_load_palette(boxes_palette);
   1AAB 21rF4s40           5512 	ld	hl,#_boxes_palette
   1AAE E5                 5513 	push	hl
   1AAF CDr00s00           5514 	call	_vdp_load_palette
   1AB2 F1                 5515 	pop	af
   1AB3                    5516 00106$:
                           5517 ;demo.c:848: if (bt >= 80) bt+=8;
   1AB3 3Ar99s41           5518 	ld	a,(#_bt+0)
   1AB6 D6 50              5519 	sub	a,#0x50
   1AB8 3Ar9As41           5520 	ld	a,(#_bt+1)
   1ABB DE 00              5521 	sbc	a,#0x00
   1ABD FArD6s1A           5522 	jp	M,00108$
   1AC0 21r99s41           5523 	ld	hl,#_bt
   1AC3 7E                 5524 	ld	a,(hl)
   1AC4 C6 08              5525 	add	a,#0x08
   1AC6 23                 5526 	inc	hl
   1AC7 2B                 5527 	dec	hl
   1AC8 C5                 5528 	push	bc
   1AC9 4F                 5529 	ld	c, a
   1ACA 23                 5530 	inc	hl
   1ACB 7E                 5531 	ld	a, (hl)
   1ACC 47                 5532 	ld	b, a
   1ACD 79                 5533 	ld	a, c
   1ACE 2B                 5534 	dec	hl
   1ACF 77                 5535 	ld	(hl), a
   1AD0 78                 5536 	ld	a, b
   1AD1 C1                 5537 	pop	bc
   1AD2 CE 00              5538 	adc	a,#0x00
   1AD4 23                 5539 	inc	hl
   1AD5 77                 5540 	ld	(hl),a
   1AD6                    5541 00108$:
                           5542 ;demo.c:849: if (bt < 80 && bt >= 60) bt+=7;
   1AD6 3Ar99s41           5543 	ld	a,(#_bt+0)
   1AD9 D6 50              5544 	sub	a,#0x50
   1ADB 3Ar9As41           5545 	ld	a,(#_bt+1)
   1ADE DE 00              5546 	sbc	a,#0x00
   1AE0 F2r06s1B           5547 	jp	P,00110$
   1AE3 3Ar99s41           5548 	ld	a,(#_bt+0)
   1AE6 D6 3C              5549 	sub	a,#0x3C
   1AE8 3Ar9As41           5550 	ld	a,(#_bt+1)
   1AEB DE 00              5551 	sbc	a,#0x00
   1AED FAr06s1B           5552 	jp	M,00110$
   1AF0 21r99s41           5553 	ld	hl,#_bt
   1AF3 7E                 5554 	ld	a,(hl)
   1AF4 C6 07              5555 	add	a,#0x07
   1AF6 23                 5556 	inc	hl
   1AF7 2B                 5557 	dec	hl
   1AF8 C5                 5558 	push	bc
   1AF9 4F                 5559 	ld	c, a
   1AFA 23                 5560 	inc	hl
   1AFB 7E                 5561 	ld	a, (hl)
   1AFC 47                 5562 	ld	b, a
   1AFD 79                 5563 	ld	a, c
   1AFE 2B                 5564 	dec	hl
   1AFF 77                 5565 	ld	(hl), a
   1B00 78                 5566 	ld	a, b
   1B01 C1                 5567 	pop	bc
   1B02 CE 00              5568 	adc	a,#0x00
   1B04 23                 5569 	inc	hl
   1B05 77                 5570 	ld	(hl),a
   1B06                    5571 00110$:
                           5572 ;demo.c:850: if (bt < 60 && bt >= 40) bt+=6;
   1B06 3Ar99s41           5573 	ld	a,(#_bt+0)
   1B09 D6 3C              5574 	sub	a,#0x3C
   1B0B 3Ar9As41           5575 	ld	a,(#_bt+1)
   1B0E DE 00              5576 	sbc	a,#0x00
   1B10 F2r36s1B           5577 	jp	P,00113$
   1B13 3Ar99s41           5578 	ld	a,(#_bt+0)
   1B16 D6 28              5579 	sub	a,#0x28
   1B18 3Ar9As41           5580 	ld	a,(#_bt+1)
   1B1B DE 00              5581 	sbc	a,#0x00
   1B1D FAr36s1B           5582 	jp	M,00113$
   1B20 21r99s41           5583 	ld	hl,#_bt
   1B23 7E                 5584 	ld	a,(hl)
   1B24 C6 06              5585 	add	a,#0x06
   1B26 23                 5586 	inc	hl
   1B27 2B                 5587 	dec	hl
   1B28 C5                 5588 	push	bc
   1B29 4F                 5589 	ld	c, a
   1B2A 23                 5590 	inc	hl
   1B2B 7E                 5591 	ld	a, (hl)
   1B2C 47                 5592 	ld	b, a
   1B2D 79                 5593 	ld	a, c
   1B2E 2B                 5594 	dec	hl
   1B2F 77                 5595 	ld	(hl), a
   1B30 78                 5596 	ld	a, b
   1B31 C1                 5597 	pop	bc
   1B32 CE 00              5598 	adc	a,#0x00
   1B34 23                 5599 	inc	hl
   1B35 77                 5600 	ld	(hl),a
   1B36                    5601 00113$:
                           5602 ;demo.c:851: if (bt < 40 && bt >= 10) bt+=5;
   1B36 3Ar99s41           5603 	ld	a,(#_bt+0)
   1B39 D6 28              5604 	sub	a,#0x28
   1B3B 3Ar9As41           5605 	ld	a,(#_bt+1)
   1B3E DE 00              5606 	sbc	a,#0x00
   1B40 F2r66s1B           5607 	jp	P,00116$
   1B43 3Ar99s41           5608 	ld	a,(#_bt+0)
   1B46 D6 0A              5609 	sub	a,#0x0A
   1B48 3Ar9As41           5610 	ld	a,(#_bt+1)
   1B4B DE 00              5611 	sbc	a,#0x00
   1B4D FAr66s1B           5612 	jp	M,00116$
   1B50 21r99s41           5613 	ld	hl,#_bt
   1B53 7E                 5614 	ld	a,(hl)
   1B54 C6 05              5615 	add	a,#0x05
   1B56 23                 5616 	inc	hl
   1B57 2B                 5617 	dec	hl
   1B58 C5                 5618 	push	bc
   1B59 4F                 5619 	ld	c, a
   1B5A 23                 5620 	inc	hl
   1B5B 7E                 5621 	ld	a, (hl)
   1B5C 47                 5622 	ld	b, a
   1B5D 79                 5623 	ld	a, c
   1B5E 2B                 5624 	dec	hl
   1B5F 77                 5625 	ld	(hl), a
   1B60 78                 5626 	ld	a, b
   1B61 C1                 5627 	pop	bc
   1B62 CE 00              5628 	adc	a,#0x00
   1B64 23                 5629 	inc	hl
   1B65 77                 5630 	ld	(hl),a
   1B66                    5631 00116$:
                           5632 ;demo.c:852: if (bt < 10 ) bt+=4;
   1B66 3Ar99s41           5633 	ld	a,(#_bt+0)
   1B69 D6 0A              5634 	sub	a,#0x0A
   1B6B 3Ar9As41           5635 	ld	a,(#_bt+1)
   1B6E DE 00              5636 	sbc	a,#0x00
   1B70 F2r89s1B           5637 	jp	P,00119$
   1B73 21r99s41           5638 	ld	hl,#_bt
   1B76 7E                 5639 	ld	a,(hl)
   1B77 C6 04              5640 	add	a,#0x04
   1B79 23                 5641 	inc	hl
   1B7A 2B                 5642 	dec	hl
   1B7B C5                 5643 	push	bc
   1B7C 4F                 5644 	ld	c, a
   1B7D 23                 5645 	inc	hl
   1B7E 7E                 5646 	ld	a, (hl)
   1B7F 47                 5647 	ld	b, a
   1B80 79                 5648 	ld	a, c
   1B81 2B                 5649 	dec	hl
   1B82 77                 5650 	ld	(hl), a
   1B83 78                 5651 	ld	a, b
   1B84 C1                 5652 	pop	bc
   1B85 CE 00              5653 	adc	a,#0x00
   1B87 23                 5654 	inc	hl
   1B88 77                 5655 	ld	(hl),a
   1B89                    5656 00119$:
                           5657 ;demo.c:855: cmd.source_x = bx;
   1B89 ED 4Br95s41        5658 	ld	bc,(_bx)
   1B8D 21r18s41           5659 	ld	hl,#_cmd
   1B90 71                 5660 	ld	(hl),c
   1B91 23                 5661 	inc	hl
   1B92 70                 5662 	ld	(hl),b
                           5663 ;demo.c:856: cmd.source_y = bt;
   1B93 01r1As41           5664 	ld	bc,#_cmd + 2
   1B96 ED 5Br99s41        5665 	ld	de,(_bt)
   1B9A 69                 5666 	ld	l,c
   1B9B 60                 5667 	ld	h,b
   1B9C 73                 5668 	ld	(hl),e
   1B9D 23                 5669 	inc	hl
   1B9E 72                 5670 	ld	(hl),d
                           5671 ;demo.c:857: cmd.dest_x = 0;
   1B9F 21r1Cs41           5672 	ld	hl, #_cmd + 4
   1BA2 36 00              5673 	ld	(hl),#0x00
   1BA4 23                 5674 	inc	hl
   1BA5 36 00              5675 	ld	(hl),#0x00
                           5676 ;demo.c:858: cmd.dest_y = 256;
   1BA7 21r1Es41           5677 	ld	hl, #_cmd + 6
   1BAA 36 00              5678 	ld	(hl),#0x00
   1BAC 23                 5679 	inc	hl
   1BAD 36 01              5680 	ld	(hl),#0x01
                           5681 ;demo.c:859: cmd.size_x = 36;
   1BAF 21r20s41           5682 	ld	hl, #_cmd + 8
   1BB2 36 24              5683 	ld	(hl),#0x24
   1BB4 23                 5684 	inc	hl
   1BB5 36 00              5685 	ld	(hl),#0x00
                           5686 ;demo.c:860: cmd.size_y = 36;
   1BB7 21r22s41           5687 	ld	hl, #_cmd + 10
   1BBA 36 24              5688 	ld	(hl),#0x24
   1BBC 23                 5689 	inc	hl
   1BBD 36 00              5690 	ld	(hl),#0x00
                           5691 ;demo.c:861: cmd.data = 0;
                           5692 ;demo.c:862: cmd.argument = 0x00;
   1BBF 3E 00              5693 	ld	a,#0x00
   1BC1 32r24s41           5694 	ld	(#_cmd + 12),a
   1BC4 32r25s41           5695 	ld	(#_cmd + 13),a
                           5696 ;demo.c:863: cmd.command = 0xD0; // HMMM
   1BC7 3E D0              5697 	ld	a,#0xD0
   1BC9 32r26s41           5698 	ld	(#_cmd + 14),a
                           5699 ;demo.c:864: vdp_copier(&cmd);
   1BCC 21r18s41           5700 	ld	hl,#_cmd
   1BCF E5                 5701 	push	hl
   1BD0 CDr00s00           5702 	call	_vdp_copier
   1BD3 F1                 5703 	pop	af
                           5704 ;demo.c:866: pbx = bx;
   1BD4 2Ar95s41           5705 	ld	hl,(_bx)
   1BD7 FD 21r9Fs41        5706 	ld	iy,#_pbx
   1BDB FD 75 00           5707 	ld	0 (iy),l
   1BDE FD 21r9Fs41        5708 	ld	iy,#_pbx
   1BE2 FD 74 01           5709 	ld	1 (iy),h
                           5710 ;demo.c:867: pbt = bt;
   1BE5 2Ar99s41           5711 	ld	hl,(_bt)
   1BE8 FD 21rA1s41        5712 	ld	iy,#_pbt
   1BEC FD 75 00           5713 	ld	0 (iy),l
   1BEF FD 21rA1s41        5714 	ld	iy,#_pbt
   1BF3 FD 74 01           5715 	ld	1 (iy),h
                           5716 ;demo.c:872: bonc = 1;
   1BF6 21r9Ds41           5717 	ld	hl,#_bonc + 0
   1BF9 36 01              5718 	ld	(hl), #0x01
   1BFB 21r9Es41           5719 	ld	hl,#_bonc + 1
   1BFE 36 00              5720 	ld	(hl), #0x00
                           5721 ;demo.c:873: if (bt > by) {
   1C00 21r97s41           5722 	ld	hl,#_by
   1C03 7E                 5723 	ld	a,(hl)
   1C04 FD 21r99s41        5724 	ld	iy,#_bt
   1C08 FD 96 00           5725 	sub	a,0 (iy)
   1C0B 23                 5726 	inc	hl
   1C0C 7E                 5727 	ld	a,(hl)
   1C0D FD 21r99s41        5728 	ld	iy,#_bt
   1C11 FD 9E 01           5729 	sbc	a,1 (iy)
   1C14 F2r52s1D           5730 	jp	P,00135$
                           5731 ;demo.c:874: bt = by;
   1C17 2Ar97s41           5732 	ld	hl,(_by)
   1C1A FD 21r99s41        5733 	ld	iy,#_bt
   1C1E FD 75 00           5734 	ld	0 (iy),l
   1C21 FD 21r99s41        5735 	ld	iy,#_bt
   1C25 FD 74 01           5736 	ld	1 (iy),h
                           5737 ;demo.c:875: drawbox(bx,bt);
   1C28 21r99s41           5738 	ld	hl,#_bt + 0
   1C2B 4E                 5739 	ld	c,(hl)
   1C2C 21r95s41           5740 	ld	hl,#_bx + 0
   1C2F 46                 5741 	ld	b,(hl)
   1C30 79                 5742 	ld	a,c
   1C31 F5                 5743 	push	af
   1C32 33                 5744 	inc	sp
   1C33 C5                 5745 	push	bc
   1C34 33                 5746 	inc	sp
   1C35 CDrADs18           5747 	call	_drawbox
   1C38 F1                 5748 	pop	af
                           5749 ;demo.c:876: bt = 0;
   1C39 21r99s41           5750 	ld	hl,#_bt + 0
   1C3C 36 00              5751 	ld	(hl), #0x00
   1C3E 21r9As41           5752 	ld	hl,#_bt + 1
   1C41 36 00              5753 	ld	(hl), #0x00
                           5754 ;demo.c:877: if (by > 48) {
   1C43 3E 30              5755 	ld	a,#0x30
   1C45 FD 21r97s41        5756 	ld	iy,#_by
   1C49 FD 96 00           5757 	sub	a,0 (iy)
   1C4C 3E 00              5758 	ld	a,#0x00
   1C4E FD 21r97s41        5759 	ld	iy,#_by
   1C52 FD 9E 01           5760 	sbc	a,1 (iy)
   1C55 F2rADs1C           5761 	jp	P,00123$
                           5762 ;demo.c:878: bonc = 0;
   1C58 21r9Ds41           5763 	ld	hl,#_bonc + 0
   1C5B 36 00              5764 	ld	(hl), #0x00
   1C5D 21r9Es41           5765 	ld	hl,#_bonc + 1
   1C60 36 00              5766 	ld	(hl), #0x00
                           5767 ;demo.c:879: by-=16;
   1C62 21r97s41           5768 	ld	hl,#_by
   1C65 7E                 5769 	ld	a,(hl)
   1C66 C6 F0              5770 	add	a,#0xF0
   1C68 77                 5771 	ld	(hl),a
   1C69 23                 5772 	inc	hl
   1C6A 7E                 5773 	ld	a,(hl)
   1C6B CE FF              5774 	adc	a,#0xFF
   1C6D 77                 5775 	ld	(hl),a
                           5776 ;demo.c:880: prevbox_of = boxes_of[boxi];
   1C6E 3Ar94s41           5777 	ld	a,(#_boxi+0)
   1C71 87                 5778 	add	a,a
   1C72 C6rA3              5779 	add	a,#<_boxes_of
   1C74 6F                 5780 	ld	l,a
   1C75 3Es41              5781 	ld	a,#>_boxes_of
   1C77 CE 00              5782 	adc	a,#0x00
   1C79 67                 5783 	ld	h,a
   1C7A 4E                 5784 	ld	c,(hl)
   1C7B 23                 5785 	inc	hl
   1C7C 21rADs41           5786 	ld	hl,#_prevbox_of + 0
   1C7F 71                 5787 	ld	(hl), c
                           5788 ;demo.c:881: by+=prevbox_of;
   1C80 21rADs41           5789 	ld	hl,#_prevbox_of + 0
   1C83 4E                 5790 	ld	c,(hl)
   1C84 06 00              5791 	ld	b,#0x00
   1C86 21r97s41           5792 	ld	hl,#_by
   1C89 7E                 5793 	ld	a,(hl)
   1C8A 81                 5794 	add	a,c
   1C8B 23                 5795 	inc	hl
   1C8C 2B                 5796 	dec	hl
   1C8D C5                 5797 	push	bc
   1C8E 4F                 5798 	ld	c, a
   1C8F 23                 5799 	inc	hl
   1C90 7E                 5800 	ld	a, (hl)
   1C91 47                 5801 	ld	b, a
   1C92 79                 5802 	ld	a, c
   1C93 2B                 5803 	dec	hl
   1C94 77                 5804 	ld	(hl), a
   1C95 78                 5805 	ld	a, b
   1C96 C1                 5806 	pop	bc
   1C97 88                 5807 	adc	a,b
   1C98 23                 5808 	inc	hl
   1C99 77                 5809 	ld	(hl),a
                           5810 ;demo.c:882: boxi++;
   1C9A FD 21r94s41        5811 	ld	iy,#_boxi
   1C9E FD 34 00           5812 	inc	0 (iy)
                           5813 ;demo.c:883: if (boxi >= 4) boxi = 0;
   1CA1 3Ar94s41           5814 	ld	a,(#_boxi+0)
   1CA4 D6 04              5815 	sub	a,#0x04
   1CA6 38 05              5816 	jr	C,00123$
   1CA8 21r94s41           5817 	ld	hl,#_boxi + 0
   1CAB 36 00              5818 	ld	(hl), #0x00
   1CAD                    5819 00123$:
                           5820 ;demo.c:886: if (by <= 48) {
   1CAD 3E 30              5821 	ld	a,#0x30
   1CAF FD 21r97s41        5822 	ld	iy,#_by
   1CB3 FD 96 00           5823 	sub	a,0 (iy)
   1CB6 3E 00              5824 	ld	a,#0x00
   1CB8 FD 21r97s41        5825 	ld	iy,#_by
   1CBC FD 9E 01           5826 	sbc	a,1 (iy)
   1CBF FAr63s1D           5827 	jp	M,00149$
                           5828 ;demo.c:887: bx-=16;
   1CC2 21r95s41           5829 	ld	hl,#_bx
   1CC5 7E                 5830 	ld	a,(hl)
   1CC6 C6 F0              5831 	add	a,#0xF0
   1CC8 77                 5832 	ld	(hl),a
   1CC9 23                 5833 	inc	hl
   1CCA 7E                 5834 	ld	a,(hl)
   1CCB CE FF              5835 	adc	a,#0xFF
   1CCD 77                 5836 	ld	(hl),a
                           5837 ;demo.c:889: if (bx>128)bo+=8;
   1CCE 3E 80              5838 	ld	a,#0x80
   1CD0 FD 21r95s41        5839 	ld	iy,#_bx
   1CD4 FD 96 00           5840 	sub	a,0 (iy)
   1CD7 3E 00              5841 	ld	a,#0x00
   1CD9 FD 21r95s41        5842 	ld	iy,#_bx
   1CDD FD 9E 01           5843 	sbc	a,1 (iy)
   1CE0 07                 5844 	rlca
   1CE1 E6 01              5845 	and	a,#0x01
   1CE3 4F                 5846 	ld	c,a
   1CE4 B7                 5847 	or	a,a
   1CE5 28 18              5848 	jr	Z,00125$
   1CE7 21r9Bs41           5849 	ld	hl,#_bo
   1CEA 7E                 5850 	ld	a,(hl)
   1CEB C6 08              5851 	add	a,#0x08
   1CED 23                 5852 	inc	hl
   1CEE 2B                 5853 	dec	hl
   1CEF C5                 5854 	push	bc
   1CF0 4F                 5855 	ld	c, a
   1CF1 23                 5856 	inc	hl
   1CF2 7E                 5857 	ld	a, (hl)
   1CF3 47                 5858 	ld	b, a
   1CF4 79                 5859 	ld	a, c
   1CF5 2B                 5860 	dec	hl
   1CF6 77                 5861 	ld	(hl), a
   1CF7 78                 5862 	ld	a, b
   1CF8 C1                 5863 	pop	bc
   1CF9 CE 00              5864 	adc	a,#0x00
   1CFB 23                 5865 	inc	hl
   1CFC 77                 5866 	ld	(hl),a
   1CFD 18 0C              5867 	jr	00126$
   1CFF                    5868 00125$:
                           5869 ;demo.c:890: else bo-=8;
   1CFF 21r9Bs41           5870 	ld	hl,#_bo
   1D02 7E                 5871 	ld	a,(hl)
   1D03 C6 F8              5872 	add	a,#0xF8
   1D05 77                 5873 	ld	(hl),a
   1D06 23                 5874 	inc	hl
   1D07 7E                 5875 	ld	a,(hl)
   1D08 CE FF              5876 	adc	a,#0xFF
   1D0A 77                 5877 	ld	(hl),a
   1D0B                    5878 00126$:
                           5879 ;demo.c:891: if (bo > 192) bo = 0;
   1D0B 3E C0              5880 	ld	a,#0xC0
   1D0D FD 21r9Bs41        5881 	ld	iy,#_bo
   1D11 FD 96 00           5882 	sub	a,0 (iy)
   1D14 3E 00              5883 	ld	a,#0x00
   1D16 FD 21r9Bs41        5884 	ld	iy,#_bo
   1D1A FD 9E 01           5885 	sbc	a,1 (iy)
   1D1D F2r2As1D           5886 	jp	P,00128$
   1D20 21r9Bs41           5887 	ld	hl,#_bo + 0
   1D23 36 00              5888 	ld	(hl), #0x00
   1D25 21r9Cs41           5889 	ld	hl,#_bo + 1
   1D28 36 00              5890 	ld	(hl), #0x00
   1D2A                    5891 00128$:
                           5892 ;demo.c:892: if (bx>128)by=84+bo;
   1D2A AF                 5893 	xor	a,a
   1D2B B1                 5894 	or	a,c
   1D2C 28 12              5895 	jr	Z,00130$
   1D2E 21r97s41           5896 	ld	hl,#_by
   1D31 3Ar9Bs41           5897 	ld	a,(#_bo+0)
   1D34 C6 54              5898 	add	a,#0x54
   1D36 77                 5899 	ld	(hl),a
   1D37 3Ar9Cs41           5900 	ld	a,(#_bo+1)
   1D3A CE 00              5901 	adc	a,#0x00
   1D3C 23                 5902 	inc	hl
   1D3D 77                 5903 	ld	(hl),a
   1D3E 18 23              5904 	jr	00149$
   1D40                    5905 00130$:
                           5906 ;demo.c:893: else by=36+36+84+bo;
   1D40 21r97s41           5907 	ld	hl,#_by
   1D43 3Ar9Bs41           5908 	ld	a,(#_bo+0)
   1D46 C6 9C              5909 	add	a,#0x9C
   1D48 77                 5910 	ld	(hl),a
   1D49 3Ar9Cs41           5911 	ld	a,(#_bo+1)
   1D4C CE 00              5912 	adc	a,#0x00
   1D4E 23                 5913 	inc	hl
   1D4F 77                 5914 	ld	(hl),a
   1D50 18 11              5915 	jr	00149$
   1D52                    5916 00135$:
                           5917 ;demo.c:896: drawbox(bx,bt);
   1D52 21r99s41           5918 	ld	hl,#_bt + 0
   1D55 4E                 5919 	ld	c,(hl)
   1D56 21r95s41           5920 	ld	hl,#_bx + 0
   1D59 46                 5921 	ld	b,(hl)
   1D5A 79                 5922 	ld	a,c
   1D5B F5                 5923 	push	af
   1D5C 33                 5924 	inc	sp
   1D5D C5                 5925 	push	bc
   1D5E 33                 5926 	inc	sp
   1D5F CDrADs18           5927 	call	_drawbox
   1D62 F1                 5928 	pop	af
   1D63                    5929 00149$:
   1D63 DD F9              5930 	ld	sp,ix
   1D65 DD E1              5931 	pop	ix
   1D67 C9                 5932 	ret
   1D68                    5933 _boxes_end::
   1D68                    5934 __str_13:
   1D68 4C 45 54 20 55 53  5935 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1D93 00                 5936 	.db 0x00
                           5937 ;demo.c:906: void thewave() {
                           5938 ;	---------------------------------
                           5939 ; Function thewave
                           5940 ; ---------------------------------
   1D94                    5941 _thewave_start::
   1D94                    5942 _thewave:
   1D94 DD E5              5943 	push	ix
   1D96 DD 21 00 00        5944 	ld	ix,#0
   1D9A DD 39              5945 	add	ix,sp
   1D9C 21 F6 FF           5946 	ld	hl,#-10
   1D9F 39                 5947 	add	hl,sp
   1DA0 F9                 5948 	ld	sp,hl
                           5949 ;demo.c:914: if (initwave == 0) {
   1DA1 AF                 5950 	xor	a,a
   1DA2 21rAEs41           5951 	ld	hl,#_initwave + 0
   1DA5 B6                 5952 	or	a,(hl)
   1DA6 C2r2As1E           5953 	jp	NZ,00102$
                           5954 ;demo.c:915: initwave = 1;
   1DA9 21rAEs41           5955 	ld	hl,#_initwave + 0
   1DAC 36 01              5956 	ld	(hl), #0x01
                           5957 ;demo.c:916: for (y = 0; y < 212; y++) {
   1DAE DD 36 FE 00        5958 	ld	-2 (ix),#0x00
   1DB2                    5959 00113$:
   1DB2 DD 7E FE           5960 	ld	a,-2 (ix)
   1DB5 D6 D4              5961 	sub	a,#0xD4
   1DB7 D2r2As1E           5962 	jp	NC,00102$
                           5963 ;demo.c:917: cmd.size_x = 256;
   1DBA 11r20s41           5964 	ld	de,#_cmd + 8
   1DBD EB                 5965 	ex	de,hl
   1DBE 36 00              5966 	ld	(hl),#0x00
   1DC0 23                 5967 	inc	hl
   1DC1 36 01              5968 	ld	(hl),#0x01
                           5969 ;demo.c:918: cmd.size_y = 2;
   1DC3 11r22s41           5970 	ld	de,#_cmd + 10
   1DC6 EB                 5971 	ex	de,hl
   1DC7 36 02              5972 	ld	(hl),#0x02
   1DC9 23                 5973 	inc	hl
   1DCA 36 00              5974 	ld	(hl),#0x00
                           5975 ;demo.c:919: cmd.data = 0;
   1DCC 11r24s41           5976 	ld	de,#_cmd + 12
   1DCF 3E 00              5977 	ld	a,#0x00
   1DD1 12                 5978 	ld	(de),a
                           5979 ;demo.c:920: cmd.argument = 0x00; // from 70xY to left
   1DD2 11r25s41           5980 	ld	de,#_cmd + 13
   1DD5 3E 00              5981 	ld	a,#0x00
   1DD7 12                 5982 	ld	(de),a
                           5983 ;demo.c:921: cmd.command = 0xd0; // vram to vram, y only
   1DD8 11r26s41           5984 	ld	de,#_cmd + 14
   1DDB 3E D0              5985 	ld	a,#0xD0
   1DDD 12                 5986 	ld	(de),a
                           5987 ;demo.c:923: cmd.source_x = 0;
   1DDE 21r18s41           5988 	ld	hl,#_cmd
   1DE1 36 00              5989 	ld	(hl),#0x00
   1DE3 23                 5990 	inc	hl
   1DE4 36 00              5991 	ld	(hl),#0x00
                           5992 ;demo.c:924: cmd.source_y = 0;
   1DE6 11r1As41           5993 	ld	de,#_cmd + 2
   1DE9 EB                 5994 	ex	de,hl
   1DEA 36 00              5995 	ld	(hl),#0x00
   1DEC 23                 5996 	inc	hl
   1DED 36 00              5997 	ld	(hl),#0x00
                           5998 ;demo.c:925: cmd.dest_x = 0;
   1DEF 11r1Cs41           5999 	ld	de,#_cmd + 4
   1DF2 EB                 6000 	ex	de,hl
   1DF3 36 00              6001 	ld	(hl),#0x00
   1DF5 23                 6002 	inc	hl
   1DF6 36 00              6003 	ld	(hl),#0x00
                           6004 ;demo.c:926: cmd.dest_y = 0+y;
   1DF8 11r1Es41           6005 	ld	de,#_cmd + 6
   1DFB DD 4E FE           6006 	ld	c,-2 (ix)
   1DFE 06 00              6007 	ld	b,#0x00
   1E00 EB                 6008 	ex	de,hl
   1E01 71                 6009 	ld	(hl),c
   1E02 23                 6010 	inc	hl
   1E03 70                 6011 	ld	(hl),b
                           6012 ;demo.c:927: vdp_copier(&cmd);
   1E04 C5                 6013 	push	bc
   1E05 21r18s41           6014 	ld	hl,#_cmd
   1E08 E5                 6015 	push	hl
   1E09 CDr00s00           6016 	call	_vdp_copier
   1E0C F1                 6017 	pop	af
   1E0D C1                 6018 	pop	bc
                           6019 ;demo.c:928: cmd.dest_y = 256+y;
   1E0E 11r1Es41           6020 	ld	de,#_cmd + 6
   1E11 21 00 01           6021 	ld	hl,#0x0100
   1E14 09                 6022 	add	hl,bc
   1E15 4D                 6023 	ld	c,l
   1E16 44                 6024 	ld	b,h
   1E17 EB                 6025 	ex	de,hl
   1E18 71                 6026 	ld	(hl),c
   1E19 23                 6027 	inc	hl
   1E1A 70                 6028 	ld	(hl),b
                           6029 ;demo.c:929: vdp_copier(&cmd);
   1E1B 21r18s41           6030 	ld	hl,#_cmd
   1E1E E5                 6031 	push	hl
   1E1F CDr00s00           6032 	call	_vdp_copier
   1E22 F1                 6033 	pop	af
                           6034 ;demo.c:930: waitVB();
   1E23 76                 6035 		halt 
                           6036 ;demo.c:916: for (y = 0; y < 212; y++) {
   1E24 DD 34 FE           6037 	inc	-2 (ix)
   1E27 C3rB2s1D           6038 	jp	00113$
   1E2A                    6039 00102$:
                           6040 ;demo.c:936: if (buf == -1) { bo = 0; ya = 0; }
   1E2A 3ArAFs41           6041 	ld	a,(#_buf+0)
   1E2D 3C                 6042 	inc	a
   1E2E 20 06              6043 	jr	NZ,00141$
   1E30 3ArB0s41           6044 	ld	a,(#_buf+1)
   1E33 3C                 6045 	inc	a
   1E34 28 02              6046 	jr	Z,00142$
   1E36                    6047 00141$:
   1E36 18 0A              6048 	jr	00104$
   1E38                    6049 00142$:
   1E38 DD 36 FA 00        6050 	ld	-6 (ix),#0x00
   1E3C DD 36 FB 00        6051 	ld	-5 (ix),#0x00
   1E40 18 08              6052 	jr	00105$
   1E42                    6053 00104$:
                           6054 ;demo.c:937: else { bo = 256; ya = 6;}
   1E42 DD 36 FA 00        6055 	ld	-6 (ix),#0x00
   1E46 DD 36 FB 01        6056 	ld	-5 (ix),#0x01
   1E4A                    6057 00105$:
                           6058 ;demo.c:939: cmd.size_x = 72;
   1E4A 11r20s41           6059 	ld	de,#_cmd + 8
   1E4D EB                 6060 	ex	de,hl
   1E4E 36 48              6061 	ld	(hl),#0x48
   1E50 23                 6062 	inc	hl
   1E51 36 00              6063 	ld	(hl),#0x00
                           6064 ;demo.c:940: cmd.size_y = 80;
   1E53 11r22s41           6065 	ld	de,#_cmd + 10
   1E56 EB                 6066 	ex	de,hl
   1E57 36 50              6067 	ld	(hl),#0x50
   1E59 23                 6068 	inc	hl
   1E5A 36 00              6069 	ld	(hl),#0x00
                           6070 ;demo.c:941: cmd.data = 0;
   1E5C 11r24s41           6071 	ld	de,#_cmd + 12
   1E5F 3E 00              6072 	ld	a,#0x00
   1E61 12                 6073 	ld	(de),a
                           6074 ;demo.c:942: cmd.argument = 0x00; // from 70xY to left
   1E62 11r25s41           6075 	ld	de,#_cmd + 13
   1E65 3E 00              6076 	ld	a,#0x00
   1E67 12                 6077 	ld	(de),a
                           6078 ;demo.c:943: cmd.command = 0xd0; // vram to vram, y only
   1E68 11r26s41           6079 	ld	de,#_cmd + 14
   1E6B 3E D0              6080 	ld	a,#0xD0
   1E6D 12                 6081 	ld	(de),a
                           6082 ;demo.c:944: cmd.source_x = 178;
   1E6E 21r18s41           6083 	ld	hl,#_cmd
   1E71 36 B2              6084 	ld	(hl),#0xB2
   1E73 23                 6085 	inc	hl
   1E74 36 00              6086 	ld	(hl),#0x00
                           6087 ;demo.c:945: cmd.source_y = 0;
   1E76 11r1As41           6088 	ld	de,#_cmd + 2
   1E79 EB                 6089 	ex	de,hl
   1E7A 36 00              6090 	ld	(hl),#0x00
   1E7C 23                 6091 	inc	hl
   1E7D 36 00              6092 	ld	(hl),#0x00
                           6093 ;demo.c:946: cmd.dest_x = 80;
   1E7F 11r1Cs41           6094 	ld	de,#_cmd + 4
   1E82 EB                 6095 	ex	de,hl
   1E83 36 50              6096 	ld	(hl),#0x50
   1E85 23                 6097 	inc	hl
   1E86 36 00              6098 	ld	(hl),#0x00
                           6099 ;demo.c:947: cmd.dest_y = 58+20+bo;
   1E88 11r1Es41           6100 	ld	de,#_cmd + 6
   1E8B DD 7E FA           6101 	ld	a,-6 (ix)
   1E8E C6 4E              6102 	add	a,#0x4E
   1E90 4F                 6103 	ld	c,a
   1E91 DD 7E FB           6104 	ld	a,-5 (ix)
   1E94 CE 00              6105 	adc	a,#0x00
   1E96 47                 6106 	ld	b,a
   1E97 EB                 6107 	ex	de,hl
   1E98 71                 6108 	ld	(hl),c
   1E99 23                 6109 	inc	hl
   1E9A 70                 6110 	ld	(hl),b
                           6111 ;demo.c:948: vdp_copier(&cmd);
   1E9B 21r18s41           6112 	ld	hl,#_cmd
   1E9E E5                 6113 	push	hl
   1E9F CDr00s00           6114 	call	_vdp_copier
   1EA2 F1                 6115 	pop	af
                           6116 ;demo.c:950: for (y = 4; y < 15; y+=1) {
   1EA3 DD 7E FA           6117 	ld	a,-6 (ix)
   1EA6 C6 3A              6118 	add	a,#0x3A
   1EA8 DD 77 F8           6119 	ld	-8 (ix),a
   1EAB DD 7E FB           6120 	ld	a,-5 (ix)
   1EAE CE 00              6121 	adc	a,#0x00
   1EB0 DD 77 F9           6122 	ld	-7 (ix),a
   1EB3 DD 36 FE 04        6123 	ld	-2 (ix),#0x04
   1EB7                    6124 00121$:
   1EB7 DD 7E FE           6125 	ld	a,-2 (ix)
   1EBA D6 0F              6126 	sub	a,#0x0F
   1EBC D2r03s20           6127 	jp	NC,00124$
                           6128 ;demo.c:951: for (x = 0; x < 12; x+=1) {
   1EBF DD 36 FF 00        6129 	ld	-1 (ix),#0x00
   1EC3                    6130 00117$:
   1EC3 DD 7E FF           6131 	ld	a,-1 (ix)
   1EC6 D6 0C              6132 	sub	a,#0x0C
   1EC8 D2rFDs1F           6133 	jp	NC,00123$
                           6134 ;demo.c:953: px=7 + (sintab[(ffa + (x<<2) + (y<<2)) & 255]>>4);
   1ECB DD 5E FF           6135 	ld	e,-1 (ix)
   1ECE 16 00              6136 	ld	d,#0x00
   1ED0 CB 23              6137 	sla	e
   1ED2 CB 12              6138 	rl	d
   1ED4 CB 23              6139 	sla	e
   1ED6 CB 12              6140 	rl	d
   1ED8 3ArB1s41           6141 	ld	a,(#_ffa+0)
   1EDB 83                 6142 	add	a,e
   1EDC 5F                 6143 	ld	e,a
   1EDD FD 21rB1s41        6144 	ld	iy,#_ffa
   1EE1 FD 7E 01           6145 	ld	a,1 (iy)
   1EE4 8A                 6146 	adc	a,d
   1EE5 57                 6147 	ld	d,a
   1EE6 DD 4E FE           6148 	ld	c,-2 (ix)
   1EE9 06 00              6149 	ld	b,#0x00
   1EEB CB 21              6150 	sla	c
   1EED CB 10              6151 	rl	b
   1EEF CB 21              6152 	sla	c
   1EF1 CB 10              6153 	rl	b
   1EF3 7B                 6154 	ld	a,e
   1EF4 81                 6155 	add	a,c
   1EF5 5F                 6156 	ld	e,a
   1EF6 7A                 6157 	ld	a,d
   1EF7 88                 6158 	adc	a,b
   1EF8 16 00              6159 	ld	d,#0x00
   1EFA 21r00s00           6160 	ld	hl,#_sintab
   1EFD 19                 6161 	add	hl,de
   1EFE 5E                 6162 	ld	e,(hl)
   1EFF CB 2B              6163 	sra	e
   1F01 CB 2B              6164 	sra	e
   1F03 CB 2B              6165 	sra	e
   1F05 CB 2B              6166 	sra	e
   1F07 7B                 6167 	ld	a,e
   1F08 17                 6168 	rla	
   1F09 9F                 6169 	sbc	a,a
   1F0A 4F                 6170 	ld	c,a
   1F0B 7B                 6171 	ld	a,e
   1F0C C6 07              6172 	add	a,#0x07
   1F0E DD 77 FC           6173 	ld	-4 (ix),a
   1F11 79                 6174 	ld	a,c
   1F12 CE 00              6175 	adc	a,#0x00
   1F14 DD 77 FD           6176 	ld	-3 (ix),a
                           6177 ;demo.c:955: cmd.size_x = 3;
   1F17 11r20s41           6178 	ld	de,#_cmd + 8
   1F1A EB                 6179 	ex	de,hl
   1F1B 36 03              6180 	ld	(hl),#0x03
   1F1D 23                 6181 	inc	hl
   1F1E 36 00              6182 	ld	(hl),#0x00
                           6183 ;demo.c:956: cmd.size_y = 20-(14-px);
   1F20 11r22s41           6184 	ld	de,#_cmd + 10
   1F23 3E 0E              6185 	ld	a,#0x0E
   1F25 DD 96 FC           6186 	sub	a,-4 (ix)
   1F28 4F                 6187 	ld	c,a
   1F29 3E 00              6188 	ld	a,#0x00
   1F2B DD 9E FD           6189 	sbc	a,-3 (ix)
   1F2E 47                 6190 	ld	b,a
   1F2F 3E 14              6191 	ld	a,#0x14
   1F31 91                 6192 	sub	a,c
   1F32 4F                 6193 	ld	c,a
   1F33 3E 00              6194 	ld	a,#0x00
   1F35 98                 6195 	sbc	a,b
   1F36 47                 6196 	ld	b,a
   1F37 6B                 6197 	ld	l,e
   1F38 62                 6198 	ld	h,d
   1F39 71                 6199 	ld	(hl),c
   1F3A 23                 6200 	inc	hl
   1F3B 70                 6201 	ld	(hl),b
                           6202 ;demo.c:957: cmd.data = 0;
                           6203 ;demo.c:958: cmd.argument = 0x00; // from 70xY to left
   1F3C 3E 00              6204 	ld	a,#0x00
   1F3E 32r24s41           6205 	ld	(#_cmd + 12),a
   1F41 32r25s41           6206 	ld	(#_cmd + 13),a
                           6207 ;demo.c:959: cmd.command = 0x98; // vram to vram, y only
   1F44 01r26s41           6208 	ld	bc,#_cmd + 14
   1F47 3E 98              6209 	ld	a,#0x98
   1F49 02                 6210 	ld	(bc),a
                           6211 ;demo.c:961: if (px < 0) px = 0; 
   1F4A DD CB FD 7E        6212 	bit	7,-3 (ix)
   1F4E 28 08              6213 	jr	Z,00107$
   1F50 DD 36 FC 00        6214 	ld	-4 (ix),#0x00
   1F54 DD 36 FD 00        6215 	ld	-3 (ix),#0x00
   1F58                    6216 00107$:
                           6217 ;demo.c:962: if (px > 14) px = 14; 
   1F58 3E 0E              6218 	ld	a,#0x0E
   1F5A DD 96 FC           6219 	sub	a,-4 (ix)
   1F5D 3E 00              6220 	ld	a,#0x00
   1F5F DD 9E FD           6221 	sbc	a,-3 (ix)
   1F62 F2r6Ds1F           6222 	jp	P,00109$
   1F65 DD 36 FC 0E        6223 	ld	-4 (ix),#0x0E
   1F69 DD 36 FD 00        6224 	ld	-3 (ix),#0x00
   1F6D                    6225 00109$:
                           6226 ;demo.c:963: cmd.source_x = 1+sixtimes[px];
   1F6D 3Er20              6227 	ld	a,#<_sixtimes
   1F6F DD 86 FC           6228 	add	a,-4 (ix)
   1F72 4F                 6229 	ld	c,a
   1F73 3Es01              6230 	ld	a,#>_sixtimes
   1F75 DD 8E FD           6231 	adc	a,-3 (ix)
   1F78 47                 6232 	ld	b,a
   1F79 0A                 6233 	ld	a,(bc)
   1F7A 4F                 6234 	ld	c,a
   1F7B 06 00              6235 	ld	b,#0x00
   1F7D 03                 6236 	inc	bc
   1F7E 21r18s41           6237 	ld	hl,#_cmd
   1F81 71                 6238 	ld	(hl),c
   1F82 23                 6239 	inc	hl
   1F83 70                 6240 	ld	(hl),b
                           6241 ;demo.c:964: cmd.source_y = 1+768+190+(15-px);
   1F84 01r1As41           6242 	ld	bc,#_cmd + 2
   1F87 3E CE              6243 	ld	a,#0xCE
   1F89 DD 96 FC           6244 	sub	a,-4 (ix)
   1F8C 5F                 6245 	ld	e,a
   1F8D 3E 03              6246 	ld	a,#0x03
   1F8F DD 9E FD           6247 	sbc	a,-3 (ix)
   1F92 57                 6248 	ld	d,a
   1F93 69                 6249 	ld	l,c
   1F94 60                 6250 	ld	h,b
   1F95 73                 6251 	ld	(hl),e
   1F96 23                 6252 	inc	hl
   1F97 72                 6253 	ld	(hl),d
                           6254 ;demo.c:965: cmd.dest_x = 80+sixtimes[x];
   1F98 01r1Cs41           6255 	ld	bc,#_cmd + 4
   1F9B 3Er20              6256 	ld	a,#<_sixtimes
   1F9D DD 86 FF           6257 	add	a,-1 (ix)
   1FA0 5F                 6258 	ld	e,a
   1FA1 3Es01              6259 	ld	a,#>_sixtimes
   1FA3 CE 00              6260 	adc	a,#0x00
   1FA5 57                 6261 	ld	d,a
   1FA6 1A                 6262 	ld	a,(de)
   1FA7 5F                 6263 	ld	e,a
   1FA8 16 00              6264 	ld	d,#0x00
   1FAA 21 50 00           6265 	ld	hl,#0x0050
   1FAD 19                 6266 	add	hl,de
   1FAE EB                 6267 	ex	de,hl
   1FAF 69                 6268 	ld	l,c
   1FB0 60                 6269 	ld	h,b
   1FB1 73                 6270 	ld	(hl),e
   1FB2 23                 6271 	inc	hl
   1FB3 72                 6272 	ld	(hl),d
                           6273 ;demo.c:966: cmd.dest_y = 58+bo+sixtimes[y]+(14-px);
   1FB4 01r1Es41           6274 	ld	bc,#_cmd + 6
   1FB7 3Er20              6275 	ld	a,#<_sixtimes
   1FB9 DD 86 FE           6276 	add	a,-2 (ix)
   1FBC 5F                 6277 	ld	e,a
   1FBD 3Es01              6278 	ld	a,#>_sixtimes
   1FBF CE 00              6279 	adc	a,#0x00
   1FC1 57                 6280 	ld	d,a
   1FC2 1A                 6281 	ld	a,(de)
   1FC3 5F                 6282 	ld	e,a
   1FC4 16 00              6283 	ld	d,#0x00
   1FC6 DD 7E F8           6284 	ld	a,-8 (ix)
   1FC9 83                 6285 	add	a,e
   1FCA DD 77 F6           6286 	ld	-10 (ix),a
   1FCD DD 7E F9           6287 	ld	a,-7 (ix)
   1FD0 8A                 6288 	adc	a,d
   1FD1 DD 77 F7           6289 	ld	-9 (ix),a
   1FD4 3E 0E              6290 	ld	a,#0x0E
   1FD6 DD 96 FC           6291 	sub	a,-4 (ix)
   1FD9 5F                 6292 	ld	e,a
   1FDA 3E 00              6293 	ld	a,#0x00
   1FDC DD 9E FD           6294 	sbc	a,-3 (ix)
   1FDF 57                 6295 	ld	d,a
   1FE0 DD 7E F6           6296 	ld	a,-10 (ix)
   1FE3 83                 6297 	add	a,e
   1FE4 5F                 6298 	ld	e,a
   1FE5 DD 7E F7           6299 	ld	a,-9 (ix)
   1FE8 8A                 6300 	adc	a,d
   1FE9 57                 6301 	ld	d,a
   1FEA 69                 6302 	ld	l,c
   1FEB 60                 6303 	ld	h,b
   1FEC 73                 6304 	ld	(hl),e
   1FED 23                 6305 	inc	hl
   1FEE 72                 6306 	ld	(hl),d
                           6307 ;demo.c:967: vdp_copier(&cmd);
   1FEF 21r18s41           6308 	ld	hl,#_cmd
   1FF2 E5                 6309 	push	hl
   1FF3 CDr00s00           6310 	call	_vdp_copier
   1FF6 F1                 6311 	pop	af
                           6312 ;demo.c:951: for (x = 0; x < 12; x+=1) {
   1FF7 DD 34 FF           6313 	inc	-1 (ix)
   1FFA C3rC3s1E           6314 	jp	00117$
   1FFD                    6315 00123$:
                           6316 ;demo.c:950: for (y = 4; y < 15; y+=1) {
   1FFD DD 34 FE           6317 	inc	-2 (ix)
   2000 C3rB7s1E           6318 	jp	00121$
   2003                    6319 00124$:
                           6320 ;demo.c:972: if (buf == -1) vdp_register(2, 0x1F);
   2003 3ArAFs41           6321 	ld	a,(#_buf+0)
   2006 3C                 6322 	inc	a
   2007 20 06              6323 	jr	NZ,00147$
   2009 3ArB0s41           6324 	ld	a,(#_buf+1)
   200C 3C                 6325 	inc	a
   200D 28 02              6326 	jr	Z,00148$
   200F                    6327 00147$:
   200F 18 0A              6328 	jr	00111$
   2011                    6329 00148$:
   2011 21 02 1F           6330 	ld	hl,#0x1F02
   2014 E5                 6331 	push	hl
   2015 CDr00s00           6332 	call	_vdp_register
   2018 F1                 6333 	pop	af
   2019 18 08              6334 	jr	00112$
   201B                    6335 00111$:
                           6336 ;demo.c:973: else vdp_register(2, 0x3F);
   201B 21 02 3F           6337 	ld	hl,#0x3F02
   201E E5                 6338 	push	hl
   201F CDr00s00           6339 	call	_vdp_register
   2022 F1                 6340 	pop	af
   2023                    6341 00112$:
                           6342 ;demo.c:976: buf = -buf;
   2023 AF                 6343 	xor	a,a
   2024 FD 21rAFs41        6344 	ld	iy,#_buf
   2028 3E 00              6345 	ld	a,#0x00
   202A FD 9E 00           6346 	sbc	a,0 (iy)
   202D 21rAFs41           6347 	ld	hl,#_buf + 0
   2030 77                 6348 	ld	(hl), a
   2031 FD 21rAFs41        6349 	ld	iy,#_buf
   2035 3E 00              6350 	ld	a,#0x00
   2037 FD 9E 01           6351 	sbc	a,1 (iy)
   203A 21rB0s41           6352 	ld	hl,#_buf + 1
   203D 77                 6353 	ld	(hl), a
                           6354 ;demo.c:978: ffa+=8;
   203E 21rB1s41           6355 	ld	hl,#_ffa
   2041 7E                 6356 	ld	a,(hl)
   2042 C6 08              6357 	add	a,#0x08
   2044 23                 6358 	inc	hl
   2045 2B                 6359 	dec	hl
   2046 C5                 6360 	push	bc
   2047 4F                 6361 	ld	c, a
   2048 23                 6362 	inc	hl
   2049 7E                 6363 	ld	a, (hl)
   204A 47                 6364 	ld	b, a
   204B 79                 6365 	ld	a, c
   204C 2B                 6366 	dec	hl
   204D 77                 6367 	ld	(hl), a
   204E 78                 6368 	ld	a, b
   204F C1                 6369 	pop	bc
   2050 CE 00              6370 	adc	a,#0x00
   2052 23                 6371 	inc	hl
   2053 77                 6372 	ld	(hl),a
   2054 DD F9              6373 	ld	sp,ix
   2056 DD E1              6374 	pop	ix
   2058 C9                 6375 	ret
   2059                    6376 _thewave_end::
                           6377 ;demo.c:984: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           6378 ;	---------------------------------
                           6379 ; Function drawtritile
                           6380 ; ---------------------------------
   2059                    6381 _drawtritile_start::
   2059                    6382 _drawtritile:
   2059 DD E5              6383 	push	ix
   205B DD 21 00 00        6384 	ld	ix,#0
   205F DD 39              6385 	add	ix,sp
                           6386 ;demo.c:985: cmd.source_x = tx;
   2061 DD 4E 04           6387 	ld	c,4 (ix)
   2064 06 00              6388 	ld	b,#0x00
   2066 21r18s41           6389 	ld	hl,#_cmd
   2069 71                 6390 	ld	(hl),c
   206A 23                 6391 	inc	hl
   206B 70                 6392 	ld	(hl),b
                           6393 ;demo.c:986: cmd.source_y = ty-1;
   206C 01r1As41           6394 	ld	bc,#_cmd + 2
   206F DD 5E 05           6395 	ld	e,5 (ix)
   2072 DD 56 06           6396 	ld	d,6 (ix)
   2075 1B                 6397 	dec	de
   2076 69                 6398 	ld	l,c
   2077 60                 6399 	ld	h,b
   2078 73                 6400 	ld	(hl),e
   2079 23                 6401 	inc	hl
   207A 72                 6402 	ld	(hl),d
                           6403 ;demo.c:987: cmd.dest_x = x;
   207B 01r1Cs41           6404 	ld	bc,#_cmd + 4
   207E DD 5E 07           6405 	ld	e,7 (ix)
   2081 16 00              6406 	ld	d,#0x00
   2083 69                 6407 	ld	l,c
   2084 60                 6408 	ld	h,b
   2085 73                 6409 	ld	(hl),e
   2086 23                 6410 	inc	hl
   2087 72                 6411 	ld	(hl),d
                           6412 ;demo.c:988: cmd.dest_y = y;
   2088 01r1Es41           6413 	ld	bc,#_cmd + 6
   208B DD 5E 08           6414 	ld	e,8 (ix)
   208E 16 00              6415 	ld	d,#0x00
   2090 69                 6416 	ld	l,c
   2091 60                 6417 	ld	h,b
   2092 73                 6418 	ld	(hl),e
   2093 23                 6419 	inc	hl
   2094 72                 6420 	ld	(hl),d
                           6421 ;demo.c:989: cmd.size_x = 16;
   2095 21r20s41           6422 	ld	hl, #_cmd + 8
   2098 36 10              6423 	ld	(hl),#0x10
   209A 23                 6424 	inc	hl
   209B 36 00              6425 	ld	(hl),#0x00
                           6426 ;demo.c:990: cmd.size_y = 16;
   209D 21r22s41           6427 	ld	hl, #_cmd + 10
   20A0 36 10              6428 	ld	(hl),#0x10
   20A2 23                 6429 	inc	hl
   20A3 36 00              6430 	ld	(hl),#0x00
                           6431 ;demo.c:991: cmd.data = 0;
                           6432 ;demo.c:992: cmd.argument = 0x00;
   20A5 3E 00              6433 	ld	a,#0x00
   20A7 32r24s41           6434 	ld	(#_cmd + 12),a
   20AA 32r25s41           6435 	ld	(#_cmd + 13),a
                           6436 ;demo.c:993: cmd.command = 0xd0; // HMMM
   20AD 3E D0              6437 	ld	a,#0xD0
   20AF 32r26s41           6438 	ld	(#_cmd + 14),a
                           6439 ;demo.c:994: vdp_copier(&cmd);
   20B2 21r18s41           6440 	ld	hl,#_cmd
   20B5 E5                 6441 	push	hl
   20B6 CDr00s00           6442 	call	_vdp_copier
   20B9 F1                 6443 	pop	af
   20BA DD E1              6444 	pop	ix
   20BC C9                 6445 	ret
   20BD                    6446 _drawtritile_end::
                           6447 ;demo.c:1001: void drawtilescreen(char* tripic) {
                           6448 ;	---------------------------------
                           6449 ; Function drawtilescreen
                           6450 ; ---------------------------------
   20BD                    6451 _drawtilescreen_start::
   20BD                    6452 _drawtilescreen:
   20BD DD E5              6453 	push	ix
   20BF DD 21 00 00        6454 	ld	ix,#0
   20C3 DD 39              6455 	add	ix,sp
   20C5 F5                 6456 	push	af
   20C6 3B                 6457 	dec	sp
                           6458 ;demo.c:1003: if(tilei >= 192) return;
   20C7 3ArB4s41           6459 	ld	a,(#_tilei+0)
   20CA D6 C0              6460 	sub	a,#0xC0
   20CC 3ArB5s41           6461 	ld	a,(#_tilei+1)
   20CF DE 00              6462 	sbc	a,#0x00
   20D1 FArD7s20           6463 	jp	M,00102$
   20D4 C3rA2s21           6464 	jp	00112$
   20D7                    6465 00102$:
                           6466 ;demo.c:1005: tiletick++;
   20D7 FD 21rBAs41        6467 	ld	iy,#_tiletick
   20DB FD 34 00           6468 	inc	0 (iy)
                           6469 ;demo.c:1006: if (tiletick > 6) { tiletick = 0;}
   20DE 3E 06              6470 	ld	a,#0x06
   20E0 FD 21rBAs41        6471 	ld	iy,#_tiletick
   20E4 FD 96 00           6472 	sub	a,0 (iy)
   20E7 30 0A              6473 	jr	NC,00104$
   20E9 FD 21rBAs41        6474 	ld	iy,#_tiletick
   20ED FD 36 00 00        6475 	ld	0 (iy),#0x00
   20F1 18 03              6476 	jr	00118$
   20F3                    6477 00104$:
                           6478 ;demo.c:1007: else return;
   20F3 C3rA2s21           6479 	jp	00112$
                           6480 ;demo.c:1008: for (i=0;i<20;i++) {
   20F6                    6481 00118$:
   20F6 DD 36 FF 00        6482 	ld	-1 (ix),#0x00
   20FA                    6483 00108$:
   20FA DD 7E FF           6484 	ld	a,-1 (ix)
   20FD D6 14              6485 	sub	a,#0x14
   20FF D2rA2s21           6486 	jp	NC,00112$
                           6487 ;demo.c:1009: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   2102 3ArB8s41           6488 	ld	a,(#_tiley+0)
   2105 DD 77 FD           6489 	ld	-3 (ix),a
   2108 3ArB6s41           6490 	ld	a,(#_tilex+0)
   210B DD 77 FE           6491 	ld	-2 (ix),a
   210E 21rB4s41           6492 	ld	hl,#_tilei
   2111 DD 7E 04           6493 	ld	a,4 (ix)
   2114 86                 6494 	add	a,(hl)
   2115 57                 6495 	ld	d,a
   2116 DD 7E 05           6496 	ld	a,5 (ix)
   2119 23                 6497 	inc	hl
   211A 8E                 6498 	adc	a,(hl)
   211B 6A                 6499 	ld	l,d
   211C 67                 6500 	ld	h,a
   211D 56                 6501 	ld	d,(hl)
   211E 7A                 6502 	ld	a,d
   211F 87                 6503 	add	a,a
   2120 C6r34              6504 	add	a,#<_tri_lookup_y
   2122 6F                 6505 	ld	l,a
   2123 3Es01              6506 	ld	a,#>_tri_lookup_y
   2125 CE 00              6507 	adc	a,#0x00
   2127 67                 6508 	ld	h,a
   2128 4E                 6509 	ld	c,(hl)
   2129 23                 6510 	inc	hl
   212A 5E                 6511 	ld	e,(hl)
   212B 3Er00              6512 	ld	a,#<_tri_lookup_x
   212D 82                 6513 	add	a,d
   212E 6F                 6514 	ld	l,a
   212F 3Es01              6515 	ld	a,#>_tri_lookup_x
   2131 CE 00              6516 	adc	a,#0x00
   2133 67                 6517 	ld	h,a
   2134 56                 6518 	ld	d,(hl)
   2135 DD 66 FD           6519 	ld	h,-3 (ix)
   2138 DD 6E FE           6520 	ld	l,-2 (ix)
   213B E5                 6521 	push	hl
   213C 69                 6522 	ld	l,c
   213D 63                 6523 	ld	h,e
   213E E5                 6524 	push	hl
   213F D5                 6525 	push	de
   2140 33                 6526 	inc	sp
   2141 CDr59s20           6527 	call	_drawtritile
   2144 F1                 6528 	pop	af
   2145 F1                 6529 	pop	af
   2146 33                 6530 	inc	sp
                           6531 ;demo.c:1010: tilex+=16;
   2147 21rB6s41           6532 	ld	hl,#_tilex
   214A 7E                 6533 	ld	a,(hl)
   214B C6 10              6534 	add	a,#0x10
   214D 23                 6535 	inc	hl
   214E 2B                 6536 	dec	hl
   214F C5                 6537 	push	bc
   2150 4F                 6538 	ld	c, a
   2151 23                 6539 	inc	hl
   2152 7E                 6540 	ld	a, (hl)
   2153 47                 6541 	ld	b, a
   2154 79                 6542 	ld	a, c
   2155 2B                 6543 	dec	hl
   2156 77                 6544 	ld	(hl), a
   2157 78                 6545 	ld	a, b
   2158 C1                 6546 	pop	bc
   2159 CE 00              6547 	adc	a,#0x00
   215B 23                 6548 	inc	hl
   215C 77                 6549 	ld	(hl),a
                           6550 ;demo.c:1011: tilei++;
   215D FD 21rB4s41        6551 	ld	iy,#_tilei
   2161 FD 34 00           6552 	inc	0 (iy)
   2164 20 07              6553 	jr	NZ,00119$
   2166 FD 21rB4s41        6554 	ld	iy,#_tilei
   216A FD 34 01           6555 	inc	1 (iy)
   216D                    6556 00119$:
                           6557 ;demo.c:1012: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   216D 3ArB6s41           6558 	ld	a,(#_tilex+0)
   2170 D6 00              6559 	sub	a,#0x00
   2172 3ArB7s41           6560 	ld	a,(#_tilex+1)
   2175 DE 01              6561 	sbc	a,#0x01
   2177 FAr9Cs21           6562 	jp	M,00110$
   217A 21rB6s41           6563 	ld	hl,#_tilex + 0
   217D 36 00              6564 	ld	(hl), #0x00
   217F 21rB7s41           6565 	ld	hl,#_tilex + 1
   2182 36 00              6566 	ld	(hl), #0x00
   2184 21rB8s41           6567 	ld	hl,#_tiley
   2187 7E                 6568 	ld	a,(hl)
   2188 C6 10              6569 	add	a,#0x10
   218A 23                 6570 	inc	hl
   218B 2B                 6571 	dec	hl
   218C C5                 6572 	push	bc
   218D 4F                 6573 	ld	c, a
   218E 23                 6574 	inc	hl
   218F 7E                 6575 	ld	a, (hl)
   2190 47                 6576 	ld	b, a
   2191 79                 6577 	ld	a, c
   2192 2B                 6578 	dec	hl
   2193 77                 6579 	ld	(hl), a
   2194 78                 6580 	ld	a, b
   2195 C1                 6581 	pop	bc
   2196 CE 00              6582 	adc	a,#0x00
   2198 23                 6583 	inc	hl
   2199 77                 6584 	ld	(hl),a
   219A 18 06              6585 	jr	00112$
   219C                    6586 00110$:
                           6587 ;demo.c:1008: for (i=0;i<20;i++) {
   219C DD 34 FF           6588 	inc	-1 (ix)
   219F C3rFAs20           6589 	jp	00108$
   21A2                    6590 00112$:
   21A2 DD F9              6591 	ld	sp,ix
   21A4 DD E1              6592 	pop	ix
   21A6 C9                 6593 	ret
   21A7                    6594 _drawtilescreen_end::
                           6595 ;demo.c:1017: void drawtilescreen_full(char* tripic) {
                           6596 ;	---------------------------------
                           6597 ; Function drawtilescreen_full
                           6598 ; ---------------------------------
   21A7                    6599 _drawtilescreen_full_start::
   21A7                    6600 _drawtilescreen_full:
   21A7 DD E5              6601 	push	ix
   21A9 DD 21 00 00        6602 	ld	ix,#0
   21AD DD 39              6603 	add	ix,sp
   21AF 21 F8 FF           6604 	ld	hl,#-8
   21B2 39                 6605 	add	hl,sp
   21B3 F9                 6606 	ld	sp,hl
                           6607 ;demo.c:1018: int x = 0;
   21B4 DD 36 FE 00        6608 	ld	-2 (ix),#0x00
   21B8 DD 36 FF 00        6609 	ld	-1 (ix),#0x00
                           6610 ;demo.c:1021: while(i < 192) {
   21BC DD 36 FC 00        6611 	ld	-4 (ix),#0x00
   21C0 DD 36 FD 00        6612 	ld	-3 (ix),#0x00
   21C4 DD 36 FA 00        6613 	ld	-6 (ix),#0x00
   21C8 DD 36 FB 00        6614 	ld	-5 (ix),#0x00
   21CC                    6615 00103$:
   21CC DD 7E FA           6616 	ld	a,-6 (ix)
   21CF D6 C0              6617 	sub	a,#0xC0
   21D1 DD 7E FB           6618 	ld	a,-5 (ix)
   21D4 DE 00              6619 	sbc	a,#0x00
   21D6 F2r5Ds22           6620 	jp	P,00106$
                           6621 ;demo.c:1022: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   21D9 DD 7E FC           6622 	ld	a,-4 (ix)
   21DC DD 77 F8           6623 	ld	-8 (ix),a
   21DF DD 7E FE           6624 	ld	a,-2 (ix)
   21E2 DD 77 F9           6625 	ld	-7 (ix),a
   21E5 DD 7E 04           6626 	ld	a,4 (ix)
   21E8 DD 86 FA           6627 	add	a,-6 (ix)
   21EB 4F                 6628 	ld	c,a
   21EC DD 7E 05           6629 	ld	a,5 (ix)
   21EF DD 8E FB           6630 	adc	a,-5 (ix)
   21F2 47                 6631 	ld	b,a
   21F3 0A                 6632 	ld	a,(bc)
   21F4 4F                 6633 	ld	c,a
   21F5 87                 6634 	add	a,a
   21F6 C6r34              6635 	add	a,#<_tri_lookup_y
   21F8 6F                 6636 	ld	l,a
   21F9 3Es01              6637 	ld	a,#>_tri_lookup_y
   21FB CE 00              6638 	adc	a,#0x00
   21FD 67                 6639 	ld	h,a
   21FE 46                 6640 	ld	b,(hl)
   21FF 23                 6641 	inc	hl
   2200 56                 6642 	ld	d,(hl)
   2201 3Er00              6643 	ld	a,#<_tri_lookup_x
   2203 81                 6644 	add	a,c
   2204 6F                 6645 	ld	l,a
   2205 3Es01              6646 	ld	a,#>_tri_lookup_x
   2207 CE 00              6647 	adc	a,#0x00
   2209 67                 6648 	ld	h,a
   220A 4E                 6649 	ld	c,(hl)
   220B DD 66 F8           6650 	ld	h,-8 (ix)
   220E DD 6E F9           6651 	ld	l,-7 (ix)
   2211 E5                 6652 	push	hl
   2212 58                 6653 	ld	e,b
   2213 D5                 6654 	push	de
   2214 79                 6655 	ld	a,c
   2215 F5                 6656 	push	af
   2216 33                 6657 	inc	sp
   2217 CDr59s20           6658 	call	_drawtritile
   221A F1                 6659 	pop	af
   221B F1                 6660 	pop	af
   221C 33                 6661 	inc	sp
                           6662 ;demo.c:1023: x+=16;
   221D DD 7E FE           6663 	ld	a,-2 (ix)
   2220 C6 10              6664 	add	a,#0x10
   2222 DD 77 FE           6665 	ld	-2 (ix),a
   2225 DD 7E FF           6666 	ld	a,-1 (ix)
   2228 CE 00              6667 	adc	a,#0x00
   222A DD 77 FF           6668 	ld	-1 (ix),a
                           6669 ;demo.c:1024: if (x >= 256) {x = 0; y+=16;}
   222D DD 7E FE           6670 	ld	a,-2 (ix)
   2230 D6 00              6671 	sub	a,#0x00
   2232 DD 7E FF           6672 	ld	a,-1 (ix)
   2235 DE 01              6673 	sbc	a,#0x01
   2237 FAr52s22           6674 	jp	M,00102$
   223A DD 36 FE 00        6675 	ld	-2 (ix),#0x00
   223E DD 36 FF 00        6676 	ld	-1 (ix),#0x00
   2242 DD 7E FC           6677 	ld	a,-4 (ix)
   2245 C6 10              6678 	add	a,#0x10
   2247 DD 77 FC           6679 	ld	-4 (ix),a
   224A DD 7E FD           6680 	ld	a,-3 (ix)
   224D CE 00              6681 	adc	a,#0x00
   224F DD 77 FD           6682 	ld	-3 (ix),a
   2252                    6683 00102$:
                           6684 ;demo.c:1025: i++;
   2252 DD 34 FA           6685 	inc	-6 (ix)
   2255 20 03              6686 	jr	NZ,00112$
   2257 DD 34 FB           6687 	inc	-5 (ix)
   225A                    6688 00112$:
   225A C3rCCs21           6689 	jp	00103$
   225D                    6690 00106$:
   225D DD F9              6691 	ld	sp,ix
   225F DD E1              6692 	pop	ix
   2261 C9                 6693 	ret
   2262                    6694 _drawtilescreen_full_end::
                           6695 ;demo.c:1041: void tritiles() {
                           6696 ;	---------------------------------
                           6697 ; Function tritiles
                           6698 ; ---------------------------------
   2262                    6699 _tritiles_start::
   2262                    6700 _tritiles:
   2262 DD E5              6701 	push	ix
   2264 DD 21 00 00        6702 	ld	ix,#0
   2268 DD 39              6703 	add	ix,sp
   226A 21 FB FF           6704 	ld	hl,#-5
   226D 39                 6705 	add	hl,sp
   226E F9                 6706 	ld	sp,hl
                           6707 ;demo.c:1048: if (tri_inited == 0) {
   226F AF                 6708 	xor	a,a
   2270 21rB3s41           6709 	ld	hl,#_tri_inited + 0
   2273 B6                 6710 	or	a,(hl)
   2274 C2r3Bs23           6711 	jp	NZ,00102$
                           6712 ;demo.c:1049: tri_inited = 1;
   2277 FD 21rB3s41        6713 	ld	iy,#_tri_inited
   227B FD 36 00 01        6714 	ld	0 (iy),#0x01
                           6715 ;demo.c:1051: cmd.size_x = 256;
   227F 21r20s41           6716 	ld	hl, #_cmd + 8
   2282 36 00              6717 	ld	(hl),#0x00
   2284 23                 6718 	inc	hl
   2285 36 01              6719 	ld	(hl),#0x01
                           6720 ;demo.c:1052: cmd.size_y = 1;
   2287 21r22s41           6721 	ld	hl, #_cmd + 10
   228A 36 01              6722 	ld	(hl),#0x01
   228C 23                 6723 	inc	hl
   228D 36 00              6724 	ld	(hl),#0x00
                           6725 ;demo.c:1053: cmd.data = 0;
                           6726 ;demo.c:1054: cmd.argument = 0x00; // from 70xY to left
   228F 3E 00              6727 	ld	a,#0x00
   2291 32r24s41           6728 	ld	(#_cmd + 12),a
   2294 32r25s41           6729 	ld	(#_cmd + 13),a
                           6730 ;demo.c:1055: cmd.command = 0xd0; // vram to vram, y only
   2297 01r26s41           6731 	ld	bc,#_cmd + 14
   229A 3E D0              6732 	ld	a,#0xD0
   229C 02                 6733 	ld	(bc),a
                           6734 ;demo.c:1056: cmd.source_x = 0;
   229D 21r18s41           6735 	ld	hl,#_cmd
   22A0 36 00              6736 	ld	(hl),#0x00
   22A2 23                 6737 	inc	hl
   22A3 36 00              6738 	ld	(hl),#0x00
                           6739 ;demo.c:1057: cmd.source_y = 212;
   22A5 21r1As41           6740 	ld	hl, #_cmd + 2
   22A8 36 D4              6741 	ld	(hl),#0xD4
   22AA 23                 6742 	inc	hl
   22AB 36 00              6743 	ld	(hl),#0x00
                           6744 ;demo.c:1058: cmd.dest_y = 0;
   22AD 01r1Es41           6745 	ld	bc,#_cmd + 6
   22B0 69                 6746 	ld	l,c
   22B1 60                 6747 	ld	h,b
   22B2 36 00              6748 	ld	(hl),#0x00
   22B4 23                 6749 	inc	hl
   22B5 36 00              6750 	ld	(hl),#0x00
                           6751 ;demo.c:1060: for (x = 0; x < 212; x++) {
   22B7 DD 36 FE 00        6752 	ld	-2 (ix),#0x00
   22BB DD 36 FF 00        6753 	ld	-1 (ix),#0x00
   22BF                    6754 00134$:
   22BF DD 7E FE           6755 	ld	a,-2 (ix)
   22C2 D6 D4              6756 	sub	a,#0xD4
   22C4 DD 7E FF           6757 	ld	a,-1 (ix)
   22C7 DE 00              6758 	sbc	a,#0x00
   22C9 F2r0Fs23           6759 	jp	P,00137$
                           6760 ;demo.c:1061: waitVB();
   22CC 76                 6761 		halt 
                           6762 ;demo.c:1062: cmd.dest_x = 0;
   22CD 11r1Cs41           6763 	ld	de,#_cmd + 4
   22D0 EB                 6764 	ex	de,hl
   22D1 36 00              6765 	ld	(hl),#0x00
   22D3 23                 6766 	inc	hl
   22D4 36 00              6767 	ld	(hl),#0x00
                           6768 ;demo.c:1063: cmd.dest_y = 256+x;
   22D6 11r1Es41           6769 	ld	de,#_cmd + 6
   22D9 DD 7E FE           6770 	ld	a,-2 (ix)
   22DC C6 00              6771 	add	a,#0x00
   22DE 4F                 6772 	ld	c,a
   22DF DD 7E FF           6773 	ld	a,-1 (ix)
   22E2 CE 01              6774 	adc	a,#0x01
   22E4 47                 6775 	ld	b,a
   22E5 EB                 6776 	ex	de,hl
   22E6 71                 6777 	ld	(hl),c
   22E7 23                 6778 	inc	hl
   22E8 70                 6779 	ld	(hl),b
                           6780 ;demo.c:1064: vdp_copier(&cmd);
   22E9 21r18s41           6781 	ld	hl,#_cmd
   22EC E5                 6782 	push	hl
   22ED CDr00s00           6783 	call	_vdp_copier
   22F0 F1                 6784 	pop	af
                           6785 ;demo.c:1065: cmd.dest_y = 0+x;
   22F1 21r1Es41           6786 	ld	hl, #_cmd + 6
   22F4 DD 7E FE           6787 	ld	a,-2 (ix)
   22F7 77                 6788 	ld	(hl),a
   22F8 23                 6789 	inc	hl
   22F9 DD 7E FF           6790 	ld	a,-1 (ix)
   22FC 77                 6791 	ld	(hl),a
                           6792 ;demo.c:1066: vdp_copier(&cmd);
   22FD 21r18s41           6793 	ld	hl,#_cmd
   2300 E5                 6794 	push	hl
   2301 CDr00s00           6795 	call	_vdp_copier
   2304 F1                 6796 	pop	af
                           6797 ;demo.c:1060: for (x = 0; x < 212; x++) {
   2305 DD 34 FE           6798 	inc	-2 (ix)
   2308 20 03              6799 	jr	NZ,00169$
   230A DD 34 FF           6800 	inc	-1 (ix)
   230D                    6801 00169$:
   230D 18 B0              6802 	jr	00134$
   230F                    6803 00137$:
                           6804 ;demo.c:1069: vdp_register(9,2); // 50hz,192
   230F 21 09 02           6805 	ld	hl,#0x0209
   2312 E5                 6806 	push	hl
   2313 CDr00s00           6807 	call	_vdp_register
   2316 F1                 6808 	pop	af
                           6809 ;demo.c:1071: vdp_load_palette(boxes_palette);
   2317 21rF4s40           6810 	ld	hl,#_boxes_palette
   231A E5                 6811 	push	hl
   231B CDr00s00           6812 	call	_vdp_load_palette
   231E F1                 6813 	pop	af
                           6814 ;demo.c:1073: msx2_palette(15,0,0,0);
   231F 21 00 00           6815 	ld	hl,#0x0000
   2322 E5                 6816 	push	hl
   2323 2E 0F              6817 	ld	l, #0x0F
   2325 E5                 6818 	push	hl
   2326 CDr00s00           6819 	call	_msx2_palette
   2329 F1                 6820 	pop	af
   232A F1                 6821 	pop	af
                           6822 ;demo.c:1075: drawtilescreen_full(tri_center);
   232B 21r2Cs02           6823 	ld	hl,#_tri_center
   232E E5                 6824 	push	hl
   232F CDrA7s21           6825 	call	_drawtilescreen_full
   2332 F1                 6826 	pop	af
                           6827 ;demo.c:1076: vdp_register(2, 0x1f);
   2333 21 02 1F           6828 	ld	hl,#0x1F02
   2336 E5                 6829 	push	hl
   2337 CDr00s00           6830 	call	_vdp_register
   233A F1                 6831 	pop	af
   233B                    6832 00102$:
                           6833 ;demo.c:1081: triframes++;
   233B FD 21rC6s41        6834 	ld	iy,#_triframes
   233F FD 34 00           6835 	inc	0 (iy)
   2342 20 07              6836 	jr	NZ,00170$
   2344 FD 21rC6s41        6837 	ld	iy,#_triframes
   2348 FD 34 01           6838 	inc	1 (iy)
   234B                    6839 00170$:
                           6840 ;demo.c:1083: if (triframes == 200) { tilei = 0; tilex = 0; tiley = 0; }
   234B 3ArC6s41           6841 	ld	a,(#_triframes+0)
   234E D6 C8              6842 	sub	a,#0xC8
   2350 20 06              6843 	jr	NZ,00171$
   2352 3ArC7s41           6844 	ld	a,(#_triframes+1)
   2355 B7                 6845 	or	a,a
   2356 28 02              6846 	jr	Z,00172$
   2358                    6847 00171$:
   2358 18 1E              6848 	jr	00104$
   235A                    6849 00172$:
   235A 21rB4s41           6850 	ld	hl,#_tilei + 0
   235D 36 00              6851 	ld	(hl), #0x00
   235F 21rB5s41           6852 	ld	hl,#_tilei + 1
   2362 36 00              6853 	ld	(hl), #0x00
   2364 21rB6s41           6854 	ld	hl,#_tilex + 0
   2367 36 00              6855 	ld	(hl), #0x00
   2369 21rB7s41           6856 	ld	hl,#_tilex + 1
   236C 36 00              6857 	ld	(hl), #0x00
   236E 21rB8s41           6858 	ld	hl,#_tiley + 0
   2371 36 00              6859 	ld	(hl), #0x00
   2373 21rB9s41           6860 	ld	hl,#_tiley + 1
   2376 36 00              6861 	ld	(hl), #0x00
   2378                    6862 00104$:
                           6863 ;demo.c:1084: if (triframes >= 200 && triframes < 400) {
   2378 3ArC6s41           6864 	ld	a,(#_triframes+0)
   237B D6 C8              6865 	sub	a,#0xC8
   237D 3ArC7s41           6866 	ld	a,(#_triframes+1)
   2380 DE 00              6867 	sbc	a,#0x00
   2382 FAr9As23           6868 	jp	M,00106$
   2385 3ArC6s41           6869 	ld	a,(#_triframes+0)
   2388 D6 90              6870 	sub	a,#0x90
   238A 3ArC7s41           6871 	ld	a,(#_triframes+1)
   238D DE 01              6872 	sbc	a,#0x01
   238F F2r9As23           6873 	jp	P,00106$
                           6874 ;demo.c:1085: drawtilescreen(tri_up);
   2392 21rECs02           6875 	ld	hl,#_tri_up
   2395 E5                 6876 	push	hl
   2396 CDrBDs20           6877 	call	_drawtilescreen
   2399 F1                 6878 	pop	af
   239A                    6879 00106$:
                           6880 ;demo.c:1088: if (triframes == 400) { tilei = 0; tilex = 0; tiley = 0; }
   239A 3ArC6s41           6881 	ld	a,(#_triframes+0)
   239D D6 90              6882 	sub	a,#0x90
   239F 20 07              6883 	jr	NZ,00173$
   23A1 3ArC7s41           6884 	ld	a,(#_triframes+1)
   23A4 D6 01              6885 	sub	a,#0x01
   23A6 28 02              6886 	jr	Z,00174$
   23A8                    6887 00173$:
   23A8 18 1E              6888 	jr	00109$
   23AA                    6889 00174$:
   23AA 21rB4s41           6890 	ld	hl,#_tilei + 0
   23AD 36 00              6891 	ld	(hl), #0x00
   23AF 21rB5s41           6892 	ld	hl,#_tilei + 1
   23B2 36 00              6893 	ld	(hl), #0x00
   23B4 21rB6s41           6894 	ld	hl,#_tilex + 0
   23B7 36 00              6895 	ld	(hl), #0x00
   23B9 21rB7s41           6896 	ld	hl,#_tilex + 1
   23BC 36 00              6897 	ld	(hl), #0x00
   23BE 21rB8s41           6898 	ld	hl,#_tiley + 0
   23C1 36 00              6899 	ld	(hl), #0x00
   23C3 21rB9s41           6900 	ld	hl,#_tiley + 1
   23C6 36 00              6901 	ld	(hl), #0x00
   23C8                    6902 00109$:
                           6903 ;demo.c:1089: if (triframes >= 400 && triframes < 600) {
   23C8 3ArC6s41           6904 	ld	a,(#_triframes+0)
   23CB D6 90              6905 	sub	a,#0x90
   23CD 3ArC7s41           6906 	ld	a,(#_triframes+1)
   23D0 DE 01              6907 	sbc	a,#0x01
   23D2 FArEAs23           6908 	jp	M,00111$
   23D5 3ArC6s41           6909 	ld	a,(#_triframes+0)
   23D8 D6 58              6910 	sub	a,#0x58
   23DA 3ArC7s41           6911 	ld	a,(#_triframes+1)
   23DD DE 02              6912 	sbc	a,#0x02
   23DF F2rEAs23           6913 	jp	P,00111$
                           6914 ;demo.c:1090: drawtilescreen(tri_dia);
   23E2 21rACs03           6915 	ld	hl,#_tri_dia
   23E5 E5                 6916 	push	hl
   23E6 CDrBDs20           6917 	call	_drawtilescreen
   23E9 F1                 6918 	pop	af
   23EA                    6919 00111$:
                           6920 ;demo.c:1093: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   23EA 3ArC6s41           6921 	ld	a,(#_triframes+0)
   23ED D6 58              6922 	sub	a,#0x58
   23EF 20 07              6923 	jr	NZ,00175$
   23F1 3ArC7s41           6924 	ld	a,(#_triframes+1)
   23F4 D6 02              6925 	sub	a,#0x02
   23F6 28 02              6926 	jr	Z,00176$
   23F8                    6927 00175$:
   23F8 18 1E              6928 	jr	00114$
   23FA                    6929 00176$:
   23FA 21rB4s41           6930 	ld	hl,#_tilei + 0
   23FD 36 00              6931 	ld	(hl), #0x00
   23FF 21rB5s41           6932 	ld	hl,#_tilei + 1
   2402 36 00              6933 	ld	(hl), #0x00
   2404 21rB6s41           6934 	ld	hl,#_tilex + 0
   2407 36 00              6935 	ld	(hl), #0x00
   2409 21rB7s41           6936 	ld	hl,#_tilex + 1
   240C 36 00              6937 	ld	(hl), #0x00
   240E 21rB8s41           6938 	ld	hl,#_tiley + 0
   2411 36 00              6939 	ld	(hl), #0x00
   2413 21rB9s41           6940 	ld	hl,#_tiley + 1
   2416 36 00              6941 	ld	(hl), #0x00
   2418                    6942 00114$:
                           6943 ;demo.c:1094: if (triframes >= 600 && triframes < 700) {
   2418 3ArC6s41           6944 	ld	a,(#_triframes+0)
   241B D6 58              6945 	sub	a,#0x58
   241D 3ArC7s41           6946 	ld	a,(#_triframes+1)
   2420 DE 02              6947 	sbc	a,#0x02
   2422 FAr3As24           6948 	jp	M,00116$
   2425 3ArC6s41           6949 	ld	a,(#_triframes+0)
   2428 D6 BC              6950 	sub	a,#0xBC
   242A 3ArC7s41           6951 	ld	a,(#_triframes+1)
   242D DE 02              6952 	sbc	a,#0x02
   242F F2r3As24           6953 	jp	P,00116$
                           6954 ;demo.c:1095: drawtilescreen(tri_side1);
   2432 21r6Cs04           6955 	ld	hl,#_tri_side1
   2435 E5                 6956 	push	hl
   2436 CDrBDs20           6957 	call	_drawtilescreen
   2439 F1                 6958 	pop	af
   243A                    6959 00116$:
                           6960 ;demo.c:1098: if (triframes == 800) { tilei = 0; tilex = 0; tiley = 0; }
   243A 3ArC6s41           6961 	ld	a,(#_triframes+0)
   243D D6 20              6962 	sub	a,#0x20
   243F 20 07              6963 	jr	NZ,00177$
   2441 3ArC7s41           6964 	ld	a,(#_triframes+1)
   2444 D6 03              6965 	sub	a,#0x03
   2446 28 02              6966 	jr	Z,00178$
   2448                    6967 00177$:
   2448 18 1E              6968 	jr	00119$
   244A                    6969 00178$:
   244A 21rB4s41           6970 	ld	hl,#_tilei + 0
   244D 36 00              6971 	ld	(hl), #0x00
   244F 21rB5s41           6972 	ld	hl,#_tilei + 1
   2452 36 00              6973 	ld	(hl), #0x00
   2454 21rB6s41           6974 	ld	hl,#_tilex + 0
   2457 36 00              6975 	ld	(hl), #0x00
   2459 21rB7s41           6976 	ld	hl,#_tilex + 1
   245C 36 00              6977 	ld	(hl), #0x00
   245E 21rB8s41           6978 	ld	hl,#_tiley + 0
   2461 36 00              6979 	ld	(hl), #0x00
   2463 21rB9s41           6980 	ld	hl,#_tiley + 1
   2466 36 00              6981 	ld	(hl), #0x00
   2468                    6982 00119$:
                           6983 ;demo.c:1099: if (triframes >= 800 && triframes < 1000) {
   2468 3ArC6s41           6984 	ld	a,(#_triframes+0)
   246B D6 20              6985 	sub	a,#0x20
   246D 3ArC7s41           6986 	ld	a,(#_triframes+1)
   2470 DE 03              6987 	sbc	a,#0x03
   2472 FAr8As24           6988 	jp	M,00121$
   2475 3ArC6s41           6989 	ld	a,(#_triframes+0)
   2478 D6 E8              6990 	sub	a,#0xE8
   247A 3ArC7s41           6991 	ld	a,(#_triframes+1)
   247D DE 03              6992 	sbc	a,#0x03
   247F F2r8As24           6993 	jp	P,00121$
                           6994 ;demo.c:1100: drawtilescreen(tri_side2);
   2482 21r2Cs05           6995 	ld	hl,#_tri_side2
   2485 E5                 6996 	push	hl
   2486 CDrBDs20           6997 	call	_drawtilescreen
   2489 F1                 6998 	pop	af
   248A                    6999 00121$:
                           7000 ;demo.c:1103: if (triframes == 1000) { tilei = 0; tilex = 0; tiley = 0; }
   248A 3ArC6s41           7001 	ld	a,(#_triframes+0)
   248D D6 E8              7002 	sub	a,#0xE8
   248F 20 07              7003 	jr	NZ,00179$
   2491 3ArC7s41           7004 	ld	a,(#_triframes+1)
   2494 D6 03              7005 	sub	a,#0x03
   2496 28 02              7006 	jr	Z,00180$
   2498                    7007 00179$:
   2498 18 1E              7008 	jr	00124$
   249A                    7009 00180$:
   249A 21rB4s41           7010 	ld	hl,#_tilei + 0
   249D 36 00              7011 	ld	(hl), #0x00
   249F 21rB5s41           7012 	ld	hl,#_tilei + 1
   24A2 36 00              7013 	ld	(hl), #0x00
   24A4 21rB6s41           7014 	ld	hl,#_tilex + 0
   24A7 36 00              7015 	ld	(hl), #0x00
   24A9 21rB7s41           7016 	ld	hl,#_tilex + 1
   24AC 36 00              7017 	ld	(hl), #0x00
   24AE 21rB8s41           7018 	ld	hl,#_tiley + 0
   24B1 36 00              7019 	ld	(hl), #0x00
   24B3 21rB9s41           7020 	ld	hl,#_tiley + 1
   24B6 36 00              7021 	ld	(hl), #0x00
   24B8                    7022 00124$:
                           7023 ;demo.c:1104: if (triframes >= 1000 && triframes < 1200) {
   24B8 3ArC6s41           7024 	ld	a,(#_triframes+0)
   24BB D6 E8              7025 	sub	a,#0xE8
   24BD 3ArC7s41           7026 	ld	a,(#_triframes+1)
   24C0 DE 03              7027 	sbc	a,#0x03
   24C2 FArDAs24           7028 	jp	M,00126$
   24C5 3ArC6s41           7029 	ld	a,(#_triframes+0)
   24C8 D6 B0              7030 	sub	a,#0xB0
   24CA 3ArC7s41           7031 	ld	a,(#_triframes+1)
   24CD DE 04              7032 	sbc	a,#0x04
   24CF F2rDAs24           7033 	jp	P,00126$
                           7034 ;demo.c:1105: drawtilescreen(tri_center);
   24D2 21r2Cs02           7035 	ld	hl,#_tri_center
   24D5 E5                 7036 	push	hl
   24D6 CDrBDs20           7037 	call	_drawtilescreen
   24D9 F1                 7038 	pop	af
   24DA                    7039 00126$:
                           7040 ;demo.c:1108: if (triframes > 1200) triframes = 199;
   24DA 3E B0              7041 	ld	a,#0xB0
   24DC FD 21rC6s41        7042 	ld	iy,#_triframes
   24E0 FD 96 00           7043 	sub	a,0 (iy)
   24E3 3E 04              7044 	ld	a,#0x04
   24E5 FD 21rC6s41        7045 	ld	iy,#_triframes
   24E9 FD 9E 01           7046 	sbc	a,1 (iy)
   24EC F2rF9s24           7047 	jp	P,00129$
   24EF 21rC6s41           7048 	ld	hl,#_triframes + 0
   24F2 36 C7              7049 	ld	(hl), #0xC7
   24F4 21rC7s41           7050 	ld	hl,#_triframes + 1
   24F7 36 00              7051 	ld	(hl), #0x00
   24F9                    7052 00129$:
                           7053 ;demo.c:1111: msx2_palette(2,0,0,0);
   24F9 21 00 00           7054 	ld	hl,#0x0000
   24FC E5                 7055 	push	hl
   24FD 2E 02              7056 	ld	l, #0x02
   24FF E5                 7057 	push	hl
   2500 CDr00s00           7058 	call	_msx2_palette
   2503 F1                 7059 	pop	af
   2504 F1                 7060 	pop	af
                           7061 ;demo.c:1112: msx2_palette(11,0,0,0);
   2505 21 00 00           7062 	ld	hl,#0x0000
   2508 E5                 7063 	push	hl
   2509 2E 0B              7064 	ld	l, #0x0B
   250B E5                 7065 	push	hl
   250C CDr00s00           7066 	call	_msx2_palette
   250F F1                 7067 	pop	af
   2510 F1                 7068 	pop	af
                           7069 ;demo.c:1115: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2511 21rBDs41           7070 	ld	hl,#_tripal + 2
   2514 4E                 7071 	ld	c,(hl)
   2515 11rBCs41           7072 	ld	de,#_tripal + 1
   2518 1A                 7073 	ld	a,(de)
   2519 47                 7074 	ld	b,a
   251A 21rBBs41           7075 	ld	hl,#_tripal
   251D 5E                 7076 	ld	e,(hl)
   251E 79                 7077 	ld	a,c
   251F F5                 7078 	push	af
   2520 33                 7079 	inc	sp
   2521 C5                 7080 	push	bc
   2522 33                 7081 	inc	sp
   2523 53                 7082 	ld	d,e
   2524 1E 03              7083 	ld	e,#0x03
   2526 D5                 7084 	push	de
   2527 CDr00s00           7085 	call	_msx2_palette
   252A F1                 7086 	pop	af
   252B F1                 7087 	pop	af
                           7088 ;demo.c:1116: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   252C 21rC0s41           7089 	ld	hl,#_tripal + 5
   252F 4E                 7090 	ld	c,(hl)
   2530 11rBFs41           7091 	ld	de,#_tripal + 4
   2533 1A                 7092 	ld	a,(de)
   2534 47                 7093 	ld	b,a
   2535 21rBEs41           7094 	ld	hl,#_tripal + 3
   2538 5E                 7095 	ld	e,(hl)
   2539 79                 7096 	ld	a,c
   253A F5                 7097 	push	af
   253B 33                 7098 	inc	sp
   253C C5                 7099 	push	bc
   253D 33                 7100 	inc	sp
   253E 53                 7101 	ld	d,e
   253F 1E 0E              7102 	ld	e,#0x0E
   2541 D5                 7103 	push	de
   2542 CDr00s00           7104 	call	_msx2_palette
   2545 F1                 7105 	pop	af
   2546 F1                 7106 	pop	af
                           7107 ;demo.c:1117: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2547 21rC3s41           7108 	ld	hl,#_tripal + 8
   254A 4E                 7109 	ld	c,(hl)
   254B 11rC2s41           7110 	ld	de,#_tripal + 7
   254E 1A                 7111 	ld	a,(de)
   254F 47                 7112 	ld	b,a
   2550 21rC1s41           7113 	ld	hl,#_tripal + 6
   2553 5E                 7114 	ld	e,(hl)
   2554 79                 7115 	ld	a,c
   2555 F5                 7116 	push	af
   2556 33                 7117 	inc	sp
   2557 C5                 7118 	push	bc
   2558 33                 7119 	inc	sp
   2559 53                 7120 	ld	d,e
   255A 1E 06              7121 	ld	e,#0x06
   255C D5                 7122 	push	de
   255D CDr00s00           7123 	call	_msx2_palette
   2560 F1                 7124 	pop	af
   2561 F1                 7125 	pop	af
                           7126 ;demo.c:1120: tripaltick++;
   2562 FD 21rC4s41        7127 	ld	iy,#_tripaltick
   2566 FD 34 00           7128 	inc	0 (iy)
                           7129 ;demo.c:1121: if (tripaltick > 6) {
   2569 3E 06              7130 	ld	a,#0x06
   256B FD 21rC4s41        7131 	ld	iy,#_tripaltick
   256F FD 96 00           7132 	sub	a,0 (iy)
   2572 D2rF7s25           7133 	jp	NC,00142$
                           7134 ;demo.c:1122: tripaltick2++;
   2575 FD 21rC5s41        7135 	ld	iy,#_tripaltick2
   2579 FD 34 00           7136 	inc	0 (iy)
                           7137 ;demo.c:1123: if (tripaltick2 > 6) tripaltick2 = 0;
   257C 3E 06              7138 	ld	a,#0x06
   257E FD 21rC5s41        7139 	ld	iy,#_tripaltick2
   2582 FD 96 00           7140 	sub	a,0 (iy)
   2585 30 05              7141 	jr	NC,00131$
   2587 21rC5s41           7142 	ld	hl,#_tripaltick2 + 0
   258A 36 00              7143 	ld	(hl), #0x00
   258C                    7144 00131$:
                           7145 ;demo.c:1125: r = tripal[0];
   258C 21rBBs41           7146 	ld	hl,#_tripal
   258F 4E                 7147 	ld	c,(hl)
   2590 DD 71 FD           7148 	ld	-3 (ix),c
                           7149 ;demo.c:1126: g = tripal[1];
   2593 11rBCs41           7150 	ld	de,#_tripal + 1
   2596 1A                 7151 	ld	a,(de)
   2597 DD 77 FC           7152 	ld	-4 (ix),a
                           7153 ;demo.c:1127: b = tripal[2];
   259A 21rBDs41           7154 	ld	hl,#_tripal + 2
   259D 5E                 7155 	ld	e,(hl)
   259E DD 73 FB           7156 	ld	-5 (ix),e
                           7157 ;demo.c:1129: for (x = 0; x < 6; x++) {
   25A1 DD 36 FE 00        7158 	ld	-2 (ix),#0x00
   25A5 DD 36 FF 00        7159 	ld	-1 (ix),#0x00
   25A9                    7160 00138$:
   25A9 DD 7E FE           7161 	ld	a,-2 (ix)
   25AC D6 06              7162 	sub	a,#0x06
   25AE DD 7E FF           7163 	ld	a,-1 (ix)
   25B1 DE 00              7164 	sbc	a,#0x00
   25B3 F2rDDs25           7165 	jp	P,00141$
                           7166 ;demo.c:1130: tripal[x] = tripal[x+3];
   25B6 3ErBB              7167 	ld	a,#<_tripal
   25B8 DD 86 FE           7168 	add	a,-2 (ix)
   25BB 4F                 7169 	ld	c,a
   25BC 3Es41              7170 	ld	a,#>_tripal
   25BE DD 8E FF           7171 	adc	a,-1 (ix)
   25C1 47                 7172 	ld	b,a
   25C2 DD 5E FE           7173 	ld	e,-2 (ix)
   25C5 1C                 7174 	inc	e
   25C6 1C                 7175 	inc	e
   25C7 1C                 7176 	inc	e
   25C8 3ErBB              7177 	ld	a,#<_tripal
   25CA 83                 7178 	add	a,e
   25CB 5F                 7179 	ld	e,a
   25CC 3Es41              7180 	ld	a,#>_tripal
   25CE CE 00              7181 	adc	a,#0x00
   25D0 57                 7182 	ld	d,a
   25D1 1A                 7183 	ld	a,(de)
   25D2 02                 7184 	ld	(bc),a
                           7185 ;demo.c:1129: for (x = 0; x < 6; x++) {
   25D3 DD 34 FE           7186 	inc	-2 (ix)
   25D6 20 03              7187 	jr	NZ,00181$
   25D8 DD 34 FF           7188 	inc	-1 (ix)
   25DB                    7189 00181$:
   25DB 18 CC              7190 	jr	00138$
   25DD                    7191 00141$:
                           7192 ;demo.c:1133: tripal[6] = r;
   25DD 01rC1s41           7193 	ld	bc,#_tripal + 6
   25E0 DD 7E FD           7194 	ld	a,-3 (ix)
   25E3 02                 7195 	ld	(bc),a
                           7196 ;demo.c:1134: tripal[7] = g;
   25E4 01rC2s41           7197 	ld	bc,#_tripal + 7
   25E7 DD 7E FC           7198 	ld	a,-4 (ix)
   25EA 02                 7199 	ld	(bc),a
                           7200 ;demo.c:1135: tripal[8] = b;
   25EB 01rC3s41           7201 	ld	bc,#_tripal + 8
   25EE DD 7E FB           7202 	ld	a,-5 (ix)
   25F1 02                 7203 	ld	(bc),a
                           7204 ;demo.c:1136: tripaltick = 0;
   25F2 21rC4s41           7205 	ld	hl,#_tripaltick + 0
   25F5 36 00              7206 	ld	(hl), #0x00
   25F7                    7207 00142$:
   25F7 DD F9              7208 	ld	sp,ix
   25F9 DD E1              7209 	pop	ix
   25FB C9                 7210 	ret
   25FC                    7211 _tritiles_end::
                           7212 ;demo.c:1141: int abs (int n) {
                           7213 ;	---------------------------------
                           7214 ; Function abs
                           7215 ; ---------------------------------
   25FC                    7216 _abs_start::
   25FC                    7217 _abs:
   25FC DD E5              7218 	push	ix
   25FE DD 21 00 00        7219 	ld	ix,#0
   2602 DD 39              7220 	add	ix,sp
   2604 21 FA FF           7221 	ld	hl,#-6
   2607 39                 7222 	add	hl,sp
   2608 F9                 7223 	ld	sp,hl
                           7224 ;demo.c:1142: const int ret[2] = { n, -n };
   2609 21 02 00           7225 	ld	hl,#0x0002
   260C 39                 7226 	add	hl,sp
   260D 4D                 7227 	ld	c,l
   260E 44                 7228 	ld	b,h
   260F DD 7E 04           7229 	ld	a,4 (ix)
   2612 77                 7230 	ld	(hl),a
   2613 23                 7231 	inc	hl
   2614 DD 7E 05           7232 	ld	a,5 (ix)
   2617 77                 7233 	ld	(hl),a
   2618 21 02 00           7234 	ld	hl,#0x0002
   261B 09                 7235 	add	hl,bc
   261C DD 75 FA           7236 	ld	-6 (ix),l
   261F DD 74 FB           7237 	ld	-5 (ix),h
   2622 AF                 7238 	xor	a,a
   2623 DD 9E 04           7239 	sbc	a,4 (ix)
   2626 5F                 7240 	ld	e,a
   2627 3E 00              7241 	ld	a,#0x00
   2629 DD 9E 05           7242 	sbc	a,5 (ix)
   262C 57                 7243 	ld	d,a
   262D DD 6E FA           7244 	ld	l,-6 (ix)
   2630 DD 66 FB           7245 	ld	h,-5 (ix)
   2633 73                 7246 	ld	(hl),e
   2634 23                 7247 	inc	hl
   2635 72                 7248 	ld	(hl),d
                           7249 ;demo.c:1143: return ret [n<0];
   2636 DD 7E 05           7250 	ld	a,5 (ix)
   2639 07                 7251 	rlca
   263A E6 01              7252 	and	a,#0x01
   263C 5F                 7253 	ld	e,a
   263D CB 23              7254 	sla	e
   263F 79                 7255 	ld	a,c
   2640 83                 7256 	add	a,e
   2641 6F                 7257 	ld	l,a
   2642 78                 7258 	ld	a,b
   2643 CE 00              7259 	adc	a,#0x00
   2645 67                 7260 	ld	h,a
   2646 5E                 7261 	ld	e,(hl)
   2647 23                 7262 	inc	hl
   2648 4E                 7263 	ld	c,(hl)
   2649 6B                 7264 	ld	l,e
   264A 61                 7265 	ld	h,c
   264B DD F9              7266 	ld	sp,ix
   264D DD E1              7267 	pop	ix
   264F C9                 7268 	ret
   2650                    7269 _abs_end::
                           7270 ;demo.c:1149: void logoeffu() {
                           7271 ;	---------------------------------
                           7272 ; Function logoeffu
                           7273 ; ---------------------------------
   2650                    7274 _logoeffu_start::
   2650                    7275 _logoeffu:
   2650 DD E5              7276 	push	ix
   2652 DD 21 00 00        7277 	ld	ix,#0
   2656 DD 39              7278 	add	ix,sp
   2658 F5                 7279 	push	af
   2659 F5                 7280 	push	af
                           7281 ;demo.c:1153: fadein();
   265A CDr27s0A           7282 	call	_fadein
                           7283 ;demo.c:1155: v = abs(sintabx[(vbicount) & 255]>>4);
   265D 21r14s41           7284 	ld	hl,#_vbicount + 0
   2660 4E                 7285 	ld	c,(hl)
   2661 06 00              7286 	ld	b,#0x00
   2663 CB 21              7287 	sla	c
   2665 CB 10              7288 	rl	b
   2667 21r2Cs00           7289 	ld	hl,#_sintabx
   266A 09                 7290 	add	hl,bc
   266B 4E                 7291 	ld	c,(hl)
   266C 23                 7292 	inc	hl
   266D 46                 7293 	ld	b,(hl)
   266E CB 38              7294 	srl	b
   2670 CB 19              7295 	rr	c
   2672 CB 38              7296 	srl	b
   2674 CB 19              7297 	rr	c
   2676 CB 38              7298 	srl	b
   2678 CB 19              7299 	rr	c
   267A CB 38              7300 	srl	b
   267C CB 19              7301 	rr	c
   267E C5                 7302 	push	bc
   267F CDrFCs25           7303 	call	_abs
   2682 F1                 7304 	pop	af
   2683 44                 7305 	ld	b,h
   2684 4D                 7306 	ld	c,l
   2685 DD 71 FC           7307 	ld	-4 (ix),c
   2688 DD 70 FD           7308 	ld	-3 (ix),b
                           7309 ;demo.c:1157: for (y = 0; y < 116; y+=2) {
   268B DD 36 FE 00        7310 	ld	-2 (ix),#0x00
   268F DD 36 FF 00        7311 	ld	-1 (ix),#0x00
   2693                    7312 00108$:
   2693 DD 7E FE           7313 	ld	a,-2 (ix)
   2696 D6 74              7314 	sub	a,#0x74
   2698 DD 7E FF           7315 	ld	a,-1 (ix)
   269B DE 00              7316 	sbc	a,#0x00
   269D F2r68s27           7317 	jp	P,00111$
                           7318 ;demo.c:1158: cmd.size_x = 108;
   26A0 11r20s41           7319 	ld	de,#_cmd + 8
   26A3 EB                 7320 	ex	de,hl
   26A4 36 6C              7321 	ld	(hl),#0x6C
   26A6 23                 7322 	inc	hl
   26A7 36 00              7323 	ld	(hl),#0x00
                           7324 ;demo.c:1159: cmd.size_y = 2;
   26A9 11r22s41           7325 	ld	de,#_cmd + 10
   26AC EB                 7326 	ex	de,hl
   26AD 36 02              7327 	ld	(hl),#0x02
   26AF 23                 7328 	inc	hl
   26B0 36 00              7329 	ld	(hl),#0x00
                           7330 ;demo.c:1160: cmd.data = 0;
   26B2 11r24s41           7331 	ld	de,#_cmd + 12
   26B5 3E 00              7332 	ld	a,#0x00
   26B7 12                 7333 	ld	(de),a
                           7334 ;demo.c:1161: cmd.argument = 0x00;
   26B8 11r25s41           7335 	ld	de,#_cmd + 13
   26BB 3E 00              7336 	ld	a,#0x00
   26BD 12                 7337 	ld	(de),a
                           7338 ;demo.c:1162: cmd.command = 0xd0; 
   26BE 11r26s41           7339 	ld	de,#_cmd + 14
   26C1 3E D0              7340 	ld	a,#0xD0
   26C3 12                 7341 	ld	(de),a
                           7342 ;demo.c:1163: cmd.source_x = 74;
   26C4 21r18s41           7343 	ld	hl,#_cmd
   26C7 36 4A              7344 	ld	(hl),#0x4A
   26C9 23                 7345 	inc	hl
   26CA 36 00              7346 	ld	(hl),#0x00
                           7347 ;demo.c:1164: cmd.source_y = 256+y;
   26CC 11r1As41           7348 	ld	de,#_cmd + 2
   26CF DD 7E FE           7349 	ld	a,-2 (ix)
   26D2 C6 00              7350 	add	a,#0x00
   26D4 4F                 7351 	ld	c,a
   26D5 DD 7E FF           7352 	ld	a,-1 (ix)
   26D8 CE 01              7353 	adc	a,#0x01
   26DA 47                 7354 	ld	b,a
   26DB 6B                 7355 	ld	l,e
   26DC 62                 7356 	ld	h,d
   26DD 71                 7357 	ld	(hl),c
   26DE 23                 7358 	inc	hl
   26DF 70                 7359 	ld	(hl),b
                           7360 ;demo.c:1165: v+=y;
   26E0 DD 7E FC           7361 	ld	a,-4 (ix)
   26E3 DD 86 FE           7362 	add	a,-2 (ix)
   26E6 DD 77 FC           7363 	ld	-4 (ix),a
   26E9 DD 7E FD           7364 	ld	a,-3 (ix)
   26EC DD 8E FF           7365 	adc	a,-1 (ix)
   26EF DD 77 FD           7366 	ld	-3 (ix),a
                           7367 ;demo.c:1166: v -= powa;
   26F2 21rCAs41           7368 	ld	hl,#_powa
   26F5 DD 7E FC           7369 	ld	a,-4 (ix)
   26F8 96                 7370 	sub	a,(hl)
   26F9 DD 77 FC           7371 	ld	-4 (ix),a
   26FC DD 7E FD           7372 	ld	a,-3 (ix)
   26FF 23                 7373 	inc	hl
   2700 9E                 7374 	sbc	a,(hl)
                           7375 ;demo.c:1167: if (v<0) v = 0;
   2701 DD 77 FD           7376 	ld	-3 (ix),a
   2704 CB 7F              7377 	bit	7,a
   2706 28 08              7378 	jr	Z,00102$
   2708 DD 36 FC 00        7379 	ld	-4 (ix),#0x00
   270C DD 36 FD 00        7380 	ld	-3 (ix),#0x00
   2710                    7381 00102$:
                           7382 ;demo.c:1168: if (v>150) v = 150;
   2710 3E 96              7383 	ld	a,#0x96
   2712 DD 96 FC           7384 	sub	a,-4 (ix)
   2715 3E 00              7385 	ld	a,#0x00
   2717 DD 9E FD           7386 	sbc	a,-3 (ix)
   271A F2r25s27           7387 	jp	P,00104$
   271D DD 36 FC 96        7388 	ld	-4 (ix),#0x96
   2721 DD 36 FD 00        7389 	ld	-3 (ix),#0x00
   2725                    7390 00104$:
                           7391 ;demo.c:1169: cmd.dest_x = 74+v;
   2725 01r1Cs41           7392 	ld	bc,#_cmd + 4
   2728 DD 7E FC           7393 	ld	a,-4 (ix)
   272B C6 4A              7394 	add	a,#0x4A
   272D 5F                 7395 	ld	e,a
   272E DD 7E FD           7396 	ld	a,-3 (ix)
   2731 CE 00              7397 	adc	a,#0x00
   2733 57                 7398 	ld	d,a
   2734 69                 7399 	ld	l,c
   2735 60                 7400 	ld	h,b
   2736 73                 7401 	ld	(hl),e
   2737 23                 7402 	inc	hl
   2738 72                 7403 	ld	(hl),d
                           7404 ;demo.c:1170: cmd.dest_y = 50+y+1;
   2739 01r1Es41           7405 	ld	bc,#_cmd + 6
   273C DD 7E FE           7406 	ld	a,-2 (ix)
   273F C6 33              7407 	add	a,#0x33
   2741 5F                 7408 	ld	e,a
   2742 DD 7E FF           7409 	ld	a,-1 (ix)
   2745 CE 00              7410 	adc	a,#0x00
   2747 57                 7411 	ld	d,a
   2748 69                 7412 	ld	l,c
   2749 60                 7413 	ld	h,b
   274A 73                 7414 	ld	(hl),e
   274B 23                 7415 	inc	hl
   274C 72                 7416 	ld	(hl),d
                           7417 ;demo.c:1171: vdp_copier(&cmd);
   274D 21r18s41           7418 	ld	hl,#_cmd
   2750 E5                 7419 	push	hl
   2751 CDr00s00           7420 	call	_vdp_copier
   2754 F1                 7421 	pop	af
                           7422 ;demo.c:1157: for (y = 0; y < 116; y+=2) {
   2755 DD 7E FE           7423 	ld	a,-2 (ix)
   2758 C6 02              7424 	add	a,#0x02
   275A DD 77 FE           7425 	ld	-2 (ix),a
   275D DD 7E FF           7426 	ld	a,-1 (ix)
   2760 CE 00              7427 	adc	a,#0x00
   2762 DD 77 FF           7428 	ld	-1 (ix),a
   2765 C3r93s26           7429 	jp	00108$
   2768                    7430 00111$:
                           7431 ;demo.c:1174: if (vbicount > 84 && onceclear > 182) {
   2768 3E 54              7432 	ld	a,#0x54
   276A FD 21r14s41        7433 	ld	iy,#_vbicount
   276E FD 96 00           7434 	sub	a,0 (iy)
   2771 3E 00              7435 	ld	a,#0x00
   2773 FD 21r14s41        7436 	ld	iy,#_vbicount
   2777 FD 9E 01           7437 	sbc	a,1 (iy)
   277A F2rDCs27           7438 	jp	P,00106$
   277D 3E B6              7439 	ld	a,#0xB6
   277F FD 21rCCs41        7440 	ld	iy,#_onceclear
   2783 FD 96 00           7441 	sub	a,0 (iy)
   2786 D2rDCs27           7442 	jp	NC,00106$
                           7443 ;demo.c:1175: cmd.size_x = 4;
   2789 21r20s41           7444 	ld	hl, #_cmd + 8
   278C 36 04              7445 	ld	(hl),#0x04
   278E 23                 7446 	inc	hl
   278F 36 00              7447 	ld	(hl),#0x00
                           7448 ;demo.c:1176: cmd.size_y = 116;
   2791 21r22s41           7449 	ld	hl, #_cmd + 10
   2794 36 74              7450 	ld	(hl),#0x74
   2796 23                 7451 	inc	hl
   2797 36 00              7452 	ld	(hl),#0x00
                           7453 ;demo.c:1177: cmd.data = 0;
                           7454 ;demo.c:1178: cmd.argument = 0x00;
   2799 3E 00              7455 	ld	a,#0x00
   279B 32r24s41           7456 	ld	(#_cmd + 12),a
   279E 32r25s41           7457 	ld	(#_cmd + 13),a
                           7458 ;demo.c:1179: cmd.command = 0xd0; 
   27A1 01r26s41           7459 	ld	bc,#_cmd + 14
   27A4 3E D0              7460 	ld	a,#0xD0
   27A6 02                 7461 	ld	(bc),a
                           7462 ;demo.c:1180: cmd.source_x = 20;
   27A7 21r18s41           7463 	ld	hl,#_cmd
   27AA 36 14              7464 	ld	(hl),#0x14
   27AC 23                 7465 	inc	hl
   27AD 36 00              7466 	ld	(hl),#0x00
                           7467 ;demo.c:1181: cmd.source_y = 0;
   27AF 21r1As41           7468 	ld	hl, #_cmd + 2
   27B2 36 00              7469 	ld	(hl),#0x00
   27B4 23                 7470 	inc	hl
   27B5 36 00              7471 	ld	(hl),#0x00
                           7472 ;demo.c:1182: cmd.dest_x = onceclear;
   27B7 01r1Cs41           7473 	ld	bc,#_cmd + 4
   27BA 21rCCs41           7474 	ld	hl,#_onceclear + 0
   27BD 5E                 7475 	ld	e,(hl)
   27BE 16 00              7476 	ld	d,#0x00
   27C0 69                 7477 	ld	l,c
   27C1 60                 7478 	ld	h,b
   27C2 73                 7479 	ld	(hl),e
   27C3 23                 7480 	inc	hl
   27C4 72                 7481 	ld	(hl),d
                           7482 ;demo.c:1183: cmd.dest_y = 68;
   27C5 21r1Es41           7483 	ld	hl, #_cmd + 6
   27C8 36 44              7484 	ld	(hl),#0x44
   27CA 23                 7485 	inc	hl
   27CB 36 00              7486 	ld	(hl),#0x00
                           7487 ;demo.c:1184: vdp_copier(&cmd);
   27CD 21r18s41           7488 	ld	hl,#_cmd
   27D0 E5                 7489 	push	hl
   27D1 CDr00s00           7490 	call	_vdp_copier
   27D4 F1                 7491 	pop	af
                           7492 ;demo.c:1185: onceclear-=4;
   27D5 21rCCs41           7493 	ld	hl,#_onceclear
   27D8 7E                 7494 	ld	a,(hl)
   27D9 C6 FC              7495 	add	a,#0xFC
   27DB 77                 7496 	ld	(hl),a
   27DC                    7497 00106$:
                           7498 ;demo.c:1189: powa+=2;
   27DC 21rCAs41           7499 	ld	hl,#_powa
   27DF 7E                 7500 	ld	a,(hl)
   27E0 C6 02              7501 	add	a,#0x02
   27E2 23                 7502 	inc	hl
   27E3 2B                 7503 	dec	hl
   27E4 C5                 7504 	push	bc
   27E5 4F                 7505 	ld	c, a
   27E6 23                 7506 	inc	hl
   27E7 7E                 7507 	ld	a, (hl)
   27E8 47                 7508 	ld	b, a
   27E9 79                 7509 	ld	a, c
   27EA 2B                 7510 	dec	hl
   27EB 77                 7511 	ld	(hl), a
   27EC 78                 7512 	ld	a, b
   27ED C1                 7513 	pop	bc
   27EE CE 00              7514 	adc	a,#0x00
   27F0 23                 7515 	inc	hl
   27F1 77                 7516 	ld	(hl),a
                           7517 ;demo.c:1190: powatick = 0;
   27F2 21rC8s41           7518 	ld	hl,#_powatick + 0
   27F5 36 00              7519 	ld	(hl), #0x00
   27F7 21rC9s41           7520 	ld	hl,#_powatick + 1
   27FA 36 00              7521 	ld	(hl), #0x00
   27FC DD F9              7522 	ld	sp,ix
   27FE DD E1              7523 	pop	ix
   2800 C9                 7524 	ret
   2801                    7525 _logoeffu_end::
                           7526 ;demo.c:1197: void do_quit() {
                           7527 ;	---------------------------------
                           7528 ; Function do_quit
                           7529 ; ---------------------------------
   2801                    7530 _do_quit_start::
   2801                    7531 _do_quit:
                           7532 ;demo.c:1198: waitVB();
   2801 76                 7533 		halt 
                           7534 ;demo.c:1199: uninstall_isr();
   2802 CDr00s00           7535 	call	_uninstall_isr
                           7536 ;demo.c:1200: PLY_Stop();
   2805 CDr00s00           7537 	call	_PLY_Stop
                           7538 ;demo.c:1201: PLY_SendRegisters();
   2808 CDr00s00           7539 	call	_PLY_SendRegisters
                           7540 ;demo.c:1203: screen(0);
   280B 3E 00              7541 	ld	a,#0x00
   280D F5                 7542 	push	af
   280E 33                 7543 	inc	sp
   280F CDr00s00           7544 	call	_screen
   2812 33                 7545 	inc	sp
                           7546 ;demo.c:1205: puts("demo quit\r\n\r\n");
   2813 21r24s28           7547 	ld	hl,#__str_14
   2816 E5                 7548 	push	hl
   2817 CDr00s00           7549 	call	_puts
   281A F1                 7550 	pop	af
                           7551 ;demo.c:1207: exit(0);	
   281B 3E 00              7552 	ld	a,#0x00
   281D F5                 7553 	push	af
   281E 33                 7554 	inc	sp
   281F CDr00s00           7555 	call	_exit
   2822 33                 7556 	inc	sp
   2823 C9                 7557 	ret
   2824                    7558 _do_quit_end::
   2824                    7559 __str_14:
   2824 64 65 6D 6F 20 71  7560 	.ascii "demo quit"
        75 69 74
   282D 0D                 7561 	.db 0x0D
   282E 0A                 7562 	.db 0x0A
   282F 0D                 7563 	.db 0x0D
   2830 0A                 7564 	.db 0x0A
   2831 00                 7565 	.db 0x00
                           7566 ;demo.c:1233: void main() {
                           7567 ;	---------------------------------
                           7568 ; Function main
                           7569 ; ---------------------------------
   2832                    7570 _main_start::
   2832                    7571 _main:
   2832 DD E5              7572 	push	ix
   2834 DD 21 00 00        7573 	ld	ix,#0
   2838 DD 39              7574 	add	ix,sp
   283A 21 F9 FF           7575 	ld	hl,#-7
   283D 39                 7576 	add	hl,sp
   283E F9                 7577 	ld	sp,hl
                           7578 ;demo.c:1234: unsigned char quit=0;
   283F DD 36 FF 00        7579 	ld	-1 (ix),#0x00
                           7580 ;demo.c:1240: spindown();
   2843 CDr00s00           7581 	call	_spindown
                           7582 ;demo.c:1242: puts("demo init\r\n\r\n");
   2846 21rC6s2C           7583 	ld	hl,#__str_15
   2849 E5                 7584 	push	hl
   284A CDr00s00           7585 	call	_puts
   284D F1                 7586 	pop	af
                           7587 ;demo.c:1244: for (y = 0; y < 2; y++) {
   284E DD 36 FB 00        7588 	ld	-5 (ix),#0x00
   2852 DD 36 FC 00        7589 	ld	-4 (ix),#0x00
   2856                    7590 00118$:
   2856 DD 7E FB           7591 	ld	a,-5 (ix)
   2859 D6 02              7592 	sub	a,#0x02
   285B DD 7E FC           7593 	ld	a,-4 (ix)
   285E DE 00              7594 	sbc	a,#0x00
   2860 F2rE2s28           7595 	jp	P,00121$
                           7596 ;demo.c:1245: for (x = 0; x < 16; x++) {
   2863 DD 4E FB           7597 	ld	c,-5 (ix)
   2866 DD 46 FC           7598 	ld	b,-4 (ix)
   2869 CB 21              7599 	sla	c
   286B CB 10              7600 	rl	b
   286D CB 21              7601 	sla	c
   286F CB 10              7602 	rl	b
   2871 CB 21              7603 	sla	c
   2873 CB 10              7604 	rl	b
   2875 CB 21              7605 	sla	c
   2877 CB 10              7606 	rl	b
   2879 21 81 03           7607 	ld	hl,#0x0381
   287C 09                 7608 	add	hl,bc
   287D DD 75 F9           7609 	ld	-7 (ix),l
   2880 DD 74 FA           7610 	ld	-6 (ix),h
   2883 DD 36 FD 00        7611 	ld	-3 (ix),#0x00
   2887 DD 36 FE 00        7612 	ld	-2 (ix),#0x00
   288B                    7613 00114$:
   288B DD 7E FD           7614 	ld	a,-3 (ix)
   288E D6 10              7615 	sub	a,#0x10
   2890 DD 7E FE           7616 	ld	a,-2 (ix)
   2893 DE 00              7617 	sbc	a,#0x00
   2895 F2rD7s28           7618 	jp	P,00120$
                           7619 ;demo.c:1246: tri_lookup_x[(y*16)+x] = x * 16;
   2898 DD 7E FB           7620 	ld	a,-5 (ix)
   289B 07                 7621 	rlca
   289C 07                 7622 	rlca
   289D 07                 7623 	rlca
   289E 07                 7624 	rlca
   289F E6 F0              7625 	and	a,#0xF0
   28A1 5F                 7626 	ld	e,a
   28A2 DD 56 FD           7627 	ld	d,-3 (ix)
   28A5 7B                 7628 	ld	a,e
   28A6 82                 7629 	add	a,d
   28A7 5F                 7630 	ld	e, a
   28A8 C6r00              7631 	add	a,#<_tri_lookup_x
   28AA 4F                 7632 	ld	c,a
   28AB 3Es01              7633 	ld	a,#>_tri_lookup_x
   28AD CE 00              7634 	adc	a,#0x00
   28AF 47                 7635 	ld	b,a
   28B0 7A                 7636 	ld	a,d
   28B1 07                 7637 	rlca
   28B2 07                 7638 	rlca
   28B3 07                 7639 	rlca
   28B4 07                 7640 	rlca
   28B5 E6 F0              7641 	and	a,#0xF0
   28B7 02                 7642 	ld	(bc),a
                           7643 ;demo.c:1247: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   28B8 CB 23              7644 	sla	e
   28BA 3Er34              7645 	ld	a,#<_tri_lookup_y
   28BC 83                 7646 	add	a,e
   28BD 6F                 7647 	ld	l,a
   28BE 3Es01              7648 	ld	a,#>_tri_lookup_y
   28C0 CE 00              7649 	adc	a,#0x00
   28C2 67                 7650 	ld	h,a
   28C3 DD 7E F9           7651 	ld	a,-7 (ix)
   28C6 77                 7652 	ld	(hl),a
   28C7 23                 7653 	inc	hl
   28C8 DD 7E FA           7654 	ld	a,-6 (ix)
   28CB 77                 7655 	ld	(hl),a
                           7656 ;demo.c:1245: for (x = 0; x < 16; x++) {
   28CC DD 34 FD           7657 	inc	-3 (ix)
   28CF 20 03              7658 	jr	NZ,00146$
   28D1 DD 34 FE           7659 	inc	-2 (ix)
   28D4                    7660 00146$:
   28D4 C3r8Bs28           7661 	jp	00114$
   28D7                    7662 00120$:
                           7663 ;demo.c:1244: for (y = 0; y < 2; y++) {
   28D7 DD 34 FB           7664 	inc	-5 (ix)
   28DA 20 03              7665 	jr	NZ,00147$
   28DC DD 34 FC           7666 	inc	-4 (ix)
   28DF                    7667 00147$:
   28DF C3r56s28           7668 	jp	00118$
   28E2                    7669 00121$:
                           7670 ;demo.c:1251: for (x = 0; x < 20; x++) {
   28E2 DD 36 FD 00        7671 	ld	-3 (ix),#0x00
   28E6 DD 36 FE 00        7672 	ld	-2 (ix),#0x00
   28EA                    7673 00122$:
   28EA DD 7E FD           7674 	ld	a,-3 (ix)
   28ED D6 14              7675 	sub	a,#0x14
   28EF DD 7E FE           7676 	ld	a,-2 (ix)
   28F2 DE 00              7677 	sbc	a,#0x00
   28F4 F2r18s29           7678 	jp	P,00125$
                           7679 ;demo.c:1252: sixtimes[x] = x * 6;
   28F7 3Er20              7680 	ld	a,#<_sixtimes
   28F9 DD 86 FD           7681 	add	a,-3 (ix)
   28FC 5F                 7682 	ld	e,a
   28FD 3Es01              7683 	ld	a,#>_sixtimes
   28FF DD 8E FE           7684 	adc	a,-2 (ix)
   2902 57                 7685 	ld	d,a
   2903 DD 4E FD           7686 	ld	c,-3 (ix)
   2906 D5                 7687 	push	de
   2907 79                 7688 	ld	a,c
   2908 5F                 7689 	ld	e,a
   2909 87                 7690 	add	a,a
   290A 83                 7691 	add	a,e
   290B 87                 7692 	add	a,a
   290C D1                 7693 	pop	de
   290D 12                 7694 	ld	(de),a
                           7695 ;demo.c:1251: for (x = 0; x < 20; x++) {
   290E DD 34 FD           7696 	inc	-3 (ix)
   2911 20 03              7697 	jr	NZ,00148$
   2913 DD 34 FE           7698 	inc	-2 (ix)
   2916                    7699 00148$:
   2916 18 D2              7700 	jr	00122$
   2918                    7701 00125$:
                           7702 ;demo.c:1255: puts("music init...");
   2918 21rD4s2C           7703 	ld	hl,#__str_16
   291B E5                 7704 	push	hl
   291C CDr00s00           7705 	call	_puts
   291F F1                 7706 	pop	af
                           7707 ;demo.c:1257: PLY_SongPtr = (char *)0x0103;
   2920 21r00s00           7708 	ld	hl,#_PLY_SongPtr + 0
   2923 36 03              7709 	ld	(hl), #0x03
   2925 21r01s00           7710 	ld	hl,#_PLY_SongPtr + 1
   2928 36 01              7711 	ld	(hl), #0x01
                           7712 ;demo.c:1258: PLY_Init();
   292A CDr00s00           7713 	call	_PLY_Init
                           7714 ;demo.c:1259: puts("done.\r\n");
   292D 21rE2s2C           7715 	ld	hl,#__str_17
   2930 E5                 7716 	push	hl
   2931 CDr00s00           7717 	call	_puts
   2934 F1                 7718 	pop	af
                           7719 ;demo.c:1261: puts("detecting vdp type...\r\n\r\n");
   2935 21rEAs2C           7720 	ld	hl,#__str_18
   2938 E5                 7721 	push	hl
   2939 CDr00s00           7722 	call	_puts
   293C F1                 7723 	pop	af
                           7724 ;demo.c:1262: if(isvdp2())
   293D CDr00s00           7725 	call	_isvdp2
   2940 AF                 7726 	xor	a,a
   2941 B5                 7727 	or	a,l
   2942 28 0A              7728 	jr	Z,00102$
                           7729 ;demo.c:1264: puts("vdp2 found! setting 50hz...\r\n\r\n");
   2944 21r04s2D           7730 	ld	hl,#__str_19
   2947 E5                 7731 	push	hl
   2948 CDr00s00           7732 	call	_puts
   294B F1                 7733 	pop	af
   294C 18 0B              7734 	jr	00103$
   294E                    7735 00102$:
                           7736 ;demo.c:1267: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   294E 21r24s2D           7737 	ld	hl,#__str_20
   2951 E5                 7738 	push	hl
   2952 CDr00s00           7739 	call	_puts
   2955 F1                 7740 	pop	af
                           7741 ;demo.c:1268: do_quit();
   2956 CDr01s28           7742 	call	_do_quit
   2959                    7743 00103$:
                           7744 ;demo.c:1271: pal_load("TWISTER PL5",32,1);
   2959 21 01 00           7745 	ld	hl,#0x0001
   295C E5                 7746 	push	hl
   295D 3E 20              7747 	ld	a,#0x20
   295F F5                 7748 	push	af
   2960 33                 7749 	inc	sp
   2961 21r6Bs2D           7750 	ld	hl,#__str_21
   2964 E5                 7751 	push	hl
   2965 CDrA3s07           7752 	call	_pal_load
   2968 F1                 7753 	pop	af
   2969 F1                 7754 	pop	af
   296A 33                 7755 	inc	sp
                           7756 ;demo.c:1272: memcpy(twister_palette, cur_palette, 32);
   296B 21 20 00           7757 	ld	hl,#0x0020
   296E E5                 7758 	push	hl
   296F 21r74s40           7759 	ld	hl,#_cur_palette
   2972 E5                 7760 	push	hl
   2973 21rB4s40           7761 	ld	hl,#_twister_palette
   2976 E5                 7762 	push	hl
   2977 CDr00s00           7763 	call	_memcpy
   297A F1                 7764 	pop	af
   297B F1                 7765 	pop	af
   297C F1                 7766 	pop	af
                           7767 ;demo.c:1273: pal_load("LF      PL5",32,1);
   297D 21 01 00           7768 	ld	hl,#0x0001
   2980 E5                 7769 	push	hl
   2981 3E 20              7770 	ld	a,#0x20
   2983 F5                 7771 	push	af
   2984 33                 7772 	inc	sp
   2985 21r77s2D           7773 	ld	hl,#__str_22
   2988 E5                 7774 	push	hl
   2989 CDrA3s07           7775 	call	_pal_load
   298C F1                 7776 	pop	af
   298D F1                 7777 	pop	af
   298E 33                 7778 	inc	sp
                           7779 ;demo.c:1274: memcpy(tf_palette, cur_palette, 32);
   298F 21 20 00           7780 	ld	hl,#0x0020
   2992 E5                 7781 	push	hl
   2993 21r74s40           7782 	ld	hl,#_cur_palette
   2996 E5                 7783 	push	hl
   2997 21rD4s40           7784 	ld	hl,#_tf_palette
   299A E5                 7785 	push	hl
   299B CDr00s00           7786 	call	_memcpy
   299E F1                 7787 	pop	af
   299F F1                 7788 	pop	af
   29A0 F1                 7789 	pop	af
                           7790 ;demo.c:1275: pal_load("BOXES   PL5",32,1);
   29A1 21 01 00           7791 	ld	hl,#0x0001
   29A4 E5                 7792 	push	hl
   29A5 3E 20              7793 	ld	a,#0x20
   29A7 F5                 7794 	push	af
   29A8 33                 7795 	inc	sp
   29A9 21r83s2D           7796 	ld	hl,#__str_23
   29AC E5                 7797 	push	hl
   29AD CDrA3s07           7798 	call	_pal_load
   29B0 F1                 7799 	pop	af
   29B1 F1                 7800 	pop	af
   29B2 33                 7801 	inc	sp
                           7802 ;demo.c:1276: memcpy(boxes_palette, cur_palette, 32);
   29B3 21 20 00           7803 	ld	hl,#0x0020
   29B6 E5                 7804 	push	hl
   29B7 21r74s40           7805 	ld	hl,#_cur_palette
   29BA E5                 7806 	push	hl
   29BB 21rF4s40           7807 	ld	hl,#_boxes_palette
   29BE E5                 7808 	push	hl
   29BF CDr00s00           7809 	call	_memcpy
   29C2 F1                 7810 	pop	af
   29C3 F1                 7811 	pop	af
   29C4 F1                 7812 	pop	af
                           7813 ;demo.c:1277: pal_load("BULBS   PL5",32,1);
   29C5 21 01 00           7814 	ld	hl,#0x0001
   29C8 E5                 7815 	push	hl
   29C9 3E 20              7816 	ld	a,#0x20
   29CB F5                 7817 	push	af
   29CC 33                 7818 	inc	sp
   29CD 21r8Fs2D           7819 	ld	hl,#__str_24
   29D0 E5                 7820 	push	hl
   29D1 CDrA3s07           7821 	call	_pal_load
   29D4 F1                 7822 	pop	af
   29D5 F1                 7823 	pop	af
   29D6 33                 7824 	inc	sp
                           7825 ;demo.c:1279: scratch_clear();
   29D7 CDr90s07           7826 	call	_scratch_clear
                           7827 ;demo.c:1280: vdp_load_palette(scratch);
   29DA 21rF4s3F           7828 	ld	hl,#_scratch
   29DD E5                 7829 	push	hl
   29DE CDr00s00           7830 	call	_vdp_load_palette
   29E1 F1                 7831 	pop	af
                           7832 ;demo.c:1282: vdp_set_screen5();
   29E2 CDr00s00           7833 	call	_vdp_set_screen5
                           7834 ;demo.c:1284: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   29E5 21 00 00           7835 	ld	hl,#0x0000
   29E8 E5                 7836 	push	hl
   29E9 2E 01              7837 	ld	l, #0x01
   29EB E5                 7838 	push	hl
   29EC 2E 00              7839 	ld	l, #0x00
   29EE E5                 7840 	push	hl
   29EF 21 7F 09           7841 	ld	hl,#0x097F
   29F2 E5                 7842 	push	hl
   29F3 21r9Bs2D           7843 	ld	hl,#__str_25
   29F6 E5                 7844 	push	hl
   29F7 CDr99s09           7845 	call	_pck_load
   29FA FD 21 0A 00        7846 	ld	iy,#0x000A
   29FE FD 39              7847 	add	iy,sp
   2A00 FD F9              7848 	ld	sp,iy
                           7849 ;demo.c:1286: cmd.size_x = 256;
   2A02 21r20s41           7850 	ld	hl, #_cmd + 8
   2A05 36 00              7851 	ld	(hl),#0x00
   2A07 23                 7852 	inc	hl
   2A08 36 01              7853 	ld	(hl),#0x01
                           7854 ;demo.c:1287: cmd.size_y = 212;
   2A0A 21r22s41           7855 	ld	hl, #_cmd + 10
   2A0D 36 D4              7856 	ld	(hl),#0xD4
   2A0F 23                 7857 	inc	hl
   2A10 36 00              7858 	ld	(hl),#0x00
                           7859 ;demo.c:1288: cmd.data = 0;
                           7860 ;demo.c:1289: cmd.argument = 0x00;
   2A12 3E 00              7861 	ld	a,#0x00
   2A14 32r24s41           7862 	ld	(#_cmd + 12),a
   2A17 32r25s41           7863 	ld	(#_cmd + 13),a
                           7864 ;demo.c:1290: cmd.command = 0xd0; 
   2A1A 01r26s41           7865 	ld	bc,#_cmd + 14
   2A1D 3E D0              7866 	ld	a,#0xD0
   2A1F 02                 7867 	ld	(bc),a
                           7868 ;demo.c:1291: cmd.source_x = 0;
   2A20 21r18s41           7869 	ld	hl,#_cmd
   2A23 36 00              7870 	ld	(hl),#0x00
   2A25 23                 7871 	inc	hl
   2A26 36 00              7872 	ld	(hl),#0x00
                           7873 ;demo.c:1292: cmd.source_y = 0;
   2A28 21r1As41           7874 	ld	hl, #_cmd + 2
   2A2B 36 00              7875 	ld	(hl),#0x00
   2A2D 23                 7876 	inc	hl
   2A2E 36 00              7877 	ld	(hl),#0x00
                           7878 ;demo.c:1293: cmd.dest_x = 0;
   2A30 21r1Cs41           7879 	ld	hl, #_cmd + 4
   2A33 36 00              7880 	ld	(hl),#0x00
   2A35 23                 7881 	inc	hl
   2A36 36 00              7882 	ld	(hl),#0x00
                           7883 ;demo.c:1294: cmd.dest_y = 256;
   2A38 21r1Es41           7884 	ld	hl, #_cmd + 6
   2A3B 36 00              7885 	ld	(hl),#0x00
   2A3D 23                 7886 	inc	hl
   2A3E 36 01              7887 	ld	(hl),#0x01
                           7888 ;demo.c:1295: vdp_copier(&cmd);
   2A40 21r18s41           7889 	ld	hl,#_cmd
   2A43 E5                 7890 	push	hl
   2A44 CDr00s00           7891 	call	_vdp_copier
   2A47 F1                 7892 	pop	af
                           7893 ;demo.c:1297: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   2A48 21 00 00           7894 	ld	hl,#0x0000
   2A4B E5                 7895 	push	hl
   2A4C 2E 01              7896 	ld	l, #0x01
   2A4E E5                 7897 	push	hl
   2A4F 2E 00              7898 	ld	l, #0x00
   2A51 E5                 7899 	push	hl
   2A52 21 C0 0F           7900 	ld	hl,#0x0FC0
   2A55 E5                 7901 	push	hl
   2A56 21rA7s2D           7902 	ld	hl,#__str_26
   2A59 E5                 7903 	push	hl
   2A5A CDr99s09           7904 	call	_pck_load
   2A5D FD 21 0A 00        7905 	ld	iy,#0x000A
   2A61 FD 39              7906 	add	iy,sp
   2A63 FD F9              7907 	ld	sp,iy
                           7908 ;demo.c:1299: cmd.size_x = 256;
   2A65 21r20s41           7909 	ld	hl, #_cmd + 8
   2A68 36 00              7910 	ld	(hl),#0x00
   2A6A 23                 7911 	inc	hl
   2A6B 36 01              7912 	ld	(hl),#0x01
                           7913 ;demo.c:1300: cmd.size_y = 212;
   2A6D 21r22s41           7914 	ld	hl, #_cmd + 10
   2A70 36 D4              7915 	ld	(hl),#0xD4
   2A72 23                 7916 	inc	hl
   2A73 36 00              7917 	ld	(hl),#0x00
                           7918 ;demo.c:1301: cmd.data = 0;
                           7919 ;demo.c:1302: cmd.argument = 0x00;
   2A75 3E 00              7920 	ld	a,#0x00
   2A77 32r24s41           7921 	ld	(#_cmd + 12),a
   2A7A 32r25s41           7922 	ld	(#_cmd + 13),a
                           7923 ;demo.c:1303: cmd.command = 0xd0; 
   2A7D 01r26s41           7924 	ld	bc,#_cmd + 14
   2A80 3E D0              7925 	ld	a,#0xD0
   2A82 02                 7926 	ld	(bc),a
                           7927 ;demo.c:1304: cmd.source_x = 0;
   2A83 21r18s41           7928 	ld	hl,#_cmd
   2A86 36 00              7929 	ld	(hl),#0x00
   2A88 23                 7930 	inc	hl
   2A89 36 00              7931 	ld	(hl),#0x00
                           7932 ;demo.c:1305: cmd.source_y = 0;
   2A8B 21r1As41           7933 	ld	hl, #_cmd + 2
   2A8E 36 00              7934 	ld	(hl),#0x00
   2A90 23                 7935 	inc	hl
   2A91 36 00              7936 	ld	(hl),#0x00
                           7937 ;demo.c:1306: cmd.dest_x = 0;
   2A93 21r1Cs41           7938 	ld	hl, #_cmd + 4
   2A96 36 00              7939 	ld	(hl),#0x00
   2A98 23                 7940 	inc	hl
   2A99 36 00              7941 	ld	(hl),#0x00
                           7942 ;demo.c:1307: cmd.dest_y = 512;
   2A9B 21r1Es41           7943 	ld	hl, #_cmd + 6
   2A9E 36 00              7944 	ld	(hl),#0x00
   2AA0 23                 7945 	inc	hl
   2AA1 36 02              7946 	ld	(hl),#0x02
                           7947 ;demo.c:1308: vdp_copier(&cmd);
   2AA3 21r18s41           7948 	ld	hl,#_cmd
   2AA6 E5                 7949 	push	hl
   2AA7 CDr00s00           7950 	call	_vdp_copier
   2AAA F1                 7951 	pop	af
                           7952 ;demo.c:1311: pck_load("BOXES   PCK",2492,0x0000,VRAM_0,0);
   2AAB 21 00 00           7953 	ld	hl,#0x0000
   2AAE E5                 7954 	push	hl
   2AAF 2E 01              7955 	ld	l, #0x01
   2AB1 E5                 7956 	push	hl
   2AB2 2E 00              7957 	ld	l, #0x00
   2AB4 E5                 7958 	push	hl
   2AB5 21 BC 09           7959 	ld	hl,#0x09BC
   2AB8 E5                 7960 	push	hl
   2AB9 21rB3s2D           7961 	ld	hl,#__str_27
   2ABC E5                 7962 	push	hl
   2ABD CDr99s09           7963 	call	_pck_load
   2AC0 FD 21 0A 00        7964 	ld	iy,#0x000A
   2AC4 FD 39              7965 	add	iy,sp
   2AC6 FD F9              7966 	ld	sp,iy
                           7967 ;demo.c:1312: cmd.size_x = 256;
   2AC8 21r20s41           7968 	ld	hl, #_cmd + 8
   2ACB 36 00              7969 	ld	(hl),#0x00
   2ACD 23                 7970 	inc	hl
   2ACE 36 01              7971 	ld	(hl),#0x01
                           7972 ;demo.c:1313: cmd.size_y = 212;
   2AD0 21r22s41           7973 	ld	hl, #_cmd + 10
   2AD3 36 D4              7974 	ld	(hl),#0xD4
   2AD5 23                 7975 	inc	hl
   2AD6 36 00              7976 	ld	(hl),#0x00
                           7977 ;demo.c:1314: cmd.data = 0;
                           7978 ;demo.c:1315: cmd.argument = 0x00;
   2AD8 3E 00              7979 	ld	a,#0x00
   2ADA 32r24s41           7980 	ld	(#_cmd + 12),a
   2ADD 32r25s41           7981 	ld	(#_cmd + 13),a
                           7982 ;demo.c:1316: cmd.command = 0xd0; 
   2AE0 01r26s41           7983 	ld	bc,#_cmd + 14
   2AE3 3E D0              7984 	ld	a,#0xD0
   2AE5 02                 7985 	ld	(bc),a
                           7986 ;demo.c:1317: cmd.source_x = 0;
   2AE6 21r18s41           7987 	ld	hl,#_cmd
   2AE9 36 00              7988 	ld	(hl),#0x00
   2AEB 23                 7989 	inc	hl
   2AEC 36 00              7990 	ld	(hl),#0x00
                           7991 ;demo.c:1318: cmd.source_y = 0;
   2AEE 21r1As41           7992 	ld	hl, #_cmd + 2
   2AF1 36 00              7993 	ld	(hl),#0x00
   2AF3 23                 7994 	inc	hl
   2AF4 36 00              7995 	ld	(hl),#0x00
                           7996 ;demo.c:1319: cmd.dest_x = 0;
   2AF6 21r1Cs41           7997 	ld	hl, #_cmd + 4
   2AF9 36 00              7998 	ld	(hl),#0x00
   2AFB 23                 7999 	inc	hl
   2AFC 36 00              8000 	ld	(hl),#0x00
                           8001 ;demo.c:1320: cmd.dest_y = 768;
   2AFE 21r1Es41           8002 	ld	hl, #_cmd + 6
   2B01 36 00              8003 	ld	(hl),#0x00
   2B03 23                 8004 	inc	hl
   2B04 36 03              8005 	ld	(hl),#0x03
                           8006 ;demo.c:1321: vdp_copier(&cmd);
   2B06 21r18s41           8007 	ld	hl,#_cmd
   2B09 E5                 8008 	push	hl
   2B0A CDr00s00           8009 	call	_vdp_copier
   2B0D F1                 8010 	pop	af
                           8011 ;demo.c:1323: scratch_clear();
   2B0E CDr90s07           8012 	call	_scratch_clear
                           8013 ;demo.c:1324: vdp_load_palette(scratch);
   2B11 21rF4s3F           8014 	ld	hl,#_scratch
   2B14 E5                 8015 	push	hl
   2B15 CDr00s00           8016 	call	_vdp_load_palette
   2B18 F1                 8017 	pop	af
                           8018 ;demo.c:1326: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   2B19 21 00 00           8019 	ld	hl,#0x0000
   2B1C E5                 8020 	push	hl
   2B1D 2E 01              8021 	ld	l, #0x01
   2B1F E5                 8022 	push	hl
   2B20 2E 00              8023 	ld	l, #0x00
   2B22 E5                 8024 	push	hl
   2B23 21 6A 08           8025 	ld	hl,#0x086A
   2B26 E5                 8026 	push	hl
   2B27 21rBFs2D           8027 	ld	hl,#__str_28
   2B2A E5                 8028 	push	hl
   2B2B CDr99s09           8029 	call	_pck_load
   2B2E FD 21 0A 00        8030 	ld	iy,#0x000A
   2B32 FD 39              8031 	add	iy,sp
   2B34 FD F9              8032 	ld	sp,iy
                           8033 ;demo.c:1328: cmd.size_x = 108;
   2B36 21r20s41           8034 	ld	hl, #_cmd + 8
   2B39 36 6C              8035 	ld	(hl),#0x6C
   2B3B 23                 8036 	inc	hl
   2B3C 36 00              8037 	ld	(hl),#0x00
                           8038 ;demo.c:1329: cmd.size_y = 116;
   2B3E 21r22s41           8039 	ld	hl, #_cmd + 10
   2B41 36 74              8040 	ld	(hl),#0x74
   2B43 23                 8041 	inc	hl
   2B44 36 00              8042 	ld	(hl),#0x00
                           8043 ;demo.c:1330: cmd.data = 0;
                           8044 ;demo.c:1331: cmd.argument = 0x00;
   2B46 3E 00              8045 	ld	a,#0x00
   2B48 32r24s41           8046 	ld	(#_cmd + 12),a
   2B4B 32r25s41           8047 	ld	(#_cmd + 13),a
                           8048 ;demo.c:1332: cmd.command = 0xd0; 
   2B4E 01r26s41           8049 	ld	bc,#_cmd + 14
   2B51 3E D0              8050 	ld	a,#0xD0
   2B53 02                 8051 	ld	(bc),a
                           8052 ;demo.c:1333: cmd.source_x = 75;
   2B54 21r18s41           8053 	ld	hl,#_cmd
   2B57 36 4B              8054 	ld	(hl),#0x4B
   2B59 23                 8055 	inc	hl
   2B5A 36 00              8056 	ld	(hl),#0x00
                           8057 ;demo.c:1334: cmd.source_y = 50;
   2B5C 21r1As41           8058 	ld	hl, #_cmd + 2
   2B5F 36 32              8059 	ld	(hl),#0x32
   2B61 23                 8060 	inc	hl
   2B62 36 00              8061 	ld	(hl),#0x00
                           8062 ;demo.c:1335: cmd.dest_x = 75;
   2B64 21r1Cs41           8063 	ld	hl, #_cmd + 4
   2B67 36 4B              8064 	ld	(hl),#0x4B
   2B69 23                 8065 	inc	hl
   2B6A 36 00              8066 	ld	(hl),#0x00
                           8067 ;demo.c:1336: cmd.dest_y = 256;
   2B6C 21r1Es41           8068 	ld	hl, #_cmd + 6
   2B6F 36 00              8069 	ld	(hl),#0x00
   2B71 23                 8070 	inc	hl
   2B72 36 01              8071 	ld	(hl),#0x01
                           8072 ;demo.c:1337: vdp_copier(&cmd);
   2B74 21r18s41           8073 	ld	hl,#_cmd
   2B77 E5                 8074 	push	hl
   2B78 CDr00s00           8075 	call	_vdp_copier
   2B7B F1                 8076 	pop	af
                           8077 ;demo.c:1339: cmd.size_x = 108;
   2B7C 21r20s41           8078 	ld	hl, #_cmd + 8
   2B7F 36 6C              8079 	ld	(hl),#0x6C
   2B81 23                 8080 	inc	hl
   2B82 36 00              8081 	ld	(hl),#0x00
                           8082 ;demo.c:1340: cmd.size_y = 60;
   2B84 21r22s41           8083 	ld	hl, #_cmd + 10
   2B87 36 3C              8084 	ld	(hl),#0x3C
   2B89 23                 8085 	inc	hl
   2B8A 36 00              8086 	ld	(hl),#0x00
                           8087 ;demo.c:1341: cmd.data = 0;
                           8088 ;demo.c:1342: cmd.argument = 0x00;
   2B8C 3E 00              8089 	ld	a,#0x00
   2B8E 32r24s41           8090 	ld	(#_cmd + 12),a
   2B91 32r25s41           8091 	ld	(#_cmd + 13),a
                           8092 ;demo.c:1343: cmd.command = 0xd0; 
   2B94 01r26s41           8093 	ld	bc,#_cmd + 14
   2B97 3E D0              8094 	ld	a,#0xD0
   2B99 02                 8095 	ld	(bc),a
                           8096 ;demo.c:1344: cmd.source_x = 75;
   2B9A 21r18s41           8097 	ld	hl,#_cmd
   2B9D 36 4B              8098 	ld	(hl),#0x4B
   2B9F 23                 8099 	inc	hl
   2BA0 36 00              8100 	ld	(hl),#0x00
                           8101 ;demo.c:1345: cmd.source_y = 256+110;
   2BA2 21r1As41           8102 	ld	hl, #_cmd + 2
   2BA5 36 6E              8103 	ld	(hl),#0x6E
   2BA7 23                 8104 	inc	hl
   2BA8 36 01              8105 	ld	(hl),#0x01
                           8106 ;demo.c:1346: cmd.dest_x = 75;
   2BAA 21r1Cs41           8107 	ld	hl, #_cmd + 4
   2BAD 36 4B              8108 	ld	(hl),#0x4B
   2BAF 23                 8109 	inc	hl
   2BB0 36 00              8110 	ld	(hl),#0x00
                           8111 ;demo.c:1347: cmd.dest_y = 40;
   2BB2 21r1Es41           8112 	ld	hl, #_cmd + 6
   2BB5 36 28              8113 	ld	(hl),#0x28
   2BB7 23                 8114 	inc	hl
   2BB8 36 00              8115 	ld	(hl),#0x00
                           8116 ;demo.c:1348: vdp_copier(&cmd);
   2BBA 21r18s41           8117 	ld	hl,#_cmd
   2BBD E5                 8118 	push	hl
   2BBE CDr00s00           8119 	call	_vdp_copier
   2BC1 F1                 8120 	pop	af
                           8121 ;demo.c:1349: cmd.dest_x = 75;
   2BC2 21r1Cs41           8122 	ld	hl, #_cmd + 4
   2BC5 36 4B              8123 	ld	(hl),#0x4B
   2BC7 23                 8124 	inc	hl
   2BC8 36 00              8125 	ld	(hl),#0x00
                           8126 ;demo.c:1350: cmd.dest_y = 100;
   2BCA 21r1Es41           8127 	ld	hl, #_cmd + 6
   2BCD 36 64              8128 	ld	(hl),#0x64
   2BCF 23                 8129 	inc	hl
   2BD0 36 00              8130 	ld	(hl),#0x00
                           8131 ;demo.c:1351: vdp_copier(&cmd);
   2BD2 21r18s41           8132 	ld	hl,#_cmd
   2BD5 E5                 8133 	push	hl
   2BD6 CDr00s00           8134 	call	_vdp_copier
   2BD9 F1                 8135 	pop	af
                           8136 ;demo.c:1353: pal_load("DSSLOGO PL5",32,0);
   2BDA 21 00 00           8137 	ld	hl,#0x0000
   2BDD E5                 8138 	push	hl
   2BDE 3E 20              8139 	ld	a,#0x20
   2BE0 F5                 8140 	push	af
   2BE1 33                 8141 	inc	sp
   2BE2 21rCBs2D           8142 	ld	hl,#__str_29
   2BE5 E5                 8143 	push	hl
   2BE6 CDrA3s07           8144 	call	_pal_load
   2BE9 F1                 8145 	pop	af
   2BEA F1                 8146 	pop	af
   2BEB 33                 8147 	inc	sp
                           8148 ;demo.c:1355: scratch_clear();
   2BEC CDr90s07           8149 	call	_scratch_clear
                           8150 ;demo.c:1357: vdp_register(9,130); // 50hz,212
   2BEF 21 09 82           8151 	ld	hl,#0x8209
   2BF2 E5                 8152 	push	hl
   2BF3 CDr00s00           8153 	call	_vdp_register
   2BF6 F1                 8154 	pop	af
                           8155 ;demo.c:1359: install_isr(my_isr);
   2BF7 21rECs05           8156 	ld	hl,#_my_isr
   2BFA E5                 8157 	push	hl
   2BFB CDr00s00           8158 	call	_install_isr
   2BFE F1                 8159 	pop	af
                           8160 ;demo.c:1361: while (!quit) {
   2BFF                    8161 00111$:
   2BFF AF                 8162 	xor	a,a
   2C00 DD B6 FF           8163 	or	a,-1 (ix)
   2C03 C2rBEs2C           8164 	jp	NZ,00113$
                           8165 ;demo.c:1363: if (vbicount >= scenetimings[timeindex+1]) {
   2C06 21rCFs41           8166 	ld	hl,#_timeindex + 0
   2C09 4E                 8167 	ld	c,(hl)
   2C0A 0C                 8168 	inc	c
   2C0B CB 21              8169 	sla	c
   2C0D 3ErDF              8170 	ld	a,#<_scenetimings
   2C0F 81                 8171 	add	a,c
   2C10 6F                 8172 	ld	l,a
   2C11 3Es41              8173 	ld	a,#>_scenetimings
   2C13 CE 00              8174 	adc	a,#0x00
   2C15 67                 8175 	ld	h,a
   2C16 4E                 8176 	ld	c,(hl)
   2C17 23                 8177 	inc	hl
   2C18 46                 8178 	ld	b,(hl)
   2C19 3Ar14s41           8179 	ld	a,(#_vbicount+0)
   2C1C 91                 8180 	sub	a,c
   2C1D 3Ar15s41           8181 	ld	a,(#_vbicount+1)
   2C20 98                 8182 	sbc	a,b
   2C21 FAr4As2C           8183 	jp	M,00105$
                           8184 ;demo.c:1364: sceneindex++;
   2C24 FD 21rCDs41        8185 	ld	iy,#_sceneindex
   2C28 FD 34 00           8186 	inc	0 (iy)
   2C2B 20 07              8187 	jr	NZ,00149$
   2C2D FD 21rCDs41        8188 	ld	iy,#_sceneindex
   2C31 FD 34 01           8189 	inc	1 (iy)
   2C34                    8190 00149$:
                           8191 ;demo.c:1365: timeindex+=2;
   2C34 21rCFs41           8192 	ld	hl,#_timeindex
   2C37 7E                 8193 	ld	a,(hl)
   2C38 C6 02              8194 	add	a,#0x02
   2C3A 23                 8195 	inc	hl
   2C3B 2B                 8196 	dec	hl
   2C3C C5                 8197 	push	bc
   2C3D 4F                 8198 	ld	c, a
   2C3E 23                 8199 	inc	hl
   2C3F 7E                 8200 	ld	a, (hl)
   2C40 47                 8201 	ld	b, a
   2C41 79                 8202 	ld	a, c
   2C42 2B                 8203 	dec	hl
   2C43 77                 8204 	ld	(hl), a
   2C44 78                 8205 	ld	a, b
   2C45 C1                 8206 	pop	bc
   2C46 CE 00              8207 	adc	a,#0x00
   2C48 23                 8208 	inc	hl
   2C49 77                 8209 	ld	(hl),a
   2C4A                    8210 00105$:
                           8211 ;demo.c:1368: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   2C4A 21rCFs41           8212 	ld	hl,#_timeindex + 0
   2C4D 4E                 8213 	ld	c,(hl)
   2C4E 21rD0s41           8214 	ld	hl,#_timeindex + 1
   2C51 46                 8215 	ld	b,(hl)
   2C52 CB 21              8216 	sla	c
   2C54 CB 10              8217 	rl	b
   2C56 21rDFs41           8218 	ld	hl,#_scenetimings
   2C59 09                 8219 	add	hl,bc
   2C5A 4E                 8220 	ld	c,(hl)
   2C5B 23                 8221 	inc	hl
   2C5C 46                 8222 	ld	b,(hl)
   2C5D 3Ar14s41           8223 	ld	a,(#_vbicount+0)
   2C60 91                 8224 	sub	a,c
   2C61 3Ar15s41           8225 	ld	a,(#_vbicount+1)
   2C64 98                 8226 	sbc	a,b
   2C65 FArAAs2C           8227 	jp	M,00107$
   2C68 21rCFs41           8228 	ld	hl,#_timeindex + 0
   2C6B 4E                 8229 	ld	c,(hl)
   2C6C 0C                 8230 	inc	c
   2C6D CB 21              8231 	sla	c
   2C6F 3ErDF              8232 	ld	a,#<_scenetimings
   2C71 81                 8233 	add	a,c
   2C72 6F                 8234 	ld	l,a
   2C73 3Es41              8235 	ld	a,#>_scenetimings
   2C75 CE 00              8236 	adc	a,#0x00
   2C77 67                 8237 	ld	h,a
   2C78 4E                 8238 	ld	c,(hl)
   2C79 23                 8239 	inc	hl
   2C7A 46                 8240 	ld	b,(hl)
   2C7B 3Ar14s41           8241 	ld	a,(#_vbicount+0)
   2C7E 91                 8242 	sub	a,c
   2C7F FD 21r14s41        8243 	ld	iy,#_vbicount
   2C83 FD 7E 01           8244 	ld	a,1 (iy)
   2C86 98                 8245 	sbc	a,b
   2C87 F2rAAs2C           8246 	jp	P,00107$
                           8247 ;demo.c:1369: waitVB();
   2C8A 76                 8248 		halt 
                           8249 ;demo.c:1370: scenepointers[sceneindex]();
   2C8B 21rCDs41           8250 	ld	hl,#_sceneindex + 0
   2C8E 4E                 8251 	ld	c,(hl)
   2C8F FD 21rCDs41        8252 	ld	iy,#_sceneindex
   2C93 FD 46 01           8253 	ld	b,1 (iy)
   2C96 CB 21              8254 	sla	c
   2C98 CB 10              8255 	rl	b
   2C9A 21rD1s41           8256 	ld	hl,#_scenepointers
   2C9D 09                 8257 	add	hl,bc
   2C9E 4E                 8258 	ld	c,(hl)
   2C9F 23                 8259 	inc	hl
   2CA0 46                 8260 	ld	b,(hl)
   2CA1 C5                 8261 	push	bc
   2CA2 21rA9s2C           8262 	ld	hl,#00154$
   2CA5 E5                 8263 	push	hl
   2CA6 69                 8264 	ld	l,c
   2CA7 60                 8265 	ld	h,b
   2CA8 E9                 8266 	jp	(hl)
   2CA9                    8267 00154$:
   2CA9 C1                 8268 	pop	bc
   2CAA                    8269 00107$:
                           8270 ;demo.c:1372: if(space())
   2CAA 21 08 01           8271 	ld	hl,#0x0108
   2CAD E5                 8272 	push	hl
   2CAE CDr00s00           8273 	call	_ispressed
   2CB1 F1                 8274 	pop	af
   2CB2 AF                 8275 	xor	a,a
   2CB3 B5                 8276 	or	a,l
   2CB4 CArFFs2B           8277 	jp	Z,00111$
                           8278 ;demo.c:1373: quit=1;
   2CB7 DD 36 FF 01        8279 	ld	-1 (ix),#0x01
   2CBB C3rFFs2B           8280 	jp	00111$
   2CBE                    8281 00113$:
                           8282 ;demo.c:1376: do_quit();
   2CBE CDr01s28           8283 	call	_do_quit
   2CC1 DD F9              8284 	ld	sp,ix
   2CC3 DD E1              8285 	pop	ix
   2CC5 C9                 8286 	ret
   2CC6                    8287 _main_end::
   2CC6                    8288 __str_15:
   2CC6 64 65 6D 6F 20 69  8289 	.ascii "demo init"
        6E 69 74
   2CCF 0D                 8290 	.db 0x0D
   2CD0 0A                 8291 	.db 0x0A
   2CD1 0D                 8292 	.db 0x0D
   2CD2 0A                 8293 	.db 0x0A
   2CD3 00                 8294 	.db 0x00
   2CD4                    8295 __str_16:
   2CD4 6D 75 73 69 63 20  8296 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   2CE1 00                 8297 	.db 0x00
   2CE2                    8298 __str_17:
   2CE2 64 6F 6E 65 2E     8299 	.ascii "done."
   2CE7 0D                 8300 	.db 0x0D
   2CE8 0A                 8301 	.db 0x0A
   2CE9 00                 8302 	.db 0x00
   2CEA                    8303 __str_18:
   2CEA 64 65 74 65 63 74  8304 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   2CFF 0D                 8305 	.db 0x0D
   2D00 0A                 8306 	.db 0x0A
   2D01 0D                 8307 	.db 0x0D
   2D02 0A                 8308 	.db 0x0A
   2D03 00                 8309 	.db 0x00
   2D04                    8310 __str_19:
   2D04 76 64 70 32 20 66  8311 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   2D1F 0D                 8312 	.db 0x0D
   2D20 0A                 8313 	.db 0x0A
   2D21 0D                 8314 	.db 0x0D
   2D22 0A                 8315 	.db 0x0A
   2D23 00                 8316 	.db 0x00
   2D24                    8317 __str_20:
   2D24 20 76 64 70 31 20  8318 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   2D30 0D                 8319 	.db 0x0D
   2D31 0A                 8320 	.db 0x0A
   2D32 53 6F 72 72 79 2C  8321 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   2D60 20 56 52 41 4D 2E  8322 	.ascii " VRAM."
   2D66 0D                 8323 	.db 0x0D
   2D67 0A                 8324 	.db 0x0A
   2D68 0D                 8325 	.db 0x0D
   2D69 0A                 8326 	.db 0x0A
   2D6A 00                 8327 	.db 0x00
   2D6B                    8328 __str_21:
   2D6B 54 57 49 53 54 45  8329 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   2D76 00                 8330 	.db 0x00
   2D77                    8331 __str_22:
   2D77 4C 46 20 20 20 20  8332 	.ascii "LF      PL5"
        20 20 50 4C 35
   2D82 00                 8333 	.db 0x00
   2D83                    8334 __str_23:
   2D83 42 4F 58 45 53 20  8335 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   2D8E 00                 8336 	.db 0x00
   2D8F                    8337 __str_24:
   2D8F 42 55 4C 42 53 20  8338 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   2D9A 00                 8339 	.db 0x00
   2D9B                    8340 __str_25:
   2D9B 42 55 4C 42 53 20  8341 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   2DA6 00                 8342 	.db 0x00
   2DA7                    8343 __str_26:
   2DA7 54 57 49 53 54 45  8344 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   2DB2 00                 8345 	.db 0x00
   2DB3                    8346 __str_27:
   2DB3 42 4F 58 45 53 20  8347 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   2DBE 00                 8348 	.db 0x00
   2DBF                    8349 __str_28:
   2DBF 44 53 53 4C 4F 47  8350 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   2DCA 00                 8351 	.db 0x00
   2DCB                    8352 __str_29:
   2DCB 44 53 53 4C 4F 47  8353 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   2DD6 00                 8354 	.db 0x00
                           8355 	.area _CODE
                           8356 	.area _CABS
