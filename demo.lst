                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Sat Mar 24 15:29:01 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _credits
                             15 	.globl _waiter
                             16 	.globl _bigtext
                             17 	.globl _points
                             18 	.globl _logoeffu
                             19 	.globl _abs
                             20 	.globl _tritiles
                             21 	.globl _drawtilescreen_full
                             22 	.globl _drawtilescreen
                             23 	.globl _drawtritile
                             24 	.globl _thewave
                             25 	.globl _boxes
                             26 	.globl _drawbox
                             27 	.globl _animplay
                             28 	.globl _bulbs
                             29 	.globl _twister
                             30 	.globl _font
                             31 	.globl _drawsine
                             32 	.globl _drawstr2x
                             33 	.globl _drawstrslow
                             34 	.globl _drawstr
                             35 	.globl _do_letter_tall
                             36 	.globl _do_letter
                             37 	.globl _do_2xletter
                             38 	.globl _raster_effu
                             39 	.globl _do_blocks
                             40 	.globl _do_ymmm
                             41 	.globl _fadein
                             42 	.globl _pck_load
                             43 	.globl _raw_load
                             44 	.globl _pause
                             45 	.globl _pal_load
                             46 	.globl _scratch_clear
                             47 	.globl _my_isr
                             48 	.globl _isNthBitSet
                             49 	.globl _timeindex
                             50 	.globl _sceneindex
                             51 	.globl _credittimer
                             52 	.globl _initcredits
                             53 	.globl _bigtextp
                             54 	.globl _greetindex
                             55 	.globl _pointframe
                             56 	.globl _initpoints
                             57 	.globl _onceclear
                             58 	.globl _powa
                             59 	.globl _powatick
                             60 	.globl _triframes
                             61 	.globl _tripaltick2
                             62 	.globl _tripaltick
                             63 	.globl _tripal
                             64 	.globl _tiletick
                             65 	.globl _tiley
                             66 	.globl _tilex
                             67 	.globl _tilei
                             68 	.globl _tri_inited
                             69 	.globl _ffa
                             70 	.globl _buf
                             71 	.globl _initwave
                             72 	.globl _prevbox_of
                             73 	.globl _boxes_of
                             74 	.globl _pbt
                             75 	.globl _pbx
                             76 	.globl _bonc
                             77 	.globl _bo
                             78 	.globl _bt
                             79 	.globl _by
                             80 	.globl _bx
                             81 	.globl _boxi
                             82 	.globl _boxes_y
                             83 	.globl _boxes_x
                             84 	.globl _prevy
                             85 	.globl _prevx
                             86 	.globl _buffer
                             87 	.globl _boxes_init
                             88 	.globl _anim_init
                             89 	.globl _sy
                             90 	.globl _enderdir
                             91 	.globl _ender
                             92 	.globl _ff2
                             93 	.globl _ff1
                             94 	.globl _bulbflipper
                             95 	.globl _twinited
                             96 	.globl _ff
                             97 	.globl _slowend
                             98 	.globl _ltrpointer
                             99 	.globl _ly
                            100 	.globl _lx
                            101 	.globl _linenum
                            102 	.globl _flof
                            103 	.globl _btab
                            104 	.globl _bty
                            105 	.globl _btx
                            106 	.globl _bsy
                            107 	.globl _bsx
                            108 	.globl _block_init
                            109 	.globl _cc
                            110 	.globl _yofff
                            111 	.globl _scenetimings
                            112 	.globl _scenepointers
                            113 	.globl _cmd
                            114 	.globl _tick
                            115 	.globl _vbicount
                            116 	.globl _credits_palette
                            117 	.globl _boxes_palette
                            118 	.globl _tf_palette
                            119 	.globl _twister_palette
                            120 	.globl _block_palette
                            121 	.globl _bulbs_palette
                            122 	.globl _cur_palette
                            123 	.globl _scratch
                            124 	.globl _crebuffer3
                            125 	.globl _crebuffer2
                            126 	.globl _crebuffer1
                            127 	.globl _packbuffer
                            128 	.globl _tri_lookup_y
                            129 	.globl _eighttimes
                            130 	.globl _twelvetimes
                            131 	.globl _tri_lookup_x
                            132 	.globl _sintab
                            133 	.globl _font_w
                            134 	.globl _font_y
                            135 	.globl _font_x
                            136 	.globl _tri_inva4
                            137 	.globl _tri_inva3
                            138 	.globl _tri_inva2
                            139 	.globl _tri_inva1
                            140 	.globl _tri_side2
                            141 	.globl _tri_side1
                            142 	.globl _tri_dia
                            143 	.globl _tri_up
                            144 	.globl _tri_center
                            145 	.globl _sintabx
                            146 ;--------------------------------------------------------
                            147 ; special function registers
                            148 ;--------------------------------------------------------
                            149 ;--------------------------------------------------------
                            150 ;  ram data
                            151 ;--------------------------------------------------------
                            152 	.area _DATA
   0000                     153 _sintab::
   0000                     154 	.ds 256
   0100                     155 _tri_lookup_x::
   0100                     156 	.ds 32
   0120                     157 _twelvetimes::
   0120                     158 	.ds 52
   0154                     159 _eighttimes::
   0154                     160 	.ds 52
   0188                     161 _tri_lookup_y::
   0188                     162 	.ds 64
   01C8                     163 _packbuffer::
   01C8                     164 	.ds 4100
   11CC                     165 _crebuffer1::
   11CC                     166 	.ds 3323
   1EC7                     167 _crebuffer2::
   1EC7                     168 	.ds 4724
   313B                     169 _crebuffer3::
   313B                     170 	.ds 3723
   3FC6                     171 _scratch::
   3FC6                     172 	.ds 128
   4046                     173 _cur_palette::
   4046                     174 	.ds 32
   4066                     175 _bulbs_palette::
   4066                     176 	.ds 32
   4086                     177 _block_palette::
   4086                     178 	.ds 32
   40A6                     179 _twister_palette::
   40A6                     180 	.ds 32
   40C6                     181 _tf_palette::
   40C6                     182 	.ds 32
   40E6                     183 _boxes_palette::
   40E6                     184 	.ds 32
   4106                     185 _credits_palette::
   4106                     186 	.ds 32
   4126                     187 _vbicount::
   4126                     188 	.ds 2
   4128                     189 _tick::
   4128                     190 	.ds 2
   412A                     191 _cmd::
   412A                     192 	.ds 15
   4139                     193 _scenepointers::
   4139                     194 	.ds 24
   4151                     195 _scenetimings::
   4151                     196 	.ds 48
   4181                     197 _isNthBitSet_mask_1_1:
   4181                     198 	.ds 8
   4189                     199 _yofff::
   4189                     200 	.ds 1
   418A                     201 _cc::
   418A                     202 	.ds 1
   418B                     203 _flipper:
   418B                     204 	.ds 2
   418D                     205 _ymmmf:
   418D                     206 	.ds 2
   418F                     207 _block_init::
   418F                     208 	.ds 1
   4190                     209 _bsx::
   4190                     210 	.ds 2
   4192                     211 _bsy::
   4192                     212 	.ds 2
   4194                     213 _btx::
   4194                     214 	.ds 2
   4196                     215 _bty::
   4196                     216 	.ds 2
   4198                     217 _btab::
   4198                     218 	.ds 32
   41B8                     219 _flof::
   41B8                     220 	.ds 2
   41BA                     221 _linenum::
   41BA                     222 	.ds 2
   41BC                     223 _lx::
   41BC                     224 	.ds 1
   41BD                     225 _ly::
   41BD                     226 	.ds 1
   41BE                     227 _ltrpointer::
   41BE                     228 	.ds 2
   41C0                     229 _slowend::
   41C0                     230 	.ds 2
   41C2                     231 _ff::
   41C2                     232 	.ds 2
   41C4                     233 _twinited::
   41C4                     234 	.ds 2
   41C6                     235 _bulbflipper::
   41C6                     236 	.ds 2
   41C8                     237 _ff1::
   41C8                     238 	.ds 2
   41CA                     239 _ff2::
   41CA                     240 	.ds 2
   41CC                     241 _ender::
   41CC                     242 	.ds 2
   41CE                     243 _enderdir::
   41CE                     244 	.ds 2
   41D0                     245 _sy::
   41D0                     246 	.ds 2
   41D2                     247 _xo:
   41D2                     248 	.ds 2
   41D4                     249 _yo:
   41D4                     250 	.ds 2
   41D6                     251 _po:
   41D6                     252 	.ds 2
   41D8                     253 _frames:
   41D8                     254 	.ds 2
   41DA                     255 _anim_init::
   41DA                     256 	.ds 2
   41DC                     257 _boxes_init::
   41DC                     258 	.ds 1
   41DD                     259 _buffer::
   41DD                     260 	.ds 2
   41DF                     261 _prevx::
   41DF                     262 	.ds 2
   41E1                     263 _prevy::
   41E1                     264 	.ds 2
   41E3                     265 _boxes_x::
   41E3                     266 	.ds 5
   41E8                     267 _boxes_y::
   41E8                     268 	.ds 10
   41F2                     269 _boxi::
   41F2                     270 	.ds 1
   41F3                     271 _bx::
   41F3                     272 	.ds 2
   41F5                     273 _by::
   41F5                     274 	.ds 2
   41F7                     275 _bt::
   41F7                     276 	.ds 2
   41F9                     277 _bo::
   41F9                     278 	.ds 2
   41FB                     279 _bonc::
   41FB                     280 	.ds 2
   41FD                     281 _pbx::
   41FD                     282 	.ds 2
   41FF                     283 _pbt::
   41FF                     284 	.ds 2
   4201                     285 _boxes_of::
   4201                     286 	.ds 10
   420B                     287 _prevbox_of::
   420B                     288 	.ds 1
   420C                     289 _initwave::
   420C                     290 	.ds 1
   420D                     291 _buf::
   420D                     292 	.ds 2
   420F                     293 _ffa::
   420F                     294 	.ds 2
   4211                     295 _tri_inited::
   4211                     296 	.ds 1
   4212                     297 _tilei::
   4212                     298 	.ds 2
   4214                     299 _tilex::
   4214                     300 	.ds 2
   4216                     301 _tiley::
   4216                     302 	.ds 2
   4218                     303 _tiletick::
   4218                     304 	.ds 1
   4219                     305 _tripal::
   4219                     306 	.ds 9
   4222                     307 _tripaltick::
   4222                     308 	.ds 1
   4223                     309 _tripaltick2::
   4223                     310 	.ds 1
   4224                     311 _triframes::
   4224                     312 	.ds 2
   4226                     313 _powatick::
   4226                     314 	.ds 2
   4228                     315 _powa::
   4228                     316 	.ds 2
   422A                     317 _onceclear::
   422A                     318 	.ds 1
   422B                     319 _initpoints::
   422B                     320 	.ds 1
   422C                     321 _pointframe::
   422C                     322 	.ds 2
   422E                     323 _greetindex::
   422E                     324 	.ds 2
   4230                     325 _bigtextp::
   4230                     326 	.ds 2
   4232                     327 _initcredits::
   4232                     328 	.ds 2
   4234                     329 _credittimer::
   4234                     330 	.ds 2
   4236                     331 _sceneindex::
   4236                     332 	.ds 2
   4238                     333 _timeindex::
   4238                     334 	.ds 2
                            335 ;--------------------------------------------------------
                            336 ; overlayable items in  ram 
                            337 ;--------------------------------------------------------
                            338 	.area _OVERLAY
                            339 ;--------------------------------------------------------
                            340 ; external initialized ram data
                            341 ;--------------------------------------------------------
                            342 ;--------------------------------------------------------
                            343 ; global & static initialisations
                            344 ;--------------------------------------------------------
                            345 	.area _HOME
                            346 	.area _GSINIT
                            347 	.area _GSFINAL
                            348 	.area _GSINIT
                            349 ;demo.c:235: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r81s41            350 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            351 	call	__initrleblock
   0006 08                  352 	.db	8
   0007 01 02 04 08 10 20   353 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  354 	.db	0
                            355 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            356 	ld	hl,#_sintab
   0013 CDr00s00            357 	call	__initrleblock
   0016 3B                  358 	.db	59
   0017 00 03 06 09 0C 0F   359 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   360 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   361 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   362 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   363 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   364 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   365 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            366 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               367 	.db	#-5,#0x7E
   0054 01                  368 	.db	1
   0055 7F                  369 	.db	0x7F
   0056 FB 7E               370 	.db	#-5,#0x7E
   0058 75                  371 	.db	117
   0059 7D 7D 7C 7B 7B 7A   372 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   373 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   374 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   375 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   376 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   377 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   378 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   379 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   380 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   381 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   382 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   383 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   384 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   385 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      386 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               387 	.db	#-5,#0x82
   00D0 01                  388 	.db	1
   00D1 81                  389 	.db	0x81
   00D2 FB 82               390 	.db	#-5,#0x82
   00D4 3A                  391 	.db	58
   00D5 83 83 84 85 85 86   392 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   393 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   394 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   395 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   396 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   397 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   398 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               399 	.db	0xFA, 0xFD
   010F 00                  400 	.db	0
                            401 ;demo.c:176: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            402 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            403 	call	__initrleblock
   0116 E0 00               404 	.db	#-32,#0x00
   0118 00                  405 	.db	0
                            406 ;demo.c:177: int twelvetimes[26] = { 0 };
   0119 21r20s01            407 	ld	hl,#_twelvetimes
   011C CDr00s00            408 	call	__initrleblock
   011F CC 00               409 	.db	#-52,#0x00
   0121 00                  410 	.db	0
                            411 ;demo.c:178: int eighttimes[26] = { 0 };
   0122 21r54s01            412 	ld	hl,#_eighttimes
   0125 CDr00s00            413 	call	__initrleblock
   0128 CC 00               414 	.db	#-52,#0x00
   012A 00                  415 	.db	0
                            416 ;demo.c:180: int tri_lookup_y[16*2] = { 0 };
   012B 21r88s01            417 	ld	hl,#_tri_lookup_y
   012E CDr00s00            418 	call	__initrleblock
   0131 C0 00               419 	.db	#-64,#0x00
   0133 00                  420 	.db	0
                            421 ;demo.c:182: uint8_t packbuffer[4100] = {0};
   0134 21rC8s01            422 	ld	hl,#_packbuffer
   0137 CDr00s00            423 	call	__initrleblock
   013A 81 00               424 	.db	#-127,#0x00
   013C 81 00               425 	.db	#-127,#0x00
   013E 81 00               426 	.db	#-127,#0x00
   0140 81 00               427 	.db	#-127,#0x00
   0142 81 00               428 	.db	#-127,#0x00
   0144 81 00               429 	.db	#-127,#0x00
   0146 81 00               430 	.db	#-127,#0x00
   0148 81 00               431 	.db	#-127,#0x00
   014A 81 00               432 	.db	#-127,#0x00
   014C 81 00               433 	.db	#-127,#0x00
   014E 81 00               434 	.db	#-127,#0x00
   0150 81 00               435 	.db	#-127,#0x00
   0152 81 00               436 	.db	#-127,#0x00
   0154 81 00               437 	.db	#-127,#0x00
   0156 81 00               438 	.db	#-127,#0x00
   0158 81 00               439 	.db	#-127,#0x00
   015A 81 00               440 	.db	#-127,#0x00
   015C 81 00               441 	.db	#-127,#0x00
   015E 81 00               442 	.db	#-127,#0x00
   0160 81 00               443 	.db	#-127,#0x00
   0162 81 00               444 	.db	#-127,#0x00
   0164 81 00               445 	.db	#-127,#0x00
   0166 81 00               446 	.db	#-127,#0x00
   0168 81 00               447 	.db	#-127,#0x00
   016A 81 00               448 	.db	#-127,#0x00
   016C 81 00               449 	.db	#-127,#0x00
   016E 81 00               450 	.db	#-127,#0x00
   0170 81 00               451 	.db	#-127,#0x00
   0172 81 00               452 	.db	#-127,#0x00
   0174 81 00               453 	.db	#-127,#0x00
   0176 81 00               454 	.db	#-127,#0x00
   0178 81 00               455 	.db	#-127,#0x00
   017A DC 00               456 	.db	#-36,#0x00
   017C 00                  457 	.db	0
                            458 ;demo.c:184: uint8_t crebuffer1[3323] = {0};
   017D 21rCCs11            459 	ld	hl,#_crebuffer1
   0180 CDr00s00            460 	call	__initrleblock
   0183 81 00               461 	.db	#-127,#0x00
   0185 81 00               462 	.db	#-127,#0x00
   0187 81 00               463 	.db	#-127,#0x00
   0189 81 00               464 	.db	#-127,#0x00
   018B 81 00               465 	.db	#-127,#0x00
   018D 81 00               466 	.db	#-127,#0x00
   018F 81 00               467 	.db	#-127,#0x00
   0191 81 00               468 	.db	#-127,#0x00
   0193 81 00               469 	.db	#-127,#0x00
   0195 81 00               470 	.db	#-127,#0x00
   0197 81 00               471 	.db	#-127,#0x00
   0199 81 00               472 	.db	#-127,#0x00
   019B 81 00               473 	.db	#-127,#0x00
   019D 81 00               474 	.db	#-127,#0x00
   019F 81 00               475 	.db	#-127,#0x00
   01A1 81 00               476 	.db	#-127,#0x00
   01A3 81 00               477 	.db	#-127,#0x00
   01A5 81 00               478 	.db	#-127,#0x00
   01A7 81 00               479 	.db	#-127,#0x00
   01A9 81 00               480 	.db	#-127,#0x00
   01AB 81 00               481 	.db	#-127,#0x00
   01AD 81 00               482 	.db	#-127,#0x00
   01AF 81 00               483 	.db	#-127,#0x00
   01B1 81 00               484 	.db	#-127,#0x00
   01B3 81 00               485 	.db	#-127,#0x00
   01B5 81 00               486 	.db	#-127,#0x00
   01B7 EB 00               487 	.db	#-21,#0x00
   01B9 00                  488 	.db	0
                            489 ;demo.c:185: uint8_t crebuffer2[4724] = {0};
   01BA 21rC7s1E            490 	ld	hl,#_crebuffer2
   01BD CDr00s00            491 	call	__initrleblock
   01C0 81 00               492 	.db	#-127,#0x00
   01C2 81 00               493 	.db	#-127,#0x00
   01C4 81 00               494 	.db	#-127,#0x00
   01C6 81 00               495 	.db	#-127,#0x00
   01C8 81 00               496 	.db	#-127,#0x00
   01CA 81 00               497 	.db	#-127,#0x00
   01CC 81 00               498 	.db	#-127,#0x00
   01CE 81 00               499 	.db	#-127,#0x00
   01D0 81 00               500 	.db	#-127,#0x00
   01D2 81 00               501 	.db	#-127,#0x00
   01D4 81 00               502 	.db	#-127,#0x00
   01D6 81 00               503 	.db	#-127,#0x00
   01D8 81 00               504 	.db	#-127,#0x00
   01DA 81 00               505 	.db	#-127,#0x00
   01DC 81 00               506 	.db	#-127,#0x00
   01DE 81 00               507 	.db	#-127,#0x00
   01E0 81 00               508 	.db	#-127,#0x00
   01E2 81 00               509 	.db	#-127,#0x00
   01E4 81 00               510 	.db	#-127,#0x00
   01E6 81 00               511 	.db	#-127,#0x00
   01E8 81 00               512 	.db	#-127,#0x00
   01EA 81 00               513 	.db	#-127,#0x00
   01EC 81 00               514 	.db	#-127,#0x00
   01EE 81 00               515 	.db	#-127,#0x00
   01F0 81 00               516 	.db	#-127,#0x00
   01F2 81 00               517 	.db	#-127,#0x00
   01F4 81 00               518 	.db	#-127,#0x00
   01F6 81 00               519 	.db	#-127,#0x00
   01F8 81 00               520 	.db	#-127,#0x00
   01FA 81 00               521 	.db	#-127,#0x00
   01FC 81 00               522 	.db	#-127,#0x00
   01FE 81 00               523 	.db	#-127,#0x00
   0200 81 00               524 	.db	#-127,#0x00
   0202 81 00               525 	.db	#-127,#0x00
   0204 81 00               526 	.db	#-127,#0x00
   0206 81 00               527 	.db	#-127,#0x00
   0208 81 00               528 	.db	#-127,#0x00
   020A E7 00               529 	.db	#-25,#0x00
   020C 00                  530 	.db	0
                            531 ;demo.c:186: uint8_t crebuffer3[3723] = {0};
   020D 21r3Bs31            532 	ld	hl,#_crebuffer3
   0210 CDr00s00            533 	call	__initrleblock
   0213 81 00               534 	.db	#-127,#0x00
   0215 81 00               535 	.db	#-127,#0x00
   0217 81 00               536 	.db	#-127,#0x00
   0219 81 00               537 	.db	#-127,#0x00
   021B 81 00               538 	.db	#-127,#0x00
   021D 81 00               539 	.db	#-127,#0x00
   021F 81 00               540 	.db	#-127,#0x00
   0221 81 00               541 	.db	#-127,#0x00
   0223 81 00               542 	.db	#-127,#0x00
   0225 81 00               543 	.db	#-127,#0x00
   0227 81 00               544 	.db	#-127,#0x00
   0229 81 00               545 	.db	#-127,#0x00
   022B 81 00               546 	.db	#-127,#0x00
   022D 81 00               547 	.db	#-127,#0x00
   022F 81 00               548 	.db	#-127,#0x00
   0231 81 00               549 	.db	#-127,#0x00
   0233 81 00               550 	.db	#-127,#0x00
   0235 81 00               551 	.db	#-127,#0x00
   0237 81 00               552 	.db	#-127,#0x00
   0239 81 00               553 	.db	#-127,#0x00
   023B 81 00               554 	.db	#-127,#0x00
   023D 81 00               555 	.db	#-127,#0x00
   023F 81 00               556 	.db	#-127,#0x00
   0241 81 00               557 	.db	#-127,#0x00
   0243 81 00               558 	.db	#-127,#0x00
   0245 81 00               559 	.db	#-127,#0x00
   0247 81 00               560 	.db	#-127,#0x00
   0249 81 00               561 	.db	#-127,#0x00
   024B 81 00               562 	.db	#-127,#0x00
   024D D8 00               563 	.db	#-40,#0x00
   024F 00                  564 	.db	0
                            565 ;demo.c:198: volatile int vbicount=0;
   0250 FD 21r26s41         566 	ld	iy,#_vbicount
   0254 FD 36 00 00         567 	ld	0 (iy),#0x00
   0258 FD 21r26s41         568 	ld	iy,#_vbicount
   025C FD 36 01 00         569 	ld	1 (iy),#0x00
                            570 ;demo.c:199: volatile int tick=0;
   0260 FD 21r28s41         571 	ld	iy,#_tick
   0264 FD 36 00 00         572 	ld	0 (iy),#0x00
   0268 FD 21r28s41         573 	ld	iy,#_tick
   026C FD 36 01 00         574 	ld	1 (iy),#0x00
                            575 ;demo.c:204: void (*scenepointers[12])() = {
   0270 21r39s41            576 	ld	hl,#_scenepointers
   0273 36rDE               577 	ld	(hl),#<_waiter
   0275 23                  578 	inc	hl
   0276 36s35               579 	ld	(hl),#>_waiter
   0278 21r3Bs41            580 	ld	hl, #_scenepointers + 2
   027B 36r90               581 	ld	(hl),#<_logoeffu
   027D 23                  582 	inc	hl
   027E 36s2A               583 	ld	(hl),#>_logoeffu
   0280 01r3Ds41            584 	ld	bc,#_scenepointers + 4
   0283 69                  585 	ld	l,c
   0284 60                  586 	ld	h,b
   0285 36r83               587 	ld	(hl),#<_bulbs
   0287 23                  588 	inc	hl
   0288 36s14               589 	ld	(hl),#>_bulbs
   028A 21r3Fs41            590 	ld	hl, #_scenepointers + 6
   028D 36rE6               591 	ld	(hl),#<_twister
   028F 23                  592 	inc	hl
   0290 36s12               593 	ld	(hl),#>_twister
   0292 01r41s41            594 	ld	bc,#_scenepointers + 8
   0295 69                  595 	ld	l,c
   0296 60                  596 	ld	h,b
   0297 36r71               597 	ld	(hl),#<_boxes
   0299 23                  598 	inc	hl
   029A 36s17               599 	ld	(hl),#>_boxes
   029C 21r43s41            600 	ld	hl, #_scenepointers + 10
   029F 36r22               601 	ld	(hl),#<_thewave
   02A1 23                  602 	inc	hl
   02A2 36s1C               603 	ld	(hl),#>_thewave
   02A4 21r45s41            604 	ld	hl, #_scenepointers + 12
   02A7 36r43               605 	ld	(hl),#<_tritiles
   02A9 23                  606 	inc	hl
   02AA 36s24               607 	ld	(hl),#>_tritiles
   02AC 21r47s41            608 	ld	hl, #_scenepointers + 14
   02AF 36r3F               609 	ld	(hl),#<_points
   02B1 23                  610 	inc	hl
   02B2 36s2C               611 	ld	(hl),#>_points
   02B4 01r49s41            612 	ld	bc,#_scenepointers + 16
   02B7 69                  613 	ld	l,c
   02B8 60                  614 	ld	h,b
   02B9 36r26               615 	ld	(hl),#<_bigtext
   02BB 23                  616 	inc	hl
   02BC 36s30               617 	ld	(hl),#>_bigtext
   02BE 01r4Bs41            618 	ld	bc,#_scenepointers + 18
   02C1 69                  619 	ld	l,c
   02C2 60                  620 	ld	h,b
   02C3 36rDF               621 	ld	(hl),#<_credits
   02C5 23                  622 	inc	hl
   02C6 36s35               623 	ld	(hl),#>_credits
   02C8 01r4Ds41            624 	ld	bc,#_scenepointers + 20
   02CB 69                  625 	ld	l,c
   02CC 60                  626 	ld	h,b
   02CD 36r60               627 	ld	(hl),#<_do_quit
   02CF 23                  628 	inc	hl
   02D0 36s37               629 	ld	(hl),#>_do_quit
                            630 ;demo.c:218: int scenetimings[24] = {
   02D2 21r51s41            631 	ld	hl,#_scenetimings
   02D5 CDr00s00            632 	call	__initrleblock
   02D8 30                  633 	.db	48
   02D9 00 00 AA 00 AA 00   634 	.db	0x00, 0x00, 0xAA, 0x00, 0xAA, 0x00, 0x5E, 0x01
        5E 01
   02E1 EE 02 14 05 14 05   635 	.db	0xEE, 0x02, 0x14, 0x05, 0x14, 0x05, 0xFC, 0x08
        FC 08
   02E9 FC 08 10 0E 10 0E   636 	.db	0xFC, 0x08, 0x10, 0x0E, 0x10, 0x0E, 0x04, 0x10
        04 10
   02F1 04 10 AE 15 AE 15   637 	.db	0x04, 0x10, 0xAE, 0x15, 0xAE, 0x15, 0xD4, 0x17
        D4 17
   02F9 D4 17 A0 23 A0 23   638 	.db	0xD4, 0x17, 0xA0, 0x23, 0xA0, 0x23, 0x74, 0x27
        74 27
   0301 74 27 A0 86 00 00   639 	.db	0x74, 0x27, 0xA0, 0x86, 0x00, 0x00, 0x00, 0x00
        00 00
   0309 00                  640 	.db	0
                            641 ;demo.c:378: uint8_t yofff = 0;
   030A FD 21r89s41         642 	ld	iy,#_yofff
   030E FD 36 00 00         643 	ld	0 (iy),#0x00
                            644 ;demo.c:379: uint8_t cc = 0;
   0312 FD 21r8As41         645 	ld	iy,#_cc
   0316 FD 36 00 00         646 	ld	0 (iy),#0x00
                            647 ;demo.c:380: static int flipper = 0;
   031A FD 21r8Bs41         648 	ld	iy,#_flipper
   031E FD 36 00 00         649 	ld	0 (iy),#0x00
   0322 FD 21r8Bs41         650 	ld	iy,#_flipper
   0326 FD 36 01 00         651 	ld	1 (iy),#0x00
                            652 ;demo.c:381: static int ymmmf = 0;
   032A FD 21r8Ds41         653 	ld	iy,#_ymmmf
   032E FD 36 00 00         654 	ld	0 (iy),#0x00
   0332 FD 21r8Ds41         655 	ld	iy,#_ymmmf
   0336 FD 36 01 00         656 	ld	1 (iy),#0x00
                            657 ;demo.c:386: char block_init = 0;
   033A FD 21r8Fs41         658 	ld	iy,#_block_init
   033E FD 36 00 00         659 	ld	0 (iy),#0x00
                            660 ;demo.c:388: int bsx = 0;
   0342 FD 21r90s41         661 	ld	iy,#_bsx
   0346 FD 36 00 00         662 	ld	0 (iy),#0x00
   034A FD 21r90s41         663 	ld	iy,#_bsx
   034E FD 36 01 00         664 	ld	1 (iy),#0x00
                            665 ;demo.c:389: int bsy = 0;
   0352 FD 21r92s41         666 	ld	iy,#_bsy
   0356 FD 36 00 00         667 	ld	0 (iy),#0x00
   035A FD 21r92s41         668 	ld	iy,#_bsy
   035E FD 36 01 00         669 	ld	1 (iy),#0x00
                            670 ;demo.c:390: int btx = 0;
   0362 FD 21r94s41         671 	ld	iy,#_btx
   0366 FD 36 00 00         672 	ld	0 (iy),#0x00
   036A FD 21r94s41         673 	ld	iy,#_btx
   036E FD 36 01 00         674 	ld	1 (iy),#0x00
                            675 ;demo.c:391: int bty = 0;
   0372 FD 21r96s41         676 	ld	iy,#_bty
   0376 FD 36 00 00         677 	ld	0 (iy),#0x00
   037A FD 21r96s41         678 	ld	iy,#_bty
   037E FD 36 01 00         679 	ld	1 (iy),#0x00
                            680 ;demo.c:393: int btab[16] = {0};
   0382 21r98s41            681 	ld	hl,#_btab
   0385 CDr00s00            682 	call	__initrleblock
   0388 E0 00               683 	.db	#-32,#0x00
   038A 00                  684 	.db	0
                            685 ;demo.c:395: int flof = 0;
   038B FD 21rB8s41         686 	ld	iy,#_flof
   038F FD 36 00 00         687 	ld	0 (iy),#0x00
   0393 FD 21rB8s41         688 	ld	iy,#_flof
   0397 FD 36 01 00         689 	ld	1 (iy),#0x00
                            690 ;demo.c:400: int linenum = 0;
   039B FD 21rBAs41         691 	ld	iy,#_linenum
   039F FD 36 00 00         692 	ld	0 (iy),#0x00
   03A3 FD 21rBAs41         693 	ld	iy,#_linenum
   03A7 FD 36 01 00         694 	ld	1 (iy),#0x00
                            695 ;demo.c:430: uint8_t lx = 0;
   03AB FD 21rBCs41         696 	ld	iy,#_lx
   03AF FD 36 00 00         697 	ld	0 (iy),#0x00
                            698 ;demo.c:431: uint8_t ly = 0;
   03B3 FD 21rBDs41         699 	ld	iy,#_ly
   03B7 FD 36 00 00         700 	ld	0 (iy),#0x00
                            701 ;demo.c:516: int ltrpointer = 0;
   03BB FD 21rBEs41         702 	ld	iy,#_ltrpointer
   03BF FD 36 00 00         703 	ld	0 (iy),#0x00
   03C3 FD 21rBEs41         704 	ld	iy,#_ltrpointer
   03C7 FD 36 01 00         705 	ld	1 (iy),#0x00
                            706 ;demo.c:517: int slowend = 128;
   03CB FD 21rC0s41         707 	ld	iy,#_slowend
   03CF FD 36 00 80         708 	ld	0 (iy),#0x80
   03D3 FD 21rC0s41         709 	ld	iy,#_slowend
   03D7 FD 36 01 00         710 	ld	1 (iy),#0x00
                            711 ;demo.c:569: int ff = 0;
   03DB FD 21rC2s41         712 	ld	iy,#_ff
   03DF FD 36 00 00         713 	ld	0 (iy),#0x00
   03E3 FD 21rC2s41         714 	ld	iy,#_ff
   03E7 FD 36 01 00         715 	ld	1 (iy),#0x00
                            716 ;demo.c:570: int twinited = 0;
   03EB FD 21rC4s41         717 	ld	iy,#_twinited
   03EF FD 36 00 00         718 	ld	0 (iy),#0x00
   03F3 FD 21rC4s41         719 	ld	iy,#_twinited
   03F7 FD 36 01 00         720 	ld	1 (iy),#0x00
                            721 ;demo.c:622: int bulbflipper = 1;
   03FB FD 21rC6s41         722 	ld	iy,#_bulbflipper
   03FF FD 36 00 01         723 	ld	0 (iy),#0x01
   0403 FD 21rC6s41         724 	ld	iy,#_bulbflipper
   0407 FD 36 01 00         725 	ld	1 (iy),#0x00
                            726 ;demo.c:624: int ff1,ff2 = 0;
   040B FD 21rCAs41         727 	ld	iy,#_ff2
   040F FD 36 00 00         728 	ld	0 (iy),#0x00
   0413 FD 21rCAs41         729 	ld	iy,#_ff2
   0417 FD 36 01 00         730 	ld	1 (iy),#0x00
                            731 ;demo.c:625: int ender = 212;
   041B FD 21rCCs41         732 	ld	iy,#_ender
   041F FD 36 00 D4         733 	ld	0 (iy),#0xD4
   0423 FD 21rCCs41         734 	ld	iy,#_ender
   0427 FD 36 01 00         735 	ld	1 (iy),#0x00
                            736 ;demo.c:626: int enderdir = -1;
   042B FD 21rCEs41         737 	ld	iy,#_enderdir
   042F FD 36 00 FF         738 	ld	0 (iy),#0xFF
   0433 FD 21rCEs41         739 	ld	iy,#_enderdir
   0437 FD 36 01 FF         740 	ld	1 (iy),#0xFF
                            741 ;demo.c:627: int sy = 16;
   043B FD 21rD0s41         742 	ld	iy,#_sy
   043F FD 36 00 10         743 	ld	0 (iy),#0x10
   0443 FD 21rD0s41         744 	ld	iy,#_sy
   0447 FD 36 01 00         745 	ld	1 (iy),#0x00
                            746 ;demo.c:683: static int xo = 0;
   044B FD 21rD2s41         747 	ld	iy,#_xo
   044F FD 36 00 00         748 	ld	0 (iy),#0x00
   0453 FD 21rD2s41         749 	ld	iy,#_xo
   0457 FD 36 01 00         750 	ld	1 (iy),#0x00
                            751 ;demo.c:684: static int yo = 0;
   045B FD 21rD4s41         752 	ld	iy,#_yo
   045F FD 36 00 00         753 	ld	0 (iy),#0x00
   0463 FD 21rD4s41         754 	ld	iy,#_yo
   0467 FD 36 01 00         755 	ld	1 (iy),#0x00
                            756 ;demo.c:685: static int po = 0;
   046B FD 21rD6s41         757 	ld	iy,#_po
   046F FD 36 00 00         758 	ld	0 (iy),#0x00
   0473 FD 21rD6s41         759 	ld	iy,#_po
   0477 FD 36 01 00         760 	ld	1 (iy),#0x00
                            761 ;demo.c:686: static int frames = 0;
   047B FD 21rD8s41         762 	ld	iy,#_frames
   047F FD 36 00 00         763 	ld	0 (iy),#0x00
   0483 FD 21rD8s41         764 	ld	iy,#_frames
   0487 FD 36 01 00         765 	ld	1 (iy),#0x00
                            766 ;demo.c:688: int anim_init = 0;
   048B FD 21rDAs41         767 	ld	iy,#_anim_init
   048F FD 36 00 00         768 	ld	0 (iy),#0x00
   0493 FD 21rDAs41         769 	ld	iy,#_anim_init
   0497 FD 36 01 00         770 	ld	1 (iy),#0x00
                            771 ;demo.c:694: uint8_t boxes_init = 0;
   049B FD 21rDCs41         772 	ld	iy,#_boxes_init
   049F FD 36 00 00         773 	ld	0 (iy),#0x00
                            774 ;demo.c:695: int buffer = 1;
   04A3 FD 21rDDs41         775 	ld	iy,#_buffer
   04A7 FD 36 00 01         776 	ld	0 (iy),#0x01
   04AB FD 21rDDs41         777 	ld	iy,#_buffer
   04AF FD 36 01 00         778 	ld	1 (iy),#0x00
                            779 ;demo.c:696: int prevx = -1;
   04B3 FD 21rDFs41         780 	ld	iy,#_prevx
   04B7 FD 36 00 FF         781 	ld	0 (iy),#0xFF
   04BB FD 21rDFs41         782 	ld	iy,#_prevx
   04BF FD 36 01 FF         783 	ld	1 (iy),#0xFF
                            784 ;demo.c:698: uint8_t boxes_x[5] = {0,36,0,36,0};
   04C3 21rE3s41            785 	ld	hl,#_boxes_x
   04C6 CDr00s00            786 	call	__initrleblock
   04C9 05                  787 	.db	5
   04CA 00 24 00 24 00      788 	.db	0x00, 0x24, 0x00, 0x24, 0x00
   04CF 00                  789 	.db	0
                            790 ;demo.c:699: int boxes_y[5] = {768,768,768+36,768+36,0};
   04D0 21rE8s41            791 	ld	hl,#_boxes_y
   04D3 CDr00s00            792 	call	__initrleblock
   04D6 0A                  793 	.db	10
   04D7 00 03 00 03 24 03   794 	.db	0x00, 0x03, 0x00, 0x03, 0x24, 0x03, 0x24, 0x03
        24 03
   04DF 00 00               795 	.db	0x00, 0x00
   04E1 00                  796 	.db	0
                            797 ;demo.c:700: uint8_t boxi = 0;
   04E2 FD 21rF2s41         798 	ld	iy,#_boxi
   04E6 FD 36 00 00         799 	ld	0 (iy),#0x00
                            800 ;demo.c:701: int bx = 220;
   04EA FD 21rF3s41         801 	ld	iy,#_bx
   04EE FD 36 00 DC         802 	ld	0 (iy),#0xDC
   04F2 FD 21rF3s41         803 	ld	iy,#_bx
   04F6 FD 36 01 00         804 	ld	1 (iy),#0x00
                            805 ;demo.c:702: int by = 84;
   04FA FD 21rF5s41         806 	ld	iy,#_by
   04FE FD 36 00 54         807 	ld	0 (iy),#0x54
   0502 FD 21rF5s41         808 	ld	iy,#_by
   0506 FD 36 01 00         809 	ld	1 (iy),#0x00
                            810 ;demo.c:720: int bt = 0;
   050A FD 21rF7s41         811 	ld	iy,#_bt
   050E FD 36 00 00         812 	ld	0 (iy),#0x00
   0512 FD 21rF7s41         813 	ld	iy,#_bt
   0516 FD 36 01 00         814 	ld	1 (iy),#0x00
                            815 ;demo.c:721: int bo = 0;
   051A FD 21rF9s41         816 	ld	iy,#_bo
   051E FD 36 00 00         817 	ld	0 (iy),#0x00
   0522 FD 21rF9s41         818 	ld	iy,#_bo
   0526 FD 36 01 00         819 	ld	1 (iy),#0x00
                            820 ;demo.c:723: int bonc = 0;
   052A FD 21rFBs41         821 	ld	iy,#_bonc
   052E FD 36 00 00         822 	ld	0 (iy),#0x00
   0532 FD 21rFBs41         823 	ld	iy,#_bonc
   0536 FD 36 01 00         824 	ld	1 (iy),#0x00
                            825 ;demo.c:724: int pbx = 0;
   053A FD 21rFDs41         826 	ld	iy,#_pbx
   053E FD 36 00 00         827 	ld	0 (iy),#0x00
   0542 FD 21rFDs41         828 	ld	iy,#_pbx
   0546 FD 36 01 00         829 	ld	1 (iy),#0x00
                            830 ;demo.c:725: int pbt = 0;
   054A FD 21rFFs41         831 	ld	iy,#_pbt
   054E FD 36 00 00         832 	ld	0 (iy),#0x00
   0552 FD 21rFFs41         833 	ld	iy,#_pbt
   0556 FD 36 01 00         834 	ld	1 (iy),#0x00
                            835 ;demo.c:727: int boxes_of[5] = {0,0,6,0,0};
   055A 21r01s42            836 	ld	hl,#_boxes_of
   055D CDr00s00            837 	call	__initrleblock
   0560 05                  838 	.db	5
   0561 00 00 00 00 06      839 	.db	0x00, 0x00, 0x00, 0x00, 0x06
   0566 FB 00               840 	.db	#-5,#0x00
   0568 00                  841 	.db	0
                            842 ;demo.c:728: uint8_t prevbox_of = 0;
   0569 FD 21r0Bs42         843 	ld	iy,#_prevbox_of
   056D FD 36 00 00         844 	ld	0 (iy),#0x00
                            845 ;demo.c:845: uint8_t initwave = 0;
   0571 FD 21r0Cs42         846 	ld	iy,#_initwave
   0575 FD 36 00 00         847 	ld	0 (iy),#0x00
                            848 ;demo.c:846: int buf = -1;
   0579 FD 21r0Ds42         849 	ld	iy,#_buf
   057D FD 36 00 FF         850 	ld	0 (iy),#0xFF
   0581 FD 21r0Ds42         851 	ld	iy,#_buf
   0585 FD 36 01 FF         852 	ld	1 (iy),#0xFF
                            853 ;demo.c:847: int ffa = 0;
   0589 FD 21r0Fs42         854 	ld	iy,#_ffa
   058D FD 36 00 00         855 	ld	0 (iy),#0x00
   0591 FD 21r0Fs42         856 	ld	iy,#_ffa
   0595 FD 36 01 00         857 	ld	1 (iy),#0x00
                            858 ;demo.c:969: uint8_t tri_inited = 0;
   0599 FD 21r11s42         859 	ld	iy,#_tri_inited
   059D FD 36 00 00         860 	ld	0 (iy),#0x00
                            861 ;demo.c:984: int tilei = 0;
   05A1 FD 21r12s42         862 	ld	iy,#_tilei
   05A5 FD 36 00 00         863 	ld	0 (iy),#0x00
   05A9 FD 21r12s42         864 	ld	iy,#_tilei
   05AD FD 36 01 00         865 	ld	1 (iy),#0x00
                            866 ;demo.c:985: int tilex = 0;
   05B1 FD 21r14s42         867 	ld	iy,#_tilex
   05B5 FD 36 00 00         868 	ld	0 (iy),#0x00
   05B9 FD 21r14s42         869 	ld	iy,#_tilex
   05BD FD 36 01 00         870 	ld	1 (iy),#0x00
                            871 ;demo.c:986: int tiley = 0;
   05C1 FD 21r16s42         872 	ld	iy,#_tiley
   05C5 FD 36 00 00         873 	ld	0 (iy),#0x00
   05C9 FD 21r16s42         874 	ld	iy,#_tiley
   05CD FD 36 01 00         875 	ld	1 (iy),#0x00
                            876 ;demo.c:987: uint8_t tiletick = 0;
   05D1 FD 21r18s42         877 	ld	iy,#_tiletick
   05D5 FD 36 00 00         878 	ld	0 (iy),#0x00
                            879 ;demo.c:1017: char tripal[9] = {
   05D9 21r19s42            880 	ld	hl,#_tripal
   05DC CDr00s00            881 	call	__initrleblock
   05DF 09                  882 	.db	9
   05E0 02 02 01 01 02 03   883 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   05E8 02                  884 	.db	0x02
   05E9 00                  885 	.db	0
                            886 ;demo.c:1023: uint8_t tripaltick = 0;
   05EA FD 21r22s42         887 	ld	iy,#_tripaltick
   05EE FD 36 00 00         888 	ld	0 (iy),#0x00
                            889 ;demo.c:1024: uint8_t tripaltick2 = 0;
   05F2 FD 21r23s42         890 	ld	iy,#_tripaltick2
   05F6 FD 36 00 00         891 	ld	0 (iy),#0x00
                            892 ;demo.c:1026: int triframes = 0;
   05FA FD 21r24s42         893 	ld	iy,#_triframes
   05FE FD 36 00 00         894 	ld	0 (iy),#0x00
   0602 FD 21r24s42         895 	ld	iy,#_triframes
   0606 FD 36 01 00         896 	ld	1 (iy),#0x00
                            897 ;demo.c:1180: int powatick = 0;
   060A FD 21r26s42         898 	ld	iy,#_powatick
   060E FD 36 00 00         899 	ld	0 (iy),#0x00
   0612 FD 21r26s42         900 	ld	iy,#_powatick
   0616 FD 36 01 00         901 	ld	1 (iy),#0x00
                            902 ;demo.c:1181: int powa = 0;
   061A FD 21r28s42         903 	ld	iy,#_powa
   061E FD 36 00 00         904 	ld	0 (iy),#0x00
   0622 FD 21r28s42         905 	ld	iy,#_powa
   0626 FD 36 01 00         906 	ld	1 (iy),#0x00
                            907 ;demo.c:1182: uint8_t onceclear = 255;
   062A FD 21r2As42         908 	ld	iy,#_onceclear
   062E FD 36 00 FF         909 	ld	0 (iy),#0xFF
                            910 ;demo.c:1227: uint8_t initpoints = 0;
   0632 FD 21r2Bs42         911 	ld	iy,#_initpoints
   0636 FD 36 00 00         912 	ld	0 (iy),#0x00
                            913 ;demo.c:1228: int pointframe = 0;
   063A FD 21r2Cs42         914 	ld	iy,#_pointframe
   063E FD 36 00 00         915 	ld	0 (iy),#0x00
   0642 FD 21r2Cs42         916 	ld	iy,#_pointframe
   0646 FD 36 01 00         917 	ld	1 (iy),#0x00
                            918 ;demo.c:1231: int greetindex = 0;
   064A FD 21r2Es42         919 	ld	iy,#_greetindex
   064E FD 36 00 00         920 	ld	0 (iy),#0x00
   0652 FD 21r2Es42         921 	ld	iy,#_greetindex
   0656 FD 36 01 00         922 	ld	1 (iy),#0x00
                            923 ;demo.c:1326: int bigtextp = 0;
   065A FD 21r30s42         924 	ld	iy,#_bigtextp
   065E FD 36 00 00         925 	ld	0 (iy),#0x00
   0662 FD 21r30s42         926 	ld	iy,#_bigtextp
   0666 FD 36 01 00         927 	ld	1 (iy),#0x00
                            928 ;demo.c:1465: int initcredits = 0;
   066A FD 21r32s42         929 	ld	iy,#_initcredits
   066E FD 36 00 00         930 	ld	0 (iy),#0x00
   0672 FD 21r32s42         931 	ld	iy,#_initcredits
   0676 FD 36 01 00         932 	ld	1 (iy),#0x00
                            933 ;demo.c:1466: int credittimer = 0;
   067A FD 21r34s42         934 	ld	iy,#_credittimer
   067E FD 36 00 00         935 	ld	0 (iy),#0x00
   0682 FD 21r34s42         936 	ld	iy,#_credittimer
   0686 FD 36 01 00         937 	ld	1 (iy),#0x00
                            938 ;demo.c:1553: int sceneindex = 0;
   068A FD 21r36s42         939 	ld	iy,#_sceneindex
   068E FD 36 00 00         940 	ld	0 (iy),#0x00
   0692 FD 21r36s42         941 	ld	iy,#_sceneindex
   0696 FD 36 01 00         942 	ld	1 (iy),#0x00
                            943 ;demo.c:1554: int timeindex = 0;
   069A FD 21r38s42         944 	ld	iy,#_timeindex
   069E FD 36 00 00         945 	ld	0 (iy),#0x00
   06A2 FD 21r38s42         946 	ld	iy,#_timeindex
   06A6 FD 36 01 00         947 	ld	1 (iy),#0x00
                            948 ;--------------------------------------------------------
                            949 ; Home
                            950 ;--------------------------------------------------------
                            951 	.area _HOME
                            952 	.area _HOME
                            953 ;--------------------------------------------------------
                            954 ; code
                            955 ;--------------------------------------------------------
                            956 	.area _CODE
                            957 ;demo.c:234: int isNthBitSet (unsigned char c, int n) {
                            958 ;	---------------------------------
                            959 ; Function isNthBitSet
                            960 ; ---------------------------------
   0000                     961 _isNthBitSet_start::
   0000                     962 _isNthBitSet:
   0000 DD E5               963 	push	ix
   0002 DD 21 00 00         964 	ld	ix,#0
   0006 DD 39               965 	add	ix,sp
                            966 ;demo.c:236: return ((c & mask[n]) != 0);
   0008 3Er81               967 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            968 	add	a,5 (ix)
   000D 4F                  969 	ld	c,a
   000E 3Es41               970 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            971 	adc	a,6 (ix)
   0013 47                  972 	ld	b,a
   0014 0A                  973 	ld	a,(bc)
   0015 DD A6 04            974 	and	a,4 (ix)
   0018 20 04               975 	jr	NZ,00103$
   001A 3E 01               976 	ld	a,#0x01
   001C 18 01               977 	jr	00104$
   001E                     978 00103$:
   001E AF                  979 	xor	a,a
   001F                     980 00104$:
   001F B7                  981 	or	a,a
   0020 D6 01               982 	sub	a,#0x01
   0022 3E 00               983 	ld	a,#0x00
   0024 17                  984 	rla
   0025 4F                  985 	ld	c,a
   0026 69                  986 	ld	l,c
   0027 26 00               987 	ld	h,#0x00
   0029 DD E1               988 	pop	ix
   002B C9                  989 	ret
   002C                     990 _isNthBitSet_end::
   002C                     991 _sintabx:
   002C 78                  992 	.db #0x78
   002D 7A                  993 	.db #0x7A
   002E 7D                  994 	.db #0x7D
   002F 80                  995 	.db #0x80
   0030 83                  996 	.db #0x83
   0031 86                  997 	.db #0x86
   0032 89                  998 	.db #0x89
   0033 8C                  999 	.db #0x8C
   0034 8F                 1000 	.db #0x8F
   0035 92                 1001 	.db #0x92
   0036 95                 1002 	.db #0x95
   0037 98                 1003 	.db #0x98
   0038 9A                 1004 	.db #0x9A
   0039 9D                 1005 	.db #0x9D
   003A A0                 1006 	.db #0xA0
   003B A3                 1007 	.db #0xA3
   003C A5                 1008 	.db #0xA5
   003D A8                 1009 	.db #0xA8
   003E AB                 1010 	.db #0xAB
   003F AD                 1011 	.db #0xAD
   0040 B0                 1012 	.db #0xB0
   0041 B3                 1013 	.db #0xB3
   0042 B5                 1014 	.db #0xB5
   0043 B8                 1015 	.db #0xB8
   0044 BA                 1016 	.db #0xBA
   0045 BD                 1017 	.db #0xBD
   0046 BF                 1018 	.db #0xBF
   0047 C1                 1019 	.db #0xC1
   0048 C4                 1020 	.db #0xC4
   0049 C6                 1021 	.db #0xC6
   004A C8                 1022 	.db #0xC8
   004B CA                 1023 	.db #0xCA
   004C CC                 1024 	.db #0xCC
   004D CE                 1025 	.db #0xCE
   004E D0                 1026 	.db #0xD0
   004F D2                 1027 	.db #0xD2
   0050 D4                 1028 	.db #0xD4
   0051 D6                 1029 	.db #0xD6
   0052 D8                 1030 	.db #0xD8
   0053 DA                 1031 	.db #0xDA
   0054 DB                 1032 	.db #0xDB
   0055 DD                 1033 	.db #0xDD
   0056 DE                 1034 	.db #0xDE
   0057 E0                 1035 	.db #0xE0
   0058 E1                 1036 	.db #0xE1
   0059 E3                 1037 	.db #0xE3
   005A E4                 1038 	.db #0xE4
   005B E5                 1039 	.db #0xE5
   005C E6                 1040 	.db #0xE6
   005D E7                 1041 	.db #0xE7
   005E E8                 1042 	.db #0xE8
   005F E9                 1043 	.db #0xE9
   0060 EA                 1044 	.db #0xEA
   0061 EB                 1045 	.db #0xEB
   0062 EC                 1046 	.db #0xEC
   0063 ED                 1047 	.db #0xED
   0064 ED                 1048 	.db #0xED
   0065 EE                 1049 	.db #0xEE
   0066 EE                 1050 	.db #0xEE
   0067 EF                 1051 	.db #0xEF
   0068 EF                 1052 	.db #0xEF
   0069 EF                 1053 	.db #0xEF
   006A EF                 1054 	.db #0xEF
   006B EF                 1055 	.db #0xEF
   006C F0                 1056 	.db #0xF0
   006D EF                 1057 	.db #0xEF
   006E EF                 1058 	.db #0xEF
   006F EF                 1059 	.db #0xEF
   0070 EF                 1060 	.db #0xEF
   0071 EF                 1061 	.db #0xEF
   0072 EE                 1062 	.db #0xEE
   0073 EE                 1063 	.db #0xEE
   0074 ED                 1064 	.db #0xED
   0075 ED                 1065 	.db #0xED
   0076 EC                 1066 	.db #0xEC
   0077 EB                 1067 	.db #0xEB
   0078 EA                 1068 	.db #0xEA
   0079 E9                 1069 	.db #0xE9
   007A E8                 1070 	.db #0xE8
   007B E7                 1071 	.db #0xE7
   007C E6                 1072 	.db #0xE6
   007D E5                 1073 	.db #0xE5
   007E E4                 1074 	.db #0xE4
   007F E3                 1075 	.db #0xE3
   0080 E1                 1076 	.db #0xE1
   0081 E0                 1077 	.db #0xE0
   0082 DE                 1078 	.db #0xDE
   0083 DD                 1079 	.db #0xDD
   0084 DB                 1080 	.db #0xDB
   0085 DA                 1081 	.db #0xDA
   0086 D8                 1082 	.db #0xD8
   0087 D6                 1083 	.db #0xD6
   0088 D4                 1084 	.db #0xD4
   0089 D2                 1085 	.db #0xD2
   008A D0                 1086 	.db #0xD0
   008B CE                 1087 	.db #0xCE
   008C CC                 1088 	.db #0xCC
   008D CA                 1089 	.db #0xCA
   008E C8                 1090 	.db #0xC8
   008F C6                 1091 	.db #0xC6
   0090 C4                 1092 	.db #0xC4
   0091 C1                 1093 	.db #0xC1
   0092 BF                 1094 	.db #0xBF
   0093 BD                 1095 	.db #0xBD
   0094 BA                 1096 	.db #0xBA
   0095 B8                 1097 	.db #0xB8
   0096 B5                 1098 	.db #0xB5
   0097 B3                 1099 	.db #0xB3
   0098 B0                 1100 	.db #0xB0
   0099 AD                 1101 	.db #0xAD
   009A AB                 1102 	.db #0xAB
   009B A8                 1103 	.db #0xA8
   009C A5                 1104 	.db #0xA5
   009D A3                 1105 	.db #0xA3
   009E A0                 1106 	.db #0xA0
   009F 9D                 1107 	.db #0x9D
   00A0 9A                 1108 	.db #0x9A
   00A1 98                 1109 	.db #0x98
   00A2 95                 1110 	.db #0x95
   00A3 92                 1111 	.db #0x92
   00A4 8F                 1112 	.db #0x8F
   00A5 8C                 1113 	.db #0x8C
   00A6 89                 1114 	.db #0x89
   00A7 86                 1115 	.db #0x86
   00A8 83                 1116 	.db #0x83
   00A9 80                 1117 	.db #0x80
   00AA 7D                 1118 	.db #0x7D
   00AB 7A                 1119 	.db #0x7A
   00AC 78                 1120 	.db #0x78
   00AD 75                 1121 	.db #0x75
   00AE 72                 1122 	.db #0x72
   00AF 6F                 1123 	.db #0x6F
   00B0 6C                 1124 	.db #0x6C
   00B1 69                 1125 	.db #0x69
   00B2 66                 1126 	.db #0x66
   00B3 63                 1127 	.db #0x63
   00B4 60                 1128 	.db #0x60
   00B5 5D                 1129 	.db #0x5D
   00B6 5A                 1130 	.db #0x5A
   00B7 57                 1131 	.db #0x57
   00B8 55                 1132 	.db #0x55
   00B9 52                 1133 	.db #0x52
   00BA 4F                 1134 	.db #0x4F
   00BB 4C                 1135 	.db #0x4C
   00BC 4A                 1136 	.db #0x4A
   00BD 47                 1137 	.db #0x47
   00BE 44                 1138 	.db #0x44
   00BF 42                 1139 	.db #0x42
   00C0 3F                 1140 	.db #0x3F
   00C1 3C                 1141 	.db #0x3C
   00C2 3A                 1142 	.db #0x3A
   00C3 37                 1143 	.db #0x37
   00C4 35                 1144 	.db #0x35
   00C5 32                 1145 	.db #0x32
   00C6 30                 1146 	.db #0x30
   00C7 2E                 1147 	.db #0x2E
   00C8 2B                 1148 	.db #0x2B
   00C9 29                 1149 	.db #0x29
   00CA 27                 1150 	.db #0x27
   00CB 25                 1151 	.db #0x25
   00CC 23                 1152 	.db #0x23
   00CD 21                 1153 	.db #0x21
   00CE 1F                 1154 	.db #0x1F
   00CF 1D                 1155 	.db #0x1D
   00D0 1B                 1156 	.db #0x1B
   00D1 19                 1157 	.db #0x19
   00D2 17                 1158 	.db #0x17
   00D3 15                 1159 	.db #0x15
   00D4 14                 1160 	.db #0x14
   00D5 12                 1161 	.db #0x12
   00D6 11                 1162 	.db #0x11
   00D7 0F                 1163 	.db #0x0F
   00D8 0E                 1164 	.db #0x0E
   00D9 0C                 1165 	.db #0x0C
   00DA 0B                 1166 	.db #0x0B
   00DB 0A                 1167 	.db #0x0A
   00DC 09                 1168 	.db #0x09
   00DD 08                 1169 	.db #0x08
   00DE 07                 1170 	.db #0x07
   00DF 06                 1171 	.db #0x06
   00E0 05                 1172 	.db #0x05
   00E1 04                 1173 	.db #0x04
   00E2 03                 1174 	.db #0x03
   00E3 02                 1175 	.db #0x02
   00E4 02                 1176 	.db #0x02
   00E5 01                 1177 	.db #0x01
   00E6 01                 1178 	.db #0x01
   00E7 00                 1179 	.db #0x00
   00E8 00                 1180 	.db #0x00
   00E9 00                 1181 	.db #0x00
   00EA 00                 1182 	.db #0x00
   00EB 00                 1183 	.db #0x00
   00EC 00                 1184 	.db #0x00
   00ED 00                 1185 	.db #0x00
   00EE 00                 1186 	.db #0x00
   00EF 00                 1187 	.db #0x00
   00F0 00                 1188 	.db #0x00
   00F1 00                 1189 	.db #0x00
   00F2 01                 1190 	.db #0x01
   00F3 01                 1191 	.db #0x01
   00F4 02                 1192 	.db #0x02
   00F5 02                 1193 	.db #0x02
   00F6 03                 1194 	.db #0x03
   00F7 04                 1195 	.db #0x04
   00F8 05                 1196 	.db #0x05
   00F9 06                 1197 	.db #0x06
   00FA 07                 1198 	.db #0x07
   00FB 08                 1199 	.db #0x08
   00FC 09                 1200 	.db #0x09
   00FD 0A                 1201 	.db #0x0A
   00FE 0B                 1202 	.db #0x0B
   00FF 0C                 1203 	.db #0x0C
   0100 0E                 1204 	.db #0x0E
   0101 0F                 1205 	.db #0x0F
   0102 11                 1206 	.db #0x11
   0103 12                 1207 	.db #0x12
   0104 14                 1208 	.db #0x14
   0105 15                 1209 	.db #0x15
   0106 17                 1210 	.db #0x17
   0107 19                 1211 	.db #0x19
   0108 1B                 1212 	.db #0x1B
   0109 1D                 1213 	.db #0x1D
   010A 1F                 1214 	.db #0x1F
   010B 21                 1215 	.db #0x21
   010C 23                 1216 	.db #0x23
   010D 25                 1217 	.db #0x25
   010E 27                 1218 	.db #0x27
   010F 29                 1219 	.db #0x29
   0110 2B                 1220 	.db #0x2B
   0111 2E                 1221 	.db #0x2E
   0112 30                 1222 	.db #0x30
   0113 32                 1223 	.db #0x32
   0114 35                 1224 	.db #0x35
   0115 37                 1225 	.db #0x37
   0116 3A                 1226 	.db #0x3A
   0117 3C                 1227 	.db #0x3C
   0118 3F                 1228 	.db #0x3F
   0119 42                 1229 	.db #0x42
   011A 44                 1230 	.db #0x44
   011B 47                 1231 	.db #0x47
   011C 4A                 1232 	.db #0x4A
   011D 4C                 1233 	.db #0x4C
   011E 4F                 1234 	.db #0x4F
   011F 52                 1235 	.db #0x52
   0120 55                 1236 	.db #0x55
   0121 57                 1237 	.db #0x57
   0122 5A                 1238 	.db #0x5A
   0123 5D                 1239 	.db #0x5D
   0124 60                 1240 	.db #0x60
   0125 63                 1241 	.db #0x63
   0126 66                 1242 	.db #0x66
   0127 69                 1243 	.db #0x69
   0128 6C                 1244 	.db #0x6C
   0129 6F                 1245 	.db #0x6F
   012A 72                 1246 	.db #0x72
   012B 75                 1247 	.db #0x75
   012C                    1248 _tri_center:
   012C 08                 1249 	.db #0x08
   012D 0A                 1250 	.db #0x0A
   012E 12                 1251 	.db #0x12
   012F 10                 1252 	.db #0x10
   0130 00                 1253 	.db #0x00
   0131 02                 1254 	.db #0x02
   0132 08                 1255 	.db #0x08
   0133 0A                 1256 	.db #0x0A
   0134 0B                 1257 	.db #0x0B
   0135 09                 1258 	.db #0x09
   0136 03                 1259 	.db #0x03
   0137 01                 1260 	.db #0x01
   0138 11                 1261 	.db #0x11
   0139 13                 1262 	.db #0x13
   013A 0B                 1263 	.db #0x0B
   013B 09                 1264 	.db #0x09
   013C 0A                 1265 	.db #0x0A
   013D 12                 1266 	.db #0x12
   013E 10                 1267 	.db #0x10
   013F 00                 1268 	.db #0x00
   0140 02                 1269 	.db #0x02
   0141 08                 1270 	.db #0x08
   0142 0A                 1271 	.db #0x0A
   0143 12                 1272 	.db #0x12
   0144 13                 1273 	.db #0x13
   0145 0B                 1274 	.db #0x0B
   0146 09                 1275 	.db #0x09
   0147 03                 1276 	.db #0x03
   0148 01                 1277 	.db #0x01
   0149 11                 1278 	.db #0x11
   014A 13                 1279 	.db #0x13
   014B 0B                 1280 	.db #0x0B
   014C 12                 1281 	.db #0x12
   014D 10                 1282 	.db #0x10
   014E 00                 1283 	.db #0x00
   014F 02                 1284 	.db #0x02
   0150 08                 1285 	.db #0x08
   0151 0A                 1286 	.db #0x0A
   0152 12                 1287 	.db #0x12
   0153 10                 1288 	.db #0x10
   0154 11                 1289 	.db #0x11
   0155 13                 1290 	.db #0x13
   0156 0B                 1291 	.db #0x0B
   0157 09                 1292 	.db #0x09
   0158 03                 1293 	.db #0x03
   0159 01                 1294 	.db #0x01
   015A 11                 1295 	.db #0x11
   015B 13                 1296 	.db #0x13
   015C 10                 1297 	.db #0x10
   015D 00                 1298 	.db #0x00
   015E 02                 1299 	.db #0x02
   015F 08                 1300 	.db #0x08
   0160 0A                 1301 	.db #0x0A
   0161 12                 1302 	.db #0x12
   0162 10                 1303 	.db #0x10
   0163 00                 1304 	.db #0x00
   0164 01                 1305 	.db #0x01
   0165 11                 1306 	.db #0x11
   0166 13                 1307 	.db #0x13
   0167 0B                 1308 	.db #0x0B
   0168 09                 1309 	.db #0x09
   0169 03                 1310 	.db #0x03
   016A 01                 1311 	.db #0x01
   016B 11                 1312 	.db #0x11
   016C 00                 1313 	.db #0x00
   016D 02                 1314 	.db #0x02
   016E 08                 1315 	.db #0x08
   016F 0A                 1316 	.db #0x0A
   0170 12                 1317 	.db #0x12
   0171 10                 1318 	.db #0x10
   0172 00                 1319 	.db #0x00
   0173 02                 1320 	.db #0x02
   0174 03                 1321 	.db #0x03
   0175 01                 1322 	.db #0x01
   0176 11                 1323 	.db #0x11
   0177 13                 1324 	.db #0x13
   0178 0B                 1325 	.db #0x0B
   0179 09                 1326 	.db #0x09
   017A 03                 1327 	.db #0x03
   017B 01                 1328 	.db #0x01
   017C 02                 1329 	.db #0x02
   017D 08                 1330 	.db #0x08
   017E 0A                 1331 	.db #0x0A
   017F 12                 1332 	.db #0x12
   0180 10                 1333 	.db #0x10
   0181 00                 1334 	.db #0x00
   0182 02                 1335 	.db #0x02
   0183 08                 1336 	.db #0x08
   0184 09                 1337 	.db #0x09
   0185 03                 1338 	.db #0x03
   0186 01                 1339 	.db #0x01
   0187 11                 1340 	.db #0x11
   0188 13                 1341 	.db #0x13
   0189 0B                 1342 	.db #0x0B
   018A 09                 1343 	.db #0x09
   018B 03                 1344 	.db #0x03
   018C 01                 1345 	.db #0x01
   018D 0B                 1346 	.db #0x0B
   018E 09                 1347 	.db #0x09
   018F 11                 1348 	.db #0x11
   0190 13                 1349 	.db #0x13
   0191 03                 1350 	.db #0x03
   0192 01                 1351 	.db #0x01
   0193 0B                 1352 	.db #0x0B
   0194 0A                 1353 	.db #0x0A
   0195 00                 1354 	.db #0x00
   0196 02                 1355 	.db #0x02
   0197 12                 1356 	.db #0x12
   0198 10                 1357 	.db #0x10
   0199 08                 1358 	.db #0x08
   019A 0A                 1359 	.db #0x0A
   019B 00                 1360 	.db #0x00
   019C 03                 1361 	.db #0x03
   019D 01                 1362 	.db #0x01
   019E 0B                 1363 	.db #0x0B
   019F 09                 1364 	.db #0x09
   01A0 11                 1365 	.db #0x11
   01A1 13                 1366 	.db #0x13
   01A2 03                 1367 	.db #0x03
   01A3 01                 1368 	.db #0x01
   01A4 00                 1369 	.db #0x00
   01A5 02                 1370 	.db #0x02
   01A6 12                 1371 	.db #0x12
   01A7 10                 1372 	.db #0x10
   01A8 08                 1373 	.db #0x08
   01A9 0A                 1374 	.db #0x0A
   01AA 00                 1375 	.db #0x00
   01AB 02                 1376 	.db #0x02
   01AC 13                 1377 	.db #0x13
   01AD 03                 1378 	.db #0x03
   01AE 01                 1379 	.db #0x01
   01AF 0B                 1380 	.db #0x0B
   01B0 09                 1381 	.db #0x09
   01B1 11                 1382 	.db #0x11
   01B2 13                 1383 	.db #0x13
   01B3 03                 1384 	.db #0x03
   01B4 02                 1385 	.db #0x02
   01B5 12                 1386 	.db #0x12
   01B6 10                 1387 	.db #0x10
   01B7 08                 1388 	.db #0x08
   01B8 0A                 1389 	.db #0x0A
   01B9 00                 1390 	.db #0x00
   01BA 02                 1391 	.db #0x02
   01BB 12                 1392 	.db #0x12
   01BC 11                 1393 	.db #0x11
   01BD 13                 1394 	.db #0x13
   01BE 03                 1395 	.db #0x03
   01BF 01                 1396 	.db #0x01
   01C0 0B                 1397 	.db #0x0B
   01C1 09                 1398 	.db #0x09
   01C2 11                 1399 	.db #0x11
   01C3 13                 1400 	.db #0x13
   01C4 12                 1401 	.db #0x12
   01C5 10                 1402 	.db #0x10
   01C6 08                 1403 	.db #0x08
   01C7 0A                 1404 	.db #0x0A
   01C8 00                 1405 	.db #0x00
   01C9 02                 1406 	.db #0x02
   01CA 12                 1407 	.db #0x12
   01CB 10                 1408 	.db #0x10
   01CC 09                 1409 	.db #0x09
   01CD 11                 1410 	.db #0x11
   01CE 13                 1411 	.db #0x13
   01CF 03                 1412 	.db #0x03
   01D0 01                 1413 	.db #0x01
   01D1 0B                 1414 	.db #0x0B
   01D2 09                 1415 	.db #0x09
   01D3 11                 1416 	.db #0x11
   01D4 10                 1417 	.db #0x10
   01D5 08                 1418 	.db #0x08
   01D6 0A                 1419 	.db #0x0A
   01D7 00                 1420 	.db #0x00
   01D8 02                 1421 	.db #0x02
   01D9 12                 1422 	.db #0x12
   01DA 10                 1423 	.db #0x10
   01DB 08                 1424 	.db #0x08
   01DC 0B                 1425 	.db #0x0B
   01DD 09                 1426 	.db #0x09
   01DE 11                 1427 	.db #0x11
   01DF 13                 1428 	.db #0x13
   01E0 03                 1429 	.db #0x03
   01E1 01                 1430 	.db #0x01
   01E2 0B                 1431 	.db #0x0B
   01E3 09                 1432 	.db #0x09
   01E4 08                 1433 	.db #0x08
   01E5 0A                 1434 	.db #0x0A
   01E6 00                 1435 	.db #0x00
   01E7 02                 1436 	.db #0x02
   01E8 12                 1437 	.db #0x12
   01E9 10                 1438 	.db #0x10
   01EA 08                 1439 	.db #0x08
   01EB 0A                 1440 	.db #0x0A
   01EC                    1441 _tri_up:
   01EC 0A                 1442 	.db #0x0A
   01ED 12                 1443 	.db #0x12
   01EE 10                 1444 	.db #0x10
   01EF 00                 1445 	.db #0x00
   01F0 02                 1446 	.db #0x02
   01F1 08                 1447 	.db #0x08
   01F2 0A                 1448 	.db #0x0A
   01F3 12                 1449 	.db #0x12
   01F4 13                 1450 	.db #0x13
   01F5 0B                 1451 	.db #0x0B
   01F6 09                 1452 	.db #0x09
   01F7 03                 1453 	.db #0x03
   01F8 01                 1454 	.db #0x01
   01F9 11                 1455 	.db #0x11
   01FA 13                 1456 	.db #0x13
   01FB 0B                 1457 	.db #0x0B
   01FC 12                 1458 	.db #0x12
   01FD 10                 1459 	.db #0x10
   01FE 00                 1460 	.db #0x00
   01FF 02                 1461 	.db #0x02
   0200 08                 1462 	.db #0x08
   0201 0A                 1463 	.db #0x0A
   0202 12                 1464 	.db #0x12
   0203 10                 1465 	.db #0x10
   0204 11                 1466 	.db #0x11
   0205 13                 1467 	.db #0x13
   0206 0B                 1468 	.db #0x0B
   0207 09                 1469 	.db #0x09
   0208 03                 1470 	.db #0x03
   0209 01                 1471 	.db #0x01
   020A 11                 1472 	.db #0x11
   020B 13                 1473 	.db #0x13
   020C 10                 1474 	.db #0x10
   020D 00                 1475 	.db #0x00
   020E 02                 1476 	.db #0x02
   020F 08                 1477 	.db #0x08
   0210 0A                 1478 	.db #0x0A
   0211 12                 1479 	.db #0x12
   0212 10                 1480 	.db #0x10
   0213 00                 1481 	.db #0x00
   0214 01                 1482 	.db #0x01
   0215 11                 1483 	.db #0x11
   0216 13                 1484 	.db #0x13
   0217 0B                 1485 	.db #0x0B
   0218 09                 1486 	.db #0x09
   0219 03                 1487 	.db #0x03
   021A 01                 1488 	.db #0x01
   021B 11                 1489 	.db #0x11
   021C 00                 1490 	.db #0x00
   021D 02                 1491 	.db #0x02
   021E 08                 1492 	.db #0x08
   021F 0A                 1493 	.db #0x0A
   0220 12                 1494 	.db #0x12
   0221 10                 1495 	.db #0x10
   0222 00                 1496 	.db #0x00
   0223 02                 1497 	.db #0x02
   0224 03                 1498 	.db #0x03
   0225 01                 1499 	.db #0x01
   0226 11                 1500 	.db #0x11
   0227 13                 1501 	.db #0x13
   0228 0B                 1502 	.db #0x0B
   0229 09                 1503 	.db #0x09
   022A 03                 1504 	.db #0x03
   022B 01                 1505 	.db #0x01
   022C 02                 1506 	.db #0x02
   022D 08                 1507 	.db #0x08
   022E 0A                 1508 	.db #0x0A
   022F 12                 1509 	.db #0x12
   0230 10                 1510 	.db #0x10
   0231 00                 1511 	.db #0x00
   0232 02                 1512 	.db #0x02
   0233 08                 1513 	.db #0x08
   0234 09                 1514 	.db #0x09
   0235 03                 1515 	.db #0x03
   0236 01                 1516 	.db #0x01
   0237 11                 1517 	.db #0x11
   0238 13                 1518 	.db #0x13
   0239 0B                 1519 	.db #0x0B
   023A 09                 1520 	.db #0x09
   023B 03                 1521 	.db #0x03
   023C 08                 1522 	.db #0x08
   023D 0A                 1523 	.db #0x0A
   023E 12                 1524 	.db #0x12
   023F 10                 1525 	.db #0x10
   0240 00                 1526 	.db #0x00
   0241 02                 1527 	.db #0x02
   0242 08                 1528 	.db #0x08
   0243 0A                 1529 	.db #0x0A
   0244 0B                 1530 	.db #0x0B
   0245 09                 1531 	.db #0x09
   0246 03                 1532 	.db #0x03
   0247 01                 1533 	.db #0x01
   0248 11                 1534 	.db #0x11
   0249 13                 1535 	.db #0x13
   024A 0B                 1536 	.db #0x0B
   024B 09                 1537 	.db #0x09
   024C 0A                 1538 	.db #0x0A
   024D 12                 1539 	.db #0x12
   024E 10                 1540 	.db #0x10
   024F 00                 1541 	.db #0x00
   0250 02                 1542 	.db #0x02
   0251 08                 1543 	.db #0x08
   0252 0A                 1544 	.db #0x0A
   0253 12                 1545 	.db #0x12
   0254 13                 1546 	.db #0x13
   0255 0B                 1547 	.db #0x0B
   0256 09                 1548 	.db #0x09
   0257 03                 1549 	.db #0x03
   0258 01                 1550 	.db #0x01
   0259 11                 1551 	.db #0x11
   025A 13                 1552 	.db #0x13
   025B 0B                 1553 	.db #0x0B
   025C 12                 1554 	.db #0x12
   025D 10                 1555 	.db #0x10
   025E 00                 1556 	.db #0x00
   025F 02                 1557 	.db #0x02
   0260 08                 1558 	.db #0x08
   0261 0A                 1559 	.db #0x0A
   0262 12                 1560 	.db #0x12
   0263 10                 1561 	.db #0x10
   0264 11                 1562 	.db #0x11
   0265 13                 1563 	.db #0x13
   0266 0B                 1564 	.db #0x0B
   0267 09                 1565 	.db #0x09
   0268 03                 1566 	.db #0x03
   0269 01                 1567 	.db #0x01
   026A 11                 1568 	.db #0x11
   026B 13                 1569 	.db #0x13
   026C 10                 1570 	.db #0x10
   026D 00                 1571 	.db #0x00
   026E 02                 1572 	.db #0x02
   026F 08                 1573 	.db #0x08
   0270 0A                 1574 	.db #0x0A
   0271 12                 1575 	.db #0x12
   0272 10                 1576 	.db #0x10
   0273 00                 1577 	.db #0x00
   0274 01                 1578 	.db #0x01
   0275 11                 1579 	.db #0x11
   0276 13                 1580 	.db #0x13
   0277 0B                 1581 	.db #0x0B
   0278 09                 1582 	.db #0x09
   0279 03                 1583 	.db #0x03
   027A 01                 1584 	.db #0x01
   027B 11                 1585 	.db #0x11
   027C 00                 1586 	.db #0x00
   027D 02                 1587 	.db #0x02
   027E 08                 1588 	.db #0x08
   027F 0A                 1589 	.db #0x0A
   0280 12                 1590 	.db #0x12
   0281 10                 1591 	.db #0x10
   0282 00                 1592 	.db #0x00
   0283 02                 1593 	.db #0x02
   0284 03                 1594 	.db #0x03
   0285 01                 1595 	.db #0x01
   0286 11                 1596 	.db #0x11
   0287 13                 1597 	.db #0x13
   0288 0B                 1598 	.db #0x0B
   0289 09                 1599 	.db #0x09
   028A 03                 1600 	.db #0x03
   028B 01                 1601 	.db #0x01
   028C 02                 1602 	.db #0x02
   028D 08                 1603 	.db #0x08
   028E 0A                 1604 	.db #0x0A
   028F 12                 1605 	.db #0x12
   0290 10                 1606 	.db #0x10
   0291 00                 1607 	.db #0x00
   0292 02                 1608 	.db #0x02
   0293 08                 1609 	.db #0x08
   0294 09                 1610 	.db #0x09
   0295 03                 1611 	.db #0x03
   0296 01                 1612 	.db #0x01
   0297 11                 1613 	.db #0x11
   0298 13                 1614 	.db #0x13
   0299 0B                 1615 	.db #0x0B
   029A 09                 1616 	.db #0x09
   029B 03                 1617 	.db #0x03
   029C 08                 1618 	.db #0x08
   029D 0A                 1619 	.db #0x0A
   029E 12                 1620 	.db #0x12
   029F 10                 1621 	.db #0x10
   02A0 00                 1622 	.db #0x00
   02A1 02                 1623 	.db #0x02
   02A2 08                 1624 	.db #0x08
   02A3 0A                 1625 	.db #0x0A
   02A4 0B                 1626 	.db #0x0B
   02A5 09                 1627 	.db #0x09
   02A6 03                 1628 	.db #0x03
   02A7 01                 1629 	.db #0x01
   02A8 11                 1630 	.db #0x11
   02A9 13                 1631 	.db #0x13
   02AA 0B                 1632 	.db #0x0B
   02AB 09                 1633 	.db #0x09
   02AC                    1634 _tri_dia:
   02AC 05                 1635 	.db #0x05
   02AD 1B                 1636 	.db #0x1B
   02AE 0F                 1637 	.db #0x0F
   02AF 1D                 1638 	.db #0x1D
   02B0 15                 1639 	.db #0x15
   02B1 19                 1640 	.db #0x19
   02B2 05                 1641 	.db #0x05
   02B3 1B                 1642 	.db #0x1B
   02B4 0F                 1643 	.db #0x0F
   02B5 1D                 1644 	.db #0x1D
   02B6 15                 1645 	.db #0x15
   02B7 19                 1646 	.db #0x19
   02B8 05                 1647 	.db #0x05
   02B9 1B                 1648 	.db #0x1B
   02BA 0F                 1649 	.db #0x0F
   02BB 1D                 1650 	.db #0x1D
   02BC 1D                 1651 	.db #0x1D
   02BD 05                 1652 	.db #0x05
   02BE 19                 1653 	.db #0x19
   02BF 0F                 1654 	.db #0x0F
   02C0 1B                 1655 	.db #0x1B
   02C1 15                 1656 	.db #0x15
   02C2 1D                 1657 	.db #0x1D
   02C3 05                 1658 	.db #0x05
   02C4 19                 1659 	.db #0x19
   02C5 0F                 1660 	.db #0x0F
   02C6 1B                 1661 	.db #0x1B
   02C7 15                 1662 	.db #0x15
   02C8 1D                 1663 	.db #0x1D
   02C9 05                 1664 	.db #0x05
   02CA 19                 1665 	.db #0x19
   02CB 0F                 1666 	.db #0x0F
   02CC 0F                 1667 	.db #0x0F
   02CD 1D                 1668 	.db #0x1D
   02CE 15                 1669 	.db #0x15
   02CF 19                 1670 	.db #0x19
   02D0 05                 1671 	.db #0x05
   02D1 1B                 1672 	.db #0x1B
   02D2 0F                 1673 	.db #0x0F
   02D3 1D                 1674 	.db #0x1D
   02D4 15                 1675 	.db #0x15
   02D5 19                 1676 	.db #0x19
   02D6 05                 1677 	.db #0x05
   02D7 1B                 1678 	.db #0x1B
   02D8 0F                 1679 	.db #0x0F
   02D9 1D                 1680 	.db #0x1D
   02DA 15                 1681 	.db #0x15
   02DB 19                 1682 	.db #0x19
   02DC 19                 1683 	.db #0x19
   02DD 0F                 1684 	.db #0x0F
   02DE 1B                 1685 	.db #0x1B
   02DF 15                 1686 	.db #0x15
   02E0 1D                 1687 	.db #0x1D
   02E1 05                 1688 	.db #0x05
   02E2 19                 1689 	.db #0x19
   02E3 0F                 1690 	.db #0x0F
   02E4 1B                 1691 	.db #0x1B
   02E5 15                 1692 	.db #0x15
   02E6 1D                 1693 	.db #0x1D
   02E7 05                 1694 	.db #0x05
   02E8 19                 1695 	.db #0x19
   02E9 0F                 1696 	.db #0x0F
   02EA 1B                 1697 	.db #0x1B
   02EB 15                 1698 	.db #0x15
   02EC 15                 1699 	.db #0x15
   02ED 19                 1700 	.db #0x19
   02EE 05                 1701 	.db #0x05
   02EF 1B                 1702 	.db #0x1B
   02F0 0F                 1703 	.db #0x0F
   02F1 1D                 1704 	.db #0x1D
   02F2 15                 1705 	.db #0x15
   02F3 19                 1706 	.db #0x19
   02F4 05                 1707 	.db #0x05
   02F5 1B                 1708 	.db #0x1B
   02F6 0F                 1709 	.db #0x0F
   02F7 1D                 1710 	.db #0x1D
   02F8 15                 1711 	.db #0x15
   02F9 19                 1712 	.db #0x19
   02FA 05                 1713 	.db #0x05
   02FB 1B                 1714 	.db #0x1B
   02FC 1B                 1715 	.db #0x1B
   02FD 15                 1716 	.db #0x15
   02FE 1D                 1717 	.db #0x1D
   02FF 05                 1718 	.db #0x05
   0300 19                 1719 	.db #0x19
   0301 0F                 1720 	.db #0x0F
   0302 1B                 1721 	.db #0x1B
   0303 15                 1722 	.db #0x15
   0304 1D                 1723 	.db #0x1D
   0305 05                 1724 	.db #0x05
   0306 19                 1725 	.db #0x19
   0307 0F                 1726 	.db #0x0F
   0308 1B                 1727 	.db #0x1B
   0309 15                 1728 	.db #0x15
   030A 1D                 1729 	.db #0x1D
   030B 05                 1730 	.db #0x05
   030C 05                 1731 	.db #0x05
   030D 1B                 1732 	.db #0x1B
   030E 0F                 1733 	.db #0x0F
   030F 1D                 1734 	.db #0x1D
   0310 15                 1735 	.db #0x15
   0311 19                 1736 	.db #0x19
   0312 05                 1737 	.db #0x05
   0313 1B                 1738 	.db #0x1B
   0314 0F                 1739 	.db #0x0F
   0315 1D                 1740 	.db #0x1D
   0316 15                 1741 	.db #0x15
   0317 19                 1742 	.db #0x19
   0318 05                 1743 	.db #0x05
   0319 1B                 1744 	.db #0x1B
   031A 0F                 1745 	.db #0x0F
   031B 1D                 1746 	.db #0x1D
   031C 1D                 1747 	.db #0x1D
   031D 05                 1748 	.db #0x05
   031E 19                 1749 	.db #0x19
   031F 0F                 1750 	.db #0x0F
   0320 1B                 1751 	.db #0x1B
   0321 15                 1752 	.db #0x15
   0322 1D                 1753 	.db #0x1D
   0323 05                 1754 	.db #0x05
   0324 19                 1755 	.db #0x19
   0325 0F                 1756 	.db #0x0F
   0326 1B                 1757 	.db #0x1B
   0327 15                 1758 	.db #0x15
   0328 1D                 1759 	.db #0x1D
   0329 05                 1760 	.db #0x05
   032A 19                 1761 	.db #0x19
   032B 0F                 1762 	.db #0x0F
   032C 0F                 1763 	.db #0x0F
   032D 1D                 1764 	.db #0x1D
   032E 15                 1765 	.db #0x15
   032F 19                 1766 	.db #0x19
   0330 05                 1767 	.db #0x05
   0331 1B                 1768 	.db #0x1B
   0332 0F                 1769 	.db #0x0F
   0333 1D                 1770 	.db #0x1D
   0334 15                 1771 	.db #0x15
   0335 19                 1772 	.db #0x19
   0336 05                 1773 	.db #0x05
   0337 1B                 1774 	.db #0x1B
   0338 0F                 1775 	.db #0x0F
   0339 1D                 1776 	.db #0x1D
   033A 15                 1777 	.db #0x15
   033B 19                 1778 	.db #0x19
   033C 19                 1779 	.db #0x19
   033D 0F                 1780 	.db #0x0F
   033E 1B                 1781 	.db #0x1B
   033F 15                 1782 	.db #0x15
   0340 1D                 1783 	.db #0x1D
   0341 05                 1784 	.db #0x05
   0342 19                 1785 	.db #0x19
   0343 0F                 1786 	.db #0x0F
   0344 1B                 1787 	.db #0x1B
   0345 15                 1788 	.db #0x15
   0346 1D                 1789 	.db #0x1D
   0347 05                 1790 	.db #0x05
   0348 19                 1791 	.db #0x19
   0349 0F                 1792 	.db #0x0F
   034A 1B                 1793 	.db #0x1B
   034B 15                 1794 	.db #0x15
   034C 15                 1795 	.db #0x15
   034D 19                 1796 	.db #0x19
   034E 05                 1797 	.db #0x05
   034F 1B                 1798 	.db #0x1B
   0350 0F                 1799 	.db #0x0F
   0351 1D                 1800 	.db #0x1D
   0352 15                 1801 	.db #0x15
   0353 19                 1802 	.db #0x19
   0354 05                 1803 	.db #0x05
   0355 1B                 1804 	.db #0x1B
   0356 0F                 1805 	.db #0x0F
   0357 1D                 1806 	.db #0x1D
   0358 15                 1807 	.db #0x15
   0359 19                 1808 	.db #0x19
   035A 05                 1809 	.db #0x05
   035B 1B                 1810 	.db #0x1B
   035C 1B                 1811 	.db #0x1B
   035D 15                 1812 	.db #0x15
   035E 1D                 1813 	.db #0x1D
   035F 05                 1814 	.db #0x05
   0360 19                 1815 	.db #0x19
   0361 0F                 1816 	.db #0x0F
   0362 1B                 1817 	.db #0x1B
   0363 15                 1818 	.db #0x15
   0364 1D                 1819 	.db #0x1D
   0365 05                 1820 	.db #0x05
   0366 19                 1821 	.db #0x19
   0367 0F                 1822 	.db #0x0F
   0368 1B                 1823 	.db #0x1B
   0369 15                 1824 	.db #0x15
   036A 1D                 1825 	.db #0x1D
   036B 05                 1826 	.db #0x05
   036C                    1827 _tri_side1:
   036C 0A                 1828 	.db #0x0A
   036D 12                 1829 	.db #0x12
   036E 10                 1830 	.db #0x10
   036F 00                 1831 	.db #0x00
   0370 02                 1832 	.db #0x02
   0371 08                 1833 	.db #0x08
   0372 0A                 1834 	.db #0x0A
   0373 12                 1835 	.db #0x12
   0374 10                 1836 	.db #0x10
   0375 00                 1837 	.db #0x00
   0376 02                 1838 	.db #0x02
   0377 08                 1839 	.db #0x08
   0378 0A                 1840 	.db #0x0A
   0379 12                 1841 	.db #0x12
   037A 10                 1842 	.db #0x10
   037B 00                 1843 	.db #0x00
   037C 12                 1844 	.db #0x12
   037D 10                 1845 	.db #0x10
   037E 00                 1846 	.db #0x00
   037F 02                 1847 	.db #0x02
   0380 08                 1848 	.db #0x08
   0381 0A                 1849 	.db #0x0A
   0382 12                 1850 	.db #0x12
   0383 10                 1851 	.db #0x10
   0384 00                 1852 	.db #0x00
   0385 02                 1853 	.db #0x02
   0386 08                 1854 	.db #0x08
   0387 0A                 1855 	.db #0x0A
   0388 12                 1856 	.db #0x12
   0389 10                 1857 	.db #0x10
   038A 00                 1858 	.db #0x00
   038B 02                 1859 	.db #0x02
   038C 10                 1860 	.db #0x10
   038D 00                 1861 	.db #0x00
   038E 02                 1862 	.db #0x02
   038F 08                 1863 	.db #0x08
   0390 0A                 1864 	.db #0x0A
   0391 12                 1865 	.db #0x12
   0392 10                 1866 	.db #0x10
   0393 00                 1867 	.db #0x00
   0394 02                 1868 	.db #0x02
   0395 08                 1869 	.db #0x08
   0396 0A                 1870 	.db #0x0A
   0397 12                 1871 	.db #0x12
   0398 10                 1872 	.db #0x10
   0399 00                 1873 	.db #0x00
   039A 02                 1874 	.db #0x02
   039B 08                 1875 	.db #0x08
   039C 00                 1876 	.db #0x00
   039D 02                 1877 	.db #0x02
   039E 08                 1878 	.db #0x08
   039F 0A                 1879 	.db #0x0A
   03A0 12                 1880 	.db #0x12
   03A1 10                 1881 	.db #0x10
   03A2 00                 1882 	.db #0x00
   03A3 02                 1883 	.db #0x02
   03A4 08                 1884 	.db #0x08
   03A5 0A                 1885 	.db #0x0A
   03A6 12                 1886 	.db #0x12
   03A7 10                 1887 	.db #0x10
   03A8 00                 1888 	.db #0x00
   03A9 02                 1889 	.db #0x02
   03AA 08                 1890 	.db #0x08
   03AB 0A                 1891 	.db #0x0A
   03AC 02                 1892 	.db #0x02
   03AD 08                 1893 	.db #0x08
   03AE 0A                 1894 	.db #0x0A
   03AF 12                 1895 	.db #0x12
   03B0 10                 1896 	.db #0x10
   03B1 00                 1897 	.db #0x00
   03B2 02                 1898 	.db #0x02
   03B3 08                 1899 	.db #0x08
   03B4 0A                 1900 	.db #0x0A
   03B5 12                 1901 	.db #0x12
   03B6 10                 1902 	.db #0x10
   03B7 00                 1903 	.db #0x00
   03B8 02                 1904 	.db #0x02
   03B9 08                 1905 	.db #0x08
   03BA 0A                 1906 	.db #0x0A
   03BB 12                 1907 	.db #0x12
   03BC 08                 1908 	.db #0x08
   03BD 0A                 1909 	.db #0x0A
   03BE 12                 1910 	.db #0x12
   03BF 10                 1911 	.db #0x10
   03C0 00                 1912 	.db #0x00
   03C1 02                 1913 	.db #0x02
   03C2 08                 1914 	.db #0x08
   03C3 0A                 1915 	.db #0x0A
   03C4 12                 1916 	.db #0x12
   03C5 10                 1917 	.db #0x10
   03C6 00                 1918 	.db #0x00
   03C7 02                 1919 	.db #0x02
   03C8 08                 1920 	.db #0x08
   03C9 0A                 1921 	.db #0x0A
   03CA 12                 1922 	.db #0x12
   03CB 10                 1923 	.db #0x10
   03CC 0A                 1924 	.db #0x0A
   03CD 12                 1925 	.db #0x12
   03CE 10                 1926 	.db #0x10
   03CF 00                 1927 	.db #0x00
   03D0 02                 1928 	.db #0x02
   03D1 08                 1929 	.db #0x08
   03D2 0A                 1930 	.db #0x0A
   03D3 12                 1931 	.db #0x12
   03D4 10                 1932 	.db #0x10
   03D5 00                 1933 	.db #0x00
   03D6 02                 1934 	.db #0x02
   03D7 08                 1935 	.db #0x08
   03D8 0A                 1936 	.db #0x0A
   03D9 12                 1937 	.db #0x12
   03DA 10                 1938 	.db #0x10
   03DB 00                 1939 	.db #0x00
   03DC 12                 1940 	.db #0x12
   03DD 10                 1941 	.db #0x10
   03DE 00                 1942 	.db #0x00
   03DF 02                 1943 	.db #0x02
   03E0 08                 1944 	.db #0x08
   03E1 0A                 1945 	.db #0x0A
   03E2 12                 1946 	.db #0x12
   03E3 10                 1947 	.db #0x10
   03E4 00                 1948 	.db #0x00
   03E5 02                 1949 	.db #0x02
   03E6 08                 1950 	.db #0x08
   03E7 0A                 1951 	.db #0x0A
   03E8 12                 1952 	.db #0x12
   03E9 10                 1953 	.db #0x10
   03EA 00                 1954 	.db #0x00
   03EB 02                 1955 	.db #0x02
   03EC 10                 1956 	.db #0x10
   03ED 00                 1957 	.db #0x00
   03EE 02                 1958 	.db #0x02
   03EF 08                 1959 	.db #0x08
   03F0 0A                 1960 	.db #0x0A
   03F1 12                 1961 	.db #0x12
   03F2 10                 1962 	.db #0x10
   03F3 00                 1963 	.db #0x00
   03F4 02                 1964 	.db #0x02
   03F5 08                 1965 	.db #0x08
   03F6 0A                 1966 	.db #0x0A
   03F7 12                 1967 	.db #0x12
   03F8 10                 1968 	.db #0x10
   03F9 00                 1969 	.db #0x00
   03FA 02                 1970 	.db #0x02
   03FB 08                 1971 	.db #0x08
   03FC 00                 1972 	.db #0x00
   03FD 02                 1973 	.db #0x02
   03FE 08                 1974 	.db #0x08
   03FF 0A                 1975 	.db #0x0A
   0400 12                 1976 	.db #0x12
   0401 10                 1977 	.db #0x10
   0402 00                 1978 	.db #0x00
   0403 02                 1979 	.db #0x02
   0404 08                 1980 	.db #0x08
   0405 0A                 1981 	.db #0x0A
   0406 12                 1982 	.db #0x12
   0407 10                 1983 	.db #0x10
   0408 00                 1984 	.db #0x00
   0409 02                 1985 	.db #0x02
   040A 08                 1986 	.db #0x08
   040B 0A                 1987 	.db #0x0A
   040C 02                 1988 	.db #0x02
   040D 08                 1989 	.db #0x08
   040E 0A                 1990 	.db #0x0A
   040F 12                 1991 	.db #0x12
   0410 10                 1992 	.db #0x10
   0411 00                 1993 	.db #0x00
   0412 02                 1994 	.db #0x02
   0413 08                 1995 	.db #0x08
   0414 0A                 1996 	.db #0x0A
   0415 12                 1997 	.db #0x12
   0416 10                 1998 	.db #0x10
   0417 00                 1999 	.db #0x00
   0418 02                 2000 	.db #0x02
   0419 08                 2001 	.db #0x08
   041A 0A                 2002 	.db #0x0A
   041B 12                 2003 	.db #0x12
   041C 08                 2004 	.db #0x08
   041D 0A                 2005 	.db #0x0A
   041E 12                 2006 	.db #0x12
   041F 10                 2007 	.db #0x10
   0420 00                 2008 	.db #0x00
   0421 02                 2009 	.db #0x02
   0422 08                 2010 	.db #0x08
   0423 0A                 2011 	.db #0x0A
   0424 12                 2012 	.db #0x12
   0425 10                 2013 	.db #0x10
   0426 00                 2014 	.db #0x00
   0427 02                 2015 	.db #0x02
   0428 08                 2016 	.db #0x08
   0429 0A                 2017 	.db #0x0A
   042A 12                 2018 	.db #0x12
   042B 10                 2019 	.db #0x10
   042C                    2020 _tri_side2:
   042C 00                 2021 	.db #0x00
   042D 10                 2022 	.db #0x10
   042E 12                 2023 	.db #0x12
   042F 0A                 2024 	.db #0x0A
   0430 08                 2025 	.db #0x08
   0431 02                 2026 	.db #0x02
   0432 00                 2027 	.db #0x00
   0433 10                 2028 	.db #0x10
   0434 12                 2029 	.db #0x12
   0435 0A                 2030 	.db #0x0A
   0436 08                 2031 	.db #0x08
   0437 02                 2032 	.db #0x02
   0438 00                 2033 	.db #0x00
   0439 10                 2034 	.db #0x10
   043A 12                 2035 	.db #0x12
   043B 0A                 2036 	.db #0x0A
   043C 02                 2037 	.db #0x02
   043D 00                 2038 	.db #0x00
   043E 10                 2039 	.db #0x10
   043F 12                 2040 	.db #0x12
   0440 0A                 2041 	.db #0x0A
   0441 08                 2042 	.db #0x08
   0442 02                 2043 	.db #0x02
   0443 00                 2044 	.db #0x00
   0444 10                 2045 	.db #0x10
   0445 12                 2046 	.db #0x12
   0446 0A                 2047 	.db #0x0A
   0447 08                 2048 	.db #0x08
   0448 02                 2049 	.db #0x02
   0449 00                 2050 	.db #0x00
   044A 10                 2051 	.db #0x10
   044B 12                 2052 	.db #0x12
   044C 08                 2053 	.db #0x08
   044D 02                 2054 	.db #0x02
   044E 00                 2055 	.db #0x00
   044F 10                 2056 	.db #0x10
   0450 12                 2057 	.db #0x12
   0451 0A                 2058 	.db #0x0A
   0452 08                 2059 	.db #0x08
   0453 02                 2060 	.db #0x02
   0454 00                 2061 	.db #0x00
   0455 10                 2062 	.db #0x10
   0456 12                 2063 	.db #0x12
   0457 0A                 2064 	.db #0x0A
   0458 08                 2065 	.db #0x08
   0459 02                 2066 	.db #0x02
   045A 00                 2067 	.db #0x00
   045B 10                 2068 	.db #0x10
   045C 0A                 2069 	.db #0x0A
   045D 08                 2070 	.db #0x08
   045E 02                 2071 	.db #0x02
   045F 00                 2072 	.db #0x00
   0460 10                 2073 	.db #0x10
   0461 12                 2074 	.db #0x12
   0462 0A                 2075 	.db #0x0A
   0463 08                 2076 	.db #0x08
   0464 02                 2077 	.db #0x02
   0465 00                 2078 	.db #0x00
   0466 10                 2079 	.db #0x10
   0467 12                 2080 	.db #0x12
   0468 0A                 2081 	.db #0x0A
   0469 08                 2082 	.db #0x08
   046A 02                 2083 	.db #0x02
   046B 00                 2084 	.db #0x00
   046C 12                 2085 	.db #0x12
   046D 0A                 2086 	.db #0x0A
   046E 08                 2087 	.db #0x08
   046F 02                 2088 	.db #0x02
   0470 00                 2089 	.db #0x00
   0471 10                 2090 	.db #0x10
   0472 12                 2091 	.db #0x12
   0473 0A                 2092 	.db #0x0A
   0474 08                 2093 	.db #0x08
   0475 02                 2094 	.db #0x02
   0476 00                 2095 	.db #0x00
   0477 10                 2096 	.db #0x10
   0478 12                 2097 	.db #0x12
   0479 0A                 2098 	.db #0x0A
   047A 08                 2099 	.db #0x08
   047B 02                 2100 	.db #0x02
   047C 10                 2101 	.db #0x10
   047D 12                 2102 	.db #0x12
   047E 0A                 2103 	.db #0x0A
   047F 08                 2104 	.db #0x08
   0480 02                 2105 	.db #0x02
   0481 00                 2106 	.db #0x00
   0482 10                 2107 	.db #0x10
   0483 12                 2108 	.db #0x12
   0484 0A                 2109 	.db #0x0A
   0485 08                 2110 	.db #0x08
   0486 02                 2111 	.db #0x02
   0487 00                 2112 	.db #0x00
   0488 10                 2113 	.db #0x10
   0489 12                 2114 	.db #0x12
   048A 0A                 2115 	.db #0x0A
   048B 08                 2116 	.db #0x08
   048C 00                 2117 	.db #0x00
   048D 10                 2118 	.db #0x10
   048E 12                 2119 	.db #0x12
   048F 0A                 2120 	.db #0x0A
   0490 08                 2121 	.db #0x08
   0491 02                 2122 	.db #0x02
   0492 00                 2123 	.db #0x00
   0493 10                 2124 	.db #0x10
   0494 12                 2125 	.db #0x12
   0495 0A                 2126 	.db #0x0A
   0496 08                 2127 	.db #0x08
   0497 02                 2128 	.db #0x02
   0498 00                 2129 	.db #0x00
   0499 10                 2130 	.db #0x10
   049A 12                 2131 	.db #0x12
   049B 0A                 2132 	.db #0x0A
   049C 02                 2133 	.db #0x02
   049D 00                 2134 	.db #0x00
   049E 10                 2135 	.db #0x10
   049F 12                 2136 	.db #0x12
   04A0 0A                 2137 	.db #0x0A
   04A1 08                 2138 	.db #0x08
   04A2 02                 2139 	.db #0x02
   04A3 00                 2140 	.db #0x00
   04A4 10                 2141 	.db #0x10
   04A5 12                 2142 	.db #0x12
   04A6 0A                 2143 	.db #0x0A
   04A7 08                 2144 	.db #0x08
   04A8 02                 2145 	.db #0x02
   04A9 00                 2146 	.db #0x00
   04AA 10                 2147 	.db #0x10
   04AB 12                 2148 	.db #0x12
   04AC 08                 2149 	.db #0x08
   04AD 02                 2150 	.db #0x02
   04AE 00                 2151 	.db #0x00
   04AF 10                 2152 	.db #0x10
   04B0 12                 2153 	.db #0x12
   04B1 0A                 2154 	.db #0x0A
   04B2 08                 2155 	.db #0x08
   04B3 02                 2156 	.db #0x02
   04B4 00                 2157 	.db #0x00
   04B5 10                 2158 	.db #0x10
   04B6 12                 2159 	.db #0x12
   04B7 0A                 2160 	.db #0x0A
   04B8 08                 2161 	.db #0x08
   04B9 02                 2162 	.db #0x02
   04BA 00                 2163 	.db #0x00
   04BB 10                 2164 	.db #0x10
   04BC 0A                 2165 	.db #0x0A
   04BD 08                 2166 	.db #0x08
   04BE 02                 2167 	.db #0x02
   04BF 00                 2168 	.db #0x00
   04C0 10                 2169 	.db #0x10
   04C1 12                 2170 	.db #0x12
   04C2 0A                 2171 	.db #0x0A
   04C3 08                 2172 	.db #0x08
   04C4 02                 2173 	.db #0x02
   04C5 00                 2174 	.db #0x00
   04C6 10                 2175 	.db #0x10
   04C7 12                 2176 	.db #0x12
   04C8 0A                 2177 	.db #0x0A
   04C9 08                 2178 	.db #0x08
   04CA 02                 2179 	.db #0x02
   04CB 00                 2180 	.db #0x00
   04CC 12                 2181 	.db #0x12
   04CD 0A                 2182 	.db #0x0A
   04CE 08                 2183 	.db #0x08
   04CF 02                 2184 	.db #0x02
   04D0 00                 2185 	.db #0x00
   04D1 10                 2186 	.db #0x10
   04D2 12                 2187 	.db #0x12
   04D3 0A                 2188 	.db #0x0A
   04D4 08                 2189 	.db #0x08
   04D5 02                 2190 	.db #0x02
   04D6 00                 2191 	.db #0x00
   04D7 10                 2192 	.db #0x10
   04D8 12                 2193 	.db #0x12
   04D9 0A                 2194 	.db #0x0A
   04DA 08                 2195 	.db #0x08
   04DB 02                 2196 	.db #0x02
   04DC 10                 2197 	.db #0x10
   04DD 12                 2198 	.db #0x12
   04DE 0A                 2199 	.db #0x0A
   04DF 08                 2200 	.db #0x08
   04E0 02                 2201 	.db #0x02
   04E1 00                 2202 	.db #0x00
   04E2 10                 2203 	.db #0x10
   04E3 12                 2204 	.db #0x12
   04E4 0A                 2205 	.db #0x0A
   04E5 08                 2206 	.db #0x08
   04E6 02                 2207 	.db #0x02
   04E7 00                 2208 	.db #0x00
   04E8 10                 2209 	.db #0x10
   04E9 12                 2210 	.db #0x12
   04EA 0A                 2211 	.db #0x0A
   04EB 08                 2212 	.db #0x08
   04EC                    2213 _tri_inva1:
   04EC 1E                 2214 	.db #0x1E
   04ED 1F                 2215 	.db #0x1F
   04EE 1E                 2216 	.db #0x1E
   04EF 11                 2217 	.db #0x11
   04F0 13                 2218 	.db #0x13
   04F1 1E                 2219 	.db #0x1E
   04F2 08                 2220 	.db #0x08
   04F3 0A                 2221 	.db #0x0A
   04F4 00                 2222 	.db #0x00
   04F5 0E                 2223 	.db #0x0E
   04F6 10                 2224 	.db #0x10
   04F7 1E                 2225 	.db #0x1E
   04F8 1C                 2226 	.db #0x1C
   04F9 1E                 2227 	.db #0x1E
   04FA 08                 2228 	.db #0x08
   04FB 0A                 2229 	.db #0x0A
   04FC 1F                 2230 	.db #0x1F
   04FD 1F                 2231 	.db #0x1F
   04FE 1E                 2232 	.db #0x1E
   04FF 1E                 2233 	.db #0x1E
   0500 15                 2234 	.db #0x15
   0501 17                 2235 	.db #0x17
   0502 0A                 2236 	.db #0x0A
   0503 00                 2237 	.db #0x00
   0504 02                 2238 	.db #0x02
   0505 11                 2239 	.db #0x11
   0506 13                 2240 	.db #0x13
   0507 1F                 2241 	.db #0x1F
   0508 1C                 2242 	.db #0x1C
   0509 08                 2243 	.db #0x08
   050A 0A                 2244 	.db #0x0A
   050B 1F                 2245 	.db #0x1F
   050C 1E                 2246 	.db #0x1E
   050D 1F                 2247 	.db #0x1F
   050E 08                 2248 	.db #0x08
   050F 1B                 2249 	.db #0x1B
   0510 1A                 2250 	.db #0x1A
   0511 11                 2251 	.db #0x11
   0512 13                 2252 	.db #0x13
   0513 1C                 2253 	.db #0x1C
   0514 1E                 2254 	.db #0x1E
   0515 1F                 2255 	.db #0x1F
   0516 19                 2256 	.db #0x19
   0517 1E                 2257 	.db #0x1E
   0518 06                 2258 	.db #0x06
   0519 04                 2259 	.db #0x04
   051A 1C                 2260 	.db #0x1C
   051B 1C                 2261 	.db #0x1C
   051C 1E                 2262 	.db #0x1E
   051D 08                 2263 	.db #0x08
   051E 16                 2264 	.db #0x16
   051F 18                 2265 	.db #0x18
   0520 1B                 2266 	.db #0x1B
   0521 1E                 2267 	.db #0x1E
   0522 19                 2268 	.db #0x19
   0523 1D                 2269 	.db #0x1D
   0524 1F                 2270 	.db #0x1F
   0525 1E                 2271 	.db #0x1E
   0526 19                 2272 	.db #0x19
   0527 08                 2273 	.db #0x08
   0528 1B                 2274 	.db #0x1B
   0529 1E                 2275 	.db #0x1E
   052A 12                 2276 	.db #0x12
   052B 10                 2277 	.db #0x10
   052C 08                 2278 	.db #0x08
   052D 16                 2279 	.db #0x16
   052E 10                 2280 	.db #0x10
   052F 11                 2281 	.db #0x11
   0530 17                 2282 	.db #0x17
   0531 09                 2283 	.db #0x09
   0532 11                 2284 	.db #0x11
   0533 0F                 2285 	.db #0x0F
   0534 01                 2286 	.db #0x01
   0535 1E                 2287 	.db #0x1E
   0536 14                 2288 	.db #0x14
   0537 16                 2289 	.db #0x16
   0538 17                 2290 	.db #0x17
   0539 15                 2291 	.db #0x15
   053A 10                 2292 	.db #0x10
   053B 1E                 2293 	.db #0x1E
   053C 0A                 2294 	.db #0x0A
   053D 18                 2295 	.db #0x18
   053E 1F                 2296 	.db #0x1F
   053F 1E                 2297 	.db #0x1E
   0540 19                 2298 	.db #0x19
   0541 0B                 2299 	.db #0x0B
   0542 09                 2300 	.db #0x09
   0543 11                 2301 	.db #0x11
   0544 0F                 2302 	.db #0x0F
   0545 1C                 2303 	.db #0x1C
   0546 05                 2304 	.db #0x05
   0547 09                 2305 	.db #0x09
   0548 1E                 2306 	.db #0x1E
   0549 0B                 2307 	.db #0x0B
   054A 09                 2308 	.db #0x09
   054B 1F                 2309 	.db #0x1F
   054C 1E                 2310 	.db #0x1E
   054D 19                 2311 	.db #0x19
   054E 1E                 2312 	.db #0x1E
   054F 1F                 2313 	.db #0x1F
   0550 19                 2314 	.db #0x19
   0551 1E                 2315 	.db #0x1E
   0552 0B                 2316 	.db #0x0B
   0553 1B                 2317 	.db #0x1B
   0554 15                 2318 	.db #0x15
   0555 19                 2319 	.db #0x19
   0556 1D                 2320 	.db #0x1D
   0557 19                 2321 	.db #0x19
   0558 19                 2322 	.db #0x19
   0559 13                 2323 	.db #0x13
   055A 0B                 2324 	.db #0x0B
   055B 09                 2325 	.db #0x09
   055C 1E                 2326 	.db #0x1E
   055D 15                 2327 	.db #0x15
   055E 13                 2328 	.db #0x13
   055F 1E                 2329 	.db #0x1E
   0560 0C                 2330 	.db #0x0C
   0561 01                 2331 	.db #0x01
   0562 1E                 2332 	.db #0x1E
   0563 1F                 2333 	.db #0x1F
   0564 1E                 2334 	.db #0x1E
   0565 1E                 2335 	.db #0x1E
   0566 1C                 2336 	.db #0x1C
   0567 1D                 2337 	.db #0x1D
   0568 01                 2338 	.db #0x01
   0569 11                 2339 	.db #0x11
   056A 13                 2340 	.db #0x13
   056B 0B                 2341 	.db #0x0B
   056C 09                 2342 	.db #0x09
   056D 1A                 2343 	.db #0x1A
   056E 14                 2344 	.db #0x14
   056F 04                 2345 	.db #0x04
   0570 0E                 2346 	.db #0x0E
   0571 07                 2347 	.db #0x07
   0572 01                 2348 	.db #0x01
   0573 1E                 2349 	.db #0x1E
   0574 1F                 2350 	.db #0x1F
   0575 00                 2351 	.db #0x00
   0576 02                 2352 	.db #0x02
   0577 1E                 2353 	.db #0x1E
   0578 03                 2354 	.db #0x03
   0579 01                 2355 	.db #0x01
   057A 0C                 2356 	.db #0x0C
   057B 06                 2357 	.db #0x06
   057C 0B                 2358 	.db #0x0B
   057D 1B                 2359 	.db #0x1B
   057E 04                 2360 	.db #0x04
   057F 0E                 2361 	.db #0x0E
   0580 19                 2362 	.db #0x19
   0581 17                 2363 	.db #0x17
   0582 07                 2364 	.db #0x07
   0583 1D                 2365 	.db #0x1D
   0584 1C                 2366 	.db #0x1C
   0585 02                 2367 	.db #0x02
   0586 1F                 2368 	.db #0x1F
   0587 1E                 2369 	.db #0x1E
   0588 08                 2370 	.db #0x08
   0589 07                 2371 	.db #0x07
   058A 06                 2372 	.db #0x06
   058B 1E                 2373 	.db #0x1E
   058C 08                 2374 	.db #0x08
   058D 04                 2375 	.db #0x04
   058E 0E                 2376 	.db #0x0E
   058F 14                 2377 	.db #0x14
   0590 09                 2378 	.db #0x09
   0591 11                 2379 	.db #0x11
   0592 17                 2380 	.db #0x17
   0593 07                 2381 	.db #0x07
   0594 1D                 2382 	.db #0x1D
   0595 1F                 2383 	.db #0x1F
   0596 1E                 2384 	.db #0x1E
   0597 08                 2385 	.db #0x08
   0598 0A                 2386 	.db #0x0A
   0599 1E                 2387 	.db #0x1E
   059A 1F                 2388 	.db #0x1F
   059B 1F                 2389 	.db #0x1F
   059C 04                 2390 	.db #0x04
   059D 0E                 2391 	.db #0x0E
   059E 14                 2392 	.db #0x14
   059F 0A                 2393 	.db #0x0A
   05A0 0B                 2394 	.db #0x0B
   05A1 09                 2395 	.db #0x09
   05A2 11                 2396 	.db #0x11
   05A3 17                 2397 	.db #0x17
   05A4 07                 2398 	.db #0x07
   05A5 01                 2399 	.db #0x01
   05A6 08                 2400 	.db #0x08
   05A7 0A                 2401 	.db #0x0A
   05A8 1E                 2402 	.db #0x1E
   05A9 1F                 2403 	.db #0x1F
   05AA 1F                 2404 	.db #0x1F
   05AB 1E                 2405 	.db #0x1E
   05AC                    2406 _tri_inva2:
   05AC 14                 2407 	.db #0x14
   05AD 04                 2408 	.db #0x04
   05AE 0E                 2409 	.db #0x0E
   05AF 14                 2410 	.db #0x14
   05B0 04                 2411 	.db #0x04
   05B1 0E                 2412 	.db #0x0E
   05B2 14                 2413 	.db #0x14
   05B3 1A                 2414 	.db #0x1A
   05B4 1B                 2415 	.db #0x1B
   05B5 15                 2416 	.db #0x15
   05B6 0F                 2417 	.db #0x0F
   05B7 05                 2418 	.db #0x05
   05B8 15                 2419 	.db #0x15
   05B9 0F                 2420 	.db #0x0F
   05BA 05                 2421 	.db #0x05
   05BB 15                 2422 	.db #0x15
   05BC 04                 2423 	.db #0x04
   05BD 0E                 2424 	.db #0x0E
   05BE 14                 2425 	.db #0x14
   05BF 04                 2426 	.db #0x04
   05C0 0E                 2427 	.db #0x0E
   05C1 14                 2428 	.db #0x14
   05C2 04                 2429 	.db #0x04
   05C3 1C                 2430 	.db #0x1C
   05C4 1D                 2431 	.db #0x1D
   05C5 05                 2432 	.db #0x05
   05C6 15                 2433 	.db #0x15
   05C7 0F                 2434 	.db #0x0F
   05C8 05                 2435 	.db #0x05
   05C9 15                 2436 	.db #0x15
   05CA 0F                 2437 	.db #0x0F
   05CB 05                 2438 	.db #0x05
   05CC 0E                 2439 	.db #0x0E
   05CD 14                 2440 	.db #0x14
   05CE 04                 2441 	.db #0x04
   05CF 0E                 2442 	.db #0x0E
   05D0 14                 2443 	.db #0x14
   05D1 04                 2444 	.db #0x04
   05D2 0E                 2445 	.db #0x0E
   05D3 18                 2446 	.db #0x18
   05D4 19                 2447 	.db #0x19
   05D5 0F                 2448 	.db #0x0F
   05D6 05                 2449 	.db #0x05
   05D7 15                 2450 	.db #0x15
   05D8 0F                 2451 	.db #0x0F
   05D9 05                 2452 	.db #0x05
   05DA 15                 2453 	.db #0x15
   05DB 0F                 2454 	.db #0x0F
   05DC 18                 2455 	.db #0x18
   05DD 1A                 2456 	.db #0x1A
   05DE 1C                 2457 	.db #0x1C
   05DF 18                 2458 	.db #0x18
   05E0 1A                 2459 	.db #0x1A
   05E1 1C                 2460 	.db #0x1C
   05E2 18                 2461 	.db #0x18
   05E3 18                 2462 	.db #0x18
   05E4 19                 2463 	.db #0x19
   05E5 19                 2464 	.db #0x19
   05E6 1D                 2465 	.db #0x1D
   05E7 1B                 2466 	.db #0x1B
   05E8 19                 2467 	.db #0x19
   05E9 1D                 2468 	.db #0x1D
   05EA 1B                 2469 	.db #0x1B
   05EB 19                 2470 	.db #0x19
   05EC 18                 2471 	.db #0x18
   05ED 1A                 2472 	.db #0x1A
   05EE 1C                 2473 	.db #0x1C
   05EF 18                 2474 	.db #0x18
   05F0 1A                 2475 	.db #0x1A
   05F1 1C                 2476 	.db #0x1C
   05F2 18                 2477 	.db #0x18
   05F3 18                 2478 	.db #0x18
   05F4 0D                 2479 	.db #0x0D
   05F5 19                 2480 	.db #0x19
   05F6 1D                 2481 	.db #0x1D
   05F7 1B                 2482 	.db #0x1B
   05F8 19                 2483 	.db #0x19
   05F9 1D                 2484 	.db #0x1D
   05FA 1B                 2485 	.db #0x1B
   05FB 19                 2486 	.db #0x19
   05FC 19                 2487 	.db #0x19
   05FD 1B                 2488 	.db #0x1B
   05FE 1D                 2489 	.db #0x1D
   05FF 19                 2490 	.db #0x19
   0600 1B                 2491 	.db #0x1B
   0601 1D                 2492 	.db #0x1D
   0602 19                 2493 	.db #0x19
   0603 0C                 2494 	.db #0x0C
   0604 0E                 2495 	.db #0x0E
   0605 18                 2496 	.db #0x18
   0606 1C                 2497 	.db #0x1C
   0607 1A                 2498 	.db #0x1A
   0608 18                 2499 	.db #0x18
   0609 1C                 2500 	.db #0x1C
   060A 1A                 2501 	.db #0x1A
   060B 18                 2502 	.db #0x18
   060C 19                 2503 	.db #0x19
   060D 1B                 2504 	.db #0x1B
   060E 1D                 2505 	.db #0x1D
   060F 19                 2506 	.db #0x19
   0610 1B                 2507 	.db #0x1B
   0611 1D                 2508 	.db #0x1D
   0612 19                 2509 	.db #0x19
   0613 0F                 2510 	.db #0x0F
   0614 0D                 2511 	.db #0x0D
   0615 18                 2512 	.db #0x18
   0616 1C                 2513 	.db #0x1C
   0617 1A                 2514 	.db #0x1A
   0618 18                 2515 	.db #0x18
   0619 1C                 2516 	.db #0x1C
   061A 1A                 2517 	.db #0x1A
   061B 18                 2518 	.db #0x18
   061C 0D                 2519 	.db #0x0D
   061D 17                 2520 	.db #0x17
   061E 07                 2521 	.db #0x07
   061F 0D                 2522 	.db #0x0D
   0620 17                 2523 	.db #0x17
   0621 07                 2524 	.db #0x07
   0622 0D                 2525 	.db #0x0D
   0623 0C                 2526 	.db #0x0C
   0624 0E                 2527 	.db #0x0E
   0625 0C                 2528 	.db #0x0C
   0626 06                 2529 	.db #0x06
   0627 16                 2530 	.db #0x16
   0628 0C                 2531 	.db #0x0C
   0629 06                 2532 	.db #0x06
   062A 16                 2533 	.db #0x16
   062B 0C                 2534 	.db #0x0C
   062C 07                 2535 	.db #0x07
   062D 0D                 2536 	.db #0x0D
   062E 17                 2537 	.db #0x17
   062F 07                 2538 	.db #0x07
   0630 0D                 2539 	.db #0x0D
   0631 17                 2540 	.db #0x17
   0632 02                 2541 	.db #0x02
   0633 1A                 2542 	.db #0x1A
   0634 1A                 2543 	.db #0x1A
   0635 03                 2544 	.db #0x03
   0636 16                 2545 	.db #0x16
   0637 0C                 2546 	.db #0x0C
   0638 06                 2547 	.db #0x06
   0639 16                 2548 	.db #0x16
   063A 0C                 2549 	.db #0x0C
   063B 06                 2550 	.db #0x06
   063C 17                 2551 	.db #0x17
   063D 07                 2552 	.db #0x07
   063E 0D                 2553 	.db #0x0D
   063F 17                 2554 	.db #0x17
   0640 07                 2555 	.db #0x07
   0641 10                 2556 	.db #0x10
   0642 1F                 2557 	.db #0x1F
   0643 1A                 2558 	.db #0x1A
   0644 1A                 2559 	.db #0x1A
   0645 1F                 2560 	.db #0x1F
   0646 11                 2561 	.db #0x11
   0647 06                 2562 	.db #0x06
   0648 16                 2563 	.db #0x16
   0649 0C                 2564 	.db #0x0C
   064A 06                 2565 	.db #0x06
   064B 16                 2566 	.db #0x16
   064C 0D                 2567 	.db #0x0D
   064D 17                 2568 	.db #0x17
   064E 07                 2569 	.db #0x07
   064F 0D                 2570 	.db #0x0D
   0650 0A                 2571 	.db #0x0A
   0651 1F                 2572 	.db #0x1F
   0652 1F                 2573 	.db #0x1F
   0653 1A                 2574 	.db #0x1A
   0654 1A                 2575 	.db #0x1A
   0655 1F                 2576 	.db #0x1F
   0656 1F                 2577 	.db #0x1F
   0657 0B                 2578 	.db #0x0B
   0658 0C                 2579 	.db #0x0C
   0659 06                 2580 	.db #0x06
   065A 16                 2581 	.db #0x16
   065B 0C                 2582 	.db #0x0C
   065C 07                 2583 	.db #0x07
   065D 0D                 2584 	.db #0x0D
   065E 17                 2585 	.db #0x17
   065F 02                 2586 	.db #0x02
   0660 1F                 2587 	.db #0x1F
   0661 1F                 2588 	.db #0x1F
   0662 1F                 2589 	.db #0x1F
   0663 1F                 2590 	.db #0x1F
   0664 1F                 2591 	.db #0x1F
   0665 1F                 2592 	.db #0x1F
   0666 1F                 2593 	.db #0x1F
   0667 1F                 2594 	.db #0x1F
   0668 03                 2595 	.db #0x03
   0669 16                 2596 	.db #0x16
   066A 0C                 2597 	.db #0x0C
   066B 06                 2598 	.db #0x06
   066C                    2599 _tri_inva3:
   066C 1A                 2600 	.db #0x1A
   066D 1C                 2601 	.db #0x1C
   066E 18                 2602 	.db #0x18
   066F 1A                 2603 	.db #0x1A
   0670 1C                 2604 	.db #0x1C
   0671 18                 2605 	.db #0x18
   0672 1A                 2606 	.db #0x1A
   0673 1E                 2607 	.db #0x1E
   0674 00                 2608 	.db #0x00
   0675 1C                 2609 	.db #0x1C
   0676 1C                 2610 	.db #0x1C
   0677 1D                 2611 	.db #0x1D
   0678 1C                 2612 	.db #0x1C
   0679 1C                 2613 	.db #0x1C
   067A 1D                 2614 	.db #0x1D
   067B 1C                 2615 	.db #0x1C
   067C 1A                 2616 	.db #0x1A
   067D 1C                 2617 	.db #0x1C
   067E 18                 2618 	.db #0x18
   067F 1A                 2619 	.db #0x1A
   0680 1C                 2620 	.db #0x1C
   0681 18                 2621 	.db #0x18
   0682 1A                 2622 	.db #0x1A
   0683 1F                 2623 	.db #0x1F
   0684 1C                 2624 	.db #0x1C
   0685 18                 2625 	.db #0x18
   0686 1F                 2626 	.db #0x1F
   0687 1C                 2627 	.db #0x1C
   0688 1D                 2628 	.db #0x1D
   0689 1D                 2629 	.db #0x1D
   068A 1C                 2630 	.db #0x1C
   068B 1D                 2631 	.db #0x1D
   068C 04                 2632 	.db #0x04
   068D 0E                 2633 	.db #0x0E
   068E 14                 2634 	.db #0x14
   068F 04                 2635 	.db #0x04
   0690 0E                 2636 	.db #0x0E
   0691 14                 2637 	.db #0x14
   0692 0A                 2638 	.db #0x0A
   0693 1E                 2639 	.db #0x1E
   0694 1C                 2640 	.db #0x1C
   0695 0D                 2641 	.db #0x0D
   0696 18                 2642 	.db #0x18
   0697 1C                 2643 	.db #0x1C
   0698 1C                 2644 	.db #0x1C
   0699 1C                 2645 	.db #0x1C
   069A 1C                 2646 	.db #0x1C
   069B 1C                 2647 	.db #0x1C
   069C 1C                 2648 	.db #0x1C
   069D 18                 2649 	.db #0x18
   069E 1A                 2650 	.db #0x1A
   069F 1C                 2651 	.db #0x1C
   06A0 18                 2652 	.db #0x18
   06A1 1A                 2653 	.db #0x1A
   06A2 1E                 2654 	.db #0x1E
   06A3 00                 2655 	.db #0x00
   06A4 1C                 2656 	.db #0x1C
   06A5 1D                 2657 	.db #0x1D
   06A6 1C                 2658 	.db #0x1C
   06A7 1C                 2659 	.db #0x1C
   06A8 1D                 2660 	.db #0x1D
   06A9 18                 2661 	.db #0x18
   06AA 0F                 2662 	.db #0x0F
   06AB 1C                 2663 	.db #0x1C
   06AC 1C                 2664 	.db #0x1C
   06AD 18                 2665 	.db #0x18
   06AE 1A                 2666 	.db #0x1A
   06AF 1C                 2667 	.db #0x1C
   06B0 18                 2668 	.db #0x18
   06B1 1A                 2669 	.db #0x1A
   06B2 1F                 2670 	.db #0x1F
   06B3 1C                 2671 	.db #0x1C
   06B4 1D                 2672 	.db #0x1D
   06B5 02                 2673 	.db #0x02
   06B6 1C                 2674 	.db #0x1C
   06B7 02                 2675 	.db #0x02
   06B8 1D                 2676 	.db #0x1D
   06B9 1F                 2677 	.db #0x1F
   06BA 18                 2678 	.db #0x18
   06BB 1C                 2679 	.db #0x1C
   06BC 1C                 2680 	.db #0x1C
   06BD 18                 2681 	.db #0x18
   06BE 1A                 2682 	.db #0x1A
   06BF 1C                 2683 	.db #0x1C
   06C0 18                 2684 	.db #0x18
   06C1 1A                 2685 	.db #0x1A
   06C2 1F                 2686 	.db #0x1F
   06C3 03                 2687 	.db #0x03
   06C4 1C                 2688 	.db #0x1C
   06C5 1D                 2689 	.db #0x1D
   06C6 1C                 2690 	.db #0x1C
   06C7 1C                 2691 	.db #0x1C
   06C8 1C                 2692 	.db #0x1C
   06C9 1C                 2693 	.db #0x1C
   06CA 1D                 2694 	.db #0x1D
   06CB 1C                 2695 	.db #0x1C
   06CC 0E                 2696 	.db #0x0E
   06CD 14                 2697 	.db #0x14
   06CE 04                 2698 	.db #0x04
   06CF 0E                 2699 	.db #0x0E
   06D0 14                 2700 	.db #0x14
   06D1 0A                 2701 	.db #0x0A
   06D2 1E                 2702 	.db #0x1E
   06D3 00                 2703 	.db #0x00
   06D4 0B                 2704 	.db #0x0B
   06D5 0A                 2705 	.db #0x0A
   06D6 0B                 2706 	.db #0x0B
   06D7 0A                 2707 	.db #0x0A
   06D8 0B                 2708 	.db #0x0B
   06D9 0A                 2709 	.db #0x0A
   06DA 1D                 2710 	.db #0x1D
   06DB 1C                 2711 	.db #0x1C
   06DC 14                 2712 	.db #0x14
   06DD 04                 2713 	.db #0x04
   06DE 0E                 2714 	.db #0x0E
   06DF 14                 2715 	.db #0x14
   06E0 0A                 2716 	.db #0x0A
   06E1 1F                 2717 	.db #0x1F
   06E2 1E                 2718 	.db #0x1E
   06E3 1C                 2719 	.db #0x1C
   06E4 1F                 2720 	.db #0x1F
   06E5 1E                 2721 	.db #0x1E
   06E6 1F                 2722 	.db #0x1F
   06E7 1E                 2723 	.db #0x1E
   06E8 1F                 2724 	.db #0x1F
   06E9 1E                 2725 	.db #0x1E
   06EA 1D                 2726 	.db #0x1D
   06EB 1C                 2727 	.db #0x1C
   06EC 1A                 2728 	.db #0x1A
   06ED 1C                 2729 	.db #0x1C
   06EE 18                 2730 	.db #0x18
   06EF 1A                 2731 	.db #0x1A
   06F0 1F                 2732 	.db #0x1F
   06F1 12                 2733 	.db #0x12
   06F2 18                 2734 	.db #0x18
   06F3 18                 2735 	.db #0x18
   06F4 19                 2736 	.db #0x19
   06F5 19                 2737 	.db #0x19
   06F6 13                 2738 	.db #0x13
   06F7 1E                 2739 	.db #0x1E
   06F8 1F                 2740 	.db #0x1F
   06F9 1E                 2741 	.db #0x1E
   06FA 1D                 2742 	.db #0x1D
   06FB 1C                 2743 	.db #0x1C
   06FC 1B                 2744 	.db #0x1B
   06FD 1D                 2745 	.db #0x1D
   06FE 19                 2746 	.db #0x19
   06FF 1B                 2747 	.db #0x1B
   0700 1E                 2748 	.db #0x1E
   0701 18                 2749 	.db #0x18
   0702 18                 2750 	.db #0x18
   0703 18                 2751 	.db #0x18
   0704 19                 2752 	.db #0x19
   0705 19                 2753 	.db #0x19
   0706 19                 2754 	.db #0x19
   0707 13                 2755 	.db #0x13
   0708 1F                 2756 	.db #0x1F
   0709 00                 2757 	.db #0x00
   070A 1C                 2758 	.db #0x1C
   070B 1C                 2759 	.db #0x1C
   070C 1B                 2760 	.db #0x1B
   070D 1D                 2761 	.db #0x1D
   070E 19                 2762 	.db #0x19
   070F 1B                 2763 	.db #0x1B
   0710 1F                 2764 	.db #0x1F
   0711 18                 2765 	.db #0x18
   0712 18                 2766 	.db #0x18
   0713 0C                 2767 	.db #0x0C
   0714 1C                 2768 	.db #0x1C
   0715 1C                 2769 	.db #0x1C
   0716 1C                 2770 	.db #0x1C
   0717 1C                 2771 	.db #0x1C
   0718 1C                 2772 	.db #0x1C
   0719 1C                 2773 	.db #0x1C
   071A 1C                 2774 	.db #0x1C
   071B 1C                 2775 	.db #0x1C
   071C 17                 2776 	.db #0x17
   071D 07                 2777 	.db #0x07
   071E 0D                 2778 	.db #0x0D
   071F 17                 2779 	.db #0x17
   0720 09                 2780 	.db #0x09
   0721 1E                 2781 	.db #0x1E
   0722 1F                 2782 	.db #0x1F
   0723 1D                 2783 	.db #0x1D
   0724 1D                 2784 	.db #0x1D
   0725 1D                 2785 	.db #0x1D
   0726 1C                 2786 	.db #0x1C
   0727 1D                 2787 	.db #0x1D
   0728 1C                 2788 	.db #0x1C
   0729 1C                 2789 	.db #0x1C
   072A 1C                 2790 	.db #0x1C
   072B 1C                 2791 	.db #0x1C
   072C                    2792 _tri_inva4:
   072C 1E                 2793 	.db #0x1E
   072D 00                 2794 	.db #0x00
   072E 05                 2795 	.db #0x05
   072F 0A                 2796 	.db #0x0A
   0730 1E                 2797 	.db #0x1E
   0731 00                 2798 	.db #0x00
   0732 06                 2799 	.db #0x06
   0733 16                 2800 	.db #0x16
   0734 0F                 2801 	.db #0x0F
   0735 01                 2802 	.db #0x01
   0736 1F                 2803 	.db #0x1F
   0737 11                 2804 	.db #0x11
   0738 0C                 2805 	.db #0x0C
   0739 01                 2806 	.db #0x01
   073A 1F                 2807 	.db #0x1F
   073B 1F                 2808 	.db #0x1F
   073C 12                 2809 	.db #0x12
   073D 0F                 2810 	.db #0x0F
   073E 02                 2811 	.db #0x02
   073F 1E                 2812 	.db #0x1E
   0740 12                 2813 	.db #0x12
   0741 0F                 2814 	.db #0x0F
   0742 05                 2815 	.db #0x05
   0743 15                 2816 	.db #0x15
   0744 0C                 2817 	.db #0x0C
   0745 06                 2818 	.db #0x06
   0746 09                 2819 	.db #0x09
   0747 1F                 2820 	.db #0x1F
   0748 03                 2821 	.db #0x03
   0749 06                 2822 	.db #0x06
   074A 09                 2823 	.db #0x09
   074B 1F                 2824 	.db #0x1F
   074C 15                 2825 	.db #0x15
   074D 10                 2826 	.db #0x10
   074E 1E                 2827 	.db #0x1E
   074F 08                 2828 	.db #0x08
   0750 15                 2829 	.db #0x15
   0751 10                 2830 	.db #0x10
   0752 1E                 2831 	.db #0x1E
   0753 1F                 2832 	.db #0x1F
   0754 1F                 2833 	.db #0x1F
   0755 0B                 2834 	.db #0x0B
   0756 16                 2835 	.db #0x16
   0757 13                 2836 	.db #0x13
   0758 1F                 2837 	.db #0x1F
   0759 0B                 2838 	.db #0x0B
   075A 16                 2839 	.db #0x16
   075B 13                 2840 	.db #0x13
   075C 05                 2841 	.db #0x05
   075D 1E                 2842 	.db #0x1E
   075E 00                 2843 	.db #0x00
   075F 05                 2844 	.db #0x05
   0760 0A                 2845 	.db #0x0A
   0761 1E                 2846 	.db #0x1E
   0762 08                 2847 	.db #0x08
   0763 15                 2848 	.db #0x15
   0764 13                 2849 	.db #0x13
   0765 1F                 2850 	.db #0x1F
   0766 11                 2851 	.db #0x11
   0767 0D                 2852 	.db #0x0D
   0768 01                 2853 	.db #0x01
   0769 1F                 2854 	.db #0x1F
   076A 0C                 2855 	.db #0x0C
   076B 0D                 2856 	.db #0x0D
   076C 02                 2857 	.db #0x02
   076D 1E                 2858 	.db #0x1E
   076E 0E                 2859 	.db #0x0E
   076F 0F                 2860 	.db #0x0F
   0770 1E                 2861 	.db #0x1E
   0771 00                 2862 	.db #0x00
   0772 05                 2863 	.db #0x05
   0773 15                 2864 	.db #0x15
   0774 0C                 2865 	.db #0x0C
   0775 01                 2866 	.db #0x01
   0776 1F                 2867 	.db #0x1F
   0777 07                 2868 	.db #0x07
   0778 07                 2869 	.db #0x07
   0779 1F                 2870 	.db #0x1F
   077A 06                 2871 	.db #0x06
   077B 07                 2872 	.db #0x07
   077C 1E                 2873 	.db #0x1E
   077D 1E                 2874 	.db #0x1E
   077E 15                 2875 	.db #0x15
   077F 15                 2876 	.db #0x15
   0780 1E                 2877 	.db #0x1E
   0781 0F                 2878 	.db #0x0F
   0782 02                 2879 	.db #0x02
   0783 1E                 2880 	.db #0x1E
   0784 07                 2881 	.db #0x07
   0785 06                 2882 	.db #0x06
   0786 1F                 2883 	.db #0x1F
   0787 17                 2884 	.db #0x17
   0788 17                 2885 	.db #0x17
   0789 1E                 2886 	.db #0x1E
   078A 17                 2887 	.db #0x17
   078B 16                 2888 	.db #0x16
   078C 1F                 2889 	.db #0x1F
   078D 1F                 2890 	.db #0x1F
   078E 04                 2891 	.db #0x04
   078F 05                 2892 	.db #0x05
   0790 1F                 2893 	.db #0x1F
   0791 14                 2894 	.db #0x14
   0792 09                 2895 	.db #0x09
   0793 11                 2896 	.db #0x11
   0794 17                 2897 	.db #0x17
   0795 0A                 2898 	.db #0x0A
   0796 1E                 2899 	.db #0x1E
   0797 0D                 2900 	.db #0x0D
   0798 0D                 2901 	.db #0x0D
   0799 1E                 2902 	.db #0x1E
   079A 0D                 2903 	.db #0x0D
   079B 0C                 2904 	.db #0x0C
   079C 09                 2905 	.db #0x09
   079D 1F                 2906 	.db #0x1F
   079E 0E                 2907 	.db #0x0E
   079F 0F                 2908 	.db #0x0F
   07A0 1F                 2909 	.db #0x1F
   07A1 04                 2910 	.db #0x04
   07A2 04                 2911 	.db #0x04
   07A3 1F                 2912 	.db #0x1F
   07A4 1F                 2913 	.db #0x1F
   07A5 1E                 2914 	.db #0x1E
   07A6 08                 2915 	.db #0x08
   07A7 06                 2916 	.db #0x06
   07A8 07                 2917 	.db #0x07
   07A9 1E                 2918 	.db #0x1E
   07AA 07                 2919 	.db #0x07
   07AB 06                 2920 	.db #0x06
   07AC 04                 2921 	.db #0x04
   07AD 1F                 2922 	.db #0x1F
   07AE 11                 2923 	.db #0x11
   07AF 14                 2924 	.db #0x14
   07B0 1F                 2925 	.db #0x1F
   07B1 03                 2926 	.db #0x03
   07B2 0E                 2927 	.db #0x0E
   07B3 14                 2928 	.db #0x14
   07B4 07                 2929 	.db #0x07
   07B5 0D                 2930 	.db #0x0D
   07B6 17                 2931 	.db #0x17
   07B7 0A                 2932 	.db #0x0A
   07B8 1E                 2933 	.db #0x1E
   07B9 12                 2934 	.db #0x12
   07BA 17                 2935 	.db #0x17
   07BB 0A                 2936 	.db #0x0A
   07BC 0E                 2937 	.db #0x0E
   07BD 1F                 2938 	.db #0x1F
   07BE 1F                 2939 	.db #0x1F
   07BF 04                 2940 	.db #0x04
   07C0 01                 2941 	.db #0x01
   07C1 1F                 2942 	.db #0x1F
   07C2 11                 2943 	.db #0x11
   07C3 17                 2944 	.db #0x17
   07C4 07                 2945 	.db #0x07
   07C5 0D                 2946 	.db #0x0D
   07C6 10                 2947 	.db #0x10
   07C7 1E                 2948 	.db #0x1E
   07C8 00                 2949 	.db #0x00
   07C9 0D                 2950 	.db #0x0D
   07CA 10                 2951 	.db #0x10
   07CB 1E                 2952 	.db #0x1E
   07CC 14                 2953 	.db #0x14
   07CD 09                 2954 	.db #0x09
   07CE 1F                 2955 	.db #0x1F
   07CF 03                 2956 	.db #0x03
   07D0 0E                 2957 	.db #0x0E
   07D1 13                 2958 	.db #0x13
   07D2 1F                 2959 	.db #0x1F
   07D3 1F                 2960 	.db #0x1F
   07D4 1F                 2961 	.db #0x1F
   07D5 1E                 2962 	.db #0x1E
   07D6 1E                 2963 	.db #0x1E
   07D7 08                 2964 	.db #0x08
   07D8 07                 2965 	.db #0x07
   07D9 02                 2966 	.db #0x02
   07DA 1E                 2967 	.db #0x1E
   07DB 1E                 2968 	.db #0x1E
   07DC 0B                 2969 	.db #0x0B
   07DD 04                 2970 	.db #0x04
   07DE 01                 2971 	.db #0x01
   07DF 1F                 2972 	.db #0x1F
   07E0 11                 2973 	.db #0x11
   07E1 14                 2974 	.db #0x14
   07E2 04                 2975 	.db #0x04
   07E3 0E                 2976 	.db #0x0E
   07E4 17                 2977 	.db #0x17
   07E5 07                 2978 	.db #0x07
   07E6 0D                 2979 	.db #0x0D
   07E7 17                 2980 	.db #0x17
   07E8 0A                 2981 	.db #0x0A
   07E9 1E                 2982 	.db #0x1E
   07EA 1E                 2983 	.db #0x1E
   07EB 1E                 2984 	.db #0x1E
                           2985 ;demo.c:243: void my_isr(void) interrupt
                           2986 ;	---------------------------------
                           2987 ; Function my_isr
                           2988 ; ---------------------------------
   07EC                    2989 _my_isr_start::
   07EC                    2990 _my_isr:
   07EC F5                 2991 	push	af
   07ED C5                 2992 	push	bc
   07EE D5                 2993 	push	de
   07EF E5                 2994 	push	hl
   07F0 FD E5              2995 	push	iy
                           2996 ;demo.c:245: DI;
   07F2 F3                 2997 		di 
                           2998 ;demo.c:247: READ_VDP_STATUS;
   07F3 DB 99              2999 		in a,(#0x99) 
                           3000 ;demo.c:249: PLY_Play();
   07F5 CDr00s00           3001 	call	_PLY_Play
                           3002 ;demo.c:250: PLY_SendRegisters();
   07F8 CDr00s00           3003 	call	_PLY_SendRegisters
                           3004 ;demo.c:252: vbicount+=1;
   07FB FD 21r26s41        3005 	ld	iy,#_vbicount
   07FF FD 34 00           3006 	inc	0 (iy)
   0802 20 07              3007 	jr	NZ,00103$
   0804 FD 21r26s41        3008 	ld	iy,#_vbicount
   0808 FD 34 01           3009 	inc	1 (iy)
   080B                    3010 00103$:
                           3011 ;demo.c:253: tick++;
   080B FD 21r28s41        3012 	ld	iy,#_tick
   080F FD 34 00           3013 	inc	0 (iy)
   0812 20 07              3014 	jr	NZ,00104$
   0814 FD 21r28s41        3015 	ld	iy,#_tick
   0818 FD 34 01           3016 	inc	1 (iy)
   081B                    3017 00104$:
                           3018 ;demo.c:255: EI;
   081B FB                 3019 		ei 
   081C FD E1              3020 	pop	iy
   081E E1                 3021 	pop	hl
   081F D1                 3022 	pop	de
   0820 C1                 3023 	pop	bc
   0821 F1                 3024 	pop	af
   0822 ED 4D              3025 	reti
   0824                    3026 _my_isr_end::
                           3027 ;demo.c:263: void scratch_clear() {
                           3028 ;	---------------------------------
                           3029 ; Function scratch_clear
                           3030 ; ---------------------------------
   0824                    3031 _scratch_clear_start::
   0824                    3032 _scratch_clear:
                           3033 ;demo.c:264: memset((uint8_t *) &scratch, 0, 128);
   0824 21 80 00           3034 	ld	hl,#0x0080
   0827 E5                 3035 	push	hl
   0828 3E 00              3036 	ld	a,#0x00
   082A F5                 3037 	push	af
   082B 33                 3038 	inc	sp
   082C 21rC6s3F           3039 	ld	hl,#_scratch
   082F E5                 3040 	push	hl
   0830 CDr00s00           3041 	call	_memset
   0833 F1                 3042 	pop	af
   0834 F1                 3043 	pop	af
   0835 33                 3044 	inc	sp
   0836 C9                 3045 	ret
   0837                    3046 _scratch_clear_end::
                           3047 ;demo.c:267: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           3048 ;	---------------------------------
                           3049 ; Function pal_load
                           3050 ; ---------------------------------
   0837                    3051 _pal_load_start::
   0837                    3052 _pal_load:
   0837 DD E5              3053 	push	ix
   0839 DD 21 00 00        3054 	ld	ix,#0
   083D DD 39              3055 	add	ix,sp
   083F 21 D2 FF           3056 	ld	hl,#-46
   0842 39                 3057 	add	hl,sp
   0843 F9                 3058 	ld	sp,hl
                           3059 ;demo.c:270: if(debugprint == 1) {
   0844 DD 7E 07           3060 	ld	a,7 (ix)
   0847 D6 01              3061 	sub	a,#0x01
   0849 20 06              3062 	jr	NZ,00115$
   084B DD 7E 08           3063 	ld	a,8 (ix)
   084E B7                 3064 	or	a,a
   084F 28 02              3065 	jr	Z,00116$
   0851                    3066 00115$:
   0851 18 1B              3067 	jr	00102$
   0853                    3068 00116$:
                           3069 ;demo.c:271: puts("loading palfile: ");
   0853 21r01s09           3070 	ld	hl,#__str_0
   0856 E5                 3071 	push	hl
   0857 CDr00s00           3072 	call	_puts
   085A F1                 3073 	pop	af
                           3074 ;demo.c:272: puts(file_name);
   085B DD 6E 04           3075 	ld	l,4 (ix)
   085E DD 66 05           3076 	ld	h,5 (ix)
   0861 E5                 3077 	push	hl
   0862 CDr00s00           3078 	call	_puts
   0865 F1                 3079 	pop	af
                           3080 ;demo.c:273: puts("\r\n");
   0866 21r13s09           3081 	ld	hl,#__str_1
   0869 E5                 3082 	push	hl
   086A CDr00s00           3083 	call	_puts
   086D F1                 3084 	pop	af
   086E                    3085 00102$:
                           3086 ;demo.c:276: memset((uint8_t *) &f, 0, sizeof(fcb));
   086E 21 00 00           3087 	ld	hl,#0x0000
   0871 39                 3088 	add	hl,sp
   0872 4D                 3089 	ld	c,l
   0873 44                 3090 	ld	b,h
   0874 21 2E 00           3091 	ld	hl,#0x002E
   0877 E5                 3092 	push	hl
   0878 3E 00              3093 	ld	a,#0x00
   087A F5                 3094 	push	af
   087B 33                 3095 	inc	sp
   087C C5                 3096 	push	bc
   087D CDr00s00           3097 	call	_memset
   0880 F1                 3098 	pop	af
   0881 F1                 3099 	pop	af
   0882 33                 3100 	inc	sp
                           3101 ;demo.c:277: scratch_clear();
   0883 CDr24s08           3102 	call	_scratch_clear
                           3103 ;demo.c:279: f.record_size = ss;
   0886 21 00 00           3104 	ld	hl,#0x0000
   0889 39                 3105 	add	hl,sp
   088A 4D                 3106 	ld	c,l
   088B 44                 3107 	ld	b,h
   088C 21 0F 00           3108 	ld	hl,#0x000F
   088F 09                 3109 	add	hl,bc
   0890 EB                 3110 	ex	de,hl
   0891 DD 7E 06           3111 	ld	a,6 (ix)
   0894 12                 3112 	ld	(de),a
                           3113 ;demo.c:280: f.drive = 0;
   0895 3E 00              3114 	ld	a,#0x00
   0897 02                 3115 	ld	(bc),a
                           3116 ;demo.c:282: memcpy(f.name, file_name, 11);
   0898 DD 5E 04           3117 	ld	e,4 (ix)
   089B DD 56 05           3118 	ld	d,5 (ix)
   089E 03                 3119 	inc	bc
   089F 21 0B 00           3120 	ld	hl,#0x000B
   08A2 E5                 3121 	push	hl
   08A3 D5                 3122 	push	de
   08A4 C5                 3123 	push	bc
   08A5 CDr00s00           3124 	call	_memcpy
   08A8 F1                 3125 	pop	af
   08A9 F1                 3126 	pop	af
   08AA F1                 3127 	pop	af
                           3128 ;demo.c:284: if (open(&f) != 0) return 0;
   08AB 21 00 00           3129 	ld	hl,#0x0000
   08AE 39                 3130 	add	hl,sp
   08AF E5                 3131 	push	hl
   08B0 CDr00s00           3132 	call	_open
   08B3 F1                 3133 	pop	af
   08B4 AF                 3134 	xor	a,a
   08B5 B5                 3135 	or	a,l
   08B6 28 04              3136 	jr	Z,00104$
   08B8 2E 00              3137 	ld	l,#0x00
   08BA 18 40              3138 	jr	00109$
   08BC                    3139 00104$:
                           3140 ;demo.c:285: if (block_set_data_ptr(scratch) != 0) return 0;
   08BC 21rC6s3F           3141 	ld	hl,#_scratch
   08BF E5                 3142 	push	hl
   08C0 CDr00s00           3143 	call	_block_set_data_ptr
   08C3 F1                 3144 	pop	af
   08C4 AF                 3145 	xor	a,a
   08C5 B5                 3146 	or	a,l
   08C6 28 04              3147 	jr	Z,00106$
   08C8 2E 00              3148 	ld	l,#0x00
   08CA 18 30              3149 	jr	00109$
   08CC                    3150 00106$:
                           3151 ;demo.c:286: if (block_read(&f) != 0) return 0;
   08CC 21 00 00           3152 	ld	hl,#0x0000
   08CF 39                 3153 	add	hl,sp
   08D0 E5                 3154 	push	hl
   08D1 CDr00s00           3155 	call	_block_read
   08D4 F1                 3156 	pop	af
   08D5 AF                 3157 	xor	a,a
   08D6 B5                 3158 	or	a,l
   08D7 28 04              3159 	jr	Z,00108$
   08D9 2E 00              3160 	ld	l,#0x00
   08DB 18 1F              3161 	jr	00109$
   08DD                    3162 00108$:
                           3163 ;demo.c:288: memcpy(cur_palette, scratch+7, ss);
   08DD DD 4E 06           3164 	ld	c,6 (ix)
   08E0 06 00              3165 	ld	b,#0x00
   08E2 11rCDs3F           3166 	ld	de,#_scratch + 7
   08E5 C5                 3167 	push	bc
   08E6 D5                 3168 	push	de
   08E7 21r46s40           3169 	ld	hl,#_cur_palette
   08EA E5                 3170 	push	hl
   08EB CDr00s00           3171 	call	_memcpy
   08EE F1                 3172 	pop	af
   08EF F1                 3173 	pop	af
   08F0 F1                 3174 	pop	af
                           3175 ;demo.c:290: close(&f);
   08F1 21 00 00           3176 	ld	hl,#0x0000
   08F4 39                 3177 	add	hl,sp
   08F5 E5                 3178 	push	hl
   08F6 CDr00s00           3179 	call	_close
   08F9 F1                 3180 	pop	af
                           3181 ;demo.c:291: return 1;
   08FA 2E 01              3182 	ld	l,#0x01
   08FC                    3183 00109$:
   08FC DD F9              3184 	ld	sp,ix
   08FE DD E1              3185 	pop	ix
   0900 C9                 3186 	ret
   0901                    3187 _pal_load_end::
   0901                    3188 __str_0:
   0901 6C 6F 61 64 69 6E  3189 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   0912 00                 3190 	.db 0x00
   0913                    3191 __str_1:
   0913 0D                 3192 	.db 0x0D
   0914 0A                 3193 	.db 0x0A
   0915 00                 3194 	.db 0x00
                           3195 ;demo.c:295: void pause() {
                           3196 ;	---------------------------------
                           3197 ; Function pause
                           3198 ; ---------------------------------
   0916                    3199 _pause_start::
   0916                    3200 _pause:
                           3201 ;demo.c:296: uint8_t i,j,k = 0;
                           3202 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0916 01 00 00           3203 	ld	bc,#0x0000
   0919                    3204 00104$:
   0919 78                 3205 	ld	a,b
   091A D6 FF              3206 	sub	a,#0xFF
   091C D0                 3207 	ret	NC
                           3208 ;demo.c:298: for (j = 0; j < 255; j++) {
   091D 59                 3209 	ld	e,c
   091E 16 FF              3210 	ld	d,#0xFF
   0920                    3211 00103$:
                           3212 ;demo.c:299: k++;
   0920 1C                 3213 	inc	e
   0921 15                 3214 	dec	d
                           3215 ;demo.c:298: for (j = 0; j < 255; j++) {
   0922 AF                 3216 	xor	a,a
   0923 B2                 3217 	or	a,d
   0924 20 FA              3218 	jr	NZ,00103$
                           3219 ;demo.c:297: for (i = 0; i < 255; i++) {	
   0926 4B                 3220 	ld	c,e
   0927 04                 3221 	inc	b
   0928 18 EF              3222 	jr	00104$
   092A                    3223 _pause_end::
                           3224 ;demo.c:305: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           3225 ;	---------------------------------
                           3226 ; Function raw_load
                           3227 ; ---------------------------------
   092A                    3228 _raw_load_start::
   092A                    3229 _raw_load:
   092A DD E5              3230 	push	ix
   092C DD 21 00 00        3231 	ld	ix,#0
   0930 DD 39              3232 	add	ix,sp
   0932 21 D2 FF           3233 	ld	hl,#-46
   0935 39                 3234 	add	hl,sp
   0936 F9                 3235 	ld	sp,hl
                           3236 ;demo.c:310: if(debugprint == 1) {
   0937 DD 7E 0A           3237 	ld	a,10 (ix)
   093A D6 01              3238 	sub	a,#0x01
   093C 20 06              3239 	jr	NZ,00120$
   093E DD 7E 0B           3240 	ld	a,11 (ix)
   0941 B7                 3241 	or	a,a
   0942 28 02              3242 	jr	Z,00121$
   0944                    3243 00120$:
   0944 18 1B              3244 	jr	00102$
   0946                    3245 00121$:
                           3246 ;demo.c:311: puts("loading rawfile: ");
   0946 21r18s0A           3247 	ld	hl,#__str_2
   0949 E5                 3248 	push	hl
   094A CDr00s00           3249 	call	_puts
   094D F1                 3250 	pop	af
                           3251 ;demo.c:312: puts(file_name);
   094E DD 6E 04           3252 	ld	l,4 (ix)
   0951 DD 66 05           3253 	ld	h,5 (ix)
   0954 E5                 3254 	push	hl
   0955 CDr00s00           3255 	call	_puts
   0958 F1                 3256 	pop	af
                           3257 ;demo.c:313: puts("\r\n");
   0959 21r2As0A           3258 	ld	hl,#__str_3
   095C E5                 3259 	push	hl
   095D CDr00s00           3260 	call	_puts
   0960 F1                 3261 	pop	af
   0961                    3262 00102$:
                           3263 ;demo.c:316: memset((uint8_t *) &f, 0, sizeof(fcb));
   0961 21 00 00           3264 	ld	hl,#0x0000
   0964 39                 3265 	add	hl,sp
   0965 4D                 3266 	ld	c,l
   0966 44                 3267 	ld	b,h
   0967 21 2E 00           3268 	ld	hl,#0x002E
   096A E5                 3269 	push	hl
   096B 3E 00              3270 	ld	a,#0x00
   096D F5                 3271 	push	af
   096E 33                 3272 	inc	sp
   096F C5                 3273 	push	bc
   0970 CDr00s00           3274 	call	_memset
   0973 F1                 3275 	pop	af
   0974 F1                 3276 	pop	af
   0975 33                 3277 	inc	sp
                           3278 ;demo.c:317: scratch_clear();
   0976 CDr24s08           3279 	call	_scratch_clear
                           3280 ;demo.c:319: f.record_size = 128;
   0979 21 00 00           3281 	ld	hl,#0x0000
   097C 39                 3282 	add	hl,sp
   097D 4D                 3283 	ld	c,l
   097E 44                 3284 	ld	b,h
   097F 21 0F 00           3285 	ld	hl,#0x000F
   0982 09                 3286 	add	hl,bc
   0983 EB                 3287 	ex	de,hl
   0984 3E 80              3288 	ld	a,#0x80
   0986 12                 3289 	ld	(de),a
                           3290 ;demo.c:320: f.drive = 0;
   0987 3E 00              3291 	ld	a,#0x00
   0989 02                 3292 	ld	(bc),a
                           3293 ;demo.c:322: memcpy(f.name, file_name, 11);
   098A DD 5E 04           3294 	ld	e,4 (ix)
   098D DD 56 05           3295 	ld	d,5 (ix)
   0990 03                 3296 	inc	bc
   0991 21 0B 00           3297 	ld	hl,#0x000B
   0994 E5                 3298 	push	hl
   0995 D5                 3299 	push	de
   0996 C5                 3300 	push	bc
   0997 CDr00s00           3301 	call	_memcpy
   099A F1                 3302 	pop	af
   099B F1                 3303 	pop	af
   099C F1                 3304 	pop	af
                           3305 ;demo.c:324: if (open(&f) != 0) return 0;
   099D 21 00 00           3306 	ld	hl,#0x0000
   09A0 39                 3307 	add	hl,sp
   09A1 E5                 3308 	push	hl
   09A2 CDr00s00           3309 	call	_open
   09A5 F1                 3310 	pop	af
   09A6 AF                 3311 	xor	a,a
   09A7 B5                 3312 	or	a,l
   09A8 28 05              3313 	jr	Z,00119$
   09AA 2E 00              3314 	ld	l,#0x00
   09AC C3r13s0A           3315 	jp	00112$
                           3316 ;demo.c:326: while(total < size) {
   09AF                    3317 00119$:
   09AF 01 00 00           3318 	ld	bc,#0x0000
   09B2                    3319 00109$:
   09B2 79                 3320 	ld	a,c
   09B3 DD 96 06           3321 	sub	a,6 (ix)
   09B6 78                 3322 	ld	a,b
   09B7 DD 9E 07           3323 	sbc	a,7 (ix)
   09BA F2r08s0A           3324 	jp	P,00111$
                           3325 ;demo.c:327: if (block_set_data_ptr(scratch) != 0) return 0;
   09BD C5                 3326 	push	bc
   09BE 21rC6s3F           3327 	ld	hl,#_scratch
   09C1 E5                 3328 	push	hl
   09C2 CDr00s00           3329 	call	_block_set_data_ptr
   09C5 F1                 3330 	pop	af
   09C6 5D                 3331 	ld	e,l
   09C7 C1                 3332 	pop	bc
   09C8 AF                 3333 	xor	a,a
   09C9 B3                 3334 	or	a,e
   09CA 28 04              3335 	jr	Z,00106$
   09CC 2E 00              3336 	ld	l,#0x00
   09CE 18 43              3337 	jr	00112$
   09D0                    3338 00106$:
                           3339 ;demo.c:328: if (block_read(&f) != 0) return 0;
   09D0 21 00 00           3340 	ld	hl,#0x0000
   09D3 39                 3341 	add	hl,sp
   09D4 C5                 3342 	push	bc
   09D5 E5                 3343 	push	hl
   09D6 CDr00s00           3344 	call	_block_read
   09D9 F1                 3345 	pop	af
   09DA 5D                 3346 	ld	e,l
   09DB C1                 3347 	pop	bc
   09DC AF                 3348 	xor	a,a
   09DD B3                 3349 	or	a,e
   09DE 28 04              3350 	jr	Z,00108$
   09E0 2E 00              3351 	ld	l,#0x00
   09E2 18 2F              3352 	jr	00112$
   09E4                    3353 00108$:
                           3354 ;demo.c:330: memcpy(buffer+total,scratch,incr);
   09E4 DD 7E 08           3355 	ld	a,8 (ix)
   09E7 81                 3356 	add	a,c
   09E8 5F                 3357 	ld	e,a
   09E9 DD 7E 09           3358 	ld	a,9 (ix)
   09EC 88                 3359 	adc	a,b
   09ED 57                 3360 	ld	d,a
   09EE C5                 3361 	push	bc
   09EF 21 80 00           3362 	ld	hl,#0x0080
   09F2 E5                 3363 	push	hl
   09F3 21rC6s3F           3364 	ld	hl,#_scratch
   09F6 E5                 3365 	push	hl
   09F7 D5                 3366 	push	de
   09F8 CDr00s00           3367 	call	_memcpy
   09FB F1                 3368 	pop	af
   09FC F1                 3369 	pop	af
   09FD F1                 3370 	pop	af
   09FE C1                 3371 	pop	bc
                           3372 ;demo.c:332: total+=incr;
   09FF 21 80 00           3373 	ld	hl,#0x0080
   0A02 09                 3374 	add	hl,bc
   0A03 4D                 3375 	ld	c,l
   0A04 44                 3376 	ld	b,h
   0A05 C3rB2s09           3377 	jp	00109$
   0A08                    3378 00111$:
                           3379 ;demo.c:335: close(&f);
   0A08 21 00 00           3380 	ld	hl,#0x0000
   0A0B 39                 3381 	add	hl,sp
   0A0C E5                 3382 	push	hl
   0A0D CDr00s00           3383 	call	_close
   0A10 F1                 3384 	pop	af
                           3385 ;demo.c:337: return 1;
   0A11 2E 01              3386 	ld	l,#0x01
   0A13                    3387 00112$:
   0A13 DD F9              3388 	ld	sp,ix
   0A15 DD E1              3389 	pop	ix
   0A17 C9                 3390 	ret
   0A18                    3391 _raw_load_end::
   0A18                    3392 __str_2:
   0A18 6C 6F 61 64 69 6E  3393 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0A29 00                 3394 	.db 0x00
   0A2A                    3395 __str_3:
   0A2A 0D                 3396 	.db 0x0D
   0A2B 0A                 3397 	.db 0x0A
   0A2C 00                 3398 	.db 0x00
                           3399 ;demo.c:340: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           3400 ;	---------------------------------
                           3401 ; Function pck_load
                           3402 ; ---------------------------------
   0A2D                    3403 _pck_load_start::
   0A2D                    3404 _pck_load:
   0A2D DD E5              3405 	push	ix
   0A2F DD 21 00 00        3406 	ld	ix,#0
   0A33 DD 39              3407 	add	ix,sp
                           3408 ;demo.c:341: if(debugprint == 1) {
   0A35 DD 7E 0C           3409 	ld	a,12 (ix)
   0A38 D6 01              3410 	sub	a,#0x01
   0A3A 20 06              3411 	jr	NZ,00106$
   0A3C DD 7E 0D           3412 	ld	a,13 (ix)
   0A3F B7                 3413 	or	a,a
   0A40 28 02              3414 	jr	Z,00107$
   0A42                    3415 00106$:
   0A42 18 1B              3416 	jr	00102$
   0A44                    3417 00107$:
                           3418 ;demo.c:342: puts("loading pckfile: ");
   0A44 21rA6s0A           3419 	ld	hl,#__str_4
   0A47 E5                 3420 	push	hl
   0A48 CDr00s00           3421 	call	_puts
   0A4B F1                 3422 	pop	af
                           3423 ;demo.c:343: puts(file_name);
   0A4C DD 6E 04           3424 	ld	l,4 (ix)
   0A4F DD 66 05           3425 	ld	h,5 (ix)
   0A52 E5                 3426 	push	hl
   0A53 CDr00s00           3427 	call	_puts
   0A56 F1                 3428 	pop	af
                           3429 ;demo.c:344: puts("\r\n");
   0A57 21rB8s0A           3430 	ld	hl,#__str_5
   0A5A E5                 3431 	push	hl
   0A5B CDr00s00           3432 	call	_puts
   0A5E F1                 3433 	pop	af
   0A5F                    3434 00102$:
                           3435 ;demo.c:346: memset((uint8_t *) &packbuffer, 0, size);
   0A5F DD 4E 06           3436 	ld	c,6 (ix)
   0A62 DD 46 07           3437 	ld	b,7 (ix)
   0A65 C5                 3438 	push	bc
   0A66 C5                 3439 	push	bc
   0A67 3E 00              3440 	ld	a,#0x00
   0A69 F5                 3441 	push	af
   0A6A 33                 3442 	inc	sp
   0A6B 21rC8s01           3443 	ld	hl,#_packbuffer
   0A6E E5                 3444 	push	hl
   0A6F CDr00s00           3445 	call	_memset
   0A72 F1                 3446 	pop	af
   0A73 F1                 3447 	pop	af
   0A74 33                 3448 	inc	sp
   0A75 C1                 3449 	pop	bc
                           3450 ;demo.c:347: raw_load(file_name, size, packbuffer,0);
   0A76 21 00 00           3451 	ld	hl,#0x0000
   0A79 E5                 3452 	push	hl
   0A7A 21rC8s01           3453 	ld	hl,#_packbuffer
   0A7D E5                 3454 	push	hl
   0A7E C5                 3455 	push	bc
   0A7F DD 6E 04           3456 	ld	l,4 (ix)
   0A82 DD 66 05           3457 	ld	h,5 (ix)
   0A85 E5                 3458 	push	hl
   0A86 CDr2As09           3459 	call	_raw_load
   0A89 F1                 3460 	pop	af
   0A8A F1                 3461 	pop	af
   0A8B F1                 3462 	pop	af
   0A8C F1                 3463 	pop	af
                           3464 ;demo.c:348: bitbuster(packbuffer,address,vram_offset);
   0A8D DD 7E 0A           3465 	ld	a,10 (ix)
   0A90 F5                 3466 	push	af
   0A91 33                 3467 	inc	sp
   0A92 DD 6E 08           3468 	ld	l,8 (ix)
   0A95 DD 66 09           3469 	ld	h,9 (ix)
   0A98 E5                 3470 	push	hl
   0A99 21rC8s01           3471 	ld	hl,#_packbuffer
   0A9C E5                 3472 	push	hl
   0A9D CDr00s00           3473 	call	_bitbuster
   0AA0 F1                 3474 	pop	af
   0AA1 F1                 3475 	pop	af
   0AA2 33                 3476 	inc	sp
   0AA3 DD E1              3477 	pop	ix
   0AA5 C9                 3478 	ret
   0AA6                    3479 _pck_load_end::
   0AA6                    3480 __str_4:
   0AA6 6C 6F 61 64 69 6E  3481 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0AB7 00                 3482 	.db 0x00
   0AB8                    3483 __str_5:
   0AB8 0D                 3484 	.db 0x0D
   0AB9 0A                 3485 	.db 0x0A
   0ABA 00                 3486 	.db 0x00
                           3487 ;demo.c:351: void fadein() {
                           3488 ;	---------------------------------
                           3489 ; Function fadein
                           3490 ; ---------------------------------
   0ABB                    3491 _fadein_start::
   0ABB                    3492 _fadein:
   0ABB DD E5              3493 	push	ix
   0ABD DD 21 00 00        3494 	ld	ix,#0
   0AC1 DD 39              3495 	add	ix,sp
   0AC3 F5                 3496 	push	af
                           3497 ;demo.c:354: if (tick < 8) return;
   0AC4 3Ar28s41           3498 	ld	a,(#_tick+0)
   0AC7 D6 08              3499 	sub	a,#0x08
   0AC9 3Ar29s41           3500 	ld	a,(#_tick+1)
   0ACC DE 00              3501 	sbc	a,#0x00
   0ACE F2rD4s0A           3502 	jp	P,00102$
   0AD1 C3r82s0B           3503 	jp	00113$
   0AD4                    3504 00102$:
                           3505 ;demo.c:356: tick = 0;
   0AD4 21r28s41           3506 	ld	hl,#_tick + 0
   0AD7 36 00              3507 	ld	(hl), #0x00
   0AD9 21r29s41           3508 	ld	hl,#_tick + 1
   0ADC 36 00              3509 	ld	(hl), #0x00
                           3510 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0ADE 0E 00              3511 	ld	c,#0x00
   0AE0                    3512 00109$:
   0AE0 79                 3513 	ld	a,c
   0AE1 D6 20              3514 	sub	a,#0x20
   0AE3 D2r7As0B           3515 	jp	NC,00112$
                           3516 ;demo.c:359: uint8_t r = scratch[i] >> 4;
   0AE6 3ErC6              3517 	ld	a,#<_scratch
   0AE8 81                 3518 	add	a,c
   0AE9 5F                 3519 	ld	e,a
   0AEA 3Es3F              3520 	ld	a,#>_scratch
   0AEC CE 00              3521 	adc	a,#0x00
   0AEE 57                 3522 	ld	d,a
   0AEF 1A                 3523 	ld	a,(de)
   0AF0 47                 3524 	ld	b,a
   0AF1 58                 3525 	ld	e,b
   0AF2 CB 3B              3526 	srl	e
   0AF4 CB 3B              3527 	srl	e
   0AF6 CB 3B              3528 	srl	e
   0AF8 CB 3B              3529 	srl	e
                           3530 ;demo.c:360: uint8_t b = scratch[i] & 0xf;
   0AFA 78                 3531 	ld	a,b
   0AFB E6 0F              3532 	and	a,#0x0F
   0AFD DD 77 FF           3533 	ld	-1 (ix),a
                           3534 ;demo.c:361: uint8_t g = scratch[i+1];
   0B00 51                 3535 	ld	d,c
   0B01 14                 3536 	inc	d
   0B02 3ErC6              3537 	ld	a,#<_scratch
   0B04 82                 3538 	add	a,d
   0B05 6F                 3539 	ld	l,a
   0B06 3Es3F              3540 	ld	a,#>_scratch
   0B08 CE 00              3541 	adc	a,#0x00
   0B0A 67                 3542 	ld	h,a
   0B0B 56                 3543 	ld	d,(hl)
   0B0C DD 72 FE           3544 	ld	-2 (ix),d
                           3545 ;demo.c:363: if (r < (cur_palette[i] >> 4)) r++;
   0B0F 3Er46              3546 	ld	a,#<_cur_palette
   0B11 81                 3547 	add	a,c
   0B12 6F                 3548 	ld	l,a
   0B13 3Es40              3549 	ld	a,#>_cur_palette
   0B15 CE 00              3550 	adc	a,#0x00
   0B17 67                 3551 	ld	h,a
   0B18 56                 3552 	ld	d,(hl)
   0B19 CB 3A              3553 	srl	d
   0B1B CB 3A              3554 	srl	d
   0B1D CB 3A              3555 	srl	d
   0B1F CB 3A              3556 	srl	d
   0B21 7B                 3557 	ld	a,e
   0B22 92                 3558 	sub	a,d
   0B23 30 01              3559 	jr	NC,00104$
   0B25 1C                 3560 	inc	e
   0B26                    3561 00104$:
                           3562 ;demo.c:364: if (b < (cur_palette[i] & 0xf)) b++;
   0B26 3Er46              3563 	ld	a,#<_cur_palette
   0B28 81                 3564 	add	a,c
   0B29 6F                 3565 	ld	l,a
   0B2A 3Es40              3566 	ld	a,#>_cur_palette
   0B2C CE 00              3567 	adc	a,#0x00
   0B2E 67                 3568 	ld	h,a
   0B2F 7E                 3569 	ld	a,(hl)
   0B30 E6 0F              3570 	and	a,#0x0F
   0B32 47                 3571 	ld	b,a
   0B33 DD 7E FF           3572 	ld	a,-1 (ix)
   0B36 90                 3573 	sub	a,b
   0B37 30 03              3574 	jr	NC,00106$
   0B39 DD 34 FF           3575 	inc	-1 (ix)
   0B3C                    3576 00106$:
                           3577 ;demo.c:366: scratch[i] = (r << 4) | b;
   0B3C 3ErC6              3578 	ld	a,#<_scratch
   0B3E 81                 3579 	add	a,c
   0B3F 47                 3580 	ld	b,a
   0B40 3Es3F              3581 	ld	a,#>_scratch
   0B42 CE 00              3582 	adc	a,#0x00
   0B44 57                 3583 	ld	d,a
   0B45 7B                 3584 	ld	a,e
   0B46 07                 3585 	rlca
   0B47 07                 3586 	rlca
   0B48 07                 3587 	rlca
   0B49 07                 3588 	rlca
   0B4A E6 F0              3589 	and	a,#0xF0
   0B4C DD B6 FF           3590 	or	a,-1 (ix)
   0B4F 68                 3591 	ld	l,b
   0B50 62                 3592 	ld	h,d
   0B51 77                 3593 	ld	(hl),a
                           3594 ;demo.c:367: if (g < cur_palette[i+1]) scratch[i+1]++;
   0B52 41                 3595 	ld	b,c
   0B53 04                 3596 	inc	b
   0B54 3Er46              3597 	ld	a,#<_cur_palette
   0B56 80                 3598 	add	a,b
   0B57 5F                 3599 	ld	e,a
   0B58 3Es40              3600 	ld	a,#>_cur_palette
   0B5A CE 00              3601 	adc	a,#0x00
   0B5C 57                 3602 	ld	d,a
   0B5D 1A                 3603 	ld	a,(de)
   0B5E 5F                 3604 	ld	e,a
   0B5F DD 7E FE           3605 	ld	a,-2 (ix)
   0B62 93                 3606 	sub	a,e
   0B63 30 10              3607 	jr	NC,00111$
   0B65 3ErC6              3608 	ld	a,#<_scratch
   0B67 80                 3609 	add	a,b
   0B68 47                 3610 	ld	b,a
   0B69 3Es3F              3611 	ld	a,#>_scratch
   0B6B CE 00              3612 	adc	a,#0x00
   0B6D 5F                 3613 	ld	e,a
   0B6E 68                 3614 	ld	l,b
   0B6F 67                 3615 	ld	h,a
   0B70 7E                 3616 	ld	a,(hl)
   0B71 3C                 3617 	inc	a
   0B72 68                 3618 	ld	l,b
   0B73 63                 3619 	ld	h,e
   0B74 77                 3620 	ld	(hl),a
   0B75                    3621 00111$:
                           3622 ;demo.c:358: for(i = 0; i < 32; i+=2) {
   0B75 0C                 3623 	inc	c
   0B76 0C                 3624 	inc	c
   0B77 C3rE0s0A           3625 	jp	00109$
   0B7A                    3626 00112$:
                           3627 ;demo.c:371: vdp_load_palette(scratch);
   0B7A 21rC6s3F           3628 	ld	hl,#_scratch
   0B7D E5                 3629 	push	hl
   0B7E CDr00s00           3630 	call	_vdp_load_palette
   0B81 F1                 3631 	pop	af
   0B82                    3632 00113$:
   0B82 DD F9              3633 	ld	sp,ix
   0B84 DD E1              3634 	pop	ix
   0B86 C9                 3635 	ret
   0B87                    3636 _fadein_end::
                           3637 ;demo.c:383: void do_ymmm() {
                           3638 ;	---------------------------------
                           3639 ; Function do_ymmm
                           3640 ; ---------------------------------
   0B87                    3641 _do_ymmm_start::
   0B87                    3642 _do_ymmm:
                           3643 ;demo.c:384: }
   0B87 C9                 3644 	ret
   0B88                    3645 _do_ymmm_end::
                           3646 ;demo.c:397: void do_blocks() {
                           3647 ;	---------------------------------
                           3648 ; Function do_blocks
                           3649 ; ---------------------------------
   0B88                    3650 _do_blocks_start::
   0B88                    3651 _do_blocks:
                           3652 ;demo.c:398: }
   0B88 C9                 3653 	ret
   0B89                    3654 _do_blocks_end::
                           3655 ;demo.c:402: void raster_effu() {
                           3656 ;	---------------------------------
                           3657 ; Function raster_effu
                           3658 ; ---------------------------------
   0B89                    3659 _raster_effu_start::
   0B89                    3660 _raster_effu:
                           3661 ;demo.c:403: }
   0B89 C9                 3662 	ret
   0B8A                    3663 _raster_effu_end::
                           3664 ;demo.c:434: void do_2xletter(char cc) {
                           3665 ;	---------------------------------
                           3666 ; Function do_2xletter
                           3667 ; ---------------------------------
   0B8A                    3668 _do_2xletter_start::
   0B8A                    3669 _do_2xletter:
   0B8A DD E5              3670 	push	ix
   0B8C DD 21 00 00        3671 	ld	ix,#0
   0B90 DD 39              3672 	add	ix,sp
   0B92 21 F2 FF           3673 	ld	hl,#-14
   0B95 39                 3674 	add	hl,sp
   0B96 F9                 3675 	ld	sp,hl
                           3676 ;demo.c:435: int cidx = cc - 65;
   0B97 DD 4E 04           3677 	ld	c,4 (ix)
   0B9A DD 7E 04           3678 	ld	a,4 (ix)
   0B9D 17                 3679 	rla	
   0B9E 9F                 3680 	sbc	a,a
   0B9F 47                 3681 	ld	b,a
   0BA0 79                 3682 	ld	a,c
   0BA1 C6 BF              3683 	add	a,#0xBF
   0BA3 DD 77 FE           3684 	ld	-2 (ix),a
   0BA6 78                 3685 	ld	a,b
   0BA7 CE FF              3686 	adc	a,#0xFF
   0BA9 DD 77 FF           3687 	ld	-1 (ix),a
                           3688 ;demo.c:438: for (y=0;y<8;y++) {
   0BAC 3ErB8              3689 	ld	a,#<_font_w
   0BAE DD 86 FE           3690 	add	a,-2 (ix)
   0BB1 5F                 3691 	ld	e,a
   0BB2 3Es0E              3692 	ld	a,#>_font_w
   0BB4 DD 8E FF           3693 	adc	a,-1 (ix)
   0BB7 57                 3694 	ld	d,a
   0BB8 DD 36 FA 00        3695 	ld	-6 (ix),#0x00
   0BBC DD 36 FB 00        3696 	ld	-5 (ix),#0x00
   0BC0 DD 36 F6 00        3697 	ld	-10 (ix),#0x00
   0BC4 DD 36 F7 00        3698 	ld	-9 (ix),#0x00
   0BC8                    3699 00105$:
   0BC8 DD 7E FA           3700 	ld	a,-6 (ix)
   0BCB D6 08              3701 	sub	a,#0x08
   0BCD DD 7E FB           3702 	ld	a,-5 (ix)
   0BD0 DE 00              3703 	sbc	a,#0x00
   0BD2 F2r10s0E           3704 	jp	P,00108$
                           3705 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0BD5 DD 36 FC 00        3706 	ld	-4 (ix),#0x00
   0BD9 DD 36 FD 00        3707 	ld	-3 (ix),#0x00
   0BDD DD 36 F4 00        3708 	ld	-12 (ix),#0x00
   0BE1 DD 36 F5 00        3709 	ld	-11 (ix),#0x00
   0BE5                    3710 00101$:
   0BE5 1A                 3711 	ld	a,(de)
   0BE6 4F                 3712 	ld	c,a
   0BE7 06 00              3713 	ld	b,#0x00
   0BE9 DD 7E FC           3714 	ld	a,-4 (ix)
   0BEC 91                 3715 	sub	a,c
   0BED DD 7E FD           3716 	ld	a,-3 (ix)
   0BF0 98                 3717 	sbc	a,b
   0BF1 F2rE8s0D           3718 	jp	P,00115$
                           3719 ;demo.c:440: cmd.source_x = 127+font_x[cidx]+x;
   0BF4 3Er38              3720 	ld	a,#<_font_x
   0BF6 DD 86 FE           3721 	add	a,-2 (ix)
   0BF9 4F                 3722 	ld	c,a
   0BFA 3Es0E              3723 	ld	a,#>_font_x
   0BFC DD 8E FF           3724 	adc	a,-1 (ix)
   0BFF 47                 3725 	ld	b,a
   0C00 0A                 3726 	ld	a,(bc)
   0C01 4F                 3727 	ld	c,a
   0C02 06 00              3728 	ld	b,#0x00
   0C04 21 7F 00           3729 	ld	hl,#0x007F
   0C07 09                 3730 	add	hl,bc
   0C08 4D                 3731 	ld	c,l
   0C09 44                 3732 	ld	b,h
   0C0A 79                 3733 	ld	a,c
   0C0B DD 86 FC           3734 	add	a,-4 (ix)
   0C0E 4F                 3735 	ld	c,a
   0C0F 78                 3736 	ld	a,b
   0C10 DD 8E FD           3737 	adc	a,-3 (ix)
   0C13 47                 3738 	ld	b,a
   0C14 21r2As41           3739 	ld	hl,#_cmd
   0C17 71                 3740 	ld	(hl),c
   0C18 23                 3741 	inc	hl
   0C19 70                 3742 	ld	(hl),b
                           3743 ;demo.c:441: cmd.source_y = 512+font_y[cidx]+y;
   0C1A 23                 3744 	inc	hl
   0C1B DD 75 F2           3745 	ld	-14 (ix),l
   0C1E DD 74 F3           3746 	ld	-13 (ix),h
   0C21 3Er78              3747 	ld	a,#<_font_y
   0C23 DD 86 FE           3748 	add	a,-2 (ix)
   0C26 4F                 3749 	ld	c,a
   0C27 3Es0E              3750 	ld	a,#>_font_y
   0C29 DD 8E FF           3751 	adc	a,-1 (ix)
   0C2C 47                 3752 	ld	b,a
   0C2D 0A                 3753 	ld	a,(bc)
   0C2E 4F                 3754 	ld	c,a
   0C2F 06 00              3755 	ld	b,#0x00
   0C31 21 00 02           3756 	ld	hl,#0x0200
   0C34 09                 3757 	add	hl,bc
   0C35 4D                 3758 	ld	c,l
   0C36 44                 3759 	ld	b,h
   0C37 79                 3760 	ld	a,c
   0C38 DD 86 FA           3761 	add	a,-6 (ix)
   0C3B 4F                 3762 	ld	c,a
   0C3C 78                 3763 	ld	a,b
   0C3D DD 8E FB           3764 	adc	a,-5 (ix)
   0C40 47                 3765 	ld	b,a
   0C41 DD 6E F2           3766 	ld	l,-14 (ix)
   0C44 DD 66 F3           3767 	ld	h,-13 (ix)
   0C47 71                 3768 	ld	(hl),c
   0C48 23                 3769 	inc	hl
   0C49 70                 3770 	ld	(hl),b
                           3771 ;demo.c:442: cmd.size_x = 1;
   0C4A 21r32s41           3772 	ld	hl, #_cmd + 8
   0C4D 36 01              3773 	ld	(hl),#0x01
   0C4F 23                 3774 	inc	hl
   0C50 36 00              3775 	ld	(hl),#0x00
                           3776 ;demo.c:443: cmd.size_y = 1;
   0C52 21r34s41           3777 	ld	hl, #_cmd + 10
   0C55 36 01              3778 	ld	(hl),#0x01
   0C57 23                 3779 	inc	hl
   0C58 36 00              3780 	ld	(hl),#0x00
                           3781 ;demo.c:444: cmd.argument = 0x00;
   0C5A 3E 00              3782 	ld	a,#0x00
   0C5C 32r37s41           3783 	ld	(#_cmd + 13),a
                           3784 ;demo.c:445: cmd.command = 0x40; // get pixel
   0C5F 3E 40              3785 	ld	a,#0x40
   0C61 32r38s41           3786 	ld	(#_cmd + 14),a
                           3787 ;demo.c:446: vdp_copier(&cmd);
   0C64 D5                 3788 	push	de
   0C65 21r2As41           3789 	ld	hl,#_cmd
   0C68 E5                 3790 	push	hl
   0C69 CDr00s00           3791 	call	_vdp_copier
   0C6C F1                 3792 	pop	af
   0C6D D1                 3793 	pop	de
                           3794 ;demo.c:448: col = vdp2_status(7);
   0C6E D5                 3795 	push	de
   0C6F 3E 07              3796 	ld	a,#0x07
   0C71 F5                 3797 	push	af
   0C72 33                 3798 	inc	sp
   0C73 CDr00s00           3799 	call	_vdp2_status
   0C76 33                 3800 	inc	sp
   0C77 4D                 3801 	ld	c,l
   0C78 D1                 3802 	pop	de
   0C79 DD 71 F8           3803 	ld	-8 (ix),c
   0C7C DD 36 F9 00        3804 	ld	-7 (ix),#0x00
                           3805 ;demo.c:450: cmd.data = col;
   0C80 01r36s41           3806 	ld	bc,#_cmd + 12
   0C83 DD 7E F8           3807 	ld	a,-8 (ix)
   0C86 02                 3808 	ld	(bc),a
                           3809 ;demo.c:451: cmd.dest_x = lx+x*3;
   0C87 21r2Es41           3810 	ld	hl,#_cmd + 4
   0C8A DD 75 F2           3811 	ld	-14 (ix),l
   0C8D DD 74 F3           3812 	ld	-13 (ix),h
   0C90 21rBCs41           3813 	ld	hl,#_lx + 0
   0C93 4E                 3814 	ld	c,(hl)
   0C94 06 00              3815 	ld	b,#0x00
   0C96 79                 3816 	ld	a,c
   0C97 DD 86 F4           3817 	add	a,-12 (ix)
   0C9A 4F                 3818 	ld	c,a
   0C9B 78                 3819 	ld	a,b
   0C9C DD 8E F5           3820 	adc	a,-11 (ix)
   0C9F 47                 3821 	ld	b,a
   0CA0 DD 6E F2           3822 	ld	l,-14 (ix)
   0CA3 DD 66 F3           3823 	ld	h,-13 (ix)
   0CA6 71                 3824 	ld	(hl),c
   0CA7 23                 3825 	inc	hl
   0CA8 70                 3826 	ld	(hl),b
                           3827 ;demo.c:452: cmd.dest_y = ly+y*3;
   0CA9 21r30s41           3828 	ld	hl,#_cmd + 6
   0CAC DD 75 F2           3829 	ld	-14 (ix),l
   0CAF DD 74 F3           3830 	ld	-13 (ix),h
   0CB2 21rBDs41           3831 	ld	hl,#_ly + 0
   0CB5 4E                 3832 	ld	c,(hl)
   0CB6 06 00              3833 	ld	b,#0x00
   0CB8 79                 3834 	ld	a,c
   0CB9 DD 86 F6           3835 	add	a,-10 (ix)
   0CBC 4F                 3836 	ld	c,a
   0CBD 78                 3837 	ld	a,b
   0CBE DD 8E F7           3838 	adc	a,-9 (ix)
   0CC1 47                 3839 	ld	b,a
   0CC2 DD 6E F2           3840 	ld	l,-14 (ix)
   0CC5 DD 66 F3           3841 	ld	h,-13 (ix)
   0CC8 71                 3842 	ld	(hl),c
   0CC9 23                 3843 	inc	hl
   0CCA 70                 3844 	ld	(hl),b
                           3845 ;demo.c:455: cmd.argument = 0x00;
   0CCB 3E 00              3846 	ld	a,#0x00
   0CCD 32r37s41           3847 	ld	(#_cmd + 13),a
                           3848 ;demo.c:456: cmd.command = 0x50; // rect
   0CD0 3E 50              3849 	ld	a,#0x50
   0CD2 32r38s41           3850 	ld	(#_cmd + 14),a
                           3851 ;demo.c:457: vdp_copier(&cmd);
   0CD5 D5                 3852 	push	de
   0CD6 21r2As41           3853 	ld	hl,#_cmd
   0CD9 E5                 3854 	push	hl
   0CDA CDr00s00           3855 	call	_vdp_copier
   0CDD F1                 3856 	pop	af
   0CDE D1                 3857 	pop	de
                           3858 ;demo.c:458: cmd.dest_x = 1+lx+x*3;
   0CDF 21r2Es41           3859 	ld	hl,#_cmd + 4
   0CE2 DD 75 F2           3860 	ld	-14 (ix),l
   0CE5 DD 74 F3           3861 	ld	-13 (ix),h
   0CE8 21rBCs41           3862 	ld	hl,#_lx + 0
   0CEB 4E                 3863 	ld	c,(hl)
   0CEC 06 00              3864 	ld	b,#0x00
   0CEE 03                 3865 	inc	bc
   0CEF 79                 3866 	ld	a,c
   0CF0 DD 86 F4           3867 	add	a,-12 (ix)
   0CF3 4F                 3868 	ld	c,a
   0CF4 78                 3869 	ld	a,b
   0CF5 DD 8E F5           3870 	adc	a,-11 (ix)
   0CF8 47                 3871 	ld	b,a
   0CF9 DD 6E F2           3872 	ld	l,-14 (ix)
   0CFC DD 66 F3           3873 	ld	h,-13 (ix)
   0CFF 71                 3874 	ld	(hl),c
   0D00 23                 3875 	inc	hl
   0D01 70                 3876 	ld	(hl),b
                           3877 ;demo.c:459: cmd.dest_y = ly+y*3;
   0D02 21r30s41           3878 	ld	hl,#_cmd + 6
   0D05 DD 75 F2           3879 	ld	-14 (ix),l
   0D08 DD 74 F3           3880 	ld	-13 (ix),h
   0D0B 21rBDs41           3881 	ld	hl,#_ly + 0
   0D0E 4E                 3882 	ld	c,(hl)
   0D0F 06 00              3883 	ld	b,#0x00
   0D11 79                 3884 	ld	a,c
   0D12 DD 86 F6           3885 	add	a,-10 (ix)
   0D15 4F                 3886 	ld	c,a
   0D16 78                 3887 	ld	a,b
   0D17 DD 8E F7           3888 	adc	a,-9 (ix)
   0D1A 47                 3889 	ld	b,a
   0D1B DD 6E F2           3890 	ld	l,-14 (ix)
   0D1E DD 66 F3           3891 	ld	h,-13 (ix)
   0D21 71                 3892 	ld	(hl),c
   0D22 23                 3893 	inc	hl
   0D23 70                 3894 	ld	(hl),b
                           3895 ;demo.c:460: vdp_copier(&cmd);
   0D24 D5                 3896 	push	de
   0D25 21r2As41           3897 	ld	hl,#_cmd
   0D28 E5                 3898 	push	hl
   0D29 CDr00s00           3899 	call	_vdp_copier
   0D2C F1                 3900 	pop	af
   0D2D D1                 3901 	pop	de
                           3902 ;demo.c:461: cmd.dest_x = 1+lx+x*3;
   0D2E 21r2Es41           3903 	ld	hl,#_cmd + 4
   0D31 DD 75 F2           3904 	ld	-14 (ix),l
   0D34 DD 74 F3           3905 	ld	-13 (ix),h
   0D37 21rBCs41           3906 	ld	hl,#_lx + 0
   0D3A 4E                 3907 	ld	c,(hl)
   0D3B 06 00              3908 	ld	b,#0x00
   0D3D 03                 3909 	inc	bc
   0D3E 79                 3910 	ld	a,c
   0D3F DD 86 F4           3911 	add	a,-12 (ix)
   0D42 4F                 3912 	ld	c,a
   0D43 78                 3913 	ld	a,b
   0D44 DD 8E F5           3914 	adc	a,-11 (ix)
   0D47 47                 3915 	ld	b,a
   0D48 DD 6E F2           3916 	ld	l,-14 (ix)
   0D4B DD 66 F3           3917 	ld	h,-13 (ix)
   0D4E 71                 3918 	ld	(hl),c
   0D4F 23                 3919 	inc	hl
   0D50 70                 3920 	ld	(hl),b
                           3921 ;demo.c:462: cmd.dest_y = 1+ly+y*3;
   0D51 21r30s41           3922 	ld	hl,#_cmd + 6
   0D54 DD 75 F2           3923 	ld	-14 (ix),l
   0D57 DD 74 F3           3924 	ld	-13 (ix),h
   0D5A 21rBDs41           3925 	ld	hl,#_ly + 0
   0D5D 4E                 3926 	ld	c,(hl)
   0D5E 06 00              3927 	ld	b,#0x00
   0D60 03                 3928 	inc	bc
   0D61 79                 3929 	ld	a,c
   0D62 DD 86 F6           3930 	add	a,-10 (ix)
   0D65 4F                 3931 	ld	c,a
   0D66 78                 3932 	ld	a,b
   0D67 DD 8E F7           3933 	adc	a,-9 (ix)
   0D6A 47                 3934 	ld	b,a
   0D6B DD 6E F2           3935 	ld	l,-14 (ix)
   0D6E DD 66 F3           3936 	ld	h,-13 (ix)
   0D71 71                 3937 	ld	(hl),c
   0D72 23                 3938 	inc	hl
   0D73 70                 3939 	ld	(hl),b
                           3940 ;demo.c:463: vdp_copier(&cmd);
   0D74 D5                 3941 	push	de
   0D75 21r2As41           3942 	ld	hl,#_cmd
   0D78 E5                 3943 	push	hl
   0D79 CDr00s00           3944 	call	_vdp_copier
   0D7C F1                 3945 	pop	af
   0D7D D1                 3946 	pop	de
                           3947 ;demo.c:464: cmd.dest_x = lx+x*3;
   0D7E 21r2Es41           3948 	ld	hl,#_cmd + 4
   0D81 DD 75 F2           3949 	ld	-14 (ix),l
   0D84 DD 74 F3           3950 	ld	-13 (ix),h
   0D87 21rBCs41           3951 	ld	hl,#_lx + 0
   0D8A 4E                 3952 	ld	c,(hl)
   0D8B 06 00              3953 	ld	b,#0x00
   0D8D 79                 3954 	ld	a,c
   0D8E DD 86 F4           3955 	add	a,-12 (ix)
   0D91 4F                 3956 	ld	c,a
   0D92 78                 3957 	ld	a,b
   0D93 DD 8E F5           3958 	adc	a,-11 (ix)
   0D96 47                 3959 	ld	b,a
   0D97 DD 6E F2           3960 	ld	l,-14 (ix)
   0D9A DD 66 F3           3961 	ld	h,-13 (ix)
   0D9D 71                 3962 	ld	(hl),c
   0D9E 23                 3963 	inc	hl
   0D9F 70                 3964 	ld	(hl),b
                           3965 ;demo.c:465: cmd.dest_y = 1+ly+y*3;
   0DA0 21r30s41           3966 	ld	hl,#_cmd + 6
   0DA3 DD 75 F2           3967 	ld	-14 (ix),l
   0DA6 DD 74 F3           3968 	ld	-13 (ix),h
   0DA9 21rBDs41           3969 	ld	hl,#_ly + 0
   0DAC 4E                 3970 	ld	c,(hl)
   0DAD 06 00              3971 	ld	b,#0x00
   0DAF 03                 3972 	inc	bc
   0DB0 79                 3973 	ld	a,c
   0DB1 DD 86 F6           3974 	add	a,-10 (ix)
   0DB4 4F                 3975 	ld	c,a
   0DB5 78                 3976 	ld	a,b
   0DB6 DD 8E F7           3977 	adc	a,-9 (ix)
   0DB9 47                 3978 	ld	b,a
   0DBA DD 6E F2           3979 	ld	l,-14 (ix)
   0DBD DD 66 F3           3980 	ld	h,-13 (ix)
   0DC0 71                 3981 	ld	(hl),c
   0DC1 23                 3982 	inc	hl
   0DC2 70                 3983 	ld	(hl),b
                           3984 ;demo.c:466: vdp_copier(&cmd);
   0DC3 D5                 3985 	push	de
   0DC4 21r2As41           3986 	ld	hl,#_cmd
   0DC7 E5                 3987 	push	hl
   0DC8 CDr00s00           3988 	call	_vdp_copier
   0DCB F1                 3989 	pop	af
   0DCC D1                 3990 	pop	de
                           3991 ;demo.c:439: for (x=0;x<font_w[cidx];x++) {
   0DCD DD 7E F4           3992 	ld	a,-12 (ix)
   0DD0 C6 03              3993 	add	a,#0x03
   0DD2 DD 77 F4           3994 	ld	-12 (ix),a
   0DD5 DD 7E F5           3995 	ld	a,-11 (ix)
   0DD8 CE 00              3996 	adc	a,#0x00
   0DDA DD 77 F5           3997 	ld	-11 (ix),a
   0DDD DD 34 FC           3998 	inc	-4 (ix)
   0DE0 20 03              3999 	jr	NZ,00117$
   0DE2 DD 34 FD           4000 	inc	-3 (ix)
   0DE5                    4001 00117$:
   0DE5 C3rE5s0B           4002 	jp	00101$
   0DE8                    4003 00115$:
   0DE8 DD 7E FC           4004 	ld	a,-4 (ix)
   0DEB DD 77 F2           4005 	ld	-14 (ix),a
   0DEE DD 7E FD           4006 	ld	a,-3 (ix)
   0DF1 DD 77 F3           4007 	ld	-13 (ix),a
                           4008 ;demo.c:468: waitVB();
   0DF4 76                 4009 		halt 
                           4010 ;demo.c:438: for (y=0;y<8;y++) {
   0DF5 DD 7E F6           4011 	ld	a,-10 (ix)
   0DF8 C6 03              4012 	add	a,#0x03
   0DFA DD 77 F6           4013 	ld	-10 (ix),a
   0DFD DD 7E F7           4014 	ld	a,-9 (ix)
   0E00 CE 00              4015 	adc	a,#0x00
   0E02 DD 77 F7           4016 	ld	-9 (ix),a
   0E05 DD 34 FA           4017 	inc	-6 (ix)
   0E08 20 03              4018 	jr	NZ,00118$
   0E0A DD 34 FB           4019 	inc	-5 (ix)
   0E0D                    4020 00118$:
   0E0D C3rC8s0B           4021 	jp	00105$
   0E10                    4022 00108$:
                           4023 ;demo.c:471: lx+=font_w[cidx]-1+(x*4);
   0E10 3ErB8              4024 	ld	a,#<_font_w
   0E12 DD 86 FE           4025 	add	a,-2 (ix)
   0E15 4F                 4026 	ld	c,a
   0E16 3Es0E              4027 	ld	a,#>_font_w
   0E18 DD 8E FF           4028 	adc	a,-1 (ix)
   0E1B 47                 4029 	ld	b,a
   0E1C 0A                 4030 	ld	a,(bc)
   0E1D 4F                 4031 	ld	c,a
   0E1E 0D                 4032 	dec	c
   0E1F DD 46 F2           4033 	ld	b,-14 (ix)
   0E22 CB 20              4034 	sla	b
   0E24 CB 20              4035 	sla	b
   0E26 79                 4036 	ld	a,c
   0E27 80                 4037 	add	a,b
   0E28 4F                 4038 	ld	c,a
   0E29 21rBCs41           4039 	ld	hl,#_lx + 0
   0E2C 46                 4040 	ld	b,(hl)
   0E2D 21rBCs41           4041 	ld	hl,#_lx
   0E30 78                 4042 	ld	a,b
   0E31 81                 4043 	add	a,c
   0E32 77                 4044 	ld	(hl),a
   0E33 DD F9              4045 	ld	sp,ix
   0E35 DD E1              4046 	pop	ix
   0E37 C9                 4047 	ret
   0E38                    4048 _do_2xletter_end::
   0E38                    4049 _font_x:
   0E38 01                 4050 	.db #0x01
   0E39 09                 4051 	.db #0x09
   0E3A 11                 4052 	.db #0x11
   0E3B 19                 4053 	.db #0x19
   0E3C 21                 4054 	.db #0x21
   0E3D 29                 4055 	.db #0x29
   0E3E 31                 4056 	.db #0x31
   0E3F 39                 4057 	.db #0x39
   0E40 41                 4058 	.db #0x41
   0E41 46                 4059 	.db #0x46
   0E42 4E                 4060 	.db #0x4E
   0E43 56                 4061 	.db #0x56
   0E44 5E                 4062 	.db #0x5E
   0E45 01                 4063 	.db #0x01
   0E46 0A                 4064 	.db #0x0A
   0E47 12                 4065 	.db #0x12
   0E48 1A                 4066 	.db #0x1A
   0E49 23                 4067 	.db #0x23
   0E4A 2B                 4068 	.db #0x2B
   0E4B 33                 4069 	.db #0x33
   0E4C 3C                 4070 	.db #0x3C
   0E4D 44                 4071 	.db #0x44
   0E4E 4C                 4072 	.db #0x4C
   0E4F 56                 4073 	.db #0x56
   0E50 5E                 4074 	.db #0x5E
   0E51 67                 4075 	.db #0x67
   0E52 00                 4076 	.db #0x00
   0E53 00                 4077 	.db #0x00
   0E54 00                 4078 	.db #0x00
   0E55 00                 4079 	.db #0x00
   0E56 00                 4080 	.db #0x00
   0E57 00                 4081 	.db #0x00
   0E58 01                 4082 	.db #0x01
   0E59 09                 4083 	.db #0x09
   0E5A 11                 4084 	.db #0x11
   0E5B 18                 4085 	.db #0x18
   0E5C 20                 4086 	.db #0x20
   0E5D 28                 4087 	.db #0x28
   0E5E 2F                 4088 	.db #0x2F
   0E5F 37                 4089 	.db #0x37
   0E60 3F                 4090 	.db #0x3F
   0E61 45                 4091 	.db #0x45
   0E62 4C                 4092 	.db #0x4C
   0E63 54                 4093 	.db #0x54
   0E64 5A                 4094 	.db #0x5A
   0E65 64                 4095 	.db #0x64
   0E66 01                 4096 	.db #0x01
   0E67 09                 4097 	.db #0x09
   0E68 11                 4098 	.db #0x11
   0E69 19                 4099 	.db #0x19
   0E6A 21                 4100 	.db #0x21
   0E6B 29                 4101 	.db #0x29
   0E6C 30                 4102 	.db #0x30
   0E6D 38                 4103 	.db #0x38
   0E6E 40                 4104 	.db #0x40
   0E6F 4A                 4105 	.db #0x4A
   0E70 52                 4106 	.db #0x52
   0E71 5A                 4107 	.db #0x5A
   0E72 00                 4108 	.db 0x00
   0E73 00                 4109 	.db 0x00
   0E74 00                 4110 	.db 0x00
   0E75 00                 4111 	.db 0x00
   0E76 00                 4112 	.db 0x00
   0E77 00                 4113 	.db 0x00
   0E78                    4114 _font_y:
   0E78 1C                 4115 	.db #0x1C
   0E79 1C                 4116 	.db #0x1C
   0E7A 1C                 4117 	.db #0x1C
   0E7B 1C                 4118 	.db #0x1C
   0E7C 1C                 4119 	.db #0x1C
   0E7D 1C                 4120 	.db #0x1C
   0E7E 1C                 4121 	.db #0x1C
   0E7F 1C                 4122 	.db #0x1C
   0E80 1C                 4123 	.db #0x1C
   0E81 1C                 4124 	.db #0x1C
   0E82 1C                 4125 	.db #0x1C
   0E83 1C                 4126 	.db #0x1C
   0E84 1C                 4127 	.db #0x1C
   0E85 25                 4128 	.db #0x25
   0E86 25                 4129 	.db #0x25
   0E87 25                 4130 	.db #0x25
   0E88 25                 4131 	.db #0x25
   0E89 25                 4132 	.db #0x25
   0E8A 25                 4133 	.db #0x25
   0E8B 25                 4134 	.db #0x25
   0E8C 25                 4135 	.db #0x25
   0E8D 25                 4136 	.db #0x25
   0E8E 25                 4137 	.db #0x25
   0E8F 25                 4138 	.db #0x25
   0E90 25                 4139 	.db #0x25
   0E91 25                 4140 	.db #0x25
   0E92 00                 4141 	.db #0x00
   0E93 00                 4142 	.db #0x00
   0E94 00                 4143 	.db #0x00
   0E95 00                 4144 	.db #0x00
   0E96 00                 4145 	.db #0x00
   0E97 00                 4146 	.db #0x00
   0E98 37                 4147 	.db #0x37
   0E99 37                 4148 	.db #0x37
   0E9A 37                 4149 	.db #0x37
   0E9B 37                 4150 	.db #0x37
   0E9C 37                 4151 	.db #0x37
   0E9D 37                 4152 	.db #0x37
   0E9E 37                 4153 	.db #0x37
   0E9F 37                 4154 	.db #0x37
   0EA0 37                 4155 	.db #0x37
   0EA1 37                 4156 	.db #0x37
   0EA2 37                 4157 	.db #0x37
   0EA3 37                 4158 	.db #0x37
   0EA4 37                 4159 	.db #0x37
   0EA5 37                 4160 	.db #0x37
   0EA6 40                 4161 	.db #0x40
   0EA7 40                 4162 	.db #0x40
   0EA8 40                 4163 	.db #0x40
   0EA9 40                 4164 	.db #0x40
   0EAA 40                 4165 	.db #0x40
   0EAB 40                 4166 	.db #0x40
   0EAC 40                 4167 	.db #0x40
   0EAD 40                 4168 	.db #0x40
   0EAE 40                 4169 	.db #0x40
   0EAF 40                 4170 	.db #0x40
   0EB0 40                 4171 	.db #0x40
   0EB1 40                 4172 	.db #0x40
   0EB2 00                 4173 	.db 0x00
   0EB3 00                 4174 	.db 0x00
   0EB4 00                 4175 	.db 0x00
   0EB5 00                 4176 	.db 0x00
   0EB6 00                 4177 	.db 0x00
   0EB7 00                 4178 	.db 0x00
   0EB8                    4179 _font_w:
   0EB8 07                 4180 	.db #0x07
   0EB9 07                 4181 	.db #0x07
   0EBA 07                 4182 	.db #0x07
   0EBB 07                 4183 	.db #0x07
   0EBC 07                 4184 	.db #0x07
   0EBD 07                 4185 	.db #0x07
   0EBE 07                 4186 	.db #0x07
   0EBF 07                 4187 	.db #0x07
   0EC0 04                 4188 	.db #0x04
   0EC1 07                 4189 	.db #0x07
   0EC2 07                 4190 	.db #0x07
   0EC3 07                 4191 	.db #0x07
   0EC4 09                 4192 	.db #0x09
   0EC5 08                 4193 	.db #0x08
   0EC6 07                 4194 	.db #0x07
   0EC7 07                 4195 	.db #0x07
   0EC8 08                 4196 	.db #0x08
   0EC9 07                 4197 	.db #0x07
   0ECA 07                 4198 	.db #0x07
   0ECB 08                 4199 	.db #0x08
   0ECC 07                 4200 	.db #0x07
   0ECD 07                 4201 	.db #0x07
   0ECE 09                 4202 	.db #0x09
   0ECF 07                 4203 	.db #0x07
   0ED0 08                 4204 	.db #0x08
   0ED1 07                 4205 	.db #0x07
   0ED2 00                 4206 	.db #0x00
   0ED3 00                 4207 	.db #0x00
   0ED4 00                 4208 	.db #0x00
   0ED5 00                 4209 	.db #0x00
   0ED6 00                 4210 	.db #0x00
   0ED7 00                 4211 	.db #0x00
   0ED8 07                 4212 	.db #0x07
   0ED9 07                 4213 	.db #0x07
   0EDA 06                 4214 	.db #0x06
   0EDB 07                 4215 	.db #0x07
   0EDC 07                 4216 	.db #0x07
   0EDD 07                 4217 	.db #0x07
   0EDE 07                 4218 	.db #0x07
   0EDF 07                 4219 	.db #0x07
   0EE0 05                 4220 	.db #0x05
   0EE1 06                 4221 	.db #0x06
   0EE2 07                 4222 	.db #0x07
   0EE3 05                 4223 	.db #0x05
   0EE4 09                 4224 	.db #0x09
   0EE5 07                 4225 	.db #0x07
   0EE6 07                 4226 	.db #0x07
   0EE7 07                 4227 	.db #0x07
   0EE8 07                 4228 	.db #0x07
   0EE9 07                 4229 	.db #0x07
   0EEA 07                 4230 	.db #0x07
   0EEB 06                 4231 	.db #0x06
   0EEC 07                 4232 	.db #0x07
   0EED 07                 4233 	.db #0x07
   0EEE 09                 4234 	.db #0x09
   0EEF 07                 4235 	.db #0x07
   0EF0 07                 4236 	.db #0x07
   0EF1 07                 4237 	.db #0x07
   0EF2 00                 4238 	.db 0x00
   0EF3 00                 4239 	.db 0x00
   0EF4 00                 4240 	.db 0x00
   0EF5 00                 4241 	.db 0x00
   0EF6 00                 4242 	.db 0x00
   0EF7 00                 4243 	.db 0x00
                           4244 ;demo.c:475: void do_letter(char cc) {
                           4245 ;	---------------------------------
                           4246 ; Function do_letter
                           4247 ; ---------------------------------
   0EF8                    4248 _do_letter_start::
   0EF8                    4249 _do_letter:
   0EF8 DD E5              4250 	push	ix
   0EFA DD 21 00 00        4251 	ld	ix,#0
   0EFE DD 39              4252 	add	ix,sp
   0F00 F5                 4253 	push	af
                           4254 ;demo.c:476: int cidx = cc - 65;
   0F01 DD 4E 04           4255 	ld	c,4 (ix)
   0F04 DD 7E 04           4256 	ld	a,4 (ix)
   0F07 17                 4257 	rla	
   0F08 9F                 4258 	sbc	a,a
   0F09 47                 4259 	ld	b,a
   0F0A 79                 4260 	ld	a,c
   0F0B C6 BF              4261 	add	a,#0xBF
   0F0D DD 77 FE           4262 	ld	-2 (ix),a
   0F10 78                 4263 	ld	a,b
   0F11 CE FF              4264 	adc	a,#0xFF
   0F13 DD 77 FF           4265 	ld	-1 (ix),a
                           4266 ;demo.c:477: cmd.source_x = 127+font_x[cidx];
   0F16 3Er38              4267 	ld	a,#<_font_x
   0F18 DD 86 FE           4268 	add	a,-2 (ix)
   0F1B 5F                 4269 	ld	e,a
   0F1C 3Es0E              4270 	ld	a,#>_font_x
   0F1E DD 8E FF           4271 	adc	a,-1 (ix)
   0F21 57                 4272 	ld	d,a
   0F22 1A                 4273 	ld	a,(de)
   0F23 5F                 4274 	ld	e,a
   0F24 16 00              4275 	ld	d,#0x00
   0F26 21 7F 00           4276 	ld	hl,#0x007F
   0F29 19                 4277 	add	hl,de
   0F2A EB                 4278 	ex	de,hl
   0F2B 21r2As41           4279 	ld	hl,#_cmd
   0F2E 73                 4280 	ld	(hl),e
   0F2F 23                 4281 	inc	hl
   0F30 72                 4282 	ld	(hl),d
                           4283 ;demo.c:478: cmd.source_y = 512+font_y[cidx];
   0F31 11r2Cs41           4284 	ld	de,#_cmd + 2
   0F34 3Er78              4285 	ld	a,#<_font_y
   0F36 DD 86 FE           4286 	add	a,-2 (ix)
   0F39 4F                 4287 	ld	c,a
   0F3A 3Es0E              4288 	ld	a,#>_font_y
   0F3C DD 8E FF           4289 	adc	a,-1 (ix)
   0F3F 47                 4290 	ld	b,a
   0F40 0A                 4291 	ld	a,(bc)
   0F41 4F                 4292 	ld	c,a
   0F42 06 00              4293 	ld	b,#0x00
   0F44 21 00 02           4294 	ld	hl,#0x0200
   0F47 09                 4295 	add	hl,bc
   0F48 4D                 4296 	ld	c,l
   0F49 44                 4297 	ld	b,h
   0F4A EB                 4298 	ex	de,hl
   0F4B 71                 4299 	ld	(hl),c
   0F4C 23                 4300 	inc	hl
   0F4D 70                 4301 	ld	(hl),b
                           4302 ;demo.c:479: cmd.dest_x = lx;
   0F4E 01r2Es41           4303 	ld	bc,#_cmd + 4
   0F51 21rBCs41           4304 	ld	hl,#_lx + 0
   0F54 5E                 4305 	ld	e,(hl)
   0F55 16 00              4306 	ld	d,#0x00
   0F57 69                 4307 	ld	l,c
   0F58 60                 4308 	ld	h,b
   0F59 73                 4309 	ld	(hl),e
   0F5A 23                 4310 	inc	hl
   0F5B 72                 4311 	ld	(hl),d
                           4312 ;demo.c:480: cmd.dest_y = ly;
   0F5C 01r30s41           4313 	ld	bc,#_cmd + 6
   0F5F 21rBDs41           4314 	ld	hl,#_ly + 0
   0F62 5E                 4315 	ld	e,(hl)
   0F63 16 00              4316 	ld	d,#0x00
   0F65 69                 4317 	ld	l,c
   0F66 60                 4318 	ld	h,b
   0F67 73                 4319 	ld	(hl),e
   0F68 23                 4320 	inc	hl
   0F69 72                 4321 	ld	(hl),d
                           4322 ;demo.c:481: cmd.size_x = font_w[cidx];
   0F6A 01r32s41           4323 	ld	bc,#_cmd + 8
   0F6D 3ErB8              4324 	ld	a,#<_font_w
   0F6F DD 86 FE           4325 	add	a,-2 (ix)
   0F72 5F                 4326 	ld	e,a
   0F73 3Es0E              4327 	ld	a,#>_font_w
   0F75 DD 8E FF           4328 	adc	a,-1 (ix)
   0F78 57                 4329 	ld	d,a
   0F79 1A                 4330 	ld	a,(de)
   0F7A 5F                 4331 	ld	e,a
   0F7B 16 00              4332 	ld	d,#0x00
   0F7D 69                 4333 	ld	l,c
   0F7E 60                 4334 	ld	h,b
   0F7F 73                 4335 	ld	(hl),e
   0F80 23                 4336 	inc	hl
   0F81 72                 4337 	ld	(hl),d
                           4338 ;demo.c:482: cmd.size_y = 8;
   0F82 21r34s41           4339 	ld	hl, #_cmd + 10
   0F85 36 08              4340 	ld	(hl),#0x08
   0F87 23                 4341 	inc	hl
   0F88 36 00              4342 	ld	(hl),#0x00
                           4343 ;demo.c:483: cmd.argument = 0x00;
   0F8A 3E 00              4344 	ld	a,#0x00
   0F8C 32r37s41           4345 	ld	(#_cmd + 13),a
                           4346 ;demo.c:484: cmd.command = 0x90; // logical vram to vram
   0F8F 3E 90              4347 	ld	a,#0x90
   0F91 32r38s41           4348 	ld	(#_cmd + 14),a
                           4349 ;demo.c:485: vdp_copier(&cmd);
   0F94 21r2As41           4350 	ld	hl,#_cmd
   0F97 E5                 4351 	push	hl
   0F98 CDr00s00           4352 	call	_vdp_copier
   0F9B F1                 4353 	pop	af
                           4354 ;demo.c:486: lx+=font_w[cidx]-1;
   0F9C 3ErB8              4355 	ld	a,#<_font_w
   0F9E DD 86 FE           4356 	add	a,-2 (ix)
   0FA1 4F                 4357 	ld	c,a
   0FA2 3Es0E              4358 	ld	a,#>_font_w
   0FA4 DD 8E FF           4359 	adc	a,-1 (ix)
   0FA7 47                 4360 	ld	b,a
   0FA8 0A                 4361 	ld	a,(bc)
   0FA9 4F                 4362 	ld	c,a
   0FAA 0D                 4363 	dec	c
   0FAB 21rBCs41           4364 	ld	hl,#_lx
   0FAE 7E                 4365 	ld	a,(hl)
   0FAF 81                 4366 	add	a,c
   0FB0 77                 4367 	ld	(hl),a
   0FB1 DD F9              4368 	ld	sp,ix
   0FB3 DD E1              4369 	pop	ix
   0FB5 C9                 4370 	ret
   0FB6                    4371 _do_letter_end::
                           4372 ;demo.c:490: void do_letter_tall(char cc) {
                           4373 ;	---------------------------------
                           4374 ; Function do_letter_tall
                           4375 ; ---------------------------------
   0FB6                    4376 _do_letter_tall_start::
   0FB6                    4377 _do_letter_tall:
   0FB6 DD E5              4378 	push	ix
   0FB8 DD 21 00 00        4379 	ld	ix,#0
   0FBC DD 39              4380 	add	ix,sp
   0FBE F5                 4381 	push	af
                           4382 ;demo.c:491: int cidx = cc - 65;
   0FBF DD 4E 04           4383 	ld	c,4 (ix)
   0FC2 DD 7E 04           4384 	ld	a,4 (ix)
   0FC5 17                 4385 	rla	
   0FC6 9F                 4386 	sbc	a,a
   0FC7 47                 4387 	ld	b,a
   0FC8 79                 4388 	ld	a,c
   0FC9 C6 BF              4389 	add	a,#0xBF
   0FCB DD 77 FE           4390 	ld	-2 (ix),a
   0FCE 78                 4391 	ld	a,b
   0FCF CE FF              4392 	adc	a,#0xFF
   0FD1 DD 77 FF           4393 	ld	-1 (ix),a
                           4394 ;demo.c:492: cmd.source_x = 127+font_x[cidx];
   0FD4 3Er38              4395 	ld	a,#<_font_x
   0FD6 DD 86 FE           4396 	add	a,-2 (ix)
   0FD9 5F                 4397 	ld	e,a
   0FDA 3Es0E              4398 	ld	a,#>_font_x
   0FDC DD 8E FF           4399 	adc	a,-1 (ix)
   0FDF 57                 4400 	ld	d,a
   0FE0 1A                 4401 	ld	a,(de)
   0FE1 5F                 4402 	ld	e,a
   0FE2 16 00              4403 	ld	d,#0x00
   0FE4 21 7F 00           4404 	ld	hl,#0x007F
   0FE7 19                 4405 	add	hl,de
   0FE8 EB                 4406 	ex	de,hl
   0FE9 21r2As41           4407 	ld	hl,#_cmd
   0FEC 73                 4408 	ld	(hl),e
   0FED 23                 4409 	inc	hl
   0FEE 72                 4410 	ld	(hl),d
                           4411 ;demo.c:493: cmd.source_y = 512+font_y[cidx]-1;
   0FEF 11r2Cs41           4412 	ld	de,#_cmd + 2
   0FF2 3Er78              4413 	ld	a,#<_font_y
   0FF4 DD 86 FE           4414 	add	a,-2 (ix)
   0FF7 4F                 4415 	ld	c,a
   0FF8 3Es0E              4416 	ld	a,#>_font_y
   0FFA DD 8E FF           4417 	adc	a,-1 (ix)
   0FFD 47                 4418 	ld	b,a
   0FFE 0A                 4419 	ld	a,(bc)
   0FFF 4F                 4420 	ld	c,a
   1000 06 00              4421 	ld	b,#0x00
   1002 21 FF 01           4422 	ld	hl,#0x01FF
   1005 09                 4423 	add	hl,bc
   1006 4D                 4424 	ld	c,l
   1007 44                 4425 	ld	b,h
   1008 EB                 4426 	ex	de,hl
   1009 71                 4427 	ld	(hl),c
   100A 23                 4428 	inc	hl
   100B 70                 4429 	ld	(hl),b
                           4430 ;demo.c:494: cmd.dest_x = lx;
   100C 01r2Es41           4431 	ld	bc,#_cmd + 4
   100F 21rBCs41           4432 	ld	hl,#_lx + 0
   1012 5E                 4433 	ld	e,(hl)
   1013 16 00              4434 	ld	d,#0x00
   1015 69                 4435 	ld	l,c
   1016 60                 4436 	ld	h,b
   1017 73                 4437 	ld	(hl),e
   1018 23                 4438 	inc	hl
   1019 72                 4439 	ld	(hl),d
                           4440 ;demo.c:495: cmd.dest_y = ly;
   101A 01r30s41           4441 	ld	bc,#_cmd + 6
   101D 21rBDs41           4442 	ld	hl,#_ly + 0
   1020 5E                 4443 	ld	e,(hl)
   1021 16 00              4444 	ld	d,#0x00
   1023 69                 4445 	ld	l,c
   1024 60                 4446 	ld	h,b
   1025 73                 4447 	ld	(hl),e
   1026 23                 4448 	inc	hl
   1027 72                 4449 	ld	(hl),d
                           4450 ;demo.c:496: cmd.size_x = font_w[cidx];
   1028 01r32s41           4451 	ld	bc,#_cmd + 8
   102B 3ErB8              4452 	ld	a,#<_font_w
   102D DD 86 FE           4453 	add	a,-2 (ix)
   1030 5F                 4454 	ld	e,a
   1031 3Es0E              4455 	ld	a,#>_font_w
   1033 DD 8E FF           4456 	adc	a,-1 (ix)
   1036 57                 4457 	ld	d,a
   1037 1A                 4458 	ld	a,(de)
   1038 5F                 4459 	ld	e,a
   1039 16 00              4460 	ld	d,#0x00
   103B 69                 4461 	ld	l,c
   103C 60                 4462 	ld	h,b
   103D 73                 4463 	ld	(hl),e
   103E 23                 4464 	inc	hl
   103F 72                 4465 	ld	(hl),d
                           4466 ;demo.c:497: cmd.size_y = 10;
   1040 21r34s41           4467 	ld	hl, #_cmd + 10
   1043 36 0A              4468 	ld	(hl),#0x0A
   1045 23                 4469 	inc	hl
   1046 36 00              4470 	ld	(hl),#0x00
                           4471 ;demo.c:498: cmd.argument = 0x00;
   1048 3E 00              4472 	ld	a,#0x00
   104A 32r37s41           4473 	ld	(#_cmd + 13),a
                           4474 ;demo.c:499: cmd.command = 0x90; // logical vram to vram
   104D 3E 90              4475 	ld	a,#0x90
   104F 32r38s41           4476 	ld	(#_cmd + 14),a
                           4477 ;demo.c:500: vdp_copier(&cmd);
   1052 21r2As41           4478 	ld	hl,#_cmd
   1055 E5                 4479 	push	hl
   1056 CDr00s00           4480 	call	_vdp_copier
   1059 F1                 4481 	pop	af
                           4482 ;demo.c:501: lx+=font_w[cidx]-1;
   105A 3ErB8              4483 	ld	a,#<_font_w
   105C DD 86 FE           4484 	add	a,-2 (ix)
   105F 4F                 4485 	ld	c,a
   1060 3Es0E              4486 	ld	a,#>_font_w
   1062 DD 8E FF           4487 	adc	a,-1 (ix)
   1065 47                 4488 	ld	b,a
   1066 0A                 4489 	ld	a,(bc)
   1067 4F                 4490 	ld	c,a
   1068 0D                 4491 	dec	c
   1069 21rBCs41           4492 	ld	hl,#_lx
   106C 7E                 4493 	ld	a,(hl)
   106D 81                 4494 	add	a,c
   106E 77                 4495 	ld	(hl),a
   106F DD F9              4496 	ld	sp,ix
   1071 DD E1              4497 	pop	ix
   1073 C9                 4498 	ret
   1074                    4499 _do_letter_tall_end::
                           4500 ;demo.c:504: void drawstr(char* str, uint8_t x, uint8_t y) {
                           4501 ;	---------------------------------
                           4502 ; Function drawstr
                           4503 ; ---------------------------------
   1074                    4504 _drawstr_start::
   1074                    4505 _drawstr:
   1074 DD E5              4506 	push	ix
   1076 DD 21 00 00        4507 	ld	ix,#0
   107A DD 39              4508 	add	ix,sp
                           4509 ;demo.c:505: char* c = str;
   107C DD 4E 04           4510 	ld	c,4 (ix)
   107F DD 46 05           4511 	ld	b,5 (ix)
                           4512 ;demo.c:506: lx = x;
   1082 DD 5E 06           4513 	ld	e,6 (ix)
   1085 21rBCs41           4514 	ld	hl,#_lx + 0
   1088 73                 4515 	ld	(hl), e
                           4516 ;demo.c:507: ly = y;
   1089 DD 7E 07           4517 	ld	a,7 (ix)
   108C 21rBDs41           4518 	ld	hl,#_ly + 0
   108F 77                 4519 	ld	(hl), a
                           4520 ;demo.c:508: while (*c) {
   1090                    4521 00107$:
   1090 0A                 4522 	ld	a,(bc)
   1091 57                 4523 	ld	d,a
   1092 B7                 4524 	or	a,a
   1093 28 42              4525 	jr	Z,00110$
                           4526 ;demo.c:509: char ltr = *c++; 
   1095 03                 4527 	inc	bc
                           4528 ;demo.c:510: if (ltr == ' ') lx+=4;
   1096 7A                 4529 	ld	a,d
   1097 D6 20              4530 	sub	a,#0x20
   1099 20 1E              4531 	jr	NZ,00105$
   109B FD 21rBCs41        4532 	ld	iy,#_lx
   109F FD 34 00           4533 	inc	0 (iy)
   10A2 FD 21rBCs41        4534 	ld	iy,#_lx
   10A6 FD 34 00           4535 	inc	0 (iy)
   10A9 FD 21rBCs41        4536 	ld	iy,#_lx
   10AD FD 34 00           4537 	inc	0 (iy)
   10B0 FD 21rBCs41        4538 	ld	iy,#_lx
   10B4 FD 34 00           4539 	inc	0 (iy)
   10B7 18 D7              4540 	jr	00107$
   10B9                    4541 00105$:
                           4542 ;demo.c:511: else if (ltr == '_') { ly+=9; lx = x; }
   10B9 7A                 4543 	ld	a,d
   10BA D6 5F              4544 	sub	a,#0x5F
   10BC 20 0D              4545 	jr	NZ,00102$
   10BE 21rBDs41           4546 	ld	hl,#_ly
   10C1 7E                 4547 	ld	a,(hl)
   10C2 C6 09              4548 	add	a,#0x09
   10C4 77                 4549 	ld	(hl),a
   10C5 21rBCs41           4550 	ld	hl,#_lx + 0
   10C8 73                 4551 	ld	(hl), e
   10C9 18 C5              4552 	jr	00107$
   10CB                    4553 00102$:
                           4554 ;demo.c:512: else do_letter(ltr);
   10CB C5                 4555 	push	bc
   10CC D5                 4556 	push	de
   10CD D5                 4557 	push	de
   10CE 33                 4558 	inc	sp
   10CF CDrF8s0E           4559 	call	_do_letter
   10D2 33                 4560 	inc	sp
   10D3 D1                 4561 	pop	de
   10D4 C1                 4562 	pop	bc
   10D5 18 B9              4563 	jr	00107$
   10D7                    4564 00110$:
   10D7 DD E1              4565 	pop	ix
   10D9 C9                 4566 	ret
   10DA                    4567 _drawstr_end::
                           4568 ;demo.c:519: void drawstrslow(char* str, uint8_t x, uint8_t y) {
                           4569 ;	---------------------------------
                           4570 ; Function drawstrslow
                           4571 ; ---------------------------------
   10DA                    4572 _drawstrslow_start::
   10DA                    4573 _drawstrslow:
   10DA DD E5              4574 	push	ix
   10DC DD 21 00 00        4575 	ld	ix,#0
   10E0 DD 39              4576 	add	ix,sp
                           4577 ;demo.c:520: char* c = str+ltrpointer;
   10E2 21rBEs41           4578 	ld	hl,#_ltrpointer
   10E5 DD 7E 04           4579 	ld	a,4 (ix)
   10E8 86                 4580 	add	a,(hl)
   10E9 4F                 4581 	ld	c,a
   10EA DD 7E 05           4582 	ld	a,5 (ix)
   10ED 23                 4583 	inc	hl
   10EE 8E                 4584 	adc	a,(hl)
   10EF 47                 4585 	ld	b,a
                           4586 ;demo.c:521: if (ltrpointer > slowend) return;
   10F0 21rC0s41           4587 	ld	hl,#_slowend
   10F3 7E                 4588 	ld	a,(hl)
   10F4 FD 21rBEs41        4589 	ld	iy,#_ltrpointer
   10F8 FD 96 00           4590 	sub	a,0 (iy)
   10FB 23                 4591 	inc	hl
   10FC 7E                 4592 	ld	a,(hl)
   10FD FD 21rBEs41        4593 	ld	iy,#_ltrpointer
   1101 FD 9E 01           4594 	sbc	a,1 (iy)
   1104 F2r0As11           4595 	jp	P,00102$
   1107 C3r75s11           4596 	jp	00114$
   110A                    4597 00102$:
                           4598 ;demo.c:522: if (ltrpointer == 0) {
   110A 3ArBEs41           4599 	ld	a,(#_ltrpointer+0)
   110D 21rBFs41           4600 	ld	hl,#_ltrpointer + 1
   1110 B6                 4601 	or	a,(hl)
   1111 20 0E              4602 	jr	NZ,00111$
                           4603 ;demo.c:523: lx = x;
   1113 DD 7E 06           4604 	ld	a,6 (ix)
   1116 21rBCs41           4605 	ld	hl,#_lx + 0
   1119 77                 4606 	ld	(hl), a
                           4607 ;demo.c:524: ly = y;
   111A DD 7E 07           4608 	ld	a,7 (ix)
   111D 21rBDs41           4609 	ld	hl,#_ly + 0
   1120 77                 4610 	ld	(hl), a
                           4611 ;demo.c:526: while (*c) {
   1121                    4612 00111$:
   1121 0A                 4613 	ld	a,(bc)
   1122 4F                 4614 	ld	c,a
   1123 B7                 4615 	or	a,a
   1124 28 3F              4616 	jr	Z,00113$
                           4617 ;demo.c:527: char ltr = *c++; 
                           4618 ;demo.c:528: if (ltr == ' ') lx+=4;
   1126 79                 4619 	ld	a,c
   1127 D6 20              4620 	sub	a,#0x20
   1129 20 1E              4621 	jr	NZ,00109$
   112B FD 21rBCs41        4622 	ld	iy,#_lx
   112F FD 34 00           4623 	inc	0 (iy)
   1132 FD 21rBCs41        4624 	ld	iy,#_lx
   1136 FD 34 00           4625 	inc	0 (iy)
   1139 FD 21rBCs41        4626 	ld	iy,#_lx
   113D FD 34 00           4627 	inc	0 (iy)
   1140 FD 21rBCs41        4628 	ld	iy,#_lx
   1144 FD 34 00           4629 	inc	0 (iy)
   1147 18 1C              4630 	jr	00113$
   1149                    4631 00109$:
                           4632 ;demo.c:529: else if (ltr == '_') { ly+=9; lx = x; }
   1149 79                 4633 	ld	a,c
   114A D6 5F              4634 	sub	a,#0x5F
   114C 20 10              4635 	jr	NZ,00106$
   114E 21rBDs41           4636 	ld	hl,#_ly
   1151 7E                 4637 	ld	a,(hl)
   1152 C6 09              4638 	add	a,#0x09
   1154 77                 4639 	ld	(hl),a
   1155 DD 7E 06           4640 	ld	a,6 (ix)
   1158 21rBCs41           4641 	ld	hl,#_lx + 0
   115B 77                 4642 	ld	(hl), a
   115C 18 07              4643 	jr	00113$
   115E                    4644 00106$:
                           4645 ;demo.c:530: else do_letter(ltr);
   115E 79                 4646 	ld	a,c
   115F F5                 4647 	push	af
   1160 33                 4648 	inc	sp
   1161 CDrF8s0E           4649 	call	_do_letter
   1164 33                 4650 	inc	sp
                           4651 ;demo.c:531: break;
   1165                    4652 00113$:
                           4653 ;demo.c:534: ltrpointer++;
   1165 FD 21rBEs41        4654 	ld	iy,#_ltrpointer
   1169 FD 34 00           4655 	inc	0 (iy)
   116C 20 07              4656 	jr	NZ,00125$
   116E FD 21rBEs41        4657 	ld	iy,#_ltrpointer
   1172 FD 34 01           4658 	inc	1 (iy)
   1175                    4659 00125$:
   1175                    4660 00114$:
   1175 DD E1              4661 	pop	ix
   1177 C9                 4662 	ret
   1178                    4663 _drawstrslow_end::
                           4664 ;demo.c:537: void drawstr2x(char* str, uint8_t x, uint8_t y) {
                           4665 ;	---------------------------------
                           4666 ; Function drawstr2x
                           4667 ; ---------------------------------
   1178                    4668 _drawstr2x_start::
   1178                    4669 _drawstr2x:
   1178 DD E5              4670 	push	ix
   117A DD 21 00 00        4671 	ld	ix,#0
   117E DD 39              4672 	add	ix,sp
                           4673 ;demo.c:538: char* c = str;
   1180 DD 4E 04           4674 	ld	c,4 (ix)
   1183 DD 46 05           4675 	ld	b,5 (ix)
                           4676 ;demo.c:539: lx = x;
   1186 DD 5E 06           4677 	ld	e,6 (ix)
   1189 21rBCs41           4678 	ld	hl,#_lx + 0
   118C 73                 4679 	ld	(hl), e
                           4680 ;demo.c:540: ly = y;
   118D DD 7E 07           4681 	ld	a,7 (ix)
   1190 21rBDs41           4682 	ld	hl,#_ly + 0
   1193 77                 4683 	ld	(hl), a
                           4684 ;demo.c:541: while (*c) {
   1194                    4685 00107$:
   1194 0A                 4686 	ld	a,(bc)
   1195 57                 4687 	ld	d,a
   1196 B7                 4688 	or	a,a
   1197 28 2D              4689 	jr	Z,00110$
                           4690 ;demo.c:542: char ltr = *c++; 
   1199 03                 4691 	inc	bc
                           4692 ;demo.c:543: if (ltr == ' ') lx+=4*4;
   119A 7A                 4693 	ld	a,d
   119B D6 20              4694 	sub	a,#0x20
   119D 20 09              4695 	jr	NZ,00105$
   119F 21rBCs41           4696 	ld	hl,#_lx
   11A2 7E                 4697 	ld	a,(hl)
   11A3 C6 10              4698 	add	a,#0x10
   11A5 77                 4699 	ld	(hl),a
   11A6 18 EC              4700 	jr	00107$
   11A8                    4701 00105$:
                           4702 ;demo.c:544: else if (ltr == '_') { ly+=9*4; lx = x; }
   11A8 7A                 4703 	ld	a,d
   11A9 D6 5F              4704 	sub	a,#0x5F
   11AB 20 0D              4705 	jr	NZ,00102$
   11AD 21rBDs41           4706 	ld	hl,#_ly
   11B0 7E                 4707 	ld	a,(hl)
   11B1 C6 24              4708 	add	a,#0x24
   11B3 77                 4709 	ld	(hl),a
   11B4 21rBCs41           4710 	ld	hl,#_lx + 0
   11B7 73                 4711 	ld	(hl), e
   11B8 18 DA              4712 	jr	00107$
   11BA                    4713 00102$:
                           4714 ;demo.c:545: else do_2xletter(ltr);
   11BA C5                 4715 	push	bc
   11BB D5                 4716 	push	de
   11BC D5                 4717 	push	de
   11BD 33                 4718 	inc	sp
   11BE CDr8As0B           4719 	call	_do_2xletter
   11C1 33                 4720 	inc	sp
   11C2 D1                 4721 	pop	de
   11C3 C1                 4722 	pop	bc
   11C4 18 CE              4723 	jr	00107$
   11C6                    4724 00110$:
   11C6 DD E1              4725 	pop	ix
   11C8 C9                 4726 	ret
   11C9                    4727 _drawstr2x_end::
                           4728 ;demo.c:550: void drawsine(char* str, uint8_t x, uint8_t y) {
                           4729 ;	---------------------------------
                           4730 ; Function drawsine
                           4731 ; ---------------------------------
   11C9                    4732 _drawsine_start::
   11C9                    4733 _drawsine:
   11C9 DD E5              4734 	push	ix
   11CB DD 21 00 00        4735 	ld	ix,#0
   11CF DD 39              4736 	add	ix,sp
   11D1 3B                 4737 	dec	sp
                           4738 ;demo.c:551: char* c = str;
   11D2 DD 4E 04           4739 	ld	c,4 (ix)
   11D5 DD 46 05           4740 	ld	b,5 (ix)
                           4741 ;demo.c:552: lx = x;
   11D8 DD 7E 06           4742 	ld	a,6 (ix)
   11DB 21rBCs41           4743 	ld	hl,#_lx + 0
   11DE 77                 4744 	ld	(hl), a
                           4745 ;demo.c:554: while (*c) {
   11DF                    4746 00104$:
   11DF 0A                 4747 	ld	a,(bc)
   11E0 5F                 4748 	ld	e,a
   11E1 B7                 4749 	or	a,a
   11E2 CAr48s12           4750 	jp	Z,00107$
                           4751 ;demo.c:555: char ltr = *c++; 
   11E5 03                 4752 	inc	bc
   11E6 DD 73 FF           4753 	ld	-1 (ix),e
                           4754 ;demo.c:556: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   11E9 21rBCs41           4755 	ld	hl,#_lx + 0
   11EC 5E                 4756 	ld	e,(hl)
   11ED 16 00              4757 	ld	d,#0x00
   11EF 21r26s41           4758 	ld	hl,#_vbicount
   11F2 7B                 4759 	ld	a,e
   11F3 86                 4760 	add	a,(hl)
   11F4 5F                 4761 	ld	e,a
   11F5 7A                 4762 	ld	a,d
   11F6 23                 4763 	inc	hl
   11F7 8E                 4764 	adc	a,(hl)
   11F8 57                 4765 	ld	d,a
   11F9 CB 2A              4766 	sra	d
   11FB CB 1B              4767 	rr	e
   11FD 16 00              4768 	ld	d,#0x00
   11FF 21r2Cs00           4769 	ld	hl,#_sintabx
   1202 19                 4770 	add	hl,de
   1203 5E                 4771 	ld	e,(hl)
   1204 CB 3B              4772 	srl	e
   1206 CB 3B              4773 	srl	e
   1208 CB 3B              4774 	srl	e
   120A CB 3B              4775 	srl	e
   120C 21rBDs41           4776 	ld	hl,#_ly
   120F DD 7E 07           4777 	ld	a,7 (ix)
   1212 83                 4778 	add	a,e
   1213 77                 4779 	ld	(hl),a
                           4780 ;demo.c:557: if (ltr == ' ') lx+=4;
   1214 DD 7E FF           4781 	ld	a,-1 (ix)
   1217 D6 20              4782 	sub	a,#0x20
   1219 20 1F              4783 	jr	NZ,00102$
   121B FD 21rBCs41        4784 	ld	iy,#_lx
   121F FD 34 00           4785 	inc	0 (iy)
   1222 FD 21rBCs41        4786 	ld	iy,#_lx
   1226 FD 34 00           4787 	inc	0 (iy)
   1229 FD 21rBCs41        4788 	ld	iy,#_lx
   122D FD 34 00           4789 	inc	0 (iy)
   1230 FD 21rBCs41        4790 	ld	iy,#_lx
   1234 FD 34 00           4791 	inc	0 (iy)
   1237 C3rDFs11           4792 	jp	00104$
   123A                    4793 00102$:
                           4794 ;demo.c:558: else do_letter_tall(ltr);
   123A C5                 4795 	push	bc
   123B DD 7E FF           4796 	ld	a,-1 (ix)
   123E F5                 4797 	push	af
   123F 33                 4798 	inc	sp
   1240 CDrB6s0F           4799 	call	_do_letter_tall
   1243 33                 4800 	inc	sp
   1244 C1                 4801 	pop	bc
   1245 C3rDFs11           4802 	jp	00104$
   1248                    4803 00107$:
   1248 DD F9              4804 	ld	sp,ix
   124A DD E1              4805 	pop	ix
   124C C9                 4806 	ret
   124D                    4807 _drawsine_end::
                           4808 ;demo.c:562: void font() {
                           4809 ;	---------------------------------
                           4810 ; Function font
                           4811 ; ---------------------------------
   124D                    4812 _font_start::
   124D                    4813 _font:
                           4814 ;demo.c:563: slowend = 128;
   124D 21rC0s41           4815 	ld	hl,#_slowend + 0
   1250 36 80              4816 	ld	(hl), #0x80
   1252 21rC1s41           4817 	ld	hl,#_slowend + 1
   1255 36 00              4818 	ld	(hl), #0x00
                           4819 ;demo.c:564: drawstrslow("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PARTY PEOPLE",74,60);
   1257 21 4A 3C           4820 	ld	hl,#0x3C4A
   125A E5                 4821 	push	hl
   125B 21r65s12           4822 	ld	hl,#__str_6
   125E E5                 4823 	push	hl
   125F CDrDAs10           4824 	call	_drawstrslow
   1262 F1                 4825 	pop	af
   1263 F1                 4826 	pop	af
   1264 C9                 4827 	ret
   1265                    4828 _font_end::
   1265                    4829 __str_6:
   1265 44 49 47 49 54 41  4830 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   12A1 4F 4E 5F 5F 20 20  4831 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO__MAKE SOME NOISE PART"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F 5F 5F 4D 41
        4B 45 20 53 4F 4D
        45 20 4E 4F 49 53
        45 20 50 41 52 54
   12DD 59 20 50 45 4F 50  4832 	.ascii "Y PEOPLE"
        4C 45
   12E5 00                 4833 	.db 0x00
                           4834 ;demo.c:572: void twister() {
                           4835 ;	---------------------------------
                           4836 ; Function twister
                           4837 ; ---------------------------------
   12E6                    4838 _twister_start::
   12E6                    4839 _twister:
   12E6 DD E5              4840 	push	ix
   12E8 DD 21 00 00        4841 	ld	ix,#0
   12EC DD 39              4842 	add	ix,sp
   12EE F5                 4843 	push	af
                           4844 ;demo.c:576: if (twinited == 0) {
   12EF 3ArC4s41           4845 	ld	a,(#_twinited+0)
   12F2 FD 21rC4s41        4846 	ld	iy,#_twinited
   12F6 FD B6 01           4847 	or	a,1 (iy)
   12F9 C2r73s13           4848 	jp	NZ,00102$
                           4849 ;demo.c:577: cmd.size_x = 256;
   12FC 21r32s41           4850 	ld	hl, #_cmd + 8
   12FF 36 00              4851 	ld	(hl),#0x00
   1301 23                 4852 	inc	hl
   1302 36 01              4853 	ld	(hl),#0x01
                           4854 ;demo.c:578: cmd.size_y = 1;
   1304 21r34s41           4855 	ld	hl, #_cmd + 10
   1307 36 01              4856 	ld	(hl),#0x01
   1309 23                 4857 	inc	hl
   130A 36 00              4858 	ld	(hl),#0x00
                           4859 ;demo.c:579: cmd.data = 0;
                           4860 ;demo.c:580: cmd.argument = 0x00; // from 70xY to left
   130C 3E 00              4861 	ld	a,#0x00
   130E 32r36s41           4862 	ld	(#_cmd + 12),a
   1311 32r37s41           4863 	ld	(#_cmd + 13),a
                           4864 ;demo.c:581: cmd.command = 0xd0; // vram to vram, y only
   1314 01r38s41           4865 	ld	bc,#_cmd + 14
   1317 3E D0              4866 	ld	a,#0xD0
   1319 02                 4867 	ld	(bc),a
                           4868 ;demo.c:582: cmd.source_x = 0;
   131A 21r2As41           4869 	ld	hl,#_cmd
   131D 36 00              4870 	ld	(hl),#0x00
   131F 23                 4871 	inc	hl
   1320 36 00              4872 	ld	(hl),#0x00
                           4873 ;demo.c:583: cmd.dest_x = 0;
   1322 21r2Es41           4874 	ld	hl, #_cmd + 4
   1325 36 00              4875 	ld	(hl),#0x00
   1327 23                 4876 	inc	hl
   1328 36 00              4877 	ld	(hl),#0x00
                           4878 ;demo.c:585: for (y = 0; y < 212; y+=1) {
   132A 01 00 00           4879 	ld	bc,#0x0000
   132D                    4880 00103$:
   132D 79                 4881 	ld	a,c
   132E D6 D4              4882 	sub	a,#0xD4
   1330 78                 4883 	ld	a,b
   1331 DE 00              4884 	sbc	a,#0x00
   1333 F2r54s13           4885 	jp	P,00106$
                           4886 ;demo.c:586: waitVB();
   1336 76                 4887 		halt 
                           4888 ;demo.c:587: cmd.source_y = 0;
   1337 11r2Cs41           4889 	ld	de,#_cmd + 2
   133A EB                 4890 	ex	de,hl
   133B 36 00              4891 	ld	(hl),#0x00
   133D 23                 4892 	inc	hl
   133E 36 00              4893 	ld	(hl),#0x00
                           4894 ;demo.c:588: cmd.dest_y = y;
   1340 11r30s41           4895 	ld	de,#_cmd + 6
   1343 EB                 4896 	ex	de,hl
   1344 71                 4897 	ld	(hl),c
   1345 23                 4898 	inc	hl
   1346 70                 4899 	ld	(hl),b
                           4900 ;demo.c:589: vdp_copier(&cmd);
   1347 C5                 4901 	push	bc
   1348 21r2As41           4902 	ld	hl,#_cmd
   134B E5                 4903 	push	hl
   134C CDr00s00           4904 	call	_vdp_copier
   134F F1                 4905 	pop	af
   1350 C1                 4906 	pop	bc
                           4907 ;demo.c:585: for (y = 0; y < 212; y+=1) {
   1351 03                 4908 	inc	bc
   1352 18 D9              4909 	jr	00103$
   1354                    4910 00106$:
                           4911 ;demo.c:593: twinited = 1;
   1354 21rC4s41           4912 	ld	hl,#_twinited + 0
   1357 36 01              4913 	ld	(hl), #0x01
   1359 21rC5s41           4914 	ld	hl,#_twinited + 1
   135C 36 00              4915 	ld	(hl), #0x00
                           4916 ;demo.c:594: vdp_load_palette(twister_palette);
   135E 21rA6s40           4917 	ld	hl,#_twister_palette
   1361 E5                 4918 	push	hl
   1362 CDr00s00           4919 	call	_vdp_load_palette
   1365 F1                 4920 	pop	af
                           4921 ;demo.c:595: drawstr2x("DSS",80,15);
   1366 21 50 0F           4922 	ld	hl,#0x0F50
   1369 E5                 4923 	push	hl
   136A 21r7Fs14           4924 	ld	hl,#__str_7
   136D E5                 4925 	push	hl
   136E CDr78s11           4926 	call	_drawstr2x
   1371 F1                 4927 	pop	af
   1372 F1                 4928 	pop	af
   1373                    4929 00102$:
                           4930 ;demo.c:599: cmd.size_x = 70;
   1373 21r32s41           4931 	ld	hl, #_cmd + 8
   1376 36 46              4932 	ld	(hl),#0x46
   1378 23                 4933 	inc	hl
   1379 36 00              4934 	ld	(hl),#0x00
                           4935 ;demo.c:600: cmd.size_y = 2;
   137B 21r34s41           4936 	ld	hl, #_cmd + 10
   137E 36 02              4937 	ld	(hl),#0x02
   1380 23                 4938 	inc	hl
   1381 36 00              4939 	ld	(hl),#0x00
                           4940 ;demo.c:601: cmd.data = 0;
   1383 3E 00              4941 	ld	a,#0x00
   1385 32r36s41           4942 	ld	(#_cmd + 12),a
                           4943 ;demo.c:602: cmd.argument = 0x04; // from 70xY to left
   1388 3E 04              4944 	ld	a,#0x04
   138A 32r37s41           4945 	ld	(#_cmd + 13),a
                           4946 ;demo.c:603: cmd.command = 0xe0; // vram to vram, y only
   138D 01r38s41           4947 	ld	bc,#_cmd + 14
   1390 3E E0              4948 	ld	a,#0xE0
   1392 02                 4949 	ld	(bc),a
                           4950 ;demo.c:604: cmd.source_x = 70;
   1393 21r2As41           4951 	ld	hl,#_cmd
   1396 36 46              4952 	ld	(hl),#0x46
   1398 23                 4953 	inc	hl
   1399 36 00              4954 	ld	(hl),#0x00
                           4955 ;demo.c:605: cmd.dest_x = 70;
   139B 21r2Es41           4956 	ld	hl, #_cmd + 4
   139E 36 46              4957 	ld	(hl),#0x46
   13A0 23                 4958 	inc	hl
   13A1 36 00              4959 	ld	(hl),#0x00
                           4960 ;demo.c:607: for (y = 0; y < 212; y+=2) {
   13A3 DD 36 FE 00        4961 	ld	-2 (ix),#0x00
   13A7 DD 36 FF 00        4962 	ld	-1 (ix),#0x00
   13AB                    4963 00107$:
   13AB DD 7E FE           4964 	ld	a,-2 (ix)
   13AE D6 D4              4965 	sub	a,#0xD4
   13B0 DD 7E FF           4966 	ld	a,-1 (ix)
   13B3 DE 00              4967 	sbc	a,#0x00
   13B5 F2r0Es14           4968 	jp	P,00110$
                           4969 ;demo.c:608: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   13B8 11r2Cs41           4970 	ld	de,#_cmd + 2
   13BB DD 4E FE           4971 	ld	c,-2 (ix)
   13BE DD 46 FF           4972 	ld	b,-1 (ix)
   13C1 CB 28              4973 	sra	b
   13C3 CB 19              4974 	rr	c
   13C5 3ArC2s41           4975 	ld	a,(#_ff+0)
   13C8 81                 4976 	add	a,c
   13C9 4F                 4977 	ld	c,a
   13CA 3ArC3s41           4978 	ld	a,(#_ff+1)
   13CD 88                 4979 	adc	a,b
   13CE 06 00              4980 	ld	b,#0x00
   13D0 21r00s00           4981 	ld	hl,#_sintab
   13D3 09                 4982 	add	hl,bc
   13D4 7E                 4983 	ld	a,(hl)
   13D5 4F                 4984 	ld	c,a
   13D6 CB 29              4985 	sra	c
   13D8 79                 4986 	ld	a,c
   13D9 17                 4987 	rla	
   13DA 9F                 4988 	sbc	a,a
   13DB 47                 4989 	ld	b,a
   13DC 21 40 02           4990 	ld	hl,#0x0240
   13DF 09                 4991 	add	hl,bc
   13E0 4D                 4992 	ld	c,l
   13E1 44                 4993 	ld	b,h
   13E2 6B                 4994 	ld	l,e
   13E3 62                 4995 	ld	h,d
   13E4 71                 4996 	ld	(hl),c
   13E5 23                 4997 	inc	hl
   13E6 70                 4998 	ld	(hl),b
                           4999 ;demo.c:609: cmd.dest_y = y;
   13E7 21r30s41           5000 	ld	hl, #_cmd + 6
   13EA DD 7E FE           5001 	ld	a,-2 (ix)
   13ED 77                 5002 	ld	(hl),a
   13EE 23                 5003 	inc	hl
   13EF DD 7E FF           5004 	ld	a,-1 (ix)
   13F2 77                 5005 	ld	(hl),a
                           5006 ;demo.c:610: vdp_copier(&cmd);
   13F3 21r2As41           5007 	ld	hl,#_cmd
   13F6 E5                 5008 	push	hl
   13F7 CDr00s00           5009 	call	_vdp_copier
   13FA F1                 5010 	pop	af
                           5011 ;demo.c:607: for (y = 0; y < 212; y+=2) {
   13FB DD 7E FE           5012 	ld	a,-2 (ix)
   13FE C6 02              5013 	add	a,#0x02
   1400 DD 77 FE           5014 	ld	-2 (ix),a
   1403 DD 7E FF           5015 	ld	a,-1 (ix)
   1406 CE 00              5016 	adc	a,#0x00
   1408 DD 77 FF           5017 	ld	-1 (ix),a
   140B C3rABs13           5018 	jp	00107$
   140E                    5019 00110$:
                           5020 ;demo.c:614: msx2_palette(4,PLY_PSGReg8+ff>>2,PLY_PSGReg9+ff>>3,ff>>2);
   140E 21rC2s41           5021 	ld	hl,#_ff + 0
   1411 4E                 5022 	ld	c,(hl)
   1412 21rC3s41           5023 	ld	hl,#_ff + 1
   1415 46                 5024 	ld	b,(hl)
   1416 CB 28              5025 	sra	b
   1418 CB 19              5026 	rr	c
   141A CB 28              5027 	sra	b
   141C CB 19              5028 	rr	c
   141E 21r00s00           5029 	ld	hl,#_PLY_PSGReg9 + 0
   1421 5E                 5030 	ld	e,(hl)
   1422 16 00              5031 	ld	d,#0x00
   1424 21rC2s41           5032 	ld	hl,#_ff
   1427 7B                 5033 	ld	a,e
   1428 86                 5034 	add	a,(hl)
   1429 5F                 5035 	ld	e,a
   142A 7A                 5036 	ld	a,d
   142B 23                 5037 	inc	hl
   142C 8E                 5038 	adc	a,(hl)
   142D 57                 5039 	ld	d,a
   142E CB 2A              5040 	sra	d
   1430 CB 1B              5041 	rr	e
   1432 CB 2A              5042 	sra	d
   1434 CB 1B              5043 	rr	e
   1436 CB 2A              5044 	sra	d
   1438 CB 1B              5045 	rr	e
   143A 43                 5046 	ld	b,e
   143B 21r00s00           5047 	ld	hl,#_PLY_PSGReg8 + 0
   143E 5E                 5048 	ld	e,(hl)
   143F 16 00              5049 	ld	d,#0x00
   1441 21rC2s41           5050 	ld	hl,#_ff
   1444 7B                 5051 	ld	a,e
   1445 86                 5052 	add	a,(hl)
   1446 5F                 5053 	ld	e,a
   1447 7A                 5054 	ld	a,d
   1448 23                 5055 	inc	hl
   1449 8E                 5056 	adc	a,(hl)
   144A 57                 5057 	ld	d,a
   144B CB 2A              5058 	sra	d
   144D CB 1B              5059 	rr	e
   144F CB 2A              5060 	sra	d
   1451 CB 1B              5061 	rr	e
   1453 79                 5062 	ld	a,c
   1454 F5                 5063 	push	af
   1455 33                 5064 	inc	sp
   1456 C5                 5065 	push	bc
   1457 33                 5066 	inc	sp
   1458 53                 5067 	ld	d,e
   1459 1E 04              5068 	ld	e,#0x04
   145B D5                 5069 	push	de
   145C CDr00s00           5070 	call	_msx2_palette
   145F F1                 5071 	pop	af
   1460 F1                 5072 	pop	af
                           5073 ;demo.c:616: font();
   1461 CDr4Ds12           5074 	call	_font
                           5075 ;demo.c:618: ff+=4;
   1464 21rC2s41           5076 	ld	hl,#_ff
   1467 7E                 5077 	ld	a,(hl)
   1468 C6 04              5078 	add	a,#0x04
   146A 23                 5079 	inc	hl
   146B 2B                 5080 	dec	hl
   146C C5                 5081 	push	bc
   146D 4F                 5082 	ld	c, a
   146E 23                 5083 	inc	hl
   146F 7E                 5084 	ld	a, (hl)
   1470 47                 5085 	ld	b, a
   1471 79                 5086 	ld	a, c
   1472 2B                 5087 	dec	hl
   1473 77                 5088 	ld	(hl), a
   1474 78                 5089 	ld	a, b
   1475 C1                 5090 	pop	bc
   1476 CE 00              5091 	adc	a,#0x00
   1478 23                 5092 	inc	hl
   1479 77                 5093 	ld	(hl),a
   147A DD F9              5094 	ld	sp,ix
   147C DD E1              5095 	pop	ix
   147E C9                 5096 	ret
   147F                    5097 _twister_end::
   147F                    5098 __str_7:
   147F 44 53 53           5099 	.ascii "DSS"
   1482 00                 5100 	.db 0x00
                           5101 ;demo.c:629: void bulbs() {
                           5102 ;	---------------------------------
                           5103 ; Function bulbs
                           5104 ; ---------------------------------
   1483                    5105 _bulbs_start::
   1483                    5106 _bulbs:
   1483 DD E5              5107 	push	ix
   1485 DD 21 00 00        5108 	ld	ix,#0
   1489 DD 39              5109 	add	ix,sp
   148B 21 FA FF           5110 	ld	hl,#-6
   148E 39                 5111 	add	hl,sp
   148F F9                 5112 	ld	sp,hl
                           5113 ;demo.c:633: ender+=enderdir;
   1490 21rCEs41           5114 	ld	hl,#_enderdir
   1493 D5                 5115 	push	de
   1494 FD 21rCCs41        5116 	ld	iy,#_ender
   1498 FD E5              5117 	push	iy
   149A D1                 5118 	pop	de
   149B 1A                 5119 	ld	a,(de)
   149C 86                 5120 	add	a,(hl)
   149D 13                 5121 	inc	de
   149E 1B                 5122 	dec	de
   149F C5                 5123 	push	bc
   14A0 4F                 5124 	ld	c, a
   14A1 13                 5125 	inc	de
   14A2 1A                 5126 	ld	a, (de)
   14A3 47                 5127 	ld	b, a
   14A4 79                 5128 	ld	a, c
   14A5 1B                 5129 	dec	de
   14A6 12                 5130 	ld	(de), a
   14A7 78                 5131 	ld	a, b
   14A8 C1                 5132 	pop	bc
   14A9 23                 5133 	inc	hl
   14AA 8E                 5134 	adc	a,(hl)
   14AB 13                 5135 	inc	de
   14AC 12                 5136 	ld	(de),a
   14AD D1                 5137 	pop	de
                           5138 ;demo.c:634: if (ender < 2) { enderdir = -enderdir; }
   14AE 3ArCCs41           5139 	ld	a,(#_ender+0)
   14B1 D6 02              5140 	sub	a,#0x02
   14B3 3ArCDs41           5141 	ld	a,(#_ender+1)
   14B6 DE 00              5142 	sbc	a,#0x00
   14B8 F2rDCs14           5143 	jp	P,00102$
   14BB AF                 5144 	xor	a,a
   14BC FD 21rCEs41        5145 	ld	iy,#_enderdir
   14C0 3E 00              5146 	ld	a,#0x00
   14C2 FD 9E 00           5147 	sbc	a,0 (iy)
   14C5 FD 21rCEs41        5148 	ld	iy,#_enderdir
   14C9 FD 77 00           5149 	ld	0 (iy),a
   14CC FD 21rCEs41        5150 	ld	iy,#_enderdir
   14D0 3E 00              5151 	ld	a,#0x00
   14D2 FD 9E 01           5152 	sbc	a,1 (iy)
   14D5 FD 21rCEs41        5153 	ld	iy,#_enderdir
   14D9 FD 77 01           5154 	ld	1 (iy),a
   14DC                    5155 00102$:
                           5156 ;demo.c:635: if (ender >= 212) { enderdir = -enderdir;  sy -= 2; }
   14DC 3ArCCs41           5157 	ld	a,(#_ender+0)
   14DF D6 D4              5158 	sub	a,#0xD4
   14E1 3ArCDs41           5159 	ld	a,(#_ender+1)
   14E4 DE 00              5160 	sbc	a,#0x00
   14E6 FAr0Cs15           5161 	jp	M,00104$
   14E9 AF                 5162 	xor	a,a
   14EA FD 21rCEs41        5163 	ld	iy,#_enderdir
   14EE 3E 00              5164 	ld	a,#0x00
   14F0 FD 9E 00           5165 	sbc	a,0 (iy)
   14F3 21rCEs41           5166 	ld	hl,#_enderdir + 0
   14F6 77                 5167 	ld	(hl), a
   14F7 FD 21rCEs41        5168 	ld	iy,#_enderdir
   14FB 3E 00              5169 	ld	a,#0x00
   14FD FD 9E 01           5170 	sbc	a,1 (iy)
   1500 21rCFs41           5171 	ld	hl,#_enderdir + 1
   1503 77                 5172 	ld	(hl), a
   1504 2ArD0s41           5173 	ld	hl,(_sy)
   1507 2B                 5174 	dec	hl
   1508 2B                 5175 	dec	hl
   1509 22rD0s41           5176 	ld	(_sy),hl
   150C                    5177 00104$:
                           5178 ;demo.c:637: enderend = ender + 92;
   150C 3ArCCs41           5179 	ld	a,(#_ender+0)
   150F C6 5C              5180 	add	a,#0x5C
   1511 DD 77 FE           5181 	ld	-2 (ix),a
   1514 3ArCDs41           5182 	ld	a,(#_ender+1)
   1517 CE 00              5183 	adc	a,#0x00
   1519 DD 77 FF           5184 	ld	-1 (ix),a
                           5185 ;demo.c:639: if (enderend > 212) enderend = 212;
   151C 3E D4              5186 	ld	a,#0xD4
   151E DD 96 FE           5187 	sub	a,-2 (ix)
   1521 3E 00              5188 	ld	a,#0x00
   1523 DD 9E FF           5189 	sbc	a,-1 (ix)
   1526 F2r31s15           5190 	jp	P,00106$
   1529 DD 36 FE D4        5191 	ld	-2 (ix),#0xD4
   152D DD 36 FF 00        5192 	ld	-1 (ix),#0x00
   1531                    5193 00106$:
                           5194 ;demo.c:640: if (enderend > 212-16) sy = 16-(212-enderend);
   1531 3E C4              5195 	ld	a,#0xC4
   1533 DD 96 FE           5196 	sub	a,-2 (ix)
   1536 3E 00              5197 	ld	a,#0x00
   1538 DD 9E FF           5198 	sbc	a,-1 (ix)
   153B F2r56s15           5199 	jp	P,00108$
   153E 3E D4              5200 	ld	a,#0xD4
   1540 DD 96 FE           5201 	sub	a,-2 (ix)
   1543 5F                 5202 	ld	e,a
   1544 3E 00              5203 	ld	a,#0x00
   1546 DD 9E FF           5204 	sbc	a,-1 (ix)
   1549 57                 5205 	ld	d,a
   154A 21rD0s41           5206 	ld	hl,#_sy
   154D 3E 10              5207 	ld	a,#0x10
   154F 93                 5208 	sub	a,e
   1550 77                 5209 	ld	(hl),a
   1551 3E 00              5210 	ld	a,#0x00
   1553 9A                 5211 	sbc	a,d
   1554 23                 5212 	inc	hl
   1555 77                 5213 	ld	(hl),a
   1556                    5214 00108$:
                           5215 ;demo.c:642: if(bulbflipper == 1) {
   1556 3ArC6s41           5216 	ld	a,(#_bulbflipper+0)
   1559 D6 01              5217 	sub	a,#0x01
   155B 20 06              5218 	jr	NZ,00133$
   155D 3ArC7s41           5219 	ld	a,(#_bulbflipper+1)
   1560 B7                 5220 	or	a,a
   1561 28 03              5221 	jr	Z,00134$
   1563                    5222 00133$:
   1563 C3r1Cs16           5223 	jp	00110$
   1566                    5224 00134$:
                           5225 ;demo.c:643: cmd.size_x = 72;
   1566 11r32s41           5226 	ld	de,#_cmd + 8
   1569 EB                 5227 	ex	de,hl
   156A 36 48              5228 	ld	(hl),#0x48
   156C 23                 5229 	inc	hl
   156D 36 00              5230 	ld	(hl),#0x00
                           5231 ;demo.c:644: cmd.size_y = sy;
   156F 11r34s41           5232 	ld	de,#_cmd + 10
   1572 ED 4BrD0s41        5233 	ld	bc,(_sy)
   1576 6B                 5234 	ld	l,e
   1577 62                 5235 	ld	h,d
   1578 71                 5236 	ld	(hl),c
   1579 23                 5237 	inc	hl
   157A 70                 5238 	ld	(hl),b
                           5239 ;demo.c:645: cmd.data = 0;
   157B 3E 00              5240 	ld	a,#0x00
   157D 32r36s41           5241 	ld	(#_cmd + 12),a
                           5242 ;demo.c:646: cmd.argument = 0x04; // from 72xY to left
   1580 3E 04              5243 	ld	a,#0x04
   1582 32r37s41           5244 	ld	(#_cmd + 13),a
                           5245 ;demo.c:647: cmd.command = 0xe0; // vram to vram, y only
   1585 01r38s41           5246 	ld	bc,#_cmd + 14
   1588 3E E0              5247 	ld	a,#0xE0
   158A 02                 5248 	ld	(bc),a
                           5249 ;demo.c:648: cmd.source_x = 72;
   158B 21r2As41           5250 	ld	hl,#_cmd
   158E 36 48              5251 	ld	(hl),#0x48
   1590 23                 5252 	inc	hl
   1591 36 00              5253 	ld	(hl),#0x00
                           5254 ;demo.c:649: cmd.dest_x = 72;
   1593 21r2Es41           5255 	ld	hl, #_cmd + 4
   1596 36 48              5256 	ld	(hl),#0x48
   1598 23                 5257 	inc	hl
   1599 36 00              5258 	ld	(hl),#0x00
                           5259 ;demo.c:651: for (y = ender; y < enderend; y+=16) {
   159B ED 4BrCCs41        5260 	ld	bc,(_ender)
   159F DD 71 FC           5261 	ld	-4 (ix),c
   15A2 DD 70 FD           5262 	ld	-3 (ix),b
   15A5                    5263 00112$:
   15A5 DD 7E FC           5264 	ld	a,-4 (ix)
   15A8 DD 96 FE           5265 	sub	a,-2 (ix)
   15AB DD 7E FD           5266 	ld	a,-3 (ix)
   15AE DD 9E FF           5267 	sbc	a,-1 (ix)
   15B1 F2r03s16           5268 	jp	P,00115$
                           5269 ;demo.c:652: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   15B4 01r2Cs41           5270 	ld	bc,#_cmd + 2
   15B7 3ArC8s41           5271 	ld	a,(#_ff1+0)
   15BA DD 86 FC           5272 	add	a,-4 (ix)
   15BD 5F                 5273 	ld	e,a
   15BE 3ArC9s41           5274 	ld	a,(#_ff1+1)
   15C1 DD 8E FD           5275 	adc	a,-3 (ix)
   15C4 16 00              5276 	ld	d,#0x00
   15C6 21r00s00           5277 	ld	hl,#_sintab
   15C9 19                 5278 	add	hl,de
   15CA 5E                 5279 	ld	e,(hl)
   15CB CB 2B              5280 	sra	e
   15CD 7B                 5281 	ld	a,e
   15CE 17                 5282 	rla	
   15CF 9F                 5283 	sbc	a,a
   15D0 57                 5284 	ld	d,a
   15D1 21 40 01           5285 	ld	hl,#0x0140
   15D4 19                 5286 	add	hl,de
   15D5 EB                 5287 	ex	de,hl
   15D6 69                 5288 	ld	l,c
   15D7 60                 5289 	ld	h,b
   15D8 73                 5290 	ld	(hl),e
   15D9 23                 5291 	inc	hl
   15DA 72                 5292 	ld	(hl),d
                           5293 ;demo.c:653: cmd.dest_y = y;
   15DB 11r30s41           5294 	ld	de,#_cmd + 6
   15DE EB                 5295 	ex	de,hl
   15DF DD 7E FC           5296 	ld	a,-4 (ix)
   15E2 77                 5297 	ld	(hl),a
   15E3 23                 5298 	inc	hl
   15E4 DD 7E FD           5299 	ld	a,-3 (ix)
   15E7 77                 5300 	ld	(hl),a
                           5301 ;demo.c:654: vdp_copier(&cmd);
   15E8 21r2As41           5302 	ld	hl,#_cmd
   15EB E5                 5303 	push	hl
   15EC CDr00s00           5304 	call	_vdp_copier
   15EF F1                 5305 	pop	af
                           5306 ;demo.c:651: for (y = ender; y < enderend; y+=16) {
   15F0 DD 7E FC           5307 	ld	a,-4 (ix)
   15F3 C6 10              5308 	add	a,#0x10
   15F5 DD 77 FC           5309 	ld	-4 (ix),a
   15F8 DD 7E FD           5310 	ld	a,-3 (ix)
   15FB CE 00              5311 	adc	a,#0x00
   15FD DD 77 FD           5312 	ld	-3 (ix),a
   1600 C3rA5s15           5313 	jp	00112$
   1603                    5314 00115$:
                           5315 ;demo.c:656: ff1+=4;
   1603 21rC8s41           5316 	ld	hl,#_ff1
   1606 7E                 5317 	ld	a,(hl)
   1607 C6 04              5318 	add	a,#0x04
   1609 23                 5319 	inc	hl
   160A 2B                 5320 	dec	hl
   160B C5                 5321 	push	bc
   160C 4F                 5322 	ld	c, a
   160D 23                 5323 	inc	hl
   160E 7E                 5324 	ld	a, (hl)
   160F 47                 5325 	ld	b, a
   1610 79                 5326 	ld	a, c
   1611 2B                 5327 	dec	hl
   1612 77                 5328 	ld	(hl), a
   1613 78                 5329 	ld	a, b
   1614 C1                 5330 	pop	bc
   1615 CE 00              5331 	adc	a,#0x00
   1617 23                 5332 	inc	hl
   1618 77                 5333 	ld	(hl),a
   1619 C3rC1s16           5334 	jp	00111$
   161C                    5335 00110$:
                           5336 ;demo.c:660: cmd.size_x = 72;
   161C 11r32s41           5337 	ld	de,#_cmd + 8
   161F EB                 5338 	ex	de,hl
   1620 36 48              5339 	ld	(hl),#0x48
   1622 23                 5340 	inc	hl
   1623 36 00              5341 	ld	(hl),#0x00
                           5342 ;demo.c:661: cmd.size_y = sy;
   1625 01r34s41           5343 	ld	bc,#_cmd + 10
   1628 ED 5BrD0s41        5344 	ld	de,(_sy)
   162C 69                 5345 	ld	l,c
   162D 60                 5346 	ld	h,b
   162E 73                 5347 	ld	(hl),e
   162F 23                 5348 	inc	hl
   1630 72                 5349 	ld	(hl),d
                           5350 ;demo.c:662: cmd.data = 0;
   1631 11r36s41           5351 	ld	de,#_cmd + 12
   1634 3E 00              5352 	ld	a,#0x00
   1636 12                 5353 	ld	(de),a
                           5354 ;demo.c:663: cmd.argument = 0x00; // from 182xY to right
   1637 11r37s41           5355 	ld	de,#_cmd + 13
   163A 3E 00              5356 	ld	a,#0x00
   163C 12                 5357 	ld	(de),a
                           5358 ;demo.c:664: cmd.command = 0xe0; // vram to vram, y only
   163D 11r38s41           5359 	ld	de,#_cmd + 14
   1640 3E E0              5360 	ld	a,#0xE0
   1642 12                 5361 	ld	(de),a
                           5362 ;demo.c:665: cmd.source_x = 182;
   1643 21r2As41           5363 	ld	hl,#_cmd
   1646 36 B6              5364 	ld	(hl),#0xB6
   1648 23                 5365 	inc	hl
   1649 36 00              5366 	ld	(hl),#0x00
                           5367 ;demo.c:666: cmd.dest_x = 182;
   164B 11r2Es41           5368 	ld	de,#_cmd + 4
   164E 6B                 5369 	ld	l,e
   164F 62                 5370 	ld	h,d
   1650 36 B6              5371 	ld	(hl),#0xB6
   1652 23                 5372 	inc	hl
   1653 36 00              5373 	ld	(hl),#0x00
                           5374 ;demo.c:668: for (y = ender; y < enderend; y+=16) {
   1655 ED 4BrCCs41        5375 	ld	bc,(_ender)
   1659                    5376 00116$:
   1659 79                 5377 	ld	a,c
   165A DD 96 FE           5378 	sub	a,-2 (ix)
   165D 78                 5379 	ld	a,b
   165E DD 9E FF           5380 	sbc	a,-1 (ix)
   1661 F2rABs16           5381 	jp	P,00119$
                           5382 ;demo.c:669: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   1664 21r2Cs41           5383 	ld	hl,#_cmd + 2
   1667 DD 75 FA           5384 	ld	-6 (ix),l
   166A DD 74 FB           5385 	ld	-5 (ix),h
   166D 3ArCAs41           5386 	ld	a,(#_ff2+0)
   1670 81                 5387 	add	a,c
   1671 5F                 5388 	ld	e,a
   1672 3ArCBs41           5389 	ld	a,(#_ff2+1)
   1675 88                 5390 	adc	a,b
   1676 16 00              5391 	ld	d,#0x00
   1678 21r00s00           5392 	ld	hl,#_sintab
   167B 19                 5393 	add	hl,de
   167C 5E                 5394 	ld	e,(hl)
   167D CB 2B              5395 	sra	e
   167F 7B                 5396 	ld	a,e
   1680 17                 5397 	rla	
   1681 9F                 5398 	sbc	a,a
   1682 57                 5399 	ld	d,a
   1683 21 40 01           5400 	ld	hl,#0x0140
   1686 19                 5401 	add	hl,de
   1687 EB                 5402 	ex	de,hl
   1688 DD 6E FA           5403 	ld	l,-6 (ix)
   168B DD 66 FB           5404 	ld	h,-5 (ix)
   168E 73                 5405 	ld	(hl),e
   168F 23                 5406 	inc	hl
   1690 72                 5407 	ld	(hl),d
                           5408 ;demo.c:670: cmd.dest_y = y;
   1691 11r30s41           5409 	ld	de,#_cmd + 6
   1694 EB                 5410 	ex	de,hl
   1695 71                 5411 	ld	(hl),c
   1696 23                 5412 	inc	hl
   1697 70                 5413 	ld	(hl),b
                           5414 ;demo.c:671: vdp_copier(&cmd);
   1698 C5                 5415 	push	bc
   1699 21r2As41           5416 	ld	hl,#_cmd
   169C E5                 5417 	push	hl
   169D CDr00s00           5418 	call	_vdp_copier
   16A0 F1                 5419 	pop	af
   16A1 C1                 5420 	pop	bc
                           5421 ;demo.c:668: for (y = ender; y < enderend; y+=16) {
   16A2 21 10 00           5422 	ld	hl,#0x0010
   16A5 09                 5423 	add	hl,bc
   16A6 4D                 5424 	ld	c,l
   16A7 44                 5425 	ld	b,h
   16A8 C3r59s16           5426 	jp	00116$
   16AB                    5427 00119$:
                           5428 ;demo.c:673: ff2+=4;
   16AB 21rCAs41           5429 	ld	hl,#_ff2
   16AE 7E                 5430 	ld	a,(hl)
   16AF C6 04              5431 	add	a,#0x04
   16B1 23                 5432 	inc	hl
   16B2 2B                 5433 	dec	hl
   16B3 C5                 5434 	push	bc
   16B4 4F                 5435 	ld	c, a
   16B5 23                 5436 	inc	hl
   16B6 7E                 5437 	ld	a, (hl)
   16B7 47                 5438 	ld	b, a
   16B8 79                 5439 	ld	a, c
   16B9 2B                 5440 	dec	hl
   16BA 77                 5441 	ld	(hl), a
   16BB 78                 5442 	ld	a, b
   16BC C1                 5443 	pop	bc
   16BD CE 00              5444 	adc	a,#0x00
   16BF 23                 5445 	inc	hl
   16C0 77                 5446 	ld	(hl),a
   16C1                    5447 00111$:
                           5448 ;demo.c:676: bulbflipper = -bulbflipper;
   16C1 AF                 5449 	xor	a,a
   16C2 FD 21rC6s41        5450 	ld	iy,#_bulbflipper
   16C6 3E 00              5451 	ld	a,#0x00
   16C8 FD 9E 00           5452 	sbc	a,0 (iy)
   16CB 21rC6s41           5453 	ld	hl,#_bulbflipper + 0
   16CE 77                 5454 	ld	(hl), a
   16CF FD 21rC6s41        5455 	ld	iy,#_bulbflipper
   16D3 3E 00              5456 	ld	a,#0x00
   16D5 FD 9E 01           5457 	sbc	a,1 (iy)
   16D8 21rC7s41           5458 	ld	hl,#_bulbflipper + 1
   16DB 77                 5459 	ld	(hl), a
   16DC DD F9              5460 	ld	sp,ix
   16DE DD E1              5461 	pop	ix
   16E0 C9                 5462 	ret
   16E1                    5463 _bulbs_end::
                           5464 ;demo.c:690: void animplay() {
                           5465 ;	---------------------------------
                           5466 ; Function animplay
                           5467 ; ---------------------------------
   16E1                    5468 _animplay_start::
   16E1                    5469 _animplay:
                           5470 ;demo.c:691: }
   16E1 C9                 5471 	ret
   16E2                    5472 _animplay_end::
                           5473 ;demo.c:704: void drawbox(uint8_t x, uint8_t y) {
                           5474 ;	---------------------------------
                           5475 ; Function drawbox
                           5476 ; ---------------------------------
   16E2                    5477 _drawbox_start::
   16E2                    5478 _drawbox:
   16E2 DD E5              5479 	push	ix
   16E4 DD 21 00 00        5480 	ld	ix,#0
   16E8 DD 39              5481 	add	ix,sp
                           5482 ;demo.c:705: cmd.source_x = boxes_x[boxi];
   16EA 21rF2s41           5483 	ld	hl,#_boxi
   16ED 3ErE3              5484 	ld	a,#<_boxes_x
   16EF 86                 5485 	add	a,(hl)
   16F0 4F                 5486 	ld	c,a
   16F1 3Es41              5487 	ld	a,#>_boxes_x
   16F3 CE 00              5488 	adc	a,#0x00
   16F5 47                 5489 	ld	b,a
   16F6 0A                 5490 	ld	a,(bc)
   16F7 4F                 5491 	ld	c,a
   16F8 06 00              5492 	ld	b,#0x00
   16FA 21r2As41           5493 	ld	hl,#_cmd
   16FD 71                 5494 	ld	(hl),c
   16FE 23                 5495 	inc	hl
   16FF 70                 5496 	ld	(hl),b
                           5497 ;demo.c:706: cmd.source_y = boxes_y[boxi];
   1700 01r2Cs41           5498 	ld	bc,#_cmd + 2
   1703 3ArF2s41           5499 	ld	a,(#_boxi+0)
   1706 87                 5500 	add	a,a
   1707 C6rE8              5501 	add	a,#<_boxes_y
   1709 6F                 5502 	ld	l,a
   170A 3Es41              5503 	ld	a,#>_boxes_y
   170C CE 00              5504 	adc	a,#0x00
   170E 67                 5505 	ld	h,a
   170F 5E                 5506 	ld	e,(hl)
   1710 23                 5507 	inc	hl
   1711 56                 5508 	ld	d,(hl)
   1712 69                 5509 	ld	l,c
   1713 60                 5510 	ld	h,b
   1714 73                 5511 	ld	(hl),e
   1715 23                 5512 	inc	hl
   1716 72                 5513 	ld	(hl),d
                           5514 ;demo.c:707: cmd.dest_x = x;
   1717 01r2Es41           5515 	ld	bc,#_cmd + 4
   171A DD 5E 04           5516 	ld	e,4 (ix)
   171D 16 00              5517 	ld	d,#0x00
   171F 69                 5518 	ld	l,c
   1720 60                 5519 	ld	h,b
   1721 73                 5520 	ld	(hl),e
   1722 23                 5521 	inc	hl
   1723 72                 5522 	ld	(hl),d
                           5523 ;demo.c:708: cmd.dest_y = y;
   1724 01r30s41           5524 	ld	bc,#_cmd + 6
   1727 DD 5E 05           5525 	ld	e,5 (ix)
   172A 16 00              5526 	ld	d,#0x00
   172C 69                 5527 	ld	l,c
   172D 60                 5528 	ld	h,b
   172E 73                 5529 	ld	(hl),e
   172F 23                 5530 	inc	hl
   1730 72                 5531 	ld	(hl),d
                           5532 ;demo.c:709: cmd.size_x = 36;
   1731 21r32s41           5533 	ld	hl, #_cmd + 8
   1734 36 24              5534 	ld	(hl),#0x24
   1736 23                 5535 	inc	hl
   1737 36 00              5536 	ld	(hl),#0x00
                           5537 ;demo.c:710: cmd.size_y = 36;
   1739 21r34s41           5538 	ld	hl, #_cmd + 10
   173C 36 24              5539 	ld	(hl),#0x24
   173E 23                 5540 	inc	hl
   173F 36 00              5541 	ld	(hl),#0x00
                           5542 ;demo.c:711: cmd.data = 0;
                           5543 ;demo.c:712: cmd.argument = 0x00;
   1741 3E 00              5544 	ld	a,#0x00
   1743 32r36s41           5545 	ld	(#_cmd + 12),a
   1746 32r37s41           5546 	ld	(#_cmd + 13),a
                           5547 ;demo.c:713: cmd.command = 0x98; // TIMP sprite
   1749 3E 98              5548 	ld	a,#0x98
   174B 32r38s41           5549 	ld	(#_cmd + 14),a
                           5550 ;demo.c:714: vdp_copier(&cmd);
   174E 21r2As41           5551 	ld	hl,#_cmd
   1751 E5                 5552 	push	hl
   1752 CDr00s00           5553 	call	_vdp_copier
   1755 F1                 5554 	pop	af
                           5555 ;demo.c:716: prevx = x;
   1756 DD 7E 04           5556 	ld	a,4 (ix)
   1759 21rDFs41           5557 	ld	hl,#_prevx + 0
   175C 77                 5558 	ld	(hl), a
   175D 21rE0s41           5559 	ld	hl,#_prevx + 1
   1760 36 00              5560 	ld	(hl), #0x00
                           5561 ;demo.c:717: prevy = y;
   1762 DD 7E 05           5562 	ld	a,5 (ix)
   1765 21rE1s41           5563 	ld	hl,#_prevy + 0
   1768 77                 5564 	ld	(hl), a
   1769 21rE2s41           5565 	ld	hl,#_prevy + 1
   176C 36 00              5566 	ld	(hl), #0x00
   176E DD E1              5567 	pop	ix
   1770 C9                 5568 	ret
   1771                    5569 _drawbox_end::
                           5570 ;demo.c:731: void boxes() {
                           5571 ;	---------------------------------
                           5572 ; Function boxes
                           5573 ; ---------------------------------
   1771                    5574 _boxes_start::
   1771                    5575 _boxes:
   1771 DD E5              5576 	push	ix
   1773 DD 21 00 00        5577 	ld	ix,#0
   1777 DD 39              5578 	add	ix,sp
   1779 F5                 5579 	push	af
                           5580 ;demo.c:735: if (bx < 0) return;
   177A FD 21rF3s41        5581 	ld	iy,#_bx
   177E FD CB 01 7E        5582 	bit	7,1 (iy)
   1782 C2rF1s1B           5583 	jp	NZ,00149$
                           5584 ;demo.c:737: if (bonc == 1) {
   1785 3ArFBs41           5585 	ld	a,(#_bonc+0)
   1788 D6 01              5586 	sub	a,#0x01
   178A 20 06              5587 	jr	NZ,00178$
   178C 3ArFCs41           5588 	ld	a,(#_bonc+1)
   178F B7                 5589 	or	a,a
   1790 28 02              5590 	jr	Z,00179$
   1792                    5591 00178$:
   1792 18 4D              5592 	jr	00104$
   1794                    5593 00179$:
                           5594 ;demo.c:739: cmd.source_x = 0;
   1794 21r2As41           5595 	ld	hl,#_cmd
   1797 36 00              5596 	ld	(hl),#0x00
   1799 23                 5597 	inc	hl
   179A 36 00              5598 	ld	(hl),#0x00
                           5599 ;demo.c:740: cmd.source_y = 256;
   179C 21r2Cs41           5600 	ld	hl, #_cmd + 2
   179F 36 00              5601 	ld	(hl),#0x00
   17A1 23                 5602 	inc	hl
   17A2 36 01              5603 	ld	(hl),#0x01
                           5604 ;demo.c:741: cmd.dest_x = pbx;
   17A4 01r2Es41           5605 	ld	bc,#_cmd + 4
   17A7 ED 5BrFDs41        5606 	ld	de,(_pbx)
   17AB 69                 5607 	ld	l,c
   17AC 60                 5608 	ld	h,b
   17AD 73                 5609 	ld	(hl),e
   17AE 23                 5610 	inc	hl
   17AF 72                 5611 	ld	(hl),d
                           5612 ;demo.c:742: cmd.dest_y = pbt;
   17B0 01r30s41           5613 	ld	bc,#_cmd + 6
   17B3 ED 5BrFFs41        5614 	ld	de,(_pbt)
   17B7 69                 5615 	ld	l,c
   17B8 60                 5616 	ld	h,b
   17B9 73                 5617 	ld	(hl),e
   17BA 23                 5618 	inc	hl
   17BB 72                 5619 	ld	(hl),d
                           5620 ;demo.c:743: cmd.size_x = 36;
   17BC 21r32s41           5621 	ld	hl, #_cmd + 8
   17BF 36 24              5622 	ld	(hl),#0x24
   17C1 23                 5623 	inc	hl
   17C2 36 00              5624 	ld	(hl),#0x00
                           5625 ;demo.c:744: cmd.size_y = 36;
   17C4 21r34s41           5626 	ld	hl, #_cmd + 10
   17C7 36 24              5627 	ld	(hl),#0x24
   17C9 23                 5628 	inc	hl
   17CA 36 00              5629 	ld	(hl),#0x00
                           5630 ;demo.c:745: cmd.data = 0;
                           5631 ;demo.c:746: cmd.argument = 0x00;
   17CC 3E 00              5632 	ld	a,#0x00
   17CE 32r36s41           5633 	ld	(#_cmd + 12),a
   17D1 32r37s41           5634 	ld	(#_cmd + 13),a
                           5635 ;demo.c:747: cmd.command = 0xD0; // HMMM
   17D4 3E D0              5636 	ld	a,#0xD0
   17D6 32r38s41           5637 	ld	(#_cmd + 14),a
                           5638 ;demo.c:748: vdp_copier(&cmd);
   17D9 21r2As41           5639 	ld	hl,#_cmd
   17DC E5                 5640 	push	hl
   17DD CDr00s00           5641 	call	_vdp_copier
   17E0 F1                 5642 	pop	af
   17E1                    5643 00104$:
                           5644 ;demo.c:751: if (boxes_init == 0) {
   17E1 AF                 5645 	xor	a,a
   17E2 21rDCs41           5646 	ld	hl,#_boxes_init + 0
   17E5 B6                 5647 	or	a,(hl)
   17E6 C2r41s19           5648 	jp	NZ,00106$
                           5649 ;demo.c:752: boxes_init = 1;
   17E9 FD 21rDCs41        5650 	ld	iy,#_boxes_init
   17ED FD 36 00 01        5651 	ld	0 (iy),#0x01
                           5652 ;demo.c:754: cmd.size_x = 8;
   17F1 21r32s41           5653 	ld	hl, #_cmd + 8
   17F4 36 08              5654 	ld	(hl),#0x08
   17F6 23                 5655 	inc	hl
   17F7 36 00              5656 	ld	(hl),#0x00
                           5657 ;demo.c:755: cmd.size_y = 212;
   17F9 21r34s41           5658 	ld	hl, #_cmd + 10
   17FC 36 D4              5659 	ld	(hl),#0xD4
   17FE 23                 5660 	inc	hl
   17FF 36 00              5661 	ld	(hl),#0x00
                           5662 ;demo.c:756: cmd.data = 0;
                           5663 ;demo.c:757: cmd.argument = 0x00; // from 70xY to left
   1801 3E 00              5664 	ld	a,#0x00
   1803 32r36s41           5665 	ld	(#_cmd + 12),a
   1806 32r37s41           5666 	ld	(#_cmd + 13),a
                           5667 ;demo.c:758: cmd.command = 0xd0; // vram to vram, y only
   1809 01r38s41           5668 	ld	bc,#_cmd + 14
   180C 3E D0              5669 	ld	a,#0xD0
   180E 02                 5670 	ld	(bc),a
                           5671 ;demo.c:759: cmd.source_x = 248;
   180F 21r2As41           5672 	ld	hl,#_cmd
   1812 36 F8              5673 	ld	(hl),#0xF8
   1814 23                 5674 	inc	hl
   1815 36 00              5675 	ld	(hl),#0x00
                           5676 ;demo.c:760: cmd.source_y = 0;
   1817 21r2Cs41           5677 	ld	hl, #_cmd + 2
   181A 36 00              5678 	ld	(hl),#0x00
   181C 23                 5679 	inc	hl
   181D 36 00              5680 	ld	(hl),#0x00
                           5681 ;demo.c:761: cmd.dest_y = 0;
   181F 01r30s41           5682 	ld	bc,#_cmd + 6
   1822 69                 5683 	ld	l,c
   1823 60                 5684 	ld	h,b
   1824 36 00              5685 	ld	(hl),#0x00
   1826 23                 5686 	inc	hl
   1827 36 00              5687 	ld	(hl),#0x00
                           5688 ;demo.c:763: for (x = 248; x >= 0; x-=8) {
   1829 DD 36 FE F8        5689 	ld	-2 (ix),#0xF8
   182D DD 36 FF 00        5690 	ld	-1 (ix),#0x00
   1831                    5691 00137$:
   1831 DD CB FF 7E        5692 	bit	7,-1 (ix)
   1835 C2rC0s18           5693 	jp	NZ,00140$
                           5694 ;demo.c:764: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1838 21rC2s41           5695 	ld	hl,#_ff + 0
   183B 5E                 5696 	ld	e,(hl)
   183C 21rC3s41           5697 	ld	hl,#_ff + 1
   183F 56                 5698 	ld	d,(hl)
   1840 CB 2A              5699 	sra	d
   1842 CB 1B              5700 	rr	e
   1844 CB 2A              5701 	sra	d
   1846 CB 1B              5702 	rr	e
   1848 21rC2s41           5703 	ld	hl,#_ff + 0
   184B 56                 5704 	ld	d,(hl)
   184C 21rC3s41           5705 	ld	hl,#_ff + 1
   184F 4E                 5706 	ld	c,(hl)
   1850 CB 29              5707 	sra	c
   1852 CB 1A              5708 	rr	d
   1854 CB 29              5709 	sra	c
   1856 CB 1A              5710 	rr	d
   1858 CB 29              5711 	sra	c
   185A CB 1A              5712 	rr	d
   185C 7B                 5713 	ld	a,e
   185D F5                 5714 	push	af
   185E 33                 5715 	inc	sp
   185F D5                 5716 	push	de
   1860 33                 5717 	inc	sp
   1861 53                 5718 	ld	d,e
   1862 1E 04              5719 	ld	e,#0x04
   1864 D5                 5720 	push	de
   1865 CDr00s00           5721 	call	_msx2_palette
   1868 F1                 5722 	pop	af
   1869 F1                 5723 	pop	af
                           5724 ;demo.c:765: ff+=2;
   186A 21rC2s41           5725 	ld	hl,#_ff
   186D 7E                 5726 	ld	a,(hl)
   186E C6 02              5727 	add	a,#0x02
   1870 23                 5728 	inc	hl
   1871 2B                 5729 	dec	hl
   1872 C5                 5730 	push	bc
   1873 4F                 5731 	ld	c, a
   1874 23                 5732 	inc	hl
   1875 7E                 5733 	ld	a, (hl)
   1876 47                 5734 	ld	b, a
   1877 79                 5735 	ld	a, c
   1878 2B                 5736 	dec	hl
   1879 77                 5737 	ld	(hl), a
   187A 78                 5738 	ld	a, b
   187B C1                 5739 	pop	bc
   187C CE 00              5740 	adc	a,#0x00
   187E 23                 5741 	inc	hl
   187F 77                 5742 	ld	(hl),a
                           5743 ;demo.c:766: waitVB();
   1880 76                 5744 		halt 
                           5745 ;demo.c:767: cmd.dest_x = x;
   1881 21r2Es41           5746 	ld	hl, #_cmd + 4
   1884 DD 7E FE           5747 	ld	a,-2 (ix)
   1887 77                 5748 	ld	(hl),a
   1888 23                 5749 	inc	hl
   1889 DD 7E FF           5750 	ld	a,-1 (ix)
   188C 77                 5751 	ld	(hl),a
                           5752 ;demo.c:768: cmd.dest_y = 0;
   188D 21r30s41           5753 	ld	hl, #_cmd + 6
   1890 36 00              5754 	ld	(hl),#0x00
   1892 23                 5755 	inc	hl
   1893 36 00              5756 	ld	(hl),#0x00
                           5757 ;demo.c:769: vdp_copier(&cmd);
   1895 21r2As41           5758 	ld	hl,#_cmd
   1898 E5                 5759 	push	hl
   1899 CDr00s00           5760 	call	_vdp_copier
   189C F1                 5761 	pop	af
                           5762 ;demo.c:770: cmd.dest_y = 256;
   189D 21r30s41           5763 	ld	hl, #_cmd + 6
   18A0 36 00              5764 	ld	(hl),#0x00
   18A2 23                 5765 	inc	hl
   18A3 36 01              5766 	ld	(hl),#0x01
                           5767 ;demo.c:771: vdp_copier(&cmd);
   18A5 21r2As41           5768 	ld	hl,#_cmd
   18A8 E5                 5769 	push	hl
   18A9 CDr00s00           5770 	call	_vdp_copier
   18AC F1                 5771 	pop	af
                           5772 ;demo.c:763: for (x = 248; x >= 0; x-=8) {
   18AD DD 7E FE           5773 	ld	a,-2 (ix)
   18B0 C6 F8              5774 	add	a,#0xF8
   18B2 DD 77 FE           5775 	ld	-2 (ix),a
   18B5 DD 7E FF           5776 	ld	a,-1 (ix)
   18B8 CE FF              5777 	adc	a,#0xFF
   18BA DD 77 FF           5778 	ld	-1 (ix),a
   18BD C3r31s18           5779 	jp	00137$
   18C0                    5780 00140$:
                           5781 ;demo.c:774: vdp_load_palette(boxes_palette);
   18C0 21rE6s40           5782 	ld	hl,#_boxes_palette
   18C3 E5                 5783 	push	hl
   18C4 CDr00s00           5784 	call	_vdp_load_palette
   18C7 F1                 5785 	pop	af
                           5786 ;demo.c:776: for (x=0;x < 8;x++) {
   18C8 DD 36 FE 00        5787 	ld	-2 (ix),#0x00
   18CC DD 36 FF 00        5788 	ld	-1 (ix),#0x00
   18D0                    5789 00145$:
   18D0 DD 7E FE           5790 	ld	a,-2 (ix)
   18D3 D6 08              5791 	sub	a,#0x08
   18D5 DD 7E FF           5792 	ld	a,-1 (ix)
   18D8 DE 00              5793 	sbc	a,#0x00
   18DA F2r34s19           5794 	jp	P,00148$
                           5795 ;demo.c:778: for (y=0;y < 9;y++) {
   18DD 11 00 00           5796 	ld	de,#0x0000
   18E0                    5797 00141$:
   18E0 7B                 5798 	ld	a,e
   18E1 D6 09              5799 	sub	a,#0x09
   18E3 7A                 5800 	ld	a,d
   18E4 DE 00              5801 	sbc	a,#0x00
   18E6 F2r29s19           5802 	jp	P,00147$
                           5803 ;demo.c:779: boxes_x[4] = 0;
   18E9 01rE7s41           5804 	ld	bc,#_boxes_x + 4
   18EC 3E 00              5805 	ld	a,#0x00
   18EE 02                 5806 	ld	(bc),a
                           5807 ;demo.c:780: boxes_y[4] = 768+2*36;
   18EF 21rF0s41           5808 	ld	hl, #_boxes_y + 8
   18F2 36 48              5809 	ld	(hl),#0x48
   18F4 23                 5810 	inc	hl
   18F5 36 03              5811 	ld	(hl),#0x03
                           5812 ;demo.c:781: boxi = 4;
   18F7 21rF2s41           5813 	ld	hl,#_boxi + 0
   18FA 36 04              5814 	ld	(hl), #0x04
                           5815 ;demo.c:782: drawbox((x*36),y*18);
   18FC 4B                 5816 	ld	c,e
   18FD D5                 5817 	push	de
   18FE 79                 5818 	ld	a,c
   18FF 5F                 5819 	ld	e,a
   1900 87                 5820 	add	a,a
   1901 87                 5821 	add	a,a
   1902 87                 5822 	add	a,a
   1903 83                 5823 	add	a,e
   1904 87                 5824 	add	a,a
   1905 D1                 5825 	pop	de
   1906 4F                 5826 	ld	c,a
   1907 DD 46 FE           5827 	ld	b,-2 (ix)
   190A D5                 5828 	push	de
   190B 78                 5829 	ld	a,b
   190C 5F                 5830 	ld	e,a
   190D 87                 5831 	add	a,a
   190E 87                 5832 	add	a,a
   190F 87                 5833 	add	a,a
   1910 83                 5834 	add	a,e
   1911 87                 5835 	add	a,a
   1912 87                 5836 	add	a,a
   1913 D1                 5837 	pop	de
   1914 47                 5838 	ld	b,a
   1915 D5                 5839 	push	de
   1916 79                 5840 	ld	a,c
   1917 F5                 5841 	push	af
   1918 33                 5842 	inc	sp
   1919 C5                 5843 	push	bc
   191A 33                 5844 	inc	sp
   191B CDrE2s16           5845 	call	_drawbox
   191E F1                 5846 	pop	af
   191F D1                 5847 	pop	de
                           5848 ;demo.c:783: boxi = 0;
   1920 21rF2s41           5849 	ld	hl,#_boxi + 0
   1923 36 00              5850 	ld	(hl), #0x00
                           5851 ;demo.c:778: for (y=0;y < 9;y++) {
   1925 13                 5852 	inc	de
   1926 C3rE0s18           5853 	jp	00141$
   1929                    5854 00147$:
                           5855 ;demo.c:776: for (x=0;x < 8;x++) {
   1929 DD 34 FE           5856 	inc	-2 (ix)
   192C 20 03              5857 	jr	NZ,00182$
   192E DD 34 FF           5858 	inc	-1 (ix)
   1931                    5859 00182$:
   1931 C3rD0s18           5860 	jp	00145$
   1934                    5861 00148$:
                           5862 ;demo.c:787: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,182);
   1934 21 08 B6           5863 	ld	hl,#0xB608
   1937 E5                 5864 	push	hl
   1938 21rF6s1B           5865 	ld	hl,#__str_8
   193B E5                 5866 	push	hl
   193C CDrC9s11           5867 	call	_drawsine
   193F F1                 5868 	pop	af
   1940 F1                 5869 	pop	af
   1941                    5870 00106$:
                           5871 ;demo.c:790: if (bt >= 80) bt+=8;
   1941 3ArF7s41           5872 	ld	a,(#_bt+0)
   1944 D6 50              5873 	sub	a,#0x50
   1946 3ArF8s41           5874 	ld	a,(#_bt+1)
   1949 DE 00              5875 	sbc	a,#0x00
   194B FAr64s19           5876 	jp	M,00108$
   194E 21rF7s41           5877 	ld	hl,#_bt
   1951 7E                 5878 	ld	a,(hl)
   1952 C6 08              5879 	add	a,#0x08
   1954 23                 5880 	inc	hl
   1955 2B                 5881 	dec	hl
   1956 C5                 5882 	push	bc
   1957 4F                 5883 	ld	c, a
   1958 23                 5884 	inc	hl
   1959 7E                 5885 	ld	a, (hl)
   195A 47                 5886 	ld	b, a
   195B 79                 5887 	ld	a, c
   195C 2B                 5888 	dec	hl
   195D 77                 5889 	ld	(hl), a
   195E 78                 5890 	ld	a, b
   195F C1                 5891 	pop	bc
   1960 CE 00              5892 	adc	a,#0x00
   1962 23                 5893 	inc	hl
   1963 77                 5894 	ld	(hl),a
   1964                    5895 00108$:
                           5896 ;demo.c:791: if (bt < 80 && bt >= 60) bt+=7;
   1964 3ArF7s41           5897 	ld	a,(#_bt+0)
   1967 D6 50              5898 	sub	a,#0x50
   1969 3ArF8s41           5899 	ld	a,(#_bt+1)
   196C DE 00              5900 	sbc	a,#0x00
   196E F2r94s19           5901 	jp	P,00110$
   1971 3ArF7s41           5902 	ld	a,(#_bt+0)
   1974 D6 3C              5903 	sub	a,#0x3C
   1976 3ArF8s41           5904 	ld	a,(#_bt+1)
   1979 DE 00              5905 	sbc	a,#0x00
   197B FAr94s19           5906 	jp	M,00110$
   197E 21rF7s41           5907 	ld	hl,#_bt
   1981 7E                 5908 	ld	a,(hl)
   1982 C6 07              5909 	add	a,#0x07
   1984 23                 5910 	inc	hl
   1985 2B                 5911 	dec	hl
   1986 C5                 5912 	push	bc
   1987 4F                 5913 	ld	c, a
   1988 23                 5914 	inc	hl
   1989 7E                 5915 	ld	a, (hl)
   198A 47                 5916 	ld	b, a
   198B 79                 5917 	ld	a, c
   198C 2B                 5918 	dec	hl
   198D 77                 5919 	ld	(hl), a
   198E 78                 5920 	ld	a, b
   198F C1                 5921 	pop	bc
   1990 CE 00              5922 	adc	a,#0x00
   1992 23                 5923 	inc	hl
   1993 77                 5924 	ld	(hl),a
   1994                    5925 00110$:
                           5926 ;demo.c:792: if (bt < 60 && bt >= 40) bt+=6;
   1994 3ArF7s41           5927 	ld	a,(#_bt+0)
   1997 D6 3C              5928 	sub	a,#0x3C
   1999 3ArF8s41           5929 	ld	a,(#_bt+1)
   199C DE 00              5930 	sbc	a,#0x00
   199E F2rC4s19           5931 	jp	P,00113$
   19A1 3ArF7s41           5932 	ld	a,(#_bt+0)
   19A4 D6 28              5933 	sub	a,#0x28
   19A6 3ArF8s41           5934 	ld	a,(#_bt+1)
   19A9 DE 00              5935 	sbc	a,#0x00
   19AB FArC4s19           5936 	jp	M,00113$
   19AE 21rF7s41           5937 	ld	hl,#_bt
   19B1 7E                 5938 	ld	a,(hl)
   19B2 C6 06              5939 	add	a,#0x06
   19B4 23                 5940 	inc	hl
   19B5 2B                 5941 	dec	hl
   19B6 C5                 5942 	push	bc
   19B7 4F                 5943 	ld	c, a
   19B8 23                 5944 	inc	hl
   19B9 7E                 5945 	ld	a, (hl)
   19BA 47                 5946 	ld	b, a
   19BB 79                 5947 	ld	a, c
   19BC 2B                 5948 	dec	hl
   19BD 77                 5949 	ld	(hl), a
   19BE 78                 5950 	ld	a, b
   19BF C1                 5951 	pop	bc
   19C0 CE 00              5952 	adc	a,#0x00
   19C2 23                 5953 	inc	hl
   19C3 77                 5954 	ld	(hl),a
   19C4                    5955 00113$:
                           5956 ;demo.c:793: if (bt < 40 && bt >= 10) bt+=5;
   19C4 3ArF7s41           5957 	ld	a,(#_bt+0)
   19C7 D6 28              5958 	sub	a,#0x28
   19C9 3ArF8s41           5959 	ld	a,(#_bt+1)
   19CC DE 00              5960 	sbc	a,#0x00
   19CE F2rF4s19           5961 	jp	P,00116$
   19D1 3ArF7s41           5962 	ld	a,(#_bt+0)
   19D4 D6 0A              5963 	sub	a,#0x0A
   19D6 3ArF8s41           5964 	ld	a,(#_bt+1)
   19D9 DE 00              5965 	sbc	a,#0x00
   19DB FArF4s19           5966 	jp	M,00116$
   19DE 21rF7s41           5967 	ld	hl,#_bt
   19E1 7E                 5968 	ld	a,(hl)
   19E2 C6 05              5969 	add	a,#0x05
   19E4 23                 5970 	inc	hl
   19E5 2B                 5971 	dec	hl
   19E6 C5                 5972 	push	bc
   19E7 4F                 5973 	ld	c, a
   19E8 23                 5974 	inc	hl
   19E9 7E                 5975 	ld	a, (hl)
   19EA 47                 5976 	ld	b, a
   19EB 79                 5977 	ld	a, c
   19EC 2B                 5978 	dec	hl
   19ED 77                 5979 	ld	(hl), a
   19EE 78                 5980 	ld	a, b
   19EF C1                 5981 	pop	bc
   19F0 CE 00              5982 	adc	a,#0x00
   19F2 23                 5983 	inc	hl
   19F3 77                 5984 	ld	(hl),a
   19F4                    5985 00116$:
                           5986 ;demo.c:794: if (bt < 10 ) bt+=4;
   19F4 3ArF7s41           5987 	ld	a,(#_bt+0)
   19F7 D6 0A              5988 	sub	a,#0x0A
   19F9 3ArF8s41           5989 	ld	a,(#_bt+1)
   19FC DE 00              5990 	sbc	a,#0x00
   19FE F2r17s1A           5991 	jp	P,00119$
   1A01 21rF7s41           5992 	ld	hl,#_bt
   1A04 7E                 5993 	ld	a,(hl)
   1A05 C6 04              5994 	add	a,#0x04
   1A07 23                 5995 	inc	hl
   1A08 2B                 5996 	dec	hl
   1A09 C5                 5997 	push	bc
   1A0A 4F                 5998 	ld	c, a
   1A0B 23                 5999 	inc	hl
   1A0C 7E                 6000 	ld	a, (hl)
   1A0D 47                 6001 	ld	b, a
   1A0E 79                 6002 	ld	a, c
   1A0F 2B                 6003 	dec	hl
   1A10 77                 6004 	ld	(hl), a
   1A11 78                 6005 	ld	a, b
   1A12 C1                 6006 	pop	bc
   1A13 CE 00              6007 	adc	a,#0x00
   1A15 23                 6008 	inc	hl
   1A16 77                 6009 	ld	(hl),a
   1A17                    6010 00119$:
                           6011 ;demo.c:797: cmd.source_x = bx;
   1A17 ED 4BrF3s41        6012 	ld	bc,(_bx)
   1A1B 21r2As41           6013 	ld	hl,#_cmd
   1A1E 71                 6014 	ld	(hl),c
   1A1F 23                 6015 	inc	hl
   1A20 70                 6016 	ld	(hl),b
                           6017 ;demo.c:798: cmd.source_y = bt;
   1A21 01r2Cs41           6018 	ld	bc,#_cmd + 2
   1A24 ED 5BrF7s41        6019 	ld	de,(_bt)
   1A28 69                 6020 	ld	l,c
   1A29 60                 6021 	ld	h,b
   1A2A 73                 6022 	ld	(hl),e
   1A2B 23                 6023 	inc	hl
   1A2C 72                 6024 	ld	(hl),d
                           6025 ;demo.c:799: cmd.dest_x = 0;
   1A2D 21r2Es41           6026 	ld	hl, #_cmd + 4
   1A30 36 00              6027 	ld	(hl),#0x00
   1A32 23                 6028 	inc	hl
   1A33 36 00              6029 	ld	(hl),#0x00
                           6030 ;demo.c:800: cmd.dest_y = 256;
   1A35 21r30s41           6031 	ld	hl, #_cmd + 6
   1A38 36 00              6032 	ld	(hl),#0x00
   1A3A 23                 6033 	inc	hl
   1A3B 36 01              6034 	ld	(hl),#0x01
                           6035 ;demo.c:801: cmd.size_x = 36;
   1A3D 21r32s41           6036 	ld	hl, #_cmd + 8
   1A40 36 24              6037 	ld	(hl),#0x24
   1A42 23                 6038 	inc	hl
   1A43 36 00              6039 	ld	(hl),#0x00
                           6040 ;demo.c:802: cmd.size_y = 36;
   1A45 21r34s41           6041 	ld	hl, #_cmd + 10
   1A48 36 24              6042 	ld	(hl),#0x24
   1A4A 23                 6043 	inc	hl
   1A4B 36 00              6044 	ld	(hl),#0x00
                           6045 ;demo.c:803: cmd.data = 0;
                           6046 ;demo.c:804: cmd.argument = 0x00;
   1A4D 3E 00              6047 	ld	a,#0x00
   1A4F 32r36s41           6048 	ld	(#_cmd + 12),a
   1A52 32r37s41           6049 	ld	(#_cmd + 13),a
                           6050 ;demo.c:805: cmd.command = 0xD0; // HMMM
   1A55 3E D0              6051 	ld	a,#0xD0
   1A57 32r38s41           6052 	ld	(#_cmd + 14),a
                           6053 ;demo.c:806: vdp_copier(&cmd);
   1A5A 21r2As41           6054 	ld	hl,#_cmd
   1A5D E5                 6055 	push	hl
   1A5E CDr00s00           6056 	call	_vdp_copier
   1A61 F1                 6057 	pop	af
                           6058 ;demo.c:808: pbx = bx;
   1A62 2ArF3s41           6059 	ld	hl,(_bx)
   1A65 FD 21rFDs41        6060 	ld	iy,#_pbx
   1A69 FD 75 00           6061 	ld	0 (iy),l
   1A6C FD 21rFDs41        6062 	ld	iy,#_pbx
   1A70 FD 74 01           6063 	ld	1 (iy),h
                           6064 ;demo.c:809: pbt = bt;
   1A73 2ArF7s41           6065 	ld	hl,(_bt)
   1A76 FD 21rFFs41        6066 	ld	iy,#_pbt
   1A7A FD 75 00           6067 	ld	0 (iy),l
   1A7D FD 21rFFs41        6068 	ld	iy,#_pbt
   1A81 FD 74 01           6069 	ld	1 (iy),h
                           6070 ;demo.c:814: bonc = 1;
   1A84 21rFBs41           6071 	ld	hl,#_bonc + 0
   1A87 36 01              6072 	ld	(hl), #0x01
   1A89 21rFCs41           6073 	ld	hl,#_bonc + 1
   1A8C 36 00              6074 	ld	(hl), #0x00
                           6075 ;demo.c:815: if (bt > by) {
   1A8E 21rF5s41           6076 	ld	hl,#_by
   1A91 7E                 6077 	ld	a,(hl)
   1A92 FD 21rF7s41        6078 	ld	iy,#_bt
   1A96 FD 96 00           6079 	sub	a,0 (iy)
   1A99 23                 6080 	inc	hl
   1A9A 7E                 6081 	ld	a,(hl)
   1A9B FD 21rF7s41        6082 	ld	iy,#_bt
   1A9F FD 9E 01           6083 	sbc	a,1 (iy)
   1AA2 F2rE0s1B           6084 	jp	P,00135$
                           6085 ;demo.c:816: bt = by;
   1AA5 2ArF5s41           6086 	ld	hl,(_by)
   1AA8 FD 21rF7s41        6087 	ld	iy,#_bt
   1AAC FD 75 00           6088 	ld	0 (iy),l
   1AAF FD 21rF7s41        6089 	ld	iy,#_bt
   1AB3 FD 74 01           6090 	ld	1 (iy),h
                           6091 ;demo.c:817: drawbox(bx,bt);
   1AB6 21rF7s41           6092 	ld	hl,#_bt + 0
   1AB9 4E                 6093 	ld	c,(hl)
   1ABA 21rF3s41           6094 	ld	hl,#_bx + 0
   1ABD 46                 6095 	ld	b,(hl)
   1ABE 79                 6096 	ld	a,c
   1ABF F5                 6097 	push	af
   1AC0 33                 6098 	inc	sp
   1AC1 C5                 6099 	push	bc
   1AC2 33                 6100 	inc	sp
   1AC3 CDrE2s16           6101 	call	_drawbox
   1AC6 F1                 6102 	pop	af
                           6103 ;demo.c:818: bt = 0;
   1AC7 21rF7s41           6104 	ld	hl,#_bt + 0
   1ACA 36 00              6105 	ld	(hl), #0x00
   1ACC 21rF8s41           6106 	ld	hl,#_bt + 1
   1ACF 36 00              6107 	ld	(hl), #0x00
                           6108 ;demo.c:819: if (by > 48) {
   1AD1 3E 30              6109 	ld	a,#0x30
   1AD3 FD 21rF5s41        6110 	ld	iy,#_by
   1AD7 FD 96 00           6111 	sub	a,0 (iy)
   1ADA 3E 00              6112 	ld	a,#0x00
   1ADC FD 21rF5s41        6113 	ld	iy,#_by
   1AE0 FD 9E 01           6114 	sbc	a,1 (iy)
   1AE3 F2r3Bs1B           6115 	jp	P,00123$
                           6116 ;demo.c:820: bonc = 0;
   1AE6 21rFBs41           6117 	ld	hl,#_bonc + 0
   1AE9 36 00              6118 	ld	(hl), #0x00
   1AEB 21rFCs41           6119 	ld	hl,#_bonc + 1
   1AEE 36 00              6120 	ld	(hl), #0x00
                           6121 ;demo.c:821: by-=16;
   1AF0 21rF5s41           6122 	ld	hl,#_by
   1AF3 7E                 6123 	ld	a,(hl)
   1AF4 C6 F0              6124 	add	a,#0xF0
   1AF6 77                 6125 	ld	(hl),a
   1AF7 23                 6126 	inc	hl
   1AF8 7E                 6127 	ld	a,(hl)
   1AF9 CE FF              6128 	adc	a,#0xFF
   1AFB 77                 6129 	ld	(hl),a
                           6130 ;demo.c:822: prevbox_of = boxes_of[boxi];
   1AFC 3ArF2s41           6131 	ld	a,(#_boxi+0)
   1AFF 87                 6132 	add	a,a
   1B00 C6r01              6133 	add	a,#<_boxes_of
   1B02 6F                 6134 	ld	l,a
   1B03 3Es42              6135 	ld	a,#>_boxes_of
   1B05 CE 00              6136 	adc	a,#0x00
   1B07 67                 6137 	ld	h,a
   1B08 4E                 6138 	ld	c,(hl)
   1B09 23                 6139 	inc	hl
   1B0A 21r0Bs42           6140 	ld	hl,#_prevbox_of + 0
   1B0D 71                 6141 	ld	(hl), c
                           6142 ;demo.c:823: by+=prevbox_of;
   1B0E 21r0Bs42           6143 	ld	hl,#_prevbox_of + 0
   1B11 4E                 6144 	ld	c,(hl)
   1B12 06 00              6145 	ld	b,#0x00
   1B14 21rF5s41           6146 	ld	hl,#_by
   1B17 7E                 6147 	ld	a,(hl)
   1B18 81                 6148 	add	a,c
   1B19 23                 6149 	inc	hl
   1B1A 2B                 6150 	dec	hl
   1B1B C5                 6151 	push	bc
   1B1C 4F                 6152 	ld	c, a
   1B1D 23                 6153 	inc	hl
   1B1E 7E                 6154 	ld	a, (hl)
   1B1F 47                 6155 	ld	b, a
   1B20 79                 6156 	ld	a, c
   1B21 2B                 6157 	dec	hl
   1B22 77                 6158 	ld	(hl), a
   1B23 78                 6159 	ld	a, b
   1B24 C1                 6160 	pop	bc
   1B25 88                 6161 	adc	a,b
   1B26 23                 6162 	inc	hl
   1B27 77                 6163 	ld	(hl),a
                           6164 ;demo.c:824: boxi++;
   1B28 FD 21rF2s41        6165 	ld	iy,#_boxi
   1B2C FD 34 00           6166 	inc	0 (iy)
                           6167 ;demo.c:825: if (boxi >= 4) boxi = 0;
   1B2F 3ArF2s41           6168 	ld	a,(#_boxi+0)
   1B32 D6 04              6169 	sub	a,#0x04
   1B34 38 05              6170 	jr	C,00123$
   1B36 21rF2s41           6171 	ld	hl,#_boxi + 0
   1B39 36 00              6172 	ld	(hl), #0x00
   1B3B                    6173 00123$:
                           6174 ;demo.c:828: if (by <= 48) {
   1B3B 3E 30              6175 	ld	a,#0x30
   1B3D FD 21rF5s41        6176 	ld	iy,#_by
   1B41 FD 96 00           6177 	sub	a,0 (iy)
   1B44 3E 00              6178 	ld	a,#0x00
   1B46 FD 21rF5s41        6179 	ld	iy,#_by
   1B4A FD 9E 01           6180 	sbc	a,1 (iy)
   1B4D FArF1s1B           6181 	jp	M,00149$
                           6182 ;demo.c:829: bx-=16;
   1B50 21rF3s41           6183 	ld	hl,#_bx
   1B53 7E                 6184 	ld	a,(hl)
   1B54 C6 F0              6185 	add	a,#0xF0
   1B56 77                 6186 	ld	(hl),a
   1B57 23                 6187 	inc	hl
   1B58 7E                 6188 	ld	a,(hl)
   1B59 CE FF              6189 	adc	a,#0xFF
   1B5B 77                 6190 	ld	(hl),a
                           6191 ;demo.c:831: if (bx>128)bo+=8;
   1B5C 3E 80              6192 	ld	a,#0x80
   1B5E FD 21rF3s41        6193 	ld	iy,#_bx
   1B62 FD 96 00           6194 	sub	a,0 (iy)
   1B65 3E 00              6195 	ld	a,#0x00
   1B67 FD 21rF3s41        6196 	ld	iy,#_bx
   1B6B FD 9E 01           6197 	sbc	a,1 (iy)
   1B6E 07                 6198 	rlca
   1B6F E6 01              6199 	and	a,#0x01
   1B71 4F                 6200 	ld	c,a
   1B72 B7                 6201 	or	a,a
   1B73 28 18              6202 	jr	Z,00125$
   1B75 21rF9s41           6203 	ld	hl,#_bo
   1B78 7E                 6204 	ld	a,(hl)
   1B79 C6 08              6205 	add	a,#0x08
   1B7B 23                 6206 	inc	hl
   1B7C 2B                 6207 	dec	hl
   1B7D C5                 6208 	push	bc
   1B7E 4F                 6209 	ld	c, a
   1B7F 23                 6210 	inc	hl
   1B80 7E                 6211 	ld	a, (hl)
   1B81 47                 6212 	ld	b, a
   1B82 79                 6213 	ld	a, c
   1B83 2B                 6214 	dec	hl
   1B84 77                 6215 	ld	(hl), a
   1B85 78                 6216 	ld	a, b
   1B86 C1                 6217 	pop	bc
   1B87 CE 00              6218 	adc	a,#0x00
   1B89 23                 6219 	inc	hl
   1B8A 77                 6220 	ld	(hl),a
   1B8B 18 0C              6221 	jr	00126$
   1B8D                    6222 00125$:
                           6223 ;demo.c:832: else bo-=8;
   1B8D 21rF9s41           6224 	ld	hl,#_bo
   1B90 7E                 6225 	ld	a,(hl)
   1B91 C6 F8              6226 	add	a,#0xF8
   1B93 77                 6227 	ld	(hl),a
   1B94 23                 6228 	inc	hl
   1B95 7E                 6229 	ld	a,(hl)
   1B96 CE FF              6230 	adc	a,#0xFF
   1B98 77                 6231 	ld	(hl),a
   1B99                    6232 00126$:
                           6233 ;demo.c:833: if (bo > 192) bo = 0;
   1B99 3E C0              6234 	ld	a,#0xC0
   1B9B FD 21rF9s41        6235 	ld	iy,#_bo
   1B9F FD 96 00           6236 	sub	a,0 (iy)
   1BA2 3E 00              6237 	ld	a,#0x00
   1BA4 FD 21rF9s41        6238 	ld	iy,#_bo
   1BA8 FD 9E 01           6239 	sbc	a,1 (iy)
   1BAB F2rB8s1B           6240 	jp	P,00128$
   1BAE 21rF9s41           6241 	ld	hl,#_bo + 0
   1BB1 36 00              6242 	ld	(hl), #0x00
   1BB3 21rFAs41           6243 	ld	hl,#_bo + 1
   1BB6 36 00              6244 	ld	(hl), #0x00
   1BB8                    6245 00128$:
                           6246 ;demo.c:834: if (bx>128)by=84+bo;
   1BB8 AF                 6247 	xor	a,a
   1BB9 B1                 6248 	or	a,c
   1BBA 28 12              6249 	jr	Z,00130$
   1BBC 21rF5s41           6250 	ld	hl,#_by
   1BBF 3ArF9s41           6251 	ld	a,(#_bo+0)
   1BC2 C6 54              6252 	add	a,#0x54
   1BC4 77                 6253 	ld	(hl),a
   1BC5 3ArFAs41           6254 	ld	a,(#_bo+1)
   1BC8 CE 00              6255 	adc	a,#0x00
   1BCA 23                 6256 	inc	hl
   1BCB 77                 6257 	ld	(hl),a
   1BCC 18 23              6258 	jr	00149$
   1BCE                    6259 00130$:
                           6260 ;demo.c:835: else by=36+36+84+bo;
   1BCE 21rF5s41           6261 	ld	hl,#_by
   1BD1 3ArF9s41           6262 	ld	a,(#_bo+0)
   1BD4 C6 9C              6263 	add	a,#0x9C
   1BD6 77                 6264 	ld	(hl),a
   1BD7 3ArFAs41           6265 	ld	a,(#_bo+1)
   1BDA CE 00              6266 	adc	a,#0x00
   1BDC 23                 6267 	inc	hl
   1BDD 77                 6268 	ld	(hl),a
   1BDE 18 11              6269 	jr	00149$
   1BE0                    6270 00135$:
                           6271 ;demo.c:838: drawbox(bx,bt);
   1BE0 21rF7s41           6272 	ld	hl,#_bt + 0
   1BE3 4E                 6273 	ld	c,(hl)
   1BE4 21rF3s41           6274 	ld	hl,#_bx + 0
   1BE7 46                 6275 	ld	b,(hl)
   1BE8 79                 6276 	ld	a,c
   1BE9 F5                 6277 	push	af
   1BEA 33                 6278 	inc	sp
   1BEB C5                 6279 	push	bc
   1BEC 33                 6280 	inc	sp
   1BED CDrE2s16           6281 	call	_drawbox
   1BF0 F1                 6282 	pop	af
   1BF1                    6283 00149$:
   1BF1 DD F9              6284 	ld	sp,ix
   1BF3 DD E1              6285 	pop	ix
   1BF5 C9                 6286 	ret
   1BF6                    6287 _boxes_end::
   1BF6                    6288 __str_8:
   1BF6 4C 45 54 20 55 53  6289 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1C21 00                 6290 	.db 0x00
                           6291 ;demo.c:849: void thewave() {
                           6292 ;	---------------------------------
                           6293 ; Function thewave
                           6294 ; ---------------------------------
   1C22                    6295 _thewave_start::
   1C22                    6296 _thewave:
   1C22 DD E5              6297 	push	ix
   1C24 DD 21 00 00        6298 	ld	ix,#0
   1C28 DD 39              6299 	add	ix,sp
   1C2A 21 F5 FF           6300 	ld	hl,#-11
   1C2D 39                 6301 	add	hl,sp
   1C2E F9                 6302 	ld	sp,hl
                           6303 ;demo.c:858: if (initwave == 0) {
   1C2F AF                 6304 	xor	a,a
   1C30 21r0Cs42           6305 	ld	hl,#_initwave + 0
   1C33 B6                 6306 	or	a,(hl)
   1C34 C2rBCs1E           6307 	jp	NZ,00113$
                           6308 ;demo.c:859: initwave = 1;
   1C37 21r0Cs42           6309 	ld	hl,#_initwave + 0
   1C3A 36 01              6310 	ld	(hl), #0x01
                           6311 ;demo.c:860: for (y = 0; y < 212; y++) {
   1C3C DD 36 FE 00        6312 	ld	-2 (ix),#0x00
   1C40                    6313 00128$:
   1C40 DD 7E FE           6314 	ld	a,-2 (ix)
   1C43 D6 D4              6315 	sub	a,#0xD4
   1C45 D2rB8s1C           6316 	jp	NC,00131$
                           6317 ;demo.c:861: cmd.size_x = 256;
   1C48 11r32s41           6318 	ld	de,#_cmd + 8
   1C4B EB                 6319 	ex	de,hl
   1C4C 36 00              6320 	ld	(hl),#0x00
   1C4E 23                 6321 	inc	hl
   1C4F 36 01              6322 	ld	(hl),#0x01
                           6323 ;demo.c:862: cmd.size_y = 2;
   1C51 11r34s41           6324 	ld	de,#_cmd + 10
   1C54 EB                 6325 	ex	de,hl
   1C55 36 02              6326 	ld	(hl),#0x02
   1C57 23                 6327 	inc	hl
   1C58 36 00              6328 	ld	(hl),#0x00
                           6329 ;demo.c:863: cmd.data = 0;
   1C5A 11r36s41           6330 	ld	de,#_cmd + 12
   1C5D 3E 00              6331 	ld	a,#0x00
   1C5F 12                 6332 	ld	(de),a
                           6333 ;demo.c:864: cmd.argument = 0x00; // from 70xY to left
   1C60 11r37s41           6334 	ld	de,#_cmd + 13
   1C63 3E 00              6335 	ld	a,#0x00
   1C65 12                 6336 	ld	(de),a
                           6337 ;demo.c:865: cmd.command = 0xd0; // vram to vram, y only
   1C66 11r38s41           6338 	ld	de,#_cmd + 14
   1C69 3E D0              6339 	ld	a,#0xD0
   1C6B 12                 6340 	ld	(de),a
                           6341 ;demo.c:867: cmd.source_x = 0;
   1C6C 21r2As41           6342 	ld	hl,#_cmd
   1C6F 36 00              6343 	ld	(hl),#0x00
   1C71 23                 6344 	inc	hl
   1C72 36 00              6345 	ld	(hl),#0x00
                           6346 ;demo.c:868: cmd.source_y = 0;
   1C74 11r2Cs41           6347 	ld	de,#_cmd + 2
   1C77 EB                 6348 	ex	de,hl
   1C78 36 00              6349 	ld	(hl),#0x00
   1C7A 23                 6350 	inc	hl
   1C7B 36 00              6351 	ld	(hl),#0x00
                           6352 ;demo.c:869: cmd.dest_x = 0;
   1C7D 11r2Es41           6353 	ld	de,#_cmd + 4
   1C80 EB                 6354 	ex	de,hl
   1C81 36 00              6355 	ld	(hl),#0x00
   1C83 23                 6356 	inc	hl
   1C84 36 00              6357 	ld	(hl),#0x00
                           6358 ;demo.c:870: cmd.dest_y = 0+y;
   1C86 11r30s41           6359 	ld	de,#_cmd + 6
   1C89 DD 4E FE           6360 	ld	c,-2 (ix)
   1C8C 06 00              6361 	ld	b,#0x00
   1C8E EB                 6362 	ex	de,hl
   1C8F 71                 6363 	ld	(hl),c
   1C90 23                 6364 	inc	hl
   1C91 70                 6365 	ld	(hl),b
                           6366 ;demo.c:871: vdp_copier(&cmd);
   1C92 C5                 6367 	push	bc
   1C93 21r2As41           6368 	ld	hl,#_cmd
   1C96 E5                 6369 	push	hl
   1C97 CDr00s00           6370 	call	_vdp_copier
   1C9A F1                 6371 	pop	af
   1C9B C1                 6372 	pop	bc
                           6373 ;demo.c:872: cmd.dest_y = 256+y;
   1C9C 11r30s41           6374 	ld	de,#_cmd + 6
   1C9F 21 00 01           6375 	ld	hl,#0x0100
   1CA2 09                 6376 	add	hl,bc
   1CA3 4D                 6377 	ld	c,l
   1CA4 44                 6378 	ld	b,h
   1CA5 EB                 6379 	ex	de,hl
   1CA6 71                 6380 	ld	(hl),c
   1CA7 23                 6381 	inc	hl
   1CA8 70                 6382 	ld	(hl),b
                           6383 ;demo.c:873: vdp_copier(&cmd);
   1CA9 21r2As41           6384 	ld	hl,#_cmd
   1CAC E5                 6385 	push	hl
   1CAD CDr00s00           6386 	call	_vdp_copier
   1CB0 F1                 6387 	pop	af
                           6388 ;demo.c:874: waitVB();
   1CB1 76                 6389 		halt 
                           6390 ;demo.c:860: for (y = 0; y < 212; y++) {
   1CB2 DD 34 FE           6391 	inc	-2 (ix)
   1CB5 C3r40s1C           6392 	jp	00128$
   1CB8                    6393 00131$:
                           6394 ;demo.c:878: for (y = 9; y < 15; y+=1) {
   1CB8 DD 36 FE 09        6395 	ld	-2 (ix),#0x09
   1CBC                    6396 00132$:
   1CBC DD 7E FE           6397 	ld	a,-2 (ix)
   1CBF D6 0F              6398 	sub	a,#0x0F
   1CC1 D2rBCs1E           6399 	jp	NC,00113$
                           6400 ;demo.c:879: for (x = 0; x < 21; x+=1) {
   1CC4 DD 7E FE           6401 	ld	a,-2 (ix)
   1CC7 87                 6402 	add	a,a
   1CC8 DD 77 F7           6403 	ld	-9 (ix),a
   1CCB DD 36 FF 00        6404 	ld	-1 (ix),#0x00
   1CCF                    6405 00108$:
   1CCF DD 7E FF           6406 	ld	a,-1 (ix)
   1CD2 D6 15              6407 	sub	a,#0x15
   1CD4 D2rB6s1E           6408 	jp	NC,00134$
                           6409 ;demo.c:880: if (x > 6 && x < 13) continue; 
   1CD7 3E 06              6410 	ld	a,#0x06
   1CD9 DD 96 FF           6411 	sub	a,-1 (ix)
   1CDC 30 08              6412 	jr	NC,00102$
   1CDE DD 7E FF           6413 	ld	a,-1 (ix)
   1CE1 D6 0D              6414 	sub	a,#0x0D
   1CE3 DArB0s1E           6415 	jp	C,00110$
   1CE6                    6416 00102$:
                           6417 ;demo.c:882: if (x <= 6) px=7 + (sintab[(105 + (x<<3) + (y<<3)) & 255]>>4);
   1CE6 3E 06              6418 	ld	a,#0x06
   1CE8 DD 96 FF           6419 	sub	a,-1 (ix)
   1CEB DAr41s1D           6420 	jp	C,00105$
   1CEE DD 56 FF           6421 	ld	d,-1 (ix)
   1CF1 0E 00              6422 	ld	c,#0x00
   1CF3 CB 22              6423 	sla	d
   1CF5 CB 11              6424 	rl	c
   1CF7 CB 22              6425 	sla	d
   1CF9 CB 11              6426 	rl	c
   1CFB CB 22              6427 	sla	d
   1CFD CB 11              6428 	rl	c
   1CFF 7A                 6429 	ld	a,d
   1D00 C6 69              6430 	add	a,#0x69
   1D02 57                 6431 	ld	d,a
   1D03 79                 6432 	ld	a,c
   1D04 CE 00              6433 	adc	a,#0x00
   1D06 47                 6434 	ld	b,a
   1D07 DD 5E FE           6435 	ld	e,-2 (ix)
   1D0A 0E 00              6436 	ld	c,#0x00
   1D0C CB 23              6437 	sla	e
   1D0E CB 11              6438 	rl	c
   1D10 CB 23              6439 	sla	e
   1D12 CB 11              6440 	rl	c
   1D14 CB 23              6441 	sla	e
   1D16 CB 11              6442 	rl	c
   1D18 7A                 6443 	ld	a,d
   1D19 83                 6444 	add	a,e
   1D1A 5F                 6445 	ld	e,a
   1D1B 78                 6446 	ld	a,b
   1D1C 89                 6447 	adc	a,c
   1D1D 0E 00              6448 	ld	c,#0x00
   1D1F 3Er00              6449 	ld	a,#<_sintab
   1D21 83                 6450 	add	a,e
   1D22 5F                 6451 	ld	e,a
   1D23 3Es00              6452 	ld	a,#>_sintab
   1D25 89                 6453 	adc	a,c
   1D26 6B                 6454 	ld	l,e
   1D27 67                 6455 	ld	h,a
   1D28 5E                 6456 	ld	e,(hl)
   1D29 CB 2B              6457 	sra	e
   1D2B CB 2B              6458 	sra	e
   1D2D CB 2B              6459 	sra	e
   1D2F CB 2B              6460 	sra	e
   1D31 7B                 6461 	ld	a,e
   1D32 17                 6462 	rla	
   1D33 9F                 6463 	sbc	a,a
   1D34 4F                 6464 	ld	c,a
   1D35 7B                 6465 	ld	a,e
   1D36 C6 07              6466 	add	a,#0x07
   1D38 DD 77 FC           6467 	ld	-4 (ix),a
   1D3B 79                 6468 	ld	a,c
   1D3C CE 00              6469 	adc	a,#0x00
   1D3E DD 77 FD           6470 	ld	-3 (ix),a
   1D41                    6471 00105$:
                           6472 ;demo.c:883: if (x >= 13) px=7 + (sintab[(105 + ((23+x)<<3) + ((19+y)<<3)) & 255]>>4);
   1D41 DD 7E FF           6473 	ld	a,-1 (ix)
   1D44 D6 0D              6474 	sub	a,#0x0D
   1D46 DArA7s1D           6475 	jp	C,00107$
   1D49 DD 5E FF           6476 	ld	e,-1 (ix)
   1D4C 16 00              6477 	ld	d,#0x00
   1D4E 21 17 00           6478 	ld	hl,#0x0017
   1D51 19                 6479 	add	hl,de
   1D52 EB                 6480 	ex	de,hl
   1D53 CB 23              6481 	sla	e
   1D55 CB 12              6482 	rl	d
   1D57 CB 23              6483 	sla	e
   1D59 CB 12              6484 	rl	d
   1D5B CB 23              6485 	sla	e
   1D5D CB 12              6486 	rl	d
   1D5F 21 69 00           6487 	ld	hl,#0x0069
   1D62 19                 6488 	add	hl,de
   1D63 45                 6489 	ld	b,l
   1D64 54                 6490 	ld	d,h
   1D65 DD 4E FE           6491 	ld	c,-2 (ix)
   1D68 1E 00              6492 	ld	e,#0x00
   1D6A 79                 6493 	ld	a,c
   1D6B C6 13              6494 	add	a,#0x13
   1D6D 4F                 6495 	ld	c,a
   1D6E 7B                 6496 	ld	a,e
   1D6F CE 00              6497 	adc	a,#0x00
   1D71 5F                 6498 	ld	e,a
   1D72 CB 21              6499 	sla	c
   1D74 CB 13              6500 	rl	e
   1D76 CB 21              6501 	sla	c
   1D78 CB 13              6502 	rl	e
   1D7A CB 21              6503 	sla	c
   1D7C CB 13              6504 	rl	e
   1D7E 78                 6505 	ld	a,b
   1D7F 81                 6506 	add	a,c
   1D80 4F                 6507 	ld	c,a
   1D81 7A                 6508 	ld	a,d
   1D82 8B                 6509 	adc	a,e
   1D83 1E 00              6510 	ld	e,#0x00
   1D85 3Er00              6511 	ld	a,#<_sintab
   1D87 81                 6512 	add	a,c
   1D88 4F                 6513 	ld	c,a
   1D89 3Es00              6514 	ld	a,#>_sintab
   1D8B 8B                 6515 	adc	a,e
   1D8C 69                 6516 	ld	l,c
   1D8D 67                 6517 	ld	h,a
   1D8E 4E                 6518 	ld	c,(hl)
   1D8F CB 29              6519 	sra	c
   1D91 CB 29              6520 	sra	c
   1D93 CB 29              6521 	sra	c
   1D95 CB 29              6522 	sra	c
   1D97 79                 6523 	ld	a,c
   1D98 17                 6524 	rla	
   1D99 9F                 6525 	sbc	a,a
   1D9A 5F                 6526 	ld	e,a
   1D9B 79                 6527 	ld	a,c
   1D9C C6 07              6528 	add	a,#0x07
   1D9E DD 77 FC           6529 	ld	-4 (ix),a
   1DA1 7B                 6530 	ld	a,e
   1DA2 CE 00              6531 	adc	a,#0x00
   1DA4 DD 77 FD           6532 	ld	-3 (ix),a
   1DA7                    6533 00107$:
                           6534 ;demo.c:885: cmd.size_x = 11;
   1DA7 11r32s41           6535 	ld	de,#_cmd + 8
   1DAA EB                 6536 	ex	de,hl
   1DAB 36 0B              6537 	ld	(hl),#0x0B
   1DAD 23                 6538 	inc	hl
   1DAE 36 00              6539 	ld	(hl),#0x00
                           6540 ;demo.c:886: cmd.size_y = 28-(14-px);
   1DB0 21r34s41           6541 	ld	hl,#_cmd + 10
   1DB3 DD 75 F8           6542 	ld	-8 (ix),l
   1DB6 DD 74 F9           6543 	ld	-7 (ix),h
   1DB9 3E 0E              6544 	ld	a,#0x0E
   1DBB DD 96 FC           6545 	sub	a,-4 (ix)
   1DBE 4F                 6546 	ld	c,a
   1DBF 3E 00              6547 	ld	a,#0x00
   1DC1 DD 9E FD           6548 	sbc	a,-3 (ix)
   1DC4 5F                 6549 	ld	e,a
   1DC5 3E 1C              6550 	ld	a,#0x1C
   1DC7 91                 6551 	sub	a,c
   1DC8 57                 6552 	ld	d,a
   1DC9 3E 00              6553 	ld	a,#0x00
   1DCB 9B                 6554 	sbc	a,e
   1DCC 47                 6555 	ld	b,a
   1DCD DD 6E F8           6556 	ld	l,-8 (ix)
   1DD0 DD 66 F9           6557 	ld	h,-7 (ix)
   1DD3 72                 6558 	ld	(hl),d
   1DD4 23                 6559 	inc	hl
   1DD5 70                 6560 	ld	(hl),b
                           6561 ;demo.c:887: cmd.data = 0;
   1DD6 21r36s41           6562 	ld	hl,#_cmd + 12
   1DD9 36 00              6563 	ld	(hl),#0x00
                           6564 ;demo.c:888: cmd.argument = 0x00; // from 70xY to left
   1DDB 21r37s41           6565 	ld	hl,#_cmd + 13
   1DDE 36 00              6566 	ld	(hl),#0x00
                           6567 ;demo.c:889: cmd.command = 0x98; // vram to vram, y only
   1DE0 21r38s41           6568 	ld	hl,#_cmd + 14
   1DE3 36 98              6569 	ld	(hl),#0x98
                           6570 ;demo.c:891: cmd.source_x = twelvetimes[px];
   1DE5 DD 46 FC           6571 	ld	b,-4 (ix)
   1DE8 DD 56 FD           6572 	ld	d,-3 (ix)
   1DEB CB 20              6573 	sla	b
   1DED CB 12              6574 	rl	d
   1DEF 3Er20              6575 	ld	a,#<_twelvetimes
   1DF1 80                 6576 	add	a,b
   1DF2 47                 6577 	ld	b,a
   1DF3 3Es01              6578 	ld	a,#>_twelvetimes
   1DF5 8A                 6579 	adc	a,d
   1DF6 68                 6580 	ld	l,b
   1DF7 67                 6581 	ld	h,a
   1DF8 46                 6582 	ld	b,(hl)
   1DF9 23                 6583 	inc	hl
   1DFA 56                 6584 	ld	d,(hl)
   1DFB 21r2As41           6585 	ld	hl,#_cmd
   1DFE 70                 6586 	ld	(hl),b
   1DFF 23                 6587 	inc	hl
   1E00 72                 6588 	ld	(hl),d
                           6589 ;demo.c:892: cmd.source_y = 768+183+(15-px);
   1E01 23                 6590 	inc	hl
   1E02 DD 75 F8           6591 	ld	-8 (ix),l
   1E05 DD 74 F9           6592 	ld	-7 (ix),h
   1E08 3E C6              6593 	ld	a,#0xC6
   1E0A DD 96 FC           6594 	sub	a,-4 (ix)
   1E0D 47                 6595 	ld	b,a
   1E0E 3E 03              6596 	ld	a,#0x03
   1E10 DD 9E FD           6597 	sbc	a,-3 (ix)
   1E13 57                 6598 	ld	d,a
   1E14 DD 6E F8           6599 	ld	l,-8 (ix)
   1E17 DD 66 F9           6600 	ld	h,-7 (ix)
   1E1A 70                 6601 	ld	(hl),b
   1E1B 23                 6602 	inc	hl
   1E1C 72                 6603 	ld	(hl),d
                           6604 ;demo.c:893: cmd.dest_x = 0+twelvetimes[x];
   1E1D 21r2Es41           6605 	ld	hl,#_cmd + 4
   1E20 DD 75 F8           6606 	ld	-8 (ix),l
   1E23 DD 74 F9           6607 	ld	-7 (ix),h
   1E26 DD 7E FF           6608 	ld	a,-1 (ix)
   1E29 87                 6609 	add	a,a
   1E2A C6r20              6610 	add	a,#<_twelvetimes
   1E2C 6F                 6611 	ld	l,a
   1E2D 3Es01              6612 	ld	a,#>_twelvetimes
   1E2F CE 00              6613 	adc	a,#0x00
   1E31 67                 6614 	ld	h,a
   1E32 46                 6615 	ld	b,(hl)
   1E33 23                 6616 	inc	hl
   1E34 56                 6617 	ld	d,(hl)
   1E35 DD 6E F8           6618 	ld	l,-8 (ix)
   1E38 DD 66 F9           6619 	ld	h,-7 (ix)
   1E3B 70                 6620 	ld	(hl),b
   1E3C 23                 6621 	inc	hl
   1E3D 72                 6622 	ld	(hl),d
                           6623 ;demo.c:894: cmd.dest_y = 0+bo+(eighttimes[y]+4)+(14-px);
   1E3E 21r30s41           6624 	ld	hl,#_cmd + 6
   1E41 DD 75 F8           6625 	ld	-8 (ix),l
   1E44 DD 74 F9           6626 	ld	-7 (ix),h
   1E47 3Er54              6627 	ld	a,#<_eighttimes
   1E49 DD 86 F7           6628 	add	a,-9 (ix)
   1E4C 6F                 6629 	ld	l,a
   1E4D 3Es01              6630 	ld	a,#>_eighttimes
   1E4F CE 00              6631 	adc	a,#0x00
   1E51 67                 6632 	ld	h,a
   1E52 46                 6633 	ld	b,(hl)
   1E53 23                 6634 	inc	hl
   1E54 56                 6635 	ld	d,(hl)
   1E55 78                 6636 	ld	a,b
   1E56 C6 04              6637 	add	a,#0x04
   1E58 47                 6638 	ld	b,a
   1E59 7A                 6639 	ld	a,d
   1E5A CE 00              6640 	adc	a,#0x00
   1E5C 57                 6641 	ld	d,a
   1E5D 78                 6642 	ld	a,b
   1E5E 81                 6643 	add	a,c
   1E5F 47                 6644 	ld	b,a
   1E60 7A                 6645 	ld	a,d
   1E61 8B                 6646 	adc	a,e
   1E62 57                 6647 	ld	d,a
   1E63 DD 6E F8           6648 	ld	l,-8 (ix)
   1E66 DD 66 F9           6649 	ld	h,-7 (ix)
   1E69 70                 6650 	ld	(hl),b
   1E6A 23                 6651 	inc	hl
   1E6B 72                 6652 	ld	(hl),d
                           6653 ;demo.c:895: vdp_copier(&cmd);
   1E6C C5                 6654 	push	bc
   1E6D D5                 6655 	push	de
   1E6E 21r2As41           6656 	ld	hl,#_cmd
   1E71 E5                 6657 	push	hl
   1E72 CDr00s00           6658 	call	_vdp_copier
   1E75 F1                 6659 	pop	af
   1E76 D1                 6660 	pop	de
   1E77 C1                 6661 	pop	bc
                           6662 ;demo.c:896: cmd.dest_y = 256+bo+(eighttimes[y]+4)+(14-px);
   1E78 21r30s41           6663 	ld	hl,#_cmd + 6
   1E7B DD 75 F8           6664 	ld	-8 (ix),l
   1E7E DD 74 F9           6665 	ld	-7 (ix),h
   1E81 3Er54              6666 	ld	a,#<_eighttimes
   1E83 DD 86 F7           6667 	add	a,-9 (ix)
   1E86 6F                 6668 	ld	l,a
   1E87 3Es01              6669 	ld	a,#>_eighttimes
   1E89 CE 00              6670 	adc	a,#0x00
   1E8B 67                 6671 	ld	h,a
   1E8C 46                 6672 	ld	b,(hl)
   1E8D 23                 6673 	inc	hl
   1E8E 56                 6674 	ld	d,(hl)
   1E8F 78                 6675 	ld	a,b
   1E90 C6 04              6676 	add	a,#0x04
   1E92 47                 6677 	ld	b,a
   1E93 7A                 6678 	ld	a,d
   1E94 CE 00              6679 	adc	a,#0x00
   1E96 C6 01              6680 	add	a,#0x01
   1E98 57                 6681 	ld	d,a
   1E99 78                 6682 	ld	a,b
   1E9A 81                 6683 	add	a,c
   1E9B 4F                 6684 	ld	c,a
   1E9C 7A                 6685 	ld	a,d
   1E9D 8B                 6686 	adc	a,e
   1E9E 5F                 6687 	ld	e,a
   1E9F DD 6E F8           6688 	ld	l,-8 (ix)
   1EA2 DD 66 F9           6689 	ld	h,-7 (ix)
   1EA5 71                 6690 	ld	(hl),c
   1EA6 23                 6691 	inc	hl
   1EA7 73                 6692 	ld	(hl),e
                           6693 ;demo.c:897: vdp_copier(&cmd);
   1EA8 21r2As41           6694 	ld	hl,#_cmd
   1EAB E5                 6695 	push	hl
   1EAC CDr00s00           6696 	call	_vdp_copier
   1EAF F1                 6697 	pop	af
   1EB0                    6698 00110$:
                           6699 ;demo.c:879: for (x = 0; x < 21; x+=1) {
   1EB0 DD 34 FF           6700 	inc	-1 (ix)
   1EB3 C3rCFs1C           6701 	jp	00108$
   1EB6                    6702 00134$:
                           6703 ;demo.c:878: for (y = 9; y < 15; y+=1) {
   1EB6 DD 34 FE           6704 	inc	-2 (ix)
   1EB9 C3rBCs1C           6705 	jp	00132$
   1EBC                    6706 00113$:
                           6707 ;demo.c:903: if (buf == -1) { bo = 0; ya = 0; }
   1EBC 3Ar0Ds42           6708 	ld	a,(#_buf+0)
   1EBF 3C                 6709 	inc	a
   1EC0 20 06              6710 	jr	NZ,00188$
   1EC2 3Ar0Es42           6711 	ld	a,(#_buf+1)
   1EC5 3C                 6712 	inc	a
   1EC6 28 02              6713 	jr	Z,00189$
   1EC8                    6714 00188$:
   1EC8 18 05              6715 	jr	00115$
   1ECA                    6716 00189$:
   1ECA 01 00 00           6717 	ld	bc,#0x0000
   1ECD 18 03              6718 	jr	00116$
   1ECF                    6719 00115$:
                           6720 ;demo.c:904: else { bo = 256; ya = 6;}
   1ECF 01 00 01           6721 	ld	bc,#0x0100
   1ED2                    6722 00116$:
                           6723 ;demo.c:906: cmd.size_x = 72;
   1ED2 11r32s41           6724 	ld	de,#_cmd + 8
   1ED5 EB                 6725 	ex	de,hl
   1ED6 36 48              6726 	ld	(hl),#0x48
   1ED8 23                 6727 	inc	hl
   1ED9 36 00              6728 	ld	(hl),#0x00
                           6729 ;demo.c:907: cmd.size_y = 80;
   1EDB 11r34s41           6730 	ld	de,#_cmd + 10
   1EDE EB                 6731 	ex	de,hl
   1EDF 36 50              6732 	ld	(hl),#0x50
   1EE1 23                 6733 	inc	hl
   1EE2 36 00              6734 	ld	(hl),#0x00
                           6735 ;demo.c:908: cmd.data = 0;
   1EE4 11r36s41           6736 	ld	de,#_cmd + 12
   1EE7 3E 00              6737 	ld	a,#0x00
   1EE9 12                 6738 	ld	(de),a
                           6739 ;demo.c:909: cmd.argument = 0x00; // from 70xY to left
   1EEA 11r37s41           6740 	ld	de,#_cmd + 13
   1EED 3E 00              6741 	ld	a,#0x00
   1EEF 12                 6742 	ld	(de),a
                           6743 ;demo.c:910: cmd.command = 0xd0; // vram to vram, y only
   1EF0 11r38s41           6744 	ld	de,#_cmd + 14
   1EF3 3E D0              6745 	ld	a,#0xD0
   1EF5 12                 6746 	ld	(de),a
                           6747 ;demo.c:911: cmd.source_x = 178;
   1EF6 21r2As41           6748 	ld	hl,#_cmd
   1EF9 36 B2              6749 	ld	(hl),#0xB2
   1EFB 23                 6750 	inc	hl
   1EFC 36 00              6751 	ld	(hl),#0x00
                           6752 ;demo.c:912: cmd.source_y = 0;
   1EFE 11r2Cs41           6753 	ld	de,#_cmd + 2
   1F01 EB                 6754 	ex	de,hl
   1F02 36 00              6755 	ld	(hl),#0x00
   1F04 23                 6756 	inc	hl
   1F05 36 00              6757 	ld	(hl),#0x00
                           6758 ;demo.c:913: cmd.dest_x = 84;
   1F07 11r2Es41           6759 	ld	de,#_cmd + 4
   1F0A EB                 6760 	ex	de,hl
   1F0B 36 54              6761 	ld	(hl),#0x54
   1F0D 23                 6762 	inc	hl
   1F0E 36 00              6763 	ld	(hl),#0x00
                           6764 ;demo.c:914: cmd.dest_y = 72+bo;
   1F10 11r30s41           6765 	ld	de,#_cmd + 6
   1F13 21 48 00           6766 	ld	hl,#0x0048
   1F16 09                 6767 	add	hl,bc
   1F17 4D                 6768 	ld	c,l
   1F18 44                 6769 	ld	b,h
   1F19 EB                 6770 	ex	de,hl
   1F1A 71                 6771 	ld	(hl),c
   1F1B 23                 6772 	inc	hl
   1F1C 70                 6773 	ld	(hl),b
                           6774 ;demo.c:915: vdp_copier(&cmd);
   1F1D C5                 6775 	push	bc
   1F1E 21r2As41           6776 	ld	hl,#_cmd
   1F21 E5                 6777 	push	hl
   1F22 CDr00s00           6778 	call	_vdp_copier
   1F25 F1                 6779 	pop	af
   1F26 C1                 6780 	pop	bc
                           6781 ;demo.c:917: lukema = ffa;
   1F27 2Ar0Fs42           6782 	ld	hl,(_ffa)
   1F2A DD 75 FA           6783 	ld	-6 (ix),l
   1F2D DD 74 FB           6784 	ld	-5 (ix),h
                           6785 ;demo.c:918: for (y = 0; y < 5; y+=1) {
   1F30 DD 36 FE 00        6786 	ld	-2 (ix),#0x00
   1F34                    6787 00140$:
   1F34 DD 7E FE           6788 	ld	a,-2 (ix)
   1F37 D6 05              6789 	sub	a,#0x05
   1F39 D2r9As20           6790 	jp	NC,00143$
                           6791 ;demo.c:919: for (x = 0; x < 6; x+=1) {
   1F3C DD 7E FE           6792 	ld	a,-2 (ix)
   1F3F 87                 6793 	add	a,a
   1F40 DD 77 F7           6794 	ld	-9 (ix),a
   1F43 DD 36 FF 00        6795 	ld	-1 (ix),#0x00
   1F47                    6796 00136$:
   1F47 DD 7E FF           6797 	ld	a,-1 (ix)
   1F4A D6 06              6798 	sub	a,#0x06
   1F4C D2r94s20           6799 	jp	NC,00142$
                           6800 ;demo.c:921: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   1F4F DD 5E FF           6801 	ld	e,-1 (ix)
   1F52 16 00              6802 	ld	d,#0x00
   1F54 CB 23              6803 	sla	e
   1F56 CB 12              6804 	rl	d
   1F58 CB 23              6805 	sla	e
   1F5A CB 12              6806 	rl	d
   1F5C CB 23              6807 	sla	e
   1F5E CB 12              6808 	rl	d
   1F60 DD 7E FA           6809 	ld	a,-6 (ix)
   1F63 83                 6810 	add	a,e
   1F64 DD 77 F8           6811 	ld	-8 (ix),a
   1F67 DD 7E FB           6812 	ld	a,-5 (ix)
   1F6A 8A                 6813 	adc	a,d
   1F6B DD 77 F9           6814 	ld	-7 (ix),a
   1F6E DD 5E FE           6815 	ld	e,-2 (ix)
   1F71 16 00              6816 	ld	d,#0x00
   1F73 CB 23              6817 	sla	e
   1F75 CB 12              6818 	rl	d
   1F77 CB 23              6819 	sla	e
   1F79 CB 12              6820 	rl	d
   1F7B DD 7E F8           6821 	ld	a,-8 (ix)
   1F7E 83                 6822 	add	a,e
   1F7F 5F                 6823 	ld	e,a
   1F80 DD 7E F9           6824 	ld	a,-7 (ix)
   1F83 8A                 6825 	adc	a,d
   1F84 16 00              6826 	ld	d,#0x00
   1F86 21r00s00           6827 	ld	hl,#_sintab
   1F89 19                 6828 	add	hl,de
   1F8A 5E                 6829 	ld	e,(hl)
   1F8B CB 2B              6830 	sra	e
   1F8D CB 2B              6831 	sra	e
   1F8F CB 2B              6832 	sra	e
   1F91 CB 2B              6833 	sra	e
   1F93 7B                 6834 	ld	a,e
   1F94 17                 6835 	rla	
   1F95 9F                 6836 	sbc	a,a
   1F96 57                 6837 	ld	d,a
   1F97 21 07 00           6838 	ld	hl,#0x0007
   1F9A 19                 6839 	add	hl,de
   1F9B DD 75 FC           6840 	ld	-4 (ix),l
                           6841 ;demo.c:922: if (px < 0) px = 0; 
   1F9E DD 74 FD           6842 	ld	-3 (ix),h
   1FA1 7C                 6843 	ld	a, h
   1FA2 CB 7F              6844 	bit	7,a
   1FA4 28 08              6845 	jr	Z,00118$
   1FA6 DD 36 FC 00        6846 	ld	-4 (ix),#0x00
   1FAA DD 36 FD 00        6847 	ld	-3 (ix),#0x00
   1FAE                    6848 00118$:
                           6849 ;demo.c:923: if (px > 14) px = 14; 
   1FAE 3E 0E              6850 	ld	a,#0x0E
   1FB0 DD 96 FC           6851 	sub	a,-4 (ix)
   1FB3 3E 00              6852 	ld	a,#0x00
   1FB5 DD 9E FD           6853 	sbc	a,-3 (ix)
   1FB8 F2rC3s1F           6854 	jp	P,00120$
   1FBB DD 36 FC 0E        6855 	ld	-4 (ix),#0x0E
   1FBF DD 36 FD 00        6856 	ld	-3 (ix),#0x00
   1FC3                    6857 00120$:
                           6858 ;demo.c:925: cmd.size_x = 12;
   1FC3 11r32s41           6859 	ld	de,#_cmd + 8
   1FC6 EB                 6860 	ex	de,hl
   1FC7 36 0C              6861 	ld	(hl),#0x0C
   1FC9 23                 6862 	inc	hl
   1FCA 36 00              6863 	ld	(hl),#0x00
                           6864 ;demo.c:926: cmd.size_y = 11;
   1FCC 11r34s41           6865 	ld	de,#_cmd + 10
   1FCF EB                 6866 	ex	de,hl
   1FD0 36 0B              6867 	ld	(hl),#0x0B
   1FD2 23                 6868 	inc	hl
   1FD3 36 00              6869 	ld	(hl),#0x00
                           6870 ;demo.c:927: cmd.data = 0;
   1FD5 11r36s41           6871 	ld	de,#_cmd + 12
   1FD8 3E 00              6872 	ld	a,#0x00
   1FDA 12                 6873 	ld	(de),a
                           6874 ;demo.c:928: cmd.argument = 0x00; // from 70xY to left
   1FDB 11r37s41           6875 	ld	de,#_cmd + 13
   1FDE 3E 00              6876 	ld	a,#0x00
   1FE0 12                 6877 	ld	(de),a
                           6878 ;demo.c:929: cmd.command = 0x98; // vram to vram, y only
   1FE1 11r38s41           6879 	ld	de,#_cmd + 14
   1FE4 3E 98              6880 	ld	a,#0x98
   1FE6 12                 6881 	ld	(de),a
                           6882 ;demo.c:931: cmd.source_x = twelvetimes[px];
   1FE7 DD 5E FC           6883 	ld	e,-4 (ix)
   1FEA DD 56 FD           6884 	ld	d,-3 (ix)
   1FED CB 23              6885 	sla	e
   1FEF CB 12              6886 	rl	d
   1FF1 21r20s01           6887 	ld	hl,#_twelvetimes
   1FF4 19                 6888 	add	hl,de
   1FF5 5E                 6889 	ld	e,(hl)
   1FF6 23                 6890 	inc	hl
   1FF7 56                 6891 	ld	d,(hl)
   1FF8 21r2As41           6892 	ld	hl,#_cmd
   1FFB 73                 6893 	ld	(hl),e
   1FFC 23                 6894 	inc	hl
   1FFD 72                 6895 	ld	(hl),d
                           6896 ;demo.c:932: cmd.source_y = 768+183+16-px;
   1FFE 23                 6897 	inc	hl
   1FFF DD 75 F8           6898 	ld	-8 (ix),l
   2002 DD 74 F9           6899 	ld	-7 (ix),h
   2005 3E C7              6900 	ld	a,#0xC7
   2007 DD 96 FC           6901 	sub	a,-4 (ix)
   200A 5F                 6902 	ld	e,a
   200B 3E 03              6903 	ld	a,#0x03
   200D DD 9E FD           6904 	sbc	a,-3 (ix)
   2010 57                 6905 	ld	d,a
   2011 DD 6E F8           6906 	ld	l,-8 (ix)
   2014 DD 66 F9           6907 	ld	h,-7 (ix)
   2017 73                 6908 	ld	(hl),e
   2018 23                 6909 	inc	hl
   2019 72                 6910 	ld	(hl),d
                           6911 ;demo.c:933: cmd.dest_x = 84+twelvetimes[x];
   201A 21r2Es41           6912 	ld	hl,#_cmd + 4
   201D DD 75 F8           6913 	ld	-8 (ix),l
   2020 DD 74 F9           6914 	ld	-7 (ix),h
   2023 DD 7E FF           6915 	ld	a,-1 (ix)
   2026 87                 6916 	add	a,a
   2027 C6r20              6917 	add	a,#<_twelvetimes
   2029 6F                 6918 	ld	l,a
   202A 3Es01              6919 	ld	a,#>_twelvetimes
   202C CE 00              6920 	adc	a,#0x00
   202E 67                 6921 	ld	h,a
   202F 5E                 6922 	ld	e,(hl)
   2030 23                 6923 	inc	hl
   2031 56                 6924 	ld	d,(hl)
   2032 21 54 00           6925 	ld	hl,#0x0054
   2035 19                 6926 	add	hl,de
   2036 EB                 6927 	ex	de,hl
   2037 DD 6E F8           6928 	ld	l,-8 (ix)
   203A DD 66 F9           6929 	ld	h,-7 (ix)
   203D 73                 6930 	ld	(hl),e
   203E 23                 6931 	inc	hl
   203F 72                 6932 	ld	(hl),d
                           6933 ;demo.c:934: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   2040 21r30s41           6934 	ld	hl,#_cmd + 6
   2043 DD 75 F8           6935 	ld	-8 (ix),l
   2046 DD 74 F9           6936 	ld	-7 (ix),h
   2049 3Er54              6937 	ld	a,#<_eighttimes
   204B DD 86 F7           6938 	add	a,-9 (ix)
   204E 6F                 6939 	ld	l,a
   204F 3Es01              6940 	ld	a,#>_eighttimes
   2051 CE 00              6941 	adc	a,#0x00
   2053 67                 6942 	ld	h,a
   2054 5E                 6943 	ld	e,(hl)
   2055 23                 6944 	inc	hl
   2056 56                 6945 	ld	d,(hl)
   2057 13                 6946 	inc	de
   2058 13                 6947 	inc	de
   2059 13                 6948 	inc	de
   205A 13                 6949 	inc	de
   205B 79                 6950 	ld	a,c
   205C 83                 6951 	add	a,e
   205D DD 77 F5           6952 	ld	-11 (ix),a
   2060 78                 6953 	ld	a,b
   2061 8A                 6954 	adc	a,d
   2062 DD 77 F6           6955 	ld	-10 (ix),a
   2065 3E 0E              6956 	ld	a,#0x0E
   2067 DD 96 FC           6957 	sub	a,-4 (ix)
   206A 5F                 6958 	ld	e,a
   206B 3E 00              6959 	ld	a,#0x00
   206D DD 9E FD           6960 	sbc	a,-3 (ix)
   2070 57                 6961 	ld	d,a
   2071 DD 7E F5           6962 	ld	a,-11 (ix)
   2074 83                 6963 	add	a,e
   2075 5F                 6964 	ld	e,a
   2076 DD 7E F6           6965 	ld	a,-10 (ix)
   2079 8A                 6966 	adc	a,d
   207A 57                 6967 	ld	d,a
   207B DD 6E F8           6968 	ld	l,-8 (ix)
   207E DD 66 F9           6969 	ld	h,-7 (ix)
   2081 73                 6970 	ld	(hl),e
   2082 23                 6971 	inc	hl
   2083 72                 6972 	ld	(hl),d
                           6973 ;demo.c:935: vdp_copier(&cmd);
   2084 C5                 6974 	push	bc
   2085 21r2As41           6975 	ld	hl,#_cmd
   2088 E5                 6976 	push	hl
   2089 CDr00s00           6977 	call	_vdp_copier
   208C F1                 6978 	pop	af
   208D C1                 6979 	pop	bc
                           6980 ;demo.c:919: for (x = 0; x < 6; x+=1) {
   208E DD 34 FF           6981 	inc	-1 (ix)
   2091 C3r47s1F           6982 	jp	00136$
   2094                    6983 00142$:
                           6984 ;demo.c:918: for (y = 0; y < 5; y+=1) {
   2094 DD 34 FE           6985 	inc	-2 (ix)
   2097 C3r34s1F           6986 	jp	00140$
   209A                    6987 00143$:
                           6988 ;demo.c:940: for (x = 0; x < 6; x+=1) {
   209A DD 36 FF 00        6989 	ld	-1 (ix),#0x00
   209E                    6990 00144$:
   209E DD 7E FF           6991 	ld	a,-1 (ix)
   20A1 D6 06              6992 	sub	a,#0x06
   20A3 D2rE4s21           6993 	jp	NC,00147$
                           6994 ;demo.c:941: px=7 + (sintab[(lukema + (x<<3) + (y<<2)) & 255]>>4);
   20A6 DD 5E FF           6995 	ld	e,-1 (ix)
   20A9 16 00              6996 	ld	d,#0x00
   20AB CB 23              6997 	sla	e
   20AD CB 12              6998 	rl	d
   20AF CB 23              6999 	sla	e
   20B1 CB 12              7000 	rl	d
   20B3 CB 23              7001 	sla	e
   20B5 CB 12              7002 	rl	d
   20B7 DD 7E FA           7003 	ld	a,-6 (ix)
   20BA 83                 7004 	add	a,e
   20BB 5F                 7005 	ld	e,a
   20BC DD 7E FB           7006 	ld	a,-5 (ix)
   20BF 8A                 7007 	adc	a,d
   20C0 57                 7008 	ld	d,a
   20C1 21 14 00           7009 	ld	hl,#0x0014
   20C4 19                 7010 	add	hl,de
   20C5 5D                 7011 	ld	e,l
   20C6 16 00              7012 	ld	d,#0x00
   20C8 21r00s00           7013 	ld	hl,#_sintab
   20CB 19                 7014 	add	hl,de
   20CC 5E                 7015 	ld	e,(hl)
   20CD CB 2B              7016 	sra	e
   20CF CB 2B              7017 	sra	e
   20D1 CB 2B              7018 	sra	e
   20D3 CB 2B              7019 	sra	e
   20D5 7B                 7020 	ld	a,e
   20D6 17                 7021 	rla	
   20D7 9F                 7022 	sbc	a,a
   20D8 57                 7023 	ld	d,a
   20D9 21 07 00           7024 	ld	hl,#0x0007
   20DC 19                 7025 	add	hl,de
   20DD DD 75 FC           7026 	ld	-4 (ix),l
                           7027 ;demo.c:942: if (px < 0) px = 0; 
   20E0 DD 74 FD           7028 	ld	-3 (ix),h
   20E3 7C                 7029 	ld	a, h
   20E4 CB 7F              7030 	bit	7,a
   20E6 28 08              7031 	jr	Z,00122$
   20E8 DD 36 FC 00        7032 	ld	-4 (ix),#0x00
   20EC DD 36 FD 00        7033 	ld	-3 (ix),#0x00
   20F0                    7034 00122$:
                           7035 ;demo.c:943: if (px > 14) px = 14; 
   20F0 3E 0E              7036 	ld	a,#0x0E
   20F2 DD 96 FC           7037 	sub	a,-4 (ix)
   20F5 3E 00              7038 	ld	a,#0x00
   20F7 DD 9E FD           7039 	sbc	a,-3 (ix)
   20FA F2r05s21           7040 	jp	P,00124$
   20FD DD 36 FC 0E        7041 	ld	-4 (ix),#0x0E
   2101 DD 36 FD 00        7042 	ld	-3 (ix),#0x00
   2105                    7043 00124$:
                           7044 ;demo.c:945: cmd.size_x = 12;
   2105 11r32s41           7045 	ld	de,#_cmd + 8
   2108 EB                 7046 	ex	de,hl
   2109 36 0C              7047 	ld	(hl),#0x0C
   210B 23                 7048 	inc	hl
   210C 36 00              7049 	ld	(hl),#0x00
                           7050 ;demo.c:946: cmd.size_y = 27-(14-px);
   210E 21r34s41           7051 	ld	hl,#_cmd + 10
   2111 DD 75 F5           7052 	ld	-11 (ix),l
   2114 DD 74 F6           7053 	ld	-10 (ix),h
   2117 3E 0E              7054 	ld	a,#0x0E
   2119 DD 96 FC           7055 	sub	a,-4 (ix)
   211C DD 77 F8           7056 	ld	-8 (ix),a
   211F 3E 00              7057 	ld	a,#0x00
   2121 DD 9E FD           7058 	sbc	a,-3 (ix)
   2124 DD 77 F9           7059 	ld	-7 (ix),a
   2127 3E 1B              7060 	ld	a,#0x1B
   2129 DD 96 F8           7061 	sub	a,-8 (ix)
   212C 5F                 7062 	ld	e,a
   212D 3E 00              7063 	ld	a,#0x00
   212F DD 9E F9           7064 	sbc	a,-7 (ix)
   2132 57                 7065 	ld	d,a
   2133 DD 6E F5           7066 	ld	l,-11 (ix)
   2136 DD 66 F6           7067 	ld	h,-10 (ix)
   2139 73                 7068 	ld	(hl),e
   213A 23                 7069 	inc	hl
   213B 72                 7070 	ld	(hl),d
                           7071 ;demo.c:947: cmd.data = 0;
   213C 11r36s41           7072 	ld	de,#_cmd + 12
   213F 3E 00              7073 	ld	a,#0x00
   2141 12                 7074 	ld	(de),a
                           7075 ;demo.c:948: cmd.argument = 0x00; // from 70xY to left
   2142 11r37s41           7076 	ld	de,#_cmd + 13
   2145 3E 00              7077 	ld	a,#0x00
   2147 12                 7078 	ld	(de),a
                           7079 ;demo.c:949: cmd.command = 0x98; // vram to vram, y only
   2148 11r38s41           7080 	ld	de,#_cmd + 14
   214B 3E 98              7081 	ld	a,#0x98
   214D 12                 7082 	ld	(de),a
                           7083 ;demo.c:951: cmd.source_x = twelvetimes[px];
   214E DD 5E FC           7084 	ld	e,-4 (ix)
   2151 DD 56 FD           7085 	ld	d,-3 (ix)
   2154 CB 23              7086 	sla	e
   2156 CB 12              7087 	rl	d
   2158 21r20s01           7088 	ld	hl,#_twelvetimes
   215B 19                 7089 	add	hl,de
   215C 5E                 7090 	ld	e,(hl)
   215D 23                 7091 	inc	hl
   215E 56                 7092 	ld	d,(hl)
   215F 21r2As41           7093 	ld	hl,#_cmd
   2162 73                 7094 	ld	(hl),e
   2163 23                 7095 	inc	hl
   2164 72                 7096 	ld	(hl),d
                           7097 ;demo.c:952: cmd.source_y = 768+183+ 16-px;
   2165 23                 7098 	inc	hl
   2166 DD 75 F5           7099 	ld	-11 (ix),l
   2169 DD 74 F6           7100 	ld	-10 (ix),h
   216C 3E C7              7101 	ld	a,#0xC7
   216E DD 96 FC           7102 	sub	a,-4 (ix)
   2171 5F                 7103 	ld	e,a
   2172 3E 03              7104 	ld	a,#0x03
   2174 DD 9E FD           7105 	sbc	a,-3 (ix)
   2177 57                 7106 	ld	d,a
   2178 DD 6E F5           7107 	ld	l,-11 (ix)
   217B DD 66 F6           7108 	ld	h,-10 (ix)
   217E 73                 7109 	ld	(hl),e
   217F 23                 7110 	inc	hl
   2180 72                 7111 	ld	(hl),d
                           7112 ;demo.c:953: cmd.dest_x = 84+twelvetimes[x];
   2181 21r2Es41           7113 	ld	hl,#_cmd + 4
   2184 DD 75 F5           7114 	ld	-11 (ix),l
   2187 DD 74 F6           7115 	ld	-10 (ix),h
   218A DD 7E FF           7116 	ld	a,-1 (ix)
   218D 87                 7117 	add	a,a
   218E C6r20              7118 	add	a,#<_twelvetimes
   2190 6F                 7119 	ld	l,a
   2191 3Es01              7120 	ld	a,#>_twelvetimes
   2193 CE 00              7121 	adc	a,#0x00
   2195 67                 7122 	ld	h,a
   2196 5E                 7123 	ld	e,(hl)
   2197 23                 7124 	inc	hl
   2198 56                 7125 	ld	d,(hl)
   2199 21 54 00           7126 	ld	hl,#0x0054
   219C 19                 7127 	add	hl,de
   219D EB                 7128 	ex	de,hl
   219E DD 6E F5           7129 	ld	l,-11 (ix)
   21A1 DD 66 F6           7130 	ld	h,-10 (ix)
   21A4 73                 7131 	ld	(hl),e
   21A5 23                 7132 	inc	hl
   21A6 72                 7133 	ld	(hl),d
                           7134 ;demo.c:954: cmd.dest_y = 72+bo+(eighttimes[y]+4)+(14-px);
   21A7 21r30s41           7135 	ld	hl,#_cmd + 6
   21AA DD 75 F5           7136 	ld	-11 (ix),l
   21AD DD 74 F6           7137 	ld	-10 (ix),h
   21B0 11r5Es01           7138 	ld	de,#_eighttimes + 10
   21B3 EB                 7139 	ex	de,hl
   21B4 5E                 7140 	ld	e,(hl)
   21B5 23                 7141 	inc	hl
   21B6 56                 7142 	ld	d,(hl)
   21B7 13                 7143 	inc	de
   21B8 13                 7144 	inc	de
   21B9 13                 7145 	inc	de
   21BA 13                 7146 	inc	de
   21BB 79                 7147 	ld	a,c
   21BC 83                 7148 	add	a,e
   21BD 5F                 7149 	ld	e,a
   21BE 78                 7150 	ld	a,b
   21BF 8A                 7151 	adc	a,d
   21C0 57                 7152 	ld	d,a
   21C1 7B                 7153 	ld	a,e
   21C2 DD 86 F8           7154 	add	a,-8 (ix)
   21C5 5F                 7155 	ld	e,a
   21C6 7A                 7156 	ld	a,d
   21C7 DD 8E F9           7157 	adc	a,-7 (ix)
   21CA 57                 7158 	ld	d,a
   21CB DD 6E F5           7159 	ld	l,-11 (ix)
   21CE DD 66 F6           7160 	ld	h,-10 (ix)
   21D1 73                 7161 	ld	(hl),e
   21D2 23                 7162 	inc	hl
   21D3 72                 7163 	ld	(hl),d
                           7164 ;demo.c:955: vdp_copier(&cmd);
   21D4 C5                 7165 	push	bc
   21D5 21r2As41           7166 	ld	hl,#_cmd
   21D8 E5                 7167 	push	hl
   21D9 CDr00s00           7168 	call	_vdp_copier
   21DC F1                 7169 	pop	af
   21DD C1                 7170 	pop	bc
                           7171 ;demo.c:940: for (x = 0; x < 6; x+=1) {
   21DE DD 34 FF           7172 	inc	-1 (ix)
   21E1 C3r9Es20           7173 	jp	00144$
   21E4                    7174 00147$:
                           7175 ;demo.c:959: if (buf == -1) vdp_register(2, 0x1F);
   21E4 3Ar0Ds42           7176 	ld	a,(#_buf+0)
   21E7 3C                 7177 	inc	a
   21E8 20 06              7178 	jr	NZ,00200$
   21EA 3Ar0Es42           7179 	ld	a,(#_buf+1)
   21ED 3C                 7180 	inc	a
   21EE 28 02              7181 	jr	Z,00201$
   21F0                    7182 00200$:
   21F0 18 0A              7183 	jr	00126$
   21F2                    7184 00201$:
   21F2 21 02 1F           7185 	ld	hl,#0x1F02
   21F5 E5                 7186 	push	hl
   21F6 CDr00s00           7187 	call	_vdp_register
   21F9 F1                 7188 	pop	af
   21FA 18 08              7189 	jr	00127$
   21FC                    7190 00126$:
                           7191 ;demo.c:960: else vdp_register(2, 0x3F);
   21FC 21 02 3F           7192 	ld	hl,#0x3F02
   21FF E5                 7193 	push	hl
   2200 CDr00s00           7194 	call	_vdp_register
   2203 F1                 7195 	pop	af
   2204                    7196 00127$:
                           7197 ;demo.c:963: buf = -buf;
   2204 AF                 7198 	xor	a,a
   2205 FD 21r0Ds42        7199 	ld	iy,#_buf
   2209 3E 00              7200 	ld	a,#0x00
   220B FD 9E 00           7201 	sbc	a,0 (iy)
   220E 21r0Ds42           7202 	ld	hl,#_buf + 0
   2211 77                 7203 	ld	(hl), a
   2212 FD 21r0Ds42        7204 	ld	iy,#_buf
   2216 3E 00              7205 	ld	a,#0x00
   2218 FD 9E 01           7206 	sbc	a,1 (iy)
   221B 21r0Es42           7207 	ld	hl,#_buf + 1
   221E 77                 7208 	ld	(hl), a
                           7209 ;demo.c:965: ffa+=8;
   221F 21r0Fs42           7210 	ld	hl,#_ffa
   2222 7E                 7211 	ld	a,(hl)
   2223 C6 08              7212 	add	a,#0x08
   2225 23                 7213 	inc	hl
   2226 2B                 7214 	dec	hl
   2227 C5                 7215 	push	bc
   2228 4F                 7216 	ld	c, a
   2229 23                 7217 	inc	hl
   222A 7E                 7218 	ld	a, (hl)
   222B 47                 7219 	ld	b, a
   222C 79                 7220 	ld	a, c
   222D 2B                 7221 	dec	hl
   222E 77                 7222 	ld	(hl), a
   222F 78                 7223 	ld	a, b
   2230 C1                 7224 	pop	bc
   2231 CE 00              7225 	adc	a,#0x00
   2233 23                 7226 	inc	hl
   2234 77                 7227 	ld	(hl),a
   2235 DD F9              7228 	ld	sp,ix
   2237 DD E1              7229 	pop	ix
   2239 C9                 7230 	ret
   223A                    7231 _thewave_end::
                           7232 ;demo.c:971: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           7233 ;	---------------------------------
                           7234 ; Function drawtritile
                           7235 ; ---------------------------------
   223A                    7236 _drawtritile_start::
   223A                    7237 _drawtritile:
   223A DD E5              7238 	push	ix
   223C DD 21 00 00        7239 	ld	ix,#0
   2240 DD 39              7240 	add	ix,sp
                           7241 ;demo.c:972: cmd.source_x = tx;
   2242 DD 4E 04           7242 	ld	c,4 (ix)
   2245 06 00              7243 	ld	b,#0x00
   2247 21r2As41           7244 	ld	hl,#_cmd
   224A 71                 7245 	ld	(hl),c
   224B 23                 7246 	inc	hl
   224C 70                 7247 	ld	(hl),b
                           7248 ;demo.c:973: cmd.source_y = ty-1;
   224D 01r2Cs41           7249 	ld	bc,#_cmd + 2
   2250 DD 5E 05           7250 	ld	e,5 (ix)
   2253 DD 56 06           7251 	ld	d,6 (ix)
   2256 1B                 7252 	dec	de
   2257 69                 7253 	ld	l,c
   2258 60                 7254 	ld	h,b
   2259 73                 7255 	ld	(hl),e
   225A 23                 7256 	inc	hl
   225B 72                 7257 	ld	(hl),d
                           7258 ;demo.c:974: cmd.dest_x = x;
   225C 01r2Es41           7259 	ld	bc,#_cmd + 4
   225F DD 5E 07           7260 	ld	e,7 (ix)
   2262 16 00              7261 	ld	d,#0x00
   2264 69                 7262 	ld	l,c
   2265 60                 7263 	ld	h,b
   2266 73                 7264 	ld	(hl),e
   2267 23                 7265 	inc	hl
   2268 72                 7266 	ld	(hl),d
                           7267 ;demo.c:975: cmd.dest_y = y;
   2269 01r30s41           7268 	ld	bc,#_cmd + 6
   226C DD 5E 08           7269 	ld	e,8 (ix)
   226F 16 00              7270 	ld	d,#0x00
   2271 69                 7271 	ld	l,c
   2272 60                 7272 	ld	h,b
   2273 73                 7273 	ld	(hl),e
   2274 23                 7274 	inc	hl
   2275 72                 7275 	ld	(hl),d
                           7276 ;demo.c:976: cmd.size_x = 16;
   2276 21r32s41           7277 	ld	hl, #_cmd + 8
   2279 36 10              7278 	ld	(hl),#0x10
   227B 23                 7279 	inc	hl
   227C 36 00              7280 	ld	(hl),#0x00
                           7281 ;demo.c:977: cmd.size_y = 16;
   227E 21r34s41           7282 	ld	hl, #_cmd + 10
   2281 36 10              7283 	ld	(hl),#0x10
   2283 23                 7284 	inc	hl
   2284 36 00              7285 	ld	(hl),#0x00
                           7286 ;demo.c:978: cmd.data = 0;
                           7287 ;demo.c:979: cmd.argument = 0x00;
   2286 3E 00              7288 	ld	a,#0x00
   2288 32r36s41           7289 	ld	(#_cmd + 12),a
   228B 32r37s41           7290 	ld	(#_cmd + 13),a
                           7291 ;demo.c:980: cmd.command = 0xd0; // HMMM
   228E 3E D0              7292 	ld	a,#0xD0
   2290 32r38s41           7293 	ld	(#_cmd + 14),a
                           7294 ;demo.c:981: vdp_copier(&cmd);
   2293 21r2As41           7295 	ld	hl,#_cmd
   2296 E5                 7296 	push	hl
   2297 CDr00s00           7297 	call	_vdp_copier
   229A F1                 7298 	pop	af
   229B DD E1              7299 	pop	ix
   229D C9                 7300 	ret
   229E                    7301 _drawtritile_end::
                           7302 ;demo.c:988: void drawtilescreen(char* tripic) {
                           7303 ;	---------------------------------
                           7304 ; Function drawtilescreen
                           7305 ; ---------------------------------
   229E                    7306 _drawtilescreen_start::
   229E                    7307 _drawtilescreen:
   229E DD E5              7308 	push	ix
   22A0 DD 21 00 00        7309 	ld	ix,#0
   22A4 DD 39              7310 	add	ix,sp
   22A6 F5                 7311 	push	af
   22A7 3B                 7312 	dec	sp
                           7313 ;demo.c:990: if(tilei >= 192) return;
   22A8 3Ar12s42           7314 	ld	a,(#_tilei+0)
   22AB D6 C0              7315 	sub	a,#0xC0
   22AD 3Ar13s42           7316 	ld	a,(#_tilei+1)
   22B0 DE 00              7317 	sbc	a,#0x00
   22B2 FArB8s22           7318 	jp	M,00102$
   22B5 C3r83s23           7319 	jp	00112$
   22B8                    7320 00102$:
                           7321 ;demo.c:992: tiletick++;
   22B8 FD 21r18s42        7322 	ld	iy,#_tiletick
   22BC FD 34 00           7323 	inc	0 (iy)
                           7324 ;demo.c:993: if (tiletick > 6) { tiletick = 0;}
   22BF 3E 06              7325 	ld	a,#0x06
   22C1 FD 21r18s42        7326 	ld	iy,#_tiletick
   22C5 FD 96 00           7327 	sub	a,0 (iy)
   22C8 30 0A              7328 	jr	NC,00104$
   22CA FD 21r18s42        7329 	ld	iy,#_tiletick
   22CE FD 36 00 00        7330 	ld	0 (iy),#0x00
   22D2 18 03              7331 	jr	00118$
   22D4                    7332 00104$:
                           7333 ;demo.c:994: else return;
   22D4 C3r83s23           7334 	jp	00112$
                           7335 ;demo.c:995: for (i=0;i<20;i++) {
   22D7                    7336 00118$:
   22D7 DD 36 FF 00        7337 	ld	-1 (ix),#0x00
   22DB                    7338 00108$:
   22DB DD 7E FF           7339 	ld	a,-1 (ix)
   22DE D6 14              7340 	sub	a,#0x14
   22E0 D2r83s23           7341 	jp	NC,00112$
                           7342 ;demo.c:996: drawtritile(tri_lookup_x[tripic[tilei]],tri_lookup_y[tripic[tilei]],tilex,tiley);
   22E3 3Ar16s42           7343 	ld	a,(#_tiley+0)
   22E6 DD 77 FD           7344 	ld	-3 (ix),a
   22E9 3Ar14s42           7345 	ld	a,(#_tilex+0)
   22EC DD 77 FE           7346 	ld	-2 (ix),a
   22EF 21r12s42           7347 	ld	hl,#_tilei
   22F2 DD 7E 04           7348 	ld	a,4 (ix)
   22F5 86                 7349 	add	a,(hl)
   22F6 57                 7350 	ld	d,a
   22F7 DD 7E 05           7351 	ld	a,5 (ix)
   22FA 23                 7352 	inc	hl
   22FB 8E                 7353 	adc	a,(hl)
   22FC 6A                 7354 	ld	l,d
   22FD 67                 7355 	ld	h,a
   22FE 56                 7356 	ld	d,(hl)
   22FF 7A                 7357 	ld	a,d
   2300 87                 7358 	add	a,a
   2301 C6r88              7359 	add	a,#<_tri_lookup_y
   2303 6F                 7360 	ld	l,a
   2304 3Es01              7361 	ld	a,#>_tri_lookup_y
   2306 CE 00              7362 	adc	a,#0x00
   2308 67                 7363 	ld	h,a
   2309 4E                 7364 	ld	c,(hl)
   230A 23                 7365 	inc	hl
   230B 5E                 7366 	ld	e,(hl)
   230C 3Er00              7367 	ld	a,#<_tri_lookup_x
   230E 82                 7368 	add	a,d
   230F 6F                 7369 	ld	l,a
   2310 3Es01              7370 	ld	a,#>_tri_lookup_x
   2312 CE 00              7371 	adc	a,#0x00
   2314 67                 7372 	ld	h,a
   2315 56                 7373 	ld	d,(hl)
   2316 DD 66 FD           7374 	ld	h,-3 (ix)
   2319 DD 6E FE           7375 	ld	l,-2 (ix)
   231C E5                 7376 	push	hl
   231D 69                 7377 	ld	l,c
   231E 63                 7378 	ld	h,e
   231F E5                 7379 	push	hl
   2320 D5                 7380 	push	de
   2321 33                 7381 	inc	sp
   2322 CDr3As22           7382 	call	_drawtritile
   2325 F1                 7383 	pop	af
   2326 F1                 7384 	pop	af
   2327 33                 7385 	inc	sp
                           7386 ;demo.c:997: tilex+=16;
   2328 21r14s42           7387 	ld	hl,#_tilex
   232B 7E                 7388 	ld	a,(hl)
   232C C6 10              7389 	add	a,#0x10
   232E 23                 7390 	inc	hl
   232F 2B                 7391 	dec	hl
   2330 C5                 7392 	push	bc
   2331 4F                 7393 	ld	c, a
   2332 23                 7394 	inc	hl
   2333 7E                 7395 	ld	a, (hl)
   2334 47                 7396 	ld	b, a
   2335 79                 7397 	ld	a, c
   2336 2B                 7398 	dec	hl
   2337 77                 7399 	ld	(hl), a
   2338 78                 7400 	ld	a, b
   2339 C1                 7401 	pop	bc
   233A CE 00              7402 	adc	a,#0x00
   233C 23                 7403 	inc	hl
   233D 77                 7404 	ld	(hl),a
                           7405 ;demo.c:998: tilei++;
   233E FD 21r12s42        7406 	ld	iy,#_tilei
   2342 FD 34 00           7407 	inc	0 (iy)
   2345 20 07              7408 	jr	NZ,00119$
   2347 FD 21r12s42        7409 	ld	iy,#_tilei
   234B FD 34 01           7410 	inc	1 (iy)
   234E                    7411 00119$:
                           7412 ;demo.c:999: if (tilex >= 256) {tilex = 0; tiley+=16; return; }
   234E 3Ar14s42           7413 	ld	a,(#_tilex+0)
   2351 D6 00              7414 	sub	a,#0x00
   2353 3Ar15s42           7415 	ld	a,(#_tilex+1)
   2356 DE 01              7416 	sbc	a,#0x01
   2358 FAr7Ds23           7417 	jp	M,00110$
   235B 21r14s42           7418 	ld	hl,#_tilex + 0
   235E 36 00              7419 	ld	(hl), #0x00
   2360 21r15s42           7420 	ld	hl,#_tilex + 1
   2363 36 00              7421 	ld	(hl), #0x00
   2365 21r16s42           7422 	ld	hl,#_tiley
   2368 7E                 7423 	ld	a,(hl)
   2369 C6 10              7424 	add	a,#0x10
   236B 23                 7425 	inc	hl
   236C 2B                 7426 	dec	hl
   236D C5                 7427 	push	bc
   236E 4F                 7428 	ld	c, a
   236F 23                 7429 	inc	hl
   2370 7E                 7430 	ld	a, (hl)
   2371 47                 7431 	ld	b, a
   2372 79                 7432 	ld	a, c
   2373 2B                 7433 	dec	hl
   2374 77                 7434 	ld	(hl), a
   2375 78                 7435 	ld	a, b
   2376 C1                 7436 	pop	bc
   2377 CE 00              7437 	adc	a,#0x00
   2379 23                 7438 	inc	hl
   237A 77                 7439 	ld	(hl),a
   237B 18 06              7440 	jr	00112$
   237D                    7441 00110$:
                           7442 ;demo.c:995: for (i=0;i<20;i++) {
   237D DD 34 FF           7443 	inc	-1 (ix)
   2380 C3rDBs22           7444 	jp	00108$
   2383                    7445 00112$:
   2383 DD F9              7446 	ld	sp,ix
   2385 DD E1              7447 	pop	ix
   2387 C9                 7448 	ret
   2388                    7449 _drawtilescreen_end::
                           7450 ;demo.c:1004: void drawtilescreen_full(char* tripic) {
                           7451 ;	---------------------------------
                           7452 ; Function drawtilescreen_full
                           7453 ; ---------------------------------
   2388                    7454 _drawtilescreen_full_start::
   2388                    7455 _drawtilescreen_full:
   2388 DD E5              7456 	push	ix
   238A DD 21 00 00        7457 	ld	ix,#0
   238E DD 39              7458 	add	ix,sp
   2390 21 F8 FF           7459 	ld	hl,#-8
   2393 39                 7460 	add	hl,sp
   2394 F9                 7461 	ld	sp,hl
                           7462 ;demo.c:1005: int x = 0;
   2395 DD 36 FE 00        7463 	ld	-2 (ix),#0x00
   2399 DD 36 FF 00        7464 	ld	-1 (ix),#0x00
                           7465 ;demo.c:1008: while(i < 192) {
   239D DD 36 FC 00        7466 	ld	-4 (ix),#0x00
   23A1 DD 36 FD 00        7467 	ld	-3 (ix),#0x00
   23A5 DD 36 FA 00        7468 	ld	-6 (ix),#0x00
   23A9 DD 36 FB 00        7469 	ld	-5 (ix),#0x00
   23AD                    7470 00103$:
   23AD DD 7E FA           7471 	ld	a,-6 (ix)
   23B0 D6 C0              7472 	sub	a,#0xC0
   23B2 DD 7E FB           7473 	ld	a,-5 (ix)
   23B5 DE 00              7474 	sbc	a,#0x00
   23B7 F2r3Es24           7475 	jp	P,00106$
                           7476 ;demo.c:1009: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   23BA DD 7E FC           7477 	ld	a,-4 (ix)
   23BD DD 77 F8           7478 	ld	-8 (ix),a
   23C0 DD 7E FE           7479 	ld	a,-2 (ix)
   23C3 DD 77 F9           7480 	ld	-7 (ix),a
   23C6 DD 7E 04           7481 	ld	a,4 (ix)
   23C9 DD 86 FA           7482 	add	a,-6 (ix)
   23CC 4F                 7483 	ld	c,a
   23CD DD 7E 05           7484 	ld	a,5 (ix)
   23D0 DD 8E FB           7485 	adc	a,-5 (ix)
   23D3 47                 7486 	ld	b,a
   23D4 0A                 7487 	ld	a,(bc)
   23D5 4F                 7488 	ld	c,a
   23D6 87                 7489 	add	a,a
   23D7 C6r88              7490 	add	a,#<_tri_lookup_y
   23D9 6F                 7491 	ld	l,a
   23DA 3Es01              7492 	ld	a,#>_tri_lookup_y
   23DC CE 00              7493 	adc	a,#0x00
   23DE 67                 7494 	ld	h,a
   23DF 46                 7495 	ld	b,(hl)
   23E0 23                 7496 	inc	hl
   23E1 56                 7497 	ld	d,(hl)
   23E2 3Er00              7498 	ld	a,#<_tri_lookup_x
   23E4 81                 7499 	add	a,c
   23E5 6F                 7500 	ld	l,a
   23E6 3Es01              7501 	ld	a,#>_tri_lookup_x
   23E8 CE 00              7502 	adc	a,#0x00
   23EA 67                 7503 	ld	h,a
   23EB 4E                 7504 	ld	c,(hl)
   23EC DD 66 F8           7505 	ld	h,-8 (ix)
   23EF DD 6E F9           7506 	ld	l,-7 (ix)
   23F2 E5                 7507 	push	hl
   23F3 58                 7508 	ld	e,b
   23F4 D5                 7509 	push	de
   23F5 79                 7510 	ld	a,c
   23F6 F5                 7511 	push	af
   23F7 33                 7512 	inc	sp
   23F8 CDr3As22           7513 	call	_drawtritile
   23FB F1                 7514 	pop	af
   23FC F1                 7515 	pop	af
   23FD 33                 7516 	inc	sp
                           7517 ;demo.c:1010: x+=16;
   23FE DD 7E FE           7518 	ld	a,-2 (ix)
   2401 C6 10              7519 	add	a,#0x10
   2403 DD 77 FE           7520 	ld	-2 (ix),a
   2406 DD 7E FF           7521 	ld	a,-1 (ix)
   2409 CE 00              7522 	adc	a,#0x00
   240B DD 77 FF           7523 	ld	-1 (ix),a
                           7524 ;demo.c:1011: if (x >= 256) {x = 0; y+=16;}
   240E DD 7E FE           7525 	ld	a,-2 (ix)
   2411 D6 00              7526 	sub	a,#0x00
   2413 DD 7E FF           7527 	ld	a,-1 (ix)
   2416 DE 01              7528 	sbc	a,#0x01
   2418 FAr33s24           7529 	jp	M,00102$
   241B DD 36 FE 00        7530 	ld	-2 (ix),#0x00
   241F DD 36 FF 00        7531 	ld	-1 (ix),#0x00
   2423 DD 7E FC           7532 	ld	a,-4 (ix)
   2426 C6 10              7533 	add	a,#0x10
   2428 DD 77 FC           7534 	ld	-4 (ix),a
   242B DD 7E FD           7535 	ld	a,-3 (ix)
   242E CE 00              7536 	adc	a,#0x00
   2430 DD 77 FD           7537 	ld	-3 (ix),a
   2433                    7538 00102$:
                           7539 ;demo.c:1012: i++;
   2433 DD 34 FA           7540 	inc	-6 (ix)
   2436 20 03              7541 	jr	NZ,00112$
   2438 DD 34 FB           7542 	inc	-5 (ix)
   243B                    7543 00112$:
   243B C3rADs23           7544 	jp	00103$
   243E                    7545 00106$:
   243E DD F9              7546 	ld	sp,ix
   2440 DD E1              7547 	pop	ix
   2442 C9                 7548 	ret
   2443                    7549 _drawtilescreen_full_end::
                           7550 ;demo.c:1028: void tritiles() {
                           7551 ;	---------------------------------
                           7552 ; Function tritiles
                           7553 ; ---------------------------------
   2443                    7554 _tritiles_start::
   2443                    7555 _tritiles:
   2443 DD E5              7556 	push	ix
   2445 DD 21 00 00        7557 	ld	ix,#0
   2449 DD 39              7558 	add	ix,sp
   244B 21 FB FF           7559 	ld	hl,#-5
   244E 39                 7560 	add	hl,sp
   244F F9                 7561 	ld	sp,hl
                           7562 ;demo.c:1035: if (tri_inited == 0 || tri_inited == 2) {
   2450 AF                 7563 	xor	a,a
   2451 FD 21r11s42        7564 	ld	iy,#_tri_inited
   2455 FD B6 00           7565 	or	a,0 (iy)
   2458 28 0C              7566 	jr	Z,00109$
   245A FD 21r11s42        7567 	ld	iy,#_tri_inited
   245E FD 7E 00           7568 	ld	a,0 (iy)
   2461 D6 02              7569 	sub	a,#0x02
   2463 C2r6Fs25           7570 	jp	NZ,00110$
   2466                    7571 00109$:
                           7572 ;demo.c:1037: cmd.size_x = 2;
   2466 21r32s41           7573 	ld	hl, #_cmd + 8
   2469 36 02              7574 	ld	(hl),#0x02
   246B 23                 7575 	inc	hl
   246C 36 00              7576 	ld	(hl),#0x00
                           7577 ;demo.c:1038: cmd.size_y = 212;
   246E 21r34s41           7578 	ld	hl, #_cmd + 10
   2471 36 D4              7579 	ld	(hl),#0xD4
   2473 23                 7580 	inc	hl
   2474 36 00              7581 	ld	(hl),#0x00
                           7582 ;demo.c:1039: cmd.data = 0;
                           7583 ;demo.c:1040: cmd.argument = 0x00; // from 70xY to left
   2476 3E 00              7584 	ld	a,#0x00
   2478 32r36s41           7585 	ld	(#_cmd + 12),a
   247B 32r37s41           7586 	ld	(#_cmd + 13),a
                           7587 ;demo.c:1041: cmd.command = 0xd0; // vram to vram, y only
   247E 01r38s41           7588 	ld	bc,#_cmd + 14
   2481 3E D0              7589 	ld	a,#0xD0
   2483 02                 7590 	ld	(bc),a
                           7591 ;demo.c:1042: cmd.source_x = 255;
   2484 21r2As41           7592 	ld	hl,#_cmd
   2487 36 FF              7593 	ld	(hl),#0xFF
   2489 23                 7594 	inc	hl
   248A 36 00              7595 	ld	(hl),#0x00
                           7596 ;demo.c:1043: cmd.source_y = 0;
   248C 21r2Cs41           7597 	ld	hl, #_cmd + 2
   248F 36 00              7598 	ld	(hl),#0x00
   2491 23                 7599 	inc	hl
   2492 36 00              7600 	ld	(hl),#0x00
                           7601 ;demo.c:1045: for (x = 0; x < 256; x+=2) {
   2494 01 00 00           7602 	ld	bc,#0x0000
   2497                    7603 00170$:
   2497 79                 7604 	ld	a,c
   2498 D6 00              7605 	sub	a,#0x00
   249A 78                 7606 	ld	a,b
   249B DE 01              7607 	sbc	a,#0x01
   249D F2rD2s24           7608 	jp	P,00173$
                           7609 ;demo.c:1046: waitVB();
   24A0 76                 7610 		halt 
                           7611 ;demo.c:1047: cmd.dest_y = 256;
   24A1 11r30s41           7612 	ld	de,#_cmd + 6
   24A4 EB                 7613 	ex	de,hl
   24A5 36 00              7614 	ld	(hl),#0x00
   24A7 23                 7615 	inc	hl
   24A8 36 01              7616 	ld	(hl),#0x01
                           7617 ;demo.c:1048: cmd.dest_x = x;
   24AA 11r2Es41           7618 	ld	de,#_cmd + 4
   24AD EB                 7619 	ex	de,hl
   24AE 71                 7620 	ld	(hl),c
   24AF 23                 7621 	inc	hl
   24B0 70                 7622 	ld	(hl),b
                           7623 ;demo.c:1049: vdp_copier(&cmd);
   24B1 C5                 7624 	push	bc
   24B2 21r2As41           7625 	ld	hl,#_cmd
   24B5 E5                 7626 	push	hl
   24B6 CDr00s00           7627 	call	_vdp_copier
   24B9 F1                 7628 	pop	af
   24BA C1                 7629 	pop	bc
                           7630 ;demo.c:1050: cmd.dest_y = 0;
   24BB 11r30s41           7631 	ld	de,#_cmd + 6
   24BE EB                 7632 	ex	de,hl
   24BF 36 00              7633 	ld	(hl),#0x00
   24C1 23                 7634 	inc	hl
   24C2 36 00              7635 	ld	(hl),#0x00
                           7636 ;demo.c:1051: vdp_copier(&cmd);
   24C4 C5                 7637 	push	bc
   24C5 21r2As41           7638 	ld	hl,#_cmd
   24C8 E5                 7639 	push	hl
   24C9 CDr00s00           7640 	call	_vdp_copier
   24CC F1                 7641 	pop	af
   24CD C1                 7642 	pop	bc
                           7643 ;demo.c:1045: for (x = 0; x < 256; x+=2) {
   24CE 03                 7644 	inc	bc
   24CF 03                 7645 	inc	bc
   24D0 18 C5              7646 	jr	00170$
   24D2                    7647 00173$:
                           7648 ;demo.c:1054: if (tri_inited == 0) vdp_load_palette(boxes_palette);
   24D2 AF                 7649 	xor	a,a
   24D3 21r11s42           7650 	ld	hl,#_tri_inited + 0
   24D6 B6                 7651 	or	a,(hl)
   24D7 20 0A              7652 	jr	NZ,00104$
   24D9 21rE6s40           7653 	ld	hl,#_boxes_palette
   24DC E5                 7654 	push	hl
   24DD CDr00s00           7655 	call	_vdp_load_palette
   24E0 F1                 7656 	pop	af
   24E1 18 46              7657 	jr	00105$
   24E3                    7658 00104$:
                           7659 ;demo.c:1055: else if (tri_inited == 2) { 
   24E3 3Ar11s42           7660 	ld	a,(#_tri_inited+0)
   24E6 D6 02              7661 	sub	a,#0x02
   24E8 20 3F              7662 	jr	NZ,00105$
                           7663 ;demo.c:1056: vdp_load_palette(boxes_palette); 
   24EA 21rE6s40           7664 	ld	hl,#_boxes_palette
   24ED E5                 7665 	push	hl
   24EE CDr00s00           7666 	call	_vdp_load_palette
   24F1 F1                 7667 	pop	af
                           7668 ;demo.c:1057: triframes = 0; 
   24F2 21r24s42           7669 	ld	hl,#_triframes + 0
   24F5 36 00              7670 	ld	(hl), #0x00
   24F7 21r25s42           7671 	ld	hl,#_triframes + 1
   24FA 36 00              7672 	ld	(hl), #0x00
                           7673 ;demo.c:1059: tripal[0] = 4;
   24FC 21r19s42           7674 	ld	hl,#_tripal
   24FF 36 04              7675 	ld	(hl),#0x04
                           7676 ;demo.c:1060: tripal[1] = 4;
   2501 3E 04              7677 	ld	a,#0x04
   2503 32r1As42           7678 	ld	(#_tripal + 1),a
                           7679 ;demo.c:1061: tripal[2] = 3;
   2506 3E 03              7680 	ld	a,#0x03
   2508 32r1Bs42           7681 	ld	(#_tripal + 2),a
                           7682 ;demo.c:1063: tripal[3] = 2;
   250B 3E 02              7683 	ld	a,#0x02
   250D 32r1Cs42           7684 	ld	(#_tripal + 3),a
                           7685 ;demo.c:1064: tripal[4] = 3;
   2510 3E 03              7686 	ld	a,#0x03
   2512 32r1Ds42           7687 	ld	(#_tripal + 4),a
                           7688 ;demo.c:1065: tripal[5] = 4;
   2515 3E 04              7689 	ld	a,#0x04
   2517 32r1Es42           7690 	ld	(#_tripal + 5),a
                           7691 ;demo.c:1067: tripal[6] = 1;
   251A 3E 01              7692 	ld	a,#0x01
   251C 32r1Fs42           7693 	ld	(#_tripal + 6),a
                           7694 ;demo.c:1068: tripal[7] = 3;
   251F 3E 03              7695 	ld	a,#0x03
   2521 32r20s42           7696 	ld	(#_tripal + 7),a
                           7697 ;demo.c:1069: tripal[8] = 1;
   2524 3E 01              7698 	ld	a,#0x01
   2526 32r21s42           7699 	ld	(#_tripal + 8),a
   2529                    7700 00105$:
                           7701 ;demo.c:1071: tri_inited++;
   2529 FD 21r11s42        7702 	ld	iy,#_tri_inited
   252D FD 34 00           7703 	inc	0 (iy)
                           7704 ;demo.c:1072: vdp_register(9,2); // 50hz,192
   2530 21 09 02           7705 	ld	hl,#0x0209
   2533 E5                 7706 	push	hl
   2534 CDr00s00           7707 	call	_vdp_register
   2537 F1                 7708 	pop	af
                           7709 ;demo.c:1074: msx2_palette(15,0,0,0);
   2538 21 00 00           7710 	ld	hl,#0x0000
   253B E5                 7711 	push	hl
   253C 2E 0F              7712 	ld	l, #0x0F
   253E E5                 7713 	push	hl
   253F CDr00s00           7714 	call	_msx2_palette
   2542 F1                 7715 	pop	af
   2543 F1                 7716 	pop	af
                           7717 ;demo.c:1076: if (tri_inited == 1) drawtilescreen_full(tri_center);
   2544 3Ar11s42           7718 	ld	a,(#_tri_inited+0)
   2547 D6 01              7719 	sub	a,#0x01
   2549 20 0A              7720 	jr	NZ,00107$
   254B 21r2Cs01           7721 	ld	hl,#_tri_center
   254E E5                 7722 	push	hl
   254F CDr88s23           7723 	call	_drawtilescreen_full
   2552 F1                 7724 	pop	af
   2553 18 08              7725 	jr	00108$
   2555                    7726 00107$:
                           7727 ;demo.c:1077: else drawtilescreen_full(tri_inva2);
   2555 21rACs05           7728 	ld	hl,#_tri_inva2
   2558 E5                 7729 	push	hl
   2559 CDr88s23           7730 	call	_drawtilescreen_full
   255C F1                 7731 	pop	af
   255D                    7732 00108$:
                           7733 ;demo.c:1078: vdp_register(2, 0x1f);
   255D 21 02 1F           7734 	ld	hl,#0x1F02
   2560 E5                 7735 	push	hl
   2561 CDr00s00           7736 	call	_vdp_register
   2564 F1                 7737 	pop	af
                           7738 ;demo.c:1079: tick = 0;
   2565 21r28s41           7739 	ld	hl,#_tick + 0
   2568 36 00              7740 	ld	(hl), #0x00
   256A 21r29s41           7741 	ld	hl,#_tick + 1
   256D 36 00              7742 	ld	(hl), #0x00
   256F                    7743 00110$:
                           7744 ;demo.c:1083: if (tri_inited == 1) triframes++;
   256F 3Ar11s42           7745 	ld	a,(#_tri_inited+0)
   2572 D6 01              7746 	sub	a,#0x01
   2574 20 10              7747 	jr	NZ,00113$
   2576 FD 21r24s42        7748 	ld	iy,#_triframes
   257A FD 34 00           7749 	inc	0 (iy)
   257D 20 07              7750 	jr	NZ,00231$
   257F FD 21r24s42        7751 	ld	iy,#_triframes
   2583 FD 34 01           7752 	inc	1 (iy)
   2586                    7753 00231$:
   2586                    7754 00113$:
                           7755 ;demo.c:1085: if (triframes == 150) { tilei = 0; tilex = 0; tiley = 0; }
   2586 3Ar24s42           7756 	ld	a,(#_triframes+0)
   2589 D6 96              7757 	sub	a,#0x96
   258B 20 06              7758 	jr	NZ,00232$
   258D 3Ar25s42           7759 	ld	a,(#_triframes+1)
   2590 B7                 7760 	or	a,a
   2591 28 02              7761 	jr	Z,00233$
   2593                    7762 00232$:
   2593 18 1E              7763 	jr	00115$
   2595                    7764 00233$:
   2595 21r12s42           7765 	ld	hl,#_tilei + 0
   2598 36 00              7766 	ld	(hl), #0x00
   259A 21r13s42           7767 	ld	hl,#_tilei + 1
   259D 36 00              7768 	ld	(hl), #0x00
   259F 21r14s42           7769 	ld	hl,#_tilex + 0
   25A2 36 00              7770 	ld	(hl), #0x00
   25A4 21r15s42           7771 	ld	hl,#_tilex + 1
   25A7 36 00              7772 	ld	(hl), #0x00
   25A9 21r16s42           7773 	ld	hl,#_tiley + 0
   25AC 36 00              7774 	ld	(hl), #0x00
   25AE 21r17s42           7775 	ld	hl,#_tiley + 1
   25B1 36 00              7776 	ld	(hl), #0x00
   25B3                    7777 00115$:
                           7778 ;demo.c:1086: if (triframes >= 150 && triframes < 300) {
   25B3 3Ar24s42           7779 	ld	a,(#_triframes+0)
   25B6 D6 96              7780 	sub	a,#0x96
   25B8 3Ar25s42           7781 	ld	a,(#_triframes+1)
   25BB DE 00              7782 	sbc	a,#0x00
   25BD FArD5s25           7783 	jp	M,00117$
   25C0 3Ar24s42           7784 	ld	a,(#_triframes+0)
   25C3 D6 2C              7785 	sub	a,#0x2C
   25C5 3Ar25s42           7786 	ld	a,(#_triframes+1)
   25C8 DE 01              7787 	sbc	a,#0x01
   25CA F2rD5s25           7788 	jp	P,00117$
                           7789 ;demo.c:1087: drawtilescreen(tri_up);
   25CD 21rECs01           7790 	ld	hl,#_tri_up
   25D0 E5                 7791 	push	hl
   25D1 CDr9Es22           7792 	call	_drawtilescreen
   25D4 F1                 7793 	pop	af
   25D5                    7794 00117$:
                           7795 ;demo.c:1090: if (triframes == 300) { tilei = 0; tilex = 0; tiley = 0; }
   25D5 3Ar24s42           7796 	ld	a,(#_triframes+0)
   25D8 D6 2C              7797 	sub	a,#0x2C
   25DA 20 07              7798 	jr	NZ,00234$
   25DC 3Ar25s42           7799 	ld	a,(#_triframes+1)
   25DF D6 01              7800 	sub	a,#0x01
   25E1 28 02              7801 	jr	Z,00235$
   25E3                    7802 00234$:
   25E3 18 1E              7803 	jr	00120$
   25E5                    7804 00235$:
   25E5 21r12s42           7805 	ld	hl,#_tilei + 0
   25E8 36 00              7806 	ld	(hl), #0x00
   25EA 21r13s42           7807 	ld	hl,#_tilei + 1
   25ED 36 00              7808 	ld	(hl), #0x00
   25EF 21r14s42           7809 	ld	hl,#_tilex + 0
   25F2 36 00              7810 	ld	(hl), #0x00
   25F4 21r15s42           7811 	ld	hl,#_tilex + 1
   25F7 36 00              7812 	ld	(hl), #0x00
   25F9 21r16s42           7813 	ld	hl,#_tiley + 0
   25FC 36 00              7814 	ld	(hl), #0x00
   25FE 21r17s42           7815 	ld	hl,#_tiley + 1
   2601 36 00              7816 	ld	(hl), #0x00
   2603                    7817 00120$:
                           7818 ;demo.c:1091: if (triframes >= 300 && triframes < 450) {
   2603 3Ar24s42           7819 	ld	a,(#_triframes+0)
   2606 D6 2C              7820 	sub	a,#0x2C
   2608 3Ar25s42           7821 	ld	a,(#_triframes+1)
   260B DE 01              7822 	sbc	a,#0x01
   260D FAr25s26           7823 	jp	M,00122$
   2610 3Ar24s42           7824 	ld	a,(#_triframes+0)
   2613 D6 C2              7825 	sub	a,#0xC2
   2615 3Ar25s42           7826 	ld	a,(#_triframes+1)
   2618 DE 01              7827 	sbc	a,#0x01
   261A F2r25s26           7828 	jp	P,00122$
                           7829 ;demo.c:1092: drawtilescreen(tri_dia);
   261D 21rACs02           7830 	ld	hl,#_tri_dia
   2620 E5                 7831 	push	hl
   2621 CDr9Es22           7832 	call	_drawtilescreen
   2624 F1                 7833 	pop	af
   2625                    7834 00122$:
                           7835 ;demo.c:1095: if (triframes == 450) { tilei = 0; tilex = 0; tiley = 0; }
   2625 3Ar24s42           7836 	ld	a,(#_triframes+0)
   2628 D6 C2              7837 	sub	a,#0xC2
   262A 20 07              7838 	jr	NZ,00236$
   262C 3Ar25s42           7839 	ld	a,(#_triframes+1)
   262F D6 01              7840 	sub	a,#0x01
   2631 28 02              7841 	jr	Z,00237$
   2633                    7842 00236$:
   2633 18 1E              7843 	jr	00125$
   2635                    7844 00237$:
   2635 21r12s42           7845 	ld	hl,#_tilei + 0
   2638 36 00              7846 	ld	(hl), #0x00
   263A 21r13s42           7847 	ld	hl,#_tilei + 1
   263D 36 00              7848 	ld	(hl), #0x00
   263F 21r14s42           7849 	ld	hl,#_tilex + 0
   2642 36 00              7850 	ld	(hl), #0x00
   2644 21r15s42           7851 	ld	hl,#_tilex + 1
   2647 36 00              7852 	ld	(hl), #0x00
   2649 21r16s42           7853 	ld	hl,#_tiley + 0
   264C 36 00              7854 	ld	(hl), #0x00
   264E 21r17s42           7855 	ld	hl,#_tiley + 1
   2651 36 00              7856 	ld	(hl), #0x00
   2653                    7857 00125$:
                           7858 ;demo.c:1096: if (triframes >= 450 && triframes < 600) {
   2653 3Ar24s42           7859 	ld	a,(#_triframes+0)
   2656 D6 C2              7860 	sub	a,#0xC2
   2658 3Ar25s42           7861 	ld	a,(#_triframes+1)
   265B DE 01              7862 	sbc	a,#0x01
   265D FAr75s26           7863 	jp	M,00127$
   2660 3Ar24s42           7864 	ld	a,(#_triframes+0)
   2663 D6 58              7865 	sub	a,#0x58
   2665 3Ar25s42           7866 	ld	a,(#_triframes+1)
   2668 DE 02              7867 	sbc	a,#0x02
   266A F2r75s26           7868 	jp	P,00127$
                           7869 ;demo.c:1097: drawtilescreen(tri_side1);
   266D 21r6Cs03           7870 	ld	hl,#_tri_side1
   2670 E5                 7871 	push	hl
   2671 CDr9Es22           7872 	call	_drawtilescreen
   2674 F1                 7873 	pop	af
   2675                    7874 00127$:
                           7875 ;demo.c:1100: if (triframes == 600) { tilei = 0; tilex = 0; tiley = 0; }
   2675 3Ar24s42           7876 	ld	a,(#_triframes+0)
   2678 D6 58              7877 	sub	a,#0x58
   267A 20 07              7878 	jr	NZ,00238$
   267C 3Ar25s42           7879 	ld	a,(#_triframes+1)
   267F D6 02              7880 	sub	a,#0x02
   2681 28 02              7881 	jr	Z,00239$
   2683                    7882 00238$:
   2683 18 1E              7883 	jr	00130$
   2685                    7884 00239$:
   2685 21r12s42           7885 	ld	hl,#_tilei + 0
   2688 36 00              7886 	ld	(hl), #0x00
   268A 21r13s42           7887 	ld	hl,#_tilei + 1
   268D 36 00              7888 	ld	(hl), #0x00
   268F 21r14s42           7889 	ld	hl,#_tilex + 0
   2692 36 00              7890 	ld	(hl), #0x00
   2694 21r15s42           7891 	ld	hl,#_tilex + 1
   2697 36 00              7892 	ld	(hl), #0x00
   2699 21r16s42           7893 	ld	hl,#_tiley + 0
   269C 36 00              7894 	ld	(hl), #0x00
   269E 21r17s42           7895 	ld	hl,#_tiley + 1
   26A1 36 00              7896 	ld	(hl), #0x00
   26A3                    7897 00130$:
                           7898 ;demo.c:1101: if (triframes >= 600 && triframes < 750) {
   26A3 3Ar24s42           7899 	ld	a,(#_triframes+0)
   26A6 D6 58              7900 	sub	a,#0x58
   26A8 3Ar25s42           7901 	ld	a,(#_triframes+1)
   26AB DE 02              7902 	sbc	a,#0x02
   26AD FArC5s26           7903 	jp	M,00132$
   26B0 3Ar24s42           7904 	ld	a,(#_triframes+0)
   26B3 D6 EE              7905 	sub	a,#0xEE
   26B5 3Ar25s42           7906 	ld	a,(#_triframes+1)
   26B8 DE 02              7907 	sbc	a,#0x02
   26BA F2rC5s26           7908 	jp	P,00132$
                           7909 ;demo.c:1102: drawtilescreen(tri_side2);
   26BD 21r2Cs04           7910 	ld	hl,#_tri_side2
   26C0 E5                 7911 	push	hl
   26C1 CDr9Es22           7912 	call	_drawtilescreen
   26C4 F1                 7913 	pop	af
   26C5                    7914 00132$:
                           7915 ;demo.c:1105: if (triframes == 750) { tilei = 0; tilex = 0; tiley = 0; }
   26C5 3Ar24s42           7916 	ld	a,(#_triframes+0)
   26C8 D6 EE              7917 	sub	a,#0xEE
   26CA 20 07              7918 	jr	NZ,00240$
   26CC 3Ar25s42           7919 	ld	a,(#_triframes+1)
   26CF D6 02              7920 	sub	a,#0x02
   26D1 28 02              7921 	jr	Z,00241$
   26D3                    7922 00240$:
   26D3 18 1E              7923 	jr	00135$
   26D5                    7924 00241$:
   26D5 21r12s42           7925 	ld	hl,#_tilei + 0
   26D8 36 00              7926 	ld	(hl), #0x00
   26DA 21r13s42           7927 	ld	hl,#_tilei + 1
   26DD 36 00              7928 	ld	(hl), #0x00
   26DF 21r14s42           7929 	ld	hl,#_tilex + 0
   26E2 36 00              7930 	ld	(hl), #0x00
   26E4 21r15s42           7931 	ld	hl,#_tilex + 1
   26E7 36 00              7932 	ld	(hl), #0x00
   26E9 21r16s42           7933 	ld	hl,#_tiley + 0
   26EC 36 00              7934 	ld	(hl), #0x00
   26EE 21r17s42           7935 	ld	hl,#_tiley + 1
   26F1 36 00              7936 	ld	(hl), #0x00
   26F3                    7937 00135$:
                           7938 ;demo.c:1106: if (triframes >= 750 && triframes < 900) {
   26F3 3Ar24s42           7939 	ld	a,(#_triframes+0)
   26F6 D6 EE              7940 	sub	a,#0xEE
   26F8 3Ar25s42           7941 	ld	a,(#_triframes+1)
   26FB DE 02              7942 	sbc	a,#0x02
   26FD FAr15s27           7943 	jp	M,00137$
   2700 3Ar24s42           7944 	ld	a,(#_triframes+0)
   2703 D6 84              7945 	sub	a,#0x84
   2705 3Ar25s42           7946 	ld	a,(#_triframes+1)
   2708 DE 03              7947 	sbc	a,#0x03
   270A F2r15s27           7948 	jp	P,00137$
                           7949 ;demo.c:1107: drawtilescreen(tri_inva1);
   270D 21rECs04           7950 	ld	hl,#_tri_inva1
   2710 E5                 7951 	push	hl
   2711 CDr9Es22           7952 	call	_drawtilescreen
   2714 F1                 7953 	pop	af
   2715                    7954 00137$:
                           7955 ;demo.c:1110: if (triframes == 900) { tilei = 0; tilex = 0; tiley = 0; }
   2715 3Ar24s42           7956 	ld	a,(#_triframes+0)
   2718 D6 84              7957 	sub	a,#0x84
   271A 20 07              7958 	jr	NZ,00242$
   271C 3Ar25s42           7959 	ld	a,(#_triframes+1)
   271F D6 03              7960 	sub	a,#0x03
   2721 28 02              7961 	jr	Z,00243$
   2723                    7962 00242$:
   2723 18 1E              7963 	jr	00140$
   2725                    7964 00243$:
   2725 21r12s42           7965 	ld	hl,#_tilei + 0
   2728 36 00              7966 	ld	(hl), #0x00
   272A 21r13s42           7967 	ld	hl,#_tilei + 1
   272D 36 00              7968 	ld	(hl), #0x00
   272F 21r14s42           7969 	ld	hl,#_tilex + 0
   2732 36 00              7970 	ld	(hl), #0x00
   2734 21r15s42           7971 	ld	hl,#_tilex + 1
   2737 36 00              7972 	ld	(hl), #0x00
   2739 21r16s42           7973 	ld	hl,#_tiley + 0
   273C 36 00              7974 	ld	(hl), #0x00
   273E 21r17s42           7975 	ld	hl,#_tiley + 1
   2741 36 00              7976 	ld	(hl), #0x00
   2743                    7977 00140$:
                           7978 ;demo.c:1111: if (triframes >= 900 && triframes < 1050) {
   2743 3Ar24s42           7979 	ld	a,(#_triframes+0)
   2746 D6 84              7980 	sub	a,#0x84
   2748 3Ar25s42           7981 	ld	a,(#_triframes+1)
   274B DE 03              7982 	sbc	a,#0x03
   274D FAr65s27           7983 	jp	M,00142$
   2750 3Ar24s42           7984 	ld	a,(#_triframes+0)
   2753 D6 1A              7985 	sub	a,#0x1A
   2755 3Ar25s42           7986 	ld	a,(#_triframes+1)
   2758 DE 04              7987 	sbc	a,#0x04
   275A F2r65s27           7988 	jp	P,00142$
                           7989 ;demo.c:1112: drawtilescreen(tri_inva2);
   275D 21rACs05           7990 	ld	hl,#_tri_inva2
   2760 E5                 7991 	push	hl
   2761 CDr9Es22           7992 	call	_drawtilescreen
   2764 F1                 7993 	pop	af
   2765                    7994 00142$:
                           7995 ;demo.c:1115: if (triframes == 1050) { tilei = 0; tilex = 0; tiley = 0; }
   2765 3Ar24s42           7996 	ld	a,(#_triframes+0)
   2768 D6 1A              7997 	sub	a,#0x1A
   276A 20 07              7998 	jr	NZ,00244$
   276C 3Ar25s42           7999 	ld	a,(#_triframes+1)
   276F D6 04              8000 	sub	a,#0x04
   2771 28 02              8001 	jr	Z,00245$
   2773                    8002 00244$:
   2773 18 1E              8003 	jr	00145$
   2775                    8004 00245$:
   2775 21r12s42           8005 	ld	hl,#_tilei + 0
   2778 36 00              8006 	ld	(hl), #0x00
   277A 21r13s42           8007 	ld	hl,#_tilei + 1
   277D 36 00              8008 	ld	(hl), #0x00
   277F 21r14s42           8009 	ld	hl,#_tilex + 0
   2782 36 00              8010 	ld	(hl), #0x00
   2784 21r15s42           8011 	ld	hl,#_tilex + 1
   2787 36 00              8012 	ld	(hl), #0x00
   2789 21r16s42           8013 	ld	hl,#_tiley + 0
   278C 36 00              8014 	ld	(hl), #0x00
   278E 21r17s42           8015 	ld	hl,#_tiley + 1
   2791 36 00              8016 	ld	(hl), #0x00
   2793                    8017 00145$:
                           8018 ;demo.c:1116: if (triframes >= 1050 && triframes < 1200) {
   2793 3Ar24s42           8019 	ld	a,(#_triframes+0)
   2796 D6 1A              8020 	sub	a,#0x1A
   2798 3Ar25s42           8021 	ld	a,(#_triframes+1)
   279B DE 04              8022 	sbc	a,#0x04
   279D FArB5s27           8023 	jp	M,00147$
   27A0 3Ar24s42           8024 	ld	a,(#_triframes+0)
   27A3 D6 B0              8025 	sub	a,#0xB0
   27A5 3Ar25s42           8026 	ld	a,(#_triframes+1)
   27A8 DE 04              8027 	sbc	a,#0x04
   27AA F2rB5s27           8028 	jp	P,00147$
                           8029 ;demo.c:1117: drawtilescreen(tri_inva3);
   27AD 21r6Cs06           8030 	ld	hl,#_tri_inva3
   27B0 E5                 8031 	push	hl
   27B1 CDr9Es22           8032 	call	_drawtilescreen
   27B4 F1                 8033 	pop	af
   27B5                    8034 00147$:
                           8035 ;demo.c:1120: if (triframes == 1200) { tilei = 0; tilex = 0; tiley = 0; }
   27B5 3Ar24s42           8036 	ld	a,(#_triframes+0)
   27B8 D6 B0              8037 	sub	a,#0xB0
   27BA 20 07              8038 	jr	NZ,00246$
   27BC 3Ar25s42           8039 	ld	a,(#_triframes+1)
   27BF D6 04              8040 	sub	a,#0x04
   27C1 28 02              8041 	jr	Z,00247$
   27C3                    8042 00246$:
   27C3 18 1E              8043 	jr	00150$
   27C5                    8044 00247$:
   27C5 21r12s42           8045 	ld	hl,#_tilei + 0
   27C8 36 00              8046 	ld	(hl), #0x00
   27CA 21r13s42           8047 	ld	hl,#_tilei + 1
   27CD 36 00              8048 	ld	(hl), #0x00
   27CF 21r14s42           8049 	ld	hl,#_tilex + 0
   27D2 36 00              8050 	ld	(hl), #0x00
   27D4 21r15s42           8051 	ld	hl,#_tilex + 1
   27D7 36 00              8052 	ld	(hl), #0x00
   27D9 21r16s42           8053 	ld	hl,#_tiley + 0
   27DC 36 00              8054 	ld	(hl), #0x00
   27DE 21r17s42           8055 	ld	hl,#_tiley + 1
   27E1 36 00              8056 	ld	(hl), #0x00
   27E3                    8057 00150$:
                           8058 ;demo.c:1121: if (triframes >= 1200 && triframes < 1350) {
   27E3 3Ar24s42           8059 	ld	a,(#_triframes+0)
   27E6 D6 B0              8060 	sub	a,#0xB0
   27E8 3Ar25s42           8061 	ld	a,(#_triframes+1)
   27EB DE 04              8062 	sbc	a,#0x04
   27ED FAr05s28           8063 	jp	M,00152$
   27F0 3Ar24s42           8064 	ld	a,(#_triframes+0)
   27F3 D6 46              8065 	sub	a,#0x46
   27F5 3Ar25s42           8066 	ld	a,(#_triframes+1)
   27F8 DE 05              8067 	sbc	a,#0x05
   27FA F2r05s28           8068 	jp	P,00152$
                           8069 ;demo.c:1122: drawtilescreen(tri_inva4);
   27FD 21r2Cs07           8070 	ld	hl,#_tri_inva4
   2800 E5                 8071 	push	hl
   2801 CDr9Es22           8072 	call	_drawtilescreen
   2804 F1                 8073 	pop	af
   2805                    8074 00152$:
                           8075 ;demo.c:1125: if (triframes == 1350) { tilei = 0; tilex = 0; tiley = 0; }
   2805 3Ar24s42           8076 	ld	a,(#_triframes+0)
   2808 D6 46              8077 	sub	a,#0x46
   280A 20 07              8078 	jr	NZ,00248$
   280C 3Ar25s42           8079 	ld	a,(#_triframes+1)
   280F D6 05              8080 	sub	a,#0x05
   2811 28 02              8081 	jr	Z,00249$
   2813                    8082 00248$:
   2813 18 1E              8083 	jr	00155$
   2815                    8084 00249$:
   2815 21r12s42           8085 	ld	hl,#_tilei + 0
   2818 36 00              8086 	ld	(hl), #0x00
   281A 21r13s42           8087 	ld	hl,#_tilei + 1
   281D 36 00              8088 	ld	(hl), #0x00
   281F 21r14s42           8089 	ld	hl,#_tilex + 0
   2822 36 00              8090 	ld	(hl), #0x00
   2824 21r15s42           8091 	ld	hl,#_tilex + 1
   2827 36 00              8092 	ld	(hl), #0x00
   2829 21r16s42           8093 	ld	hl,#_tiley + 0
   282C 36 00              8094 	ld	(hl), #0x00
   282E 21r17s42           8095 	ld	hl,#_tiley + 1
   2831 36 00              8096 	ld	(hl), #0x00
   2833                    8097 00155$:
                           8098 ;demo.c:1126: if (triframes >= 1350 && triframes < 1500) {
   2833 3Ar24s42           8099 	ld	a,(#_triframes+0)
   2836 D6 46              8100 	sub	a,#0x46
   2838 3Ar25s42           8101 	ld	a,(#_triframes+1)
   283B DE 05              8102 	sbc	a,#0x05
   283D FAr55s28           8103 	jp	M,00157$
   2840 3Ar24s42           8104 	ld	a,(#_triframes+0)
   2843 D6 DC              8105 	sub	a,#0xDC
   2845 3Ar25s42           8106 	ld	a,(#_triframes+1)
   2848 DE 05              8107 	sbc	a,#0x05
   284A F2r55s28           8108 	jp	P,00157$
                           8109 ;demo.c:1127: drawtilescreen(tri_center);
   284D 21r2Cs01           8110 	ld	hl,#_tri_center
   2850 E5                 8111 	push	hl
   2851 CDr9Es22           8112 	call	_drawtilescreen
   2854 F1                 8113 	pop	af
   2855                    8114 00157$:
                           8115 ;demo.c:1130: if (triframes > 1500) triframes = 199;
   2855 3E DC              8116 	ld	a,#0xDC
   2857 FD 21r24s42        8117 	ld	iy,#_triframes
   285B FD 96 00           8118 	sub	a,0 (iy)
   285E 3E 05              8119 	ld	a,#0x05
   2860 FD 21r24s42        8120 	ld	iy,#_triframes
   2864 FD 9E 01           8121 	sbc	a,1 (iy)
   2867 F2r74s28           8122 	jp	P,00160$
   286A 21r24s42           8123 	ld	hl,#_triframes + 0
   286D 36 C7              8124 	ld	(hl), #0xC7
   286F 21r25s42           8125 	ld	hl,#_triframes + 1
   2872 36 00              8126 	ld	(hl), #0x00
   2874                    8127 00160$:
                           8128 ;demo.c:1133: msx2_palette(2,0,0,0);
   2874 21 00 00           8129 	ld	hl,#0x0000
   2877 E5                 8130 	push	hl
   2878 2E 02              8131 	ld	l, #0x02
   287A E5                 8132 	push	hl
   287B CDr00s00           8133 	call	_msx2_palette
   287E F1                 8134 	pop	af
   287F F1                 8135 	pop	af
                           8136 ;demo.c:1134: msx2_palette(11,0,0,0);
   2880 21 00 00           8137 	ld	hl,#0x0000
   2883 E5                 8138 	push	hl
   2884 2E 0B              8139 	ld	l, #0x0B
   2886 E5                 8140 	push	hl
   2887 CDr00s00           8141 	call	_msx2_palette
   288A F1                 8142 	pop	af
   288B F1                 8143 	pop	af
                           8144 ;demo.c:1136: if (PLY_PSGReg10 > 4) {
   288C 3E 04              8145 	ld	a,#0x04
   288E FD 21r00s00        8146 	ld	iy,#_PLY_PSGReg10
   2892 FD 96 00           8147 	sub	a,0 (iy)
   2895 D2r2As29           8148 	jp	NC,00162$
                           8149 ;demo.c:1137: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2898 21r00s00           8150 	ld	hl,#_PLY_PSGReg10 + 0
   289B 4E                 8151 	ld	c,(hl)
   289C 06 00              8152 	ld	b,#0x00
   289E 21r22s42           8153 	ld	hl,#_tripaltick + 0
   28A1 5E                 8154 	ld	e,(hl)
   28A2 16 00              8155 	ld	d,#0x00
   28A4 79                 8156 	ld	a,c
   28A5 83                 8157 	add	a,e
   28A6 4F                 8158 	ld	c,a
   28A7 78                 8159 	ld	a,b
   28A8 8A                 8160 	adc	a,d
   28A9 06 00              8161 	ld	b,#0x00
   28AB 21r2Cs00           8162 	ld	hl,#_sintabx
   28AE 09                 8163 	add	hl,bc
   28AF 7E                 8164 	ld	a,(hl)
   28B0 4F                 8165 	ld	c,a
   28B1 06 00              8166 	ld	b,#0x00
   28B3 3E C0              8167 	ld	a,#0xC0
   28B5 91                 8168 	sub	a,c
   28B6 4F                 8169 	ld	c,a
   28B7 3E 00              8170 	ld	a,#0x00
   28B9 98                 8171 	sbc	a,b
   28BA 47                 8172 	ld	b,a
   28BB CB 28              8173 	sra	b
   28BD CB 19              8174 	rr	c
   28BF CB 28              8175 	sra	b
   28C1 CB 19              8176 	rr	c
   28C3 CB 28              8177 	sra	b
   28C5 CB 19              8178 	rr	c
   28C7 41                 8179 	ld	b,c
   28C8 0E 17              8180 	ld	c,#0x17
   28CA C5                 8181 	push	bc
   28CB CDr00s00           8182 	call	_vdp_register
   28CE F1                 8183 	pop	af
                           8184 ;demo.c:1139: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   28CF 21r1Bs42           8185 	ld	hl,#_tripal + 2
   28D2 4E                 8186 	ld	c,(hl)
   28D3 11r1As42           8187 	ld	de,#_tripal + 1
   28D6 1A                 8188 	ld	a,(de)
   28D7 47                 8189 	ld	b,a
   28D8 21r19s42           8190 	ld	hl,#_tripal
   28DB 5E                 8191 	ld	e,(hl)
   28DC 21r00s00           8192 	ld	hl,#_PLY_PSGReg10 + 0
   28DF 56                 8193 	ld	d,(hl)
   28E0 7B                 8194 	ld	a,e
   28E1 82                 8195 	add	a,d
   28E2 5F                 8196 	ld	e,a
   28E3 79                 8197 	ld	a,c
   28E4 F5                 8198 	push	af
   28E5 33                 8199 	inc	sp
   28E6 C5                 8200 	push	bc
   28E7 33                 8201 	inc	sp
   28E8 53                 8202 	ld	d,e
   28E9 1E 03              8203 	ld	e,#0x03
   28EB D5                 8204 	push	de
   28EC CDr00s00           8205 	call	_msx2_palette
   28EF F1                 8206 	pop	af
   28F0 F1                 8207 	pop	af
                           8208 ;demo.c:1140: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   28F1 21r1Es42           8209 	ld	hl,#_tripal + 5
   28F4 4E                 8210 	ld	c,(hl)
   28F5 11r1Ds42           8211 	ld	de,#_tripal + 4
   28F8 1A                 8212 	ld	a,(de)
   28F9 47                 8213 	ld	b,a
   28FA 21r1Cs42           8214 	ld	hl,#_tripal + 3
   28FD 5E                 8215 	ld	e,(hl)
   28FE 79                 8216 	ld	a,c
   28FF F5                 8217 	push	af
   2900 33                 8218 	inc	sp
   2901 C5                 8219 	push	bc
   2902 33                 8220 	inc	sp
   2903 53                 8221 	ld	d,e
   2904 1E 0E              8222 	ld	e,#0x0E
   2906 D5                 8223 	push	de
   2907 CDr00s00           8224 	call	_msx2_palette
   290A F1                 8225 	pop	af
   290B F1                 8226 	pop	af
                           8227 ;demo.c:1141: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   290C 21r21s42           8228 	ld	hl,#_tripal + 8
   290F 4E                 8229 	ld	c,(hl)
   2910 11r20s42           8230 	ld	de,#_tripal + 7
   2913 1A                 8231 	ld	a,(de)
   2914 47                 8232 	ld	b,a
   2915 21r1Fs42           8233 	ld	hl,#_tripal + 6
   2918 5E                 8234 	ld	e,(hl)
   2919 79                 8235 	ld	a,c
   291A F5                 8236 	push	af
   291B 33                 8237 	inc	sp
   291C C5                 8238 	push	bc
   291D 33                 8239 	inc	sp
   291E 53                 8240 	ld	d,e
   291F 1E 06              8241 	ld	e,#0x06
   2921 D5                 8242 	push	de
   2922 CDr00s00           8243 	call	_msx2_palette
   2925 F1                 8244 	pop	af
   2926 F1                 8245 	pop	af
   2927 C3r83s29           8246 	jp	00163$
   292A                    8247 00162$:
                           8248 ;demo.c:1144: vdp_register(VDP_VOFFSET,0);
   292A 21 17 00           8249 	ld	hl,#0x0017
   292D E5                 8250 	push	hl
   292E CDr00s00           8251 	call	_vdp_register
   2931 F1                 8252 	pop	af
                           8253 ;demo.c:1146: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2932 21r1Bs42           8254 	ld	hl,#_tripal + 2
   2935 4E                 8255 	ld	c,(hl)
   2936 11r1As42           8256 	ld	de,#_tripal + 1
   2939 1A                 8257 	ld	a,(de)
   293A 47                 8258 	ld	b,a
   293B 21r19s42           8259 	ld	hl,#_tripal
   293E 5E                 8260 	ld	e,(hl)
   293F 79                 8261 	ld	a,c
   2940 F5                 8262 	push	af
   2941 33                 8263 	inc	sp
   2942 C5                 8264 	push	bc
   2943 33                 8265 	inc	sp
   2944 53                 8266 	ld	d,e
   2945 1E 03              8267 	ld	e,#0x03
   2947 D5                 8268 	push	de
   2948 CDr00s00           8269 	call	_msx2_palette
   294B F1                 8270 	pop	af
   294C F1                 8271 	pop	af
                           8272 ;demo.c:1147: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   294D 21r1Es42           8273 	ld	hl,#_tripal + 5
   2950 4E                 8274 	ld	c,(hl)
   2951 11r1Ds42           8275 	ld	de,#_tripal + 4
   2954 1A                 8276 	ld	a,(de)
   2955 47                 8277 	ld	b,a
   2956 21r1Cs42           8278 	ld	hl,#_tripal + 3
   2959 5E                 8279 	ld	e,(hl)
   295A 79                 8280 	ld	a,c
   295B F5                 8281 	push	af
   295C 33                 8282 	inc	sp
   295D C5                 8283 	push	bc
   295E 33                 8284 	inc	sp
   295F 53                 8285 	ld	d,e
   2960 1E 0E              8286 	ld	e,#0x0E
   2962 D5                 8287 	push	de
   2963 CDr00s00           8288 	call	_msx2_palette
   2966 F1                 8289 	pop	af
   2967 F1                 8290 	pop	af
                           8291 ;demo.c:1148: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2968 21r21s42           8292 	ld	hl,#_tripal + 8
   296B 4E                 8293 	ld	c,(hl)
   296C 11r20s42           8294 	ld	de,#_tripal + 7
   296F 1A                 8295 	ld	a,(de)
   2970 47                 8296 	ld	b,a
   2971 21r1Fs42           8297 	ld	hl,#_tripal + 6
   2974 5E                 8298 	ld	e,(hl)
   2975 79                 8299 	ld	a,c
   2976 F5                 8300 	push	af
   2977 33                 8301 	inc	sp
   2978 C5                 8302 	push	bc
   2979 33                 8303 	inc	sp
   297A 53                 8304 	ld	d,e
   297B 1E 06              8305 	ld	e,#0x06
   297D D5                 8306 	push	de
   297E CDr00s00           8307 	call	_msx2_palette
   2981 F1                 8308 	pop	af
   2982 F1                 8309 	pop	af
   2983                    8310 00163$:
                           8311 ;demo.c:1152: if (tick > 28) tick = 0;
   2983 3E 1C              8312 	ld	a,#0x1C
   2985 FD 21r28s41        8313 	ld	iy,#_tick
   2989 FD 96 00           8314 	sub	a,0 (iy)
   298C 3E 00              8315 	ld	a,#0x00
   298E FD 21r28s41        8316 	ld	iy,#_tick
   2992 FD 9E 01           8317 	sbc	a,1 (iy)
   2995 F2rA2s29           8318 	jp	P,00165$
   2998 21r28s41           8319 	ld	hl,#_tick + 0
   299B 36 00              8320 	ld	(hl), #0x00
   299D 21r29s41           8321 	ld	hl,#_tick + 1
   29A0 36 00              8322 	ld	(hl), #0x00
   29A2                    8323 00165$:
                           8324 ;demo.c:1154: tripaltick++;
   29A2 FD 21r22s42        8325 	ld	iy,#_tripaltick
   29A6 FD 34 00           8326 	inc	0 (iy)
                           8327 ;demo.c:1155: if (tripaltick > 6) {
   29A9 3E 06              8328 	ld	a,#0x06
   29AB FD 21r22s42        8329 	ld	iy,#_tripaltick
   29AF FD 96 00           8330 	sub	a,0 (iy)
   29B2 D2r37s2A           8331 	jp	NC,00178$
                           8332 ;demo.c:1156: tripaltick2++;
   29B5 FD 21r23s42        8333 	ld	iy,#_tripaltick2
   29B9 FD 34 00           8334 	inc	0 (iy)
                           8335 ;demo.c:1157: if (tripaltick2 > 6) tripaltick2 = 0;
   29BC 3E 06              8336 	ld	a,#0x06
   29BE FD 21r23s42        8337 	ld	iy,#_tripaltick2
   29C2 FD 96 00           8338 	sub	a,0 (iy)
   29C5 30 05              8339 	jr	NC,00167$
   29C7 21r23s42           8340 	ld	hl,#_tripaltick2 + 0
   29CA 36 00              8341 	ld	(hl), #0x00
   29CC                    8342 00167$:
                           8343 ;demo.c:1159: r = tripal[0];
   29CC 21r19s42           8344 	ld	hl,#_tripal
   29CF 4E                 8345 	ld	c,(hl)
   29D0 DD 71 FD           8346 	ld	-3 (ix),c
                           8347 ;demo.c:1160: g = tripal[1];
   29D3 11r1As42           8348 	ld	de,#_tripal + 1
   29D6 1A                 8349 	ld	a,(de)
   29D7 DD 77 FC           8350 	ld	-4 (ix),a
                           8351 ;demo.c:1161: b = tripal[2];
   29DA 21r1Bs42           8352 	ld	hl,#_tripal + 2
   29DD 5E                 8353 	ld	e,(hl)
   29DE DD 73 FB           8354 	ld	-5 (ix),e
                           8355 ;demo.c:1163: for (x = 0; x < 6; x++) {
   29E1 DD 36 FE 00        8356 	ld	-2 (ix),#0x00
   29E5 DD 36 FF 00        8357 	ld	-1 (ix),#0x00
   29E9                    8358 00174$:
   29E9 DD 7E FE           8359 	ld	a,-2 (ix)
   29EC D6 06              8360 	sub	a,#0x06
   29EE DD 7E FF           8361 	ld	a,-1 (ix)
   29F1 DE 00              8362 	sbc	a,#0x00
   29F3 F2r1Ds2A           8363 	jp	P,00177$
                           8364 ;demo.c:1164: tripal[x] = tripal[x+3];
   29F6 3Er19              8365 	ld	a,#<_tripal
   29F8 DD 86 FE           8366 	add	a,-2 (ix)
   29FB 4F                 8367 	ld	c,a
   29FC 3Es42              8368 	ld	a,#>_tripal
   29FE DD 8E FF           8369 	adc	a,-1 (ix)
   2A01 47                 8370 	ld	b,a
   2A02 DD 5E FE           8371 	ld	e,-2 (ix)
   2A05 1C                 8372 	inc	e
   2A06 1C                 8373 	inc	e
   2A07 1C                 8374 	inc	e
   2A08 3Er19              8375 	ld	a,#<_tripal
   2A0A 83                 8376 	add	a,e
   2A0B 5F                 8377 	ld	e,a
   2A0C 3Es42              8378 	ld	a,#>_tripal
   2A0E CE 00              8379 	adc	a,#0x00
   2A10 57                 8380 	ld	d,a
   2A11 1A                 8381 	ld	a,(de)
   2A12 02                 8382 	ld	(bc),a
                           8383 ;demo.c:1163: for (x = 0; x < 6; x++) {
   2A13 DD 34 FE           8384 	inc	-2 (ix)
   2A16 20 03              8385 	jr	NZ,00251$
   2A18 DD 34 FF           8386 	inc	-1 (ix)
   2A1B                    8387 00251$:
   2A1B 18 CC              8388 	jr	00174$
   2A1D                    8389 00177$:
                           8390 ;demo.c:1167: tripal[6] = r;
   2A1D 01r1Fs42           8391 	ld	bc,#_tripal + 6
   2A20 DD 7E FD           8392 	ld	a,-3 (ix)
   2A23 02                 8393 	ld	(bc),a
                           8394 ;demo.c:1168: tripal[7] = g;
   2A24 01r20s42           8395 	ld	bc,#_tripal + 7
   2A27 DD 7E FC           8396 	ld	a,-4 (ix)
   2A2A 02                 8397 	ld	(bc),a
                           8398 ;demo.c:1169: tripal[8] = b;
   2A2B 01r21s42           8399 	ld	bc,#_tripal + 8
   2A2E DD 7E FB           8400 	ld	a,-5 (ix)
   2A31 02                 8401 	ld	(bc),a
                           8402 ;demo.c:1170: tripaltick = 0;
   2A32 21r22s42           8403 	ld	hl,#_tripaltick + 0
   2A35 36 00              8404 	ld	(hl), #0x00
   2A37                    8405 00178$:
   2A37 DD F9              8406 	ld	sp,ix
   2A39 DD E1              8407 	pop	ix
   2A3B C9                 8408 	ret
   2A3C                    8409 _tritiles_end::
                           8410 ;demo.c:1175: int abs (int n) {
                           8411 ;	---------------------------------
                           8412 ; Function abs
                           8413 ; ---------------------------------
   2A3C                    8414 _abs_start::
   2A3C                    8415 _abs:
   2A3C DD E5              8416 	push	ix
   2A3E DD 21 00 00        8417 	ld	ix,#0
   2A42 DD 39              8418 	add	ix,sp
   2A44 21 FA FF           8419 	ld	hl,#-6
   2A47 39                 8420 	add	hl,sp
   2A48 F9                 8421 	ld	sp,hl
                           8422 ;demo.c:1176: const int ret[2] = { n, -n };
   2A49 21 02 00           8423 	ld	hl,#0x0002
   2A4C 39                 8424 	add	hl,sp
   2A4D 4D                 8425 	ld	c,l
   2A4E 44                 8426 	ld	b,h
   2A4F DD 7E 04           8427 	ld	a,4 (ix)
   2A52 77                 8428 	ld	(hl),a
   2A53 23                 8429 	inc	hl
   2A54 DD 7E 05           8430 	ld	a,5 (ix)
   2A57 77                 8431 	ld	(hl),a
   2A58 21 02 00           8432 	ld	hl,#0x0002
   2A5B 09                 8433 	add	hl,bc
   2A5C DD 75 FA           8434 	ld	-6 (ix),l
   2A5F DD 74 FB           8435 	ld	-5 (ix),h
   2A62 AF                 8436 	xor	a,a
   2A63 DD 9E 04           8437 	sbc	a,4 (ix)
   2A66 5F                 8438 	ld	e,a
   2A67 3E 00              8439 	ld	a,#0x00
   2A69 DD 9E 05           8440 	sbc	a,5 (ix)
   2A6C 57                 8441 	ld	d,a
   2A6D DD 6E FA           8442 	ld	l,-6 (ix)
   2A70 DD 66 FB           8443 	ld	h,-5 (ix)
   2A73 73                 8444 	ld	(hl),e
   2A74 23                 8445 	inc	hl
   2A75 72                 8446 	ld	(hl),d
                           8447 ;demo.c:1177: return ret [n<0];
   2A76 DD 7E 05           8448 	ld	a,5 (ix)
   2A79 07                 8449 	rlca
   2A7A E6 01              8450 	and	a,#0x01
   2A7C 5F                 8451 	ld	e,a
   2A7D CB 23              8452 	sla	e
   2A7F 79                 8453 	ld	a,c
   2A80 83                 8454 	add	a,e
   2A81 6F                 8455 	ld	l,a
   2A82 78                 8456 	ld	a,b
   2A83 CE 00              8457 	adc	a,#0x00
   2A85 67                 8458 	ld	h,a
   2A86 5E                 8459 	ld	e,(hl)
   2A87 23                 8460 	inc	hl
   2A88 4E                 8461 	ld	c,(hl)
   2A89 6B                 8462 	ld	l,e
   2A8A 61                 8463 	ld	h,c
   2A8B DD F9              8464 	ld	sp,ix
   2A8D DD E1              8465 	pop	ix
   2A8F C9                 8466 	ret
   2A90                    8467 _abs_end::
                           8468 ;demo.c:1183: void logoeffu() {
                           8469 ;	---------------------------------
                           8470 ; Function logoeffu
                           8471 ; ---------------------------------
   2A90                    8472 _logoeffu_start::
   2A90                    8473 _logoeffu:
   2A90 DD E5              8474 	push	ix
   2A92 DD 21 00 00        8475 	ld	ix,#0
   2A96 DD 39              8476 	add	ix,sp
   2A98 F5                 8477 	push	af
   2A99 F5                 8478 	push	af
                           8479 ;demo.c:1187: fadein();
   2A9A CDrBBs0A           8480 	call	_fadein
                           8481 ;demo.c:1189: v = abs(sintabx[(vbicount) & 255]>>4);
   2A9D 21r26s41           8482 	ld	hl,#_vbicount + 0
   2AA0 4E                 8483 	ld	c,(hl)
   2AA1 06 00              8484 	ld	b,#0x00
   2AA3 21r2Cs00           8485 	ld	hl,#_sintabx
   2AA6 09                 8486 	add	hl,bc
   2AA7 7E                 8487 	ld	a,(hl)
   2AA8 4F                 8488 	ld	c,a
   2AA9 CB 39              8489 	srl	c
   2AAB CB 39              8490 	srl	c
   2AAD CB 39              8491 	srl	c
   2AAF CB 39              8492 	srl	c
   2AB1 06 00              8493 	ld	b,#0x00
   2AB3 C5                 8494 	push	bc
   2AB4 CDr3Cs2A           8495 	call	_abs
   2AB7 F1                 8496 	pop	af
   2AB8 44                 8497 	ld	b,h
   2AB9 DD 75 FC           8498 	ld	-4 (ix),l
   2ABC DD 70 FD           8499 	ld	-3 (ix),b
                           8500 ;demo.c:1191: for (y = 0; y < 116; y+=2) {
   2ABF DD 36 FE 00        8501 	ld	-2 (ix),#0x00
   2AC3 DD 36 FF 00        8502 	ld	-1 (ix),#0x00
   2AC7                    8503 00108$:
   2AC7 DD 7E FE           8504 	ld	a,-2 (ix)
   2ACA D6 74              8505 	sub	a,#0x74
   2ACC DD 7E FF           8506 	ld	a,-1 (ix)
   2ACF DE 00              8507 	sbc	a,#0x00
   2AD1 F2r9Cs2B           8508 	jp	P,00111$
                           8509 ;demo.c:1192: cmd.size_x = 108;
   2AD4 11r32s41           8510 	ld	de,#_cmd + 8
   2AD7 EB                 8511 	ex	de,hl
   2AD8 36 6C              8512 	ld	(hl),#0x6C
   2ADA 23                 8513 	inc	hl
   2ADB 36 00              8514 	ld	(hl),#0x00
                           8515 ;demo.c:1193: cmd.size_y = 2;
   2ADD 11r34s41           8516 	ld	de,#_cmd + 10
   2AE0 EB                 8517 	ex	de,hl
   2AE1 36 02              8518 	ld	(hl),#0x02
   2AE3 23                 8519 	inc	hl
   2AE4 36 00              8520 	ld	(hl),#0x00
                           8521 ;demo.c:1194: cmd.data = 0;
   2AE6 11r36s41           8522 	ld	de,#_cmd + 12
   2AE9 3E 00              8523 	ld	a,#0x00
   2AEB 12                 8524 	ld	(de),a
                           8525 ;demo.c:1195: cmd.argument = 0x00;
   2AEC 11r37s41           8526 	ld	de,#_cmd + 13
   2AEF 3E 00              8527 	ld	a,#0x00
   2AF1 12                 8528 	ld	(de),a
                           8529 ;demo.c:1196: cmd.command = 0xd0; 
   2AF2 11r38s41           8530 	ld	de,#_cmd + 14
   2AF5 3E D0              8531 	ld	a,#0xD0
   2AF7 12                 8532 	ld	(de),a
                           8533 ;demo.c:1197: cmd.source_x = 74;
   2AF8 21r2As41           8534 	ld	hl,#_cmd
   2AFB 36 4A              8535 	ld	(hl),#0x4A
   2AFD 23                 8536 	inc	hl
   2AFE 36 00              8537 	ld	(hl),#0x00
                           8538 ;demo.c:1198: cmd.source_y = 256+y;
   2B00 11r2Cs41           8539 	ld	de,#_cmd + 2
   2B03 DD 7E FE           8540 	ld	a,-2 (ix)
   2B06 C6 00              8541 	add	a,#0x00
   2B08 4F                 8542 	ld	c,a
   2B09 DD 7E FF           8543 	ld	a,-1 (ix)
   2B0C CE 01              8544 	adc	a,#0x01
   2B0E 47                 8545 	ld	b,a
   2B0F 6B                 8546 	ld	l,e
   2B10 62                 8547 	ld	h,d
   2B11 71                 8548 	ld	(hl),c
   2B12 23                 8549 	inc	hl
   2B13 70                 8550 	ld	(hl),b
                           8551 ;demo.c:1199: v+=y;
   2B14 DD 7E FC           8552 	ld	a,-4 (ix)
   2B17 DD 86 FE           8553 	add	a,-2 (ix)
   2B1A DD 77 FC           8554 	ld	-4 (ix),a
   2B1D DD 7E FD           8555 	ld	a,-3 (ix)
   2B20 DD 8E FF           8556 	adc	a,-1 (ix)
   2B23 DD 77 FD           8557 	ld	-3 (ix),a
                           8558 ;demo.c:1200: v -= powa;
   2B26 21r28s42           8559 	ld	hl,#_powa
   2B29 DD 7E FC           8560 	ld	a,-4 (ix)
   2B2C 96                 8561 	sub	a,(hl)
   2B2D DD 77 FC           8562 	ld	-4 (ix),a
   2B30 DD 7E FD           8563 	ld	a,-3 (ix)
   2B33 23                 8564 	inc	hl
   2B34 9E                 8565 	sbc	a,(hl)
                           8566 ;demo.c:1201: if (v<0) v = 0;
   2B35 DD 77 FD           8567 	ld	-3 (ix),a
   2B38 CB 7F              8568 	bit	7,a
   2B3A 28 08              8569 	jr	Z,00102$
   2B3C DD 36 FC 00        8570 	ld	-4 (ix),#0x00
   2B40 DD 36 FD 00        8571 	ld	-3 (ix),#0x00
   2B44                    8572 00102$:
                           8573 ;demo.c:1202: if (v>150) v = 150;
   2B44 3E 96              8574 	ld	a,#0x96
   2B46 DD 96 FC           8575 	sub	a,-4 (ix)
   2B49 3E 00              8576 	ld	a,#0x00
   2B4B DD 9E FD           8577 	sbc	a,-3 (ix)
   2B4E F2r59s2B           8578 	jp	P,00104$
   2B51 DD 36 FC 96        8579 	ld	-4 (ix),#0x96
   2B55 DD 36 FD 00        8580 	ld	-3 (ix),#0x00
   2B59                    8581 00104$:
                           8582 ;demo.c:1203: cmd.dest_x = 74+v;
   2B59 01r2Es41           8583 	ld	bc,#_cmd + 4
   2B5C DD 7E FC           8584 	ld	a,-4 (ix)
   2B5F C6 4A              8585 	add	a,#0x4A
   2B61 5F                 8586 	ld	e,a
   2B62 DD 7E FD           8587 	ld	a,-3 (ix)
   2B65 CE 00              8588 	adc	a,#0x00
   2B67 57                 8589 	ld	d,a
   2B68 69                 8590 	ld	l,c
   2B69 60                 8591 	ld	h,b
   2B6A 73                 8592 	ld	(hl),e
   2B6B 23                 8593 	inc	hl
   2B6C 72                 8594 	ld	(hl),d
                           8595 ;demo.c:1204: cmd.dest_y = 50+y+1;
   2B6D 01r30s41           8596 	ld	bc,#_cmd + 6
   2B70 DD 7E FE           8597 	ld	a,-2 (ix)
   2B73 C6 33              8598 	add	a,#0x33
   2B75 5F                 8599 	ld	e,a
   2B76 DD 7E FF           8600 	ld	a,-1 (ix)
   2B79 CE 00              8601 	adc	a,#0x00
   2B7B 57                 8602 	ld	d,a
   2B7C 69                 8603 	ld	l,c
   2B7D 60                 8604 	ld	h,b
   2B7E 73                 8605 	ld	(hl),e
   2B7F 23                 8606 	inc	hl
   2B80 72                 8607 	ld	(hl),d
                           8608 ;demo.c:1205: vdp_copier(&cmd);
   2B81 21r2As41           8609 	ld	hl,#_cmd
   2B84 E5                 8610 	push	hl
   2B85 CDr00s00           8611 	call	_vdp_copier
   2B88 F1                 8612 	pop	af
                           8613 ;demo.c:1191: for (y = 0; y < 116; y+=2) {
   2B89 DD 7E FE           8614 	ld	a,-2 (ix)
   2B8C C6 02              8615 	add	a,#0x02
   2B8E DD 77 FE           8616 	ld	-2 (ix),a
   2B91 DD 7E FF           8617 	ld	a,-1 (ix)
   2B94 CE 00              8618 	adc	a,#0x00
   2B96 DD 77 FF           8619 	ld	-1 (ix),a
   2B99 C3rC7s2A           8620 	jp	00108$
   2B9C                    8621 00111$:
                           8622 ;demo.c:1208: if (vbicount > scenetimings[2]+84 && onceclear > 182) {
   2B9C 21r55s41           8623 	ld	hl, #_scenetimings + 4
   2B9F 4E                 8624 	ld	c,(hl)
   2BA0 23                 8625 	inc	hl
   2BA1 46                 8626 	ld	b,(hl)
   2BA2 21 54 00           8627 	ld	hl,#0x0054
   2BA5 09                 8628 	add	hl,bc
   2BA6 4D                 8629 	ld	c,l
   2BA7 44                 8630 	ld	b,h
   2BA8 79                 8631 	ld	a,c
   2BA9 FD 21r26s41        8632 	ld	iy,#_vbicount
   2BAD FD 96 00           8633 	sub	a,0 (iy)
   2BB0 78                 8634 	ld	a,b
   2BB1 FD 21r26s41        8635 	ld	iy,#_vbicount
   2BB5 FD 9E 01           8636 	sbc	a,1 (iy)
   2BB8 F2r1As2C           8637 	jp	P,00106$
   2BBB 3E B6              8638 	ld	a,#0xB6
   2BBD FD 21r2As42        8639 	ld	iy,#_onceclear
   2BC1 FD 96 00           8640 	sub	a,0 (iy)
   2BC4 D2r1As2C           8641 	jp	NC,00106$
                           8642 ;demo.c:1209: cmd.size_x = 4;
   2BC7 21r32s41           8643 	ld	hl, #_cmd + 8
   2BCA 36 04              8644 	ld	(hl),#0x04
   2BCC 23                 8645 	inc	hl
   2BCD 36 00              8646 	ld	(hl),#0x00
                           8647 ;demo.c:1210: cmd.size_y = 116;
   2BCF 21r34s41           8648 	ld	hl, #_cmd + 10
   2BD2 36 74              8649 	ld	(hl),#0x74
   2BD4 23                 8650 	inc	hl
   2BD5 36 00              8651 	ld	(hl),#0x00
                           8652 ;demo.c:1211: cmd.data = 0;
                           8653 ;demo.c:1212: cmd.argument = 0x00;
   2BD7 3E 00              8654 	ld	a,#0x00
   2BD9 32r36s41           8655 	ld	(#_cmd + 12),a
   2BDC 32r37s41           8656 	ld	(#_cmd + 13),a
                           8657 ;demo.c:1213: cmd.command = 0xd0; 
   2BDF 01r38s41           8658 	ld	bc,#_cmd + 14
   2BE2 3E D0              8659 	ld	a,#0xD0
   2BE4 02                 8660 	ld	(bc),a
                           8661 ;demo.c:1214: cmd.source_x = 20;
   2BE5 21r2As41           8662 	ld	hl,#_cmd
   2BE8 36 14              8663 	ld	(hl),#0x14
   2BEA 23                 8664 	inc	hl
   2BEB 36 00              8665 	ld	(hl),#0x00
                           8666 ;demo.c:1215: cmd.source_y = 0;
   2BED 21r2Cs41           8667 	ld	hl, #_cmd + 2
   2BF0 36 00              8668 	ld	(hl),#0x00
   2BF2 23                 8669 	inc	hl
   2BF3 36 00              8670 	ld	(hl),#0x00
                           8671 ;demo.c:1216: cmd.dest_x = onceclear;
   2BF5 01r2Es41           8672 	ld	bc,#_cmd + 4
   2BF8 21r2As42           8673 	ld	hl,#_onceclear + 0
   2BFB 5E                 8674 	ld	e,(hl)
   2BFC 16 00              8675 	ld	d,#0x00
   2BFE 69                 8676 	ld	l,c
   2BFF 60                 8677 	ld	h,b
   2C00 73                 8678 	ld	(hl),e
   2C01 23                 8679 	inc	hl
   2C02 72                 8680 	ld	(hl),d
                           8681 ;demo.c:1217: cmd.dest_y = 68;
   2C03 21r30s41           8682 	ld	hl, #_cmd + 6
   2C06 36 44              8683 	ld	(hl),#0x44
   2C08 23                 8684 	inc	hl
   2C09 36 00              8685 	ld	(hl),#0x00
                           8686 ;demo.c:1218: vdp_copier(&cmd);
   2C0B 21r2As41           8687 	ld	hl,#_cmd
   2C0E E5                 8688 	push	hl
   2C0F CDr00s00           8689 	call	_vdp_copier
   2C12 F1                 8690 	pop	af
                           8691 ;demo.c:1219: onceclear-=4;
   2C13 21r2As42           8692 	ld	hl,#_onceclear
   2C16 7E                 8693 	ld	a,(hl)
   2C17 C6 FC              8694 	add	a,#0xFC
   2C19 77                 8695 	ld	(hl),a
   2C1A                    8696 00106$:
                           8697 ;demo.c:1223: powa+=2;
   2C1A 21r28s42           8698 	ld	hl,#_powa
   2C1D 7E                 8699 	ld	a,(hl)
   2C1E C6 02              8700 	add	a,#0x02
   2C20 23                 8701 	inc	hl
   2C21 2B                 8702 	dec	hl
   2C22 C5                 8703 	push	bc
   2C23 4F                 8704 	ld	c, a
   2C24 23                 8705 	inc	hl
   2C25 7E                 8706 	ld	a, (hl)
   2C26 47                 8707 	ld	b, a
   2C27 79                 8708 	ld	a, c
   2C28 2B                 8709 	dec	hl
   2C29 77                 8710 	ld	(hl), a
   2C2A 78                 8711 	ld	a, b
   2C2B C1                 8712 	pop	bc
   2C2C CE 00              8713 	adc	a,#0x00
   2C2E 23                 8714 	inc	hl
   2C2F 77                 8715 	ld	(hl),a
                           8716 ;demo.c:1224: powatick = 0;
   2C30 21r26s42           8717 	ld	hl,#_powatick + 0
   2C33 36 00              8718 	ld	(hl), #0x00
   2C35 21r27s42           8719 	ld	hl,#_powatick + 1
   2C38 36 00              8720 	ld	(hl), #0x00
   2C3A DD F9              8721 	ld	sp,ix
   2C3C DD E1              8722 	pop	ix
   2C3E C9                 8723 	ret
   2C3F                    8724 _logoeffu_end::
                           8725 ;demo.c:1233: void points() {
                           8726 ;	---------------------------------
                           8727 ; Function points
                           8728 ; ---------------------------------
   2C3F                    8729 _points_start::
   2C3F                    8730 _points:
   2C3F DD E5              8731 	push	ix
   2C41 DD 21 00 00        8732 	ld	ix,#0
   2C45 DD 39              8733 	add	ix,sp
   2C47 F5                 8734 	push	af
   2C48 3B                 8735 	dec	sp
                           8736 ;demo.c:1237: if (initpoints == 0) {
   2C49 AF                 8737 	xor	a,a
   2C4A 21r2Bs42           8738 	ld	hl,#_initpoints + 0
   2C4D B6                 8739 	or	a,(hl)
   2C4E C2r57s2E           8740 	jp	NZ,00105$
                           8741 ;demo.c:1238: cmd.size_x = 256;
   2C51 21r32s41           8742 	ld	hl, #_cmd + 8
   2C54 36 00              8743 	ld	(hl),#0x00
   2C56 23                 8744 	inc	hl
   2C57 36 01              8745 	ld	(hl),#0x01
                           8746 ;demo.c:1239: cmd.size_y = 4;
   2C59 21r34s41           8747 	ld	hl, #_cmd + 10
   2C5C 36 04              8748 	ld	(hl),#0x04
   2C5E 23                 8749 	inc	hl
   2C5F 36 00              8750 	ld	(hl),#0x00
                           8751 ;demo.c:1240: cmd.data = 0;
                           8752 ;demo.c:1241: cmd.argument = 0x00; // from 70xY to left
   2C61 3E 00              8753 	ld	a,#0x00
   2C63 32r36s41           8754 	ld	(#_cmd + 12),a
   2C66 32r37s41           8755 	ld	(#_cmd + 13),a
                           8756 ;demo.c:1242: cmd.command = 0xd0; // vram to vram, y only
   2C69 01r38s41           8757 	ld	bc,#_cmd + 14
   2C6C 3E D0              8758 	ld	a,#0xD0
   2C6E 02                 8759 	ld	(bc),a
                           8760 ;demo.c:1243: cmd.source_x = 0;
   2C6F 21r2As41           8761 	ld	hl,#_cmd
   2C72 36 00              8762 	ld	(hl),#0x00
   2C74 23                 8763 	inc	hl
   2C75 36 00              8764 	ld	(hl),#0x00
                           8765 ;demo.c:1244: cmd.dest_x = 0;
   2C77 21r2Es41           8766 	ld	hl, #_cmd + 4
   2C7A 36 00              8767 	ld	(hl),#0x00
   2C7C 23                 8768 	inc	hl
   2C7D 36 00              8769 	ld	(hl),#0x00
                           8770 ;demo.c:1246: for (y = 0; y < 212; y+=4) {
   2C7F DD 36 FF 00        8771 	ld	-1 (ix),#0x00
   2C83                    8772 00116$:
   2C83 DD 7E FF           8773 	ld	a,-1 (ix)
   2C86 D6 D4              8774 	sub	a,#0xD4
   2C88 D2rAFs2D           8775 	jp	NC,00119$
                           8776 ;demo.c:1247: if (PLY_PSGReg10 > 4) {
   2C8B 3E 04              8777 	ld	a,#0x04
   2C8D FD 21r00s00        8778 	ld	iy,#_PLY_PSGReg10
   2C91 FD 96 00           8779 	sub	a,0 (iy)
   2C94 D2r29s2D           8780 	jp	NC,00102$
                           8781 ;demo.c:1248: vdp_register(VDP_VOFFSET,192-sintabx[(PLY_PSGReg10 + tripaltick) & 255]>>3);
   2C97 21r00s00           8782 	ld	hl,#_PLY_PSGReg10 + 0
   2C9A 5E                 8783 	ld	e,(hl)
   2C9B 16 00              8784 	ld	d,#0x00
   2C9D 21r22s42           8785 	ld	hl,#_tripaltick + 0
   2CA0 4E                 8786 	ld	c,(hl)
   2CA1 06 00              8787 	ld	b,#0x00
   2CA3 7B                 8788 	ld	a,e
   2CA4 81                 8789 	add	a,c
   2CA5 4F                 8790 	ld	c,a
   2CA6 7A                 8791 	ld	a,d
   2CA7 88                 8792 	adc	a,b
   2CA8 06 00              8793 	ld	b,#0x00
   2CAA 21r2Cs00           8794 	ld	hl,#_sintabx
   2CAD 09                 8795 	add	hl,bc
   2CAE 7E                 8796 	ld	a,(hl)
   2CAF 4F                 8797 	ld	c,a
   2CB0 06 00              8798 	ld	b,#0x00
   2CB2 3E C0              8799 	ld	a,#0xC0
   2CB4 91                 8800 	sub	a,c
   2CB5 4F                 8801 	ld	c,a
   2CB6 3E 00              8802 	ld	a,#0x00
   2CB8 98                 8803 	sbc	a,b
   2CB9 47                 8804 	ld	b,a
   2CBA CB 28              8805 	sra	b
   2CBC CB 19              8806 	rr	c
   2CBE CB 28              8807 	sra	b
   2CC0 CB 19              8808 	rr	c
   2CC2 CB 28              8809 	sra	b
   2CC4 CB 19              8810 	rr	c
   2CC6 41                 8811 	ld	b,c
   2CC7 0E 17              8812 	ld	c,#0x17
   2CC9 C5                 8813 	push	bc
   2CCA CDr00s00           8814 	call	_vdp_register
   2CCD F1                 8815 	pop	af
                           8816 ;demo.c:1250: msx2_palette(3,tripal[0]+PLY_PSGReg10,tripal[1],tripal[2]);
   2CCE 21r1Bs42           8817 	ld	hl,#_tripal + 2
   2CD1 4E                 8818 	ld	c,(hl)
   2CD2 11r1As42           8819 	ld	de,#_tripal + 1
   2CD5 1A                 8820 	ld	a,(de)
   2CD6 47                 8821 	ld	b,a
   2CD7 21r19s42           8822 	ld	hl,#_tripal
   2CDA 5E                 8823 	ld	e,(hl)
   2CDB 21r00s00           8824 	ld	hl,#_PLY_PSGReg10 + 0
   2CDE 56                 8825 	ld	d,(hl)
   2CDF 7B                 8826 	ld	a,e
   2CE0 82                 8827 	add	a,d
   2CE1 5F                 8828 	ld	e,a
   2CE2 79                 8829 	ld	a,c
   2CE3 F5                 8830 	push	af
   2CE4 33                 8831 	inc	sp
   2CE5 C5                 8832 	push	bc
   2CE6 33                 8833 	inc	sp
   2CE7 53                 8834 	ld	d,e
   2CE8 1E 03              8835 	ld	e,#0x03
   2CEA D5                 8836 	push	de
   2CEB CDr00s00           8837 	call	_msx2_palette
   2CEE F1                 8838 	pop	af
   2CEF F1                 8839 	pop	af
                           8840 ;demo.c:1251: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2CF0 21r1Es42           8841 	ld	hl,#_tripal + 5
   2CF3 4E                 8842 	ld	c,(hl)
   2CF4 11r1Ds42           8843 	ld	de,#_tripal + 4
   2CF7 1A                 8844 	ld	a,(de)
   2CF8 47                 8845 	ld	b,a
   2CF9 21r1Cs42           8846 	ld	hl,#_tripal + 3
   2CFC 5E                 8847 	ld	e,(hl)
   2CFD 79                 8848 	ld	a,c
   2CFE F5                 8849 	push	af
   2CFF 33                 8850 	inc	sp
   2D00 C5                 8851 	push	bc
   2D01 33                 8852 	inc	sp
   2D02 53                 8853 	ld	d,e
   2D03 1E 0E              8854 	ld	e,#0x0E
   2D05 D5                 8855 	push	de
   2D06 CDr00s00           8856 	call	_msx2_palette
   2D09 F1                 8857 	pop	af
   2D0A F1                 8858 	pop	af
                           8859 ;demo.c:1252: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2D0B 21r21s42           8860 	ld	hl,#_tripal + 8
   2D0E 4E                 8861 	ld	c,(hl)
   2D0F 11r20s42           8862 	ld	de,#_tripal + 7
   2D12 1A                 8863 	ld	a,(de)
   2D13 47                 8864 	ld	b,a
   2D14 21r1Fs42           8865 	ld	hl,#_tripal + 6
   2D17 5E                 8866 	ld	e,(hl)
   2D18 79                 8867 	ld	a,c
   2D19 F5                 8868 	push	af
   2D1A 33                 8869 	inc	sp
   2D1B C5                 8870 	push	bc
   2D1C 33                 8871 	inc	sp
   2D1D 53                 8872 	ld	d,e
   2D1E 1E 06              8873 	ld	e,#0x06
   2D20 D5                 8874 	push	de
   2D21 CDr00s00           8875 	call	_msx2_palette
   2D24 F1                 8876 	pop	af
   2D25 F1                 8877 	pop	af
   2D26 C3r82s2D           8878 	jp	00103$
   2D29                    8879 00102$:
                           8880 ;demo.c:1255: vdp_register(VDP_VOFFSET,0);
   2D29 21 17 00           8881 	ld	hl,#0x0017
   2D2C E5                 8882 	push	hl
   2D2D CDr00s00           8883 	call	_vdp_register
   2D30 F1                 8884 	pop	af
                           8885 ;demo.c:1257: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   2D31 21r1Bs42           8886 	ld	hl,#_tripal + 2
   2D34 4E                 8887 	ld	c,(hl)
   2D35 11r1As42           8888 	ld	de,#_tripal + 1
   2D38 1A                 8889 	ld	a,(de)
   2D39 47                 8890 	ld	b,a
   2D3A 21r19s42           8891 	ld	hl,#_tripal
   2D3D 5E                 8892 	ld	e,(hl)
   2D3E 79                 8893 	ld	a,c
   2D3F F5                 8894 	push	af
   2D40 33                 8895 	inc	sp
   2D41 C5                 8896 	push	bc
   2D42 33                 8897 	inc	sp
   2D43 53                 8898 	ld	d,e
   2D44 1E 03              8899 	ld	e,#0x03
   2D46 D5                 8900 	push	de
   2D47 CDr00s00           8901 	call	_msx2_palette
   2D4A F1                 8902 	pop	af
   2D4B F1                 8903 	pop	af
                           8904 ;demo.c:1258: msx2_palette(14,tripal[3],tripal[4],tripal[5]);
   2D4C 21r1Es42           8905 	ld	hl,#_tripal + 5
   2D4F 4E                 8906 	ld	c,(hl)
   2D50 11r1Ds42           8907 	ld	de,#_tripal + 4
   2D53 1A                 8908 	ld	a,(de)
   2D54 47                 8909 	ld	b,a
   2D55 21r1Cs42           8910 	ld	hl,#_tripal + 3
   2D58 5E                 8911 	ld	e,(hl)
   2D59 79                 8912 	ld	a,c
   2D5A F5                 8913 	push	af
   2D5B 33                 8914 	inc	sp
   2D5C C5                 8915 	push	bc
   2D5D 33                 8916 	inc	sp
   2D5E 53                 8917 	ld	d,e
   2D5F 1E 0E              8918 	ld	e,#0x0E
   2D61 D5                 8919 	push	de
   2D62 CDr00s00           8920 	call	_msx2_palette
   2D65 F1                 8921 	pop	af
   2D66 F1                 8922 	pop	af
                           8923 ;demo.c:1259: msx2_palette(6,tripal[6],tripal[7],tripal[8]);
   2D67 21r21s42           8924 	ld	hl,#_tripal + 8
   2D6A 4E                 8925 	ld	c,(hl)
   2D6B 11r20s42           8926 	ld	de,#_tripal + 7
   2D6E 1A                 8927 	ld	a,(de)
   2D6F 47                 8928 	ld	b,a
   2D70 21r1Fs42           8929 	ld	hl,#_tripal + 6
   2D73 5E                 8930 	ld	e,(hl)
   2D74 79                 8931 	ld	a,c
   2D75 F5                 8932 	push	af
   2D76 33                 8933 	inc	sp
   2D77 C5                 8934 	push	bc
   2D78 33                 8935 	inc	sp
   2D79 53                 8936 	ld	d,e
   2D7A 1E 06              8937 	ld	e,#0x06
   2D7C D5                 8938 	push	de
   2D7D CDr00s00           8939 	call	_msx2_palette
   2D80 F1                 8940 	pop	af
   2D81 F1                 8941 	pop	af
   2D82                    8942 00103$:
                           8943 ;demo.c:1262: waitVB();
   2D82 76                 8944 		halt 
                           8945 ;demo.c:1263: cmd.source_y = 193;
   2D83 21r2Cs41           8946 	ld	hl, #_cmd + 2
   2D86 36 C1              8947 	ld	(hl),#0xC1
   2D88 23                 8948 	inc	hl
   2D89 36 00              8949 	ld	(hl),#0x00
                           8950 ;demo.c:1264: cmd.dest_y = y;
   2D8B 01r30s41           8951 	ld	bc,#_cmd + 6
   2D8E DD 5E FF           8952 	ld	e,-1 (ix)
   2D91 16 00              8953 	ld	d,#0x00
   2D93 69                 8954 	ld	l,c
   2D94 60                 8955 	ld	h,b
   2D95 73                 8956 	ld	(hl),e
   2D96 23                 8957 	inc	hl
   2D97 72                 8958 	ld	(hl),d
                           8959 ;demo.c:1265: vdp_copier(&cmd);
   2D98 21r2As41           8960 	ld	hl,#_cmd
   2D9B E5                 8961 	push	hl
   2D9C CDr00s00           8962 	call	_vdp_copier
   2D9F F1                 8963 	pop	af
                           8964 ;demo.c:1246: for (y = 0; y < 212; y+=4) {
   2DA0 DD 34 FF           8965 	inc	-1 (ix)
   2DA3 DD 34 FF           8966 	inc	-1 (ix)
   2DA6 DD 34 FF           8967 	inc	-1 (ix)
   2DA9 DD 34 FF           8968 	inc	-1 (ix)
   2DAC C3r83s2C           8969 	jp	00116$
   2DAF                    8970 00119$:
                           8971 ;demo.c:1269: vdp_load_palette(bulbs_palette);
   2DAF 21r66s40           8972 	ld	hl,#_bulbs_palette
   2DB2 E5                 8973 	push	hl
   2DB3 CDr00s00           8974 	call	_vdp_load_palette
   2DB6 F1                 8975 	pop	af
                           8976 ;demo.c:1271: for (x = 0; x < 256; x+=1) {
   2DB7 DD 36 FD 00        8977 	ld	-3 (ix),#0x00
   2DBB DD 36 FE 00        8978 	ld	-2 (ix),#0x00
   2DBF                    8979 00120$:
   2DBF DD 7E FD           8980 	ld	a,-3 (ix)
   2DC2 D6 00              8981 	sub	a,#0x00
   2DC4 DD 7E FE           8982 	ld	a,-2 (ix)
   2DC7 DE 01              8983 	sbc	a,#0x01
   2DC9 F2r48s2E           8984 	jp	P,00123$
                           8985 ;demo.c:1273: cmd.data = 1+((pointframe>>2) & 0xe);
   2DCC 11r36s41           8986 	ld	de,#_cmd + 12
   2DCF 21r2Cs42           8987 	ld	hl,#_pointframe + 0
   2DD2 4E                 8988 	ld	c,(hl)
   2DD3 21r2Ds42           8989 	ld	hl,#_pointframe + 1
   2DD6 46                 8990 	ld	b,(hl)
   2DD7 CB 28              8991 	sra	b
   2DD9 CB 19              8992 	rr	c
   2DDB CB 28              8993 	sra	b
   2DDD CB 19              8994 	rr	c
   2DDF 79                 8995 	ld	a,c
   2DE0 E6 0E              8996 	and	a,#0x0E
   2DE2 3C                 8997 	inc	a
   2DE3 12                 8998 	ld	(de),a
                           8999 ;demo.c:1274: cmd.dest_x = x;
   2DE4 21r2Es41           9000 	ld	hl, #_cmd + 4
   2DE7 DD 7E FD           9001 	ld	a,-3 (ix)
   2DEA 77                 9002 	ld	(hl),a
   2DEB 23                 9003 	inc	hl
   2DEC DD 7E FE           9004 	ld	a,-2 (ix)
   2DEF 77                 9005 	ld	(hl),a
                           9006 ;demo.c:1275: cmd.dest_y = y;
   2DF0 21r30s41           9007 	ld	hl, #_cmd + 6
   2DF3 36 1D              9008 	ld	(hl),#0x1D
   2DF5 23                 9009 	inc	hl
   2DF6 36 00              9010 	ld	(hl),#0x00
                           9011 ;demo.c:1276: cmd.command = 0x50;
   2DF8 3E 50              9012 	ld	a,#0x50
   2DFA 32r38s41           9013 	ld	(#_cmd + 14),a
                           9014 ;demo.c:1277: vdp_copier(&cmd);
   2DFD 21r2As41           9015 	ld	hl,#_cmd
   2E00 E5                 9016 	push	hl
   2E01 CDr00s00           9017 	call	_vdp_copier
   2E04 F1                 9018 	pop	af
                           9019 ;demo.c:1280: cmd.data = 1+((pointframe>>2) & 0xe);
   2E05 01r36s41           9020 	ld	bc,#_cmd + 12
   2E08 21r2Cs42           9021 	ld	hl,#_pointframe + 0
   2E0B 5E                 9022 	ld	e,(hl)
   2E0C 21r2Ds42           9023 	ld	hl,#_pointframe + 1
   2E0F 56                 9024 	ld	d,(hl)
   2E10 CB 2A              9025 	sra	d
   2E12 CB 1B              9026 	rr	e
   2E14 CB 2A              9027 	sra	d
   2E16 CB 1B              9028 	rr	e
   2E18 7B                 9029 	ld	a,e
   2E19 E6 0E              9030 	and	a,#0x0E
   2E1B 3C                 9031 	inc	a
   2E1C 02                 9032 	ld	(bc),a
                           9033 ;demo.c:1281: cmd.dest_y = y;
   2E1D 21r30s41           9034 	ld	hl, #_cmd + 6
   2E20 36 A2              9035 	ld	(hl),#0xA2
   2E22 23                 9036 	inc	hl
   2E23 36 00              9037 	ld	(hl),#0x00
                           9038 ;demo.c:1282: vdp_copier(&cmd);
   2E25 21r2As41           9039 	ld	hl,#_cmd
   2E28 E5                 9040 	push	hl
   2E29 CDr00s00           9041 	call	_vdp_copier
   2E2C F1                 9042 	pop	af
                           9043 ;demo.c:1284: pointframe+=1;
   2E2D FD 21r2Cs42        9044 	ld	iy,#_pointframe
   2E31 FD 34 00           9045 	inc	0 (iy)
   2E34 20 07              9046 	jr	NZ,00149$
   2E36 FD 21r2Cs42        9047 	ld	iy,#_pointframe
   2E3A FD 34 01           9048 	inc	1 (iy)
   2E3D                    9049 00149$:
                           9050 ;demo.c:1271: for (x = 0; x < 256; x+=1) {
   2E3D DD 34 FD           9051 	inc	-3 (ix)
   2E40 20 03              9052 	jr	NZ,00150$
   2E42 DD 34 FE           9053 	inc	-2 (ix)
   2E45                    9054 00150$:
   2E45 C3rBFs2D           9055 	jp	00120$
   2E48                    9056 00123$:
                           9057 ;demo.c:1287: initpoints = 1;
   2E48 21r2Bs42           9058 	ld	hl,#_initpoints + 0
   2E4B 36 01              9059 	ld	(hl), #0x01
                           9060 ;demo.c:1288: ltrpointer = 0;
   2E4D 21rBEs41           9061 	ld	hl,#_ltrpointer + 0
   2E50 36 00              9062 	ld	(hl), #0x00
   2E52 21rBFs41           9063 	ld	hl,#_ltrpointer + 1
   2E55 36 00              9064 	ld	(hl), #0x00
   2E57                    9065 00105$:
                           9066 ;demo.c:1291: cmd.argument = 0x0;
   2E57 3E 00              9067 	ld	a,#0x00
   2E59 32r37s41           9068 	ld	(#_cmd + 13),a
                           9069 ;demo.c:1293: cmd.data = 1+((pointframe>>2) & 0xe);
   2E5C 01r36s41           9070 	ld	bc,#_cmd + 12
   2E5F 21r2Cs42           9071 	ld	hl,#_pointframe + 0
   2E62 5E                 9072 	ld	e,(hl)
   2E63 21r2Ds42           9073 	ld	hl,#_pointframe + 1
   2E66 56                 9074 	ld	d,(hl)
   2E67 CB 2A              9075 	sra	d
   2E69 CB 1B              9076 	rr	e
   2E6B CB 2A              9077 	sra	d
   2E6D CB 1B              9078 	rr	e
   2E6F 7B                 9079 	ld	a,e
   2E70 E6 0E              9080 	and	a,#0x0E
   2E72 3C                 9081 	inc	a
   2E73 02                 9082 	ld	(bc),a
                           9083 ;demo.c:1295: for (x = 30; x < 162; x+=1) {
   2E74 DD 36 FD 1E        9084 	ld	-3 (ix),#0x1E
   2E78 DD 36 FE 00        9085 	ld	-2 (ix),#0x00
   2E7C                    9086 00124$:
   2E7C DD 7E FD           9087 	ld	a,-3 (ix)
   2E7F D6 A2              9088 	sub	a,#0xA2
   2E81 DD 7E FE           9089 	ld	a,-2 (ix)
   2E84 DE 00              9090 	sbc	a,#0x00
   2E86 F2rCFs2E           9091 	jp	P,00127$
                           9092 ;demo.c:1296: y = 64+(sintabx[(x+pointframe) & 255]>>1);
   2E89 21r2Cs42           9093 	ld	hl,#_pointframe
   2E8C DD 7E FD           9094 	ld	a,-3 (ix)
   2E8F 86                 9095 	add	a,(hl)
   2E90 5F                 9096 	ld	e,a
   2E91 DD 7E FE           9097 	ld	a,-2 (ix)
   2E94 23                 9098 	inc	hl
   2E95 8E                 9099 	adc	a,(hl)
   2E96 16 00              9100 	ld	d,#0x00
   2E98 21r2Cs00           9101 	ld	hl,#_sintabx
   2E9B 19                 9102 	add	hl,de
   2E9C 7E                 9103 	ld	a,(hl)
   2E9D CB 3F              9104 	srl	a
   2E9F C6 40              9105 	add	a,#0x40
   2EA1 4F                 9106 	ld	c,a
                           9107 ;demo.c:1297: cmd.dest_x = y;
   2EA2 11r2Es41           9108 	ld	de,#_cmd + 4
   2EA5 06 00              9109 	ld	b,#0x00
   2EA7 6B                 9110 	ld	l,e
   2EA8 62                 9111 	ld	h,d
   2EA9 71                 9112 	ld	(hl),c
   2EAA 23                 9113 	inc	hl
   2EAB 70                 9114 	ld	(hl),b
                           9115 ;demo.c:1298: cmd.dest_y = x;
   2EAC 21r30s41           9116 	ld	hl, #_cmd + 6
   2EAF DD 7E FD           9117 	ld	a,-3 (ix)
   2EB2 77                 9118 	ld	(hl),a
   2EB3 23                 9119 	inc	hl
   2EB4 DD 7E FE           9120 	ld	a,-2 (ix)
   2EB7 77                 9121 	ld	(hl),a
                           9122 ;demo.c:1299: cmd.command = 0x53;
   2EB8 3E 53              9123 	ld	a,#0x53
   2EBA 32r38s41           9124 	ld	(#_cmd + 14),a
                           9125 ;demo.c:1300: vdp_copier(&cmd);
   2EBD 21r2As41           9126 	ld	hl,#_cmd
   2EC0 E5                 9127 	push	hl
   2EC1 CDr00s00           9128 	call	_vdp_copier
   2EC4 F1                 9129 	pop	af
                           9130 ;demo.c:1295: for (x = 30; x < 162; x+=1) {
   2EC5 DD 34 FD           9131 	inc	-3 (ix)
   2EC8 20 03              9132 	jr	NZ,00152$
   2ECA DD 34 FE           9133 	inc	-2 (ix)
   2ECD                    9134 00152$:
   2ECD 18 AD              9135 	jr	00124$
   2ECF                    9136 00127$:
                           9137 ;demo.c:1302: pointframe+=2;
   2ECF 21r2Cs42           9138 	ld	hl,#_pointframe
   2ED2 7E                 9139 	ld	a,(hl)
   2ED3 C6 02              9140 	add	a,#0x02
   2ED5 23                 9141 	inc	hl
   2ED6 2B                 9142 	dec	hl
   2ED7 C5                 9143 	push	bc
   2ED8 4F                 9144 	ld	c, a
   2ED9 23                 9145 	inc	hl
   2EDA 7E                 9146 	ld	a, (hl)
   2EDB 47                 9147 	ld	b, a
   2EDC 79                 9148 	ld	a, c
   2EDD 2B                 9149 	dec	hl
   2EDE 77                 9150 	ld	(hl), a
   2EDF 78                 9151 	ld	a, b
   2EE0 C1                 9152 	pop	bc
   2EE1 CE 00              9153 	adc	a,#0x00
   2EE3 23                 9154 	inc	hl
   2EE4 77                 9155 	ld	(hl),a
                           9156 ;demo.c:1304: if (greetindex == 0) {
   2EE5 3Ar2Es42           9157 	ld	a,(#_greetindex+0)
   2EE8 21r2Fs42           9158 	ld	hl,#_greetindex + 1
   2EEB B6                 9159 	or	a,(hl)
   2EEC 20 17              9160 	jr	NZ,00107$
                           9161 ;demo.c:1305: slowend = 27;
   2EEE 21rC0s41           9162 	ld	hl,#_slowend + 0
   2EF1 36 1B              9163 	ld	(hl), #0x1B
   2EF3 21rC1s41           9164 	ld	hl,#_slowend + 1
   2EF6 36 00              9165 	ld	(hl), #0x00
                           9166 ;demo.c:1306: drawstrslow("GREETINGS TO VARIOUS GROUPS",10,20);
   2EF8 21 0A 14           9167 	ld	hl,#0x140A
   2EFB E5                 9168 	push	hl
   2EFC 21rB1s2F           9169 	ld	hl,#__str_9
   2EFF E5                 9170 	push	hl
   2F00 CDrDAs10           9171 	call	_drawstrslow
   2F03 F1                 9172 	pop	af
   2F04 F1                 9173 	pop	af
   2F05                    9174 00107$:
                           9175 ;demo.c:1308: if (greetindex == 1) {
   2F05 3Ar2Es42           9176 	ld	a,(#_greetindex+0)
   2F08 D6 01              9177 	sub	a,#0x01
   2F0A 20 06              9178 	jr	NZ,00153$
   2F0C 3Ar2Fs42           9179 	ld	a,(#_greetindex+1)
   2F0F B7                 9180 	or	a,a
   2F10 28 02              9181 	jr	Z,00154$
   2F12                    9182 00153$:
   2F12 18 17              9183 	jr	00109$
   2F14                    9184 00154$:
                           9185 ;demo.c:1309: slowend = 33;
   2F14 21rC0s41           9186 	ld	hl,#_slowend + 0
   2F17 36 21              9187 	ld	(hl), #0x21
   2F19 21rC1s41           9188 	ld	hl,#_slowend + 1
   2F1C 36 00              9189 	ld	(hl), #0x00
                           9190 ;demo.c:1310: drawstrslow("Trilobit  Prismbeings  Ivory Labs",10,164);
   2F1E 21 0A A4           9191 	ld	hl,#0xA40A
   2F21 E5                 9192 	push	hl
   2F22 21rCDs2F           9193 	ld	hl,#__str_10
   2F25 E5                 9194 	push	hl
   2F26 CDrDAs10           9195 	call	_drawstrslow
   2F29 F1                 9196 	pop	af
   2F2A F1                 9197 	pop	af
   2F2B                    9198 00109$:
                           9199 ;demo.c:1312: if (greetindex == 2) {
   2F2B 3Ar2Es42           9200 	ld	a,(#_greetindex+0)
   2F2E D6 02              9201 	sub	a,#0x02
   2F30 20 06              9202 	jr	NZ,00155$
   2F32 3Ar2Fs42           9203 	ld	a,(#_greetindex+1)
   2F35 B7                 9204 	or	a,a
   2F36 28 02              9205 	jr	Z,00156$
   2F38                    9206 00155$:
   2F38 18 17              9207 	jr	00111$
   2F3A                    9208 00156$:
                           9209 ;demo.c:1313: slowend = 29;
   2F3A 21rC0s41           9210 	ld	hl,#_slowend + 0
   2F3D 36 1D              9211 	ld	(hl), #0x1D
   2F3F 21rC1s41           9212 	ld	hl,#_slowend + 1
   2F42 36 00              9213 	ld	(hl), #0x00
                           9214 ;demo.c:1314: drawstrslow("PWP  Dekadence  Paraguay  ISO",18,174);
   2F44 21 12 AE           9215 	ld	hl,#0xAE12
   2F47 E5                 9216 	push	hl
   2F48 21rEFs2F           9217 	ld	hl,#__str_11
   2F4B E5                 9218 	push	hl
   2F4C CDrDAs10           9219 	call	_drawstrslow
   2F4F F1                 9220 	pop	af
   2F50 F1                 9221 	pop	af
   2F51                    9222 00111$:
                           9223 ;demo.c:1316: if (greetindex == 3) {
   2F51 3Ar2Es42           9224 	ld	a,(#_greetindex+0)
   2F54 D6 03              9225 	sub	a,#0x03
   2F56 20 06              9226 	jr	NZ,00157$
   2F58 3Ar2Fs42           9227 	ld	a,(#_greetindex+1)
   2F5B B7                 9228 	or	a,a
   2F5C 28 02              9229 	jr	Z,00158$
   2F5E                    9230 00157$:
   2F5E 18 17              9231 	jr	00113$
   2F60                    9232 00158$:
                           9233 ;demo.c:1317: slowend = 24;
   2F60 21rC0s41           9234 	ld	hl,#_slowend + 0
   2F63 36 18              9235 	ld	(hl), #0x18
   2F65 21rC1s41           9236 	ld	hl,#_slowend + 1
   2F68 36 00              9237 	ld	(hl), #0x00
                           9238 ;demo.c:1318: drawstrslow("Cartoon Horse Demo Force",20,184);
   2F6A 21 14 B8           9239 	ld	hl,#0xB814
   2F6D E5                 9240 	push	hl
   2F6E 21r0Ds30           9241 	ld	hl,#__str_12
   2F71 E5                 9242 	push	hl
   2F72 CDrDAs10           9243 	call	_drawstrslow
   2F75 F1                 9244 	pop	af
   2F76 F1                 9245 	pop	af
   2F77                    9246 00113$:
                           9247 ;demo.c:1320: if (ltrpointer >= slowend) { greetindex++; ltrpointer = 0; }
   2F77 21rC0s41           9248 	ld	hl,#_slowend
   2F7A 3ArBEs41           9249 	ld	a,(#_ltrpointer+0)
   2F7D 96                 9250 	sub	a,(hl)
   2F7E 3ArBFs41           9251 	ld	a,(#_ltrpointer+1)
   2F81 23                 9252 	inc	hl
   2F82 9E                 9253 	sbc	a,(hl)
   2F83 FArA0s2F           9254 	jp	M,00115$
   2F86 FD 21r2Es42        9255 	ld	iy,#_greetindex
   2F8A FD 34 00           9256 	inc	0 (iy)
   2F8D 20 07              9257 	jr	NZ,00159$
   2F8F FD 21r2Es42        9258 	ld	iy,#_greetindex
   2F93 FD 34 01           9259 	inc	1 (iy)
   2F96                    9260 00159$:
   2F96 21rBEs41           9261 	ld	hl,#_ltrpointer + 0
   2F99 36 00              9262 	ld	(hl), #0x00
   2F9B 21rBFs41           9263 	ld	hl,#_ltrpointer + 1
   2F9E 36 00              9264 	ld	(hl), #0x00
   2FA0                    9265 00115$:
                           9266 ;demo.c:1322: msx2_palette(4,0,0,0);
   2FA0 21 00 00           9267 	ld	hl,#0x0000
   2FA3 E5                 9268 	push	hl
   2FA4 2E 04              9269 	ld	l, #0x04
   2FA6 E5                 9270 	push	hl
   2FA7 CDr00s00           9271 	call	_msx2_palette
   2FAA F1                 9272 	pop	af
   2FAB F1                 9273 	pop	af
   2FAC DD F9              9274 	ld	sp,ix
   2FAE DD E1              9275 	pop	ix
   2FB0 C9                 9276 	ret
   2FB1                    9277 _points_end::
   2FB1                    9278 __str_9:
   2FB1 47 52 45 45 54 49  9279 	.ascii "GREETINGS TO VARIOUS GROUPS"
        4E 47 53 20 54 4F
        20 56 41 52 49 4F
        55 53 20 47 52 4F
        55 50 53
   2FCC 00                 9280 	.db 0x00
   2FCD                    9281 __str_10:
   2FCD 54 72 69 6C 6F 62  9282 	.ascii "Trilobit  Prismbeings  Ivory Labs"
        69 74 20 20 50 72
        69 73 6D 62 65 69
        6E 67 73 20 20 49
        76 6F 72 79 20 4C
        61 62 73
   2FEE 00                 9283 	.db 0x00
   2FEF                    9284 __str_11:
   2FEF 50 57 50 20 20 44  9285 	.ascii "PWP  Dekadence  Paraguay  ISO"
        65 6B 61 64 65 6E
        63 65 20 20 50 61
        72 61 67 75 61 79
        20 20 49 53 4F
   300C 00                 9286 	.db 0x00
   300D                    9287 __str_12:
   300D 43 61 72 74 6F 6F  9288 	.ascii "Cartoon Horse Demo Force"
        6E 20 48 6F 72 73
        65 20 44 65 6D 6F
        20 46 6F 72 63 65
   3025 00                 9289 	.db 0x00
                           9290 ;demo.c:1327: void bigtext() {
                           9291 ;	---------------------------------
                           9292 ; Function bigtext
                           9293 ; ---------------------------------
   3026                    9294 _bigtext_start::
   3026                    9295 _bigtext:
   3026 DD E5              9296 	push	ix
   3028 DD 21 00 00        9297 	ld	ix,#0
   302C DD 39              9298 	add	ix,sp
   302E F5                 9299 	push	af
                           9300 ;demo.c:1329: if (bigtextp == 0) {
   302F 3Ar30s42           9301 	ld	a,(#_bigtextp+0)
   3032 FD 21r30s42        9302 	ld	iy,#_bigtextp
   3036 FD B6 01           9303 	or	a,1 (iy)
   3039 C2r46s31           9304 	jp	NZ,00102$
                           9305 ;demo.c:1330: cmd.size_x = 2;
   303C 21r32s41           9306 	ld	hl, #_cmd + 8
   303F 36 02              9307 	ld	(hl),#0x02
   3041 23                 9308 	inc	hl
   3042 36 00              9309 	ld	(hl),#0x00
                           9310 ;demo.c:1331: cmd.size_y = 212;
   3044 21r34s41           9311 	ld	hl, #_cmd + 10
   3047 36 D4              9312 	ld	(hl),#0xD4
   3049 23                 9313 	inc	hl
   304A 36 00              9314 	ld	(hl),#0x00
                           9315 ;demo.c:1332: cmd.data = 0;
                           9316 ;demo.c:1333: cmd.argument = 0x00; // from 70xY to left
   304C 3E 00              9317 	ld	a,#0x00
   304E 32r36s41           9318 	ld	(#_cmd + 12),a
   3051 32r37s41           9319 	ld	(#_cmd + 13),a
                           9320 ;demo.c:1334: cmd.command = 0xd0; // vram to vram, y only
   3054 01r38s41           9321 	ld	bc,#_cmd + 14
   3057 3E D0              9322 	ld	a,#0xD0
   3059 02                 9323 	ld	(bc),a
                           9324 ;demo.c:1335: cmd.source_x = 255;
   305A 21r2As41           9325 	ld	hl,#_cmd
   305D 36 FF              9326 	ld	(hl),#0xFF
   305F 23                 9327 	inc	hl
   3060 36 00              9328 	ld	(hl),#0x00
                           9329 ;demo.c:1336: cmd.source_y = 0;
   3062 21r2Cs41           9330 	ld	hl, #_cmd + 2
   3065 36 00              9331 	ld	(hl),#0x00
   3067 23                 9332 	inc	hl
   3068 36 00              9333 	ld	(hl),#0x00
                           9334 ;demo.c:1338: for (x = 0; x < 256; x+=4) {
   306A 01 00 00           9335 	ld	bc,#0x0000
   306D                    9336 00115$:
   306D 79                 9337 	ld	a,c
   306E D6 00              9338 	sub	a,#0x00
   3070 78                 9339 	ld	a,b
   3071 DE 01              9340 	sbc	a,#0x01
   3073 F2rAAs30           9341 	jp	P,00118$
                           9342 ;demo.c:1339: waitVB();
   3076 76                 9343 		halt 
                           9344 ;demo.c:1340: cmd.dest_y = 256;
   3077 11r30s41           9345 	ld	de,#_cmd + 6
   307A EB                 9346 	ex	de,hl
   307B 36 00              9347 	ld	(hl),#0x00
   307D 23                 9348 	inc	hl
   307E 36 01              9349 	ld	(hl),#0x01
                           9350 ;demo.c:1341: cmd.dest_x = x;
   3080 11r2Es41           9351 	ld	de,#_cmd + 4
   3083 EB                 9352 	ex	de,hl
   3084 71                 9353 	ld	(hl),c
   3085 23                 9354 	inc	hl
   3086 70                 9355 	ld	(hl),b
                           9356 ;demo.c:1342: vdp_copier(&cmd);
   3087 C5                 9357 	push	bc
   3088 21r2As41           9358 	ld	hl,#_cmd
   308B E5                 9359 	push	hl
   308C CDr00s00           9360 	call	_vdp_copier
   308F F1                 9361 	pop	af
   3090 C1                 9362 	pop	bc
                           9363 ;demo.c:1343: cmd.dest_y = 0;
   3091 11r30s41           9364 	ld	de,#_cmd + 6
   3094 EB                 9365 	ex	de,hl
   3095 36 00              9366 	ld	(hl),#0x00
   3097 23                 9367 	inc	hl
   3098 36 00              9368 	ld	(hl),#0x00
                           9369 ;demo.c:1344: vdp_copier(&cmd);
   309A C5                 9370 	push	bc
   309B 21r2As41           9371 	ld	hl,#_cmd
   309E E5                 9372 	push	hl
   309F CDr00s00           9373 	call	_vdp_copier
   30A2 F1                 9374 	pop	af
   30A3 C1                 9375 	pop	bc
                           9376 ;demo.c:1338: for (x = 0; x < 256; x+=4) {
   30A4 03                 9377 	inc	bc
   30A5 03                 9378 	inc	bc
   30A6 03                 9379 	inc	bc
   30A7 03                 9380 	inc	bc
   30A8 18 C3              9381 	jr	00115$
   30AA                    9382 00118$:
                           9383 ;demo.c:1347: for (x = 254; x > 0; x-=4) {
   30AA 01 FE 00           9384 	ld	bc,#0x00FE
   30AD                    9385 00119$:
   30AD 3E 00              9386 	ld	a,#0x00
   30AF 91                 9387 	sub	a,c
   30B0 3E 00              9388 	ld	a,#0x00
   30B2 98                 9389 	sbc	a,b
   30B3 F2rEEs30           9390 	jp	P,00122$
                           9391 ;demo.c:1348: waitVB();
   30B6 76                 9392 		halt 
                           9393 ;demo.c:1349: cmd.dest_y = 256;
   30B7 11r30s41           9394 	ld	de,#_cmd + 6
   30BA EB                 9395 	ex	de,hl
   30BB 36 00              9396 	ld	(hl),#0x00
   30BD 23                 9397 	inc	hl
   30BE 36 01              9398 	ld	(hl),#0x01
                           9399 ;demo.c:1350: cmd.dest_x = x;
   30C0 11r2Es41           9400 	ld	de,#_cmd + 4
   30C3 EB                 9401 	ex	de,hl
   30C4 71                 9402 	ld	(hl),c
   30C5 23                 9403 	inc	hl
   30C6 70                 9404 	ld	(hl),b
                           9405 ;demo.c:1351: vdp_copier(&cmd);
   30C7 C5                 9406 	push	bc
   30C8 21r2As41           9407 	ld	hl,#_cmd
   30CB E5                 9408 	push	hl
   30CC CDr00s00           9409 	call	_vdp_copier
   30CF F1                 9410 	pop	af
   30D0 C1                 9411 	pop	bc
                           9412 ;demo.c:1352: cmd.dest_y = 0;
   30D1 11r30s41           9413 	ld	de,#_cmd + 6
   30D4 EB                 9414 	ex	de,hl
   30D5 36 00              9415 	ld	(hl),#0x00
   30D7 23                 9416 	inc	hl
   30D8 36 00              9417 	ld	(hl),#0x00
                           9418 ;demo.c:1353: vdp_copier(&cmd);
   30DA C5                 9419 	push	bc
   30DB 21r2As41           9420 	ld	hl,#_cmd
   30DE E5                 9421 	push	hl
   30DF CDr00s00           9422 	call	_vdp_copier
   30E2 F1                 9423 	pop	af
   30E3 C1                 9424 	pop	bc
                           9425 ;demo.c:1347: for (x = 254; x > 0; x-=4) {
   30E4 79                 9426 	ld	a,c
   30E5 C6 FC              9427 	add	a,#0xFC
   30E7 4F                 9428 	ld	c,a
   30E8 78                 9429 	ld	a,b
   30E9 CE FF              9430 	adc	a,#0xFF
   30EB 47                 9431 	ld	b,a
   30EC 18 BF              9432 	jr	00119$
   30EE                    9433 00122$:
                           9434 ;demo.c:1356: vdp_load_palette(twister_palette);
   30EE 21rA6s40           9435 	ld	hl,#_twister_palette
   30F1 E5                 9436 	push	hl
   30F2 CDr00s00           9437 	call	_vdp_load_palette
   30F5 F1                 9438 	pop	af
                           9439 ;demo.c:1357: drawstr2x("DIGITAL",26,44);
   30F6 21 1A 2C           9440 	ld	hl,#0x2C1A
   30F9 E5                 9441 	push	hl
   30FA 21r58s35           9442 	ld	hl,#__str_13
   30FD E5                 9443 	push	hl
   30FE CDr78s11           9444 	call	_drawstr2x
   3101 F1                 9445 	pop	af
   3102 F1                 9446 	pop	af
                           9447 ;demo.c:1358: drawstr2x("SOUNDS",27,84);
   3103 21 1B 54           9448 	ld	hl,#0x541B
   3106 E5                 9449 	push	hl
   3107 21r60s35           9450 	ld	hl,#__str_14
   310A E5                 9451 	push	hl
   310B CDr78s11           9452 	call	_drawstr2x
   310E F1                 9453 	pop	af
   310F F1                 9454 	pop	af
                           9455 ;demo.c:1359: drawstr2x("SYSTEM",25,124);
   3110 21 19 7C           9456 	ld	hl,#0x7C19
   3113 E5                 9457 	push	hl
   3114 21r67s35           9458 	ld	hl,#__str_15
   3117 E5                 9459 	push	hl
   3118 CDr78s11           9460 	call	_drawstr2x
   311B F1                 9461 	pop	af
   311C F1                 9462 	pop	af
                           9463 ;demo.c:1360: bigtextp++;
   311D FD 21r30s42        9464 	ld	iy,#_bigtextp
   3121 FD 34 00           9465 	inc	0 (iy)
   3124 20 07              9466 	jr	NZ,00167$
   3126 FD 21r30s42        9467 	ld	iy,#_bigtextp
   312A FD 34 01           9468 	inc	1 (iy)
   312D                    9469 00167$:
                           9470 ;demo.c:1361: tri_inited = 2;
   312D 21r11s42           9471 	ld	hl,#_tri_inited + 0
   3130 36 02              9472 	ld	(hl), #0x02
                           9473 ;demo.c:1362: ff = 0;
   3132 21rC2s41           9474 	ld	hl,#_ff + 0
   3135 36 00              9475 	ld	(hl), #0x00
   3137 21rC3s41           9476 	ld	hl,#_ff + 1
   313A 36 00              9477 	ld	(hl), #0x00
                           9478 ;demo.c:1363: ltrpointer = 0;
   313C 21rBEs41           9479 	ld	hl,#_ltrpointer + 0
   313F 36 00              9480 	ld	(hl), #0x00
   3141 21rBFs41           9481 	ld	hl,#_ltrpointer + 1
   3144 36 00              9482 	ld	(hl), #0x00
   3146                    9483 00102$:
                           9484 ;demo.c:1366: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3146 21rC2s41           9485 	ld	hl,#_ff + 0
   3149 4E                 9486 	ld	c,(hl)
   314A 21rC3s41           9487 	ld	hl,#_ff + 1
   314D 46                 9488 	ld	b,(hl)
   314E CB 28              9489 	sra	b
   3150 CB 19              9490 	rr	c
   3152 CB 28              9491 	sra	b
   3154 CB 19              9492 	rr	c
   3156 21rC2s41           9493 	ld	hl,#_ff + 0
   3159 5E                 9494 	ld	e,(hl)
   315A 21rC3s41           9495 	ld	hl,#_ff + 1
   315D 56                 9496 	ld	d,(hl)
   315E CB 2A              9497 	sra	d
   3160 CB 1B              9498 	rr	e
   3162 CB 2A              9499 	sra	d
   3164 CB 1B              9500 	rr	e
   3166 CB 2A              9501 	sra	d
   3168 CB 1B              9502 	rr	e
   316A 43                 9503 	ld	b,e
   316B 79                 9504 	ld	a,c
   316C F5                 9505 	push	af
   316D 33                 9506 	inc	sp
   316E C5                 9507 	push	bc
   316F 33                 9508 	inc	sp
   3170 41                 9509 	ld	b,c
   3171 0E 04              9510 	ld	c,#0x04
   3173 C5                 9511 	push	bc
   3174 CDr00s00           9512 	call	_msx2_palette
   3177 F1                 9513 	pop	af
   3178 F1                 9514 	pop	af
                           9515 ;demo.c:1367: ff+=2;
   3179 21rC2s41           9516 	ld	hl,#_ff
   317C 7E                 9517 	ld	a,(hl)
   317D C6 02              9518 	add	a,#0x02
   317F 23                 9519 	inc	hl
   3180 2B                 9520 	dec	hl
   3181 C5                 9521 	push	bc
   3182 4F                 9522 	ld	c, a
   3183 23                 9523 	inc	hl
   3184 7E                 9524 	ld	a, (hl)
   3185 47                 9525 	ld	b, a
   3186 79                 9526 	ld	a, c
   3187 2B                 9527 	dec	hl
   3188 77                 9528 	ld	(hl), a
   3189 78                 9529 	ld	a, b
   318A C1                 9530 	pop	bc
   318B CE 00              9531 	adc	a,#0x00
   318D 23                 9532 	inc	hl
   318E 77                 9533 	ld	(hl),a
                           9534 ;demo.c:1369: if (ff == 600) {
   318F 3ArC2s41           9535 	ld	a,(#_ff+0)
   3192 D6 58              9536 	sub	a,#0x58
   3194 20 07              9537 	jr	NZ,00170$
   3196 3ArC3s41           9538 	ld	a,(#_ff+1)
   3199 D6 02              9539 	sub	a,#0x02
   319B 28 03              9540 	jr	Z,00171$
   319D                    9541 00170$:
   319D C3r2Fs33           9542 	jp	00104$
   31A0                    9543 00171$:
                           9544 ;demo.c:1370: cmd.size_x = 2;
   31A0 21r32s41           9545 	ld	hl, #_cmd + 8
   31A3 36 02              9546 	ld	(hl),#0x02
   31A5 23                 9547 	inc	hl
   31A6 36 00              9548 	ld	(hl),#0x00
                           9549 ;demo.c:1371: cmd.size_y = 212;
   31A8 21r34s41           9550 	ld	hl, #_cmd + 10
   31AB 36 D4              9551 	ld	(hl),#0xD4
   31AD 23                 9552 	inc	hl
   31AE 36 00              9553 	ld	(hl),#0x00
                           9554 ;demo.c:1372: cmd.data = 0;
                           9555 ;demo.c:1373: cmd.argument = 0x00; // from 70xY to left
   31B0 3E 00              9556 	ld	a,#0x00
   31B2 32r36s41           9557 	ld	(#_cmd + 12),a
   31B5 32r37s41           9558 	ld	(#_cmd + 13),a
                           9559 ;demo.c:1374: cmd.command = 0xd0; // vram to vram, y only
   31B8 01r38s41           9560 	ld	bc,#_cmd + 14
   31BB 3E D0              9561 	ld	a,#0xD0
   31BD 02                 9562 	ld	(bc),a
                           9563 ;demo.c:1375: cmd.source_x = 255;
   31BE 21r2As41           9564 	ld	hl,#_cmd
   31C1 36 FF              9565 	ld	(hl),#0xFF
   31C3 23                 9566 	inc	hl
   31C4 36 00              9567 	ld	(hl),#0x00
                           9568 ;demo.c:1376: cmd.source_y = 0;
   31C6 21r2Cs41           9569 	ld	hl, #_cmd + 2
   31C9 36 00              9570 	ld	(hl),#0x00
   31CB 23                 9571 	inc	hl
   31CC 36 00              9572 	ld	(hl),#0x00
                           9573 ;demo.c:1378: for (x = 254; x > 0; x-=4) {
   31CE DD 36 FE FE        9574 	ld	-2 (ix),#0xFE
   31D2 DD 36 FF 00        9575 	ld	-1 (ix),#0x00
   31D6                    9576 00123$:
   31D6 3E 00              9577 	ld	a,#0x00
   31D8 DD 96 FE           9578 	sub	a,-2 (ix)
   31DB 3E 00              9579 	ld	a,#0x00
   31DD DD 9E FF           9580 	sbc	a,-1 (ix)
   31E0 F2r6Bs32           9581 	jp	P,00126$
                           9582 ;demo.c:1379: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   31E3 21rC2s41           9583 	ld	hl,#_ff + 0
   31E6 5E                 9584 	ld	e,(hl)
   31E7 21rC3s41           9585 	ld	hl,#_ff + 1
   31EA 56                 9586 	ld	d,(hl)
   31EB CB 2A              9587 	sra	d
   31ED CB 1B              9588 	rr	e
   31EF CB 2A              9589 	sra	d
   31F1 CB 1B              9590 	rr	e
   31F3 21rC2s41           9591 	ld	hl,#_ff + 0
   31F6 56                 9592 	ld	d,(hl)
   31F7 21rC3s41           9593 	ld	hl,#_ff + 1
   31FA 4E                 9594 	ld	c,(hl)
   31FB CB 29              9595 	sra	c
   31FD CB 1A              9596 	rr	d
   31FF CB 29              9597 	sra	c
   3201 CB 1A              9598 	rr	d
   3203 CB 29              9599 	sra	c
   3205 CB 1A              9600 	rr	d
   3207 7B                 9601 	ld	a,e
   3208 F5                 9602 	push	af
   3209 33                 9603 	inc	sp
   320A D5                 9604 	push	de
   320B 33                 9605 	inc	sp
   320C 53                 9606 	ld	d,e
   320D 1E 04              9607 	ld	e,#0x04
   320F D5                 9608 	push	de
   3210 CDr00s00           9609 	call	_msx2_palette
   3213 F1                 9610 	pop	af
   3214 F1                 9611 	pop	af
                           9612 ;demo.c:1380: ff+=2;
   3215 21rC2s41           9613 	ld	hl,#_ff
   3218 7E                 9614 	ld	a,(hl)
   3219 C6 02              9615 	add	a,#0x02
   321B 23                 9616 	inc	hl
   321C 2B                 9617 	dec	hl
   321D C5                 9618 	push	bc
   321E 4F                 9619 	ld	c, a
   321F 23                 9620 	inc	hl
   3220 7E                 9621 	ld	a, (hl)
   3221 47                 9622 	ld	b, a
   3222 79                 9623 	ld	a, c
   3223 2B                 9624 	dec	hl
   3224 77                 9625 	ld	(hl), a
   3225 78                 9626 	ld	a, b
   3226 C1                 9627 	pop	bc
   3227 CE 00              9628 	adc	a,#0x00
   3229 23                 9629 	inc	hl
   322A 77                 9630 	ld	(hl),a
                           9631 ;demo.c:1381: waitVB();
   322B 76                 9632 		halt 
                           9633 ;demo.c:1382: cmd.dest_y = 256;
   322C 21r30s41           9634 	ld	hl, #_cmd + 6
   322F 36 00              9635 	ld	(hl),#0x00
   3231 23                 9636 	inc	hl
   3232 36 01              9637 	ld	(hl),#0x01
                           9638 ;demo.c:1383: cmd.dest_x = x;
   3234 21r2Es41           9639 	ld	hl, #_cmd + 4
   3237 DD 7E FE           9640 	ld	a,-2 (ix)
   323A 77                 9641 	ld	(hl),a
   323B 23                 9642 	inc	hl
   323C DD 7E FF           9643 	ld	a,-1 (ix)
   323F 77                 9644 	ld	(hl),a
                           9645 ;demo.c:1384: vdp_copier(&cmd);
   3240 21r2As41           9646 	ld	hl,#_cmd
   3243 E5                 9647 	push	hl
   3244 CDr00s00           9648 	call	_vdp_copier
   3247 F1                 9649 	pop	af
                           9650 ;demo.c:1385: cmd.dest_y = 0;
   3248 21r30s41           9651 	ld	hl, #_cmd + 6
   324B 36 00              9652 	ld	(hl),#0x00
   324D 23                 9653 	inc	hl
   324E 36 00              9654 	ld	(hl),#0x00
                           9655 ;demo.c:1386: vdp_copier(&cmd);
   3250 21r2As41           9656 	ld	hl,#_cmd
   3253 E5                 9657 	push	hl
   3254 CDr00s00           9658 	call	_vdp_copier
   3257 F1                 9659 	pop	af
                           9660 ;demo.c:1378: for (x = 254; x > 0; x-=4) {
   3258 DD 7E FE           9661 	ld	a,-2 (ix)
   325B C6 FC              9662 	add	a,#0xFC
   325D DD 77 FE           9663 	ld	-2 (ix),a
   3260 DD 7E FF           9664 	ld	a,-1 (ix)
   3263 CE FF              9665 	adc	a,#0xFF
   3265 DD 77 FF           9666 	ld	-1 (ix),a
   3268 C3rD6s31           9667 	jp	00123$
   326B                    9668 00126$:
                           9669 ;demo.c:1390: for (x = 0; x < 256; x+=4) {
   326B DD 36 FE 00        9670 	ld	-2 (ix),#0x00
   326F DD 36 FF 00        9671 	ld	-1 (ix),#0x00
   3273                    9672 00127$:
   3273 DD 7E FE           9673 	ld	a,-2 (ix)
   3276 D6 00              9674 	sub	a,#0x00
   3278 DD 7E FF           9675 	ld	a,-1 (ix)
   327B DE 01              9676 	sbc	a,#0x01
   327D F2r08s33           9677 	jp	P,00130$
                           9678 ;demo.c:1391: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3280 21rC2s41           9679 	ld	hl,#_ff + 0
   3283 5E                 9680 	ld	e,(hl)
   3284 21rC3s41           9681 	ld	hl,#_ff + 1
   3287 56                 9682 	ld	d,(hl)
   3288 CB 2A              9683 	sra	d
   328A CB 1B              9684 	rr	e
   328C CB 2A              9685 	sra	d
   328E CB 1B              9686 	rr	e
   3290 21rC2s41           9687 	ld	hl,#_ff + 0
   3293 56                 9688 	ld	d,(hl)
   3294 21rC3s41           9689 	ld	hl,#_ff + 1
   3297 4E                 9690 	ld	c,(hl)
   3298 CB 29              9691 	sra	c
   329A CB 1A              9692 	rr	d
   329C CB 29              9693 	sra	c
   329E CB 1A              9694 	rr	d
   32A0 CB 29              9695 	sra	c
   32A2 CB 1A              9696 	rr	d
   32A4 7B                 9697 	ld	a,e
   32A5 F5                 9698 	push	af
   32A6 33                 9699 	inc	sp
   32A7 D5                 9700 	push	de
   32A8 33                 9701 	inc	sp
   32A9 53                 9702 	ld	d,e
   32AA 1E 04              9703 	ld	e,#0x04
   32AC D5                 9704 	push	de
   32AD CDr00s00           9705 	call	_msx2_palette
   32B0 F1                 9706 	pop	af
   32B1 F1                 9707 	pop	af
                           9708 ;demo.c:1392: ff+=2;
   32B2 21rC2s41           9709 	ld	hl,#_ff
   32B5 7E                 9710 	ld	a,(hl)
   32B6 C6 02              9711 	add	a,#0x02
   32B8 23                 9712 	inc	hl
   32B9 2B                 9713 	dec	hl
   32BA C5                 9714 	push	bc
   32BB 4F                 9715 	ld	c, a
   32BC 23                 9716 	inc	hl
   32BD 7E                 9717 	ld	a, (hl)
   32BE 47                 9718 	ld	b, a
   32BF 79                 9719 	ld	a, c
   32C0 2B                 9720 	dec	hl
   32C1 77                 9721 	ld	(hl), a
   32C2 78                 9722 	ld	a, b
   32C3 C1                 9723 	pop	bc
   32C4 CE 00              9724 	adc	a,#0x00
   32C6 23                 9725 	inc	hl
   32C7 77                 9726 	ld	(hl),a
                           9727 ;demo.c:1393: waitVB();
   32C8 76                 9728 		halt 
                           9729 ;demo.c:1394: cmd.dest_y = 256;
   32C9 21r30s41           9730 	ld	hl, #_cmd + 6
   32CC 36 00              9731 	ld	(hl),#0x00
   32CE 23                 9732 	inc	hl
   32CF 36 01              9733 	ld	(hl),#0x01
                           9734 ;demo.c:1395: cmd.dest_x = x;
   32D1 21r2Es41           9735 	ld	hl, #_cmd + 4
   32D4 DD 7E FE           9736 	ld	a,-2 (ix)
   32D7 77                 9737 	ld	(hl),a
   32D8 23                 9738 	inc	hl
   32D9 DD 7E FF           9739 	ld	a,-1 (ix)
   32DC 77                 9740 	ld	(hl),a
                           9741 ;demo.c:1396: vdp_copier(&cmd);
   32DD 21r2As41           9742 	ld	hl,#_cmd
   32E0 E5                 9743 	push	hl
   32E1 CDr00s00           9744 	call	_vdp_copier
   32E4 F1                 9745 	pop	af
                           9746 ;demo.c:1397: cmd.dest_y = 0;
   32E5 21r30s41           9747 	ld	hl, #_cmd + 6
   32E8 36 00              9748 	ld	(hl),#0x00
   32EA 23                 9749 	inc	hl
   32EB 36 00              9750 	ld	(hl),#0x00
                           9751 ;demo.c:1398: vdp_copier(&cmd);
   32ED 21r2As41           9752 	ld	hl,#_cmd
   32F0 E5                 9753 	push	hl
   32F1 CDr00s00           9754 	call	_vdp_copier
   32F4 F1                 9755 	pop	af
                           9756 ;demo.c:1390: for (x = 0; x < 256; x+=4) {
   32F5 DD 7E FE           9757 	ld	a,-2 (ix)
   32F8 C6 04              9758 	add	a,#0x04
   32FA DD 77 FE           9759 	ld	-2 (ix),a
   32FD DD 7E FF           9760 	ld	a,-1 (ix)
   3300 CE 00              9761 	adc	a,#0x00
   3302 DD 77 FF           9762 	ld	-1 (ix),a
   3305 C3r73s32           9763 	jp	00127$
   3308                    9764 00130$:
                           9765 ;demo.c:1401: drawstr2x("COMMAND",4,44);
   3308 21 04 2C           9766 	ld	hl,#0x2C04
   330B E5                 9767 	push	hl
   330C 21r6Es35           9768 	ld	hl,#__str_16
   330F E5                 9769 	push	hl
   3310 CDr78s11           9770 	call	_drawstr2x
   3313 F1                 9771 	pop	af
   3314 F1                 9772 	pop	af
                           9773 ;demo.c:1402: drawstr2x("   THE  ",32,84);
   3315 21 20 54           9774 	ld	hl,#0x5420
   3318 E5                 9775 	push	hl
   3319 21r76s35           9776 	ld	hl,#__str_17
   331C E5                 9777 	push	hl
   331D CDr78s11           9778 	call	_drawstr2x
   3320 F1                 9779 	pop	af
   3321 F1                 9780 	pop	af
                           9781 ;demo.c:1403: drawstr2x("  BASS ",35,124);
   3322 21 23 7C           9782 	ld	hl,#0x7C23
   3325 E5                 9783 	push	hl
   3326 21r7Fs35           9784 	ld	hl,#__str_18
   3329 E5                 9785 	push	hl
   332A CDr78s11           9786 	call	_drawstr2x
   332D F1                 9787 	pop	af
   332E F1                 9788 	pop	af
   332F                    9789 00104$:
                           9790 ;demo.c:1406: if (ff == 1200) {
   332F 3ArC2s41           9791 	ld	a,(#_ff+0)
   3332 D6 B0              9792 	sub	a,#0xB0
   3334 20 07              9793 	jr	NZ,00176$
   3336 3ArC3s41           9794 	ld	a,(#_ff+1)
   3339 D6 04              9795 	sub	a,#0x04
   333B 28 03              9796 	jr	Z,00177$
   333D                    9797 00176$:
   333D C3rCFs34           9798 	jp	00106$
   3340                    9799 00177$:
                           9800 ;demo.c:1407: cmd.size_x = 3;
   3340 21r32s41           9801 	ld	hl, #_cmd + 8
   3343 36 03              9802 	ld	(hl),#0x03
   3345 23                 9803 	inc	hl
   3346 36 00              9804 	ld	(hl),#0x00
                           9805 ;demo.c:1408: cmd.size_y = 212;
   3348 21r34s41           9806 	ld	hl, #_cmd + 10
   334B 36 D4              9807 	ld	(hl),#0xD4
   334D 23                 9808 	inc	hl
   334E 36 00              9809 	ld	(hl),#0x00
                           9810 ;demo.c:1409: cmd.data = 0;
                           9811 ;demo.c:1410: cmd.argument = 0x00; // from 70xY to left
   3350 3E 00              9812 	ld	a,#0x00
   3352 32r36s41           9813 	ld	(#_cmd + 12),a
   3355 32r37s41           9814 	ld	(#_cmd + 13),a
                           9815 ;demo.c:1411: cmd.command = 0xd0; // vram to vram, y only
   3358 01r38s41           9816 	ld	bc,#_cmd + 14
   335B 3E D0              9817 	ld	a,#0xD0
   335D 02                 9818 	ld	(bc),a
                           9819 ;demo.c:1412: cmd.source_x = 255;
   335E 21r2As41           9820 	ld	hl,#_cmd
   3361 36 FF              9821 	ld	(hl),#0xFF
   3363 23                 9822 	inc	hl
   3364 36 00              9823 	ld	(hl),#0x00
                           9824 ;demo.c:1413: cmd.source_y = 0;
   3366 21r2Cs41           9825 	ld	hl, #_cmd + 2
   3369 36 00              9826 	ld	(hl),#0x00
   336B 23                 9827 	inc	hl
   336C 36 00              9828 	ld	(hl),#0x00
                           9829 ;demo.c:1415: for (x = 254; x > 0; x-=4) {
   336E DD 36 FE FE        9830 	ld	-2 (ix),#0xFE
   3372 DD 36 FF 00        9831 	ld	-1 (ix),#0x00
   3376                    9832 00131$:
   3376 3E 00              9833 	ld	a,#0x00
   3378 DD 96 FE           9834 	sub	a,-2 (ix)
   337B 3E 00              9835 	ld	a,#0x00
   337D DD 9E FF           9836 	sbc	a,-1 (ix)
   3380 F2r0Bs34           9837 	jp	P,00134$
                           9838 ;demo.c:1416: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3383 21rC2s41           9839 	ld	hl,#_ff + 0
   3386 5E                 9840 	ld	e,(hl)
   3387 21rC3s41           9841 	ld	hl,#_ff + 1
   338A 56                 9842 	ld	d,(hl)
   338B CB 2A              9843 	sra	d
   338D CB 1B              9844 	rr	e
   338F CB 2A              9845 	sra	d
   3391 CB 1B              9846 	rr	e
   3393 21rC2s41           9847 	ld	hl,#_ff + 0
   3396 56                 9848 	ld	d,(hl)
   3397 21rC3s41           9849 	ld	hl,#_ff + 1
   339A 4E                 9850 	ld	c,(hl)
   339B CB 29              9851 	sra	c
   339D CB 1A              9852 	rr	d
   339F CB 29              9853 	sra	c
   33A1 CB 1A              9854 	rr	d
   33A3 CB 29              9855 	sra	c
   33A5 CB 1A              9856 	rr	d
   33A7 7B                 9857 	ld	a,e
   33A8 F5                 9858 	push	af
   33A9 33                 9859 	inc	sp
   33AA D5                 9860 	push	de
   33AB 33                 9861 	inc	sp
   33AC 53                 9862 	ld	d,e
   33AD 1E 04              9863 	ld	e,#0x04
   33AF D5                 9864 	push	de
   33B0 CDr00s00           9865 	call	_msx2_palette
   33B3 F1                 9866 	pop	af
   33B4 F1                 9867 	pop	af
                           9868 ;demo.c:1417: ff+=2;
   33B5 21rC2s41           9869 	ld	hl,#_ff
   33B8 7E                 9870 	ld	a,(hl)
   33B9 C6 02              9871 	add	a,#0x02
   33BB 23                 9872 	inc	hl
   33BC 2B                 9873 	dec	hl
   33BD C5                 9874 	push	bc
   33BE 4F                 9875 	ld	c, a
   33BF 23                 9876 	inc	hl
   33C0 7E                 9877 	ld	a, (hl)
   33C1 47                 9878 	ld	b, a
   33C2 79                 9879 	ld	a, c
   33C3 2B                 9880 	dec	hl
   33C4 77                 9881 	ld	(hl), a
   33C5 78                 9882 	ld	a, b
   33C6 C1                 9883 	pop	bc
   33C7 CE 00              9884 	adc	a,#0x00
   33C9 23                 9885 	inc	hl
   33CA 77                 9886 	ld	(hl),a
                           9887 ;demo.c:1418: waitVB();
   33CB 76                 9888 		halt 
                           9889 ;demo.c:1419: cmd.dest_y = 256;
   33CC 21r30s41           9890 	ld	hl, #_cmd + 6
   33CF 36 00              9891 	ld	(hl),#0x00
   33D1 23                 9892 	inc	hl
   33D2 36 01              9893 	ld	(hl),#0x01
                           9894 ;demo.c:1420: cmd.dest_x = x;
   33D4 21r2Es41           9895 	ld	hl, #_cmd + 4
   33D7 DD 7E FE           9896 	ld	a,-2 (ix)
   33DA 77                 9897 	ld	(hl),a
   33DB 23                 9898 	inc	hl
   33DC DD 7E FF           9899 	ld	a,-1 (ix)
   33DF 77                 9900 	ld	(hl),a
                           9901 ;demo.c:1421: vdp_copier(&cmd);
   33E0 21r2As41           9902 	ld	hl,#_cmd
   33E3 E5                 9903 	push	hl
   33E4 CDr00s00           9904 	call	_vdp_copier
   33E7 F1                 9905 	pop	af
                           9906 ;demo.c:1422: cmd.dest_y = 0;
   33E8 21r30s41           9907 	ld	hl, #_cmd + 6
   33EB 36 00              9908 	ld	(hl),#0x00
   33ED 23                 9909 	inc	hl
   33EE 36 00              9910 	ld	(hl),#0x00
                           9911 ;demo.c:1423: vdp_copier(&cmd);
   33F0 21r2As41           9912 	ld	hl,#_cmd
   33F3 E5                 9913 	push	hl
   33F4 CDr00s00           9914 	call	_vdp_copier
   33F7 F1                 9915 	pop	af
                           9916 ;demo.c:1415: for (x = 254; x > 0; x-=4) {
   33F8 DD 7E FE           9917 	ld	a,-2 (ix)
   33FB C6 FC              9918 	add	a,#0xFC
   33FD DD 77 FE           9919 	ld	-2 (ix),a
   3400 DD 7E FF           9920 	ld	a,-1 (ix)
   3403 CE FF              9921 	adc	a,#0xFF
   3405 DD 77 FF           9922 	ld	-1 (ix),a
   3408 C3r76s33           9923 	jp	00131$
   340B                    9924 00134$:
                           9925 ;demo.c:1427: for (x = 0; x < 256; x+=4) {
   340B DD 36 FE 00        9926 	ld	-2 (ix),#0x00
   340F DD 36 FF 00        9927 	ld	-1 (ix),#0x00
   3413                    9928 00135$:
   3413 DD 7E FE           9929 	ld	a,-2 (ix)
   3416 D6 00              9930 	sub	a,#0x00
   3418 DD 7E FF           9931 	ld	a,-1 (ix)
   341B DE 01              9932 	sbc	a,#0x01
   341D F2rA8s34           9933 	jp	P,00138$
                           9934 ;demo.c:1428: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   3420 21rC2s41           9935 	ld	hl,#_ff + 0
   3423 5E                 9936 	ld	e,(hl)
   3424 21rC3s41           9937 	ld	hl,#_ff + 1
   3427 56                 9938 	ld	d,(hl)
   3428 CB 2A              9939 	sra	d
   342A CB 1B              9940 	rr	e
   342C CB 2A              9941 	sra	d
   342E CB 1B              9942 	rr	e
   3430 21rC2s41           9943 	ld	hl,#_ff + 0
   3433 56                 9944 	ld	d,(hl)
   3434 21rC3s41           9945 	ld	hl,#_ff + 1
   3437 4E                 9946 	ld	c,(hl)
   3438 CB 29              9947 	sra	c
   343A CB 1A              9948 	rr	d
   343C CB 29              9949 	sra	c
   343E CB 1A              9950 	rr	d
   3440 CB 29              9951 	sra	c
   3442 CB 1A              9952 	rr	d
   3444 7B                 9953 	ld	a,e
   3445 F5                 9954 	push	af
   3446 33                 9955 	inc	sp
   3447 D5                 9956 	push	de
   3448 33                 9957 	inc	sp
   3449 53                 9958 	ld	d,e
   344A 1E 04              9959 	ld	e,#0x04
   344C D5                 9960 	push	de
   344D CDr00s00           9961 	call	_msx2_palette
   3450 F1                 9962 	pop	af
   3451 F1                 9963 	pop	af
                           9964 ;demo.c:1429: ff+=2;
   3452 21rC2s41           9965 	ld	hl,#_ff
   3455 7E                 9966 	ld	a,(hl)
   3456 C6 02              9967 	add	a,#0x02
   3458 23                 9968 	inc	hl
   3459 2B                 9969 	dec	hl
   345A C5                 9970 	push	bc
   345B 4F                 9971 	ld	c, a
   345C 23                 9972 	inc	hl
   345D 7E                 9973 	ld	a, (hl)
   345E 47                 9974 	ld	b, a
   345F 79                 9975 	ld	a, c
   3460 2B                 9976 	dec	hl
   3461 77                 9977 	ld	(hl), a
   3462 78                 9978 	ld	a, b
   3463 C1                 9979 	pop	bc
   3464 CE 00              9980 	adc	a,#0x00
   3466 23                 9981 	inc	hl
   3467 77                 9982 	ld	(hl),a
                           9983 ;demo.c:1430: waitVB();
   3468 76                 9984 		halt 
                           9985 ;demo.c:1431: cmd.dest_y = 256;
   3469 21r30s41           9986 	ld	hl, #_cmd + 6
   346C 36 00              9987 	ld	(hl),#0x00
   346E 23                 9988 	inc	hl
   346F 36 01              9989 	ld	(hl),#0x01
                           9990 ;demo.c:1432: cmd.dest_x = x;
   3471 21r2Es41           9991 	ld	hl, #_cmd + 4
   3474 DD 7E FE           9992 	ld	a,-2 (ix)
   3477 77                 9993 	ld	(hl),a
   3478 23                 9994 	inc	hl
   3479 DD 7E FF           9995 	ld	a,-1 (ix)
   347C 77                 9996 	ld	(hl),a
                           9997 ;demo.c:1433: vdp_copier(&cmd);
   347D 21r2As41           9998 	ld	hl,#_cmd
   3480 E5                 9999 	push	hl
   3481 CDr00s00          10000 	call	_vdp_copier
   3484 F1                10001 	pop	af
                          10002 ;demo.c:1434: cmd.dest_y = 0;
   3485 21r30s41          10003 	ld	hl, #_cmd + 6
   3488 36 00             10004 	ld	(hl),#0x00
   348A 23                10005 	inc	hl
   348B 36 00             10006 	ld	(hl),#0x00
                          10007 ;demo.c:1435: vdp_copier(&cmd);
   348D 21r2As41          10008 	ld	hl,#_cmd
   3490 E5                10009 	push	hl
   3491 CDr00s00          10010 	call	_vdp_copier
   3494 F1                10011 	pop	af
                          10012 ;demo.c:1427: for (x = 0; x < 256; x+=4) {
   3495 DD 7E FE          10013 	ld	a,-2 (ix)
   3498 C6 04             10014 	add	a,#0x04
   349A DD 77 FE          10015 	ld	-2 (ix),a
   349D DD 7E FF          10016 	ld	a,-1 (ix)
   34A0 CE 00             10017 	adc	a,#0x00
   34A2 DD 77 FF          10018 	ld	-1 (ix),a
   34A5 C3r13s34          10019 	jp	00135$
   34A8                   10020 00138$:
                          10021 ;demo.c:1438: drawstr2x("REVISION",10,44);
   34A8 21 0A 2C          10022 	ld	hl,#0x2C0A
   34AB E5                10023 	push	hl
   34AC 21r87s35          10024 	ld	hl,#__str_19
   34AF E5                10025 	push	hl
   34B0 CDr78s11          10026 	call	_drawstr2x
   34B3 F1                10027 	pop	af
   34B4 F1                10028 	pop	af
                          10029 ;demo.c:1439: drawstr2x("   IS OUR",0,84);
   34B5 21 00 54          10030 	ld	hl,#0x5400
   34B8 E5                10031 	push	hl
   34B9 21r90s35          10032 	ld	hl,#__str_20
   34BC E5                10033 	push	hl
   34BD CDr78s11          10034 	call	_drawstr2x
   34C0 F1                10035 	pop	af
   34C1 F1                10036 	pop	af
                          10037 ;demo.c:1440: drawstr2x("  PARTY",12,124);
   34C2 21 0C 7C          10038 	ld	hl,#0x7C0C
   34C5 E5                10039 	push	hl
   34C6 21r9As35          10040 	ld	hl,#__str_21
   34C9 E5                10041 	push	hl
   34CA CDr78s11          10042 	call	_drawstr2x
   34CD F1                10043 	pop	af
   34CE F1                10044 	pop	af
   34CF                   10045 00106$:
                          10046 ;demo.c:1443: if (ff >= 1600 && ff < 1700) {
   34CF 3ArC2s41          10047 	ld	a,(#_ff+0)
   34D2 D6 40             10048 	sub	a,#0x40
   34D4 3ArC3s41          10049 	ld	a,(#_ff+1)
   34D7 DE 06             10050 	sbc	a,#0x06
   34D9 FAr00s35          10051 	jp	M,00108$
   34DC 3ArC2s41          10052 	ld	a,(#_ff+0)
   34DF D6 A4             10053 	sub	a,#0xA4
   34E1 3ArC3s41          10054 	ld	a,(#_ff+1)
   34E4 DE 06             10055 	sbc	a,#0x06
   34E6 F2r00s35          10056 	jp	P,00108$
                          10057 ;demo.c:1444: slowend = 37;
   34E9 21rC0s41          10058 	ld	hl,#_slowend + 0
   34EC 36 25             10059 	ld	(hl), #0x25
   34EE 21rC1s41          10060 	ld	hl,#_slowend + 1
   34F1 36 00             10061 	ld	(hl), #0x00
                          10062 ;demo.c:1445: drawstrslow("Give a big hand to all the organizers",28,164+6);
   34F3 21 1C AA          10063 	ld	hl,#0xAA1C
   34F6 E5                10064 	push	hl
   34F7 21rA2s35          10065 	ld	hl,#__str_22
   34FA E5                10066 	push	hl
   34FB CDrDAs10          10067 	call	_drawstrslow
   34FE F1                10068 	pop	af
   34FF F1                10069 	pop	af
   3500                   10070 00108$:
                          10071 ;demo.c:1448: if (ff == 1700) {
   3500 3ArC2s41          10072 	ld	a,(#_ff+0)
   3503 D6 A4             10073 	sub	a,#0xA4
   3505 20 07             10074 	jr	NZ,00182$
   3507 3ArC3s41          10075 	ld	a,(#_ff+1)
   350A D6 06             10076 	sub	a,#0x06
   350C 28 02             10077 	jr	Z,00183$
   350E                   10078 00182$:
   350E 18 0A             10079 	jr	00111$
   3510                   10080 00183$:
                          10081 ;demo.c:1449: ltrpointer = 0;
   3510 21rBEs41          10082 	ld	hl,#_ltrpointer + 0
   3513 36 00             10083 	ld	(hl), #0x00
   3515 21rBFs41          10084 	ld	hl,#_ltrpointer + 1
   3518 36 00             10085 	ld	(hl), #0x00
   351A                   10086 00111$:
                          10087 ;demo.c:1452: if (ff > 1700 && ff < 1800) {
   351A 3E A4             10088 	ld	a,#0xA4
   351C FD 21rC2s41       10089 	ld	iy,#_ff
   3520 FD 96 00          10090 	sub	a,0 (iy)
   3523 3E 06             10091 	ld	a,#0x06
   3525 FD 21rC2s41       10092 	ld	iy,#_ff
   3529 FD 9E 01          10093 	sbc	a,1 (iy)
   352C F2r53s35          10094 	jp	P,00139$
   352F 3ArC2s41          10095 	ld	a,(#_ff+0)
   3532 D6 08             10096 	sub	a,#0x08
   3534 3ArC3s41          10097 	ld	a,(#_ff+1)
   3537 DE 07             10098 	sbc	a,#0x07
   3539 F2r53s35          10099 	jp	P,00139$
                          10100 ;demo.c:1453: slowend = 21;
   353C 21rC0s41          10101 	ld	hl,#_slowend + 0
   353F 36 15             10102 	ld	(hl), #0x15
   3541 21rC1s41          10103 	ld	hl,#_slowend + 1
   3544 36 00             10104 	ld	(hl), #0x00
                          10105 ;demo.c:1454: drawstrslow("of this amazing party",64,164+16);
   3546 21 40 B4          10106 	ld	hl,#0xB440
   3549 E5                10107 	push	hl
   354A 21rC8s35          10108 	ld	hl,#__str_23
   354D E5                10109 	push	hl
   354E CDrDAs10          10110 	call	_drawstrslow
   3551 F1                10111 	pop	af
   3552 F1                10112 	pop	af
   3553                   10113 00139$:
   3553 DD F9             10114 	ld	sp,ix
   3555 DD E1             10115 	pop	ix
   3557 C9                10116 	ret
   3558                   10117 _bigtext_end::
   3558                   10118 __str_13:
   3558 44 49 47 49 54 41 10119 	.ascii "DIGITAL"
        4C
   355F 00                10120 	.db 0x00
   3560                   10121 __str_14:
   3560 53 4F 55 4E 44 53 10122 	.ascii "SOUNDS"
   3566 00                10123 	.db 0x00
   3567                   10124 __str_15:
   3567 53 59 53 54 45 4D 10125 	.ascii "SYSTEM"
   356D 00                10126 	.db 0x00
   356E                   10127 __str_16:
   356E 43 4F 4D 4D 41 4E 10128 	.ascii "COMMAND"
        44
   3575 00                10129 	.db 0x00
   3576                   10130 __str_17:
   3576 20 20 20 54 48 45 10131 	.ascii "   THE  "
        20 20
   357E 00                10132 	.db 0x00
   357F                   10133 __str_18:
   357F 20 20 42 41 53 53 10134 	.ascii "  BASS "
        20
   3586 00                10135 	.db 0x00
   3587                   10136 __str_19:
   3587 52 45 56 49 53 49 10137 	.ascii "REVISION"
        4F 4E
   358F 00                10138 	.db 0x00
   3590                   10139 __str_20:
   3590 20 20 20 49 53 20 10140 	.ascii "   IS OUR"
        4F 55 52
   3599 00                10141 	.db 0x00
   359A                   10142 __str_21:
   359A 20 20 50 41 52 54 10143 	.ascii "  PARTY"
        59
   35A1 00                10144 	.db 0x00
   35A2                   10145 __str_22:
   35A2 47 69 76 65 20 61 10146 	.ascii "Give a big hand to all the organizers"
        20 62 69 67 20 68
        61 6E 64 20 74 6F
        20 61 6C 6C 20 74
        68 65 20 6F 72 67
        61 6E 69 7A 65 72
        73
   35C7 00                10147 	.db 0x00
   35C8                   10148 __str_23:
   35C8 6F 66 20 74 68 69 10149 	.ascii "of this amazing party"
        73 20 61 6D 61 7A
        69 6E 67 20 70 61
        72 74 79
   35DD 00                10150 	.db 0x00
                          10151 ;demo.c:1460: void waiter() {
                          10152 ;	---------------------------------
                          10153 ; Function waiter
                          10154 ; ---------------------------------
   35DE                   10155 _waiter_start::
   35DE                   10156 _waiter:
                          10157 ;demo.c:1462: }
   35DE C9                10158 	ret
   35DF                   10159 _waiter_end::
                          10160 ;demo.c:1467: void credits() {
                          10161 ;	---------------------------------
                          10162 ; Function credits
                          10163 ; ---------------------------------
   35DF                   10164 _credits_start::
   35DF                   10165 _credits:
                          10166 ;demo.c:1469: if (initcredits == 0) {
   35DF 3Ar32s42          10167 	ld	a,(#_initcredits+0)
   35E2 21r33s42          10168 	ld	hl,#_initcredits + 1
   35E5 B6                10169 	or	a,(hl)
   35E6 C2r06s37          10170 	jp	NZ,00102$
                          10171 ;demo.c:1470: scratch_clear();
   35E9 CDr24s08          10172 	call	_scratch_clear
                          10173 ;demo.c:1471: vdp_load_palette(scratch);
   35EC 21rC6s3F          10174 	ld	hl,#_scratch
   35EF E5                10175 	push	hl
   35F0 CDr00s00          10176 	call	_vdp_load_palette
   35F3 F1                10177 	pop	af
                          10178 ;demo.c:1473: uninstall_isr();
   35F4 CDr00s00          10179 	call	_uninstall_isr
                          10180 ;demo.c:1474: PLY_Stop();
   35F7 CDr00s00          10181 	call	_PLY_Stop
                          10182 ;demo.c:1475: PLY_SendRegisters();
   35FA CDr00s00          10183 	call	_PLY_SendRegisters
                          10184 ;demo.c:1477: initcredits = 1;
   35FD 21r32s42          10185 	ld	hl,#_initcredits + 0
   3600 36 01             10186 	ld	(hl), #0x01
   3602 21r33s42          10187 	ld	hl,#_initcredits + 1
   3605 36 00             10188 	ld	(hl), #0x00
                          10189 ;demo.c:1479: bitbuster(crebuffer2,0x0000,VRAM_0);
   3607 3E 01             10190 	ld	a,#0x01
   3609 F5                10191 	push	af
   360A 33                10192 	inc	sp
   360B 21 00 00          10193 	ld	hl,#0x0000
   360E E5                10194 	push	hl
   360F 21rC7s1E          10195 	ld	hl,#_crebuffer2
   3612 E5                10196 	push	hl
   3613 CDr00s00          10197 	call	_bitbuster
   3616 F1                10198 	pop	af
   3617 F1                10199 	pop	af
   3618 33                10200 	inc	sp
                          10201 ;demo.c:1481: cmd.size_x = 512;
   3619 21r32s41          10202 	ld	hl, #_cmd + 8
   361C 36 00             10203 	ld	(hl),#0x00
   361E 23                10204 	inc	hl
   361F 36 02             10205 	ld	(hl),#0x02
                          10206 ;demo.c:1482: cmd.size_y = 212;
   3621 21r34s41          10207 	ld	hl, #_cmd + 10
   3624 36 D4             10208 	ld	(hl),#0xD4
   3626 23                10209 	inc	hl
   3627 36 00             10210 	ld	(hl),#0x00
                          10211 ;demo.c:1483: cmd.data = 0;
                          10212 ;demo.c:1484: cmd.argument = 0x00;
   3629 3E 00             10213 	ld	a,#0x00
   362B 32r36s41          10214 	ld	(#_cmd + 12),a
   362E 32r37s41          10215 	ld	(#_cmd + 13),a
                          10216 ;demo.c:1485: cmd.command = 0xd0; 
   3631 01r38s41          10217 	ld	bc,#_cmd + 14
   3634 3E D0             10218 	ld	a,#0xD0
   3636 02                10219 	ld	(bc),a
                          10220 ;demo.c:1486: cmd.source_x = 0;
   3637 21r2As41          10221 	ld	hl,#_cmd
   363A 36 00             10222 	ld	(hl),#0x00
   363C 23                10223 	inc	hl
   363D 36 00             10224 	ld	(hl),#0x00
                          10225 ;demo.c:1487: cmd.source_y = 0;
   363F 21r2Cs41          10226 	ld	hl, #_cmd + 2
   3642 36 00             10227 	ld	(hl),#0x00
   3644 23                10228 	inc	hl
   3645 36 00             10229 	ld	(hl),#0x00
                          10230 ;demo.c:1488: cmd.dest_x = 0;
   3647 21r2Es41          10231 	ld	hl, #_cmd + 4
   364A 36 00             10232 	ld	(hl),#0x00
   364C 23                10233 	inc	hl
   364D 36 00             10234 	ld	(hl),#0x00
                          10235 ;demo.c:1489: cmd.dest_y = 256;
   364F 21r30s41          10236 	ld	hl, #_cmd + 6
   3652 36 00             10237 	ld	(hl),#0x00
   3654 23                10238 	inc	hl
   3655 36 01             10239 	ld	(hl),#0x01
                          10240 ;demo.c:1490: vdp_copier(&cmd);
   3657 21r2As41          10241 	ld	hl,#_cmd
   365A E5                10242 	push	hl
   365B CDr00s00          10243 	call	_vdp_copier
   365E F1                10244 	pop	af
                          10245 ;demo.c:1492: bitbuster(crebuffer3,0x0000,VRAM_0);
   365F 3E 01             10246 	ld	a,#0x01
   3661 F5                10247 	push	af
   3662 33                10248 	inc	sp
   3663 21 00 00          10249 	ld	hl,#0x0000
   3666 E5                10250 	push	hl
   3667 21r3Bs31          10251 	ld	hl,#_crebuffer3
   366A E5                10252 	push	hl
   366B CDr00s00          10253 	call	_bitbuster
   366E F1                10254 	pop	af
   366F F1                10255 	pop	af
   3670 33                10256 	inc	sp
                          10257 ;demo.c:1494: cmd.size_x = 512;
   3671 21r32s41          10258 	ld	hl, #_cmd + 8
   3674 36 00             10259 	ld	(hl),#0x00
   3676 23                10260 	inc	hl
   3677 36 02             10261 	ld	(hl),#0x02
                          10262 ;demo.c:1495: cmd.size_y = 212;
   3679 21r34s41          10263 	ld	hl, #_cmd + 10
   367C 36 D4             10264 	ld	(hl),#0xD4
   367E 23                10265 	inc	hl
   367F 36 00             10266 	ld	(hl),#0x00
                          10267 ;demo.c:1496: cmd.data = 0;
                          10268 ;demo.c:1497: cmd.argument = 0x00;
   3681 3E 00             10269 	ld	a,#0x00
   3683 32r36s41          10270 	ld	(#_cmd + 12),a
   3686 32r37s41          10271 	ld	(#_cmd + 13),a
                          10272 ;demo.c:1498: cmd.command = 0xd0; 
   3689 01r38s41          10273 	ld	bc,#_cmd + 14
   368C 3E D0             10274 	ld	a,#0xD0
   368E 02                10275 	ld	(bc),a
                          10276 ;demo.c:1499: cmd.source_x = 0;
   368F 21r2As41          10277 	ld	hl,#_cmd
   3692 36 00             10278 	ld	(hl),#0x00
   3694 23                10279 	inc	hl
   3695 36 00             10280 	ld	(hl),#0x00
                          10281 ;demo.c:1500: cmd.source_y = 0;
   3697 21r2Cs41          10282 	ld	hl, #_cmd + 2
   369A 36 00             10283 	ld	(hl),#0x00
   369C 23                10284 	inc	hl
   369D 36 00             10285 	ld	(hl),#0x00
                          10286 ;demo.c:1501: cmd.dest_x = 0;
   369F 21r2Es41          10287 	ld	hl, #_cmd + 4
   36A2 36 00             10288 	ld	(hl),#0x00
   36A4 23                10289 	inc	hl
   36A5 36 00             10290 	ld	(hl),#0x00
                          10291 ;demo.c:1502: cmd.dest_y = 512;
   36A7 21r30s41          10292 	ld	hl, #_cmd + 6
   36AA 36 00             10293 	ld	(hl),#0x00
   36AC 23                10294 	inc	hl
   36AD 36 02             10295 	ld	(hl),#0x02
                          10296 ;demo.c:1503: vdp_copier(&cmd);
   36AF 21r2As41          10297 	ld	hl,#_cmd
   36B2 E5                10298 	push	hl
   36B3 CDr00s00          10299 	call	_vdp_copier
   36B6 F1                10300 	pop	af
                          10301 ;demo.c:1505: bitbuster(crebuffer1,0x0000,VRAM_0);
   36B7 3E 01             10302 	ld	a,#0x01
   36B9 F5                10303 	push	af
   36BA 33                10304 	inc	sp
   36BB 21 00 00          10305 	ld	hl,#0x0000
   36BE E5                10306 	push	hl
   36BF 21rCCs11          10307 	ld	hl,#_crebuffer1
   36C2 E5                10308 	push	hl
   36C3 CDr00s00          10309 	call	_bitbuster
   36C6 F1                10310 	pop	af
   36C7 F1                10311 	pop	af
   36C8 33                10312 	inc	sp
                          10313 ;demo.c:1507: install_isr(my_isr);
   36C9 21rECs07          10314 	ld	hl,#_my_isr
   36CC E5                10315 	push	hl
   36CD CDr00s00          10316 	call	_install_isr
   36D0 F1                10317 	pop	af
                          10318 ;demo.c:1508: vdp_register(0,8); // mode 512x212
   36D1 21 00 08          10319 	ld	hl,#0x0800
   36D4 E5                10320 	push	hl
   36D5 CDr00s00          10321 	call	_vdp_register
   36D8 F1                10322 	pop	af
                          10323 ;demo.c:1509: vdp_register(8,2); // mode 512x212
   36D9 21 08 02          10324 	ld	hl,#0x0208
   36DC E5                10325 	push	hl
   36DD CDr00s00          10326 	call	_vdp_register
   36E0 F1                10327 	pop	af
                          10328 ;demo.c:1510: vdp_register(9,130); // mode 512x212
   36E1 21 09 82          10329 	ld	hl,#0x8209
   36E4 E5                10330 	push	hl
   36E5 CDr00s00          10331 	call	_vdp_register
   36E8 F1                10332 	pop	af
                          10333 ;demo.c:1512: memcpy(cur_palette, credits_palette, 32);
   36E9 21 20 00          10334 	ld	hl,#0x0020
   36EC E5                10335 	push	hl
   36ED 21r06s41          10336 	ld	hl,#_credits_palette
   36F0 E5                10337 	push	hl
   36F1 21r46s40          10338 	ld	hl,#_cur_palette
   36F4 E5                10339 	push	hl
   36F5 CDr00s00          10340 	call	_memcpy
   36F8 F1                10341 	pop	af
   36F9 F1                10342 	pop	af
   36FA F1                10343 	pop	af
                          10344 ;demo.c:1514: vdp_register(2, 0x1F);
   36FB 21 02 1F          10345 	ld	hl,#0x1F02
   36FE E5                10346 	push	hl
   36FF CDr00s00          10347 	call	_vdp_register
   3702 F1                10348 	pop	af
                          10349 ;demo.c:1515: scratch_clear();
   3703 CDr24s08          10350 	call	_scratch_clear
   3706                   10351 00102$:
                          10352 ;demo.c:1518: fadein();
   3706 CDrBBs0A          10353 	call	_fadein
                          10354 ;demo.c:1520: credittimer++;
   3709 FD 21r34s42       10355 	ld	iy,#_credittimer
   370D FD 34 00          10356 	inc	0 (iy)
   3710 20 07             10357 	jr	NZ,00115$
   3712 FD 21r34s42       10358 	ld	iy,#_credittimer
   3716 FD 34 01          10359 	inc	1 (iy)
   3719                   10360 00115$:
                          10361 ;demo.c:1521: if (credittimer == 300) {
   3719 3Ar34s42          10362 	ld	a,(#_credittimer+0)
   371C D6 2C             10363 	sub	a,#0x2C
   371E 20 07             10364 	jr	NZ,00116$
   3720 3Ar35s42          10365 	ld	a,(#_credittimer+1)
   3723 D6 01             10366 	sub	a,#0x01
   3725 28 02             10367 	jr	Z,00117$
   3727                   10368 00116$:
   3727 18 08             10369 	jr	00104$
   3729                   10370 00117$:
                          10371 ;demo.c:1522: vdp_register(2, 0x3F);
   3729 21 02 3F          10372 	ld	hl,#0x3F02
   372C E5                10373 	push	hl
   372D CDr00s00          10374 	call	_vdp_register
   3730 F1                10375 	pop	af
   3731                   10376 00104$:
                          10377 ;demo.c:1524: if (credittimer == 600) {
   3731 3Ar34s42          10378 	ld	a,(#_credittimer+0)
   3734 D6 58             10379 	sub	a,#0x58
   3736 20 07             10380 	jr	NZ,00118$
   3738 3Ar35s42          10381 	ld	a,(#_credittimer+1)
   373B D6 02             10382 	sub	a,#0x02
   373D 28 02             10383 	jr	Z,00119$
   373F                   10384 00118$:
   373F 18 08             10385 	jr	00106$
   3741                   10386 00119$:
                          10387 ;demo.c:1525: vdp_register(2, 0x5F);
   3741 21 02 5F          10388 	ld	hl,#0x5F02
   3744 E5                10389 	push	hl
   3745 CDr00s00          10390 	call	_vdp_register
   3748 F1                10391 	pop	af
   3749                   10392 00106$:
                          10393 ;demo.c:1528: if (credittimer == 900) {
   3749 3Ar34s42          10394 	ld	a,(#_credittimer+0)
   374C D6 84             10395 	sub	a,#0x84
   374E C0                10396 	ret	NZ
   374F 3Ar35s42          10397 	ld	a,(#_credittimer+1)
   3752 D6 03             10398 	sub	a,#0x03
   3754 28 01             10399 	jr	Z,00121$
   3756 C9                10400 	ret
   3757                   10401 00121$:
                          10402 ;demo.c:1529: vdp_load_palette(scratch);
   3757 21rC6s3F          10403 	ld	hl,#_scratch
   375A E5                10404 	push	hl
   375B CDr00s00          10405 	call	_vdp_load_palette
   375E F1                10406 	pop	af
   375F C9                10407 	ret
   3760                   10408 _credits_end::
                          10409 ;demo.c:1539: void do_quit() {
                          10410 ;	---------------------------------
                          10411 ; Function do_quit
                          10412 ; ---------------------------------
   3760                   10413 _do_quit_start::
   3760                   10414 _do_quit:
                          10415 ;demo.c:1540: waitVB();
   3760 76                10416 		halt 
                          10417 ;demo.c:1541: uninstall_isr();
   3761 CDr00s00          10418 	call	_uninstall_isr
                          10419 ;demo.c:1542: PLY_Stop();
   3764 CDr00s00          10420 	call	_PLY_Stop
                          10421 ;demo.c:1543: PLY_SendRegisters();
   3767 CDr00s00          10422 	call	_PLY_SendRegisters
                          10423 ;demo.c:1545: screen(0);
   376A 3E 00             10424 	ld	a,#0x00
   376C F5                10425 	push	af
   376D 33                10426 	inc	sp
   376E CDr00s00          10427 	call	_screen
   3771 33                10428 	inc	sp
                          10429 ;demo.c:1546: vdp_load_palette(twister_palette);
   3772 21rA6s40          10430 	ld	hl,#_twister_palette
   3775 E5                10431 	push	hl
   3776 CDr00s00          10432 	call	_vdp_load_palette
   3779 F1                10433 	pop	af
                          10434 ;demo.c:1548: puts("bye friends.\r\n\r\n");
   377A 21r8Bs37          10435 	ld	hl,#__str_24
   377D E5                10436 	push	hl
   377E CDr00s00          10437 	call	_puts
   3781 F1                10438 	pop	af
                          10439 ;demo.c:1550: exit(0);	
   3782 3E 00             10440 	ld	a,#0x00
   3784 F5                10441 	push	af
   3785 33                10442 	inc	sp
   3786 CDr00s00          10443 	call	_exit
   3789 33                10444 	inc	sp
   378A C9                10445 	ret
   378B                   10446 _do_quit_end::
   378B                   10447 __str_24:
   378B 62 79 65 20 66 72 10448 	.ascii "bye friends."
        69 65 6E 64 73 2E
   3797 0D                10449 	.db 0x0D
   3798 0A                10450 	.db 0x0A
   3799 0D                10451 	.db 0x0D
   379A 0A                10452 	.db 0x0A
   379B 00                10453 	.db 0x00
                          10454 ;demo.c:1556: void main() {
                          10455 ;	---------------------------------
                          10456 ; Function main
                          10457 ; ---------------------------------
   379C                   10458 _main_start::
   379C                   10459 _main:
   379C DD E5             10460 	push	ix
   379E DD 21 00 00       10461 	ld	ix,#0
   37A2 DD 39             10462 	add	ix,sp
   37A4 21 F9 FF          10463 	ld	hl,#-7
   37A7 39                10464 	add	hl,sp
   37A8 F9                10465 	ld	sp,hl
                          10466 ;demo.c:1557: unsigned char quit=0;
   37A9 DD 36 FF 00       10467 	ld	-1 (ix),#0x00
                          10468 ;demo.c:1563: spindown();
   37AD CDr00s00          10469 	call	_spindown
                          10470 ;demo.c:1565: puts("[starting DSS MSX demosystem]\r\n\r\n");
   37B0 21r31s3D          10471 	ld	hl,#__str_25
   37B3 E5                10472 	push	hl
   37B4 CDr00s00          10473 	call	_puts
   37B7 F1                10474 	pop	af
                          10475 ;demo.c:1567: for (y = 0; y < 2; y++) {
   37B8 DD 36 FB 00       10476 	ld	-5 (ix),#0x00
   37BC DD 36 FC 00       10477 	ld	-4 (ix),#0x00
   37C0                   10478 00118$:
   37C0 DD 7E FB          10479 	ld	a,-5 (ix)
   37C3 D6 02             10480 	sub	a,#0x02
   37C5 DD 7E FC          10481 	ld	a,-4 (ix)
   37C8 DE 00             10482 	sbc	a,#0x00
   37CA F2r4Cs38          10483 	jp	P,00121$
                          10484 ;demo.c:1568: for (x = 0; x < 16; x++) {
   37CD DD 4E FB          10485 	ld	c,-5 (ix)
   37D0 DD 46 FC          10486 	ld	b,-4 (ix)
   37D3 CB 21             10487 	sla	c
   37D5 CB 10             10488 	rl	b
   37D7 CB 21             10489 	sla	c
   37D9 CB 10             10490 	rl	b
   37DB CB 21             10491 	sla	c
   37DD CB 10             10492 	rl	b
   37DF CB 21             10493 	sla	c
   37E1 CB 10             10494 	rl	b
   37E3 21 81 03          10495 	ld	hl,#0x0381
   37E6 09                10496 	add	hl,bc
   37E7 DD 75 F9          10497 	ld	-7 (ix),l
   37EA DD 74 FA          10498 	ld	-6 (ix),h
   37ED DD 36 FD 00       10499 	ld	-3 (ix),#0x00
   37F1 DD 36 FE 00       10500 	ld	-2 (ix),#0x00
   37F5                   10501 00114$:
   37F5 DD 7E FD          10502 	ld	a,-3 (ix)
   37F8 D6 10             10503 	sub	a,#0x10
   37FA DD 7E FE          10504 	ld	a,-2 (ix)
   37FD DE 00             10505 	sbc	a,#0x00
   37FF F2r41s38          10506 	jp	P,00120$
                          10507 ;demo.c:1569: tri_lookup_x[(y*16)+x] = x * 16;
   3802 DD 7E FB          10508 	ld	a,-5 (ix)
   3805 07                10509 	rlca
   3806 07                10510 	rlca
   3807 07                10511 	rlca
   3808 07                10512 	rlca
   3809 E6 F0             10513 	and	a,#0xF0
   380B 5F                10514 	ld	e,a
   380C DD 56 FD          10515 	ld	d,-3 (ix)
   380F 7B                10516 	ld	a,e
   3810 82                10517 	add	a,d
   3811 5F                10518 	ld	e, a
   3812 C6r00             10519 	add	a,#<_tri_lookup_x
   3814 4F                10520 	ld	c,a
   3815 3Es01             10521 	ld	a,#>_tri_lookup_x
   3817 CE 00             10522 	adc	a,#0x00
   3819 47                10523 	ld	b,a
   381A 7A                10524 	ld	a,d
   381B 07                10525 	rlca
   381C 07                10526 	rlca
   381D 07                10527 	rlca
   381E 07                10528 	rlca
   381F E6 F0             10529 	and	a,#0xF0
   3821 02                10530 	ld	(bc),a
                          10531 ;demo.c:1570: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   3822 CB 23             10532 	sla	e
   3824 3Er88             10533 	ld	a,#<_tri_lookup_y
   3826 83                10534 	add	a,e
   3827 6F                10535 	ld	l,a
   3828 3Es01             10536 	ld	a,#>_tri_lookup_y
   382A CE 00             10537 	adc	a,#0x00
   382C 67                10538 	ld	h,a
   382D DD 7E F9          10539 	ld	a,-7 (ix)
   3830 77                10540 	ld	(hl),a
   3831 23                10541 	inc	hl
   3832 DD 7E FA          10542 	ld	a,-6 (ix)
   3835 77                10543 	ld	(hl),a
                          10544 ;demo.c:1568: for (x = 0; x < 16; x++) {
   3836 DD 34 FD          10545 	inc	-3 (ix)
   3839 20 03             10546 	jr	NZ,00146$
   383B DD 34 FE          10547 	inc	-2 (ix)
   383E                   10548 00146$:
   383E C3rF5s37          10549 	jp	00114$
   3841                   10550 00120$:
                          10551 ;demo.c:1567: for (y = 0; y < 2; y++) {
   3841 DD 34 FB          10552 	inc	-5 (ix)
   3844 20 03             10553 	jr	NZ,00147$
   3846 DD 34 FC          10554 	inc	-4 (ix)
   3849                   10555 00147$:
   3849 C3rC0s37          10556 	jp	00118$
   384C                   10557 00121$:
                          10558 ;demo.c:1574: for (x = 0; x < 26; x++) {
   384C DD 36 FD 00       10559 	ld	-3 (ix),#0x00
   3850 DD 36 FE 00       10560 	ld	-2 (ix),#0x00
   3854 DD 36 F9 00       10561 	ld	-7 (ix),#0x00
   3858 DD 36 FA 00       10562 	ld	-6 (ix),#0x00
   385C                   10563 00122$:
   385C DD 7E FD          10564 	ld	a,-3 (ix)
   385F D6 1A             10565 	sub	a,#0x1A
   3861 DD 7E FE          10566 	ld	a,-2 (ix)
   3864 DE 00             10567 	sbc	a,#0x00
   3866 F2rB8s38          10568 	jp	P,00125$
                          10569 ;demo.c:1575: twelvetimes[x] = x * 12;
   3869 DD 4E FD          10570 	ld	c,-3 (ix)
   386C DD 46 FE          10571 	ld	b,-2 (ix)
   386F CB 21             10572 	sla	c
   3871 CB 10             10573 	rl	b
   3873 21r20s01          10574 	ld	hl,#_twelvetimes
   3876 09                10575 	add	hl,bc
   3877 DD 7E F9          10576 	ld	a,-7 (ix)
   387A 77                10577 	ld	(hl),a
   387B 23                10578 	inc	hl
   387C DD 7E FA          10579 	ld	a,-6 (ix)
   387F 77                10580 	ld	(hl),a
                          10581 ;demo.c:1576: eighttimes[x] = x * 8;
   3880 21r54s01          10582 	ld	hl,#_eighttimes
   3883 09                10583 	add	hl,bc
   3884 4D                10584 	ld	c,l
   3885 44                10585 	ld	b,h
   3886 DD 5E FD          10586 	ld	e,-3 (ix)
   3889 DD 56 FE          10587 	ld	d,-2 (ix)
   388C CB 23             10588 	sla	e
   388E CB 12             10589 	rl	d
   3890 CB 23             10590 	sla	e
   3892 CB 12             10591 	rl	d
   3894 CB 23             10592 	sla	e
   3896 CB 12             10593 	rl	d
   3898 69                10594 	ld	l,c
   3899 60                10595 	ld	h,b
   389A 73                10596 	ld	(hl),e
   389B 23                10597 	inc	hl
   389C 72                10598 	ld	(hl),d
                          10599 ;demo.c:1574: for (x = 0; x < 26; x++) {
   389D DD 7E F9          10600 	ld	a,-7 (ix)
   38A0 C6 0C             10601 	add	a,#0x0C
   38A2 DD 77 F9          10602 	ld	-7 (ix),a
   38A5 DD 7E FA          10603 	ld	a,-6 (ix)
   38A8 CE 00             10604 	adc	a,#0x00
   38AA DD 77 FA          10605 	ld	-6 (ix),a
   38AD DD 34 FD          10606 	inc	-3 (ix)
   38B0 20 03             10607 	jr	NZ,00152$
   38B2 DD 34 FE          10608 	inc	-2 (ix)
   38B5                   10609 00152$:
   38B5 C3r5Cs38          10610 	jp	00122$
   38B8                   10611 00125$:
                          10612 ;demo.c:1579: puts("init sweet PSG bleeps...");
   38B8 21r53s3D          10613 	ld	hl,#__str_26
   38BB E5                10614 	push	hl
   38BC CDr00s00          10615 	call	_puts
   38BF F1                10616 	pop	af
                          10617 ;demo.c:1581: PLY_SongPtr = (char *)0x0103;
   38C0 21r00s00          10618 	ld	hl,#_PLY_SongPtr + 0
   38C3 36 03             10619 	ld	(hl), #0x03
   38C5 21r01s00          10620 	ld	hl,#_PLY_SongPtr + 1
   38C8 36 01             10621 	ld	(hl), #0x01
                          10622 ;demo.c:1582: PLY_Init();
   38CA CDr00s00          10623 	call	_PLY_Init
                          10624 ;demo.c:1583: puts("done.\r\n");
   38CD 21r6Cs3D          10625 	ld	hl,#__str_27
   38D0 E5                10626 	push	hl
   38D1 CDr00s00          10627 	call	_puts
   38D4 F1                10628 	pop	af
                          10629 ;demo.c:1585: puts("detecting ya vdp type...\r\n");
   38D5 21r74s3D          10630 	ld	hl,#__str_28
   38D8 E5                10631 	push	hl
   38D9 CDr00s00          10632 	call	_puts
   38DC F1                10633 	pop	af
                          10634 ;demo.c:1586: if(isvdp2())
   38DD CDr00s00          10635 	call	_isvdp2
   38E0 AF                10636 	xor	a,a
   38E1 B5                10637 	or	a,l
   38E2 28 0A             10638 	jr	Z,00102$
                          10639 ;demo.c:1588: puts("vdp2 found! setting 50hz...\r\n");
   38E4 21r8Fs3D          10640 	ld	hl,#__str_29
   38E7 E5                10641 	push	hl
   38E8 CDr00s00          10642 	call	_puts
   38EB F1                10643 	pop	af
   38EC 18 0B             10644 	jr	00103$
   38EE                   10645 00102$:
                          10646 ;demo.c:1591: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n");
   38EE 21rADs3D          10647 	ld	hl,#__str_30
   38F1 E5                10648 	push	hl
   38F2 CDr00s00          10649 	call	_puts
   38F5 F1                10650 	pop	af
                          10651 ;demo.c:1592: do_quit();
   38F6 CDr60s37          10652 	call	_do_quit
   38F9                   10653 00103$:
                          10654 ;demo.c:1595: pal_load("TWISTER PL5",32,0);
   38F9 21 00 00          10655 	ld	hl,#0x0000
   38FC E5                10656 	push	hl
   38FD 3E 20             10657 	ld	a,#0x20
   38FF F5                10658 	push	af
   3900 33                10659 	inc	sp
   3901 21rF2s3D          10660 	ld	hl,#__str_31
   3904 E5                10661 	push	hl
   3905 CDr37s08          10662 	call	_pal_load
   3908 F1                10663 	pop	af
   3909 F1                10664 	pop	af
   390A 33                10665 	inc	sp
                          10666 ;demo.c:1596: memcpy(twister_palette, cur_palette, 32);
   390B 21 20 00          10667 	ld	hl,#0x0020
   390E E5                10668 	push	hl
   390F 21r46s40          10669 	ld	hl,#_cur_palette
   3912 E5                10670 	push	hl
   3913 21rA6s40          10671 	ld	hl,#_twister_palette
   3916 E5                10672 	push	hl
   3917 CDr00s00          10673 	call	_memcpy
   391A F1                10674 	pop	af
   391B F1                10675 	pop	af
   391C F1                10676 	pop	af
                          10677 ;demo.c:1597: pal_load("LF      PL5",32,0);
   391D 21 00 00          10678 	ld	hl,#0x0000
   3920 E5                10679 	push	hl
   3921 3E 20             10680 	ld	a,#0x20
   3923 F5                10681 	push	af
   3924 33                10682 	inc	sp
   3925 21rFEs3D          10683 	ld	hl,#__str_32
   3928 E5                10684 	push	hl
   3929 CDr37s08          10685 	call	_pal_load
   392C F1                10686 	pop	af
   392D F1                10687 	pop	af
   392E 33                10688 	inc	sp
                          10689 ;demo.c:1598: memcpy(tf_palette, cur_palette, 32);
   392F 21 20 00          10690 	ld	hl,#0x0020
   3932 E5                10691 	push	hl
   3933 21r46s40          10692 	ld	hl,#_cur_palette
   3936 E5                10693 	push	hl
   3937 21rC6s40          10694 	ld	hl,#_tf_palette
   393A E5                10695 	push	hl
   393B CDr00s00          10696 	call	_memcpy
   393E F1                10697 	pop	af
   393F F1                10698 	pop	af
   3940 F1                10699 	pop	af
                          10700 ;demo.c:1599: pal_load("BOXES   PL5",32,0);
   3941 21 00 00          10701 	ld	hl,#0x0000
   3944 E5                10702 	push	hl
   3945 3E 20             10703 	ld	a,#0x20
   3947 F5                10704 	push	af
   3948 33                10705 	inc	sp
   3949 21r0As3E          10706 	ld	hl,#__str_33
   394C E5                10707 	push	hl
   394D CDr37s08          10708 	call	_pal_load
   3950 F1                10709 	pop	af
   3951 F1                10710 	pop	af
   3952 33                10711 	inc	sp
                          10712 ;demo.c:1600: memcpy(boxes_palette, cur_palette, 32);
   3953 21 20 00          10713 	ld	hl,#0x0020
   3956 E5                10714 	push	hl
   3957 21r46s40          10715 	ld	hl,#_cur_palette
   395A E5                10716 	push	hl
   395B 21rE6s40          10717 	ld	hl,#_boxes_palette
   395E E5                10718 	push	hl
   395F CDr00s00          10719 	call	_memcpy
   3962 F1                10720 	pop	af
   3963 F1                10721 	pop	af
   3964 F1                10722 	pop	af
                          10723 ;demo.c:1601: pal_load("BULBS   PL5",32,0);
   3965 21 00 00          10724 	ld	hl,#0x0000
   3968 E5                10725 	push	hl
   3969 3E 20             10726 	ld	a,#0x20
   396B F5                10727 	push	af
   396C 33                10728 	inc	sp
   396D 21r16s3E          10729 	ld	hl,#__str_34
   3970 E5                10730 	push	hl
   3971 CDr37s08          10731 	call	_pal_load
   3974 F1                10732 	pop	af
   3975 F1                10733 	pop	af
   3976 33                10734 	inc	sp
                          10735 ;demo.c:1602: memcpy(bulbs_palette, cur_palette, 32);
   3977 21 20 00          10736 	ld	hl,#0x0020
   397A E5                10737 	push	hl
   397B 21r46s40          10738 	ld	hl,#_cur_palette
   397E E5                10739 	push	hl
   397F 21r66s40          10740 	ld	hl,#_bulbs_palette
   3982 E5                10741 	push	hl
   3983 CDr00s00          10742 	call	_memcpy
   3986 F1                10743 	pop	af
   3987 F1                10744 	pop	af
   3988 F1                10745 	pop	af
                          10746 ;demo.c:1603: pal_load("CREDIT1 PL6",32,0);
   3989 21 00 00          10747 	ld	hl,#0x0000
   398C E5                10748 	push	hl
   398D 3E 20             10749 	ld	a,#0x20
   398F F5                10750 	push	af
   3990 33                10751 	inc	sp
   3991 21r22s3E          10752 	ld	hl,#__str_35
   3994 E5                10753 	push	hl
   3995 CDr37s08          10754 	call	_pal_load
   3998 F1                10755 	pop	af
   3999 F1                10756 	pop	af
   399A 33                10757 	inc	sp
                          10758 ;demo.c:1604: memcpy(credits_palette, cur_palette, 32);
   399B 21 20 00          10759 	ld	hl,#0x0020
   399E E5                10760 	push	hl
   399F 21r46s40          10761 	ld	hl,#_cur_palette
   39A2 E5                10762 	push	hl
   39A3 21r06s41          10763 	ld	hl,#_credits_palette
   39A6 E5                10764 	push	hl
   39A7 CDr00s00          10765 	call	_memcpy
   39AA F1                10766 	pop	af
   39AB F1                10767 	pop	af
   39AC F1                10768 	pop	af
                          10769 ;demo.c:1606: puts("all good, starting the demo!\r\n");
   39AD 21r2Es3E          10770 	ld	hl,#__str_36
   39B0 E5                10771 	push	hl
   39B1 CDr00s00          10772 	call	_puts
   39B4 F1                10773 	pop	af
                          10774 ;demo.c:1608: pause();
   39B5 CDr16s09          10775 	call	_pause
                          10776 ;demo.c:1609: pause();
   39B8 CDr16s09          10777 	call	_pause
                          10778 ;demo.c:1610: pause();
   39BB CDr16s09          10779 	call	_pause
                          10780 ;demo.c:1611: pause();
   39BE CDr16s09          10781 	call	_pause
                          10782 ;demo.c:1612: pause();
   39C1 CDr16s09          10783 	call	_pause
                          10784 ;demo.c:1613: pause();
   39C4 CDr16s09          10785 	call	_pause
                          10786 ;demo.c:1615: scratch_clear();
   39C7 CDr24s08          10787 	call	_scratch_clear
                          10788 ;demo.c:1616: vdp_load_palette(scratch);
   39CA 21rC6s3F          10789 	ld	hl,#_scratch
   39CD E5                10790 	push	hl
   39CE CDr00s00          10791 	call	_vdp_load_palette
   39D1 F1                10792 	pop	af
                          10793 ;demo.c:1618: vdp_set_screen5();
   39D2 CDr00s00          10794 	call	_vdp_set_screen5
                          10795 ;demo.c:1620: pck_load("BULBS   PCK",2431,0x0000,VRAM_0,0);
   39D5 21 00 00          10796 	ld	hl,#0x0000
   39D8 E5                10797 	push	hl
   39D9 2E 01             10798 	ld	l, #0x01
   39DB E5                10799 	push	hl
   39DC 2E 00             10800 	ld	l, #0x00
   39DE E5                10801 	push	hl
   39DF 21 7F 09          10802 	ld	hl,#0x097F
   39E2 E5                10803 	push	hl
   39E3 21r4Ds3E          10804 	ld	hl,#__str_37
   39E6 E5                10805 	push	hl
   39E7 CDr2Ds0A          10806 	call	_pck_load
   39EA FD 21 0A 00       10807 	ld	iy,#0x000A
   39EE FD 39             10808 	add	iy,sp
   39F0 FD F9             10809 	ld	sp,iy
                          10810 ;demo.c:1622: cmd.size_x = 256;
   39F2 21r32s41          10811 	ld	hl, #_cmd + 8
   39F5 36 00             10812 	ld	(hl),#0x00
   39F7 23                10813 	inc	hl
   39F8 36 01             10814 	ld	(hl),#0x01
                          10815 ;demo.c:1623: cmd.size_y = 212;
   39FA 21r34s41          10816 	ld	hl, #_cmd + 10
   39FD 36 D4             10817 	ld	(hl),#0xD4
   39FF 23                10818 	inc	hl
   3A00 36 00             10819 	ld	(hl),#0x00
                          10820 ;demo.c:1624: cmd.data = 0;
                          10821 ;demo.c:1625: cmd.argument = 0x00;
   3A02 3E 00             10822 	ld	a,#0x00
   3A04 32r36s41          10823 	ld	(#_cmd + 12),a
   3A07 32r37s41          10824 	ld	(#_cmd + 13),a
                          10825 ;demo.c:1626: cmd.command = 0xd0; 
   3A0A 01r38s41          10826 	ld	bc,#_cmd + 14
   3A0D 3E D0             10827 	ld	a,#0xD0
   3A0F 02                10828 	ld	(bc),a
                          10829 ;demo.c:1627: cmd.source_x = 0;
   3A10 21r2As41          10830 	ld	hl,#_cmd
   3A13 36 00             10831 	ld	(hl),#0x00
   3A15 23                10832 	inc	hl
   3A16 36 00             10833 	ld	(hl),#0x00
                          10834 ;demo.c:1628: cmd.source_y = 0;
   3A18 21r2Cs41          10835 	ld	hl, #_cmd + 2
   3A1B 36 00             10836 	ld	(hl),#0x00
   3A1D 23                10837 	inc	hl
   3A1E 36 00             10838 	ld	(hl),#0x00
                          10839 ;demo.c:1629: cmd.dest_x = 0;
   3A20 21r2Es41          10840 	ld	hl, #_cmd + 4
   3A23 36 00             10841 	ld	(hl),#0x00
   3A25 23                10842 	inc	hl
   3A26 36 00             10843 	ld	(hl),#0x00
                          10844 ;demo.c:1630: cmd.dest_y = 256;
   3A28 21r30s41          10845 	ld	hl, #_cmd + 6
   3A2B 36 00             10846 	ld	(hl),#0x00
   3A2D 23                10847 	inc	hl
   3A2E 36 01             10848 	ld	(hl),#0x01
                          10849 ;demo.c:1631: vdp_copier(&cmd);
   3A30 21r2As41          10850 	ld	hl,#_cmd
   3A33 E5                10851 	push	hl
   3A34 CDr00s00          10852 	call	_vdp_copier
   3A37 F1                10853 	pop	af
                          10854 ;demo.c:1633: pck_load("TWISTER PCK",4032,0x0000,VRAM_0,0);
   3A38 21 00 00          10855 	ld	hl,#0x0000
   3A3B E5                10856 	push	hl
   3A3C 2E 01             10857 	ld	l, #0x01
   3A3E E5                10858 	push	hl
   3A3F 2E 00             10859 	ld	l, #0x00
   3A41 E5                10860 	push	hl
   3A42 21 C0 0F          10861 	ld	hl,#0x0FC0
   3A45 E5                10862 	push	hl
   3A46 21r59s3E          10863 	ld	hl,#__str_38
   3A49 E5                10864 	push	hl
   3A4A CDr2Ds0A          10865 	call	_pck_load
   3A4D FD 21 0A 00       10866 	ld	iy,#0x000A
   3A51 FD 39             10867 	add	iy,sp
   3A53 FD F9             10868 	ld	sp,iy
                          10869 ;demo.c:1635: cmd.size_x = 256;
   3A55 21r32s41          10870 	ld	hl, #_cmd + 8
   3A58 36 00             10871 	ld	(hl),#0x00
   3A5A 23                10872 	inc	hl
   3A5B 36 01             10873 	ld	(hl),#0x01
                          10874 ;demo.c:1636: cmd.size_y = 212;
   3A5D 21r34s41          10875 	ld	hl, #_cmd + 10
   3A60 36 D4             10876 	ld	(hl),#0xD4
   3A62 23                10877 	inc	hl
   3A63 36 00             10878 	ld	(hl),#0x00
                          10879 ;demo.c:1637: cmd.data = 0;
                          10880 ;demo.c:1638: cmd.argument = 0x00;
   3A65 3E 00             10881 	ld	a,#0x00
   3A67 32r36s41          10882 	ld	(#_cmd + 12),a
   3A6A 32r37s41          10883 	ld	(#_cmd + 13),a
                          10884 ;demo.c:1639: cmd.command = 0xd0; 
   3A6D 01r38s41          10885 	ld	bc,#_cmd + 14
   3A70 3E D0             10886 	ld	a,#0xD0
   3A72 02                10887 	ld	(bc),a
                          10888 ;demo.c:1640: cmd.source_x = 0;
   3A73 21r2As41          10889 	ld	hl,#_cmd
   3A76 36 00             10890 	ld	(hl),#0x00
   3A78 23                10891 	inc	hl
   3A79 36 00             10892 	ld	(hl),#0x00
                          10893 ;demo.c:1641: cmd.source_y = 0;
   3A7B 21r2Cs41          10894 	ld	hl, #_cmd + 2
   3A7E 36 00             10895 	ld	(hl),#0x00
   3A80 23                10896 	inc	hl
   3A81 36 00             10897 	ld	(hl),#0x00
                          10898 ;demo.c:1642: cmd.dest_x = 0;
   3A83 21r2Es41          10899 	ld	hl, #_cmd + 4
   3A86 36 00             10900 	ld	(hl),#0x00
   3A88 23                10901 	inc	hl
   3A89 36 00             10902 	ld	(hl),#0x00
                          10903 ;demo.c:1643: cmd.dest_y = 512;
   3A8B 21r30s41          10904 	ld	hl, #_cmd + 6
   3A8E 36 00             10905 	ld	(hl),#0x00
   3A90 23                10906 	inc	hl
   3A91 36 02             10907 	ld	(hl),#0x02
                          10908 ;demo.c:1644: vdp_copier(&cmd);
   3A93 21r2As41          10909 	ld	hl,#_cmd
   3A96 E5                10910 	push	hl
   3A97 CDr00s00          10911 	call	_vdp_copier
   3A9A F1                10912 	pop	af
                          10913 ;demo.c:1647: pck_load("BOXES   PCK",2731,0x0000,VRAM_0,0);
   3A9B 21 00 00          10914 	ld	hl,#0x0000
   3A9E E5                10915 	push	hl
   3A9F 2E 01             10916 	ld	l, #0x01
   3AA1 E5                10917 	push	hl
   3AA2 2E 00             10918 	ld	l, #0x00
   3AA4 E5                10919 	push	hl
   3AA5 21 AB 0A          10920 	ld	hl,#0x0AAB
   3AA8 E5                10921 	push	hl
   3AA9 21r65s3E          10922 	ld	hl,#__str_39
   3AAC E5                10923 	push	hl
   3AAD CDr2Ds0A          10924 	call	_pck_load
   3AB0 FD 21 0A 00       10925 	ld	iy,#0x000A
   3AB4 FD 39             10926 	add	iy,sp
   3AB6 FD F9             10927 	ld	sp,iy
                          10928 ;demo.c:1648: cmd.size_x = 256;
   3AB8 21r32s41          10929 	ld	hl, #_cmd + 8
   3ABB 36 00             10930 	ld	(hl),#0x00
   3ABD 23                10931 	inc	hl
   3ABE 36 01             10932 	ld	(hl),#0x01
                          10933 ;demo.c:1649: cmd.size_y = 212;
   3AC0 21r34s41          10934 	ld	hl, #_cmd + 10
   3AC3 36 D4             10935 	ld	(hl),#0xD4
   3AC5 23                10936 	inc	hl
   3AC6 36 00             10937 	ld	(hl),#0x00
                          10938 ;demo.c:1650: cmd.data = 0;
                          10939 ;demo.c:1651: cmd.argument = 0x00;
   3AC8 3E 00             10940 	ld	a,#0x00
   3ACA 32r36s41          10941 	ld	(#_cmd + 12),a
   3ACD 32r37s41          10942 	ld	(#_cmd + 13),a
                          10943 ;demo.c:1652: cmd.command = 0xd0; 
   3AD0 01r38s41          10944 	ld	bc,#_cmd + 14
   3AD3 3E D0             10945 	ld	a,#0xD0
   3AD5 02                10946 	ld	(bc),a
                          10947 ;demo.c:1653: cmd.source_x = 0;
   3AD6 21r2As41          10948 	ld	hl,#_cmd
   3AD9 36 00             10949 	ld	(hl),#0x00
   3ADB 23                10950 	inc	hl
   3ADC 36 00             10951 	ld	(hl),#0x00
                          10952 ;demo.c:1654: cmd.source_y = 0;
   3ADE 21r2Cs41          10953 	ld	hl, #_cmd + 2
   3AE1 36 00             10954 	ld	(hl),#0x00
   3AE3 23                10955 	inc	hl
   3AE4 36 00             10956 	ld	(hl),#0x00
                          10957 ;demo.c:1655: cmd.dest_x = 0;
   3AE6 21r2Es41          10958 	ld	hl, #_cmd + 4
   3AE9 36 00             10959 	ld	(hl),#0x00
   3AEB 23                10960 	inc	hl
   3AEC 36 00             10961 	ld	(hl),#0x00
                          10962 ;demo.c:1656: cmd.dest_y = 768;
   3AEE 21r30s41          10963 	ld	hl, #_cmd + 6
   3AF1 36 00             10964 	ld	(hl),#0x00
   3AF3 23                10965 	inc	hl
   3AF4 36 03             10966 	ld	(hl),#0x03
                          10967 ;demo.c:1657: vdp_copier(&cmd);
   3AF6 21r2As41          10968 	ld	hl,#_cmd
   3AF9 E5                10969 	push	hl
   3AFA CDr00s00          10970 	call	_vdp_copier
   3AFD F1                10971 	pop	af
                          10972 ;demo.c:1659: memset((uint8_t *) &crebuffer1, 0, 3323);
   3AFE 21 FB 0C          10973 	ld	hl,#0x0CFB
   3B01 E5                10974 	push	hl
   3B02 3E 00             10975 	ld	a,#0x00
   3B04 F5                10976 	push	af
   3B05 33                10977 	inc	sp
   3B06 21rCCs11          10978 	ld	hl,#_crebuffer1
   3B09 E5                10979 	push	hl
   3B0A CDr00s00          10980 	call	_memset
   3B0D F1                10981 	pop	af
   3B0E F1                10982 	pop	af
   3B0F 33                10983 	inc	sp
                          10984 ;demo.c:1660: raw_load("CREDIT1 PCK", 3323, crebuffer1,0);
   3B10 21 00 00          10985 	ld	hl,#0x0000
   3B13 E5                10986 	push	hl
   3B14 21rCCs11          10987 	ld	hl,#_crebuffer1
   3B17 E5                10988 	push	hl
   3B18 21 FB 0C          10989 	ld	hl,#0x0CFB
   3B1B E5                10990 	push	hl
   3B1C 21r71s3E          10991 	ld	hl,#__str_40
   3B1F E5                10992 	push	hl
   3B20 CDr2As09          10993 	call	_raw_load
   3B23 F1                10994 	pop	af
   3B24 F1                10995 	pop	af
   3B25 F1                10996 	pop	af
   3B26 F1                10997 	pop	af
                          10998 ;demo.c:1661: memset((uint8_t *) &crebuffer2, 0, 4724);
   3B27 21 74 12          10999 	ld	hl,#0x1274
   3B2A E5                11000 	push	hl
   3B2B 3E 00             11001 	ld	a,#0x00
   3B2D F5                11002 	push	af
   3B2E 33                11003 	inc	sp
   3B2F 21rC7s1E          11004 	ld	hl,#_crebuffer2
   3B32 E5                11005 	push	hl
   3B33 CDr00s00          11006 	call	_memset
   3B36 F1                11007 	pop	af
   3B37 F1                11008 	pop	af
   3B38 33                11009 	inc	sp
                          11010 ;demo.c:1662: raw_load("CREDIT2 PCK", 4724, crebuffer2,0);
   3B39 21 00 00          11011 	ld	hl,#0x0000
   3B3C E5                11012 	push	hl
   3B3D 21rC7s1E          11013 	ld	hl,#_crebuffer2
   3B40 E5                11014 	push	hl
   3B41 21 74 12          11015 	ld	hl,#0x1274
   3B44 E5                11016 	push	hl
   3B45 21r7Ds3E          11017 	ld	hl,#__str_41
   3B48 E5                11018 	push	hl
   3B49 CDr2As09          11019 	call	_raw_load
   3B4C F1                11020 	pop	af
   3B4D F1                11021 	pop	af
   3B4E F1                11022 	pop	af
   3B4F F1                11023 	pop	af
                          11024 ;demo.c:1663: memset((uint8_t *) &crebuffer3, 0, 3723);
   3B50 21 8B 0E          11025 	ld	hl,#0x0E8B
   3B53 E5                11026 	push	hl
   3B54 3E 00             11027 	ld	a,#0x00
   3B56 F5                11028 	push	af
   3B57 33                11029 	inc	sp
   3B58 21r3Bs31          11030 	ld	hl,#_crebuffer3
   3B5B E5                11031 	push	hl
   3B5C CDr00s00          11032 	call	_memset
   3B5F F1                11033 	pop	af
   3B60 F1                11034 	pop	af
   3B61 33                11035 	inc	sp
                          11036 ;demo.c:1664: raw_load("CREDIT3 PCK", 3723, crebuffer3,0);
   3B62 21 00 00          11037 	ld	hl,#0x0000
   3B65 E5                11038 	push	hl
   3B66 21r3Bs31          11039 	ld	hl,#_crebuffer3
   3B69 E5                11040 	push	hl
   3B6A 21 8B 0E          11041 	ld	hl,#0x0E8B
   3B6D E5                11042 	push	hl
   3B6E 21r89s3E          11043 	ld	hl,#__str_42
   3B71 E5                11044 	push	hl
   3B72 CDr2As09          11045 	call	_raw_load
   3B75 F1                11046 	pop	af
   3B76 F1                11047 	pop	af
   3B77 F1                11048 	pop	af
   3B78 F1                11049 	pop	af
                          11050 ;demo.c:1666: scratch_clear();
   3B79 CDr24s08          11051 	call	_scratch_clear
                          11052 ;demo.c:1667: vdp_load_palette(scratch);
   3B7C 21rC6s3F          11053 	ld	hl,#_scratch
   3B7F E5                11054 	push	hl
   3B80 CDr00s00          11055 	call	_vdp_load_palette
   3B83 F1                11056 	pop	af
                          11057 ;demo.c:1669: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   3B84 21 00 00          11058 	ld	hl,#0x0000
   3B87 E5                11059 	push	hl
   3B88 2E 01             11060 	ld	l, #0x01
   3B8A E5                11061 	push	hl
   3B8B 2E 00             11062 	ld	l, #0x00
   3B8D E5                11063 	push	hl
   3B8E 21 6A 08          11064 	ld	hl,#0x086A
   3B91 E5                11065 	push	hl
   3B92 21r95s3E          11066 	ld	hl,#__str_43
   3B95 E5                11067 	push	hl
   3B96 CDr2Ds0A          11068 	call	_pck_load
   3B99 FD 21 0A 00       11069 	ld	iy,#0x000A
   3B9D FD 39             11070 	add	iy,sp
   3B9F FD F9             11071 	ld	sp,iy
                          11072 ;demo.c:1671: cmd.size_x = 108;
   3BA1 21r32s41          11073 	ld	hl, #_cmd + 8
   3BA4 36 6C             11074 	ld	(hl),#0x6C
   3BA6 23                11075 	inc	hl
   3BA7 36 00             11076 	ld	(hl),#0x00
                          11077 ;demo.c:1672: cmd.size_y = 116;
   3BA9 21r34s41          11078 	ld	hl, #_cmd + 10
   3BAC 36 74             11079 	ld	(hl),#0x74
   3BAE 23                11080 	inc	hl
   3BAF 36 00             11081 	ld	(hl),#0x00
                          11082 ;demo.c:1673: cmd.data = 0;
                          11083 ;demo.c:1674: cmd.argument = 0x00;
   3BB1 3E 00             11084 	ld	a,#0x00
   3BB3 32r36s41          11085 	ld	(#_cmd + 12),a
   3BB6 32r37s41          11086 	ld	(#_cmd + 13),a
                          11087 ;demo.c:1675: cmd.command = 0xd0; 
   3BB9 01r38s41          11088 	ld	bc,#_cmd + 14
   3BBC 3E D0             11089 	ld	a,#0xD0
   3BBE 02                11090 	ld	(bc),a
                          11091 ;demo.c:1676: cmd.source_x = 75;
   3BBF 21r2As41          11092 	ld	hl,#_cmd
   3BC2 36 4B             11093 	ld	(hl),#0x4B
   3BC4 23                11094 	inc	hl
   3BC5 36 00             11095 	ld	(hl),#0x00
                          11096 ;demo.c:1677: cmd.source_y = 50;
   3BC7 21r2Cs41          11097 	ld	hl, #_cmd + 2
   3BCA 36 32             11098 	ld	(hl),#0x32
   3BCC 23                11099 	inc	hl
   3BCD 36 00             11100 	ld	(hl),#0x00
                          11101 ;demo.c:1678: cmd.dest_x = 75;
   3BCF 21r2Es41          11102 	ld	hl, #_cmd + 4
   3BD2 36 4B             11103 	ld	(hl),#0x4B
   3BD4 23                11104 	inc	hl
   3BD5 36 00             11105 	ld	(hl),#0x00
                          11106 ;demo.c:1679: cmd.dest_y = 256;
   3BD7 21r30s41          11107 	ld	hl, #_cmd + 6
   3BDA 36 00             11108 	ld	(hl),#0x00
   3BDC 23                11109 	inc	hl
   3BDD 36 01             11110 	ld	(hl),#0x01
                          11111 ;demo.c:1680: vdp_copier(&cmd);
   3BDF 21r2As41          11112 	ld	hl,#_cmd
   3BE2 E5                11113 	push	hl
   3BE3 CDr00s00          11114 	call	_vdp_copier
   3BE6 F1                11115 	pop	af
                          11116 ;demo.c:1682: cmd.size_x = 108;
   3BE7 21r32s41          11117 	ld	hl, #_cmd + 8
   3BEA 36 6C             11118 	ld	(hl),#0x6C
   3BEC 23                11119 	inc	hl
   3BED 36 00             11120 	ld	(hl),#0x00
                          11121 ;demo.c:1683: cmd.size_y = 60;
   3BEF 21r34s41          11122 	ld	hl, #_cmd + 10
   3BF2 36 3C             11123 	ld	(hl),#0x3C
   3BF4 23                11124 	inc	hl
   3BF5 36 00             11125 	ld	(hl),#0x00
                          11126 ;demo.c:1684: cmd.data = 0;
                          11127 ;demo.c:1685: cmd.argument = 0x00;
   3BF7 3E 00             11128 	ld	a,#0x00
   3BF9 32r36s41          11129 	ld	(#_cmd + 12),a
   3BFC 32r37s41          11130 	ld	(#_cmd + 13),a
                          11131 ;demo.c:1686: cmd.command = 0xd0; 
   3BFF 01r38s41          11132 	ld	bc,#_cmd + 14
   3C02 3E D0             11133 	ld	a,#0xD0
   3C04 02                11134 	ld	(bc),a
                          11135 ;demo.c:1687: cmd.source_x = 75;
   3C05 21r2As41          11136 	ld	hl,#_cmd
   3C08 36 4B             11137 	ld	(hl),#0x4B
   3C0A 23                11138 	inc	hl
   3C0B 36 00             11139 	ld	(hl),#0x00
                          11140 ;demo.c:1688: cmd.source_y = 256+110;
   3C0D 21r2Cs41          11141 	ld	hl, #_cmd + 2
   3C10 36 6E             11142 	ld	(hl),#0x6E
   3C12 23                11143 	inc	hl
   3C13 36 01             11144 	ld	(hl),#0x01
                          11145 ;demo.c:1689: cmd.dest_x = 75;
   3C15 21r2Es41          11146 	ld	hl, #_cmd + 4
   3C18 36 4B             11147 	ld	(hl),#0x4B
   3C1A 23                11148 	inc	hl
   3C1B 36 00             11149 	ld	(hl),#0x00
                          11150 ;demo.c:1690: cmd.dest_y = 40;
   3C1D 21r30s41          11151 	ld	hl, #_cmd + 6
   3C20 36 28             11152 	ld	(hl),#0x28
   3C22 23                11153 	inc	hl
   3C23 36 00             11154 	ld	(hl),#0x00
                          11155 ;demo.c:1691: vdp_copier(&cmd);
   3C25 21r2As41          11156 	ld	hl,#_cmd
   3C28 E5                11157 	push	hl
   3C29 CDr00s00          11158 	call	_vdp_copier
   3C2C F1                11159 	pop	af
                          11160 ;demo.c:1692: cmd.dest_x = 75;
   3C2D 21r2Es41          11161 	ld	hl, #_cmd + 4
   3C30 36 4B             11162 	ld	(hl),#0x4B
   3C32 23                11163 	inc	hl
   3C33 36 00             11164 	ld	(hl),#0x00
                          11165 ;demo.c:1693: cmd.dest_y = 100;
   3C35 21r30s41          11166 	ld	hl, #_cmd + 6
   3C38 36 64             11167 	ld	(hl),#0x64
   3C3A 23                11168 	inc	hl
   3C3B 36 00             11169 	ld	(hl),#0x00
                          11170 ;demo.c:1694: vdp_copier(&cmd);
   3C3D 21r2As41          11171 	ld	hl,#_cmd
   3C40 E5                11172 	push	hl
   3C41 CDr00s00          11173 	call	_vdp_copier
   3C44 F1                11174 	pop	af
                          11175 ;demo.c:1696: pal_load("DSSLOGO PL5",32,0);
   3C45 21 00 00          11176 	ld	hl,#0x0000
   3C48 E5                11177 	push	hl
   3C49 3E 20             11178 	ld	a,#0x20
   3C4B F5                11179 	push	af
   3C4C 33                11180 	inc	sp
   3C4D 21rA1s3E          11181 	ld	hl,#__str_44
   3C50 E5                11182 	push	hl
   3C51 CDr37s08          11183 	call	_pal_load
   3C54 F1                11184 	pop	af
   3C55 F1                11185 	pop	af
   3C56 33                11186 	inc	sp
                          11187 ;demo.c:1698: scratch_clear();
   3C57 CDr24s08          11188 	call	_scratch_clear
                          11189 ;demo.c:1700: vdp_register(9,130); // 50hz,212
   3C5A 21 09 82          11190 	ld	hl,#0x8209
   3C5D E5                11191 	push	hl
   3C5E CDr00s00          11192 	call	_vdp_register
   3C61 F1                11193 	pop	af
                          11194 ;demo.c:1702: install_isr(my_isr);
   3C62 21rECs07          11195 	ld	hl,#_my_isr
   3C65 E5                11196 	push	hl
   3C66 CDr00s00          11197 	call	_install_isr
   3C69 F1                11198 	pop	af
                          11199 ;demo.c:1706: while (!quit) {
   3C6A                   11200 00111$:
   3C6A AF                11201 	xor	a,a
   3C6B DD B6 FF          11202 	or	a,-1 (ix)
   3C6E C2r29s3D          11203 	jp	NZ,00113$
                          11204 ;demo.c:1708: if (vbicount >= scenetimings[timeindex+1]) {
   3C71 21r38s42          11205 	ld	hl,#_timeindex + 0
   3C74 4E                11206 	ld	c,(hl)
   3C75 0C                11207 	inc	c
   3C76 CB 21             11208 	sla	c
   3C78 3Er51             11209 	ld	a,#<_scenetimings
   3C7A 81                11210 	add	a,c
   3C7B 6F                11211 	ld	l,a
   3C7C 3Es41             11212 	ld	a,#>_scenetimings
   3C7E CE 00             11213 	adc	a,#0x00
   3C80 67                11214 	ld	h,a
   3C81 4E                11215 	ld	c,(hl)
   3C82 23                11216 	inc	hl
   3C83 46                11217 	ld	b,(hl)
   3C84 3Ar26s41          11218 	ld	a,(#_vbicount+0)
   3C87 91                11219 	sub	a,c
   3C88 3Ar27s41          11220 	ld	a,(#_vbicount+1)
   3C8B 98                11221 	sbc	a,b
   3C8C FArB5s3C          11222 	jp	M,00105$
                          11223 ;demo.c:1709: sceneindex++;
   3C8F FD 21r36s42       11224 	ld	iy,#_sceneindex
   3C93 FD 34 00          11225 	inc	0 (iy)
   3C96 20 07             11226 	jr	NZ,00153$
   3C98 FD 21r36s42       11227 	ld	iy,#_sceneindex
   3C9C FD 34 01          11228 	inc	1 (iy)
   3C9F                   11229 00153$:
                          11230 ;demo.c:1710: timeindex+=2;
   3C9F 21r38s42          11231 	ld	hl,#_timeindex
   3CA2 7E                11232 	ld	a,(hl)
   3CA3 C6 02             11233 	add	a,#0x02
   3CA5 23                11234 	inc	hl
   3CA6 2B                11235 	dec	hl
   3CA7 C5                11236 	push	bc
   3CA8 4F                11237 	ld	c, a
   3CA9 23                11238 	inc	hl
   3CAA 7E                11239 	ld	a, (hl)
   3CAB 47                11240 	ld	b, a
   3CAC 79                11241 	ld	a, c
   3CAD 2B                11242 	dec	hl
   3CAE 77                11243 	ld	(hl), a
   3CAF 78                11244 	ld	a, b
   3CB0 C1                11245 	pop	bc
   3CB1 CE 00             11246 	adc	a,#0x00
   3CB3 23                11247 	inc	hl
   3CB4 77                11248 	ld	(hl),a
   3CB5                   11249 00105$:
                          11250 ;demo.c:1713: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   3CB5 21r38s42          11251 	ld	hl,#_timeindex + 0
   3CB8 4E                11252 	ld	c,(hl)
   3CB9 21r39s42          11253 	ld	hl,#_timeindex + 1
   3CBC 46                11254 	ld	b,(hl)
   3CBD CB 21             11255 	sla	c
   3CBF CB 10             11256 	rl	b
   3CC1 21r51s41          11257 	ld	hl,#_scenetimings
   3CC4 09                11258 	add	hl,bc
   3CC5 4E                11259 	ld	c,(hl)
   3CC6 23                11260 	inc	hl
   3CC7 46                11261 	ld	b,(hl)
   3CC8 3Ar26s41          11262 	ld	a,(#_vbicount+0)
   3CCB 91                11263 	sub	a,c
   3CCC 3Ar27s41          11264 	ld	a,(#_vbicount+1)
   3CCF 98                11265 	sbc	a,b
   3CD0 FAr15s3D          11266 	jp	M,00107$
   3CD3 21r38s42          11267 	ld	hl,#_timeindex + 0
   3CD6 4E                11268 	ld	c,(hl)
   3CD7 0C                11269 	inc	c
   3CD8 CB 21             11270 	sla	c
   3CDA 3Er51             11271 	ld	a,#<_scenetimings
   3CDC 81                11272 	add	a,c
   3CDD 6F                11273 	ld	l,a
   3CDE 3Es41             11274 	ld	a,#>_scenetimings
   3CE0 CE 00             11275 	adc	a,#0x00
   3CE2 67                11276 	ld	h,a
   3CE3 4E                11277 	ld	c,(hl)
   3CE4 23                11278 	inc	hl
   3CE5 46                11279 	ld	b,(hl)
   3CE6 3Ar26s41          11280 	ld	a,(#_vbicount+0)
   3CE9 91                11281 	sub	a,c
   3CEA FD 21r26s41       11282 	ld	iy,#_vbicount
   3CEE FD 7E 01          11283 	ld	a,1 (iy)
   3CF1 98                11284 	sbc	a,b
   3CF2 F2r15s3D          11285 	jp	P,00107$
                          11286 ;demo.c:1714: waitVB();
   3CF5 76                11287 		halt 
                          11288 ;demo.c:1715: scenepointers[sceneindex]();
   3CF6 21r36s42          11289 	ld	hl,#_sceneindex + 0
   3CF9 4E                11290 	ld	c,(hl)
   3CFA FD 21r36s42       11291 	ld	iy,#_sceneindex
   3CFE FD 46 01          11292 	ld	b,1 (iy)
   3D01 CB 21             11293 	sla	c
   3D03 CB 10             11294 	rl	b
   3D05 21r39s41          11295 	ld	hl,#_scenepointers
   3D08 09                11296 	add	hl,bc
   3D09 4E                11297 	ld	c,(hl)
   3D0A 23                11298 	inc	hl
   3D0B 46                11299 	ld	b,(hl)
   3D0C C5                11300 	push	bc
   3D0D 21r14s3D          11301 	ld	hl,#00158$
   3D10 E5                11302 	push	hl
   3D11 69                11303 	ld	l,c
   3D12 60                11304 	ld	h,b
   3D13 E9                11305 	jp	(hl)
   3D14                   11306 00158$:
   3D14 C1                11307 	pop	bc
   3D15                   11308 00107$:
                          11309 ;demo.c:1719: if(space())
   3D15 21 08 01          11310 	ld	hl,#0x0108
   3D18 E5                11311 	push	hl
   3D19 CDr00s00          11312 	call	_ispressed
   3D1C F1                11313 	pop	af
   3D1D AF                11314 	xor	a,a
   3D1E B5                11315 	or	a,l
   3D1F CAr6As3C          11316 	jp	Z,00111$
                          11317 ;demo.c:1720: quit=1;
   3D22 DD 36 FF 01       11318 	ld	-1 (ix),#0x01
   3D26 C3r6As3C          11319 	jp	00111$
   3D29                   11320 00113$:
                          11321 ;demo.c:1723: do_quit();
   3D29 CDr60s37          11322 	call	_do_quit
   3D2C DD F9             11323 	ld	sp,ix
   3D2E DD E1             11324 	pop	ix
   3D30 C9                11325 	ret
   3D31                   11326 _main_end::
   3D31                   11327 __str_25:
   3D31 5B 73 74 61 72 74 11328 	.ascii "[starting DSS MSX demosystem]"
        69 6E 67 20 44 53
        53 20 4D 53 58 20
        64 65 6D 6F 73 79
        73 74 65 6D 5D
   3D4E 0D                11329 	.db 0x0D
   3D4F 0A                11330 	.db 0x0A
   3D50 0D                11331 	.db 0x0D
   3D51 0A                11332 	.db 0x0A
   3D52 00                11333 	.db 0x00
   3D53                   11334 __str_26:
   3D53 69 6E 69 74 20 73 11335 	.ascii "init sweet PSG bleeps..."
        77 65 65 74 20 50
        53 47 20 62 6C 65
        65 70 73 2E 2E 2E
   3D6B 00                11336 	.db 0x00
   3D6C                   11337 __str_27:
   3D6C 64 6F 6E 65 2E    11338 	.ascii "done."
   3D71 0D                11339 	.db 0x0D
   3D72 0A                11340 	.db 0x0A
   3D73 00                11341 	.db 0x00
   3D74                   11342 __str_28:
   3D74 64 65 74 65 63 74 11343 	.ascii "detecting ya vdp type..."
        69 6E 67 20 79 61
        20 76 64 70 20 74
        79 70 65 2E 2E 2E
   3D8C 0D                11344 	.db 0x0D
   3D8D 0A                11345 	.db 0x0A
   3D8E 00                11346 	.db 0x00
   3D8F                   11347 __str_29:
   3D8F 76 64 70 32 20 66 11348 	.ascii "vdp2 found! setting 50hz..."
        6F 75 6E 64 21 20
        73 65 74 74 69 6E
        67 20 35 30 68 7A
        2E 2E 2E
   3DAA 0D                11349 	.db 0x0D
   3DAB 0A                11350 	.db 0x0A
   3DAC 00                11351 	.db 0x00
   3DAD                   11352 __str_30:
   3DAD 20 76 64 70 31 20 11353 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   3DB9 0D                11354 	.db 0x0D
   3DBA 0A                11355 	.db 0x0A
   3DBB 53 6F 72 72 79 2C 11356 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   3DE9 20 56 52 41 4D 2E 11357 	.ascii " VRAM."
   3DEF 0D                11358 	.db 0x0D
   3DF0 0A                11359 	.db 0x0A
   3DF1 00                11360 	.db 0x00
   3DF2                   11361 __str_31:
   3DF2 54 57 49 53 54 45 11362 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   3DFD 00                11363 	.db 0x00
   3DFE                   11364 __str_32:
   3DFE 4C 46 20 20 20 20 11365 	.ascii "LF      PL5"
        20 20 50 4C 35
   3E09 00                11366 	.db 0x00
   3E0A                   11367 __str_33:
   3E0A 42 4F 58 45 53 20 11368 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   3E15 00                11369 	.db 0x00
   3E16                   11370 __str_34:
   3E16 42 55 4C 42 53 20 11371 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   3E21 00                11372 	.db 0x00
   3E22                   11373 __str_35:
   3E22 43 52 45 44 49 54 11374 	.ascii "CREDIT1 PL6"
        31 20 50 4C 36
   3E2D 00                11375 	.db 0x00
   3E2E                   11376 __str_36:
   3E2E 61 6C 6C 20 67 6F 11377 	.ascii "all good, starting the demo!"
        6F 64 2C 20 73 74
        61 72 74 69 6E 67
        20 74 68 65 20 64
        65 6D 6F 21
   3E4A 0D                11378 	.db 0x0D
   3E4B 0A                11379 	.db 0x0A
   3E4C 00                11380 	.db 0x00
   3E4D                   11381 __str_37:
   3E4D 42 55 4C 42 53 20 11382 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   3E58 00                11383 	.db 0x00
   3E59                   11384 __str_38:
   3E59 54 57 49 53 54 45 11385 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   3E64 00                11386 	.db 0x00
   3E65                   11387 __str_39:
   3E65 42 4F 58 45 53 20 11388 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   3E70 00                11389 	.db 0x00
   3E71                   11390 __str_40:
   3E71 43 52 45 44 49 54 11391 	.ascii "CREDIT1 PCK"
        31 20 50 43 4B
   3E7C 00                11392 	.db 0x00
   3E7D                   11393 __str_41:
   3E7D 43 52 45 44 49 54 11394 	.ascii "CREDIT2 PCK"
        32 20 50 43 4B
   3E88 00                11395 	.db 0x00
   3E89                   11396 __str_42:
   3E89 43 52 45 44 49 54 11397 	.ascii "CREDIT3 PCK"
        33 20 50 43 4B
   3E94 00                11398 	.db 0x00
   3E95                   11399 __str_43:
   3E95 44 53 53 4C 4F 47 11400 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   3EA0 00                11401 	.db 0x00
   3EA1                   11402 __str_44:
   3EA1 44 53 53 4C 4F 47 11403 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   3EAC 00                11404 	.db 0x00
                          11405 	.area _CODE
                          11406 	.area _CABS
