                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.9.0 #5416 (Mar 22 2009) (Mac OS X i386)
                              4 ; This file was generated Tue Feb 27 22:48:23 2018
                              5 ;--------------------------------------------------------
                              6 	.module demo
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _do_quit
                             14 	.globl _tritiles
                             15 	.globl _drawtilescreen
                             16 	.globl _drawtritile
                             17 	.globl _boxes
                             18 	.globl _drawbox
                             19 	.globl _animplay
                             20 	.globl _bulbs
                             21 	.globl _twister
                             22 	.globl _font
                             23 	.globl _drawsine
                             24 	.globl _drawstr
                             25 	.globl _do_letter_tall
                             26 	.globl _do_letter
                             27 	.globl _raster_effu
                             28 	.globl _do_blocks
                             29 	.globl _do_ymmm
                             30 	.globl _fadein
                             31 	.globl _pck_load
                             32 	.globl _raw_load
                             33 	.globl _pause
                             34 	.globl _pal_load
                             35 	.globl _scratch_clear
                             36 	.globl _ge5_load
                             37 	.globl _color_isr
                             38 	.globl _my_isr
                             39 	.globl _isNthBitSet
                             40 	.globl _scenetimings
                             41 	.globl _scenepointers
                             42 	.globl _timeindex
                             43 	.globl _sceneindex
                             44 	.globl _triframes
                             45 	.globl _tripaltick
                             46 	.globl _tripal
                             47 	.globl _tri_inited
                             48 	.globl _pbt
                             49 	.globl _pbx
                             50 	.globl _bonc
                             51 	.globl _bo
                             52 	.globl _byy
                             53 	.globl _bxx
                             54 	.globl _bt
                             55 	.globl _by
                             56 	.globl _bx
                             57 	.globl _prevby
                             58 	.globl _prevbx
                             59 	.globl _prevy
                             60 	.globl _prevx
                             61 	.globl _dbly
                             62 	.globl _buffer
                             63 	.globl _boxes_init
                             64 	.globl _anim_init
                             65 	.globl _enderdir
                             66 	.globl _ender
                             67 	.globl _ff2
                             68 	.globl _ff1
                             69 	.globl _bulbflipper
                             70 	.globl _twinited
                             71 	.globl _ff
                             72 	.globl _ly
                             73 	.globl _lx
                             74 	.globl _linenum
                             75 	.globl _flof
                             76 	.globl _btab
                             77 	.globl _bty
                             78 	.globl _btx
                             79 	.globl _bsy
                             80 	.globl _bsx
                             81 	.globl _block_init
                             82 	.globl _cc
                             83 	.globl _yofff
                             84 	.globl _cmd
                             85 	.globl _tick
                             86 	.globl _vbicount
                             87 	.globl _boxes_palette
                             88 	.globl _tf_palette
                             89 	.globl _twister_palette
                             90 	.globl _block_palette
                             91 	.globl _cur_palette
                             92 	.globl _scratch
                             93 	.globl _packbuffer
                             94 	.globl _tri_lookup_y
                             95 	.globl _tri_lookup_x
                             96 	.globl _sintab
                             97 	.globl _font_w
                             98 	.globl _font_y
                             99 	.globl _font_x
                            100 	.globl _tri_side2
                            101 	.globl _tri_side1
                            102 	.globl _tri_dia
                            103 	.globl _tri_up
                            104 	.globl _tri_center
                            105 	.globl _sintabx
                            106 ;--------------------------------------------------------
                            107 ; special function registers
                            108 ;--------------------------------------------------------
                            109 ;--------------------------------------------------------
                            110 ;  ram data
                            111 ;--------------------------------------------------------
                            112 	.area _DATA
   0000                     113 _sintab::
   0000                     114 	.ds 256
   0100                     115 _tri_lookup_x::
   0100                     116 	.ds 32
   0120                     117 _tri_lookup_y::
   0120                     118 	.ds 64
   0160                     119 _packbuffer::
   0160                     120 	.ds 12000
   3040                     121 _scratch::
   3040                     122 	.ds 128
   30C0                     123 _cur_palette::
   30C0                     124 	.ds 32
   30E0                     125 _block_palette::
   30E0                     126 	.ds 32
   3100                     127 _twister_palette::
   3100                     128 	.ds 32
   3120                     129 _tf_palette::
   3120                     130 	.ds 32
   3140                     131 _boxes_palette::
   3140                     132 	.ds 32
   3160                     133 _vbicount::
   3160                     134 	.ds 2
   3162                     135 _tick::
   3162                     136 	.ds 2
   3164                     137 _cmd::
   3164                     138 	.ds 15
   3173                     139 _isNthBitSet_mask_1_1:
   3173                     140 	.ds 8
   317B                     141 _yofff::
   317B                     142 	.ds 1
   317C                     143 _cc::
   317C                     144 	.ds 1
   317D                     145 _flipper:
   317D                     146 	.ds 2
   317F                     147 _ymmmf:
   317F                     148 	.ds 2
   3181                     149 _block_init::
   3181                     150 	.ds 1
   3182                     151 _bsx::
   3182                     152 	.ds 2
   3184                     153 _bsy::
   3184                     154 	.ds 2
   3186                     155 _btx::
   3186                     156 	.ds 2
   3188                     157 _bty::
   3188                     158 	.ds 2
   318A                     159 _btab::
   318A                     160 	.ds 32
   31AA                     161 _flof::
   31AA                     162 	.ds 2
   31AC                     163 _linenum::
   31AC                     164 	.ds 2
   31AE                     165 _lx::
   31AE                     166 	.ds 1
   31AF                     167 _ly::
   31AF                     168 	.ds 1
   31B0                     169 _ff::
   31B0                     170 	.ds 2
   31B2                     171 _twinited::
   31B2                     172 	.ds 2
   31B4                     173 _bulbflipper::
   31B4                     174 	.ds 2
   31B6                     175 _ff1::
   31B6                     176 	.ds 2
   31B8                     177 _ff2::
   31B8                     178 	.ds 2
   31BA                     179 _ender::
   31BA                     180 	.ds 2
   31BC                     181 _enderdir::
   31BC                     182 	.ds 2
   31BE                     183 _xo:
   31BE                     184 	.ds 2
   31C0                     185 _yo:
   31C0                     186 	.ds 2
   31C2                     187 _po:
   31C2                     188 	.ds 2
   31C4                     189 _fffaaa:
   31C4                     190 	.ds 2
   31C6                     191 _anim_init::
   31C6                     192 	.ds 2
   31C8                     193 _boxes_init::
   31C8                     194 	.ds 1
   31C9                     195 _buffer::
   31C9                     196 	.ds 2
   31CB                     197 _dbly::
   31CB                     198 	.ds 2
   31CD                     199 _prevx::
   31CD                     200 	.ds 2
   31CF                     201 _prevy::
   31CF                     202 	.ds 2
   31D1                     203 _prevbx::
   31D1                     204 	.ds 2
   31D3                     205 _prevby::
   31D3                     206 	.ds 2
   31D5                     207 _bx::
   31D5                     208 	.ds 2
   31D7                     209 _by::
   31D7                     210 	.ds 2
   31D9                     211 _bt::
   31D9                     212 	.ds 2
   31DB                     213 _bxx::
   31DB                     214 	.ds 2
   31DD                     215 _byy::
   31DD                     216 	.ds 2
   31DF                     217 _bo::
   31DF                     218 	.ds 2
   31E1                     219 _bonc::
   31E1                     220 	.ds 2
   31E3                     221 _pbx::
   31E3                     222 	.ds 2
   31E5                     223 _pbt::
   31E5                     224 	.ds 2
   31E7                     225 _tri_inited::
   31E7                     226 	.ds 1
   31E8                     227 _tripal::
   31E8                     228 	.ds 9
   31F1                     229 _tripaltick::
   31F1                     230 	.ds 1
   31F2                     231 _triframes::
   31F2                     232 	.ds 2
   31F4                     233 _sceneindex::
   31F4                     234 	.ds 2
   31F6                     235 _timeindex::
   31F6                     236 	.ds 2
   31F8                     237 _scenepointers::
   31F8                     238 	.ds 10
   3202                     239 _scenetimings::
   3202                     240 	.ds 20
                            241 ;--------------------------------------------------------
                            242 ; overlayable items in  ram 
                            243 ;--------------------------------------------------------
                            244 	.area _OVERLAY
                            245 ;--------------------------------------------------------
                            246 ; external initialized ram data
                            247 ;--------------------------------------------------------
                            248 ;--------------------------------------------------------
                            249 ; global & static initialisations
                            250 ;--------------------------------------------------------
                            251 	.area _HOME
                            252 	.area _GSINIT
                            253 	.area _GSFINAL
                            254 	.area _GSINIT
                            255 ;demo.c:131: static unsigned char mask[] = {1, 2, 4, 8, 16, 32, 64, 128};
   0000 21r73s31            256 	ld	hl,#_isNthBitSet_mask_1_1
   0003 CDr00s00            257 	call	__initrleblock
   0006 08                  258 	.db	8
   0007 01 02 04 08 10 20   259 	.db	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80
        40 80
   000F 00                  260 	.db	0
                            261 ;types.h:27: signed char sintab[256]={
   0010 21r00s00            262 	ld	hl,#_sintab
   0013 CDr00s00            263 	call	__initrleblock
   0016 3B                  264 	.db	59
   0017 00 03 06 09 0C 0F   265 	.db	0x00, 0x03, 0x06, 0x09, 0x0C, 0x0F, 0x12, 0x15
        12 15
   001F 18 1B 1E 21 24 27   266 	.db	0x18, 0x1B, 0x1E, 0x21, 0x24, 0x27, 0x2A, 0x2D
        2A 2D
   0027 30 33 36 39 3B 3E   267 	.db	0x30, 0x33, 0x36, 0x39, 0x3B, 0x3E, 0x41, 0x43
        41 43
   002F 46 49 4B 4E 50 52   268 	.db	0x46, 0x49, 0x4B, 0x4E, 0x50, 0x52, 0x55, 0x57
        55 57
   0037 59 5B 5E 60 62 64   269 	.db	0x59, 0x5B, 0x5E, 0x60, 0x62, 0x64, 0x66, 0x67
        66 67
   003F 69 6B 6C 6E 70 71   270 	.db	0x69, 0x6B, 0x6C, 0x6E, 0x70, 0x71, 0x72, 0x74
        72 74
   0047 75 76 77 78 79 7A   271 	.db	0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7B
        7B 7B
   004F 7C 7D 7D            272 	.db	0x7C, 0x7D, 0x7D
   0052 FB 7E               273 	.db	#-5,#0x7E
   0054 01                  274 	.db	1
   0055 7F                  275 	.db	0x7F
   0056 FB 7E               276 	.db	#-5,#0x7E
   0058 75                  277 	.db	117
   0059 7D 7D 7C 7B 7B 7A   278 	.db	0x7D, 0x7D, 0x7C, 0x7B, 0x7B, 0x7A, 0x79, 0x78
        79 78
   0061 77 76 75 74 72 71   279 	.db	0x77, 0x76, 0x75, 0x74, 0x72, 0x71, 0x70, 0x6E
        70 6E
   0069 6C 6B 69 67 66 64   280 	.db	0x6C, 0x6B, 0x69, 0x67, 0x66, 0x64, 0x62, 0x60
        62 60
   0071 5E 5B 59 57 55 52   281 	.db	0x5E, 0x5B, 0x59, 0x57, 0x55, 0x52, 0x50, 0x4E
        50 4E
   0079 4B 49 46 43 41 3E   282 	.db	0x4B, 0x49, 0x46, 0x43, 0x41, 0x3E, 0x3B, 0x39
        3B 39
   0081 36 33 30 2D 2A 27   283 	.db	0x36, 0x33, 0x30, 0x2D, 0x2A, 0x27, 0x24, 0x21
        24 21
   0089 1E 1B 18 15 12 0F   284 	.db	0x1E, 0x1B, 0x18, 0x15, 0x12, 0x0F, 0x0C, 0x09
        0C 09
   0091 06 03 00 FD FA F7   285 	.db	0x06, 0x03, 0x00, 0xFD, 0xFA, 0xF7, 0xF4, 0xF1
        F4 F1
   0099 EE EB E8 E5 E2 DF   286 	.db	0xEE, 0xEB, 0xE8, 0xE5, 0xE2, 0xDF, 0xDC, 0xD9
        DC D9
   00A1 D6 D3 D0 CD CA C7   287 	.db	0xD6, 0xD3, 0xD0, 0xCD, 0xCA, 0xC7, 0xC5, 0xC2
        C5 C2
   00A9 BF BD BA B7 B5 B2   288 	.db	0xBF, 0xBD, 0xBA, 0xB7, 0xB5, 0xB2, 0xB0, 0xAE
        B0 AE
   00B1 AB A9 A7 A5 A2 A0   289 	.db	0xAB, 0xA9, 0xA7, 0xA5, 0xA2, 0xA0, 0x9E, 0x9C
        9E 9C
   00B9 9A 99 97 95 94 92   290 	.db	0x9A, 0x99, 0x97, 0x95, 0x94, 0x92, 0x90, 0x8F
        90 8F
   00C1 8E 8C 8B 8A 89 88   291 	.db	0x8E, 0x8C, 0x8B, 0x8A, 0x89, 0x88, 0x87, 0x86
        87 86
   00C9 85 85 84 83 83      292 	.db	0x85, 0x85, 0x84, 0x83, 0x83
   00CE FB 82               293 	.db	#-5,#0x82
   00D0 01                  294 	.db	1
   00D1 81                  295 	.db	0x81
   00D2 FB 82               296 	.db	#-5,#0x82
   00D4 3A                  297 	.db	58
   00D5 83 83 84 85 85 86   298 	.db	0x83, 0x83, 0x84, 0x85, 0x85, 0x86, 0x87, 0x88
        87 88
   00DD 89 8A 8B 8C 8E 8F   299 	.db	0x89, 0x8A, 0x8B, 0x8C, 0x8E, 0x8F, 0x90, 0x92
        90 92
   00E5 94 95 97 99 9A 9C   300 	.db	0x94, 0x95, 0x97, 0x99, 0x9A, 0x9C, 0x9E, 0xA0
        9E A0
   00ED A2 A5 A7 A9 AB AE   301 	.db	0xA2, 0xA5, 0xA7, 0xA9, 0xAB, 0xAE, 0xB0, 0xB2
        B0 B2
   00F5 B5 B7 BA BD BF C2   302 	.db	0xB5, 0xB7, 0xBA, 0xBD, 0xBF, 0xC2, 0xC5, 0xC7
        C5 C7
   00FD CA CD D0 D3 D6 D9   303 	.db	0xCA, 0xCD, 0xD0, 0xD3, 0xD6, 0xD9, 0xDC, 0xDF
        DC DF
   0105 E2 E5 E8 EB EE F1   304 	.db	0xE2, 0xE5, 0xE8, 0xEB, 0xEE, 0xF1, 0xF4, 0xF7
        F4 F7
   010D FA FD               305 	.db	0xFA, 0xFD
   010F 00                  306 	.db	0
                            307 ;demo.c:113: uint8_t tri_lookup_x[16*2] = { 0 };
   0110 21r00s01            308 	ld	hl,#_tri_lookup_x
   0113 CDr00s00            309 	call	__initrleblock
   0116 E0 00               310 	.db	#-32,#0x00
   0118 00                  311 	.db	0
                            312 ;demo.c:114: int tri_lookup_y[16*2] = { 0 };
   0119 21r20s01            313 	ld	hl,#_tri_lookup_y
   011C CDr00s00            314 	call	__initrleblock
   011F C0 00               315 	.db	#-64,#0x00
   0121 00                  316 	.db	0
                            317 ;demo.c:116: uint8_t packbuffer[12000] = {0};
   0122 21r60s01            318 	ld	hl,#_packbuffer
   0125 CDr00s00            319 	call	__initrleblock
   0128 81 00               320 	.db	#-127,#0x00
   012A 81 00               321 	.db	#-127,#0x00
   012C 81 00               322 	.db	#-127,#0x00
   012E 81 00               323 	.db	#-127,#0x00
   0130 81 00               324 	.db	#-127,#0x00
   0132 81 00               325 	.db	#-127,#0x00
   0134 81 00               326 	.db	#-127,#0x00
   0136 81 00               327 	.db	#-127,#0x00
   0138 81 00               328 	.db	#-127,#0x00
   013A 81 00               329 	.db	#-127,#0x00
   013C 81 00               330 	.db	#-127,#0x00
   013E 81 00               331 	.db	#-127,#0x00
   0140 81 00               332 	.db	#-127,#0x00
   0142 81 00               333 	.db	#-127,#0x00
   0144 81 00               334 	.db	#-127,#0x00
   0146 81 00               335 	.db	#-127,#0x00
   0148 81 00               336 	.db	#-127,#0x00
   014A 81 00               337 	.db	#-127,#0x00
   014C 81 00               338 	.db	#-127,#0x00
   014E 81 00               339 	.db	#-127,#0x00
   0150 81 00               340 	.db	#-127,#0x00
   0152 81 00               341 	.db	#-127,#0x00
   0154 81 00               342 	.db	#-127,#0x00
   0156 81 00               343 	.db	#-127,#0x00
   0158 81 00               344 	.db	#-127,#0x00
   015A 81 00               345 	.db	#-127,#0x00
   015C 81 00               346 	.db	#-127,#0x00
   015E 81 00               347 	.db	#-127,#0x00
   0160 81 00               348 	.db	#-127,#0x00
   0162 81 00               349 	.db	#-127,#0x00
   0164 81 00               350 	.db	#-127,#0x00
   0166 81 00               351 	.db	#-127,#0x00
   0168 81 00               352 	.db	#-127,#0x00
   016A 81 00               353 	.db	#-127,#0x00
   016C 81 00               354 	.db	#-127,#0x00
   016E 81 00               355 	.db	#-127,#0x00
   0170 81 00               356 	.db	#-127,#0x00
   0172 81 00               357 	.db	#-127,#0x00
   0174 81 00               358 	.db	#-127,#0x00
   0176 81 00               359 	.db	#-127,#0x00
   0178 81 00               360 	.db	#-127,#0x00
   017A 81 00               361 	.db	#-127,#0x00
   017C 81 00               362 	.db	#-127,#0x00
   017E 81 00               363 	.db	#-127,#0x00
   0180 81 00               364 	.db	#-127,#0x00
   0182 81 00               365 	.db	#-127,#0x00
   0184 81 00               366 	.db	#-127,#0x00
   0186 81 00               367 	.db	#-127,#0x00
   0188 81 00               368 	.db	#-127,#0x00
   018A 81 00               369 	.db	#-127,#0x00
   018C 81 00               370 	.db	#-127,#0x00
   018E 81 00               371 	.db	#-127,#0x00
   0190 81 00               372 	.db	#-127,#0x00
   0192 81 00               373 	.db	#-127,#0x00
   0194 81 00               374 	.db	#-127,#0x00
   0196 81 00               375 	.db	#-127,#0x00
   0198 81 00               376 	.db	#-127,#0x00
   019A 81 00               377 	.db	#-127,#0x00
   019C 81 00               378 	.db	#-127,#0x00
   019E 81 00               379 	.db	#-127,#0x00
   01A0 81 00               380 	.db	#-127,#0x00
   01A2 81 00               381 	.db	#-127,#0x00
   01A4 81 00               382 	.db	#-127,#0x00
   01A6 81 00               383 	.db	#-127,#0x00
   01A8 81 00               384 	.db	#-127,#0x00
   01AA 81 00               385 	.db	#-127,#0x00
   01AC 81 00               386 	.db	#-127,#0x00
   01AE 81 00               387 	.db	#-127,#0x00
   01B0 81 00               388 	.db	#-127,#0x00
   01B2 81 00               389 	.db	#-127,#0x00
   01B4 81 00               390 	.db	#-127,#0x00
   01B6 81 00               391 	.db	#-127,#0x00
   01B8 81 00               392 	.db	#-127,#0x00
   01BA 81 00               393 	.db	#-127,#0x00
   01BC 81 00               394 	.db	#-127,#0x00
   01BE 81 00               395 	.db	#-127,#0x00
   01C0 81 00               396 	.db	#-127,#0x00
   01C2 81 00               397 	.db	#-127,#0x00
   01C4 81 00               398 	.db	#-127,#0x00
   01C6 81 00               399 	.db	#-127,#0x00
   01C8 81 00               400 	.db	#-127,#0x00
   01CA 81 00               401 	.db	#-127,#0x00
   01CC 81 00               402 	.db	#-127,#0x00
   01CE 81 00               403 	.db	#-127,#0x00
   01D0 81 00               404 	.db	#-127,#0x00
   01D2 81 00               405 	.db	#-127,#0x00
   01D4 81 00               406 	.db	#-127,#0x00
   01D6 81 00               407 	.db	#-127,#0x00
   01D8 81 00               408 	.db	#-127,#0x00
   01DA 81 00               409 	.db	#-127,#0x00
   01DC 81 00               410 	.db	#-127,#0x00
   01DE 81 00               411 	.db	#-127,#0x00
   01E0 81 00               412 	.db	#-127,#0x00
   01E2 81 00               413 	.db	#-127,#0x00
   01E4 C2 00               414 	.db	#-62,#0x00
   01E6 00                  415 	.db	0
                            416 ;demo.c:125: volatile int vbicount=0;
   01E7 FD 21r60s31         417 	ld	iy,#_vbicount
   01EB FD 36 00 00         418 	ld	0 (iy),#0x00
   01EF FD 21r60s31         419 	ld	iy,#_vbicount
   01F3 FD 36 01 00         420 	ld	1 (iy),#0x00
                            421 ;demo.c:126: volatile int tick=0;
   01F7 FD 21r62s31         422 	ld	iy,#_tick
   01FB FD 36 00 00         423 	ld	0 (iy),#0x00
   01FF FD 21r62s31         424 	ld	iy,#_tick
   0203 FD 36 01 00         425 	ld	1 (iy),#0x00
                            426 ;demo.c:326: uint8_t yofff = 0;
   0207 FD 21r7Bs31         427 	ld	iy,#_yofff
   020B FD 36 00 00         428 	ld	0 (iy),#0x00
                            429 ;demo.c:327: uint8_t cc = 0;
   020F FD 21r7Cs31         430 	ld	iy,#_cc
   0213 FD 36 00 00         431 	ld	0 (iy),#0x00
                            432 ;demo.c:328: static int flipper = 0;
   0217 FD 21r7Ds31         433 	ld	iy,#_flipper
   021B FD 36 00 00         434 	ld	0 (iy),#0x00
   021F FD 21r7Ds31         435 	ld	iy,#_flipper
   0223 FD 36 01 00         436 	ld	1 (iy),#0x00
                            437 ;demo.c:329: static int ymmmf = 0;
   0227 FD 21r7Fs31         438 	ld	iy,#_ymmmf
   022B FD 36 00 00         439 	ld	0 (iy),#0x00
   022F FD 21r7Fs31         440 	ld	iy,#_ymmmf
   0233 FD 36 01 00         441 	ld	1 (iy),#0x00
                            442 ;demo.c:360: char block_init = 0;
   0237 FD 21r81s31         443 	ld	iy,#_block_init
   023B FD 36 00 00         444 	ld	0 (iy),#0x00
                            445 ;demo.c:362: int bsx = 0;
   023F FD 21r82s31         446 	ld	iy,#_bsx
   0243 FD 36 00 00         447 	ld	0 (iy),#0x00
   0247 FD 21r82s31         448 	ld	iy,#_bsx
   024B FD 36 01 00         449 	ld	1 (iy),#0x00
                            450 ;demo.c:363: int bsy = 0;
   024F FD 21r84s31         451 	ld	iy,#_bsy
   0253 FD 36 00 00         452 	ld	0 (iy),#0x00
   0257 FD 21r84s31         453 	ld	iy,#_bsy
   025B FD 36 01 00         454 	ld	1 (iy),#0x00
                            455 ;demo.c:364: int btx = 0;
   025F FD 21r86s31         456 	ld	iy,#_btx
   0263 FD 36 00 00         457 	ld	0 (iy),#0x00
   0267 FD 21r86s31         458 	ld	iy,#_btx
   026B FD 36 01 00         459 	ld	1 (iy),#0x00
                            460 ;demo.c:365: int bty = 0;
   026F FD 21r88s31         461 	ld	iy,#_bty
   0273 FD 36 00 00         462 	ld	0 (iy),#0x00
   0277 FD 21r88s31         463 	ld	iy,#_bty
   027B FD 36 01 00         464 	ld	1 (iy),#0x00
                            465 ;demo.c:367: int btab[16] = {0};
   027F 21r8As31            466 	ld	hl,#_btab
   0282 CDr00s00            467 	call	__initrleblock
   0285 E0 00               468 	.db	#-32,#0x00
   0287 00                  469 	.db	0
                            470 ;demo.c:369: int flof = 0;
   0288 FD 21rAAs31         471 	ld	iy,#_flof
   028C FD 36 00 00         472 	ld	0 (iy),#0x00
   0290 FD 21rAAs31         473 	ld	iy,#_flof
   0294 FD 36 01 00         474 	ld	1 (iy),#0x00
                            475 ;demo.c:418: int linenum = 0;
   0298 FD 21rACs31         476 	ld	iy,#_linenum
   029C FD 36 00 00         477 	ld	0 (iy),#0x00
   02A0 FD 21rACs31         478 	ld	iy,#_linenum
   02A4 FD 36 01 00         479 	ld	1 (iy),#0x00
                            480 ;demo.c:476: uint8_t lx = 0;
   02A8 FD 21rAEs31         481 	ld	iy,#_lx
   02AC FD 36 00 00         482 	ld	0 (iy),#0x00
                            483 ;demo.c:477: uint8_t ly = 0;
   02B0 FD 21rAFs31         484 	ld	iy,#_ly
   02B4 FD 36 00 00         485 	ld	0 (iy),#0x00
                            486 ;demo.c:540: int ff = 0;
   02B8 FD 21rB0s31         487 	ld	iy,#_ff
   02BC FD 36 00 00         488 	ld	0 (iy),#0x00
   02C0 FD 21rB0s31         489 	ld	iy,#_ff
   02C4 FD 36 01 00         490 	ld	1 (iy),#0x00
                            491 ;demo.c:541: int twinited = 0;
   02C8 FD 21rB2s31         492 	ld	iy,#_twinited
   02CC FD 36 00 00         493 	ld	0 (iy),#0x00
   02D0 FD 21rB2s31         494 	ld	iy,#_twinited
   02D4 FD 36 01 00         495 	ld	1 (iy),#0x00
                            496 ;demo.c:590: int bulbflipper = 1;
   02D8 FD 21rB4s31         497 	ld	iy,#_bulbflipper
   02DC FD 36 00 01         498 	ld	0 (iy),#0x01
   02E0 FD 21rB4s31         499 	ld	iy,#_bulbflipper
   02E4 FD 36 01 00         500 	ld	1 (iy),#0x00
                            501 ;demo.c:592: int ff1,ff2 = 0;
   02E8 FD 21rB8s31         502 	ld	iy,#_ff2
   02EC FD 36 00 00         503 	ld	0 (iy),#0x00
   02F0 FD 21rB8s31         504 	ld	iy,#_ff2
   02F4 FD 36 01 00         505 	ld	1 (iy),#0x00
                            506 ;demo.c:593: int ender = 212;
   02F8 FD 21rBAs31         507 	ld	iy,#_ender
   02FC FD 36 00 D4         508 	ld	0 (iy),#0xD4
   0300 FD 21rBAs31         509 	ld	iy,#_ender
   0304 FD 36 01 00         510 	ld	1 (iy),#0x00
                            511 ;demo.c:594: int enderdir = -1;
   0308 FD 21rBCs31         512 	ld	iy,#_enderdir
   030C FD 36 00 FF         513 	ld	0 (iy),#0xFF
   0310 FD 21rBCs31         514 	ld	iy,#_enderdir
   0314 FD 36 01 FF         515 	ld	1 (iy),#0xFF
                            516 ;demo.c:649: static int xo = 0;
   0318 FD 21rBEs31         517 	ld	iy,#_xo
   031C FD 36 00 00         518 	ld	0 (iy),#0x00
   0320 FD 21rBEs31         519 	ld	iy,#_xo
   0324 FD 36 01 00         520 	ld	1 (iy),#0x00
                            521 ;demo.c:650: static int yo = 0;
   0328 FD 21rC0s31         522 	ld	iy,#_yo
   032C FD 36 00 00         523 	ld	0 (iy),#0x00
   0330 FD 21rC0s31         524 	ld	iy,#_yo
   0334 FD 36 01 00         525 	ld	1 (iy),#0x00
                            526 ;demo.c:651: static int po = 0;
   0338 FD 21rC2s31         527 	ld	iy,#_po
   033C FD 36 00 00         528 	ld	0 (iy),#0x00
   0340 FD 21rC2s31         529 	ld	iy,#_po
   0344 FD 36 01 00         530 	ld	1 (iy),#0x00
                            531 ;demo.c:652: static int fffaaa = 0;
   0348 FD 21rC4s31         532 	ld	iy,#_fffaaa
   034C FD 36 00 00         533 	ld	0 (iy),#0x00
   0350 FD 21rC4s31         534 	ld	iy,#_fffaaa
   0354 FD 36 01 00         535 	ld	1 (iy),#0x00
                            536 ;demo.c:654: int anim_init = 0;
   0358 FD 21rC6s31         537 	ld	iy,#_anim_init
   035C FD 36 00 00         538 	ld	0 (iy),#0x00
   0360 FD 21rC6s31         539 	ld	iy,#_anim_init
   0364 FD 36 01 00         540 	ld	1 (iy),#0x00
                            541 ;demo.c:708: uint8_t boxes_init = 0;
   0368 FD 21rC8s31         542 	ld	iy,#_boxes_init
   036C FD 36 00 00         543 	ld	0 (iy),#0x00
                            544 ;demo.c:709: int buffer = 1;
   0370 FD 21rC9s31         545 	ld	iy,#_buffer
   0374 FD 36 00 01         546 	ld	0 (iy),#0x01
   0378 FD 21rC9s31         547 	ld	iy,#_buffer
   037C FD 36 01 00         548 	ld	1 (iy),#0x00
                            549 ;demo.c:710: int dbly = 0;
   0380 FD 21rCBs31         550 	ld	iy,#_dbly
   0384 FD 36 00 00         551 	ld	0 (iy),#0x00
   0388 FD 21rCBs31         552 	ld	iy,#_dbly
   038C FD 36 01 00         553 	ld	1 (iy),#0x00
                            554 ;demo.c:711: int prevx = -1;
   0390 FD 21rCDs31         555 	ld	iy,#_prevx
   0394 FD 36 00 FF         556 	ld	0 (iy),#0xFF
   0398 FD 21rCDs31         557 	ld	iy,#_prevx
   039C FD 36 01 FF         558 	ld	1 (iy),#0xFF
                            559 ;demo.c:736: int bx = 256-42;
   03A0 FD 21rD5s31         560 	ld	iy,#_bx
   03A4 FD 36 00 D6         561 	ld	0 (iy),#0xD6
   03A8 FD 21rD5s31         562 	ld	iy,#_bx
   03AC FD 36 01 00         563 	ld	1 (iy),#0x00
                            564 ;demo.c:737: int by = 84;
   03B0 FD 21rD7s31         565 	ld	iy,#_by
   03B4 FD 36 00 54         566 	ld	0 (iy),#0x54
   03B8 FD 21rD7s31         567 	ld	iy,#_by
   03BC FD 36 01 00         568 	ld	1 (iy),#0x00
                            569 ;demo.c:738: int bt = 0;
   03C0 FD 21rD9s31         570 	ld	iy,#_bt
   03C4 FD 36 00 00         571 	ld	0 (iy),#0x00
   03C8 FD 21rD9s31         572 	ld	iy,#_bt
   03CC FD 36 01 00         573 	ld	1 (iy),#0x00
                            574 ;demo.c:739: int bxx = 0;
   03D0 FD 21rDBs31         575 	ld	iy,#_bxx
   03D4 FD 36 00 00         576 	ld	0 (iy),#0x00
   03D8 FD 21rDBs31         577 	ld	iy,#_bxx
   03DC FD 36 01 00         578 	ld	1 (iy),#0x00
                            579 ;demo.c:740: int byy = 0;
   03E0 FD 21rDDs31         580 	ld	iy,#_byy
   03E4 FD 36 00 00         581 	ld	0 (iy),#0x00
   03E8 FD 21rDDs31         582 	ld	iy,#_byy
   03EC FD 36 01 00         583 	ld	1 (iy),#0x00
                            584 ;demo.c:741: int bo = 0;
   03F0 FD 21rDFs31         585 	ld	iy,#_bo
   03F4 FD 36 00 00         586 	ld	0 (iy),#0x00
   03F8 FD 21rDFs31         587 	ld	iy,#_bo
   03FC FD 36 01 00         588 	ld	1 (iy),#0x00
                            589 ;demo.c:743: int bonc = 0;
   0400 FD 21rE1s31         590 	ld	iy,#_bonc
   0404 FD 36 00 00         591 	ld	0 (iy),#0x00
   0408 FD 21rE1s31         592 	ld	iy,#_bonc
   040C FD 36 01 00         593 	ld	1 (iy),#0x00
                            594 ;demo.c:744: int pbx = 0;
   0410 FD 21rE3s31         595 	ld	iy,#_pbx
   0414 FD 36 00 00         596 	ld	0 (iy),#0x00
   0418 FD 21rE3s31         597 	ld	iy,#_pbx
   041C FD 36 01 00         598 	ld	1 (iy),#0x00
                            599 ;demo.c:745: int pbt = 0;
   0420 FD 21rE5s31         600 	ld	iy,#_pbt
   0424 FD 36 00 00         601 	ld	0 (iy),#0x00
   0428 FD 21rE5s31         602 	ld	iy,#_pbt
   042C FD 36 01 00         603 	ld	1 (iy),#0x00
                            604 ;demo.c:847: uint8_t tri_inited = 0;
   0430 FD 21rE7s31         605 	ld	iy,#_tri_inited
   0434 FD 36 00 00         606 	ld	0 (iy),#0x00
                            607 ;demo.c:875: char tripal[9] = {
   0438 21rE8s31            608 	ld	hl,#_tripal
   043B CDr00s00            609 	call	__initrleblock
   043E 09                  610 	.db	9
   043F 02 02 01 01 02 03   611 	.db	0x02, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00, 0x04
        00 04
   0447 02                  612 	.db	0x02
   0448 00                  613 	.db	0
                            614 ;demo.c:881: uint8_t tripaltick = 0;
   0449 FD 21rF1s31         615 	ld	iy,#_tripaltick
   044D FD 36 00 00         616 	ld	0 (iy),#0x00
                            617 ;demo.c:883: int triframes = 0;
   0451 FD 21rF2s31         618 	ld	iy,#_triframes
   0455 FD 36 00 00         619 	ld	0 (iy),#0x00
   0459 FD 21rF2s31         620 	ld	iy,#_triframes
   045D FD 36 01 00         621 	ld	1 (iy),#0x00
                            622 ;demo.c:986: int sceneindex = 0;
   0461 FD 21rF4s31         623 	ld	iy,#_sceneindex
   0465 FD 36 00 00         624 	ld	0 (iy),#0x00
   0469 FD 21rF4s31         625 	ld	iy,#_sceneindex
   046D FD 36 01 00         626 	ld	1 (iy),#0x00
                            627 ;demo.c:987: int timeindex = 0;
   0471 FD 21rF6s31         628 	ld	iy,#_timeindex
   0475 FD 36 00 00         629 	ld	0 (iy),#0x00
   0479 FD 21rF6s31         630 	ld	iy,#_timeindex
   047D FD 36 01 00         631 	ld	1 (iy),#0x00
                            632 ;demo.c:989: void (*scenepointers[5])() = {
   0481 21rF8s31            633 	ld	hl,#_scenepointers
   0484 36r27               634 	ld	(hl),#<_fadein
   0486 23                  635 	inc	hl
   0487 36s0A               636 	ld	(hl),#>_fadein
   0489 01rFAs31            637 	ld	bc,#_scenepointers + 2
   048C 69                  638 	ld	l,c
   048D 60                  639 	ld	h,b
   048E 36r8F               640 	ld	(hl),#<_bulbs
   0490 23                  641 	inc	hl
   0491 36s13               642 	ld	(hl),#>_bulbs
   0493 21rFCs31            643 	ld	hl, #_scenepointers + 4
   0496 36r23               644 	ld	(hl),#<_twister
   0498 23                  645 	inc	hl
   0499 36s12               646 	ld	(hl),#>_twister
   049B 01rFEs31            647 	ld	bc,#_scenepointers + 6
   049E 69                  648 	ld	l,c
   049F 60                  649 	ld	h,b
   04A0 36rD2               650 	ld	(hl),#<_boxes
   04A2 23                  651 	inc	hl
   04A3 36s17               652 	ld	(hl),#>_boxes
   04A5 01r00s32            653 	ld	bc,#_scenepointers + 8
   04A8 69                  654 	ld	l,c
   04A9 60                  655 	ld	h,b
   04AA 36r98               656 	ld	(hl),#<_tritiles
   04AC 23                  657 	inc	hl
   04AD 36s1C               658 	ld	(hl),#>_tritiles
                            659 ;demo.c:997: int scenetimings[10] = {
   04AF 21r02s32            660 	ld	hl,#_scenetimings
   04B2 CDr00s00            661 	call	__initrleblock
   04B5 14                  662 	.db	20
   04B6 00 00 40 00 C0 00   663 	.db	0x00, 0x00, 0x40, 0x00, 0xC0, 0x00, 0x20, 0x03
        20 03
   04BE 20 03 DC 05 DC 05   664 	.db	0x20, 0x03, 0xDC, 0x05, 0xDC, 0x05, 0x98, 0x08
        98 08
   04C6 98 08 A8 16         665 	.db	0x98, 0x08, 0xA8, 0x16
   04CA 00                  666 	.db	0
                            667 ;--------------------------------------------------------
                            668 ; Home
                            669 ;--------------------------------------------------------
                            670 	.area _HOME
                            671 	.area _HOME
                            672 ;--------------------------------------------------------
                            673 ; code
                            674 ;--------------------------------------------------------
                            675 	.area _CODE
                            676 ;demo.c:130: int isNthBitSet (unsigned char c, int n) {
                            677 ;	---------------------------------
                            678 ; Function isNthBitSet
                            679 ; ---------------------------------
   0000                     680 _isNthBitSet_start::
   0000                     681 _isNthBitSet:
   0000 DD E5               682 	push	ix
   0002 DD 21 00 00         683 	ld	ix,#0
   0006 DD 39               684 	add	ix,sp
                            685 ;demo.c:132: return ((c & mask[n]) != 0);
   0008 3Er73               686 	ld	a,#<_isNthBitSet_mask_1_1
   000A DD 86 05            687 	add	a,5 (ix)
   000D 4F                  688 	ld	c,a
   000E 3Es31               689 	ld	a,#>_isNthBitSet_mask_1_1
   0010 DD 8E 06            690 	adc	a,6 (ix)
   0013 47                  691 	ld	b,a
   0014 0A                  692 	ld	a,(bc)
   0015 DD A6 04            693 	and	a,4 (ix)
   0018 20 04               694 	jr	NZ,00103$
   001A 3E 01               695 	ld	a,#0x01
   001C 18 01               696 	jr	00104$
   001E                     697 00103$:
   001E AF                  698 	xor	a,a
   001F                     699 00104$:
   001F B7                  700 	or	a,a
   0020 D6 01               701 	sub	a,#0x01
   0022 3E 00               702 	ld	a,#0x00
   0024 17                  703 	rla
   0025 4F                  704 	ld	c,a
   0026 69                  705 	ld	l,c
   0027 26 00               706 	ld	h,#0x00
   0029 DD E1               707 	pop	ix
   002B C9                  708 	ret
   002C                     709 _isNthBitSet_end::
   002C                     710 _sintabx:
   002C 78 00               711 	.dw #0x0078
   002E 7A 00               712 	.dw #0x007A
   0030 7D 00               713 	.dw #0x007D
   0032 80 00               714 	.dw #0x0080
   0034 83 00               715 	.dw #0x0083
   0036 86 00               716 	.dw #0x0086
   0038 89 00               717 	.dw #0x0089
   003A 8C 00               718 	.dw #0x008C
   003C 8F 00               719 	.dw #0x008F
   003E 92 00               720 	.dw #0x0092
   0040 95 00               721 	.dw #0x0095
   0042 98 00               722 	.dw #0x0098
   0044 9A 00               723 	.dw #0x009A
   0046 9D 00               724 	.dw #0x009D
   0048 A0 00               725 	.dw #0x00A0
   004A A3 00               726 	.dw #0x00A3
   004C A5 00               727 	.dw #0x00A5
   004E A8 00               728 	.dw #0x00A8
   0050 AB 00               729 	.dw #0x00AB
   0052 AD 00               730 	.dw #0x00AD
   0054 B0 00               731 	.dw #0x00B0
   0056 B3 00               732 	.dw #0x00B3
   0058 B5 00               733 	.dw #0x00B5
   005A B8 00               734 	.dw #0x00B8
   005C BA 00               735 	.dw #0x00BA
   005E BD 00               736 	.dw #0x00BD
   0060 BF 00               737 	.dw #0x00BF
   0062 C1 00               738 	.dw #0x00C1
   0064 C4 00               739 	.dw #0x00C4
   0066 C6 00               740 	.dw #0x00C6
   0068 C8 00               741 	.dw #0x00C8
   006A CA 00               742 	.dw #0x00CA
   006C CC 00               743 	.dw #0x00CC
   006E CE 00               744 	.dw #0x00CE
   0070 D0 00               745 	.dw #0x00D0
   0072 D2 00               746 	.dw #0x00D2
   0074 D4 00               747 	.dw #0x00D4
   0076 D6 00               748 	.dw #0x00D6
   0078 D8 00               749 	.dw #0x00D8
   007A DA 00               750 	.dw #0x00DA
   007C DB 00               751 	.dw #0x00DB
   007E DD 00               752 	.dw #0x00DD
   0080 DE 00               753 	.dw #0x00DE
   0082 E0 00               754 	.dw #0x00E0
   0084 E1 00               755 	.dw #0x00E1
   0086 E3 00               756 	.dw #0x00E3
   0088 E4 00               757 	.dw #0x00E4
   008A E5 00               758 	.dw #0x00E5
   008C E6 00               759 	.dw #0x00E6
   008E E7 00               760 	.dw #0x00E7
   0090 E8 00               761 	.dw #0x00E8
   0092 E9 00               762 	.dw #0x00E9
   0094 EA 00               763 	.dw #0x00EA
   0096 EB 00               764 	.dw #0x00EB
   0098 EC 00               765 	.dw #0x00EC
   009A ED 00               766 	.dw #0x00ED
   009C ED 00               767 	.dw #0x00ED
   009E EE 00               768 	.dw #0x00EE
   00A0 EE 00               769 	.dw #0x00EE
   00A2 EF 00               770 	.dw #0x00EF
   00A4 EF 00               771 	.dw #0x00EF
   00A6 EF 00               772 	.dw #0x00EF
   00A8 EF 00               773 	.dw #0x00EF
   00AA EF 00               774 	.dw #0x00EF
   00AC F0 00               775 	.dw #0x00F0
   00AE EF 00               776 	.dw #0x00EF
   00B0 EF 00               777 	.dw #0x00EF
   00B2 EF 00               778 	.dw #0x00EF
   00B4 EF 00               779 	.dw #0x00EF
   00B6 EF 00               780 	.dw #0x00EF
   00B8 EE 00               781 	.dw #0x00EE
   00BA EE 00               782 	.dw #0x00EE
   00BC ED 00               783 	.dw #0x00ED
   00BE ED 00               784 	.dw #0x00ED
   00C0 EC 00               785 	.dw #0x00EC
   00C2 EB 00               786 	.dw #0x00EB
   00C4 EA 00               787 	.dw #0x00EA
   00C6 E9 00               788 	.dw #0x00E9
   00C8 E8 00               789 	.dw #0x00E8
   00CA E7 00               790 	.dw #0x00E7
   00CC E6 00               791 	.dw #0x00E6
   00CE E5 00               792 	.dw #0x00E5
   00D0 E4 00               793 	.dw #0x00E4
   00D2 E3 00               794 	.dw #0x00E3
   00D4 E1 00               795 	.dw #0x00E1
   00D6 E0 00               796 	.dw #0x00E0
   00D8 DE 00               797 	.dw #0x00DE
   00DA DD 00               798 	.dw #0x00DD
   00DC DB 00               799 	.dw #0x00DB
   00DE DA 00               800 	.dw #0x00DA
   00E0 D8 00               801 	.dw #0x00D8
   00E2 D6 00               802 	.dw #0x00D6
   00E4 D4 00               803 	.dw #0x00D4
   00E6 D2 00               804 	.dw #0x00D2
   00E8 D0 00               805 	.dw #0x00D0
   00EA CE 00               806 	.dw #0x00CE
   00EC CC 00               807 	.dw #0x00CC
   00EE CA 00               808 	.dw #0x00CA
   00F0 C8 00               809 	.dw #0x00C8
   00F2 C6 00               810 	.dw #0x00C6
   00F4 C4 00               811 	.dw #0x00C4
   00F6 C1 00               812 	.dw #0x00C1
   00F8 BF 00               813 	.dw #0x00BF
   00FA BD 00               814 	.dw #0x00BD
   00FC BA 00               815 	.dw #0x00BA
   00FE B8 00               816 	.dw #0x00B8
   0100 B5 00               817 	.dw #0x00B5
   0102 B3 00               818 	.dw #0x00B3
   0104 B0 00               819 	.dw #0x00B0
   0106 AD 00               820 	.dw #0x00AD
   0108 AB 00               821 	.dw #0x00AB
   010A A8 00               822 	.dw #0x00A8
   010C A5 00               823 	.dw #0x00A5
   010E A3 00               824 	.dw #0x00A3
   0110 A0 00               825 	.dw #0x00A0
   0112 9D 00               826 	.dw #0x009D
   0114 9A 00               827 	.dw #0x009A
   0116 98 00               828 	.dw #0x0098
   0118 95 00               829 	.dw #0x0095
   011A 92 00               830 	.dw #0x0092
   011C 8F 00               831 	.dw #0x008F
   011E 8C 00               832 	.dw #0x008C
   0120 89 00               833 	.dw #0x0089
   0122 86 00               834 	.dw #0x0086
   0124 83 00               835 	.dw #0x0083
   0126 80 00               836 	.dw #0x0080
   0128 7D 00               837 	.dw #0x007D
   012A 7A 00               838 	.dw #0x007A
   012C 78 00               839 	.dw #0x0078
   012E 75 00               840 	.dw #0x0075
   0130 72 00               841 	.dw #0x0072
   0132 6F 00               842 	.dw #0x006F
   0134 6C 00               843 	.dw #0x006C
   0136 69 00               844 	.dw #0x0069
   0138 66 00               845 	.dw #0x0066
   013A 63 00               846 	.dw #0x0063
   013C 60 00               847 	.dw #0x0060
   013E 5D 00               848 	.dw #0x005D
   0140 5A 00               849 	.dw #0x005A
   0142 57 00               850 	.dw #0x0057
   0144 55 00               851 	.dw #0x0055
   0146 52 00               852 	.dw #0x0052
   0148 4F 00               853 	.dw #0x004F
   014A 4C 00               854 	.dw #0x004C
   014C 4A 00               855 	.dw #0x004A
   014E 47 00               856 	.dw #0x0047
   0150 44 00               857 	.dw #0x0044
   0152 42 00               858 	.dw #0x0042
   0154 3F 00               859 	.dw #0x003F
   0156 3C 00               860 	.dw #0x003C
   0158 3A 00               861 	.dw #0x003A
   015A 37 00               862 	.dw #0x0037
   015C 35 00               863 	.dw #0x0035
   015E 32 00               864 	.dw #0x0032
   0160 30 00               865 	.dw #0x0030
   0162 2E 00               866 	.dw #0x002E
   0164 2B 00               867 	.dw #0x002B
   0166 29 00               868 	.dw #0x0029
   0168 27 00               869 	.dw #0x0027
   016A 25 00               870 	.dw #0x0025
   016C 23 00               871 	.dw #0x0023
   016E 21 00               872 	.dw #0x0021
   0170 1F 00               873 	.dw #0x001F
   0172 1D 00               874 	.dw #0x001D
   0174 1B 00               875 	.dw #0x001B
   0176 19 00               876 	.dw #0x0019
   0178 17 00               877 	.dw #0x0017
   017A 15 00               878 	.dw #0x0015
   017C 14 00               879 	.dw #0x0014
   017E 12 00               880 	.dw #0x0012
   0180 11 00               881 	.dw #0x0011
   0182 0F 00               882 	.dw #0x000F
   0184 0E 00               883 	.dw #0x000E
   0186 0C 00               884 	.dw #0x000C
   0188 0B 00               885 	.dw #0x000B
   018A 0A 00               886 	.dw #0x000A
   018C 09 00               887 	.dw #0x0009
   018E 08 00               888 	.dw #0x0008
   0190 07 00               889 	.dw #0x0007
   0192 06 00               890 	.dw #0x0006
   0194 05 00               891 	.dw #0x0005
   0196 04 00               892 	.dw #0x0004
   0198 03 00               893 	.dw #0x0003
   019A 02 00               894 	.dw #0x0002
   019C 02 00               895 	.dw #0x0002
   019E 01 00               896 	.dw #0x0001
   01A0 01 00               897 	.dw #0x0001
   01A2 00 00               898 	.dw #0x0000
   01A4 00 00               899 	.dw #0x0000
   01A6 00 00               900 	.dw #0x0000
   01A8 00 00               901 	.dw #0x0000
   01AA 00 00               902 	.dw #0x0000
   01AC 00 00               903 	.dw #0x0000
   01AE 00 00               904 	.dw #0x0000
   01B0 00 00               905 	.dw #0x0000
   01B2 00 00               906 	.dw #0x0000
   01B4 00 00               907 	.dw #0x0000
   01B6 00 00               908 	.dw #0x0000
   01B8 01 00               909 	.dw #0x0001
   01BA 01 00               910 	.dw #0x0001
   01BC 02 00               911 	.dw #0x0002
   01BE 02 00               912 	.dw #0x0002
   01C0 03 00               913 	.dw #0x0003
   01C2 04 00               914 	.dw #0x0004
   01C4 05 00               915 	.dw #0x0005
   01C6 06 00               916 	.dw #0x0006
   01C8 07 00               917 	.dw #0x0007
   01CA 08 00               918 	.dw #0x0008
   01CC 09 00               919 	.dw #0x0009
   01CE 0A 00               920 	.dw #0x000A
   01D0 0B 00               921 	.dw #0x000B
   01D2 0C 00               922 	.dw #0x000C
   01D4 0E 00               923 	.dw #0x000E
   01D6 0F 00               924 	.dw #0x000F
   01D8 11 00               925 	.dw #0x0011
   01DA 12 00               926 	.dw #0x0012
   01DC 14 00               927 	.dw #0x0014
   01DE 15 00               928 	.dw #0x0015
   01E0 17 00               929 	.dw #0x0017
   01E2 19 00               930 	.dw #0x0019
   01E4 1B 00               931 	.dw #0x001B
   01E6 1D 00               932 	.dw #0x001D
   01E8 1F 00               933 	.dw #0x001F
   01EA 21 00               934 	.dw #0x0021
   01EC 23 00               935 	.dw #0x0023
   01EE 25 00               936 	.dw #0x0025
   01F0 27 00               937 	.dw #0x0027
   01F2 29 00               938 	.dw #0x0029
   01F4 2B 00               939 	.dw #0x002B
   01F6 2E 00               940 	.dw #0x002E
   01F8 30 00               941 	.dw #0x0030
   01FA 32 00               942 	.dw #0x0032
   01FC 35 00               943 	.dw #0x0035
   01FE 37 00               944 	.dw #0x0037
   0200 3A 00               945 	.dw #0x003A
   0202 3C 00               946 	.dw #0x003C
   0204 3F 00               947 	.dw #0x003F
   0206 42 00               948 	.dw #0x0042
   0208 44 00               949 	.dw #0x0044
   020A 47 00               950 	.dw #0x0047
   020C 4A 00               951 	.dw #0x004A
   020E 4C 00               952 	.dw #0x004C
   0210 4F 00               953 	.dw #0x004F
   0212 52 00               954 	.dw #0x0052
   0214 55 00               955 	.dw #0x0055
   0216 57 00               956 	.dw #0x0057
   0218 5A 00               957 	.dw #0x005A
   021A 5D 00               958 	.dw #0x005D
   021C 60 00               959 	.dw #0x0060
   021E 63 00               960 	.dw #0x0063
   0220 66 00               961 	.dw #0x0066
   0222 69 00               962 	.dw #0x0069
   0224 6C 00               963 	.dw #0x006C
   0226 6F 00               964 	.dw #0x006F
   0228 72 00               965 	.dw #0x0072
   022A 75 00               966 	.dw #0x0075
   022C                     967 _tri_center:
   022C 08                  968 	.db #0x08
   022D 0A                  969 	.db #0x0A
   022E 12                  970 	.db #0x12
   022F 10                  971 	.db #0x10
   0230 00                  972 	.db #0x00
   0231 02                  973 	.db #0x02
   0232 08                  974 	.db #0x08
   0233 0A                  975 	.db #0x0A
   0234 0B                  976 	.db #0x0B
   0235 09                  977 	.db #0x09
   0236 03                  978 	.db #0x03
   0237 01                  979 	.db #0x01
   0238 11                  980 	.db #0x11
   0239 13                  981 	.db #0x13
   023A 0B                  982 	.db #0x0B
   023B 09                  983 	.db #0x09
   023C 0A                  984 	.db #0x0A
   023D 12                  985 	.db #0x12
   023E 10                  986 	.db #0x10
   023F 00                  987 	.db #0x00
   0240 02                  988 	.db #0x02
   0241 08                  989 	.db #0x08
   0242 0A                  990 	.db #0x0A
   0243 12                  991 	.db #0x12
   0244 13                  992 	.db #0x13
   0245 0B                  993 	.db #0x0B
   0246 09                  994 	.db #0x09
   0247 03                  995 	.db #0x03
   0248 01                  996 	.db #0x01
   0249 11                  997 	.db #0x11
   024A 13                  998 	.db #0x13
   024B 0B                  999 	.db #0x0B
   024C 12                 1000 	.db #0x12
   024D 10                 1001 	.db #0x10
   024E 00                 1002 	.db #0x00
   024F 02                 1003 	.db #0x02
   0250 08                 1004 	.db #0x08
   0251 0A                 1005 	.db #0x0A
   0252 12                 1006 	.db #0x12
   0253 10                 1007 	.db #0x10
   0254 11                 1008 	.db #0x11
   0255 13                 1009 	.db #0x13
   0256 0B                 1010 	.db #0x0B
   0257 09                 1011 	.db #0x09
   0258 03                 1012 	.db #0x03
   0259 01                 1013 	.db #0x01
   025A 11                 1014 	.db #0x11
   025B 13                 1015 	.db #0x13
   025C 10                 1016 	.db #0x10
   025D 00                 1017 	.db #0x00
   025E 02                 1018 	.db #0x02
   025F 08                 1019 	.db #0x08
   0260 0A                 1020 	.db #0x0A
   0261 12                 1021 	.db #0x12
   0262 10                 1022 	.db #0x10
   0263 00                 1023 	.db #0x00
   0264 01                 1024 	.db #0x01
   0265 11                 1025 	.db #0x11
   0266 13                 1026 	.db #0x13
   0267 0B                 1027 	.db #0x0B
   0268 09                 1028 	.db #0x09
   0269 03                 1029 	.db #0x03
   026A 01                 1030 	.db #0x01
   026B 11                 1031 	.db #0x11
   026C 00                 1032 	.db #0x00
   026D 02                 1033 	.db #0x02
   026E 08                 1034 	.db #0x08
   026F 0A                 1035 	.db #0x0A
   0270 12                 1036 	.db #0x12
   0271 10                 1037 	.db #0x10
   0272 00                 1038 	.db #0x00
   0273 02                 1039 	.db #0x02
   0274 03                 1040 	.db #0x03
   0275 01                 1041 	.db #0x01
   0276 11                 1042 	.db #0x11
   0277 13                 1043 	.db #0x13
   0278 0B                 1044 	.db #0x0B
   0279 09                 1045 	.db #0x09
   027A 03                 1046 	.db #0x03
   027B 01                 1047 	.db #0x01
   027C 02                 1048 	.db #0x02
   027D 08                 1049 	.db #0x08
   027E 0A                 1050 	.db #0x0A
   027F 12                 1051 	.db #0x12
   0280 10                 1052 	.db #0x10
   0281 00                 1053 	.db #0x00
   0282 02                 1054 	.db #0x02
   0283 08                 1055 	.db #0x08
   0284 09                 1056 	.db #0x09
   0285 03                 1057 	.db #0x03
   0286 01                 1058 	.db #0x01
   0287 11                 1059 	.db #0x11
   0288 13                 1060 	.db #0x13
   0289 0B                 1061 	.db #0x0B
   028A 09                 1062 	.db #0x09
   028B 03                 1063 	.db #0x03
   028C 01                 1064 	.db #0x01
   028D 0B                 1065 	.db #0x0B
   028E 09                 1066 	.db #0x09
   028F 11                 1067 	.db #0x11
   0290 13                 1068 	.db #0x13
   0291 03                 1069 	.db #0x03
   0292 01                 1070 	.db #0x01
   0293 0B                 1071 	.db #0x0B
   0294 0A                 1072 	.db #0x0A
   0295 00                 1073 	.db #0x00
   0296 02                 1074 	.db #0x02
   0297 12                 1075 	.db #0x12
   0298 10                 1076 	.db #0x10
   0299 08                 1077 	.db #0x08
   029A 0A                 1078 	.db #0x0A
   029B 00                 1079 	.db #0x00
   029C 03                 1080 	.db #0x03
   029D 01                 1081 	.db #0x01
   029E 0B                 1082 	.db #0x0B
   029F 09                 1083 	.db #0x09
   02A0 11                 1084 	.db #0x11
   02A1 13                 1085 	.db #0x13
   02A2 03                 1086 	.db #0x03
   02A3 01                 1087 	.db #0x01
   02A4 00                 1088 	.db #0x00
   02A5 02                 1089 	.db #0x02
   02A6 12                 1090 	.db #0x12
   02A7 10                 1091 	.db #0x10
   02A8 08                 1092 	.db #0x08
   02A9 0A                 1093 	.db #0x0A
   02AA 00                 1094 	.db #0x00
   02AB 02                 1095 	.db #0x02
   02AC 13                 1096 	.db #0x13
   02AD 03                 1097 	.db #0x03
   02AE 01                 1098 	.db #0x01
   02AF 0B                 1099 	.db #0x0B
   02B0 09                 1100 	.db #0x09
   02B1 11                 1101 	.db #0x11
   02B2 13                 1102 	.db #0x13
   02B3 03                 1103 	.db #0x03
   02B4 02                 1104 	.db #0x02
   02B5 12                 1105 	.db #0x12
   02B6 10                 1106 	.db #0x10
   02B7 08                 1107 	.db #0x08
   02B8 0A                 1108 	.db #0x0A
   02B9 00                 1109 	.db #0x00
   02BA 02                 1110 	.db #0x02
   02BB 12                 1111 	.db #0x12
   02BC 11                 1112 	.db #0x11
   02BD 13                 1113 	.db #0x13
   02BE 03                 1114 	.db #0x03
   02BF 01                 1115 	.db #0x01
   02C0 0B                 1116 	.db #0x0B
   02C1 09                 1117 	.db #0x09
   02C2 11                 1118 	.db #0x11
   02C3 13                 1119 	.db #0x13
   02C4 12                 1120 	.db #0x12
   02C5 10                 1121 	.db #0x10
   02C6 08                 1122 	.db #0x08
   02C7 0A                 1123 	.db #0x0A
   02C8 00                 1124 	.db #0x00
   02C9 02                 1125 	.db #0x02
   02CA 12                 1126 	.db #0x12
   02CB 10                 1127 	.db #0x10
   02CC 09                 1128 	.db #0x09
   02CD 11                 1129 	.db #0x11
   02CE 13                 1130 	.db #0x13
   02CF 03                 1131 	.db #0x03
   02D0 01                 1132 	.db #0x01
   02D1 0B                 1133 	.db #0x0B
   02D2 09                 1134 	.db #0x09
   02D3 11                 1135 	.db #0x11
   02D4 10                 1136 	.db #0x10
   02D5 08                 1137 	.db #0x08
   02D6 0A                 1138 	.db #0x0A
   02D7 00                 1139 	.db #0x00
   02D8 02                 1140 	.db #0x02
   02D9 12                 1141 	.db #0x12
   02DA 10                 1142 	.db #0x10
   02DB 08                 1143 	.db #0x08
   02DC 0B                 1144 	.db #0x0B
   02DD 09                 1145 	.db #0x09
   02DE 11                 1146 	.db #0x11
   02DF 13                 1147 	.db #0x13
   02E0 03                 1148 	.db #0x03
   02E1 01                 1149 	.db #0x01
   02E2 0B                 1150 	.db #0x0B
   02E3 09                 1151 	.db #0x09
   02E4 08                 1152 	.db #0x08
   02E5 0A                 1153 	.db #0x0A
   02E6 00                 1154 	.db #0x00
   02E7 02                 1155 	.db #0x02
   02E8 12                 1156 	.db #0x12
   02E9 10                 1157 	.db #0x10
   02EA 08                 1158 	.db #0x08
   02EB 0A                 1159 	.db #0x0A
   02EC                    1160 _tri_up:
   02EC 0A                 1161 	.db #0x0A
   02ED 12                 1162 	.db #0x12
   02EE 10                 1163 	.db #0x10
   02EF 00                 1164 	.db #0x00
   02F0 02                 1165 	.db #0x02
   02F1 08                 1166 	.db #0x08
   02F2 0A                 1167 	.db #0x0A
   02F3 12                 1168 	.db #0x12
   02F4 13                 1169 	.db #0x13
   02F5 0B                 1170 	.db #0x0B
   02F6 09                 1171 	.db #0x09
   02F7 03                 1172 	.db #0x03
   02F8 01                 1173 	.db #0x01
   02F9 11                 1174 	.db #0x11
   02FA 13                 1175 	.db #0x13
   02FB 0B                 1176 	.db #0x0B
   02FC 12                 1177 	.db #0x12
   02FD 10                 1178 	.db #0x10
   02FE 00                 1179 	.db #0x00
   02FF 02                 1180 	.db #0x02
   0300 08                 1181 	.db #0x08
   0301 0A                 1182 	.db #0x0A
   0302 12                 1183 	.db #0x12
   0303 10                 1184 	.db #0x10
   0304 11                 1185 	.db #0x11
   0305 13                 1186 	.db #0x13
   0306 0B                 1187 	.db #0x0B
   0307 09                 1188 	.db #0x09
   0308 03                 1189 	.db #0x03
   0309 01                 1190 	.db #0x01
   030A 11                 1191 	.db #0x11
   030B 13                 1192 	.db #0x13
   030C 10                 1193 	.db #0x10
   030D 00                 1194 	.db #0x00
   030E 02                 1195 	.db #0x02
   030F 08                 1196 	.db #0x08
   0310 0A                 1197 	.db #0x0A
   0311 12                 1198 	.db #0x12
   0312 10                 1199 	.db #0x10
   0313 00                 1200 	.db #0x00
   0314 01                 1201 	.db #0x01
   0315 11                 1202 	.db #0x11
   0316 13                 1203 	.db #0x13
   0317 0B                 1204 	.db #0x0B
   0318 09                 1205 	.db #0x09
   0319 03                 1206 	.db #0x03
   031A 01                 1207 	.db #0x01
   031B 11                 1208 	.db #0x11
   031C 00                 1209 	.db #0x00
   031D 02                 1210 	.db #0x02
   031E 08                 1211 	.db #0x08
   031F 0A                 1212 	.db #0x0A
   0320 12                 1213 	.db #0x12
   0321 10                 1214 	.db #0x10
   0322 00                 1215 	.db #0x00
   0323 02                 1216 	.db #0x02
   0324 03                 1217 	.db #0x03
   0325 01                 1218 	.db #0x01
   0326 11                 1219 	.db #0x11
   0327 13                 1220 	.db #0x13
   0328 0B                 1221 	.db #0x0B
   0329 09                 1222 	.db #0x09
   032A 03                 1223 	.db #0x03
   032B 01                 1224 	.db #0x01
   032C 02                 1225 	.db #0x02
   032D 08                 1226 	.db #0x08
   032E 0A                 1227 	.db #0x0A
   032F 12                 1228 	.db #0x12
   0330 10                 1229 	.db #0x10
   0331 00                 1230 	.db #0x00
   0332 02                 1231 	.db #0x02
   0333 08                 1232 	.db #0x08
   0334 09                 1233 	.db #0x09
   0335 03                 1234 	.db #0x03
   0336 01                 1235 	.db #0x01
   0337 11                 1236 	.db #0x11
   0338 13                 1237 	.db #0x13
   0339 0B                 1238 	.db #0x0B
   033A 09                 1239 	.db #0x09
   033B 03                 1240 	.db #0x03
   033C 08                 1241 	.db #0x08
   033D 0A                 1242 	.db #0x0A
   033E 12                 1243 	.db #0x12
   033F 10                 1244 	.db #0x10
   0340 00                 1245 	.db #0x00
   0341 02                 1246 	.db #0x02
   0342 08                 1247 	.db #0x08
   0343 0A                 1248 	.db #0x0A
   0344 0B                 1249 	.db #0x0B
   0345 09                 1250 	.db #0x09
   0346 03                 1251 	.db #0x03
   0347 01                 1252 	.db #0x01
   0348 11                 1253 	.db #0x11
   0349 13                 1254 	.db #0x13
   034A 0B                 1255 	.db #0x0B
   034B 09                 1256 	.db #0x09
   034C 0A                 1257 	.db #0x0A
   034D 12                 1258 	.db #0x12
   034E 10                 1259 	.db #0x10
   034F 00                 1260 	.db #0x00
   0350 02                 1261 	.db #0x02
   0351 08                 1262 	.db #0x08
   0352 0A                 1263 	.db #0x0A
   0353 12                 1264 	.db #0x12
   0354 13                 1265 	.db #0x13
   0355 0B                 1266 	.db #0x0B
   0356 09                 1267 	.db #0x09
   0357 03                 1268 	.db #0x03
   0358 01                 1269 	.db #0x01
   0359 11                 1270 	.db #0x11
   035A 13                 1271 	.db #0x13
   035B 0B                 1272 	.db #0x0B
   035C 12                 1273 	.db #0x12
   035D 10                 1274 	.db #0x10
   035E 00                 1275 	.db #0x00
   035F 02                 1276 	.db #0x02
   0360 08                 1277 	.db #0x08
   0361 0A                 1278 	.db #0x0A
   0362 12                 1279 	.db #0x12
   0363 10                 1280 	.db #0x10
   0364 11                 1281 	.db #0x11
   0365 13                 1282 	.db #0x13
   0366 0B                 1283 	.db #0x0B
   0367 09                 1284 	.db #0x09
   0368 03                 1285 	.db #0x03
   0369 01                 1286 	.db #0x01
   036A 11                 1287 	.db #0x11
   036B 13                 1288 	.db #0x13
   036C 10                 1289 	.db #0x10
   036D 00                 1290 	.db #0x00
   036E 02                 1291 	.db #0x02
   036F 08                 1292 	.db #0x08
   0370 0A                 1293 	.db #0x0A
   0371 12                 1294 	.db #0x12
   0372 10                 1295 	.db #0x10
   0373 00                 1296 	.db #0x00
   0374 01                 1297 	.db #0x01
   0375 11                 1298 	.db #0x11
   0376 13                 1299 	.db #0x13
   0377 0B                 1300 	.db #0x0B
   0378 09                 1301 	.db #0x09
   0379 03                 1302 	.db #0x03
   037A 01                 1303 	.db #0x01
   037B 11                 1304 	.db #0x11
   037C 00                 1305 	.db #0x00
   037D 02                 1306 	.db #0x02
   037E 08                 1307 	.db #0x08
   037F 0A                 1308 	.db #0x0A
   0380 12                 1309 	.db #0x12
   0381 10                 1310 	.db #0x10
   0382 00                 1311 	.db #0x00
   0383 02                 1312 	.db #0x02
   0384 03                 1313 	.db #0x03
   0385 01                 1314 	.db #0x01
   0386 11                 1315 	.db #0x11
   0387 13                 1316 	.db #0x13
   0388 0B                 1317 	.db #0x0B
   0389 09                 1318 	.db #0x09
   038A 03                 1319 	.db #0x03
   038B 01                 1320 	.db #0x01
   038C 02                 1321 	.db #0x02
   038D 08                 1322 	.db #0x08
   038E 0A                 1323 	.db #0x0A
   038F 12                 1324 	.db #0x12
   0390 10                 1325 	.db #0x10
   0391 00                 1326 	.db #0x00
   0392 02                 1327 	.db #0x02
   0393 08                 1328 	.db #0x08
   0394 09                 1329 	.db #0x09
   0395 03                 1330 	.db #0x03
   0396 01                 1331 	.db #0x01
   0397 11                 1332 	.db #0x11
   0398 13                 1333 	.db #0x13
   0399 0B                 1334 	.db #0x0B
   039A 09                 1335 	.db #0x09
   039B 03                 1336 	.db #0x03
   039C 08                 1337 	.db #0x08
   039D 0A                 1338 	.db #0x0A
   039E 12                 1339 	.db #0x12
   039F 10                 1340 	.db #0x10
   03A0 00                 1341 	.db #0x00
   03A1 02                 1342 	.db #0x02
   03A2 08                 1343 	.db #0x08
   03A3 0A                 1344 	.db #0x0A
   03A4 0B                 1345 	.db #0x0B
   03A5 09                 1346 	.db #0x09
   03A6 03                 1347 	.db #0x03
   03A7 01                 1348 	.db #0x01
   03A8 11                 1349 	.db #0x11
   03A9 13                 1350 	.db #0x13
   03AA 0B                 1351 	.db #0x0B
   03AB 09                 1352 	.db #0x09
   03AC                    1353 _tri_dia:
   03AC 05                 1354 	.db #0x05
   03AD 1B                 1355 	.db #0x1B
   03AE 0F                 1356 	.db #0x0F
   03AF 1D                 1357 	.db #0x1D
   03B0 15                 1358 	.db #0x15
   03B1 19                 1359 	.db #0x19
   03B2 05                 1360 	.db #0x05
   03B3 1B                 1361 	.db #0x1B
   03B4 0F                 1362 	.db #0x0F
   03B5 1D                 1363 	.db #0x1D
   03B6 15                 1364 	.db #0x15
   03B7 19                 1365 	.db #0x19
   03B8 05                 1366 	.db #0x05
   03B9 1B                 1367 	.db #0x1B
   03BA 0F                 1368 	.db #0x0F
   03BB 1D                 1369 	.db #0x1D
   03BC 1D                 1370 	.db #0x1D
   03BD 05                 1371 	.db #0x05
   03BE 19                 1372 	.db #0x19
   03BF 0F                 1373 	.db #0x0F
   03C0 1B                 1374 	.db #0x1B
   03C1 15                 1375 	.db #0x15
   03C2 1D                 1376 	.db #0x1D
   03C3 05                 1377 	.db #0x05
   03C4 19                 1378 	.db #0x19
   03C5 0F                 1379 	.db #0x0F
   03C6 1B                 1380 	.db #0x1B
   03C7 15                 1381 	.db #0x15
   03C8 1D                 1382 	.db #0x1D
   03C9 05                 1383 	.db #0x05
   03CA 19                 1384 	.db #0x19
   03CB 0F                 1385 	.db #0x0F
   03CC 0F                 1386 	.db #0x0F
   03CD 1D                 1387 	.db #0x1D
   03CE 15                 1388 	.db #0x15
   03CF 19                 1389 	.db #0x19
   03D0 05                 1390 	.db #0x05
   03D1 1B                 1391 	.db #0x1B
   03D2 0F                 1392 	.db #0x0F
   03D3 1D                 1393 	.db #0x1D
   03D4 15                 1394 	.db #0x15
   03D5 19                 1395 	.db #0x19
   03D6 05                 1396 	.db #0x05
   03D7 1B                 1397 	.db #0x1B
   03D8 0F                 1398 	.db #0x0F
   03D9 1D                 1399 	.db #0x1D
   03DA 15                 1400 	.db #0x15
   03DB 19                 1401 	.db #0x19
   03DC 19                 1402 	.db #0x19
   03DD 0F                 1403 	.db #0x0F
   03DE 1B                 1404 	.db #0x1B
   03DF 15                 1405 	.db #0x15
   03E0 1D                 1406 	.db #0x1D
   03E1 05                 1407 	.db #0x05
   03E2 19                 1408 	.db #0x19
   03E3 0F                 1409 	.db #0x0F
   03E4 1B                 1410 	.db #0x1B
   03E5 15                 1411 	.db #0x15
   03E6 1D                 1412 	.db #0x1D
   03E7 05                 1413 	.db #0x05
   03E8 19                 1414 	.db #0x19
   03E9 0F                 1415 	.db #0x0F
   03EA 1B                 1416 	.db #0x1B
   03EB 15                 1417 	.db #0x15
   03EC 15                 1418 	.db #0x15
   03ED 19                 1419 	.db #0x19
   03EE 05                 1420 	.db #0x05
   03EF 1B                 1421 	.db #0x1B
   03F0 0F                 1422 	.db #0x0F
   03F1 1D                 1423 	.db #0x1D
   03F2 15                 1424 	.db #0x15
   03F3 19                 1425 	.db #0x19
   03F4 05                 1426 	.db #0x05
   03F5 1B                 1427 	.db #0x1B
   03F6 0F                 1428 	.db #0x0F
   03F7 1D                 1429 	.db #0x1D
   03F8 15                 1430 	.db #0x15
   03F9 19                 1431 	.db #0x19
   03FA 05                 1432 	.db #0x05
   03FB 1B                 1433 	.db #0x1B
   03FC 1B                 1434 	.db #0x1B
   03FD 15                 1435 	.db #0x15
   03FE 1D                 1436 	.db #0x1D
   03FF 05                 1437 	.db #0x05
   0400 19                 1438 	.db #0x19
   0401 0F                 1439 	.db #0x0F
   0402 1B                 1440 	.db #0x1B
   0403 15                 1441 	.db #0x15
   0404 1D                 1442 	.db #0x1D
   0405 05                 1443 	.db #0x05
   0406 19                 1444 	.db #0x19
   0407 0F                 1445 	.db #0x0F
   0408 1B                 1446 	.db #0x1B
   0409 15                 1447 	.db #0x15
   040A 1D                 1448 	.db #0x1D
   040B 05                 1449 	.db #0x05
   040C 05                 1450 	.db #0x05
   040D 1B                 1451 	.db #0x1B
   040E 0F                 1452 	.db #0x0F
   040F 1D                 1453 	.db #0x1D
   0410 15                 1454 	.db #0x15
   0411 19                 1455 	.db #0x19
   0412 05                 1456 	.db #0x05
   0413 1B                 1457 	.db #0x1B
   0414 0F                 1458 	.db #0x0F
   0415 1D                 1459 	.db #0x1D
   0416 15                 1460 	.db #0x15
   0417 19                 1461 	.db #0x19
   0418 05                 1462 	.db #0x05
   0419 1B                 1463 	.db #0x1B
   041A 0F                 1464 	.db #0x0F
   041B 1D                 1465 	.db #0x1D
   041C 1D                 1466 	.db #0x1D
   041D 05                 1467 	.db #0x05
   041E 19                 1468 	.db #0x19
   041F 0F                 1469 	.db #0x0F
   0420 1B                 1470 	.db #0x1B
   0421 15                 1471 	.db #0x15
   0422 1D                 1472 	.db #0x1D
   0423 05                 1473 	.db #0x05
   0424 19                 1474 	.db #0x19
   0425 0F                 1475 	.db #0x0F
   0426 1B                 1476 	.db #0x1B
   0427 15                 1477 	.db #0x15
   0428 1D                 1478 	.db #0x1D
   0429 05                 1479 	.db #0x05
   042A 19                 1480 	.db #0x19
   042B 0F                 1481 	.db #0x0F
   042C 0F                 1482 	.db #0x0F
   042D 1D                 1483 	.db #0x1D
   042E 15                 1484 	.db #0x15
   042F 19                 1485 	.db #0x19
   0430 05                 1486 	.db #0x05
   0431 1B                 1487 	.db #0x1B
   0432 0F                 1488 	.db #0x0F
   0433 1D                 1489 	.db #0x1D
   0434 15                 1490 	.db #0x15
   0435 19                 1491 	.db #0x19
   0436 05                 1492 	.db #0x05
   0437 1B                 1493 	.db #0x1B
   0438 0F                 1494 	.db #0x0F
   0439 1D                 1495 	.db #0x1D
   043A 15                 1496 	.db #0x15
   043B 19                 1497 	.db #0x19
   043C 19                 1498 	.db #0x19
   043D 0F                 1499 	.db #0x0F
   043E 1B                 1500 	.db #0x1B
   043F 15                 1501 	.db #0x15
   0440 1D                 1502 	.db #0x1D
   0441 05                 1503 	.db #0x05
   0442 19                 1504 	.db #0x19
   0443 0F                 1505 	.db #0x0F
   0444 1B                 1506 	.db #0x1B
   0445 15                 1507 	.db #0x15
   0446 1D                 1508 	.db #0x1D
   0447 05                 1509 	.db #0x05
   0448 19                 1510 	.db #0x19
   0449 0F                 1511 	.db #0x0F
   044A 1B                 1512 	.db #0x1B
   044B 15                 1513 	.db #0x15
   044C 15                 1514 	.db #0x15
   044D 19                 1515 	.db #0x19
   044E 05                 1516 	.db #0x05
   044F 1B                 1517 	.db #0x1B
   0450 0F                 1518 	.db #0x0F
   0451 1D                 1519 	.db #0x1D
   0452 15                 1520 	.db #0x15
   0453 19                 1521 	.db #0x19
   0454 05                 1522 	.db #0x05
   0455 1B                 1523 	.db #0x1B
   0456 0F                 1524 	.db #0x0F
   0457 1D                 1525 	.db #0x1D
   0458 15                 1526 	.db #0x15
   0459 19                 1527 	.db #0x19
   045A 05                 1528 	.db #0x05
   045B 1B                 1529 	.db #0x1B
   045C 1B                 1530 	.db #0x1B
   045D 15                 1531 	.db #0x15
   045E 1D                 1532 	.db #0x1D
   045F 05                 1533 	.db #0x05
   0460 19                 1534 	.db #0x19
   0461 0F                 1535 	.db #0x0F
   0462 1B                 1536 	.db #0x1B
   0463 15                 1537 	.db #0x15
   0464 1D                 1538 	.db #0x1D
   0465 05                 1539 	.db #0x05
   0466 19                 1540 	.db #0x19
   0467 0F                 1541 	.db #0x0F
   0468 1B                 1542 	.db #0x1B
   0469 15                 1543 	.db #0x15
   046A 1D                 1544 	.db #0x1D
   046B 05                 1545 	.db #0x05
   046C                    1546 _tri_side1:
   046C 0A                 1547 	.db #0x0A
   046D 12                 1548 	.db #0x12
   046E 10                 1549 	.db #0x10
   046F 00                 1550 	.db #0x00
   0470 02                 1551 	.db #0x02
   0471 08                 1552 	.db #0x08
   0472 0A                 1553 	.db #0x0A
   0473 12                 1554 	.db #0x12
   0474 10                 1555 	.db #0x10
   0475 00                 1556 	.db #0x00
   0476 02                 1557 	.db #0x02
   0477 08                 1558 	.db #0x08
   0478 0A                 1559 	.db #0x0A
   0479 12                 1560 	.db #0x12
   047A 10                 1561 	.db #0x10
   047B 00                 1562 	.db #0x00
   047C 12                 1563 	.db #0x12
   047D 10                 1564 	.db #0x10
   047E 00                 1565 	.db #0x00
   047F 02                 1566 	.db #0x02
   0480 08                 1567 	.db #0x08
   0481 0A                 1568 	.db #0x0A
   0482 12                 1569 	.db #0x12
   0483 10                 1570 	.db #0x10
   0484 00                 1571 	.db #0x00
   0485 02                 1572 	.db #0x02
   0486 08                 1573 	.db #0x08
   0487 0A                 1574 	.db #0x0A
   0488 12                 1575 	.db #0x12
   0489 10                 1576 	.db #0x10
   048A 00                 1577 	.db #0x00
   048B 02                 1578 	.db #0x02
   048C 10                 1579 	.db #0x10
   048D 00                 1580 	.db #0x00
   048E 02                 1581 	.db #0x02
   048F 08                 1582 	.db #0x08
   0490 0A                 1583 	.db #0x0A
   0491 12                 1584 	.db #0x12
   0492 10                 1585 	.db #0x10
   0493 00                 1586 	.db #0x00
   0494 02                 1587 	.db #0x02
   0495 08                 1588 	.db #0x08
   0496 0A                 1589 	.db #0x0A
   0497 12                 1590 	.db #0x12
   0498 10                 1591 	.db #0x10
   0499 00                 1592 	.db #0x00
   049A 02                 1593 	.db #0x02
   049B 08                 1594 	.db #0x08
   049C 00                 1595 	.db #0x00
   049D 02                 1596 	.db #0x02
   049E 08                 1597 	.db #0x08
   049F 0A                 1598 	.db #0x0A
   04A0 12                 1599 	.db #0x12
   04A1 10                 1600 	.db #0x10
   04A2 00                 1601 	.db #0x00
   04A3 02                 1602 	.db #0x02
   04A4 08                 1603 	.db #0x08
   04A5 0A                 1604 	.db #0x0A
   04A6 12                 1605 	.db #0x12
   04A7 10                 1606 	.db #0x10
   04A8 00                 1607 	.db #0x00
   04A9 02                 1608 	.db #0x02
   04AA 08                 1609 	.db #0x08
   04AB 0A                 1610 	.db #0x0A
   04AC 02                 1611 	.db #0x02
   04AD 08                 1612 	.db #0x08
   04AE 0A                 1613 	.db #0x0A
   04AF 12                 1614 	.db #0x12
   04B0 10                 1615 	.db #0x10
   04B1 00                 1616 	.db #0x00
   04B2 02                 1617 	.db #0x02
   04B3 08                 1618 	.db #0x08
   04B4 0A                 1619 	.db #0x0A
   04B5 12                 1620 	.db #0x12
   04B6 10                 1621 	.db #0x10
   04B7 00                 1622 	.db #0x00
   04B8 02                 1623 	.db #0x02
   04B9 08                 1624 	.db #0x08
   04BA 0A                 1625 	.db #0x0A
   04BB 12                 1626 	.db #0x12
   04BC 08                 1627 	.db #0x08
   04BD 0A                 1628 	.db #0x0A
   04BE 12                 1629 	.db #0x12
   04BF 10                 1630 	.db #0x10
   04C0 00                 1631 	.db #0x00
   04C1 02                 1632 	.db #0x02
   04C2 08                 1633 	.db #0x08
   04C3 0A                 1634 	.db #0x0A
   04C4 12                 1635 	.db #0x12
   04C5 10                 1636 	.db #0x10
   04C6 00                 1637 	.db #0x00
   04C7 02                 1638 	.db #0x02
   04C8 08                 1639 	.db #0x08
   04C9 0A                 1640 	.db #0x0A
   04CA 12                 1641 	.db #0x12
   04CB 10                 1642 	.db #0x10
   04CC 0A                 1643 	.db #0x0A
   04CD 12                 1644 	.db #0x12
   04CE 10                 1645 	.db #0x10
   04CF 00                 1646 	.db #0x00
   04D0 02                 1647 	.db #0x02
   04D1 08                 1648 	.db #0x08
   04D2 0A                 1649 	.db #0x0A
   04D3 12                 1650 	.db #0x12
   04D4 10                 1651 	.db #0x10
   04D5 00                 1652 	.db #0x00
   04D6 02                 1653 	.db #0x02
   04D7 08                 1654 	.db #0x08
   04D8 0A                 1655 	.db #0x0A
   04D9 12                 1656 	.db #0x12
   04DA 10                 1657 	.db #0x10
   04DB 00                 1658 	.db #0x00
   04DC 12                 1659 	.db #0x12
   04DD 10                 1660 	.db #0x10
   04DE 00                 1661 	.db #0x00
   04DF 02                 1662 	.db #0x02
   04E0 08                 1663 	.db #0x08
   04E1 0A                 1664 	.db #0x0A
   04E2 12                 1665 	.db #0x12
   04E3 10                 1666 	.db #0x10
   04E4 00                 1667 	.db #0x00
   04E5 02                 1668 	.db #0x02
   04E6 08                 1669 	.db #0x08
   04E7 0A                 1670 	.db #0x0A
   04E8 12                 1671 	.db #0x12
   04E9 10                 1672 	.db #0x10
   04EA 00                 1673 	.db #0x00
   04EB 02                 1674 	.db #0x02
   04EC 10                 1675 	.db #0x10
   04ED 00                 1676 	.db #0x00
   04EE 02                 1677 	.db #0x02
   04EF 08                 1678 	.db #0x08
   04F0 0A                 1679 	.db #0x0A
   04F1 12                 1680 	.db #0x12
   04F2 10                 1681 	.db #0x10
   04F3 00                 1682 	.db #0x00
   04F4 02                 1683 	.db #0x02
   04F5 08                 1684 	.db #0x08
   04F6 0A                 1685 	.db #0x0A
   04F7 12                 1686 	.db #0x12
   04F8 10                 1687 	.db #0x10
   04F9 00                 1688 	.db #0x00
   04FA 02                 1689 	.db #0x02
   04FB 08                 1690 	.db #0x08
   04FC 00                 1691 	.db #0x00
   04FD 02                 1692 	.db #0x02
   04FE 08                 1693 	.db #0x08
   04FF 0A                 1694 	.db #0x0A
   0500 12                 1695 	.db #0x12
   0501 10                 1696 	.db #0x10
   0502 00                 1697 	.db #0x00
   0503 02                 1698 	.db #0x02
   0504 08                 1699 	.db #0x08
   0505 0A                 1700 	.db #0x0A
   0506 12                 1701 	.db #0x12
   0507 10                 1702 	.db #0x10
   0508 00                 1703 	.db #0x00
   0509 02                 1704 	.db #0x02
   050A 08                 1705 	.db #0x08
   050B 0A                 1706 	.db #0x0A
   050C 02                 1707 	.db #0x02
   050D 08                 1708 	.db #0x08
   050E 0A                 1709 	.db #0x0A
   050F 12                 1710 	.db #0x12
   0510 10                 1711 	.db #0x10
   0511 00                 1712 	.db #0x00
   0512 02                 1713 	.db #0x02
   0513 08                 1714 	.db #0x08
   0514 0A                 1715 	.db #0x0A
   0515 12                 1716 	.db #0x12
   0516 10                 1717 	.db #0x10
   0517 00                 1718 	.db #0x00
   0518 02                 1719 	.db #0x02
   0519 08                 1720 	.db #0x08
   051A 0A                 1721 	.db #0x0A
   051B 12                 1722 	.db #0x12
   051C 08                 1723 	.db #0x08
   051D 0A                 1724 	.db #0x0A
   051E 12                 1725 	.db #0x12
   051F 10                 1726 	.db #0x10
   0520 00                 1727 	.db #0x00
   0521 02                 1728 	.db #0x02
   0522 08                 1729 	.db #0x08
   0523 0A                 1730 	.db #0x0A
   0524 12                 1731 	.db #0x12
   0525 10                 1732 	.db #0x10
   0526 00                 1733 	.db #0x00
   0527 02                 1734 	.db #0x02
   0528 08                 1735 	.db #0x08
   0529 0A                 1736 	.db #0x0A
   052A 12                 1737 	.db #0x12
   052B 10                 1738 	.db #0x10
   052C                    1739 _tri_side2:
   052C 00                 1740 	.db #0x00
   052D 10                 1741 	.db #0x10
   052E 12                 1742 	.db #0x12
   052F 0A                 1743 	.db #0x0A
   0530 08                 1744 	.db #0x08
   0531 02                 1745 	.db #0x02
   0532 00                 1746 	.db #0x00
   0533 10                 1747 	.db #0x10
   0534 12                 1748 	.db #0x12
   0535 0A                 1749 	.db #0x0A
   0536 08                 1750 	.db #0x08
   0537 02                 1751 	.db #0x02
   0538 00                 1752 	.db #0x00
   0539 10                 1753 	.db #0x10
   053A 12                 1754 	.db #0x12
   053B 0A                 1755 	.db #0x0A
   053C 02                 1756 	.db #0x02
   053D 00                 1757 	.db #0x00
   053E 10                 1758 	.db #0x10
   053F 12                 1759 	.db #0x12
   0540 0A                 1760 	.db #0x0A
   0541 08                 1761 	.db #0x08
   0542 02                 1762 	.db #0x02
   0543 00                 1763 	.db #0x00
   0544 10                 1764 	.db #0x10
   0545 12                 1765 	.db #0x12
   0546 0A                 1766 	.db #0x0A
   0547 08                 1767 	.db #0x08
   0548 02                 1768 	.db #0x02
   0549 00                 1769 	.db #0x00
   054A 10                 1770 	.db #0x10
   054B 12                 1771 	.db #0x12
   054C 08                 1772 	.db #0x08
   054D 02                 1773 	.db #0x02
   054E 00                 1774 	.db #0x00
   054F 10                 1775 	.db #0x10
   0550 12                 1776 	.db #0x12
   0551 0A                 1777 	.db #0x0A
   0552 08                 1778 	.db #0x08
   0553 02                 1779 	.db #0x02
   0554 00                 1780 	.db #0x00
   0555 10                 1781 	.db #0x10
   0556 12                 1782 	.db #0x12
   0557 0A                 1783 	.db #0x0A
   0558 08                 1784 	.db #0x08
   0559 02                 1785 	.db #0x02
   055A 00                 1786 	.db #0x00
   055B 10                 1787 	.db #0x10
   055C 0A                 1788 	.db #0x0A
   055D 08                 1789 	.db #0x08
   055E 02                 1790 	.db #0x02
   055F 00                 1791 	.db #0x00
   0560 10                 1792 	.db #0x10
   0561 12                 1793 	.db #0x12
   0562 0A                 1794 	.db #0x0A
   0563 08                 1795 	.db #0x08
   0564 02                 1796 	.db #0x02
   0565 00                 1797 	.db #0x00
   0566 10                 1798 	.db #0x10
   0567 12                 1799 	.db #0x12
   0568 0A                 1800 	.db #0x0A
   0569 08                 1801 	.db #0x08
   056A 02                 1802 	.db #0x02
   056B 00                 1803 	.db #0x00
   056C 12                 1804 	.db #0x12
   056D 0A                 1805 	.db #0x0A
   056E 08                 1806 	.db #0x08
   056F 02                 1807 	.db #0x02
   0570 00                 1808 	.db #0x00
   0571 10                 1809 	.db #0x10
   0572 12                 1810 	.db #0x12
   0573 0A                 1811 	.db #0x0A
   0574 08                 1812 	.db #0x08
   0575 02                 1813 	.db #0x02
   0576 00                 1814 	.db #0x00
   0577 10                 1815 	.db #0x10
   0578 12                 1816 	.db #0x12
   0579 0A                 1817 	.db #0x0A
   057A 08                 1818 	.db #0x08
   057B 02                 1819 	.db #0x02
   057C 10                 1820 	.db #0x10
   057D 12                 1821 	.db #0x12
   057E 0A                 1822 	.db #0x0A
   057F 08                 1823 	.db #0x08
   0580 02                 1824 	.db #0x02
   0581 00                 1825 	.db #0x00
   0582 10                 1826 	.db #0x10
   0583 12                 1827 	.db #0x12
   0584 0A                 1828 	.db #0x0A
   0585 08                 1829 	.db #0x08
   0586 02                 1830 	.db #0x02
   0587 00                 1831 	.db #0x00
   0588 10                 1832 	.db #0x10
   0589 12                 1833 	.db #0x12
   058A 0A                 1834 	.db #0x0A
   058B 08                 1835 	.db #0x08
   058C 00                 1836 	.db #0x00
   058D 10                 1837 	.db #0x10
   058E 12                 1838 	.db #0x12
   058F 0A                 1839 	.db #0x0A
   0590 08                 1840 	.db #0x08
   0591 02                 1841 	.db #0x02
   0592 00                 1842 	.db #0x00
   0593 10                 1843 	.db #0x10
   0594 12                 1844 	.db #0x12
   0595 0A                 1845 	.db #0x0A
   0596 08                 1846 	.db #0x08
   0597 02                 1847 	.db #0x02
   0598 00                 1848 	.db #0x00
   0599 10                 1849 	.db #0x10
   059A 12                 1850 	.db #0x12
   059B 0A                 1851 	.db #0x0A
   059C 02                 1852 	.db #0x02
   059D 00                 1853 	.db #0x00
   059E 10                 1854 	.db #0x10
   059F 12                 1855 	.db #0x12
   05A0 0A                 1856 	.db #0x0A
   05A1 08                 1857 	.db #0x08
   05A2 02                 1858 	.db #0x02
   05A3 00                 1859 	.db #0x00
   05A4 10                 1860 	.db #0x10
   05A5 12                 1861 	.db #0x12
   05A6 0A                 1862 	.db #0x0A
   05A7 08                 1863 	.db #0x08
   05A8 02                 1864 	.db #0x02
   05A9 00                 1865 	.db #0x00
   05AA 10                 1866 	.db #0x10
   05AB 12                 1867 	.db #0x12
   05AC 08                 1868 	.db #0x08
   05AD 02                 1869 	.db #0x02
   05AE 00                 1870 	.db #0x00
   05AF 10                 1871 	.db #0x10
   05B0 12                 1872 	.db #0x12
   05B1 0A                 1873 	.db #0x0A
   05B2 08                 1874 	.db #0x08
   05B3 02                 1875 	.db #0x02
   05B4 00                 1876 	.db #0x00
   05B5 10                 1877 	.db #0x10
   05B6 12                 1878 	.db #0x12
   05B7 0A                 1879 	.db #0x0A
   05B8 08                 1880 	.db #0x08
   05B9 02                 1881 	.db #0x02
   05BA 00                 1882 	.db #0x00
   05BB 10                 1883 	.db #0x10
   05BC 0A                 1884 	.db #0x0A
   05BD 08                 1885 	.db #0x08
   05BE 02                 1886 	.db #0x02
   05BF 00                 1887 	.db #0x00
   05C0 10                 1888 	.db #0x10
   05C1 12                 1889 	.db #0x12
   05C2 0A                 1890 	.db #0x0A
   05C3 08                 1891 	.db #0x08
   05C4 02                 1892 	.db #0x02
   05C5 00                 1893 	.db #0x00
   05C6 10                 1894 	.db #0x10
   05C7 12                 1895 	.db #0x12
   05C8 0A                 1896 	.db #0x0A
   05C9 08                 1897 	.db #0x08
   05CA 02                 1898 	.db #0x02
   05CB 00                 1899 	.db #0x00
   05CC 12                 1900 	.db #0x12
   05CD 0A                 1901 	.db #0x0A
   05CE 08                 1902 	.db #0x08
   05CF 02                 1903 	.db #0x02
   05D0 00                 1904 	.db #0x00
   05D1 10                 1905 	.db #0x10
   05D2 12                 1906 	.db #0x12
   05D3 0A                 1907 	.db #0x0A
   05D4 08                 1908 	.db #0x08
   05D5 02                 1909 	.db #0x02
   05D6 00                 1910 	.db #0x00
   05D7 10                 1911 	.db #0x10
   05D8 12                 1912 	.db #0x12
   05D9 0A                 1913 	.db #0x0A
   05DA 08                 1914 	.db #0x08
   05DB 02                 1915 	.db #0x02
   05DC 10                 1916 	.db #0x10
   05DD 12                 1917 	.db #0x12
   05DE 0A                 1918 	.db #0x0A
   05DF 08                 1919 	.db #0x08
   05E0 02                 1920 	.db #0x02
   05E1 00                 1921 	.db #0x00
   05E2 10                 1922 	.db #0x10
   05E3 12                 1923 	.db #0x12
   05E4 0A                 1924 	.db #0x0A
   05E5 08                 1925 	.db #0x08
   05E6 02                 1926 	.db #0x02
   05E7 00                 1927 	.db #0x00
   05E8 10                 1928 	.db #0x10
   05E9 12                 1929 	.db #0x12
   05EA 0A                 1930 	.db #0x0A
   05EB 08                 1931 	.db #0x08
                           1932 ;demo.c:139: void my_isr(void) interrupt
                           1933 ;	---------------------------------
                           1934 ; Function my_isr
                           1935 ; ---------------------------------
   05EC                    1936 _my_isr_start::
   05EC                    1937 _my_isr:
   05EC F5                 1938 	push	af
   05ED C5                 1939 	push	bc
   05EE D5                 1940 	push	de
   05EF E5                 1941 	push	hl
   05F0 FD E5              1942 	push	iy
                           1943 ;demo.c:141: DI;
   05F2 F3                 1944 		di 
                           1945 ;demo.c:143: READ_VDP_STATUS;
   05F3 DB 99              1946 		in a,(#0x99) 
                           1947 ;demo.c:145: PLY_Play();
   05F5 CDr00s00           1948 	call	_PLY_Play
                           1949 ;demo.c:146: PLY_SendRegisters();
   05F8 CDr00s00           1950 	call	_PLY_SendRegisters
                           1951 ;demo.c:148: vbicount+=1;
   05FB FD 21r60s31        1952 	ld	iy,#_vbicount
   05FF FD 34 00           1953 	inc	0 (iy)
   0602 20 07              1954 	jr	NZ,00103$
   0604 FD 21r60s31        1955 	ld	iy,#_vbicount
   0608 FD 34 01           1956 	inc	1 (iy)
   060B                    1957 00103$:
                           1958 ;demo.c:149: tick++;
   060B FD 21r62s31        1959 	ld	iy,#_tick
   060F FD 34 00           1960 	inc	0 (iy)
   0612 20 07              1961 	jr	NZ,00104$
   0614 FD 21r62s31        1962 	ld	iy,#_tick
   0618 FD 34 01           1963 	inc	1 (iy)
   061B                    1964 00104$:
                           1965 ;demo.c:151: EI;
   061B FB                 1966 		ei 
   061C FD E1              1967 	pop	iy
   061E E1                 1968 	pop	hl
   061F D1                 1969 	pop	de
   0620 C1                 1970 	pop	bc
   0621 F1                 1971 	pop	af
   0622 ED 4D              1972 	reti
   0624                    1973 _my_isr_end::
                           1974 ;demo.c:154: void color_isr(void) interrupt
                           1975 ;	---------------------------------
                           1976 ; Function color_isr
                           1977 ; ---------------------------------
   0624                    1978 _color_isr_start::
   0624                    1979 _color_isr:
   0624 F5                 1980 	push	af
   0625 C5                 1981 	push	bc
   0626 D5                 1982 	push	de
   0627 E5                 1983 	push	hl
   0628 FD E5              1984 	push	iy
                           1985 ;demo.c:156: DI;
   062A F3                 1986 		di 
                           1987 ;demo.c:158: if(isNthBitSet(vdp2_status(1),0)) {
   062B 3E 01              1988 	ld	a,#0x01
   062D F5                 1989 	push	af
   062E 33                 1990 	inc	sp
   062F CDr00s00           1991 	call	_vdp2_status
   0632 33                 1992 	inc	sp
   0633 4D                 1993 	ld	c,l
   0634 21 00 00           1994 	ld	hl,#0x0000
   0637 E5                 1995 	push	hl
   0638 79                 1996 	ld	a,c
   0639 F5                 1997 	push	af
   063A 33                 1998 	inc	sp
   063B CDr00s00           1999 	call	_isNthBitSet
   063E F1                 2000 	pop	af
   063F 33                 2001 	inc	sp
   0640 44                 2002 	ld	b,h
   0641 4D                 2003 	ld	c,l
   0642 79                 2004 	ld	a,c
   0643 B0                 2005 	or	a,b
   0644 28 19              2006 	jr	Z,00102$
                           2007 ;demo.c:159: vdp_register(VDP_VOFFSET,sintab[vbicount & 255]);
   0646 21r60s31           2008 	ld	hl,#_vbicount + 0
   0649 4E                 2009 	ld	c,(hl)
   064A 06 00              2010 	ld	b,#0x00
   064C 21r00s00           2011 	ld	hl,#_sintab
   064F 09                 2012 	add	hl,bc
   0650 7E                 2013 	ld	a,(hl)
   0651 F5                 2014 	push	af
   0652 33                 2015 	inc	sp
   0653 3E 17              2016 	ld	a,#0x17
   0655 F5                 2017 	push	af
   0656 33                 2018 	inc	sp
   0657 CDr00s00           2019 	call	_vdp_register
   065A F1                 2020 	pop	af
                           2021 ;demo.c:160: READ_VDP_STATUS;
   065B DB 99              2022 		in a,(#0x99) 
   065D 18 18              2023 	jr	00103$
   065F                    2024 00102$:
                           2025 ;demo.c:163: READ_VDP_STATUS;
   065F DB 99              2026 		in a,(#0x99) 
                           2027 ;demo.c:164: vbicount++;
   0661 FD 21r60s31        2028 	ld	iy,#_vbicount
   0665 FD 34 00           2029 	inc	0 (iy)
   0668 20 07              2030 	jr	NZ,00107$
   066A FD 21r60s31        2031 	ld	iy,#_vbicount
   066E FD 34 01           2032 	inc	1 (iy)
   0671                    2033 00107$:
                           2034 ;demo.c:167: PLY_Play();
   0671 CDr00s00           2035 	call	_PLY_Play
                           2036 ;demo.c:168: PLY_SendRegisters();
   0674 CDr00s00           2037 	call	_PLY_SendRegisters
   0677                    2038 00103$:
                           2039 ;demo.c:171: EI;
   0677 FB                 2040 		ei 
   0678 FD E1              2041 	pop	iy
   067A E1                 2042 	pop	hl
   067B D1                 2043 	pop	de
   067C C1                 2044 	pop	bc
   067D F1                 2045 	pop	af
   067E ED 4D              2046 	reti
   0680                    2047 _color_isr_end::
                           2048 ;demo.c:178: uint8_t ge5_load(char *file_name, uint8_t vramh, uint16_t vraml, int debugprint) {
                           2049 ;	---------------------------------
                           2050 ; Function ge5_load
                           2051 ; ---------------------------------
   0680                    2052 _ge5_load_start::
   0680                    2053 _ge5_load:
   0680 DD E5              2054 	push	ix
   0682 DD 21 00 00        2055 	ld	ix,#0
   0686 DD 39              2056 	add	ix,sp
   0688 21 D2 FF           2057 	ld	hl,#-46
   068B 39                 2058 	add	hl,sp
   068C F9                 2059 	ld	sp,hl
                           2060 ;demo.c:182: if(debugprint == 1) {
   068D DD 7E 09           2061 	ld	a,9 (ix)
   0690 D6 01              2062 	sub	a,#0x01
   0692 20 06              2063 	jr	NZ,00125$
   0694 DD 7E 0A           2064 	ld	a,10 (ix)
   0697 B7                 2065 	or	a,a
   0698 28 02              2066 	jr	Z,00126$
   069A                    2067 00125$:
   069A 18 1B              2068 	jr	00102$
   069C                    2069 00126$:
                           2070 ;demo.c:183: puts("loading ge5file: ");
   069C 21r7Bs07           2071 	ld	hl,#__str_0
   069F E5                 2072 	push	hl
   06A0 CDr00s00           2073 	call	_puts
   06A3 F1                 2074 	pop	af
                           2075 ;demo.c:184: puts(file_name);
   06A4 DD 6E 04           2076 	ld	l,4 (ix)
   06A7 DD 66 05           2077 	ld	h,5 (ix)
   06AA E5                 2078 	push	hl
   06AB CDr00s00           2079 	call	_puts
   06AE F1                 2080 	pop	af
                           2081 ;demo.c:185: puts("\r\n");
   06AF 21r8Ds07           2082 	ld	hl,#__str_1
   06B2 E5                 2083 	push	hl
   06B3 CDr00s00           2084 	call	_puts
   06B6 F1                 2085 	pop	af
   06B7                    2086 00102$:
                           2087 ;demo.c:188: memset((uint8_t *) &f, 0, sizeof(fcb));
   06B7 21 00 00           2088 	ld	hl,#0x0000
   06BA 39                 2089 	add	hl,sp
   06BB 4D                 2090 	ld	c,l
   06BC 44                 2091 	ld	b,h
   06BD 21 2E 00           2092 	ld	hl,#0x002E
   06C0 E5                 2093 	push	hl
   06C1 3E 00              2094 	ld	a,#0x00
   06C3 F5                 2095 	push	af
   06C4 33                 2096 	inc	sp
   06C5 C5                 2097 	push	bc
   06C6 CDr00s00           2098 	call	_memset
   06C9 F1                 2099 	pop	af
   06CA F1                 2100 	pop	af
   06CB 33                 2101 	inc	sp
                           2102 ;demo.c:190: f.record_size = 128;
   06CC 21 00 00           2103 	ld	hl,#0x0000
   06CF 39                 2104 	add	hl,sp
   06D0 4D                 2105 	ld	c,l
   06D1 44                 2106 	ld	b,h
   06D2 21 0F 00           2107 	ld	hl,#0x000F
   06D5 09                 2108 	add	hl,bc
   06D6 EB                 2109 	ex	de,hl
   06D7 3E 80              2110 	ld	a,#0x80
   06D9 12                 2111 	ld	(de),a
                           2112 ;demo.c:191: f.drive = 0;
   06DA 3E 00              2113 	ld	a,#0x00
   06DC 02                 2114 	ld	(bc),a
                           2115 ;demo.c:193: memcpy(f.name, file_name, 11);
   06DD DD 5E 04           2116 	ld	e,4 (ix)
   06E0 DD 56 05           2117 	ld	d,5 (ix)
   06E3 03                 2118 	inc	bc
   06E4 21 0B 00           2119 	ld	hl,#0x000B
   06E7 E5                 2120 	push	hl
   06E8 D5                 2121 	push	de
   06E9 C5                 2122 	push	bc
   06EA CDr00s00           2123 	call	_memcpy
   06ED F1                 2124 	pop	af
   06EE F1                 2125 	pop	af
   06EF F1                 2126 	pop	af
                           2127 ;demo.c:195: if (open(&f) != 0) return 0;
   06F0 21 00 00           2128 	ld	hl,#0x0000
   06F3 39                 2129 	add	hl,sp
   06F4 E5                 2130 	push	hl
   06F5 CDr00s00           2131 	call	_open
   06F8 F1                 2132 	pop	af
   06F9 AF                 2133 	xor	a,a
   06FA B5                 2134 	or	a,l
   06FB 28 05              2135 	jr	Z,00104$
   06FD 2E 00              2136 	ld	l,#0x00
   06FF C3r76s07           2137 	jp	00116$
   0702                    2138 00104$:
                           2139 ;demo.c:196: vdp_set_write_address(vramh, vraml);
   0702 DD 6E 07           2140 	ld	l,7 (ix)
   0705 DD 66 08           2141 	ld	h,8 (ix)
   0708 E5                 2142 	push	hl
   0709 DD 7E 06           2143 	ld	a,6 (ix)
   070C F5                 2144 	push	af
   070D 33                 2145 	inc	sp
   070E CDr00s00           2146 	call	_vdp_set_write_address
   0711 F1                 2147 	pop	af
   0712 33                 2148 	inc	sp
                           2149 ;demo.c:198: for (i = 0; i < 213; i++) {
   0713 0E 00              2150 	ld	c,#0x00
   0715                    2151 00112$:
   0715 79                 2152 	ld	a,c
   0716 D6 D5              2153 	sub	a,#0xD5
   0718 D2r6Bs07           2154 	jp	NC,00115$
                           2155 ;demo.c:199: if (block_set_data_ptr(scratch) != 0) return 0;
   071B C5                 2156 	push	bc
   071C 21r40s30           2157 	ld	hl,#_scratch
   071F E5                 2158 	push	hl
   0720 CDr00s00           2159 	call	_block_set_data_ptr
   0723 F1                 2160 	pop	af
   0724 7D                 2161 	ld	a,l
   0725 C1                 2162 	pop	bc
   0726 47                 2163 	ld	b,a
   0727 B7                 2164 	or	a,a
   0728 28 05              2165 	jr	Z,00106$
   072A 2E 00              2166 	ld	l,#0x00
   072C C3r76s07           2167 	jp	00116$
   072F                    2168 00106$:
                           2169 ;demo.c:200: if (block_read(&f) != 0) return 0;
   072F 21 00 00           2170 	ld	hl,#0x0000
   0732 39                 2171 	add	hl,sp
   0733 C5                 2172 	push	bc
   0734 E5                 2173 	push	hl
   0735 CDr00s00           2174 	call	_block_read
   0738 F1                 2175 	pop	af
   0739 7D                 2176 	ld	a,l
   073A C1                 2177 	pop	bc
   073B 47                 2178 	ld	b,a
   073C B7                 2179 	or	a,a
   073D 28 04              2180 	jr	Z,00108$
   073F 2E 00              2181 	ld	l,#0x00
   0741 18 33              2182 	jr	00116$
   0743                    2183 00108$:
                           2184 ;demo.c:202: if (i == 0) vdp_load_screen(scratch + 7, 121);   // to skip GE5 header
   0743 AF                 2185 	xor	a,a
   0744 B1                 2186 	or	a,c
   0745 20 11              2187 	jr	NZ,00110$
   0747 11r47s30           2188 	ld	de,#_scratch + 7
   074A C5                 2189 	push	bc
   074B 3E 79              2190 	ld	a,#0x79
   074D F5                 2191 	push	af
   074E 33                 2192 	inc	sp
   074F D5                 2193 	push	de
   0750 CDr00s00           2194 	call	_vdp_load_screen
   0753 F1                 2195 	pop	af
   0754 33                 2196 	inc	sp
   0755 C1                 2197 	pop	bc
   0756 18 0F              2198 	jr	00114$
   0758                    2199 00110$:
                           2200 ;demo.c:203: else vdp_load_screen(scratch, 128);
   0758 C5                 2201 	push	bc
   0759 3E 80              2202 	ld	a,#0x80
   075B F5                 2203 	push	af
   075C 33                 2204 	inc	sp
   075D 21r40s30           2205 	ld	hl,#_scratch
   0760 E5                 2206 	push	hl
   0761 CDr00s00           2207 	call	_vdp_load_screen
   0764 F1                 2208 	pop	af
   0765 33                 2209 	inc	sp
   0766 C1                 2210 	pop	bc
   0767                    2211 00114$:
                           2212 ;demo.c:198: for (i = 0; i < 213; i++) {
   0767 0C                 2213 	inc	c
   0768 C3r15s07           2214 	jp	00112$
   076B                    2215 00115$:
                           2216 ;demo.c:206: close(&f);
   076B 21 00 00           2217 	ld	hl,#0x0000
   076E 39                 2218 	add	hl,sp
   076F E5                 2219 	push	hl
   0770 CDr00s00           2220 	call	_close
   0773 F1                 2221 	pop	af
                           2222 ;demo.c:208: return 1;
   0774 2E 01              2223 	ld	l,#0x01
   0776                    2224 00116$:
   0776 DD F9              2225 	ld	sp,ix
   0778 DD E1              2226 	pop	ix
   077A C9                 2227 	ret
   077B                    2228 _ge5_load_end::
   077B                    2229 __str_0:
   077B 6C 6F 61 64 69 6E  2230 	.ascii "loading ge5file: "
        67 20 67 65 35 66
        69 6C 65 3A 20
   078C 00                 2231 	.db 0x00
   078D                    2232 __str_1:
   078D 0D                 2233 	.db 0x0D
   078E 0A                 2234 	.db 0x0A
   078F 00                 2235 	.db 0x00
                           2236 ;demo.c:211: void scratch_clear() {
                           2237 ;	---------------------------------
                           2238 ; Function scratch_clear
                           2239 ; ---------------------------------
   0790                    2240 _scratch_clear_start::
   0790                    2241 _scratch_clear:
                           2242 ;demo.c:212: memset((uint8_t *) &scratch, 0, 128);
   0790 21 80 00           2243 	ld	hl,#0x0080
   0793 E5                 2244 	push	hl
   0794 3E 00              2245 	ld	a,#0x00
   0796 F5                 2246 	push	af
   0797 33                 2247 	inc	sp
   0798 21r40s30           2248 	ld	hl,#_scratch
   079B E5                 2249 	push	hl
   079C CDr00s00           2250 	call	_memset
   079F F1                 2251 	pop	af
   07A0 F1                 2252 	pop	af
   07A1 33                 2253 	inc	sp
   07A2 C9                 2254 	ret
   07A3                    2255 _scratch_clear_end::
                           2256 ;demo.c:215: uint8_t pal_load(char *file_name, uint8_t ss, int debugprint) {
                           2257 ;	---------------------------------
                           2258 ; Function pal_load
                           2259 ; ---------------------------------
   07A3                    2260 _pal_load_start::
   07A3                    2261 _pal_load:
   07A3 DD E5              2262 	push	ix
   07A5 DD 21 00 00        2263 	ld	ix,#0
   07A9 DD 39              2264 	add	ix,sp
   07AB 21 D2 FF           2265 	ld	hl,#-46
   07AE 39                 2266 	add	hl,sp
   07AF F9                 2267 	ld	sp,hl
                           2268 ;demo.c:218: if(debugprint == 1) {
   07B0 DD 7E 07           2269 	ld	a,7 (ix)
   07B3 D6 01              2270 	sub	a,#0x01
   07B5 20 06              2271 	jr	NZ,00115$
   07B7 DD 7E 08           2272 	ld	a,8 (ix)
   07BA B7                 2273 	or	a,a
   07BB 28 02              2274 	jr	Z,00116$
   07BD                    2275 00115$:
   07BD 18 1B              2276 	jr	00102$
   07BF                    2277 00116$:
                           2278 ;demo.c:219: puts("loading palfile: ");
   07BF 21r6Ds08           2279 	ld	hl,#__str_2
   07C2 E5                 2280 	push	hl
   07C3 CDr00s00           2281 	call	_puts
   07C6 F1                 2282 	pop	af
                           2283 ;demo.c:220: puts(file_name);
   07C7 DD 6E 04           2284 	ld	l,4 (ix)
   07CA DD 66 05           2285 	ld	h,5 (ix)
   07CD E5                 2286 	push	hl
   07CE CDr00s00           2287 	call	_puts
   07D1 F1                 2288 	pop	af
                           2289 ;demo.c:221: puts("\r\n");
   07D2 21r7Fs08           2290 	ld	hl,#__str_3
   07D5 E5                 2291 	push	hl
   07D6 CDr00s00           2292 	call	_puts
   07D9 F1                 2293 	pop	af
   07DA                    2294 00102$:
                           2295 ;demo.c:224: memset((uint8_t *) &f, 0, sizeof(fcb));
   07DA 21 00 00           2296 	ld	hl,#0x0000
   07DD 39                 2297 	add	hl,sp
   07DE 4D                 2298 	ld	c,l
   07DF 44                 2299 	ld	b,h
   07E0 21 2E 00           2300 	ld	hl,#0x002E
   07E3 E5                 2301 	push	hl
   07E4 3E 00              2302 	ld	a,#0x00
   07E6 F5                 2303 	push	af
   07E7 33                 2304 	inc	sp
   07E8 C5                 2305 	push	bc
   07E9 CDr00s00           2306 	call	_memset
   07EC F1                 2307 	pop	af
   07ED F1                 2308 	pop	af
   07EE 33                 2309 	inc	sp
                           2310 ;demo.c:225: scratch_clear();
   07EF CDr90s07           2311 	call	_scratch_clear
                           2312 ;demo.c:227: f.record_size = ss;
   07F2 21 00 00           2313 	ld	hl,#0x0000
   07F5 39                 2314 	add	hl,sp
   07F6 4D                 2315 	ld	c,l
   07F7 44                 2316 	ld	b,h
   07F8 21 0F 00           2317 	ld	hl,#0x000F
   07FB 09                 2318 	add	hl,bc
   07FC EB                 2319 	ex	de,hl
   07FD DD 7E 06           2320 	ld	a,6 (ix)
   0800 12                 2321 	ld	(de),a
                           2322 ;demo.c:228: f.drive = 0;
   0801 3E 00              2323 	ld	a,#0x00
   0803 02                 2324 	ld	(bc),a
                           2325 ;demo.c:230: memcpy(f.name, file_name, 11);
   0804 DD 5E 04           2326 	ld	e,4 (ix)
   0807 DD 56 05           2327 	ld	d,5 (ix)
   080A 03                 2328 	inc	bc
   080B 21 0B 00           2329 	ld	hl,#0x000B
   080E E5                 2330 	push	hl
   080F D5                 2331 	push	de
   0810 C5                 2332 	push	bc
   0811 CDr00s00           2333 	call	_memcpy
   0814 F1                 2334 	pop	af
   0815 F1                 2335 	pop	af
   0816 F1                 2336 	pop	af
                           2337 ;demo.c:232: if (open(&f) != 0) return 0;
   0817 21 00 00           2338 	ld	hl,#0x0000
   081A 39                 2339 	add	hl,sp
   081B E5                 2340 	push	hl
   081C CDr00s00           2341 	call	_open
   081F F1                 2342 	pop	af
   0820 AF                 2343 	xor	a,a
   0821 B5                 2344 	or	a,l
   0822 28 04              2345 	jr	Z,00104$
   0824 2E 00              2346 	ld	l,#0x00
   0826 18 40              2347 	jr	00109$
   0828                    2348 00104$:
                           2349 ;demo.c:233: if (block_set_data_ptr(scratch) != 0) return 0;
   0828 21r40s30           2350 	ld	hl,#_scratch
   082B E5                 2351 	push	hl
   082C CDr00s00           2352 	call	_block_set_data_ptr
   082F F1                 2353 	pop	af
   0830 AF                 2354 	xor	a,a
   0831 B5                 2355 	or	a,l
   0832 28 04              2356 	jr	Z,00106$
   0834 2E 00              2357 	ld	l,#0x00
   0836 18 30              2358 	jr	00109$
   0838                    2359 00106$:
                           2360 ;demo.c:234: if (block_read(&f) != 0) return 0;
   0838 21 00 00           2361 	ld	hl,#0x0000
   083B 39                 2362 	add	hl,sp
   083C E5                 2363 	push	hl
   083D CDr00s00           2364 	call	_block_read
   0840 F1                 2365 	pop	af
   0841 AF                 2366 	xor	a,a
   0842 B5                 2367 	or	a,l
   0843 28 04              2368 	jr	Z,00108$
   0845 2E 00              2369 	ld	l,#0x00
   0847 18 1F              2370 	jr	00109$
   0849                    2371 00108$:
                           2372 ;demo.c:236: memcpy(cur_palette, scratch+7, ss);
   0849 DD 4E 06           2373 	ld	c,6 (ix)
   084C 06 00              2374 	ld	b,#0x00
   084E 11r47s30           2375 	ld	de,#_scratch + 7
   0851 C5                 2376 	push	bc
   0852 D5                 2377 	push	de
   0853 21rC0s30           2378 	ld	hl,#_cur_palette
   0856 E5                 2379 	push	hl
   0857 CDr00s00           2380 	call	_memcpy
   085A F1                 2381 	pop	af
   085B F1                 2382 	pop	af
   085C F1                 2383 	pop	af
                           2384 ;demo.c:238: close(&f);
   085D 21 00 00           2385 	ld	hl,#0x0000
   0860 39                 2386 	add	hl,sp
   0861 E5                 2387 	push	hl
   0862 CDr00s00           2388 	call	_close
   0865 F1                 2389 	pop	af
                           2390 ;demo.c:239: return 1;
   0866 2E 01              2391 	ld	l,#0x01
   0868                    2392 00109$:
   0868 DD F9              2393 	ld	sp,ix
   086A DD E1              2394 	pop	ix
   086C C9                 2395 	ret
   086D                    2396 _pal_load_end::
   086D                    2397 __str_2:
   086D 6C 6F 61 64 69 6E  2398 	.ascii "loading palfile: "
        67 20 70 61 6C 66
        69 6C 65 3A 20
   087E 00                 2399 	.db 0x00
   087F                    2400 __str_3:
   087F 0D                 2401 	.db 0x0D
   0880 0A                 2402 	.db 0x0A
   0881 00                 2403 	.db 0x00
                           2404 ;demo.c:243: void pause() {
                           2405 ;	---------------------------------
                           2406 ; Function pause
                           2407 ; ---------------------------------
   0882                    2408 _pause_start::
   0882                    2409 _pause:
                           2410 ;demo.c:244: uint8_t i,j,k = 0;
                           2411 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0882 01 00 00           2412 	ld	bc,#0x0000
   0885                    2413 00104$:
   0885 78                 2414 	ld	a,b
   0886 D6 FF              2415 	sub	a,#0xFF
   0888 D0                 2416 	ret	NC
                           2417 ;demo.c:246: for (j = 0; j < 255; j++) {
   0889 59                 2418 	ld	e,c
   088A 16 FF              2419 	ld	d,#0xFF
   088C                    2420 00103$:
                           2421 ;demo.c:247: k++;
   088C 1C                 2422 	inc	e
   088D 15                 2423 	dec	d
                           2424 ;demo.c:246: for (j = 0; j < 255; j++) {
   088E AF                 2425 	xor	a,a
   088F B2                 2426 	or	a,d
   0890 20 FA              2427 	jr	NZ,00103$
                           2428 ;demo.c:245: for (i = 0; i < 255; i++) {	
   0892 4B                 2429 	ld	c,e
   0893 04                 2430 	inc	b
   0894 18 EF              2431 	jr	00104$
   0896                    2432 _pause_end::
                           2433 ;demo.c:253: uint8_t raw_load(char *file_name, int size, char* buffer, int debugprint) {
                           2434 ;	---------------------------------
                           2435 ; Function raw_load
                           2436 ; ---------------------------------
   0896                    2437 _raw_load_start::
   0896                    2438 _raw_load:
   0896 DD E5              2439 	push	ix
   0898 DD 21 00 00        2440 	ld	ix,#0
   089C DD 39              2441 	add	ix,sp
   089E 21 D2 FF           2442 	ld	hl,#-46
   08A1 39                 2443 	add	hl,sp
   08A2 F9                 2444 	ld	sp,hl
                           2445 ;demo.c:258: if(debugprint == 1) {
   08A3 DD 7E 0A           2446 	ld	a,10 (ix)
   08A6 D6 01              2447 	sub	a,#0x01
   08A8 20 06              2448 	jr	NZ,00120$
   08AA DD 7E 0B           2449 	ld	a,11 (ix)
   08AD B7                 2450 	or	a,a
   08AE 28 02              2451 	jr	Z,00121$
   08B0                    2452 00120$:
   08B0 18 1B              2453 	jr	00102$
   08B2                    2454 00121$:
                           2455 ;demo.c:259: puts("loading rawfile: ");
   08B2 21r84s09           2456 	ld	hl,#__str_4
   08B5 E5                 2457 	push	hl
   08B6 CDr00s00           2458 	call	_puts
   08B9 F1                 2459 	pop	af
                           2460 ;demo.c:260: puts(file_name);
   08BA DD 6E 04           2461 	ld	l,4 (ix)
   08BD DD 66 05           2462 	ld	h,5 (ix)
   08C0 E5                 2463 	push	hl
   08C1 CDr00s00           2464 	call	_puts
   08C4 F1                 2465 	pop	af
                           2466 ;demo.c:261: puts("\r\n");
   08C5 21r96s09           2467 	ld	hl,#__str_5
   08C8 E5                 2468 	push	hl
   08C9 CDr00s00           2469 	call	_puts
   08CC F1                 2470 	pop	af
   08CD                    2471 00102$:
                           2472 ;demo.c:264: memset((uint8_t *) &f, 0, sizeof(fcb));
   08CD 21 00 00           2473 	ld	hl,#0x0000
   08D0 39                 2474 	add	hl,sp
   08D1 4D                 2475 	ld	c,l
   08D2 44                 2476 	ld	b,h
   08D3 21 2E 00           2477 	ld	hl,#0x002E
   08D6 E5                 2478 	push	hl
   08D7 3E 00              2479 	ld	a,#0x00
   08D9 F5                 2480 	push	af
   08DA 33                 2481 	inc	sp
   08DB C5                 2482 	push	bc
   08DC CDr00s00           2483 	call	_memset
   08DF F1                 2484 	pop	af
   08E0 F1                 2485 	pop	af
   08E1 33                 2486 	inc	sp
                           2487 ;demo.c:265: scratch_clear();
   08E2 CDr90s07           2488 	call	_scratch_clear
                           2489 ;demo.c:267: f.record_size = 128;
   08E5 21 00 00           2490 	ld	hl,#0x0000
   08E8 39                 2491 	add	hl,sp
   08E9 4D                 2492 	ld	c,l
   08EA 44                 2493 	ld	b,h
   08EB 21 0F 00           2494 	ld	hl,#0x000F
   08EE 09                 2495 	add	hl,bc
   08EF EB                 2496 	ex	de,hl
   08F0 3E 80              2497 	ld	a,#0x80
   08F2 12                 2498 	ld	(de),a
                           2499 ;demo.c:268: f.drive = 0;
   08F3 3E 00              2500 	ld	a,#0x00
   08F5 02                 2501 	ld	(bc),a
                           2502 ;demo.c:270: memcpy(f.name, file_name, 11);
   08F6 DD 5E 04           2503 	ld	e,4 (ix)
   08F9 DD 56 05           2504 	ld	d,5 (ix)
   08FC 03                 2505 	inc	bc
   08FD 21 0B 00           2506 	ld	hl,#0x000B
   0900 E5                 2507 	push	hl
   0901 D5                 2508 	push	de
   0902 C5                 2509 	push	bc
   0903 CDr00s00           2510 	call	_memcpy
   0906 F1                 2511 	pop	af
   0907 F1                 2512 	pop	af
   0908 F1                 2513 	pop	af
                           2514 ;demo.c:272: if (open(&f) != 0) return 0;
   0909 21 00 00           2515 	ld	hl,#0x0000
   090C 39                 2516 	add	hl,sp
   090D E5                 2517 	push	hl
   090E CDr00s00           2518 	call	_open
   0911 F1                 2519 	pop	af
   0912 AF                 2520 	xor	a,a
   0913 B5                 2521 	or	a,l
   0914 28 05              2522 	jr	Z,00119$
   0916 2E 00              2523 	ld	l,#0x00
   0918 C3r7Fs09           2524 	jp	00112$
                           2525 ;demo.c:274: while(total < size) {
   091B                    2526 00119$:
   091B 01 00 00           2527 	ld	bc,#0x0000
   091E                    2528 00109$:
   091E 79                 2529 	ld	a,c
   091F DD 96 06           2530 	sub	a,6 (ix)
   0922 78                 2531 	ld	a,b
   0923 DD 9E 07           2532 	sbc	a,7 (ix)
   0926 F2r74s09           2533 	jp	P,00111$
                           2534 ;demo.c:275: if (block_set_data_ptr(scratch) != 0) return 0;
   0929 C5                 2535 	push	bc
   092A 21r40s30           2536 	ld	hl,#_scratch
   092D E5                 2537 	push	hl
   092E CDr00s00           2538 	call	_block_set_data_ptr
   0931 F1                 2539 	pop	af
   0932 5D                 2540 	ld	e,l
   0933 C1                 2541 	pop	bc
   0934 AF                 2542 	xor	a,a
   0935 B3                 2543 	or	a,e
   0936 28 04              2544 	jr	Z,00106$
   0938 2E 00              2545 	ld	l,#0x00
   093A 18 43              2546 	jr	00112$
   093C                    2547 00106$:
                           2548 ;demo.c:276: if (block_read(&f) != 0) return 0;
   093C 21 00 00           2549 	ld	hl,#0x0000
   093F 39                 2550 	add	hl,sp
   0940 C5                 2551 	push	bc
   0941 E5                 2552 	push	hl
   0942 CDr00s00           2553 	call	_block_read
   0945 F1                 2554 	pop	af
   0946 5D                 2555 	ld	e,l
   0947 C1                 2556 	pop	bc
   0948 AF                 2557 	xor	a,a
   0949 B3                 2558 	or	a,e
   094A 28 04              2559 	jr	Z,00108$
   094C 2E 00              2560 	ld	l,#0x00
   094E 18 2F              2561 	jr	00112$
   0950                    2562 00108$:
                           2563 ;demo.c:278: memcpy(buffer+total,scratch,incr);
   0950 DD 7E 08           2564 	ld	a,8 (ix)
   0953 81                 2565 	add	a,c
   0954 5F                 2566 	ld	e,a
   0955 DD 7E 09           2567 	ld	a,9 (ix)
   0958 88                 2568 	adc	a,b
   0959 57                 2569 	ld	d,a
   095A C5                 2570 	push	bc
   095B 21 80 00           2571 	ld	hl,#0x0080
   095E E5                 2572 	push	hl
   095F 21r40s30           2573 	ld	hl,#_scratch
   0962 E5                 2574 	push	hl
   0963 D5                 2575 	push	de
   0964 CDr00s00           2576 	call	_memcpy
   0967 F1                 2577 	pop	af
   0968 F1                 2578 	pop	af
   0969 F1                 2579 	pop	af
   096A C1                 2580 	pop	bc
                           2581 ;demo.c:280: total+=incr;
   096B 21 80 00           2582 	ld	hl,#0x0080
   096E 09                 2583 	add	hl,bc
   096F 4D                 2584 	ld	c,l
   0970 44                 2585 	ld	b,h
   0971 C3r1Es09           2586 	jp	00109$
   0974                    2587 00111$:
                           2588 ;demo.c:283: close(&f);
   0974 21 00 00           2589 	ld	hl,#0x0000
   0977 39                 2590 	add	hl,sp
   0978 E5                 2591 	push	hl
   0979 CDr00s00           2592 	call	_close
   097C F1                 2593 	pop	af
                           2594 ;demo.c:285: return 1;
   097D 2E 01              2595 	ld	l,#0x01
   097F                    2596 00112$:
   097F DD F9              2597 	ld	sp,ix
   0981 DD E1              2598 	pop	ix
   0983 C9                 2599 	ret
   0984                    2600 _raw_load_end::
   0984                    2601 __str_4:
   0984 6C 6F 61 64 69 6E  2602 	.ascii "loading rawfile: "
        67 20 72 61 77 66
        69 6C 65 3A 20
   0995 00                 2603 	.db 0x00
   0996                    2604 __str_5:
   0996 0D                 2605 	.db 0x0D
   0997 0A                 2606 	.db 0x0A
   0998 00                 2607 	.db 0x00
                           2608 ;demo.c:288: void pck_load(char *file_name, int size, uint16_t address, int vram_offset, int debugprint) {
                           2609 ;	---------------------------------
                           2610 ; Function pck_load
                           2611 ; ---------------------------------
   0999                    2612 _pck_load_start::
   0999                    2613 _pck_load:
   0999 DD E5              2614 	push	ix
   099B DD 21 00 00        2615 	ld	ix,#0
   099F DD 39              2616 	add	ix,sp
                           2617 ;demo.c:289: if(debugprint == 1) {
   09A1 DD 7E 0C           2618 	ld	a,12 (ix)
   09A4 D6 01              2619 	sub	a,#0x01
   09A6 20 06              2620 	jr	NZ,00106$
   09A8 DD 7E 0D           2621 	ld	a,13 (ix)
   09AB B7                 2622 	or	a,a
   09AC 28 02              2623 	jr	Z,00107$
   09AE                    2624 00106$:
   09AE 18 1B              2625 	jr	00102$
   09B0                    2626 00107$:
                           2627 ;demo.c:290: puts("loading pckfile: ");
   09B0 21r12s0A           2628 	ld	hl,#__str_6
   09B3 E5                 2629 	push	hl
   09B4 CDr00s00           2630 	call	_puts
   09B7 F1                 2631 	pop	af
                           2632 ;demo.c:291: puts(file_name);
   09B8 DD 6E 04           2633 	ld	l,4 (ix)
   09BB DD 66 05           2634 	ld	h,5 (ix)
   09BE E5                 2635 	push	hl
   09BF CDr00s00           2636 	call	_puts
   09C2 F1                 2637 	pop	af
                           2638 ;demo.c:292: puts("\r\n");
   09C3 21r24s0A           2639 	ld	hl,#__str_7
   09C6 E5                 2640 	push	hl
   09C7 CDr00s00           2641 	call	_puts
   09CA F1                 2642 	pop	af
   09CB                    2643 00102$:
                           2644 ;demo.c:294: memset((uint8_t *) &packbuffer, 0, size);
   09CB DD 4E 06           2645 	ld	c,6 (ix)
   09CE DD 46 07           2646 	ld	b,7 (ix)
   09D1 C5                 2647 	push	bc
   09D2 C5                 2648 	push	bc
   09D3 3E 00              2649 	ld	a,#0x00
   09D5 F5                 2650 	push	af
   09D6 33                 2651 	inc	sp
   09D7 21r60s01           2652 	ld	hl,#_packbuffer
   09DA E5                 2653 	push	hl
   09DB CDr00s00           2654 	call	_memset
   09DE F1                 2655 	pop	af
   09DF F1                 2656 	pop	af
   09E0 33                 2657 	inc	sp
   09E1 C1                 2658 	pop	bc
                           2659 ;demo.c:295: raw_load(file_name, size, packbuffer,0);
   09E2 21 00 00           2660 	ld	hl,#0x0000
   09E5 E5                 2661 	push	hl
   09E6 21r60s01           2662 	ld	hl,#_packbuffer
   09E9 E5                 2663 	push	hl
   09EA C5                 2664 	push	bc
   09EB DD 6E 04           2665 	ld	l,4 (ix)
   09EE DD 66 05           2666 	ld	h,5 (ix)
   09F1 E5                 2667 	push	hl
   09F2 CDr96s08           2668 	call	_raw_load
   09F5 F1                 2669 	pop	af
   09F6 F1                 2670 	pop	af
   09F7 F1                 2671 	pop	af
   09F8 F1                 2672 	pop	af
                           2673 ;demo.c:296: bitbuster(packbuffer,address,vram_offset);
   09F9 DD 7E 0A           2674 	ld	a,10 (ix)
   09FC F5                 2675 	push	af
   09FD 33                 2676 	inc	sp
   09FE DD 6E 08           2677 	ld	l,8 (ix)
   0A01 DD 66 09           2678 	ld	h,9 (ix)
   0A04 E5                 2679 	push	hl
   0A05 21r60s01           2680 	ld	hl,#_packbuffer
   0A08 E5                 2681 	push	hl
   0A09 CDr00s00           2682 	call	_bitbuster
   0A0C F1                 2683 	pop	af
   0A0D F1                 2684 	pop	af
   0A0E 33                 2685 	inc	sp
   0A0F DD E1              2686 	pop	ix
   0A11 C9                 2687 	ret
   0A12                    2688 _pck_load_end::
   0A12                    2689 __str_6:
   0A12 6C 6F 61 64 69 6E  2690 	.ascii "loading pckfile: "
        67 20 70 63 6B 66
        69 6C 65 3A 20
   0A23 00                 2691 	.db 0x00
   0A24                    2692 __str_7:
   0A24 0D                 2693 	.db 0x0D
   0A25 0A                 2694 	.db 0x0A
   0A26 00                 2695 	.db 0x00
                           2696 ;demo.c:299: void fadein() {
                           2697 ;	---------------------------------
                           2698 ; Function fadein
                           2699 ; ---------------------------------
   0A27                    2700 _fadein_start::
   0A27                    2701 _fadein:
   0A27 DD E5              2702 	push	ix
   0A29 DD 21 00 00        2703 	ld	ix,#0
   0A2D DD 39              2704 	add	ix,sp
   0A2F F5                 2705 	push	af
                           2706 ;demo.c:302: if (tick < 4) return;
   0A30 3Ar62s31           2707 	ld	a,(#_tick+0)
   0A33 D6 04              2708 	sub	a,#0x04
   0A35 3Ar63s31           2709 	ld	a,(#_tick+1)
   0A38 DE 00              2710 	sbc	a,#0x00
   0A3A F2r40s0A           2711 	jp	P,00102$
   0A3D C3rEEs0A           2712 	jp	00113$
   0A40                    2713 00102$:
                           2714 ;demo.c:304: tick = 0;
   0A40 21r62s31           2715 	ld	hl,#_tick + 0
   0A43 36 00              2716 	ld	(hl), #0x00
   0A45 21r63s31           2717 	ld	hl,#_tick + 1
   0A48 36 00              2718 	ld	(hl), #0x00
                           2719 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0A4A 0E 00              2720 	ld	c,#0x00
   0A4C                    2721 00109$:
   0A4C 79                 2722 	ld	a,c
   0A4D D6 20              2723 	sub	a,#0x20
   0A4F D2rE6s0A           2724 	jp	NC,00112$
                           2725 ;demo.c:307: uint8_t r = scratch[i] >> 4;
   0A52 3Er40              2726 	ld	a,#<_scratch
   0A54 81                 2727 	add	a,c
   0A55 5F                 2728 	ld	e,a
   0A56 3Es30              2729 	ld	a,#>_scratch
   0A58 CE 00              2730 	adc	a,#0x00
   0A5A 57                 2731 	ld	d,a
   0A5B 1A                 2732 	ld	a,(de)
   0A5C 47                 2733 	ld	b,a
   0A5D 58                 2734 	ld	e,b
   0A5E CB 3B              2735 	srl	e
   0A60 CB 3B              2736 	srl	e
   0A62 CB 3B              2737 	srl	e
   0A64 CB 3B              2738 	srl	e
                           2739 ;demo.c:308: uint8_t b = scratch[i] & 0xf;
   0A66 78                 2740 	ld	a,b
   0A67 E6 0F              2741 	and	a,#0x0F
   0A69 DD 77 FF           2742 	ld	-1 (ix),a
                           2743 ;demo.c:309: uint8_t g = scratch[i+1];
   0A6C 51                 2744 	ld	d,c
   0A6D 14                 2745 	inc	d
   0A6E 3Er40              2746 	ld	a,#<_scratch
   0A70 82                 2747 	add	a,d
   0A71 6F                 2748 	ld	l,a
   0A72 3Es30              2749 	ld	a,#>_scratch
   0A74 CE 00              2750 	adc	a,#0x00
   0A76 67                 2751 	ld	h,a
   0A77 56                 2752 	ld	d,(hl)
   0A78 DD 72 FE           2753 	ld	-2 (ix),d
                           2754 ;demo.c:311: if (r < (cur_palette[i] >> 4)) r++;
   0A7B 3ErC0              2755 	ld	a,#<_cur_palette
   0A7D 81                 2756 	add	a,c
   0A7E 6F                 2757 	ld	l,a
   0A7F 3Es30              2758 	ld	a,#>_cur_palette
   0A81 CE 00              2759 	adc	a,#0x00
   0A83 67                 2760 	ld	h,a
   0A84 56                 2761 	ld	d,(hl)
   0A85 CB 3A              2762 	srl	d
   0A87 CB 3A              2763 	srl	d
   0A89 CB 3A              2764 	srl	d
   0A8B CB 3A              2765 	srl	d
   0A8D 7B                 2766 	ld	a,e
   0A8E 92                 2767 	sub	a,d
   0A8F 30 01              2768 	jr	NC,00104$
   0A91 1C                 2769 	inc	e
   0A92                    2770 00104$:
                           2771 ;demo.c:312: if (b < (cur_palette[i] & 0xf)) b++;
   0A92 3ErC0              2772 	ld	a,#<_cur_palette
   0A94 81                 2773 	add	a,c
   0A95 6F                 2774 	ld	l,a
   0A96 3Es30              2775 	ld	a,#>_cur_palette
   0A98 CE 00              2776 	adc	a,#0x00
   0A9A 67                 2777 	ld	h,a
   0A9B 7E                 2778 	ld	a,(hl)
   0A9C E6 0F              2779 	and	a,#0x0F
   0A9E 47                 2780 	ld	b,a
   0A9F DD 7E FF           2781 	ld	a,-1 (ix)
   0AA2 90                 2782 	sub	a,b
   0AA3 30 03              2783 	jr	NC,00106$
   0AA5 DD 34 FF           2784 	inc	-1 (ix)
   0AA8                    2785 00106$:
                           2786 ;demo.c:314: scratch[i] = (r << 4) | b;
   0AA8 3Er40              2787 	ld	a,#<_scratch
   0AAA 81                 2788 	add	a,c
   0AAB 47                 2789 	ld	b,a
   0AAC 3Es30              2790 	ld	a,#>_scratch
   0AAE CE 00              2791 	adc	a,#0x00
   0AB0 57                 2792 	ld	d,a
   0AB1 7B                 2793 	ld	a,e
   0AB2 07                 2794 	rlca
   0AB3 07                 2795 	rlca
   0AB4 07                 2796 	rlca
   0AB5 07                 2797 	rlca
   0AB6 E6 F0              2798 	and	a,#0xF0
   0AB8 DD B6 FF           2799 	or	a,-1 (ix)
   0ABB 68                 2800 	ld	l,b
   0ABC 62                 2801 	ld	h,d
   0ABD 77                 2802 	ld	(hl),a
                           2803 ;demo.c:315: if (g < cur_palette[i+1]) scratch[i+1]++;
   0ABE 41                 2804 	ld	b,c
   0ABF 04                 2805 	inc	b
   0AC0 3ErC0              2806 	ld	a,#<_cur_palette
   0AC2 80                 2807 	add	a,b
   0AC3 5F                 2808 	ld	e,a
   0AC4 3Es30              2809 	ld	a,#>_cur_palette
   0AC6 CE 00              2810 	adc	a,#0x00
   0AC8 57                 2811 	ld	d,a
   0AC9 1A                 2812 	ld	a,(de)
   0ACA 5F                 2813 	ld	e,a
   0ACB DD 7E FE           2814 	ld	a,-2 (ix)
   0ACE 93                 2815 	sub	a,e
   0ACF 30 10              2816 	jr	NC,00111$
   0AD1 3Er40              2817 	ld	a,#<_scratch
   0AD3 80                 2818 	add	a,b
   0AD4 47                 2819 	ld	b,a
   0AD5 3Es30              2820 	ld	a,#>_scratch
   0AD7 CE 00              2821 	adc	a,#0x00
   0AD9 5F                 2822 	ld	e,a
   0ADA 68                 2823 	ld	l,b
   0ADB 67                 2824 	ld	h,a
   0ADC 7E                 2825 	ld	a,(hl)
   0ADD 3C                 2826 	inc	a
   0ADE 68                 2827 	ld	l,b
   0ADF 63                 2828 	ld	h,e
   0AE0 77                 2829 	ld	(hl),a
   0AE1                    2830 00111$:
                           2831 ;demo.c:306: for(i = 0; i < 32; i+=2) {
   0AE1 0C                 2832 	inc	c
   0AE2 0C                 2833 	inc	c
   0AE3 C3r4Cs0A           2834 	jp	00109$
   0AE6                    2835 00112$:
                           2836 ;demo.c:319: vdp_load_palette(scratch);
   0AE6 21r40s30           2837 	ld	hl,#_scratch
   0AE9 E5                 2838 	push	hl
   0AEA CDr00s00           2839 	call	_vdp_load_palette
   0AED F1                 2840 	pop	af
   0AEE                    2841 00113$:
   0AEE DD F9              2842 	ld	sp,ix
   0AF0 DD E1              2843 	pop	ix
   0AF2 C9                 2844 	ret
   0AF3                    2845 _fadein_end::
                           2846 ;demo.c:331: void do_ymmm() {
                           2847 ;	---------------------------------
                           2848 ; Function do_ymmm
                           2849 ; ---------------------------------
   0AF3                    2850 _do_ymmm_start::
   0AF3                    2851 _do_ymmm:
   0AF3 DD E5              2852 	push	ix
   0AF5 DD 21 00 00        2853 	ld	ix,#0
   0AF9 DD 39              2854 	add	ix,sp
   0AFB F5                 2855 	push	af
                           2856 ;demo.c:335: if (tick > 32) { tick = 0; flipper++;}
   0AFC 3E 20              2857 	ld	a,#0x20
   0AFE FD 21r62s31        2858 	ld	iy,#_tick
   0B02 FD 96 00           2859 	sub	a,0 (iy)
   0B05 3E 00              2860 	ld	a,#0x00
   0B07 FD 21r62s31        2861 	ld	iy,#_tick
   0B0B FD 9E 01           2862 	sbc	a,1 (iy)
   0B0E F2r2Bs0B           2863 	jp	P,00102$
   0B11 21r62s31           2864 	ld	hl,#_tick + 0
   0B14 36 00              2865 	ld	(hl), #0x00
   0B16 21r63s31           2866 	ld	hl,#_tick + 1
   0B19 36 00              2867 	ld	(hl), #0x00
   0B1B FD 21r7Ds31        2868 	ld	iy,#_flipper
   0B1F FD 34 00           2869 	inc	0 (iy)
   0B22 20 07              2870 	jr	NZ,00115$
   0B24 FD 21r7Ds31        2871 	ld	iy,#_flipper
   0B28 FD 34 01           2872 	inc	1 (iy)
   0B2B                    2873 00115$:
   0B2B                    2874 00102$:
                           2875 ;demo.c:336: if (flipper > 10) { flipper = 0;}
   0B2B 3E 0A              2876 	ld	a,#0x0A
   0B2D FD 21r7Ds31        2877 	ld	iy,#_flipper
   0B31 FD 96 00           2878 	sub	a,0 (iy)
   0B34 3E 00              2879 	ld	a,#0x00
   0B36 FD 21r7Ds31        2880 	ld	iy,#_flipper
   0B3A FD 9E 01           2881 	sbc	a,1 (iy)
   0B3D F2r4As0B           2882 	jp	P,00104$
   0B40 21r7Ds31           2883 	ld	hl,#_flipper + 0
   0B43 36 00              2884 	ld	(hl), #0x00
   0B45 21r7Es31           2885 	ld	hl,#_flipper + 1
   0B48 36 00              2886 	ld	(hl), #0x00
   0B4A                    2887 00104$:
                           2888 ;demo.c:338: ymmmf++;
   0B4A FD 21r7Fs31        2889 	ld	iy,#_ymmmf
   0B4E FD 34 00           2890 	inc	0 (iy)
   0B51 20 07              2891 	jr	NZ,00116$
   0B53 FD 21r7Fs31        2892 	ld	iy,#_ymmmf
   0B57 FD 34 01           2893 	inc	1 (iy)
   0B5A                    2894 00116$:
                           2895 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0B5A 21r7Bs31           2896 	ld	hl,#_yofff + 0
   0B5D 36 00              2897 	ld	(hl), #0x00
   0B5F                    2898 00105$:
   0B5F 21r7Bs31           2899 	ld	hl,#_yofff + 0
   0B62 4E                 2900 	ld	c,(hl)
   0B63 06 00              2901 	ld	b,#0x00
   0B65 79                 2902 	ld	a,c
   0B66 D6 D2              2903 	sub	a,#0xD2
   0B68 78                 2904 	ld	a,b
   0B69 DE 00              2905 	sbc	a,#0x00
   0B6B F2rE4s0B           2906 	jp	P,00109$
                           2907 ;demo.c:340: xo = (sintabx[(yofff+ymmmf) & 255]);
   0B6E 21r7Fs31           2908 	ld	hl,#_ymmmf
   0B71 79                 2909 	ld	a,c
   0B72 86                 2910 	add	a,(hl)
   0B73 5F                 2911 	ld	e,a
   0B74 78                 2912 	ld	a,b
   0B75 23                 2913 	inc	hl
   0B76 8E                 2914 	adc	a,(hl)
   0B77 16 00              2915 	ld	d,#0x00
   0B79 CB 23              2916 	sla	e
   0B7B CB 12              2917 	rl	d
   0B7D 21r2Cs00           2918 	ld	hl,#_sintabx
   0B80 19                 2919 	add	hl,de
   0B81 5E                 2920 	ld	e,(hl)
   0B82 23                 2921 	inc	hl
   0B83 56                 2922 	ld	d,(hl)
   0B84 DD 73 FE           2923 	ld	-2 (ix),e
   0B87 DD 72 FF           2924 	ld	-1 (ix),d
                           2925 ;demo.c:343: cmd.source_x = 0;
   0B8A 21r64s31           2926 	ld	hl,#_cmd
   0B8D 36 00              2927 	ld	(hl),#0x00
   0B8F 23                 2928 	inc	hl
   0B90 36 00              2929 	ld	(hl),#0x00
                           2930 ;demo.c:344: cmd.source_y = 0+yofff;
   0B92 11r66s31           2931 	ld	de,#_cmd + 2
   0B95 EB                 2932 	ex	de,hl
   0B96 71                 2933 	ld	(hl),c
   0B97 23                 2934 	inc	hl
   0B98 70                 2935 	ld	(hl),b
                           2936 ;demo.c:345: cmd.dest_x = xo;
   0B99 11r68s31           2937 	ld	de,#_cmd + 4
   0B9C EB                 2938 	ex	de,hl
   0B9D DD 7E FE           2939 	ld	a,-2 (ix)
   0BA0 77                 2940 	ld	(hl),a
   0BA1 23                 2941 	inc	hl
   0BA2 DD 7E FF           2942 	ld	a,-1 (ix)
   0BA5 77                 2943 	ld	(hl),a
                           2944 ;demo.c:346: cmd.dest_y = 3+yofff;
   0BA6 11r6As31           2945 	ld	de,#_cmd + 6
   0BA9 03                 2946 	inc	bc
   0BAA 03                 2947 	inc	bc
   0BAB 03                 2948 	inc	bc
   0BAC 6B                 2949 	ld	l,e
   0BAD 62                 2950 	ld	h,d
   0BAE 71                 2951 	ld	(hl),c
   0BAF 23                 2952 	inc	hl
   0BB0 70                 2953 	ld	(hl),b
                           2954 ;demo.c:347: cmd.size_x = 256;
   0BB1 21r6Cs31           2955 	ld	hl, #_cmd + 8
   0BB4 36 00              2956 	ld	(hl),#0x00
   0BB6 23                 2957 	inc	hl
   0BB7 36 01              2958 	ld	(hl),#0x01
                           2959 ;demo.c:348: cmd.size_y = 1;
   0BB9 21r6Es31           2960 	ld	hl, #_cmd + 10
   0BBC 36 01              2961 	ld	(hl),#0x01
   0BBE 23                 2962 	inc	hl
   0BBF 36 00              2963 	ld	(hl),#0x00
                           2964 ;demo.c:349: cmd.data = 0;
                           2965 ;demo.c:350: cmd.argument = 0;
   0BC1 3E 00              2966 	ld	a,#0x00
   0BC3 32r70s31           2967 	ld	(#_cmd + 12),a
   0BC6 32r71s31           2968 	ld	(#_cmd + 13),a
                           2969 ;demo.c:351: cmd.command = 0xD0;
   0BC9 3E D0              2970 	ld	a,#0xD0
   0BCB 32r72s31           2971 	ld	(#_cmd + 14),a
                           2972 ;demo.c:354: vdp_copier(&cmd);
   0BCE 21r64s31           2973 	ld	hl,#_cmd
   0BD1 E5                 2974 	push	hl
   0BD2 CDr00s00           2975 	call	_vdp_copier
   0BD5 F1                 2976 	pop	af
                           2977 ;demo.c:339: for (yofff = 0; yofff<212-step;yofff+=step) {
   0BD6 21r7Bs31           2978 	ld	hl,#_yofff + 0
   0BD9 4E                 2979 	ld	c,(hl)
   0BDA 21r7Bs31           2980 	ld	hl,#_yofff
   0BDD 79                 2981 	ld	a,c
   0BDE C6 02              2982 	add	a,#0x02
   0BE0 77                 2983 	ld	(hl),a
   0BE1 C3r5Fs0B           2984 	jp	00105$
   0BE4                    2985 00109$:
   0BE4 DD F9              2986 	ld	sp,ix
   0BE6 DD E1              2987 	pop	ix
   0BE8 C9                 2988 	ret
   0BE9                    2989 _do_ymmm_end::
                           2990 ;demo.c:371: void do_blocks() {
                           2991 ;	---------------------------------
                           2992 ; Function do_blocks
                           2993 ; ---------------------------------
   0BE9                    2994 _do_blocks_start::
   0BE9                    2995 _do_blocks:
   0BE9 DD E5              2996 	push	ix
   0BEB DD 21 00 00        2997 	ld	ix,#0
   0BEF DD 39              2998 	add	ix,sp
   0BF1 21 FA FF           2999 	ld	hl,#-6
   0BF4 39                 3000 	add	hl,sp
   0BF5 F9                 3001 	ld	sp,hl
                           3002 ;demo.c:373: int ys = 0;
   0BF6 DD 36 FC 00        3003 	ld	-4 (ix),#0x00
   0BFA DD 36 FD 00        3004 	ld	-3 (ix),#0x00
                           3005 ;demo.c:374: int ye = 0;
   0BFE DD 36 FA 00        3006 	ld	-6 (ix),#0x00
   0C02 DD 36 FB 00        3007 	ld	-5 (ix),#0x00
                           3008 ;demo.c:376: vdp_register(VDP_VOFFSET,0);
   0C06 21 17 00           3009 	ld	hl,#0x0017
   0C09 E5                 3010 	push	hl
   0C0A CDr00s00           3011 	call	_vdp_register
   0C0D F1                 3012 	pop	af
                           3013 ;demo.c:378: if (block_init == 0) {
   0C0E AF                 3014 	xor	a,a
   0C0F FD 21r81s31        3015 	ld	iy,#_block_init
   0C13 FD B6 00           3016 	or	a,0 (iy)
   0C16 C2r7Es0C           3017 	jp	NZ,00108$
                           3018 ;demo.c:380: vdp_set_screen5();
   0C19 CDr00s00           3019 	call	_vdp_set_screen5
                           3020 ;demo.c:382: vdp_register(2, 0x5F);
   0C1C 21 02 5F           3021 	ld	hl,#0x5F02
   0C1F E5                 3022 	push	hl
   0C20 CDr00s00           3023 	call	_vdp_register
   0C23 F1                 3024 	pop	af
                           3025 ;demo.c:384: for(i=0;i<16;i++) btab[i] = i*16;
   0C24 DD 36 FE 00        3026 	ld	-2 (ix),#0x00
   0C28 DD 36 FF 00        3027 	ld	-1 (ix),#0x00
   0C2C                    3028 00110$:
   0C2C DD 7E FE           3029 	ld	a,-2 (ix)
   0C2F D6 10              3030 	sub	a,#0x10
   0C31 DD 7E FF           3031 	ld	a,-1 (ix)
   0C34 DE 00              3032 	sbc	a,#0x00
   0C36 F2r6Es0C           3033 	jp	P,00113$
   0C39 DD 4E FE           3034 	ld	c,-2 (ix)
   0C3C DD 46 FF           3035 	ld	b,-1 (ix)
   0C3F CB 21              3036 	sla	c
   0C41 CB 10              3037 	rl	b
   0C43 21r8As31           3038 	ld	hl,#_btab
   0C46 09                 3039 	add	hl,bc
   0C47 4D                 3040 	ld	c,l
   0C48 44                 3041 	ld	b,h
   0C49 DD 5E FE           3042 	ld	e,-2 (ix)
   0C4C DD 56 FF           3043 	ld	d,-1 (ix)
   0C4F CB 23              3044 	sla	e
   0C51 CB 12              3045 	rl	d
   0C53 CB 23              3046 	sla	e
   0C55 CB 12              3047 	rl	d
   0C57 CB 23              3048 	sla	e
   0C59 CB 12              3049 	rl	d
   0C5B CB 23              3050 	sla	e
   0C5D CB 12              3051 	rl	d
   0C5F 69                 3052 	ld	l,c
   0C60 60                 3053 	ld	h,b
   0C61 73                 3054 	ld	(hl),e
   0C62 23                 3055 	inc	hl
   0C63 72                 3056 	ld	(hl),d
   0C64 DD 34 FE           3057 	inc	-2 (ix)
   0C67 20 03              3058 	jr	NZ,00139$
   0C69 DD 34 FF           3059 	inc	-1 (ix)
   0C6C                    3060 00139$:
   0C6C 18 BE              3061 	jr	00110$
   0C6E                    3062 00113$:
                           3063 ;demo.c:385: vdp_load_palette(block_palette);
   0C6E 21rE0s30           3064 	ld	hl,#_block_palette
   0C71 E5                 3065 	push	hl
   0C72 CDr00s00           3066 	call	_vdp_load_palette
   0C75 F1                 3067 	pop	af
                           3068 ;demo.c:387: block_init = 1;
   0C76 21r81s31           3069 	ld	hl,#_block_init + 0
   0C79 36 01              3070 	ld	(hl), #0x01
   0C7B C3r07s0E           3071 	jp	00122$
   0C7E                    3072 00108$:
                           3073 ;demo.c:391: if (flof == 0) { ys = 0; ye = 8; }
   0C7E 3ArAAs31           3074 	ld	a,(#_flof+0)
   0C81 FD 21rAAs31        3075 	ld	iy,#_flof
   0C85 FD B6 01           3076 	or	a,1 (iy)
   0C88 20 10              3077 	jr	NZ,00102$
   0C8A DD 36 FC 00        3078 	ld	-4 (ix),#0x00
   0C8E DD 36 FD 00        3079 	ld	-3 (ix),#0x00
   0C92 DD 36 FA 08        3080 	ld	-6 (ix),#0x08
   0C96 DD 36 FB 00        3081 	ld	-5 (ix),#0x00
   0C9A                    3082 00102$:
                           3083 ;demo.c:392: if (flof == 1) { ys = 8; ye = 16; }
   0C9A 3ArAAs31           3084 	ld	a,(#_flof+0)
   0C9D D6 01              3085 	sub	a,#0x01
   0C9F 20 06              3086 	jr	NZ,00140$
   0CA1 3ArABs31           3087 	ld	a,(#_flof+1)
   0CA4 B7                 3088 	or	a,a
   0CA5 28 02              3089 	jr	Z,00141$
   0CA7                    3090 00140$:
   0CA7 18 10              3091 	jr	00104$
   0CA9                    3092 00141$:
   0CA9 DD 36 FC 08        3093 	ld	-4 (ix),#0x08
   0CAD DD 36 FD 00        3094 	ld	-3 (ix),#0x00
   0CB1 DD 36 FA 10        3095 	ld	-6 (ix),#0x10
   0CB5 DD 36 FB 00        3096 	ld	-5 (ix),#0x00
   0CB9                    3097 00104$:
                           3098 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0CB9 FD 21r88s31        3099 	ld	iy,#_bty
   0CBD FD 36 00 03        3100 	ld	0 (iy),#0x03
   0CC1 FD 21r88s31        3101 	ld	iy,#_bty
   0CC5 FD 36 01 00        3102 	ld	1 (iy),#0x00
   0CC9                    3103 00118$:
   0CC9 3Ar88s31           3104 	ld	a,(#_bty+0)
   0CCC D6 0B              3105 	sub	a,#0x0B
   0CCE 3Ar89s31           3106 	ld	a,(#_bty+1)
   0CD1 DE 00              3107 	sbc	a,#0x00
   0CD3 F2rDEs0D           3108 	jp	P,00121$
                           3109 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0CD6 DD 7E FC           3110 	ld	a,-4 (ix)
   0CD9 FD 21r86s31        3111 	ld	iy,#_btx
   0CDD FD 77 00           3112 	ld	0 (iy),a
   0CE0 DD 7E FD           3113 	ld	a,-3 (ix)
   0CE3 FD 21r86s31        3114 	ld	iy,#_btx
   0CE7 FD 77 01           3115 	ld	1 (iy),a
   0CEA                    3116 00114$:
   0CEA 3Ar86s31           3117 	ld	a,(#_btx+0)
   0CED DD 96 FA           3118 	sub	a,-6 (ix)
   0CF0 3Ar87s31           3119 	ld	a,(#_btx+1)
   0CF3 DD 9E FB           3120 	sbc	a,-5 (ix)
   0CF6 F2rCBs0D           3121 	jp	P,00120$
                           3122 ;demo.c:396: bsx = (PLY_PSGReg8 & PLY_PSGReg9 | PLY_PSGReg10)>>1;
   0CF9 3Ar00s00           3123 	ld	a,(#_PLY_PSGReg8+0)
   0CFC FD 21r00s00        3124 	ld	iy,#_PLY_PSGReg9
   0D00 FD A6 00           3125 	and	a,0 (iy)
   0D03 21r00s00           3126 	ld	hl,#_PLY_PSGReg10 + 0
   0D06 B6                 3127 	or	a,(hl)
   0D07 4F                 3128 	ld	c,a
   0D08 CB 39              3129 	srl	c
   0D0A 21r82s31           3130 	ld	hl,#_bsx + 0
   0D0D 71                 3131 	ld	(hl), c
   0D0E 21r83s31           3132 	ld	hl,#_bsx + 1
   0D11 36 00              3133 	ld	(hl), #0x00
                           3134 ;demo.c:397: bsy = PLY_PSGReg10;
   0D13 3Ar00s00           3135 	ld	a,(#_PLY_PSGReg10+0)
   0D16 21r84s31           3136 	ld	hl,#_bsy + 0
   0D19 77                 3137 	ld	(hl), a
   0D1A 21r85s31           3138 	ld	hl,#_bsy + 1
   0D1D 36 00              3139 	ld	(hl), #0x00
                           3140 ;demo.c:398: cmd.source_x = btab[bsx];
   0D1F 21r82s31           3141 	ld	hl,#_bsx + 0
   0D22 4E                 3142 	ld	c,(hl)
   0D23 21r83s31           3143 	ld	hl,#_bsx + 1
   0D26 46                 3144 	ld	b,(hl)
   0D27 CB 21              3145 	sla	c
   0D29 CB 10              3146 	rl	b
   0D2B 21r8As31           3147 	ld	hl,#_btab
   0D2E 09                 3148 	add	hl,bc
   0D2F 4E                 3149 	ld	c,(hl)
   0D30 23                 3150 	inc	hl
   0D31 46                 3151 	ld	b,(hl)
   0D32 21r64s31           3152 	ld	hl,#_cmd
   0D35 71                 3153 	ld	(hl),c
   0D36 23                 3154 	inc	hl
   0D37 70                 3155 	ld	(hl),b
                           3156 ;demo.c:399: cmd.source_y = 768+btab[bsy];
   0D38 01r66s31           3157 	ld	bc,#_cmd + 2
   0D3B 21r84s31           3158 	ld	hl,#_bsy + 0
   0D3E 5E                 3159 	ld	e,(hl)
   0D3F 21r85s31           3160 	ld	hl,#_bsy + 1
   0D42 56                 3161 	ld	d,(hl)
   0D43 CB 23              3162 	sla	e
   0D45 CB 12              3163 	rl	d
   0D47 21r8As31           3164 	ld	hl,#_btab
   0D4A 19                 3165 	add	hl,de
   0D4B 5E                 3166 	ld	e,(hl)
   0D4C 23                 3167 	inc	hl
   0D4D 56                 3168 	ld	d,(hl)
   0D4E 21 00 03           3169 	ld	hl,#0x0300
   0D51 19                 3170 	add	hl,de
   0D52 EB                 3171 	ex	de,hl
   0D53 69                 3172 	ld	l,c
   0D54 60                 3173 	ld	h,b
   0D55 73                 3174 	ld	(hl),e
   0D56 23                 3175 	inc	hl
   0D57 72                 3176 	ld	(hl),d
                           3177 ;demo.c:400: cmd.dest_x = btab[btx];
   0D58 01r68s31           3178 	ld	bc,#_cmd + 4
   0D5B 21r86s31           3179 	ld	hl,#_btx + 0
   0D5E 5E                 3180 	ld	e,(hl)
   0D5F 21r87s31           3181 	ld	hl,#_btx + 1
   0D62 56                 3182 	ld	d,(hl)
   0D63 CB 23              3183 	sla	e
   0D65 CB 12              3184 	rl	d
   0D67 21r8As31           3185 	ld	hl,#_btab
   0D6A 19                 3186 	add	hl,de
   0D6B 5E                 3187 	ld	e,(hl)
   0D6C 23                 3188 	inc	hl
   0D6D 56                 3189 	ld	d,(hl)
   0D6E 69                 3190 	ld	l,c
   0D6F 60                 3191 	ld	h,b
   0D70 73                 3192 	ld	(hl),e
   0D71 23                 3193 	inc	hl
   0D72 72                 3194 	ld	(hl),d
                           3195 ;demo.c:401: cmd.dest_y = 512+btab[bty];
   0D73 01r6As31           3196 	ld	bc,#_cmd + 6
   0D76 21r88s31           3197 	ld	hl,#_bty + 0
   0D79 5E                 3198 	ld	e,(hl)
   0D7A 21r89s31           3199 	ld	hl,#_bty + 1
   0D7D 56                 3200 	ld	d,(hl)
   0D7E CB 23              3201 	sla	e
   0D80 CB 12              3202 	rl	d
   0D82 21r8As31           3203 	ld	hl,#_btab
   0D85 19                 3204 	add	hl,de
   0D86 5E                 3205 	ld	e,(hl)
   0D87 23                 3206 	inc	hl
   0D88 56                 3207 	ld	d,(hl)
   0D89 21 00 02           3208 	ld	hl,#0x0200
   0D8C 19                 3209 	add	hl,de
   0D8D EB                 3210 	ex	de,hl
   0D8E 69                 3211 	ld	l,c
   0D8F 60                 3212 	ld	h,b
   0D90 73                 3213 	ld	(hl),e
   0D91 23                 3214 	inc	hl
   0D92 72                 3215 	ld	(hl),d
                           3216 ;demo.c:402: cmd.size_x = 16;
   0D93 21r6Cs31           3217 	ld	hl, #_cmd + 8
   0D96 36 10              3218 	ld	(hl),#0x10
   0D98 23                 3219 	inc	hl
   0D99 36 00              3220 	ld	(hl),#0x00
                           3221 ;demo.c:403: cmd.size_y = 16;
   0D9B 21r6Es31           3222 	ld	hl, #_cmd + 10
   0D9E 36 10              3223 	ld	(hl),#0x10
   0DA0 23                 3224 	inc	hl
   0DA1 36 00              3225 	ld	(hl),#0x00
                           3226 ;demo.c:404: cmd.data = 0;
                           3227 ;demo.c:405: cmd.argument = 0x00;
   0DA3 3E 00              3228 	ld	a,#0x00
   0DA5 32r70s31           3229 	ld	(#_cmd + 12),a
   0DA8 32r71s31           3230 	ld	(#_cmd + 13),a
                           3231 ;demo.c:406: cmd.command = 0xD0;
   0DAB 3E D0              3232 	ld	a,#0xD0
   0DAD 32r72s31           3233 	ld	(#_cmd + 14),a
                           3234 ;demo.c:407: vdp_copier(&cmd);
   0DB0 21r64s31           3235 	ld	hl,#_cmd
   0DB3 E5                 3236 	push	hl
   0DB4 CDr00s00           3237 	call	_vdp_copier
   0DB7 F1                 3238 	pop	af
                           3239 ;demo.c:395: for(btx=ys;btx<ye;btx++) {
   0DB8 FD 21r86s31        3240 	ld	iy,#_btx
   0DBC FD 34 00           3241 	inc	0 (iy)
   0DBF 20 07              3242 	jr	NZ,00150$
   0DC1 FD 21r86s31        3243 	ld	iy,#_btx
   0DC5 FD 34 01           3244 	inc	1 (iy)
   0DC8                    3245 00150$:
   0DC8 C3rEAs0C           3246 	jp	00114$
   0DCB                    3247 00120$:
                           3248 ;demo.c:394: for(bty=3;bty<11;bty++) {
   0DCB FD 21r88s31        3249 	ld	iy,#_bty
   0DCF FD 34 00           3250 	inc	0 (iy)
   0DD2 20 07              3251 	jr	NZ,00151$
   0DD4 FD 21r88s31        3252 	ld	iy,#_bty
   0DD8 FD 34 01           3253 	inc	1 (iy)
   0DDB                    3254 00151$:
   0DDB C3rC9s0C           3255 	jp	00118$
   0DDE                    3256 00121$:
                           3257 ;demo.c:411: flof++;
   0DDE FD 21rAAs31        3258 	ld	iy,#_flof
   0DE2 FD 34 00           3259 	inc	0 (iy)
   0DE5 20 07              3260 	jr	NZ,00152$
   0DE7 FD 21rAAs31        3261 	ld	iy,#_flof
   0DEB FD 34 01           3262 	inc	1 (iy)
   0DEE                    3263 00152$:
                           3264 ;demo.c:412: if (flof == 2) flof = 0;
   0DEE 3ArAAs31           3265 	ld	a,(#_flof+0)
   0DF1 D6 02              3266 	sub	a,#0x02
   0DF3 20 06              3267 	jr	NZ,00153$
   0DF5 3ArABs31           3268 	ld	a,(#_flof+1)
   0DF8 B7                 3269 	or	a,a
   0DF9 28 02              3270 	jr	Z,00154$
   0DFB                    3271 00153$:
   0DFB 18 0A              3272 	jr	00122$
   0DFD                    3273 00154$:
   0DFD 21rAAs31           3274 	ld	hl,#_flof + 0
   0E00 36 00              3275 	ld	(hl), #0x00
   0E02 21rABs31           3276 	ld	hl,#_flof + 1
   0E05 36 00              3277 	ld	(hl), #0x00
   0E07                    3278 00122$:
   0E07 DD F9              3279 	ld	sp,ix
   0E09 DD E1              3280 	pop	ix
   0E0B C9                 3281 	ret
   0E0C                    3282 _do_blocks_end::
                           3283 ;demo.c:420: void raster_effu() {
                           3284 ;	---------------------------------
                           3285 ; Function raster_effu
                           3286 ; ---------------------------------
   0E0C                    3287 _raster_effu_start::
   0E0C                    3288 _raster_effu:
                           3289 ;demo.c:421: vdp_register(VDP_VOFFSET,0);
   0E0C 21 17 00           3290 	ld	hl,#0x0017
   0E0F E5                 3291 	push	hl
   0E10 CDr00s00           3292 	call	_vdp_register
   0E13 F1                 3293 	pop	af
                           3294 ;demo.c:422: waitVB();
   0E14 76                 3295 		halt 
                           3296 ;demo.c:424: vdp_register(1,0x40); // disable vblank
   0E15 21 01 40           3297 	ld	hl,#0x4001
   0E18 E5                 3298 	push	hl
   0E19 CDr00s00           3299 	call	_vdp_register
                           3300 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E1C 3E 28              3301 	ld	a,#0x28
   0E1E 32rACs31           3302 	ld	(#_linenum + 0),a
   0E21 F1                 3303 	pop	af
   0E22 FD 21rACs31        3304 	ld	iy,#_linenum
   0E26 FD 36 01 00        3305 	ld	1 (iy),#0x00
   0E2A                    3306 00101$:
   0E2A 3ArACs31           3307 	ld	a,(#_linenum+0)
   0E2D D6 D4              3308 	sub	a,#0xD4
   0E2F 3ArADs31           3309 	ld	a,(#_linenum+1)
   0E32 DE 00              3310 	sbc	a,#0x00
   0E34 F2r65s0E           3311 	jp	P,00104$
                           3312 ;demo.c:427: vdp_register(19,linenum); // interrupt on line
   0E37 3ArACs31           3313 	ld	a,(#_linenum+0)
   0E3A F5                 3314 	push	af
   0E3B 33                 3315 	inc	sp
   0E3C 3E 13              3316 	ld	a,#0x13
   0E3E F5                 3317 	push	af
   0E3F 33                 3318 	inc	sp
   0E40 CDr00s00           3319 	call	_vdp_register
   0E43 F1                 3320 	pop	af
                           3321 ;demo.c:428: vdp_register(0,0x16); // mode SC5, IE1 interrupts on
   0E44 21 00 16           3322 	ld	hl,#0x1600
   0E47 E5                 3323 	push	hl
   0E48 CDr00s00           3324 	call	_vdp_register
   0E4B F1                 3325 	pop	af
                           3326 ;demo.c:430: waitVB();
   0E4C 76                 3327 		halt 
                           3328 ;demo.c:426: for (linenum = 40; linenum < 212; linenum+=4) {
   0E4D 21rACs31           3329 	ld	hl,#_linenum
   0E50 7E                 3330 	ld	a,(hl)
   0E51 C6 04              3331 	add	a,#0x04
   0E53 23                 3332 	inc	hl
   0E54 2B                 3333 	dec	hl
   0E55 C5                 3334 	push	bc
   0E56 4F                 3335 	ld	c, a
   0E57 23                 3336 	inc	hl
   0E58 7E                 3337 	ld	a, (hl)
   0E59 47                 3338 	ld	b, a
   0E5A 79                 3339 	ld	a, c
   0E5B 2B                 3340 	dec	hl
   0E5C 77                 3341 	ld	(hl), a
   0E5D 78                 3342 	ld	a, b
   0E5E C1                 3343 	pop	bc
   0E5F CE 00              3344 	adc	a,#0x00
   0E61 23                 3345 	inc	hl
   0E62 77                 3346 	ld	(hl),a
   0E63 18 C5              3347 	jr	00101$
   0E65                    3348 00104$:
                           3349 ;demo.c:433: vdp_register(VDP_VOFFSET,0);
   0E65 21 17 00           3350 	ld	hl,#0x0017
   0E68 E5                 3351 	push	hl
   0E69 CDr00s00           3352 	call	_vdp_register
   0E6C F1                 3353 	pop	af
                           3354 ;demo.c:447: vdp_register(0,0x6); // mode SC5, IE1 interrupts off
   0E6D 21 00 06           3355 	ld	hl,#0x0600
   0E70 E5                 3356 	push	hl
   0E71 CDr00s00           3357 	call	_vdp_register
   0E74 F1                 3358 	pop	af
                           3359 ;demo.c:448: vdp_register(1,0x60); // enable vblank
   0E75 21 01 60           3360 	ld	hl,#0x6001
   0E78 E5                 3361 	push	hl
   0E79 CDr00s00           3362 	call	_vdp_register
   0E7C F1                 3363 	pop	af
   0E7D C9                 3364 	ret
   0E7E                    3365 _raster_effu_end::
                           3366 ;demo.c:479: void do_letter(char cc) {
                           3367 ;	---------------------------------
                           3368 ; Function do_letter
                           3369 ; ---------------------------------
   0E7E                    3370 _do_letter_start::
   0E7E                    3371 _do_letter:
   0E7E DD E5              3372 	push	ix
   0E80 DD 21 00 00        3373 	ld	ix,#0
   0E84 DD 39              3374 	add	ix,sp
   0E86 F5                 3375 	push	af
                           3376 ;demo.c:480: int cidx = cc - 65;
   0E87 DD 4E 04           3377 	ld	c,4 (ix)
   0E8A DD 7E 04           3378 	ld	a,4 (ix)
   0E8D 17                 3379 	rla	
   0E8E 9F                 3380 	sbc	a,a
   0E8F 47                 3381 	ld	b,a
   0E90 79                 3382 	ld	a,c
   0E91 C6 BF              3383 	add	a,#0xBF
   0E93 DD 77 FE           3384 	ld	-2 (ix),a
   0E96 78                 3385 	ld	a,b
   0E97 CE FF              3386 	adc	a,#0xFF
   0E99 DD 77 FF           3387 	ld	-1 (ix),a
                           3388 ;demo.c:481: cmd.source_x = 127+font_x[cidx];
   0E9C 3Er3C              3389 	ld	a,#<_font_x
   0E9E DD 86 FE           3390 	add	a,-2 (ix)
   0EA1 5F                 3391 	ld	e,a
   0EA2 3Es0F              3392 	ld	a,#>_font_x
   0EA4 DD 8E FF           3393 	adc	a,-1 (ix)
   0EA7 57                 3394 	ld	d,a
   0EA8 1A                 3395 	ld	a,(de)
   0EA9 5F                 3396 	ld	e,a
   0EAA 16 00              3397 	ld	d,#0x00
   0EAC 21 7F 00           3398 	ld	hl,#0x007F
   0EAF 19                 3399 	add	hl,de
   0EB0 EB                 3400 	ex	de,hl
   0EB1 21r64s31           3401 	ld	hl,#_cmd
   0EB4 73                 3402 	ld	(hl),e
   0EB5 23                 3403 	inc	hl
   0EB6 72                 3404 	ld	(hl),d
                           3405 ;demo.c:482: cmd.source_y = 512+font_y[cidx];
   0EB7 11r66s31           3406 	ld	de,#_cmd + 2
   0EBA 3Er7C              3407 	ld	a,#<_font_y
   0EBC DD 86 FE           3408 	add	a,-2 (ix)
   0EBF 4F                 3409 	ld	c,a
   0EC0 3Es0F              3410 	ld	a,#>_font_y
   0EC2 DD 8E FF           3411 	adc	a,-1 (ix)
   0EC5 47                 3412 	ld	b,a
   0EC6 0A                 3413 	ld	a,(bc)
   0EC7 4F                 3414 	ld	c,a
   0EC8 06 00              3415 	ld	b,#0x00
   0ECA 21 00 02           3416 	ld	hl,#0x0200
   0ECD 09                 3417 	add	hl,bc
   0ECE 4D                 3418 	ld	c,l
   0ECF 44                 3419 	ld	b,h
   0ED0 EB                 3420 	ex	de,hl
   0ED1 71                 3421 	ld	(hl),c
   0ED2 23                 3422 	inc	hl
   0ED3 70                 3423 	ld	(hl),b
                           3424 ;demo.c:483: cmd.dest_x = lx;
   0ED4 01r68s31           3425 	ld	bc,#_cmd + 4
   0ED7 21rAEs31           3426 	ld	hl,#_lx + 0
   0EDA 5E                 3427 	ld	e,(hl)
   0EDB 16 00              3428 	ld	d,#0x00
   0EDD 69                 3429 	ld	l,c
   0EDE 60                 3430 	ld	h,b
   0EDF 73                 3431 	ld	(hl),e
   0EE0 23                 3432 	inc	hl
   0EE1 72                 3433 	ld	(hl),d
                           3434 ;demo.c:484: cmd.dest_y = ly;
   0EE2 01r6As31           3435 	ld	bc,#_cmd + 6
   0EE5 21rAFs31           3436 	ld	hl,#_ly + 0
   0EE8 5E                 3437 	ld	e,(hl)
   0EE9 16 00              3438 	ld	d,#0x00
   0EEB 69                 3439 	ld	l,c
   0EEC 60                 3440 	ld	h,b
   0EED 73                 3441 	ld	(hl),e
   0EEE 23                 3442 	inc	hl
   0EEF 72                 3443 	ld	(hl),d
                           3444 ;demo.c:485: cmd.size_x = font_w[cidx];
   0EF0 01r6Cs31           3445 	ld	bc,#_cmd + 8
   0EF3 3ErBC              3446 	ld	a,#<_font_w
   0EF5 DD 86 FE           3447 	add	a,-2 (ix)
   0EF8 5F                 3448 	ld	e,a
   0EF9 3Es0F              3449 	ld	a,#>_font_w
   0EFB DD 8E FF           3450 	adc	a,-1 (ix)
   0EFE 57                 3451 	ld	d,a
   0EFF 1A                 3452 	ld	a,(de)
   0F00 5F                 3453 	ld	e,a
   0F01 16 00              3454 	ld	d,#0x00
   0F03 69                 3455 	ld	l,c
   0F04 60                 3456 	ld	h,b
   0F05 73                 3457 	ld	(hl),e
   0F06 23                 3458 	inc	hl
   0F07 72                 3459 	ld	(hl),d
                           3460 ;demo.c:486: cmd.size_y = 8;
   0F08 21r6Es31           3461 	ld	hl, #_cmd + 10
   0F0B 36 08              3462 	ld	(hl),#0x08
   0F0D 23                 3463 	inc	hl
   0F0E 36 00              3464 	ld	(hl),#0x00
                           3465 ;demo.c:487: cmd.argument = 0x00;
   0F10 3E 00              3466 	ld	a,#0x00
   0F12 32r71s31           3467 	ld	(#_cmd + 13),a
                           3468 ;demo.c:488: cmd.command = 0x90; // logical vram to vram
   0F15 3E 90              3469 	ld	a,#0x90
   0F17 32r72s31           3470 	ld	(#_cmd + 14),a
                           3471 ;demo.c:489: vdp_copier(&cmd);
   0F1A 21r64s31           3472 	ld	hl,#_cmd
   0F1D E5                 3473 	push	hl
   0F1E CDr00s00           3474 	call	_vdp_copier
   0F21 F1                 3475 	pop	af
                           3476 ;demo.c:490: lx+=font_w[cidx]-1;
   0F22 3ErBC              3477 	ld	a,#<_font_w
   0F24 DD 86 FE           3478 	add	a,-2 (ix)
   0F27 4F                 3479 	ld	c,a
   0F28 3Es0F              3480 	ld	a,#>_font_w
   0F2A DD 8E FF           3481 	adc	a,-1 (ix)
   0F2D 47                 3482 	ld	b,a
   0F2E 0A                 3483 	ld	a,(bc)
   0F2F 4F                 3484 	ld	c,a
   0F30 0D                 3485 	dec	c
   0F31 21rAEs31           3486 	ld	hl,#_lx
   0F34 7E                 3487 	ld	a,(hl)
   0F35 81                 3488 	add	a,c
   0F36 77                 3489 	ld	(hl),a
   0F37 DD F9              3490 	ld	sp,ix
   0F39 DD E1              3491 	pop	ix
   0F3B C9                 3492 	ret
   0F3C                    3493 _do_letter_end::
   0F3C                    3494 _font_x:
   0F3C 01                 3495 	.db #0x01
   0F3D 09                 3496 	.db #0x09
   0F3E 11                 3497 	.db #0x11
   0F3F 19                 3498 	.db #0x19
   0F40 21                 3499 	.db #0x21
   0F41 29                 3500 	.db #0x29
   0F42 31                 3501 	.db #0x31
   0F43 39                 3502 	.db #0x39
   0F44 41                 3503 	.db #0x41
   0F45 46                 3504 	.db #0x46
   0F46 4E                 3505 	.db #0x4E
   0F47 56                 3506 	.db #0x56
   0F48 5E                 3507 	.db #0x5E
   0F49 01                 3508 	.db #0x01
   0F4A 0A                 3509 	.db #0x0A
   0F4B 12                 3510 	.db #0x12
   0F4C 1A                 3511 	.db #0x1A
   0F4D 23                 3512 	.db #0x23
   0F4E 2B                 3513 	.db #0x2B
   0F4F 33                 3514 	.db #0x33
   0F50 3C                 3515 	.db #0x3C
   0F51 44                 3516 	.db #0x44
   0F52 4C                 3517 	.db #0x4C
   0F53 56                 3518 	.db #0x56
   0F54 5E                 3519 	.db #0x5E
   0F55 67                 3520 	.db #0x67
   0F56 00                 3521 	.db #0x00
   0F57 00                 3522 	.db #0x00
   0F58 00                 3523 	.db #0x00
   0F59 00                 3524 	.db #0x00
   0F5A 00                 3525 	.db #0x00
   0F5B 00                 3526 	.db #0x00
   0F5C 01                 3527 	.db #0x01
   0F5D 09                 3528 	.db #0x09
   0F5E 11                 3529 	.db #0x11
   0F5F 18                 3530 	.db #0x18
   0F60 20                 3531 	.db #0x20
   0F61 28                 3532 	.db #0x28
   0F62 2F                 3533 	.db #0x2F
   0F63 37                 3534 	.db #0x37
   0F64 3F                 3535 	.db #0x3F
   0F65 45                 3536 	.db #0x45
   0F66 4C                 3537 	.db #0x4C
   0F67 54                 3538 	.db #0x54
   0F68 5A                 3539 	.db #0x5A
   0F69 64                 3540 	.db #0x64
   0F6A 01                 3541 	.db #0x01
   0F6B 09                 3542 	.db #0x09
   0F6C 11                 3543 	.db #0x11
   0F6D 19                 3544 	.db #0x19
   0F6E 21                 3545 	.db #0x21
   0F6F 29                 3546 	.db #0x29
   0F70 30                 3547 	.db #0x30
   0F71 38                 3548 	.db #0x38
   0F72 40                 3549 	.db #0x40
   0F73 4A                 3550 	.db #0x4A
   0F74 52                 3551 	.db #0x52
   0F75 5A                 3552 	.db #0x5A
   0F76 00                 3553 	.db 0x00
   0F77 00                 3554 	.db 0x00
   0F78 00                 3555 	.db 0x00
   0F79 00                 3556 	.db 0x00
   0F7A 00                 3557 	.db 0x00
   0F7B 00                 3558 	.db 0x00
   0F7C                    3559 _font_y:
   0F7C 1C                 3560 	.db #0x1C
   0F7D 1C                 3561 	.db #0x1C
   0F7E 1C                 3562 	.db #0x1C
   0F7F 1C                 3563 	.db #0x1C
   0F80 1C                 3564 	.db #0x1C
   0F81 1C                 3565 	.db #0x1C
   0F82 1C                 3566 	.db #0x1C
   0F83 1C                 3567 	.db #0x1C
   0F84 1C                 3568 	.db #0x1C
   0F85 1C                 3569 	.db #0x1C
   0F86 1C                 3570 	.db #0x1C
   0F87 1C                 3571 	.db #0x1C
   0F88 1C                 3572 	.db #0x1C
   0F89 25                 3573 	.db #0x25
   0F8A 25                 3574 	.db #0x25
   0F8B 25                 3575 	.db #0x25
   0F8C 25                 3576 	.db #0x25
   0F8D 25                 3577 	.db #0x25
   0F8E 25                 3578 	.db #0x25
   0F8F 25                 3579 	.db #0x25
   0F90 25                 3580 	.db #0x25
   0F91 25                 3581 	.db #0x25
   0F92 25                 3582 	.db #0x25
   0F93 25                 3583 	.db #0x25
   0F94 25                 3584 	.db #0x25
   0F95 25                 3585 	.db #0x25
   0F96 00                 3586 	.db #0x00
   0F97 00                 3587 	.db #0x00
   0F98 00                 3588 	.db #0x00
   0F99 00                 3589 	.db #0x00
   0F9A 00                 3590 	.db #0x00
   0F9B 00                 3591 	.db #0x00
   0F9C 37                 3592 	.db #0x37
   0F9D 37                 3593 	.db #0x37
   0F9E 37                 3594 	.db #0x37
   0F9F 37                 3595 	.db #0x37
   0FA0 37                 3596 	.db #0x37
   0FA1 37                 3597 	.db #0x37
   0FA2 37                 3598 	.db #0x37
   0FA3 37                 3599 	.db #0x37
   0FA4 37                 3600 	.db #0x37
   0FA5 37                 3601 	.db #0x37
   0FA6 37                 3602 	.db #0x37
   0FA7 37                 3603 	.db #0x37
   0FA8 37                 3604 	.db #0x37
   0FA9 37                 3605 	.db #0x37
   0FAA 40                 3606 	.db #0x40
   0FAB 40                 3607 	.db #0x40
   0FAC 40                 3608 	.db #0x40
   0FAD 40                 3609 	.db #0x40
   0FAE 40                 3610 	.db #0x40
   0FAF 40                 3611 	.db #0x40
   0FB0 40                 3612 	.db #0x40
   0FB1 40                 3613 	.db #0x40
   0FB2 40                 3614 	.db #0x40
   0FB3 40                 3615 	.db #0x40
   0FB4 40                 3616 	.db #0x40
   0FB5 40                 3617 	.db #0x40
   0FB6 00                 3618 	.db 0x00
   0FB7 00                 3619 	.db 0x00
   0FB8 00                 3620 	.db 0x00
   0FB9 00                 3621 	.db 0x00
   0FBA 00                 3622 	.db 0x00
   0FBB 00                 3623 	.db 0x00
   0FBC                    3624 _font_w:
   0FBC 07                 3625 	.db #0x07
   0FBD 07                 3626 	.db #0x07
   0FBE 07                 3627 	.db #0x07
   0FBF 07                 3628 	.db #0x07
   0FC0 07                 3629 	.db #0x07
   0FC1 07                 3630 	.db #0x07
   0FC2 07                 3631 	.db #0x07
   0FC3 07                 3632 	.db #0x07
   0FC4 04                 3633 	.db #0x04
   0FC5 07                 3634 	.db #0x07
   0FC6 07                 3635 	.db #0x07
   0FC7 07                 3636 	.db #0x07
   0FC8 09                 3637 	.db #0x09
   0FC9 08                 3638 	.db #0x08
   0FCA 07                 3639 	.db #0x07
   0FCB 07                 3640 	.db #0x07
   0FCC 08                 3641 	.db #0x08
   0FCD 07                 3642 	.db #0x07
   0FCE 07                 3643 	.db #0x07
   0FCF 08                 3644 	.db #0x08
   0FD0 07                 3645 	.db #0x07
   0FD1 07                 3646 	.db #0x07
   0FD2 09                 3647 	.db #0x09
   0FD3 07                 3648 	.db #0x07
   0FD4 08                 3649 	.db #0x08
   0FD5 07                 3650 	.db #0x07
   0FD6 00                 3651 	.db #0x00
   0FD7 00                 3652 	.db #0x00
   0FD8 00                 3653 	.db #0x00
   0FD9 00                 3654 	.db #0x00
   0FDA 00                 3655 	.db #0x00
   0FDB 00                 3656 	.db #0x00
   0FDC 07                 3657 	.db #0x07
   0FDD 07                 3658 	.db #0x07
   0FDE 06                 3659 	.db #0x06
   0FDF 07                 3660 	.db #0x07
   0FE0 07                 3661 	.db #0x07
   0FE1 07                 3662 	.db #0x07
   0FE2 07                 3663 	.db #0x07
   0FE3 07                 3664 	.db #0x07
   0FE4 05                 3665 	.db #0x05
   0FE5 06                 3666 	.db #0x06
   0FE6 07                 3667 	.db #0x07
   0FE7 05                 3668 	.db #0x05
   0FE8 09                 3669 	.db #0x09
   0FE9 07                 3670 	.db #0x07
   0FEA 07                 3671 	.db #0x07
   0FEB 07                 3672 	.db #0x07
   0FEC 07                 3673 	.db #0x07
   0FED 07                 3674 	.db #0x07
   0FEE 07                 3675 	.db #0x07
   0FEF 06                 3676 	.db #0x06
   0FF0 07                 3677 	.db #0x07
   0FF1 07                 3678 	.db #0x07
   0FF2 09                 3679 	.db #0x09
   0FF3 07                 3680 	.db #0x07
   0FF4 07                 3681 	.db #0x07
   0FF5 07                 3682 	.db #0x07
   0FF6 00                 3683 	.db 0x00
   0FF7 00                 3684 	.db 0x00
   0FF8 00                 3685 	.db 0x00
   0FF9 00                 3686 	.db 0x00
   0FFA 00                 3687 	.db 0x00
   0FFB 00                 3688 	.db 0x00
                           3689 ;demo.c:494: void do_letter_tall(char cc) {
                           3690 ;	---------------------------------
                           3691 ; Function do_letter_tall
                           3692 ; ---------------------------------
   0FFC                    3693 _do_letter_tall_start::
   0FFC                    3694 _do_letter_tall:
   0FFC DD E5              3695 	push	ix
   0FFE DD 21 00 00        3696 	ld	ix,#0
   1002 DD 39              3697 	add	ix,sp
   1004 F5                 3698 	push	af
                           3699 ;demo.c:495: int cidx = cc - 65;
   1005 DD 4E 04           3700 	ld	c,4 (ix)
   1008 DD 7E 04           3701 	ld	a,4 (ix)
   100B 17                 3702 	rla	
   100C 9F                 3703 	sbc	a,a
   100D 47                 3704 	ld	b,a
   100E 79                 3705 	ld	a,c
   100F C6 BF              3706 	add	a,#0xBF
   1011 DD 77 FE           3707 	ld	-2 (ix),a
   1014 78                 3708 	ld	a,b
   1015 CE FF              3709 	adc	a,#0xFF
   1017 DD 77 FF           3710 	ld	-1 (ix),a
                           3711 ;demo.c:496: cmd.source_x = 127+font_x[cidx];
   101A 3Er3C              3712 	ld	a,#<_font_x
   101C DD 86 FE           3713 	add	a,-2 (ix)
   101F 5F                 3714 	ld	e,a
   1020 3Es0F              3715 	ld	a,#>_font_x
   1022 DD 8E FF           3716 	adc	a,-1 (ix)
   1025 57                 3717 	ld	d,a
   1026 1A                 3718 	ld	a,(de)
   1027 5F                 3719 	ld	e,a
   1028 16 00              3720 	ld	d,#0x00
   102A 21 7F 00           3721 	ld	hl,#0x007F
   102D 19                 3722 	add	hl,de
   102E EB                 3723 	ex	de,hl
   102F 21r64s31           3724 	ld	hl,#_cmd
   1032 73                 3725 	ld	(hl),e
   1033 23                 3726 	inc	hl
   1034 72                 3727 	ld	(hl),d
                           3728 ;demo.c:497: cmd.source_y = 512+font_y[cidx]-1;
   1035 11r66s31           3729 	ld	de,#_cmd + 2
   1038 3Er7C              3730 	ld	a,#<_font_y
   103A DD 86 FE           3731 	add	a,-2 (ix)
   103D 4F                 3732 	ld	c,a
   103E 3Es0F              3733 	ld	a,#>_font_y
   1040 DD 8E FF           3734 	adc	a,-1 (ix)
   1043 47                 3735 	ld	b,a
   1044 0A                 3736 	ld	a,(bc)
   1045 4F                 3737 	ld	c,a
   1046 06 00              3738 	ld	b,#0x00
   1048 21 FF 01           3739 	ld	hl,#0x01FF
   104B 09                 3740 	add	hl,bc
   104C 4D                 3741 	ld	c,l
   104D 44                 3742 	ld	b,h
   104E EB                 3743 	ex	de,hl
   104F 71                 3744 	ld	(hl),c
   1050 23                 3745 	inc	hl
   1051 70                 3746 	ld	(hl),b
                           3747 ;demo.c:498: cmd.dest_x = lx;
   1052 01r68s31           3748 	ld	bc,#_cmd + 4
   1055 21rAEs31           3749 	ld	hl,#_lx + 0
   1058 5E                 3750 	ld	e,(hl)
   1059 16 00              3751 	ld	d,#0x00
   105B 69                 3752 	ld	l,c
   105C 60                 3753 	ld	h,b
   105D 73                 3754 	ld	(hl),e
   105E 23                 3755 	inc	hl
   105F 72                 3756 	ld	(hl),d
                           3757 ;demo.c:499: cmd.dest_y = ly;
   1060 01r6As31           3758 	ld	bc,#_cmd + 6
   1063 21rAFs31           3759 	ld	hl,#_ly + 0
   1066 5E                 3760 	ld	e,(hl)
   1067 16 00              3761 	ld	d,#0x00
   1069 69                 3762 	ld	l,c
   106A 60                 3763 	ld	h,b
   106B 73                 3764 	ld	(hl),e
   106C 23                 3765 	inc	hl
   106D 72                 3766 	ld	(hl),d
                           3767 ;demo.c:500: cmd.size_x = font_w[cidx];
   106E 01r6Cs31           3768 	ld	bc,#_cmd + 8
   1071 3ErBC              3769 	ld	a,#<_font_w
   1073 DD 86 FE           3770 	add	a,-2 (ix)
   1076 5F                 3771 	ld	e,a
   1077 3Es0F              3772 	ld	a,#>_font_w
   1079 DD 8E FF           3773 	adc	a,-1 (ix)
   107C 57                 3774 	ld	d,a
   107D 1A                 3775 	ld	a,(de)
   107E 5F                 3776 	ld	e,a
   107F 16 00              3777 	ld	d,#0x00
   1081 69                 3778 	ld	l,c
   1082 60                 3779 	ld	h,b
   1083 73                 3780 	ld	(hl),e
   1084 23                 3781 	inc	hl
   1085 72                 3782 	ld	(hl),d
                           3783 ;demo.c:501: cmd.size_y = 10;
   1086 21r6Es31           3784 	ld	hl, #_cmd + 10
   1089 36 0A              3785 	ld	(hl),#0x0A
   108B 23                 3786 	inc	hl
   108C 36 00              3787 	ld	(hl),#0x00
                           3788 ;demo.c:502: cmd.argument = 0x00;
   108E 3E 00              3789 	ld	a,#0x00
   1090 32r71s31           3790 	ld	(#_cmd + 13),a
                           3791 ;demo.c:503: cmd.command = 0x90; // logical vram to vram
   1093 3E 90              3792 	ld	a,#0x90
   1095 32r72s31           3793 	ld	(#_cmd + 14),a
                           3794 ;demo.c:504: vdp_copier(&cmd);
   1098 21r64s31           3795 	ld	hl,#_cmd
   109B E5                 3796 	push	hl
   109C CDr00s00           3797 	call	_vdp_copier
   109F F1                 3798 	pop	af
                           3799 ;demo.c:505: lx+=font_w[cidx]-1;
   10A0 3ErBC              3800 	ld	a,#<_font_w
   10A2 DD 86 FE           3801 	add	a,-2 (ix)
   10A5 4F                 3802 	ld	c,a
   10A6 3Es0F              3803 	ld	a,#>_font_w
   10A8 DD 8E FF           3804 	adc	a,-1 (ix)
   10AB 47                 3805 	ld	b,a
   10AC 0A                 3806 	ld	a,(bc)
   10AD 4F                 3807 	ld	c,a
   10AE 0D                 3808 	dec	c
   10AF 21rAEs31           3809 	ld	hl,#_lx
   10B2 7E                 3810 	ld	a,(hl)
   10B3 81                 3811 	add	a,c
   10B4 77                 3812 	ld	(hl),a
   10B5 DD F9              3813 	ld	sp,ix
   10B7 DD E1              3814 	pop	ix
   10B9 C9                 3815 	ret
   10BA                    3816 _do_letter_tall_end::
                           3817 ;demo.c:508: void drawstr(char* str, uint8_t x, uint8_t y) {
                           3818 ;	---------------------------------
                           3819 ; Function drawstr
                           3820 ; ---------------------------------
   10BA                    3821 _drawstr_start::
   10BA                    3822 _drawstr:
   10BA DD E5              3823 	push	ix
   10BC DD 21 00 00        3824 	ld	ix,#0
   10C0 DD 39              3825 	add	ix,sp
                           3826 ;demo.c:509: char* c = str;
   10C2 DD 4E 04           3827 	ld	c,4 (ix)
   10C5 DD 46 05           3828 	ld	b,5 (ix)
                           3829 ;demo.c:510: lx = x;
   10C8 DD 5E 06           3830 	ld	e,6 (ix)
   10CB 21rAEs31           3831 	ld	hl,#_lx + 0
   10CE 73                 3832 	ld	(hl), e
                           3833 ;demo.c:511: ly = y;
   10CF DD 7E 07           3834 	ld	a,7 (ix)
   10D2 21rAFs31           3835 	ld	hl,#_ly + 0
   10D5 77                 3836 	ld	(hl), a
                           3837 ;demo.c:512: while (*c) {
   10D6                    3838 00107$:
   10D6 0A                 3839 	ld	a,(bc)
   10D7 57                 3840 	ld	d,a
   10D8 B7                 3841 	or	a,a
   10D9 28 42              3842 	jr	Z,00110$
                           3843 ;demo.c:513: char ltr = *c++; 
   10DB 03                 3844 	inc	bc
                           3845 ;demo.c:514: if (ltr == ' ') lx+=4;
   10DC 7A                 3846 	ld	a,d
   10DD D6 20              3847 	sub	a,#0x20
   10DF 20 1E              3848 	jr	NZ,00105$
   10E1 FD 21rAEs31        3849 	ld	iy,#_lx
   10E5 FD 34 00           3850 	inc	0 (iy)
   10E8 FD 21rAEs31        3851 	ld	iy,#_lx
   10EC FD 34 00           3852 	inc	0 (iy)
   10EF FD 21rAEs31        3853 	ld	iy,#_lx
   10F3 FD 34 00           3854 	inc	0 (iy)
   10F6 FD 21rAEs31        3855 	ld	iy,#_lx
   10FA FD 34 00           3856 	inc	0 (iy)
   10FD 18 D7              3857 	jr	00107$
   10FF                    3858 00105$:
                           3859 ;demo.c:515: else if (ltr == '_') { ly+=9; lx = x; }
   10FF 7A                 3860 	ld	a,d
   1100 D6 5F              3861 	sub	a,#0x5F
   1102 20 0D              3862 	jr	NZ,00102$
   1104 21rAFs31           3863 	ld	hl,#_ly
   1107 7E                 3864 	ld	a,(hl)
   1108 C6 09              3865 	add	a,#0x09
   110A 77                 3866 	ld	(hl),a
   110B 21rAEs31           3867 	ld	hl,#_lx + 0
   110E 73                 3868 	ld	(hl), e
   110F 18 C5              3869 	jr	00107$
   1111                    3870 00102$:
                           3871 ;demo.c:516: else do_letter(ltr);
   1111 C5                 3872 	push	bc
   1112 D5                 3873 	push	de
   1113 D5                 3874 	push	de
   1114 33                 3875 	inc	sp
   1115 CDr7Es0E           3876 	call	_do_letter
   1118 33                 3877 	inc	sp
   1119 D1                 3878 	pop	de
   111A C1                 3879 	pop	bc
   111B 18 B9              3880 	jr	00107$
   111D                    3881 00110$:
   111D DD E1              3882 	pop	ix
   111F C9                 3883 	ret
   1120                    3884 _drawstr_end::
                           3885 ;demo.c:520: void drawsine(char* str, uint8_t x, uint8_t y) {
                           3886 ;	---------------------------------
                           3887 ; Function drawsine
                           3888 ; ---------------------------------
   1120                    3889 _drawsine_start::
   1120                    3890 _drawsine:
   1120 DD E5              3891 	push	ix
   1122 DD 21 00 00        3892 	ld	ix,#0
   1126 DD 39              3893 	add	ix,sp
   1128 3B                 3894 	dec	sp
                           3895 ;demo.c:521: char* c = str;
   1129 DD 4E 04           3896 	ld	c,4 (ix)
   112C DD 46 05           3897 	ld	b,5 (ix)
                           3898 ;demo.c:522: lx = x;
   112F DD 7E 06           3899 	ld	a,6 (ix)
   1132 21rAEs31           3900 	ld	hl,#_lx + 0
   1135 77                 3901 	ld	(hl), a
                           3902 ;demo.c:524: while (*c) {
   1136                    3903 00104$:
   1136 0A                 3904 	ld	a,(bc)
   1137 5F                 3905 	ld	e,a
   1138 B7                 3906 	or	a,a
   1139 CArADs11           3907 	jp	Z,00107$
                           3908 ;demo.c:525: char ltr = *c++; 
   113C 03                 3909 	inc	bc
   113D DD 73 FF           3910 	ld	-1 (ix),e
                           3911 ;demo.c:526: ly = y+(sintabx[(lx+vbicount>>1) & 255]>>4);
   1140 21rAEs31           3912 	ld	hl,#_lx + 0
   1143 5E                 3913 	ld	e,(hl)
   1144 16 00              3914 	ld	d,#0x00
   1146 21r60s31           3915 	ld	hl,#_vbicount
   1149 7B                 3916 	ld	a,e
   114A 86                 3917 	add	a,(hl)
   114B 5F                 3918 	ld	e,a
   114C 7A                 3919 	ld	a,d
   114D 23                 3920 	inc	hl
   114E 8E                 3921 	adc	a,(hl)
   114F 57                 3922 	ld	d,a
   1150 CB 2A              3923 	sra	d
   1152 CB 1B              3924 	rr	e
   1154 16 00              3925 	ld	d,#0x00
   1156 CB 23              3926 	sla	e
   1158 CB 12              3927 	rl	d
   115A 21r2Cs00           3928 	ld	hl,#_sintabx
   115D 19                 3929 	add	hl,de
   115E 5E                 3930 	ld	e,(hl)
   115F 23                 3931 	inc	hl
   1160 56                 3932 	ld	d,(hl)
   1161 CB 3A              3933 	srl	d
   1163 CB 1B              3934 	rr	e
   1165 CB 3A              3935 	srl	d
   1167 CB 1B              3936 	rr	e
   1169 CB 3A              3937 	srl	d
   116B CB 1B              3938 	rr	e
   116D CB 3A              3939 	srl	d
   116F CB 1B              3940 	rr	e
   1171 21rAFs31           3941 	ld	hl,#_ly
   1174 DD 7E 07           3942 	ld	a,7 (ix)
   1177 83                 3943 	add	a,e
   1178 77                 3944 	ld	(hl),a
                           3945 ;demo.c:527: if (ltr == ' ') lx+=4;
   1179 DD 7E FF           3946 	ld	a,-1 (ix)
   117C D6 20              3947 	sub	a,#0x20
   117E 20 1F              3948 	jr	NZ,00102$
   1180 FD 21rAEs31        3949 	ld	iy,#_lx
   1184 FD 34 00           3950 	inc	0 (iy)
   1187 FD 21rAEs31        3951 	ld	iy,#_lx
   118B FD 34 00           3952 	inc	0 (iy)
   118E FD 21rAEs31        3953 	ld	iy,#_lx
   1192 FD 34 00           3954 	inc	0 (iy)
   1195 FD 21rAEs31        3955 	ld	iy,#_lx
   1199 FD 34 00           3956 	inc	0 (iy)
   119C C3r36s11           3957 	jp	00104$
   119F                    3958 00102$:
                           3959 ;demo.c:528: else do_letter_tall(ltr);
   119F C5                 3960 	push	bc
   11A0 DD 7E FF           3961 	ld	a,-1 (ix)
   11A3 F5                 3962 	push	af
   11A4 33                 3963 	inc	sp
   11A5 CDrFCs0F           3964 	call	_do_letter_tall
   11A8 33                 3965 	inc	sp
   11A9 C1                 3966 	pop	bc
   11AA C3r36s11           3967 	jp	00104$
   11AD                    3968 00107$:
   11AD DD F9              3969 	ld	sp,ix
   11AF DD E1              3970 	pop	ix
   11B1 C9                 3971 	ret
   11B2                    3972 _drawsine_end::
                           3973 ;demo.c:532: void font() {
                           3974 ;	---------------------------------
                           3975 ; Function font
                           3976 ; ---------------------------------
   11B2                    3977 _font_start::
   11B2                    3978 _font:
                           3979 ;demo.c:534: drawstr("DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISION__    OLDSKOOL_     DEMO_      COMPO",74,60);
   11B2 21 4A 3C           3980 	ld	hl,#0x3C4A
   11B5 E5                 3981 	push	hl
   11B6 21rC0s11           3982 	ld	hl,#__str_8
   11B9 E5                 3983 	push	hl
   11BA CDrBAs10           3984 	call	_drawstr
   11BD F1                 3985 	pop	af
   11BE F1                 3986 	pop	af
   11BF C9                 3987 	ret
   11C0                    3988 _font_end::
   11C0                    3989 __str_8:
   11C0 44 49 47 49 54 41  3990 	.ascii "DIGITAL SOUNDS SYSTEM__ IN THE HOUSE__  ON MSX__   AT REVISI"
        4C 20 53 4F 55 4E
        44 53 20 53 59 53
        54 45 4D 5F 5F 20
        49 4E 20 54 48 45
        20 48 4F 55 53 45
        5F 5F 20 20 4F 4E
        20 4D 53 58 5F 5F
        20 20 20 41 54 20
        52 45 56 49 53 49
   11FC 4F 4E 5F 5F 20 20  3991 	.ascii "ON__    OLDSKOOL_     DEMO_      COMPO"
        20 20 4F 4C 44 53
        4B 4F 4F 4C 5F 20
        20 20 20 20 44 45
        4D 4F 5F 20 20 20
        20 20 20 43 4F 4D
        50 4F
   1222 00                 3992 	.db 0x00
                           3993 ;demo.c:543: void twister() {
                           3994 ;	---------------------------------
                           3995 ; Function twister
                           3996 ; ---------------------------------
   1223                    3997 _twister_start::
   1223                    3998 _twister:
   1223 DD E5              3999 	push	ix
   1225 DD 21 00 00        4000 	ld	ix,#0
   1229 DD 39              4001 	add	ix,sp
   122B F5                 4002 	push	af
                           4003 ;demo.c:547: if (twinited == 0) {
   122C 3ArB2s31           4004 	ld	a,(#_twinited+0)
   122F FD 21rB2s31        4005 	ld	iy,#_twinited
   1233 FD B6 01           4006 	or	a,1 (iy)
   1236 C2rA6s12           4007 	jp	NZ,00102$
                           4008 ;demo.c:548: cmd.size_x = 256;
   1239 21r6Cs31           4009 	ld	hl, #_cmd + 8
   123C 36 00              4010 	ld	(hl),#0x00
   123E 23                 4011 	inc	hl
   123F 36 01              4012 	ld	(hl),#0x01
                           4013 ;demo.c:549: cmd.size_y = 1;
   1241 21r6Es31           4014 	ld	hl, #_cmd + 10
   1244 36 01              4015 	ld	(hl),#0x01
   1246 23                 4016 	inc	hl
   1247 36 00              4017 	ld	(hl),#0x00
                           4018 ;demo.c:550: cmd.data = 0;
                           4019 ;demo.c:551: cmd.argument = 0x00; // from 70xY to left
   1249 3E 00              4020 	ld	a,#0x00
   124B 32r70s31           4021 	ld	(#_cmd + 12),a
   124E 32r71s31           4022 	ld	(#_cmd + 13),a
                           4023 ;demo.c:552: cmd.command = 0xd0; // vram to vram, y only
   1251 01r72s31           4024 	ld	bc,#_cmd + 14
   1254 3E D0              4025 	ld	a,#0xD0
   1256 02                 4026 	ld	(bc),a
                           4027 ;demo.c:553: cmd.source_x = 0;
   1257 21r64s31           4028 	ld	hl,#_cmd
   125A 36 00              4029 	ld	(hl),#0x00
   125C 23                 4030 	inc	hl
   125D 36 00              4031 	ld	(hl),#0x00
                           4032 ;demo.c:554: cmd.dest_x = 0;
   125F 21r68s31           4033 	ld	hl, #_cmd + 4
   1262 36 00              4034 	ld	(hl),#0x00
   1264 23                 4035 	inc	hl
   1265 36 00              4036 	ld	(hl),#0x00
                           4037 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   1267 01 00 00           4038 	ld	bc,#0x0000
   126A                    4039 00103$:
   126A 79                 4040 	ld	a,c
   126B D6 D4              4041 	sub	a,#0xD4
   126D 78                 4042 	ld	a,b
   126E DE 00              4043 	sbc	a,#0x00
   1270 F2r91s12           4044 	jp	P,00106$
                           4045 ;demo.c:557: waitVB();
   1273 76                 4046 		halt 
                           4047 ;demo.c:558: cmd.source_y = 0;
   1274 11r66s31           4048 	ld	de,#_cmd + 2
   1277 EB                 4049 	ex	de,hl
   1278 36 00              4050 	ld	(hl),#0x00
   127A 23                 4051 	inc	hl
   127B 36 00              4052 	ld	(hl),#0x00
                           4053 ;demo.c:559: cmd.dest_y = y;
   127D 11r6As31           4054 	ld	de,#_cmd + 6
   1280 EB                 4055 	ex	de,hl
   1281 71                 4056 	ld	(hl),c
   1282 23                 4057 	inc	hl
   1283 70                 4058 	ld	(hl),b
                           4059 ;demo.c:560: vdp_copier(&cmd);
   1284 C5                 4060 	push	bc
   1285 21r64s31           4061 	ld	hl,#_cmd
   1288 E5                 4062 	push	hl
   1289 CDr00s00           4063 	call	_vdp_copier
   128C F1                 4064 	pop	af
   128D C1                 4065 	pop	bc
                           4066 ;demo.c:556: for (y = 0; y < 212; y+=1) {
   128E 03                 4067 	inc	bc
   128F 18 D9              4068 	jr	00103$
   1291                    4069 00106$:
                           4070 ;demo.c:564: twinited = 1;
   1291 21rB2s31           4071 	ld	hl,#_twinited + 0
   1294 36 01              4072 	ld	(hl), #0x01
   1296 21rB3s31           4073 	ld	hl,#_twinited + 1
   1299 36 00              4074 	ld	(hl), #0x00
                           4075 ;demo.c:565: vdp_load_palette(twister_palette);
   129B 21r00s31           4076 	ld	hl,#_twister_palette
   129E E5                 4077 	push	hl
   129F CDr00s00           4078 	call	_vdp_load_palette
   12A2 F1                 4079 	pop	af
                           4080 ;demo.c:566: font();
   12A3 CDrB2s11           4081 	call	_font
   12A6                    4082 00102$:
                           4083 ;demo.c:569: cmd.size_x = 70;
   12A6 21r6Cs31           4084 	ld	hl, #_cmd + 8
   12A9 36 46              4085 	ld	(hl),#0x46
   12AB 23                 4086 	inc	hl
   12AC 36 00              4087 	ld	(hl),#0x00
                           4088 ;demo.c:570: cmd.size_y = 2;
   12AE 21r6Es31           4089 	ld	hl, #_cmd + 10
   12B1 36 02              4090 	ld	(hl),#0x02
   12B3 23                 4091 	inc	hl
   12B4 36 00              4092 	ld	(hl),#0x00
                           4093 ;demo.c:571: cmd.data = 0;
   12B6 3E 00              4094 	ld	a,#0x00
   12B8 32r70s31           4095 	ld	(#_cmd + 12),a
                           4096 ;demo.c:572: cmd.argument = 0x04; // from 70xY to left
   12BB 3E 04              4097 	ld	a,#0x04
   12BD 32r71s31           4098 	ld	(#_cmd + 13),a
                           4099 ;demo.c:573: cmd.command = 0xe0; // vram to vram, y only
   12C0 01r72s31           4100 	ld	bc,#_cmd + 14
   12C3 3E E0              4101 	ld	a,#0xE0
   12C5 02                 4102 	ld	(bc),a
                           4103 ;demo.c:574: cmd.source_x = 70;
   12C6 21r64s31           4104 	ld	hl,#_cmd
   12C9 36 46              4105 	ld	(hl),#0x46
   12CB 23                 4106 	inc	hl
   12CC 36 00              4107 	ld	(hl),#0x00
                           4108 ;demo.c:575: cmd.dest_x = 70;
   12CE 21r68s31           4109 	ld	hl, #_cmd + 4
   12D1 36 46              4110 	ld	(hl),#0x46
   12D3 23                 4111 	inc	hl
   12D4 36 00              4112 	ld	(hl),#0x00
                           4113 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   12D6 DD 36 FE 00        4114 	ld	-2 (ix),#0x00
   12DA DD 36 FF 00        4115 	ld	-1 (ix),#0x00
   12DE                    4116 00107$:
   12DE DD 7E FE           4117 	ld	a,-2 (ix)
   12E1 D6 D4              4118 	sub	a,#0xD4
   12E3 DD 7E FF           4119 	ld	a,-1 (ix)
   12E6 DE 00              4120 	sbc	a,#0x00
   12E8 F2r41s13           4121 	jp	P,00110$
                           4122 ;demo.c:578: cmd.source_y = ((sintab[(ff+(y>>1)) & 255])>>1)+512+64;
   12EB 11r66s31           4123 	ld	de,#_cmd + 2
   12EE DD 4E FE           4124 	ld	c,-2 (ix)
   12F1 DD 46 FF           4125 	ld	b,-1 (ix)
   12F4 CB 28              4126 	sra	b
   12F6 CB 19              4127 	rr	c
   12F8 3ArB0s31           4128 	ld	a,(#_ff+0)
   12FB 81                 4129 	add	a,c
   12FC 4F                 4130 	ld	c,a
   12FD 3ArB1s31           4131 	ld	a,(#_ff+1)
   1300 88                 4132 	adc	a,b
   1301 06 00              4133 	ld	b,#0x00
   1303 21r00s00           4134 	ld	hl,#_sintab
   1306 09                 4135 	add	hl,bc
   1307 7E                 4136 	ld	a,(hl)
   1308 4F                 4137 	ld	c,a
   1309 CB 29              4138 	sra	c
   130B 79                 4139 	ld	a,c
   130C 17                 4140 	rla	
   130D 9F                 4141 	sbc	a,a
   130E 47                 4142 	ld	b,a
   130F 21 40 02           4143 	ld	hl,#0x0240
   1312 09                 4144 	add	hl,bc
   1313 4D                 4145 	ld	c,l
   1314 44                 4146 	ld	b,h
   1315 6B                 4147 	ld	l,e
   1316 62                 4148 	ld	h,d
   1317 71                 4149 	ld	(hl),c
   1318 23                 4150 	inc	hl
   1319 70                 4151 	ld	(hl),b
                           4152 ;demo.c:579: cmd.dest_y = y;
   131A 21r6As31           4153 	ld	hl, #_cmd + 6
   131D DD 7E FE           4154 	ld	a,-2 (ix)
   1320 77                 4155 	ld	(hl),a
   1321 23                 4156 	inc	hl
   1322 DD 7E FF           4157 	ld	a,-1 (ix)
   1325 77                 4158 	ld	(hl),a
                           4159 ;demo.c:580: vdp_copier(&cmd);
   1326 21r64s31           4160 	ld	hl,#_cmd
   1329 E5                 4161 	push	hl
   132A CDr00s00           4162 	call	_vdp_copier
   132D F1                 4163 	pop	af
                           4164 ;demo.c:577: for (y = 0; y < 212; y+=2) {
   132E DD 7E FE           4165 	ld	a,-2 (ix)
   1331 C6 02              4166 	add	a,#0x02
   1333 DD 77 FE           4167 	ld	-2 (ix),a
   1336 DD 7E FF           4168 	ld	a,-1 (ix)
   1339 CE 00              4169 	adc	a,#0x00
   133B DD 77 FF           4170 	ld	-1 (ix),a
   133E C3rDEs12           4171 	jp	00107$
   1341                    4172 00110$:
                           4173 ;demo.c:584: msx2_palette(4,ff>>2,ff>>3,ff>>2);
   1341 21rB0s31           4174 	ld	hl,#_ff + 0
   1344 4E                 4175 	ld	c,(hl)
   1345 21rB1s31           4176 	ld	hl,#_ff + 1
   1348 46                 4177 	ld	b,(hl)
   1349 CB 28              4178 	sra	b
   134B CB 19              4179 	rr	c
   134D CB 28              4180 	sra	b
   134F CB 19              4181 	rr	c
   1351 21rB0s31           4182 	ld	hl,#_ff + 0
   1354 5E                 4183 	ld	e,(hl)
   1355 21rB1s31           4184 	ld	hl,#_ff + 1
   1358 56                 4185 	ld	d,(hl)
   1359 CB 2A              4186 	sra	d
   135B CB 1B              4187 	rr	e
   135D CB 2A              4188 	sra	d
   135F CB 1B              4189 	rr	e
   1361 CB 2A              4190 	sra	d
   1363 CB 1B              4191 	rr	e
   1365 43                 4192 	ld	b,e
   1366 79                 4193 	ld	a,c
   1367 F5                 4194 	push	af
   1368 33                 4195 	inc	sp
   1369 C5                 4196 	push	bc
   136A 33                 4197 	inc	sp
   136B 41                 4198 	ld	b,c
   136C 0E 04              4199 	ld	c,#0x04
   136E C5                 4200 	push	bc
   136F CDr00s00           4201 	call	_msx2_palette
   1372 F1                 4202 	pop	af
   1373 F1                 4203 	pop	af
                           4204 ;demo.c:586: ff+=4;
   1374 21rB0s31           4205 	ld	hl,#_ff
   1377 7E                 4206 	ld	a,(hl)
   1378 C6 04              4207 	add	a,#0x04
   137A 23                 4208 	inc	hl
   137B 2B                 4209 	dec	hl
   137C C5                 4210 	push	bc
   137D 4F                 4211 	ld	c, a
   137E 23                 4212 	inc	hl
   137F 7E                 4213 	ld	a, (hl)
   1380 47                 4214 	ld	b, a
   1381 79                 4215 	ld	a, c
   1382 2B                 4216 	dec	hl
   1383 77                 4217 	ld	(hl), a
   1384 78                 4218 	ld	a, b
   1385 C1                 4219 	pop	bc
   1386 CE 00              4220 	adc	a,#0x00
   1388 23                 4221 	inc	hl
   1389 77                 4222 	ld	(hl),a
   138A DD F9              4223 	ld	sp,ix
   138C DD E1              4224 	pop	ix
   138E C9                 4225 	ret
   138F                    4226 _twister_end::
                           4227 ;demo.c:596: void bulbs() {
                           4228 ;	---------------------------------
                           4229 ; Function bulbs
                           4230 ; ---------------------------------
   138F                    4231 _bulbs_start::
   138F                    4232 _bulbs:
   138F DD E5              4233 	push	ix
   1391 DD 21 00 00        4234 	ld	ix,#0
   1395 DD 39              4235 	add	ix,sp
   1397 F5                 4236 	push	af
   1398 F5                 4237 	push	af
                           4238 ;demo.c:600: ender+=enderdir;
   1399 21rBCs31           4239 	ld	hl,#_enderdir
   139C D5                 4240 	push	de
   139D FD 21rBAs31        4241 	ld	iy,#_ender
   13A1 FD E5              4242 	push	iy
   13A3 D1                 4243 	pop	de
   13A4 1A                 4244 	ld	a,(de)
   13A5 86                 4245 	add	a,(hl)
   13A6 13                 4246 	inc	de
   13A7 1B                 4247 	dec	de
   13A8 C5                 4248 	push	bc
   13A9 4F                 4249 	ld	c, a
   13AA 13                 4250 	inc	de
   13AB 1A                 4251 	ld	a, (de)
   13AC 47                 4252 	ld	b, a
   13AD 79                 4253 	ld	a, c
   13AE 1B                 4254 	dec	de
   13AF 12                 4255 	ld	(de), a
   13B0 78                 4256 	ld	a, b
   13B1 C1                 4257 	pop	bc
   13B2 23                 4258 	inc	hl
   13B3 8E                 4259 	adc	a,(hl)
   13B4 13                 4260 	inc	de
   13B5 12                 4261 	ld	(de),a
   13B6 D1                 4262 	pop	de
                           4263 ;demo.c:601: if (ender < 2) enderdir = -enderdir;
   13B7 3ArBAs31           4264 	ld	a,(#_ender+0)
   13BA D6 02              4265 	sub	a,#0x02
   13BC 3ArBBs31           4266 	ld	a,(#_ender+1)
   13BF DE 00              4267 	sbc	a,#0x00
   13C1 F2rE5s13           4268 	jp	P,00102$
   13C4 AF                 4269 	xor	a,a
   13C5 FD 21rBCs31        4270 	ld	iy,#_enderdir
   13C9 3E 00              4271 	ld	a,#0x00
   13CB FD 9E 00           4272 	sbc	a,0 (iy)
   13CE FD 21rBCs31        4273 	ld	iy,#_enderdir
   13D2 FD 77 00           4274 	ld	0 (iy),a
   13D5 FD 21rBCs31        4275 	ld	iy,#_enderdir
   13D9 3E 00              4276 	ld	a,#0x00
   13DB FD 9E 01           4277 	sbc	a,1 (iy)
   13DE FD 21rBCs31        4278 	ld	iy,#_enderdir
   13E2 FD 77 01           4279 	ld	1 (iy),a
   13E5                    4280 00102$:
                           4281 ;demo.c:602: if (ender >= 212) enderdir = -enderdir;
   13E5 3ArBAs31           4282 	ld	a,(#_ender+0)
   13E8 D6 D4              4283 	sub	a,#0xD4
   13EA 3ArBBs31           4284 	ld	a,(#_ender+1)
   13ED DE 00              4285 	sbc	a,#0x00
   13EF FAr13s14           4286 	jp	M,00104$
   13F2 AF                 4287 	xor	a,a
   13F3 FD 21rBCs31        4288 	ld	iy,#_enderdir
   13F7 3E 00              4289 	ld	a,#0x00
   13F9 FD 9E 00           4290 	sbc	a,0 (iy)
   13FC FD 21rBCs31        4291 	ld	iy,#_enderdir
   1400 FD 77 00           4292 	ld	0 (iy),a
   1403 FD 21rBCs31        4293 	ld	iy,#_enderdir
   1407 3E 00              4294 	ld	a,#0x00
   1409 FD 9E 01           4295 	sbc	a,1 (iy)
   140C FD 21rBCs31        4296 	ld	iy,#_enderdir
   1410 FD 77 01           4297 	ld	1 (iy),a
   1413                    4298 00104$:
                           4299 ;demo.c:604: enderend = ender + 92;
   1413 3ArBAs31           4300 	ld	a,(#_ender+0)
   1416 C6 5C              4301 	add	a,#0x5C
   1418 DD 77 FE           4302 	ld	-2 (ix),a
   141B 3ArBBs31           4303 	ld	a,(#_ender+1)
   141E CE 00              4304 	adc	a,#0x00
   1420 DD 77 FF           4305 	ld	-1 (ix),a
                           4306 ;demo.c:606: if (enderend > 212) enderend = 212;
   1423 3E D4              4307 	ld	a,#0xD4
   1425 DD 96 FE           4308 	sub	a,-2 (ix)
   1428 3E 00              4309 	ld	a,#0x00
   142A DD 9E FF           4310 	sbc	a,-1 (ix)
   142D F2r38s14           4311 	jp	P,00106$
   1430 DD 36 FE D4        4312 	ld	-2 (ix),#0xD4
   1434 DD 36 FF 00        4313 	ld	-1 (ix),#0x00
   1438                    4314 00106$:
                           4315 ;demo.c:608: if(bulbflipper == 1) {
   1438 3ArB4s31           4316 	ld	a,(#_bulbflipper+0)
   143B D6 01              4317 	sub	a,#0x01
   143D 20 06              4318 	jr	NZ,00130$
   143F 3ArB5s31           4319 	ld	a,(#_bulbflipper+1)
   1442 B7                 4320 	or	a,a
   1443 28 03              4321 	jr	Z,00131$
   1445                    4322 00130$:
   1445 C3rEFs14           4323 	jp	00108$
   1448                    4324 00131$:
                           4325 ;demo.c:609: cmd.size_x = 72;
   1448 11r6Cs31           4326 	ld	de,#_cmd + 8
   144B EB                 4327 	ex	de,hl
   144C 36 48              4328 	ld	(hl),#0x48
   144E 23                 4329 	inc	hl
   144F 36 00              4330 	ld	(hl),#0x00
                           4331 ;demo.c:610: cmd.size_y = 16;
   1451 11r6Es31           4332 	ld	de,#_cmd + 10
   1454 EB                 4333 	ex	de,hl
   1455 36 10              4334 	ld	(hl),#0x10
   1457 23                 4335 	inc	hl
   1458 36 00              4336 	ld	(hl),#0x00
                           4337 ;demo.c:611: cmd.data = 0;
   145A 11r70s31           4338 	ld	de,#_cmd + 12
   145D 3E 00              4339 	ld	a,#0x00
   145F 12                 4340 	ld	(de),a
                           4341 ;demo.c:612: cmd.argument = 0x04; // from 72xY to left
   1460 11r71s31           4342 	ld	de,#_cmd + 13
   1463 3E 04              4343 	ld	a,#0x04
   1465 12                 4344 	ld	(de),a
                           4345 ;demo.c:613: cmd.command = 0xe0; // vram to vram, y only
   1466 11r72s31           4346 	ld	de,#_cmd + 14
   1469 3E E0              4347 	ld	a,#0xE0
   146B 12                 4348 	ld	(de),a
                           4349 ;demo.c:614: cmd.source_x = 72;
   146C 21r64s31           4350 	ld	hl,#_cmd
   146F 36 48              4351 	ld	(hl),#0x48
   1471 23                 4352 	inc	hl
   1472 36 00              4353 	ld	(hl),#0x00
                           4354 ;demo.c:615: cmd.dest_x = 72;
   1474 11r68s31           4355 	ld	de,#_cmd + 4
   1477 6B                 4356 	ld	l,e
   1478 62                 4357 	ld	h,d
   1479 36 48              4358 	ld	(hl),#0x48
   147B 23                 4359 	inc	hl
   147C 36 00              4360 	ld	(hl),#0x00
                           4361 ;demo.c:617: for (y = ender; y < enderend; y+=16) {
   147E ED 4BrBAs31        4362 	ld	bc,(_ender)
   1482 59                 4363 	ld	e,c
   1483 50                 4364 	ld	d,b
   1484                    4365 00110$:
   1484 7B                 4366 	ld	a,e
   1485 DD 96 FE           4367 	sub	a,-2 (ix)
   1488 7A                 4368 	ld	a,d
   1489 DD 9E FF           4369 	sbc	a,-1 (ix)
   148C F2rD6s14           4370 	jp	P,00113$
                           4371 ;demo.c:618: cmd.source_y = ((sintab[(ff1+(y)) & 255])>>1)+320;
   148F 21r66s31           4372 	ld	hl,#_cmd + 2
   1492 DD 75 FC           4373 	ld	-4 (ix),l
   1495 DD 74 FD           4374 	ld	-3 (ix),h
   1498 3ArB6s31           4375 	ld	a,(#_ff1+0)
   149B 83                 4376 	add	a,e
   149C 4F                 4377 	ld	c,a
   149D 3ArB7s31           4378 	ld	a,(#_ff1+1)
   14A0 8A                 4379 	adc	a,d
   14A1 06 00              4380 	ld	b,#0x00
   14A3 21r00s00           4381 	ld	hl,#_sintab
   14A6 09                 4382 	add	hl,bc
   14A7 7E                 4383 	ld	a,(hl)
   14A8 4F                 4384 	ld	c,a
   14A9 CB 29              4385 	sra	c
   14AB 79                 4386 	ld	a,c
   14AC 17                 4387 	rla	
   14AD 9F                 4388 	sbc	a,a
   14AE 47                 4389 	ld	b,a
   14AF 21 40 01           4390 	ld	hl,#0x0140
   14B2 09                 4391 	add	hl,bc
   14B3 4D                 4392 	ld	c,l
   14B4 44                 4393 	ld	b,h
   14B5 DD 6E FC           4394 	ld	l,-4 (ix)
   14B8 DD 66 FD           4395 	ld	h,-3 (ix)
   14BB 71                 4396 	ld	(hl),c
   14BC 23                 4397 	inc	hl
   14BD 70                 4398 	ld	(hl),b
                           4399 ;demo.c:619: cmd.dest_y = y;
   14BE 21r6As31           4400 	ld	hl, #_cmd + 6
   14C1 73                 4401 	ld	(hl),e
   14C2 23                 4402 	inc	hl
   14C3 72                 4403 	ld	(hl),d
                           4404 ;demo.c:620: vdp_copier(&cmd);
   14C4 D5                 4405 	push	de
   14C5 21r64s31           4406 	ld	hl,#_cmd
   14C8 E5                 4407 	push	hl
   14C9 CDr00s00           4408 	call	_vdp_copier
   14CC F1                 4409 	pop	af
   14CD D1                 4410 	pop	de
                           4411 ;demo.c:617: for (y = ender; y < enderend; y+=16) {
   14CE 21 10 00           4412 	ld	hl,#0x0010
   14D1 19                 4413 	add	hl,de
   14D2 EB                 4414 	ex	de,hl
   14D3 C3r84s14           4415 	jp	00110$
   14D6                    4416 00113$:
                           4417 ;demo.c:622: ff1+=4;
   14D6 21rB6s31           4418 	ld	hl,#_ff1
   14D9 7E                 4419 	ld	a,(hl)
   14DA C6 04              4420 	add	a,#0x04
   14DC 23                 4421 	inc	hl
   14DD 2B                 4422 	dec	hl
   14DE C5                 4423 	push	bc
   14DF 4F                 4424 	ld	c, a
   14E0 23                 4425 	inc	hl
   14E1 7E                 4426 	ld	a, (hl)
   14E2 47                 4427 	ld	b, a
   14E3 79                 4428 	ld	a, c
   14E4 2B                 4429 	dec	hl
   14E5 77                 4430 	ld	(hl), a
   14E6 78                 4431 	ld	a, b
   14E7 C1                 4432 	pop	bc
   14E8 CE 00              4433 	adc	a,#0x00
   14EA 23                 4434 	inc	hl
   14EB 77                 4435 	ld	(hl),a
   14EC C3r89s15           4436 	jp	00109$
   14EF                    4437 00108$:
                           4438 ;demo.c:626: cmd.size_x = 72;
   14EF 21r6Cs31           4439 	ld	hl, #_cmd + 8
   14F2 36 48              4440 	ld	(hl),#0x48
   14F4 23                 4441 	inc	hl
   14F5 36 00              4442 	ld	(hl),#0x00
                           4443 ;demo.c:627: cmd.size_y = 16;
   14F7 21r6Es31           4444 	ld	hl, #_cmd + 10
   14FA 36 10              4445 	ld	(hl),#0x10
   14FC 23                 4446 	inc	hl
   14FD 36 00              4447 	ld	(hl),#0x00
                           4448 ;demo.c:628: cmd.data = 0;
                           4449 ;demo.c:629: cmd.argument = 0x00; // from 182xY to right
   14FF 3E 00              4450 	ld	a,#0x00
   1501 32r70s31           4451 	ld	(#_cmd + 12),a
   1504 32r71s31           4452 	ld	(#_cmd + 13),a
                           4453 ;demo.c:630: cmd.command = 0xe0; // vram to vram, y only
   1507 01r72s31           4454 	ld	bc,#_cmd + 14
   150A 3E E0              4455 	ld	a,#0xE0
   150C 02                 4456 	ld	(bc),a
                           4457 ;demo.c:631: cmd.source_x = 182;
   150D 21r64s31           4458 	ld	hl,#_cmd
   1510 36 B6              4459 	ld	(hl),#0xB6
   1512 23                 4460 	inc	hl
   1513 36 00              4461 	ld	(hl),#0x00
                           4462 ;demo.c:632: cmd.dest_x = 182;
   1515 21r68s31           4463 	ld	hl, #_cmd + 4
   1518 36 B6              4464 	ld	(hl),#0xB6
   151A 23                 4465 	inc	hl
   151B 36 00              4466 	ld	(hl),#0x00
                           4467 ;demo.c:634: for (y = ender; y < enderend; y+=16) {
   151D ED 4BrBAs31        4468 	ld	bc,(_ender)
   1521                    4469 00114$:
   1521 79                 4470 	ld	a,c
   1522 DD 96 FE           4471 	sub	a,-2 (ix)
   1525 78                 4472 	ld	a,b
   1526 DD 9E FF           4473 	sbc	a,-1 (ix)
   1529 F2r73s15           4474 	jp	P,00117$
                           4475 ;demo.c:635: cmd.source_y = ((sintab[(ff2+(y)) & 255])>>1)+320;
   152C 21r66s31           4476 	ld	hl,#_cmd + 2
   152F DD 75 FC           4477 	ld	-4 (ix),l
   1532 DD 74 FD           4478 	ld	-3 (ix),h
   1535 3ArB8s31           4479 	ld	a,(#_ff2+0)
   1538 81                 4480 	add	a,c
   1539 5F                 4481 	ld	e,a
   153A 3ArB9s31           4482 	ld	a,(#_ff2+1)
   153D 88                 4483 	adc	a,b
   153E 16 00              4484 	ld	d,#0x00
   1540 21r00s00           4485 	ld	hl,#_sintab
   1543 19                 4486 	add	hl,de
   1544 5E                 4487 	ld	e,(hl)
   1545 CB 2B              4488 	sra	e
   1547 7B                 4489 	ld	a,e
   1548 17                 4490 	rla	
   1549 9F                 4491 	sbc	a,a
   154A 57                 4492 	ld	d,a
   154B 21 40 01           4493 	ld	hl,#0x0140
   154E 19                 4494 	add	hl,de
   154F EB                 4495 	ex	de,hl
   1550 DD 6E FC           4496 	ld	l,-4 (ix)
   1553 DD 66 FD           4497 	ld	h,-3 (ix)
   1556 73                 4498 	ld	(hl),e
   1557 23                 4499 	inc	hl
   1558 72                 4500 	ld	(hl),d
                           4501 ;demo.c:636: cmd.dest_y = y;
   1559 11r6As31           4502 	ld	de,#_cmd + 6
   155C EB                 4503 	ex	de,hl
   155D 71                 4504 	ld	(hl),c
   155E 23                 4505 	inc	hl
   155F 70                 4506 	ld	(hl),b
                           4507 ;demo.c:637: vdp_copier(&cmd);
   1560 C5                 4508 	push	bc
   1561 21r64s31           4509 	ld	hl,#_cmd
   1564 E5                 4510 	push	hl
   1565 CDr00s00           4511 	call	_vdp_copier
   1568 F1                 4512 	pop	af
   1569 C1                 4513 	pop	bc
                           4514 ;demo.c:634: for (y = ender; y < enderend; y+=16) {
   156A 21 10 00           4515 	ld	hl,#0x0010
   156D 09                 4516 	add	hl,bc
   156E 4D                 4517 	ld	c,l
   156F 44                 4518 	ld	b,h
   1570 C3r21s15           4519 	jp	00114$
   1573                    4520 00117$:
                           4521 ;demo.c:639: ff2+=4;
   1573 21rB8s31           4522 	ld	hl,#_ff2
   1576 7E                 4523 	ld	a,(hl)
   1577 C6 04              4524 	add	a,#0x04
   1579 23                 4525 	inc	hl
   157A 2B                 4526 	dec	hl
   157B C5                 4527 	push	bc
   157C 4F                 4528 	ld	c, a
   157D 23                 4529 	inc	hl
   157E 7E                 4530 	ld	a, (hl)
   157F 47                 4531 	ld	b, a
   1580 79                 4532 	ld	a, c
   1581 2B                 4533 	dec	hl
   1582 77                 4534 	ld	(hl), a
   1583 78                 4535 	ld	a, b
   1584 C1                 4536 	pop	bc
   1585 CE 00              4537 	adc	a,#0x00
   1587 23                 4538 	inc	hl
   1588 77                 4539 	ld	(hl),a
   1589                    4540 00109$:
                           4541 ;demo.c:642: bulbflipper = -bulbflipper;
   1589 AF                 4542 	xor	a,a
   158A FD 21rB4s31        4543 	ld	iy,#_bulbflipper
   158E 3E 00              4544 	ld	a,#0x00
   1590 FD 9E 00           4545 	sbc	a,0 (iy)
   1593 21rB4s31           4546 	ld	hl,#_bulbflipper + 0
   1596 77                 4547 	ld	(hl), a
   1597 FD 21rB4s31        4548 	ld	iy,#_bulbflipper
   159B 3E 00              4549 	ld	a,#0x00
   159D FD 9E 01           4550 	sbc	a,1 (iy)
   15A0 21rB5s31           4551 	ld	hl,#_bulbflipper + 1
   15A3 77                 4552 	ld	(hl), a
   15A4 DD F9              4553 	ld	sp,ix
   15A6 DD E1              4554 	pop	ix
   15A8 C9                 4555 	ret
   15A9                    4556 _bulbs_end::
                           4557 ;demo.c:656: void animplay() {
                           4558 ;	---------------------------------
                           4559 ; Function animplay
                           4560 ; ---------------------------------
   15A9                    4561 _animplay_start::
   15A9                    4562 _animplay:
   15A9 DD E5              4563 	push	ix
   15AB DD 21 00 00        4564 	ld	ix,#0
   15AF DD 39              4565 	add	ix,sp
   15B1 F5                 4566 	push	af
   15B2 3B                 4567 	dec	sp
                           4568 ;demo.c:661: if (anim_init == 0) {
   15B3 3ArC6s31           4569 	ld	a,(#_anim_init+0)
   15B6 21rC7s31           4570 	ld	hl,#_anim_init + 1
   15B9 B6                 4571 	or	a,(hl)
   15BA 20 35              4572 	jr	NZ,00117$
                           4573 ;demo.c:663: vdp_register(0,0);
   15BC 21 00 00           4574 	ld	hl,#0x0000
   15BF E5                 4575 	push	hl
   15C0 CDr00s00           4576 	call	_vdp_register
   15C3 F1                 4577 	pop	af
                           4578 ;demo.c:664: vdp_register(1,0);
   15C4 21 01 00           4579 	ld	hl,#0x0001
   15C7 E5                 4580 	push	hl
   15C8 CDr00s00           4581 	call	_vdp_register
   15CB F1                 4582 	pop	af
                           4583 ;demo.c:669: vdp_set_screen5();
   15CC CDr00s00           4584 	call	_vdp_set_screen5
                           4585 ;demo.c:670: vdp_register(1,0x60);
   15CF 21 01 60           4586 	ld	hl,#0x6001
   15D2 E5                 4587 	push	hl
   15D3 CDr00s00           4588 	call	_vdp_register
   15D6 F1                 4589 	pop	af
                           4590 ;demo.c:671: vdp_register(9,2); // 192 lines
   15D7 21 09 02           4591 	ld	hl,#0x0209
   15DA E5                 4592 	push	hl
   15DB CDr00s00           4593 	call	_vdp_register
   15DE F1                 4594 	pop	af
                           4595 ;demo.c:674: anim_init = 1;
   15DF 21rC6s31           4596 	ld	hl,#_anim_init + 0
   15E2 36 01              4597 	ld	(hl), #0x01
   15E4 21rC7s31           4598 	ld	hl,#_anim_init + 1
   15E7 36 00              4599 	ld	(hl), #0x00
                           4600 ;demo.c:675: vdp_load_palette(tf_palette);
   15E9 21r20s31           4601 	ld	hl,#_tf_palette
   15EC E5                 4602 	push	hl
   15ED CDr00s00           4603 	call	_vdp_load_palette
   15F0 F1                 4604 	pop	af
                           4605 ;demo.c:678: for (y = 0; y < 96; y+=1) {
   15F1                    4606 00117$:
   15F1 DD 36 FF 00        4607 	ld	-1 (ix),#0x00
   15F5                    4608 00109$:
   15F5 DD 7E FF           4609 	ld	a,-1 (ix)
   15F8 D6 60              4610 	sub	a,#0x60
   15FA D2r7Cs16           4611 	jp	NC,00112$
                           4612 ;demo.c:679: cmd.source_x = xo;
   15FD ED 5BrBEs31        4613 	ld	de,(_xo)
   1601 21r64s31           4614 	ld	hl,#_cmd
   1604 73                 4615 	ld	(hl),e
   1605 23                 4616 	inc	hl
   1606 72                 4617 	ld	(hl),d
                           4618 ;demo.c:680: cmd.source_y = 256+po+yo+(y>>1);
   1607 11r66s31           4619 	ld	de,#_cmd + 2
   160A 3ArC2s31           4620 	ld	a,(#_po+0)
   160D 4F                 4621 	ld	c,a
   160E 3ArC3s31           4622 	ld	a,(#_po+1)
   1611 C6 01              4623 	add	a,#0x01
   1613 47                 4624 	ld	b,a
   1614 21rC0s31           4625 	ld	hl,#_yo
   1617 79                 4626 	ld	a,c
   1618 86                 4627 	add	a,(hl)
   1619 DD 77 FD           4628 	ld	-3 (ix),a
   161C 78                 4629 	ld	a,b
   161D 23                 4630 	inc	hl
   161E 8E                 4631 	adc	a,(hl)
   161F DD 77 FE           4632 	ld	-2 (ix),a
   1622 DD 4E FF           4633 	ld	c,-1 (ix)
   1625 CB 39              4634 	srl	c
   1627 06 00              4635 	ld	b,#0x00
   1629 DD 7E FD           4636 	ld	a,-3 (ix)
   162C 81                 4637 	add	a,c
   162D 4F                 4638 	ld	c,a
   162E DD 7E FE           4639 	ld	a,-2 (ix)
   1631 88                 4640 	adc	a,b
   1632 47                 4641 	ld	b,a
   1633 6B                 4642 	ld	l,e
   1634 62                 4643 	ld	h,d
   1635 71                 4644 	ld	(hl),c
   1636 23                 4645 	inc	hl
   1637 70                 4646 	ld	(hl),b
                           4647 ;demo.c:681: cmd.dest_x = 0;
   1638 21r68s31           4648 	ld	hl, #_cmd + 4
   163B 36 00              4649 	ld	(hl),#0x00
   163D 23                 4650 	inc	hl
   163E 36 00              4651 	ld	(hl),#0x00
                           4652 ;demo.c:682: cmd.dest_y = (y<<1);
   1640 01r6As31           4653 	ld	bc,#_cmd + 6
   1643 DD 5E FF           4654 	ld	e,-1 (ix)
   1646 16 00              4655 	ld	d,#0x00
   1648 CB 23              4656 	sla	e
   164A CB 12              4657 	rl	d
   164C 69                 4658 	ld	l,c
   164D 60                 4659 	ld	h,b
   164E 73                 4660 	ld	(hl),e
   164F 23                 4661 	inc	hl
   1650 72                 4662 	ld	(hl),d
                           4663 ;demo.c:683: cmd.size_x = 128;
   1651 21r6Cs31           4664 	ld	hl, #_cmd + 8
   1654 36 80              4665 	ld	(hl),#0x80
   1656 23                 4666 	inc	hl
   1657 36 00              4667 	ld	(hl),#0x00
                           4668 ;demo.c:684: cmd.size_y = 1;
   1659 21r6Es31           4669 	ld	hl, #_cmd + 10
   165C 36 01              4670 	ld	(hl),#0x01
   165E 23                 4671 	inc	hl
   165F 36 00              4672 	ld	(hl),#0x00
                           4673 ;demo.c:685: cmd.data = 0;
                           4674 ;demo.c:686: cmd.argument = 0x00;
   1661 3E 00              4675 	ld	a,#0x00
   1663 32r70s31           4676 	ld	(#_cmd + 12),a
   1666 32r71s31           4677 	ld	(#_cmd + 13),a
                           4678 ;demo.c:687: cmd.command = 0xD0;
   1669 3E D0              4679 	ld	a,#0xD0
   166B 32r72s31           4680 	ld	(#_cmd + 14),a
                           4681 ;demo.c:688: vdp_copier(&cmd);
   166E 21r64s31           4682 	ld	hl,#_cmd
   1671 E5                 4683 	push	hl
   1672 CDr00s00           4684 	call	_vdp_copier
   1675 F1                 4685 	pop	af
                           4686 ;demo.c:678: for (y = 0; y < 96; y+=1) {
   1676 DD 34 FF           4687 	inc	-1 (ix)
   1679 C3rF5s15           4688 	jp	00109$
   167C                    4689 00112$:
                           4690 ;demo.c:691: xo+=128;
   167C 21rBEs31           4691 	ld	hl,#_xo
   167F 7E                 4692 	ld	a,(hl)
   1680 C6 80              4693 	add	a,#0x80
   1682 23                 4694 	inc	hl
   1683 2B                 4695 	dec	hl
   1684 C5                 4696 	push	bc
   1685 4F                 4697 	ld	c, a
   1686 23                 4698 	inc	hl
   1687 7E                 4699 	ld	a, (hl)
   1688 47                 4700 	ld	b, a
   1689 79                 4701 	ld	a, c
   168A 2B                 4702 	dec	hl
   168B 77                 4703 	ld	(hl), a
   168C 78                 4704 	ld	a, b
   168D C1                 4705 	pop	bc
   168E CE 00              4706 	adc	a,#0x00
   1690 23                 4707 	inc	hl
   1691 77                 4708 	ld	(hl),a
                           4709 ;demo.c:692: if (xo >= 256) {
   1692 3ArBEs31           4710 	ld	a,(#_xo+0)
   1695 D6 00              4711 	sub	a,#0x00
   1697 3ArBFs31           4712 	ld	a,(#_xo+1)
   169A DE 01              4713 	sbc	a,#0x01
   169C FAr03s17           4714 	jp	M,00108$
                           4715 ;demo.c:693: xo = 0;
   169F 21rBEs31           4716 	ld	hl,#_xo + 0
   16A2 36 00              4717 	ld	(hl), #0x00
   16A4 21rBFs31           4718 	ld	hl,#_xo + 1
   16A7 36 00              4719 	ld	(hl), #0x00
                           4720 ;demo.c:694: yo+=48;
   16A9 21rC0s31           4721 	ld	hl,#_yo
   16AC 7E                 4722 	ld	a,(hl)
   16AD C6 30              4723 	add	a,#0x30
   16AF 23                 4724 	inc	hl
   16B0 2B                 4725 	dec	hl
   16B1 C5                 4726 	push	bc
   16B2 4F                 4727 	ld	c, a
   16B3 23                 4728 	inc	hl
   16B4 7E                 4729 	ld	a, (hl)
   16B5 47                 4730 	ld	b, a
   16B6 79                 4731 	ld	a, c
   16B7 2B                 4732 	dec	hl
   16B8 77                 4733 	ld	(hl), a
   16B9 78                 4734 	ld	a, b
   16BA C1                 4735 	pop	bc
   16BB CE 00              4736 	adc	a,#0x00
   16BD 23                 4737 	inc	hl
   16BE 77                 4738 	ld	(hl),a
                           4739 ;demo.c:695: if (yo >= 192) { yo = 0; po+=256; }
   16BF 3ArC0s31           4740 	ld	a,(#_yo+0)
   16C2 D6 C0              4741 	sub	a,#0xC0
   16C4 3ArC1s31           4742 	ld	a,(#_yo+1)
   16C7 DE 00              4743 	sbc	a,#0x00
   16C9 FArECs16           4744 	jp	M,00104$
   16CC 21rC0s31           4745 	ld	hl,#_yo + 0
   16CF 36 00              4746 	ld	(hl), #0x00
   16D1 21rC1s31           4747 	ld	hl,#_yo + 1
   16D4 36 00              4748 	ld	(hl), #0x00
   16D6 21rC2s31           4749 	ld	hl,#_po
   16D9 7E                 4750 	ld	a,(hl)
   16DA C6 00              4751 	add	a,#0x00
   16DC 23                 4752 	inc	hl
   16DD 2B                 4753 	dec	hl
   16DE C5                 4754 	push	bc
   16DF 4F                 4755 	ld	c, a
   16E0 23                 4756 	inc	hl
   16E1 7E                 4757 	ld	a, (hl)
   16E2 47                 4758 	ld	b, a
   16E3 79                 4759 	ld	a, c
   16E4 2B                 4760 	dec	hl
   16E5 77                 4761 	ld	(hl), a
   16E6 78                 4762 	ld	a, b
   16E7 C1                 4763 	pop	bc
   16E8 CE 01              4764 	adc	a,#0x01
   16EA 23                 4765 	inc	hl
   16EB 77                 4766 	ld	(hl),a
   16EC                    4767 00104$:
                           4768 ;demo.c:696: if (po >= 768) {
   16EC 3ArC2s31           4769 	ld	a,(#_po+0)
   16EF D6 00              4770 	sub	a,#0x00
   16F1 3ArC3s31           4771 	ld	a,(#_po+1)
   16F4 DE 03              4772 	sbc	a,#0x03
   16F6 FAr03s17           4773 	jp	M,00108$
                           4774 ;demo.c:697: po = 0;
   16F9 21rC2s31           4775 	ld	hl,#_po + 0
   16FC 36 00              4776 	ld	(hl), #0x00
   16FE 21rC3s31           4777 	ld	hl,#_po + 1
   1701 36 00              4778 	ld	(hl), #0x00
   1703                    4779 00108$:
                           4780 ;demo.c:704: fffaaa++;
   1703 FD 21rC4s31        4781 	ld	iy,#_fffaaa
   1707 FD 34 00           4782 	inc	0 (iy)
   170A 20 07              4783 	jr	NZ,00124$
   170C FD 21rC4s31        4784 	ld	iy,#_fffaaa
   1710 FD 34 01           4785 	inc	1 (iy)
   1713                    4786 00124$:
   1713 DD F9              4787 	ld	sp,ix
   1715 DD E1              4788 	pop	ix
   1717 C9                 4789 	ret
   1718                    4790 _animplay_end::
                           4791 ;demo.c:716: void drawbox(int box_x, int box_y, uint8_t x, uint8_t y) {
                           4792 ;	---------------------------------
                           4793 ; Function drawbox
                           4794 ; ---------------------------------
   1718                    4795 _drawbox_start::
   1718                    4796 _drawbox:
   1718 DD E5              4797 	push	ix
   171A DD 21 00 00        4798 	ld	ix,#0
   171E DD 39              4799 	add	ix,sp
                           4800 ;demo.c:717: dbly = 0;
   1720 21rCBs31           4801 	ld	hl,#_dbly + 0
   1723 36 00              4802 	ld	(hl), #0x00
   1725 21rCCs31           4803 	ld	hl,#_dbly + 1
   1728 36 00              4804 	ld	(hl), #0x00
                           4805 ;demo.c:719: cmd.source_x = box_x * 42;
   172A DD 5E 04           4806 	ld	e,4 (ix)
   172D DD 56 05           4807 	ld	d,5 (ix)
   1730 6B                 4808 	ld	l,e
   1731 62                 4809 	ld	h,d
   1732 29                 4810 	add	hl,hl
   1733 29                 4811 	add	hl,hl
   1734 19                 4812 	add	hl,de
   1735 29                 4813 	add	hl,hl
   1736 29                 4814 	add	hl,hl
   1737 19                 4815 	add	hl,de
   1738 29                 4816 	add	hl,hl
   1739 4D                 4817 	ld	c,l
   173A 44                 4818 	ld	b,h
   173B 21r64s31           4819 	ld	hl,#_cmd
   173E 71                 4820 	ld	(hl),c
   173F 23                 4821 	inc	hl
   1740 70                 4822 	ld	(hl),b
                           4823 ;demo.c:720: cmd.source_y = 768+box_y * 42;
   1741 01r66s31           4824 	ld	bc,#_cmd + 2
   1744 DD 5E 06           4825 	ld	e,6 (ix)
   1747 DD 56 07           4826 	ld	d,7 (ix)
   174A 6B                 4827 	ld	l,e
   174B 62                 4828 	ld	h,d
   174C 29                 4829 	add	hl,hl
   174D 29                 4830 	add	hl,hl
   174E 19                 4831 	add	hl,de
   174F 29                 4832 	add	hl,hl
   1750 29                 4833 	add	hl,hl
   1751 19                 4834 	add	hl,de
   1752 29                 4835 	add	hl,hl
   1753 EB                 4836 	ex	de,hl
   1754 21 00 03           4837 	ld	hl,#0x0300
   1757 19                 4838 	add	hl,de
   1758 EB                 4839 	ex	de,hl
   1759 69                 4840 	ld	l,c
   175A 60                 4841 	ld	h,b
   175B 73                 4842 	ld	(hl),e
   175C 23                 4843 	inc	hl
   175D 72                 4844 	ld	(hl),d
                           4845 ;demo.c:721: cmd.dest_x = x;
   175E 01r68s31           4846 	ld	bc,#_cmd + 4
   1761 DD 5E 08           4847 	ld	e,8 (ix)
   1764 16 00              4848 	ld	d,#0x00
   1766 69                 4849 	ld	l,c
   1767 60                 4850 	ld	h,b
   1768 73                 4851 	ld	(hl),e
   1769 23                 4852 	inc	hl
   176A 72                 4853 	ld	(hl),d
                           4854 ;demo.c:722: cmd.dest_y = dbly+y;
   176B 01r6As31           4855 	ld	bc,#_cmd + 6
   176E DD 5E 09           4856 	ld	e,9 (ix)
   1771 16 00              4857 	ld	d,#0x00
   1773 69                 4858 	ld	l,c
   1774 60                 4859 	ld	h,b
   1775 73                 4860 	ld	(hl),e
   1776 23                 4861 	inc	hl
   1777 72                 4862 	ld	(hl),d
                           4863 ;demo.c:723: cmd.size_x = 42;
   1778 21r6Cs31           4864 	ld	hl, #_cmd + 8
   177B 36 2A              4865 	ld	(hl),#0x2A
   177D 23                 4866 	inc	hl
   177E 36 00              4867 	ld	(hl),#0x00
                           4868 ;demo.c:724: cmd.size_y = 42;
   1780 21r6Es31           4869 	ld	hl, #_cmd + 10
   1783 36 2A              4870 	ld	(hl),#0x2A
   1785 23                 4871 	inc	hl
   1786 36 00              4872 	ld	(hl),#0x00
                           4873 ;demo.c:725: cmd.data = 0;
                           4874 ;demo.c:726: cmd.argument = 0x00;
   1788 3E 00              4875 	ld	a,#0x00
   178A 32r70s31           4876 	ld	(#_cmd + 12),a
   178D 32r71s31           4877 	ld	(#_cmd + 13),a
                           4878 ;demo.c:727: cmd.command = 0x98; // TIMP sprite
   1790 3E 98              4879 	ld	a,#0x98
   1792 32r72s31           4880 	ld	(#_cmd + 14),a
                           4881 ;demo.c:728: vdp_copier(&cmd);
   1795 D5                 4882 	push	de
   1796 21r64s31           4883 	ld	hl,#_cmd
   1799 E5                 4884 	push	hl
   179A CDr00s00           4885 	call	_vdp_copier
   179D F1                 4886 	pop	af
   179E D1                 4887 	pop	de
                           4888 ;demo.c:730: prevx = x;
   179F DD 7E 08           4889 	ld	a,8 (ix)
   17A2 21rCDs31           4890 	ld	hl,#_prevx + 0
   17A5 77                 4891 	ld	(hl), a
   17A6 21rCEs31           4892 	ld	hl,#_prevx + 1
   17A9 36 00              4893 	ld	(hl), #0x00
                           4894 ;demo.c:731: prevy = y;
   17AB 21rCFs31           4895 	ld	hl,#_prevy + 0
   17AE 73                 4896 	ld	(hl), e
   17AF 21rD0s31           4897 	ld	hl,#_prevy + 1
   17B2 72                 4898 	ld	(hl), d
                           4899 ;demo.c:732: prevbx = box_x;
   17B3 DD 7E 04           4900 	ld	a,4 (ix)
   17B6 21rD1s31           4901 	ld	hl,#_prevbx + 0
   17B9 77                 4902 	ld	(hl), a
   17BA DD 7E 05           4903 	ld	a,5 (ix)
   17BD 21rD2s31           4904 	ld	hl,#_prevbx + 1
   17C0 77                 4905 	ld	(hl), a
                           4906 ;demo.c:733: prevby = box_y;
   17C1 DD 7E 06           4907 	ld	a,6 (ix)
   17C4 21rD3s31           4908 	ld	hl,#_prevby + 0
   17C7 77                 4909 	ld	(hl), a
   17C8 DD 7E 07           4910 	ld	a,7 (ix)
   17CB 21rD4s31           4911 	ld	hl,#_prevby + 1
   17CE 77                 4912 	ld	(hl), a
   17CF DD E1              4913 	pop	ix
   17D1 C9                 4914 	ret
   17D2                    4915 _drawbox_end::
                           4916 ;demo.c:747: void boxes() {
                           4917 ;	---------------------------------
                           4918 ; Function boxes
                           4919 ; ---------------------------------
   17D2                    4920 _boxes_start::
   17D2                    4921 _boxes:
                           4922 ;demo.c:751: if (bonc == 1) {
   17D2 3ArE1s31           4923 	ld	a,(#_bonc+0)
   17D5 D6 01              4924 	sub	a,#0x01
   17D7 20 06              4925 	jr	NZ,00156$
   17D9 3ArE2s31           4926 	ld	a,(#_bonc+1)
   17DC B7                 4927 	or	a,a
   17DD 28 02              4928 	jr	Z,00157$
   17DF                    4929 00156$:
   17DF 18 4D              4930 	jr	00102$
   17E1                    4931 00157$:
                           4932 ;demo.c:753: cmd.source_x = 0;
   17E1 21r64s31           4933 	ld	hl,#_cmd
   17E4 36 00              4934 	ld	(hl),#0x00
   17E6 23                 4935 	inc	hl
   17E7 36 00              4936 	ld	(hl),#0x00
                           4937 ;demo.c:754: cmd.source_y = 256;
   17E9 21r66s31           4938 	ld	hl, #_cmd + 2
   17EC 36 00              4939 	ld	(hl),#0x00
   17EE 23                 4940 	inc	hl
   17EF 36 01              4941 	ld	(hl),#0x01
                           4942 ;demo.c:755: cmd.dest_x = pbx;
   17F1 01r68s31           4943 	ld	bc,#_cmd + 4
   17F4 ED 5BrE3s31        4944 	ld	de,(_pbx)
   17F8 69                 4945 	ld	l,c
   17F9 60                 4946 	ld	h,b
   17FA 73                 4947 	ld	(hl),e
   17FB 23                 4948 	inc	hl
   17FC 72                 4949 	ld	(hl),d
                           4950 ;demo.c:756: cmd.dest_y = pbt;
   17FD 01r6As31           4951 	ld	bc,#_cmd + 6
   1800 ED 5BrE5s31        4952 	ld	de,(_pbt)
   1804 69                 4953 	ld	l,c
   1805 60                 4954 	ld	h,b
   1806 73                 4955 	ld	(hl),e
   1807 23                 4956 	inc	hl
   1808 72                 4957 	ld	(hl),d
                           4958 ;demo.c:757: cmd.size_x = 42;
   1809 21r6Cs31           4959 	ld	hl, #_cmd + 8
   180C 36 2A              4960 	ld	(hl),#0x2A
   180E 23                 4961 	inc	hl
   180F 36 00              4962 	ld	(hl),#0x00
                           4963 ;demo.c:758: cmd.size_y = 42;
   1811 21r6Es31           4964 	ld	hl, #_cmd + 10
   1814 36 2A              4965 	ld	(hl),#0x2A
   1816 23                 4966 	inc	hl
   1817 36 00              4967 	ld	(hl),#0x00
                           4968 ;demo.c:759: cmd.data = 0;
                           4969 ;demo.c:760: cmd.argument = 0x00;
   1819 3E 00              4970 	ld	a,#0x00
   181B 32r70s31           4971 	ld	(#_cmd + 12),a
   181E 32r71s31           4972 	ld	(#_cmd + 13),a
                           4973 ;demo.c:761: cmd.command = 0xD0; // HMMM
   1821 3E D0              4974 	ld	a,#0xD0
   1823 32r72s31           4975 	ld	(#_cmd + 14),a
                           4976 ;demo.c:762: vdp_copier(&cmd);
   1826 21r64s31           4977 	ld	hl,#_cmd
   1829 E5                 4978 	push	hl
   182A CDr00s00           4979 	call	_vdp_copier
   182D F1                 4980 	pop	af
   182E                    4981 00102$:
                           4982 ;demo.c:766: if (boxes_init == 0) {
   182E AF                 4983 	xor	a,a
   182F 21rC8s31           4984 	ld	hl,#_boxes_init + 0
   1832 B6                 4985 	or	a,(hl)
   1833 C2rC9s18           4986 	jp	NZ,00104$
                           4987 ;demo.c:767: boxes_init = 1;
   1836 FD 21rC8s31        4988 	ld	iy,#_boxes_init
   183A FD 36 00 01        4989 	ld	0 (iy),#0x01
                           4990 ;demo.c:769: cmd.size_x = 8;
   183E 21r6Cs31           4991 	ld	hl, #_cmd + 8
   1841 36 08              4992 	ld	(hl),#0x08
   1843 23                 4993 	inc	hl
   1844 36 00              4994 	ld	(hl),#0x00
                           4995 ;demo.c:770: cmd.size_y = 212;
   1846 21r6Es31           4996 	ld	hl, #_cmd + 10
   1849 36 D4              4997 	ld	(hl),#0xD4
   184B 23                 4998 	inc	hl
   184C 36 00              4999 	ld	(hl),#0x00
                           5000 ;demo.c:771: cmd.data = 0;
                           5001 ;demo.c:772: cmd.argument = 0x00; // from 70xY to left
   184E 3E 00              5002 	ld	a,#0x00
   1850 32r70s31           5003 	ld	(#_cmd + 12),a
   1853 32r71s31           5004 	ld	(#_cmd + 13),a
                           5005 ;demo.c:773: cmd.command = 0xd0; // vram to vram, y only
   1856 01r72s31           5006 	ld	bc,#_cmd + 14
   1859 3E D0              5007 	ld	a,#0xD0
   185B 02                 5008 	ld	(bc),a
                           5009 ;demo.c:774: cmd.source_x = 248;
   185C 21r64s31           5010 	ld	hl,#_cmd
   185F 36 F8              5011 	ld	(hl),#0xF8
   1861 23                 5012 	inc	hl
   1862 36 00              5013 	ld	(hl),#0x00
                           5014 ;demo.c:775: cmd.source_y = 0;
   1864 21r66s31           5015 	ld	hl, #_cmd + 2
   1867 36 00              5016 	ld	(hl),#0x00
   1869 23                 5017 	inc	hl
   186A 36 00              5018 	ld	(hl),#0x00
                           5019 ;demo.c:776: cmd.dest_y = 0;
   186C 21r6As31           5020 	ld	hl, #_cmd + 6
   186F 36 00              5021 	ld	(hl),#0x00
   1871 23                 5022 	inc	hl
   1872 36 00              5023 	ld	(hl),#0x00
                           5024 ;demo.c:778: for (x = 248; x >= 0; x-=8) {
   1874 01 F8 00           5025 	ld	bc,#0x00F8
   1877                    5026 00131$:
   1877 78                 5027 	ld	a,b
   1878 CB 7F              5028 	bit	7,a
   187A 20 38              5029 	jr	NZ,00134$
                           5030 ;demo.c:779: waitVB();
   187C 76                 5031 		halt 
                           5032 ;demo.c:780: cmd.dest_x = x;
   187D 11r68s31           5033 	ld	de,#_cmd + 4
   1880 EB                 5034 	ex	de,hl
   1881 71                 5035 	ld	(hl),c
   1882 23                 5036 	inc	hl
   1883 70                 5037 	ld	(hl),b
                           5038 ;demo.c:781: cmd.dest_y = 0;
   1884 11r6As31           5039 	ld	de,#_cmd + 6
   1887 EB                 5040 	ex	de,hl
   1888 36 00              5041 	ld	(hl),#0x00
   188A 23                 5042 	inc	hl
   188B 36 00              5043 	ld	(hl),#0x00
                           5044 ;demo.c:782: vdp_copier(&cmd);
   188D C5                 5045 	push	bc
   188E 21r64s31           5046 	ld	hl,#_cmd
   1891 E5                 5047 	push	hl
   1892 CDr00s00           5048 	call	_vdp_copier
   1895 F1                 5049 	pop	af
   1896 C1                 5050 	pop	bc
                           5051 ;demo.c:783: cmd.dest_y = 256;
   1897 11r6As31           5052 	ld	de,#_cmd + 6
   189A EB                 5053 	ex	de,hl
   189B 36 00              5054 	ld	(hl),#0x00
   189D 23                 5055 	inc	hl
   189E 36 01              5056 	ld	(hl),#0x01
                           5057 ;demo.c:784: vdp_copier(&cmd);
   18A0 C5                 5058 	push	bc
   18A1 21r64s31           5059 	ld	hl,#_cmd
   18A4 E5                 5060 	push	hl
   18A5 CDr00s00           5061 	call	_vdp_copier
   18A8 F1                 5062 	pop	af
   18A9 C1                 5063 	pop	bc
                           5064 ;demo.c:778: for (x = 248; x >= 0; x-=8) {
   18AA 79                 5065 	ld	a,c
   18AB C6 F8              5066 	add	a,#0xF8
   18AD 4F                 5067 	ld	c,a
   18AE 78                 5068 	ld	a,b
   18AF CE FF              5069 	adc	a,#0xFF
   18B1 47                 5070 	ld	b,a
   18B2 18 C3              5071 	jr	00131$
   18B4                    5072 00134$:
                           5073 ;demo.c:787: drawsine("LET US STOP   WE ARE BUILDING WALLS BETWEEN",8,180);
   18B4 21 08 B4           5074 	ld	hl,#0xB408
   18B7 E5                 5075 	push	hl
   18B8 21r4Ds1B           5076 	ld	hl,#__str_9
   18BB E5                 5077 	push	hl
   18BC CDr20s11           5078 	call	_drawsine
   18BF F1                 5079 	pop	af
   18C0 F1                 5080 	pop	af
                           5081 ;demo.c:789: vdp_load_palette(boxes_palette);
   18C1 21r40s31           5082 	ld	hl,#_boxes_palette
   18C4 E5                 5083 	push	hl
   18C5 CDr00s00           5084 	call	_vdp_load_palette
   18C8 F1                 5085 	pop	af
   18C9                    5086 00104$:
                           5087 ;demo.c:792: if (bt >= 80) bt+=6;
   18C9 3ArD9s31           5088 	ld	a,(#_bt+0)
   18CC D6 50              5089 	sub	a,#0x50
   18CE 3ArDAs31           5090 	ld	a,(#_bt+1)
   18D1 DE 00              5091 	sbc	a,#0x00
   18D3 FArECs18           5092 	jp	M,00106$
   18D6 21rD9s31           5093 	ld	hl,#_bt
   18D9 7E                 5094 	ld	a,(hl)
   18DA C6 06              5095 	add	a,#0x06
   18DC 23                 5096 	inc	hl
   18DD 2B                 5097 	dec	hl
   18DE C5                 5098 	push	bc
   18DF 4F                 5099 	ld	c, a
   18E0 23                 5100 	inc	hl
   18E1 7E                 5101 	ld	a, (hl)
   18E2 47                 5102 	ld	b, a
   18E3 79                 5103 	ld	a, c
   18E4 2B                 5104 	dec	hl
   18E5 77                 5105 	ld	(hl), a
   18E6 78                 5106 	ld	a, b
   18E7 C1                 5107 	pop	bc
   18E8 CE 00              5108 	adc	a,#0x00
   18EA 23                 5109 	inc	hl
   18EB 77                 5110 	ld	(hl),a
   18EC                    5111 00106$:
                           5112 ;demo.c:793: if (bt < 80 && bt >= 60) bt+=5;
   18EC 3ArD9s31           5113 	ld	a,(#_bt+0)
   18EF D6 50              5114 	sub	a,#0x50
   18F1 3ArDAs31           5115 	ld	a,(#_bt+1)
   18F4 DE 00              5116 	sbc	a,#0x00
   18F6 F2r1Cs19           5117 	jp	P,00108$
   18F9 3ArD9s31           5118 	ld	a,(#_bt+0)
   18FC D6 3C              5119 	sub	a,#0x3C
   18FE 3ArDAs31           5120 	ld	a,(#_bt+1)
   1901 DE 00              5121 	sbc	a,#0x00
   1903 FAr1Cs19           5122 	jp	M,00108$
   1906 21rD9s31           5123 	ld	hl,#_bt
   1909 7E                 5124 	ld	a,(hl)
   190A C6 05              5125 	add	a,#0x05
   190C 23                 5126 	inc	hl
   190D 2B                 5127 	dec	hl
   190E C5                 5128 	push	bc
   190F 4F                 5129 	ld	c, a
   1910 23                 5130 	inc	hl
   1911 7E                 5131 	ld	a, (hl)
   1912 47                 5132 	ld	b, a
   1913 79                 5133 	ld	a, c
   1914 2B                 5134 	dec	hl
   1915 77                 5135 	ld	(hl), a
   1916 78                 5136 	ld	a, b
   1917 C1                 5137 	pop	bc
   1918 CE 00              5138 	adc	a,#0x00
   191A 23                 5139 	inc	hl
   191B 77                 5140 	ld	(hl),a
   191C                    5141 00108$:
                           5142 ;demo.c:794: if (bt < 60 && bt >= 40) bt+=4;
   191C 3ArD9s31           5143 	ld	a,(#_bt+0)
   191F D6 3C              5144 	sub	a,#0x3C
   1921 3ArDAs31           5145 	ld	a,(#_bt+1)
   1924 DE 00              5146 	sbc	a,#0x00
   1926 F2r4Cs19           5147 	jp	P,00111$
   1929 3ArD9s31           5148 	ld	a,(#_bt+0)
   192C D6 28              5149 	sub	a,#0x28
   192E 3ArDAs31           5150 	ld	a,(#_bt+1)
   1931 DE 00              5151 	sbc	a,#0x00
   1933 FAr4Cs19           5152 	jp	M,00111$
   1936 21rD9s31           5153 	ld	hl,#_bt
   1939 7E                 5154 	ld	a,(hl)
   193A C6 04              5155 	add	a,#0x04
   193C 23                 5156 	inc	hl
   193D 2B                 5157 	dec	hl
   193E C5                 5158 	push	bc
   193F 4F                 5159 	ld	c, a
   1940 23                 5160 	inc	hl
   1941 7E                 5161 	ld	a, (hl)
   1942 47                 5162 	ld	b, a
   1943 79                 5163 	ld	a, c
   1944 2B                 5164 	dec	hl
   1945 77                 5165 	ld	(hl), a
   1946 78                 5166 	ld	a, b
   1947 C1                 5167 	pop	bc
   1948 CE 00              5168 	adc	a,#0x00
   194A 23                 5169 	inc	hl
   194B 77                 5170 	ld	(hl),a
   194C                    5171 00111$:
                           5172 ;demo.c:795: if (bt < 40 && bt >= 10) bt+=3;
   194C 3ArD9s31           5173 	ld	a,(#_bt+0)
   194F D6 28              5174 	sub	a,#0x28
   1951 3ArDAs31           5175 	ld	a,(#_bt+1)
   1954 DE 00              5176 	sbc	a,#0x00
   1956 F2r7Cs19           5177 	jp	P,00114$
   1959 3ArD9s31           5178 	ld	a,(#_bt+0)
   195C D6 0A              5179 	sub	a,#0x0A
   195E 3ArDAs31           5180 	ld	a,(#_bt+1)
   1961 DE 00              5181 	sbc	a,#0x00
   1963 FAr7Cs19           5182 	jp	M,00114$
   1966 21rD9s31           5183 	ld	hl,#_bt
   1969 7E                 5184 	ld	a,(hl)
   196A C6 03              5185 	add	a,#0x03
   196C 23                 5186 	inc	hl
   196D 2B                 5187 	dec	hl
   196E C5                 5188 	push	bc
   196F 4F                 5189 	ld	c, a
   1970 23                 5190 	inc	hl
   1971 7E                 5191 	ld	a, (hl)
   1972 47                 5192 	ld	b, a
   1973 79                 5193 	ld	a, c
   1974 2B                 5194 	dec	hl
   1975 77                 5195 	ld	(hl), a
   1976 78                 5196 	ld	a, b
   1977 C1                 5197 	pop	bc
   1978 CE 00              5198 	adc	a,#0x00
   197A 23                 5199 	inc	hl
   197B 77                 5200 	ld	(hl),a
   197C                    5201 00114$:
                           5202 ;demo.c:796: if (bt < 10 ) bt+=2;
   197C 3ArD9s31           5203 	ld	a,(#_bt+0)
   197F D6 0A              5204 	sub	a,#0x0A
   1981 3ArDAs31           5205 	ld	a,(#_bt+1)
   1984 DE 00              5206 	sbc	a,#0x00
   1986 F2r9Fs19           5207 	jp	P,00117$
   1989 21rD9s31           5208 	ld	hl,#_bt
   198C 7E                 5209 	ld	a,(hl)
   198D C6 02              5210 	add	a,#0x02
   198F 23                 5211 	inc	hl
   1990 2B                 5212 	dec	hl
   1991 C5                 5213 	push	bc
   1992 4F                 5214 	ld	c, a
   1993 23                 5215 	inc	hl
   1994 7E                 5216 	ld	a, (hl)
   1995 47                 5217 	ld	b, a
   1996 79                 5218 	ld	a, c
   1997 2B                 5219 	dec	hl
   1998 77                 5220 	ld	(hl), a
   1999 78                 5221 	ld	a, b
   199A C1                 5222 	pop	bc
   199B CE 00              5223 	adc	a,#0x00
   199D 23                 5224 	inc	hl
   199E 77                 5225 	ld	(hl),a
   199F                    5226 00117$:
                           5227 ;demo.c:800: cmd.source_x = bx;
   199F ED 4BrD5s31        5228 	ld	bc,(_bx)
   19A3 21r64s31           5229 	ld	hl,#_cmd
   19A6 71                 5230 	ld	(hl),c
   19A7 23                 5231 	inc	hl
   19A8 70                 5232 	ld	(hl),b
                           5233 ;demo.c:801: cmd.source_y = bt;
   19A9 01r66s31           5234 	ld	bc,#_cmd + 2
   19AC ED 5BrD9s31        5235 	ld	de,(_bt)
   19B0 69                 5236 	ld	l,c
   19B1 60                 5237 	ld	h,b
   19B2 73                 5238 	ld	(hl),e
   19B3 23                 5239 	inc	hl
   19B4 72                 5240 	ld	(hl),d
                           5241 ;demo.c:802: cmd.dest_x = 0;
   19B5 21r68s31           5242 	ld	hl, #_cmd + 4
   19B8 36 00              5243 	ld	(hl),#0x00
   19BA 23                 5244 	inc	hl
   19BB 36 00              5245 	ld	(hl),#0x00
                           5246 ;demo.c:803: cmd.dest_y = 256;
   19BD 21r6As31           5247 	ld	hl, #_cmd + 6
   19C0 36 00              5248 	ld	(hl),#0x00
   19C2 23                 5249 	inc	hl
   19C3 36 01              5250 	ld	(hl),#0x01
                           5251 ;demo.c:804: cmd.size_x = 42;
   19C5 21r6Cs31           5252 	ld	hl, #_cmd + 8
   19C8 36 2A              5253 	ld	(hl),#0x2A
   19CA 23                 5254 	inc	hl
   19CB 36 00              5255 	ld	(hl),#0x00
                           5256 ;demo.c:805: cmd.size_y = 42;
   19CD 21r6Es31           5257 	ld	hl, #_cmd + 10
   19D0 36 2A              5258 	ld	(hl),#0x2A
   19D2 23                 5259 	inc	hl
   19D3 36 00              5260 	ld	(hl),#0x00
                           5261 ;demo.c:806: cmd.data = 0;
                           5262 ;demo.c:807: cmd.argument = 0x00;
   19D5 3E 00              5263 	ld	a,#0x00
   19D7 32r70s31           5264 	ld	(#_cmd + 12),a
   19DA 32r71s31           5265 	ld	(#_cmd + 13),a
                           5266 ;demo.c:808: cmd.command = 0xD0; // HMMM
   19DD 3E D0              5267 	ld	a,#0xD0
   19DF 32r72s31           5268 	ld	(#_cmd + 14),a
                           5269 ;demo.c:809: vdp_copier(&cmd);
   19E2 21r64s31           5270 	ld	hl,#_cmd
   19E5 E5                 5271 	push	hl
   19E6 CDr00s00           5272 	call	_vdp_copier
   19E9 F1                 5273 	pop	af
                           5274 ;demo.c:811: pbx = bx;
   19EA 2ArD5s31           5275 	ld	hl,(_bx)
   19ED FD 21rE3s31        5276 	ld	iy,#_pbx
   19F1 FD 75 00           5277 	ld	0 (iy),l
   19F4 FD 21rE3s31        5278 	ld	iy,#_pbx
   19F8 FD 74 01           5279 	ld	1 (iy),h
                           5280 ;demo.c:812: pbt = bt;
   19FB 2ArD9s31           5281 	ld	hl,(_bt)
   19FE FD 21rE5s31        5282 	ld	iy,#_pbt
   1A02 FD 75 00           5283 	ld	0 (iy),l
   1A05 FD 21rE5s31        5284 	ld	iy,#_pbt
   1A09 FD 74 01           5285 	ld	1 (iy),h
                           5286 ;demo.c:814: waitVB();
   1A0C 76                 5287 		halt 
                           5288 ;demo.c:816: drawbox(bxx,byy,bx,bt);
   1A0D 21rD9s31           5289 	ld	hl,#_bt + 0
   1A10 4E                 5290 	ld	c,(hl)
   1A11 21rD5s31           5291 	ld	hl,#_bx + 0
   1A14 46                 5292 	ld	b,(hl)
   1A15 79                 5293 	ld	a,c
   1A16 F5                 5294 	push	af
   1A17 33                 5295 	inc	sp
   1A18 C5                 5296 	push	bc
   1A19 33                 5297 	inc	sp
   1A1A 2ArDDs31           5298 	ld	hl,(_byy)
   1A1D E5                 5299 	push	hl
   1A1E 2ArDBs31           5300 	ld	hl,(_bxx)
   1A21 E5                 5301 	push	hl
   1A22 CDr18s17           5302 	call	_drawbox
   1A25 F1                 5303 	pop	af
   1A26 F1                 5304 	pop	af
   1A27 F1                 5305 	pop	af
                           5306 ;demo.c:818: waitVB();
   1A28 76                 5307 		halt 
                           5308 ;demo.c:820: bonc = 1;
   1A29 21rE1s31           5309 	ld	hl,#_bonc + 0
   1A2C 36 01              5310 	ld	(hl), #0x01
   1A2E 21rE2s31           5311 	ld	hl,#_bonc + 1
   1A31 36 00              5312 	ld	(hl), #0x00
                           5313 ;demo.c:821: if (bt > by) {
   1A33 21rD7s31           5314 	ld	hl,#_by
   1A36 7E                 5315 	ld	a,(hl)
   1A37 FD 21rD9s31        5316 	ld	iy,#_bt
   1A3B FD 96 00           5317 	sub	a,0 (iy)
   1A3E 23                 5318 	inc	hl
   1A3F 7E                 5319 	ld	a,(hl)
   1A40 FD 21rD9s31        5320 	ld	iy,#_bt
   1A44 FD 9E 01           5321 	sbc	a,1 (iy)
   1A47 F0                 5322 	ret	P
                           5323 ;demo.c:823: bt = 0;
   1A48 21rD9s31           5324 	ld	hl,#_bt + 0
   1A4B 36 00              5325 	ld	(hl), #0x00
   1A4D 21rDAs31           5326 	ld	hl,#_bt + 1
   1A50 36 00              5327 	ld	(hl), #0x00
                           5328 ;demo.c:824: if (by > 0) {
   1A52 3E 00              5329 	ld	a,#0x00
   1A54 FD 21rD7s31        5330 	ld	iy,#_by
   1A58 FD 96 00           5331 	sub	a,0 (iy)
   1A5B 3E 00              5332 	ld	a,#0x00
   1A5D FD 21rD7s31        5333 	ld	iy,#_by
   1A61 FD 9E 01           5334 	sbc	a,1 (iy)
   1A64 F2rCAs1A           5335 	jp	P,00127$
                           5336 ;demo.c:825: bonc = 0;
   1A67 21rE1s31           5337 	ld	hl,#_bonc + 0
   1A6A 36 00              5338 	ld	(hl), #0x00
   1A6C 21rE2s31           5339 	ld	hl,#_bonc + 1
   1A6F 36 00              5340 	ld	(hl), #0x00
                           5341 ;demo.c:826: by-=16;
   1A71 21rD7s31           5342 	ld	hl,#_by
   1A74 7E                 5343 	ld	a,(hl)
   1A75 C6 F0              5344 	add	a,#0xF0
   1A77 77                 5345 	ld	(hl),a
   1A78 23                 5346 	inc	hl
   1A79 7E                 5347 	ld	a,(hl)
   1A7A CE FF              5348 	adc	a,#0xFF
   1A7C 77                 5349 	ld	(hl),a
                           5350 ;demo.c:827: bxx++;
   1A7D FD 21rDBs31        5351 	ld	iy,#_bxx
   1A81 FD 34 00           5352 	inc	0 (iy)
   1A84 20 07              5353 	jr	NZ,00158$
   1A86 FD 21rDBs31        5354 	ld	iy,#_bxx
   1A8A FD 34 01           5355 	inc	1 (iy)
   1A8D                    5356 00158$:
                           5357 ;demo.c:828: if (bxx >= 4) { bxx = 0; byy++; }
   1A8D 3ArDBs31           5358 	ld	a,(#_bxx+0)
   1A90 D6 04              5359 	sub	a,#0x04
   1A92 3ArDCs31           5360 	ld	a,(#_bxx+1)
   1A95 DE 00              5361 	sbc	a,#0x00
   1A97 FArB4s1A           5362 	jp	M,00119$
   1A9A 21rDBs31           5363 	ld	hl,#_bxx + 0
   1A9D 36 00              5364 	ld	(hl), #0x00
   1A9F 21rDCs31           5365 	ld	hl,#_bxx + 1
   1AA2 36 00              5366 	ld	(hl), #0x00
   1AA4 FD 21rDDs31        5367 	ld	iy,#_byy
   1AA8 FD 34 00           5368 	inc	0 (iy)
   1AAB 20 07              5369 	jr	NZ,00159$
   1AAD FD 21rDDs31        5370 	ld	iy,#_byy
   1AB1 FD 34 01           5371 	inc	1 (iy)
   1AB4                    5372 00159$:
   1AB4                    5373 00119$:
                           5374 ;demo.c:829: if (byy >= 2) { byy = 0; }
   1AB4 3ArDDs31           5375 	ld	a,(#_byy+0)
   1AB7 D6 02              5376 	sub	a,#0x02
   1AB9 3ArDEs31           5377 	ld	a,(#_byy+1)
   1ABC DE 00              5378 	sbc	a,#0x00
   1ABE F8                 5379 	ret	M
   1ABF 21rDDs31           5380 	ld	hl,#_byy + 0
   1AC2 36 00              5381 	ld	(hl), #0x00
   1AC4 21rDEs31           5382 	ld	hl,#_byy + 1
   1AC7 36 00              5383 	ld	(hl), #0x00
   1AC9 C9                 5384 	ret
   1ACA                    5385 00127$:
                           5386 ;demo.c:831: bx-=21;
   1ACA 21rD5s31           5387 	ld	hl,#_bx
   1ACD 7E                 5388 	ld	a,(hl)
   1ACE C6 EB              5389 	add	a,#0xEB
   1AD0 77                 5390 	ld	(hl),a
   1AD1 23                 5391 	inc	hl
   1AD2 7E                 5392 	ld	a,(hl)
   1AD3 CE FF              5393 	adc	a,#0xFF
   1AD5 77                 5394 	ld	(hl),a
                           5395 ;demo.c:832: bo+=11;
   1AD6 21rDFs31           5396 	ld	hl,#_bo
   1AD9 7E                 5397 	ld	a,(hl)
   1ADA C6 0B              5398 	add	a,#0x0B
   1ADC 23                 5399 	inc	hl
   1ADD 2B                 5400 	dec	hl
   1ADE C5                 5401 	push	bc
   1ADF 4F                 5402 	ld	c, a
   1AE0 23                 5403 	inc	hl
   1AE1 7E                 5404 	ld	a, (hl)
   1AE2 47                 5405 	ld	b, a
   1AE3 79                 5406 	ld	a, c
   1AE4 2B                 5407 	dec	hl
   1AE5 77                 5408 	ld	(hl), a
   1AE6 78                 5409 	ld	a, b
   1AE7 C1                 5410 	pop	bc
   1AE8 CE 00              5411 	adc	a,#0x00
   1AEA 23                 5412 	inc	hl
   1AEB 77                 5413 	ld	(hl),a
                           5414 ;demo.c:833: if (bo > 192) bo = 0;
   1AEC 3E C0              5415 	ld	a,#0xC0
   1AEE FD 21rDFs31        5416 	ld	iy,#_bo
   1AF2 FD 96 00           5417 	sub	a,0 (iy)
   1AF5 3E 00              5418 	ld	a,#0x00
   1AF7 FD 21rDFs31        5419 	ld	iy,#_bo
   1AFB FD 9E 01           5420 	sbc	a,1 (iy)
   1AFE F2r0Bs1B           5421 	jp	P,00123$
   1B01 21rDFs31           5422 	ld	hl,#_bo + 0
   1B04 36 00              5423 	ld	(hl), #0x00
   1B06 21rE0s31           5424 	ld	hl,#_bo + 1
   1B09 36 00              5425 	ld	(hl), #0x00
   1B0B                    5426 00123$:
                           5427 ;demo.c:834: by=84+bo;
   1B0B 21rD7s31           5428 	ld	hl,#_by
   1B0E 3ArDFs31           5429 	ld	a,(#_bo+0)
   1B11 C6 54              5430 	add	a,#0x54
   1B13 77                 5431 	ld	(hl),a
   1B14 3ArE0s31           5432 	ld	a,(#_bo+1)
   1B17 CE 00              5433 	adc	a,#0x00
   1B19 23                 5434 	inc	hl
   1B1A 77                 5435 	ld	(hl),a
                           5436 ;demo.c:835: if (bx <= 0) {
   1B1B 3E 00              5437 	ld	a,#0x00
   1B1D FD 21rD5s31        5438 	ld	iy,#_bx
   1B21 FD 96 00           5439 	sub	a,0 (iy)
   1B24 3E 00              5440 	ld	a,#0x00
   1B26 FD 21rD5s31        5441 	ld	iy,#_bx
   1B2A FD 9E 01           5442 	sbc	a,1 (iy)
   1B2D F8                 5443 	ret	M
                           5444 ;demo.c:836: bx = 256;
   1B2E 21rD5s31           5445 	ld	hl,#_bx + 0
   1B31 36 00              5446 	ld	(hl), #0x00
   1B33 21rD6s31           5447 	ld	hl,#_bx + 1
   1B36 36 01              5448 	ld	(hl), #0x01
                           5449 ;demo.c:837: bo = 0;
   1B38 21rDFs31           5450 	ld	hl,#_bo + 0
   1B3B 36 00              5451 	ld	(hl), #0x00
   1B3D 21rE0s31           5452 	ld	hl,#_bo + 1
   1B40 36 00              5453 	ld	(hl), #0x00
                           5454 ;demo.c:838: by = 84;
   1B42 21rD7s31           5455 	ld	hl,#_by + 0
   1B45 36 54              5456 	ld	(hl), #0x54
   1B47 21rD8s31           5457 	ld	hl,#_by + 1
   1B4A 36 00              5458 	ld	(hl), #0x00
   1B4C C9                 5459 	ret
   1B4D                    5460 _boxes_end::
   1B4D                    5461 __str_9:
   1B4D 4C 45 54 20 55 53  5462 	.ascii "LET US STOP   WE ARE BUILDING WALLS BETWEEN"
        20 53 54 4F 50 20
        20 20 57 45 20 41
        52 45 20 42 55 49
        4C 44 49 4E 47 20
        57 41 4C 4C 53 20
        42 45 54 57 45 45
        4E
   1B78 00                 5463 	.db 0x00
                           5464 ;demo.c:849: void drawtritile(uint8_t tx, int ty, uint8_t x, uint8_t y) {
                           5465 ;	---------------------------------
                           5466 ; Function drawtritile
                           5467 ; ---------------------------------
   1B79                    5468 _drawtritile_start::
   1B79                    5469 _drawtritile:
   1B79 DD E5              5470 	push	ix
   1B7B DD 21 00 00        5471 	ld	ix,#0
   1B7F DD 39              5472 	add	ix,sp
                           5473 ;demo.c:850: cmd.source_x = tx;
   1B81 DD 4E 04           5474 	ld	c,4 (ix)
   1B84 06 00              5475 	ld	b,#0x00
   1B86 21r64s31           5476 	ld	hl,#_cmd
   1B89 71                 5477 	ld	(hl),c
   1B8A 23                 5478 	inc	hl
   1B8B 70                 5479 	ld	(hl),b
                           5480 ;demo.c:851: cmd.source_y = ty-1;
   1B8C 01r66s31           5481 	ld	bc,#_cmd + 2
   1B8F DD 5E 05           5482 	ld	e,5 (ix)
   1B92 DD 56 06           5483 	ld	d,6 (ix)
   1B95 1B                 5484 	dec	de
   1B96 69                 5485 	ld	l,c
   1B97 60                 5486 	ld	h,b
   1B98 73                 5487 	ld	(hl),e
   1B99 23                 5488 	inc	hl
   1B9A 72                 5489 	ld	(hl),d
                           5490 ;demo.c:852: cmd.dest_x = x;
   1B9B 01r68s31           5491 	ld	bc,#_cmd + 4
   1B9E DD 5E 07           5492 	ld	e,7 (ix)
   1BA1 16 00              5493 	ld	d,#0x00
   1BA3 69                 5494 	ld	l,c
   1BA4 60                 5495 	ld	h,b
   1BA5 73                 5496 	ld	(hl),e
   1BA6 23                 5497 	inc	hl
   1BA7 72                 5498 	ld	(hl),d
                           5499 ;demo.c:853: cmd.dest_y = y;
   1BA8 01r6As31           5500 	ld	bc,#_cmd + 6
   1BAB DD 5E 08           5501 	ld	e,8 (ix)
   1BAE 16 00              5502 	ld	d,#0x00
   1BB0 69                 5503 	ld	l,c
   1BB1 60                 5504 	ld	h,b
   1BB2 73                 5505 	ld	(hl),e
   1BB3 23                 5506 	inc	hl
   1BB4 72                 5507 	ld	(hl),d
                           5508 ;demo.c:854: cmd.size_x = 16;
   1BB5 21r6Cs31           5509 	ld	hl, #_cmd + 8
   1BB8 36 10              5510 	ld	(hl),#0x10
   1BBA 23                 5511 	inc	hl
   1BBB 36 00              5512 	ld	(hl),#0x00
                           5513 ;demo.c:855: cmd.size_y = 16;
   1BBD 21r6Es31           5514 	ld	hl, #_cmd + 10
   1BC0 36 10              5515 	ld	(hl),#0x10
   1BC2 23                 5516 	inc	hl
   1BC3 36 00              5517 	ld	(hl),#0x00
                           5518 ;demo.c:856: cmd.data = 0;
                           5519 ;demo.c:857: cmd.argument = 0x00;
   1BC5 3E 00              5520 	ld	a,#0x00
   1BC7 32r70s31           5521 	ld	(#_cmd + 12),a
   1BCA 32r71s31           5522 	ld	(#_cmd + 13),a
                           5523 ;demo.c:858: cmd.command = 0xd0; // HMMM
   1BCD 3E D0              5524 	ld	a,#0xD0
   1BCF 32r72s31           5525 	ld	(#_cmd + 14),a
                           5526 ;demo.c:859: vdp_copier(&cmd);
   1BD2 21r64s31           5527 	ld	hl,#_cmd
   1BD5 E5                 5528 	push	hl
   1BD6 CDr00s00           5529 	call	_vdp_copier
   1BD9 F1                 5530 	pop	af
   1BDA DD E1              5531 	pop	ix
   1BDC C9                 5532 	ret
   1BDD                    5533 _drawtritile_end::
                           5534 ;demo.c:862: void drawtilescreen(char* tripic) {
                           5535 ;	---------------------------------
                           5536 ; Function drawtilescreen
                           5537 ; ---------------------------------
   1BDD                    5538 _drawtilescreen_start::
   1BDD                    5539 _drawtilescreen:
   1BDD DD E5              5540 	push	ix
   1BDF DD 21 00 00        5541 	ld	ix,#0
   1BE3 DD 39              5542 	add	ix,sp
   1BE5 21 F8 FF           5543 	ld	hl,#-8
   1BE8 39                 5544 	add	hl,sp
   1BE9 F9                 5545 	ld	sp,hl
                           5546 ;demo.c:863: int x = 0;
   1BEA DD 36 FE 00        5547 	ld	-2 (ix),#0x00
   1BEE DD 36 FF 00        5548 	ld	-1 (ix),#0x00
                           5549 ;demo.c:866: while(i < 256) {
   1BF2 DD 36 FC 00        5550 	ld	-4 (ix),#0x00
   1BF6 DD 36 FD 00        5551 	ld	-3 (ix),#0x00
   1BFA DD 36 FA 00        5552 	ld	-6 (ix),#0x00
   1BFE DD 36 FB 00        5553 	ld	-5 (ix),#0x00
   1C02                    5554 00103$:
   1C02 DD 7E FA           5555 	ld	a,-6 (ix)
   1C05 D6 00              5556 	sub	a,#0x00
   1C07 DD 7E FB           5557 	ld	a,-5 (ix)
   1C0A DE 01              5558 	sbc	a,#0x01
   1C0C F2r93s1C           5559 	jp	P,00106$
                           5560 ;demo.c:867: drawtritile(tri_lookup_x[tripic[i]],tri_lookup_y[tripic[i]],x,y);
   1C0F DD 7E FC           5561 	ld	a,-4 (ix)
   1C12 DD 77 F8           5562 	ld	-8 (ix),a
   1C15 DD 7E FE           5563 	ld	a,-2 (ix)
   1C18 DD 77 F9           5564 	ld	-7 (ix),a
   1C1B DD 7E 04           5565 	ld	a,4 (ix)
   1C1E DD 86 FA           5566 	add	a,-6 (ix)
   1C21 4F                 5567 	ld	c,a
   1C22 DD 7E 05           5568 	ld	a,5 (ix)
   1C25 DD 8E FB           5569 	adc	a,-5 (ix)
   1C28 47                 5570 	ld	b,a
   1C29 0A                 5571 	ld	a,(bc)
   1C2A 4F                 5572 	ld	c,a
   1C2B 87                 5573 	add	a,a
   1C2C C6r20              5574 	add	a,#<_tri_lookup_y
   1C2E 6F                 5575 	ld	l,a
   1C2F 3Es01              5576 	ld	a,#>_tri_lookup_y
   1C31 CE 00              5577 	adc	a,#0x00
   1C33 67                 5578 	ld	h,a
   1C34 46                 5579 	ld	b,(hl)
   1C35 23                 5580 	inc	hl
   1C36 56                 5581 	ld	d,(hl)
   1C37 3Er00              5582 	ld	a,#<_tri_lookup_x
   1C39 81                 5583 	add	a,c
   1C3A 6F                 5584 	ld	l,a
   1C3B 3Es01              5585 	ld	a,#>_tri_lookup_x
   1C3D CE 00              5586 	adc	a,#0x00
   1C3F 67                 5587 	ld	h,a
   1C40 4E                 5588 	ld	c,(hl)
   1C41 DD 66 F8           5589 	ld	h,-8 (ix)
   1C44 DD 6E F9           5590 	ld	l,-7 (ix)
   1C47 E5                 5591 	push	hl
   1C48 58                 5592 	ld	e,b
   1C49 D5                 5593 	push	de
   1C4A 79                 5594 	ld	a,c
   1C4B F5                 5595 	push	af
   1C4C 33                 5596 	inc	sp
   1C4D CDr79s1B           5597 	call	_drawtritile
   1C50 F1                 5598 	pop	af
   1C51 F1                 5599 	pop	af
   1C52 33                 5600 	inc	sp
                           5601 ;demo.c:868: x+=16;
   1C53 DD 7E FE           5602 	ld	a,-2 (ix)
   1C56 C6 10              5603 	add	a,#0x10
   1C58 DD 77 FE           5604 	ld	-2 (ix),a
   1C5B DD 7E FF           5605 	ld	a,-1 (ix)
   1C5E CE 00              5606 	adc	a,#0x00
   1C60 DD 77 FF           5607 	ld	-1 (ix),a
                           5608 ;demo.c:869: if (x >= 256) {x = 0; y+=16;}
   1C63 DD 7E FE           5609 	ld	a,-2 (ix)
   1C66 D6 00              5610 	sub	a,#0x00
   1C68 DD 7E FF           5611 	ld	a,-1 (ix)
   1C6B DE 01              5612 	sbc	a,#0x01
   1C6D FAr88s1C           5613 	jp	M,00102$
   1C70 DD 36 FE 00        5614 	ld	-2 (ix),#0x00
   1C74 DD 36 FF 00        5615 	ld	-1 (ix),#0x00
   1C78 DD 7E FC           5616 	ld	a,-4 (ix)
   1C7B C6 10              5617 	add	a,#0x10
   1C7D DD 77 FC           5618 	ld	-4 (ix),a
   1C80 DD 7E FD           5619 	ld	a,-3 (ix)
   1C83 CE 00              5620 	adc	a,#0x00
   1C85 DD 77 FD           5621 	ld	-3 (ix),a
   1C88                    5622 00102$:
                           5623 ;demo.c:870: i++;
   1C88 DD 34 FA           5624 	inc	-6 (ix)
   1C8B 20 03              5625 	jr	NZ,00112$
   1C8D DD 34 FB           5626 	inc	-5 (ix)
   1C90                    5627 00112$:
   1C90 C3r02s1C           5628 	jp	00103$
   1C93                    5629 00106$:
   1C93 DD F9              5630 	ld	sp,ix
   1C95 DD E1              5631 	pop	ix
   1C97 C9                 5632 	ret
   1C98                    5633 _drawtilescreen_end::
                           5634 ;demo.c:885: void tritiles() {
                           5635 ;	---------------------------------
                           5636 ; Function tritiles
                           5637 ; ---------------------------------
   1C98                    5638 _tritiles_start::
   1C98                    5639 _tritiles:
   1C98 DD E5              5640 	push	ix
   1C9A DD 21 00 00        5641 	ld	ix,#0
   1C9E DD 39              5642 	add	ix,sp
   1CA0 21 FB FF           5643 	ld	hl,#-5
   1CA3 39                 5644 	add	hl,sp
   1CA4 F9                 5645 	ld	sp,hl
                           5646 ;demo.c:892: if (tri_inited == 0) {
   1CA5 AF                 5647 	xor	a,a
   1CA6 21rE7s31           5648 	ld	hl,#_tri_inited + 0
   1CA9 B6                 5649 	or	a,(hl)
   1CAA C2r49s1D           5650 	jp	NZ,00102$
                           5651 ;demo.c:893: tri_inited = 1;
   1CAD FD 21rE7s31        5652 	ld	iy,#_tri_inited
   1CB1 FD 36 00 01        5653 	ld	0 (iy),#0x01
                           5654 ;demo.c:895: cmd.size_x = 256;
   1CB5 21r6Cs31           5655 	ld	hl, #_cmd + 8
   1CB8 36 00              5656 	ld	(hl),#0x00
   1CBA 23                 5657 	inc	hl
   1CBB 36 01              5658 	ld	(hl),#0x01
                           5659 ;demo.c:896: cmd.size_y = 1;
   1CBD 21r6Es31           5660 	ld	hl, #_cmd + 10
   1CC0 36 01              5661 	ld	(hl),#0x01
   1CC2 23                 5662 	inc	hl
   1CC3 36 00              5663 	ld	(hl),#0x00
                           5664 ;demo.c:897: cmd.data = 0;
                           5665 ;demo.c:898: cmd.argument = 0x00; // from 70xY to left
   1CC5 3E 00              5666 	ld	a,#0x00
   1CC7 32r70s31           5667 	ld	(#_cmd + 12),a
   1CCA 32r71s31           5668 	ld	(#_cmd + 13),a
                           5669 ;demo.c:899: cmd.command = 0xd0; // vram to vram, y only
   1CCD 01r72s31           5670 	ld	bc,#_cmd + 14
   1CD0 3E D0              5671 	ld	a,#0xD0
   1CD2 02                 5672 	ld	(bc),a
                           5673 ;demo.c:900: cmd.source_x = 0;
   1CD3 21r64s31           5674 	ld	hl,#_cmd
   1CD6 36 00              5675 	ld	(hl),#0x00
   1CD8 23                 5676 	inc	hl
   1CD9 36 00              5677 	ld	(hl),#0x00
                           5678 ;demo.c:901: cmd.source_y = 255;
   1CDB 21r66s31           5679 	ld	hl, #_cmd + 2
   1CDE 36 FF              5680 	ld	(hl),#0xFF
   1CE0 23                 5681 	inc	hl
   1CE1 36 00              5682 	ld	(hl),#0x00
                           5683 ;demo.c:902: cmd.dest_y = 0;
   1CE3 01r6As31           5684 	ld	bc,#_cmd + 6
   1CE6 69                 5685 	ld	l,c
   1CE7 60                 5686 	ld	h,b
   1CE8 36 00              5687 	ld	(hl),#0x00
   1CEA 23                 5688 	inc	hl
   1CEB 36 00              5689 	ld	(hl),#0x00
                           5690 ;demo.c:904: for (x = 0; x < 212; x++) {
   1CED DD 36 FE D4        5691 	ld	-2 (ix),#0xD4
   1CF1 DD 36 FF 00        5692 	ld	-1 (ix),#0x00
   1CF5                    5693 00121$:
                           5694 ;demo.c:905: waitVB();
   1CF5 76                 5695 		halt 
                           5696 ;demo.c:906: cmd.dest_x = 0;
   1CF6 11r68s31           5697 	ld	de,#_cmd + 4
   1CF9 EB                 5698 	ex	de,hl
   1CFA 36 00              5699 	ld	(hl),#0x00
   1CFC 23                 5700 	inc	hl
   1CFD 36 00              5701 	ld	(hl),#0x00
                           5702 ;demo.c:907: cmd.dest_y = x;
   1CFF 11r6As31           5703 	ld	de,#_cmd + 6
   1D02 DD 4E FE           5704 	ld	c,-2 (ix)
   1D05 DD 46 FF           5705 	ld	b,-1 (ix)
   1D08 0B                 5706 	dec	bc
   1D09 EB                 5707 	ex	de,hl
   1D0A 71                 5708 	ld	(hl),c
   1D0B 23                 5709 	inc	hl
   1D0C 70                 5710 	ld	(hl),b
                           5711 ;demo.c:908: vdp_copier(&cmd);
   1D0D C5                 5712 	push	bc
   1D0E 21r64s31           5713 	ld	hl,#_cmd
   1D11 E5                 5714 	push	hl
   1D12 CDr00s00           5715 	call	_vdp_copier
   1D15 F1                 5716 	pop	af
   1D16 C1                 5717 	pop	bc
   1D17 DD 71 FE           5718 	ld	-2 (ix),c
   1D1A DD 70 FF           5719 	ld	-1 (ix),b
                           5720 ;demo.c:904: for (x = 0; x < 212; x++) {
   1D1D DD 7E FE           5721 	ld	a,-2 (ix)
   1D20 DD B6 FF           5722 	or	a,-1 (ix)
   1D23 20 D0              5723 	jr	NZ,00121$
                           5724 ;demo.c:910: vdp_register(9,2); // 192 lines
   1D25 21 09 02           5725 	ld	hl,#0x0209
   1D28 E5                 5726 	push	hl
   1D29 CDr00s00           5727 	call	_vdp_register
   1D2C F1                 5728 	pop	af
                           5729 ;demo.c:912: vdp_load_palette(boxes_palette);
   1D2D 21r40s31           5730 	ld	hl,#_boxes_palette
   1D30 E5                 5731 	push	hl
   1D31 CDr00s00           5732 	call	_vdp_load_palette
   1D34 F1                 5733 	pop	af
                           5734 ;demo.c:913: msx2_palette(15,0,0,0);
   1D35 21 00 00           5735 	ld	hl,#0x0000
   1D38 E5                 5736 	push	hl
   1D39 2E 0F              5737 	ld	l, #0x0F
   1D3B E5                 5738 	push	hl
   1D3C CDr00s00           5739 	call	_msx2_palette
   1D3F F1                 5740 	pop	af
   1D40 F1                 5741 	pop	af
                           5742 ;demo.c:915: drawtilescreen(tri_center);
   1D41 21r2Cs02           5743 	ld	hl,#_tri_center
   1D44 E5                 5744 	push	hl
   1D45 CDrDDs1B           5745 	call	_drawtilescreen
   1D48 F1                 5746 	pop	af
   1D49                    5747 00102$:
                           5748 ;demo.c:920: triframes++;
   1D49 FD 21rF2s31        5749 	ld	iy,#_triframes
   1D4D FD 34 00           5750 	inc	0 (iy)
   1D50 20 07              5751 	jr	NZ,00142$
   1D52 FD 21rF2s31        5752 	ld	iy,#_triframes
   1D56 FD 34 01           5753 	inc	1 (iy)
   1D59                    5754 00142$:
                           5755 ;demo.c:921: if (triframes == 200) {
   1D59 3ArF2s31           5756 	ld	a,(#_triframes+0)
   1D5C D6 C8              5757 	sub	a,#0xC8
   1D5E 20 06              5758 	jr	NZ,00143$
   1D60 3ArF3s31           5759 	ld	a,(#_triframes+1)
   1D63 B7                 5760 	or	a,a
   1D64 28 02              5761 	jr	Z,00144$
   1D66                    5762 00143$:
   1D66 18 08              5763 	jr	00104$
   1D68                    5764 00144$:
                           5765 ;demo.c:922: drawtilescreen(tri_up);
   1D68 21rECs02           5766 	ld	hl,#_tri_up
   1D6B E5                 5767 	push	hl
   1D6C CDrDDs1B           5768 	call	_drawtilescreen
   1D6F F1                 5769 	pop	af
   1D70                    5770 00104$:
                           5771 ;demo.c:925: if (triframes == 400) {
   1D70 3ArF2s31           5772 	ld	a,(#_triframes+0)
   1D73 D6 90              5773 	sub	a,#0x90
   1D75 20 07              5774 	jr	NZ,00145$
   1D77 3ArF3s31           5775 	ld	a,(#_triframes+1)
   1D7A D6 01              5776 	sub	a,#0x01
   1D7C 28 02              5777 	jr	Z,00146$
   1D7E                    5778 00145$:
   1D7E 18 08              5779 	jr	00106$
   1D80                    5780 00146$:
                           5781 ;demo.c:926: drawtilescreen(tri_dia);
   1D80 21rACs03           5782 	ld	hl,#_tri_dia
   1D83 E5                 5783 	push	hl
   1D84 CDrDDs1B           5784 	call	_drawtilescreen
   1D87 F1                 5785 	pop	af
   1D88                    5786 00106$:
                           5787 ;demo.c:928: if (triframes == 600) {
   1D88 3ArF2s31           5788 	ld	a,(#_triframes+0)
   1D8B D6 58              5789 	sub	a,#0x58
   1D8D 20 07              5790 	jr	NZ,00147$
   1D8F 3ArF3s31           5791 	ld	a,(#_triframes+1)
   1D92 D6 02              5792 	sub	a,#0x02
   1D94 28 02              5793 	jr	Z,00148$
   1D96                    5794 00147$:
   1D96 18 08              5795 	jr	00108$
   1D98                    5796 00148$:
                           5797 ;demo.c:929: drawtilescreen(tri_side1);
   1D98 21r6Cs04           5798 	ld	hl,#_tri_side1
   1D9B E5                 5799 	push	hl
   1D9C CDrDDs1B           5800 	call	_drawtilescreen
   1D9F F1                 5801 	pop	af
   1DA0                    5802 00108$:
                           5803 ;demo.c:931: if (triframes == 700) {
   1DA0 3ArF2s31           5804 	ld	a,(#_triframes+0)
   1DA3 D6 BC              5805 	sub	a,#0xBC
   1DA5 20 07              5806 	jr	NZ,00149$
   1DA7 3ArF3s31           5807 	ld	a,(#_triframes+1)
   1DAA D6 02              5808 	sub	a,#0x02
   1DAC 28 02              5809 	jr	Z,00150$
   1DAE                    5810 00149$:
   1DAE 18 08              5811 	jr	00110$
   1DB0                    5812 00150$:
                           5813 ;demo.c:932: drawtilescreen(tri_side2);
   1DB0 21r2Cs05           5814 	ld	hl,#_tri_side2
   1DB3 E5                 5815 	push	hl
   1DB4 CDrDDs1B           5816 	call	_drawtilescreen
   1DB7 F1                 5817 	pop	af
   1DB8                    5818 00110$:
                           5819 ;demo.c:934: if (triframes == 800) {
   1DB8 3ArF2s31           5820 	ld	a,(#_triframes+0)
   1DBB D6 20              5821 	sub	a,#0x20
   1DBD 20 07              5822 	jr	NZ,00151$
   1DBF 3ArF3s31           5823 	ld	a,(#_triframes+1)
   1DC2 D6 03              5824 	sub	a,#0x03
   1DC4 28 02              5825 	jr	Z,00152$
   1DC6                    5826 00151$:
   1DC6 18 08              5827 	jr	00112$
   1DC8                    5828 00152$:
                           5829 ;demo.c:935: drawtilescreen(tri_side1);
   1DC8 21r6Cs04           5830 	ld	hl,#_tri_side1
   1DCB E5                 5831 	push	hl
   1DCC CDrDDs1B           5832 	call	_drawtilescreen
   1DCF F1                 5833 	pop	af
   1DD0                    5834 00112$:
                           5835 ;demo.c:937: if (triframes == 900) {
   1DD0 3ArF2s31           5836 	ld	a,(#_triframes+0)
   1DD3 D6 84              5837 	sub	a,#0x84
   1DD5 20 07              5838 	jr	NZ,00153$
   1DD7 3ArF3s31           5839 	ld	a,(#_triframes+1)
   1DDA D6 03              5840 	sub	a,#0x03
   1DDC 28 02              5841 	jr	Z,00154$
   1DDE                    5842 00153$:
   1DDE 18 08              5843 	jr	00114$
   1DE0                    5844 00154$:
                           5845 ;demo.c:938: drawtilescreen(tri_side2);
   1DE0 21r2Cs05           5846 	ld	hl,#_tri_side2
   1DE3 E5                 5847 	push	hl
   1DE4 CDrDDs1B           5848 	call	_drawtilescreen
   1DE7 F1                 5849 	pop	af
   1DE8                    5850 00114$:
                           5851 ;demo.c:940: if (triframes == 1000) {
   1DE8 3ArF2s31           5852 	ld	a,(#_triframes+0)
   1DEB D6 E8              5853 	sub	a,#0xE8
   1DED 20 07              5854 	jr	NZ,00155$
   1DEF 3ArF3s31           5855 	ld	a,(#_triframes+1)
   1DF2 D6 03              5856 	sub	a,#0x03
   1DF4 28 02              5857 	jr	Z,00156$
   1DF6                    5858 00155$:
   1DF6 18 12              5859 	jr	00116$
   1DF8                    5860 00156$:
                           5861 ;demo.c:941: triframes = 0;
   1DF8 21rF2s31           5862 	ld	hl,#_triframes + 0
   1DFB 36 00              5863 	ld	(hl), #0x00
   1DFD 21rF3s31           5864 	ld	hl,#_triframes + 1
   1E00 36 00              5865 	ld	(hl), #0x00
                           5866 ;demo.c:942: drawtilescreen(tri_center);
   1E02 21r2Cs02           5867 	ld	hl,#_tri_center
   1E05 E5                 5868 	push	hl
   1E06 CDrDDs1B           5869 	call	_drawtilescreen
   1E09 F1                 5870 	pop	af
   1E0A                    5871 00116$:
                           5872 ;demo.c:945: msx2_palette(3,tripal[0],tripal[1],tripal[2]);
   1E0A 21rEAs31           5873 	ld	hl,#_tripal + 2
   1E0D 4E                 5874 	ld	c,(hl)
   1E0E 11rE9s31           5875 	ld	de,#_tripal + 1
   1E11 1A                 5876 	ld	a,(de)
   1E12 47                 5877 	ld	b,a
   1E13 21rE8s31           5878 	ld	hl,#_tripal
   1E16 5E                 5879 	ld	e,(hl)
   1E17 79                 5880 	ld	a,c
   1E18 F5                 5881 	push	af
   1E19 33                 5882 	inc	sp
   1E1A C5                 5883 	push	bc
   1E1B 33                 5884 	inc	sp
   1E1C 53                 5885 	ld	d,e
   1E1D 1E 03              5886 	ld	e,#0x03
   1E1F D5                 5887 	push	de
   1E20 CDr00s00           5888 	call	_msx2_palette
   1E23 F1                 5889 	pop	af
   1E24 F1                 5890 	pop	af
                           5891 ;demo.c:946: msx2_palette(13,tripal[3],tripal[4],tripal[5]);
   1E25 21rEDs31           5892 	ld	hl,#_tripal + 5
   1E28 4E                 5893 	ld	c,(hl)
   1E29 11rECs31           5894 	ld	de,#_tripal + 4
   1E2C 1A                 5895 	ld	a,(de)
   1E2D 47                 5896 	ld	b,a
   1E2E 21rEBs31           5897 	ld	hl,#_tripal + 3
   1E31 5E                 5898 	ld	e,(hl)
   1E32 79                 5899 	ld	a,c
   1E33 F5                 5900 	push	af
   1E34 33                 5901 	inc	sp
   1E35 C5                 5902 	push	bc
   1E36 33                 5903 	inc	sp
   1E37 53                 5904 	ld	d,e
   1E38 1E 0D              5905 	ld	e,#0x0D
   1E3A D5                 5906 	push	de
   1E3B CDr00s00           5907 	call	_msx2_palette
   1E3E F1                 5908 	pop	af
   1E3F F1                 5909 	pop	af
                           5910 ;demo.c:947: msx2_palette(5,tripal[6],tripal[7],tripal[8]);
   1E40 21rF0s31           5911 	ld	hl,#_tripal + 8
   1E43 4E                 5912 	ld	c,(hl)
   1E44 11rEFs31           5913 	ld	de,#_tripal + 7
   1E47 1A                 5914 	ld	a,(de)
   1E48 47                 5915 	ld	b,a
   1E49 21rEEs31           5916 	ld	hl,#_tripal + 6
   1E4C 5E                 5917 	ld	e,(hl)
   1E4D 79                 5918 	ld	a,c
   1E4E F5                 5919 	push	af
   1E4F 33                 5920 	inc	sp
   1E50 C5                 5921 	push	bc
   1E51 33                 5922 	inc	sp
   1E52 53                 5923 	ld	d,e
   1E53 1E 05              5924 	ld	e,#0x05
   1E55 D5                 5925 	push	de
   1E56 CDr00s00           5926 	call	_msx2_palette
   1E59 F1                 5927 	pop	af
   1E5A F1                 5928 	pop	af
                           5929 ;demo.c:950: tripaltick++;
   1E5B FD 21rF1s31        5930 	ld	iy,#_tripaltick
   1E5F FD 34 00           5931 	inc	0 (iy)
                           5932 ;demo.c:951: if (tripaltick > 6) {
   1E62 3E 06              5933 	ld	a,#0x06
   1E64 FD 21rF1s31        5934 	ld	iy,#_tripaltick
   1E68 FD 96 00           5935 	sub	a,0 (iy)
   1E6B D2rD9s1E           5936 	jp	NC,00126$
                           5937 ;demo.c:953: r = tripal[0];
   1E6E 21rE8s31           5938 	ld	hl,#_tripal
   1E71 4E                 5939 	ld	c,(hl)
   1E72 DD 71 FD           5940 	ld	-3 (ix),c
                           5941 ;demo.c:954: g = tripal[1];
   1E75 11rE9s31           5942 	ld	de,#_tripal + 1
   1E78 1A                 5943 	ld	a,(de)
   1E79 DD 77 FC           5944 	ld	-4 (ix),a
                           5945 ;demo.c:955: b = tripal[2];
   1E7C 21rEAs31           5946 	ld	hl,#_tripal + 2
   1E7F 5E                 5947 	ld	e,(hl)
   1E80 DD 73 FB           5948 	ld	-5 (ix),e
                           5949 ;demo.c:957: for (x = 0; x < 6; x++) {
   1E83 DD 36 FE 00        5950 	ld	-2 (ix),#0x00
   1E87 DD 36 FF 00        5951 	ld	-1 (ix),#0x00
   1E8B                    5952 00122$:
   1E8B DD 7E FE           5953 	ld	a,-2 (ix)
   1E8E D6 06              5954 	sub	a,#0x06
   1E90 DD 7E FF           5955 	ld	a,-1 (ix)
   1E93 DE 00              5956 	sbc	a,#0x00
   1E95 F2rBFs1E           5957 	jp	P,00125$
                           5958 ;demo.c:958: tripal[x] = tripal[x+3];
   1E98 3ErE8              5959 	ld	a,#<_tripal
   1E9A DD 86 FE           5960 	add	a,-2 (ix)
   1E9D 4F                 5961 	ld	c,a
   1E9E 3Es31              5962 	ld	a,#>_tripal
   1EA0 DD 8E FF           5963 	adc	a,-1 (ix)
   1EA3 47                 5964 	ld	b,a
   1EA4 DD 5E FE           5965 	ld	e,-2 (ix)
   1EA7 1C                 5966 	inc	e
   1EA8 1C                 5967 	inc	e
   1EA9 1C                 5968 	inc	e
   1EAA 3ErE8              5969 	ld	a,#<_tripal
   1EAC 83                 5970 	add	a,e
   1EAD 5F                 5971 	ld	e,a
   1EAE 3Es31              5972 	ld	a,#>_tripal
   1EB0 CE 00              5973 	adc	a,#0x00
   1EB2 57                 5974 	ld	d,a
   1EB3 1A                 5975 	ld	a,(de)
   1EB4 02                 5976 	ld	(bc),a
                           5977 ;demo.c:957: for (x = 0; x < 6; x++) {
   1EB5 DD 34 FE           5978 	inc	-2 (ix)
   1EB8 20 03              5979 	jr	NZ,00157$
   1EBA DD 34 FF           5980 	inc	-1 (ix)
   1EBD                    5981 00157$:
   1EBD 18 CC              5982 	jr	00122$
   1EBF                    5983 00125$:
                           5984 ;demo.c:961: tripal[6] = r;
   1EBF 01rEEs31           5985 	ld	bc,#_tripal + 6
   1EC2 DD 7E FD           5986 	ld	a,-3 (ix)
   1EC5 02                 5987 	ld	(bc),a
                           5988 ;demo.c:962: tripal[7] = g;
   1EC6 01rEFs31           5989 	ld	bc,#_tripal + 7
   1EC9 DD 7E FC           5990 	ld	a,-4 (ix)
   1ECC 02                 5991 	ld	(bc),a
                           5992 ;demo.c:963: tripal[8] = b;
   1ECD 01rF0s31           5993 	ld	bc,#_tripal + 8
   1ED0 DD 7E FB           5994 	ld	a,-5 (ix)
   1ED3 02                 5995 	ld	(bc),a
                           5996 ;demo.c:964: tripaltick = 0;
   1ED4 21rF1s31           5997 	ld	hl,#_tripaltick + 0
   1ED7 36 00              5998 	ld	(hl), #0x00
   1ED9                    5999 00126$:
   1ED9 DD F9              6000 	ld	sp,ix
   1EDB DD E1              6001 	pop	ix
   1EDD C9                 6002 	ret
   1EDE                    6003 _tritiles_end::
                           6004 ;demo.c:973: void do_quit() {
                           6005 ;	---------------------------------
                           6006 ; Function do_quit
                           6007 ; ---------------------------------
   1EDE                    6008 _do_quit_start::
   1EDE                    6009 _do_quit:
                           6010 ;demo.c:974: waitVB();
   1EDE 76                 6011 		halt 
                           6012 ;demo.c:975: uninstall_isr();
   1EDF CDr00s00           6013 	call	_uninstall_isr
                           6014 ;demo.c:976: PLY_Stop();
   1EE2 CDr00s00           6015 	call	_PLY_Stop
                           6016 ;demo.c:977: PLY_SendRegisters();
   1EE5 CDr00s00           6017 	call	_PLY_SendRegisters
                           6018 ;demo.c:979: screen(0);
   1EE8 3E 00              6019 	ld	a,#0x00
   1EEA F5                 6020 	push	af
   1EEB 33                 6021 	inc	sp
   1EEC CDr00s00           6022 	call	_screen
   1EEF 33                 6023 	inc	sp
                           6024 ;demo.c:981: puts("demo quit\r\n\r\n");
   1EF0 21r01s1F           6025 	ld	hl,#__str_10
   1EF3 E5                 6026 	push	hl
   1EF4 CDr00s00           6027 	call	_puts
   1EF7 F1                 6028 	pop	af
                           6029 ;demo.c:983: exit(0);	
   1EF8 3E 00              6030 	ld	a,#0x00
   1EFA F5                 6031 	push	af
   1EFB 33                 6032 	inc	sp
   1EFC CDr00s00           6033 	call	_exit
   1EFF 33                 6034 	inc	sp
   1F00 C9                 6035 	ret
   1F01                    6036 _do_quit_end::
   1F01                    6037 __str_10:
   1F01 64 65 6D 6F 20 71  6038 	.ascii "demo quit"
        75 69 74
   1F0A 0D                 6039 	.db 0x0D
   1F0B 0A                 6040 	.db 0x0A
   1F0C 0D                 6041 	.db 0x0D
   1F0D 0A                 6042 	.db 0x0A
   1F0E 00                 6043 	.db 0x00
                           6044 ;demo.c:1005: void main() {
                           6045 ;	---------------------------------
                           6046 ; Function main
                           6047 ; ---------------------------------
   1F0F                    6048 _main_start::
   1F0F                    6049 _main:
   1F0F DD E5              6050 	push	ix
   1F11 DD 21 00 00        6051 	ld	ix,#0
   1F15 DD 39              6052 	add	ix,sp
   1F17 21 F7 FF           6053 	ld	hl,#-9
   1F1A 39                 6054 	add	hl,sp
   1F1B F9                 6055 	ld	sp,hl
                           6056 ;demo.c:1006: unsigned char quit=0;
   1F1C DD 36 FF 00        6057 	ld	-1 (ix),#0x00
                           6058 ;demo.c:1007: int modes = 128; // interlace bit on
   1F20 DD 36 FD 80        6059 	ld	-3 (ix),#0x80
   1F24 DD 36 FE 00        6060 	ld	-2 (ix),#0x00
                           6061 ;demo.c:1013: spindown();
   1F28 CDr00s00           6062 	call	_spindown
                           6063 ;demo.c:1015: puts("demo init\r\n\r\n");
   1F2B 21r0Fs22           6064 	ld	hl,#__str_11
   1F2E E5                 6065 	push	hl
   1F2F CDr00s00           6066 	call	_puts
   1F32 F1                 6067 	pop	af
                           6068 ;demo.c:1017: for (y = 0; y < 2; y++) {
   1F33 DD 36 F9 00        6069 	ld	-7 (ix),#0x00
   1F37 DD 36 FA 00        6070 	ld	-6 (ix),#0x00
   1F3B                    6071 00118$:
   1F3B DD 7E F9           6072 	ld	a,-7 (ix)
   1F3E D6 02              6073 	sub	a,#0x02
   1F40 DD 7E FA           6074 	ld	a,-6 (ix)
   1F43 DE 00              6075 	sbc	a,#0x00
   1F45 F2rCCs1F           6076 	jp	P,00121$
                           6077 ;demo.c:1018: for (x = 0; x < 16; x++) {
   1F48 DD 56 F9           6078 	ld	d,-7 (ix)
   1F4B DD 4E FA           6079 	ld	c,-6 (ix)
   1F4E CB 22              6080 	sla	d
   1F50 CB 11              6081 	rl	c
   1F52 CB 22              6082 	sla	d
   1F54 CB 11              6083 	rl	c
   1F56 CB 22              6084 	sla	d
   1F58 CB 11              6085 	rl	c
   1F5A CB 22              6086 	sla	d
   1F5C CB 11              6087 	rl	c
   1F5E 7A                 6088 	ld	a,d
   1F5F C6 81              6089 	add	a,#0x81
   1F61 DD 77 F7           6090 	ld	-9 (ix),a
   1F64 79                 6091 	ld	a,c
   1F65 CE 03              6092 	adc	a,#0x03
   1F67 DD 77 F8           6093 	ld	-8 (ix),a
   1F6A DD 36 FB 00        6094 	ld	-5 (ix),#0x00
   1F6E DD 36 FC 00        6095 	ld	-4 (ix),#0x00
   1F72                    6096 00114$:
   1F72 DD 7E FB           6097 	ld	a,-5 (ix)
   1F75 D6 10              6098 	sub	a,#0x10
   1F77 DD 7E FC           6099 	ld	a,-4 (ix)
   1F7A DE 00              6100 	sbc	a,#0x00
   1F7C F2rC1s1F           6101 	jp	P,00120$
                           6102 ;demo.c:1019: tri_lookup_x[(y*16)+x] = x * 16;
   1F7F DD 7E F9           6103 	ld	a,-7 (ix)
   1F82 07                 6104 	rlca
   1F83 07                 6105 	rlca
   1F84 07                 6106 	rlca
   1F85 07                 6107 	rlca
   1F86 E6 F0              6108 	and	a,#0xF0
   1F88 47                 6109 	ld	b,a
   1F89 DD 5E FB           6110 	ld	e,-5 (ix)
   1F8C 78                 6111 	ld	a,b
   1F8D 83                 6112 	add	a,e
   1F8E 47                 6113 	ld	b, a
   1F8F C6r00              6114 	add	a,#<_tri_lookup_x
   1F91 4F                 6115 	ld	c,a
   1F92 3Es01              6116 	ld	a,#>_tri_lookup_x
   1F94 CE 00              6117 	adc	a,#0x00
   1F96 57                 6118 	ld	d,a
   1F97 7B                 6119 	ld	a,e
   1F98 07                 6120 	rlca
   1F99 07                 6121 	rlca
   1F9A 07                 6122 	rlca
   1F9B 07                 6123 	rlca
   1F9C E6 F0              6124 	and	a,#0xF0
   1F9E 5F                 6125 	ld	e,a
   1F9F 69                 6126 	ld	l,c
   1FA0 62                 6127 	ld	h,d
   1FA1 73                 6128 	ld	(hl),e
                           6129 ;demo.c:1020: tri_lookup_y[(y*16)+x] = (768+129)+(y * 16);
   1FA2 CB 20              6130 	sla	b
   1FA4 3Er20              6131 	ld	a,#<_tri_lookup_y
   1FA6 80                 6132 	add	a,b
   1FA7 6F                 6133 	ld	l,a
   1FA8 3Es01              6134 	ld	a,#>_tri_lookup_y
   1FAA CE 00              6135 	adc	a,#0x00
   1FAC 67                 6136 	ld	h,a
   1FAD DD 7E F7           6137 	ld	a,-9 (ix)
   1FB0 77                 6138 	ld	(hl),a
   1FB1 23                 6139 	inc	hl
   1FB2 DD 7E F8           6140 	ld	a,-8 (ix)
   1FB5 77                 6141 	ld	(hl),a
                           6142 ;demo.c:1018: for (x = 0; x < 16; x++) {
   1FB6 DD 34 FB           6143 	inc	-5 (ix)
   1FB9 20 03              6144 	jr	NZ,00139$
   1FBB DD 34 FC           6145 	inc	-4 (ix)
   1FBE                    6146 00139$:
   1FBE C3r72s1F           6147 	jp	00114$
   1FC1                    6148 00120$:
                           6149 ;demo.c:1017: for (y = 0; y < 2; y++) {
   1FC1 DD 34 F9           6150 	inc	-7 (ix)
   1FC4 20 03              6151 	jr	NZ,00140$
   1FC6 DD 34 FA           6152 	inc	-6 (ix)
   1FC9                    6153 00140$:
   1FC9 C3r3Bs1F           6154 	jp	00118$
   1FCC                    6155 00121$:
                           6156 ;demo.c:1035: puts("music init...");
   1FCC 21r1Ds22           6157 	ld	hl,#__str_12
   1FCF E5                 6158 	push	hl
   1FD0 CDr00s00           6159 	call	_puts
   1FD3 F1                 6160 	pop	af
                           6161 ;demo.c:1037: PLY_SongPtr = (char *)0x0103;
   1FD4 21r00s00           6162 	ld	hl,#_PLY_SongPtr + 0
   1FD7 36 03              6163 	ld	(hl), #0x03
   1FD9 21r01s00           6164 	ld	hl,#_PLY_SongPtr + 1
   1FDC 36 01              6165 	ld	(hl), #0x01
                           6166 ;demo.c:1038: PLY_Init();
   1FDE CDr00s00           6167 	call	_PLY_Init
                           6168 ;demo.c:1039: puts("done.\r\n");
   1FE1 21r2Bs22           6169 	ld	hl,#__str_13
   1FE4 E5                 6170 	push	hl
   1FE5 CDr00s00           6171 	call	_puts
   1FE8 F1                 6172 	pop	af
                           6173 ;demo.c:1041: puts("detecting vdp type...");
   1FE9 21r33s22           6174 	ld	hl,#__str_14
   1FEC E5                 6175 	push	hl
   1FED CDr00s00           6176 	call	_puts
   1FF0 F1                 6177 	pop	af
                           6178 ;demo.c:1042: if(isvdp2())
   1FF1 CDr00s00           6179 	call	_isvdp2
   1FF4 AF                 6180 	xor	a,a
   1FF5 B5                 6181 	or	a,l
   1FF6 28 12              6182 	jr	Z,00102$
                           6183 ;demo.c:1044: puts(" vdp2 found!\r\n\r\n");
   1FF8 21r49s22           6184 	ld	hl,#__str_15
   1FFB E5                 6185 	push	hl
   1FFC CDr00s00           6186 	call	_puts
   1FFF F1                 6187 	pop	af
                           6188 ;demo.c:1045: modes+=2; // pal
   2000 DD 36 FD 82        6189 	ld	-3 (ix),#0x82
   2004 DD 36 FE 00        6190 	ld	-2 (ix),#0x00
   2008 18 0B              6191 	jr	00103$
   200A                    6192 00102$:
                           6193 ;demo.c:1048: puts(" vdp1 found.\r\nSorry, this demo requires a VDP2 with 128k for VRAM.\r\n\r\n");
   200A 21r5As22           6194 	ld	hl,#__str_16
   200D E5                 6195 	push	hl
   200E CDr00s00           6196 	call	_puts
   2011 F1                 6197 	pop	af
                           6198 ;demo.c:1049: do_quit();
   2012 CDrDEs1E           6199 	call	_do_quit
   2015                    6200 00103$:
                           6201 ;demo.c:1052: pal_load("TWISTER PL5",32,1);
   2015 21 01 00           6202 	ld	hl,#0x0001
   2018 E5                 6203 	push	hl
   2019 3E 20              6204 	ld	a,#0x20
   201B F5                 6205 	push	af
   201C 33                 6206 	inc	sp
   201D 21rA1s22           6207 	ld	hl,#__str_17
   2020 E5                 6208 	push	hl
   2021 CDrA3s07           6209 	call	_pal_load
   2024 F1                 6210 	pop	af
   2025 F1                 6211 	pop	af
   2026 33                 6212 	inc	sp
                           6213 ;demo.c:1053: memcpy(twister_palette, cur_palette, 32);
   2027 21 20 00           6214 	ld	hl,#0x0020
   202A E5                 6215 	push	hl
   202B 21rC0s30           6216 	ld	hl,#_cur_palette
   202E E5                 6217 	push	hl
   202F 21r00s31           6218 	ld	hl,#_twister_palette
   2032 E5                 6219 	push	hl
   2033 CDr00s00           6220 	call	_memcpy
   2036 F1                 6221 	pop	af
   2037 F1                 6222 	pop	af
   2038 F1                 6223 	pop	af
                           6224 ;demo.c:1054: pal_load("TF1     PL5",32,1);
   2039 21 01 00           6225 	ld	hl,#0x0001
   203C E5                 6226 	push	hl
   203D 3E 20              6227 	ld	a,#0x20
   203F F5                 6228 	push	af
   2040 33                 6229 	inc	sp
   2041 21rADs22           6230 	ld	hl,#__str_18
   2044 E5                 6231 	push	hl
   2045 CDrA3s07           6232 	call	_pal_load
   2048 F1                 6233 	pop	af
   2049 F1                 6234 	pop	af
   204A 33                 6235 	inc	sp
                           6236 ;demo.c:1055: memcpy(tf_palette, cur_palette, 32);
   204B 21 20 00           6237 	ld	hl,#0x0020
   204E E5                 6238 	push	hl
   204F 21rC0s30           6239 	ld	hl,#_cur_palette
   2052 E5                 6240 	push	hl
   2053 21r20s31           6241 	ld	hl,#_tf_palette
   2056 E5                 6242 	push	hl
   2057 CDr00s00           6243 	call	_memcpy
   205A F1                 6244 	pop	af
   205B F1                 6245 	pop	af
   205C F1                 6246 	pop	af
                           6247 ;demo.c:1056: pal_load("BOXES   PL5",32,1);
   205D 21 01 00           6248 	ld	hl,#0x0001
   2060 E5                 6249 	push	hl
   2061 3E 20              6250 	ld	a,#0x20
   2063 F5                 6251 	push	af
   2064 33                 6252 	inc	sp
   2065 21rB9s22           6253 	ld	hl,#__str_19
   2068 E5                 6254 	push	hl
   2069 CDrA3s07           6255 	call	_pal_load
   206C F1                 6256 	pop	af
   206D F1                 6257 	pop	af
   206E 33                 6258 	inc	sp
                           6259 ;demo.c:1057: memcpy(boxes_palette, cur_palette, 32);
   206F 21 20 00           6260 	ld	hl,#0x0020
   2072 E5                 6261 	push	hl
   2073 21rC0s30           6262 	ld	hl,#_cur_palette
   2076 E5                 6263 	push	hl
   2077 21r40s31           6264 	ld	hl,#_boxes_palette
   207A E5                 6265 	push	hl
   207B CDr00s00           6266 	call	_memcpy
   207E F1                 6267 	pop	af
   207F F1                 6268 	pop	af
   2080 F1                 6269 	pop	af
                           6270 ;demo.c:1060: pal_load("BULBS   PL5",32,1);
   2081 21 01 00           6271 	ld	hl,#0x0001
   2084 E5                 6272 	push	hl
   2085 3E 20              6273 	ld	a,#0x20
   2087 F5                 6274 	push	af
   2088 33                 6275 	inc	sp
   2089 21rC5s22           6276 	ld	hl,#__str_20
   208C E5                 6277 	push	hl
   208D CDrA3s07           6278 	call	_pal_load
   2090 F1                 6279 	pop	af
   2091 F1                 6280 	pop	af
   2092 33                 6281 	inc	sp
                           6282 ;demo.c:1062: pck_load("BULBS   PCK",2431,0x8000,VRAM_0,1);
   2093 21 01 00           6283 	ld	hl,#0x0001
   2096 E5                 6284 	push	hl
   2097 2E 01              6285 	ld	l, #0x01
   2099 E5                 6286 	push	hl
   209A 21 00 80           6287 	ld	hl,#0x8000
   209D E5                 6288 	push	hl
   209E 21 7F 09           6289 	ld	hl,#0x097F
   20A1 E5                 6290 	push	hl
   20A2 21rD1s22           6291 	ld	hl,#__str_21
   20A5 E5                 6292 	push	hl
   20A6 CDr99s09           6293 	call	_pck_load
   20A9 FD 21 0A 00        6294 	ld	iy,#0x000A
   20AD FD 39              6295 	add	iy,sp
   20AF FD F9              6296 	ld	sp,iy
                           6297 ;demo.c:1064: pck_load("TWISTER PCK",4032,0x0000,VRAM_1,1);
   20B1 21 01 00           6298 	ld	hl,#0x0001
   20B4 E5                 6299 	push	hl
   20B5 2E 00              6300 	ld	l, #0x00
   20B7 E5                 6301 	push	hl
   20B8 2E 00              6302 	ld	l, #0x00
   20BA E5                 6303 	push	hl
   20BB 21 C0 0F           6304 	ld	hl,#0x0FC0
   20BE E5                 6305 	push	hl
   20BF 21rDDs22           6306 	ld	hl,#__str_22
   20C2 E5                 6307 	push	hl
   20C3 CDr99s09           6308 	call	_pck_load
   20C6 FD 21 0A 00        6309 	ld	iy,#0x000A
   20CA FD 39              6310 	add	iy,sp
   20CC FD F9              6311 	ld	sp,iy
                           6312 ;demo.c:1065: pck_load("BOXES   PCK",4500,0x8000,VRAM_1,1);
   20CE 21 01 00           6313 	ld	hl,#0x0001
   20D1 E5                 6314 	push	hl
   20D2 2E 00              6315 	ld	l, #0x00
   20D4 E5                 6316 	push	hl
   20D5 26 80              6317 	ld	h, #0x80
   20D7 E5                 6318 	push	hl
   20D8 21 94 11           6319 	ld	hl,#0x1194
   20DB E5                 6320 	push	hl
   20DC 21rE9s22           6321 	ld	hl,#__str_23
   20DF E5                 6322 	push	hl
   20E0 CDr99s09           6323 	call	_pck_load
   20E3 FD 21 0A 00        6324 	ld	iy,#0x000A
   20E7 FD 39              6325 	add	iy,sp
   20E9 FD F9              6326 	ld	sp,iy
                           6327 ;demo.c:1069: vdp_set_screen5();
   20EB CDr00s00           6328 	call	_vdp_set_screen5
                           6329 ;demo.c:1071: vdp_register(VDP_MODE3,modes); // interlace on, screen mode pal or ntsc
   20EE DD 7E FD           6330 	ld	a,-3 (ix)
   20F1 F5                 6331 	push	af
   20F2 33                 6332 	inc	sp
   20F3 3E 09              6333 	ld	a,#0x09
   20F5 F5                 6334 	push	af
   20F6 33                 6335 	inc	sp
   20F7 CDr00s00           6336 	call	_vdp_register
   20FA F1                 6337 	pop	af
                           6338 ;demo.c:1073: scratch_clear();
   20FB CDr90s07           6339 	call	_scratch_clear
                           6340 ;demo.c:1074: vdp_load_palette(scratch);
   20FE 21r40s30           6341 	ld	hl,#_scratch
   2101 E5                 6342 	push	hl
   2102 CDr00s00           6343 	call	_vdp_load_palette
   2105 F1                 6344 	pop	af
                           6345 ;demo.c:1076: pck_load("DSSLOGO PCK",2154,0x0000,VRAM_0,0);
   2106 21 00 00           6346 	ld	hl,#0x0000
   2109 E5                 6347 	push	hl
   210A 2E 01              6348 	ld	l, #0x01
   210C E5                 6349 	push	hl
   210D 2E 00              6350 	ld	l, #0x00
   210F E5                 6351 	push	hl
   2110 21 6A 08           6352 	ld	hl,#0x086A
   2113 E5                 6353 	push	hl
   2114 21rF5s22           6354 	ld	hl,#__str_24
   2117 E5                 6355 	push	hl
   2118 CDr99s09           6356 	call	_pck_load
   211B FD 21 0A 00        6357 	ld	iy,#0x000A
   211F FD 39              6358 	add	iy,sp
   2121 FD F9              6359 	ld	sp,iy
                           6360 ;demo.c:1077: pal_load("DSSLOGO PL5",32,1);
   2123 21 01 00           6361 	ld	hl,#0x0001
   2126 E5                 6362 	push	hl
   2127 3E 20              6363 	ld	a,#0x20
   2129 F5                 6364 	push	af
   212A 33                 6365 	inc	sp
   212B 21r01s23           6366 	ld	hl,#__str_25
   212E E5                 6367 	push	hl
   212F CDrA3s07           6368 	call	_pal_load
   2132 F1                 6369 	pop	af
   2133 F1                 6370 	pop	af
   2134 33                 6371 	inc	sp
                           6372 ;demo.c:1079: vdp_register(VDP_VOFFSET,0);
   2135 21 17 00           6373 	ld	hl,#0x0017
   2138 E5                 6374 	push	hl
   2139 CDr00s00           6375 	call	_vdp_register
   213C F1                 6376 	pop	af
                           6377 ;demo.c:1081: scratch_clear();
   213D CDr90s07           6378 	call	_scratch_clear
                           6379 ;demo.c:1094: install_isr(my_isr);
   2140 21rECs05           6380 	ld	hl,#_my_isr
   2143 E5                 6381 	push	hl
   2144 CDr00s00           6382 	call	_install_isr
   2147 F1                 6383 	pop	af
                           6384 ;demo.c:1096: while (!quit) {
   2148                    6385 00111$:
   2148 AF                 6386 	xor	a,a
   2149 DD B6 FF           6387 	or	a,-1 (ix)
   214C C2r07s22           6388 	jp	NZ,00113$
                           6389 ;demo.c:1098: if (vbicount >= scenetimings[timeindex+1]) {
   214F 21rF6s31           6390 	ld	hl,#_timeindex + 0
   2152 4E                 6391 	ld	c,(hl)
   2153 0C                 6392 	inc	c
   2154 CB 21              6393 	sla	c
   2156 3Er02              6394 	ld	a,#<_scenetimings
   2158 81                 6395 	add	a,c
   2159 6F                 6396 	ld	l,a
   215A 3Es32              6397 	ld	a,#>_scenetimings
   215C CE 00              6398 	adc	a,#0x00
   215E 67                 6399 	ld	h,a
   215F 4E                 6400 	ld	c,(hl)
   2160 23                 6401 	inc	hl
   2161 46                 6402 	ld	b,(hl)
   2162 3Ar60s31           6403 	ld	a,(#_vbicount+0)
   2165 91                 6404 	sub	a,c
   2166 3Ar61s31           6405 	ld	a,(#_vbicount+1)
   2169 98                 6406 	sbc	a,b
   216A FAr93s21           6407 	jp	M,00105$
                           6408 ;demo.c:1099: sceneindex++;
   216D FD 21rF4s31        6409 	ld	iy,#_sceneindex
   2171 FD 34 00           6410 	inc	0 (iy)
   2174 20 07              6411 	jr	NZ,00141$
   2176 FD 21rF4s31        6412 	ld	iy,#_sceneindex
   217A FD 34 01           6413 	inc	1 (iy)
   217D                    6414 00141$:
                           6415 ;demo.c:1100: timeindex+=2;
   217D 21rF6s31           6416 	ld	hl,#_timeindex
   2180 7E                 6417 	ld	a,(hl)
   2181 C6 02              6418 	add	a,#0x02
   2183 23                 6419 	inc	hl
   2184 2B                 6420 	dec	hl
   2185 C5                 6421 	push	bc
   2186 4F                 6422 	ld	c, a
   2187 23                 6423 	inc	hl
   2188 7E                 6424 	ld	a, (hl)
   2189 47                 6425 	ld	b, a
   218A 79                 6426 	ld	a, c
   218B 2B                 6427 	dec	hl
   218C 77                 6428 	ld	(hl), a
   218D 78                 6429 	ld	a, b
   218E C1                 6430 	pop	bc
   218F CE 00              6431 	adc	a,#0x00
   2191 23                 6432 	inc	hl
   2192 77                 6433 	ld	(hl),a
   2193                    6434 00105$:
                           6435 ;demo.c:1105: if (vbicount >= scenetimings[timeindex] && vbicount < scenetimings[timeindex+1]) {
   2193 21rF6s31           6436 	ld	hl,#_timeindex + 0
   2196 4E                 6437 	ld	c,(hl)
   2197 21rF7s31           6438 	ld	hl,#_timeindex + 1
   219A 46                 6439 	ld	b,(hl)
   219B CB 21              6440 	sla	c
   219D CB 10              6441 	rl	b
   219F 21r02s32           6442 	ld	hl,#_scenetimings
   21A2 09                 6443 	add	hl,bc
   21A3 4E                 6444 	ld	c,(hl)
   21A4 23                 6445 	inc	hl
   21A5 46                 6446 	ld	b,(hl)
   21A6 3Ar60s31           6447 	ld	a,(#_vbicount+0)
   21A9 91                 6448 	sub	a,c
   21AA 3Ar61s31           6449 	ld	a,(#_vbicount+1)
   21AD 98                 6450 	sbc	a,b
   21AE FArF3s21           6451 	jp	M,00107$
   21B1 21rF6s31           6452 	ld	hl,#_timeindex + 0
   21B4 4E                 6453 	ld	c,(hl)
   21B5 0C                 6454 	inc	c
   21B6 CB 21              6455 	sla	c
   21B8 3Er02              6456 	ld	a,#<_scenetimings
   21BA 81                 6457 	add	a,c
   21BB 6F                 6458 	ld	l,a
   21BC 3Es32              6459 	ld	a,#>_scenetimings
   21BE CE 00              6460 	adc	a,#0x00
   21C0 67                 6461 	ld	h,a
   21C1 4E                 6462 	ld	c,(hl)
   21C2 23                 6463 	inc	hl
   21C3 46                 6464 	ld	b,(hl)
   21C4 3Ar60s31           6465 	ld	a,(#_vbicount+0)
   21C7 91                 6466 	sub	a,c
   21C8 FD 21r60s31        6467 	ld	iy,#_vbicount
   21CC FD 7E 01           6468 	ld	a,1 (iy)
   21CF 98                 6469 	sbc	a,b
   21D0 F2rF3s21           6470 	jp	P,00107$
                           6471 ;demo.c:1106: waitVB();
   21D3 76                 6472 		halt 
                           6473 ;demo.c:1107: scenepointers[sceneindex]();
   21D4 21rF4s31           6474 	ld	hl,#_sceneindex + 0
   21D7 4E                 6475 	ld	c,(hl)
   21D8 FD 21rF4s31        6476 	ld	iy,#_sceneindex
   21DC FD 46 01           6477 	ld	b,1 (iy)
   21DF CB 21              6478 	sla	c
   21E1 CB 10              6479 	rl	b
   21E3 21rF8s31           6480 	ld	hl,#_scenepointers
   21E6 09                 6481 	add	hl,bc
   21E7 4E                 6482 	ld	c,(hl)
   21E8 23                 6483 	inc	hl
   21E9 46                 6484 	ld	b,(hl)
   21EA C5                 6485 	push	bc
   21EB 21rF2s21           6486 	ld	hl,#00146$
   21EE E5                 6487 	push	hl
   21EF 69                 6488 	ld	l,c
   21F0 60                 6489 	ld	h,b
   21F1 E9                 6490 	jp	(hl)
   21F2                    6491 00146$:
   21F2 C1                 6492 	pop	bc
   21F3                    6493 00107$:
                           6494 ;demo.c:1109: if(space())
   21F3 21 08 01           6495 	ld	hl,#0x0108
   21F6 E5                 6496 	push	hl
   21F7 CDr00s00           6497 	call	_ispressed
   21FA F1                 6498 	pop	af
   21FB AF                 6499 	xor	a,a
   21FC B5                 6500 	or	a,l
   21FD CAr48s21           6501 	jp	Z,00111$
                           6502 ;demo.c:1110: quit=1;
   2200 DD 36 FF 01        6503 	ld	-1 (ix),#0x01
   2204 C3r48s21           6504 	jp	00111$
   2207                    6505 00113$:
                           6506 ;demo.c:1113: do_quit();
   2207 CDrDEs1E           6507 	call	_do_quit
   220A DD F9              6508 	ld	sp,ix
   220C DD E1              6509 	pop	ix
   220E C9                 6510 	ret
   220F                    6511 _main_end::
   220F                    6512 __str_11:
   220F 64 65 6D 6F 20 69  6513 	.ascii "demo init"
        6E 69 74
   2218 0D                 6514 	.db 0x0D
   2219 0A                 6515 	.db 0x0A
   221A 0D                 6516 	.db 0x0D
   221B 0A                 6517 	.db 0x0A
   221C 00                 6518 	.db 0x00
   221D                    6519 __str_12:
   221D 6D 75 73 69 63 20  6520 	.ascii "music init..."
        69 6E 69 74 2E 2E
        2E
   222A 00                 6521 	.db 0x00
   222B                    6522 __str_13:
   222B 64 6F 6E 65 2E     6523 	.ascii "done."
   2230 0D                 6524 	.db 0x0D
   2231 0A                 6525 	.db 0x0A
   2232 00                 6526 	.db 0x00
   2233                    6527 __str_14:
   2233 64 65 74 65 63 74  6528 	.ascii "detecting vdp type..."
        69 6E 67 20 76 64
        70 20 74 79 70 65
        2E 2E 2E
   2248 00                 6529 	.db 0x00
   2249                    6530 __str_15:
   2249 20 76 64 70 32 20  6531 	.ascii " vdp2 found!"
        66 6F 75 6E 64 21
   2255 0D                 6532 	.db 0x0D
   2256 0A                 6533 	.db 0x0A
   2257 0D                 6534 	.db 0x0D
   2258 0A                 6535 	.db 0x0A
   2259 00                 6536 	.db 0x00
   225A                    6537 __str_16:
   225A 20 76 64 70 31 20  6538 	.ascii " vdp1 found."
        66 6F 75 6E 64 2E
   2266 0D                 6539 	.db 0x0D
   2267 0A                 6540 	.db 0x0A
   2268 53 6F 72 72 79 2C  6541 	.ascii "Sorry, this demo requires a VDP2 with 128k for"
        20 74 68 69 73 20
        64 65 6D 6F 20 72
        65 71 75 69 72 65
        73 20 61 20 56 44
        50 32 20 77 69 74
        68 20 31 32 38 6B
        20 66 6F 72
   2296 20 56 52 41 4D 2E  6542 	.ascii " VRAM."
   229C 0D                 6543 	.db 0x0D
   229D 0A                 6544 	.db 0x0A
   229E 0D                 6545 	.db 0x0D
   229F 0A                 6546 	.db 0x0A
   22A0 00                 6547 	.db 0x00
   22A1                    6548 __str_17:
   22A1 54 57 49 53 54 45  6549 	.ascii "TWISTER PL5"
        52 20 50 4C 35
   22AC 00                 6550 	.db 0x00
   22AD                    6551 __str_18:
   22AD 54 46 31 20 20 20  6552 	.ascii "TF1     PL5"
        20 20 50 4C 35
   22B8 00                 6553 	.db 0x00
   22B9                    6554 __str_19:
   22B9 42 4F 58 45 53 20  6555 	.ascii "BOXES   PL5"
        20 20 50 4C 35
   22C4 00                 6556 	.db 0x00
   22C5                    6557 __str_20:
   22C5 42 55 4C 42 53 20  6558 	.ascii "BULBS   PL5"
        20 20 50 4C 35
   22D0 00                 6559 	.db 0x00
   22D1                    6560 __str_21:
   22D1 42 55 4C 42 53 20  6561 	.ascii "BULBS   PCK"
        20 20 50 43 4B
   22DC 00                 6562 	.db 0x00
   22DD                    6563 __str_22:
   22DD 54 57 49 53 54 45  6564 	.ascii "TWISTER PCK"
        52 20 50 43 4B
   22E8 00                 6565 	.db 0x00
   22E9                    6566 __str_23:
   22E9 42 4F 58 45 53 20  6567 	.ascii "BOXES   PCK"
        20 20 50 43 4B
   22F4 00                 6568 	.db 0x00
   22F5                    6569 __str_24:
   22F5 44 53 53 4C 4F 47  6570 	.ascii "DSSLOGO PCK"
        4F 20 50 43 4B
   2300 00                 6571 	.db 0x00
   2301                    6572 __str_25:
   2301 44 53 53 4C 4F 47  6573 	.ascii "DSSLOGO PL5"
        4F 20 50 4C 35
   230C 00                 6574 	.db 0x00
                           6575 	.area _CODE
                           6576 	.area _CABS
